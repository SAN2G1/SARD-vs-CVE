command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	62652	File	data/converged/CVE-2011-4930_htcondor/AviaryCommon_Status.cpp								
ANR	62653	Function	AviaryCommon :: Status :: Status	26:11:705:956							
ANR	62654	FunctionDef	AviaryCommon :: Status :: Status ()		62653	0					
ANR	62655	CompoundStatement		27:8:744:956	62653	0					
ANR	62656	ExpressionStatement	property_Code = NULL	30:16:772:793	62653	0	True				
ANR	62657	AssignmentExpression	property_Code = NULL		62653	0		=			
ANR	62658	Identifier	property_Code		62653	0					
ANR	62659	Identifier	NULL		62653	1					
ANR	62660	ExpressionStatement	isValidCode = false	32:12:822:842	62653	1	True				
ANR	62661	AssignmentExpression	isValidCode = false		62653	0		=			
ANR	62662	Identifier	isValidCode		62653	0					
ANR	62663	Identifier	false		62653	1					
ANR	62664	ExpressionStatement	property_Text	34:20:873:886	62653	2	True				
ANR	62665	Identifier	property_Text		62653	0					
ANR	62666	ExpressionStatement	isValidText = false	36:12:917:937	62653	3	True				
ANR	62667	AssignmentExpression	isValidText = false		62653	0		=			
ANR	62668	Identifier	isValidText		62653	0					
ANR	62669	Identifier	false		62653	1					
ANR	62670	Identifier	AviaryCommon :: Status :: Status		62653	1					
ANR	62671	ParameterList			62653	2					
ANR	62672	CFGEntryNode	ENTRY		62653		True				
ANR	62673	CFGExitNode	EXIT		62653		True				
ANR	62674	Symbol	property_Code		62653						
ANR	62675	Symbol	NULL		62653						
ANR	62676	Symbol	isValidCode		62653						
ANR	62677	Symbol	false		62653						
ANR	62678	Symbol	isValidText		62653						
ANR	62679	Function	AviaryCommon :: Status :: Status	40:7:966:1396							
ANR	62680	FunctionDef	"AviaryCommon :: Status :: Status (AviaryCommon :: StatusCodeType * arg_Code , std :: string arg_Text)"		62679	0					
ANR	62681	CompoundStatement		41:8:1064:1396	62679	0					
ANR	62682	ExpressionStatement	property_Code = NULL	43:15:1095:1116	62679	0	True				
ANR	62683	AssignmentExpression	property_Code = NULL		62679	0		=			
ANR	62684	Identifier	property_Code		62679	0					
ANR	62685	Identifier	NULL		62679	1					
ANR	62686	ExpressionStatement	isValidCode = true	45:12:1144:1163	62679	1	True				
ANR	62687	AssignmentExpression	isValidCode = true		62679	0		=			
ANR	62688	Identifier	isValidCode		62679	0					
ANR	62689	Identifier	true		62679	1					
ANR	62690	ExpressionStatement	property_Text	47:17:1195:1208	62679	2	True				
ANR	62691	Identifier	property_Text		62679	0					
ANR	62692	ExpressionStatement	isValidText = true	49:12:1236:1255	62679	3	True				
ANR	62693	AssignmentExpression	isValidText = true		62679	0		=			
ANR	62694	Identifier	isValidText		62679	0					
ANR	62695	Identifier	true		62679	1					
ANR	62696	ExpressionStatement	property_Code = arg_Code	51:20:1290:1314	62679	4	True				
ANR	62697	AssignmentExpression	property_Code = arg_Code		62679	0		=			
ANR	62698	Identifier	property_Code		62679	0					
ANR	62699	Identifier	arg_Code		62679	1					
ANR	62700	ExpressionStatement	property_Text = arg_Text	53:20:1349:1373	62679	5	True				
ANR	62701	AssignmentExpression	property_Text = arg_Text		62679	0		=			
ANR	62702	Identifier	property_Text		62679	0					
ANR	62703	Identifier	arg_Text		62679	1					
ANR	62704	Identifier	AviaryCommon :: Status :: Status		62679	1					
ANR	62705	ParameterList	"AviaryCommon :: StatusCodeType * arg_Code , std :: string arg_Text"		62679	2					
ANR	62706	Parameter	AviaryCommon :: StatusCodeType * arg_Code	40:36:995:1032	62679	0	True				
ANR	62707	ParameterType	AviaryCommon :: StatusCodeType *		62679	0					
ANR	62708	Identifier	arg_Code		62679	1					
ANR	62709	Parameter	std :: string arg_Text	40:75:1034:1053	62679	1	True				
ANR	62710	ParameterType	std :: string		62679	0					
ANR	62711	Identifier	arg_Text		62679	1					
ANR	62712	CFGEntryNode	ENTRY		62679		True				
ANR	62713	CFGExitNode	EXIT		62679		True				
ANR	62714	Symbol	arg_Code		62679						
ANR	62715	Symbol	property_Code		62679						
ANR	62716	Symbol	NULL		62679						
ANR	62717	Symbol	isValidCode		62679						
ANR	62718	Symbol	true		62679						
ANR	62719	Symbol	property_Text		62679						
ANR	62720	Symbol	arg_Text		62679						
ANR	62721	Symbol	isValidText		62679						
ANR	62722	Function	AviaryCommon :: Status :: ~Status	56:8:1406:1509							
ANR	62723	FunctionDef	AviaryCommon :: Status :: ~Status ()		62722	0					
ANR	62724	CompoundStatement		57:8:1446:1509	62722	0					
ANR	62725	IfStatement	if ( property_Code )		62722	0					
ANR	62726	Condition	property_Code	58:16:1464:1476	62722	0	True				
ANR	62727	Identifier	property_Code		62722	0					
ANR	62728	Statement	delete	58:31:1479:1484	62722	1	True				
ANR	62729	ExpressionStatement	property_Code	58:38:1486:1499	62722	1	True				
ANR	62730	Identifier	property_Code		62722	0					
ANR	62731	Identifier	AviaryCommon :: Status :: ~Status		62722	1					
ANR	62732	ParameterList			62722	2					
ANR	62733	CFGEntryNode	ENTRY		62722		True				
ANR	62734	CFGExitNode	EXIT		62722		True				
ANR	62735	Symbol	property_Code		62722						
ANR	62736	Function	AviaryCommon :: Status :: deserialize	63:8:1530:14755							
ANR	62737	FunctionDef	"AviaryCommon :: Status :: deserialize (axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs)"		62736	0					
ANR	62738	CompoundStatement		65:8:1675:14755	62736	0					
ANR	62739	IdentifierDeclStatement	axiom_node_t * parent = * dp_parent ;	66:10:1687:1720	62736	0	True				
ANR	62740	IdentifierDecl	* parent = * dp_parent		62736	0					
ANR	62741	IdentifierDeclType	axiom_node_t *		62736	0					
ANR	62742	Identifier	parent		62736	1					
ANR	62743	AssignmentExpression	* parent = * dp_parent		62736	2		=			
ANR	62744	Identifier	parent		62736	0					
ANR	62745	UnaryOperationExpression	* dp_parent		62736	1					
ANR	62746	UnaryOperator	*		62736	0					
ANR	62747	Identifier	dp_parent		62736	1					
ANR	62748	IdentifierDeclStatement	bool status = AXIS2_SUCCESS ;	68:10:1743:1770	62736	1	True				
ANR	62749	IdentifierDecl	status = AXIS2_SUCCESS		62736	0					
ANR	62750	IdentifierDeclType	bool		62736	0					
ANR	62751	Identifier	status		62736	1					
ANR	62752	AssignmentExpression	status = AXIS2_SUCCESS		62736	2		=			
ANR	62753	Identifier	AXIS2_SUCCESS		62736	0					
ANR	62754	Identifier	AXIS2_SUCCESS		62736	1					
ANR	62755	IdentifierDeclStatement	const axis2_char_t * text_value = NULL ;	70:9:1793:1830	62736	2	True				
ANR	62756	IdentifierDecl	* text_value = NULL		62736	0					
ANR	62757	IdentifierDeclType	const axis2_char_t *		62736	0					
ANR	62758	Identifier	text_value		62736	1					
ANR	62759	AssignmentExpression	* text_value = NULL		62736	2		=			
ANR	62760	Identifier	NULL		62736	0					
ANR	62761	Identifier	NULL		62736	1					
ANR	62762	IdentifierDeclStatement	axutil_qname_t * mqname = NULL ;	71:9:1841:1870	62736	3	True				
ANR	62763	IdentifierDecl	* mqname = NULL		62736	0					
ANR	62764	IdentifierDeclType	axutil_qname_t *		62736	0					
ANR	62765	Identifier	mqname		62736	1					
ANR	62766	AssignmentExpression	* mqname = NULL		62736	2		=			
ANR	62767	Identifier	NULL		62736	0					
ANR	62768	Identifier	NULL		62736	1					
ANR	62769	IdentifierDeclStatement	axutil_qname_t * element_qname = NULL ;	73:12:1895:1931	62736	4	True				
ANR	62770	IdentifierDecl	* element_qname = NULL		62736	0					
ANR	62771	IdentifierDeclType	axutil_qname_t *		62736	0					
ANR	62772	Identifier	element_qname		62736	1					
ANR	62773	AssignmentExpression	* element_qname = NULL		62736	2		=			
ANR	62774	Identifier	NULL		62736	0					
ANR	62775	Identifier	NULL		62736	1					
ANR	62776	IdentifierDeclStatement	axiom_node_t * first_node = NULL ;	75:15:1962:1993	62736	5	True				
ANR	62777	IdentifierDecl	* first_node = NULL		62736	0					
ANR	62778	IdentifierDeclType	axiom_node_t *		62736	0					
ANR	62779	Identifier	first_node		62736	1					
ANR	62780	AssignmentExpression	* first_node = NULL		62736	2		=			
ANR	62781	Identifier	NULL		62736	0					
ANR	62782	Identifier	NULL		62736	1					
ANR	62783	IdentifierDeclStatement	bool is_early_node_valid = true ;	76:15:2010:2041	62736	6	True				
ANR	62784	IdentifierDecl	is_early_node_valid = true		62736	0					
ANR	62785	IdentifierDeclType	bool		62736	0					
ANR	62786	Identifier	is_early_node_valid		62736	1					
ANR	62787	AssignmentExpression	is_early_node_valid = true		62736	2		=			
ANR	62788	Identifier	true		62736	0					
ANR	62789	Identifier	true		62736	1					
ANR	62790	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	77:15:2058:2091	62736	7	True				
ANR	62791	IdentifierDecl	* current_node = NULL		62736	0					
ANR	62792	IdentifierDeclType	axiom_node_t *		62736	0					
ANR	62793	Identifier	current_node		62736	1					
ANR	62794	AssignmentExpression	* current_node = NULL		62736	2		=			
ANR	62795	Identifier	NULL		62736	0					
ANR	62796	Identifier	NULL		62736	1					
ANR	62797	IdentifierDeclStatement	axiom_element_t * current_element = NULL ;	78:15:2108:2147	62736	8	True				
ANR	62798	IdentifierDecl	* current_element = NULL		62736	0					
ANR	62799	IdentifierDeclType	axiom_element_t *		62736	0					
ANR	62800	Identifier	current_element		62736	1					
ANR	62801	AssignmentExpression	* current_element = NULL		62736	2		=			
ANR	62802	Identifier	NULL		62736	0					
ANR	62803	Identifier	NULL		62736	1					
ANR	62804	WhileStatement	"while ( parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		62736	9					
ANR	62805	Condition	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	81:20:2197:2278	62736	0	True				
ANR	62806	AndExpression	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		62736	0		&&			
ANR	62807	Identifier	parent		62736	0					
ANR	62808	EqualityExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		62736	1		!=			
ANR	62809	CallExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) )"		62736	0					
ANR	62810	Callee	axiom_node_get_node_type		62736	0					
ANR	62811	Identifier	axiom_node_get_node_type		62736	0					
ANR	62812	ArgumentList	parent		62736	1					
ANR	62813	Argument	parent		62736	0					
ANR	62814	Identifier	parent		62736	0					
ANR	62815	Argument	Environment :: getEnv ( )		62736	1					
ANR	62816	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	62817	Callee	Environment :: getEnv		62736	0					
ANR	62818	Identifier	Environment :: getEnv		62736	0					
ANR	62819	ArgumentList			62736	1					
ANR	62820	Identifier	AXIOM_ELEMENT		62736	1					
ANR	62821	CompoundStatement		18:14:619:619	62736	1					
ANR	62822	ExpressionStatement	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"	83:18:2315:2382	62736	0	True				
ANR	62823	AssignmentExpression	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		62736	0		=			
ANR	62824	Identifier	parent		62736	0					
ANR	62825	CallExpression	"axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		62736	1					
ANR	62826	Callee	axiom_node_get_next_sibling		62736	0					
ANR	62827	Identifier	axiom_node_get_next_sibling		62736	0					
ANR	62828	ArgumentList	parent		62736	1					
ANR	62829	Argument	parent		62736	0					
ANR	62830	Identifier	parent		62736	0					
ANR	62831	Argument	Environment :: getEnv ( )		62736	1					
ANR	62832	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	62833	Callee	Environment :: getEnv		62736	0					
ANR	62834	Identifier	Environment :: getEnv		62736	0					
ANR	62835	ArgumentList			62736	1					
ANR	62836	IfStatement	if ( NULL == parent )		62736	10					
ANR	62837	Condition	NULL == parent	85:18:2418:2431	62736	0	True				
ANR	62838	EqualityExpression	NULL == parent		62736	0		==			
ANR	62839	Identifier	NULL		62736	0					
ANR	62840	Identifier	parent		62736	1					
ANR	62841	CompoundStatement		22:14:772:772	62736	1					
ANR	62842	ReturnStatement	return AXIS2_FAILURE ;	87:16:2469:2489	62736	0	True				
ANR	62843	Identifier	AXIS2_FAILURE		62736	0					
ANR	62844	ExpressionStatement	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"	91:22:2567:2637	62736	11	True				
ANR	62845	AssignmentExpression	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		62736	0		=			
ANR	62846	Identifier	first_node		62736	0					
ANR	62847	CallExpression	"axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		62736	1					
ANR	62848	Callee	axiom_node_get_first_child		62736	0					
ANR	62849	Identifier	axiom_node_get_first_child		62736	0					
ANR	62850	ArgumentList	parent		62736	1					
ANR	62851	Argument	parent		62736	0					
ANR	62852	Identifier	parent		62736	0					
ANR	62853	Argument	Environment :: getEnv ( )		62736	1					
ANR	62854	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	62855	Callee	Environment :: getEnv		62736	0					
ANR	62856	Identifier	Environment :: getEnv		62736	0					
ANR	62857	ArgumentList			62736	1					
ANR	62858	ExpressionStatement	current_node = first_node	102:35:2902:2927	62736	12	True				
ANR	62859	AssignmentExpression	current_node = first_node		62736	0		=			
ANR	62860	Identifier	current_node		62736	0					
ANR	62861	Identifier	first_node		62736	1					
ANR	62862	ExpressionStatement	is_early_node_valid = false	103:35:2964:2991	62736	13	True				
ANR	62863	AssignmentExpression	is_early_node_valid = false		62736	0		=			
ANR	62864	Identifier	is_early_node_valid		62736	0					
ANR	62865	Identifier	false		62736	1					
ANR	62866	WhileStatement	"while ( current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		62736	14					
ANR	62867	Condition	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	106:42:3107:3200	62736	0	True				
ANR	62868	AndExpression	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		62736	0		&&			
ANR	62869	Identifier	current_node		62736	0					
ANR	62870	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		62736	1		!=			
ANR	62871	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		62736	0					
ANR	62872	Callee	axiom_node_get_node_type		62736	0					
ANR	62873	Identifier	axiom_node_get_node_type		62736	0					
ANR	62874	ArgumentList	current_node		62736	1					
ANR	62875	Argument	current_node		62736	0					
ANR	62876	Identifier	current_node		62736	0					
ANR	62877	Argument	Environment :: getEnv ( )		62736	1					
ANR	62878	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	62879	Callee	Environment :: getEnv		62736	0					
ANR	62880	Identifier	Environment :: getEnv		62736	0					
ANR	62881	ArgumentList			62736	1					
ANR	62882	Identifier	AXIOM_ELEMENT		62736	1					
ANR	62883	CompoundStatement		43:36:1563:1563	62736	1					
ANR	62884	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	108:40:3281:3360	62736	0	True				
ANR	62885	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		62736	0		=			
ANR	62886	Identifier	current_node		62736	0					
ANR	62887	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		62736	1					
ANR	62888	Callee	axiom_node_get_next_sibling		62736	0					
ANR	62889	Identifier	axiom_node_get_next_sibling		62736	0					
ANR	62890	ArgumentList	current_node		62736	1					
ANR	62891	Argument	current_node		62736	0					
ANR	62892	Identifier	current_node		62736	0					
ANR	62893	Argument	Environment :: getEnv ( )		62736	1					
ANR	62894	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	62895	Callee	Environment :: getEnv		62736	0					
ANR	62896	Identifier	Environment :: getEnv		62736	0					
ANR	62897	ArgumentList			62736	1					
ANR	62898	IfStatement	if ( current_node != NULL )		62736	15					
ANR	62899	Condition	current_node != NULL	110:39:3439:3458	62736	0	True				
ANR	62900	EqualityExpression	current_node != NULL		62736	0		!=			
ANR	62901	Identifier	current_node		62736	0					
ANR	62902	Identifier	NULL		62736	1					
ANR	62903	CompoundStatement		47:36:1821:1821	62736	1					
ANR	62904	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	112:40:3539:3640	62736	0	True				
ANR	62905	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		62736	0		=			
ANR	62906	Identifier	current_element		62736	0					
ANR	62907	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		62736	1					
ANR	62908	CastTarget	axiom_element_t *		62736	0					
ANR	62909	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		62736	1					
ANR	62910	Callee	axiom_node_get_data_element		62736	0					
ANR	62911	Identifier	axiom_node_get_data_element		62736	0					
ANR	62912	ArgumentList	current_node		62736	1					
ANR	62913	Argument	current_node		62736	0					
ANR	62914	Identifier	current_node		62736	0					
ANR	62915	Argument	Environment :: getEnv ( )		62736	1					
ANR	62916	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	62917	Callee	Environment :: getEnv		62736	0					
ANR	62918	Identifier	Environment :: getEnv		62736	0					
ANR	62919	ArgumentList			62736	1					
ANR	62920	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	113:40:3682:3768	62736	1	True				
ANR	62921	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		62736	0		=			
ANR	62922	Identifier	mqname		62736	0					
ANR	62923	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		62736	1					
ANR	62924	Callee	axiom_element_get_qname		62736	0					
ANR	62925	Identifier	axiom_element_get_qname		62736	0					
ANR	62926	ArgumentList	current_element		62736	1					
ANR	62927	Argument	current_element		62736	0					
ANR	62928	Identifier	current_element		62736	0					
ANR	62929	Argument	Environment :: getEnv ( )		62736	1					
ANR	62930	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	62931	Callee	Environment :: getEnv		62736	0					
ANR	62932	Identifier	Environment :: getEnv		62736	0					
ANR	62933	ArgumentList			62736	1					
ANR	62934	Argument	current_node		62736	2					
ANR	62935	Identifier	current_node		62736	0					
ANR	62936	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""code"" , NULL , NULL )"	116:33:3877:3955	62736	16	True				
ANR	62937	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""code"" , NULL , NULL )"		62736	0		=			
ANR	62938	Identifier	element_qname		62736	0					
ANR	62939	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""code"" , NULL , NULL )"		62736	1					
ANR	62940	Callee	axutil_qname_create		62736	0					
ANR	62941	Identifier	axutil_qname_create		62736	0					
ANR	62942	ArgumentList	Environment :: getEnv ( )		62736	1					
ANR	62943	Argument	Environment :: getEnv ( )		62736	0					
ANR	62944	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	62945	Callee	Environment :: getEnv		62736	0					
ANR	62946	Identifier	Environment :: getEnv		62736	0					
ANR	62947	ArgumentList			62736	1					
ANR	62948	Argument	"""code"""		62736	1					
ANR	62949	PrimaryExpression	"""code"""		62736	0					
ANR	62950	Argument	NULL		62736	2					
ANR	62951	Identifier	NULL		62736	0					
ANR	62952	Argument	NULL		62736	3					
ANR	62953	Identifier	NULL		62736	0					
ANR	62954	IfStatement	"if ( isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""code"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) ) )"		62736	17					
ANR	62955	Condition	"isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""code"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"	119:31:4023:4273	62736	0	True				
ANR	62956	OrExpression	"isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""code"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		62736	0		||			
ANR	62957	CallExpression	isParticle ( )		62736	0					
ANR	62958	Callee	isParticle		62736	0					
ANR	62959	Identifier	isParticle		62736	0					
ANR	62960	ArgumentList			62736	1					
ANR	62961	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""code"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		62736	1		&&			
ANR	62962	Identifier	current_node		62736	0					
ANR	62963	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""code"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		62736	1		&&			
ANR	62964	Identifier	current_element		62736	0					
ANR	62965	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""code"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		62736	1		||			
ANR	62966	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		62736	0					
ANR	62967	Callee	axutil_qname_equals		62736	0					
ANR	62968	Identifier	axutil_qname_equals		62736	0					
ANR	62969	ArgumentList	element_qname		62736	1					
ANR	62970	Argument	element_qname		62736	0					
ANR	62971	Identifier	element_qname		62736	0					
ANR	62972	Argument	Environment :: getEnv ( )		62736	1					
ANR	62973	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	62974	Callee	Environment :: getEnv		62736	0					
ANR	62975	Identifier	Environment :: getEnv		62736	0					
ANR	62976	ArgumentList			62736	1					
ANR	62977	Argument	mqname		62736	2					
ANR	62978	Identifier	mqname		62736	0					
ANR	62979	UnaryOperationExpression	"! axutil_strcmp ( ""code"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		62736	1					
ANR	62980	UnaryOperator	!		62736	0					
ANR	62981	CallExpression	"axutil_strcmp ( ""code"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		62736	1					
ANR	62982	Callee	axutil_strcmp		62736	0					
ANR	62983	Identifier	axutil_strcmp		62736	0					
ANR	62984	ArgumentList	"""code"""		62736	1					
ANR	62985	Argument	"""code"""		62736	0					
ANR	62986	PrimaryExpression	"""code"""		62736	0					
ANR	62987	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		62736	1					
ANR	62988	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		62736	0					
ANR	62989	Callee	axiom_element_get_localname		62736	0					
ANR	62990	Identifier	axiom_element_get_localname		62736	0					
ANR	62991	ArgumentList	current_element		62736	1					
ANR	62992	Argument	current_element		62736	0					
ANR	62993	Identifier	current_element		62736	0					
ANR	62994	Argument	Environment :: getEnv ( )		62736	1					
ANR	62995	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	62996	Callee	Environment :: getEnv		62736	0					
ANR	62997	Identifier	Environment :: getEnv		62736	0					
ANR	62998	ArgumentList			62736	1					
ANR	62999	CompoundStatement		63:33:3052:3126	62736	1					
ANR	63000	IfStatement	"if ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""code"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		62736	0					
ANR	63001	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""code"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	122:34:4339:4537	62736	0	True				
ANR	63002	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""code"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		62736	0		&&			
ANR	63003	Identifier	current_node		62736	0					
ANR	63004	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""code"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		62736	1		&&			
ANR	63005	Identifier	current_element		62736	0					
ANR	63006	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""code"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		62736	1		||			
ANR	63007	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		62736	0					
ANR	63008	Callee	axutil_qname_equals		62736	0					
ANR	63009	Identifier	axutil_qname_equals		62736	0					
ANR	63010	ArgumentList	element_qname		62736	1					
ANR	63011	Argument	element_qname		62736	0					
ANR	63012	Identifier	element_qname		62736	0					
ANR	63013	Argument	Environment :: getEnv ( )		62736	1					
ANR	63014	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63015	Callee	Environment :: getEnv		62736	0					
ANR	63016	Identifier	Environment :: getEnv		62736	0					
ANR	63017	ArgumentList			62736	1					
ANR	63018	Argument	mqname		62736	2					
ANR	63019	Identifier	mqname		62736	0					
ANR	63020	UnaryOperationExpression	"! axutil_strcmp ( ""code"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		62736	1					
ANR	63021	UnaryOperator	!		62736	0					
ANR	63022	CallExpression	"axutil_strcmp ( ""code"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		62736	1					
ANR	63023	Callee	axutil_strcmp		62736	0					
ANR	63024	Identifier	axutil_strcmp		62736	0					
ANR	63025	ArgumentList	"""code"""		62736	1					
ANR	63026	Argument	"""code"""		62736	0					
ANR	63027	PrimaryExpression	"""code"""		62736	0					
ANR	63028	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		62736	1					
ANR	63029	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		62736	0					
ANR	63030	Callee	axiom_element_get_localname		62736	0					
ANR	63031	Identifier	axiom_element_get_localname		62736	0					
ANR	63032	ArgumentList	current_element		62736	1					
ANR	63033	Argument	current_element		62736	0					
ANR	63034	Identifier	current_element		62736	0					
ANR	63035	Argument	Environment :: getEnv ( )		62736	1					
ANR	63036	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63037	Callee	Environment :: getEnv		62736	0					
ANR	63038	Identifier	Environment :: getEnv		62736	0					
ANR	63039	ArgumentList			62736	1					
ANR	63040	CompoundStatement		59:30:2894:2894	62736	1					
ANR	63041	ExpressionStatement	is_early_node_valid = true	124:32:4604:4630	62736	0	True				
ANR	63042	AssignmentExpression	is_early_node_valid = true		62736	0		=			
ANR	63043	Identifier	is_early_node_valid		62736	0					
ANR	63044	Identifier	true		62736	1					
ANR	63045	IdentifierDeclStatement	AviaryCommon :: StatusCodeType * element = new AviaryCommon :: StatusCodeType ( ) ;	127:33:4728:4802	62736	1	True				
ANR	63046	IdentifierDecl	* element = new AviaryCommon :: StatusCodeType ( )		62736	0					
ANR	63047	IdentifierDeclType	AviaryCommon :: StatusCodeType *		62736	0					
ANR	63048	Identifier	element		62736	1					
ANR	63049	AssignmentExpression	* element = new AviaryCommon :: StatusCodeType ( )		62736	2		=			
ANR	63050	Identifier	element		62736	0					
ANR	63051	UnaryExpression	new AviaryCommon :: StatusCodeType ( )		62736	1					
ANR	63052	ExpressionStatement	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"	129:38:4843:4917	62736	2	True				
ANR	63053	AssignmentExpression	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"		62736	0		=			
ANR	63054	Identifier	status		62736	0					
ANR	63055	CallExpression	"element -> deserialize ( & current_node , & is_early_node_valid , false )"		62736	1					
ANR	63056	Callee	element -> deserialize		62736	0					
ANR	63057	PtrMemberAccess	element -> deserialize		62736	0					
ANR	63058	Identifier	element		62736	0					
ANR	63059	Identifier	deserialize		62736	1					
ANR	63060	ArgumentList	& current_node		62736	1					
ANR	63061	Argument	& current_node		62736	0					
ANR	63062	UnaryOperationExpression	& current_node		62736	0					
ANR	63063	UnaryOperator	&		62736	0					
ANR	63064	Identifier	current_node		62736	1					
ANR	63065	Argument	& is_early_node_valid		62736	1					
ANR	63066	UnaryOperationExpression	& is_early_node_valid		62736	0					
ANR	63067	UnaryOperator	&		62736	0					
ANR	63068	Identifier	is_early_node_valid		62736	1					
ANR	63069	Argument	false		62736	2					
ANR	63070	Identifier	false		62736	0					
ANR	63071	IfStatement	if ( AXIS2_FAILURE == status )		62736	3					
ANR	63072	Condition	AXIS2_FAILURE == status	130:41:4960:4982	62736	0	True				
ANR	63073	EqualityExpression	AXIS2_FAILURE == status		62736	0		==			
ANR	63074	Identifier	AXIS2_FAILURE		62736	0					
ANR	63075	Identifier	status		62736	1					
ANR	63076	CompoundStatement		67:38:3347:3347	62736	1					
ANR	63077	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building adb object for element code"" )"	132:42:5067:5174	62736	0	True				
ANR	63078	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building adb object for element code"" )"		62736	0					
ANR	63079	Callee	WSF_LOG_ERROR_MSG		62736	0					
ANR	63080	Identifier	WSF_LOG_ERROR_MSG		62736	0					
ANR	63081	ArgumentList	Environment :: getEnv ( ) -> log		62736	1					
ANR	63082	Argument	Environment :: getEnv ( ) -> log		62736	0					
ANR	63083	PtrMemberAccess	Environment :: getEnv ( ) -> log		62736	0					
ANR	63084	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63085	Callee	Environment :: getEnv		62736	0					
ANR	63086	Identifier	Environment :: getEnv		62736	0					
ANR	63087	ArgumentList			62736	1					
ANR	63088	Identifier	log		62736	1					
ANR	63089	Argument	WSF_LOG_SI		62736	1					
ANR	63090	Identifier	WSF_LOG_SI		62736	0					
ANR	63091	Argument	"""failed in building adb object for element code"""		62736	2					
ANR	63092	PrimaryExpression	"""failed in building adb object for element code"""		62736	0					
ANR	63093	ElseStatement	else		62736	0					
ANR	63094	CompoundStatement		71:38:3621:3621	62736	0					
ANR	63095	ExpressionStatement	status = setCode ( element )	136:42:5341:5366	62736	0	True				
ANR	63096	AssignmentExpression	status = setCode ( element )		62736	0		=			
ANR	63097	Identifier	status		62736	0					
ANR	63098	CallExpression	setCode ( element )		62736	1					
ANR	63099	Callee	setCode		62736	0					
ANR	63100	Identifier	setCode		62736	0					
ANR	63101	ArgumentList	element		62736	1					
ANR	63102	Argument	element		62736	0					
ANR	63103	Identifier	element		62736	0					
ANR	63104	IfStatement	if ( AXIS2_FAILURE == status )		62736	4					
ANR	63105	Condition	AXIS2_FAILURE == status	139:36:5481:5504	62736	0	True				
ANR	63106	EqualityExpression	AXIS2_FAILURE == status		62736	0		==			
ANR	63107	Identifier	AXIS2_FAILURE		62736	0					
ANR	63108	Identifier	status		62736	1					
ANR	63109	CompoundStatement		76:33:3864:3864	62736	1					
ANR	63110	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for code "" )"	141:37:5579:5676	62736	0	True				
ANR	63111	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for code "" )"		62736	0					
ANR	63112	Callee	WSF_LOG_ERROR_MSG		62736	0					
ANR	63113	Identifier	WSF_LOG_ERROR_MSG		62736	0					
ANR	63114	ArgumentList	Environment :: getEnv ( ) -> log		62736	1					
ANR	63115	Argument	Environment :: getEnv ( ) -> log		62736	0					
ANR	63116	PtrMemberAccess	Environment :: getEnv ( ) -> log		62736	0					
ANR	63117	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63118	Callee	Environment :: getEnv		62736	0					
ANR	63119	Identifier	Environment :: getEnv		62736	0					
ANR	63120	ArgumentList			62736	1					
ANR	63121	Identifier	log		62736	1					
ANR	63122	Argument	WSF_LOG_SI		62736	1					
ANR	63123	Identifier	WSF_LOG_SI		62736	0					
ANR	63124	Argument	"""failed in setting the value for code """		62736	2					
ANR	63125	PrimaryExpression	"""failed in setting the value for code """		62736	0					
ANR	63126	IfStatement	if ( element_qname )		62736	1					
ANR	63127	Condition	element_qname	142:40:5718:5730	62736	0	True				
ANR	63128	Identifier	element_qname		62736	0					
ANR	63129	CompoundStatement		79:37:4094:4094	62736	1					
ANR	63130	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	144:41:5813:5868	62736	0	True				
ANR	63131	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		62736	0					
ANR	63132	Callee	axutil_qname_free		62736	0					
ANR	63133	Identifier	axutil_qname_free		62736	0					
ANR	63134	ArgumentList	element_qname		62736	1					
ANR	63135	Argument	element_qname		62736	0					
ANR	63136	Identifier	element_qname		62736	0					
ANR	63137	Argument	Environment :: getEnv ( )		62736	1					
ANR	63138	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63139	Callee	Environment :: getEnv		62736	0					
ANR	63140	Identifier	Environment :: getEnv		62736	0					
ANR	63141	ArgumentList			62736	1					
ANR	63142	ReturnStatement	return AXIS2_FAILURE ;	146:37:5946:5966	62736	2	True				
ANR	63143	Identifier	AXIS2_FAILURE		62736	0					
ANR	63144	ElseStatement	else		62736	0					
ANR	63145	IfStatement	if ( ! dont_care_minoccurs )		62736	0					
ANR	63146	Condition	! dont_care_minoccurs	150:38:6101:6120	62736	0	True				
ANR	63147	UnaryOperationExpression	! dont_care_minoccurs		62736	0					
ANR	63148	UnaryOperator	!		62736	0					
ANR	63149	Identifier	dont_care_minoccurs		62736	1					
ANR	63150	CompoundStatement		87:30:4477:4477	62736	1					
ANR	63151	IfStatement	if ( element_qname )		62736	0					
ANR	63152	Condition	element_qname	152:37:6192:6204	62736	0	True				
ANR	63153	Identifier	element_qname		62736	0					
ANR	63154	CompoundStatement		89:34:4565:4565	62736	1					
ANR	63155	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	154:38:6281:6336	62736	0	True				
ANR	63156	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		62736	0					
ANR	63157	Callee	axutil_qname_free		62736	0					
ANR	63158	Identifier	axutil_qname_free		62736	0					
ANR	63159	ArgumentList	element_qname		62736	1					
ANR	63160	Argument	element_qname		62736	0					
ANR	63161	Identifier	element_qname		62736	0					
ANR	63162	Argument	Environment :: getEnv ( )		62736	1					
ANR	63163	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63164	Callee	Environment :: getEnv		62736	0					
ANR	63165	Identifier	Environment :: getEnv		62736	0					
ANR	63166	ArgumentList			62736	1					
ANR	63167	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element code missing"" )"	157:6:6450:6561	62736	1	True				
ANR	63168	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element code missing"" )"		62736	0					
ANR	63169	Callee	WSF_LOG_ERROR_MSG		62736	0					
ANR	63170	Identifier	WSF_LOG_ERROR_MSG		62736	0					
ANR	63171	ArgumentList	Environment :: getEnv ( ) -> log		62736	1					
ANR	63172	Argument	Environment :: getEnv ( ) -> log		62736	0					
ANR	63173	PtrMemberAccess	Environment :: getEnv ( ) -> log		62736	0					
ANR	63174	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63175	Callee	Environment :: getEnv		62736	0					
ANR	63176	Identifier	Environment :: getEnv		62736	0					
ANR	63177	ArgumentList			62736	1					
ANR	63178	Identifier	log		62736	1					
ANR	63179	Argument	WSF_LOG_SI		62736	1					
ANR	63180	Identifier	WSF_LOG_SI		62736	0					
ANR	63181	Argument	"""non nillable or minOuccrs != 0 element code missing"""		62736	2					
ANR	63182	PrimaryExpression	"""non nillable or minOuccrs != 0 element code missing"""		62736	0					
ANR	63183	ReturnStatement	return AXIS2_FAILURE ;	158:34:6597:6617	62736	2	True				
ANR	63184	Identifier	AXIS2_FAILURE		62736	0					
ANR	63185	IfStatement	if ( element_qname )		62736	18					
ANR	63186	Condition	element_qname	161:21:6700:6712	62736	0	True				
ANR	63187	Identifier	element_qname		62736	0					
ANR	63188	CompoundStatement		98:18:5057:5057	62736	1					
ANR	63189	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	163:21:6756:6811	62736	0	True				
ANR	63190	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		62736	0					
ANR	63191	Callee	axutil_qname_free		62736	0					
ANR	63192	Identifier	axutil_qname_free		62736	0					
ANR	63193	ArgumentList	element_qname		62736	1					
ANR	63194	Argument	element_qname		62736	0					
ANR	63195	Identifier	element_qname		62736	0					
ANR	63196	Argument	Environment :: getEnv ( )		62736	1					
ANR	63197	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63198	Callee	Environment :: getEnv		62736	0					
ANR	63199	Identifier	Environment :: getEnv		62736	0					
ANR	63200	ArgumentList			62736	1					
ANR	63201	ExpressionStatement	element_qname = NULL	164:21:6834:6854	62736	1	True				
ANR	63202	AssignmentExpression	element_qname = NULL		62736	0		=			
ANR	63203	Identifier	element_qname		62736	0					
ANR	63204	Identifier	NULL		62736	1					
ANR	63205	IfStatement	if ( current_node != NULL && is_early_node_valid )		62736	19					
ANR	63206	Condition	current_node != NULL && is_early_node_valid	180:38:7350:7392	62736	0	True				
ANR	63207	AndExpression	current_node != NULL && is_early_node_valid		62736	0		&&			
ANR	63208	EqualityExpression	current_node != NULL		62736	0		!=			
ANR	63209	Identifier	current_node		62736	0					
ANR	63210	Identifier	NULL		62736	1					
ANR	63211	Identifier	is_early_node_valid		62736	1					
ANR	63212	CompoundStatement		117:35:5754:5754	62736	1					
ANR	63213	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	182:39:7471:7550	62736	0	True				
ANR	63214	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		62736	0		=			
ANR	63215	Identifier	current_node		62736	0					
ANR	63216	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		62736	1					
ANR	63217	Callee	axiom_node_get_next_sibling		62736	0					
ANR	63218	Identifier	axiom_node_get_next_sibling		62736	0					
ANR	63219	ArgumentList	current_node		62736	1					
ANR	63220	Argument	current_node		62736	0					
ANR	63221	Identifier	current_node		62736	0					
ANR	63222	Argument	Environment :: getEnv ( )		62736	1					
ANR	63223	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63224	Callee	Environment :: getEnv		62736	0					
ANR	63225	Identifier	Environment :: getEnv		62736	0					
ANR	63226	ArgumentList			62736	1					
ANR	63227	WhileStatement	"while ( current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		62736	1					
ANR	63228	Condition	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	185:46:7678:7771	62736	0	True				
ANR	63229	AndExpression	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		62736	0		&&			
ANR	63230	Identifier	current_node		62736	0					
ANR	63231	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		62736	1		!=			
ANR	63232	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		62736	0					
ANR	63233	Callee	axiom_node_get_node_type		62736	0					
ANR	63234	Identifier	axiom_node_get_node_type		62736	0					
ANR	63235	ArgumentList	current_node		62736	1					
ANR	63236	Argument	current_node		62736	0					
ANR	63237	Identifier	current_node		62736	0					
ANR	63238	Argument	Environment :: getEnv ( )		62736	1					
ANR	63239	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63240	Callee	Environment :: getEnv		62736	0					
ANR	63241	Identifier	Environment :: getEnv		62736	0					
ANR	63242	ArgumentList			62736	1					
ANR	63243	Identifier	AXIOM_ELEMENT		62736	1					
ANR	63244	CompoundStatement		122:40:6138:6138	62736	1					
ANR	63245	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	187:44:7860:7939	62736	0	True				
ANR	63246	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		62736	0		=			
ANR	63247	Identifier	current_node		62736	0					
ANR	63248	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		62736	1					
ANR	63249	Callee	axiom_node_get_next_sibling		62736	0					
ANR	63250	Identifier	axiom_node_get_next_sibling		62736	0					
ANR	63251	ArgumentList	current_node		62736	1					
ANR	63252	Argument	current_node		62736	0					
ANR	63253	Identifier	current_node		62736	0					
ANR	63254	Argument	Environment :: getEnv ( )		62736	1					
ANR	63255	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63256	Callee	Environment :: getEnv		62736	0					
ANR	63257	Identifier	Environment :: getEnv		62736	0					
ANR	63258	ArgumentList			62736	1					
ANR	63259	IfStatement	if ( current_node != NULL )		62736	2					
ANR	63260	Condition	current_node != NULL	189:43:8026:8045	62736	0	True				
ANR	63261	EqualityExpression	current_node != NULL		62736	0		!=			
ANR	63262	Identifier	current_node		62736	0					
ANR	63263	Identifier	NULL		62736	1					
ANR	63264	CompoundStatement		126:40:6412:6412	62736	1					
ANR	63265	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	191:44:8134:8235	62736	0	True				
ANR	63266	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		62736	0		=			
ANR	63267	Identifier	current_element		62736	0					
ANR	63268	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		62736	1					
ANR	63269	CastTarget	axiom_element_t *		62736	0					
ANR	63270	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		62736	1					
ANR	63271	Callee	axiom_node_get_data_element		62736	0					
ANR	63272	Identifier	axiom_node_get_data_element		62736	0					
ANR	63273	ArgumentList	current_node		62736	1					
ANR	63274	Argument	current_node		62736	0					
ANR	63275	Identifier	current_node		62736	0					
ANR	63276	Argument	Environment :: getEnv ( )		62736	1					
ANR	63277	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63278	Callee	Environment :: getEnv		62736	0					
ANR	63279	Identifier	Environment :: getEnv		62736	0					
ANR	63280	ArgumentList			62736	1					
ANR	63281	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	192:44:8281:8367	62736	1	True				
ANR	63282	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		62736	0		=			
ANR	63283	Identifier	mqname		62736	0					
ANR	63284	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		62736	1					
ANR	63285	Callee	axiom_element_get_qname		62736	0					
ANR	63286	Identifier	axiom_element_get_qname		62736	0					
ANR	63287	ArgumentList	current_element		62736	1					
ANR	63288	Argument	current_element		62736	0					
ANR	63289	Identifier	current_element		62736	0					
ANR	63290	Argument	Environment :: getEnv ( )		62736	1					
ANR	63291	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63292	Callee	Environment :: getEnv		62736	0					
ANR	63293	Identifier	Environment :: getEnv		62736	0					
ANR	63294	ArgumentList			62736	1					
ANR	63295	Argument	current_node		62736	2					
ANR	63296	Identifier	current_node		62736	0					
ANR	63297	ExpressionStatement	is_early_node_valid = false	196:35:8523:8550	62736	20	True				
ANR	63298	AssignmentExpression	is_early_node_valid = false		62736	0		=			
ANR	63299	Identifier	is_early_node_valid		62736	0					
ANR	63300	Identifier	false		62736	1					
ANR	63301	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""text"" , NULL , NULL )"	198:33:8619:8697	62736	21	True				
ANR	63302	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""text"" , NULL , NULL )"		62736	0		=			
ANR	63303	Identifier	element_qname		62736	0					
ANR	63304	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""text"" , NULL , NULL )"		62736	1					
ANR	63305	Callee	axutil_qname_create		62736	0					
ANR	63306	Identifier	axutil_qname_create		62736	0					
ANR	63307	ArgumentList	Environment :: getEnv ( )		62736	1					
ANR	63308	Argument	Environment :: getEnv ( )		62736	0					
ANR	63309	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63310	Callee	Environment :: getEnv		62736	0					
ANR	63311	Identifier	Environment :: getEnv		62736	0					
ANR	63312	ArgumentList			62736	1					
ANR	63313	Argument	"""text"""		62736	1					
ANR	63314	PrimaryExpression	"""text"""		62736	0					
ANR	63315	Argument	NULL		62736	2					
ANR	63316	Identifier	NULL		62736	0					
ANR	63317	Argument	NULL		62736	3					
ANR	63318	Identifier	NULL		62736	0					
ANR	63319	IfStatement	"if ( ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""text"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) ) )"		62736	22					
ANR	63320	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""text"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	202:32:8799:8999	62736	0	True				
ANR	63321	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""text"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		62736	0		&&			
ANR	63322	Identifier	current_node		62736	0					
ANR	63323	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""text"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		62736	1		&&			
ANR	63324	Identifier	current_element		62736	0					
ANR	63325	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""text"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		62736	1		||			
ANR	63326	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		62736	0					
ANR	63327	Callee	axutil_qname_equals		62736	0					
ANR	63328	Identifier	axutil_qname_equals		62736	0					
ANR	63329	ArgumentList	element_qname		62736	1					
ANR	63330	Argument	element_qname		62736	0					
ANR	63331	Identifier	element_qname		62736	0					
ANR	63332	Argument	Environment :: getEnv ( )		62736	1					
ANR	63333	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63334	Callee	Environment :: getEnv		62736	0					
ANR	63335	Identifier	Environment :: getEnv		62736	0					
ANR	63336	ArgumentList			62736	1					
ANR	63337	Argument	mqname		62736	2					
ANR	63338	Identifier	mqname		62736	0					
ANR	63339	UnaryOperationExpression	"! axutil_strcmp ( ""text"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		62736	1					
ANR	63340	UnaryOperator	!		62736	0					
ANR	63341	CallExpression	"axutil_strcmp ( ""text"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		62736	1					
ANR	63342	Callee	axutil_strcmp		62736	0					
ANR	63343	Identifier	axutil_strcmp		62736	0					
ANR	63344	ArgumentList	"""text"""		62736	1					
ANR	63345	Argument	"""text"""		62736	0					
ANR	63346	PrimaryExpression	"""text"""		62736	0					
ANR	63347	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		62736	1					
ANR	63348	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		62736	0					
ANR	63349	Callee	axiom_element_get_localname		62736	0					
ANR	63350	Identifier	axiom_element_get_localname		62736	0					
ANR	63351	ArgumentList	current_element		62736	1					
ANR	63352	Argument	current_element		62736	0					
ANR	63353	Identifier	current_element		62736	0					
ANR	63354	Argument	Environment :: getEnv ( )		62736	1					
ANR	63355	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63356	Callee	Environment :: getEnv		62736	0					
ANR	63357	Identifier	Environment :: getEnv		62736	0					
ANR	63358	ArgumentList			62736	1					
ANR	63359	CompoundStatement		139:27:7353:7353	62736	1					
ANR	63360	IfStatement	"if ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""text"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		62736	0					
ANR	63361	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""text"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	204:34:9065:9263	62736	0	True				
ANR	63362	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""text"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		62736	0		&&			
ANR	63363	Identifier	current_node		62736	0					
ANR	63364	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""text"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		62736	1		&&			
ANR	63365	Identifier	current_element		62736	0					
ANR	63366	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""text"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		62736	1		||			
ANR	63367	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		62736	0					
ANR	63368	Callee	axutil_qname_equals		62736	0					
ANR	63369	Identifier	axutil_qname_equals		62736	0					
ANR	63370	ArgumentList	element_qname		62736	1					
ANR	63371	Argument	element_qname		62736	0					
ANR	63372	Identifier	element_qname		62736	0					
ANR	63373	Argument	Environment :: getEnv ( )		62736	1					
ANR	63374	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63375	Callee	Environment :: getEnv		62736	0					
ANR	63376	Identifier	Environment :: getEnv		62736	0					
ANR	63377	ArgumentList			62736	1					
ANR	63378	Argument	mqname		62736	2					
ANR	63379	Identifier	mqname		62736	0					
ANR	63380	UnaryOperationExpression	"! axutil_strcmp ( ""text"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		62736	1					
ANR	63381	UnaryOperator	!		62736	0					
ANR	63382	CallExpression	"axutil_strcmp ( ""text"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		62736	1					
ANR	63383	Callee	axutil_strcmp		62736	0					
ANR	63384	Identifier	axutil_strcmp		62736	0					
ANR	63385	ArgumentList	"""text"""		62736	1					
ANR	63386	Argument	"""text"""		62736	0					
ANR	63387	PrimaryExpression	"""text"""		62736	0					
ANR	63388	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		62736	1					
ANR	63389	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		62736	0					
ANR	63390	Callee	axiom_element_get_localname		62736	0					
ANR	63391	Identifier	axiom_element_get_localname		62736	0					
ANR	63392	ArgumentList	current_element		62736	1					
ANR	63393	Argument	current_element		62736	0					
ANR	63394	Identifier	current_element		62736	0					
ANR	63395	Argument	Environment :: getEnv ( )		62736	1					
ANR	63396	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63397	Callee	Environment :: getEnv		62736	0					
ANR	63398	Identifier	Environment :: getEnv		62736	0					
ANR	63399	ArgumentList			62736	1					
ANR	63400	CompoundStatement		141:30:7620:7620	62736	1					
ANR	63401	ExpressionStatement	is_early_node_valid = true	206:32:9330:9356	62736	0	True				
ANR	63402	AssignmentExpression	is_early_node_valid = true		62736	0		=			
ANR	63403	Identifier	is_early_node_valid		62736	0					
ANR	63404	Identifier	true		62736	1					
ANR	63405	ExpressionStatement	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"	210:38:9493:9582	62736	1	True				
ANR	63406	AssignmentExpression	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		62736	0		=			
ANR	63407	Identifier	text_value		62736	0					
ANR	63408	CallExpression	"axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		62736	1					
ANR	63409	Callee	axiom_element_get_text		62736	0					
ANR	63410	Identifier	axiom_element_get_text		62736	0					
ANR	63411	ArgumentList	current_element		62736	1					
ANR	63412	Argument	current_element		62736	0					
ANR	63413	Identifier	current_element		62736	0					
ANR	63414	Argument	Environment :: getEnv ( )		62736	1					
ANR	63415	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63416	Callee	Environment :: getEnv		62736	0					
ANR	63417	Identifier	Environment :: getEnv		62736	0					
ANR	63418	ArgumentList			62736	1					
ANR	63419	Argument	current_node		62736	2					
ANR	63420	Identifier	current_node		62736	0					
ANR	63421	IfStatement	if ( text_value != NULL )		62736	2					
ANR	63422	Condition	text_value != NULL	211:41:9625:9642	62736	0	True				
ANR	63423	EqualityExpression	text_value != NULL		62736	0		!=			
ANR	63424	Identifier	text_value		62736	0					
ANR	63425	Identifier	NULL		62736	1					
ANR	63426	CompoundStatement		148:38:8007:8007	62736	1					
ANR	63427	ExpressionStatement	status = setText ( text_value )	213:44:9729:9757	62736	0	True				
ANR	63428	AssignmentExpression	status = setText ( text_value )		62736	0		=			
ANR	63429	Identifier	status		62736	0					
ANR	63430	CallExpression	setText ( text_value )		62736	1					
ANR	63431	Callee	setText		62736	0					
ANR	63432	Identifier	setText		62736	0					
ANR	63433	ArgumentList	text_value		62736	1					
ANR	63434	Argument	text_value		62736	0					
ANR	63435	Identifier	text_value		62736	0					
ANR	63436	ElseStatement	else		62736	0					
ANR	63437	CompoundStatement		165:44:9191:9227	62736	0					
ANR	63438	IdentifierDeclStatement	axiom_attribute_t * the_attri = NULL ;	227:44:10708:10743	62736	0	True				
ANR	63439	IdentifierDecl	* the_attri = NULL		62736	0					
ANR	63440	IdentifierDeclType	axiom_attribute_t *		62736	0					
ANR	63441	Identifier	the_attri		62736	1					
ANR	63442	AssignmentExpression	* the_attri = NULL		62736	2		=			
ANR	63443	Identifier	NULL		62736	0					
ANR	63444	Identifier	NULL		62736	1					
ANR	63445	IdentifierDeclStatement	axis2_char_t * attrib_text = NULL ;	228:44:10789:10821	62736	1	True				
ANR	63446	IdentifierDecl	* attrib_text = NULL		62736	0					
ANR	63447	IdentifierDeclType	axis2_char_t *		62736	0					
ANR	63448	Identifier	attrib_text		62736	1					
ANR	63449	AssignmentExpression	* attrib_text = NULL		62736	2		=			
ANR	63450	Identifier	NULL		62736	0					
ANR	63451	Identifier	NULL		62736	1					
ANR	63452	IdentifierDeclStatement	axutil_hash_t * attribute_hash = NULL ;	229:44:10867:10903	62736	2	True				
ANR	63453	IdentifierDecl	* attribute_hash = NULL		62736	0					
ANR	63454	IdentifierDeclType	axutil_hash_t *		62736	0					
ANR	63455	Identifier	attribute_hash		62736	1					
ANR	63456	AssignmentExpression	* attribute_hash = NULL		62736	2		=			
ANR	63457	Identifier	NULL		62736	0					
ANR	63458	Identifier	NULL		62736	1					
ANR	63459	ExpressionStatement	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"	231:44:10950:11039	62736	3	True				
ANR	63460	AssignmentExpression	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		62736	0		=			
ANR	63461	Identifier	attribute_hash		62736	0					
ANR	63462	CallExpression	"axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		62736	1					
ANR	63463	Callee	axiom_element_get_all_attributes		62736	0					
ANR	63464	Identifier	axiom_element_get_all_attributes		62736	0					
ANR	63465	ArgumentList	current_element		62736	1					
ANR	63466	Argument	current_element		62736	0					
ANR	63467	Identifier	current_element		62736	0					
ANR	63468	Argument	Environment :: getEnv ( )		62736	1					
ANR	63469	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63470	Callee	Environment :: getEnv		62736	0					
ANR	63471	Identifier	Environment :: getEnv		62736	0					
ANR	63472	ArgumentList			62736	1					
ANR	63473	ExpressionStatement	attrib_text = NULL	233:44:11086:11104	62736	4	True				
ANR	63474	AssignmentExpression	attrib_text = NULL		62736	0		=			
ANR	63475	Identifier	attrib_text		62736	0					
ANR	63476	Identifier	NULL		62736	1					
ANR	63477	IfStatement	if ( attribute_hash )		62736	5					
ANR	63478	Condition	attribute_hash	234:47:11153:11166	62736	0	True				
ANR	63479	Identifier	attribute_hash		62736	0					
ANR	63480	CompoundStatement		174:49:9722:9737	62736	1					
ANR	63481	IdentifierDeclStatement	axutil_hash_index_t * hi ;	236:49:11264:11287	62736	0	True				
ANR	63482	IdentifierDecl	* hi		62736	0					
ANR	63483	IdentifierDeclType	axutil_hash_index_t *		62736	0					
ANR	63484	Identifier	hi		62736	1					
ANR	63485	IdentifierDeclStatement	void * val ;	237:49:11338:11347	62736	1	True				
ANR	63486	IdentifierDecl	* val		62736	0					
ANR	63487	IdentifierDeclType	void *		62736	0					
ANR	63488	Identifier	val		62736	1					
ANR	63489	IdentifierDeclStatement	const void * key ;	238:49:11398:11413	62736	2	True				
ANR	63490	IdentifierDecl	* key		62736	0					
ANR	63491	IdentifierDeclType	const void *		62736	0					
ANR	63492	Identifier	key		62736	1					
ANR	63493	ForStatement	"for ( hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		62736	3					
ANR	63494	ForInit	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ;"	240:54:11510:11571	62736	0	True				
ANR	63495	AssignmentExpression	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		62736	0		=			
ANR	63496	Identifier	hi		62736	0					
ANR	63497	CallExpression	"axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		62736	1					
ANR	63498	Callee	axutil_hash_first		62736	0					
ANR	63499	Identifier	axutil_hash_first		62736	0					
ANR	63500	ArgumentList	attribute_hash		62736	1					
ANR	63501	Argument	attribute_hash		62736	0					
ANR	63502	Identifier	attribute_hash		62736	0					
ANR	63503	Argument	Environment :: getEnv ( )		62736	1					
ANR	63504	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63505	Callee	Environment :: getEnv		62736	0					
ANR	63506	Identifier	Environment :: getEnv		62736	0					
ANR	63507	ArgumentList			62736	1					
ANR	63508	Condition	hi	240:117:11573:11574	62736	1	True				
ANR	63509	Identifier	hi		62736	0					
ANR	63510	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	240:121:11577:11624	62736	2	True	=			
ANR	63511	Identifier	hi		62736	0					
ANR	63512	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		62736	1					
ANR	63513	Callee	axutil_hash_next		62736	0					
ANR	63514	Identifier	axutil_hash_next		62736	0					
ANR	63515	ArgumentList	Environment :: getEnv ( )		62736	1					
ANR	63516	Argument	Environment :: getEnv ( )		62736	0					
ANR	63517	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63518	Callee	Environment :: getEnv		62736	0					
ANR	63519	Identifier	Environment :: getEnv		62736	0					
ANR	63520	ArgumentList			62736	1					
ANR	63521	Argument	hi		62736	1					
ANR	63522	Identifier	hi		62736	0					
ANR	63523	CompoundStatement		177:49:10000:10000	62736	3					
ANR	63524	ExpressionStatement	"axutil_hash_this ( hi , & key , NULL , & val )"	242:53:11731:11769	62736	0	True				
ANR	63525	CallExpression	"axutil_hash_this ( hi , & key , NULL , & val )"		62736	0					
ANR	63526	Callee	axutil_hash_this		62736	0					
ANR	63527	Identifier	axutil_hash_this		62736	0					
ANR	63528	ArgumentList	hi		62736	1					
ANR	63529	Argument	hi		62736	0					
ANR	63530	Identifier	hi		62736	0					
ANR	63531	Argument	& key		62736	1					
ANR	63532	UnaryOperationExpression	& key		62736	0					
ANR	63533	UnaryOperator	&		62736	0					
ANR	63534	Identifier	key		62736	1					
ANR	63535	Argument	NULL		62736	2					
ANR	63536	Identifier	NULL		62736	0					
ANR	63537	Argument	& val		62736	3					
ANR	63538	UnaryOperationExpression	& val		62736	0					
ANR	63539	UnaryOperator	&		62736	0					
ANR	63540	Identifier	val		62736	1					
ANR	63541	IfStatement	"if ( strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" ) )"		62736	1					
ANR	63542	Condition	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"	244:56:11881:11955	62736	0	True				
ANR	63543	CallExpression	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"		62736	0					
ANR	63544	Callee	strstr		62736	0					
ANR	63545	Identifier	strstr		62736	0					
ANR	63546	ArgumentList	( axis2_char_t * ) key		62736	1					
ANR	63547	Argument	( axis2_char_t * ) key		62736	0					
ANR	63548	CastExpression	( axis2_char_t * ) key		62736	0					
ANR	63549	CastTarget	axis2_char_t *		62736	0					
ANR	63550	Identifier	key		62736	1					
ANR	63551	Argument	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		62736	1					
ANR	63552	PrimaryExpression	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		62736	0					
ANR	63553	CompoundStatement		181:53:10335:10335	62736	1					
ANR	63554	ExpressionStatement	the_attri = ( axiom_attribute_t * ) val	246:57:12070:12105	62736	0	True				
ANR	63555	AssignmentExpression	the_attri = ( axiom_attribute_t * ) val		62736	0		=			
ANR	63556	Identifier	the_attri		62736	0					
ANR	63557	CastExpression	( axiom_attribute_t * ) val		62736	1					
ANR	63558	CastTarget	axiom_attribute_t *		62736	0					
ANR	63559	Identifier	val		62736	1					
ANR	63560	BreakStatement	break ;	247:57:12164:12169	62736	1	True				
ANR	63561	IfStatement	if ( the_attri )		62736	6					
ANR	63562	Condition	the_attri	252:47:12371:12379	62736	0	True				
ANR	63563	Identifier	the_attri		62736	0					
ANR	63564	CompoundStatement		189:44:10750:10750	62736	1					
ANR	63565	ExpressionStatement	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"	254:48:12476:12549	62736	0	True				
ANR	63566	AssignmentExpression	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		62736	0		=			
ANR	63567	Identifier	attrib_text		62736	0					
ANR	63568	CallExpression	"axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		62736	1					
ANR	63569	Callee	axiom_attribute_get_value		62736	0					
ANR	63570	Identifier	axiom_attribute_get_value		62736	0					
ANR	63571	ArgumentList	the_attri		62736	1					
ANR	63572	Argument	the_attri		62736	0					
ANR	63573	Identifier	the_attri		62736	0					
ANR	63574	Argument	Environment :: getEnv ( )		62736	1					
ANR	63575	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63576	Callee	Environment :: getEnv		62736	0					
ANR	63577	Identifier	Environment :: getEnv		62736	0					
ANR	63578	ArgumentList			62736	1					
ANR	63579	ElseStatement	else		62736	0					
ANR	63580	CompoundStatement		193:44:11014:11014	62736	0					
ANR	63581	ExpressionStatement	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"	259:48:12929:13031	62736	0	True				
ANR	63582	AssignmentExpression	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		62736	0		=			
ANR	63583	Identifier	attrib_text		62736	0					
ANR	63584	CallExpression	"axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		62736	1					
ANR	63585	Callee	axiom_element_get_attribute_value_by_name		62736	0					
ANR	63586	Identifier	axiom_element_get_attribute_value_by_name		62736	0					
ANR	63587	ArgumentList	current_element		62736	1					
ANR	63588	Argument	current_element		62736	0					
ANR	63589	Identifier	current_element		62736	0					
ANR	63590	Argument	Environment :: getEnv ( )		62736	1					
ANR	63591	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63592	Callee	Environment :: getEnv		62736	0					
ANR	63593	Identifier	Environment :: getEnv		62736	0					
ANR	63594	ArgumentList			62736	1					
ANR	63595	Argument	"""nil"""		62736	2					
ANR	63596	PrimaryExpression	"""nil"""		62736	0					
ANR	63597	IfStatement	"if ( attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" ) )"		62736	7					
ANR	63598	Condition	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"	262:47:13127:13177	62736	0	True				
ANR	63599	AndExpression	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"		62736	0		&&			
ANR	63600	Identifier	attrib_text		62736	0					
ANR	63601	EqualityExpression	"0 == axutil_strcmp ( attrib_text , ""1"" )"		62736	1		==			
ANR	63602	PrimaryExpression	0		62736	0					
ANR	63603	CallExpression	"axutil_strcmp ( attrib_text , ""1"" )"		62736	1					
ANR	63604	Callee	axutil_strcmp		62736	0					
ANR	63605	Identifier	axutil_strcmp		62736	0					
ANR	63606	ArgumentList	attrib_text		62736	1					
ANR	63607	Argument	attrib_text		62736	0					
ANR	63608	Identifier	attrib_text		62736	0					
ANR	63609	Argument	"""1"""		62736	1					
ANR	63610	PrimaryExpression	"""1"""		62736	0					
ANR	63611	CompoundStatement		199:44:11548:11548	62736	1					
ANR	63612	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element text"" )"	264:48:13274:13383	62736	0	True				
ANR	63613	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element text"" )"		62736	0					
ANR	63614	Callee	WSF_LOG_ERROR_MSG		62736	0					
ANR	63615	Identifier	WSF_LOG_ERROR_MSG		62736	0					
ANR	63616	ArgumentList	Environment :: getEnv ( ) -> log		62736	1					
ANR	63617	Argument	Environment :: getEnv ( ) -> log		62736	0					
ANR	63618	PtrMemberAccess	Environment :: getEnv ( ) -> log		62736	0					
ANR	63619	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63620	Callee	Environment :: getEnv		62736	0					
ANR	63621	Identifier	Environment :: getEnv		62736	0					
ANR	63622	ArgumentList			62736	1					
ANR	63623	Identifier	log		62736	1					
ANR	63624	Argument	WSF_LOG_SI		62736	1					
ANR	63625	Identifier	WSF_LOG_SI		62736	0					
ANR	63626	Argument	"""NULL value is set to a non nillable element text"""		62736	2					
ANR	63627	PrimaryExpression	"""NULL value is set to a non nillable element text"""		62736	0					
ANR	63628	ExpressionStatement	status = AXIS2_FAILURE	265:48:13433:13455	62736	1	True				
ANR	63629	AssignmentExpression	status = AXIS2_FAILURE		62736	0		=			
ANR	63630	Identifier	status		62736	0					
ANR	63631	Identifier	AXIS2_FAILURE		62736	1					
ANR	63632	ElseStatement	else		62736	0					
ANR	63633	CompoundStatement		204:44:11920:11920	62736	0					
ANR	63634	ExpressionStatement	"status = setText ( """" )"	270:48:13743:13763	62736	0	True				
ANR	63635	AssignmentExpression	"status = setText ( """" )"		62736	0		=			
ANR	63636	Identifier	status		62736	0					
ANR	63637	CallExpression	"setText ( """" )"		62736	1					
ANR	63638	Callee	setText		62736	0					
ANR	63639	Identifier	setText		62736	0					
ANR	63640	ArgumentList	""""""		62736	1					
ANR	63641	Argument	""""""		62736	0					
ANR	63642	PrimaryExpression	""""""		62736	0					
ANR	63643	IfStatement	if ( AXIS2_FAILURE == status )		62736	3					
ANR	63644	Condition	AXIS2_FAILURE == status	274:36:13926:13949	62736	0	True				
ANR	63645	EqualityExpression	AXIS2_FAILURE == status		62736	0		==			
ANR	63646	Identifier	AXIS2_FAILURE		62736	0					
ANR	63647	Identifier	status		62736	1					
ANR	63648	CompoundStatement		211:33:12309:12309	62736	1					
ANR	63649	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for text "" )"	276:37:14024:14121	62736	0	True				
ANR	63650	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for text "" )"		62736	0					
ANR	63651	Callee	WSF_LOG_ERROR_MSG		62736	0					
ANR	63652	Identifier	WSF_LOG_ERROR_MSG		62736	0					
ANR	63653	ArgumentList	Environment :: getEnv ( ) -> log		62736	1					
ANR	63654	Argument	Environment :: getEnv ( ) -> log		62736	0					
ANR	63655	PtrMemberAccess	Environment :: getEnv ( ) -> log		62736	0					
ANR	63656	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63657	Callee	Environment :: getEnv		62736	0					
ANR	63658	Identifier	Environment :: getEnv		62736	0					
ANR	63659	ArgumentList			62736	1					
ANR	63660	Identifier	log		62736	1					
ANR	63661	Argument	WSF_LOG_SI		62736	1					
ANR	63662	Identifier	WSF_LOG_SI		62736	0					
ANR	63663	Argument	"""failed in setting the value for text """		62736	2					
ANR	63664	PrimaryExpression	"""failed in setting the value for text """		62736	0					
ANR	63665	IfStatement	if ( element_qname )		62736	1					
ANR	63666	Condition	element_qname	277:40:14163:14175	62736	0	True				
ANR	63667	Identifier	element_qname		62736	0					
ANR	63668	CompoundStatement		214:37:12539:12539	62736	1					
ANR	63669	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	279:41:14258:14313	62736	0	True				
ANR	63670	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		62736	0					
ANR	63671	Callee	axutil_qname_free		62736	0					
ANR	63672	Identifier	axutil_qname_free		62736	0					
ANR	63673	ArgumentList	element_qname		62736	1					
ANR	63674	Argument	element_qname		62736	0					
ANR	63675	Identifier	element_qname		62736	0					
ANR	63676	Argument	Environment :: getEnv ( )		62736	1					
ANR	63677	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63678	Callee	Environment :: getEnv		62736	0					
ANR	63679	Identifier	Environment :: getEnv		62736	0					
ANR	63680	ArgumentList			62736	1					
ANR	63681	ReturnStatement	return AXIS2_FAILURE ;	281:37:14391:14411	62736	2	True				
ANR	63682	Identifier	AXIS2_FAILURE		62736	0					
ANR	63683	IfStatement	if ( element_qname )		62736	23					
ANR	63684	Condition	element_qname	285:21:14529:14541	62736	0	True				
ANR	63685	Identifier	element_qname		62736	0					
ANR	63686	CompoundStatement		222:18:12886:12886	62736	1					
ANR	63687	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	287:21:14585:14640	62736	0	True				
ANR	63688	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		62736	0					
ANR	63689	Callee	axutil_qname_free		62736	0					
ANR	63690	Identifier	axutil_qname_free		62736	0					
ANR	63691	ArgumentList	element_qname		62736	1					
ANR	63692	Argument	element_qname		62736	0					
ANR	63693	Identifier	element_qname		62736	0					
ANR	63694	Argument	Environment :: getEnv ( )		62736	1					
ANR	63695	CallExpression	Environment :: getEnv ( )		62736	0					
ANR	63696	Callee	Environment :: getEnv		62736	0					
ANR	63697	Identifier	Environment :: getEnv		62736	0					
ANR	63698	ArgumentList			62736	1					
ANR	63699	ExpressionStatement	element_qname = NULL	288:21:14663:14683	62736	1	True				
ANR	63700	AssignmentExpression	element_qname = NULL		62736	0		=			
ANR	63701	Identifier	element_qname		62736	0					
ANR	63702	Identifier	NULL		62736	1					
ANR	63703	ReturnStatement	return status ;	291:10:14733:14746	62736	24	True				
ANR	63704	Identifier	status		62736	0					
ANR	63705	ReturnType	bool WSF_CALL		62736	1					
ANR	63706	Identifier	AviaryCommon :: Status :: deserialize		62736	2					
ANR	63707	ParameterList	"axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs"		62736	3					
ANR	63708	Parameter	axiom_node_t * * dp_parent	64:42:1586:1609	62736	0	True				
ANR	63709	ParameterType	axiom_node_t * *		62736	0					
ANR	63710	Identifier	dp_parent		62736	1					
ANR	63711	Parameter	bool * dp_is_early_node_valid	64:67:1611:1638	62736	1	True				
ANR	63712	ParameterType	bool *		62736	0					
ANR	63713	Identifier	dp_is_early_node_valid		62736	1					
ANR	63714	Parameter	bool dont_care_minoccurs	64:97:1641:1664	62736	2	True				
ANR	63715	ParameterType	bool		62736	0					
ANR	63716	Identifier	dont_care_minoccurs		62736	1					
ANR	63717	CFGEntryNode	ENTRY		62736		True				
ANR	63718	CFGExitNode	EXIT		62736		True				
ANR	63719	Symbol	& val		62736						
ANR	63720	Symbol	parent		62736						
ANR	63721	Symbol	hi		62736						
ANR	63722	Symbol	is_early_node_valid		62736						
ANR	63723	Symbol	current_node		62736						
ANR	63724	Symbol	axiom_element_get_qname		62736						
ANR	63725	Symbol	AXIS2_FAILURE		62736						
ANR	63726	Symbol	dp_is_early_node_valid		62736						
ANR	63727	Symbol	WSF_LOG_SI		62736						
ANR	63728	Symbol	& current_node		62736						
ANR	63729	Symbol	& is_early_node_valid		62736						
ANR	63730	Symbol	axutil_hash_next		62736						
ANR	63731	Symbol	AXIS2_SUCCESS		62736						
ANR	63732	Symbol	element		62736						
ANR	63733	Symbol	val		62736						
ANR	63734	Symbol	NULL		62736						
ANR	63735	Symbol	setCode		62736						
ANR	63736	Symbol	axiom_node_get_node_type		62736						
ANR	63737	Symbol	axiom_element_get_localname		62736						
ANR	63738	Symbol	text_value		62736						
ANR	63739	Symbol	axiom_node_get_next_sibling		62736						
ANR	63740	Symbol	the_attri		62736						
ANR	63741	Symbol	strstr		62736						
ANR	63742	Symbol	axutil_strcmp		62736						
ANR	63743	Symbol	true		62736						
ANR	63744	Symbol	axutil_qname_equals		62736						
ANR	63745	Symbol	status		62736						
ANR	63746	Symbol	Environment :: getEnv		62736						
ANR	63747	Symbol	& key		62736						
ANR	63748	Symbol	mqname		62736						
ANR	63749	Symbol	attribute_hash		62736						
ANR	63750	Symbol	isParticle		62736						
ANR	63751	Symbol	* element		62736						
ANR	63752	Symbol	axiom_element_get_attribute_value_by_name		62736						
ANR	63753	Symbol	element_qname		62736						
ANR	63754	Symbol	axutil_qname_create		62736						
ANR	63755	Symbol	axiom_attribute_get_value		62736						
ANR	63756	Symbol	* dp_parent		62736						
ANR	63757	Symbol	axiom_node_get_data_element		62736						
ANR	63758	Symbol	axiom_element_get_text		62736						
ANR	63759	Symbol	dont_care_minoccurs		62736						
ANR	63760	Symbol	attrib_text		62736						
ANR	63761	Symbol	first_node		62736						
ANR	63762	Symbol	key		62736						
ANR	63763	Symbol	current_element		62736						
ANR	63764	Symbol	dp_parent		62736						
ANR	63765	Symbol	AXIOM_ELEMENT		62736						
ANR	63766	Symbol	false		62736						
ANR	63767	Symbol	Environment :: getEnv ( ) -> log		62736						
ANR	63768	Symbol	axiom_element_get_all_attributes		62736						
ANR	63769	Symbol	axiom_node_get_first_child		62736						
ANR	63770	Symbol	axutil_hash_first		62736						
ANR	63771	Symbol	* Environment :: getEnv		62736						
ANR	63772	Symbol	element -> deserialize		62736						
ANR	63773	Symbol	setText		62736						
ANR	63774	Function	AviaryCommon :: Status :: isParticle	294:10:14768:14908							
ANR	63775	FunctionDef	AviaryCommon :: Status :: isParticle ()		63774	0					
ANR	63776	CompoundStatement		296:10:14837:14908	63774	0					
ANR	63777	ReturnStatement	return false ;	298:17:14869:14881	63774	0	True				
ANR	63778	Identifier	false		63774	0					
ANR	63779	ReturnType	bool WSF_CALL		63774	1					
ANR	63780	Identifier	AviaryCommon :: Status :: isParticle		63774	2					
ANR	63781	ParameterList			63774	3					
ANR	63782	CFGEntryNode	ENTRY		63774		True				
ANR	63783	CFGExitNode	EXIT		63774		True				
ANR	63784	Symbol	false		63774						
ANR	63785	Function	AviaryCommon :: Status :: declareParentNamespaces	303:10:14922:15241							
ANR	63786	FunctionDef	"AviaryCommon :: Status :: declareParentNamespaces (axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index)"		63785	0					
ANR	63787	CompoundStatement		307:10:15123:15241	63785	0					
ANR	63788	ReturnType	void WSF_CALL		63785	1					
ANR	63789	Identifier	AviaryCommon :: Status :: declareParentNamespaces		63785	2					
ANR	63790	ParameterList	"axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index"		63785	3					
ANR	63791	Parameter	axiom_element_t * parent_element	305:20:15013:15043	63785	0	True				
ANR	63792	ParameterType	axiom_element_t *		63785	0					
ANR	63793	Identifier	parent_element		63785	1					
ANR	63794	Parameter	axutil_hash_t * namespaces	306:20:15066:15090	63785	1	True				
ANR	63795	ParameterType	axutil_hash_t *		63785	0					
ANR	63796	Identifier	namespaces		63785	1					
ANR	63797	Parameter	int * next_ns_index	306:47:15093:15110	63785	2	True				
ANR	63798	ParameterType	int *		63785	0					
ANR	63799	Identifier	next_ns_index		63785	1					
ANR	63800	CFGEntryNode	ENTRY		63785		True				
ANR	63801	CFGExitNode	EXIT		63785		True				
ANR	63802	Symbol	parent_element		63785						
ANR	63803	Symbol	next_ns_index		63785						
ANR	63804	Symbol	namespaces		63785						
ANR	63805	Function	AviaryCommon :: Status :: serialize	315:22:15284:23356							
ANR	63806	FunctionDef	"AviaryCommon :: Status :: serialize (axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index)"		63805	0					
ANR	63807	CompoundStatement		321:8:15475:23356	63805	0					
ANR	63808	IdentifierDeclStatement	axis2_char_t * string_to_stream ;	324:13:15516:15546	63805	0	True				
ANR	63809	IdentifierDecl	* string_to_stream		63805	0					
ANR	63810	IdentifierDeclType	axis2_char_t *		63805	0					
ANR	63811	Identifier	string_to_stream		63805	1					
ANR	63812	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	327:9:15580:15613	63805	1	True				
ANR	63813	IdentifierDecl	* current_node = NULL		63805	0					
ANR	63814	IdentifierDeclType	axiom_node_t *		63805	0					
ANR	63815	Identifier	current_node		63805	1					
ANR	63816	AssignmentExpression	* current_node = NULL		63805	2		=			
ANR	63817	Identifier	NULL		63805	0					
ANR	63818	Identifier	NULL		63805	1					
ANR	63819	IdentifierDeclStatement	int tag_closed = 0 ;	328:9:15624:15642	63805	2	True				
ANR	63820	IdentifierDecl	tag_closed = 0		63805	0					
ANR	63821	IdentifierDeclType	int		63805	0					
ANR	63822	Identifier	tag_closed		63805	1					
ANR	63823	AssignmentExpression	tag_closed = 0		63805	2		=			
ANR	63824	Identifier	tag_closed		63805	0					
ANR	63825	PrimaryExpression	0		63805	1					
ANR	63826	IdentifierDeclStatement	axiom_namespace_t * ns1 = NULL ;	332:16:15681:15710	63805	3	True				
ANR	63827	IdentifierDecl	* ns1 = NULL		63805	0					
ANR	63828	IdentifierDeclType	axiom_namespace_t *		63805	0					
ANR	63829	Identifier	ns1		63805	1					
ANR	63830	AssignmentExpression	* ns1 = NULL		63805	2		=			
ANR	63831	Identifier	NULL		63805	0					
ANR	63832	Identifier	NULL		63805	1					
ANR	63833	IdentifierDeclStatement	axis2_char_t * qname_uri = NULL ;	334:16:15729:15759	63805	4	True				
ANR	63834	IdentifierDecl	* qname_uri = NULL		63805	0					
ANR	63835	IdentifierDeclType	axis2_char_t *		63805	0					
ANR	63836	Identifier	qname_uri		63805	1					
ANR	63837	AssignmentExpression	* qname_uri = NULL		63805	2		=			
ANR	63838	Identifier	NULL		63805	0					
ANR	63839	Identifier	NULL		63805	1					
ANR	63840	IdentifierDeclStatement	axis2_char_t * qname_prefix = NULL ;	335:16:15777:15810	63805	5	True				
ANR	63841	IdentifierDecl	* qname_prefix = NULL		63805	0					
ANR	63842	IdentifierDeclType	axis2_char_t *		63805	0					
ANR	63843	Identifier	qname_prefix		63805	1					
ANR	63844	AssignmentExpression	* qname_prefix = NULL		63805	2		=			
ANR	63845	Identifier	NULL		63805	0					
ANR	63846	Identifier	NULL		63805	1					
ANR	63847	IdentifierDeclStatement	axis2_char_t * p_prefix = NULL ;	336:16:15828:15857	63805	6	True				
ANR	63848	IdentifierDecl	* p_prefix = NULL		63805	0					
ANR	63849	IdentifierDeclType	axis2_char_t *		63805	0					
ANR	63850	Identifier	p_prefix		63805	1					
ANR	63851	AssignmentExpression	* p_prefix = NULL		63805	2		=			
ANR	63852	Identifier	NULL		63805	0					
ANR	63853	Identifier	NULL		63805	1					
ANR	63854	IdentifierDeclStatement	axis2_char_t text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ] ;	338:20:15892:15942	63805	7	True				
ANR	63855	IdentifierDecl	text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ]		63805	0					
ANR	63856	IdentifierDeclType	axis2_char_t [ ADB_DEFAULT_DIGIT_LIMIT ]		63805	0					
ANR	63857	Identifier	text_value_1		63805	1					
ANR	63858	Identifier	ADB_DEFAULT_DIGIT_LIMIT		63805	2					
ANR	63859	IdentifierDeclStatement	axis2_char_t * text_value_2 ;	340:20:15985:16011	63805	8	True				
ANR	63860	IdentifierDecl	* text_value_2		63805	0					
ANR	63861	IdentifierDeclType	axis2_char_t *		63805	0					
ANR	63862	Identifier	text_value_2		63805	1					
ANR	63863	IdentifierDeclStatement	axis2_char_t * text_value_2_temp ;	341:20:16033:16064	63805	9	True				
ANR	63864	IdentifierDecl	* text_value_2_temp		63805	0					
ANR	63865	IdentifierDeclType	axis2_char_t *		63805	0					
ANR	63866	Identifier	text_value_2_temp		63805	1					
ANR	63867	IdentifierDeclStatement	axis2_char_t * start_input_str = NULL ;	343:15:16102:16138	63805	10	True				
ANR	63868	IdentifierDecl	* start_input_str = NULL		63805	0					
ANR	63869	IdentifierDeclType	axis2_char_t *		63805	0					
ANR	63870	Identifier	start_input_str		63805	1					
ANR	63871	AssignmentExpression	* start_input_str = NULL		63805	2		=			
ANR	63872	Identifier	NULL		63805	0					
ANR	63873	Identifier	NULL		63805	1					
ANR	63874	IdentifierDeclStatement	axis2_char_t * end_input_str = NULL ;	344:15:16155:16189	63805	11	True				
ANR	63875	IdentifierDecl	* end_input_str = NULL		63805	0					
ANR	63876	IdentifierDeclType	axis2_char_t *		63805	0					
ANR	63877	Identifier	end_input_str		63805	1					
ANR	63878	AssignmentExpression	* end_input_str = NULL		63805	2		=			
ANR	63879	Identifier	NULL		63805	0					
ANR	63880	Identifier	NULL		63805	1					
ANR	63881	IdentifierDeclStatement	unsigned int start_input_str_len = 0 ;	345:15:16206:16242	63805	12	True				
ANR	63882	IdentifierDecl	start_input_str_len = 0		63805	0					
ANR	63883	IdentifierDeclType	unsigned int		63805	0					
ANR	63884	Identifier	start_input_str_len		63805	1					
ANR	63885	AssignmentExpression	start_input_str_len = 0		63805	2		=			
ANR	63886	Identifier	start_input_str_len		63805	0					
ANR	63887	PrimaryExpression	0		63805	1					
ANR	63888	IdentifierDeclStatement	unsigned int end_input_str_len = 0 ;	346:15:16259:16293	63805	13	True				
ANR	63889	IdentifierDecl	end_input_str_len = 0		63805	0					
ANR	63890	IdentifierDeclType	unsigned int		63805	0					
ANR	63891	Identifier	end_input_str_len		63805	1					
ANR	63892	AssignmentExpression	end_input_str_len = 0		63805	2		=			
ANR	63893	Identifier	end_input_str_len		63805	0					
ANR	63894	PrimaryExpression	0		63805	1					
ANR	63895	IdentifierDeclStatement	axiom_data_source_t * data_source = NULL ;	349:15:16336:16375	63805	14	True				
ANR	63896	IdentifierDecl	* data_source = NULL		63805	0					
ANR	63897	IdentifierDeclType	axiom_data_source_t *		63805	0					
ANR	63898	Identifier	data_source		63805	1					
ANR	63899	AssignmentExpression	* data_source = NULL		63805	2		=			
ANR	63900	Identifier	NULL		63805	0					
ANR	63901	Identifier	NULL		63805	1					
ANR	63902	IdentifierDeclStatement	axutil_stream_t * stream = NULL ;	350:15:16392:16422	63805	15	True				
ANR	63903	IdentifierDecl	* stream = NULL		63805	0					
ANR	63904	IdentifierDeclType	axutil_stream_t *		63805	0					
ANR	63905	Identifier	stream		63805	1					
ANR	63906	AssignmentExpression	* stream = NULL		63805	2		=			
ANR	63907	Identifier	NULL		63805	0					
ANR	63908	Identifier	NULL		63805	1					
ANR	63909	ExpressionStatement	current_node = parent	353:20:16458:16479	63805	16	True				
ANR	63910	AssignmentExpression	current_node = parent		63805	0		=			
ANR	63911	Identifier	current_node		63805	0					
ANR	63912	Identifier	parent		63805	1					
ANR	63913	ExpressionStatement	"data_source = ( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	354:20:16501:16602	63805	17	True				
ANR	63914	AssignmentExpression	"data_source = ( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		63805	0		=			
ANR	63915	Identifier	data_source		63805	0					
ANR	63916	CastExpression	"( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		63805	1					
ANR	63917	CastTarget	axiom_data_source_t *		63805	0					
ANR	63918	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		63805	1					
ANR	63919	Callee	axiom_node_get_data_element		63805	0					
ANR	63920	Identifier	axiom_node_get_data_element		63805	0					
ANR	63921	ArgumentList	current_node		63805	1					
ANR	63922	Argument	current_node		63805	0					
ANR	63923	Identifier	current_node		63805	0					
ANR	63924	Argument	Environment :: getEnv ( )		63805	1					
ANR	63925	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	63926	Callee	Environment :: getEnv		63805	0					
ANR	63927	Identifier	Environment :: getEnv		63805	0					
ANR	63928	ArgumentList			63805	1					
ANR	63929	IfStatement	if ( ! data_source )		63805	18					
ANR	63930	Condition	! data_source	355:24:16628:16639	63805	0	True				
ANR	63931	UnaryOperationExpression	! data_source		63805	0					
ANR	63932	UnaryOperator	!		63805	0					
ANR	63933	Identifier	data_source		63805	1					
ANR	63934	ReturnStatement	return NULL ;	356:24:16666:16677	63805	1	True				
ANR	63935	Identifier	NULL		63805	0					
ANR	63936	ExpressionStatement	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"	357:20:16699:16772	63805	19	True				
ANR	63937	AssignmentExpression	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		63805	0		=			
ANR	63938	Identifier	stream		63805	0					
ANR	63939	CallExpression	"axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		63805	1					
ANR	63940	Callee	axiom_data_source_get_stream		63805	0					
ANR	63941	Identifier	axiom_data_source_get_stream		63805	0					
ANR	63942	ArgumentList	data_source		63805	1					
ANR	63943	Argument	data_source		63805	0					
ANR	63944	Identifier	data_source		63805	0					
ANR	63945	Argument	Environment :: getEnv ( )		63805	1					
ANR	63946	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	63947	Callee	Environment :: getEnv		63805	0					
ANR	63948	Identifier	Environment :: getEnv		63805	0					
ANR	63949	ArgumentList			63805	1					
ANR	63950	IfStatement	if ( ! stream )		63805	20					
ANR	63951	Condition	! stream	358:24:16841:16847	63805	0	True				
ANR	63952	UnaryOperationExpression	! stream		63805	0					
ANR	63953	UnaryOperator	!		63805	0					
ANR	63954	Identifier	stream		63805	1					
ANR	63955	ReturnStatement	return NULL ;	359:24:16874:16885	63805	1	True				
ANR	63956	Identifier	NULL		63805	0					
ANR	63957	IfStatement	if ( ! parent_tag_closed )		63805	21					
ANR	63958	Condition	! parent_tag_closed	361:15:16921:16938	63805	0	True				
ANR	63959	UnaryOperationExpression	! parent_tag_closed		63805	0					
ANR	63960	UnaryOperator	!		63805	0					
ANR	63961	Identifier	parent_tag_closed		63805	1					
ANR	63962	CompoundStatement		42:12:1477:1477	63805	1					
ANR	63963	ExpressionStatement	"string_to_stream = "">"""	364:14:16982:17004	63805	0	True				
ANR	63964	AssignmentExpression	"string_to_stream = "">"""		63805	0		=			
ANR	63965	Identifier	string_to_stream		63805	0					
ANR	63966	PrimaryExpression	""">"""		63805	1					
ANR	63967	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"	365:14:17021:17122	63805	1	True				
ANR	63968	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"		63805	0					
ANR	63969	Callee	axutil_stream_write		63805	0					
ANR	63970	Identifier	axutil_stream_write		63805	0					
ANR	63971	ArgumentList	stream		63805	1					
ANR	63972	Argument	stream		63805	0					
ANR	63973	Identifier	stream		63805	0					
ANR	63974	Argument	Environment :: getEnv ( )		63805	1					
ANR	63975	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	63976	Callee	Environment :: getEnv		63805	0					
ANR	63977	Identifier	Environment :: getEnv		63805	0					
ANR	63978	ArgumentList			63805	1					
ANR	63979	Argument	string_to_stream		63805	2					
ANR	63980	Identifier	string_to_stream		63805	0					
ANR	63981	Argument	axutil_strlen ( string_to_stream )		63805	3					
ANR	63982	CallExpression	axutil_strlen ( string_to_stream )		63805	0					
ANR	63983	Callee	axutil_strlen		63805	0					
ANR	63984	Identifier	axutil_strlen		63805	0					
ANR	63985	ArgumentList	string_to_stream		63805	1					
ANR	63986	Argument	string_to_stream		63805	0					
ANR	63987	Identifier	string_to_stream		63805	0					
ANR	63988	ExpressionStatement	tag_closed = 1	366:14:17138:17152	63805	2	True				
ANR	63989	AssignmentExpression	tag_closed = 1		63805	0		=			
ANR	63990	Identifier	tag_closed		63805	0					
ANR	63991	PrimaryExpression	1		63805	1					
ANR	63992	ExpressionStatement	p_prefix = NULL	370:23:17217:17232	63805	22	True				
ANR	63993	AssignmentExpression	p_prefix = NULL		63805	0		=			
ANR	63994	Identifier	p_prefix		63805	0					
ANR	63995	Identifier	NULL		63805	1					
ANR	63996	IfStatement	if ( ! isValidCode )		63805	23					
ANR	63997	Condition	! isValidCode	373:23:17281:17292	63805	0	True				
ANR	63998	UnaryOperationExpression	! isValidCode		63805	0					
ANR	63999	UnaryOperator	!		63805	0					
ANR	64000	Identifier	isValidCode		63805	1					
ANR	64001	CompoundStatement		54:19:1838:1838	63805	1					
ANR	64002	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property code"" )"	377:28:17396:17501	63805	0	True				
ANR	64003	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property code"" )"		63805	0					
ANR	64004	Callee	WSF_LOG_ERROR_MSG		63805	0					
ANR	64005	Identifier	WSF_LOG_ERROR_MSG		63805	0					
ANR	64006	ArgumentList	Environment :: getEnv ( ) -> log		63805	1					
ANR	64007	Argument	Environment :: getEnv ( ) -> log		63805	0					
ANR	64008	PtrMemberAccess	Environment :: getEnv ( ) -> log		63805	0					
ANR	64009	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64010	Callee	Environment :: getEnv		63805	0					
ANR	64011	Identifier	Environment :: getEnv		63805	0					
ANR	64012	ArgumentList			63805	1					
ANR	64013	Identifier	log		63805	1					
ANR	64014	Argument	WSF_LOG_SI		63805	1					
ANR	64015	Identifier	WSF_LOG_SI		63805	0					
ANR	64016	Argument	"""Nil value found in non-nillable property code"""		63805	2					
ANR	64017	PrimaryExpression	"""Nil value found in non-nillable property code"""		63805	0					
ANR	64018	ReturnStatement	return NULL ;	378:28:17531:17542	63805	1	True				
ANR	64019	Identifier	NULL		63805	0					
ANR	64020	ElseStatement	else		63805	0					
ANR	64021	CompoundStatement		62:19:2159:2159	63805	0					
ANR	64022	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" ) ) )"	383:21:17658:17883	63805	0	True				
ANR	64023	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" ) ) )"		63805	0		=			
ANR	64024	Identifier	start_input_str		63805	0					
ANR	64025	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" ) ) )"		63805	1					
ANR	64026	CastTarget	axis2_char_t *		63805	0					
ANR	64027	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" ) ) )"		63805	1					
ANR	64028	Callee	AXIS2_MALLOC		63805	0					
ANR	64029	Identifier	AXIS2_MALLOC		63805	0					
ANR	64030	ArgumentList	Environment :: getEnv ( ) -> allocator		63805	1					
ANR	64031	Argument	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64032	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64033	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64034	Callee	Environment :: getEnv		63805	0					
ANR	64035	Identifier	Environment :: getEnv		63805	0					
ANR	64036	ArgumentList			63805	1					
ANR	64037	Identifier	allocator		63805	1					
ANR	64038	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" ) )"		63805	1					
ANR	64039	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" ) )"		63805	0		*			
ANR	64040	SizeofExpression	sizeof ( axis2_char_t )		63805	0					
ANR	64041	Sizeof	sizeof		63805	0					
ANR	64042	SizeofOperand	axis2_char_t		63805	1					
ANR	64043	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" )"		63805	1		+			
ANR	64044	PrimaryExpression	4		63805	0					
ANR	64045	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" )"		63805	1		+			
ANR	64046	CallExpression	axutil_strlen ( p_prefix )		63805	0					
ANR	64047	Callee	axutil_strlen		63805	0					
ANR	64048	Identifier	axutil_strlen		63805	0					
ANR	64049	ArgumentList	p_prefix		63805	1					
ANR	64050	Argument	p_prefix		63805	0					
ANR	64051	Identifier	p_prefix		63805	0					
ANR	64052	CallExpression	"axutil_strlen ( ""code"" )"		63805	1					
ANR	64053	Callee	axutil_strlen		63805	0					
ANR	64054	Identifier	axutil_strlen		63805	0					
ANR	64055	ArgumentList	"""code"""		63805	1					
ANR	64056	Argument	"""code"""		63805	0					
ANR	64057	PrimaryExpression	"""code"""		63805	0					
ANR	64058	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" ) ) )"	388:21:18009:18197	63805	1	True				
ANR	64059	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" ) ) )"		63805	0		=			
ANR	64060	Identifier	end_input_str		63805	0					
ANR	64061	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" ) ) )"		63805	1					
ANR	64062	CastTarget	axis2_char_t *		63805	0					
ANR	64063	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" ) ) )"		63805	1					
ANR	64064	Callee	AXIS2_MALLOC		63805	0					
ANR	64065	Identifier	AXIS2_MALLOC		63805	0					
ANR	64066	ArgumentList	Environment :: getEnv ( ) -> allocator		63805	1					
ANR	64067	Argument	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64068	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64069	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64070	Callee	Environment :: getEnv		63805	0					
ANR	64071	Identifier	Environment :: getEnv		63805	0					
ANR	64072	ArgumentList			63805	1					
ANR	64073	Identifier	allocator		63805	1					
ANR	64074	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" ) )"		63805	1					
ANR	64075	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" ) )"		63805	0		*			
ANR	64076	SizeofExpression	sizeof ( axis2_char_t )		63805	0					
ANR	64077	Sizeof	sizeof		63805	0					
ANR	64078	SizeofOperand	axis2_char_t		63805	1					
ANR	64079	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" )"		63805	1		+			
ANR	64080	PrimaryExpression	5		63805	0					
ANR	64081	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""code"" )"		63805	1		+			
ANR	64082	CallExpression	axutil_strlen ( p_prefix )		63805	0					
ANR	64083	Callee	axutil_strlen		63805	0					
ANR	64084	Identifier	axutil_strlen		63805	0					
ANR	64085	ArgumentList	p_prefix		63805	1					
ANR	64086	Argument	p_prefix		63805	0					
ANR	64087	Identifier	p_prefix		63805	0					
ANR	64088	CallExpression	"axutil_strlen ( ""code"" )"		63805	1					
ANR	64089	Callee	axutil_strlen		63805	0					
ANR	64090	Identifier	axutil_strlen		63805	0					
ANR	64091	ArgumentList	"""code"""		63805	1					
ANR	64092	Argument	"""code"""		63805	0					
ANR	64093	PrimaryExpression	"""code"""		63805	0					
ANR	64094	ExpressionStatement	"sprintf ( start_input_str , ""<%s%scode"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	403:28:18554:18729	63805	2	True				
ANR	64095	CallExpression	"sprintf ( start_input_str , ""<%s%scode"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		63805	0					
ANR	64096	Callee	sprintf		63805	0					
ANR	64097	Identifier	sprintf		63805	0					
ANR	64098	ArgumentList	start_input_str		63805	1					
ANR	64099	Argument	start_input_str		63805	0					
ANR	64100	Identifier	start_input_str		63805	0					
ANR	64101	Argument	"""<%s%scode"""		63805	1					
ANR	64102	PrimaryExpression	"""<%s%scode"""		63805	0					
ANR	64103	Argument	"p_prefix ? p_prefix : """""		63805	2					
ANR	64104	ConditionalExpression	"p_prefix ? p_prefix : """""		63805	0					
ANR	64105	Condition	p_prefix		63805	0					
ANR	64106	Identifier	p_prefix		63805	0					
ANR	64107	Identifier	p_prefix		63805	1					
ANR	64108	PrimaryExpression	""""""		63805	2					
ANR	64109	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		63805	3					
ANR	64110	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		63805	0					
ANR	64111	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		63805	0					
ANR	64112	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		63805	0		&&			
ANR	64113	Identifier	p_prefix		63805	0					
ANR	64114	CallExpression	"axutil_strcmp ( p_prefix , """" )"		63805	1					
ANR	64115	Callee	axutil_strcmp		63805	0					
ANR	64116	Identifier	axutil_strcmp		63805	0					
ANR	64117	ArgumentList	p_prefix		63805	1					
ANR	64118	Argument	p_prefix		63805	0					
ANR	64119	Identifier	p_prefix		63805	0					
ANR	64120	Argument	""""""		63805	1					
ANR	64121	PrimaryExpression	""""""		63805	0					
ANR	64122	PrimaryExpression	""":"""		63805	1					
ANR	64123	PrimaryExpression	""""""		63805	2					
ANR	64124	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	407:24:18785:18837	63805	3	True				
ANR	64125	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		63805	0		=			
ANR	64126	Identifier	start_input_str_len		63805	0					
ANR	64127	CallExpression	axutil_strlen ( start_input_str )		63805	1					
ANR	64128	Callee	axutil_strlen		63805	0					
ANR	64129	Identifier	axutil_strlen		63805	0					
ANR	64130	ArgumentList	start_input_str		63805	1					
ANR	64131	Argument	start_input_str		63805	0					
ANR	64132	Identifier	start_input_str		63805	0					
ANR	64133	ExpressionStatement	"sprintf ( end_input_str , ""</%s%scode>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	408:24:18863:19038	63805	4	True				
ANR	64134	CallExpression	"sprintf ( end_input_str , ""</%s%scode>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		63805	0					
ANR	64135	Callee	sprintf		63805	0					
ANR	64136	Identifier	sprintf		63805	0					
ANR	64137	ArgumentList	end_input_str		63805	1					
ANR	64138	Argument	end_input_str		63805	0					
ANR	64139	Identifier	end_input_str		63805	0					
ANR	64140	Argument	"""</%s%scode>"""		63805	1					
ANR	64141	PrimaryExpression	"""</%s%scode>"""		63805	0					
ANR	64142	Argument	"p_prefix ? p_prefix : """""		63805	2					
ANR	64143	ConditionalExpression	"p_prefix ? p_prefix : """""		63805	0					
ANR	64144	Condition	p_prefix		63805	0					
ANR	64145	Identifier	p_prefix		63805	0					
ANR	64146	Identifier	p_prefix		63805	1					
ANR	64147	PrimaryExpression	""""""		63805	2					
ANR	64148	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		63805	3					
ANR	64149	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		63805	0					
ANR	64150	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		63805	0					
ANR	64151	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		63805	0		&&			
ANR	64152	Identifier	p_prefix		63805	0					
ANR	64153	CallExpression	"axutil_strcmp ( p_prefix , """" )"		63805	1					
ANR	64154	Callee	axutil_strcmp		63805	0					
ANR	64155	Identifier	axutil_strcmp		63805	0					
ANR	64156	ArgumentList	p_prefix		63805	1					
ANR	64157	Argument	p_prefix		63805	0					
ANR	64158	Identifier	p_prefix		63805	0					
ANR	64159	Argument	""""""		63805	1					
ANR	64160	PrimaryExpression	""""""		63805	0					
ANR	64161	PrimaryExpression	""":"""		63805	1					
ANR	64162	PrimaryExpression	""""""		63805	2					
ANR	64163	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	411:24:19064:19112	63805	5	True				
ANR	64164	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		63805	0		=			
ANR	64165	Identifier	end_input_str_len		63805	0					
ANR	64166	CallExpression	axutil_strlen ( end_input_str )		63805	1					
ANR	64167	Callee	axutil_strlen		63805	0					
ANR	64168	Identifier	axutil_strlen		63805	0					
ANR	64169	ArgumentList	end_input_str		63805	1					
ANR	64170	Argument	end_input_str		63805	0					
ANR	64171	Identifier	end_input_str		63805	0					
ANR	64172	IfStatement	if ( ! property_Code -> isParticle ( ) )		63805	6					
ANR	64173	Condition	! property_Code -> isParticle ( )	413:31:19167:19194	63805	0	True				
ANR	64174	UnaryOperationExpression	! property_Code -> isParticle ( )		63805	0					
ANR	64175	UnaryOperator	!		63805	0					
ANR	64176	CallExpression	property_Code -> isParticle ( )		63805	1					
ANR	64177	Callee	property_Code -> isParticle		63805	0					
ANR	64178	PtrMemberAccess	property_Code -> isParticle		63805	0					
ANR	64179	Identifier	property_Code		63805	0					
ANR	64180	Identifier	isParticle		63805	1					
ANR	64181	ArgumentList			63805	1					
ANR	64182	CompoundStatement		94:28:3749:3749	63805	1					
ANR	64183	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	415:32:19259:19347	63805	0	True				
ANR	64184	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		63805	0					
ANR	64185	Callee	axutil_stream_write		63805	0					
ANR	64186	Identifier	axutil_stream_write		63805	0					
ANR	64187	ArgumentList	stream		63805	1					
ANR	64188	Argument	stream		63805	0					
ANR	64189	Identifier	stream		63805	0					
ANR	64190	Argument	Environment :: getEnv ( )		63805	1					
ANR	64191	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64192	Callee	Environment :: getEnv		63805	0					
ANR	64193	Identifier	Environment :: getEnv		63805	0					
ANR	64194	ArgumentList			63805	1					
ANR	64195	Argument	start_input_str		63805	2					
ANR	64196	Identifier	start_input_str		63805	0					
ANR	64197	Argument	start_input_str_len		63805	3					
ANR	64198	Identifier	start_input_str_len		63805	0					
ANR	64199	ExpressionStatement	"property_Code -> serialize ( current_node , parent_element , property_Code -> isParticle ( ) || false , namespaces , next_ns_index )"	417:28:19407:19607	63805	7	True				
ANR	64200	CallExpression	"property_Code -> serialize ( current_node , parent_element , property_Code -> isParticle ( ) || false , namespaces , next_ns_index )"		63805	0					
ANR	64201	Callee	property_Code -> serialize		63805	0					
ANR	64202	PtrMemberAccess	property_Code -> serialize		63805	0					
ANR	64203	Identifier	property_Code		63805	0					
ANR	64204	Identifier	serialize		63805	1					
ANR	64205	ArgumentList	current_node		63805	1					
ANR	64206	Argument	current_node		63805	0					
ANR	64207	Identifier	current_node		63805	0					
ANR	64208	Argument	parent_element		63805	1					
ANR	64209	Identifier	parent_element		63805	0					
ANR	64210	Argument	property_Code -> isParticle ( ) || false		63805	2					
ANR	64211	OrExpression	property_Code -> isParticle ( ) || false		63805	0		||			
ANR	64212	CallExpression	property_Code -> isParticle ( )		63805	0					
ANR	64213	Callee	property_Code -> isParticle		63805	0					
ANR	64214	PtrMemberAccess	property_Code -> isParticle		63805	0					
ANR	64215	Identifier	property_Code		63805	0					
ANR	64216	Identifier	isParticle		63805	1					
ANR	64217	ArgumentList			63805	1					
ANR	64218	Identifier	false		63805	1					
ANR	64219	Argument	namespaces		63805	3					
ANR	64220	Identifier	namespaces		63805	0					
ANR	64221	Argument	next_ns_index		63805	4					
ANR	64222	Identifier	next_ns_index		63805	0					
ANR	64223	IfStatement	if ( ! property_Code -> isParticle ( ) )		63805	8					
ANR	64224	Condition	! property_Code -> isParticle ( )	420:31:19669:19696	63805	0	True				
ANR	64225	UnaryOperationExpression	! property_Code -> isParticle ( )		63805	0					
ANR	64226	UnaryOperator	!		63805	0					
ANR	64227	CallExpression	property_Code -> isParticle ( )		63805	1					
ANR	64228	Callee	property_Code -> isParticle		63805	0					
ANR	64229	PtrMemberAccess	property_Code -> isParticle		63805	0					
ANR	64230	Identifier	property_Code		63805	0					
ANR	64231	Identifier	isParticle		63805	1					
ANR	64232	ArgumentList			63805	1					
ANR	64233	CompoundStatement		101:28:4251:4251	63805	1					
ANR	64234	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	422:32:19761:19845	63805	0	True				
ANR	64235	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		63805	0					
ANR	64236	Callee	axutil_stream_write		63805	0					
ANR	64237	Identifier	axutil_stream_write		63805	0					
ANR	64238	ArgumentList	stream		63805	1					
ANR	64239	Argument	stream		63805	0					
ANR	64240	Identifier	stream		63805	0					
ANR	64241	Argument	Environment :: getEnv ( )		63805	1					
ANR	64242	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64243	Callee	Environment :: getEnv		63805	0					
ANR	64244	Identifier	Environment :: getEnv		63805	0					
ANR	64245	ArgumentList			63805	1					
ANR	64246	Argument	end_input_str		63805	2					
ANR	64247	Identifier	end_input_str		63805	0					
ANR	64248	Argument	end_input_str_len		63805	3					
ANR	64249	Identifier	end_input_str_len		63805	0					
ANR	64250	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	426:21:19949:20009	63805	9	True				
ANR	64251	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		63805	0					
ANR	64252	Callee	AXIS2_FREE		63805	0					
ANR	64253	Identifier	AXIS2_FREE		63805	0					
ANR	64254	ArgumentList	Environment :: getEnv ( ) -> allocator		63805	1					
ANR	64255	Argument	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64256	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64257	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64258	Callee	Environment :: getEnv		63805	0					
ANR	64259	Identifier	Environment :: getEnv		63805	0					
ANR	64260	ArgumentList			63805	1					
ANR	64261	Identifier	allocator		63805	1					
ANR	64262	Argument	start_input_str		63805	1					
ANR	64263	Identifier	start_input_str		63805	0					
ANR	64264	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	427:21:20032:20090	63805	10	True				
ANR	64265	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		63805	0					
ANR	64266	Callee	AXIS2_FREE		63805	0					
ANR	64267	Identifier	AXIS2_FREE		63805	0					
ANR	64268	ArgumentList	Environment :: getEnv ( ) -> allocator		63805	1					
ANR	64269	Argument	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64270	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64271	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64272	Callee	Environment :: getEnv		63805	0					
ANR	64273	Identifier	Environment :: getEnv		63805	0					
ANR	64274	ArgumentList			63805	1					
ANR	64275	Identifier	allocator		63805	1					
ANR	64276	Argument	end_input_str		63805	1					
ANR	64277	Identifier	end_input_str		63805	0					
ANR	64278	ExpressionStatement	p_prefix = NULL	431:23:20154:20169	63805	24	True				
ANR	64279	AssignmentExpression	p_prefix = NULL		63805	0		=			
ANR	64280	Identifier	p_prefix		63805	0					
ANR	64281	Identifier	NULL		63805	1					
ANR	64282	IfStatement	if ( ! isValidText )		63805	25					
ANR	64283	Condition	! isValidText	434:23:20218:20229	63805	0	True				
ANR	64284	UnaryOperationExpression	! isValidText		63805	0					
ANR	64285	UnaryOperator	!		63805	0					
ANR	64286	Identifier	isValidText		63805	1					
ANR	64287	CompoundStatement		115:19:4775:4775	63805	1					
ANR	64288	ElseStatement	else		63805	0					
ANR	64289	CompoundStatement		122:19:4997:4997	63805	0					
ANR	64290	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" ) ) )"	443:21:20496:20721	63805	0	True				
ANR	64291	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" ) ) )"		63805	0		=			
ANR	64292	Identifier	start_input_str		63805	0					
ANR	64293	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" ) ) )"		63805	1					
ANR	64294	CastTarget	axis2_char_t *		63805	0					
ANR	64295	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" ) ) )"		63805	1					
ANR	64296	Callee	AXIS2_MALLOC		63805	0					
ANR	64297	Identifier	AXIS2_MALLOC		63805	0					
ANR	64298	ArgumentList	Environment :: getEnv ( ) -> allocator		63805	1					
ANR	64299	Argument	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64300	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64301	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64302	Callee	Environment :: getEnv		63805	0					
ANR	64303	Identifier	Environment :: getEnv		63805	0					
ANR	64304	ArgumentList			63805	1					
ANR	64305	Identifier	allocator		63805	1					
ANR	64306	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" ) )"		63805	1					
ANR	64307	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" ) )"		63805	0		*			
ANR	64308	SizeofExpression	sizeof ( axis2_char_t )		63805	0					
ANR	64309	Sizeof	sizeof		63805	0					
ANR	64310	SizeofOperand	axis2_char_t		63805	1					
ANR	64311	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" )"		63805	1		+			
ANR	64312	PrimaryExpression	4		63805	0					
ANR	64313	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" )"		63805	1		+			
ANR	64314	CallExpression	axutil_strlen ( p_prefix )		63805	0					
ANR	64315	Callee	axutil_strlen		63805	0					
ANR	64316	Identifier	axutil_strlen		63805	0					
ANR	64317	ArgumentList	p_prefix		63805	1					
ANR	64318	Argument	p_prefix		63805	0					
ANR	64319	Identifier	p_prefix		63805	0					
ANR	64320	CallExpression	"axutil_strlen ( ""text"" )"		63805	1					
ANR	64321	Callee	axutil_strlen		63805	0					
ANR	64322	Identifier	axutil_strlen		63805	0					
ANR	64323	ArgumentList	"""text"""		63805	1					
ANR	64324	Argument	"""text"""		63805	0					
ANR	64325	PrimaryExpression	"""text"""		63805	0					
ANR	64326	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" ) ) )"	448:21:20847:21035	63805	1	True				
ANR	64327	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" ) ) )"		63805	0		=			
ANR	64328	Identifier	end_input_str		63805	0					
ANR	64329	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" ) ) )"		63805	1					
ANR	64330	CastTarget	axis2_char_t *		63805	0					
ANR	64331	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" ) ) )"		63805	1					
ANR	64332	Callee	AXIS2_MALLOC		63805	0					
ANR	64333	Identifier	AXIS2_MALLOC		63805	0					
ANR	64334	ArgumentList	Environment :: getEnv ( ) -> allocator		63805	1					
ANR	64335	Argument	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64336	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64337	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64338	Callee	Environment :: getEnv		63805	0					
ANR	64339	Identifier	Environment :: getEnv		63805	0					
ANR	64340	ArgumentList			63805	1					
ANR	64341	Identifier	allocator		63805	1					
ANR	64342	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" ) )"		63805	1					
ANR	64343	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" ) )"		63805	0		*			
ANR	64344	SizeofExpression	sizeof ( axis2_char_t )		63805	0					
ANR	64345	Sizeof	sizeof		63805	0					
ANR	64346	SizeofOperand	axis2_char_t		63805	1					
ANR	64347	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" )"		63805	1		+			
ANR	64348	PrimaryExpression	5		63805	0					
ANR	64349	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""text"" )"		63805	1		+			
ANR	64350	CallExpression	axutil_strlen ( p_prefix )		63805	0					
ANR	64351	Callee	axutil_strlen		63805	0					
ANR	64352	Identifier	axutil_strlen		63805	0					
ANR	64353	ArgumentList	p_prefix		63805	1					
ANR	64354	Argument	p_prefix		63805	0					
ANR	64355	Identifier	p_prefix		63805	0					
ANR	64356	CallExpression	"axutil_strlen ( ""text"" )"		63805	1					
ANR	64357	Callee	axutil_strlen		63805	0					
ANR	64358	Identifier	axutil_strlen		63805	0					
ANR	64359	ArgumentList	"""text"""		63805	1					
ANR	64360	Argument	"""text"""		63805	0					
ANR	64361	PrimaryExpression	"""text"""		63805	0					
ANR	64362	ExpressionStatement	"sprintf ( start_input_str , ""<%s%stext>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	463:28:21392:21568	63805	2	True				
ANR	64363	CallExpression	"sprintf ( start_input_str , ""<%s%stext>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		63805	0					
ANR	64364	Callee	sprintf		63805	0					
ANR	64365	Identifier	sprintf		63805	0					
ANR	64366	ArgumentList	start_input_str		63805	1					
ANR	64367	Argument	start_input_str		63805	0					
ANR	64368	Identifier	start_input_str		63805	0					
ANR	64369	Argument	"""<%s%stext>"""		63805	1					
ANR	64370	PrimaryExpression	"""<%s%stext>"""		63805	0					
ANR	64371	Argument	"p_prefix ? p_prefix : """""		63805	2					
ANR	64372	ConditionalExpression	"p_prefix ? p_prefix : """""		63805	0					
ANR	64373	Condition	p_prefix		63805	0					
ANR	64374	Identifier	p_prefix		63805	0					
ANR	64375	Identifier	p_prefix		63805	1					
ANR	64376	PrimaryExpression	""""""		63805	2					
ANR	64377	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		63805	3					
ANR	64378	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		63805	0					
ANR	64379	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		63805	0					
ANR	64380	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		63805	0		&&			
ANR	64381	Identifier	p_prefix		63805	0					
ANR	64382	CallExpression	"axutil_strcmp ( p_prefix , """" )"		63805	1					
ANR	64383	Callee	axutil_strcmp		63805	0					
ANR	64384	Identifier	axutil_strcmp		63805	0					
ANR	64385	ArgumentList	p_prefix		63805	1					
ANR	64386	Argument	p_prefix		63805	0					
ANR	64387	Identifier	p_prefix		63805	0					
ANR	64388	Argument	""""""		63805	1					
ANR	64389	PrimaryExpression	""""""		63805	0					
ANR	64390	PrimaryExpression	""":"""		63805	1					
ANR	64391	PrimaryExpression	""""""		63805	2					
ANR	64392	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	467:24:21623:21675	63805	3	True				
ANR	64393	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		63805	0		=			
ANR	64394	Identifier	start_input_str_len		63805	0					
ANR	64395	CallExpression	axutil_strlen ( start_input_str )		63805	1					
ANR	64396	Callee	axutil_strlen		63805	0					
ANR	64397	Identifier	axutil_strlen		63805	0					
ANR	64398	ArgumentList	start_input_str		63805	1					
ANR	64399	Argument	start_input_str		63805	0					
ANR	64400	Identifier	start_input_str		63805	0					
ANR	64401	ExpressionStatement	"sprintf ( end_input_str , ""</%s%stext>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	468:24:21701:21876	63805	4	True				
ANR	64402	CallExpression	"sprintf ( end_input_str , ""</%s%stext>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		63805	0					
ANR	64403	Callee	sprintf		63805	0					
ANR	64404	Identifier	sprintf		63805	0					
ANR	64405	ArgumentList	end_input_str		63805	1					
ANR	64406	Argument	end_input_str		63805	0					
ANR	64407	Identifier	end_input_str		63805	0					
ANR	64408	Argument	"""</%s%stext>"""		63805	1					
ANR	64409	PrimaryExpression	"""</%s%stext>"""		63805	0					
ANR	64410	Argument	"p_prefix ? p_prefix : """""		63805	2					
ANR	64411	ConditionalExpression	"p_prefix ? p_prefix : """""		63805	0					
ANR	64412	Condition	p_prefix		63805	0					
ANR	64413	Identifier	p_prefix		63805	0					
ANR	64414	Identifier	p_prefix		63805	1					
ANR	64415	PrimaryExpression	""""""		63805	2					
ANR	64416	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		63805	3					
ANR	64417	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		63805	0					
ANR	64418	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		63805	0					
ANR	64419	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		63805	0		&&			
ANR	64420	Identifier	p_prefix		63805	0					
ANR	64421	CallExpression	"axutil_strcmp ( p_prefix , """" )"		63805	1					
ANR	64422	Callee	axutil_strcmp		63805	0					
ANR	64423	Identifier	axutil_strcmp		63805	0					
ANR	64424	ArgumentList	p_prefix		63805	1					
ANR	64425	Argument	p_prefix		63805	0					
ANR	64426	Identifier	p_prefix		63805	0					
ANR	64427	Argument	""""""		63805	1					
ANR	64428	PrimaryExpression	""""""		63805	0					
ANR	64429	PrimaryExpression	""":"""		63805	1					
ANR	64430	PrimaryExpression	""""""		63805	2					
ANR	64431	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	471:24:21902:21950	63805	5	True				
ANR	64432	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		63805	0		=			
ANR	64433	Identifier	end_input_str_len		63805	0					
ANR	64434	CallExpression	axutil_strlen ( end_input_str )		63805	1					
ANR	64435	Callee	axutil_strlen		63805	0					
ANR	64436	Identifier	axutil_strlen		63805	0					
ANR	64437	ArgumentList	end_input_str		63805	1					
ANR	64438	Argument	end_input_str		63805	0					
ANR	64439	Identifier	end_input_str		63805	0					
ANR	64440	ExpressionStatement	text_value_2 = ( axis2_char_t * ) property_Text . c_str ( )	473:27:22000:22051	63805	6	True				
ANR	64441	AssignmentExpression	text_value_2 = ( axis2_char_t * ) property_Text . c_str ( )		63805	0		=			
ANR	64442	Identifier	text_value_2		63805	0					
ANR	64443	CastExpression	( axis2_char_t * ) property_Text . c_str ( )		63805	1					
ANR	64444	CastTarget	axis2_char_t *		63805	0					
ANR	64445	CallExpression	property_Text . c_str ( )		63805	1					
ANR	64446	Callee	property_Text . c_str		63805	0					
ANR	64447	MemberAccess	property_Text . c_str		63805	0					
ANR	64448	Identifier	property_Text		63805	0					
ANR	64449	Identifier	c_str		63805	1					
ANR	64450	ArgumentList			63805	1					
ANR	64451	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	475:27:22108:22196	63805	7	True				
ANR	64452	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		63805	0					
ANR	64453	Callee	axutil_stream_write		63805	0					
ANR	64454	Identifier	axutil_stream_write		63805	0					
ANR	64455	ArgumentList	stream		63805	1					
ANR	64456	Argument	stream		63805	0					
ANR	64457	Identifier	stream		63805	0					
ANR	64458	Argument	Environment :: getEnv ( )		63805	1					
ANR	64459	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64460	Callee	Environment :: getEnv		63805	0					
ANR	64461	Identifier	Environment :: getEnv		63805	0					
ANR	64462	ArgumentList			63805	1					
ANR	64463	Argument	start_input_str		63805	2					
ANR	64464	Identifier	start_input_str		63805	0					
ANR	64465	Argument	start_input_str_len		63805	3					
ANR	64466	Identifier	start_input_str_len		63805	0					
ANR	64467	ExpressionStatement	"text_value_2_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_2 , true )"	478:27:22282:22368	63805	8	True				
ANR	64468	AssignmentExpression	"text_value_2_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_2 , true )"		63805	0		=			
ANR	64469	Identifier	text_value_2_temp		63805	0					
ANR	64470	CallExpression	"axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_2 , true )"		63805	1					
ANR	64471	Callee	axutil_xml_quote_string		63805	0					
ANR	64472	Identifier	axutil_xml_quote_string		63805	0					
ANR	64473	ArgumentList	Environment :: getEnv ( )		63805	1					
ANR	64474	Argument	Environment :: getEnv ( )		63805	0					
ANR	64475	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64476	Callee	Environment :: getEnv		63805	0					
ANR	64477	Identifier	Environment :: getEnv		63805	0					
ANR	64478	ArgumentList			63805	1					
ANR	64479	Argument	text_value_2		63805	1					
ANR	64480	Identifier	text_value_2		63805	0					
ANR	64481	Argument	true		63805	2					
ANR	64482	Identifier	true		63805	0					
ANR	64483	IfStatement	if ( text_value_2_temp )		63805	9					
ANR	64484	Condition	text_value_2_temp	479:31:22401:22417	63805	0	True				
ANR	64485	Identifier	text_value_2_temp		63805	0					
ANR	64486	CompoundStatement		160:27:6971:6971	63805	1					
ANR	64487	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2_temp , axutil_strlen ( text_value_2_temp ) )"	481:31:22480:22583	63805	0	True				
ANR	64488	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2_temp , axutil_strlen ( text_value_2_temp ) )"		63805	0					
ANR	64489	Callee	axutil_stream_write		63805	0					
ANR	64490	Identifier	axutil_stream_write		63805	0					
ANR	64491	ArgumentList	stream		63805	1					
ANR	64492	Argument	stream		63805	0					
ANR	64493	Identifier	stream		63805	0					
ANR	64494	Argument	Environment :: getEnv ( )		63805	1					
ANR	64495	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64496	Callee	Environment :: getEnv		63805	0					
ANR	64497	Identifier	Environment :: getEnv		63805	0					
ANR	64498	ArgumentList			63805	1					
ANR	64499	Argument	text_value_2_temp		63805	2					
ANR	64500	Identifier	text_value_2_temp		63805	0					
ANR	64501	Argument	axutil_strlen ( text_value_2_temp )		63805	3					
ANR	64502	CallExpression	axutil_strlen ( text_value_2_temp )		63805	0					
ANR	64503	Callee	axutil_strlen		63805	0					
ANR	64504	Identifier	axutil_strlen		63805	0					
ANR	64505	ArgumentList	text_value_2_temp		63805	1					
ANR	64506	Argument	text_value_2_temp		63805	0					
ANR	64507	Identifier	text_value_2_temp		63805	0					
ANR	64508	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_2_temp )"	482:31:22616:22679	63805	1	True				
ANR	64509	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_2_temp )"		63805	0					
ANR	64510	Callee	AXIS2_FREE		63805	0					
ANR	64511	Identifier	AXIS2_FREE		63805	0					
ANR	64512	ArgumentList	Environment :: getEnv ( ) -> allocator		63805	1					
ANR	64513	Argument	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64514	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64515	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64516	Callee	Environment :: getEnv		63805	0					
ANR	64517	Identifier	Environment :: getEnv		63805	0					
ANR	64518	ArgumentList			63805	1					
ANR	64519	Identifier	allocator		63805	1					
ANR	64520	Argument	text_value_2_temp		63805	1					
ANR	64521	Identifier	text_value_2_temp		63805	0					
ANR	64522	ElseStatement	else		63805	0					
ANR	64523	CompoundStatement		165:27:7293:7293	63805	0					
ANR	64524	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2 , axutil_strlen ( text_value_2 ) )"	486:31:22802:22895	63805	0	True				
ANR	64525	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2 , axutil_strlen ( text_value_2 ) )"		63805	0					
ANR	64526	Callee	axutil_stream_write		63805	0					
ANR	64527	Identifier	axutil_stream_write		63805	0					
ANR	64528	ArgumentList	stream		63805	1					
ANR	64529	Argument	stream		63805	0					
ANR	64530	Identifier	stream		63805	0					
ANR	64531	Argument	Environment :: getEnv ( )		63805	1					
ANR	64532	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64533	Callee	Environment :: getEnv		63805	0					
ANR	64534	Identifier	Environment :: getEnv		63805	0					
ANR	64535	ArgumentList			63805	1					
ANR	64536	Argument	text_value_2		63805	2					
ANR	64537	Identifier	text_value_2		63805	0					
ANR	64538	Argument	axutil_strlen ( text_value_2 )		63805	3					
ANR	64539	CallExpression	axutil_strlen ( text_value_2 )		63805	0					
ANR	64540	Callee	axutil_strlen		63805	0					
ANR	64541	Identifier	axutil_strlen		63805	0					
ANR	64542	ArgumentList	text_value_2		63805	1					
ANR	64543	Argument	text_value_2		63805	0					
ANR	64544	Identifier	text_value_2		63805	0					
ANR	64545	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	489:27:22981:23065	63805	10	True				
ANR	64546	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		63805	0					
ANR	64547	Callee	axutil_stream_write		63805	0					
ANR	64548	Identifier	axutil_stream_write		63805	0					
ANR	64549	ArgumentList	stream		63805	1					
ANR	64550	Argument	stream		63805	0					
ANR	64551	Identifier	stream		63805	0					
ANR	64552	Argument	Environment :: getEnv ( )		63805	1					
ANR	64553	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64554	Callee	Environment :: getEnv		63805	0					
ANR	64555	Identifier	Environment :: getEnv		63805	0					
ANR	64556	ArgumentList			63805	1					
ANR	64557	Argument	end_input_str		63805	2					
ANR	64558	Identifier	end_input_str		63805	0					
ANR	64559	Argument	end_input_str_len		63805	3					
ANR	64560	Identifier	end_input_str_len		63805	0					
ANR	64561	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	492:21:23138:23198	63805	11	True				
ANR	64562	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		63805	0					
ANR	64563	Callee	AXIS2_FREE		63805	0					
ANR	64564	Identifier	AXIS2_FREE		63805	0					
ANR	64565	ArgumentList	Environment :: getEnv ( ) -> allocator		63805	1					
ANR	64566	Argument	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64567	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64568	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64569	Callee	Environment :: getEnv		63805	0					
ANR	64570	Identifier	Environment :: getEnv		63805	0					
ANR	64571	ArgumentList			63805	1					
ANR	64572	Identifier	allocator		63805	1					
ANR	64573	Argument	start_input_str		63805	1					
ANR	64574	Identifier	start_input_str		63805	0					
ANR	64575	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	493:21:23221:23279	63805	12	True				
ANR	64576	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		63805	0					
ANR	64577	Callee	AXIS2_FREE		63805	0					
ANR	64578	Identifier	AXIS2_FREE		63805	0					
ANR	64579	ArgumentList	Environment :: getEnv ( ) -> allocator		63805	1					
ANR	64580	Argument	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64581	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		63805	0					
ANR	64582	CallExpression	Environment :: getEnv ( )		63805	0					
ANR	64583	Callee	Environment :: getEnv		63805	0					
ANR	64584	Identifier	Environment :: getEnv		63805	0					
ANR	64585	ArgumentList			63805	1					
ANR	64586	Identifier	allocator		63805	1					
ANR	64587	Argument	end_input_str		63805	1					
ANR	64588	Identifier	end_input_str		63805	0					
ANR	64589	ReturnStatement	return parent ;	498:12:23333:23346	63805	26	True				
ANR	64590	Identifier	parent		63805	0					
ANR	64591	ReturnType	WSF_CALL		63805	1					
ANR	64592	Identifier	AviaryCommon :: Status :: serialize		63805	2					
ANR	64593	ParameterList	"axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index"		63805	3					
ANR	64594	Parameter	axiom_node_t * parent	316:33:15326:15345	63805	0	True				
ANR	64595	ParameterType	axiom_node_t *		63805	0					
ANR	64596	Identifier	parent		63805	1					
ANR	64597	Parameter	axiom_element_t * parent_element	317:3:15352:15382	63805	1	True				
ANR	64598	ParameterType	axiom_element_t *		63805	0					
ANR	64599	Identifier	parent_element		63805	1					
ANR	64600	Parameter	int parent_tag_closed	318:3:15389:15409	63805	2	True				
ANR	64601	ParameterType	int		63805	0					
ANR	64602	Identifier	parent_tag_closed		63805	1					
ANR	64603	Parameter	axutil_hash_t * namespaces	319:3:15416:15440	63805	3	True				
ANR	64604	ParameterType	axutil_hash_t *		63805	0					
ANR	64605	Identifier	namespaces		63805	1					
ANR	64606	Parameter	int * next_ns_index	320:3:15447:15464	63805	4	True				
ANR	64607	ParameterType	int *		63805	0					
ANR	64608	Identifier	next_ns_index		63805	1					
ANR	64609	CFGEntryNode	ENTRY		63805		True				
ANR	64610	CFGExitNode	EXIT		63805		True				
ANR	64611	Symbol	parent		63805						
ANR	64612	Symbol	Environment :: getEnv		63805						
ANR	64613	Symbol	current_node		63805						
ANR	64614	Symbol	qname_uri		63805						
ANR	64615	Symbol	property_Text . c_str		63805						
ANR	64616	Symbol	axutil_strlen		63805						
ANR	64617	Symbol	p_prefix		63805						
ANR	64618	Symbol	ns1		63805						
ANR	64619	Symbol	axiom_node_get_data_element		63805						
ANR	64620	Symbol	property_Code		63805						
ANR	64621	Symbol	text_value_2		63805						
ANR	64622	Symbol	WSF_LOG_SI		63805						
ANR	64623	Symbol	stream		63805						
ANR	64624	Symbol	text_value_1		63805						
ANR	64625	Symbol	AXIS2_MALLOC		63805						
ANR	64626	Symbol	Environment :: getEnv ( ) -> allocator		63805						
ANR	64627	Symbol	property_Text		63805						
ANR	64628	Symbol	* property_Code		63805						
ANR	64629	Symbol	parent_element		63805						
ANR	64630	Symbol	axiom_data_source_get_stream		63805						
ANR	64631	Symbol	property_Code -> isParticle		63805						
ANR	64632	Symbol	NULL		63805						
ANR	64633	Symbol	end_input_str_len		63805						
ANR	64634	Symbol	tag_closed		63805						
ANR	64635	Symbol	false		63805						
ANR	64636	Symbol	start_input_str		63805						
ANR	64637	Symbol	parent_tag_closed		63805						
ANR	64638	Symbol	next_ns_index		63805						
ANR	64639	Symbol	Environment :: getEnv ( ) -> log		63805						
ANR	64640	Symbol	string_to_stream		63805						
ANR	64641	Symbol	data_source		63805						
ANR	64642	Symbol	isValidText		63805						
ANR	64643	Symbol	start_input_str_len		63805						
ANR	64644	Symbol	axutil_xml_quote_string		63805						
ANR	64645	Symbol	qname_prefix		63805						
ANR	64646	Symbol	text_value_2_temp		63805						
ANR	64647	Symbol	isValidCode		63805						
ANR	64648	Symbol	* Environment :: getEnv		63805						
ANR	64649	Symbol	axutil_strcmp		63805						
ANR	64650	Symbol	end_input_str		63805						
ANR	64651	Symbol	true		63805						
ANR	64652	Symbol	namespaces		63805						
ANR	64653	Function	AviaryCommon :: Status :: getProperty1	507:42:23497:23615							
ANR	64654	FunctionDef	AviaryCommon :: Status :: getProperty1 ()		64653	0					
ANR	64655	CompoundStatement		509:12:23567:23615	64653	0					
ANR	64656	ReturnStatement	return getCode ( ) ;	510:16:23585:23601	64653	0	True				
ANR	64657	CallExpression	getCode ( )		64653	0					
ANR	64658	Callee	getCode		64653	0					
ANR	64659	Identifier	getCode		64653	0					
ANR	64660	ArgumentList			64653	1					
ANR	64661	ReturnType	WSF_CALL		64653	1					
ANR	64662	Identifier	AviaryCommon :: Status :: getProperty1		64653	2					
ANR	64663	ParameterList			64653	3					
ANR	64664	CFGEntryNode	ENTRY		64653		True				
ANR	64665	CFGExitNode	EXIT		64653		True				
ANR	64666	Symbol	getCode		64653						
ANR	64667	Function	AviaryCommon :: Status :: getCode	516:42:23724:23843							
ANR	64668	FunctionDef	AviaryCommon :: Status :: getCode ()		64667	0					
ANR	64669	CompoundStatement		518:13:23790:23843	64667	0					
ANR	64670	ReturnStatement	return property_Code ;	519:16:23808:23828	64667	0	True				
ANR	64671	Identifier	property_Code		64667	0					
ANR	64672	ReturnType	WSF_CALL		64667	1					
ANR	64673	Identifier	AviaryCommon :: Status :: getCode		64667	2					
ANR	64674	ParameterList			64667	3					
ANR	64675	CFGEntryNode	ENTRY		64667		True				
ANR	64676	CFGExitNode	EXIT		64667		True				
ANR	64677	Symbol	property_Code		64667						
ANR	64678	Function	AviaryCommon :: Status :: setCode	525:12:23921:24993							
ANR	64679	FunctionDef	AviaryCommon :: Status :: setCode (AviaryCommon :: StatusCodeType * arg_Code)		64678	0					
ANR	64680	CompoundStatement		528:13:24052:24993	64678	0					
ANR	64681	IfStatement	if ( isValidCode && arg_Code == property_Code )		64678	0					
ANR	64682	Condition	isValidCode && arg_Code == property_Code	531:19:24091:24154	64678	0	True				
ANR	64683	AndExpression	isValidCode && arg_Code == property_Code		64678	0		&&			
ANR	64684	Identifier	isValidCode		64678	0					
ANR	64685	EqualityExpression	arg_Code == property_Code		64678	1		==			
ANR	64686	Identifier	arg_Code		64678	0					
ANR	64687	Identifier	property_Code		64678	1					
ANR	64688	CompoundStatement		6:16:120:120	64678	1					
ANR	64689	ReturnStatement	return true ;	535:20:24216:24227	64678	0	True				
ANR	64690	Identifier	true		64678	0					
ANR	64691	IfStatement	if ( NULL == arg_Code )		64678	1					
ANR	64692	Condition	NULL == arg_Code	539:21:24286:24301	64678	0	True				
ANR	64693	EqualityExpression	NULL == arg_Code		64678	0		==			
ANR	64694	Identifier	NULL		64678	0					
ANR	64695	Identifier	arg_Code		64678	1					
ANR	64696	CompoundStatement		14:18:293:293	64678	1					
ANR	64697	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""code is being set to NULL, but it is not a nullable element"" )"	542:22:24370:24489	64678	0	True				
ANR	64698	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""code is being set to NULL, but it is not a nullable element"" )"		64678	0					
ANR	64699	Callee	WSF_LOG_ERROR_MSG		64678	0					
ANR	64700	Identifier	WSF_LOG_ERROR_MSG		64678	0					
ANR	64701	ArgumentList	Environment :: getEnv ( ) -> log		64678	1					
ANR	64702	Argument	Environment :: getEnv ( ) -> log		64678	0					
ANR	64703	PtrMemberAccess	Environment :: getEnv ( ) -> log		64678	0					
ANR	64704	CallExpression	Environment :: getEnv ( )		64678	0					
ANR	64705	Callee	Environment :: getEnv		64678	0					
ANR	64706	Identifier	Environment :: getEnv		64678	0					
ANR	64707	ArgumentList			64678	1					
ANR	64708	Identifier	log		64678	1					
ANR	64709	Argument	WSF_LOG_SI		64678	1					
ANR	64710	Identifier	WSF_LOG_SI		64678	0					
ANR	64711	Argument	"""code is being set to NULL, but it is not a nullable element"""		64678	2					
ANR	64712	PrimaryExpression	"""code is being set to NULL, but it is not a nullable element"""		64678	0					
ANR	64713	ReturnStatement	return AXIS2_FAILURE ;	543:22:24513:24533	64678	1	True				
ANR	64714	Identifier	AXIS2_FAILURE		64678	0					
ANR	64715	ExpressionStatement	resetCode ( )	548:16:24606:24617	64678	2	True				
ANR	64716	CallExpression	resetCode ( )		64678	0					
ANR	64717	Callee	resetCode		64678	0					
ANR	64718	Identifier	resetCode		64678	0					
ANR	64719	ArgumentList			64678	1					
ANR	64720	IfStatement	if ( NULL == arg_Code )		64678	3					
ANR	64721	Condition	NULL == arg_Code	551:23:24660:24675	64678	0	True				
ANR	64722	EqualityExpression	NULL == arg_Code		64678	0		==			
ANR	64723	Identifier	NULL		64678	0					
ANR	64724	Identifier	arg_Code		64678	1					
ANR	64725	CompoundStatement		26:16:667:667	64678	1					
ANR	64726	ReturnStatement	return true ;	555:20:24788:24799	64678	0	True				
ANR	64727	Identifier	true		64678	0					
ANR	64728	ExpressionStatement	property_Code = arg_Code	558:24:24860:24884	64678	4	True				
ANR	64729	AssignmentExpression	property_Code = arg_Code		64678	0		=			
ANR	64730	Identifier	property_Code		64678	0					
ANR	64731	Identifier	arg_Code		64678	1					
ANR	64732	ExpressionStatement	isValidCode = true	559:24:24910:24928	64678	5	True				
ANR	64733	AssignmentExpression	isValidCode = true		64678	0		=			
ANR	64734	Identifier	isValidCode		64678	0					
ANR	64735	Identifier	true		64678	1					
ANR	64736	ReturnStatement	return true ;	561:16:24967:24978	64678	6	True				
ANR	64737	Identifier	true		64678	0					
ANR	64738	ReturnType	bool WSF_CALL		64678	1					
ANR	64739	Identifier	AviaryCommon :: Status :: setCode		64678	2					
ANR	64740	ParameterList	AviaryCommon :: StatusCodeType * arg_Code		64678	3					
ANR	64741	Parameter	AviaryCommon :: StatusCodeType * arg_Code	527:20:23998:24036	64678	0	True				
ANR	64742	ParameterType	AviaryCommon :: StatusCodeType *		64678	0					
ANR	64743	Identifier	arg_Code		64678	1					
ANR	64744	CFGEntryNode	ENTRY		64678		True				
ANR	64745	CFGExitNode	EXIT		64678		True				
ANR	64746	Symbol	arg_Code		64678						
ANR	64747	Symbol	property_Code		64678						
ANR	64748	Symbol	Environment :: getEnv		64678						
ANR	64749	Symbol	NULL		64678						
ANR	64750	Symbol	WSF_LOG_SI		64678						
ANR	64751	Symbol	isValidCode		64678						
ANR	64752	Symbol	* Environment :: getEnv		64678						
ANR	64753	Symbol	true		64678						
ANR	64754	Symbol	Environment :: getEnv ( ) -> log		64678						
ANR	64755	Symbol	AXIS2_FAILURE		64678						
ANR	64756	Function	AviaryCommon :: Status :: resetCode	569:11:25084:25581							
ANR	64757	FunctionDef	AviaryCommon :: Status :: resetCode ()		64756	0					
ANR	64758	CompoundStatement		571:11:25154:25581	64756	0					
ANR	64759	IdentifierDeclStatement	int i = 0 ;	572:15:25171:25180	64756	0	True				
ANR	64760	IdentifierDecl	i = 0		64756	0					
ANR	64761	IdentifierDeclType	int		64756	0					
ANR	64762	Identifier	i		64756	1					
ANR	64763	AssignmentExpression	i = 0		64756	2		=			
ANR	64764	Identifier	i		64756	0					
ANR	64765	PrimaryExpression	0		64756	1					
ANR	64766	IdentifierDeclStatement	int count = 0 ;	573:15:25197:25210	64756	1	True				
ANR	64767	IdentifierDecl	count = 0		64756	0					
ANR	64768	IdentifierDeclType	int		64756	0					
ANR	64769	Identifier	count		64756	1					
ANR	64770	AssignmentExpression	count = 0		64756	2		=			
ANR	64771	Identifier	count		64756	0					
ANR	64772	PrimaryExpression	0		64756	1					
ANR	64773	IfStatement	if ( property_Code != NULL )		64756	2					
ANR	64774	Condition	property_Code != NULL	580:19:25280:25300	64756	0	True				
ANR	64775	EqualityExpression	property_Code != NULL		64756	0		!=			
ANR	64776	Identifier	property_Code		64756	0					
ANR	64777	Identifier	NULL		64756	1					
ANR	64778	CompoundStatement		11:16:164:164	64756	1					
ANR	64779	Statement	delete	584:25:25386:25391	64756	0	True				
ANR	64780	ExpressionStatement	property_Code	584:33:25394:25407	64756	1	True				
ANR	64781	Identifier	property_Code		64756	0					
ANR	64782	ExpressionStatement	isValidCode = false	592:15:25520:25539	64756	3	True				
ANR	64783	AssignmentExpression	isValidCode = false		64756	0		=			
ANR	64784	Identifier	isValidCode		64756	0					
ANR	64785	Identifier	false		64756	1					
ANR	64786	ReturnStatement	return true ;	593:15:25557:25568	64756	4	True				
ANR	64787	Identifier	true		64756	0					
ANR	64788	ReturnType	bool WSF_CALL		64756	1					
ANR	64789	Identifier	AviaryCommon :: Status :: resetCode		64756	2					
ANR	64790	ParameterList			64756	3					
ANR	64791	CFGEntryNode	ENTRY		64756		True				
ANR	64792	CFGExitNode	EXIT		64756		True				
ANR	64793	Symbol	property_Code		64756						
ANR	64794	Symbol	NULL		64756						
ANR	64795	Symbol	isValidCode		64756						
ANR	64796	Symbol	count		64756						
ANR	64797	Symbol	false		64756						
ANR	64798	Symbol	true		64756						
ANR	64799	Symbol	i		64756						
ANR	64800	Function	AviaryCommon :: Status :: isCodeNil	599:11:25666:25785							
ANR	64801	FunctionDef	AviaryCommon :: Status :: isCodeNil ()		64800	0					
ANR	64802	CompoundStatement		601:11:25736:25785	64800	0					
ANR	64803	ReturnStatement	return ! isValidCode ;	602:15:25753:25772	64800	0	True				
ANR	64804	UnaryOperationExpression	! isValidCode		64800	0					
ANR	64805	UnaryOperator	!		64800	0					
ANR	64806	Identifier	isValidCode		64800	1					
ANR	64807	ReturnType	bool WSF_CALL		64800	1					
ANR	64808	Identifier	AviaryCommon :: Status :: isCodeNil		64800	2					
ANR	64809	ParameterList			64800	3					
ANR	64810	CFGEntryNode	ENTRY		64800		True				
ANR	64811	CFGExitNode	EXIT		64800		True				
ANR	64812	Symbol	isValidCode		64800						
ANR	64813	Function	AviaryCommon :: Status :: setCodeNil	608:11:25890:26009							
ANR	64814	FunctionDef	AviaryCommon :: Status :: setCodeNil ()		64813	0					
ANR	64815	CompoundStatement		610:11:25961:26009	64813	0					
ANR	64816	ReturnStatement	return resetCode ( ) ;	611:15:25978:25996	64813	0	True				
ANR	64817	CallExpression	resetCode ( )		64813	0					
ANR	64818	Callee	resetCode		64813	0					
ANR	64819	Identifier	resetCode		64813	0					
ANR	64820	ArgumentList			64813	1					
ANR	64821	ReturnType	bool WSF_CALL		64813	1					
ANR	64822	Identifier	AviaryCommon :: Status :: setCodeNil		64813	2					
ANR	64823	ParameterList			64813	3					
ANR	64824	CFGEntryNode	ENTRY		64813		True				
ANR	64825	CFGExitNode	EXIT		64813		True				
ANR	64826	Symbol	resetCode		64813						
ANR	64827	Function	AviaryCommon :: Status :: getProperty2	619:12:26122:26252							
ANR	64828	FunctionDef	AviaryCommon :: Status :: getProperty2 ()		64827	0					
ANR	64829	CompoundStatement		621:12:26204:26252	64827	0					
ANR	64830	ReturnStatement	return getText ( ) ;	622:16:26222:26238	64827	0	True				
ANR	64831	CallExpression	getText ( )		64827	0					
ANR	64832	Callee	getText		64827	0					
ANR	64833	Identifier	getText		64827	0					
ANR	64834	ArgumentList			64827	1					
ANR	64835	ReturnType	std :: string WSF_CALL		64827	1					
ANR	64836	Identifier	AviaryCommon :: Status :: getProperty2		64827	2					
ANR	64837	ParameterList			64827	3					
ANR	64838	CFGEntryNode	ENTRY		64827		True				
ANR	64839	CFGExitNode	EXIT		64827		True				
ANR	64840	Symbol	getText		64827						
ANR	64841	Function	AviaryCommon :: Status :: getText	628:12:26331:26462							
ANR	64842	FunctionDef	AviaryCommon :: Status :: getText ()		64841	0					
ANR	64843	CompoundStatement		630:13:26409:26462	64841	0					
ANR	64844	ReturnStatement	return property_Text ;	631:16:26427:26447	64841	0	True				
ANR	64845	Identifier	property_Text		64841	0					
ANR	64846	ReturnType	std :: string WSF_CALL		64841	1					
ANR	64847	Identifier	AviaryCommon :: Status :: getText		64841	2					
ANR	64848	ParameterList			64841	3					
ANR	64849	CFGEntryNode	ENTRY		64841		True				
ANR	64850	CFGExitNode	EXIT		64841		True				
ANR	64851	Symbol	property_Text		64841						
ANR	64852	Function	AviaryCommon :: Status :: setText	637:12:26540:27115							
ANR	64853	FunctionDef	AviaryCommon :: Status :: setText (const std :: string arg_Text)		64852	0					
ANR	64854	CompoundStatement		640:13:26659:27115	64852	0					
ANR	64855	IfStatement	if ( isValidText && arg_Text == property_Text )		64852	0					
ANR	64856	Condition	isValidText && arg_Text == property_Text	643:19:26698:26761	64852	0	True				
ANR	64857	AndExpression	isValidText && arg_Text == property_Text		64852	0		&&			
ANR	64858	Identifier	isValidText		64852	0					
ANR	64859	EqualityExpression	arg_Text == property_Text		64852	1		==			
ANR	64860	Identifier	arg_Text		64852	0					
ANR	64861	Identifier	property_Text		64852	1					
ANR	64862	CompoundStatement		6:16:120:120	64852	1					
ANR	64863	ReturnStatement	return true ;	647:20:26823:26834	64852	0	True				
ANR	64864	Identifier	true		64852	0					
ANR	64865	ExpressionStatement	resetText ( )	653:16:26906:26917	64852	1	True				
ANR	64866	CallExpression	resetText ( )		64852	0					
ANR	64867	Callee	resetText		64852	0					
ANR	64868	Identifier	resetText		64852	0					
ANR	64869	ArgumentList			64852	1					
ANR	64870	ExpressionStatement	property_Text = std :: string ( arg_Text . c_str ( ) )	656:24:26961:27006	64852	2	True				
ANR	64871	AssignmentExpression	property_Text = std :: string ( arg_Text . c_str ( ) )		64852	0		=			
ANR	64872	Identifier	property_Text		64852	0					
ANR	64873	CallExpression	std :: string ( arg_Text . c_str ( ) )		64852	1					
ANR	64874	Callee	std :: string		64852	0					
ANR	64875	Identifier	std :: string		64852	0					
ANR	64876	ArgumentList	arg_Text . c_str ( )		64852	1					
ANR	64877	Argument	arg_Text . c_str ( )		64852	0					
ANR	64878	CallExpression	arg_Text . c_str ( )		64852	0					
ANR	64879	Callee	arg_Text . c_str		64852	0					
ANR	64880	MemberAccess	arg_Text . c_str		64852	0					
ANR	64881	Identifier	arg_Text		64852	0					
ANR	64882	Identifier	c_str		64852	1					
ANR	64883	ArgumentList			64852	1					
ANR	64884	ExpressionStatement	isValidText = true	657:24:27032:27050	64852	3	True				
ANR	64885	AssignmentExpression	isValidText = true		64852	0		=			
ANR	64886	Identifier	isValidText		64852	0					
ANR	64887	Identifier	true		64852	1					
ANR	64888	ReturnStatement	return true ;	659:16:27089:27100	64852	4	True				
ANR	64889	Identifier	true		64852	0					
ANR	64890	ReturnType	bool WSF_CALL		64852	1					
ANR	64891	Identifier	AviaryCommon :: Status :: setText		64852	2					
ANR	64892	ParameterList	const std :: string arg_Text		64852	3					
ANR	64893	Parameter	const std :: string arg_Text	639:20:26617:26643	64852	0	True				
ANR	64894	ParameterType	const std :: string		64852	0					
ANR	64895	Identifier	arg_Text		64852	1					
ANR	64896	CFGEntryNode	ENTRY		64852		True				
ANR	64897	CFGExitNode	EXIT		64852		True				
ANR	64898	Symbol	arg_Text . c_str		64852						
ANR	64899	Symbol	std :: string		64852						
ANR	64900	Symbol	true		64852						
ANR	64901	Symbol	property_Text		64852						
ANR	64902	Symbol	arg_Text		64852						
ANR	64903	Symbol	isValidText		64852						
ANR	64904	Function	AviaryCommon :: Status :: resetText	667:11:27206:27428							
ANR	64905	FunctionDef	AviaryCommon :: Status :: resetText ()		64904	0					
ANR	64906	CompoundStatement		669:11:27276:27428	64904	0					
ANR	64907	IdentifierDeclStatement	int i = 0 ;	670:15:27293:27302	64904	0	True				
ANR	64908	IdentifierDecl	i = 0		64904	0					
ANR	64909	IdentifierDeclType	int		64904	0					
ANR	64910	Identifier	i		64904	1					
ANR	64911	AssignmentExpression	i = 0		64904	2		=			
ANR	64912	Identifier	i		64904	0					
ANR	64913	PrimaryExpression	0		64904	1					
ANR	64914	IdentifierDeclStatement	int count = 0 ;	671:15:27319:27332	64904	1	True				
ANR	64915	IdentifierDecl	count = 0		64904	0					
ANR	64916	IdentifierDeclType	int		64904	0					
ANR	64917	Identifier	count		64904	1					
ANR	64918	AssignmentExpression	count = 0		64904	2		=			
ANR	64919	Identifier	count		64904	0					
ANR	64920	PrimaryExpression	0		64904	1					
ANR	64921	ExpressionStatement	isValidText = false	675:15:27367:27386	64904	2	True				
ANR	64922	AssignmentExpression	isValidText = false		64904	0		=			
ANR	64923	Identifier	isValidText		64904	0					
ANR	64924	Identifier	false		64904	1					
ANR	64925	ReturnStatement	return true ;	676:15:27404:27415	64904	3	True				
ANR	64926	Identifier	true		64904	0					
ANR	64927	ReturnType	bool WSF_CALL		64904	1					
ANR	64928	Identifier	AviaryCommon :: Status :: resetText		64904	2					
ANR	64929	ParameterList			64904	3					
ANR	64930	CFGEntryNode	ENTRY		64904		True				
ANR	64931	CFGExitNode	EXIT		64904		True				
ANR	64932	Symbol	count		64904						
ANR	64933	Symbol	false		64904						
ANR	64934	Symbol	true		64904						
ANR	64935	Symbol	i		64904						
ANR	64936	Symbol	isValidText		64904						
ANR	64937	Function	AviaryCommon :: Status :: isTextNil	682:11:27513:27632							
ANR	64938	FunctionDef	AviaryCommon :: Status :: isTextNil ()		64937	0					
ANR	64939	CompoundStatement		684:11:27583:27632	64937	0					
ANR	64940	ReturnStatement	return ! isValidText ;	685:15:27600:27619	64937	0	True				
ANR	64941	UnaryOperationExpression	! isValidText		64937	0					
ANR	64942	UnaryOperator	!		64937	0					
ANR	64943	Identifier	isValidText		64937	1					
ANR	64944	ReturnType	bool WSF_CALL		64937	1					
ANR	64945	Identifier	AviaryCommon :: Status :: isTextNil		64937	2					
ANR	64946	ParameterList			64937	3					
ANR	64947	CFGEntryNode	ENTRY		64937		True				
ANR	64948	CFGExitNode	EXIT		64937		True				
ANR	64949	Symbol	isValidText		64937						
ANR	64950	Function	AviaryCommon :: Status :: setTextNil	691:11:27737:27856							
ANR	64951	FunctionDef	AviaryCommon :: Status :: setTextNil ()		64950	0					
ANR	64952	CompoundStatement		693:11:27808:27856	64950	0					
ANR	64953	ReturnStatement	return resetText ( ) ;	694:15:27825:27843	64950	0	True				
ANR	64954	CallExpression	resetText ( )		64950	0					
ANR	64955	Callee	resetText		64950	0					
ANR	64956	Identifier	resetText		64950	0					
ANR	64957	ArgumentList			64950	1					
ANR	64958	ReturnType	bool WSF_CALL		64950	1					
ANR	64959	Identifier	AviaryCommon :: Status :: setTextNil		64950	2					
ANR	64960	ParameterList			64950	3					
ANR	64961	CFGEntryNode	ENTRY		64950		True				
ANR	64962	CFGExitNode	EXIT		64950		True				
ANR	64963	Symbol	resetText		64950						
