command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3423914	File	data/converged/CVE-2011-4930_htcondor/src_condor_io_condor_secman.cpp								
ANR	3423915	DeclStmt									
ANR	3423916	Decl							extern bool	"extern bool ( int & len , unsigned char * & data )"	global_dc_get_cookie
ANR	3423917	DeclStmt									
ANR	3423918	Decl							char const	char const *	USE_TMP_SEC_SESSION
ANR	3423919	Function	SecMan :: key_printf	52:0:1654:2164							
ANR	3423920	FunctionDef	"SecMan :: key_printf (int debug_levels , KeyInfo * k)"		3423919	0					
ANR	3423921	CompoundStatement		52:54:1708:2164	3423919	0					
ANR	3423922	IfStatement	"if ( param_boolean ( ""SEC_DEBUG_PRINT_KEYS"" , false ) )"		3423919	0					
ANR	3423923	Condition	"param_boolean ( ""SEC_DEBUG_PRINT_KEYS"" , false )"	53:5:1715:1758	3423919	0	True				
ANR	3423924	CallExpression	"param_boolean ( ""SEC_DEBUG_PRINT_KEYS"" , false )"		3423919	0					
ANR	3423925	Callee	param_boolean		3423919	0					
ANR	3423926	Identifier	param_boolean		3423919	0					
ANR	3423927	ArgumentList	"""SEC_DEBUG_PRINT_KEYS"""		3423919	1					
ANR	3423928	Argument	"""SEC_DEBUG_PRINT_KEYS"""		3423919	0					
ANR	3423929	PrimaryExpression	"""SEC_DEBUG_PRINT_KEYS"""		3423919	0					
ANR	3423930	Argument	false		3423919	1					
ANR	3423931	Identifier	false		3423919	0					
ANR	3423932	CompoundStatement		2:51:52:52	3423919	1					
ANR	3423933	IfStatement	if ( k )		3423919	0					
ANR	3423934	Condition	k	54:6:1769:1769	3423919	0	True				
ANR	3423935	Identifier	k		3423919	0					
ANR	3423936	CompoundStatement		6:3:177:211	3423919	1					
ANR	3423937	IdentifierDeclStatement	char hexout [ 260 ] ;	55:3:1777:1793	3423919	0	True				
ANR	3423938	IdentifierDecl	hexout [ 260 ]		3423919	0					
ANR	3423939	IdentifierDeclType	char [ 260 ]		3423919	0					
ANR	3423940	Identifier	hexout		3423919	1					
ANR	3423941	PrimaryExpression	260		3423919	2					
ANR	3423942	IdentifierDeclStatement	const unsigned char * dataptr = k -> getKeyData ( ) ;	56:3:1835:1881	3423919	1	True				
ANR	3423943	IdentifierDecl	* dataptr = k -> getKeyData ( )		3423919	0					
ANR	3423944	IdentifierDeclType	const unsigned char *		3423919	0					
ANR	3423945	Identifier	dataptr		3423919	1					
ANR	3423946	AssignmentExpression	* dataptr = k -> getKeyData ( )		3423919	2		=			
ANR	3423947	Identifier	dataptr		3423919	0					
ANR	3423948	CallExpression	k -> getKeyData ( )		3423919	1					
ANR	3423949	Callee	k -> getKeyData		3423919	0					
ANR	3423950	PtrMemberAccess	k -> getKeyData		3423919	0					
ANR	3423951	Identifier	k		3423919	0					
ANR	3423952	Identifier	getKeyData		3423919	1					
ANR	3423953	ArgumentList			3423919	1					
ANR	3423954	IdentifierDeclStatement	int length = k -> getKeyLength ( ) ;	57:3:1886:1920	3423919	2	True				
ANR	3423955	IdentifierDecl	length = k -> getKeyLength ( )		3423919	0					
ANR	3423956	IdentifierDeclType	int		3423919	0					
ANR	3423957	Identifier	length		3423919	1					
ANR	3423958	AssignmentExpression	length = k -> getKeyLength ( )		3423919	2		=			
ANR	3423959	Identifier	length		3423919	0					
ANR	3423960	CallExpression	k -> getKeyLength ( )		3423919	1					
ANR	3423961	Callee	k -> getKeyLength		3423919	0					
ANR	3423962	PtrMemberAccess	k -> getKeyLength		3423919	0					
ANR	3423963	Identifier	k		3423919	0					
ANR	3423964	Identifier	getKeyLength		3423919	1					
ANR	3423965	ArgumentList			3423919	1					
ANR	3423966	ForStatement	for ( int i = 0 ; ( i < length ) && ( i < 24 ) ; i ++ )		3423919	3					
ANR	3423967	ForInit	int i = 0 ;	59:8:1931:1940	3423919	0	True				
ANR	3423968	IdentifierDeclStatement	int i = 0 ;		3423919	0					
ANR	3423969	IdentifierDecl	i = 0		3423919	0					
ANR	3423970	IdentifierDeclType	int		3423919	0					
ANR	3423971	Identifier	i		3423919	1					
ANR	3423972	AssignmentExpression	i = 0		3423919	2		=			
ANR	3423973	Identifier	i		3423919	0					
ANR	3423974	PrimaryExpression	0		3423919	1					
ANR	3423975	Condition	( i < length ) && ( i < 24 )	59:19:1942:1965	3423919	1	True				
ANR	3423976	AndExpression	( i < length ) && ( i < 24 )		3423919	0		&&			
ANR	3423977	RelationalExpression	i < length		3423919	0		<			
ANR	3423978	Identifier	i		3423919	0					
ANR	3423979	Identifier	length		3423919	1					
ANR	3423980	RelationalExpression	i < 24		3423919	1		<			
ANR	3423981	Identifier	i		3423919	0					
ANR	3423982	PrimaryExpression	24		3423919	1					
ANR	3423983	PostIncDecOperationExpression	i ++	59:45:1968:1970	3423919	2	True				
ANR	3423984	Identifier	i		3423919	0					
ANR	3423985	IncDec	++		3423919	1					
ANR	3423986	CompoundStatement		8:50:264:264	3423919	3					
ANR	3423987	ExpressionStatement	"sprintf ( & hexout [ i * 2 ] , ""%02x"" , * dataptr ++ )"	60:4:1979:2021	3423919	0	True				
ANR	3423988	CallExpression	"sprintf ( & hexout [ i * 2 ] , ""%02x"" , * dataptr ++ )"		3423919	0					
ANR	3423989	Callee	sprintf		3423919	0					
ANR	3423990	Identifier	sprintf		3423919	0					
ANR	3423991	ArgumentList	& hexout [ i * 2 ]		3423919	1					
ANR	3423992	Argument	& hexout [ i * 2 ]		3423919	0					
ANR	3423993	UnaryOperationExpression	& hexout [ i * 2 ]		3423919	0					
ANR	3423994	UnaryOperator	&		3423919	0					
ANR	3423995	ArrayIndexing	hexout [ i * 2 ]		3423919	1					
ANR	3423996	Identifier	hexout		3423919	0					
ANR	3423997	MultiplicativeExpression	i * 2		3423919	1		*			
ANR	3423998	Identifier	i		3423919	0					
ANR	3423999	PrimaryExpression	2		3423919	1					
ANR	3424000	Argument	"""%02x"""		3423919	1					
ANR	3424001	PrimaryExpression	"""%02x"""		3423919	0					
ANR	3424002	Argument	* dataptr ++		3423919	2					
ANR	3424003	UnaryOperationExpression	* dataptr ++		3423919	0					
ANR	3424004	UnaryOperator	*		3423919	0					
ANR	3424005	PostIncDecOperationExpression	dataptr ++		3423919	1					
ANR	3424006	Identifier	dataptr		3423919	0					
ANR	3424007	IncDec	++		3423919	1					
ANR	3424008	ExpressionStatement	"dprintf ( debug_levels , ""KEYPRINTF: [%i] %s\\n"" , length , hexout )"	63:3:2032:2094	3423919	4	True				
ANR	3424009	CallExpression	"dprintf ( debug_levels , ""KEYPRINTF: [%i] %s\\n"" , length , hexout )"		3423919	0					
ANR	3424010	Callee	dprintf		3423919	0					
ANR	3424011	Identifier	dprintf		3423919	0					
ANR	3424012	ArgumentList	debug_levels		3423919	1					
ANR	3424013	Argument	debug_levels		3423919	0					
ANR	3424014	Identifier	debug_levels		3423919	0					
ANR	3424015	Argument	"""KEYPRINTF: [%i] %s\\n"""		3423919	1					
ANR	3424016	PrimaryExpression	"""KEYPRINTF: [%i] %s\\n"""		3423919	0					
ANR	3424017	Argument	length		3423919	2					
ANR	3424018	Identifier	length		3423919	0					
ANR	3424019	Argument	hexout		3423919	3					
ANR	3424020	Identifier	hexout		3423919	0					
ANR	3424021	ElseStatement	else		3423919	0					
ANR	3424022	CompoundStatement		13:9:396:396	3423919	0					
ANR	3424023	ExpressionStatement	"dprintf ( debug_levels , ""KEYPRINTF: [NULL]\\n"" )"	65:3:2110:2155	3423919	0	True				
ANR	3424024	CallExpression	"dprintf ( debug_levels , ""KEYPRINTF: [NULL]\\n"" )"		3423919	0					
ANR	3424025	Callee	dprintf		3423919	0					
ANR	3424026	Identifier	dprintf		3423919	0					
ANR	3424027	ArgumentList	debug_levels		3423919	1					
ANR	3424028	Argument	debug_levels		3423919	0					
ANR	3424029	Identifier	debug_levels		3423919	0					
ANR	3424030	Argument	"""KEYPRINTF: [NULL]\\n"""		3423919	1					
ANR	3424031	PrimaryExpression	"""KEYPRINTF: [NULL]\\n"""		3423919	0					
ANR	3424032	ReturnType	void		3423919	1					
ANR	3424033	Identifier	SecMan :: key_printf		3423919	2					
ANR	3424034	ParameterList	"int debug_levels , KeyInfo * k"		3423919	3					
ANR	3424035	Parameter	int debug_levels	52:24:1678:1693	3423919	0	True				
ANR	3424036	ParameterType	int		3423919	0					
ANR	3424037	Identifier	debug_levels		3423919	1					
ANR	3424038	Parameter	KeyInfo * k	52:42:1696:1705	3423919	1	True				
ANR	3424039	ParameterType	KeyInfo *		3423919	0					
ANR	3424040	Identifier	k		3423919	1					
ANR	3424041	CFGEntryNode	ENTRY		3423919		True				
ANR	3424042	CFGExitNode	EXIT		3423919		True				
ANR	3424043	Symbol	dataptr		3423919						
ANR	3424044	Symbol	k -> getKeyLength		3423919						
ANR	3424045	Symbol	k -> getKeyData		3423919						
ANR	3424046	Symbol	debug_levels		3423919						
ANR	3424047	Symbol	* k		3423919						
ANR	3424048	Symbol	* dataptr ++		3423919						
ANR	3424049	Symbol	false		3423919						
ANR	3424050	Symbol	length		3423919						
ANR	3424051	Symbol	i		3423919						
ANR	3424052	Symbol	param_boolean		3423919						
ANR	3424053	Symbol	k		3423919						
ANR	3424054	Symbol	hexout		3423919						
ANR	3424055	DeclStmt									
ANR	3424056	Decl							const char	const char * [ ]	SecMan :: sec_feat_act_rev
ANR	3424057	DeclStmt									
ANR	3424058	Decl							const char	const char * [ ]	SecMan :: sec_req_rev
ANR	3424059	DeclStmt									
ANR	3424060	Decl							KeyCache	KeyCache *	SecMan :: session_cache
ANR	3424061	DeclStmt									
ANR	3424062	Decl							"HashTable < MyString , MyString >"	"HashTable < MyString , MyString > *"	SecMan :: command_map
ANR	3424063	DeclStmt									
ANR	3424064	Decl							"HashTable < MyString , classy_counted_ptr < SecManStartCommand > >"	"HashTable < MyString , classy_counted_ptr < SecManStartCommand > > *"	SecMan :: tcp_auth_in_progress
ANR	3424065	DeclStmt									
ANR	3424066	Decl							int	int	SecMan :: sec_man_ref_count
ANR	3424067	DeclStmt									
ANR	3424068	Decl							char	char *	SecMan :: _my_unique_id
ANR	3424069	DeclStmt									
ANR	3424070	Decl							char	char *	SecMan :: _my_parent_unique_id
ANR	3424071	DeclStmt									
ANR	3424072	Decl							bool	bool	SecMan :: _should_check_env_for_unique_id
ANR	3424073	DeclStmt									
ANR	3424074	Decl							IpVerify	IpVerify *	SecMan :: m_ipverify
ANR	3424075	Function	SecMan :: sec_alpha_to_sec_req	99:0:2778:3243							
ANR	3424076	FunctionDef	SecMan :: sec_alpha_to_sec_req (char * b)		3424075	0					
ANR	3424077	CompoundStatement		100:38:2832:3243	3424075	0					
ANR	3424078	IfStatement	if ( ! b || ! * b )		3424075	0					
ANR	3424079	Condition	! b || ! * b	101:5:2839:2847	3424075	0	True				
ANR	3424080	OrExpression	! b || ! * b		3424075	0		||			
ANR	3424081	UnaryOperationExpression	! b		3424075	0					
ANR	3424082	UnaryOperator	!		3424075	0					
ANR	3424083	Identifier	b		3424075	1					
ANR	3424084	UnaryOperationExpression	! * b		3424075	1					
ANR	3424085	UnaryOperator	!		3424075	0					
ANR	3424086	UnaryOperationExpression	* b		3424075	1					
ANR	3424087	UnaryOperator	*		3424075	0					
ANR	3424088	Identifier	b		3424075	1					
ANR	3424089	CompoundStatement		2:16:17:17	3424075	1					
ANR	3424090	ReturnStatement	return SEC_REQ_INVALID ;	103:2:2889:2911	3424075	0	True				
ANR	3424091	Identifier	SEC_REQ_INVALID		3424075	0					
ANR	3424092	SwitchStatement	switch ( toupper ( b [ 0 ] ) )		3424075	1					
ANR	3424093	Condition	toupper ( b [ 0 ] )	106:9:2926:2938	3424075	0	True				
ANR	3424094	CallExpression	toupper ( b [ 0 ] )		3424075	0					
ANR	3424095	Callee	toupper		3424075	0					
ANR	3424096	Identifier	toupper		3424075	0					
ANR	3424097	ArgumentList	b [ 0 ]		3424075	1					
ANR	3424098	Argument	b [ 0 ]		3424075	0					
ANR	3424099	ArrayIndexing	b [ 0 ]		3424075	0					
ANR	3424100	Identifier	b		3424075	0					
ANR	3424101	PrimaryExpression	0		3424075	1					
ANR	3424102	CompoundStatement		7:24:108:108	3424075	1					
ANR	3424103	Label	case 'R' :	107:2:2945:2953	3424075	0	True				
ANR	3424104	Label	case 'Y' :	108:2:2970:2978	3424075	1	True				
ANR	3424105	Label	case 'T' :	109:2:2990:2998	3424075	2	True				
ANR	3424106	ReturnStatement	return SEC_REQ_REQUIRED ;	110:3:3012:3035	3424075	3	True				
ANR	3424107	Identifier	SEC_REQ_REQUIRED		3424075	0					
ANR	3424108	Label	case 'P' :	111:2:3039:3047	3424075	4	True				
ANR	3424109	ReturnStatement	return SEC_REQ_PREFERRED ;	112:3:3066:3090	3424075	5	True				
ANR	3424110	Identifier	SEC_REQ_PREFERRED		3424075	0					
ANR	3424111	Label	case 'O' :	113:2:3094:3102	3424075	6	True				
ANR	3424112	ReturnStatement	return SEC_REQ_OPTIONAL ;	114:3:3120:3143	3424075	7	True				
ANR	3424113	Identifier	SEC_REQ_OPTIONAL		3424075	0					
ANR	3424114	Label	case 'F' :	115:2:3147:3155	3424075	8	True				
ANR	3424115	Label	case 'N' :	116:2:3169:3177	3424075	9	True				
ANR	3424116	ReturnStatement	return SEC_REQ_NEVER ;	117:3:3192:3212	3424075	10	True				
ANR	3424117	Identifier	SEC_REQ_NEVER		3424075	0					
ANR	3424118	ReturnStatement	return SEC_REQ_INVALID ;	120:1:3219:3241	3424075	2	True				
ANR	3424119	Identifier	SEC_REQ_INVALID		3424075	0					
ANR	3424120	ReturnType	SecMan :: sec_req		3424075	1					
ANR	3424121	Identifier	SecMan :: sec_alpha_to_sec_req		3424075	2					
ANR	3424122	ParameterList	char * b		3424075	3					
ANR	3424123	Parameter	char * b	100:29:2823:2829	3424075	0	True				
ANR	3424124	ParameterType	char *		3424075	0					
ANR	3424125	Identifier	b		3424075	1					
ANR	3424126	CFGEntryNode	ENTRY		3424075		True				
ANR	3424127	CFGExitNode	EXIT		3424075		True				
ANR	3424128	Symbol	b		3424075						
ANR	3424129	Symbol	SEC_REQ_REQUIRED		3424075						
ANR	3424130	Symbol	toupper		3424075						
ANR	3424131	Symbol	SEC_REQ_INVALID		3424075						
ANR	3424132	Symbol	SEC_REQ_OPTIONAL		3424075						
ANR	3424133	Symbol	SEC_REQ_NEVER		3424075						
ANR	3424134	Symbol	* b		3424075						
ANR	3424135	Symbol	SEC_REQ_PREFERRED		3424075						
ANR	3424136	Function	SecMan :: sec_lookup_feat_act	124:0:3247:3543							
ANR	3424137	FunctionDef	"SecMan :: sec_lookup_feat_act (ClassAd & ad , const char * pname)"		3424136	0					
ANR	3424138	CompoundStatement		125:62:3330:3543	3424136	0					
ANR	3424139	IdentifierDeclStatement	char * res = NULL ;	127:1:3334:3350	3424136	0	True				
ANR	3424140	IdentifierDecl	* res = NULL		3424136	0					
ANR	3424141	IdentifierDeclType	char *		3424136	0					
ANR	3424142	Identifier	res		3424136	1					
ANR	3424143	AssignmentExpression	* res = NULL		3424136	2		=			
ANR	3424144	Identifier	NULL		3424136	0					
ANR	3424145	Identifier	NULL		3424136	1					
ANR	3424146	ExpressionStatement	"ad . LookupString ( pname , & res )"	128:1:3353:3381	3424136	1	True				
ANR	3424147	CallExpression	"ad . LookupString ( pname , & res )"		3424136	0					
ANR	3424148	Callee	ad . LookupString		3424136	0					
ANR	3424149	MemberAccess	ad . LookupString		3424136	0					
ANR	3424150	Identifier	ad		3424136	0					
ANR	3424151	Identifier	LookupString		3424136	1					
ANR	3424152	ArgumentList	pname		3424136	1					
ANR	3424153	Argument	pname		3424136	0					
ANR	3424154	Identifier	pname		3424136	0					
ANR	3424155	Argument	& res		3424136	1					
ANR	3424156	UnaryOperationExpression	& res		3424136	0					
ANR	3424157	UnaryOperator	&		3424136	0					
ANR	3424158	Identifier	res		3424136	1					
ANR	3424159	IfStatement	if ( res )		3424136	2					
ANR	3424160	Condition	res	130:5:3389:3391	3424136	0	True				
ANR	3424161	Identifier	res		3424136	0					
ANR	3424162	CompoundStatement		7:2:67:78	3424136	1					
ANR	3424163	IdentifierDeclStatement	char buf [ 2 ] ;	131:2:3398:3409	3424136	0	True				
ANR	3424164	IdentifierDecl	buf [ 2 ]		3424136	0					
ANR	3424165	IdentifierDeclType	char [ 2 ]		3424136	0					
ANR	3424166	Identifier	buf		3424136	1					
ANR	3424167	PrimaryExpression	2		3424136	2					
ANR	3424168	ExpressionStatement	"strncpy ( buf , res , 1 )"	132:2:3413:3434	3424136	1	True				
ANR	3424169	CallExpression	"strncpy ( buf , res , 1 )"		3424136	0					
ANR	3424170	Callee	strncpy		3424136	0					
ANR	3424171	Identifier	strncpy		3424136	0					
ANR	3424172	ArgumentList	buf		3424136	1					
ANR	3424173	Argument	buf		3424136	0					
ANR	3424174	Identifier	buf		3424136	0					
ANR	3424175	Argument	res		3424136	1					
ANR	3424176	Identifier	res		3424136	0					
ANR	3424177	Argument	1		3424136	2					
ANR	3424178	PrimaryExpression	1		3424136	0					
ANR	3424179	ExpressionStatement	buf [ 1 ] = 0	133:2:3438:3448	3424136	2	True				
ANR	3424180	AssignmentExpression	buf [ 1 ] = 0		3424136	0		=			
ANR	3424181	ArrayIndexing	buf [ 1 ]		3424136	0					
ANR	3424182	Identifier	buf		3424136	0					
ANR	3424183	PrimaryExpression	1		3424136	1					
ANR	3424184	PrimaryExpression	0		3424136	1					
ANR	3424185	ExpressionStatement	free ( res )	134:2:3452:3462	3424136	3	True				
ANR	3424186	CallExpression	free ( res )		3424136	0					
ANR	3424187	Callee	free		3424136	0					
ANR	3424188	Identifier	free		3424136	0					
ANR	3424189	ArgumentList	res		3424136	1					
ANR	3424190	Argument	res		3424136	0					
ANR	3424191	Identifier	res		3424136	0					
ANR	3424192	ReturnStatement	return sec_alpha_to_sec_feat_act ( buf ) ;	136:2:3467:3504	3424136	4	True				
ANR	3424193	CallExpression	sec_alpha_to_sec_feat_act ( buf )		3424136	0					
ANR	3424194	Callee	sec_alpha_to_sec_feat_act		3424136	0					
ANR	3424195	Identifier	sec_alpha_to_sec_feat_act		3424136	0					
ANR	3424196	ArgumentList	buf		3424136	1					
ANR	3424197	Argument	buf		3424136	0					
ANR	3424198	Identifier	buf		3424136	0					
ANR	3424199	ReturnStatement	return SEC_FEAT_ACT_UNDEFINED ;	139:1:3511:3540	3424136	3	True				
ANR	3424200	Identifier	SEC_FEAT_ACT_UNDEFINED		3424136	0					
ANR	3424201	ReturnType	SecMan :: sec_feat_act		3424136	1					
ANR	3424202	Identifier	SecMan :: sec_lookup_feat_act		3424136	2					
ANR	3424203	ParameterList	"ClassAd & ad , const char * pname"		3424136	3					
ANR	3424204	Parameter	ClassAd & ad	125:29:3297:3307	3424136	0	True				
ANR	3424205	ParameterType	ClassAd &		3424136	0					
ANR	3424206	Identifier	ad		3424136	1					
ANR	3424207	Parameter	const char * pname	125:42:3310:3326	3424136	1	True				
ANR	3424208	ParameterType	const char *		3424136	0					
ANR	3424209	Identifier	pname		3424136	1					
ANR	3424210	CFGEntryNode	ENTRY		3424136		True				
ANR	3424211	CFGExitNode	EXIT		3424136		True				
ANR	3424212	Symbol	res		3424136						
ANR	3424213	Symbol	& res		3424136						
ANR	3424214	Symbol	buf		3424136						
ANR	3424215	Symbol	* buf		3424136						
ANR	3424216	Symbol	ad		3424136						
ANR	3424217	Symbol	NULL		3424136						
ANR	3424218	Symbol	pname		3424136						
ANR	3424219	Symbol	SEC_FEAT_ACT_UNDEFINED		3424136						
ANR	3424220	Symbol	sec_alpha_to_sec_feat_act		3424136						
ANR	3424221	Function	SecMan :: sec_alpha_to_sec_feat_act	143:0:3546:3905							
ANR	3424222	FunctionDef	SecMan :: sec_alpha_to_sec_feat_act (char * b)		3424221	0					
ANR	3424223	CompoundStatement		144:43:3610:3905	3424221	0					
ANR	3424224	IfStatement	if ( ! b || ! * b )		3424221	0					
ANR	3424225	Condition	! b || ! * b	145:5:3617:3625	3424221	0	True				
ANR	3424226	OrExpression	! b || ! * b		3424221	0		||			
ANR	3424227	UnaryOperationExpression	! b		3424221	0					
ANR	3424228	UnaryOperator	!		3424221	0					
ANR	3424229	Identifier	b		3424221	1					
ANR	3424230	UnaryOperationExpression	! * b		3424221	1					
ANR	3424231	UnaryOperator	!		3424221	0					
ANR	3424232	UnaryOperationExpression	* b		3424221	1					
ANR	3424233	UnaryOperator	*		3424221	0					
ANR	3424234	Identifier	b		3424221	1					
ANR	3424235	CompoundStatement		2:16:17:17	3424221	1					
ANR	3424236	ReturnStatement	return SEC_FEAT_ACT_INVALID ;	147:2:3667:3694	3424221	0	True				
ANR	3424237	Identifier	SEC_FEAT_ACT_INVALID		3424221	0					
ANR	3424238	SwitchStatement	switch ( toupper ( b [ 0 ] ) )		3424221	1					
ANR	3424239	Condition	toupper ( b [ 0 ] )	150:9:3709:3721	3424221	0	True				
ANR	3424240	CallExpression	toupper ( b [ 0 ] )		3424221	0					
ANR	3424241	Callee	toupper		3424221	0					
ANR	3424242	Identifier	toupper		3424221	0					
ANR	3424243	ArgumentList	b [ 0 ]		3424221	1					
ANR	3424244	Argument	b [ 0 ]		3424221	0					
ANR	3424245	ArrayIndexing	b [ 0 ]		3424221	0					
ANR	3424246	Identifier	b		3424221	0					
ANR	3424247	PrimaryExpression	0		3424221	1					
ANR	3424248	CompoundStatement		7:24:113:113	3424221	1					
ANR	3424249	Label	case 'F' :	151:2:3728:3736	3424221	0	True				
ANR	3424250	ReturnStatement	return SEC_FEAT_ACT_FAIL ;	152:3:3751:3775	3424221	1	True				
ANR	3424251	Identifier	SEC_FEAT_ACT_FAIL		3424221	0					
ANR	3424252	Label	case 'Y' :	153:2:3779:3787	3424221	2	True				
ANR	3424253	ReturnStatement	return SEC_FEAT_ACT_YES ;	154:3:3800:3823	3424221	3	True				
ANR	3424254	Identifier	SEC_FEAT_ACT_YES		3424221	0					
ANR	3424255	Label	case 'N' :	155:2:3827:3835	3424221	4	True				
ANR	3424256	ReturnStatement	return SEC_FEAT_ACT_NO ;	156:3:3847:3869	3424221	5	True				
ANR	3424257	Identifier	SEC_FEAT_ACT_NO		3424221	0					
ANR	3424258	ReturnStatement	return SEC_FEAT_ACT_INVALID ;	159:1:3876:3903	3424221	2	True				
ANR	3424259	Identifier	SEC_FEAT_ACT_INVALID		3424221	0					
ANR	3424260	ReturnType	SecMan :: sec_feat_act		3424221	1					
ANR	3424261	Identifier	SecMan :: sec_alpha_to_sec_feat_act		3424221	2					
ANR	3424262	ParameterList	char * b		3424221	3					
ANR	3424263	Parameter	char * b	144:34:3601:3607	3424221	0	True				
ANR	3424264	ParameterType	char *		3424221	0					
ANR	3424265	Identifier	b		3424221	1					
ANR	3424266	CFGEntryNode	ENTRY		3424221		True				
ANR	3424267	CFGExitNode	EXIT		3424221		True				
ANR	3424268	Symbol	b		3424221						
ANR	3424269	Symbol	toupper		3424221						
ANR	3424270	Symbol	SEC_FEAT_ACT_NO		3424221						
ANR	3424271	Symbol	SEC_FEAT_ACT_FAIL		3424221						
ANR	3424272	Symbol	SEC_FEAT_ACT_YES		3424221						
ANR	3424273	Symbol	* b		3424221						
ANR	3424274	Symbol	SEC_FEAT_ACT_INVALID		3424221						
ANR	3424275	Function	SecMan :: sec_lookup_req	207:0:4561:4836							
ANR	3424276	FunctionDef	"SecMan :: sec_lookup_req (ClassAd & ad , const char * pname)"		3424275	0					
ANR	3424277	CompoundStatement		208:57:4634:4836	3424275	0					
ANR	3424278	IdentifierDeclStatement	char * res = NULL ;	210:1:4638:4654	3424275	0	True				
ANR	3424279	IdentifierDecl	* res = NULL		3424275	0					
ANR	3424280	IdentifierDeclType	char *		3424275	0					
ANR	3424281	Identifier	res		3424275	1					
ANR	3424282	AssignmentExpression	* res = NULL		3424275	2		=			
ANR	3424283	Identifier	NULL		3424275	0					
ANR	3424284	Identifier	NULL		3424275	1					
ANR	3424285	ExpressionStatement	"ad . LookupString ( pname , & res )"	211:1:4657:4685	3424275	1	True				
ANR	3424286	CallExpression	"ad . LookupString ( pname , & res )"		3424275	0					
ANR	3424287	Callee	ad . LookupString		3424275	0					
ANR	3424288	MemberAccess	ad . LookupString		3424275	0					
ANR	3424289	Identifier	ad		3424275	0					
ANR	3424290	Identifier	LookupString		3424275	1					
ANR	3424291	ArgumentList	pname		3424275	1					
ANR	3424292	Argument	pname		3424275	0					
ANR	3424293	Identifier	pname		3424275	0					
ANR	3424294	Argument	& res		3424275	1					
ANR	3424295	UnaryOperationExpression	& res		3424275	0					
ANR	3424296	UnaryOperator	&		3424275	0					
ANR	3424297	Identifier	res		3424275	1					
ANR	3424298	IfStatement	if ( res )		3424275	2					
ANR	3424299	Condition	res	213:5:4693:4695	3424275	0	True				
ANR	3424300	Identifier	res		3424275	0					
ANR	3424301	CompoundStatement		7:2:67:78	3424275	1					
ANR	3424302	IdentifierDeclStatement	char buf [ 2 ] ;	214:2:4702:4713	3424275	0	True				
ANR	3424303	IdentifierDecl	buf [ 2 ]		3424275	0					
ANR	3424304	IdentifierDeclType	char [ 2 ]		3424275	0					
ANR	3424305	Identifier	buf		3424275	1					
ANR	3424306	PrimaryExpression	2		3424275	2					
ANR	3424307	ExpressionStatement	"strncpy ( buf , res , 1 )"	215:2:4717:4738	3424275	1	True				
ANR	3424308	CallExpression	"strncpy ( buf , res , 1 )"		3424275	0					
ANR	3424309	Callee	strncpy		3424275	0					
ANR	3424310	Identifier	strncpy		3424275	0					
ANR	3424311	ArgumentList	buf		3424275	1					
ANR	3424312	Argument	buf		3424275	0					
ANR	3424313	Identifier	buf		3424275	0					
ANR	3424314	Argument	res		3424275	1					
ANR	3424315	Identifier	res		3424275	0					
ANR	3424316	Argument	1		3424275	2					
ANR	3424317	PrimaryExpression	1		3424275	0					
ANR	3424318	ExpressionStatement	buf [ 1 ] = 0	216:2:4742:4752	3424275	2	True				
ANR	3424319	AssignmentExpression	buf [ 1 ] = 0		3424275	0		=			
ANR	3424320	ArrayIndexing	buf [ 1 ]		3424275	0					
ANR	3424321	Identifier	buf		3424275	0					
ANR	3424322	PrimaryExpression	1		3424275	1					
ANR	3424323	PrimaryExpression	0		3424275	1					
ANR	3424324	ExpressionStatement	free ( res )	217:2:4756:4766	3424275	3	True				
ANR	3424325	CallExpression	free ( res )		3424275	0					
ANR	3424326	Callee	free		3424275	0					
ANR	3424327	Identifier	free		3424275	0					
ANR	3424328	ArgumentList	res		3424275	1					
ANR	3424329	Argument	res		3424275	0					
ANR	3424330	Identifier	res		3424275	0					
ANR	3424331	ReturnStatement	return sec_alpha_to_sec_req ( buf ) ;	219:2:4771:4803	3424275	4	True				
ANR	3424332	CallExpression	sec_alpha_to_sec_req ( buf )		3424275	0					
ANR	3424333	Callee	sec_alpha_to_sec_req		3424275	0					
ANR	3424334	Identifier	sec_alpha_to_sec_req		3424275	0					
ANR	3424335	ArgumentList	buf		3424275	1					
ANR	3424336	Argument	buf		3424275	0					
ANR	3424337	Identifier	buf		3424275	0					
ANR	3424338	ReturnStatement	return SEC_REQ_UNDEFINED ;	222:1:4810:4834	3424275	3	True				
ANR	3424339	Identifier	SEC_REQ_UNDEFINED		3424275	0					
ANR	3424340	ReturnType	SecMan :: sec_req		3424275	1					
ANR	3424341	Identifier	SecMan :: sec_lookup_req		3424275	2					
ANR	3424342	ParameterList	"ClassAd & ad , const char * pname"		3424275	3					
ANR	3424343	Parameter	ClassAd & ad	208:24:4601:4611	3424275	0	True				
ANR	3424344	ParameterType	ClassAd &		3424275	0					
ANR	3424345	Identifier	ad		3424275	1					
ANR	3424346	Parameter	const char * pname	208:37:4614:4630	3424275	1	True				
ANR	3424347	ParameterType	const char *		3424275	0					
ANR	3424348	Identifier	pname		3424275	1					
ANR	3424349	CFGEntryNode	ENTRY		3424275		True				
ANR	3424350	CFGExitNode	EXIT		3424275		True				
ANR	3424351	Symbol	res		3424275						
ANR	3424352	Symbol	& res		3424275						
ANR	3424353	Symbol	buf		3424275						
ANR	3424354	Symbol	* buf		3424275						
ANR	3424355	Symbol	ad		3424275						
ANR	3424356	Symbol	NULL		3424275						
ANR	3424357	Symbol	sec_alpha_to_sec_req		3424275						
ANR	3424358	Symbol	pname		3424275						
ANR	3424359	Symbol	SEC_REQ_UNDEFINED		3424275						
ANR	3424360	Function	SecMan :: sec_req_to_feat_act	225:0:4839:5030							
ANR	3424361	FunctionDef	SecMan :: sec_req_to_feat_act (sec_req r)		3424360	0					
ANR	3424362	CompoundStatement		226:40:4900:5030	3424360	0					
ANR	3424363	IfStatement	if ( ( r == SEC_REQ_REQUIRED ) || ( r == SEC_REQ_PREFERRED ) )		3424360	0					
ANR	3424364	Condition	( r == SEC_REQ_REQUIRED ) || ( r == SEC_REQ_PREFERRED )	227:6:4908:4958	3424360	0	True				
ANR	3424365	OrExpression	( r == SEC_REQ_REQUIRED ) || ( r == SEC_REQ_PREFERRED )		3424360	0		||			
ANR	3424366	EqualityExpression	r == SEC_REQ_REQUIRED		3424360	0		==			
ANR	3424367	Identifier	r		3424360	0					
ANR	3424368	Identifier	SEC_REQ_REQUIRED		3424360	1					
ANR	3424369	EqualityExpression	r == SEC_REQ_PREFERRED		3424360	1		==			
ANR	3424370	Identifier	r		3424360	0					
ANR	3424371	Identifier	SEC_REQ_PREFERRED		3424360	1					
ANR	3424372	CompoundStatement		2:60:61:61	3424360	1					
ANR	3424373	ReturnStatement	return SEC_FEAT_ACT_YES ;	228:2:4966:4989	3424360	0	True				
ANR	3424374	Identifier	SEC_FEAT_ACT_YES		3424360	0					
ANR	3424375	ElseStatement	else		3424360	0					
ANR	3424376	CompoundStatement		4:8:98:98	3424360	0					
ANR	3424377	ReturnStatement	return SEC_FEAT_ACT_NO ;	230:2:5003:5025	3424360	0	True				
ANR	3424378	Identifier	SEC_FEAT_ACT_NO		3424360	0					
ANR	3424379	ReturnType	SecMan :: sec_feat_act		3424360	1					
ANR	3424380	Identifier	SecMan :: sec_req_to_feat_act		3424360	2					
ANR	3424381	ParameterList	sec_req r		3424360	3					
ANR	3424382	Parameter	sec_req r	226:29:4889:4897	3424360	0	True				
ANR	3424383	ParameterType	sec_req		3424360	0					
ANR	3424384	Identifier	r		3424360	1					
ANR	3424385	CFGEntryNode	ENTRY		3424360		True				
ANR	3424386	CFGExitNode	EXIT		3424360		True				
ANR	3424387	Symbol	r		3424360						
ANR	3424388	Symbol	SEC_REQ_REQUIRED		3424360						
ANR	3424389	Symbol	SEC_FEAT_ACT_NO		3424360						
ANR	3424390	Symbol	SEC_FEAT_ACT_YES		3424360						
ANR	3424391	Symbol	SEC_REQ_PREFERRED		3424360						
ANR	3424392	Function	SecMan :: sec_is_negotiable	235:0:5034:5181							
ANR	3424393	FunctionDef	SecMan :: sec_is_negotiable (sec_req r)		3424392	0					
ANR	3424394	CompoundStatement		236:38:5077:5181	3424392	0					
ANR	3424395	IfStatement	if ( ( r == SEC_REQ_REQUIRED ) || ( r == SEC_REQ_NEVER ) )		3424392	0					
ANR	3424396	Condition	( r == SEC_REQ_REQUIRED ) || ( r == SEC_REQ_NEVER )	237:6:5085:5131	3424392	0	True				
ANR	3424397	OrExpression	( r == SEC_REQ_REQUIRED ) || ( r == SEC_REQ_NEVER )		3424392	0		||			
ANR	3424398	EqualityExpression	r == SEC_REQ_REQUIRED		3424392	0		==			
ANR	3424399	Identifier	r		3424392	0					
ANR	3424400	Identifier	SEC_REQ_REQUIRED		3424392	1					
ANR	3424401	EqualityExpression	r == SEC_REQ_NEVER		3424392	1		==			
ANR	3424402	Identifier	r		3424392	0					
ANR	3424403	Identifier	SEC_REQ_NEVER		3424392	1					
ANR	3424404	CompoundStatement		2:56:57:57	3424392	1					
ANR	3424405	ReturnStatement	return false ;	238:2:5139:5151	3424392	0	True				
ANR	3424406	Identifier	false		3424392	0					
ANR	3424407	ElseStatement	else		3424392	0					
ANR	3424408	CompoundStatement		4:8:83:83	3424392	0					
ANR	3424409	ReturnStatement	return true ;	240:2:5165:5176	3424392	0	True				
ANR	3424410	Identifier	true		3424392	0					
ANR	3424411	ReturnType	bool		3424392	1					
ANR	3424412	Identifier	SecMan :: sec_is_negotiable		3424392	2					
ANR	3424413	ParameterList	sec_req r		3424392	3					
ANR	3424414	Parameter	sec_req r	236:27:5066:5074	3424392	0	True				
ANR	3424415	ParameterType	sec_req		3424392	0					
ANR	3424416	Identifier	r		3424392	1					
ANR	3424417	CFGEntryNode	ENTRY		3424392		True				
ANR	3424418	CFGExitNode	EXIT		3424392		True				
ANR	3424419	Symbol	r		3424392						
ANR	3424420	Symbol	SEC_REQ_REQUIRED		3424392						
ANR	3424421	Symbol	false		3424392						
ANR	3424422	Symbol	true		3424392						
ANR	3424423	Symbol	SEC_REQ_NEVER		3424392						
ANR	3424424	Function	SecMan :: sec_req_param	245:0:5185:6028							
ANR	3424425	FunctionDef	"SecMan :: sec_req_param (const char * fmt , DCpermission auth_level , sec_req def)"		3424424	0					
ANR	3424426	CompoundStatement		246:79:5280:6028	3424424	0					
ANR	3424427	IdentifierDeclStatement	"char * config_value = getSecSetting ( fmt , auth_level ) ;"	247:1:5283:5336	3424424	0	True				
ANR	3424428	IdentifierDecl	"* config_value = getSecSetting ( fmt , auth_level )"		3424424	0					
ANR	3424429	IdentifierDeclType	char *		3424424	0					
ANR	3424430	Identifier	config_value		3424424	1					
ANR	3424431	AssignmentExpression	"* config_value = getSecSetting ( fmt , auth_level )"		3424424	2		=			
ANR	3424432	Identifier	config_value		3424424	0					
ANR	3424433	CallExpression	"getSecSetting ( fmt , auth_level )"		3424424	1					
ANR	3424434	Callee	getSecSetting		3424424	0					
ANR	3424435	Identifier	getSecSetting		3424424	0					
ANR	3424436	ArgumentList	fmt		3424424	1					
ANR	3424437	Argument	fmt		3424424	0					
ANR	3424438	Identifier	fmt		3424424	0					
ANR	3424439	Argument	auth_level		3424424	1					
ANR	3424440	Identifier	auth_level		3424424	0					
ANR	3424441	IfStatement	if ( config_value )		3424424	1					
ANR	3424442	Condition	config_value	249:5:5344:5355	3424424	0	True				
ANR	3424443	Identifier	config_value		3424424	0					
ANR	3424444	CompoundStatement		10:2:168:207	3424424	1					
ANR	3424445	IdentifierDeclStatement	char buf [ 2 ] ;	250:2:5362:5373	3424424	0	True				
ANR	3424446	IdentifierDecl	buf [ 2 ]		3424424	0					
ANR	3424447	IdentifierDeclType	char [ 2 ]		3424424	0					
ANR	3424448	Identifier	buf		3424424	1					
ANR	3424449	PrimaryExpression	2		3424424	2					
ANR	3424450	ExpressionStatement	"strncpy ( buf , config_value , 1 )"	251:2:5377:5407	3424424	1	True				
ANR	3424451	CallExpression	"strncpy ( buf , config_value , 1 )"		3424424	0					
ANR	3424452	Callee	strncpy		3424424	0					
ANR	3424453	Identifier	strncpy		3424424	0					
ANR	3424454	ArgumentList	buf		3424424	1					
ANR	3424455	Argument	buf		3424424	0					
ANR	3424456	Identifier	buf		3424424	0					
ANR	3424457	Argument	config_value		3424424	1					
ANR	3424458	Identifier	config_value		3424424	0					
ANR	3424459	Argument	1		3424424	2					
ANR	3424460	PrimaryExpression	1		3424424	0					
ANR	3424461	ExpressionStatement	buf [ 1 ] = 0	252:2:5411:5421	3424424	2	True				
ANR	3424462	AssignmentExpression	buf [ 1 ] = 0		3424424	0		=			
ANR	3424463	ArrayIndexing	buf [ 1 ]		3424424	0					
ANR	3424464	Identifier	buf		3424424	0					
ANR	3424465	PrimaryExpression	1		3424424	1					
ANR	3424466	PrimaryExpression	0		3424424	1					
ANR	3424467	ExpressionStatement	free ( config_value )	253:2:5425:5444	3424424	3	True				
ANR	3424468	CallExpression	free ( config_value )		3424424	0					
ANR	3424469	Callee	free		3424424	0					
ANR	3424470	Identifier	free		3424424	0					
ANR	3424471	ArgumentList	config_value		3424424	1					
ANR	3424472	Argument	config_value		3424424	0					
ANR	3424473	Identifier	config_value		3424424	0					
ANR	3424474	IdentifierDeclStatement	sec_req res = sec_alpha_to_sec_req ( buf ) ;	255:2:5449:5488	3424424	4	True				
ANR	3424475	IdentifierDecl	res = sec_alpha_to_sec_req ( buf )		3424424	0					
ANR	3424476	IdentifierDeclType	sec_req		3424424	0					
ANR	3424477	Identifier	res		3424424	1					
ANR	3424478	AssignmentExpression	res = sec_alpha_to_sec_req ( buf )		3424424	2		=			
ANR	3424479	Identifier	res		3424424	0					
ANR	3424480	CallExpression	sec_alpha_to_sec_req ( buf )		3424424	1					
ANR	3424481	Callee	sec_alpha_to_sec_req		3424424	0					
ANR	3424482	Identifier	sec_alpha_to_sec_req		3424424	0					
ANR	3424483	ArgumentList	buf		3424424	1					
ANR	3424484	Argument	buf		3424424	0					
ANR	3424485	Identifier	buf		3424424	0					
ANR	3424486	IfStatement	if ( res == SEC_REQ_UNDEFINED || res == SEC_REQ_INVALID )		3424424	5					
ANR	3424487	Condition	res == SEC_REQ_UNDEFINED || res == SEC_REQ_INVALID	257:6:5497:5546	3424424	0	True				
ANR	3424488	OrExpression	res == SEC_REQ_UNDEFINED || res == SEC_REQ_INVALID		3424424	0		||			
ANR	3424489	EqualityExpression	res == SEC_REQ_UNDEFINED		3424424	0		==			
ANR	3424490	Identifier	res		3424424	0					
ANR	3424491	Identifier	SEC_REQ_UNDEFINED		3424424	1					
ANR	3424492	EqualityExpression	res == SEC_REQ_INVALID		3424424	1		==			
ANR	3424493	Identifier	res		3424424	0					
ANR	3424494	Identifier	SEC_REQ_INVALID		3424424	1					
ANR	3424495	CompoundStatement		14:3:297:356	3424424	1					
ANR	3424496	IdentifierDeclStatement	MyString param_name ;	258:3:5554:5573	3424424	0	True				
ANR	3424497	IdentifierDecl	param_name		3424424	0					
ANR	3424498	IdentifierDeclType	MyString		3424424	0					
ANR	3424499	Identifier	param_name		3424424	1					
ANR	3424500	IdentifierDeclStatement	"char * value = getSecSetting ( fmt , auth_level , & param_name ) ;"	259:3:5578:5637	3424424	1	True				
ANR	3424501	IdentifierDecl	"* value = getSecSetting ( fmt , auth_level , & param_name )"		3424424	0					
ANR	3424502	IdentifierDeclType	char *		3424424	0					
ANR	3424503	Identifier	value		3424424	1					
ANR	3424504	AssignmentExpression	"* value = getSecSetting ( fmt , auth_level , & param_name )"		3424424	2		=			
ANR	3424505	Identifier	value		3424424	0					
ANR	3424506	CallExpression	"getSecSetting ( fmt , auth_level , & param_name )"		3424424	1					
ANR	3424507	Callee	getSecSetting		3424424	0					
ANR	3424508	Identifier	getSecSetting		3424424	0					
ANR	3424509	ArgumentList	fmt		3424424	1					
ANR	3424510	Argument	fmt		3424424	0					
ANR	3424511	Identifier	fmt		3424424	0					
ANR	3424512	Argument	auth_level		3424424	1					
ANR	3424513	Identifier	auth_level		3424424	0					
ANR	3424514	Argument	& param_name		3424424	2					
ANR	3424515	UnaryOperationExpression	& param_name		3424424	0					
ANR	3424516	UnaryOperator	&		3424424	0					
ANR	3424517	Identifier	param_name		3424424	1					
ANR	3424518	IfStatement	if ( res == SEC_REQ_INVALID )		3424424	2					
ANR	3424519	Condition	res == SEC_REQ_INVALID	260:7:5646:5667	3424424	0	True				
ANR	3424520	EqualityExpression	res == SEC_REQ_INVALID		3424424	0		==			
ANR	3424521	Identifier	res		3424424	0					
ANR	3424522	Identifier	SEC_REQ_INVALID		3424424	1					
ANR	3424523	CompoundStatement		15:32:390:390	3424424	1					
ANR	3424524	ExpressionStatement	"EXCEPT ( ""SECMAN: %s=%s is invalid!\\n"" , param_name . Value ( ) , value ? value : ""(null)"" )"	261:4:5677:5774	3424424	0	True				
ANR	3424525	CallExpression	"EXCEPT ( ""SECMAN: %s=%s is invalid!\\n"" , param_name . Value ( ) , value ? value : ""(null)"" )"		3424424	0					
ANR	3424526	Callee	EXCEPT		3424424	0					
ANR	3424527	Identifier	EXCEPT		3424424	0					
ANR	3424528	ArgumentList	"""SECMAN: %s=%s is invalid!\\n"""		3424424	1					
ANR	3424529	Argument	"""SECMAN: %s=%s is invalid!\\n"""		3424424	0					
ANR	3424530	PrimaryExpression	"""SECMAN: %s=%s is invalid!\\n"""		3424424	0					
ANR	3424531	Argument	param_name . Value ( )		3424424	1					
ANR	3424532	CallExpression	param_name . Value ( )		3424424	0					
ANR	3424533	Callee	param_name . Value		3424424	0					
ANR	3424534	MemberAccess	param_name . Value		3424424	0					
ANR	3424535	Identifier	param_name		3424424	0					
ANR	3424536	Identifier	Value		3424424	1					
ANR	3424537	ArgumentList			3424424	1					
ANR	3424538	Argument	"value ? value : ""(null)"""		3424424	2					
ANR	3424539	ConditionalExpression	"value ? value : ""(null)"""		3424424	0					
ANR	3424540	Condition	value		3424424	0					
ANR	3424541	Identifier	value		3424424	0					
ANR	3424542	Identifier	value		3424424	1					
ANR	3424543	PrimaryExpression	"""(null)"""		3424424	2					
ANR	3424544	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3424424	3					
ANR	3424545	Condition	DebugFlags & D_FULLDEBUG	264:7:5788:5811	3424424	0	True				
ANR	3424546	BitAndExpression	DebugFlags & D_FULLDEBUG		3424424	0		&			
ANR	3424547	Identifier	DebugFlags		3424424	0					
ANR	3424548	Identifier	D_FULLDEBUG		3424424	1					
ANR	3424549	CompoundStatement		19:34:534:534	3424424	1					
ANR	3424550	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: %s is undefined; using %s.\\n"" , param_name . Value ( ) , SecMan :: sec_req_rev [ def ] )"	265:4:5821:5953	3424424	0	True				
ANR	3424551	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: %s is undefined; using %s.\\n"" , param_name . Value ( ) , SecMan :: sec_req_rev [ def ] )"		3424424	0					
ANR	3424552	Callee	dprintf		3424424	0					
ANR	3424553	Identifier	dprintf		3424424	0					
ANR	3424554	ArgumentList	D_SECURITY		3424424	1					
ANR	3424555	Argument	D_SECURITY		3424424	0					
ANR	3424556	Identifier	D_SECURITY		3424424	0					
ANR	3424557	Argument	"""SECMAN: %s is undefined; using %s.\\n"""		3424424	1					
ANR	3424558	PrimaryExpression	"""SECMAN: %s is undefined; using %s.\\n"""		3424424	0					
ANR	3424559	Argument	param_name . Value ( )		3424424	2					
ANR	3424560	CallExpression	param_name . Value ( )		3424424	0					
ANR	3424561	Callee	param_name . Value		3424424	0					
ANR	3424562	MemberAccess	param_name . Value		3424424	0					
ANR	3424563	Identifier	param_name		3424424	0					
ANR	3424564	Identifier	Value		3424424	1					
ANR	3424565	ArgumentList			3424424	1					
ANR	3424566	Argument	SecMan :: sec_req_rev [ def ]		3424424	3					
ANR	3424567	ArrayIndexing	SecMan :: sec_req_rev [ def ]		3424424	0					
ANR	3424568	Identifier	SecMan :: sec_req_rev		3424424	0					
ANR	3424569	Identifier	def		3424424	1					
ANR	3424570	ExpressionStatement	free ( value )	269:3:5963:5974	3424424	4	True				
ANR	3424571	CallExpression	free ( value )		3424424	0					
ANR	3424572	Callee	free		3424424	0					
ANR	3424573	Identifier	free		3424424	0					
ANR	3424574	ArgumentList	value		3424424	1					
ANR	3424575	Argument	value		3424424	0					
ANR	3424576	Identifier	value		3424424	0					
ANR	3424577	ReturnStatement	return def ;	271:3:5980:5990	3424424	5	True				
ANR	3424578	Identifier	def		3424424	0					
ANR	3424579	ReturnStatement	return res ;	274:2:5999:6009	3424424	6	True				
ANR	3424580	Identifier	res		3424424	0					
ANR	3424581	ReturnStatement	return def ;	277:1:6016:6026	3424424	2	True				
ANR	3424582	Identifier	def		3424424	0					
ANR	3424583	ReturnType	SecMan :: sec_req		3424424	1					
ANR	3424584	Identifier	SecMan :: sec_req_param		3424424	2					
ANR	3424585	ParameterList	"const char * fmt , DCpermission auth_level , sec_req def"		3424424	3					
ANR	3424586	Parameter	const char * fmt	246:23:5224:5238	3424424	0	True				
ANR	3424587	ParameterType	const char *		3424424	0					
ANR	3424588	Identifier	fmt		3424424	1					
ANR	3424589	Parameter	DCpermission auth_level	246:40:5241:5263	3424424	1	True				
ANR	3424590	ParameterType	DCpermission		3424424	0					
ANR	3424591	Identifier	auth_level		3424424	1					
ANR	3424592	Parameter	sec_req def	246:65:5266:5276	3424424	2	True				
ANR	3424593	ParameterType	sec_req		3424424	0					
ANR	3424594	Identifier	def		3424424	1					
ANR	3424595	CFGEntryNode	ENTRY		3424424		True				
ANR	3424596	CFGExitNode	EXIT		3424424		True				
ANR	3424597	Symbol	config_value		3424424						
ANR	3424598	Symbol	res		3424424						
ANR	3424599	Symbol	* buf		3424424						
ANR	3424600	Symbol	& param_name		3424424						
ANR	3424601	Symbol	def		3424424						
ANR	3424602	Symbol	D_SECURITY		3424424						
ANR	3424603	Symbol	auth_level		3424424						
ANR	3424604	Symbol	SEC_REQ_INVALID		3424424						
ANR	3424605	Symbol	D_FULLDEBUG		3424424						
ANR	3424606	Symbol	DebugFlags		3424424						
ANR	3424607	Symbol	fmt		3424424						
ANR	3424608	Symbol	SEC_REQ_UNDEFINED		3424424						
ANR	3424609	Symbol	* def		3424424						
ANR	3424610	Symbol	buf		3424424						
ANR	3424611	Symbol	sec_alpha_to_sec_req		3424424						
ANR	3424612	Symbol	* SecMan :: sec_req_rev		3424424						
ANR	3424613	Symbol	SecMan :: sec_req_rev		3424424						
ANR	3424614	Symbol	param_name		3424424						
ANR	3424615	Symbol	value		3424424						
ANR	3424616	Symbol	param_name . Value		3424424						
ANR	3424617	Symbol	getSecSetting		3424424						
ANR	3424618	Function	SecMan :: getAuthenticationMethods	280:0:6031:6303							
ANR	3424619	FunctionDef	"SecMan :: getAuthenticationMethods (DCpermission perm , MyString * result)"		3424618	0					
ANR	3424620	CompoundStatement		280:77:6108:6303	3424618	0					
ANR	3424621	ExpressionStatement	ASSERT ( result )	281:1:6111:6127	3424618	0	True				
ANR	3424622	CallExpression	ASSERT ( result )		3424618	0					
ANR	3424623	Callee	ASSERT		3424618	0					
ANR	3424624	Identifier	ASSERT		3424618	0					
ANR	3424625	ArgumentList	result		3424618	1					
ANR	3424626	Argument	result		3424618	0					
ANR	3424627	Identifier	result		3424618	0					
ANR	3424628	IdentifierDeclStatement	"char * p = getSecSetting ( ""SEC_%s_AUTHENTICATION_METHODS"" , perm ) ;"	283:1:6131:6195	3424618	1	True				
ANR	3424629	IdentifierDecl	"* p = getSecSetting ( ""SEC_%s_AUTHENTICATION_METHODS"" , perm )"		3424618	0					
ANR	3424630	IdentifierDeclType	char *		3424618	0					
ANR	3424631	Identifier	p		3424618	1					
ANR	3424632	AssignmentExpression	"* p = getSecSetting ( ""SEC_%s_AUTHENTICATION_METHODS"" , perm )"		3424618	2		=			
ANR	3424633	Identifier	p		3424618	0					
ANR	3424634	CallExpression	"getSecSetting ( ""SEC_%s_AUTHENTICATION_METHODS"" , perm )"		3424618	1					
ANR	3424635	Callee	getSecSetting		3424618	0					
ANR	3424636	Identifier	getSecSetting		3424618	0					
ANR	3424637	ArgumentList	"""SEC_%s_AUTHENTICATION_METHODS"""		3424618	1					
ANR	3424638	Argument	"""SEC_%s_AUTHENTICATION_METHODS"""		3424618	0					
ANR	3424639	PrimaryExpression	"""SEC_%s_AUTHENTICATION_METHODS"""		3424618	0					
ANR	3424640	Argument	perm		3424618	1					
ANR	3424641	Identifier	perm		3424618	0					
ANR	3424642	IfStatement	if ( p )		3424618	2					
ANR	3424643	Condition	p	285:5:6203:6203	3424618	0	True				
ANR	3424644	Identifier	p		3424618	0					
ANR	3424645	CompoundStatement		6:8:97:97	3424618	1					
ANR	3424646	ExpressionStatement	* result = p	286:2:6210:6221	3424618	0	True				
ANR	3424647	AssignmentExpression	* result = p		3424618	0		=			
ANR	3424648	UnaryOperationExpression	* result		3424618	0					
ANR	3424649	UnaryOperator	*		3424618	0					
ANR	3424650	Identifier	result		3424618	1					
ANR	3424651	Identifier	p		3424618	1					
ANR	3424652	ExpressionStatement	free ( p )	287:2:6225:6233	3424618	1	True				
ANR	3424653	CallExpression	free ( p )		3424618	0					
ANR	3424654	Callee	free		3424618	0					
ANR	3424655	Identifier	free		3424618	0					
ANR	3424656	ArgumentList	p		3424618	1					
ANR	3424657	Argument	p		3424618	0					
ANR	3424658	Identifier	p		3424618	0					
ANR	3424659	ElseStatement	else		3424618	0					
ANR	3424660	CompoundStatement		9:8:134:134	3424618	0					
ANR	3424661	ExpressionStatement	* result = SecMan :: getDefaultAuthenticationMethods ( )	289:2:6247:6298	3424618	0	True				
ANR	3424662	AssignmentExpression	* result = SecMan :: getDefaultAuthenticationMethods ( )		3424618	0		=			
ANR	3424663	UnaryOperationExpression	* result		3424618	0					
ANR	3424664	UnaryOperator	*		3424618	0					
ANR	3424665	Identifier	result		3424618	1					
ANR	3424666	CallExpression	SecMan :: getDefaultAuthenticationMethods ( )		3424618	1					
ANR	3424667	Callee	SecMan :: getDefaultAuthenticationMethods		3424618	0					
ANR	3424668	Identifier	SecMan :: getDefaultAuthenticationMethods		3424618	0					
ANR	3424669	ArgumentList			3424618	1					
ANR	3424670	ReturnType	void		3424618	1					
ANR	3424671	Identifier	SecMan :: getAuthenticationMethods		3424618	2					
ANR	3424672	ParameterList	"DCpermission perm , MyString * result"		3424618	3					
ANR	3424673	Parameter	DCpermission perm	280:39:6070:6086	3424618	0	True				
ANR	3424674	ParameterType	DCpermission		3424618	0					
ANR	3424675	Identifier	perm		3424618	1					
ANR	3424676	Parameter	MyString * result	280:58:6089:6104	3424618	1	True				
ANR	3424677	ParameterType	MyString *		3424618	0					
ANR	3424678	Identifier	result		3424618	1					
ANR	3424679	CFGEntryNode	ENTRY		3424618		True				
ANR	3424680	CFGExitNode	EXIT		3424618		True				
ANR	3424681	Symbol	result		3424618						
ANR	3424682	Symbol	p		3424618						
ANR	3424683	Symbol	perm		3424618						
ANR	3424684	Symbol	* result		3424618						
ANR	3424685	Symbol	getSecSetting		3424618						
ANR	3424686	Symbol	SecMan :: getDefaultAuthenticationMethods		3424618						
ANR	3424687	Function	SecMan :: getIntSecSetting	293:0:6306:6582							
ANR	3424688	FunctionDef	"SecMan :: getIntSecSetting (int & result , const char * fmt , DCpermissionHierarchy const & auth_level , MyString * param_name , char const * check_subsystem)"		3424687	0					
ANR	3424689	CompoundStatement		295:0:6486:6582	3424687	0					
ANR	3424690	ReturnStatement	"return getSecSetting_implementation ( & result , NULL , fmt , auth_level , param_name , check_subsystem ) ;"	296:1:6489:6580	3424687	0	True				
ANR	3424691	CallExpression	"getSecSetting_implementation ( & result , NULL , fmt , auth_level , param_name , check_subsystem )"		3424687	0					
ANR	3424692	Callee	getSecSetting_implementation		3424687	0					
ANR	3424693	Identifier	getSecSetting_implementation		3424687	0					
ANR	3424694	ArgumentList	& result		3424687	1					
ANR	3424695	Argument	& result		3424687	0					
ANR	3424696	UnaryOperationExpression	& result		3424687	0					
ANR	3424697	UnaryOperator	&		3424687	0					
ANR	3424698	Identifier	result		3424687	1					
ANR	3424699	Argument	NULL		3424687	1					
ANR	3424700	Identifier	NULL		3424687	0					
ANR	3424701	Argument	fmt		3424687	2					
ANR	3424702	Identifier	fmt		3424687	0					
ANR	3424703	Argument	auth_level		3424687	3					
ANR	3424704	Identifier	auth_level		3424687	0					
ANR	3424705	Argument	param_name		3424687	4					
ANR	3424706	Identifier	param_name		3424687	0					
ANR	3424707	Argument	check_subsystem		3424687	5					
ANR	3424708	Identifier	check_subsystem		3424687	0					
ANR	3424709	ReturnType	bool		3424687	1					
ANR	3424710	Identifier	SecMan :: getIntSecSetting		3424687	2					
ANR	3424711	ParameterList	"int & result , const char * fmt , DCpermissionHierarchy const & auth_level , MyString * param_name , char const * check_subsystem"		3424687	3					
ANR	3424712	Parameter	int & result	294:26:6337:6347	3424687	0	True				
ANR	3424713	ParameterType	int &		3424687	0					
ANR	3424714	Identifier	result		3424687	1					
ANR	3424715	Parameter	const char * fmt	294:39:6350:6364	3424687	1	True				
ANR	3424716	ParameterType	const char *		3424687	0					
ANR	3424717	Identifier	fmt		3424687	1					
ANR	3424718	Parameter	DCpermissionHierarchy const & auth_level	294:56:6367:6405	3424687	2	True				
ANR	3424719	ParameterType	DCpermissionHierarchy const &		3424687	0					
ANR	3424720	Identifier	auth_level		3424687	1					
ANR	3424721	Parameter	MyString * param_name	294:97:6408:6427	3424687	3	True				
ANR	3424722	ParameterType	MyString *		3424687	0					
ANR	3424723	Identifier	param_name		3424687	1					
ANR	3424724	Parameter	char const * check_subsystem	294:132:6443:6469	3424687	4	True				
ANR	3424725	ParameterType	char const *		3424687	0					
ANR	3424726	Identifier	check_subsystem		3424687	1					
ANR	3424727	CFGEntryNode	ENTRY		3424687		True				
ANR	3424728	CFGExitNode	EXIT		3424687		True				
ANR	3424729	Symbol	result		3424687						
ANR	3424730	Symbol	NULL		3424687						
ANR	3424731	Symbol	auth_level		3424687						
ANR	3424732	Symbol	& result		3424687						
ANR	3424733	Symbol	getSecSetting_implementation		3424687						
ANR	3424734	Symbol	fmt		3424687						
ANR	3424735	Symbol	param_name		3424687						
ANR	3424736	Symbol	check_subsystem		3424687						
ANR	3424737	Function	SecMan :: getSecSetting	299:0:6585:6878							
ANR	3424738	FunctionDef	"SecMan :: getSecSetting (const char * fmt , DCpermissionHierarchy const & auth_level , MyString * param_name , char const * check_subsystem)"		3424737	0					
ANR	3424739	CompoundStatement		301:0:6751:6878	3424737	0					
ANR	3424740	IdentifierDeclStatement	char * result = NULL ;	302:1:6754:6773	3424737	0	True				
ANR	3424741	IdentifierDecl	* result = NULL		3424737	0					
ANR	3424742	IdentifierDeclType	char *		3424737	0					
ANR	3424743	Identifier	result		3424737	1					
ANR	3424744	AssignmentExpression	* result = NULL		3424737	2		=			
ANR	3424745	Identifier	NULL		3424737	0					
ANR	3424746	Identifier	NULL		3424737	1					
ANR	3424747	ExpressionStatement	"getSecSetting_implementation ( NULL , & result , fmt , auth_level , param_name , check_subsystem )"	303:1:6776:6860	3424737	1	True				
ANR	3424748	CallExpression	"getSecSetting_implementation ( NULL , & result , fmt , auth_level , param_name , check_subsystem )"		3424737	0					
ANR	3424749	Callee	getSecSetting_implementation		3424737	0					
ANR	3424750	Identifier	getSecSetting_implementation		3424737	0					
ANR	3424751	ArgumentList	NULL		3424737	1					
ANR	3424752	Argument	NULL		3424737	0					
ANR	3424753	Identifier	NULL		3424737	0					
ANR	3424754	Argument	& result		3424737	1					
ANR	3424755	UnaryOperationExpression	& result		3424737	0					
ANR	3424756	UnaryOperator	&		3424737	0					
ANR	3424757	Identifier	result		3424737	1					
ANR	3424758	Argument	fmt		3424737	2					
ANR	3424759	Identifier	fmt		3424737	0					
ANR	3424760	Argument	auth_level		3424737	3					
ANR	3424761	Identifier	auth_level		3424737	0					
ANR	3424762	Argument	param_name		3424737	4					
ANR	3424763	Identifier	param_name		3424737	0					
ANR	3424764	Argument	check_subsystem		3424737	5					
ANR	3424765	Identifier	check_subsystem		3424737	0					
ANR	3424766	ReturnStatement	return result ;	304:1:6863:6876	3424737	2	True				
ANR	3424767	Identifier	result		3424737	0					
ANR	3424768	ReturnType	char *		3424737	1					
ANR	3424769	Identifier	SecMan :: getSecSetting		3424737	2					
ANR	3424770	ParameterList	"const char * fmt , DCpermissionHierarchy const & auth_level , MyString * param_name , char const * check_subsystem"		3424737	3					
ANR	3424771	Parameter	const char * fmt	300:23:6615:6629	3424737	0	True				
ANR	3424772	ParameterType	const char *		3424737	0					
ANR	3424773	Identifier	fmt		3424737	1					
ANR	3424774	Parameter	DCpermissionHierarchy const & auth_level	300:40:6632:6670	3424737	1	True				
ANR	3424775	ParameterType	DCpermissionHierarchy const &		3424737	0					
ANR	3424776	Identifier	auth_level		3424737	1					
ANR	3424777	Parameter	MyString * param_name	300:81:6673:6692	3424737	2	True				
ANR	3424778	ParameterType	MyString *		3424737	0					
ANR	3424779	Identifier	param_name		3424737	1					
ANR	3424780	Parameter	char const * check_subsystem	300:116:6708:6734	3424737	3	True				
ANR	3424781	ParameterType	char const *		3424737	0					
ANR	3424782	Identifier	check_subsystem		3424737	1					
ANR	3424783	CFGEntryNode	ENTRY		3424737		True				
ANR	3424784	CFGExitNode	EXIT		3424737		True				
ANR	3424785	Symbol	result		3424737						
ANR	3424786	Symbol	NULL		3424737						
ANR	3424787	Symbol	auth_level		3424737						
ANR	3424788	Symbol	& result		3424737						
ANR	3424789	Symbol	fmt		3424737						
ANR	3424790	Symbol	param_name		3424737						
ANR	3424791	Symbol	check_subsystem		3424737						
ANR	3424792	Function	SecMan :: getSecSetting_implementation	307:0:6881:8307							
ANR	3424793	FunctionDef	"SecMan :: getSecSetting_implementation (int * int_result , char * * str_result , const char * fmt , DCpermissionHierarchy const & auth_level , MyString * param_name , char const * check_subsystem)"		3424792	0					
ANR	3424794	CompoundStatement		309:0:7069:8307	3424792	0					
ANR	3424795	IdentifierDeclStatement	DCpermission const * perms = auth_level . getConfigPerms ( ) ;	310:1:7072:7127	3424792	0	True				
ANR	3424796	IdentifierDecl	* perms = auth_level . getConfigPerms ( )		3424792	0					
ANR	3424797	IdentifierDeclType	DCpermission const *		3424792	0					
ANR	3424798	Identifier	perms		3424792	1					
ANR	3424799	AssignmentExpression	* perms = auth_level . getConfigPerms ( )		3424792	2		=			
ANR	3424800	Identifier	perms		3424792	0					
ANR	3424801	CallExpression	auth_level . getConfigPerms ( )		3424792	1					
ANR	3424802	Callee	auth_level . getConfigPerms		3424792	0					
ANR	3424803	MemberAccess	auth_level . getConfigPerms		3424792	0					
ANR	3424804	Identifier	auth_level		3424792	0					
ANR	3424805	Identifier	getConfigPerms		3424792	1					
ANR	3424806	ArgumentList			3424792	1					
ANR	3424807	IdentifierDeclStatement	bool found ;	311:1:7130:7140	3424792	1	True				
ANR	3424808	IdentifierDecl	found		3424792	0					
ANR	3424809	IdentifierDeclType	bool		3424792	0					
ANR	3424810	Identifier	found		3424792	1					
ANR	3424811	ForStatement	for ( ; * perms != LAST_PERM ; perms ++ )		3424792	2					
ANR	3424812	Condition	* perms != LAST_PERM	317:8:7324:7342	3424792	0	True				
ANR	3424813	EqualityExpression	* perms != LAST_PERM		3424792	0		!=			
ANR	3424814	UnaryOperationExpression	* perms		3424792	0					
ANR	3424815	UnaryOperator	*		3424792	0					
ANR	3424816	Identifier	perms		3424792	1					
ANR	3424817	Identifier	LAST_PERM		3424792	1					
ANR	3424818	PostIncDecOperationExpression	perms ++	317:29:7345:7351	3424792	1	True				
ANR	3424819	Identifier	perms		3424792	0					
ANR	3424820	IncDec	++		3424792	1					
ANR	3424821	CompoundStatement		10:2:289:301	3424792	2					
ANR	3424822	IdentifierDeclStatement	MyString buf ;	318:2:7359:7371	3424792	0	True				
ANR	3424823	IdentifierDecl	buf		3424792	0					
ANR	3424824	IdentifierDeclType	MyString		3424792	0					
ANR	3424825	Identifier	buf		3424792	1					
ANR	3424826	IfStatement	if ( check_subsystem )		3424792	1					
ANR	3424827	Condition	check_subsystem	319:6:7379:7393	3424792	0	True				
ANR	3424828	Identifier	check_subsystem		3424792	0					
ANR	3424829	CompoundStatement		11:24:327:327	3424792	1					
ANR	3424830	ExpressionStatement	"buf . sprintf ( fmt , PermString ( * perms ) )"	322:3:7498:7536	3424792	0	True				
ANR	3424831	CallExpression	"buf . sprintf ( fmt , PermString ( * perms ) )"		3424792	0					
ANR	3424832	Callee	buf . sprintf		3424792	0					
ANR	3424833	MemberAccess	buf . sprintf		3424792	0					
ANR	3424834	Identifier	buf		3424792	0					
ANR	3424835	Identifier	sprintf		3424792	1					
ANR	3424836	ArgumentList	fmt		3424792	1					
ANR	3424837	Argument	fmt		3424792	0					
ANR	3424838	Identifier	fmt		3424792	0					
ANR	3424839	Argument	PermString ( * perms )		3424792	1					
ANR	3424840	CallExpression	PermString ( * perms )		3424792	0					
ANR	3424841	Callee	PermString		3424792	0					
ANR	3424842	Identifier	PermString		3424792	0					
ANR	3424843	ArgumentList	* perms		3424792	1					
ANR	3424844	Argument	* perms		3424792	0					
ANR	3424845	UnaryOperationExpression	* perms		3424792	0					
ANR	3424846	UnaryOperator	*		3424792	0					
ANR	3424847	Identifier	perms		3424792	1					
ANR	3424848	ExpressionStatement	"buf . sprintf_cat ( ""_%s"" , check_subsystem )"	323:3:7541:7579	3424792	1	True				
ANR	3424849	CallExpression	"buf . sprintf_cat ( ""_%s"" , check_subsystem )"		3424792	0					
ANR	3424850	Callee	buf . sprintf_cat		3424792	0					
ANR	3424851	MemberAccess	buf . sprintf_cat		3424792	0					
ANR	3424852	Identifier	buf		3424792	0					
ANR	3424853	Identifier	sprintf_cat		3424792	1					
ANR	3424854	ArgumentList	"""_%s"""		3424792	1					
ANR	3424855	Argument	"""_%s"""		3424792	0					
ANR	3424856	PrimaryExpression	"""_%s"""		3424792	0					
ANR	3424857	Argument	check_subsystem		3424792	1					
ANR	3424858	Identifier	check_subsystem		3424792	0					
ANR	3424859	IfStatement	if ( int_result )		3424792	2					
ANR	3424860	Condition	int_result	324:7:7588:7597	3424792	0	True				
ANR	3424861	Identifier	int_result		3424792	0					
ANR	3424862	CompoundStatement		16:20:531:531	3424792	1					
ANR	3424863	ExpressionStatement	"found = param_integer ( buf . Value ( ) , * int_result , false , 0 , false , 0 , 0 )"	325:4:7607:7679	3424792	0	True				
ANR	3424864	AssignmentExpression	"found = param_integer ( buf . Value ( ) , * int_result , false , 0 , false , 0 , 0 )"		3424792	0		=			
ANR	3424865	Identifier	found		3424792	0					
ANR	3424866	CallExpression	"param_integer ( buf . Value ( ) , * int_result , false , 0 , false , 0 , 0 )"		3424792	1					
ANR	3424867	Callee	param_integer		3424792	0					
ANR	3424868	Identifier	param_integer		3424792	0					
ANR	3424869	ArgumentList	buf . Value ( )		3424792	1					
ANR	3424870	Argument	buf . Value ( )		3424792	0					
ANR	3424871	CallExpression	buf . Value ( )		3424792	0					
ANR	3424872	Callee	buf . Value		3424792	0					
ANR	3424873	MemberAccess	buf . Value		3424792	0					
ANR	3424874	Identifier	buf		3424792	0					
ANR	3424875	Identifier	Value		3424792	1					
ANR	3424876	ArgumentList			3424792	1					
ANR	3424877	Argument	* int_result		3424792	1					
ANR	3424878	UnaryOperationExpression	* int_result		3424792	0					
ANR	3424879	UnaryOperator	*		3424792	0					
ANR	3424880	Identifier	int_result		3424792	1					
ANR	3424881	Argument	false		3424792	2					
ANR	3424882	Identifier	false		3424792	0					
ANR	3424883	Argument	0		3424792	3					
ANR	3424884	PrimaryExpression	0		3424792	0					
ANR	3424885	Argument	false		3424792	4					
ANR	3424886	Identifier	false		3424792	0					
ANR	3424887	Argument	0		3424792	5					
ANR	3424888	PrimaryExpression	0		3424792	0					
ANR	3424889	Argument	0		3424792	6					
ANR	3424890	PrimaryExpression	0		3424792	0					
ANR	3424891	ElseStatement	else		3424792	0					
ANR	3424892	CompoundStatement		19:8:624:624	3424792	0					
ANR	3424893	ExpressionStatement	* str_result = param ( buf . Value ( ) )	328:4:7700:7734	3424792	0	True				
ANR	3424894	AssignmentExpression	* str_result = param ( buf . Value ( ) )		3424792	0		=			
ANR	3424895	UnaryOperationExpression	* str_result		3424792	0					
ANR	3424896	UnaryOperator	*		3424792	0					
ANR	3424897	Identifier	str_result		3424792	1					
ANR	3424898	CallExpression	param ( buf . Value ( ) )		3424792	1					
ANR	3424899	Callee	param		3424792	0					
ANR	3424900	Identifier	param		3424792	0					
ANR	3424901	ArgumentList	buf . Value ( )		3424792	1					
ANR	3424902	Argument	buf . Value ( )		3424792	0					
ANR	3424903	CallExpression	buf . Value ( )		3424792	0					
ANR	3424904	Callee	buf . Value		3424792	0					
ANR	3424905	MemberAccess	buf . Value		3424792	0					
ANR	3424906	Identifier	buf		3424792	0					
ANR	3424907	Identifier	Value		3424792	1					
ANR	3424908	ArgumentList			3424792	1					
ANR	3424909	ExpressionStatement	found = * str_result	329:4:7740:7759	3424792	1	True				
ANR	3424910	AssignmentExpression	found = * str_result		3424792	0		=			
ANR	3424911	Identifier	found		3424792	0					
ANR	3424912	UnaryOperationExpression	* str_result		3424792	1					
ANR	3424913	UnaryOperator	*		3424792	0					
ANR	3424914	Identifier	str_result		3424792	1					
ANR	3424915	IfStatement	if ( found )		3424792	3					
ANR	3424916	Condition	found	331:7:7773:7777	3424792	0	True				
ANR	3424917	Identifier	found		3424792	0					
ANR	3424918	CompoundStatement		23:15:711:711	3424792	1					
ANR	3424919	IfStatement	if ( param_name )		3424792	0					
ANR	3424920	Condition	param_name	332:8:7791:7800	3424792	0	True				
ANR	3424921	Identifier	param_name		3424792	0					
ANR	3424922	CompoundStatement		24:21:734:734	3424792	1					
ANR	3424923	ExpressionStatement	param_name -> append_to_list ( buf )	334:5:7857:7888	3424792	0	True				
ANR	3424924	CallExpression	param_name -> append_to_list ( buf )		3424792	0					
ANR	3424925	Callee	param_name -> append_to_list		3424792	0					
ANR	3424926	PtrMemberAccess	param_name -> append_to_list		3424792	0					
ANR	3424927	Identifier	param_name		3424792	0					
ANR	3424928	Identifier	append_to_list		3424792	1					
ANR	3424929	ArgumentList	buf		3424792	1					
ANR	3424930	Argument	buf		3424792	0					
ANR	3424931	Identifier	buf		3424792	0					
ANR	3424932	ReturnStatement	return true ;	336:4:7900:7911	3424792	1	True				
ANR	3424933	Identifier	true		3424792	0					
ANR	3424934	ExpressionStatement	"buf . sprintf ( fmt , PermString ( * perms ) )"	340:2:7925:7963	3424792	2	True				
ANR	3424935	CallExpression	"buf . sprintf ( fmt , PermString ( * perms ) )"		3424792	0					
ANR	3424936	Callee	buf . sprintf		3424792	0					
ANR	3424937	MemberAccess	buf . sprintf		3424792	0					
ANR	3424938	Identifier	buf		3424792	0					
ANR	3424939	Identifier	sprintf		3424792	1					
ANR	3424940	ArgumentList	fmt		3424792	1					
ANR	3424941	Argument	fmt		3424792	0					
ANR	3424942	Identifier	fmt		3424792	0					
ANR	3424943	Argument	PermString ( * perms )		3424792	1					
ANR	3424944	CallExpression	PermString ( * perms )		3424792	0					
ANR	3424945	Callee	PermString		3424792	0					
ANR	3424946	Identifier	PermString		3424792	0					
ANR	3424947	ArgumentList	* perms		3424792	1					
ANR	3424948	Argument	* perms		3424792	0					
ANR	3424949	UnaryOperationExpression	* perms		3424792	0					
ANR	3424950	UnaryOperator	*		3424792	0					
ANR	3424951	Identifier	perms		3424792	1					
ANR	3424952	IfStatement	if ( int_result )		3424792	3					
ANR	3424953	Condition	int_result	341:6:7971:7980	3424792	0	True				
ANR	3424954	Identifier	int_result		3424792	0					
ANR	3424955	CompoundStatement		33:19:914:914	3424792	1					
ANR	3424956	ExpressionStatement	"found = param_integer ( buf . Value ( ) , * int_result , false , 0 , false , 0 , 0 )"	342:3:7989:8061	3424792	0	True				
ANR	3424957	AssignmentExpression	"found = param_integer ( buf . Value ( ) , * int_result , false , 0 , false , 0 , 0 )"		3424792	0		=			
ANR	3424958	Identifier	found		3424792	0					
ANR	3424959	CallExpression	"param_integer ( buf . Value ( ) , * int_result , false , 0 , false , 0 , 0 )"		3424792	1					
ANR	3424960	Callee	param_integer		3424792	0					
ANR	3424961	Identifier	param_integer		3424792	0					
ANR	3424962	ArgumentList	buf . Value ( )		3424792	1					
ANR	3424963	Argument	buf . Value ( )		3424792	0					
ANR	3424964	CallExpression	buf . Value ( )		3424792	0					
ANR	3424965	Callee	buf . Value		3424792	0					
ANR	3424966	MemberAccess	buf . Value		3424792	0					
ANR	3424967	Identifier	buf		3424792	0					
ANR	3424968	Identifier	Value		3424792	1					
ANR	3424969	ArgumentList			3424792	1					
ANR	3424970	Argument	* int_result		3424792	1					
ANR	3424971	UnaryOperationExpression	* int_result		3424792	0					
ANR	3424972	UnaryOperator	*		3424792	0					
ANR	3424973	Identifier	int_result		3424792	1					
ANR	3424974	Argument	false		3424792	2					
ANR	3424975	Identifier	false		3424792	0					
ANR	3424976	Argument	0		3424792	3					
ANR	3424977	PrimaryExpression	0		3424792	0					
ANR	3424978	Argument	false		3424792	4					
ANR	3424979	Identifier	false		3424792	0					
ANR	3424980	Argument	0		3424792	5					
ANR	3424981	PrimaryExpression	0		3424792	0					
ANR	3424982	Argument	0		3424792	6					
ANR	3424983	PrimaryExpression	0		3424792	0					
ANR	3424984	ElseStatement	else		3424792	0					
ANR	3424985	CompoundStatement		36:7:1004:1004	3424792	0					
ANR	3424986	ExpressionStatement	* str_result = param ( buf . Value ( ) )	345:3:8079:8113	3424792	0	True				
ANR	3424987	AssignmentExpression	* str_result = param ( buf . Value ( ) )		3424792	0		=			
ANR	3424988	UnaryOperationExpression	* str_result		3424792	0					
ANR	3424989	UnaryOperator	*		3424792	0					
ANR	3424990	Identifier	str_result		3424792	1					
ANR	3424991	CallExpression	param ( buf . Value ( ) )		3424792	1					
ANR	3424992	Callee	param		3424792	0					
ANR	3424993	Identifier	param		3424792	0					
ANR	3424994	ArgumentList	buf . Value ( )		3424792	1					
ANR	3424995	Argument	buf . Value ( )		3424792	0					
ANR	3424996	CallExpression	buf . Value ( )		3424792	0					
ANR	3424997	Callee	buf . Value		3424792	0					
ANR	3424998	MemberAccess	buf . Value		3424792	0					
ANR	3424999	Identifier	buf		3424792	0					
ANR	3425000	Identifier	Value		3424792	1					
ANR	3425001	ArgumentList			3424792	1					
ANR	3425002	ExpressionStatement	found = * str_result	346:3:8118:8137	3424792	1	True				
ANR	3425003	AssignmentExpression	found = * str_result		3424792	0		=			
ANR	3425004	Identifier	found		3424792	0					
ANR	3425005	UnaryOperationExpression	* str_result		3424792	1					
ANR	3425006	UnaryOperator	*		3424792	0					
ANR	3425007	Identifier	str_result		3424792	1					
ANR	3425008	IfStatement	if ( found )		3424792	4					
ANR	3425009	Condition	found	348:6:8149:8153	3424792	0	True				
ANR	3425010	Identifier	found		3424792	0					
ANR	3425011	CompoundStatement		40:14:1087:1087	3424792	1					
ANR	3425012	IfStatement	if ( param_name )		3424792	0					
ANR	3425013	Condition	param_name	349:7:8166:8175	3424792	0	True				
ANR	3425014	Identifier	param_name		3424792	0					
ANR	3425015	CompoundStatement		41:20:1109:1109	3424792	1					
ANR	3425016	ExpressionStatement	param_name -> append_to_list ( buf )	351:4:8230:8261	3424792	0	True				
ANR	3425017	CallExpression	param_name -> append_to_list ( buf )		3424792	0					
ANR	3425018	Callee	param_name -> append_to_list		3424792	0					
ANR	3425019	PtrMemberAccess	param_name -> append_to_list		3424792	0					
ANR	3425020	Identifier	param_name		3424792	0					
ANR	3425021	Identifier	append_to_list		3424792	1					
ANR	3425022	ArgumentList	buf		3424792	1					
ANR	3425023	Argument	buf		3424792	0					
ANR	3425024	Identifier	buf		3424792	0					
ANR	3425025	ReturnStatement	return true ;	353:3:8271:8282	3424792	1	True				
ANR	3425026	Identifier	true		3424792	0					
ANR	3425027	ReturnStatement	return false ;	357:1:8293:8305	3424792	3	True				
ANR	3425028	Identifier	false		3424792	0					
ANR	3425029	ReturnType	bool		3424792	1					
ANR	3425030	Identifier	SecMan :: getSecSetting_implementation		3424792	2					
ANR	3425031	ParameterList	"int * int_result , char * * str_result , const char * fmt , DCpermissionHierarchy const & auth_level , MyString * param_name , char const * check_subsystem"		3424792	3					
ANR	3425032	Parameter	int * int_result	308:38:6924:6938	3424792	0	True				
ANR	3425033	ParameterType	int *		3424792	0					
ANR	3425034	Identifier	int_result		3424792	1					
ANR	3425035	Parameter	char * * str_result	308:54:6940:6956	3424792	1	True				
ANR	3425036	ParameterType	char * *		3424792	0					
ANR	3425037	Identifier	str_result		3424792	1					
ANR	3425038	Parameter	const char * fmt	308:73:6959:6973	3424792	2	True				
ANR	3425039	ParameterType	const char *		3424792	0					
ANR	3425040	Identifier	fmt		3424792	1					
ANR	3425041	Parameter	DCpermissionHierarchy const & auth_level	308:90:6976:7014	3424792	3	True				
ANR	3425042	ParameterType	DCpermissionHierarchy const &		3424792	0					
ANR	3425043	Identifier	auth_level		3424792	1					
ANR	3425044	Parameter	MyString * param_name	308:131:7017:7036	3424792	4	True				
ANR	3425045	ParameterType	MyString *		3424792	0					
ANR	3425046	Identifier	param_name		3424792	1					
ANR	3425047	Parameter	char const * check_subsystem	308:153:7039:7065	3424792	5	True				
ANR	3425048	ParameterType	char const *		3424792	0					
ANR	3425049	Identifier	check_subsystem		3424792	1					
ANR	3425050	CFGEntryNode	ENTRY		3424792		True				
ANR	3425051	CFGExitNode	EXIT		3424792		True				
ANR	3425052	Symbol	int_result		3424792						
ANR	3425053	Symbol	LAST_PERM		3424792						
ANR	3425054	Symbol	auth_level		3424792						
ANR	3425055	Symbol	str_result		3424792						
ANR	3425056	Symbol	false		3424792						
ANR	3425057	Symbol	* int_result		3424792						
ANR	3425058	Symbol	fmt		3424792						
ANR	3425059	Symbol	auth_level . getConfigPerms		3424792						
ANR	3425060	Symbol	check_subsystem		3424792						
ANR	3425061	Symbol	buf		3424792						
ANR	3425062	Symbol	found		3424792						
ANR	3425063	Symbol	param		3424792						
ANR	3425064	Symbol	* perms		3424792						
ANR	3425065	Symbol	buf . Value		3424792						
ANR	3425066	Symbol	true		3424792						
ANR	3425067	Symbol	perms		3424792						
ANR	3425068	Symbol	param_integer		3424792						
ANR	3425069	Symbol	PermString		3424792						
ANR	3425070	Symbol	param_name		3424792						
ANR	3425071	Symbol	* str_result		3424792						
ANR	3425072	Function	SecMan :: FillInSecurityPolicyAd	374:0:8796:15077							
ANR	3425073	FunctionDef	"SecMan :: FillInSecurityPolicyAd (DCpermission auth_level , ClassAd * ad , bool raw_protocol , bool use_tmp_sec_session , bool force_authentication)"		3425072	0					
ANR	3425074	CompoundStatement		379:0:8969:15077	3425072	0					
ANR	3425075	IfStatement	if ( ! ad )		3425072	0					
ANR	3425076	Condition	! ad	380:5:8976:8979	3425072	0	True				
ANR	3425077	UnaryOperationExpression	! ad		3425072	0					
ANR	3425078	UnaryOperator	!		3425072	0					
ANR	3425079	Identifier	ad		3425072	1					
ANR	3425080	CompoundStatement		2:12:13:13	3425072	1					
ANR	3425081	ExpressionStatement	"EXCEPT ( ""SecMan::FillInSecurityPolicyAd called with NULL ad!"" )"	381:2:8987:9050	3425072	0	True				
ANR	3425082	CallExpression	"EXCEPT ( ""SecMan::FillInSecurityPolicyAd called with NULL ad!"" )"		3425072	0					
ANR	3425083	Callee	EXCEPT		3425072	0					
ANR	3425084	Identifier	EXCEPT		3425072	0					
ANR	3425085	ArgumentList	"""SecMan::FillInSecurityPolicyAd called with NULL ad!"""		3425072	1					
ANR	3425086	Argument	"""SecMan::FillInSecurityPolicyAd called with NULL ad!"""		3425072	0					
ANR	3425087	PrimaryExpression	"""SecMan::FillInSecurityPolicyAd called with NULL ad!"""		3425072	0					
ANR	3425088	IdentifierDeclStatement	"sec_req sec_authentication = force_authentication ? SEC_REQ_REQUIRED : sec_req_param ( ""SEC_%s_AUTHENTICATION"" , auth_level , SEC_REQ_OPTIONAL ) ;"	388:1:9244:9385	3425072	1	True				
ANR	3425089	IdentifierDecl	"sec_authentication = force_authentication ? SEC_REQ_REQUIRED : sec_req_param ( ""SEC_%s_AUTHENTICATION"" , auth_level , SEC_REQ_OPTIONAL )"		3425072	0					
ANR	3425090	IdentifierDeclType	sec_req		3425072	0					
ANR	3425091	Identifier	sec_authentication		3425072	1					
ANR	3425092	AssignmentExpression	"sec_authentication = force_authentication ? SEC_REQ_REQUIRED : sec_req_param ( ""SEC_%s_AUTHENTICATION"" , auth_level , SEC_REQ_OPTIONAL )"		3425072	2		=			
ANR	3425093	Identifier	sec_authentication		3425072	0					
ANR	3425094	ConditionalExpression	"force_authentication ? SEC_REQ_REQUIRED : sec_req_param ( ""SEC_%s_AUTHENTICATION"" , auth_level , SEC_REQ_OPTIONAL )"		3425072	1					
ANR	3425095	Condition	force_authentication		3425072	0					
ANR	3425096	Identifier	force_authentication		3425072	0					
ANR	3425097	Identifier	SEC_REQ_REQUIRED		3425072	1					
ANR	3425098	CallExpression	"sec_req_param ( ""SEC_%s_AUTHENTICATION"" , auth_level , SEC_REQ_OPTIONAL )"		3425072	2					
ANR	3425099	Callee	sec_req_param		3425072	0					
ANR	3425100	Identifier	sec_req_param		3425072	0					
ANR	3425101	ArgumentList	"""SEC_%s_AUTHENTICATION"""		3425072	1					
ANR	3425102	Argument	"""SEC_%s_AUTHENTICATION"""		3425072	0					
ANR	3425103	PrimaryExpression	"""SEC_%s_AUTHENTICATION"""		3425072	0					
ANR	3425104	Argument	auth_level		3425072	1					
ANR	3425105	Identifier	auth_level		3425072	0					
ANR	3425106	Argument	SEC_REQ_OPTIONAL		3425072	2					
ANR	3425107	Identifier	SEC_REQ_OPTIONAL		3425072	0					
ANR	3425108	IdentifierDeclStatement	"sec_req sec_encryption = sec_req_param ( ""SEC_%s_ENCRYPTION"" , auth_level , SEC_REQ_OPTIONAL ) ;"	391:1:9389:9481	3425072	2	True				
ANR	3425109	IdentifierDecl	"sec_encryption = sec_req_param ( ""SEC_%s_ENCRYPTION"" , auth_level , SEC_REQ_OPTIONAL )"		3425072	0					
ANR	3425110	IdentifierDeclType	sec_req		3425072	0					
ANR	3425111	Identifier	sec_encryption		3425072	1					
ANR	3425112	AssignmentExpression	"sec_encryption = sec_req_param ( ""SEC_%s_ENCRYPTION"" , auth_level , SEC_REQ_OPTIONAL )"		3425072	2		=			
ANR	3425113	Identifier	sec_encryption		3425072	0					
ANR	3425114	CallExpression	"sec_req_param ( ""SEC_%s_ENCRYPTION"" , auth_level , SEC_REQ_OPTIONAL )"		3425072	1					
ANR	3425115	Callee	sec_req_param		3425072	0					
ANR	3425116	Identifier	sec_req_param		3425072	0					
ANR	3425117	ArgumentList	"""SEC_%s_ENCRYPTION"""		3425072	1					
ANR	3425118	Argument	"""SEC_%s_ENCRYPTION"""		3425072	0					
ANR	3425119	PrimaryExpression	"""SEC_%s_ENCRYPTION"""		3425072	0					
ANR	3425120	Argument	auth_level		3425072	1					
ANR	3425121	Identifier	auth_level		3425072	0					
ANR	3425122	Argument	SEC_REQ_OPTIONAL		3425072	2					
ANR	3425123	Identifier	SEC_REQ_OPTIONAL		3425072	0					
ANR	3425124	IdentifierDeclStatement	"sec_req sec_integrity = sec_req_param ( ""SEC_%s_INTEGRITY"" , auth_level , SEC_REQ_OPTIONAL ) ;"	394:1:9485:9576	3425072	3	True				
ANR	3425125	IdentifierDecl	"sec_integrity = sec_req_param ( ""SEC_%s_INTEGRITY"" , auth_level , SEC_REQ_OPTIONAL )"		3425072	0					
ANR	3425126	IdentifierDeclType	sec_req		3425072	0					
ANR	3425127	Identifier	sec_integrity		3425072	1					
ANR	3425128	AssignmentExpression	"sec_integrity = sec_req_param ( ""SEC_%s_INTEGRITY"" , auth_level , SEC_REQ_OPTIONAL )"		3425072	2		=			
ANR	3425129	Identifier	sec_integrity		3425072	0					
ANR	3425130	CallExpression	"sec_req_param ( ""SEC_%s_INTEGRITY"" , auth_level , SEC_REQ_OPTIONAL )"		3425072	1					
ANR	3425131	Callee	sec_req_param		3425072	0					
ANR	3425132	Identifier	sec_req_param		3425072	0					
ANR	3425133	ArgumentList	"""SEC_%s_INTEGRITY"""		3425072	1					
ANR	3425134	Argument	"""SEC_%s_INTEGRITY"""		3425072	0					
ANR	3425135	PrimaryExpression	"""SEC_%s_INTEGRITY"""		3425072	0					
ANR	3425136	Argument	auth_level		3425072	1					
ANR	3425137	Identifier	auth_level		3425072	0					
ANR	3425138	Argument	SEC_REQ_OPTIONAL		3425072	2					
ANR	3425139	Identifier	SEC_REQ_OPTIONAL		3425072	0					
ANR	3425140	IdentifierDeclStatement	"sec_req sec_negotiation = sec_req_param ( ""SEC_%s_NEGOTIATION"" , auth_level , SEC_REQ_PREFERRED ) ;"	410:1:10092:10185	3425072	4	True				
ANR	3425141	IdentifierDecl	"sec_negotiation = sec_req_param ( ""SEC_%s_NEGOTIATION"" , auth_level , SEC_REQ_PREFERRED )"		3425072	0					
ANR	3425142	IdentifierDeclType	sec_req		3425072	0					
ANR	3425143	Identifier	sec_negotiation		3425072	1					
ANR	3425144	AssignmentExpression	"sec_negotiation = sec_req_param ( ""SEC_%s_NEGOTIATION"" , auth_level , SEC_REQ_PREFERRED )"		3425072	2		=			
ANR	3425145	Identifier	sec_negotiation		3425072	0					
ANR	3425146	CallExpression	"sec_req_param ( ""SEC_%s_NEGOTIATION"" , auth_level , SEC_REQ_PREFERRED )"		3425072	1					
ANR	3425147	Callee	sec_req_param		3425072	0					
ANR	3425148	Identifier	sec_req_param		3425072	0					
ANR	3425149	ArgumentList	"""SEC_%s_NEGOTIATION"""		3425072	1					
ANR	3425150	Argument	"""SEC_%s_NEGOTIATION"""		3425072	0					
ANR	3425151	PrimaryExpression	"""SEC_%s_NEGOTIATION"""		3425072	0					
ANR	3425152	Argument	auth_level		3425072	1					
ANR	3425153	Identifier	auth_level		3425072	0					
ANR	3425154	Argument	SEC_REQ_PREFERRED		3425072	2					
ANR	3425155	Identifier	SEC_REQ_PREFERRED		3425072	0					
ANR	3425156	IfStatement	if ( raw_protocol )		3425072	5					
ANR	3425157	Condition	raw_protocol	412:5:10193:10204	3425072	0	True				
ANR	3425158	Identifier	raw_protocol		3425072	0					
ANR	3425159	CompoundStatement		34:20:1238:1238	3425072	1					
ANR	3425160	ExpressionStatement	sec_negotiation = SEC_REQ_NEVER	413:2:10212:10243	3425072	0	True				
ANR	3425161	AssignmentExpression	sec_negotiation = SEC_REQ_NEVER		3425072	0		=			
ANR	3425162	Identifier	sec_negotiation		3425072	0					
ANR	3425163	Identifier	SEC_REQ_NEVER		3425072	1					
ANR	3425164	ExpressionStatement	sec_authentication = SEC_REQ_NEVER	414:2:10247:10281	3425072	1	True				
ANR	3425165	AssignmentExpression	sec_authentication = SEC_REQ_NEVER		3425072	0		=			
ANR	3425166	Identifier	sec_authentication		3425072	0					
ANR	3425167	Identifier	SEC_REQ_NEVER		3425072	1					
ANR	3425168	ExpressionStatement	sec_encryption = SEC_REQ_NEVER	415:2:10285:10315	3425072	2	True				
ANR	3425169	AssignmentExpression	sec_encryption = SEC_REQ_NEVER		3425072	0		=			
ANR	3425170	Identifier	sec_encryption		3425072	0					
ANR	3425171	Identifier	SEC_REQ_NEVER		3425072	1					
ANR	3425172	ExpressionStatement	sec_integrity = SEC_REQ_NEVER	416:2:10319:10348	3425072	3	True				
ANR	3425173	AssignmentExpression	sec_integrity = SEC_REQ_NEVER		3425072	0		=			
ANR	3425174	Identifier	sec_integrity		3425072	0					
ANR	3425175	Identifier	SEC_REQ_NEVER		3425072	1					
ANR	3425176	IfStatement	"if ( ! ReconcileSecurityDependency ( sec_authentication , sec_encryption ) || ! ReconcileSecurityDependency ( sec_authentication , sec_integrity ) || ! ReconcileSecurityDependency ( sec_negotiation , sec_authentication ) || ! ReconcileSecurityDependency ( sec_negotiation , sec_encryption ) || ! ReconcileSecurityDependency ( sec_negotiation , sec_integrity ) )"		3425072	6					
ANR	3425177	Condition	"! ReconcileSecurityDependency ( sec_authentication , sec_encryption ) || ! ReconcileSecurityDependency ( sec_authentication , sec_integrity ) || ! ReconcileSecurityDependency ( sec_negotiation , sec_authentication ) || ! ReconcileSecurityDependency ( sec_negotiation , sec_encryption ) || ! ReconcileSecurityDependency ( sec_negotiation , sec_integrity )"	420:5:10360:10707	3425072	0	True				
ANR	3425178	OrExpression	"! ReconcileSecurityDependency ( sec_authentication , sec_encryption ) || ! ReconcileSecurityDependency ( sec_authentication , sec_integrity ) || ! ReconcileSecurityDependency ( sec_negotiation , sec_authentication ) || ! ReconcileSecurityDependency ( sec_negotiation , sec_encryption ) || ! ReconcileSecurityDependency ( sec_negotiation , sec_integrity )"		3425072	0		||			
ANR	3425179	UnaryOperationExpression	"! ReconcileSecurityDependency ( sec_authentication , sec_encryption )"		3425072	0					
ANR	3425180	UnaryOperator	!		3425072	0					
ANR	3425181	CallExpression	"ReconcileSecurityDependency ( sec_authentication , sec_encryption )"		3425072	1					
ANR	3425182	Callee	ReconcileSecurityDependency		3425072	0					
ANR	3425183	Identifier	ReconcileSecurityDependency		3425072	0					
ANR	3425184	ArgumentList	sec_authentication		3425072	1					
ANR	3425185	Argument	sec_authentication		3425072	0					
ANR	3425186	Identifier	sec_authentication		3425072	0					
ANR	3425187	Argument	sec_encryption		3425072	1					
ANR	3425188	Identifier	sec_encryption		3425072	0					
ANR	3425189	OrExpression	"! ReconcileSecurityDependency ( sec_authentication , sec_integrity ) || ! ReconcileSecurityDependency ( sec_negotiation , sec_authentication ) || ! ReconcileSecurityDependency ( sec_negotiation , sec_encryption ) || ! ReconcileSecurityDependency ( sec_negotiation , sec_integrity )"		3425072	1		||			
ANR	3425190	UnaryOperationExpression	"! ReconcileSecurityDependency ( sec_authentication , sec_integrity )"		3425072	0					
ANR	3425191	UnaryOperator	!		3425072	0					
ANR	3425192	CallExpression	"ReconcileSecurityDependency ( sec_authentication , sec_integrity )"		3425072	1					
ANR	3425193	Callee	ReconcileSecurityDependency		3425072	0					
ANR	3425194	Identifier	ReconcileSecurityDependency		3425072	0					
ANR	3425195	ArgumentList	sec_authentication		3425072	1					
ANR	3425196	Argument	sec_authentication		3425072	0					
ANR	3425197	Identifier	sec_authentication		3425072	0					
ANR	3425198	Argument	sec_integrity		3425072	1					
ANR	3425199	Identifier	sec_integrity		3425072	0					
ANR	3425200	OrExpression	"! ReconcileSecurityDependency ( sec_negotiation , sec_authentication ) || ! ReconcileSecurityDependency ( sec_negotiation , sec_encryption ) || ! ReconcileSecurityDependency ( sec_negotiation , sec_integrity )"		3425072	1		||			
ANR	3425201	UnaryOperationExpression	"! ReconcileSecurityDependency ( sec_negotiation , sec_authentication )"		3425072	0					
ANR	3425202	UnaryOperator	!		3425072	0					
ANR	3425203	CallExpression	"ReconcileSecurityDependency ( sec_negotiation , sec_authentication )"		3425072	1					
ANR	3425204	Callee	ReconcileSecurityDependency		3425072	0					
ANR	3425205	Identifier	ReconcileSecurityDependency		3425072	0					
ANR	3425206	ArgumentList	sec_negotiation		3425072	1					
ANR	3425207	Argument	sec_negotiation		3425072	0					
ANR	3425208	Identifier	sec_negotiation		3425072	0					
ANR	3425209	Argument	sec_authentication		3425072	1					
ANR	3425210	Identifier	sec_authentication		3425072	0					
ANR	3425211	OrExpression	"! ReconcileSecurityDependency ( sec_negotiation , sec_encryption ) || ! ReconcileSecurityDependency ( sec_negotiation , sec_integrity )"		3425072	1		||			
ANR	3425212	UnaryOperationExpression	"! ReconcileSecurityDependency ( sec_negotiation , sec_encryption )"		3425072	0					
ANR	3425213	UnaryOperator	!		3425072	0					
ANR	3425214	CallExpression	"ReconcileSecurityDependency ( sec_negotiation , sec_encryption )"		3425072	1					
ANR	3425215	Callee	ReconcileSecurityDependency		3425072	0					
ANR	3425216	Identifier	ReconcileSecurityDependency		3425072	0					
ANR	3425217	ArgumentList	sec_negotiation		3425072	1					
ANR	3425218	Argument	sec_negotiation		3425072	0					
ANR	3425219	Identifier	sec_negotiation		3425072	0					
ANR	3425220	Argument	sec_encryption		3425072	1					
ANR	3425221	Identifier	sec_encryption		3425072	0					
ANR	3425222	UnaryOperationExpression	"! ReconcileSecurityDependency ( sec_negotiation , sec_integrity )"		3425072	1					
ANR	3425223	UnaryOperator	!		3425072	0					
ANR	3425224	CallExpression	"ReconcileSecurityDependency ( sec_negotiation , sec_integrity )"		3425072	1					
ANR	3425225	Callee	ReconcileSecurityDependency		3425072	0					
ANR	3425226	Identifier	ReconcileSecurityDependency		3425072	0					
ANR	3425227	ArgumentList	sec_negotiation		3425072	1					
ANR	3425228	Argument	sec_negotiation		3425072	0					
ANR	3425229	Identifier	sec_negotiation		3425072	0					
ANR	3425230	Argument	sec_integrity		3425072	1					
ANR	3425231	Identifier	sec_integrity		3425072	0					
ANR	3425232	CompoundStatement		46:65:1740:1740	3425072	1					
ANR	3425233	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: failure! can't resolve security policy:\\n"" )"	427:2:10750:10823	3425072	0	True				
ANR	3425234	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: failure! can't resolve security policy:\\n"" )"		3425072	0					
ANR	3425235	Callee	dprintf		3425072	0					
ANR	3425236	Identifier	dprintf		3425072	0					
ANR	3425237	ArgumentList	D_SECURITY		3425072	1					
ANR	3425238	Argument	D_SECURITY		3425072	0					
ANR	3425239	Identifier	D_SECURITY		3425072	0					
ANR	3425240	Argument	"""SECMAN: failure! can't resolve security policy:\\n"""		3425072	1					
ANR	3425241	PrimaryExpression	"""SECMAN: failure! can't resolve security policy:\\n"""		3425072	0					
ANR	3425242	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN:   SEC_NEGOTIATION=\\""%s\\""\\n"" , SecMan :: sec_req_rev [ sec_negotiation ] )"	428:2:10827:10927	3425072	1	True				
ANR	3425243	CallExpression	"dprintf ( D_SECURITY , ""SECMAN:   SEC_NEGOTIATION=\\""%s\\""\\n"" , SecMan :: sec_req_rev [ sec_negotiation ] )"		3425072	0					
ANR	3425244	Callee	dprintf		3425072	0					
ANR	3425245	Identifier	dprintf		3425072	0					
ANR	3425246	ArgumentList	D_SECURITY		3425072	1					
ANR	3425247	Argument	D_SECURITY		3425072	0					
ANR	3425248	Identifier	D_SECURITY		3425072	0					
ANR	3425249	Argument	"""SECMAN:   SEC_NEGOTIATION=\\""%s\\""\\n"""		3425072	1					
ANR	3425250	PrimaryExpression	"""SECMAN:   SEC_NEGOTIATION=\\""%s\\""\\n"""		3425072	0					
ANR	3425251	Argument	SecMan :: sec_req_rev [ sec_negotiation ]		3425072	2					
ANR	3425252	ArrayIndexing	SecMan :: sec_req_rev [ sec_negotiation ]		3425072	0					
ANR	3425253	Identifier	SecMan :: sec_req_rev		3425072	0					
ANR	3425254	Identifier	sec_negotiation		3425072	1					
ANR	3425255	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN:   SEC_AUTHENTICATION=\\""%s\\""\\n"" , SecMan :: sec_req_rev [ sec_authentication ] )"	430:2:10931:11037	3425072	2	True				
ANR	3425256	CallExpression	"dprintf ( D_SECURITY , ""SECMAN:   SEC_AUTHENTICATION=\\""%s\\""\\n"" , SecMan :: sec_req_rev [ sec_authentication ] )"		3425072	0					
ANR	3425257	Callee	dprintf		3425072	0					
ANR	3425258	Identifier	dprintf		3425072	0					
ANR	3425259	ArgumentList	D_SECURITY		3425072	1					
ANR	3425260	Argument	D_SECURITY		3425072	0					
ANR	3425261	Identifier	D_SECURITY		3425072	0					
ANR	3425262	Argument	"""SECMAN:   SEC_AUTHENTICATION=\\""%s\\""\\n"""		3425072	1					
ANR	3425263	PrimaryExpression	"""SECMAN:   SEC_AUTHENTICATION=\\""%s\\""\\n"""		3425072	0					
ANR	3425264	Argument	SecMan :: sec_req_rev [ sec_authentication ]		3425072	2					
ANR	3425265	ArrayIndexing	SecMan :: sec_req_rev [ sec_authentication ]		3425072	0					
ANR	3425266	Identifier	SecMan :: sec_req_rev		3425072	0					
ANR	3425267	Identifier	sec_authentication		3425072	1					
ANR	3425268	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN:   SEC_ENCRYPTION=\\""%s\\""\\n"" , SecMan :: sec_req_rev [ sec_encryption ] )"	432:2:11041:11140	3425072	3	True				
ANR	3425269	CallExpression	"dprintf ( D_SECURITY , ""SECMAN:   SEC_ENCRYPTION=\\""%s\\""\\n"" , SecMan :: sec_req_rev [ sec_encryption ] )"		3425072	0					
ANR	3425270	Callee	dprintf		3425072	0					
ANR	3425271	Identifier	dprintf		3425072	0					
ANR	3425272	ArgumentList	D_SECURITY		3425072	1					
ANR	3425273	Argument	D_SECURITY		3425072	0					
ANR	3425274	Identifier	D_SECURITY		3425072	0					
ANR	3425275	Argument	"""SECMAN:   SEC_ENCRYPTION=\\""%s\\""\\n"""		3425072	1					
ANR	3425276	PrimaryExpression	"""SECMAN:   SEC_ENCRYPTION=\\""%s\\""\\n"""		3425072	0					
ANR	3425277	Argument	SecMan :: sec_req_rev [ sec_encryption ]		3425072	2					
ANR	3425278	ArrayIndexing	SecMan :: sec_req_rev [ sec_encryption ]		3425072	0					
ANR	3425279	Identifier	SecMan :: sec_req_rev		3425072	0					
ANR	3425280	Identifier	sec_encryption		3425072	1					
ANR	3425281	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN:   SEC_INTEGRITY=\\""%s\\""\\n"" , SecMan :: sec_req_rev [ sec_integrity ] )"	434:2:11144:11241	3425072	4	True				
ANR	3425282	CallExpression	"dprintf ( D_SECURITY , ""SECMAN:   SEC_INTEGRITY=\\""%s\\""\\n"" , SecMan :: sec_req_rev [ sec_integrity ] )"		3425072	0					
ANR	3425283	Callee	dprintf		3425072	0					
ANR	3425284	Identifier	dprintf		3425072	0					
ANR	3425285	ArgumentList	D_SECURITY		3425072	1					
ANR	3425286	Argument	D_SECURITY		3425072	0					
ANR	3425287	Identifier	D_SECURITY		3425072	0					
ANR	3425288	Argument	"""SECMAN:   SEC_INTEGRITY=\\""%s\\""\\n"""		3425072	1					
ANR	3425289	PrimaryExpression	"""SECMAN:   SEC_INTEGRITY=\\""%s\\""\\n"""		3425072	0					
ANR	3425290	Argument	SecMan :: sec_req_rev [ sec_integrity ]		3425072	2					
ANR	3425291	ArrayIndexing	SecMan :: sec_req_rev [ sec_integrity ]		3425072	0					
ANR	3425292	Identifier	SecMan :: sec_req_rev		3425072	0					
ANR	3425293	Identifier	sec_integrity		3425072	1					
ANR	3425294	ReturnStatement	return false ;	436:2:11245:11257	3425072	5	True				
ANR	3425295	Identifier	false		3425072	0					
ANR	3425296	IdentifierDeclStatement	char * paramer ;	441:1:11346:11359	3425072	7	True				
ANR	3425297	IdentifierDecl	* paramer		3425072	0					
ANR	3425298	IdentifierDeclType	char *		3425072	0					
ANR	3425299	Identifier	paramer		3425072	1					
ANR	3425300	ExpressionStatement	"paramer = SecMan :: getSecSetting ( ""SEC_%s_AUTHENTICATION_METHODS"" , auth_level )"	444:1:11380:11457	3425072	8	True				
ANR	3425301	AssignmentExpression	"paramer = SecMan :: getSecSetting ( ""SEC_%s_AUTHENTICATION_METHODS"" , auth_level )"		3425072	0		=			
ANR	3425302	Identifier	paramer		3425072	0					
ANR	3425303	CallExpression	"SecMan :: getSecSetting ( ""SEC_%s_AUTHENTICATION_METHODS"" , auth_level )"		3425072	1					
ANR	3425304	Callee	SecMan :: getSecSetting		3425072	0					
ANR	3425305	Identifier	SecMan :: getSecSetting		3425072	0					
ANR	3425306	ArgumentList	"""SEC_%s_AUTHENTICATION_METHODS"""		3425072	1					
ANR	3425307	Argument	"""SEC_%s_AUTHENTICATION_METHODS"""		3425072	0					
ANR	3425308	PrimaryExpression	"""SEC_%s_AUTHENTICATION_METHODS"""		3425072	0					
ANR	3425309	Argument	auth_level		3425072	1					
ANR	3425310	Identifier	auth_level		3425072	0					
ANR	3425311	IfStatement	if ( paramer == NULL )		3425072	9					
ANR	3425312	Condition	paramer == NULL	445:5:11464:11478	3425072	0	True				
ANR	3425313	EqualityExpression	paramer == NULL		3425072	0		==			
ANR	3425314	Identifier	paramer		3425072	0					
ANR	3425315	Identifier	NULL		3425072	1					
ANR	3425316	CompoundStatement		67:22:2511:2511	3425072	1					
ANR	3425317	ExpressionStatement	paramer = strdup ( SecMan :: getDefaultAuthenticationMethods ( ) . Value ( ) )	446:2:11485:11552	3425072	0	True				
ANR	3425318	AssignmentExpression	paramer = strdup ( SecMan :: getDefaultAuthenticationMethods ( ) . Value ( ) )		3425072	0		=			
ANR	3425319	Identifier	paramer		3425072	0					
ANR	3425320	CallExpression	strdup ( SecMan :: getDefaultAuthenticationMethods ( ) . Value ( ) )		3425072	1					
ANR	3425321	Callee	strdup		3425072	0					
ANR	3425322	Identifier	strdup		3425072	0					
ANR	3425323	ArgumentList	SecMan :: getDefaultAuthenticationMethods ( ) . Value ( )		3425072	1					
ANR	3425324	Argument	SecMan :: getDefaultAuthenticationMethods ( ) . Value ( )		3425072	0					
ANR	3425325	CallExpression	SecMan :: getDefaultAuthenticationMethods ( ) . Value ( )		3425072	0					
ANR	3425326	Callee	SecMan :: getDefaultAuthenticationMethods ( ) . Value		3425072	0					
ANR	3425327	MemberAccess	SecMan :: getDefaultAuthenticationMethods ( ) . Value		3425072	0					
ANR	3425328	CallExpression	SecMan :: getDefaultAuthenticationMethods ( )		3425072	0					
ANR	3425329	Callee	SecMan :: getDefaultAuthenticationMethods		3425072	0					
ANR	3425330	Identifier	SecMan :: getDefaultAuthenticationMethods		3425072	0					
ANR	3425331	ArgumentList			3425072	1					
ANR	3425332	Identifier	Value		3425072	1					
ANR	3425333	ArgumentList			3425072	1					
ANR	3425334	IfStatement	if ( paramer )		3425072	10					
ANR	3425335	Condition	paramer	449:5:11563:11569	3425072	0	True				
ANR	3425336	Identifier	paramer		3425072	0					
ANR	3425337	CompoundStatement		71:14:2602:2602	3425072	1					
ANR	3425338	ExpressionStatement	"ad -> Assign ( ATTR_SEC_AUTHENTICATION_METHODS , paramer )"	450:2:11576:11629	3425072	0	True				
ANR	3425339	CallExpression	"ad -> Assign ( ATTR_SEC_AUTHENTICATION_METHODS , paramer )"		3425072	0					
ANR	3425340	Callee	ad -> Assign		3425072	0					
ANR	3425341	PtrMemberAccess	ad -> Assign		3425072	0					
ANR	3425342	Identifier	ad		3425072	0					
ANR	3425343	Identifier	Assign		3425072	1					
ANR	3425344	ArgumentList	ATTR_SEC_AUTHENTICATION_METHODS		3425072	1					
ANR	3425345	Argument	ATTR_SEC_AUTHENTICATION_METHODS		3425072	0					
ANR	3425346	Identifier	ATTR_SEC_AUTHENTICATION_METHODS		3425072	0					
ANR	3425347	Argument	paramer		3425072	1					
ANR	3425348	Identifier	paramer		3425072	0					
ANR	3425349	ExpressionStatement	free ( paramer )	451:2:11633:11646	3425072	1	True				
ANR	3425350	CallExpression	free ( paramer )		3425072	0					
ANR	3425351	Callee	free		3425072	0					
ANR	3425352	Identifier	free		3425072	0					
ANR	3425353	ArgumentList	paramer		3425072	1					
ANR	3425354	Argument	paramer		3425072	0					
ANR	3425355	Identifier	paramer		3425072	0					
ANR	3425356	ExpressionStatement	paramer = NULL	452:2:11650:11664	3425072	2	True				
ANR	3425357	AssignmentExpression	paramer = NULL		3425072	0		=			
ANR	3425358	Identifier	paramer		3425072	0					
ANR	3425359	Identifier	NULL		3425072	1					
ANR	3425360	ElseStatement	else		3425072	0					
ANR	3425361	CompoundStatement		75:8:2704:2704	3425072	0					
ANR	3425362	IfStatement	if ( sec_authentication == SEC_REQ_REQUIRED )		3425072	0					
ANR	3425363	Condition	sec_authentication == SEC_REQ_REQUIRED	454:6:11682:11719	3425072	0	True				
ANR	3425364	EqualityExpression	sec_authentication == SEC_REQ_REQUIRED		3425072	0		==			
ANR	3425365	Identifier	sec_authentication		3425072	0					
ANR	3425366	Identifier	SEC_REQ_REQUIRED		3425072	1					
ANR	3425367	CompoundStatement		76:47:2753:2753	3425072	1					
ANR	3425368	Statement	dprintf	455:3:11728:11734	3425072	0	True				
ANR	3425369	Statement	(	455:10:11735:11735	3425072	1	True				
ANR	3425370	Statement	D_SECURITY	455:12:11737:11746	3425072	2	True				
ANR	3425371	Statement	","	455:22:11747:11747	3425072	3	True				
ANR	3425372	Statement	"""SECMAN: no auth methods, """	455:24:11749:11775	3425072	4	True				
ANR	3425373	Statement	"""but a feature was required! failing...\\n"""	456:6:11783:11824	3425072	5	True				
ANR	3425374	Statement	)	456:49:11826:11826	3425072	6	True				
ANR	3425375	ExpressionStatement		456:50:11827:11827	3425072	7	True				
ANR	3425376	ReturnStatement	return false ;	457:3:11832:11844	3425072	8	True				
ANR	3425377	Identifier	false		3425072	0					
ANR	3425378	ElseStatement	else		3425072	0					
ANR	3425379	CompoundStatement		80:9:2885:2885	3425072	0					
ANR	3425380	Statement	dprintf	462:3:12030:12036	3425072	0	True				
ANR	3425381	Statement	(	462:10:12037:12037	3425072	1	True				
ANR	3425382	Statement	D_SECURITY	462:12:12039:12048	3425072	2	True				
ANR	3425383	Statement	","	462:22:12049:12049	3425072	3	True				
ANR	3425384	Statement	"""SECMAN: no auth methods, """	462:24:12051:12077	3425072	4	True				
ANR	3425385	Statement	"""disabling authentication, crypto, and integrity.\\n"""	463:5:12084:12135	3425072	5	True				
ANR	3425386	Statement	)	463:58:12137:12137	3425072	6	True				
ANR	3425387	ExpressionStatement		463:59:12138:12138	3425072	7	True				
ANR	3425388	ExpressionStatement	sec_authentication = SEC_REQ_NEVER	464:3:12143:12177	3425072	8	True				
ANR	3425389	AssignmentExpression	sec_authentication = SEC_REQ_NEVER		3425072	0		=			
ANR	3425390	Identifier	sec_authentication		3425072	0					
ANR	3425391	Identifier	SEC_REQ_NEVER		3425072	1					
ANR	3425392	ExpressionStatement	sec_encryption = SEC_REQ_NEVER	465:3:12182:12212	3425072	9	True				
ANR	3425393	AssignmentExpression	sec_encryption = SEC_REQ_NEVER		3425072	0		=			
ANR	3425394	Identifier	sec_encryption		3425072	0					
ANR	3425395	Identifier	SEC_REQ_NEVER		3425072	1					
ANR	3425396	ExpressionStatement	sec_integrity = SEC_REQ_NEVER	466:3:12217:12246	3425072	10	True				
ANR	3425397	AssignmentExpression	sec_integrity = SEC_REQ_NEVER		3425072	0		=			
ANR	3425398	Identifier	sec_integrity		3425072	0					
ANR	3425399	Identifier	SEC_REQ_NEVER		3425072	1					
ANR	3425400	ExpressionStatement	"paramer = SecMan :: getSecSetting ( ""SEC_%s_CRYPTO_METHODS"" , auth_level )"	473:1:12278:12346	3425072	11	True				
ANR	3425401	AssignmentExpression	"paramer = SecMan :: getSecSetting ( ""SEC_%s_CRYPTO_METHODS"" , auth_level )"		3425072	0		=			
ANR	3425402	Identifier	paramer		3425072	0					
ANR	3425403	CallExpression	"SecMan :: getSecSetting ( ""SEC_%s_CRYPTO_METHODS"" , auth_level )"		3425072	1					
ANR	3425404	Callee	SecMan :: getSecSetting		3425072	0					
ANR	3425405	Identifier	SecMan :: getSecSetting		3425072	0					
ANR	3425406	ArgumentList	"""SEC_%s_CRYPTO_METHODS"""		3425072	1					
ANR	3425407	Argument	"""SEC_%s_CRYPTO_METHODS"""		3425072	0					
ANR	3425408	PrimaryExpression	"""SEC_%s_CRYPTO_METHODS"""		3425072	0					
ANR	3425409	Argument	auth_level		3425072	1					
ANR	3425410	Identifier	auth_level		3425072	0					
ANR	3425411	IfStatement	if ( ! paramer )		3425072	12					
ANR	3425412	Condition	! paramer	474:5:12353:12360	3425072	0	True				
ANR	3425413	UnaryOperationExpression	! paramer		3425072	0					
ANR	3425414	UnaryOperator	!		3425072	0					
ANR	3425415	Identifier	paramer		3425072	1					
ANR	3425416	CompoundStatement		96:15:3393:3393	3425072	1					
ANR	3425417	ExpressionStatement	paramer = strdup ( SecMan :: getDefaultCryptoMethods ( ) . Value ( ) )	475:2:12367:12426	3425072	0	True				
ANR	3425418	AssignmentExpression	paramer = strdup ( SecMan :: getDefaultCryptoMethods ( ) . Value ( ) )		3425072	0		=			
ANR	3425419	Identifier	paramer		3425072	0					
ANR	3425420	CallExpression	strdup ( SecMan :: getDefaultCryptoMethods ( ) . Value ( ) )		3425072	1					
ANR	3425421	Callee	strdup		3425072	0					
ANR	3425422	Identifier	strdup		3425072	0					
ANR	3425423	ArgumentList	SecMan :: getDefaultCryptoMethods ( ) . Value ( )		3425072	1					
ANR	3425424	Argument	SecMan :: getDefaultCryptoMethods ( ) . Value ( )		3425072	0					
ANR	3425425	CallExpression	SecMan :: getDefaultCryptoMethods ( ) . Value ( )		3425072	0					
ANR	3425426	Callee	SecMan :: getDefaultCryptoMethods ( ) . Value		3425072	0					
ANR	3425427	MemberAccess	SecMan :: getDefaultCryptoMethods ( ) . Value		3425072	0					
ANR	3425428	CallExpression	SecMan :: getDefaultCryptoMethods ( )		3425072	0					
ANR	3425429	Callee	SecMan :: getDefaultCryptoMethods		3425072	0					
ANR	3425430	Identifier	SecMan :: getDefaultCryptoMethods		3425072	0					
ANR	3425431	ArgumentList			3425072	1					
ANR	3425432	Identifier	Value		3425072	1					
ANR	3425433	ArgumentList			3425072	1					
ANR	3425434	IfStatement	if ( paramer )		3425072	13					
ANR	3425435	Condition	paramer	478:5:12437:12443	3425072	0	True				
ANR	3425436	Identifier	paramer		3425072	0					
ANR	3425437	CompoundStatement		100:14:3476:3476	3425072	1					
ANR	3425438	ExpressionStatement	"ad -> Assign ( ATTR_SEC_CRYPTO_METHODS , paramer )"	479:2:12450:12495	3425072	0	True				
ANR	3425439	CallExpression	"ad -> Assign ( ATTR_SEC_CRYPTO_METHODS , paramer )"		3425072	0					
ANR	3425440	Callee	ad -> Assign		3425072	0					
ANR	3425441	PtrMemberAccess	ad -> Assign		3425072	0					
ANR	3425442	Identifier	ad		3425072	0					
ANR	3425443	Identifier	Assign		3425072	1					
ANR	3425444	ArgumentList	ATTR_SEC_CRYPTO_METHODS		3425072	1					
ANR	3425445	Argument	ATTR_SEC_CRYPTO_METHODS		3425072	0					
ANR	3425446	Identifier	ATTR_SEC_CRYPTO_METHODS		3425072	0					
ANR	3425447	Argument	paramer		3425072	1					
ANR	3425448	Identifier	paramer		3425072	0					
ANR	3425449	ExpressionStatement	free ( paramer )	480:2:12499:12512	3425072	1	True				
ANR	3425450	CallExpression	free ( paramer )		3425072	0					
ANR	3425451	Callee	free		3425072	0					
ANR	3425452	Identifier	free		3425072	0					
ANR	3425453	ArgumentList	paramer		3425072	1					
ANR	3425454	Argument	paramer		3425072	0					
ANR	3425455	Identifier	paramer		3425072	0					
ANR	3425456	ExpressionStatement	paramer = NULL	481:2:12516:12530	3425072	2	True				
ANR	3425457	AssignmentExpression	paramer = NULL		3425072	0		=			
ANR	3425458	Identifier	paramer		3425072	0					
ANR	3425459	Identifier	NULL		3425072	1					
ANR	3425460	ElseStatement	else		3425072	0					
ANR	3425461	CompoundStatement		104:8:3570:3570	3425072	0					
ANR	3425462	IfStatement	if ( sec_encryption == SEC_REQ_REQUIRED || sec_integrity == SEC_REQ_REQUIRED )		3425072	0					
ANR	3425463	Condition	sec_encryption == SEC_REQ_REQUIRED || sec_integrity == SEC_REQ_REQUIRED	483:6:12548:12622	3425072	0	True				
ANR	3425464	OrExpression	sec_encryption == SEC_REQ_REQUIRED || sec_integrity == SEC_REQ_REQUIRED		3425072	0		||			
ANR	3425465	EqualityExpression	sec_encryption == SEC_REQ_REQUIRED		3425072	0		==			
ANR	3425466	Identifier	sec_encryption		3425072	0					
ANR	3425467	Identifier	SEC_REQ_REQUIRED		3425072	1					
ANR	3425468	EqualityExpression	sec_integrity == SEC_REQ_REQUIRED		3425072	1		==			
ANR	3425469	Identifier	sec_integrity		3425072	0					
ANR	3425470	Identifier	SEC_REQ_REQUIRED		3425072	1					
ANR	3425471	CompoundStatement		106:39:3656:3656	3425072	1					
ANR	3425472	Statement	dprintf	485:3:12631:12637	3425072	0	True				
ANR	3425473	Statement	(	485:10:12638:12638	3425072	1	True				
ANR	3425474	Statement	D_SECURITY	485:12:12640:12649	3425072	2	True				
ANR	3425475	Statement	","	485:22:12650:12650	3425072	3	True				
ANR	3425476	Statement	"""SECMAN: no crypto methods, """	485:24:12652:12680	3425072	4	True				
ANR	3425477	Statement	"""but it was required! failing...\\n"""	486:6:12688:12722	3425072	5	True				
ANR	3425478	Statement	)	486:42:12724:12724	3425072	6	True				
ANR	3425479	ExpressionStatement		486:43:12725:12725	3425072	7	True				
ANR	3425480	ElseStatement	else		3425072	0					
ANR	3425481	CompoundStatement		109:9:3766:3766	3425072	0					
ANR	3425482	Statement	dprintf	488:3:12741:12747	3425072	0	True				
ANR	3425483	Statement	(	488:10:12748:12748	3425072	1	True				
ANR	3425484	Statement	D_SECURITY	488:12:12750:12759	3425072	2	True				
ANR	3425485	Statement	","	488:22:12760:12760	3425072	3	True				
ANR	3425486	Statement	"""SECMAN: no crypto methods, """	488:24:12762:12790	3425072	4	True				
ANR	3425487	Statement	"""disabling crypto.\\n"""	489:6:12798:12818	3425072	5	True				
ANR	3425488	Statement	)	489:28:12820:12820	3425072	6	True				
ANR	3425489	ExpressionStatement		489:29:12821:12821	3425072	7	True				
ANR	3425490	ExpressionStatement	sec_encryption = SEC_REQ_NEVER	490:3:12826:12856	3425072	8	True				
ANR	3425491	AssignmentExpression	sec_encryption = SEC_REQ_NEVER		3425072	0		=			
ANR	3425492	Identifier	sec_encryption		3425072	0					
ANR	3425493	Identifier	SEC_REQ_NEVER		3425072	1					
ANR	3425494	ExpressionStatement	sec_integrity = SEC_REQ_NEVER	491:3:12861:12890	3425072	9	True				
ANR	3425495	AssignmentExpression	sec_integrity = SEC_REQ_NEVER		3425072	0		=			
ANR	3425496	Identifier	sec_integrity		3425072	0					
ANR	3425497	Identifier	SEC_REQ_NEVER		3425072	1					
ANR	3425498	ExpressionStatement	"ad -> Assign ( ATTR_SEC_NEGOTIATION , SecMan :: sec_req_rev [ sec_negotiation ] )"	496:1:12902:12974	3425072	14	True				
ANR	3425499	CallExpression	"ad -> Assign ( ATTR_SEC_NEGOTIATION , SecMan :: sec_req_rev [ sec_negotiation ] )"		3425072	0					
ANR	3425500	Callee	ad -> Assign		3425072	0					
ANR	3425501	PtrMemberAccess	ad -> Assign		3425072	0					
ANR	3425502	Identifier	ad		3425072	0					
ANR	3425503	Identifier	Assign		3425072	1					
ANR	3425504	ArgumentList	ATTR_SEC_NEGOTIATION		3425072	1					
ANR	3425505	Argument	ATTR_SEC_NEGOTIATION		3425072	0					
ANR	3425506	Identifier	ATTR_SEC_NEGOTIATION		3425072	0					
ANR	3425507	Argument	SecMan :: sec_req_rev [ sec_negotiation ]		3425072	1					
ANR	3425508	ArrayIndexing	SecMan :: sec_req_rev [ sec_negotiation ]		3425072	0					
ANR	3425509	Identifier	SecMan :: sec_req_rev		3425072	0					
ANR	3425510	Identifier	sec_negotiation		3425072	1					
ANR	3425511	ExpressionStatement	"ad -> Assign ( ATTR_SEC_AUTHENTICATION , SecMan :: sec_req_rev [ sec_authentication ] )"	498:1:12978:13057	3425072	15	True				
ANR	3425512	CallExpression	"ad -> Assign ( ATTR_SEC_AUTHENTICATION , SecMan :: sec_req_rev [ sec_authentication ] )"		3425072	0					
ANR	3425513	Callee	ad -> Assign		3425072	0					
ANR	3425514	PtrMemberAccess	ad -> Assign		3425072	0					
ANR	3425515	Identifier	ad		3425072	0					
ANR	3425516	Identifier	Assign		3425072	1					
ANR	3425517	ArgumentList	ATTR_SEC_AUTHENTICATION		3425072	1					
ANR	3425518	Argument	ATTR_SEC_AUTHENTICATION		3425072	0					
ANR	3425519	Identifier	ATTR_SEC_AUTHENTICATION		3425072	0					
ANR	3425520	Argument	SecMan :: sec_req_rev [ sec_authentication ]		3425072	1					
ANR	3425521	ArrayIndexing	SecMan :: sec_req_rev [ sec_authentication ]		3425072	0					
ANR	3425522	Identifier	SecMan :: sec_req_rev		3425072	0					
ANR	3425523	Identifier	sec_authentication		3425072	1					
ANR	3425524	ExpressionStatement	"ad -> Assign ( ATTR_SEC_ENCRYPTION , SecMan :: sec_req_rev [ sec_encryption ] )"	500:1:13061:13131	3425072	16	True				
ANR	3425525	CallExpression	"ad -> Assign ( ATTR_SEC_ENCRYPTION , SecMan :: sec_req_rev [ sec_encryption ] )"		3425072	0					
ANR	3425526	Callee	ad -> Assign		3425072	0					
ANR	3425527	PtrMemberAccess	ad -> Assign		3425072	0					
ANR	3425528	Identifier	ad		3425072	0					
ANR	3425529	Identifier	Assign		3425072	1					
ANR	3425530	ArgumentList	ATTR_SEC_ENCRYPTION		3425072	1					
ANR	3425531	Argument	ATTR_SEC_ENCRYPTION		3425072	0					
ANR	3425532	Identifier	ATTR_SEC_ENCRYPTION		3425072	0					
ANR	3425533	Argument	SecMan :: sec_req_rev [ sec_encryption ]		3425072	1					
ANR	3425534	ArrayIndexing	SecMan :: sec_req_rev [ sec_encryption ]		3425072	0					
ANR	3425535	Identifier	SecMan :: sec_req_rev		3425072	0					
ANR	3425536	Identifier	sec_encryption		3425072	1					
ANR	3425537	ExpressionStatement	"ad -> Assign ( ATTR_SEC_INTEGRITY , SecMan :: sec_req_rev [ sec_integrity ] )"	502:1:13135:13204	3425072	17	True				
ANR	3425538	CallExpression	"ad -> Assign ( ATTR_SEC_INTEGRITY , SecMan :: sec_req_rev [ sec_integrity ] )"		3425072	0					
ANR	3425539	Callee	ad -> Assign		3425072	0					
ANR	3425540	PtrMemberAccess	ad -> Assign		3425072	0					
ANR	3425541	Identifier	ad		3425072	0					
ANR	3425542	Identifier	Assign		3425072	1					
ANR	3425543	ArgumentList	ATTR_SEC_INTEGRITY		3425072	1					
ANR	3425544	Argument	ATTR_SEC_INTEGRITY		3425072	0					
ANR	3425545	Identifier	ATTR_SEC_INTEGRITY		3425072	0					
ANR	3425546	Argument	SecMan :: sec_req_rev [ sec_integrity ]		3425072	1					
ANR	3425547	ArrayIndexing	SecMan :: sec_req_rev [ sec_integrity ]		3425072	0					
ANR	3425548	Identifier	SecMan :: sec_req_rev		3425072	0					
ANR	3425549	Identifier	sec_integrity		3425072	1					
ANR	3425550	ExpressionStatement	"ad -> Assign ( ATTR_SEC_ENACT , ""NO"" )"	504:1:13208:13243	3425072	18	True				
ANR	3425551	CallExpression	"ad -> Assign ( ATTR_SEC_ENACT , ""NO"" )"		3425072	0					
ANR	3425552	Callee	ad -> Assign		3425072	0					
ANR	3425553	PtrMemberAccess	ad -> Assign		3425072	0					
ANR	3425554	Identifier	ad		3425072	0					
ANR	3425555	Identifier	Assign		3425072	1					
ANR	3425556	ArgumentList	ATTR_SEC_ENACT		3425072	1					
ANR	3425557	Argument	ATTR_SEC_ENACT		3425072	0					
ANR	3425558	Identifier	ATTR_SEC_ENACT		3425072	0					
ANR	3425559	Argument	"""NO"""		3425072	1					
ANR	3425560	PrimaryExpression	"""NO"""		3425072	0					
ANR	3425561	ExpressionStatement	"ad -> Assign ( ATTR_SEC_SUBSYSTEM , get_mySubSystem ( ) -> getName ( ) )"	508:1:13262:13325	3425072	19	True				
ANR	3425562	CallExpression	"ad -> Assign ( ATTR_SEC_SUBSYSTEM , get_mySubSystem ( ) -> getName ( ) )"		3425072	0					
ANR	3425563	Callee	ad -> Assign		3425072	0					
ANR	3425564	PtrMemberAccess	ad -> Assign		3425072	0					
ANR	3425565	Identifier	ad		3425072	0					
ANR	3425566	Identifier	Assign		3425072	1					
ANR	3425567	ArgumentList	ATTR_SEC_SUBSYSTEM		3425072	1					
ANR	3425568	Argument	ATTR_SEC_SUBSYSTEM		3425072	0					
ANR	3425569	Identifier	ATTR_SEC_SUBSYSTEM		3425072	0					
ANR	3425570	Argument	get_mySubSystem ( ) -> getName ( )		3425072	1					
ANR	3425571	CallExpression	get_mySubSystem ( ) -> getName ( )		3425072	0					
ANR	3425572	Callee	get_mySubSystem ( ) -> getName		3425072	0					
ANR	3425573	PtrMemberAccess	get_mySubSystem ( ) -> getName		3425072	0					
ANR	3425574	CallExpression	get_mySubSystem ( )		3425072	0					
ANR	3425575	Callee	get_mySubSystem		3425072	0					
ANR	3425576	Identifier	get_mySubSystem		3425072	0					
ANR	3425577	ArgumentList			3425072	1					
ANR	3425578	Identifier	getName		3425072	1					
ANR	3425579	ArgumentList			3425072	1					
ANR	3425580	IdentifierDeclStatement	char * parent_id = my_parent_unique_id ( ) ;	510:4:13332:13372	3425072	20	True				
ANR	3425581	IdentifierDecl	* parent_id = my_parent_unique_id ( )		3425072	0					
ANR	3425582	IdentifierDeclType	char *		3425072	0					
ANR	3425583	Identifier	parent_id		3425072	1					
ANR	3425584	AssignmentExpression	* parent_id = my_parent_unique_id ( )		3425072	2		=			
ANR	3425585	Identifier	parent_id		3425072	0					
ANR	3425586	CallExpression	my_parent_unique_id ( )		3425072	1					
ANR	3425587	Callee	my_parent_unique_id		3425072	0					
ANR	3425588	Identifier	my_parent_unique_id		3425072	0					
ANR	3425589	ArgumentList			3425072	1					
ANR	3425590	IfStatement	if ( parent_id )		3425072	21					
ANR	3425591	Condition	parent_id	511:8:13382:13390	3425072	0	True				
ANR	3425592	Identifier	parent_id		3425072	0					
ANR	3425593	CompoundStatement		133:19:4423:4423	3425072	1					
ANR	3425594	ExpressionStatement	"ad -> Assign ( ATTR_SEC_PARENT_UNIQUE_ID , parent_id )"	512:2:13397:13448	3425072	0	True				
ANR	3425595	CallExpression	"ad -> Assign ( ATTR_SEC_PARENT_UNIQUE_ID , parent_id )"		3425072	0					
ANR	3425596	Callee	ad -> Assign		3425072	0					
ANR	3425597	PtrMemberAccess	ad -> Assign		3425072	0					
ANR	3425598	Identifier	ad		3425072	0					
ANR	3425599	Identifier	Assign		3425072	1					
ANR	3425600	ArgumentList	ATTR_SEC_PARENT_UNIQUE_ID		3425072	1					
ANR	3425601	Argument	ATTR_SEC_PARENT_UNIQUE_ID		3425072	0					
ANR	3425602	Identifier	ATTR_SEC_PARENT_UNIQUE_ID		3425072	0					
ANR	3425603	Argument	parent_id		3425072	1					
ANR	3425604	Identifier	parent_id		3425072	0					
ANR	3425605	IdentifierDeclStatement	int mypid = 0 ;	516:1:13463:13479	3425072	22	True				
ANR	3425606	IdentifierDecl	mypid = 0		3425072	0					
ANR	3425607	IdentifierDeclType	int		3425072	0					
ANR	3425608	Identifier	mypid		3425072	1					
ANR	3425609	AssignmentExpression	mypid = 0		3425072	2		=			
ANR	3425610	Identifier	mypid		3425072	0					
ANR	3425611	PrimaryExpression	0		3425072	1					
ANR	3425612	Statement	mypid	518:1:13495:13499	3425072	23	True				
ANR	3425613	Statement	=	518:7:13501:13501	3425072	24	True				
ANR	3425614	Statement	::	518:9:13503:13504	3425072	25	True				
ANR	3425615	ExpressionStatement	GetCurrentProcessId ( )	518:11:13505:13526	3425072	26	True				
ANR	3425616	CallExpression	GetCurrentProcessId ( )		3425072	0					
ANR	3425617	Callee	GetCurrentProcessId		3425072	0					
ANR	3425618	Identifier	GetCurrentProcessId		3425072	0					
ANR	3425619	ArgumentList			3425072	1					
ANR	3425620	ExpressionStatement	"ad -> Assign ( ATTR_SEC_SERVER_PID , mypid )"	522:1:13563:13604	3425072	27	True				
ANR	3425621	CallExpression	"ad -> Assign ( ATTR_SEC_SERVER_PID , mypid )"		3425072	0					
ANR	3425622	Callee	ad -> Assign		3425072	0					
ANR	3425623	PtrMemberAccess	ad -> Assign		3425072	0					
ANR	3425624	Identifier	ad		3425072	0					
ANR	3425625	Identifier	Assign		3425072	1					
ANR	3425626	ArgumentList	ATTR_SEC_SERVER_PID		3425072	1					
ANR	3425627	Argument	ATTR_SEC_SERVER_PID		3425072	0					
ANR	3425628	Identifier	ATTR_SEC_SERVER_PID		3425072	0					
ANR	3425629	Argument	mypid		3425072	1					
ANR	3425630	Identifier	mypid		3425072	0					
ANR	3425631	IdentifierDeclStatement	int session_duration ;	531:1:13827:13847	3425072	28	True				
ANR	3425632	IdentifierDecl	session_duration		3425072	0					
ANR	3425633	IdentifierDeclType	int		3425072	0					
ANR	3425634	Identifier	session_duration		3425072	1					
ANR	3425635	IfStatement	if ( get_mySubSystem ( ) -> isType ( SUBSYSTEM_TYPE_TOOL ) || get_mySubSystem ( ) -> isType ( SUBSYSTEM_TYPE_SUBMIT ) )		3425072	29					
ANR	3425636	Condition	get_mySubSystem ( ) -> isType ( SUBSYSTEM_TYPE_TOOL ) || get_mySubSystem ( ) -> isType ( SUBSYSTEM_TYPE_SUBMIT )	534:6:13890:13990	3425072	0	True				
ANR	3425637	OrExpression	get_mySubSystem ( ) -> isType ( SUBSYSTEM_TYPE_TOOL ) || get_mySubSystem ( ) -> isType ( SUBSYSTEM_TYPE_SUBMIT )		3425072	0		||			
ANR	3425638	CallExpression	get_mySubSystem ( ) -> isType ( SUBSYSTEM_TYPE_TOOL )		3425072	0					
ANR	3425639	Callee	get_mySubSystem ( ) -> isType		3425072	0					
ANR	3425640	PtrMemberAccess	get_mySubSystem ( ) -> isType		3425072	0					
ANR	3425641	CallExpression	get_mySubSystem ( )		3425072	0					
ANR	3425642	Callee	get_mySubSystem		3425072	0					
ANR	3425643	Identifier	get_mySubSystem		3425072	0					
ANR	3425644	ArgumentList			3425072	1					
ANR	3425645	Identifier	isType		3425072	1					
ANR	3425646	ArgumentList	SUBSYSTEM_TYPE_TOOL		3425072	1					
ANR	3425647	Argument	SUBSYSTEM_TYPE_TOOL		3425072	0					
ANR	3425648	Identifier	SUBSYSTEM_TYPE_TOOL		3425072	0					
ANR	3425649	CallExpression	get_mySubSystem ( ) -> isType ( SUBSYSTEM_TYPE_SUBMIT )		3425072	1					
ANR	3425650	Callee	get_mySubSystem ( ) -> isType		3425072	0					
ANR	3425651	PtrMemberAccess	get_mySubSystem ( ) -> isType		3425072	0					
ANR	3425652	CallExpression	get_mySubSystem ( )		3425072	0					
ANR	3425653	Callee	get_mySubSystem		3425072	0					
ANR	3425654	Identifier	get_mySubSystem		3425072	0					
ANR	3425655	ArgumentList			3425072	1					
ANR	3425656	Identifier	isType		3425072	1					
ANR	3425657	ArgumentList	SUBSYSTEM_TYPE_SUBMIT		3425072	1					
ANR	3425658	Argument	SUBSYSTEM_TYPE_SUBMIT		3425072	0					
ANR	3425659	Identifier	SUBSYSTEM_TYPE_SUBMIT		3425072	0					
ANR	3425660	CompoundStatement		157:54:5024:5024	3425072	1					
ANR	3425661	ExpressionStatement	session_duration = 60	537:2:14035:14056	3425072	0	True				
ANR	3425662	AssignmentExpression	session_duration = 60		3425072	0		=			
ANR	3425663	Identifier	session_duration		3425072	0					
ANR	3425664	PrimaryExpression	60		3425072	1					
ANR	3425665	ElseStatement	else		3425072	0					
ANR	3425666	CompoundStatement		160:8:5096:5096	3425072	0					
ANR	3425667	ExpressionStatement	session_duration = 86400	545:2:14291:14315	3425072	0	True				
ANR	3425668	AssignmentExpression	session_duration = 86400		3425072	0		=			
ANR	3425669	Identifier	session_duration		3425072	0					
ANR	3425670	PrimaryExpression	86400		3425072	1					
ANR	3425671	IdentifierDeclStatement	char fmt [ 128 ] ;	548:1:14322:14335	3425072	30	True				
ANR	3425672	IdentifierDecl	fmt [ 128 ]		3425072	0					
ANR	3425673	IdentifierDeclType	char [ 128 ]		3425072	0					
ANR	3425674	Identifier	fmt		3425072	1					
ANR	3425675	PrimaryExpression	128		3425072	2					
ANR	3425676	ExpressionStatement	"sprintf ( fmt , ""SEC_%s_%%s_SESSION_DURATION"" , get_mySubSystem ( ) -> getName ( ) )"	549:1:14338:14412	3425072	31	True				
ANR	3425677	CallExpression	"sprintf ( fmt , ""SEC_%s_%%s_SESSION_DURATION"" , get_mySubSystem ( ) -> getName ( ) )"		3425072	0					
ANR	3425678	Callee	sprintf		3425072	0					
ANR	3425679	Identifier	sprintf		3425072	0					
ANR	3425680	ArgumentList	fmt		3425072	1					
ANR	3425681	Argument	fmt		3425072	0					
ANR	3425682	Identifier	fmt		3425072	0					
ANR	3425683	Argument	"""SEC_%s_%%s_SESSION_DURATION"""		3425072	1					
ANR	3425684	PrimaryExpression	"""SEC_%s_%%s_SESSION_DURATION"""		3425072	0					
ANR	3425685	Argument	get_mySubSystem ( ) -> getName ( )		3425072	2					
ANR	3425686	CallExpression	get_mySubSystem ( ) -> getName ( )		3425072	0					
ANR	3425687	Callee	get_mySubSystem ( ) -> getName		3425072	0					
ANR	3425688	PtrMemberAccess	get_mySubSystem ( ) -> getName		3425072	0					
ANR	3425689	CallExpression	get_mySubSystem ( )		3425072	0					
ANR	3425690	Callee	get_mySubSystem		3425072	0					
ANR	3425691	Identifier	get_mySubSystem		3425072	0					
ANR	3425692	ArgumentList			3425072	1					
ANR	3425693	Identifier	getName		3425072	1					
ANR	3425694	ArgumentList			3425072	1					
ANR	3425695	IfStatement	"if ( ! SecMan :: getIntSecSetting ( session_duration , fmt , auth_level ) )"		3425072	32					
ANR	3425696	Condition	"! SecMan :: getIntSecSetting ( session_duration , fmt , auth_level )"	550:5:14419:14478	3425072	0	True				
ANR	3425697	UnaryOperationExpression	"! SecMan :: getIntSecSetting ( session_duration , fmt , auth_level )"		3425072	0					
ANR	3425698	UnaryOperator	!		3425072	0					
ANR	3425699	CallExpression	"SecMan :: getIntSecSetting ( session_duration , fmt , auth_level )"		3425072	1					
ANR	3425700	Callee	SecMan :: getIntSecSetting		3425072	0					
ANR	3425701	Identifier	SecMan :: getIntSecSetting		3425072	0					
ANR	3425702	ArgumentList	session_duration		3425072	1					
ANR	3425703	Argument	session_duration		3425072	0					
ANR	3425704	Identifier	session_duration		3425072	0					
ANR	3425705	Argument	fmt		3425072	1					
ANR	3425706	Identifier	fmt		3425072	0					
ANR	3425707	Argument	auth_level		3425072	2					
ANR	3425708	Identifier	auth_level		3425072	0					
ANR	3425709	CompoundStatement		172:68:5512:5512	3425072	1					
ANR	3425710	ExpressionStatement	"SecMan :: getIntSecSetting ( session_duration , ""SEC_%s_SESSION_DURATION"" , auth_level )"	551:2:14486:14567	3425072	0	True				
ANR	3425711	CallExpression	"SecMan :: getIntSecSetting ( session_duration , ""SEC_%s_SESSION_DURATION"" , auth_level )"		3425072	0					
ANR	3425712	Callee	SecMan :: getIntSecSetting		3425072	0					
ANR	3425713	Identifier	SecMan :: getIntSecSetting		3425072	0					
ANR	3425714	ArgumentList	session_duration		3425072	1					
ANR	3425715	Argument	session_duration		3425072	0					
ANR	3425716	Identifier	session_duration		3425072	0					
ANR	3425717	Argument	"""SEC_%s_SESSION_DURATION"""		3425072	1					
ANR	3425718	PrimaryExpression	"""SEC_%s_SESSION_DURATION"""		3425072	0					
ANR	3425719	Argument	auth_level		3425072	2					
ANR	3425720	Identifier	auth_level		3425072	0					
ANR	3425721	IfStatement	if ( use_tmp_sec_session )		3425072	33					
ANR	3425722	Condition	use_tmp_sec_session	554:5:14578:14596	3425072	0	True				
ANR	3425723	Identifier	use_tmp_sec_session		3425072	0					
ANR	3425724	CompoundStatement		176:27:5630:5630	3425072	1					
ANR	3425725	ExpressionStatement	session_duration = 60	556:2:14634:14655	3425072	0	True				
ANR	3425726	AssignmentExpression	session_duration = 60		3425072	0		=			
ANR	3425727	Identifier	session_duration		3425072	0					
ANR	3425728	PrimaryExpression	60		3425072	1					
ANR	3425729	IdentifierDeclStatement	MyString session_duration_buf ;	561:1:14752:14781	3425072	34	True				
ANR	3425730	IdentifierDecl	session_duration_buf		3425072	0					
ANR	3425731	IdentifierDeclType	MyString		3425072	0					
ANR	3425732	Identifier	session_duration_buf		3425072	1					
ANR	3425733	ExpressionStatement	"session_duration_buf . sprintf ( ""%d"" , session_duration )"	562:1:14784:14835	3425072	35	True				
ANR	3425734	CallExpression	"session_duration_buf . sprintf ( ""%d"" , session_duration )"		3425072	0					
ANR	3425735	Callee	session_duration_buf . sprintf		3425072	0					
ANR	3425736	MemberAccess	session_duration_buf . sprintf		3425072	0					
ANR	3425737	Identifier	session_duration_buf		3425072	0					
ANR	3425738	Identifier	sprintf		3425072	1					
ANR	3425739	ArgumentList	"""%d"""		3425072	1					
ANR	3425740	Argument	"""%d"""		3425072	0					
ANR	3425741	PrimaryExpression	"""%d"""		3425072	0					
ANR	3425742	Argument	session_duration		3425072	1					
ANR	3425743	Identifier	session_duration		3425072	0					
ANR	3425744	ExpressionStatement	"ad -> Assign ( ATTR_SEC_SESSION_DURATION , session_duration_buf )"	563:1:14838:14900	3425072	36	True				
ANR	3425745	CallExpression	"ad -> Assign ( ATTR_SEC_SESSION_DURATION , session_duration_buf )"		3425072	0					
ANR	3425746	Callee	ad -> Assign		3425072	0					
ANR	3425747	PtrMemberAccess	ad -> Assign		3425072	0					
ANR	3425748	Identifier	ad		3425072	0					
ANR	3425749	Identifier	Assign		3425072	1					
ANR	3425750	ArgumentList	ATTR_SEC_SESSION_DURATION		3425072	1					
ANR	3425751	Argument	ATTR_SEC_SESSION_DURATION		3425072	0					
ANR	3425752	Identifier	ATTR_SEC_SESSION_DURATION		3425072	0					
ANR	3425753	Argument	session_duration_buf		3425072	1					
ANR	3425754	Identifier	session_duration_buf		3425072	0					
ANR	3425755	IdentifierDeclStatement	int session_lease = 3600 ;	565:1:14904:14928	3425072	37	True				
ANR	3425756	IdentifierDecl	session_lease = 3600		3425072	0					
ANR	3425757	IdentifierDeclType	int		3425072	0					
ANR	3425758	Identifier	session_lease		3425072	1					
ANR	3425759	AssignmentExpression	session_lease = 3600		3425072	2		=			
ANR	3425760	Identifier	session_lease		3425072	0					
ANR	3425761	PrimaryExpression	3600		3425072	1					
ANR	3425762	ExpressionStatement	"SecMan :: getIntSecSetting ( session_lease , ""SEC_%s_SESSION_LEASE"" , auth_level )"	566:1:14931:15006	3425072	38	True				
ANR	3425763	CallExpression	"SecMan :: getIntSecSetting ( session_lease , ""SEC_%s_SESSION_LEASE"" , auth_level )"		3425072	0					
ANR	3425764	Callee	SecMan :: getIntSecSetting		3425072	0					
ANR	3425765	Identifier	SecMan :: getIntSecSetting		3425072	0					
ANR	3425766	ArgumentList	session_lease		3425072	1					
ANR	3425767	Argument	session_lease		3425072	0					
ANR	3425768	Identifier	session_lease		3425072	0					
ANR	3425769	Argument	"""SEC_%s_SESSION_LEASE"""		3425072	1					
ANR	3425770	PrimaryExpression	"""SEC_%s_SESSION_LEASE"""		3425072	0					
ANR	3425771	Argument	auth_level		3425072	2					
ANR	3425772	Identifier	auth_level		3425072	0					
ANR	3425773	ExpressionStatement	"ad -> Assign ( ATTR_SEC_SESSION_LEASE , session_lease )"	567:1:15009:15060	3425072	39	True				
ANR	3425774	CallExpression	"ad -> Assign ( ATTR_SEC_SESSION_LEASE , session_lease )"		3425072	0					
ANR	3425775	Callee	ad -> Assign		3425072	0					
ANR	3425776	PtrMemberAccess	ad -> Assign		3425072	0					
ANR	3425777	Identifier	ad		3425072	0					
ANR	3425778	Identifier	Assign		3425072	1					
ANR	3425779	ArgumentList	ATTR_SEC_SESSION_LEASE		3425072	1					
ANR	3425780	Argument	ATTR_SEC_SESSION_LEASE		3425072	0					
ANR	3425781	Identifier	ATTR_SEC_SESSION_LEASE		3425072	0					
ANR	3425782	Argument	session_lease		3425072	1					
ANR	3425783	Identifier	session_lease		3425072	0					
ANR	3425784	ReturnStatement	return true ;	569:1:15064:15075	3425072	40	True				
ANR	3425785	Identifier	true		3425072	0					
ANR	3425786	ReturnType	bool		3425072	1					
ANR	3425787	Identifier	SecMan :: FillInSecurityPolicyAd		3425072	2					
ANR	3425788	ParameterList	"DCpermission auth_level , ClassAd * ad , bool raw_protocol , bool use_tmp_sec_session , bool force_authentication"		3425072	3					
ANR	3425789	Parameter	DCpermission auth_level	375:32:8833:8855	3425072	0	True				
ANR	3425790	ParameterType	DCpermission		3425072	0					
ANR	3425791	Identifier	auth_level		3425072	1					
ANR	3425792	Parameter	ClassAd * ad	375:57:8858:8868	3425072	1	True				
ANR	3425793	ParameterType	ClassAd *		3425072	0					
ANR	3425794	Identifier	ad		3425072	1					
ANR	3425795	Parameter	bool raw_protocol	376:8:8880:8896	3425072	2	True				
ANR	3425796	ParameterType	bool		3425072	0					
ANR	3425797	Identifier	raw_protocol		3425072	1					
ANR	3425798	Parameter	bool use_tmp_sec_session	377:8:8907:8930	3425072	3	True				
ANR	3425799	ParameterType	bool		3425072	0					
ANR	3425800	Identifier	use_tmp_sec_session		3425072	1					
ANR	3425801	Parameter	bool force_authentication	378:8:8941:8965	3425072	4	True				
ANR	3425802	ParameterType	bool		3425072	0					
ANR	3425803	Identifier	force_authentication		3425072	1					
ANR	3425804	CFGEntryNode	ENTRY		3425072		True				
ANR	3425805	CFGExitNode	EXIT		3425072		True				
ANR	3425806	Symbol	SecMan :: getDefaultCryptoMethods ( ) . Value		3425072						
ANR	3425807	Symbol	ATTR_SEC_ENCRYPTION		3425072						
ANR	3425808	Symbol	ATTR_SEC_ENACT		3425072						
ANR	3425809	Symbol	ATTR_SEC_PARENT_UNIQUE_ID		3425072						
ANR	3425810	Symbol	sec_encryption		3425072						
ANR	3425811	Symbol	ATTR_SEC_SERVER_PID		3425072						
ANR	3425812	Symbol	fmt		3425072						
ANR	3425813	Symbol	SecMan :: sec_req_rev		3425072						
ANR	3425814	Symbol	raw_protocol		3425072						
ANR	3425815	Symbol	SecMan :: getIntSecSetting		3425072						
ANR	3425816	Symbol	ATTR_SEC_AUTHENTICATION_METHODS		3425072						
ANR	3425817	Symbol	session_duration_buf		3425072						
ANR	3425818	Symbol	ad		3425072						
ANR	3425819	Symbol	NULL		3425072						
ANR	3425820	Symbol	SUBSYSTEM_TYPE_TOOL		3425072						
ANR	3425821	Symbol	SecMan :: getSecSetting		3425072						
ANR	3425822	Symbol	SEC_REQ_NEVER		3425072						
ANR	3425823	Symbol	sec_authentication		3425072						
ANR	3425824	Symbol	ATTR_SEC_SESSION_LEASE		3425072						
ANR	3425825	Symbol	ATTR_SEC_NEGOTIATION		3425072						
ANR	3425826	Symbol	my_parent_unique_id		3425072						
ANR	3425827	Symbol	parent_id		3425072						
ANR	3425828	Symbol	sec_req_param		3425072						
ANR	3425829	Symbol	true		3425072						
ANR	3425830	Symbol	get_mySubSystem		3425072						
ANR	3425831	Symbol	* sec_authentication		3425072						
ANR	3425832	Symbol	SecMan :: getDefaultAuthenticationMethods		3425072						
ANR	3425833	Symbol	ATTR_SEC_AUTHENTICATION		3425072						
ANR	3425834	Symbol	ATTR_SEC_SUBSYSTEM		3425072						
ANR	3425835	Symbol	D_SECURITY		3425072						
ANR	3425836	Symbol	* sec_negotiation		3425072						
ANR	3425837	Symbol	auth_level		3425072						
ANR	3425838	Symbol	SUBSYSTEM_TYPE_SUBMIT		3425072						
ANR	3425839	Symbol	paramer		3425072						
ANR	3425840	Symbol	session_duration		3425072						
ANR	3425841	Symbol	ReconcileSecurityDependency		3425072						
ANR	3425842	Symbol	* sec_integrity		3425072						
ANR	3425843	Symbol	sec_integrity		3425072						
ANR	3425844	Symbol	SEC_REQ_PREFERRED		3425072						
ANR	3425845	Symbol	ATTR_SEC_CRYPTO_METHODS		3425072						
ANR	3425846	Symbol	get_mySubSystem ( ) -> isType		3425072						
ANR	3425847	Symbol	get_mySubSystem ( ) -> getName		3425072						
ANR	3425848	Symbol	* get_mySubSystem		3425072						
ANR	3425849	Symbol	ATTR_SEC_SESSION_DURATION		3425072						
ANR	3425850	Symbol	mypid		3425072						
ANR	3425851	Symbol	force_authentication		3425072						
ANR	3425852	Symbol	false		3425072						
ANR	3425853	Symbol	sec_negotiation		3425072						
ANR	3425854	Symbol	* sec_encryption		3425072						
ANR	3425855	Symbol	SecMan :: getDefaultAuthenticationMethods ( ) . Value		3425072						
ANR	3425856	Symbol	SecMan :: getDefaultCryptoMethods		3425072						
ANR	3425857	Symbol	SEC_REQ_REQUIRED		3425072						
ANR	3425858	Symbol	SEC_REQ_OPTIONAL		3425072						
ANR	3425859	Symbol	* SecMan :: sec_req_rev		3425072						
ANR	3425860	Symbol	session_lease		3425072						
ANR	3425861	Symbol	strdup		3425072						
ANR	3425862	Symbol	ATTR_SEC_INTEGRITY		3425072						
ANR	3425863	Symbol	use_tmp_sec_session		3425072						
ANR	3425864	Function	SecMan :: ReconcileSecurityDependency	572:0:15080:15304							
ANR	3425865	FunctionDef	"SecMan :: ReconcileSecurityDependency (sec_req & a , sec_req & b)"		3425864	0					
ANR	3425866	CompoundStatement		573:61:15146:15304	3425864	0					
ANR	3425867	IfStatement	if ( a == SEC_REQ_NEVER )		3425864	0					
ANR	3425868	Condition	a == SEC_REQ_NEVER	574:5:15153:15170	3425864	0	True				
ANR	3425869	EqualityExpression	a == SEC_REQ_NEVER		3425864	0		==			
ANR	3425870	Identifier	a		3425864	0					
ANR	3425871	Identifier	SEC_REQ_NEVER		3425864	1					
ANR	3425872	CompoundStatement		2:25:26:26	3425864	1					
ANR	3425873	IfStatement	if ( b == SEC_REQ_REQUIRED )		3425864	0					
ANR	3425874	Condition	b == SEC_REQ_REQUIRED	575:6:15181:15201	3425864	0	True				
ANR	3425875	EqualityExpression	b == SEC_REQ_REQUIRED		3425864	0		==			
ANR	3425876	Identifier	b		3425864	0					
ANR	3425877	Identifier	SEC_REQ_REQUIRED		3425864	1					
ANR	3425878	CompoundStatement		3:29:57:57	3425864	1					
ANR	3425879	ReturnStatement	return false ;	576:3:15209:15221	3425864	0	True				
ANR	3425880	Identifier	false		3425864	0					
ANR	3425881	ElseStatement	else		3425864	0					
ANR	3425882	CompoundStatement		5:9:85:85	3425864	0					
ANR	3425883	ExpressionStatement	b = SEC_REQ_NEVER	578:3:15237:15254	3425864	0	True				
ANR	3425884	AssignmentExpression	b = SEC_REQ_NEVER		3425864	0		=			
ANR	3425885	Identifier	b		3425864	0					
ANR	3425886	Identifier	SEC_REQ_NEVER		3425864	1					
ANR	3425887	IfStatement	if ( b > a )		3425864	1					
ANR	3425888	Condition	b > a	582:5:15269:15273	3425864	0	True				
ANR	3425889	RelationalExpression	b > a		3425864	0		>			
ANR	3425890	Identifier	b		3425864	0					
ANR	3425891	Identifier	a		3425864	1					
ANR	3425892	CompoundStatement		10:12:129:129	3425864	1					
ANR	3425893	ExpressionStatement	a = b	583:2:15280:15285	3425864	0	True				
ANR	3425894	AssignmentExpression	a = b		3425864	0		=			
ANR	3425895	Identifier	a		3425864	0					
ANR	3425896	Identifier	b		3425864	1					
ANR	3425897	ReturnStatement	return true ;	585:1:15291:15302	3425864	2	True				
ANR	3425898	Identifier	true		3425864	0					
ANR	3425899	ReturnType	bool		3425864	1					
ANR	3425900	Identifier	SecMan :: ReconcileSecurityDependency		3425864	2					
ANR	3425901	ParameterList	"sec_req & a , sec_req & b"		3425864	3					
ANR	3425902	Parameter	sec_req & a	573:37:15122:15131	3425864	0	True				
ANR	3425903	ParameterType	sec_req &		3425864	0					
ANR	3425904	Identifier	a		3425864	1					
ANR	3425905	Parameter	sec_req & b	573:49:15134:15143	3425864	1	True				
ANR	3425906	ParameterType	sec_req &		3425864	0					
ANR	3425907	Identifier	b		3425864	1					
ANR	3425908	CFGEntryNode	ENTRY		3425864		True				
ANR	3425909	CFGExitNode	EXIT		3425864		True				
ANR	3425910	Symbol	a		3425864						
ANR	3425911	Symbol	b		3425864						
ANR	3425912	Symbol	SEC_REQ_REQUIRED		3425864						
ANR	3425913	Symbol	false		3425864						
ANR	3425914	Symbol	true		3425864						
ANR	3425915	Symbol	SEC_REQ_NEVER		3425864						
ANR	3425916	Function	SecMan :: ReconcileSecurityAttribute	589:0:15308:17818							
ANR	3425917	FunctionDef	"SecMan :: ReconcileSecurityAttribute (const char * attr , ClassAd & cli_ad , ClassAd & srv_ad , bool * required)"		3425916	0					
ANR	3425918	CompoundStatement		592:28:15455:17818	3425916	0					
ANR	3425919	IdentifierDeclStatement	char * cli_buf = NULL ;	597:1:15531:15551	3425916	0	True				
ANR	3425920	IdentifierDecl	* cli_buf = NULL		3425916	0					
ANR	3425921	IdentifierDeclType	char *		3425916	0					
ANR	3425922	Identifier	cli_buf		3425916	1					
ANR	3425923	AssignmentExpression	* cli_buf = NULL		3425916	2		=			
ANR	3425924	Identifier	NULL		3425916	0					
ANR	3425925	Identifier	NULL		3425916	1					
ANR	3425926	IdentifierDeclStatement	char * srv_buf = NULL ;	598:1:15554:15574	3425916	1	True				
ANR	3425927	IdentifierDecl	* srv_buf = NULL		3425916	0					
ANR	3425928	IdentifierDeclType	char *		3425916	0					
ANR	3425929	Identifier	srv_buf		3425916	1					
ANR	3425930	AssignmentExpression	* srv_buf = NULL		3425916	2		=			
ANR	3425931	Identifier	NULL		3425916	0					
ANR	3425932	Identifier	NULL		3425916	1					
ANR	3425933	IdentifierDeclStatement	sec_req cli_req ;	601:1:15602:15617	3425916	2	True				
ANR	3425934	IdentifierDecl	cli_req		3425916	0					
ANR	3425935	IdentifierDeclType	sec_req		3425916	0					
ANR	3425936	Identifier	cli_req		3425916	1					
ANR	3425937	IdentifierDeclStatement	sec_req srv_req ;	602:1:15620:15635	3425916	3	True				
ANR	3425938	IdentifierDecl	srv_req		3425916	0					
ANR	3425939	IdentifierDeclType	sec_req		3425916	0					
ANR	3425940	Identifier	srv_req		3425916	1					
ANR	3425941	ExpressionStatement	"cli_ad . LookupString ( attr , & cli_buf )"	606:1:15672:15707	3425916	4	True				
ANR	3425942	CallExpression	"cli_ad . LookupString ( attr , & cli_buf )"		3425916	0					
ANR	3425943	Callee	cli_ad . LookupString		3425916	0					
ANR	3425944	MemberAccess	cli_ad . LookupString		3425916	0					
ANR	3425945	Identifier	cli_ad		3425916	0					
ANR	3425946	Identifier	LookupString		3425916	1					
ANR	3425947	ArgumentList	attr		3425916	1					
ANR	3425948	Argument	attr		3425916	0					
ANR	3425949	Identifier	attr		3425916	0					
ANR	3425950	Argument	& cli_buf		3425916	1					
ANR	3425951	UnaryOperationExpression	& cli_buf		3425916	0					
ANR	3425952	UnaryOperator	&		3425916	0					
ANR	3425953	Identifier	cli_buf		3425916	1					
ANR	3425954	ExpressionStatement	"srv_ad . LookupString ( attr , & srv_buf )"	607:1:15710:15745	3425916	5	True				
ANR	3425955	CallExpression	"srv_ad . LookupString ( attr , & srv_buf )"		3425916	0					
ANR	3425956	Callee	srv_ad . LookupString		3425916	0					
ANR	3425957	MemberAccess	srv_ad . LookupString		3425916	0					
ANR	3425958	Identifier	srv_ad		3425916	0					
ANR	3425959	Identifier	LookupString		3425916	1					
ANR	3425960	ArgumentList	attr		3425916	1					
ANR	3425961	Argument	attr		3425916	0					
ANR	3425962	Identifier	attr		3425916	0					
ANR	3425963	Argument	& srv_buf		3425916	1					
ANR	3425964	UnaryOperationExpression	& srv_buf		3425916	0					
ANR	3425965	UnaryOperator	&		3425916	0					
ANR	3425966	Identifier	srv_buf		3425916	1					
ANR	3425967	ExpressionStatement	cli_req = sec_alpha_to_sec_req ( cli_buf )	610:1:15775:15814	3425916	6	True				
ANR	3425968	AssignmentExpression	cli_req = sec_alpha_to_sec_req ( cli_buf )		3425916	0		=			
ANR	3425969	Identifier	cli_req		3425916	0					
ANR	3425970	CallExpression	sec_alpha_to_sec_req ( cli_buf )		3425916	1					
ANR	3425971	Callee	sec_alpha_to_sec_req		3425916	0					
ANR	3425972	Identifier	sec_alpha_to_sec_req		3425916	0					
ANR	3425973	ArgumentList	cli_buf		3425916	1					
ANR	3425974	Argument	cli_buf		3425916	0					
ANR	3425975	Identifier	cli_buf		3425916	0					
ANR	3425976	ExpressionStatement	srv_req = sec_alpha_to_sec_req ( srv_buf )	611:1:15817:15856	3425916	7	True				
ANR	3425977	AssignmentExpression	srv_req = sec_alpha_to_sec_req ( srv_buf )		3425916	0		=			
ANR	3425978	Identifier	srv_req		3425916	0					
ANR	3425979	CallExpression	sec_alpha_to_sec_req ( srv_buf )		3425916	1					
ANR	3425980	Callee	sec_alpha_to_sec_req		3425916	0					
ANR	3425981	Identifier	sec_alpha_to_sec_req		3425916	0					
ANR	3425982	ArgumentList	srv_buf		3425916	1					
ANR	3425983	Argument	srv_buf		3425916	0					
ANR	3425984	Identifier	srv_buf		3425916	0					
ANR	3425985	IfStatement	if ( cli_buf )		3425916	8					
ANR	3425986	Condition	cli_buf	614:5:15885:15891	3425916	0	True				
ANR	3425987	Identifier	cli_buf		3425916	0					
ANR	3425988	CompoundStatement		23:14:438:438	3425916	1					
ANR	3425989	ExpressionStatement	free ( cli_buf )	615:2:15898:15912	3425916	0	True				
ANR	3425990	CallExpression	free ( cli_buf )		3425916	0					
ANR	3425991	Callee	free		3425916	0					
ANR	3425992	Identifier	free		3425916	0					
ANR	3425993	ArgumentList	cli_buf		3425916	1					
ANR	3425994	Argument	cli_buf		3425916	0					
ANR	3425995	Identifier	cli_buf		3425916	0					
ANR	3425996	IfStatement	if ( srv_buf )		3425916	9					
ANR	3425997	Condition	srv_buf	618:5:15923:15929	3425916	0	True				
ANR	3425998	Identifier	srv_buf		3425916	0					
ANR	3425999	CompoundStatement		27:14:476:476	3425916	1					
ANR	3426000	ExpressionStatement	free ( srv_buf )	619:2:15936:15950	3425916	0	True				
ANR	3426001	CallExpression	free ( srv_buf )		3425916	0					
ANR	3426002	Callee	free		3425916	0					
ANR	3426003	Identifier	free		3425916	0					
ANR	3426004	ArgumentList	srv_buf		3425916	1					
ANR	3426005	Argument	srv_buf		3425916	0					
ANR	3426006	Identifier	srv_buf		3425916	0					
ANR	3426007	IfStatement	if ( required )		3425916	10					
ANR	3426008	Condition	required	622:5:15961:15968	3425916	0	True				
ANR	3426009	Identifier	required		3425916	0					
ANR	3426010	CompoundStatement		31:16:516:516	3425916	1					
ANR	3426011	ExpressionStatement	* required = ( cli_req == SEC_REQ_REQUIRED || srv_req == SEC_REQ_REQUIRED )	624:2:16034:16106	3425916	0	True				
ANR	3426012	AssignmentExpression	* required = ( cli_req == SEC_REQ_REQUIRED || srv_req == SEC_REQ_REQUIRED )		3425916	0		=			
ANR	3426013	UnaryOperationExpression	* required		3425916	0					
ANR	3426014	UnaryOperator	*		3425916	0					
ANR	3426015	Identifier	required		3425916	1					
ANR	3426016	OrExpression	cli_req == SEC_REQ_REQUIRED || srv_req == SEC_REQ_REQUIRED		3425916	1		||			
ANR	3426017	EqualityExpression	cli_req == SEC_REQ_REQUIRED		3425916	0		==			
ANR	3426018	Identifier	cli_req		3425916	0					
ANR	3426019	Identifier	SEC_REQ_REQUIRED		3425916	1					
ANR	3426020	EqualityExpression	srv_req == SEC_REQ_REQUIRED		3425916	1		==			
ANR	3426021	Identifier	srv_req		3425916	0					
ANR	3426022	Identifier	SEC_REQ_REQUIRED		3425916	1					
ANR	3426023	IfStatement	if ( cli_req == SEC_REQ_REQUIRED )		3425916	11					
ANR	3426024	Condition	cli_req == SEC_REQ_REQUIRED	661:5:17103:17129	3425916	0	True				
ANR	3426025	EqualityExpression	cli_req == SEC_REQ_REQUIRED		3425916	0		==			
ANR	3426026	Identifier	cli_req		3425916	0					
ANR	3426027	Identifier	SEC_REQ_REQUIRED		3425916	1					
ANR	3426028	CompoundStatement		70:34:1676:1676	3425916	1					
ANR	3426029	IfStatement	if ( srv_req == SEC_REQ_NEVER )		3425916	0					
ANR	3426030	Condition	srv_req == SEC_REQ_NEVER	662:6:17140:17163	3425916	0	True				
ANR	3426031	EqualityExpression	srv_req == SEC_REQ_NEVER		3425916	0		==			
ANR	3426032	Identifier	srv_req		3425916	0					
ANR	3426033	Identifier	SEC_REQ_NEVER		3425916	1					
ANR	3426034	CompoundStatement		71:32:1710:1710	3425916	1					
ANR	3426035	ReturnStatement	return SEC_FEAT_ACT_FAIL ;	663:3:17171:17195	3425916	0	True				
ANR	3426036	Identifier	SEC_FEAT_ACT_FAIL		3425916	0					
ANR	3426037	ElseStatement	else		3425916	0					
ANR	3426038	CompoundStatement		73:9:1750:1750	3425916	0					
ANR	3426039	ReturnStatement	return SEC_FEAT_ACT_YES ;	665:3:17211:17234	3425916	0	True				
ANR	3426040	Identifier	SEC_FEAT_ACT_YES		3425916	0					
ANR	3426041	IfStatement	if ( cli_req == SEC_REQ_PREFERRED )		3425916	12					
ANR	3426042	Condition	cli_req == SEC_REQ_PREFERRED	669:5:17249:17276	3425916	0	True				
ANR	3426043	EqualityExpression	cli_req == SEC_REQ_PREFERRED		3425916	0		==			
ANR	3426044	Identifier	cli_req		3425916	0					
ANR	3426045	Identifier	SEC_REQ_PREFERRED		3425916	1					
ANR	3426046	CompoundStatement		78:35:1823:1823	3425916	1					
ANR	3426047	IfStatement	if ( srv_req == SEC_REQ_NEVER )		3425916	0					
ANR	3426048	Condition	srv_req == SEC_REQ_NEVER	670:6:17287:17310	3425916	0	True				
ANR	3426049	EqualityExpression	srv_req == SEC_REQ_NEVER		3425916	0		==			
ANR	3426050	Identifier	srv_req		3425916	0					
ANR	3426051	Identifier	SEC_REQ_NEVER		3425916	1					
ANR	3426052	CompoundStatement		79:32:1857:1857	3425916	1					
ANR	3426053	ReturnStatement	return SEC_FEAT_ACT_NO ;	671:3:17318:17340	3425916	0	True				
ANR	3426054	Identifier	SEC_FEAT_ACT_NO		3425916	0					
ANR	3426055	ElseStatement	else		3425916	0					
ANR	3426056	CompoundStatement		81:9:1895:1895	3425916	0					
ANR	3426057	ReturnStatement	return SEC_FEAT_ACT_YES ;	673:3:17356:17379	3425916	0	True				
ANR	3426058	Identifier	SEC_FEAT_ACT_YES		3425916	0					
ANR	3426059	IfStatement	if ( cli_req == SEC_REQ_OPTIONAL )		3425916	13					
ANR	3426060	Condition	cli_req == SEC_REQ_OPTIONAL	677:5:17394:17420	3425916	0	True				
ANR	3426061	EqualityExpression	cli_req == SEC_REQ_OPTIONAL		3425916	0		==			
ANR	3426062	Identifier	cli_req		3425916	0					
ANR	3426063	Identifier	SEC_REQ_OPTIONAL		3425916	1					
ANR	3426064	CompoundStatement		86:34:1967:1967	3425916	1					
ANR	3426065	IfStatement	if ( srv_req == SEC_REQ_REQUIRED || srv_req == SEC_REQ_PREFERRED )		3425916	0					
ANR	3426066	Condition	srv_req == SEC_REQ_REQUIRED || srv_req == SEC_REQ_PREFERRED	678:6:17431:17489	3425916	0	True				
ANR	3426067	OrExpression	srv_req == SEC_REQ_REQUIRED || srv_req == SEC_REQ_PREFERRED		3425916	0		||			
ANR	3426068	EqualityExpression	srv_req == SEC_REQ_REQUIRED		3425916	0		==			
ANR	3426069	Identifier	srv_req		3425916	0					
ANR	3426070	Identifier	SEC_REQ_REQUIRED		3425916	1					
ANR	3426071	EqualityExpression	srv_req == SEC_REQ_PREFERRED		3425916	1		==			
ANR	3426072	Identifier	srv_req		3425916	0					
ANR	3426073	Identifier	SEC_REQ_PREFERRED		3425916	1					
ANR	3426074	CompoundStatement		87:67:2036:2036	3425916	1					
ANR	3426075	ReturnStatement	return SEC_FEAT_ACT_YES ;	679:3:17497:17520	3425916	0	True				
ANR	3426076	Identifier	SEC_FEAT_ACT_YES		3425916	0					
ANR	3426077	ElseStatement	else		3425916	0					
ANR	3426078	CompoundStatement		89:9:2075:2075	3425916	0					
ANR	3426079	ReturnStatement	return SEC_FEAT_ACT_NO ;	681:3:17536:17558	3425916	0	True				
ANR	3426080	Identifier	SEC_FEAT_ACT_NO		3425916	0					
ANR	3426081	IfStatement	if ( cli_req == SEC_REQ_NEVER )		3425916	14					
ANR	3426082	Condition	cli_req == SEC_REQ_NEVER	685:5:17573:17596	3425916	0	True				
ANR	3426083	EqualityExpression	cli_req == SEC_REQ_NEVER		3425916	0		==			
ANR	3426084	Identifier	cli_req		3425916	0					
ANR	3426085	Identifier	SEC_REQ_NEVER		3425916	1					
ANR	3426086	CompoundStatement		94:31:2143:2143	3425916	1					
ANR	3426087	IfStatement	if ( srv_req == SEC_REQ_REQUIRED )		3425916	0					
ANR	3426088	Condition	srv_req == SEC_REQ_REQUIRED	686:6:17607:17633	3425916	0	True				
ANR	3426089	EqualityExpression	srv_req == SEC_REQ_REQUIRED		3425916	0		==			
ANR	3426090	Identifier	srv_req		3425916	0					
ANR	3426091	Identifier	SEC_REQ_REQUIRED		3425916	1					
ANR	3426092	CompoundStatement		95:35:2180:2180	3425916	1					
ANR	3426093	ReturnStatement	return SEC_FEAT_ACT_FAIL ;	687:3:17641:17665	3425916	0	True				
ANR	3426094	Identifier	SEC_FEAT_ACT_FAIL		3425916	0					
ANR	3426095	ElseStatement	else		3425916	0					
ANR	3426096	CompoundStatement		97:9:2220:2220	3425916	0					
ANR	3426097	ReturnStatement	return SEC_FEAT_ACT_NO ;	689:3:17681:17703	3425916	0	True				
ANR	3426098	Identifier	SEC_FEAT_ACT_NO		3425916	0					
ANR	3426099	ReturnStatement	return SEC_FEAT_ACT_FAIL ;	694:1:17792:17816	3425916	15	True				
ANR	3426100	Identifier	SEC_FEAT_ACT_FAIL		3425916	0					
ANR	3426101	ReturnType	SecMan :: sec_feat_act		3425916	1					
ANR	3426102	Identifier	SecMan :: ReconcileSecurityAttribute		3425916	2					
ANR	3426103	ParameterList	"const char * attr , ClassAd & cli_ad , ClassAd & srv_ad , bool * required"		3425916	3					
ANR	3426104	Parameter	const char * attr	590:35:15364:15379	3425916	0	True				
ANR	3426105	ParameterType	const char *		3425916	0					
ANR	3426106	Identifier	attr		3425916	1					
ANR	3426107	Parameter	ClassAd & cli_ad	591:11:15393:15407	3425916	1	True				
ANR	3426108	ParameterType	ClassAd &		3425916	0					
ANR	3426109	Identifier	cli_ad		3425916	1					
ANR	3426110	Parameter	ClassAd & srv_ad	591:28:15410:15424	3425916	2	True				
ANR	3426111	ParameterType	ClassAd &		3425916	0					
ANR	3426112	Identifier	srv_ad		3425916	1					
ANR	3426113	Parameter	bool * required	592:11:15438:15451	3425916	3	True				
ANR	3426114	ParameterType	bool *		3425916	0					
ANR	3426115	Identifier	required		3425916	1					
ANR	3426116	CFGEntryNode	ENTRY		3425916		True				
ANR	3426117	CFGExitNode	EXIT		3425916		True				
ANR	3426118	Symbol	NULL		3425916						
ANR	3426119	Symbol	SEC_FEAT_ACT_NO		3425916						
ANR	3426120	Symbol	SEC_FEAT_ACT_FAIL		3425916						
ANR	3426121	Symbol	srv_buf		3425916						
ANR	3426122	Symbol	SEC_REQ_NEVER		3425916						
ANR	3426123	Symbol	SEC_FEAT_ACT_YES		3425916						
ANR	3426124	Symbol	& cli_buf		3425916						
ANR	3426125	Symbol	required		3425916						
ANR	3426126	Symbol	cli_ad		3425916						
ANR	3426127	Symbol	srv_ad		3425916						
ANR	3426128	Symbol	SEC_REQ_REQUIRED		3425916						
ANR	3426129	Symbol	sec_alpha_to_sec_req		3425916						
ANR	3426130	Symbol	srv_req		3425916						
ANR	3426131	Symbol	cli_req		3425916						
ANR	3426132	Symbol	SEC_REQ_OPTIONAL		3425916						
ANR	3426133	Symbol	attr		3425916						
ANR	3426134	Symbol	cli_buf		3425916						
ANR	3426135	Symbol	* required		3425916						
ANR	3426136	Symbol	SEC_REQ_PREFERRED		3425916						
ANR	3426137	Symbol	& srv_buf		3425916						
ANR	3426138	Function	SecMan :: ReconcileSecurityPolicyAds	698:0:17822:22021							
ANR	3426139	FunctionDef	"SecMan :: ReconcileSecurityPolicyAds (ClassAd & cli_ad , ClassAd & srv_ad)"		3426138	0					
ANR	3426140	CompoundStatement		699:69:17901:22021	3426138	0					
ANR	3426141	IdentifierDeclStatement	sec_feat_act authentication_action ;	702:1:17931:17965	3426138	0	True				
ANR	3426142	IdentifierDecl	authentication_action		3426138	0					
ANR	3426143	IdentifierDeclType	sec_feat_act		3426138	0					
ANR	3426144	Identifier	authentication_action		3426138	1					
ANR	3426145	IdentifierDeclStatement	sec_feat_act encryption_action ;	703:1:17968:17998	3426138	1	True				
ANR	3426146	IdentifierDecl	encryption_action		3426138	0					
ANR	3426147	IdentifierDeclType	sec_feat_act		3426138	0					
ANR	3426148	Identifier	encryption_action		3426138	1					
ANR	3426149	IdentifierDeclStatement	sec_feat_act integrity_action ;	704:1:18001:18030	3426138	2	True				
ANR	3426150	IdentifierDecl	integrity_action		3426138	0					
ANR	3426151	IdentifierDeclType	sec_feat_act		3426138	0					
ANR	3426152	Identifier	integrity_action		3426138	1					
ANR	3426153	IdentifierDeclStatement	bool auth_required = false ;	705:1:18033:18059	3426138	3	True				
ANR	3426154	IdentifierDecl	auth_required = false		3426138	0					
ANR	3426155	IdentifierDeclType	bool		3426138	0					
ANR	3426156	Identifier	auth_required		3426138	1					
ANR	3426157	AssignmentExpression	auth_required = false		3426138	2		=			
ANR	3426158	Identifier	false		3426138	0					
ANR	3426159	Identifier	false		3426138	1					
ANR	3426160	ExpressionStatement	"authentication_action = ReconcileSecurityAttribute ( ATTR_SEC_AUTHENTICATION , cli_ad , srv_ad , & auth_required )"	708:1:18064:18189	3426138	4	True				
ANR	3426161	AssignmentExpression	"authentication_action = ReconcileSecurityAttribute ( ATTR_SEC_AUTHENTICATION , cli_ad , srv_ad , & auth_required )"		3426138	0		=			
ANR	3426162	Identifier	authentication_action		3426138	0					
ANR	3426163	CallExpression	"ReconcileSecurityAttribute ( ATTR_SEC_AUTHENTICATION , cli_ad , srv_ad , & auth_required )"		3426138	1					
ANR	3426164	Callee	ReconcileSecurityAttribute		3426138	0					
ANR	3426165	Identifier	ReconcileSecurityAttribute		3426138	0					
ANR	3426166	ArgumentList	ATTR_SEC_AUTHENTICATION		3426138	1					
ANR	3426167	Argument	ATTR_SEC_AUTHENTICATION		3426138	0					
ANR	3426168	Identifier	ATTR_SEC_AUTHENTICATION		3426138	0					
ANR	3426169	Argument	cli_ad		3426138	1					
ANR	3426170	Identifier	cli_ad		3426138	0					
ANR	3426171	Argument	srv_ad		3426138	2					
ANR	3426172	Identifier	srv_ad		3426138	0					
ANR	3426173	Argument	& auth_required		3426138	3					
ANR	3426174	UnaryOperationExpression	& auth_required		3426138	0					
ANR	3426175	UnaryOperator	&		3426138	0					
ANR	3426176	Identifier	auth_required		3426138	1					
ANR	3426177	ExpressionStatement	"encryption_action = ReconcileSecurityAttribute ( ATTR_SEC_ENCRYPTION , cli_ad , srv_ad )"	712:1:18193:18294	3426138	5	True				
ANR	3426178	AssignmentExpression	"encryption_action = ReconcileSecurityAttribute ( ATTR_SEC_ENCRYPTION , cli_ad , srv_ad )"		3426138	0		=			
ANR	3426179	Identifier	encryption_action		3426138	0					
ANR	3426180	CallExpression	"ReconcileSecurityAttribute ( ATTR_SEC_ENCRYPTION , cli_ad , srv_ad )"		3426138	1					
ANR	3426181	Callee	ReconcileSecurityAttribute		3426138	0					
ANR	3426182	Identifier	ReconcileSecurityAttribute		3426138	0					
ANR	3426183	ArgumentList	ATTR_SEC_ENCRYPTION		3426138	1					
ANR	3426184	Argument	ATTR_SEC_ENCRYPTION		3426138	0					
ANR	3426185	Identifier	ATTR_SEC_ENCRYPTION		3426138	0					
ANR	3426186	Argument	cli_ad		3426138	1					
ANR	3426187	Identifier	cli_ad		3426138	0					
ANR	3426188	Argument	srv_ad		3426138	2					
ANR	3426189	Identifier	srv_ad		3426138	0					
ANR	3426190	ExpressionStatement	"integrity_action = ReconcileSecurityAttribute ( ATTR_SEC_INTEGRITY , cli_ad , srv_ad )"	716:1:18298:18397	3426138	6	True				
ANR	3426191	AssignmentExpression	"integrity_action = ReconcileSecurityAttribute ( ATTR_SEC_INTEGRITY , cli_ad , srv_ad )"		3426138	0		=			
ANR	3426192	Identifier	integrity_action		3426138	0					
ANR	3426193	CallExpression	"ReconcileSecurityAttribute ( ATTR_SEC_INTEGRITY , cli_ad , srv_ad )"		3426138	1					
ANR	3426194	Callee	ReconcileSecurityAttribute		3426138	0					
ANR	3426195	Identifier	ReconcileSecurityAttribute		3426138	0					
ANR	3426196	ArgumentList	ATTR_SEC_INTEGRITY		3426138	1					
ANR	3426197	Argument	ATTR_SEC_INTEGRITY		3426138	0					
ANR	3426198	Identifier	ATTR_SEC_INTEGRITY		3426138	0					
ANR	3426199	Argument	cli_ad		3426138	1					
ANR	3426200	Identifier	cli_ad		3426138	0					
ANR	3426201	Argument	srv_ad		3426138	2					
ANR	3426202	Identifier	srv_ad		3426138	0					
ANR	3426203	IfStatement	if ( ( authentication_action == SEC_FEAT_ACT_FAIL ) || ( encryption_action == SEC_FEAT_ACT_FAIL ) || ( integrity_action == SEC_FEAT_ACT_FAIL ) )		3426138	7					
ANR	3426204	Condition	( authentication_action == SEC_FEAT_ACT_FAIL ) || ( encryption_action == SEC_FEAT_ACT_FAIL ) || ( integrity_action == SEC_FEAT_ACT_FAIL )	720:6:18406:18548	3426138	0	True				
ANR	3426205	OrExpression	( authentication_action == SEC_FEAT_ACT_FAIL ) || ( encryption_action == SEC_FEAT_ACT_FAIL ) || ( integrity_action == SEC_FEAT_ACT_FAIL )		3426138	0		||			
ANR	3426206	EqualityExpression	authentication_action == SEC_FEAT_ACT_FAIL		3426138	0		==			
ANR	3426207	Identifier	authentication_action		3426138	0					
ANR	3426208	Identifier	SEC_FEAT_ACT_FAIL		3426138	1					
ANR	3426209	OrExpression	( encryption_action == SEC_FEAT_ACT_FAIL ) || ( integrity_action == SEC_FEAT_ACT_FAIL )		3426138	1		||			
ANR	3426210	EqualityExpression	encryption_action == SEC_FEAT_ACT_FAIL		3426138	0		==			
ANR	3426211	Identifier	encryption_action		3426138	0					
ANR	3426212	Identifier	SEC_FEAT_ACT_FAIL		3426138	1					
ANR	3426213	EqualityExpression	integrity_action == SEC_FEAT_ACT_FAIL		3426138	1		==			
ANR	3426214	Identifier	integrity_action		3426138	0					
ANR	3426215	Identifier	SEC_FEAT_ACT_FAIL		3426138	1					
ANR	3426216	CompoundStatement		24:48:650:650	3426138	1					
ANR	3426217	ReturnStatement	return NULL ;	727:2:18628:18639	3426138	0	True				
ANR	3426218	Identifier	NULL		3426138	0					
ANR	3426219	IdentifierDeclStatement	ClassAd * action_ad = new ClassAd ( ) ;	731:1:18682:18717	3426138	8	True				
ANR	3426220	IdentifierDecl	* action_ad = new ClassAd ( )		3426138	0					
ANR	3426221	IdentifierDeclType	ClassAd *		3426138	0					
ANR	3426222	Identifier	action_ad		3426138	1					
ANR	3426223	AssignmentExpression	* action_ad = new ClassAd ( )		3426138	2		=			
ANR	3426224	Identifier	action_ad		3426138	0					
ANR	3426225	UnaryExpression	new ClassAd ( )		3426138	1					
ANR	3426226	IdentifierDeclStatement	char buf [ 1024 ] ;	733:1:18721:18735	3426138	9	True				
ANR	3426227	IdentifierDecl	buf [ 1024 ]		3426138	0					
ANR	3426228	IdentifierDeclType	char [ 1024 ]		3426138	0					
ANR	3426229	Identifier	buf		3426138	1					
ANR	3426230	PrimaryExpression	1024		3426138	2					
ANR	3426231	ExpressionStatement	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_SEC_AUTHENTICATION , SecMan :: sec_feat_act_rev [ authentication_action ] )"	735:1:18739:18839	3426138	10	True				
ANR	3426232	CallExpression	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_SEC_AUTHENTICATION , SecMan :: sec_feat_act_rev [ authentication_action ] )"		3426138	0					
ANR	3426233	Callee	sprintf		3426138	0					
ANR	3426234	Identifier	sprintf		3426138	0					
ANR	3426235	ArgumentList	buf		3426138	1					
ANR	3426236	Argument	buf		3426138	0					
ANR	3426237	Identifier	buf		3426138	0					
ANR	3426238	Argument	"""%s=\\""%s\\"""""		3426138	1					
ANR	3426239	PrimaryExpression	"""%s=\\""%s\\"""""		3426138	0					
ANR	3426240	Argument	ATTR_SEC_AUTHENTICATION		3426138	2					
ANR	3426241	Identifier	ATTR_SEC_AUTHENTICATION		3426138	0					
ANR	3426242	Argument	SecMan :: sec_feat_act_rev [ authentication_action ]		3426138	3					
ANR	3426243	ArrayIndexing	SecMan :: sec_feat_act_rev [ authentication_action ]		3426138	0					
ANR	3426244	Identifier	SecMan :: sec_feat_act_rev		3426138	0					
ANR	3426245	Identifier	authentication_action		3426138	1					
ANR	3426246	ExpressionStatement	action_ad -> Insert ( buf )	736:1:18842:18864	3426138	11	True				
ANR	3426247	CallExpression	action_ad -> Insert ( buf )		3426138	0					
ANR	3426248	Callee	action_ad -> Insert		3426138	0					
ANR	3426249	PtrMemberAccess	action_ad -> Insert		3426138	0					
ANR	3426250	Identifier	action_ad		3426138	0					
ANR	3426251	Identifier	Insert		3426138	1					
ANR	3426252	ArgumentList	buf		3426138	1					
ANR	3426253	Argument	buf		3426138	0					
ANR	3426254	Identifier	buf		3426138	0					
ANR	3426255	IfStatement	if ( authentication_action == SecMan :: SEC_FEAT_ACT_YES )		3426138	12					
ANR	3426256	Condition	authentication_action == SecMan :: SEC_FEAT_ACT_YES	738:5:18872:18920	3426138	0	True				
ANR	3426257	EqualityExpression	authentication_action == SecMan :: SEC_FEAT_ACT_YES		3426138	0		==			
ANR	3426258	Identifier	authentication_action		3426138	0					
ANR	3426259	Identifier	SecMan :: SEC_FEAT_ACT_YES		3426138	1					
ANR	3426260	CompoundStatement		40:57:1022:1022	3426138	1					
ANR	3426261	IfStatement	if ( ! auth_required )		3426138	0					
ANR	3426262	Condition	! auth_required	741:6:19058:19071	3426138	0	True				
ANR	3426263	UnaryOperationExpression	! auth_required		3426138	0					
ANR	3426264	UnaryOperator	!		3426138	0					
ANR	3426265	Identifier	auth_required		3426138	1					
ANR	3426266	CompoundStatement		43:23:1173:1173	3426138	1					
ANR	3426267	ExpressionStatement	"action_ad -> Assign ( ATTR_SEC_AUTH_REQUIRED , false )"	743:3:19125:19172	3426138	0	True				
ANR	3426268	CallExpression	"action_ad -> Assign ( ATTR_SEC_AUTH_REQUIRED , false )"		3426138	0					
ANR	3426269	Callee	action_ad -> Assign		3426138	0					
ANR	3426270	PtrMemberAccess	action_ad -> Assign		3426138	0					
ANR	3426271	Identifier	action_ad		3426138	0					
ANR	3426272	Identifier	Assign		3426138	1					
ANR	3426273	ArgumentList	ATTR_SEC_AUTH_REQUIRED		3426138	1					
ANR	3426274	Argument	ATTR_SEC_AUTH_REQUIRED		3426138	0					
ANR	3426275	Identifier	ATTR_SEC_AUTH_REQUIRED		3426138	0					
ANR	3426276	Argument	false		3426138	1					
ANR	3426277	Identifier	false		3426138	0					
ANR	3426278	ExpressionStatement	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_SEC_ENCRYPTION , SecMan :: sec_feat_act_rev [ encryption_action ] )"	747:1:19183:19275	3426138	13	True				
ANR	3426279	CallExpression	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_SEC_ENCRYPTION , SecMan :: sec_feat_act_rev [ encryption_action ] )"		3426138	0					
ANR	3426280	Callee	sprintf		3426138	0					
ANR	3426281	Identifier	sprintf		3426138	0					
ANR	3426282	ArgumentList	buf		3426138	1					
ANR	3426283	Argument	buf		3426138	0					
ANR	3426284	Identifier	buf		3426138	0					
ANR	3426285	Argument	"""%s=\\""%s\\"""""		3426138	1					
ANR	3426286	PrimaryExpression	"""%s=\\""%s\\"""""		3426138	0					
ANR	3426287	Argument	ATTR_SEC_ENCRYPTION		3426138	2					
ANR	3426288	Identifier	ATTR_SEC_ENCRYPTION		3426138	0					
ANR	3426289	Argument	SecMan :: sec_feat_act_rev [ encryption_action ]		3426138	3					
ANR	3426290	ArrayIndexing	SecMan :: sec_feat_act_rev [ encryption_action ]		3426138	0					
ANR	3426291	Identifier	SecMan :: sec_feat_act_rev		3426138	0					
ANR	3426292	Identifier	encryption_action		3426138	1					
ANR	3426293	ExpressionStatement	action_ad -> Insert ( buf )	748:1:19278:19300	3426138	14	True				
ANR	3426294	CallExpression	action_ad -> Insert ( buf )		3426138	0					
ANR	3426295	Callee	action_ad -> Insert		3426138	0					
ANR	3426296	PtrMemberAccess	action_ad -> Insert		3426138	0					
ANR	3426297	Identifier	action_ad		3426138	0					
ANR	3426298	Identifier	Insert		3426138	1					
ANR	3426299	ArgumentList	buf		3426138	1					
ANR	3426300	Argument	buf		3426138	0					
ANR	3426301	Identifier	buf		3426138	0					
ANR	3426302	ExpressionStatement	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_SEC_INTEGRITY , SecMan :: sec_feat_act_rev [ integrity_action ] )"	750:1:19304:19394	3426138	15	True				
ANR	3426303	CallExpression	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_SEC_INTEGRITY , SecMan :: sec_feat_act_rev [ integrity_action ] )"		3426138	0					
ANR	3426304	Callee	sprintf		3426138	0					
ANR	3426305	Identifier	sprintf		3426138	0					
ANR	3426306	ArgumentList	buf		3426138	1					
ANR	3426307	Argument	buf		3426138	0					
ANR	3426308	Identifier	buf		3426138	0					
ANR	3426309	Argument	"""%s=\\""%s\\"""""		3426138	1					
ANR	3426310	PrimaryExpression	"""%s=\\""%s\\"""""		3426138	0					
ANR	3426311	Argument	ATTR_SEC_INTEGRITY		3426138	2					
ANR	3426312	Identifier	ATTR_SEC_INTEGRITY		3426138	0					
ANR	3426313	Argument	SecMan :: sec_feat_act_rev [ integrity_action ]		3426138	3					
ANR	3426314	ArrayIndexing	SecMan :: sec_feat_act_rev [ integrity_action ]		3426138	0					
ANR	3426315	Identifier	SecMan :: sec_feat_act_rev		3426138	0					
ANR	3426316	Identifier	integrity_action		3426138	1					
ANR	3426317	ExpressionStatement	action_ad -> Insert ( buf )	751:1:19397:19419	3426138	16	True				
ANR	3426318	CallExpression	action_ad -> Insert ( buf )		3426138	0					
ANR	3426319	Callee	action_ad -> Insert		3426138	0					
ANR	3426320	PtrMemberAccess	action_ad -> Insert		3426138	0					
ANR	3426321	Identifier	action_ad		3426138	0					
ANR	3426322	Identifier	Insert		3426138	1					
ANR	3426323	ArgumentList	buf		3426138	1					
ANR	3426324	Argument	buf		3426138	0					
ANR	3426325	Identifier	buf		3426138	0					
ANR	3426326	IdentifierDeclStatement	char * cli_methods = NULL ;	754:1:19424:19448	3426138	17	True				
ANR	3426327	IdentifierDecl	* cli_methods = NULL		3426138	0					
ANR	3426328	IdentifierDeclType	char *		3426138	0					
ANR	3426329	Identifier	cli_methods		3426138	1					
ANR	3426330	AssignmentExpression	* cli_methods = NULL		3426138	2		=			
ANR	3426331	Identifier	NULL		3426138	0					
ANR	3426332	Identifier	NULL		3426138	1					
ANR	3426333	IdentifierDeclStatement	char * srv_methods = NULL ;	755:1:19451:19475	3426138	18	True				
ANR	3426334	IdentifierDecl	* srv_methods = NULL		3426138	0					
ANR	3426335	IdentifierDeclType	char *		3426138	0					
ANR	3426336	Identifier	srv_methods		3426138	1					
ANR	3426337	AssignmentExpression	* srv_methods = NULL		3426138	2		=			
ANR	3426338	Identifier	NULL		3426138	0					
ANR	3426339	Identifier	NULL		3426138	1					
ANR	3426340	IfStatement	"if ( cli_ad . LookupString ( ATTR_SEC_AUTHENTICATION_METHODS , & cli_methods ) && srv_ad . LookupString ( ATTR_SEC_AUTHENTICATION_METHODS , & srv_methods ) )"		3426138	19					
ANR	3426341	Condition	"cli_ad . LookupString ( ATTR_SEC_AUTHENTICATION_METHODS , & cli_methods ) && srv_ad . LookupString ( ATTR_SEC_AUTHENTICATION_METHODS , & srv_methods )"	756:5:19482:19621	3426138	0	True				
ANR	3426342	AndExpression	"cli_ad . LookupString ( ATTR_SEC_AUTHENTICATION_METHODS , & cli_methods ) && srv_ad . LookupString ( ATTR_SEC_AUTHENTICATION_METHODS , & srv_methods )"		3426138	0		&&			
ANR	3426343	CallExpression	"cli_ad . LookupString ( ATTR_SEC_AUTHENTICATION_METHODS , & cli_methods )"		3426138	0					
ANR	3426344	Callee	cli_ad . LookupString		3426138	0					
ANR	3426345	MemberAccess	cli_ad . LookupString		3426138	0					
ANR	3426346	Identifier	cli_ad		3426138	0					
ANR	3426347	Identifier	LookupString		3426138	1					
ANR	3426348	ArgumentList	ATTR_SEC_AUTHENTICATION_METHODS		3426138	1					
ANR	3426349	Argument	ATTR_SEC_AUTHENTICATION_METHODS		3426138	0					
ANR	3426350	Identifier	ATTR_SEC_AUTHENTICATION_METHODS		3426138	0					
ANR	3426351	Argument	& cli_methods		3426138	1					
ANR	3426352	UnaryOperationExpression	& cli_methods		3426138	0					
ANR	3426353	UnaryOperator	&		3426138	0					
ANR	3426354	Identifier	cli_methods		3426138	1					
ANR	3426355	CallExpression	"srv_ad . LookupString ( ATTR_SEC_AUTHENTICATION_METHODS , & srv_methods )"		3426138	1					
ANR	3426356	Callee	srv_ad . LookupString		3426138	0					
ANR	3426357	MemberAccess	srv_ad . LookupString		3426138	0					
ANR	3426358	Identifier	srv_ad		3426138	0					
ANR	3426359	Identifier	LookupString		3426138	1					
ANR	3426360	ArgumentList	ATTR_SEC_AUTHENTICATION_METHODS		3426138	1					
ANR	3426361	Argument	ATTR_SEC_AUTHENTICATION_METHODS		3426138	0					
ANR	3426362	Identifier	ATTR_SEC_AUTHENTICATION_METHODS		3426138	0					
ANR	3426363	Argument	& srv_methods		3426138	1					
ANR	3426364	UnaryOperationExpression	& srv_methods		3426138	0					
ANR	3426365	UnaryOperator	&		3426138	0					
ANR	3426366	Identifier	srv_methods		3426138	1					
ANR	3426367	CompoundStatement		68:2:2052:2063	3426138	1					
ANR	3426368	IdentifierDeclStatement	"MyString the_methods = ReconcileMethodLists ( cli_methods , srv_methods ) ;"	760:2:19669:19740	3426138	0	True				
ANR	3426369	IdentifierDecl	"the_methods = ReconcileMethodLists ( cli_methods , srv_methods )"		3426138	0					
ANR	3426370	IdentifierDeclType	MyString		3426138	0					
ANR	3426371	Identifier	the_methods		3426138	1					
ANR	3426372	AssignmentExpression	"the_methods = ReconcileMethodLists ( cli_methods , srv_methods )"		3426138	2		=			
ANR	3426373	Identifier	the_methods		3426138	0					
ANR	3426374	CallExpression	"ReconcileMethodLists ( cli_methods , srv_methods )"		3426138	1					
ANR	3426375	Callee	ReconcileMethodLists		3426138	0					
ANR	3426376	Identifier	ReconcileMethodLists		3426138	0					
ANR	3426377	ArgumentList	cli_methods		3426138	1					
ANR	3426378	Argument	cli_methods		3426138	0					
ANR	3426379	Identifier	cli_methods		3426138	0					
ANR	3426380	Argument	srv_methods		3426138	1					
ANR	3426381	Identifier	srv_methods		3426138	0					
ANR	3426382	ExpressionStatement	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_SEC_AUTHENTICATION_METHODS_LIST , the_methods . Value ( ) )"	761:2:19744:19829	3426138	1	True				
ANR	3426383	CallExpression	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_SEC_AUTHENTICATION_METHODS_LIST , the_methods . Value ( ) )"		3426138	0					
ANR	3426384	Callee	sprintf		3426138	0					
ANR	3426385	Identifier	sprintf		3426138	0					
ANR	3426386	ArgumentList	buf		3426138	1					
ANR	3426387	Argument	buf		3426138	0					
ANR	3426388	Identifier	buf		3426138	0					
ANR	3426389	Argument	"""%s=\\""%s\\"""""		3426138	1					
ANR	3426390	PrimaryExpression	"""%s=\\""%s\\"""""		3426138	0					
ANR	3426391	Argument	ATTR_SEC_AUTHENTICATION_METHODS_LIST		3426138	2					
ANR	3426392	Identifier	ATTR_SEC_AUTHENTICATION_METHODS_LIST		3426138	0					
ANR	3426393	Argument	the_methods . Value ( )		3426138	3					
ANR	3426394	CallExpression	the_methods . Value ( )		3426138	0					
ANR	3426395	Callee	the_methods . Value		3426138	0					
ANR	3426396	MemberAccess	the_methods . Value		3426138	0					
ANR	3426397	Identifier	the_methods		3426138	0					
ANR	3426398	Identifier	Value		3426138	1					
ANR	3426399	ArgumentList			3426138	1					
ANR	3426400	ExpressionStatement	action_ad -> Insert ( buf )	762:2:19833:19855	3426138	2	True				
ANR	3426401	CallExpression	action_ad -> Insert ( buf )		3426138	0					
ANR	3426402	Callee	action_ad -> Insert		3426138	0					
ANR	3426403	PtrMemberAccess	action_ad -> Insert		3426138	0					
ANR	3426404	Identifier	action_ad		3426138	0					
ANR	3426405	Identifier	Insert		3426138	1					
ANR	3426406	ArgumentList	buf		3426138	1					
ANR	3426407	Argument	buf		3426138	0					
ANR	3426408	Identifier	buf		3426138	0					
ANR	3426409	IdentifierDeclStatement	StringList tmpmethodlist ( the_methods . Value ( ) ) ;	765:2:19902:19950	3426138	3	True				
ANR	3426410	IdentifierDecl	tmpmethodlist ( the_methods . Value ( ) )		3426138	0					
ANR	3426411	IdentifierDeclType	StringList		3426138	0					
ANR	3426412	Identifier	tmpmethodlist		3426138	1					
ANR	3426413	CallExpression	the_methods . Value ( )		3426138	2					
ANR	3426414	Callee	the_methods . Value		3426138	0					
ANR	3426415	MemberAccess	the_methods . Value		3426138	0					
ANR	3426416	Identifier	the_methods		3426138	0					
ANR	3426417	Identifier	Value		3426138	1					
ANR	3426418	ArgumentList			3426138	1					
ANR	3426419	IdentifierDeclStatement	char * first ;	766:2:19954:19965	3426138	4	True				
ANR	3426420	IdentifierDecl	* first		3426138	0					
ANR	3426421	IdentifierDeclType	char *		3426138	0					
ANR	3426422	Identifier	first		3426138	1					
ANR	3426423	ExpressionStatement	tmpmethodlist . rewind ( )	767:2:19969:19991	3426138	5	True				
ANR	3426424	CallExpression	tmpmethodlist . rewind ( )		3426138	0					
ANR	3426425	Callee	tmpmethodlist . rewind		3426138	0					
ANR	3426426	MemberAccess	tmpmethodlist . rewind		3426138	0					
ANR	3426427	Identifier	tmpmethodlist		3426138	0					
ANR	3426428	Identifier	rewind		3426138	1					
ANR	3426429	ArgumentList			3426138	1					
ANR	3426430	ExpressionStatement	first = tmpmethodlist . next ( )	768:2:19995:20023	3426138	6	True				
ANR	3426431	AssignmentExpression	first = tmpmethodlist . next ( )		3426138	0		=			
ANR	3426432	Identifier	first		3426138	0					
ANR	3426433	CallExpression	tmpmethodlist . next ( )		3426138	1					
ANR	3426434	Callee	tmpmethodlist . next		3426138	0					
ANR	3426435	MemberAccess	tmpmethodlist . next		3426138	0					
ANR	3426436	Identifier	tmpmethodlist		3426138	0					
ANR	3426437	Identifier	next		3426138	1					
ANR	3426438	ArgumentList			3426138	1					
ANR	3426439	IfStatement	if ( first )		3426138	7					
ANR	3426440	Condition	first	769:6:20031:20035	3426138	0	True				
ANR	3426441	Identifier	first		3426138	0					
ANR	3426442	CompoundStatement		71:13:2136:2136	3426138	1					
ANR	3426443	ExpressionStatement	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_SEC_AUTHENTICATION_METHODS , first )"	770:3:20043:20109	3426138	0	True				
ANR	3426444	CallExpression	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_SEC_AUTHENTICATION_METHODS , first )"		3426138	0					
ANR	3426445	Callee	sprintf		3426138	0					
ANR	3426446	Identifier	sprintf		3426138	0					
ANR	3426447	ArgumentList	buf		3426138	1					
ANR	3426448	Argument	buf		3426138	0					
ANR	3426449	Identifier	buf		3426138	0					
ANR	3426450	Argument	"""%s=\\""%s\\"""""		3426138	1					
ANR	3426451	PrimaryExpression	"""%s=\\""%s\\"""""		3426138	0					
ANR	3426452	Argument	ATTR_SEC_AUTHENTICATION_METHODS		3426138	2					
ANR	3426453	Identifier	ATTR_SEC_AUTHENTICATION_METHODS		3426138	0					
ANR	3426454	Argument	first		3426138	3					
ANR	3426455	Identifier	first		3426138	0					
ANR	3426456	ExpressionStatement	action_ad -> Insert ( buf )	771:3:20114:20136	3426138	1	True				
ANR	3426457	CallExpression	action_ad -> Insert ( buf )		3426138	0					
ANR	3426458	Callee	action_ad -> Insert		3426138	0					
ANR	3426459	PtrMemberAccess	action_ad -> Insert		3426138	0					
ANR	3426460	Identifier	action_ad		3426138	0					
ANR	3426461	Identifier	Insert		3426138	1					
ANR	3426462	ArgumentList	buf		3426138	1					
ANR	3426463	Argument	buf		3426138	0					
ANR	3426464	Identifier	buf		3426138	0					
ANR	3426465	IfStatement	if ( cli_methods )		3426138	20					
ANR	3426466	Condition	cli_methods	775:5:20151:20161	3426138	0	True				
ANR	3426467	Identifier	cli_methods		3426138	0					
ANR	3426468	CompoundStatement		77:18:2262:2262	3426138	1					
ANR	3426469	ExpressionStatement	free ( cli_methods )	776:8:20174:20191	3426138	0	True				
ANR	3426470	CallExpression	free ( cli_methods )		3426138	0					
ANR	3426471	Callee	free		3426138	0					
ANR	3426472	Identifier	free		3426138	0					
ANR	3426473	ArgumentList	cli_methods		3426138	1					
ANR	3426474	Argument	cli_methods		3426138	0					
ANR	3426475	Identifier	cli_methods		3426138	0					
ANR	3426476	IfStatement	if ( srv_methods )		3426138	21					
ANR	3426477	Condition	srv_methods	778:5:20204:20214	3426138	0	True				
ANR	3426478	Identifier	srv_methods		3426138	0					
ANR	3426479	CompoundStatement		80:18:2315:2315	3426138	1					
ANR	3426480	ExpressionStatement	free ( srv_methods )	779:8:20227:20244	3426138	0	True				
ANR	3426481	CallExpression	free ( srv_methods )		3426138	0					
ANR	3426482	Callee	free		3426138	0					
ANR	3426483	Identifier	free		3426138	0					
ANR	3426484	ArgumentList	srv_methods		3426138	1					
ANR	3426485	Argument	srv_methods		3426138	0					
ANR	3426486	Identifier	srv_methods		3426138	0					
ANR	3426487	ExpressionStatement	cli_methods = NULL	782:1:20254:20272	3426138	22	True				
ANR	3426488	AssignmentExpression	cli_methods = NULL		3426138	0		=			
ANR	3426489	Identifier	cli_methods		3426138	0					
ANR	3426490	Identifier	NULL		3426138	1					
ANR	3426491	ExpressionStatement	srv_methods = NULL	783:1:20275:20293	3426138	23	True				
ANR	3426492	AssignmentExpression	srv_methods = NULL		3426138	0		=			
ANR	3426493	Identifier	srv_methods		3426138	0					
ANR	3426494	Identifier	NULL		3426138	1					
ANR	3426495	IfStatement	"if ( cli_ad . LookupString ( ATTR_SEC_CRYPTO_METHODS , & cli_methods ) && srv_ad . LookupString ( ATTR_SEC_CRYPTO_METHODS , & srv_methods ) )"		3426138	24					
ANR	3426496	Condition	"cli_ad . LookupString ( ATTR_SEC_CRYPTO_METHODS , & cli_methods ) && srv_ad . LookupString ( ATTR_SEC_CRYPTO_METHODS , & srv_methods )"	784:5:20300:20423	3426138	0	True				
ANR	3426497	AndExpression	"cli_ad . LookupString ( ATTR_SEC_CRYPTO_METHODS , & cli_methods ) && srv_ad . LookupString ( ATTR_SEC_CRYPTO_METHODS , & srv_methods )"		3426138	0		&&			
ANR	3426498	CallExpression	"cli_ad . LookupString ( ATTR_SEC_CRYPTO_METHODS , & cli_methods )"		3426138	0					
ANR	3426499	Callee	cli_ad . LookupString		3426138	0					
ANR	3426500	MemberAccess	cli_ad . LookupString		3426138	0					
ANR	3426501	Identifier	cli_ad		3426138	0					
ANR	3426502	Identifier	LookupString		3426138	1					
ANR	3426503	ArgumentList	ATTR_SEC_CRYPTO_METHODS		3426138	1					
ANR	3426504	Argument	ATTR_SEC_CRYPTO_METHODS		3426138	0					
ANR	3426505	Identifier	ATTR_SEC_CRYPTO_METHODS		3426138	0					
ANR	3426506	Argument	& cli_methods		3426138	1					
ANR	3426507	UnaryOperationExpression	& cli_methods		3426138	0					
ANR	3426508	UnaryOperator	&		3426138	0					
ANR	3426509	Identifier	cli_methods		3426138	1					
ANR	3426510	CallExpression	"srv_ad . LookupString ( ATTR_SEC_CRYPTO_METHODS , & srv_methods )"		3426138	1					
ANR	3426511	Callee	srv_ad . LookupString		3426138	0					
ANR	3426512	MemberAccess	srv_ad . LookupString		3426138	0					
ANR	3426513	Identifier	srv_ad		3426138	0					
ANR	3426514	Identifier	LookupString		3426138	1					
ANR	3426515	ArgumentList	ATTR_SEC_CRYPTO_METHODS		3426138	1					
ANR	3426516	Argument	ATTR_SEC_CRYPTO_METHODS		3426138	0					
ANR	3426517	Identifier	ATTR_SEC_CRYPTO_METHODS		3426138	0					
ANR	3426518	Argument	& srv_methods		3426138	1					
ANR	3426519	UnaryOperationExpression	& srv_methods		3426138	0					
ANR	3426520	UnaryOperator	&		3426138	0					
ANR	3426521	Identifier	srv_methods		3426138	1					
ANR	3426522	CompoundStatement		89:2:2529:2600	3426138	1					
ANR	3426523	IdentifierDeclStatement	"MyString the_methods = ReconcileMethodLists ( cli_methods , srv_methods ) ;"	787:2:20431:20502	3426138	0	True				
ANR	3426524	IdentifierDecl	"the_methods = ReconcileMethodLists ( cli_methods , srv_methods )"		3426138	0					
ANR	3426525	IdentifierDeclType	MyString		3426138	0					
ANR	3426526	Identifier	the_methods		3426138	1					
ANR	3426527	AssignmentExpression	"the_methods = ReconcileMethodLists ( cli_methods , srv_methods )"		3426138	2		=			
ANR	3426528	Identifier	the_methods		3426138	0					
ANR	3426529	CallExpression	"ReconcileMethodLists ( cli_methods , srv_methods )"		3426138	1					
ANR	3426530	Callee	ReconcileMethodLists		3426138	0					
ANR	3426531	Identifier	ReconcileMethodLists		3426138	0					
ANR	3426532	ArgumentList	cli_methods		3426138	1					
ANR	3426533	Argument	cli_methods		3426138	0					
ANR	3426534	Identifier	cli_methods		3426138	0					
ANR	3426535	Argument	srv_methods		3426138	1					
ANR	3426536	Identifier	srv_methods		3426138	0					
ANR	3426537	ExpressionStatement	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_SEC_CRYPTO_METHODS , the_methods . Value ( ) )"	788:2:20506:20578	3426138	1	True				
ANR	3426538	CallExpression	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_SEC_CRYPTO_METHODS , the_methods . Value ( ) )"		3426138	0					
ANR	3426539	Callee	sprintf		3426138	0					
ANR	3426540	Identifier	sprintf		3426138	0					
ANR	3426541	ArgumentList	buf		3426138	1					
ANR	3426542	Argument	buf		3426138	0					
ANR	3426543	Identifier	buf		3426138	0					
ANR	3426544	Argument	"""%s=\\""%s\\"""""		3426138	1					
ANR	3426545	PrimaryExpression	"""%s=\\""%s\\"""""		3426138	0					
ANR	3426546	Argument	ATTR_SEC_CRYPTO_METHODS		3426138	2					
ANR	3426547	Identifier	ATTR_SEC_CRYPTO_METHODS		3426138	0					
ANR	3426548	Argument	the_methods . Value ( )		3426138	3					
ANR	3426549	CallExpression	the_methods . Value ( )		3426138	0					
ANR	3426550	Callee	the_methods . Value		3426138	0					
ANR	3426551	MemberAccess	the_methods . Value		3426138	0					
ANR	3426552	Identifier	the_methods		3426138	0					
ANR	3426553	Identifier	Value		3426138	1					
ANR	3426554	ArgumentList			3426138	1					
ANR	3426555	ExpressionStatement	action_ad -> Insert ( buf )	789:2:20582:20604	3426138	2	True				
ANR	3426556	CallExpression	action_ad -> Insert ( buf )		3426138	0					
ANR	3426557	Callee	action_ad -> Insert		3426138	0					
ANR	3426558	PtrMemberAccess	action_ad -> Insert		3426138	0					
ANR	3426559	Identifier	action_ad		3426138	0					
ANR	3426560	Identifier	Insert		3426138	1					
ANR	3426561	ArgumentList	buf		3426138	1					
ANR	3426562	Argument	buf		3426138	0					
ANR	3426563	Identifier	buf		3426138	0					
ANR	3426564	IfStatement	if ( cli_methods )		3426138	25					
ANR	3426565	Condition	cli_methods	792:5:20615:20625	3426138	0	True				
ANR	3426566	Identifier	cli_methods		3426138	0					
ANR	3426567	CompoundStatement		94:18:2726:2726	3426138	1					
ANR	3426568	ExpressionStatement	free ( cli_methods )	793:8:20638:20657	3426138	0	True				
ANR	3426569	CallExpression	free ( cli_methods )		3426138	0					
ANR	3426570	Callee	free		3426138	0					
ANR	3426571	Identifier	free		3426138	0					
ANR	3426572	ArgumentList	cli_methods		3426138	1					
ANR	3426573	Argument	cli_methods		3426138	0					
ANR	3426574	Identifier	cli_methods		3426138	0					
ANR	3426575	IfStatement	if ( srv_methods )		3426138	26					
ANR	3426576	Condition	srv_methods	795:5:20670:20680	3426138	0	True				
ANR	3426577	Identifier	srv_methods		3426138	0					
ANR	3426578	CompoundStatement		97:18:2781:2781	3426138	1					
ANR	3426579	ExpressionStatement	free ( srv_methods )	796:8:20693:20712	3426138	0	True				
ANR	3426580	CallExpression	free ( srv_methods )		3426138	0					
ANR	3426581	Callee	free		3426138	0					
ANR	3426582	Identifier	free		3426138	0					
ANR	3426583	ArgumentList	srv_methods		3426138	1					
ANR	3426584	Argument	srv_methods		3426138	0					
ANR	3426585	Identifier	srv_methods		3426138	0					
ANR	3426586	IdentifierDeclStatement	int cli_duration = 0 ;	802:1:20816:20836	3426138	27	True				
ANR	3426587	IdentifierDecl	cli_duration = 0		3426138	0					
ANR	3426588	IdentifierDeclType	int		3426138	0					
ANR	3426589	Identifier	cli_duration		3426138	1					
ANR	3426590	AssignmentExpression	cli_duration = 0		3426138	2		=			
ANR	3426591	Identifier	cli_duration		3426138	0					
ANR	3426592	PrimaryExpression	0		3426138	1					
ANR	3426593	IdentifierDeclStatement	int srv_duration = 0 ;	803:1:20839:20859	3426138	28	True				
ANR	3426594	IdentifierDecl	srv_duration = 0		3426138	0					
ANR	3426595	IdentifierDeclType	int		3426138	0					
ANR	3426596	Identifier	srv_duration		3426138	1					
ANR	3426597	AssignmentExpression	srv_duration = 0		3426138	2		=			
ANR	3426598	Identifier	srv_duration		3426138	0					
ANR	3426599	PrimaryExpression	0		3426138	1					
ANR	3426600	IdentifierDeclStatement	char * dur = NULL ;	805:1:20863:20879	3426138	29	True				
ANR	3426601	IdentifierDecl	* dur = NULL		3426138	0					
ANR	3426602	IdentifierDeclType	char *		3426138	0					
ANR	3426603	Identifier	dur		3426138	1					
ANR	3426604	AssignmentExpression	* dur = NULL		3426138	2		=			
ANR	3426605	Identifier	NULL		3426138	0					
ANR	3426606	Identifier	NULL		3426138	1					
ANR	3426607	ExpressionStatement	"cli_ad . LookupString ( ATTR_SEC_SESSION_DURATION , & dur )"	806:1:20882:20934	3426138	30	True				
ANR	3426608	CallExpression	"cli_ad . LookupString ( ATTR_SEC_SESSION_DURATION , & dur )"		3426138	0					
ANR	3426609	Callee	cli_ad . LookupString		3426138	0					
ANR	3426610	MemberAccess	cli_ad . LookupString		3426138	0					
ANR	3426611	Identifier	cli_ad		3426138	0					
ANR	3426612	Identifier	LookupString		3426138	1					
ANR	3426613	ArgumentList	ATTR_SEC_SESSION_DURATION		3426138	1					
ANR	3426614	Argument	ATTR_SEC_SESSION_DURATION		3426138	0					
ANR	3426615	Identifier	ATTR_SEC_SESSION_DURATION		3426138	0					
ANR	3426616	Argument	& dur		3426138	1					
ANR	3426617	UnaryOperationExpression	& dur		3426138	0					
ANR	3426618	UnaryOperator	&		3426138	0					
ANR	3426619	Identifier	dur		3426138	1					
ANR	3426620	IfStatement	if ( dur )		3426138	31					
ANR	3426621	Condition	dur	807:5:20941:20943	3426138	0	True				
ANR	3426622	Identifier	dur		3426138	0					
ANR	3426623	CompoundStatement		109:10:3044:3044	3426138	1					
ANR	3426624	ExpressionStatement	cli_duration = atoi ( dur )	808:2:20950:20974	3426138	0	True				
ANR	3426625	AssignmentExpression	cli_duration = atoi ( dur )		3426138	0		=			
ANR	3426626	Identifier	cli_duration		3426138	0					
ANR	3426627	CallExpression	atoi ( dur )		3426138	1					
ANR	3426628	Callee	atoi		3426138	0					
ANR	3426629	Identifier	atoi		3426138	0					
ANR	3426630	ArgumentList	dur		3426138	1					
ANR	3426631	Argument	dur		3426138	0					
ANR	3426632	Identifier	dur		3426138	0					
ANR	3426633	ExpressionStatement	free ( dur )	809:2:20978:20987	3426138	1	True				
ANR	3426634	CallExpression	free ( dur )		3426138	0					
ANR	3426635	Callee	free		3426138	0					
ANR	3426636	Identifier	free		3426138	0					
ANR	3426637	ArgumentList	dur		3426138	1					
ANR	3426638	Argument	dur		3426138	0					
ANR	3426639	Identifier	dur		3426138	0					
ANR	3426640	ExpressionStatement	dur = NULL	812:1:20994:21004	3426138	32	True				
ANR	3426641	AssignmentExpression	dur = NULL		3426138	0		=			
ANR	3426642	Identifier	dur		3426138	0					
ANR	3426643	Identifier	NULL		3426138	1					
ANR	3426644	ExpressionStatement	"srv_ad . LookupString ( ATTR_SEC_SESSION_DURATION , & dur )"	813:1:21007:21059	3426138	33	True				
ANR	3426645	CallExpression	"srv_ad . LookupString ( ATTR_SEC_SESSION_DURATION , & dur )"		3426138	0					
ANR	3426646	Callee	srv_ad . LookupString		3426138	0					
ANR	3426647	MemberAccess	srv_ad . LookupString		3426138	0					
ANR	3426648	Identifier	srv_ad		3426138	0					
ANR	3426649	Identifier	LookupString		3426138	1					
ANR	3426650	ArgumentList	ATTR_SEC_SESSION_DURATION		3426138	1					
ANR	3426651	Argument	ATTR_SEC_SESSION_DURATION		3426138	0					
ANR	3426652	Identifier	ATTR_SEC_SESSION_DURATION		3426138	0					
ANR	3426653	Argument	& dur		3426138	1					
ANR	3426654	UnaryOperationExpression	& dur		3426138	0					
ANR	3426655	UnaryOperator	&		3426138	0					
ANR	3426656	Identifier	dur		3426138	1					
ANR	3426657	IfStatement	if ( dur )		3426138	34					
ANR	3426658	Condition	dur	814:5:21066:21068	3426138	0	True				
ANR	3426659	Identifier	dur		3426138	0					
ANR	3426660	CompoundStatement		116:10:3169:3169	3426138	1					
ANR	3426661	ExpressionStatement	srv_duration = atoi ( dur )	815:2:21075:21099	3426138	0	True				
ANR	3426662	AssignmentExpression	srv_duration = atoi ( dur )		3426138	0		=			
ANR	3426663	Identifier	srv_duration		3426138	0					
ANR	3426664	CallExpression	atoi ( dur )		3426138	1					
ANR	3426665	Callee	atoi		3426138	0					
ANR	3426666	Identifier	atoi		3426138	0					
ANR	3426667	ArgumentList	dur		3426138	1					
ANR	3426668	Argument	dur		3426138	0					
ANR	3426669	Identifier	dur		3426138	0					
ANR	3426670	ExpressionStatement	free ( dur )	816:2:21103:21112	3426138	1	True				
ANR	3426671	CallExpression	free ( dur )		3426138	0					
ANR	3426672	Callee	free		3426138	0					
ANR	3426673	Identifier	free		3426138	0					
ANR	3426674	ArgumentList	dur		3426138	1					
ANR	3426675	Argument	dur		3426138	0					
ANR	3426676	Identifier	dur		3426138	0					
ANR	3426677	ExpressionStatement	"sprintf ( buf , ""%s=\\""%i\\"""" , ATTR_SEC_SESSION_DURATION , ( cli_duration < srv_duration ) ? cli_duration : srv_duration )"	819:1:21119:21237	3426138	35	True				
ANR	3426678	CallExpression	"sprintf ( buf , ""%s=\\""%i\\"""" , ATTR_SEC_SESSION_DURATION , ( cli_duration < srv_duration ) ? cli_duration : srv_duration )"		3426138	0					
ANR	3426679	Callee	sprintf		3426138	0					
ANR	3426680	Identifier	sprintf		3426138	0					
ANR	3426681	ArgumentList	buf		3426138	1					
ANR	3426682	Argument	buf		3426138	0					
ANR	3426683	Identifier	buf		3426138	0					
ANR	3426684	Argument	"""%s=\\""%i\\"""""		3426138	1					
ANR	3426685	PrimaryExpression	"""%s=\\""%i\\"""""		3426138	0					
ANR	3426686	Argument	ATTR_SEC_SESSION_DURATION		3426138	2					
ANR	3426687	Identifier	ATTR_SEC_SESSION_DURATION		3426138	0					
ANR	3426688	Argument	( cli_duration < srv_duration ) ? cli_duration : srv_duration		3426138	3					
ANR	3426689	ConditionalExpression	( cli_duration < srv_duration ) ? cli_duration : srv_duration		3426138	0					
ANR	3426690	Condition	cli_duration < srv_duration		3426138	0					
ANR	3426691	RelationalExpression	cli_duration < srv_duration		3426138	0		<			
ANR	3426692	Identifier	cli_duration		3426138	0					
ANR	3426693	Identifier	srv_duration		3426138	1					
ANR	3426694	Identifier	cli_duration		3426138	1					
ANR	3426695	Identifier	srv_duration		3426138	2					
ANR	3426696	ExpressionStatement	action_ad -> Insert ( buf )	821:1:21240:21262	3426138	36	True				
ANR	3426697	CallExpression	action_ad -> Insert ( buf )		3426138	0					
ANR	3426698	Callee	action_ad -> Insert		3426138	0					
ANR	3426699	PtrMemberAccess	action_ad -> Insert		3426138	0					
ANR	3426700	Identifier	action_ad		3426138	0					
ANR	3426701	Identifier	Insert		3426138	1					
ANR	3426702	ArgumentList	buf		3426138	1					
ANR	3426703	Argument	buf		3426138	0					
ANR	3426704	Identifier	buf		3426138	0					
ANR	3426705	IdentifierDeclStatement	int cli_lease = 0 ;	829:1:21544:21561	3426138	37	True				
ANR	3426706	IdentifierDecl	cli_lease = 0		3426138	0					
ANR	3426707	IdentifierDeclType	int		3426138	0					
ANR	3426708	Identifier	cli_lease		3426138	1					
ANR	3426709	AssignmentExpression	cli_lease = 0		3426138	2		=			
ANR	3426710	Identifier	cli_lease		3426138	0					
ANR	3426711	PrimaryExpression	0		3426138	1					
ANR	3426712	IdentifierDeclStatement	int srv_lease = 0 ;	830:1:21564:21581	3426138	38	True				
ANR	3426713	IdentifierDecl	srv_lease = 0		3426138	0					
ANR	3426714	IdentifierDeclType	int		3426138	0					
ANR	3426715	Identifier	srv_lease		3426138	1					
ANR	3426716	AssignmentExpression	srv_lease = 0		3426138	2		=			
ANR	3426717	Identifier	srv_lease		3426138	0					
ANR	3426718	PrimaryExpression	0		3426138	1					
ANR	3426719	IfStatement	"if ( cli_ad . LookupInteger ( ATTR_SEC_SESSION_LEASE , cli_lease ) && srv_ad . LookupInteger ( ATTR_SEC_SESSION_LEASE , srv_lease ) )"		3426138	39					
ANR	3426720	Condition	"cli_ad . LookupInteger ( ATTR_SEC_SESSION_LEASE , cli_lease ) && srv_ad . LookupInteger ( ATTR_SEC_SESSION_LEASE , srv_lease )"	832:5:21589:21704	3426138	0	True				
ANR	3426721	AndExpression	"cli_ad . LookupInteger ( ATTR_SEC_SESSION_LEASE , cli_lease ) && srv_ad . LookupInteger ( ATTR_SEC_SESSION_LEASE , srv_lease )"		3426138	0		&&			
ANR	3426722	CallExpression	"cli_ad . LookupInteger ( ATTR_SEC_SESSION_LEASE , cli_lease )"		3426138	0					
ANR	3426723	Callee	cli_ad . LookupInteger		3426138	0					
ANR	3426724	MemberAccess	cli_ad . LookupInteger		3426138	0					
ANR	3426725	Identifier	cli_ad		3426138	0					
ANR	3426726	Identifier	LookupInteger		3426138	1					
ANR	3426727	ArgumentList	ATTR_SEC_SESSION_LEASE		3426138	1					
ANR	3426728	Argument	ATTR_SEC_SESSION_LEASE		3426138	0					
ANR	3426729	Identifier	ATTR_SEC_SESSION_LEASE		3426138	0					
ANR	3426730	Argument	cli_lease		3426138	1					
ANR	3426731	Identifier	cli_lease		3426138	0					
ANR	3426732	CallExpression	"srv_ad . LookupInteger ( ATTR_SEC_SESSION_LEASE , srv_lease )"		3426138	1					
ANR	3426733	Callee	srv_ad . LookupInteger		3426138	0					
ANR	3426734	MemberAccess	srv_ad . LookupInteger		3426138	0					
ANR	3426735	Identifier	srv_ad		3426138	0					
ANR	3426736	Identifier	LookupInteger		3426138	1					
ANR	3426737	ArgumentList	ATTR_SEC_SESSION_LEASE		3426138	1					
ANR	3426738	Argument	ATTR_SEC_SESSION_LEASE		3426138	0					
ANR	3426739	Identifier	ATTR_SEC_SESSION_LEASE		3426138	0					
ANR	3426740	Argument	srv_lease		3426138	1					
ANR	3426741	Identifier	srv_lease		3426138	0					
ANR	3426742	CompoundStatement		136:1:3807:3807	3426138	1					
ANR	3426743	IfStatement	if ( cli_lease == 0 )		3426138	0					
ANR	3426744	Condition	cli_lease == 0	835:6:21717:21730	3426138	0	True				
ANR	3426745	EqualityExpression	cli_lease == 0		3426138	0		==			
ANR	3426746	Identifier	cli_lease		3426138	0					
ANR	3426747	PrimaryExpression	0		3426138	1					
ANR	3426748	CompoundStatement		137:23:3832:3832	3426138	1					
ANR	3426749	ExpressionStatement	cli_lease = srv_lease	836:3:21739:21760	3426138	0	True				
ANR	3426750	AssignmentExpression	cli_lease = srv_lease		3426138	0		=			
ANR	3426751	Identifier	cli_lease		3426138	0					
ANR	3426752	Identifier	srv_lease		3426138	1					
ANR	3426753	IfStatement	if ( srv_lease == 0 )		3426138	1					
ANR	3426754	Condition	srv_lease == 0	838:6:21772:21785	3426138	0	True				
ANR	3426755	EqualityExpression	srv_lease == 0		3426138	0		==			
ANR	3426756	Identifier	srv_lease		3426138	0					
ANR	3426757	PrimaryExpression	0		3426138	1					
ANR	3426758	CompoundStatement		140:23:3887:3887	3426138	1					
ANR	3426759	ExpressionStatement	srv_lease = cli_lease	839:3:21794:21815	3426138	0	True				
ANR	3426760	AssignmentExpression	srv_lease = cli_lease		3426138	0		=			
ANR	3426761	Identifier	srv_lease		3426138	0					
ANR	3426762	Identifier	cli_lease		3426138	1					
ANR	3426763	ExpressionStatement	"action_ad -> Assign ( ATTR_SEC_SESSION_LEASE , cli_lease < srv_lease ? cli_lease : srv_lease )"	841:2:21823:21922	3426138	2	True				
ANR	3426764	CallExpression	"action_ad -> Assign ( ATTR_SEC_SESSION_LEASE , cli_lease < srv_lease ? cli_lease : srv_lease )"		3426138	0					
ANR	3426765	Callee	action_ad -> Assign		3426138	0					
ANR	3426766	PtrMemberAccess	action_ad -> Assign		3426138	0					
ANR	3426767	Identifier	action_ad		3426138	0					
ANR	3426768	Identifier	Assign		3426138	1					
ANR	3426769	ArgumentList	ATTR_SEC_SESSION_LEASE		3426138	1					
ANR	3426770	Argument	ATTR_SEC_SESSION_LEASE		3426138	0					
ANR	3426771	Identifier	ATTR_SEC_SESSION_LEASE		3426138	0					
ANR	3426772	Argument	cli_lease < srv_lease ? cli_lease : srv_lease		3426138	1					
ANR	3426773	ConditionalExpression	cli_lease < srv_lease ? cli_lease : srv_lease		3426138	0					
ANR	3426774	Condition	cli_lease < srv_lease		3426138	0					
ANR	3426775	RelationalExpression	cli_lease < srv_lease		3426138	0		<			
ANR	3426776	Identifier	cli_lease		3426138	0					
ANR	3426777	Identifier	srv_lease		3426138	1					
ANR	3426778	Identifier	cli_lease		3426138	1					
ANR	3426779	Identifier	srv_lease		3426138	2					
ANR	3426780	ExpressionStatement	"sprintf ( buf , ""%s=\\""YES\\"""" , ATTR_SEC_ENACT )"	846:1:21930:21973	3426138	40	True				
ANR	3426781	CallExpression	"sprintf ( buf , ""%s=\\""YES\\"""" , ATTR_SEC_ENACT )"		3426138	0					
ANR	3426782	Callee	sprintf		3426138	0					
ANR	3426783	Identifier	sprintf		3426138	0					
ANR	3426784	ArgumentList	buf		3426138	1					
ANR	3426785	Argument	buf		3426138	0					
ANR	3426786	Identifier	buf		3426138	0					
ANR	3426787	Argument	"""%s=\\""YES\\"""""		3426138	1					
ANR	3426788	PrimaryExpression	"""%s=\\""YES\\"""""		3426138	0					
ANR	3426789	Argument	ATTR_SEC_ENACT		3426138	2					
ANR	3426790	Identifier	ATTR_SEC_ENACT		3426138	0					
ANR	3426791	ExpressionStatement	action_ad -> Insert ( buf )	847:1:21976:21998	3426138	41	True				
ANR	3426792	CallExpression	action_ad -> Insert ( buf )		3426138	0					
ANR	3426793	Callee	action_ad -> Insert		3426138	0					
ANR	3426794	PtrMemberAccess	action_ad -> Insert		3426138	0					
ANR	3426795	Identifier	action_ad		3426138	0					
ANR	3426796	Identifier	Insert		3426138	1					
ANR	3426797	ArgumentList	buf		3426138	1					
ANR	3426798	Argument	buf		3426138	0					
ANR	3426799	Identifier	buf		3426138	0					
ANR	3426800	ReturnStatement	return action_ad ;	849:1:22002:22018	3426138	42	True				
ANR	3426801	Identifier	action_ad		3426138	0					
ANR	3426802	ReturnType	ClassAd *		3426138	1					
ANR	3426803	Identifier	SecMan :: ReconcileSecurityPolicyAds		3426138	2					
ANR	3426804	ParameterList	"ClassAd & cli_ad , ClassAd & srv_ad"		3426138	3					
ANR	3426805	Parameter	ClassAd & cli_ad	699:35:17867:17881	3426138	0	True				
ANR	3426806	ParameterType	ClassAd &		3426138	0					
ANR	3426807	Identifier	cli_ad		3426138	1					
ANR	3426808	Parameter	ClassAd & srv_ad	699:52:17884:17898	3426138	1	True				
ANR	3426809	ParameterType	ClassAd &		3426138	0					
ANR	3426810	Identifier	srv_ad		3426138	1					
ANR	3426811	CFGEntryNode	ENTRY		3426138		True				
ANR	3426812	CFGExitNode	EXIT		3426138		True				
ANR	3426813	Symbol	dur		3426138						
ANR	3426814	Symbol	ATTR_SEC_ENCRYPTION		3426138						
ANR	3426815	Symbol	ATTR_SEC_ENACT		3426138						
ANR	3426816	Symbol	cli_ad . LookupInteger		3426138						
ANR	3426817	Symbol	* encryption_action		3426138						
ANR	3426818	Symbol	cli_methods		3426138						
ANR	3426819	Symbol	cli_ad . LookupString		3426138						
ANR	3426820	Symbol	auth_required		3426138						
ANR	3426821	Symbol	srv_methods		3426138						
ANR	3426822	Symbol	the_methods . Value		3426138						
ANR	3426823	Symbol	srv_ad . LookupInteger		3426138						
ANR	3426824	Symbol	action_ad		3426138						
ANR	3426825	Symbol	the_methods		3426138						
ANR	3426826	Symbol	authentication_action		3426138						
ANR	3426827	Symbol	ATTR_SEC_AUTHENTICATION_METHODS		3426138						
ANR	3426828	Symbol	& dur		3426138						
ANR	3426829	Symbol	NULL		3426138						
ANR	3426830	Symbol	cli_duration		3426138						
ANR	3426831	Symbol	integrity_action		3426138						
ANR	3426832	Symbol	SEC_FEAT_ACT_FAIL		3426138						
ANR	3426833	Symbol	ATTR_SEC_SESSION_LEASE		3426138						
ANR	3426834	Symbol	cli_ad		3426138						
ANR	3426835	Symbol	& cli_methods		3426138						
ANR	3426836	Symbol	encryption_action		3426138						
ANR	3426837	Symbol	ReconcileMethodLists		3426138						
ANR	3426838	Symbol	ATTR_SEC_AUTHENTICATION_METHODS_LIST		3426138						
ANR	3426839	Symbol	ATTR_SEC_AUTHENTICATION		3426138						
ANR	3426840	Symbol	tmpmethodlist . next		3426138						
ANR	3426841	Symbol	srv_ad		3426138						
ANR	3426842	Symbol	& auth_required		3426138						
ANR	3426843	Symbol	tmpmethodlist		3426138						
ANR	3426844	Symbol	& srv_methods		3426138						
ANR	3426845	Symbol	ATTR_SEC_AUTH_REQUIRED		3426138						
ANR	3426846	Symbol	cli_lease		3426138						
ANR	3426847	Symbol	ATTR_SEC_CRYPTO_METHODS		3426138						
ANR	3426848	Symbol	atoi		3426138						
ANR	3426849	Symbol	ATTR_SEC_SESSION_DURATION		3426138						
ANR	3426850	Symbol	false		3426138						
ANR	3426851	Symbol	* integrity_action		3426138						
ANR	3426852	Symbol	SecMan :: sec_feat_act_rev		3426138						
ANR	3426853	Symbol	* SecMan :: sec_feat_act_rev		3426138						
ANR	3426854	Symbol	buf		3426138						
ANR	3426855	Symbol	srv_lease		3426138						
ANR	3426856	Symbol	srv_duration		3426138						
ANR	3426857	Symbol	srv_ad . LookupString		3426138						
ANR	3426858	Symbol	SecMan :: SEC_FEAT_ACT_YES		3426138						
ANR	3426859	Symbol	ATTR_SEC_INTEGRITY		3426138						
ANR	3426860	Symbol	* authentication_action		3426138						
ANR	3426861	Symbol	first		3426138						
ANR	3426862	Symbol	ReconcileSecurityAttribute		3426138						
ANR	3426863	ClassDef	SecManStartCommand	853:0:22024:27651							
ANR	3426864	Function	SecManStartCommand	855:1:22095:23456							
ANR	3426865	FunctionDef	"SecManStartCommand (int cmd , Sock * sock , bool raw_protocol , CondorError * errstack , int subcmd , StartCommandCallbackType * callback_fn , void * misc_data , bool nonblocking , char const * cmd_description , char const * sec_session_id_hint , SecMan * sec_man)"		3426864	0					
ANR	3426866	CompoundStatement		871:1:22629:23456	3426864	0					
ANR	3426867	ExpressionStatement	"m_sec_session_id_hint = sec_session_id_hint ? sec_session_id_hint : """""	872:2:22633:22703	3426864	0	True				
ANR	3426868	AssignmentExpression	"m_sec_session_id_hint = sec_session_id_hint ? sec_session_id_hint : """""		3426864	0		=			
ANR	3426869	Identifier	m_sec_session_id_hint		3426864	0					
ANR	3426870	ConditionalExpression	"sec_session_id_hint ? sec_session_id_hint : """""		3426864	1					
ANR	3426871	Condition	sec_session_id_hint		3426864	0					
ANR	3426872	Identifier	sec_session_id_hint		3426864	0					
ANR	3426873	Identifier	sec_session_id_hint		3426864	1					
ANR	3426874	PrimaryExpression	""""""		3426864	2					
ANR	3426875	IfStatement	if ( m_sec_session_id_hint == USE_TMP_SEC_SESSION )		3426864	1					
ANR	3426876	Condition	m_sec_session_id_hint == USE_TMP_SEC_SESSION	873:6:22711:22754	3426864	0	True				
ANR	3426877	EqualityExpression	m_sec_session_id_hint == USE_TMP_SEC_SESSION		3426864	0		==			
ANR	3426878	Identifier	m_sec_session_id_hint		3426864	0					
ANR	3426879	Identifier	USE_TMP_SEC_SESSION		3426864	1					
ANR	3426880	CompoundStatement		3:53:128:128	3426864	1					
ANR	3426881	ExpressionStatement	m_use_tmp_sec_session = true	874:3:22763:22791	3426864	0	True				
ANR	3426882	AssignmentExpression	m_use_tmp_sec_session = true		3426864	0		=			
ANR	3426883	Identifier	m_use_tmp_sec_session		3426864	0					
ANR	3426884	Identifier	true		3426864	1					
ANR	3426885	ExpressionStatement	m_already_tried_TCP_auth = false	876:2:22799:22831	3426864	2	True				
ANR	3426886	AssignmentExpression	m_already_tried_TCP_auth = false		3426864	0		=			
ANR	3426887	Identifier	m_already_tried_TCP_auth		3426864	0					
ANR	3426888	Identifier	false		3426864	1					
ANR	3426889	IfStatement	if ( ! m_errstack )		3426864	3					
ANR	3426890	Condition	! m_errstack	877:6:22839:22849	3426864	0	True				
ANR	3426891	UnaryOperationExpression	! m_errstack		3426864	0					
ANR	3426892	UnaryOperator	!		3426864	0					
ANR	3426893	Identifier	m_errstack		3426864	1					
ANR	3426894	CompoundStatement		7:20:223:223	3426864	1					
ANR	3426895	ExpressionStatement	m_errstack = & m_internal_errstack	878:3:22858:22891	3426864	0	True				
ANR	3426896	AssignmentExpression	m_errstack = & m_internal_errstack		3426864	0		=			
ANR	3426897	Identifier	m_errstack		3426864	0					
ANR	3426898	UnaryOperationExpression	& m_internal_errstack		3426864	1					
ANR	3426899	UnaryOperator	&		3426864	0					
ANR	3426900	Identifier	m_internal_errstack		3426864	1					
ANR	3426901	ExpressionStatement	m_is_tcp = ( m_sock -> type ( ) == Stream :: reli_sock )	880:2:22899:22947	3426864	4	True				
ANR	3426902	AssignmentExpression	m_is_tcp = ( m_sock -> type ( ) == Stream :: reli_sock )		3426864	0		=			
ANR	3426903	Identifier	m_is_tcp		3426864	0					
ANR	3426904	EqualityExpression	m_sock -> type ( ) == Stream :: reli_sock		3426864	1		==			
ANR	3426905	CallExpression	m_sock -> type ( )		3426864	0					
ANR	3426906	Callee	m_sock -> type		3426864	0					
ANR	3426907	PtrMemberAccess	m_sock -> type		3426864	0					
ANR	3426908	Identifier	m_sock		3426864	0					
ANR	3426909	Identifier	type		3426864	1					
ANR	3426910	ArgumentList			3426864	1					
ANR	3426911	Identifier	Stream :: reli_sock		3426864	1					
ANR	3426912	ExpressionStatement	m_have_session = false	881:2:22951:22973	3426864	5	True				
ANR	3426913	AssignmentExpression	m_have_session = false		3426864	0		=			
ANR	3426914	Identifier	m_have_session		3426864	0					
ANR	3426915	Identifier	false		3426864	1					
ANR	3426916	ExpressionStatement	m_new_session = false	882:2:22977:22998	3426864	6	True				
ANR	3426917	AssignmentExpression	m_new_session = false		3426864	0		=			
ANR	3426918	Identifier	m_new_session		3426864	0					
ANR	3426919	Identifier	false		3426864	1					
ANR	3426920	ExpressionStatement	m_state = SendAuthInfo	883:2:23002:23024	3426864	7	True				
ANR	3426921	AssignmentExpression	m_state = SendAuthInfo		3426864	0		=			
ANR	3426922	Identifier	m_state		3426864	0					
ANR	3426923	Identifier	SendAuthInfo		3426864	1					
ANR	3426924	ExpressionStatement	m_enc_key = NULL	884:2:23028:23044	3426864	8	True				
ANR	3426925	AssignmentExpression	m_enc_key = NULL		3426864	0		=			
ANR	3426926	Identifier	m_enc_key		3426864	0					
ANR	3426927	Identifier	NULL		3426864	1					
ANR	3426928	ExpressionStatement	m_private_key = NULL	885:2:23048:23068	3426864	9	True				
ANR	3426929	AssignmentExpression	m_private_key = NULL		3426864	0		=			
ANR	3426930	Identifier	m_private_key		3426864	0					
ANR	3426931	Identifier	NULL		3426864	1					
ANR	3426932	IfStatement	if ( cmd_description )		3426864	10					
ANR	3426933	Condition	cmd_description	886:5:23075:23089	3426864	0	True				
ANR	3426934	Identifier	cmd_description		3426864	0					
ANR	3426935	CompoundStatement		16:22:462:462	3426864	1					
ANR	3426936	ExpressionStatement	m_cmd_description = cmd_description	887:3:23097:23132	3426864	0	True				
ANR	3426937	AssignmentExpression	m_cmd_description = cmd_description		3426864	0		=			
ANR	3426938	Identifier	m_cmd_description		3426864	0					
ANR	3426939	Identifier	cmd_description		3426864	1					
ANR	3426940	ElseStatement	else		3426864	0					
ANR	3426941	CompoundStatement		19:7:515:515	3426864	0					
ANR	3426942	ExpressionStatement	cmd_description = getCommandString ( m_cmd )	890:3:23150:23191	3426864	0	True				
ANR	3426943	AssignmentExpression	cmd_description = getCommandString ( m_cmd )		3426864	0		=			
ANR	3426944	Identifier	cmd_description		3426864	0					
ANR	3426945	CallExpression	getCommandString ( m_cmd )		3426864	1					
ANR	3426946	Callee	getCommandString		3426864	0					
ANR	3426947	Identifier	getCommandString		3426864	0					
ANR	3426948	ArgumentList	m_cmd		3426864	1					
ANR	3426949	Argument	m_cmd		3426864	0					
ANR	3426950	Identifier	m_cmd		3426864	0					
ANR	3426951	IfStatement	if ( cmd_description )		3426864	1					
ANR	3426952	Condition	cmd_description	891:6:23199:23213	3426864	0	True				
ANR	3426953	Identifier	cmd_description		3426864	0					
ANR	3426954	CompoundStatement		21:23:586:586	3426864	1					
ANR	3426955	ExpressionStatement	m_cmd_description = cmd_description	892:4:23222:23257	3426864	0	True				
ANR	3426956	AssignmentExpression	m_cmd_description = cmd_description		3426864	0		=			
ANR	3426957	Identifier	m_cmd_description		3426864	0					
ANR	3426958	Identifier	cmd_description		3426864	1					
ANR	3426959	ElseStatement	else		3426864	0					
ANR	3426960	CompoundStatement		24:8:642:642	3426864	0					
ANR	3426961	ExpressionStatement	"m_cmd_description . sprintf ( ""command %d"" , m_cmd )"	895:4:23278:23323	3426864	0	True				
ANR	3426962	CallExpression	"m_cmd_description . sprintf ( ""command %d"" , m_cmd )"		3426864	0					
ANR	3426963	Callee	m_cmd_description . sprintf		3426864	0					
ANR	3426964	MemberAccess	m_cmd_description . sprintf		3426864	0					
ANR	3426965	Identifier	m_cmd_description		3426864	0					
ANR	3426966	Identifier	sprintf		3426864	1					
ANR	3426967	ArgumentList	"""command %d"""		3426864	1					
ANR	3426968	Argument	"""command %d"""		3426864	0					
ANR	3426969	PrimaryExpression	"""command %d"""		3426864	0					
ANR	3426970	Argument	m_cmd		3426864	1					
ANR	3426971	Identifier	m_cmd		3426864	0					
ANR	3426972	ExpressionStatement	m_already_logged_startcommand = false	898:2:23336:23373	3426864	11	True				
ANR	3426973	AssignmentExpression	m_already_logged_startcommand = false		3426864	0		=			
ANR	3426974	Identifier	m_already_logged_startcommand		3426864	0					
ANR	3426975	Identifier	false		3426864	1					
ANR	3426976	ExpressionStatement	m_negotiation = SecMan :: SEC_REQ_UNDEFINED	899:2:23377:23418	3426864	12	True				
ANR	3426977	AssignmentExpression	m_negotiation = SecMan :: SEC_REQ_UNDEFINED		3426864	0		=			
ANR	3426978	Identifier	m_negotiation		3426864	0					
ANR	3426979	Identifier	SecMan :: SEC_REQ_UNDEFINED		3426864	1					
ANR	3426980	ExpressionStatement	m_sock_had_no_deadline = false	901:2:23423:23453	3426864	13	True				
ANR	3426981	AssignmentExpression	m_sock_had_no_deadline = false		3426864	0		=			
ANR	3426982	Identifier	m_sock_had_no_deadline		3426864	0					
ANR	3426983	Identifier	false		3426864	1					
ANR	3426984	Identifier	SecManStartCommand		3426864	1					
ANR	3426985	ParameterList	"int cmd , Sock * sock , bool raw_protocol , CondorError * errstack , int subcmd , StartCommandCallbackType * callback_fn , void * misc_data , bool nonblocking , char const * cmd_description , char const * sec_session_id_hint , SecMan * sec_man"		3426864	2					
ANR	3426986	Parameter	int cmd	856:2:22118:22124	3426864	0	True				
ANR	3426987	ParameterType	int		3426864	0					
ANR	3426988	Identifier	cmd		3426864	1					
ANR	3426989	Parameter	Sock * sock	856:10:22126:22135	3426864	1	True				
ANR	3426990	ParameterType	Sock *		3426864	0					
ANR	3426991	Identifier	sock		3426864	1					
ANR	3426992	Parameter	bool raw_protocol	856:21:22137:22153	3426864	2	True				
ANR	3426993	ParameterType	bool		3426864	0					
ANR	3426994	Identifier	raw_protocol		3426864	1					
ANR	3426995	Parameter	CondorError * errstack	857:2:22158:22178	3426864	3	True				
ANR	3426996	ParameterType	CondorError *		3426864	0					
ANR	3426997	Identifier	errstack		3426864	1					
ANR	3426998	Parameter	int subcmd	857:24:22180:22189	3426864	4	True				
ANR	3426999	ParameterType	int		3426864	0					
ANR	3427000	Identifier	subcmd		3426864	1					
ANR	3427001	Parameter	StartCommandCallbackType * callback_fn	857:35:22191:22227	3426864	5	True				
ANR	3427002	ParameterType	StartCommandCallbackType *		3426864	0					
ANR	3427003	Identifier	callback_fn		3426864	1					
ANR	3427004	Parameter	void * misc_data	858:2:22232:22246	3426864	6	True				
ANR	3427005	ParameterType	void *		3426864	0					
ANR	3427006	Identifier	misc_data		3426864	1					
ANR	3427007	Parameter	bool nonblocking	858:18:22248:22263	3426864	7	True				
ANR	3427008	ParameterType	bool		3426864	0					
ANR	3427009	Identifier	nonblocking		3426864	1					
ANR	3427010	Parameter	char const * cmd_description	858:35:22265:22291	3426864	8	True				
ANR	3427011	ParameterType	char const *		3426864	0					
ANR	3427012	Identifier	cmd_description		3426864	1					
ANR	3427013	Parameter	char const * sec_session_id_hint	858:63:22293:22323	3426864	9	True				
ANR	3427014	ParameterType	char const *		3426864	0					
ANR	3427015	Identifier	sec_session_id_hint		3426864	1					
ANR	3427016	Parameter	SecMan * sec_man	858:95:22325:22339	3426864	10	True				
ANR	3427017	ParameterType	SecMan *		3426864	0					
ANR	3427018	Identifier	sec_man		3426864	1					
ANR	3427019	CFGEntryNode	ENTRY		3426864		True				
ANR	3427020	CFGExitNode	EXIT		3426864		True				
ANR	3427021	Symbol	m_new_session		3426864						
ANR	3427022	Symbol	SecMan :: SEC_REQ_UNDEFINED		3426864						
ANR	3427023	Symbol	m_cmd		3426864						
ANR	3427024	Symbol	sec_man		3426864						
ANR	3427025	Symbol	m_have_session		3426864						
ANR	3427026	Symbol	m_errstack		3426864						
ANR	3427027	Symbol	m_state		3426864						
ANR	3427028	Symbol	sec_session_id_hint		3426864						
ANR	3427029	Symbol	m_use_tmp_sec_session		3426864						
ANR	3427030	Symbol	m_sock -> type		3426864						
ANR	3427031	Symbol	getCommandString		3426864						
ANR	3427032	Symbol	m_sock_had_no_deadline		3426864						
ANR	3427033	Symbol	raw_protocol		3426864						
ANR	3427034	Symbol	misc_data		3426864						
ANR	3427035	Symbol	Stream :: reli_sock		3426864						
ANR	3427036	Symbol	m_is_tcp		3426864						
ANR	3427037	Symbol	NULL		3426864						
ANR	3427038	Symbol	m_negotiation		3426864						
ANR	3427039	Symbol	nonblocking		3426864						
ANR	3427040	Symbol	* m_sock		3426864						
ANR	3427041	Symbol	subcmd		3426864						
ANR	3427042	Symbol	m_sock		3426864						
ANR	3427043	Symbol	false		3426864						
ANR	3427044	Symbol	USE_TMP_SEC_SESSION		3426864						
ANR	3427045	Symbol	m_cmd_description		3426864						
ANR	3427046	Symbol	m_already_logged_startcommand		3426864						
ANR	3427047	Symbol	m_sec_session_id_hint		3426864						
ANR	3427048	Symbol	cmd_description		3426864						
ANR	3427049	Symbol	m_private_key		3426864						
ANR	3427050	Symbol	SendAuthInfo		3426864						
ANR	3427051	Symbol	m_already_tried_TCP_auth		3426864						
ANR	3427052	Symbol	sock		3426864						
ANR	3427053	Symbol	callback_fn		3426864						
ANR	3427054	Symbol	errstack		3426864						
ANR	3427055	Symbol	& m_internal_errstack		3426864						
ANR	3427056	Symbol	m_enc_key		3426864						
ANR	3427057	Symbol	true		3426864						
ANR	3427058	Symbol	cmd		3426864						
ANR	3427059	Function	~SecManStartCommand	904:1:23460:23809							
ANR	3427060	FunctionDef	~SecManStartCommand ()		3427059	1					
ANR	3427061	CompoundStatement		904:23:23482:23809	3427059	0					
ANR	3427062	IfStatement	if ( m_pending_socket_registered )		3427059	0					
ANR	3427063	Condition	m_pending_socket_registered	905:6:23490:23516	3427059	0	True				
ANR	3427064	Identifier	m_pending_socket_registered		3427059	0					
ANR	3427065	CompoundStatement		2:36:37:37	3427059	1					
ANR	3427066	ExpressionStatement	m_pending_socket_registered = false	906:3:23525:23560	3427059	0	True				
ANR	3427067	AssignmentExpression	m_pending_socket_registered = false		3427059	0		=			
ANR	3427068	Identifier	m_pending_socket_registered		3427059	0					
ANR	3427069	Identifier	false		3427059	1					
ANR	3427070	ExpressionStatement	daemonCoreSockAdapter . decrementPendingSockets ( )	907:3:23565:23612	3427059	1	True				
ANR	3427071	CallExpression	daemonCoreSockAdapter . decrementPendingSockets ( )		3427059	0					
ANR	3427072	Callee	daemonCoreSockAdapter . decrementPendingSockets		3427059	0					
ANR	3427073	MemberAccess	daemonCoreSockAdapter . decrementPendingSockets		3427059	0					
ANR	3427074	Identifier	daemonCoreSockAdapter		3427059	0					
ANR	3427075	Identifier	decrementPendingSockets		3427059	1					
ANR	3427076	ArgumentList			3427059	1					
ANR	3427077	IfStatement	if ( m_private_key )		3427059	1					
ANR	3427078	Condition	m_private_key	909:6:23624:23636	3427059	0	True				
ANR	3427079	Identifier	m_private_key		3427059	0					
ANR	3427080	CompoundStatement		6:22:157:157	3427059	1					
ANR	3427081	Statement	delete	910:3:23645:23650	3427059	0	True				
ANR	3427082	ExpressionStatement	m_private_key	910:10:23652:23665	3427059	1	True				
ANR	3427083	Identifier	m_private_key		3427059	0					
ANR	3427084	ExpressionStatement	m_private_key = NULL	911:3:23670:23690	3427059	2	True				
ANR	3427085	AssignmentExpression	m_private_key = NULL		3427059	0		=			
ANR	3427086	Identifier	m_private_key		3427059	0					
ANR	3427087	Identifier	NULL		3427059	1					
ANR	3427088	ExpressionStatement	ASSERT ( ! m_callback_fn )	915:2:23782:23806	3427059	2	True				
ANR	3427089	CallExpression	ASSERT ( ! m_callback_fn )		3427059	0					
ANR	3427090	Callee	ASSERT		3427059	0					
ANR	3427091	Identifier	ASSERT		3427059	0					
ANR	3427092	ArgumentList	! m_callback_fn		3427059	1					
ANR	3427093	Argument	! m_callback_fn		3427059	0					
ANR	3427094	UnaryOperationExpression	! m_callback_fn		3427059	0					
ANR	3427095	UnaryOperator	!		3427059	0					
ANR	3427096	Identifier	m_callback_fn		3427059	1					
ANR	3427097	Identifier	~SecManStartCommand		3427059	1					
ANR	3427098	ParameterList			3427059	2					
ANR	3427099	CFGEntryNode	ENTRY		3427059		True				
ANR	3427100	CFGExitNode	EXIT		3427059		True				
ANR	3427101	Symbol	daemonCoreSockAdapter		3427059						
ANR	3427102	Symbol	NULL		3427059						
ANR	3427103	Symbol	m_pending_socket_registered		3427059						
ANR	3427104	Symbol	m_callback_fn		3427059						
ANR	3427105	Symbol	false		3427059						
ANR	3427106	Symbol	m_private_key		3427059						
ANR	3427107	DeclStmt									
ANR	3427108	Decl							StartCommandResult	StartCommandResult ( )	startCommand
ANR	3427109	Function	incrementPendingSockets	924:1:24087:24476							
ANR	3427110	FunctionDef	incrementPendingSockets ()		3427109	3					
ANR	3427111	CompoundStatement		924:32:24118:24476	3427109	0					
ANR	3427112	IfStatement	if ( ! m_pending_socket_registered )		3427109	0					
ANR	3427113	Condition	! m_pending_socket_registered	929:6:24347:24374	3427109	0	True				
ANR	3427114	UnaryOperationExpression	! m_pending_socket_registered		3427109	0					
ANR	3427115	UnaryOperator	!		3427109	0					
ANR	3427116	Identifier	m_pending_socket_registered		3427109	1					
ANR	3427117	CompoundStatement		6:37:259:259	3427109	1					
ANR	3427118	ExpressionStatement	m_pending_socket_registered = true	930:3:24383:24417	3427109	0	True				
ANR	3427119	AssignmentExpression	m_pending_socket_registered = true		3427109	0		=			
ANR	3427120	Identifier	m_pending_socket_registered		3427109	0					
ANR	3427121	Identifier	true		3427109	1					
ANR	3427122	ExpressionStatement	daemonCoreSockAdapter . incrementPendingSockets ( )	931:3:24422:24469	3427109	1	True				
ANR	3427123	CallExpression	daemonCoreSockAdapter . incrementPendingSockets ( )		3427109	0					
ANR	3427124	Callee	daemonCoreSockAdapter . incrementPendingSockets		3427109	0					
ANR	3427125	MemberAccess	daemonCoreSockAdapter . incrementPendingSockets		3427109	0					
ANR	3427126	Identifier	daemonCoreSockAdapter		3427109	0					
ANR	3427127	Identifier	incrementPendingSockets		3427109	1					
ANR	3427128	ArgumentList			3427109	1					
ANR	3427129	ReturnType	void		3427109	1					
ANR	3427130	Identifier	incrementPendingSockets		3427109	2					
ANR	3427131	ParameterList			3427109	3					
ANR	3427132	CFGEntryNode	ENTRY		3427109		True				
ANR	3427133	CFGExitNode	EXIT		3427109		True				
ANR	3427134	Symbol	daemonCoreSockAdapter		3427109						
ANR	3427135	Symbol	m_pending_socket_registered		3427109						
ANR	3427136	Symbol	true		3427109						
ANR	3427137	Function	operator ==	935:1:24480:24713							
ANR	3427138	FunctionDef	operator == (const SecManStartCommand & other)		3427137	4					
ANR	3427139	CompoundStatement		935:50:24529:24713	3427137	0					
ANR	3427140	ReturnStatement	return this == & other ;	939:2:24689:24710	3427137	0	True				
ANR	3427141	EqualityExpression	this == & other		3427137	0		==			
ANR	3427142	Identifier	this		3427137	0					
ANR	3427143	UnaryOperationExpression	& other		3427137	1					
ANR	3427144	UnaryOperator	&		3427137	0					
ANR	3427145	Identifier	other		3427137	1					
ANR	3427146	ReturnType	int		3427137	1					
ANR	3427147	Identifier	operator ==		3427137	2					
ANR	3427148	ParameterList	const SecManStartCommand & other		3427137	3					
ANR	3427149	Parameter	const SecManStartCommand & other	935:17:24496:24526	3427137	0	True				
ANR	3427150	ParameterType	const SecManStartCommand &		3427137	0					
ANR	3427151	Identifier	other		3427137	1					
ANR	3427152	CFGEntryNode	ENTRY		3427137		True				
ANR	3427153	CFGExitNode	EXIT		3427137		True				
ANR	3427154	Symbol	other		3427137						
ANR	3427155	Symbol	this		3427137						
ANR	3427156	Symbol	& other		3427137						
ANR	3427157	DeclStmt									
ANR	3427158	Decl							int	int	m_cmd
ANR	3427159	DeclStmt									
ANR	3427160	Decl							int	int	m_subcmd
ANR	3427161	DeclStmt									
ANR	3427162	Decl							MyString	MyString	m_cmd_description
ANR	3427163	DeclStmt									
ANR	3427164	Decl							Sock	Sock *	m_sock
ANR	3427165	DeclStmt									
ANR	3427166	Decl							bool	bool	m_raw_protocol
ANR	3427167	DeclStmt									
ANR	3427168	Decl							CondorError	CondorError *	m_errstack
ANR	3427169	DeclStmt									
ANR	3427170	Decl							CondorError	CondorError	m_internal_errstack
ANR	3427171	DeclStmt									
ANR	3427172	Decl							StartCommandCallbackType	StartCommandCallbackType *	m_callback_fn
ANR	3427173	DeclStmt									
ANR	3427174	Decl							void	void *	m_misc_data
ANR	3427175	DeclStmt									
ANR	3427176	Decl							bool	bool	m_nonblocking
ANR	3427177	DeclStmt									
ANR	3427178	Decl							bool	bool	m_pending_socket_registered
ANR	3427179	DeclStmt									
ANR	3427180	Decl							SecMan	SecMan	m_sec_man
ANR	3427181	DeclStmt									
ANR	3427182	Decl							MyString	MyString	m_session_key
ANR	3427183	DeclStmt									
ANR	3427184	Decl							bool	bool	m_already_tried_TCP_auth
ANR	3427185	DeclStmt									
ANR	3427186	Decl							SimpleList < classy_counted_ptr < SecManStartCommand > >	SimpleList < classy_counted_ptr < SecManStartCommand > >	m_waiting_for_tcp_auth
ANR	3427187	DeclStmt									
ANR	3427188	Decl							classy_counted_ptr < SecManStartCommand >	classy_counted_ptr < SecManStartCommand >	m_tcp_auth_command
ANR	3427189	DeclStmt									
ANR	3427190	Decl							bool	bool	m_is_tcp
ANR	3427191	DeclStmt									
ANR	3427192	Decl							bool	bool	m_have_session
ANR	3427193	DeclStmt									
ANR	3427194	Decl							bool	bool	m_new_session
ANR	3427195	DeclStmt									
ANR	3427196	Decl							bool	bool	m_use_tmp_sec_session
ANR	3427197	DeclStmt									
ANR	3427198	Decl							bool	bool	m_already_logged_startcommand
ANR	3427199	DeclStmt									
ANR	3427200	Decl							bool	bool	m_sock_had_no_deadline
ANR	3427201	DeclStmt									
ANR	3427202	Decl							ClassAd	ClassAd	m_auth_info
ANR	3427203	DeclStmt									
ANR	3427204	Decl							SecMan :: sec_req	SecMan :: sec_req	m_negotiation
ANR	3427205	DeclStmt									
ANR	3427206	Decl							MyString	MyString	m_remote_version
ANR	3427207	DeclStmt									
ANR	3427208	Decl							KeyCacheEntry	KeyCacheEntry *	m_enc_key
ANR	3427209	DeclStmt									
ANR	3427210	Decl							KeyInfo	KeyInfo *	m_private_key
ANR	3427211	DeclStmt									
ANR	3427212	Decl							MyString	MyString	m_sec_session_id_hint
ANR	3427213	ClassDef	StartCommandState	976:1:25788:25897							
ANR	3427214	DeclStmt									
ANR	3427215	Decl							StartCommandState	StartCommandState	m_state
ANR	3427216	DeclStmt									
ANR	3427217	Decl							StartCommandResult	StartCommandResult ( StartCommandResult result )	doCallback
ANR	3427218	DeclStmt									
ANR	3427219	Decl							StartCommandResult	StartCommandResult ( )	startCommand_inner
ANR	3427220	DeclStmt									
ANR	3427221	Decl							StartCommandResult	StartCommandResult ( )	DoTCPAuth_inner
ANR	3427222	DeclStmt									
ANR	3427223	Decl							StartCommandResult	StartCommandResult ( )	sendAuthInfo_inner
ANR	3427224	DeclStmt									
ANR	3427225	Decl							StartCommandResult	StartCommandResult ( )	receiveAuthInfo_inner
ANR	3427226	DeclStmt									
ANR	3427227	Decl							StartCommandResult	StartCommandResult ( )	authenticate_inner
ANR	3427228	DeclStmt									
ANR	3427229	Decl							StartCommandResult	StartCommandResult ( )	receivePostAuthInfo_inner
ANR	3427230	DeclStmt									
ANR	3427231	Decl							void	"void ( bool success , Sock * sock , CondorError * errstack , void * misc_data )"	TCPAuthCallback
ANR	3427232	DeclStmt									
ANR	3427233	Decl							StartCommandResult	"StartCommandResult ( bool auth_succeeded , Sock * tcp_auth_sock )"	TCPAuthCallback_inner
ANR	3427234	DeclStmt									
ANR	3427235	Decl							void	void ( bool auth_succeeded )	ResumeAfterTCPAuth
ANR	3427236	DeclStmt									
ANR	3427237	Decl							StartCommandResult	StartCommandResult ( )	WaitForSocketCallback
ANR	3427238	DeclStmt									
ANR	3427239	Decl							int	int ( Stream * stream )	SocketCallback
ANR	3427240	Function	SecMan :: startCommand	1025:0:27655:28439							
ANR	3427241	FunctionDef	"SecMan :: startCommand (int cmd , Sock * sock , bool raw_protocol , CondorError * errstack , int subcmd , StartCommandCallbackType * callback_fn , void * misc_data , bool nonblocking , char const * cmd_description , char const * sec_session_id_hint)"		3427240	0					
ANR	3427242	CompoundStatement		1027:0:27905:28439	3427240	0					
ANR	3427243	IdentifierDeclStatement	"classy_counted_ptr < SecManStartCommand > sc = new SecManStartCommand ( cmd , sock , raw_protocol , errstack , subcmd , callback_fn , misc_data , nonblocking , cmd_description , sec_session_id_hint , this ) ;"	1035:1:28208:28388	3427240	0	True				
ANR	3427244	IdentifierDecl	"sc = new SecManStartCommand ( cmd , sock , raw_protocol , errstack , subcmd , callback_fn , misc_data , nonblocking , cmd_description , sec_session_id_hint , this )"		3427240	0					
ANR	3427245	IdentifierDeclType	classy_counted_ptr < SecManStartCommand >		3427240	0					
ANR	3427246	Identifier	sc		3427240	1					
ANR	3427247	AssignmentExpression	"sc = new SecManStartCommand ( cmd , sock , raw_protocol , errstack , subcmd , callback_fn , misc_data , nonblocking , cmd_description , sec_session_id_hint , this )"		3427240	2		=			
ANR	3427248	Identifier	sc		3427240	0					
ANR	3427249	Expression	"cmd , sock , raw_protocol , errstack , subcmd , callback_fn , misc_data , nonblocking , cmd_description , sec_session_id_hint , this"		3427240	1					
ANR	3427250	Identifier	cmd		3427240	0					
ANR	3427251	Expression	"sock , raw_protocol , errstack , subcmd , callback_fn , misc_data , nonblocking , cmd_description , sec_session_id_hint , this"		3427240	1					
ANR	3427252	Identifier	sock		3427240	0					
ANR	3427253	Expression	"raw_protocol , errstack , subcmd , callback_fn , misc_data , nonblocking , cmd_description , sec_session_id_hint , this"		3427240	1					
ANR	3427254	Identifier	raw_protocol		3427240	0					
ANR	3427255	Expression	"errstack , subcmd , callback_fn , misc_data , nonblocking , cmd_description , sec_session_id_hint , this"		3427240	1					
ANR	3427256	Identifier	errstack		3427240	0					
ANR	3427257	Expression	"subcmd , callback_fn , misc_data , nonblocking , cmd_description , sec_session_id_hint , this"		3427240	1					
ANR	3427258	Identifier	subcmd		3427240	0					
ANR	3427259	Expression	"callback_fn , misc_data , nonblocking , cmd_description , sec_session_id_hint , this"		3427240	1					
ANR	3427260	Identifier	callback_fn		3427240	0					
ANR	3427261	Expression	"misc_data , nonblocking , cmd_description , sec_session_id_hint , this"		3427240	1					
ANR	3427262	Identifier	misc_data		3427240	0					
ANR	3427263	Expression	"nonblocking , cmd_description , sec_session_id_hint , this"		3427240	1					
ANR	3427264	Identifier	nonblocking		3427240	0					
ANR	3427265	Expression	"cmd_description , sec_session_id_hint , this"		3427240	1					
ANR	3427266	Identifier	cmd_description		3427240	0					
ANR	3427267	Expression	"sec_session_id_hint , this"		3427240	1					
ANR	3427268	Identifier	sec_session_id_hint		3427240	0					
ANR	3427269	Identifier	this		3427240	1					
ANR	3427270	ExpressionStatement	ASSERT ( sc . get ( ) )	1037:1:28392:28408	3427240	1	True				
ANR	3427271	CallExpression	ASSERT ( sc . get ( ) )		3427240	0					
ANR	3427272	Callee	ASSERT		3427240	0					
ANR	3427273	Identifier	ASSERT		3427240	0					
ANR	3427274	ArgumentList	sc . get ( )		3427240	1					
ANR	3427275	Argument	sc . get ( )		3427240	0					
ANR	3427276	CallExpression	sc . get ( )		3427240	0					
ANR	3427277	Callee	sc . get		3427240	0					
ANR	3427278	MemberAccess	sc . get		3427240	0					
ANR	3427279	Identifier	sc		3427240	0					
ANR	3427280	Identifier	get		3427240	1					
ANR	3427281	ArgumentList			3427240	1					
ANR	3427282	ReturnStatement	return sc -> startCommand ( ) ;	1039:1:28412:28437	3427240	2	True				
ANR	3427283	CallExpression	sc -> startCommand ( )		3427240	0					
ANR	3427284	Callee	sc -> startCommand		3427240	0					
ANR	3427285	PtrMemberAccess	sc -> startCommand		3427240	0					
ANR	3427286	Identifier	sc		3427240	0					
ANR	3427287	Identifier	startCommand		3427240	1					
ANR	3427288	ArgumentList			3427240	1					
ANR	3427289	ReturnType	StartCommandResult		3427240	1					
ANR	3427290	Identifier	SecMan :: startCommand		3427240	2					
ANR	3427291	ParameterList	"int cmd , Sock * sock , bool raw_protocol , CondorError * errstack , int subcmd , StartCommandCallbackType * callback_fn , void * misc_data , bool nonblocking , char const * cmd_description , char const * sec_session_id_hint"		3427240	3					
ANR	3427292	Parameter	int cmd	1026:22:27696:27702	3427240	0	True				
ANR	3427293	ParameterType	int		3427240	0					
ANR	3427294	Identifier	cmd		3427240	1					
ANR	3427295	Parameter	Sock * sock	1026:31:27705:27714	3427240	1	True				
ANR	3427296	ParameterType	Sock *		3427240	0					
ANR	3427297	Identifier	sock		3427240	1					
ANR	3427298	Parameter	bool raw_protocol	1026:43:27717:27733	3427240	2	True				
ANR	3427299	ParameterType	bool		3427240	0					
ANR	3427300	Identifier	raw_protocol		3427240	1					
ANR	3427301	Parameter	CondorError * errstack	1026:62:27736:27756	3427240	3	True				
ANR	3427302	ParameterType	CondorError *		3427240	0					
ANR	3427303	Identifier	errstack		3427240	1					
ANR	3427304	Parameter	int subcmd	1026:85:27759:27768	3427240	4	True				
ANR	3427305	ParameterType	int		3427240	0					
ANR	3427306	Identifier	subcmd		3427240	1					
ANR	3427307	Parameter	StartCommandCallbackType * callback_fn	1026:97:27771:27807	3427240	5	True				
ANR	3427308	ParameterType	StartCommandCallbackType *		3427240	0					
ANR	3427309	Identifier	callback_fn		3427240	1					
ANR	3427310	Parameter	void * misc_data	1026:136:27810:27824	3427240	6	True				
ANR	3427311	ParameterType	void *		3427240	0					
ANR	3427312	Identifier	misc_data		3427240	1					
ANR	3427313	Parameter	bool nonblocking	1026:153:27827:27842	3427240	7	True				
ANR	3427314	ParameterType	bool		3427240	0					
ANR	3427315	Identifier	nonblocking		3427240	1					
ANR	3427316	Parameter	char const * cmd_description	1026:170:27844:27870	3427240	8	True				
ANR	3427317	ParameterType	char const *		3427240	0					
ANR	3427318	Identifier	cmd_description		3427240	1					
ANR	3427319	Parameter	char const * sec_session_id_hint	1026:198:27872:27902	3427240	9	True				
ANR	3427320	ParameterType	char const *		3427240	0					
ANR	3427321	Identifier	sec_session_id_hint		3427240	1					
ANR	3427322	CFGEntryNode	ENTRY		3427240		True				
ANR	3427323	CFGExitNode	EXIT		3427240		True				
ANR	3427324	Symbol	nonblocking		3427240						
ANR	3427325	Symbol	subcmd		3427240						
ANR	3427326	Symbol	this		3427240						
ANR	3427327	Symbol	sc -> startCommand		3427240						
ANR	3427328	Symbol	cmd_description		3427240						
ANR	3427329	Symbol	sc		3427240						
ANR	3427330	Symbol	sock		3427240						
ANR	3427331	Symbol	callback_fn		3427240						
ANR	3427332	Symbol	errstack		3427240						
ANR	3427333	Symbol	sec_session_id_hint		3427240						
ANR	3427334	Symbol	* sc		3427240						
ANR	3427335	Symbol	sc . get		3427240						
ANR	3427336	Symbol	raw_protocol		3427240						
ANR	3427337	Symbol	misc_data		3427240						
ANR	3427338	Symbol	cmd		3427240						
ANR	3427339	Function	SecManStartCommand :: doCallback	1042:0:28442:31317							
ANR	3427340	FunctionDef	SecManStartCommand :: doCallback (StartCommandResult result)		3427339	0					
ANR	3427341	CompoundStatement		1044:0:28521:31317	3427339	0					
ANR	3427342	ExpressionStatement	ASSERT ( result != StartCommandContinue )	1047:1:28636:28676	3427339	0	True				
ANR	3427343	CallExpression	ASSERT ( result != StartCommandContinue )		3427339	0					
ANR	3427344	Callee	ASSERT		3427339	0					
ANR	3427345	Identifier	ASSERT		3427339	0					
ANR	3427346	ArgumentList	result != StartCommandContinue		3427339	1					
ANR	3427347	Argument	result != StartCommandContinue		3427339	0					
ANR	3427348	EqualityExpression	result != StartCommandContinue		3427339	0		!=			
ANR	3427349	Identifier	result		3427339	0					
ANR	3427350	Identifier	StartCommandContinue		3427339	1					
ANR	3427351	IfStatement	if ( result == StartCommandSucceeded )		3427339	1					
ANR	3427352	Condition	result == StartCommandSucceeded	1049:5:28684:28714	3427339	0	True				
ANR	3427353	EqualityExpression	result == StartCommandSucceeded		3427339	0		==			
ANR	3427354	Identifier	result		3427339	0					
ANR	3427355	Identifier	StartCommandSucceeded		3427339	1					
ANR	3427356	CompoundStatement		21:2:560:676	3427339	1					
ANR	3427357	IdentifierDeclStatement	char const * server_fqu = m_sock -> getFullyQualifiedUser ( ) ;	1053:2:28817:28873	3427339	0	True				
ANR	3427358	IdentifierDecl	* server_fqu = m_sock -> getFullyQualifiedUser ( )		3427339	0					
ANR	3427359	IdentifierDeclType	char const *		3427339	0					
ANR	3427360	Identifier	server_fqu		3427339	1					
ANR	3427361	AssignmentExpression	* server_fqu = m_sock -> getFullyQualifiedUser ( )		3427339	2		=			
ANR	3427362	Identifier	server_fqu		3427339	0					
ANR	3427363	CallExpression	m_sock -> getFullyQualifiedUser ( )		3427339	1					
ANR	3427364	Callee	m_sock -> getFullyQualifiedUser		3427339	0					
ANR	3427365	PtrMemberAccess	m_sock -> getFullyQualifiedUser		3427339	0					
ANR	3427366	Identifier	m_sock		3427339	0					
ANR	3427367	Identifier	getFullyQualifiedUser		3427339	1					
ANR	3427368	ArgumentList			3427339	1					
ANR	3427369	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3427339	1					
ANR	3427370	Condition	DebugFlags & D_FULLDEBUG	1055:6:28882:28905	3427339	0	True				
ANR	3427371	BitAndExpression	DebugFlags & D_FULLDEBUG		3427339	0		&			
ANR	3427372	Identifier	DebugFlags		3427339	0					
ANR	3427373	Identifier	D_FULLDEBUG		3427339	1					
ANR	3427374	CompoundStatement		12:33:387:387	3427339	1					
ANR	3427375	ExpressionStatement	"dprintf ( D_SECURITY , ""Authorizing server '%s/%s'.\\n"" , server_fqu ? server_fqu : ""*"" , m_sock -> peer_ip_str ( ) )"	1056:3:28914:29048	3427339	0	True				
ANR	3427376	CallExpression	"dprintf ( D_SECURITY , ""Authorizing server '%s/%s'.\\n"" , server_fqu ? server_fqu : ""*"" , m_sock -> peer_ip_str ( ) )"		3427339	0					
ANR	3427377	Callee	dprintf		3427339	0					
ANR	3427378	Identifier	dprintf		3427339	0					
ANR	3427379	ArgumentList	D_SECURITY		3427339	1					
ANR	3427380	Argument	D_SECURITY		3427339	0					
ANR	3427381	Identifier	D_SECURITY		3427339	0					
ANR	3427382	Argument	"""Authorizing server '%s/%s'.\\n"""		3427339	1					
ANR	3427383	PrimaryExpression	"""Authorizing server '%s/%s'.\\n"""		3427339	0					
ANR	3427384	Argument	"server_fqu ? server_fqu : ""*"""		3427339	2					
ANR	3427385	ConditionalExpression	"server_fqu ? server_fqu : ""*"""		3427339	0					
ANR	3427386	Condition	server_fqu		3427339	0					
ANR	3427387	Identifier	server_fqu		3427339	0					
ANR	3427388	Identifier	server_fqu		3427339	1					
ANR	3427389	PrimaryExpression	"""*"""		3427339	2					
ANR	3427390	Argument	m_sock -> peer_ip_str ( )		3427339	3					
ANR	3427391	CallExpression	m_sock -> peer_ip_str ( )		3427339	0					
ANR	3427392	Callee	m_sock -> peer_ip_str		3427339	0					
ANR	3427393	PtrMemberAccess	m_sock -> peer_ip_str		3427339	0					
ANR	3427394	Identifier	m_sock		3427339	0					
ANR	3427395	Identifier	peer_ip_str		3427339	1					
ANR	3427396	ArgumentList			3427339	1					
ANR	3427397	IdentifierDeclStatement	MyString deny_reason ;	1062:2:29057:29077	3427339	2	True				
ANR	3427398	IdentifierDecl	deny_reason		3427339	0					
ANR	3427399	IdentifierDeclType	MyString		3427339	0					
ANR	3427400	Identifier	deny_reason		3427339	1					
ANR	3427401	IdentifierDeclStatement	"int authorized = m_sec_man . Verify ( CLIENT_PERM , m_sock -> peer_addr ( ) , server_fqu , NULL , & deny_reason ) ;"	1064:2:29082:29198	3427339	3	True				
ANR	3427402	IdentifierDecl	"authorized = m_sec_man . Verify ( CLIENT_PERM , m_sock -> peer_addr ( ) , server_fqu , NULL , & deny_reason )"		3427339	0					
ANR	3427403	IdentifierDeclType	int		3427339	0					
ANR	3427404	Identifier	authorized		3427339	1					
ANR	3427405	AssignmentExpression	"authorized = m_sec_man . Verify ( CLIENT_PERM , m_sock -> peer_addr ( ) , server_fqu , NULL , & deny_reason )"		3427339	2		=			
ANR	3427406	Identifier	authorized		3427339	0					
ANR	3427407	CallExpression	"m_sec_man . Verify ( CLIENT_PERM , m_sock -> peer_addr ( ) , server_fqu , NULL , & deny_reason )"		3427339	1					
ANR	3427408	Callee	m_sec_man . Verify		3427339	0					
ANR	3427409	MemberAccess	m_sec_man . Verify		3427339	0					
ANR	3427410	Identifier	m_sec_man		3427339	0					
ANR	3427411	Identifier	Verify		3427339	1					
ANR	3427412	ArgumentList	CLIENT_PERM		3427339	1					
ANR	3427413	Argument	CLIENT_PERM		3427339	0					
ANR	3427414	Identifier	CLIENT_PERM		3427339	0					
ANR	3427415	Argument	m_sock -> peer_addr ( )		3427339	1					
ANR	3427416	CallExpression	m_sock -> peer_addr ( )		3427339	0					
ANR	3427417	Callee	m_sock -> peer_addr		3427339	0					
ANR	3427418	PtrMemberAccess	m_sock -> peer_addr		3427339	0					
ANR	3427419	Identifier	m_sock		3427339	0					
ANR	3427420	Identifier	peer_addr		3427339	1					
ANR	3427421	ArgumentList			3427339	1					
ANR	3427422	Argument	server_fqu		3427339	2					
ANR	3427423	Identifier	server_fqu		3427339	0					
ANR	3427424	Argument	NULL		3427339	3					
ANR	3427425	Identifier	NULL		3427339	0					
ANR	3427426	Argument	& deny_reason		3427339	4					
ANR	3427427	UnaryOperationExpression	& deny_reason		3427339	0					
ANR	3427428	UnaryOperator	&		3427339	0					
ANR	3427429	Identifier	deny_reason		3427339	1					
ANR	3427430	IfStatement	if ( authorized != USER_AUTH_SUCCESS )		3427339	4					
ANR	3427431	Condition	authorized != USER_AUTH_SUCCESS	1071:6:29207:29237	3427339	0	True				
ANR	3427432	EqualityExpression	authorized != USER_AUTH_SUCCESS		3427339	0		!=			
ANR	3427433	Identifier	authorized		3427339	0					
ANR	3427434	Identifier	USER_AUTH_SUCCESS		3427339	1					
ANR	3427435	CompoundStatement		28:40:719:719	3427339	1					
ANR	3427436	Statement	m_errstack	1072:3:29246:29255	3427339	0	True				
ANR	3427437	Statement	->	1072:13:29256:29257	3427339	1	True				
ANR	3427438	Statement	pushf	1072:15:29258:29262	3427339	2	True				
ANR	3427439	Statement	(	1072:20:29263:29263	3427339	3	True				
ANR	3427440	Statement	"""SECMAN"""	1072:21:29264:29271	3427339	4	True				
ANR	3427441	Statement	","	1072:29:29272:29272	3427339	5	True				
ANR	3427442	Statement	SECMAN_ERR_CLIENT_AUTH_FAILED	1072:31:29274:29302	3427339	6	True				
ANR	3427443	Statement	","	1072:60:29303:29303	3427339	7	True				
ANR	3427444	Statement	"""DENIED authorization of server '%s/%s' (I am acting as """	1073:12:29317:29373	3427339	8	True				
ANR	3427445	Statement	"""the client): reason: %s."""	1074:12:29387:29412	3427339	9	True				
ANR	3427446	Statement	","	1074:38:29413:29413	3427339	10	True				
ANR	3427447	Statement	server_fqu	1075:6:29421:29430	3427339	11	True				
ANR	3427448	Statement	?	1075:17:29432:29432	3427339	12	True				
ANR	3427449	Label	server_fqu :	1075:19:29434:29445	3427339	13	True				
ANR	3427450	Identifier	server_fqu		3427339	0					
ANR	3427451	Statement	"""*"""	1075:32:29447:29449	3427339	14	True				
ANR	3427452	Statement	","	1075:35:29450:29450	3427339	15	True				
ANR	3427453	Statement	m_sock	1076:6:29458:29463	3427339	16	True				
ANR	3427454	Statement	->	1076:12:29464:29465	3427339	17	True				
ANR	3427455	Statement	peer_ip_str	1076:14:29466:29476	3427339	18	True				
ANR	3427456	Statement	(	1076:25:29477:29477	3427339	19	True				
ANR	3427457	Statement	)	1076:26:29478:29478	3427339	20	True				
ANR	3427458	Statement	","	1076:27:29479:29479	3427339	21	True				
ANR	3427459	Statement	deny_reason	1076:29:29481:29491	3427339	22	True				
ANR	3427460	Statement	.	1076:40:29492:29492	3427339	23	True				
ANR	3427461	Statement	Value	1076:41:29493:29497	3427339	24	True				
ANR	3427462	Statement	(	1076:46:29498:29498	3427339	25	True				
ANR	3427463	Statement	)	1076:47:29499:29499	3427339	26	True				
ANR	3427464	Statement	)	1076:49:29501:29501	3427339	27	True				
ANR	3427465	ExpressionStatement		1076:50:29502:29502	3427339	28	True				
ANR	3427466	ExpressionStatement	result = StartCommandFailed	1077:3:29507:29534	3427339	29	True				
ANR	3427467	AssignmentExpression	result = StartCommandFailed		3427339	0		=			
ANR	3427468	Identifier	result		3427339	0					
ANR	3427469	Identifier	StartCommandFailed		3427339	1					
ANR	3427470	IfStatement	if ( result == StartCommandFailed && m_errstack == & m_internal_errstack )		3427339	2					
ANR	3427471	Condition	result == StartCommandFailed && m_errstack == & m_internal_errstack	1081:5:29549:29614	3427339	0	True				
ANR	3427472	AndExpression	result == StartCommandFailed && m_errstack == & m_internal_errstack		3427339	0		&&			
ANR	3427473	EqualityExpression	result == StartCommandFailed		3427339	0		==			
ANR	3427474	Identifier	result		3427339	0					
ANR	3427475	Identifier	StartCommandFailed		3427339	1					
ANR	3427476	EqualityExpression	m_errstack == & m_internal_errstack		3427339	1		==			
ANR	3427477	Identifier	m_errstack		3427339	0					
ANR	3427478	UnaryOperationExpression	& m_internal_errstack		3427339	1					
ANR	3427479	UnaryOperator	&		3427339	0					
ANR	3427480	Identifier	m_internal_errstack		3427339	1					
ANR	3427481	CompoundStatement		42:2:1179:1236	3427339	1					
ANR	3427482	IdentifierDeclStatement	char const * error_msg = m_internal_errstack . getFullText ( ) ;	1085:2:29701:29758	3427339	0	True				
ANR	3427483	IdentifierDecl	* error_msg = m_internal_errstack . getFullText ( )		3427339	0					
ANR	3427484	IdentifierDeclType	char const *		3427339	0					
ANR	3427485	Identifier	error_msg		3427339	1					
ANR	3427486	AssignmentExpression	* error_msg = m_internal_errstack . getFullText ( )		3427339	2		=			
ANR	3427487	Identifier	error_msg		3427339	0					
ANR	3427488	CallExpression	m_internal_errstack . getFullText ( )		3427339	1					
ANR	3427489	Callee	m_internal_errstack . getFullText		3427339	0					
ANR	3427490	MemberAccess	m_internal_errstack . getFullText		3427339	0					
ANR	3427491	Identifier	m_internal_errstack		3427339	0					
ANR	3427492	Identifier	getFullText		3427339	1					
ANR	3427493	ArgumentList			3427339	1					
ANR	3427494	IfStatement	if ( error_msg && * error_msg )		3427339	1					
ANR	3427495	Condition	error_msg && * error_msg	1086:5:29765:29787	3427339	0	True				
ANR	3427496	AndExpression	error_msg && * error_msg		3427339	0		&&			
ANR	3427497	Identifier	error_msg		3427339	0					
ANR	3427498	UnaryOperationExpression	* error_msg		3427339	1					
ANR	3427499	UnaryOperator	*		3427339	0					
ANR	3427500	Identifier	error_msg		3427339	1					
ANR	3427501	CompoundStatement		43:30:1268:1268	3427339	1					
ANR	3427502	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: %s\\n"" , error_msg )"	1087:3:29795:29837	3427339	0	True				
ANR	3427503	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: %s\\n"" , error_msg )"		3427339	0					
ANR	3427504	Callee	dprintf		3427339	0					
ANR	3427505	Identifier	dprintf		3427339	0					
ANR	3427506	ArgumentList	D_ALWAYS		3427339	1					
ANR	3427507	Argument	D_ALWAYS		3427339	0					
ANR	3427508	Identifier	D_ALWAYS		3427339	0					
ANR	3427509	Argument	"""ERROR: %s\\n"""		3427339	1					
ANR	3427510	PrimaryExpression	"""ERROR: %s\\n"""		3427339	0					
ANR	3427511	Argument	error_msg		3427339	2					
ANR	3427512	Identifier	error_msg		3427339	0					
ANR	3427513	IfStatement	if ( result != StartCommandInProgress )		3427339	3					
ANR	3427514	Condition	result != StartCommandInProgress	1091:4:29851:29882	3427339	0	True				
ANR	3427515	EqualityExpression	result != StartCommandInProgress		3427339	0		!=			
ANR	3427516	Identifier	result		3427339	0					
ANR	3427517	Identifier	StartCommandInProgress		3427339	1					
ANR	3427518	CompoundStatement		48:38:1363:1363	3427339	1					
ANR	3427519	IfStatement	if ( m_sock_had_no_deadline )		3427339	0					
ANR	3427520	Condition	m_sock_had_no_deadline	1092:6:29893:29914	3427339	0	True				
ANR	3427521	Identifier	m_sock_had_no_deadline		3427339	0					
ANR	3427522	CompoundStatement		49:31:1396:1396	3427339	1					
ANR	3427523	ExpressionStatement	m_sock -> set_deadline ( 0 )	1095:3:30004:30029	3427339	0	True				
ANR	3427524	CallExpression	m_sock -> set_deadline ( 0 )		3427339	0					
ANR	3427525	Callee	m_sock -> set_deadline		3427339	0					
ANR	3427526	PtrMemberAccess	m_sock -> set_deadline		3427339	0					
ANR	3427527	Identifier	m_sock		3427339	0					
ANR	3427528	Identifier	set_deadline		3427339	1					
ANR	3427529	ArgumentList	0		3427339	1					
ANR	3427530	Argument	0		3427339	0					
ANR	3427531	PrimaryExpression	0		3427339	0					
ANR	3427532	IfStatement	if ( result == StartCommandInProgress )		3427339	4					
ANR	3427533	Condition	result == StartCommandInProgress	1099:4:30043:30074	3427339	0	True				
ANR	3427534	EqualityExpression	result == StartCommandInProgress		3427339	0		==			
ANR	3427535	Identifier	result		3427339	0					
ANR	3427536	Identifier	StartCommandInProgress		3427339	1					
ANR	3427537	CompoundStatement		56:38:1555:1555	3427339	1					
ANR	3427538	IfStatement	if ( ! m_callback_fn )		3427339	0					
ANR	3427539	Condition	! m_callback_fn	1104:5:30192:30205	3427339	0	True				
ANR	3427540	UnaryOperationExpression	! m_callback_fn		3427339	0					
ANR	3427541	UnaryOperator	!		3427339	0					
ANR	3427542	Identifier	m_callback_fn		3427339	1					
ANR	3427543	CompoundStatement		61:21:1686:1686	3427339	1					
ANR	3427544	ExpressionStatement	result = StartCommandWouldBlock	1108:3:30373:30404	3427339	0	True				
ANR	3427545	AssignmentExpression	result = StartCommandWouldBlock		3427339	0		=			
ANR	3427546	Identifier	result		3427339	0					
ANR	3427547	Identifier	StartCommandWouldBlock		3427339	1					
ANR	3427548	ElseStatement	else		3427339	0					
ANR	3427549	IfStatement	if ( m_callback_fn )		3427339	0					
ANR	3427550	Condition	m_callback_fn	1111:9:30422:30434	3427339	0	True				
ANR	3427551	Identifier	m_callback_fn		3427339	0					
ANR	3427552	CompoundStatement		70:2:1969:2079	3427339	1					
ANR	3427553	IdentifierDeclStatement	bool success = result == StartCommandSucceeded ;	1112:2:30441:30487	3427339	0	True				
ANR	3427554	IdentifierDecl	success = result == StartCommandSucceeded		3427339	0					
ANR	3427555	IdentifierDeclType	bool		3427339	0					
ANR	3427556	Identifier	success		3427339	1					
ANR	3427557	AssignmentExpression	success = result == StartCommandSucceeded		3427339	2		=			
ANR	3427558	Identifier	success		3427339	0					
ANR	3427559	EqualityExpression	result == StartCommandSucceeded		3427339	1		==			
ANR	3427560	Identifier	result		3427339	0					
ANR	3427561	Identifier	StartCommandSucceeded		3427339	1					
ANR	3427562	IdentifierDeclStatement	CondorError * cb_errstack = m_errstack == & m_internal_errstack ? NULL : m_errstack ;	1113:2:30491:30601	3427339	1	True				
ANR	3427563	IdentifierDecl	* cb_errstack = m_errstack == & m_internal_errstack ? NULL : m_errstack		3427339	0					
ANR	3427564	IdentifierDeclType	CondorError *		3427339	0					
ANR	3427565	Identifier	cb_errstack		3427339	1					
ANR	3427566	AssignmentExpression	* cb_errstack = m_errstack == & m_internal_errstack ? NULL : m_errstack		3427339	2		=			
ANR	3427567	Identifier	cb_errstack		3427339	0					
ANR	3427568	ConditionalExpression	m_errstack == & m_internal_errstack ? NULL : m_errstack		3427339	1					
ANR	3427569	Condition	m_errstack == & m_internal_errstack		3427339	0					
ANR	3427570	EqualityExpression	m_errstack == & m_internal_errstack		3427339	0		==			
ANR	3427571	Identifier	m_errstack		3427339	0					
ANR	3427572	UnaryOperationExpression	& m_internal_errstack		3427339	1					
ANR	3427573	UnaryOperator	&		3427339	0					
ANR	3427574	Identifier	m_internal_errstack		3427339	1					
ANR	3427575	Identifier	NULL		3427339	1					
ANR	3427576	Identifier	m_errstack		3427339	2					
ANR	3427577	ExpressionStatement	"( * m_callback_fn ) ( success , m_sock , cb_errstack , m_misc_data )"	1115:2:30605:30661	3427339	2	True				
ANR	3427578	CallExpression	"( * m_callback_fn ) ( success , m_sock , cb_errstack , m_misc_data )"		3427339	0					
ANR	3427579	Callee	* m_callback_fn		3427339	0					
ANR	3427580	UnaryOperationExpression	* m_callback_fn		3427339	0					
ANR	3427581	UnaryOperator	*		3427339	0					
ANR	3427582	Identifier	m_callback_fn		3427339	1					
ANR	3427583	ArgumentList	success		3427339	1					
ANR	3427584	Argument	success		3427339	0					
ANR	3427585	Identifier	success		3427339	0					
ANR	3427586	Argument	m_sock		3427339	1					
ANR	3427587	Identifier	m_sock		3427339	0					
ANR	3427588	Argument	cb_errstack		3427339	2					
ANR	3427589	Identifier	cb_errstack		3427339	0					
ANR	3427590	Argument	m_misc_data		3427339	3					
ANR	3427591	Identifier	m_misc_data		3427339	0					
ANR	3427592	ExpressionStatement	m_callback_fn = NULL	1117:2:30666:30686	3427339	3	True				
ANR	3427593	AssignmentExpression	m_callback_fn = NULL		3427339	0		=			
ANR	3427594	Identifier	m_callback_fn		3427339	0					
ANR	3427595	Identifier	NULL		3427339	1					
ANR	3427596	ExpressionStatement	m_misc_data = NULL	1118:2:30690:30708	3427339	4	True				
ANR	3427597	AssignmentExpression	m_misc_data = NULL		3427339	0		=			
ANR	3427598	Identifier	m_misc_data		3427339	0					
ANR	3427599	Identifier	NULL		3427339	1					
ANR	3427600	ExpressionStatement	m_errstack = & m_internal_errstack	1122:2:30828:30861	3427339	5	True				
ANR	3427601	AssignmentExpression	m_errstack = & m_internal_errstack		3427339	0		=			
ANR	3427602	Identifier	m_errstack		3427339	0					
ANR	3427603	UnaryOperationExpression	& m_internal_errstack		3427339	1					
ANR	3427604	UnaryOperator	&		3427339	0					
ANR	3427605	Identifier	m_internal_errstack		3427339	1					
ANR	3427606	ExpressionStatement	m_sock = NULL	1123:2:30865:30878	3427339	6	True				
ANR	3427607	AssignmentExpression	m_sock = NULL		3427339	0		=			
ANR	3427608	Identifier	m_sock		3427339	0					
ANR	3427609	Identifier	NULL		3427339	1					
ANR	3427610	ExpressionStatement	result = StartCommandSucceeded	1128:2:31034:31064	3427339	7	True				
ANR	3427611	AssignmentExpression	result = StartCommandSucceeded		3427339	0		=			
ANR	3427612	Identifier	result		3427339	0					
ANR	3427613	Identifier	StartCommandSucceeded		3427339	1					
ANR	3427614	IfStatement	if ( result == StartCommandWouldBlock )		3427339	5					
ANR	3427615	Condition	result == StartCommandWouldBlock	1131:5:31075:31106	3427339	0	True				
ANR	3427616	EqualityExpression	result == StartCommandWouldBlock		3427339	0		==			
ANR	3427617	Identifier	result		3427339	0					
ANR	3427618	Identifier	StartCommandWouldBlock		3427339	1					
ANR	3427619	CompoundStatement		88:40:2588:2588	3427339	1					
ANR	3427620	ExpressionStatement	m_sock = NULL	1135:2:31282:31295	3427339	0	True				
ANR	3427621	AssignmentExpression	m_sock = NULL		3427339	0		=			
ANR	3427622	Identifier	m_sock		3427339	0					
ANR	3427623	Identifier	NULL		3427339	1					
ANR	3427624	ReturnStatement	return result ;	1138:1:31302:31315	3427339	6	True				
ANR	3427625	Identifier	result		3427339	0					
ANR	3427626	ReturnType	StartCommandResult		3427339	1					
ANR	3427627	Identifier	SecManStartCommand :: doCallback		3427339	2					
ANR	3427628	ParameterList	StartCommandResult result		3427339	3					
ANR	3427629	Parameter	StartCommandResult result	1043:32:28493:28517	3427339	0	True				
ANR	3427630	ParameterType	StartCommandResult		3427339	0					
ANR	3427631	Identifier	result		3427339	1					
ANR	3427632	CFGEntryNode	ENTRY		3427339		True				
ANR	3427633	CFGExitNode	EXIT		3427339		True				
ANR	3427634	Symbol	cb_errstack		3427339						
ANR	3427635	Symbol	StartCommandContinue		3427339						
ANR	3427636	Symbol	m_sec_man		3427339						
ANR	3427637	Symbol	D_SECURITY		3427339						
ANR	3427638	Symbol	* error_msg		3427339						
ANR	3427639	Symbol	StartCommandFailed		3427339						
ANR	3427640	Symbol	m_sock -> peer_addr		3427339						
ANR	3427641	Symbol	deny_reason		3427339						
ANR	3427642	Symbol	m_sock -> peer_ip_str		3427339						
ANR	3427643	Symbol	m_errstack		3427339						
ANR	3427644	Symbol	result		3427339						
ANR	3427645	Symbol	m_callback_fn		3427339						
ANR	3427646	Symbol	authorized		3427339						
ANR	3427647	Symbol	m_sock_had_no_deadline		3427339						
ANR	3427648	Symbol	m_sec_man . Verify		3427339						
ANR	3427649	Symbol	CLIENT_PERM		3427339						
ANR	3427650	Symbol	& deny_reason		3427339						
ANR	3427651	Symbol	m_internal_errstack . getFullText		3427339						
ANR	3427652	Symbol	server_fqu		3427339						
ANR	3427653	Symbol	NULL		3427339						
ANR	3427654	Symbol	error_msg		3427339						
ANR	3427655	Symbol	* m_sock		3427339						
ANR	3427656	Symbol	StartCommandInProgress		3427339						
ANR	3427657	Symbol	m_sock		3427339						
ANR	3427658	Symbol	m_internal_errstack		3427339						
ANR	3427659	Symbol	D_ALWAYS		3427339						
ANR	3427660	Symbol	DebugFlags		3427339						
ANR	3427661	Symbol	D_FULLDEBUG		3427339						
ANR	3427662	Symbol	m_misc_data		3427339						
ANR	3427663	Symbol	m_sock -> getFullyQualifiedUser		3427339						
ANR	3427664	Symbol	StartCommandSucceeded		3427339						
ANR	3427665	Symbol	USER_AUTH_SUCCESS		3427339						
ANR	3427666	Symbol	& m_internal_errstack		3427339						
ANR	3427667	Symbol	success		3427339						
ANR	3427668	Symbol	StartCommandWouldBlock		3427339						
ANR	3427669	Function	SecManStartCommand :: startCommand	1141:0:31320:31678							
ANR	3427670	FunctionDef	SecManStartCommand :: startCommand ()		3427669	0					
ANR	3427671	CompoundStatement		1143:0:31374:31678	3427669	0					
ANR	3427672	IdentifierDeclStatement	classy_counted_ptr < SecManStartCommand > self = this ;	1148:1:31581:31631	3427669	0	True				
ANR	3427673	IdentifierDecl	self = this		3427669	0					
ANR	3427674	IdentifierDeclType	classy_counted_ptr < SecManStartCommand >		3427669	0					
ANR	3427675	Identifier	self		3427669	1					
ANR	3427676	AssignmentExpression	self = this		3427669	2		=			
ANR	3427677	Identifier	this		3427669	0					
ANR	3427678	Identifier	this		3427669	1					
ANR	3427679	ReturnStatement	return doCallback ( startCommand_inner ( ) ) ;	1150:1:31635:31676	3427669	1	True				
ANR	3427680	CallExpression	doCallback ( startCommand_inner ( ) )		3427669	0					
ANR	3427681	Callee	doCallback		3427669	0					
ANR	3427682	Identifier	doCallback		3427669	0					
ANR	3427683	ArgumentList	startCommand_inner ( )		3427669	1					
ANR	3427684	Argument	startCommand_inner ( )		3427669	0					
ANR	3427685	CallExpression	startCommand_inner ( )		3427669	0					
ANR	3427686	Callee	startCommand_inner		3427669	0					
ANR	3427687	Identifier	startCommand_inner		3427669	0					
ANR	3427688	ArgumentList			3427669	1					
ANR	3427689	ReturnType	StartCommandResult		3427669	1					
ANR	3427690	Identifier	SecManStartCommand :: startCommand		3427669	2					
ANR	3427691	ParameterList			3427669	3					
ANR	3427692	CFGEntryNode	ENTRY		3427669		True				
ANR	3427693	CFGExitNode	EXIT		3427669		True				
ANR	3427694	Symbol	doCallback		3427669						
ANR	3427695	Symbol	startCommand_inner		3427669						
ANR	3427696	Symbol	this		3427669						
ANR	3427697	Symbol	self		3427669						
ANR	3427698	Function	SecManStartCommand :: startCommand_inner	1153:0:31681:33987							
ANR	3427699	FunctionDef	SecManStartCommand :: startCommand_inner ()		3427698	0					
ANR	3427700	CompoundStatement		1155:0:31741:33987	3427698	0					
ANR	3427701	ExpressionStatement	ASSERT ( m_sock )	1159:1:31880:31894	3427698	0	True				
ANR	3427702	CallExpression	ASSERT ( m_sock )		3427698	0					
ANR	3427703	Callee	ASSERT		3427698	0					
ANR	3427704	Identifier	ASSERT		3427698	0					
ANR	3427705	ArgumentList	m_sock		3427698	1					
ANR	3427706	Argument	m_sock		3427698	0					
ANR	3427707	Identifier	m_sock		3427698	0					
ANR	3427708	ExpressionStatement	ASSERT ( m_errstack )	1160:1:31897:31915	3427698	1	True				
ANR	3427709	CallExpression	ASSERT ( m_errstack )		3427698	0					
ANR	3427710	Callee	ASSERT		3427698	0					
ANR	3427711	Identifier	ASSERT		3427698	0					
ANR	3427712	ArgumentList	m_errstack		3427698	1					
ANR	3427713	Argument	m_errstack		3427698	0					
ANR	3427714	Identifier	m_errstack		3427698	0					
ANR	3427715	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: %scommand %i %s to %s from %s port %i (%s%s).\\n"" , m_already_logged_startcommand ? ""resuming "" : """" , m_cmd , m_cmd_description . Value ( ) , m_sock -> peer_description ( ) , m_is_tcp ? ""TCP"" : ""UDP"" , m_sock -> get_port ( ) , m_nonblocking ? ""non-blocking"" : ""blocking"" , m_raw_protocol ? "", raw"" : """" )"	1162:1:31919:32274	3427698	2	True				
ANR	3427716	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: %scommand %i %s to %s from %s port %i (%s%s).\\n"" , m_already_logged_startcommand ? ""resuming "" : """" , m_cmd , m_cmd_description . Value ( ) , m_sock -> peer_description ( ) , m_is_tcp ? ""TCP"" : ""UDP"" , m_sock -> get_port ( ) , m_nonblocking ? ""non-blocking"" : ""blocking"" , m_raw_protocol ? "", raw"" : """" )"		3427698	0					
ANR	3427717	Callee	dprintf		3427698	0					
ANR	3427718	Identifier	dprintf		3427698	0					
ANR	3427719	ArgumentList	D_SECURITY		3427698	1					
ANR	3427720	Argument	D_SECURITY		3427698	0					
ANR	3427721	Identifier	D_SECURITY		3427698	0					
ANR	3427722	Argument	"""SECMAN: %scommand %i %s to %s from %s port %i (%s%s).\\n"""		3427698	1					
ANR	3427723	PrimaryExpression	"""SECMAN: %scommand %i %s to %s from %s port %i (%s%s).\\n"""		3427698	0					
ANR	3427724	Argument	"m_already_logged_startcommand ? ""resuming "" : """""		3427698	2					
ANR	3427725	ConditionalExpression	"m_already_logged_startcommand ? ""resuming "" : """""		3427698	0					
ANR	3427726	Condition	m_already_logged_startcommand		3427698	0					
ANR	3427727	Identifier	m_already_logged_startcommand		3427698	0					
ANR	3427728	PrimaryExpression	"""resuming """		3427698	1					
ANR	3427729	PrimaryExpression	""""""		3427698	2					
ANR	3427730	Argument	m_cmd		3427698	3					
ANR	3427731	Identifier	m_cmd		3427698	0					
ANR	3427732	Argument	m_cmd_description . Value ( )		3427698	4					
ANR	3427733	CallExpression	m_cmd_description . Value ( )		3427698	0					
ANR	3427734	Callee	m_cmd_description . Value		3427698	0					
ANR	3427735	MemberAccess	m_cmd_description . Value		3427698	0					
ANR	3427736	Identifier	m_cmd_description		3427698	0					
ANR	3427737	Identifier	Value		3427698	1					
ANR	3427738	ArgumentList			3427698	1					
ANR	3427739	Argument	m_sock -> peer_description ( )		3427698	5					
ANR	3427740	CallExpression	m_sock -> peer_description ( )		3427698	0					
ANR	3427741	Callee	m_sock -> peer_description		3427698	0					
ANR	3427742	PtrMemberAccess	m_sock -> peer_description		3427698	0					
ANR	3427743	Identifier	m_sock		3427698	0					
ANR	3427744	Identifier	peer_description		3427698	1					
ANR	3427745	ArgumentList			3427698	1					
ANR	3427746	Argument	"m_is_tcp ? ""TCP"" : ""UDP"""		3427698	6					
ANR	3427747	ConditionalExpression	"m_is_tcp ? ""TCP"" : ""UDP"""		3427698	0					
ANR	3427748	Condition	m_is_tcp		3427698	0					
ANR	3427749	Identifier	m_is_tcp		3427698	0					
ANR	3427750	PrimaryExpression	"""TCP"""		3427698	1					
ANR	3427751	PrimaryExpression	"""UDP"""		3427698	2					
ANR	3427752	Argument	m_sock -> get_port ( )		3427698	7					
ANR	3427753	CallExpression	m_sock -> get_port ( )		3427698	0					
ANR	3427754	Callee	m_sock -> get_port		3427698	0					
ANR	3427755	PtrMemberAccess	m_sock -> get_port		3427698	0					
ANR	3427756	Identifier	m_sock		3427698	0					
ANR	3427757	Identifier	get_port		3427698	1					
ANR	3427758	ArgumentList			3427698	1					
ANR	3427759	Argument	"m_nonblocking ? ""non-blocking"" : ""blocking"""		3427698	8					
ANR	3427760	ConditionalExpression	"m_nonblocking ? ""non-blocking"" : ""blocking"""		3427698	0					
ANR	3427761	Condition	m_nonblocking		3427698	0					
ANR	3427762	Identifier	m_nonblocking		3427698	0					
ANR	3427763	PrimaryExpression	"""non-blocking"""		3427698	1					
ANR	3427764	PrimaryExpression	"""blocking"""		3427698	2					
ANR	3427765	Argument	"m_raw_protocol ? "", raw"" : """""		3427698	9					
ANR	3427766	ConditionalExpression	"m_raw_protocol ? "", raw"" : """""		3427698	0					
ANR	3427767	Condition	m_raw_protocol		3427698	0					
ANR	3427768	Identifier	m_raw_protocol		3427698	0					
ANR	3427769	PrimaryExpression	""", raw"""		3427698	1					
ANR	3427770	PrimaryExpression	""""""		3427698	2					
ANR	3427771	ExpressionStatement	m_already_logged_startcommand = true	1172:1:32278:32314	3427698	3	True				
ANR	3427772	AssignmentExpression	m_already_logged_startcommand = true		3427698	0		=			
ANR	3427773	Identifier	m_already_logged_startcommand		3427698	0					
ANR	3427774	Identifier	true		3427698	1					
ANR	3427775	IfStatement	if ( m_sock -> deadline_expired ( ) )		3427698	4					
ANR	3427776	Condition	m_sock -> deadline_expired ( )	1175:5:32323:32348	3427698	0	True				
ANR	3427777	CallExpression	m_sock -> deadline_expired ( )		3427698	0					
ANR	3427778	Callee	m_sock -> deadline_expired		3427698	0					
ANR	3427779	PtrMemberAccess	m_sock -> deadline_expired		3427698	0					
ANR	3427780	Identifier	m_sock		3427698	0					
ANR	3427781	Identifier	deadline_expired		3427698	1					
ANR	3427782	ArgumentList			3427698	1					
ANR	3427783	CompoundStatement		22:2:614:626	3427698	1					
ANR	3427784	IdentifierDeclStatement	MyString msg ;	1176:2:32356:32368	3427698	0	True				
ANR	3427785	IdentifierDecl	msg		3427698	0					
ANR	3427786	IdentifierDeclType	MyString		3427698	0					
ANR	3427787	Identifier	msg		3427698	1					
ANR	3427788	ExpressionStatement	"msg . sprintf ( ""deadline for %s %s has expired."" , m_is_tcp && ! m_sock -> is_connected ( ) ? ""connection to"" : ""security handshake with"" , m_sock -> peer_description ( ) )"	1177:2:32372:32544	3427698	1	True				
ANR	3427789	CallExpression	"msg . sprintf ( ""deadline for %s %s has expired."" , m_is_tcp && ! m_sock -> is_connected ( ) ? ""connection to"" : ""security handshake with"" , m_sock -> peer_description ( ) )"		3427698	0					
ANR	3427790	Callee	msg . sprintf		3427698	0					
ANR	3427791	MemberAccess	msg . sprintf		3427698	0					
ANR	3427792	Identifier	msg		3427698	0					
ANR	3427793	Identifier	sprintf		3427698	1					
ANR	3427794	ArgumentList	"""deadline for %s %s has expired."""		3427698	1					
ANR	3427795	Argument	"""deadline for %s %s has expired."""		3427698	0					
ANR	3427796	PrimaryExpression	"""deadline for %s %s has expired."""		3427698	0					
ANR	3427797	Argument	"m_is_tcp && ! m_sock -> is_connected ( ) ? ""connection to"" : ""security handshake with"""		3427698	1					
ANR	3427798	ConditionalExpression	"m_is_tcp && ! m_sock -> is_connected ( ) ? ""connection to"" : ""security handshake with"""		3427698	0					
ANR	3427799	Condition	m_is_tcp && ! m_sock -> is_connected ( )		3427698	0					
ANR	3427800	AndExpression	m_is_tcp && ! m_sock -> is_connected ( )		3427698	0		&&			
ANR	3427801	Identifier	m_is_tcp		3427698	0					
ANR	3427802	UnaryOperationExpression	! m_sock -> is_connected ( )		3427698	1					
ANR	3427803	UnaryOperator	!		3427698	0					
ANR	3427804	CallExpression	m_sock -> is_connected ( )		3427698	1					
ANR	3427805	Callee	m_sock -> is_connected		3427698	0					
ANR	3427806	PtrMemberAccess	m_sock -> is_connected		3427698	0					
ANR	3427807	Identifier	m_sock		3427698	0					
ANR	3427808	Identifier	is_connected		3427698	1					
ANR	3427809	ArgumentList			3427698	1					
ANR	3427810	PrimaryExpression	"""connection to"""		3427698	1					
ANR	3427811	PrimaryExpression	"""security handshake with"""		3427698	2					
ANR	3427812	Argument	m_sock -> peer_description ( )		3427698	2					
ANR	3427813	CallExpression	m_sock -> peer_description ( )		3427698	0					
ANR	3427814	Callee	m_sock -> peer_description		3427698	0					
ANR	3427815	PtrMemberAccess	m_sock -> peer_description		3427698	0					
ANR	3427816	Identifier	m_sock		3427698	0					
ANR	3427817	Identifier	peer_description		3427698	1					
ANR	3427818	ArgumentList			3427698	1					
ANR	3427819	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: %s\\n"" , msg . Value ( ) )"	1181:2:32548:32595	3427698	2	True				
ANR	3427820	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: %s\\n"" , msg . Value ( ) )"		3427698	0					
ANR	3427821	Callee	dprintf		3427698	0					
ANR	3427822	Identifier	dprintf		3427698	0					
ANR	3427823	ArgumentList	D_SECURITY		3427698	1					
ANR	3427824	Argument	D_SECURITY		3427698	0					
ANR	3427825	Identifier	D_SECURITY		3427698	0					
ANR	3427826	Argument	"""SECMAN: %s\\n"""		3427698	1					
ANR	3427827	PrimaryExpression	"""SECMAN: %s\\n"""		3427698	0					
ANR	3427828	Argument	msg . Value ( )		3427698	2					
ANR	3427829	CallExpression	msg . Value ( )		3427698	0					
ANR	3427830	Callee	msg . Value		3427698	0					
ANR	3427831	MemberAccess	msg . Value		3427698	0					
ANR	3427832	Identifier	msg		3427698	0					
ANR	3427833	Identifier	Value		3427698	1					
ANR	3427834	ArgumentList			3427698	1					
ANR	3427835	ExpressionStatement	"m_errstack -> pushf ( ""SECMAN"" , SECMAN_ERR_CONNECT_FAILED , ""%s"" , msg . Value ( ) )"	1182:2:32599:32680	3427698	3	True				
ANR	3427836	CallExpression	"m_errstack -> pushf ( ""SECMAN"" , SECMAN_ERR_CONNECT_FAILED , ""%s"" , msg . Value ( ) )"		3427698	0					
ANR	3427837	Callee	m_errstack -> pushf		3427698	0					
ANR	3427838	PtrMemberAccess	m_errstack -> pushf		3427698	0					
ANR	3427839	Identifier	m_errstack		3427698	0					
ANR	3427840	Identifier	pushf		3427698	1					
ANR	3427841	ArgumentList	"""SECMAN"""		3427698	1					
ANR	3427842	Argument	"""SECMAN"""		3427698	0					
ANR	3427843	PrimaryExpression	"""SECMAN"""		3427698	0					
ANR	3427844	Argument	SECMAN_ERR_CONNECT_FAILED		3427698	1					
ANR	3427845	Identifier	SECMAN_ERR_CONNECT_FAILED		3427698	0					
ANR	3427846	Argument	"""%s"""		3427698	2					
ANR	3427847	PrimaryExpression	"""%s"""		3427698	0					
ANR	3427848	Argument	msg . Value ( )		3427698	3					
ANR	3427849	CallExpression	msg . Value ( )		3427698	0					
ANR	3427850	Callee	msg . Value		3427698	0					
ANR	3427851	MemberAccess	msg . Value		3427698	0					
ANR	3427852	Identifier	msg		3427698	0					
ANR	3427853	Identifier	Value		3427698	1					
ANR	3427854	ArgumentList			3427698	1					
ANR	3427855	ReturnStatement	return StartCommandFailed ;	1185:2:32685:32710	3427698	4	True				
ANR	3427856	Identifier	StartCommandFailed		3427698	0					
ANR	3427857	ElseStatement	else		3427698	0					
ANR	3427858	IfStatement	if ( m_nonblocking && m_sock -> is_connect_pending ( ) )		3427698	0					
ANR	3427859	Condition	m_nonblocking && m_sock -> is_connect_pending ( )	1187:10:32725:32769	3427698	0	True				
ANR	3427860	AndExpression	m_nonblocking && m_sock -> is_connect_pending ( )		3427698	0		&&			
ANR	3427861	Identifier	m_nonblocking		3427698	0					
ANR	3427862	CallExpression	m_sock -> is_connect_pending ( )		3427698	1					
ANR	3427863	Callee	m_sock -> is_connect_pending		3427698	0					
ANR	3427864	PtrMemberAccess	m_sock -> is_connect_pending		3427698	0					
ANR	3427865	Identifier	m_sock		3427698	0					
ANR	3427866	Identifier	is_connect_pending		3427698	1					
ANR	3427867	ArgumentList			3427698	1					
ANR	3427868	CompoundStatement		33:58:1031:1031	3427698	1					
ANR	3427869	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: waiting for TCP connection to %s.\\n"" , m_sock -> peer_description ( ) )"	1188:2:32777:32874	3427698	0	True				
ANR	3427870	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: waiting for TCP connection to %s.\\n"" , m_sock -> peer_description ( ) )"		3427698	0					
ANR	3427871	Callee	dprintf		3427698	0					
ANR	3427872	Identifier	dprintf		3427698	0					
ANR	3427873	ArgumentList	D_SECURITY		3427698	1					
ANR	3427874	Argument	D_SECURITY		3427698	0					
ANR	3427875	Identifier	D_SECURITY		3427698	0					
ANR	3427876	Argument	"""SECMAN: waiting for TCP connection to %s.\\n"""		3427698	1					
ANR	3427877	PrimaryExpression	"""SECMAN: waiting for TCP connection to %s.\\n"""		3427698	0					
ANR	3427878	Argument	m_sock -> peer_description ( )		3427698	2					
ANR	3427879	CallExpression	m_sock -> peer_description ( )		3427698	0					
ANR	3427880	Callee	m_sock -> peer_description		3427698	0					
ANR	3427881	PtrMemberAccess	m_sock -> peer_description		3427698	0					
ANR	3427882	Identifier	m_sock		3427698	0					
ANR	3427883	Identifier	peer_description		3427698	1					
ANR	3427884	ArgumentList			3427698	1					
ANR	3427885	ReturnStatement	return WaitForSocketCallback ( ) ;	1190:2:32878:32908	3427698	1	True				
ANR	3427886	CallExpression	WaitForSocketCallback ( )		3427698	0					
ANR	3427887	Callee	WaitForSocketCallback		3427698	0					
ANR	3427888	Identifier	WaitForSocketCallback		3427698	0					
ANR	3427889	ArgumentList			3427698	1					
ANR	3427890	ElseStatement	else		3427698	0					
ANR	3427891	IfStatement	if ( m_is_tcp && ! m_sock -> is_connected ( ) )		3427698	0					
ANR	3427892	Condition	m_is_tcp && ! m_sock -> is_connected ( )	1192:10:32923:32957	3427698	0	True				
ANR	3427893	AndExpression	m_is_tcp && ! m_sock -> is_connected ( )		3427698	0		&&			
ANR	3427894	Identifier	m_is_tcp		3427698	0					
ANR	3427895	UnaryOperationExpression	! m_sock -> is_connected ( )		3427698	1					
ANR	3427896	UnaryOperator	!		3427698	0					
ANR	3427897	CallExpression	m_sock -> is_connected ( )		3427698	1					
ANR	3427898	Callee	m_sock -> is_connected		3427698	0					
ANR	3427899	PtrMemberAccess	m_sock -> is_connected		3427698	0					
ANR	3427900	Identifier	m_sock		3427698	0					
ANR	3427901	Identifier	is_connected		3427698	1					
ANR	3427902	ArgumentList			3427698	1					
ANR	3427903	CompoundStatement		39:2:1222:1234	3427698	1					
ANR	3427904	IdentifierDeclStatement	MyString msg ;	1193:2:32964:32976	3427698	0	True				
ANR	3427905	IdentifierDecl	msg		3427698	0					
ANR	3427906	IdentifierDeclType	MyString		3427698	0					
ANR	3427907	Identifier	msg		3427698	1					
ANR	3427908	ExpressionStatement	"msg . sprintf ( ""TCP connection to %s failed."" , m_sock -> peer_description ( ) )"	1194:2:32980:33056	3427698	1	True				
ANR	3427909	CallExpression	"msg . sprintf ( ""TCP connection to %s failed."" , m_sock -> peer_description ( ) )"		3427698	0					
ANR	3427910	Callee	msg . sprintf		3427698	0					
ANR	3427911	MemberAccess	msg . sprintf		3427698	0					
ANR	3427912	Identifier	msg		3427698	0					
ANR	3427913	Identifier	sprintf		3427698	1					
ANR	3427914	ArgumentList	"""TCP connection to %s failed."""		3427698	1					
ANR	3427915	Argument	"""TCP connection to %s failed."""		3427698	0					
ANR	3427916	PrimaryExpression	"""TCP connection to %s failed."""		3427698	0					
ANR	3427917	Argument	m_sock -> peer_description ( )		3427698	1					
ANR	3427918	CallExpression	m_sock -> peer_description ( )		3427698	0					
ANR	3427919	Callee	m_sock -> peer_description		3427698	0					
ANR	3427920	PtrMemberAccess	m_sock -> peer_description		3427698	0					
ANR	3427921	Identifier	m_sock		3427698	0					
ANR	3427922	Identifier	peer_description		3427698	1					
ANR	3427923	ArgumentList			3427698	1					
ANR	3427924	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: %s\\n"" , msg . Value ( ) )"	1196:2:33060:33107	3427698	2	True				
ANR	3427925	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: %s\\n"" , msg . Value ( ) )"		3427698	0					
ANR	3427926	Callee	dprintf		3427698	0					
ANR	3427927	Identifier	dprintf		3427698	0					
ANR	3427928	ArgumentList	D_SECURITY		3427698	1					
ANR	3427929	Argument	D_SECURITY		3427698	0					
ANR	3427930	Identifier	D_SECURITY		3427698	0					
ANR	3427931	Argument	"""SECMAN: %s\\n"""		3427698	1					
ANR	3427932	PrimaryExpression	"""SECMAN: %s\\n"""		3427698	0					
ANR	3427933	Argument	msg . Value ( )		3427698	2					
ANR	3427934	CallExpression	msg . Value ( )		3427698	0					
ANR	3427935	Callee	msg . Value		3427698	0					
ANR	3427936	MemberAccess	msg . Value		3427698	0					
ANR	3427937	Identifier	msg		3427698	0					
ANR	3427938	Identifier	Value		3427698	1					
ANR	3427939	ArgumentList			3427698	1					
ANR	3427940	ExpressionStatement	"m_errstack -> pushf ( ""SECMAN"" , SECMAN_ERR_CONNECT_FAILED , ""%s"" , msg . Value ( ) )"	1197:2:33111:33192	3427698	3	True				
ANR	3427941	CallExpression	"m_errstack -> pushf ( ""SECMAN"" , SECMAN_ERR_CONNECT_FAILED , ""%s"" , msg . Value ( ) )"		3427698	0					
ANR	3427942	Callee	m_errstack -> pushf		3427698	0					
ANR	3427943	PtrMemberAccess	m_errstack -> pushf		3427698	0					
ANR	3427944	Identifier	m_errstack		3427698	0					
ANR	3427945	Identifier	pushf		3427698	1					
ANR	3427946	ArgumentList	"""SECMAN"""		3427698	1					
ANR	3427947	Argument	"""SECMAN"""		3427698	0					
ANR	3427948	PrimaryExpression	"""SECMAN"""		3427698	0					
ANR	3427949	Argument	SECMAN_ERR_CONNECT_FAILED		3427698	1					
ANR	3427950	Identifier	SECMAN_ERR_CONNECT_FAILED		3427698	0					
ANR	3427951	Argument	"""%s"""		3427698	2					
ANR	3427952	PrimaryExpression	"""%s"""		3427698	0					
ANR	3427953	Argument	msg . Value ( )		3427698	3					
ANR	3427954	CallExpression	msg . Value ( )		3427698	0					
ANR	3427955	Callee	msg . Value		3427698	0					
ANR	3427956	MemberAccess	msg . Value		3427698	0					
ANR	3427957	Identifier	msg		3427698	0					
ANR	3427958	Identifier	Value		3427698	1					
ANR	3427959	ArgumentList			3427698	1					
ANR	3427960	ReturnStatement	return StartCommandFailed ;	1200:2:33197:33222	3427698	4	True				
ANR	3427961	Identifier	StartCommandFailed		3427698	0					
ANR	3427962	IdentifierDeclStatement	StartCommandResult result = StartCommandSucceeded ;	1208:1:33485:33534	3427698	5	True				
ANR	3427963	IdentifierDecl	result = StartCommandSucceeded		3427698	0					
ANR	3427964	IdentifierDeclType	StartCommandResult		3427698	0					
ANR	3427965	Identifier	result		3427698	1					
ANR	3427966	AssignmentExpression	result = StartCommandSucceeded		3427698	2		=			
ANR	3427967	Identifier	StartCommandSucceeded		3427698	0					
ANR	3427968	Identifier	StartCommandSucceeded		3427698	1					
ANR	3427969	DoStatement	do		3427698	6					
ANR	3427970	CompoundStatement		55:4:1798:1798	3427698	0					
ANR	3427971	SwitchStatement	switch ( m_state )		3427698	0					
ANR	3427972	Condition	m_state	1210:10:33552:33558	3427698	0	True				
ANR	3427973	Identifier	m_state		3427698	0					
ANR	3427974	CompoundStatement		56:20:1820:1820	3427698	1					
ANR	3427975	Label	case SendAuthInfo :	1211:2:33566:33583	3427698	0	True				
ANR	3427976	Identifier	SendAuthInfo		3427698	0					
ANR	3427977	ExpressionStatement	result = sendAuthInfo_inner ( )	1212:3:33588:33617	3427698	1	True				
ANR	3427978	AssignmentExpression	result = sendAuthInfo_inner ( )		3427698	0		=			
ANR	3427979	Identifier	result		3427698	0					
ANR	3427980	CallExpression	sendAuthInfo_inner ( )		3427698	1					
ANR	3427981	Callee	sendAuthInfo_inner		3427698	0					
ANR	3427982	Identifier	sendAuthInfo_inner		3427698	0					
ANR	3427983	ArgumentList			3427698	1					
ANR	3427984	BreakStatement	break ;	1213:3:33622:33627	3427698	2	True				
ANR	3427985	Label	case ReceiveAuthInfo :	1214:2:33631:33651	3427698	3	True				
ANR	3427986	Identifier	ReceiveAuthInfo		3427698	0					
ANR	3427987	ExpressionStatement	result = receiveAuthInfo_inner ( )	1215:3:33656:33688	3427698	4	True				
ANR	3427988	AssignmentExpression	result = receiveAuthInfo_inner ( )		3427698	0		=			
ANR	3427989	Identifier	result		3427698	0					
ANR	3427990	CallExpression	receiveAuthInfo_inner ( )		3427698	1					
ANR	3427991	Callee	receiveAuthInfo_inner		3427698	0					
ANR	3427992	Identifier	receiveAuthInfo_inner		3427698	0					
ANR	3427993	ArgumentList			3427698	1					
ANR	3427994	BreakStatement	break ;	1216:3:33693:33698	3427698	5	True				
ANR	3427995	Label	case Authenticate :	1217:2:33702:33719	3427698	6	True				
ANR	3427996	Identifier	Authenticate		3427698	0					
ANR	3427997	ExpressionStatement	result = authenticate_inner ( )	1218:3:33724:33753	3427698	7	True				
ANR	3427998	AssignmentExpression	result = authenticate_inner ( )		3427698	0		=			
ANR	3427999	Identifier	result		3427698	0					
ANR	3428000	CallExpression	authenticate_inner ( )		3427698	1					
ANR	3428001	Callee	authenticate_inner		3427698	0					
ANR	3428002	Identifier	authenticate_inner		3427698	0					
ANR	3428003	ArgumentList			3427698	1					
ANR	3428004	BreakStatement	break ;	1219:3:33758:33763	3427698	8	True				
ANR	3428005	Label	case ReceivePostAuthInfo :	1220:2:33767:33791	3427698	9	True				
ANR	3428006	Identifier	ReceivePostAuthInfo		3427698	0					
ANR	3428007	ExpressionStatement	result = receivePostAuthInfo_inner ( )	1221:3:33796:33832	3427698	10	True				
ANR	3428008	AssignmentExpression	result = receivePostAuthInfo_inner ( )		3427698	0		=			
ANR	3428009	Identifier	result		3427698	0					
ANR	3428010	CallExpression	receivePostAuthInfo_inner ( )		3427698	1					
ANR	3428011	Callee	receivePostAuthInfo_inner		3427698	0					
ANR	3428012	Identifier	receivePostAuthInfo_inner		3427698	0					
ANR	3428013	ArgumentList			3427698	1					
ANR	3428014	BreakStatement	break ;	1222:3:33837:33842	3427698	11	True				
ANR	3428015	Label	default :	1223:2:33846:33853	3427698	12	True				
ANR	3428016	Identifier	default		3427698	0					
ANR	3428017	ExpressionStatement	"EXCEPT ( ""Unexpected state in SecManStartCommand: %d\\n"" , m_state )"	1224:3:33858:33920	3427698	13	True				
ANR	3428018	CallExpression	"EXCEPT ( ""Unexpected state in SecManStartCommand: %d\\n"" , m_state )"		3427698	0					
ANR	3428019	Callee	EXCEPT		3427698	0					
ANR	3428020	Identifier	EXCEPT		3427698	0					
ANR	3428021	ArgumentList	"""Unexpected state in SecManStartCommand: %d\\n"""		3427698	1					
ANR	3428022	Argument	"""Unexpected state in SecManStartCommand: %d\\n"""		3427698	0					
ANR	3428023	PrimaryExpression	"""Unexpected state in SecManStartCommand: %d\\n"""		3427698	0					
ANR	3428024	Argument	m_state		3427698	1					
ANR	3428025	Identifier	m_state		3427698	0					
ANR	3428026	Condition	result == StartCommandContinue	1226:10:33936:33965	3427698	1	True				
ANR	3428027	EqualityExpression	result == StartCommandContinue		3427698	0		==			
ANR	3428028	Identifier	result		3427698	0					
ANR	3428029	Identifier	StartCommandContinue		3427698	1					
ANR	3428030	ReturnStatement	return result ;	1228:1:33972:33985	3427698	7	True				
ANR	3428031	Identifier	result		3427698	0					
ANR	3428032	ReturnType	StartCommandResult		3427698	1					
ANR	3428033	Identifier	SecManStartCommand :: startCommand_inner		3427698	2					
ANR	3428034	ParameterList			3427698	3					
ANR	3428035	CFGEntryNode	ENTRY		3427698		True				
ANR	3428036	CFGExitNode	EXIT		3427698		True				
ANR	3428037	Symbol	msg		3427698						
ANR	3428038	Symbol	StartCommandContinue		3427698						
ANR	3428039	Symbol	D_SECURITY		3427698						
ANR	3428040	Symbol	m_cmd		3427698						
ANR	3428041	Symbol	m_raw_protocol		3427698						
ANR	3428042	Symbol	StartCommandFailed		3427698						
ANR	3428043	Symbol	m_errstack		3427698						
ANR	3428044	Symbol	m_sock -> peer_description		3427698						
ANR	3428045	Symbol	result		3427698						
ANR	3428046	Symbol	m_state		3427698						
ANR	3428047	Symbol	m_sock -> is_connected		3427698						
ANR	3428048	Symbol	m_cmd_description . Value		3427698						
ANR	3428049	Symbol	m_is_tcp		3427698						
ANR	3428050	Symbol	SECMAN_ERR_CONNECT_FAILED		3427698						
ANR	3428051	Symbol	authenticate_inner		3427698						
ANR	3428052	Symbol	* m_sock		3427698						
ANR	3428053	Symbol	m_sock		3427698						
ANR	3428054	Symbol	m_sock -> deadline_expired		3427698						
ANR	3428055	Symbol	m_sock -> get_port		3427698						
ANR	3428056	Symbol	receiveAuthInfo_inner		3427698						
ANR	3428057	Symbol	WaitForSocketCallback		3427698						
ANR	3428058	Symbol	m_cmd_description		3427698						
ANR	3428059	Symbol	m_already_logged_startcommand		3427698						
ANR	3428060	Symbol	m_nonblocking		3427698						
ANR	3428061	Symbol	msg . Value		3427698						
ANR	3428062	Symbol	sendAuthInfo_inner		3427698						
ANR	3428063	Symbol	StartCommandSucceeded		3427698						
ANR	3428064	Symbol	receivePostAuthInfo_inner		3427698						
ANR	3428065	Symbol	m_sock -> is_connect_pending		3427698						
ANR	3428066	Symbol	true		3427698						
ANR	3428067	Function	SecMan :: LookupNonExpiredSession	1231:0:33990:34403							
ANR	3428068	FunctionDef	"SecMan :: LookupNonExpiredSession (char const * session_id , KeyCacheEntry * & session_key)"		3428067	0					
ANR	3428069	CompoundStatement		1233:0:34080:34403	3428067	0					
ANR	3428070	IfStatement	"if ( ! session_cache -> lookup ( session_id , session_key ) )"		3428067	0					
ANR	3428071	Condition	"! session_cache -> lookup ( session_id , session_key )"	1234:4:34086:34131	3428067	0	True				
ANR	3428072	UnaryOperationExpression	"! session_cache -> lookup ( session_id , session_key )"		3428067	0					
ANR	3428073	UnaryOperator	!		3428067	0					
ANR	3428074	CallExpression	"session_cache -> lookup ( session_id , session_key )"		3428067	1					
ANR	3428075	Callee	session_cache -> lookup		3428067	0					
ANR	3428076	PtrMemberAccess	session_cache -> lookup		3428067	0					
ANR	3428077	Identifier	session_cache		3428067	0					
ANR	3428078	Identifier	lookup		3428067	1					
ANR	3428079	ArgumentList	session_id		3428067	1					
ANR	3428080	Argument	session_id		3428067	0					
ANR	3428081	Identifier	session_id		3428067	0					
ANR	3428082	Argument	session_key		3428067	1					
ANR	3428083	Identifier	session_key		3428067	0					
ANR	3428084	CompoundStatement		2:52:53:53	3428067	1					
ANR	3428085	ReturnStatement	return false ;	1235:2:34138:34150	3428067	0	True				
ANR	3428086	Identifier	false		3428067	0					
ANR	3428087	IdentifierDeclStatement	time_t cutoff_time = time ( 0 ) ;	1239:1:34184:34212	3428067	1	True				
ANR	3428088	IdentifierDecl	cutoff_time = time ( 0 )		3428067	0					
ANR	3428089	IdentifierDeclType	time_t		3428067	0					
ANR	3428090	Identifier	cutoff_time		3428067	1					
ANR	3428091	AssignmentExpression	cutoff_time = time ( 0 )		3428067	2		=			
ANR	3428092	Identifier	cutoff_time		3428067	0					
ANR	3428093	CallExpression	time ( 0 )		3428067	1					
ANR	3428094	Callee	time		3428067	0					
ANR	3428095	Identifier	time		3428067	0					
ANR	3428096	ArgumentList	0		3428067	1					
ANR	3428097	Argument	0		3428067	0					
ANR	3428098	PrimaryExpression	0		3428067	0					
ANR	3428099	IdentifierDeclStatement	time_t expiration = session_key -> expiration ( ) ;	1240:1:34215:34260	3428067	2	True				
ANR	3428100	IdentifierDecl	expiration = session_key -> expiration ( )		3428067	0					
ANR	3428101	IdentifierDeclType	time_t		3428067	0					
ANR	3428102	Identifier	expiration		3428067	1					
ANR	3428103	AssignmentExpression	expiration = session_key -> expiration ( )		3428067	2		=			
ANR	3428104	Identifier	expiration		3428067	0					
ANR	3428105	CallExpression	session_key -> expiration ( )		3428067	1					
ANR	3428106	Callee	session_key -> expiration		3428067	0					
ANR	3428107	PtrMemberAccess	session_key -> expiration		3428067	0					
ANR	3428108	Identifier	session_key		3428067	0					
ANR	3428109	Identifier	expiration		3428067	1					
ANR	3428110	ArgumentList			3428067	1					
ANR	3428111	IfStatement	if ( expiration && expiration <= cutoff_time )		3428067	3					
ANR	3428112	Condition	expiration && expiration <= cutoff_time	1241:5:34267:34305	3428067	0	True				
ANR	3428113	AndExpression	expiration && expiration <= cutoff_time		3428067	0		&&			
ANR	3428114	Identifier	expiration		3428067	0					
ANR	3428115	RelationalExpression	expiration <= cutoff_time		3428067	1		<=			
ANR	3428116	Identifier	expiration		3428067	0					
ANR	3428117	Identifier	cutoff_time		3428067	1					
ANR	3428118	CompoundStatement		9:46:227:227	3428067	1					
ANR	3428119	ExpressionStatement	session_cache -> expire ( session_key )	1242:2:34312:34346	3428067	0	True				
ANR	3428120	CallExpression	session_cache -> expire ( session_key )		3428067	0					
ANR	3428121	Callee	session_cache -> expire		3428067	0					
ANR	3428122	PtrMemberAccess	session_cache -> expire		3428067	0					
ANR	3428123	Identifier	session_cache		3428067	0					
ANR	3428124	Identifier	expire		3428067	1					
ANR	3428125	ArgumentList	session_key		3428067	1					
ANR	3428126	Argument	session_key		3428067	0					
ANR	3428127	Identifier	session_key		3428067	0					
ANR	3428128	ExpressionStatement	session_key = NULL	1243:2:34350:34368	3428067	1	True				
ANR	3428129	AssignmentExpression	session_key = NULL		3428067	0		=			
ANR	3428130	Identifier	session_key		3428067	0					
ANR	3428131	Identifier	NULL		3428067	1					
ANR	3428132	ReturnStatement	return false ;	1244:2:34372:34384	3428067	2	True				
ANR	3428133	Identifier	false		3428067	0					
ANR	3428134	ReturnStatement	return true ;	1246:1:34390:34401	3428067	4	True				
ANR	3428135	Identifier	true		3428067	0					
ANR	3428136	ReturnType	bool		3428067	1					
ANR	3428137	Identifier	SecMan :: LookupNonExpiredSession		3428067	2					
ANR	3428138	ParameterList	"char const * session_id , KeyCacheEntry * & session_key"		3428067	3					
ANR	3428139	Parameter	char const * session_id	1232:32:34027:34048	3428067	0	True				
ANR	3428140	ParameterType	char const *		3428067	0					
ANR	3428141	Identifier	session_id		3428067	1					
ANR	3428142	Parameter	KeyCacheEntry * & session_key	1232:56:34051:34077	3428067	1	True				
ANR	3428143	ParameterType	KeyCacheEntry * &		3428067	0					
ANR	3428144	Identifier	session_key		3428067	1					
ANR	3428145	CFGEntryNode	ENTRY		3428067		True				
ANR	3428146	CFGExitNode	EXIT		3428067		True				
ANR	3428147	Symbol	* session_cache		3428067						
ANR	3428148	Symbol	* session_key		3428067						
ANR	3428149	Symbol	NULL		3428067						
ANR	3428150	Symbol	false		3428067						
ANR	3428151	Symbol	session_id		3428067						
ANR	3428152	Symbol	session_cache -> lookup		3428067						
ANR	3428153	Symbol	session_cache		3428067						
ANR	3428154	Symbol	session_key -> expiration		3428067						
ANR	3428155	Symbol	session_key		3428067						
ANR	3428156	Symbol	true		3428067						
ANR	3428157	Symbol	expiration		3428067						
ANR	3428158	Symbol	time		3428067						
ANR	3428159	Symbol	cutoff_time		3428067						
ANR	3428160	Function	SecManStartCommand :: sendAuthInfo_inner	1249:0:34406:47624							
ANR	3428161	FunctionDef	SecManStartCommand :: sendAuthInfo_inner ()		3428160	0					
ANR	3428162	CompoundStatement		1251:0:34466:47624	3428160	0					
ANR	3428163	IdentifierDeclStatement	MyString sid ;	1255:1:34532:34544	3428160	0	True				
ANR	3428164	IdentifierDecl	sid		3428160	0					
ANR	3428165	IdentifierDeclType	MyString		3428160	0					
ANR	3428166	Identifier	sid		3428160	1					
ANR	3428167	ExpressionStatement	sid = m_sec_session_id_hint	1257:1:34548:34575	3428160	1	True				
ANR	3428168	AssignmentExpression	sid = m_sec_session_id_hint		3428160	0		=			
ANR	3428169	Identifier	sid		3428160	0					
ANR	3428170	Identifier	m_sec_session_id_hint		3428160	1					
ANR	3428171	IfStatement	if ( sid . Value ( ) [ 0 ] && ! m_raw_protocol && ! m_use_tmp_sec_session )		3428160	2					
ANR	3428172	Condition	sid . Value ( ) [ 0 ] && ! m_raw_protocol && ! m_use_tmp_sec_session	1258:5:34582:34640	3428160	0	True				
ANR	3428173	AndExpression	sid . Value ( ) [ 0 ] && ! m_raw_protocol && ! m_use_tmp_sec_session		3428160	0		&&			
ANR	3428174	ArrayIndexing	sid . Value ( ) [ 0 ]		3428160	0					
ANR	3428175	CallExpression	sid . Value ( )		3428160	0					
ANR	3428176	Callee	sid . Value		3428160	0					
ANR	3428177	MemberAccess	sid . Value		3428160	0					
ANR	3428178	Identifier	sid		3428160	0					
ANR	3428179	Identifier	Value		3428160	1					
ANR	3428180	ArgumentList			3428160	1					
ANR	3428181	PrimaryExpression	0		3428160	1					
ANR	3428182	AndExpression	! m_raw_protocol && ! m_use_tmp_sec_session		3428160	1		&&			
ANR	3428183	UnaryOperationExpression	! m_raw_protocol		3428160	0					
ANR	3428184	UnaryOperator	!		3428160	0					
ANR	3428185	Identifier	m_raw_protocol		3428160	1					
ANR	3428186	UnaryOperationExpression	! m_use_tmp_sec_session		3428160	1					
ANR	3428187	UnaryOperator	!		3428160	0					
ANR	3428188	Identifier	m_use_tmp_sec_session		3428160	1					
ANR	3428189	CompoundStatement		8:67:177:177	3428160	1					
ANR	3428190	ExpressionStatement	"m_have_session = m_sec_man . LookupNonExpiredSession ( sid . Value ( ) , m_enc_key )"	1259:2:34648:34722	3428160	0	True				
ANR	3428191	AssignmentExpression	"m_have_session = m_sec_man . LookupNonExpiredSession ( sid . Value ( ) , m_enc_key )"		3428160	0		=			
ANR	3428192	Identifier	m_have_session		3428160	0					
ANR	3428193	CallExpression	"m_sec_man . LookupNonExpiredSession ( sid . Value ( ) , m_enc_key )"		3428160	1					
ANR	3428194	Callee	m_sec_man . LookupNonExpiredSession		3428160	0					
ANR	3428195	MemberAccess	m_sec_man . LookupNonExpiredSession		3428160	0					
ANR	3428196	Identifier	m_sec_man		3428160	0					
ANR	3428197	Identifier	LookupNonExpiredSession		3428160	1					
ANR	3428198	ArgumentList	sid . Value ( )		3428160	1					
ANR	3428199	Argument	sid . Value ( )		3428160	0					
ANR	3428200	CallExpression	sid . Value ( )		3428160	0					
ANR	3428201	Callee	sid . Value		3428160	0					
ANR	3428202	MemberAccess	sid . Value		3428160	0					
ANR	3428203	Identifier	sid		3428160	0					
ANR	3428204	Identifier	Value		3428160	1					
ANR	3428205	ArgumentList			3428160	1					
ANR	3428206	Argument	m_enc_key		3428160	1					
ANR	3428207	Identifier	m_enc_key		3428160	0					
ANR	3428208	IfStatement	if ( m_have_session )		3428160	1					
ANR	3428209	Condition	m_have_session	1260:6:34730:34743	3428160	0	True				
ANR	3428210	Identifier	m_have_session		3428160	0					
ANR	3428211	CompoundStatement		10:23:280:280	3428160	1					
ANR	3428212	ExpressionStatement	"dprintf ( D_SECURITY , ""Using requested session %s.\\n"" , sid . Value ( ) )"	1261:3:34752:34815	3428160	0	True				
ANR	3428213	CallExpression	"dprintf ( D_SECURITY , ""Using requested session %s.\\n"" , sid . Value ( ) )"		3428160	0					
ANR	3428214	Callee	dprintf		3428160	0					
ANR	3428215	Identifier	dprintf		3428160	0					
ANR	3428216	ArgumentList	D_SECURITY		3428160	1					
ANR	3428217	Argument	D_SECURITY		3428160	0					
ANR	3428218	Identifier	D_SECURITY		3428160	0					
ANR	3428219	Argument	"""Using requested session %s.\\n"""		3428160	1					
ANR	3428220	PrimaryExpression	"""Using requested session %s.\\n"""		3428160	0					
ANR	3428221	Argument	sid . Value ( )		3428160	2					
ANR	3428222	CallExpression	sid . Value ( )		3428160	0					
ANR	3428223	Callee	sid . Value		3428160	0					
ANR	3428224	MemberAccess	sid . Value		3428160	0					
ANR	3428225	Identifier	sid		3428160	0					
ANR	3428226	Identifier	Value		3428160	1					
ANR	3428227	ArgumentList			3428160	1					
ANR	3428228	ElseStatement	else		3428160	0					
ANR	3428229	CompoundStatement		13:7:361:361	3428160	0					
ANR	3428230	ExpressionStatement	"dprintf ( D_SECURITY , ""Ignoring requested session, because it does not exist: %s\\n"" , sid . Value ( ) )"	1264:3:34833:34926	3428160	0	True				
ANR	3428231	CallExpression	"dprintf ( D_SECURITY , ""Ignoring requested session, because it does not exist: %s\\n"" , sid . Value ( ) )"		3428160	0					
ANR	3428232	Callee	dprintf		3428160	0					
ANR	3428233	Identifier	dprintf		3428160	0					
ANR	3428234	ArgumentList	D_SECURITY		3428160	1					
ANR	3428235	Argument	D_SECURITY		3428160	0					
ANR	3428236	Identifier	D_SECURITY		3428160	0					
ANR	3428237	Argument	"""Ignoring requested session, because it does not exist: %s\\n"""		3428160	1					
ANR	3428238	PrimaryExpression	"""Ignoring requested session, because it does not exist: %s\\n"""		3428160	0					
ANR	3428239	Argument	sid . Value ( )		3428160	2					
ANR	3428240	CallExpression	sid . Value ( )		3428160	0					
ANR	3428241	Callee	sid . Value		3428160	0					
ANR	3428242	MemberAccess	sid . Value		3428160	0					
ANR	3428243	Identifier	sid		3428160	0					
ANR	3428244	Identifier	Value		3428160	1					
ANR	3428245	ArgumentList			3428160	1					
ANR	3428246	ExpressionStatement	"m_session_key . sprintf ( ""{%s,<%i>}"" , m_sock -> get_connect_addr ( ) , m_cmd )"	1268:1:34937:35007	3428160	3	True				
ANR	3428247	CallExpression	"m_session_key . sprintf ( ""{%s,<%i>}"" , m_sock -> get_connect_addr ( ) , m_cmd )"		3428160	0					
ANR	3428248	Callee	m_session_key . sprintf		3428160	0					
ANR	3428249	MemberAccess	m_session_key . sprintf		3428160	0					
ANR	3428250	Identifier	m_session_key		3428160	0					
ANR	3428251	Identifier	sprintf		3428160	1					
ANR	3428252	ArgumentList	"""{%s,<%i>}"""		3428160	1					
ANR	3428253	Argument	"""{%s,<%i>}"""		3428160	0					
ANR	3428254	PrimaryExpression	"""{%s,<%i>}"""		3428160	0					
ANR	3428255	Argument	m_sock -> get_connect_addr ( )		3428160	1					
ANR	3428256	CallExpression	m_sock -> get_connect_addr ( )		3428160	0					
ANR	3428257	Callee	m_sock -> get_connect_addr		3428160	0					
ANR	3428258	PtrMemberAccess	m_sock -> get_connect_addr		3428160	0					
ANR	3428259	Identifier	m_sock		3428160	0					
ANR	3428260	Identifier	get_connect_addr		3428160	1					
ANR	3428261	ArgumentList			3428160	1					
ANR	3428262	Argument	m_cmd		3428160	2					
ANR	3428263	Identifier	m_cmd		3428160	0					
ANR	3428264	IdentifierDeclStatement	bool found_map_ent = false ;	1269:1:35010:35036	3428160	4	True				
ANR	3428265	IdentifierDecl	found_map_ent = false		3428160	0					
ANR	3428266	IdentifierDeclType	bool		3428160	0					
ANR	3428267	Identifier	found_map_ent		3428160	1					
ANR	3428268	AssignmentExpression	found_map_ent = false		3428160	2		=			
ANR	3428269	Identifier	false		3428160	0					
ANR	3428270	Identifier	false		3428160	1					
ANR	3428271	IfStatement	if ( ! m_have_session && ! m_raw_protocol && ! m_use_tmp_sec_session )		3428160	5					
ANR	3428272	Condition	! m_have_session && ! m_raw_protocol && ! m_use_tmp_sec_session	1270:5:35043:35102	3428160	0	True				
ANR	3428273	AndExpression	! m_have_session && ! m_raw_protocol && ! m_use_tmp_sec_session		3428160	0		&&			
ANR	3428274	UnaryOperationExpression	! m_have_session		3428160	0					
ANR	3428275	UnaryOperator	!		3428160	0					
ANR	3428276	Identifier	m_have_session		3428160	1					
ANR	3428277	AndExpression	! m_raw_protocol && ! m_use_tmp_sec_session		3428160	1		&&			
ANR	3428278	UnaryOperationExpression	! m_raw_protocol		3428160	0					
ANR	3428279	UnaryOperator	!		3428160	0					
ANR	3428280	Identifier	m_raw_protocol		3428160	1					
ANR	3428281	UnaryOperationExpression	! m_use_tmp_sec_session		3428160	1					
ANR	3428282	UnaryOperator	!		3428160	0					
ANR	3428283	Identifier	m_use_tmp_sec_session		3428160	1					
ANR	3428284	CompoundStatement		20:68:639:639	3428160	1					
ANR	3428285	ExpressionStatement	"found_map_ent = ( m_sec_man . command_map -> lookup ( m_session_key , sid ) == 0 )"	1271:2:35110:35182	3428160	0	True				
ANR	3428286	AssignmentExpression	"found_map_ent = ( m_sec_man . command_map -> lookup ( m_session_key , sid ) == 0 )"		3428160	0		=			
ANR	3428287	Identifier	found_map_ent		3428160	0					
ANR	3428288	EqualityExpression	"m_sec_man . command_map -> lookup ( m_session_key , sid ) == 0"		3428160	1		==			
ANR	3428289	CallExpression	"m_sec_man . command_map -> lookup ( m_session_key , sid )"		3428160	0					
ANR	3428290	Callee	m_sec_man . command_map -> lookup		3428160	0					
ANR	3428291	PtrMemberAccess	m_sec_man . command_map -> lookup		3428160	0					
ANR	3428292	MemberAccess	m_sec_man . command_map		3428160	0					
ANR	3428293	Identifier	m_sec_man		3428160	0					
ANR	3428294	Identifier	command_map		3428160	1					
ANR	3428295	Identifier	lookup		3428160	1					
ANR	3428296	ArgumentList	m_session_key		3428160	1					
ANR	3428297	Argument	m_session_key		3428160	0					
ANR	3428298	Identifier	m_session_key		3428160	0					
ANR	3428299	Argument	sid		3428160	1					
ANR	3428300	Identifier	sid		3428160	0					
ANR	3428301	PrimaryExpression	0		3428160	1					
ANR	3428302	IfStatement	if ( found_map_ent )		3428160	6					
ANR	3428303	Condition	found_map_ent	1273:5:35192:35204	3428160	0	True				
ANR	3428304	Identifier	found_map_ent		3428160	0					
ANR	3428305	CompoundStatement		23:20:740:740	3428160	1					
ANR	3428306	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: using session %s for %s.\\n"" , sid . Value ( ) , m_session_key . Value ( ) )"	1274:2:35211:35305	3428160	0	True				
ANR	3428307	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: using session %s for %s.\\n"" , sid . Value ( ) , m_session_key . Value ( ) )"		3428160	0					
ANR	3428308	Callee	dprintf		3428160	0					
ANR	3428309	Identifier	dprintf		3428160	0					
ANR	3428310	ArgumentList	D_SECURITY		3428160	1					
ANR	3428311	Argument	D_SECURITY		3428160	0					
ANR	3428312	Identifier	D_SECURITY		3428160	0					
ANR	3428313	Argument	"""SECMAN: using session %s for %s.\\n"""		3428160	1					
ANR	3428314	PrimaryExpression	"""SECMAN: using session %s for %s.\\n"""		3428160	0					
ANR	3428315	Argument	sid . Value ( )		3428160	2					
ANR	3428316	CallExpression	sid . Value ( )		3428160	0					
ANR	3428317	Callee	sid . Value		3428160	0					
ANR	3428318	MemberAccess	sid . Value		3428160	0					
ANR	3428319	Identifier	sid		3428160	0					
ANR	3428320	Identifier	Value		3428160	1					
ANR	3428321	ArgumentList			3428160	1					
ANR	3428322	Argument	m_session_key . Value ( )		3428160	3					
ANR	3428323	CallExpression	m_session_key . Value ( )		3428160	0					
ANR	3428324	Callee	m_session_key . Value		3428160	0					
ANR	3428325	MemberAccess	m_session_key . Value		3428160	0					
ANR	3428326	Identifier	m_session_key		3428160	0					
ANR	3428327	Identifier	Value		3428160	1					
ANR	3428328	ArgumentList			3428160	1					
ANR	3428329	ExpressionStatement	"m_have_session = m_sec_man . LookupNonExpiredSession ( sid . Value ( ) , m_enc_key )"	1276:2:35373:35447	3428160	1	True				
ANR	3428330	AssignmentExpression	"m_have_session = m_sec_man . LookupNonExpiredSession ( sid . Value ( ) , m_enc_key )"		3428160	0		=			
ANR	3428331	Identifier	m_have_session		3428160	0					
ANR	3428332	CallExpression	"m_sec_man . LookupNonExpiredSession ( sid . Value ( ) , m_enc_key )"		3428160	1					
ANR	3428333	Callee	m_sec_man . LookupNonExpiredSession		3428160	0					
ANR	3428334	MemberAccess	m_sec_man . LookupNonExpiredSession		3428160	0					
ANR	3428335	Identifier	m_sec_man		3428160	0					
ANR	3428336	Identifier	LookupNonExpiredSession		3428160	1					
ANR	3428337	ArgumentList	sid . Value ( )		3428160	1					
ANR	3428338	Argument	sid . Value ( )		3428160	0					
ANR	3428339	CallExpression	sid . Value ( )		3428160	0					
ANR	3428340	Callee	sid . Value		3428160	0					
ANR	3428341	MemberAccess	sid . Value		3428160	0					
ANR	3428342	Identifier	sid		3428160	0					
ANR	3428343	Identifier	Value		3428160	1					
ANR	3428344	ArgumentList			3428160	1					
ANR	3428345	Argument	m_enc_key		3428160	1					
ANR	3428346	Identifier	m_enc_key		3428160	0					
ANR	3428347	IfStatement	if ( ! m_have_session )		3428160	2					
ANR	3428348	Condition	! m_have_session	1278:5:35455:35469	3428160	0	True				
ANR	3428349	UnaryOperationExpression	! m_have_session		3428160	0					
ANR	3428350	UnaryOperator	!		3428160	0					
ANR	3428351	Identifier	m_have_session		3428160	1					
ANR	3428352	CompoundStatement		28:22:1005:1005	3428160	1					
ANR	3428353	IfStatement	if ( m_sec_man . command_map -> remove ( m_session_key . Value ( ) ) == 0 )		3428160	0					
ANR	3428354	Condition	m_sec_man . command_map -> remove ( m_session_key . Value ( ) ) == 0	1282:7:35659:35715	3428160	0	True				
ANR	3428355	EqualityExpression	m_sec_man . command_map -> remove ( m_session_key . Value ( ) ) == 0		3428160	0		==			
ANR	3428356	CallExpression	m_sec_man . command_map -> remove ( m_session_key . Value ( ) )		3428160	0					
ANR	3428357	Callee	m_sec_man . command_map -> remove		3428160	0					
ANR	3428358	PtrMemberAccess	m_sec_man . command_map -> remove		3428160	0					
ANR	3428359	MemberAccess	m_sec_man . command_map		3428160	0					
ANR	3428360	Identifier	m_sec_man		3428160	0					
ANR	3428361	Identifier	command_map		3428160	1					
ANR	3428362	Identifier	remove		3428160	1					
ANR	3428363	ArgumentList	m_session_key . Value ( )		3428160	1					
ANR	3428364	Argument	m_session_key . Value ( )		3428160	0					
ANR	3428365	CallExpression	m_session_key . Value ( )		3428160	0					
ANR	3428366	Callee	m_session_key . Value		3428160	0					
ANR	3428367	MemberAccess	m_session_key . Value		3428160	0					
ANR	3428368	Identifier	m_session_key		3428160	0					
ANR	3428369	Identifier	Value		3428160	1					
ANR	3428370	ArgumentList			3428160	1					
ANR	3428371	PrimaryExpression	0		3428160	1					
ANR	3428372	CompoundStatement		32:66:1251:1251	3428160	1					
ANR	3428373	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: session id %s not found, removed %s from map.\\n"" , sid . Value ( ) , m_session_key . Value ( ) )"	1283:4:35724:35839	3428160	0	True				
ANR	3428374	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: session id %s not found, removed %s from map.\\n"" , sid . Value ( ) , m_session_key . Value ( ) )"		3428160	0					
ANR	3428375	Callee	dprintf		3428160	0					
ANR	3428376	Identifier	dprintf		3428160	0					
ANR	3428377	ArgumentList	D_SECURITY		3428160	1					
ANR	3428378	Argument	D_SECURITY		3428160	0					
ANR	3428379	Identifier	D_SECURITY		3428160	0					
ANR	3428380	Argument	"""SECMAN: session id %s not found, removed %s from map.\\n"""		3428160	1					
ANR	3428381	PrimaryExpression	"""SECMAN: session id %s not found, removed %s from map.\\n"""		3428160	0					
ANR	3428382	Argument	sid . Value ( )		3428160	2					
ANR	3428383	CallExpression	sid . Value ( )		3428160	0					
ANR	3428384	Callee	sid . Value		3428160	0					
ANR	3428385	MemberAccess	sid . Value		3428160	0					
ANR	3428386	Identifier	sid		3428160	0					
ANR	3428387	Identifier	Value		3428160	1					
ANR	3428388	ArgumentList			3428160	1					
ANR	3428389	Argument	m_session_key . Value ( )		3428160	3					
ANR	3428390	CallExpression	m_session_key . Value ( )		3428160	0					
ANR	3428391	Callee	m_session_key . Value		3428160	0					
ANR	3428392	MemberAccess	m_session_key . Value		3428160	0					
ANR	3428393	Identifier	m_session_key		3428160	0					
ANR	3428394	Identifier	Value		3428160	1					
ANR	3428395	ArgumentList			3428160	1					
ANR	3428396	ElseStatement	else		3428160	0					
ANR	3428397	CompoundStatement		34:10:1384:1384	3428160	0					
ANR	3428398	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: session id %s not found and failed to removed %s from map!\\n"" , sid . Value ( ) , m_session_key . Value ( ) )"	1285:4:35857:35985	3428160	0	True				
ANR	3428399	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: session id %s not found and failed to removed %s from map!\\n"" , sid . Value ( ) , m_session_key . Value ( ) )"		3428160	0					
ANR	3428400	Callee	dprintf		3428160	0					
ANR	3428401	Identifier	dprintf		3428160	0					
ANR	3428402	ArgumentList	D_SECURITY		3428160	1					
ANR	3428403	Argument	D_SECURITY		3428160	0					
ANR	3428404	Identifier	D_SECURITY		3428160	0					
ANR	3428405	Argument	"""SECMAN: session id %s not found and failed to removed %s from map!\\n"""		3428160	1					
ANR	3428406	PrimaryExpression	"""SECMAN: session id %s not found and failed to removed %s from map!\\n"""		3428160	0					
ANR	3428407	Argument	sid . Value ( )		3428160	2					
ANR	3428408	CallExpression	sid . Value ( )		3428160	0					
ANR	3428409	Callee	sid . Value		3428160	0					
ANR	3428410	MemberAccess	sid . Value		3428160	0					
ANR	3428411	Identifier	sid		3428160	0					
ANR	3428412	Identifier	Value		3428160	1					
ANR	3428413	ArgumentList			3428160	1					
ANR	3428414	Argument	m_session_key . Value ( )		3428160	3					
ANR	3428415	CallExpression	m_session_key . Value ( )		3428160	0					
ANR	3428416	Callee	m_session_key . Value		3428160	0					
ANR	3428417	MemberAccess	m_session_key . Value		3428160	0					
ANR	3428418	Identifier	m_session_key		3428160	0					
ANR	3428419	Identifier	Value		3428160	1					
ANR	3428420	ArgumentList			3428160	1					
ANR	3428421	IfStatement	if ( m_have_session )		3428160	7					
ANR	3428422	Condition	m_have_session	1293:5:36193:36206	3428160	0	True				
ANR	3428423	Identifier	m_have_session		3428160	0					
ANR	3428424	CompoundStatement		43:21:1742:1742	3428160	1					
ANR	3428425	ExpressionStatement	"MergeClassAds ( & m_auth_info , m_enc_key -> policy ( ) , true )"	1294:2:36213:36269	3428160	0	True				
ANR	3428426	CallExpression	"MergeClassAds ( & m_auth_info , m_enc_key -> policy ( ) , true )"		3428160	0					
ANR	3428427	Callee	MergeClassAds		3428160	0					
ANR	3428428	Identifier	MergeClassAds		3428160	0					
ANR	3428429	ArgumentList	& m_auth_info		3428160	1					
ANR	3428430	Argument	& m_auth_info		3428160	0					
ANR	3428431	UnaryOperationExpression	& m_auth_info		3428160	0					
ANR	3428432	UnaryOperator	&		3428160	0					
ANR	3428433	Identifier	m_auth_info		3428160	1					
ANR	3428434	Argument	m_enc_key -> policy ( )		3428160	1					
ANR	3428435	CallExpression	m_enc_key -> policy ( )		3428160	0					
ANR	3428436	Callee	m_enc_key -> policy		3428160	0					
ANR	3428437	PtrMemberAccess	m_enc_key -> policy		3428160	0					
ANR	3428438	Identifier	m_enc_key		3428160	0					
ANR	3428439	Identifier	policy		3428160	1					
ANR	3428440	ArgumentList			3428160	1					
ANR	3428441	Argument	true		3428160	2					
ANR	3428442	Identifier	true		3428160	0					
ANR	3428443	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3428160	1					
ANR	3428444	Condition	DebugFlags & D_FULLDEBUG	1296:6:36278:36301	3428160	0	True				
ANR	3428445	BitAndExpression	DebugFlags & D_FULLDEBUG		3428160	0		&			
ANR	3428446	Identifier	DebugFlags		3428160	0					
ANR	3428447	Identifier	D_FULLDEBUG		3428160	1					
ANR	3428448	CompoundStatement		46:32:1837:1837	3428160	1					
ANR	3428449	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: found cached session id %s for %s.\\n"" , m_enc_key -> id ( ) , m_session_key . Value ( ) )"	1297:3:36309:36422	3428160	0	True				
ANR	3428450	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: found cached session id %s for %s.\\n"" , m_enc_key -> id ( ) , m_session_key . Value ( ) )"		3428160	0					
ANR	3428451	Callee	dprintf		3428160	0					
ANR	3428452	Identifier	dprintf		3428160	0					
ANR	3428453	ArgumentList	D_SECURITY		3428160	1					
ANR	3428454	Argument	D_SECURITY		3428160	0					
ANR	3428455	Identifier	D_SECURITY		3428160	0					
ANR	3428456	Argument	"""SECMAN: found cached session id %s for %s.\\n"""		3428160	1					
ANR	3428457	PrimaryExpression	"""SECMAN: found cached session id %s for %s.\\n"""		3428160	0					
ANR	3428458	Argument	m_enc_key -> id ( )		3428160	2					
ANR	3428459	CallExpression	m_enc_key -> id ( )		3428160	0					
ANR	3428460	Callee	m_enc_key -> id		3428160	0					
ANR	3428461	PtrMemberAccess	m_enc_key -> id		3428160	0					
ANR	3428462	Identifier	m_enc_key		3428160	0					
ANR	3428463	Identifier	id		3428160	1					
ANR	3428464	ArgumentList			3428160	1					
ANR	3428465	Argument	m_session_key . Value ( )		3428160	3					
ANR	3428466	CallExpression	m_session_key . Value ( )		3428160	0					
ANR	3428467	Callee	m_session_key . Value		3428160	0					
ANR	3428468	MemberAccess	m_session_key . Value		3428160	0					
ANR	3428469	Identifier	m_session_key		3428160	0					
ANR	3428470	Identifier	Value		3428160	1					
ANR	3428471	ArgumentList			3428160	1					
ANR	3428472	ExpressionStatement	"m_sec_man . key_printf ( D_SECURITY , m_enc_key -> key ( ) )"	1299:3:36427:36477	3428160	1	True				
ANR	3428473	CallExpression	"m_sec_man . key_printf ( D_SECURITY , m_enc_key -> key ( ) )"		3428160	0					
ANR	3428474	Callee	m_sec_man . key_printf		3428160	0					
ANR	3428475	MemberAccess	m_sec_man . key_printf		3428160	0					
ANR	3428476	Identifier	m_sec_man		3428160	0					
ANR	3428477	Identifier	key_printf		3428160	1					
ANR	3428478	ArgumentList	D_SECURITY		3428160	1					
ANR	3428479	Argument	D_SECURITY		3428160	0					
ANR	3428480	Identifier	D_SECURITY		3428160	0					
ANR	3428481	Argument	m_enc_key -> key ( )		3428160	1					
ANR	3428482	CallExpression	m_enc_key -> key ( )		3428160	0					
ANR	3428483	Callee	m_enc_key -> key		3428160	0					
ANR	3428484	PtrMemberAccess	m_enc_key -> key		3428160	0					
ANR	3428485	Identifier	m_enc_key		3428160	0					
ANR	3428486	Identifier	key		3428160	1					
ANR	3428487	ArgumentList			3428160	1					
ANR	3428488	ExpressionStatement	m_auth_info . dPrint ( D_SECURITY )	1300:3:36482:36514	3428160	2	True				
ANR	3428489	CallExpression	m_auth_info . dPrint ( D_SECURITY )		3428160	0					
ANR	3428490	Callee	m_auth_info . dPrint		3428160	0					
ANR	3428491	MemberAccess	m_auth_info . dPrint		3428160	0					
ANR	3428492	Identifier	m_auth_info		3428160	0					
ANR	3428493	Identifier	dPrint		3428160	1					
ANR	3428494	ArgumentList	D_SECURITY		3428160	1					
ANR	3428495	Argument	D_SECURITY		3428160	0					
ANR	3428496	Identifier	D_SECURITY		3428160	0					
ANR	3428497	ExpressionStatement	m_enc_key -> renewLease ( )	1308:2:36881:36904	3428160	2	True				
ANR	3428498	CallExpression	m_enc_key -> renewLease ( )		3428160	0					
ANR	3428499	Callee	m_enc_key -> renewLease		3428160	0					
ANR	3428500	PtrMemberAccess	m_enc_key -> renewLease		3428160	0					
ANR	3428501	Identifier	m_enc_key		3428160	0					
ANR	3428502	Identifier	renewLease		3428160	1					
ANR	3428503	ArgumentList			3428160	1					
ANR	3428504	ExpressionStatement	m_new_session = false	1310:2:36909:36930	3428160	3	True				
ANR	3428505	AssignmentExpression	m_new_session = false		3428160	0		=			
ANR	3428506	Identifier	m_new_session		3428160	0					
ANR	3428507	Identifier	false		3428160	1					
ANR	3428508	ElseStatement	else		3428160	0					
ANR	3428509	CompoundStatement		61:8:2473:2473	3428160	0					
ANR	3428510	IfStatement	"if ( ! m_sec_man . FillInSecurityPolicyAd ( CLIENT_PERM , & m_auth_info , m_raw_protocol , m_use_tmp_sec_session ) )"		3428160	0					
ANR	3428511	Condition	"! m_sec_man . FillInSecurityPolicyAd ( CLIENT_PERM , & m_auth_info , m_raw_protocol , m_use_tmp_sec_session )"	1312:6:36948:37055	3428160	0	True				
ANR	3428512	UnaryOperationExpression	"! m_sec_man . FillInSecurityPolicyAd ( CLIENT_PERM , & m_auth_info , m_raw_protocol , m_use_tmp_sec_session )"		3428160	0					
ANR	3428513	UnaryOperator	!		3428160	0					
ANR	3428514	CallExpression	"m_sec_man . FillInSecurityPolicyAd ( CLIENT_PERM , & m_auth_info , m_raw_protocol , m_use_tmp_sec_session )"		3428160	1					
ANR	3428515	Callee	m_sec_man . FillInSecurityPolicyAd		3428160	0					
ANR	3428516	MemberAccess	m_sec_man . FillInSecurityPolicyAd		3428160	0					
ANR	3428517	Identifier	m_sec_man		3428160	0					
ANR	3428518	Identifier	FillInSecurityPolicyAd		3428160	1					
ANR	3428519	ArgumentList	CLIENT_PERM		3428160	1					
ANR	3428520	Argument	CLIENT_PERM		3428160	0					
ANR	3428521	Identifier	CLIENT_PERM		3428160	0					
ANR	3428522	Argument	& m_auth_info		3428160	1					
ANR	3428523	UnaryOperationExpression	& m_auth_info		3428160	0					
ANR	3428524	UnaryOperator	&		3428160	0					
ANR	3428525	Identifier	m_auth_info		3428160	1					
ANR	3428526	Argument	m_raw_protocol		3428160	2					
ANR	3428527	Identifier	m_raw_protocol		3428160	0					
ANR	3428528	Argument	m_use_tmp_sec_session		3428160	3					
ANR	3428529	Identifier	m_use_tmp_sec_session		3428160	0					
ANR	3428530	CompoundStatement		65:2:2594:2594	3428160	1					
ANR	3428531	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: ERROR: The security policy is invalid.\\n"" )"	1317:3:37111:37189	3428160	0	True				
ANR	3428532	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: ERROR: The security policy is invalid.\\n"" )"		3428160	0					
ANR	3428533	Callee	dprintf		3428160	0					
ANR	3428534	Identifier	dprintf		3428160	0					
ANR	3428535	ArgumentList	D_ALWAYS		3428160	1					
ANR	3428536	Argument	D_ALWAYS		3428160	0					
ANR	3428537	Identifier	D_ALWAYS		3428160	0					
ANR	3428538	Argument	"""SECMAN: ERROR: The security policy is invalid.\\n"""		3428160	1					
ANR	3428539	PrimaryExpression	"""SECMAN: ERROR: The security policy is invalid.\\n"""		3428160	0					
ANR	3428540	ExpressionStatement	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_INVALID_POLICY , ""Configuration Problem: The security policy is invalid."" )"	1319:3:37194:37310	3428160	1	True				
ANR	3428541	CallExpression	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_INVALID_POLICY , ""Configuration Problem: The security policy is invalid."" )"		3428160	0					
ANR	3428542	Callee	m_errstack -> push		3428160	0					
ANR	3428543	PtrMemberAccess	m_errstack -> push		3428160	0					
ANR	3428544	Identifier	m_errstack		3428160	0					
ANR	3428545	Identifier	push		3428160	1					
ANR	3428546	ArgumentList	"""SECMAN"""		3428160	1					
ANR	3428547	Argument	"""SECMAN"""		3428160	0					
ANR	3428548	PrimaryExpression	"""SECMAN"""		3428160	0					
ANR	3428549	Argument	SECMAN_ERR_INVALID_POLICY		3428160	1					
ANR	3428550	Identifier	SECMAN_ERR_INVALID_POLICY		3428160	0					
ANR	3428551	Argument	"""Configuration Problem: The security policy is invalid."""		3428160	2					
ANR	3428552	PrimaryExpression	"""Configuration Problem: The security policy is invalid."""		3428160	0					
ANR	3428553	ReturnStatement	return StartCommandFailed ;	1321:3:37315:37340	3428160	2	True				
ANR	3428554	Identifier	StartCommandFailed		3428160	0					
ANR	3428555	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3428160	1					
ANR	3428556	Condition	DebugFlags & D_FULLDEBUG	1324:6:37353:37376	3428160	0	True				
ANR	3428557	BitAndExpression	DebugFlags & D_FULLDEBUG		3428160	0		&			
ANR	3428558	Identifier	DebugFlags		3428160	0					
ANR	3428559	Identifier	D_FULLDEBUG		3428160	1					
ANR	3428560	CompoundStatement		74:32:2912:2912	3428160	1					
ANR	3428561	IfStatement	if ( m_use_tmp_sec_session )		3428160	0					
ANR	3428562	Condition	m_use_tmp_sec_session	1325:7:37388:37408	3428160	0	True				
ANR	3428563	Identifier	m_use_tmp_sec_session		3428160	0					
ANR	3428564	CompoundStatement		75:31:2945:2945	3428160	1					
ANR	3428565	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: using temporary security session for %s.\\n"" , m_session_key . Value ( ) )"	1326:4:37418:37516	3428160	0	True				
ANR	3428566	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: using temporary security session for %s.\\n"" , m_session_key . Value ( ) )"		3428160	0					
ANR	3428567	Callee	dprintf		3428160	0					
ANR	3428568	Identifier	dprintf		3428160	0					
ANR	3428569	ArgumentList	D_SECURITY		3428160	1					
ANR	3428570	Argument	D_SECURITY		3428160	0					
ANR	3428571	Identifier	D_SECURITY		3428160	0					
ANR	3428572	Argument	"""SECMAN: using temporary security session for %s.\\n"""		3428160	1					
ANR	3428573	PrimaryExpression	"""SECMAN: using temporary security session for %s.\\n"""		3428160	0					
ANR	3428574	Argument	m_session_key . Value ( )		3428160	2					
ANR	3428575	CallExpression	m_session_key . Value ( )		3428160	0					
ANR	3428576	Callee	m_session_key . Value		3428160	0					
ANR	3428577	MemberAccess	m_session_key . Value		3428160	0					
ANR	3428578	Identifier	m_session_key		3428160	0					
ANR	3428579	Identifier	Value		3428160	1					
ANR	3428580	ArgumentList			3428160	1					
ANR	3428581	ElseStatement	else		3428160	0					
ANR	3428582	CompoundStatement		78:8:3064:3064	3428160	0					
ANR	3428583	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: no cached key for %s.\\n"" , m_session_key . Value ( ) )"	1329:4:37537:37615	3428160	0	True				
ANR	3428584	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: no cached key for %s.\\n"" , m_session_key . Value ( ) )"		3428160	0					
ANR	3428585	Callee	dprintf		3428160	0					
ANR	3428586	Identifier	dprintf		3428160	0					
ANR	3428587	ArgumentList	D_SECURITY		3428160	1					
ANR	3428588	Argument	D_SECURITY		3428160	0					
ANR	3428589	Identifier	D_SECURITY		3428160	0					
ANR	3428590	Argument	"""SECMAN: no cached key for %s.\\n"""		3428160	1					
ANR	3428591	PrimaryExpression	"""SECMAN: no cached key for %s.\\n"""		3428160	0					
ANR	3428592	Argument	m_session_key . Value ( )		3428160	2					
ANR	3428593	CallExpression	m_session_key . Value ( )		3428160	0					
ANR	3428594	Callee	m_session_key . Value		3428160	0					
ANR	3428595	MemberAccess	m_session_key . Value		3428160	0					
ANR	3428596	Identifier	m_session_key		3428160	0					
ANR	3428597	Identifier	Value		3428160	1					
ANR	3428598	ArgumentList			3428160	1					
ANR	3428599	IfStatement	if ( m_is_tcp )		3428160	2					
ANR	3428600	Condition	m_is_tcp	1334:6:37657:37664	3428160	0	True				
ANR	3428601	Identifier	m_is_tcp		3428160	0					
ANR	3428602	CompoundStatement		84:16:3200:3200	3428160	1					
ANR	3428603	ExpressionStatement	m_new_session = true	1336:3:37718:37738	3428160	0	True				
ANR	3428604	AssignmentExpression	m_new_session = true		3428160	0		=			
ANR	3428605	Identifier	m_new_session		3428160	0					
ANR	3428606	Identifier	true		3428160	1					
ANR	3428607	ExpressionStatement	"m_auth_info . Assign ( ATTR_SEC_NEW_SESSION , ""YES"" )"	1337:3:37743:37789	3428160	1	True				
ANR	3428608	CallExpression	"m_auth_info . Assign ( ATTR_SEC_NEW_SESSION , ""YES"" )"		3428160	0					
ANR	3428609	Callee	m_auth_info . Assign		3428160	0					
ANR	3428610	MemberAccess	m_auth_info . Assign		3428160	0					
ANR	3428611	Identifier	m_auth_info		3428160	0					
ANR	3428612	Identifier	Assign		3428160	1					
ANR	3428613	ArgumentList	ATTR_SEC_NEW_SESSION		3428160	1					
ANR	3428614	Argument	ATTR_SEC_NEW_SESSION		3428160	0					
ANR	3428615	Identifier	ATTR_SEC_NEW_SESSION		3428160	0					
ANR	3428616	Argument	"""YES"""		3428160	1					
ANR	3428617	PrimaryExpression	"""YES"""		3428160	0					
ANR	3428618	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3428160	8					
ANR	3428619	Condition	DebugFlags & D_FULLDEBUG	1342:5:37806:37829	3428160	0	True				
ANR	3428620	BitAndExpression	DebugFlags & D_FULLDEBUG		3428160	0		&			
ANR	3428621	Identifier	DebugFlags		3428160	0					
ANR	3428622	Identifier	D_FULLDEBUG		3428160	1					
ANR	3428623	CompoundStatement		92:31:3365:3365	3428160	1					
ANR	3428624	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: Security Policy:\\n"" )"	1343:2:37836:37886	3428160	0	True				
ANR	3428625	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: Security Policy:\\n"" )"		3428160	0					
ANR	3428626	Callee	dprintf		3428160	0					
ANR	3428627	Identifier	dprintf		3428160	0					
ANR	3428628	ArgumentList	D_SECURITY		3428160	1					
ANR	3428629	Argument	D_SECURITY		3428160	0					
ANR	3428630	Identifier	D_SECURITY		3428160	0					
ANR	3428631	Argument	"""SECMAN: Security Policy:\\n"""		3428160	1					
ANR	3428632	PrimaryExpression	"""SECMAN: Security Policy:\\n"""		3428160	0					
ANR	3428633	ExpressionStatement	m_auth_info . dPrint ( D_SECURITY )	1344:2:37890:37922	3428160	1	True				
ANR	3428634	CallExpression	m_auth_info . dPrint ( D_SECURITY )		3428160	0					
ANR	3428635	Callee	m_auth_info . dPrint		3428160	0					
ANR	3428636	MemberAccess	m_auth_info . dPrint		3428160	0					
ANR	3428637	Identifier	m_auth_info		3428160	0					
ANR	3428638	Identifier	dPrint		3428160	1					
ANR	3428639	ArgumentList	D_SECURITY		3428160	1					
ANR	3428640	Argument	D_SECURITY		3428160	0					
ANR	3428641	Identifier	D_SECURITY		3428160	0					
ANR	3428642	ExpressionStatement	"m_negotiation = m_sec_man . sec_lookup_req ( m_auth_info , ATTR_SEC_NEGOTIATION )"	1349:1:37967:38044	3428160	9	True				
ANR	3428643	AssignmentExpression	"m_negotiation = m_sec_man . sec_lookup_req ( m_auth_info , ATTR_SEC_NEGOTIATION )"		3428160	0		=			
ANR	3428644	Identifier	m_negotiation		3428160	0					
ANR	3428645	CallExpression	"m_sec_man . sec_lookup_req ( m_auth_info , ATTR_SEC_NEGOTIATION )"		3428160	1					
ANR	3428646	Callee	m_sec_man . sec_lookup_req		3428160	0					
ANR	3428647	MemberAccess	m_sec_man . sec_lookup_req		3428160	0					
ANR	3428648	Identifier	m_sec_man		3428160	0					
ANR	3428649	Identifier	sec_lookup_req		3428160	1					
ANR	3428650	ArgumentList	m_auth_info		3428160	1					
ANR	3428651	Argument	m_auth_info		3428160	0					
ANR	3428652	Identifier	m_auth_info		3428160	0					
ANR	3428653	Argument	ATTR_SEC_NEGOTIATION		3428160	1					
ANR	3428654	Identifier	ATTR_SEC_NEGOTIATION		3428160	0					
ANR	3428655	IfStatement	if ( m_negotiation == SecMan :: SEC_REQ_UNDEFINED )		3428160	10					
ANR	3428656	Condition	m_negotiation == SecMan :: SEC_REQ_UNDEFINED	1350:5:38051:38092	3428160	0	True				
ANR	3428657	EqualityExpression	m_negotiation == SecMan :: SEC_REQ_UNDEFINED		3428160	0		==			
ANR	3428658	Identifier	m_negotiation		3428160	0					
ANR	3428659	Identifier	SecMan :: SEC_REQ_UNDEFINED		3428160	1					
ANR	3428660	CompoundStatement		100:49:3628:3628	3428160	1					
ANR	3428661	ExpressionStatement	m_negotiation = SecMan :: SEC_REQ_PREFERRED	1353:2:38184:38225	3428160	0	True				
ANR	3428662	AssignmentExpression	m_negotiation = SecMan :: SEC_REQ_PREFERRED		3428160	0		=			
ANR	3428663	Identifier	m_negotiation		3428160	0					
ANR	3428664	Identifier	SecMan :: SEC_REQ_PREFERRED		3428160	1					
ANR	3428665	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: missing negotiation attribute, assuming PREFERRED.\\n"" )"	1354:2:38229:38312	3428160	1	True				
ANR	3428666	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: missing negotiation attribute, assuming PREFERRED.\\n"" )"		3428160	0					
ANR	3428667	Callee	dprintf		3428160	0					
ANR	3428668	Identifier	dprintf		3428160	0					
ANR	3428669	ArgumentList	D_SECURITY		3428160	1					
ANR	3428670	Argument	D_SECURITY		3428160	0					
ANR	3428671	Identifier	D_SECURITY		3428160	0					
ANR	3428672	Argument	"""SECMAN: missing negotiation attribute, assuming PREFERRED.\\n"""		3428160	1					
ANR	3428673	PrimaryExpression	"""SECMAN: missing negotiation attribute, assuming PREFERRED.\\n"""		3428160	0					
ANR	3428674	IdentifierDeclStatement	SecMan :: sec_feat_act negotiate = m_sec_man . sec_req_to_feat_act ( m_negotiation ) ;	1357:1:38319:38396	3428160	11	True				
ANR	3428675	IdentifierDecl	negotiate = m_sec_man . sec_req_to_feat_act ( m_negotiation )		3428160	0					
ANR	3428676	IdentifierDeclType	SecMan :: sec_feat_act		3428160	0					
ANR	3428677	Identifier	negotiate		3428160	1					
ANR	3428678	AssignmentExpression	negotiate = m_sec_man . sec_req_to_feat_act ( m_negotiation )		3428160	2		=			
ANR	3428679	Identifier	negotiate		3428160	0					
ANR	3428680	CallExpression	m_sec_man . sec_req_to_feat_act ( m_negotiation )		3428160	1					
ANR	3428681	Callee	m_sec_man . sec_req_to_feat_act		3428160	0					
ANR	3428682	MemberAccess	m_sec_man . sec_req_to_feat_act		3428160	0					
ANR	3428683	Identifier	m_sec_man		3428160	0					
ANR	3428684	Identifier	sec_req_to_feat_act		3428160	1					
ANR	3428685	ArgumentList	m_negotiation		3428160	1					
ANR	3428686	Argument	m_negotiation		3428160	0					
ANR	3428687	Identifier	m_negotiation		3428160	0					
ANR	3428688	IfStatement	if ( negotiate == SecMan :: SEC_FEAT_ACT_NO )		3428160	12					
ANR	3428689	Condition	negotiate == SecMan :: SEC_FEAT_ACT_NO	1358:5:38403:38438	3428160	0	True				
ANR	3428690	EqualityExpression	negotiate == SecMan :: SEC_FEAT_ACT_NO		3428160	0		==			
ANR	3428691	Identifier	negotiate		3428160	0					
ANR	3428692	Identifier	SecMan :: SEC_FEAT_ACT_NO		3428160	1					
ANR	3428693	CompoundStatement		108:43:3974:3974	3428160	1					
ANR	3428694	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3428160	0					
ANR	3428695	Condition	DebugFlags & D_FULLDEBUG	1364:6:38623:38646	3428160	0	True				
ANR	3428696	BitAndExpression	DebugFlags & D_FULLDEBUG		3428160	0		&			
ANR	3428697	Identifier	DebugFlags		3428160	0					
ANR	3428698	Identifier	D_FULLDEBUG		3428160	1					
ANR	3428699	CompoundStatement		114:32:4182:4182	3428160	1					
ANR	3428700	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: not negotiating, just sending command (%i)\\n"" , m_cmd )"	1365:3:38654:38736	3428160	0	True				
ANR	3428701	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: not negotiating, just sending command (%i)\\n"" , m_cmd )"		3428160	0					
ANR	3428702	Callee	dprintf		3428160	0					
ANR	3428703	Identifier	dprintf		3428160	0					
ANR	3428704	ArgumentList	D_SECURITY		3428160	1					
ANR	3428705	Argument	D_SECURITY		3428160	0					
ANR	3428706	Identifier	D_SECURITY		3428160	0					
ANR	3428707	Argument	"""SECMAN: not negotiating, just sending command (%i)\\n"""		3428160	1					
ANR	3428708	PrimaryExpression	"""SECMAN: not negotiating, just sending command (%i)\\n"""		3428160	0					
ANR	3428709	Argument	m_cmd		3428160	2					
ANR	3428710	Identifier	m_cmd		3428160	0					
ANR	3428711	ExpressionStatement	m_sock -> encode ( )	1369:2:38784:38800	3428160	1	True				
ANR	3428712	CallExpression	m_sock -> encode ( )		3428160	0					
ANR	3428713	Callee	m_sock -> encode		3428160	0					
ANR	3428714	PtrMemberAccess	m_sock -> encode		3428160	0					
ANR	3428715	Identifier	m_sock		3428160	0					
ANR	3428716	Identifier	encode		3428160	1					
ANR	3428717	ArgumentList			3428160	1					
ANR	3428718	IfStatement	if ( ! m_sock -> code ( m_cmd ) )		3428160	2					
ANR	3428719	Condition	! m_sock -> code ( m_cmd )	1370:5:38807:38826	3428160	0	True				
ANR	3428720	UnaryOperationExpression	! m_sock -> code ( m_cmd )		3428160	0					
ANR	3428721	UnaryOperator	!		3428160	0					
ANR	3428722	CallExpression	m_sock -> code ( m_cmd )		3428160	1					
ANR	3428723	Callee	m_sock -> code		3428160	0					
ANR	3428724	PtrMemberAccess	m_sock -> code		3428160	0					
ANR	3428725	Identifier	m_sock		3428160	0					
ANR	3428726	Identifier	code		3428160	1					
ANR	3428727	ArgumentList	m_cmd		3428160	1					
ANR	3428728	Argument	m_cmd		3428160	0					
ANR	3428729	Identifier	m_cmd		3428160	0					
ANR	3428730	CompoundStatement		120:27:4362:4362	3428160	1					
ANR	3428731	ExpressionStatement	"m_errstack -> pushf ( ""SECMAN"" , SECMAN_ERR_COMMUNICATIONS_ERROR , ""Failed to send raw command to %s."" , m_sock -> peer_description ( ) )"	1371:3:38834:38980	3428160	0	True				
ANR	3428732	CallExpression	"m_errstack -> pushf ( ""SECMAN"" , SECMAN_ERR_COMMUNICATIONS_ERROR , ""Failed to send raw command to %s."" , m_sock -> peer_description ( ) )"		3428160	0					
ANR	3428733	Callee	m_errstack -> pushf		3428160	0					
ANR	3428734	PtrMemberAccess	m_errstack -> pushf		3428160	0					
ANR	3428735	Identifier	m_errstack		3428160	0					
ANR	3428736	Identifier	pushf		3428160	1					
ANR	3428737	ArgumentList	"""SECMAN"""		3428160	1					
ANR	3428738	Argument	"""SECMAN"""		3428160	0					
ANR	3428739	PrimaryExpression	"""SECMAN"""		3428160	0					
ANR	3428740	Argument	SECMAN_ERR_COMMUNICATIONS_ERROR		3428160	1					
ANR	3428741	Identifier	SECMAN_ERR_COMMUNICATIONS_ERROR		3428160	0					
ANR	3428742	Argument	"""Failed to send raw command to %s."""		3428160	2					
ANR	3428743	PrimaryExpression	"""Failed to send raw command to %s."""		3428160	0					
ANR	3428744	Argument	m_sock -> peer_description ( )		3428160	3					
ANR	3428745	CallExpression	m_sock -> peer_description ( )		3428160	0					
ANR	3428746	Callee	m_sock -> peer_description		3428160	0					
ANR	3428747	PtrMemberAccess	m_sock -> peer_description		3428160	0					
ANR	3428748	Identifier	m_sock		3428160	0					
ANR	3428749	Identifier	peer_description		3428160	1					
ANR	3428750	ArgumentList			3428160	1					
ANR	3428751	ReturnStatement	return StartCommandFailed ;	1374:3:38985:39010	3428160	1	True				
ANR	3428752	Identifier	StartCommandFailed		3428160	0					
ANR	3428753	ReturnStatement	return StartCommandSucceeded ;	1379:2:39098:39126	3428160	3	True				
ANR	3428754	Identifier	StartCommandSucceeded		3428160	0					
ANR	3428755	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3428160	13					
ANR	3428756	Condition	DebugFlags & D_FULLDEBUG	1402:5:39866:39889	3428160	0	True				
ANR	3428757	BitAndExpression	DebugFlags & D_FULLDEBUG		3428160	0		&			
ANR	3428758	Identifier	DebugFlags		3428160	0					
ANR	3428759	Identifier	D_FULLDEBUG		3428160	1					
ANR	3428760	CompoundStatement		152:31:5425:5425	3428160	1					
ANR	3428761	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: negotiating security for command %i.\\n"" , m_cmd )"	1403:2:39896:39974	3428160	0	True				
ANR	3428762	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: negotiating security for command %i.\\n"" , m_cmd )"		3428160	0					
ANR	3428763	Callee	dprintf		3428160	0					
ANR	3428764	Identifier	dprintf		3428160	0					
ANR	3428765	ArgumentList	D_SECURITY		3428160	1					
ANR	3428766	Argument	D_SECURITY		3428160	0					
ANR	3428767	Identifier	D_SECURITY		3428160	0					
ANR	3428768	Argument	"""SECMAN: negotiating security for command %i.\\n"""		3428160	1					
ANR	3428769	PrimaryExpression	"""SECMAN: negotiating security for command %i.\\n"""		3428160	0					
ANR	3428770	Argument	m_cmd		3428160	2					
ANR	3428771	Identifier	m_cmd		3428160	0					
ANR	3428772	IdentifierDeclStatement	Sinful destsinful ( m_sock -> get_connect_addr ( ) ) ;	1417:1:40492:40539	3428160	14	True				
ANR	3428773	IdentifierDecl	destsinful ( m_sock -> get_connect_addr ( ) )		3428160	0					
ANR	3428774	IdentifierDeclType	Sinful		3428160	0					
ANR	3428775	Identifier	destsinful		3428160	1					
ANR	3428776	CallExpression	m_sock -> get_connect_addr ( )		3428160	2					
ANR	3428777	Callee	m_sock -> get_connect_addr		3428160	0					
ANR	3428778	PtrMemberAccess	m_sock -> get_connect_addr		3428160	0					
ANR	3428779	Identifier	m_sock		3428160	0					
ANR	3428780	Identifier	get_connect_addr		3428160	1					
ANR	3428781	ArgumentList			3428160	1					
ANR	3428782	IdentifierDeclStatement	Sinful oursinful ( global_dc_sinful ( ) ) ;	1418:1:40542:40580	3428160	15	True				
ANR	3428783	IdentifierDecl	oursinful ( global_dc_sinful ( ) )		3428160	0					
ANR	3428784	IdentifierDeclType	Sinful		3428160	0					
ANR	3428785	Identifier	oursinful		3428160	1					
ANR	3428786	CallExpression	global_dc_sinful ( )		3428160	2					
ANR	3428787	Callee	global_dc_sinful		3428160	0					
ANR	3428788	Identifier	global_dc_sinful		3428160	0					
ANR	3428789	ArgumentList			3428160	1					
ANR	3428790	IdentifierDeclStatement	bool using_cookie = false ;	1419:1:40583:40608	3428160	16	True				
ANR	3428791	IdentifierDecl	using_cookie = false		3428160	0					
ANR	3428792	IdentifierDeclType	bool		3428160	0					
ANR	3428793	Identifier	using_cookie		3428160	1					
ANR	3428794	AssignmentExpression	using_cookie = false		3428160	2		=			
ANR	3428795	Identifier	false		3428160	0					
ANR	3428796	Identifier	false		3428160	1					
ANR	3428797	IfStatement	if ( oursinful . addressPointsToMe ( destsinful ) )		3428160	17					
ANR	3428798	Condition	oursinful . addressPointsToMe ( destsinful )	1421:5:40616:40654	3428160	0	True				
ANR	3428799	CallExpression	oursinful . addressPointsToMe ( destsinful )		3428160	0					
ANR	3428800	Callee	oursinful . addressPointsToMe		3428160	0					
ANR	3428801	MemberAccess	oursinful . addressPointsToMe		3428160	0					
ANR	3428802	Identifier	oursinful		3428160	0					
ANR	3428803	Identifier	addressPointsToMe		3428160	1					
ANR	3428804	ArgumentList	destsinful		3428160	1					
ANR	3428805	Argument	destsinful		3428160	0					
ANR	3428806	Identifier	destsinful		3428160	0					
ANR	3428807	CompoundStatement		174:2:6228:6260	3428160	1					
ANR	3428808	IdentifierDeclStatement	int len = 0 ;	1423:2:40680:40691	3428160	0	True				
ANR	3428809	IdentifierDecl	len = 0		3428160	0					
ANR	3428810	IdentifierDeclType	int		3428160	0					
ANR	3428811	Identifier	len		3428160	1					
ANR	3428812	AssignmentExpression	len = 0		3428160	2		=			
ANR	3428813	Identifier	len		3428160	0					
ANR	3428814	PrimaryExpression	0		3428160	1					
ANR	3428815	IdentifierDeclStatement	unsigned char * randomjunk = NULL ;	1424:2:40695:40727	3428160	1	True				
ANR	3428816	IdentifierDecl	* randomjunk = NULL		3428160	0					
ANR	3428817	IdentifierDeclType	unsigned char *		3428160	0					
ANR	3428818	Identifier	randomjunk		3428160	1					
ANR	3428819	AssignmentExpression	* randomjunk = NULL		3428160	2		=			
ANR	3428820	Identifier	NULL		3428160	0					
ANR	3428821	Identifier	NULL		3428160	1					
ANR	3428822	ExpressionStatement	"global_dc_get_cookie ( len , randomjunk )"	1426:2:40732:40770	3428160	2	True				
ANR	3428823	CallExpression	"global_dc_get_cookie ( len , randomjunk )"		3428160	0					
ANR	3428824	Callee	global_dc_get_cookie		3428160	0					
ANR	3428825	Identifier	global_dc_get_cookie		3428160	0					
ANR	3428826	ArgumentList	len		3428160	1					
ANR	3428827	Argument	len		3428160	0					
ANR	3428828	Identifier	len		3428160	0					
ANR	3428829	Argument	randomjunk		3428160	1					
ANR	3428830	Identifier	randomjunk		3428160	0					
ANR	3428831	ExpressionStatement	"m_auth_info . Assign ( ATTR_SEC_COOKIE , randomjunk )"	1428:2:40777:40823	3428160	3	True				
ANR	3428832	CallExpression	"m_auth_info . Assign ( ATTR_SEC_COOKIE , randomjunk )"		3428160	0					
ANR	3428833	Callee	m_auth_info . Assign		3428160	0					
ANR	3428834	MemberAccess	m_auth_info . Assign		3428160	0					
ANR	3428835	Identifier	m_auth_info		3428160	0					
ANR	3428836	Identifier	Assign		3428160	1					
ANR	3428837	ArgumentList	ATTR_SEC_COOKIE		3428160	1					
ANR	3428838	Argument	ATTR_SEC_COOKIE		3428160	0					
ANR	3428839	Identifier	ATTR_SEC_COOKIE		3428160	0					
ANR	3428840	Argument	randomjunk		3428160	1					
ANR	3428841	Identifier	randomjunk		3428160	0					
ANR	3428842	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: %s=\\""%s\\""\\n"" , ATTR_SEC_COOKIE , randomjunk )"	1429:2:40827:40898	3428160	4	True				
ANR	3428843	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: %s=\\""%s\\""\\n"" , ATTR_SEC_COOKIE , randomjunk )"		3428160	0					
ANR	3428844	Callee	dprintf		3428160	0					
ANR	3428845	Identifier	dprintf		3428160	0					
ANR	3428846	ArgumentList	D_SECURITY		3428160	1					
ANR	3428847	Argument	D_SECURITY		3428160	0					
ANR	3428848	Identifier	D_SECURITY		3428160	0					
ANR	3428849	Argument	"""SECMAN: %s=\\""%s\\""\\n"""		3428160	1					
ANR	3428850	PrimaryExpression	"""SECMAN: %s=\\""%s\\""\\n"""		3428160	0					
ANR	3428851	Argument	ATTR_SEC_COOKIE		3428160	2					
ANR	3428852	Identifier	ATTR_SEC_COOKIE		3428160	0					
ANR	3428853	Argument	randomjunk		3428160	3					
ANR	3428854	Identifier	randomjunk		3428160	0					
ANR	3428855	ExpressionStatement	free ( randomjunk )	1431:2:40903:40919	3428160	5	True				
ANR	3428856	CallExpression	free ( randomjunk )		3428160	0					
ANR	3428857	Callee	free		3428160	0					
ANR	3428858	Identifier	free		3428160	0					
ANR	3428859	ArgumentList	randomjunk		3428160	1					
ANR	3428860	Argument	randomjunk		3428160	0					
ANR	3428861	Identifier	randomjunk		3428160	0					
ANR	3428862	ExpressionStatement	randomjunk = NULL	1432:2:40923:40940	3428160	6	True				
ANR	3428863	AssignmentExpression	randomjunk = NULL		3428160	0		=			
ANR	3428864	Identifier	randomjunk		3428160	0					
ANR	3428865	Identifier	NULL		3428160	1					
ANR	3428866	ExpressionStatement	using_cookie = true	1434:2:40945:40964	3428160	7	True				
ANR	3428867	AssignmentExpression	using_cookie = true		3428160	0		=			
ANR	3428868	Identifier	using_cookie		3428160	0					
ANR	3428869	Identifier	true		3428160	1					
ANR	3428870	ElseStatement	else		3428160	0					
ANR	3428871	IfStatement	if ( ( ! m_have_session ) && ( ! m_is_tcp ) && ( ! m_already_tried_TCP_auth ) )		3428160	0					
ANR	3428872	Condition	( ! m_have_session ) && ( ! m_is_tcp ) && ( ! m_already_tried_TCP_auth )	1436:12:40979:41041	3428160	0	True				
ANR	3428873	AndExpression	( ! m_have_session ) && ( ! m_is_tcp ) && ( ! m_already_tried_TCP_auth )		3428160	0		&&			
ANR	3428874	UnaryOperationExpression	! m_have_session		3428160	0					
ANR	3428875	UnaryOperator	!		3428160	0					
ANR	3428876	Identifier	m_have_session		3428160	1					
ANR	3428877	AndExpression	( ! m_is_tcp ) && ( ! m_already_tried_TCP_auth )		3428160	1		&&			
ANR	3428878	UnaryOperationExpression	! m_is_tcp		3428160	0					
ANR	3428879	UnaryOperator	!		3428160	0					
ANR	3428880	Identifier	m_is_tcp		3428160	1					
ANR	3428881	UnaryOperationExpression	! m_already_tried_TCP_auth		3428160	1					
ANR	3428882	UnaryOperator	!		3428160	0					
ANR	3428883	Identifier	m_already_tried_TCP_auth		3428160	1					
ANR	3428884	CompoundStatement		186:77:6577:6577	3428160	1					
ANR	3428885	ReturnStatement	return DoTCPAuth_inner ( ) ;	1438:2:41100:41124	3428160	0	True				
ANR	3428886	CallExpression	DoTCPAuth_inner ( )		3428160	0					
ANR	3428887	Callee	DoTCPAuth_inner		3428160	0					
ANR	3428888	Identifier	DoTCPAuth_inner		3428160	0					
ANR	3428889	ArgumentList			3428160	1					
ANR	3428890	ElseStatement	else		3428160	0					
ANR	3428891	IfStatement	if ( ( ! m_have_session ) && ( ! m_is_tcp ) && m_already_tried_TCP_auth )		3428160	0					
ANR	3428892	Condition	( ! m_have_session ) && ( ! m_is_tcp ) && m_already_tried_TCP_auth	1439:12:41138:41197	3428160	0	True				
ANR	3428893	AndExpression	( ! m_have_session ) && ( ! m_is_tcp ) && m_already_tried_TCP_auth		3428160	0		&&			
ANR	3428894	UnaryOperationExpression	! m_have_session		3428160	0					
ANR	3428895	UnaryOperator	!		3428160	0					
ANR	3428896	Identifier	m_have_session		3428160	1					
ANR	3428897	AndExpression	( ! m_is_tcp ) && m_already_tried_TCP_auth		3428160	1		&&			
ANR	3428898	UnaryOperationExpression	! m_is_tcp		3428160	0					
ANR	3428899	UnaryOperator	!		3428160	0					
ANR	3428900	Identifier	m_is_tcp		3428160	1					
ANR	3428901	Identifier	m_already_tried_TCP_auth		3428160	1					
ANR	3428902	CompoundStatement		189:74:6733:6733	3428160	1					
ANR	3428903	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3428160	0					
ANR	3428904	Condition	DebugFlags & D_FULLDEBUG	1446:6:41472:41495	3428160	0	True				
ANR	3428905	BitAndExpression	DebugFlags & D_FULLDEBUG		3428160	0		&			
ANR	3428906	Identifier	DebugFlags		3428160	0					
ANR	3428907	Identifier	D_FULLDEBUG		3428160	1					
ANR	3428908	CompoundStatement		196:32:7031:7031	3428160	1					
ANR	3428909	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: UDP has no session to use!\\n"" )"	1447:3:41503:41564	3428160	0	True				
ANR	3428910	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: UDP has no session to use!\\n"" )"		3428160	0					
ANR	3428911	Callee	dprintf		3428160	0					
ANR	3428912	Identifier	dprintf		3428160	0					
ANR	3428913	ArgumentList	D_SECURITY		3428160	1					
ANR	3428914	Argument	D_SECURITY		3428160	0					
ANR	3428915	Identifier	D_SECURITY		3428160	0					
ANR	3428916	Argument	"""SECMAN: UDP has no session to use!\\n"""		3428160	1					
ANR	3428917	PrimaryExpression	"""SECMAN: UDP has no session to use!\\n"""		3428160	0					
ANR	3428918	ExpressionStatement	ASSERT ( m_enc_key == NULL )	1450:2:41573:41599	3428160	1	True				
ANR	3428919	CallExpression	ASSERT ( m_enc_key == NULL )		3428160	0					
ANR	3428920	Callee	ASSERT		3428160	0					
ANR	3428921	Identifier	ASSERT		3428160	0					
ANR	3428922	ArgumentList	m_enc_key == NULL		3428160	1					
ANR	3428923	Argument	m_enc_key == NULL		3428160	0					
ANR	3428924	EqualityExpression	m_enc_key == NULL		3428160	0		==			
ANR	3428925	Identifier	m_enc_key		3428160	0					
ANR	3428926	Identifier	NULL		3428160	1					
ANR	3428927	IfStatement	"if ( m_auth_info . LookupString ( ATTR_SEC_REMOTE_VERSION , m_remote_version ) )"		3428160	18					
ANR	3428928	Condition	"m_auth_info . LookupString ( ATTR_SEC_REMOTE_VERSION , m_remote_version )"	1455:4:41710:41778	3428160	0	True				
ANR	3428929	CallExpression	"m_auth_info . LookupString ( ATTR_SEC_REMOTE_VERSION , m_remote_version )"		3428160	0					
ANR	3428930	Callee	m_auth_info . LookupString		3428160	0					
ANR	3428931	MemberAccess	m_auth_info . LookupString		3428160	0					
ANR	3428932	Identifier	m_auth_info		3428160	0					
ANR	3428933	Identifier	LookupString		3428160	1					
ANR	3428934	ArgumentList	ATTR_SEC_REMOTE_VERSION		3428160	1					
ANR	3428935	Argument	ATTR_SEC_REMOTE_VERSION		3428160	0					
ANR	3428936	Identifier	ATTR_SEC_REMOTE_VERSION		3428160	0					
ANR	3428937	Argument	m_remote_version		3428160	1					
ANR	3428938	Identifier	m_remote_version		3428160	0					
ANR	3428939	CompoundStatement		206:2:7318:7370	3428160	1					
ANR	3428940	IdentifierDeclStatement	CondorVersionInfo ver_info ( m_remote_version . Value ( ) ) ;	1456:2:41785:41837	3428160	0	True				
ANR	3428941	IdentifierDecl	ver_info ( m_remote_version . Value ( ) )		3428160	0					
ANR	3428942	IdentifierDeclType	CondorVersionInfo		3428160	0					
ANR	3428943	Identifier	ver_info		3428160	1					
ANR	3428944	CallExpression	m_remote_version . Value ( )		3428160	2					
ANR	3428945	Callee	m_remote_version . Value		3428160	0					
ANR	3428946	MemberAccess	m_remote_version . Value		3428160	0					
ANR	3428947	Identifier	m_remote_version		3428160	0					
ANR	3428948	Identifier	Value		3428160	1					
ANR	3428949	ArgumentList			3428160	1					
ANR	3428950	ExpressionStatement	m_sock -> set_peer_version ( & ver_info )	1457:2:41841:41876	3428160	1	True				
ANR	3428951	CallExpression	m_sock -> set_peer_version ( & ver_info )		3428160	0					
ANR	3428952	Callee	m_sock -> set_peer_version		3428160	0					
ANR	3428953	PtrMemberAccess	m_sock -> set_peer_version		3428160	0					
ANR	3428954	Identifier	m_sock		3428160	0					
ANR	3428955	Identifier	set_peer_version		3428160	1					
ANR	3428956	ArgumentList	& ver_info		3428160	1					
ANR	3428957	Argument	& ver_info		3428160	0					
ANR	3428958	UnaryOperationExpression	& ver_info		3428160	0					
ANR	3428959	UnaryOperator	&		3428160	0					
ANR	3428960	Identifier	ver_info		3428160	1					
ANR	3428961	ExpressionStatement	"m_auth_info . Assign ( ATTR_SEC_REMOTE_VERSION , CondorVersion ( ) )"	1461:1:41907:41966	3428160	19	True				
ANR	3428962	CallExpression	"m_auth_info . Assign ( ATTR_SEC_REMOTE_VERSION , CondorVersion ( ) )"		3428160	0					
ANR	3428963	Callee	m_auth_info . Assign		3428160	0					
ANR	3428964	MemberAccess	m_auth_info . Assign		3428160	0					
ANR	3428965	Identifier	m_auth_info		3428160	0					
ANR	3428966	Identifier	Assign		3428160	1					
ANR	3428967	ArgumentList	ATTR_SEC_REMOTE_VERSION		3428160	1					
ANR	3428968	Argument	ATTR_SEC_REMOTE_VERSION		3428160	0					
ANR	3428969	Identifier	ATTR_SEC_REMOTE_VERSION		3428160	0					
ANR	3428970	Argument	CondorVersion ( )		3428160	1					
ANR	3428971	CallExpression	CondorVersion ( )		3428160	0					
ANR	3428972	Callee	CondorVersion		3428160	0					
ANR	3428973	Identifier	CondorVersion		3428160	0					
ANR	3428974	ArgumentList			3428160	1					
ANR	3428975	IdentifierDeclStatement	char const * dcss = global_dc_sinful ( ) ;	1464:1:42017:42054	3428160	20	True				
ANR	3428976	IdentifierDecl	* dcss = global_dc_sinful ( )		3428160	0					
ANR	3428977	IdentifierDeclType	char const *		3428160	0					
ANR	3428978	Identifier	dcss		3428160	1					
ANR	3428979	AssignmentExpression	* dcss = global_dc_sinful ( )		3428160	2		=			
ANR	3428980	Identifier	dcss		3428160	0					
ANR	3428981	CallExpression	global_dc_sinful ( )		3428160	1					
ANR	3428982	Callee	global_dc_sinful		3428160	0					
ANR	3428983	Identifier	global_dc_sinful		3428160	0					
ANR	3428984	ArgumentList			3428160	1					
ANR	3428985	IfStatement	if ( dcss )		3428160	21					
ANR	3428986	Condition	dcss	1465:5:42061:42064	3428160	0	True				
ANR	3428987	Identifier	dcss		3428160	0					
ANR	3428988	CompoundStatement		215:11:7600:7600	3428160	1					
ANR	3428989	ExpressionStatement	"m_auth_info . Assign ( ATTR_SEC_SERVER_COMMAND_SOCK , dcss )"	1466:2:42071:42125	3428160	0	True				
ANR	3428990	CallExpression	"m_auth_info . Assign ( ATTR_SEC_SERVER_COMMAND_SOCK , dcss )"		3428160	0					
ANR	3428991	Callee	m_auth_info . Assign		3428160	0					
ANR	3428992	MemberAccess	m_auth_info . Assign		3428160	0					
ANR	3428993	Identifier	m_auth_info		3428160	0					
ANR	3428994	Identifier	Assign		3428160	1					
ANR	3428995	ArgumentList	ATTR_SEC_SERVER_COMMAND_SOCK		3428160	1					
ANR	3428996	Argument	ATTR_SEC_SERVER_COMMAND_SOCK		3428160	0					
ANR	3428997	Identifier	ATTR_SEC_SERVER_COMMAND_SOCK		3428160	0					
ANR	3428998	Argument	dcss		3428160	1					
ANR	3428999	Identifier	dcss		3428160	0					
ANR	3429000	ExpressionStatement	"m_auth_info . Assign ( ATTR_SEC_COMMAND , m_cmd )"	1470:1:42152:42195	3428160	22	True				
ANR	3429001	CallExpression	"m_auth_info . Assign ( ATTR_SEC_COMMAND , m_cmd )"		3428160	0					
ANR	3429002	Callee	m_auth_info . Assign		3428160	0					
ANR	3429003	MemberAccess	m_auth_info . Assign		3428160	0					
ANR	3429004	Identifier	m_auth_info		3428160	0					
ANR	3429005	Identifier	Assign		3428160	1					
ANR	3429006	ArgumentList	ATTR_SEC_COMMAND		3428160	1					
ANR	3429007	Argument	ATTR_SEC_COMMAND		3428160	0					
ANR	3429008	Identifier	ATTR_SEC_COMMAND		3428160	0					
ANR	3429009	Argument	m_cmd		3428160	1					
ANR	3429010	Identifier	m_cmd		3428160	0					
ANR	3429011	IfStatement	if ( m_cmd == DC_AUTHENTICATE )		3428160	23					
ANR	3429012	Condition	m_cmd == DC_AUTHENTICATE	1472:5:42203:42226	3428160	0	True				
ANR	3429013	EqualityExpression	m_cmd == DC_AUTHENTICATE		3428160	0		==			
ANR	3429014	Identifier	m_cmd		3428160	0					
ANR	3429015	Identifier	DC_AUTHENTICATE		3428160	1					
ANR	3429016	CompoundStatement		222:31:7762:7762	3428160	1					
ANR	3429017	ExpressionStatement	"m_auth_info . Assign ( ATTR_SEC_AUTH_COMMAND , m_subcmd )"	1474:2:42258:42309	3428160	0	True				
ANR	3429018	CallExpression	"m_auth_info . Assign ( ATTR_SEC_AUTH_COMMAND , m_subcmd )"		3428160	0					
ANR	3429019	Callee	m_auth_info . Assign		3428160	0					
ANR	3429020	MemberAccess	m_auth_info . Assign		3428160	0					
ANR	3429021	Identifier	m_auth_info		3428160	0					
ANR	3429022	Identifier	Assign		3428160	1					
ANR	3429023	ArgumentList	ATTR_SEC_AUTH_COMMAND		3428160	1					
ANR	3429024	Argument	ATTR_SEC_AUTH_COMMAND		3428160	0					
ANR	3429025	Identifier	ATTR_SEC_AUTH_COMMAND		3428160	0					
ANR	3429026	Argument	m_subcmd		3428160	1					
ANR	3429027	Identifier	m_subcmd		3428160	0					
ANR	3429028	IfStatement	if ( ! using_cookie && ! m_is_tcp )		3428160	24					
ANR	3429029	Condition	! using_cookie && ! m_is_tcp	1490:5:42478:42503	3428160	0	True				
ANR	3429030	AndExpression	! using_cookie && ! m_is_tcp		3428160	0		&&			
ANR	3429031	UnaryOperationExpression	! using_cookie		3428160	0					
ANR	3429032	UnaryOperator	!		3428160	0					
ANR	3429033	Identifier	using_cookie		3428160	1					
ANR	3429034	UnaryOperationExpression	! m_is_tcp		3428160	1					
ANR	3429035	UnaryOperator	!		3428160	0					
ANR	3429036	Identifier	m_is_tcp		3428160	1					
ANR	3429037	CompoundStatement		240:33:8039:8039	3428160	1					
ANR	3429038	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: UDP, m_have_session == %i\\n"" , ( m_have_session ? 1 : 0 ) )"	1498:2:42820:42907	3428160	0	True				
ANR	3429039	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: UDP, m_have_session == %i\\n"" , ( m_have_session ? 1 : 0 ) )"		3428160	0					
ANR	3429040	Callee	dprintf		3428160	0					
ANR	3429041	Identifier	dprintf		3428160	0					
ANR	3429042	ArgumentList	D_SECURITY		3428160	1					
ANR	3429043	Argument	D_SECURITY		3428160	0					
ANR	3429044	Identifier	D_SECURITY		3428160	0					
ANR	3429045	Argument	"""SECMAN: UDP, m_have_session == %i\\n"""		3428160	1					
ANR	3429046	PrimaryExpression	"""SECMAN: UDP, m_have_session == %i\\n"""		3428160	0					
ANR	3429047	Argument	m_have_session ? 1 : 0		3428160	2					
ANR	3429048	ConditionalExpression	m_have_session ? 1 : 0		3428160	0					
ANR	3429049	Condition	m_have_session		3428160	0					
ANR	3429050	Identifier	m_have_session		3428160	0					
ANR	3429051	PrimaryExpression	1		3428160	1					
ANR	3429052	PrimaryExpression	0		3428160	2					
ANR	3429053	IfStatement	if ( m_have_session )		3428160	1					
ANR	3429054	Condition	m_have_session	1501:6:42916:42929	3428160	0	True				
ANR	3429055	Identifier	m_have_session		3428160	0					
ANR	3429056	CompoundStatement		313:3:10581:10650	3428160	1					
ANR	3429057	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3428160	0					
ANR	3429058	Condition	DebugFlags & D_FULLDEBUG	1503:7:42962:42985	3428160	0	True				
ANR	3429059	BitAndExpression	DebugFlags & D_FULLDEBUG		3428160	0		&			
ANR	3429060	Identifier	DebugFlags		3428160	0					
ANR	3429061	Identifier	D_FULLDEBUG		3428160	1					
ANR	3429062	CompoundStatement		253:33:8521:8521	3428160	1					
ANR	3429063	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: UDP has session %s.\\n"" , m_enc_key -> id ( ) )"	1504:4:42994:43065	3428160	0	True				
ANR	3429064	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: UDP has session %s.\\n"" , m_enc_key -> id ( ) )"		3428160	0					
ANR	3429065	Callee	dprintf		3428160	0					
ANR	3429066	Identifier	dprintf		3428160	0					
ANR	3429067	ArgumentList	D_SECURITY		3428160	1					
ANR	3429068	Argument	D_SECURITY		3428160	0					
ANR	3429069	Identifier	D_SECURITY		3428160	0					
ANR	3429070	Argument	"""SECMAN: UDP has session %s.\\n"""		3428160	1					
ANR	3429071	PrimaryExpression	"""SECMAN: UDP has session %s.\\n"""		3428160	0					
ANR	3429072	Argument	m_enc_key -> id ( )		3428160	2					
ANR	3429073	CallExpression	m_enc_key -> id ( )		3428160	0					
ANR	3429074	Callee	m_enc_key -> id		3428160	0					
ANR	3429075	PtrMemberAccess	m_enc_key -> id		3428160	0					
ANR	3429076	Identifier	m_enc_key		3428160	0					
ANR	3429077	Identifier	id		3428160	1					
ANR	3429078	ArgumentList			3428160	1					
ANR	3429079	IdentifierDeclStatement	"SecMan :: sec_feat_act will_authenticate = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_AUTHENTICATION ) ;"	1507:3:43076:43186	3428160	1	True				
ANR	3429080	IdentifierDecl	"will_authenticate = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_AUTHENTICATION )"		3428160	0					
ANR	3429081	IdentifierDeclType	SecMan :: sec_feat_act		3428160	0					
ANR	3429082	Identifier	will_authenticate		3428160	1					
ANR	3429083	AssignmentExpression	"will_authenticate = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_AUTHENTICATION )"		3428160	2		=			
ANR	3429084	Identifier	will_authenticate		3428160	0					
ANR	3429085	CallExpression	"m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_AUTHENTICATION )"		3428160	1					
ANR	3429086	Callee	m_sec_man . sec_lookup_feat_act		3428160	0					
ANR	3429087	MemberAccess	m_sec_man . sec_lookup_feat_act		3428160	0					
ANR	3429088	Identifier	m_sec_man		3428160	0					
ANR	3429089	Identifier	sec_lookup_feat_act		3428160	1					
ANR	3429090	ArgumentList	m_auth_info		3428160	1					
ANR	3429091	Argument	m_auth_info		3428160	0					
ANR	3429092	Identifier	m_auth_info		3428160	0					
ANR	3429093	Argument	ATTR_SEC_AUTHENTICATION		3428160	1					
ANR	3429094	Identifier	ATTR_SEC_AUTHENTICATION		3428160	0					
ANR	3429095	IdentifierDeclStatement	"SecMan :: sec_feat_act will_enable_enc = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_ENCRYPTION ) ;"	1508:3:43191:43297	3428160	2	True				
ANR	3429096	IdentifierDecl	"will_enable_enc = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_ENCRYPTION )"		3428160	0					
ANR	3429097	IdentifierDeclType	SecMan :: sec_feat_act		3428160	0					
ANR	3429098	Identifier	will_enable_enc		3428160	1					
ANR	3429099	AssignmentExpression	"will_enable_enc = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_ENCRYPTION )"		3428160	2		=			
ANR	3429100	Identifier	will_enable_enc		3428160	0					
ANR	3429101	CallExpression	"m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_ENCRYPTION )"		3428160	1					
ANR	3429102	Callee	m_sec_man . sec_lookup_feat_act		3428160	0					
ANR	3429103	MemberAccess	m_sec_man . sec_lookup_feat_act		3428160	0					
ANR	3429104	Identifier	m_sec_man		3428160	0					
ANR	3429105	Identifier	sec_lookup_feat_act		3428160	1					
ANR	3429106	ArgumentList	m_auth_info		3428160	1					
ANR	3429107	Argument	m_auth_info		3428160	0					
ANR	3429108	Identifier	m_auth_info		3428160	0					
ANR	3429109	Argument	ATTR_SEC_ENCRYPTION		3428160	1					
ANR	3429110	Identifier	ATTR_SEC_ENCRYPTION		3428160	0					
ANR	3429111	IdentifierDeclStatement	"SecMan :: sec_feat_act will_enable_mac = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_INTEGRITY ) ;"	1509:3:43302:43407	3428160	3	True				
ANR	3429112	IdentifierDecl	"will_enable_mac = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_INTEGRITY )"		3428160	0					
ANR	3429113	IdentifierDeclType	SecMan :: sec_feat_act		3428160	0					
ANR	3429114	Identifier	will_enable_mac		3428160	1					
ANR	3429115	AssignmentExpression	"will_enable_mac = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_INTEGRITY )"		3428160	2		=			
ANR	3429116	Identifier	will_enable_mac		3428160	0					
ANR	3429117	CallExpression	"m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_INTEGRITY )"		3428160	1					
ANR	3429118	Callee	m_sec_man . sec_lookup_feat_act		3428160	0					
ANR	3429119	MemberAccess	m_sec_man . sec_lookup_feat_act		3428160	0					
ANR	3429120	Identifier	m_sec_man		3428160	0					
ANR	3429121	Identifier	sec_lookup_feat_act		3428160	1					
ANR	3429122	ArgumentList	m_auth_info		3428160	1					
ANR	3429123	Argument	m_auth_info		3428160	0					
ANR	3429124	Identifier	m_auth_info		3428160	0					
ANR	3429125	Argument	ATTR_SEC_INTEGRITY		3428160	1					
ANR	3429126	Identifier	ATTR_SEC_INTEGRITY		3428160	0					
ANR	3429127	IfStatement	if ( will_authenticate == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_authenticate == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_enc == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_enc == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID )		3428160	4					
ANR	3429128	Condition	will_authenticate == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_authenticate == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_enc == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_enc == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID	1511:7:43417:43753	3428160	0	True				
ANR	3429129	OrExpression	will_authenticate == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_authenticate == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_enc == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_enc == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID		3428160	0		||			
ANR	3429130	EqualityExpression	will_authenticate == SecMan :: SEC_FEAT_ACT_UNDEFINED		3428160	0		==			
ANR	3429131	Identifier	will_authenticate		3428160	0					
ANR	3429132	Identifier	SecMan :: SEC_FEAT_ACT_UNDEFINED		3428160	1					
ANR	3429133	OrExpression	will_authenticate == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_enc == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_enc == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID		3428160	1		||			
ANR	3429134	EqualityExpression	will_authenticate == SecMan :: SEC_FEAT_ACT_INVALID		3428160	0		==			
ANR	3429135	Identifier	will_authenticate		3428160	0					
ANR	3429136	Identifier	SecMan :: SEC_FEAT_ACT_INVALID		3428160	1					
ANR	3429137	OrExpression	will_enable_enc == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_enc == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID		3428160	1		||			
ANR	3429138	EqualityExpression	will_enable_enc == SecMan :: SEC_FEAT_ACT_UNDEFINED		3428160	0		==			
ANR	3429139	Identifier	will_enable_enc		3428160	0					
ANR	3429140	Identifier	SecMan :: SEC_FEAT_ACT_UNDEFINED		3428160	1					
ANR	3429141	OrExpression	will_enable_enc == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID		3428160	1		||			
ANR	3429142	EqualityExpression	will_enable_enc == SecMan :: SEC_FEAT_ACT_INVALID		3428160	0		==			
ANR	3429143	Identifier	will_enable_enc		3428160	0					
ANR	3429144	Identifier	SecMan :: SEC_FEAT_ACT_INVALID		3428160	1					
ANR	3429145	OrExpression	will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID		3428160	1		||			
ANR	3429146	EqualityExpression	will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED		3428160	0		==			
ANR	3429147	Identifier	will_enable_mac		3428160	0					
ANR	3429148	Identifier	SecMan :: SEC_FEAT_ACT_UNDEFINED		3428160	1					
ANR	3429149	EqualityExpression	will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID		3428160	1		==			
ANR	3429150	Identifier	will_enable_mac		3428160	0					
ANR	3429151	Identifier	SecMan :: SEC_FEAT_ACT_INVALID		3428160	1					
ANR	3429152	CompoundStatement		266:54:9290:9290	3428160	1					
ANR	3429153	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: action attribute missing from classad\\n"" )"	1520:4:43778:43848	3428160	0	True				
ANR	3429154	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: action attribute missing from classad\\n"" )"		3428160	0					
ANR	3429155	Callee	dprintf		3428160	0					
ANR	3429156	Identifier	dprintf		3428160	0					
ANR	3429157	ArgumentList	D_ALWAYS		3428160	1					
ANR	3429158	Argument	D_ALWAYS		3428160	0					
ANR	3429159	Identifier	D_ALWAYS		3428160	0					
ANR	3429160	Argument	"""SECMAN: action attribute missing from classad\\n"""		3428160	1					
ANR	3429161	PrimaryExpression	"""SECMAN: action attribute missing from classad\\n"""		3428160	0					
ANR	3429162	ExpressionStatement	m_auth_info . dPrint ( D_SECURITY )	1521:4:43854:43886	3428160	1	True				
ANR	3429163	CallExpression	m_auth_info . dPrint ( D_SECURITY )		3428160	0					
ANR	3429164	Callee	m_auth_info . dPrint		3428160	0					
ANR	3429165	MemberAccess	m_auth_info . dPrint		3428160	0					
ANR	3429166	Identifier	m_auth_info		3428160	0					
ANR	3429167	Identifier	dPrint		3428160	1					
ANR	3429168	ArgumentList	D_SECURITY		3428160	1					
ANR	3429169	Argument	D_SECURITY		3428160	0					
ANR	3429170	Identifier	D_SECURITY		3428160	0					
ANR	3429171	ExpressionStatement	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_ATTRIBUTE_MISSING , ""Protocol Error: Action attribute missing."" )"	1522:4:43892:44000	3428160	2	True				
ANR	3429172	CallExpression	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_ATTRIBUTE_MISSING , ""Protocol Error: Action attribute missing."" )"		3428160	0					
ANR	3429173	Callee	m_errstack -> push		3428160	0					
ANR	3429174	PtrMemberAccess	m_errstack -> push		3428160	0					
ANR	3429175	Identifier	m_errstack		3428160	0					
ANR	3429176	Identifier	push		3428160	1					
ANR	3429177	ArgumentList	"""SECMAN"""		3428160	1					
ANR	3429178	Argument	"""SECMAN"""		3428160	0					
ANR	3429179	PrimaryExpression	"""SECMAN"""		3428160	0					
ANR	3429180	Argument	SECMAN_ERR_ATTRIBUTE_MISSING		3428160	1					
ANR	3429181	Identifier	SECMAN_ERR_ATTRIBUTE_MISSING		3428160	0					
ANR	3429182	Argument	"""Protocol Error: Action attribute missing."""		3428160	2					
ANR	3429183	PrimaryExpression	"""Protocol Error: Action attribute missing."""		3428160	0					
ANR	3429184	ReturnStatement	return StartCommandFailed ;	1524:4:44006:44031	3428160	3	True				
ANR	3429185	Identifier	StartCommandFailed		3428160	0					
ANR	3429186	IdentifierDeclStatement	KeyInfo * ki = NULL ;	1528:3:44043:44062	3428160	5	True				
ANR	3429187	IdentifierDecl	* ki = NULL		3428160	0					
ANR	3429188	IdentifierDeclType	KeyInfo *		3428160	0					
ANR	3429189	Identifier	ki		3428160	1					
ANR	3429190	AssignmentExpression	* ki = NULL		3428160	2		=			
ANR	3429191	Identifier	NULL		3428160	0					
ANR	3429192	Identifier	NULL		3428160	1					
ANR	3429193	IfStatement	if ( m_enc_key -> key ( ) )		3428160	6					
ANR	3429194	Condition	m_enc_key -> key ( )	1529:7:44071:44086	3428160	0	True				
ANR	3429195	CallExpression	m_enc_key -> key ( )		3428160	0					
ANR	3429196	Callee	m_enc_key -> key		3428160	0					
ANR	3429197	PtrMemberAccess	m_enc_key -> key		3428160	0					
ANR	3429198	Identifier	m_enc_key		3428160	0					
ANR	3429199	Identifier	key		3428160	1					
ANR	3429200	ArgumentList			3428160	1					
ANR	3429201	CompoundStatement		279:25:9622:9622	3428160	1					
ANR	3429202	ExpressionStatement	ki = new KeyInfo ( * ( m_enc_key -> key ( ) ) )	1530:4:44095:44133	3428160	0	True				
ANR	3429203	AssignmentExpression	ki = new KeyInfo ( * ( m_enc_key -> key ( ) ) )		3428160	0		=			
ANR	3429204	Identifier	ki		3428160	0					
ANR	3429205	UnaryOperationExpression	* ( m_enc_key -> key ( ) )		3428160	1					
ANR	3429206	UnaryOperator	*		3428160	0					
ANR	3429207	CallExpression	m_enc_key -> key ( )		3428160	1					
ANR	3429208	Callee	m_enc_key -> key		3428160	0					
ANR	3429209	PtrMemberAccess	m_enc_key -> key		3428160	0					
ANR	3429210	Identifier	m_enc_key		3428160	0					
ANR	3429211	Identifier	key		3428160	1					
ANR	3429212	ArgumentList			3428160	1					
ANR	3429213	IfStatement	if ( will_enable_mac == SecMan :: SEC_FEAT_ACT_YES )		3428160	7					
ANR	3429214	Condition	will_enable_mac == SecMan :: SEC_FEAT_ACT_YES	1533:7:44151:44193	3428160	0	True				
ANR	3429215	EqualityExpression	will_enable_mac == SecMan :: SEC_FEAT_ACT_YES		3428160	0		==			
ANR	3429216	Identifier	will_enable_mac		3428160	0					
ANR	3429217	Identifier	SecMan :: SEC_FEAT_ACT_YES		3428160	1					
ANR	3429218	CompoundStatement		301:4:10276:10314	3428160	1					
ANR	3429219	IfStatement	if ( ! ki )		3428160	0					
ANR	3429220	Condition	! ki	1535:8:44207:44209	3428160	0	True				
ANR	3429221	UnaryOperationExpression	! ki		3428160	0					
ANR	3429222	UnaryOperator	!		3428160	0					
ANR	3429223	Identifier	ki		3428160	1					
ANR	3429224	CompoundStatement		285:13:9745:9745	3428160	1					
ANR	3429225	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: enable_mac has no key to use, failing...\\n"" )"	1536:5:44219:44292	3428160	0	True				
ANR	3429226	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: enable_mac has no key to use, failing...\\n"" )"		3428160	0					
ANR	3429227	Callee	dprintf		3428160	0					
ANR	3429228	Identifier	dprintf		3428160	0					
ANR	3429229	ArgumentList	D_ALWAYS		3428160	1					
ANR	3429230	Argument	D_ALWAYS		3428160	0					
ANR	3429231	Identifier	D_ALWAYS		3428160	0					
ANR	3429232	Argument	"""SECMAN: enable_mac has no key to use, failing...\\n"""		3428160	1					
ANR	3429233	PrimaryExpression	"""SECMAN: enable_mac has no key to use, failing...\\n"""		3428160	0					
ANR	3429234	ExpressionStatement	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_NO_KEY , ""Failed to establish a crypto key."" )"	1537:5:44299:44390	3428160	1	True				
ANR	3429235	CallExpression	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_NO_KEY , ""Failed to establish a crypto key."" )"		3428160	0					
ANR	3429236	Callee	m_errstack -> push		3428160	0					
ANR	3429237	PtrMemberAccess	m_errstack -> push		3428160	0					
ANR	3429238	Identifier	m_errstack		3428160	0					
ANR	3429239	Identifier	push		3428160	1					
ANR	3429240	ArgumentList	"""SECMAN"""		3428160	1					
ANR	3429241	Argument	"""SECMAN"""		3428160	0					
ANR	3429242	PrimaryExpression	"""SECMAN"""		3428160	0					
ANR	3429243	Argument	SECMAN_ERR_NO_KEY		3428160	1					
ANR	3429244	Identifier	SECMAN_ERR_NO_KEY		3428160	0					
ANR	3429245	Argument	"""Failed to establish a crypto key."""		3428160	2					
ANR	3429246	PrimaryExpression	"""Failed to establish a crypto key."""		3428160	0					
ANR	3429247	ReturnStatement	return StartCommandFailed ;	1539:5:44397:44422	3428160	2	True				
ANR	3429248	Identifier	StartCommandFailed		3428160	0					
ANR	3429249	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3428160	1					
ANR	3429250	Condition	DebugFlags & D_FULLDEBUG	1542:8:44439:44462	3428160	0	True				
ANR	3429251	BitAndExpression	DebugFlags & D_FULLDEBUG		3428160	0		&			
ANR	3429252	Identifier	DebugFlags		3428160	0					
ANR	3429253	Identifier	D_FULLDEBUG		3428160	1					
ANR	3429254	CompoundStatement		292:34:9998:9998	3428160	1					
ANR	3429255	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: about to enable message authenticator.\\n"" )"	1543:5:44472:44544	3428160	0	True				
ANR	3429256	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: about to enable message authenticator.\\n"" )"		3428160	0					
ANR	3429257	Callee	dprintf		3428160	0					
ANR	3429258	Identifier	dprintf		3428160	0					
ANR	3429259	ArgumentList	D_SECURITY		3428160	1					
ANR	3429260	Argument	D_SECURITY		3428160	0					
ANR	3429261	Identifier	D_SECURITY		3428160	0					
ANR	3429262	Argument	"""SECMAN: about to enable message authenticator.\\n"""		3428160	1					
ANR	3429263	PrimaryExpression	"""SECMAN: about to enable message authenticator.\\n"""		3428160	0					
ANR	3429264	ExpressionStatement	"m_sec_man . key_printf ( D_SECURITY , ki )"	1544:5:44551:44587	3428160	1	True				
ANR	3429265	CallExpression	"m_sec_man . key_printf ( D_SECURITY , ki )"		3428160	0					
ANR	3429266	Callee	m_sec_man . key_printf		3428160	0					
ANR	3429267	MemberAccess	m_sec_man . key_printf		3428160	0					
ANR	3429268	Identifier	m_sec_man		3428160	0					
ANR	3429269	Identifier	key_printf		3428160	1					
ANR	3429270	ArgumentList	D_SECURITY		3428160	1					
ANR	3429271	Argument	D_SECURITY		3428160	0					
ANR	3429272	Identifier	D_SECURITY		3428160	0					
ANR	3429273	Argument	ki		3428160	1					
ANR	3429274	Identifier	ki		3428160	0					
ANR	3429275	IdentifierDeclStatement	MyString key_id = m_enc_key -> id ( ) ;	1548:4:44648:44681	3428160	2	True				
ANR	3429276	IdentifierDecl	key_id = m_enc_key -> id ( )		3428160	0					
ANR	3429277	IdentifierDeclType	MyString		3428160	0					
ANR	3429278	Identifier	key_id		3428160	1					
ANR	3429279	AssignmentExpression	key_id = m_enc_key -> id ( )		3428160	2		=			
ANR	3429280	Identifier	key_id		3428160	0					
ANR	3429281	CallExpression	m_enc_key -> id ( )		3428160	1					
ANR	3429282	Callee	m_enc_key -> id		3428160	0					
ANR	3429283	PtrMemberAccess	m_enc_key -> id		3428160	0					
ANR	3429284	Identifier	m_enc_key		3428160	0					
ANR	3429285	Identifier	id		3428160	1					
ANR	3429286	ArgumentList			3428160	1					
ANR	3429287	IdentifierDeclStatement	char const * dcsss = global_dc_sinful ( ) ;	1551:4:44743:44781	3428160	3	True				
ANR	3429288	IdentifierDecl	* dcsss = global_dc_sinful ( )		3428160	0					
ANR	3429289	IdentifierDeclType	char const *		3428160	0					
ANR	3429290	Identifier	dcsss		3428160	1					
ANR	3429291	AssignmentExpression	* dcsss = global_dc_sinful ( )		3428160	2		=			
ANR	3429292	Identifier	dcsss		3428160	0					
ANR	3429293	CallExpression	global_dc_sinful ( )		3428160	1					
ANR	3429294	Callee	global_dc_sinful		3428160	0					
ANR	3429295	Identifier	global_dc_sinful		3428160	0					
ANR	3429296	ArgumentList			3428160	1					
ANR	3429297	IfStatement	if ( dcsss )		3428160	4					
ANR	3429298	Condition	dcsss	1552:8:44791:44795	3428160	0	True				
ANR	3429299	Identifier	dcsss		3428160	0					
ANR	3429300	CompoundStatement		302:15:10331:10331	3428160	1					
ANR	3429301	ExpressionStatement	"key_id += "","""	1553:5:44805:44818	3428160	0	True				
ANR	3429302	AssignmentExpression	"key_id += "","""		3428160	0		+=			
ANR	3429303	Identifier	key_id		3428160	0					
ANR	3429304	PrimaryExpression	""","""		3428160	1					
ANR	3429305	ExpressionStatement	key_id += dcsss	1554:5:44825:44840	3428160	1	True				
ANR	3429306	AssignmentExpression	key_id += dcsss		3428160	0		+=			
ANR	3429307	Identifier	key_id		3428160	0					
ANR	3429308	Identifier	dcsss		3428160	1					
ANR	3429309	ExpressionStatement	m_sock -> encode ( )	1557:4:44853:44869	3428160	5	True				
ANR	3429310	CallExpression	m_sock -> encode ( )		3428160	0					
ANR	3429311	Callee	m_sock -> encode		3428160	0					
ANR	3429312	PtrMemberAccess	m_sock -> encode		3428160	0					
ANR	3429313	Identifier	m_sock		3428160	0					
ANR	3429314	Identifier	encode		3428160	1					
ANR	3429315	ArgumentList			3428160	1					
ANR	3429316	ExpressionStatement	"m_sock -> set_MD_mode ( MD_ALWAYS_ON , ki , key_id . Value ( ) )"	1558:4:44875:44928	3428160	6	True				
ANR	3429317	CallExpression	"m_sock -> set_MD_mode ( MD_ALWAYS_ON , ki , key_id . Value ( ) )"		3428160	0					
ANR	3429318	Callee	m_sock -> set_MD_mode		3428160	0					
ANR	3429319	PtrMemberAccess	m_sock -> set_MD_mode		3428160	0					
ANR	3429320	Identifier	m_sock		3428160	0					
ANR	3429321	Identifier	set_MD_mode		3428160	1					
ANR	3429322	ArgumentList	MD_ALWAYS_ON		3428160	1					
ANR	3429323	Argument	MD_ALWAYS_ON		3428160	0					
ANR	3429324	Identifier	MD_ALWAYS_ON		3428160	0					
ANR	3429325	Argument	ki		3428160	1					
ANR	3429326	Identifier	ki		3428160	0					
ANR	3429327	Argument	key_id . Value ( )		3428160	2					
ANR	3429328	CallExpression	key_id . Value ( )		3428160	0					
ANR	3429329	Callee	key_id . Value		3428160	0					
ANR	3429330	MemberAccess	key_id . Value		3428160	0					
ANR	3429331	Identifier	key_id		3428160	0					
ANR	3429332	Identifier	Value		3428160	1					
ANR	3429333	ArgumentList			3428160	1					
ANR	3429334	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: successfully enabled message authenticator!\\n"" )"	1560:4:44935:45013	3428160	7	True				
ANR	3429335	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: successfully enabled message authenticator!\\n"" )"		3428160	0					
ANR	3429336	Callee	dprintf		3428160	0					
ANR	3429337	Identifier	dprintf		3428160	0					
ANR	3429338	ArgumentList	D_SECURITY		3428160	1					
ANR	3429339	Argument	D_SECURITY		3428160	0					
ANR	3429340	Identifier	D_SECURITY		3428160	0					
ANR	3429341	Argument	"""SECMAN: successfully enabled message authenticator!\\n"""		3428160	1					
ANR	3429342	PrimaryExpression	"""SECMAN: successfully enabled message authenticator!\\n"""		3428160	0					
ANR	3429343	IdentifierDeclStatement	bool turn_encryption_on = will_enable_enc == SecMan :: SEC_FEAT_ACT_YES ;	1563:3:45048:45117	3428160	8	True				
ANR	3429344	IdentifierDecl	turn_encryption_on = will_enable_enc == SecMan :: SEC_FEAT_ACT_YES		3428160	0					
ANR	3429345	IdentifierDeclType	bool		3428160	0					
ANR	3429346	Identifier	turn_encryption_on		3428160	1					
ANR	3429347	AssignmentExpression	turn_encryption_on = will_enable_enc == SecMan :: SEC_FEAT_ACT_YES		3428160	2		=			
ANR	3429348	Identifier	turn_encryption_on		3428160	0					
ANR	3429349	EqualityExpression	will_enable_enc == SecMan :: SEC_FEAT_ACT_YES		3428160	1		==			
ANR	3429350	Identifier	will_enable_enc		3428160	0					
ANR	3429351	Identifier	SecMan :: SEC_FEAT_ACT_YES		3428160	1					
ANR	3429352	IfStatement	if ( turn_encryption_on && ! ki )		3428160	9					
ANR	3429353	Condition	turn_encryption_on && ! ki	1564:7:45126:45150	3428160	0	True				
ANR	3429354	AndExpression	turn_encryption_on && ! ki		3428160	0		&&			
ANR	3429355	Identifier	turn_encryption_on		3428160	0					
ANR	3429356	UnaryOperationExpression	! ki		3428160	1					
ANR	3429357	UnaryOperator	!		3428160	0					
ANR	3429358	Identifier	ki		3428160	1					
ANR	3429359	CompoundStatement		314:34:10686:10686	3428160	1					
ANR	3429360	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: enable_enc no key to use, failing...\\n"" )"	1565:4:45159:45228	3428160	0	True				
ANR	3429361	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: enable_enc no key to use, failing...\\n"" )"		3428160	0					
ANR	3429362	Callee	dprintf		3428160	0					
ANR	3429363	Identifier	dprintf		3428160	0					
ANR	3429364	ArgumentList	D_ALWAYS		3428160	1					
ANR	3429365	Argument	D_ALWAYS		3428160	0					
ANR	3429366	Identifier	D_ALWAYS		3428160	0					
ANR	3429367	Argument	"""SECMAN: enable_enc no key to use, failing...\\n"""		3428160	1					
ANR	3429368	PrimaryExpression	"""SECMAN: enable_enc no key to use, failing...\\n"""		3428160	0					
ANR	3429369	ExpressionStatement	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_NO_KEY , ""Failed to establish a crypto key."" )"	1566:4:45234:45324	3428160	1	True				
ANR	3429370	CallExpression	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_NO_KEY , ""Failed to establish a crypto key."" )"		3428160	0					
ANR	3429371	Callee	m_errstack -> push		3428160	0					
ANR	3429372	PtrMemberAccess	m_errstack -> push		3428160	0					
ANR	3429373	Identifier	m_errstack		3428160	0					
ANR	3429374	Identifier	push		3428160	1					
ANR	3429375	ArgumentList	"""SECMAN"""		3428160	1					
ANR	3429376	Argument	"""SECMAN"""		3428160	0					
ANR	3429377	PrimaryExpression	"""SECMAN"""		3428160	0					
ANR	3429378	Argument	SECMAN_ERR_NO_KEY		3428160	1					
ANR	3429379	Identifier	SECMAN_ERR_NO_KEY		3428160	0					
ANR	3429380	Argument	"""Failed to establish a crypto key."""		3428160	2					
ANR	3429381	PrimaryExpression	"""Failed to establish a crypto key."""		3428160	0					
ANR	3429382	ReturnStatement	return StartCommandFailed ;	1568:4:45330:45355	3428160	2	True				
ANR	3429383	Identifier	StartCommandFailed		3428160	0					
ANR	3429384	IfStatement	if ( ki )		3428160	10					
ANR	3429385	Condition	ki	1571:7:45370:45371	3428160	0	True				
ANR	3429386	Identifier	ki		3428160	0					
ANR	3429387	CompoundStatement		331:4:11213:11251	3428160	1					
ANR	3429388	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3428160	0					
ANR	3429389	Condition	DebugFlags & D_FULLDEBUG	1572:8:45385:45408	3428160	0	True				
ANR	3429390	BitAndExpression	DebugFlags & D_FULLDEBUG		3428160	0		&			
ANR	3429391	Identifier	DebugFlags		3428160	0					
ANR	3429392	Identifier	D_FULLDEBUG		3428160	1					
ANR	3429393	CompoundStatement		322:34:10944:10944	3428160	1					
ANR	3429394	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: about to enable encryption.\\n"" )"	1573:5:45418:45479	3428160	0	True				
ANR	3429395	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: about to enable encryption.\\n"" )"		3428160	0					
ANR	3429396	Callee	dprintf		3428160	0					
ANR	3429397	Identifier	dprintf		3428160	0					
ANR	3429398	ArgumentList	D_SECURITY		3428160	1					
ANR	3429399	Argument	D_SECURITY		3428160	0					
ANR	3429400	Identifier	D_SECURITY		3428160	0					
ANR	3429401	Argument	"""SECMAN: about to enable encryption.\\n"""		3428160	1					
ANR	3429402	PrimaryExpression	"""SECMAN: about to enable encryption.\\n"""		3428160	0					
ANR	3429403	ExpressionStatement	"m_sec_man . key_printf ( D_SECURITY , ki )"	1574:5:45486:45522	3428160	1	True				
ANR	3429404	CallExpression	"m_sec_man . key_printf ( D_SECURITY , ki )"		3428160	0					
ANR	3429405	Callee	m_sec_man . key_printf		3428160	0					
ANR	3429406	MemberAccess	m_sec_man . key_printf		3428160	0					
ANR	3429407	Identifier	m_sec_man		3428160	0					
ANR	3429408	Identifier	key_printf		3428160	1					
ANR	3429409	ArgumentList	D_SECURITY		3428160	1					
ANR	3429410	Argument	D_SECURITY		3428160	0					
ANR	3429411	Identifier	D_SECURITY		3428160	0					
ANR	3429412	Argument	ki		3428160	1					
ANR	3429413	Identifier	ki		3428160	0					
ANR	3429414	IdentifierDeclStatement	MyString key_id = m_enc_key -> id ( ) ;	1578:4:45584:45617	3428160	1	True				
ANR	3429415	IdentifierDecl	key_id = m_enc_key -> id ( )		3428160	0					
ANR	3429416	IdentifierDeclType	MyString		3428160	0					
ANR	3429417	Identifier	key_id		3428160	1					
ANR	3429418	AssignmentExpression	key_id = m_enc_key -> id ( )		3428160	2		=			
ANR	3429419	Identifier	key_id		3428160	0					
ANR	3429420	CallExpression	m_enc_key -> id ( )		3428160	1					
ANR	3429421	Callee	m_enc_key -> id		3428160	0					
ANR	3429422	PtrMemberAccess	m_enc_key -> id		3428160	0					
ANR	3429423	Identifier	m_enc_key		3428160	0					
ANR	3429424	Identifier	id		3428160	1					
ANR	3429425	ArgumentList			3428160	1					
ANR	3429426	IdentifierDeclStatement	char const * dcsss = global_dc_sinful ( ) ;	1581:4:45680:45718	3428160	2	True				
ANR	3429427	IdentifierDecl	* dcsss = global_dc_sinful ( )		3428160	0					
ANR	3429428	IdentifierDeclType	char const *		3428160	0					
ANR	3429429	Identifier	dcsss		3428160	1					
ANR	3429430	AssignmentExpression	* dcsss = global_dc_sinful ( )		3428160	2		=			
ANR	3429431	Identifier	dcsss		3428160	0					
ANR	3429432	CallExpression	global_dc_sinful ( )		3428160	1					
ANR	3429433	Callee	global_dc_sinful		3428160	0					
ANR	3429434	Identifier	global_dc_sinful		3428160	0					
ANR	3429435	ArgumentList			3428160	1					
ANR	3429436	IfStatement	if ( dcsss )		3428160	3					
ANR	3429437	Condition	dcsss	1582:8:45728:45732	3428160	0	True				
ANR	3429438	Identifier	dcsss		3428160	0					
ANR	3429439	CompoundStatement		332:15:11268:11268	3428160	1					
ANR	3429440	ExpressionStatement	"key_id += "","""	1583:5:45742:45755	3428160	0	True				
ANR	3429441	AssignmentExpression	"key_id += "","""		3428160	0		+=			
ANR	3429442	Identifier	key_id		3428160	0					
ANR	3429443	PrimaryExpression	""","""		3428160	1					
ANR	3429444	ExpressionStatement	key_id += dcsss	1584:5:45762:45777	3428160	1	True				
ANR	3429445	AssignmentExpression	key_id += dcsss		3428160	0		+=			
ANR	3429446	Identifier	key_id		3428160	0					
ANR	3429447	Identifier	dcsss		3428160	1					
ANR	3429448	ExpressionStatement	m_sock -> encode ( )	1588:4:45791:45807	3428160	4	True				
ANR	3429449	CallExpression	m_sock -> encode ( )		3428160	0					
ANR	3429450	Callee	m_sock -> encode		3428160	0					
ANR	3429451	PtrMemberAccess	m_sock -> encode		3428160	0					
ANR	3429452	Identifier	m_sock		3428160	0					
ANR	3429453	Identifier	encode		3428160	1					
ANR	3429454	ArgumentList			3428160	1					
ANR	3429455	ExpressionStatement	"m_sock -> set_crypto_key ( turn_encryption_on , ki , key_id . Value ( ) )"	1589:4:45813:45875	3428160	5	True				
ANR	3429456	CallExpression	"m_sock -> set_crypto_key ( turn_encryption_on , ki , key_id . Value ( ) )"		3428160	0					
ANR	3429457	Callee	m_sock -> set_crypto_key		3428160	0					
ANR	3429458	PtrMemberAccess	m_sock -> set_crypto_key		3428160	0					
ANR	3429459	Identifier	m_sock		3428160	0					
ANR	3429460	Identifier	set_crypto_key		3428160	1					
ANR	3429461	ArgumentList	turn_encryption_on		3428160	1					
ANR	3429462	Argument	turn_encryption_on		3428160	0					
ANR	3429463	Identifier	turn_encryption_on		3428160	0					
ANR	3429464	Argument	ki		3428160	1					
ANR	3429465	Identifier	ki		3428160	0					
ANR	3429466	Argument	key_id . Value ( )		3428160	2					
ANR	3429467	CallExpression	key_id . Value ( )		3428160	0					
ANR	3429468	Callee	key_id . Value		3428160	0					
ANR	3429469	MemberAccess	key_id . Value		3428160	0					
ANR	3429470	Identifier	key_id		3428160	0					
ANR	3429471	Identifier	Value		3428160	1					
ANR	3429472	ArgumentList			3428160	1					
ANR	3429473	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: successfully enabled encryption%s.\\n"" , turn_encryption_on ? """" : "" (but encryption mode is off by default for this packet)"" )"	1591:4:45882:46053	3428160	6	True				
ANR	3429474	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: successfully enabled encryption%s.\\n"" , turn_encryption_on ? """" : "" (but encryption mode is off by default for this packet)"" )"		3428160	0					
ANR	3429475	Callee	dprintf		3428160	0					
ANR	3429476	Identifier	dprintf		3428160	0					
ANR	3429477	ArgumentList	D_SECURITY		3428160	1					
ANR	3429478	Argument	D_SECURITY		3428160	0					
ANR	3429479	Identifier	D_SECURITY		3428160	0					
ANR	3429480	Argument	"""SECMAN: successfully enabled encryption%s.\\n"""		3428160	1					
ANR	3429481	PrimaryExpression	"""SECMAN: successfully enabled encryption%s.\\n"""		3428160	0					
ANR	3429482	Argument	"turn_encryption_on ? """" : "" (but encryption mode is off by default for this packet)"""		3428160	2					
ANR	3429483	ConditionalExpression	"turn_encryption_on ? """" : "" (but encryption mode is off by default for this packet)"""		3428160	0					
ANR	3429484	Condition	turn_encryption_on		3428160	0					
ANR	3429485	Identifier	turn_encryption_on		3428160	0					
ANR	3429486	PrimaryExpression	""""""		3428160	1					
ANR	3429487	PrimaryExpression	""" (but encryption mode is off by default for this packet)"""		3428160	2					
ANR	3429488	Statement	delete	1595:4:46060:46065	3428160	7	True				
ANR	3429489	ExpressionStatement	ki	1595:11:46067:46069	3428160	8	True				
ANR	3429490	Identifier	ki		3428160	0					
ANR	3429491	ElseStatement	else		3428160	0					
ANR	3429492	CompoundStatement		347:9:11618:11618	3428160	0					
ANR	3429493	ExpressionStatement	m_sock -> encode ( )	1599:3:46169:46185	3428160	0	True				
ANR	3429494	CallExpression	m_sock -> encode ( )		3428160	0					
ANR	3429495	Callee	m_sock -> encode		3428160	0					
ANR	3429496	PtrMemberAccess	m_sock -> encode		3428160	0					
ANR	3429497	Identifier	m_sock		3428160	0					
ANR	3429498	Identifier	encode		3428160	1					
ANR	3429499	ArgumentList			3428160	1					
ANR	3429500	IfStatement	if ( ! m_sock -> code ( m_cmd ) )		3428160	1					
ANR	3429501	Condition	! m_sock -> code ( m_cmd )	1600:7:46194:46213	3428160	0	True				
ANR	3429502	UnaryOperationExpression	! m_sock -> code ( m_cmd )		3428160	0					
ANR	3429503	UnaryOperator	!		3428160	0					
ANR	3429504	CallExpression	m_sock -> code ( m_cmd )		3428160	1					
ANR	3429505	Callee	m_sock -> code		3428160	0					
ANR	3429506	PtrMemberAccess	m_sock -> code		3428160	0					
ANR	3429507	Identifier	m_sock		3428160	0					
ANR	3429508	Identifier	code		3428160	1					
ANR	3429509	ArgumentList	m_cmd		3428160	1					
ANR	3429510	Argument	m_cmd		3428160	0					
ANR	3429511	Identifier	m_cmd		3428160	0					
ANR	3429512	CompoundStatement		350:30:11750:11750	3428160	1					
ANR	3429513	ExpressionStatement	"m_errstack -> pushf ( ""SECMAN"" , SECMAN_ERR_COMMUNICATIONS_ERROR , ""Failed to send raw UDP command to %s."" , m_sock -> peer_description ( ) )"	1601:4:46223:46376	3428160	0	True				
ANR	3429514	CallExpression	"m_errstack -> pushf ( ""SECMAN"" , SECMAN_ERR_COMMUNICATIONS_ERROR , ""Failed to send raw UDP command to %s."" , m_sock -> peer_description ( ) )"		3428160	0					
ANR	3429515	Callee	m_errstack -> pushf		3428160	0					
ANR	3429516	PtrMemberAccess	m_errstack -> pushf		3428160	0					
ANR	3429517	Identifier	m_errstack		3428160	0					
ANR	3429518	Identifier	pushf		3428160	1					
ANR	3429519	ArgumentList	"""SECMAN"""		3428160	1					
ANR	3429520	Argument	"""SECMAN"""		3428160	0					
ANR	3429521	PrimaryExpression	"""SECMAN"""		3428160	0					
ANR	3429522	Argument	SECMAN_ERR_COMMUNICATIONS_ERROR		3428160	1					
ANR	3429523	Identifier	SECMAN_ERR_COMMUNICATIONS_ERROR		3428160	0					
ANR	3429524	Argument	"""Failed to send raw UDP command to %s."""		3428160	2					
ANR	3429525	PrimaryExpression	"""Failed to send raw UDP command to %s."""		3428160	0					
ANR	3429526	Argument	m_sock -> peer_description ( )		3428160	3					
ANR	3429527	CallExpression	m_sock -> peer_description ( )		3428160	0					
ANR	3429528	Callee	m_sock -> peer_description		3428160	0					
ANR	3429529	PtrMemberAccess	m_sock -> peer_description		3428160	0					
ANR	3429530	Identifier	m_sock		3428160	0					
ANR	3429531	Identifier	peer_description		3428160	1					
ANR	3429532	ArgumentList			3428160	1					
ANR	3429533	ReturnStatement	return StartCommandFailed ;	1604:4:46382:46407	3428160	1	True				
ANR	3429534	Identifier	StartCommandFailed		3428160	0					
ANR	3429535	ReturnStatement	return StartCommandSucceeded ;	1606:3:46417:46445	3428160	2	True				
ANR	3429536	Identifier	StartCommandSucceeded		3428160	0					
ANR	3429537	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3428160	25					
ANR	3429538	Condition	DebugFlags & D_FULLDEBUG	1612:5:46509:46532	3428160	0	True				
ANR	3429539	BitAndExpression	DebugFlags & D_FULLDEBUG		3428160	0		&			
ANR	3429540	Identifier	DebugFlags		3428160	0					
ANR	3429541	Identifier	D_FULLDEBUG		3428160	1					
ANR	3429542	CompoundStatement		362:31:12068:12068	3428160	1					
ANR	3429543	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: sending DC_AUTHENTICATE command\\n"" )"	1613:2:46539:46605	3428160	0	True				
ANR	3429544	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: sending DC_AUTHENTICATE command\\n"" )"		3428160	0					
ANR	3429545	Callee	dprintf		3428160	0					
ANR	3429546	Identifier	dprintf		3428160	0					
ANR	3429547	ArgumentList	D_SECURITY		3428160	1					
ANR	3429548	Argument	D_SECURITY		3428160	0					
ANR	3429549	Identifier	D_SECURITY		3428160	0					
ANR	3429550	Argument	"""SECMAN: sending DC_AUTHENTICATE command\\n"""		3428160	1					
ANR	3429551	PrimaryExpression	"""SECMAN: sending DC_AUTHENTICATE command\\n"""		3428160	0					
ANR	3429552	IdentifierDeclStatement	int authcmd = DC_AUTHENTICATE ;	1615:1:46611:46640	3428160	26	True				
ANR	3429553	IdentifierDecl	authcmd = DC_AUTHENTICATE		3428160	0					
ANR	3429554	IdentifierDeclType	int		3428160	0					
ANR	3429555	Identifier	authcmd		3428160	1					
ANR	3429556	AssignmentExpression	authcmd = DC_AUTHENTICATE		3428160	2		=			
ANR	3429557	Identifier	DC_AUTHENTICATE		3428160	0					
ANR	3429558	Identifier	DC_AUTHENTICATE		3428160	1					
ANR	3429559	ExpressionStatement	m_sock -> encode ( )	1616:4:46646:46662	3428160	27	True				
ANR	3429560	CallExpression	m_sock -> encode ( )		3428160	0					
ANR	3429561	Callee	m_sock -> encode		3428160	0					
ANR	3429562	PtrMemberAccess	m_sock -> encode		3428160	0					
ANR	3429563	Identifier	m_sock		3428160	0					
ANR	3429564	Identifier	encode		3428160	1					
ANR	3429565	ArgumentList			3428160	1					
ANR	3429566	IfStatement	if ( ! m_sock -> code ( authcmd ) )		3428160	28					
ANR	3429567	Condition	! m_sock -> code ( authcmd )	1617:5:46669:46691	3428160	0	True				
ANR	3429568	UnaryOperationExpression	! m_sock -> code ( authcmd )		3428160	0					
ANR	3429569	UnaryOperator	!		3428160	0					
ANR	3429570	CallExpression	m_sock -> code ( authcmd )		3428160	1					
ANR	3429571	Callee	m_sock -> code		3428160	0					
ANR	3429572	PtrMemberAccess	m_sock -> code		3428160	0					
ANR	3429573	Identifier	m_sock		3428160	0					
ANR	3429574	Identifier	code		3428160	1					
ANR	3429575	ArgumentList	authcmd		3428160	1					
ANR	3429576	Argument	authcmd		3428160	0					
ANR	3429577	Identifier	authcmd		3428160	0					
ANR	3429578	CompoundStatement		367:30:12227:12227	3428160	1					
ANR	3429579	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: failed to send DC_AUTHENTICATE\\n"" )"	1618:2:46698:46761	3428160	0	True				
ANR	3429580	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: failed to send DC_AUTHENTICATE\\n"" )"		3428160	0					
ANR	3429581	Callee	dprintf		3428160	0					
ANR	3429582	Identifier	dprintf		3428160	0					
ANR	3429583	ArgumentList	D_ALWAYS		3428160	1					
ANR	3429584	Argument	D_ALWAYS		3428160	0					
ANR	3429585	Identifier	D_ALWAYS		3428160	0					
ANR	3429586	Argument	"""SECMAN: failed to send DC_AUTHENTICATE\\n"""		3428160	1					
ANR	3429587	PrimaryExpression	"""SECMAN: failed to send DC_AUTHENTICATE\\n"""		3428160	0					
ANR	3429588	ExpressionStatement	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_COMMUNICATIONS_ERROR , ""Failed to send DC_AUTHENTICATE message."" )"	1619:2:46765:46875	3428160	1	True				
ANR	3429589	CallExpression	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_COMMUNICATIONS_ERROR , ""Failed to send DC_AUTHENTICATE message."" )"		3428160	0					
ANR	3429590	Callee	m_errstack -> push		3428160	0					
ANR	3429591	PtrMemberAccess	m_errstack -> push		3428160	0					
ANR	3429592	Identifier	m_errstack		3428160	0					
ANR	3429593	Identifier	push		3428160	1					
ANR	3429594	ArgumentList	"""SECMAN"""		3428160	1					
ANR	3429595	Argument	"""SECMAN"""		3428160	0					
ANR	3429596	PrimaryExpression	"""SECMAN"""		3428160	0					
ANR	3429597	Argument	SECMAN_ERR_COMMUNICATIONS_ERROR		3428160	1					
ANR	3429598	Identifier	SECMAN_ERR_COMMUNICATIONS_ERROR		3428160	0					
ANR	3429599	Argument	"""Failed to send DC_AUTHENTICATE message."""		3428160	2					
ANR	3429600	PrimaryExpression	"""Failed to send DC_AUTHENTICATE message."""		3428160	0					
ANR	3429601	ReturnStatement	return StartCommandFailed ;	1621:2:46879:46904	3428160	2	True				
ANR	3429602	Identifier	StartCommandFailed		3428160	0					
ANR	3429603	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3428160	29					
ANR	3429604	Condition	DebugFlags & D_FULLDEBUG	1625:5:46916:46939	3428160	0	True				
ANR	3429605	BitAndExpression	DebugFlags & D_FULLDEBUG		3428160	0		&			
ANR	3429606	Identifier	DebugFlags		3428160	0					
ANR	3429607	Identifier	D_FULLDEBUG		3428160	1					
ANR	3429608	CompoundStatement		375:31:12475:12475	3428160	1					
ANR	3429609	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: sending following classad:\\n"" )"	1626:2:46946:47007	3428160	0	True				
ANR	3429610	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: sending following classad:\\n"" )"		3428160	0					
ANR	3429611	Callee	dprintf		3428160	0					
ANR	3429612	Identifier	dprintf		3428160	0					
ANR	3429613	ArgumentList	D_SECURITY		3428160	1					
ANR	3429614	Argument	D_SECURITY		3428160	0					
ANR	3429615	Identifier	D_SECURITY		3428160	0					
ANR	3429616	Argument	"""SECMAN: sending following classad:\\n"""		3428160	1					
ANR	3429617	PrimaryExpression	"""SECMAN: sending following classad:\\n"""		3428160	0					
ANR	3429618	ExpressionStatement	m_auth_info . dPrint ( D_SECURITY )	1627:2:47011:47044	3428160	1	True				
ANR	3429619	CallExpression	m_auth_info . dPrint ( D_SECURITY )		3428160	0					
ANR	3429620	Callee	m_auth_info . dPrint		3428160	0					
ANR	3429621	MemberAccess	m_auth_info . dPrint		3428160	0					
ANR	3429622	Identifier	m_auth_info		3428160	0					
ANR	3429623	Identifier	dPrint		3428160	1					
ANR	3429624	ArgumentList	D_SECURITY		3428160	1					
ANR	3429625	Argument	D_SECURITY		3428160	0					
ANR	3429626	Identifier	D_SECURITY		3428160	0					
ANR	3429627	IfStatement	if ( ! m_auth_info . put ( * m_sock ) )		3428160	30					
ANR	3429628	Condition	! m_auth_info . put ( * m_sock )	1631:5:47076:47101	3428160	0	True				
ANR	3429629	UnaryOperationExpression	! m_auth_info . put ( * m_sock )		3428160	0					
ANR	3429630	UnaryOperator	!		3428160	0					
ANR	3429631	CallExpression	m_auth_info . put ( * m_sock )		3428160	1					
ANR	3429632	Callee	m_auth_info . put		3428160	0					
ANR	3429633	MemberAccess	m_auth_info . put		3428160	0					
ANR	3429634	Identifier	m_auth_info		3428160	0					
ANR	3429635	Identifier	put		3428160	1					
ANR	3429636	ArgumentList	* m_sock		3428160	1					
ANR	3429637	Argument	* m_sock		3428160	0					
ANR	3429638	UnaryOperationExpression	* m_sock		3428160	0					
ANR	3429639	UnaryOperator	*		3428160	0					
ANR	3429640	Identifier	m_sock		3428160	1					
ANR	3429641	CompoundStatement		381:33:12637:12637	3428160	1					
ANR	3429642	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: failed to send auth_info\\n"" )"	1632:2:47108:47165	3428160	0	True				
ANR	3429643	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: failed to send auth_info\\n"" )"		3428160	0					
ANR	3429644	Callee	dprintf		3428160	0					
ANR	3429645	Identifier	dprintf		3428160	0					
ANR	3429646	ArgumentList	D_ALWAYS		3428160	1					
ANR	3429647	Argument	D_ALWAYS		3428160	0					
ANR	3429648	Identifier	D_ALWAYS		3428160	0					
ANR	3429649	Argument	"""SECMAN: failed to send auth_info\\n"""		3428160	1					
ANR	3429650	PrimaryExpression	"""SECMAN: failed to send auth_info\\n"""		3428160	0					
ANR	3429651	ExpressionStatement	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_COMMUNICATIONS_ERROR , ""Failed to send auth_info."" )"	1633:2:47169:47265	3428160	1	True				
ANR	3429652	CallExpression	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_COMMUNICATIONS_ERROR , ""Failed to send auth_info."" )"		3428160	0					
ANR	3429653	Callee	m_errstack -> push		3428160	0					
ANR	3429654	PtrMemberAccess	m_errstack -> push		3428160	0					
ANR	3429655	Identifier	m_errstack		3428160	0					
ANR	3429656	Identifier	push		3428160	1					
ANR	3429657	ArgumentList	"""SECMAN"""		3428160	1					
ANR	3429658	Argument	"""SECMAN"""		3428160	0					
ANR	3429659	PrimaryExpression	"""SECMAN"""		3428160	0					
ANR	3429660	Argument	SECMAN_ERR_COMMUNICATIONS_ERROR		3428160	1					
ANR	3429661	Identifier	SECMAN_ERR_COMMUNICATIONS_ERROR		3428160	0					
ANR	3429662	Argument	"""Failed to send auth_info."""		3428160	2					
ANR	3429663	PrimaryExpression	"""Failed to send auth_info."""		3428160	0					
ANR	3429664	ReturnStatement	return StartCommandFailed ;	1635:2:47269:47294	3428160	2	True				
ANR	3429665	Identifier	StartCommandFailed		3428160	0					
ANR	3429666	IfStatement	if ( m_is_tcp )		3428160	31					
ANR	3429667	Condition	m_is_tcp	1639:5:47306:47313	3428160	0	True				
ANR	3429668	Identifier	m_is_tcp		3428160	0					
ANR	3429669	CompoundStatement		389:15:12849:12849	3428160	1					
ANR	3429670	IfStatement	if ( ! m_sock -> end_of_message ( ) )		3428160	0					
ANR	3429671	Condition	! m_sock -> end_of_message ( )	1641:6:47325:47350	3428160	0	True				
ANR	3429672	UnaryOperationExpression	! m_sock -> end_of_message ( )		3428160	0					
ANR	3429673	UnaryOperator	!		3428160	0					
ANR	3429674	CallExpression	m_sock -> end_of_message ( )		3428160	1					
ANR	3429675	Callee	m_sock -> end_of_message		3428160	0					
ANR	3429676	PtrMemberAccess	m_sock -> end_of_message		3428160	0					
ANR	3429677	Identifier	m_sock		3428160	0					
ANR	3429678	Identifier	end_of_message		3428160	1					
ANR	3429679	ArgumentList			3428160	1					
ANR	3429680	CompoundStatement		391:34:12886:12886	3428160	1					
ANR	3429681	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: failed to end classad message\\n"" )"	1642:3:47358:47420	3428160	0	True				
ANR	3429682	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: failed to end classad message\\n"" )"		3428160	0					
ANR	3429683	Callee	dprintf		3428160	0					
ANR	3429684	Identifier	dprintf		3428160	0					
ANR	3429685	ArgumentList	D_ALWAYS		3428160	1					
ANR	3429686	Argument	D_ALWAYS		3428160	0					
ANR	3429687	Identifier	D_ALWAYS		3428160	0					
ANR	3429688	Argument	"""SECMAN: failed to end classad message\\n"""		3428160	1					
ANR	3429689	PrimaryExpression	"""SECMAN: failed to end classad message\\n"""		3428160	0					
ANR	3429690	ExpressionStatement	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_COMMUNICATIONS_ERROR , ""Failed to end classad message."" )"	1643:3:47425:47526	3428160	1	True				
ANR	3429691	CallExpression	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_COMMUNICATIONS_ERROR , ""Failed to end classad message."" )"		3428160	0					
ANR	3429692	Callee	m_errstack -> push		3428160	0					
ANR	3429693	PtrMemberAccess	m_errstack -> push		3428160	0					
ANR	3429694	Identifier	m_errstack		3428160	0					
ANR	3429695	Identifier	push		3428160	1					
ANR	3429696	ArgumentList	"""SECMAN"""		3428160	1					
ANR	3429697	Argument	"""SECMAN"""		3428160	0					
ANR	3429698	PrimaryExpression	"""SECMAN"""		3428160	0					
ANR	3429699	Argument	SECMAN_ERR_COMMUNICATIONS_ERROR		3428160	1					
ANR	3429700	Identifier	SECMAN_ERR_COMMUNICATIONS_ERROR		3428160	0					
ANR	3429701	Argument	"""Failed to end classad message."""		3428160	2					
ANR	3429702	PrimaryExpression	"""Failed to end classad message."""		3428160	0					
ANR	3429703	ReturnStatement	return StartCommandFailed ;	1645:3:47531:47556	3428160	2	True				
ANR	3429704	Identifier	StartCommandFailed		3428160	0					
ANR	3429705	ExpressionStatement	m_state = ReceiveAuthInfo	1649:1:47567:47592	3428160	32	True				
ANR	3429706	AssignmentExpression	m_state = ReceiveAuthInfo		3428160	0		=			
ANR	3429707	Identifier	m_state		3428160	0					
ANR	3429708	Identifier	ReceiveAuthInfo		3428160	1					
ANR	3429709	ReturnStatement	return StartCommandContinue ;	1650:1:47595:47622	3428160	33	True				
ANR	3429710	Identifier	StartCommandContinue		3428160	0					
ANR	3429711	ReturnType	StartCommandResult		3428160	1					
ANR	3429712	Identifier	SecManStartCommand :: sendAuthInfo_inner		3428160	2					
ANR	3429713	ParameterList			3428160	3					
ANR	3429714	CFGEntryNode	ENTRY		3428160		True				
ANR	3429715	CFGExitNode	EXIT		3428160		True				
ANR	3429716	Symbol	m_session_key		3428160						
ANR	3429717	Symbol	will_authenticate		3428160						
ANR	3429718	Symbol	m_raw_protocol		3428160						
ANR	3429719	Symbol	ATTR_SEC_ENCRYPTION		3428160						
ANR	3429720	Symbol	SECMAN_ERR_ATTRIBUTE_MISSING		3428160						
ANR	3429721	Symbol	StartCommandFailed		3428160						
ANR	3429722	Symbol	m_sock -> peer_description		3428160						
ANR	3429723	Symbol	len		3428160						
ANR	3429724	Symbol	m_use_tmp_sec_session		3428160						
ANR	3429725	Symbol	CondorVersion		3428160						
ANR	3429726	Symbol	m_subcmd		3428160						
ANR	3429727	Symbol	SECMAN_ERR_NO_KEY		3428160						
ANR	3429728	Symbol	m_negotiation		3428160						
ANR	3429729	Symbol	* m_enc_key -> key		3428160						
ANR	3429730	Symbol	* m_sock		3428160						
ANR	3429731	Symbol	m_sock		3428160						
ANR	3429732	Symbol	m_sec_session_id_hint		3428160						
ANR	3429733	Symbol	sid . Value		3428160						
ANR	3429734	Symbol	DoTCPAuth_inner		3428160						
ANR	3429735	Symbol	ATTR_SEC_NEGOTIATION		3428160						
ANR	3429736	Symbol	dcss		3428160						
ANR	3429737	Symbol	ATTR_SEC_REMOTE_VERSION		3428160						
ANR	3429738	Symbol	m_sec_man . FillInSecurityPolicyAd		3428160						
ANR	3429739	Symbol	m_auth_info		3428160						
ANR	3429740	Symbol	ReceiveAuthInfo		3428160						
ANR	3429741	Symbol	DC_AUTHENTICATE		3428160						
ANR	3429742	Symbol	SecMan :: SEC_REQ_UNDEFINED		3428160						
ANR	3429743	Symbol	ATTR_SEC_COMMAND		3428160						
ANR	3429744	Symbol	will_enable_enc		3428160						
ANR	3429745	Symbol	ATTR_SEC_AUTHENTICATION		3428160						
ANR	3429746	Symbol	m_cmd		3428160						
ANR	3429747	Symbol	m_sock -> end_of_message		3428160						
ANR	3429748	Symbol	m_sock -> get_connect_addr		3428160						
ANR	3429749	Symbol	SecMan :: SEC_REQ_PREFERRED		3428160						
ANR	3429750	Symbol	m_sock -> code		3428160						
ANR	3429751	Symbol	m_session_key . Value		3428160						
ANR	3429752	Symbol	CLIENT_PERM		3428160						
ANR	3429753	Symbol	ver_info		3428160						
ANR	3429754	Symbol	ki		3428160						
ANR	3429755	Symbol	m_sec_man . sec_lookup_req		3428160						
ANR	3429756	Symbol	SecMan :: SEC_FEAT_ACT_UNDEFINED		3428160						
ANR	3429757	Symbol	m_remote_version		3428160						
ANR	3429758	Symbol	randomjunk		3428160						
ANR	3429759	Symbol	m_enc_key -> policy		3428160						
ANR	3429760	Symbol	ATTR_SEC_AUTH_COMMAND		3428160						
ANR	3429761	Symbol	SECMAN_ERR_INVALID_POLICY		3428160						
ANR	3429762	Symbol	m_enc_key		3428160						
ANR	3429763	Symbol	* * m_enc_key		3428160						
ANR	3429764	Symbol	SecMan :: SEC_FEAT_ACT_YES		3428160						
ANR	3429765	Symbol	m_sec_man . command_map -> remove		3428160						
ANR	3429766	Symbol	m_new_session		3428160						
ANR	3429767	Symbol	m_sec_man		3428160						
ANR	3429768	Symbol	SecMan :: SEC_FEAT_ACT_INVALID		3428160						
ANR	3429769	Symbol	& ver_info		3428160						
ANR	3429770	Symbol	m_state		3428160						
ANR	3429771	Symbol	m_sec_man . sec_lookup_feat_act		3428160						
ANR	3429772	Symbol	m_enc_key -> id		3428160						
ANR	3429773	Symbol	m_sec_man . sec_req_to_feat_act		3428160						
ANR	3429774	Symbol	dcsss		3428160						
ANR	3429775	Symbol	m_is_tcp		3428160						
ANR	3429776	Symbol	negotiate		3428160						
ANR	3429777	Symbol	* m_enc_key		3428160						
ANR	3429778	Symbol	NULL		3428160						
ANR	3429779	Symbol	m_sec_man . LookupNonExpiredSession		3428160						
ANR	3429780	Symbol	key_id . Value		3428160						
ANR	3429781	Symbol	destsinful		3428160						
ANR	3429782	Symbol	oursinful		3428160						
ANR	3429783	Symbol	key_id		3428160						
ANR	3429784	Symbol	oursinful . addressPointsToMe		3428160						
ANR	3429785	Symbol	D_FULLDEBUG		3428160						
ANR	3429786	Symbol	DebugFlags		3428160						
ANR	3429787	Symbol	ATTR_SEC_NEW_SESSION		3428160						
ANR	3429788	Symbol	SecMan :: SEC_FEAT_ACT_NO		3428160						
ANR	3429789	Symbol	StartCommandSucceeded		3428160						
ANR	3429790	Symbol	found_map_ent		3428160						
ANR	3429791	Symbol	m_sec_man . command_map -> lookup		3428160						
ANR	3429792	Symbol	* sid		3428160						
ANR	3429793	Symbol	true		3428160						
ANR	3429794	Symbol	MD_ALWAYS_ON		3428160						
ANR	3429795	Symbol	* m_sec_man . command_map		3428160						
ANR	3429796	Symbol	using_cookie		3428160						
ANR	3429797	Symbol	StartCommandContinue		3428160						
ANR	3429798	Symbol	* sid . Value		3428160						
ANR	3429799	Symbol	D_SECURITY		3428160						
ANR	3429800	Symbol	turn_encryption_on		3428160						
ANR	3429801	Symbol	m_have_session		3428160						
ANR	3429802	Symbol	m_auth_info . LookupString		3428160						
ANR	3429803	Symbol	will_enable_mac		3428160						
ANR	3429804	Symbol	& m_auth_info		3428160						
ANR	3429805	Symbol	sid		3428160						
ANR	3429806	Symbol	m_errstack		3428160						
ANR	3429807	Symbol	global_dc_sinful		3428160						
ANR	3429808	Symbol	authcmd		3428160						
ANR	3429809	Symbol	false		3428160						
ANR	3429810	Symbol	* m_sec_man		3428160						
ANR	3429811	Symbol	D_ALWAYS		3428160						
ANR	3429812	Symbol	m_sec_man . command_map		3428160						
ANR	3429813	Symbol	m_already_tried_TCP_auth		3428160						
ANR	3429814	Symbol	ATTR_SEC_COOKIE		3428160						
ANR	3429815	Symbol	m_auth_info . put		3428160						
ANR	3429816	Symbol	* ( m_enc_key -> key ( ) )		3428160						
ANR	3429817	Symbol	ATTR_SEC_SERVER_COMMAND_SOCK		3428160						
ANR	3429818	Symbol	m_enc_key -> key		3428160						
ANR	3429819	Symbol	ATTR_SEC_INTEGRITY		3428160						
ANR	3429820	Symbol	SECMAN_ERR_COMMUNICATIONS_ERROR		3428160						
ANR	3429821	Function	SecManStartCommand :: receiveAuthInfo_inner	1653:0:47627:51160							
ANR	3429822	FunctionDef	SecManStartCommand :: receiveAuthInfo_inner ()		3429821	0					
ANR	3429823	CompoundStatement		1655:0:47690:51160	3429821	0					
ANR	3429824	IfStatement	if ( m_is_tcp )		3429821	0					
ANR	3429825	Condition	m_is_tcp	1656:5:47697:47704	3429821	0	True				
ANR	3429826	Identifier	m_is_tcp		3429821	0					
ANR	3429827	CompoundStatement		2:15:16:16	3429821	1					
ANR	3429828	IfStatement	"if ( m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_ENACT ) != SecMan :: SEC_FEAT_ACT_YES )"		3429821	0					
ANR	3429829	Condition	"m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_ENACT ) != SecMan :: SEC_FEAT_ACT_YES"	1657:6:47715:47800	3429821	0	True				
ANR	3429830	EqualityExpression	"m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_ENACT ) != SecMan :: SEC_FEAT_ACT_YES"		3429821	0		!=			
ANR	3429831	CallExpression	"m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_ENACT )"		3429821	0					
ANR	3429832	Callee	m_sec_man . sec_lookup_feat_act		3429821	0					
ANR	3429833	MemberAccess	m_sec_man . sec_lookup_feat_act		3429821	0					
ANR	3429834	Identifier	m_sec_man		3429821	0					
ANR	3429835	Identifier	sec_lookup_feat_act		3429821	1					
ANR	3429836	ArgumentList	m_auth_info		3429821	1					
ANR	3429837	Argument	m_auth_info		3429821	0					
ANR	3429838	Identifier	m_auth_info		3429821	0					
ANR	3429839	Argument	ATTR_SEC_ENACT		3429821	1					
ANR	3429840	Identifier	ATTR_SEC_ENACT		3429821	0					
ANR	3429841	Identifier	SecMan :: SEC_FEAT_ACT_YES		3429821	1					
ANR	3429842	CompoundStatement		11:3:264:285	3429821	1					
ANR	3429843	IfStatement	if ( m_nonblocking && ! m_sock -> readReady ( ) )		3429821	0					
ANR	3429844	Condition	m_nonblocking && ! m_sock -> readReady ( )	1661:7:47868:47904	3429821	0	True				
ANR	3429845	AndExpression	m_nonblocking && ! m_sock -> readReady ( )		3429821	0		&&			
ANR	3429846	Identifier	m_nonblocking		3429821	0					
ANR	3429847	UnaryOperationExpression	! m_sock -> readReady ( )		3429821	1					
ANR	3429848	UnaryOperator	!		3429821	0					
ANR	3429849	CallExpression	m_sock -> readReady ( )		3429821	1					
ANR	3429850	Callee	m_sock -> readReady		3429821	0					
ANR	3429851	PtrMemberAccess	m_sock -> readReady		3429821	0					
ANR	3429852	Identifier	m_sock		3429821	0					
ANR	3429853	Identifier	readReady		3429821	1					
ANR	3429854	ArgumentList			3429821	1					
ANR	3429855	CompoundStatement		7:47:217:217	3429821	1					
ANR	3429856	ReturnStatement	return WaitForSocketCallback ( ) ;	1662:4:47914:47944	3429821	0	True				
ANR	3429857	CallExpression	WaitForSocketCallback ( )		3429821	0					
ANR	3429858	Callee	WaitForSocketCallback		3429821	0					
ANR	3429859	Identifier	WaitForSocketCallback		3429821	0					
ANR	3429860	ArgumentList			3429821	1					
ANR	3429861	IdentifierDeclStatement	ClassAd auth_response ;	1665:3:47955:47976	3429821	1	True				
ANR	3429862	IdentifierDecl	auth_response		3429821	0					
ANR	3429863	IdentifierDeclType	ClassAd		3429821	0					
ANR	3429864	Identifier	auth_response		3429821	1					
ANR	3429865	ExpressionStatement	m_sock -> decode ( )	1666:3:47981:47997	3429821	2	True				
ANR	3429866	CallExpression	m_sock -> decode ( )		3429821	0					
ANR	3429867	Callee	m_sock -> decode		3429821	0					
ANR	3429868	PtrMemberAccess	m_sock -> decode		3429821	0					
ANR	3429869	Identifier	m_sock		3429821	0					
ANR	3429870	Identifier	decode		3429821	1					
ANR	3429871	ArgumentList			3429821	1					
ANR	3429872	IfStatement	if ( ! auth_response . initFromStream ( * m_sock ) || ! m_sock -> end_of_message ( ) )		3429821	3					
ANR	3429873	Condition	! auth_response . initFromStream ( * m_sock ) || ! m_sock -> end_of_message ( )	1668:7:48007:48077	3429821	0	True				
ANR	3429874	OrExpression	! auth_response . initFromStream ( * m_sock ) || ! m_sock -> end_of_message ( )		3429821	0		||			
ANR	3429875	UnaryOperationExpression	! auth_response . initFromStream ( * m_sock )		3429821	0					
ANR	3429876	UnaryOperator	!		3429821	0					
ANR	3429877	CallExpression	auth_response . initFromStream ( * m_sock )		3429821	1					
ANR	3429878	Callee	auth_response . initFromStream		3429821	0					
ANR	3429879	MemberAccess	auth_response . initFromStream		3429821	0					
ANR	3429880	Identifier	auth_response		3429821	0					
ANR	3429881	Identifier	initFromStream		3429821	1					
ANR	3429882	ArgumentList	* m_sock		3429821	1					
ANR	3429883	Argument	* m_sock		3429821	0					
ANR	3429884	UnaryOperationExpression	* m_sock		3429821	0					
ANR	3429885	UnaryOperator	*		3429821	0					
ANR	3429886	Identifier	m_sock		3429821	1					
ANR	3429887	UnaryOperationExpression	! m_sock -> end_of_message ( )		3429821	1					
ANR	3429888	UnaryOperator	!		3429821	0					
ANR	3429889	CallExpression	m_sock -> end_of_message ( )		3429821	1					
ANR	3429890	Callee	m_sock -> end_of_message		3429821	0					
ANR	3429891	PtrMemberAccess	m_sock -> end_of_message		3429821	0					
ANR	3429892	Identifier	m_sock		3429821	0					
ANR	3429893	Identifier	end_of_message		3429821	1					
ANR	3429894	ArgumentList			3429821	1					
ANR	3429895	CompoundStatement		15:32:390:390	3429821	1					
ANR	3429896	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: no classad from server, failing\\n"" )"	1684:4:48704:48768	3429821	0	True				
ANR	3429897	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: no classad from server, failing\\n"" )"		3429821	0					
ANR	3429898	Callee	dprintf		3429821	0					
ANR	3429899	Identifier	dprintf		3429821	0					
ANR	3429900	ArgumentList	D_ALWAYS		3429821	1					
ANR	3429901	Argument	D_ALWAYS		3429821	0					
ANR	3429902	Identifier	D_ALWAYS		3429821	0					
ANR	3429903	Argument	"""SECMAN: no classad from server, failing\\n"""		3429821	1					
ANR	3429904	PrimaryExpression	"""SECMAN: no classad from server, failing\\n"""		3429821	0					
ANR	3429905	ExpressionStatement	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_COMMUNICATIONS_ERROR , ""Failed to end classad message."" )"	1685:4:48774:48875	3429821	1	True				
ANR	3429906	CallExpression	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_COMMUNICATIONS_ERROR , ""Failed to end classad message."" )"		3429821	0					
ANR	3429907	Callee	m_errstack -> push		3429821	0					
ANR	3429908	PtrMemberAccess	m_errstack -> push		3429821	0					
ANR	3429909	Identifier	m_errstack		3429821	0					
ANR	3429910	Identifier	push		3429821	1					
ANR	3429911	ArgumentList	"""SECMAN"""		3429821	1					
ANR	3429912	Argument	"""SECMAN"""		3429821	0					
ANR	3429913	PrimaryExpression	"""SECMAN"""		3429821	0					
ANR	3429914	Argument	SECMAN_ERR_COMMUNICATIONS_ERROR		3429821	1					
ANR	3429915	Identifier	SECMAN_ERR_COMMUNICATIONS_ERROR		3429821	0					
ANR	3429916	Argument	"""Failed to end classad message."""		3429821	2					
ANR	3429917	PrimaryExpression	"""Failed to end classad message."""		3429821	0					
ANR	3429918	ReturnStatement	return StartCommandFailed ;	1687:4:48881:48906	3429821	2	True				
ANR	3429919	Identifier	StartCommandFailed		3429821	0					
ANR	3429920	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3429821	4					
ANR	3429921	Condition	DebugFlags & D_FULLDEBUG	1691:7:48922:48945	3429821	0	True				
ANR	3429922	BitAndExpression	DebugFlags & D_FULLDEBUG		3429821	0		&			
ANR	3429923	Identifier	DebugFlags		3429821	0					
ANR	3429924	Identifier	D_FULLDEBUG		3429821	1					
ANR	3429925	CompoundStatement		37:33:1257:1257	3429821	1					
ANR	3429926	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: server responded with:\\n"" )"	1692:4:48954:49011	3429821	0	True				
ANR	3429927	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: server responded with:\\n"" )"		3429821	0					
ANR	3429928	Callee	dprintf		3429821	0					
ANR	3429929	Identifier	dprintf		3429821	0					
ANR	3429930	ArgumentList	D_SECURITY		3429821	1					
ANR	3429931	Argument	D_SECURITY		3429821	0					
ANR	3429932	Identifier	D_SECURITY		3429821	0					
ANR	3429933	Argument	"""SECMAN: server responded with:\\n"""		3429821	1					
ANR	3429934	PrimaryExpression	"""SECMAN: server responded with:\\n"""		3429821	0					
ANR	3429935	ExpressionStatement	auth_response . dPrint ( D_SECURITY )	1693:4:49017:49051	3429821	1	True				
ANR	3429936	CallExpression	auth_response . dPrint ( D_SECURITY )		3429821	0					
ANR	3429937	Callee	auth_response . dPrint		3429821	0					
ANR	3429938	MemberAccess	auth_response . dPrint		3429821	0					
ANR	3429939	Identifier	auth_response		3429821	0					
ANR	3429940	Identifier	dPrint		3429821	1					
ANR	3429941	ArgumentList	D_SECURITY		3429821	1					
ANR	3429942	Argument	D_SECURITY		3429821	0					
ANR	3429943	Identifier	D_SECURITY		3429821	0					
ANR	3429944	ExpressionStatement	m_auth_info . Delete ( ATTR_SEC_SERVER_COMMAND_SOCK )	1703:3:49449:49499	3429821	5	True				
ANR	3429945	CallExpression	m_auth_info . Delete ( ATTR_SEC_SERVER_COMMAND_SOCK )		3429821	0					
ANR	3429946	Callee	m_auth_info . Delete		3429821	0					
ANR	3429947	MemberAccess	m_auth_info . Delete		3429821	0					
ANR	3429948	Identifier	m_auth_info		3429821	0					
ANR	3429949	Identifier	Delete		3429821	1					
ANR	3429950	ArgumentList	ATTR_SEC_SERVER_COMMAND_SOCK		3429821	1					
ANR	3429951	Argument	ATTR_SEC_SERVER_COMMAND_SOCK		3429821	0					
ANR	3429952	Identifier	ATTR_SEC_SERVER_COMMAND_SOCK		3429821	0					
ANR	3429953	ExpressionStatement	m_auth_info . Delete ( ATTR_SEC_SERVER_PID )	1705:3:49535:49576	3429821	6	True				
ANR	3429954	CallExpression	m_auth_info . Delete ( ATTR_SEC_SERVER_PID )		3429821	0					
ANR	3429955	Callee	m_auth_info . Delete		3429821	0					
ANR	3429956	MemberAccess	m_auth_info . Delete		3429821	0					
ANR	3429957	Identifier	m_auth_info		3429821	0					
ANR	3429958	Identifier	Delete		3429821	1					
ANR	3429959	ArgumentList	ATTR_SEC_SERVER_PID		3429821	1					
ANR	3429960	Argument	ATTR_SEC_SERVER_PID		3429821	0					
ANR	3429961	Identifier	ATTR_SEC_SERVER_PID		3429821	0					
ANR	3429962	ExpressionStatement	m_auth_info . Delete ( ATTR_SEC_PARENT_UNIQUE_ID )	1706:3:49581:49628	3429821	7	True				
ANR	3429963	CallExpression	m_auth_info . Delete ( ATTR_SEC_PARENT_UNIQUE_ID )		3429821	0					
ANR	3429964	Callee	m_auth_info . Delete		3429821	0					
ANR	3429965	MemberAccess	m_auth_info . Delete		3429821	0					
ANR	3429966	Identifier	m_auth_info		3429821	0					
ANR	3429967	Identifier	Delete		3429821	1					
ANR	3429968	ArgumentList	ATTR_SEC_PARENT_UNIQUE_ID		3429821	1					
ANR	3429969	Argument	ATTR_SEC_PARENT_UNIQUE_ID		3429821	0					
ANR	3429970	Identifier	ATTR_SEC_PARENT_UNIQUE_ID		3429821	0					
ANR	3429971	ExpressionStatement	m_auth_info . Delete ( ATTR_SEC_REMOTE_VERSION )	1710:3:49744:49787	3429821	8	True				
ANR	3429972	CallExpression	m_auth_info . Delete ( ATTR_SEC_REMOTE_VERSION )		3429821	0					
ANR	3429973	Callee	m_auth_info . Delete		3429821	0					
ANR	3429974	MemberAccess	m_auth_info . Delete		3429821	0					
ANR	3429975	Identifier	m_auth_info		3429821	0					
ANR	3429976	Identifier	Delete		3429821	1					
ANR	3429977	ArgumentList	ATTR_SEC_REMOTE_VERSION		3429821	1					
ANR	3429978	Argument	ATTR_SEC_REMOTE_VERSION		3429821	0					
ANR	3429979	Identifier	ATTR_SEC_REMOTE_VERSION		3429821	0					
ANR	3429980	ExpressionStatement	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_REMOTE_VERSION )"	1711:3:49792:49875	3429821	9	True				
ANR	3429981	CallExpression	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_REMOTE_VERSION )"		3429821	0					
ANR	3429982	Callee	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3429983	MemberAccess	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3429984	Identifier	m_sec_man		3429821	0					
ANR	3429985	Identifier	sec_copy_attribute		3429821	1					
ANR	3429986	ArgumentList	m_auth_info		3429821	1					
ANR	3429987	Argument	m_auth_info		3429821	0					
ANR	3429988	Identifier	m_auth_info		3429821	0					
ANR	3429989	Argument	auth_response		3429821	1					
ANR	3429990	Identifier	auth_response		3429821	0					
ANR	3429991	Argument	ATTR_SEC_REMOTE_VERSION		3429821	2					
ANR	3429992	Identifier	ATTR_SEC_REMOTE_VERSION		3429821	0					
ANR	3429993	ExpressionStatement	"m_auth_info . LookupString ( ATTR_SEC_REMOTE_VERSION , m_remote_version )"	1712:3:49880:49946	3429821	10	True				
ANR	3429994	CallExpression	"m_auth_info . LookupString ( ATTR_SEC_REMOTE_VERSION , m_remote_version )"		3429821	0					
ANR	3429995	Callee	m_auth_info . LookupString		3429821	0					
ANR	3429996	MemberAccess	m_auth_info . LookupString		3429821	0					
ANR	3429997	Identifier	m_auth_info		3429821	0					
ANR	3429998	Identifier	LookupString		3429821	1					
ANR	3429999	ArgumentList	ATTR_SEC_REMOTE_VERSION		3429821	1					
ANR	3430000	Argument	ATTR_SEC_REMOTE_VERSION		3429821	0					
ANR	3430001	Identifier	ATTR_SEC_REMOTE_VERSION		3429821	0					
ANR	3430002	Argument	m_remote_version		3429821	1					
ANR	3430003	Identifier	m_remote_version		3429821	0					
ANR	3430004	IfStatement	if ( ! m_remote_version . IsEmpty ( ) )		3429821	11					
ANR	3430005	Condition	! m_remote_version . IsEmpty ( )	1713:7:49955:49981	3429821	0	True				
ANR	3430006	UnaryOperationExpression	! m_remote_version . IsEmpty ( )		3429821	0					
ANR	3430007	UnaryOperator	!		3429821	0					
ANR	3430008	CallExpression	m_remote_version . IsEmpty ( )		3429821	1					
ANR	3430009	Callee	m_remote_version . IsEmpty		3429821	0					
ANR	3430010	MemberAccess	m_remote_version . IsEmpty		3429821	0					
ANR	3430011	Identifier	m_remote_version		3429821	0					
ANR	3430012	Identifier	IsEmpty		3429821	1					
ANR	3430013	ArgumentList			3429821	1					
ANR	3430014	CompoundStatement		60:4:2300:2352	3429821	1					
ANR	3430015	IdentifierDeclStatement	CondorVersionInfo ver_info ( m_remote_version . Value ( ) ) ;	1714:4:49991:50043	3429821	0	True				
ANR	3430016	IdentifierDecl	ver_info ( m_remote_version . Value ( ) )		3429821	0					
ANR	3430017	IdentifierDeclType	CondorVersionInfo		3429821	0					
ANR	3430018	Identifier	ver_info		3429821	1					
ANR	3430019	CallExpression	m_remote_version . Value ( )		3429821	2					
ANR	3430020	Callee	m_remote_version . Value		3429821	0					
ANR	3430021	MemberAccess	m_remote_version . Value		3429821	0					
ANR	3430022	Identifier	m_remote_version		3429821	0					
ANR	3430023	Identifier	Value		3429821	1					
ANR	3430024	ArgumentList			3429821	1					
ANR	3430025	ExpressionStatement	m_sock -> set_peer_version ( & ver_info )	1715:4:50049:50084	3429821	1	True				
ANR	3430026	CallExpression	m_sock -> set_peer_version ( & ver_info )		3429821	0					
ANR	3430027	Callee	m_sock -> set_peer_version		3429821	0					
ANR	3430028	PtrMemberAccess	m_sock -> set_peer_version		3429821	0					
ANR	3430029	Identifier	m_sock		3429821	0					
ANR	3430030	Identifier	set_peer_version		3429821	1					
ANR	3430031	ArgumentList	& ver_info		3429821	1					
ANR	3430032	Argument	& ver_info		3429821	0					
ANR	3430033	UnaryOperationExpression	& ver_info		3429821	0					
ANR	3430034	UnaryOperator	&		3429821	0					
ANR	3430035	Identifier	ver_info		3429821	1					
ANR	3430036	ExpressionStatement	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_ENACT )"	1717:3:50094:50168	3429821	12	True				
ANR	3430037	CallExpression	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_ENACT )"		3429821	0					
ANR	3430038	Callee	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430039	MemberAccess	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430040	Identifier	m_sec_man		3429821	0					
ANR	3430041	Identifier	sec_copy_attribute		3429821	1					
ANR	3430042	ArgumentList	m_auth_info		3429821	1					
ANR	3430043	Argument	m_auth_info		3429821	0					
ANR	3430044	Identifier	m_auth_info		3429821	0					
ANR	3430045	Argument	auth_response		3429821	1					
ANR	3430046	Identifier	auth_response		3429821	0					
ANR	3430047	Argument	ATTR_SEC_ENACT		3429821	2					
ANR	3430048	Identifier	ATTR_SEC_ENACT		3429821	0					
ANR	3430049	ExpressionStatement	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_AUTHENTICATION_METHODS_LIST )"	1718:3:50173:50269	3429821	13	True				
ANR	3430050	CallExpression	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_AUTHENTICATION_METHODS_LIST )"		3429821	0					
ANR	3430051	Callee	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430052	MemberAccess	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430053	Identifier	m_sec_man		3429821	0					
ANR	3430054	Identifier	sec_copy_attribute		3429821	1					
ANR	3430055	ArgumentList	m_auth_info		3429821	1					
ANR	3430056	Argument	m_auth_info		3429821	0					
ANR	3430057	Identifier	m_auth_info		3429821	0					
ANR	3430058	Argument	auth_response		3429821	1					
ANR	3430059	Identifier	auth_response		3429821	0					
ANR	3430060	Argument	ATTR_SEC_AUTHENTICATION_METHODS_LIST		3429821	2					
ANR	3430061	Identifier	ATTR_SEC_AUTHENTICATION_METHODS_LIST		3429821	0					
ANR	3430062	ExpressionStatement	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_AUTHENTICATION_METHODS )"	1719:3:50274:50365	3429821	14	True				
ANR	3430063	CallExpression	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_AUTHENTICATION_METHODS )"		3429821	0					
ANR	3430064	Callee	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430065	MemberAccess	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430066	Identifier	m_sec_man		3429821	0					
ANR	3430067	Identifier	sec_copy_attribute		3429821	1					
ANR	3430068	ArgumentList	m_auth_info		3429821	1					
ANR	3430069	Argument	m_auth_info		3429821	0					
ANR	3430070	Identifier	m_auth_info		3429821	0					
ANR	3430071	Argument	auth_response		3429821	1					
ANR	3430072	Identifier	auth_response		3429821	0					
ANR	3430073	Argument	ATTR_SEC_AUTHENTICATION_METHODS		3429821	2					
ANR	3430074	Identifier	ATTR_SEC_AUTHENTICATION_METHODS		3429821	0					
ANR	3430075	ExpressionStatement	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_CRYPTO_METHODS )"	1720:3:50370:50453	3429821	15	True				
ANR	3430076	CallExpression	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_CRYPTO_METHODS )"		3429821	0					
ANR	3430077	Callee	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430078	MemberAccess	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430079	Identifier	m_sec_man		3429821	0					
ANR	3430080	Identifier	sec_copy_attribute		3429821	1					
ANR	3430081	ArgumentList	m_auth_info		3429821	1					
ANR	3430082	Argument	m_auth_info		3429821	0					
ANR	3430083	Identifier	m_auth_info		3429821	0					
ANR	3430084	Argument	auth_response		3429821	1					
ANR	3430085	Identifier	auth_response		3429821	0					
ANR	3430086	Argument	ATTR_SEC_CRYPTO_METHODS		3429821	2					
ANR	3430087	Identifier	ATTR_SEC_CRYPTO_METHODS		3429821	0					
ANR	3430088	ExpressionStatement	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_AUTHENTICATION )"	1721:3:50458:50541	3429821	16	True				
ANR	3430089	CallExpression	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_AUTHENTICATION )"		3429821	0					
ANR	3430090	Callee	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430091	MemberAccess	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430092	Identifier	m_sec_man		3429821	0					
ANR	3430093	Identifier	sec_copy_attribute		3429821	1					
ANR	3430094	ArgumentList	m_auth_info		3429821	1					
ANR	3430095	Argument	m_auth_info		3429821	0					
ANR	3430096	Identifier	m_auth_info		3429821	0					
ANR	3430097	Argument	auth_response		3429821	1					
ANR	3430098	Identifier	auth_response		3429821	0					
ANR	3430099	Argument	ATTR_SEC_AUTHENTICATION		3429821	2					
ANR	3430100	Identifier	ATTR_SEC_AUTHENTICATION		3429821	0					
ANR	3430101	ExpressionStatement	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_AUTH_REQUIRED )"	1722:3:50546:50628	3429821	17	True				
ANR	3430102	CallExpression	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_AUTH_REQUIRED )"		3429821	0					
ANR	3430103	Callee	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430104	MemberAccess	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430105	Identifier	m_sec_man		3429821	0					
ANR	3430106	Identifier	sec_copy_attribute		3429821	1					
ANR	3430107	ArgumentList	m_auth_info		3429821	1					
ANR	3430108	Argument	m_auth_info		3429821	0					
ANR	3430109	Identifier	m_auth_info		3429821	0					
ANR	3430110	Argument	auth_response		3429821	1					
ANR	3430111	Identifier	auth_response		3429821	0					
ANR	3430112	Argument	ATTR_SEC_AUTH_REQUIRED		3429821	2					
ANR	3430113	Identifier	ATTR_SEC_AUTH_REQUIRED		3429821	0					
ANR	3430114	ExpressionStatement	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_ENCRYPTION )"	1723:3:50633:50712	3429821	18	True				
ANR	3430115	CallExpression	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_ENCRYPTION )"		3429821	0					
ANR	3430116	Callee	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430117	MemberAccess	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430118	Identifier	m_sec_man		3429821	0					
ANR	3430119	Identifier	sec_copy_attribute		3429821	1					
ANR	3430120	ArgumentList	m_auth_info		3429821	1					
ANR	3430121	Argument	m_auth_info		3429821	0					
ANR	3430122	Identifier	m_auth_info		3429821	0					
ANR	3430123	Argument	auth_response		3429821	1					
ANR	3430124	Identifier	auth_response		3429821	0					
ANR	3430125	Argument	ATTR_SEC_ENCRYPTION		3429821	2					
ANR	3430126	Identifier	ATTR_SEC_ENCRYPTION		3429821	0					
ANR	3430127	ExpressionStatement	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_INTEGRITY )"	1724:3:50717:50795	3429821	19	True				
ANR	3430128	CallExpression	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_INTEGRITY )"		3429821	0					
ANR	3430129	Callee	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430130	MemberAccess	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430131	Identifier	m_sec_man		3429821	0					
ANR	3430132	Identifier	sec_copy_attribute		3429821	1					
ANR	3430133	ArgumentList	m_auth_info		3429821	1					
ANR	3430134	Argument	m_auth_info		3429821	0					
ANR	3430135	Identifier	m_auth_info		3429821	0					
ANR	3430136	Argument	auth_response		3429821	1					
ANR	3430137	Identifier	auth_response		3429821	0					
ANR	3430138	Argument	ATTR_SEC_INTEGRITY		3429821	2					
ANR	3430139	Identifier	ATTR_SEC_INTEGRITY		3429821	0					
ANR	3430140	ExpressionStatement	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_SESSION_DURATION )"	1725:3:50800:50885	3429821	20	True				
ANR	3430141	CallExpression	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_SESSION_DURATION )"		3429821	0					
ANR	3430142	Callee	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430143	MemberAccess	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430144	Identifier	m_sec_man		3429821	0					
ANR	3430145	Identifier	sec_copy_attribute		3429821	1					
ANR	3430146	ArgumentList	m_auth_info		3429821	1					
ANR	3430147	Argument	m_auth_info		3429821	0					
ANR	3430148	Identifier	m_auth_info		3429821	0					
ANR	3430149	Argument	auth_response		3429821	1					
ANR	3430150	Identifier	auth_response		3429821	0					
ANR	3430151	Argument	ATTR_SEC_SESSION_DURATION		3429821	2					
ANR	3430152	Identifier	ATTR_SEC_SESSION_DURATION		3429821	0					
ANR	3430153	ExpressionStatement	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_SESSION_LEASE )"	1726:3:50890:50972	3429821	21	True				
ANR	3430154	CallExpression	"m_sec_man . sec_copy_attribute ( m_auth_info , auth_response , ATTR_SEC_SESSION_LEASE )"		3429821	0					
ANR	3430155	Callee	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430156	MemberAccess	m_sec_man . sec_copy_attribute		3429821	0					
ANR	3430157	Identifier	m_sec_man		3429821	0					
ANR	3430158	Identifier	sec_copy_attribute		3429821	1					
ANR	3430159	ArgumentList	m_auth_info		3429821	1					
ANR	3430160	Argument	m_auth_info		3429821	0					
ANR	3430161	Identifier	m_auth_info		3429821	0					
ANR	3430162	Argument	auth_response		3429821	1					
ANR	3430163	Identifier	auth_response		3429821	0					
ANR	3430164	Argument	ATTR_SEC_SESSION_LEASE		3429821	2					
ANR	3430165	Identifier	ATTR_SEC_SESSION_LEASE		3429821	0					
ANR	3430166	ExpressionStatement	m_auth_info . Delete ( ATTR_SEC_NEW_SESSION )	1728:3:50978:51018	3429821	22	True				
ANR	3430167	CallExpression	m_auth_info . Delete ( ATTR_SEC_NEW_SESSION )		3429821	0					
ANR	3430168	Callee	m_auth_info . Delete		3429821	0					
ANR	3430169	MemberAccess	m_auth_info . Delete		3429821	0					
ANR	3430170	Identifier	m_auth_info		3429821	0					
ANR	3430171	Identifier	Delete		3429821	1					
ANR	3430172	ArgumentList	ATTR_SEC_NEW_SESSION		3429821	1					
ANR	3430173	Argument	ATTR_SEC_NEW_SESSION		3429821	0					
ANR	3430174	Identifier	ATTR_SEC_NEW_SESSION		3429821	0					
ANR	3430175	ExpressionStatement	"m_auth_info . Assign ( ATTR_SEC_USE_SESSION , ""YES"" )"	1730:3:51024:51071	3429821	23	True				
ANR	3430176	CallExpression	"m_auth_info . Assign ( ATTR_SEC_USE_SESSION , ""YES"" )"		3429821	0					
ANR	3430177	Callee	m_auth_info . Assign		3429821	0					
ANR	3430178	MemberAccess	m_auth_info . Assign		3429821	0					
ANR	3430179	Identifier	m_auth_info		3429821	0					
ANR	3430180	Identifier	Assign		3429821	1					
ANR	3430181	ArgumentList	ATTR_SEC_USE_SESSION		3429821	1					
ANR	3430182	Argument	ATTR_SEC_USE_SESSION		3429821	0					
ANR	3430183	Identifier	ATTR_SEC_USE_SESSION		3429821	0					
ANR	3430184	Argument	"""YES"""		3429821	1					
ANR	3430185	PrimaryExpression	"""YES"""		3429821	0					
ANR	3430186	ExpressionStatement	m_sock -> encode ( )	1732:3:51077:51093	3429821	24	True				
ANR	3430187	CallExpression	m_sock -> encode ( )		3429821	0					
ANR	3430188	Callee	m_sock -> encode		3429821	0					
ANR	3430189	PtrMemberAccess	m_sock -> encode		3429821	0					
ANR	3430190	Identifier	m_sock		3429821	0					
ANR	3430191	Identifier	encode		3429821	1					
ANR	3430192	ArgumentList			3429821	1					
ANR	3430193	ExpressionStatement	m_state = Authenticate	1738:1:51106:51128	3429821	1	True				
ANR	3430194	AssignmentExpression	m_state = Authenticate		3429821	0		=			
ANR	3430195	Identifier	m_state		3429821	0					
ANR	3430196	Identifier	Authenticate		3429821	1					
ANR	3430197	ReturnStatement	return StartCommandContinue ;	1739:1:51131:51158	3429821	2	True				
ANR	3430198	Identifier	StartCommandContinue		3429821	0					
ANR	3430199	ReturnType	StartCommandResult		3429821	1					
ANR	3430200	Identifier	SecManStartCommand :: receiveAuthInfo_inner		3429821	2					
ANR	3430201	ParameterList			3429821	3					
ANR	3430202	CFGEntryNode	ENTRY		3429821		True				
ANR	3430203	CFGExitNode	EXIT		3429821		True				
ANR	3430204	Symbol	m_sec_man		3429821						
ANR	3430205	Symbol	ATTR_SEC_AUTHENTICATION		3429821						
ANR	3430206	Symbol	StartCommandContinue		3429821						
ANR	3430207	Symbol	D_SECURITY		3429821						
ANR	3430208	Symbol	ATTR_SEC_ENCRYPTION		3429821						
ANR	3430209	Symbol	ATTR_SEC_ENACT		3429821						
ANR	3430210	Symbol	ATTR_SEC_PARENT_UNIQUE_ID		3429821						
ANR	3430211	Symbol	StartCommandFailed		3429821						
ANR	3430212	Symbol	ATTR_SEC_SERVER_PID		3429821						
ANR	3430213	Symbol	m_sock -> end_of_message		3429821						
ANR	3430214	Symbol	& ver_info		3429821						
ANR	3430215	Symbol	m_errstack		3429821						
ANR	3430216	Symbol	auth_response		3429821						
ANR	3430217	Symbol	m_state		3429821						
ANR	3430218	Symbol	m_sec_man . sec_lookup_feat_act		3429821						
ANR	3430219	Symbol	m_sock -> readReady		3429821						
ANR	3430220	Symbol	Authenticate		3429821						
ANR	3430221	Symbol	ATTR_SEC_AUTH_REQUIRED		3429821						
ANR	3430222	Symbol	ver_info		3429821						
ANR	3430223	Symbol	ATTR_SEC_CRYPTO_METHODS		3429821						
ANR	3430224	Symbol	ATTR_SEC_AUTHENTICATION_METHODS		3429821						
ANR	3430225	Symbol	m_is_tcp		3429821						
ANR	3430226	Symbol	m_remote_version		3429821						
ANR	3430227	Symbol	ATTR_SEC_USE_SESSION		3429821						
ANR	3430228	Symbol	* m_sock		3429821						
ANR	3430229	Symbol	m_remote_version . IsEmpty		3429821						
ANR	3430230	Symbol	m_sock		3429821						
ANR	3430231	Symbol	ATTR_SEC_SESSION_DURATION		3429821						
ANR	3430232	Symbol	D_ALWAYS		3429821						
ANR	3430233	Symbol	WaitForSocketCallback		3429821						
ANR	3430234	Symbol	D_FULLDEBUG		3429821						
ANR	3430235	Symbol	DebugFlags		3429821						
ANR	3430236	Symbol	ATTR_SEC_NEW_SESSION		3429821						
ANR	3430237	Symbol	ATTR_SEC_SESSION_LEASE		3429821						
ANR	3430238	Symbol	m_nonblocking		3429821						
ANR	3430239	Symbol	ATTR_SEC_AUTHENTICATION_METHODS_LIST		3429821						
ANR	3430240	Symbol	SecMan :: SEC_FEAT_ACT_YES		3429821						
ANR	3430241	Symbol	auth_response . initFromStream		3429821						
ANR	3430242	Symbol	ATTR_SEC_SERVER_COMMAND_SOCK		3429821						
ANR	3430243	Symbol	ATTR_SEC_REMOTE_VERSION		3429821						
ANR	3430244	Symbol	ATTR_SEC_INTEGRITY		3429821						
ANR	3430245	Symbol	m_auth_info		3429821						
ANR	3430246	Symbol	SECMAN_ERR_COMMUNICATIONS_ERROR		3429821						
ANR	3430247	Function	SecManStartCommand :: authenticate_inner	1742:0:51163:57312							
ANR	3430248	FunctionDef	SecManStartCommand :: authenticate_inner ()		3430247	0					
ANR	3430249	CompoundStatement		1744:0:51223:57312	3430247	0					
ANR	3430250	IfStatement	if ( m_is_tcp )		3430247	0					
ANR	3430251	Condition	m_is_tcp	1745:5:51230:51237	3430247	0	True				
ANR	3430252	Identifier	m_is_tcp		3430247	0					
ANR	3430253	CompoundStatement		5:2:245:350	3430247	1					
ANR	3430254	IdentifierDeclStatement	"SecMan :: sec_feat_act will_authenticate = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_AUTHENTICATION ) ;"	1746:2:51245:51355	3430247	0	True				
ANR	3430255	IdentifierDecl	"will_authenticate = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_AUTHENTICATION )"		3430247	0					
ANR	3430256	IdentifierDeclType	SecMan :: sec_feat_act		3430247	0					
ANR	3430257	Identifier	will_authenticate		3430247	1					
ANR	3430258	AssignmentExpression	"will_authenticate = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_AUTHENTICATION )"		3430247	2		=			
ANR	3430259	Identifier	will_authenticate		3430247	0					
ANR	3430260	CallExpression	"m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_AUTHENTICATION )"		3430247	1					
ANR	3430261	Callee	m_sec_man . sec_lookup_feat_act		3430247	0					
ANR	3430262	MemberAccess	m_sec_man . sec_lookup_feat_act		3430247	0					
ANR	3430263	Identifier	m_sec_man		3430247	0					
ANR	3430264	Identifier	sec_lookup_feat_act		3430247	1					
ANR	3430265	ArgumentList	m_auth_info		3430247	1					
ANR	3430266	Argument	m_auth_info		3430247	0					
ANR	3430267	Identifier	m_auth_info		3430247	0					
ANR	3430268	Argument	ATTR_SEC_AUTHENTICATION		3430247	1					
ANR	3430269	Identifier	ATTR_SEC_AUTHENTICATION		3430247	0					
ANR	3430270	IdentifierDeclStatement	"SecMan :: sec_feat_act will_enable_enc = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_ENCRYPTION ) ;"	1747:2:51359:51465	3430247	1	True				
ANR	3430271	IdentifierDecl	"will_enable_enc = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_ENCRYPTION )"		3430247	0					
ANR	3430272	IdentifierDeclType	SecMan :: sec_feat_act		3430247	0					
ANR	3430273	Identifier	will_enable_enc		3430247	1					
ANR	3430274	AssignmentExpression	"will_enable_enc = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_ENCRYPTION )"		3430247	2		=			
ANR	3430275	Identifier	will_enable_enc		3430247	0					
ANR	3430276	CallExpression	"m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_ENCRYPTION )"		3430247	1					
ANR	3430277	Callee	m_sec_man . sec_lookup_feat_act		3430247	0					
ANR	3430278	MemberAccess	m_sec_man . sec_lookup_feat_act		3430247	0					
ANR	3430279	Identifier	m_sec_man		3430247	0					
ANR	3430280	Identifier	sec_lookup_feat_act		3430247	1					
ANR	3430281	ArgumentList	m_auth_info		3430247	1					
ANR	3430282	Argument	m_auth_info		3430247	0					
ANR	3430283	Identifier	m_auth_info		3430247	0					
ANR	3430284	Argument	ATTR_SEC_ENCRYPTION		3430247	1					
ANR	3430285	Identifier	ATTR_SEC_ENCRYPTION		3430247	0					
ANR	3430286	IdentifierDeclStatement	"SecMan :: sec_feat_act will_enable_mac = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_INTEGRITY ) ;"	1748:2:51469:51574	3430247	2	True				
ANR	3430287	IdentifierDecl	"will_enable_mac = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_INTEGRITY )"		3430247	0					
ANR	3430288	IdentifierDeclType	SecMan :: sec_feat_act		3430247	0					
ANR	3430289	Identifier	will_enable_mac		3430247	1					
ANR	3430290	AssignmentExpression	"will_enable_mac = m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_INTEGRITY )"		3430247	2		=			
ANR	3430291	Identifier	will_enable_mac		3430247	0					
ANR	3430292	CallExpression	"m_sec_man . sec_lookup_feat_act ( m_auth_info , ATTR_SEC_INTEGRITY )"		3430247	1					
ANR	3430293	Callee	m_sec_man . sec_lookup_feat_act		3430247	0					
ANR	3430294	MemberAccess	m_sec_man . sec_lookup_feat_act		3430247	0					
ANR	3430295	Identifier	m_sec_man		3430247	0					
ANR	3430296	Identifier	sec_lookup_feat_act		3430247	1					
ANR	3430297	ArgumentList	m_auth_info		3430247	1					
ANR	3430298	Argument	m_auth_info		3430247	0					
ANR	3430299	Identifier	m_auth_info		3430247	0					
ANR	3430300	Argument	ATTR_SEC_INTEGRITY		3430247	1					
ANR	3430301	Identifier	ATTR_SEC_INTEGRITY		3430247	0					
ANR	3430302	IfStatement	if ( will_authenticate == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_authenticate == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_enc == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_enc == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID )		3430247	3					
ANR	3430303	Condition	will_authenticate == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_authenticate == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_enc == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_enc == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID	1750:6:51583:51914	3430247	0	True				
ANR	3430304	OrExpression	will_authenticate == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_authenticate == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_enc == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_enc == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID		3430247	0		||			
ANR	3430305	EqualityExpression	will_authenticate == SecMan :: SEC_FEAT_ACT_UNDEFINED		3430247	0		==			
ANR	3430306	Identifier	will_authenticate		3430247	0					
ANR	3430307	Identifier	SecMan :: SEC_FEAT_ACT_UNDEFINED		3430247	1					
ANR	3430308	OrExpression	will_authenticate == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_enc == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_enc == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID		3430247	1		||			
ANR	3430309	EqualityExpression	will_authenticate == SecMan :: SEC_FEAT_ACT_INVALID		3430247	0		==			
ANR	3430310	Identifier	will_authenticate		3430247	0					
ANR	3430311	Identifier	SecMan :: SEC_FEAT_ACT_INVALID		3430247	1					
ANR	3430312	OrExpression	will_enable_enc == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_enc == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID		3430247	1		||			
ANR	3430313	EqualityExpression	will_enable_enc == SecMan :: SEC_FEAT_ACT_UNDEFINED		3430247	0		==			
ANR	3430314	Identifier	will_enable_enc		3430247	0					
ANR	3430315	Identifier	SecMan :: SEC_FEAT_ACT_UNDEFINED		3430247	1					
ANR	3430316	OrExpression	will_enable_enc == SecMan :: SEC_FEAT_ACT_INVALID || will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID		3430247	1		||			
ANR	3430317	EqualityExpression	will_enable_enc == SecMan :: SEC_FEAT_ACT_INVALID		3430247	0		==			
ANR	3430318	Identifier	will_enable_enc		3430247	0					
ANR	3430319	Identifier	SecMan :: SEC_FEAT_ACT_INVALID		3430247	1					
ANR	3430320	OrExpression	will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED || will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID		3430247	1		||			
ANR	3430321	EqualityExpression	will_enable_mac == SecMan :: SEC_FEAT_ACT_UNDEFINED		3430247	0		==			
ANR	3430322	Identifier	will_enable_mac		3430247	0					
ANR	3430323	Identifier	SecMan :: SEC_FEAT_ACT_UNDEFINED		3430247	1					
ANR	3430324	EqualityExpression	will_enable_mac == SecMan :: SEC_FEAT_ACT_INVALID		3430247	1		==			
ANR	3430325	Identifier	will_enable_mac		3430247	0					
ANR	3430326	Identifier	SecMan :: SEC_FEAT_ACT_INVALID		3430247	1					
ANR	3430327	CompoundStatement		12:53:694:694	3430247	1					
ANR	3430328	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: action attribute missing from classad, failing!\\n"" )"	1759:3:51960:52042	3430247	0	True				
ANR	3430329	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: action attribute missing from classad, failing!\\n"" )"		3430247	0					
ANR	3430330	Callee	dprintf		3430247	0					
ANR	3430331	Identifier	dprintf		3430247	0					
ANR	3430332	ArgumentList	D_SECURITY		3430247	1					
ANR	3430333	Argument	D_SECURITY		3430247	0					
ANR	3430334	Identifier	D_SECURITY		3430247	0					
ANR	3430335	Argument	"""SECMAN: action attribute missing from classad, failing!\\n"""		3430247	1					
ANR	3430336	PrimaryExpression	"""SECMAN: action attribute missing from classad, failing!\\n"""		3430247	0					
ANR	3430337	ExpressionStatement	m_auth_info . dPrint ( D_SECURITY )	1760:3:52047:52079	3430247	1	True				
ANR	3430338	CallExpression	m_auth_info . dPrint ( D_SECURITY )		3430247	0					
ANR	3430339	Callee	m_auth_info . dPrint		3430247	0					
ANR	3430340	MemberAccess	m_auth_info . dPrint		3430247	0					
ANR	3430341	Identifier	m_auth_info		3430247	0					
ANR	3430342	Identifier	dPrint		3430247	1					
ANR	3430343	ArgumentList	D_SECURITY		3430247	1					
ANR	3430344	Argument	D_SECURITY		3430247	0					
ANR	3430345	Identifier	D_SECURITY		3430247	0					
ANR	3430346	ExpressionStatement	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_ATTRIBUTE_MISSING , ""Protocol Error: Action attribute missing."" )"	1761:3:52084:52192	3430247	2	True				
ANR	3430347	CallExpression	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_ATTRIBUTE_MISSING , ""Protocol Error: Action attribute missing."" )"		3430247	0					
ANR	3430348	Callee	m_errstack -> push		3430247	0					
ANR	3430349	PtrMemberAccess	m_errstack -> push		3430247	0					
ANR	3430350	Identifier	m_errstack		3430247	0					
ANR	3430351	Identifier	push		3430247	1					
ANR	3430352	ArgumentList	"""SECMAN"""		3430247	1					
ANR	3430353	Argument	"""SECMAN"""		3430247	0					
ANR	3430354	PrimaryExpression	"""SECMAN"""		3430247	0					
ANR	3430355	Argument	SECMAN_ERR_ATTRIBUTE_MISSING		3430247	1					
ANR	3430356	Identifier	SECMAN_ERR_ATTRIBUTE_MISSING		3430247	0					
ANR	3430357	Argument	"""Protocol Error: Action attribute missing."""		3430247	2					
ANR	3430358	PrimaryExpression	"""Protocol Error: Action attribute missing."""		3430247	0					
ANR	3430359	ReturnStatement	return StartCommandFailed ;	1763:3:52197:52222	3430247	3	True				
ANR	3430360	Identifier	StartCommandFailed		3430247	0					
ANR	3430361	IfStatement	if ( ( will_authenticate == SecMan :: SEC_FEAT_ACT_YES ) )		3430247	4					
ANR	3430362	Condition	will_authenticate == SecMan :: SEC_FEAT_ACT_YES	1779:6:52767:52813	3430247	0	True				
ANR	3430363	EqualityExpression	will_authenticate == SecMan :: SEC_FEAT_ACT_YES		3430247	0		==			
ANR	3430364	Identifier	will_authenticate		3430247	0					
ANR	3430365	Identifier	SecMan :: SEC_FEAT_ACT_YES		3430247	1					
ANR	3430366	CompoundStatement		36:55:1592:1592	3430247	1					
ANR	3430367	IfStatement	if ( ( ! m_new_session ) )		3430247	0					
ANR	3430368	Condition	! m_new_session	1780:7:52825:52840	3430247	0	True				
ANR	3430369	UnaryOperationExpression	! m_new_session		3430247	0					
ANR	3430370	UnaryOperator	!		3430247	0					
ANR	3430371	Identifier	m_new_session		3430247	1					
ANR	3430372	CompoundStatement		37:25:1619:1619	3430247	1					
ANR	3430373	IfStatement	if ( ! m_remote_version . IsEmpty ( ) )		3430247	0					
ANR	3430374	Condition	! m_remote_version . IsEmpty ( )	1781:8:52853:52879	3430247	0	True				
ANR	3430375	UnaryOperationExpression	! m_remote_version . IsEmpty ( )		3430247	0					
ANR	3430376	UnaryOperator	!		3430247	0					
ANR	3430377	CallExpression	m_remote_version . IsEmpty ( )		3430247	1					
ANR	3430378	Callee	m_remote_version . IsEmpty		3430247	0					
ANR	3430379	MemberAccess	m_remote_version . IsEmpty		3430247	0					
ANR	3430380	Identifier	m_remote_version		3430247	0					
ANR	3430381	Identifier	IsEmpty		3430247	1					
ANR	3430382	ArgumentList			3430247	1					
ANR	3430383	CompoundStatement		38:38:1659:1659	3430247	1					
ANR	3430384	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: resume, other side is %s, NOT reauthenticating.\\n"" , m_remote_version . Value ( ) )"	1782:5:52890:52998	3430247	0	True				
ANR	3430385	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: resume, other side is %s, NOT reauthenticating.\\n"" , m_remote_version . Value ( ) )"		3430247	0					
ANR	3430386	Callee	dprintf		3430247	0					
ANR	3430387	Identifier	dprintf		3430247	0					
ANR	3430388	ArgumentList	D_SECURITY		3430247	1					
ANR	3430389	Argument	D_SECURITY		3430247	0					
ANR	3430390	Identifier	D_SECURITY		3430247	0					
ANR	3430391	Argument	"""SECMAN: resume, other side is %s, NOT reauthenticating.\\n"""		3430247	1					
ANR	3430392	PrimaryExpression	"""SECMAN: resume, other side is %s, NOT reauthenticating.\\n"""		3430247	0					
ANR	3430393	Argument	m_remote_version . Value ( )		3430247	2					
ANR	3430394	CallExpression	m_remote_version . Value ( )		3430247	0					
ANR	3430395	Callee	m_remote_version . Value		3430247	0					
ANR	3430396	MemberAccess	m_remote_version . Value		3430247	0					
ANR	3430397	Identifier	m_remote_version		3430247	0					
ANR	3430398	Identifier	Value		3430247	1					
ANR	3430399	ArgumentList			3430247	1					
ANR	3430400	ExpressionStatement	will_authenticate = SecMan :: SEC_FEAT_ACT_NO	1783:5:53005:53048	3430247	1	True				
ANR	3430401	AssignmentExpression	will_authenticate = SecMan :: SEC_FEAT_ACT_NO		3430247	0		=			
ANR	3430402	Identifier	will_authenticate		3430247	0					
ANR	3430403	Identifier	SecMan :: SEC_FEAT_ACT_NO		3430247	1					
ANR	3430404	ElseStatement	else		3430247	0					
ANR	3430405	CompoundStatement		41:11:1837:1837	3430247	0					
ANR	3430406	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: resume, other side is pre 6.6.1, reauthenticating.\\n"" )"	1785:5:53068:53152	3430247	0	True				
ANR	3430407	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: resume, other side is pre 6.6.1, reauthenticating.\\n"" )"		3430247	0					
ANR	3430408	Callee	dprintf		3430247	0					
ANR	3430409	Identifier	dprintf		3430247	0					
ANR	3430410	ArgumentList	D_SECURITY		3430247	1					
ANR	3430411	Argument	D_SECURITY		3430247	0					
ANR	3430412	Identifier	D_SECURITY		3430247	0					
ANR	3430413	Argument	"""SECMAN: resume, other side is pre 6.6.1, reauthenticating.\\n"""		3430247	1					
ANR	3430414	PrimaryExpression	"""SECMAN: resume, other side is pre 6.6.1, reauthenticating.\\n"""		3430247	0					
ANR	3430415	ElseStatement	else		3430247	0					
ANR	3430416	CompoundStatement		44:10:1946:1946	3430247	0					
ANR	3430417	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: new session, doing initial authentication.\\n"" )"	1788:4:53176:53253	3430247	0	True				
ANR	3430418	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: new session, doing initial authentication.\\n"" )"		3430247	0					
ANR	3430419	Callee	dprintf		3430247	0					
ANR	3430420	Identifier	dprintf		3430247	0					
ANR	3430421	ArgumentList	D_SECURITY		3430247	1					
ANR	3430422	Argument	D_SECURITY		3430247	0					
ANR	3430423	Identifier	D_SECURITY		3430247	0					
ANR	3430424	Argument	"""SECMAN: new session, doing initial authentication.\\n"""		3430247	1					
ANR	3430425	PrimaryExpression	"""SECMAN: new session, doing initial authentication.\\n"""		3430247	0					
ANR	3430426	IfStatement	if ( will_authenticate == SecMan :: SEC_FEAT_ACT_YES )		3430247	5					
ANR	3430427	Condition	will_authenticate == SecMan :: SEC_FEAT_ACT_YES	1800:6:53473:53517	3430247	0	True				
ANR	3430428	EqualityExpression	will_authenticate == SecMan :: SEC_FEAT_ACT_YES		3430247	0		==			
ANR	3430429	Identifier	will_authenticate		3430247	0					
ANR	3430430	Identifier	SecMan :: SEC_FEAT_ACT_YES		3430247	1					
ANR	3430431	CompoundStatement		89:3:3366:3460	3430247	1					
ANR	3430432	ExpressionStatement	ASSERT ( m_sock -> type ( ) == Stream :: reli_sock )	1802:3:53526:53570	3430247	0	True				
ANR	3430433	CallExpression	ASSERT ( m_sock -> type ( ) == Stream :: reli_sock )		3430247	0					
ANR	3430434	Callee	ASSERT		3430247	0					
ANR	3430435	Identifier	ASSERT		3430247	0					
ANR	3430436	ArgumentList	m_sock -> type ( ) == Stream :: reli_sock		3430247	1					
ANR	3430437	Argument	m_sock -> type ( ) == Stream :: reli_sock		3430247	0					
ANR	3430438	EqualityExpression	m_sock -> type ( ) == Stream :: reli_sock		3430247	0		==			
ANR	3430439	CallExpression	m_sock -> type ( )		3430247	0					
ANR	3430440	Callee	m_sock -> type		3430247	0					
ANR	3430441	PtrMemberAccess	m_sock -> type		3430247	0					
ANR	3430442	Identifier	m_sock		3430247	0					
ANR	3430443	Identifier	type		3430247	1					
ANR	3430444	ArgumentList			3430247	1					
ANR	3430445	Identifier	Stream :: reli_sock		3430247	1					
ANR	3430446	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3430247	1					
ANR	3430447	Condition	DebugFlags & D_FULLDEBUG	1804:7:53580:53603	3430247	0	True				
ANR	3430448	BitAndExpression	DebugFlags & D_FULLDEBUG		3430247	0		&			
ANR	3430449	Identifier	DebugFlags		3430247	0					
ANR	3430450	Identifier	D_FULLDEBUG		3430247	1					
ANR	3430451	CompoundStatement		61:33:2382:2382	3430247	1					
ANR	3430452	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: authenticating RIGHT NOW.\\n"" )"	1805:4:53612:53672	3430247	0	True				
ANR	3430453	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: authenticating RIGHT NOW.\\n"" )"		3430247	0					
ANR	3430454	Callee	dprintf		3430247	0					
ANR	3430455	Identifier	dprintf		3430247	0					
ANR	3430456	ArgumentList	D_SECURITY		3430247	1					
ANR	3430457	Argument	D_SECURITY		3430247	0					
ANR	3430458	Identifier	D_SECURITY		3430247	0					
ANR	3430459	Argument	"""SECMAN: authenticating RIGHT NOW.\\n"""		3430247	1					
ANR	3430460	PrimaryExpression	"""SECMAN: authenticating RIGHT NOW.\\n"""		3430247	0					
ANR	3430461	IdentifierDeclStatement	char * auth_methods = NULL ;	1807:3:53682:53708	3430247	2	True				
ANR	3430462	IdentifierDecl	* auth_methods = NULL		3430247	0					
ANR	3430463	IdentifierDeclType	char *		3430247	0					
ANR	3430464	Identifier	auth_methods		3430247	1					
ANR	3430465	AssignmentExpression	* auth_methods = NULL		3430247	2		=			
ANR	3430466	Identifier	NULL		3430247	0					
ANR	3430467	Identifier	NULL		3430247	1					
ANR	3430468	ExpressionStatement	"m_auth_info . LookupString ( ATTR_SEC_AUTHENTICATION_METHODS_LIST , & auth_methods )"	1808:3:53713:53792	3430247	3	True				
ANR	3430469	CallExpression	"m_auth_info . LookupString ( ATTR_SEC_AUTHENTICATION_METHODS_LIST , & auth_methods )"		3430247	0					
ANR	3430470	Callee	m_auth_info . LookupString		3430247	0					
ANR	3430471	MemberAccess	m_auth_info . LookupString		3430247	0					
ANR	3430472	Identifier	m_auth_info		3430247	0					
ANR	3430473	Identifier	LookupString		3430247	1					
ANR	3430474	ArgumentList	ATTR_SEC_AUTHENTICATION_METHODS_LIST		3430247	1					
ANR	3430475	Argument	ATTR_SEC_AUTHENTICATION_METHODS_LIST		3430247	0					
ANR	3430476	Identifier	ATTR_SEC_AUTHENTICATION_METHODS_LIST		3430247	0					
ANR	3430477	Argument	& auth_methods		3430247	1					
ANR	3430478	UnaryOperationExpression	& auth_methods		3430247	0					
ANR	3430479	UnaryOperator	&		3430247	0					
ANR	3430480	Identifier	auth_methods		3430247	1					
ANR	3430481	IfStatement	if ( auth_methods )		3430247	4					
ANR	3430482	Condition	auth_methods	1809:7:53801:53812	3430247	0	True				
ANR	3430483	Identifier	auth_methods		3430247	0					
ANR	3430484	CompoundStatement		66:21:2591:2591	3430247	1					
ANR	3430485	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3430247	0					
ANR	3430486	Condition	DebugFlags & D_FULLDEBUG	1810:8:53825:53848	3430247	0	True				
ANR	3430487	BitAndExpression	DebugFlags & D_FULLDEBUG		3430247	0		&			
ANR	3430488	Identifier	DebugFlags		3430247	0					
ANR	3430489	Identifier	D_FULLDEBUG		3430247	1					
ANR	3430490	CompoundStatement		67:34:2627:2627	3430247	1					
ANR	3430491	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: AuthMethodsList: %s\\n"" , auth_methods )"	1811:5:53858:53925	3430247	0	True				
ANR	3430492	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: AuthMethodsList: %s\\n"" , auth_methods )"		3430247	0					
ANR	3430493	Callee	dprintf		3430247	0					
ANR	3430494	Identifier	dprintf		3430247	0					
ANR	3430495	ArgumentList	D_SECURITY		3430247	1					
ANR	3430496	Argument	D_SECURITY		3430247	0					
ANR	3430497	Identifier	D_SECURITY		3430247	0					
ANR	3430498	Argument	"""SECMAN: AuthMethodsList: %s\\n"""		3430247	1					
ANR	3430499	PrimaryExpression	"""SECMAN: AuthMethodsList: %s\\n"""		3430247	0					
ANR	3430500	Argument	auth_methods		3430247	2					
ANR	3430501	Identifier	auth_methods		3430247	0					
ANR	3430502	ElseStatement	else		3430247	0					
ANR	3430503	CompoundStatement		70:10:2719:2719	3430247	0					
ANR	3430504	ExpressionStatement	"m_auth_info . LookupString ( ATTR_SEC_AUTHENTICATION_METHODS , & auth_methods )"	1815:4:53986:54060	3430247	0	True				
ANR	3430505	CallExpression	"m_auth_info . LookupString ( ATTR_SEC_AUTHENTICATION_METHODS , & auth_methods )"		3430247	0					
ANR	3430506	Callee	m_auth_info . LookupString		3430247	0					
ANR	3430507	MemberAccess	m_auth_info . LookupString		3430247	0					
ANR	3430508	Identifier	m_auth_info		3430247	0					
ANR	3430509	Identifier	LookupString		3430247	1					
ANR	3430510	ArgumentList	ATTR_SEC_AUTHENTICATION_METHODS		3430247	1					
ANR	3430511	Argument	ATTR_SEC_AUTHENTICATION_METHODS		3430247	0					
ANR	3430512	Identifier	ATTR_SEC_AUTHENTICATION_METHODS		3430247	0					
ANR	3430513	Argument	& auth_methods		3430247	1					
ANR	3430514	UnaryOperationExpression	& auth_methods		3430247	0					
ANR	3430515	UnaryOperator	&		3430247	0					
ANR	3430516	Identifier	auth_methods		3430247	1					
ANR	3430517	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3430247	1					
ANR	3430518	Condition	DebugFlags & D_FULLDEBUG	1816:8:54070:54093	3430247	0	True				
ANR	3430519	BitAndExpression	DebugFlags & D_FULLDEBUG		3430247	0		&			
ANR	3430520	Identifier	DebugFlags		3430247	0					
ANR	3430521	Identifier	D_FULLDEBUG		3430247	1					
ANR	3430522	CompoundStatement		73:34:2872:2872	3430247	1					
ANR	3430523	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: AuthMethods: %s\\n"" , auth_methods )"	1817:5:54103:54166	3430247	0	True				
ANR	3430524	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: AuthMethods: %s\\n"" , auth_methods )"		3430247	0					
ANR	3430525	Callee	dprintf		3430247	0					
ANR	3430526	Identifier	dprintf		3430247	0					
ANR	3430527	ArgumentList	D_SECURITY		3430247	1					
ANR	3430528	Argument	D_SECURITY		3430247	0					
ANR	3430529	Identifier	D_SECURITY		3430247	0					
ANR	3430530	Argument	"""SECMAN: AuthMethods: %s\\n"""		3430247	1					
ANR	3430531	PrimaryExpression	"""SECMAN: AuthMethods: %s\\n"""		3430247	0					
ANR	3430532	Argument	auth_methods		3430247	2					
ANR	3430533	Identifier	auth_methods		3430247	0					
ANR	3430534	IfStatement	if ( ! auth_methods )		3430247	5					
ANR	3430535	Condition	! auth_methods	1821:7:54187:54199	3430247	0	True				
ANR	3430536	UnaryOperationExpression	! auth_methods		3430247	0					
ANR	3430537	UnaryOperator	!		3430247	0					
ANR	3430538	Identifier	auth_methods		3430247	1					
ANR	3430539	CompoundStatement		78:22:2978:2978	3430247	1					
ANR	3430540	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: no auth method!, failing.\\n"" )"	1823:4:54240:54298	3430247	0	True				
ANR	3430541	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: no auth method!, failing.\\n"" )"		3430247	0					
ANR	3430542	Callee	dprintf		3430247	0					
ANR	3430543	Identifier	dprintf		3430247	0					
ANR	3430544	ArgumentList	D_ALWAYS		3430247	1					
ANR	3430545	Argument	D_ALWAYS		3430247	0					
ANR	3430546	Identifier	D_ALWAYS		3430247	0					
ANR	3430547	Argument	"""SECMAN: no auth method!, failing.\\n"""		3430247	1					
ANR	3430548	PrimaryExpression	"""SECMAN: no auth method!, failing.\\n"""		3430247	0					
ANR	3430549	ExpressionStatement	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_ATTRIBUTE_MISSING , ""Protocol Error: No auth methods."" )"	1824:4:54304:54403	3430247	1	True				
ANR	3430550	CallExpression	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_ATTRIBUTE_MISSING , ""Protocol Error: No auth methods."" )"		3430247	0					
ANR	3430551	Callee	m_errstack -> push		3430247	0					
ANR	3430552	PtrMemberAccess	m_errstack -> push		3430247	0					
ANR	3430553	Identifier	m_errstack		3430247	0					
ANR	3430554	Identifier	push		3430247	1					
ANR	3430555	ArgumentList	"""SECMAN"""		3430247	1					
ANR	3430556	Argument	"""SECMAN"""		3430247	0					
ANR	3430557	PrimaryExpression	"""SECMAN"""		3430247	0					
ANR	3430558	Argument	SECMAN_ERR_ATTRIBUTE_MISSING		3430247	1					
ANR	3430559	Identifier	SECMAN_ERR_ATTRIBUTE_MISSING		3430247	0					
ANR	3430560	Argument	"""Protocol Error: No auth methods."""		3430247	2					
ANR	3430561	PrimaryExpression	"""Protocol Error: No auth methods."""		3430247	0					
ANR	3430562	ReturnStatement	return StartCommandFailed ;	1826:4:54409:54434	3430247	2	True				
ANR	3430563	Identifier	StartCommandFailed		3430247	0					
ANR	3430564	ElseStatement	else		3430247	0					
ANR	3430565	CompoundStatement		84:10:3222:3222	3430247	0					
ANR	3430566	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: Auth methods: %s\\n"" , auth_methods )"	1828:4:54452:54517	3430247	0	True				
ANR	3430567	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: Auth methods: %s\\n"" , auth_methods )"		3430247	0					
ANR	3430568	Callee	dprintf		3430247	0					
ANR	3430569	Identifier	dprintf		3430247	0					
ANR	3430570	ArgumentList	D_SECURITY		3430247	1					
ANR	3430571	Argument	D_SECURITY		3430247	0					
ANR	3430572	Identifier	D_SECURITY		3430247	0					
ANR	3430573	Argument	"""SECMAN: Auth methods: %s\\n"""		3430247	1					
ANR	3430574	PrimaryExpression	"""SECMAN: Auth methods: %s\\n"""		3430247	0					
ANR	3430575	Argument	auth_methods		3430247	2					
ANR	3430576	Identifier	auth_methods		3430247	0					
ANR	3430577	IdentifierDeclStatement	int auth_timeout = m_sec_man . getSecTimeout ( CLIENT_PERM ) ;	1831:3:54528:54585	3430247	6	True				
ANR	3430578	IdentifierDecl	auth_timeout = m_sec_man . getSecTimeout ( CLIENT_PERM )		3430247	0					
ANR	3430579	IdentifierDeclType	int		3430247	0					
ANR	3430580	Identifier	auth_timeout		3430247	1					
ANR	3430581	AssignmentExpression	auth_timeout = m_sec_man . getSecTimeout ( CLIENT_PERM )		3430247	2		=			
ANR	3430582	Identifier	auth_timeout		3430247	0					
ANR	3430583	CallExpression	m_sec_man . getSecTimeout ( CLIENT_PERM )		3430247	1					
ANR	3430584	Callee	m_sec_man . getSecTimeout		3430247	0					
ANR	3430585	MemberAccess	m_sec_man . getSecTimeout		3430247	0					
ANR	3430586	Identifier	m_sec_man		3430247	0					
ANR	3430587	Identifier	getSecTimeout		3430247	1					
ANR	3430588	ArgumentList	CLIENT_PERM		3430247	1					
ANR	3430589	Argument	CLIENT_PERM		3430247	0					
ANR	3430590	Identifier	CLIENT_PERM		3430247	0					
ANR	3430591	IdentifierDeclStatement	"bool auth_success = m_sock -> authenticate ( m_private_key , auth_methods , m_errstack , auth_timeout ) ;"	1832:3:54590:54684	3430247	7	True				
ANR	3430592	IdentifierDecl	"auth_success = m_sock -> authenticate ( m_private_key , auth_methods , m_errstack , auth_timeout )"		3430247	0					
ANR	3430593	IdentifierDeclType	bool		3430247	0					
ANR	3430594	Identifier	auth_success		3430247	1					
ANR	3430595	AssignmentExpression	"auth_success = m_sock -> authenticate ( m_private_key , auth_methods , m_errstack , auth_timeout )"		3430247	2		=			
ANR	3430596	Identifier	auth_success		3430247	0					
ANR	3430597	CallExpression	"m_sock -> authenticate ( m_private_key , auth_methods , m_errstack , auth_timeout )"		3430247	1					
ANR	3430598	Callee	m_sock -> authenticate		3430247	0					
ANR	3430599	PtrMemberAccess	m_sock -> authenticate		3430247	0					
ANR	3430600	Identifier	m_sock		3430247	0					
ANR	3430601	Identifier	authenticate		3430247	1					
ANR	3430602	ArgumentList	m_private_key		3430247	1					
ANR	3430603	Argument	m_private_key		3430247	0					
ANR	3430604	Identifier	m_private_key		3430247	0					
ANR	3430605	Argument	auth_methods		3430247	1					
ANR	3430606	Identifier	auth_methods		3430247	0					
ANR	3430607	Argument	m_errstack		3430247	2					
ANR	3430608	Identifier	m_errstack		3430247	0					
ANR	3430609	Argument	auth_timeout		3430247	3					
ANR	3430610	Identifier	auth_timeout		3430247	0					
ANR	3430611	IfStatement	if ( auth_methods )		3430247	8					
ANR	3430612	Condition	auth_methods	1834:7:54694:54705	3430247	0	True				
ANR	3430613	Identifier	auth_methods		3430247	0					
ANR	3430614	CompoundStatement		91:21:3484:3484	3430247	1					
ANR	3430615	ExpressionStatement	free ( auth_methods )	1835:4:54716:54734	3430247	0	True				
ANR	3430616	CallExpression	free ( auth_methods )		3430247	0					
ANR	3430617	Callee	free		3430247	0					
ANR	3430618	Identifier	free		3430247	0					
ANR	3430619	ArgumentList	auth_methods		3430247	1					
ANR	3430620	Argument	auth_methods		3430247	0					
ANR	3430621	Identifier	auth_methods		3430247	0					
ANR	3430622	IfStatement	if ( ! auth_success )		3430247	9					
ANR	3430623	Condition	! auth_success	1838:7:54749:54761	3430247	0	True				
ANR	3430624	UnaryOperationExpression	! auth_success		3430247	0					
ANR	3430625	UnaryOperator	!		3430247	0					
ANR	3430626	Identifier	auth_success		3430247	1					
ANR	3430627	CompoundStatement		96:4:3547:3572	3430247	1					
ANR	3430628	IdentifierDeclStatement	bool auth_required = true ;	1839:4:54771:54796	3430247	0	True				
ANR	3430629	IdentifierDecl	auth_required = true		3430247	0					
ANR	3430630	IdentifierDeclType	bool		3430247	0					
ANR	3430631	Identifier	auth_required		3430247	1					
ANR	3430632	AssignmentExpression	auth_required = true		3430247	2		=			
ANR	3430633	Identifier	true		3430247	0					
ANR	3430634	Identifier	true		3430247	1					
ANR	3430635	ExpressionStatement	"m_auth_info . LookupBool ( ATTR_SEC_AUTH_REQUIRED , auth_required )"	1840:4:54802:54862	3430247	1	True				
ANR	3430636	CallExpression	"m_auth_info . LookupBool ( ATTR_SEC_AUTH_REQUIRED , auth_required )"		3430247	0					
ANR	3430637	Callee	m_auth_info . LookupBool		3430247	0					
ANR	3430638	MemberAccess	m_auth_info . LookupBool		3430247	0					
ANR	3430639	Identifier	m_auth_info		3430247	0					
ANR	3430640	Identifier	LookupBool		3430247	1					
ANR	3430641	ArgumentList	ATTR_SEC_AUTH_REQUIRED		3430247	1					
ANR	3430642	Argument	ATTR_SEC_AUTH_REQUIRED		3430247	0					
ANR	3430643	Identifier	ATTR_SEC_AUTH_REQUIRED		3430247	0					
ANR	3430644	Argument	auth_required		3430247	1					
ANR	3430645	Identifier	auth_required		3430247	0					
ANR	3430646	IfStatement	if ( auth_required )		3430247	2					
ANR	3430647	Condition	auth_required	1842:8:54873:54885	3430247	0	True				
ANR	3430648	Identifier	auth_required		3430247	0					
ANR	3430649	CompoundStatement		99:24:3665:3665	3430247	1					
ANR	3430650	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: required authentication with %s failed, so aborting command %s.\\n"" , m_sock -> peer_description ( ) , m_cmd_description . Value ( ) )"	1843:5:54896:55070	3430247	0	True				
ANR	3430651	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: required authentication with %s failed, so aborting command %s.\\n"" , m_sock -> peer_description ( ) , m_cmd_description . Value ( ) )"		3430247	0					
ANR	3430652	Callee	dprintf		3430247	0					
ANR	3430653	Identifier	dprintf		3430247	0					
ANR	3430654	ArgumentList	D_ALWAYS		3430247	1					
ANR	3430655	Argument	D_ALWAYS		3430247	0					
ANR	3430656	Identifier	D_ALWAYS		3430247	0					
ANR	3430657	Argument	"""SECMAN: required authentication with %s failed, so aborting command %s.\\n"""		3430247	1					
ANR	3430658	PrimaryExpression	"""SECMAN: required authentication with %s failed, so aborting command %s.\\n"""		3430247	0					
ANR	3430659	Argument	m_sock -> peer_description ( )		3430247	2					
ANR	3430660	CallExpression	m_sock -> peer_description ( )		3430247	0					
ANR	3430661	Callee	m_sock -> peer_description		3430247	0					
ANR	3430662	PtrMemberAccess	m_sock -> peer_description		3430247	0					
ANR	3430663	Identifier	m_sock		3430247	0					
ANR	3430664	Identifier	peer_description		3430247	1					
ANR	3430665	ArgumentList			3430247	1					
ANR	3430666	Argument	m_cmd_description . Value ( )		3430247	3					
ANR	3430667	CallExpression	m_cmd_description . Value ( )		3430247	0					
ANR	3430668	Callee	m_cmd_description . Value		3430247	0					
ANR	3430669	MemberAccess	m_cmd_description . Value		3430247	0					
ANR	3430670	Identifier	m_cmd_description		3430247	0					
ANR	3430671	Identifier	Value		3430247	1					
ANR	3430672	ArgumentList			3430247	1					
ANR	3430673	ReturnStatement	return StartCommandFailed ;	1847:5:55077:55102	3430247	1	True				
ANR	3430674	Identifier	StartCommandFailed		3430247	0					
ANR	3430675	ExpressionStatement	"dprintf ( D_SECURITY | D_FULLDEBUG , ""SECMAN: authentication with %s failed but was not required, so continuing.\\n"" , m_sock -> peer_description ( ) )"	1849:4:55114:55269	3430247	3	True				
ANR	3430676	CallExpression	"dprintf ( D_SECURITY | D_FULLDEBUG , ""SECMAN: authentication with %s failed but was not required, so continuing.\\n"" , m_sock -> peer_description ( ) )"		3430247	0					
ANR	3430677	Callee	dprintf		3430247	0					
ANR	3430678	Identifier	dprintf		3430247	0					
ANR	3430679	ArgumentList	D_SECURITY | D_FULLDEBUG		3430247	1					
ANR	3430680	Argument	D_SECURITY | D_FULLDEBUG		3430247	0					
ANR	3430681	InclusiveOrExpression	D_SECURITY | D_FULLDEBUG		3430247	0		|			
ANR	3430682	Identifier	D_SECURITY		3430247	0					
ANR	3430683	Identifier	D_FULLDEBUG		3430247	1					
ANR	3430684	Argument	"""SECMAN: authentication with %s failed but was not required, so continuing.\\n"""		3430247	1					
ANR	3430685	PrimaryExpression	"""SECMAN: authentication with %s failed but was not required, so continuing.\\n"""		3430247	0					
ANR	3430686	Argument	m_sock -> peer_description ( )		3430247	2					
ANR	3430687	CallExpression	m_sock -> peer_description ( )		3430247	0					
ANR	3430688	Callee	m_sock -> peer_description		3430247	0					
ANR	3430689	PtrMemberAccess	m_sock -> peer_description		3430247	0					
ANR	3430690	Identifier	m_sock		3430247	0					
ANR	3430691	Identifier	peer_description		3430247	1					
ANR	3430692	ArgumentList			3430247	1					
ANR	3430693	ElseStatement	else		3430247	0					
ANR	3430694	CompoundStatement		110:9:4061:4061	3430247	0					
ANR	3430695	IfStatement	if ( ! m_new_session )		3430247	0					
ANR	3430696	Condition	! m_new_session	1855:7:55360:55373	3430247	0	True				
ANR	3430697	UnaryOperationExpression	! m_new_session		3430247	0					
ANR	3430698	UnaryOperator	!		3430247	0					
ANR	3430699	Identifier	m_new_session		3430247	1					
ANR	3430700	CompoundStatement		112:23:4152:4152	3430247	1					
ANR	3430701	IfStatement	if ( m_enc_key && m_enc_key -> key ( ) )		3430247	0					
ANR	3430702	Condition	m_enc_key && m_enc_key -> key ( )	1857:8:55415:55443	3430247	0	True				
ANR	3430703	AndExpression	m_enc_key && m_enc_key -> key ( )		3430247	0		&&			
ANR	3430704	Identifier	m_enc_key		3430247	0					
ANR	3430705	CallExpression	m_enc_key -> key ( )		3430247	1					
ANR	3430706	Callee	m_enc_key -> key		3430247	0					
ANR	3430707	PtrMemberAccess	m_enc_key -> key		3430247	0					
ANR	3430708	Identifier	m_enc_key		3430247	0					
ANR	3430709	Identifier	key		3430247	1					
ANR	3430710	ArgumentList			3430247	1					
ANR	3430711	CompoundStatement		114:39:4222:4222	3430247	1					
ANR	3430712	ExpressionStatement	m_private_key = new KeyInfo ( * ( m_enc_key -> key ( ) ) )	1858:5:55453:55501	3430247	0	True				
ANR	3430713	AssignmentExpression	m_private_key = new KeyInfo ( * ( m_enc_key -> key ( ) ) )		3430247	0		=			
ANR	3430714	Identifier	m_private_key		3430247	0					
ANR	3430715	UnaryOperationExpression	* ( m_enc_key -> key ( ) )		3430247	1					
ANR	3430716	UnaryOperator	*		3430247	0					
ANR	3430717	CallExpression	m_enc_key -> key ( )		3430247	1					
ANR	3430718	Callee	m_enc_key -> key		3430247	0					
ANR	3430719	PtrMemberAccess	m_enc_key -> key		3430247	0					
ANR	3430720	Identifier	m_enc_key		3430247	0					
ANR	3430721	Identifier	key		3430247	1					
ANR	3430722	ArgumentList			3430247	1					
ANR	3430723	ElseStatement	else		3430247	0					
ANR	3430724	CompoundStatement		116:11:4290:4290	3430247	0					
ANR	3430725	ExpressionStatement	ASSERT ( m_private_key == NULL )	1860:5:55521:55551	3430247	0	True				
ANR	3430726	CallExpression	ASSERT ( m_private_key == NULL )		3430247	0					
ANR	3430727	Callee	ASSERT		3430247	0					
ANR	3430728	Identifier	ASSERT		3430247	0					
ANR	3430729	ArgumentList	m_private_key == NULL		3430247	1					
ANR	3430730	Argument	m_private_key == NULL		3430247	0					
ANR	3430731	EqualityExpression	m_private_key == NULL		3430247	0		==			
ANR	3430732	Identifier	m_private_key		3430247	0					
ANR	3430733	Identifier	NULL		3430247	1					
ANR	3430734	IfStatement	if ( will_enable_mac == SecMan :: SEC_FEAT_ACT_YES )		3430247	6					
ANR	3430735	Condition	will_enable_mac == SecMan :: SEC_FEAT_ACT_YES	1866:6:55578:55620	3430247	0	True				
ANR	3430736	EqualityExpression	will_enable_mac == SecMan :: SEC_FEAT_ACT_YES		3430247	0		==			
ANR	3430737	Identifier	will_enable_mac		3430247	0					
ANR	3430738	Identifier	SecMan :: SEC_FEAT_ACT_YES		3430247	1					
ANR	3430739	CompoundStatement		123:51:4399:4399	3430247	1					
ANR	3430740	IfStatement	if ( ! m_private_key )		3430247	0					
ANR	3430741	Condition	! m_private_key	1868:7:55633:55646	3430247	0	True				
ANR	3430742	UnaryOperationExpression	! m_private_key		3430247	0					
ANR	3430743	UnaryOperator	!		3430247	0					
ANR	3430744	Identifier	m_private_key		3430247	1					
ANR	3430745	CompoundStatement		125:23:4425:4425	3430247	1					
ANR	3430746	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: enable_mac has no key to use, failing...\\n"" )"	1869:4:55655:55728	3430247	0	True				
ANR	3430747	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: enable_mac has no key to use, failing...\\n"" )"		3430247	0					
ANR	3430748	Callee	dprintf		3430247	0					
ANR	3430749	Identifier	dprintf		3430247	0					
ANR	3430750	ArgumentList	D_ALWAYS		3430247	1					
ANR	3430751	Argument	D_ALWAYS		3430247	0					
ANR	3430752	Identifier	D_ALWAYS		3430247	0					
ANR	3430753	Argument	"""SECMAN: enable_mac has no key to use, failing...\\n"""		3430247	1					
ANR	3430754	PrimaryExpression	"""SECMAN: enable_mac has no key to use, failing...\\n"""		3430247	0					
ANR	3430755	ExpressionStatement	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_NO_KEY , ""Failed to establish a crypto key."" )"	1870:4:55734:55825	3430247	1	True				
ANR	3430756	CallExpression	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_NO_KEY , ""Failed to establish a crypto key."" )"		3430247	0					
ANR	3430757	Callee	m_errstack -> push		3430247	0					
ANR	3430758	PtrMemberAccess	m_errstack -> push		3430247	0					
ANR	3430759	Identifier	m_errstack		3430247	0					
ANR	3430760	Identifier	push		3430247	1					
ANR	3430761	ArgumentList	"""SECMAN"""		3430247	1					
ANR	3430762	Argument	"""SECMAN"""		3430247	0					
ANR	3430763	PrimaryExpression	"""SECMAN"""		3430247	0					
ANR	3430764	Argument	SECMAN_ERR_NO_KEY		3430247	1					
ANR	3430765	Identifier	SECMAN_ERR_NO_KEY		3430247	0					
ANR	3430766	Argument	"""Failed to establish a crypto key."""		3430247	2					
ANR	3430767	PrimaryExpression	"""Failed to establish a crypto key."""		3430247	0					
ANR	3430768	ReturnStatement	return StartCommandFailed ;	1872:4:55831:55856	3430247	2	True				
ANR	3430769	Identifier	StartCommandFailed		3430247	0					
ANR	3430770	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3430247	1					
ANR	3430771	Condition	DebugFlags & D_FULLDEBUG	1875:7:55871:55894	3430247	0	True				
ANR	3430772	BitAndExpression	DebugFlags & D_FULLDEBUG		3430247	0		&			
ANR	3430773	Identifier	DebugFlags		3430247	0					
ANR	3430774	Identifier	D_FULLDEBUG		3430247	1					
ANR	3430775	CompoundStatement		132:33:4673:4673	3430247	1					
ANR	3430776	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: about to enable message authenticator.\\n"" )"	1876:4:55903:55975	3430247	0	True				
ANR	3430777	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: about to enable message authenticator.\\n"" )"		3430247	0					
ANR	3430778	Callee	dprintf		3430247	0					
ANR	3430779	Identifier	dprintf		3430247	0					
ANR	3430780	ArgumentList	D_SECURITY		3430247	1					
ANR	3430781	Argument	D_SECURITY		3430247	0					
ANR	3430782	Identifier	D_SECURITY		3430247	0					
ANR	3430783	Argument	"""SECMAN: about to enable message authenticator.\\n"""		3430247	1					
ANR	3430784	PrimaryExpression	"""SECMAN: about to enable message authenticator.\\n"""		3430247	0					
ANR	3430785	ExpressionStatement	"m_sec_man . key_printf ( D_SECURITY , m_private_key )"	1877:4:55981:56028	3430247	1	True				
ANR	3430786	CallExpression	"m_sec_man . key_printf ( D_SECURITY , m_private_key )"		3430247	0					
ANR	3430787	Callee	m_sec_man . key_printf		3430247	0					
ANR	3430788	MemberAccess	m_sec_man . key_printf		3430247	0					
ANR	3430789	Identifier	m_sec_man		3430247	0					
ANR	3430790	Identifier	key_printf		3430247	1					
ANR	3430791	ArgumentList	D_SECURITY		3430247	1					
ANR	3430792	Argument	D_SECURITY		3430247	0					
ANR	3430793	Identifier	D_SECURITY		3430247	0					
ANR	3430794	Argument	m_private_key		3430247	1					
ANR	3430795	Identifier	m_private_key		3430247	0					
ANR	3430796	ExpressionStatement	m_sock -> encode ( )	1880:3:56039:56055	3430247	2	True				
ANR	3430797	CallExpression	m_sock -> encode ( )		3430247	0					
ANR	3430798	Callee	m_sock -> encode		3430247	0					
ANR	3430799	PtrMemberAccess	m_sock -> encode		3430247	0					
ANR	3430800	Identifier	m_sock		3430247	0					
ANR	3430801	Identifier	encode		3430247	1					
ANR	3430802	ArgumentList			3430247	1					
ANR	3430803	ExpressionStatement	"m_sock -> set_MD_mode ( MD_ALWAYS_ON , m_private_key )"	1881:3:56060:56108	3430247	3	True				
ANR	3430804	CallExpression	"m_sock -> set_MD_mode ( MD_ALWAYS_ON , m_private_key )"		3430247	0					
ANR	3430805	Callee	m_sock -> set_MD_mode		3430247	0					
ANR	3430806	PtrMemberAccess	m_sock -> set_MD_mode		3430247	0					
ANR	3430807	Identifier	m_sock		3430247	0					
ANR	3430808	Identifier	set_MD_mode		3430247	1					
ANR	3430809	ArgumentList	MD_ALWAYS_ON		3430247	1					
ANR	3430810	Argument	MD_ALWAYS_ON		3430247	0					
ANR	3430811	Identifier	MD_ALWAYS_ON		3430247	0					
ANR	3430812	Argument	m_private_key		3430247	1					
ANR	3430813	Identifier	m_private_key		3430247	0					
ANR	3430814	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: successfully enabled message authenticator!\\n"" )"	1883:3:56114:56192	3430247	4	True				
ANR	3430815	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: successfully enabled message authenticator!\\n"" )"		3430247	0					
ANR	3430816	Callee	dprintf		3430247	0					
ANR	3430817	Identifier	dprintf		3430247	0					
ANR	3430818	ArgumentList	D_SECURITY		3430247	1					
ANR	3430819	Argument	D_SECURITY		3430247	0					
ANR	3430820	Identifier	D_SECURITY		3430247	0					
ANR	3430821	Argument	"""SECMAN: successfully enabled message authenticator!\\n"""		3430247	1					
ANR	3430822	PrimaryExpression	"""SECMAN: successfully enabled message authenticator!\\n"""		3430247	0					
ANR	3430823	ElseStatement	else		3430247	0					
ANR	3430824	CompoundStatement		141:9:4979:4979	3430247	0					
ANR	3430825	ExpressionStatement	m_sock -> encode ( )	1887:3:56330:56346	3430247	0	True				
ANR	3430826	CallExpression	m_sock -> encode ( )		3430247	0					
ANR	3430827	Callee	m_sock -> encode		3430247	0					
ANR	3430828	PtrMemberAccess	m_sock -> encode		3430247	0					
ANR	3430829	Identifier	m_sock		3430247	0					
ANR	3430830	Identifier	encode		3430247	1					
ANR	3430831	ArgumentList			3430247	1					
ANR	3430832	ExpressionStatement	"m_sock -> set_MD_mode ( MD_OFF , m_private_key )"	1888:3:56351:56393	3430247	1	True				
ANR	3430833	CallExpression	"m_sock -> set_MD_mode ( MD_OFF , m_private_key )"		3430247	0					
ANR	3430834	Callee	m_sock -> set_MD_mode		3430247	0					
ANR	3430835	PtrMemberAccess	m_sock -> set_MD_mode		3430247	0					
ANR	3430836	Identifier	m_sock		3430247	0					
ANR	3430837	Identifier	set_MD_mode		3430247	1					
ANR	3430838	ArgumentList	MD_OFF		3430247	1					
ANR	3430839	Argument	MD_OFF		3430247	0					
ANR	3430840	Identifier	MD_OFF		3430247	0					
ANR	3430841	Argument	m_private_key		3430247	1					
ANR	3430842	Identifier	m_private_key		3430247	0					
ANR	3430843	IfStatement	if ( will_enable_enc == SecMan :: SEC_FEAT_ACT_YES )		3430247	7					
ANR	3430844	Condition	will_enable_enc == SecMan :: SEC_FEAT_ACT_YES	1891:6:56406:56448	3430247	0	True				
ANR	3430845	EqualityExpression	will_enable_enc == SecMan :: SEC_FEAT_ACT_YES		3430247	0		==			
ANR	3430846	Identifier	will_enable_enc		3430247	0					
ANR	3430847	Identifier	SecMan :: SEC_FEAT_ACT_YES		3430247	1					
ANR	3430848	CompoundStatement		148:51:5227:5227	3430247	1					
ANR	3430849	IfStatement	if ( ! m_private_key )		3430247	0					
ANR	3430850	Condition	! m_private_key	1893:7:56461:56474	3430247	0	True				
ANR	3430851	UnaryOperationExpression	! m_private_key		3430247	0					
ANR	3430852	UnaryOperator	!		3430247	0					
ANR	3430853	Identifier	m_private_key		3430247	1					
ANR	3430854	CompoundStatement		150:23:5253:5253	3430247	1					
ANR	3430855	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: enable_enc no key to use, failing...\\n"" )"	1894:4:56483:56552	3430247	0	True				
ANR	3430856	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: enable_enc no key to use, failing...\\n"" )"		3430247	0					
ANR	3430857	Callee	dprintf		3430247	0					
ANR	3430858	Identifier	dprintf		3430247	0					
ANR	3430859	ArgumentList	D_ALWAYS		3430247	1					
ANR	3430860	Argument	D_ALWAYS		3430247	0					
ANR	3430861	Identifier	D_ALWAYS		3430247	0					
ANR	3430862	Argument	"""SECMAN: enable_enc no key to use, failing...\\n"""		3430247	1					
ANR	3430863	PrimaryExpression	"""SECMAN: enable_enc no key to use, failing...\\n"""		3430247	0					
ANR	3430864	ExpressionStatement	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_NO_KEY , ""Failed to establish a crypto key."" )"	1895:4:56558:56649	3430247	1	True				
ANR	3430865	CallExpression	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_NO_KEY , ""Failed to establish a crypto key."" )"		3430247	0					
ANR	3430866	Callee	m_errstack -> push		3430247	0					
ANR	3430867	PtrMemberAccess	m_errstack -> push		3430247	0					
ANR	3430868	Identifier	m_errstack		3430247	0					
ANR	3430869	Identifier	push		3430247	1					
ANR	3430870	ArgumentList	"""SECMAN"""		3430247	1					
ANR	3430871	Argument	"""SECMAN"""		3430247	0					
ANR	3430872	PrimaryExpression	"""SECMAN"""		3430247	0					
ANR	3430873	Argument	SECMAN_ERR_NO_KEY		3430247	1					
ANR	3430874	Identifier	SECMAN_ERR_NO_KEY		3430247	0					
ANR	3430875	Argument	"""Failed to establish a crypto key."""		3430247	2					
ANR	3430876	PrimaryExpression	"""Failed to establish a crypto key."""		3430247	0					
ANR	3430877	ReturnStatement	return StartCommandFailed ;	1897:4:56655:56680	3430247	2	True				
ANR	3430878	Identifier	StartCommandFailed		3430247	0					
ANR	3430879	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3430247	1					
ANR	3430880	Condition	DebugFlags & D_FULLDEBUG	1900:7:56695:56718	3430247	0	True				
ANR	3430881	BitAndExpression	DebugFlags & D_FULLDEBUG		3430247	0		&			
ANR	3430882	Identifier	DebugFlags		3430247	0					
ANR	3430883	Identifier	D_FULLDEBUG		3430247	1					
ANR	3430884	CompoundStatement		157:33:5497:5497	3430247	1					
ANR	3430885	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: about to enable encryption.\\n"" )"	1901:4:56727:56788	3430247	0	True				
ANR	3430886	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: about to enable encryption.\\n"" )"		3430247	0					
ANR	3430887	Callee	dprintf		3430247	0					
ANR	3430888	Identifier	dprintf		3430247	0					
ANR	3430889	ArgumentList	D_SECURITY		3430247	1					
ANR	3430890	Argument	D_SECURITY		3430247	0					
ANR	3430891	Identifier	D_SECURITY		3430247	0					
ANR	3430892	Argument	"""SECMAN: about to enable encryption.\\n"""		3430247	1					
ANR	3430893	PrimaryExpression	"""SECMAN: about to enable encryption.\\n"""		3430247	0					
ANR	3430894	ExpressionStatement	"m_sec_man . key_printf ( D_SECURITY , m_private_key )"	1902:4:56794:56841	3430247	1	True				
ANR	3430895	CallExpression	"m_sec_man . key_printf ( D_SECURITY , m_private_key )"		3430247	0					
ANR	3430896	Callee	m_sec_man . key_printf		3430247	0					
ANR	3430897	MemberAccess	m_sec_man . key_printf		3430247	0					
ANR	3430898	Identifier	m_sec_man		3430247	0					
ANR	3430899	Identifier	key_printf		3430247	1					
ANR	3430900	ArgumentList	D_SECURITY		3430247	1					
ANR	3430901	Argument	D_SECURITY		3430247	0					
ANR	3430902	Identifier	D_SECURITY		3430247	0					
ANR	3430903	Argument	m_private_key		3430247	1					
ANR	3430904	Identifier	m_private_key		3430247	0					
ANR	3430905	ExpressionStatement	m_sock -> encode ( )	1905:3:56852:56868	3430247	2	True				
ANR	3430906	CallExpression	m_sock -> encode ( )		3430247	0					
ANR	3430907	Callee	m_sock -> encode		3430247	0					
ANR	3430908	PtrMemberAccess	m_sock -> encode		3430247	0					
ANR	3430909	Identifier	m_sock		3430247	0					
ANR	3430910	Identifier	encode		3430247	1					
ANR	3430911	ArgumentList			3430247	1					
ANR	3430912	ExpressionStatement	"m_sock -> set_crypto_key ( true , m_private_key )"	1906:3:56873:56916	3430247	3	True				
ANR	3430913	CallExpression	"m_sock -> set_crypto_key ( true , m_private_key )"		3430247	0					
ANR	3430914	Callee	m_sock -> set_crypto_key		3430247	0					
ANR	3430915	PtrMemberAccess	m_sock -> set_crypto_key		3430247	0					
ANR	3430916	Identifier	m_sock		3430247	0					
ANR	3430917	Identifier	set_crypto_key		3430247	1					
ANR	3430918	ArgumentList	true		3430247	1					
ANR	3430919	Argument	true		3430247	0					
ANR	3430920	Identifier	true		3430247	0					
ANR	3430921	Argument	m_private_key		3430247	1					
ANR	3430922	Identifier	m_private_key		3430247	0					
ANR	3430923	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: successfully enabled encryption!\\n"" )"	1908:3:56922:56989	3430247	4	True				
ANR	3430924	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: successfully enabled encryption!\\n"" )"		3430247	0					
ANR	3430925	Callee	dprintf		3430247	0					
ANR	3430926	Identifier	dprintf		3430247	0					
ANR	3430927	ArgumentList	D_SECURITY		3430247	1					
ANR	3430928	Argument	D_SECURITY		3430247	0					
ANR	3430929	Identifier	D_SECURITY		3430247	0					
ANR	3430930	Argument	"""SECMAN: successfully enabled encryption!\\n"""		3430247	1					
ANR	3430931	PrimaryExpression	"""SECMAN: successfully enabled encryption!\\n"""		3430247	0					
ANR	3430932	ElseStatement	else		3430247	0					
ANR	3430933	CompoundStatement		166:9:5776:5776	3430247	0					
ANR	3430934	ExpressionStatement	m_sock -> encode ( )	1913:3:57172:57188	3430247	0	True				
ANR	3430935	CallExpression	m_sock -> encode ( )		3430247	0					
ANR	3430936	Callee	m_sock -> encode		3430247	0					
ANR	3430937	PtrMemberAccess	m_sock -> encode		3430247	0					
ANR	3430938	Identifier	m_sock		3430247	0					
ANR	3430939	Identifier	encode		3430247	1					
ANR	3430940	ArgumentList			3430247	1					
ANR	3430941	ExpressionStatement	"m_sock -> set_crypto_key ( false , m_private_key )"	1914:3:57193:57237	3430247	1	True				
ANR	3430942	CallExpression	"m_sock -> set_crypto_key ( false , m_private_key )"		3430247	0					
ANR	3430943	Callee	m_sock -> set_crypto_key		3430247	0					
ANR	3430944	PtrMemberAccess	m_sock -> set_crypto_key		3430247	0					
ANR	3430945	Identifier	m_sock		3430247	0					
ANR	3430946	Identifier	set_crypto_key		3430247	1					
ANR	3430947	ArgumentList	false		3430247	1					
ANR	3430948	Argument	false		3430247	0					
ANR	3430949	Identifier	false		3430247	0					
ANR	3430950	Argument	m_private_key		3430247	1					
ANR	3430951	Identifier	m_private_key		3430247	0					
ANR	3430952	ExpressionStatement	m_state = ReceivePostAuthInfo	1919:1:57251:57280	3430247	1	True				
ANR	3430953	AssignmentExpression	m_state = ReceivePostAuthInfo		3430247	0		=			
ANR	3430954	Identifier	m_state		3430247	0					
ANR	3430955	Identifier	ReceivePostAuthInfo		3430247	1					
ANR	3430956	ReturnStatement	return StartCommandContinue ;	1920:1:57283:57310	3430247	2	True				
ANR	3430957	Identifier	StartCommandContinue		3430247	0					
ANR	3430958	ReturnType	StartCommandResult		3430247	1					
ANR	3430959	Identifier	SecManStartCommand :: authenticate_inner		3430247	2					
ANR	3430960	ParameterList			3430247	3					
ANR	3430961	CFGEntryNode	ENTRY		3430247		True				
ANR	3430962	CFGExitNode	EXIT		3430247		True				
ANR	3430963	Symbol	m_new_session		3430247						
ANR	3430964	Symbol	m_sec_man		3430247						
ANR	3430965	Symbol	will_authenticate		3430247						
ANR	3430966	Symbol	ATTR_SEC_ENCRYPTION		3430247						
ANR	3430967	Symbol	SecMan :: SEC_FEAT_ACT_INVALID		3430247						
ANR	3430968	Symbol	SECMAN_ERR_ATTRIBUTE_MISSING		3430247						
ANR	3430969	Symbol	StartCommandFailed		3430247						
ANR	3430970	Symbol	m_sock -> peer_description		3430247						
ANR	3430971	Symbol	m_state		3430247						
ANR	3430972	Symbol	m_sec_man . sec_lookup_feat_act		3430247						
ANR	3430973	Symbol	m_sock -> type		3430247						
ANR	3430974	Symbol	auth_required		3430247						
ANR	3430975	Symbol	Stream :: reli_sock		3430247						
ANR	3430976	Symbol	m_cmd_description . Value		3430247						
ANR	3430977	Symbol	ATTR_SEC_AUTHENTICATION_METHODS		3430247						
ANR	3430978	Symbol	m_sec_man . getSecTimeout		3430247						
ANR	3430979	Symbol	m_is_tcp		3430247						
ANR	3430980	Symbol	SECMAN_ERR_NO_KEY		3430247						
ANR	3430981	Symbol	* m_enc_key		3430247						
ANR	3430982	Symbol	NULL		3430247						
ANR	3430983	Symbol	* m_enc_key -> key		3430247						
ANR	3430984	Symbol	m_remote_version . IsEmpty		3430247						
ANR	3430985	Symbol	* m_sock		3430247						
ANR	3430986	Symbol	m_sock		3430247						
ANR	3430987	Symbol	DebugFlags		3430247						
ANR	3430988	Symbol	D_FULLDEBUG		3430247						
ANR	3430989	Symbol	m_cmd_description		3430247						
ANR	3430990	Symbol	SecMan :: SEC_FEAT_ACT_NO		3430247						
ANR	3430991	Symbol	ReceivePostAuthInfo		3430247						
ANR	3430992	Symbol	ATTR_SEC_AUTHENTICATION_METHODS_LIST		3430247						
ANR	3430993	Symbol	m_sock -> authenticate		3430247						
ANR	3430994	Symbol	true		3430247						
ANR	3430995	Symbol	MD_ALWAYS_ON		3430247						
ANR	3430996	Symbol	m_auth_info		3430247						
ANR	3430997	Symbol	will_enable_enc		3430247						
ANR	3430998	Symbol	ATTR_SEC_AUTHENTICATION		3430247						
ANR	3430999	Symbol	auth_success		3430247						
ANR	3431000	Symbol	StartCommandContinue		3430247						
ANR	3431001	Symbol	D_SECURITY		3430247						
ANR	3431002	Symbol	will_enable_mac		3430247						
ANR	3431003	Symbol	m_errstack		3430247						
ANR	3431004	Symbol	m_remote_version . Value		3430247						
ANR	3431005	Symbol	ATTR_SEC_AUTH_REQUIRED		3430247						
ANR	3431006	Symbol	CLIENT_PERM		3430247						
ANR	3431007	Symbol	SecMan :: SEC_FEAT_ACT_UNDEFINED		3430247						
ANR	3431008	Symbol	auth_timeout		3430247						
ANR	3431009	Symbol	m_remote_version		3430247						
ANR	3431010	Symbol	D_ALWAYS		3430247						
ANR	3431011	Symbol	MD_OFF		3430247						
ANR	3431012	Symbol	false		3430247						
ANR	3431013	Symbol	m_private_key		3430247						
ANR	3431014	Symbol	& auth_methods		3430247						
ANR	3431015	Symbol	* ( m_enc_key -> key ( ) )		3430247						
ANR	3431016	Symbol	m_enc_key		3430247						
ANR	3431017	Symbol	auth_methods		3430247						
ANR	3431018	Symbol	* * m_enc_key		3430247						
ANR	3431019	Symbol	SecMan :: SEC_FEAT_ACT_YES		3430247						
ANR	3431020	Symbol	m_enc_key -> key		3430247						
ANR	3431021	Symbol	ATTR_SEC_INTEGRITY		3430247						
ANR	3431022	Function	SecManStartCommand :: receivePostAuthInfo_inner	1923:0:57315:62435							
ANR	3431023	FunctionDef	SecManStartCommand :: receivePostAuthInfo_inner ()		3431022	0					
ANR	3431024	CompoundStatement		1925:0:57382:62435	3431022	0					
ANR	3431025	IfStatement	if ( m_is_tcp )		3431022	0					
ANR	3431026	Condition	m_is_tcp	1926:5:57389:57396	3431022	0	True				
ANR	3431027	Identifier	m_is_tcp		3431022	0					
ANR	3431028	CompoundStatement		2:16:17:17	3431022	1					
ANR	3431029	IfStatement	if ( m_new_session )		3431022	0					
ANR	3431030	Condition	m_new_session	1927:6:57408:57420	3431022	0	True				
ANR	3431031	Identifier	m_new_session		3431022	0					
ANR	3431032	CompoundStatement		113:3:3780:3787	3431022	1					
ANR	3431033	ExpressionStatement	m_sock -> encode ( )	1931:3:57577:57593	3431022	0	True				
ANR	3431034	CallExpression	m_sock -> encode ( )		3431022	0					
ANR	3431035	Callee	m_sock -> encode		3431022	0					
ANR	3431036	PtrMemberAccess	m_sock -> encode		3431022	0					
ANR	3431037	Identifier	m_sock		3431022	0					
ANR	3431038	Identifier	encode		3431022	1					
ANR	3431039	ArgumentList			3431022	1					
ANR	3431040	ExpressionStatement	m_sock -> end_of_message ( )	1932:3:57598:57622	3431022	1	True				
ANR	3431041	CallExpression	m_sock -> end_of_message ( )		3431022	0					
ANR	3431042	Callee	m_sock -> end_of_message		3431022	0					
ANR	3431043	PtrMemberAccess	m_sock -> end_of_message		3431022	0					
ANR	3431044	Identifier	m_sock		3431022	0					
ANR	3431045	Identifier	end_of_message		3431022	1					
ANR	3431046	ArgumentList			3431022	1					
ANR	3431047	IfStatement	if ( m_nonblocking && ! m_sock -> readReady ( ) )		3431022	2					
ANR	3431048	Condition	m_nonblocking && ! m_sock -> readReady ( )	1934:7:57632:57668	3431022	0	True				
ANR	3431049	AndExpression	m_nonblocking && ! m_sock -> readReady ( )		3431022	0		&&			
ANR	3431050	Identifier	m_nonblocking		3431022	0					
ANR	3431051	UnaryOperationExpression	! m_sock -> readReady ( )		3431022	1					
ANR	3431052	UnaryOperator	!		3431022	0					
ANR	3431053	CallExpression	m_sock -> readReady ( )		3431022	1					
ANR	3431054	Callee	m_sock -> readReady		3431022	0					
ANR	3431055	PtrMemberAccess	m_sock -> readReady		3431022	0					
ANR	3431056	Identifier	m_sock		3431022	0					
ANR	3431057	Identifier	readReady		3431022	1					
ANR	3431058	ArgumentList			3431022	1					
ANR	3431059	CompoundStatement		10:47:289:289	3431022	1					
ANR	3431060	ReturnStatement	return WaitForSocketCallback ( ) ;	1935:4:57678:57708	3431022	0	True				
ANR	3431061	CallExpression	WaitForSocketCallback ( )		3431022	0					
ANR	3431062	Callee	WaitForSocketCallback		3431022	0					
ANR	3431063	Identifier	WaitForSocketCallback		3431022	0					
ANR	3431064	ArgumentList			3431022	1					
ANR	3431065	IdentifierDeclStatement	ClassAd post_auth_info ;	1939:3:57777:57799	3431022	3	True				
ANR	3431066	IdentifierDecl	post_auth_info		3431022	0					
ANR	3431067	IdentifierDeclType	ClassAd		3431022	0					
ANR	3431068	Identifier	post_auth_info		3431022	1					
ANR	3431069	ExpressionStatement	m_sock -> decode ( )	1940:3:57804:57820	3431022	4	True				
ANR	3431070	CallExpression	m_sock -> decode ( )		3431022	0					
ANR	3431071	Callee	m_sock -> decode		3431022	0					
ANR	3431072	PtrMemberAccess	m_sock -> decode		3431022	0					
ANR	3431073	Identifier	m_sock		3431022	0					
ANR	3431074	Identifier	decode		3431022	1					
ANR	3431075	ArgumentList			3431022	1					
ANR	3431076	IfStatement	if ( ! post_auth_info . initFromStream ( * m_sock ) || ! m_sock -> end_of_message ( ) )		3431022	5					
ANR	3431077	Condition	! post_auth_info . initFromStream ( * m_sock ) || ! m_sock -> end_of_message ( )	1941:7:57829:57896	3431022	0	True				
ANR	3431078	OrExpression	! post_auth_info . initFromStream ( * m_sock ) || ! m_sock -> end_of_message ( )		3431022	0		||			
ANR	3431079	UnaryOperationExpression	! post_auth_info . initFromStream ( * m_sock )		3431022	0					
ANR	3431080	UnaryOperator	!		3431022	0					
ANR	3431081	CallExpression	post_auth_info . initFromStream ( * m_sock )		3431022	1					
ANR	3431082	Callee	post_auth_info . initFromStream		3431022	0					
ANR	3431083	MemberAccess	post_auth_info . initFromStream		3431022	0					
ANR	3431084	Identifier	post_auth_info		3431022	0					
ANR	3431085	Identifier	initFromStream		3431022	1					
ANR	3431086	ArgumentList	* m_sock		3431022	1					
ANR	3431087	Argument	* m_sock		3431022	0					
ANR	3431088	UnaryOperationExpression	* m_sock		3431022	0					
ANR	3431089	UnaryOperator	*		3431022	0					
ANR	3431090	Identifier	m_sock		3431022	1					
ANR	3431091	UnaryOperationExpression	! m_sock -> end_of_message ( )		3431022	1					
ANR	3431092	UnaryOperator	!		3431022	0					
ANR	3431093	CallExpression	m_sock -> end_of_message ( )		3431022	1					
ANR	3431094	Callee	m_sock -> end_of_message		3431022	0					
ANR	3431095	PtrMemberAccess	m_sock -> end_of_message		3431022	0					
ANR	3431096	Identifier	m_sock		3431022	0					
ANR	3431097	Identifier	end_of_message		3431022	1					
ANR	3431098	ArgumentList			3431022	1					
ANR	3431099	CompoundStatement		17:77:516:516	3431022	1					
ANR	3431100	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: could not receive session info, failing!\\n"" )"	1942:4:57905:57977	3431022	0	True				
ANR	3431101	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: could not receive session info, failing!\\n"" )"		3431022	0					
ANR	3431102	Callee	dprintf		3431022	0					
ANR	3431103	Identifier	dprintf		3431022	0					
ANR	3431104	ArgumentList	D_ALWAYS		3431022	1					
ANR	3431105	Argument	D_ALWAYS		3431022	0					
ANR	3431106	Identifier	D_ALWAYS		3431022	0					
ANR	3431107	Argument	"""SECMAN: could not receive session info, failing!\\n"""		3431022	1					
ANR	3431108	PrimaryExpression	"""SECMAN: could not receive session info, failing!\\n"""		3431022	0					
ANR	3431109	ExpressionStatement	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_COMMUNICATIONS_ERROR , ""could not receive post_auth_info."" )"	1943:4:57983:58088	3431022	1	True				
ANR	3431110	CallExpression	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_COMMUNICATIONS_ERROR , ""could not receive post_auth_info."" )"		3431022	0					
ANR	3431111	Callee	m_errstack -> push		3431022	0					
ANR	3431112	PtrMemberAccess	m_errstack -> push		3431022	0					
ANR	3431113	Identifier	m_errstack		3431022	0					
ANR	3431114	Identifier	push		3431022	1					
ANR	3431115	ArgumentList	"""SECMAN"""		3431022	1					
ANR	3431116	Argument	"""SECMAN"""		3431022	0					
ANR	3431117	PrimaryExpression	"""SECMAN"""		3431022	0					
ANR	3431118	Argument	SECMAN_ERR_COMMUNICATIONS_ERROR		3431022	1					
ANR	3431119	Identifier	SECMAN_ERR_COMMUNICATIONS_ERROR		3431022	0					
ANR	3431120	Argument	"""could not receive post_auth_info."""		3431022	2					
ANR	3431121	PrimaryExpression	"""could not receive post_auth_info."""		3431022	0					
ANR	3431122	ReturnStatement	return StartCommandFailed ;	1945:4:58094:58119	3431022	2	True				
ANR	3431123	Identifier	StartCommandFailed		3431022	0					
ANR	3431124	ElseStatement	else		3431022	0					
ANR	3431125	CompoundStatement		22:10:748:748	3431022	0					
ANR	3431126	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3431022	0					
ANR	3431127	Condition	DebugFlags & D_FULLDEBUG	1947:8:58141:58164	3431022	0	True				
ANR	3431128	BitAndExpression	DebugFlags & D_FULLDEBUG		3431022	0		&			
ANR	3431129	Identifier	DebugFlags		3431022	0					
ANR	3431130	Identifier	D_FULLDEBUG		3431022	1					
ANR	3431131	CompoundStatement		23:34:784:784	3431022	1					
ANR	3431132	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: received post-auth classad:\\n"" )"	1948:5:58174:58235	3431022	0	True				
ANR	3431133	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: received post-auth classad:\\n"" )"		3431022	0					
ANR	3431134	Callee	dprintf		3431022	0					
ANR	3431135	Identifier	dprintf		3431022	0					
ANR	3431136	ArgumentList	D_SECURITY		3431022	1					
ANR	3431137	Argument	D_SECURITY		3431022	0					
ANR	3431138	Identifier	D_SECURITY		3431022	0					
ANR	3431139	Argument	"""SECMAN: received post-auth classad:\\n"""		3431022	1					
ANR	3431140	PrimaryExpression	"""SECMAN: received post-auth classad:\\n"""		3431022	0					
ANR	3431141	ExpressionStatement	post_auth_info . dPrint ( D_SECURITY )	1949:5:58242:58276	3431022	1	True				
ANR	3431142	CallExpression	post_auth_info . dPrint ( D_SECURITY )		3431022	0					
ANR	3431143	Callee	post_auth_info . dPrint		3431022	0					
ANR	3431144	MemberAccess	post_auth_info . dPrint		3431022	0					
ANR	3431145	Identifier	post_auth_info		3431022	0					
ANR	3431146	Identifier	dPrint		3431022	1					
ANR	3431147	ArgumentList	D_SECURITY		3431022	1					
ANR	3431148	Argument	D_SECURITY		3431022	0					
ANR	3431149	Identifier	D_SECURITY		3431022	0					
ANR	3431150	ExpressionStatement	"m_sec_man . sec_copy_attribute ( m_auth_info , post_auth_info , ATTR_SEC_SID )"	1954:3:58323:58396	3431022	6	True				
ANR	3431151	CallExpression	"m_sec_man . sec_copy_attribute ( m_auth_info , post_auth_info , ATTR_SEC_SID )"		3431022	0					
ANR	3431152	Callee	m_sec_man . sec_copy_attribute		3431022	0					
ANR	3431153	MemberAccess	m_sec_man . sec_copy_attribute		3431022	0					
ANR	3431154	Identifier	m_sec_man		3431022	0					
ANR	3431155	Identifier	sec_copy_attribute		3431022	1					
ANR	3431156	ArgumentList	m_auth_info		3431022	1					
ANR	3431157	Argument	m_auth_info		3431022	0					
ANR	3431158	Identifier	m_auth_info		3431022	0					
ANR	3431159	Argument	post_auth_info		3431022	1					
ANR	3431160	Identifier	post_auth_info		3431022	0					
ANR	3431161	Argument	ATTR_SEC_SID		3431022	2					
ANR	3431162	Identifier	ATTR_SEC_SID		3431022	0					
ANR	3431163	ExpressionStatement	"m_sec_man . sec_copy_attribute ( m_auth_info , ATTR_SEC_MY_REMOTE_USER_NAME , post_auth_info , ATTR_SEC_USER )"	1962:3:58725:58829	3431022	7	True				
ANR	3431164	CallExpression	"m_sec_man . sec_copy_attribute ( m_auth_info , ATTR_SEC_MY_REMOTE_USER_NAME , post_auth_info , ATTR_SEC_USER )"		3431022	0					
ANR	3431165	Callee	m_sec_man . sec_copy_attribute		3431022	0					
ANR	3431166	MemberAccess	m_sec_man . sec_copy_attribute		3431022	0					
ANR	3431167	Identifier	m_sec_man		3431022	0					
ANR	3431168	Identifier	sec_copy_attribute		3431022	1					
ANR	3431169	ArgumentList	m_auth_info		3431022	1					
ANR	3431170	Argument	m_auth_info		3431022	0					
ANR	3431171	Identifier	m_auth_info		3431022	0					
ANR	3431172	Argument	ATTR_SEC_MY_REMOTE_USER_NAME		3431022	1					
ANR	3431173	Identifier	ATTR_SEC_MY_REMOTE_USER_NAME		3431022	0					
ANR	3431174	Argument	post_auth_info		3431022	2					
ANR	3431175	Identifier	post_auth_info		3431022	0					
ANR	3431176	Argument	ATTR_SEC_USER		3431022	3					
ANR	3431177	Identifier	ATTR_SEC_USER		3431022	0					
ANR	3431178	ExpressionStatement	"m_sec_man . sec_copy_attribute ( m_auth_info , post_auth_info , ATTR_SEC_VALID_COMMANDS )"	1963:3:58834:58918	3431022	8	True				
ANR	3431179	CallExpression	"m_sec_man . sec_copy_attribute ( m_auth_info , post_auth_info , ATTR_SEC_VALID_COMMANDS )"		3431022	0					
ANR	3431180	Callee	m_sec_man . sec_copy_attribute		3431022	0					
ANR	3431181	MemberAccess	m_sec_man . sec_copy_attribute		3431022	0					
ANR	3431182	Identifier	m_sec_man		3431022	0					
ANR	3431183	Identifier	sec_copy_attribute		3431022	1					
ANR	3431184	ArgumentList	m_auth_info		3431022	1					
ANR	3431185	Argument	m_auth_info		3431022	0					
ANR	3431186	Identifier	m_auth_info		3431022	0					
ANR	3431187	Argument	post_auth_info		3431022	1					
ANR	3431188	Identifier	post_auth_info		3431022	0					
ANR	3431189	Argument	ATTR_SEC_VALID_COMMANDS		3431022	2					
ANR	3431190	Identifier	ATTR_SEC_VALID_COMMANDS		3431022	0					
ANR	3431191	IfStatement	if ( m_sock -> getFullyQualifiedUser ( ) )		3431022	9					
ANR	3431192	Condition	m_sock -> getFullyQualifiedUser ( )	1965:7:58928:58958	3431022	0	True				
ANR	3431193	CallExpression	m_sock -> getFullyQualifiedUser ( )		3431022	0					
ANR	3431194	Callee	m_sock -> getFullyQualifiedUser		3431022	0					
ANR	3431195	PtrMemberAccess	m_sock -> getFullyQualifiedUser		3431022	0					
ANR	3431196	Identifier	m_sock		3431022	0					
ANR	3431197	Identifier	getFullyQualifiedUser		3431022	1					
ANR	3431198	ArgumentList			3431022	1					
ANR	3431199	CompoundStatement		41:41:1579:1579	3431022	1					
ANR	3431200	ExpressionStatement	"m_auth_info . Assign ( ATTR_SEC_USER , m_sock -> getFullyQualifiedUser ( ) )"	1966:4:58968:59036	3431022	0	True				
ANR	3431201	CallExpression	"m_auth_info . Assign ( ATTR_SEC_USER , m_sock -> getFullyQualifiedUser ( ) )"		3431022	0					
ANR	3431202	Callee	m_auth_info . Assign		3431022	0					
ANR	3431203	MemberAccess	m_auth_info . Assign		3431022	0					
ANR	3431204	Identifier	m_auth_info		3431022	0					
ANR	3431205	Identifier	Assign		3431022	1					
ANR	3431206	ArgumentList	ATTR_SEC_USER		3431022	1					
ANR	3431207	Argument	ATTR_SEC_USER		3431022	0					
ANR	3431208	Identifier	ATTR_SEC_USER		3431022	0					
ANR	3431209	Argument	m_sock -> getFullyQualifiedUser ( )		3431022	1					
ANR	3431210	CallExpression	m_sock -> getFullyQualifiedUser ( )		3431022	0					
ANR	3431211	Callee	m_sock -> getFullyQualifiedUser		3431022	0					
ANR	3431212	PtrMemberAccess	m_sock -> getFullyQualifiedUser		3431022	0					
ANR	3431213	Identifier	m_sock		3431022	0					
ANR	3431214	Identifier	getFullyQualifiedUser		3431022	1					
ANR	3431215	ArgumentList			3431022	1					
ANR	3431216	ElseStatement	else		3431022	0					
ANR	3431217	CompoundStatement		44:8:1668:1668	3431022	0					
ANR	3431218	ExpressionStatement	ASSERT ( ! m_auth_info . LookupExpr ( ATTR_SEC_USER ) )	1971:4:59143:59193	3431022	0	True				
ANR	3431219	CallExpression	ASSERT ( ! m_auth_info . LookupExpr ( ATTR_SEC_USER ) )		3431022	0					
ANR	3431220	Callee	ASSERT		3431022	0					
ANR	3431221	Identifier	ASSERT		3431022	0					
ANR	3431222	ArgumentList	! m_auth_info . LookupExpr ( ATTR_SEC_USER )		3431022	1					
ANR	3431223	Argument	! m_auth_info . LookupExpr ( ATTR_SEC_USER )		3431022	0					
ANR	3431224	UnaryOperationExpression	! m_auth_info . LookupExpr ( ATTR_SEC_USER )		3431022	0					
ANR	3431225	UnaryOperator	!		3431022	0					
ANR	3431226	CallExpression	m_auth_info . LookupExpr ( ATTR_SEC_USER )		3431022	1					
ANR	3431227	Callee	m_auth_info . LookupExpr		3431022	0					
ANR	3431228	MemberAccess	m_auth_info . LookupExpr		3431022	0					
ANR	3431229	Identifier	m_auth_info		3431022	0					
ANR	3431230	Identifier	LookupExpr		3431022	1					
ANR	3431231	ArgumentList	ATTR_SEC_USER		3431022	1					
ANR	3431232	Argument	ATTR_SEC_USER		3431022	0					
ANR	3431233	Identifier	ATTR_SEC_USER		3431022	0					
ANR	3431234	ExpressionStatement	"m_sec_man . sec_copy_attribute ( m_auth_info , post_auth_info , ATTR_SEC_TRIED_AUTHENTICATION )"	1973:3:59203:59293	3431022	10	True				
ANR	3431235	CallExpression	"m_sec_man . sec_copy_attribute ( m_auth_info , post_auth_info , ATTR_SEC_TRIED_AUTHENTICATION )"		3431022	0					
ANR	3431236	Callee	m_sec_man . sec_copy_attribute		3431022	0					
ANR	3431237	MemberAccess	m_sec_man . sec_copy_attribute		3431022	0					
ANR	3431238	Identifier	m_sec_man		3431022	0					
ANR	3431239	Identifier	sec_copy_attribute		3431022	1					
ANR	3431240	ArgumentList	m_auth_info		3431022	1					
ANR	3431241	Argument	m_auth_info		3431022	0					
ANR	3431242	Identifier	m_auth_info		3431022	0					
ANR	3431243	Argument	post_auth_info		3431022	1					
ANR	3431244	Identifier	post_auth_info		3431022	0					
ANR	3431245	Argument	ATTR_SEC_TRIED_AUTHENTICATION		3431022	2					
ANR	3431246	Identifier	ATTR_SEC_TRIED_AUTHENTICATION		3431022	0					
ANR	3431247	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3431022	11					
ANR	3431248	Condition	DebugFlags & D_FULLDEBUG	1975:7:59303:59326	3431022	0	True				
ANR	3431249	BitAndExpression	DebugFlags & D_FULLDEBUG		3431022	0		&			
ANR	3431250	Identifier	DebugFlags		3431022	0					
ANR	3431251	Identifier	D_FULLDEBUG		3431022	1					
ANR	3431252	CompoundStatement		51:33:1946:1946	3431022	1					
ANR	3431253	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: policy to be cached:\\n"" )"	1976:4:59335:59389	3431022	0	True				
ANR	3431254	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: policy to be cached:\\n"" )"		3431022	0					
ANR	3431255	Callee	dprintf		3431022	0					
ANR	3431256	Identifier	dprintf		3431022	0					
ANR	3431257	ArgumentList	D_SECURITY		3431022	1					
ANR	3431258	Argument	D_SECURITY		3431022	0					
ANR	3431259	Identifier	D_SECURITY		3431022	0					
ANR	3431260	Argument	"""SECMAN: policy to be cached:\\n"""		3431022	1					
ANR	3431261	PrimaryExpression	"""SECMAN: policy to be cached:\\n"""		3431022	0					
ANR	3431262	ExpressionStatement	m_auth_info . dPrint ( D_SECURITY )	1977:4:59395:59425	3431022	1	True				
ANR	3431263	CallExpression	m_auth_info . dPrint ( D_SECURITY )		3431022	0					
ANR	3431264	Callee	m_auth_info . dPrint		3431022	0					
ANR	3431265	MemberAccess	m_auth_info . dPrint		3431022	0					
ANR	3431266	Identifier	m_auth_info		3431022	0					
ANR	3431267	Identifier	dPrint		3431022	1					
ANR	3431268	ArgumentList	D_SECURITY		3431022	1					
ANR	3431269	Argument	D_SECURITY		3431022	0					
ANR	3431270	Identifier	D_SECURITY		3431022	0					
ANR	3431271	IdentifierDeclStatement	char * sesid = NULL ;	1980:3:59436:59454	3431022	12	True				
ANR	3431272	IdentifierDecl	* sesid = NULL		3431022	0					
ANR	3431273	IdentifierDeclType	char *		3431022	0					
ANR	3431274	Identifier	sesid		3431022	1					
ANR	3431275	AssignmentExpression	* sesid = NULL		3431022	2		=			
ANR	3431276	Identifier	NULL		3431022	0					
ANR	3431277	Identifier	NULL		3431022	1					
ANR	3431278	ExpressionStatement	"m_auth_info . LookupString ( ATTR_SEC_SID , & sesid )"	1981:3:59459:59505	3431022	13	True				
ANR	3431279	CallExpression	"m_auth_info . LookupString ( ATTR_SEC_SID , & sesid )"		3431022	0					
ANR	3431280	Callee	m_auth_info . LookupString		3431022	0					
ANR	3431281	MemberAccess	m_auth_info . LookupString		3431022	0					
ANR	3431282	Identifier	m_auth_info		3431022	0					
ANR	3431283	Identifier	LookupString		3431022	1					
ANR	3431284	ArgumentList	ATTR_SEC_SID		3431022	1					
ANR	3431285	Argument	ATTR_SEC_SID		3431022	0					
ANR	3431286	Identifier	ATTR_SEC_SID		3431022	0					
ANR	3431287	Argument	& sesid		3431022	1					
ANR	3431288	UnaryOperationExpression	& sesid		3431022	0					
ANR	3431289	UnaryOperator	&		3431022	0					
ANR	3431290	Identifier	sesid		3431022	1					
ANR	3431291	IfStatement	if ( sesid == NULL )		3431022	14					
ANR	3431292	Condition	sesid == NULL	1982:7:59514:59526	3431022	0	True				
ANR	3431293	EqualityExpression	sesid == NULL		3431022	0		==			
ANR	3431294	Identifier	sesid		3431022	0					
ANR	3431295	Identifier	NULL		3431022	1					
ANR	3431296	CompoundStatement		58:22:2146:2146	3431022	1					
ANR	3431297	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: session id is NULL, failing\\n"" )"	1983:4:59535:59594	3431022	0	True				
ANR	3431298	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: session id is NULL, failing\\n"" )"		3431022	0					
ANR	3431299	Callee	dprintf		3431022	0					
ANR	3431300	Identifier	dprintf		3431022	0					
ANR	3431301	ArgumentList	D_ALWAYS		3431022	1					
ANR	3431302	Argument	D_ALWAYS		3431022	0					
ANR	3431303	Identifier	D_ALWAYS		3431022	0					
ANR	3431304	Argument	"""SECMAN: session id is NULL, failing\\n"""		3431022	1					
ANR	3431305	PrimaryExpression	"""SECMAN: session id is NULL, failing\\n"""		3431022	0					
ANR	3431306	ExpressionStatement	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_ATTRIBUTE_MISSING , ""Failed to lookup session id."" )"	1984:4:59600:59695	3431022	1	True				
ANR	3431307	CallExpression	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_ATTRIBUTE_MISSING , ""Failed to lookup session id."" )"		3431022	0					
ANR	3431308	Callee	m_errstack -> push		3431022	0					
ANR	3431309	PtrMemberAccess	m_errstack -> push		3431022	0					
ANR	3431310	Identifier	m_errstack		3431022	0					
ANR	3431311	Identifier	push		3431022	1					
ANR	3431312	ArgumentList	"""SECMAN"""		3431022	1					
ANR	3431313	Argument	"""SECMAN"""		3431022	0					
ANR	3431314	PrimaryExpression	"""SECMAN"""		3431022	0					
ANR	3431315	Argument	SECMAN_ERR_ATTRIBUTE_MISSING		3431022	1					
ANR	3431316	Identifier	SECMAN_ERR_ATTRIBUTE_MISSING		3431022	0					
ANR	3431317	Argument	"""Failed to lookup session id."""		3431022	2					
ANR	3431318	PrimaryExpression	"""Failed to lookup session id."""		3431022	0					
ANR	3431319	ReturnStatement	return StartCommandFailed ;	1986:4:59701:59726	3431022	2	True				
ANR	3431320	Identifier	StartCommandFailed		3431022	0					
ANR	3431321	IdentifierDeclStatement	char * cmd_list = NULL ;	1989:3:59737:59758	3431022	15	True				
ANR	3431322	IdentifierDecl	* cmd_list = NULL		3431022	0					
ANR	3431323	IdentifierDeclType	char *		3431022	0					
ANR	3431324	Identifier	cmd_list		3431022	1					
ANR	3431325	AssignmentExpression	* cmd_list = NULL		3431022	2		=			
ANR	3431326	Identifier	NULL		3431022	0					
ANR	3431327	Identifier	NULL		3431022	1					
ANR	3431328	ExpressionStatement	"m_auth_info . LookupString ( ATTR_SEC_VALID_COMMANDS , & cmd_list )"	1990:3:59763:59823	3431022	16	True				
ANR	3431329	CallExpression	"m_auth_info . LookupString ( ATTR_SEC_VALID_COMMANDS , & cmd_list )"		3431022	0					
ANR	3431330	Callee	m_auth_info . LookupString		3431022	0					
ANR	3431331	MemberAccess	m_auth_info . LookupString		3431022	0					
ANR	3431332	Identifier	m_auth_info		3431022	0					
ANR	3431333	Identifier	LookupString		3431022	1					
ANR	3431334	ArgumentList	ATTR_SEC_VALID_COMMANDS		3431022	1					
ANR	3431335	Argument	ATTR_SEC_VALID_COMMANDS		3431022	0					
ANR	3431336	Identifier	ATTR_SEC_VALID_COMMANDS		3431022	0					
ANR	3431337	Argument	& cmd_list		3431022	1					
ANR	3431338	UnaryOperationExpression	& cmd_list		3431022	0					
ANR	3431339	UnaryOperator	&		3431022	0					
ANR	3431340	Identifier	cmd_list		3431022	1					
ANR	3431341	IfStatement	if ( cmd_list == NULL )		3431022	17					
ANR	3431342	Condition	cmd_list == NULL	1991:7:59832:59847	3431022	0	True				
ANR	3431343	EqualityExpression	cmd_list == NULL		3431022	0		==			
ANR	3431344	Identifier	cmd_list		3431022	0					
ANR	3431345	Identifier	NULL		3431022	1					
ANR	3431346	CompoundStatement		67:25:2467:2467	3431022	1					
ANR	3431347	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: valid commands is NULL, failing\\n"" )"	1992:4:59856:59919	3431022	0	True				
ANR	3431348	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: valid commands is NULL, failing\\n"" )"		3431022	0					
ANR	3431349	Callee	dprintf		3431022	0					
ANR	3431350	Identifier	dprintf		3431022	0					
ANR	3431351	ArgumentList	D_ALWAYS		3431022	1					
ANR	3431352	Argument	D_ALWAYS		3431022	0					
ANR	3431353	Identifier	D_ALWAYS		3431022	0					
ANR	3431354	Argument	"""SECMAN: valid commands is NULL, failing\\n"""		3431022	1					
ANR	3431355	PrimaryExpression	"""SECMAN: valid commands is NULL, failing\\n"""		3431022	0					
ANR	3431356	ExpressionStatement	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_ATTRIBUTE_MISSING , ""Protocol Failure: Unable to lookup valid commands."" )"	1993:4:59925:60042	3431022	1	True				
ANR	3431357	CallExpression	"m_errstack -> push ( ""SECMAN"" , SECMAN_ERR_ATTRIBUTE_MISSING , ""Protocol Failure: Unable to lookup valid commands."" )"		3431022	0					
ANR	3431358	Callee	m_errstack -> push		3431022	0					
ANR	3431359	PtrMemberAccess	m_errstack -> push		3431022	0					
ANR	3431360	Identifier	m_errstack		3431022	0					
ANR	3431361	Identifier	push		3431022	1					
ANR	3431362	ArgumentList	"""SECMAN"""		3431022	1					
ANR	3431363	Argument	"""SECMAN"""		3431022	0					
ANR	3431364	PrimaryExpression	"""SECMAN"""		3431022	0					
ANR	3431365	Argument	SECMAN_ERR_ATTRIBUTE_MISSING		3431022	1					
ANR	3431366	Identifier	SECMAN_ERR_ATTRIBUTE_MISSING		3431022	0					
ANR	3431367	Argument	"""Protocol Failure: Unable to lookup valid commands."""		3431022	2					
ANR	3431368	PrimaryExpression	"""Protocol Failure: Unable to lookup valid commands."""		3431022	0					
ANR	3431369	Statement	delete	1995:4:60048:60053	3431022	2	True				
ANR	3431370	ExpressionStatement	sesid	1995:11:60055:60060	3431022	3	True				
ANR	3431371	Identifier	sesid		3431022	0					
ANR	3431372	ReturnStatement	return StartCommandFailed ;	1996:4:60066:60091	3431022	4	True				
ANR	3431373	Identifier	StartCommandFailed		3431022	0					
ANR	3431374	ExpressionStatement	ASSERT ( m_enc_key == NULL )	2000:3:60103:60129	3431022	18	True				
ANR	3431375	CallExpression	ASSERT ( m_enc_key == NULL )		3431022	0					
ANR	3431376	Callee	ASSERT		3431022	0					
ANR	3431377	Identifier	ASSERT		3431022	0					
ANR	3431378	ArgumentList	m_enc_key == NULL		3431022	1					
ANR	3431379	Argument	m_enc_key == NULL		3431022	0					
ANR	3431380	EqualityExpression	m_enc_key == NULL		3431022	0		==			
ANR	3431381	Identifier	m_enc_key		3431022	0					
ANR	3431382	Identifier	NULL		3431022	1					
ANR	3431383	IdentifierDeclStatement	char * dur = NULL ;	2004:3:60171:60187	3431022	19	True				
ANR	3431384	IdentifierDecl	* dur = NULL		3431022	0					
ANR	3431385	IdentifierDeclType	char *		3431022	0					
ANR	3431386	Identifier	dur		3431022	1					
ANR	3431387	AssignmentExpression	* dur = NULL		3431022	2		=			
ANR	3431388	Identifier	NULL		3431022	0					
ANR	3431389	Identifier	NULL		3431022	1					
ANR	3431390	ExpressionStatement	"m_auth_info . LookupString ( ATTR_SEC_SESSION_DURATION , & dur )"	2005:3:60192:60249	3431022	20	True				
ANR	3431391	CallExpression	"m_auth_info . LookupString ( ATTR_SEC_SESSION_DURATION , & dur )"		3431022	0					
ANR	3431392	Callee	m_auth_info . LookupString		3431022	0					
ANR	3431393	MemberAccess	m_auth_info . LookupString		3431022	0					
ANR	3431394	Identifier	m_auth_info		3431022	0					
ANR	3431395	Identifier	LookupString		3431022	1					
ANR	3431396	ArgumentList	ATTR_SEC_SESSION_DURATION		3431022	1					
ANR	3431397	Argument	ATTR_SEC_SESSION_DURATION		3431022	0					
ANR	3431398	Identifier	ATTR_SEC_SESSION_DURATION		3431022	0					
ANR	3431399	Argument	& dur		3431022	1					
ANR	3431400	UnaryOperationExpression	& dur		3431022	0					
ANR	3431401	UnaryOperator	&		3431022	0					
ANR	3431402	Identifier	dur		3431022	1					
ANR	3431403	IdentifierDeclStatement	int expiration_time = 0 ;	2007:3:60255:60278	3431022	21	True				
ANR	3431404	IdentifierDecl	expiration_time = 0		3431022	0					
ANR	3431405	IdentifierDeclType	int		3431022	0					
ANR	3431406	Identifier	expiration_time		3431022	1					
ANR	3431407	AssignmentExpression	expiration_time = 0		3431022	2		=			
ANR	3431408	Identifier	expiration_time		3431022	0					
ANR	3431409	PrimaryExpression	0		3431022	1					
ANR	3431410	IdentifierDeclStatement	time_t now = time ( 0 ) ;	2008:3:60283:60303	3431022	22	True				
ANR	3431411	IdentifierDecl	now = time ( 0 )		3431022	0					
ANR	3431412	IdentifierDeclType	time_t		3431022	0					
ANR	3431413	Identifier	now		3431022	1					
ANR	3431414	AssignmentExpression	now = time ( 0 )		3431022	2		=			
ANR	3431415	Identifier	now		3431022	0					
ANR	3431416	CallExpression	time ( 0 )		3431022	1					
ANR	3431417	Callee	time		3431022	0					
ANR	3431418	Identifier	time		3431022	0					
ANR	3431419	ArgumentList	0		3431022	1					
ANR	3431420	Argument	0		3431022	0					
ANR	3431421	PrimaryExpression	0		3431022	0					
ANR	3431422	IfStatement	if ( dur )		3431022	23					
ANR	3431423	Condition	dur	2009:7:60312:60314	3431022	0	True				
ANR	3431424	Identifier	dur		3431022	0					
ANR	3431425	CompoundStatement		85:13:2935:2935	3431022	1					
ANR	3431426	ExpressionStatement	expiration_time = now + atoi ( dur )	2010:4:60324:60357	3431022	0	True				
ANR	3431427	AssignmentExpression	expiration_time = now + atoi ( dur )		3431022	0		=			
ANR	3431428	Identifier	expiration_time		3431022	0					
ANR	3431429	AdditiveExpression	now + atoi ( dur )		3431022	1		+			
ANR	3431430	Identifier	now		3431022	0					
ANR	3431431	CallExpression	atoi ( dur )		3431022	1					
ANR	3431432	Callee	atoi		3431022	0					
ANR	3431433	Identifier	atoi		3431022	0					
ANR	3431434	ArgumentList	dur		3431022	1					
ANR	3431435	Argument	dur		3431022	0					
ANR	3431436	Identifier	dur		3431022	0					
ANR	3431437	IdentifierDeclStatement	int session_lease = 0 ;	2013:3:60368:60389	3431022	24	True				
ANR	3431438	IdentifierDecl	session_lease = 0		3431022	0					
ANR	3431439	IdentifierDeclType	int		3431022	0					
ANR	3431440	Identifier	session_lease		3431022	1					
ANR	3431441	AssignmentExpression	session_lease = 0		3431022	2		=			
ANR	3431442	Identifier	session_lease		3431022	0					
ANR	3431443	PrimaryExpression	0		3431022	1					
ANR	3431444	ExpressionStatement	"m_auth_info . LookupInteger ( ATTR_SEC_SESSION_LEASE , session_lease )"	2014:3:60394:60459	3431022	25	True				
ANR	3431445	CallExpression	"m_auth_info . LookupInteger ( ATTR_SEC_SESSION_LEASE , session_lease )"		3431022	0					
ANR	3431446	Callee	m_auth_info . LookupInteger		3431022	0					
ANR	3431447	MemberAccess	m_auth_info . LookupInteger		3431022	0					
ANR	3431448	Identifier	m_auth_info		3431022	0					
ANR	3431449	Identifier	LookupInteger		3431022	1					
ANR	3431450	ArgumentList	ATTR_SEC_SESSION_LEASE		3431022	1					
ANR	3431451	Argument	ATTR_SEC_SESSION_LEASE		3431022	0					
ANR	3431452	Identifier	ATTR_SEC_SESSION_LEASE		3431022	0					
ANR	3431453	Argument	session_lease		3431022	1					
ANR	3431454	Identifier	session_lease		3431022	0					
ANR	3431455	IdentifierDeclStatement	condor_sockaddr peer_addr = m_sock -> peer_addr ( ) ;	2018:3:60537:60584	3431022	26	True				
ANR	3431456	IdentifierDecl	peer_addr = m_sock -> peer_addr ( )		3431022	0					
ANR	3431457	IdentifierDeclType	condor_sockaddr		3431022	0					
ANR	3431458	Identifier	peer_addr		3431022	1					
ANR	3431459	AssignmentExpression	peer_addr = m_sock -> peer_addr ( )		3431022	2		=			
ANR	3431460	Identifier	peer_addr		3431022	0					
ANR	3431461	CallExpression	m_sock -> peer_addr ( )		3431022	1					
ANR	3431462	Callee	m_sock -> peer_addr		3431022	0					
ANR	3431463	PtrMemberAccess	m_sock -> peer_addr		3431022	0					
ANR	3431464	Identifier	m_sock		3431022	0					
ANR	3431465	Identifier	peer_addr		3431022	1					
ANR	3431466	ArgumentList			3431022	1					
ANR	3431467	IdentifierDeclStatement	"KeyCacheEntry tmp_key ( sesid , & peer_addr , m_private_key , & m_auth_info , expiration_time , session_lease ) ;"	2019:3:60589:60714	3431022	27	True				
ANR	3431468	IdentifierDecl	"tmp_key ( sesid , & peer_addr , m_private_key , & m_auth_info , expiration_time , session_lease )"		3431022	0					
ANR	3431469	IdentifierDeclType	KeyCacheEntry		3431022	0					
ANR	3431470	Identifier	tmp_key		3431022	1					
ANR	3431471	Expression	"sesid , & peer_addr , m_private_key , & m_auth_info , expiration_time , session_lease"		3431022	2					
ANR	3431472	Identifier	sesid		3431022	0					
ANR	3431473	Expression	"& peer_addr , m_private_key , & m_auth_info , expiration_time , session_lease"		3431022	1					
ANR	3431474	UnaryOperationExpression	& peer_addr		3431022	0					
ANR	3431475	UnaryOperator	&		3431022	0					
ANR	3431476	Identifier	peer_addr		3431022	1					
ANR	3431477	Expression	"m_private_key , & m_auth_info , expiration_time , session_lease"		3431022	1					
ANR	3431478	Identifier	m_private_key		3431022	0					
ANR	3431479	Expression	"& m_auth_info , expiration_time , session_lease"		3431022	1					
ANR	3431480	UnaryOperationExpression	& m_auth_info		3431022	0					
ANR	3431481	UnaryOperator	&		3431022	0					
ANR	3431482	Identifier	m_auth_info		3431022	1					
ANR	3431483	Expression	"expiration_time , session_lease"		3431022	1					
ANR	3431484	Identifier	expiration_time		3431022	0					
ANR	3431485	Identifier	session_lease		3431022	1					
ANR	3431486	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: added session %s to cache for %s seconds (%ds lease).\\n"" , sesid , dur , session_lease )"	2022:3:60720:60834	3431022	28	True				
ANR	3431487	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: added session %s to cache for %s seconds (%ds lease).\\n"" , sesid , dur , session_lease )"		3431022	0					
ANR	3431488	Callee	dprintf		3431022	0					
ANR	3431489	Identifier	dprintf		3431022	0					
ANR	3431490	ArgumentList	D_SECURITY		3431022	1					
ANR	3431491	Argument	D_SECURITY		3431022	0					
ANR	3431492	Identifier	D_SECURITY		3431022	0					
ANR	3431493	Argument	"""SECMAN: added session %s to cache for %s seconds (%ds lease).\\n"""		3431022	1					
ANR	3431494	PrimaryExpression	"""SECMAN: added session %s to cache for %s seconds (%ds lease).\\n"""		3431022	0					
ANR	3431495	Argument	sesid		3431022	2					
ANR	3431496	Identifier	sesid		3431022	0					
ANR	3431497	Argument	dur		3431022	3					
ANR	3431498	Identifier	dur		3431022	0					
ANR	3431499	Argument	session_lease		3431022	4					
ANR	3431500	Identifier	session_lease		3431022	0					
ANR	3431501	IfStatement	if ( dur )		3431022	29					
ANR	3431502	Condition	dur	2024:16:60853:60855	3431022	0	True				
ANR	3431503	Identifier	dur		3431022	0					
ANR	3431504	CompoundStatement		100:21:3475:3475	3431022	1					
ANR	3431505	ExpressionStatement	free ( dur )	2025:16:60876:60885	3431022	0	True				
ANR	3431506	CallExpression	free ( dur )		3431022	0					
ANR	3431507	Callee	free		3431022	0					
ANR	3431508	Identifier	free		3431022	0					
ANR	3431509	ArgumentList	dur		3431022	1					
ANR	3431510	Argument	dur		3431022	0					
ANR	3431511	Identifier	dur		3431022	0					
ANR	3431512	ExpressionStatement	dur = NULL	2026:4:60891:60901	3431022	1	True				
ANR	3431513	AssignmentExpression	dur = NULL		3431022	0		=			
ANR	3431514	Identifier	dur		3431022	0					
ANR	3431515	Identifier	NULL		3431022	1					
ANR	3431516	ExpressionStatement	m_sec_man . session_cache -> insert ( tmp_key )	2030:3:60954:60994	3431022	30	True				
ANR	3431517	CallExpression	m_sec_man . session_cache -> insert ( tmp_key )		3431022	0					
ANR	3431518	Callee	m_sec_man . session_cache -> insert		3431022	0					
ANR	3431519	PtrMemberAccess	m_sec_man . session_cache -> insert		3431022	0					
ANR	3431520	MemberAccess	m_sec_man . session_cache		3431022	0					
ANR	3431521	Identifier	m_sec_man		3431022	0					
ANR	3431522	Identifier	session_cache		3431022	1					
ANR	3431523	Identifier	insert		3431022	1					
ANR	3431524	ArgumentList	tmp_key		3431022	1					
ANR	3431525	Argument	tmp_key		3431022	0					
ANR	3431526	Identifier	tmp_key		3431022	0					
ANR	3431527	IdentifierDeclStatement	StringList coms ( cmd_list ) ;	2036:3:61133:61158	3431022	31	True				
ANR	3431528	IdentifierDecl	coms ( cmd_list )		3431022	0					
ANR	3431529	IdentifierDeclType	StringList		3431022	0					
ANR	3431530	Identifier	coms		3431022	1					
ANR	3431531	Identifier	cmd_list		3431022	2					
ANR	3431532	IdentifierDeclStatement	char * p ;	2037:3:61163:61170	3431022	32	True				
ANR	3431533	IdentifierDecl	* p		3431022	0					
ANR	3431534	IdentifierDeclType	char *		3431022	0					
ANR	3431535	Identifier	p		3431022	1					
ANR	3431536	ExpressionStatement	coms . rewind ( )	2039:3:61176:61189	3431022	33	True				
ANR	3431537	CallExpression	coms . rewind ( )		3431022	0					
ANR	3431538	Callee	coms . rewind		3431022	0					
ANR	3431539	MemberAccess	coms . rewind		3431022	0					
ANR	3431540	Identifier	coms		3431022	0					
ANR	3431541	Identifier	rewind		3431022	1					
ANR	3431542	ArgumentList			3431022	1					
ANR	3431543	WhileStatement	while ( ( p = coms . next ( ) ) )		3431022	34					
ANR	3431544	Condition	p = coms . next ( )	2040:11:61202:61218	3431022	0	True				
ANR	3431545	AssignmentExpression	p = coms . next ( )		3431022	0		=			
ANR	3431546	Identifier	p		3431022	0					
ANR	3431547	CallExpression	coms . next ( )		3431022	1					
ANR	3431548	Callee	coms . next		3431022	0					
ANR	3431549	MemberAccess	coms . next		3431022	0					
ANR	3431550	Identifier	coms		3431022	0					
ANR	3431551	Identifier	next		3431022	1					
ANR	3431552	ArgumentList			3431022	1					
ANR	3431553	CompoundStatement		117:4:3845:3860	3431022	1					
ANR	3431554	IdentifierDeclStatement	MyString keybuf ;	2041:4:61228:61243	3431022	0	True				
ANR	3431555	IdentifierDecl	keybuf		3431022	0					
ANR	3431556	IdentifierDeclType	MyString		3431022	0					
ANR	3431557	Identifier	keybuf		3431022	1					
ANR	3431558	ExpressionStatement	"keybuf . sprintf ( ""{%s,<%s>}"" , m_sock -> get_connect_addr ( ) , p )"	2042:4:61249:61308	3431022	1	True				
ANR	3431559	CallExpression	"keybuf . sprintf ( ""{%s,<%s>}"" , m_sock -> get_connect_addr ( ) , p )"		3431022	0					
ANR	3431560	Callee	keybuf . sprintf		3431022	0					
ANR	3431561	MemberAccess	keybuf . sprintf		3431022	0					
ANR	3431562	Identifier	keybuf		3431022	0					
ANR	3431563	Identifier	sprintf		3431022	1					
ANR	3431564	ArgumentList	"""{%s,<%s>}"""		3431022	1					
ANR	3431565	Argument	"""{%s,<%s>}"""		3431022	0					
ANR	3431566	PrimaryExpression	"""{%s,<%s>}"""		3431022	0					
ANR	3431567	Argument	m_sock -> get_connect_addr ( )		3431022	1					
ANR	3431568	CallExpression	m_sock -> get_connect_addr ( )		3431022	0					
ANR	3431569	Callee	m_sock -> get_connect_addr		3431022	0					
ANR	3431570	PtrMemberAccess	m_sock -> get_connect_addr		3431022	0					
ANR	3431571	Identifier	m_sock		3431022	0					
ANR	3431572	Identifier	get_connect_addr		3431022	1					
ANR	3431573	ArgumentList			3431022	1					
ANR	3431574	Argument	p		3431022	2					
ANR	3431575	Identifier	p		3431022	0					
ANR	3431576	IfStatement	"if ( m_sec_man . command_map -> insert ( keybuf , sesid ) == 0 )"		3431022	2					
ANR	3431577	Condition	"m_sec_man . command_map -> insert ( keybuf , sesid ) == 0"	2045:8:61369:61417	3431022	0	True				
ANR	3431578	EqualityExpression	"m_sec_man . command_map -> insert ( keybuf , sesid ) == 0"		3431022	0		==			
ANR	3431579	CallExpression	"m_sec_man . command_map -> insert ( keybuf , sesid )"		3431022	0					
ANR	3431580	Callee	m_sec_man . command_map -> insert		3431022	0					
ANR	3431581	PtrMemberAccess	m_sec_man . command_map -> insert		3431022	0					
ANR	3431582	MemberAccess	m_sec_man . command_map		3431022	0					
ANR	3431583	Identifier	m_sec_man		3431022	0					
ANR	3431584	Identifier	command_map		3431022	1					
ANR	3431585	Identifier	insert		3431022	1					
ANR	3431586	ArgumentList	keybuf		3431022	1					
ANR	3431587	Argument	keybuf		3431022	0					
ANR	3431588	Identifier	keybuf		3431022	0					
ANR	3431589	Argument	sesid		3431022	1					
ANR	3431590	Identifier	sesid		3431022	0					
ANR	3431591	PrimaryExpression	0		3431022	1					
ANR	3431592	CompoundStatement		121:59:4037:4037	3431022	1					
ANR	3431593	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3431022	0					
ANR	3431594	Condition	DebugFlags & D_FULLDEBUG	2047:9:61447:61470	3431022	0	True				
ANR	3431595	BitAndExpression	DebugFlags & D_FULLDEBUG		3431022	0		&			
ANR	3431596	Identifier	DebugFlags		3431022	0					
ANR	3431597	Identifier	D_FULLDEBUG		3431022	1					
ANR	3431598	CompoundStatement		123:35:4090:4090	3431022	1					
ANR	3431599	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: command %s mapped to session %s.\\n"" , keybuf . Value ( ) , sesid )"	2048:6:61481:61570	3431022	0	True				
ANR	3431600	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: command %s mapped to session %s.\\n"" , keybuf . Value ( ) , sesid )"		3431022	0					
ANR	3431601	Callee	dprintf		3431022	0					
ANR	3431602	Identifier	dprintf		3431022	0					
ANR	3431603	ArgumentList	D_SECURITY		3431022	1					
ANR	3431604	Argument	D_SECURITY		3431022	0					
ANR	3431605	Identifier	D_SECURITY		3431022	0					
ANR	3431606	Argument	"""SECMAN: command %s mapped to session %s.\\n"""		3431022	1					
ANR	3431607	PrimaryExpression	"""SECMAN: command %s mapped to session %s.\\n"""		3431022	0					
ANR	3431608	Argument	keybuf . Value ( )		3431022	2					
ANR	3431609	CallExpression	keybuf . Value ( )		3431022	0					
ANR	3431610	Callee	keybuf . Value		3431022	0					
ANR	3431611	MemberAccess	keybuf . Value		3431022	0					
ANR	3431612	Identifier	keybuf		3431022	0					
ANR	3431613	Identifier	Value		3431022	1					
ANR	3431614	ArgumentList			3431022	1					
ANR	3431615	Argument	sesid		3431022	3					
ANR	3431616	Identifier	sesid		3431022	0					
ANR	3431617	ElseStatement	else		3431022	0					
ANR	3431618	CompoundStatement		126:11:4207:4207	3431022	0					
ANR	3431619	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: command %s NOT mapped (insert failed!)\\n"" , keybuf . Value ( ) )"	2051:5:61597:61683	3431022	0	True				
ANR	3431620	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: command %s NOT mapped (insert failed!)\\n"" , keybuf . Value ( ) )"		3431022	0					
ANR	3431621	Callee	dprintf		3431022	0					
ANR	3431622	Identifier	dprintf		3431022	0					
ANR	3431623	ArgumentList	D_ALWAYS		3431022	1					
ANR	3431624	Argument	D_ALWAYS		3431022	0					
ANR	3431625	Identifier	D_ALWAYS		3431022	0					
ANR	3431626	Argument	"""SECMAN: command %s NOT mapped (insert failed!)\\n"""		3431022	1					
ANR	3431627	PrimaryExpression	"""SECMAN: command %s NOT mapped (insert failed!)\\n"""		3431022	0					
ANR	3431628	Argument	keybuf . Value ( )		3431022	2					
ANR	3431629	CallExpression	keybuf . Value ( )		3431022	0					
ANR	3431630	Callee	keybuf . Value		3431022	0					
ANR	3431631	MemberAccess	keybuf . Value		3431022	0					
ANR	3431632	Identifier	keybuf		3431022	0					
ANR	3431633	Identifier	Value		3431022	1					
ANR	3431634	ArgumentList			3431022	1					
ANR	3431635	ExpressionStatement	free ( sesid )	2055:3:61703:61716	3431022	35	True				
ANR	3431636	CallExpression	free ( sesid )		3431022	0					
ANR	3431637	Callee	free		3431022	0					
ANR	3431638	Identifier	free		3431022	0					
ANR	3431639	ArgumentList	sesid		3431022	1					
ANR	3431640	Argument	sesid		3431022	0					
ANR	3431641	Identifier	sesid		3431022	0					
ANR	3431642	ExpressionStatement	free ( cmd_list )	2056:12:61730:61746	3431022	36	True				
ANR	3431643	CallExpression	free ( cmd_list )		3431022	0					
ANR	3431644	Callee	free		3431022	0					
ANR	3431645	Identifier	free		3431022	0					
ANR	3431646	ArgumentList	cmd_list		3431022	1					
ANR	3431647	Argument	cmd_list		3431022	0					
ANR	3431648	Identifier	cmd_list		3431022	0					
ANR	3431649	IfStatement	if ( ! m_new_session && m_have_session )		3431022	1					
ANR	3431650	Condition	! m_new_session && m_have_session	2062:5:61802:61833	3431022	0	True				
ANR	3431651	AndExpression	! m_new_session && m_have_session		3431022	0		&&			
ANR	3431652	UnaryOperationExpression	! m_new_session		3431022	0					
ANR	3431653	UnaryOperator	!		3431022	0					
ANR	3431654	Identifier	m_new_session		3431022	1					
ANR	3431655	Identifier	m_have_session		3431022	1					
ANR	3431656	CompoundStatement		148:2:4731:4764	3431022	1					
ANR	3431657	IdentifierDeclStatement	char * fqu = NULL ;	2063:2:61841:61857	3431022	0	True				
ANR	3431658	IdentifierDecl	* fqu = NULL		3431022	0					
ANR	3431659	IdentifierDeclType	char *		3431022	0					
ANR	3431660	Identifier	fqu		3431022	1					
ANR	3431661	AssignmentExpression	* fqu = NULL		3431022	2		=			
ANR	3431662	Identifier	NULL		3431022	0					
ANR	3431663	Identifier	NULL		3431022	1					
ANR	3431664	IfStatement	"if ( m_auth_info . LookupString ( ATTR_SEC_USER , & fqu ) && fqu )"		3431022	1					
ANR	3431665	Condition	"m_auth_info . LookupString ( ATTR_SEC_USER , & fqu ) && fqu"	2064:6:61865:61915	3431022	0	True				
ANR	3431666	AndExpression	"m_auth_info . LookupString ( ATTR_SEC_USER , & fqu ) && fqu"		3431022	0		&&			
ANR	3431667	CallExpression	"m_auth_info . LookupString ( ATTR_SEC_USER , & fqu )"		3431022	0					
ANR	3431668	Callee	m_auth_info . LookupString		3431022	0					
ANR	3431669	MemberAccess	m_auth_info . LookupString		3431022	0					
ANR	3431670	Identifier	m_auth_info		3431022	0					
ANR	3431671	Identifier	LookupString		3431022	1					
ANR	3431672	ArgumentList	ATTR_SEC_USER		3431022	1					
ANR	3431673	Argument	ATTR_SEC_USER		3431022	0					
ANR	3431674	Identifier	ATTR_SEC_USER		3431022	0					
ANR	3431675	Argument	& fqu		3431022	1					
ANR	3431676	UnaryOperationExpression	& fqu		3431022	0					
ANR	3431677	UnaryOperator	&		3431022	0					
ANR	3431678	Identifier	fqu		3431022	1					
ANR	3431679	Identifier	fqu		3431022	1					
ANR	3431680	CompoundStatement		140:60:4536:4536	3431022	1					
ANR	3431681	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3431022	0					
ANR	3431682	Condition	DebugFlags & D_FULLDEBUG	2065:7:61928:61951	3431022	0	True				
ANR	3431683	BitAndExpression	DebugFlags & D_FULLDEBUG		3431022	0		&			
ANR	3431684	Identifier	DebugFlags		3431022	0					
ANR	3431685	Identifier	D_FULLDEBUG		3431022	1					
ANR	3431686	CompoundStatement		141:34:4572:4572	3431022	1					
ANR	3431687	ExpressionStatement	"dprintf ( D_SECURITY , ""Getting authenticated user from cached session: %s\\n"" , fqu )"	2066:4:61961:62043	3431022	0	True				
ANR	3431688	CallExpression	"dprintf ( D_SECURITY , ""Getting authenticated user from cached session: %s\\n"" , fqu )"		3431022	0					
ANR	3431689	Callee	dprintf		3431022	0					
ANR	3431690	Identifier	dprintf		3431022	0					
ANR	3431691	ArgumentList	D_SECURITY		3431022	1					
ANR	3431692	Argument	D_SECURITY		3431022	0					
ANR	3431693	Identifier	D_SECURITY		3431022	0					
ANR	3431694	Argument	"""Getting authenticated user from cached session: %s\\n"""		3431022	1					
ANR	3431695	PrimaryExpression	"""Getting authenticated user from cached session: %s\\n"""		3431022	0					
ANR	3431696	Argument	fqu		3431022	2					
ANR	3431697	Identifier	fqu		3431022	0					
ANR	3431698	ExpressionStatement	m_sock -> setFullyQualifiedUser ( fqu )	2068:3:62053:62089	3431022	1	True				
ANR	3431699	CallExpression	m_sock -> setFullyQualifiedUser ( fqu )		3431022	0					
ANR	3431700	Callee	m_sock -> setFullyQualifiedUser		3431022	0					
ANR	3431701	PtrMemberAccess	m_sock -> setFullyQualifiedUser		3431022	0					
ANR	3431702	Identifier	m_sock		3431022	0					
ANR	3431703	Identifier	setFullyQualifiedUser		3431022	1					
ANR	3431704	ArgumentList	fqu		3431022	1					
ANR	3431705	Argument	fqu		3431022	0					
ANR	3431706	Identifier	fqu		3431022	0					
ANR	3431707	ExpressionStatement	free ( fqu )	2069:3:62094:62105	3431022	2	True				
ANR	3431708	CallExpression	free ( fqu )		3431022	0					
ANR	3431709	Callee	free		3431022	0					
ANR	3431710	Identifier	free		3431022	0					
ANR	3431711	ArgumentList	fqu		3431022	1					
ANR	3431712	Argument	fqu		3431022	0					
ANR	3431713	Identifier	fqu		3431022	0					
ANR	3431714	IdentifierDeclStatement	bool tried_authentication = false ;	2072:2:62114:62147	3431022	2	True				
ANR	3431715	IdentifierDecl	tried_authentication = false		3431022	0					
ANR	3431716	IdentifierDeclType	bool		3431022	0					
ANR	3431717	Identifier	tried_authentication		3431022	1					
ANR	3431718	AssignmentExpression	tried_authentication = false		3431022	2		=			
ANR	3431719	Identifier	false		3431022	0					
ANR	3431720	Identifier	false		3431022	1					
ANR	3431721	ExpressionStatement	"m_auth_info . LookupBool ( ATTR_SEC_TRIED_AUTHENTICATION , tried_authentication )"	2073:2:62151:62225	3431022	3	True				
ANR	3431722	CallExpression	"m_auth_info . LookupBool ( ATTR_SEC_TRIED_AUTHENTICATION , tried_authentication )"		3431022	0					
ANR	3431723	Callee	m_auth_info . LookupBool		3431022	0					
ANR	3431724	MemberAccess	m_auth_info . LookupBool		3431022	0					
ANR	3431725	Identifier	m_auth_info		3431022	0					
ANR	3431726	Identifier	LookupBool		3431022	1					
ANR	3431727	ArgumentList	ATTR_SEC_TRIED_AUTHENTICATION		3431022	1					
ANR	3431728	Argument	ATTR_SEC_TRIED_AUTHENTICATION		3431022	0					
ANR	3431729	Identifier	ATTR_SEC_TRIED_AUTHENTICATION		3431022	0					
ANR	3431730	Argument	tried_authentication		3431022	1					
ANR	3431731	Identifier	tried_authentication		3431022	0					
ANR	3431732	ExpressionStatement	m_sock -> setTriedAuthentication ( tried_authentication )	2074:2:62229:62281	3431022	4	True				
ANR	3431733	CallExpression	m_sock -> setTriedAuthentication ( tried_authentication )		3431022	0					
ANR	3431734	Callee	m_sock -> setTriedAuthentication		3431022	0					
ANR	3431735	PtrMemberAccess	m_sock -> setTriedAuthentication		3431022	0					
ANR	3431736	Identifier	m_sock		3431022	0					
ANR	3431737	Identifier	setTriedAuthentication		3431022	1					
ANR	3431738	ArgumentList	tried_authentication		3431022	1					
ANR	3431739	Argument	tried_authentication		3431022	0					
ANR	3431740	Identifier	tried_authentication		3431022	0					
ANR	3431741	ExpressionStatement	m_sock -> encode ( )	2077:1:62288:62304	3431022	2	True				
ANR	3431742	CallExpression	m_sock -> encode ( )		3431022	0					
ANR	3431743	Callee	m_sock -> encode		3431022	0					
ANR	3431744	PtrMemberAccess	m_sock -> encode		3431022	0					
ANR	3431745	Identifier	m_sock		3431022	0					
ANR	3431746	Identifier	encode		3431022	1					
ANR	3431747	ArgumentList			3431022	1					
ANR	3431748	ExpressionStatement	m_sock -> allow_one_empty_message ( )	2078:1:62307:62340	3431022	3	True				
ANR	3431749	CallExpression	m_sock -> allow_one_empty_message ( )		3431022	0					
ANR	3431750	Callee	m_sock -> allow_one_empty_message		3431022	0					
ANR	3431751	PtrMemberAccess	m_sock -> allow_one_empty_message		3431022	0					
ANR	3431752	Identifier	m_sock		3431022	0					
ANR	3431753	Identifier	allow_one_empty_message		3431022	1					
ANR	3431754	ArgumentList			3431022	1					
ANR	3431755	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: startCommand succeeded.\\n"" )"	2079:1:62343:62401	3431022	4	True				
ANR	3431756	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: startCommand succeeded.\\n"" )"		3431022	0					
ANR	3431757	Callee	dprintf		3431022	0					
ANR	3431758	Identifier	dprintf		3431022	0					
ANR	3431759	ArgumentList	D_SECURITY		3431022	1					
ANR	3431760	Argument	D_SECURITY		3431022	0					
ANR	3431761	Identifier	D_SECURITY		3431022	0					
ANR	3431762	Argument	"""SECMAN: startCommand succeeded.\\n"""		3431022	1					
ANR	3431763	PrimaryExpression	"""SECMAN: startCommand succeeded.\\n"""		3431022	0					
ANR	3431764	ReturnStatement	return StartCommandSucceeded ;	2081:1:62405:62433	3431022	5	True				
ANR	3431765	Identifier	StartCommandSucceeded		3431022	0					
ANR	3431766	ReturnType	StartCommandResult		3431022	1					
ANR	3431767	Identifier	SecManStartCommand :: receivePostAuthInfo_inner		3431022	2					
ANR	3431768	ParameterList			3431022	3					
ANR	3431769	CFGEntryNode	ENTRY		3431022		True				
ANR	3431770	CFGExitNode	EXIT		3431022		True				
ANR	3431771	Symbol	dur		3431022						
ANR	3431772	Symbol	m_sec_man . session_cache		3431022						
ANR	3431773	Symbol	m_new_session		3431022						
ANR	3431774	Symbol	m_sec_man		3431022						
ANR	3431775	Symbol	SECMAN_ERR_ATTRIBUTE_MISSING		3431022						
ANR	3431776	Symbol	StartCommandFailed		3431022						
ANR	3431777	Symbol	m_sock -> peer_addr		3431022						
ANR	3431778	Symbol	fqu		3431022						
ANR	3431779	Symbol	& sesid		3431022						
ANR	3431780	Symbol	post_auth_info		3431022						
ANR	3431781	Symbol	ATTR_SEC_MY_REMOTE_USER_NAME		3431022						
ANR	3431782	Symbol	tmp_key		3431022						
ANR	3431783	Symbol	& cmd_list		3431022						
ANR	3431784	Symbol	m_is_tcp		3431022						
ANR	3431785	Symbol	& dur		3431022						
ANR	3431786	Symbol	ATTR_SEC_VALID_COMMANDS		3431022						
ANR	3431787	Symbol	NULL		3431022						
ANR	3431788	Symbol	peer_addr		3431022						
ANR	3431789	Symbol	coms . next		3431022						
ANR	3431790	Symbol	* m_sock		3431022						
ANR	3431791	Symbol	m_sock		3431022						
ANR	3431792	Symbol	ATTR_SEC_SID		3431022						
ANR	3431793	Symbol	WaitForSocketCallback		3431022						
ANR	3431794	Symbol	DebugFlags		3431022						
ANR	3431795	Symbol	D_FULLDEBUG		3431022						
ANR	3431796	Symbol	ATTR_SEC_SESSION_LEASE		3431022						
ANR	3431797	Symbol	m_nonblocking		3431022						
ANR	3431798	Symbol	cmd_list		3431022						
ANR	3431799	Symbol	m_sock -> getFullyQualifiedUser		3431022						
ANR	3431800	Symbol	StartCommandSucceeded		3431022						
ANR	3431801	Symbol	keybuf . Value		3431022						
ANR	3431802	Symbol	& fqu		3431022						
ANR	3431803	Symbol	sesid		3431022						
ANR	3431804	Symbol	m_auth_info		3431022						
ANR	3431805	Symbol	coms		3431022						
ANR	3431806	Symbol	m_auth_info . LookupExpr		3431022						
ANR	3431807	Symbol	* m_sec_man . command_map		3431022						
ANR	3431808	Symbol	D_SECURITY		3431022						
ANR	3431809	Symbol	ATTR_SEC_TRIED_AUTHENTICATION		3431022						
ANR	3431810	Symbol	m_have_session		3431022						
ANR	3431811	Symbol	m_auth_info . LookupString		3431022						
ANR	3431812	Symbol	m_sock -> end_of_message		3431022						
ANR	3431813	Symbol	post_auth_info . initFromStream		3431022						
ANR	3431814	Symbol	m_sock -> get_connect_addr		3431022						
ANR	3431815	Symbol	m_errstack		3431022						
ANR	3431816	Symbol	tried_authentication		3431022						
ANR	3431817	Symbol	m_sock -> readReady		3431022						
ANR	3431818	Symbol	now		3431022						
ANR	3431819	Symbol	m_sec_man . command_map -> insert		3431022						
ANR	3431820	Symbol	atoi		3431022						
ANR	3431821	Symbol	ATTR_SEC_SESSION_DURATION		3431022						
ANR	3431822	Symbol	expiration_time		3431022						
ANR	3431823	Symbol	D_ALWAYS		3431022						
ANR	3431824	Symbol	* m_sec_man		3431022						
ANR	3431825	Symbol	false		3431022						
ANR	3431826	Symbol	keybuf		3431022						
ANR	3431827	Symbol	m_sec_man . command_map		3431022						
ANR	3431828	Symbol	ATTR_SEC_USER		3431022						
ANR	3431829	Symbol	p		3431022						
ANR	3431830	Symbol	m_enc_key		3431022						
ANR	3431831	Symbol	session_lease		3431022						
ANR	3431832	Symbol	time		3431022						
ANR	3431833	Symbol	SECMAN_ERR_COMMUNICATIONS_ERROR		3431022						
ANR	3431834	Function	SecManStartCommand :: DoTCPAuth_inner	2084:0:62438:65371							
ANR	3431835	FunctionDef	SecManStartCommand :: DoTCPAuth_inner ()		3431834	0					
ANR	3431836	CompoundStatement		2086:0:62495:65371	3431834	0					
ANR	3431837	ExpressionStatement	ASSERT ( ! m_already_tried_TCP_auth )	2087:1:62498:62533	3431834	0	True				
ANR	3431838	CallExpression	ASSERT ( ! m_already_tried_TCP_auth )		3431834	0					
ANR	3431839	Callee	ASSERT		3431834	0					
ANR	3431840	Identifier	ASSERT		3431834	0					
ANR	3431841	ArgumentList	! m_already_tried_TCP_auth		3431834	1					
ANR	3431842	Argument	! m_already_tried_TCP_auth		3431834	0					
ANR	3431843	UnaryOperationExpression	! m_already_tried_TCP_auth		3431834	0					
ANR	3431844	UnaryOperator	!		3431834	0					
ANR	3431845	Identifier	m_already_tried_TCP_auth		3431834	1					
ANR	3431846	ExpressionStatement	m_already_tried_TCP_auth = true	2088:1:62536:62567	3431834	1	True				
ANR	3431847	AssignmentExpression	m_already_tried_TCP_auth = true		3431834	0		=			
ANR	3431848	Identifier	m_already_tried_TCP_auth		3431834	0					
ANR	3431849	Identifier	true		3431834	1					
ANR	3431850	IfStatement	if ( m_nonblocking )		3431834	2					
ANR	3431851	Condition	m_nonblocking	2090:4:62574:62586	3431834	0	True				
ANR	3431852	Identifier	m_nonblocking		3431834	0					
ANR	3431853	CompoundStatement		11:2:314:355	3431834	1					
ANR	3431854	ExpressionStatement	incrementPendingSockets ( )	2093:2:62712:62737	3431834	0	True				
ANR	3431855	CallExpression	incrementPendingSockets ( )		3431834	0					
ANR	3431856	Callee	incrementPendingSockets		3431834	0					
ANR	3431857	Identifier	incrementPendingSockets		3431834	0					
ANR	3431858	ArgumentList			3431834	1					
ANR	3431859	IdentifierDeclStatement	classy_counted_ptr < SecManStartCommand > sc ;	2096:2:62810:62851	3431834	1	True				
ANR	3431860	IdentifierDecl	sc		3431834	0					
ANR	3431861	IdentifierDeclType	classy_counted_ptr < SecManStartCommand >		3431834	0					
ANR	3431862	Identifier	sc		3431834	1					
ANR	3431863	IfStatement	"if ( m_sec_man . tcp_auth_in_progress -> lookup ( m_session_key , sc ) == 0 )"		3431834	2					
ANR	3431864	Condition	"m_sec_man . tcp_auth_in_progress -> lookup ( m_session_key , sc ) == 0"	2097:5:62858:62918	3431834	0	True				
ANR	3431865	EqualityExpression	"m_sec_man . tcp_auth_in_progress -> lookup ( m_session_key , sc ) == 0"		3431834	0		==			
ANR	3431866	CallExpression	"m_sec_man . tcp_auth_in_progress -> lookup ( m_session_key , sc )"		3431834	0					
ANR	3431867	Callee	m_sec_man . tcp_auth_in_progress -> lookup		3431834	0					
ANR	3431868	PtrMemberAccess	m_sec_man . tcp_auth_in_progress -> lookup		3431834	0					
ANR	3431869	MemberAccess	m_sec_man . tcp_auth_in_progress		3431834	0					
ANR	3431870	Identifier	m_sec_man		3431834	0					
ANR	3431871	Identifier	tcp_auth_in_progress		3431834	1					
ANR	3431872	Identifier	lookup		3431834	1					
ANR	3431873	ArgumentList	m_session_key		3431834	1					
ANR	3431874	Argument	m_session_key		3431834	0					
ANR	3431875	Identifier	m_session_key		3431834	0					
ANR	3431876	Argument	sc		3431834	1					
ANR	3431877	Identifier	sc		3431834	0					
ANR	3431878	PrimaryExpression	0		3431834	1					
ANR	3431879	CompoundStatement		12:68:425:425	3431834	1					
ANR	3431880	IfStatement	if ( m_nonblocking && ! m_callback_fn )		3431834	0					
ANR	3431881	Condition	m_nonblocking && ! m_callback_fn	2103:6:63121:63151	3431834	0	True				
ANR	3431882	AndExpression	m_nonblocking && ! m_callback_fn		3431834	0		&&			
ANR	3431883	Identifier	m_nonblocking		3431834	0					
ANR	3431884	UnaryOperationExpression	! m_callback_fn		3431834	1					
ANR	3431885	UnaryOperator	!		3431834	0					
ANR	3431886	Identifier	m_callback_fn		3431834	1					
ANR	3431887	CompoundStatement		18:39:658:658	3431834	1					
ANR	3431888	ReturnStatement	return StartCommandWouldBlock ;	2108:4:63347:63376	3431834	0	True				
ANR	3431889	Identifier	StartCommandWouldBlock		3431834	0					
ANR	3431890	ExpressionStatement	sc -> m_waiting_for_tcp_auth . Append ( this )	2111:3:63387:63426	3431834	1	True				
ANR	3431891	CallExpression	sc -> m_waiting_for_tcp_auth . Append ( this )		3431834	0					
ANR	3431892	Callee	sc -> m_waiting_for_tcp_auth . Append		3431834	0					
ANR	3431893	MemberAccess	sc -> m_waiting_for_tcp_auth . Append		3431834	0					
ANR	3431894	PtrMemberAccess	sc -> m_waiting_for_tcp_auth		3431834	0					
ANR	3431895	Identifier	sc		3431834	0					
ANR	3431896	Identifier	m_waiting_for_tcp_auth		3431834	1					
ANR	3431897	Identifier	Append		3431834	1					
ANR	3431898	ArgumentList	this		3431834	1					
ANR	3431899	Argument	this		3431834	0					
ANR	3431900	Identifier	this		3431834	0					
ANR	3431901	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3431834	2					
ANR	3431902	Condition	DebugFlags & D_FULLDEBUG	2113:6:63435:63458	3431834	0	True				
ANR	3431903	BitAndExpression	DebugFlags & D_FULLDEBUG		3431834	0		&			
ANR	3431904	Identifier	DebugFlags		3431834	0					
ANR	3431905	Identifier	D_FULLDEBUG		3431834	1					
ANR	3431906	CompoundStatement		28:32:965:965	3431834	1					
ANR	3431907	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: waiting for pending session %s to be ready\\n"" , m_session_key . Value ( ) )"	2114:4:63467:63577	3431834	0	True				
ANR	3431908	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: waiting for pending session %s to be ready\\n"" , m_session_key . Value ( ) )"		3431834	0					
ANR	3431909	Callee	dprintf		3431834	0					
ANR	3431910	Identifier	dprintf		3431834	0					
ANR	3431911	ArgumentList	D_SECURITY		3431834	1					
ANR	3431912	Argument	D_SECURITY		3431834	0					
ANR	3431913	Identifier	D_SECURITY		3431834	0					
ANR	3431914	Argument	"""SECMAN: waiting for pending session %s to be ready\\n"""		3431834	1					
ANR	3431915	PrimaryExpression	"""SECMAN: waiting for pending session %s to be ready\\n"""		3431834	0					
ANR	3431916	Argument	m_session_key . Value ( )		3431834	2					
ANR	3431917	CallExpression	m_session_key . Value ( )		3431834	0					
ANR	3431918	Callee	m_session_key . Value		3431834	0					
ANR	3431919	MemberAccess	m_session_key . Value		3431834	0					
ANR	3431920	Identifier	m_session_key		3431834	0					
ANR	3431921	Identifier	Value		3431834	1					
ANR	3431922	ArgumentList			3431834	1					
ANR	3431923	ReturnStatement	return StartCommandInProgress ;	2119:3:63588:63617	3431834	3	True				
ANR	3431924	Identifier	StartCommandInProgress		3431834	0					
ANR	3431925	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3431834	3					
ANR	3431926	Condition	DebugFlags & D_FULLDEBUG	2123:5:63632:63655	3431834	0	True				
ANR	3431927	BitAndExpression	DebugFlags & D_FULLDEBUG		3431834	0		&			
ANR	3431928	Identifier	DebugFlags		3431834	0					
ANR	3431929	Identifier	D_FULLDEBUG		3431834	1					
ANR	3431930	CompoundStatement		38:31:1162:1162	3431834	1					
ANR	3431931	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: need to start a session via TCP\\n"" )"	2124:2:63662:63728	3431834	0	True				
ANR	3431932	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: need to start a session via TCP\\n"" )"		3431834	0					
ANR	3431933	Callee	dprintf		3431834	0					
ANR	3431934	Identifier	dprintf		3431834	0					
ANR	3431935	ArgumentList	D_SECURITY		3431834	1					
ANR	3431936	Argument	D_SECURITY		3431834	0					
ANR	3431937	Identifier	D_SECURITY		3431834	0					
ANR	3431938	Argument	"""SECMAN: need to start a session via TCP\\n"""		3431834	1					
ANR	3431939	PrimaryExpression	"""SECMAN: need to start a session via TCP\\n"""		3431834	0					
ANR	3431940	Statement	ReliSock	2128:1:63775:63782	3431834	4	True				
ANR	3431941	Statement	*	2128:10:63784:63784	3431834	5	True				
ANR	3431942	Statement	tcp_auth_sock	2128:11:63785:63797	3431834	6	True				
ANR	3431943	Statement	=	2128:25:63799:63799	3431834	7	True				
ANR	3431944	Statement	new	2128:27:63801:63803	3431834	8	True				
ANR	3431945	ExpressionStatement	ReliSock	2128:31:63805:63813	3431834	9	True				
ANR	3431946	Identifier	ReliSock		3431834	0					
ANR	3431947	ExpressionStatement	ASSERT ( tcp_auth_sock )	2130:1:63817:63838	3431834	10	True				
ANR	3431948	CallExpression	ASSERT ( tcp_auth_sock )		3431834	0					
ANR	3431949	Callee	ASSERT		3431834	0					
ANR	3431950	Identifier	ASSERT		3431834	0					
ANR	3431951	ArgumentList	tcp_auth_sock		3431834	1					
ANR	3431952	Argument	tcp_auth_sock		3431834	0					
ANR	3431953	Identifier	tcp_auth_sock		3431834	0					
ANR	3431954	IdentifierDeclStatement	"int TCP_SOCK_TIMEOUT = param_integer ( ""SEC_TCP_SESSION_TIMEOUT"" , 20 ) ;"	2133:1:63887:63954	3431834	11	True				
ANR	3431955	IdentifierDecl	"TCP_SOCK_TIMEOUT = param_integer ( ""SEC_TCP_SESSION_TIMEOUT"" , 20 )"		3431834	0					
ANR	3431956	IdentifierDeclType	int		3431834	0					
ANR	3431957	Identifier	TCP_SOCK_TIMEOUT		3431834	1					
ANR	3431958	AssignmentExpression	"TCP_SOCK_TIMEOUT = param_integer ( ""SEC_TCP_SESSION_TIMEOUT"" , 20 )"		3431834	2		=			
ANR	3431959	Identifier	TCP_SOCK_TIMEOUT		3431834	0					
ANR	3431960	CallExpression	"param_integer ( ""SEC_TCP_SESSION_TIMEOUT"" , 20 )"		3431834	1					
ANR	3431961	Callee	param_integer		3431834	0					
ANR	3431962	Identifier	param_integer		3431834	0					
ANR	3431963	ArgumentList	"""SEC_TCP_SESSION_TIMEOUT"""		3431834	1					
ANR	3431964	Argument	"""SEC_TCP_SESSION_TIMEOUT"""		3431834	0					
ANR	3431965	PrimaryExpression	"""SEC_TCP_SESSION_TIMEOUT"""		3431834	0					
ANR	3431966	Argument	20		3431834	1					
ANR	3431967	PrimaryExpression	20		3431834	0					
ANR	3431968	ExpressionStatement	tcp_auth_sock -> timeout ( TCP_SOCK_TIMEOUT )	2134:1:63957:63997	3431834	12	True				
ANR	3431969	CallExpression	tcp_auth_sock -> timeout ( TCP_SOCK_TIMEOUT )		3431834	0					
ANR	3431970	Callee	tcp_auth_sock -> timeout		3431834	0					
ANR	3431971	PtrMemberAccess	tcp_auth_sock -> timeout		3431834	0					
ANR	3431972	Identifier	tcp_auth_sock		3431834	0					
ANR	3431973	Identifier	timeout		3431834	1					
ANR	3431974	ArgumentList	TCP_SOCK_TIMEOUT		3431834	1					
ANR	3431975	Argument	TCP_SOCK_TIMEOUT		3431834	0					
ANR	3431976	Identifier	TCP_SOCK_TIMEOUT		3431834	0					
ANR	3431977	IdentifierDeclStatement	MyString tcp_addr = m_sock -> get_connect_addr ( ) ;	2137:1:64087:64133	3431834	13	True				
ANR	3431978	IdentifierDecl	tcp_addr = m_sock -> get_connect_addr ( )		3431834	0					
ANR	3431979	IdentifierDeclType	MyString		3431834	0					
ANR	3431980	Identifier	tcp_addr		3431834	1					
ANR	3431981	AssignmentExpression	tcp_addr = m_sock -> get_connect_addr ( )		3431834	2		=			
ANR	3431982	Identifier	tcp_addr		3431834	0					
ANR	3431983	CallExpression	m_sock -> get_connect_addr ( )		3431834	1					
ANR	3431984	Callee	m_sock -> get_connect_addr		3431834	0					
ANR	3431985	PtrMemberAccess	m_sock -> get_connect_addr		3431834	0					
ANR	3431986	Identifier	m_sock		3431834	0					
ANR	3431987	Identifier	get_connect_addr		3431834	1					
ANR	3431988	ArgumentList			3431834	1					
ANR	3431989	IfStatement	"if ( ! tcp_auth_sock -> connect ( tcp_addr . Value ( ) , 0 , m_nonblocking ) )"		3431834	14					
ANR	3431990	Condition	"! tcp_auth_sock -> connect ( tcp_addr . Value ( ) , 0 , m_nonblocking )"	2138:5:64140:64196	3431834	0	True				
ANR	3431991	UnaryOperationExpression	"! tcp_auth_sock -> connect ( tcp_addr . Value ( ) , 0 , m_nonblocking )"		3431834	0					
ANR	3431992	UnaryOperator	!		3431834	0					
ANR	3431993	CallExpression	"tcp_auth_sock -> connect ( tcp_addr . Value ( ) , 0 , m_nonblocking )"		3431834	1					
ANR	3431994	Callee	tcp_auth_sock -> connect		3431834	0					
ANR	3431995	PtrMemberAccess	tcp_auth_sock -> connect		3431834	0					
ANR	3431996	Identifier	tcp_auth_sock		3431834	0					
ANR	3431997	Identifier	connect		3431834	1					
ANR	3431998	ArgumentList	tcp_addr . Value ( )		3431834	1					
ANR	3431999	Argument	tcp_addr . Value ( )		3431834	0					
ANR	3432000	CallExpression	tcp_addr . Value ( )		3431834	0					
ANR	3432001	Callee	tcp_addr . Value		3431834	0					
ANR	3432002	MemberAccess	tcp_addr . Value		3431834	0					
ANR	3432003	Identifier	tcp_addr		3431834	0					
ANR	3432004	Identifier	Value		3431834	1					
ANR	3432005	ArgumentList			3431834	1					
ANR	3432006	Argument	0		3431834	1					
ANR	3432007	PrimaryExpression	0		3431834	0					
ANR	3432008	Argument	m_nonblocking		3431834	2					
ANR	3432009	Identifier	m_nonblocking		3431834	0					
ANR	3432010	CompoundStatement		53:64:1703:1703	3431834	1					
ANR	3432011	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: couldn't connect via TCP to %s, failing...\\n"" , tcp_addr . Value ( ) )"	2139:2:64203:64298	3431834	0	True				
ANR	3432012	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: couldn't connect via TCP to %s, failing...\\n"" , tcp_addr . Value ( ) )"		3431834	0					
ANR	3432013	Callee	dprintf		3431834	0					
ANR	3432014	Identifier	dprintf		3431834	0					
ANR	3432015	ArgumentList	D_SECURITY		3431834	1					
ANR	3432016	Argument	D_SECURITY		3431834	0					
ANR	3432017	Identifier	D_SECURITY		3431834	0					
ANR	3432018	Argument	"""SECMAN: couldn't connect via TCP to %s, failing...\\n"""		3431834	1					
ANR	3432019	PrimaryExpression	"""SECMAN: couldn't connect via TCP to %s, failing...\\n"""		3431834	0					
ANR	3432020	Argument	tcp_addr . Value ( )		3431834	2					
ANR	3432021	CallExpression	tcp_addr . Value ( )		3431834	0					
ANR	3432022	Callee	tcp_addr . Value		3431834	0					
ANR	3432023	MemberAccess	tcp_addr . Value		3431834	0					
ANR	3432024	Identifier	tcp_addr		3431834	0					
ANR	3432025	Identifier	Value		3431834	1					
ANR	3432026	ArgumentList			3431834	1					
ANR	3432027	ExpressionStatement	"m_errstack -> pushf ( ""SECMAN"" , SECMAN_ERR_CONNECT_FAILED , ""TCP auth connection to %s failed."" , tcp_addr . Value ( ) )"	2140:2:64302:64419	3431834	1	True				
ANR	3432028	CallExpression	"m_errstack -> pushf ( ""SECMAN"" , SECMAN_ERR_CONNECT_FAILED , ""TCP auth connection to %s failed."" , tcp_addr . Value ( ) )"		3431834	0					
ANR	3432029	Callee	m_errstack -> pushf		3431834	0					
ANR	3432030	PtrMemberAccess	m_errstack -> pushf		3431834	0					
ANR	3432031	Identifier	m_errstack		3431834	0					
ANR	3432032	Identifier	pushf		3431834	1					
ANR	3432033	ArgumentList	"""SECMAN"""		3431834	1					
ANR	3432034	Argument	"""SECMAN"""		3431834	0					
ANR	3432035	PrimaryExpression	"""SECMAN"""		3431834	0					
ANR	3432036	Argument	SECMAN_ERR_CONNECT_FAILED		3431834	1					
ANR	3432037	Identifier	SECMAN_ERR_CONNECT_FAILED		3431834	0					
ANR	3432038	Argument	"""TCP auth connection to %s failed."""		3431834	2					
ANR	3432039	PrimaryExpression	"""TCP auth connection to %s failed."""		3431834	0					
ANR	3432040	Argument	tcp_addr . Value ( )		3431834	3					
ANR	3432041	CallExpression	tcp_addr . Value ( )		3431834	0					
ANR	3432042	Callee	tcp_addr . Value		3431834	0					
ANR	3432043	MemberAccess	tcp_addr . Value		3431834	0					
ANR	3432044	Identifier	tcp_addr		3431834	0					
ANR	3432045	Identifier	Value		3431834	1					
ANR	3432046	ArgumentList			3431834	1					
ANR	3432047	Statement	delete	2142:2:64423:64428	3431834	2	True				
ANR	3432048	ExpressionStatement	tcp_auth_sock	2142:9:64430:64443	3431834	3	True				
ANR	3432049	Identifier	tcp_auth_sock		3431834	0					
ANR	3432050	ReturnStatement	return StartCommandFailed ;	2143:2:64447:64472	3431834	4	True				
ANR	3432051	Identifier	StartCommandFailed		3431834	0					
ANR	3432052	ExpressionStatement	"SecMan :: tcp_auth_in_progress -> insert ( m_session_key , this )"	2149:1:64625:64681	3431834	15	True				
ANR	3432053	CallExpression	"SecMan :: tcp_auth_in_progress -> insert ( m_session_key , this )"		3431834	0					
ANR	3432054	Callee	SecMan :: tcp_auth_in_progress -> insert		3431834	0					
ANR	3432055	PtrMemberAccess	SecMan :: tcp_auth_in_progress -> insert		3431834	0					
ANR	3432056	Identifier	SecMan :: tcp_auth_in_progress		3431834	0					
ANR	3432057	Identifier	insert		3431834	1					
ANR	3432058	ArgumentList	m_session_key		3431834	1					
ANR	3432059	Argument	m_session_key		3431834	0					
ANR	3432060	Identifier	m_session_key		3431834	0					
ANR	3432061	Argument	this		3431834	1					
ANR	3432062	Identifier	this		3431834	0					
ANR	3432063	ExpressionStatement	"m_tcp_auth_command = new SecManStartCommand ( DC_AUTHENTICATE , tcp_auth_sock , m_raw_protocol , m_errstack , m_cmd , m_nonblocking ? SecManStartCommand :: TCPAuthCallback : NULL , m_nonblocking ? this : NULL , m_nonblocking , m_cmd_description . Value ( ) , m_sec_session_id_hint . Value ( ) , & m_sec_man )"	2151:1:64685:64992	3431834	16	True				
ANR	3432064	AssignmentExpression	"m_tcp_auth_command = new SecManStartCommand ( DC_AUTHENTICATE , tcp_auth_sock , m_raw_protocol , m_errstack , m_cmd , m_nonblocking ? SecManStartCommand :: TCPAuthCallback : NULL , m_nonblocking ? this : NULL , m_nonblocking , m_cmd_description . Value ( ) , m_sec_session_id_hint . Value ( ) , & m_sec_man )"		3431834	0		=			
ANR	3432065	Identifier	m_tcp_auth_command		3431834	0					
ANR	3432066	Expression	"DC_AUTHENTICATE , tcp_auth_sock , m_raw_protocol , m_errstack , m_cmd , m_nonblocking ? SecManStartCommand :: TCPAuthCallback : NULL , m_nonblocking ? this : NULL , m_nonblocking , m_cmd_description . Value ( ) , m_sec_session_id_hint . Value ( ) , & m_sec_man"		3431834	1					
ANR	3432067	Identifier	DC_AUTHENTICATE		3431834	0					
ANR	3432068	Expression	"tcp_auth_sock , m_raw_protocol , m_errstack , m_cmd , m_nonblocking ? SecManStartCommand :: TCPAuthCallback : NULL , m_nonblocking ? this : NULL , m_nonblocking , m_cmd_description . Value ( ) , m_sec_session_id_hint . Value ( ) , & m_sec_man"		3431834	1					
ANR	3432069	Identifier	tcp_auth_sock		3431834	0					
ANR	3432070	Expression	"m_raw_protocol , m_errstack , m_cmd , m_nonblocking ? SecManStartCommand :: TCPAuthCallback : NULL , m_nonblocking ? this : NULL , m_nonblocking , m_cmd_description . Value ( ) , m_sec_session_id_hint . Value ( ) , & m_sec_man"		3431834	1					
ANR	3432071	Identifier	m_raw_protocol		3431834	0					
ANR	3432072	Expression	"m_errstack , m_cmd , m_nonblocking ? SecManStartCommand :: TCPAuthCallback : NULL , m_nonblocking ? this : NULL , m_nonblocking , m_cmd_description . Value ( ) , m_sec_session_id_hint . Value ( ) , & m_sec_man"		3431834	1					
ANR	3432073	Identifier	m_errstack		3431834	0					
ANR	3432074	Expression	"m_cmd , m_nonblocking ? SecManStartCommand :: TCPAuthCallback : NULL , m_nonblocking ? this : NULL , m_nonblocking , m_cmd_description . Value ( ) , m_sec_session_id_hint . Value ( ) , & m_sec_man"		3431834	1					
ANR	3432075	Identifier	m_cmd		3431834	0					
ANR	3432076	Expression	"m_nonblocking ? SecManStartCommand :: TCPAuthCallback : NULL , m_nonblocking ? this : NULL , m_nonblocking , m_cmd_description . Value ( ) , m_sec_session_id_hint . Value ( ) , & m_sec_man"		3431834	1					
ANR	3432077	ConditionalExpression	m_nonblocking ? SecManStartCommand :: TCPAuthCallback : NULL		3431834	0					
ANR	3432078	Condition	m_nonblocking		3431834	0					
ANR	3432079	Identifier	m_nonblocking		3431834	0					
ANR	3432080	Identifier	SecManStartCommand :: TCPAuthCallback		3431834	1					
ANR	3432081	Identifier	NULL		3431834	2					
ANR	3432082	Expression	"m_nonblocking ? this : NULL , m_nonblocking , m_cmd_description . Value ( ) , m_sec_session_id_hint . Value ( ) , & m_sec_man"		3431834	1					
ANR	3432083	ConditionalExpression	m_nonblocking ? this : NULL		3431834	0					
ANR	3432084	Condition	m_nonblocking		3431834	0					
ANR	3432085	Identifier	m_nonblocking		3431834	0					
ANR	3432086	Identifier	this		3431834	1					
ANR	3432087	Identifier	NULL		3431834	2					
ANR	3432088	Expression	"m_nonblocking , m_cmd_description . Value ( ) , m_sec_session_id_hint . Value ( ) , & m_sec_man"		3431834	1					
ANR	3432089	Identifier	m_nonblocking		3431834	0					
ANR	3432090	Expression	"m_cmd_description . Value ( ) , m_sec_session_id_hint . Value ( ) , & m_sec_man"		3431834	1					
ANR	3432091	CallExpression	m_cmd_description . Value ( )		3431834	0					
ANR	3432092	Callee	m_cmd_description . Value		3431834	0					
ANR	3432093	MemberAccess	m_cmd_description . Value		3431834	0					
ANR	3432094	Identifier	m_cmd_description		3431834	0					
ANR	3432095	Identifier	Value		3431834	1					
ANR	3432096	ArgumentList			3431834	1					
ANR	3432097	Expression	"m_sec_session_id_hint . Value ( ) , & m_sec_man"		3431834	1					
ANR	3432098	CallExpression	m_sec_session_id_hint . Value ( )		3431834	0					
ANR	3432099	Callee	m_sec_session_id_hint . Value		3431834	0					
ANR	3432100	MemberAccess	m_sec_session_id_hint . Value		3431834	0					
ANR	3432101	Identifier	m_sec_session_id_hint		3431834	0					
ANR	3432102	Identifier	Value		3431834	1					
ANR	3432103	ArgumentList			3431834	1					
ANR	3432104	UnaryOperationExpression	& m_sec_man		3431834	1					
ANR	3432105	UnaryOperator	&		3431834	0					
ANR	3432106	Identifier	m_sec_man		3431834	1					
ANR	3432107	IdentifierDeclStatement	StartCommandResult auth_result = m_tcp_auth_command -> startCommand ( ) ;	2164:1:64996:65063	3431834	17	True				
ANR	3432108	IdentifierDecl	auth_result = m_tcp_auth_command -> startCommand ( )		3431834	0					
ANR	3432109	IdentifierDeclType	StartCommandResult		3431834	0					
ANR	3432110	Identifier	auth_result		3431834	1					
ANR	3432111	AssignmentExpression	auth_result = m_tcp_auth_command -> startCommand ( )		3431834	2		=			
ANR	3432112	Identifier	auth_result		3431834	0					
ANR	3432113	CallExpression	m_tcp_auth_command -> startCommand ( )		3431834	1					
ANR	3432114	Callee	m_tcp_auth_command -> startCommand		3431834	0					
ANR	3432115	PtrMemberAccess	m_tcp_auth_command -> startCommand		3431834	0					
ANR	3432116	Identifier	m_tcp_auth_command		3431834	0					
ANR	3432117	Identifier	startCommand		3431834	1					
ANR	3432118	ArgumentList			3431834	1					
ANR	3432119	IfStatement	if ( ! m_nonblocking )		3431834	18					
ANR	3432120	Condition	! m_nonblocking	2166:5:65071:65084	3431834	0	True				
ANR	3432121	UnaryOperationExpression	! m_nonblocking		3431834	0					
ANR	3432122	UnaryOperator	!		3431834	0					
ANR	3432123	Identifier	m_nonblocking		3431834	1					
ANR	3432124	CompoundStatement		81:22:2592:2592	3431834	1					
ANR	3432125	ReturnStatement	"return TCPAuthCallback_inner ( auth_result == StartCommandSucceeded , tcp_auth_sock ) ;"	2171:2:65244:65333	3431834	0	True				
ANR	3432126	CallExpression	"TCPAuthCallback_inner ( auth_result == StartCommandSucceeded , tcp_auth_sock )"		3431834	0					
ANR	3432127	Callee	TCPAuthCallback_inner		3431834	0					
ANR	3432128	Identifier	TCPAuthCallback_inner		3431834	0					
ANR	3432129	ArgumentList	auth_result == StartCommandSucceeded		3431834	1					
ANR	3432130	Argument	auth_result == StartCommandSucceeded		3431834	0					
ANR	3432131	EqualityExpression	auth_result == StartCommandSucceeded		3431834	0		==			
ANR	3432132	Identifier	auth_result		3431834	0					
ANR	3432133	Identifier	StartCommandSucceeded		3431834	1					
ANR	3432134	Argument	tcp_auth_sock		3431834	1					
ANR	3432135	Identifier	tcp_auth_sock		3431834	0					
ANR	3432136	ReturnStatement	return StartCommandInProgress ;	2176:1:65340:65369	3431834	19	True				
ANR	3432137	Identifier	StartCommandInProgress		3431834	0					
ANR	3432138	ReturnType	StartCommandResult		3431834	1					
ANR	3432139	Identifier	SecManStartCommand :: DoTCPAuth_inner		3431834	2					
ANR	3432140	ParameterList			3431834	3					
ANR	3432141	CFGEntryNode	ENTRY		3431834		True				
ANR	3432142	CFGExitNode	EXIT		3431834		True				
ANR	3432143	Symbol	m_session_key		3431834						
ANR	3432144	Symbol	m_sec_man		3431834						
ANR	3432145	Symbol	m_tcp_auth_command		3431834						
ANR	3432146	Symbol	m_raw_protocol		3431834						
ANR	3432147	Symbol	TCPAuthCallback_inner		3431834						
ANR	3432148	Symbol	m_sec_session_id_hint . Value		3431834						
ANR	3432149	Symbol	StartCommandFailed		3431834						
ANR	3432150	Symbol	* tcp_auth_sock		3431834						
ANR	3432151	Symbol	* sc		3431834						
ANR	3432152	Symbol	m_callback_fn		3431834						
ANR	3432153	Symbol	tcp_addr		3431834						
ANR	3432154	Symbol	m_sec_man . tcp_auth_in_progress -> lookup		3431834						
ANR	3432155	Symbol	& m_sec_man		3431834						
ANR	3432156	Symbol	m_cmd_description . Value		3431834						
ANR	3432157	Symbol	m_sec_man . tcp_auth_in_progress		3431834						
ANR	3432158	Symbol	SECMAN_ERR_CONNECT_FAILED		3431834						
ANR	3432159	Symbol	NULL		3431834						
ANR	3432160	Symbol	* m_tcp_auth_command		3431834						
ANR	3432161	Symbol	StartCommandInProgress		3431834						
ANR	3432162	Symbol	* m_sock		3431834						
ANR	3432163	Symbol	m_sock		3431834						
ANR	3432164	Symbol	this		3431834						
ANR	3432165	Symbol	D_FULLDEBUG		3431834						
ANR	3432166	Symbol	DebugFlags		3431834						
ANR	3432167	Symbol	m_cmd_description		3431834						
ANR	3432168	Symbol	m_sec_session_id_hint		3431834						
ANR	3432169	Symbol	m_nonblocking		3431834						
ANR	3432170	Symbol	StartCommandSucceeded		3431834						
ANR	3432171	Symbol	m_tcp_auth_command -> startCommand		3431834						
ANR	3432172	Symbol	TCP_SOCK_TIMEOUT		3431834						
ANR	3432173	Symbol	true		3431834						
ANR	3432174	Symbol	param_integer		3431834						
ANR	3432175	Symbol	tcp_addr . Value		3431834						
ANR	3432176	Symbol	StartCommandWouldBlock		3431834						
ANR	3432177	Symbol	DC_AUTHENTICATE		3431834						
ANR	3432178	Symbol	SecMan :: tcp_auth_in_progress		3431834						
ANR	3432179	Symbol	D_SECURITY		3431834						
ANR	3432180	Symbol	m_cmd		3431834						
ANR	3432181	Symbol	m_sock -> get_connect_addr		3431834						
ANR	3432182	Symbol	SecManStartCommand :: TCPAuthCallback		3431834						
ANR	3432183	Symbol	m_errstack		3431834						
ANR	3432184	Symbol	sc		3431834						
ANR	3432185	Symbol	m_session_key . Value		3431834						
ANR	3432186	Symbol	sc -> m_waiting_for_tcp_auth		3431834						
ANR	3432187	Symbol	auth_result		3431834						
ANR	3432188	Symbol	* m_sec_man		3431834						
ANR	3432189	Symbol	* m_sec_man . tcp_auth_in_progress		3431834						
ANR	3432190	Symbol	tcp_auth_sock		3431834						
ANR	3432191	Symbol	m_already_tried_TCP_auth		3431834						
ANR	3432192	Symbol	tcp_auth_sock -> connect		3431834						
ANR	3432193	DeclStmt									
ANR	3432194	Decl							classy_counted_ptr < SecManStartCommand >	classy_counted_ptr < SecManStartCommand >	self
ANR	3432195	Function	SecManStartCommand :: TCPAuthCallback_inner	2187:0:65634:67450							
ANR	3432196	FunctionDef	"SecManStartCommand :: TCPAuthCallback_inner (bool auth_succeeded , Sock * tcp_auth_sock)"		3432195	0					
ANR	3432197	CompoundStatement		2189:0:65739:67450	3432195	0					
ANR	3432198	ExpressionStatement	m_tcp_auth_command = NULL	2190:1:65742:65767	3432195	0	True				
ANR	3432199	AssignmentExpression	m_tcp_auth_command = NULL		3432195	0		=			
ANR	3432200	Identifier	m_tcp_auth_command		3432195	0					
ANR	3432201	Identifier	NULL		3432195	1					
ANR	3432202	ExpressionStatement	tcp_auth_sock -> end_of_message ( )	2193:1:65820:65851	3432195	1	True				
ANR	3432203	CallExpression	tcp_auth_sock -> end_of_message ( )		3432195	0					
ANR	3432204	Callee	tcp_auth_sock -> end_of_message		3432195	0					
ANR	3432205	PtrMemberAccess	tcp_auth_sock -> end_of_message		3432195	0					
ANR	3432206	Identifier	tcp_auth_sock		3432195	0					
ANR	3432207	Identifier	end_of_message		3432195	1					
ANR	3432208	ArgumentList			3432195	1					
ANR	3432209	ExpressionStatement	tcp_auth_sock -> close ( )	2194:1:65854:65876	3432195	2	True				
ANR	3432210	CallExpression	tcp_auth_sock -> close ( )		3432195	0					
ANR	3432211	Callee	tcp_auth_sock -> close		3432195	0					
ANR	3432212	PtrMemberAccess	tcp_auth_sock -> close		3432195	0					
ANR	3432213	Identifier	tcp_auth_sock		3432195	0					
ANR	3432214	Identifier	close		3432195	1					
ANR	3432215	ArgumentList			3432195	1					
ANR	3432216	Statement	delete	2195:1:65879:65884	3432195	3	True				
ANR	3432217	ExpressionStatement	tcp_auth_sock	2195:8:65886:65899	3432195	4	True				
ANR	3432218	Identifier	tcp_auth_sock		3432195	0					
ANR	3432219	ExpressionStatement	tcp_auth_sock = NULL	2196:1:65902:65922	3432195	5	True				
ANR	3432220	AssignmentExpression	tcp_auth_sock = NULL		3432195	0		=			
ANR	3432221	Identifier	tcp_auth_sock		3432195	0					
ANR	3432222	Identifier	NULL		3432195	1					
ANR	3432223	IdentifierDeclStatement	StartCommandResult rc ;	2198:1:65926:65947	3432195	6	True				
ANR	3432224	IdentifierDecl	rc		3432195	0					
ANR	3432225	IdentifierDeclType	StartCommandResult		3432195	0					
ANR	3432226	Identifier	rc		3432195	1					
ANR	3432227	IfStatement	if ( m_nonblocking && ! m_callback_fn )		3432195	7					
ANR	3432228	Condition	m_nonblocking && ! m_callback_fn	2200:4:65954:65984	3432195	0	True				
ANR	3432229	AndExpression	m_nonblocking && ! m_callback_fn		3432195	0		&&			
ANR	3432230	Identifier	m_nonblocking		3432195	0					
ANR	3432231	UnaryOperationExpression	! m_callback_fn		3432195	1					
ANR	3432232	UnaryOperator	!		3432195	0					
ANR	3432233	Identifier	m_callback_fn		3432195	1					
ANR	3432234	CompoundStatement		12:37:247:247	3432195	1					
ANR	3432235	ExpressionStatement	rc = StartCommandWouldBlock	2204:2:66160:66187	3432195	0	True				
ANR	3432236	AssignmentExpression	rc = StartCommandWouldBlock		3432195	0		=			
ANR	3432237	Identifier	rc		3432195	0					
ANR	3432238	Identifier	StartCommandWouldBlock		3432195	1					
ANR	3432239	ExpressionStatement	ASSERT ( m_sock == NULL )	2208:2:66282:66306	3432195	1	True				
ANR	3432240	CallExpression	ASSERT ( m_sock == NULL )		3432195	0					
ANR	3432241	Callee	ASSERT		3432195	0					
ANR	3432242	Identifier	ASSERT		3432195	0					
ANR	3432243	ArgumentList	m_sock == NULL		3432195	1					
ANR	3432244	Argument	m_sock == NULL		3432195	0					
ANR	3432245	EqualityExpression	m_sock == NULL		3432195	0		==			
ANR	3432246	Identifier	m_sock		3432195	0					
ANR	3432247	Identifier	NULL		3432195	1					
ANR	3432248	ElseStatement	else		3432195	0					
ANR	3432249	IfStatement	if ( ! auth_succeeded )		3432195	0					
ANR	3432250	Condition	! auth_succeeded	2210:10:66321:66335	3432195	0	True				
ANR	3432251	UnaryOperationExpression	! auth_succeeded		3432195	0					
ANR	3432252	UnaryOperator	!		3432195	0					
ANR	3432253	Identifier	auth_succeeded		3432195	1					
ANR	3432254	CompoundStatement		22:28:599:599	3432195	1					
ANR	3432255	Statement	dprintf	2211:2:66343:66349	3432195	0	True				
ANR	3432256	Statement	(	2211:10:66351:66351	3432195	1	True				
ANR	3432257	Statement	D_SECURITY	2211:12:66353:66362	3432195	2	True				
ANR	3432258	Statement	","	2211:22:66363:66363	3432195	3	True				
ANR	3432259	Statement	"""SECMAN: unable to create security session to %s via TCP, """	2212:6:66371:66429	3432195	4	True				
ANR	3432260	Statement	"""failing.\\n"""	2213:12:66443:66454	3432195	5	True				
ANR	3432261	Statement	","	2213:24:66455:66455	3432195	6	True				
ANR	3432262	Statement	m_sock	2213:26:66457:66462	3432195	7	True				
ANR	3432263	Statement	->	2213:32:66463:66464	3432195	8	True				
ANR	3432264	Statement	get_sinful_peer	2213:34:66465:66479	3432195	9	True				
ANR	3432265	Statement	(	2213:49:66480:66480	3432195	10	True				
ANR	3432266	Statement	)	2213:50:66481:66481	3432195	11	True				
ANR	3432267	Statement	)	2213:52:66483:66483	3432195	12	True				
ANR	3432268	ExpressionStatement		2213:53:66484:66484	3432195	13	True				
ANR	3432269	ExpressionStatement	"m_errstack -> pushf ( ""SECMAN"" , SECMAN_ERR_NO_SESSION , ""Failed to create security session to %s with TCP.\\n"" , m_sock -> get_sinful_peer ( ) )"	2214:2:66488:66658	3432195	14	True				
ANR	3432270	CallExpression	"m_errstack -> pushf ( ""SECMAN"" , SECMAN_ERR_NO_SESSION , ""Failed to create security session to %s with TCP.\\n"" , m_sock -> get_sinful_peer ( ) )"		3432195	0					
ANR	3432271	Callee	m_errstack -> pushf		3432195	0					
ANR	3432272	PtrMemberAccess	m_errstack -> pushf		3432195	0					
ANR	3432273	Identifier	m_errstack		3432195	0					
ANR	3432274	Identifier	pushf		3432195	1					
ANR	3432275	ArgumentList	"""SECMAN"""		3432195	1					
ANR	3432276	Argument	"""SECMAN"""		3432195	0					
ANR	3432277	PrimaryExpression	"""SECMAN"""		3432195	0					
ANR	3432278	Argument	SECMAN_ERR_NO_SESSION		3432195	1					
ANR	3432279	Identifier	SECMAN_ERR_NO_SESSION		3432195	0					
ANR	3432280	Argument	"""Failed to create security session to %s with TCP.\\n"""		3432195	2					
ANR	3432281	PrimaryExpression	"""Failed to create security session to %s with TCP.\\n"""		3432195	0					
ANR	3432282	Argument	m_sock -> get_sinful_peer ( )		3432195	3					
ANR	3432283	CallExpression	m_sock -> get_sinful_peer ( )		3432195	0					
ANR	3432284	Callee	m_sock -> get_sinful_peer		3432195	0					
ANR	3432285	PtrMemberAccess	m_sock -> get_sinful_peer		3432195	0					
ANR	3432286	Identifier	m_sock		3432195	0					
ANR	3432287	Identifier	get_sinful_peer		3432195	1					
ANR	3432288	ArgumentList			3432195	1					
ANR	3432289	ExpressionStatement	rc = StartCommandFailed	2217:2:66662:66685	3432195	15	True				
ANR	3432290	AssignmentExpression	rc = StartCommandFailed		3432195	0		=			
ANR	3432291	Identifier	rc		3432195	0					
ANR	3432292	Identifier	StartCommandFailed		3432195	1					
ANR	3432293	ElseStatement	else		3432195	0					
ANR	3432294	CompoundStatement		31:6:956:956	3432195	0					
ANR	3432295	IfStatement	if ( ( DebugFlags & D_FULLDEBUG ) )		3432195	0					
ANR	3432296	Condition	DebugFlags & D_FULLDEBUG	2220:6:66704:66729	3432195	0	True				
ANR	3432297	BitAndExpression	DebugFlags & D_FULLDEBUG		3432195	0		&			
ANR	3432298	Identifier	DebugFlags		3432195	0					
ANR	3432299	Identifier	D_FULLDEBUG		3432195	1					
ANR	3432300	CompoundStatement		32:35:993:993	3432195	1					
ANR	3432301	Statement	dprintf	2221:3:66738:66744	3432195	0	True				
ANR	3432302	Statement	(	2221:11:66746:66746	3432195	1	True				
ANR	3432303	Statement	D_SECURITY	2221:13:66748:66757	3432195	2	True				
ANR	3432304	Statement	","	2221:23:66758:66758	3432195	3	True				
ANR	3432305	Statement	"""SECMAN: succesfully created security session to %s via """	2222:7:66767:66823	3432195	4	True				
ANR	3432306	Statement	"""TCP!\\n"""	2223:7:66832:66839	3432195	5	True				
ANR	3432307	Statement	","	2223:15:66840:66840	3432195	6	True				
ANR	3432308	Statement	m_sock	2223:17:66842:66847	3432195	7	True				
ANR	3432309	Statement	->	2223:23:66848:66849	3432195	8	True				
ANR	3432310	Statement	get_sinful_peer	2223:25:66850:66864	3432195	9	True				
ANR	3432311	Statement	(	2223:40:66865:66865	3432195	10	True				
ANR	3432312	Statement	)	2223:41:66866:66866	3432195	11	True				
ANR	3432313	Statement	)	2223:43:66868:66868	3432195	12	True				
ANR	3432314	ExpressionStatement		2223:44:66869:66869	3432195	13	True				
ANR	3432315	ExpressionStatement	rc = startCommand_inner ( )	2225:2:66877:66902	3432195	1	True				
ANR	3432316	AssignmentExpression	rc = startCommand_inner ( )		3432195	0		=			
ANR	3432317	Identifier	rc		3432195	0					
ANR	3432318	CallExpression	startCommand_inner ( )		3432195	1					
ANR	3432319	Callee	startCommand_inner		3432195	0					
ANR	3432320	Identifier	startCommand_inner		3432195	0					
ANR	3432321	ArgumentList			3432195	1					
ANR	3432322	IdentifierDeclStatement	classy_counted_ptr < SecManStartCommand > sc ;	2229:1:66980:67021	3432195	8	True				
ANR	3432323	IdentifierDecl	sc		3432195	0					
ANR	3432324	IdentifierDeclType	classy_counted_ptr < SecManStartCommand >		3432195	0					
ANR	3432325	Identifier	sc		3432195	1					
ANR	3432326	IfStatement	"if ( SecMan :: tcp_auth_in_progress -> lookup ( m_session_key , sc ) == 0 && sc . get ( ) == this )"		3432195	9					
ANR	3432327	Condition	"SecMan :: tcp_auth_in_progress -> lookup ( m_session_key , sc ) == 0 && sc . get ( ) == this"	2230:5:67028:67111	3432195	0	True				
ANR	3432328	AndExpression	"SecMan :: tcp_auth_in_progress -> lookup ( m_session_key , sc ) == 0 && sc . get ( ) == this"		3432195	0		&&			
ANR	3432329	EqualityExpression	"SecMan :: tcp_auth_in_progress -> lookup ( m_session_key , sc ) == 0"		3432195	0		==			
ANR	3432330	CallExpression	"SecMan :: tcp_auth_in_progress -> lookup ( m_session_key , sc )"		3432195	0					
ANR	3432331	Callee	SecMan :: tcp_auth_in_progress -> lookup		3432195	0					
ANR	3432332	PtrMemberAccess	SecMan :: tcp_auth_in_progress -> lookup		3432195	0					
ANR	3432333	Identifier	SecMan :: tcp_auth_in_progress		3432195	0					
ANR	3432334	Identifier	lookup		3432195	1					
ANR	3432335	ArgumentList	m_session_key		3432195	1					
ANR	3432336	Argument	m_session_key		3432195	0					
ANR	3432337	Identifier	m_session_key		3432195	0					
ANR	3432338	Argument	sc		3432195	1					
ANR	3432339	Identifier	sc		3432195	0					
ANR	3432340	PrimaryExpression	0		3432195	1					
ANR	3432341	EqualityExpression	sc . get ( ) == this		3432195	1		==			
ANR	3432342	CallExpression	sc . get ( )		3432195	0					
ANR	3432343	Callee	sc . get		3432195	0					
ANR	3432344	MemberAccess	sc . get		3432195	0					
ANR	3432345	Identifier	sc		3432195	0					
ANR	3432346	Identifier	get		3432195	1					
ANR	3432347	ArgumentList			3432195	1					
ANR	3432348	Identifier	this		3432195	1					
ANR	3432349	CompoundStatement		44:1:1376:1376	3432195	1					
ANR	3432350	ExpressionStatement	ASSERT ( SecMan :: tcp_auth_in_progress -> remove ( m_session_key ) == 0 )	2233:2:67120:67184	3432195	0	True				
ANR	3432351	CallExpression	ASSERT ( SecMan :: tcp_auth_in_progress -> remove ( m_session_key ) == 0 )		3432195	0					
ANR	3432352	Callee	ASSERT		3432195	0					
ANR	3432353	Identifier	ASSERT		3432195	0					
ANR	3432354	ArgumentList	SecMan :: tcp_auth_in_progress -> remove ( m_session_key ) == 0		3432195	1					
ANR	3432355	Argument	SecMan :: tcp_auth_in_progress -> remove ( m_session_key ) == 0		3432195	0					
ANR	3432356	EqualityExpression	SecMan :: tcp_auth_in_progress -> remove ( m_session_key ) == 0		3432195	0		==			
ANR	3432357	CallExpression	SecMan :: tcp_auth_in_progress -> remove ( m_session_key )		3432195	0					
ANR	3432358	Callee	SecMan :: tcp_auth_in_progress -> remove		3432195	0					
ANR	3432359	PtrMemberAccess	SecMan :: tcp_auth_in_progress -> remove		3432195	0					
ANR	3432360	Identifier	SecMan :: tcp_auth_in_progress		3432195	0					
ANR	3432361	Identifier	remove		3432195	1					
ANR	3432362	ArgumentList	m_session_key		3432195	1					
ANR	3432363	Argument	m_session_key		3432195	0					
ANR	3432364	Identifier	m_session_key		3432195	0					
ANR	3432365	PrimaryExpression	0		3432195	1					
ANR	3432366	ExpressionStatement	m_waiting_for_tcp_auth . Rewind ( )	2238:1:67282:67313	3432195	10	True				
ANR	3432367	CallExpression	m_waiting_for_tcp_auth . Rewind ( )		3432195	0					
ANR	3432368	Callee	m_waiting_for_tcp_auth . Rewind		3432195	0					
ANR	3432369	MemberAccess	m_waiting_for_tcp_auth . Rewind		3432195	0					
ANR	3432370	Identifier	m_waiting_for_tcp_auth		3432195	0					
ANR	3432371	Identifier	Rewind		3432195	1					
ANR	3432372	ArgumentList			3432195	1					
ANR	3432373	WhileStatement	while ( m_waiting_for_tcp_auth . Next ( sc ) )		3432195	11					
ANR	3432374	Condition	m_waiting_for_tcp_auth . Next ( sc )	2239:8:67323:67353	3432195	0	True				
ANR	3432375	CallExpression	m_waiting_for_tcp_auth . Next ( sc )		3432195	0					
ANR	3432376	Callee	m_waiting_for_tcp_auth . Next		3432195	0					
ANR	3432377	MemberAccess	m_waiting_for_tcp_auth . Next		3432195	0					
ANR	3432378	Identifier	m_waiting_for_tcp_auth		3432195	0					
ANR	3432379	Identifier	Next		3432195	1					
ANR	3432380	ArgumentList	sc		3432195	1					
ANR	3432381	Argument	sc		3432195	0					
ANR	3432382	Identifier	sc		3432195	0					
ANR	3432383	CompoundStatement		51:42:1617:1617	3432195	1					
ANR	3432384	ExpressionStatement	sc -> ResumeAfterTCPAuth ( auth_succeeded )	2240:2:67361:67399	3432195	0	True				
ANR	3432385	CallExpression	sc -> ResumeAfterTCPAuth ( auth_succeeded )		3432195	0					
ANR	3432386	Callee	sc -> ResumeAfterTCPAuth		3432195	0					
ANR	3432387	PtrMemberAccess	sc -> ResumeAfterTCPAuth		3432195	0					
ANR	3432388	Identifier	sc		3432195	0					
ANR	3432389	Identifier	ResumeAfterTCPAuth		3432195	1					
ANR	3432390	ArgumentList	auth_succeeded		3432195	1					
ANR	3432391	Argument	auth_succeeded		3432195	0					
ANR	3432392	Identifier	auth_succeeded		3432195	0					
ANR	3432393	ExpressionStatement	m_waiting_for_tcp_auth . Clear ( )	2242:1:67405:67435	3432195	12	True				
ANR	3432394	CallExpression	m_waiting_for_tcp_auth . Clear ( )		3432195	0					
ANR	3432395	Callee	m_waiting_for_tcp_auth . Clear		3432195	0					
ANR	3432396	MemberAccess	m_waiting_for_tcp_auth . Clear		3432195	0					
ANR	3432397	Identifier	m_waiting_for_tcp_auth		3432195	0					
ANR	3432398	Identifier	Clear		3432195	1					
ANR	3432399	ArgumentList			3432195	1					
ANR	3432400	ReturnStatement	return rc ;	2244:1:67439:67448	3432195	13	True				
ANR	3432401	Identifier	rc		3432195	0					
ANR	3432402	ReturnType	StartCommandResult		3432195	1					
ANR	3432403	Identifier	SecManStartCommand :: TCPAuthCallback_inner		3432195	2					
ANR	3432404	ParameterList	"bool auth_succeeded , Sock * tcp_auth_sock"		3432195	3					
ANR	3432405	Parameter	bool auth_succeeded	2188:43:65696:65714	3432195	0	True				
ANR	3432406	ParameterType	bool		3432195	0					
ANR	3432407	Identifier	auth_succeeded		3432195	1					
ANR	3432408	Parameter	Sock * tcp_auth_sock	2188:64:65717:65735	3432195	1	True				
ANR	3432409	ParameterType	Sock *		3432195	0					
ANR	3432410	Identifier	tcp_auth_sock		3432195	1					
ANR	3432411	CFGEntryNode	ENTRY		3432195		True				
ANR	3432412	CFGExitNode	EXIT		3432195		True				
ANR	3432413	Symbol	m_session_key		3432195						
ANR	3432414	Symbol	m_tcp_auth_command		3432195						
ANR	3432415	Symbol	startCommand_inner		3432195						
ANR	3432416	Symbol	StartCommandFailed		3432195						
ANR	3432417	Symbol	SecMan :: tcp_auth_in_progress -> lookup		3432195						
ANR	3432418	Symbol	m_errstack		3432195						
ANR	3432419	Symbol	sc		3432195						
ANR	3432420	Symbol	SECMAN_ERR_NO_SESSION		3432195						
ANR	3432421	Symbol	m_callback_fn		3432195						
ANR	3432422	Symbol	* SecMan :: tcp_auth_in_progress		3432195						
ANR	3432423	Symbol	NULL		3432195						
ANR	3432424	Symbol	m_waiting_for_tcp_auth . Next		3432195						
ANR	3432425	Symbol	* m_sock		3432195						
ANR	3432426	Symbol	m_sock		3432195						
ANR	3432427	Symbol	m_waiting_for_tcp_auth		3432195						
ANR	3432428	Symbol	this		3432195						
ANR	3432429	Symbol	tcp_auth_sock		3432195						
ANR	3432430	Symbol	m_sock -> get_sinful_peer		3432195						
ANR	3432431	Symbol	D_FULLDEBUG		3432195						
ANR	3432432	Symbol	DebugFlags		3432195						
ANR	3432433	Symbol	m_nonblocking		3432195						
ANR	3432434	Symbol	rc		3432195						
ANR	3432435	Symbol	sc . get		3432195						
ANR	3432436	Symbol	SecMan :: tcp_auth_in_progress -> remove		3432195						
ANR	3432437	Symbol	auth_succeeded		3432195						
ANR	3432438	Symbol	StartCommandWouldBlock		3432195						
ANR	3432439	Symbol	SecMan :: tcp_auth_in_progress		3432195						
ANR	3432440	Function	SecManStartCommand :: ResumeAfterTCPAuth	2247:0:67453:68275							
ANR	3432441	FunctionDef	SecManStartCommand :: ResumeAfterTCPAuth (bool auth_succeeded)		3432440	0					
ANR	3432442	CompoundStatement		2249:0:67518:68275	3432440	0					
ANR	3432443	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3432440	0					
ANR	3432444	Condition	DebugFlags & D_FULLDEBUG	2255:5:67760:67783	3432440	0	True				
ANR	3432445	BitAndExpression	DebugFlags & D_FULLDEBUG		3432440	0		&			
ANR	3432446	Identifier	DebugFlags		3432440	0					
ANR	3432447	Identifier	D_FULLDEBUG		3432440	1					
ANR	3432448	CompoundStatement		7:32:268:268	3432440	1					
ANR	3432449	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: done waiting for TCP auth to %s (%s)\\n"" , m_sock -> get_sinful_peer ( ) , auth_succeeded ? ""succeeded"" : ""failed"" )"	2256:2:67791:67941	3432440	0	True				
ANR	3432450	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: done waiting for TCP auth to %s (%s)\\n"" , m_sock -> get_sinful_peer ( ) , auth_succeeded ? ""succeeded"" : ""failed"" )"		3432440	0					
ANR	3432451	Callee	dprintf		3432440	0					
ANR	3432452	Identifier	dprintf		3432440	0					
ANR	3432453	ArgumentList	D_SECURITY		3432440	1					
ANR	3432454	Argument	D_SECURITY		3432440	0					
ANR	3432455	Identifier	D_SECURITY		3432440	0					
ANR	3432456	Argument	"""SECMAN: done waiting for TCP auth to %s (%s)\\n"""		3432440	1					
ANR	3432457	PrimaryExpression	"""SECMAN: done waiting for TCP auth to %s (%s)\\n"""		3432440	0					
ANR	3432458	Argument	m_sock -> get_sinful_peer ( )		3432440	2					
ANR	3432459	CallExpression	m_sock -> get_sinful_peer ( )		3432440	0					
ANR	3432460	Callee	m_sock -> get_sinful_peer		3432440	0					
ANR	3432461	PtrMemberAccess	m_sock -> get_sinful_peer		3432440	0					
ANR	3432462	Identifier	m_sock		3432440	0					
ANR	3432463	Identifier	get_sinful_peer		3432440	1					
ANR	3432464	ArgumentList			3432440	1					
ANR	3432465	Argument	"auth_succeeded ? ""succeeded"" : ""failed"""		3432440	3					
ANR	3432466	ConditionalExpression	"auth_succeeded ? ""succeeded"" : ""failed"""		3432440	0					
ANR	3432467	Condition	auth_succeeded		3432440	0					
ANR	3432468	Identifier	auth_succeeded		3432440	0					
ANR	3432469	PrimaryExpression	"""succeeded"""		3432440	1					
ANR	3432470	PrimaryExpression	"""failed"""		3432440	2					
ANR	3432471	IfStatement	if ( ! auth_succeeded )		3432440	1					
ANR	3432472	Condition	! auth_succeeded	2260:4:67950:67964	3432440	0	True				
ANR	3432473	UnaryOperationExpression	! auth_succeeded		3432440	0					
ANR	3432474	UnaryOperator	!		3432440	0					
ANR	3432475	Identifier	auth_succeeded		3432440	1					
ANR	3432476	CompoundStatement		12:21:448:448	3432440	1					
ANR	3432477	Statement	m_errstack	2261:2:67971:67980	3432440	0	True				
ANR	3432478	Statement	->	2261:12:67981:67982	3432440	1	True				
ANR	3432479	Statement	pushf	2261:14:67983:67987	3432440	2	True				
ANR	3432480	Statement	(	2261:19:67988:67988	3432440	3	True				
ANR	3432481	Statement	"""SECMAN"""	2261:20:67989:67996	3432440	4	True				
ANR	3432482	Statement	","	2261:28:67997:67997	3432440	5	True				
ANR	3432483	Statement	SECMAN_ERR_NO_SESSION	2261:30:67999:68019	3432440	6	True				
ANR	3432484	Statement	","	2261:51:68020:68020	3432440	7	True				
ANR	3432485	Statement	"""Was waiting for TCP auth session to %s, """	2262:8:68030:68071	3432440	8	True				
ANR	3432486	Statement	"""but it failed."""	2263:8:68081:68096	3432440	9	True				
ANR	3432487	Statement	","	2263:24:68097:68097	3432440	10	True				
ANR	3432488	Statement	m_sock	2264:8:68107:68112	3432440	11	True				
ANR	3432489	Statement	->	2264:14:68113:68114	3432440	12	True				
ANR	3432490	Statement	get_sinful_peer	2264:16:68115:68129	3432440	13	True				
ANR	3432491	Statement	(	2264:31:68130:68130	3432440	14	True				
ANR	3432492	Statement	)	2264:32:68131:68131	3432440	15	True				
ANR	3432493	Statement	)	2264:33:68132:68132	3432440	16	True				
ANR	3432494	ExpressionStatement		2264:34:68133:68133	3432440	17	True				
ANR	3432495	IdentifierDeclStatement	StartCommandResult rc ;	2267:1:68140:68161	3432440	2	True				
ANR	3432496	IdentifierDecl	rc		3432440	0					
ANR	3432497	IdentifierDeclType	StartCommandResult		3432440	0					
ANR	3432498	Identifier	rc		3432440	1					
ANR	3432499	IfStatement	if ( auth_succeeded )		3432440	3					
ANR	3432500	Condition	auth_succeeded	2268:4:68167:68180	3432440	0	True				
ANR	3432501	Identifier	auth_succeeded		3432440	0					
ANR	3432502	CompoundStatement		20:20:664:664	3432440	1					
ANR	3432503	ExpressionStatement	rc = startCommand_inner ( )	2269:2:68187:68212	3432440	0	True				
ANR	3432504	AssignmentExpression	rc = startCommand_inner ( )		3432440	0		=			
ANR	3432505	Identifier	rc		3432440	0					
ANR	3432506	CallExpression	startCommand_inner ( )		3432440	1					
ANR	3432507	Callee	startCommand_inner		3432440	0					
ANR	3432508	Identifier	startCommand_inner		3432440	0					
ANR	3432509	ArgumentList			3432440	1					
ANR	3432510	ElseStatement	else		3432440	0					
ANR	3432511	CompoundStatement		23:6:704:704	3432440	0					
ANR	3432512	ExpressionStatement	rc = StartCommandFailed	2272:2:68227:68250	3432440	0	True				
ANR	3432513	AssignmentExpression	rc = StartCommandFailed		3432440	0		=			
ANR	3432514	Identifier	rc		3432440	0					
ANR	3432515	Identifier	StartCommandFailed		3432440	1					
ANR	3432516	ExpressionStatement	doCallback ( rc )	2275:1:68257:68273	3432440	4	True				
ANR	3432517	CallExpression	doCallback ( rc )		3432440	0					
ANR	3432518	Callee	doCallback		3432440	0					
ANR	3432519	Identifier	doCallback		3432440	0					
ANR	3432520	ArgumentList	rc		3432440	1					
ANR	3432521	Argument	rc		3432440	0					
ANR	3432522	Identifier	rc		3432440	0					
ANR	3432523	ReturnType	void		3432440	1					
ANR	3432524	Identifier	SecManStartCommand :: ResumeAfterTCPAuth		3432440	2					
ANR	3432525	ParameterList	bool auth_succeeded		3432440	3					
ANR	3432526	Parameter	bool auth_succeeded	2248:39:67497:67515	3432440	0	True				
ANR	3432527	ParameterType	bool		3432440	0					
ANR	3432528	Identifier	auth_succeeded		3432440	1					
ANR	3432529	CFGEntryNode	ENTRY		3432440		True				
ANR	3432530	CFGExitNode	EXIT		3432440		True				
ANR	3432531	Symbol	rc		3432440						
ANR	3432532	Symbol	D_SECURITY		3432440						
ANR	3432533	Symbol	* m_sock		3432440						
ANR	3432534	Symbol	m_sock		3432440						
ANR	3432535	Symbol	startCommand_inner		3432440						
ANR	3432536	Symbol	auth_succeeded		3432440						
ANR	3432537	Symbol	m_sock -> get_sinful_peer		3432440						
ANR	3432538	Symbol	StartCommandFailed		3432440						
ANR	3432539	Symbol	DebugFlags		3432440						
ANR	3432540	Symbol	D_FULLDEBUG		3432440						
ANR	3432541	Function	SecManStartCommand :: WaitForSocketCallback	2278:0:68278:69795							
ANR	3432542	FunctionDef	SecManStartCommand :: WaitForSocketCallback ()		3432541	0					
ANR	3432543	CompoundStatement		2280:0:68341:69795	3432541	0					
ANR	3432544	IfStatement	if ( m_sock -> get_deadline ( ) == 0 )		3432541	0					
ANR	3432545	Condition	m_sock -> get_deadline ( ) == 0	2282:5:68349:68375	3432541	0	True				
ANR	3432546	EqualityExpression	m_sock -> get_deadline ( ) == 0		3432541	0		==			
ANR	3432547	CallExpression	m_sock -> get_deadline ( )		3432541	0					
ANR	3432548	Callee	m_sock -> get_deadline		3432541	0					
ANR	3432549	PtrMemberAccess	m_sock -> get_deadline		3432541	0					
ANR	3432550	Identifier	m_sock		3432541	0					
ANR	3432551	Identifier	get_deadline		3432541	1					
ANR	3432552	ArgumentList			3432541	1					
ANR	3432553	PrimaryExpression	0		3432541	1					
ANR	3432554	CompoundStatement		10:2:443:515	3432541	1					
ANR	3432555	IdentifierDeclStatement	"int TCP_SESSION_DEADLINE = param_integer ( ""SEC_TCP_SESSION_DEADLINE"" , 120 ) ;"	2289:2:68785:68857	3432541	0	True				
ANR	3432556	IdentifierDecl	"TCP_SESSION_DEADLINE = param_integer ( ""SEC_TCP_SESSION_DEADLINE"" , 120 )"		3432541	0					
ANR	3432557	IdentifierDeclType	int		3432541	0					
ANR	3432558	Identifier	TCP_SESSION_DEADLINE		3432541	1					
ANR	3432559	AssignmentExpression	"TCP_SESSION_DEADLINE = param_integer ( ""SEC_TCP_SESSION_DEADLINE"" , 120 )"		3432541	2		=			
ANR	3432560	Identifier	TCP_SESSION_DEADLINE		3432541	0					
ANR	3432561	CallExpression	"param_integer ( ""SEC_TCP_SESSION_DEADLINE"" , 120 )"		3432541	1					
ANR	3432562	Callee	param_integer		3432541	0					
ANR	3432563	Identifier	param_integer		3432541	0					
ANR	3432564	ArgumentList	"""SEC_TCP_SESSION_DEADLINE"""		3432541	1					
ANR	3432565	Argument	"""SEC_TCP_SESSION_DEADLINE"""		3432541	0					
ANR	3432566	PrimaryExpression	"""SEC_TCP_SESSION_DEADLINE"""		3432541	0					
ANR	3432567	Argument	120		3432541	1					
ANR	3432568	PrimaryExpression	120		3432541	0					
ANR	3432569	ExpressionStatement	m_sock -> set_deadline_timeout ( TCP_SESSION_DEADLINE )	2290:2:68861:68911	3432541	1	True				
ANR	3432570	CallExpression	m_sock -> set_deadline_timeout ( TCP_SESSION_DEADLINE )		3432541	0					
ANR	3432571	Callee	m_sock -> set_deadline_timeout		3432541	0					
ANR	3432572	PtrMemberAccess	m_sock -> set_deadline_timeout		3432541	0					
ANR	3432573	Identifier	m_sock		3432541	0					
ANR	3432574	Identifier	set_deadline_timeout		3432541	1					
ANR	3432575	ArgumentList	TCP_SESSION_DEADLINE		3432541	1					
ANR	3432576	Argument	TCP_SESSION_DEADLINE		3432541	0					
ANR	3432577	Identifier	TCP_SESSION_DEADLINE		3432541	0					
ANR	3432578	ExpressionStatement	m_sock_had_no_deadline = true	2291:2:68915:68944	3432541	2	True				
ANR	3432579	AssignmentExpression	m_sock_had_no_deadline = true		3432541	0		=			
ANR	3432580	Identifier	m_sock_had_no_deadline		3432541	0					
ANR	3432581	Identifier	true		3432541	1					
ANR	3432582	IdentifierDeclStatement	MyString req_description ;	2294:1:68992:69016	3432541	1	True				
ANR	3432583	IdentifierDecl	req_description		3432541	0					
ANR	3432584	IdentifierDeclType	MyString		3432541	0					
ANR	3432585	Identifier	req_description		3432541	1					
ANR	3432586	ExpressionStatement	"req_description . sprintf ( ""SecManStartCommand::WaitForSocketCallback %s"" , m_cmd_description . Value ( ) )"	2295:1:69019:69124	3432541	2	True				
ANR	3432587	CallExpression	"req_description . sprintf ( ""SecManStartCommand::WaitForSocketCallback %s"" , m_cmd_description . Value ( ) )"		3432541	0					
ANR	3432588	Callee	req_description . sprintf		3432541	0					
ANR	3432589	MemberAccess	req_description . sprintf		3432541	0					
ANR	3432590	Identifier	req_description		3432541	0					
ANR	3432591	Identifier	sprintf		3432541	1					
ANR	3432592	ArgumentList	"""SecManStartCommand::WaitForSocketCallback %s"""		3432541	1					
ANR	3432593	Argument	"""SecManStartCommand::WaitForSocketCallback %s"""		3432541	0					
ANR	3432594	PrimaryExpression	"""SecManStartCommand::WaitForSocketCallback %s"""		3432541	0					
ANR	3432595	Argument	m_cmd_description . Value ( )		3432541	1					
ANR	3432596	CallExpression	m_cmd_description . Value ( )		3432541	0					
ANR	3432597	Callee	m_cmd_description . Value		3432541	0					
ANR	3432598	MemberAccess	m_cmd_description . Value		3432541	0					
ANR	3432599	Identifier	m_cmd_description		3432541	0					
ANR	3432600	Identifier	Value		3432541	1					
ANR	3432601	ArgumentList			3432541	1					
ANR	3432602	IdentifierDeclStatement	"int reg_rc = daemonCoreSockAdapter . Register_Socket ( m_sock , m_sock -> peer_description ( ) , ( SocketHandlercpp ) & SecManStartCommand :: SocketCallback , req_description . Value ( ) , this , ALLOW ) ;"	2297:1:69127:69319	3432541	3	True				
ANR	3432603	IdentifierDecl	"reg_rc = daemonCoreSockAdapter . Register_Socket ( m_sock , m_sock -> peer_description ( ) , ( SocketHandlercpp ) & SecManStartCommand :: SocketCallback , req_description . Value ( ) , this , ALLOW )"		3432541	0					
ANR	3432604	IdentifierDeclType	int		3432541	0					
ANR	3432605	Identifier	reg_rc		3432541	1					
ANR	3432606	AssignmentExpression	"reg_rc = daemonCoreSockAdapter . Register_Socket ( m_sock , m_sock -> peer_description ( ) , ( SocketHandlercpp ) & SecManStartCommand :: SocketCallback , req_description . Value ( ) , this , ALLOW )"		3432541	2		=			
ANR	3432607	Identifier	reg_rc		3432541	0					
ANR	3432608	CallExpression	"daemonCoreSockAdapter . Register_Socket ( m_sock , m_sock -> peer_description ( ) , ( SocketHandlercpp ) & SecManStartCommand :: SocketCallback , req_description . Value ( ) , this , ALLOW )"		3432541	1					
ANR	3432609	Callee	daemonCoreSockAdapter . Register_Socket		3432541	0					
ANR	3432610	MemberAccess	daemonCoreSockAdapter . Register_Socket		3432541	0					
ANR	3432611	Identifier	daemonCoreSockAdapter		3432541	0					
ANR	3432612	Identifier	Register_Socket		3432541	1					
ANR	3432613	ArgumentList	m_sock		3432541	1					
ANR	3432614	Argument	m_sock		3432541	0					
ANR	3432615	Identifier	m_sock		3432541	0					
ANR	3432616	Argument	m_sock -> peer_description ( )		3432541	1					
ANR	3432617	CallExpression	m_sock -> peer_description ( )		3432541	0					
ANR	3432618	Callee	m_sock -> peer_description		3432541	0					
ANR	3432619	PtrMemberAccess	m_sock -> peer_description		3432541	0					
ANR	3432620	Identifier	m_sock		3432541	0					
ANR	3432621	Identifier	peer_description		3432541	1					
ANR	3432622	ArgumentList			3432541	1					
ANR	3432623	Argument	( SocketHandlercpp ) & SecManStartCommand :: SocketCallback		3432541	2					
ANR	3432624	CastExpression	( SocketHandlercpp ) & SecManStartCommand :: SocketCallback		3432541	0					
ANR	3432625	CastTarget	SocketHandlercpp		3432541	0					
ANR	3432626	UnaryOperationExpression	& SecManStartCommand :: SocketCallback		3432541	1					
ANR	3432627	UnaryOperator	&		3432541	0					
ANR	3432628	Identifier	SecManStartCommand :: SocketCallback		3432541	1					
ANR	3432629	Argument	req_description . Value ( )		3432541	3					
ANR	3432630	CallExpression	req_description . Value ( )		3432541	0					
ANR	3432631	Callee	req_description . Value		3432541	0					
ANR	3432632	MemberAccess	req_description . Value		3432541	0					
ANR	3432633	Identifier	req_description		3432541	0					
ANR	3432634	Identifier	Value		3432541	1					
ANR	3432635	ArgumentList			3432541	1					
ANR	3432636	Argument	this		3432541	4					
ANR	3432637	Identifier	this		3432541	0					
ANR	3432638	Argument	ALLOW		3432541	5					
ANR	3432639	Identifier	ALLOW		3432541	0					
ANR	3432640	IfStatement	if ( reg_rc < 0 )		3432541	4					
ANR	3432641	Condition	reg_rc < 0	2305:4:69326:69335	3432541	0	True				
ANR	3432642	RelationalExpression	reg_rc < 0		3432541	0		<			
ANR	3432643	Identifier	reg_rc		3432541	0					
ANR	3432644	PrimaryExpression	0		3432541	1					
ANR	3432645	CompoundStatement		27:2:1000:1012	3432541	1					
ANR	3432646	IdentifierDeclStatement	MyString msg ;	2306:2:69342:69354	3432541	0	True				
ANR	3432647	IdentifierDecl	msg		3432541	0					
ANR	3432648	IdentifierDeclType	MyString		3432541	0					
ANR	3432649	Identifier	msg		3432541	1					
ANR	3432650	Statement	msg	2307:2:69358:69360	3432541	1	True				
ANR	3432651	Statement	.	2307:5:69361:69361	3432541	2	True				
ANR	3432652	Statement	sprintf	2307:6:69362:69368	3432541	3	True				
ANR	3432653	Statement	(	2307:13:69369:69369	3432541	4	True				
ANR	3432654	Statement	"""StartCommand to %s failed because """	2307:14:69370:69405	3432541	5	True				
ANR	3432655	Statement	"""Register_Socket returned %d."""	2308:5:69412:69441	3432541	6	True				
ANR	3432656	Statement	","	2308:35:69442:69442	3432541	7	True				
ANR	3432657	Statement	m_sock	2309:5:69449:69454	3432541	8	True				
ANR	3432658	Statement	->	2309:11:69455:69456	3432541	9	True				
ANR	3432659	Statement	get_sinful_peer	2309:13:69457:69471	3432541	10	True				
ANR	3432660	Statement	(	2309:28:69472:69472	3432541	11	True				
ANR	3432661	Statement	)	2309:29:69473:69473	3432541	12	True				
ANR	3432662	Statement	","	2309:30:69474:69474	3432541	13	True				
ANR	3432663	Statement	reg_rc	2310:5:69481:69486	3432541	14	True				
ANR	3432664	Statement	)	2310:11:69487:69487	3432541	15	True				
ANR	3432665	ExpressionStatement		2310:12:69488:69488	3432541	16	True				
ANR	3432666	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: %s\\n"" , msg . Value ( ) )"	2311:2:69492:69540	3432541	17	True				
ANR	3432667	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: %s\\n"" , msg . Value ( ) )"		3432541	0					
ANR	3432668	Callee	dprintf		3432541	0					
ANR	3432669	Identifier	dprintf		3432541	0					
ANR	3432670	ArgumentList	D_SECURITY		3432541	1					
ANR	3432671	Argument	D_SECURITY		3432541	0					
ANR	3432672	Identifier	D_SECURITY		3432541	0					
ANR	3432673	Argument	"""SECMAN: %s\\n"""		3432541	1					
ANR	3432674	PrimaryExpression	"""SECMAN: %s\\n"""		3432541	0					
ANR	3432675	Argument	msg . Value ( )		3432541	2					
ANR	3432676	CallExpression	msg . Value ( )		3432541	0					
ANR	3432677	Callee	msg . Value		3432541	0					
ANR	3432678	MemberAccess	msg . Value		3432541	0					
ANR	3432679	Identifier	msg		3432541	0					
ANR	3432680	Identifier	Value		3432541	1					
ANR	3432681	ArgumentList			3432541	1					
ANR	3432682	ExpressionStatement	"m_errstack -> pushf ( ""SECMAN"" , SECMAN_ERR_CONNECT_FAILED , ""%s"" , msg . Value ( ) )"	2312:2:69544:69625	3432541	18	True				
ANR	3432683	CallExpression	"m_errstack -> pushf ( ""SECMAN"" , SECMAN_ERR_CONNECT_FAILED , ""%s"" , msg . Value ( ) )"		3432541	0					
ANR	3432684	Callee	m_errstack -> pushf		3432541	0					
ANR	3432685	PtrMemberAccess	m_errstack -> pushf		3432541	0					
ANR	3432686	Identifier	m_errstack		3432541	0					
ANR	3432687	Identifier	pushf		3432541	1					
ANR	3432688	ArgumentList	"""SECMAN"""		3432541	1					
ANR	3432689	Argument	"""SECMAN"""		3432541	0					
ANR	3432690	PrimaryExpression	"""SECMAN"""		3432541	0					
ANR	3432691	Argument	SECMAN_ERR_CONNECT_FAILED		3432541	1					
ANR	3432692	Identifier	SECMAN_ERR_CONNECT_FAILED		3432541	0					
ANR	3432693	Argument	"""%s"""		3432541	2					
ANR	3432694	PrimaryExpression	"""%s"""		3432541	0					
ANR	3432695	Argument	msg . Value ( )		3432541	3					
ANR	3432696	CallExpression	msg . Value ( )		3432541	0					
ANR	3432697	Callee	msg . Value		3432541	0					
ANR	3432698	MemberAccess	msg . Value		3432541	0					
ANR	3432699	Identifier	msg		3432541	0					
ANR	3432700	Identifier	Value		3432541	1					
ANR	3432701	ArgumentList			3432541	1					
ANR	3432702	ReturnStatement	return StartCommandFailed ;	2315:2:69630:69655	3432541	19	True				
ANR	3432703	Identifier	StartCommandFailed		3432541	0					
ANR	3432704	ExpressionStatement	incRefCount ( )	2320:1:69747:69760	3432541	5	True				
ANR	3432705	CallExpression	incRefCount ( )		3432541	0					
ANR	3432706	Callee	incRefCount		3432541	0					
ANR	3432707	Identifier	incRefCount		3432541	0					
ANR	3432708	ArgumentList			3432541	1					
ANR	3432709	ReturnStatement	return StartCommandInProgress ;	2322:1:69764:69793	3432541	6	True				
ANR	3432710	Identifier	StartCommandInProgress		3432541	0					
ANR	3432711	ReturnType	StartCommandResult		3432541	1					
ANR	3432712	Identifier	SecManStartCommand :: WaitForSocketCallback		3432541	2					
ANR	3432713	ParameterList			3432541	3					
ANR	3432714	CFGEntryNode	ENTRY		3432541		True				
ANR	3432715	CFGExitNode	EXIT		3432541		True				
ANR	3432716	Symbol	msg		3432541						
ANR	3432717	Symbol	D_SECURITY		3432541						
ANR	3432718	Symbol	StartCommandFailed		3432541						
ANR	3432719	Symbol	req_description . Value		3432541						
ANR	3432720	Symbol	m_sock -> peer_description		3432541						
ANR	3432721	Symbol	m_errstack		3432541						
ANR	3432722	Symbol	daemonCoreSockAdapter		3432541						
ANR	3432723	Symbol	m_sock_had_no_deadline		3432541						
ANR	3432724	Symbol	m_sock -> get_deadline		3432541						
ANR	3432725	Symbol	m_cmd_description . Value		3432541						
ANR	3432726	Symbol	ALLOW		3432541						
ANR	3432727	Symbol	& SecManStartCommand :: SocketCallback		3432541						
ANR	3432728	Symbol	SECMAN_ERR_CONNECT_FAILED		3432541						
ANR	3432729	Symbol	* m_sock		3432541						
ANR	3432730	Symbol	StartCommandInProgress		3432541						
ANR	3432731	Symbol	m_sock		3432541						
ANR	3432732	Symbol	this		3432541						
ANR	3432733	Symbol	m_cmd_description		3432541						
ANR	3432734	Symbol	daemonCoreSockAdapter . Register_Socket		3432541						
ANR	3432735	Symbol	msg . Value		3432541						
ANR	3432736	Symbol	TCP_SESSION_DEADLINE		3432541						
ANR	3432737	Symbol	reg_rc		3432541						
ANR	3432738	Symbol	req_description		3432541						
ANR	3432739	Symbol	true		3432541						
ANR	3432740	Symbol	param_integer		3432541						
ANR	3432741	Function	SecManStartCommand :: SocketCallback	2325:0:69798:70133							
ANR	3432742	FunctionDef	SecManStartCommand :: SocketCallback (Stream * stream)		3432741	0					
ANR	3432743	CompoundStatement		2327:0:69855:70133	3432741	0					
ANR	3432744	ExpressionStatement	daemonCoreSockAdapter . Cancel_Socket ( stream )	2328:1:69858:69903	3432741	0	True				
ANR	3432745	CallExpression	daemonCoreSockAdapter . Cancel_Socket ( stream )		3432741	0					
ANR	3432746	Callee	daemonCoreSockAdapter . Cancel_Socket		3432741	0					
ANR	3432747	MemberAccess	daemonCoreSockAdapter . Cancel_Socket		3432741	0					
ANR	3432748	Identifier	daemonCoreSockAdapter		3432741	0					
ANR	3432749	Identifier	Cancel_Socket		3432741	1					
ANR	3432750	ArgumentList	stream		3432741	1					
ANR	3432751	Argument	stream		3432741	0					
ANR	3432752	Identifier	stream		3432741	0					
ANR	3432753	ExpressionStatement	doCallback ( startCommand_inner ( ) )	2332:1:70001:70035	3432741	1	True				
ANR	3432754	CallExpression	doCallback ( startCommand_inner ( ) )		3432741	0					
ANR	3432755	Callee	doCallback		3432741	0					
ANR	3432756	Identifier	doCallback		3432741	0					
ANR	3432757	ArgumentList	startCommand_inner ( )		3432741	1					
ANR	3432758	Argument	startCommand_inner ( )		3432741	0					
ANR	3432759	CallExpression	startCommand_inner ( )		3432741	0					
ANR	3432760	Callee	startCommand_inner		3432741	0					
ANR	3432761	Identifier	startCommand_inner		3432741	0					
ANR	3432762	ArgumentList			3432741	1					
ANR	3432763	ExpressionStatement	decRefCount ( )	2335:1:70096:70109	3432741	2	True				
ANR	3432764	CallExpression	decRefCount ( )		3432741	0					
ANR	3432765	Callee	decRefCount		3432741	0					
ANR	3432766	Identifier	decRefCount		3432741	0					
ANR	3432767	ArgumentList			3432741	1					
ANR	3432768	ReturnStatement	return KEEP_STREAM ;	2337:1:70113:70131	3432741	3	True				
ANR	3432769	Identifier	KEEP_STREAM		3432741	0					
ANR	3432770	ReturnType	int		3432741	1					
ANR	3432771	Identifier	SecManStartCommand :: SocketCallback		3432741	2					
ANR	3432772	ParameterList	Stream * stream		3432741	3					
ANR	3432773	Parameter	Stream * stream	2326:36:69838:69851	3432741	0	True				
ANR	3432774	ParameterType	Stream *		3432741	0					
ANR	3432775	Identifier	stream		3432741	1					
ANR	3432776	CFGEntryNode	ENTRY		3432741		True				
ANR	3432777	CFGExitNode	EXIT		3432741		True				
ANR	3432778	Symbol	daemonCoreSockAdapter		3432741						
ANR	3432779	Symbol	stream		3432741						
ANR	3432780	Symbol	startCommand_inner		3432741						
ANR	3432781	Symbol	KEEP_STREAM		3432741						
ANR	3432782	Function	SecMan :: invalidateHost	2342:0:70220:70598							
ANR	3432783	FunctionDef	SecMan :: invalidateHost (const char * sin)		3432782	0					
ANR	3432784	CompoundStatement		2344:0:70266:70598	3432782	0					
ANR	3432785	IdentifierDeclStatement	StringList * keyids = session_cache -> getKeysForPeerAddress ( sin ) ;	2345:1:70269:70331	3432782	0	True				
ANR	3432786	IdentifierDecl	* keyids = session_cache -> getKeysForPeerAddress ( sin )		3432782	0					
ANR	3432787	IdentifierDeclType	StringList *		3432782	0					
ANR	3432788	Identifier	keyids		3432782	1					
ANR	3432789	AssignmentExpression	* keyids = session_cache -> getKeysForPeerAddress ( sin )		3432782	2		=			
ANR	3432790	Identifier	keyids		3432782	0					
ANR	3432791	CallExpression	session_cache -> getKeysForPeerAddress ( sin )		3432782	1					
ANR	3432792	Callee	session_cache -> getKeysForPeerAddress		3432782	0					
ANR	3432793	PtrMemberAccess	session_cache -> getKeysForPeerAddress		3432782	0					
ANR	3432794	Identifier	session_cache		3432782	0					
ANR	3432795	Identifier	getKeysForPeerAddress		3432782	1					
ANR	3432796	ArgumentList	sin		3432782	1					
ANR	3432797	Argument	sin		3432782	0					
ANR	3432798	Identifier	sin		3432782	0					
ANR	3432799	IfStatement	if ( ! keyids )		3432782	1					
ANR	3432800	Condition	! keyids	2346:5:70338:70344	3432782	0	True				
ANR	3432801	UnaryOperationExpression	! keyids		3432782	0					
ANR	3432802	UnaryOperator	!		3432782	0					
ANR	3432803	Identifier	keyids		3432782	1					
ANR	3432804	CompoundStatement		3:15:81:81	3432782	1					
ANR	3432805	ReturnStatement	return ;	2347:2:70352:70358	3432782	0	True				
ANR	3432806	ExpressionStatement	keyids -> rewind ( )	2350:1:70365:70381	3432782	2	True				
ANR	3432807	CallExpression	keyids -> rewind ( )		3432782	0					
ANR	3432808	Callee	keyids -> rewind		3432782	0					
ANR	3432809	PtrMemberAccess	keyids -> rewind		3432782	0					
ANR	3432810	Identifier	keyids		3432782	0					
ANR	3432811	Identifier	rewind		3432782	1					
ANR	3432812	ArgumentList			3432782	1					
ANR	3432813	IdentifierDeclStatement	char const * keyid ;	2351:1:70384:70401	3432782	3	True				
ANR	3432814	IdentifierDecl	* keyid		3432782	0					
ANR	3432815	IdentifierDeclType	char const *		3432782	0					
ANR	3432816	Identifier	keyid		3432782	1					
ANR	3432817	WhileStatement	while ( ( keyid = keyids -> next ( ) ) )		3432782	4					
ANR	3432818	Condition	keyid = keyids -> next ( )	2352:8:70411:70432	3432782	0	True				
ANR	3432819	AssignmentExpression	keyid = keyids -> next ( )		3432782	0		=			
ANR	3432820	Identifier	keyid		3432782	0					
ANR	3432821	CallExpression	keyids -> next ( )		3432782	1					
ANR	3432822	Callee	keyids -> next		3432782	0					
ANR	3432823	PtrMemberAccess	keyids -> next		3432782	0					
ANR	3432824	Identifier	keyids		3432782	0					
ANR	3432825	Identifier	next		3432782	1					
ANR	3432826	ArgumentList			3432782	1					
ANR	3432827	CompoundStatement		9:33:169:169	3432782	1					
ANR	3432828	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3432782	0					
ANR	3432829	Condition	DebugFlags & D_FULLDEBUG	2353:6:70444:70467	3432782	0	True				
ANR	3432830	BitAndExpression	DebugFlags & D_FULLDEBUG		3432782	0		&			
ANR	3432831	Identifier	DebugFlags		3432782	0					
ANR	3432832	Identifier	D_FULLDEBUG		3432782	1					
ANR	3432833	CompoundStatement		10:32:203:203	3432782	1					
ANR	3432834	ExpressionStatement	"dprintf ( D_SECURITY , ""KEYCACHE: removing session %s for %s\\n"" , keyid , sin )"	2354:3:70475:70549	3432782	0	True				
ANR	3432835	CallExpression	"dprintf ( D_SECURITY , ""KEYCACHE: removing session %s for %s\\n"" , keyid , sin )"		3432782	0					
ANR	3432836	Callee	dprintf		3432782	0					
ANR	3432837	Identifier	dprintf		3432782	0					
ANR	3432838	ArgumentList	D_SECURITY		3432782	1					
ANR	3432839	Argument	D_SECURITY		3432782	0					
ANR	3432840	Identifier	D_SECURITY		3432782	0					
ANR	3432841	Argument	"""KEYCACHE: removing session %s for %s\\n"""		3432782	1					
ANR	3432842	PrimaryExpression	"""KEYCACHE: removing session %s for %s\\n"""		3432782	0					
ANR	3432843	Argument	keyid		3432782	2					
ANR	3432844	Identifier	keyid		3432782	0					
ANR	3432845	Argument	sin		3432782	3					
ANR	3432846	Identifier	sin		3432782	0					
ANR	3432847	ExpressionStatement	invalidateKey ( keyid )	2356:2:70557:70577	3432782	1	True				
ANR	3432848	CallExpression	invalidateKey ( keyid )		3432782	0					
ANR	3432849	Callee	invalidateKey		3432782	0					
ANR	3432850	Identifier	invalidateKey		3432782	0					
ANR	3432851	ArgumentList	keyid		3432782	1					
ANR	3432852	Argument	keyid		3432782	0					
ANR	3432853	Identifier	keyid		3432782	0					
ANR	3432854	Statement	delete	2358:1:70583:70588	3432782	5	True				
ANR	3432855	ExpressionStatement	keyids	2358:8:70590:70596	3432782	6	True				
ANR	3432856	Identifier	keyids		3432782	0					
ANR	3432857	ReturnType	void		3432782	1					
ANR	3432858	Identifier	SecMan :: invalidateHost		3432782	2					
ANR	3432859	ParameterList	const char * sin		3432782	3					
ANR	3432860	Parameter	const char * sin	2343:23:70248:70263	3432782	0	True				
ANR	3432861	ParameterType	const char *		3432782	0					
ANR	3432862	Identifier	sin		3432782	1					
ANR	3432863	CFGEntryNode	ENTRY		3432782		True				
ANR	3432864	CFGExitNode	EXIT		3432782		True				
ANR	3432865	Symbol	* session_cache		3432782						
ANR	3432866	Symbol	session_cache		3432782						
ANR	3432867	Symbol	keyids -> next		3432782						
ANR	3432868	Symbol	D_SECURITY		3432782						
ANR	3432869	Symbol	keyids		3432782						
ANR	3432870	Symbol	* keyids		3432782						
ANR	3432871	Symbol	sin		3432782						
ANR	3432872	Symbol	keyid		3432782						
ANR	3432873	Symbol	D_FULLDEBUG		3432782						
ANR	3432874	Symbol	DebugFlags		3432782						
ANR	3432875	Symbol	session_cache -> getKeysForPeerAddress		3432782						
ANR	3432876	Function	SecMan :: invalidateByParentAndPid	2361:0:70601:71019							
ANR	3432877	FunctionDef	"SecMan :: invalidateByParentAndPid (const char * parent , int pid)"		3432876	0					
ANR	3432878	CompoundStatement		2362:63:70669:71019	3432876	0					
ANR	3432879	IdentifierDeclStatement	"StringList * keyids = session_cache -> getKeysForProcess ( parent , pid ) ;"	2363:1:70672:70737	3432876	0	True				
ANR	3432880	IdentifierDecl	"* keyids = session_cache -> getKeysForProcess ( parent , pid )"		3432876	0					
ANR	3432881	IdentifierDeclType	StringList *		3432876	0					
ANR	3432882	Identifier	keyids		3432876	1					
ANR	3432883	AssignmentExpression	"* keyids = session_cache -> getKeysForProcess ( parent , pid )"		3432876	2		=			
ANR	3432884	Identifier	keyids		3432876	0					
ANR	3432885	CallExpression	"session_cache -> getKeysForProcess ( parent , pid )"		3432876	1					
ANR	3432886	Callee	session_cache -> getKeysForProcess		3432876	0					
ANR	3432887	PtrMemberAccess	session_cache -> getKeysForProcess		3432876	0					
ANR	3432888	Identifier	session_cache		3432876	0					
ANR	3432889	Identifier	getKeysForProcess		3432876	1					
ANR	3432890	ArgumentList	parent		3432876	1					
ANR	3432891	Argument	parent		3432876	0					
ANR	3432892	Identifier	parent		3432876	0					
ANR	3432893	Argument	pid		3432876	1					
ANR	3432894	Identifier	pid		3432876	0					
ANR	3432895	IfStatement	if ( ! keyids )		3432876	1					
ANR	3432896	Condition	! keyids	2364:5:70744:70750	3432876	0	True				
ANR	3432897	UnaryOperationExpression	! keyids		3432876	0					
ANR	3432898	UnaryOperator	!		3432876	0					
ANR	3432899	Identifier	keyids		3432876	1					
ANR	3432900	CompoundStatement		3:15:84:84	3432876	1					
ANR	3432901	ReturnStatement	return ;	2365:2:70758:70764	3432876	0	True				
ANR	3432902	ExpressionStatement	keyids -> rewind ( )	2368:1:70771:70787	3432876	2	True				
ANR	3432903	CallExpression	keyids -> rewind ( )		3432876	0					
ANR	3432904	Callee	keyids -> rewind		3432876	0					
ANR	3432905	PtrMemberAccess	keyids -> rewind		3432876	0					
ANR	3432906	Identifier	keyids		3432876	0					
ANR	3432907	Identifier	rewind		3432876	1					
ANR	3432908	ArgumentList			3432876	1					
ANR	3432909	IdentifierDeclStatement	char const * keyid ;	2369:1:70790:70807	3432876	3	True				
ANR	3432910	IdentifierDecl	* keyid		3432876	0					
ANR	3432911	IdentifierDeclType	char const *		3432876	0					
ANR	3432912	Identifier	keyid		3432876	1					
ANR	3432913	WhileStatement	while ( ( keyid = keyids -> next ( ) ) )		3432876	4					
ANR	3432914	Condition	keyid = keyids -> next ( )	2370:8:70817:70838	3432876	0	True				
ANR	3432915	AssignmentExpression	keyid = keyids -> next ( )		3432876	0		=			
ANR	3432916	Identifier	keyid		3432876	0					
ANR	3432917	CallExpression	keyids -> next ( )		3432876	1					
ANR	3432918	Callee	keyids -> next		3432876	0					
ANR	3432919	PtrMemberAccess	keyids -> next		3432876	0					
ANR	3432920	Identifier	keyids		3432876	0					
ANR	3432921	Identifier	next		3432876	1					
ANR	3432922	ArgumentList			3432876	1					
ANR	3432923	CompoundStatement		9:33:172:172	3432876	1					
ANR	3432924	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3432876	0					
ANR	3432925	Condition	DebugFlags & D_FULLDEBUG	2371:6:70850:70873	3432876	0	True				
ANR	3432926	BitAndExpression	DebugFlags & D_FULLDEBUG		3432876	0		&			
ANR	3432927	Identifier	DebugFlags		3432876	0					
ANR	3432928	Identifier	D_FULLDEBUG		3432876	1					
ANR	3432929	CompoundStatement		10:32:206:206	3432876	1					
ANR	3432930	ExpressionStatement	"dprintf ( D_SECURITY , ""KEYCACHE: removing session %s for %s pid %d\\n"" , keyid , parent , pid )"	2372:3:70881:70970	3432876	0	True				
ANR	3432931	CallExpression	"dprintf ( D_SECURITY , ""KEYCACHE: removing session %s for %s pid %d\\n"" , keyid , parent , pid )"		3432876	0					
ANR	3432932	Callee	dprintf		3432876	0					
ANR	3432933	Identifier	dprintf		3432876	0					
ANR	3432934	ArgumentList	D_SECURITY		3432876	1					
ANR	3432935	Argument	D_SECURITY		3432876	0					
ANR	3432936	Identifier	D_SECURITY		3432876	0					
ANR	3432937	Argument	"""KEYCACHE: removing session %s for %s pid %d\\n"""		3432876	1					
ANR	3432938	PrimaryExpression	"""KEYCACHE: removing session %s for %s pid %d\\n"""		3432876	0					
ANR	3432939	Argument	keyid		3432876	2					
ANR	3432940	Identifier	keyid		3432876	0					
ANR	3432941	Argument	parent		3432876	3					
ANR	3432942	Identifier	parent		3432876	0					
ANR	3432943	Argument	pid		3432876	4					
ANR	3432944	Identifier	pid		3432876	0					
ANR	3432945	ExpressionStatement	invalidateKey ( keyid )	2374:2:70978:70998	3432876	1	True				
ANR	3432946	CallExpression	invalidateKey ( keyid )		3432876	0					
ANR	3432947	Callee	invalidateKey		3432876	0					
ANR	3432948	Identifier	invalidateKey		3432876	0					
ANR	3432949	ArgumentList	keyid		3432876	1					
ANR	3432950	Argument	keyid		3432876	0					
ANR	3432951	Identifier	keyid		3432876	0					
ANR	3432952	Statement	delete	2376:1:71004:71009	3432876	5	True				
ANR	3432953	ExpressionStatement	keyids	2376:8:71011:71017	3432876	6	True				
ANR	3432954	Identifier	keyids		3432876	0					
ANR	3432955	ReturnType	void		3432876	1					
ANR	3432956	Identifier	SecMan :: invalidateByParentAndPid		3432876	2					
ANR	3432957	ParameterList	"const char * parent , int pid"		3432876	3					
ANR	3432958	Parameter	const char * parent	2362:33:70639:70657	3432876	0	True				
ANR	3432959	ParameterType	const char *		3432876	0					
ANR	3432960	Identifier	parent		3432876	1					
ANR	3432961	Parameter	int pid	2362:54:70660:70666	3432876	1	True				
ANR	3432962	ParameterType	int		3432876	0					
ANR	3432963	Identifier	pid		3432876	1					
ANR	3432964	CFGEntryNode	ENTRY		3432876		True				
ANR	3432965	CFGExitNode	EXIT		3432876		True				
ANR	3432966	Symbol	* session_cache		3432876						
ANR	3432967	Symbol	parent		3432876						
ANR	3432968	Symbol	session_cache		3432876						
ANR	3432969	Symbol	keyids -> next		3432876						
ANR	3432970	Symbol	D_SECURITY		3432876						
ANR	3432971	Symbol	keyids		3432876						
ANR	3432972	Symbol	* keyids		3432876						
ANR	3432973	Symbol	keyid		3432876						
ANR	3432974	Symbol	pid		3432876						
ANR	3432975	Symbol	DebugFlags		3432876						
ANR	3432976	Symbol	D_FULLDEBUG		3432876						
ANR	3432977	Symbol	session_cache -> getKeysForProcess		3432876						
ANR	3432978	Function	SecMan :: invalidateKey	2379:0:71022:72036							
ANR	3432979	FunctionDef	SecMan :: invalidateKey (const char * key_id)		3432978	0					
ANR	3432980	CompoundStatement		2380:0:71072:72036	3432978	0					
ANR	3432981	IdentifierDeclStatement	bool removed = true ;	2381:4:71078:71097	3432978	0	True				
ANR	3432982	IdentifierDecl	removed = true		3432978	0					
ANR	3432983	IdentifierDeclType	bool		3432978	0					
ANR	3432984	Identifier	removed		3432978	1					
ANR	3432985	AssignmentExpression	removed = true		3432978	2		=			
ANR	3432986	Identifier	true		3432978	0					
ANR	3432987	Identifier	true		3432978	1					
ANR	3432988	IdentifierDeclStatement	KeyCacheEntry * keyEntry = NULL ;	2382:4:71103:71134	3432978	1	True				
ANR	3432989	IdentifierDecl	* keyEntry = NULL		3432978	0					
ANR	3432990	IdentifierDeclType	KeyCacheEntry *		3432978	0					
ANR	3432991	Identifier	keyEntry		3432978	1					
ANR	3432992	AssignmentExpression	* keyEntry = NULL		3432978	2		=			
ANR	3432993	Identifier	NULL		3432978	0					
ANR	3432994	Identifier	NULL		3432978	1					
ANR	3432995	IfStatement	if ( session_cache )		3432978	2					
ANR	3432996	Condition	session_cache	2385:5:71205:71217	3432978	0	True				
ANR	3432997	Identifier	session_cache		3432978	0					
ANR	3432998	CompoundStatement		6:20:147:147	3432978	1					
ANR	3432999	ExpressionStatement	"session_cache -> lookup ( key_id , keyEntry )"	2387:8:71231:71270	3432978	0	True				
ANR	3433000	CallExpression	"session_cache -> lookup ( key_id , keyEntry )"		3432978	0					
ANR	3433001	Callee	session_cache -> lookup		3432978	0					
ANR	3433002	PtrMemberAccess	session_cache -> lookup		3432978	0					
ANR	3433003	Identifier	session_cache		3432978	0					
ANR	3433004	Identifier	lookup		3432978	1					
ANR	3433005	ArgumentList	key_id		3432978	1					
ANR	3433006	Argument	key_id		3432978	0					
ANR	3433007	Identifier	key_id		3432978	0					
ANR	3433008	Argument	keyEntry		3432978	1					
ANR	3433009	Identifier	keyEntry		3432978	0					
ANR	3433010	IfStatement	if ( keyEntry && keyEntry -> expiration ( ) <= time ( NULL ) )		3432978	1					
ANR	3433011	Condition	keyEntry && keyEntry -> expiration ( ) <= time ( NULL )	2389:6:71279:71326	3432978	0	True				
ANR	3433012	AndExpression	keyEntry && keyEntry -> expiration ( ) <= time ( NULL )		3432978	0		&&			
ANR	3433013	Identifier	keyEntry		3432978	0					
ANR	3433014	RelationalExpression	keyEntry -> expiration ( ) <= time ( NULL )		3432978	1		<=			
ANR	3433015	CallExpression	keyEntry -> expiration ( )		3432978	0					
ANR	3433016	Callee	keyEntry -> expiration		3432978	0					
ANR	3433017	PtrMemberAccess	keyEntry -> expiration		3432978	0					
ANR	3433018	Identifier	keyEntry		3432978	0					
ANR	3433019	Identifier	expiration		3432978	1					
ANR	3433020	ArgumentList			3432978	1					
ANR	3433021	CallExpression	time ( NULL )		3432978	1					
ANR	3433022	Callee	time		3432978	0					
ANR	3433023	Identifier	time		3432978	0					
ANR	3433024	ArgumentList	NULL		3432978	1					
ANR	3433025	Argument	NULL		3432978	0					
ANR	3433026	Identifier	NULL		3432978	0					
ANR	3433027	CompoundStatement		10:57:257:257	3432978	1					
ANR	3433028	ExpressionStatement	"dprintf ( D_SECURITY , ""DC_INVALIDATE_KEY: security session %s %s expired.\\n"" , key_id , keyEntry -> expirationType ( ) )"	2390:3:71335:71460	3432978	0	True				
ANR	3433029	CallExpression	"dprintf ( D_SECURITY , ""DC_INVALIDATE_KEY: security session %s %s expired.\\n"" , key_id , keyEntry -> expirationType ( ) )"		3432978	0					
ANR	3433030	Callee	dprintf		3432978	0					
ANR	3433031	Identifier	dprintf		3432978	0					
ANR	3433032	ArgumentList	D_SECURITY		3432978	1					
ANR	3433033	Argument	D_SECURITY		3432978	0					
ANR	3433034	Identifier	D_SECURITY		3432978	0					
ANR	3433035	Argument	"""DC_INVALIDATE_KEY: security session %s %s expired.\\n"""		3432978	1					
ANR	3433036	PrimaryExpression	"""DC_INVALIDATE_KEY: security session %s %s expired.\\n"""		3432978	0					
ANR	3433037	Argument	key_id		3432978	2					
ANR	3433038	Identifier	key_id		3432978	0					
ANR	3433039	Argument	keyEntry -> expirationType ( )		3432978	3					
ANR	3433040	CallExpression	keyEntry -> expirationType ( )		3432978	0					
ANR	3433041	Callee	keyEntry -> expirationType		3432978	0					
ANR	3433042	PtrMemberAccess	keyEntry -> expirationType		3432978	0					
ANR	3433043	Identifier	keyEntry		3432978	0					
ANR	3433044	Identifier	expirationType		3432978	1					
ANR	3433045	ArgumentList			3432978	1					
ANR	3433046	ExpressionStatement	remove_commands ( keyEntry )	2395:8:71475:71500	3432978	2	True				
ANR	3433047	CallExpression	remove_commands ( keyEntry )		3432978	0					
ANR	3433048	Callee	remove_commands		3432978	0					
ANR	3433049	Identifier	remove_commands		3432978	0					
ANR	3433050	ArgumentList	keyEntry		3432978	1					
ANR	3433051	Argument	keyEntry		3432978	0					
ANR	3433052	Identifier	keyEntry		3432978	0					
ANR	3433053	IfStatement	if ( session_cache -> remove ( key_id ) )		3432978	3					
ANR	3433054	Condition	session_cache -> remove ( key_id )	2398:6:71543:71571	3432978	0	True				
ANR	3433055	CallExpression	session_cache -> remove ( key_id )		3432978	0					
ANR	3433056	Callee	session_cache -> remove		3432978	0					
ANR	3433057	PtrMemberAccess	session_cache -> remove		3432978	0					
ANR	3433058	Identifier	session_cache		3432978	0					
ANR	3433059	Identifier	remove		3432978	1					
ANR	3433060	ArgumentList	key_id		3432978	1					
ANR	3433061	Argument	key_id		3432978	0					
ANR	3433062	Identifier	key_id		3432978	0					
ANR	3433063	CompoundStatement		19:37:501:501	3432978	1					
ANR	3433064	ExpressionStatement	"dprintf ( D_SECURITY , ""DC_INVALIDATE_KEY: removed key id %s.\\n"" , key_id )"	2399:3:71579:71697	3432978	0	True				
ANR	3433065	CallExpression	"dprintf ( D_SECURITY , ""DC_INVALIDATE_KEY: removed key id %s.\\n"" , key_id )"		3432978	0					
ANR	3433066	Callee	dprintf		3432978	0					
ANR	3433067	Identifier	dprintf		3432978	0					
ANR	3433068	ArgumentList	D_SECURITY		3432978	1					
ANR	3433069	Argument	D_SECURITY		3432978	0					
ANR	3433070	Identifier	D_SECURITY		3432978	0					
ANR	3433071	Argument	"""DC_INVALIDATE_KEY: removed key id %s.\\n"""		3432978	1					
ANR	3433072	PrimaryExpression	"""DC_INVALIDATE_KEY: removed key id %s.\\n"""		3432978	0					
ANR	3433073	Argument	key_id		3432978	2					
ANR	3433074	Identifier	key_id		3432978	0					
ANR	3433075	ElseStatement	else		3432978	0					
ANR	3433076	CompoundStatement		23:9:635:635	3432978	0					
ANR	3433077	ExpressionStatement	"dprintf ( D_SECURITY , ""DC_INVALIDATE_KEY: ignoring request to invalidate non-existant key %s.\\n"" , key_id )"	2403:3:71713:71864	3432978	0	True				
ANR	3433078	CallExpression	"dprintf ( D_SECURITY , ""DC_INVALIDATE_KEY: ignoring request to invalidate non-existant key %s.\\n"" , key_id )"		3432978	0					
ANR	3433079	Callee	dprintf		3432978	0					
ANR	3433080	Identifier	dprintf		3432978	0					
ANR	3433081	ArgumentList	D_SECURITY		3432978	1					
ANR	3433082	Argument	D_SECURITY		3432978	0					
ANR	3433083	Identifier	D_SECURITY		3432978	0					
ANR	3433084	Argument	"""DC_INVALIDATE_KEY: ignoring request to invalidate non-existant key %s.\\n"""		3432978	1					
ANR	3433085	PrimaryExpression	"""DC_INVALIDATE_KEY: ignoring request to invalidate non-existant key %s.\\n"""		3432978	0					
ANR	3433086	Argument	key_id		3432978	2					
ANR	3433087	Identifier	key_id		3432978	0					
ANR	3433088	ElseStatement	else		3432978	0					
ANR	3433089	CompoundStatement		28:8:805:805	3432978	0					
ANR	3433090	ExpressionStatement	"dprintf ( D_ALWAYS , ""DC_INVALIDATE_KEY: did not remove %s, no KeyCache exists!\\n"" , key_id )"	2408:2:71882:72010	3432978	0	True				
ANR	3433091	CallExpression	"dprintf ( D_ALWAYS , ""DC_INVALIDATE_KEY: did not remove %s, no KeyCache exists!\\n"" , key_id )"		3432978	0					
ANR	3433092	Callee	dprintf		3432978	0					
ANR	3433093	Identifier	dprintf		3432978	0					
ANR	3433094	ArgumentList	D_ALWAYS		3432978	1					
ANR	3433095	Argument	D_ALWAYS		3432978	0					
ANR	3433096	Identifier	D_ALWAYS		3432978	0					
ANR	3433097	Argument	"""DC_INVALIDATE_KEY: did not remove %s, no KeyCache exists!\\n"""		3432978	1					
ANR	3433098	PrimaryExpression	"""DC_INVALIDATE_KEY: did not remove %s, no KeyCache exists!\\n"""		3432978	0					
ANR	3433099	Argument	key_id		3432978	2					
ANR	3433100	Identifier	key_id		3432978	0					
ANR	3433101	ReturnStatement	return removed ;	2413:4:72020:72034	3432978	3	True				
ANR	3433102	Identifier	removed		3432978	0					
ANR	3433103	ReturnType	bool		3432978	1					
ANR	3433104	Identifier	SecMan :: invalidateKey		3432978	2					
ANR	3433105	ParameterList	const char * key_id		3432978	3					
ANR	3433106	Parameter	const char * key_id	2379:29:71051:71069	3432978	0	True				
ANR	3433107	ParameterType	const char *		3432978	0					
ANR	3433108	Identifier	key_id		3432978	1					
ANR	3433109	CFGEntryNode	ENTRY		3432978		True				
ANR	3433110	CFGExitNode	EXIT		3432978		True				
ANR	3433111	Symbol	* session_cache		3432978						
ANR	3433112	Symbol	* keyEntry		3432978						
ANR	3433113	Symbol	NULL		3432978						
ANR	3433114	Symbol	D_SECURITY		3432978						
ANR	3433115	Symbol	key_id		3432978						
ANR	3433116	Symbol	D_ALWAYS		3432978						
ANR	3433117	Symbol	keyEntry -> expirationType		3432978						
ANR	3433118	Symbol	session_cache		3432978						
ANR	3433119	Symbol	removed		3432978						
ANR	3433120	Symbol	session_cache -> remove		3432978						
ANR	3433121	Symbol	true		3432978						
ANR	3433122	Symbol	time		3432978						
ANR	3433123	Symbol	keyEntry -> expiration		3432978						
ANR	3433124	Symbol	keyEntry		3432978						
ANR	3433125	Function	SecMan :: remove_commands	2416:0:72039:72865							
ANR	3433126	FunctionDef	SecMan :: remove_commands (KeyCacheEntry * keyEntry)		3433125	0					
ANR	3433127	CompoundStatement		2417:0:72096:72865	3433125	0					
ANR	3433128	IfStatement	if ( keyEntry )		3433125	0					
ANR	3433129	Condition	keyEntry	2418:8:72106:72113	3433125	0	True				
ANR	3433130	Identifier	keyEntry		3433125	0					
ANR	3433131	CompoundStatement		5:2:133:146	3433125	1					
ANR	3433132	IdentifierDeclStatement	char * commands = NULL ;	2419:8:72126:72148	3433125	0	True				
ANR	3433133	IdentifierDecl	* commands = NULL		3433125	0					
ANR	3433134	IdentifierDeclType	char *		3433125	0					
ANR	3433135	Identifier	commands		3433125	1					
ANR	3433136	AssignmentExpression	* commands = NULL		3433125	2		=			
ANR	3433137	Identifier	NULL		3433125	0					
ANR	3433138	Identifier	NULL		3433125	1					
ANR	3433139	ExpressionStatement	"keyEntry -> policy ( ) -> LookupString ( ATTR_SEC_VALID_COMMANDS , & commands )"	2420:8:72158:72226	3433125	1	True				
ANR	3433140	CallExpression	"keyEntry -> policy ( ) -> LookupString ( ATTR_SEC_VALID_COMMANDS , & commands )"		3433125	0					
ANR	3433141	Callee	keyEntry -> policy ( ) -> LookupString		3433125	0					
ANR	3433142	PtrMemberAccess	keyEntry -> policy ( ) -> LookupString		3433125	0					
ANR	3433143	CallExpression	keyEntry -> policy ( )		3433125	0					
ANR	3433144	Callee	keyEntry -> policy		3433125	0					
ANR	3433145	PtrMemberAccess	keyEntry -> policy		3433125	0					
ANR	3433146	Identifier	keyEntry		3433125	0					
ANR	3433147	Identifier	policy		3433125	1					
ANR	3433148	ArgumentList			3433125	1					
ANR	3433149	Identifier	LookupString		3433125	1					
ANR	3433150	ArgumentList	ATTR_SEC_VALID_COMMANDS		3433125	1					
ANR	3433151	Argument	ATTR_SEC_VALID_COMMANDS		3433125	0					
ANR	3433152	Identifier	ATTR_SEC_VALID_COMMANDS		3433125	0					
ANR	3433153	Argument	& commands		3433125	1					
ANR	3433154	UnaryOperationExpression	& commands		3433125	0					
ANR	3433155	UnaryOperator	&		3433125	0					
ANR	3433156	Identifier	commands		3433125	1					
ANR	3433157	IdentifierDeclStatement	MyString addr ;	2421:2:72230:72243	3433125	2	True				
ANR	3433158	IdentifierDecl	addr		3433125	0					
ANR	3433159	IdentifierDeclType	MyString		3433125	0					
ANR	3433160	Identifier	addr		3433125	1					
ANR	3433161	IfStatement	if ( keyEntry -> addr ( ) )		3433125	3					
ANR	3433162	Condition	keyEntry -> addr ( )	2422:6:72251:72266	3433125	0	True				
ANR	3433163	CallExpression	keyEntry -> addr ( )		3433125	0					
ANR	3433164	Callee	keyEntry -> addr		3433125	0					
ANR	3433165	PtrMemberAccess	keyEntry -> addr		3433125	0					
ANR	3433166	Identifier	keyEntry		3433125	0					
ANR	3433167	Identifier	addr		3433125	1					
ANR	3433168	ArgumentList			3433125	1					
ANR	3433169	ExpressionStatement	addr = keyEntry -> addr ( ) -> to_sinful ( )	2423:3:72272:72308	3433125	1	True				
ANR	3433170	AssignmentExpression	addr = keyEntry -> addr ( ) -> to_sinful ( )		3433125	0		=			
ANR	3433171	Identifier	addr		3433125	0					
ANR	3433172	CallExpression	keyEntry -> addr ( ) -> to_sinful ( )		3433125	1					
ANR	3433173	Callee	keyEntry -> addr ( ) -> to_sinful		3433125	0					
ANR	3433174	PtrMemberAccess	keyEntry -> addr ( ) -> to_sinful		3433125	0					
ANR	3433175	CallExpression	keyEntry -> addr ( )		3433125	0					
ANR	3433176	Callee	keyEntry -> addr		3433125	0					
ANR	3433177	PtrMemberAccess	keyEntry -> addr		3433125	0					
ANR	3433178	Identifier	keyEntry		3433125	0					
ANR	3433179	Identifier	addr		3433125	1					
ANR	3433180	ArgumentList			3433125	1					
ANR	3433181	Identifier	to_sinful		3433125	1					
ANR	3433182	ArgumentList			3433125	1					
ANR	3433183	IfStatement	if ( commands )		3433125	4					
ANR	3433184	Condition	commands	2426:12:72379:72386	3433125	0	True				
ANR	3433185	Identifier	commands		3433125	0					
ANR	3433186	CompoundStatement		12:12:336:365	3433125	1					
ANR	3433187	IdentifierDeclStatement	char keybuf [ 128 ] ;	2427:12:72403:72419	3433125	0	True				
ANR	3433188	IdentifierDecl	keybuf [ 128 ]		3433125	0					
ANR	3433189	IdentifierDeclType	char [ 128 ]		3433125	0					
ANR	3433190	Identifier	keybuf		3433125	1					
ANR	3433191	PrimaryExpression	128		3433125	2					
ANR	3433192	IdentifierDeclStatement	StringList cmd_list ( commands ) ;	2428:12:72433:72462	3433125	1	True				
ANR	3433193	IdentifierDecl	cmd_list ( commands )		3433125	0					
ANR	3433194	IdentifierDeclType	StringList		3433125	0					
ANR	3433195	Identifier	cmd_list		3433125	1					
ANR	3433196	Identifier	commands		3433125	2					
ANR	3433197	ExpressionStatement	free ( commands )	2429:12:72476:72490	3433125	2	True				
ANR	3433198	CallExpression	free ( commands )		3433125	0					
ANR	3433199	Callee	free		3433125	0					
ANR	3433200	Identifier	free		3433125	0					
ANR	3433201	ArgumentList	commands		3433125	1					
ANR	3433202	Argument	commands		3433125	0					
ANR	3433203	Identifier	commands		3433125	0					
ANR	3433204	IfStatement	if ( command_map )		3433125	3					
ANR	3433205	Condition	command_map	2431:16:72517:72527	3433125	0	True				
ANR	3433206	Identifier	command_map		3433125	0					
ANR	3433207	CompoundStatement		17:16:486:503	3433125	1					
ANR	3433208	ExpressionStatement	cmd_list . rewind ( )	2432:16:72548:72565	3433125	0	True				
ANR	3433209	CallExpression	cmd_list . rewind ( )		3433125	0					
ANR	3433210	Callee	cmd_list . rewind		3433125	0					
ANR	3433211	MemberAccess	cmd_list . rewind		3433125	0					
ANR	3433212	Identifier	cmd_list		3433125	0					
ANR	3433213	Identifier	rewind		3433125	1					
ANR	3433214	ArgumentList			3433125	1					
ANR	3433215	IdentifierDeclStatement	char * cmd = NULL ;	2433:16:72583:72600	3433125	1	True				
ANR	3433216	IdentifierDecl	* cmd = NULL		3433125	0					
ANR	3433217	IdentifierDeclType	char *		3433125	0					
ANR	3433218	Identifier	cmd		3433125	1					
ANR	3433219	AssignmentExpression	* cmd = NULL		3433125	2		=			
ANR	3433220	Identifier	NULL		3433125	0					
ANR	3433221	Identifier	NULL		3433125	1					
ANR	3433222	WhileStatement	while ( ( cmd = cmd_list . next ( ) ) )		3433125	2					
ANR	3433223	Condition	cmd = cmd_list . next ( )	2434:24:72626:72648	3433125	0	True				
ANR	3433224	AssignmentExpression	cmd = cmd_list . next ( )		3433125	0		=			
ANR	3433225	Identifier	cmd		3433125	0					
ANR	3433226	CallExpression	cmd_list . next ( )		3433125	1					
ANR	3433227	Callee	cmd_list . next		3433125	0					
ANR	3433228	MemberAccess	cmd_list . next		3433125	0					
ANR	3433229	Identifier	cmd_list		3433125	0					
ANR	3433230	Identifier	next		3433125	1					
ANR	3433231	ArgumentList			3433125	1					
ANR	3433232	CompoundStatement		18:50:555:555	3433125	1					
ANR	3433233	ExpressionStatement	"memset ( keybuf , 0 , 128 )"	2435:20:72674:72696	3433125	0	True				
ANR	3433234	CallExpression	"memset ( keybuf , 0 , 128 )"		3433125	0					
ANR	3433235	Callee	memset		3433125	0					
ANR	3433236	Identifier	memset		3433125	0					
ANR	3433237	ArgumentList	keybuf		3433125	1					
ANR	3433238	Argument	keybuf		3433125	0					
ANR	3433239	Identifier	keybuf		3433125	0					
ANR	3433240	Argument	0		3433125	1					
ANR	3433241	PrimaryExpression	0		3433125	0					
ANR	3433242	Argument	128		3433125	2					
ANR	3433243	PrimaryExpression	128		3433125	0					
ANR	3433244	ExpressionStatement	"sprintf ( keybuf , ""{%s,<%s>}"" , addr . Value ( ) , cmd )"	2436:20:72718:72766	3433125	1	True				
ANR	3433245	CallExpression	"sprintf ( keybuf , ""{%s,<%s>}"" , addr . Value ( ) , cmd )"		3433125	0					
ANR	3433246	Callee	sprintf		3433125	0					
ANR	3433247	Identifier	sprintf		3433125	0					
ANR	3433248	ArgumentList	keybuf		3433125	1					
ANR	3433249	Argument	keybuf		3433125	0					
ANR	3433250	Identifier	keybuf		3433125	0					
ANR	3433251	Argument	"""{%s,<%s>}"""		3433125	1					
ANR	3433252	PrimaryExpression	"""{%s,<%s>}"""		3433125	0					
ANR	3433253	Argument	addr . Value ( )		3433125	2					
ANR	3433254	CallExpression	addr . Value ( )		3433125	0					
ANR	3433255	Callee	addr . Value		3433125	0					
ANR	3433256	MemberAccess	addr . Value		3433125	0					
ANR	3433257	Identifier	addr		3433125	0					
ANR	3433258	Identifier	Value		3433125	1					
ANR	3433259	ArgumentList			3433125	1					
ANR	3433260	Argument	cmd		3433125	3					
ANR	3433261	Identifier	cmd		3433125	0					
ANR	3433262	ExpressionStatement	command_map -> remove ( keybuf )	2437:20:72788:72815	3433125	2	True				
ANR	3433263	CallExpression	command_map -> remove ( keybuf )		3433125	0					
ANR	3433264	Callee	command_map -> remove		3433125	0					
ANR	3433265	PtrMemberAccess	command_map -> remove		3433125	0					
ANR	3433266	Identifier	command_map		3433125	0					
ANR	3433267	Identifier	remove		3433125	1					
ANR	3433268	ArgumentList	keybuf		3433125	1					
ANR	3433269	Argument	keybuf		3433125	0					
ANR	3433270	Identifier	keybuf		3433125	0					
ANR	3433271	ReturnType	void		3433125	1					
ANR	3433272	Identifier	SecMan :: remove_commands		3433125	2					
ANR	3433273	ParameterList	KeyCacheEntry * keyEntry		3433125	3					
ANR	3433274	Parameter	KeyCacheEntry * keyEntry	2416:31:72070:72093	3433125	0	True				
ANR	3433275	ParameterType	KeyCacheEntry *		3433125	0					
ANR	3433276	Identifier	keyEntry		3433125	1					
ANR	3433277	CFGEntryNode	ENTRY		3433125		True				
ANR	3433278	CFGExitNode	EXIT		3433125		True				
ANR	3433279	Symbol	ATTR_SEC_VALID_COMMANDS		3433125						
ANR	3433280	Symbol	* keyEntry		3433125						
ANR	3433281	Symbol	NULL		3433125						
ANR	3433282	Symbol	cmd_list . next		3433125						
ANR	3433283	Symbol	command_map		3433125						
ANR	3433284	Symbol	keyEntry -> addr ( ) -> to_sinful		3433125						
ANR	3433285	Symbol	& commands		3433125						
ANR	3433286	Symbol	addr . Value		3433125						
ANR	3433287	Symbol	keybuf		3433125						
ANR	3433288	Symbol	cmd_list		3433125						
ANR	3433289	Symbol	keyEntry -> policy		3433125						
ANR	3433290	Symbol	keyEntry -> addr		3433125						
ANR	3433291	Symbol	cmd		3433125						
ANR	3433292	Symbol	addr		3433125						
ANR	3433293	Symbol	* * keyEntry		3433125						
ANR	3433294	Symbol	keyEntry		3433125						
ANR	3433295	Symbol	commands		3433125						
ANR	3433296	Symbol	* keyEntry -> addr		3433125						
ANR	3433297	Function	SecMan :: sec_char_to_auth_method	2444:0:72868:73611							
ANR	3433298	FunctionDef	SecMan :: sec_char_to_auth_method (char * method)		3433297	0					
ANR	3433299	CompoundStatement		2445:48:72920:73611	3433297	0					
ANR	3433300	IfStatement	"if ( ! strcasecmp ( method , ""SSL"" ) )"		3433297	0					
ANR	3433301	Condition	"! strcasecmp ( method , ""SSL"" )"	2446:8:72930:72957	3433297	0	True				
ANR	3433302	UnaryOperationExpression	"! strcasecmp ( method , ""SSL"" )"		3433297	0					
ANR	3433303	UnaryOperator	!		3433297	0					
ANR	3433304	CallExpression	"strcasecmp ( method , ""SSL"" )"		3433297	1					
ANR	3433305	Callee	strcasecmp		3433297	0					
ANR	3433306	Identifier	strcasecmp		3433297	0					
ANR	3433307	ArgumentList	method		3433297	1					
ANR	3433308	Argument	method		3433297	0					
ANR	3433309	Identifier	method		3433297	0					
ANR	3433310	Argument	"""SSL"""		3433297	1					
ANR	3433311	PrimaryExpression	"""SSL"""		3433297	0					
ANR	3433312	CompoundStatement		2:40:41:41	3433297	1					
ANR	3433313	ReturnStatement	return CAUTH_SSL ;	2447:8:72972:72988	3433297	0	True				
ANR	3433314	Identifier	CAUTH_SSL		3433297	0					
ANR	3433315	ElseStatement	else		3433297	0					
ANR	3433316	IfStatement	"if ( ! strcasecmp ( method , ""GSI"" ) )"		3433297	0					
ANR	3433317	Condition	"! strcasecmp ( method , ""GSI"" )"	2448:15:73005:73032	3433297	0	True				
ANR	3433318	UnaryOperationExpression	"! strcasecmp ( method , ""GSI"" )"		3433297	0					
ANR	3433319	UnaryOperator	!		3433297	0					
ANR	3433320	CallExpression	"strcasecmp ( method , ""GSI"" )"		3433297	1					
ANR	3433321	Callee	strcasecmp		3433297	0					
ANR	3433322	Identifier	strcasecmp		3433297	0					
ANR	3433323	ArgumentList	method		3433297	1					
ANR	3433324	Argument	method		3433297	0					
ANR	3433325	Identifier	method		3433297	0					
ANR	3433326	Argument	"""GSI"""		3433297	1					
ANR	3433327	PrimaryExpression	"""GSI"""		3433297	0					
ANR	3433328	CompoundStatement		4:47:116:116	3433297	1					
ANR	3433329	ReturnStatement	return CAUTH_GSI ;	2449:2:73041:73057	3433297	0	True				
ANR	3433330	Identifier	CAUTH_GSI		3433297	0					
ANR	3433331	ElseStatement	else		3433297	0					
ANR	3433332	IfStatement	"if ( ! strcasecmp ( method , ""NTSSPI"" ) )"		3433297	0					
ANR	3433333	Condition	"! strcasecmp ( method , ""NTSSPI"" )"	2450:13:73072:73102	3433297	0	True				
ANR	3433334	UnaryOperationExpression	"! strcasecmp ( method , ""NTSSPI"" )"		3433297	0					
ANR	3433335	UnaryOperator	!		3433297	0					
ANR	3433336	CallExpression	"strcasecmp ( method , ""NTSSPI"" )"		3433297	1					
ANR	3433337	Callee	strcasecmp		3433297	0					
ANR	3433338	Identifier	strcasecmp		3433297	0					
ANR	3433339	ArgumentList	method		3433297	1					
ANR	3433340	Argument	method		3433297	0					
ANR	3433341	Identifier	method		3433297	0					
ANR	3433342	Argument	"""NTSSPI"""		3433297	1					
ANR	3433343	PrimaryExpression	"""NTSSPI"""		3433297	0					
ANR	3433344	CompoundStatement		6:47:185:185	3433297	1					
ANR	3433345	ReturnStatement	return CAUTH_NTSSPI ;	2451:2:73110:73129	3433297	0	True				
ANR	3433346	Identifier	CAUTH_NTSSPI		3433297	0					
ANR	3433347	ElseStatement	else		3433297	0					
ANR	3433348	IfStatement	"if ( ! strcasecmp ( method , ""PASSWORD"" ) )"		3433297	0					
ANR	3433349	Condition	"! strcasecmp ( method , ""PASSWORD"" )"	2452:13:73144:73176	3433297	0	True				
ANR	3433350	UnaryOperationExpression	"! strcasecmp ( method , ""PASSWORD"" )"		3433297	0					
ANR	3433351	UnaryOperator	!		3433297	0					
ANR	3433352	CallExpression	"strcasecmp ( method , ""PASSWORD"" )"		3433297	1					
ANR	3433353	Callee	strcasecmp		3433297	0					
ANR	3433354	Identifier	strcasecmp		3433297	0					
ANR	3433355	ArgumentList	method		3433297	1					
ANR	3433356	Argument	method		3433297	0					
ANR	3433357	Identifier	method		3433297	0					
ANR	3433358	Argument	"""PASSWORD"""		3433297	1					
ANR	3433359	PrimaryExpression	"""PASSWORD"""		3433297	0					
ANR	3433360	CompoundStatement		8:49:259:259	3433297	1					
ANR	3433361	ReturnStatement	return CAUTH_PASSWORD ;	2453:2:73184:73205	3433297	0	True				
ANR	3433362	Identifier	CAUTH_PASSWORD		3433297	0					
ANR	3433363	ElseStatement	else		3433297	0					
ANR	3433364	IfStatement	"if ( ! strcasecmp ( method , ""FS"" ) )"		3433297	0					
ANR	3433365	Condition	"! strcasecmp ( method , ""FS"" )"	2454:13:73220:73246	3433297	0	True				
ANR	3433366	UnaryOperationExpression	"! strcasecmp ( method , ""FS"" )"		3433297	0					
ANR	3433367	UnaryOperator	!		3433297	0					
ANR	3433368	CallExpression	"strcasecmp ( method , ""FS"" )"		3433297	1					
ANR	3433369	Callee	strcasecmp		3433297	0					
ANR	3433370	Identifier	strcasecmp		3433297	0					
ANR	3433371	ArgumentList	method		3433297	1					
ANR	3433372	Argument	method		3433297	0					
ANR	3433373	Identifier	method		3433297	0					
ANR	3433374	Argument	"""FS"""		3433297	1					
ANR	3433375	PrimaryExpression	"""FS"""		3433297	0					
ANR	3433376	CompoundStatement		10:43:329:329	3433297	1					
ANR	3433377	ReturnStatement	return CAUTH_FILESYSTEM ;	2455:2:73254:73277	3433297	0	True				
ANR	3433378	Identifier	CAUTH_FILESYSTEM		3433297	0					
ANR	3433379	ElseStatement	else		3433297	0					
ANR	3433380	IfStatement	"if ( ! strcasecmp ( method , ""FS_REMOTE"" ) )"		3433297	0					
ANR	3433381	Condition	"! strcasecmp ( method , ""FS_REMOTE"" )"	2456:13:73292:73325	3433297	0	True				
ANR	3433382	UnaryOperationExpression	"! strcasecmp ( method , ""FS_REMOTE"" )"		3433297	0					
ANR	3433383	UnaryOperator	!		3433297	0					
ANR	3433384	CallExpression	"strcasecmp ( method , ""FS_REMOTE"" )"		3433297	1					
ANR	3433385	Callee	strcasecmp		3433297	0					
ANR	3433386	Identifier	strcasecmp		3433297	0					
ANR	3433387	ArgumentList	method		3433297	1					
ANR	3433388	Argument	method		3433297	0					
ANR	3433389	Identifier	method		3433297	0					
ANR	3433390	Argument	"""FS_REMOTE"""		3433297	1					
ANR	3433391	PrimaryExpression	"""FS_REMOTE"""		3433297	0					
ANR	3433392	CompoundStatement		12:50:408:408	3433297	1					
ANR	3433393	ReturnStatement	return CAUTH_FILESYSTEM_REMOTE ;	2457:2:73333:73363	3433297	0	True				
ANR	3433394	Identifier	CAUTH_FILESYSTEM_REMOTE		3433297	0					
ANR	3433395	ElseStatement	else		3433297	0					
ANR	3433396	IfStatement	"if ( ! strcasecmp ( method , ""KERBEROS"" ) )"		3433297	0					
ANR	3433397	Condition	"! strcasecmp ( method , ""KERBEROS"" )"	2458:13:73378:73410	3433297	0	True				
ANR	3433398	UnaryOperationExpression	"! strcasecmp ( method , ""KERBEROS"" )"		3433297	0					
ANR	3433399	UnaryOperator	!		3433297	0					
ANR	3433400	CallExpression	"strcasecmp ( method , ""KERBEROS"" )"		3433297	1					
ANR	3433401	Callee	strcasecmp		3433297	0					
ANR	3433402	Identifier	strcasecmp		3433297	0					
ANR	3433403	ArgumentList	method		3433297	1					
ANR	3433404	Argument	method		3433297	0					
ANR	3433405	Identifier	method		3433297	0					
ANR	3433406	Argument	"""KERBEROS"""		3433297	1					
ANR	3433407	PrimaryExpression	"""KERBEROS"""		3433297	0					
ANR	3433408	CompoundStatement		14:49:493:493	3433297	1					
ANR	3433409	ReturnStatement	return CAUTH_KERBEROS ;	2459:2:73418:73439	3433297	0	True				
ANR	3433410	Identifier	CAUTH_KERBEROS		3433297	0					
ANR	3433411	ElseStatement	else		3433297	0					
ANR	3433412	IfStatement	"if ( ! strcasecmp ( method , ""CLAIMTOBE"" ) )"		3433297	0					
ANR	3433413	Condition	"! strcasecmp ( method , ""CLAIMTOBE"" )"	2460:13:73454:73487	3433297	0	True				
ANR	3433414	UnaryOperationExpression	"! strcasecmp ( method , ""CLAIMTOBE"" )"		3433297	0					
ANR	3433415	UnaryOperator	!		3433297	0					
ANR	3433416	CallExpression	"strcasecmp ( method , ""CLAIMTOBE"" )"		3433297	1					
ANR	3433417	Callee	strcasecmp		3433297	0					
ANR	3433418	Identifier	strcasecmp		3433297	0					
ANR	3433419	ArgumentList	method		3433297	1					
ANR	3433420	Argument	method		3433297	0					
ANR	3433421	Identifier	method		3433297	0					
ANR	3433422	Argument	"""CLAIMTOBE"""		3433297	1					
ANR	3433423	PrimaryExpression	"""CLAIMTOBE"""		3433297	0					
ANR	3433424	CompoundStatement		16:50:570:570	3433297	1					
ANR	3433425	ReturnStatement	return CAUTH_CLAIMTOBE ;	2461:2:73495:73517	3433297	0	True				
ANR	3433426	Identifier	CAUTH_CLAIMTOBE		3433297	0					
ANR	3433427	ElseStatement	else		3433297	0					
ANR	3433428	IfStatement	"if ( ! strcasecmp ( method , ""ANONYMOUS"" ) )"		3433297	0					
ANR	3433429	Condition	"! strcasecmp ( method , ""ANONYMOUS"" )"	2462:13:73532:73565	3433297	0	True				
ANR	3433430	UnaryOperationExpression	"! strcasecmp ( method , ""ANONYMOUS"" )"		3433297	0					
ANR	3433431	UnaryOperator	!		3433297	0					
ANR	3433432	CallExpression	"strcasecmp ( method , ""ANONYMOUS"" )"		3433297	1					
ANR	3433433	Callee	strcasecmp		3433297	0					
ANR	3433434	Identifier	strcasecmp		3433297	0					
ANR	3433435	ArgumentList	method		3433297	1					
ANR	3433436	Argument	method		3433297	0					
ANR	3433437	Identifier	method		3433297	0					
ANR	3433438	Argument	"""ANONYMOUS"""		3433297	1					
ANR	3433439	PrimaryExpression	"""ANONYMOUS"""		3433297	0					
ANR	3433440	CompoundStatement		18:50:648:648	3433297	1					
ANR	3433441	ReturnStatement	return CAUTH_ANONYMOUS ;	2463:2:73573:73595	3433297	0	True				
ANR	3433442	Identifier	CAUTH_ANONYMOUS		3433297	0					
ANR	3433443	ReturnStatement	return 0 ;	2465:1:73601:73609	3433297	1	True				
ANR	3433444	PrimaryExpression	0		3433297	0					
ANR	3433445	ReturnType	int		3433297	1					
ANR	3433446	Identifier	SecMan :: sec_char_to_auth_method		3433297	2					
ANR	3433447	ParameterList	char * method		3433297	3					
ANR	3433448	Parameter	char * method	2445:33:72905:72916	3433297	0	True				
ANR	3433449	ParameterType	char *		3433297	0					
ANR	3433450	Identifier	method		3433297	1					
ANR	3433451	CFGEntryNode	ENTRY		3433297		True				
ANR	3433452	CFGExitNode	EXIT		3433297		True				
ANR	3433453	Symbol	CAUTH_ANONYMOUS		3433297						
ANR	3433454	Symbol	method		3433297						
ANR	3433455	Symbol	CAUTH_KERBEROS		3433297						
ANR	3433456	Symbol	CAUTH_FILESYSTEM		3433297						
ANR	3433457	Symbol	CAUTH_GSI		3433297						
ANR	3433458	Symbol	CAUTH_NTSSPI		3433297						
ANR	3433459	Symbol	CAUTH_FILESYSTEM_REMOTE		3433297						
ANR	3433460	Symbol	CAUTH_SSL		3433297						
ANR	3433461	Symbol	strcasecmp		3433297						
ANR	3433462	Symbol	CAUTH_PASSWORD		3433297						
ANR	3433463	Symbol	CAUTH_CLAIMTOBE		3433297						
ANR	3433464	Function	SecMan :: getAuthBitmask	2469:0:73615:73899							
ANR	3433465	FunctionDef	SecMan :: getAuthBitmask (const char * methods)		3433464	0					
ANR	3433466	CompoundStatement		2470:48:73667:73899	3433464	0					
ANR	3433467	IfStatement	if ( ! methods || ! * methods )		3433464	0					
ANR	3433468	Condition	! methods || ! * methods	2472:5:73675:73695	3433464	0	True				
ANR	3433469	OrExpression	! methods || ! * methods		3433464	0		||			
ANR	3433470	UnaryOperationExpression	! methods		3433464	0					
ANR	3433471	UnaryOperator	!		3433464	0					
ANR	3433472	Identifier	methods		3433464	1					
ANR	3433473	UnaryOperationExpression	! * methods		3433464	1					
ANR	3433474	UnaryOperator	!		3433464	0					
ANR	3433475	UnaryOperationExpression	* methods		3433464	1					
ANR	3433476	UnaryOperator	*		3433464	0					
ANR	3433477	Identifier	methods		3433464	1					
ANR	3433478	CompoundStatement		3:28:30:30	3433464	1					
ANR	3433479	ReturnStatement	return 0 ;	2473:2:73702:73710	3433464	0	True				
ANR	3433480	PrimaryExpression	0		3433464	0					
ANR	3433481	IdentifierDeclStatement	StringList server ( methods ) ;	2476:1:73717:73745	3433464	1	True				
ANR	3433482	IdentifierDecl	server ( methods )		3433464	0					
ANR	3433483	IdentifierDeclType	StringList		3433464	0					
ANR	3433484	Identifier	server		3433464	1					
ANR	3433485	Identifier	methods		3433464	2					
ANR	3433486	IdentifierDeclStatement	char * tmp = NULL ;	2477:1:73748:73764	3433464	2	True				
ANR	3433487	IdentifierDecl	* tmp = NULL		3433464	0					
ANR	3433488	IdentifierDeclType	char *		3433464	0					
ANR	3433489	Identifier	tmp		3433464	1					
ANR	3433490	AssignmentExpression	* tmp = NULL		3433464	2		=			
ANR	3433491	Identifier	NULL		3433464	0					
ANR	3433492	Identifier	NULL		3433464	1					
ANR	3433493	IdentifierDeclStatement	int retval = 0 ;	2478:1:73767:73781	3433464	3	True				
ANR	3433494	IdentifierDecl	retval = 0		3433464	0					
ANR	3433495	IdentifierDeclType	int		3433464	0					
ANR	3433496	Identifier	retval		3433464	1					
ANR	3433497	AssignmentExpression	retval = 0		3433464	2		=			
ANR	3433498	Identifier	retval		3433464	0					
ANR	3433499	PrimaryExpression	0		3433464	1					
ANR	3433500	ExpressionStatement	server . rewind ( )	2480:1:73785:73800	3433464	4	True				
ANR	3433501	CallExpression	server . rewind ( )		3433464	0					
ANR	3433502	Callee	server . rewind		3433464	0					
ANR	3433503	MemberAccess	server . rewind		3433464	0					
ANR	3433504	Identifier	server		3433464	0					
ANR	3433505	Identifier	rewind		3433464	1					
ANR	3433506	ArgumentList			3433464	1					
ANR	3433507	WhileStatement	while ( ( tmp = server . next ( ) ) )		3433464	5					
ANR	3433508	Condition	tmp = server . next ( )	2481:9:73811:73831	3433464	0	True				
ANR	3433509	AssignmentExpression	tmp = server . next ( )		3433464	0		=			
ANR	3433510	Identifier	tmp		3433464	0					
ANR	3433511	CallExpression	server . next ( )		3433464	1					
ANR	3433512	Callee	server . next		3433464	0					
ANR	3433513	MemberAccess	server . next		3433464	0					
ANR	3433514	Identifier	server		3433464	0					
ANR	3433515	Identifier	next		3433464	1					
ANR	3433516	ArgumentList			3433464	1					
ANR	3433517	CompoundStatement		12:33:167:167	3433464	1					
ANR	3433518	ExpressionStatement	retval |= sec_char_to_auth_method ( tmp )	2482:2:73839:73877	3433464	0	True				
ANR	3433519	AssignmentExpression	retval |= sec_char_to_auth_method ( tmp )		3433464	0		|=			
ANR	3433520	Identifier	retval		3433464	0					
ANR	3433521	CallExpression	sec_char_to_auth_method ( tmp )		3433464	1					
ANR	3433522	Callee	sec_char_to_auth_method		3433464	0					
ANR	3433523	Identifier	sec_char_to_auth_method		3433464	0					
ANR	3433524	ArgumentList	tmp		3433464	1					
ANR	3433525	Argument	tmp		3433464	0					
ANR	3433526	Identifier	tmp		3433464	0					
ANR	3433527	ReturnStatement	return retval ;	2485:1:73884:73897	3433464	6	True				
ANR	3433528	Identifier	retval		3433464	0					
ANR	3433529	ReturnType	int		3433464	1					
ANR	3433530	Identifier	SecMan :: getAuthBitmask		3433464	2					
ANR	3433531	ParameterList	const char * methods		3433464	3					
ANR	3433532	Parameter	const char * methods	2470:25:73644:73663	3433464	0	True				
ANR	3433533	ParameterType	const char *		3433464	0					
ANR	3433534	Identifier	methods		3433464	1					
ANR	3433535	CFGEntryNode	ENTRY		3433464		True				
ANR	3433536	CFGExitNode	EXIT		3433464		True				
ANR	3433537	Symbol	server		3433464						
ANR	3433538	Symbol	NULL		3433464						
ANR	3433539	Symbol	sec_char_to_auth_method		3433464						
ANR	3433540	Symbol	server . next		3433464						
ANR	3433541	Symbol	methods		3433464						
ANR	3433542	Symbol	tmp		3433464						
ANR	3433543	Symbol	* methods		3433464						
ANR	3433544	Symbol	retval		3433464						
ANR	3433545	Function	SecMan :: ReconcileMethodLists	2490:0:73904:74813							
ANR	3433546	FunctionDef	"SecMan :: ReconcileMethodLists (char * cli_methods , char * srv_methods)"		3433545	0					
ANR	3433547	CompoundStatement		2491:71:73984:74813	3433545	0					
ANR	3433548	IdentifierDeclStatement	StringList server_methods ( srv_methods ) ;	2499:1:74236:74276	3433545	0	True				
ANR	3433549	IdentifierDecl	server_methods ( srv_methods )		3433545	0					
ANR	3433550	IdentifierDeclType	StringList		3433545	0					
ANR	3433551	Identifier	server_methods		3433545	1					
ANR	3433552	Identifier	srv_methods		3433545	2					
ANR	3433553	IdentifierDeclStatement	StringList client_methods ( cli_methods ) ;	2500:1:74279:74319	3433545	1	True				
ANR	3433554	IdentifierDecl	client_methods ( cli_methods )		3433545	0					
ANR	3433555	IdentifierDeclType	StringList		3433545	0					
ANR	3433556	Identifier	client_methods		3433545	1					
ANR	3433557	Identifier	cli_methods		3433545	2					
ANR	3433558	IdentifierDeclStatement	char * sm = NULL ;	2501:1:74322:74337	3433545	2	True				
ANR	3433559	IdentifierDecl	* sm = NULL		3433545	0					
ANR	3433560	IdentifierDeclType	char *		3433545	0					
ANR	3433561	Identifier	sm		3433545	1					
ANR	3433562	AssignmentExpression	* sm = NULL		3433545	2		=			
ANR	3433563	Identifier	NULL		3433545	0					
ANR	3433564	Identifier	NULL		3433545	1					
ANR	3433565	IdentifierDeclStatement	char * cm = NULL ;	2502:1:74340:74355	3433545	3	True				
ANR	3433566	IdentifierDecl	* cm = NULL		3433545	0					
ANR	3433567	IdentifierDeclType	char *		3433545	0					
ANR	3433568	Identifier	cm		3433545	1					
ANR	3433569	AssignmentExpression	* cm = NULL		3433545	2		=			
ANR	3433570	Identifier	NULL		3433545	0					
ANR	3433571	Identifier	NULL		3433545	1					
ANR	3433572	IdentifierDeclStatement	MyString results ;	2504:1:74359:74375	3433545	4	True				
ANR	3433573	IdentifierDecl	results		3433545	0					
ANR	3433574	IdentifierDeclType	MyString		3433545	0					
ANR	3433575	Identifier	results		3433545	1					
ANR	3433576	IdentifierDeclStatement	int match = 0 ;	2505:1:74378:74391	3433545	5	True				
ANR	3433577	IdentifierDecl	match = 0		3433545	0					
ANR	3433578	IdentifierDeclType	int		3433545	0					
ANR	3433579	Identifier	match		3433545	1					
ANR	3433580	AssignmentExpression	match = 0		3433545	2		=			
ANR	3433581	Identifier	match		3433545	0					
ANR	3433582	PrimaryExpression	0		3433545	1					
ANR	3433583	ExpressionStatement	server_methods . rewind ( )	2508:1:74429:74452	3433545	6	True				
ANR	3433584	CallExpression	server_methods . rewind ( )		3433545	0					
ANR	3433585	Callee	server_methods . rewind		3433545	0					
ANR	3433586	MemberAccess	server_methods . rewind		3433545	0					
ANR	3433587	Identifier	server_methods		3433545	0					
ANR	3433588	Identifier	rewind		3433545	1					
ANR	3433589	ArgumentList			3433545	1					
ANR	3433590	WhileStatement	while ( ( sm = server_methods . next ( ) ) )		3433545	7					
ANR	3433591	Condition	sm = server_methods . next ( )	2509:9:74463:74490	3433545	0	True				
ANR	3433592	AssignmentExpression	sm = server_methods . next ( )		3433545	0		=			
ANR	3433593	Identifier	sm		3433545	0					
ANR	3433594	CallExpression	server_methods . next ( )		3433545	1					
ANR	3433595	Callee	server_methods . next		3433545	0					
ANR	3433596	MemberAccess	server_methods . next		3433545	0					
ANR	3433597	Identifier	server_methods		3433545	0					
ANR	3433598	Identifier	next		3433545	1					
ANR	3433599	ArgumentList			3433545	1					
ANR	3433600	CompoundStatement		19:40:509:509	3433545	1					
ANR	3433601	ExpressionStatement	client_methods . rewind ( )	2510:2:74498:74521	3433545	0	True				
ANR	3433602	CallExpression	client_methods . rewind ( )		3433545	0					
ANR	3433603	Callee	client_methods . rewind		3433545	0					
ANR	3433604	MemberAccess	client_methods . rewind		3433545	0					
ANR	3433605	Identifier	client_methods		3433545	0					
ANR	3433606	Identifier	rewind		3433545	1					
ANR	3433607	ArgumentList			3433545	1					
ANR	3433608	WhileStatement	while ( ( cm = client_methods . next ( ) ) )		3433545	1					
ANR	3433609	Condition	cm = client_methods . next ( )	2511:10:74533:74560	3433545	0	True				
ANR	3433610	AssignmentExpression	cm = client_methods . next ( )		3433545	0		=			
ANR	3433611	Identifier	cm		3433545	0					
ANR	3433612	CallExpression	client_methods . next ( )		3433545	1					
ANR	3433613	Callee	client_methods . next		3433545	0					
ANR	3433614	MemberAccess	client_methods . next		3433545	0					
ANR	3433615	Identifier	client_methods		3433545	0					
ANR	3433616	Identifier	next		3433545	1					
ANR	3433617	ArgumentList			3433545	1					
ANR	3433618	CompoundStatement		21:41:579:579	3433545	1					
ANR	3433619	IfStatement	"if ( ! strcasecmp ( sm , cm ) )"		3433545	0					
ANR	3433620	Condition	"! strcasecmp ( sm , cm )"	2512:7:74573:74591	3433545	0	True				
ANR	3433621	UnaryOperationExpression	"! strcasecmp ( sm , cm )"		3433545	0					
ANR	3433622	UnaryOperator	!		3433545	0					
ANR	3433623	CallExpression	"strcasecmp ( sm , cm )"		3433545	1					
ANR	3433624	Callee	strcasecmp		3433545	0					
ANR	3433625	Identifier	strcasecmp		3433545	0					
ANR	3433626	ArgumentList	sm		3433545	1					
ANR	3433627	Argument	sm		3433545	0					
ANR	3433628	Identifier	sm		3433545	0					
ANR	3433629	Argument	cm		3433545	1					
ANR	3433630	Identifier	cm		3433545	0					
ANR	3433631	CompoundStatement		22:28:609:609	3433545	1					
ANR	3433632	IfStatement	if ( match )		3433545	0					
ANR	3433633	Condition	match	2514:8:74651:74655	3433545	0	True				
ANR	3433634	Identifier	match		3433545	0					
ANR	3433635	CompoundStatement		24:15:673:673	3433545	1					
ANR	3433636	ExpressionStatement	"results += "","""	2515:5:74665:74679	3433545	0	True				
ANR	3433637	AssignmentExpression	"results += "","""		3433545	0		+=			
ANR	3433638	Identifier	results		3433545	0					
ANR	3433639	PrimaryExpression	""","""		3433545	1					
ANR	3433640	ElseStatement	else		3433545	0					
ANR	3433641	CompoundStatement		26:11:707:707	3433545	0					
ANR	3433642	ExpressionStatement	match = 1	2517:5:74699:74708	3433545	0	True				
ANR	3433643	AssignmentExpression	match = 1		3433545	0		=			
ANR	3433644	Identifier	match		3433545	0					
ANR	3433645	PrimaryExpression	1		3433545	1					
ANR	3433646	ExpressionStatement	results += cm	2521:4:74768:74781	3433545	1	True				
ANR	3433647	AssignmentExpression	results += cm		3433545	0		+=			
ANR	3433648	Identifier	results		3433545	0					
ANR	3433649	Identifier	cm		3433545	1					
ANR	3433650	ReturnStatement	return results ;	2526:1:74797:74811	3433545	8	True				
ANR	3433651	Identifier	results		3433545	0					
ANR	3433652	ReturnType	MyString		3433545	1					
ANR	3433653	Identifier	SecMan :: ReconcileMethodLists		3433545	2					
ANR	3433654	ParameterList	"char * cli_methods , char * srv_methods"		3433545	3					
ANR	3433655	Parameter	char * cli_methods	2491:30:73943:73960	3433545	0	True				
ANR	3433656	ParameterType	char *		3433545	0					
ANR	3433657	Identifier	cli_methods		3433545	1					
ANR	3433658	Parameter	char * srv_methods	2491:50:73963:73980	3433545	1	True				
ANR	3433659	ParameterType	char *		3433545	0					
ANR	3433660	Identifier	srv_methods		3433545	1					
ANR	3433661	CFGEntryNode	ENTRY		3433545		True				
ANR	3433662	CFGExitNode	EXIT		3433545		True				
ANR	3433663	Symbol	cli_methods		3433545						
ANR	3433664	Symbol	NULL		3433545						
ANR	3433665	Symbol	srv_methods		3433545						
ANR	3433666	Symbol	server_methods		3433545						
ANR	3433667	Symbol	match		3433545						
ANR	3433668	Symbol	client_methods . next		3433545						
ANR	3433669	Symbol	client_methods		3433545						
ANR	3433670	Symbol	sm		3433545						
ANR	3433671	Symbol	cm		3433545						
ANR	3433672	Symbol	strcasecmp		3433545						
ANR	3433673	Symbol	results		3433545						
ANR	3433674	Symbol	server_methods . next		3433545						
ANR	3433675	Function	SecMan :: SecMan	2530:0:74817:75384							
ANR	3433676	FunctionDef	SecMan :: SecMan (int nbuckets)		3433675	0					
ANR	3433677	CompoundStatement		2531:0:74846:75384	3433675	0					
ANR	3433678	IfStatement	if ( NULL == m_ipverify )		3433675	0					
ANR	3433679	Condition	NULL == m_ipverify	2532:6:74854:74871	3433675	0	True				
ANR	3433680	EqualityExpression	NULL == m_ipverify		3433675	0		==			
ANR	3433681	Identifier	NULL		3433675	0					
ANR	3433682	Identifier	m_ipverify		3433675	1					
ANR	3433683	CompoundStatement		2:27:28:28	3433675	1					
ANR	3433684	ExpressionStatement	m_ipverify = new IpVerify ( )	2533:2:74879:74907	3433675	0	True				
ANR	3433685	AssignmentExpression	m_ipverify = new IpVerify ( )		3433675	0		=			
ANR	3433686	Identifier	m_ipverify		3433675	0					
ANR	3433687	UnaryExpression	new IpVerify ( )		3433675	1					
ANR	3433688	IfStatement	if ( session_cache == NULL )		3433675	1					
ANR	3433689	Condition	session_cache == NULL	2537:5:74996:75016	3433675	0	True				
ANR	3433690	EqualityExpression	session_cache == NULL		3433675	0		==			
ANR	3433691	Identifier	session_cache		3433675	0					
ANR	3433692	Identifier	NULL		3433675	1					
ANR	3433693	CompoundStatement		7:28:172:172	3433675	1					
ANR	3433694	ExpressionStatement	session_cache = new KeyCache ( nbuckets )	2538:2:75023:75061	3433675	0	True				
ANR	3433695	AssignmentExpression	session_cache = new KeyCache ( nbuckets )		3433675	0		=			
ANR	3433696	Identifier	session_cache		3433675	0					
ANR	3433697	Identifier	nbuckets		3433675	1					
ANR	3433698	IfStatement	if ( command_map == NULL )		3433675	2					
ANR	3433699	Condition	command_map == NULL	2540:5:75071:75089	3433675	0	True				
ANR	3433700	EqualityExpression	command_map == NULL		3433675	0		==			
ANR	3433701	Identifier	command_map		3433675	0					
ANR	3433702	Identifier	NULL		3433675	1					
ANR	3433703	CompoundStatement		10:26:245:245	3433675	1					
ANR	3433704	ExpressionStatement	"command_map = new HashTable < MyString , MyString > ( nbuckets , MyStringHash , updateDuplicateKeys )"	2541:2:75096:75187	3433675	0	True				
ANR	3433705	AssignmentExpression	"command_map = new HashTable < MyString , MyString > ( nbuckets , MyStringHash , updateDuplicateKeys )"		3433675	0		=			
ANR	3433706	Identifier	command_map		3433675	0					
ANR	3433707	Expression	"nbuckets , MyStringHash , updateDuplicateKeys"		3433675	1					
ANR	3433708	Identifier	nbuckets		3433675	0					
ANR	3433709	Expression	"MyStringHash , updateDuplicateKeys"		3433675	1					
ANR	3433710	Identifier	MyStringHash		3433675	0					
ANR	3433711	Identifier	updateDuplicateKeys		3433675	1					
ANR	3433712	IfStatement	if ( tcp_auth_in_progress == NULL )		3433675	3					
ANR	3433713	Condition	tcp_auth_in_progress == NULL	2543:5:75197:75224	3433675	0	True				
ANR	3433714	EqualityExpression	tcp_auth_in_progress == NULL		3433675	0		==			
ANR	3433715	Identifier	tcp_auth_in_progress		3433675	0					
ANR	3433716	Identifier	NULL		3433675	1					
ANR	3433717	CompoundStatement		13:35:380:380	3433675	1					
ANR	3433718	ExpressionStatement	"tcp_auth_in_progress = new HashTable < MyString , classy_counted_ptr < SecManStartCommand > > ( 256 , MyStringHash , rejectDuplicateKeys )"	2544:2:75231:75357	3433675	0	True				
ANR	3433719	AssignmentExpression	"tcp_auth_in_progress = new HashTable < MyString , classy_counted_ptr < SecManStartCommand > > ( 256 , MyStringHash , rejectDuplicateKeys )"		3433675	0		=			
ANR	3433720	Identifier	tcp_auth_in_progress		3433675	0					
ANR	3433721	Expression	"256 , MyStringHash , rejectDuplicateKeys"		3433675	1					
ANR	3433722	PrimaryExpression	256		3433675	0					
ANR	3433723	Expression	"MyStringHash , rejectDuplicateKeys"		3433675	1					
ANR	3433724	Identifier	MyStringHash		3433675	0					
ANR	3433725	Identifier	rejectDuplicateKeys		3433675	1					
ANR	3433726	ExpressionStatement	sec_man_ref_count ++	2546:1:75363:75382	3433675	4	True				
ANR	3433727	PostIncDecOperationExpression	sec_man_ref_count ++		3433675	0					
ANR	3433728	Identifier	sec_man_ref_count		3433675	0					
ANR	3433729	IncDec	++		3433675	1					
ANR	3433730	Identifier	SecMan :: SecMan		3433675	1					
ANR	3433731	ParameterList	int nbuckets		3433675	2					
ANR	3433732	Parameter	int nbuckets	2530:15:74832:74843	3433675	0	True				
ANR	3433733	ParameterType	int		3433675	0					
ANR	3433734	Identifier	nbuckets		3433675	1					
ANR	3433735	CFGEntryNode	ENTRY		3433675		True				
ANR	3433736	CFGExitNode	EXIT		3433675		True				
ANR	3433737	Symbol	tcp_auth_in_progress		3433675						
ANR	3433738	Symbol	sec_man_ref_count		3433675						
ANR	3433739	Symbol	m_ipverify		3433675						
ANR	3433740	Symbol	NULL		3433675						
ANR	3433741	Symbol	session_cache		3433675						
ANR	3433742	Symbol	command_map		3433675						
ANR	3433743	Symbol	rejectDuplicateKeys		3433675						
ANR	3433744	Symbol	nbuckets		3433675						
ANR	3433745	Symbol	updateDuplicateKeys		3433675						
ANR	3433746	Symbol	MyStringHash		3433675						
ANR	3433747	Function	SecMan :: ~SecMan	2568:0:75854:76317							
ANR	3433748	FunctionDef	SecMan :: ~SecMan ()		3433747	0					
ANR	3433749	CompoundStatement		2568:18:75872:76317	3433747	0					
ANR	3433750	ExpressionStatement	ASSERT ( session_cache )	2571:1:75985:76007	3433747	0	True				
ANR	3433751	CallExpression	ASSERT ( session_cache )		3433747	0					
ANR	3433752	Callee	ASSERT		3433747	0					
ANR	3433753	Identifier	ASSERT		3433747	0					
ANR	3433754	ArgumentList	session_cache		3433747	1					
ANR	3433755	Argument	session_cache		3433747	0					
ANR	3433756	Identifier	session_cache		3433747	0					
ANR	3433757	ExpressionStatement	ASSERT ( command_map )	2572:1:76010:76030	3433747	1	True				
ANR	3433758	CallExpression	ASSERT ( command_map )		3433747	0					
ANR	3433759	Callee	ASSERT		3433747	0					
ANR	3433760	Identifier	ASSERT		3433747	0					
ANR	3433761	ArgumentList	command_map		3433747	1					
ANR	3433762	Argument	command_map		3433747	0					
ANR	3433763	Identifier	command_map		3433747	0					
ANR	3433764	ExpressionStatement	sec_man_ref_count --	2574:1:76034:76053	3433747	2	True				
ANR	3433765	PostIncDecOperationExpression	sec_man_ref_count --		3433747	0					
ANR	3433766	Identifier	sec_man_ref_count		3433747	0					
ANR	3433767	IncDec	--		3433747	1					
ANR	3433768	Identifier	SecMan :: ~SecMan		3433747	1					
ANR	3433769	ParameterList			3433747	2					
ANR	3433770	CFGEntryNode	ENTRY		3433747		True				
ANR	3433771	CFGExitNode	EXIT		3433747		True				
ANR	3433772	Symbol	sec_man_ref_count		3433747						
ANR	3433773	Symbol	session_cache		3433747						
ANR	3433774	Symbol	command_map		3433747						
ANR	3433775	Function	SecMan :: reconfig	2591:0:76320:76407							
ANR	3433776	FunctionDef	SecMan :: reconfig ()		3433775	0					
ANR	3433777	CompoundStatement		2593:0:76344:76407	3433775	0					
ANR	3433778	ExpressionStatement	m_ipverify -> reconfig ( )	2594:1:76347:76369	3433775	0	True				
ANR	3433779	CallExpression	m_ipverify -> reconfig ( )		3433775	0					
ANR	3433780	Callee	m_ipverify -> reconfig		3433775	0					
ANR	3433781	PtrMemberAccess	m_ipverify -> reconfig		3433775	0					
ANR	3433782	Identifier	m_ipverify		3433775	0					
ANR	3433783	Identifier	reconfig		3433775	1					
ANR	3433784	ArgumentList			3433775	1					
ANR	3433785	ExpressionStatement	Authentication :: reconfigMapFile ( )	2595:1:76372:76405	3433775	1	True				
ANR	3433786	CallExpression	Authentication :: reconfigMapFile ( )		3433775	0					
ANR	3433787	Callee	Authentication :: reconfigMapFile		3433775	0					
ANR	3433788	Identifier	Authentication :: reconfigMapFile		3433775	0					
ANR	3433789	ArgumentList			3433775	1					
ANR	3433790	ReturnType	void		3433775	1					
ANR	3433791	Identifier	SecMan :: reconfig		3433775	2					
ANR	3433792	ParameterList			3433775	3					
ANR	3433793	CFGEntryNode	ENTRY		3433775		True				
ANR	3433794	CFGExitNode	EXIT		3433775		True				
ANR	3433795	Symbol	m_ipverify		3433775						
ANR	3433796	Function	SecMan :: getIpVerify	2598:0:76410:76465							
ANR	3433797	FunctionDef	SecMan :: getIpVerify ()		3433796	0					
ANR	3433798	CompoundStatement		2600:0:76443:76465	3433796	0					
ANR	3433799	ReturnStatement	return m_ipverify ;	2601:1:76446:76463	3433796	0	True				
ANR	3433800	Identifier	m_ipverify		3433796	0					
ANR	3433801	ReturnType	IpVerify *		3433796	1					
ANR	3433802	Identifier	SecMan :: getIpVerify		3433796	2					
ANR	3433803	ParameterList			3433796	3					
ANR	3433804	CFGEntryNode	ENTRY		3433796		True				
ANR	3433805	CFGExitNode	EXIT		3433796		True				
ANR	3433806	Symbol	m_ipverify		3433796						
ANR	3433807	Function	SecMan :: Verify	2604:0:76468:76727							
ANR	3433808	FunctionDef	"SecMan :: Verify (DCpermission perm , const condor_sockaddr & addr , const char * fqu , MyString * allow_reason , MyString * deny_reason)"		3433807	0					
ANR	3433809	CompoundStatement		2606:0:76601:76727	3433807	0					
ANR	3433810	IdentifierDeclStatement	IpVerify * ipverify = getIpVerify ( ) ;	2607:1:76604:76638	3433807	0	True				
ANR	3433811	IdentifierDecl	* ipverify = getIpVerify ( )		3433807	0					
ANR	3433812	IdentifierDeclType	IpVerify *		3433807	0					
ANR	3433813	Identifier	ipverify		3433807	1					
ANR	3433814	AssignmentExpression	* ipverify = getIpVerify ( )		3433807	2		=			
ANR	3433815	Identifier	ipverify		3433807	0					
ANR	3433816	CallExpression	getIpVerify ( )		3433807	1					
ANR	3433817	Callee	getIpVerify		3433807	0					
ANR	3433818	Identifier	getIpVerify		3433807	0					
ANR	3433819	ArgumentList			3433807	1					
ANR	3433820	ExpressionStatement	ASSERT ( ipverify )	2608:1:76641:76659	3433807	1	True				
ANR	3433821	CallExpression	ASSERT ( ipverify )		3433807	0					
ANR	3433822	Callee	ASSERT		3433807	0					
ANR	3433823	Identifier	ASSERT		3433807	0					
ANR	3433824	ArgumentList	ipverify		3433807	1					
ANR	3433825	Argument	ipverify		3433807	0					
ANR	3433826	Identifier	ipverify		3433807	0					
ANR	3433827	ReturnStatement	"return ipverify -> Verify ( perm , addr , fqu , allow_reason , deny_reason ) ;"	2609:1:76662:76725	3433807	2	True				
ANR	3433828	CallExpression	"ipverify -> Verify ( perm , addr , fqu , allow_reason , deny_reason )"		3433807	0					
ANR	3433829	Callee	ipverify -> Verify		3433807	0					
ANR	3433830	PtrMemberAccess	ipverify -> Verify		3433807	0					
ANR	3433831	Identifier	ipverify		3433807	0					
ANR	3433832	Identifier	Verify		3433807	1					
ANR	3433833	ArgumentList	perm		3433807	1					
ANR	3433834	Argument	perm		3433807	0					
ANR	3433835	Identifier	perm		3433807	0					
ANR	3433836	Argument	addr		3433807	1					
ANR	3433837	Identifier	addr		3433807	0					
ANR	3433838	Argument	fqu		3433807	2					
ANR	3433839	Identifier	fqu		3433807	0					
ANR	3433840	Argument	allow_reason		3433807	3					
ANR	3433841	Identifier	allow_reason		3433807	0					
ANR	3433842	Argument	deny_reason		3433807	4					
ANR	3433843	Identifier	deny_reason		3433807	0					
ANR	3433844	ReturnType	int		3433807	1					
ANR	3433845	Identifier	SecMan :: Verify		3433807	2					
ANR	3433846	ParameterList	"DCpermission perm , const condor_sockaddr & addr , const char * fqu , MyString * allow_reason , MyString * deny_reason"		3433807	3					
ANR	3433847	Parameter	DCpermission perm	2605:15:76487:76503	3433807	0	True				
ANR	3433848	ParameterType	DCpermission		3433807	0					
ANR	3433849	Identifier	perm		3433807	1					
ANR	3433850	Parameter	const condor_sockaddr & addr	2605:34:76506:76532	3433807	1	True				
ANR	3433851	ParameterType	const condor_sockaddr &		3433807	0					
ANR	3433852	Identifier	addr		3433807	1					
ANR	3433853	Parameter	const char * fqu	2605:63:76535:76550	3433807	2	True				
ANR	3433854	ParameterType	const char *		3433807	0					
ANR	3433855	Identifier	fqu		3433807	1					
ANR	3433856	Parameter	MyString * allow_reason	2605:81:76553:76574	3433807	3	True				
ANR	3433857	ParameterType	MyString *		3433807	0					
ANR	3433858	Identifier	allow_reason		3433807	1					
ANR	3433859	Parameter	MyString * deny_reason	2605:105:76577:76597	3433807	4	True				
ANR	3433860	ParameterType	MyString *		3433807	0					
ANR	3433861	Identifier	deny_reason		3433807	1					
ANR	3433862	CFGEntryNode	ENTRY		3433807		True				
ANR	3433863	CFGExitNode	EXIT		3433807		True				
ANR	3433864	Symbol	getIpVerify		3433807						
ANR	3433865	Symbol	perm		3433807						
ANR	3433866	Symbol	ipverify		3433807						
ANR	3433867	Symbol	* ipverify		3433807						
ANR	3433868	Symbol	ipverify -> Verify		3433807						
ANR	3433869	Symbol	fqu		3433807						
ANR	3433870	Symbol	addr		3433807						
ANR	3433871	Symbol	deny_reason		3433807						
ANR	3433872	Symbol	allow_reason		3433807						
ANR	3433873	Function	SecMan :: sec_copy_attribute	2613:0:76731:76963							
ANR	3433874	FunctionDef	"SecMan :: sec_copy_attribute (ClassAd & dest , ClassAd & source , const char * attr)"		3433873	0					
ANR	3433875	CompoundStatement		2614:79:76815:76963	3433873	0					
ANR	3433876	IdentifierDeclStatement	ExprTree * e = source . LookupExpr ( attr ) ;	2615:1:76818:76855	3433873	0	True				
ANR	3433877	IdentifierDecl	* e = source . LookupExpr ( attr )		3433873	0					
ANR	3433878	IdentifierDeclType	ExprTree *		3433873	0					
ANR	3433879	Identifier	e		3433873	1					
ANR	3433880	AssignmentExpression	* e = source . LookupExpr ( attr )		3433873	2		=			
ANR	3433881	Identifier	e		3433873	0					
ANR	3433882	CallExpression	source . LookupExpr ( attr )		3433873	1					
ANR	3433883	Callee	source . LookupExpr		3433873	0					
ANR	3433884	MemberAccess	source . LookupExpr		3433873	0					
ANR	3433885	Identifier	source		3433873	0					
ANR	3433886	Identifier	LookupExpr		3433873	1					
ANR	3433887	ArgumentList	attr		3433873	1					
ANR	3433888	Argument	attr		3433873	0					
ANR	3433889	Identifier	attr		3433873	0					
ANR	3433890	IfStatement	if ( e )		3433873	1					
ANR	3433891	Condition	e	2616:5:76862:76862	3433873	0	True				
ANR	3433892	Identifier	e		3433873	0					
ANR	3433893	CompoundStatement		4:2:53:77	3433873	1					
ANR	3433894	IdentifierDeclStatement	ExprTree * cp = e -> Copy ( ) ;	2617:2:76869:76893	3433873	0	True				
ANR	3433895	IdentifierDecl	* cp = e -> Copy ( )		3433873	0					
ANR	3433896	IdentifierDeclType	ExprTree *		3433873	0					
ANR	3433897	Identifier	cp		3433873	1					
ANR	3433898	AssignmentExpression	* cp = e -> Copy ( )		3433873	2		=			
ANR	3433899	Identifier	cp		3433873	0					
ANR	3433900	CallExpression	e -> Copy ( )		3433873	1					
ANR	3433901	Callee	e -> Copy		3433873	0					
ANR	3433902	PtrMemberAccess	e -> Copy		3433873	0					
ANR	3433903	Identifier	e		3433873	0					
ANR	3433904	Identifier	Copy		3433873	1					
ANR	3433905	ArgumentList			3433873	1					
ANR	3433906	ExpressionStatement	"dest . Insert ( attr , cp )"	2618:2:76897:76917	3433873	1	True				
ANR	3433907	CallExpression	"dest . Insert ( attr , cp )"		3433873	0					
ANR	3433908	Callee	dest . Insert		3433873	0					
ANR	3433909	MemberAccess	dest . Insert		3433873	0					
ANR	3433910	Identifier	dest		3433873	0					
ANR	3433911	Identifier	Insert		3433873	1					
ANR	3433912	ArgumentList	attr		3433873	1					
ANR	3433913	Argument	attr		3433873	0					
ANR	3433914	Identifier	attr		3433873	0					
ANR	3433915	Argument	cp		3433873	1					
ANR	3433916	Identifier	cp		3433873	0					
ANR	3433917	ReturnStatement	return true ;	2619:2:76921:76932	3433873	2	True				
ANR	3433918	Identifier	true		3433873	0					
ANR	3433919	ElseStatement	else		3433873	0					
ANR	3433920	CompoundStatement		7:8:126:126	3433873	0					
ANR	3433921	ReturnStatement	return false ;	2621:2:76946:76958	3433873	0	True				
ANR	3433922	Identifier	false		3433873	0					
ANR	3433923	ReturnType	bool		3433873	1					
ANR	3433924	Identifier	SecMan :: sec_copy_attribute		3433873	2					
ANR	3433925	ParameterList	"ClassAd & dest , ClassAd & source , const char * attr"		3433873	3					
ANR	3433926	Parameter	ClassAd & dest	2614:28:76764:76776	3433873	0	True				
ANR	3433927	ParameterType	ClassAd &		3433873	0					
ANR	3433928	Identifier	dest		3433873	1					
ANR	3433929	Parameter	ClassAd & source	2614:43:76779:76793	3433873	1	True				
ANR	3433930	ParameterType	ClassAd &		3433873	0					
ANR	3433931	Identifier	source		3433873	1					
ANR	3433932	Parameter	const char * attr	2614:60:76796:76811	3433873	2	True				
ANR	3433933	ParameterType	const char *		3433873	0					
ANR	3433934	Identifier	attr		3433873	1					
ANR	3433935	CFGEntryNode	ENTRY		3433873		True				
ANR	3433936	CFGExitNode	EXIT		3433873		True				
ANR	3433937	Symbol	e -> Copy		3433873						
ANR	3433938	Symbol	e		3433873						
ANR	3433939	Symbol	true		3433873						
ANR	3433940	Symbol	false		3433873						
ANR	3433941	Symbol	source		3433873						
ANR	3433942	Symbol	dest		3433873						
ANR	3433943	Symbol	attr		3433873						
ANR	3433944	Symbol	cp		3433873						
ANR	3433945	Symbol	source . LookupExpr		3433873						
ANR	3433946	Symbol	* e		3433873						
ANR	3433947	Function	SecMan :: sec_copy_attribute	2625:0:76966:77223							
ANR	3433948	FunctionDef	"SecMan :: sec_copy_attribute (ClassAd & dest , const char * to_attr , ClassAd & source , const char * from_attr)"		3433947	0					
ANR	3433949	CompoundStatement		2626:105:77076:77223	3433947	0					
ANR	3433950	IdentifierDeclStatement	ExprTree * e = source . LookupExpr ( from_attr ) ;	2627:1:77079:77121	3433947	0	True				
ANR	3433951	IdentifierDecl	* e = source . LookupExpr ( from_attr )		3433947	0					
ANR	3433952	IdentifierDeclType	ExprTree *		3433947	0					
ANR	3433953	Identifier	e		3433947	1					
ANR	3433954	AssignmentExpression	* e = source . LookupExpr ( from_attr )		3433947	2		=			
ANR	3433955	Identifier	e		3433947	0					
ANR	3433956	CallExpression	source . LookupExpr ( from_attr )		3433947	1					
ANR	3433957	Callee	source . LookupExpr		3433947	0					
ANR	3433958	MemberAccess	source . LookupExpr		3433947	0					
ANR	3433959	Identifier	source		3433947	0					
ANR	3433960	Identifier	LookupExpr		3433947	1					
ANR	3433961	ArgumentList	from_attr		3433947	1					
ANR	3433962	Argument	from_attr		3433947	0					
ANR	3433963	Identifier	from_attr		3433947	0					
ANR	3433964	IfStatement	if ( ! e )		3433947	1					
ANR	3433965	Condition	! e	2628:5:77128:77129	3433947	0	True				
ANR	3433966	UnaryOperationExpression	! e		3433947	0					
ANR	3433967	UnaryOperator	!		3433947	0					
ANR	3433968	Identifier	e		3433947	1					
ANR	3433969	CompoundStatement		3:9:55:55	3433947	1					
ANR	3433970	ReturnStatement	return false ;	2629:2:77136:77148	3433947	0	True				
ANR	3433971	Identifier	false		3433947	0					
ANR	3433972	IdentifierDeclStatement	"bool retval = dest . Insert ( to_attr , e -> Copy ( ) ) != 0 ;"	2632:1:77155:77205	3433947	2	True				
ANR	3433973	IdentifierDecl	"retval = dest . Insert ( to_attr , e -> Copy ( ) ) != 0"		3433947	0					
ANR	3433974	IdentifierDeclType	bool		3433947	0					
ANR	3433975	Identifier	retval		3433947	1					
ANR	3433976	AssignmentExpression	"retval = dest . Insert ( to_attr , e -> Copy ( ) ) != 0"		3433947	2		=			
ANR	3433977	Identifier	retval		3433947	0					
ANR	3433978	EqualityExpression	"dest . Insert ( to_attr , e -> Copy ( ) ) != 0"		3433947	1		!=			
ANR	3433979	CallExpression	"dest . Insert ( to_attr , e -> Copy ( ) )"		3433947	0					
ANR	3433980	Callee	dest . Insert		3433947	0					
ANR	3433981	MemberAccess	dest . Insert		3433947	0					
ANR	3433982	Identifier	dest		3433947	0					
ANR	3433983	Identifier	Insert		3433947	1					
ANR	3433984	ArgumentList	to_attr		3433947	1					
ANR	3433985	Argument	to_attr		3433947	0					
ANR	3433986	Identifier	to_attr		3433947	0					
ANR	3433987	Argument	e -> Copy ( )		3433947	1					
ANR	3433988	CallExpression	e -> Copy ( )		3433947	0					
ANR	3433989	Callee	e -> Copy		3433947	0					
ANR	3433990	PtrMemberAccess	e -> Copy		3433947	0					
ANR	3433991	Identifier	e		3433947	0					
ANR	3433992	Identifier	Copy		3433947	1					
ANR	3433993	ArgumentList			3433947	1					
ANR	3433994	PrimaryExpression	0		3433947	1					
ANR	3433995	ReturnStatement	return retval ;	2633:1:77208:77221	3433947	3	True				
ANR	3433996	Identifier	retval		3433947	0					
ANR	3433997	ReturnType	bool		3433947	1					
ANR	3433998	Identifier	SecMan :: sec_copy_attribute		3433947	2					
ANR	3433999	ParameterList	"ClassAd & dest , const char * to_attr , ClassAd & source , const char * from_attr"		3433947	3					
ANR	3434000	Parameter	ClassAd & dest	2626:28:76999:77011	3433947	0	True				
ANR	3434001	ParameterType	ClassAd &		3433947	0					
ANR	3434002	Identifier	dest		3433947	1					
ANR	3434003	Parameter	const char * to_attr	2626:43:77014:77032	3433947	1	True				
ANR	3434004	ParameterType	const char *		3433947	0					
ANR	3434005	Identifier	to_attr		3433947	1					
ANR	3434006	Parameter	ClassAd & source	2626:64:77035:77049	3433947	2	True				
ANR	3434007	ParameterType	ClassAd &		3433947	0					
ANR	3434008	Identifier	source		3433947	1					
ANR	3434009	Parameter	const char * from_attr	2626:81:77052:77072	3433947	3	True				
ANR	3434010	ParameterType	const char *		3433947	0					
ANR	3434011	Identifier	from_attr		3433947	1					
ANR	3434012	CFGEntryNode	ENTRY		3433947		True				
ANR	3434013	CFGExitNode	EXIT		3433947		True				
ANR	3434014	Symbol	to_attr		3433947						
ANR	3434015	Symbol	from_attr		3433947						
ANR	3434016	Symbol	dest . Insert		3433947						
ANR	3434017	Symbol	e -> Copy		3433947						
ANR	3434018	Symbol	e		3433947						
ANR	3434019	Symbol	false		3433947						
ANR	3434020	Symbol	source		3433947						
ANR	3434021	Symbol	dest		3433947						
ANR	3434022	Symbol	retval		3433947						
ANR	3434023	Symbol	source . LookupExpr		3433947						
ANR	3434024	Symbol	* e		3433947						
ANR	3434025	Function	SecMan :: invalidateAllCache	2637:0:77227:77433							
ANR	3434026	FunctionDef	SecMan :: invalidateAllCache ()		3434025	0					
ANR	3434027	CompoundStatement		2638:29:77261:77433	3434025	0					
ANR	3434028	Statement	delete	2639:1:77264:77269	3434025	0	True				
ANR	3434029	ExpressionStatement	session_cache	2639:8:77271:77284	3434025	1	True				
ANR	3434030	Identifier	session_cache		3434025	0					
ANR	3434031	ExpressionStatement	session_cache = new KeyCache ( 209 )	2640:1:77287:77320	3434025	2	True				
ANR	3434032	AssignmentExpression	session_cache = new KeyCache ( 209 )		3434025	0		=			
ANR	3434033	Identifier	session_cache		3434025	0					
ANR	3434034	PrimaryExpression	209		3434025	1					
ANR	3434035	Statement	delete	2642:1:77324:77329	3434025	3	True				
ANR	3434036	ExpressionStatement	command_map	2642:8:77331:77342	3434025	4	True				
ANR	3434037	Identifier	command_map		3434025	0					
ANR	3434038	ExpressionStatement	"command_map = new HashTable < MyString , MyString > ( 209 , MyStringHash , updateDuplicateKeys )"	2643:1:77345:77431	3434025	5	True				
ANR	3434039	AssignmentExpression	"command_map = new HashTable < MyString , MyString > ( 209 , MyStringHash , updateDuplicateKeys )"		3434025	0		=			
ANR	3434040	Identifier	command_map		3434025	0					
ANR	3434041	Expression	"209 , MyStringHash , updateDuplicateKeys"		3434025	1					
ANR	3434042	PrimaryExpression	209		3434025	0					
ANR	3434043	Expression	"MyStringHash , updateDuplicateKeys"		3434025	1					
ANR	3434044	Identifier	MyStringHash		3434025	0					
ANR	3434045	Identifier	updateDuplicateKeys		3434025	1					
ANR	3434046	ReturnType	void		3434025	1					
ANR	3434047	Identifier	SecMan :: invalidateAllCache		3434025	2					
ANR	3434048	ParameterList			3434025	3					
ANR	3434049	CFGEntryNode	ENTRY		3434025		True				
ANR	3434050	CFGExitNode	EXIT		3434025		True				
ANR	3434051	Symbol	session_cache		3434025						
ANR	3434052	Symbol	command_map		3434025						
ANR	3434053	Symbol	MyStringHash		3434025						
ANR	3434054	Symbol	updateDuplicateKeys		3434025						
ANR	3434055	Function	SecMan :: invalidateExpiredCache	2646:0:77436:78025							
ANR	3434056	FunctionDef	SecMan :: invalidateExpiredCache ()		3434055	0					
ANR	3434057	CompoundStatement		2648:0:77477:78025	3434055	0					
ANR	3434058	IdentifierDeclStatement	StringList * list = session_cache -> getExpiredKeys ( ) ;	2650:4:77550:77601	3434055	0	True				
ANR	3434059	IdentifierDecl	* list = session_cache -> getExpiredKeys ( )		3434055	0					
ANR	3434060	IdentifierDeclType	StringList *		3434055	0					
ANR	3434061	Identifier	list		3434055	1					
ANR	3434062	AssignmentExpression	* list = session_cache -> getExpiredKeys ( )		3434055	2		=			
ANR	3434063	Identifier	list		3434055	0					
ANR	3434064	CallExpression	session_cache -> getExpiredKeys ( )		3434055	1					
ANR	3434065	Callee	session_cache -> getExpiredKeys		3434055	0					
ANR	3434066	PtrMemberAccess	session_cache -> getExpiredKeys		3434055	0					
ANR	3434067	Identifier	session_cache		3434055	0					
ANR	3434068	Identifier	getExpiredKeys		3434055	1					
ANR	3434069	ArgumentList			3434055	1					
ANR	3434070	ExpressionStatement	list -> rewind ( )	2658:4:77911:77925	3434055	1	True				
ANR	3434071	CallExpression	list -> rewind ( )		3434055	0					
ANR	3434072	Callee	list -> rewind		3434055	0					
ANR	3434073	PtrMemberAccess	list -> rewind		3434055	0					
ANR	3434074	Identifier	list		3434055	0					
ANR	3434075	Identifier	rewind		3434055	1					
ANR	3434076	ArgumentList			3434055	1					
ANR	3434077	IdentifierDeclStatement	char * p ;	2659:4:77931:77939	3434055	2	True				
ANR	3434078	IdentifierDecl	* p		3434055	0					
ANR	3434079	IdentifierDeclType	char *		3434055	0					
ANR	3434080	Identifier	p		3434055	1					
ANR	3434081	WhileStatement	while ( ( p = list -> next ( ) ) )		3434055	3					
ANR	3434082	Condition	p = list -> next ( )	2660:12:77953:77970	3434055	0	True				
ANR	3434083	AssignmentExpression	p = list -> next ( )		3434055	0		=			
ANR	3434084	Identifier	p		3434055	0					
ANR	3434085	CallExpression	list -> next ( )		3434055	1					
ANR	3434086	Callee	list -> next		3434055	0					
ANR	3434087	PtrMemberAccess	list -> next		3434055	0					
ANR	3434088	Identifier	list		3434055	0					
ANR	3434089	Identifier	next		3434055	1					
ANR	3434090	ArgumentList			3434055	1					
ANR	3434091	CompoundStatement		13:33:496:496	3434055	1					
ANR	3434092	ExpressionStatement	invalidateKey ( p )	2661:8:77984:78000	3434055	0	True				
ANR	3434093	CallExpression	invalidateKey ( p )		3434055	0					
ANR	3434094	Callee	invalidateKey		3434055	0					
ANR	3434095	Identifier	invalidateKey		3434055	0					
ANR	3434096	ArgumentList	p		3434055	1					
ANR	3434097	Argument	p		3434055	0					
ANR	3434098	Identifier	p		3434055	0					
ANR	3434099	Statement	delete	2663:4:78012:78017	3434055	4	True				
ANR	3434100	ExpressionStatement	list	2663:11:78019:78023	3434055	5	True				
ANR	3434101	Identifier	list		3434055	0					
ANR	3434102	ReturnType	void		3434055	1					
ANR	3434103	Identifier	SecMan :: invalidateExpiredCache		3434055	2					
ANR	3434104	ParameterList			3434055	3					
ANR	3434105	CFGEntryNode	ENTRY		3434055		True				
ANR	3434106	CFGExitNode	EXIT		3434055		True				
ANR	3434107	Symbol	session_cache -> getExpiredKeys		3434055						
ANR	3434108	Symbol	* session_cache		3434055						
ANR	3434109	Symbol	p		3434055						
ANR	3434110	Symbol	list -> next		3434055						
ANR	3434111	Symbol	session_cache		3434055						
ANR	3434112	Symbol	* list		3434055						
ANR	3434113	Symbol	list		3434055						
ANR	3434114	Function	SecMan :: getDefaultAuthenticationMethods	2705:0:79093:79422							
ANR	3434115	FunctionDef	SecMan :: getDefaultAuthenticationMethods ()		3434114	0					
ANR	3434116	CompoundStatement		2705:51:79144:79422	3434114	0					
ANR	3434117	IdentifierDeclStatement	MyString methods ;	2706:1:79147:79163	3434114	0	True				
ANR	3434118	IdentifierDecl	methods		3434114	0					
ANR	3434119	IdentifierDeclType	MyString		3434114	0					
ANR	3434120	Identifier	methods		3434114	1					
ANR	3434121	ExpressionStatement	"methods = ""NTSSPI"""	2709:1:79212:79230	3434114	1	True				
ANR	3434122	AssignmentExpression	"methods = ""NTSSPI"""		3434114	0		=			
ANR	3434123	Identifier	methods		3434114	0					
ANR	3434124	PrimaryExpression	"""NTSSPI"""		3434114	1					
ANR	3434125	ExpressionStatement	"methods += "",KERBEROS"""	2716:1:79316:79338	3434114	2	True				
ANR	3434126	AssignmentExpression	"methods += "",KERBEROS"""		3434114	0		+=			
ANR	3434127	Identifier	methods		3434114	0					
ANR	3434128	PrimaryExpression	""",KERBEROS"""		3434114	1					
ANR	3434129	ExpressionStatement	"methods += "",GSI"""	2720:1:79378:79395	3434114	3	True				
ANR	3434130	AssignmentExpression	"methods += "",GSI"""		3434114	0		+=			
ANR	3434131	Identifier	methods		3434114	0					
ANR	3434132	PrimaryExpression	""",GSI"""		3434114	1					
ANR	3434133	ReturnStatement	return methods ;	2723:1:79406:79420	3434114	4	True				
ANR	3434134	Identifier	methods		3434114	0					
ANR	3434135	ReturnType	MyString		3434114	1					
ANR	3434136	Identifier	SecMan :: getDefaultAuthenticationMethods		3434114	2					
ANR	3434137	ParameterList			3434114	3					
ANR	3434138	CFGEntryNode	ENTRY		3434114		True				
ANR	3434139	CFGExitNode	EXIT		3434114		True				
ANR	3434140	Symbol	methods		3434114						
ANR	3434141	Function	SecMan :: getDefaultCryptoMethods	2728:0:79427:79546							
ANR	3434142	FunctionDef	SecMan :: getDefaultCryptoMethods ()		3434141	0					
ANR	3434143	CompoundStatement		2728:43:79470:79546	3434141	0					
ANR	3434144	ReturnStatement	"return ""3DES,BLOWFISH"" ;"	2730:1:79497:79519	3434141	0	True				
ANR	3434145	PrimaryExpression	"""3DES,BLOWFISH"""		3434141	0					
ANR	3434146	ReturnType	MyString		3434141	1					
ANR	3434147	Identifier	SecMan :: getDefaultCryptoMethods		3434141	2					
ANR	3434148	ParameterList			3434141	3					
ANR	3434149	CFGEntryNode	ENTRY		3434141		True				
ANR	3434150	CFGExitNode	EXIT		3434141		True				
ANR	3434151	Function	SecMan :: my_unique_id	2736:0:79549:80031							
ANR	3434152	FunctionDef	SecMan :: my_unique_id ()		3434151	0					
ANR	3434153	CompoundStatement		2736:29:79578:80031	3434151	0					
ANR	3434154	IfStatement	if ( ! _my_unique_id )		3434151	0					
ANR	3434155	Condition	! _my_unique_id	2738:8:79589:79602	3434151	0	True				
ANR	3434156	UnaryOperationExpression	! _my_unique_id		3434151	0					
ANR	3434157	UnaryOperator	!		3434151	0					
ANR	3434158	Identifier	_my_unique_id		3434151	1					
ANR	3434159	CompoundStatement		15:8:266:278	3434151	1					
ANR	3434160	IdentifierDeclStatement	int mypid = 0 ;	2742:8:79722:79738	3434151	0	True				
ANR	3434161	IdentifierDecl	mypid = 0		3434151	0					
ANR	3434162	IdentifierDeclType	int		3434151	0					
ANR	3434163	Identifier	mypid		3434151	1					
ANR	3434164	AssignmentExpression	mypid = 0		3434151	2		=			
ANR	3434165	Identifier	mypid		3434151	0					
ANR	3434166	PrimaryExpression	0		3434151	1					
ANR	3434167	Statement	mypid	2745:8:79762:79766	3434151	1	True				
ANR	3434168	Statement	=	2745:14:79768:79768	3434151	2	True				
ANR	3434169	Statement	::	2745:16:79770:79771	3434151	3	True				
ANR	3434170	ExpressionStatement	GetCurrentProcessId ( )	2745:18:79772:79793	3434151	4	True				
ANR	3434171	CallExpression	GetCurrentProcessId ( )		3434151	0					
ANR	3434172	Callee	GetCurrentProcessId		3434151	0					
ANR	3434173	Identifier	GetCurrentProcessId		3434151	0					
ANR	3434174	ArgumentList			3434151	1					
ANR	3434175	IdentifierDeclStatement	MyString tid ;	2750:8:79845:79857	3434151	5	True				
ANR	3434176	IdentifierDecl	tid		3434151	0					
ANR	3434177	IdentifierDeclType	MyString		3434151	0					
ANR	3434178	Identifier	tid		3434151	1					
ANR	3434179	ExpressionStatement	"tid . sprintf ( ""%s:%i:%i"" , get_local_hostname ( ) . Value ( ) , mypid , ( int ) time ( 0 ) )"	2751:8:79867:79949	3434151	6	True				
ANR	3434180	CallExpression	"tid . sprintf ( ""%s:%i:%i"" , get_local_hostname ( ) . Value ( ) , mypid , ( int ) time ( 0 ) )"		3434151	0					
ANR	3434181	Callee	tid . sprintf		3434151	0					
ANR	3434182	MemberAccess	tid . sprintf		3434151	0					
ANR	3434183	Identifier	tid		3434151	0					
ANR	3434184	Identifier	sprintf		3434151	1					
ANR	3434185	ArgumentList	"""%s:%i:%i"""		3434151	1					
ANR	3434186	Argument	"""%s:%i:%i"""		3434151	0					
ANR	3434187	PrimaryExpression	"""%s:%i:%i"""		3434151	0					
ANR	3434188	Argument	get_local_hostname ( ) . Value ( )		3434151	1					
ANR	3434189	CallExpression	get_local_hostname ( ) . Value ( )		3434151	0					
ANR	3434190	Callee	get_local_hostname ( ) . Value		3434151	0					
ANR	3434191	MemberAccess	get_local_hostname ( ) . Value		3434151	0					
ANR	3434192	CallExpression	get_local_hostname ( )		3434151	0					
ANR	3434193	Callee	get_local_hostname		3434151	0					
ANR	3434194	Identifier	get_local_hostname		3434151	0					
ANR	3434195	ArgumentList			3434151	1					
ANR	3434196	Identifier	Value		3434151	1					
ANR	3434197	ArgumentList			3434151	1					
ANR	3434198	Argument	mypid		3434151	2					
ANR	3434199	Identifier	mypid		3434151	0					
ANR	3434200	Argument	( int ) time ( 0 )		3434151	3					
ANR	3434201	CastExpression	( int ) time ( 0 )		3434151	0					
ANR	3434202	CastTarget	int		3434151	0					
ANR	3434203	CallExpression	time ( 0 )		3434151	1					
ANR	3434204	Callee	time		3434151	0					
ANR	3434205	Identifier	time		3434151	0					
ANR	3434206	ArgumentList	0		3434151	1					
ANR	3434207	Argument	0		3434151	0					
ANR	3434208	PrimaryExpression	0		3434151	0					
ANR	3434209	ExpressionStatement	_my_unique_id = strdup ( tid . Value ( ) )	2754:8:79960:79995	3434151	7	True				
ANR	3434210	AssignmentExpression	_my_unique_id = strdup ( tid . Value ( ) )		3434151	0		=			
ANR	3434211	Identifier	_my_unique_id		3434151	0					
ANR	3434212	CallExpression	strdup ( tid . Value ( ) )		3434151	1					
ANR	3434213	Callee	strdup		3434151	0					
ANR	3434214	Identifier	strdup		3434151	0					
ANR	3434215	ArgumentList	tid . Value ( )		3434151	1					
ANR	3434216	Argument	tid . Value ( )		3434151	0					
ANR	3434217	CallExpression	tid . Value ( )		3434151	0					
ANR	3434218	Callee	tid . Value		3434151	0					
ANR	3434219	MemberAccess	tid . Value		3434151	0					
ANR	3434220	Identifier	tid		3434151	0					
ANR	3434221	Identifier	Value		3434151	1					
ANR	3434222	ArgumentList			3434151	1					
ANR	3434223	ReturnStatement	return _my_unique_id ;	2757:4:80008:80028	3434151	1	True				
ANR	3434224	Identifier	_my_unique_id		3434151	0					
ANR	3434225	ReturnType	char *		3434151	1					
ANR	3434226	Identifier	SecMan :: my_unique_id		3434151	2					
ANR	3434227	ParameterList			3434151	3					
ANR	3434228	CFGEntryNode	ENTRY		3434151		True				
ANR	3434229	CFGExitNode	EXIT		3434151		True				
ANR	3434230	Symbol	_my_unique_id		3434151						
ANR	3434231	Symbol	mypid		3434151						
ANR	3434232	Symbol	get_local_hostname		3434151						
ANR	3434233	Symbol	tid . Value		3434151						
ANR	3434234	Symbol	time		3434151						
ANR	3434235	Symbol	strdup		3434151						
ANR	3434236	Symbol	get_local_hostname ( ) . Value		3434151						
ANR	3434237	Symbol	tid		3434151						
ANR	3434238	Function	SecMan :: set_parent_unique_id	2761:0:80034:80462							
ANR	3434239	FunctionDef	SecMan :: set_parent_unique_id (const char * value)		3434238	0					
ANR	3434240	CompoundStatement		2761:53:80087:80462	3434238	0					
ANR	3434241	IfStatement	if ( _my_parent_unique_id )		3434238	0					
ANR	3434242	Condition	_my_parent_unique_id	2762:5:80094:80113	3434238	0	True				
ANR	3434243	Identifier	_my_parent_unique_id		3434238	0					
ANR	3434244	CompoundStatement		2:27:28:28	3434238	1					
ANR	3434245	ExpressionStatement	free ( _my_parent_unique_id )	2763:2:80120:80147	3434238	0	True				
ANR	3434246	CallExpression	free ( _my_parent_unique_id )		3434238	0					
ANR	3434247	Callee	free		3434238	0					
ANR	3434248	Identifier	free		3434238	0					
ANR	3434249	ArgumentList	_my_parent_unique_id		3434238	1					
ANR	3434250	Argument	_my_parent_unique_id		3434238	0					
ANR	3434251	Identifier	_my_parent_unique_id		3434238	0					
ANR	3434252	ExpressionStatement	_my_parent_unique_id = NULL	2764:2:80151:80178	3434238	1	True				
ANR	3434253	AssignmentExpression	_my_parent_unique_id = NULL		3434238	0		=			
ANR	3434254	Identifier	_my_parent_unique_id		3434238	0					
ANR	3434255	Identifier	NULL		3434238	1					
ANR	3434256	ExpressionStatement	_should_check_env_for_unique_id = false	2770:1:80310:80349	3434238	1	True				
ANR	3434257	AssignmentExpression	_should_check_env_for_unique_id = false		3434238	0		=			
ANR	3434258	Identifier	_should_check_env_for_unique_id		3434238	0					
ANR	3434259	Identifier	false		3434238	1					
ANR	3434260	IfStatement	if ( value && value [ 0 ] )		3434238	2					
ANR	3434261	Condition	value && value [ 0 ]	2772:5:80357:80373	3434238	0	True				
ANR	3434262	AndExpression	value && value [ 0 ]		3434238	0		&&			
ANR	3434263	Identifier	value		3434238	0					
ANR	3434264	ArrayIndexing	value [ 0 ]		3434238	1					
ANR	3434265	Identifier	value		3434238	0					
ANR	3434266	PrimaryExpression	0		3434238	1					
ANR	3434267	CompoundStatement		12:24:288:288	3434238	1					
ANR	3434268	ExpressionStatement	_my_parent_unique_id = strdup ( value )	2773:2:80380:80416	3434238	0	True				
ANR	3434269	AssignmentExpression	_my_parent_unique_id = strdup ( value )		3434238	0		=			
ANR	3434270	Identifier	_my_parent_unique_id		3434238	0					
ANR	3434271	CallExpression	strdup ( value )		3434238	1					
ANR	3434272	Callee	strdup		3434238	0					
ANR	3434273	Identifier	strdup		3434238	0					
ANR	3434274	ArgumentList	value		3434238	1					
ANR	3434275	Argument	value		3434238	0					
ANR	3434276	Identifier	value		3434238	0					
ANR	3434277	ReturnStatement	return ( _my_parent_unique_id != NULL ) ;	2776:1:80423:80460	3434238	3	True				
ANR	3434278	EqualityExpression	_my_parent_unique_id != NULL		3434238	0		!=			
ANR	3434279	Identifier	_my_parent_unique_id		3434238	0					
ANR	3434280	Identifier	NULL		3434238	1					
ANR	3434281	ReturnType	bool		3434238	1					
ANR	3434282	Identifier	SecMan :: set_parent_unique_id		3434238	2					
ANR	3434283	ParameterList	const char * value		3434238	3					
ANR	3434284	Parameter	const char * value	2761:34:80068:80084	3434238	0	True				
ANR	3434285	ParameterType	const char *		3434238	0					
ANR	3434286	Identifier	value		3434238	1					
ANR	3434287	CFGEntryNode	ENTRY		3434238		True				
ANR	3434288	CFGExitNode	EXIT		3434238		True				
ANR	3434289	Symbol	NULL		3434238						
ANR	3434290	Symbol	* value		3434238						
ANR	3434291	Symbol	false		3434238						
ANR	3434292	Symbol	_my_parent_unique_id		3434238						
ANR	3434293	Symbol	strdup		3434238						
ANR	3434294	Symbol	value		3434238						
ANR	3434295	Symbol	_should_check_env_for_unique_id		3434238						
ANR	3434296	Function	SecMan :: my_parent_unique_id	2779:0:80465:80872							
ANR	3434297	FunctionDef	SecMan :: my_parent_unique_id ()		3434296	0					
ANR	3434298	CompoundStatement		2779:36:80501:80872	3434296	0					
ANR	3434299	IfStatement	if ( _should_check_env_for_unique_id )		3434296	0					
ANR	3434300	Condition	_should_check_env_for_unique_id	2780:5:80508:80538	3434296	0	True				
ANR	3434301	Identifier	_should_check_env_for_unique_id		3434296	0					
ANR	3434302	CompoundStatement		8:2:223:237	3434296	1					
ANR	3434303	ExpressionStatement	_should_check_env_for_unique_id = false	2782:2:80588:80627	3434296	0	True				
ANR	3434304	AssignmentExpression	_should_check_env_for_unique_id = false		3434296	0		=			
ANR	3434305	Identifier	_should_check_env_for_unique_id		3434296	0					
ANR	3434306	Identifier	false		3434296	1					
ANR	3434307	IdentifierDeclStatement	const char * envName = EnvGetName ( ENV_PARENT_ID ) ;	2785:2:80671:80721	3434296	1	True				
ANR	3434308	IdentifierDecl	* envName = EnvGetName ( ENV_PARENT_ID )		3434296	0					
ANR	3434309	IdentifierDeclType	const char *		3434296	0					
ANR	3434310	Identifier	envName		3434296	1					
ANR	3434311	AssignmentExpression	* envName = EnvGetName ( ENV_PARENT_ID )		3434296	2		=			
ANR	3434312	Identifier	envName		3434296	0					
ANR	3434313	CallExpression	EnvGetName ( ENV_PARENT_ID )		3434296	1					
ANR	3434314	Callee	EnvGetName		3434296	0					
ANR	3434315	Identifier	EnvGetName		3434296	0					
ANR	3434316	ArgumentList	ENV_PARENT_ID		3434296	1					
ANR	3434317	Argument	ENV_PARENT_ID		3434296	0					
ANR	3434318	Identifier	ENV_PARENT_ID		3434296	0					
ANR	3434319	IdentifierDeclStatement	MyString value ;	2786:2:80725:80739	3434296	2	True				
ANR	3434320	IdentifierDecl	value		3434296	0					
ANR	3434321	IdentifierDeclType	MyString		3434296	0					
ANR	3434322	Identifier	value		3434296	1					
ANR	3434323	ExpressionStatement	"GetEnv ( envName , value )"	2787:2:80743:80767	3434296	3	True				
ANR	3434324	CallExpression	"GetEnv ( envName , value )"		3434296	0					
ANR	3434325	Callee	GetEnv		3434296	0					
ANR	3434326	Identifier	GetEnv		3434296	0					
ANR	3434327	ArgumentList	envName		3434296	1					
ANR	3434328	Argument	envName		3434296	0					
ANR	3434329	Identifier	envName		3434296	0					
ANR	3434330	Argument	value		3434296	1					
ANR	3434331	Identifier	value		3434296	0					
ANR	3434332	IfStatement	if ( value . Length ( ) )		3434296	4					
ANR	3434333	Condition	value . Length ( )	2789:6:80776:80789	3434296	0	True				
ANR	3434334	CallExpression	value . Length ( )		3434296	0					
ANR	3434335	Callee	value . Length		3434296	0					
ANR	3434336	MemberAccess	value . Length		3434296	0					
ANR	3434337	Identifier	value		3434296	0					
ANR	3434338	Identifier	Length		3434296	1					
ANR	3434339	ArgumentList			3434296	1					
ANR	3434340	CompoundStatement		11:22:290:290	3434296	1					
ANR	3434341	ExpressionStatement	set_parent_unique_id ( value . Value ( ) )	2790:3:80797:80832	3434296	0	True				
ANR	3434342	CallExpression	set_parent_unique_id ( value . Value ( ) )		3434296	0					
ANR	3434343	Callee	set_parent_unique_id		3434296	0					
ANR	3434344	Identifier	set_parent_unique_id		3434296	0					
ANR	3434345	ArgumentList	value . Value ( )		3434296	1					
ANR	3434346	Argument	value . Value ( )		3434296	0					
ANR	3434347	CallExpression	value . Value ( )		3434296	0					
ANR	3434348	Callee	value . Value		3434296	0					
ANR	3434349	MemberAccess	value . Value		3434296	0					
ANR	3434350	Identifier	value		3434296	0					
ANR	3434351	Identifier	Value		3434296	1					
ANR	3434352	ArgumentList			3434296	1					
ANR	3434353	ReturnStatement	return _my_parent_unique_id ;	2794:1:80843:80870	3434296	1	True				
ANR	3434354	Identifier	_my_parent_unique_id		3434296	0					
ANR	3434355	ReturnType	char *		3434296	1					
ANR	3434356	Identifier	SecMan :: my_parent_unique_id		3434296	2					
ANR	3434357	ParameterList			3434296	3					
ANR	3434358	CFGEntryNode	ENTRY		3434296		True				
ANR	3434359	CFGExitNode	EXIT		3434296		True				
ANR	3434360	Symbol	envName		3434296						
ANR	3434361	Symbol	false		3434296						
ANR	3434362	Symbol	value . Length		3434296						
ANR	3434363	Symbol	value . Value		3434296						
ANR	3434364	Symbol	_my_parent_unique_id		3434296						
ANR	3434365	Symbol	ENV_PARENT_ID		3434296						
ANR	3434366	Symbol	EnvGetName		3434296						
ANR	3434367	Symbol	value		3434296						
ANR	3434368	Symbol	_should_check_env_for_unique_id		3434296						
ANR	3434369	Function	SecMan :: authenticate_sock	2797:0:80875:81138							
ANR	3434370	FunctionDef	"SecMan :: authenticate_sock (Sock * s , DCpermission perm , CondorError * errstack)"		3434369	0					
ANR	3434371	CompoundStatement		2799:0:80955:81138	3434369	0					
ANR	3434372	IdentifierDeclStatement	MyString methods ;	2800:1:80958:80974	3434369	0	True				
ANR	3434373	IdentifierDecl	methods		3434369	0					
ANR	3434374	IdentifierDeclType	MyString		3434369	0					
ANR	3434375	Identifier	methods		3434369	1					
ANR	3434376	ExpressionStatement	"getAuthenticationMethods ( perm , & methods )"	2801:1:80977:81019	3434369	1	True				
ANR	3434377	CallExpression	"getAuthenticationMethods ( perm , & methods )"		3434369	0					
ANR	3434378	Callee	getAuthenticationMethods		3434369	0					
ANR	3434379	Identifier	getAuthenticationMethods		3434369	0					
ANR	3434380	ArgumentList	perm		3434369	1					
ANR	3434381	Argument	perm		3434369	0					
ANR	3434382	Identifier	perm		3434369	0					
ANR	3434383	Argument	& methods		3434369	1					
ANR	3434384	UnaryOperationExpression	& methods		3434369	0					
ANR	3434385	UnaryOperator	&		3434369	0					
ANR	3434386	Identifier	methods		3434369	1					
ANR	3434387	ExpressionStatement	ASSERT ( s )	2802:1:81022:81031	3434369	2	True				
ANR	3434388	CallExpression	ASSERT ( s )		3434369	0					
ANR	3434389	Callee	ASSERT		3434369	0					
ANR	3434390	Identifier	ASSERT		3434369	0					
ANR	3434391	ArgumentList	s		3434369	1					
ANR	3434392	Argument	s		3434369	0					
ANR	3434393	Identifier	s		3434369	0					
ANR	3434394	IdentifierDeclStatement	int auth_timeout = getSecTimeout ( perm ) ;	2803:1:81034:81072	3434369	3	True				
ANR	3434395	IdentifierDecl	auth_timeout = getSecTimeout ( perm )		3434369	0					
ANR	3434396	IdentifierDeclType	int		3434369	0					
ANR	3434397	Identifier	auth_timeout		3434369	1					
ANR	3434398	AssignmentExpression	auth_timeout = getSecTimeout ( perm )		3434369	2		=			
ANR	3434399	Identifier	auth_timeout		3434369	0					
ANR	3434400	CallExpression	getSecTimeout ( perm )		3434369	1					
ANR	3434401	Callee	getSecTimeout		3434369	0					
ANR	3434402	Identifier	getSecTimeout		3434369	0					
ANR	3434403	ArgumentList	perm		3434369	1					
ANR	3434404	Argument	perm		3434369	0					
ANR	3434405	Identifier	perm		3434369	0					
ANR	3434406	ReturnStatement	"return s -> authenticate ( methods . Value ( ) , errstack , auth_timeout ) ;"	2804:1:81075:81136	3434369	4	True				
ANR	3434407	CallExpression	"s -> authenticate ( methods . Value ( ) , errstack , auth_timeout )"		3434369	0					
ANR	3434408	Callee	s -> authenticate		3434369	0					
ANR	3434409	PtrMemberAccess	s -> authenticate		3434369	0					
ANR	3434410	Identifier	s		3434369	0					
ANR	3434411	Identifier	authenticate		3434369	1					
ANR	3434412	ArgumentList	methods . Value ( )		3434369	1					
ANR	3434413	Argument	methods . Value ( )		3434369	0					
ANR	3434414	CallExpression	methods . Value ( )		3434369	0					
ANR	3434415	Callee	methods . Value		3434369	0					
ANR	3434416	MemberAccess	methods . Value		3434369	0					
ANR	3434417	Identifier	methods		3434369	0					
ANR	3434418	Identifier	Value		3434369	1					
ANR	3434419	ArgumentList			3434369	1					
ANR	3434420	Argument	errstack		3434369	1					
ANR	3434421	Identifier	errstack		3434369	0					
ANR	3434422	Argument	auth_timeout		3434369	2					
ANR	3434423	Identifier	auth_timeout		3434369	0					
ANR	3434424	ReturnType	int		3434369	1					
ANR	3434425	Identifier	SecMan :: authenticate_sock		3434369	2					
ANR	3434426	ParameterList	"Sock * s , DCpermission perm , CondorError * errstack"		3434369	3					
ANR	3434427	Parameter	Sock * s	2798:26:80905:80911	3434369	0	True				
ANR	3434428	ParameterType	Sock *		3434369	0					
ANR	3434429	Identifier	s		3434369	1					
ANR	3434430	Parameter	DCpermission perm	2798:34:80913:80929	3434369	1	True				
ANR	3434431	ParameterType	DCpermission		3434369	0					
ANR	3434432	Identifier	perm		3434369	1					
ANR	3434433	Parameter	CondorError * errstack	2798:53:80932:80952	3434369	2	True				
ANR	3434434	ParameterType	CondorError *		3434369	0					
ANR	3434435	Identifier	errstack		3434369	1					
ANR	3434436	CFGEntryNode	ENTRY		3434369		True				
ANR	3434437	CFGExitNode	EXIT		3434369		True				
ANR	3434438	Symbol	auth_timeout		3434369						
ANR	3434439	Symbol	s		3434369						
ANR	3434440	Symbol	errstack		3434369						
ANR	3434441	Symbol	perm		3434369						
ANR	3434442	Symbol	methods		3434369						
ANR	3434443	Symbol	methods . Value		3434369						
ANR	3434444	Symbol	& methods		3434369						
ANR	3434445	Symbol	getSecTimeout		3434369						
ANR	3434446	Symbol	* s		3434369						
ANR	3434447	Symbol	s -> authenticate		3434369						
ANR	3434448	Function	SecMan :: authenticate_sock	2807:0:81141:81421							
ANR	3434449	FunctionDef	"SecMan :: authenticate_sock (Sock * s , KeyInfo * & ki , DCpermission perm , CondorError * errstack)"		3434448	0					
ANR	3434450	CompoundStatement		2809:0:81235:81421	3434448	0					
ANR	3434451	IdentifierDeclStatement	MyString methods ;	2810:1:81238:81254	3434448	0	True				
ANR	3434452	IdentifierDecl	methods		3434448	0					
ANR	3434453	IdentifierDeclType	MyString		3434448	0					
ANR	3434454	Identifier	methods		3434448	1					
ANR	3434455	ExpressionStatement	"getAuthenticationMethods ( perm , & methods )"	2811:1:81257:81299	3434448	1	True				
ANR	3434456	CallExpression	"getAuthenticationMethods ( perm , & methods )"		3434448	0					
ANR	3434457	Callee	getAuthenticationMethods		3434448	0					
ANR	3434458	Identifier	getAuthenticationMethods		3434448	0					
ANR	3434459	ArgumentList	perm		3434448	1					
ANR	3434460	Argument	perm		3434448	0					
ANR	3434461	Identifier	perm		3434448	0					
ANR	3434462	Argument	& methods		3434448	1					
ANR	3434463	UnaryOperationExpression	& methods		3434448	0					
ANR	3434464	UnaryOperator	&		3434448	0					
ANR	3434465	Identifier	methods		3434448	1					
ANR	3434466	ExpressionStatement	ASSERT ( s )	2812:1:81302:81311	3434448	2	True				
ANR	3434467	CallExpression	ASSERT ( s )		3434448	0					
ANR	3434468	Callee	ASSERT		3434448	0					
ANR	3434469	Identifier	ASSERT		3434448	0					
ANR	3434470	ArgumentList	s		3434448	1					
ANR	3434471	Argument	s		3434448	0					
ANR	3434472	Identifier	s		3434448	0					
ANR	3434473	IdentifierDeclStatement	int auth_timeout = getSecTimeout ( perm ) ;	2813:1:81314:81352	3434448	3	True				
ANR	3434474	IdentifierDecl	auth_timeout = getSecTimeout ( perm )		3434448	0					
ANR	3434475	IdentifierDeclType	int		3434448	0					
ANR	3434476	Identifier	auth_timeout		3434448	1					
ANR	3434477	AssignmentExpression	auth_timeout = getSecTimeout ( perm )		3434448	2		=			
ANR	3434478	Identifier	auth_timeout		3434448	0					
ANR	3434479	CallExpression	getSecTimeout ( perm )		3434448	1					
ANR	3434480	Callee	getSecTimeout		3434448	0					
ANR	3434481	Identifier	getSecTimeout		3434448	0					
ANR	3434482	ArgumentList	perm		3434448	1					
ANR	3434483	Argument	perm		3434448	0					
ANR	3434484	Identifier	perm		3434448	0					
ANR	3434485	ReturnStatement	"return s -> authenticate ( ki , methods . Value ( ) , errstack , auth_timeout ) ;"	2814:1:81355:81419	3434448	4	True				
ANR	3434486	CallExpression	"s -> authenticate ( ki , methods . Value ( ) , errstack , auth_timeout )"		3434448	0					
ANR	3434487	Callee	s -> authenticate		3434448	0					
ANR	3434488	PtrMemberAccess	s -> authenticate		3434448	0					
ANR	3434489	Identifier	s		3434448	0					
ANR	3434490	Identifier	authenticate		3434448	1					
ANR	3434491	ArgumentList	ki		3434448	1					
ANR	3434492	Argument	ki		3434448	0					
ANR	3434493	Identifier	ki		3434448	0					
ANR	3434494	Argument	methods . Value ( )		3434448	1					
ANR	3434495	CallExpression	methods . Value ( )		3434448	0					
ANR	3434496	Callee	methods . Value		3434448	0					
ANR	3434497	MemberAccess	methods . Value		3434448	0					
ANR	3434498	Identifier	methods		3434448	0					
ANR	3434499	Identifier	Value		3434448	1					
ANR	3434500	ArgumentList			3434448	1					
ANR	3434501	Argument	errstack		3434448	2					
ANR	3434502	Identifier	errstack		3434448	0					
ANR	3434503	Argument	auth_timeout		3434448	3					
ANR	3434504	Identifier	auth_timeout		3434448	0					
ANR	3434505	ReturnType	int		3434448	1					
ANR	3434506	Identifier	SecMan :: authenticate_sock		3434448	2					
ANR	3434507	ParameterList	"Sock * s , KeyInfo * & ki , DCpermission perm , CondorError * errstack"		3434448	3					
ANR	3434508	Parameter	Sock * s	2808:26:81171:81177	3434448	0	True				
ANR	3434509	ParameterType	Sock *		3434448	0					
ANR	3434510	Identifier	s		3434448	1					
ANR	3434511	Parameter	KeyInfo * & ki	2808:34:81179:81190	3434448	1	True				
ANR	3434512	ParameterType	KeyInfo * &		3434448	0					
ANR	3434513	Identifier	ki		3434448	1					
ANR	3434514	Parameter	DCpermission perm	2808:48:81193:81209	3434448	2	True				
ANR	3434515	ParameterType	DCpermission		3434448	0					
ANR	3434516	Identifier	perm		3434448	1					
ANR	3434517	Parameter	CondorError * errstack	2808:67:81212:81232	3434448	3	True				
ANR	3434518	ParameterType	CondorError *		3434448	0					
ANR	3434519	Identifier	errstack		3434448	1					
ANR	3434520	CFGEntryNode	ENTRY		3434448		True				
ANR	3434521	CFGExitNode	EXIT		3434448		True				
ANR	3434522	Symbol	auth_timeout		3434448						
ANR	3434523	Symbol	s		3434448						
ANR	3434524	Symbol	errstack		3434448						
ANR	3434525	Symbol	perm		3434448						
ANR	3434526	Symbol	methods		3434448						
ANR	3434527	Symbol	methods . Value		3434448						
ANR	3434528	Symbol	& methods		3434448						
ANR	3434529	Symbol	getSecTimeout		3434448						
ANR	3434530	Symbol	* s		3434448						
ANR	3434531	Symbol	ki		3434448						
ANR	3434532	Symbol	s -> authenticate		3434448						
ANR	3434533	Function	SecMan :: getSecTimeout	2817:0:81424:81587							
ANR	3434534	FunctionDef	SecMan :: getSecTimeout (DCpermission perm)		3434533	0					
ANR	3434535	CompoundStatement		2819:0:81469:81587	3434533	0					
ANR	3434536	IdentifierDeclStatement	int auth_timeout = - 1 ;	2820:1:81472:81493	3434533	0	True				
ANR	3434537	IdentifierDecl	auth_timeout = - 1		3434533	0					
ANR	3434538	IdentifierDeclType	int		3434533	0					
ANR	3434539	Identifier	auth_timeout		3434533	1					
ANR	3434540	AssignmentExpression	auth_timeout = - 1		3434533	2		=			
ANR	3434541	Identifier	auth_timeout		3434533	0					
ANR	3434542	UnaryOperationExpression	- 1		3434533	1					
ANR	3434543	UnaryOperator	-		3434533	0					
ANR	3434544	PrimaryExpression	1		3434533	1					
ANR	3434545	ExpressionStatement	"getIntSecSetting ( auth_timeout , ""SEC_%s_AUTHENTICATION_TIMEOUT"" , perm )"	2821:1:81496:81563	3434533	1	True				
ANR	3434546	CallExpression	"getIntSecSetting ( auth_timeout , ""SEC_%s_AUTHENTICATION_TIMEOUT"" , perm )"		3434533	0					
ANR	3434547	Callee	getIntSecSetting		3434533	0					
ANR	3434548	Identifier	getIntSecSetting		3434533	0					
ANR	3434549	ArgumentList	auth_timeout		3434533	1					
ANR	3434550	Argument	auth_timeout		3434533	0					
ANR	3434551	Identifier	auth_timeout		3434533	0					
ANR	3434552	Argument	"""SEC_%s_AUTHENTICATION_TIMEOUT"""		3434533	1					
ANR	3434553	PrimaryExpression	"""SEC_%s_AUTHENTICATION_TIMEOUT"""		3434533	0					
ANR	3434554	Argument	perm		3434533	2					
ANR	3434555	Identifier	perm		3434533	0					
ANR	3434556	ReturnStatement	return auth_timeout ;	2822:1:81566:81585	3434533	2	True				
ANR	3434557	Identifier	auth_timeout		3434533	0					
ANR	3434558	ReturnType	int		3434533	1					
ANR	3434559	Identifier	SecMan :: getSecTimeout		3434533	2					
ANR	3434560	ParameterList	DCpermission perm		3434533	3					
ANR	3434561	Parameter	DCpermission perm	2818:22:81450:81466	3434533	0	True				
ANR	3434562	ParameterType	DCpermission		3434533	0					
ANR	3434563	Identifier	perm		3434533	1					
ANR	3434564	CFGEntryNode	ENTRY		3434533		True				
ANR	3434565	CFGExitNode	EXIT		3434533		True				
ANR	3434566	Symbol	auth_timeout		3434533						
ANR	3434567	Symbol	perm		3434533						
ANR	3434568	Function	CryptProtocolNameToEnum	2825:0:81590:81826							
ANR	3434569	FunctionDef	CryptProtocolNameToEnum (char const * name)		3434568	0					
ANR	3434570	CompoundStatement		2825:51:81641:81826	3434568	0					
ANR	3434571	SwitchStatement	switch ( toupper ( * name ) )		3434568	0					
ANR	3434572	Condition	toupper ( * name )	2826:9:81652:81665	3434568	0	True				
ANR	3434573	CallExpression	toupper ( * name )		3434568	0					
ANR	3434574	Callee	toupper		3434568	0					
ANR	3434575	Identifier	toupper		3434568	0					
ANR	3434576	ArgumentList	* name		3434568	1					
ANR	3434577	Argument	* name		3434568	0					
ANR	3434578	UnaryOperationExpression	* name		3434568	0					
ANR	3434579	UnaryOperator	*		3434568	0					
ANR	3434580	Identifier	name		3434568	1					
ANR	3434581	CompoundStatement		2:25:26:26	3434568	1					
ANR	3434582	Label	case 'B' :	2827:1:81671:81679	3434568	0	True				
ANR	3434583	ReturnStatement	return CONDOR_BLOWFISH ;	2828:2:81695:81717	3434568	1	True				
ANR	3434584	Identifier	CONDOR_BLOWFISH		3434568	0					
ANR	3434585	Label	case '3' :	2829:1:81720:81728	3434568	2	True				
ANR	3434586	Label	case 'T' :	2830:1:81739:81747	3434568	3	True				
ANR	3434587	ReturnStatement	return CONDOR_3DES ;	2831:2:81764:81782	3434568	4	True				
ANR	3434588	Identifier	CONDOR_3DES		3434568	0					
ANR	3434589	Label	default :	2832:1:81785:81792	3434568	5	True				
ANR	3434590	Identifier	default		3434568	0					
ANR	3434591	ReturnStatement	return CONDOR_NO_PROTOCOL ;	2833:2:81796:81821	3434568	6	True				
ANR	3434592	Identifier	CONDOR_NO_PROTOCOL		3434568	0					
ANR	3434593	ReturnType	Protocol		3434568	1					
ANR	3434594	Identifier	CryptProtocolNameToEnum		3434568	2					
ANR	3434595	ParameterList	char const * name		3434568	3					
ANR	3434596	Parameter	char const * name	2825:33:81623:81638	3434568	0	True				
ANR	3434597	ParameterType	char const *		3434568	0					
ANR	3434598	Identifier	name		3434568	1					
ANR	3434599	CFGEntryNode	ENTRY		3434568		True				
ANR	3434600	CFGExitNode	EXIT		3434568		True				
ANR	3434601	Symbol	* name		3434568						
ANR	3434602	Symbol	CONDOR_3DES		3434568						
ANR	3434603	Symbol	toupper		3434568						
ANR	3434604	Symbol	name		3434568						
ANR	3434605	Symbol	CONDOR_NO_PROTOCOL		3434568						
ANR	3434606	Symbol	CONDOR_BLOWFISH		3434568						
ANR	3434607	Function	SecMan :: CreateNonNegotiatedSecuritySession	2837:0:81829:86724							
ANR	3434608	FunctionDef	"SecMan :: CreateNonNegotiatedSecuritySession (DCpermission auth_level , char const * sesid , char const * private_key , char const * exported_session_info , char const * peer_fqu , char const * peer_sinful , int duration)"		3434607	0					
ANR	3434609	CompoundStatement		2839:0:82039:86724	3434607	0					
ANR	3434610	IdentifierDeclStatement	ClassAd policy ;	2840:1:82042:82056	3434607	0	True				
ANR	3434611	IdentifierDecl	policy		3434607	0					
ANR	3434612	IdentifierDeclType	ClassAd		3434607	0					
ANR	3434613	Identifier	policy		3434607	1					
ANR	3434614	ExpressionStatement	ASSERT ( sesid )	2842:1:82060:82073	3434607	1	True				
ANR	3434615	CallExpression	ASSERT ( sesid )		3434607	0					
ANR	3434616	Callee	ASSERT		3434607	0					
ANR	3434617	Identifier	ASSERT		3434607	0					
ANR	3434618	ArgumentList	sesid		3434607	1					
ANR	3434619	Argument	sesid		3434607	0					
ANR	3434620	Identifier	sesid		3434607	0					
ANR	3434621	IdentifierDeclStatement	condor_sockaddr peer_addr ;	2844:1:82077:82102	3434607	2	True				
ANR	3434622	IdentifierDecl	peer_addr		3434607	0					
ANR	3434623	IdentifierDeclType	condor_sockaddr		3434607	0					
ANR	3434624	Identifier	peer_addr		3434607	1					
ANR	3434625	IfStatement	if ( peer_sinful && ! peer_addr . from_sinful ( peer_sinful ) )		3434607	3					
ANR	3434626	Condition	peer_sinful && ! peer_addr . from_sinful ( peer_sinful )	2845:4:82108:82157	3434607	0	True				
ANR	3434627	AndExpression	peer_sinful && ! peer_addr . from_sinful ( peer_sinful )		3434607	0		&&			
ANR	3434628	Identifier	peer_sinful		3434607	0					
ANR	3434629	UnaryOperationExpression	! peer_addr . from_sinful ( peer_sinful )		3434607	1					
ANR	3434630	UnaryOperator	!		3434607	0					
ANR	3434631	CallExpression	peer_addr . from_sinful ( peer_sinful )		3434607	1					
ANR	3434632	Callee	peer_addr . from_sinful		3434607	0					
ANR	3434633	MemberAccess	peer_addr . from_sinful		3434607	0					
ANR	3434634	Identifier	peer_addr		3434607	0					
ANR	3434635	Identifier	from_sinful		3434607	1					
ANR	3434636	ArgumentList	peer_sinful		3434607	1					
ANR	3434637	Argument	peer_sinful		3434607	0					
ANR	3434638	Identifier	peer_sinful		3434607	0					
ANR	3434639	CompoundStatement		7:56:120:120	3434607	1					
ANR	3434640	Statement	dprintf	2846:2:82164:82170	3434607	0	True				
ANR	3434641	Statement	(	2846:9:82171:82171	3434607	1	True				
ANR	3434642	Statement	D_ALWAYS	2846:10:82172:82179	3434607	2	True				
ANR	3434643	Statement	","	2846:18:82180:82180	3434607	3	True				
ANR	3434644	Statement	"""SECMAN: failed to create non-negotiated security session %s because"""	2846:19:82181:82249	3434607	4	True				
ANR	3434645	Statement	"""string_to_sin(%s) failed\\n"""	2847:4:82255:82282	3434607	5	True				
ANR	3434646	Statement	","	2847:32:82283:82283	3434607	6	True				
ANR	3434647	Statement	sesid	2847:33:82284:82288	3434607	7	True				
ANR	3434648	Statement	","	2847:38:82289:82289	3434607	8	True				
ANR	3434649	Statement	peer_sinful	2847:39:82290:82300	3434607	9	True				
ANR	3434650	Statement	)	2847:50:82301:82301	3434607	10	True				
ANR	3434651	ExpressionStatement		2847:51:82302:82302	3434607	11	True				
ANR	3434652	ReturnStatement	return false ;	2848:2:82306:82318	3434607	12	True				
ANR	3434653	Identifier	false		3434607	0					
ANR	3434654	ExpressionStatement	"FillInSecurityPolicyAd ( auth_level , & policy , false )"	2851:1:82325:82377	3434607	4	True				
ANR	3434655	CallExpression	"FillInSecurityPolicyAd ( auth_level , & policy , false )"		3434607	0					
ANR	3434656	Callee	FillInSecurityPolicyAd		3434607	0					
ANR	3434657	Identifier	FillInSecurityPolicyAd		3434607	0					
ANR	3434658	ArgumentList	auth_level		3434607	1					
ANR	3434659	Argument	auth_level		3434607	0					
ANR	3434660	Identifier	auth_level		3434607	0					
ANR	3434661	Argument	& policy		3434607	1					
ANR	3434662	UnaryOperationExpression	& policy		3434607	0					
ANR	3434663	UnaryOperator	&		3434607	0					
ANR	3434664	Identifier	policy		3434607	1					
ANR	3434665	Argument	false		3434607	2					
ANR	3434666	Identifier	false		3434607	0					
ANR	3434667	ExpressionStatement	"policy . Assign ( ATTR_SEC_NEGOTIATION , SecMan :: sec_req_rev [ SEC_REQ_REQUIRED ] )"	2857:1:82601:82674	3434607	5	True				
ANR	3434668	CallExpression	"policy . Assign ( ATTR_SEC_NEGOTIATION , SecMan :: sec_req_rev [ SEC_REQ_REQUIRED ] )"		3434607	0					
ANR	3434669	Callee	policy . Assign		3434607	0					
ANR	3434670	MemberAccess	policy . Assign		3434607	0					
ANR	3434671	Identifier	policy		3434607	0					
ANR	3434672	Identifier	Assign		3434607	1					
ANR	3434673	ArgumentList	ATTR_SEC_NEGOTIATION		3434607	1					
ANR	3434674	Argument	ATTR_SEC_NEGOTIATION		3434607	0					
ANR	3434675	Identifier	ATTR_SEC_NEGOTIATION		3434607	0					
ANR	3434676	Argument	SecMan :: sec_req_rev [ SEC_REQ_REQUIRED ]		3434607	1					
ANR	3434677	ArrayIndexing	SecMan :: sec_req_rev [ SEC_REQ_REQUIRED ]		3434607	0					
ANR	3434678	Identifier	SecMan :: sec_req_rev		3434607	0					
ANR	3434679	Identifier	SEC_REQ_REQUIRED		3434607	1					
ANR	3434680	IdentifierDeclStatement	"ClassAd * auth_info = ReconcileSecurityPolicyAds ( policy , policy ) ;"	2859:1:82678:82740	3434607	6	True				
ANR	3434681	IdentifierDecl	"* auth_info = ReconcileSecurityPolicyAds ( policy , policy )"		3434607	0					
ANR	3434682	IdentifierDeclType	ClassAd *		3434607	0					
ANR	3434683	Identifier	auth_info		3434607	1					
ANR	3434684	AssignmentExpression	"* auth_info = ReconcileSecurityPolicyAds ( policy , policy )"		3434607	2		=			
ANR	3434685	Identifier	auth_info		3434607	0					
ANR	3434686	CallExpression	"ReconcileSecurityPolicyAds ( policy , policy )"		3434607	1					
ANR	3434687	Callee	ReconcileSecurityPolicyAds		3434607	0					
ANR	3434688	Identifier	ReconcileSecurityPolicyAds		3434607	0					
ANR	3434689	ArgumentList	policy		3434607	1					
ANR	3434690	Argument	policy		3434607	0					
ANR	3434691	Identifier	policy		3434607	0					
ANR	3434692	Argument	policy		3434607	1					
ANR	3434693	Identifier	policy		3434607	0					
ANR	3434694	IfStatement	if ( ! auth_info )		3434607	7					
ANR	3434695	Condition	! auth_info	2860:4:82746:82755	3434607	0	True				
ANR	3434696	UnaryOperationExpression	! auth_info		3434607	0					
ANR	3434697	UnaryOperator	!		3434607	0					
ANR	3434698	Identifier	auth_info		3434607	1					
ANR	3434699	CompoundStatement		22:16:718:718	3434607	1					
ANR	3434700	Statement	dprintf	2861:2:82762:82768	3434607	0	True				
ANR	3434701	Statement	(	2861:9:82769:82769	3434607	1	True				
ANR	3434702	Statement	D_ALWAYS	2861:10:82770:82777	3434607	2	True				
ANR	3434703	Statement	","	2861:18:82778:82778	3434607	3	True				
ANR	3434704	Statement	"""SECMAN: failed to create non-negotiated security session %s because"""	2861:19:82779:82847	3434607	4	True				
ANR	3434705	Statement	"""ReconcileSecurityPolicyAds() failed.\\n"""	2862:4:82853:82892	3434607	5	True				
ANR	3434706	Statement	","	2862:44:82893:82893	3434607	6	True				
ANR	3434707	Statement	sesid	2862:45:82894:82898	3434607	7	True				
ANR	3434708	Statement	)	2862:50:82899:82899	3434607	8	True				
ANR	3434709	ExpressionStatement		2862:51:82900:82900	3434607	9	True				
ANR	3434710	ReturnStatement	return false ;	2863:2:82904:82916	3434607	10	True				
ANR	3434711	Identifier	false		3434607	0					
ANR	3434712	ExpressionStatement	"sec_copy_attribute ( policy , * auth_info , ATTR_SEC_AUTHENTICATION )"	2865:1:82922:82983	3434607	8	True				
ANR	3434713	CallExpression	"sec_copy_attribute ( policy , * auth_info , ATTR_SEC_AUTHENTICATION )"		3434607	0					
ANR	3434714	Callee	sec_copy_attribute		3434607	0					
ANR	3434715	Identifier	sec_copy_attribute		3434607	0					
ANR	3434716	ArgumentList	policy		3434607	1					
ANR	3434717	Argument	policy		3434607	0					
ANR	3434718	Identifier	policy		3434607	0					
ANR	3434719	Argument	* auth_info		3434607	1					
ANR	3434720	UnaryOperationExpression	* auth_info		3434607	0					
ANR	3434721	UnaryOperator	*		3434607	0					
ANR	3434722	Identifier	auth_info		3434607	1					
ANR	3434723	Argument	ATTR_SEC_AUTHENTICATION		3434607	2					
ANR	3434724	Identifier	ATTR_SEC_AUTHENTICATION		3434607	0					
ANR	3434725	ExpressionStatement	"sec_copy_attribute ( policy , * auth_info , ATTR_SEC_INTEGRITY )"	2866:1:82986:83042	3434607	9	True				
ANR	3434726	CallExpression	"sec_copy_attribute ( policy , * auth_info , ATTR_SEC_INTEGRITY )"		3434607	0					
ANR	3434727	Callee	sec_copy_attribute		3434607	0					
ANR	3434728	Identifier	sec_copy_attribute		3434607	0					
ANR	3434729	ArgumentList	policy		3434607	1					
ANR	3434730	Argument	policy		3434607	0					
ANR	3434731	Identifier	policy		3434607	0					
ANR	3434732	Argument	* auth_info		3434607	1					
ANR	3434733	UnaryOperationExpression	* auth_info		3434607	0					
ANR	3434734	UnaryOperator	*		3434607	0					
ANR	3434735	Identifier	auth_info		3434607	1					
ANR	3434736	Argument	ATTR_SEC_INTEGRITY		3434607	2					
ANR	3434737	Identifier	ATTR_SEC_INTEGRITY		3434607	0					
ANR	3434738	ExpressionStatement	"sec_copy_attribute ( policy , * auth_info , ATTR_SEC_ENCRYPTION )"	2867:1:83045:83102	3434607	10	True				
ANR	3434739	CallExpression	"sec_copy_attribute ( policy , * auth_info , ATTR_SEC_ENCRYPTION )"		3434607	0					
ANR	3434740	Callee	sec_copy_attribute		3434607	0					
ANR	3434741	Identifier	sec_copy_attribute		3434607	0					
ANR	3434742	ArgumentList	policy		3434607	1					
ANR	3434743	Argument	policy		3434607	0					
ANR	3434744	Identifier	policy		3434607	0					
ANR	3434745	Argument	* auth_info		3434607	1					
ANR	3434746	UnaryOperationExpression	* auth_info		3434607	0					
ANR	3434747	UnaryOperator	*		3434607	0					
ANR	3434748	Identifier	auth_info		3434607	1					
ANR	3434749	Argument	ATTR_SEC_ENCRYPTION		3434607	2					
ANR	3434750	Identifier	ATTR_SEC_ENCRYPTION		3434607	0					
ANR	3434751	ExpressionStatement	"sec_copy_attribute ( policy , * auth_info , ATTR_SEC_CRYPTO_METHODS )"	2868:1:83105:83166	3434607	11	True				
ANR	3434752	CallExpression	"sec_copy_attribute ( policy , * auth_info , ATTR_SEC_CRYPTO_METHODS )"		3434607	0					
ANR	3434753	Callee	sec_copy_attribute		3434607	0					
ANR	3434754	Identifier	sec_copy_attribute		3434607	0					
ANR	3434755	ArgumentList	policy		3434607	1					
ANR	3434756	Argument	policy		3434607	0					
ANR	3434757	Identifier	policy		3434607	0					
ANR	3434758	Argument	* auth_info		3434607	1					
ANR	3434759	UnaryOperationExpression	* auth_info		3434607	0					
ANR	3434760	UnaryOperator	*		3434607	0					
ANR	3434761	Identifier	auth_info		3434607	1					
ANR	3434762	Argument	ATTR_SEC_CRYPTO_METHODS		3434607	2					
ANR	3434763	Identifier	ATTR_SEC_CRYPTO_METHODS		3434607	0					
ANR	3434764	IdentifierDeclStatement	MyString crypto_methods ;	2871:1:83214:83237	3434607	12	True				
ANR	3434765	IdentifierDecl	crypto_methods		3434607	0					
ANR	3434766	IdentifierDeclType	MyString		3434607	0					
ANR	3434767	Identifier	crypto_methods		3434607	1					
ANR	3434768	ExpressionStatement	"policy . LookupString ( ATTR_SEC_CRYPTO_METHODS , crypto_methods )"	2872:1:83240:83299	3434607	13	True				
ANR	3434769	CallExpression	"policy . LookupString ( ATTR_SEC_CRYPTO_METHODS , crypto_methods )"		3434607	0					
ANR	3434770	Callee	policy . LookupString		3434607	0					
ANR	3434771	MemberAccess	policy . LookupString		3434607	0					
ANR	3434772	Identifier	policy		3434607	0					
ANR	3434773	Identifier	LookupString		3434607	1					
ANR	3434774	ArgumentList	ATTR_SEC_CRYPTO_METHODS		3434607	1					
ANR	3434775	Argument	ATTR_SEC_CRYPTO_METHODS		3434607	0					
ANR	3434776	Identifier	ATTR_SEC_CRYPTO_METHODS		3434607	0					
ANR	3434777	Argument	crypto_methods		3434607	1					
ANR	3434778	Identifier	crypto_methods		3434607	0					
ANR	3434779	IfStatement	if ( crypto_methods . Length ( ) )		3434607	14					
ANR	3434780	Condition	crypto_methods . Length ( )	2873:5:83306:83328	3434607	0	True				
ANR	3434781	CallExpression	crypto_methods . Length ( )		3434607	0					
ANR	3434782	Callee	crypto_methods . Length		3434607	0					
ANR	3434783	MemberAccess	crypto_methods . Length		3434607	0					
ANR	3434784	Identifier	crypto_methods		3434607	0					
ANR	3434785	Identifier	Length		3434607	1					
ANR	3434786	ArgumentList			3434607	1					
ANR	3434787	CompoundStatement		36:2:1296:1334	3434607	1					
ANR	3434788	IdentifierDeclStatement	"int pos = crypto_methods . FindChar ( ',' ) ;"	2874:2:83336:83374	3434607	0	True				
ANR	3434789	IdentifierDecl	"pos = crypto_methods . FindChar ( ',' )"		3434607	0					
ANR	3434790	IdentifierDeclType	int		3434607	0					
ANR	3434791	Identifier	pos		3434607	1					
ANR	3434792	AssignmentExpression	"pos = crypto_methods . FindChar ( ',' )"		3434607	2		=			
ANR	3434793	Identifier	pos		3434607	0					
ANR	3434794	CallExpression	"crypto_methods . FindChar ( ',' )"		3434607	1					
ANR	3434795	Callee	crypto_methods . FindChar		3434607	0					
ANR	3434796	MemberAccess	crypto_methods . FindChar		3434607	0					
ANR	3434797	Identifier	crypto_methods		3434607	0					
ANR	3434798	Identifier	FindChar		3434607	1					
ANR	3434799	ArgumentList	"','"		3434607	1					
ANR	3434800	Argument	"','"		3434607	0					
ANR	3434801	PrimaryExpression	"','"		3434607	0					
ANR	3434802	IfStatement	if ( pos >= 0 )		3434607	1					
ANR	3434803	Condition	pos >= 0	2875:6:83382:83389	3434607	0	True				
ANR	3434804	RelationalExpression	pos >= 0		3434607	0		>=			
ANR	3434805	Identifier	pos		3434607	0					
ANR	3434806	PrimaryExpression	0		3434607	1					
ANR	3434807	CompoundStatement		37:17:1353:1353	3434607	1					
ANR	3434808	ExpressionStatement	"crypto_methods . setChar ( pos , '\\0' )"	2876:3:83398:83430	3434607	0	True				
ANR	3434809	CallExpression	"crypto_methods . setChar ( pos , '\\0' )"		3434607	0					
ANR	3434810	Callee	crypto_methods . setChar		3434607	0					
ANR	3434811	MemberAccess	crypto_methods . setChar		3434607	0					
ANR	3434812	Identifier	crypto_methods		3434607	0					
ANR	3434813	Identifier	setChar		3434607	1					
ANR	3434814	ArgumentList	pos		3434607	1					
ANR	3434815	Argument	pos		3434607	0					
ANR	3434816	Identifier	pos		3434607	0					
ANR	3434817	Argument	'\\0'		3434607	1					
ANR	3434818	PrimaryExpression	'\\0'		3434607	0					
ANR	3434819	ExpressionStatement	"policy . Assign ( ATTR_SEC_CRYPTO_METHODS , crypto_methods )"	2877:3:83435:83488	3434607	1	True				
ANR	3434820	CallExpression	"policy . Assign ( ATTR_SEC_CRYPTO_METHODS , crypto_methods )"		3434607	0					
ANR	3434821	Callee	policy . Assign		3434607	0					
ANR	3434822	MemberAccess	policy . Assign		3434607	0					
ANR	3434823	Identifier	policy		3434607	0					
ANR	3434824	Identifier	Assign		3434607	1					
ANR	3434825	ArgumentList	ATTR_SEC_CRYPTO_METHODS		3434607	1					
ANR	3434826	Argument	ATTR_SEC_CRYPTO_METHODS		3434607	0					
ANR	3434827	Identifier	ATTR_SEC_CRYPTO_METHODS		3434607	0					
ANR	3434828	Argument	crypto_methods		3434607	1					
ANR	3434829	Identifier	crypto_methods		3434607	0					
ANR	3434830	Statement	delete	2881:1:83499:83504	3434607	15	True				
ANR	3434831	ExpressionStatement	auth_info	2881:8:83506:83515	3434607	16	True				
ANR	3434832	Identifier	auth_info		3434607	0					
ANR	3434833	ExpressionStatement	auth_info = NULL	2882:1:83518:83534	3434607	17	True				
ANR	3434834	AssignmentExpression	auth_info = NULL		3434607	0		=			
ANR	3434835	Identifier	auth_info		3434607	0					
ANR	3434836	Identifier	NULL		3434607	1					
ANR	3434837	IfStatement	"if ( ! ImportSecSessionInfo ( exported_session_info , policy ) )"		3434607	18					
ANR	3434838	Condition	"! ImportSecSessionInfo ( exported_session_info , policy )"	2884:5:83542:83592	3434607	0	True				
ANR	3434839	UnaryOperationExpression	"! ImportSecSessionInfo ( exported_session_info , policy )"		3434607	0					
ANR	3434840	UnaryOperator	!		3434607	0					
ANR	3434841	CallExpression	"ImportSecSessionInfo ( exported_session_info , policy )"		3434607	1					
ANR	3434842	Callee	ImportSecSessionInfo		3434607	0					
ANR	3434843	Identifier	ImportSecSessionInfo		3434607	0					
ANR	3434844	ArgumentList	exported_session_info		3434607	1					
ANR	3434845	Argument	exported_session_info		3434607	0					
ANR	3434846	Identifier	exported_session_info		3434607	0					
ANR	3434847	Argument	policy		3434607	1					
ANR	3434848	Identifier	policy		3434607	0					
ANR	3434849	CompoundStatement		46:59:1556:1556	3434607	1					
ANR	3434850	ReturnStatement	return false ;	2885:2:83600:83612	3434607	0	True				
ANR	3434851	Identifier	false		3434607	0					
ANR	3434852	ExpressionStatement	"policy . Assign ( ATTR_SEC_USE_SESSION , ""YES"" )"	2888:1:83619:83661	3434607	19	True				
ANR	3434853	CallExpression	"policy . Assign ( ATTR_SEC_USE_SESSION , ""YES"" )"		3434607	0					
ANR	3434854	Callee	policy . Assign		3434607	0					
ANR	3434855	MemberAccess	policy . Assign		3434607	0					
ANR	3434856	Identifier	policy		3434607	0					
ANR	3434857	Identifier	Assign		3434607	1					
ANR	3434858	ArgumentList	ATTR_SEC_USE_SESSION		3434607	1					
ANR	3434859	Argument	ATTR_SEC_USE_SESSION		3434607	0					
ANR	3434860	Identifier	ATTR_SEC_USE_SESSION		3434607	0					
ANR	3434861	Argument	"""YES"""		3434607	1					
ANR	3434862	PrimaryExpression	"""YES"""		3434607	0					
ANR	3434863	ExpressionStatement	"policy . Assign ( ATTR_SEC_SID , sesid )"	2889:1:83664:83698	3434607	20	True				
ANR	3434864	CallExpression	"policy . Assign ( ATTR_SEC_SID , sesid )"		3434607	0					
ANR	3434865	Callee	policy . Assign		3434607	0					
ANR	3434866	MemberAccess	policy . Assign		3434607	0					
ANR	3434867	Identifier	policy		3434607	0					
ANR	3434868	Identifier	Assign		3434607	1					
ANR	3434869	ArgumentList	ATTR_SEC_SID		3434607	1					
ANR	3434870	Argument	ATTR_SEC_SID		3434607	0					
ANR	3434871	Identifier	ATTR_SEC_SID		3434607	0					
ANR	3434872	Argument	sesid		3434607	1					
ANR	3434873	Identifier	sesid		3434607	0					
ANR	3434874	ExpressionStatement	"policy . Assign ( ATTR_SEC_ENACT , ""YES"" )"	2890:1:83701:83737	3434607	21	True				
ANR	3434875	CallExpression	"policy . Assign ( ATTR_SEC_ENACT , ""YES"" )"		3434607	0					
ANR	3434876	Callee	policy . Assign		3434607	0					
ANR	3434877	MemberAccess	policy . Assign		3434607	0					
ANR	3434878	Identifier	policy		3434607	0					
ANR	3434879	Identifier	Assign		3434607	1					
ANR	3434880	ArgumentList	ATTR_SEC_ENACT		3434607	1					
ANR	3434881	Argument	ATTR_SEC_ENACT		3434607	0					
ANR	3434882	Identifier	ATTR_SEC_ENACT		3434607	0					
ANR	3434883	Argument	"""YES"""		3434607	1					
ANR	3434884	PrimaryExpression	"""YES"""		3434607	0					
ANR	3434885	IfStatement	if ( peer_fqu )		3434607	22					
ANR	3434886	Condition	peer_fqu	2892:5:83745:83752	3434607	0	True				
ANR	3434887	Identifier	peer_fqu		3434607	0					
ANR	3434888	CompoundStatement		54:16:1716:1716	3434607	1					
ANR	3434889	ExpressionStatement	"policy . Assign ( ATTR_SEC_AUTHENTICATION , SecMan :: sec_feat_act_rev [ SEC_FEAT_ACT_NO ] )"	2893:2:83760:83841	3434607	0	True				
ANR	3434890	CallExpression	"policy . Assign ( ATTR_SEC_AUTHENTICATION , SecMan :: sec_feat_act_rev [ SEC_FEAT_ACT_NO ] )"		3434607	0					
ANR	3434891	Callee	policy . Assign		3434607	0					
ANR	3434892	MemberAccess	policy . Assign		3434607	0					
ANR	3434893	Identifier	policy		3434607	0					
ANR	3434894	Identifier	Assign		3434607	1					
ANR	3434895	ArgumentList	ATTR_SEC_AUTHENTICATION		3434607	1					
ANR	3434896	Argument	ATTR_SEC_AUTHENTICATION		3434607	0					
ANR	3434897	Identifier	ATTR_SEC_AUTHENTICATION		3434607	0					
ANR	3434898	Argument	SecMan :: sec_feat_act_rev [ SEC_FEAT_ACT_NO ]		3434607	1					
ANR	3434899	ArrayIndexing	SecMan :: sec_feat_act_rev [ SEC_FEAT_ACT_NO ]		3434607	0					
ANR	3434900	Identifier	SecMan :: sec_feat_act_rev		3434607	0					
ANR	3434901	Identifier	SEC_FEAT_ACT_NO		3434607	1					
ANR	3434902	ExpressionStatement	"policy . Assign ( ATTR_SEC_TRIED_AUTHENTICATION , true )"	2894:2:83845:83894	3434607	1	True				
ANR	3434903	CallExpression	"policy . Assign ( ATTR_SEC_TRIED_AUTHENTICATION , true )"		3434607	0					
ANR	3434904	Callee	policy . Assign		3434607	0					
ANR	3434905	MemberAccess	policy . Assign		3434607	0					
ANR	3434906	Identifier	policy		3434607	0					
ANR	3434907	Identifier	Assign		3434607	1					
ANR	3434908	ArgumentList	ATTR_SEC_TRIED_AUTHENTICATION		3434607	1					
ANR	3434909	Argument	ATTR_SEC_TRIED_AUTHENTICATION		3434607	0					
ANR	3434910	Identifier	ATTR_SEC_TRIED_AUTHENTICATION		3434607	0					
ANR	3434911	Argument	true		3434607	1					
ANR	3434912	Identifier	true		3434607	0					
ANR	3434913	ExpressionStatement	"policy . Assign ( ATTR_SEC_USER , peer_fqu )"	2895:2:83898:83935	3434607	2	True				
ANR	3434914	CallExpression	"policy . Assign ( ATTR_SEC_USER , peer_fqu )"		3434607	0					
ANR	3434915	Callee	policy . Assign		3434607	0					
ANR	3434916	MemberAccess	policy . Assign		3434607	0					
ANR	3434917	Identifier	policy		3434607	0					
ANR	3434918	Identifier	Assign		3434607	1					
ANR	3434919	ArgumentList	ATTR_SEC_USER		3434607	1					
ANR	3434920	Argument	ATTR_SEC_USER		3434607	0					
ANR	3434921	Identifier	ATTR_SEC_USER		3434607	0					
ANR	3434922	Argument	peer_fqu		3434607	1					
ANR	3434923	Identifier	peer_fqu		3434607	0					
ANR	3434924	IdentifierDeclStatement	MyString crypto_method ;	2899:1:83943:83965	3434607	23	True				
ANR	3434925	IdentifierDecl	crypto_method		3434607	0					
ANR	3434926	IdentifierDeclType	MyString		3434607	0					
ANR	3434927	Identifier	crypto_method		3434607	1					
ANR	3434928	ExpressionStatement	"policy . LookupString ( ATTR_SEC_CRYPTO_METHODS , crypto_method )"	2900:1:83968:84027	3434607	24	True				
ANR	3434929	CallExpression	"policy . LookupString ( ATTR_SEC_CRYPTO_METHODS , crypto_method )"		3434607	0					
ANR	3434930	Callee	policy . LookupString		3434607	0					
ANR	3434931	MemberAccess	policy . LookupString		3434607	0					
ANR	3434932	Identifier	policy		3434607	0					
ANR	3434933	Identifier	LookupString		3434607	1					
ANR	3434934	ArgumentList	ATTR_SEC_CRYPTO_METHODS		3434607	1					
ANR	3434935	Argument	ATTR_SEC_CRYPTO_METHODS		3434607	0					
ANR	3434936	Identifier	ATTR_SEC_CRYPTO_METHODS		3434607	0					
ANR	3434937	Argument	crypto_method		3434607	1					
ANR	3434938	Identifier	crypto_method		3434607	0					
ANR	3434939	IdentifierDeclStatement	Protocol crypt_protocol = CryptProtocolNameToEnum ( crypto_method . Value ( ) ) ;	2902:1:84031:84103	3434607	25	True				
ANR	3434940	IdentifierDecl	crypt_protocol = CryptProtocolNameToEnum ( crypto_method . Value ( ) )		3434607	0					
ANR	3434941	IdentifierDeclType	Protocol		3434607	0					
ANR	3434942	Identifier	crypt_protocol		3434607	1					
ANR	3434943	AssignmentExpression	crypt_protocol = CryptProtocolNameToEnum ( crypto_method . Value ( ) )		3434607	2		=			
ANR	3434944	Identifier	crypt_protocol		3434607	0					
ANR	3434945	CallExpression	CryptProtocolNameToEnum ( crypto_method . Value ( ) )		3434607	1					
ANR	3434946	Callee	CryptProtocolNameToEnum		3434607	0					
ANR	3434947	Identifier	CryptProtocolNameToEnum		3434607	0					
ANR	3434948	ArgumentList	crypto_method . Value ( )		3434607	1					
ANR	3434949	Argument	crypto_method . Value ( )		3434607	0					
ANR	3434950	CallExpression	crypto_method . Value ( )		3434607	0					
ANR	3434951	Callee	crypto_method . Value		3434607	0					
ANR	3434952	MemberAccess	crypto_method . Value		3434607	0					
ANR	3434953	Identifier	crypto_method		3434607	0					
ANR	3434954	Identifier	Value		3434607	1					
ANR	3434955	ArgumentList			3434607	1					
ANR	3434956	IdentifierDeclStatement	const int keylen = MAC_SIZE ;	2903:1:84106:84133	3434607	26	True				
ANR	3434957	IdentifierDecl	keylen = MAC_SIZE		3434607	0					
ANR	3434958	IdentifierDeclType	const int		3434607	0					
ANR	3434959	Identifier	keylen		3434607	1					
ANR	3434960	AssignmentExpression	keylen = MAC_SIZE		3434607	2		=			
ANR	3434961	Identifier	MAC_SIZE		3434607	0					
ANR	3434962	Identifier	MAC_SIZE		3434607	1					
ANR	3434963	IdentifierDeclStatement	unsigned char * keybuf = Condor_Crypt_Base :: oneWayHashKey ( private_key ) ;	2904:1:84136:84205	3434607	27	True				
ANR	3434964	IdentifierDecl	* keybuf = Condor_Crypt_Base :: oneWayHashKey ( private_key )		3434607	0					
ANR	3434965	IdentifierDeclType	unsigned char *		3434607	0					
ANR	3434966	Identifier	keybuf		3434607	1					
ANR	3434967	AssignmentExpression	* keybuf = Condor_Crypt_Base :: oneWayHashKey ( private_key )		3434607	2		=			
ANR	3434968	Identifier	keybuf		3434607	0					
ANR	3434969	CallExpression	Condor_Crypt_Base :: oneWayHashKey ( private_key )		3434607	1					
ANR	3434970	Callee	Condor_Crypt_Base :: oneWayHashKey		3434607	0					
ANR	3434971	Identifier	Condor_Crypt_Base :: oneWayHashKey		3434607	0					
ANR	3434972	ArgumentList	private_key		3434607	1					
ANR	3434973	Argument	private_key		3434607	0					
ANR	3434974	Identifier	private_key		3434607	0					
ANR	3434975	IfStatement	if ( ! keybuf )		3434607	28					
ANR	3434976	Condition	! keybuf	2905:4:84211:84217	3434607	0	True				
ANR	3434977	UnaryOperationExpression	! keybuf		3434607	0					
ANR	3434978	UnaryOperator	!		3434607	0					
ANR	3434979	Identifier	keybuf		3434607	1					
ANR	3434980	CompoundStatement		67:13:2180:2180	3434607	1					
ANR	3434981	Statement	dprintf	2906:2:84224:84230	3434607	0	True				
ANR	3434982	Statement	(	2906:9:84231:84231	3434607	1	True				
ANR	3434983	Statement	D_ALWAYS	2906:10:84232:84239	3434607	2	True				
ANR	3434984	Statement	","	2906:18:84240:84240	3434607	3	True				
ANR	3434985	Statement	"""SECMAN: failed to create non-negotiated security session %s because"""	2906:19:84241:84309	3434607	4	True				
ANR	3434986	Statement	""" oneWayHashKey() failed.\\n"""	2907:4:84315:84342	3434607	5	True				
ANR	3434987	Statement	","	2907:32:84343:84343	3434607	6	True				
ANR	3434988	Statement	sesid	2907:33:84344:84348	3434607	7	True				
ANR	3434989	Statement	)	2907:38:84349:84349	3434607	8	True				
ANR	3434990	ExpressionStatement		2907:39:84350:84350	3434607	9	True				
ANR	3434991	ReturnStatement	return false ;	2908:2:84354:84366	3434607	10	True				
ANR	3434992	Identifier	false		3434607	0					
ANR	3434993	IdentifierDeclStatement	"KeyInfo * keyinfo = new KeyInfo ( keybuf , keylen , crypt_protocol ) ;"	2910:1:84372:84432	3434607	29	True				
ANR	3434994	IdentifierDecl	"* keyinfo = new KeyInfo ( keybuf , keylen , crypt_protocol )"		3434607	0					
ANR	3434995	IdentifierDeclType	KeyInfo *		3434607	0					
ANR	3434996	Identifier	keyinfo		3434607	1					
ANR	3434997	AssignmentExpression	"* keyinfo = new KeyInfo ( keybuf , keylen , crypt_protocol )"		3434607	2		=			
ANR	3434998	Identifier	keyinfo		3434607	0					
ANR	3434999	Expression	"keybuf , keylen , crypt_protocol"		3434607	1					
ANR	3435000	Identifier	keybuf		3434607	0					
ANR	3435001	Expression	"keylen , crypt_protocol"		3434607	1					
ANR	3435002	Identifier	keylen		3434607	0					
ANR	3435003	Identifier	crypt_protocol		3434607	1					
ANR	3435004	ExpressionStatement	free ( keybuf )	2911:1:84435:84449	3434607	30	True				
ANR	3435005	CallExpression	free ( keybuf )		3434607	0					
ANR	3435006	Callee	free		3434607	0					
ANR	3435007	Identifier	free		3434607	0					
ANR	3435008	ArgumentList	keybuf		3434607	1					
ANR	3435009	Argument	keybuf		3434607	0					
ANR	3435010	Identifier	keybuf		3434607	0					
ANR	3435011	ExpressionStatement	keybuf = NULL	2912:1:84452:84465	3434607	31	True				
ANR	3435012	AssignmentExpression	keybuf = NULL		3434607	0		=			
ANR	3435013	Identifier	keybuf		3434607	0					
ANR	3435014	Identifier	NULL		3434607	1					
ANR	3435015	IdentifierDeclStatement	int expiration_time = 0 ;	2915:1:84530:84553	3434607	32	True				
ANR	3435016	IdentifierDecl	expiration_time = 0		3434607	0					
ANR	3435017	IdentifierDeclType	int		3434607	0					
ANR	3435018	Identifier	expiration_time		3434607	1					
ANR	3435019	AssignmentExpression	expiration_time = 0		3434607	2		=			
ANR	3435020	Identifier	expiration_time		3434607	0					
ANR	3435021	PrimaryExpression	0		3434607	1					
ANR	3435022	IfStatement	"if ( policy . LookupInteger ( ATTR_SEC_SESSION_EXPIRES , expiration_time ) )"		3434607	33					
ANR	3435023	Condition	"policy . LookupInteger ( ATTR_SEC_SESSION_EXPIRES , expiration_time )"	2917:5:84561:84622	3434607	0	True				
ANR	3435024	CallExpression	"policy . LookupInteger ( ATTR_SEC_SESSION_EXPIRES , expiration_time )"		3434607	0					
ANR	3435025	Callee	policy . LookupInteger		3434607	0					
ANR	3435026	MemberAccess	policy . LookupInteger		3434607	0					
ANR	3435027	Identifier	policy		3434607	0					
ANR	3435028	Identifier	LookupInteger		3434607	1					
ANR	3435029	ArgumentList	ATTR_SEC_SESSION_EXPIRES		3434607	1					
ANR	3435030	Argument	ATTR_SEC_SESSION_EXPIRES		3434607	0					
ANR	3435031	Identifier	ATTR_SEC_SESSION_EXPIRES		3434607	0					
ANR	3435032	Argument	expiration_time		3434607	1					
ANR	3435033	Identifier	expiration_time		3434607	0					
ANR	3435034	CompoundStatement		79:70:2586:2586	3434607	1					
ANR	3435035	ExpressionStatement	duration = expiration_time ? expiration_time - time ( NULL ) : 0	2918:2:84630:84691	3434607	0	True				
ANR	3435036	AssignmentExpression	duration = expiration_time ? expiration_time - time ( NULL ) : 0		3434607	0		=			
ANR	3435037	Identifier	duration		3434607	0					
ANR	3435038	ConditionalExpression	expiration_time ? expiration_time - time ( NULL ) : 0		3434607	1					
ANR	3435039	Condition	expiration_time		3434607	0					
ANR	3435040	Identifier	expiration_time		3434607	0					
ANR	3435041	AdditiveExpression	expiration_time - time ( NULL )		3434607	1		-			
ANR	3435042	Identifier	expiration_time		3434607	0					
ANR	3435043	CallExpression	time ( NULL )		3434607	1					
ANR	3435044	Callee	time		3434607	0					
ANR	3435045	Identifier	time		3434607	0					
ANR	3435046	ArgumentList	NULL		3434607	1					
ANR	3435047	Argument	NULL		3434607	0					
ANR	3435048	Identifier	NULL		3434607	0					
ANR	3435049	PrimaryExpression	0		3434607	2					
ANR	3435050	IfStatement	if ( duration < 0 )		3434607	1					
ANR	3435051	Condition	duration < 0	2919:6:84699:84710	3434607	0	True				
ANR	3435052	RelationalExpression	duration < 0		3434607	0		<			
ANR	3435053	Identifier	duration		3434607	0					
ANR	3435054	PrimaryExpression	0		3434607	1					
ANR	3435055	CompoundStatement		81:21:2674:2674	3434607	1					
ANR	3435056	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: failed to create non-negotiated security session %s because duration = %d\\n"" , sesid , duration )"	2920:3:84719:84837	3434607	0	True				
ANR	3435057	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: failed to create non-negotiated security session %s because duration = %d\\n"" , sesid , duration )"		3434607	0					
ANR	3435058	Callee	dprintf		3434607	0					
ANR	3435059	Identifier	dprintf		3434607	0					
ANR	3435060	ArgumentList	D_ALWAYS		3434607	1					
ANR	3435061	Argument	D_ALWAYS		3434607	0					
ANR	3435062	Identifier	D_ALWAYS		3434607	0					
ANR	3435063	Argument	"""SECMAN: failed to create non-negotiated security session %s because duration = %d\\n"""		3434607	1					
ANR	3435064	PrimaryExpression	"""SECMAN: failed to create non-negotiated security session %s because duration = %d\\n"""		3434607	0					
ANR	3435065	Argument	sesid		3434607	2					
ANR	3435066	Identifier	sesid		3434607	0					
ANR	3435067	Argument	duration		3434607	3					
ANR	3435068	Identifier	duration		3434607	0					
ANR	3435069	Statement	delete	2921:3:84842:84847	3434607	1	True				
ANR	3435070	ExpressionStatement	keyinfo	2921:10:84849:84856	3434607	2	True				
ANR	3435071	Identifier	keyinfo		3434607	0					
ANR	3435072	ReturnStatement	return false ;	2922:3:84861:84873	3434607	3	True				
ANR	3435073	Identifier	false		3434607	0					
ANR	3435074	ElseStatement	else		3434607	0					
ANR	3435075	IfStatement	if ( duration > 0 )		3434607	0					
ANR	3435076	Condition	duration > 0	2925:10:84892:84903	3434607	0	True				
ANR	3435077	RelationalExpression	duration > 0		3434607	0		>			
ANR	3435078	Identifier	duration		3434607	0					
ANR	3435079	PrimaryExpression	0		3434607	1					
ANR	3435080	CompoundStatement		87:25:2867:2867	3434607	1					
ANR	3435081	ExpressionStatement	expiration_time = time ( NULL ) + duration	2926:2:84911:84950	3434607	0	True				
ANR	3435082	AssignmentExpression	expiration_time = time ( NULL ) + duration		3434607	0		=			
ANR	3435083	Identifier	expiration_time		3434607	0					
ANR	3435084	AdditiveExpression	time ( NULL ) + duration		3434607	1		+			
ANR	3435085	CallExpression	time ( NULL )		3434607	0					
ANR	3435086	Callee	time		3434607	0					
ANR	3435087	Identifier	time		3434607	0					
ANR	3435088	ArgumentList	NULL		3434607	1					
ANR	3435089	Argument	NULL		3434607	0					
ANR	3435090	Identifier	NULL		3434607	0					
ANR	3435091	Identifier	duration		3434607	1					
ANR	3435092	ExpressionStatement	"policy . Assign ( ATTR_SEC_SESSION_EXPIRES , expiration_time )"	2929:2:85040:85095	3434607	1	True				
ANR	3435093	CallExpression	"policy . Assign ( ATTR_SEC_SESSION_EXPIRES , expiration_time )"		3434607	0					
ANR	3435094	Callee	policy . Assign		3434607	0					
ANR	3435095	MemberAccess	policy . Assign		3434607	0					
ANR	3435096	Identifier	policy		3434607	0					
ANR	3435097	Identifier	Assign		3434607	1					
ANR	3435098	ArgumentList	ATTR_SEC_SESSION_EXPIRES		3434607	1					
ANR	3435099	Argument	ATTR_SEC_SESSION_EXPIRES		3434607	0					
ANR	3435100	Identifier	ATTR_SEC_SESSION_EXPIRES		3434607	0					
ANR	3435101	Argument	expiration_time		3434607	1					
ANR	3435102	Identifier	expiration_time		3434607	0					
ANR	3435103	IdentifierDeclStatement	"KeyCacheEntry key ( sesid , peer_sinful ? & peer_addr : NULL , keyinfo , & policy , expiration_time , 0 ) ;"	2932:1:85102:85192	3434607	34	True				
ANR	3435104	IdentifierDecl	"key ( sesid , peer_sinful ? & peer_addr : NULL , keyinfo , & policy , expiration_time , 0 )"		3434607	0					
ANR	3435105	IdentifierDeclType	KeyCacheEntry		3434607	0					
ANR	3435106	Identifier	key		3434607	1					
ANR	3435107	Expression	"sesid , peer_sinful ? & peer_addr : NULL , keyinfo , & policy , expiration_time , 0"		3434607	2					
ANR	3435108	Identifier	sesid		3434607	0					
ANR	3435109	Expression	"peer_sinful ? & peer_addr : NULL , keyinfo , & policy , expiration_time , 0"		3434607	1					
ANR	3435110	ConditionalExpression	peer_sinful ? & peer_addr : NULL		3434607	0					
ANR	3435111	Condition	peer_sinful		3434607	0					
ANR	3435112	Identifier	peer_sinful		3434607	0					
ANR	3435113	UnaryOperationExpression	& peer_addr		3434607	1					
ANR	3435114	UnaryOperator	&		3434607	0					
ANR	3435115	Identifier	peer_addr		3434607	1					
ANR	3435116	Identifier	NULL		3434607	2					
ANR	3435117	Expression	"keyinfo , & policy , expiration_time , 0"		3434607	1					
ANR	3435118	Identifier	keyinfo		3434607	0					
ANR	3435119	Expression	"& policy , expiration_time , 0"		3434607	1					
ANR	3435120	UnaryOperationExpression	& policy		3434607	0					
ANR	3435121	UnaryOperator	&		3434607	0					
ANR	3435122	Identifier	policy		3434607	1					
ANR	3435123	Expression	"expiration_time , 0"		3434607	1					
ANR	3435124	Identifier	expiration_time		3434607	0					
ANR	3435125	PrimaryExpression	0		3434607	1					
ANR	3435126	IfStatement	if ( ! session_cache -> insert ( key ) )		3434607	35					
ANR	3435127	Condition	! session_cache -> insert ( key )	2934:5:85200:85226	3434607	0	True				
ANR	3435128	UnaryOperationExpression	! session_cache -> insert ( key )		3434607	0					
ANR	3435129	UnaryOperator	!		3434607	0					
ANR	3435130	CallExpression	session_cache -> insert ( key )		3434607	1					
ANR	3435131	Callee	session_cache -> insert		3434607	0					
ANR	3435132	PtrMemberAccess	session_cache -> insert		3434607	0					
ANR	3435133	Identifier	session_cache		3434607	0					
ANR	3435134	Identifier	insert		3434607	1					
ANR	3435135	ArgumentList	key		3434607	1					
ANR	3435136	Argument	key		3434607	0					
ANR	3435137	Identifier	key		3434607	0					
ANR	3435138	CompoundStatement		98:2:3228:3246	3434607	1					
ANR	3435139	IdentifierDeclStatement	KeyCacheEntry * existing = NULL ;	2935:2:85234:85264	3434607	0	True				
ANR	3435140	IdentifierDecl	* existing = NULL		3434607	0					
ANR	3435141	IdentifierDeclType	KeyCacheEntry *		3434607	0					
ANR	3435142	Identifier	existing		3434607	1					
ANR	3435143	AssignmentExpression	* existing = NULL		3434607	2		=			
ANR	3435144	Identifier	NULL		3434607	0					
ANR	3435145	Identifier	NULL		3434607	1					
ANR	3435146	IdentifierDeclStatement	bool fixed = false ;	2936:2:85268:85286	3434607	1	True				
ANR	3435147	IdentifierDecl	fixed = false		3434607	0					
ANR	3435148	IdentifierDeclType	bool		3434607	0					
ANR	3435149	Identifier	fixed		3434607	1					
ANR	3435150	AssignmentExpression	fixed = false		3434607	2		=			
ANR	3435151	Identifier	false		3434607	0					
ANR	3435152	Identifier	false		3434607	1					
ANR	3435153	IfStatement	"if ( ! session_cache -> lookup ( sesid , existing ) )"		3434607	2					
ANR	3435154	Condition	"! session_cache -> lookup ( sesid , existing )"	2937:6:85294:85331	3434607	0	True				
ANR	3435155	UnaryOperationExpression	"! session_cache -> lookup ( sesid , existing )"		3434607	0					
ANR	3435156	UnaryOperator	!		3434607	0					
ANR	3435157	CallExpression	"session_cache -> lookup ( sesid , existing )"		3434607	1					
ANR	3435158	Callee	session_cache -> lookup		3434607	0					
ANR	3435159	PtrMemberAccess	session_cache -> lookup		3434607	0					
ANR	3435160	Identifier	session_cache		3434607	0					
ANR	3435161	Identifier	lookup		3434607	1					
ANR	3435162	ArgumentList	sesid		3434607	1					
ANR	3435163	Argument	sesid		3434607	0					
ANR	3435164	Identifier	sesid		3434607	0					
ANR	3435165	Argument	existing		3434607	1					
ANR	3435166	Identifier	existing		3434607	0					
ANR	3435167	CompoundStatement		99:47:3295:3295	3434607	1					
ANR	3435168	ExpressionStatement	existing = NULL	2938:3:85340:85355	3434607	0	True				
ANR	3435169	AssignmentExpression	existing = NULL		3434607	0		=			
ANR	3435170	Identifier	existing		3434607	0					
ANR	3435171	Identifier	NULL		3434607	1					
ANR	3435172	IfStatement	if ( existing )		3434607	3					
ANR	3435173	Condition	existing	2940:6:85367:85374	3434607	0	True				
ANR	3435174	Identifier	existing		3434607	0					
ANR	3435175	CompoundStatement		102:17:3338:3338	3434607	1					
ANR	3435176	IfStatement	"if ( ! LookupNonExpiredSession ( sesid , existing ) )"		3434607	0					
ANR	3435177	Condition	"! LookupNonExpiredSession ( sesid , existing )"	2941:7:85387:85426	3434607	0	True				
ANR	3435178	UnaryOperationExpression	"! LookupNonExpiredSession ( sesid , existing )"		3434607	0					
ANR	3435179	UnaryOperator	!		3434607	0					
ANR	3435180	CallExpression	"LookupNonExpiredSession ( sesid , existing )"		3434607	1					
ANR	3435181	Callee	LookupNonExpiredSession		3434607	0					
ANR	3435182	Identifier	LookupNonExpiredSession		3434607	0					
ANR	3435183	ArgumentList	sesid		3434607	1					
ANR	3435184	Argument	sesid		3434607	0					
ANR	3435185	Identifier	sesid		3434607	0					
ANR	3435186	Argument	existing		3434607	1					
ANR	3435187	Identifier	existing		3434607	0					
ANR	3435188	CompoundStatement		103:50:3390:3390	3434607	1					
ANR	3435189	ExpressionStatement	existing = NULL	2943:4:85497:85512	3434607	0	True				
ANR	3435190	AssignmentExpression	existing = NULL		3434607	0		=			
ANR	3435191	Identifier	existing		3434607	0					
ANR	3435192	Identifier	NULL		3434607	1					
ANR	3435193	IfStatement	if ( session_cache -> insert ( key ) )		3434607	1					
ANR	3435194	Condition	session_cache -> insert ( key )	2944:8:85522:85547	3434607	0	True				
ANR	3435195	CallExpression	session_cache -> insert ( key )		3434607	0					
ANR	3435196	Callee	session_cache -> insert		3434607	0					
ANR	3435197	PtrMemberAccess	session_cache -> insert		3434607	0					
ANR	3435198	Identifier	session_cache		3434607	0					
ANR	3435199	Identifier	insert		3434607	1					
ANR	3435200	ArgumentList	key		3434607	1					
ANR	3435201	Argument	key		3434607	0					
ANR	3435202	Identifier	key		3434607	0					
ANR	3435203	CompoundStatement		106:37:3511:3511	3434607	1					
ANR	3435204	ExpressionStatement	fixed = true	2945:5:85558:85570	3434607	0	True				
ANR	3435205	AssignmentExpression	fixed = true		3434607	0		=			
ANR	3435206	Identifier	fixed		3434607	0					
ANR	3435207	Identifier	true		3434607	1					
ANR	3435208	ElseStatement	else		3434607	0					
ANR	3435209	IfStatement	if ( existing && existing -> getLingerFlag ( ) )		3434607	0					
ANR	3435210	Condition	existing && existing -> getLingerFlag ( )	2948:12:85595:85631	3434607	0	True				
ANR	3435211	AndExpression	existing && existing -> getLingerFlag ( )		3434607	0		&&			
ANR	3435212	Identifier	existing		3434607	0					
ANR	3435213	CallExpression	existing -> getLingerFlag ( )		3434607	1					
ANR	3435214	Callee	existing -> getLingerFlag		3434607	0					
ANR	3435215	PtrMemberAccess	existing -> getLingerFlag		3434607	0					
ANR	3435216	Identifier	existing		3434607	0					
ANR	3435217	Identifier	getLingerFlag		3434607	1					
ANR	3435218	ArgumentList			3434607	1					
ANR	3435219	CompoundStatement		110:52:3595:3595	3434607	1					
ANR	3435220	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: removing lingering non-negotiated security session %s because it conflicts with new request\\n"" , sesid )"	2949:4:85641:85768	3434607	0	True				
ANR	3435221	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: removing lingering non-negotiated security session %s because it conflicts with new request\\n"" , sesid )"		3434607	0					
ANR	3435222	Callee	dprintf		3434607	0					
ANR	3435223	Identifier	dprintf		3434607	0					
ANR	3435224	ArgumentList	D_ALWAYS		3434607	1					
ANR	3435225	Argument	D_ALWAYS		3434607	0					
ANR	3435226	Identifier	D_ALWAYS		3434607	0					
ANR	3435227	Argument	"""SECMAN: removing lingering non-negotiated security session %s because it conflicts with new request\\n"""		3434607	1					
ANR	3435228	PrimaryExpression	"""SECMAN: removing lingering non-negotiated security session %s because it conflicts with new request\\n"""		3434607	0					
ANR	3435229	Argument	sesid		3434607	2					
ANR	3435230	Identifier	sesid		3434607	0					
ANR	3435231	ExpressionStatement	session_cache -> expire ( existing )	2950:4:85774:85805	3434607	1	True				
ANR	3435232	CallExpression	session_cache -> expire ( existing )		3434607	0					
ANR	3435233	Callee	session_cache -> expire		3434607	0					
ANR	3435234	PtrMemberAccess	session_cache -> expire		3434607	0					
ANR	3435235	Identifier	session_cache		3434607	0					
ANR	3435236	Identifier	expire		3434607	1					
ANR	3435237	ArgumentList	existing		3434607	1					
ANR	3435238	Argument	existing		3434607	0					
ANR	3435239	Identifier	existing		3434607	0					
ANR	3435240	ExpressionStatement	existing = NULL	2951:4:85811:85826	3434607	2	True				
ANR	3435241	AssignmentExpression	existing = NULL		3434607	0		=			
ANR	3435242	Identifier	existing		3434607	0					
ANR	3435243	Identifier	NULL		3434607	1					
ANR	3435244	IfStatement	if ( session_cache -> insert ( key ) )		3434607	3					
ANR	3435245	Condition	session_cache -> insert ( key )	2952:8:85836:85861	3434607	0	True				
ANR	3435246	CallExpression	session_cache -> insert ( key )		3434607	0					
ANR	3435247	Callee	session_cache -> insert		3434607	0					
ANR	3435248	PtrMemberAccess	session_cache -> insert		3434607	0					
ANR	3435249	Identifier	session_cache		3434607	0					
ANR	3435250	Identifier	insert		3434607	1					
ANR	3435251	ArgumentList	key		3434607	1					
ANR	3435252	Argument	key		3434607	0					
ANR	3435253	Identifier	key		3434607	0					
ANR	3435254	CompoundStatement		114:37:3825:3825	3434607	1					
ANR	3435255	ExpressionStatement	fixed = true	2953:5:85872:85884	3434607	0	True				
ANR	3435256	AssignmentExpression	fixed = true		3434607	0		=			
ANR	3435257	Identifier	fixed		3434607	0					
ANR	3435258	Identifier	true		3434607	1					
ANR	3435259	IfStatement	if ( ! fixed )		3434607	4					
ANR	3435260	Condition	! fixed	2958:6:85908:85913	3434607	0	True				
ANR	3435261	UnaryOperationExpression	! fixed		3434607	0					
ANR	3435262	UnaryOperator	!		3434607	0					
ANR	3435263	Identifier	fixed		3434607	1					
ANR	3435264	CompoundStatement		124:3:4006:4051	3434607	1					
ANR	3435265	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: failed to create session %s%s.\\n"" , sesid , existing ? "" (key already exists)"" : """" )"	2959:3:85922:86041	3434607	0	True				
ANR	3435266	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: failed to create session %s%s.\\n"" , sesid , existing ? "" (key already exists)"" : """" )"		3434607	0					
ANR	3435267	Callee	dprintf		3434607	0					
ANR	3435268	Identifier	dprintf		3434607	0					
ANR	3435269	ArgumentList	D_ALWAYS		3434607	1					
ANR	3435270	Argument	D_ALWAYS		3434607	0					
ANR	3435271	Identifier	D_ALWAYS		3434607	0					
ANR	3435272	Argument	"""SECMAN: failed to create session %s%s.\\n"""		3434607	1					
ANR	3435273	PrimaryExpression	"""SECMAN: failed to create session %s%s.\\n"""		3434607	0					
ANR	3435274	Argument	sesid		3434607	2					
ANR	3435275	Identifier	sesid		3434607	0					
ANR	3435276	Argument	"existing ? "" (key already exists)"" : """""		3434607	3					
ANR	3435277	ConditionalExpression	"existing ? "" (key already exists)"" : """""		3434607	0					
ANR	3435278	Condition	existing		3434607	0					
ANR	3435279	Identifier	existing		3434607	0					
ANR	3435280	PrimaryExpression	""" (key already exists)"""		3434607	1					
ANR	3435281	PrimaryExpression	""""""		3434607	2					
ANR	3435282	IdentifierDeclStatement	ClassAd * existing_policy = existing -> policy ( ) ;	2962:3:86046:86091	3434607	1	True				
ANR	3435283	IdentifierDecl	* existing_policy = existing -> policy ( )		3434607	0					
ANR	3435284	IdentifierDeclType	ClassAd *		3434607	0					
ANR	3435285	Identifier	existing_policy		3434607	1					
ANR	3435286	AssignmentExpression	* existing_policy = existing -> policy ( )		3434607	2		=			
ANR	3435287	Identifier	existing_policy		3434607	0					
ANR	3435288	CallExpression	existing -> policy ( )		3434607	1					
ANR	3435289	Callee	existing -> policy		3434607	0					
ANR	3435290	PtrMemberAccess	existing -> policy		3434607	0					
ANR	3435291	Identifier	existing		3434607	0					
ANR	3435292	Identifier	policy		3434607	1					
ANR	3435293	ArgumentList			3434607	1					
ANR	3435294	IfStatement	if ( existing_policy )		3434607	2					
ANR	3435295	Condition	existing_policy	2963:7:86100:86114	3434607	0	True				
ANR	3435296	Identifier	existing_policy		3434607	0					
ANR	3435297	CompoundStatement		125:25:4078:4078	3434607	1					
ANR	3435298	ExpressionStatement	"dprintf ( D_ALWAYS , ""SECMAN: existing session %s:\\n"" , sesid )"	2964:4:86124:86181	3434607	0	True				
ANR	3435299	CallExpression	"dprintf ( D_ALWAYS , ""SECMAN: existing session %s:\\n"" , sesid )"		3434607	0					
ANR	3435300	Callee	dprintf		3434607	0					
ANR	3435301	Identifier	dprintf		3434607	0					
ANR	3435302	ArgumentList	D_ALWAYS		3434607	1					
ANR	3435303	Argument	D_ALWAYS		3434607	0					
ANR	3435304	Identifier	D_ALWAYS		3434607	0					
ANR	3435305	Argument	"""SECMAN: existing session %s:\\n"""		3434607	1					
ANR	3435306	PrimaryExpression	"""SECMAN: existing session %s:\\n"""		3434607	0					
ANR	3435307	Argument	sesid		3434607	2					
ANR	3435308	Identifier	sesid		3434607	0					
ANR	3435309	ExpressionStatement	existing_policy -> dPrint ( D_SECURITY )	2965:4:86187:86222	3434607	1	True				
ANR	3435310	CallExpression	existing_policy -> dPrint ( D_SECURITY )		3434607	0					
ANR	3435311	Callee	existing_policy -> dPrint		3434607	0					
ANR	3435312	PtrMemberAccess	existing_policy -> dPrint		3434607	0					
ANR	3435313	Identifier	existing_policy		3434607	0					
ANR	3435314	Identifier	dPrint		3434607	1					
ANR	3435315	ArgumentList	D_SECURITY		3434607	1					
ANR	3435316	Argument	D_SECURITY		3434607	0					
ANR	3435317	Identifier	D_SECURITY		3434607	0					
ANR	3435318	Statement	delete	2967:3:86232:86237	3434607	3	True				
ANR	3435319	ExpressionStatement	keyinfo	2967:10:86239:86246	3434607	4	True				
ANR	3435320	Identifier	keyinfo		3434607	0					
ANR	3435321	ReturnStatement	return false ;	2968:3:86251:86263	3434607	5	True				
ANR	3435322	Identifier	false		3434607	0					
ANR	3435323	Statement	dprintf	2972:1:86274:86280	3434607	36	True				
ANR	3435324	Statement	(	2972:8:86281:86281	3434607	37	True				
ANR	3435325	Statement	D_SECURITY	2972:9:86282:86291	3434607	38	True				
ANR	3435326	Statement	","	2972:19:86292:86292	3434607	39	True				
ANR	3435327	Statement	"""SECMAN: created non-negotiated security session %s for %d %sseconds."""	2972:21:86294:86363	3434607	40	True				
ANR	3435328	Statement	"""\\n"""	2973:3:86368:86371	3434607	41	True				
ANR	3435329	Statement	","	2973:7:86372:86372	3434607	42	True				
ANR	3435330	Statement	sesid	2973:9:86374:86378	3434607	43	True				
ANR	3435331	Statement	","	2973:14:86379:86379	3434607	44	True				
ANR	3435332	Statement	duration	2973:16:86381:86388	3434607	45	True				
ANR	3435333	Statement	","	2973:24:86389:86389	3434607	46	True				
ANR	3435334	Statement	expiration_time	2973:26:86391:86405	3434607	47	True				
ANR	3435335	Statement	==	2973:42:86407:86408	3434607	48	True				
ANR	3435336	Statement	0	2973:45:86410:86410	3434607	49	True				
ANR	3435337	Statement	?	2973:47:86412:86412	3434607	50	True				
ANR	3435338	Statement	"""(inf) """	2973:49:86414:86421	3434607	51	True				
ANR	3435339	Statement	:	2973:58:86423:86423	3434607	52	True				
ANR	3435340	Statement	""""""	2973:60:86425:86426	3434607	53	True				
ANR	3435341	Statement	)	2973:62:86427:86427	3434607	54	True				
ANR	3435342	ExpressionStatement		2973:63:86428:86428	3434607	55	True				
ANR	3435343	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3434607	56					
ANR	3435344	Condition	DebugFlags & D_FULLDEBUG	2975:5:86436:86459	3434607	0	True				
ANR	3435345	BitAndExpression	DebugFlags & D_FULLDEBUG		3434607	0		&			
ANR	3435346	Identifier	DebugFlags		3434607	0					
ANR	3435347	Identifier	D_FULLDEBUG		3434607	1					
ANR	3435348	CompoundStatement		137:32:4423:4423	3434607	1					
ANR	3435349	IfStatement	if ( exported_session_info )		3434607	0					
ANR	3435350	Condition	exported_session_info	2976:6:86471:86491	3434607	0	True				
ANR	3435351	Identifier	exported_session_info		3434607	0					
ANR	3435352	CompoundStatement		138:30:4455:4455	3434607	1					
ANR	3435353	ExpressionStatement	"dprintf ( D_SECURITY , ""Imported session attributes: %s\\n"" , exported_session_info )"	2977:3:86500:86583	3434607	0	True				
ANR	3435354	CallExpression	"dprintf ( D_SECURITY , ""Imported session attributes: %s\\n"" , exported_session_info )"		3434607	0					
ANR	3435355	Callee	dprintf		3434607	0					
ANR	3435356	Identifier	dprintf		3434607	0					
ANR	3435357	ArgumentList	D_SECURITY		3434607	1					
ANR	3435358	Argument	D_SECURITY		3434607	0					
ANR	3435359	Identifier	D_SECURITY		3434607	0					
ANR	3435360	Argument	"""Imported session attributes: %s\\n"""		3434607	1					
ANR	3435361	PrimaryExpression	"""Imported session attributes: %s\\n"""		3434607	0					
ANR	3435362	Argument	exported_session_info		3434607	2					
ANR	3435363	Identifier	exported_session_info		3434607	0					
ANR	3435364	ExpressionStatement	"dprintf ( D_SECURITY , ""Caching non-negotiated security session ad:\\n"" )"	2980:2:86591:86658	3434607	1	True				
ANR	3435365	CallExpression	"dprintf ( D_SECURITY , ""Caching non-negotiated security session ad:\\n"" )"		3434607	0					
ANR	3435366	Callee	dprintf		3434607	0					
ANR	3435367	Identifier	dprintf		3434607	0					
ANR	3435368	ArgumentList	D_SECURITY		3434607	1					
ANR	3435369	Argument	D_SECURITY		3434607	0					
ANR	3435370	Identifier	D_SECURITY		3434607	0					
ANR	3435371	Argument	"""Caching non-negotiated security session ad:\\n"""		3434607	1					
ANR	3435372	PrimaryExpression	"""Caching non-negotiated security session ad:\\n"""		3434607	0					
ANR	3435373	ExpressionStatement	policy . dPrint ( D_SECURITY )	2981:2:86662:86687	3434607	2	True				
ANR	3435374	CallExpression	policy . dPrint ( D_SECURITY )		3434607	0					
ANR	3435375	Callee	policy . dPrint		3434607	0					
ANR	3435376	MemberAccess	policy . dPrint		3434607	0					
ANR	3435377	Identifier	policy		3434607	0					
ANR	3435378	Identifier	dPrint		3434607	1					
ANR	3435379	ArgumentList	D_SECURITY		3434607	1					
ANR	3435380	Argument	D_SECURITY		3434607	0					
ANR	3435381	Identifier	D_SECURITY		3434607	0					
ANR	3435382	Statement	delete	2984:1:86694:86699	3434607	57	True				
ANR	3435383	ExpressionStatement	keyinfo	2984:8:86701:86708	3434607	58	True				
ANR	3435384	Identifier	keyinfo		3434607	0					
ANR	3435385	ReturnStatement	return true ;	2985:1:86711:86722	3434607	59	True				
ANR	3435386	Identifier	true		3434607	0					
ANR	3435387	ReturnType	bool		3434607	1					
ANR	3435388	Identifier	SecMan :: CreateNonNegotiatedSecuritySession		3434607	2					
ANR	3435389	ParameterList	"DCpermission auth_level , char const * sesid , char const * private_key , char const * exported_session_info , char const * peer_fqu , char const * peer_sinful , int duration"		3434607	3					
ANR	3435390	Parameter	DCpermission auth_level	2838:43:81877:81899	3434607	0	True				
ANR	3435391	ParameterType	DCpermission		3434607	0					
ANR	3435392	Identifier	auth_level		3434607	1					
ANR	3435393	Parameter	char const * sesid	2838:68:81902:81918	3434607	1	True				
ANR	3435394	ParameterType	char const *		3434607	0					
ANR	3435395	Identifier	sesid		3434607	1					
ANR	3435396	Parameter	char const * private_key	2838:86:81920:81942	3434607	2	True				
ANR	3435397	ParameterType	char const *		3434607	0					
ANR	3435398	Identifier	private_key		3434607	1					
ANR	3435399	Parameter	char const * exported_session_info	2838:110:81944:81976	3434607	3	True				
ANR	3435400	ParameterType	char const *		3434607	0					
ANR	3435401	Identifier	exported_session_info		3434607	1					
ANR	3435402	Parameter	char const * peer_fqu	2838:144:81978:81997	3434607	4	True				
ANR	3435403	ParameterType	char const *		3434607	0					
ANR	3435404	Identifier	peer_fqu		3434607	1					
ANR	3435405	Parameter	char const * peer_sinful	2838:166:82000:82022	3434607	5	True				
ANR	3435406	ParameterType	char const *		3434607	0					
ANR	3435407	Identifier	peer_sinful		3434607	1					
ANR	3435408	Parameter	int duration	2838:191:82025:82036	3434607	6	True				
ANR	3435409	ParameterType	int		3434607	0					
ANR	3435410	Identifier	duration		3434607	1					
ANR	3435411	CFGEntryNode	ENTRY		3434607		True				
ANR	3435412	CFGExitNode	EXIT		3434607		True				
ANR	3435413	Symbol	CryptProtocolNameToEnum		3434607						
ANR	3435414	Symbol	crypto_method . Value		3434607						
ANR	3435415	Symbol	ATTR_SEC_ENCRYPTION		3434607						
ANR	3435416	Symbol	exported_session_info		3434607						
ANR	3435417	Symbol	ATTR_SEC_ENACT		3434607						
ANR	3435418	Symbol	peer_fqu		3434607						
ANR	3435419	Symbol	keylen		3434607						
ANR	3435420	Symbol	existing -> getLingerFlag		3434607						
ANR	3435421	Symbol	crypt_protocol		3434607						
ANR	3435422	Symbol	session_cache		3434607						
ANR	3435423	Symbol	SecMan :: sec_req_rev		3434607						
ANR	3435424	Symbol	peer_addr . from_sinful		3434607						
ANR	3435425	Symbol	Condor_Crypt_Base :: oneWayHashKey		3434607						
ANR	3435426	Symbol	ImportSecSessionInfo		3434607						
ANR	3435427	Symbol	peer_addr		3434607						
ANR	3435428	Symbol	NULL		3434607						
ANR	3435429	Symbol	ATTR_SEC_USE_SESSION		3434607						
ANR	3435430	Symbol	ATTR_SEC_SESSION_EXPIRES		3434607						
ANR	3435431	Symbol	ReconcileSecurityPolicyAds		3434607						
ANR	3435432	Symbol	SEC_FEAT_ACT_NO		3434607						
ANR	3435433	Symbol	ATTR_SEC_SID		3434607						
ANR	3435434	Symbol	private_key		3434607						
ANR	3435435	Symbol	D_FULLDEBUG		3434607						
ANR	3435436	Symbol	DebugFlags		3434607						
ANR	3435437	Symbol	* auth_info		3434607						
ANR	3435438	Symbol	crypto_methods		3434607						
ANR	3435439	Symbol	existing -> policy		3434607						
ANR	3435440	Symbol	ATTR_SEC_NEGOTIATION		3434607						
ANR	3435441	Symbol	sesid		3434607						
ANR	3435442	Symbol	true		3434607						
ANR	3435443	Symbol	fixed		3434607						
ANR	3435444	Symbol	ATTR_SEC_AUTHENTICATION		3434607						
ANR	3435445	Symbol	crypto_method		3434607						
ANR	3435446	Symbol	D_SECURITY		3434607						
ANR	3435447	Symbol	auth_level		3434607						
ANR	3435448	Symbol	ATTR_SEC_TRIED_AUTHENTICATION		3434607						
ANR	3435449	Symbol	& policy		3434607						
ANR	3435450	Symbol	session_cache -> lookup		3434607						
ANR	3435451	Symbol	duration		3434607						
ANR	3435452	Symbol	* SEC_FEAT_ACT_NO		3434607						
ANR	3435453	Symbol	peer_sinful		3434607						
ANR	3435454	Symbol	crypto_methods . FindChar		3434607						
ANR	3435455	Symbol	pos		3434607						
ANR	3435456	Symbol	* existing		3434607						
ANR	3435457	Symbol	existing_policy		3434607						
ANR	3435458	Symbol	ATTR_SEC_CRYPTO_METHODS		3434607						
ANR	3435459	Symbol	key		3434607						
ANR	3435460	Symbol	policy		3434607						
ANR	3435461	Symbol	* session_cache		3434607						
ANR	3435462	Symbol	session_cache -> insert		3434607						
ANR	3435463	Symbol	keyinfo		3434607						
ANR	3435464	Symbol	expiration_time		3434607						
ANR	3435465	Symbol	false		3434607						
ANR	3435466	Symbol	D_ALWAYS		3434607						
ANR	3435467	Symbol	keybuf		3434607						
ANR	3435468	Symbol	auth_info		3434607						
ANR	3435469	Symbol	* SEC_REQ_REQUIRED		3434607						
ANR	3435470	Symbol	* SecMan :: sec_feat_act_rev		3434607						
ANR	3435471	Symbol	SecMan :: sec_feat_act_rev		3434607						
ANR	3435472	Symbol	ATTR_SEC_USER		3434607						
ANR	3435473	Symbol	existing		3434607						
ANR	3435474	Symbol	SEC_REQ_REQUIRED		3434607						
ANR	3435475	Symbol	MAC_SIZE		3434607						
ANR	3435476	Symbol	LookupNonExpiredSession		3434607						
ANR	3435477	Symbol	crypto_methods . Length		3434607						
ANR	3435478	Symbol	policy . LookupInteger		3434607						
ANR	3435479	Symbol	* SecMan :: sec_req_rev		3434607						
ANR	3435480	Symbol	ATTR_SEC_INTEGRITY		3434607						
ANR	3435481	Symbol	time		3434607						
ANR	3435482	Function	SecMan :: ImportSecSessionInfo	2988:0:86727:88139							
ANR	3435483	FunctionDef	"SecMan :: ImportSecSessionInfo (char const * session_info , ClassAd & policy)"		3435482	0					
ANR	3435484	CompoundStatement		2989:71:86803:88139	3435482	0					
ANR	3435485	IfStatement	if ( ! session_info || ! * session_info )		3435482	0					
ANR	3435486	Condition	! session_info || ! * session_info	2995:5:87009:87039	3435482	0	True				
ANR	3435487	OrExpression	! session_info || ! * session_info		3435482	0		||			
ANR	3435488	UnaryOperationExpression	! session_info		3435482	0					
ANR	3435489	UnaryOperator	!		3435482	0					
ANR	3435490	Identifier	session_info		3435482	1					
ANR	3435491	UnaryOperationExpression	! * session_info		3435482	1					
ANR	3435492	UnaryOperator	!		3435482	0					
ANR	3435493	UnaryOperationExpression	* session_info		3435482	1					
ANR	3435494	UnaryOperator	*		3435482	0					
ANR	3435495	Identifier	session_info		3435482	1					
ANR	3435496	CompoundStatement		7:38:238:238	3435482	1					
ANR	3435497	ReturnStatement	return true ;	2996:2:87046:87057	3435482	0	True				
ANR	3435498	Identifier	true		3435482	0					
ANR	3435499	IdentifierDeclStatement	MyString buf = session_info + 1 ;	2999:1:87092:87121	3435482	1	True				
ANR	3435500	IdentifierDecl	buf = session_info + 1		3435482	0					
ANR	3435501	IdentifierDeclType	MyString		3435482	0					
ANR	3435502	Identifier	buf		3435482	1					
ANR	3435503	AssignmentExpression	buf = session_info + 1		3435482	2		=			
ANR	3435504	Identifier	buf		3435482	0					
ANR	3435505	AdditiveExpression	session_info + 1		3435482	1		+			
ANR	3435506	Identifier	session_info		3435482	0					
ANR	3435507	PrimaryExpression	1		3435482	1					
ANR	3435508	IfStatement	if ( session_info [ 0 ] != '[' || buf [ buf . Length ( ) - 1 ] != ']' )		3435482	2					
ANR	3435509	Condition	session_info [ 0 ] != '[' || buf [ buf . Length ( ) - 1 ] != ']'	3002:5:87178:87225	3435482	0	True				
ANR	3435510	OrExpression	session_info [ 0 ] != '[' || buf [ buf . Length ( ) - 1 ] != ']'		3435482	0		||			
ANR	3435511	EqualityExpression	session_info [ 0 ] != '['		3435482	0		!=			
ANR	3435512	ArrayIndexing	session_info [ 0 ]		3435482	0					
ANR	3435513	Identifier	session_info		3435482	0					
ANR	3435514	PrimaryExpression	0		3435482	1					
ANR	3435515	PrimaryExpression	'['		3435482	1					
ANR	3435516	EqualityExpression	buf [ buf . Length ( ) - 1 ] != ']'		3435482	1		!=			
ANR	3435517	ArrayIndexing	buf [ buf . Length ( ) - 1 ]		3435482	0					
ANR	3435518	Identifier	buf		3435482	0					
ANR	3435519	AdditiveExpression	buf . Length ( ) - 1		3435482	1		-			
ANR	3435520	CallExpression	buf . Length ( )		3435482	0					
ANR	3435521	Callee	buf . Length		3435482	0					
ANR	3435522	MemberAccess	buf . Length		3435482	0					
ANR	3435523	Identifier	buf		3435482	0					
ANR	3435524	Identifier	Length		3435482	1					
ANR	3435525	ArgumentList			3435482	1					
ANR	3435526	PrimaryExpression	1		3435482	1					
ANR	3435527	PrimaryExpression	']'		3435482	1					
ANR	3435528	CompoundStatement		14:56:425:425	3435482	1					
ANR	3435529	ExpressionStatement	"dprintf ( D_ALWAYS , ""ImportSecSessionInfo: invalid session info: %s\\n"" , session_info )"	3003:2:87233:87322	3435482	0	True				
ANR	3435530	CallExpression	"dprintf ( D_ALWAYS , ""ImportSecSessionInfo: invalid session info: %s\\n"" , session_info )"		3435482	0					
ANR	3435531	Callee	dprintf		3435482	0					
ANR	3435532	Identifier	dprintf		3435482	0					
ANR	3435533	ArgumentList	D_ALWAYS		3435482	1					
ANR	3435534	Argument	D_ALWAYS		3435482	0					
ANR	3435535	Identifier	D_ALWAYS		3435482	0					
ANR	3435536	Argument	"""ImportSecSessionInfo: invalid session info: %s\\n"""		3435482	1					
ANR	3435537	PrimaryExpression	"""ImportSecSessionInfo: invalid session info: %s\\n"""		3435482	0					
ANR	3435538	Argument	session_info		3435482	2					
ANR	3435539	Identifier	session_info		3435482	0					
ANR	3435540	ReturnStatement	return false ;	3005:2:87326:87338	3435482	1	True				
ANR	3435541	Identifier	false		3435482	0					
ANR	3435542	ExpressionStatement	"buf . setChar ( buf . Length ( ) - 1 , '\\0' )"	3009:1:87371:87403	3435482	3	True				
ANR	3435543	CallExpression	"buf . setChar ( buf . Length ( ) - 1 , '\\0' )"		3435482	0					
ANR	3435544	Callee	buf . setChar		3435482	0					
ANR	3435545	MemberAccess	buf . setChar		3435482	0					
ANR	3435546	Identifier	buf		3435482	0					
ANR	3435547	Identifier	setChar		3435482	1					
ANR	3435548	ArgumentList	buf . Length ( ) - 1		3435482	1					
ANR	3435549	Argument	buf . Length ( ) - 1		3435482	0					
ANR	3435550	AdditiveExpression	buf . Length ( ) - 1		3435482	0		-			
ANR	3435551	CallExpression	buf . Length ( )		3435482	0					
ANR	3435552	Callee	buf . Length		3435482	0					
ANR	3435553	MemberAccess	buf . Length		3435482	0					
ANR	3435554	Identifier	buf		3435482	0					
ANR	3435555	Identifier	Length		3435482	1					
ANR	3435556	ArgumentList			3435482	1					
ANR	3435557	PrimaryExpression	1		3435482	1					
ANR	3435558	Argument	'\\0'		3435482	1					
ANR	3435559	PrimaryExpression	'\\0'		3435482	0					
ANR	3435560	IdentifierDeclStatement	"StringList lines ( buf . Value ( ) , "";"" ) ;"	3011:1:87407:87440	3435482	4	True				
ANR	3435561	IdentifierDecl	"lines ( buf . Value ( ) , "";"" )"		3435482	0					
ANR	3435562	IdentifierDeclType	StringList		3435482	0					
ANR	3435563	Identifier	lines		3435482	1					
ANR	3435564	Expression	"buf . Value ( ) , "";"""		3435482	2					
ANR	3435565	CallExpression	buf . Value ( )		3435482	0					
ANR	3435566	Callee	buf . Value		3435482	0					
ANR	3435567	MemberAccess	buf . Value		3435482	0					
ANR	3435568	Identifier	buf		3435482	0					
ANR	3435569	Identifier	Value		3435482	1					
ANR	3435570	ArgumentList			3435482	1					
ANR	3435571	PrimaryExpression	""";"""		3435482	1					
ANR	3435572	ExpressionStatement	lines . rewind ( )	3012:1:87443:87457	3435482	5	True				
ANR	3435573	CallExpression	lines . rewind ( )		3435482	0					
ANR	3435574	Callee	lines . rewind		3435482	0					
ANR	3435575	MemberAccess	lines . rewind		3435482	0					
ANR	3435576	Identifier	lines		3435482	0					
ANR	3435577	Identifier	rewind		3435482	1					
ANR	3435578	ArgumentList			3435482	1					
ANR	3435579	IdentifierDeclStatement	char const * line ;	3014:1:87461:87477	3435482	6	True				
ANR	3435580	IdentifierDecl	* line		3435482	0					
ANR	3435581	IdentifierDeclType	char const *		3435482	0					
ANR	3435582	Identifier	line		3435482	1					
ANR	3435583	IdentifierDeclStatement	ClassAd imp_policy ;	3015:1:87480:87498	3435482	7	True				
ANR	3435584	IdentifierDecl	imp_policy		3435482	0					
ANR	3435585	IdentifierDeclType	ClassAd		3435482	0					
ANR	3435586	Identifier	imp_policy		3435482	1					
ANR	3435587	WhileStatement	while ( ( line = lines . next ( ) ) )		3435482	8					
ANR	3435588	Condition	line = lines . next ( )	3016:8:87508:87526	3435482	0	True				
ANR	3435589	AssignmentExpression	line = lines . next ( )		3435482	0		=			
ANR	3435590	Identifier	line		3435482	0					
ANR	3435591	CallExpression	lines . next ( )		3435482	1					
ANR	3435592	Callee	lines . next		3435482	0					
ANR	3435593	MemberAccess	lines . next		3435482	0					
ANR	3435594	Identifier	lines		3435482	0					
ANR	3435595	Identifier	next		3435482	1					
ANR	3435596	ArgumentList			3435482	1					
ANR	3435597	CompoundStatement		28:30:726:726	3435482	1					
ANR	3435598	IfStatement	if ( ! imp_policy . Insert ( line ) )		3435482	0					
ANR	3435599	Condition	! imp_policy . Insert ( line )	3017:6:87538:87561	3435482	0	True				
ANR	3435600	UnaryOperationExpression	! imp_policy . Insert ( line )		3435482	0					
ANR	3435601	UnaryOperator	!		3435482	0					
ANR	3435602	CallExpression	imp_policy . Insert ( line )		3435482	1					
ANR	3435603	Callee	imp_policy . Insert		3435482	0					
ANR	3435604	MemberAccess	imp_policy . Insert		3435482	0					
ANR	3435605	Identifier	imp_policy		3435482	0					
ANR	3435606	Identifier	Insert		3435482	1					
ANR	3435607	ArgumentList	line		3435482	1					
ANR	3435608	Argument	line		3435482	0					
ANR	3435609	Identifier	line		3435482	0					
ANR	3435610	CompoundStatement		29:33:761:761	3435482	1					
ANR	3435611	ExpressionStatement	"dprintf ( D_ALWAYS , ""ImportSecSessionInfo: invalid imported session info: '%s' in %s\\n"" , line , session_info )"	3018:3:87570:87678	3435482	0	True				
ANR	3435612	CallExpression	"dprintf ( D_ALWAYS , ""ImportSecSessionInfo: invalid imported session info: '%s' in %s\\n"" , line , session_info )"		3435482	0					
ANR	3435613	Callee	dprintf		3435482	0					
ANR	3435614	Identifier	dprintf		3435482	0					
ANR	3435615	ArgumentList	D_ALWAYS		3435482	1					
ANR	3435616	Argument	D_ALWAYS		3435482	0					
ANR	3435617	Identifier	D_ALWAYS		3435482	0					
ANR	3435618	Argument	"""ImportSecSessionInfo: invalid imported session info: '%s' in %s\\n"""		3435482	1					
ANR	3435619	PrimaryExpression	"""ImportSecSessionInfo: invalid imported session info: '%s' in %s\\n"""		3435482	0					
ANR	3435620	Argument	line		3435482	2					
ANR	3435621	Identifier	line		3435482	0					
ANR	3435622	Argument	session_info		3435482	3					
ANR	3435623	Identifier	session_info		3435482	0					
ANR	3435624	ReturnStatement	return false ;	3019:3:87683:87695	3435482	1	True				
ANR	3435625	Identifier	false		3435482	0					
ANR	3435626	ExpressionStatement	"sec_copy_attribute ( policy , imp_policy , ATTR_SEC_INTEGRITY )"	3027:1:87877:87933	3435482	9	True				
ANR	3435627	CallExpression	"sec_copy_attribute ( policy , imp_policy , ATTR_SEC_INTEGRITY )"		3435482	0					
ANR	3435628	Callee	sec_copy_attribute		3435482	0					
ANR	3435629	Identifier	sec_copy_attribute		3435482	0					
ANR	3435630	ArgumentList	policy		3435482	1					
ANR	3435631	Argument	policy		3435482	0					
ANR	3435632	Identifier	policy		3435482	0					
ANR	3435633	Argument	imp_policy		3435482	1					
ANR	3435634	Identifier	imp_policy		3435482	0					
ANR	3435635	Argument	ATTR_SEC_INTEGRITY		3435482	2					
ANR	3435636	Identifier	ATTR_SEC_INTEGRITY		3435482	0					
ANR	3435637	ExpressionStatement	"sec_copy_attribute ( policy , imp_policy , ATTR_SEC_ENCRYPTION )"	3028:1:87936:87993	3435482	10	True				
ANR	3435638	CallExpression	"sec_copy_attribute ( policy , imp_policy , ATTR_SEC_ENCRYPTION )"		3435482	0					
ANR	3435639	Callee	sec_copy_attribute		3435482	0					
ANR	3435640	Identifier	sec_copy_attribute		3435482	0					
ANR	3435641	ArgumentList	policy		3435482	1					
ANR	3435642	Argument	policy		3435482	0					
ANR	3435643	Identifier	policy		3435482	0					
ANR	3435644	Argument	imp_policy		3435482	1					
ANR	3435645	Identifier	imp_policy		3435482	0					
ANR	3435646	Argument	ATTR_SEC_ENCRYPTION		3435482	2					
ANR	3435647	Identifier	ATTR_SEC_ENCRYPTION		3435482	0					
ANR	3435648	ExpressionStatement	"sec_copy_attribute ( policy , imp_policy , ATTR_SEC_CRYPTO_METHODS )"	3029:1:87996:88057	3435482	11	True				
ANR	3435649	CallExpression	"sec_copy_attribute ( policy , imp_policy , ATTR_SEC_CRYPTO_METHODS )"		3435482	0					
ANR	3435650	Callee	sec_copy_attribute		3435482	0					
ANR	3435651	Identifier	sec_copy_attribute		3435482	0					
ANR	3435652	ArgumentList	policy		3435482	1					
ANR	3435653	Argument	policy		3435482	0					
ANR	3435654	Identifier	policy		3435482	0					
ANR	3435655	Argument	imp_policy		3435482	1					
ANR	3435656	Identifier	imp_policy		3435482	0					
ANR	3435657	Argument	ATTR_SEC_CRYPTO_METHODS		3435482	2					
ANR	3435658	Identifier	ATTR_SEC_CRYPTO_METHODS		3435482	0					
ANR	3435659	ExpressionStatement	"sec_copy_attribute ( policy , imp_policy , ATTR_SEC_SESSION_EXPIRES )"	3030:1:88060:88122	3435482	12	True				
ANR	3435660	CallExpression	"sec_copy_attribute ( policy , imp_policy , ATTR_SEC_SESSION_EXPIRES )"		3435482	0					
ANR	3435661	Callee	sec_copy_attribute		3435482	0					
ANR	3435662	Identifier	sec_copy_attribute		3435482	0					
ANR	3435663	ArgumentList	policy		3435482	1					
ANR	3435664	Argument	policy		3435482	0					
ANR	3435665	Identifier	policy		3435482	0					
ANR	3435666	Argument	imp_policy		3435482	1					
ANR	3435667	Identifier	imp_policy		3435482	0					
ANR	3435668	Argument	ATTR_SEC_SESSION_EXPIRES		3435482	2					
ANR	3435669	Identifier	ATTR_SEC_SESSION_EXPIRES		3435482	0					
ANR	3435670	ReturnStatement	return true ;	3032:1:88126:88137	3435482	13	True				
ANR	3435671	Identifier	true		3435482	0					
ANR	3435672	ReturnType	bool		3435482	1					
ANR	3435673	Identifier	SecMan :: ImportSecSessionInfo		3435482	2					
ANR	3435674	ParameterList	"char const * session_info , ClassAd & policy"		3435482	3					
ANR	3435675	Parameter	char const * session_info	2989:29:86761:86784	3435482	0	True				
ANR	3435676	ParameterType	char const *		3435482	0					
ANR	3435677	Identifier	session_info		3435482	1					
ANR	3435678	Parameter	ClassAd & policy	2989:54:86786:86800	3435482	1	True				
ANR	3435679	ParameterType	ClassAd &		3435482	0					
ANR	3435680	Identifier	policy		3435482	1					
ANR	3435681	CFGEntryNode	ENTRY		3435482		True				
ANR	3435682	CFGExitNode	EXIT		3435482		True				
ANR	3435683	Symbol	imp_policy . Insert		3435482						
ANR	3435684	Symbol	* buf		3435482						
ANR	3435685	Symbol	session_info		3435482						
ANR	3435686	Symbol	ATTR_SEC_SESSION_EXPIRES		3435482						
ANR	3435687	Symbol	ATTR_SEC_ENCRYPTION		3435482						
ANR	3435688	Symbol	line		3435482						
ANR	3435689	Symbol	imp_policy		3435482						
ANR	3435690	Symbol	D_ALWAYS		3435482						
ANR	3435691	Symbol	false		3435482						
ANR	3435692	Symbol	buf . Length		3435482						
ANR	3435693	Symbol	buf		3435482						
ANR	3435694	Symbol	* buf . Length		3435482						
ANR	3435695	Symbol	lines . next		3435482						
ANR	3435696	Symbol	true		3435482						
ANR	3435697	Symbol	* session_info		3435482						
ANR	3435698	Symbol	ATTR_SEC_INTEGRITY		3435482						
ANR	3435699	Symbol	lines		3435482						
ANR	3435700	Symbol	ATTR_SEC_CRYPTO_METHODS		3435482						
ANR	3435701	Symbol	policy		3435482						
ANR	3435702	Function	SecMan :: ExportSecSessionInfo	3035:0:88142:89491							
ANR	3435703	FunctionDef	"SecMan :: ExportSecSessionInfo (char const * session_id , MyString & session_info)"		3435702	0					
ANR	3435704	CompoundStatement		3036:76:88223:89491	3435702	0					
ANR	3435705	ExpressionStatement	ASSERT ( session_id )	3037:1:88226:88246	3435702	0	True				
ANR	3435706	CallExpression	ASSERT ( session_id )		3435702	0					
ANR	3435707	Callee	ASSERT		3435702	0					
ANR	3435708	Identifier	ASSERT		3435702	0					
ANR	3435709	ArgumentList	session_id		3435702	1					
ANR	3435710	Argument	session_id		3435702	0					
ANR	3435711	Identifier	session_id		3435702	0					
ANR	3435712	IdentifierDeclStatement	KeyCacheEntry * session_key = NULL ;	3039:1:88250:88283	3435702	1	True				
ANR	3435713	IdentifierDecl	* session_key = NULL		3435702	0					
ANR	3435714	IdentifierDeclType	KeyCacheEntry *		3435702	0					
ANR	3435715	Identifier	session_key		3435702	1					
ANR	3435716	AssignmentExpression	* session_key = NULL		3435702	2		=			
ANR	3435717	Identifier	NULL		3435702	0					
ANR	3435718	Identifier	NULL		3435702	1					
ANR	3435719	IfStatement	"if ( ! session_cache -> lookup ( session_id , session_key ) )"		3435702	2					
ANR	3435720	Condition	"! session_cache -> lookup ( session_id , session_key )"	3040:4:88289:88334	3435702	0	True				
ANR	3435721	UnaryOperationExpression	"! session_cache -> lookup ( session_id , session_key )"		3435702	0					
ANR	3435722	UnaryOperator	!		3435702	0					
ANR	3435723	CallExpression	"session_cache -> lookup ( session_id , session_key )"		3435702	1					
ANR	3435724	Callee	session_cache -> lookup		3435702	0					
ANR	3435725	PtrMemberAccess	session_cache -> lookup		3435702	0					
ANR	3435726	Identifier	session_cache		3435702	0					
ANR	3435727	Identifier	lookup		3435702	1					
ANR	3435728	ArgumentList	session_id		3435702	1					
ANR	3435729	Argument	session_id		3435702	0					
ANR	3435730	Identifier	session_id		3435702	0					
ANR	3435731	Argument	session_key		3435702	1					
ANR	3435732	Identifier	session_key		3435702	0					
ANR	3435733	CompoundStatement		5:52:113:113	3435702	1					
ANR	3435734	Statement	dprintf	3041:2:88341:88347	3435702	0	True				
ANR	3435735	Statement	(	3041:9:88348:88348	3435702	1	True				
ANR	3435736	Statement	D_ALWAYS	3041:10:88349:88356	3435702	2	True				
ANR	3435737	Statement	","	3041:18:88357:88357	3435702	3	True				
ANR	3435738	Statement	"""SECMAN: ExportSecSessionInfo failed to find """	3041:19:88358:88403	3435702	4	True				
ANR	3435739	Statement	"""session %s\\n"""	3042:4:88409:88422	3435702	5	True				
ANR	3435740	Statement	","	3042:18:88423:88423	3435702	6	True				
ANR	3435741	Statement	session_id	3042:19:88424:88433	3435702	7	True				
ANR	3435742	Statement	)	3042:29:88434:88434	3435702	8	True				
ANR	3435743	ExpressionStatement		3042:30:88435:88435	3435702	9	True				
ANR	3435744	ReturnStatement	return false ;	3043:2:88439:88451	3435702	10	True				
ANR	3435745	Identifier	false		3435702	0					
ANR	3435746	IdentifierDeclStatement	ClassAd * policy = session_key -> policy ( ) ;	3045:1:88457:88496	3435702	3	True				
ANR	3435747	IdentifierDecl	* policy = session_key -> policy ( )		3435702	0					
ANR	3435748	IdentifierDeclType	ClassAd *		3435702	0					
ANR	3435749	Identifier	policy		3435702	1					
ANR	3435750	AssignmentExpression	* policy = session_key -> policy ( )		3435702	2		=			
ANR	3435751	Identifier	policy		3435702	0					
ANR	3435752	CallExpression	session_key -> policy ( )		3435702	1					
ANR	3435753	Callee	session_key -> policy		3435702	0					
ANR	3435754	PtrMemberAccess	session_key -> policy		3435702	0					
ANR	3435755	Identifier	session_key		3435702	0					
ANR	3435756	Identifier	policy		3435702	1					
ANR	3435757	ArgumentList			3435702	1					
ANR	3435758	ExpressionStatement	ASSERT ( policy )	3046:1:88499:88515	3435702	4	True				
ANR	3435759	CallExpression	ASSERT ( policy )		3435702	0					
ANR	3435760	Callee	ASSERT		3435702	0					
ANR	3435761	Identifier	ASSERT		3435702	0					
ANR	3435762	ArgumentList	policy		3435702	1					
ANR	3435763	Argument	policy		3435702	0					
ANR	3435764	Identifier	policy		3435702	0					
ANR	3435765	IdentifierDeclStatement	ClassAd exp_policy ;	3048:1:88519:88537	3435702	5	True				
ANR	3435766	IdentifierDecl	exp_policy		3435702	0					
ANR	3435767	IdentifierDeclType	ClassAd		3435702	0					
ANR	3435768	Identifier	exp_policy		3435702	1					
ANR	3435769	ExpressionStatement	"sec_copy_attribute ( exp_policy , * policy , ATTR_SEC_INTEGRITY )"	3049:1:88540:88597	3435702	6	True				
ANR	3435770	CallExpression	"sec_copy_attribute ( exp_policy , * policy , ATTR_SEC_INTEGRITY )"		3435702	0					
ANR	3435771	Callee	sec_copy_attribute		3435702	0					
ANR	3435772	Identifier	sec_copy_attribute		3435702	0					
ANR	3435773	ArgumentList	exp_policy		3435702	1					
ANR	3435774	Argument	exp_policy		3435702	0					
ANR	3435775	Identifier	exp_policy		3435702	0					
ANR	3435776	Argument	* policy		3435702	1					
ANR	3435777	UnaryOperationExpression	* policy		3435702	0					
ANR	3435778	UnaryOperator	*		3435702	0					
ANR	3435779	Identifier	policy		3435702	1					
ANR	3435780	Argument	ATTR_SEC_INTEGRITY		3435702	2					
ANR	3435781	Identifier	ATTR_SEC_INTEGRITY		3435702	0					
ANR	3435782	ExpressionStatement	"sec_copy_attribute ( exp_policy , * policy , ATTR_SEC_ENCRYPTION )"	3050:1:88600:88658	3435702	7	True				
ANR	3435783	CallExpression	"sec_copy_attribute ( exp_policy , * policy , ATTR_SEC_ENCRYPTION )"		3435702	0					
ANR	3435784	Callee	sec_copy_attribute		3435702	0					
ANR	3435785	Identifier	sec_copy_attribute		3435702	0					
ANR	3435786	ArgumentList	exp_policy		3435702	1					
ANR	3435787	Argument	exp_policy		3435702	0					
ANR	3435788	Identifier	exp_policy		3435702	0					
ANR	3435789	Argument	* policy		3435702	1					
ANR	3435790	UnaryOperationExpression	* policy		3435702	0					
ANR	3435791	UnaryOperator	*		3435702	0					
ANR	3435792	Identifier	policy		3435702	1					
ANR	3435793	Argument	ATTR_SEC_ENCRYPTION		3435702	2					
ANR	3435794	Identifier	ATTR_SEC_ENCRYPTION		3435702	0					
ANR	3435795	ExpressionStatement	"sec_copy_attribute ( exp_policy , * policy , ATTR_SEC_CRYPTO_METHODS )"	3051:1:88661:88723	3435702	8	True				
ANR	3435796	CallExpression	"sec_copy_attribute ( exp_policy , * policy , ATTR_SEC_CRYPTO_METHODS )"		3435702	0					
ANR	3435797	Callee	sec_copy_attribute		3435702	0					
ANR	3435798	Identifier	sec_copy_attribute		3435702	0					
ANR	3435799	ArgumentList	exp_policy		3435702	1					
ANR	3435800	Argument	exp_policy		3435702	0					
ANR	3435801	Identifier	exp_policy		3435702	0					
ANR	3435802	Argument	* policy		3435702	1					
ANR	3435803	UnaryOperationExpression	* policy		3435702	0					
ANR	3435804	UnaryOperator	*		3435702	0					
ANR	3435805	Identifier	policy		3435702	1					
ANR	3435806	Argument	ATTR_SEC_CRYPTO_METHODS		3435702	2					
ANR	3435807	Identifier	ATTR_SEC_CRYPTO_METHODS		3435702	0					
ANR	3435808	ExpressionStatement	"sec_copy_attribute ( exp_policy , * policy , ATTR_SEC_SESSION_EXPIRES )"	3052:1:88726:88789	3435702	9	True				
ANR	3435809	CallExpression	"sec_copy_attribute ( exp_policy , * policy , ATTR_SEC_SESSION_EXPIRES )"		3435702	0					
ANR	3435810	Callee	sec_copy_attribute		3435702	0					
ANR	3435811	Identifier	sec_copy_attribute		3435702	0					
ANR	3435812	ArgumentList	exp_policy		3435702	1					
ANR	3435813	Argument	exp_policy		3435702	0					
ANR	3435814	Identifier	exp_policy		3435702	0					
ANR	3435815	Argument	* policy		3435702	1					
ANR	3435816	UnaryOperationExpression	* policy		3435702	0					
ANR	3435817	UnaryOperator	*		3435702	0					
ANR	3435818	Identifier	policy		3435702	1					
ANR	3435819	Argument	ATTR_SEC_SESSION_EXPIRES		3435702	2					
ANR	3435820	Identifier	ATTR_SEC_SESSION_EXPIRES		3435702	0					
ANR	3435821	ExpressionStatement	"session_info += ""["""	3054:1:88793:88812	3435702	10	True				
ANR	3435822	AssignmentExpression	"session_info += ""["""		3435702	0		+=			
ANR	3435823	Identifier	session_info		3435702	0					
ANR	3435824	PrimaryExpression	"""["""		3435702	1					
ANR	3435825	ExpressionStatement	exp_policy . ResetExpr ( )	3055:1:88815:88837	3435702	11	True				
ANR	3435826	CallExpression	exp_policy . ResetExpr ( )		3435702	0					
ANR	3435827	Callee	exp_policy . ResetExpr		3435702	0					
ANR	3435828	MemberAccess	exp_policy . ResetExpr		3435702	0					
ANR	3435829	Identifier	exp_policy		3435702	0					
ANR	3435830	Identifier	ResetExpr		3435702	1					
ANR	3435831	ArgumentList			3435702	1					
ANR	3435832	IdentifierDeclStatement	const char * name ;	3056:1:88840:88856	3435702	12	True				
ANR	3435833	IdentifierDecl	* name		3435702	0					
ANR	3435834	IdentifierDeclType	const char *		3435702	0					
ANR	3435835	Identifier	name		3435702	1					
ANR	3435836	IdentifierDeclStatement	ExprTree * elem ;	3057:1:88859:88873	3435702	13	True				
ANR	3435837	IdentifierDecl	* elem		3435702	0					
ANR	3435838	IdentifierDeclType	ExprTree *		3435702	0					
ANR	3435839	Identifier	elem		3435702	1					
ANR	3435840	WhileStatement	"while ( exp_policy . NextExpr ( name , elem ) )"		3435702	14					
ANR	3435841	Condition	"exp_policy . NextExpr ( name , elem )"	3058:8:88883:88913	3435702	0	True				
ANR	3435842	CallExpression	"exp_policy . NextExpr ( name , elem )"		3435702	0					
ANR	3435843	Callee	exp_policy . NextExpr		3435702	0					
ANR	3435844	MemberAccess	exp_policy . NextExpr		3435702	0					
ANR	3435845	Identifier	exp_policy		3435702	0					
ANR	3435846	Identifier	NextExpr		3435702	1					
ANR	3435847	ArgumentList	name		3435702	1					
ANR	3435848	Argument	name		3435702	0					
ANR	3435849	Identifier	name		3435702	0					
ANR	3435850	Argument	elem		3435702	1					
ANR	3435851	Identifier	elem		3435702	0					
ANR	3435852	CompoundStatement		29:8:875:916	3435702	1					
ANR	3435853	ExpressionStatement	session_info += name	3061:2:89045:89065	3435702	0	True				
ANR	3435854	AssignmentExpression	session_info += name		3435702	0		+=			
ANR	3435855	Identifier	session_info		3435702	0					
ANR	3435856	Identifier	name		3435702	1					
ANR	3435857	ExpressionStatement	"session_info += ""="""	3062:2:89069:89088	3435702	1	True				
ANR	3435858	AssignmentExpression	"session_info += ""="""		3435702	0		+=			
ANR	3435859	Identifier	session_info		3435702	0					
ANR	3435860	PrimaryExpression	"""="""		3435702	1					
ANR	3435861	IdentifierDeclStatement	const char * line = ExprTreeToString ( elem ) ;	3064:8:89099:89140	3435702	2	True				
ANR	3435862	IdentifierDecl	* line = ExprTreeToString ( elem )		3435702	0					
ANR	3435863	IdentifierDeclType	const char *		3435702	0					
ANR	3435864	Identifier	line		3435702	1					
ANR	3435865	AssignmentExpression	* line = ExprTreeToString ( elem )		3435702	2		=			
ANR	3435866	Identifier	line		3435702	0					
ANR	3435867	CallExpression	ExprTreeToString ( elem )		3435702	1					
ANR	3435868	Callee	ExprTreeToString		3435702	0					
ANR	3435869	Identifier	ExprTreeToString		3435702	0					
ANR	3435870	ArgumentList	elem		3435702	1					
ANR	3435871	Argument	elem		3435702	0					
ANR	3435872	Identifier	elem		3435702	0					
ANR	3435873	ExpressionStatement	"ASSERT ( strchr ( line , ';' ) == NULL )"	3068:2:89259:89293	3435702	3	True				
ANR	3435874	CallExpression	"ASSERT ( strchr ( line , ';' ) == NULL )"		3435702	0					
ANR	3435875	Callee	ASSERT		3435702	0					
ANR	3435876	Identifier	ASSERT		3435702	0					
ANR	3435877	ArgumentList	"strchr ( line , ';' ) == NULL"		3435702	1					
ANR	3435878	Argument	"strchr ( line , ';' ) == NULL"		3435702	0					
ANR	3435879	EqualityExpression	"strchr ( line , ';' ) == NULL"		3435702	0		==			
ANR	3435880	CallExpression	"strchr ( line , ';' )"		3435702	0					
ANR	3435881	Callee	strchr		3435702	0					
ANR	3435882	Identifier	strchr		3435702	0					
ANR	3435883	ArgumentList	line		3435702	1					
ANR	3435884	Argument	line		3435702	0					
ANR	3435885	Identifier	line		3435702	0					
ANR	3435886	Argument	';'		3435702	1					
ANR	3435887	PrimaryExpression	';'		3435702	0					
ANR	3435888	Identifier	NULL		3435702	1					
ANR	3435889	ExpressionStatement	session_info += line	3070:2:89298:89318	3435702	4	True				
ANR	3435890	AssignmentExpression	session_info += line		3435702	0		+=			
ANR	3435891	Identifier	session_info		3435702	0					
ANR	3435892	Identifier	line		3435702	1					
ANR	3435893	ExpressionStatement	"session_info += "";"""	3071:2:89322:89341	3435702	5	True				
ANR	3435894	AssignmentExpression	"session_info += "";"""		3435702	0		+=			
ANR	3435895	Identifier	session_info		3435702	0					
ANR	3435896	PrimaryExpression	""";"""		3435702	1					
ANR	3435897	ExpressionStatement	"session_info += ""]"""	3073:1:89350:89369	3435702	15	True				
ANR	3435898	AssignmentExpression	"session_info += ""]"""		3435702	0		+=			
ANR	3435899	Identifier	session_info		3435702	0					
ANR	3435900	PrimaryExpression	"""]"""		3435702	1					
ANR	3435901	ExpressionStatement	"dprintf ( D_SECURITY , ""SECMAN: exporting session info for %s: %s\\n"" , session_id , session_info . Value ( ) )"	3075:1:89373:89475	3435702	16	True				
ANR	3435902	CallExpression	"dprintf ( D_SECURITY , ""SECMAN: exporting session info for %s: %s\\n"" , session_id , session_info . Value ( ) )"		3435702	0					
ANR	3435903	Callee	dprintf		3435702	0					
ANR	3435904	Identifier	dprintf		3435702	0					
ANR	3435905	ArgumentList	D_SECURITY		3435702	1					
ANR	3435906	Argument	D_SECURITY		3435702	0					
ANR	3435907	Identifier	D_SECURITY		3435702	0					
ANR	3435908	Argument	"""SECMAN: exporting session info for %s: %s\\n"""		3435702	1					
ANR	3435909	PrimaryExpression	"""SECMAN: exporting session info for %s: %s\\n"""		3435702	0					
ANR	3435910	Argument	session_id		3435702	2					
ANR	3435911	Identifier	session_id		3435702	0					
ANR	3435912	Argument	session_info . Value ( )		3435702	3					
ANR	3435913	CallExpression	session_info . Value ( )		3435702	0					
ANR	3435914	Callee	session_info . Value		3435702	0					
ANR	3435915	MemberAccess	session_info . Value		3435702	0					
ANR	3435916	Identifier	session_info		3435702	0					
ANR	3435917	Identifier	Value		3435702	1					
ANR	3435918	ArgumentList			3435702	1					
ANR	3435919	ReturnStatement	return true ;	3077:1:89478:89489	3435702	17	True				
ANR	3435920	Identifier	true		3435702	0					
ANR	3435921	ReturnType	bool		3435702	1					
ANR	3435922	Identifier	SecMan :: ExportSecSessionInfo		3435702	2					
ANR	3435923	ParameterList	"char const * session_id , MyString & session_info"		3435702	3					
ANR	3435924	Parameter	char const * session_id	3036:29:88176:88197	3435702	0	True				
ANR	3435925	ParameterType	char const *		3435702	0					
ANR	3435926	Identifier	session_id		3435702	1					
ANR	3435927	Parameter	MyString & session_info	3036:52:88199:88220	3435702	1	True				
ANR	3435928	ParameterType	MyString &		3435702	0					
ANR	3435929	Identifier	session_info		3435702	1					
ANR	3435930	CFGEntryNode	ENTRY		3435702		True				
ANR	3435931	CFGExitNode	EXIT		3435702		True				
ANR	3435932	Symbol	D_SECURITY		3435702						
ANR	3435933	Symbol	ATTR_SEC_ENCRYPTION		3435702						
ANR	3435934	Symbol	line		3435702						
ANR	3435935	Symbol	ExprTreeToString		3435702						
ANR	3435936	Symbol	exp_policy . NextExpr		3435702						
ANR	3435937	Symbol	strchr		3435702						
ANR	3435938	Symbol	session_cache -> lookup		3435702						
ANR	3435939	Symbol	* policy		3435702						
ANR	3435940	Symbol	session_cache		3435702						
ANR	3435941	Symbol	session_key		3435702						
ANR	3435942	Symbol	session_key -> policy		3435702						
ANR	3435943	Symbol	ATTR_SEC_CRYPTO_METHODS		3435702						
ANR	3435944	Symbol	policy		3435702						
ANR	3435945	Symbol	* session_cache		3435702						
ANR	3435946	Symbol	elem		3435702						
ANR	3435947	Symbol	* session_key		3435702						
ANR	3435948	Symbol	NULL		3435702						
ANR	3435949	Symbol	session_info		3435702						
ANR	3435950	Symbol	ATTR_SEC_SESSION_EXPIRES		3435702						
ANR	3435951	Symbol	false		3435702						
ANR	3435952	Symbol	session_id		3435702						
ANR	3435953	Symbol	session_info . Value		3435702						
ANR	3435954	Symbol	name		3435702						
ANR	3435955	Symbol	true		3435702						
ANR	3435956	Symbol	exp_policy		3435702						
ANR	3435957	Symbol	ATTR_SEC_INTEGRITY		3435702						
ANR	3435958	Function	SecMan :: SetSessionExpiration	3080:0:89494:89992							
ANR	3435959	FunctionDef	"SecMan :: SetSessionExpiration (char const * session_id , time_t expiration_time)"		3435958	0					
ANR	3435960	CompoundStatement		3081:76:89575:89992	3435958	0					
ANR	3435961	ExpressionStatement	ASSERT ( session_id )	3082:1:89578:89598	3435958	0	True				
ANR	3435962	CallExpression	ASSERT ( session_id )		3435958	0					
ANR	3435963	Callee	ASSERT		3435958	0					
ANR	3435964	Identifier	ASSERT		3435958	0					
ANR	3435965	ArgumentList	session_id		3435958	1					
ANR	3435966	Argument	session_id		3435958	0					
ANR	3435967	Identifier	session_id		3435958	0					
ANR	3435968	IdentifierDeclStatement	KeyCacheEntry * session_key = NULL ;	3084:1:89602:89635	3435958	1	True				
ANR	3435969	IdentifierDecl	* session_key = NULL		3435958	0					
ANR	3435970	IdentifierDeclType	KeyCacheEntry *		3435958	0					
ANR	3435971	Identifier	session_key		3435958	1					
ANR	3435972	AssignmentExpression	* session_key = NULL		3435958	2		=			
ANR	3435973	Identifier	NULL		3435958	0					
ANR	3435974	Identifier	NULL		3435958	1					
ANR	3435975	IfStatement	"if ( ! session_cache -> lookup ( session_id , session_key ) )"		3435958	2					
ANR	3435976	Condition	"! session_cache -> lookup ( session_id , session_key )"	3085:4:89641:89686	3435958	0	True				
ANR	3435977	UnaryOperationExpression	"! session_cache -> lookup ( session_id , session_key )"		3435958	0					
ANR	3435978	UnaryOperator	!		3435958	0					
ANR	3435979	CallExpression	"session_cache -> lookup ( session_id , session_key )"		3435958	1					
ANR	3435980	Callee	session_cache -> lookup		3435958	0					
ANR	3435981	PtrMemberAccess	session_cache -> lookup		3435958	0					
ANR	3435982	Identifier	session_cache		3435958	0					
ANR	3435983	Identifier	lookup		3435958	1					
ANR	3435984	ArgumentList	session_id		3435958	1					
ANR	3435985	Argument	session_id		3435958	0					
ANR	3435986	Identifier	session_id		3435958	0					
ANR	3435987	Argument	session_key		3435958	1					
ANR	3435988	Identifier	session_key		3435958	0					
ANR	3435989	CompoundStatement		5:52:113:113	3435958	1					
ANR	3435990	Statement	dprintf	3086:2:89693:89699	3435958	0	True				
ANR	3435991	Statement	(	3086:9:89700:89700	3435958	1	True				
ANR	3435992	Statement	D_ALWAYS	3086:10:89701:89708	3435958	2	True				
ANR	3435993	Statement	","	3086:18:89709:89709	3435958	3	True				
ANR	3435994	Statement	"""SECMAN: SetSessionExpiration failed to find """	3086:19:89710:89755	3435958	4	True				
ANR	3435995	Statement	"""session %s\\n"""	3087:4:89761:89774	3435958	5	True				
ANR	3435996	Statement	","	3087:18:89775:89775	3435958	6	True				
ANR	3435997	Statement	session_id	3087:19:89776:89785	3435958	7	True				
ANR	3435998	Statement	)	3087:29:89786:89786	3435958	8	True				
ANR	3435999	ExpressionStatement		3087:30:89787:89787	3435958	9	True				
ANR	3436000	ReturnStatement	return false ;	3088:2:89791:89803	3435958	10	True				
ANR	3436001	Identifier	false		3435958	0					
ANR	3436002	ExpressionStatement	session_key -> setExpiration ( expiration_time )	3090:1:89809:89852	3435958	3	True				
ANR	3436003	CallExpression	session_key -> setExpiration ( expiration_time )		3435958	0					
ANR	3436004	Callee	session_key -> setExpiration		3435958	0					
ANR	3436005	PtrMemberAccess	session_key -> setExpiration		3435958	0					
ANR	3436006	Identifier	session_key		3435958	0					
ANR	3436007	Identifier	setExpiration		3435958	1					
ANR	3436008	ArgumentList	expiration_time		3435958	1					
ANR	3436009	Argument	expiration_time		3435958	0					
ANR	3436010	Identifier	expiration_time		3435958	0					
ANR	3436011	ExpressionStatement	"dprintf ( D_SECURITY , ""Set expiration time for security session %s to %ds\\n"" , session_id , ( int ) ( expiration_time - time ( NULL ) ) )"	3092:1:89856:89975	3435958	4	True				
ANR	3436012	CallExpression	"dprintf ( D_SECURITY , ""Set expiration time for security session %s to %ds\\n"" , session_id , ( int ) ( expiration_time - time ( NULL ) ) )"		3435958	0					
ANR	3436013	Callee	dprintf		3435958	0					
ANR	3436014	Identifier	dprintf		3435958	0					
ANR	3436015	ArgumentList	D_SECURITY		3435958	1					
ANR	3436016	Argument	D_SECURITY		3435958	0					
ANR	3436017	Identifier	D_SECURITY		3435958	0					
ANR	3436018	Argument	"""Set expiration time for security session %s to %ds\\n"""		3435958	1					
ANR	3436019	PrimaryExpression	"""Set expiration time for security session %s to %ds\\n"""		3435958	0					
ANR	3436020	Argument	session_id		3435958	2					
ANR	3436021	Identifier	session_id		3435958	0					
ANR	3436022	Argument	( int ) ( expiration_time - time ( NULL ) )		3435958	3					
ANR	3436023	CastExpression	( int ) ( expiration_time - time ( NULL ) )		3435958	0					
ANR	3436024	CastTarget	int		3435958	0					
ANR	3436025	AdditiveExpression	expiration_time - time ( NULL )		3435958	1		-			
ANR	3436026	Identifier	expiration_time		3435958	0					
ANR	3436027	CallExpression	time ( NULL )		3435958	1					
ANR	3436028	Callee	time		3435958	0					
ANR	3436029	Identifier	time		3435958	0					
ANR	3436030	ArgumentList	NULL		3435958	1					
ANR	3436031	Argument	NULL		3435958	0					
ANR	3436032	Identifier	NULL		3435958	0					
ANR	3436033	ReturnStatement	return true ;	3094:1:89979:89990	3435958	5	True				
ANR	3436034	Identifier	true		3435958	0					
ANR	3436035	ReturnType	bool		3435958	1					
ANR	3436036	Identifier	SecMan :: SetSessionExpiration		3435958	2					
ANR	3436037	ParameterList	"char const * session_id , time_t expiration_time"		3435958	3					
ANR	3436038	Parameter	char const * session_id	3081:29:89528:89549	3435958	0	True				
ANR	3436039	ParameterType	char const *		3435958	0					
ANR	3436040	Identifier	session_id		3435958	1					
ANR	3436041	Parameter	time_t expiration_time	3081:52:89551:89572	3435958	1	True				
ANR	3436042	ParameterType	time_t		3435958	0					
ANR	3436043	Identifier	expiration_time		3435958	1					
ANR	3436044	CFGEntryNode	ENTRY		3435958		True				
ANR	3436045	CFGExitNode	EXIT		3435958		True				
ANR	3436046	Symbol	* session_cache		3435958						
ANR	3436047	Symbol	NULL		3435958						
ANR	3436048	Symbol	session_cache		3435958						
ANR	3436049	Symbol	D_SECURITY		3435958						
ANR	3436050	Symbol	expiration_time		3435958						
ANR	3436051	Symbol	session_key		3435958						
ANR	3436052	Symbol	false		3435958						
ANR	3436053	Symbol	true		3435958						
ANR	3436054	Symbol	session_id		3435958						
ANR	3436055	Symbol	time		3435958						
ANR	3436056	Symbol	session_cache -> lookup		3435958						
ANR	3436057	Function	SecMan :: SetSessionLingerFlag	3097:0:89995:90336							
ANR	3436058	FunctionDef	SecMan :: SetSessionLingerFlag (char const * session_id)		3436057	0					
ANR	3436059	CompoundStatement		3098:53:90053:90336	3436057	0					
ANR	3436060	ExpressionStatement	ASSERT ( session_id )	3099:1:90056:90076	3436057	0	True				
ANR	3436061	CallExpression	ASSERT ( session_id )		3436057	0					
ANR	3436062	Callee	ASSERT		3436057	0					
ANR	3436063	Identifier	ASSERT		3436057	0					
ANR	3436064	ArgumentList	session_id		3436057	1					
ANR	3436065	Argument	session_id		3436057	0					
ANR	3436066	Identifier	session_id		3436057	0					
ANR	3436067	IdentifierDeclStatement	KeyCacheEntry * session_key = NULL ;	3101:1:90080:90113	3436057	1	True				
ANR	3436068	IdentifierDecl	* session_key = NULL		3436057	0					
ANR	3436069	IdentifierDeclType	KeyCacheEntry *		3436057	0					
ANR	3436070	Identifier	session_key		3436057	1					
ANR	3436071	AssignmentExpression	* session_key = NULL		3436057	2		=			
ANR	3436072	Identifier	NULL		3436057	0					
ANR	3436073	Identifier	NULL		3436057	1					
ANR	3436074	IfStatement	"if ( ! session_cache -> lookup ( session_id , session_key ) )"		3436057	2					
ANR	3436075	Condition	"! session_cache -> lookup ( session_id , session_key )"	3102:4:90119:90164	3436057	0	True				
ANR	3436076	UnaryOperationExpression	"! session_cache -> lookup ( session_id , session_key )"		3436057	0					
ANR	3436077	UnaryOperator	!		3436057	0					
ANR	3436078	CallExpression	"session_cache -> lookup ( session_id , session_key )"		3436057	1					
ANR	3436079	Callee	session_cache -> lookup		3436057	0					
ANR	3436080	PtrMemberAccess	session_cache -> lookup		3436057	0					
ANR	3436081	Identifier	session_cache		3436057	0					
ANR	3436082	Identifier	lookup		3436057	1					
ANR	3436083	ArgumentList	session_id		3436057	1					
ANR	3436084	Argument	session_id		3436057	0					
ANR	3436085	Identifier	session_id		3436057	0					
ANR	3436086	Argument	session_key		3436057	1					
ANR	3436087	Identifier	session_key		3436057	0					
ANR	3436088	CompoundStatement		5:52:113:113	3436057	1					
ANR	3436089	Statement	dprintf	3103:2:90171:90177	3436057	0	True				
ANR	3436090	Statement	(	3103:9:90178:90178	3436057	1	True				
ANR	3436091	Statement	D_ALWAYS	3103:10:90179:90186	3436057	2	True				
ANR	3436092	Statement	","	3103:18:90187:90187	3436057	3	True				
ANR	3436093	Statement	"""SECMAN: SetSessionLingerFlag failed to find """	3103:19:90188:90233	3436057	4	True				
ANR	3436094	Statement	"""session %s\\n"""	3104:4:90239:90252	3436057	5	True				
ANR	3436095	Statement	","	3104:18:90253:90253	3436057	6	True				
ANR	3436096	Statement	session_id	3104:19:90254:90263	3436057	7	True				
ANR	3436097	Statement	)	3104:29:90264:90264	3436057	8	True				
ANR	3436098	ExpressionStatement		3104:30:90265:90265	3436057	9	True				
ANR	3436099	ReturnStatement	return false ;	3105:2:90269:90281	3436057	10	True				
ANR	3436100	Identifier	false		3436057	0					
ANR	3436101	ExpressionStatement	session_key -> setLingerFlag ( true )	3107:1:90287:90319	3436057	3	True				
ANR	3436102	CallExpression	session_key -> setLingerFlag ( true )		3436057	0					
ANR	3436103	Callee	session_key -> setLingerFlag		3436057	0					
ANR	3436104	PtrMemberAccess	session_key -> setLingerFlag		3436057	0					
ANR	3436105	Identifier	session_key		3436057	0					
ANR	3436106	Identifier	setLingerFlag		3436057	1					
ANR	3436107	ArgumentList	true		3436057	1					
ANR	3436108	Argument	true		3436057	0					
ANR	3436109	Identifier	true		3436057	0					
ANR	3436110	ReturnStatement	return true ;	3109:1:90323:90334	3436057	4	True				
ANR	3436111	Identifier	true		3436057	0					
ANR	3436112	ReturnType	bool		3436057	1					
ANR	3436113	Identifier	SecMan :: SetSessionLingerFlag		3436057	2					
ANR	3436114	ParameterList	char const * session_id		3436057	3					
ANR	3436115	Parameter	char const * session_id	3098:29:90029:90050	3436057	0	True				
ANR	3436116	ParameterType	char const *		3436057	0					
ANR	3436117	Identifier	session_id		3436057	1					
ANR	3436118	CFGEntryNode	ENTRY		3436057		True				
ANR	3436119	CFGExitNode	EXIT		3436057		True				
ANR	3436120	Symbol	* session_cache		3436057						
ANR	3436121	Symbol	NULL		3436057						
ANR	3436122	Symbol	session_cache		3436057						
ANR	3436123	Symbol	session_key		3436057						
ANR	3436124	Symbol	false		3436057						
ANR	3436125	Symbol	true		3436057						
ANR	3436126	Symbol	session_id		3436057						
ANR	3436127	Symbol	session_cache -> lookup		3436057						
