command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4995220	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_uids.cpp								
ANR	4995221	DeclStmt									
ANR	4995222	Decl							char	char *	CondorUserName
ANR	4995223	DeclStmt									
ANR	4995224	Decl							const char	const char *	RealUserName
ANR	4995225	DeclStmt									
ANR	4995226	Decl							int	int	SwitchIds
ANR	4995227	DeclStmt									
ANR	4995228	Decl							int	int	UserIdsInited
ANR	4995229	DeclStmt									
ANR	4995230	Decl							int	int	OwnerIdsInited
ANR	4995231	DeclStmt									
ANR	4995232	Decl							priv_state	priv_state	CurrentPrivState
ANR	4995233	DeclStmt									
ANR	4995234	Decl							priv_state	priv_state	CurrentPrivState
ANR	4995235	DeclStmt									
ANR	4995236	Decl							gid_t	gid_t	TrackingGid
ANR	4995237	DeclStmt									
ANR	4995238	Decl							const char	const char * [ ]	priv_state_name
ANR	4995239	ClassDef	<unnamed>	72:7:2101:2210							
ANR	4995240	DeclStmt									
ANR	4995241	Decl							time_t	time_t	timestamp
ANR	4995242	DeclStmt									
ANR	4995243	Decl							priv_state	priv_state	priv
ANR	4995244	DeclStmt									
ANR	4995245	Decl							const char	const char *	file
ANR	4995246	DeclStmt									
ANR	4995247	Decl							int	int	line
ANR	4995248	DeclStmt									
ANR	4995249	Decl								 [ HISTORY_LENGTH ]	priv_history
ANR	4995250	DeclStmt									
ANR	4995251	Decl							int	int	ph_head
ANR	4995252	Decl							int	int	ph_count
ANR	4995253	Function	priv_to_string	80:0:2247:2383							
ANR	4995254	FunctionDef	priv_to_string (priv_state p)		4995253	0					
ANR	4995255	CompoundStatement		82:0:2290:2383	4995253	0					
ANR	4995256	IfStatement	if ( p < _priv_state_threshold )		4995253	0					
ANR	4995257	Condition	p < _priv_state_threshold	83:5:2297:2321	4995253	0	True				
ANR	4995258	RelationalExpression	p < _priv_state_threshold		4995253	0		<			
ANR	4995259	Identifier	p		4995253	0					
ANR	4995260	Identifier	_priv_state_threshold		4995253	1					
ANR	4995261	CompoundStatement		2:33:34:34	4995253	1					
ANR	4995262	ReturnStatement	return priv_state_name [ p ] ;	84:2:2329:2354	4995253	0	True				
ANR	4995263	ArrayIndexing	priv_state_name [ p ]		4995253	0					
ANR	4995264	Identifier	priv_state_name		4995253	0					
ANR	4995265	Identifier	p		4995253	1					
ANR	4995266	ReturnStatement	"return ""PRIV_INVALID"" ;"	86:1:2360:2381	4995253	1	True				
ANR	4995267	PrimaryExpression	"""PRIV_INVALID"""		4995253	0					
ANR	4995268	ReturnType	const char *		4995253	1					
ANR	4995269	Identifier	priv_to_string		4995253	2					
ANR	4995270	ParameterList	priv_state p		4995253	3					
ANR	4995271	Parameter	priv_state p	81:16:2275:2286	4995253	0	True				
ANR	4995272	ParameterType	priv_state		4995253	0					
ANR	4995273	Identifier	p		4995253	1					
ANR	4995274	CFGEntryNode	ENTRY		4995253		True				
ANR	4995275	CFGExitNode	EXIT		4995253		True				
ANR	4995276	Symbol	p		4995253						
ANR	4995277	Symbol	priv_state_name		4995253						
ANR	4995278	Symbol	* priv_state_name		4995253						
ANR	4995279	Symbol	_priv_state_threshold		4995253						
ANR	4995280	Symbol	* p		4995253						
ANR	4995281	Function	log_priv	89:0:2386:2859							
ANR	4995282	FunctionDef	"log_priv (priv_state prev , priv_state new_priv , const char * file , int line)"		4995281	0					
ANR	4995283	CompoundStatement		91:0:2466:2859	4995281	0					
ANR	4995284	ExpressionStatement	"dprintf ( D_PRIV , ""%s --> %s at %s:%d\\n"" , priv_state_name [ prev ] , priv_state_name [ new_priv ] , file , line )"	92:1:2469:2573	4995281	0	True				
ANR	4995285	CallExpression	"dprintf ( D_PRIV , ""%s --> %s at %s:%d\\n"" , priv_state_name [ prev ] , priv_state_name [ new_priv ] , file , line )"		4995281	0					
ANR	4995286	Callee	dprintf		4995281	0					
ANR	4995287	Identifier	dprintf		4995281	0					
ANR	4995288	ArgumentList	D_PRIV		4995281	1					
ANR	4995289	Argument	D_PRIV		4995281	0					
ANR	4995290	Identifier	D_PRIV		4995281	0					
ANR	4995291	Argument	"""%s --> %s at %s:%d\\n"""		4995281	1					
ANR	4995292	PrimaryExpression	"""%s --> %s at %s:%d\\n"""		4995281	0					
ANR	4995293	Argument	priv_state_name [ prev ]		4995281	2					
ANR	4995294	ArrayIndexing	priv_state_name [ prev ]		4995281	0					
ANR	4995295	Identifier	priv_state_name		4995281	0					
ANR	4995296	Identifier	prev		4995281	1					
ANR	4995297	Argument	priv_state_name [ new_priv ]		4995281	3					
ANR	4995298	ArrayIndexing	priv_state_name [ new_priv ]		4995281	0					
ANR	4995299	Identifier	priv_state_name		4995281	0					
ANR	4995300	Identifier	new_priv		4995281	1					
ANR	4995301	Argument	file		4995281	4					
ANR	4995302	Identifier	file		4995281	0					
ANR	4995303	Argument	line		4995281	5					
ANR	4995304	Identifier	line		4995281	0					
ANR	4995305	ExpressionStatement	priv_history [ ph_head ] . timestamp = time ( NULL )	94:1:2576:2620	4995281	1	True				
ANR	4995306	AssignmentExpression	priv_history [ ph_head ] . timestamp = time ( NULL )		4995281	0		=			
ANR	4995307	MemberAccess	priv_history [ ph_head ] . timestamp		4995281	0					
ANR	4995308	ArrayIndexing	priv_history [ ph_head ]		4995281	0					
ANR	4995309	Identifier	priv_history		4995281	0					
ANR	4995310	Identifier	ph_head		4995281	1					
ANR	4995311	Identifier	timestamp		4995281	1					
ANR	4995312	CallExpression	time ( NULL )		4995281	1					
ANR	4995313	Callee	time		4995281	0					
ANR	4995314	Identifier	time		4995281	0					
ANR	4995315	ArgumentList	NULL		4995281	1					
ANR	4995316	Argument	NULL		4995281	0					
ANR	4995317	Identifier	NULL		4995281	0					
ANR	4995318	ExpressionStatement	priv_history [ ph_head ] . priv = new_priv	95:1:2623:2660	4995281	2	True				
ANR	4995319	AssignmentExpression	priv_history [ ph_head ] . priv = new_priv		4995281	0		=			
ANR	4995320	MemberAccess	priv_history [ ph_head ] . priv		4995281	0					
ANR	4995321	ArrayIndexing	priv_history [ ph_head ]		4995281	0					
ANR	4995322	Identifier	priv_history		4995281	0					
ANR	4995323	Identifier	ph_head		4995281	1					
ANR	4995324	Identifier	priv		4995281	1					
ANR	4995325	Identifier	new_priv		4995281	1					
ANR	4995326	ExpressionStatement	priv_history [ ph_head ] . file = file	96:1:2663:2696	4995281	3	True				
ANR	4995327	AssignmentExpression	priv_history [ ph_head ] . file = file		4995281	0		=			
ANR	4995328	MemberAccess	priv_history [ ph_head ] . file		4995281	0					
ANR	4995329	ArrayIndexing	priv_history [ ph_head ]		4995281	0					
ANR	4995330	Identifier	priv_history		4995281	0					
ANR	4995331	Identifier	ph_head		4995281	1					
ANR	4995332	Identifier	file		4995281	1					
ANR	4995333	Identifier	file		4995281	1					
ANR	4995334	ExpressionStatement	priv_history [ ph_head ] . line = line	97:1:2737:2770	4995281	4	True				
ANR	4995335	AssignmentExpression	priv_history [ ph_head ] . line = line		4995281	0		=			
ANR	4995336	MemberAccess	priv_history [ ph_head ] . line		4995281	0					
ANR	4995337	ArrayIndexing	priv_history [ ph_head ]		4995281	0					
ANR	4995338	Identifier	priv_history		4995281	0					
ANR	4995339	Identifier	ph_head		4995281	1					
ANR	4995340	Identifier	line		4995281	1					
ANR	4995341	Identifier	line		4995281	1					
ANR	4995342	ExpressionStatement	ph_head = ( ph_head + 1 ) % HISTORY_LENGTH	98:1:2773:2813	4995281	5	True				
ANR	4995343	AssignmentExpression	ph_head = ( ph_head + 1 ) % HISTORY_LENGTH		4995281	0		=			
ANR	4995344	Identifier	ph_head		4995281	0					
ANR	4995345	MultiplicativeExpression	( ph_head + 1 ) % HISTORY_LENGTH		4995281	1		%			
ANR	4995346	AdditiveExpression	ph_head + 1		4995281	0		+			
ANR	4995347	Identifier	ph_head		4995281	0					
ANR	4995348	PrimaryExpression	1		4995281	1					
ANR	4995349	Identifier	HISTORY_LENGTH		4995281	1					
ANR	4995350	IfStatement	if ( ph_count < HISTORY_LENGTH )		4995281	6					
ANR	4995351	Condition	ph_count < HISTORY_LENGTH	99:5:2820:2844	4995281	0	True				
ANR	4995352	RelationalExpression	ph_count < HISTORY_LENGTH		4995281	0		<			
ANR	4995353	Identifier	ph_count		4995281	0					
ANR	4995354	Identifier	HISTORY_LENGTH		4995281	1					
ANR	4995355	ExpressionStatement	ph_count ++	99:32:2847:2857	4995281	1	True				
ANR	4995356	PostIncDecOperationExpression	ph_count ++		4995281	0					
ANR	4995357	Identifier	ph_count		4995281	0					
ANR	4995358	IncDec	++		4995281	1					
ANR	4995359	ReturnType	void		4995281	1					
ANR	4995360	Identifier	log_priv		4995281	2					
ANR	4995361	ParameterList	"priv_state prev , priv_state new_priv , const char * file , int line"		4995281	3					
ANR	4995362	Parameter	priv_state prev	90:9:2400:2414	4995281	0	True				
ANR	4995363	ParameterType	priv_state		4995281	0					
ANR	4995364	Identifier	prev		4995281	1					
ANR	4995365	Parameter	priv_state new_priv	90:26:2417:2435	4995281	1	True				
ANR	4995366	ParameterType	priv_state		4995281	0					
ANR	4995367	Identifier	new_priv		4995281	1					
ANR	4995368	Parameter	const char * file	90:47:2438:2453	4995281	2	True				
ANR	4995369	ParameterType	const char *		4995281	0					
ANR	4995370	Identifier	file		4995281	1					
ANR	4995371	Parameter	int line	90:65:2456:2463	4995281	3	True				
ANR	4995372	ParameterType	int		4995281	0					
ANR	4995373	Identifier	line		4995281	1					
ANR	4995374	CFGEntryNode	ENTRY		4995281		True				
ANR	4995375	CFGExitNode	EXIT		4995281		True				
ANR	4995376	Symbol	HISTORY_LENGTH		4995281						
ANR	4995377	Symbol	D_PRIV		4995281						
ANR	4995378	Symbol	NULL		4995281						
ANR	4995379	Symbol	priv_state_name		4995281						
ANR	4995380	Symbol	priv_history [ ph_head ] . file		4995281						
ANR	4995381	Symbol	line		4995281						
ANR	4995382	Symbol	prev		4995281						
ANR	4995383	Symbol	ph_count		4995281						
ANR	4995384	Symbol	* prev		4995281						
ANR	4995385	Symbol	priv_history [ ph_head ] . priv		4995281						
ANR	4995386	Symbol	* ph_head		4995281						
ANR	4995387	Symbol	priv_history		4995281						
ANR	4995388	Symbol	priv_history [ ph_head ] . timestamp		4995281						
ANR	4995389	Symbol	priv_history [ ph_head ] . line		4995281						
ANR	4995390	Symbol	file		4995281						
ANR	4995391	Symbol	* priv_state_name		4995281						
ANR	4995392	Symbol	* new_priv		4995281						
ANR	4995393	Symbol	* priv_history		4995281						
ANR	4995394	Symbol	new_priv		4995281						
ANR	4995395	Symbol	ph_head		4995281						
ANR	4995396	Symbol	time		4995281						
ANR	4995397	Function	display_priv_log	103:0:2863:3380							
ANR	4995398	FunctionDef	display_priv_log ()		4995397	0					
ANR	4995399	CompoundStatement		105:0:2891:3380	4995397	0					
ANR	4995400	IdentifierDeclStatement	"int i , idx ;"	106:1:2894:2904	4995397	0	True				
ANR	4995401	IdentifierDecl	i		4995397	0					
ANR	4995402	IdentifierDeclType	int		4995397	0					
ANR	4995403	Identifier	i		4995397	1					
ANR	4995404	IdentifierDecl	idx		4995397	1					
ANR	4995405	IdentifierDeclType	int		4995397	0					
ANR	4995406	Identifier	idx		4995397	1					
ANR	4995407	IfStatement	if ( can_switch_ids ( ) )		4995397	1					
ANR	4995408	Condition	can_switch_ids ( )	107:5:2911:2926	4995397	0	True				
ANR	4995409	CallExpression	can_switch_ids ( )		4995397	0					
ANR	4995410	Callee	can_switch_ids		4995397	0					
ANR	4995411	Identifier	can_switch_ids		4995397	0					
ANR	4995412	ArgumentList			4995397	1					
ANR	4995413	CompoundStatement		3:23:37:37	4995397	1					
ANR	4995414	ExpressionStatement	"dprintf ( D_ALWAYS , ""running as root; privilege switching in effect\\n"" )"	108:2:2933:3002	4995397	0	True				
ANR	4995415	CallExpression	"dprintf ( D_ALWAYS , ""running as root; privilege switching in effect\\n"" )"		4995397	0					
ANR	4995416	Callee	dprintf		4995397	0					
ANR	4995417	Identifier	dprintf		4995397	0					
ANR	4995418	ArgumentList	D_ALWAYS		4995397	1					
ANR	4995419	Argument	D_ALWAYS		4995397	0					
ANR	4995420	Identifier	D_ALWAYS		4995397	0					
ANR	4995421	Argument	"""running as root; privilege switching in effect\\n"""		4995397	1					
ANR	4995422	PrimaryExpression	"""running as root; privilege switching in effect\\n"""		4995397	0					
ANR	4995423	ElseStatement	else		4995397	0					
ANR	4995424	CompoundStatement		5:8:120:120	4995397	0					
ANR	4995425	ExpressionStatement	"dprintf ( D_ALWAYS , ""running as non-root; no privilege switching\\n"" )"	110:2:3016:3082	4995397	0	True				
ANR	4995426	CallExpression	"dprintf ( D_ALWAYS , ""running as non-root; no privilege switching\\n"" )"		4995397	0					
ANR	4995427	Callee	dprintf		4995397	0					
ANR	4995428	Identifier	dprintf		4995397	0					
ANR	4995429	ArgumentList	D_ALWAYS		4995397	1					
ANR	4995430	Argument	D_ALWAYS		4995397	0					
ANR	4995431	Identifier	D_ALWAYS		4995397	0					
ANR	4995432	Argument	"""running as non-root; no privilege switching\\n"""		4995397	1					
ANR	4995433	PrimaryExpression	"""running as non-root; no privilege switching\\n"""		4995397	0					
ANR	4995434	ForStatement	for ( i = 0 ; i < ph_count && i < HISTORY_LENGTH ; i ++ )		4995397	2					
ANR	4995435	ForInit	i = 0 ;	112:6:3095:3098	4995397	0	True				
ANR	4995436	AssignmentExpression	i = 0		4995397	0		=			
ANR	4995437	Identifier	i		4995397	0					
ANR	4995438	PrimaryExpression	0		4995397	1					
ANR	4995439	Condition	i < ph_count && i < HISTORY_LENGTH	112:11:3100:3133	4995397	1	True				
ANR	4995440	AndExpression	i < ph_count && i < HISTORY_LENGTH		4995397	0		&&			
ANR	4995441	RelationalExpression	i < ph_count		4995397	0		<			
ANR	4995442	Identifier	i		4995397	0					
ANR	4995443	Identifier	ph_count		4995397	1					
ANR	4995444	RelationalExpression	i < HISTORY_LENGTH		4995397	1		<			
ANR	4995445	Identifier	i		4995397	0					
ANR	4995446	Identifier	HISTORY_LENGTH		4995397	1					
ANR	4995447	PostIncDecOperationExpression	i ++	112:47:3136:3138	4995397	2	True				
ANR	4995448	Identifier	i		4995397	0					
ANR	4995449	IncDec	++		4995397	1					
ANR	4995450	CompoundStatement		8:52:249:249	4995397	3					
ANR	4995451	ExpressionStatement	idx = ( ph_head - i - 1 + HISTORY_LENGTH ) % HISTORY_LENGTH	113:2:3145:3194	4995397	0	True				
ANR	4995452	AssignmentExpression	idx = ( ph_head - i - 1 + HISTORY_LENGTH ) % HISTORY_LENGTH		4995397	0		=			
ANR	4995453	Identifier	idx		4995397	0					
ANR	4995454	MultiplicativeExpression	( ph_head - i - 1 + HISTORY_LENGTH ) % HISTORY_LENGTH		4995397	1		%			
ANR	4995455	AdditiveExpression	ph_head - i - 1 + HISTORY_LENGTH		4995397	0		-			
ANR	4995456	Identifier	ph_head		4995397	0					
ANR	4995457	AdditiveExpression	i - 1 + HISTORY_LENGTH		4995397	1		-			
ANR	4995458	Identifier	i		4995397	0					
ANR	4995459	AdditiveExpression	1 + HISTORY_LENGTH		4995397	1		+			
ANR	4995460	PrimaryExpression	1		4995397	0					
ANR	4995461	Identifier	HISTORY_LENGTH		4995397	1					
ANR	4995462	Identifier	HISTORY_LENGTH		4995397	1					
ANR	4995463	ExpressionStatement	"dprintf ( D_ALWAYS , ""--> %s at %s:%d %s"" , priv_state_name [ priv_history [ idx ] . priv ] , priv_history [ idx ] . file , priv_history [ idx ] . line , ctime ( & priv_history [ idx ] . timestamp ) )"	114:2:3198:3375	4995397	1	True				
ANR	4995464	CallExpression	"dprintf ( D_ALWAYS , ""--> %s at %s:%d %s"" , priv_state_name [ priv_history [ idx ] . priv ] , priv_history [ idx ] . file , priv_history [ idx ] . line , ctime ( & priv_history [ idx ] . timestamp ) )"		4995397	0					
ANR	4995465	Callee	dprintf		4995397	0					
ANR	4995466	Identifier	dprintf		4995397	0					
ANR	4995467	ArgumentList	D_ALWAYS		4995397	1					
ANR	4995468	Argument	D_ALWAYS		4995397	0					
ANR	4995469	Identifier	D_ALWAYS		4995397	0					
ANR	4995470	Argument	"""--> %s at %s:%d %s"""		4995397	1					
ANR	4995471	PrimaryExpression	"""--> %s at %s:%d %s"""		4995397	0					
ANR	4995472	Argument	priv_state_name [ priv_history [ idx ] . priv ]		4995397	2					
ANR	4995473	ArrayIndexing	priv_state_name [ priv_history [ idx ] . priv ]		4995397	0					
ANR	4995474	Identifier	priv_state_name		4995397	0					
ANR	4995475	MemberAccess	priv_history [ idx ] . priv		4995397	1					
ANR	4995476	ArrayIndexing	priv_history [ idx ]		4995397	0					
ANR	4995477	Identifier	priv_history		4995397	0					
ANR	4995478	Identifier	idx		4995397	1					
ANR	4995479	Identifier	priv		4995397	1					
ANR	4995480	Argument	priv_history [ idx ] . file		4995397	3					
ANR	4995481	MemberAccess	priv_history [ idx ] . file		4995397	0					
ANR	4995482	ArrayIndexing	priv_history [ idx ]		4995397	0					
ANR	4995483	Identifier	priv_history		4995397	0					
ANR	4995484	Identifier	idx		4995397	1					
ANR	4995485	Identifier	file		4995397	1					
ANR	4995486	Argument	priv_history [ idx ] . line		4995397	4					
ANR	4995487	MemberAccess	priv_history [ idx ] . line		4995397	0					
ANR	4995488	ArrayIndexing	priv_history [ idx ]		4995397	0					
ANR	4995489	Identifier	priv_history		4995397	0					
ANR	4995490	Identifier	idx		4995397	1					
ANR	4995491	Identifier	line		4995397	1					
ANR	4995492	Argument	ctime ( & priv_history [ idx ] . timestamp )		4995397	5					
ANR	4995493	CallExpression	ctime ( & priv_history [ idx ] . timestamp )		4995397	0					
ANR	4995494	Callee	ctime		4995397	0					
ANR	4995495	Identifier	ctime		4995397	0					
ANR	4995496	ArgumentList	& priv_history [ idx ] . timestamp		4995397	1					
ANR	4995497	Argument	& priv_history [ idx ] . timestamp		4995397	0					
ANR	4995498	UnaryOperationExpression	& priv_history [ idx ] . timestamp		4995397	0					
ANR	4995499	UnaryOperator	&		4995397	0					
ANR	4995500	MemberAccess	priv_history [ idx ] . timestamp		4995397	1					
ANR	4995501	ArrayIndexing	priv_history [ idx ]		4995397	0					
ANR	4995502	Identifier	priv_history		4995397	0					
ANR	4995503	Identifier	idx		4995397	1					
ANR	4995504	Identifier	timestamp		4995397	1					
ANR	4995505	ReturnType	void		4995397	1					
ANR	4995506	Identifier	display_priv_log		4995397	2					
ANR	4995507	ParameterList			4995397	3					
ANR	4995508	CFGEntryNode	ENTRY		4995397		True				
ANR	4995509	CFGExitNode	EXIT		4995397		True				
ANR	4995510	Symbol	HISTORY_LENGTH		4995397						
ANR	4995511	Symbol	priv_history [ idx ] . file		4995397						
ANR	4995512	Symbol	priv_state_name		4995397						
ANR	4995513	Symbol	* priv_history [ idx ] . priv		4995397						
ANR	4995514	Symbol	ph_count		4995397						
ANR	4995515	Symbol	D_ALWAYS		4995397						
ANR	4995516	Symbol	i		4995397						
ANR	4995517	Symbol	& priv_history [ idx ] . timestamp		4995397						
ANR	4995518	Symbol	priv_history		4995397						
ANR	4995519	Symbol	* * idx		4995397						
ANR	4995520	Symbol	can_switch_ids		4995397						
ANR	4995521	Symbol	priv_history [ idx ] . priv		4995397						
ANR	4995522	Symbol	* priv_state_name		4995397						
ANR	4995523	Symbol	priv_history [ idx ] . line		4995397						
ANR	4995524	Symbol	* priv_history		4995397						
ANR	4995525	Symbol	* idx		4995397						
ANR	4995526	Symbol	ctime		4995397						
ANR	4995527	Symbol	* * priv_history		4995397						
ANR	4995528	Symbol	ph_head		4995397						
ANR	4995529	Symbol	idx		4995397						
ANR	4995530	Function	get_priv	122:0:3384:3434							
ANR	4995531	FunctionDef	get_priv ()		4995530	0					
ANR	4995532	CompoundStatement		124:0:3406:3434	4995530	0					
ANR	4995533	ReturnStatement	return CurrentPrivState ;	125:1:3409:3432	4995530	0	True				
ANR	4995534	Identifier	CurrentPrivState		4995530	0					
ANR	4995535	ReturnType	priv_state		4995530	1					
ANR	4995536	Identifier	get_priv		4995530	2					
ANR	4995537	ParameterList			4995530	3					
ANR	4995538	CFGEntryNode	ENTRY		4995530		True				
ANR	4995539	CFGExitNode	EXIT		4995530		True				
ANR	4995540	Symbol	CurrentPrivState		4995530						
ANR	4995541	Function	can_switch_ids	129:0:3438:3677							
ANR	4995542	FunctionDef	can_switch_ids ()		4995541	0					
ANR	4995543	CompoundStatement		131:0:3465:3677	4995541	0					
ANR	4995544	Statement	static	132:1:3468:3473	4995541	0	True				
ANR	4995545	IdentifierDeclStatement	bool HasCheckedIfRoot = false ;	132:8:3475:3504	4995541	1	True				
ANR	4995546	IdentifierDecl	HasCheckedIfRoot = false		4995541	0					
ANR	4995547	IdentifierDeclType	bool		4995541	0					
ANR	4995548	Identifier	HasCheckedIfRoot		4995541	1					
ANR	4995549	AssignmentExpression	HasCheckedIfRoot = false		4995541	2		=			
ANR	4995550	Identifier	false		4995541	0					
ANR	4995551	Identifier	false		4995541	1					
ANR	4995552	IfStatement	if ( ! HasCheckedIfRoot )		4995541	2					
ANR	4995553	Condition	! HasCheckedIfRoot	135:5:3560:3576	4995541	0	True				
ANR	4995554	UnaryOperationExpression	! HasCheckedIfRoot		4995541	0					
ANR	4995555	UnaryOperator	!		4995541	0					
ANR	4995556	Identifier	HasCheckedIfRoot		4995541	1					
ANR	4995557	CompoundStatement		5:24:113:113	4995541	1					
ANR	4995558	IfStatement	if ( ! is_root ( ) )		4995541	0					
ANR	4995559	Condition	! is_root ( )	136:6:3587:3596	4995541	0	True				
ANR	4995560	UnaryOperationExpression	! is_root ( )		4995541	0					
ANR	4995561	UnaryOperator	!		4995541	0					
ANR	4995562	CallExpression	is_root ( )		4995541	1					
ANR	4995563	Callee	is_root		4995541	0					
ANR	4995564	Identifier	is_root		4995541	0					
ANR	4995565	ArgumentList			4995541	1					
ANR	4995566	CompoundStatement		6:18:133:133	4995541	1					
ANR	4995567	ExpressionStatement	SwitchIds = FALSE	137:3:3604:3621	4995541	0	True				
ANR	4995568	AssignmentExpression	SwitchIds = FALSE		4995541	0		=			
ANR	4995569	Identifier	SwitchIds		4995541	0					
ANR	4995570	Identifier	FALSE		4995541	1					
ANR	4995571	ExpressionStatement	HasCheckedIfRoot = true	139:2:3629:3652	4995541	1	True				
ANR	4995572	AssignmentExpression	HasCheckedIfRoot = true		4995541	0		=			
ANR	4995573	Identifier	HasCheckedIfRoot		4995541	0					
ANR	4995574	Identifier	true		4995541	1					
ANR	4995575	ReturnStatement	return SwitchIds ;	142:1:3659:3675	4995541	3	True				
ANR	4995576	Identifier	SwitchIds		4995541	0					
ANR	4995577	ReturnType	int		4995541	1					
ANR	4995578	Identifier	can_switch_ids		4995541	2					
ANR	4995579	ParameterList			4995541	3					
ANR	4995580	CFGEntryNode	ENTRY		4995541		True				
ANR	4995581	CFGExitNode	EXIT		4995541		True				
ANR	4995582	Symbol	HasCheckedIfRoot		4995541						
ANR	4995583	Symbol	false		4995541						
ANR	4995584	Symbol	true		4995541						
ANR	4995585	Symbol	FALSE		4995541						
ANR	4995586	Symbol	SwitchIds		4995541						
ANR	4995587	Symbol	is_root		4995541						
ANR	4995588	Function	init_condor_ids	157:0:3848:3872							
ANR	4995589	FunctionDef	init_condor_ids ()		4995588	0					
ANR	4995590	CompoundStatement		157:23:3871:3872	4995588	0					
ANR	4995591	ReturnType	void		4995588	1					
ANR	4995592	Identifier	init_condor_ids		4995588	2					
ANR	4995593	ParameterList			4995588	3					
ANR	4995594	CFGEntryNode	ENTRY		4995588		True				
ANR	4995595	CFGExitNode	EXIT		4995588		True				
ANR	4995596	Function	set_user_ids	158:0:3874:3929							
ANR	4995597	FunctionDef	"set_user_ids (uid_t uid , gid_t gid)"		4995596	0					
ANR	4995598	CompoundStatement		158:39:3913:3929	4995596	0					
ANR	4995599	ReturnStatement	return FALSE ;	158:1:3915:3927	4995596	0	True				
ANR	4995600	Identifier	FALSE		4995596	0					
ANR	4995601	ReturnType	int		4995596	1					
ANR	4995602	Identifier	set_user_ids		4995596	2					
ANR	4995603	ParameterList	"uid_t uid , gid_t gid"		4995596	3					
ANR	4995604	Parameter	uid_t uid	158:17:3891:3899	4995596	0	True				
ANR	4995605	ParameterType	uid_t		4995596	0					
ANR	4995606	Identifier	uid		4995596	1					
ANR	4995607	Parameter	gid_t gid	158:28:3902:3910	4995596	1	True				
ANR	4995608	ParameterType	gid_t		4995596	0					
ANR	4995609	Identifier	gid		4995596	1					
ANR	4995610	CFGEntryNode	ENTRY		4995596		True				
ANR	4995611	CFGExitNode	EXIT		4995596		True				
ANR	4995612	Symbol	uid		4995596						
ANR	4995613	Symbol	gid		4995596						
ANR	4995614	Symbol	FALSE		4995596						
ANR	4995615	Function	get_my_uid	159:0:3931:3967							
ANR	4995616	FunctionDef	get_my_uid ()		4995615	0					
ANR	4995617	CompoundStatement		159:19:3950:3967	4995615	0					
ANR	4995618	ReturnStatement	return 999999 ;	159:1:3952:3965	4995615	0	True				
ANR	4995619	PrimaryExpression	999999		4995615	0					
ANR	4995620	ReturnType	uid_t		4995615	1					
ANR	4995621	Identifier	get_my_uid		4995615	2					
ANR	4995622	ParameterList			4995615	3					
ANR	4995623	CFGEntryNode	ENTRY		4995615		True				
ANR	4995624	CFGExitNode	EXIT		4995615		True				
ANR	4995625	Function	get_my_gid	160:0:3969:4005							
ANR	4995626	FunctionDef	get_my_gid ()		4995625	0					
ANR	4995627	CompoundStatement		160:19:3988:4005	4995625	0					
ANR	4995628	ReturnStatement	return 999999 ;	160:1:3990:4003	4995625	0	True				
ANR	4995629	PrimaryExpression	999999		4995625	0					
ANR	4995630	ReturnType	gid_t		4995625	1					
ANR	4995631	Identifier	get_my_gid		4995625	2					
ANR	4995632	ParameterList			4995625	3					
ANR	4995633	CFGEntryNode	ENTRY		4995625		True				
ANR	4995634	CFGExitNode	EXIT		4995625		True				
ANR	4995635	Function	set_file_owner_ids	161:0:4007:4070							
ANR	4995636	FunctionDef	"set_file_owner_ids (uid_t uid , gid_t gid)"		4995635	0					
ANR	4995637	CompoundStatement		161:47:4054:4070	4995635	0					
ANR	4995638	ReturnStatement	return FALSE ;	161:1:4056:4068	4995635	0	True				
ANR	4995639	Identifier	FALSE		4995635	0					
ANR	4995640	ReturnType	int		4995635	1					
ANR	4995641	Identifier	set_file_owner_ids		4995635	2					
ANR	4995642	ParameterList	"uid_t uid , gid_t gid"		4995635	3					
ANR	4995643	Parameter	uid_t uid	161:24:4031:4039	4995635	0	True				
ANR	4995644	ParameterType	uid_t		4995635	0					
ANR	4995645	Identifier	uid		4995635	1					
ANR	4995646	Parameter	gid_t gid	161:35:4042:4050	4995635	1	True				
ANR	4995647	ParameterType	gid_t		4995635	0					
ANR	4995648	Identifier	gid		4995635	1					
ANR	4995649	CFGEntryNode	ENTRY		4995635		True				
ANR	4995650	CFGExitNode	EXIT		4995635		True				
ANR	4995651	Symbol	uid		4995635						
ANR	4995652	Symbol	gid		4995635						
ANR	4995653	Symbol	FALSE		4995635						
ANR	4995654	Function	uninit_file_owner_ids	162:0:4072:4102							
ANR	4995655	FunctionDef	uninit_file_owner_ids ()		4995654	0					
ANR	4995656	CompoundStatement		162:29:4101:4102	4995654	0					
ANR	4995657	ReturnType	void		4995654	1					
ANR	4995658	Identifier	uninit_file_owner_ids		4995654	2					
ANR	4995659	ParameterList			4995654	3					
ANR	4995660	CFGEntryNode	ENTRY		4995654		True				
ANR	4995661	CFGExitNode	EXIT		4995654		True				
ANR	4995662	Function	getuid	166:0:4129:4167							
ANR	4995663	FunctionDef	getuid ()		4995662	0					
ANR	4995664	CompoundStatement		166:15:4144:4167	4995662	0					
ANR	4995665	ReturnStatement	return get_my_uid ( ) ;	166:1:4146:4165	4995662	0	True				
ANR	4995666	CallExpression	get_my_uid ( )		4995662	0					
ANR	4995667	Callee	get_my_uid		4995662	0					
ANR	4995668	Identifier	get_my_uid		4995662	0					
ANR	4995669	ArgumentList			4995662	1					
ANR	4995670	ReturnType	uid_t		4995662	1					
ANR	4995671	Identifier	getuid		4995662	2					
ANR	4995672	ParameterList			4995662	3					
ANR	4995673	CFGEntryNode	ENTRY		4995662		True				
ANR	4995674	CFGExitNode	EXIT		4995662		True				
ANR	4995675	Symbol	get_my_uid		4995662						
ANR	4995676	DeclStmt									
ANR	4995677	Decl							extern dynuser	extern dynuser *	myDynuser
ANR	4995678	DeclStmt									
ANR	4995679	Decl							HANDLE	HANDLE	CurrUserHandle
ANR	4995680	DeclStmt									
ANR	4995681	Decl							char	char *	UserLoginName
ANR	4995682	DeclStmt									
ANR	4995683	Decl							char	char *	UserDomainName
ANR	4995684	DeclStmt									
ANR	4995685	Decl							token_cache	token_cache	cached_tokens
ANR	4995686	Function	uninit_user_ids	177:0:4505:4883							
ANR	4995687	FunctionDef	uninit_user_ids ()		4995686	0					
ANR	4995688	CompoundStatement		178:0:4529:4883	4995686	0					
ANR	4995689	IfStatement	if ( UserLoginName )		4995686	0					
ANR	4995690	Condition	UserLoginName	183:6:4690:4702	4995686	0	True				
ANR	4995691	Identifier	UserLoginName		4995686	0					
ANR	4995692	CompoundStatement		6:22:176:176	4995686	1					
ANR	4995693	ExpressionStatement	free ( UserLoginName )	184:5:4713:4732	4995686	0	True				
ANR	4995694	CallExpression	free ( UserLoginName )		4995686	0					
ANR	4995695	Callee	free		4995686	0					
ANR	4995696	Identifier	free		4995686	0					
ANR	4995697	ArgumentList	UserLoginName		4995686	1					
ANR	4995698	Argument	UserLoginName		4995686	0					
ANR	4995699	Identifier	UserLoginName		4995686	0					
ANR	4995700	IfStatement	if ( UserDomainName )		4995686	1					
ANR	4995701	Condition	UserDomainName	186:6:4743:4756	4995686	0	True				
ANR	4995702	Identifier	UserDomainName		4995686	0					
ANR	4995703	CompoundStatement		9:23:230:230	4995686	1					
ANR	4995704	ExpressionStatement	free ( UserDomainName )	187:2:4764:4784	4995686	0	True				
ANR	4995705	CallExpression	free ( UserDomainName )		4995686	0					
ANR	4995706	Callee	free		4995686	0					
ANR	4995707	Identifier	free		4995686	0					
ANR	4995708	ArgumentList	UserDomainName		4995686	1					
ANR	4995709	Argument	UserDomainName		4995686	0					
ANR	4995710	Identifier	UserDomainName		4995686	0					
ANR	4995711	ExpressionStatement	UserLoginName = NULL	189:1:4790:4810	4995686	2	True				
ANR	4995712	AssignmentExpression	UserLoginName = NULL		4995686	0		=			
ANR	4995713	Identifier	UserLoginName		4995686	0					
ANR	4995714	Identifier	NULL		4995686	1					
ANR	4995715	ExpressionStatement	UserDomainName = NULL	190:1:4813:4833	4995686	3	True				
ANR	4995716	AssignmentExpression	UserDomainName = NULL		4995686	0		=			
ANR	4995717	Identifier	UserDomainName		4995686	0					
ANR	4995718	Identifier	NULL		4995686	1					
ANR	4995719	ExpressionStatement	CurrUserHandle = NULL	191:1:4836:4857	4995686	4	True				
ANR	4995720	AssignmentExpression	CurrUserHandle = NULL		4995686	0		=			
ANR	4995721	Identifier	CurrUserHandle		4995686	0					
ANR	4995722	Identifier	NULL		4995686	1					
ANR	4995723	ExpressionStatement	UserIdsInited = false	192:1:4860:4881	4995686	5	True				
ANR	4995724	AssignmentExpression	UserIdsInited = false		4995686	0		=			
ANR	4995725	Identifier	UserIdsInited		4995686	0					
ANR	4995726	Identifier	false		4995686	1					
ANR	4995727	ReturnType	void		4995686	1					
ANR	4995728	Identifier	uninit_user_ids		4995686	2					
ANR	4995729	ParameterList			4995686	3					
ANR	4995730	CFGEntryNode	ENTRY		4995686		True				
ANR	4995731	CFGExitNode	EXIT		4995686		True				
ANR	4995732	Symbol	CurrUserHandle		4995686						
ANR	4995733	Symbol	UserDomainName		4995686						
ANR	4995734	Symbol	NULL		4995686						
ANR	4995735	Symbol	UserIdsInited		4995686						
ANR	4995736	Symbol	false		4995686						
ANR	4995737	Symbol	UserLoginName		4995686						
ANR	4995738	Function	priv_state_get_handle	195:0:4886:4943							
ANR	4995739	FunctionDef	priv_state_get_handle ()		4995738	0					
ANR	4995740	CompoundStatement		196:0:4917:4943	4995738	0					
ANR	4995741	ReturnStatement	return CurrUserHandle ;	197:1:4920:4941	4995738	0	True				
ANR	4995742	Identifier	CurrUserHandle		4995738	0					
ANR	4995743	ReturnType	HANDLE		4995738	1					
ANR	4995744	Identifier	priv_state_get_handle		4995738	2					
ANR	4995745	ParameterList			4995738	3					
ANR	4995746	CFGEntryNode	ENTRY		4995738		True				
ANR	4995747	CFGExitNode	EXIT		4995738		True				
ANR	4995748	Symbol	CurrUserHandle		4995738						
ANR	4995749	Function	get_user_loginname	200:0:4946:5007							
ANR	4995750	FunctionDef	get_user_loginname ()		4995749	0					
ANR	4995751	CompoundStatement		200:33:4979:5007	4995749	0					
ANR	4995752	ReturnStatement	return UserLoginName ;	201:4:4985:5005	4995749	0	True				
ANR	4995753	Identifier	UserLoginName		4995749	0					
ANR	4995754	ReturnType	const char *		4995749	1					
ANR	4995755	Identifier	get_user_loginname		4995749	2					
ANR	4995756	ParameterList			4995749	3					
ANR	4995757	CFGEntryNode	ENTRY		4995749		True				
ANR	4995758	CFGExitNode	EXIT		4995749		True				
ANR	4995759	Symbol	UserLoginName		4995749						
ANR	4995760	Function	get_user_domainname	204:0:5010:5073							
ANR	4995761	FunctionDef	get_user_domainname ()		4995760	0					
ANR	4995762	CompoundStatement		204:34:5044:5073	4995760	0					
ANR	4995763	ReturnStatement	return UserDomainName ;	205:4:5050:5071	4995760	0	True				
ANR	4995764	Identifier	UserDomainName		4995760	0					
ANR	4995765	ReturnType	const char *		4995760	1					
ANR	4995766	Identifier	get_user_domainname		4995760	2					
ANR	4995767	ParameterList			4995760	3					
ANR	4995768	CFGEntryNode	ENTRY		4995760		True				
ANR	4995769	CFGExitNode	EXIT		4995760		True				
ANR	4995770	Symbol	UserDomainName		4995760						
ANR	4995771	DeclStmt									
ANR	4995772	Decl							extern bool	"extern bool ( const char * credd_host , const char username [ ] , const char domain [ ] , char * pw , int cb )"	get_password_from_credd
ANR	4995773	DeclStmt									
ANR	4995774	Decl							bool	"bool ( const char username [ ] , const char domain [ ] , const char * pw )"	cache_credd_locally
ANR	4995775	Function	init_user_ids	223:0:5389:14212							
ANR	4995776	FunctionDef	"init_user_ids (const char username [ ] , const char domain [ ])"		4995775	0					
ANR	4995777	CompoundStatement		225:0:5452:14212	4995775	0					
ANR	4995778	IdentifierDeclStatement	int retval = 0 ;	226:1:5455:5469	4995775	0	True				
ANR	4995779	IdentifierDecl	retval = 0		4995775	0					
ANR	4995780	IdentifierDeclType	int		4995775	0					
ANR	4995781	Identifier	retval		4995775	1					
ANR	4995782	AssignmentExpression	retval = 0		4995775	2		=			
ANR	4995783	Identifier	retval		4995775	0					
ANR	4995784	PrimaryExpression	0		4995775	1					
ANR	4995785	IfStatement	if ( ! username || ! domain )		4995775	1					
ANR	4995786	Condition	! username || ! domain	228:5:5477:5496	4995775	0	True				
ANR	4995787	OrExpression	! username || ! domain		4995775	0		||			
ANR	4995788	UnaryOperationExpression	! username		4995775	0					
ANR	4995789	UnaryOperator	!		4995775	0					
ANR	4995790	Identifier	username		4995775	1					
ANR	4995791	UnaryOperationExpression	! domain		4995775	1					
ANR	4995792	UnaryOperator	!		4995775	0					
ANR	4995793	Identifier	domain		4995775	1					
ANR	4995794	CompoundStatement		4:27:46:46	4995775	1					
ANR	4995795	Statement	dprintf	229:2:5503:5509	4995775	0	True				
ANR	4995796	Statement	(	229:9:5510:5510	4995775	1	True				
ANR	4995797	Statement	D_ALWAYS	229:10:5511:5518	4995775	2	True				
ANR	4995798	Statement	","	229:18:5519:5519	4995775	3	True				
ANR	4995799	Statement	"""WARNING: init_user_ids() called with"""	229:20:5521:5558	4995775	4	True				
ANR	4995800	Statement	""" NULL arguments!\\n"""	230:6:5566:5585	4995775	5	True				
ANR	4995801	Statement	)	230:26:5586:5586	4995775	6	True				
ANR	4995802	ExpressionStatement		230:27:5587:5587	4995775	7	True				
ANR	4995803	ReturnStatement	return 0 ;	231:5:5594:5602	4995775	8	True				
ANR	4995804	PrimaryExpression	0		4995775	0					
ANR	4995805	Statement	dprintf	247:1:6164:6170	4995775	2	True				
ANR	4995806	Statement	(	247:8:6171:6171	4995775	3	True				
ANR	4995807	Statement	D_FULLDEBUG	247:9:6172:6182	4995775	4	True				
ANR	4995808	Statement	","	247:20:6183:6183	4995775	5	True				
ANR	4995809	Statement	"""init_user_ids: want user '%s@%s', """	247:22:6185:6220	4995775	6	True				
ANR	4995810	Statement	"""current is '%s@%s'\\n"""	248:3:6225:6246	4995775	7	True				
ANR	4995811	Statement	","	248:25:6247:6247	4995775	8	True				
ANR	4995812	Statement	username	249:2:6251:6258	4995775	9	True				
ANR	4995813	Statement	","	249:10:6259:6259	4995775	10	True				
ANR	4995814	Statement	domain	249:12:6261:6266	4995775	11	True				
ANR	4995815	Statement	","	249:18:6267:6267	4995775	12	True				
ANR	4995816	Statement	UserLoginName	249:20:6269:6281	4995775	13	True				
ANR	4995817	Statement	","	249:33:6282:6282	4995775	14	True				
ANR	4995818	Statement	UserDomainName	249:35:6284:6297	4995775	15	True				
ANR	4995819	Statement	)	249:49:6298:6298	4995775	16	True				
ANR	4995820	ExpressionStatement		249:50:6299:6299	4995775	17	True				
ANR	4995821	IfStatement	"if ( CurrUserHandle = cached_tokens . getToken ( username , domain ) )"		4995775	18					
ANR	4995822	Condition	"CurrUserHandle = cached_tokens . getToken ( username , domain )"	251:6:6309:6365	4995775	0	True				
ANR	4995823	AssignmentExpression	"CurrUserHandle = cached_tokens . getToken ( username , domain )"		4995775	0		=			
ANR	4995824	Identifier	CurrUserHandle		4995775	0					
ANR	4995825	CallExpression	"cached_tokens . getToken ( username , domain )"		4995775	1					
ANR	4995826	Callee	cached_tokens . getToken		4995775	0					
ANR	4995827	MemberAccess	cached_tokens . getToken		4995775	0					
ANR	4995828	Identifier	cached_tokens		4995775	0					
ANR	4995829	Identifier	getToken		4995775	1					
ANR	4995830	ArgumentList	username		4995775	1					
ANR	4995831	Argument	username		4995775	0					
ANR	4995832	Identifier	username		4995775	0					
ANR	4995833	Argument	domain		4995775	1					
ANR	4995834	Identifier	domain		4995775	0					
ANR	4995835	CompoundStatement		27:65:915:915	4995775	1					
ANR	4995836	ExpressionStatement	UserIdsInited = true	252:2:6372:6392	4995775	0	True				
ANR	4995837	AssignmentExpression	UserIdsInited = true		4995775	0		=			
ANR	4995838	Identifier	UserIdsInited		4995775	0					
ANR	4995839	Identifier	true		4995775	1					
ANR	4995840	IfStatement	if ( ! UserLoginName )		4995775	1					
ANR	4995841	Condition	! UserLoginName	256:7:6604:6618	4995775	0	True				
ANR	4995842	UnaryOperationExpression	! UserLoginName		4995775	0					
ANR	4995843	UnaryOperator	!		4995775	0					
ANR	4995844	Identifier	UserLoginName		4995775	1					
ANR	4995845	ExpressionStatement	UserLoginName = strdup ( username )	256:24:6621:6653	4995775	1	True				
ANR	4995846	AssignmentExpression	UserLoginName = strdup ( username )		4995775	0		=			
ANR	4995847	Identifier	UserLoginName		4995775	0					
ANR	4995848	CallExpression	strdup ( username )		4995775	1					
ANR	4995849	Callee	strdup		4995775	0					
ANR	4995850	Identifier	strdup		4995775	0					
ANR	4995851	ArgumentList	username		4995775	1					
ANR	4995852	Argument	username		4995775	0					
ANR	4995853	Identifier	username		4995775	0					
ANR	4995854	IfStatement	if ( ! UserDomainName )		4995775	2					
ANR	4995855	Condition	! UserDomainName	257:7:6662:6677	4995775	0	True				
ANR	4995856	UnaryOperationExpression	! UserDomainName		4995775	0					
ANR	4995857	UnaryOperator	!		4995775	0					
ANR	4995858	Identifier	UserDomainName		4995775	1					
ANR	4995859	ExpressionStatement	UserDomainName = strdup ( domain )	257:25:6680:6711	4995775	1	True				
ANR	4995860	AssignmentExpression	UserDomainName = strdup ( domain )		4995775	0		=			
ANR	4995861	Identifier	UserDomainName		4995775	0					
ANR	4995862	CallExpression	strdup ( domain )		4995775	1					
ANR	4995863	Callee	strdup		4995775	0					
ANR	4995864	Identifier	strdup		4995775	0					
ANR	4995865	ArgumentList	domain		4995775	1					
ANR	4995866	Argument	domain		4995775	0					
ANR	4995867	Identifier	domain		4995775	0					
ANR	4995868	Statement	dprintf	258:2:6715:6721	4995775	3	True				
ANR	4995869	Statement	(	258:9:6722:6722	4995775	4	True				
ANR	4995870	Statement	D_FULLDEBUG	258:10:6723:6733	4995775	5	True				
ANR	4995871	Statement	","	258:21:6734:6734	4995775	6	True				
ANR	4995872	Statement	"""init_user_ids: Already have handle for %s@%s,"""	258:23:6736:6782	4995775	7	True				
ANR	4995873	Statement	""" so returning.\\n"""	259:3:6787:6804	4995775	8	True				
ANR	4995874	Statement	","	259:21:6805:6805	4995775	9	True				
ANR	4995875	Statement	username	259:23:6807:6814	4995775	10	True				
ANR	4995876	Statement	","	259:31:6815:6815	4995775	11	True				
ANR	4995877	Statement	domain	259:33:6817:6822	4995775	12	True				
ANR	4995878	Statement	)	259:39:6823:6823	4995775	13	True				
ANR	4995879	ExpressionStatement		259:40:6824:6824	4995775	14	True				
ANR	4995880	ReturnStatement	return 1 ;	260:2:6828:6836	4995775	15	True				
ANR	4995881	PrimaryExpression	1		4995775	0					
ANR	4995882	ElseStatement	else		4995775	0					
ANR	4995883	CompoundStatement		39:2:1428:1457	4995775	0					
ANR	4995884	IdentifierDeclStatement	char * myusr = my_username ( ) ;	262:2:6850:6877	4995775	0	True				
ANR	4995885	IdentifierDecl	* myusr = my_username ( )		4995775	0					
ANR	4995886	IdentifierDeclType	char *		4995775	0					
ANR	4995887	Identifier	myusr		4995775	1					
ANR	4995888	AssignmentExpression	* myusr = my_username ( )		4995775	2		=			
ANR	4995889	Identifier	myusr		4995775	0					
ANR	4995890	CallExpression	my_username ( )		4995775	1					
ANR	4995891	Callee	my_username		4995775	0					
ANR	4995892	Identifier	my_username		4995775	0					
ANR	4995893	ArgumentList			4995775	1					
ANR	4995894	IdentifierDeclStatement	char * mydom = my_domainname ( ) ;	263:2:6881:6910	4995775	1	True				
ANR	4995895	IdentifierDecl	* mydom = my_domainname ( )		4995775	0					
ANR	4995896	IdentifierDeclType	char *		4995775	0					
ANR	4995897	Identifier	mydom		4995775	1					
ANR	4995898	AssignmentExpression	* mydom = my_domainname ( )		4995775	2		=			
ANR	4995899	Identifier	mydom		4995775	0					
ANR	4995900	CallExpression	my_domainname ( )		4995775	1					
ANR	4995901	Callee	my_domainname		4995775	0					
ANR	4995902	Identifier	my_domainname		4995775	0					
ANR	4995903	ArgumentList			4995775	1					
ANR	4995904	ExpressionStatement	UserIdsInited = false	266:2:6968:6989	4995775	2	True				
ANR	4995905	AssignmentExpression	UserIdsInited = false		4995775	0		=			
ANR	4995906	Identifier	UserIdsInited		4995775	0					
ANR	4995907	Identifier	false		4995775	1					
ANR	4995908	IfStatement	"if ( strcmp ( myusr , username ) == 0 && strcasecmp ( mydom , domain ) == 0 )"		4995775	3					
ANR	4995909	Condition	"strcmp ( myusr , username ) == 0 && strcasecmp ( mydom , domain ) == 0"	270:7:7126:7195	4995775	0	True				
ANR	4995910	AndExpression	"strcmp ( myusr , username ) == 0 && strcasecmp ( mydom , domain ) == 0"		4995775	0		&&			
ANR	4995911	EqualityExpression	"strcmp ( myusr , username ) == 0"		4995775	0		==			
ANR	4995912	CallExpression	"strcmp ( myusr , username )"		4995775	0					
ANR	4995913	Callee	strcmp		4995775	0					
ANR	4995914	Identifier	strcmp		4995775	0					
ANR	4995915	ArgumentList	myusr		4995775	1					
ANR	4995916	Argument	myusr		4995775	0					
ANR	4995917	Identifier	myusr		4995775	0					
ANR	4995918	Argument	username		4995775	1					
ANR	4995919	Identifier	username		4995775	0					
ANR	4995920	PrimaryExpression	0		4995775	1					
ANR	4995921	EqualityExpression	"strcasecmp ( mydom , domain ) == 0"		4995775	1		==			
ANR	4995922	CallExpression	"strcasecmp ( mydom , domain )"		4995775	0					
ANR	4995923	Callee	strcasecmp		4995775	0					
ANR	4995924	Identifier	strcasecmp		4995775	0					
ANR	4995925	ArgumentList	mydom		4995775	1					
ANR	4995926	Argument	mydom		4995775	0					
ANR	4995927	Identifier	mydom		4995775	0					
ANR	4995928	Argument	domain		4995775	1					
ANR	4995929	Identifier	domain		4995775	0					
ANR	4995930	PrimaryExpression	0		4995775	1					
ANR	4995931	CompoundStatement		47:39:1746:1746	4995775	1					
ANR	4995932	Statement	dprintf	273:3:7235:7241	4995775	0	True				
ANR	4995933	Statement	(	273:10:7242:7242	4995775	1	True				
ANR	4995934	Statement	D_FULLDEBUG	273:11:7243:7253	4995775	2	True				
ANR	4995935	Statement	","	273:22:7254:7254	4995775	3	True				
ANR	4995936	Statement	"""init_user_ids: Calling thread has token """	273:24:7256:7297	4995775	4	True				
ANR	4995937	Statement	"""we want, so returning.\\n"""	274:5:7304:7329	4995775	5	True				
ANR	4995938	Statement	)	274:31:7330:7330	4995775	6	True				
ANR	4995939	ExpressionStatement		274:32:7331:7331	4995775	7	True				
ANR	4995940	ExpressionStatement	CurrUserHandle = my_usertoken ( )	275:3:7336:7367	4995775	8	True				
ANR	4995941	AssignmentExpression	CurrUserHandle = my_usertoken ( )		4995775	0		=			
ANR	4995942	Identifier	CurrUserHandle		4995775	0					
ANR	4995943	CallExpression	my_usertoken ( )		4995775	1					
ANR	4995944	Callee	my_usertoken		4995775	0					
ANR	4995945	Identifier	my_usertoken		4995775	0					
ANR	4995946	ArgumentList			4995775	1					
ANR	4995947	IfStatement	if ( CurrUserHandle )		4995775	9					
ANR	4995948	Condition	CurrUserHandle	276:7:7376:7389	4995775	0	True				
ANR	4995949	Identifier	CurrUserHandle		4995775	0					
ANR	4995950	CompoundStatement		52:23:1939:1939	4995775	1					
ANR	4995951	ExpressionStatement	UserIdsInited = true	277:4:7398:7418	4995775	0	True				
ANR	4995952	AssignmentExpression	UserIdsInited = true		4995775	0		=			
ANR	4995953	Identifier	UserIdsInited		4995775	0					
ANR	4995954	Identifier	true		4995775	1					
ANR	4995955	ElseStatement	else		4995775	0					
ANR	4995956	CompoundStatement		54:10:1977:1977	4995775	0					
ANR	4995957	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""init_user_ids: handle is null!\\n"" )"	279:4:7436:7492	4995775	0	True				
ANR	4995958	CallExpression	"dprintf ( D_FULLDEBUG , ""init_user_ids: handle is null!\\n"" )"		4995775	0					
ANR	4995959	Callee	dprintf		4995775	0					
ANR	4995960	Identifier	dprintf		4995775	0					
ANR	4995961	ArgumentList	D_FULLDEBUG		4995775	1					
ANR	4995962	Argument	D_FULLDEBUG		4995775	0					
ANR	4995963	Identifier	D_FULLDEBUG		4995775	0					
ANR	4995964	Argument	"""init_user_ids: handle is null!\\n"""		4995775	1					
ANR	4995965	PrimaryExpression	"""init_user_ids: handle is null!\\n"""		4995775	0					
ANR	4995966	IfStatement	if ( UserLoginName )		4995775	10					
ANR	4995967	Condition	UserLoginName	282:7:7510:7522	4995775	0	True				
ANR	4995968	Identifier	UserLoginName		4995775	0					
ANR	4995969	CompoundStatement		58:22:2072:2072	4995775	1					
ANR	4995970	ExpressionStatement	free ( UserLoginName )	283:4:7531:7550	4995775	0	True				
ANR	4995971	CallExpression	free ( UserLoginName )		4995775	0					
ANR	4995972	Callee	free		4995775	0					
ANR	4995973	Identifier	free		4995775	0					
ANR	4995974	ArgumentList	UserLoginName		4995775	1					
ANR	4995975	Argument	UserLoginName		4995775	0					
ANR	4995976	Identifier	UserLoginName		4995775	0					
ANR	4995977	ExpressionStatement	UserLoginName = NULL	284:4:7556:7576	4995775	1	True				
ANR	4995978	AssignmentExpression	UserLoginName = NULL		4995775	0		=			
ANR	4995979	Identifier	UserLoginName		4995775	0					
ANR	4995980	Identifier	NULL		4995775	1					
ANR	4995981	IfStatement	if ( UserDomainName )		4995775	11					
ANR	4995982	Condition	UserDomainName	286:7:7590:7603	4995775	0	True				
ANR	4995983	Identifier	UserDomainName		4995775	0					
ANR	4995984	CompoundStatement		62:23:2153:2153	4995775	1					
ANR	4995985	ExpressionStatement	free ( UserDomainName )	287:4:7612:7632	4995775	0	True				
ANR	4995986	CallExpression	free ( UserDomainName )		4995775	0					
ANR	4995987	Callee	free		4995775	0					
ANR	4995988	Identifier	free		4995775	0					
ANR	4995989	ArgumentList	UserDomainName		4995775	1					
ANR	4995990	Argument	UserDomainName		4995775	0					
ANR	4995991	Identifier	UserDomainName		4995775	0					
ANR	4995992	ExpressionStatement	UserDomainName = NULL	288:4:7638:7659	4995775	1	True				
ANR	4995993	AssignmentExpression	UserDomainName = NULL		4995775	0		=			
ANR	4995994	Identifier	UserDomainName		4995775	0					
ANR	4995995	Identifier	NULL		4995775	1					
ANR	4995996	ExpressionStatement	UserLoginName = myusr	292:3:7736:7757	4995775	12	True				
ANR	4995997	AssignmentExpression	UserLoginName = myusr		4995775	0		=			
ANR	4995998	Identifier	UserLoginName		4995775	0					
ANR	4995999	Identifier	myusr		4995775	1					
ANR	4996000	ExpressionStatement	UserDomainName = mydom	293:3:7762:7784	4995775	13	True				
ANR	4996001	AssignmentExpression	UserDomainName = mydom		4995775	0		=			
ANR	4996002	Identifier	UserDomainName		4995775	0					
ANR	4996003	Identifier	mydom		4995775	1					
ANR	4996004	ExpressionStatement	"cached_tokens . storeToken ( UserLoginName , UserDomainName , CurrUserHandle )"	296:3:7837:7917	4995775	14	True				
ANR	4996005	CallExpression	"cached_tokens . storeToken ( UserLoginName , UserDomainName , CurrUserHandle )"		4995775	0					
ANR	4996006	Callee	cached_tokens . storeToken		4995775	0					
ANR	4996007	MemberAccess	cached_tokens . storeToken		4995775	0					
ANR	4996008	Identifier	cached_tokens		4995775	0					
ANR	4996009	Identifier	storeToken		4995775	1					
ANR	4996010	ArgumentList	UserLoginName		4995775	1					
ANR	4996011	Argument	UserLoginName		4995775	0					
ANR	4996012	Identifier	UserLoginName		4995775	0					
ANR	4996013	Argument	UserDomainName		4995775	1					
ANR	4996014	Identifier	UserDomainName		4995775	0					
ANR	4996015	Argument	CurrUserHandle		4995775	2					
ANR	4996016	Identifier	CurrUserHandle		4995775	0					
ANR	4996017	ReturnStatement	return 1 ;	298:3:7922:7930	4995775	15	True				
ANR	4996018	PrimaryExpression	1		4995775	0					
ANR	4996019	ExpressionStatement	ASSERT ( ! UserIdsInited )	303:1:7990:8014	4995775	19	True				
ANR	4996020	CallExpression	ASSERT ( ! UserIdsInited )		4995775	0					
ANR	4996021	Callee	ASSERT		4995775	0					
ANR	4996022	Identifier	ASSERT		4995775	0					
ANR	4996023	ArgumentList	! UserIdsInited		4995775	1					
ANR	4996024	Argument	! UserIdsInited		4995775	0					
ANR	4996025	UnaryOperationExpression	! UserIdsInited		4995775	0					
ANR	4996026	UnaryOperator	!		4995775	0					
ANR	4996027	Identifier	UserIdsInited		4995775	1					
ANR	4996028	IfStatement	if ( ! can_switch_ids ( ) )		4995775	20					
ANR	4996029	Condition	! can_switch_ids ( )	306:5:8071:8087	4995775	0	True				
ANR	4996030	UnaryOperationExpression	! can_switch_ids ( )		4995775	0					
ANR	4996031	UnaryOperator	!		4995775	0					
ANR	4996032	CallExpression	can_switch_ids ( )		4995775	1					
ANR	4996033	Callee	can_switch_ids		4995775	0					
ANR	4996034	Identifier	can_switch_ids		4995775	0					
ANR	4996035	ArgumentList			4995775	1					
ANR	4996036	CompoundStatement		82:24:2637:2637	4995775	1					
ANR	4996037	ExpressionStatement	"dprintf ( D_ALWAYS , ""init_user_ids: failed because user switching is disabled\\n"" )"	307:2:8094:8173	4995775	0	True				
ANR	4996038	CallExpression	"dprintf ( D_ALWAYS , ""init_user_ids: failed because user switching is disabled\\n"" )"		4995775	0					
ANR	4996039	Callee	dprintf		4995775	0					
ANR	4996040	Identifier	dprintf		4995775	0					
ANR	4996041	ArgumentList	D_ALWAYS		4995775	1					
ANR	4996042	Argument	D_ALWAYS		4995775	0					
ANR	4996043	Identifier	D_ALWAYS		4995775	0					
ANR	4996044	Argument	"""init_user_ids: failed because user switching is disabled\\n"""		4995775	1					
ANR	4996045	PrimaryExpression	"""init_user_ids: failed because user switching is disabled\\n"""		4995775	0					
ANR	4996046	ReturnStatement	return 0 ;	308:2:8177:8185	4995775	1	True				
ANR	4996047	PrimaryExpression	0		4995775	0					
ANR	4996048	IfStatement	"if ( strcmp ( username , ""nobody"" ) != 0 )"		4995775	21					
ANR	4996049	Condition	"strcmp ( username , ""nobody"" ) != 0"	311:6:8197:8226	4995775	0	True				
ANR	4996050	EqualityExpression	"strcmp ( username , ""nobody"" ) != 0"		4995775	0		!=			
ANR	4996051	CallExpression	"strcmp ( username , ""nobody"" )"		4995775	0					
ANR	4996052	Callee	strcmp		4995775	0					
ANR	4996053	Identifier	strcmp		4995775	0					
ANR	4996054	ArgumentList	username		4995775	1					
ANR	4996055	Argument	username		4995775	0					
ANR	4996056	Identifier	username		4995775	0					
ANR	4996057	Argument	"""nobody"""		4995775	1					
ANR	4996058	PrimaryExpression	"""nobody"""		4995775	0					
ANR	4996059	PrimaryExpression	0		4995775	1					
ANR	4996060	CompoundStatement		140:2:4521:4559	4995775	1					
ANR	4996061	IdentifierDeclStatement	lsa_mgr lsaMan ;	315:2:8387:8401	4995775	0	True				
ANR	4996062	IdentifierDecl	lsaMan		4995775	0					
ANR	4996063	IdentifierDeclType	lsa_mgr		4995775	0					
ANR	4996064	Identifier	lsaMan		4995775	1					
ANR	4996065	IdentifierDeclStatement	char pw [ 255 ] ;	316:2:8405:8417	4995775	1	True				
ANR	4996066	IdentifierDecl	pw [ 255 ]		4995775	0					
ANR	4996067	IdentifierDeclType	char [ 255 ]		4995775	0					
ANR	4996068	Identifier	pw		4995775	1					
ANR	4996069	PrimaryExpression	255		4995775	2					
ANR	4996070	IdentifierDeclStatement	char user [ 255 ] ;	317:2:8421:8435	4995775	2	True				
ANR	4996071	IdentifierDecl	user [ 255 ]		4995775	0					
ANR	4996072	IdentifierDeclType	char [ 255 ]		4995775	0					
ANR	4996073	Identifier	user		4995775	1					
ANR	4996074	PrimaryExpression	255		4995775	2					
ANR	4996075	IdentifierDeclStatement	char dom [ 255 ] ;	318:2:8439:8452	4995775	3	True				
ANR	4996076	IdentifierDecl	dom [ 255 ]		4995775	0					
ANR	4996077	IdentifierDeclType	char [ 255 ]		4995775	0					
ANR	4996078	Identifier	dom		4995775	1					
ANR	4996079	PrimaryExpression	255		4995775	2					
ANR	4996080	IdentifierDeclStatement	wchar_t w_fullname [ 255 ] ;	319:2:8456:8479	4995775	4	True				
ANR	4996081	IdentifierDecl	w_fullname [ 255 ]		4995775	0					
ANR	4996082	IdentifierDeclType	wchar_t [ 255 ]		4995775	0					
ANR	4996083	Identifier	w_fullname		4995775	1					
ANR	4996084	PrimaryExpression	255		4995775	2					
ANR	4996085	IdentifierDeclStatement	wchar_t * w_pw ;	320:2:8483:8496	4995775	5	True				
ANR	4996086	IdentifierDecl	* w_pw		4995775	0					
ANR	4996087	IdentifierDeclType	wchar_t *		4995775	0					
ANR	4996088	Identifier	w_pw		4995775	1					
ANR	4996089	IdentifierDeclStatement	bool got_password = false ;	321:2:8500:8525	4995775	6	True				
ANR	4996090	IdentifierDecl	got_password = false		4995775	0					
ANR	4996091	IdentifierDeclType	bool		4995775	0					
ANR	4996092	Identifier	got_password		4995775	1					
ANR	4996093	AssignmentExpression	got_password = false		4995775	2		=			
ANR	4996094	Identifier	false		4995775	0					
ANR	4996095	Identifier	false		4995775	1					
ANR	4996096	IdentifierDeclStatement	bool got_password_from_credd = false ;	322:2:8529:8565	4995775	7	True				
ANR	4996097	IdentifierDecl	got_password_from_credd = false		4995775	0					
ANR	4996098	IdentifierDeclType	bool		4995775	0					
ANR	4996099	Identifier	got_password_from_credd		4995775	1					
ANR	4996100	AssignmentExpression	got_password_from_credd = false		4995775	2		=			
ANR	4996101	Identifier	false		4995775	0					
ANR	4996102	Identifier	false		4995775	1					
ANR	4996103	Statement	swprintf	325:2:8610:8617	4995775	8	True				
ANR	4996104	Statement	(	325:10:8618:8618	4995775	9	True				
ANR	4996105	Statement	w_fullname	325:11:8619:8628	4995775	10	True				
ANR	4996106	Statement	","	325:21:8629:8629	4995775	11	True				
ANR	4996107	Statement	L	325:23:8631:8631	4995775	12	True				
ANR	4996108	Statement	"""%S@%S"""	325:24:8632:8638	4995775	13	True				
ANR	4996109	Statement	","	325:31:8639:8639	4995775	14	True				
ANR	4996110	Statement	username	325:33:8641:8648	4995775	15	True				
ANR	4996111	Statement	","	325:41:8649:8649	4995775	16	True				
ANR	4996112	Statement	domain	325:43:8651:8656	4995775	17	True				
ANR	4996113	Statement	)	325:49:8657:8657	4995775	18	True				
ANR	4996114	ExpressionStatement		325:50:8658:8658	4995775	19	True				
ANR	4996115	ExpressionStatement	"sprintf ( user , ""%s"" , username )"	326:2:8662:8691	4995775	20	True				
ANR	4996116	CallExpression	"sprintf ( user , ""%s"" , username )"		4995775	0					
ANR	4996117	Callee	sprintf		4995775	0					
ANR	4996118	Identifier	sprintf		4995775	0					
ANR	4996119	ArgumentList	user		4995775	1					
ANR	4996120	Argument	user		4995775	0					
ANR	4996121	Identifier	user		4995775	0					
ANR	4996122	Argument	"""%s"""		4995775	1					
ANR	4996123	PrimaryExpression	"""%s"""		4995775	0					
ANR	4996124	Argument	username		4995775	2					
ANR	4996125	Identifier	username		4995775	0					
ANR	4996126	ExpressionStatement	"sprintf ( dom , ""%s"" , domain )"	327:2:8695:8721	4995775	21	True				
ANR	4996127	CallExpression	"sprintf ( dom , ""%s"" , domain )"		4995775	0					
ANR	4996128	Callee	sprintf		4995775	0					
ANR	4996129	Identifier	sprintf		4995775	0					
ANR	4996130	ArgumentList	dom		4995775	1					
ANR	4996131	Argument	dom		4995775	0					
ANR	4996132	Identifier	dom		4995775	0					
ANR	4996133	Argument	"""%s"""		4995775	1					
ANR	4996134	PrimaryExpression	"""%s"""		4995775	0					
ANR	4996135	Argument	domain		4995775	2					
ANR	4996136	Identifier	domain		4995775	0					
ANR	4996137	ExpressionStatement	w_pw = lsaMan . query ( w_fullname )	330:2:8772:8803	4995775	22	True				
ANR	4996138	AssignmentExpression	w_pw = lsaMan . query ( w_fullname )		4995775	0		=			
ANR	4996139	Identifier	w_pw		4995775	0					
ANR	4996140	CallExpression	lsaMan . query ( w_fullname )		4995775	1					
ANR	4996141	Callee	lsaMan . query		4995775	0					
ANR	4996142	MemberAccess	lsaMan . query		4995775	0					
ANR	4996143	Identifier	lsaMan		4995775	0					
ANR	4996144	Identifier	query		4995775	1					
ANR	4996145	ArgumentList	w_fullname		4995775	1					
ANR	4996146	Argument	w_fullname		4995775	0					
ANR	4996147	Identifier	w_fullname		4995775	0					
ANR	4996148	IfStatement	if ( w_pw )		4995775	23					
ANR	4996149	Condition	w_pw	331:7:8812:8815	4995775	0	True				
ANR	4996150	Identifier	w_pw		4995775	0					
ANR	4996151	CompoundStatement		107:14:3366:3366	4995775	1					
ANR	4996152	ExpressionStatement	"sprintf ( pw , ""%S"" , w_pw )"	333:3:8863:8886	4995775	0	True				
ANR	4996153	CallExpression	"sprintf ( pw , ""%S"" , w_pw )"		4995775	0					
ANR	4996154	Callee	sprintf		4995775	0					
ANR	4996155	Identifier	sprintf		4995775	0					
ANR	4996156	ArgumentList	pw		4995775	1					
ANR	4996157	Argument	pw		4995775	0					
ANR	4996158	Identifier	pw		4995775	0					
ANR	4996159	Argument	"""%S"""		4995775	1					
ANR	4996160	PrimaryExpression	"""%S"""		4995775	0					
ANR	4996161	Argument	w_pw		4995775	2					
ANR	4996162	Identifier	w_pw		4995775	0					
ANR	4996163	ExpressionStatement	"SecureZeroMemory ( w_pw , wcslen ( w_pw ) * sizeof ( wchar_t ) )"	335:3:8955:9007	4995775	1	True				
ANR	4996164	CallExpression	"SecureZeroMemory ( w_pw , wcslen ( w_pw ) * sizeof ( wchar_t ) )"		4995775	0					
ANR	4996165	Callee	SecureZeroMemory		4995775	0					
ANR	4996166	Identifier	SecureZeroMemory		4995775	0					
ANR	4996167	ArgumentList	w_pw		4995775	1					
ANR	4996168	Argument	w_pw		4995775	0					
ANR	4996169	Identifier	w_pw		4995775	0					
ANR	4996170	Argument	wcslen ( w_pw ) * sizeof ( wchar_t )		4995775	1					
ANR	4996171	MultiplicativeExpression	wcslen ( w_pw ) * sizeof ( wchar_t )		4995775	0		*			
ANR	4996172	CallExpression	wcslen ( w_pw )		4995775	0					
ANR	4996173	Callee	wcslen		4995775	0					
ANR	4996174	Identifier	wcslen		4995775	0					
ANR	4996175	ArgumentList	w_pw		4995775	1					
ANR	4996176	Argument	w_pw		4995775	0					
ANR	4996177	Identifier	w_pw		4995775	0					
ANR	4996178	SizeofExpression	sizeof ( wchar_t )		4995775	1					
ANR	4996179	Sizeof	sizeof		4995775	0					
ANR	4996180	SizeofOperand	wchar_t		4995775	1					
ANR	4996181	Statement	delete	336:3:9012:9017	4995775	2	True				
ANR	4996182	Statement	[	336:9:9018:9018	4995775	3	True				
ANR	4996183	Statement	]	336:10:9019:9019	4995775	4	True				
ANR	4996184	ExpressionStatement	w_pw	336:11:9020:9026	4995775	5	True				
ANR	4996185	Identifier	w_pw		4995775	0					
ANR	4996186	ExpressionStatement	w_pw = NULL	337:3:9031:9042	4995775	6	True				
ANR	4996187	AssignmentExpression	w_pw = NULL		4995775	0		=			
ANR	4996188	Identifier	w_pw		4995775	0					
ANR	4996189	Identifier	NULL		4995775	1					
ANR	4996190	ExpressionStatement	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & CurrUserHandle )"	340:3:9101:9444	4995775	7	True				
ANR	4996191	AssignmentExpression	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & CurrUserHandle )"		4995775	0		=			
ANR	4996192	Identifier	retval		4995775	0					
ANR	4996193	CallExpression	"LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & CurrUserHandle )"		4995775	1					
ANR	4996194	Callee	LogonUser		4995775	0					
ANR	4996195	Identifier	LogonUser		4995775	0					
ANR	4996196	ArgumentList	user		4995775	1					
ANR	4996197	Argument	user		4995775	0					
ANR	4996198	Identifier	user		4995775	0					
ANR	4996199	Argument	dom		4995775	1					
ANR	4996200	Identifier	dom		4995775	0					
ANR	4996201	Argument	pw		4995775	2					
ANR	4996202	Identifier	pw		4995775	0					
ANR	4996203	Argument	LOGON32_LOGON_INTERACTIVE		4995775	3					
ANR	4996204	Identifier	LOGON32_LOGON_INTERACTIVE		4995775	0					
ANR	4996205	Argument	LOGON32_PROVIDER_DEFAULT		4995775	4					
ANR	4996206	Identifier	LOGON32_PROVIDER_DEFAULT		4995775	0					
ANR	4996207	Argument	& CurrUserHandle		4995775	5					
ANR	4996208	UnaryOperationExpression	& CurrUserHandle		4995775	0					
ANR	4996209	UnaryOperator	&		4995775	0					
ANR	4996210	Identifier	CurrUserHandle		4995775	1					
ANR	4996211	IfStatement	if ( ! retval )		4995775	8					
ANR	4996212	Condition	! retval	350:8:9458:9464	4995775	0	True				
ANR	4996213	UnaryOperationExpression	! retval		4995775	0					
ANR	4996214	UnaryOperator	!		4995775	0					
ANR	4996215	Identifier	retval		4995775	1					
ANR	4996216	CompoundStatement		126:18:4015:4015	4995775	1					
ANR	4996217	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Locally stored credential for %s@%s is stale\\n"" , user , dom )"	351:4:9474:9558	4995775	0	True				
ANR	4996218	CallExpression	"dprintf ( D_FULLDEBUG , ""Locally stored credential for %s@%s is stale\\n"" , user , dom )"		4995775	0					
ANR	4996219	Callee	dprintf		4995775	0					
ANR	4996220	Identifier	dprintf		4995775	0					
ANR	4996221	ArgumentList	D_FULLDEBUG		4995775	1					
ANR	4996222	Argument	D_FULLDEBUG		4995775	0					
ANR	4996223	Identifier	D_FULLDEBUG		4995775	0					
ANR	4996224	Argument	"""Locally stored credential for %s@%s is stale\\n"""		4995775	1					
ANR	4996225	PrimaryExpression	"""Locally stored credential for %s@%s is stale\\n"""		4995775	0					
ANR	4996226	Argument	user		4995775	2					
ANR	4996227	Identifier	user		4995775	0					
ANR	4996228	Argument	dom		4995775	3					
ANR	4996229	Identifier	dom		4995775	0					
ANR	4996230	ExpressionStatement	CurrUserHandle = NULL	354:4:9638:9659	4995775	1	True				
ANR	4996231	AssignmentExpression	CurrUserHandle = NULL		4995775	0		=			
ANR	4996232	Identifier	CurrUserHandle		4995775	0					
ANR	4996233	Identifier	NULL		4995775	1					
ANR	4996234	ElseStatement	else		4995775	0					
ANR	4996235	CompoundStatement		131:10:4219:4219	4995775	0					
ANR	4996236	ExpressionStatement	got_password = true	356:4:9678:9697	4995775	0	True				
ANR	4996237	AssignmentExpression	got_password = true		4995775	0		=			
ANR	4996238	Identifier	got_password		4995775	0					
ANR	4996239	Identifier	true		4995775	1					
ANR	4996240	IdentifierDeclStatement	"char * credd_host = param ( ""CREDD_HOST"" ) ;"	364:2:9974:10012	4995775	24	True				
ANR	4996241	IdentifierDecl	"* credd_host = param ( ""CREDD_HOST"" )"		4995775	0					
ANR	4996242	IdentifierDeclType	char *		4995775	0					
ANR	4996243	Identifier	credd_host		4995775	1					
ANR	4996244	AssignmentExpression	"* credd_host = param ( ""CREDD_HOST"" )"		4995775	2		=			
ANR	4996245	Identifier	credd_host		4995775	0					
ANR	4996246	CallExpression	"param ( ""CREDD_HOST"" )"		4995775	1					
ANR	4996247	Callee	param		4995775	0					
ANR	4996248	Identifier	param		4995775	0					
ANR	4996249	ArgumentList	"""CREDD_HOST"""		4995775	1					
ANR	4996250	Argument	"""CREDD_HOST"""		4995775	0					
ANR	4996251	PrimaryExpression	"""CREDD_HOST"""		4995775	0					
ANR	4996252	IfStatement	if ( credd_host && got_password == false )		4995775	25					
ANR	4996253	Condition	credd_host && got_password == false	365:6:10020:10052	4995775	0	True				
ANR	4996254	AndExpression	credd_host && got_password == false		4995775	0		&&			
ANR	4996255	Identifier	credd_host		4995775	0					
ANR	4996256	EqualityExpression	got_password == false		4995775	1		==			
ANR	4996257	Identifier	got_password		4995775	0					
ANR	4996258	Identifier	false		4995775	1					
ANR	4996259	CompoundStatement		141:41:4602:4602	4995775	1					
ANR	4996260	ExpressionStatement	"got_password = get_password_from_credd ( credd_host , username , domain , pw , sizeof ( pw ) )"	367:11:10074:10229	4995775	0	True				
ANR	4996261	AssignmentExpression	"got_password = get_password_from_credd ( credd_host , username , domain , pw , sizeof ( pw ) )"		4995775	0		=			
ANR	4996262	Identifier	got_password		4995775	0					
ANR	4996263	CallExpression	"get_password_from_credd ( credd_host , username , domain , pw , sizeof ( pw ) )"		4995775	1					
ANR	4996264	Callee	get_password_from_credd		4995775	0					
ANR	4996265	Identifier	get_password_from_credd		4995775	0					
ANR	4996266	ArgumentList	credd_host		4995775	1					
ANR	4996267	Argument	credd_host		4995775	0					
ANR	4996268	Identifier	credd_host		4995775	0					
ANR	4996269	Argument	username		4995775	1					
ANR	4996270	Identifier	username		4995775	0					
ANR	4996271	Argument	domain		4995775	2					
ANR	4996272	Identifier	domain		4995775	0					
ANR	4996273	Argument	pw		4995775	3					
ANR	4996274	Identifier	pw		4995775	0					
ANR	4996275	Argument	sizeof ( pw )		4995775	4					
ANR	4996276	SizeofExpression	sizeof ( pw )		4995775	0					
ANR	4996277	Sizeof	sizeof		4995775	0					
ANR	4996278	SizeofOperand	pw		4995775	1					
ANR	4996279	ExpressionStatement	got_password_from_credd = got_password	373:11:10242:10280	4995775	1	True				
ANR	4996280	AssignmentExpression	got_password_from_credd = got_password		4995775	0		=			
ANR	4996281	Identifier	got_password_from_credd		4995775	0					
ANR	4996282	Identifier	got_password		4995775	1					
ANR	4996283	IfStatement	if ( credd_host )		4995775	26					
ANR	4996284	Condition	credd_host	402:6:11242:11251	4995775	0	True				
ANR	4996285	Identifier	credd_host		4995775	0					
ANR	4996286	ExpressionStatement	free ( credd_host )	402:18:11254:11270	4995775	1	True				
ANR	4996287	CallExpression	free ( credd_host )		4995775	0					
ANR	4996288	Callee	free		4995775	0					
ANR	4996289	Identifier	free		4995775	0					
ANR	4996290	ArgumentList	credd_host		4995775	1					
ANR	4996291	Argument	credd_host		4995775	0					
ANR	4996292	Identifier	credd_host		4995775	0					
ANR	4996293	IfStatement	if ( ! got_password )		4995775	27					
ANR	4996294	Condition	! got_password	404:7:11280:11293	4995775	0	True				
ANR	4996295	UnaryOperationExpression	! got_password		4995775	0					
ANR	4996296	UnaryOperator	!		4995775	0					
ANR	4996297	Identifier	got_password		4995775	1					
ANR	4996298	CompoundStatement		180:24:5844:5844	4995775	1					
ANR	4996299	Statement	dprintf	405:3:11302:11308	4995775	0	True				
ANR	4996300	Statement	(	405:10:11309:11309	4995775	1	True				
ANR	4996301	Statement	D_ALWAYS	405:11:11310:11317	4995775	2	True				
ANR	4996302	Statement	","	405:19:11318:11318	4995775	3	True				
ANR	4996303	Statement	"""ERROR: Could not locate valid credential for user """	405:21:11320:11371	4995775	4	True				
ANR	4996304	Statement	"""'%s@%s'\\n"""	406:4:11377:11387	4995775	5	True				
ANR	4996305	Statement	","	406:15:11388:11388	4995775	6	True				
ANR	4996306	Statement	username	406:17:11390:11397	4995775	7	True				
ANR	4996307	Statement	","	406:25:11398:11398	4995775	8	True				
ANR	4996308	Statement	domain	406:27:11400:11405	4995775	9	True				
ANR	4996309	Statement	)	406:33:11406:11406	4995775	10	True				
ANR	4996310	ExpressionStatement		406:34:11407:11407	4995775	11	True				
ANR	4996311	ReturnStatement	return 0 ;	407:3:11412:11420	4995775	12	True				
ANR	4996312	PrimaryExpression	0		4995775	0					
ANR	4996313	ElseStatement	else		4995775	0					
ANR	4996314	CompoundStatement		184:9:5978:5978	4995775	0					
ANR	4996315	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Found credential for user '%s'\\n"" , username )"	409:3:11436:11502	4995775	0	True				
ANR	4996316	CallExpression	"dprintf ( D_FULLDEBUG , ""Found credential for user '%s'\\n"" , username )"		4995775	0					
ANR	4996317	Callee	dprintf		4995775	0					
ANR	4996318	Identifier	dprintf		4995775	0					
ANR	4996319	ArgumentList	D_FULLDEBUG		4995775	1					
ANR	4996320	Argument	D_FULLDEBUG		4995775	0					
ANR	4996321	Identifier	D_FULLDEBUG		4995775	0					
ANR	4996322	Argument	"""Found credential for user '%s'\\n"""		4995775	1					
ANR	4996323	PrimaryExpression	"""Found credential for user '%s'\\n"""		4995775	0					
ANR	4996324	Argument	username		4995775	2					
ANR	4996325	Identifier	username		4995775	0					
ANR	4996326	IfStatement	if ( CurrUserHandle == NULL )		4995775	1					
ANR	4996327	Condition	CurrUserHandle == NULL	413:8:11620:11641	4995775	0	True				
ANR	4996328	EqualityExpression	CurrUserHandle == NULL		4995775	0		==			
ANR	4996329	Identifier	CurrUserHandle		4995775	0					
ANR	4996330	Identifier	NULL		4995775	1					
ANR	4996331	CompoundStatement		189:33:6192:6192	4995775	1					
ANR	4996332	ExpressionStatement	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & CurrUserHandle )"	414:4:11651:12002	4995775	0	True				
ANR	4996333	AssignmentExpression	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & CurrUserHandle )"		4995775	0		=			
ANR	4996334	Identifier	retval		4995775	0					
ANR	4996335	CallExpression	"LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & CurrUserHandle )"		4995775	1					
ANR	4996336	Callee	LogonUser		4995775	0					
ANR	4996337	Identifier	LogonUser		4995775	0					
ANR	4996338	ArgumentList	user		4995775	1					
ANR	4996339	Argument	user		4995775	0					
ANR	4996340	Identifier	user		4995775	0					
ANR	4996341	Argument	dom		4995775	1					
ANR	4996342	Identifier	dom		4995775	0					
ANR	4996343	Argument	pw		4995775	2					
ANR	4996344	Identifier	pw		4995775	0					
ANR	4996345	Argument	LOGON32_LOGON_INTERACTIVE		4995775	3					
ANR	4996346	Identifier	LOGON32_LOGON_INTERACTIVE		4995775	0					
ANR	4996347	Argument	LOGON32_PROVIDER_DEFAULT		4995775	4					
ANR	4996348	Identifier	LOGON32_PROVIDER_DEFAULT		4995775	0					
ANR	4996349	Argument	& CurrUserHandle		4995775	5					
ANR	4996350	UnaryOperationExpression	& CurrUserHandle		4995775	0					
ANR	4996351	UnaryOperator	&		4995775	0					
ANR	4996352	Identifier	CurrUserHandle		4995775	1					
ANR	4996353	ElseStatement	else		4995775	0					
ANR	4996354	CompoundStatement		199:10:6561:6561	4995775	0					
ANR	4996355	ExpressionStatement	retval = 1	426:4:12177:12187	4995775	0	True				
ANR	4996356	AssignmentExpression	retval = 1		4995775	0		=			
ANR	4996357	Identifier	retval		4995775	0					
ANR	4996358	PrimaryExpression	1		4995775	1					
ANR	4996359	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""LogonUser completed.\\n"" )"	429:3:12244:12290	4995775	2	True				
ANR	4996360	CallExpression	"dprintf ( D_FULLDEBUG , ""LogonUser completed.\\n"" )"		4995775	0					
ANR	4996361	Callee	dprintf		4995775	0					
ANR	4996362	Identifier	dprintf		4995775	0					
ANR	4996363	ArgumentList	D_FULLDEBUG		4995775	1					
ANR	4996364	Argument	D_FULLDEBUG		4995775	0					
ANR	4996365	Identifier	D_FULLDEBUG		4995775	0					
ANR	4996366	Argument	"""LogonUser completed.\\n"""		4995775	1					
ANR	4996367	PrimaryExpression	"""LogonUser completed.\\n"""		4995775	0					
ANR	4996368	IfStatement	if ( UserLoginName )		4995775	3					
ANR	4996369	Condition	UserLoginName	431:7:12300:12312	4995775	0	True				
ANR	4996370	Identifier	UserLoginName		4995775	0					
ANR	4996371	CompoundStatement		207:22:6862:6862	4995775	1					
ANR	4996372	ExpressionStatement	free ( UserLoginName )	432:4:12321:12340	4995775	0	True				
ANR	4996373	CallExpression	free ( UserLoginName )		4995775	0					
ANR	4996374	Callee	free		4995775	0					
ANR	4996375	Identifier	free		4995775	0					
ANR	4996376	ArgumentList	UserLoginName		4995775	1					
ANR	4996377	Argument	UserLoginName		4995775	0					
ANR	4996378	Identifier	UserLoginName		4995775	0					
ANR	4996379	ExpressionStatement	UserDomainName = NULL	433:4:12346:12367	4995775	1	True				
ANR	4996380	AssignmentExpression	UserDomainName = NULL		4995775	0		=			
ANR	4996381	Identifier	UserDomainName		4995775	0					
ANR	4996382	Identifier	NULL		4995775	1					
ANR	4996383	IfStatement	if ( UserDomainName )		4995775	4					
ANR	4996384	Condition	UserDomainName	435:7:12381:12394	4995775	0	True				
ANR	4996385	Identifier	UserDomainName		4995775	0					
ANR	4996386	CompoundStatement		211:23:6944:6944	4995775	1					
ANR	4996387	ExpressionStatement	free ( UserDomainName )	436:4:12403:12423	4995775	0	True				
ANR	4996388	CallExpression	free ( UserDomainName )		4995775	0					
ANR	4996389	Callee	free		4995775	0					
ANR	4996390	Identifier	free		4995775	0					
ANR	4996391	ArgumentList	UserDomainName		4995775	1					
ANR	4996392	Argument	UserDomainName		4995775	0					
ANR	4996393	Identifier	UserDomainName		4995775	0					
ANR	4996394	ExpressionStatement	UserDomainName = NULL	437:4:12429:12450	4995775	1	True				
ANR	4996395	AssignmentExpression	UserDomainName = NULL		4995775	0		=			
ANR	4996396	Identifier	UserDomainName		4995775	0					
ANR	4996397	Identifier	NULL		4995775	1					
ANR	4996398	ExpressionStatement	UserLoginName = strdup ( username )	439:3:12460:12492	4995775	5	True				
ANR	4996399	AssignmentExpression	UserLoginName = strdup ( username )		4995775	0		=			
ANR	4996400	Identifier	UserLoginName		4995775	0					
ANR	4996401	CallExpression	strdup ( username )		4995775	1					
ANR	4996402	Callee	strdup		4995775	0					
ANR	4996403	Identifier	strdup		4995775	0					
ANR	4996404	ArgumentList	username		4995775	1					
ANR	4996405	Argument	username		4995775	0					
ANR	4996406	Identifier	username		4995775	0					
ANR	4996407	ExpressionStatement	UserDomainName = strdup ( domain )	440:3:12497:12528	4995775	6	True				
ANR	4996408	AssignmentExpression	UserDomainName = strdup ( domain )		4995775	0		=			
ANR	4996409	Identifier	UserDomainName		4995775	0					
ANR	4996410	CallExpression	strdup ( domain )		4995775	1					
ANR	4996411	Callee	strdup		4995775	0					
ANR	4996412	Identifier	strdup		4995775	0					
ANR	4996413	ArgumentList	domain		4995775	1					
ANR	4996414	Argument	domain		4995775	0					
ANR	4996415	Identifier	domain		4995775	0					
ANR	4996416	IfStatement	if ( ! retval )		4995775	7					
ANR	4996417	Condition	! retval	442:8:12539:12545	4995775	0	True				
ANR	4996418	UnaryOperationExpression	! retval		4995775	0					
ANR	4996419	UnaryOperator	!		4995775	0					
ANR	4996420	Identifier	retval		4995775	1					
ANR	4996421	CompoundStatement		218:18:7096:7096	4995775	1					
ANR	4996422	ExpressionStatement	"dprintf ( D_ALWAYS , ""init_user_ids: LogonUser failed with NT Status %ld\\n"" , GetLastError ( ) )"	443:4:12555:12650	4995775	0	True				
ANR	4996423	CallExpression	"dprintf ( D_ALWAYS , ""init_user_ids: LogonUser failed with NT Status %ld\\n"" , GetLastError ( ) )"		4995775	0					
ANR	4996424	Callee	dprintf		4995775	0					
ANR	4996425	Identifier	dprintf		4995775	0					
ANR	4996426	ArgumentList	D_ALWAYS		4995775	1					
ANR	4996427	Argument	D_ALWAYS		4995775	0					
ANR	4996428	Identifier	D_ALWAYS		4995775	0					
ANR	4996429	Argument	"""init_user_ids: LogonUser failed with NT Status %ld\\n"""		4995775	1					
ANR	4996430	PrimaryExpression	"""init_user_ids: LogonUser failed with NT Status %ld\\n"""		4995775	0					
ANR	4996431	Argument	GetLastError ( )		4995775	2					
ANR	4996432	CallExpression	GetLastError ( )		4995775	0					
ANR	4996433	Callee	GetLastError		4995775	0					
ANR	4996434	Identifier	GetLastError		4995775	0					
ANR	4996435	ArgumentList			4995775	1					
ANR	4996436	ExpressionStatement	retval = 0	445:4:12656:12667	4995775	1	True				
ANR	4996437	AssignmentExpression	retval = 0		4995775	0		=			
ANR	4996438	Identifier	retval		4995775	0					
ANR	4996439	PrimaryExpression	0		4995775	1					
ANR	4996440	ElseStatement	else		4995775	0					
ANR	4996441	CompoundStatement		222:10:7255:7255	4995775	0					
ANR	4996442	ExpressionStatement	"cached_tokens . storeToken ( UserLoginName , UserDomainName , CurrUserHandle )"	448:4:12754:12834	4995775	0	True				
ANR	4996443	CallExpression	"cached_tokens . storeToken ( UserLoginName , UserDomainName , CurrUserHandle )"		4995775	0					
ANR	4996444	Callee	cached_tokens . storeToken		4995775	0					
ANR	4996445	MemberAccess	cached_tokens . storeToken		4995775	0					
ANR	4996446	Identifier	cached_tokens		4995775	0					
ANR	4996447	Identifier	storeToken		4995775	1					
ANR	4996448	ArgumentList	UserLoginName		4995775	1					
ANR	4996449	Argument	UserLoginName		4995775	0					
ANR	4996450	Identifier	UserLoginName		4995775	0					
ANR	4996451	Argument	UserDomainName		4995775	1					
ANR	4996452	Identifier	UserDomainName		4995775	0					
ANR	4996453	Argument	CurrUserHandle		4995775	2					
ANR	4996454	Identifier	CurrUserHandle		4995775	0					
ANR	4996455	ExpressionStatement	UserIdsInited = true	450:4:12840:12860	4995775	1	True				
ANR	4996456	AssignmentExpression	UserIdsInited = true		4995775	0		=			
ANR	4996457	Identifier	UserIdsInited		4995775	0					
ANR	4996458	Identifier	true		4995775	1					
ANR	4996459	IfStatement	"if ( got_password_from_credd && param_boolean ( ""CREDD_CACHE_LOCALLY"" , false ) )"		4995775	2					
ANR	4996460	Condition	"got_password_from_credd && param_boolean ( ""CREDD_CACHE_LOCALLY"" , false )"	454:9:13000:13089	4995775	0	True				
ANR	4996461	AndExpression	"got_password_from_credd && param_boolean ( ""CREDD_CACHE_LOCALLY"" , false )"		4995775	0		&&			
ANR	4996462	Identifier	got_password_from_credd		4995775	0					
ANR	4996463	CallExpression	"param_boolean ( ""CREDD_CACHE_LOCALLY"" , false )"		4995775	1					
ANR	4996464	Callee	param_boolean		4995775	0					
ANR	4996465	Identifier	param_boolean		4995775	0					
ANR	4996466	ArgumentList	"""CREDD_CACHE_LOCALLY"""		4995775	1					
ANR	4996467	Argument	"""CREDD_CACHE_LOCALLY"""		4995775	0					
ANR	4996468	PrimaryExpression	"""CREDD_CACHE_LOCALLY"""		4995775	0					
ANR	4996469	Argument	false		4995775	1					
ANR	4996470	Identifier	false		4995775	0					
ANR	4996471	CompoundStatement		231:66:7640:7640	4995775	1					
ANR	4996472	ExpressionStatement	"cache_credd_locally ( username , domain , pw )"	456:20:13115:13156	4995775	0	True				
ANR	4996473	CallExpression	"cache_credd_locally ( username , domain , pw )"		4995775	0					
ANR	4996474	Callee	cache_credd_locally		4995775	0					
ANR	4996475	Identifier	cache_credd_locally		4995775	0					
ANR	4996476	ArgumentList	username		4995775	1					
ANR	4996477	Argument	username		4995775	0					
ANR	4996478	Identifier	username		4995775	0					
ANR	4996479	Argument	domain		4995775	1					
ANR	4996480	Identifier	domain		4995775	0					
ANR	4996481	Argument	pw		4995775	2					
ANR	4996482	Identifier	pw		4995775	0					
ANR	4996483	ExpressionStatement	retval = 1	459:4:13185:13195	4995775	3	True				
ANR	4996484	AssignmentExpression	retval = 1		4995775	0		=			
ANR	4996485	Identifier	retval		4995775	0					
ANR	4996486	PrimaryExpression	1		4995775	1					
ANR	4996487	ExpressionStatement	"SecureZeroMemory ( pw , 255 )"	463:3:13262:13287	4995775	8	True				
ANR	4996488	CallExpression	"SecureZeroMemory ( pw , 255 )"		4995775	0					
ANR	4996489	Callee	SecureZeroMemory		4995775	0					
ANR	4996490	Identifier	SecureZeroMemory		4995775	0					
ANR	4996491	ArgumentList	pw		4995775	1					
ANR	4996492	Argument	pw		4995775	0					
ANR	4996493	Identifier	pw		4995775	0					
ANR	4996494	Argument	255		4995775	1					
ANR	4996495	PrimaryExpression	255		4995775	0					
ANR	4996496	ReturnStatement	return retval ;	465:3:13293:13306	4995775	9	True				
ANR	4996497	Identifier	retval		4995775	0					
ANR	4996498	ElseStatement	else		4995775	0					
ANR	4996499	CompoundStatement		244:8:7870:7870	4995775	0					
ANR	4996500	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Using dynamic user account.\\n"" )"	473:2:13383:13436	4995775	0	True				
ANR	4996501	CallExpression	"dprintf ( D_FULLDEBUG , ""Using dynamic user account.\\n"" )"		4995775	0					
ANR	4996502	Callee	dprintf		4995775	0					
ANR	4996503	Identifier	dprintf		4995775	0					
ANR	4996504	ArgumentList	D_FULLDEBUG		4995775	1					
ANR	4996505	Argument	D_FULLDEBUG		4995775	0					
ANR	4996506	Identifier	D_FULLDEBUG		4995775	0					
ANR	4996507	Argument	"""Using dynamic user account.\\n"""		4995775	1					
ANR	4996508	PrimaryExpression	"""Using dynamic user account.\\n"""		4995775	0					
ANR	4996509	ExpressionStatement	myDynuser -> reset ( )	475:2:13441:13459	4995775	1	True				
ANR	4996510	CallExpression	myDynuser -> reset ( )		4995775	0					
ANR	4996511	Callee	myDynuser -> reset		4995775	0					
ANR	4996512	PtrMemberAccess	myDynuser -> reset		4995775	0					
ANR	4996513	Identifier	myDynuser		4995775	0					
ANR	4996514	Identifier	reset		4995775	1					
ANR	4996515	ArgumentList			4995775	1					
ANR	4996516	IfStatement	if ( ! myDynuser -> init_user ( ) )		4995775	2					
ANR	4996517	Condition	! myDynuser -> init_user ( )	480:7:13578:13600	4995775	0	True				
ANR	4996518	UnaryOperationExpression	! myDynuser -> init_user ( )		4995775	0					
ANR	4996519	UnaryOperator	!		4995775	0					
ANR	4996520	CallExpression	myDynuser -> init_user ( )		4995775	1					
ANR	4996521	Callee	myDynuser -> init_user		4995775	0					
ANR	4996522	PtrMemberAccess	myDynuser -> init_user		4995775	0					
ANR	4996523	Identifier	myDynuser		4995775	0					
ANR	4996524	Identifier	init_user		4995775	1					
ANR	4996525	ArgumentList			4995775	1					
ANR	4996526	CompoundStatement		256:33:8151:8151	4995775	1					
ANR	4996527	ExpressionStatement	"EXCEPT ( ""Failed to create a user nobody"" )"	482:3:13656:13696	4995775	0	True				
ANR	4996528	CallExpression	"EXCEPT ( ""Failed to create a user nobody"" )"		4995775	0					
ANR	4996529	Callee	EXCEPT		4995775	0					
ANR	4996530	Identifier	EXCEPT		4995775	0					
ANR	4996531	ArgumentList	"""Failed to create a user nobody"""		4995775	1					
ANR	4996532	Argument	"""Failed to create a user nobody"""		4995775	0					
ANR	4996533	PrimaryExpression	"""Failed to create a user nobody"""		4995775	0					
ANR	4996534	IfStatement	if ( UserLoginName )		4995775	3					
ANR	4996535	Condition	UserLoginName	485:6:13711:13723	4995775	0	True				
ANR	4996536	Identifier	UserLoginName		4995775	0					
ANR	4996537	CompoundStatement		261:21:8273:8273	4995775	1					
ANR	4996538	ExpressionStatement	free ( UserLoginName )	486:3:13731:13750	4995775	0	True				
ANR	4996539	CallExpression	free ( UserLoginName )		4995775	0					
ANR	4996540	Callee	free		4995775	0					
ANR	4996541	Identifier	free		4995775	0					
ANR	4996542	ArgumentList	UserLoginName		4995775	1					
ANR	4996543	Argument	UserLoginName		4995775	0					
ANR	4996544	Identifier	UserLoginName		4995775	0					
ANR	4996545	ExpressionStatement	UserDomainName = NULL	487:3:13755:13776	4995775	1	True				
ANR	4996546	AssignmentExpression	UserDomainName = NULL		4995775	0		=			
ANR	4996547	Identifier	UserDomainName		4995775	0					
ANR	4996548	Identifier	NULL		4995775	1					
ANR	4996549	IfStatement	if ( UserDomainName )		4995775	4					
ANR	4996550	Condition	UserDomainName	489:6:13788:13801	4995775	0	True				
ANR	4996551	Identifier	UserDomainName		4995775	0					
ANR	4996552	CompoundStatement		265:22:8351:8351	4995775	1					
ANR	4996553	ExpressionStatement	free ( UserDomainName )	490:3:13809:13829	4995775	0	True				
ANR	4996554	CallExpression	free ( UserDomainName )		4995775	0					
ANR	4996555	Callee	free		4995775	0					
ANR	4996556	Identifier	free		4995775	0					
ANR	4996557	ArgumentList	UserDomainName		4995775	1					
ANR	4996558	Argument	UserDomainName		4995775	0					
ANR	4996559	Identifier	UserDomainName		4995775	0					
ANR	4996560	ExpressionStatement	UserDomainName = NULL	491:3:13834:13855	4995775	1	True				
ANR	4996561	AssignmentExpression	UserDomainName = NULL		4995775	0		=			
ANR	4996562	Identifier	UserDomainName		4995775	0					
ANR	4996563	Identifier	NULL		4995775	1					
ANR	4996564	ExpressionStatement	UserLoginName = strdup ( myDynuser -> get_accountname ( ) )	494:2:13864:13918	4995775	5	True				
ANR	4996565	AssignmentExpression	UserLoginName = strdup ( myDynuser -> get_accountname ( ) )		4995775	0		=			
ANR	4996566	Identifier	UserLoginName		4995775	0					
ANR	4996567	CallExpression	strdup ( myDynuser -> get_accountname ( ) )		4995775	1					
ANR	4996568	Callee	strdup		4995775	0					
ANR	4996569	Identifier	strdup		4995775	0					
ANR	4996570	ArgumentList	myDynuser -> get_accountname ( )		4995775	1					
ANR	4996571	Argument	myDynuser -> get_accountname ( )		4995775	0					
ANR	4996572	CallExpression	myDynuser -> get_accountname ( )		4995775	0					
ANR	4996573	Callee	myDynuser -> get_accountname		4995775	0					
ANR	4996574	PtrMemberAccess	myDynuser -> get_accountname		4995775	0					
ANR	4996575	Identifier	myDynuser		4995775	0					
ANR	4996576	Identifier	get_accountname		4995775	1					
ANR	4996577	ArgumentList			4995775	1					
ANR	4996578	ExpressionStatement	"UserDomainName = strdup ( ""."" )"	495:2:13922:13952	4995775	6	True				
ANR	4996579	AssignmentExpression	"UserDomainName = strdup ( ""."" )"		4995775	0		=			
ANR	4996580	Identifier	UserDomainName		4995775	0					
ANR	4996581	CallExpression	"strdup ( ""."" )"		4995775	1					
ANR	4996582	Callee	strdup		4995775	0					
ANR	4996583	Identifier	strdup		4995775	0					
ANR	4996584	ArgumentList	"""."""		4995775	1					
ANR	4996585	Argument	"""."""		4995775	0					
ANR	4996586	PrimaryExpression	"""."""		4995775	0					
ANR	4996587	ExpressionStatement	CurrUserHandle = myDynuser -> get_token ( )	498:2:14010:14049	4995775	7	True				
ANR	4996588	AssignmentExpression	CurrUserHandle = myDynuser -> get_token ( )		4995775	0		=			
ANR	4996589	Identifier	CurrUserHandle		4995775	0					
ANR	4996590	CallExpression	myDynuser -> get_token ( )		4995775	1					
ANR	4996591	Callee	myDynuser -> get_token		4995775	0					
ANR	4996592	PtrMemberAccess	myDynuser -> get_token		4995775	0					
ANR	4996593	Identifier	myDynuser		4995775	0					
ANR	4996594	Identifier	get_token		4995775	1					
ANR	4996595	ArgumentList			4995775	1					
ANR	4996596	ExpressionStatement	"cached_tokens . storeToken ( UserLoginName , UserDomainName , CurrUserHandle )"	501:2:14092:14171	4995775	8	True				
ANR	4996597	CallExpression	"cached_tokens . storeToken ( UserLoginName , UserDomainName , CurrUserHandle )"		4995775	0					
ANR	4996598	Callee	cached_tokens . storeToken		4995775	0					
ANR	4996599	MemberAccess	cached_tokens . storeToken		4995775	0					
ANR	4996600	Identifier	cached_tokens		4995775	0					
ANR	4996601	Identifier	storeToken		4995775	1					
ANR	4996602	ArgumentList	UserLoginName		4995775	1					
ANR	4996603	Argument	UserLoginName		4995775	0					
ANR	4996604	Identifier	UserLoginName		4995775	0					
ANR	4996605	Argument	UserDomainName		4995775	1					
ANR	4996606	Identifier	UserDomainName		4995775	0					
ANR	4996607	Argument	CurrUserHandle		4995775	2					
ANR	4996608	Identifier	CurrUserHandle		4995775	0					
ANR	4996609	ExpressionStatement	UserIdsInited = true	503:2:14175:14195	4995775	9	True				
ANR	4996610	AssignmentExpression	UserIdsInited = true		4995775	0		=			
ANR	4996611	Identifier	UserIdsInited		4995775	0					
ANR	4996612	Identifier	true		4995775	1					
ANR	4996613	ReturnStatement	return 1 ;	504:2:14199:14207	4995775	10	True				
ANR	4996614	PrimaryExpression	1		4995775	0					
ANR	4996615	ReturnType	int		4995775	1					
ANR	4996616	Identifier	init_user_ids		4995775	2					
ANR	4996617	ParameterList	"const char username [ ] , const char domain [ ]"		4995775	3					
ANR	4996618	Parameter	const char username [ ]	224:14:5407:5427	4995775	0	True				
ANR	4996619	ParameterType	const char [ ]		4995775	0					
ANR	4996620	Identifier	username		4995775	1					
ANR	4996621	Parameter	const char domain [ ]	224:37:5430:5448	4995775	1	True				
ANR	4996622	ParameterType	const char [ ]		4995775	0					
ANR	4996623	Identifier	domain		4995775	1					
ANR	4996624	CFGEntryNode	ENTRY		4995775		True				
ANR	4996625	CFGExitNode	EXIT		4995775		True				
ANR	4996626	Symbol	CurrUserHandle		4995775						
ANR	4996627	Symbol	myDynuser		4995775						
ANR	4996628	Symbol	cached_tokens . getToken		4995775						
ANR	4996629	Symbol	dom		4995775						
ANR	4996630	Symbol	my_domainname		4995775						
ANR	4996631	Symbol	pw		4995775						
ANR	4996632	Symbol	LOGON32_LOGON_INTERACTIVE		4995775						
ANR	4996633	Symbol	credd_host		4995775						
ANR	4996634	Symbol	w_fullname		4995775						
ANR	4996635	Symbol	myDynuser -> get_token		4995775						
ANR	4996636	Symbol	myDynuser -> get_accountname		4995775						
ANR	4996637	Symbol	lsaMan		4995775						
ANR	4996638	Symbol	myusr		4995775						
ANR	4996639	Symbol	can_switch_ids		4995775						
ANR	4996640	Symbol	param		4995775						
ANR	4996641	Symbol	got_password_from_credd		4995775						
ANR	4996642	Symbol	get_password_from_credd		4995775						
ANR	4996643	Symbol	UserLoginName		4995775						
ANR	4996644	Symbol	LogonUser		4995775						
ANR	4996645	Symbol	strcasecmp		4995775						
ANR	4996646	Symbol	strcmp		4995775						
ANR	4996647	Symbol	UserDomainName		4995775						
ANR	4996648	Symbol	NULL		4995775						
ANR	4996649	Symbol	my_usertoken		4995775						
ANR	4996650	Symbol	& CurrUserHandle		4995775						
ANR	4996651	Symbol	lsaMan . query		4995775						
ANR	4996652	Symbol	UserIdsInited		4995775						
ANR	4996653	Symbol	false		4995775						
ANR	4996654	Symbol	D_ALWAYS		4995775						
ANR	4996655	Symbol	LOGON32_PROVIDER_DEFAULT		4995775						
ANR	4996656	Symbol	D_FULLDEBUG		4995775						
ANR	4996657	Symbol	param_boolean		4995775						
ANR	4996658	Symbol	my_username		4995775						
ANR	4996659	Symbol	myDynuser -> init_user		4995775						
ANR	4996660	Symbol	retval		4995775						
ANR	4996661	Symbol	mydom		4995775						
ANR	4996662	Symbol	* myDynuser		4995775						
ANR	4996663	Symbol	GetLastError		4995775						
ANR	4996664	Symbol	domain		4995775						
ANR	4996665	Symbol	got_password		4995775						
ANR	4996666	Symbol	wcslen		4995775						
ANR	4996667	Symbol	true		4995775						
ANR	4996668	Symbol	w_pw		4995775						
ANR	4996669	Symbol	strdup		4995775						
ANR	4996670	Symbol	user		4995775						
ANR	4996671	Symbol	username		4995775						
ANR	4996672	Symbol	cached_tokens		4995775						
ANR	4996673	Function	_set_priv	508:0:14215:16586							
ANR	4996674	FunctionDef	"_set_priv (priv_state s , const char * file , int line , int dologging)"		4996673	0					
ANR	4996675	CompoundStatement		510:0:14293:16586	4996673	0					
ANR	4996676	IdentifierDeclStatement	priv_state PrevPrivState = CurrentPrivState ;	511:1:14296:14339	4996673	0	True				
ANR	4996677	IdentifierDecl	PrevPrivState = CurrentPrivState		4996673	0					
ANR	4996678	IdentifierDeclType	priv_state		4996673	0					
ANR	4996679	Identifier	PrevPrivState		4996673	1					
ANR	4996680	AssignmentExpression	PrevPrivState = CurrentPrivState		4996673	2		=			
ANR	4996681	Identifier	CurrentPrivState		4996673	0					
ANR	4996682	Identifier	CurrentPrivState		4996673	1					
ANR	4996683	IfStatement	if ( ( s == PRIV_CONDOR || s == PRIV_ROOT ) && ( CurrentPrivState == PRIV_CONDOR || CurrentPrivState == PRIV_ROOT ) )		4996673	1					
ANR	4996684	Condition	( s == PRIV_CONDOR || s == PRIV_ROOT ) && ( CurrentPrivState == PRIV_CONDOR || CurrentPrivState == PRIV_ROOT )	522:6:14715:14828	4996673	0	True				
ANR	4996685	AndExpression	( s == PRIV_CONDOR || s == PRIV_ROOT ) && ( CurrentPrivState == PRIV_CONDOR || CurrentPrivState == PRIV_ROOT )		4996673	0		&&			
ANR	4996686	OrExpression	s == PRIV_CONDOR || s == PRIV_ROOT		4996673	0		||			
ANR	4996687	EqualityExpression	s == PRIV_CONDOR		4996673	0		==			
ANR	4996688	Identifier	s		4996673	0					
ANR	4996689	Identifier	PRIV_CONDOR		4996673	1					
ANR	4996690	EqualityExpression	s == PRIV_ROOT		4996673	1		==			
ANR	4996691	Identifier	s		4996673	0					
ANR	4996692	Identifier	PRIV_ROOT		4996673	1					
ANR	4996693	OrExpression	CurrentPrivState == PRIV_CONDOR || CurrentPrivState == PRIV_ROOT		4996673	1		||			
ANR	4996694	EqualityExpression	CurrentPrivState == PRIV_CONDOR		4996673	0		==			
ANR	4996695	Identifier	CurrentPrivState		4996673	0					
ANR	4996696	Identifier	PRIV_CONDOR		4996673	1					
ANR	4996697	EqualityExpression	CurrentPrivState == PRIV_ROOT		4996673	1		==			
ANR	4996698	Identifier	CurrentPrivState		4996673	0					
ANR	4996699	Identifier	PRIV_ROOT		4996673	1					
ANR	4996700	CompoundStatement		15:1:539:539	4996673	1					
ANR	4996701	GotoStatement	goto logandreturn ;	525:2:14837:14854	4996673	0	True				
ANR	4996702	Identifier	logandreturn		4996673	0					
ANR	4996703	IfStatement	if ( s == CurrentPrivState )		4996673	2					
ANR	4996704	Condition	s == CurrentPrivState	529:5:14931:14951	4996673	0	True				
ANR	4996705	EqualityExpression	s == CurrentPrivState		4996673	0		==			
ANR	4996706	Identifier	s		4996673	0					
ANR	4996707	Identifier	CurrentPrivState		4996673	1					
ANR	4996708	CompoundStatement		20:28:660:660	4996673	1					
ANR	4996709	GotoStatement	goto logandreturn ;	530:2:14958:14975	4996673	0	True				
ANR	4996710	Identifier	logandreturn		4996673	0					
ANR	4996711	IfStatement	if ( CurrentPrivState == PRIV_USER_FINAL )		4996673	3					
ANR	4996712	Condition	CurrentPrivState == PRIV_USER_FINAL	533:5:14986:15020	4996673	0	True				
ANR	4996713	EqualityExpression	CurrentPrivState == PRIV_USER_FINAL		4996673	0		==			
ANR	4996714	Identifier	CurrentPrivState		4996673	0					
ANR	4996715	Identifier	PRIV_USER_FINAL		4996673	1					
ANR	4996716	CompoundStatement		24:42:729:729	4996673	1					
ANR	4996717	IfStatement	if ( dologging )		4996673	0					
ANR	4996718	Condition	dologging	534:7:15032:15040	4996673	0	True				
ANR	4996719	Identifier	dologging		4996673	0					
ANR	4996720	CompoundStatement		25:19:750:750	4996673	1					
ANR	4996721	ExpressionStatement	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_USER_FINAL\\n"" )"	535:3:15049:15124	4996673	0	True				
ANR	4996722	CallExpression	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_USER_FINAL\\n"" )"		4996673	0					
ANR	4996723	Callee	dprintf		4996673	0					
ANR	4996724	Identifier	dprintf		4996673	0					
ANR	4996725	ArgumentList	D_ALWAYS		4996673	1					
ANR	4996726	Argument	D_ALWAYS		4996673	0					
ANR	4996727	Identifier	D_ALWAYS		4996673	0					
ANR	4996728	Argument	"""warning: attempted switch out of PRIV_USER_FINAL\\n"""		4996673	1					
ANR	4996729	PrimaryExpression	"""warning: attempted switch out of PRIV_USER_FINAL\\n"""		4996673	0					
ANR	4996730	ReturnStatement	return PRIV_USER_FINAL ;	538:2:15132:15154	4996673	1	True				
ANR	4996731	Identifier	PRIV_USER_FINAL		4996673	0					
ANR	4996732	IfStatement	if ( CurrentPrivState == PRIV_CONDOR_FINAL )		4996673	4					
ANR	4996733	Condition	CurrentPrivState == PRIV_CONDOR_FINAL	541:5:15165:15201	4996673	0	True				
ANR	4996734	EqualityExpression	CurrentPrivState == PRIV_CONDOR_FINAL		4996673	0		==			
ANR	4996735	Identifier	CurrentPrivState		4996673	0					
ANR	4996736	Identifier	PRIV_CONDOR_FINAL		4996673	1					
ANR	4996737	CompoundStatement		32:44:910:910	4996673	1					
ANR	4996738	IfStatement	if ( dologging )		4996673	0					
ANR	4996739	Condition	dologging	542:7:15213:15221	4996673	0	True				
ANR	4996740	Identifier	dologging		4996673	0					
ANR	4996741	CompoundStatement		33:19:931:931	4996673	1					
ANR	4996742	ExpressionStatement	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"" )"	543:3:15230:15307	4996673	0	True				
ANR	4996743	CallExpression	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"" )"		4996673	0					
ANR	4996744	Callee	dprintf		4996673	0					
ANR	4996745	Identifier	dprintf		4996673	0					
ANR	4996746	ArgumentList	D_ALWAYS		4996673	1					
ANR	4996747	Argument	D_ALWAYS		4996673	0					
ANR	4996748	Identifier	D_ALWAYS		4996673	0					
ANR	4996749	Argument	"""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"""		4996673	1					
ANR	4996750	PrimaryExpression	"""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"""		4996673	0					
ANR	4996751	ReturnStatement	return PRIV_CONDOR_FINAL ;	546:2:15315:15339	4996673	1	True				
ANR	4996752	Identifier	PRIV_CONDOR_FINAL		4996673	0					
ANR	4996753	ExpressionStatement	CurrentPrivState = s	548:1:15345:15365	4996673	5	True				
ANR	4996754	AssignmentExpression	CurrentPrivState = s		4996673	0		=			
ANR	4996755	Identifier	CurrentPrivState		4996673	0					
ANR	4996756	Identifier	s		4996673	1					
ANR	4996757	IfStatement	if ( can_switch_ids ( ) )		4996673	6					
ANR	4996758	Condition	can_switch_ids ( )	549:5:15372:15387	4996673	0	True				
ANR	4996759	CallExpression	can_switch_ids ( )		4996673	0					
ANR	4996760	Callee	can_switch_ids		4996673	0					
ANR	4996761	Identifier	can_switch_ids		4996673	0					
ANR	4996762	ArgumentList			4996673	1					
ANR	4996763	CompoundStatement		40:23:1096:1096	4996673	1					
ANR	4996764	SwitchStatement	switch ( s )		4996673	0					
ANR	4996765	Condition	s	550:10:15402:15402	4996673	0	True				
ANR	4996766	Identifier	s		4996673	0					
ANR	4996767	CompoundStatement		41:13:1111:1111	4996673	1					
ANR	4996768	Label	case PRIV_ROOT :	551:2:15409:15423	4996673	0	True				
ANR	4996769	Identifier	PRIV_ROOT		4996673	0					
ANR	4996770	Label	case PRIV_CONDOR :	552:2:15427:15443	4996673	1	True				
ANR	4996771	Identifier	PRIV_CONDOR		4996673	0					
ANR	4996772	Label	case PRIV_CONDOR_FINAL :	553:2:15447:15469	4996673	2	True				
ANR	4996773	Identifier	PRIV_CONDOR_FINAL		4996673	0					
ANR	4996774	ExpressionStatement	RevertToSelf ( )	554:3:15474:15488	4996673	3	True				
ANR	4996775	CallExpression	RevertToSelf ( )		4996673	0					
ANR	4996776	Callee	RevertToSelf		4996673	0					
ANR	4996777	Identifier	RevertToSelf		4996673	0					
ANR	4996778	ArgumentList			4996673	1					
ANR	4996779	BreakStatement	break ;	555:3:15493:15498	4996673	4	True				
ANR	4996780	Label	case PRIV_USER :	556:2:15502:15516	4996673	5	True				
ANR	4996781	Identifier	PRIV_USER		4996673	0					
ANR	4996782	Label	case PRIV_USER_FINAL :	557:2:15520:15540	4996673	6	True				
ANR	4996783	Identifier	PRIV_USER_FINAL		4996673	0					
ANR	4996784	IfStatement	if ( dologging )		4996673	7					
ANR	4996785	Condition	dologging	558:8:15550:15558	4996673	0	True				
ANR	4996786	Identifier	dologging		4996673	0					
ANR	4996787	CompoundStatement		49:20:1268:1268	4996673	1					
ANR	4996788	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""TokenCache contents: \\n%s"" , cached_tokens . cacheToString ( ) . Value ( ) )"	559:4:15568:15670	4996673	0	True				
ANR	4996789	CallExpression	"dprintf ( D_FULLDEBUG , ""TokenCache contents: \\n%s"" , cached_tokens . cacheToString ( ) . Value ( ) )"		4996673	0					
ANR	4996790	Callee	dprintf		4996673	0					
ANR	4996791	Identifier	dprintf		4996673	0					
ANR	4996792	ArgumentList	D_FULLDEBUG		4996673	1					
ANR	4996793	Argument	D_FULLDEBUG		4996673	0					
ANR	4996794	Identifier	D_FULLDEBUG		4996673	0					
ANR	4996795	Argument	"""TokenCache contents: \\n%s"""		4996673	1					
ANR	4996796	PrimaryExpression	"""TokenCache contents: \\n%s"""		4996673	0					
ANR	4996797	Argument	cached_tokens . cacheToString ( ) . Value ( )		4996673	2					
ANR	4996798	CallExpression	cached_tokens . cacheToString ( ) . Value ( )		4996673	0					
ANR	4996799	Callee	cached_tokens . cacheToString ( ) . Value		4996673	0					
ANR	4996800	MemberAccess	cached_tokens . cacheToString ( ) . Value		4996673	0					
ANR	4996801	CallExpression	cached_tokens . cacheToString ( )		4996673	0					
ANR	4996802	Callee	cached_tokens . cacheToString		4996673	0					
ANR	4996803	MemberAccess	cached_tokens . cacheToString		4996673	0					
ANR	4996804	Identifier	cached_tokens		4996673	0					
ANR	4996805	Identifier	cacheToString		4996673	1					
ANR	4996806	ArgumentList			4996673	1					
ANR	4996807	Identifier	Value		4996673	1					
ANR	4996808	ArgumentList			4996673	1					
ANR	4996809	IfStatement	if ( CurrUserHandle )		4996673	8					
ANR	4996810	Condition	CurrUserHandle	563:8:15685:15698	4996673	0	True				
ANR	4996811	Identifier	CurrUserHandle		4996673	0					
ANR	4996812	CompoundStatement		54:25:1408:1408	4996673	1					
ANR	4996813	IfStatement	if ( PrevPrivState == PRIV_UNKNOWN )		4996673	0					
ANR	4996814	Condition	PrevPrivState == PRIV_UNKNOWN	564:9:15713:15741	4996673	0	True				
ANR	4996815	EqualityExpression	PrevPrivState == PRIV_UNKNOWN		4996673	0		==			
ANR	4996816	Identifier	PrevPrivState		4996673	0					
ANR	4996817	Identifier	PRIV_UNKNOWN		4996673	1					
ANR	4996818	CompoundStatement		55:41:1451:1451	4996673	1					
ANR	4996819	ExpressionStatement	RevertToSelf ( )	566:5:15817:15831	4996673	0	True				
ANR	4996820	CallExpression	RevertToSelf ( )		4996673	0					
ANR	4996821	Callee	RevertToSelf		4996673	0					
ANR	4996822	Identifier	RevertToSelf		4996673	0					
ANR	4996823	ArgumentList			4996673	1					
ANR	4996824	ExpressionStatement	ImpersonateLoggedOnUser ( CurrUserHandle )	568:4:15843:15882	4996673	1	True				
ANR	4996825	CallExpression	ImpersonateLoggedOnUser ( CurrUserHandle )		4996673	0					
ANR	4996826	Callee	ImpersonateLoggedOnUser		4996673	0					
ANR	4996827	Identifier	ImpersonateLoggedOnUser		4996673	0					
ANR	4996828	ArgumentList	CurrUserHandle		4996673	1					
ANR	4996829	Argument	CurrUserHandle		4996673	0					
ANR	4996830	Identifier	CurrUserHandle		4996673	0					
ANR	4996831	ElseStatement	else		4996673	0					
ANR	4996832	CompoundStatement		60:10:1600:1600	4996673	0					
ANR	4996833	IfStatement	if ( ! UserIdsInited )		4996673	0					
ANR	4996834	Condition	! UserIdsInited	572:9:16039:16053	4996673	0	True				
ANR	4996835	UnaryOperationExpression	! UserIdsInited		4996673	0					
ANR	4996836	UnaryOperator	!		4996673	0					
ANR	4996837	Identifier	UserIdsInited		4996673	1					
ANR	4996838	CompoundStatement		63:26:1762:1762	4996673	1					
ANR	4996839	IfStatement	if ( dologging )		4996673	0					
ANR	4996840	Condition	dologging	573:9:16067:16075	4996673	0	True				
ANR	4996841	Identifier	dologging		4996673	0					
ANR	4996842	CompoundStatement		64:20:1784:1784	4996673	1					
ANR	4996843	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_user_priv() called when UserIds not inited!\\n"" )"	574:6:16086:16156	4996673	0	True				
ANR	4996844	CallExpression	"dprintf ( D_ALWAYS , ""set_user_priv() called when UserIds not inited!\\n"" )"		4996673	0					
ANR	4996845	Callee	dprintf		4996673	0					
ANR	4996846	Identifier	dprintf		4996673	0					
ANR	4996847	ArgumentList	D_ALWAYS		4996673	1					
ANR	4996848	Argument	D_ALWAYS		4996673	0					
ANR	4996849	Identifier	D_ALWAYS		4996673	0					
ANR	4996850	Argument	"""set_user_priv() called when UserIds not inited!\\n"""		4996673	1					
ANR	4996851	PrimaryExpression	"""set_user_priv() called when UserIds not inited!\\n"""		4996673	0					
ANR	4996852	ElseStatement	else		4996673	0					
ANR	4996853	CompoundStatement		67:12:1883:1883	4996673	0					
ANR	4996854	ExpressionStatement	"EXCEPT ( ""set_user_priv() failed!"" )"	578:5:16246:16279	4996673	0	True				
ANR	4996855	CallExpression	"EXCEPT ( ""set_user_priv() failed!"" )"		4996673	0					
ANR	4996856	Callee	EXCEPT		4996673	0					
ANR	4996857	Identifier	EXCEPT		4996673	0					
ANR	4996858	ArgumentList	"""set_user_priv() failed!"""		4996673	1					
ANR	4996859	Argument	"""set_user_priv() failed!"""		4996673	0					
ANR	4996860	PrimaryExpression	"""set_user_priv() failed!"""		4996673	0					
ANR	4996861	BreakStatement	break ;	581:3:16295:16300	4996673	9	True				
ANR	4996862	Label	case PRIV_UNKNOWN :	582:2:16304:16321	4996673	10	True				
ANR	4996863	Identifier	PRIV_UNKNOWN		4996673	0					
ANR	4996864	BreakStatement	break ;	583:3:16349:16354	4996673	11	True				
ANR	4996865	Label	default :	584:2:16358:16365	4996673	12	True				
ANR	4996866	Identifier	default		4996673	0					
ANR	4996867	IfStatement	if ( dologging )		4996673	13					
ANR	4996868	Condition	dologging	585:8:16375:16383	4996673	0	True				
ANR	4996869	Identifier	dologging		4996673	0					
ANR	4996870	CompoundStatement		76:20:2093:2093	4996673	1					
ANR	4996871	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_priv: Unknown priv state %d\\n"" , ( int ) s )"	586:4:16393:16456	4996673	0	True				
ANR	4996872	CallExpression	"dprintf ( D_ALWAYS , ""set_priv: Unknown priv state %d\\n"" , ( int ) s )"		4996673	0					
ANR	4996873	Callee	dprintf		4996673	0					
ANR	4996874	Identifier	dprintf		4996673	0					
ANR	4996875	ArgumentList	D_ALWAYS		4996673	1					
ANR	4996876	Argument	D_ALWAYS		4996673	0					
ANR	4996877	Identifier	D_ALWAYS		4996673	0					
ANR	4996878	Argument	"""set_priv: Unknown priv state %d\\n"""		4996673	1					
ANR	4996879	PrimaryExpression	"""set_priv: Unknown priv state %d\\n"""		4996673	0					
ANR	4996880	Argument	( int ) s		4996673	2					
ANR	4996881	CastExpression	( int ) s		4996673	0					
ANR	4996882	CastTarget	int		4996673	0					
ANR	4996883	Identifier	s		4996673	1					
ANR	4996884	Label	logandreturn :	591:0:16471:16483	4996673	7	True				
ANR	4996885	Identifier	logandreturn		4996673	0					
ANR	4996886	IfStatement	if ( dologging )		4996673	8					
ANR	4996887	Condition	dologging	592:5:16490:16498	4996673	0	True				
ANR	4996888	Identifier	dologging		4996673	0					
ANR	4996889	CompoundStatement		83:16:2207:2207	4996673	1					
ANR	4996890	ExpressionStatement	"log_priv ( PrevPrivState , CurrentPrivState , file , line )"	593:2:16505:16558	4996673	0	True				
ANR	4996891	CallExpression	"log_priv ( PrevPrivState , CurrentPrivState , file , line )"		4996673	0					
ANR	4996892	Callee	log_priv		4996673	0					
ANR	4996893	Identifier	log_priv		4996673	0					
ANR	4996894	ArgumentList	PrevPrivState		4996673	1					
ANR	4996895	Argument	PrevPrivState		4996673	0					
ANR	4996896	Identifier	PrevPrivState		4996673	0					
ANR	4996897	Argument	CurrentPrivState		4996673	1					
ANR	4996898	Identifier	CurrentPrivState		4996673	0					
ANR	4996899	Argument	file		4996673	2					
ANR	4996900	Identifier	file		4996673	0					
ANR	4996901	Argument	line		4996673	3					
ANR	4996902	Identifier	line		4996673	0					
ANR	4996903	ReturnStatement	return PrevPrivState ;	595:1:16564:16584	4996673	9	True				
ANR	4996904	Identifier	PrevPrivState		4996673	0					
ANR	4996905	ReturnType	priv_state		4996673	1					
ANR	4996906	Identifier	_set_priv		4996673	2					
ANR	4996907	ParameterList	"priv_state s , const char * file , int line , int dologging"		4996673	3					
ANR	4996908	Parameter	priv_state s	509:10:14236:14247	4996673	0	True				
ANR	4996909	ParameterType	priv_state		4996673	0					
ANR	4996910	Identifier	s		4996673	1					
ANR	4996911	Parameter	const char * file	509:24:14250:14265	4996673	1	True				
ANR	4996912	ParameterType	const char *		4996673	0					
ANR	4996913	Identifier	file		4996673	1					
ANR	4996914	Parameter	int line	509:42:14268:14275	4996673	2	True				
ANR	4996915	ParameterType	int		4996673	0					
ANR	4996916	Identifier	line		4996673	1					
ANR	4996917	Parameter	int dologging	509:52:14278:14290	4996673	3	True				
ANR	4996918	ParameterType	int		4996673	0					
ANR	4996919	Identifier	dologging		4996673	1					
ANR	4996920	CFGEntryNode	ENTRY		4996673		True				
ANR	4996921	CFGExitNode	EXIT		4996673		True				
ANR	4996922	Symbol	CurrUserHandle		4996673						
ANR	4996923	Symbol	cached_tokens . cacheToString ( ) . Value		4996673						
ANR	4996924	Symbol	line		4996673						
ANR	4996925	Symbol	CurrentPrivState		4996673						
ANR	4996926	Symbol	D_ALWAYS		4996673						
ANR	4996927	Symbol	UserIdsInited		4996673						
ANR	4996928	Symbol	D_FULLDEBUG		4996673						
ANR	4996929	Symbol	PRIV_UNKNOWN		4996673						
ANR	4996930	Symbol	dologging		4996673						
ANR	4996931	Symbol	PRIV_USER_FINAL		4996673						
ANR	4996932	Symbol	s		4996673						
ANR	4996933	Symbol	file		4996673						
ANR	4996934	Symbol	PrevPrivState		4996673						
ANR	4996935	Symbol	can_switch_ids		4996673						
ANR	4996936	Symbol	PRIV_ROOT		4996673						
ANR	4996937	Symbol	PRIV_CONDOR_FINAL		4996673						
ANR	4996938	Symbol	cached_tokens . cacheToString		4996673						
ANR	4996939	Symbol	PRIV_CONDOR		4996673						
ANR	4996940	Symbol	cached_tokens		4996673						
ANR	4996941	Function	get_condor_username	603:0:16845:17899							
ANR	4996942	FunctionDef	get_condor_username ()		4996941	0					
ANR	4996943	CompoundStatement		604:0:16880:17899	4996941	0					
ANR	4996944	IdentifierDeclStatement	HANDLE hProcess = NULL ;	605:1:16883:16905	4996941	0	True				
ANR	4996945	IdentifierDecl	hProcess = NULL		4996941	0					
ANR	4996946	IdentifierDeclType	HANDLE		4996941	0					
ANR	4996947	Identifier	hProcess		4996941	1					
ANR	4996948	AssignmentExpression	hProcess = NULL		4996941	2		=			
ANR	4996949	Identifier	NULL		4996941	0					
ANR	4996950	Identifier	NULL		4996941	1					
ANR	4996951	IdentifierDeclStatement	HANDLE hAccessToken = NULL ;	606:1:16908:16934	4996941	1	True				
ANR	4996952	IdentifierDecl	hAccessToken = NULL		4996941	0					
ANR	4996953	IdentifierDeclType	HANDLE		4996941	0					
ANR	4996954	Identifier	hAccessToken		4996941	1					
ANR	4996955	AssignmentExpression	hAccessToken = NULL		4996941	2		=			
ANR	4996956	Identifier	NULL		4996941	0					
ANR	4996957	Identifier	NULL		4996941	1					
ANR	4996958	IdentifierDeclStatement	UCHAR InfoBuffer [ 1000 ] ;	607:1:16937:16959	4996941	2	True				
ANR	4996959	IdentifierDecl	InfoBuffer [ 1000 ]		4996941	0					
ANR	4996960	IdentifierDeclType	UCHAR [ 1000 ]		4996941	0					
ANR	4996961	Identifier	InfoBuffer		4996941	1					
ANR	4996962	PrimaryExpression	1000		4996941	2					
ANR	4996963	IdentifierDeclStatement	"char szAccountName [ 200 ] , szDomainName [ 200 ] ;"	608:1:16962:17004	4996941	3	True				
ANR	4996964	IdentifierDecl	szAccountName [ 200 ]		4996941	0					
ANR	4996965	IdentifierDeclType	char [ 200 ]		4996941	0					
ANR	4996966	Identifier	szAccountName		4996941	1					
ANR	4996967	PrimaryExpression	200		4996941	2					
ANR	4996968	IdentifierDecl	szDomainName [ 200 ]		4996941	1					
ANR	4996969	IdentifierDeclType	char [ 200 ]		4996941	0					
ANR	4996970	Identifier	szDomainName		4996941	1					
ANR	4996971	PrimaryExpression	200		4996941	2					
ANR	4996972	IdentifierDeclStatement	PTOKEN_USER pTokenUser = ( PTOKEN_USER ) InfoBuffer ;	609:1:17007:17055	4996941	4	True				
ANR	4996973	IdentifierDecl	pTokenUser = ( PTOKEN_USER ) InfoBuffer		4996941	0					
ANR	4996974	IdentifierDeclType	PTOKEN_USER		4996941	0					
ANR	4996975	Identifier	pTokenUser		4996941	1					
ANR	4996976	AssignmentExpression	pTokenUser = ( PTOKEN_USER ) InfoBuffer		4996941	2		=			
ANR	4996977	Identifier	pTokenUser		4996941	0					
ANR	4996978	CastExpression	( PTOKEN_USER ) InfoBuffer		4996941	1					
ANR	4996979	CastTarget	PTOKEN_USER		4996941	0					
ANR	4996980	Identifier	InfoBuffer		4996941	1					
ANR	4996981	IdentifierDeclStatement	"DWORD dwInfoBufferSize , dwAccountSize = 200 , dwDomainSize = 200 ;"	610:1:17058:17120	4996941	5	True				
ANR	4996982	IdentifierDecl	dwInfoBufferSize		4996941	0					
ANR	4996983	IdentifierDeclType	DWORD		4996941	0					
ANR	4996984	Identifier	dwInfoBufferSize		4996941	1					
ANR	4996985	IdentifierDecl	dwAccountSize = 200		4996941	1					
ANR	4996986	IdentifierDeclType	DWORD		4996941	0					
ANR	4996987	Identifier	dwAccountSize		4996941	1					
ANR	4996988	AssignmentExpression	dwAccountSize = 200		4996941	2		=			
ANR	4996989	Identifier	dwAccountSize		4996941	0					
ANR	4996990	PrimaryExpression	200		4996941	1					
ANR	4996991	IdentifierDecl	dwDomainSize = 200		4996941	2					
ANR	4996992	IdentifierDeclType	DWORD		4996941	0					
ANR	4996993	Identifier	dwDomainSize		4996941	1					
ANR	4996994	AssignmentExpression	dwDomainSize = 200		4996941	2		=			
ANR	4996995	Identifier	dwDomainSize		4996941	0					
ANR	4996996	PrimaryExpression	200		4996941	1					
ANR	4996997	IdentifierDeclStatement	SID_NAME_USE snu ;	611:1:17123:17139	4996941	6	True				
ANR	4996998	IdentifierDecl	snu		4996941	0					
ANR	4996999	IdentifierDeclType	SID_NAME_USE		4996941	0					
ANR	4997000	Identifier	snu		4996941	1					
ANR	4997001	IdentifierDeclStatement	int length ;	612:1:17142:17152	4996941	7	True				
ANR	4997002	IdentifierDecl	length		4996941	0					
ANR	4997003	IdentifierDeclType	int		4996941	0					
ANR	4997004	Identifier	length		4996941	1					
ANR	4997005	IfStatement	if ( CondorUserName )		4996941	8					
ANR	4997006	Condition	CondorUserName	614:6:17161:17174	4996941	0	True				
ANR	4997007	Identifier	CondorUserName		4996941	0					
ANR	4997008	ReturnStatement	return CondorUserName ;	615:2:17180:17201	4996941	1	True				
ANR	4997009	Identifier	CondorUserName		4996941	0					
ANR	4997010	ExpressionStatement	hProcess = GetCurrentProcess ( )	617:1:17205:17235	4996941	9	True				
ANR	4997011	AssignmentExpression	hProcess = GetCurrentProcess ( )		4996941	0		=			
ANR	4997012	Identifier	hProcess		4996941	0					
ANR	4997013	CallExpression	GetCurrentProcess ( )		4996941	1					
ANR	4997014	Callee	GetCurrentProcess		4996941	0					
ANR	4997015	Identifier	GetCurrentProcess		4996941	0					
ANR	4997016	ArgumentList			4996941	1					
ANR	4997017	ExpressionStatement	"OpenProcessToken ( hProcess , TOKEN_READ , & hAccessToken )"	619:1:17239:17290	4996941	10	True				
ANR	4997018	CallExpression	"OpenProcessToken ( hProcess , TOKEN_READ , & hAccessToken )"		4996941	0					
ANR	4997019	Callee	OpenProcessToken		4996941	0					
ANR	4997020	Identifier	OpenProcessToken		4996941	0					
ANR	4997021	ArgumentList	hProcess		4996941	1					
ANR	4997022	Argument	hProcess		4996941	0					
ANR	4997023	Identifier	hProcess		4996941	0					
ANR	4997024	Argument	TOKEN_READ		4996941	1					
ANR	4997025	Identifier	TOKEN_READ		4996941	0					
ANR	4997026	Argument	& hAccessToken		4996941	2					
ANR	4997027	UnaryOperationExpression	& hAccessToken		4996941	0					
ANR	4997028	UnaryOperator	&		4996941	0					
ANR	4997029	Identifier	hAccessToken		4996941	1					
ANR	4997030	ExpressionStatement	"GetTokenInformation ( hAccessToken , TokenUser , InfoBuffer , 1000 , & dwInfoBufferSize )"	621:1:17294:17375	4996941	11	True				
ANR	4997031	CallExpression	"GetTokenInformation ( hAccessToken , TokenUser , InfoBuffer , 1000 , & dwInfoBufferSize )"		4996941	0					
ANR	4997032	Callee	GetTokenInformation		4996941	0					
ANR	4997033	Identifier	GetTokenInformation		4996941	0					
ANR	4997034	ArgumentList	hAccessToken		4996941	1					
ANR	4997035	Argument	hAccessToken		4996941	0					
ANR	4997036	Identifier	hAccessToken		4996941	0					
ANR	4997037	Argument	TokenUser		4996941	1					
ANR	4997038	Identifier	TokenUser		4996941	0					
ANR	4997039	Argument	InfoBuffer		4996941	2					
ANR	4997040	Identifier	InfoBuffer		4996941	0					
ANR	4997041	Argument	1000		4996941	3					
ANR	4997042	PrimaryExpression	1000		4996941	0					
ANR	4997043	Argument	& dwInfoBufferSize		4996941	4					
ANR	4997044	UnaryOperationExpression	& dwInfoBufferSize		4996941	0					
ANR	4997045	UnaryOperator	&		4996941	0					
ANR	4997046	Identifier	dwInfoBufferSize		4996941	1					
ANR	4997047	ExpressionStatement	szAccountName [ 0 ] = '\\0'	624:1:17379:17402	4996941	12	True				
ANR	4997048	AssignmentExpression	szAccountName [ 0 ] = '\\0'		4996941	0		=			
ANR	4997049	ArrayIndexing	szAccountName [ 0 ]		4996941	0					
ANR	4997050	Identifier	szAccountName		4996941	0					
ANR	4997051	PrimaryExpression	0		4996941	1					
ANR	4997052	PrimaryExpression	'\\0'		4996941	1					
ANR	4997053	ExpressionStatement	szDomainName [ 0 ] = '\\0'	625:1:17405:17427	4996941	13	True				
ANR	4997054	AssignmentExpression	szDomainName [ 0 ] = '\\0'		4996941	0		=			
ANR	4997055	ArrayIndexing	szDomainName [ 0 ]		4996941	0					
ANR	4997056	Identifier	szDomainName		4996941	0					
ANR	4997057	PrimaryExpression	0		4996941	1					
ANR	4997058	PrimaryExpression	'\\0'		4996941	1					
ANR	4997059	ExpressionStatement	"LookupAccountSid ( NULL , pTokenUser -> User . Sid , szAccountName , & dwAccountSize , szDomainName , & dwDomainSize , & snu )"	626:1:17430:17541	4996941	14	True				
ANR	4997060	CallExpression	"LookupAccountSid ( NULL , pTokenUser -> User . Sid , szAccountName , & dwAccountSize , szDomainName , & dwDomainSize , & snu )"		4996941	0					
ANR	4997061	Callee	LookupAccountSid		4996941	0					
ANR	4997062	Identifier	LookupAccountSid		4996941	0					
ANR	4997063	ArgumentList	NULL		4996941	1					
ANR	4997064	Argument	NULL		4996941	0					
ANR	4997065	Identifier	NULL		4996941	0					
ANR	4997066	Argument	pTokenUser -> User . Sid		4996941	1					
ANR	4997067	MemberAccess	pTokenUser -> User . Sid		4996941	0					
ANR	4997068	PtrMemberAccess	pTokenUser -> User		4996941	0					
ANR	4997069	Identifier	pTokenUser		4996941	0					
ANR	4997070	Identifier	User		4996941	1					
ANR	4997071	Identifier	Sid		4996941	1					
ANR	4997072	Argument	szAccountName		4996941	2					
ANR	4997073	Identifier	szAccountName		4996941	0					
ANR	4997074	Argument	& dwAccountSize		4996941	3					
ANR	4997075	UnaryOperationExpression	& dwAccountSize		4996941	0					
ANR	4997076	UnaryOperator	&		4996941	0					
ANR	4997077	Identifier	dwAccountSize		4996941	1					
ANR	4997078	Argument	szDomainName		4996941	4					
ANR	4997079	Identifier	szDomainName		4996941	0					
ANR	4997080	Argument	& dwDomainSize		4996941	5					
ANR	4997081	UnaryOperationExpression	& dwDomainSize		4996941	0					
ANR	4997082	UnaryOperator	&		4996941	0					
ANR	4997083	Identifier	dwDomainSize		4996941	1					
ANR	4997084	Argument	& snu		4996941	6					
ANR	4997085	UnaryOperationExpression	& snu		4996941	0					
ANR	4997086	UnaryOperator	&		4996941	0					
ANR	4997087	Identifier	snu		4996941	1					
ANR	4997088	ExpressionStatement	length = strlen ( szAccountName ) + strlen ( szDomainName ) + 4	629:1:17545:17602	4996941	15	True				
ANR	4997089	AssignmentExpression	length = strlen ( szAccountName ) + strlen ( szDomainName ) + 4		4996941	0		=			
ANR	4997090	Identifier	length		4996941	0					
ANR	4997091	AdditiveExpression	strlen ( szAccountName ) + strlen ( szDomainName ) + 4		4996941	1		+			
ANR	4997092	CallExpression	strlen ( szAccountName )		4996941	0					
ANR	4997093	Callee	strlen		4996941	0					
ANR	4997094	Identifier	strlen		4996941	0					
ANR	4997095	ArgumentList	szAccountName		4996941	1					
ANR	4997096	Argument	szAccountName		4996941	0					
ANR	4997097	Identifier	szAccountName		4996941	0					
ANR	4997098	AdditiveExpression	strlen ( szDomainName ) + 4		4996941	1		+			
ANR	4997099	CallExpression	strlen ( szDomainName )		4996941	0					
ANR	4997100	Callee	strlen		4996941	0					
ANR	4997101	Identifier	strlen		4996941	0					
ANR	4997102	ArgumentList	szDomainName		4996941	1					
ANR	4997103	Argument	szDomainName		4996941	0					
ANR	4997104	Identifier	szDomainName		4996941	0					
ANR	4997105	PrimaryExpression	4		4996941	1					
ANR	4997106	ExpressionStatement	CondorUserName = ( char * ) malloc ( length )	630:1:17605:17645	4996941	16	True				
ANR	4997107	AssignmentExpression	CondorUserName = ( char * ) malloc ( length )		4996941	0		=			
ANR	4997108	Identifier	CondorUserName		4996941	0					
ANR	4997109	CastExpression	( char * ) malloc ( length )		4996941	1					
ANR	4997110	CastTarget	char *		4996941	0					
ANR	4997111	CallExpression	malloc ( length )		4996941	1					
ANR	4997112	Callee	malloc		4996941	0					
ANR	4997113	Identifier	malloc		4996941	0					
ANR	4997114	ArgumentList	length		4996941	1					
ANR	4997115	Argument	length		4996941	0					
ANR	4997116	Identifier	length		4996941	0					
ANR	4997117	IfStatement	if ( CondorUserName == NULL )		4996941	17					
ANR	4997118	Condition	CondorUserName == NULL	631:5:17652:17673	4996941	0	True				
ANR	4997119	EqualityExpression	CondorUserName == NULL		4996941	0		==			
ANR	4997120	Identifier	CondorUserName		4996941	0					
ANR	4997121	Identifier	NULL		4996941	1					
ANR	4997122	CompoundStatement		28:29:795:795	4996941	1					
ANR	4997123	ExpressionStatement	"EXCEPT ( ""Out of memory. Aborting."" )"	632:2:17680:17714	4996941	0	True				
ANR	4997124	CallExpression	"EXCEPT ( ""Out of memory. Aborting."" )"		4996941	0					
ANR	4997125	Callee	EXCEPT		4996941	0					
ANR	4997126	Identifier	EXCEPT		4996941	0					
ANR	4997127	ArgumentList	"""Out of memory. Aborting."""		4996941	1					
ANR	4997128	Argument	"""Out of memory. Aborting."""		4996941	0					
ANR	4997129	PrimaryExpression	"""Out of memory. Aborting."""		4996941	0					
ANR	4997130	ExpressionStatement	"sprintf ( CondorUserName , ""%s/%s"" , szDomainName , szAccountName )"	634:1:17720:17779	4996941	18	True				
ANR	4997131	CallExpression	"sprintf ( CondorUserName , ""%s/%s"" , szDomainName , szAccountName )"		4996941	0					
ANR	4997132	Callee	sprintf		4996941	0					
ANR	4997133	Identifier	sprintf		4996941	0					
ANR	4997134	ArgumentList	CondorUserName		4996941	1					
ANR	4997135	Argument	CondorUserName		4996941	0					
ANR	4997136	Identifier	CondorUserName		4996941	0					
ANR	4997137	Argument	"""%s/%s"""		4996941	1					
ANR	4997138	PrimaryExpression	"""%s/%s"""		4996941	0					
ANR	4997139	Argument	szDomainName		4996941	2					
ANR	4997140	Identifier	szDomainName		4996941	0					
ANR	4997141	Argument	szAccountName		4996941	3					
ANR	4997142	Identifier	szAccountName		4996941	0					
ANR	4997143	IfStatement	if ( hProcess )		4996941	19					
ANR	4997144	Condition	hProcess	636:6:17788:17795	4996941	0	True				
ANR	4997145	Identifier	hProcess		4996941	0					
ANR	4997146	ExpressionStatement	CloseHandle ( hProcess )	637:2:17801:17822	4996941	1	True				
ANR	4997147	CallExpression	CloseHandle ( hProcess )		4996941	0					
ANR	4997148	Callee	CloseHandle		4996941	0					
ANR	4997149	Identifier	CloseHandle		4996941	0					
ANR	4997150	ArgumentList	hProcess		4996941	1					
ANR	4997151	Argument	hProcess		4996941	0					
ANR	4997152	Identifier	hProcess		4996941	0					
ANR	4997153	IfStatement	if ( hAccessToken )		4996941	20					
ANR	4997154	Condition	hAccessToken	638:6:17830:17841	4996941	0	True				
ANR	4997155	Identifier	hAccessToken		4996941	0					
ANR	4997156	ExpressionStatement	CloseHandle ( hAccessToken )	639:2:17847:17872	4996941	1	True				
ANR	4997157	CallExpression	CloseHandle ( hAccessToken )		4996941	0					
ANR	4997158	Callee	CloseHandle		4996941	0					
ANR	4997159	Identifier	CloseHandle		4996941	0					
ANR	4997160	ArgumentList	hAccessToken		4996941	1					
ANR	4997161	Argument	hAccessToken		4996941	0					
ANR	4997162	Identifier	hAccessToken		4996941	0					
ANR	4997163	ReturnStatement	return CondorUserName ;	641:1:17876:17897	4996941	21	True				
ANR	4997164	Identifier	CondorUserName		4996941	0					
ANR	4997165	ReturnType	const char *		4996941	1					
ANR	4997166	Identifier	get_condor_username		4996941	2					
ANR	4997167	ParameterList			4996941	3					
ANR	4997168	CFGEntryNode	ENTRY		4996941		True				
ANR	4997169	CFGExitNode	EXIT		4996941		True				
ANR	4997170	Symbol	hAccessToken		4996941						
ANR	4997171	Symbol	szDomainName		4996941						
ANR	4997172	Symbol	dwInfoBufferSize		4996941						
ANR	4997173	Symbol	TOKEN_READ		4996941						
ANR	4997174	Symbol	InfoBuffer		4996941						
ANR	4997175	Symbol	strlen		4996941						
ANR	4997176	Symbol	* szDomainName		4996941						
ANR	4997177	Symbol	& dwInfoBufferSize		4996941						
ANR	4997178	Symbol	& dwAccountSize		4996941						
ANR	4997179	Symbol	pTokenUser		4996941						
ANR	4997180	Symbol	hProcess		4996941						
ANR	4997181	Symbol	& hAccessToken		4996941						
ANR	4997182	Symbol	malloc		4996941						
ANR	4997183	Symbol	NULL		4996941						
ANR	4997184	Symbol	TokenUser		4996941						
ANR	4997185	Symbol	& snu		4996941						
ANR	4997186	Symbol	length		4996941						
ANR	4997187	Symbol	GetCurrentProcess		4996941						
ANR	4997188	Symbol	* pTokenUser		4996941						
ANR	4997189	Symbol	CondorUserName		4996941						
ANR	4997190	Symbol	dwAccountSize		4996941						
ANR	4997191	Symbol	pTokenUser -> User . Sid		4996941						
ANR	4997192	Symbol	dwDomainSize		4996941						
ANR	4997193	Symbol	szAccountName		4996941						
ANR	4997194	Symbol	snu		4996941						
ANR	4997195	Symbol	pTokenUser -> User		4996941						
ANR	4997196	Symbol	* szAccountName		4996941						
ANR	4997197	Symbol	& dwDomainSize		4996941						
ANR	4997198	Function	is_root	646:0:17929:18193							
ANR	4997199	FunctionDef	is_root ()		4997198	0					
ANR	4997200	CompoundStatement		648:0:17950:18193	4997198	0					
ANR	4997201	IdentifierDeclStatement	int root = 0 ;	649:1:17953:17965	4997198	0	True				
ANR	4997202	IdentifierDecl	root = 0		4997198	0					
ANR	4997203	IdentifierDeclType	int		4997198	0					
ANR	4997204	Identifier	root		4997198	1					
ANR	4997205	AssignmentExpression	root = 0		4997198	2		=			
ANR	4997206	Identifier	root		4997198	0					
ANR	4997207	PrimaryExpression	0		4997198	1					
ANR	4997208	IdentifierDeclStatement	char * user = my_username ( 0 ) ;	650:1:17968:17997	4997198	1	True				
ANR	4997209	IdentifierDecl	* user = my_username ( 0 )		4997198	0					
ANR	4997210	IdentifierDeclType	char *		4997198	0					
ANR	4997211	Identifier	user		4997198	1					
ANR	4997212	AssignmentExpression	* user = my_username ( 0 )		4997198	2		=			
ANR	4997213	Identifier	user		4997198	0					
ANR	4997214	CallExpression	my_username ( 0 )		4997198	1					
ANR	4997215	Callee	my_username		4997198	0					
ANR	4997216	Identifier	my_username		4997198	0					
ANR	4997217	ArgumentList	0		4997198	1					
ANR	4997218	Argument	0		4997198	0					
ANR	4997219	PrimaryExpression	0		4997198	0					
ANR	4997220	IfStatement	if ( ! user )		4997198	2					
ANR	4997221	Condition	! user	651:5:18004:18009	4997198	0	True				
ANR	4997222	UnaryOperationExpression	! user		4997198	0					
ANR	4997223	UnaryOperator	!		4997198	0					
ANR	4997224	Identifier	user		4997198	1					
ANR	4997225	CompoundStatement		4:14:62:62	4997198	1					
ANR	4997226	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR in is_root(): my_username() returned NULL\\n"" )"	652:2:18017:18095	4997198	0	True				
ANR	4997227	CallExpression	"dprintf ( D_ALWAYS , ""ERROR in is_root(): my_username() returned NULL\\n"" )"		4997198	0					
ANR	4997228	Callee	dprintf		4997198	0					
ANR	4997229	Identifier	dprintf		4997198	0					
ANR	4997230	ArgumentList	D_ALWAYS		4997198	1					
ANR	4997231	Argument	D_ALWAYS		4997198	0					
ANR	4997232	Identifier	D_ALWAYS		4997198	0					
ANR	4997233	Argument	"""ERROR in is_root(): my_username() returned NULL\\n"""		4997198	1					
ANR	4997234	PrimaryExpression	"""ERROR in is_root(): my_username() returned NULL\\n"""		4997198	0					
ANR	4997235	ReturnStatement	return 0 ;	654:2:18099:18107	4997198	1	True				
ANR	4997236	PrimaryExpression	0		4997198	0					
ANR	4997237	IfStatement	"if ( ! strcasecmp ( user , ""SYSTEM"" ) )"		4997198	3					
ANR	4997238	Condition	"! strcasecmp ( user , ""SYSTEM"" )"	656:5:18117:18143	4997198	0	True				
ANR	4997239	UnaryOperationExpression	"! strcasecmp ( user , ""SYSTEM"" )"		4997198	0					
ANR	4997240	UnaryOperator	!		4997198	0					
ANR	4997241	CallExpression	"strcasecmp ( user , ""SYSTEM"" )"		4997198	1					
ANR	4997242	Callee	strcasecmp		4997198	0					
ANR	4997243	Identifier	strcasecmp		4997198	0					
ANR	4997244	ArgumentList	user		4997198	1					
ANR	4997245	Argument	user		4997198	0					
ANR	4997246	Identifier	user		4997198	0					
ANR	4997247	Argument	"""SYSTEM"""		4997198	1					
ANR	4997248	PrimaryExpression	"""SYSTEM"""		4997198	0					
ANR	4997249	CompoundStatement		9:35:196:196	4997198	1					
ANR	4997250	ExpressionStatement	root = 1	657:2:18151:18159	4997198	0	True				
ANR	4997251	AssignmentExpression	root = 1		4997198	0		=			
ANR	4997252	Identifier	root		4997198	0					
ANR	4997253	PrimaryExpression	1		4997198	1					
ANR	4997254	ExpressionStatement	free ( user )	659:1:18165:18177	4997198	4	True				
ANR	4997255	CallExpression	free ( user )		4997198	0					
ANR	4997256	Callee	free		4997198	0					
ANR	4997257	Identifier	free		4997198	0					
ANR	4997258	ArgumentList	user		4997198	1					
ANR	4997259	Argument	user		4997198	0					
ANR	4997260	Identifier	user		4997198	0					
ANR	4997261	ReturnStatement	return root ;	660:1:18180:18191	4997198	5	True				
ANR	4997262	Identifier	root		4997198	0					
ANR	4997263	ReturnType	int		4997198	1					
ANR	4997264	Identifier	is_root		4997198	2					
ANR	4997265	ParameterList			4997198	3					
ANR	4997266	CFGEntryNode	ENTRY		4997198		True				
ANR	4997267	CFGExitNode	EXIT		4997198		True				
ANR	4997268	Symbol	root		4997198						
ANR	4997269	Symbol	D_ALWAYS		4997198						
ANR	4997270	Symbol	my_username		4997198						
ANR	4997271	Symbol	strcasecmp		4997198						
ANR	4997272	Symbol	user		4997198						
ANR	4997273	Function	get_real_username	664:0:18197:18323							
ANR	4997274	FunctionDef	get_real_username ()		4997273	0					
ANR	4997275	CompoundStatement		666:0:18235:18323	4997273	0					
ANR	4997276	IfStatement	if ( ! RealUserName )		4997273	0					
ANR	4997277	Condition	! RealUserName	667:5:18242:18255	4997273	0	True				
ANR	4997278	UnaryOperationExpression	! RealUserName		4997273	0					
ANR	4997279	UnaryOperator	!		4997273	0					
ANR	4997280	Identifier	RealUserName		4997273	1					
ANR	4997281	CompoundStatement		2:22:23:23	4997273	1					
ANR	4997282	ExpressionStatement	"RealUserName = strdup ( ""system"" )"	668:2:18263:18296	4997273	0	True				
ANR	4997283	AssignmentExpression	"RealUserName = strdup ( ""system"" )"		4997273	0		=			
ANR	4997284	Identifier	RealUserName		4997273	0					
ANR	4997285	CallExpression	"strdup ( ""system"" )"		4997273	1					
ANR	4997286	Callee	strdup		4997273	0					
ANR	4997287	Identifier	strdup		4997273	0					
ANR	4997288	ArgumentList	"""system"""		4997273	1					
ANR	4997289	Argument	"""system"""		4997273	0					
ANR	4997290	PrimaryExpression	"""system"""		4997273	0					
ANR	4997291	ReturnStatement	return RealUserName ;	670:1:18302:18321	4997273	1	True				
ANR	4997292	Identifier	RealUserName		4997273	0					
ANR	4997293	ReturnType	const char *		4997273	1					
ANR	4997294	Identifier	get_real_username		4997273	2					
ANR	4997295	ParameterList			4997273	3					
ANR	4997296	CFGEntryNode	ENTRY		4997273		True				
ANR	4997297	CFGExitNode	EXIT		4997273		True				
ANR	4997298	Symbol	strdup		4997273						
ANR	4997299	Symbol	RealUserName		4997273						
ANR	4997300	Function	clear_passwd_cache	673:0:18326:18375							
ANR	4997301	FunctionDef	clear_passwd_cache ()		4997300	0					
ANR	4997302	CompoundStatement		674:21:18352:18375	4997300	0					
ANR	4997303	ReturnType	void		4997300	1					
ANR	4997304	Identifier	clear_passwd_cache		4997300	2					
ANR	4997305	ParameterList			4997300	3					
ANR	4997306	CFGEntryNode	ENTRY		4997300		True				
ANR	4997307	CFGExitNode	EXIT		4997300		True				
ANR	4997308	Function	delete_passwd_cache	678:0:18378:18428							
ANR	4997309	FunctionDef	delete_passwd_cache ()		4997308	0					
ANR	4997310	CompoundStatement		679:22:18405:18428	4997308	0					
ANR	4997311	ReturnType	void		4997308	1					
ANR	4997312	Identifier	delete_passwd_cache		4997308	2					
ANR	4997313	ParameterList			4997308	3					
ANR	4997314	CFGEntryNode	ENTRY		4997308		True				
ANR	4997315	CFGExitNode	EXIT		4997308		True				
ANR	4997316	DeclStmt									
ANR	4997317	Decl							uid_t	uid_t	CondorUid
ANR	4997318	Decl							uid_t	uid_t	UserUid
ANR	4997319	Decl							uid_t	uid_t	RealCondorUid
ANR	4997320	Decl							uid_t	uid_t	OwnerUid
ANR	4997321	DeclStmt									
ANR	4997322	Decl							gid_t	gid_t	CondorGid
ANR	4997323	Decl							gid_t	gid_t	UserGid
ANR	4997324	Decl							gid_t	gid_t	RealCondorGid
ANR	4997325	Decl							gid_t	gid_t	OwnerGid
ANR	4997326	DeclStmt									
ANR	4997327	Decl							int	int	CondorIdsInited
ANR	4997328	DeclStmt									
ANR	4997329	Decl							char	char *	UserName
ANR	4997330	DeclStmt									
ANR	4997331	Decl							char	char *	OwnerName
ANR	4997332	DeclStmt									
ANR	4997333	Decl							int	int ( )	set_condor_euid
ANR	4997334	DeclStmt									
ANR	4997335	Decl							int	int ( )	set_condor_egid
ANR	4997336	DeclStmt									
ANR	4997337	Decl							int	int ( )	set_user_euid
ANR	4997338	DeclStmt									
ANR	4997339	Decl							int	int ( )	set_user_egid
ANR	4997340	DeclStmt									
ANR	4997341	Decl							int	int ( )	set_owner_euid
ANR	4997342	DeclStmt									
ANR	4997343	Decl							int	int ( )	set_owner_egid
ANR	4997344	DeclStmt									
ANR	4997345	Decl							int	int ( )	set_user_ruid
ANR	4997346	DeclStmt									
ANR	4997347	Decl							int	int ( )	set_user_rgid
ANR	4997348	DeclStmt									
ANR	4997349	Decl							int	int ( )	set_root_euid
ANR	4997350	DeclStmt									
ANR	4997351	Decl							int	int ( )	set_root_egid
ANR	4997352	DeclStmt									
ANR	4997353	Decl							int	int ( )	set_condor_ruid
ANR	4997354	DeclStmt									
ANR	4997355	Decl							int	int ( )	set_condor_rgid
ANR	4997356	DeclStmt									
ANR	4997357	Decl							passwd_cache	passwd_cache *	pcache_ptr
ANR	4997358	Function	pcache	746:0:20194:20311							
ANR	4997359	FunctionDef	pcache ()		4997358	0					
ANR	4997360	CompoundStatement		747:13:20222:20311	4997358	0					
ANR	4997361	IfStatement	if ( pcache_ptr == NULL )		4997358	0					
ANR	4997362	Condition	pcache_ptr == NULL	748:6:20230:20247	4997358	0	True				
ANR	4997363	EqualityExpression	pcache_ptr == NULL		4997358	0		==			
ANR	4997364	Identifier	pcache_ptr		4997358	0					
ANR	4997365	Identifier	NULL		4997358	1					
ANR	4997366	CompoundStatement		2:27:28:28	4997358	1					
ANR	4997367	ExpressionStatement	pcache_ptr = new passwd_cache ( )	749:2:20255:20286	4997358	0	True				
ANR	4997368	AssignmentExpression	pcache_ptr = new passwd_cache ( )		4997358	0		=			
ANR	4997369	Identifier	pcache_ptr		4997358	0					
ANR	4997370	UnaryExpression	new passwd_cache ( )		4997358	1					
ANR	4997371	ReturnStatement	return pcache_ptr ;	751:1:20292:20309	4997358	1	True				
ANR	4997372	Identifier	pcache_ptr		4997358	0					
ANR	4997373	ReturnType	passwd_cache *		4997358	1					
ANR	4997374	Identifier	pcache		4997358	2					
ANR	4997375	ParameterList			4997358	3					
ANR	4997376	CFGEntryNode	ENTRY		4997358		True				
ANR	4997377	CFGExitNode	EXIT		4997358		True				
ANR	4997378	Symbol	NULL		4997358						
ANR	4997379	Symbol	pcache_ptr		4997358						
ANR	4997380	Function	clear_passwd_cache	754:0:20314:20362							
ANR	4997381	FunctionDef	clear_passwd_cache ()		4997380	0					
ANR	4997382	CompoundStatement		755:21:20340:20362	4997380	0					
ANR	4997383	ExpressionStatement	pcache ( ) -> reset ( )	756:1:20343:20360	4997380	0	True				
ANR	4997384	CallExpression	pcache ( ) -> reset ( )		4997380	0					
ANR	4997385	Callee	pcache ( ) -> reset		4997380	0					
ANR	4997386	PtrMemberAccess	pcache ( ) -> reset		4997380	0					
ANR	4997387	CallExpression	pcache ( )		4997380	0					
ANR	4997388	Callee	pcache		4997380	0					
ANR	4997389	Identifier	pcache		4997380	0					
ANR	4997390	ArgumentList			4997380	1					
ANR	4997391	Identifier	reset		4997380	1					
ANR	4997392	ArgumentList			4997380	1					
ANR	4997393	ReturnType	void		4997380	1					
ANR	4997394	Identifier	clear_passwd_cache		4997380	2					
ANR	4997395	ParameterList			4997380	3					
ANR	4997396	CFGEntryNode	ENTRY		4997380		True				
ANR	4997397	CFGExitNode	EXIT		4997380		True				
ANR	4997398	Symbol	pcache		4997380						
ANR	4997399	Function	delete_passwd_cache	759:0:20365:20434							
ANR	4997400	FunctionDef	delete_passwd_cache ()		4997399	0					
ANR	4997401	CompoundStatement		760:22:20392:20434	4997399	0					
ANR	4997402	Statement	delete	761:1:20395:20400	4997399	0	True				
ANR	4997403	ExpressionStatement	pcache_ptr	761:8:20402:20412	4997399	1	True				
ANR	4997404	Identifier	pcache_ptr		4997399	0					
ANR	4997405	ExpressionStatement	pcache_ptr = NULL	762:1:20415:20432	4997399	2	True				
ANR	4997406	AssignmentExpression	pcache_ptr = NULL		4997399	0		=			
ANR	4997407	Identifier	pcache_ptr		4997399	0					
ANR	4997408	Identifier	NULL		4997399	1					
ANR	4997409	ReturnType	void		4997399	1					
ANR	4997410	Identifier	delete_passwd_cache		4997399	2					
ANR	4997411	ParameterList			4997399	3					
ANR	4997412	CFGEntryNode	ENTRY		4997399		True				
ANR	4997413	CFGExitNode	EXIT		4997399		True				
ANR	4997414	Symbol	NULL		4997399						
ANR	4997415	Symbol	pcache_ptr		4997399						
ANR	4997416	Function	init_condor_ids	765:0:20437:25139							
ANR	4997417	FunctionDef	init_condor_ids ()		4997416	0					
ANR	4997418	CompoundStatement		767:0:20460:25139	4997416	0					
ANR	4997419	IdentifierDeclStatement	int scm ;	768:1:20463:20470	4997416	0	True				
ANR	4997420	IdentifierDecl	scm		4997416	0					
ANR	4997421	IdentifierDeclType	int		4997416	0					
ANR	4997422	Identifier	scm		4997416	1					
ANR	4997423	IdentifierDeclStatement	bool result ;	769:1:20473:20484	4997416	1	True				
ANR	4997424	IdentifierDecl	result		4997416	0					
ANR	4997425	IdentifierDeclType	bool		4997416	0					
ANR	4997426	Identifier	result		4997416	1					
ANR	4997427	IdentifierDeclStatement	char * env_val = NULL ;	770:1:20487:20507	4997416	2	True				
ANR	4997428	IdentifierDecl	* env_val = NULL		4997416	0					
ANR	4997429	IdentifierDeclType	char *		4997416	0					
ANR	4997430	Identifier	env_val		4997416	1					
ANR	4997431	AssignmentExpression	* env_val = NULL		4997416	2		=			
ANR	4997432	Identifier	NULL		4997416	0					
ANR	4997433	Identifier	NULL		4997416	1					
ANR	4997434	IdentifierDeclStatement	char * config_val = NULL ;	771:1:20510:20533	4997416	3	True				
ANR	4997435	IdentifierDecl	* config_val = NULL		4997416	0					
ANR	4997436	IdentifierDeclType	char *		4997416	0					
ANR	4997437	Identifier	config_val		4997416	1					
ANR	4997438	AssignmentExpression	* config_val = NULL		4997416	2		=			
ANR	4997439	Identifier	NULL		4997416	0					
ANR	4997440	Identifier	NULL		4997416	1					
ANR	4997441	IdentifierDeclStatement	char * val = NULL ;	772:1:20536:20552	4997416	4	True				
ANR	4997442	IdentifierDecl	* val = NULL		4997416	0					
ANR	4997443	IdentifierDeclType	char *		4997416	0					
ANR	4997444	Identifier	val		4997416	1					
ANR	4997445	AssignmentExpression	* val = NULL		4997416	2		=			
ANR	4997446	Identifier	NULL		4997416	0					
ANR	4997447	Identifier	NULL		4997416	1					
ANR	4997448	IdentifierDeclStatement	uid_t envCondorUid = INT_MAX ;	773:1:20555:20583	4997416	5	True				
ANR	4997449	IdentifierDecl	envCondorUid = INT_MAX		4997416	0					
ANR	4997450	IdentifierDeclType	uid_t		4997416	0					
ANR	4997451	Identifier	envCondorUid		4997416	1					
ANR	4997452	AssignmentExpression	envCondorUid = INT_MAX		4997416	2		=			
ANR	4997453	Identifier	INT_MAX		4997416	0					
ANR	4997454	Identifier	INT_MAX		4997416	1					
ANR	4997455	IdentifierDeclStatement	gid_t envCondorGid = INT_MAX ;	774:1:20586:20614	4997416	6	True				
ANR	4997456	IdentifierDecl	envCondorGid = INT_MAX		4997416	0					
ANR	4997457	IdentifierDeclType	gid_t		4997416	0					
ANR	4997458	Identifier	envCondorGid		4997416	1					
ANR	4997459	AssignmentExpression	envCondorGid = INT_MAX		4997416	2		=			
ANR	4997460	Identifier	INT_MAX		4997416	0					
ANR	4997461	Identifier	INT_MAX		4997416	1					
ANR	4997462	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )	781:1:20866:20913	4997416	7	True				
ANR	4997463	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )		4997416	0		=			
ANR	4997464	Identifier	scm		4997416	0					
ANR	4997465	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )		4997416	1					
ANR	4997466	Callee	SetSyscalls		4997416	0					
ANR	4997467	Identifier	SetSyscalls		4997416	0					
ANR	4997468	ArgumentList	SYS_LOCAL | SYS_UNRECORDED		4997416	1					
ANR	4997469	Argument	SYS_LOCAL | SYS_UNRECORDED		4997416	0					
ANR	4997470	InclusiveOrExpression	SYS_LOCAL | SYS_UNRECORDED		4997416	0		|			
ANR	4997471	Identifier	SYS_LOCAL		4997416	0					
ANR	4997472	Identifier	SYS_UNRECORDED		4997416	1					
ANR	4997473	IdentifierDeclStatement	uid_t MyUid = get_my_uid ( ) ;	783:1:20917:20943	4997416	8	True				
ANR	4997474	IdentifierDecl	MyUid = get_my_uid ( )		4997416	0					
ANR	4997475	IdentifierDeclType	uid_t		4997416	0					
ANR	4997476	Identifier	MyUid		4997416	1					
ANR	4997477	AssignmentExpression	MyUid = get_my_uid ( )		4997416	2		=			
ANR	4997478	Identifier	MyUid		4997416	0					
ANR	4997479	CallExpression	get_my_uid ( )		4997416	1					
ANR	4997480	Callee	get_my_uid		4997416	0					
ANR	4997481	Identifier	get_my_uid		4997416	0					
ANR	4997482	ArgumentList			4997416	1					
ANR	4997483	IdentifierDeclStatement	gid_t MyGid = get_my_gid ( ) ;	784:1:20946:20972	4997416	9	True				
ANR	4997484	IdentifierDecl	MyGid = get_my_gid ( )		4997416	0					
ANR	4997485	IdentifierDeclType	gid_t		4997416	0					
ANR	4997486	Identifier	MyGid		4997416	1					
ANR	4997487	AssignmentExpression	MyGid = get_my_gid ( )		4997416	2		=			
ANR	4997488	Identifier	MyGid		4997416	0					
ANR	4997489	CallExpression	get_my_gid ( )		4997416	1					
ANR	4997490	Callee	get_my_gid		4997416	0					
ANR	4997491	Identifier	get_my_gid		4997416	0					
ANR	4997492	ArgumentList			4997416	1					
ANR	4997493	ExpressionStatement	RealCondorUid = INT_MAX	788:1:21069:21092	4997416	10	True				
ANR	4997494	AssignmentExpression	RealCondorUid = INT_MAX		4997416	0		=			
ANR	4997495	Identifier	RealCondorUid		4997416	0					
ANR	4997496	Identifier	INT_MAX		4997416	1					
ANR	4997497	ExpressionStatement	RealCondorGid = INT_MAX	789:1:21095:21118	4997416	11	True				
ANR	4997498	AssignmentExpression	RealCondorGid = INT_MAX		4997416	0		=			
ANR	4997499	Identifier	RealCondorGid		4997416	0					
ANR	4997500	Identifier	INT_MAX		4997416	1					
ANR	4997501	ExpressionStatement	"pcache ( ) -> get_user_uid ( myDistro -> Get ( ) , RealCondorUid )"	790:1:21121:21177	4997416	12	True				
ANR	4997502	CallExpression	"pcache ( ) -> get_user_uid ( myDistro -> Get ( ) , RealCondorUid )"		4997416	0					
ANR	4997503	Callee	pcache ( ) -> get_user_uid		4997416	0					
ANR	4997504	PtrMemberAccess	pcache ( ) -> get_user_uid		4997416	0					
ANR	4997505	CallExpression	pcache ( )		4997416	0					
ANR	4997506	Callee	pcache		4997416	0					
ANR	4997507	Identifier	pcache		4997416	0					
ANR	4997508	ArgumentList			4997416	1					
ANR	4997509	Identifier	get_user_uid		4997416	1					
ANR	4997510	ArgumentList	myDistro -> Get ( )		4997416	1					
ANR	4997511	Argument	myDistro -> Get ( )		4997416	0					
ANR	4997512	CallExpression	myDistro -> Get ( )		4997416	0					
ANR	4997513	Callee	myDistro -> Get		4997416	0					
ANR	4997514	PtrMemberAccess	myDistro -> Get		4997416	0					
ANR	4997515	Identifier	myDistro		4997416	0					
ANR	4997516	Identifier	Get		4997416	1					
ANR	4997517	ArgumentList			4997416	1					
ANR	4997518	Argument	RealCondorUid		4997416	1					
ANR	4997519	Identifier	RealCondorUid		4997416	0					
ANR	4997520	ExpressionStatement	"pcache ( ) -> get_user_gid ( myDistro -> Get ( ) , RealCondorGid )"	791:1:21180:21236	4997416	13	True				
ANR	4997521	CallExpression	"pcache ( ) -> get_user_gid ( myDistro -> Get ( ) , RealCondorGid )"		4997416	0					
ANR	4997522	Callee	pcache ( ) -> get_user_gid		4997416	0					
ANR	4997523	PtrMemberAccess	pcache ( ) -> get_user_gid		4997416	0					
ANR	4997524	CallExpression	pcache ( )		4997416	0					
ANR	4997525	Callee	pcache		4997416	0					
ANR	4997526	Identifier	pcache		4997416	0					
ANR	4997527	ArgumentList			4997416	1					
ANR	4997528	Identifier	get_user_gid		4997416	1					
ANR	4997529	ArgumentList	myDistro -> Get ( )		4997416	1					
ANR	4997530	Argument	myDistro -> Get ( )		4997416	0					
ANR	4997531	CallExpression	myDistro -> Get ( )		4997416	0					
ANR	4997532	Callee	myDistro -> Get		4997416	0					
ANR	4997533	PtrMemberAccess	myDistro -> Get		4997416	0					
ANR	4997534	Identifier	myDistro		4997416	0					
ANR	4997535	Identifier	Get		4997416	1					
ANR	4997536	ArgumentList			4997416	1					
ANR	4997537	Argument	RealCondorGid		4997416	1					
ANR	4997538	Identifier	RealCondorGid		4997416	0					
ANR	4997539	IdentifierDeclStatement	const char * envName = EnvGetName ( ENV_UG_IDS ) ;	793:1:21240:21286	4997416	14	True				
ANR	4997540	IdentifierDecl	* envName = EnvGetName ( ENV_UG_IDS )		4997416	0					
ANR	4997541	IdentifierDeclType	const char *		4997416	0					
ANR	4997542	Identifier	envName		4997416	1					
ANR	4997543	AssignmentExpression	* envName = EnvGetName ( ENV_UG_IDS )		4997416	2		=			
ANR	4997544	Identifier	envName		4997416	0					
ANR	4997545	CallExpression	EnvGetName ( ENV_UG_IDS )		4997416	1					
ANR	4997546	Callee	EnvGetName		4997416	0					
ANR	4997547	Identifier	EnvGetName		4997416	0					
ANR	4997548	ArgumentList	ENV_UG_IDS		4997416	1					
ANR	4997549	Argument	ENV_UG_IDS		4997416	0					
ANR	4997550	Identifier	ENV_UG_IDS		4997416	0					
ANR	4997551	IfStatement	if ( ( env_val = getenv ( envName ) ) )		4997416	15					
ANR	4997552	Condition	env_val = getenv ( envName )	794:5:21294:21320	4997416	0	True				
ANR	4997553	AssignmentExpression	env_val = getenv ( envName )		4997416	0		=			
ANR	4997554	Identifier	env_val		4997416	0					
ANR	4997555	CallExpression	getenv ( envName )		4997416	1					
ANR	4997556	Callee	getenv		4997416	0					
ANR	4997557	Identifier	getenv		4997416	0					
ANR	4997558	ArgumentList	envName		4997416	1					
ANR	4997559	Argument	envName		4997416	0					
ANR	4997560	Identifier	envName		4997416	0					
ANR	4997561	CompoundStatement		28:35:863:863	4997416	1					
ANR	4997562	ExpressionStatement	val = env_val	795:2:21328:21341	4997416	0	True				
ANR	4997563	AssignmentExpression	val = env_val		4997416	0		=			
ANR	4997564	Identifier	val		4997416	0					
ANR	4997565	Identifier	env_val		4997416	1					
ANR	4997566	ElseStatement	else		4997416	0					
ANR	4997567	IfStatement	if ( ( config_val = param_without_default ( envName ) ) )		4997416	0					
ANR	4997568	Condition	config_val = param_without_default ( envName )	796:12:21355:21399	4997416	0	True				
ANR	4997569	AssignmentExpression	config_val = param_without_default ( envName )		4997416	0		=			
ANR	4997570	Identifier	config_val		4997416	0					
ANR	4997571	CallExpression	param_without_default ( envName )		4997416	1					
ANR	4997572	Callee	param_without_default		4997416	0					
ANR	4997573	Identifier	param_without_default		4997416	0					
ANR	4997574	ArgumentList	envName		4997416	1					
ANR	4997575	Argument	envName		4997416	0					
ANR	4997576	Identifier	envName		4997416	0					
ANR	4997577	CompoundStatement		30:60:942:942	4997416	1					
ANR	4997578	ExpressionStatement	val = config_val	801:2:21697:21713	4997416	0	True				
ANR	4997579	AssignmentExpression	val = config_val		4997416	0		=			
ANR	4997580	Identifier	val		4997416	0					
ANR	4997581	Identifier	config_val		4997416	1					
ANR	4997582	IfStatement	if ( val )		4997416	16					
ANR	4997583	Condition	val	803:5:21723:21725	4997416	0	True				
ANR	4997584	Identifier	val		4997416	0					
ANR	4997585	CompoundStatement		37:11:1268:1268	4997416	1					
ANR	4997586	IfStatement	"if ( sscanf ( val , ""%d.%d"" , & envCondorUid , & envCondorGid ) != 2 )"		4997416	0					
ANR	4997587	Condition	"sscanf ( val , ""%d.%d"" , & envCondorUid , & envCondorGid ) != 2"	804:6:21739:21793	4997416	0	True				
ANR	4997588	EqualityExpression	"sscanf ( val , ""%d.%d"" , & envCondorUid , & envCondorGid ) != 2"		4997416	0		!=			
ANR	4997589	CallExpression	"sscanf ( val , ""%d.%d"" , & envCondorUid , & envCondorGid )"		4997416	0					
ANR	4997590	Callee	sscanf		4997416	0					
ANR	4997591	Identifier	sscanf		4997416	0					
ANR	4997592	ArgumentList	val		4997416	1					
ANR	4997593	Argument	val		4997416	0					
ANR	4997594	Identifier	val		4997416	0					
ANR	4997595	Argument	"""%d.%d"""		4997416	1					
ANR	4997596	PrimaryExpression	"""%d.%d"""		4997416	0					
ANR	4997597	Argument	& envCondorUid		4997416	2					
ANR	4997598	UnaryOperationExpression	& envCondorUid		4997416	0					
ANR	4997599	UnaryOperator	&		4997416	0					
ANR	4997600	Identifier	envCondorUid		4997416	1					
ANR	4997601	Argument	& envCondorGid		4997416	3					
ANR	4997602	UnaryOperationExpression	& envCondorGid		4997416	0					
ANR	4997603	UnaryOperator	&		4997416	0					
ANR	4997604	Identifier	envCondorGid		4997416	1					
ANR	4997605	PrimaryExpression	2		4997416	1					
ANR	4997606	CompoundStatement		38:64:1336:1336	4997416	1					
ANR	4997607	ExpressionStatement	"fprintf ( stderr , ""ERROR: badly formed value in %s "" , envName )"	805:3:21802:21864	4997416	0	True				
ANR	4997608	CallExpression	"fprintf ( stderr , ""ERROR: badly formed value in %s "" , envName )"		4997416	0					
ANR	4997609	Callee	fprintf		4997416	0					
ANR	4997610	Identifier	fprintf		4997416	0					
ANR	4997611	ArgumentList	stderr		4997416	1					
ANR	4997612	Argument	stderr		4997416	0					
ANR	4997613	Identifier	stderr		4997416	0					
ANR	4997614	Argument	"""ERROR: badly formed value in %s """		4997416	1					
ANR	4997615	PrimaryExpression	"""ERROR: badly formed value in %s """		4997416	0					
ANR	4997616	Argument	envName		4997416	2					
ANR	4997617	Identifier	envName		4997416	0					
ANR	4997618	ExpressionStatement	"fprintf ( stderr , ""%s variable (%s).\\n"" , env_val ? ""environment"" : ""config file"" , val )"	806:3:21869:21961	4997416	1	True				
ANR	4997619	CallExpression	"fprintf ( stderr , ""%s variable (%s).\\n"" , env_val ? ""environment"" : ""config file"" , val )"		4997416	0					
ANR	4997620	Callee	fprintf		4997416	0					
ANR	4997621	Identifier	fprintf		4997416	0					
ANR	4997622	ArgumentList	stderr		4997416	1					
ANR	4997623	Argument	stderr		4997416	0					
ANR	4997624	Identifier	stderr		4997416	0					
ANR	4997625	Argument	"""%s variable (%s).\\n"""		4997416	1					
ANR	4997626	PrimaryExpression	"""%s variable (%s).\\n"""		4997416	0					
ANR	4997627	Argument	"env_val ? ""environment"" : ""config file"""		4997416	2					
ANR	4997628	ConditionalExpression	"env_val ? ""environment"" : ""config file"""		4997416	0					
ANR	4997629	Condition	env_val		4997416	0					
ANR	4997630	Identifier	env_val		4997416	0					
ANR	4997631	PrimaryExpression	"""environment"""		4997416	1					
ANR	4997632	PrimaryExpression	"""config file"""		4997416	2					
ANR	4997633	Argument	val		4997416	3					
ANR	4997634	Identifier	val		4997416	0					
ANR	4997635	ExpressionStatement	"fprintf ( stderr , ""Please set %s to "" , envName )"	808:3:21966:22013	4997416	2	True				
ANR	4997636	CallExpression	"fprintf ( stderr , ""Please set %s to "" , envName )"		4997416	0					
ANR	4997637	Callee	fprintf		4997416	0					
ANR	4997638	Identifier	fprintf		4997416	0					
ANR	4997639	ArgumentList	stderr		4997416	1					
ANR	4997640	Argument	stderr		4997416	0					
ANR	4997641	Identifier	stderr		4997416	0					
ANR	4997642	Argument	"""Please set %s to """		4997416	1					
ANR	4997643	PrimaryExpression	"""Please set %s to """		4997416	0					
ANR	4997644	Argument	envName		4997416	2					
ANR	4997645	Identifier	envName		4997416	0					
ANR	4997646	ExpressionStatement	"fprintf ( stderr , ""the '.' seperated uid, gid pair that\\n"" )"	809:3:22018:22077	4997416	3	True				
ANR	4997647	CallExpression	"fprintf ( stderr , ""the '.' seperated uid, gid pair that\\n"" )"		4997416	0					
ANR	4997648	Callee	fprintf		4997416	0					
ANR	4997649	Identifier	fprintf		4997416	0					
ANR	4997650	ArgumentList	stderr		4997416	1					
ANR	4997651	Argument	stderr		4997416	0					
ANR	4997652	Identifier	stderr		4997416	0					
ANR	4997653	Argument	"""the '.' seperated uid, gid pair that\\n"""		4997416	1					
ANR	4997654	PrimaryExpression	"""the '.' seperated uid, gid pair that\\n"""		4997416	0					
ANR	4997655	ExpressionStatement	"fprintf ( stderr , ""should be used by %s.\\n"" , myDistro -> Get ( ) )"	810:3:22082:22143	4997416	4	True				
ANR	4997656	CallExpression	"fprintf ( stderr , ""should be used by %s.\\n"" , myDistro -> Get ( ) )"		4997416	0					
ANR	4997657	Callee	fprintf		4997416	0					
ANR	4997658	Identifier	fprintf		4997416	0					
ANR	4997659	ArgumentList	stderr		4997416	1					
ANR	4997660	Argument	stderr		4997416	0					
ANR	4997661	Identifier	stderr		4997416	0					
ANR	4997662	Argument	"""should be used by %s.\\n"""		4997416	1					
ANR	4997663	PrimaryExpression	"""should be used by %s.\\n"""		4997416	0					
ANR	4997664	Argument	myDistro -> Get ( )		4997416	2					
ANR	4997665	CallExpression	myDistro -> Get ( )		4997416	0					
ANR	4997666	Callee	myDistro -> Get		4997416	0					
ANR	4997667	PtrMemberAccess	myDistro -> Get		4997416	0					
ANR	4997668	Identifier	myDistro		4997416	0					
ANR	4997669	Identifier	Get		4997416	1					
ANR	4997670	ArgumentList			4997416	1					
ANR	4997671	ExpressionStatement	exit ( 1 )	811:3:22148:22155	4997416	5	True				
ANR	4997672	CallExpression	exit ( 1 )		4997416	0					
ANR	4997673	Callee	exit		4997416	0					
ANR	4997674	Identifier	exit		4997416	0					
ANR	4997675	ArgumentList	1		4997416	1					
ANR	4997676	Argument	1		4997416	0					
ANR	4997677	PrimaryExpression	1		4997416	0					
ANR	4997678	IfStatement	if ( CondorUserName != NULL )		4997416	1					
ANR	4997679	Condition	CondorUserName != NULL	813:6:22167:22188	4997416	0	True				
ANR	4997680	EqualityExpression	CondorUserName != NULL		4997416	0		!=			
ANR	4997681	Identifier	CondorUserName		4997416	0					
ANR	4997682	Identifier	NULL		4997416	1					
ANR	4997683	CompoundStatement		47:31:1731:1731	4997416	1					
ANR	4997684	ExpressionStatement	free ( CondorUserName )	814:3:22197:22219	4997416	0	True				
ANR	4997685	CallExpression	free ( CondorUserName )		4997416	0					
ANR	4997686	Callee	free		4997416	0					
ANR	4997687	Identifier	free		4997416	0					
ANR	4997688	ArgumentList	CondorUserName		4997416	1					
ANR	4997689	Argument	CondorUserName		4997416	0					
ANR	4997690	Identifier	CondorUserName		4997416	0					
ANR	4997691	ExpressionStatement	CondorUserName = NULL	815:3:22224:22245	4997416	1	True				
ANR	4997692	AssignmentExpression	CondorUserName = NULL		4997416	0		=			
ANR	4997693	Identifier	CondorUserName		4997416	0					
ANR	4997694	Identifier	NULL		4997416	1					
ANR	4997695	ExpressionStatement	"result = pcache ( ) -> get_user_name ( envCondorUid , CondorUserName )"	817:2:22253:22317	4997416	2	True				
ANR	4997696	AssignmentExpression	"result = pcache ( ) -> get_user_name ( envCondorUid , CondorUserName )"		4997416	0		=			
ANR	4997697	Identifier	result		4997416	0					
ANR	4997698	CallExpression	"pcache ( ) -> get_user_name ( envCondorUid , CondorUserName )"		4997416	1					
ANR	4997699	Callee	pcache ( ) -> get_user_name		4997416	0					
ANR	4997700	PtrMemberAccess	pcache ( ) -> get_user_name		4997416	0					
ANR	4997701	CallExpression	pcache ( )		4997416	0					
ANR	4997702	Callee	pcache		4997416	0					
ANR	4997703	Identifier	pcache		4997416	0					
ANR	4997704	ArgumentList			4997416	1					
ANR	4997705	Identifier	get_user_name		4997416	1					
ANR	4997706	ArgumentList	envCondorUid		4997416	1					
ANR	4997707	Argument	envCondorUid		4997416	0					
ANR	4997708	Identifier	envCondorUid		4997416	0					
ANR	4997709	Argument	CondorUserName		4997416	1					
ANR	4997710	Identifier	CondorUserName		4997416	0					
ANR	4997711	IfStatement	if ( ! result )		4997416	3					
ANR	4997712	Condition	! result	819:6:22326:22333	4997416	0	True				
ANR	4997713	UnaryOperationExpression	! result		4997416	0					
ANR	4997714	UnaryOperator	!		4997416	0					
ANR	4997715	Identifier	result		4997416	1					
ANR	4997716	CompoundStatement		53:17:1876:1876	4997416	1					
ANR	4997717	ExpressionStatement	"fprintf ( stderr , ""ERROR: the uid specified in %s "" , envName )"	823:3:22378:22439	4997416	0	True				
ANR	4997718	CallExpression	"fprintf ( stderr , ""ERROR: the uid specified in %s "" , envName )"		4997416	0					
ANR	4997719	Callee	fprintf		4997416	0					
ANR	4997720	Identifier	fprintf		4997416	0					
ANR	4997721	ArgumentList	stderr		4997416	1					
ANR	4997722	Argument	stderr		4997416	0					
ANR	4997723	Identifier	stderr		4997416	0					
ANR	4997724	Argument	"""ERROR: the uid specified in %s """		4997416	1					
ANR	4997725	PrimaryExpression	"""ERROR: the uid specified in %s """		4997416	0					
ANR	4997726	Argument	envName		4997416	2					
ANR	4997727	Identifier	envName		4997416	0					
ANR	4997728	ExpressionStatement	"fprintf ( stderr , ""%s variable (%d)\\n"" , env_val ? ""environment"" : ""config file"" , envCondorUid )"	824:3:22444:22545	4997416	1	True				
ANR	4997729	CallExpression	"fprintf ( stderr , ""%s variable (%d)\\n"" , env_val ? ""environment"" : ""config file"" , envCondorUid )"		4997416	0					
ANR	4997730	Callee	fprintf		4997416	0					
ANR	4997731	Identifier	fprintf		4997416	0					
ANR	4997732	ArgumentList	stderr		4997416	1					
ANR	4997733	Argument	stderr		4997416	0					
ANR	4997734	Identifier	stderr		4997416	0					
ANR	4997735	Argument	"""%s variable (%d)\\n"""		4997416	1					
ANR	4997736	PrimaryExpression	"""%s variable (%d)\\n"""		4997416	0					
ANR	4997737	Argument	"env_val ? ""environment"" : ""config file"""		4997416	2					
ANR	4997738	ConditionalExpression	"env_val ? ""environment"" : ""config file"""		4997416	0					
ANR	4997739	Condition	env_val		4997416	0					
ANR	4997740	Identifier	env_val		4997416	0					
ANR	4997741	PrimaryExpression	"""environment"""		4997416	1					
ANR	4997742	PrimaryExpression	"""config file"""		4997416	2					
ANR	4997743	Argument	envCondorUid		4997416	3					
ANR	4997744	Identifier	envCondorUid		4997416	0					
ANR	4997745	ExpressionStatement	"fprintf ( stderr , ""does not exist in your password information.\\n"" )"	826:3:22550:22616	4997416	2	True				
ANR	4997746	CallExpression	"fprintf ( stderr , ""does not exist in your password information.\\n"" )"		4997416	0					
ANR	4997747	Callee	fprintf		4997416	0					
ANR	4997748	Identifier	fprintf		4997416	0					
ANR	4997749	ArgumentList	stderr		4997416	1					
ANR	4997750	Argument	stderr		4997416	0					
ANR	4997751	Identifier	stderr		4997416	0					
ANR	4997752	Argument	"""does not exist in your password information.\\n"""		4997416	1					
ANR	4997753	PrimaryExpression	"""does not exist in your password information.\\n"""		4997416	0					
ANR	4997754	ExpressionStatement	"fprintf ( stderr , ""Please set %s to "" , envName )"	827:3:22621:22666	4997416	3	True				
ANR	4997755	CallExpression	"fprintf ( stderr , ""Please set %s to "" , envName )"		4997416	0					
ANR	4997756	Callee	fprintf		4997416	0					
ANR	4997757	Identifier	fprintf		4997416	0					
ANR	4997758	ArgumentList	stderr		4997416	1					
ANR	4997759	Argument	stderr		4997416	0					
ANR	4997760	Identifier	stderr		4997416	0					
ANR	4997761	Argument	"""Please set %s to """		4997416	1					
ANR	4997762	PrimaryExpression	"""Please set %s to """		4997416	0					
ANR	4997763	Argument	envName		4997416	2					
ANR	4997764	Identifier	envName		4997416	0					
ANR	4997765	ExpressionStatement	"fprintf ( stderr , ""the '.' seperated uid, gid pair that\\n"" )"	828:3:22671:22728	4997416	4	True				
ANR	4997766	CallExpression	"fprintf ( stderr , ""the '.' seperated uid, gid pair that\\n"" )"		4997416	0					
ANR	4997767	Callee	fprintf		4997416	0					
ANR	4997768	Identifier	fprintf		4997416	0					
ANR	4997769	ArgumentList	stderr		4997416	1					
ANR	4997770	Argument	stderr		4997416	0					
ANR	4997771	Identifier	stderr		4997416	0					
ANR	4997772	Argument	"""the '.' seperated uid, gid pair that\\n"""		4997416	1					
ANR	4997773	PrimaryExpression	"""the '.' seperated uid, gid pair that\\n"""		4997416	0					
ANR	4997774	ExpressionStatement	"fprintf ( stderr , ""should be used by %s.\\n"" , myDistro -> Get ( ) )"	829:3:22733:22793	4997416	5	True				
ANR	4997775	CallExpression	"fprintf ( stderr , ""should be used by %s.\\n"" , myDistro -> Get ( ) )"		4997416	0					
ANR	4997776	Callee	fprintf		4997416	0					
ANR	4997777	Identifier	fprintf		4997416	0					
ANR	4997778	ArgumentList	stderr		4997416	1					
ANR	4997779	Argument	stderr		4997416	0					
ANR	4997780	Identifier	stderr		4997416	0					
ANR	4997781	Argument	"""should be used by %s.\\n"""		4997416	1					
ANR	4997782	PrimaryExpression	"""should be used by %s.\\n"""		4997416	0					
ANR	4997783	Argument	myDistro -> Get ( )		4997416	2					
ANR	4997784	CallExpression	myDistro -> Get ( )		4997416	0					
ANR	4997785	Callee	myDistro -> Get		4997416	0					
ANR	4997786	PtrMemberAccess	myDistro -> Get		4997416	0					
ANR	4997787	Identifier	myDistro		4997416	0					
ANR	4997788	Identifier	Get		4997416	1					
ANR	4997789	ArgumentList			4997416	1					
ANR	4997790	ExpressionStatement	exit ( 1 )	830:3:22798:22805	4997416	6	True				
ANR	4997791	CallExpression	exit ( 1 )		4997416	0					
ANR	4997792	Callee	exit		4997416	0					
ANR	4997793	Identifier	exit		4997416	0					
ANR	4997794	ArgumentList	1		4997416	1					
ANR	4997795	Argument	1		4997416	0					
ANR	4997796	PrimaryExpression	1		4997416	0					
ANR	4997797	IfStatement	if ( config_val )		4997416	17					
ANR	4997798	Condition	config_val	833:5:22819:22828	4997416	0	True				
ANR	4997799	Identifier	config_val		4997416	0					
ANR	4997800	CompoundStatement		67:18:2371:2371	4997416	1					
ANR	4997801	ExpressionStatement	free ( config_val )	834:2:22836:22854	4997416	0	True				
ANR	4997802	CallExpression	free ( config_val )		4997416	0					
ANR	4997803	Callee	free		4997416	0					
ANR	4997804	Identifier	free		4997416	0					
ANR	4997805	ArgumentList	config_val		4997416	1					
ANR	4997806	Argument	config_val		4997416	0					
ANR	4997807	Identifier	config_val		4997416	0					
ANR	4997808	ExpressionStatement	config_val = NULL	835:2:22858:22875	4997416	1	True				
ANR	4997809	AssignmentExpression	config_val = NULL		4997416	0		=			
ANR	4997810	Identifier	config_val		4997416	0					
ANR	4997811	Identifier	NULL		4997416	1					
ANR	4997812	ExpressionStatement	val = NULL	836:2:22879:22889	4997416	2	True				
ANR	4997813	AssignmentExpression	val = NULL		4997416	0		=			
ANR	4997814	Identifier	val		4997416	0					
ANR	4997815	Identifier	NULL		4997416	1					
ANR	4997816	IfStatement	if ( can_switch_ids ( ) )		4997416	18					
ANR	4997817	Condition	can_switch_ids ( )	841:5:23017:23032	4997416	0	True				
ANR	4997818	CallExpression	can_switch_ids ( )		4997416	0					
ANR	4997819	Callee	can_switch_ids		4997416	0					
ANR	4997820	Identifier	can_switch_ids		4997416	0					
ANR	4997821	ArgumentList			4997416	1					
ANR	4997822	CompoundStatement		76:2:2579:2626	4997416	1					
ANR	4997823	IdentifierDeclStatement	const char * enviName = EnvGetName ( ENV_UG_IDS ) ;	842:2:23040:23087	4997416	0	True				
ANR	4997824	IdentifierDecl	* enviName = EnvGetName ( ENV_UG_IDS )		4997416	0					
ANR	4997825	IdentifierDeclType	const char *		4997416	0					
ANR	4997826	Identifier	enviName		4997416	1					
ANR	4997827	AssignmentExpression	* enviName = EnvGetName ( ENV_UG_IDS )		4997416	2		=			
ANR	4997828	Identifier	enviName		4997416	0					
ANR	4997829	CallExpression	EnvGetName ( ENV_UG_IDS )		4997416	1					
ANR	4997830	Callee	EnvGetName		4997416	0					
ANR	4997831	Identifier	EnvGetName		4997416	0					
ANR	4997832	ArgumentList	ENV_UG_IDS		4997416	1					
ANR	4997833	Argument	ENV_UG_IDS		4997416	0					
ANR	4997834	Identifier	ENV_UG_IDS		4997416	0					
ANR	4997835	IfStatement	if ( envCondorUid != INT_MAX )		4997416	1					
ANR	4997836	Condition	envCondorUid != INT_MAX	843:6:23096:23118	4997416	0	True				
ANR	4997837	EqualityExpression	envCondorUid != INT_MAX		4997416	0		!=			
ANR	4997838	Identifier	envCondorUid		4997416	0					
ANR	4997839	Identifier	INT_MAX		4997416	1					
ANR	4997840	CompoundStatement		77:32:2661:2661	4997416	1					
ANR	4997841	ExpressionStatement	CondorUid = envCondorUid	845:4:23175:23199	4997416	0	True				
ANR	4997842	AssignmentExpression	CondorUid = envCondorUid		4997416	0		=			
ANR	4997843	Identifier	CondorUid		4997416	0					
ANR	4997844	Identifier	envCondorUid		4997416	1					
ANR	4997845	ExpressionStatement	CondorGid = envCondorGid	846:4:23205:23229	4997416	1	True				
ANR	4997846	AssignmentExpression	CondorGid = envCondorGid		4997416	0		=			
ANR	4997847	Identifier	CondorGid		4997416	0					
ANR	4997848	Identifier	envCondorGid		4997416	1					
ANR	4997849	ElseStatement	else		4997416	0					
ANR	4997850	CompoundStatement		81:9:2779:2779	4997416	0					
ANR	4997851	IfStatement	if ( RealCondorUid != INT_MAX )		4997416	0					
ANR	4997852	Condition	RealCondorUid != INT_MAX	849:7:23295:23318	4997416	0	True				
ANR	4997853	EqualityExpression	RealCondorUid != INT_MAX		4997416	0		!=			
ANR	4997854	Identifier	RealCondorUid		4997416	0					
ANR	4997855	Identifier	INT_MAX		4997416	1					
ANR	4997856	CompoundStatement		83:34:2861:2861	4997416	1					
ANR	4997857	ExpressionStatement	CondorUid = RealCondorUid	850:4:23328:23353	4997416	0	True				
ANR	4997858	AssignmentExpression	CondorUid = RealCondorUid		4997416	0		=			
ANR	4997859	Identifier	CondorUid		4997416	0					
ANR	4997860	Identifier	RealCondorUid		4997416	1					
ANR	4997861	ExpressionStatement	CondorGid = RealCondorGid	851:4:23359:23384	4997416	1	True				
ANR	4997862	AssignmentExpression	CondorGid = RealCondorGid		4997416	0		=			
ANR	4997863	Identifier	CondorGid		4997416	0					
ANR	4997864	Identifier	RealCondorGid		4997416	1					
ANR	4997865	IfStatement	if ( CondorUserName != NULL )		4997416	2					
ANR	4997866	Condition	CondorUserName != NULL	852:8:23394:23415	4997416	0	True				
ANR	4997867	EqualityExpression	CondorUserName != NULL		4997416	0		!=			
ANR	4997868	Identifier	CondorUserName		4997416	0					
ANR	4997869	Identifier	NULL		4997416	1					
ANR	4997870	CompoundStatement		86:33:2958:2958	4997416	1					
ANR	4997871	ExpressionStatement	free ( CondorUserName )	853:5:23426:23448	4997416	0	True				
ANR	4997872	CallExpression	free ( CondorUserName )		4997416	0					
ANR	4997873	Callee	free		4997416	0					
ANR	4997874	Identifier	free		4997416	0					
ANR	4997875	ArgumentList	CondorUserName		4997416	1					
ANR	4997876	Argument	CondorUserName		4997416	0					
ANR	4997877	Identifier	CondorUserName		4997416	0					
ANR	4997878	ExpressionStatement	CondorUserName = NULL	854:5:23455:23476	4997416	1	True				
ANR	4997879	AssignmentExpression	CondorUserName = NULL		4997416	0		=			
ANR	4997880	Identifier	CondorUserName		4997416	0					
ANR	4997881	Identifier	NULL		4997416	1					
ANR	4997882	ExpressionStatement	CondorUserName = strdup ( myDistro -> Get ( ) )	856:4:23488:23530	4997416	3	True				
ANR	4997883	AssignmentExpression	CondorUserName = strdup ( myDistro -> Get ( ) )		4997416	0		=			
ANR	4997884	Identifier	CondorUserName		4997416	0					
ANR	4997885	CallExpression	strdup ( myDistro -> Get ( ) )		4997416	1					
ANR	4997886	Callee	strdup		4997416	0					
ANR	4997887	Identifier	strdup		4997416	0					
ANR	4997888	ArgumentList	myDistro -> Get ( )		4997416	1					
ANR	4997889	Argument	myDistro -> Get ( )		4997416	0					
ANR	4997890	CallExpression	myDistro -> Get ( )		4997416	0					
ANR	4997891	Callee	myDistro -> Get		4997416	0					
ANR	4997892	PtrMemberAccess	myDistro -> Get		4997416	0					
ANR	4997893	Identifier	myDistro		4997416	0					
ANR	4997894	Identifier	Get		4997416	1					
ANR	4997895	ArgumentList			4997416	1					
ANR	4997896	IfStatement	if ( CondorUserName == NULL )		4997416	4					
ANR	4997897	Condition	CondorUserName == NULL	857:8:23540:23561	4997416	0	True				
ANR	4997898	EqualityExpression	CondorUserName == NULL		4997416	0		==			
ANR	4997899	Identifier	CondorUserName		4997416	0					
ANR	4997900	Identifier	NULL		4997416	1					
ANR	4997901	CompoundStatement		91:32:3103:3103	4997416	1					
ANR	4997902	ExpressionStatement	"EXCEPT ( ""Out of memory. Aborting."" )"	858:5:23571:23605	4997416	0	True				
ANR	4997903	CallExpression	"EXCEPT ( ""Out of memory. Aborting."" )"		4997416	0					
ANR	4997904	Callee	EXCEPT		4997416	0					
ANR	4997905	Identifier	EXCEPT		4997416	0					
ANR	4997906	ArgumentList	"""Out of memory. Aborting."""		4997416	1					
ANR	4997907	Argument	"""Out of memory. Aborting."""		4997416	0					
ANR	4997908	PrimaryExpression	"""Out of memory. Aborting."""		4997416	0					
ANR	4997909	ElseStatement	else		4997416	0					
ANR	4997910	CompoundStatement		94:10:3162:3162	4997416	0					
ANR	4997911	Statement	fprintf	861:4:23629:23635	4997416	0	True				
ANR	4997912	Statement	(	861:11:23636:23636	4997416	1	True				
ANR	4997913	Statement	stderr	861:13:23638:23643	4997416	2	True				
ANR	4997914	Statement	","	861:19:23644:23644	4997416	3	True				
ANR	4997915	Statement	"""Can't find \\""%s\\"" in the password file and """	862:7:23653:23697	4997416	4	True				
ANR	4997916	Statement	"""%s not defined in %s_config or as an """	863:7:23706:23744	4997416	5	True				
ANR	4997917	Statement	"""environment variable.\\n"""	864:7:23753:23777	4997416	6	True				
ANR	4997918	Statement	","	864:32:23778:23778	4997416	7	True				
ANR	4997919	Statement	myDistro	864:34:23780:23787	4997416	8	True				
ANR	4997920	Statement	->	864:42:23788:23789	4997416	9	True				
ANR	4997921	Statement	Get	864:44:23790:23792	4997416	10	True				
ANR	4997922	Statement	(	864:47:23793:23793	4997416	11	True				
ANR	4997923	Statement	)	864:48:23794:23794	4997416	12	True				
ANR	4997924	Statement	","	864:49:23795:23795	4997416	13	True				
ANR	4997925	Statement	enviName	865:7:23804:23811	4997416	14	True				
ANR	4997926	Statement	","	865:15:23812:23812	4997416	15	True				
ANR	4997927	Statement	myDistro	865:17:23814:23821	4997416	16	True				
ANR	4997928	Statement	->	865:25:23822:23823	4997416	17	True				
ANR	4997929	Statement	Get	865:27:23824:23826	4997416	18	True				
ANR	4997930	Statement	(	865:30:23827:23827	4997416	19	True				
ANR	4997931	Statement	)	865:31:23828:23828	4997416	20	True				
ANR	4997932	Statement	)	865:33:23830:23830	4997416	21	True				
ANR	4997933	ExpressionStatement		865:34:23831:23831	4997416	22	True				
ANR	4997934	ExpressionStatement	exit ( 1 )	866:4:23837:23844	4997416	23	True				
ANR	4997935	CallExpression	exit ( 1 )		4997416	0					
ANR	4997936	Callee	exit		4997416	0					
ANR	4997937	Identifier	exit		4997416	0					
ANR	4997938	ArgumentList	1		4997416	1					
ANR	4997939	Argument	1		4997416	0					
ANR	4997940	PrimaryExpression	1		4997416	0					
ANR	4997941	ElseStatement	else		4997416	0					
ANR	4997942	CompoundStatement		109:8:3776:3776	4997416	0					
ANR	4997943	ExpressionStatement	CondorUid = MyUid	877:2:24305:24322	4997416	0	True				
ANR	4997944	AssignmentExpression	CondorUid = MyUid		4997416	0		=			
ANR	4997945	Identifier	CondorUid		4997416	0					
ANR	4997946	Identifier	MyUid		4997416	1					
ANR	4997947	ExpressionStatement	CondorGid = MyGid	878:2:24326:24343	4997416	1	True				
ANR	4997948	AssignmentExpression	CondorGid = MyGid		4997416	0		=			
ANR	4997949	Identifier	CondorGid		4997416	0					
ANR	4997950	Identifier	MyGid		4997416	1					
ANR	4997951	IfStatement	if ( CondorUserName != NULL )		4997416	2					
ANR	4997952	Condition	CondorUserName != NULL	879:6:24351:24372	4997416	0	True				
ANR	4997953	EqualityExpression	CondorUserName != NULL		4997416	0		!=			
ANR	4997954	Identifier	CondorUserName		4997416	0					
ANR	4997955	Identifier	NULL		4997416	1					
ANR	4997956	CompoundStatement		113:31:3915:3915	4997416	1					
ANR	4997957	ExpressionStatement	free ( CondorUserName )	880:3:24381:24403	4997416	0	True				
ANR	4997958	CallExpression	free ( CondorUserName )		4997416	0					
ANR	4997959	Callee	free		4997416	0					
ANR	4997960	Identifier	free		4997416	0					
ANR	4997961	ArgumentList	CondorUserName		4997416	1					
ANR	4997962	Argument	CondorUserName		4997416	0					
ANR	4997963	Identifier	CondorUserName		4997416	0					
ANR	4997964	ExpressionStatement	CondorUserName = NULL	881:3:24408:24429	4997416	1	True				
ANR	4997965	AssignmentExpression	CondorUserName = NULL		4997416	0		=			
ANR	4997966	Identifier	CondorUserName		4997416	0					
ANR	4997967	Identifier	NULL		4997416	1					
ANR	4997968	ExpressionStatement	"result = pcache ( ) -> get_user_name ( CondorUid , CondorUserName )"	883:2:24437:24498	4997416	3	True				
ANR	4997969	AssignmentExpression	"result = pcache ( ) -> get_user_name ( CondorUid , CondorUserName )"		4997416	0		=			
ANR	4997970	Identifier	result		4997416	0					
ANR	4997971	CallExpression	"pcache ( ) -> get_user_name ( CondorUid , CondorUserName )"		4997416	1					
ANR	4997972	Callee	pcache ( ) -> get_user_name		4997416	0					
ANR	4997973	PtrMemberAccess	pcache ( ) -> get_user_name		4997416	0					
ANR	4997974	CallExpression	pcache ( )		4997416	0					
ANR	4997975	Callee	pcache		4997416	0					
ANR	4997976	Identifier	pcache		4997416	0					
ANR	4997977	ArgumentList			4997416	1					
ANR	4997978	Identifier	get_user_name		4997416	1					
ANR	4997979	ArgumentList	CondorUid		4997416	1					
ANR	4997980	Argument	CondorUid		4997416	0					
ANR	4997981	Identifier	CondorUid		4997416	0					
ANR	4997982	Argument	CondorUserName		4997416	1					
ANR	4997983	Identifier	CondorUserName		4997416	0					
ANR	4997984	IfStatement	if ( ! result )		4997416	4					
ANR	4997985	Condition	! result	884:6:24506:24512	4997416	0	True				
ANR	4997986	UnaryOperationExpression	! result		4997416	0					
ANR	4997987	UnaryOperator	!		4997416	0					
ANR	4997988	Identifier	result		4997416	1					
ANR	4997989	CompoundStatement		118:16:4055:4055	4997416	1					
ANR	4997990	ExpressionStatement	"CondorUserName = strdup ( ""Unknown"" )"	886:3:24583:24617	4997416	0	True				
ANR	4997991	AssignmentExpression	"CondorUserName = strdup ( ""Unknown"" )"		4997416	0		=			
ANR	4997992	Identifier	CondorUserName		4997416	0					
ANR	4997993	CallExpression	"strdup ( ""Unknown"" )"		4997416	1					
ANR	4997994	Callee	strdup		4997416	0					
ANR	4997995	Identifier	strdup		4997416	0					
ANR	4997996	ArgumentList	"""Unknown"""		4997416	1					
ANR	4997997	Argument	"""Unknown"""		4997416	0					
ANR	4997998	PrimaryExpression	"""Unknown"""		4997416	0					
ANR	4997999	IfStatement	if ( CondorUserName == NULL )		4997416	1					
ANR	4998000	Condition	CondorUserName == NULL	887:7:24626:24647	4997416	0	True				
ANR	4998001	EqualityExpression	CondorUserName == NULL		4997416	0		==			
ANR	4998002	Identifier	CondorUserName		4997416	0					
ANR	4998003	Identifier	NULL		4997416	1					
ANR	4998004	CompoundStatement		121:31:4189:4189	4997416	1					
ANR	4998005	ExpressionStatement	"EXCEPT ( ""Out of memory. Aborting."" )"	888:4:24656:24690	4997416	0	True				
ANR	4998006	CallExpression	"EXCEPT ( ""Out of memory. Aborting."" )"		4997416	0					
ANR	4998007	Callee	EXCEPT		4997416	0					
ANR	4998008	Identifier	EXCEPT		4997416	0					
ANR	4998009	ArgumentList	"""Out of memory. Aborting."""		4997416	1					
ANR	4998010	Argument	"""Out of memory. Aborting."""		4997416	0					
ANR	4998011	PrimaryExpression	"""Out of memory. Aborting."""		4997416	0					
ANR	4998012	IfStatement	if ( MyUid == envCondorUid )		4997416	5					
ANR	4998013	Condition	MyUid == envCondorUid	897:7:24979:24999	4997416	0	True				
ANR	4998014	EqualityExpression	MyUid == envCondorUid		4997416	0		==			
ANR	4998015	Identifier	MyUid		4997416	0					
ANR	4998016	Identifier	envCondorUid		4997416	1					
ANR	4998017	CompoundStatement		131:31:4542:4542	4997416	1					
ANR	4998018	ExpressionStatement	RealCondorUid = MyUid	898:3:25008:25029	4997416	0	True				
ANR	4998019	AssignmentExpression	RealCondorUid = MyUid		4997416	0		=			
ANR	4998020	Identifier	RealCondorUid		4997416	0					
ANR	4998021	Identifier	MyUid		4997416	1					
ANR	4998022	ExpressionStatement	RealCondorGid = MyGid	899:3:25034:25055	4997416	1	True				
ANR	4998023	AssignmentExpression	RealCondorGid = MyGid		4997416	0		=			
ANR	4998024	Identifier	RealCondorGid		4997416	0					
ANR	4998025	Identifier	MyGid		4997416	1					
ANR	4998026	ExpressionStatement	( void ) endpwent ( )	903:1:25067:25083	4997416	19	True				
ANR	4998027	CastExpression	( void ) endpwent ( )		4997416	0					
ANR	4998028	CastTarget	void		4997416	0					
ANR	4998029	CallExpression	endpwent ( )		4997416	1					
ANR	4998030	Callee	endpwent		4997416	0					
ANR	4998031	Identifier	endpwent		4997416	0					
ANR	4998032	ArgumentList			4997416	1					
ANR	4998033	ExpressionStatement	( void ) SetSyscalls ( scm )	904:1:25086:25110	4997416	20	True				
ANR	4998034	CastExpression	( void ) SetSyscalls ( scm )		4997416	0					
ANR	4998035	CastTarget	void		4997416	0					
ANR	4998036	CallExpression	SetSyscalls ( scm )		4997416	1					
ANR	4998037	Callee	SetSyscalls		4997416	0					
ANR	4998038	Identifier	SetSyscalls		4997416	0					
ANR	4998039	ArgumentList	scm		4997416	1					
ANR	4998040	Argument	scm		4997416	0					
ANR	4998041	Identifier	scm		4997416	0					
ANR	4998042	ExpressionStatement	CondorIdsInited = TRUE	906:1:25115:25137	4997416	21	True				
ANR	4998043	AssignmentExpression	CondorIdsInited = TRUE		4997416	0		=			
ANR	4998044	Identifier	CondorIdsInited		4997416	0					
ANR	4998045	Identifier	TRUE		4997416	1					
ANR	4998046	ReturnType	void		4997416	1					
ANR	4998047	Identifier	init_condor_ids		4997416	2					
ANR	4998048	ParameterList			4997416	3					
ANR	4998049	CFGEntryNode	ENTRY		4997416		True				
ANR	4998050	CFGExitNode	EXIT		4997416		True				
ANR	4998051	Symbol	CondorUid		4997416						
ANR	4998052	Symbol	ENV_UG_IDS		4997416						
ANR	4998053	Symbol	enviName		4997416						
ANR	4998054	Symbol	RealCondorUid		4997416						
ANR	4998055	Symbol	myDistro -> Get		4997416						
ANR	4998056	Symbol	EnvGetName		4997416						
ANR	4998057	Symbol	pcache ( ) -> get_user_name		4997416						
ANR	4998058	Symbol	result		4997416						
ANR	4998059	Symbol	MyUid		4997416						
ANR	4998060	Symbol	can_switch_ids		4997416						
ANR	4998061	Symbol	myDistro		4997416						
ANR	4998062	Symbol	INT_MAX		4997416						
ANR	4998063	Symbol	SetSyscalls		4997416						
ANR	4998064	Symbol	scm		4997416						
ANR	4998065	Symbol	get_my_uid		4997416						
ANR	4998066	Symbol	getenv		4997416						
ANR	4998067	Symbol	val		4997416						
ANR	4998068	Symbol	param_without_default		4997416						
ANR	4998069	Symbol	get_my_gid		4997416						
ANR	4998070	Symbol	NULL		4997416						
ANR	4998071	Symbol	MyGid		4997416						
ANR	4998072	Symbol	& envCondorUid		4997416						
ANR	4998073	Symbol	TRUE		4997416						
ANR	4998074	Symbol	stderr		4997416						
ANR	4998075	Symbol	pcache		4997416						
ANR	4998076	Symbol	SYS_UNRECORDED		4997416						
ANR	4998077	Symbol	* pcache		4997416						
ANR	4998078	Symbol	config_val		4997416						
ANR	4998079	Symbol	envCondorGid		4997416						
ANR	4998080	Symbol	CondorGid		4997416						
ANR	4998081	Symbol	* myDistro		4997416						
ANR	4998082	Symbol	envName		4997416						
ANR	4998083	Symbol	sscanf		4997416						
ANR	4998084	Symbol	CondorUserName		4997416						
ANR	4998085	Symbol	SYS_LOCAL		4997416						
ANR	4998086	Symbol	env_val		4997416						
ANR	4998087	Symbol	envCondorUid		4997416						
ANR	4998088	Symbol	& envCondorGid		4997416						
ANR	4998089	Symbol	strdup		4997416						
ANR	4998090	Symbol	RealCondorGid		4997416						
ANR	4998091	Symbol	CondorIdsInited		4997416						
ANR	4998092	Function	set_user_ids_implementation	910:0:25143:26486							
ANR	4998093	FunctionDef	"set_user_ids_implementation (uid_t uid , gid_t gid , const char * username , int is_quiet)"		4998092	0					
ANR	4998094	CompoundStatement		913:0:25252:26486	4998092	0					
ANR	4998095	IfStatement	if ( uid == 0 || gid == 0 )		4998092	0					
ANR	4998096	Condition	uid == 0 || gid == 0	914:5:25259:25278	4998092	0	True				
ANR	4998097	OrExpression	uid == 0 || gid == 0		4998092	0		||			
ANR	4998098	EqualityExpression	uid == 0		4998092	0		==			
ANR	4998099	Identifier	uid		4998092	0					
ANR	4998100	PrimaryExpression	0		4998092	1					
ANR	4998101	EqualityExpression	gid == 0		4998092	1		==			
ANR	4998102	Identifier	gid		4998092	0					
ANR	4998103	PrimaryExpression	0		4998092	1					
ANR	4998104	CompoundStatement		2:28:29:29	4998092	1					
ANR	4998105	Statement	dprintf	917:2:25398:25404	4998092	0	True				
ANR	4998106	Statement	(	917:9:25405:25405	4998092	1	True				
ANR	4998107	Statement	D_ALWAYS	917:11:25407:25414	4998092	2	True				
ANR	4998108	Statement	","	917:19:25415:25415	4998092	3	True				
ANR	4998109	Statement	"""ERROR: Attempt to initialize user_priv """	917:21:25417:25457	4998092	4	True				
ANR	4998110	Statement	"""with root privileges rejected\\n"""	918:5:25465:25497	4998092	5	True				
ANR	4998111	Statement	)	918:39:25499:25499	4998092	6	True				
ANR	4998112	ExpressionStatement		918:40:25500:25500	4998092	7	True				
ANR	4998113	ReturnStatement	return FALSE ;	919:2:25504:25516	4998092	8	True				
ANR	4998114	Identifier	FALSE		4998092	0					
ANR	4998115	IfStatement	if ( ! can_switch_ids ( ) )		4998092	1					
ANR	4998116	Condition	! can_switch_ids ( )	927:6:25794:25810	4998092	0	True				
ANR	4998117	UnaryOperationExpression	! can_switch_ids ( )		4998092	0					
ANR	4998118	UnaryOperator	!		4998092	0					
ANR	4998119	CallExpression	can_switch_ids ( )		4998092	1					
ANR	4998120	Callee	can_switch_ids		4998092	0					
ANR	4998121	Identifier	can_switch_ids		4998092	0					
ANR	4998122	ArgumentList			4998092	1					
ANR	4998123	CompoundStatement		15:26:561:561	4998092	1					
ANR	4998124	ExpressionStatement	uid = get_my_uid ( )	928:2:25818:25836	4998092	0	True				
ANR	4998125	AssignmentExpression	uid = get_my_uid ( )		4998092	0		=			
ANR	4998126	Identifier	uid		4998092	0					
ANR	4998127	CallExpression	get_my_uid ( )		4998092	1					
ANR	4998128	Callee	get_my_uid		4998092	0					
ANR	4998129	Identifier	get_my_uid		4998092	0					
ANR	4998130	ArgumentList			4998092	1					
ANR	4998131	ExpressionStatement	gid = get_my_gid ( )	929:2:25840:25858	4998092	1	True				
ANR	4998132	AssignmentExpression	gid = get_my_gid ( )		4998092	0		=			
ANR	4998133	Identifier	gid		4998092	0					
ANR	4998134	CallExpression	get_my_gid ( )		4998092	1					
ANR	4998135	Callee	get_my_gid		4998092	0					
ANR	4998136	Identifier	get_my_gid		4998092	0					
ANR	4998137	ArgumentList			4998092	1					
ANR	4998138	IfStatement	if ( UserIdsInited && UserUid != uid && ! is_quiet )		4998092	2					
ANR	4998139	Condition	UserIdsInited && UserUid != uid && ! is_quiet	932:5:25869:25912	4998092	0	True				
ANR	4998140	AndExpression	UserIdsInited && UserUid != uid && ! is_quiet		4998092	0		&&			
ANR	4998141	Identifier	UserIdsInited		4998092	0					
ANR	4998142	AndExpression	UserUid != uid && ! is_quiet		4998092	1		&&			
ANR	4998143	EqualityExpression	UserUid != uid		4998092	0		!=			
ANR	4998144	Identifier	UserUid		4998092	0					
ANR	4998145	Identifier	uid		4998092	1					
ANR	4998146	UnaryOperationExpression	! is_quiet		4998092	1					
ANR	4998147	UnaryOperator	!		4998092	0					
ANR	4998148	Identifier	is_quiet		4998092	1					
ANR	4998149	CompoundStatement		20:52:663:663	4998092	1					
ANR	4998150	ExpressionStatement	"dprintf ( D_ALWAYS , ""warning: setting UserUid to %d, was %d previously\\n"" , uid , UserUid )"	933:2:25920:26019	4998092	0	True				
ANR	4998151	CallExpression	"dprintf ( D_ALWAYS , ""warning: setting UserUid to %d, was %d previously\\n"" , uid , UserUid )"		4998092	0					
ANR	4998152	Callee	dprintf		4998092	0					
ANR	4998153	Identifier	dprintf		4998092	0					
ANR	4998154	ArgumentList	D_ALWAYS		4998092	1					
ANR	4998155	Argument	D_ALWAYS		4998092	0					
ANR	4998156	Identifier	D_ALWAYS		4998092	0					
ANR	4998157	Argument	"""warning: setting UserUid to %d, was %d previously\\n"""		4998092	1					
ANR	4998158	PrimaryExpression	"""warning: setting UserUid to %d, was %d previously\\n"""		4998092	0					
ANR	4998159	Argument	uid		4998092	2					
ANR	4998160	Identifier	uid		4998092	0					
ANR	4998161	Argument	UserUid		4998092	3					
ANR	4998162	Identifier	UserUid		4998092	0					
ANR	4998163	ExpressionStatement	UserUid = uid	937:1:26025:26038	4998092	3	True				
ANR	4998164	AssignmentExpression	UserUid = uid		4998092	0		=			
ANR	4998165	Identifier	UserUid		4998092	0					
ANR	4998166	Identifier	uid		4998092	1					
ANR	4998167	ExpressionStatement	UserGid = gid	938:1:26041:26054	4998092	4	True				
ANR	4998168	AssignmentExpression	UserGid = gid		4998092	0		=			
ANR	4998169	Identifier	UserGid		4998092	0					
ANR	4998170	Identifier	gid		4998092	1					
ANR	4998171	ExpressionStatement	UserIdsInited = TRUE	939:1:26057:26077	4998092	5	True				
ANR	4998172	AssignmentExpression	UserIdsInited = TRUE		4998092	0		=			
ANR	4998173	Identifier	UserIdsInited		4998092	0					
ANR	4998174	Identifier	TRUE		4998092	1					
ANR	4998175	IfStatement	if ( UserName )		4998092	6					
ANR	4998176	Condition	UserName	944:5:26285:26292	4998092	0	True				
ANR	4998177	Identifier	UserName		4998092	0					
ANR	4998178	CompoundStatement		32:16:1043:1043	4998092	1					
ANR	4998179	ExpressionStatement	free ( UserName )	945:2:26300:26316	4998092	0	True				
ANR	4998180	CallExpression	free ( UserName )		4998092	0					
ANR	4998181	Callee	free		4998092	0					
ANR	4998182	Identifier	free		4998092	0					
ANR	4998183	ArgumentList	UserName		4998092	1					
ANR	4998184	Argument	UserName		4998092	0					
ANR	4998185	Identifier	UserName		4998092	0					
ANR	4998186	IfStatement	if ( ! username )		4998092	7					
ANR	4998187	Condition	! username	948:6:26328:26336	4998092	0	True				
ANR	4998188	UnaryOperationExpression	! username		4998092	0					
ANR	4998189	UnaryOperator	!		4998092	0					
ANR	4998190	Identifier	username		4998092	1					
ANR	4998191	CompoundStatement		36:18:1087:1087	4998092	1					
ANR	4998192	IfStatement	"if ( ! ( pcache ( ) -> get_user_name ( UserUid , UserName ) ) )"		4998092	0					
ANR	4998193	Condition	"! ( pcache ( ) -> get_user_name ( UserUid , UserName ) )"	950:7:26350:26396	4998092	0	True				
ANR	4998194	UnaryOperationExpression	"! ( pcache ( ) -> get_user_name ( UserUid , UserName ) )"		4998092	0					
ANR	4998195	UnaryOperator	!		4998092	0					
ANR	4998196	CallExpression	"pcache ( ) -> get_user_name ( UserUid , UserName )"		4998092	1					
ANR	4998197	Callee	pcache ( ) -> get_user_name		4998092	0					
ANR	4998198	PtrMemberAccess	pcache ( ) -> get_user_name		4998092	0					
ANR	4998199	CallExpression	pcache ( )		4998092	0					
ANR	4998200	Callee	pcache		4998092	0					
ANR	4998201	Identifier	pcache		4998092	0					
ANR	4998202	ArgumentList			4998092	1					
ANR	4998203	Identifier	get_user_name		4998092	1					
ANR	4998204	ArgumentList	UserUid		4998092	1					
ANR	4998205	Argument	UserUid		4998092	0					
ANR	4998206	Identifier	UserUid		4998092	0					
ANR	4998207	Argument	UserName		4998092	1					
ANR	4998208	Identifier	UserName		4998092	0					
ANR	4998209	CompoundStatement		38:57:1147:1147	4998092	1					
ANR	4998210	ExpressionStatement	UserName = NULL	951:3:26405:26420	4998092	0	True				
ANR	4998211	AssignmentExpression	UserName = NULL		4998092	0		=			
ANR	4998212	Identifier	UserName		4998092	0					
ANR	4998213	Identifier	NULL		4998092	1					
ANR	4998214	ElseStatement	else		4998092	0					
ANR	4998215	CompoundStatement		41:8:1181:1181	4998092	0					
ANR	4998216	ExpressionStatement	UserName = strdup ( username )	954:2:26438:26467	4998092	0	True				
ANR	4998217	AssignmentExpression	UserName = strdup ( username )		4998092	0		=			
ANR	4998218	Identifier	UserName		4998092	0					
ANR	4998219	CallExpression	strdup ( username )		4998092	1					
ANR	4998220	Callee	strdup		4998092	0					
ANR	4998221	Identifier	strdup		4998092	0					
ANR	4998222	ArgumentList	username		4998092	1					
ANR	4998223	Argument	username		4998092	0					
ANR	4998224	Identifier	username		4998092	0					
ANR	4998225	ReturnStatement	return TRUE ;	956:1:26473:26484	4998092	8	True				
ANR	4998226	Identifier	TRUE		4998092	0					
ANR	4998227	ReturnType	static int		4998092	1					
ANR	4998228	Identifier	set_user_ids_implementation		4998092	2					
ANR	4998229	ParameterList	"uid_t uid , gid_t gid , const char * username , int is_quiet"		4998092	3					
ANR	4998230	Parameter	uid_t uid	911:29:25183:25191	4998092	0	True				
ANR	4998231	ParameterType	uid_t		4998092	0					
ANR	4998232	Identifier	uid		4998092	1					
ANR	4998233	Parameter	gid_t gid	911:40:25194:25202	4998092	1	True				
ANR	4998234	ParameterType	gid_t		4998092	0					
ANR	4998235	Identifier	gid		4998092	1					
ANR	4998236	Parameter	const char * username	911:51:25205:25224	4998092	2	True				
ANR	4998237	ParameterType	const char *		4998092	0					
ANR	4998238	Identifier	username		4998092	1					
ANR	4998239	Parameter	int is_quiet	912:8:25236:25247	4998092	3	True				
ANR	4998240	ParameterType	int		4998092	0					
ANR	4998241	Identifier	is_quiet		4998092	1					
ANR	4998242	CFGEntryNode	ENTRY		4998092		True				
ANR	4998243	CFGExitNode	EXIT		4998092		True				
ANR	4998244	Symbol	get_my_gid		4998092						
ANR	4998245	Symbol	gid		4998092						
ANR	4998246	Symbol	UserName		4998092						
ANR	4998247	Symbol	NULL		4998092						
ANR	4998248	Symbol	UserGid		4998092						
ANR	4998249	Symbol	UserIdsInited		4998092						
ANR	4998250	Symbol	D_ALWAYS		4998092						
ANR	4998251	Symbol	TRUE		4998092						
ANR	4998252	Symbol	is_quiet		4998092						
ANR	4998253	Symbol	pcache		4998092						
ANR	4998254	Symbol	pcache ( ) -> get_user_name		4998092						
ANR	4998255	Symbol	* pcache		4998092						
ANR	4998256	Symbol	uid		4998092						
ANR	4998257	Symbol	can_switch_ids		4998092						
ANR	4998258	Symbol	UserUid		4998092						
ANR	4998259	Symbol	FALSE		4998092						
ANR	4998260	Symbol	strdup		4998092						
ANR	4998261	Symbol	get_my_uid		4998092						
ANR	4998262	Symbol	username		4998092						
ANR	4998263	Function	init_nobody_ids	965:0:26665:28714							
ANR	4998264	FunctionDef	init_nobody_ids (int is_quiet)		4998263	0					
ANR	4998265	CompoundStatement		967:0:26701:28714	4998263	0					
ANR	4998266	IdentifierDeclStatement	bool result ;	968:1:26704:26715	4998263	0	True				
ANR	4998267	IdentifierDecl	result		4998263	0					
ANR	4998268	IdentifierDeclType	bool		4998263	0					
ANR	4998269	Identifier	result		4998263	1					
ANR	4998270	IdentifierDeclStatement	uid_t nobody_uid = 0 ;	982:1:27212:27232	4998263	1	True				
ANR	4998271	IdentifierDecl	nobody_uid = 0		4998263	0					
ANR	4998272	IdentifierDeclType	uid_t		4998263	0					
ANR	4998273	Identifier	nobody_uid		4998263	1					
ANR	4998274	AssignmentExpression	nobody_uid = 0		4998263	2		=			
ANR	4998275	Identifier	nobody_uid		4998263	0					
ANR	4998276	PrimaryExpression	0		4998263	1					
ANR	4998277	IdentifierDeclStatement	gid_t nobody_gid = 0 ;	983:1:27235:27255	4998263	2	True				
ANR	4998278	IdentifierDecl	nobody_gid = 0		4998263	0					
ANR	4998279	IdentifierDeclType	gid_t		4998263	0					
ANR	4998280	Identifier	nobody_gid		4998263	1					
ANR	4998281	AssignmentExpression	nobody_gid = 0		4998263	2		=			
ANR	4998282	Identifier	nobody_gid		4998263	0					
ANR	4998283	PrimaryExpression	0		4998263	1					
ANR	4998284	ExpressionStatement	"result = ( ( pcache ( ) -> get_user_uid ( ""nobody"" , nobody_uid ) ) && ( pcache ( ) -> get_user_gid ( ""nobody"" , nobody_gid ) ) )"	985:1:27259:27376	4998263	3	True				
ANR	4998285	AssignmentExpression	"result = ( ( pcache ( ) -> get_user_uid ( ""nobody"" , nobody_uid ) ) && ( pcache ( ) -> get_user_gid ( ""nobody"" , nobody_gid ) ) )"		4998263	0		=			
ANR	4998286	Identifier	result		4998263	0					
ANR	4998287	AndExpression	"( pcache ( ) -> get_user_uid ( ""nobody"" , nobody_uid ) ) && ( pcache ( ) -> get_user_gid ( ""nobody"" , nobody_gid ) )"		4998263	1		&&			
ANR	4998288	CallExpression	"pcache ( ) -> get_user_uid ( ""nobody"" , nobody_uid )"		4998263	0					
ANR	4998289	Callee	pcache ( ) -> get_user_uid		4998263	0					
ANR	4998290	PtrMemberAccess	pcache ( ) -> get_user_uid		4998263	0					
ANR	4998291	CallExpression	pcache ( )		4998263	0					
ANR	4998292	Callee	pcache		4998263	0					
ANR	4998293	Identifier	pcache		4998263	0					
ANR	4998294	ArgumentList			4998263	1					
ANR	4998295	Identifier	get_user_uid		4998263	1					
ANR	4998296	ArgumentList	"""nobody"""		4998263	1					
ANR	4998297	Argument	"""nobody"""		4998263	0					
ANR	4998298	PrimaryExpression	"""nobody"""		4998263	0					
ANR	4998299	Argument	nobody_uid		4998263	1					
ANR	4998300	Identifier	nobody_uid		4998263	0					
ANR	4998301	CallExpression	"pcache ( ) -> get_user_gid ( ""nobody"" , nobody_gid )"		4998263	1					
ANR	4998302	Callee	pcache ( ) -> get_user_gid		4998263	0					
ANR	4998303	PtrMemberAccess	pcache ( ) -> get_user_gid		4998263	0					
ANR	4998304	CallExpression	pcache ( )		4998263	0					
ANR	4998305	Callee	pcache		4998263	0					
ANR	4998306	Identifier	pcache		4998263	0					
ANR	4998307	ArgumentList			4998263	1					
ANR	4998308	Identifier	get_user_gid		4998263	1					
ANR	4998309	ArgumentList	"""nobody"""		4998263	1					
ANR	4998310	Argument	"""nobody"""		4998263	0					
ANR	4998311	PrimaryExpression	"""nobody"""		4998263	0					
ANR	4998312	Argument	nobody_gid		4998263	1					
ANR	4998313	Identifier	nobody_gid		4998263	0					
ANR	4998314	IfStatement	if ( ! result )		4998263	4					
ANR	4998315	Condition	! result	988:5:27384:27391	4998263	0	True				
ANR	4998316	UnaryOperationExpression	! result		4998263	0					
ANR	4998317	UnaryOperator	!		4998263	0					
ANR	4998318	Identifier	result		4998263	1					
ANR	4998319	CompoundStatement		22:16:693:693	4998263	1					
ANR	4998320	ExpressionStatement	nobody_uid = 59999	994:2:27529:27547	4998263	0	True				
ANR	4998321	AssignmentExpression	nobody_uid = 59999		4998263	0		=			
ANR	4998322	Identifier	nobody_uid		4998263	0					
ANR	4998323	PrimaryExpression	59999		4998263	1					
ANR	4998324	ExpressionStatement	nobody_gid = 59999	995:2:27551:27569	4998263	1	True				
ANR	4998325	AssignmentExpression	nobody_gid = 59999		4998263	0		=			
ANR	4998326	Identifier	nobody_gid		4998263	0					
ANR	4998327	PrimaryExpression	59999		4998263	1					
ANR	4998328	IfStatement	if ( ( nobody_uid > 59999 ) || ( nobody_uid <= 0 ) )		4998263	5					
ANR	4998329	Condition	( nobody_uid > 59999 ) || ( nobody_uid <= 0 )	1011:5:28024:28064	4998263	0	True				
ANR	4998330	OrExpression	( nobody_uid > 59999 ) || ( nobody_uid <= 0 )		4998263	0		||			
ANR	4998331	RelationalExpression	nobody_uid > 59999		4998263	0		>			
ANR	4998332	Identifier	nobody_uid		4998263	0					
ANR	4998333	PrimaryExpression	59999		4998263	1					
ANR	4998334	RelationalExpression	nobody_uid <= 0		4998263	1		<=			
ANR	4998335	Identifier	nobody_uid		4998263	0					
ANR	4998336	PrimaryExpression	0		4998263	1					
ANR	4998337	CompoundStatement		45:49:1366:1366	4998263	1					
ANR	4998338	ExpressionStatement	nobody_uid = 59999	1012:2:28072:28090	4998263	0	True				
ANR	4998339	AssignmentExpression	nobody_uid = 59999		4998263	0		=			
ANR	4998340	Identifier	nobody_uid		4998263	0					
ANR	4998341	PrimaryExpression	59999		4998263	1					
ANR	4998342	IfStatement	if ( ( nobody_gid > 59999 ) || ( nobody_gid <= 0 ) )		4998263	6					
ANR	4998343	Condition	( nobody_gid > 59999 ) || ( nobody_gid <= 0 )	1014:5:28100:28140	4998263	0	True				
ANR	4998344	OrExpression	( nobody_gid > 59999 ) || ( nobody_gid <= 0 )		4998263	0		||			
ANR	4998345	RelationalExpression	nobody_gid > 59999		4998263	0		>			
ANR	4998346	Identifier	nobody_gid		4998263	0					
ANR	4998347	PrimaryExpression	59999		4998263	1					
ANR	4998348	RelationalExpression	nobody_gid <= 0		4998263	1		<=			
ANR	4998349	Identifier	nobody_gid		4998263	0					
ANR	4998350	PrimaryExpression	0		4998263	1					
ANR	4998351	CompoundStatement		48:49:1442:1442	4998263	1					
ANR	4998352	ExpressionStatement	nobody_gid = 59999	1015:2:28148:28166	4998263	0	True				
ANR	4998353	AssignmentExpression	nobody_gid = 59999		4998263	0		=			
ANR	4998354	Identifier	nobody_gid		4998263	0					
ANR	4998355	PrimaryExpression	59999		4998263	1					
ANR	4998356	IfStatement	if ( nobody_uid == 0 || nobody_gid == 0 )		4998263	7					
ANR	4998357	Condition	nobody_uid == 0 || nobody_gid == 0	1024:6:28413:28446	4998263	0	True				
ANR	4998358	OrExpression	nobody_uid == 0 || nobody_gid == 0		4998263	0		||			
ANR	4998359	EqualityExpression	nobody_uid == 0		4998263	0		==			
ANR	4998360	Identifier	nobody_uid		4998263	0					
ANR	4998361	PrimaryExpression	0		4998263	1					
ANR	4998362	EqualityExpression	nobody_gid == 0		4998263	1		==			
ANR	4998363	Identifier	nobody_gid		4998263	0					
ANR	4998364	PrimaryExpression	0		4998263	1					
ANR	4998365	CompoundStatement		58:43:1748:1748	4998263	1					
ANR	4998366	ReturnStatement	return FALSE ;	1025:2:28454:28466	4998263	0	True				
ANR	4998367	Identifier	FALSE		4998263	0					
ANR	4998368	ReturnStatement	"return set_user_ids_implementation ( ( uid_t ) nobody_uid , ( gid_t ) nobody_gid , ""nobody"" , is_quiet ) ;"	1030:1:28598:28712	4998263	8	True				
ANR	4998369	CallExpression	"set_user_ids_implementation ( ( uid_t ) nobody_uid , ( gid_t ) nobody_gid , ""nobody"" , is_quiet )"		4998263	0					
ANR	4998370	Callee	set_user_ids_implementation		4998263	0					
ANR	4998371	Identifier	set_user_ids_implementation		4998263	0					
ANR	4998372	ArgumentList	( uid_t ) nobody_uid		4998263	1					
ANR	4998373	Argument	( uid_t ) nobody_uid		4998263	0					
ANR	4998374	CastExpression	( uid_t ) nobody_uid		4998263	0					
ANR	4998375	CastTarget	uid_t		4998263	0					
ANR	4998376	Identifier	nobody_uid		4998263	1					
ANR	4998377	Argument	( gid_t ) nobody_gid		4998263	1					
ANR	4998378	CastExpression	( gid_t ) nobody_gid		4998263	0					
ANR	4998379	CastTarget	gid_t		4998263	0					
ANR	4998380	Identifier	nobody_gid		4998263	1					
ANR	4998381	Argument	"""nobody"""		4998263	2					
ANR	4998382	PrimaryExpression	"""nobody"""		4998263	0					
ANR	4998383	Argument	is_quiet		4998263	3					
ANR	4998384	Identifier	is_quiet		4998263	0					
ANR	4998385	ReturnType	int		4998263	1					
ANR	4998386	Identifier	init_nobody_ids		4998263	2					
ANR	4998387	ParameterList	int is_quiet		4998263	3					
ANR	4998388	Parameter	int is_quiet	966:17:26686:26697	4998263	0	True				
ANR	4998389	ParameterType	int		4998263	0					
ANR	4998390	Identifier	is_quiet		4998263	1					
ANR	4998391	CFGEntryNode	ENTRY		4998263		True				
ANR	4998392	CFGExitNode	EXIT		4998263		True				
ANR	4998393	Symbol	result		4998263						
ANR	4998394	Symbol	pcache ( ) -> get_user_uid		4998263						
ANR	4998395	Symbol	* pcache		4998263						
ANR	4998396	Symbol	nobody_uid		4998263						
ANR	4998397	Symbol	nobody_gid		4998263						
ANR	4998398	Symbol	FALSE		4998263						
ANR	4998399	Symbol	set_user_ids_implementation		4998263						
ANR	4998400	Symbol	is_quiet		4998263						
ANR	4998401	Symbol	pcache		4998263						
ANR	4998402	Symbol	pcache ( ) -> get_user_gid		4998263						
ANR	4998403	Function	init_user_ids_implementation	1036:0:28718:30072							
ANR	4998404	FunctionDef	"init_user_ids_implementation (const char username [ ] , int is_quiet)"		4998403	0					
ANR	4998405	CompoundStatement		1038:0:28790:30072	4998403	0					
ANR	4998406	IdentifierDeclStatement	int scm ;	1039:1:28793:28804	4998403	0	True				
ANR	4998407	IdentifierDecl	scm		4998403	0					
ANR	4998408	IdentifierDeclType	int		4998403	0					
ANR	4998409	Identifier	scm		4998403	1					
ANR	4998410	IdentifierDeclStatement	uid_t usr_uid ;	1040:1:28807:28824	4998403	1	True				
ANR	4998411	IdentifierDecl	usr_uid		4998403	0					
ANR	4998412	IdentifierDeclType	uid_t		4998403	0					
ANR	4998413	Identifier	usr_uid		4998403	1					
ANR	4998414	IdentifierDeclStatement	gid_t usr_gid ;	1041:1:28827:28843	4998403	2	True				
ANR	4998415	IdentifierDecl	usr_gid		4998403	0					
ANR	4998416	IdentifierDeclType	gid_t		4998403	0					
ANR	4998417	Identifier	usr_gid		4998403	1					
ANR	4998418	IfStatement	if ( ! can_switch_ids ( ) )		4998403	3					
ANR	4998419	Condition	! can_switch_ids ( )	1050:6:29121:29137	4998403	0	True				
ANR	4998420	UnaryOperationExpression	! can_switch_ids ( )		4998403	0					
ANR	4998421	UnaryOperator	!		4998403	0					
ANR	4998422	CallExpression	can_switch_ids ( )		4998403	1					
ANR	4998423	Callee	can_switch_ids		4998403	0					
ANR	4998424	Identifier	can_switch_ids		4998403	0					
ANR	4998425	ArgumentList			4998403	1					
ANR	4998426	CompoundStatement		13:26:350:350	4998403	1					
ANR	4998427	ReturnStatement	"return set_user_ids_implementation ( get_my_uid ( ) , get_my_gid ( ) , NULL , is_quiet ) ;"	1051:2:29145:29235	4998403	0	True				
ANR	4998428	CallExpression	"set_user_ids_implementation ( get_my_uid ( ) , get_my_gid ( ) , NULL , is_quiet )"		4998403	0					
ANR	4998429	Callee	set_user_ids_implementation		4998403	0					
ANR	4998430	Identifier	set_user_ids_implementation		4998403	0					
ANR	4998431	ArgumentList	get_my_uid ( )		4998403	1					
ANR	4998432	Argument	get_my_uid ( )		4998403	0					
ANR	4998433	CallExpression	get_my_uid ( )		4998403	0					
ANR	4998434	Callee	get_my_uid		4998403	0					
ANR	4998435	Identifier	get_my_uid		4998403	0					
ANR	4998436	ArgumentList			4998403	1					
ANR	4998437	Argument	get_my_gid ( )		4998403	1					
ANR	4998438	CallExpression	get_my_gid ( )		4998403	0					
ANR	4998439	Callee	get_my_gid		4998403	0					
ANR	4998440	Identifier	get_my_gid		4998403	0					
ANR	4998441	ArgumentList			4998403	1					
ANR	4998442	Argument	NULL		4998403	2					
ANR	4998443	Identifier	NULL		4998403	0					
ANR	4998444	Argument	is_quiet		4998403	3					
ANR	4998445	Identifier	is_quiet		4998403	0					
ANR	4998446	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )	1060:1:29456:29503	4998403	4	True				
ANR	4998447	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )		4998403	0		=			
ANR	4998448	Identifier	scm		4998403	0					
ANR	4998449	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )		4998403	1					
ANR	4998450	Callee	SetSyscalls		4998403	0					
ANR	4998451	Identifier	SetSyscalls		4998403	0					
ANR	4998452	ArgumentList	SYS_LOCAL | SYS_UNRECORDED		4998403	1					
ANR	4998453	Argument	SYS_LOCAL | SYS_UNRECORDED		4998403	0					
ANR	4998454	InclusiveOrExpression	SYS_LOCAL | SYS_UNRECORDED		4998403	0		|			
ANR	4998455	Identifier	SYS_LOCAL		4998403	0					
ANR	4998456	Identifier	SYS_UNRECORDED		4998403	1					
ANR	4998457	IfStatement	"if ( ! strcasecmp ( username , ""nobody"" ) )"		4998403	5					
ANR	4998458	Condition	"! strcasecmp ( username , ""nobody"" )"	1062:5:29511:29542	4998403	0	True				
ANR	4998459	UnaryOperationExpression	"! strcasecmp ( username , ""nobody"" )"		4998403	0					
ANR	4998460	UnaryOperator	!		4998403	0					
ANR	4998461	CallExpression	"strcasecmp ( username , ""nobody"" )"		4998403	1					
ANR	4998462	Callee	strcasecmp		4998403	0					
ANR	4998463	Identifier	strcasecmp		4998403	0					
ANR	4998464	ArgumentList	username		4998403	1					
ANR	4998465	Argument	username		4998403	0					
ANR	4998466	Identifier	username		4998403	0					
ANR	4998467	Argument	"""nobody"""		4998403	1					
ANR	4998468	PrimaryExpression	"""nobody"""		4998403	0					
ANR	4998469	CompoundStatement		25:40:755:755	4998403	1					
ANR	4998470	ReturnStatement	return init_nobody_ids ( is_quiet ) ;	1065:2:29650:29684	4998403	0	True				
ANR	4998471	CallExpression	init_nobody_ids ( is_quiet )		4998403	0					
ANR	4998472	Callee	init_nobody_ids		4998403	0					
ANR	4998473	Identifier	init_nobody_ids		4998403	0					
ANR	4998474	ArgumentList	is_quiet		4998403	1					
ANR	4998475	Argument	is_quiet		4998403	0					
ANR	4998476	Identifier	is_quiet		4998403	0					
ANR	4998477	IfStatement	"if ( ! ( pcache ( ) -> get_user_uid ( username , usr_uid ) ) || ! ( pcache ( ) -> get_user_gid ( username , usr_gid ) ) )"		4998403	6					
ANR	4998478	Condition	"! ( pcache ( ) -> get_user_uid ( username , usr_uid ) ) || ! ( pcache ( ) -> get_user_gid ( username , usr_gid ) )"	1068:5:29695:29789	4998403	0	True				
ANR	4998479	OrExpression	"! ( pcache ( ) -> get_user_uid ( username , usr_uid ) ) || ! ( pcache ( ) -> get_user_gid ( username , usr_gid ) )"		4998403	0		||			
ANR	4998480	UnaryOperationExpression	"! ( pcache ( ) -> get_user_uid ( username , usr_uid ) )"		4998403	0					
ANR	4998481	UnaryOperator	!		4998403	0					
ANR	4998482	CallExpression	"pcache ( ) -> get_user_uid ( username , usr_uid )"		4998403	1					
ANR	4998483	Callee	pcache ( ) -> get_user_uid		4998403	0					
ANR	4998484	PtrMemberAccess	pcache ( ) -> get_user_uid		4998403	0					
ANR	4998485	CallExpression	pcache ( )		4998403	0					
ANR	4998486	Callee	pcache		4998403	0					
ANR	4998487	Identifier	pcache		4998403	0					
ANR	4998488	ArgumentList			4998403	1					
ANR	4998489	Identifier	get_user_uid		4998403	1					
ANR	4998490	ArgumentList	username		4998403	1					
ANR	4998491	Argument	username		4998403	0					
ANR	4998492	Identifier	username		4998403	0					
ANR	4998493	Argument	usr_uid		4998403	1					
ANR	4998494	Identifier	usr_uid		4998403	0					
ANR	4998495	UnaryOperationExpression	"! ( pcache ( ) -> get_user_gid ( username , usr_gid ) )"		4998403	1					
ANR	4998496	UnaryOperator	!		4998403	0					
ANR	4998497	CallExpression	"pcache ( ) -> get_user_gid ( username , usr_gid )"		4998403	1					
ANR	4998498	Callee	pcache ( ) -> get_user_gid		4998403	0					
ANR	4998499	PtrMemberAccess	pcache ( ) -> get_user_gid		4998403	0					
ANR	4998500	CallExpression	pcache ( )		4998403	0					
ANR	4998501	Callee	pcache		4998403	0					
ANR	4998502	Identifier	pcache		4998403	0					
ANR	4998503	ArgumentList			4998403	1					
ANR	4998504	Identifier	get_user_gid		4998403	1					
ANR	4998505	ArgumentList	username		4998403	1					
ANR	4998506	Argument	username		4998403	0					
ANR	4998507	Identifier	username		4998403	0					
ANR	4998508	Argument	usr_gid		4998403	1					
ANR	4998509	Identifier	usr_gid		4998403	0					
ANR	4998510	CompoundStatement		32:50:1002:1002	4998403	1					
ANR	4998511	IfStatement	if ( ! is_quiet )		4998403	0					
ANR	4998512	Condition	! is_quiet	1070:6:29801:29810	4998403	0	True				
ANR	4998513	UnaryOperationExpression	! is_quiet		4998403	0					
ANR	4998514	UnaryOperator	!		4998403	0					
ANR	4998515	Identifier	is_quiet		4998403	1					
ANR	4998516	CompoundStatement		33:19:1023:1023	4998403	1					
ANR	4998517	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s not in passwd file\\n"" , username )"	1071:3:29819:29875	4998403	0	True				
ANR	4998518	CallExpression	"dprintf ( D_ALWAYS , ""%s not in passwd file\\n"" , username )"		4998403	0					
ANR	4998519	Callee	dprintf		4998403	0					
ANR	4998520	Identifier	dprintf		4998403	0					
ANR	4998521	ArgumentList	D_ALWAYS		4998403	1					
ANR	4998522	Argument	D_ALWAYS		4998403	0					
ANR	4998523	Identifier	D_ALWAYS		4998403	0					
ANR	4998524	Argument	"""%s not in passwd file\\n"""		4998403	1					
ANR	4998525	PrimaryExpression	"""%s not in passwd file\\n"""		4998403	0					
ANR	4998526	Argument	username		4998403	2					
ANR	4998527	Identifier	username		4998403	0					
ANR	4998528	ExpressionStatement	( void ) endpwent ( )	1073:2:29883:29899	4998403	1	True				
ANR	4998529	CastExpression	( void ) endpwent ( )		4998403	0					
ANR	4998530	CastTarget	void		4998403	0					
ANR	4998531	CallExpression	endpwent ( )		4998403	1					
ANR	4998532	Callee	endpwent		4998403	0					
ANR	4998533	Identifier	endpwent		4998403	0					
ANR	4998534	ArgumentList			4998403	1					
ANR	4998535	ExpressionStatement	( void ) SetSyscalls ( scm )	1074:2:29903:29927	4998403	2	True				
ANR	4998536	CastExpression	( void ) SetSyscalls ( scm )		4998403	0					
ANR	4998537	CastTarget	void		4998403	0					
ANR	4998538	CallExpression	SetSyscalls ( scm )		4998403	1					
ANR	4998539	Callee	SetSyscalls		4998403	0					
ANR	4998540	Identifier	SetSyscalls		4998403	0					
ANR	4998541	ArgumentList	scm		4998403	1					
ANR	4998542	Argument	scm		4998403	0					
ANR	4998543	Identifier	scm		4998403	0					
ANR	4998544	ReturnStatement	return FALSE ;	1075:2:29931:29943	4998403	3	True				
ANR	4998545	Identifier	FALSE		4998403	0					
ANR	4998546	ExpressionStatement	( void ) endpwent ( )	1077:1:29949:29965	4998403	7	True				
ANR	4998547	CastExpression	( void ) endpwent ( )		4998403	0					
ANR	4998548	CastTarget	void		4998403	0					
ANR	4998549	CallExpression	endpwent ( )		4998403	1					
ANR	4998550	Callee	endpwent		4998403	0					
ANR	4998551	Identifier	endpwent		4998403	0					
ANR	4998552	ArgumentList			4998403	1					
ANR	4998553	ExpressionStatement	( void ) SetSyscalls ( scm )	1078:1:29968:29992	4998403	8	True				
ANR	4998554	CastExpression	( void ) SetSyscalls ( scm )		4998403	0					
ANR	4998555	CastTarget	void		4998403	0					
ANR	4998556	CallExpression	SetSyscalls ( scm )		4998403	1					
ANR	4998557	Callee	SetSyscalls		4998403	0					
ANR	4998558	Identifier	SetSyscalls		4998403	0					
ANR	4998559	ArgumentList	scm		4998403	1					
ANR	4998560	Argument	scm		4998403	0					
ANR	4998561	Identifier	scm		4998403	0					
ANR	4998562	ReturnStatement	"return set_user_ids_implementation ( usr_uid , usr_gid , username , is_quiet ) ;"	1079:1:29995:30069	4998403	9	True				
ANR	4998563	CallExpression	"set_user_ids_implementation ( usr_uid , usr_gid , username , is_quiet )"		4998403	0					
ANR	4998564	Callee	set_user_ids_implementation		4998403	0					
ANR	4998565	Identifier	set_user_ids_implementation		4998403	0					
ANR	4998566	ArgumentList	usr_uid		4998403	1					
ANR	4998567	Argument	usr_uid		4998403	0					
ANR	4998568	Identifier	usr_uid		4998403	0					
ANR	4998569	Argument	usr_gid		4998403	1					
ANR	4998570	Identifier	usr_gid		4998403	0					
ANR	4998571	Argument	username		4998403	2					
ANR	4998572	Identifier	username		4998403	0					
ANR	4998573	Argument	is_quiet		4998403	3					
ANR	4998574	Identifier	is_quiet		4998403	0					
ANR	4998575	ReturnType	int		4998403	1					
ANR	4998576	Identifier	init_user_ids_implementation		4998403	2					
ANR	4998577	ParameterList	"const char username [ ] , int is_quiet"		4998403	3					
ANR	4998578	Parameter	const char username [ ]	1037:30:28752:28772	4998403	0	True				
ANR	4998579	ParameterType	const char [ ]		4998403	0					
ANR	4998580	Identifier	username		4998403	1					
ANR	4998581	Parameter	int is_quiet	1037:53:28775:28786	4998403	1	True				
ANR	4998582	ParameterType	int		4998403	0					
ANR	4998583	Identifier	is_quiet		4998403	1					
ANR	4998584	CFGEntryNode	ENTRY		4998403		True				
ANR	4998585	CFGExitNode	EXIT		4998403		True				
ANR	4998586	Symbol	get_my_gid		4998403						
ANR	4998587	Symbol	NULL		4998403						
ANR	4998588	Symbol	D_ALWAYS		4998403						
ANR	4998589	Symbol	init_nobody_ids		4998403						
ANR	4998590	Symbol	set_user_ids_implementation		4998403						
ANR	4998591	Symbol	is_quiet		4998403						
ANR	4998592	Symbol	usr_uid		4998403						
ANR	4998593	Symbol	pcache		4998403						
ANR	4998594	Symbol	pcache ( ) -> get_user_gid		4998403						
ANR	4998595	Symbol	SYS_UNRECORDED		4998403						
ANR	4998596	Symbol	* pcache		4998403						
ANR	4998597	Symbol	pcache ( ) -> get_user_uid		4998403						
ANR	4998598	Symbol	can_switch_ids		4998403						
ANR	4998599	Symbol	SYS_LOCAL		4998403						
ANR	4998600	Symbol	SetSyscalls		4998403						
ANR	4998601	Symbol	FALSE		4998403						
ANR	4998602	Symbol	scm		4998403						
ANR	4998603	Symbol	get_my_uid		4998403						
ANR	4998604	Symbol	strcasecmp		4998403						
ANR	4998605	Symbol	usr_gid		4998403						
ANR	4998606	Symbol	username		4998403						
ANR	4998607	Function	init_user_ids_quiet	1090:0:30246:30350							
ANR	4998608	FunctionDef	init_user_ids_quiet (const char username [ ])		4998607	0					
ANR	4998609	CompoundStatement		1091:45:30295:30350	4998607	0					
ANR	4998610	ReturnStatement	"return init_user_ids_implementation ( username , 1 ) ;"	1092:1:30298:30348	4998607	0	True				
ANR	4998611	CallExpression	"init_user_ids_implementation ( username , 1 )"		4998607	0					
ANR	4998612	Callee	init_user_ids_implementation		4998607	0					
ANR	4998613	Identifier	init_user_ids_implementation		4998607	0					
ANR	4998614	ArgumentList	username		4998607	1					
ANR	4998615	Argument	username		4998607	0					
ANR	4998616	Identifier	username		4998607	0					
ANR	4998617	Argument	1		4998607	1					
ANR	4998618	PrimaryExpression	1		4998607	0					
ANR	4998619	ReturnType	int		4998607	1					
ANR	4998620	Identifier	init_user_ids_quiet		4998607	2					
ANR	4998621	ParameterList	const char username [ ]		4998607	3					
ANR	4998622	Parameter	const char username [ ]	1091:21:30271:30291	4998607	0	True				
ANR	4998623	ParameterType	const char [ ]		4998607	0					
ANR	4998624	Identifier	username		4998607	1					
ANR	4998625	CFGEntryNode	ENTRY		4998607		True				
ANR	4998626	CFGExitNode	EXIT		4998607		True				
ANR	4998627	Symbol	init_user_ids_implementation		4998607						
ANR	4998628	Symbol	username		4998607						
ANR	4998629	Function	set_user_ids	1096:0:30354:30453							
ANR	4998630	FunctionDef	"set_user_ids (uid_t uid , gid_t gid)"		4998629	0					
ANR	4998631	CompoundStatement		1098:0:30393:30453	4998629	0					
ANR	4998632	ReturnStatement	"return set_user_ids_implementation ( uid , gid , NULL , 0 ) ;"	1099:1:30396:30451	4998629	0	True				
ANR	4998633	CallExpression	"set_user_ids_implementation ( uid , gid , NULL , 0 )"		4998629	0					
ANR	4998634	Callee	set_user_ids_implementation		4998629	0					
ANR	4998635	Identifier	set_user_ids_implementation		4998629	0					
ANR	4998636	ArgumentList	uid		4998629	1					
ANR	4998637	Argument	uid		4998629	0					
ANR	4998638	Identifier	uid		4998629	0					
ANR	4998639	Argument	gid		4998629	1					
ANR	4998640	Identifier	gid		4998629	0					
ANR	4998641	Argument	NULL		4998629	2					
ANR	4998642	Identifier	NULL		4998629	0					
ANR	4998643	Argument	0		4998629	3					
ANR	4998644	PrimaryExpression	0		4998629	0					
ANR	4998645	ReturnType	int		4998629	1					
ANR	4998646	Identifier	set_user_ids		4998629	2					
ANR	4998647	ParameterList	"uid_t uid , gid_t gid"		4998629	3					
ANR	4998648	Parameter	uid_t uid	1097:13:30371:30379	4998629	0	True				
ANR	4998649	ParameterType	uid_t		4998629	0					
ANR	4998650	Identifier	uid		4998629	1					
ANR	4998651	Parameter	gid_t gid	1097:24:30382:30390	4998629	1	True				
ANR	4998652	ParameterType	gid_t		4998629	0					
ANR	4998653	Identifier	gid		4998629	1					
ANR	4998654	CFGEntryNode	ENTRY		4998629		True				
ANR	4998655	CFGExitNode	EXIT		4998629		True				
ANR	4998656	Symbol	uid		4998629						
ANR	4998657	Symbol	gid		4998629						
ANR	4998658	Symbol	NULL		4998629						
ANR	4998659	Symbol	set_user_ids_implementation		4998629						
ANR	4998660	Function	set_user_ids_quiet	1103:0:30457:30562							
ANR	4998661	FunctionDef	"set_user_ids_quiet (uid_t uid , gid_t gid)"		4998660	0					
ANR	4998662	CompoundStatement		1105:0:30502:30562	4998660	0					
ANR	4998663	ReturnStatement	"return set_user_ids_implementation ( uid , gid , NULL , 1 ) ;"	1106:1:30505:30560	4998660	0	True				
ANR	4998664	CallExpression	"set_user_ids_implementation ( uid , gid , NULL , 1 )"		4998660	0					
ANR	4998665	Callee	set_user_ids_implementation		4998660	0					
ANR	4998666	Identifier	set_user_ids_implementation		4998660	0					
ANR	4998667	ArgumentList	uid		4998660	1					
ANR	4998668	Argument	uid		4998660	0					
ANR	4998669	Identifier	uid		4998660	0					
ANR	4998670	Argument	gid		4998660	1					
ANR	4998671	Identifier	gid		4998660	0					
ANR	4998672	Argument	NULL		4998660	2					
ANR	4998673	Identifier	NULL		4998660	0					
ANR	4998674	Argument	1		4998660	3					
ANR	4998675	PrimaryExpression	1		4998660	0					
ANR	4998676	ReturnType	int		4998660	1					
ANR	4998677	Identifier	set_user_ids_quiet		4998660	2					
ANR	4998678	ParameterList	"uid_t uid , gid_t gid"		4998660	3					
ANR	4998679	Parameter	uid_t uid	1104:19:30480:30488	4998660	0	True				
ANR	4998680	ParameterType	uid_t		4998660	0					
ANR	4998681	Identifier	uid		4998660	1					
ANR	4998682	Parameter	gid_t gid	1104:30:30491:30499	4998660	1	True				
ANR	4998683	ParameterType	gid_t		4998660	0					
ANR	4998684	Identifier	gid		4998660	1					
ANR	4998685	CFGEntryNode	ENTRY		4998660		True				
ANR	4998686	CFGExitNode	EXIT		4998660		True				
ANR	4998687	Symbol	uid		4998660						
ANR	4998688	Symbol	gid		4998660						
ANR	4998689	Symbol	NULL		4998660						
ANR	4998690	Symbol	set_user_ids_implementation		4998660						
ANR	4998691	Function	set_user_tracking_gid	1109:0:30565:30643							
ANR	4998692	FunctionDef	set_user_tracking_gid (gid_t tracking_gid)		4998691	0					
ANR	4998693	CompoundStatement		1111:0:30612:30643	4998691	0					
ANR	4998694	ExpressionStatement	TrackingGid = tracking_gid	1112:1:30615:30641	4998691	0	True				
ANR	4998695	AssignmentExpression	TrackingGid = tracking_gid		4998691	0		=			
ANR	4998696	Identifier	TrackingGid		4998691	0					
ANR	4998697	Identifier	tracking_gid		4998691	1					
ANR	4998698	ReturnType	void		4998691	1					
ANR	4998699	Identifier	set_user_tracking_gid		4998691	2					
ANR	4998700	ParameterList	gid_t tracking_gid		4998691	3					
ANR	4998701	Parameter	gid_t tracking_gid	1110:22:30592:30609	4998691	0	True				
ANR	4998702	ParameterType	gid_t		4998691	0					
ANR	4998703	Identifier	tracking_gid		4998691	1					
ANR	4998704	CFGEntryNode	ENTRY		4998691		True				
ANR	4998705	CFGExitNode	EXIT		4998691		True				
ANR	4998706	Symbol	tracking_gid		4998691						
ANR	4998707	Symbol	TrackingGid		4998691						
ANR	4998708	Function	unset_user_tracking_gid	1115:0:30646:30697							
ANR	4998709	FunctionDef	unset_user_tracking_gid ()		4998708	0					
ANR	4998710	CompoundStatement		1117:0:30677:30697	4998708	0					
ANR	4998711	ExpressionStatement	TrackingGid = 0	1118:1:30680:30695	4998708	0	True				
ANR	4998712	AssignmentExpression	TrackingGid = 0		4998708	0		=			
ANR	4998713	Identifier	TrackingGid		4998708	0					
ANR	4998714	PrimaryExpression	0		4998708	1					
ANR	4998715	ReturnType	void		4998708	1					
ANR	4998716	Identifier	unset_user_tracking_gid		4998708	2					
ANR	4998717	ParameterList			4998708	3					
ANR	4998718	CFGEntryNode	ENTRY		4998708		True				
ANR	4998719	CFGExitNode	EXIT		4998708		True				
ANR	4998720	Symbol	TrackingGid		4998708						
ANR	4998721	Function	uninit_user_ids	1121:0:30700:30749							
ANR	4998722	FunctionDef	uninit_user_ids ()		4998721	0					
ANR	4998723	CompoundStatement		1123:0:30723:30749	4998721	0					
ANR	4998724	ExpressionStatement	UserIdsInited = FALSE	1124:1:30726:30747	4998721	0	True				
ANR	4998725	AssignmentExpression	UserIdsInited = FALSE		4998721	0		=			
ANR	4998726	Identifier	UserIdsInited		4998721	0					
ANR	4998727	Identifier	FALSE		4998721	1					
ANR	4998728	ReturnType	void		4998721	1					
ANR	4998729	Identifier	uninit_user_ids		4998721	2					
ANR	4998730	ParameterList			4998721	3					
ANR	4998731	CFGEntryNode	ENTRY		4998721		True				
ANR	4998732	CFGExitNode	EXIT		4998721		True				
ANR	4998733	Symbol	UserIdsInited		4998721						
ANR	4998734	Symbol	FALSE		4998721						
ANR	4998735	Function	uninit_file_owner_ids	1128:0:30753:30810							
ANR	4998736	FunctionDef	uninit_file_owner_ids ()		4998735	0					
ANR	4998737	CompoundStatement		1130:0:30783:30810	4998735	0					
ANR	4998738	ExpressionStatement	OwnerIdsInited = FALSE	1131:1:30786:30808	4998735	0	True				
ANR	4998739	AssignmentExpression	OwnerIdsInited = FALSE		4998735	0		=			
ANR	4998740	Identifier	OwnerIdsInited		4998735	0					
ANR	4998741	Identifier	FALSE		4998735	1					
ANR	4998742	ReturnType	void		4998735	1					
ANR	4998743	Identifier	uninit_file_owner_ids		4998735	2					
ANR	4998744	ParameterList			4998735	3					
ANR	4998745	CFGEntryNode	ENTRY		4998735		True				
ANR	4998746	CFGExitNode	EXIT		4998735		True				
ANR	4998747	Symbol	OwnerIdsInited		4998735						
ANR	4998748	Symbol	FALSE		4998735						
ANR	4998749	Function	set_file_owner_ids	1135:0:30814:31393							
ANR	4998750	FunctionDef	"set_file_owner_ids (uid_t uid , gid_t gid)"		4998749	0					
ANR	4998751	CompoundStatement		1137:0:30861:31393	4998749	0					
ANR	4998752	IfStatement	if ( OwnerIdsInited && OwnerUid != uid )		4998749	0					
ANR	4998753	Condition	OwnerIdsInited && OwnerUid != uid	1138:5:30868:30900	4998749	0	True				
ANR	4998754	AndExpression	OwnerIdsInited && OwnerUid != uid		4998749	0		&&			
ANR	4998755	Identifier	OwnerIdsInited		4998749	0					
ANR	4998756	EqualityExpression	OwnerUid != uid		4998749	1		!=			
ANR	4998757	Identifier	OwnerUid		4998749	0					
ANR	4998758	Identifier	uid		4998749	1					
ANR	4998759	CompoundStatement		2:42:43:43	4998749	1					
ANR	4998760	ExpressionStatement	"dprintf ( D_ALWAYS , ""warning: setting OwnerUid to %d, was %d previosly\\n"" , ( int ) uid , ( int ) OwnerUid )"	1139:2:30909:31019	4998749	0	True				
ANR	4998761	CallExpression	"dprintf ( D_ALWAYS , ""warning: setting OwnerUid to %d, was %d previosly\\n"" , ( int ) uid , ( int ) OwnerUid )"		4998749	0					
ANR	4998762	Callee	dprintf		4998749	0					
ANR	4998763	Identifier	dprintf		4998749	0					
ANR	4998764	ArgumentList	D_ALWAYS		4998749	1					
ANR	4998765	Argument	D_ALWAYS		4998749	0					
ANR	4998766	Identifier	D_ALWAYS		4998749	0					
ANR	4998767	Argument	"""warning: setting OwnerUid to %d, was %d previosly\\n"""		4998749	1					
ANR	4998768	PrimaryExpression	"""warning: setting OwnerUid to %d, was %d previosly\\n"""		4998749	0					
ANR	4998769	Argument	( int ) uid		4998749	2					
ANR	4998770	CastExpression	( int ) uid		4998749	0					
ANR	4998771	CastTarget	int		4998749	0					
ANR	4998772	Identifier	uid		4998749	1					
ANR	4998773	Argument	( int ) OwnerUid		4998749	3					
ANR	4998774	CastExpression	( int ) OwnerUid		4998749	0					
ANR	4998775	CastTarget	int		4998749	0					
ANR	4998776	Identifier	OwnerUid		4998749	1					
ANR	4998777	ExpressionStatement	OwnerUid = uid	1143:1:31025:31039	4998749	1	True				
ANR	4998778	AssignmentExpression	OwnerUid = uid		4998749	0		=			
ANR	4998779	Identifier	OwnerUid		4998749	0					
ANR	4998780	Identifier	uid		4998749	1					
ANR	4998781	ExpressionStatement	OwnerGid = gid	1144:1:31042:31056	4998749	2	True				
ANR	4998782	AssignmentExpression	OwnerGid = gid		4998749	0		=			
ANR	4998783	Identifier	OwnerGid		4998749	0					
ANR	4998784	Identifier	gid		4998749	1					
ANR	4998785	ExpressionStatement	OwnerIdsInited = TRUE	1145:1:31059:31080	4998749	3	True				
ANR	4998786	AssignmentExpression	OwnerIdsInited = TRUE		4998749	0		=			
ANR	4998787	Identifier	OwnerIdsInited		4998749	0					
ANR	4998788	Identifier	TRUE		4998749	1					
ANR	4998789	IfStatement	if ( OwnerName )		4998749	4					
ANR	4998790	Condition	OwnerName	1150:5:31258:31266	4998749	0	True				
ANR	4998791	Identifier	OwnerName		4998749	0					
ANR	4998792	CompoundStatement		14:17:408:408	4998749	1					
ANR	4998793	ExpressionStatement	free ( OwnerName )	1151:2:31274:31291	4998749	0	True				
ANR	4998794	CallExpression	free ( OwnerName )		4998749	0					
ANR	4998795	Callee	free		4998749	0					
ANR	4998796	Identifier	free		4998749	0					
ANR	4998797	ArgumentList	OwnerName		4998749	1					
ANR	4998798	Argument	OwnerName		4998749	0					
ANR	4998799	Identifier	OwnerName		4998749	0					
ANR	4998800	IfStatement	"if ( ! ( pcache ( ) -> get_user_name ( OwnerUid , OwnerName ) ) )"		4998749	5					
ANR	4998801	Condition	"! ( pcache ( ) -> get_user_name ( OwnerUid , OwnerName ) )"	1153:6:31302:31350	4998749	0	True				
ANR	4998802	UnaryOperationExpression	"! ( pcache ( ) -> get_user_name ( OwnerUid , OwnerName ) )"		4998749	0					
ANR	4998803	UnaryOperator	!		4998749	0					
ANR	4998804	CallExpression	"pcache ( ) -> get_user_name ( OwnerUid , OwnerName )"		4998749	1					
ANR	4998805	Callee	pcache ( ) -> get_user_name		4998749	0					
ANR	4998806	PtrMemberAccess	pcache ( ) -> get_user_name		4998749	0					
ANR	4998807	CallExpression	pcache ( )		4998749	0					
ANR	4998808	Callee	pcache		4998749	0					
ANR	4998809	Identifier	pcache		4998749	0					
ANR	4998810	ArgumentList			4998749	1					
ANR	4998811	Identifier	get_user_name		4998749	1					
ANR	4998812	ArgumentList	OwnerUid		4998749	1					
ANR	4998813	Argument	OwnerUid		4998749	0					
ANR	4998814	Identifier	OwnerUid		4998749	0					
ANR	4998815	Argument	OwnerName		4998749	1					
ANR	4998816	Identifier	OwnerName		4998749	0					
ANR	4998817	CompoundStatement		17:58:492:492	4998749	1					
ANR	4998818	ExpressionStatement	OwnerName = NULL	1154:2:31358:31374	4998749	0	True				
ANR	4998819	AssignmentExpression	OwnerName = NULL		4998749	0		=			
ANR	4998820	Identifier	OwnerName		4998749	0					
ANR	4998821	Identifier	NULL		4998749	1					
ANR	4998822	ReturnStatement	return TRUE ;	1156:1:31380:31391	4998749	6	True				
ANR	4998823	Identifier	TRUE		4998749	0					
ANR	4998824	ReturnType	int		4998749	1					
ANR	4998825	Identifier	set_file_owner_ids		4998749	2					
ANR	4998826	ParameterList	"uid_t uid , gid_t gid"		4998749	3					
ANR	4998827	Parameter	uid_t uid	1136:20:30838:30846	4998749	0	True				
ANR	4998828	ParameterType	uid_t		4998749	0					
ANR	4998829	Identifier	uid		4998749	1					
ANR	4998830	Parameter	gid_t gid	1136:31:30849:30857	4998749	1	True				
ANR	4998831	ParameterType	gid_t		4998749	0					
ANR	4998832	Identifier	gid		4998749	1					
ANR	4998833	CFGEntryNode	ENTRY		4998749		True				
ANR	4998834	CFGExitNode	EXIT		4998749		True				
ANR	4998835	Symbol	OwnerIdsInited		4998749						
ANR	4998836	Symbol	* pcache		4998749						
ANR	4998837	Symbol	uid		4998749						
ANR	4998838	Symbol	OwnerName		4998749						
ANR	4998839	Symbol	gid		4998749						
ANR	4998840	Symbol	NULL		4998749						
ANR	4998841	Symbol	OwnerGid		4998749						
ANR	4998842	Symbol	OwnerUid		4998749						
ANR	4998843	Symbol	D_ALWAYS		4998749						
ANR	4998844	Symbol	TRUE		4998749						
ANR	4998845	Symbol	pcache		4998749						
ANR	4998846	Symbol	pcache ( ) -> get_user_name		4998749						
ANR	4998847	Function	get_priv_state	1160:0:31397:31457							
ANR	4998848	FunctionDef	get_priv_state ()		4998847	0					
ANR	4998849	CompoundStatement		1162:0:31429:31457	4998847	0					
ANR	4998850	ReturnStatement	return CurrentPrivState ;	1163:1:31432:31455	4998847	0	True				
ANR	4998851	Identifier	CurrentPrivState		4998847	0					
ANR	4998852	ReturnType	priv_state		4998847	1					
ANR	4998853	Identifier	get_priv_state		4998847	2					
ANR	4998854	ParameterList			4998847	3					
ANR	4998855	CFGEntryNode	ENTRY		4998847		True				
ANR	4998856	CFGExitNode	EXIT		4998847		True				
ANR	4998857	Symbol	CurrentPrivState		4998847						
ANR	4998858	Function	_set_priv	1166:0:31460:33590							
ANR	4998859	FunctionDef	"_set_priv (priv_state s , const char * file , int line , int dologging)"		4998858	0					
ANR	4998860	CompoundStatement		1168:0:31538:33590	4998858	0					
ANR	4998861	IdentifierDeclStatement	priv_state PrevPrivState = CurrentPrivState ;	1169:1:31541:31584	4998858	0	True				
ANR	4998862	IdentifierDecl	PrevPrivState = CurrentPrivState		4998858	0					
ANR	4998863	IdentifierDeclType	priv_state		4998858	0					
ANR	4998864	Identifier	PrevPrivState		4998858	1					
ANR	4998865	AssignmentExpression	PrevPrivState = CurrentPrivState		4998858	2		=			
ANR	4998866	Identifier	CurrentPrivState		4998858	0					
ANR	4998867	Identifier	CurrentPrivState		4998858	1					
ANR	4998868	IfStatement	if ( s == CurrentPrivState )		4998858	1					
ANR	4998869	Condition	s == CurrentPrivState	1170:5:31591:31611	4998858	0	True				
ANR	4998870	EqualityExpression	s == CurrentPrivState		4998858	0		==			
ANR	4998871	Identifier	s		4998858	0					
ANR	4998872	Identifier	CurrentPrivState		4998858	1					
ANR	4998873	ReturnStatement	return s ;	1170:28:31614:31622	4998858	1	True				
ANR	4998874	Identifier	s		4998858	0					
ANR	4998875	IfStatement	if ( CurrentPrivState == PRIV_USER_FINAL )		4998858	2					
ANR	4998876	Condition	CurrentPrivState == PRIV_USER_FINAL	1171:5:31629:31663	4998858	0	True				
ANR	4998877	EqualityExpression	CurrentPrivState == PRIV_USER_FINAL		4998858	0		==			
ANR	4998878	Identifier	CurrentPrivState		4998858	0					
ANR	4998879	Identifier	PRIV_USER_FINAL		4998858	1					
ANR	4998880	CompoundStatement		4:42:127:127	4998858	1					
ANR	4998881	ExpressionStatement	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_USER_FINAL\\n"" )"	1172:2:31670:31745	4998858	0	True				
ANR	4998882	CallExpression	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_USER_FINAL\\n"" )"		4998858	0					
ANR	4998883	Callee	dprintf		4998858	0					
ANR	4998884	Identifier	dprintf		4998858	0					
ANR	4998885	ArgumentList	D_ALWAYS		4998858	1					
ANR	4998886	Argument	D_ALWAYS		4998858	0					
ANR	4998887	Identifier	D_ALWAYS		4998858	0					
ANR	4998888	Argument	"""warning: attempted switch out of PRIV_USER_FINAL\\n"""		4998858	1					
ANR	4998889	PrimaryExpression	"""warning: attempted switch out of PRIV_USER_FINAL\\n"""		4998858	0					
ANR	4998890	ReturnStatement	return PRIV_USER_FINAL ;	1174:2:31749:31771	4998858	1	True				
ANR	4998891	Identifier	PRIV_USER_FINAL		4998858	0					
ANR	4998892	IfStatement	if ( CurrentPrivState == PRIV_CONDOR_FINAL )		4998858	3					
ANR	4998893	Condition	CurrentPrivState == PRIV_CONDOR_FINAL	1176:5:31781:31817	4998858	0	True				
ANR	4998894	EqualityExpression	CurrentPrivState == PRIV_CONDOR_FINAL		4998858	0		==			
ANR	4998895	Identifier	CurrentPrivState		4998858	0					
ANR	4998896	Identifier	PRIV_CONDOR_FINAL		4998858	1					
ANR	4998897	CompoundStatement		9:44:281:281	4998858	1					
ANR	4998898	ExpressionStatement	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"" )"	1177:2:31824:31901	4998858	0	True				
ANR	4998899	CallExpression	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"" )"		4998858	0					
ANR	4998900	Callee	dprintf		4998858	0					
ANR	4998901	Identifier	dprintf		4998858	0					
ANR	4998902	ArgumentList	D_ALWAYS		4998858	1					
ANR	4998903	Argument	D_ALWAYS		4998858	0					
ANR	4998904	Identifier	D_ALWAYS		4998858	0					
ANR	4998905	Argument	"""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"""		4998858	1					
ANR	4998906	PrimaryExpression	"""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"""		4998858	0					
ANR	4998907	ReturnStatement	return PRIV_CONDOR_FINAL ;	1179:2:31905:31929	4998858	1	True				
ANR	4998908	Identifier	PRIV_CONDOR_FINAL		4998858	0					
ANR	4998909	ExpressionStatement	CurrentPrivState = s	1181:1:31935:31955	4998858	4	True				
ANR	4998910	AssignmentExpression	CurrentPrivState = s		4998858	0		=			
ANR	4998911	Identifier	CurrentPrivState		4998858	0					
ANR	4998912	Identifier	s		4998858	1					
ANR	4998913	IfStatement	if ( can_switch_ids ( ) )		4998858	5					
ANR	4998914	Condition	can_switch_ids ( )	1183:5:31963:31978	4998858	0	True				
ANR	4998915	CallExpression	can_switch_ids ( )		4998858	0					
ANR	4998916	Callee	can_switch_ids		4998858	0					
ANR	4998917	Identifier	can_switch_ids		4998858	0					
ANR	4998918	ArgumentList			4998858	1					
ANR	4998919	CompoundStatement		16:23:442:442	4998858	1					
ANR	4998920	SwitchStatement	switch ( s )		4998858	0					
ANR	4998921	Condition	s	1184:10:31993:31993	4998858	0	True				
ANR	4998922	Identifier	s		4998858	0					
ANR	4998923	CompoundStatement		17:13:457:457	4998858	1					
ANR	4998924	Label	case PRIV_ROOT :	1185:2:32000:32014	4998858	0	True				
ANR	4998925	Identifier	PRIV_ROOT		4998858	0					
ANR	4998926	ExpressionStatement	set_root_euid ( )	1186:3:32019:32034	4998858	1	True				
ANR	4998927	CallExpression	set_root_euid ( )		4998858	0					
ANR	4998928	Callee	set_root_euid		4998858	0					
ANR	4998929	Identifier	set_root_euid		4998858	0					
ANR	4998930	ArgumentList			4998858	1					
ANR	4998931	ExpressionStatement	set_root_egid ( )	1187:3:32039:32054	4998858	2	True				
ANR	4998932	CallExpression	set_root_egid ( )		4998858	0					
ANR	4998933	Callee	set_root_egid		4998858	0					
ANR	4998934	Identifier	set_root_egid		4998858	0					
ANR	4998935	ArgumentList			4998858	1					
ANR	4998936	BreakStatement	break ;	1188:3:32059:32064	4998858	3	True				
ANR	4998937	Label	case PRIV_CONDOR :	1189:2:32068:32084	4998858	4	True				
ANR	4998938	Identifier	PRIV_CONDOR		4998858	0					
ANR	4998939	ExpressionStatement	set_root_euid ( )	1190:3:32089:32104	4998858	5	True				
ANR	4998940	CallExpression	set_root_euid ( )		4998858	0					
ANR	4998941	Callee	set_root_euid		4998858	0					
ANR	4998942	Identifier	set_root_euid		4998858	0					
ANR	4998943	ArgumentList			4998858	1					
ANR	4998944	ExpressionStatement	set_condor_egid ( )	1191:3:32138:32155	4998858	6	True				
ANR	4998945	CallExpression	set_condor_egid ( )		4998858	0					
ANR	4998946	Callee	set_condor_egid		4998858	0					
ANR	4998947	Identifier	set_condor_egid		4998858	0					
ANR	4998948	ArgumentList			4998858	1					
ANR	4998949	ExpressionStatement	set_condor_euid ( )	1192:3:32160:32177	4998858	7	True				
ANR	4998950	CallExpression	set_condor_euid ( )		4998858	0					
ANR	4998951	Callee	set_condor_euid		4998858	0					
ANR	4998952	Identifier	set_condor_euid		4998858	0					
ANR	4998953	ArgumentList			4998858	1					
ANR	4998954	BreakStatement	break ;	1193:3:32182:32187	4998858	8	True				
ANR	4998955	Label	case PRIV_USER :	1194:2:32191:32205	4998858	9	True				
ANR	4998956	Identifier	PRIV_USER		4998858	0					
ANR	4998957	ExpressionStatement	set_root_euid ( )	1195:3:32210:32225	4998858	10	True				
ANR	4998958	CallExpression	set_root_euid ( )		4998858	0					
ANR	4998959	Callee	set_root_euid		4998858	0					
ANR	4998960	Identifier	set_root_euid		4998858	0					
ANR	4998961	ArgumentList			4998858	1					
ANR	4998962	ExpressionStatement	set_user_egid ( )	1196:3:32259:32274	4998858	11	True				
ANR	4998963	CallExpression	set_user_egid ( )		4998858	0					
ANR	4998964	Callee	set_user_egid		4998858	0					
ANR	4998965	Identifier	set_user_egid		4998858	0					
ANR	4998966	ArgumentList			4998858	1					
ANR	4998967	ExpressionStatement	set_user_euid ( )	1197:3:32279:32294	4998858	12	True				
ANR	4998968	CallExpression	set_user_euid ( )		4998858	0					
ANR	4998969	Callee	set_user_euid		4998858	0					
ANR	4998970	Identifier	set_user_euid		4998858	0					
ANR	4998971	ArgumentList			4998858	1					
ANR	4998972	BreakStatement	break ;	1198:3:32299:32304	4998858	13	True				
ANR	4998973	Label	case PRIV_FILE_OWNER :	1199:2:32308:32328	4998858	14	True				
ANR	4998974	Identifier	PRIV_FILE_OWNER		4998858	0					
ANR	4998975	ExpressionStatement	set_root_euid ( )	1200:3:32333:32348	4998858	15	True				
ANR	4998976	CallExpression	set_root_euid ( )		4998858	0					
ANR	4998977	Callee	set_root_euid		4998858	0					
ANR	4998978	Identifier	set_root_euid		4998858	0					
ANR	4998979	ArgumentList			4998858	1					
ANR	4998980	ExpressionStatement	set_owner_egid ( )	1201:3:32382:32398	4998858	16	True				
ANR	4998981	CallExpression	set_owner_egid ( )		4998858	0					
ANR	4998982	Callee	set_owner_egid		4998858	0					
ANR	4998983	Identifier	set_owner_egid		4998858	0					
ANR	4998984	ArgumentList			4998858	1					
ANR	4998985	ExpressionStatement	set_owner_euid ( )	1202:3:32403:32419	4998858	17	True				
ANR	4998986	CallExpression	set_owner_euid ( )		4998858	0					
ANR	4998987	Callee	set_owner_euid		4998858	0					
ANR	4998988	Identifier	set_owner_euid		4998858	0					
ANR	4998989	ArgumentList			4998858	1					
ANR	4998990	BreakStatement	break ;	1203:3:32424:32429	4998858	18	True				
ANR	4998991	Label	case PRIV_USER_FINAL :	1204:2:32433:32453	4998858	19	True				
ANR	4998992	Identifier	PRIV_USER_FINAL		4998858	0					
ANR	4998993	ExpressionStatement	set_root_euid ( )	1205:3:32458:32473	4998858	20	True				
ANR	4998994	CallExpression	set_root_euid ( )		4998858	0					
ANR	4998995	Callee	set_root_euid		4998858	0					
ANR	4998996	Identifier	set_root_euid		4998858	0					
ANR	4998997	ArgumentList			4998858	1					
ANR	4998998	ExpressionStatement	set_user_rgid ( )	1206:3:32507:32522	4998858	21	True				
ANR	4998999	CallExpression	set_user_rgid ( )		4998858	0					
ANR	4999000	Callee	set_user_rgid		4998858	0					
ANR	4999001	Identifier	set_user_rgid		4998858	0					
ANR	4999002	ArgumentList			4998858	1					
ANR	4999003	ExpressionStatement	set_user_ruid ( )	1207:3:32527:32542	4998858	22	True				
ANR	4999004	CallExpression	set_user_ruid ( )		4998858	0					
ANR	4999005	Callee	set_user_ruid		4998858	0					
ANR	4999006	Identifier	set_user_ruid		4998858	0					
ANR	4999007	ArgumentList			4998858	1					
ANR	4999008	BreakStatement	break ;	1208:3:32547:32552	4998858	23	True				
ANR	4999009	Label	case PRIV_CONDOR_FINAL :	1209:2:32556:32578	4998858	24	True				
ANR	4999010	Identifier	PRIV_CONDOR_FINAL		4998858	0					
ANR	4999011	ExpressionStatement	set_root_euid ( )	1210:3:32583:32598	4998858	25	True				
ANR	4999012	CallExpression	set_root_euid ( )		4998858	0					
ANR	4999013	Callee	set_root_euid		4998858	0					
ANR	4999014	Identifier	set_root_euid		4998858	0					
ANR	4999015	ArgumentList			4998858	1					
ANR	4999016	ExpressionStatement	set_condor_rgid ( )	1211:3:32632:32649	4998858	26	True				
ANR	4999017	CallExpression	set_condor_rgid ( )		4998858	0					
ANR	4999018	Callee	set_condor_rgid		4998858	0					
ANR	4999019	Identifier	set_condor_rgid		4998858	0					
ANR	4999020	ArgumentList			4998858	1					
ANR	4999021	ExpressionStatement	set_condor_ruid ( )	1212:3:32654:32671	4998858	27	True				
ANR	4999022	CallExpression	set_condor_ruid ( )		4998858	0					
ANR	4999023	Callee	set_condor_ruid		4998858	0					
ANR	4999024	Identifier	set_condor_ruid		4998858	0					
ANR	4999025	ArgumentList			4998858	1					
ANR	4999026	Label	case PRIV_UNKNOWN :	1213:2:32675:32692	4998858	28	True				
ANR	4999027	Identifier	PRIV_UNKNOWN		4998858	0					
ANR	4999028	BreakStatement	break ;	1214:3:32720:32725	4998858	29	True				
ANR	4999029	Label	default :	1215:2:32729:32736	4998858	30	True				
ANR	4999030	Identifier	default		4998858	0					
ANR	4999031	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_priv: Unknown priv state %d\\n"" , ( int ) s )"	1216:3:32741:32804	4998858	31	True				
ANR	4999032	CallExpression	"dprintf ( D_ALWAYS , ""set_priv: Unknown priv state %d\\n"" , ( int ) s )"		4998858	0					
ANR	4999033	Callee	dprintf		4998858	0					
ANR	4999034	Identifier	dprintf		4998858	0					
ANR	4999035	ArgumentList	D_ALWAYS		4998858	1					
ANR	4999036	Argument	D_ALWAYS		4998858	0					
ANR	4999037	Identifier	D_ALWAYS		4998858	0					
ANR	4999038	Argument	"""set_priv: Unknown priv state %d\\n"""		4998858	1					
ANR	4999039	PrimaryExpression	"""set_priv: Unknown priv state %d\\n"""		4998858	0					
ANR	4999040	Argument	( int ) s		4998858	2					
ANR	4999041	CastExpression	( int ) s		4998858	0					
ANR	4999042	CastTarget	int		4998858	0					
ANR	4999043	Identifier	s		4998858	1					
ANR	4999044	IfStatement	if ( dologging == NO_PRIV_MEMORY_CHANGES )		4998858	6					
ANR	4999045	Condition	dologging == NO_PRIV_MEMORY_CHANGES	1219:5:32818:32852	4998858	0	True				
ANR	4999046	EqualityExpression	dologging == NO_PRIV_MEMORY_CHANGES		4998858	0		==			
ANR	4999047	Identifier	dologging		4998858	0					
ANR	4999048	Identifier	NO_PRIV_MEMORY_CHANGES		4998858	1					
ANR	4999049	CompoundStatement		52:43:1317:1317	4998858	1					
ANR	4999050	ExpressionStatement	CurrentPrivState = PrevPrivState	1231:2:33445:33477	4998858	0	True				
ANR	4999051	AssignmentExpression	CurrentPrivState = PrevPrivState		4998858	0		=			
ANR	4999052	Identifier	CurrentPrivState		4998858	0					
ANR	4999053	Identifier	PrevPrivState		4998858	1					
ANR	4999054	ElseStatement	else		4998858	0					
ANR	4999055	IfStatement	if ( dologging )		4998858	0					
ANR	4999056	Condition	dologging	1233:10:33492:33500	4998858	0	True				
ANR	4999057	Identifier	dologging		4998858	0					
ANR	4999058	CompoundStatement		66:22:1965:1965	4998858	1					
ANR	4999059	ExpressionStatement	"log_priv ( PrevPrivState , CurrentPrivState , file , line )"	1234:2:33508:33561	4998858	0	True				
ANR	4999060	CallExpression	"log_priv ( PrevPrivState , CurrentPrivState , file , line )"		4998858	0					
ANR	4999061	Callee	log_priv		4998858	0					
ANR	4999062	Identifier	log_priv		4998858	0					
ANR	4999063	ArgumentList	PrevPrivState		4998858	1					
ANR	4999064	Argument	PrevPrivState		4998858	0					
ANR	4999065	Identifier	PrevPrivState		4998858	0					
ANR	4999066	Argument	CurrentPrivState		4998858	1					
ANR	4999067	Identifier	CurrentPrivState		4998858	0					
ANR	4999068	Argument	file		4998858	2					
ANR	4999069	Identifier	file		4998858	0					
ANR	4999070	Argument	line		4998858	3					
ANR	4999071	Identifier	line		4998858	0					
ANR	4999072	ReturnStatement	return PrevPrivState ;	1237:1:33568:33588	4998858	7	True				
ANR	4999073	Identifier	PrevPrivState		4998858	0					
ANR	4999074	ReturnType	priv_state		4998858	1					
ANR	4999075	Identifier	_set_priv		4998858	2					
ANR	4999076	ParameterList	"priv_state s , const char * file , int line , int dologging"		4998858	3					
ANR	4999077	Parameter	priv_state s	1167:10:31481:31492	4998858	0	True				
ANR	4999078	ParameterType	priv_state		4998858	0					
ANR	4999079	Identifier	s		4998858	1					
ANR	4999080	Parameter	const char * file	1167:24:31495:31510	4998858	1	True				
ANR	4999081	ParameterType	const char *		4998858	0					
ANR	4999082	Identifier	file		4998858	1					
ANR	4999083	Parameter	int line	1167:42:31513:31520	4998858	2	True				
ANR	4999084	ParameterType	int		4998858	0					
ANR	4999085	Identifier	line		4998858	1					
ANR	4999086	Parameter	int dologging	1167:52:31523:31535	4998858	3	True				
ANR	4999087	ParameterType	int		4998858	0					
ANR	4999088	Identifier	dologging		4998858	1					
ANR	4999089	CFGEntryNode	ENTRY		4998858		True				
ANR	4999090	CFGExitNode	EXIT		4998858		True				
ANR	4999091	Symbol	dologging		4998858						
ANR	4999092	Symbol	NO_PRIV_MEMORY_CHANGES		4998858						
ANR	4999093	Symbol	PRIV_USER_FINAL		4998858						
ANR	4999094	Symbol	s		4998858						
ANR	4999095	Symbol	file		4998858						
ANR	4999096	Symbol	PrevPrivState		4998858						
ANR	4999097	Symbol	can_switch_ids		4998858						
ANR	4999098	Symbol	line		4998858						
ANR	4999099	Symbol	CurrentPrivState		4998858						
ANR	4999100	Symbol	D_ALWAYS		4998858						
ANR	4999101	Symbol	PRIV_CONDOR_FINAL		4998858						
ANR	4999102	Function	get_condor_uid	1241:0:33595:33690							
ANR	4999103	FunctionDef	get_condor_uid ()		4999102	0					
ANR	4999104	CompoundStatement		1243:0:33618:33690	4999102	0					
ANR	4999105	IfStatement	if ( ! CondorIdsInited )		4999102	0					
ANR	4999106	Condition	! CondorIdsInited	1244:5:33625:33640	4999102	0	True				
ANR	4999107	UnaryOperationExpression	! CondorIdsInited		4999102	0					
ANR	4999108	UnaryOperator	!		4999102	0					
ANR	4999109	Identifier	CondorIdsInited		4999102	1					
ANR	4999110	CompoundStatement		2:24:25:25	4999102	1					
ANR	4999111	ExpressionStatement	init_condor_ids ( )	1245:2:33648:33665	4999102	0	True				
ANR	4999112	CallExpression	init_condor_ids ( )		4999102	0					
ANR	4999113	Callee	init_condor_ids		4999102	0					
ANR	4999114	Identifier	init_condor_ids		4999102	0					
ANR	4999115	ArgumentList			4999102	1					
ANR	4999116	ReturnStatement	return CondorUid ;	1248:1:33672:33688	4999102	1	True				
ANR	4999117	Identifier	CondorUid		4999102	0					
ANR	4999118	ReturnType	uid_t		4999102	1					
ANR	4999119	Identifier	get_condor_uid		4999102	2					
ANR	4999120	ParameterList			4999102	3					
ANR	4999121	CFGEntryNode	ENTRY		4999102		True				
ANR	4999122	CFGExitNode	EXIT		4999102		True				
ANR	4999123	Symbol	CondorUid		4999102						
ANR	4999124	Symbol	CondorIdsInited		4999102						
ANR	4999125	Function	get_condor_gid	1252:0:33694:33789							
ANR	4999126	FunctionDef	get_condor_gid ()		4999125	0					
ANR	4999127	CompoundStatement		1254:0:33717:33789	4999125	0					
ANR	4999128	IfStatement	if ( ! CondorIdsInited )		4999125	0					
ANR	4999129	Condition	! CondorIdsInited	1255:5:33724:33739	4999125	0	True				
ANR	4999130	UnaryOperationExpression	! CondorIdsInited		4999125	0					
ANR	4999131	UnaryOperator	!		4999125	0					
ANR	4999132	Identifier	CondorIdsInited		4999125	1					
ANR	4999133	CompoundStatement		2:24:25:25	4999125	1					
ANR	4999134	ExpressionStatement	init_condor_ids ( )	1256:2:33747:33764	4999125	0	True				
ANR	4999135	CallExpression	init_condor_ids ( )		4999125	0					
ANR	4999136	Callee	init_condor_ids		4999125	0					
ANR	4999137	Identifier	init_condor_ids		4999125	0					
ANR	4999138	ArgumentList			4999125	1					
ANR	4999139	ReturnStatement	return CondorGid ;	1259:1:33771:33787	4999125	1	True				
ANR	4999140	Identifier	CondorGid		4999125	0					
ANR	4999141	ReturnType	gid_t		4999125	1					
ANR	4999142	Identifier	get_condor_gid		4999125	2					
ANR	4999143	ParameterList			4999125	3					
ANR	4999144	CFGEntryNode	ENTRY		4999125		True				
ANR	4999145	CFGExitNode	EXIT		4999125		True				
ANR	4999146	Symbol	CondorGid		4999125						
ANR	4999147	Symbol	CondorIdsInited		4999125						
ANR	4999148	Function	get_condor_username	1265:0:33895:34006							
ANR	4999149	FunctionDef	get_condor_username ()		4999148	0					
ANR	4999150	CompoundStatement		1267:0:33929:34006	4999148	0					
ANR	4999151	IfStatement	if ( ! CondorIdsInited )		4999148	0					
ANR	4999152	Condition	! CondorIdsInited	1268:5:33936:33951	4999148	0	True				
ANR	4999153	UnaryOperationExpression	! CondorIdsInited		4999148	0					
ANR	4999154	UnaryOperator	!		4999148	0					
ANR	4999155	Identifier	CondorIdsInited		4999148	1					
ANR	4999156	CompoundStatement		2:24:25:25	4999148	1					
ANR	4999157	ExpressionStatement	init_condor_ids ( )	1269:2:33959:33976	4999148	0	True				
ANR	4999158	CallExpression	init_condor_ids ( )		4999148	0					
ANR	4999159	Callee	init_condor_ids		4999148	0					
ANR	4999160	Identifier	init_condor_ids		4999148	0					
ANR	4999161	ArgumentList			4999148	1					
ANR	4999162	ReturnStatement	return CondorUserName ;	1272:1:33983:34004	4999148	1	True				
ANR	4999163	Identifier	CondorUserName		4999148	0					
ANR	4999164	ReturnType	const char *		4999148	1					
ANR	4999165	Identifier	get_condor_username		4999148	2					
ANR	4999166	ParameterList			4999148	3					
ANR	4999167	CFGEntryNode	ENTRY		4999148		True				
ANR	4999168	CFGExitNode	EXIT		4999148		True				
ANR	4999169	Symbol	CondorUserName		4999148						
ANR	4999170	Symbol	CondorIdsInited		4999148						
ANR	4999171	Function	get_user_uid	1276:0:34012:34173							
ANR	4999172	FunctionDef	get_user_uid ()		4999171	0					
ANR	4999173	CompoundStatement		1278:0:34033:34173	4999171	0					
ANR	4999174	IfStatement	if ( ! UserIdsInited )		4999171	0					
ANR	4999175	Condition	! UserIdsInited	1279:5:34040:34053	4999171	0	True				
ANR	4999176	UnaryOperationExpression	! UserIdsInited		4999171	0					
ANR	4999177	UnaryOperator	!		4999171	0					
ANR	4999178	Identifier	UserIdsInited		4999171	1					
ANR	4999179	CompoundStatement		2:22:23:23	4999171	1					
ANR	4999180	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_user_uid() called when UserIds not inited!\\n"" )"	1280:2:34061:34130	4999171	0	True				
ANR	4999181	CallExpression	"dprintf ( D_ALWAYS , ""get_user_uid() called when UserIds not inited!\\n"" )"		4999171	0					
ANR	4999182	Callee	dprintf		4999171	0					
ANR	4999183	Identifier	dprintf		4999171	0					
ANR	4999184	ArgumentList	D_ALWAYS		4999171	1					
ANR	4999185	Argument	D_ALWAYS		4999171	0					
ANR	4999186	Identifier	D_ALWAYS		4999171	0					
ANR	4999187	Argument	"""get_user_uid() called when UserIds not inited!\\n"""		4999171	1					
ANR	4999188	PrimaryExpression	"""get_user_uid() called when UserIds not inited!\\n"""		4999171	0					
ANR	4999189	ReturnStatement	return ( uid_t ) - 1 ;	1281:2:34134:34150	4999171	1	True				
ANR	4999190	CastExpression	( uid_t ) - 1		4999171	0					
ANR	4999191	CastTarget	uid_t		4999171	0					
ANR	4999192	UnaryOperationExpression	- 1		4999171	1					
ANR	4999193	UnaryOperator	-		4999171	0					
ANR	4999194	PrimaryExpression	1		4999171	1					
ANR	4999195	ReturnStatement	return UserUid ;	1284:1:34157:34171	4999171	1	True				
ANR	4999196	Identifier	UserUid		4999171	0					
ANR	4999197	ReturnType	uid_t		4999171	1					
ANR	4999198	Identifier	get_user_uid		4999171	2					
ANR	4999199	ParameterList			4999171	3					
ANR	4999200	CFGEntryNode	ENTRY		4999171		True				
ANR	4999201	CFGExitNode	EXIT		4999171		True				
ANR	4999202	Symbol	UserUid		4999171						
ANR	4999203	Symbol	UserIdsInited		4999171						
ANR	4999204	Symbol	D_ALWAYS		4999171						
ANR	4999205	Function	get_user_gid	1288:0:34177:34338							
ANR	4999206	FunctionDef	get_user_gid ()		4999205	0					
ANR	4999207	CompoundStatement		1290:0:34198:34338	4999205	0					
ANR	4999208	IfStatement	if ( ! UserIdsInited )		4999205	0					
ANR	4999209	Condition	! UserIdsInited	1291:5:34205:34218	4999205	0	True				
ANR	4999210	UnaryOperationExpression	! UserIdsInited		4999205	0					
ANR	4999211	UnaryOperator	!		4999205	0					
ANR	4999212	Identifier	UserIdsInited		4999205	1					
ANR	4999213	CompoundStatement		2:22:23:23	4999205	1					
ANR	4999214	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_user_gid() called when UserIds not inited!\\n"" )"	1292:2:34226:34295	4999205	0	True				
ANR	4999215	CallExpression	"dprintf ( D_ALWAYS , ""get_user_gid() called when UserIds not inited!\\n"" )"		4999205	0					
ANR	4999216	Callee	dprintf		4999205	0					
ANR	4999217	Identifier	dprintf		4999205	0					
ANR	4999218	ArgumentList	D_ALWAYS		4999205	1					
ANR	4999219	Argument	D_ALWAYS		4999205	0					
ANR	4999220	Identifier	D_ALWAYS		4999205	0					
ANR	4999221	Argument	"""get_user_gid() called when UserIds not inited!\\n"""		4999205	1					
ANR	4999222	PrimaryExpression	"""get_user_gid() called when UserIds not inited!\\n"""		4999205	0					
ANR	4999223	ReturnStatement	return ( gid_t ) - 1 ;	1293:2:34299:34315	4999205	1	True				
ANR	4999224	CastExpression	( gid_t ) - 1		4999205	0					
ANR	4999225	CastTarget	gid_t		4999205	0					
ANR	4999226	UnaryOperationExpression	- 1		4999205	1					
ANR	4999227	UnaryOperator	-		4999205	0					
ANR	4999228	PrimaryExpression	1		4999205	1					
ANR	4999229	ReturnStatement	return UserGid ;	1296:1:34322:34336	4999205	1	True				
ANR	4999230	Identifier	UserGid		4999205	0					
ANR	4999231	ReturnType	gid_t		4999205	1					
ANR	4999232	Identifier	get_user_gid		4999205	2					
ANR	4999233	ParameterList			4999205	3					
ANR	4999234	CFGEntryNode	ENTRY		4999205		True				
ANR	4999235	CFGExitNode	EXIT		4999205		True				
ANR	4999236	Symbol	UserGid		4999205						
ANR	4999237	Symbol	UserIdsInited		4999205						
ANR	4999238	Symbol	D_ALWAYS		4999205						
ANR	4999239	Function	get_file_owner_uid	1300:0:34342:34524							
ANR	4999240	FunctionDef	get_file_owner_uid ()		4999239	0					
ANR	4999241	CompoundStatement		1302:0:34369:34524	4999239	0					
ANR	4999242	IfStatement	if ( ! OwnerIdsInited )		4999239	0					
ANR	4999243	Condition	! OwnerIdsInited	1303:5:34376:34390	4999239	0	True				
ANR	4999244	UnaryOperationExpression	! OwnerIdsInited		4999239	0					
ANR	4999245	UnaryOperator	!		4999239	0					
ANR	4999246	Identifier	OwnerIdsInited		4999239	1					
ANR	4999247	CompoundStatement		2:23:24:24	4999239	1					
ANR	4999248	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_file_owner_uid() called when OwnerIds not inited!\\n"" )"	1304:2:34398:34481	4999239	0	True				
ANR	4999249	CallExpression	"dprintf ( D_ALWAYS , ""get_file_owner_uid() called when OwnerIds not inited!\\n"" )"		4999239	0					
ANR	4999250	Callee	dprintf		4999239	0					
ANR	4999251	Identifier	dprintf		4999239	0					
ANR	4999252	ArgumentList	D_ALWAYS		4999239	1					
ANR	4999253	Argument	D_ALWAYS		4999239	0					
ANR	4999254	Identifier	D_ALWAYS		4999239	0					
ANR	4999255	Argument	"""get_file_owner_uid() called when OwnerIds not inited!\\n"""		4999239	1					
ANR	4999256	PrimaryExpression	"""get_file_owner_uid() called when OwnerIds not inited!\\n"""		4999239	0					
ANR	4999257	ReturnStatement	return ( uid_t ) - 1 ;	1306:2:34485:34501	4999239	1	True				
ANR	4999258	CastExpression	( uid_t ) - 1		4999239	0					
ANR	4999259	CastTarget	uid_t		4999239	0					
ANR	4999260	UnaryOperationExpression	- 1		4999239	1					
ANR	4999261	UnaryOperator	-		4999239	0					
ANR	4999262	PrimaryExpression	1		4999239	1					
ANR	4999263	ReturnStatement	return OwnerUid ;	1308:1:34507:34522	4999239	1	True				
ANR	4999264	Identifier	OwnerUid		4999239	0					
ANR	4999265	ReturnType	uid_t		4999239	1					
ANR	4999266	Identifier	get_file_owner_uid		4999239	2					
ANR	4999267	ParameterList			4999239	3					
ANR	4999268	CFGEntryNode	ENTRY		4999239		True				
ANR	4999269	CFGExitNode	EXIT		4999239		True				
ANR	4999270	Symbol	OwnerIdsInited		4999239						
ANR	4999271	Symbol	OwnerUid		4999239						
ANR	4999272	Symbol	D_ALWAYS		4999239						
ANR	4999273	Function	get_file_owner_gid	1312:0:34528:34710							
ANR	4999274	FunctionDef	get_file_owner_gid ()		4999273	0					
ANR	4999275	CompoundStatement		1314:0:34555:34710	4999273	0					
ANR	4999276	IfStatement	if ( ! OwnerIdsInited )		4999273	0					
ANR	4999277	Condition	! OwnerIdsInited	1315:5:34562:34576	4999273	0	True				
ANR	4999278	UnaryOperationExpression	! OwnerIdsInited		4999273	0					
ANR	4999279	UnaryOperator	!		4999273	0					
ANR	4999280	Identifier	OwnerIdsInited		4999273	1					
ANR	4999281	CompoundStatement		2:23:24:24	4999273	1					
ANR	4999282	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_file_owner_gid() called when OwnerIds not inited!\\n"" )"	1316:2:34584:34667	4999273	0	True				
ANR	4999283	CallExpression	"dprintf ( D_ALWAYS , ""get_file_owner_gid() called when OwnerIds not inited!\\n"" )"		4999273	0					
ANR	4999284	Callee	dprintf		4999273	0					
ANR	4999285	Identifier	dprintf		4999273	0					
ANR	4999286	ArgumentList	D_ALWAYS		4999273	1					
ANR	4999287	Argument	D_ALWAYS		4999273	0					
ANR	4999288	Identifier	D_ALWAYS		4999273	0					
ANR	4999289	Argument	"""get_file_owner_gid() called when OwnerIds not inited!\\n"""		4999273	1					
ANR	4999290	PrimaryExpression	"""get_file_owner_gid() called when OwnerIds not inited!\\n"""		4999273	0					
ANR	4999291	ReturnStatement	return ( gid_t ) - 1 ;	1318:2:34671:34687	4999273	1	True				
ANR	4999292	CastExpression	( gid_t ) - 1		4999273	0					
ANR	4999293	CastTarget	gid_t		4999273	0					
ANR	4999294	UnaryOperationExpression	- 1		4999273	1					
ANR	4999295	UnaryOperator	-		4999273	0					
ANR	4999296	PrimaryExpression	1		4999273	1					
ANR	4999297	ReturnStatement	return OwnerGid ;	1320:1:34693:34708	4999273	1	True				
ANR	4999298	Identifier	OwnerGid		4999273	0					
ANR	4999299	ReturnType	gid_t		4999273	1					
ANR	4999300	Identifier	get_file_owner_gid		4999273	2					
ANR	4999301	ParameterList			4999273	3					
ANR	4999302	CFGEntryNode	ENTRY		4999273		True				
ANR	4999303	CFGExitNode	EXIT		4999273		True				
ANR	4999304	Symbol	OwnerIdsInited		4999273						
ANR	4999305	Symbol	OwnerGid		4999273						
ANR	4999306	Symbol	D_ALWAYS		4999273						
ANR	4999307	Function	get_my_uid	1324:0:34714:34753							
ANR	4999308	FunctionDef	get_my_uid ()		4999307	0					
ANR	4999309	CompoundStatement		1326:0:34733:34753	4999307	0					
ANR	4999310	ReturnStatement	return getuid ( ) ;	1327:1:34736:34751	4999307	0	True				
ANR	4999311	CallExpression	getuid ( )		4999307	0					
ANR	4999312	Callee	getuid		4999307	0					
ANR	4999313	Identifier	getuid		4999307	0					
ANR	4999314	ArgumentList			4999307	1					
ANR	4999315	ReturnType	uid_t		4999307	1					
ANR	4999316	Identifier	get_my_uid		4999307	2					
ANR	4999317	ParameterList			4999307	3					
ANR	4999318	CFGEntryNode	ENTRY		4999307		True				
ANR	4999319	CFGExitNode	EXIT		4999307		True				
ANR	4999320	Symbol	getuid		4999307						
ANR	4999321	Function	get_my_gid	1331:0:34757:34796							
ANR	4999322	FunctionDef	get_my_gid ()		4999321	0					
ANR	4999323	CompoundStatement		1333:0:34776:34796	4999321	0					
ANR	4999324	ReturnStatement	return getgid ( ) ;	1334:1:34779:34794	4999321	0	True				
ANR	4999325	CallExpression	getgid ( )		4999321	0					
ANR	4999326	Callee	getgid		4999321	0					
ANR	4999327	Identifier	getgid		4999321	0					
ANR	4999328	ArgumentList			4999321	1					
ANR	4999329	ReturnType	gid_t		4999321	1					
ANR	4999330	Identifier	get_my_gid		4999321	2					
ANR	4999331	ParameterList			4999321	3					
ANR	4999332	CFGEntryNode	ENTRY		4999321		True				
ANR	4999333	CFGExitNode	EXIT		4999321		True				
ANR	4999334	Symbol	getgid		4999321						
ANR	4999335	Function	get_real_condor_uid	1338:0:34800:34904							
ANR	4999336	FunctionDef	get_real_condor_uid ()		4999335	0					
ANR	4999337	CompoundStatement		1340:0:34828:34904	4999335	0					
ANR	4999338	IfStatement	if ( ! CondorIdsInited )		4999335	0					
ANR	4999339	Condition	! CondorIdsInited	1341:5:34835:34850	4999335	0	True				
ANR	4999340	UnaryOperationExpression	! CondorIdsInited		4999335	0					
ANR	4999341	UnaryOperator	!		4999335	0					
ANR	4999342	Identifier	CondorIdsInited		4999335	1					
ANR	4999343	CompoundStatement		2:24:25:25	4999335	1					
ANR	4999344	ExpressionStatement	init_condor_ids ( )	1342:2:34858:34875	4999335	0	True				
ANR	4999345	CallExpression	init_condor_ids ( )		4999335	0					
ANR	4999346	Callee	init_condor_ids		4999335	0					
ANR	4999347	Identifier	init_condor_ids		4999335	0					
ANR	4999348	ArgumentList			4999335	1					
ANR	4999349	ReturnStatement	return RealCondorUid ;	1345:1:34882:34902	4999335	1	True				
ANR	4999350	Identifier	RealCondorUid		4999335	0					
ANR	4999351	ReturnType	uid_t		4999335	1					
ANR	4999352	Identifier	get_real_condor_uid		4999335	2					
ANR	4999353	ParameterList			4999335	3					
ANR	4999354	CFGEntryNode	ENTRY		4999335		True				
ANR	4999355	CFGExitNode	EXIT		4999335		True				
ANR	4999356	Symbol	RealCondorUid		4999335						
ANR	4999357	Symbol	CondorIdsInited		4999335						
ANR	4999358	Function	get_real_condor_gid	1349:0:34908:35012							
ANR	4999359	FunctionDef	get_real_condor_gid ()		4999358	0					
ANR	4999360	CompoundStatement		1351:0:34936:35012	4999358	0					
ANR	4999361	IfStatement	if ( ! CondorIdsInited )		4999358	0					
ANR	4999362	Condition	! CondorIdsInited	1352:5:34943:34958	4999358	0	True				
ANR	4999363	UnaryOperationExpression	! CondorIdsInited		4999358	0					
ANR	4999364	UnaryOperator	!		4999358	0					
ANR	4999365	Identifier	CondorIdsInited		4999358	1					
ANR	4999366	CompoundStatement		2:24:25:25	4999358	1					
ANR	4999367	ExpressionStatement	init_condor_ids ( )	1353:2:34966:34983	4999358	0	True				
ANR	4999368	CallExpression	init_condor_ids ( )		4999358	0					
ANR	4999369	Callee	init_condor_ids		4999358	0					
ANR	4999370	Identifier	init_condor_ids		4999358	0					
ANR	4999371	ArgumentList			4999358	1					
ANR	4999372	ReturnStatement	return RealCondorGid ;	1356:1:34990:35010	4999358	1	True				
ANR	4999373	Identifier	RealCondorGid		4999358	0					
ANR	4999374	ReturnType	gid_t		4999358	1					
ANR	4999375	Identifier	get_real_condor_gid		4999358	2					
ANR	4999376	ParameterList			4999358	3					
ANR	4999377	CFGEntryNode	ENTRY		4999358		True				
ANR	4999378	CFGExitNode	EXIT		4999358		True				
ANR	4999379	Symbol	CondorIdsInited		4999358						
ANR	4999380	Symbol	RealCondorGid		4999358						
ANR	4999381	Function	set_condor_euid	1360:0:35016:35129							
ANR	4999382	FunctionDef	set_condor_euid ()		4999381	0					
ANR	4999383	CompoundStatement		1362:0:35038:35129	4999381	0					
ANR	4999384	IfStatement	if ( ! CondorIdsInited )		4999381	0					
ANR	4999385	Condition	! CondorIdsInited	1363:5:35045:35060	4999381	0	True				
ANR	4999386	UnaryOperationExpression	! CondorIdsInited		4999381	0					
ANR	4999387	UnaryOperator	!		4999381	0					
ANR	4999388	Identifier	CondorIdsInited		4999381	1					
ANR	4999389	CompoundStatement		2:24:25:25	4999381	1					
ANR	4999390	ExpressionStatement	init_condor_ids ( )	1364:2:35068:35085	4999381	0	True				
ANR	4999391	CallExpression	init_condor_ids ( )		4999381	0					
ANR	4999392	Callee	init_condor_ids		4999381	0					
ANR	4999393	Identifier	init_condor_ids		4999381	0					
ANR	4999394	ArgumentList			4999381	1					
ANR	4999395	ReturnStatement	return SET_EFFECTIVE_UID ( CondorUid ) ;	1367:1:35092:35127	4999381	1	True				
ANR	4999396	CallExpression	SET_EFFECTIVE_UID ( CondorUid )		4999381	0					
ANR	4999397	Callee	SET_EFFECTIVE_UID		4999381	0					
ANR	4999398	Identifier	SET_EFFECTIVE_UID		4999381	0					
ANR	4999399	ArgumentList	CondorUid		4999381	1					
ANR	4999400	Argument	CondorUid		4999381	0					
ANR	4999401	Identifier	CondorUid		4999381	0					
ANR	4999402	ReturnType	int		4999381	1					
ANR	4999403	Identifier	set_condor_euid		4999381	2					
ANR	4999404	ParameterList			4999381	3					
ANR	4999405	CFGEntryNode	ENTRY		4999381		True				
ANR	4999406	CFGExitNode	EXIT		4999381		True				
ANR	4999407	Symbol	CondorUid		4999381						
ANR	4999408	Symbol	SET_EFFECTIVE_UID		4999381						
ANR	4999409	Symbol	CondorIdsInited		4999381						
ANR	4999410	Function	set_condor_egid	1371:0:35133:35246							
ANR	4999411	FunctionDef	set_condor_egid ()		4999410	0					
ANR	4999412	CompoundStatement		1373:0:35155:35246	4999410	0					
ANR	4999413	IfStatement	if ( ! CondorIdsInited )		4999410	0					
ANR	4999414	Condition	! CondorIdsInited	1374:5:35162:35177	4999410	0	True				
ANR	4999415	UnaryOperationExpression	! CondorIdsInited		4999410	0					
ANR	4999416	UnaryOperator	!		4999410	0					
ANR	4999417	Identifier	CondorIdsInited		4999410	1					
ANR	4999418	CompoundStatement		2:24:25:25	4999410	1					
ANR	4999419	ExpressionStatement	init_condor_ids ( )	1375:2:35185:35202	4999410	0	True				
ANR	4999420	CallExpression	init_condor_ids ( )		4999410	0					
ANR	4999421	Callee	init_condor_ids		4999410	0					
ANR	4999422	Identifier	init_condor_ids		4999410	0					
ANR	4999423	ArgumentList			4999410	1					
ANR	4999424	ReturnStatement	return SET_EFFECTIVE_GID ( CondorGid ) ;	1378:1:35209:35244	4999410	1	True				
ANR	4999425	CallExpression	SET_EFFECTIVE_GID ( CondorGid )		4999410	0					
ANR	4999426	Callee	SET_EFFECTIVE_GID		4999410	0					
ANR	4999427	Identifier	SET_EFFECTIVE_GID		4999410	0					
ANR	4999428	ArgumentList	CondorGid		4999410	1					
ANR	4999429	Argument	CondorGid		4999410	0					
ANR	4999430	Identifier	CondorGid		4999410	0					
ANR	4999431	ReturnType	int		4999410	1					
ANR	4999432	Identifier	set_condor_egid		4999410	2					
ANR	4999433	ParameterList			4999410	3					
ANR	4999434	CFGEntryNode	ENTRY		4999410		True				
ANR	4999435	CFGExitNode	EXIT		4999410		True				
ANR	4999436	Symbol	CondorGid		4999410						
ANR	4999437	Symbol	SET_EFFECTIVE_GID		4999410						
ANR	4999438	Symbol	CondorIdsInited		4999410						
ANR	4999439	Function	set_user_euid	1382:0:35250:35423							
ANR	4999440	FunctionDef	set_user_euid ()		4999439	0					
ANR	4999441	CompoundStatement		1384:0:35270:35423	4999439	0					
ANR	4999442	IfStatement	if ( ! UserIdsInited )		4999439	0					
ANR	4999443	Condition	! UserIdsInited	1385:5:35277:35290	4999439	0	True				
ANR	4999444	UnaryOperationExpression	! UserIdsInited		4999439	0					
ANR	4999445	UnaryOperator	!		4999439	0					
ANR	4999446	Identifier	UserIdsInited		4999439	1					
ANR	4999447	CompoundStatement		2:22:23:23	4999439	1					
ANR	4999448	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_user_euid() called when UserIds not inited!\\n"" )"	1386:2:35298:35368	4999439	0	True				
ANR	4999449	CallExpression	"dprintf ( D_ALWAYS , ""set_user_euid() called when UserIds not inited!\\n"" )"		4999439	0					
ANR	4999450	Callee	dprintf		4999439	0					
ANR	4999451	Identifier	dprintf		4999439	0					
ANR	4999452	ArgumentList	D_ALWAYS		4999439	1					
ANR	4999453	Argument	D_ALWAYS		4999439	0					
ANR	4999454	Identifier	D_ALWAYS		4999439	0					
ANR	4999455	Argument	"""set_user_euid() called when UserIds not inited!\\n"""		4999439	1					
ANR	4999456	PrimaryExpression	"""set_user_euid() called when UserIds not inited!\\n"""		4999439	0					
ANR	4999457	ReturnStatement	return - 1 ;	1387:2:35372:35381	4999439	1	True				
ANR	4999458	UnaryOperationExpression	- 1		4999439	0					
ANR	4999459	UnaryOperator	-		4999439	0					
ANR	4999460	PrimaryExpression	1		4999439	1					
ANR	4999461	ReturnStatement	return SET_EFFECTIVE_UID ( UserUid ) ;	1390:1:35388:35421	4999439	1	True				
ANR	4999462	CallExpression	SET_EFFECTIVE_UID ( UserUid )		4999439	0					
ANR	4999463	Callee	SET_EFFECTIVE_UID		4999439	0					
ANR	4999464	Identifier	SET_EFFECTIVE_UID		4999439	0					
ANR	4999465	ArgumentList	UserUid		4999439	1					
ANR	4999466	Argument	UserUid		4999439	0					
ANR	4999467	Identifier	UserUid		4999439	0					
ANR	4999468	ReturnType	int		4999439	1					
ANR	4999469	Identifier	set_user_euid		4999439	2					
ANR	4999470	ParameterList			4999439	3					
ANR	4999471	CFGEntryNode	ENTRY		4999439		True				
ANR	4999472	CFGExitNode	EXIT		4999439		True				
ANR	4999473	Symbol	UserUid		4999439						
ANR	4999474	Symbol	UserIdsInited		4999439						
ANR	4999475	Symbol	D_ALWAYS		4999439						
ANR	4999476	Symbol	SET_EFFECTIVE_UID		4999439						
ANR	4999477	Function	set_user_egid	1394:0:35427:36218							
ANR	4999478	FunctionDef	set_user_egid ()		4999477	0					
ANR	4999479	CompoundStatement		1396:0:35447:36218	4999477	0					
ANR	4999480	IfStatement	if ( ! UserIdsInited )		4999477	0					
ANR	4999481	Condition	! UserIdsInited	1397:5:35454:35467	4999477	0	True				
ANR	4999482	UnaryOperationExpression	! UserIdsInited		4999477	0					
ANR	4999483	UnaryOperator	!		4999477	0					
ANR	4999484	Identifier	UserIdsInited		4999477	1					
ANR	4999485	CompoundStatement		2:22:23:23	4999477	1					
ANR	4999486	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_user_egid() called when UserIds not inited!\\n"" )"	1398:2:35475:35545	4999477	0	True				
ANR	4999487	CallExpression	"dprintf ( D_ALWAYS , ""set_user_egid() called when UserIds not inited!\\n"" )"		4999477	0					
ANR	4999488	Callee	dprintf		4999477	0					
ANR	4999489	Identifier	dprintf		4999477	0					
ANR	4999490	ArgumentList	D_ALWAYS		4999477	1					
ANR	4999491	Argument	D_ALWAYS		4999477	0					
ANR	4999492	Identifier	D_ALWAYS		4999477	0					
ANR	4999493	Argument	"""set_user_egid() called when UserIds not inited!\\n"""		4999477	1					
ANR	4999494	PrimaryExpression	"""set_user_egid() called when UserIds not inited!\\n"""		4999477	0					
ANR	4999495	ReturnStatement	return - 1 ;	1399:2:35549:35558	4999477	1	True				
ANR	4999496	UnaryOperationExpression	- 1		4999477	0					
ANR	4999497	UnaryOperator	-		4999477	0					
ANR	4999498	PrimaryExpression	1		4999477	1					
ANR	4999499	IfStatement	if ( UserName )		4999477	1					
ANR	4999500	Condition	UserName	1410:5:35961:35968	4999477	0	True				
ANR	4999501	Identifier	UserName		4999477	0					
ANR	4999502	CompoundStatement		15:16:524:524	4999477	1					
ANR	4999503	ExpressionStatement	errno = 0	1411:2:35976:35985	4999477	0	True				
ANR	4999504	AssignmentExpression	errno = 0		4999477	0		=			
ANR	4999505	Identifier	errno		4999477	0					
ANR	4999506	PrimaryExpression	0		4999477	1					
ANR	4999507	IfStatement	if ( ! ( pcache ( ) -> init_groups ( UserName ) ) )		4999477	1					
ANR	4999508	Condition	! ( pcache ( ) -> init_groups ( UserName ) )	1412:5:35992:36025	4999477	0	True				
ANR	4999509	UnaryOperationExpression	! ( pcache ( ) -> init_groups ( UserName ) )		4999477	0					
ANR	4999510	UnaryOperator	!		4999477	0					
ANR	4999511	CallExpression	pcache ( ) -> init_groups ( UserName )		4999477	1					
ANR	4999512	Callee	pcache ( ) -> init_groups		4999477	0					
ANR	4999513	PtrMemberAccess	pcache ( ) -> init_groups		4999477	0					
ANR	4999514	CallExpression	pcache ( )		4999477	0					
ANR	4999515	Callee	pcache		4999477	0					
ANR	4999516	Identifier	pcache		4999477	0					
ANR	4999517	ArgumentList			4999477	1					
ANR	4999518	Identifier	init_groups		4999477	1					
ANR	4999519	ArgumentList	UserName		4999477	1					
ANR	4999520	Argument	UserName		4999477	0					
ANR	4999521	Identifier	UserName		4999477	0					
ANR	4999522	CompoundStatement		17:42:581:581	4999477	1					
ANR	4999523	Statement	dprintf	1413:3:36034:36040	4999477	0	True				
ANR	4999524	Statement	(	1413:10:36041:36041	4999477	1	True				
ANR	4999525	Statement	D_ALWAYS	1413:12:36043:36050	4999477	2	True				
ANR	4999526	Statement	","	1413:20:36051:36051	4999477	3	True				
ANR	4999527	Statement	"""set_user_egid - ERROR: initgroups(%s, %d) failed, """	1414:6:36060:36111	4999477	4	True				
ANR	4999528	Statement	"""errno: %s\\n"""	1415:6:36119:36131	4999477	5	True				
ANR	4999529	Statement	","	1415:19:36132:36132	4999477	6	True				
ANR	4999530	Statement	UserName	1415:21:36134:36141	4999477	7	True				
ANR	4999531	Statement	","	1415:29:36142:36142	4999477	8	True				
ANR	4999532	Statement	UserGid	1415:31:36144:36150	4999477	9	True				
ANR	4999533	Statement	","	1415:38:36151:36151	4999477	10	True				
ANR	4999534	Statement	strerror	1415:40:36153:36160	4999477	11	True				
ANR	4999535	Statement	(	1415:48:36161:36161	4999477	12	True				
ANR	4999536	Statement	errno	1415:49:36162:36166	4999477	13	True				
ANR	4999537	Statement	)	1415:54:36167:36167	4999477	14	True				
ANR	4999538	Statement	)	1415:56:36169:36169	4999477	15	True				
ANR	4999539	ExpressionStatement		1415:57:36170:36170	4999477	16	True				
ANR	4999540	ReturnStatement	return SET_EFFECTIVE_GID ( UserGid ) ;	1418:1:36183:36216	4999477	2	True				
ANR	4999541	CallExpression	SET_EFFECTIVE_GID ( UserGid )		4999477	0					
ANR	4999542	Callee	SET_EFFECTIVE_GID		4999477	0					
ANR	4999543	Identifier	SET_EFFECTIVE_GID		4999477	0					
ANR	4999544	ArgumentList	UserGid		4999477	1					
ANR	4999545	Argument	UserGid		4999477	0					
ANR	4999546	Identifier	UserGid		4999477	0					
ANR	4999547	ReturnType	int		4999477	1					
ANR	4999548	Identifier	set_user_egid		4999477	2					
ANR	4999549	ParameterList			4999477	3					
ANR	4999550	CFGEntryNode	ENTRY		4999477		True				
ANR	4999551	CFGExitNode	EXIT		4999477		True				
ANR	4999552	Symbol	* pcache		4999477						
ANR	4999553	Symbol	errno		4999477						
ANR	4999554	Symbol	UserName		4999477						
ANR	4999555	Symbol	UserGid		4999477						
ANR	4999556	Symbol	UserIdsInited		4999477						
ANR	4999557	Symbol	D_ALWAYS		4999477						
ANR	4999558	Symbol	pcache ( ) -> init_groups		4999477						
ANR	4999559	Symbol	SET_EFFECTIVE_GID		4999477						
ANR	4999560	Symbol	pcache		4999477						
ANR	4999561	Function	set_user_ruid	1422:0:36222:36390							
ANR	4999562	FunctionDef	set_user_ruid ()		4999561	0					
ANR	4999563	CompoundStatement		1424:0:36242:36390	4999561	0					
ANR	4999564	IfStatement	if ( ! UserIdsInited )		4999561	0					
ANR	4999565	Condition	! UserIdsInited	1425:5:36249:36262	4999561	0	True				
ANR	4999566	UnaryOperationExpression	! UserIdsInited		4999561	0					
ANR	4999567	UnaryOperator	!		4999561	0					
ANR	4999568	Identifier	UserIdsInited		4999561	1					
ANR	4999569	CompoundStatement		2:22:23:23	4999561	1					
ANR	4999570	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_user_ruid() called when UserIds not inited!\\n"" )"	1426:2:36270:36340	4999561	0	True				
ANR	4999571	CallExpression	"dprintf ( D_ALWAYS , ""set_user_ruid() called when UserIds not inited!\\n"" )"		4999561	0					
ANR	4999572	Callee	dprintf		4999561	0					
ANR	4999573	Identifier	dprintf		4999561	0					
ANR	4999574	ArgumentList	D_ALWAYS		4999561	1					
ANR	4999575	Argument	D_ALWAYS		4999561	0					
ANR	4999576	Identifier	D_ALWAYS		4999561	0					
ANR	4999577	Argument	"""set_user_ruid() called when UserIds not inited!\\n"""		4999561	1					
ANR	4999578	PrimaryExpression	"""set_user_ruid() called when UserIds not inited!\\n"""		4999561	0					
ANR	4999579	ReturnStatement	return - 1 ;	1427:2:36344:36353	4999561	1	True				
ANR	4999580	UnaryOperationExpression	- 1		4999561	0					
ANR	4999581	UnaryOperator	-		4999561	0					
ANR	4999582	PrimaryExpression	1		4999561	1					
ANR	4999583	ReturnStatement	return SET_REAL_UID ( UserUid ) ;	1430:1:36360:36388	4999561	1	True				
ANR	4999584	CallExpression	SET_REAL_UID ( UserUid )		4999561	0					
ANR	4999585	Callee	SET_REAL_UID		4999561	0					
ANR	4999586	Identifier	SET_REAL_UID		4999561	0					
ANR	4999587	ArgumentList	UserUid		4999561	1					
ANR	4999588	Argument	UserUid		4999561	0					
ANR	4999589	Identifier	UserUid		4999561	0					
ANR	4999590	ReturnType	int		4999561	1					
ANR	4999591	Identifier	set_user_ruid		4999561	2					
ANR	4999592	ParameterList			4999561	3					
ANR	4999593	CFGEntryNode	ENTRY		4999561		True				
ANR	4999594	CFGExitNode	EXIT		4999561		True				
ANR	4999595	Symbol	SET_REAL_UID		4999561						
ANR	4999596	Symbol	UserUid		4999561						
ANR	4999597	Symbol	UserIdsInited		4999561						
ANR	4999598	Symbol	D_ALWAYS		4999561						
ANR	4999599	Function	set_user_rgid	1434:0:36394:37183							
ANR	4999600	FunctionDef	set_user_rgid ()		4999599	0					
ANR	4999601	CompoundStatement		1436:0:36414:37183	4999599	0					
ANR	4999602	IfStatement	if ( ! UserIdsInited )		4999599	0					
ANR	4999603	Condition	! UserIdsInited	1437:5:36421:36434	4999599	0	True				
ANR	4999604	UnaryOperationExpression	! UserIdsInited		4999599	0					
ANR	4999605	UnaryOperator	!		4999599	0					
ANR	4999606	Identifier	UserIdsInited		4999599	1					
ANR	4999607	CompoundStatement		2:22:23:23	4999599	1					
ANR	4999608	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_user_rgid() called when UserIds not inited!\\n"" )"	1438:2:36442:36512	4999599	0	True				
ANR	4999609	CallExpression	"dprintf ( D_ALWAYS , ""set_user_rgid() called when UserIds not inited!\\n"" )"		4999599	0					
ANR	4999610	Callee	dprintf		4999599	0					
ANR	4999611	Identifier	dprintf		4999599	0					
ANR	4999612	ArgumentList	D_ALWAYS		4999599	1					
ANR	4999613	Argument	D_ALWAYS		4999599	0					
ANR	4999614	Identifier	D_ALWAYS		4999599	0					
ANR	4999615	Argument	"""set_user_rgid() called when UserIds not inited!\\n"""		4999599	1					
ANR	4999616	PrimaryExpression	"""set_user_rgid() called when UserIds not inited!\\n"""		4999599	0					
ANR	4999617	ReturnStatement	return - 1 ;	1439:2:36516:36525	4999599	1	True				
ANR	4999618	UnaryOperationExpression	- 1		4999599	0					
ANR	4999619	UnaryOperator	-		4999599	0					
ANR	4999620	PrimaryExpression	1		4999599	1					
ANR	4999621	IfStatement	if ( UserName )		4999599	1					
ANR	4999622	Condition	UserName	1450:5:36927:36934	4999599	0	True				
ANR	4999623	Identifier	UserName		4999599	0					
ANR	4999624	CompoundStatement		15:16:523:523	4999599	1					
ANR	4999625	ExpressionStatement	errno = 0	1451:2:36942:36951	4999599	0	True				
ANR	4999626	AssignmentExpression	errno = 0		4999599	0		=			
ANR	4999627	Identifier	errno		4999599	0					
ANR	4999628	PrimaryExpression	0		4999599	1					
ANR	4999629	IfStatement	"if ( ! ( pcache ( ) -> init_groups ( UserName , TrackingGid ) ) )"		4999599	1					
ANR	4999630	Condition	"! ( pcache ( ) -> init_groups ( UserName , TrackingGid ) )"	1452:6:36959:37005	4999599	0	True				
ANR	4999631	UnaryOperationExpression	"! ( pcache ( ) -> init_groups ( UserName , TrackingGid ) )"		4999599	0					
ANR	4999632	UnaryOperator	!		4999599	0					
ANR	4999633	CallExpression	"pcache ( ) -> init_groups ( UserName , TrackingGid )"		4999599	1					
ANR	4999634	Callee	pcache ( ) -> init_groups		4999599	0					
ANR	4999635	PtrMemberAccess	pcache ( ) -> init_groups		4999599	0					
ANR	4999636	CallExpression	pcache ( )		4999599	0					
ANR	4999637	Callee	pcache		4999599	0					
ANR	4999638	Identifier	pcache		4999599	0					
ANR	4999639	ArgumentList			4999599	1					
ANR	4999640	Identifier	init_groups		4999599	1					
ANR	4999641	ArgumentList	UserName		4999599	1					
ANR	4999642	Argument	UserName		4999599	0					
ANR	4999643	Identifier	UserName		4999599	0					
ANR	4999644	Argument	TrackingGid		4999599	1					
ANR	4999645	Identifier	TrackingGid		4999599	0					
ANR	4999646	CompoundStatement		17:56:594:594	4999599	1					
ANR	4999647	Statement	dprintf	1453:3:37014:37020	4999599	0	True				
ANR	4999648	Statement	(	1453:10:37021:37021	4999599	1	True				
ANR	4999649	Statement	D_ALWAYS	1453:12:37023:37030	4999599	2	True				
ANR	4999650	Statement	","	1453:20:37031:37031	4999599	3	True				
ANR	4999651	Statement	"""set_user_rgid - ERROR: initgroups(%s, %d) failed, """	1454:6:37040:37091	4999599	4	True				
ANR	4999652	Statement	"""errno: %d\\n"""	1455:6:37099:37111	4999599	5	True				
ANR	4999653	Statement	","	1455:19:37112:37112	4999599	6	True				
ANR	4999654	Statement	UserName	1455:21:37114:37121	4999599	7	True				
ANR	4999655	Statement	","	1455:29:37122:37122	4999599	8	True				
ANR	4999656	Statement	UserGid	1455:31:37124:37130	4999599	9	True				
ANR	4999657	Statement	","	1455:38:37131:37131	4999599	10	True				
ANR	4999658	Statement	errno	1455:40:37133:37137	4999599	11	True				
ANR	4999659	Statement	)	1455:46:37139:37139	4999599	12	True				
ANR	4999660	ExpressionStatement		1455:47:37140:37140	4999599	13	True				
ANR	4999661	ReturnStatement	return SET_REAL_GID ( UserGid ) ;	1458:1:37153:37181	4999599	2	True				
ANR	4999662	CallExpression	SET_REAL_GID ( UserGid )		4999599	0					
ANR	4999663	Callee	SET_REAL_GID		4999599	0					
ANR	4999664	Identifier	SET_REAL_GID		4999599	0					
ANR	4999665	ArgumentList	UserGid		4999599	1					
ANR	4999666	Argument	UserGid		4999599	0					
ANR	4999667	Identifier	UserGid		4999599	0					
ANR	4999668	ReturnType	int		4999599	1					
ANR	4999669	Identifier	set_user_rgid		4999599	2					
ANR	4999670	ParameterList			4999599	3					
ANR	4999671	CFGEntryNode	ENTRY		4999599		True				
ANR	4999672	CFGExitNode	EXIT		4999599		True				
ANR	4999673	Symbol	* pcache		4999599						
ANR	4999674	Symbol	SET_REAL_GID		4999599						
ANR	4999675	Symbol	errno		4999599						
ANR	4999676	Symbol	UserName		4999599						
ANR	4999677	Symbol	UserGid		4999599						
ANR	4999678	Symbol	UserIdsInited		4999599						
ANR	4999679	Symbol	D_ALWAYS		4999599						
ANR	4999680	Symbol	pcache ( ) -> init_groups		4999599						
ANR	4999681	Symbol	TrackingGid		4999599						
ANR	4999682	Symbol	pcache		4999599						
ANR	4999683	Function	set_root_euid	1462:0:37187:37242							
ANR	4999684	FunctionDef	set_root_euid ()		4999683	0					
ANR	4999685	CompoundStatement		1464:0:37207:37242	4999683	0					
ANR	4999686	ReturnStatement	return SET_EFFECTIVE_UID ( ROOT ) ;	1465:1:37210:37240	4999683	0	True				
ANR	4999687	CallExpression	SET_EFFECTIVE_UID ( ROOT )		4999683	0					
ANR	4999688	Callee	SET_EFFECTIVE_UID		4999683	0					
ANR	4999689	Identifier	SET_EFFECTIVE_UID		4999683	0					
ANR	4999690	ArgumentList	ROOT		4999683	1					
ANR	4999691	Argument	ROOT		4999683	0					
ANR	4999692	Identifier	ROOT		4999683	0					
ANR	4999693	ReturnType	int		4999683	1					
ANR	4999694	Identifier	set_root_euid		4999683	2					
ANR	4999695	ParameterList			4999683	3					
ANR	4999696	CFGEntryNode	ENTRY		4999683		True				
ANR	4999697	CFGExitNode	EXIT		4999683		True				
ANR	4999698	Symbol	ROOT		4999683						
ANR	4999699	Symbol	SET_EFFECTIVE_UID		4999683						
ANR	4999700	Function	set_root_egid	1468:0:37245:37300							
ANR	4999701	FunctionDef	set_root_egid ()		4999700	0					
ANR	4999702	CompoundStatement		1470:0:37265:37300	4999700	0					
ANR	4999703	ReturnStatement	return SET_EFFECTIVE_GID ( ROOT ) ;	1471:1:37268:37298	4999700	0	True				
ANR	4999704	CallExpression	SET_EFFECTIVE_GID ( ROOT )		4999700	0					
ANR	4999705	Callee	SET_EFFECTIVE_GID		4999700	0					
ANR	4999706	Identifier	SET_EFFECTIVE_GID		4999700	0					
ANR	4999707	ArgumentList	ROOT		4999700	1					
ANR	4999708	Argument	ROOT		4999700	0					
ANR	4999709	Identifier	ROOT		4999700	0					
ANR	4999710	ReturnType	int		4999700	1					
ANR	4999711	Identifier	set_root_egid		4999700	2					
ANR	4999712	ParameterList			4999700	3					
ANR	4999713	CFGEntryNode	ENTRY		4999700		True				
ANR	4999714	CFGExitNode	EXIT		4999700		True				
ANR	4999715	Symbol	ROOT		4999700						
ANR	4999716	Symbol	SET_EFFECTIVE_GID		4999700						
ANR	4999717	Function	set_owner_euid	1475:0:37304:37488							
ANR	4999718	FunctionDef	set_owner_euid ()		4999717	0					
ANR	4999719	CompoundStatement		1477:0:37325:37488	4999717	0					
ANR	4999720	IfStatement	if ( ! OwnerIdsInited )		4999717	0					
ANR	4999721	Condition	! OwnerIdsInited	1478:5:37332:37346	4999717	0	True				
ANR	4999722	UnaryOperationExpression	! OwnerIdsInited		4999717	0					
ANR	4999723	UnaryOperator	!		4999717	0					
ANR	4999724	Identifier	OwnerIdsInited		4999717	1					
ANR	4999725	CompoundStatement		2:23:24:24	4999717	1					
ANR	4999726	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_owner_euid() called when OwnerIds not inited!\\n"" )"	1479:2:37354:37433	4999717	0	True				
ANR	4999727	CallExpression	"dprintf ( D_ALWAYS , ""set_owner_euid() called when OwnerIds not inited!\\n"" )"		4999717	0					
ANR	4999728	Callee	dprintf		4999717	0					
ANR	4999729	Identifier	dprintf		4999717	0					
ANR	4999730	ArgumentList	D_ALWAYS		4999717	1					
ANR	4999731	Argument	D_ALWAYS		4999717	0					
ANR	4999732	Identifier	D_ALWAYS		4999717	0					
ANR	4999733	Argument	"""set_owner_euid() called when OwnerIds not inited!\\n"""		4999717	1					
ANR	4999734	PrimaryExpression	"""set_owner_euid() called when OwnerIds not inited!\\n"""		4999717	0					
ANR	4999735	ReturnStatement	return - 1 ;	1481:2:37437:37446	4999717	1	True				
ANR	4999736	UnaryOperationExpression	- 1		4999717	0					
ANR	4999737	UnaryOperator	-		4999717	0					
ANR	4999738	PrimaryExpression	1		4999717	1					
ANR	4999739	ReturnStatement	return SET_EFFECTIVE_UID ( OwnerUid ) ;	1483:1:37452:37486	4999717	1	True				
ANR	4999740	CallExpression	SET_EFFECTIVE_UID ( OwnerUid )		4999717	0					
ANR	4999741	Callee	SET_EFFECTIVE_UID		4999717	0					
ANR	4999742	Identifier	SET_EFFECTIVE_UID		4999717	0					
ANR	4999743	ArgumentList	OwnerUid		4999717	1					
ANR	4999744	Argument	OwnerUid		4999717	0					
ANR	4999745	Identifier	OwnerUid		4999717	0					
ANR	4999746	ReturnType	int		4999717	1					
ANR	4999747	Identifier	set_owner_euid		4999717	2					
ANR	4999748	ParameterList			4999717	3					
ANR	4999749	CFGEntryNode	ENTRY		4999717		True				
ANR	4999750	CFGExitNode	EXIT		4999717		True				
ANR	4999751	Symbol	OwnerIdsInited		4999717						
ANR	4999752	Symbol	OwnerUid		4999717						
ANR	4999753	Symbol	D_ALWAYS		4999717						
ANR	4999754	Symbol	SET_EFFECTIVE_UID		4999717						
ANR	4999755	Function	set_owner_egid	1487:0:37492:38296							
ANR	4999756	FunctionDef	set_owner_egid ()		4999755	0					
ANR	4999757	CompoundStatement		1489:0:37513:38296	4999755	0					
ANR	4999758	IfStatement	if ( ! OwnerIdsInited )		4999755	0					
ANR	4999759	Condition	! OwnerIdsInited	1490:5:37520:37534	4999755	0	True				
ANR	4999760	UnaryOperationExpression	! OwnerIdsInited		4999755	0					
ANR	4999761	UnaryOperator	!		4999755	0					
ANR	4999762	Identifier	OwnerIdsInited		4999755	1					
ANR	4999763	CompoundStatement		2:23:24:24	4999755	1					
ANR	4999764	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_owner_egid() called when OwnerIds not inited!\\n"" )"	1491:2:37542:37621	4999755	0	True				
ANR	4999765	CallExpression	"dprintf ( D_ALWAYS , ""set_owner_egid() called when OwnerIds not inited!\\n"" )"		4999755	0					
ANR	4999766	Callee	dprintf		4999755	0					
ANR	4999767	Identifier	dprintf		4999755	0					
ANR	4999768	ArgumentList	D_ALWAYS		4999755	1					
ANR	4999769	Argument	D_ALWAYS		4999755	0					
ANR	4999770	Identifier	D_ALWAYS		4999755	0					
ANR	4999771	Argument	"""set_owner_egid() called when OwnerIds not inited!\\n"""		4999755	1					
ANR	4999772	PrimaryExpression	"""set_owner_egid() called when OwnerIds not inited!\\n"""		4999755	0					
ANR	4999773	ReturnStatement	return - 1 ;	1493:2:37625:37634	4999755	1	True				
ANR	4999774	UnaryOperationExpression	- 1		4999755	0					
ANR	4999775	UnaryOperator	-		4999755	0					
ANR	4999776	PrimaryExpression	1		4999755	1					
ANR	4999777	IfStatement	if ( OwnerName )		4999755	1					
ANR	4999778	Condition	OwnerName	1503:5:38034:38042	4999755	0	True				
ANR	4999779	Identifier	OwnerName		4999755	0					
ANR	4999780	CompoundStatement		15:17:532:532	4999755	1					
ANR	4999781	ExpressionStatement	errno = 0	1504:2:38050:38059	4999755	0	True				
ANR	4999782	AssignmentExpression	errno = 0		4999755	0		=			
ANR	4999783	Identifier	errno		4999755	0					
ANR	4999784	PrimaryExpression	0		4999755	1					
ANR	4999785	IfStatement	if ( ! ( pcache ( ) -> init_groups ( OwnerName ) ) )		4999755	1					
ANR	4999786	Condition	! ( pcache ( ) -> init_groups ( OwnerName ) )	1505:5:38066:38100	4999755	0	True				
ANR	4999787	UnaryOperationExpression	! ( pcache ( ) -> init_groups ( OwnerName ) )		4999755	0					
ANR	4999788	UnaryOperator	!		4999755	0					
ANR	4999789	CallExpression	pcache ( ) -> init_groups ( OwnerName )		4999755	1					
ANR	4999790	Callee	pcache ( ) -> init_groups		4999755	0					
ANR	4999791	PtrMemberAccess	pcache ( ) -> init_groups		4999755	0					
ANR	4999792	CallExpression	pcache ( )		4999755	0					
ANR	4999793	Callee	pcache		4999755	0					
ANR	4999794	Identifier	pcache		4999755	0					
ANR	4999795	ArgumentList			4999755	1					
ANR	4999796	Identifier	init_groups		4999755	1					
ANR	4999797	ArgumentList	OwnerName		4999755	1					
ANR	4999798	Argument	OwnerName		4999755	0					
ANR	4999799	Identifier	OwnerName		4999755	0					
ANR	4999800	CompoundStatement		17:43:590:590	4999755	1					
ANR	4999801	Statement	dprintf	1506:3:38109:38115	4999755	0	True				
ANR	4999802	Statement	(	1506:10:38116:38116	4999755	1	True				
ANR	4999803	Statement	D_ALWAYS	1506:12:38118:38125	4999755	2	True				
ANR	4999804	Statement	","	1506:20:38126:38126	4999755	3	True				
ANR	4999805	Statement	"""set_owner_egid - ERROR: initgroups(%s, %d) failed, """	1507:6:38135:38187	4999755	4	True				
ANR	4999806	Statement	"""errno: %s\\n"""	1508:6:38195:38207	4999755	5	True				
ANR	4999807	Statement	","	1508:19:38208:38208	4999755	6	True				
ANR	4999808	Statement	OwnerName	1508:21:38210:38218	4999755	7	True				
ANR	4999809	Statement	","	1508:30:38219:38219	4999755	8	True				
ANR	4999810	Statement	OwnerGid	1508:32:38221:38228	4999755	9	True				
ANR	4999811	Statement	","	1508:40:38229:38229	4999755	10	True				
ANR	4999812	Statement	strerror	1508:42:38231:38238	4999755	11	True				
ANR	4999813	Statement	(	1508:50:38239:38239	4999755	12	True				
ANR	4999814	Statement	errno	1508:51:38240:38244	4999755	13	True				
ANR	4999815	Statement	)	1508:56:38245:38245	4999755	14	True				
ANR	4999816	Statement	)	1508:58:38247:38247	4999755	15	True				
ANR	4999817	ExpressionStatement		1508:59:38248:38248	4999755	16	True				
ANR	4999818	ReturnStatement	return SET_EFFECTIVE_GID ( UserGid ) ;	1511:1:38261:38294	4999755	2	True				
ANR	4999819	CallExpression	SET_EFFECTIVE_GID ( UserGid )		4999755	0					
ANR	4999820	Callee	SET_EFFECTIVE_GID		4999755	0					
ANR	4999821	Identifier	SET_EFFECTIVE_GID		4999755	0					
ANR	4999822	ArgumentList	UserGid		4999755	1					
ANR	4999823	Argument	UserGid		4999755	0					
ANR	4999824	Identifier	UserGid		4999755	0					
ANR	4999825	ReturnType	int		4999755	1					
ANR	4999826	Identifier	set_owner_egid		4999755	2					
ANR	4999827	ParameterList			4999755	3					
ANR	4999828	CFGEntryNode	ENTRY		4999755		True				
ANR	4999829	CFGExitNode	EXIT		4999755		True				
ANR	4999830	Symbol	OwnerIdsInited		4999755						
ANR	4999831	Symbol	* pcache		4999755						
ANR	4999832	Symbol	OwnerName		4999755						
ANR	4999833	Symbol	errno		4999755						
ANR	4999834	Symbol	UserGid		4999755						
ANR	4999835	Symbol	D_ALWAYS		4999755						
ANR	4999836	Symbol	pcache ( ) -> init_groups		4999755						
ANR	4999837	Symbol	SET_EFFECTIVE_GID		4999755						
ANR	4999838	Symbol	pcache		4999755						
ANR	4999839	Function	set_condor_ruid	1515:0:38300:38408							
ANR	4999840	FunctionDef	set_condor_ruid ()		4999839	0					
ANR	4999841	CompoundStatement		1517:0:38322:38408	4999839	0					
ANR	4999842	IfStatement	if ( ! CondorIdsInited )		4999839	0					
ANR	4999843	Condition	! CondorIdsInited	1518:5:38329:38344	4999839	0	True				
ANR	4999844	UnaryOperationExpression	! CondorIdsInited		4999839	0					
ANR	4999845	UnaryOperator	!		4999839	0					
ANR	4999846	Identifier	CondorIdsInited		4999839	1					
ANR	4999847	CompoundStatement		2:24:25:25	4999839	1					
ANR	4999848	ExpressionStatement	init_condor_ids ( )	1519:2:38352:38369	4999839	0	True				
ANR	4999849	CallExpression	init_condor_ids ( )		4999839	0					
ANR	4999850	Callee	init_condor_ids		4999839	0					
ANR	4999851	Identifier	init_condor_ids		4999839	0					
ANR	4999852	ArgumentList			4999839	1					
ANR	4999853	ReturnStatement	return SET_REAL_UID ( CondorUid ) ;	1522:1:38376:38406	4999839	1	True				
ANR	4999854	CallExpression	SET_REAL_UID ( CondorUid )		4999839	0					
ANR	4999855	Callee	SET_REAL_UID		4999839	0					
ANR	4999856	Identifier	SET_REAL_UID		4999839	0					
ANR	4999857	ArgumentList	CondorUid		4999839	1					
ANR	4999858	Argument	CondorUid		4999839	0					
ANR	4999859	Identifier	CondorUid		4999839	0					
ANR	4999860	ReturnType	int		4999839	1					
ANR	4999861	Identifier	set_condor_ruid		4999839	2					
ANR	4999862	ParameterList			4999839	3					
ANR	4999863	CFGEntryNode	ENTRY		4999839		True				
ANR	4999864	CFGExitNode	EXIT		4999839		True				
ANR	4999865	Symbol	SET_REAL_UID		4999839						
ANR	4999866	Symbol	CondorUid		4999839						
ANR	4999867	Symbol	CondorIdsInited		4999839						
ANR	4999868	Function	set_condor_rgid	1526:0:38412:38774							
ANR	4999869	FunctionDef	set_condor_rgid ()		4999868	0					
ANR	4999870	CompoundStatement		1528:0:38434:38774	4999868	0					
ANR	4999871	IfStatement	if ( ! CondorIdsInited )		4999868	0					
ANR	4999872	Condition	! CondorIdsInited	1529:5:38441:38456	4999868	0	True				
ANR	4999873	UnaryOperationExpression	! CondorIdsInited		4999868	0					
ANR	4999874	UnaryOperator	!		4999868	0					
ANR	4999875	Identifier	CondorIdsInited		4999868	1					
ANR	4999876	CompoundStatement		2:24:25:25	4999868	1					
ANR	4999877	ExpressionStatement	init_condor_ids ( )	1530:2:38464:38481	4999868	0	True				
ANR	4999878	CallExpression	init_condor_ids ( )		4999868	0					
ANR	4999879	Callee	init_condor_ids		4999868	0					
ANR	4999880	Identifier	init_condor_ids		4999868	0					
ANR	4999881	ArgumentList			4999868	1					
ANR	4999882	IfStatement	if ( CondorUserName )		4999868	1					
ANR	4999883	Condition	CondorUserName	1533:5:38492:38505	4999868	0	True				
ANR	4999884	Identifier	CondorUserName		4999868	0					
ANR	4999885	CompoundStatement		6:22:74:74	4999868	1					
ANR	4999886	ExpressionStatement	errno = 0	1534:2:38513:38522	4999868	0	True				
ANR	4999887	AssignmentExpression	errno = 0		4999868	0		=			
ANR	4999888	Identifier	errno		4999868	0					
ANR	4999889	PrimaryExpression	0		4999868	1					
ANR	4999890	IfStatement	if ( ! ( pcache ( ) -> init_groups ( CondorUserName ) ) )		4999868	1					
ANR	4999891	Condition	! ( pcache ( ) -> init_groups ( CondorUserName ) )	1535:5:38529:38568	4999868	0	True				
ANR	4999892	UnaryOperationExpression	! ( pcache ( ) -> init_groups ( CondorUserName ) )		4999868	0					
ANR	4999893	UnaryOperator	!		4999868	0					
ANR	4999894	CallExpression	pcache ( ) -> init_groups ( CondorUserName )		4999868	1					
ANR	4999895	Callee	pcache ( ) -> init_groups		4999868	0					
ANR	4999896	PtrMemberAccess	pcache ( ) -> init_groups		4999868	0					
ANR	4999897	CallExpression	pcache ( )		4999868	0					
ANR	4999898	Callee	pcache		4999868	0					
ANR	4999899	Identifier	pcache		4999868	0					
ANR	4999900	ArgumentList			4999868	1					
ANR	4999901	Identifier	init_groups		4999868	1					
ANR	4999902	ArgumentList	CondorUserName		4999868	1					
ANR	4999903	Argument	CondorUserName		4999868	0					
ANR	4999904	Identifier	CondorUserName		4999868	0					
ANR	4999905	CompoundStatement		8:48:137:137	4999868	1					
ANR	4999906	Statement	dprintf	1536:3:38577:38583	4999868	0	True				
ANR	4999907	Statement	(	1536:10:38584:38584	4999868	1	True				
ANR	4999908	Statement	D_ALWAYS	1536:12:38586:38593	4999868	2	True				
ANR	4999909	Statement	","	1536:20:38594:38594	4999868	3	True				
ANR	4999910	Statement	"""set_condor_rgid - ERROR: initgroups(%s) failed, """	1537:6:38603:38652	4999868	4	True				
ANR	4999911	Statement	"""errno: %s\\n"""	1538:6:38660:38672	4999868	5	True				
ANR	4999912	Statement	","	1538:19:38673:38673	4999868	6	True				
ANR	4999913	Statement	CondorUserName	1538:21:38675:38688	4999868	7	True				
ANR	4999914	Statement	","	1538:35:38689:38689	4999868	8	True				
ANR	4999915	Statement	strerror	1538:37:38691:38698	4999868	9	True				
ANR	4999916	Statement	(	1538:45:38699:38699	4999868	10	True				
ANR	4999917	Statement	errno	1538:46:38700:38704	4999868	11	True				
ANR	4999918	Statement	)	1538:51:38705:38705	4999868	12	True				
ANR	4999919	Statement	)	1538:53:38707:38707	4999868	13	True				
ANR	4999920	ExpressionStatement		1538:54:38708:38708	4999868	14	True				
ANR	4999921	ReturnStatement	return SET_REAL_GID ( CondorGid ) ;	1542:1:38742:38772	4999868	2	True				
ANR	4999922	CallExpression	SET_REAL_GID ( CondorGid )		4999868	0					
ANR	4999923	Callee	SET_REAL_GID		4999868	0					
ANR	4999924	Identifier	SET_REAL_GID		4999868	0					
ANR	4999925	ArgumentList	CondorGid		4999868	1					
ANR	4999926	Argument	CondorGid		4999868	0					
ANR	4999927	Identifier	CondorGid		4999868	0					
ANR	4999928	ReturnType	int		4999868	1					
ANR	4999929	Identifier	set_condor_rgid		4999868	2					
ANR	4999930	ParameterList			4999868	3					
ANR	4999931	CFGEntryNode	ENTRY		4999868		True				
ANR	4999932	CFGExitNode	EXIT		4999868		True				
ANR	4999933	Symbol	* pcache		4999868						
ANR	4999934	Symbol	SET_REAL_GID		4999868						
ANR	4999935	Symbol	errno		4999868						
ANR	4999936	Symbol	CondorGid		4999868						
ANR	4999937	Symbol	CondorUserName		4999868						
ANR	4999938	Symbol	pcache ( ) -> init_groups		4999868						
ANR	4999939	Symbol	pcache		4999868						
ANR	4999940	Symbol	CondorIdsInited		4999868						
ANR	4999941	Function	is_root	1545:0:38777:39047							
ANR	4999942	FunctionDef	is_root ()		4999941	0					
ANR	4999943	CompoundStatement		1547:0:38798:39047	4999941	0					
ANR	4999944	ReturnStatement	return ( ! getuid ( ) || ! geteuid ( ) ) ;	1553:1:39011:39045	4999941	0	True				
ANR	4999945	OrExpression	! getuid ( ) || ! geteuid ( )		4999941	0		||			
ANR	4999946	UnaryOperationExpression	! getuid ( )		4999941	0					
ANR	4999947	UnaryOperator	!		4999941	0					
ANR	4999948	CallExpression	getuid ( )		4999941	1					
ANR	4999949	Callee	getuid		4999941	0					
ANR	4999950	Identifier	getuid		4999941	0					
ANR	4999951	ArgumentList			4999941	1					
ANR	4999952	UnaryOperationExpression	! geteuid ( )		4999941	1					
ANR	4999953	UnaryOperator	!		4999941	0					
ANR	4999954	CallExpression	geteuid ( )		4999941	1					
ANR	4999955	Callee	geteuid		4999941	0					
ANR	4999956	Identifier	geteuid		4999941	0					
ANR	4999957	ArgumentList			4999941	1					
ANR	4999958	ReturnType	int		4999941	1					
ANR	4999959	Identifier	is_root		4999941	2					
ANR	4999960	ParameterList			4999941	3					
ANR	4999961	CFGEntryNode	ENTRY		4999941		True				
ANR	4999962	CFGExitNode	EXIT		4999941		True				
ANR	4999963	Symbol	getuid		4999941						
ANR	4999964	Symbol	geteuid		4999941						
ANR	4999965	Function	get_real_username	1557:0:39051:39333							
ANR	4999966	FunctionDef	get_real_username ()		4999965	0					
ANR	4999967	CompoundStatement		1559:0:39089:39333	4999965	0					
ANR	4999968	IfStatement	if ( ! RealUserName )		4999965	0					
ANR	4999969	Condition	! RealUserName	1560:5:39096:39109	4999965	0	True				
ANR	4999970	UnaryOperationExpression	! RealUserName		4999965	0					
ANR	4999971	UnaryOperator	!		4999965	0					
ANR	4999972	Identifier	RealUserName		4999965	1					
ANR	4999973	CompoundStatement		3:2:27:50	4999965	1					
ANR	4999974	IdentifierDeclStatement	uid_t my_uid = getuid ( ) ;	1561:2:39117:39140	4999965	0	True				
ANR	4999975	IdentifierDecl	my_uid = getuid ( )		4999965	0					
ANR	4999976	IdentifierDeclType	uid_t		4999965	0					
ANR	4999977	Identifier	my_uid		4999965	1					
ANR	4999978	AssignmentExpression	my_uid = getuid ( )		4999965	2		=			
ANR	4999979	Identifier	my_uid		4999965	0					
ANR	4999980	CallExpression	getuid ( )		4999965	1					
ANR	4999981	Callee	getuid		4999965	0					
ANR	4999982	Identifier	getuid		4999965	0					
ANR	4999983	ArgumentList			4999965	1					
ANR	4999984	IfStatement	"if ( ! ( pcache ( ) -> get_user_name ( my_uid , ( char * & ) RealUserName ) ) )"		4999965	1					
ANR	4999985	Condition	"! ( pcache ( ) -> get_user_name ( my_uid , ( char * & ) RealUserName ) )"	1562:7:39149:39206	4999965	0	True				
ANR	4999986	UnaryOperationExpression	"! ( pcache ( ) -> get_user_name ( my_uid , ( char * & ) RealUserName ) )"		4999965	0					
ANR	4999987	UnaryOperator	!		4999965	0					
ANR	4999988	CallExpression	"pcache ( ) -> get_user_name ( my_uid , ( char * & ) RealUserName )"		4999965	1					
ANR	4999989	Callee	pcache ( ) -> get_user_name		4999965	0					
ANR	4999990	PtrMemberAccess	pcache ( ) -> get_user_name		4999965	0					
ANR	4999991	CallExpression	pcache ( )		4999965	0					
ANR	4999992	Callee	pcache		4999965	0					
ANR	4999993	Identifier	pcache		4999965	0					
ANR	4999994	ArgumentList			4999965	1					
ANR	4999995	Identifier	get_user_name		4999965	1					
ANR	4999996	ArgumentList	my_uid		4999965	1					
ANR	4999997	Argument	my_uid		4999965	0					
ANR	4999998	Identifier	my_uid		4999965	0					
ANR	4999999	Argument	( char * & ) RealUserName		4999965	1					
ANR	5000000	CastExpression	( char * & ) RealUserName		4999965	0					
ANR	5000001	CastTarget	char * &		4999965	0					
ANR	5000002	Identifier	RealUserName		4999965	1					
ANR	5000003	CompoundStatement		5:3:125:137	4999965	1					
ANR	5000004	IdentifierDeclStatement	char buf [ 64 ] ;	1563:3:39215:39227	4999965	0	True				
ANR	5000005	IdentifierDecl	buf [ 64 ]		4999965	0					
ANR	5000006	IdentifierDeclType	char [ 64 ]		4999965	0					
ANR	5000007	Identifier	buf		4999965	1					
ANR	5000008	PrimaryExpression	64		4999965	2					
ANR	5000009	ExpressionStatement	"sprintf ( buf , ""uid %d"" , ( int ) my_uid )"	1564:3:39232:39269	4999965	1	True				
ANR	5000010	CallExpression	"sprintf ( buf , ""uid %d"" , ( int ) my_uid )"		4999965	0					
ANR	5000011	Callee	sprintf		4999965	0					
ANR	5000012	Identifier	sprintf		4999965	0					
ANR	5000013	ArgumentList	buf		4999965	1					
ANR	5000014	Argument	buf		4999965	0					
ANR	5000015	Identifier	buf		4999965	0					
ANR	5000016	Argument	"""uid %d"""		4999965	1					
ANR	5000017	PrimaryExpression	"""uid %d"""		4999965	0					
ANR	5000018	Argument	( int ) my_uid		4999965	2					
ANR	5000019	CastExpression	( int ) my_uid		4999965	0					
ANR	5000020	CastTarget	int		4999965	0					
ANR	5000021	Identifier	my_uid		4999965	1					
ANR	5000022	ExpressionStatement	RealUserName = strdup ( buf )	1565:3:39274:39302	4999965	2	True				
ANR	5000023	AssignmentExpression	RealUserName = strdup ( buf )		4999965	0		=			
ANR	5000024	Identifier	RealUserName		4999965	0					
ANR	5000025	CallExpression	strdup ( buf )		4999965	1					
ANR	5000026	Callee	strdup		4999965	0					
ANR	5000027	Identifier	strdup		4999965	0					
ANR	5000028	ArgumentList	buf		4999965	1					
ANR	5000029	Argument	buf		4999965	0					
ANR	5000030	Identifier	buf		4999965	0					
ANR	5000031	ReturnStatement	return RealUserName ;	1568:1:39312:39331	4999965	1	True				
ANR	5000032	Identifier	RealUserName		4999965	0					
ANR	5000033	ReturnType	const char *		4999965	1					
ANR	5000034	Identifier	get_real_username		4999965	2					
ANR	5000035	ParameterList			4999965	3					
ANR	5000036	CFGEntryNode	ENTRY		4999965		True				
ANR	5000037	CFGExitNode	EXIT		4999965		True				
ANR	5000038	Symbol	* pcache		4999965						
ANR	5000039	Symbol	getuid		4999965						
ANR	5000040	Symbol	buf		4999965						
ANR	5000041	Symbol	my_uid		4999965						
ANR	5000042	Symbol	strdup		4999965						
ANR	5000043	Symbol	RealUserName		4999965						
ANR	5000044	Symbol	pcache		4999965						
ANR	5000045	Symbol	pcache ( ) -> get_user_name		4999965						
ANR	5000046	Function	get_user_loginname	1572:0:39409:39462							
ANR	5000047	FunctionDef	get_user_loginname ()		5000046	0					
ANR	5000048	CompoundStatement		1573:21:39442:39462	5000046	0					
ANR	5000049	ReturnStatement	return UserName ;	1574:1:39445:39460	5000046	0	True				
ANR	5000050	Identifier	UserName		5000046	0					
ANR	5000051	ReturnType	const char *		5000046	1					
ANR	5000052	Identifier	get_user_loginname		5000046	2					
ANR	5000053	ParameterList			5000046	3					
ANR	5000054	CFGEntryNode	ENTRY		5000046		True				
ANR	5000055	CFGExitNode	EXIT		5000046		True				
ANR	5000056	Symbol	UserName		5000046						
ANR	5000057	Function	priv_identifier	1579:0:39499:41216							
ANR	5000058	FunctionDef	priv_identifier (priv_state s)		5000057	0					
ANR	5000059	CompoundStatement		1581:0:39543:41216	5000057	0					
ANR	5000060	Statement	static	1582:1:39546:39551	5000057	0	True				
ANR	5000061	IdentifierDeclStatement	char id [ 256 ] ;	1582:8:39553:39565	5000057	1	True				
ANR	5000062	IdentifierDecl	id [ 256 ]		5000057	0					
ANR	5000063	IdentifierDeclType	char [ 256 ]		5000057	0					
ANR	5000064	Identifier	id		5000057	1					
ANR	5000065	PrimaryExpression	256		5000057	2					
ANR	5000066	IdentifierDeclStatement	int id_sz = 256 ;	1583:1:39568:39583	5000057	2	True				
ANR	5000067	IdentifierDecl	id_sz = 256		5000057	0					
ANR	5000068	IdentifierDeclType	int		5000057	0					
ANR	5000069	Identifier	id_sz		5000057	1					
ANR	5000070	AssignmentExpression	id_sz = 256		5000057	2		=			
ANR	5000071	Identifier	id_sz		5000057	0					
ANR	5000072	PrimaryExpression	256		5000057	1					
ANR	5000073	SwitchStatement	switch ( s )		5000057	3					
ANR	5000074	Condition	s	1585:9:39620:39620	5000057	0	True				
ANR	5000075	Identifier	s		5000057	0					
ANR	5000076	CompoundStatement		5:13:80:80	5000057	1					
ANR	5000077	Label	case PRIV_UNKNOWN :	1587:1:39628:39645	5000057	0	True				
ANR	5000078	Identifier	PRIV_UNKNOWN		5000057	0					
ANR	5000079	ExpressionStatement	"snprintf ( id , id_sz , ""unknown user"" )"	1588:2:39649:39686	5000057	1	True				
ANR	5000080	CallExpression	"snprintf ( id , id_sz , ""unknown user"" )"		5000057	0					
ANR	5000081	Callee	snprintf		5000057	0					
ANR	5000082	Identifier	snprintf		5000057	0					
ANR	5000083	ArgumentList	id		5000057	1					
ANR	5000084	Argument	id		5000057	0					
ANR	5000085	Identifier	id		5000057	0					
ANR	5000086	Argument	id_sz		5000057	1					
ANR	5000087	Identifier	id_sz		5000057	0					
ANR	5000088	Argument	"""unknown user"""		5000057	2					
ANR	5000089	PrimaryExpression	"""unknown user"""		5000057	0					
ANR	5000090	BreakStatement	break ;	1589:2:39690:39695	5000057	2	True				
ANR	5000091	Label	case PRIV_FILE_OWNER :	1591:1:39699:39719	5000057	3	True				
ANR	5000092	Identifier	PRIV_FILE_OWNER		5000057	0					
ANR	5000093	IfStatement	if ( ! OwnerIdsInited )		5000057	4					
ANR	5000094	Condition	! OwnerIdsInited	1592:6:39727:39742	5000057	0	True				
ANR	5000095	UnaryOperationExpression	! OwnerIdsInited		5000057	0					
ANR	5000096	UnaryOperator	!		5000057	0					
ANR	5000097	Identifier	OwnerIdsInited		5000057	1					
ANR	5000098	CompoundStatement		12:25:202:202	5000057	1					
ANR	5000099	IfStatement	if ( ! can_switch_ids ( ) )		5000057	0					
ANR	5000100	Condition	! can_switch_ids ( )	1593:7:39755:39771	5000057	0	True				
ANR	5000101	UnaryOperationExpression	! can_switch_ids ( )		5000057	0					
ANR	5000102	UnaryOperator	!		5000057	0					
ANR	5000103	CallExpression	can_switch_ids ( )		5000057	1					
ANR	5000104	Callee	can_switch_ids		5000057	0					
ANR	5000105	Identifier	can_switch_ids		5000057	0					
ANR	5000106	ArgumentList			5000057	1					
ANR	5000107	CompoundStatement		13:27:231:231	5000057	1					
ANR	5000108	ReturnStatement	return priv_identifier ( PRIV_CONDOR ) ;	1594:4:39781:39818	5000057	0	True				
ANR	5000109	CallExpression	priv_identifier ( PRIV_CONDOR )		5000057	0					
ANR	5000110	Callee	priv_identifier		5000057	0					
ANR	5000111	Identifier	priv_identifier		5000057	0					
ANR	5000112	ArgumentList	PRIV_CONDOR		5000057	1					
ANR	5000113	Argument	PRIV_CONDOR		5000057	0					
ANR	5000114	Identifier	PRIV_CONDOR		5000057	0					
ANR	5000115	Statement	EXCEPT	1596:3:39828:39833	5000057	1	True				
ANR	5000116	Statement	(	1596:9:39834:39834	5000057	2	True				
ANR	5000117	Statement	"""Programmer Error: priv_identifier() called for """	1596:11:39836:39884	5000057	3	True				
ANR	5000118	Statement	"""PRIV_FILE_OWNER, but owner ids are not initialized"""	1597:5:39891:39942	5000057	4	True				
ANR	5000119	Statement	)	1597:58:39944:39944	5000057	5	True				
ANR	5000120	ExpressionStatement		1597:59:39945:39945	5000057	6	True				
ANR	5000121	Statement	EXCEPT	1600:2:39966:39971	5000057	5	True				
ANR	5000122	Statement	(	1600:8:39972:39972	5000057	6	True				
ANR	5000123	Statement	"""Programmer Error: priv_identifier() called for """	1600:10:39974:40022	5000057	7	True				
ANR	5000124	Statement	"""PRIV_FILE_OWNER, on WIN32"""	1601:4:40028:40054	5000057	8	True				
ANR	5000125	Statement	)	1601:32:40056:40056	5000057	9	True				
ANR	5000126	ExpressionStatement		1601:33:40057:40057	5000057	10	True				
ANR	5000127	BreakStatement	break ;	1606:2:40187:40192	5000057	11	True				
ANR	5000128	Label	case PRIV_USER :	1608:1:40196:40210	5000057	12	True				
ANR	5000129	Identifier	PRIV_USER		5000057	0					
ANR	5000130	Label	case PRIV_USER_FINAL :	1609:1:40213:40233	5000057	13	True				
ANR	5000131	Identifier	PRIV_USER_FINAL		5000057	0					
ANR	5000132	IfStatement	if ( ! UserIdsInited )		5000057	14					
ANR	5000133	Condition	! UserIdsInited	1610:6:40241:40255	5000057	0	True				
ANR	5000134	UnaryOperationExpression	! UserIdsInited		5000057	0					
ANR	5000135	UnaryOperator	!		5000057	0					
ANR	5000136	Identifier	UserIdsInited		5000057	1					
ANR	5000137	CompoundStatement		30:24:715:715	5000057	1					
ANR	5000138	IfStatement	if ( ! can_switch_ids ( ) )		5000057	0					
ANR	5000139	Condition	! can_switch_ids ( )	1611:7:40268:40284	5000057	0	True				
ANR	5000140	UnaryOperationExpression	! can_switch_ids ( )		5000057	0					
ANR	5000141	UnaryOperator	!		5000057	0					
ANR	5000142	CallExpression	can_switch_ids ( )		5000057	1					
ANR	5000143	Callee	can_switch_ids		5000057	0					
ANR	5000144	Identifier	can_switch_ids		5000057	0					
ANR	5000145	ArgumentList			5000057	1					
ANR	5000146	CompoundStatement		31:27:744:744	5000057	1					
ANR	5000147	ReturnStatement	return priv_identifier ( PRIV_CONDOR ) ;	1612:4:40294:40331	5000057	0	True				
ANR	5000148	CallExpression	priv_identifier ( PRIV_CONDOR )		5000057	0					
ANR	5000149	Callee	priv_identifier		5000057	0					
ANR	5000150	Identifier	priv_identifier		5000057	0					
ANR	5000151	ArgumentList	PRIV_CONDOR		5000057	1					
ANR	5000152	Argument	PRIV_CONDOR		5000057	0					
ANR	5000153	Identifier	PRIV_CONDOR		5000057	0					
ANR	5000154	Statement	EXCEPT	1614:3:40341:40346	5000057	1	True				
ANR	5000155	Statement	(	1614:9:40347:40347	5000057	2	True				
ANR	5000156	Statement	"""Programmer Error: priv_identifier() called for """	1614:11:40349:40397	5000057	3	True				
ANR	5000157	Statement	"""%s, but user ids are not initialized"""	1615:5:40404:40441	5000057	4	True				
ANR	5000158	Statement	","	1615:43:40442:40442	5000057	5	True				
ANR	5000159	Statement	priv_to_string	1616:5:40449:40462	5000057	6	True				
ANR	5000160	Statement	(	1616:19:40463:40463	5000057	7	True				
ANR	5000161	Statement	s	1616:20:40464:40464	5000057	8	True				
ANR	5000162	Statement	)	1616:21:40465:40465	5000057	9	True				
ANR	5000163	Statement	)	1616:23:40467:40467	5000057	10	True				
ANR	5000164	ExpressionStatement		1616:24:40468:40468	5000057	11	True				
ANR	5000165	ExpressionStatement	"snprintf ( id , id_sz , ""%s@%s"" , UserLoginName , UserDomainName )"	1619:2:40489:40550	5000057	15	True				
ANR	5000166	CallExpression	"snprintf ( id , id_sz , ""%s@%s"" , UserLoginName , UserDomainName )"		5000057	0					
ANR	5000167	Callee	snprintf		5000057	0					
ANR	5000168	Identifier	snprintf		5000057	0					
ANR	5000169	ArgumentList	id		5000057	1					
ANR	5000170	Argument	id		5000057	0					
ANR	5000171	Identifier	id		5000057	0					
ANR	5000172	Argument	id_sz		5000057	1					
ANR	5000173	Identifier	id_sz		5000057	0					
ANR	5000174	Argument	"""%s@%s"""		5000057	2					
ANR	5000175	PrimaryExpression	"""%s@%s"""		5000057	0					
ANR	5000176	Argument	UserLoginName		5000057	3					
ANR	5000177	Identifier	UserLoginName		5000057	0					
ANR	5000178	Argument	UserDomainName		5000057	4					
ANR	5000179	Identifier	UserDomainName		5000057	0					
ANR	5000180	BreakStatement	break ;	1624:2:40671:40676	5000057	16	True				
ANR	5000181	Label	case PRIV_ROOT :	1627:1:40693:40707	5000057	17	True				
ANR	5000182	Identifier	PRIV_ROOT		5000057	0					
ANR	5000183	Label	case PRIV_CONDOR :	1628:1:40710:40726	5000057	18	True				
ANR	5000184	Identifier	PRIV_CONDOR		5000057	0					
ANR	5000185	ExpressionStatement	"snprintf ( id , id_sz , ""SuperUser (system)"" )"	1629:2:40730:40773	5000057	19	True				
ANR	5000186	CallExpression	"snprintf ( id , id_sz , ""SuperUser (system)"" )"		5000057	0					
ANR	5000187	Callee	snprintf		5000057	0					
ANR	5000188	Identifier	snprintf		5000057	0					
ANR	5000189	ArgumentList	id		5000057	1					
ANR	5000190	Argument	id		5000057	0					
ANR	5000191	Identifier	id		5000057	0					
ANR	5000192	Argument	id_sz		5000057	1					
ANR	5000193	Identifier	id_sz		5000057	0					
ANR	5000194	Argument	"""SuperUser (system)"""		5000057	2					
ANR	5000195	PrimaryExpression	"""SuperUser (system)"""		5000057	0					
ANR	5000196	BreakStatement	break ;	1630:2:40777:40782	5000057	20	True				
ANR	5000197	Label	default :	1643:1:41072:41079	5000057	21	True				
ANR	5000198	Identifier	default		5000057	0					
ANR	5000199	ExpressionStatement	"EXCEPT ( ""Programmer error: unknown state (%d) in priv_identifier"" , ( int ) s )"	1644:2:41083:41163	5000057	22	True				
ANR	5000200	CallExpression	"EXCEPT ( ""Programmer error: unknown state (%d) in priv_identifier"" , ( int ) s )"		5000057	0					
ANR	5000201	Callee	EXCEPT		5000057	0					
ANR	5000202	Identifier	EXCEPT		5000057	0					
ANR	5000203	ArgumentList	"""Programmer error: unknown state (%d) in priv_identifier"""		5000057	1					
ANR	5000204	Argument	"""Programmer error: unknown state (%d) in priv_identifier"""		5000057	0					
ANR	5000205	PrimaryExpression	"""Programmer error: unknown state (%d) in priv_identifier"""		5000057	0					
ANR	5000206	Argument	( int ) s		5000057	1					
ANR	5000207	CastExpression	( int ) s		5000057	0					
ANR	5000208	CastTarget	int		5000057	0					
ANR	5000209	Identifier	s		5000057	1					
ANR	5000210	ReturnStatement	return ( const char * ) id ;	1649:1:41191:41214	5000057	4	True				
ANR	5000211	CastExpression	( const char * ) id		5000057	0					
ANR	5000212	CastTarget	const char *		5000057	0					
ANR	5000213	Identifier	id		5000057	1					
ANR	5000214	ReturnType	const char *		5000057	1					
ANR	5000215	Identifier	priv_identifier		5000057	2					
ANR	5000216	ParameterList	priv_state s		5000057	3					
ANR	5000217	Parameter	priv_state s	1580:17:39528:39539	5000057	0	True				
ANR	5000218	ParameterType	priv_state		5000057	0					
ANR	5000219	Identifier	s		5000057	1					
ANR	5000220	CFGEntryNode	ENTRY		5000057		True				
ANR	5000221	CFGExitNode	EXIT		5000057		True				
ANR	5000222	Symbol	OwnerIdsInited		5000057						
ANR	5000223	Symbol	priv_identifier		5000057						
ANR	5000224	Symbol	UserDomainName		5000057						
ANR	5000225	Symbol	s		5000057						
ANR	5000226	Symbol	can_switch_ids		5000057						
ANR	5000227	Symbol	UserIdsInited		5000057						
ANR	5000228	Symbol	id		5000057						
ANR	5000229	Symbol	UserLoginName		5000057						
ANR	5000230	Symbol	PRIV_CONDOR		5000057						
ANR	5000231	Symbol	id_sz		5000057						
