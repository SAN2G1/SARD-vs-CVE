command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1219479	File	data/converged/CVE-2011-4930_htcondor/dcloudgahp_common.cpp								
ANR	1219480	DeclStmt									
ANR	1219481	Decl							pthread_mutex_t	pthread_mutex_t	dcloudprintf_mutex
ANR	1219482	Function	dcloudprintf_internal	10:0:204:583							
ANR	1219483	FunctionDef	"dcloudprintf_internal (const char * function , const char * fmt)"		1219482	0					
ANR	1219484	CompoundStatement		11:0:275:583	1219482	0					
ANR	1219485	IdentifierDeclStatement	va_list va_args ;	12:4:281:296	1219482	0	True				
ANR	1219486	IdentifierDecl	va_args		1219482	0					
ANR	1219487	IdentifierDeclType	va_list		1219482	0					
ANR	1219488	Identifier	va_args		1219482	1					
ANR	1219489	IfStatement	if ( logfp )		1219482	1					
ANR	1219490	Condition	logfp	14:8:307:311	1219482	0	True				
ANR	1219491	Identifier	logfp		1219482	0					
ANR	1219492	CompoundStatement		4:15:38:38	1219482	1					
ANR	1219493	ExpressionStatement	pthread_mutex_lock ( & dcloudprintf_mutex )	15:8:324:363	1219482	0	True				
ANR	1219494	CallExpression	pthread_mutex_lock ( & dcloudprintf_mutex )		1219482	0					
ANR	1219495	Callee	pthread_mutex_lock		1219482	0					
ANR	1219496	Identifier	pthread_mutex_lock		1219482	0					
ANR	1219497	ArgumentList	& dcloudprintf_mutex		1219482	1					
ANR	1219498	Argument	& dcloudprintf_mutex		1219482	0					
ANR	1219499	UnaryOperationExpression	& dcloudprintf_mutex		1219482	0					
ANR	1219500	UnaryOperator	&		1219482	0					
ANR	1219501	Identifier	dcloudprintf_mutex		1219482	1					
ANR	1219502	ExpressionStatement	"fprintf ( logfp , ""%s: "" , function )"	16:8:373:405	1219482	1	True				
ANR	1219503	CallExpression	"fprintf ( logfp , ""%s: "" , function )"		1219482	0					
ANR	1219504	Callee	fprintf		1219482	0					
ANR	1219505	Identifier	fprintf		1219482	0					
ANR	1219506	ArgumentList	logfp		1219482	1					
ANR	1219507	Argument	logfp		1219482	0					
ANR	1219508	Identifier	logfp		1219482	0					
ANR	1219509	Argument	"""%s: """		1219482	1					
ANR	1219510	PrimaryExpression	"""%s: """		1219482	0					
ANR	1219511	Argument	function		1219482	2					
ANR	1219512	Identifier	function		1219482	0					
ANR	1219513	ExpressionStatement	"va_start ( va_args , fmt )"	17:8:415:437	1219482	2	True				
ANR	1219514	CallExpression	"va_start ( va_args , fmt )"		1219482	0					
ANR	1219515	Callee	va_start		1219482	0					
ANR	1219516	Identifier	va_start		1219482	0					
ANR	1219517	ArgumentList	va_args		1219482	1					
ANR	1219518	Argument	va_args		1219482	0					
ANR	1219519	Identifier	va_args		1219482	0					
ANR	1219520	Argument	fmt		1219482	1					
ANR	1219521	Identifier	fmt		1219482	0					
ANR	1219522	ExpressionStatement	"vfprintf ( logfp , fmt , va_args )"	18:8:447:476	1219482	3	True				
ANR	1219523	CallExpression	"vfprintf ( logfp , fmt , va_args )"		1219482	0					
ANR	1219524	Callee	vfprintf		1219482	0					
ANR	1219525	Identifier	vfprintf		1219482	0					
ANR	1219526	ArgumentList	logfp		1219482	1					
ANR	1219527	Argument	logfp		1219482	0					
ANR	1219528	Identifier	logfp		1219482	0					
ANR	1219529	Argument	fmt		1219482	1					
ANR	1219530	Identifier	fmt		1219482	0					
ANR	1219531	Argument	va_args		1219482	2					
ANR	1219532	Identifier	va_args		1219482	0					
ANR	1219533	ExpressionStatement	va_end ( va_args )	19:8:486:501	1219482	4	True				
ANR	1219534	CallExpression	va_end ( va_args )		1219482	0					
ANR	1219535	Callee	va_end		1219482	0					
ANR	1219536	Identifier	va_end		1219482	0					
ANR	1219537	ArgumentList	va_args		1219482	1					
ANR	1219538	Argument	va_args		1219482	0					
ANR	1219539	Identifier	va_args		1219482	0					
ANR	1219540	ExpressionStatement	fflush ( logfp )	20:8:511:524	1219482	5	True				
ANR	1219541	CallExpression	fflush ( logfp )		1219482	0					
ANR	1219542	Callee	fflush		1219482	0					
ANR	1219543	Identifier	fflush		1219482	0					
ANR	1219544	ArgumentList	logfp		1219482	1					
ANR	1219545	Argument	logfp		1219482	0					
ANR	1219546	Identifier	logfp		1219482	0					
ANR	1219547	ExpressionStatement	pthread_mutex_unlock ( & dcloudprintf_mutex )	21:8:534:575	1219482	6	True				
ANR	1219548	CallExpression	pthread_mutex_unlock ( & dcloudprintf_mutex )		1219482	0					
ANR	1219549	Callee	pthread_mutex_unlock		1219482	0					
ANR	1219550	Identifier	pthread_mutex_unlock		1219482	0					
ANR	1219551	ArgumentList	& dcloudprintf_mutex		1219482	1					
ANR	1219552	Argument	& dcloudprintf_mutex		1219482	0					
ANR	1219553	UnaryOperationExpression	& dcloudprintf_mutex		1219482	0					
ANR	1219554	UnaryOperator	&		1219482	0					
ANR	1219555	Identifier	dcloudprintf_mutex		1219482	1					
ANR	1219556	ReturnType	void		1219482	1					
ANR	1219557	Identifier	dcloudprintf_internal		1219482	2					
ANR	1219558	ParameterList	"const char * function , const char * fmt"		1219482	3					
ANR	1219559	Parameter	const char * function	10:27:231:250	1219482	0	True				
ANR	1219560	ParameterType	const char *		1219482	0					
ANR	1219561	Identifier	function		1219482	1					
ANR	1219562	Parameter	const char * fmt	10:49:253:267	1219482	1	True				
ANR	1219563	ParameterType	const char *		1219482	0					
ANR	1219564	Identifier	fmt		1219482	1					
ANR	1219565	CFGEntryNode	ENTRY		1219482		True				
ANR	1219566	CFGExitNode	EXIT		1219482		True				
ANR	1219567	Symbol	& dcloudprintf_mutex		1219482						
ANR	1219568	Symbol	function		1219482						
ANR	1219569	Symbol	logfp		1219482						
ANR	1219570	Symbol	fmt		1219482						
ANR	1219571	Symbol	va_args		1219482						
ANR	1219572	Function	Gahp_Args :: Gahp_Args	25:0:586:661							
ANR	1219573	FunctionDef	Gahp_Args :: Gahp_Args ()		1219572	0					
ANR	1219574	CompoundStatement		26:0:609:661	1219572	0					
ANR	1219575	ExpressionStatement	argv = NULL	27:4:615:626	1219572	0	True				
ANR	1219576	AssignmentExpression	argv = NULL		1219572	0		=			
ANR	1219577	Identifier	argv		1219572	0					
ANR	1219578	Identifier	NULL		1219572	1					
ANR	1219579	ExpressionStatement	argc = 0	28:4:632:640	1219572	1	True				
ANR	1219580	AssignmentExpression	argc = 0		1219572	0		=			
ANR	1219581	Identifier	argc		1219572	0					
ANR	1219582	PrimaryExpression	0		1219572	1					
ANR	1219583	ExpressionStatement	argv_size = 0	29:4:646:659	1219572	2	True				
ANR	1219584	AssignmentExpression	argv_size = 0		1219572	0		=			
ANR	1219585	Identifier	argv_size		1219572	0					
ANR	1219586	PrimaryExpression	0		1219572	1					
ANR	1219587	Identifier	Gahp_Args :: Gahp_Args		1219572	1					
ANR	1219588	ParameterList			1219572	2					
ANR	1219589	CFGEntryNode	ENTRY		1219572		True				
ANR	1219590	CFGExitNode	EXIT		1219572		True				
ANR	1219591	Symbol	argc		1219572						
ANR	1219592	Symbol	argv_size		1219572						
ANR	1219593	Symbol	NULL		1219572						
ANR	1219594	Symbol	argv		1219572						
ANR	1219595	Function	Gahp_Args :: ~Gahp_Args	32:0:664:703							
ANR	1219596	FunctionDef	Gahp_Args :: ~Gahp_Args ()		1219595	0					
ANR	1219597	CompoundStatement		33:0:688:703	1219595	0					
ANR	1219598	ExpressionStatement	reset ( )	34:4:694:701	1219595	0	True				
ANR	1219599	CallExpression	reset ( )		1219595	0					
ANR	1219600	Callee	reset		1219595	0					
ANR	1219601	Identifier	reset		1219595	0					
ANR	1219602	ArgumentList			1219595	1					
ANR	1219603	Identifier	Gahp_Args :: ~Gahp_Args		1219595	1					
ANR	1219604	ParameterList			1219595	2					
ANR	1219605	CFGEntryNode	ENTRY		1219595		True				
ANR	1219606	CFGExitNode	EXIT		1219595		True				
ANR	1219607	Function	Gahp_Args :: reset	40:0:843:1073							
ANR	1219608	FunctionDef	Gahp_Args :: reset ()		1219607	0					
ANR	1219609	CompoundStatement		42:0:867:1073	1219607	0					
ANR	1219610	IdentifierDeclStatement	int i ;	43:4:873:878	1219607	0	True				
ANR	1219611	IdentifierDecl	i		1219607	0					
ANR	1219612	IdentifierDeclType	int		1219607	0					
ANR	1219613	Identifier	i		1219607	1					
ANR	1219614	IfStatement	if ( argv == NULL )		1219607	1					
ANR	1219615	Condition	argv == NULL	45:8:889:900	1219607	0	True				
ANR	1219616	EqualityExpression	argv == NULL		1219607	0		==			
ANR	1219617	Identifier	argv		1219607	0					
ANR	1219618	Identifier	NULL		1219607	1					
ANR	1219619	ReturnStatement	return ;	46:8:911:917	1219607	1	True				
ANR	1219620	ForStatement	for ( i = 0 ; i < argc ; i ++ )		1219607	2					
ANR	1219621	ForInit	i = 0 ;	48:9:929:934	1219607	0	True				
ANR	1219622	AssignmentExpression	i = 0		1219607	0		=			
ANR	1219623	Identifier	i		1219607	0					
ANR	1219624	PrimaryExpression	0		1219607	1					
ANR	1219625	Condition	i < argc	48:16:936:943	1219607	1	True				
ANR	1219626	RelationalExpression	i < argc		1219607	0		<			
ANR	1219627	Identifier	i		1219607	0					
ANR	1219628	Identifier	argc		1219607	1					
ANR	1219629	PostIncDecOperationExpression	i ++	48:26:946:948	1219607	2	True				
ANR	1219630	Identifier	i		1219607	0					
ANR	1219631	IncDec	++		1219607	1					
ANR	1219632	CompoundStatement		7:31:83:83	1219607	3					
ANR	1219633	ExpressionStatement	free ( argv [ i ] )	49:8:961:974	1219607	0	True				
ANR	1219634	CallExpression	free ( argv [ i ] )		1219607	0					
ANR	1219635	Callee	free		1219607	0					
ANR	1219636	Identifier	free		1219607	0					
ANR	1219637	ArgumentList	argv [ i ]		1219607	1					
ANR	1219638	Argument	argv [ i ]		1219607	0					
ANR	1219639	ArrayIndexing	argv [ i ]		1219607	0					
ANR	1219640	Identifier	argv		1219607	0					
ANR	1219641	Identifier	i		1219607	1					
ANR	1219642	ExpressionStatement	argv [ i ] = NULL	50:8:984:998	1219607	1	True				
ANR	1219643	AssignmentExpression	argv [ i ] = NULL		1219607	0		=			
ANR	1219644	ArrayIndexing	argv [ i ]		1219607	0					
ANR	1219645	Identifier	argv		1219607	0					
ANR	1219646	Identifier	i		1219607	1					
ANR	1219647	Identifier	NULL		1219607	1					
ANR	1219648	ExpressionStatement	free ( argv )	53:4:1011:1021	1219607	3	True				
ANR	1219649	CallExpression	free ( argv )		1219607	0					
ANR	1219650	Callee	free		1219607	0					
ANR	1219651	Identifier	free		1219607	0					
ANR	1219652	ArgumentList	argv		1219607	1					
ANR	1219653	Argument	argv		1219607	0					
ANR	1219654	Identifier	argv		1219607	0					
ANR	1219655	ExpressionStatement	argv = NULL	54:4:1027:1038	1219607	4	True				
ANR	1219656	AssignmentExpression	argv = NULL		1219607	0		=			
ANR	1219657	Identifier	argv		1219607	0					
ANR	1219658	Identifier	NULL		1219607	1					
ANR	1219659	ExpressionStatement	argv_size = 0	55:4:1044:1057	1219607	5	True				
ANR	1219660	AssignmentExpression	argv_size = 0		1219607	0		=			
ANR	1219661	Identifier	argv_size		1219607	0					
ANR	1219662	PrimaryExpression	0		1219607	1					
ANR	1219663	ExpressionStatement	argc = 0	56:4:1063:1071	1219607	6	True				
ANR	1219664	AssignmentExpression	argc = 0		1219607	0		=			
ANR	1219665	Identifier	argc		1219607	0					
ANR	1219666	PrimaryExpression	0		1219607	1					
ANR	1219667	ReturnType	void		1219607	1					
ANR	1219668	Identifier	Gahp_Args :: reset		1219607	2					
ANR	1219669	ParameterList			1219607	3					
ANR	1219670	CFGEntryNode	ENTRY		1219607		True				
ANR	1219671	CFGExitNode	EXIT		1219607		True				
ANR	1219672	Symbol	argc		1219607						
ANR	1219673	Symbol	argv_size		1219607						
ANR	1219674	Symbol	NULL		1219607						
ANR	1219675	Symbol	* i		1219607						
ANR	1219676	Symbol	i		1219607						
ANR	1219677	Symbol	* argv		1219607						
ANR	1219678	Symbol	argv		1219607						
ANR	1219679	Function	Gahp_Args :: add_arg	64:0:1349:1596							
ANR	1219680	FunctionDef	Gahp_Args :: add_arg (char * new_arg)		1219679	0					
ANR	1219681	CompoundStatement		66:0:1388:1596	1219679	0					
ANR	1219682	IfStatement	if ( new_arg == NULL )		1219679	0					
ANR	1219683	Condition	new_arg == NULL	67:8:1398:1412	1219679	0	True				
ANR	1219684	EqualityExpression	new_arg == NULL		1219679	0		==			
ANR	1219685	Identifier	new_arg		1219679	0					
ANR	1219686	Identifier	NULL		1219679	1					
ANR	1219687	ReturnStatement	return ;	68:8:1423:1429	1219679	1	True				
ANR	1219688	IfStatement	if ( argc >= argv_size )		1219679	1					
ANR	1219689	Condition	argc >= argv_size	69:8:1439:1455	1219679	0	True				
ANR	1219690	RelationalExpression	argc >= argv_size		1219679	0		>=			
ANR	1219691	Identifier	argc		1219679	0					
ANR	1219692	Identifier	argv_size		1219679	1					
ANR	1219693	CompoundStatement		4:27:69:69	1219679	1					
ANR	1219694	ExpressionStatement	argv_size += 60	70:8:1468:1483	1219679	0	True				
ANR	1219695	AssignmentExpression	argv_size += 60		1219679	0		+=			
ANR	1219696	Identifier	argv_size		1219679	0					
ANR	1219697	PrimaryExpression	60		1219679	1					
ANR	1219698	ExpressionStatement	"argv = ( char * * ) realloc ( argv , argv_size * sizeof ( char * ) )"	71:8:1493:1550	1219679	1	True				
ANR	1219699	AssignmentExpression	"argv = ( char * * ) realloc ( argv , argv_size * sizeof ( char * ) )"		1219679	0		=			
ANR	1219700	Identifier	argv		1219679	0					
ANR	1219701	CastExpression	"( char * * ) realloc ( argv , argv_size * sizeof ( char * ) )"		1219679	1					
ANR	1219702	CastTarget	char * *		1219679	0					
ANR	1219703	CallExpression	"realloc ( argv , argv_size * sizeof ( char * ) )"		1219679	1					
ANR	1219704	Callee	realloc		1219679	0					
ANR	1219705	Identifier	realloc		1219679	0					
ANR	1219706	ArgumentList	argv		1219679	1					
ANR	1219707	Argument	argv		1219679	0					
ANR	1219708	Identifier	argv		1219679	0					
ANR	1219709	Argument	argv_size * sizeof ( char * )		1219679	1					
ANR	1219710	MultiplicativeExpression	argv_size * sizeof ( char * )		1219679	0		*			
ANR	1219711	Identifier	argv_size		1219679	0					
ANR	1219712	SizeofExpression	sizeof ( char * )		1219679	1					
ANR	1219713	Sizeof	sizeof		1219679	0					
ANR	1219714	SizeofOperand	char *		1219679	1					
ANR	1219715	ExpressionStatement	argv [ argc ] = new_arg	73:4:1562:1582	1219679	2	True				
ANR	1219716	AssignmentExpression	argv [ argc ] = new_arg		1219679	0		=			
ANR	1219717	ArrayIndexing	argv [ argc ]		1219679	0					
ANR	1219718	Identifier	argv		1219679	0					
ANR	1219719	Identifier	argc		1219679	1					
ANR	1219720	Identifier	new_arg		1219679	1					
ANR	1219721	ExpressionStatement	argc ++	74:4:1588:1594	1219679	3	True				
ANR	1219722	PostIncDecOperationExpression	argc ++		1219679	0					
ANR	1219723	Identifier	argc		1219679	0					
ANR	1219724	IncDec	++		1219679	1					
ANR	1219725	ReturnType	void		1219679	1					
ANR	1219726	Identifier	Gahp_Args :: add_arg		1219679	2					
ANR	1219727	ParameterList	char * new_arg		1219679	3					
ANR	1219728	Parameter	char * new_arg	65:19:1373:1385	1219679	0	True				
ANR	1219729	ParameterType	char *		1219679	0					
ANR	1219730	Identifier	new_arg		1219679	1					
ANR	1219731	CFGEntryNode	ENTRY		1219679		True				
ANR	1219732	CFGExitNode	EXIT		1219679		True				
ANR	1219733	Symbol	argc		1219679						
ANR	1219734	Symbol	argv_size		1219679						
ANR	1219735	Symbol	NULL		1219679						
ANR	1219736	Symbol	new_arg		1219679						
ANR	1219737	Symbol	* argv		1219679						
ANR	1219738	Symbol	realloc		1219679						
ANR	1219739	Symbol	argv		1219679						
ANR	1219740	Symbol	* argc		1219679						
