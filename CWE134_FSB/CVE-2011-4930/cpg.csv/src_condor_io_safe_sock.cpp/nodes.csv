command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3441362	File	data/converged/CVE-2011-4930_htcondor/src_condor_io_safe_sock.cpp								
ANR	3441363	DeclStmt									
ANR	3441364	Decl							_condorMsgID	_condorMsgID	SafeSock :: _outMsgID
ANR	3441365	DeclStmt									
ANR	3441366	Decl							unsigned long	unsigned long	SafeSock :: _noMsgs
ANR	3441367	DeclStmt									
ANR	3441368	Decl							unsigned long	unsigned long	SafeSock :: _whole
ANR	3441369	DeclStmt									
ANR	3441370	Decl							unsigned long	unsigned long	SafeSock :: _deleted
ANR	3441371	DeclStmt									
ANR	3441372	Decl							unsigned long	unsigned long	SafeSock :: _avgSwhole
ANR	3441373	DeclStmt									
ANR	3441374	Decl							unsigned long	unsigned long	SafeSock :: _avgSdeleted
ANR	3441375	DeclStmt									
ANR	3441376	Decl							int	int	mt_index
ANR	3441377	DeclStmt									
ANR	3441378	Decl							unsigned long	unsigned long [ MT_LEN ]	mt_buffer
ANR	3441379	Function	mt_init	58:0:1915:2048							
ANR	3441380	FunctionDef	mt_init ()		3441379	0					
ANR	3441381	CompoundStatement		58:15:1930:2048	3441379	0					
ANR	3441382	IdentifierDeclStatement	int i ;	59:4:1936:1941	3441379	0	True				
ANR	3441383	IdentifierDecl	i		3441379	0					
ANR	3441384	IdentifierDeclType	int		3441379	0					
ANR	3441385	Identifier	i		3441379	1					
ANR	3441386	ExpressionStatement	srand ( time ( NULL ) )	60:4:1947:1964	3441379	1	True				
ANR	3441387	CallExpression	srand ( time ( NULL ) )		3441379	0					
ANR	3441388	Callee	srand		3441379	0					
ANR	3441389	Identifier	srand		3441379	0					
ANR	3441390	ArgumentList	time ( NULL )		3441379	1					
ANR	3441391	Argument	time ( NULL )		3441379	0					
ANR	3441392	CallExpression	time ( NULL )		3441379	0					
ANR	3441393	Callee	time		3441379	0					
ANR	3441394	Identifier	time		3441379	0					
ANR	3441395	ArgumentList	NULL		3441379	1					
ANR	3441396	Argument	NULL		3441379	0					
ANR	3441397	Identifier	NULL		3441379	0					
ANR	3441398	ForStatement	for ( i = 0 ; i < MT_LEN ; i ++ )		3441379	2					
ANR	3441399	ForInit	i = 0 ;	61:9:1975:1980	3441379	0	True				
ANR	3441400	AssignmentExpression	i = 0		3441379	0		=			
ANR	3441401	Identifier	i		3441379	0					
ANR	3441402	PrimaryExpression	0		3441379	1					
ANR	3441403	Condition	i < MT_LEN	61:16:1982:1991	3441379	1	True				
ANR	3441404	RelationalExpression	i < MT_LEN		3441379	0		<			
ANR	3441405	Identifier	i		3441379	0					
ANR	3441406	Identifier	MT_LEN		3441379	1					
ANR	3441407	PostIncDecOperationExpression	i ++	61:28:1994:1996	3441379	2	True				
ANR	3441408	Identifier	i		3441379	0					
ANR	3441409	IncDec	++		3441379	1					
ANR	3441410	ExpressionStatement	mt_buffer [ i ] = rand ( )	62:8:2007:2028	3441379	3	True				
ANR	3441411	AssignmentExpression	mt_buffer [ i ] = rand ( )		3441379	0		=			
ANR	3441412	ArrayIndexing	mt_buffer [ i ]		3441379	0					
ANR	3441413	Identifier	mt_buffer		3441379	0					
ANR	3441414	Identifier	i		3441379	1					
ANR	3441415	CallExpression	rand ( )		3441379	1					
ANR	3441416	Callee	rand		3441379	0					
ANR	3441417	Identifier	rand		3441379	0					
ANR	3441418	ArgumentList			3441379	1					
ANR	3441419	ExpressionStatement	mt_index = 0	63:4:2034:2046	3441379	3	True				
ANR	3441420	AssignmentExpression	mt_index = 0		3441379	0		=			
ANR	3441421	Identifier	mt_index		3441379	0					
ANR	3441422	PrimaryExpression	0		3441379	1					
ANR	3441423	ReturnType	void		3441379	1					
ANR	3441424	Identifier	mt_init		3441379	2					
ANR	3441425	ParameterList			3441379	3					
ANR	3441426	CFGEntryNode	ENTRY		3441379		True				
ANR	3441427	CFGExitNode	EXIT		3441379		True				
ANR	3441428	Symbol	rand		3441379						
ANR	3441429	Symbol	mt_index		3441379						
ANR	3441430	Symbol	NULL		3441379						
ANR	3441431	Symbol	* i		3441379						
ANR	3441432	Symbol	* mt_buffer		3441379						
ANR	3441433	Symbol	i		3441379						
ANR	3441434	Symbol	time		3441379						
ANR	3441435	Symbol	MT_LEN		3441379						
ANR	3441436	Symbol	mt_buffer		3441379						
ANR	3441437	ClassDef	__static_initializer	66:7:2058:2143							
ANR	3441438	Function	__static_initializer	67:1:2089:2125							
ANR	3441439	FunctionDef	__static_initializer ()		3441438	0					
ANR	3441440	CompoundStatement		67:24:2112:2125	3441438	0					
ANR	3441441	ExpressionStatement	mt_init ( )	67:1:2114:2123	3441438	0	True				
ANR	3441442	CallExpression	mt_init ( )		3441438	0					
ANR	3441443	Callee	mt_init		3441438	0					
ANR	3441444	Identifier	mt_init		3441438	0					
ANR	3441445	ArgumentList			3441438	1					
ANR	3441446	Identifier	__static_initializer		3441438	1					
ANR	3441447	ParameterList			3441438	2					
ANR	3441448	CFGEntryNode	ENTRY		3441438		True				
ANR	3441449	CFGExitNode	EXIT		3441438		True				
ANR	3441450	DeclStmt									
ANR	3441451	Decl							__static_initializer	__static_initializer	__static_init1
ANR	3441452	Function	mt_random	78:0:2434:3174							
ANR	3441453	FunctionDef	mt_random ()		3441452	0					
ANR	3441454	CompoundStatement		78:26:2460:3174	3441452	0					
ANR	3441455	IdentifierDeclStatement	unsigned long * b = mt_buffer ;	79:4:2466:2495	3441452	0	True				
ANR	3441456	IdentifierDecl	* b = mt_buffer		3441452	0					
ANR	3441457	IdentifierDeclType	unsigned long *		3441452	0					
ANR	3441458	Identifier	b		3441452	1					
ANR	3441459	AssignmentExpression	* b = mt_buffer		3441452	2		=			
ANR	3441460	Identifier	mt_buffer		3441452	0					
ANR	3441461	Identifier	mt_buffer		3441452	1					
ANR	3441462	IdentifierDeclStatement	int idx = mt_index ;	80:4:2501:2519	3441452	1	True				
ANR	3441463	IdentifierDecl	idx = mt_index		3441452	0					
ANR	3441464	IdentifierDeclType	int		3441452	0					
ANR	3441465	Identifier	idx		3441452	1					
ANR	3441466	AssignmentExpression	idx = mt_index		3441452	2		=			
ANR	3441467	Identifier	mt_index		3441452	0					
ANR	3441468	Identifier	mt_index		3441452	1					
ANR	3441469	IdentifierDeclStatement	unsigned long s ;	81:4:2525:2540	3441452	2	True				
ANR	3441470	IdentifierDecl	s		3441452	0					
ANR	3441471	IdentifierDeclType	unsigned long		3441452	0					
ANR	3441472	Identifier	s		3441452	1					
ANR	3441473	IdentifierDeclStatement	int i ;	82:4:2546:2551	3441452	3	True				
ANR	3441474	IdentifierDecl	i		3441452	0					
ANR	3441475	IdentifierDeclType	int		3441452	0					
ANR	3441476	Identifier	i		3441452	1					
ANR	3441477	IfStatement	if ( idx == MT_LEN * sizeof ( unsigned long ) )		3441452	4					
ANR	3441478	Condition	idx == MT_LEN * sizeof ( unsigned long )	84:8:2562:2596	3441452	0	True				
ANR	3441479	EqualityExpression	idx == MT_LEN * sizeof ( unsigned long )		3441452	0		==			
ANR	3441480	Identifier	idx		3441452	0					
ANR	3441481	MultiplicativeExpression	MT_LEN * sizeof ( unsigned long )		3441452	1		*			
ANR	3441482	Identifier	MT_LEN		3441452	0					
ANR	3441483	SizeofExpression	sizeof ( unsigned long )		3441452	1					
ANR	3441484	Sizeof	sizeof		3441452	0					
ANR	3441485	SizeofOperand	unsigned long		3441452	1					
ANR	3441486	CompoundStatement		8:4:142:142	3441452	1					
ANR	3441487	ExpressionStatement	idx = 0	86:8:2613:2620	3441452	0	True				
ANR	3441488	AssignmentExpression	idx = 0		3441452	0		=			
ANR	3441489	Identifier	idx		3441452	0					
ANR	3441490	PrimaryExpression	0		3441452	1					
ANR	3441491	ExpressionStatement	i = 0	87:8:2630:2635	3441452	1	True				
ANR	3441492	AssignmentExpression	i = 0		3441452	0		=			
ANR	3441493	Identifier	i		3441452	0					
ANR	3441494	PrimaryExpression	0		3441452	1					
ANR	3441495	ForStatement	for ( ; i < MT_IB ; i ++ )		3441452	2					
ANR	3441496	Condition	i < MT_IB	88:15:2652:2660	3441452	0	True				
ANR	3441497	RelationalExpression	i < MT_IB		3441452	0		<			
ANR	3441498	Identifier	i		3441452	0					
ANR	3441499	Identifier	MT_IB		3441452	1					
ANR	3441500	PostIncDecOperationExpression	i ++	88:26:2663:2665	3441452	1	True				
ANR	3441501	Identifier	i		3441452	0					
ANR	3441502	IncDec	++		3441452	1					
ANR	3441503	CompoundStatement		11:31:207:207	3441452	2					
ANR	3441504	ExpressionStatement	"s = TWIST ( b , i , i + 1 )"	89:12:2682:2702	3441452	0	True				
ANR	3441505	AssignmentExpression	"s = TWIST ( b , i , i + 1 )"		3441452	0		=			
ANR	3441506	Identifier	s		3441452	0					
ANR	3441507	CallExpression	"TWIST ( b , i , i + 1 )"		3441452	1					
ANR	3441508	Callee	TWIST		3441452	0					
ANR	3441509	Identifier	TWIST		3441452	0					
ANR	3441510	ArgumentList	b		3441452	1					
ANR	3441511	Argument	b		3441452	0					
ANR	3441512	Identifier	b		3441452	0					
ANR	3441513	Argument	i		3441452	1					
ANR	3441514	Identifier	i		3441452	0					
ANR	3441515	Argument	i + 1		3441452	2					
ANR	3441516	AdditiveExpression	i + 1		3441452	0		+			
ANR	3441517	Identifier	i		3441452	0					
ANR	3441518	PrimaryExpression	1		3441452	1					
ANR	3441519	ExpressionStatement	b [ i ] = b [ i + MT_IA ] ^ ( s >> 1 ) ^ MAGIC ( s )	90:12:2716:2757	3441452	1	True				
ANR	3441520	AssignmentExpression	b [ i ] = b [ i + MT_IA ] ^ ( s >> 1 ) ^ MAGIC ( s )		3441452	0		=			
ANR	3441521	ArrayIndexing	b [ i ]		3441452	0					
ANR	3441522	Identifier	b		3441452	0					
ANR	3441523	Identifier	i		3441452	1					
ANR	3441524	ExclusiveOrExpression	b [ i + MT_IA ] ^ ( s >> 1 ) ^ MAGIC ( s )		3441452	1		^			
ANR	3441525	ArrayIndexing	b [ i + MT_IA ]		3441452	0					
ANR	3441526	Identifier	b		3441452	0					
ANR	3441527	AdditiveExpression	i + MT_IA		3441452	1		+			
ANR	3441528	Identifier	i		3441452	0					
ANR	3441529	Identifier	MT_IA		3441452	1					
ANR	3441530	ExclusiveOrExpression	( s >> 1 ) ^ MAGIC ( s )		3441452	1		^			
ANR	3441531	ShiftExpression	s >> 1		3441452	0		>>			
ANR	3441532	Identifier	s		3441452	0					
ANR	3441533	PrimaryExpression	1		3441452	1					
ANR	3441534	CallExpression	MAGIC ( s )		3441452	1					
ANR	3441535	Callee	MAGIC		3441452	0					
ANR	3441536	Identifier	MAGIC		3441452	0					
ANR	3441537	ArgumentList	s		3441452	1					
ANR	3441538	Argument	s		3441452	0					
ANR	3441539	Identifier	s		3441452	0					
ANR	3441540	ForStatement	for ( ; i < MT_LEN - 1 ; i ++ )		3441452	3					
ANR	3441541	Condition	i < MT_LEN - 1	92:15:2784:2795	3441452	0	True				
ANR	3441542	RelationalExpression	i < MT_LEN - 1		3441452	0		<			
ANR	3441543	Identifier	i		3441452	0					
ANR	3441544	AdditiveExpression	MT_LEN - 1		3441452	1		-			
ANR	3441545	Identifier	MT_LEN		3441452	0					
ANR	3441546	PrimaryExpression	1		3441452	1					
ANR	3441547	PostIncDecOperationExpression	i ++	92:29:2798:2800	3441452	1	True				
ANR	3441548	Identifier	i		3441452	0					
ANR	3441549	IncDec	++		3441452	1					
ANR	3441550	CompoundStatement		15:34:342:342	3441452	2					
ANR	3441551	ExpressionStatement	"s = TWIST ( b , i , i + 1 )"	93:12:2817:2837	3441452	0	True				
ANR	3441552	AssignmentExpression	"s = TWIST ( b , i , i + 1 )"		3441452	0		=			
ANR	3441553	Identifier	s		3441452	0					
ANR	3441554	CallExpression	"TWIST ( b , i , i + 1 )"		3441452	1					
ANR	3441555	Callee	TWIST		3441452	0					
ANR	3441556	Identifier	TWIST		3441452	0					
ANR	3441557	ArgumentList	b		3441452	1					
ANR	3441558	Argument	b		3441452	0					
ANR	3441559	Identifier	b		3441452	0					
ANR	3441560	Argument	i		3441452	1					
ANR	3441561	Identifier	i		3441452	0					
ANR	3441562	Argument	i + 1		3441452	2					
ANR	3441563	AdditiveExpression	i + 1		3441452	0		+			
ANR	3441564	Identifier	i		3441452	0					
ANR	3441565	PrimaryExpression	1		3441452	1					
ANR	3441566	ExpressionStatement	b [ i ] = b [ i - MT_IB ] ^ ( s >> 1 ) ^ MAGIC ( s )	94:12:2851:2892	3441452	1	True				
ANR	3441567	AssignmentExpression	b [ i ] = b [ i - MT_IB ] ^ ( s >> 1 ) ^ MAGIC ( s )		3441452	0		=			
ANR	3441568	ArrayIndexing	b [ i ]		3441452	0					
ANR	3441569	Identifier	b		3441452	0					
ANR	3441570	Identifier	i		3441452	1					
ANR	3441571	ExclusiveOrExpression	b [ i - MT_IB ] ^ ( s >> 1 ) ^ MAGIC ( s )		3441452	1		^			
ANR	3441572	ArrayIndexing	b [ i - MT_IB ]		3441452	0					
ANR	3441573	Identifier	b		3441452	0					
ANR	3441574	AdditiveExpression	i - MT_IB		3441452	1		-			
ANR	3441575	Identifier	i		3441452	0					
ANR	3441576	Identifier	MT_IB		3441452	1					
ANR	3441577	ExclusiveOrExpression	( s >> 1 ) ^ MAGIC ( s )		3441452	1		^			
ANR	3441578	ShiftExpression	s >> 1		3441452	0		>>			
ANR	3441579	Identifier	s		3441452	0					
ANR	3441580	PrimaryExpression	1		3441452	1					
ANR	3441581	CallExpression	MAGIC ( s )		3441452	1					
ANR	3441582	Callee	MAGIC		3441452	0					
ANR	3441583	Identifier	MAGIC		3441452	0					
ANR	3441584	ArgumentList	s		3441452	1					
ANR	3441585	Argument	s		3441452	0					
ANR	3441586	Identifier	s		3441452	0					
ANR	3441587	ExpressionStatement	"s = TWIST ( b , MT_LEN - 1 , 0 )"	97:8:2913:2938	3441452	4	True				
ANR	3441588	AssignmentExpression	"s = TWIST ( b , MT_LEN - 1 , 0 )"		3441452	0		=			
ANR	3441589	Identifier	s		3441452	0					
ANR	3441590	CallExpression	"TWIST ( b , MT_LEN - 1 , 0 )"		3441452	1					
ANR	3441591	Callee	TWIST		3441452	0					
ANR	3441592	Identifier	TWIST		3441452	0					
ANR	3441593	ArgumentList	b		3441452	1					
ANR	3441594	Argument	b		3441452	0					
ANR	3441595	Identifier	b		3441452	0					
ANR	3441596	Argument	MT_LEN - 1		3441452	1					
ANR	3441597	AdditiveExpression	MT_LEN - 1		3441452	0		-			
ANR	3441598	Identifier	MT_LEN		3441452	0					
ANR	3441599	PrimaryExpression	1		3441452	1					
ANR	3441600	Argument	0		3441452	2					
ANR	3441601	PrimaryExpression	0		3441452	0					
ANR	3441602	ExpressionStatement	b [ MT_LEN - 1 ] = b [ MT_IA - 1 ] ^ ( s >> 1 ) ^ MAGIC ( s )	98:8:2948:2994	3441452	5	True				
ANR	3441603	AssignmentExpression	b [ MT_LEN - 1 ] = b [ MT_IA - 1 ] ^ ( s >> 1 ) ^ MAGIC ( s )		3441452	0		=			
ANR	3441604	ArrayIndexing	b [ MT_LEN - 1 ]		3441452	0					
ANR	3441605	Identifier	b		3441452	0					
ANR	3441606	AdditiveExpression	MT_LEN - 1		3441452	1		-			
ANR	3441607	Identifier	MT_LEN		3441452	0					
ANR	3441608	PrimaryExpression	1		3441452	1					
ANR	3441609	ExclusiveOrExpression	b [ MT_IA - 1 ] ^ ( s >> 1 ) ^ MAGIC ( s )		3441452	1		^			
ANR	3441610	ArrayIndexing	b [ MT_IA - 1 ]		3441452	0					
ANR	3441611	Identifier	b		3441452	0					
ANR	3441612	AdditiveExpression	MT_IA - 1		3441452	1		-			
ANR	3441613	Identifier	MT_IA		3441452	0					
ANR	3441614	PrimaryExpression	1		3441452	1					
ANR	3441615	ExclusiveOrExpression	( s >> 1 ) ^ MAGIC ( s )		3441452	1		^			
ANR	3441616	ShiftExpression	s >> 1		3441452	0		>>			
ANR	3441617	Identifier	s		3441452	0					
ANR	3441618	PrimaryExpression	1		3441452	1					
ANR	3441619	CallExpression	MAGIC ( s )		3441452	1					
ANR	3441620	Callee	MAGIC		3441452	0					
ANR	3441621	Identifier	MAGIC		3441452	0					
ANR	3441622	ArgumentList	s		3441452	1					
ANR	3441623	Argument	s		3441452	0					
ANR	3441624	Identifier	s		3441452	0					
ANR	3441625	ExpressionStatement	mt_index = idx + sizeof ( unsigned long )	100:4:3006:3044	3441452	5	True				
ANR	3441626	AssignmentExpression	mt_index = idx + sizeof ( unsigned long )		3441452	0		=			
ANR	3441627	Identifier	mt_index		3441452	0					
ANR	3441628	AdditiveExpression	idx + sizeof ( unsigned long )		3441452	1		+			
ANR	3441629	Identifier	idx		3441452	0					
ANR	3441630	SizeofExpression	sizeof ( unsigned long )		3441452	1					
ANR	3441631	Sizeof	sizeof		3441452	0					
ANR	3441632	SizeofOperand	unsigned long		3441452	1					
ANR	3441633	ReturnStatement	return * ( unsigned long * ) ( ( unsigned char * ) b + idx ) ;	101:4:3050:3101	3441452	6	True				
ANR	3441634	UnaryOperationExpression	* ( unsigned long * ) ( ( unsigned char * ) b + idx )		3441452	0					
ANR	3441635	UnaryOperator	*		3441452	0					
ANR	3441636	CastExpression	( unsigned long * ) ( ( unsigned char * ) b + idx )		3441452	1					
ANR	3441637	CastTarget	unsigned long *		3441452	0					
ANR	3441638	AdditiveExpression	( unsigned char * ) b + idx		3441452	1		+			
ANR	3441639	CastExpression	( unsigned char * ) b		3441452	0					
ANR	3441640	CastTarget	unsigned char *		3441452	0					
ANR	3441641	Identifier	b		3441452	1					
ANR	3441642	Identifier	idx		3441452	1					
ANR	3441643	ReturnType	unsigned long		3441452	1					
ANR	3441644	Identifier	mt_random		3441452	2					
ANR	3441645	ParameterList			3441452	3					
ANR	3441646	CFGEntryNode	ENTRY		3441452		True				
ANR	3441647	CFGExitNode	EXIT		3441452		True				
ANR	3441648	Symbol	b		3441452						
ANR	3441649	Symbol	i		3441452						
ANR	3441650	Symbol	MT_LEN		3441452						
ANR	3441651	Symbol	* b		3441452						
ANR	3441652	Symbol	mt_buffer		3441452						
ANR	3441653	Symbol	TWIST		3441452						
ANR	3441654	Symbol	mt_index		3441452						
ANR	3441655	Symbol	* ( unsigned long * ) ( ( unsigned char * ) b + idx )		3441452						
ANR	3441656	Symbol	s		3441452						
ANR	3441657	Symbol	* i		3441452						
ANR	3441658	Symbol	MT_IA		3441452						
ANR	3441659	Symbol	MT_IB		3441452						
ANR	3441660	Symbol	MAGIC		3441452						
ANR	3441661	Symbol	* idx		3441452						
ANR	3441662	Symbol	* MT_LEN		3441452						
ANR	3441663	Symbol	idx		3441452						
ANR	3441664	Symbol	* MT_IB		3441452						
ANR	3441665	Symbol	* MT_IA		3441452						
ANR	3441666	Function	SafeSock :: init	109:0:3319:3929							
ANR	3441667	FunctionDef	SafeSock :: init ()		3441666	0					
ANR	3441668	CompoundStatement		110:0:3341:3929	3441666	0					
ANR	3441669	ExpressionStatement	_special_state = safesock_none	111:1:3344:3374	3441666	0	True				
ANR	3441670	AssignmentExpression	_special_state = safesock_none		3441666	0		=			
ANR	3441671	Identifier	_special_state		3441666	0					
ANR	3441672	Identifier	safesock_none		3441666	1					
ANR	3441673	ForStatement	for ( int i = 0 ; i < SAFE_SOCK_HASH_BUCKET_SIZE ; i ++ )		3441666	1					
ANR	3441674	ForInit	int i = 0 ;	113:5:3382:3389	3441666	0	True				
ANR	3441675	IdentifierDeclStatement	int i = 0 ;		3441666	0					
ANR	3441676	IdentifierDecl	i = 0		3441666	0					
ANR	3441677	IdentifierDeclType	int		3441666	0					
ANR	3441678	Identifier	i		3441666	1					
ANR	3441679	AssignmentExpression	i = 0		3441666	2		=			
ANR	3441680	Identifier	i		3441666	0					
ANR	3441681	PrimaryExpression	0		3441666	1					
ANR	3441682	Condition	i < SAFE_SOCK_HASH_BUCKET_SIZE	113:14:3391:3418	3441666	1	True				
ANR	3441683	RelationalExpression	i < SAFE_SOCK_HASH_BUCKET_SIZE		3441666	0		<			
ANR	3441684	Identifier	i		3441666	0					
ANR	3441685	Identifier	SAFE_SOCK_HASH_BUCKET_SIZE		3441666	1					
ANR	3441686	PostIncDecOperationExpression	i ++	113:44:3421:3423	3441666	2	True				
ANR	3441687	Identifier	i		3441666	0					
ANR	3441688	IncDec	++		3441666	1					
ANR	3441689	ExpressionStatement	_inMsgs [ i ] = NULL	114:2:3428:3445	3441666	3	True				
ANR	3441690	AssignmentExpression	_inMsgs [ i ] = NULL		3441666	0		=			
ANR	3441691	ArrayIndexing	_inMsgs [ i ]		3441666	0					
ANR	3441692	Identifier	_inMsgs		3441666	0					
ANR	3441693	Identifier	i		3441666	1					
ANR	3441694	Identifier	NULL		3441666	1					
ANR	3441695	ExpressionStatement	_msgReady = false	115:1:3448:3465	3441666	2	True				
ANR	3441696	AssignmentExpression	_msgReady = false		3441666	0		=			
ANR	3441697	Identifier	_msgReady		3441666	0					
ANR	3441698	Identifier	false		3441666	1					
ANR	3441699	ExpressionStatement	_longMsg = NULL	116:1:3468:3483	3441666	3	True				
ANR	3441700	AssignmentExpression	_longMsg = NULL		3441666	0		=			
ANR	3441701	Identifier	_longMsg		3441666	0					
ANR	3441702	Identifier	NULL		3441666	1					
ANR	3441703	ExpressionStatement	_tOutBtwPkts = SAFE_SOCK_MAX_BTW_PKT_ARVL	117:1:3486:3527	3441666	4	True				
ANR	3441704	AssignmentExpression	_tOutBtwPkts = SAFE_SOCK_MAX_BTW_PKT_ARVL		3441666	0		=			
ANR	3441705	Identifier	_tOutBtwPkts		3441666	0					
ANR	3441706	Identifier	SAFE_SOCK_MAX_BTW_PKT_ARVL		3441666	1					
ANR	3441707	IfStatement	if ( _outMsgID . msgNo == 0 )		3441666	5					
ANR	3441708	Condition	_outMsgID . msgNo == 0	120:4:3555:3574	3441666	0	True				
ANR	3441709	EqualityExpression	_outMsgID . msgNo == 0		3441666	0		==			
ANR	3441710	MemberAccess	_outMsgID . msgNo		3441666	0					
ANR	3441711	Identifier	_outMsgID		3441666	0					
ANR	3441712	Identifier	msgNo		3441666	1					
ANR	3441713	PrimaryExpression	0		3441666	1					
ANR	3441714	CompoundStatement		11:26:235:235	3441666	1					
ANR	3441715	ExpressionStatement	_outMsgID . ip_addr = mt_random ( )	124:2:3693:3724	3441666	0	True				
ANR	3441716	AssignmentExpression	_outMsgID . ip_addr = mt_random ( )		3441666	0		=			
ANR	3441717	MemberAccess	_outMsgID . ip_addr		3441666	0					
ANR	3441718	Identifier	_outMsgID		3441666	0					
ANR	3441719	Identifier	ip_addr		3441666	1					
ANR	3441720	CallExpression	mt_random ( )		3441666	1					
ANR	3441721	Callee	mt_random		3441666	0					
ANR	3441722	Identifier	mt_random		3441666	0					
ANR	3441723	ArgumentList			3441666	1					
ANR	3441724	ExpressionStatement	_outMsgID . pid = mt_random ( ) % 65536	125:2:3728:3763	3441666	1	True				
ANR	3441725	AssignmentExpression	_outMsgID . pid = mt_random ( ) % 65536		3441666	0		=			
ANR	3441726	MemberAccess	_outMsgID . pid		3441666	0					
ANR	3441727	Identifier	_outMsgID		3441666	0					
ANR	3441728	Identifier	pid		3441666	1					
ANR	3441729	MultiplicativeExpression	mt_random ( ) % 65536		3441666	1		%			
ANR	3441730	CallExpression	mt_random ( )		3441666	0					
ANR	3441731	Callee	mt_random		3441666	0					
ANR	3441732	Identifier	mt_random		3441666	0					
ANR	3441733	ArgumentList			3441666	1					
ANR	3441734	PrimaryExpression	65536		3441666	1					
ANR	3441735	ExpressionStatement	_outMsgID . time = mt_random ( )	126:2:3786:3814	3441666	2	True				
ANR	3441736	AssignmentExpression	_outMsgID . time = mt_random ( )		3441666	0		=			
ANR	3441737	MemberAccess	_outMsgID . time		3441666	0					
ANR	3441738	Identifier	_outMsgID		3441666	0					
ANR	3441739	Identifier	time		3441666	1					
ANR	3441740	CallExpression	mt_random ( )		3441666	1					
ANR	3441741	Callee	mt_random		3441666	0					
ANR	3441742	Identifier	mt_random		3441666	0					
ANR	3441743	ArgumentList			3441666	1					
ANR	3441744	ExpressionStatement	_outMsgID . msgNo = ( unsigned long ) get_random_int ( )	127:2:3847:3896	3441666	3	True				
ANR	3441745	AssignmentExpression	_outMsgID . msgNo = ( unsigned long ) get_random_int ( )		3441666	0		=			
ANR	3441746	MemberAccess	_outMsgID . msgNo		3441666	0					
ANR	3441747	Identifier	_outMsgID		3441666	0					
ANR	3441748	Identifier	msgNo		3441666	1					
ANR	3441749	CastExpression	( unsigned long ) get_random_int ( )		3441666	1					
ANR	3441750	CastTarget	unsigned long		3441666	0					
ANR	3441751	CallExpression	get_random_int ( )		3441666	1					
ANR	3441752	Callee	get_random_int		3441666	0					
ANR	3441753	Identifier	get_random_int		3441666	0					
ANR	3441754	ArgumentList			3441666	1					
ANR	3441755	ExpressionStatement	mdChecker_ = NULL	130:4:3906:3927	3441666	6	True				
ANR	3441756	AssignmentExpression	mdChecker_ = NULL		3441666	0		=			
ANR	3441757	Identifier	mdChecker_		3441666	0					
ANR	3441758	Identifier	NULL		3441666	1					
ANR	3441759	ReturnType	void		3441666	1					
ANR	3441760	Identifier	SafeSock :: init		3441666	2					
ANR	3441761	ParameterList			3441666	3					
ANR	3441762	CFGEntryNode	ENTRY		3441666		True				
ANR	3441763	CFGExitNode	EXIT		3441666		True				
ANR	3441764	Symbol	_tOutBtwPkts		3441666						
ANR	3441765	Symbol	_outMsgID . msgNo		3441666						
ANR	3441766	Symbol	_special_state		3441666						
ANR	3441767	Symbol	NULL		3441666						
ANR	3441768	Symbol	_msgReady		3441666						
ANR	3441769	Symbol	false		3441666						
ANR	3441770	Symbol	_outMsgID		3441666						
ANR	3441771	Symbol	get_random_int		3441666						
ANR	3441772	Symbol	i		3441666						
ANR	3441773	Symbol	* _inMsgs		3441666						
ANR	3441774	Symbol	_outMsgID . ip_addr		3441666						
ANR	3441775	Symbol	* i		3441666						
ANR	3441776	Symbol	safesock_none		3441666						
ANR	3441777	Symbol	mt_random		3441666						
ANR	3441778	Symbol	mdChecker_		3441666						
ANR	3441779	Symbol	SAFE_SOCK_HASH_BUCKET_SIZE		3441666						
ANR	3441780	Symbol	_inMsgs		3441666						
ANR	3441781	Symbol	SAFE_SOCK_MAX_BTW_PKT_ARVL		3441666						
ANR	3441782	Symbol	_outMsgID . time		3441666						
ANR	3441783	Symbol	_longMsg		3441666						
ANR	3441784	Symbol	_outMsgID . pid		3441666						
ANR	3441785	Function	SafeSock :: SafeSock	134:0:3933:4001							
ANR	3441786	FunctionDef	SafeSock :: SafeSock ()		3441785	0					
ANR	3441787	CompoundStatement		136:0:3990:4001	3441785	0					
ANR	3441788	ExpressionStatement	init ( )	137:1:3993:3999	3441785	0	True				
ANR	3441789	CallExpression	init ( )		3441785	0					
ANR	3441790	Callee	init		3441785	0					
ANR	3441791	Identifier	init		3441785	0					
ANR	3441792	ArgumentList			3441785	1					
ANR	3441793	Identifier	SafeSock :: SafeSock		3441785	1					
ANR	3441794	ParameterList			3441785	2					
ANR	3441795	CFGEntryNode	ENTRY		3441785		True				
ANR	3441796	CFGExitNode	EXIT		3441785		True				
ANR	3441797	Function	SafeSock :: SafeSock	140:0:4004:4287							
ANR	3441798	FunctionDef	SafeSock :: SafeSock (const SafeSock & orig)		3441797	0					
ANR	3441799	CompoundStatement		142:0:4061:4287	3441797	0					
ANR	3441800	ExpressionStatement	init ( )	143:1:4064:4070	3441797	0	True				
ANR	3441801	CallExpression	init ( )		3441797	0					
ANR	3441802	Callee	init		3441797	0					
ANR	3441803	Identifier	init		3441797	0					
ANR	3441804	ArgumentList			3441797	1					
ANR	3441805	IdentifierDeclStatement	char * buf = NULL ;	145:1:4134:4150	3441797	1	True				
ANR	3441806	IdentifierDecl	* buf = NULL		3441797	0					
ANR	3441807	IdentifierDeclType	char *		3441797	0					
ANR	3441808	Identifier	buf		3441797	1					
ANR	3441809	AssignmentExpression	* buf = NULL		3441797	2		=			
ANR	3441810	Identifier	NULL		3441797	0					
ANR	3441811	Identifier	NULL		3441797	1					
ANR	3441812	ExpressionStatement	buf = orig . serialize ( )	146:1:4153:4175	3441797	2	True				
ANR	3441813	AssignmentExpression	buf = orig . serialize ( )		3441797	0		=			
ANR	3441814	Identifier	buf		3441797	0					
ANR	3441815	CallExpression	orig . serialize ( )		3441797	1					
ANR	3441816	Callee	orig . serialize		3441797	0					
ANR	3441817	MemberAccess	orig . serialize		3441797	0					
ANR	3441818	Identifier	orig		3441797	0					
ANR	3441819	Identifier	serialize		3441797	1					
ANR	3441820	ArgumentList			3441797	1					
ANR	3441821	ExpressionStatement	ASSERT ( buf )	147:1:4206:4217	3441797	3	True				
ANR	3441822	CallExpression	ASSERT ( buf )		3441797	0					
ANR	3441823	Callee	ASSERT		3441797	0					
ANR	3441824	Identifier	ASSERT		3441797	0					
ANR	3441825	ArgumentList	buf		3441797	1					
ANR	3441826	Argument	buf		3441797	0					
ANR	3441827	Identifier	buf		3441797	0					
ANR	3441828	ExpressionStatement	serialize ( buf )	148:1:4220:4234	3441797	4	True				
ANR	3441829	CallExpression	serialize ( buf )		3441797	0					
ANR	3441830	Callee	serialize		3441797	0					
ANR	3441831	Identifier	serialize		3441797	0					
ANR	3441832	ArgumentList	buf		3441797	1					
ANR	3441833	Argument	buf		3441797	0					
ANR	3441834	Identifier	buf		3441797	0					
ANR	3441835	Statement	delete	149:1:4272:4277	3441797	5	True				
ANR	3441836	Statement	[	149:8:4279:4279	3441797	6	True				
ANR	3441837	Statement	]	149:9:4280:4280	3441797	7	True				
ANR	3441838	ExpressionStatement	buf	149:11:4282:4285	3441797	8	True				
ANR	3441839	Identifier	buf		3441797	0					
ANR	3441840	Identifier	SafeSock :: SafeSock		3441797	1					
ANR	3441841	ParameterList	const SafeSock & orig		3441797	2					
ANR	3441842	Parameter	const SafeSock & orig	140:19:4023:4043	3441797	0	True				
ANR	3441843	ParameterType	const SafeSock &		3441797	0					
ANR	3441844	Identifier	orig		3441797	1					
ANR	3441845	CFGEntryNode	ENTRY		3441797		True				
ANR	3441846	CFGExitNode	EXIT		3441797		True				
ANR	3441847	Symbol	buf		3441797						
ANR	3441848	Symbol	NULL		3441797						
ANR	3441849	Symbol	orig		3441797						
ANR	3441850	Symbol	orig . serialize		3441797						
ANR	3441851	Function	SafeSock :: CloneStream	152:0:4290:4354							
ANR	3441852	FunctionDef	SafeSock :: CloneStream ()		3441851	0					
ANR	3441853	CompoundStatement		154:0:4323:4354	3441851	0					
ANR	3441854	ReturnStatement	return new SafeSock ( * this ) ;	155:1:4326:4352	3441851	0	True				
ANR	3441855	UnaryOperationExpression	* this		3441851	0					
ANR	3441856	UnaryOperator	*		3441851	0					
ANR	3441857	Identifier	this		3441851	1					
ANR	3441858	ReturnType	Stream *		3441851	1					
ANR	3441859	Identifier	SafeSock :: CloneStream		3441851	2					
ANR	3441860	ParameterList			3441851	3					
ANR	3441861	CFGEntryNode	ENTRY		3441851		True				
ANR	3441862	CFGExitNode	EXIT		3441851		True				
ANR	3441863	Symbol	* this		3441851						
ANR	3441864	Symbol	this		3441851						
ANR	3441865	Function	SafeSock :: ~SafeSock	158:0:4357:4641							
ANR	3441866	FunctionDef	SafeSock :: ~SafeSock ()		3441865	0					
ANR	3441867	CompoundStatement		159:0:4379:4641	3441865	0					
ANR	3441868	IdentifierDeclStatement	"_condorInMsg * tempMsg , * delMsg ;"	160:1:4382:4412	3441865	0	True				
ANR	3441869	IdentifierDecl	* tempMsg		3441865	0					
ANR	3441870	IdentifierDeclType	_condorInMsg *		3441865	0					
ANR	3441871	Identifier	tempMsg		3441865	1					
ANR	3441872	IdentifierDecl	* delMsg		3441865	1					
ANR	3441873	IdentifierDeclType	_condorInMsg *		3441865	0					
ANR	3441874	Identifier	delMsg		3441865	1					
ANR	3441875	ForStatement	for ( int i = 0 ; i < SAFE_SOCK_HASH_BUCKET_SIZE ; i ++ )		3441865	1					
ANR	3441876	ForInit	int i = 0 ;	162:5:4420:4427	3441865	0	True				
ANR	3441877	IdentifierDeclStatement	int i = 0 ;		3441865	0					
ANR	3441878	IdentifierDecl	i = 0		3441865	0					
ANR	3441879	IdentifierDeclType	int		3441865	0					
ANR	3441880	Identifier	i		3441865	1					
ANR	3441881	AssignmentExpression	i = 0		3441865	2		=			
ANR	3441882	Identifier	i		3441865	0					
ANR	3441883	PrimaryExpression	0		3441865	1					
ANR	3441884	Condition	i < SAFE_SOCK_HASH_BUCKET_SIZE	162:14:4429:4456	3441865	1	True				
ANR	3441885	RelationalExpression	i < SAFE_SOCK_HASH_BUCKET_SIZE		3441865	0		<			
ANR	3441886	Identifier	i		3441865	0					
ANR	3441887	Identifier	SAFE_SOCK_HASH_BUCKET_SIZE		3441865	1					
ANR	3441888	PostIncDecOperationExpression	i ++	162:44:4459:4461	3441865	2	True				
ANR	3441889	Identifier	i		3441865	0					
ANR	3441890	IncDec	++		3441865	1					
ANR	3441891	CompoundStatement		4:49:84:84	3441865	3					
ANR	3441892	ExpressionStatement	tempMsg = _inMsgs [ i ]	163:2:4468:4488	3441865	0	True				
ANR	3441893	AssignmentExpression	tempMsg = _inMsgs [ i ]		3441865	0		=			
ANR	3441894	Identifier	tempMsg		3441865	0					
ANR	3441895	ArrayIndexing	_inMsgs [ i ]		3441865	1					
ANR	3441896	Identifier	_inMsgs		3441865	0					
ANR	3441897	Identifier	i		3441865	1					
ANR	3441898	WhileStatement	while ( tempMsg )		3441865	1					
ANR	3441899	Condition	tempMsg	164:8:4498:4504	3441865	0	True				
ANR	3441900	Identifier	tempMsg		3441865	0					
ANR	3441901	CompoundStatement		6:17:127:127	3441865	1					
ANR	3441902	ExpressionStatement	delMsg = tempMsg	165:3:4512:4528	3441865	0	True				
ANR	3441903	AssignmentExpression	delMsg = tempMsg		3441865	0		=			
ANR	3441904	Identifier	delMsg		3441865	0					
ANR	3441905	Identifier	tempMsg		3441865	1					
ANR	3441906	ExpressionStatement	tempMsg = tempMsg -> nextMsg	166:3:4533:4559	3441865	1	True				
ANR	3441907	AssignmentExpression	tempMsg = tempMsg -> nextMsg		3441865	0		=			
ANR	3441908	Identifier	tempMsg		3441865	0					
ANR	3441909	PtrMemberAccess	tempMsg -> nextMsg		3441865	1					
ANR	3441910	Identifier	tempMsg		3441865	0					
ANR	3441911	Identifier	nextMsg		3441865	1					
ANR	3441912	Statement	delete	167:3:4564:4569	3441865	2	True				
ANR	3441913	ExpressionStatement	delMsg	167:10:4571:4577	3441865	3	True				
ANR	3441914	Identifier	delMsg		3441865	0					
ANR	3441915	ExpressionStatement	_inMsgs [ i ] = NULL	169:2:4585:4602	3441865	2	True				
ANR	3441916	AssignmentExpression	_inMsgs [ i ] = NULL		3441865	0		=			
ANR	3441917	ArrayIndexing	_inMsgs [ i ]		3441865	0					
ANR	3441918	Identifier	_inMsgs		3441865	0					
ANR	3441919	Identifier	i		3441865	1					
ANR	3441920	Identifier	NULL		3441865	1					
ANR	3441921	ExpressionStatement	close ( )	171:1:4608:4615	3441865	2	True				
ANR	3441922	CallExpression	close ( )		3441865	0					
ANR	3441923	Callee	close		3441865	0					
ANR	3441924	Identifier	close		3441865	0					
ANR	3441925	ArgumentList			3441865	1					
ANR	3441926	Statement	delete	173:4:4622:4627	3441865	3	True				
ANR	3441927	ExpressionStatement	mdChecker_	173:11:4629:4639	3441865	4	True				
ANR	3441928	Identifier	mdChecker_		3441865	0					
ANR	3441929	Identifier	SafeSock :: ~SafeSock		3441865	1					
ANR	3441930	ParameterList			3441865	2					
ANR	3441931	CFGEntryNode	ENTRY		3441865		True				
ANR	3441932	CFGExitNode	EXIT		3441865		True				
ANR	3441933	Symbol	delMsg		3441865						
ANR	3441934	Symbol	tempMsg -> nextMsg		3441865						
ANR	3441935	Symbol	* i		3441865						
ANR	3441936	Symbol	NULL		3441865						
ANR	3441937	Symbol	* tempMsg		3441865						
ANR	3441938	Symbol	i		3441865						
ANR	3441939	Symbol	SAFE_SOCK_HASH_BUCKET_SIZE		3441865						
ANR	3441940	Symbol	_inMsgs		3441865						
ANR	3441941	Symbol	tempMsg		3441865						
ANR	3441942	Symbol	* _inMsgs		3441865						
ANR	3441943	Function	SafeSock :: end_of_message	190:0:5200:6949							
ANR	3441944	FunctionDef	SafeSock :: end_of_message ()		3441943	0					
ANR	3441945	CompoundStatement		191:0:5231:6949	3441943	0					
ANR	3441946	IdentifierDeclStatement	int ret_val = FALSE ;	192:1:5234:5253	3441943	0	True				
ANR	3441947	IdentifierDecl	ret_val = FALSE		3441943	0					
ANR	3441948	IdentifierDeclType	int		3441943	0					
ANR	3441949	Identifier	ret_val		3441943	1					
ANR	3441950	AssignmentExpression	ret_val = FALSE		3441943	2		=			
ANR	3441951	Identifier	FALSE		3441943	0					
ANR	3441952	Identifier	FALSE		3441943	1					
ANR	3441953	IdentifierDeclStatement	int sent ;	193:1:5256:5264	3441943	1	True				
ANR	3441954	IdentifierDecl	sent		3441943	0					
ANR	3441955	IdentifierDeclType	int		3441943	0					
ANR	3441956	Identifier	sent		3441943	1					
ANR	3441957	IdentifierDeclStatement	unsigned char * md = 0 ;	194:8:5274:5296	3441943	2	True				
ANR	3441958	IdentifierDecl	* md = 0		3441943	0					
ANR	3441959	IdentifierDeclType	unsigned char *		3441943	0					
ANR	3441960	Identifier	md		3441943	1					
ANR	3441961	AssignmentExpression	* md = 0		3441943	2		=			
ANR	3441962	Identifier	md		3441943	0					
ANR	3441963	PrimaryExpression	0		3441943	1					
ANR	3441964	SwitchStatement	switch ( _coding )		3441943	3					
ANR	3441965	Condition	_coding	196:8:5307:5313	3441943	0	True				
ANR	3441966	Identifier	_coding		3441943	0					
ANR	3441967	CompoundStatement		6:16:83:83	3441943	1					
ANR	3441968	Label	case stream_encode :	197:2:5319:5337	3441943	0	True				
ANR	3441969	Identifier	stream_encode		3441943	0					
ANR	3441970	IfStatement	if ( mdChecker_ )		3441943	1					
ANR	3441971	Condition	mdChecker_	198:24:5363:5372	3441943	0	True				
ANR	3441972	Identifier	mdChecker_		3441943	0					
ANR	3441973	CompoundStatement		8:36:143:143	3441943	1					
ANR	3441974	ExpressionStatement	md = mdChecker_ -> computeMD ( )	199:7:5384:5412	3441943	0	True				
ANR	3441975	AssignmentExpression	md = mdChecker_ -> computeMD ( )		3441943	0		=			
ANR	3441976	Identifier	md		3441943	0					
ANR	3441977	CallExpression	mdChecker_ -> computeMD ( )		3441943	1					
ANR	3441978	Callee	mdChecker_ -> computeMD		3441943	0					
ANR	3441979	PtrMemberAccess	mdChecker_ -> computeMD		3441943	0					
ANR	3441980	Identifier	mdChecker_		3441943	0					
ANR	3441981	Identifier	computeMD		3441943	1					
ANR	3441982	ArgumentList			3441943	1					
ANR	3441983	ExpressionStatement	"sent = _outMsg . sendMsg ( _sock , _who , _outMsgID , md )"	201:20:5442:5508	3441943	2	True				
ANR	3441984	AssignmentExpression	"sent = _outMsg . sendMsg ( _sock , _who , _outMsgID , md )"		3441943	0		=			
ANR	3441985	Identifier	sent		3441943	0					
ANR	3441986	CallExpression	"_outMsg . sendMsg ( _sock , _who , _outMsgID , md )"		3441943	1					
ANR	3441987	Callee	_outMsg . sendMsg		3441943	0					
ANR	3441988	MemberAccess	_outMsg . sendMsg		3441943	0					
ANR	3441989	Identifier	_outMsg		3441943	0					
ANR	3441990	Identifier	sendMsg		3441943	1					
ANR	3441991	ArgumentList	_sock		3441943	1					
ANR	3441992	Argument	_sock		3441943	0					
ANR	3441993	Identifier	_sock		3441943	0					
ANR	3441994	Argument	_who		3441943	1					
ANR	3441995	Identifier	_who		3441943	0					
ANR	3441996	Argument	_outMsgID		3441943	2					
ANR	3441997	Identifier	_outMsgID		3441943	0					
ANR	3441998	Argument	md		3441943	3					
ANR	3441999	Identifier	md		3441943	0					
ANR	3442000	IfStatement	if ( md )		3441943	3					
ANR	3442001	Condition	md	203:10:5520:5521	3441943	0	True				
ANR	3442002	Identifier	md		3441943	0					
ANR	3442003	CompoundStatement		13:14:292:292	3441943	1					
ANR	3442004	ExpressionStatement	free ( md )	204:7:5533:5541	3441943	0	True				
ANR	3442005	CallExpression	free ( md )		3441943	0					
ANR	3442006	Callee	free		3441943	0					
ANR	3442007	Identifier	free		3441943	0					
ANR	3442008	ArgumentList	md		3441943	1					
ANR	3442009	Argument	md		3441943	0					
ANR	3442010	Identifier	md		3441943	0					
ANR	3442011	ExpressionStatement	_outMsgID . msgNo ++	206:20:5571:5588	3441943	4	True				
ANR	3442012	PostIncDecOperationExpression	_outMsgID . msgNo ++		3441943	0					
ANR	3442013	MemberAccess	_outMsgID . msgNo		3441943	0					
ANR	3442014	Identifier	_outMsgID		3441943	0					
ANR	3442015	Identifier	msgNo		3441943	1					
ANR	3442016	IncDec	++		3441943	1					
ANR	3442017	ExpressionStatement	resetCrypto ( )	207:20:5662:5675	3441943	5	True				
ANR	3442018	CallExpression	resetCrypto ( )		3441943	0					
ANR	3442019	Callee	resetCrypto		3441943	0					
ANR	3442020	Identifier	resetCrypto		3441943	0					
ANR	3442021	ArgumentList			3441943	1					
ANR	3442022	IfStatement	if ( sent < 0 )		3441943	6					
ANR	3442023	Condition	sent < 0	209:24:5702:5709	3441943	0	True				
ANR	3442024	RelationalExpression	sent < 0		3441943	0		<			
ANR	3442025	Identifier	sent		3441943	0					
ANR	3442026	PrimaryExpression	0		3441943	1					
ANR	3442027	CompoundStatement		19:34:480:480	3441943	1					
ANR	3442028	ReturnStatement	return FALSE ;	210:24:5738:5750	3441943	0	True				
ANR	3442029	Identifier	FALSE		3441943	0					
ANR	3442030	ElseStatement	else		3441943	0					
ANR	3442031	CompoundStatement		21:27:547:547	3441943	0					
ANR	3442032	ReturnStatement	return TRUE ;	212:24:5805:5816	3441943	0	True				
ANR	3442033	Identifier	TRUE		3441943	0					
ANR	3442034	Label	case stream_decode :	214:2:5842:5860	3441943	7	True				
ANR	3442035	Identifier	stream_decode		3441943	0					
ANR	3442036	IfStatement	if ( _msgReady )		3441943	8					
ANR	3442037	Condition	_msgReady	215:6:5868:5876	3441943	0	True				
ANR	3442038	Identifier	_msgReady		3441943	0					
ANR	3442039	CompoundStatement		25:17:647:647	3441943	1					
ANR	3442040	IfStatement	if ( _longMsg )		3441943	0					
ANR	3442041	Condition	_longMsg	216:7:5888:5895	3441943	0	True				
ANR	3442042	Identifier	_longMsg		3441943	0					
ANR	3442043	CompoundStatement		26:17:666:666	3441943	1					
ANR	3442044	IfStatement	if ( _longMsg -> consumed ( ) )		3441943	0					
ANR	3442045	Condition	_longMsg -> consumed ( )	217:8:5933:5952	3441943	0	True				
ANR	3442046	CallExpression	_longMsg -> consumed ( )		3441943	0					
ANR	3442047	Callee	_longMsg -> consumed		3441943	0					
ANR	3442048	PtrMemberAccess	_longMsg -> consumed		3441943	0					
ANR	3442049	Identifier	_longMsg		3441943	0					
ANR	3442050	Identifier	consumed		3441943	1					
ANR	3442051	ArgumentList			3441943	1					
ANR	3442052	ExpressionStatement	ret_val = TRUE	218:6:5961:5975	3441943	1	True				
ANR	3442053	AssignmentExpression	ret_val = TRUE		3441943	0		=			
ANR	3442054	Identifier	ret_val		3441943	0					
ANR	3442055	Identifier	TRUE		3441943	1					
ANR	3442056	IfStatement	if ( _longMsg -> prevMsg )		3441943	1					
ANR	3442057	Condition	_longMsg -> prevMsg	220:8:6012:6028	3441943	0	True				
ANR	3442058	PtrMemberAccess	_longMsg -> prevMsg		3441943	0					
ANR	3442059	Identifier	_longMsg		3441943	0					
ANR	3442060	Identifier	prevMsg		3441943	1					
ANR	3442061	ExpressionStatement	_longMsg -> prevMsg -> nextMsg = _longMsg -> nextMsg	221:6:6037:6083	3441943	1	True				
ANR	3442062	AssignmentExpression	_longMsg -> prevMsg -> nextMsg = _longMsg -> nextMsg		3441943	0		=			
ANR	3442063	PtrMemberAccess	_longMsg -> prevMsg -> nextMsg		3441943	0					
ANR	3442064	PtrMemberAccess	_longMsg -> prevMsg		3441943	0					
ANR	3442065	Identifier	_longMsg		3441943	0					
ANR	3442066	Identifier	prevMsg		3441943	1					
ANR	3442067	Identifier	nextMsg		3441943	1					
ANR	3442068	PtrMemberAccess	_longMsg -> nextMsg		3441943	1					
ANR	3442069	Identifier	_longMsg		3441943	0					
ANR	3442070	Identifier	nextMsg		3441943	1					
ANR	3442071	ElseStatement	else		3441943	0					
ANR	3442072	CompoundStatement		33:6:871:1024	3441943	0					
ANR	3442073	IdentifierDeclStatement	int index = labs ( _longMsg -> msgID . ip_addr + _longMsg -> msgID . time + _longMsg -> msgID . msgNo ) % SAFE_SOCK_HASH_BUCKET_SIZE ;	223:6:6103:6256	3441943	0	True				
ANR	3442074	IdentifierDecl	index = labs ( _longMsg -> msgID . ip_addr + _longMsg -> msgID . time + _longMsg -> msgID . msgNo ) % SAFE_SOCK_HASH_BUCKET_SIZE		3441943	0					
ANR	3442075	IdentifierDeclType	int		3441943	0					
ANR	3442076	Identifier	index		3441943	1					
ANR	3442077	AssignmentExpression	index = labs ( _longMsg -> msgID . ip_addr + _longMsg -> msgID . time + _longMsg -> msgID . msgNo ) % SAFE_SOCK_HASH_BUCKET_SIZE		3441943	2		=			
ANR	3442078	Identifier	index		3441943	0					
ANR	3442079	MultiplicativeExpression	labs ( _longMsg -> msgID . ip_addr + _longMsg -> msgID . time + _longMsg -> msgID . msgNo ) % SAFE_SOCK_HASH_BUCKET_SIZE		3441943	1		%			
ANR	3442080	CallExpression	labs ( _longMsg -> msgID . ip_addr + _longMsg -> msgID . time + _longMsg -> msgID . msgNo )		3441943	0					
ANR	3442081	Callee	labs		3441943	0					
ANR	3442082	Identifier	labs		3441943	0					
ANR	3442083	ArgumentList	_longMsg -> msgID . ip_addr + _longMsg -> msgID . time + _longMsg -> msgID . msgNo		3441943	1					
ANR	3442084	Argument	_longMsg -> msgID . ip_addr + _longMsg -> msgID . time + _longMsg -> msgID . msgNo		3441943	0					
ANR	3442085	AdditiveExpression	_longMsg -> msgID . ip_addr + _longMsg -> msgID . time + _longMsg -> msgID . msgNo		3441943	0		+			
ANR	3442086	MemberAccess	_longMsg -> msgID . ip_addr		3441943	0					
ANR	3442087	PtrMemberAccess	_longMsg -> msgID		3441943	0					
ANR	3442088	Identifier	_longMsg		3441943	0					
ANR	3442089	Identifier	msgID		3441943	1					
ANR	3442090	Identifier	ip_addr		3441943	1					
ANR	3442091	AdditiveExpression	_longMsg -> msgID . time + _longMsg -> msgID . msgNo		3441943	1		+			
ANR	3442092	MemberAccess	_longMsg -> msgID . time		3441943	0					
ANR	3442093	PtrMemberAccess	_longMsg -> msgID		3441943	0					
ANR	3442094	Identifier	_longMsg		3441943	0					
ANR	3442095	Identifier	msgID		3441943	1					
ANR	3442096	Identifier	time		3441943	1					
ANR	3442097	MemberAccess	_longMsg -> msgID . msgNo		3441943	1					
ANR	3442098	PtrMemberAccess	_longMsg -> msgID		3441943	0					
ANR	3442099	Identifier	_longMsg		3441943	0					
ANR	3442100	Identifier	msgID		3441943	1					
ANR	3442101	Identifier	msgNo		3441943	1					
ANR	3442102	Identifier	SAFE_SOCK_HASH_BUCKET_SIZE		3441943	1					
ANR	3442103	ExpressionStatement	_inMsgs [ index ] = _longMsg -> nextMsg	226:6:6264:6298	3441943	1	True				
ANR	3442104	AssignmentExpression	_inMsgs [ index ] = _longMsg -> nextMsg		3441943	0		=			
ANR	3442105	ArrayIndexing	_inMsgs [ index ]		3441943	0					
ANR	3442106	Identifier	_inMsgs		3441943	0					
ANR	3442107	Identifier	index		3441943	1					
ANR	3442108	PtrMemberAccess	_longMsg -> nextMsg		3441943	1					
ANR	3442109	Identifier	_longMsg		3441943	0					
ANR	3442110	Identifier	nextMsg		3441943	1					
ANR	3442111	IfStatement	if ( _longMsg -> nextMsg )		3441943	2					
ANR	3442112	Condition	_longMsg -> nextMsg	228:8:6315:6331	3441943	0	True				
ANR	3442113	PtrMemberAccess	_longMsg -> nextMsg		3441943	0					
ANR	3442114	Identifier	_longMsg		3441943	0					
ANR	3442115	Identifier	nextMsg		3441943	1					
ANR	3442116	ExpressionStatement	_longMsg -> nextMsg -> prevMsg = _longMsg -> prevMsg	229:6:6340:6386	3441943	1	True				
ANR	3442117	AssignmentExpression	_longMsg -> nextMsg -> prevMsg = _longMsg -> prevMsg		3441943	0		=			
ANR	3442118	PtrMemberAccess	_longMsg -> nextMsg -> prevMsg		3441943	0					
ANR	3442119	PtrMemberAccess	_longMsg -> nextMsg		3441943	0					
ANR	3442120	Identifier	_longMsg		3441943	0					
ANR	3442121	Identifier	nextMsg		3441943	1					
ANR	3442122	Identifier	prevMsg		3441943	1					
ANR	3442123	PtrMemberAccess	_longMsg -> prevMsg		3441943	1					
ANR	3442124	Identifier	_longMsg		3441943	0					
ANR	3442125	Identifier	prevMsg		3441943	1					
ANR	3442126	Statement	delete	231:5:6420:6425	3441943	3	True				
ANR	3442127	ExpressionStatement	_longMsg	231:12:6427:6435	3441943	4	True				
ANR	3442128	Identifier	_longMsg		3441943	0					
ANR	3442129	ExpressionStatement	_longMsg = NULL	232:5:6442:6457	3441943	5	True				
ANR	3442130	AssignmentExpression	_longMsg = NULL		3441943	0		=			
ANR	3442131	Identifier	_longMsg		3441943	0					
ANR	3442132	Identifier	NULL		3441943	1					
ANR	3442133	ElseStatement	else		3441943	0					
ANR	3442134	CompoundStatement		43:11:1238:1238	3441943	0					
ANR	3442135	IfStatement	if ( _shortMsg . consumed ( ) )		3441943	0					
ANR	3442136	Condition	_shortMsg . consumed ( )	234:8:6506:6525	3441943	0	True				
ANR	3442137	CallExpression	_shortMsg . consumed ( )		3441943	0					
ANR	3442138	Callee	_shortMsg . consumed		3441943	0					
ANR	3442139	MemberAccess	_shortMsg . consumed		3441943	0					
ANR	3442140	Identifier	_shortMsg		3441943	0					
ANR	3442141	Identifier	consumed		3441943	1					
ANR	3442142	ArgumentList			3441943	1					
ANR	3442143	ExpressionStatement	ret_val = TRUE	235:6:6534:6548	3441943	1	True				
ANR	3442144	AssignmentExpression	ret_val = TRUE		3441943	0		=			
ANR	3442145	Identifier	ret_val		3441943	0					
ANR	3442146	Identifier	TRUE		3441943	1					
ANR	3442147	ExpressionStatement	_shortMsg . reset ( )	236:5:6555:6572	3441943	1	True				
ANR	3442148	CallExpression	_shortMsg . reset ( )		3441943	0					
ANR	3442149	Callee	_shortMsg . reset		3441943	0					
ANR	3442150	MemberAccess	_shortMsg . reset		3441943	0					
ANR	3442151	Identifier	_shortMsg		3441943	0					
ANR	3442152	Identifier	reset		3441943	1					
ANR	3442153	ArgumentList			3441943	1					
ANR	3442154	ExpressionStatement	_msgReady = false	238:4:6584:6601	3441943	1	True				
ANR	3442155	AssignmentExpression	_msgReady = false		3441943	0		=			
ANR	3442156	Identifier	_msgReady		3441943	0					
ANR	3442157	Identifier	false		3441943	1					
ANR	3442158	ElseStatement	else		3441943	0					
ANR	3442159	CompoundStatement		49:10:1381:1381	3441943	0					
ANR	3442160	ExpressionStatement	ret_val = TRUE	241:4:6648:6662	3441943	0	True				
ANR	3442161	AssignmentExpression	ret_val = TRUE		3441943	0		=			
ANR	3442162	Identifier	ret_val		3441943	0					
ANR	3442163	Identifier	TRUE		3441943	1					
ANR	3442164	ExpressionStatement	resetCrypto ( )	243:12:6681:6694	3441943	9	True				
ANR	3442165	CallExpression	resetCrypto ( )		3441943	0					
ANR	3442166	Callee	resetCrypto		3441943	0					
ANR	3442167	Identifier	resetCrypto		3441943	0					
ANR	3442168	ArgumentList			3441943	1					
ANR	3442169	ExpressionStatement	setTriedAuthentication ( false )	244:3:6699:6728	3441943	10	True				
ANR	3442170	CallExpression	setTriedAuthentication ( false )		3441943	0					
ANR	3442171	Callee	setTriedAuthentication		3441943	0					
ANR	3442172	Identifier	setTriedAuthentication		3441943	0					
ANR	3442173	ArgumentList	false		3441943	1					
ANR	3442174	Argument	false		3441943	0					
ANR	3442175	Identifier	false		3441943	0					
ANR	3442176	BreakStatement	break ;	245:3:6733:6738	3441943	11	True				
ANR	3442177	Label	default :	247:2:6743:6750	3441943	12	True				
ANR	3442178	Identifier	default		3441943	0					
ANR	3442179	ExpressionStatement	resetCrypto ( )	248:12:6764:6777	3441943	13	True				
ANR	3442180	CallExpression	resetCrypto ( )		3441943	0					
ANR	3442181	Callee	resetCrypto		3441943	0					
ANR	3442182	Identifier	resetCrypto		3441943	0					
ANR	3442183	ArgumentList			3441943	1					
ANR	3442184	ExpressionStatement	setTriedAuthentication ( false )	249:12:6791:6820	3441943	14	True				
ANR	3442185	CallExpression	setTriedAuthentication ( false )		3441943	0					
ANR	3442186	Callee	setTriedAuthentication		3441943	0					
ANR	3442187	Identifier	setTriedAuthentication		3441943	0					
ANR	3442188	ArgumentList	false		3441943	1					
ANR	3442189	Argument	false		3441943	0					
ANR	3442190	Identifier	false		3441943	0					
ANR	3442191	BreakStatement	break ;	250:3:6825:6830	3441943	15	True				
ANR	3442192	IfStatement	if ( allow_empty_message_flag )		3441943	4					
ANR	3442193	Condition	allow_empty_message_flag	253:6:6845:6868	3441943	0	True				
ANR	3442194	Identifier	allow_empty_message_flag		3441943	0					
ANR	3442195	CompoundStatement		63:33:1640:1640	3441943	1					
ANR	3442196	ExpressionStatement	allow_empty_message_flag = FALSE	254:2:6876:6908	3441943	0	True				
ANR	3442197	AssignmentExpression	allow_empty_message_flag = FALSE		3441943	0		=			
ANR	3442198	Identifier	allow_empty_message_flag		3441943	0					
ANR	3442199	Identifier	FALSE		3441943	1					
ANR	3442200	ExpressionStatement	ret_val = TRUE	255:2:6912:6926	3441943	1	True				
ANR	3442201	AssignmentExpression	ret_val = TRUE		3441943	0		=			
ANR	3442202	Identifier	ret_val		3441943	0					
ANR	3442203	Identifier	TRUE		3441943	1					
ANR	3442204	ReturnStatement	return ret_val ;	258:1:6933:6947	3441943	5	True				
ANR	3442205	Identifier	ret_val		3441943	0					
ANR	3442206	ReturnType	int		3441943	1					
ANR	3442207	Identifier	SafeSock :: end_of_message		3441943	2					
ANR	3442208	ParameterList			3441943	3					
ANR	3442209	CFGEntryNode	ENTRY		3441943		True				
ANR	3442210	CFGExitNode	EXIT		3441943		True				
ANR	3442211	Symbol	_longMsg -> msgID		3441943						
ANR	3442212	Symbol	_longMsg -> msgID . time		3441943						
ANR	3442213	Symbol	_longMsg -> nextMsg -> prevMsg		3441943						
ANR	3442214	Symbol	* mdChecker_		3441943						
ANR	3442215	Symbol	* index		3441943						
ANR	3442216	Symbol	_sock		3441943						
ANR	3442217	Symbol	_who		3441943						
ANR	3442218	Symbol	_outMsg . sendMsg		3441943						
ANR	3442219	Symbol	allow_empty_message_flag		3441943						
ANR	3442220	Symbol	md		3441943						
ANR	3442221	Symbol	_shortMsg . consumed		3441943						
ANR	3442222	Symbol	SAFE_SOCK_HASH_BUCKET_SIZE		3441943						
ANR	3442223	Symbol	_outMsgID . msgNo		3441943						
ANR	3442224	Symbol	_coding		3441943						
ANR	3442225	Symbol	_longMsg -> consumed		3441943						
ANR	3442226	Symbol	* _longMsg -> prevMsg		3441943						
ANR	3442227	Symbol	NULL		3441943						
ANR	3442228	Symbol	_longMsg -> nextMsg		3441943						
ANR	3442229	Symbol	_msgReady		3441943						
ANR	3442230	Symbol	_outMsgID		3441943						
ANR	3442231	Symbol	false		3441943						
ANR	3442232	Symbol	TRUE		3441943						
ANR	3442233	Symbol	index		3441943						
ANR	3442234	Symbol	_longMsg -> msgID . ip_addr		3441943						
ANR	3442235	Symbol	ret_val		3441943						
ANR	3442236	Symbol	* _longMsg -> nextMsg		3441943						
ANR	3442237	Symbol	sent		3441943						
ANR	3442238	Symbol	* _longMsg		3441943						
ANR	3442239	Symbol	* _inMsgs		3441943						
ANR	3442240	Symbol	_outMsg		3441943						
ANR	3442241	Symbol	_longMsg -> prevMsg		3441943						
ANR	3442242	Symbol	labs		3441943						
ANR	3442243	Symbol	mdChecker_		3441943						
ANR	3442244	Symbol	mdChecker_ -> computeMD		3441943						
ANR	3442245	Symbol	_inMsgs		3441943						
ANR	3442246	Symbol	FALSE		3441943						
ANR	3442247	Symbol	_longMsg -> msgID . msgNo		3441943						
ANR	3442248	Symbol	* * _longMsg		3441943						
ANR	3442249	Symbol	_longMsg		3441943						
ANR	3442250	Symbol	_shortMsg		3441943						
ANR	3442251	Symbol	_longMsg -> prevMsg -> nextMsg		3441943						
ANR	3442252	Function	SafeSock :: peek_end_of_message	261:0:6952:7206							
ANR	3442253	FunctionDef	SafeSock :: peek_end_of_message ()		3442252	0					
ANR	3442254	CompoundStatement		263:0:6989:7206	3442252	0					
ANR	3442255	IfStatement	if ( _msgReady )		3442252	0					
ANR	3442256	Condition	_msgReady	264:4:6995:7003	3442252	0	True				
ANR	3442257	Identifier	_msgReady		3442252	0					
ANR	3442258	CompoundStatement		2:15:16:16	3442252	1					
ANR	3442259	IfStatement	if ( _longMsg )		3442252	0					
ANR	3442260	Condition	_longMsg	265:5:7013:7020	3442252	0	True				
ANR	3442261	Identifier	_longMsg		3442252	0					
ANR	3442262	CompoundStatement		3:15:33:33	3442252	1					
ANR	3442263	IfStatement	if ( _longMsg -> consumed ( ) )		3442252	0					
ANR	3442264	Condition	_longMsg -> consumed ( )	266:6:7056:7075	3442252	0	True				
ANR	3442265	CallExpression	_longMsg -> consumed ( )		3442252	0					
ANR	3442266	Callee	_longMsg -> consumed		3442252	0					
ANR	3442267	PtrMemberAccess	_longMsg -> consumed		3442252	0					
ANR	3442268	Identifier	_longMsg		3442252	0					
ANR	3442269	Identifier	consumed		3442252	1					
ANR	3442270	ArgumentList			3442252	1					
ANR	3442271	CompoundStatement		4:28:88:88	3442252	1					
ANR	3442272	ReturnStatement	return true ;	267:4:7084:7095	3442252	0	True				
ANR	3442273	Identifier	true		3442252	0					
ANR	3442274	ElseStatement	else		3442252	0					
ANR	3442275	CompoundStatement		7:9:121:121	3442252	0					
ANR	3442276	IfStatement	if ( _shortMsg . consumed ( ) )		3442252	0					
ANR	3442277	Condition	_shortMsg . consumed ( )	270:6:7145:7164	3442252	0	True				
ANR	3442278	CallExpression	_shortMsg . consumed ( )		3442252	0					
ANR	3442279	Callee	_shortMsg . consumed		3442252	0					
ANR	3442280	MemberAccess	_shortMsg . consumed		3442252	0					
ANR	3442281	Identifier	_shortMsg		3442252	0					
ANR	3442282	Identifier	consumed		3442252	1					
ANR	3442283	ArgumentList			3442252	1					
ANR	3442284	ReturnStatement	return true ;	271:4:7171:7182	3442252	1	True				
ANR	3442285	Identifier	true		3442252	0					
ANR	3442286	ReturnStatement	return false ;	274:1:7192:7204	3442252	1	True				
ANR	3442287	Identifier	false		3442252	0					
ANR	3442288	ReturnType	bool		3442252	1					
ANR	3442289	Identifier	SafeSock :: peek_end_of_message		3442252	2					
ANR	3442290	ParameterList			3442252	3					
ANR	3442291	CFGEntryNode	ENTRY		3442252		True				
ANR	3442292	CFGExitNode	EXIT		3442252		True				
ANR	3442293	Symbol	_longMsg -> consumed		3442252						
ANR	3442294	Symbol	_msgReady		3442252						
ANR	3442295	Symbol	true		3442252						
ANR	3442296	Symbol	_shortMsg . consumed		3442252						
ANR	3442297	Symbol	false		3442252						
ANR	3442298	Symbol	_longMsg		3442252						
ANR	3442299	Symbol	_shortMsg		3442252						
ANR	3442300	Symbol	* _longMsg		3442252						
ANR	3442301	Function	SafeSock :: my_ip_str	277:0:7209:8400							
ANR	3442302	FunctionDef	SafeSock :: my_ip_str ()		3442301	0					
ANR	3442303	CompoundStatement		279:0:7244:8400	3442301	0					
ANR	3442304	IfStatement	if ( _state != sock_connect )		3442301	0					
ANR	3442305	Condition	_state != sock_connect	286:4:7568:7589	3442301	0	True				
ANR	3442306	EqualityExpression	_state != sock_connect		3442301	0		!=			
ANR	3442307	Identifier	_state		3442301	0					
ANR	3442308	Identifier	sock_connect		3442301	1					
ANR	3442309	CompoundStatement		8:28:347:347	3442301	1					
ANR	3442310	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: SafeSock::sender_ip_str() called on socket tht is not in connected state\\n"" )"	287:2:7596:7697	3442301	0	True				
ANR	3442311	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: SafeSock::sender_ip_str() called on socket tht is not in connected state\\n"" )"		3442301	0					
ANR	3442312	Callee	dprintf		3442301	0					
ANR	3442313	Identifier	dprintf		3442301	0					
ANR	3442314	ArgumentList	D_ALWAYS		3442301	1					
ANR	3442315	Argument	D_ALWAYS		3442301	0					
ANR	3442316	Identifier	D_ALWAYS		3442301	0					
ANR	3442317	Argument	"""ERROR: SafeSock::sender_ip_str() called on socket tht is not in connected state\\n"""		3442301	1					
ANR	3442318	PrimaryExpression	"""ERROR: SafeSock::sender_ip_str() called on socket tht is not in connected state\\n"""		3442301	0					
ANR	3442319	ReturnStatement	return NULL ;	288:2:7701:7712	3442301	1	True				
ANR	3442320	Identifier	NULL		3442301	0					
ANR	3442321	IfStatement	if ( _my_ip_buf [ 0 ] )		3442301	1					
ANR	3442322	Condition	_my_ip_buf [ 0 ]	291:4:7722:7734	3442301	0	True				
ANR	3442323	ArrayIndexing	_my_ip_buf [ 0 ]		3442301	0					
ANR	3442324	Identifier	_my_ip_buf		3442301	0					
ANR	3442325	PrimaryExpression	0		3442301	1					
ANR	3442326	CompoundStatement		13:19:492:492	3442301	1					
ANR	3442327	ReturnStatement	return _my_ip_buf ;	293:2:7767:7784	3442301	0	True				
ANR	3442328	Identifier	_my_ip_buf		3442301	0					
ANR	3442329	IdentifierDeclStatement	SafeSock s ;	296:1:7791:7801	3442301	2	True				
ANR	3442330	IdentifierDecl	s		3442301	0					
ANR	3442331	IdentifierDeclType	SafeSock		3442301	0					
ANR	3442332	Identifier	s		3442301	1					
ANR	3442333	ExpressionStatement	s . bind ( true )	297:1:7804:7816	3442301	3	True				
ANR	3442334	CallExpression	s . bind ( true )		3442301	0					
ANR	3442335	Callee	s . bind		3442301	0					
ANR	3442336	MemberAccess	s . bind		3442301	0					
ANR	3442337	Identifier	s		3442301	0					
ANR	3442338	Identifier	bind		3442301	1					
ANR	3442339	ArgumentList	true		3442301	1					
ANR	3442340	Argument	true		3442301	0					
ANR	3442341	Identifier	true		3442301	0					
ANR	3442342	IfStatement	if ( s . _state != sock_bound )		3442301	4					
ANR	3442343	Condition	s . _state != sock_bound	299:5:7824:7845	3442301	0	True				
ANR	3442344	EqualityExpression	s . _state != sock_bound		3442301	0		!=			
ANR	3442345	MemberAccess	s . _state		3442301	0					
ANR	3442346	Identifier	s		3442301	0					
ANR	3442347	Identifier	_state		3442301	1					
ANR	3442348	Identifier	sock_bound		3442301	1					
ANR	3442349	CompoundStatement		21:29:603:603	3442301	1					
ANR	3442350	ExpressionStatement	"dprintf ( D_ALWAYS , ""SafeSock::my_ip_str() failed to bind: _state = %d\\n"" , s . _state )"	300:2:7852:7949	3442301	0	True				
ANR	3442351	CallExpression	"dprintf ( D_ALWAYS , ""SafeSock::my_ip_str() failed to bind: _state = %d\\n"" , s . _state )"		3442301	0					
ANR	3442352	Callee	dprintf		3442301	0					
ANR	3442353	Identifier	dprintf		3442301	0					
ANR	3442354	ArgumentList	D_ALWAYS		3442301	1					
ANR	3442355	Argument	D_ALWAYS		3442301	0					
ANR	3442356	Identifier	D_ALWAYS		3442301	0					
ANR	3442357	Argument	"""SafeSock::my_ip_str() failed to bind: _state = %d\\n"""		3442301	1					
ANR	3442358	PrimaryExpression	"""SafeSock::my_ip_str() failed to bind: _state = %d\\n"""		3442301	0					
ANR	3442359	Argument	s . _state		3442301	2					
ANR	3442360	MemberAccess	s . _state		3442301	0					
ANR	3442361	Identifier	s		3442301	0					
ANR	3442362	Identifier	_state		3442301	1					
ANR	3442363	ReturnStatement	return NULL ;	303:2:7954:7965	3442301	1	True				
ANR	3442364	Identifier	NULL		3442301	0					
ANR	3442365	IfStatement	"if ( condor_connect ( s . _sock , _who ) != 0 )"		3442301	5					
ANR	3442366	Condition	"condor_connect ( s . _sock , _who ) != 0"	306:5:7976:8009	3442301	0	True				
ANR	3442367	EqualityExpression	"condor_connect ( s . _sock , _who ) != 0"		3442301	0		!=			
ANR	3442368	CallExpression	"condor_connect ( s . _sock , _who )"		3442301	0					
ANR	3442369	Callee	condor_connect		3442301	0					
ANR	3442370	Identifier	condor_connect		3442301	0					
ANR	3442371	ArgumentList	s . _sock		3442301	1					
ANR	3442372	Argument	s . _sock		3442301	0					
ANR	3442373	MemberAccess	s . _sock		3442301	0					
ANR	3442374	Identifier	s		3442301	0					
ANR	3442375	Identifier	_sock		3442301	1					
ANR	3442376	Argument	_who		3442301	1					
ANR	3442377	Identifier	_who		3442301	0					
ANR	3442378	PrimaryExpression	0		3442301	1					
ANR	3442379	CompoundStatement		30:2:790:821	3442301	1					
ANR	3442380	IdentifierDeclStatement	int lasterr = WSAGetLastError ( ) ;	308:2:8035:8066	3442301	0	True				
ANR	3442381	IdentifierDecl	lasterr = WSAGetLastError ( )		3442301	0					
ANR	3442382	IdentifierDeclType	int		3442301	0					
ANR	3442383	Identifier	lasterr		3442301	1					
ANR	3442384	AssignmentExpression	lasterr = WSAGetLastError ( )		3442301	2		=			
ANR	3442385	Identifier	lasterr		3442301	0					
ANR	3442386	CallExpression	WSAGetLastError ( )		3442301	1					
ANR	3442387	Callee	WSAGetLastError		3442301	0					
ANR	3442388	Identifier	WSAGetLastError		3442301	0					
ANR	3442389	ArgumentList			3442301	1					
ANR	3442390	ExpressionStatement	"dprintf ( D_ALWAYS , ""SafeSock::my_ip_str() failed to connect, errno = %d\\n"" , lasterr )"	309:2:8070:8160	3442301	1	True				
ANR	3442391	CallExpression	"dprintf ( D_ALWAYS , ""SafeSock::my_ip_str() failed to connect, errno = %d\\n"" , lasterr )"		3442301	0					
ANR	3442392	Callee	dprintf		3442301	0					
ANR	3442393	Identifier	dprintf		3442301	0					
ANR	3442394	ArgumentList	D_ALWAYS		3442301	1					
ANR	3442395	Argument	D_ALWAYS		3442301	0					
ANR	3442396	Identifier	D_ALWAYS		3442301	0					
ANR	3442397	Argument	"""SafeSock::my_ip_str() failed to connect, errno = %d\\n"""		3442301	1					
ANR	3442398	PrimaryExpression	"""SafeSock::my_ip_str() failed to connect, errno = %d\\n"""		3442301	0					
ANR	3442399	Argument	lasterr		3442301	2					
ANR	3442400	Identifier	lasterr		3442301	0					
ANR	3442401	ReturnStatement	return NULL ;	315:2:8269:8280	3442301	2	True				
ANR	3442402	Identifier	NULL		3442301	0					
ANR	3442403	IdentifierDeclStatement	condor_sockaddr addr ;	318:1:8287:8307	3442301	6	True				
ANR	3442404	IdentifierDecl	addr		3442301	0					
ANR	3442405	IdentifierDeclType	condor_sockaddr		3442301	0					
ANR	3442406	Identifier	addr		3442301	1					
ANR	3442407	ExpressionStatement	addr = s . my_addr ( )	319:1:8310:8328	3442301	7	True				
ANR	3442408	AssignmentExpression	addr = s . my_addr ( )		3442301	0		=			
ANR	3442409	Identifier	addr		3442301	0					
ANR	3442410	CallExpression	s . my_addr ( )		3442301	1					
ANR	3442411	Callee	s . my_addr		3442301	0					
ANR	3442412	MemberAccess	s . my_addr		3442301	0					
ANR	3442413	Identifier	s		3442301	0					
ANR	3442414	Identifier	my_addr		3442301	1					
ANR	3442415	ArgumentList			3442301	1					
ANR	3442416	ExpressionStatement	"strcpy ( _my_ip_buf , addr . to_ip_string ( ) . Value ( ) )"	320:1:8331:8378	3442301	8	True				
ANR	3442417	CallExpression	"strcpy ( _my_ip_buf , addr . to_ip_string ( ) . Value ( ) )"		3442301	0					
ANR	3442418	Callee	strcpy		3442301	0					
ANR	3442419	Identifier	strcpy		3442301	0					
ANR	3442420	ArgumentList	_my_ip_buf		3442301	1					
ANR	3442421	Argument	_my_ip_buf		3442301	0					
ANR	3442422	Identifier	_my_ip_buf		3442301	0					
ANR	3442423	Argument	addr . to_ip_string ( ) . Value ( )		3442301	1					
ANR	3442424	CallExpression	addr . to_ip_string ( ) . Value ( )		3442301	0					
ANR	3442425	Callee	addr . to_ip_string ( ) . Value		3442301	0					
ANR	3442426	MemberAccess	addr . to_ip_string ( ) . Value		3442301	0					
ANR	3442427	CallExpression	addr . to_ip_string ( )		3442301	0					
ANR	3442428	Callee	addr . to_ip_string		3442301	0					
ANR	3442429	MemberAccess	addr . to_ip_string		3442301	0					
ANR	3442430	Identifier	addr		3442301	0					
ANR	3442431	Identifier	to_ip_string		3442301	1					
ANR	3442432	ArgumentList			3442301	1					
ANR	3442433	Identifier	Value		3442301	1					
ANR	3442434	ArgumentList			3442301	1					
ANR	3442435	ReturnStatement	return _my_ip_buf ;	321:1:8381:8398	3442301	9	True				
ANR	3442436	Identifier	_my_ip_buf		3442301	0					
ANR	3442437	ReturnType	const char *		3442301	1					
ANR	3442438	Identifier	SafeSock :: my_ip_str		3442301	2					
ANR	3442439	ParameterList			3442301	3					
ANR	3442440	CFGEntryNode	ENTRY		3442301		True				
ANR	3442441	CFGExitNode	EXIT		3442301		True				
ANR	3442442	Symbol	s . my_addr		3442301						
ANR	3442443	Symbol	s . _state		3442301						
ANR	3442444	Symbol	addr . to_ip_string		3442301						
ANR	3442445	Symbol	NULL		3442301						
ANR	3442446	Symbol	* _my_ip_buf		3442301						
ANR	3442447	Symbol	condor_connect		3442301						
ANR	3442448	Symbol	D_ALWAYS		3442301						
ANR	3442449	Symbol	_my_ip_buf		3442301						
ANR	3442450	Symbol	s . _sock		3442301						
ANR	3442451	Symbol	WSAGetLastError		3442301						
ANR	3442452	Symbol	sock_bound		3442301						
ANR	3442453	Symbol	addr . to_ip_string ( ) . Value		3442301						
ANR	3442454	Symbol	sock_connect		3442301						
ANR	3442455	Symbol	s		3442301						
ANR	3442456	Symbol	_who		3442301						
ANR	3442457	Symbol	_state		3442301						
ANR	3442458	Symbol	true		3442301						
ANR	3442459	Symbol	addr		3442301						
ANR	3442460	Symbol	lasterr		3442301						
ANR	3442461	DeclStmt									
ANR	3442462	Decl							int	int	retval
ANR	3442463	Function	SafeSock :: put_bytes	374:0:9594:10642							
ANR	3442464	FunctionDef	"SafeSock :: put_bytes (const void * data , int sz)"		3442463	0					
ANR	3442465	CompoundStatement		375:0:9644:10642	3442463	0					
ANR	3442466	IdentifierDeclStatement	"int bytesPut , l_out ;"	376:1:9647:9666	3442463	0	True				
ANR	3442467	IdentifierDecl	bytesPut		3442463	0					
ANR	3442468	IdentifierDeclType	int		3442463	0					
ANR	3442469	Identifier	bytesPut		3442463	1					
ANR	3442470	IdentifierDecl	l_out		3442463	1					
ANR	3442471	IdentifierDeclType	int		3442463	0					
ANR	3442472	Identifier	l_out		3442463	1					
ANR	3442473	IdentifierDeclStatement	unsigned char * dta = 0 ;	377:4:9672:9695	3442463	1	True				
ANR	3442474	IdentifierDecl	* dta = 0		3442463	0					
ANR	3442475	IdentifierDeclType	unsigned char *		3442463	0					
ANR	3442476	Identifier	dta		3442463	1					
ANR	3442477	AssignmentExpression	* dta = 0		3442463	2		=			
ANR	3442478	Identifier	dta		3442463	0					
ANR	3442479	PrimaryExpression	0		3442463	1					
ANR	3442480	IfStatement	if ( get_encryption ( ) )		3442463	2					
ANR	3442481	Condition	get_encryption ( )	386:8:10002:10017	3442463	0	True				
ANR	3442482	CallExpression	get_encryption ( )		3442463	0					
ANR	3442483	Callee	get_encryption		3442463	0					
ANR	3442484	Identifier	get_encryption		3442463	0					
ANR	3442485	ArgumentList			3442463	1					
ANR	3442486	CompoundStatement		12:26:375:375	3442463	1					
ANR	3442487	IfStatement	"if ( ! wrap ( ( unsigned char * ) data , sz , dta , l_out ) )"		3442463	0					
ANR	3442488	Condition	"! wrap ( ( unsigned char * ) data , sz , dta , l_out )"	387:12:10034:10078	3442463	0	True				
ANR	3442489	UnaryOperationExpression	"! wrap ( ( unsigned char * ) data , sz , dta , l_out )"		3442463	0					
ANR	3442490	UnaryOperator	!		3442463	0					
ANR	3442491	CallExpression	"wrap ( ( unsigned char * ) data , sz , dta , l_out )"		3442463	1					
ANR	3442492	Callee	wrap		3442463	0					
ANR	3442493	Identifier	wrap		3442463	0					
ANR	3442494	ArgumentList	( unsigned char * ) data		3442463	1					
ANR	3442495	Argument	( unsigned char * ) data		3442463	0					
ANR	3442496	CastExpression	( unsigned char * ) data		3442463	0					
ANR	3442497	CastTarget	unsigned char *		3442463	0					
ANR	3442498	Identifier	data		3442463	1					
ANR	3442499	Argument	sz		3442463	1					
ANR	3442500	Identifier	sz		3442463	0					
ANR	3442501	Argument	dta		3442463	2					
ANR	3442502	Identifier	dta		3442463	0					
ANR	3442503	Argument	l_out		3442463	3					
ANR	3442504	Identifier	l_out		3442463	0					
ANR	3442505	CompoundStatement		13:59:436:436	3442463	1					
ANR	3442506	ExpressionStatement	"dprintf ( D_SECURITY , ""Encryption failed\\n"" )"	388:12:10096:10138	3442463	0	True				
ANR	3442507	CallExpression	"dprintf ( D_SECURITY , ""Encryption failed\\n"" )"		3442463	0					
ANR	3442508	Callee	dprintf		3442463	0					
ANR	3442509	Identifier	dprintf		3442463	0					
ANR	3442510	ArgumentList	D_SECURITY		3442463	1					
ANR	3442511	Argument	D_SECURITY		3442463	0					
ANR	3442512	Identifier	D_SECURITY		3442463	0					
ANR	3442513	Argument	"""Encryption failed\\n"""		3442463	1					
ANR	3442514	PrimaryExpression	"""Encryption failed\\n"""		3442463	0					
ANR	3442515	ReturnStatement	return - 1 ;	389:12:10152:10161	3442463	1	True				
ANR	3442516	UnaryOperationExpression	- 1		3442463	0					
ANR	3442517	UnaryOperator	-		3442463	0					
ANR	3442518	PrimaryExpression	1		3442463	1					
ANR	3442519	ElseStatement	else		3442463	0					
ANR	3442520	CompoundStatement		18:9:566:566	3442463	0					
ANR	3442521	ExpressionStatement	dta = ( unsigned char * ) malloc ( sz )	393:8:10221:10255	3442463	0	True				
ANR	3442522	AssignmentExpression	dta = ( unsigned char * ) malloc ( sz )		3442463	0		=			
ANR	3442523	Identifier	dta		3442463	0					
ANR	3442524	CastExpression	( unsigned char * ) malloc ( sz )		3442463	1					
ANR	3442525	CastTarget	unsigned char *		3442463	0					
ANR	3442526	CallExpression	malloc ( sz )		3442463	1					
ANR	3442527	Callee	malloc		3442463	0					
ANR	3442528	Identifier	malloc		3442463	0					
ANR	3442529	ArgumentList	sz		3442463	1					
ANR	3442530	Argument	sz		3442463	0					
ANR	3442531	Identifier	sz		3442463	0					
ANR	3442532	ExpressionStatement	"memcpy ( dta , data , sz )"	394:8:10265:10286	3442463	1	True				
ANR	3442533	CallExpression	"memcpy ( dta , data , sz )"		3442463	0					
ANR	3442534	Callee	memcpy		3442463	0					
ANR	3442535	Identifier	memcpy		3442463	0					
ANR	3442536	ArgumentList	dta		3442463	1					
ANR	3442537	Argument	dta		3442463	0					
ANR	3442538	Identifier	dta		3442463	0					
ANR	3442539	Argument	data		3442463	1					
ANR	3442540	Identifier	data		3442463	0					
ANR	3442541	Argument	sz		3442463	2					
ANR	3442542	Identifier	sz		3442463	0					
ANR	3442543	IfStatement	if ( mdChecker_ )		3442463	3					
ANR	3442544	Condition	mdChecker_	398:8:10334:10343	3442463	0	True				
ANR	3442545	Identifier	mdChecker_		3442463	0					
ANR	3442546	CompoundStatement		24:20:701:701	3442463	1					
ANR	3442547	ExpressionStatement	"mdChecker_ -> addMD ( dta , sz )"	399:8:10356:10382	3442463	0	True				
ANR	3442548	CallExpression	"mdChecker_ -> addMD ( dta , sz )"		3442463	0					
ANR	3442549	Callee	mdChecker_ -> addMD		3442463	0					
ANR	3442550	PtrMemberAccess	mdChecker_ -> addMD		3442463	0					
ANR	3442551	Identifier	mdChecker_		3442463	0					
ANR	3442552	Identifier	addMD		3442463	1					
ANR	3442553	ArgumentList	dta		3442463	1					
ANR	3442554	Argument	dta		3442463	0					
ANR	3442555	Identifier	dta		3442463	0					
ANR	3442556	Argument	sz		3442463	1					
ANR	3442557	Identifier	sz		3442463	0					
ANR	3442558	ExpressionStatement	"bytesPut = _outMsg . putn ( ( char * ) dta , sz )"	406:4:10557:10597	3442463	4	True				
ANR	3442559	AssignmentExpression	"bytesPut = _outMsg . putn ( ( char * ) dta , sz )"		3442463	0		=			
ANR	3442560	Identifier	bytesPut		3442463	0					
ANR	3442561	CallExpression	"_outMsg . putn ( ( char * ) dta , sz )"		3442463	1					
ANR	3442562	Callee	_outMsg . putn		3442463	0					
ANR	3442563	MemberAccess	_outMsg . putn		3442463	0					
ANR	3442564	Identifier	_outMsg		3442463	0					
ANR	3442565	Identifier	putn		3442463	1					
ANR	3442566	ArgumentList	( char * ) dta		3442463	1					
ANR	3442567	Argument	( char * ) dta		3442463	0					
ANR	3442568	CastExpression	( char * ) dta		3442463	0					
ANR	3442569	CastTarget	char *		3442463	0					
ANR	3442570	Identifier	dta		3442463	1					
ANR	3442571	Argument	sz		3442463	1					
ANR	3442572	Identifier	sz		3442463	0					
ANR	3442573	ExpressionStatement	free ( dta )	408:4:10608:10617	3442463	5	True				
ANR	3442574	CallExpression	free ( dta )		3442463	0					
ANR	3442575	Callee	free		3442463	0					
ANR	3442576	Identifier	free		3442463	0					
ANR	3442577	ArgumentList	dta		3442463	1					
ANR	3442578	Argument	dta		3442463	0					
ANR	3442579	Identifier	dta		3442463	0					
ANR	3442580	ReturnStatement	return bytesPut ;	410:1:10625:10640	3442463	6	True				
ANR	3442581	Identifier	bytesPut		3442463	0					
ANR	3442582	ReturnType	int		3442463	1					
ANR	3442583	Identifier	SafeSock :: put_bytes		3442463	2					
ANR	3442584	ParameterList	"const void * data , int sz"		3442463	3					
ANR	3442585	Parameter	const void * data	374:24:9618:9633	3442463	0	True				
ANR	3442586	ParameterType	const void *		3442463	0					
ANR	3442587	Identifier	data		3442463	1					
ANR	3442588	Parameter	int sz	374:42:9636:9641	3442463	1	True				
ANR	3442589	ParameterType	int		3442463	0					
ANR	3442590	Identifier	sz		3442463	1					
ANR	3442591	CFGEntryNode	ENTRY		3442463		True				
ANR	3442592	CFGExitNode	EXIT		3442463		True				
ANR	3442593	Symbol	dta		3442463						
ANR	3442594	Symbol	malloc		3442463						
ANR	3442595	Symbol	_outMsg		3442463						
ANR	3442596	Symbol	data		3442463						
ANR	3442597	Symbol	D_SECURITY		3442463						
ANR	3442598	Symbol	_outMsg . putn		3442463						
ANR	3442599	Symbol	l_out		3442463						
ANR	3442600	Symbol	sz		3442463						
ANR	3442601	Symbol	mdChecker_		3442463						
ANR	3442602	Symbol	bytesPut		3442463						
ANR	3442603	Symbol	wrap		3442463						
ANR	3442604	Symbol	get_encryption		3442463						
ANR	3442605	Function	SafeSock :: get_bytes	424:0:11019:12754							
ANR	3442606	FunctionDef	"SafeSock :: get_bytes (void * dta , int size)"		3442605	0					
ANR	3442607	CompoundStatement		425:0:11064:12754	3442605	0					
ANR	3442608	ExpressionStatement	ASSERT ( size > 0 )	426:1:11067:11085	3442605	0	True				
ANR	3442609	CallExpression	ASSERT ( size > 0 )		3442605	0					
ANR	3442610	Callee	ASSERT		3442605	0					
ANR	3442611	Identifier	ASSERT		3442605	0					
ANR	3442612	ArgumentList	size > 0		3442605	1					
ANR	3442613	Argument	size > 0		3442605	0					
ANR	3442614	RelationalExpression	size > 0		3442605	0		>			
ANR	3442615	Identifier	size		3442605	0					
ANR	3442616	PrimaryExpression	0		3442605	1					
ANR	3442617	WhileStatement	while ( ! _msgReady )		3442605	1					
ANR	3442618	Condition	! _msgReady	427:7:11094:11103	3442605	0	True				
ANR	3442619	UnaryOperationExpression	! _msgReady		3442605	0					
ANR	3442620	UnaryOperator	!		3442605	0					
ANR	3442621	Identifier	_msgReady		3442605	1					
ANR	3442622	CompoundStatement		3:19:41:41	3442605	1					
ANR	3442623	IfStatement	if ( _timeout > 0 )		3442605	0					
ANR	3442624	Condition	_timeout > 0	428:5:11113:11124	3442605	0	True				
ANR	3442625	RelationalExpression	_timeout > 0		3442605	0		>			
ANR	3442626	Identifier	_timeout		3442605	0					
ANR	3442627	PrimaryExpression	0		3442605	1					
ANR	3442628	CompoundStatement		5:3:67:84	3442605	1					
ANR	3442629	IdentifierDeclStatement	Selector selector ;	429:3:11132:11149	3442605	0	True				
ANR	3442630	IdentifierDecl	selector		3442605	0					
ANR	3442631	IdentifierDeclType	Selector		3442605	0					
ANR	3442632	Identifier	selector		3442605	1					
ANR	3442633	ExpressionStatement	selector . set_timeout ( _timeout )	430:3:11154:11186	3442605	1	True				
ANR	3442634	CallExpression	selector . set_timeout ( _timeout )		3442605	0					
ANR	3442635	Callee	selector . set_timeout		3442605	0					
ANR	3442636	MemberAccess	selector . set_timeout		3442605	0					
ANR	3442637	Identifier	selector		3442605	0					
ANR	3442638	Identifier	set_timeout		3442605	1					
ANR	3442639	ArgumentList	_timeout		3442605	1					
ANR	3442640	Argument	_timeout		3442605	0					
ANR	3442641	Identifier	_timeout		3442605	0					
ANR	3442642	ExpressionStatement	"selector . add_fd ( _sock , Selector :: IO_READ )"	431:3:11191:11234	3442605	2	True				
ANR	3442643	CallExpression	"selector . add_fd ( _sock , Selector :: IO_READ )"		3442605	0					
ANR	3442644	Callee	selector . add_fd		3442605	0					
ANR	3442645	MemberAccess	selector . add_fd		3442605	0					
ANR	3442646	Identifier	selector		3442605	0					
ANR	3442647	Identifier	add_fd		3442605	1					
ANR	3442648	ArgumentList	_sock		3442605	1					
ANR	3442649	Argument	_sock		3442605	0					
ANR	3442650	Identifier	_sock		3442605	0					
ANR	3442651	Argument	Selector :: IO_READ		3442605	1					
ANR	3442652	Identifier	Selector :: IO_READ		3442605	0					
ANR	3442653	ExpressionStatement	selector . execute ( )	433:3:11244:11262	3442605	3	True				
ANR	3442654	CallExpression	selector . execute ( )		3442605	0					
ANR	3442655	Callee	selector . execute		3442605	0					
ANR	3442656	MemberAccess	selector . execute		3442605	0					
ANR	3442657	Identifier	selector		3442605	0					
ANR	3442658	Identifier	execute		3442605	1					
ANR	3442659	ArgumentList			3442605	1					
ANR	3442660	IfStatement	if ( selector . timed_out ( ) )		3442605	4					
ANR	3442661	Condition	selector . timed_out ( )	434:8:11272:11291	3442605	0	True				
ANR	3442662	CallExpression	selector . timed_out ( )		3442605	0					
ANR	3442663	Callee	selector . timed_out		3442605	0					
ANR	3442664	MemberAccess	selector . timed_out		3442605	0					
ANR	3442665	Identifier	selector		3442605	0					
ANR	3442666	Identifier	timed_out		3442605	1					
ANR	3442667	ArgumentList			3442605	1					
ANR	3442668	CompoundStatement		10:31:230:230	3442605	1					
ANR	3442669	ReturnStatement	return 0 ;	435:4:11301:11309	3442605	0	True				
ANR	3442670	PrimaryExpression	0		3442605	0					
ANR	3442671	ElseStatement	else		3442605	0					
ANR	3442672	IfStatement	if ( ! selector . has_ready ( ) )		3442605	0					
ANR	3442673	Condition	! selector . has_ready ( )	436:15:11326:11346	3442605	0	True				
ANR	3442674	UnaryOperationExpression	! selector . has_ready ( )		3442605	0					
ANR	3442675	UnaryOperator	!		3442605	0					
ANR	3442676	CallExpression	selector . has_ready ( )		3442605	1					
ANR	3442677	Callee	selector . has_ready		3442605	0					
ANR	3442678	MemberAccess	selector . has_ready		3442605	0					
ANR	3442679	Identifier	selector		3442605	0					
ANR	3442680	Identifier	has_ready		3442605	1					
ANR	3442681	ArgumentList			3442605	1					
ANR	3442682	CompoundStatement		12:39:285:285	3442605	1					
ANR	3442683	ExpressionStatement	"dprintf ( D_NETWORK , ""select returns %d, recv failed\\n"" , selector . select_retval ( ) )"	437:5:11357:11444	3442605	0	True				
ANR	3442684	CallExpression	"dprintf ( D_NETWORK , ""select returns %d, recv failed\\n"" , selector . select_retval ( ) )"		3442605	0					
ANR	3442685	Callee	dprintf		3442605	0					
ANR	3442686	Identifier	dprintf		3442605	0					
ANR	3442687	ArgumentList	D_NETWORK		3442605	1					
ANR	3442688	Argument	D_NETWORK		3442605	0					
ANR	3442689	Identifier	D_NETWORK		3442605	0					
ANR	3442690	Argument	"""select returns %d, recv failed\\n"""		3442605	1					
ANR	3442691	PrimaryExpression	"""select returns %d, recv failed\\n"""		3442605	0					
ANR	3442692	Argument	selector . select_retval ( )		3442605	2					
ANR	3442693	CallExpression	selector . select_retval ( )		3442605	0					
ANR	3442694	Callee	selector . select_retval		3442605	0					
ANR	3442695	MemberAccess	selector . select_retval		3442605	0					
ANR	3442696	Identifier	selector		3442605	0					
ANR	3442697	Identifier	select_retval		3442605	1					
ANR	3442698	ArgumentList			3442605	1					
ANR	3442699	ReturnStatement	return 0 ;	439:5:11451:11459	3442605	1	True				
ANR	3442700	PrimaryExpression	0		3442605	0					
ANR	3442701	ExpressionStatement	( void ) handle_incoming_packet ( )	442:2:11472:11502	3442605	1	True				
ANR	3442702	CastExpression	( void ) handle_incoming_packet ( )		3442605	0					
ANR	3442703	CastTarget	void		3442605	0					
ANR	3442704	CallExpression	handle_incoming_packet ( )		3442605	1					
ANR	3442705	Callee	handle_incoming_packet		3442605	0					
ANR	3442706	Identifier	handle_incoming_packet		3442605	0					
ANR	3442707	ArgumentList			3442605	1					
ANR	3442708	IdentifierDeclStatement	char * tempBuf = ( char * ) malloc ( size ) ;	445:1:11509:11545	3442605	2	True				
ANR	3442709	IdentifierDecl	* tempBuf = ( char * ) malloc ( size )		3442605	0					
ANR	3442710	IdentifierDeclType	char *		3442605	0					
ANR	3442711	Identifier	tempBuf		3442605	1					
ANR	3442712	AssignmentExpression	* tempBuf = ( char * ) malloc ( size )		3442605	2		=			
ANR	3442713	Identifier	tempBuf		3442605	0					
ANR	3442714	CastExpression	( char * ) malloc ( size )		3442605	1					
ANR	3442715	CastTarget	char *		3442605	0					
ANR	3442716	CallExpression	malloc ( size )		3442605	1					
ANR	3442717	Callee	malloc		3442605	0					
ANR	3442718	Identifier	malloc		3442605	0					
ANR	3442719	ArgumentList	size		3442605	1					
ANR	3442720	Argument	size		3442605	0					
ANR	3442721	Identifier	size		3442605	0					
ANR	3442722	IfStatement	if ( ! tempBuf )		3442605	3					
ANR	3442723	Condition	! tempBuf	446:8:11555:11562	3442605	0	True				
ANR	3442724	UnaryOperationExpression	! tempBuf		3442605	0					
ANR	3442725	UnaryOperator	!		3442605	0					
ANR	3442726	Identifier	tempBuf		3442605	1					
ANR	3442727	CompoundStatement		22:18:500:500	3442605	1					
ANR	3442728	ExpressionStatement	"EXCEPT ( ""malloc failed"" )"	446:20:11567:11590	3442605	0	True				
ANR	3442729	CallExpression	"EXCEPT ( ""malloc failed"" )"		3442605	0					
ANR	3442730	Callee	EXCEPT		3442605	0					
ANR	3442731	Identifier	EXCEPT		3442605	0					
ANR	3442732	ArgumentList	"""malloc failed"""		3442605	1					
ANR	3442733	Argument	"""malloc failed"""		3442605	0					
ANR	3442734	PrimaryExpression	"""malloc failed"""		3442605	0					
ANR	3442735	IdentifierDeclStatement	"int readSize , length ;"	447:1:11595:11615	3442605	4	True				
ANR	3442736	IdentifierDecl	readSize		3442605	0					
ANR	3442737	IdentifierDeclType	int		3442605	0					
ANR	3442738	Identifier	readSize		3442605	1					
ANR	3442739	IdentifierDecl	length		3442605	1					
ANR	3442740	IdentifierDeclType	int		3442605	0					
ANR	3442741	Identifier	length		3442605	1					
ANR	3442742	IdentifierDeclStatement	unsigned char * dec ;	448:4:11621:11640	3442605	5	True				
ANR	3442743	IdentifierDecl	* dec		3442605	0					
ANR	3442744	IdentifierDeclType	unsigned char *		3442605	0					
ANR	3442745	Identifier	dec		3442605	1					
ANR	3442746	IfStatement	if ( _longMsg )		3442605	6					
ANR	3442747	Condition	_longMsg	450:4:11647:11654	3442605	0	True				
ANR	3442748	Identifier	_longMsg		3442605	0					
ANR	3442749	CompoundStatement		26:14:592:592	3442605	1					
ANR	3442750	ExpressionStatement	"readSize = _longMsg -> getn ( tempBuf , size )"	452:8:11692:11732	3442605	0	True				
ANR	3442751	AssignmentExpression	"readSize = _longMsg -> getn ( tempBuf , size )"		3442605	0		=			
ANR	3442752	Identifier	readSize		3442605	0					
ANR	3442753	CallExpression	"_longMsg -> getn ( tempBuf , size )"		3442605	1					
ANR	3442754	Callee	_longMsg -> getn		3442605	0					
ANR	3442755	PtrMemberAccess	_longMsg -> getn		3442605	0					
ANR	3442756	Identifier	_longMsg		3442605	0					
ANR	3442757	Identifier	getn		3442605	1					
ANR	3442758	ArgumentList	tempBuf		3442605	1					
ANR	3442759	Argument	tempBuf		3442605	0					
ANR	3442760	Identifier	tempBuf		3442605	0					
ANR	3442761	Argument	size		3442605	1					
ANR	3442762	Identifier	size		3442605	0					
ANR	3442763	ElseStatement	else		3442605	0					
ANR	3442764	CompoundStatement		30:6:681:681	3442605	0					
ANR	3442765	ExpressionStatement	"readSize = _shortMsg . getn ( tempBuf , size )"	456:8:11782:11822	3442605	0	True				
ANR	3442766	AssignmentExpression	"readSize = _shortMsg . getn ( tempBuf , size )"		3442605	0		=			
ANR	3442767	Identifier	readSize		3442605	0					
ANR	3442768	CallExpression	"_shortMsg . getn ( tempBuf , size )"		3442605	1					
ANR	3442769	Callee	_shortMsg . getn		3442605	0					
ANR	3442770	MemberAccess	_shortMsg . getn		3442605	0					
ANR	3442771	Identifier	_shortMsg		3442605	0					
ANR	3442772	Identifier	getn		3442605	1					
ANR	3442773	ArgumentList	tempBuf		3442605	1					
ANR	3442774	Argument	tempBuf		3442605	0					
ANR	3442775	Identifier	tempBuf		3442605	0					
ANR	3442776	Argument	size		3442605	1					
ANR	3442777	Identifier	size		3442605	0					
ANR	3442778	IfStatement	if ( readSize == size )		3442605	7					
ANR	3442779	Condition	readSize == size	464:4:12030:12045	3442605	0	True				
ANR	3442780	EqualityExpression	readSize == size		3442605	0		==			
ANR	3442781	Identifier	readSize		3442605	0					
ANR	3442782	Identifier	size		3442605	1					
ANR	3442783	CompoundStatement		40:22:983:983	3442605	1					
ANR	3442784	IfStatement	if ( get_encryption ( ) )		3442605	0					
ANR	3442785	Condition	get_encryption ( )	465:16:12066:12081	3442605	0	True				
ANR	3442786	CallExpression	get_encryption ( )		3442605	0					
ANR	3442787	Callee	get_encryption		3442605	0					
ANR	3442788	Identifier	get_encryption		3442605	0					
ANR	3442789	ArgumentList			3442605	1					
ANR	3442790	CompoundStatement		41:34:1019:1019	3442605	1					
ANR	3442791	ExpressionStatement	"unwrap ( ( unsigned char * ) tempBuf , readSize , dec , length )"	466:16:12102:12158	3442605	0	True				
ANR	3442792	CallExpression	"unwrap ( ( unsigned char * ) tempBuf , readSize , dec , length )"		3442605	0					
ANR	3442793	Callee	unwrap		3442605	0					
ANR	3442794	Identifier	unwrap		3442605	0					
ANR	3442795	ArgumentList	( unsigned char * ) tempBuf		3442605	1					
ANR	3442796	Argument	( unsigned char * ) tempBuf		3442605	0					
ANR	3442797	CastExpression	( unsigned char * ) tempBuf		3442605	0					
ANR	3442798	CastTarget	unsigned char *		3442605	0					
ANR	3442799	Identifier	tempBuf		3442605	1					
ANR	3442800	Argument	readSize		3442605	1					
ANR	3442801	Identifier	readSize		3442605	0					
ANR	3442802	Argument	dec		3442605	2					
ANR	3442803	Identifier	dec		3442605	0					
ANR	3442804	Argument	length		3442605	3					
ANR	3442805	Identifier	length		3442605	0					
ANR	3442806	ExpressionStatement	"memcpy ( dta , dec , readSize )"	467:16:12176:12202	3442605	1	True				
ANR	3442807	CallExpression	"memcpy ( dta , dec , readSize )"		3442605	0					
ANR	3442808	Callee	memcpy		3442605	0					
ANR	3442809	Identifier	memcpy		3442605	0					
ANR	3442810	ArgumentList	dta		3442605	1					
ANR	3442811	Argument	dta		3442605	0					
ANR	3442812	Identifier	dta		3442605	0					
ANR	3442813	Argument	dec		3442605	1					
ANR	3442814	Identifier	dec		3442605	0					
ANR	3442815	Argument	readSize		3442605	2					
ANR	3442816	Identifier	readSize		3442605	0					
ANR	3442817	ExpressionStatement	free ( dec )	468:16:12220:12229	3442605	2	True				
ANR	3442818	CallExpression	free ( dec )		3442605	0					
ANR	3442819	Callee	free		3442605	0					
ANR	3442820	Identifier	free		3442605	0					
ANR	3442821	ArgumentList	dec		3442605	1					
ANR	3442822	Argument	dec		3442605	0					
ANR	3442823	Identifier	dec		3442605	0					
ANR	3442824	ElseStatement	else		3442605	0					
ANR	3442825	CompoundStatement		46:17:1197:1197	3442605	0					
ANR	3442826	ExpressionStatement	"memcpy ( dta , tempBuf , readSize )"	471:16:12280:12310	3442605	0	True				
ANR	3442827	CallExpression	"memcpy ( dta , tempBuf , readSize )"		3442605	0					
ANR	3442828	Callee	memcpy		3442605	0					
ANR	3442829	Identifier	memcpy		3442605	0					
ANR	3442830	ArgumentList	dta		3442605	1					
ANR	3442831	Argument	dta		3442605	0					
ANR	3442832	Identifier	dta		3442605	0					
ANR	3442833	Argument	tempBuf		3442605	1					
ANR	3442834	Identifier	tempBuf		3442605	0					
ANR	3442835	Argument	readSize		3442605	2					
ANR	3442836	Identifier	readSize		3442605	0					
ANR	3442837	ExpressionStatement	free ( tempBuf )	478:12:12536:12549	3442605	1	True				
ANR	3442838	CallExpression	free ( tempBuf )		3442605	0					
ANR	3442839	Callee	free		3442605	0					
ANR	3442840	Identifier	free		3442605	0					
ANR	3442841	ArgumentList	tempBuf		3442605	1					
ANR	3442842	Argument	tempBuf		3442605	0					
ANR	3442843	Identifier	tempBuf		3442605	0					
ANR	3442844	ReturnStatement	return readSize ;	479:12:12563:12578	3442605	2	True				
ANR	3442845	Identifier	readSize		3442605	0					
ANR	3442846	ElseStatement	else		3442605	0					
ANR	3442847	CompoundStatement		56:8:1523:1523	3442605	0					
ANR	3442848	ExpressionStatement	free ( tempBuf )	481:2:12592:12605	3442605	0	True				
ANR	3442849	CallExpression	free ( tempBuf )		3442605	0					
ANR	3442850	Callee	free		3442605	0					
ANR	3442851	Identifier	free		3442605	0					
ANR	3442852	ArgumentList	tempBuf		3442605	1					
ANR	3442853	Argument	tempBuf		3442605	0					
ANR	3442854	Identifier	tempBuf		3442605	0					
ANR	3442855	ExpressionStatement	"dprintf ( D_NETWORK , ""SafeSock::get_bytes - failed because bytes read is different from bytes requested\\n"" )"	482:8:12615:12736	3442605	1	True				
ANR	3442856	CallExpression	"dprintf ( D_NETWORK , ""SafeSock::get_bytes - failed because bytes read is different from bytes requested\\n"" )"		3442605	0					
ANR	3442857	Callee	dprintf		3442605	0					
ANR	3442858	Identifier	dprintf		3442605	0					
ANR	3442859	ArgumentList	D_NETWORK		3442605	1					
ANR	3442860	Argument	D_NETWORK		3442605	0					
ANR	3442861	Identifier	D_NETWORK		3442605	0					
ANR	3442862	Argument	"""SafeSock::get_bytes - failed because bytes read is different from bytes requested\\n"""		3442605	1					
ANR	3442863	PrimaryExpression	"""SafeSock::get_bytes - failed because bytes read is different from bytes requested\\n"""		3442605	0					
ANR	3442864	ReturnStatement	return - 1 ;	484:2:12740:12749	3442605	2	True				
ANR	3442865	UnaryOperationExpression	- 1		3442605	0					
ANR	3442866	UnaryOperator	-		3442605	0					
ANR	3442867	PrimaryExpression	1		3442605	1					
ANR	3442868	ReturnType	int		3442605	1					
ANR	3442869	Identifier	SafeSock :: get_bytes		3442605	2					
ANR	3442870	ParameterList	"void * dta , int size"		3442605	3					
ANR	3442871	Parameter	void * dta	424:24:11043:11051	3442605	0	True				
ANR	3442872	ParameterType	void *		3442605	0					
ANR	3442873	Identifier	dta		3442605	1					
ANR	3442874	Parameter	int size	424:35:11054:11061	3442605	1	True				
ANR	3442875	ParameterType	int		3442605	0					
ANR	3442876	Identifier	size		3442605	1					
ANR	3442877	CFGEntryNode	ENTRY		3442605		True				
ANR	3442878	CFGExitNode	EXIT		3442605		True				
ANR	3442879	Symbol	malloc		3442605						
ANR	3442880	Symbol	dec		3442605						
ANR	3442881	Symbol	_msgReady		3442605						
ANR	3442882	Symbol	_shortMsg . getn		3442605						
ANR	3442883	Symbol	selector . has_ready		3442605						
ANR	3442884	Symbol	selector . timed_out		3442605						
ANR	3442885	Symbol	length		3442605						
ANR	3442886	Symbol	Selector :: IO_READ		3442605						
ANR	3442887	Symbol	get_encryption		3442605						
ANR	3442888	Symbol	selector . select_retval		3442605						
ANR	3442889	Symbol	* _longMsg		3442605						
ANR	3442890	Symbol	dta		3442605						
ANR	3442891	Symbol	_sock		3442605						
ANR	3442892	Symbol	size		3442605						
ANR	3442893	Symbol	D_NETWORK		3442605						
ANR	3442894	Symbol	selector		3442605						
ANR	3442895	Symbol	_timeout		3442605						
ANR	3442896	Symbol	_longMsg -> getn		3442605						
ANR	3442897	Symbol	readSize		3442605						
ANR	3442898	Symbol	_longMsg		3442605						
ANR	3442899	Symbol	_shortMsg		3442605						
ANR	3442900	Symbol	tempBuf		3442605						
ANR	3442901	Function	SafeSock :: get_ptr	501:0:13330:13997							
ANR	3442902	FunctionDef	"SafeSock :: get_ptr (void * & ptr , char delim)"		3442901	0					
ANR	3442903	CompoundStatement		502:0:13376:13997	3442901	0					
ANR	3442904	IdentifierDeclStatement	int size ;	503:1:13379:13387	3442901	0	True				
ANR	3442905	IdentifierDecl	size		3442901	0					
ANR	3442906	IdentifierDeclType	int		3442901	0					
ANR	3442907	Identifier	size		3442901	1					
ANR	3442908	WhileStatement	while ( ! _msgReady )		3442901	1					
ANR	3442909	Condition	! _msgReady	505:7:13397:13406	3442901	0	True				
ANR	3442910	UnaryOperationExpression	! _msgReady		3442901	0					
ANR	3442911	UnaryOperator	!		3442901	0					
ANR	3442912	Identifier	_msgReady		3442901	1					
ANR	3442913	CompoundStatement		4:19:32:32	3442901	1					
ANR	3442914	IfStatement	if ( _timeout > 0 )		3442901	0					
ANR	3442915	Condition	_timeout > 0	506:5:13416:13427	3442901	0	True				
ANR	3442916	RelationalExpression	_timeout > 0		3442901	0		>			
ANR	3442917	Identifier	_timeout		3442901	0					
ANR	3442918	PrimaryExpression	0		3442901	1					
ANR	3442919	CompoundStatement		6:3:58:75	3442901	1					
ANR	3442920	IdentifierDeclStatement	Selector selector ;	507:3:13435:13452	3442901	0	True				
ANR	3442921	IdentifierDecl	selector		3442901	0					
ANR	3442922	IdentifierDeclType	Selector		3442901	0					
ANR	3442923	Identifier	selector		3442901	1					
ANR	3442924	ExpressionStatement	selector . set_timeout ( _timeout )	508:3:13457:13489	3442901	1	True				
ANR	3442925	CallExpression	selector . set_timeout ( _timeout )		3442901	0					
ANR	3442926	Callee	selector . set_timeout		3442901	0					
ANR	3442927	MemberAccess	selector . set_timeout		3442901	0					
ANR	3442928	Identifier	selector		3442901	0					
ANR	3442929	Identifier	set_timeout		3442901	1					
ANR	3442930	ArgumentList	_timeout		3442901	1					
ANR	3442931	Argument	_timeout		3442901	0					
ANR	3442932	Identifier	_timeout		3442901	0					
ANR	3442933	ExpressionStatement	"selector . add_fd ( _sock , Selector :: IO_READ )"	509:3:13494:13537	3442901	2	True				
ANR	3442934	CallExpression	"selector . add_fd ( _sock , Selector :: IO_READ )"		3442901	0					
ANR	3442935	Callee	selector . add_fd		3442901	0					
ANR	3442936	MemberAccess	selector . add_fd		3442901	0					
ANR	3442937	Identifier	selector		3442901	0					
ANR	3442938	Identifier	add_fd		3442901	1					
ANR	3442939	ArgumentList	_sock		3442901	1					
ANR	3442940	Argument	_sock		3442901	0					
ANR	3442941	Identifier	_sock		3442901	0					
ANR	3442942	Argument	Selector :: IO_READ		3442901	1					
ANR	3442943	Identifier	Selector :: IO_READ		3442901	0					
ANR	3442944	ExpressionStatement	selector . execute ( )	511:3:13547:13565	3442901	3	True				
ANR	3442945	CallExpression	selector . execute ( )		3442901	0					
ANR	3442946	Callee	selector . execute		3442901	0					
ANR	3442947	MemberAccess	selector . execute		3442901	0					
ANR	3442948	Identifier	selector		3442901	0					
ANR	3442949	Identifier	execute		3442901	1					
ANR	3442950	ArgumentList			3442901	1					
ANR	3442951	IfStatement	if ( selector . timed_out ( ) )		3442901	4					
ANR	3442952	Condition	selector . timed_out ( )	512:8:13575:13594	3442901	0	True				
ANR	3442953	CallExpression	selector . timed_out ( )		3442901	0					
ANR	3442954	Callee	selector . timed_out		3442901	0					
ANR	3442955	MemberAccess	selector . timed_out		3442901	0					
ANR	3442956	Identifier	selector		3442901	0					
ANR	3442957	Identifier	timed_out		3442901	1					
ANR	3442958	ArgumentList			3442901	1					
ANR	3442959	CompoundStatement		11:31:221:221	3442901	1					
ANR	3442960	ReturnStatement	return 0 ;	513:4:13604:13612	3442901	0	True				
ANR	3442961	PrimaryExpression	0		3442901	0					
ANR	3442962	ElseStatement	else		3442901	0					
ANR	3442963	IfStatement	if ( ! selector . has_ready ( ) )		3442901	0					
ANR	3442964	Condition	! selector . has_ready ( )	514:15:13629:13649	3442901	0	True				
ANR	3442965	UnaryOperationExpression	! selector . has_ready ( )		3442901	0					
ANR	3442966	UnaryOperator	!		3442901	0					
ANR	3442967	CallExpression	selector . has_ready ( )		3442901	1					
ANR	3442968	Callee	selector . has_ready		3442901	0					
ANR	3442969	MemberAccess	selector . has_ready		3442901	0					
ANR	3442970	Identifier	selector		3442901	0					
ANR	3442971	Identifier	has_ready		3442901	1					
ANR	3442972	ArgumentList			3442901	1					
ANR	3442973	CompoundStatement		13:39:276:276	3442901	1					
ANR	3442974	ExpressionStatement	"dprintf ( D_NETWORK , ""select returns %d, recv failed\\n"" , selector . select_retval ( ) )"	515:5:13660:13762	3442901	0	True				
ANR	3442975	CallExpression	"dprintf ( D_NETWORK , ""select returns %d, recv failed\\n"" , selector . select_retval ( ) )"		3442901	0					
ANR	3442976	Callee	dprintf		3442901	0					
ANR	3442977	Identifier	dprintf		3442901	0					
ANR	3442978	ArgumentList	D_NETWORK		3442901	1					
ANR	3442979	Argument	D_NETWORK		3442901	0					
ANR	3442980	Identifier	D_NETWORK		3442901	0					
ANR	3442981	Argument	"""select returns %d, recv failed\\n"""		3442901	1					
ANR	3442982	PrimaryExpression	"""select returns %d, recv failed\\n"""		3442901	0					
ANR	3442983	Argument	selector . select_retval ( )		3442901	2					
ANR	3442984	CallExpression	selector . select_retval ( )		3442901	0					
ANR	3442985	Callee	selector . select_retval		3442901	0					
ANR	3442986	MemberAccess	selector . select_retval		3442901	0					
ANR	3442987	Identifier	selector		3442901	0					
ANR	3442988	Identifier	select_retval		3442901	1					
ANR	3442989	ArgumentList			3442901	1					
ANR	3442990	ReturnStatement	return 0 ;	518:5:13769:13777	3442901	1	True				
ANR	3442991	PrimaryExpression	0		3442901	0					
ANR	3442992	ExpressionStatement	( void ) handle_incoming_packet ( )	521:2:13790:13820	3442901	1	True				
ANR	3442993	CastExpression	( void ) handle_incoming_packet ( )		3442901	0					
ANR	3442994	CastTarget	void		3442901	0					
ANR	3442995	CallExpression	handle_incoming_packet ( )		3442901	1					
ANR	3442996	Callee	handle_incoming_packet		3442901	0					
ANR	3442997	Identifier	handle_incoming_packet		3442901	0					
ANR	3442998	ArgumentList			3442901	1					
ANR	3442999	IfStatement	if ( _longMsg )		3442901	2					
ANR	3443000	Condition	_longMsg	524:4:13830:13837	3442901	0	True				
ANR	3443001	Identifier	_longMsg		3442901	0					
ANR	3443002	CompoundStatement		23:14:463:463	3442901	1					
ANR	3443003	ExpressionStatement	"size = _longMsg -> getPtr ( ptr , delim )"	525:2:13860:13895	3442901	0	True				
ANR	3443004	AssignmentExpression	"size = _longMsg -> getPtr ( ptr , delim )"		3442901	0		=			
ANR	3443005	Identifier	size		3442901	0					
ANR	3443006	CallExpression	"_longMsg -> getPtr ( ptr , delim )"		3442901	1					
ANR	3443007	Callee	_longMsg -> getPtr		3442901	0					
ANR	3443008	PtrMemberAccess	_longMsg -> getPtr		3442901	0					
ANR	3443009	Identifier	_longMsg		3442901	0					
ANR	3443010	Identifier	getPtr		3442901	1					
ANR	3443011	ArgumentList	ptr		3442901	1					
ANR	3443012	Argument	ptr		3442901	0					
ANR	3443013	Identifier	ptr		3442901	0					
ANR	3443014	Argument	delim		3442901	1					
ANR	3443015	Identifier	delim		3442901	0					
ANR	3443016	ReturnStatement	return size ;	526:2:13899:13910	3442901	1	True				
ANR	3443017	Identifier	size		3442901	0					
ANR	3443018	ElseStatement	else		3442901	0					
ANR	3443019	CompoundStatement		27:6:544:544	3442901	0					
ANR	3443020	ExpressionStatement	"size = _shortMsg . getPtr ( ptr , delim )"	529:2:13942:13977	3442901	0	True				
ANR	3443021	AssignmentExpression	"size = _shortMsg . getPtr ( ptr , delim )"		3442901	0		=			
ANR	3443022	Identifier	size		3442901	0					
ANR	3443023	CallExpression	"_shortMsg . getPtr ( ptr , delim )"		3442901	1					
ANR	3443024	Callee	_shortMsg . getPtr		3442901	0					
ANR	3443025	MemberAccess	_shortMsg . getPtr		3442901	0					
ANR	3443026	Identifier	_shortMsg		3442901	0					
ANR	3443027	Identifier	getPtr		3442901	1					
ANR	3443028	ArgumentList	ptr		3442901	1					
ANR	3443029	Argument	ptr		3442901	0					
ANR	3443030	Identifier	ptr		3442901	0					
ANR	3443031	Argument	delim		3442901	1					
ANR	3443032	Identifier	delim		3442901	0					
ANR	3443033	ReturnStatement	return size ;	530:2:13981:13992	3442901	1	True				
ANR	3443034	Identifier	size		3442901	0					
ANR	3443035	ReturnType	int		3442901	1					
ANR	3443036	Identifier	SafeSock :: get_ptr		3442901	2					
ANR	3443037	ParameterList	"void * & ptr , char delim"		3442901	3					
ANR	3443038	Parameter	void * & ptr	501:22:13352:13361	3442901	0	True				
ANR	3443039	ParameterType	void * &		3442901	0					
ANR	3443040	Identifier	ptr		3442901	1					
ANR	3443041	Parameter	char delim	501:34:13364:13373	3442901	1	True				
ANR	3443042	ParameterType	char		3442901	0					
ANR	3443043	Identifier	delim		3442901	1					
ANR	3443044	CFGEntryNode	ENTRY		3442901		True				
ANR	3443045	CFGExitNode	EXIT		3442901		True				
ANR	3443046	Symbol	_shortMsg . getPtr		3442901						
ANR	3443047	Symbol	_msgReady		3442901						
ANR	3443048	Symbol	selector . has_ready		3442901						
ANR	3443049	Symbol	selector . timed_out		3442901						
ANR	3443050	Symbol	Selector :: IO_READ		3442901						
ANR	3443051	Symbol	ptr		3442901						
ANR	3443052	Symbol	selector . select_retval		3442901						
ANR	3443053	Symbol	* _longMsg		3442901						
ANR	3443054	Symbol	_sock		3442901						
ANR	3443055	Symbol	size		3442901						
ANR	3443056	Symbol	_longMsg -> getPtr		3442901						
ANR	3443057	Symbol	D_NETWORK		3442901						
ANR	3443058	Symbol	selector		3442901						
ANR	3443059	Symbol	_timeout		3442901						
ANR	3443060	Symbol	_longMsg		3442901						
ANR	3443061	Symbol	_shortMsg		3442901						
ANR	3443062	Symbol	delim		3442901						
ANR	3443063	Function	SafeSock :: peek	535:0:14001:14576							
ANR	3443064	FunctionDef	SafeSock :: peek (char & c)		3443063	0					
ANR	3443065	CompoundStatement		536:0:14029:14576	3443063	0					
ANR	3443066	WhileStatement	while ( ! _msgReady )		3443063	0					
ANR	3443067	Condition	! _msgReady	537:7:14038:14047	3443063	0	True				
ANR	3443068	UnaryOperationExpression	! _msgReady		3443063	0					
ANR	3443069	UnaryOperator	!		3443063	0					
ANR	3443070	Identifier	_msgReady		3443063	1					
ANR	3443071	CompoundStatement		2:19:20:20	3443063	1					
ANR	3443072	IfStatement	if ( _timeout > 0 )		3443063	0					
ANR	3443073	Condition	_timeout > 0	538:5:14057:14068	3443063	0	True				
ANR	3443074	RelationalExpression	_timeout > 0		3443063	0		>			
ANR	3443075	Identifier	_timeout		3443063	0					
ANR	3443076	PrimaryExpression	0		3443063	1					
ANR	3443077	CompoundStatement		4:3:46:63	3443063	1					
ANR	3443078	IdentifierDeclStatement	Selector selector ;	539:3:14076:14093	3443063	0	True				
ANR	3443079	IdentifierDecl	selector		3443063	0					
ANR	3443080	IdentifierDeclType	Selector		3443063	0					
ANR	3443081	Identifier	selector		3443063	1					
ANR	3443082	ExpressionStatement	selector . set_timeout ( _timeout )	540:3:14098:14130	3443063	1	True				
ANR	3443083	CallExpression	selector . set_timeout ( _timeout )		3443063	0					
ANR	3443084	Callee	selector . set_timeout		3443063	0					
ANR	3443085	MemberAccess	selector . set_timeout		3443063	0					
ANR	3443086	Identifier	selector		3443063	0					
ANR	3443087	Identifier	set_timeout		3443063	1					
ANR	3443088	ArgumentList	_timeout		3443063	1					
ANR	3443089	Argument	_timeout		3443063	0					
ANR	3443090	Identifier	_timeout		3443063	0					
ANR	3443091	ExpressionStatement	"selector . add_fd ( _sock , Selector :: IO_READ )"	541:3:14135:14178	3443063	2	True				
ANR	3443092	CallExpression	"selector . add_fd ( _sock , Selector :: IO_READ )"		3443063	0					
ANR	3443093	Callee	selector . add_fd		3443063	0					
ANR	3443094	MemberAccess	selector . add_fd		3443063	0					
ANR	3443095	Identifier	selector		3443063	0					
ANR	3443096	Identifier	add_fd		3443063	1					
ANR	3443097	ArgumentList	_sock		3443063	1					
ANR	3443098	Argument	_sock		3443063	0					
ANR	3443099	Identifier	_sock		3443063	0					
ANR	3443100	Argument	Selector :: IO_READ		3443063	1					
ANR	3443101	Identifier	Selector :: IO_READ		3443063	0					
ANR	3443102	ExpressionStatement	selector . execute ( )	543:3:14188:14206	3443063	3	True				
ANR	3443103	CallExpression	selector . execute ( )		3443063	0					
ANR	3443104	Callee	selector . execute		3443063	0					
ANR	3443105	MemberAccess	selector . execute		3443063	0					
ANR	3443106	Identifier	selector		3443063	0					
ANR	3443107	Identifier	execute		3443063	1					
ANR	3443108	ArgumentList			3443063	1					
ANR	3443109	IfStatement	if ( selector . timed_out ( ) )		3443063	4					
ANR	3443110	Condition	selector . timed_out ( )	544:8:14216:14235	3443063	0	True				
ANR	3443111	CallExpression	selector . timed_out ( )		3443063	0					
ANR	3443112	Callee	selector . timed_out		3443063	0					
ANR	3443113	MemberAccess	selector . timed_out		3443063	0					
ANR	3443114	Identifier	selector		3443063	0					
ANR	3443115	Identifier	timed_out		3443063	1					
ANR	3443116	ArgumentList			3443063	1					
ANR	3443117	CompoundStatement		9:31:209:209	3443063	1					
ANR	3443118	ReturnStatement	return 0 ;	545:4:14245:14253	3443063	0	True				
ANR	3443119	PrimaryExpression	0		3443063	0					
ANR	3443120	ElseStatement	else		3443063	0					
ANR	3443121	IfStatement	if ( ! selector . has_ready ( ) )		3443063	0					
ANR	3443122	Condition	! selector . has_ready ( )	546:15:14270:14290	3443063	0	True				
ANR	3443123	UnaryOperationExpression	! selector . has_ready ( )		3443063	0					
ANR	3443124	UnaryOperator	!		3443063	0					
ANR	3443125	CallExpression	selector . has_ready ( )		3443063	1					
ANR	3443126	Callee	selector . has_ready		3443063	0					
ANR	3443127	MemberAccess	selector . has_ready		3443063	0					
ANR	3443128	Identifier	selector		3443063	0					
ANR	3443129	Identifier	has_ready		3443063	1					
ANR	3443130	ArgumentList			3443063	1					
ANR	3443131	CompoundStatement		11:39:264:264	3443063	1					
ANR	3443132	ExpressionStatement	"dprintf ( D_NETWORK , ""select returns %d, recv failed\\n"" , selector . select_retval ( ) )"	547:5:14301:14403	3443063	0	True				
ANR	3443133	CallExpression	"dprintf ( D_NETWORK , ""select returns %d, recv failed\\n"" , selector . select_retval ( ) )"		3443063	0					
ANR	3443134	Callee	dprintf		3443063	0					
ANR	3443135	Identifier	dprintf		3443063	0					
ANR	3443136	ArgumentList	D_NETWORK		3443063	1					
ANR	3443137	Argument	D_NETWORK		3443063	0					
ANR	3443138	Identifier	D_NETWORK		3443063	0					
ANR	3443139	Argument	"""select returns %d, recv failed\\n"""		3443063	1					
ANR	3443140	PrimaryExpression	"""select returns %d, recv failed\\n"""		3443063	0					
ANR	3443141	Argument	selector . select_retval ( )		3443063	2					
ANR	3443142	CallExpression	selector . select_retval ( )		3443063	0					
ANR	3443143	Callee	selector . select_retval		3443063	0					
ANR	3443144	MemberAccess	selector . select_retval		3443063	0					
ANR	3443145	Identifier	selector		3443063	0					
ANR	3443146	Identifier	select_retval		3443063	1					
ANR	3443147	ArgumentList			3443063	1					
ANR	3443148	ReturnStatement	return 0 ;	550:5:14410:14418	3443063	1	True				
ANR	3443149	PrimaryExpression	0		3443063	0					
ANR	3443150	ExpressionStatement	( void ) handle_incoming_packet ( )	553:2:14431:14461	3443063	1	True				
ANR	3443151	CastExpression	( void ) handle_incoming_packet ( )		3443063	0					
ANR	3443152	CastTarget	void		3443063	0					
ANR	3443153	CallExpression	handle_incoming_packet ( )		3443063	1					
ANR	3443154	Callee	handle_incoming_packet		3443063	0					
ANR	3443155	Identifier	handle_incoming_packet		3443063	0					
ANR	3443156	ArgumentList			3443063	1					
ANR	3443157	IfStatement	if ( _longMsg )		3443063	1					
ANR	3443158	Condition	_longMsg	556:4:14471:14478	3443063	0	True				
ANR	3443159	Identifier	_longMsg		3443063	0					
ANR	3443160	ReturnStatement	return _longMsg -> peek ( c ) ;	557:2:14499:14523	3443063	1	True				
ANR	3443161	CallExpression	_longMsg -> peek ( c )		3443063	0					
ANR	3443162	Callee	_longMsg -> peek		3443063	0					
ANR	3443163	PtrMemberAccess	_longMsg -> peek		3443063	0					
ANR	3443164	Identifier	_longMsg		3443063	0					
ANR	3443165	Identifier	peek		3443063	1					
ANR	3443166	ArgumentList	c		3443063	1					
ANR	3443167	Argument	c		3443063	0					
ANR	3443168	Identifier	c		3443063	0					
ANR	3443169	ElseStatement	else		3443063	0					
ANR	3443170	ReturnStatement	return _shortMsg . peek ( c ) ;	559:2:14550:14574	3443063	0	True				
ANR	3443171	CallExpression	_shortMsg . peek ( c )		3443063	0					
ANR	3443172	Callee	_shortMsg . peek		3443063	0					
ANR	3443173	MemberAccess	_shortMsg . peek		3443063	0					
ANR	3443174	Identifier	_shortMsg		3443063	0					
ANR	3443175	Identifier	peek		3443063	1					
ANR	3443176	ArgumentList	c		3443063	1					
ANR	3443177	Argument	c		3443063	0					
ANR	3443178	Identifier	c		3443063	0					
ANR	3443179	ReturnType	int		3443063	1					
ANR	3443180	Identifier	SafeSock :: peek		3443063	2					
ANR	3443181	ParameterList	char & c		3443063	3					
ANR	3443182	Parameter	char & c	535:19:14020:14026	3443063	0	True				
ANR	3443183	ParameterType	char &		3443063	0					
ANR	3443184	Identifier	c		3443063	1					
ANR	3443185	CFGEntryNode	ENTRY		3443063		True				
ANR	3443186	CFGExitNode	EXIT		3443063		True				
ANR	3443187	Symbol	c		3443063						
ANR	3443188	Symbol	_longMsg -> peek		3443063						
ANR	3443189	Symbol	_msgReady		3443063						
ANR	3443190	Symbol	selector . has_ready		3443063						
ANR	3443191	Symbol	selector . timed_out		3443063						
ANR	3443192	Symbol	_shortMsg . peek		3443063						
ANR	3443193	Symbol	Selector :: IO_READ		3443063						
ANR	3443194	Symbol	selector . select_retval		3443063						
ANR	3443195	Symbol	* _longMsg		3443063						
ANR	3443196	Symbol	_sock		3443063						
ANR	3443197	Symbol	D_NETWORK		3443063						
ANR	3443198	Symbol	selector		3443063						
ANR	3443199	Symbol	_timeout		3443063						
ANR	3443200	Symbol	_longMsg		3443063						
ANR	3443201	Symbol	_shortMsg		3443063						
ANR	3443202	Function	SafeSock :: handle_incoming_packet	570:0:14830:20762							
ANR	3443203	FunctionDef	SafeSock :: handle_incoming_packet ()		3443202	0					
ANR	3443204	CompoundStatement		571:0:14869:20762	3443202	0					
ANR	3443205	IdentifierDeclStatement	bool last ;	579:1:15280:15289	3443202	0	True				
ANR	3443206	IdentifierDecl	last		3443202	0					
ANR	3443207	IdentifierDeclType	bool		3443202	0					
ANR	3443208	Identifier	last		3443202	1					
ANR	3443209	IdentifierDeclStatement	"int seqNo , length ;"	580:1:15292:15309	3443202	1	True				
ANR	3443210	IdentifierDecl	seqNo		3443202	0					
ANR	3443211	IdentifierDeclType	int		3443202	0					
ANR	3443212	Identifier	seqNo		3443202	1					
ANR	3443213	IdentifierDecl	length		3443202	1					
ANR	3443214	IdentifierDeclType	int		3443202	0					
ANR	3443215	Identifier	length		3443202	1					
ANR	3443216	IdentifierDeclStatement	_condorMsgID mID ;	581:1:15312:15328	3443202	2	True				
ANR	3443217	IdentifierDecl	mID		3443202	0					
ANR	3443218	IdentifierDeclType	_condorMsgID		3443202	0					
ANR	3443219	Identifier	mID		3443202	1					
ANR	3443220	IdentifierDeclStatement	void * data ;	582:1:15331:15341	3443202	3	True				
ANR	3443221	IdentifierDecl	* data		3443202	0					
ANR	3443222	IdentifierDeclType	void *		3443202	0					
ANR	3443223	Identifier	data		3443202	1					
ANR	3443224	IdentifierDeclStatement	int index ;	583:1:15344:15353	3443202	4	True				
ANR	3443225	IdentifierDecl	index		3443202	0					
ANR	3443226	IdentifierDeclType	int		3443202	0					
ANR	3443227	Identifier	index		3443202	1					
ANR	3443228	IdentifierDeclStatement	int received ;	584:1:15356:15368	3443202	5	True				
ANR	3443229	IdentifierDecl	received		3443202	0					
ANR	3443230	IdentifierDeclType	int		3443202	0					
ANR	3443231	Identifier	received		3443202	1					
ANR	3443232	IdentifierDeclStatement	"_condorInMsg * tempMsg , * delMsg , * prev = NULL ;"	585:1:15371:15415	3443202	6	True				
ANR	3443233	IdentifierDecl	* tempMsg		3443202	0					
ANR	3443234	IdentifierDeclType	_condorInMsg *		3443202	0					
ANR	3443235	Identifier	tempMsg		3443202	1					
ANR	3443236	IdentifierDecl	* delMsg		3443202	1					
ANR	3443237	IdentifierDeclType	_condorInMsg *		3443202	0					
ANR	3443238	Identifier	delMsg		3443202	1					
ANR	3443239	IdentifierDecl	* prev = NULL		3443202	2					
ANR	3443240	IdentifierDeclType	_condorInMsg *		3443202	0					
ANR	3443241	Identifier	prev		3443202	1					
ANR	3443242	AssignmentExpression	* prev = NULL		3443202	2		=			
ANR	3443243	Identifier	NULL		3443202	0					
ANR	3443244	Identifier	NULL		3443202	1					
ANR	3443245	IdentifierDeclStatement	time_t curTime ;	586:1:15418:15432	3443202	7	True				
ANR	3443246	IdentifierDecl	curTime		3443202	0					
ANR	3443247	IdentifierDeclType	time_t		3443202	0					
ANR	3443248	Identifier	curTime		3443202	1					
ANR	3443249	IfStatement	if ( _msgReady )		3443202	8					
ANR	3443250	Condition	_msgReady	588:5:15440:15448	3443202	0	True				
ANR	3443251	Identifier	_msgReady		3443202	0					
ANR	3443252	CompoundStatement		40:2:1294:1330	3443202	1					
ANR	3443253	IdentifierDeclStatement	char const * existing_msg_type ;	589:2:15456:15485	3443202	0	True				
ANR	3443254	IdentifierDecl	* existing_msg_type		3443202	0					
ANR	3443255	IdentifierDeclType	char const *		3443202	0					
ANR	3443256	Identifier	existing_msg_type		3443202	1					
ANR	3443257	IdentifierDeclStatement	bool existing_consumed ;	590:2:15489:15511	3443202	1	True				
ANR	3443258	IdentifierDecl	existing_consumed		3443202	0					
ANR	3443259	IdentifierDeclType	bool		3443202	0					
ANR	3443260	Identifier	existing_consumed		3443202	1					
ANR	3443261	IfStatement	if ( _longMsg )		3443202	2					
ANR	3443262	Condition	_longMsg	591:6:15519:15526	3443202	0	True				
ANR	3443263	Identifier	_longMsg		3443202	0					
ANR	3443264	CompoundStatement		21:17:660:660	3443202	1					
ANR	3443265	ExpressionStatement	"existing_msg_type = ""long"""	592:3:15535:15561	3443202	0	True				
ANR	3443266	AssignmentExpression	"existing_msg_type = ""long"""		3443202	0		=			
ANR	3443267	Identifier	existing_msg_type		3443202	0					
ANR	3443268	PrimaryExpression	"""long"""		3443202	1					
ANR	3443269	ExpressionStatement	existing_consumed = _longMsg -> consumed ( )	593:3:15566:15606	3443202	1	True				
ANR	3443270	AssignmentExpression	existing_consumed = _longMsg -> consumed ( )		3443202	0		=			
ANR	3443271	Identifier	existing_consumed		3443202	0					
ANR	3443272	CallExpression	_longMsg -> consumed ( )		3443202	1					
ANR	3443273	Callee	_longMsg -> consumed		3443202	0					
ANR	3443274	PtrMemberAccess	_longMsg -> consumed		3443202	0					
ANR	3443275	Identifier	_longMsg		3443202	0					
ANR	3443276	Identifier	consumed		3443202	1					
ANR	3443277	ArgumentList			3443202	1					
ANR	3443278	ElseStatement	else		3443202	0					
ANR	3443279	CompoundStatement		25:7:749:749	3443202	0					
ANR	3443280	ExpressionStatement	"existing_msg_type = ""short"""	596:3:15624:15651	3443202	0	True				
ANR	3443281	AssignmentExpression	"existing_msg_type = ""short"""		3443202	0		=			
ANR	3443282	Identifier	existing_msg_type		3443202	0					
ANR	3443283	PrimaryExpression	"""short"""		3443202	1					
ANR	3443284	ExpressionStatement	existing_consumed = _shortMsg . consumed ( )	597:3:15656:15696	3443202	1	True				
ANR	3443285	AssignmentExpression	existing_consumed = _shortMsg . consumed ( )		3443202	0		=			
ANR	3443286	Identifier	existing_consumed		3443202	0					
ANR	3443287	CallExpression	_shortMsg . consumed ( )		3443202	1					
ANR	3443288	Callee	_shortMsg . consumed		3443202	0					
ANR	3443289	MemberAccess	_shortMsg . consumed		3443202	0					
ANR	3443290	Identifier	_shortMsg		3443202	0					
ANR	3443291	Identifier	consumed		3443202	1					
ANR	3443292	ArgumentList			3443202	1					
ANR	3443293	Statement	dprintf	599:2:15704:15710	3443202	3	True				
ANR	3443294	Statement	(	599:9:15711:15711	3443202	4	True				
ANR	3443295	Statement	D_ALWAYS	599:11:15713:15720	3443202	5	True				
ANR	3443296	Statement	","	599:19:15721:15721	3443202	6	True				
ANR	3443297	Statement	"""ERROR: receiving new UDP message but found a %s """	600:5:15728:15777	3443202	7	True				
ANR	3443298	Statement	"""message still waiting to be closed (consumed=%d). """	601:5:15784:15835	3443202	8	True				
ANR	3443299	Statement	"""Closing it now.\\n"""	602:5:15842:15860	3443202	9	True				
ANR	3443300	Statement	","	602:24:15861:15861	3443202	10	True				
ANR	3443301	Statement	existing_msg_type	603:5:15868:15884	3443202	11	True				
ANR	3443302	Statement	","	603:22:15885:15885	3443202	12	True				
ANR	3443303	Statement	existing_consumed	603:24:15887:15903	3443202	13	True				
ANR	3443304	Statement	)	603:42:15905:15905	3443202	14	True				
ANR	3443305	ExpressionStatement		603:43:15906:15906	3443202	15	True				
ANR	3443306	IdentifierDeclStatement	stream_coding saved_coding = _coding ;	610:2:16164:16200	3443202	16	True				
ANR	3443307	IdentifierDecl	saved_coding = _coding		3443202	0					
ANR	3443308	IdentifierDeclType	stream_coding		3443202	0					
ANR	3443309	Identifier	saved_coding		3443202	1					
ANR	3443310	AssignmentExpression	saved_coding = _coding		3443202	2		=			
ANR	3443311	Identifier	_coding		3443202	0					
ANR	3443312	Identifier	_coding		3443202	1					
ANR	3443313	ExpressionStatement	_coding = stream_decode	611:2:16204:16227	3443202	17	True				
ANR	3443314	AssignmentExpression	_coding = stream_decode		3443202	0		=			
ANR	3443315	Identifier	_coding		3443202	0					
ANR	3443316	Identifier	stream_decode		3443202	1					
ANR	3443317	ExpressionStatement	end_of_message ( )	612:2:16231:16247	3443202	18	True				
ANR	3443318	CallExpression	end_of_message ( )		3443202	0					
ANR	3443319	Callee	end_of_message		3443202	0					
ANR	3443320	Identifier	end_of_message		3443202	0					
ANR	3443321	ArgumentList			3443202	1					
ANR	3443322	ExpressionStatement	_coding = saved_coding	613:2:16251:16273	3443202	19	True				
ANR	3443323	AssignmentExpression	_coding = saved_coding		3443202	0		=			
ANR	3443324	Identifier	_coding		3443202	0					
ANR	3443325	Identifier	saved_coding		3443202	1					
ANR	3443326	ExpressionStatement	"received = condor_recvfrom ( _sock , _shortMsg . dataGram , SAFE_MSG_MAX_PACKET_SIZE , 0 , _who )"	617:1:16281:16380	3443202	9	True				
ANR	3443327	AssignmentExpression	"received = condor_recvfrom ( _sock , _shortMsg . dataGram , SAFE_MSG_MAX_PACKET_SIZE , 0 , _who )"		3443202	0		=			
ANR	3443328	Identifier	received		3443202	0					
ANR	3443329	CallExpression	"condor_recvfrom ( _sock , _shortMsg . dataGram , SAFE_MSG_MAX_PACKET_SIZE , 0 , _who )"		3443202	1					
ANR	3443330	Callee	condor_recvfrom		3443202	0					
ANR	3443331	Identifier	condor_recvfrom		3443202	0					
ANR	3443332	ArgumentList	_sock		3443202	1					
ANR	3443333	Argument	_sock		3443202	0					
ANR	3443334	Identifier	_sock		3443202	0					
ANR	3443335	Argument	_shortMsg . dataGram		3443202	1					
ANR	3443336	MemberAccess	_shortMsg . dataGram		3443202	0					
ANR	3443337	Identifier	_shortMsg		3443202	0					
ANR	3443338	Identifier	dataGram		3443202	1					
ANR	3443339	Argument	SAFE_MSG_MAX_PACKET_SIZE		3443202	2					
ANR	3443340	Identifier	SAFE_MSG_MAX_PACKET_SIZE		3443202	0					
ANR	3443341	Argument	0		3443202	3					
ANR	3443342	PrimaryExpression	0		3443202	0					
ANR	3443343	Argument	_who		3443202	4					
ANR	3443344	Identifier	_who		3443202	0					
ANR	3443345	IfStatement	if ( received < 0 )		3443202	10					
ANR	3443346	Condition	received < 0	620:4:16387:16398	3443202	0	True				
ANR	3443347	RelationalExpression	received < 0		3443202	0		<			
ANR	3443348	Identifier	received		3443202	0					
ANR	3443349	PrimaryExpression	0		3443202	1					
ANR	3443350	CompoundStatement		50:18:1531:1531	3443202	1					
ANR	3443351	ExpressionStatement	"dprintf ( D_NETWORK , ""recvfrom failed: errno = %d\\n"" , errno )"	621:2:16405:16463	3443202	0	True				
ANR	3443352	CallExpression	"dprintf ( D_NETWORK , ""recvfrom failed: errno = %d\\n"" , errno )"		3443202	0					
ANR	3443353	Callee	dprintf		3443202	0					
ANR	3443354	Identifier	dprintf		3443202	0					
ANR	3443355	ArgumentList	D_NETWORK		3443202	1					
ANR	3443356	Argument	D_NETWORK		3443202	0					
ANR	3443357	Identifier	D_NETWORK		3443202	0					
ANR	3443358	Argument	"""recvfrom failed: errno = %d\\n"""		3443202	1					
ANR	3443359	PrimaryExpression	"""recvfrom failed: errno = %d\\n"""		3443202	0					
ANR	3443360	Argument	errno		3443202	2					
ANR	3443361	Identifier	errno		3443202	0					
ANR	3443362	ReturnStatement	return FALSE ;	622:2:16467:16479	3443202	1	True				
ANR	3443363	Identifier	FALSE		3443202	0					
ANR	3443364	IdentifierDeclStatement	char str [ 50 ] ;	624:4:16488:16500	3443202	11	True				
ANR	3443365	IdentifierDecl	str [ 50 ]		3443202	0					
ANR	3443366	IdentifierDeclType	char [ 50 ]		3443202	0					
ANR	3443367	Identifier	str		3443202	1					
ANR	3443368	PrimaryExpression	50		3443202	2					
ANR	3443369	ExpressionStatement	"sprintf ( str , sock_to_string ( _sock ) )"	625:4:16506:16541	3443202	12	True				
ANR	3443370	CallExpression	"sprintf ( str , sock_to_string ( _sock ) )"		3443202	0					
ANR	3443371	Callee	sprintf		3443202	0					
ANR	3443372	Identifier	sprintf		3443202	0					
ANR	3443373	ArgumentList	str		3443202	1					
ANR	3443374	Argument	str		3443202	0					
ANR	3443375	Identifier	str		3443202	0					
ANR	3443376	Argument	sock_to_string ( _sock )		3443202	1					
ANR	3443377	CallExpression	sock_to_string ( _sock )		3443202	0					
ANR	3443378	Callee	sock_to_string		3443202	0					
ANR	3443379	Identifier	sock_to_string		3443202	0					
ANR	3443380	ArgumentList	_sock		3443202	1					
ANR	3443381	Argument	_sock		3443202	0					
ANR	3443382	Identifier	_sock		3443202	0					
ANR	3443383	ExpressionStatement	"dprintf ( D_NETWORK , ""RECV %d bytes at %s from %s\\n"" , received , str , _who . to_sinful ( ) . Value ( ) )"	626:4:16547:16644	3443202	13	True				
ANR	3443384	CallExpression	"dprintf ( D_NETWORK , ""RECV %d bytes at %s from %s\\n"" , received , str , _who . to_sinful ( ) . Value ( ) )"		3443202	0					
ANR	3443385	Callee	dprintf		3443202	0					
ANR	3443386	Identifier	dprintf		3443202	0					
ANR	3443387	ArgumentList	D_NETWORK		3443202	1					
ANR	3443388	Argument	D_NETWORK		3443202	0					
ANR	3443389	Identifier	D_NETWORK		3443202	0					
ANR	3443390	Argument	"""RECV %d bytes at %s from %s\\n"""		3443202	1					
ANR	3443391	PrimaryExpression	"""RECV %d bytes at %s from %s\\n"""		3443202	0					
ANR	3443392	Argument	received		3443202	2					
ANR	3443393	Identifier	received		3443202	0					
ANR	3443394	Argument	str		3443202	3					
ANR	3443395	Identifier	str		3443202	0					
ANR	3443396	Argument	_who . to_sinful ( ) . Value ( )		3443202	4					
ANR	3443397	CallExpression	_who . to_sinful ( ) . Value ( )		3443202	0					
ANR	3443398	Callee	_who . to_sinful ( ) . Value		3443202	0					
ANR	3443399	MemberAccess	_who . to_sinful ( ) . Value		3443202	0					
ANR	3443400	CallExpression	_who . to_sinful ( )		3443202	0					
ANR	3443401	Callee	_who . to_sinful		3443202	0					
ANR	3443402	MemberAccess	_who . to_sinful		3443202	0					
ANR	3443403	Identifier	_who		3443202	0					
ANR	3443404	Identifier	to_sinful		3443202	1					
ANR	3443405	ArgumentList			3443202	1					
ANR	3443406	Identifier	Value		3443202	1					
ANR	3443407	ArgumentList			3443202	1					
ANR	3443408	ExpressionStatement	length = received	633:1:16887:16904	3443202	14	True				
ANR	3443409	AssignmentExpression	length = received		3443202	0		=			
ANR	3443410	Identifier	length		3443202	0					
ANR	3443411	Identifier	received		3443202	1					
ANR	3443412	ExpressionStatement	_shortMsg . reset ( )	634:4:16910:16927	3443202	15	True				
ANR	3443413	CallExpression	_shortMsg . reset ( )		3443202	0					
ANR	3443414	Callee	_shortMsg . reset		3443202	0					
ANR	3443415	MemberAccess	_shortMsg . reset		3443202	0					
ANR	3443416	Identifier	_shortMsg		3443202	0					
ANR	3443417	Identifier	reset		3443202	1					
ANR	3443418	ArgumentList			3443202	1					
ANR	3443419	IdentifierDeclStatement	"bool is_full_message = _shortMsg . getHeader ( received , last , seqNo , length , mID , data ) ;"	636:1:16946:17030	3443202	16	True				
ANR	3443420	IdentifierDecl	"is_full_message = _shortMsg . getHeader ( received , last , seqNo , length , mID , data )"		3443202	0					
ANR	3443421	IdentifierDeclType	bool		3443202	0					
ANR	3443422	Identifier	is_full_message		3443202	1					
ANR	3443423	AssignmentExpression	"is_full_message = _shortMsg . getHeader ( received , last , seqNo , length , mID , data )"		3443202	2		=			
ANR	3443424	Identifier	is_full_message		3443202	0					
ANR	3443425	CallExpression	"_shortMsg . getHeader ( received , last , seqNo , length , mID , data )"		3443202	1					
ANR	3443426	Callee	_shortMsg . getHeader		3443202	0					
ANR	3443427	MemberAccess	_shortMsg . getHeader		3443202	0					
ANR	3443428	Identifier	_shortMsg		3443202	0					
ANR	3443429	Identifier	getHeader		3443202	1					
ANR	3443430	ArgumentList	received		3443202	1					
ANR	3443431	Argument	received		3443202	0					
ANR	3443432	Identifier	received		3443202	0					
ANR	3443433	Argument	last		3443202	1					
ANR	3443434	Identifier	last		3443202	0					
ANR	3443435	Argument	seqNo		3443202	2					
ANR	3443436	Identifier	seqNo		3443202	0					
ANR	3443437	Argument	length		3443202	3					
ANR	3443438	Identifier	length		3443202	0					
ANR	3443439	Argument	mID		3443202	4					
ANR	3443440	Identifier	mID		3443202	0					
ANR	3443441	Argument	data		3443202	5					
ANR	3443442	Identifier	data		3443202	0					
ANR	3443443	IfStatement	if ( length <= 0 || length > SAFE_MSG_MAX_PACKET_SIZE )		3443202	17					
ANR	3443444	Condition	length <= 0 || length > SAFE_MSG_MAX_PACKET_SIZE	637:6:17038:17085	3443202	0	True				
ANR	3443445	OrExpression	length <= 0 || length > SAFE_MSG_MAX_PACKET_SIZE		3443202	0		||			
ANR	3443446	RelationalExpression	length <= 0		3443202	0		<=			
ANR	3443447	Identifier	length		3443202	0					
ANR	3443448	PrimaryExpression	0		3443202	1					
ANR	3443449	RelationalExpression	length > SAFE_MSG_MAX_PACKET_SIZE		3443202	1		>			
ANR	3443450	Identifier	length		3443202	0					
ANR	3443451	Identifier	SAFE_MSG_MAX_PACKET_SIZE		3443202	1					
ANR	3443452	CompoundStatement		67:57:2219:2219	3443202	1					
ANR	3443453	ExpressionStatement	"dprintf ( D_ALWAYS , ""IO: Incoming datagram improperly sized\\n"" )"	639:2:17149:17209	3443202	0	True				
ANR	3443454	CallExpression	"dprintf ( D_ALWAYS , ""IO: Incoming datagram improperly sized\\n"" )"		3443202	0					
ANR	3443455	Callee	dprintf		3443202	0					
ANR	3443456	Identifier	dprintf		3443202	0					
ANR	3443457	ArgumentList	D_ALWAYS		3443202	1					
ANR	3443458	Argument	D_ALWAYS		3443202	0					
ANR	3443459	Identifier	D_ALWAYS		3443202	0					
ANR	3443460	Argument	"""IO: Incoming datagram improperly sized\\n"""		3443202	1					
ANR	3443461	PrimaryExpression	"""IO: Incoming datagram improperly sized\\n"""		3443202	0					
ANR	3443462	ReturnStatement	return FALSE ;	640:2:17213:17225	3443202	1	True				
ANR	3443463	Identifier	FALSE		3443202	0					
ANR	3443464	IfStatement	if ( is_full_message )		3443202	18					
ANR	3443465	Condition	is_full_message	643:9:17240:17254	3443202	0	True				
ANR	3443466	Identifier	is_full_message		3443202	0					
ANR	3443467	CompoundStatement		73:27:2388:2388	3443202	1					
ANR	3443468	ExpressionStatement	_shortMsg . curIndex = 0	644:8:17268:17290	3443202	0	True				
ANR	3443469	AssignmentExpression	_shortMsg . curIndex = 0		3443202	0		=			
ANR	3443470	MemberAccess	_shortMsg . curIndex		3443202	0					
ANR	3443471	Identifier	_shortMsg		3443202	0					
ANR	3443472	Identifier	curIndex		3443202	1					
ANR	3443473	PrimaryExpression	0		3443202	1					
ANR	3443474	ExpressionStatement	_msgReady = true	645:8:17300:17316	3443202	1	True				
ANR	3443475	AssignmentExpression	_msgReady = true		3443202	0		=			
ANR	3443476	Identifier	_msgReady		3443202	0					
ANR	3443477	Identifier	true		3443202	1					
ANR	3443478	ExpressionStatement	_whole ++	646:8:17326:17334	3443202	2	True				
ANR	3443479	PostIncDecOperationExpression	_whole ++		3443202	0					
ANR	3443480	Identifier	_whole		3443202	0					
ANR	3443481	IncDec	++		3443202	1					
ANR	3443482	IfStatement	if ( _whole == 1 )		3443202	3					
ANR	3443483	Condition	_whole == 1	647:11:17347:17357	3443202	0	True				
ANR	3443484	EqualityExpression	_whole == 1		3443202	0		==			
ANR	3443485	Identifier	_whole		3443202	0					
ANR	3443486	PrimaryExpression	1		3443202	1					
ANR	3443487	ExpressionStatement	_avgSwhole = length	648:12:17372:17391	3443202	1	True				
ANR	3443488	AssignmentExpression	_avgSwhole = length		3443202	0		=			
ANR	3443489	Identifier	_avgSwhole		3443202	0					
ANR	3443490	Identifier	length		3443202	1					
ANR	3443491	ElseStatement	else		3443202	0					
ANR	3443492	ExpressionStatement	_avgSwhole = ( ( _whole - 1 ) * _avgSwhole + length ) / _whole	650:12:17418:17476	3443202	0	True				
ANR	3443493	AssignmentExpression	_avgSwhole = ( ( _whole - 1 ) * _avgSwhole + length ) / _whole		3443202	0		=			
ANR	3443494	Identifier	_avgSwhole		3443202	0					
ANR	3443495	MultiplicativeExpression	( ( _whole - 1 ) * _avgSwhole + length ) / _whole		3443202	1		/			
ANR	3443496	AdditiveExpression	( _whole - 1 ) * _avgSwhole + length		3443202	0		+			
ANR	3443497	MultiplicativeExpression	( _whole - 1 ) * _avgSwhole		3443202	0		*			
ANR	3443498	AdditiveExpression	_whole - 1		3443202	0		-			
ANR	3443499	Identifier	_whole		3443202	0					
ANR	3443500	PrimaryExpression	1		3443202	1					
ANR	3443501	Identifier	_avgSwhole		3443202	1					
ANR	3443502	Identifier	length		3443202	1					
ANR	3443503	Identifier	_whole		3443202	1					
ANR	3443504	ExpressionStatement	_noMsgs ++	652:8:17495:17504	3443202	4	True				
ANR	3443505	PostIncDecOperationExpression	_noMsgs ++		3443202	0					
ANR	3443506	Identifier	_noMsgs		3443202	0					
ANR	3443507	IncDec	++		3443202	1					
ANR	3443508	ExpressionStatement	"dprintf ( D_NETWORK , ""\\tFull msg [%d bytes]\\n"" , length )"	653:8:17514:17568	3443202	5	True				
ANR	3443509	CallExpression	"dprintf ( D_NETWORK , ""\\tFull msg [%d bytes]\\n"" , length )"		3443202	0					
ANR	3443510	Callee	dprintf		3443202	0					
ANR	3443511	Identifier	dprintf		3443202	0					
ANR	3443512	ArgumentList	D_NETWORK		3443202	1					
ANR	3443513	Argument	D_NETWORK		3443202	0					
ANR	3443514	Identifier	D_NETWORK		3443202	0					
ANR	3443515	Argument	"""\\tFull msg [%d bytes]\\n"""		3443202	1					
ANR	3443516	PrimaryExpression	"""\\tFull msg [%d bytes]\\n"""		3443202	0					
ANR	3443517	Argument	length		3443202	2					
ANR	3443518	Identifier	length		3443202	0					
ANR	3443519	ReturnStatement	return TRUE ;	654:8:17578:17589	3443202	6	True				
ANR	3443520	Identifier	TRUE		3443202	0					
ANR	3443521	ExpressionStatement	"dprintf ( D_NETWORK , ""\\tFrag [%d bytes]\\n"" , length )"	657:4:17602:17652	3443202	19	True				
ANR	3443522	CallExpression	"dprintf ( D_NETWORK , ""\\tFrag [%d bytes]\\n"" , length )"		3443202	0					
ANR	3443523	Callee	dprintf		3443202	0					
ANR	3443524	Identifier	dprintf		3443202	0					
ANR	3443525	ArgumentList	D_NETWORK		3443202	1					
ANR	3443526	Argument	D_NETWORK		3443202	0					
ANR	3443527	Identifier	D_NETWORK		3443202	0					
ANR	3443528	Argument	"""\\tFrag [%d bytes]\\n"""		3443202	1					
ANR	3443529	PrimaryExpression	"""\\tFrag [%d bytes]\\n"""		3443202	0					
ANR	3443530	Argument	length		3443202	2					
ANR	3443531	Identifier	length		3443202	0					
ANR	3443532	ExpressionStatement	curTime = ( unsigned long ) time ( NULL )	660:4:17686:17721	3443202	20	True				
ANR	3443533	AssignmentExpression	curTime = ( unsigned long ) time ( NULL )		3443202	0		=			
ANR	3443534	Identifier	curTime		3443202	0					
ANR	3443535	CastExpression	( unsigned long ) time ( NULL )		3443202	1					
ANR	3443536	CastTarget	unsigned long		3443202	0					
ANR	3443537	CallExpression	time ( NULL )		3443202	1					
ANR	3443538	Callee	time		3443202	0					
ANR	3443539	Identifier	time		3443202	0					
ANR	3443540	ArgumentList	NULL		3443202	1					
ANR	3443541	Argument	NULL		3443202	0					
ANR	3443542	Identifier	NULL		3443202	0					
ANR	3443543	ExpressionStatement	index = labs ( mID . ip_addr + mID . time + mID . msgNo ) % SAFE_SOCK_HASH_BUCKET_SIZE	661:4:17727:17804	3443202	21	True				
ANR	3443544	AssignmentExpression	index = labs ( mID . ip_addr + mID . time + mID . msgNo ) % SAFE_SOCK_HASH_BUCKET_SIZE		3443202	0		=			
ANR	3443545	Identifier	index		3443202	0					
ANR	3443546	MultiplicativeExpression	labs ( mID . ip_addr + mID . time + mID . msgNo ) % SAFE_SOCK_HASH_BUCKET_SIZE		3443202	1		%			
ANR	3443547	CallExpression	labs ( mID . ip_addr + mID . time + mID . msgNo )		3443202	0					
ANR	3443548	Callee	labs		3443202	0					
ANR	3443549	Identifier	labs		3443202	0					
ANR	3443550	ArgumentList	mID . ip_addr + mID . time + mID . msgNo		3443202	1					
ANR	3443551	Argument	mID . ip_addr + mID . time + mID . msgNo		3443202	0					
ANR	3443552	AdditiveExpression	mID . ip_addr + mID . time + mID . msgNo		3443202	0		+			
ANR	3443553	MemberAccess	mID . ip_addr		3443202	0					
ANR	3443554	Identifier	mID		3443202	0					
ANR	3443555	Identifier	ip_addr		3443202	1					
ANR	3443556	AdditiveExpression	mID . time + mID . msgNo		3443202	1		+			
ANR	3443557	MemberAccess	mID . time		3443202	0					
ANR	3443558	Identifier	mID		3443202	0					
ANR	3443559	Identifier	time		3443202	1					
ANR	3443560	MemberAccess	mID . msgNo		3443202	1					
ANR	3443561	Identifier	mID		3443202	0					
ANR	3443562	Identifier	msgNo		3443202	1					
ANR	3443563	Identifier	SAFE_SOCK_HASH_BUCKET_SIZE		3443202	1					
ANR	3443564	ExpressionStatement	tempMsg = _inMsgs [ index ]	662:4:17810:17834	3443202	22	True				
ANR	3443565	AssignmentExpression	tempMsg = _inMsgs [ index ]		3443202	0		=			
ANR	3443566	Identifier	tempMsg		3443202	0					
ANR	3443567	ArrayIndexing	_inMsgs [ index ]		3443202	1					
ANR	3443568	Identifier	_inMsgs		3443202	0					
ANR	3443569	Identifier	index		3443202	1					
ANR	3443570	WhileStatement	"while ( tempMsg != NULL && ! same ( tempMsg -> msgID , mID ) )"		3443202	23					
ANR	3443571	Condition	"tempMsg != NULL && ! same ( tempMsg -> msgID , mID )"	663:10:17846:17890	3443202	0	True				
ANR	3443572	AndExpression	"tempMsg != NULL && ! same ( tempMsg -> msgID , mID )"		3443202	0		&&			
ANR	3443573	EqualityExpression	tempMsg != NULL		3443202	0		!=			
ANR	3443574	Identifier	tempMsg		3443202	0					
ANR	3443575	Identifier	NULL		3443202	1					
ANR	3443576	UnaryOperationExpression	"! same ( tempMsg -> msgID , mID )"		3443202	1					
ANR	3443577	UnaryOperator	!		3443202	0					
ANR	3443578	CallExpression	"same ( tempMsg -> msgID , mID )"		3443202	1					
ANR	3443579	Callee	same		3443202	0					
ANR	3443580	Identifier	same		3443202	0					
ANR	3443581	ArgumentList	tempMsg -> msgID		3443202	1					
ANR	3443582	Argument	tempMsg -> msgID		3443202	0					
ANR	3443583	PtrMemberAccess	tempMsg -> msgID		3443202	0					
ANR	3443584	Identifier	tempMsg		3443202	0					
ANR	3443585	Identifier	msgID		3443202	1					
ANR	3443586	Argument	mID		3443202	1					
ANR	3443587	Identifier	mID		3443202	0					
ANR	3443588	CompoundStatement		93:57:3023:3023	3443202	1					
ANR	3443589	ExpressionStatement	prev = tempMsg	664:8:17903:17917	3443202	0	True				
ANR	3443590	AssignmentExpression	prev = tempMsg		3443202	0		=			
ANR	3443591	Identifier	prev		3443202	0					
ANR	3443592	Identifier	tempMsg		3443202	1					
ANR	3443593	ExpressionStatement	tempMsg = tempMsg -> nextMsg	665:8:17927:17953	3443202	1	True				
ANR	3443594	AssignmentExpression	tempMsg = tempMsg -> nextMsg		3443202	0		=			
ANR	3443595	Identifier	tempMsg		3443202	0					
ANR	3443596	PtrMemberAccess	tempMsg -> nextMsg		3443202	1					
ANR	3443597	Identifier	tempMsg		3443202	0					
ANR	3443598	Identifier	nextMsg		3443202	1					
ANR	3443599	IfStatement	if ( curTime - prev -> lastTime > _tOutBtwPkts )		3443202	2					
ANR	3443600	Condition	curTime - prev -> lastTime > _tOutBtwPkts	667:11:18004:18042	3443202	0	True				
ANR	3443601	RelationalExpression	curTime - prev -> lastTime > _tOutBtwPkts		3443202	0		>			
ANR	3443602	AdditiveExpression	curTime - prev -> lastTime		3443202	0		-			
ANR	3443603	Identifier	curTime		3443202	0					
ANR	3443604	PtrMemberAccess	prev -> lastTime		3443202	1					
ANR	3443605	Identifier	prev		3443202	0					
ANR	3443606	Identifier	lastTime		3443202	1					
ANR	3443607	Identifier	_tOutBtwPkts		3443202	1					
ANR	3443608	CompoundStatement		97:52:3175:3175	3443202	1					
ANR	3443609	ExpressionStatement	"dprintf ( D_NETWORK , ""found timed out msg: cur=%lu, msg=%lu\\n"" , curTime , prev -> lastTime )"	668:12:18059:18165	3443202	0	True				
ANR	3443610	CallExpression	"dprintf ( D_NETWORK , ""found timed out msg: cur=%lu, msg=%lu\\n"" , curTime , prev -> lastTime )"		3443202	0					
ANR	3443611	Callee	dprintf		3443202	0					
ANR	3443612	Identifier	dprintf		3443202	0					
ANR	3443613	ArgumentList	D_NETWORK		3443202	1					
ANR	3443614	Argument	D_NETWORK		3443202	0					
ANR	3443615	Identifier	D_NETWORK		3443202	0					
ANR	3443616	Argument	"""found timed out msg: cur=%lu, msg=%lu\\n"""		3443202	1					
ANR	3443617	PrimaryExpression	"""found timed out msg: cur=%lu, msg=%lu\\n"""		3443202	0					
ANR	3443618	Argument	curTime		3443202	2					
ANR	3443619	Identifier	curTime		3443202	0					
ANR	3443620	Argument	prev -> lastTime		3443202	3					
ANR	3443621	PtrMemberAccess	prev -> lastTime		3443202	0					
ANR	3443622	Identifier	prev		3443202	0					
ANR	3443623	Identifier	lastTime		3443202	1					
ANR	3443624	ExpressionStatement	delMsg = prev	670:12:18179:18192	3443202	1	True				
ANR	3443625	AssignmentExpression	delMsg = prev		3443202	0		=			
ANR	3443626	Identifier	delMsg		3443202	0					
ANR	3443627	Identifier	prev		3443202	1					
ANR	3443628	ExpressionStatement	prev = delMsg -> prevMsg	671:12:18206:18228	3443202	2	True				
ANR	3443629	AssignmentExpression	prev = delMsg -> prevMsg		3443202	0		=			
ANR	3443630	Identifier	prev		3443202	0					
ANR	3443631	PtrMemberAccess	delMsg -> prevMsg		3443202	1					
ANR	3443632	Identifier	delMsg		3443202	0					
ANR	3443633	Identifier	prevMsg		3443202	1					
ANR	3443634	IfStatement	if ( prev )		3443202	3					
ANR	3443635	Condition	prev	672:15:18245:18248	3443202	0	True				
ANR	3443636	Identifier	prev		3443202	0					
ANR	3443637	ExpressionStatement	prev -> nextMsg = delMsg -> nextMsg	673:16:18267:18298	3443202	1	True				
ANR	3443638	AssignmentExpression	prev -> nextMsg = delMsg -> nextMsg		3443202	0		=			
ANR	3443639	PtrMemberAccess	prev -> nextMsg		3443202	0					
ANR	3443640	Identifier	prev		3443202	0					
ANR	3443641	Identifier	nextMsg		3443202	1					
ANR	3443642	PtrMemberAccess	delMsg -> nextMsg		3443202	1					
ANR	3443643	Identifier	delMsg		3443202	0					
ANR	3443644	Identifier	nextMsg		3443202	1					
ANR	3443645	ElseStatement	else		3443202	0					
ANR	3443646	ExpressionStatement	_inMsgs [ index ] = tempMsg	675:16:18376:18400	3443202	0	True				
ANR	3443647	AssignmentExpression	_inMsgs [ index ] = tempMsg		3443202	0		=			
ANR	3443648	ArrayIndexing	_inMsgs [ index ]		3443202	0					
ANR	3443649	Identifier	_inMsgs		3443202	0					
ANR	3443650	Identifier	index		3443202	1					
ANR	3443651	Identifier	tempMsg		3443202	1					
ANR	3443652	IfStatement	if ( tempMsg )		3443202	4					
ANR	3443653	Condition	tempMsg	676:15:18417:18423	3443202	0	True				
ANR	3443654	Identifier	tempMsg		3443202	0					
ANR	3443655	ExpressionStatement	tempMsg -> prevMsg = prev	677:16:18442:18465	3443202	1	True				
ANR	3443656	AssignmentExpression	tempMsg -> prevMsg = prev		3443202	0		=			
ANR	3443657	PtrMemberAccess	tempMsg -> prevMsg		3443202	0					
ANR	3443658	Identifier	tempMsg		3443202	0					
ANR	3443659	Identifier	prevMsg		3443202	1					
ANR	3443660	Identifier	prev		3443202	1					
ANR	3443661	ExpressionStatement	_deleted ++	678:12:18479:18489	3443202	5	True				
ANR	3443662	PostIncDecOperationExpression	_deleted ++		3443202	0					
ANR	3443663	Identifier	_deleted		3443202	0					
ANR	3443664	IncDec	++		3443202	1					
ANR	3443665	IfStatement	if ( _deleted == 1 )		3443202	6					
ANR	3443666	Condition	_deleted == 1	679:15:18506:18518	3443202	0	True				
ANR	3443667	EqualityExpression	_deleted == 1		3443202	0		==			
ANR	3443668	Identifier	_deleted		3443202	0					
ANR	3443669	PrimaryExpression	1		3443202	1					
ANR	3443670	ExpressionStatement	_avgSdeleted = delMsg -> msgLen	680:16:18537:18566	3443202	1	True				
ANR	3443671	AssignmentExpression	_avgSdeleted = delMsg -> msgLen		3443202	0		=			
ANR	3443672	Identifier	_avgSdeleted		3443202	0					
ANR	3443673	PtrMemberAccess	delMsg -> msgLen		3443202	1					
ANR	3443674	Identifier	delMsg		3443202	0					
ANR	3443675	Identifier	msgLen		3443202	1					
ANR	3443676	ElseStatement	else		3443202	0					
ANR	3443677	CompoundStatement		111:21:3719:3719	3443202	0					
ANR	3443678	ExpressionStatement	_avgSdeleted = ( ( _deleted - 1 ) * _avgSdeleted + delMsg -> msgLen ) / _deleted	682:16:18607:18681	3443202	0	True				
ANR	3443679	AssignmentExpression	_avgSdeleted = ( ( _deleted - 1 ) * _avgSdeleted + delMsg -> msgLen ) / _deleted		3443202	0		=			
ANR	3443680	Identifier	_avgSdeleted		3443202	0					
ANR	3443681	MultiplicativeExpression	( ( _deleted - 1 ) * _avgSdeleted + delMsg -> msgLen ) / _deleted		3443202	1		/			
ANR	3443682	AdditiveExpression	( _deleted - 1 ) * _avgSdeleted + delMsg -> msgLen		3443202	0		+			
ANR	3443683	MultiplicativeExpression	( _deleted - 1 ) * _avgSdeleted		3443202	0		*			
ANR	3443684	AdditiveExpression	_deleted - 1		3443202	0		-			
ANR	3443685	Identifier	_deleted		3443202	0					
ANR	3443686	PrimaryExpression	1		3443202	1					
ANR	3443687	Identifier	_avgSdeleted		3443202	1					
ANR	3443688	PtrMemberAccess	delMsg -> msgLen		3443202	1					
ANR	3443689	Identifier	delMsg		3443202	0					
ANR	3443690	Identifier	msgLen		3443202	1					
ANR	3443691	Identifier	_deleted		3443202	1					
ANR	3443692	ExpressionStatement	"dprintf ( D_NETWORK , ""Deleting timeouted message:\\n"" )"	684:12:18712:18763	3443202	7	True				
ANR	3443693	CallExpression	"dprintf ( D_NETWORK , ""Deleting timeouted message:\\n"" )"		3443202	0					
ANR	3443694	Callee	dprintf		3443202	0					
ANR	3443695	Identifier	dprintf		3443202	0					
ANR	3443696	ArgumentList	D_NETWORK		3443202	1					
ANR	3443697	Argument	D_NETWORK		3443202	0					
ANR	3443698	Identifier	D_NETWORK		3443202	0					
ANR	3443699	Argument	"""Deleting timeouted message:\\n"""		3443202	1					
ANR	3443700	PrimaryExpression	"""Deleting timeouted message:\\n"""		3443202	0					
ANR	3443701	ExpressionStatement	delMsg -> dumpMsg ( )	685:12:18777:18794	3443202	8	True				
ANR	3443702	CallExpression	delMsg -> dumpMsg ( )		3443202	0					
ANR	3443703	Callee	delMsg -> dumpMsg		3443202	0					
ANR	3443704	PtrMemberAccess	delMsg -> dumpMsg		3443202	0					
ANR	3443705	Identifier	delMsg		3443202	0					
ANR	3443706	Identifier	dumpMsg		3443202	1					
ANR	3443707	ArgumentList			3443202	1					
ANR	3443708	Statement	delete	686:12:18808:18813	3443202	9	True				
ANR	3443709	ExpressionStatement	delMsg	686:19:18815:18821	3443202	10	True				
ANR	3443710	Identifier	delMsg		3443202	0					
ANR	3443711	IfStatement	if ( tempMsg != NULL )		3443202	24					
ANR	3443712	Condition	tempMsg != NULL	689:7:18852:18866	3443202	0	True				
ANR	3443713	EqualityExpression	tempMsg != NULL		3443202	0		!=			
ANR	3443714	Identifier	tempMsg		3443202	0					
ANR	3443715	Identifier	NULL		3443202	1					
ANR	3443716	CompoundStatement		125:8:4194:4250	3443202	1					
ANR	3443717	IfStatement	if ( seqNo == 0 )		3443202	0					
ANR	3443718	Condition	seqNo == 0	690:12:18892:18901	3443202	0	True				
ANR	3443719	EqualityExpression	seqNo == 0		3443202	0		==			
ANR	3443720	Identifier	seqNo		3443202	0					
ANR	3443721	PrimaryExpression	0		3443202	1					
ANR	3443722	CompoundStatement		120:24:4034:4034	3443202	1					
ANR	3443723	ExpressionStatement	"tempMsg -> set_sec ( _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) )"	691:12:18918:19044	3443202	0	True				
ANR	3443724	CallExpression	"tempMsg -> set_sec ( _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) )"		3443202	0					
ANR	3443725	Callee	tempMsg -> set_sec		3443202	0					
ANR	3443726	PtrMemberAccess	tempMsg -> set_sec		3443202	0					
ANR	3443727	Identifier	tempMsg		3443202	0					
ANR	3443728	Identifier	set_sec		3443202	1					
ANR	3443729	ArgumentList	_shortMsg . isDataMD5ed ( )		3443202	1					
ANR	3443730	Argument	_shortMsg . isDataMD5ed ( )		3443202	0					
ANR	3443731	CallExpression	_shortMsg . isDataMD5ed ( )		3443202	0					
ANR	3443732	Callee	_shortMsg . isDataMD5ed		3443202	0					
ANR	3443733	MemberAccess	_shortMsg . isDataMD5ed		3443202	0					
ANR	3443734	Identifier	_shortMsg		3443202	0					
ANR	3443735	Identifier	isDataMD5ed		3443202	1					
ANR	3443736	ArgumentList			3443202	1					
ANR	3443737	Argument	_shortMsg . md ( )		3443202	1					
ANR	3443738	CallExpression	_shortMsg . md ( )		3443202	0					
ANR	3443739	Callee	_shortMsg . md		3443202	0					
ANR	3443740	MemberAccess	_shortMsg . md		3443202	0					
ANR	3443741	Identifier	_shortMsg		3443202	0					
ANR	3443742	Identifier	md		3443202	1					
ANR	3443743	ArgumentList			3443202	1					
ANR	3443744	Argument	_shortMsg . isDataEncrypted ( )		3443202	2					
ANR	3443745	CallExpression	_shortMsg . isDataEncrypted ( )		3443202	0					
ANR	3443746	Callee	_shortMsg . isDataEncrypted		3443202	0					
ANR	3443747	MemberAccess	_shortMsg . isDataEncrypted		3443202	0					
ANR	3443748	Identifier	_shortMsg		3443202	0					
ANR	3443749	Identifier	isDataEncrypted		3443202	1					
ANR	3443750	ArgumentList			3443202	1					
ANR	3443751	IdentifierDeclStatement	"bool rst = tempMsg -> addPacket ( last , seqNo , length , data ) ;"	695:8:19064:19120	3443202	1	True				
ANR	3443752	IdentifierDecl	"rst = tempMsg -> addPacket ( last , seqNo , length , data )"		3443202	0					
ANR	3443753	IdentifierDeclType	bool		3443202	0					
ANR	3443754	Identifier	rst		3443202	1					
ANR	3443755	AssignmentExpression	"rst = tempMsg -> addPacket ( last , seqNo , length , data )"		3443202	2		=			
ANR	3443756	Identifier	rst		3443202	0					
ANR	3443757	CallExpression	"tempMsg -> addPacket ( last , seqNo , length , data )"		3443202	1					
ANR	3443758	Callee	tempMsg -> addPacket		3443202	0					
ANR	3443759	PtrMemberAccess	tempMsg -> addPacket		3443202	0					
ANR	3443760	Identifier	tempMsg		3443202	0					
ANR	3443761	Identifier	addPacket		3443202	1					
ANR	3443762	ArgumentList	last		3443202	1					
ANR	3443763	Argument	last		3443202	0					
ANR	3443764	Identifier	last		3443202	0					
ANR	3443765	Argument	seqNo		3443202	1					
ANR	3443766	Identifier	seqNo		3443202	0					
ANR	3443767	Argument	length		3443202	2					
ANR	3443768	Identifier	length		3443202	0					
ANR	3443769	Argument	data		3443202	3					
ANR	3443770	Identifier	data		3443202	0					
ANR	3443771	IfStatement	if ( rst )		3443202	2					
ANR	3443772	Condition	rst	698:12:19216:19218	3443202	0	True				
ANR	3443773	Identifier	rst		3443202	0					
ANR	3443774	CompoundStatement		128:17:4351:4351	3443202	1					
ANR	3443775	ExpressionStatement	_longMsg = tempMsg	699:12:19235:19253	3443202	0	True				
ANR	3443776	AssignmentExpression	_longMsg = tempMsg		3443202	0		=			
ANR	3443777	Identifier	_longMsg		3443202	0					
ANR	3443778	Identifier	tempMsg		3443202	1					
ANR	3443779	ExpressionStatement	_msgReady = true	700:12:19267:19283	3443202	1	True				
ANR	3443780	AssignmentExpression	_msgReady = true		3443202	0		=			
ANR	3443781	Identifier	_msgReady		3443202	0					
ANR	3443782	Identifier	true		3443202	1					
ANR	3443783	ExpressionStatement	_whole ++	701:12:19297:19305	3443202	2	True				
ANR	3443784	PostIncDecOperationExpression	_whole ++		3443202	0					
ANR	3443785	Identifier	_whole		3443202	0					
ANR	3443786	IncDec	++		3443202	1					
ANR	3443787	IfStatement	if ( _whole == 1 )		3443202	3					
ANR	3443788	Condition	_whole == 1	702:15:19322:19332	3443202	0	True				
ANR	3443789	EqualityExpression	_whole == 1		3443202	0		==			
ANR	3443790	Identifier	_whole		3443202	0					
ANR	3443791	PrimaryExpression	1		3443202	1					
ANR	3443792	ExpressionStatement	_avgSwhole = _longMsg -> msgLen	703:16:19351:19380	3443202	1	True				
ANR	3443793	AssignmentExpression	_avgSwhole = _longMsg -> msgLen		3443202	0		=			
ANR	3443794	Identifier	_avgSwhole		3443202	0					
ANR	3443795	PtrMemberAccess	_longMsg -> msgLen		3443202	1					
ANR	3443796	Identifier	_longMsg		3443202	0					
ANR	3443797	Identifier	msgLen		3443202	1					
ANR	3443798	ElseStatement	else		3443202	0					
ANR	3443799	ExpressionStatement	_avgSwhole = ( ( _whole - 1 ) * _avgSwhole + _longMsg -> msgLen ) / _whole	705:16:19415:19483	3443202	0	True				
ANR	3443800	AssignmentExpression	_avgSwhole = ( ( _whole - 1 ) * _avgSwhole + _longMsg -> msgLen ) / _whole		3443202	0		=			
ANR	3443801	Identifier	_avgSwhole		3443202	0					
ANR	3443802	MultiplicativeExpression	( ( _whole - 1 ) * _avgSwhole + _longMsg -> msgLen ) / _whole		3443202	1		/			
ANR	3443803	AdditiveExpression	( _whole - 1 ) * _avgSwhole + _longMsg -> msgLen		3443202	0		+			
ANR	3443804	MultiplicativeExpression	( _whole - 1 ) * _avgSwhole		3443202	0		*			
ANR	3443805	AdditiveExpression	_whole - 1		3443202	0		-			
ANR	3443806	Identifier	_whole		3443202	0					
ANR	3443807	PrimaryExpression	1		3443202	1					
ANR	3443808	Identifier	_avgSwhole		3443202	1					
ANR	3443809	PtrMemberAccess	_longMsg -> msgLen		3443202	1					
ANR	3443810	Identifier	_longMsg		3443202	0					
ANR	3443811	Identifier	msgLen		3443202	1					
ANR	3443812	Identifier	_whole		3443202	1					
ANR	3443813	ReturnStatement	return TRUE ;	706:12:19497:19508	3443202	4	True				
ANR	3443814	Identifier	TRUE		3443202	0					
ANR	3443815	ReturnStatement	return FALSE ;	708:8:19528:19540	3443202	3	True				
ANR	3443816	Identifier	FALSE		3443202	0					
ANR	3443817	ElseStatement	else		3443202	0					
ANR	3443818	CompoundStatement		139:11:4683:4683	3443202	0					
ANR	3443819	IfStatement	if ( prev )		3443202	0					
ANR	3443820	Condition	prev	710:11:19579:19582	3443202	0	True				
ANR	3443821	Identifier	prev		3443202	0					
ANR	3443822	CompoundStatement		140:17:4715:4715	3443202	1					
ANR	3443823	ExpressionStatement	"prev -> nextMsg = new _condorInMsg ( mID , last , seqNo , length , data , _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , prev )"	711:12:19644:19922	3443202	0	True				
ANR	3443824	AssignmentExpression	"prev -> nextMsg = new _condorInMsg ( mID , last , seqNo , length , data , _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , prev )"		3443202	0		=			
ANR	3443825	PtrMemberAccess	prev -> nextMsg		3443202	0					
ANR	3443826	Identifier	prev		3443202	0					
ANR	3443827	Identifier	nextMsg		3443202	1					
ANR	3443828	Expression	"mID , last , seqNo , length , data , _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , prev"		3443202	1					
ANR	3443829	Identifier	mID		3443202	0					
ANR	3443830	Expression	"last , seqNo , length , data , _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , prev"		3443202	1					
ANR	3443831	Identifier	last		3443202	0					
ANR	3443832	Expression	"seqNo , length , data , _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , prev"		3443202	1					
ANR	3443833	Identifier	seqNo		3443202	0					
ANR	3443834	Expression	"length , data , _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , prev"		3443202	1					
ANR	3443835	Identifier	length		3443202	0					
ANR	3443836	Expression	"data , _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , prev"		3443202	1					
ANR	3443837	Identifier	data		3443202	0					
ANR	3443838	Expression	"_shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , prev"		3443202	1					
ANR	3443839	CallExpression	_shortMsg . isDataMD5ed ( )		3443202	0					
ANR	3443840	Callee	_shortMsg . isDataMD5ed		3443202	0					
ANR	3443841	MemberAccess	_shortMsg . isDataMD5ed		3443202	0					
ANR	3443842	Identifier	_shortMsg		3443202	0					
ANR	3443843	Identifier	isDataMD5ed		3443202	1					
ANR	3443844	ArgumentList			3443202	1					
ANR	3443845	Expression	"_shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , prev"		3443202	1					
ANR	3443846	CallExpression	_shortMsg . md ( )		3443202	0					
ANR	3443847	Callee	_shortMsg . md		3443202	0					
ANR	3443848	MemberAccess	_shortMsg . md		3443202	0					
ANR	3443849	Identifier	_shortMsg		3443202	0					
ANR	3443850	Identifier	md		3443202	1					
ANR	3443851	ArgumentList			3443202	1					
ANR	3443852	Expression	"_shortMsg . isDataEncrypted ( ) , prev"		3443202	1					
ANR	3443853	CallExpression	_shortMsg . isDataEncrypted ( )		3443202	0					
ANR	3443854	Callee	_shortMsg . isDataEncrypted		3443202	0					
ANR	3443855	MemberAccess	_shortMsg . isDataEncrypted		3443202	0					
ANR	3443856	Identifier	_shortMsg		3443202	0					
ANR	3443857	Identifier	isDataEncrypted		3443202	1					
ANR	3443858	ArgumentList			3443202	1					
ANR	3443859	Identifier	prev		3443202	1					
ANR	3443860	IfStatement	if ( ! prev -> nextMsg )		3443202	1					
ANR	3443861	Condition	! prev -> nextMsg	715:15:19939:19952	3443202	0	True				
ANR	3443862	UnaryOperationExpression	! prev -> nextMsg		3443202	0					
ANR	3443863	UnaryOperator	!		3443202	0					
ANR	3443864	PtrMemberAccess	prev -> nextMsg		3443202	1					
ANR	3443865	Identifier	prev		3443202	0					
ANR	3443866	Identifier	nextMsg		3443202	1					
ANR	3443867	CompoundStatement		145:31:5085:5085	3443202	1					
ANR	3443868	ExpressionStatement	"EXCEPT ( ""Error:handle_incomming_packet: Out of Memory"" )"	716:16:19977:20031	3443202	0	True				
ANR	3443869	CallExpression	"EXCEPT ( ""Error:handle_incomming_packet: Out of Memory"" )"		3443202	0					
ANR	3443870	Callee	EXCEPT		3443202	0					
ANR	3443871	Identifier	EXCEPT		3443202	0					
ANR	3443872	ArgumentList	"""Error:handle_incomming_packet: Out of Memory"""		3443202	1					
ANR	3443873	Argument	"""Error:handle_incomming_packet: Out of Memory"""		3443202	0					
ANR	3443874	PrimaryExpression	"""Error:handle_incomming_packet: Out of Memory"""		3443202	0					
ANR	3443875	ElseStatement	else		3443202	0					
ANR	3443876	CompoundStatement		150:15:5287:5287	3443202	0					
ANR	3443877	ExpressionStatement	"_inMsgs [ index ] = new _condorInMsg ( mID , last , seqNo , length , data , _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , NULL )"	721:12:20202:20484	3443202	0	True				
ANR	3443878	AssignmentExpression	"_inMsgs [ index ] = new _condorInMsg ( mID , last , seqNo , length , data , _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , NULL )"		3443202	0		=			
ANR	3443879	ArrayIndexing	_inMsgs [ index ]		3443202	0					
ANR	3443880	Identifier	_inMsgs		3443202	0					
ANR	3443881	Identifier	index		3443202	1					
ANR	3443882	Expression	"mID , last , seqNo , length , data , _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , NULL"		3443202	1					
ANR	3443883	Identifier	mID		3443202	0					
ANR	3443884	Expression	"last , seqNo , length , data , _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , NULL"		3443202	1					
ANR	3443885	Identifier	last		3443202	0					
ANR	3443886	Expression	"seqNo , length , data , _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , NULL"		3443202	1					
ANR	3443887	Identifier	seqNo		3443202	0					
ANR	3443888	Expression	"length , data , _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , NULL"		3443202	1					
ANR	3443889	Identifier	length		3443202	0					
ANR	3443890	Expression	"data , _shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , NULL"		3443202	1					
ANR	3443891	Identifier	data		3443202	0					
ANR	3443892	Expression	"_shortMsg . isDataMD5ed ( ) , _shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , NULL"		3443202	1					
ANR	3443893	CallExpression	_shortMsg . isDataMD5ed ( )		3443202	0					
ANR	3443894	Callee	_shortMsg . isDataMD5ed		3443202	0					
ANR	3443895	MemberAccess	_shortMsg . isDataMD5ed		3443202	0					
ANR	3443896	Identifier	_shortMsg		3443202	0					
ANR	3443897	Identifier	isDataMD5ed		3443202	1					
ANR	3443898	ArgumentList			3443202	1					
ANR	3443899	Expression	"_shortMsg . md ( ) , _shortMsg . isDataEncrypted ( ) , NULL"		3443202	1					
ANR	3443900	CallExpression	_shortMsg . md ( )		3443202	0					
ANR	3443901	Callee	_shortMsg . md		3443202	0					
ANR	3443902	MemberAccess	_shortMsg . md		3443202	0					
ANR	3443903	Identifier	_shortMsg		3443202	0					
ANR	3443904	Identifier	md		3443202	1					
ANR	3443905	ArgumentList			3443202	1					
ANR	3443906	Expression	"_shortMsg . isDataEncrypted ( ) , NULL"		3443202	1					
ANR	3443907	CallExpression	_shortMsg . isDataEncrypted ( )		3443202	0					
ANR	3443908	Callee	_shortMsg . isDataEncrypted		3443202	0					
ANR	3443909	MemberAccess	_shortMsg . isDataEncrypted		3443202	0					
ANR	3443910	Identifier	_shortMsg		3443202	0					
ANR	3443911	Identifier	isDataEncrypted		3443202	1					
ANR	3443912	ArgumentList			3443202	1					
ANR	3443913	Identifier	NULL		3443202	1					
ANR	3443914	IfStatement	if ( ! _inMsgs [ index ] )		3443202	1					
ANR	3443915	Condition	! _inMsgs [ index ]	725:15:20501:20515	3443202	0	True				
ANR	3443916	UnaryOperationExpression	! _inMsgs [ index ]		3443202	0					
ANR	3443917	UnaryOperator	!		3443202	0					
ANR	3443918	ArrayIndexing	_inMsgs [ index ]		3443202	1					
ANR	3443919	Identifier	_inMsgs		3443202	0					
ANR	3443920	Identifier	index		3443202	1					
ANR	3443921	CompoundStatement		155:32:5648:5648	3443202	1					
ANR	3443922	ExpressionStatement	"EXCEPT ( ""Error:handle_incomming_packet: Out of Memory"" )"	726:16:20536:20590	3443202	0	True				
ANR	3443923	CallExpression	"EXCEPT ( ""Error:handle_incomming_packet: Out of Memory"" )"		3443202	0					
ANR	3443924	Callee	EXCEPT		3443202	0					
ANR	3443925	Identifier	EXCEPT		3443202	0					
ANR	3443926	ArgumentList	"""Error:handle_incomming_packet: Out of Memory"""		3443202	1					
ANR	3443927	Argument	"""Error:handle_incomming_packet: Out of Memory"""		3443202	0					
ANR	3443928	PrimaryExpression	"""Error:handle_incomming_packet: Out of Memory"""		3443202	0					
ANR	3443929	ExpressionStatement	_noMsgs ++	731:8:20720:20729	3443202	1	True				
ANR	3443930	PostIncDecOperationExpression	_noMsgs ++		3443202	0					
ANR	3443931	Identifier	_noMsgs		3443202	0					
ANR	3443932	IncDec	++		3443202	1					
ANR	3443933	ReturnStatement	return FALSE ;	732:8:20739:20751	3443202	2	True				
ANR	3443934	Identifier	FALSE		3443202	0					
ANR	3443935	ReturnType	int		3443202	1					
ANR	3443936	Identifier	SafeSock :: handle_incoming_packet		3443202	2					
ANR	3443937	ParameterList			3443202	3					
ANR	3443938	CFGEntryNode	ENTRY		3443202		True				
ANR	3443939	CFGExitNode	EXIT		3443202		True				
ANR	3443940	Symbol	tempMsg -> nextMsg		3443202						
ANR	3443941	Symbol	existing_consumed		3443202						
ANR	3443942	Symbol	seqNo		3443202						
ANR	3443943	Symbol	data		3443202						
ANR	3443944	Symbol	prev		3443202						
ANR	3443945	Symbol	_who . to_sinful		3443202						
ANR	3443946	Symbol	* index		3443202						
ANR	3443947	Symbol	prev -> nextMsg		3443202						
ANR	3443948	Symbol	SAFE_MSG_MAX_PACKET_SIZE		3443202						
ANR	3443949	Symbol	delMsg -> prevMsg		3443202						
ANR	3443950	Symbol	prev -> lastTime		3443202						
ANR	3443951	Symbol	mID . msgNo		3443202						
ANR	3443952	Symbol	mID . time		3443202						
ANR	3443953	Symbol	delMsg		3443202						
ANR	3443954	Symbol	existing_msg_type		3443202						
ANR	3443955	Symbol	_shortMsg . consumed		3443202						
ANR	3443956	Symbol	delMsg -> msgLen		3443202						
ANR	3443957	Symbol	SAFE_SOCK_HASH_BUCKET_SIZE		3443202						
ANR	3443958	Symbol	_avgSdeleted		3443202						
ANR	3443959	Symbol	_coding		3443202						
ANR	3443960	Symbol	errno		3443202						
ANR	3443961	Symbol	NULL		3443202						
ANR	3443962	Symbol	_deleted		3443202						
ANR	3443963	Symbol	last		3443202						
ANR	3443964	Symbol	_msgReady		3443202						
ANR	3443965	Symbol	_shortMsg . isDataEncrypted		3443202						
ANR	3443966	Symbol	index		3443202						
ANR	3443967	Symbol	TRUE		3443202						
ANR	3443968	Symbol	received		3443202						
ANR	3443969	Symbol	is_full_message		3443202						
ANR	3443970	Symbol	* _longMsg		3443202						
ANR	3443971	Symbol	* _inMsgs		3443202						
ANR	3443972	Symbol	str		3443202						
ANR	3443973	Symbol	* delMsg		3443202						
ANR	3443974	Symbol	curTime		3443202						
ANR	3443975	Symbol	labs		3443202						
ANR	3443976	Symbol	_who . to_sinful ( ) . Value		3443202						
ANR	3443977	Symbol	true		3443202						
ANR	3443978	Symbol	tempMsg -> msgID		3443202						
ANR	3443979	Symbol	condor_recvfrom		3443202						
ANR	3443980	Symbol	_inMsgs		3443202						
ANR	3443981	Symbol	tempMsg -> addPacket		3443202						
ANR	3443982	Symbol	_shortMsg		3443202						
ANR	3443983	Symbol	stream_decode		3443202						
ANR	3443984	Symbol	mID		3443202						
ANR	3443985	Symbol	* prev		3443202						
ANR	3443986	Symbol	_shortMsg . dataGram		3443202						
ANR	3443987	Symbol	saved_coding		3443202						
ANR	3443988	Symbol	_shortMsg . md		3443202						
ANR	3443989	Symbol	rst		3443202						
ANR	3443990	Symbol	_who		3443202						
ANR	3443991	Symbol	_sock		3443202						
ANR	3443992	Symbol	same		3443202						
ANR	3443993	Symbol	_shortMsg . curIndex		3443202						
ANR	3443994	Symbol	tempMsg -> prevMsg		3443202						
ANR	3443995	Symbol	* tempMsg		3443202						
ANR	3443996	Symbol	delMsg -> nextMsg		3443202						
ANR	3443997	Symbol	_tOutBtwPkts		3443202						
ANR	3443998	Symbol	_whole		3443202						
ANR	3443999	Symbol	_longMsg -> consumed		3443202						
ANR	3444000	Symbol	length		3443202						
ANR	3444001	Symbol	D_ALWAYS		3443202						
ANR	3444002	Symbol	_avgSwhole		3443202						
ANR	3444003	Symbol	tempMsg		3443202						
ANR	3444004	Symbol	_noMsgs		3443202						
ANR	3444005	Symbol	_shortMsg . isDataMD5ed		3443202						
ANR	3444006	Symbol	D_NETWORK		3443202						
ANR	3444007	Symbol	mID . ip_addr		3443202						
ANR	3444008	Symbol	FALSE		3443202						
ANR	3444009	Symbol	time		3443202						
ANR	3444010	Symbol	sock_to_string		3443202						
ANR	3444011	Symbol	_longMsg -> msgLen		3443202						
ANR	3444012	Symbol	_longMsg		3443202						
ANR	3444013	Symbol	_shortMsg . getHeader		3443202						
ANR	3444014	Function	SafeSock :: getStat	737:0:20766:21152							
ANR	3444015	FunctionDef	"SafeSock :: getStat (unsigned long & noMsgs , unsigned long & noWhole , unsigned long & noDeleted , unsigned long & avgMsgSize , unsigned long & szComplete , unsigned long & szDeleted)"		3444014	0					
ANR	3444016	CompoundStatement		743:0:20997:21152	3444014	0					
ANR	3444017	ExpressionStatement	noMsgs = _noMsgs	744:1:21000:21016	3444014	0	True				
ANR	3444018	AssignmentExpression	noMsgs = _noMsgs		3444014	0		=			
ANR	3444019	Identifier	noMsgs		3444014	0					
ANR	3444020	Identifier	_noMsgs		3444014	1					
ANR	3444021	ExpressionStatement	noWhole = _whole	745:1:21019:21035	3444014	1	True				
ANR	3444022	AssignmentExpression	noWhole = _whole		3444014	0		=			
ANR	3444023	Identifier	noWhole		3444014	0					
ANR	3444024	Identifier	_whole		3444014	1					
ANR	3444025	ExpressionStatement	noDeleted = _deleted	746:1:21038:21058	3444014	2	True				
ANR	3444026	AssignmentExpression	noDeleted = _deleted		3444014	0		=			
ANR	3444027	Identifier	noDeleted		3444014	0					
ANR	3444028	Identifier	_deleted		3444014	1					
ANR	3444029	ExpressionStatement	avgMsgSize = _outMsg . getAvgMsgSize ( )	747:1:21061:21097	3444014	3	True				
ANR	3444030	AssignmentExpression	avgMsgSize = _outMsg . getAvgMsgSize ( )		3444014	0		=			
ANR	3444031	Identifier	avgMsgSize		3444014	0					
ANR	3444032	CallExpression	_outMsg . getAvgMsgSize ( )		3444014	1					
ANR	3444033	Callee	_outMsg . getAvgMsgSize		3444014	0					
ANR	3444034	MemberAccess	_outMsg . getAvgMsgSize		3444014	0					
ANR	3444035	Identifier	_outMsg		3444014	0					
ANR	3444036	Identifier	getAvgMsgSize		3444014	1					
ANR	3444037	ArgumentList			3444014	1					
ANR	3444038	ExpressionStatement	szComplete = _avgSwhole	748:1:21100:21123	3444014	4	True				
ANR	3444039	AssignmentExpression	szComplete = _avgSwhole		3444014	0		=			
ANR	3444040	Identifier	szComplete		3444014	0					
ANR	3444041	Identifier	_avgSwhole		3444014	1					
ANR	3444042	ExpressionStatement	szDeleted = _avgSdeleted	749:1:21126:21150	3444014	5	True				
ANR	3444043	AssignmentExpression	szDeleted = _avgSdeleted		3444014	0		=			
ANR	3444044	Identifier	szDeleted		3444014	0					
ANR	3444045	Identifier	_avgSdeleted		3444014	1					
ANR	3444046	ReturnType	void		3444014	1					
ANR	3444047	Identifier	SafeSock :: getStat		3444014	2					
ANR	3444048	ParameterList	"unsigned long & noMsgs , unsigned long & noWhole , unsigned long & noDeleted , unsigned long & avgMsgSize , unsigned long & szComplete , unsigned long & szDeleted"		3444014	3					
ANR	3444049	Parameter	unsigned long & noMsgs	737:23:20789:20809	3444014	0	True				
ANR	3444050	ParameterType	unsigned long &		3444014	0					
ANR	3444051	Identifier	noMsgs		3444014	1					
ANR	3444052	Parameter	unsigned long & noWhole	738:8:20820:20841	3444014	1	True				
ANR	3444053	ParameterType	unsigned long &		3444014	0					
ANR	3444054	Identifier	noWhole		3444014	1					
ANR	3444055	Parameter	unsigned long & noDeleted	739:8:20852:20875	3444014	2	True				
ANR	3444056	ParameterType	unsigned long &		3444014	0					
ANR	3444057	Identifier	noDeleted		3444014	1					
ANR	3444058	Parameter	unsigned long & avgMsgSize	740:8:20886:20910	3444014	3	True				
ANR	3444059	ParameterType	unsigned long &		3444014	0					
ANR	3444060	Identifier	avgMsgSize		3444014	1					
ANR	3444061	Parameter	unsigned long & szComplete	741:23:20936:20960	3444014	4	True				
ANR	3444062	ParameterType	unsigned long &		3444014	0					
ANR	3444063	Identifier	szComplete		3444014	1					
ANR	3444064	Parameter	unsigned long & szDeleted	742:8:20971:20994	3444014	5	True				
ANR	3444065	ParameterType	unsigned long &		3444014	0					
ANR	3444066	Identifier	szDeleted		3444014	1					
ANR	3444067	CFGEntryNode	ENTRY		3444014		True				
ANR	3444068	CFGExitNode	EXIT		3444014		True				
ANR	3444069	Symbol	szDeleted		3444014						
ANR	3444070	Symbol	_whole		3444014						
ANR	3444071	Symbol	_deleted		3444014						
ANR	3444072	Symbol	noWhole		3444014						
ANR	3444073	Symbol	noMsgs		3444014						
ANR	3444074	Symbol	_outMsg . getAvgMsgSize		3444014						
ANR	3444075	Symbol	_avgSwhole		3444014						
ANR	3444076	Symbol	_outMsg		3444014						
ANR	3444077	Symbol	noDeleted		3444014						
ANR	3444078	Symbol	avgMsgSize		3444014						
ANR	3444079	Symbol	_noMsgs		3444014						
ANR	3444080	Symbol	szComplete		3444014						
ANR	3444081	Symbol	_avgSdeleted		3444014						
ANR	3444082	Function	SafeSock :: resetStat	752:0:21155:21262							
ANR	3444083	FunctionDef	SafeSock :: resetStat ()		3444082	0					
ANR	3444084	CompoundStatement		753:0:21182:21262	3444082	0					
ANR	3444085	ExpressionStatement	_noMsgs = 0	754:1:21185:21196	3444082	0	True				
ANR	3444086	AssignmentExpression	_noMsgs = 0		3444082	0		=			
ANR	3444087	Identifier	_noMsgs		3444082	0					
ANR	3444088	PrimaryExpression	0		3444082	1					
ANR	3444089	ExpressionStatement	_whole = 0	755:1:21199:21209	3444082	1	True				
ANR	3444090	AssignmentExpression	_whole = 0		3444082	0		=			
ANR	3444091	Identifier	_whole		3444082	0					
ANR	3444092	PrimaryExpression	0		3444082	1					
ANR	3444093	ExpressionStatement	_deleted = 0	756:1:21212:21224	3444082	2	True				
ANR	3444094	AssignmentExpression	_deleted = 0		3444082	0		=			
ANR	3444095	Identifier	_deleted		3444082	0					
ANR	3444096	PrimaryExpression	0		3444082	1					
ANR	3444097	ExpressionStatement	_avgSwhole = 0	757:1:21227:21241	3444082	3	True				
ANR	3444098	AssignmentExpression	_avgSwhole = 0		3444082	0		=			
ANR	3444099	Identifier	_avgSwhole		3444082	0					
ANR	3444100	PrimaryExpression	0		3444082	1					
ANR	3444101	ExpressionStatement	_avgSdeleted = 0	758:1:21244:21260	3444082	4	True				
ANR	3444102	AssignmentExpression	_avgSdeleted = 0		3444082	0		=			
ANR	3444103	Identifier	_avgSdeleted		3444082	0					
ANR	3444104	PrimaryExpression	0		3444082	1					
ANR	3444105	ReturnType	void		3444082	1					
ANR	3444106	Identifier	SafeSock :: resetStat		3444082	2					
ANR	3444107	ParameterList			3444082	3					
ANR	3444108	CFGEntryNode	ENTRY		3444082		True				
ANR	3444109	CFGExitNode	EXIT		3444082		True				
ANR	3444110	Symbol	_whole		3444082						
ANR	3444111	Symbol	_deleted		3444082						
ANR	3444112	Symbol	_noMsgs		3444082						
ANR	3444113	Symbol	_avgSdeleted		3444082						
ANR	3444114	Symbol	_avgSwhole		3444082						
ANR	3444115	Function	SafeSock :: attach_to_file_desc	764:0:21314:21495							
ANR	3444116	FunctionDef	SafeSock :: attach_to_file_desc (int fd)		3444115	0					
ANR	3444117	CompoundStatement		765:0:21356:21495	3444115	0					
ANR	3444118	IfStatement	if ( _state != sock_virgin )		3444115	0					
ANR	3444119	Condition	_state != sock_virgin	766:5:21363:21383	3444115	0	True				
ANR	3444120	EqualityExpression	_state != sock_virgin		3444115	0		!=			
ANR	3444121	Identifier	_state		3444115	0					
ANR	3444122	Identifier	sock_virgin		3444115	1					
ANR	3444123	ReturnStatement	return FALSE ;	766:28:21386:21398	3444115	1	True				
ANR	3444124	Identifier	FALSE		3444115	0					
ANR	3444125	ExpressionStatement	_sock = fd	768:1:21402:21412	3444115	1	True				
ANR	3444126	AssignmentExpression	_sock = fd		3444115	0		=			
ANR	3444127	Identifier	_sock		3444115	0					
ANR	3444128	Identifier	fd		3444115	1					
ANR	3444129	ExpressionStatement	_state = sock_connect	769:1:21415:21436	3444115	2	True				
ANR	3444130	AssignmentExpression	_state = sock_connect		3444115	0		=			
ANR	3444131	Identifier	_state		3444115	0					
ANR	3444132	Identifier	sock_connect		3444115	1					
ANR	3444133	ExpressionStatement	timeout ( 0 )	770:1:21439:21449	3444115	3	True				
ANR	3444134	CallExpression	timeout ( 0 )		3444115	0					
ANR	3444135	Callee	timeout		3444115	0					
ANR	3444136	Identifier	timeout		3444115	0					
ANR	3444137	ArgumentList	0		3444115	1					
ANR	3444138	Argument	0		3444115	0					
ANR	3444139	PrimaryExpression	0		3444115	0					
ANR	3444140	ReturnStatement	return TRUE ;	771:1:21482:21493	3444115	4	True				
ANR	3444141	Identifier	TRUE		3444115	0					
ANR	3444142	ReturnType	int		3444115	1					
ANR	3444143	Identifier	SafeSock :: attach_to_file_desc		3444115	2					
ANR	3444144	ParameterList	int fd		3444115	3					
ANR	3444145	Parameter	int fd	764:34:21348:21353	3444115	0	True				
ANR	3444146	ParameterType	int		3444115	0					
ANR	3444147	Identifier	fd		3444115	1					
ANR	3444148	CFGEntryNode	ENTRY		3444115		True				
ANR	3444149	CFGExitNode	EXIT		3444115		True				
ANR	3444150	Symbol	_sock		3444115						
ANR	3444151	Symbol	sock_connect		3444115						
ANR	3444152	Symbol	_state		3444115						
ANR	3444153	Symbol	sock_virgin		3444115						
ANR	3444154	Symbol	TRUE		3444115						
ANR	3444155	Symbol	FALSE		3444115						
ANR	3444156	Symbol	fd		3444115						
ANR	3444157	Function	SafeSock :: serialize	776:0:21506:21884							
ANR	3444158	FunctionDef	SafeSock :: serialize ()		3444157	0					
ANR	3444159	CompoundStatement		777:0:21541:21884	3444157	0					
ANR	3444160	IdentifierDeclStatement	char * parent_state = Sock :: serialize ( ) ;	781:1:21641:21680	3444157	0	True				
ANR	3444161	IdentifierDecl	* parent_state = Sock :: serialize ( )		3444157	0					
ANR	3444162	IdentifierDeclType	char *		3444157	0					
ANR	3444163	Identifier	parent_state		3444157	1					
ANR	3444164	AssignmentExpression	* parent_state = Sock :: serialize ( )		3444157	2		=			
ANR	3444165	Identifier	parent_state		3444157	0					
ANR	3444166	CallExpression	Sock :: serialize ( )		3444157	1					
ANR	3444167	Callee	Sock :: serialize		3444157	0					
ANR	3444168	Identifier	Sock :: serialize		3444157	0					
ANR	3444169	ArgumentList			3444157	1					
ANR	3444170	IdentifierDeclStatement	char outbuf [ 50 ] ;	783:1:21713:21728	3444157	1	True				
ANR	3444171	IdentifierDecl	outbuf [ 50 ]		3444157	0					
ANR	3444172	IdentifierDeclType	char [ 50 ]		3444157	0					
ANR	3444173	Identifier	outbuf		3444157	1					
ANR	3444174	PrimaryExpression	50		3444157	2					
ANR	3444175	ExpressionStatement	"memset ( outbuf , 0 , 50 )"	785:4:21735:21756	3444157	2	True				
ANR	3444176	CallExpression	"memset ( outbuf , 0 , 50 )"		3444157	0					
ANR	3444177	Callee	memset		3444157	0					
ANR	3444178	Identifier	memset		3444157	0					
ANR	3444179	ArgumentList	outbuf		3444157	1					
ANR	3444180	Argument	outbuf		3444157	0					
ANR	3444181	Identifier	outbuf		3444157	0					
ANR	3444182	Argument	0		3444157	1					
ANR	3444183	PrimaryExpression	0		3444157	0					
ANR	3444184	Argument	50		3444157	2					
ANR	3444185	PrimaryExpression	50		3444157	0					
ANR	3444186	ExpressionStatement	"sprintf ( outbuf , ""%d*%s*"" , _special_state , _who . to_sinful ( ) . Value ( ) )"	787:1:21760:21826	3444157	3	True				
ANR	3444187	CallExpression	"sprintf ( outbuf , ""%d*%s*"" , _special_state , _who . to_sinful ( ) . Value ( ) )"		3444157	0					
ANR	3444188	Callee	sprintf		3444157	0					
ANR	3444189	Identifier	sprintf		3444157	0					
ANR	3444190	ArgumentList	outbuf		3444157	1					
ANR	3444191	Argument	outbuf		3444157	0					
ANR	3444192	Identifier	outbuf		3444157	0					
ANR	3444193	Argument	"""%d*%s*"""		3444157	1					
ANR	3444194	PrimaryExpression	"""%d*%s*"""		3444157	0					
ANR	3444195	Argument	_special_state		3444157	2					
ANR	3444196	Identifier	_special_state		3444157	0					
ANR	3444197	Argument	_who . to_sinful ( ) . Value ( )		3444157	3					
ANR	3444198	CallExpression	_who . to_sinful ( ) . Value ( )		3444157	0					
ANR	3444199	Callee	_who . to_sinful ( ) . Value		3444157	0					
ANR	3444200	MemberAccess	_who . to_sinful ( ) . Value		3444157	0					
ANR	3444201	CallExpression	_who . to_sinful ( )		3444157	0					
ANR	3444202	Callee	_who . to_sinful		3444157	0					
ANR	3444203	MemberAccess	_who . to_sinful		3444157	0					
ANR	3444204	Identifier	_who		3444157	0					
ANR	3444205	Identifier	to_sinful		3444157	1					
ANR	3444206	ArgumentList			3444157	1					
ANR	3444207	Identifier	Value		3444157	1					
ANR	3444208	ArgumentList			3444157	1					
ANR	3444209	ExpressionStatement	"strcat ( parent_state , outbuf )"	788:1:21829:21856	3444157	4	True				
ANR	3444210	CallExpression	"strcat ( parent_state , outbuf )"		3444157	0					
ANR	3444211	Callee	strcat		3444157	0					
ANR	3444212	Identifier	strcat		3444157	0					
ANR	3444213	ArgumentList	parent_state		3444157	1					
ANR	3444214	Argument	parent_state		3444157	0					
ANR	3444215	Identifier	parent_state		3444157	0					
ANR	3444216	Argument	outbuf		3444157	1					
ANR	3444217	Identifier	outbuf		3444157	0					
ANR	3444218	ReturnStatement	return ( parent_state ) ;	790:1:21860:21882	3444157	5	True				
ANR	3444219	Identifier	parent_state		3444157	0					
ANR	3444220	ReturnType	char *		3444157	1					
ANR	3444221	Identifier	SafeSock :: serialize		3444157	2					
ANR	3444222	ParameterList			3444157	3					
ANR	3444223	CFGEntryNode	ENTRY		3444157		True				
ANR	3444224	CFGExitNode	EXIT		3444157		True				
ANR	3444225	Symbol	Sock :: serialize		3444157						
ANR	3444226	Symbol	parent_state		3444157						
ANR	3444227	Symbol	_who		3444157						
ANR	3444228	Symbol	_special_state		3444157						
ANR	3444229	Symbol	outbuf		3444157						
ANR	3444230	Symbol	_who . to_sinful ( ) . Value		3444157						
ANR	3444231	Symbol	_who . to_sinful		3444157						
ANR	3444232	Function	SafeSock :: serialize	793:0:21887:22708							
ANR	3444233	FunctionDef	SafeSock :: serialize (char * buf)		3444232	0					
ANR	3444234	CompoundStatement		794:0:21925:22708	3444232	0					
ANR	3444235	IdentifierDeclStatement	char sinful_string [ 28 ] ;	795:1:21928:21950	3444232	0	True				
ANR	3444236	IdentifierDecl	sinful_string [ 28 ]		3444232	0					
ANR	3444237	IdentifierDeclType	char [ 28 ]		3444232	0					
ANR	3444238	Identifier	sinful_string		3444232	1					
ANR	3444239	PrimaryExpression	28		3444232	2					
ANR	3444240	IdentifierDeclStatement	char usernamebuf [ 128 ] ;	796:1:21953:21974	3444232	1	True				
ANR	3444241	IdentifierDecl	usernamebuf [ 128 ]		3444232	0					
ANR	3444242	IdentifierDeclType	char [ 128 ]		3444232	0					
ANR	3444243	Identifier	usernamebuf		3444232	1					
ANR	3444244	PrimaryExpression	128		3444232	2					
ANR	3444245	IdentifierDeclStatement	"char * ptmp , * ptr = NULL ;"	797:1:21977:22000	3444232	2	True				
ANR	3444246	IdentifierDecl	* ptmp		3444232	0					
ANR	3444247	IdentifierDeclType	char *		3444232	0					
ANR	3444248	Identifier	ptmp		3444232	1					
ANR	3444249	IdentifierDecl	* ptr = NULL		3444232	1					
ANR	3444250	IdentifierDeclType	char *		3444232	0					
ANR	3444251	Identifier	ptr		3444232	1					
ANR	3444252	AssignmentExpression	* ptr = NULL		3444232	2		=			
ANR	3444253	Identifier	NULL		3444232	0					
ANR	3444254	Identifier	NULL		3444232	1					
ANR	3444255	ExpressionStatement	ASSERT ( buf )	799:1:22008:22019	3444232	3	True				
ANR	3444256	CallExpression	ASSERT ( buf )		3444232	0					
ANR	3444257	Callee	ASSERT		3444232	0					
ANR	3444258	Identifier	ASSERT		3444232	0					
ANR	3444259	ArgumentList	buf		3444232	1					
ANR	3444260	Argument	buf		3444232	0					
ANR	3444261	Identifier	buf		3444232	0					
ANR	3444262	ExpressionStatement	"memset ( sinful_string , 0 , 28 )"	800:4:22025:22053	3444232	4	True				
ANR	3444263	CallExpression	"memset ( sinful_string , 0 , 28 )"		3444232	0					
ANR	3444264	Callee	memset		3444232	0					
ANR	3444265	Identifier	memset		3444232	0					
ANR	3444266	ArgumentList	sinful_string		3444232	1					
ANR	3444267	Argument	sinful_string		3444232	0					
ANR	3444268	Identifier	sinful_string		3444232	0					
ANR	3444269	Argument	0		3444232	1					
ANR	3444270	PrimaryExpression	0		3444232	0					
ANR	3444271	Argument	28		3444232	2					
ANR	3444272	PrimaryExpression	28		3444232	0					
ANR	3444273	ExpressionStatement	"memset ( usernamebuf , 0 , 128 )"	801:4:22059:22086	3444232	5	True				
ANR	3444274	CallExpression	"memset ( usernamebuf , 0 , 128 )"		3444232	0					
ANR	3444275	Callee	memset		3444232	0					
ANR	3444276	Identifier	memset		3444232	0					
ANR	3444277	ArgumentList	usernamebuf		3444232	1					
ANR	3444278	Argument	usernamebuf		3444232	0					
ANR	3444279	Identifier	usernamebuf		3444232	0					
ANR	3444280	Argument	0		3444232	1					
ANR	3444281	PrimaryExpression	0		3444232	0					
ANR	3444282	Argument	128		3444232	2					
ANR	3444283	PrimaryExpression	128		3444232	0					
ANR	3444284	ExpressionStatement	ptmp = Sock :: serialize ( buf )	805:1:22203:22230	3444232	6	True				
ANR	3444285	AssignmentExpression	ptmp = Sock :: serialize ( buf )		3444232	0		=			
ANR	3444286	Identifier	ptmp		3444232	0					
ANR	3444287	CallExpression	Sock :: serialize ( buf )		3444232	1					
ANR	3444288	Callee	Sock :: serialize		3444232	0					
ANR	3444289	Identifier	Sock :: serialize		3444232	0					
ANR	3444290	ArgumentList	buf		3444232	1					
ANR	3444291	Argument	buf		3444232	0					
ANR	3444292	Identifier	buf		3444232	0					
ANR	3444293	ExpressionStatement	ASSERT ( ptmp )	806:1:22233:22247	3444232	7	True				
ANR	3444294	CallExpression	ASSERT ( ptmp )		3444232	0					
ANR	3444295	Callee	ASSERT		3444232	0					
ANR	3444296	Identifier	ASSERT		3444232	0					
ANR	3444297	ArgumentList	ptmp		3444232	1					
ANR	3444298	Argument	ptmp		3444232	0					
ANR	3444299	Identifier	ptmp		3444232	0					
ANR	3444300	IdentifierDeclStatement	int itmp ;	807:1:22250:22258	3444232	8	True				
ANR	3444301	IdentifierDecl	itmp		3444232	0					
ANR	3444302	IdentifierDeclType	int		3444232	0					
ANR	3444303	Identifier	itmp		3444232	1					
ANR	3444304	ExpressionStatement	"sscanf ( ptmp , ""%d*"" , & itmp )"	808:1:22261:22285	3444232	9	True				
ANR	3444305	CallExpression	"sscanf ( ptmp , ""%d*"" , & itmp )"		3444232	0					
ANR	3444306	Callee	sscanf		3444232	0					
ANR	3444307	Identifier	sscanf		3444232	0					
ANR	3444308	ArgumentList	ptmp		3444232	1					
ANR	3444309	Argument	ptmp		3444232	0					
ANR	3444310	Identifier	ptmp		3444232	0					
ANR	3444311	Argument	"""%d*"""		3444232	1					
ANR	3444312	PrimaryExpression	"""%d*"""		3444232	0					
ANR	3444313	Argument	& itmp		3444232	2					
ANR	3444314	UnaryOperationExpression	& itmp		3444232	0					
ANR	3444315	UnaryOperator	&		3444232	0					
ANR	3444316	Identifier	itmp		3444232	1					
ANR	3444317	ExpressionStatement	_special_state = safesock_state ( itmp )	809:1:22288:22323	3444232	10	True				
ANR	3444318	AssignmentExpression	_special_state = safesock_state ( itmp )		3444232	0		=			
ANR	3444319	Identifier	_special_state		3444232	0					
ANR	3444320	CallExpression	safesock_state ( itmp )		3444232	1					
ANR	3444321	Callee	safesock_state		3444232	0					
ANR	3444322	Identifier	safesock_state		3444232	0					
ANR	3444323	ArgumentList	itmp		3444232	1					
ANR	3444324	Argument	itmp		3444232	0					
ANR	3444325	Identifier	itmp		3444232	0					
ANR	3444326	ExpressionStatement	"ptmp = strchr ( ptmp , '*' )"	811:4:22354:22378	3444232	11	True				
ANR	3444327	AssignmentExpression	"ptmp = strchr ( ptmp , '*' )"		3444232	0		=			
ANR	3444328	Identifier	ptmp		3444232	0					
ANR	3444329	CallExpression	"strchr ( ptmp , '*' )"		3444232	1					
ANR	3444330	Callee	strchr		3444232	0					
ANR	3444331	Identifier	strchr		3444232	0					
ANR	3444332	ArgumentList	ptmp		3444232	1					
ANR	3444333	Argument	ptmp		3444232	0					
ANR	3444334	Identifier	ptmp		3444232	0					
ANR	3444335	Argument	'*'		3444232	1					
ANR	3444336	PrimaryExpression	'*'		3444232	0					
ANR	3444337	IfStatement	if ( ptmp )		3444232	12					
ANR	3444338	Condition	ptmp	812:7:22387:22390	3444232	0	True				
ANR	3444339	Identifier	ptmp		3444232	0					
ANR	3444340	ExpressionStatement	ptmp ++	812:13:22393:22399	3444232	1	True				
ANR	3444341	PostIncDecOperationExpression	ptmp ++		3444232	0					
ANR	3444342	Identifier	ptmp		3444232	0					
ANR	3444343	IncDec	++		3444232	1					
ANR	3444344	IfStatement	"if ( ptmp && ( ptr = strchr ( ptmp , '*' ) ) != NULL )"		3444232	13					
ANR	3444345	Condition	"ptmp && ( ptr = strchr ( ptmp , '*' ) ) != NULL"	815:8:22447:22487	3444232	0	True				
ANR	3444346	AndExpression	"ptmp && ( ptr = strchr ( ptmp , '*' ) ) != NULL"		3444232	0		&&			
ANR	3444347	Identifier	ptmp		3444232	0					
ANR	3444348	EqualityExpression	"( ptr = strchr ( ptmp , '*' ) ) != NULL"		3444232	1		!=			
ANR	3444349	AssignmentExpression	"ptr = strchr ( ptmp , '*' )"		3444232	0		=			
ANR	3444350	Identifier	ptr		3444232	0					
ANR	3444351	CallExpression	"strchr ( ptmp , '*' )"		3444232	1					
ANR	3444352	Callee	strchr		3444232	0					
ANR	3444353	Identifier	strchr		3444232	0					
ANR	3444354	ArgumentList	ptmp		3444232	1					
ANR	3444355	Argument	ptmp		3444232	0					
ANR	3444356	Identifier	ptmp		3444232	0					
ANR	3444357	Argument	'*'		3444232	1					
ANR	3444358	PrimaryExpression	'*'		3444232	0					
ANR	3444359	Identifier	NULL		3444232	1					
ANR	3444360	CompoundStatement		22:51:564:564	3444232	1					
ANR	3444361	ExpressionStatement	"memcpy ( sinful_string , ptmp , ptr - ptmp )"	817:8:22522:22561	3444232	0	True				
ANR	3444362	CallExpression	"memcpy ( sinful_string , ptmp , ptr - ptmp )"		3444232	0					
ANR	3444363	Callee	memcpy		3444232	0					
ANR	3444364	Identifier	memcpy		3444232	0					
ANR	3444365	ArgumentList	sinful_string		3444232	1					
ANR	3444366	Argument	sinful_string		3444232	0					
ANR	3444367	Identifier	sinful_string		3444232	0					
ANR	3444368	Argument	ptmp		3444232	1					
ANR	3444369	Identifier	ptmp		3444232	0					
ANR	3444370	Argument	ptr - ptmp		3444232	2					
ANR	3444371	AdditiveExpression	ptr - ptmp		3444232	0		-			
ANR	3444372	Identifier	ptr		3444232	0					
ANR	3444373	Identifier	ptmp		3444232	1					
ANR	3444374	ExpressionStatement	ptmp = ++ ptr	818:8:22571:22583	3444232	1	True				
ANR	3444375	AssignmentExpression	ptmp = ++ ptr		3444232	0		=			
ANR	3444376	Identifier	ptmp		3444232	0					
ANR	3444377	UnaryExpression	++ ptr		3444232	1					
ANR	3444378	IncDec	++		3444232	0					
ANR	3444379	Identifier	ptr		3444232	1					
ANR	3444380	ElseStatement	else		3444232	0					
ANR	3444381	IfStatement	if ( ptmp )		3444232	0					
ANR	3444382	Condition	ptmp	820:12:22603:22606	3444232	0	True				
ANR	3444383	Identifier	ptmp		3444232	0					
ANR	3444384	CompoundStatement		27:18:683:683	3444232	1					
ANR	3444385	ExpressionStatement	"sscanf ( ptmp , ""%s"" , sinful_string )"	821:8:22619:22650	3444232	0	True				
ANR	3444386	CallExpression	"sscanf ( ptmp , ""%s"" , sinful_string )"		3444232	0					
ANR	3444387	Callee	sscanf		3444232	0					
ANR	3444388	Identifier	sscanf		3444232	0					
ANR	3444389	ArgumentList	ptmp		3444232	1					
ANR	3444390	Argument	ptmp		3444232	0					
ANR	3444391	Identifier	ptmp		3444232	0					
ANR	3444392	Argument	"""%s"""		3444232	1					
ANR	3444393	PrimaryExpression	"""%s"""		3444232	0					
ANR	3444394	Argument	sinful_string		3444232	2					
ANR	3444395	Identifier	sinful_string		3444232	0					
ANR	3444396	ExpressionStatement	_who . from_sinful ( sinful_string )	824:1:22660:22691	3444232	14	True				
ANR	3444397	CallExpression	_who . from_sinful ( sinful_string )		3444232	0					
ANR	3444398	Callee	_who . from_sinful		3444232	0					
ANR	3444399	MemberAccess	_who . from_sinful		3444232	0					
ANR	3444400	Identifier	_who		3444232	0					
ANR	3444401	Identifier	from_sinful		3444232	1					
ANR	3444402	ArgumentList	sinful_string		3444232	1					
ANR	3444403	Argument	sinful_string		3444232	0					
ANR	3444404	Identifier	sinful_string		3444232	0					
ANR	3444405	ReturnStatement	return NULL ;	826:1:22695:22706	3444232	15	True				
ANR	3444406	Identifier	NULL		3444232	0					
ANR	3444407	ReturnType	char *		3444232	1					
ANR	3444408	Identifier	SafeSock :: serialize		3444232	2					
ANR	3444409	ParameterList	char * buf		3444232	3					
ANR	3444410	Parameter	char * buf	793:27:21914:21922	3444232	0	True				
ANR	3444411	ParameterType	char *		3444232	0					
ANR	3444412	Identifier	buf		3444232	1					
ANR	3444413	CFGEntryNode	ENTRY		3444232		True				
ANR	3444414	CFGExitNode	EXIT		3444232		True				
ANR	3444415	Symbol	sinful_string		3444232						
ANR	3444416	Symbol	NULL		3444232						
ANR	3444417	Symbol	_special_state		3444232						
ANR	3444418	Symbol	& itmp		3444232						
ANR	3444419	Symbol	strchr		3444232						
ANR	3444420	Symbol	safesock_state		3444232						
ANR	3444421	Symbol	ptr		3444232						
ANR	3444422	Symbol	usernamebuf		3444232						
ANR	3444423	Symbol	buf		3444232						
ANR	3444424	Symbol	ptmp		3444232						
ANR	3444425	Symbol	Sock :: serialize		3444232						
ANR	3444426	Symbol	_who		3444232						
ANR	3444427	Symbol	itmp		3444232						
ANR	3444428	Function	SafeSock :: isIncomingDataMD5ed	829:0:22711:23025							
ANR	3444429	FunctionDef	SafeSock :: isIncomingDataMD5ed ()		3444428	0					
ANR	3444430	CompoundStatement		830:0:22758:23025	3444428	0					
ANR	3444431	IdentifierDeclStatement	char c ;	831:4:22764:22770	3444428	0	True				
ANR	3444432	IdentifierDecl	c		3444428	0					
ANR	3444433	IdentifierDeclType	char		3444428	0					
ANR	3444434	Identifier	c		3444428	1					
ANR	3444435	IfStatement	if ( ! peek ( c ) )		3444428	1					
ANR	3444436	Condition	! peek ( c )	832:8:22780:22787	3444428	0	True				
ANR	3444437	UnaryOperationExpression	! peek ( c )		3444428	0					
ANR	3444438	UnaryOperator	!		3444428	0					
ANR	3444439	CallExpression	peek ( c )		3444428	1					
ANR	3444440	Callee	peek		3444428	0					
ANR	3444441	Identifier	peek		3444428	0					
ANR	3444442	ArgumentList	c		3444428	1					
ANR	3444443	Argument	c		3444428	0					
ANR	3444444	Identifier	c		3444428	0					
ANR	3444445	CompoundStatement		3:18:31:31	3444428	1					
ANR	3444446	ReturnStatement	return 0 ;	833:8:22800:22808	3444428	0	True				
ANR	3444447	PrimaryExpression	0		3444428	0					
ANR	3444448	ElseStatement	else		3444428	0					
ANR	3444449	CompoundStatement		6:9:66:66	3444428	0					
ANR	3444450	IfStatement	if ( _longMsg )		3444428	0					
ANR	3444451	Condition	_longMsg	836:11:22838:22845	3444428	0	True				
ANR	3444452	Identifier	_longMsg		3444428	0					
ANR	3444453	CompoundStatement		7:21:89:89	3444428	1					
ANR	3444454	ReturnStatement	return _longMsg -> isDataMD5ed ( ) ;	838:12:22891:22921	3444428	0	True				
ANR	3444455	CallExpression	_longMsg -> isDataMD5ed ( )		3444428	0					
ANR	3444456	Callee	_longMsg -> isDataMD5ed		3444428	0					
ANR	3444457	PtrMemberAccess	_longMsg -> isDataMD5ed		3444428	0					
ANR	3444458	Identifier	_longMsg		3444428	0					
ANR	3444459	Identifier	isDataMD5ed		3444428	1					
ANR	3444460	ArgumentList			3444428	1					
ANR	3444461	ElseStatement	else		3444428	0					
ANR	3444462	CompoundStatement		11:13:187:187	3444428	0					
ANR	3444463	ReturnStatement	return _shortMsg . isDataMD5ed ( ) ;	841:12:22977:23007	3444428	0	True				
ANR	3444464	CallExpression	_shortMsg . isDataMD5ed ( )		3444428	0					
ANR	3444465	Callee	_shortMsg . isDataMD5ed		3444428	0					
ANR	3444466	MemberAccess	_shortMsg . isDataMD5ed		3444428	0					
ANR	3444467	Identifier	_shortMsg		3444428	0					
ANR	3444468	Identifier	isDataMD5ed		3444428	1					
ANR	3444469	ArgumentList			3444428	1					
ANR	3444470	ReturnType	const char *		3444428	1					
ANR	3444471	Identifier	SafeSock :: isIncomingDataMD5ed		3444428	2					
ANR	3444472	ParameterList			3444428	3					
ANR	3444473	CFGEntryNode	ENTRY		3444428		True				
ANR	3444474	CFGExitNode	EXIT		3444428		True				
ANR	3444475	Symbol	_longMsg -> isDataMD5ed		3444428						
ANR	3444476	Symbol	c		3444428						
ANR	3444477	Symbol	_shortMsg . isDataMD5ed		3444428						
ANR	3444478	Symbol	_longMsg		3444428						
ANR	3444479	Symbol	_shortMsg		3444428						
ANR	3444480	Symbol	peek		3444428						
ANR	3444481	Symbol	* _longMsg		3444428						
ANR	3444482	Function	SafeSock :: isIncomingDataEncrypted	846:0:23028:23354							
ANR	3444483	FunctionDef	SafeSock :: isIncomingDataEncrypted ()		3444482	0					
ANR	3444484	CompoundStatement		847:0:23079:23354	3444482	0					
ANR	3444485	IdentifierDeclStatement	char c ;	848:4:23085:23091	3444482	0	True				
ANR	3444486	IdentifierDecl	c		3444482	0					
ANR	3444487	IdentifierDeclType	char		3444482	0					
ANR	3444488	Identifier	c		3444482	1					
ANR	3444489	IfStatement	if ( ! peek ( c ) )		3444482	1					
ANR	3444490	Condition	! peek ( c )	849:8:23101:23108	3444482	0	True				
ANR	3444491	UnaryOperationExpression	! peek ( c )		3444482	0					
ANR	3444492	UnaryOperator	!		3444482	0					
ANR	3444493	CallExpression	peek ( c )		3444482	1					
ANR	3444494	Callee	peek		3444482	0					
ANR	3444495	Identifier	peek		3444482	0					
ANR	3444496	ArgumentList	c		3444482	1					
ANR	3444497	Argument	c		3444482	0					
ANR	3444498	Identifier	c		3444482	0					
ANR	3444499	CompoundStatement		3:18:31:31	3444482	1					
ANR	3444500	ReturnStatement	return 0 ;	850:8:23121:23129	3444482	0	True				
ANR	3444501	PrimaryExpression	0		3444482	0					
ANR	3444502	ElseStatement	else		3444482	0					
ANR	3444503	CompoundStatement		6:9:66:66	3444482	0					
ANR	3444504	IfStatement	if ( _longMsg )		3444482	0					
ANR	3444505	Condition	_longMsg	853:11:23159:23166	3444482	0	True				
ANR	3444506	Identifier	_longMsg		3444482	0					
ANR	3444507	CompoundStatement		7:21:89:89	3444482	1					
ANR	3444508	ReturnStatement	return _longMsg -> isDataEncrypted ( ) ;	855:12:23212:23246	3444482	0	True				
ANR	3444509	CallExpression	_longMsg -> isDataEncrypted ( )		3444482	0					
ANR	3444510	Callee	_longMsg -> isDataEncrypted		3444482	0					
ANR	3444511	PtrMemberAccess	_longMsg -> isDataEncrypted		3444482	0					
ANR	3444512	Identifier	_longMsg		3444482	0					
ANR	3444513	Identifier	isDataEncrypted		3444482	1					
ANR	3444514	ArgumentList			3444482	1					
ANR	3444515	ElseStatement	else		3444482	0					
ANR	3444516	CompoundStatement		11:13:191:191	3444482	0					
ANR	3444517	ReturnStatement	return _shortMsg . isDataEncrypted ( ) ;	858:12:23302:23336	3444482	0	True				
ANR	3444518	CallExpression	_shortMsg . isDataEncrypted ( )		3444482	0					
ANR	3444519	Callee	_shortMsg . isDataEncrypted		3444482	0					
ANR	3444520	MemberAccess	_shortMsg . isDataEncrypted		3444482	0					
ANR	3444521	Identifier	_shortMsg		3444482	0					
ANR	3444522	Identifier	isDataEncrypted		3444482	1					
ANR	3444523	ArgumentList			3444482	1					
ANR	3444524	ReturnType	const char *		3444482	1					
ANR	3444525	Identifier	SafeSock :: isIncomingDataEncrypted		3444482	2					
ANR	3444526	ParameterList			3444482	3					
ANR	3444527	CFGEntryNode	ENTRY		3444482		True				
ANR	3444528	CFGExitNode	EXIT		3444482		True				
ANR	3444529	Symbol	c		3444482						
ANR	3444530	Symbol	_shortMsg . isDataEncrypted		3444482						
ANR	3444531	Symbol	_longMsg -> isDataEncrypted		3444482						
ANR	3444532	Symbol	_longMsg		3444482						
ANR	3444533	Symbol	_shortMsg		3444482						
ANR	3444534	Symbol	peek		3444482						
ANR	3444535	Symbol	* _longMsg		3444482						
ANR	3444536	Function	SafeSock :: set_encryption_id	863:0:23357:23459							
ANR	3444537	FunctionDef	SafeSock :: set_encryption_id (const char * keyId)		3444536	0					
ANR	3444538	CompoundStatement		864:0:23412:23459	3444536	0					
ANR	3444539	ReturnStatement	return _outMsg . set_encryption_id ( keyId ) ;	865:4:23418:23457	3444536	0	True				
ANR	3444540	CallExpression	_outMsg . set_encryption_id ( keyId )		3444536	0					
ANR	3444541	Callee	_outMsg . set_encryption_id		3444536	0					
ANR	3444542	MemberAccess	_outMsg . set_encryption_id		3444536	0					
ANR	3444543	Identifier	_outMsg		3444536	0					
ANR	3444544	Identifier	set_encryption_id		3444536	1					
ANR	3444545	ArgumentList	keyId		3444536	1					
ANR	3444546	Argument	keyId		3444536	0					
ANR	3444547	Identifier	keyId		3444536	0					
ANR	3444548	ReturnType	bool		3444536	1					
ANR	3444549	Identifier	SafeSock :: set_encryption_id		3444536	2					
ANR	3444550	ParameterList	const char * keyId		3444536	3					
ANR	3444551	Parameter	const char * keyId	863:35:23392:23409	3444536	0	True				
ANR	3444552	ParameterType	const char *		3444536	0					
ANR	3444553	Identifier	keyId		3444536	1					
ANR	3444554	CFGEntryNode	ENTRY		3444536		True				
ANR	3444555	CFGExitNode	EXIT		3444536		True				
ANR	3444556	Symbol	_outMsg		3444536						
ANR	3444557	Symbol	_outMsg . set_encryption_id		3444536						
ANR	3444558	Symbol	keyId		3444536						
ANR	3444559	DeclStmt									
ANR	3444560	Decl							bool	bool	inited
ANR	3444561	Function	SafeSock :: getMsgSize	895:0:23972:24522							
ANR	3444562	FunctionDef	SafeSock :: getMsgSize ()		3444561	0					
ANR	3444563	CompoundStatement		896:0:23999:24522	3444561	0					
ANR	3444564	IdentifierDeclStatement	int result ;	897:1:24002:24012	3444561	0	True				
ANR	3444565	IdentifierDecl	result		3444561	0					
ANR	3444566	IdentifierDeclType	int		3444561	0					
ANR	3444567	Identifier	result		3444561	1					
ANR	3444568	WhileStatement	while ( ! _msgReady )		3444561	1					
ANR	3444569	Condition	! _msgReady	899:7:24022:24031	3444561	0	True				
ANR	3444570	UnaryOperationExpression	! _msgReady		3444561	0					
ANR	3444571	UnaryOperator	!		3444561	0					
ANR	3444572	Identifier	_msgReady		3444561	1					
ANR	3444573	CompoundStatement		4:19:34:34	3444561	1					
ANR	3444574	IfStatement	if ( _timeout > 0 )		3444561	0					
ANR	3444575	Condition	_timeout > 0	900:5:24041:24052	3444561	0	True				
ANR	3444576	RelationalExpression	_timeout > 0		3444561	0		>			
ANR	3444577	Identifier	_timeout		3444561	0					
ANR	3444578	PrimaryExpression	0		3444561	1					
ANR	3444579	CompoundStatement		6:3:60:77	3444561	1					
ANR	3444580	IdentifierDeclStatement	Selector selector ;	901:3:24060:24077	3444561	0	True				
ANR	3444581	IdentifierDecl	selector		3444561	0					
ANR	3444582	IdentifierDeclType	Selector		3444561	0					
ANR	3444583	Identifier	selector		3444561	1					
ANR	3444584	ExpressionStatement	selector . set_timeout ( _timeout )	902:3:24082:24114	3444561	1	True				
ANR	3444585	CallExpression	selector . set_timeout ( _timeout )		3444561	0					
ANR	3444586	Callee	selector . set_timeout		3444561	0					
ANR	3444587	MemberAccess	selector . set_timeout		3444561	0					
ANR	3444588	Identifier	selector		3444561	0					
ANR	3444589	Identifier	set_timeout		3444561	1					
ANR	3444590	ArgumentList	_timeout		3444561	1					
ANR	3444591	Argument	_timeout		3444561	0					
ANR	3444592	Identifier	_timeout		3444561	0					
ANR	3444593	ExpressionStatement	"selector . add_fd ( _sock , Selector :: IO_READ )"	903:3:24119:24162	3444561	2	True				
ANR	3444594	CallExpression	"selector . add_fd ( _sock , Selector :: IO_READ )"		3444561	0					
ANR	3444595	Callee	selector . add_fd		3444561	0					
ANR	3444596	MemberAccess	selector . add_fd		3444561	0					
ANR	3444597	Identifier	selector		3444561	0					
ANR	3444598	Identifier	add_fd		3444561	1					
ANR	3444599	ArgumentList	_sock		3444561	1					
ANR	3444600	Argument	_sock		3444561	0					
ANR	3444601	Identifier	_sock		3444561	0					
ANR	3444602	Argument	Selector :: IO_READ		3444561	1					
ANR	3444603	Identifier	Selector :: IO_READ		3444561	0					
ANR	3444604	ExpressionStatement	selector . execute ( )	905:3:24172:24190	3444561	3	True				
ANR	3444605	CallExpression	selector . execute ( )		3444561	0					
ANR	3444606	Callee	selector . execute		3444561	0					
ANR	3444607	MemberAccess	selector . execute		3444561	0					
ANR	3444608	Identifier	selector		3444561	0					
ANR	3444609	Identifier	execute		3444561	1					
ANR	3444610	ArgumentList			3444561	1					
ANR	3444611	IfStatement	if ( selector . timed_out ( ) )		3444561	4					
ANR	3444612	Condition	selector . timed_out ( )	906:8:24200:24219	3444561	0	True				
ANR	3444613	CallExpression	selector . timed_out ( )		3444561	0					
ANR	3444614	Callee	selector . timed_out		3444561	0					
ANR	3444615	MemberAccess	selector . timed_out		3444561	0					
ANR	3444616	Identifier	selector		3444561	0					
ANR	3444617	Identifier	timed_out		3444561	1					
ANR	3444618	ArgumentList			3444561	1					
ANR	3444619	CompoundStatement		11:31:223:223	3444561	1					
ANR	3444620	ReturnStatement	return 0 ;	907:4:24229:24237	3444561	0	True				
ANR	3444621	PrimaryExpression	0		3444561	0					
ANR	3444622	ElseStatement	else		3444561	0					
ANR	3444623	IfStatement	if ( ! selector . has_ready ( ) )		3444561	0					
ANR	3444624	Condition	! selector . has_ready ( )	908:15:24254:24274	3444561	0	True				
ANR	3444625	UnaryOperationExpression	! selector . has_ready ( )		3444561	0					
ANR	3444626	UnaryOperator	!		3444561	0					
ANR	3444627	CallExpression	selector . has_ready ( )		3444561	1					
ANR	3444628	Callee	selector . has_ready		3444561	0					
ANR	3444629	MemberAccess	selector . has_ready		3444561	0					
ANR	3444630	Identifier	selector		3444561	0					
ANR	3444631	Identifier	has_ready		3444561	1					
ANR	3444632	ArgumentList			3444561	1					
ANR	3444633	CompoundStatement		13:39:278:278	3444561	1					
ANR	3444634	ExpressionStatement	"dprintf ( D_NETWORK , ""select returns %d, recv failed\\n"" , selector . select_retval ( ) )"	909:5:24285:24387	3444561	0	True				
ANR	3444635	CallExpression	"dprintf ( D_NETWORK , ""select returns %d, recv failed\\n"" , selector . select_retval ( ) )"		3444561	0					
ANR	3444636	Callee	dprintf		3444561	0					
ANR	3444637	Identifier	dprintf		3444561	0					
ANR	3444638	ArgumentList	D_NETWORK		3444561	1					
ANR	3444639	Argument	D_NETWORK		3444561	0					
ANR	3444640	Identifier	D_NETWORK		3444561	0					
ANR	3444641	Argument	"""select returns %d, recv failed\\n"""		3444561	1					
ANR	3444642	PrimaryExpression	"""select returns %d, recv failed\\n"""		3444561	0					
ANR	3444643	Argument	selector . select_retval ( )		3444561	2					
ANR	3444644	CallExpression	selector . select_retval ( )		3444561	0					
ANR	3444645	Callee	selector . select_retval		3444561	0					
ANR	3444646	MemberAccess	selector . select_retval		3444561	0					
ANR	3444647	Identifier	selector		3444561	0					
ANR	3444648	Identifier	select_retval		3444561	1					
ANR	3444649	ArgumentList			3444561	1					
ANR	3444650	ReturnStatement	return FALSE ;	912:5:24394:24406	3444561	1	True				
ANR	3444651	Identifier	FALSE		3444561	0					
ANR	3444652	ExpressionStatement	( void ) handle_incoming_packet ( )	915:2:24419:24449	3444561	1	True				
ANR	3444653	CastExpression	( void ) handle_incoming_packet ( )		3444561	0					
ANR	3444654	CastTarget	void		3444561	0					
ANR	3444655	CallExpression	handle_incoming_packet ( )		3444561	1					
ANR	3444656	Callee	handle_incoming_packet		3444561	0					
ANR	3444657	Identifier	handle_incoming_packet		3444561	0					
ANR	3444658	ArgumentList			3444561	1					
ANR	3444659	IfStatement	if ( _longMsg )		3444561	2					
ANR	3444660	Condition	_longMsg	918:4:24459:24466	3444561	0	True				
ANR	3444661	Identifier	_longMsg		3444561	0					
ANR	3444662	ReturnStatement	return _longMsg -> msgLen ;	919:2:24471:24494	3444561	1	True				
ANR	3444663	PtrMemberAccess	_longMsg -> msgLen		3444561	0					
ANR	3444664	Identifier	_longMsg		3444561	0					
ANR	3444665	Identifier	msgLen		3444561	1					
ANR	3444666	ReturnStatement	return _shortMsg . length ;	920:1:24497:24520	3444561	3	True				
ANR	3444667	MemberAccess	_shortMsg . length		3444561	0					
ANR	3444668	Identifier	_shortMsg		3444561	0					
ANR	3444669	Identifier	length		3444561	1					
ANR	3444670	ReturnType	int		3444561	1					
ANR	3444671	Identifier	SafeSock :: getMsgSize		3444561	2					
ANR	3444672	ParameterList			3444561	3					
ANR	3444673	CFGEntryNode	ENTRY		3444561		True				
ANR	3444674	CFGExitNode	EXIT		3444561		True				
ANR	3444675	Symbol	_msgReady		3444561						
ANR	3444676	Symbol	selector . has_ready		3444561						
ANR	3444677	Symbol	selector . timed_out		3444561						
ANR	3444678	Symbol	Selector :: IO_READ		3444561						
ANR	3444679	Symbol	selector . select_retval		3444561						
ANR	3444680	Symbol	* _longMsg		3444561						
ANR	3444681	Symbol	result		3444561						
ANR	3444682	Symbol	_sock		3444561						
ANR	3444683	Symbol	D_NETWORK		3444561						
ANR	3444684	Symbol	selector		3444561						
ANR	3444685	Symbol	FALSE		3444561						
ANR	3444686	Symbol	_timeout		3444561						
ANR	3444687	Symbol	_longMsg -> msgLen		3444561						
ANR	3444688	Symbol	_longMsg		3444561						
ANR	3444689	Symbol	_shortMsg		3444561						
ANR	3444690	Symbol	_shortMsg . length		3444561						
ANR	3444691	Function	SafeSock :: dumpSock	923:0:24525:25012							
ANR	3444692	FunctionDef	SafeSock :: dumpSock ()		3444691	0					
ANR	3444693	CompoundStatement		924:0:24551:25012	3444691	0					
ANR	3444694	IdentifierDeclStatement	_condorInMsg * tempMsg ;	925:1:24554:24575	3444691	0	True				
ANR	3444695	IdentifierDecl	* tempMsg		3444691	0					
ANR	3444696	IdentifierDeclType	_condorInMsg *		3444691	0					
ANR	3444697	Identifier	tempMsg		3444691	1					
ANR	3444698	ExpressionStatement	"dprintf ( D_NETWORK , ""[In] Long Messages\\n"" )"	927:1:24579:24621	3444691	1	True				
ANR	3444699	CallExpression	"dprintf ( D_NETWORK , ""[In] Long Messages\\n"" )"		3444691	0					
ANR	3444700	Callee	dprintf		3444691	0					
ANR	3444701	Identifier	dprintf		3444691	0					
ANR	3444702	ArgumentList	D_NETWORK		3444691	1					
ANR	3444703	Argument	D_NETWORK		3444691	0					
ANR	3444704	Identifier	D_NETWORK		3444691	0					
ANR	3444705	Argument	"""[In] Long Messages\\n"""		3444691	1					
ANR	3444706	PrimaryExpression	"""[In] Long Messages\\n"""		3444691	0					
ANR	3444707	ForStatement	for ( int i = 0 ; i < SAFE_SOCK_HASH_BUCKET_SIZE ; i ++ )		3444691	2					
ANR	3444708	ForInit	int i = 0 ;	928:5:24628:24635	3444691	0	True				
ANR	3444709	IdentifierDeclStatement	int i = 0 ;		3444691	0					
ANR	3444710	IdentifierDecl	i = 0		3444691	0					
ANR	3444711	IdentifierDeclType	int		3444691	0					
ANR	3444712	Identifier	i		3444691	1					
ANR	3444713	AssignmentExpression	i = 0		3444691	2		=			
ANR	3444714	Identifier	i		3444691	0					
ANR	3444715	PrimaryExpression	0		3444691	1					
ANR	3444716	Condition	i < SAFE_SOCK_HASH_BUCKET_SIZE	928:14:24637:24664	3444691	1	True				
ANR	3444717	RelationalExpression	i < SAFE_SOCK_HASH_BUCKET_SIZE		3444691	0		<			
ANR	3444718	Identifier	i		3444691	0					
ANR	3444719	Identifier	SAFE_SOCK_HASH_BUCKET_SIZE		3444691	1					
ANR	3444720	PostIncDecOperationExpression	i ++	928:44:24667:24669	3444691	2	True				
ANR	3444721	Identifier	i		3444691	0					
ANR	3444722	IncDec	++		3444691	1					
ANR	3444723	CompoundStatement		5:49:120:120	3444691	3					
ANR	3444724	ExpressionStatement	"dprintf ( D_NETWORK , ""\\nBucket [%d]\\n"" , i )"	929:2:24676:24716	3444691	0	True				
ANR	3444725	CallExpression	"dprintf ( D_NETWORK , ""\\nBucket [%d]\\n"" , i )"		3444691	0					
ANR	3444726	Callee	dprintf		3444691	0					
ANR	3444727	Identifier	dprintf		3444691	0					
ANR	3444728	ArgumentList	D_NETWORK		3444691	1					
ANR	3444729	Argument	D_NETWORK		3444691	0					
ANR	3444730	Identifier	D_NETWORK		3444691	0					
ANR	3444731	Argument	"""\\nBucket [%d]\\n"""		3444691	1					
ANR	3444732	PrimaryExpression	"""\\nBucket [%d]\\n"""		3444691	0					
ANR	3444733	Argument	i		3444691	2					
ANR	3444734	Identifier	i		3444691	0					
ANR	3444735	ExpressionStatement	tempMsg = _inMsgs [ i ]	930:2:24720:24740	3444691	1	True				
ANR	3444736	AssignmentExpression	tempMsg = _inMsgs [ i ]		3444691	0		=			
ANR	3444737	Identifier	tempMsg		3444691	0					
ANR	3444738	ArrayIndexing	_inMsgs [ i ]		3444691	1					
ANR	3444739	Identifier	_inMsgs		3444691	0					
ANR	3444740	Identifier	i		3444691	1					
ANR	3444741	WhileStatement	while ( tempMsg )		3444691	2					
ANR	3444742	Condition	tempMsg	931:8:24750:24756	3444691	0	True				
ANR	3444743	Identifier	tempMsg		3444691	0					
ANR	3444744	CompoundStatement		8:17:207:207	3444691	1					
ANR	3444745	ExpressionStatement	tempMsg -> dumpMsg ( )	932:3:24764:24782	3444691	0	True				
ANR	3444746	CallExpression	tempMsg -> dumpMsg ( )		3444691	0					
ANR	3444747	Callee	tempMsg -> dumpMsg		3444691	0					
ANR	3444748	PtrMemberAccess	tempMsg -> dumpMsg		3444691	0					
ANR	3444749	Identifier	tempMsg		3444691	0					
ANR	3444750	Identifier	dumpMsg		3444691	1					
ANR	3444751	ArgumentList			3444691	1					
ANR	3444752	ExpressionStatement	tempMsg = tempMsg -> nextMsg	933:3:24787:24813	3444691	1	True				
ANR	3444753	AssignmentExpression	tempMsg = tempMsg -> nextMsg		3444691	0		=			
ANR	3444754	Identifier	tempMsg		3444691	0					
ANR	3444755	PtrMemberAccess	tempMsg -> nextMsg		3444691	1					
ANR	3444756	Identifier	tempMsg		3444691	0					
ANR	3444757	Identifier	nextMsg		3444691	1					
ANR	3444758	ExpressionStatement	"dprintf ( D_NETWORK , ""\\n\\n[In] Short Message\\n"" )"	937:1:24824:24870	3444691	3	True				
ANR	3444759	CallExpression	"dprintf ( D_NETWORK , ""\\n\\n[In] Short Message\\n"" )"		3444691	0					
ANR	3444760	Callee	dprintf		3444691	0					
ANR	3444761	Identifier	dprintf		3444691	0					
ANR	3444762	ArgumentList	D_NETWORK		3444691	1					
ANR	3444763	Argument	D_NETWORK		3444691	0					
ANR	3444764	Identifier	D_NETWORK		3444691	0					
ANR	3444765	Argument	"""\\n\\n[In] Short Message\\n"""		3444691	1					
ANR	3444766	PrimaryExpression	"""\\n\\n[In] Short Message\\n"""		3444691	0					
ANR	3444767	IfStatement	if ( _msgReady && _longMsg == NULL )		3444691	4					
ANR	3444768	Condition	_msgReady && _longMsg == NULL	938:4:24876:24904	3444691	0	True				
ANR	3444769	AndExpression	_msgReady && _longMsg == NULL		3444691	0		&&			
ANR	3444770	Identifier	_msgReady		3444691	0					
ANR	3444771	EqualityExpression	_longMsg == NULL		3444691	1		==			
ANR	3444772	Identifier	_longMsg		3444691	0					
ANR	3444773	Identifier	NULL		3444691	1					
ANR	3444774	ExpressionStatement	_shortMsg . dumpPacket ( )	939:2:24909:24931	3444691	1	True				
ANR	3444775	CallExpression	_shortMsg . dumpPacket ( )		3444691	0					
ANR	3444776	Callee	_shortMsg . dumpPacket		3444691	0					
ANR	3444777	MemberAccess	_shortMsg . dumpPacket		3444691	0					
ANR	3444778	Identifier	_shortMsg		3444691	0					
ANR	3444779	Identifier	dumpPacket		3444691	1					
ANR	3444780	ArgumentList			3444691	1					
ANR	3444781	ExpressionStatement	"dprintf ( D_NETWORK , ""\\n\\n[Out] out message\\n"" )"	941:1:24936:24981	3444691	5	True				
ANR	3444782	CallExpression	"dprintf ( D_NETWORK , ""\\n\\n[Out] out message\\n"" )"		3444691	0					
ANR	3444783	Callee	dprintf		3444691	0					
ANR	3444784	Identifier	dprintf		3444691	0					
ANR	3444785	ArgumentList	D_NETWORK		3444691	1					
ANR	3444786	Argument	D_NETWORK		3444691	0					
ANR	3444787	Identifier	D_NETWORK		3444691	0					
ANR	3444788	Argument	"""\\n\\n[Out] out message\\n"""		3444691	1					
ANR	3444789	PrimaryExpression	"""\\n\\n[Out] out message\\n"""		3444691	0					
ANR	3444790	ExpressionStatement	_outMsg . dumpMsg ( _outMsgID )	942:1:24984:25010	3444691	6	True				
ANR	3444791	CallExpression	_outMsg . dumpMsg ( _outMsgID )		3444691	0					
ANR	3444792	Callee	_outMsg . dumpMsg		3444691	0					
ANR	3444793	MemberAccess	_outMsg . dumpMsg		3444691	0					
ANR	3444794	Identifier	_outMsg		3444691	0					
ANR	3444795	Identifier	dumpMsg		3444691	1					
ANR	3444796	ArgumentList	_outMsgID		3444691	1					
ANR	3444797	Argument	_outMsgID		3444691	0					
ANR	3444798	Identifier	_outMsgID		3444691	0					
ANR	3444799	ReturnType	void		3444691	1					
ANR	3444800	Identifier	SafeSock :: dumpSock		3444691	2					
ANR	3444801	ParameterList			3444691	3					
ANR	3444802	CFGEntryNode	ENTRY		3444691		True				
ANR	3444803	CFGExitNode	EXIT		3444691		True				
ANR	3444804	Symbol	tempMsg -> nextMsg		3444691						
ANR	3444805	Symbol	NULL		3444691						
ANR	3444806	Symbol	_msgReady		3444691						
ANR	3444807	Symbol	_outMsgID		3444691						
ANR	3444808	Symbol	i		3444691						
ANR	3444809	Symbol	tempMsg		3444691						
ANR	3444810	Symbol	* _inMsgs		3444691						
ANR	3444811	Symbol	_outMsg		3444691						
ANR	3444812	Symbol	* i		3444691						
ANR	3444813	Symbol	* tempMsg		3444691						
ANR	3444814	Symbol	D_NETWORK		3444691						
ANR	3444815	Symbol	SAFE_SOCK_HASH_BUCKET_SIZE		3444691						
ANR	3444816	Symbol	_inMsgs		3444691						
ANR	3444817	Symbol	_longMsg		3444691						
ANR	3444818	Symbol	_shortMsg		3444691						
ANR	3444819	Function	SafeSock :: cancel_reverse_connect	946:0:25022:25064							
ANR	3444820	FunctionDef	SafeSock :: cancel_reverse_connect ()		3444819	0					
ANR	3444821	CompoundStatement		947:35:25062:25064	3444819	0					
ANR	3444822	ReturnType	void		3444819	1					
ANR	3444823	Identifier	SafeSock :: cancel_reverse_connect		3444819	2					
ANR	3444824	ParameterList			3444819	3					
ANR	3444825	CFGEntryNode	ENTRY		3444819		True				
ANR	3444826	CFGExitNode	EXIT		3444819		True				
ANR	3444827	Function	SafeSock :: setTargetSharedPortID	950:0:25067:25306							
ANR	3444828	FunctionDef	SafeSock :: setTargetSharedPortID (char const * id)		3444827	0					
ANR	3444829	CompoundStatement		952:0:25121:25306	3444827	0					
ANR	3444830	IfStatement	if ( id )		3444827	0					
ANR	3444831	Condition	id	953:5:25128:25129	3444827	0	True				
ANR	3444832	Identifier	id		3444827	0					
ANR	3444833	CompoundStatement		2:10:11:11	3444827	1					
ANR	3444834	Statement	dprintf	954:2:25137:25143	3444827	0	True				
ANR	3444835	Statement	(	954:9:25144:25144	3444827	1	True				
ANR	3444836	Statement	D_ALWAYS	954:10:25145:25152	3444827	2	True				
ANR	3444837	Statement	","	954:18:25153:25153	3444827	3	True				
ANR	3444838	Statement	"""WARNING: UDP does not support connecting to a shared port! """	955:3:25158:25218	3444827	4	True				
ANR	3444839	Statement	"""(requested address is %s with SharedPortID=%s)\\n"""	956:3:25223:25272	3444827	5	True				
ANR	3444840	Statement	","	956:53:25273:25273	3444827	6	True				
ANR	3444841	Statement	peer_description	957:3:25278:25293	3444827	7	True				
ANR	3444842	Statement	(	957:19:25294:25294	3444827	8	True				
ANR	3444843	Statement	)	957:20:25295:25295	3444827	9	True				
ANR	3444844	Statement	","	957:21:25296:25296	3444827	10	True				
ANR	3444845	Statement	id	957:23:25298:25299	3444827	11	True				
ANR	3444846	Statement	)	957:25:25300:25300	3444827	12	True				
ANR	3444847	ExpressionStatement		957:26:25301:25301	3444827	13	True				
ANR	3444848	ReturnType	void		3444827	1					
ANR	3444849	Identifier	SafeSock :: setTargetSharedPortID		3444827	2					
ANR	3444850	ParameterList	char const * id		3444827	3					
ANR	3444851	Parameter	char const * id	951:33:25105:25118	3444827	0	True				
ANR	3444852	ParameterType	char const *		3444827	0					
ANR	3444853	Identifier	id		3444827	1					
ANR	3444854	CFGEntryNode	ENTRY		3444827		True				
ANR	3444855	CFGExitNode	EXIT		3444827		True				
ANR	3444856	Symbol	id		3444827						
ANR	3444857	Function	SafeSock :: sendTargetSharedPortID	961:0:25309:25430							
ANR	3444858	FunctionDef	SafeSock :: sendTargetSharedPortID ()		3444857	0					
ANR	3444859	CompoundStatement		963:0:25349:25430	3444857	0					
ANR	3444860	ReturnStatement	return true ;	965:1:25417:25428	3444857	0	True				
ANR	3444861	Identifier	true		3444857	0					
ANR	3444862	ReturnType	bool		3444857	1					
ANR	3444863	Identifier	SafeSock :: sendTargetSharedPortID		3444857	2					
ANR	3444864	ParameterList			3444857	3					
ANR	3444865	CFGEntryNode	ENTRY		3444857		True				
ANR	3444866	CFGExitNode	EXIT		3444857		True				
ANR	3444867	Symbol	true		3444857						
ANR	3444868	Function	SafeSock :: msgReady	968:0:25433:25480							
ANR	3444869	FunctionDef	SafeSock :: msgReady ()		3444868	0					
ANR	3444870	CompoundStatement		969:21:25459:25480	3444868	0					
ANR	3444871	ReturnStatement	return _msgReady ;	970:1:25462:25478	3444868	0	True				
ANR	3444872	Identifier	_msgReady		3444868	0					
ANR	3444873	ReturnType	bool		3444868	1					
ANR	3444874	Identifier	SafeSock :: msgReady		3444868	2					
ANR	3444875	ParameterList			3444868	3					
ANR	3444876	CFGEntryNode	ENTRY		3444868		True				
ANR	3444877	CFGExitNode	EXIT		3444868		True				
ANR	3444878	Symbol	_msgReady		3444868						
