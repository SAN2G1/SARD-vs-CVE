command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2491746	File	data/converged/CVE-2011-4930_htcondor/src_classad_analysis_portGraph.cpp								
ANR	2491747	Function	splitString	28:0:934:1179							
ANR	2491748	FunctionDef	"splitString (std :: string s , std :: string & label , std :: string & attr)"		2491747	0					
ANR	2491749	CompoundStatement		29:0:1007:1179	2491747	0					
ANR	2491750	IdentifierDeclStatement	unsigned int dotPos = s . find_first_of ( '.' ) ;	30:1:1010:1052	2491747	0	True				
ANR	2491751	IdentifierDecl	dotPos = s . find_first_of ( '.' )		2491747	0					
ANR	2491752	IdentifierDeclType	unsigned int		2491747	0					
ANR	2491753	Identifier	dotPos		2491747	1					
ANR	2491754	AssignmentExpression	dotPos = s . find_first_of ( '.' )		2491747	2		=			
ANR	2491755	Identifier	dotPos		2491747	0					
ANR	2491756	CallExpression	s . find_first_of ( '.' )		2491747	1					
ANR	2491757	Callee	s . find_first_of		2491747	0					
ANR	2491758	MemberAccess	s . find_first_of		2491747	0					
ANR	2491759	Identifier	s		2491747	0					
ANR	2491760	Identifier	find_first_of		2491747	1					
ANR	2491761	ArgumentList	'.'		2491747	1					
ANR	2491762	Argument	'.'		2491747	0					
ANR	2491763	PrimaryExpression	'.'		2491747	0					
ANR	2491764	IfStatement	if ( dotPos >= s . size ( ) )		2491747	1					
ANR	2491765	Condition	dotPos >= s . size ( )	31:5:1059:1077	2491747	0	True				
ANR	2491766	RelationalExpression	dotPos >= s . size ( )		2491747	0		>=			
ANR	2491767	Identifier	dotPos		2491747	0					
ANR	2491768	CallExpression	s . size ( )		2491747	1					
ANR	2491769	Callee	s . size		2491747	0					
ANR	2491770	MemberAccess	s . size		2491747	0					
ANR	2491771	Identifier	s		2491747	0					
ANR	2491772	Identifier	size		2491747	1					
ANR	2491773	ArgumentList			2491747	1					
ANR	2491774	CompoundStatement		3:27:73:73	2491747	1					
ANR	2491775	ReturnStatement	return false ;	32:2:1085:1097	2491747	0	True				
ANR	2491776	Identifier	false		2491747	0					
ANR	2491777	ExpressionStatement	"label = s . substr ( 0 , dotPos )"	34:1:1103:1132	2491747	2	True				
ANR	2491778	AssignmentExpression	"label = s . substr ( 0 , dotPos )"		2491747	0		=			
ANR	2491779	Identifier	label		2491747	0					
ANR	2491780	CallExpression	"s . substr ( 0 , dotPos )"		2491747	1					
ANR	2491781	Callee	s . substr		2491747	0					
ANR	2491782	MemberAccess	s . substr		2491747	0					
ANR	2491783	Identifier	s		2491747	0					
ANR	2491784	Identifier	substr		2491747	1					
ANR	2491785	ArgumentList	0		2491747	1					
ANR	2491786	Argument	0		2491747	0					
ANR	2491787	PrimaryExpression	0		2491747	0					
ANR	2491788	Argument	dotPos		2491747	1					
ANR	2491789	Identifier	dotPos		2491747	0					
ANR	2491790	ExpressionStatement	attr = s . substr ( dotPos + 1 )	35:1:1135:1163	2491747	3	True				
ANR	2491791	AssignmentExpression	attr = s . substr ( dotPos + 1 )		2491747	0		=			
ANR	2491792	Identifier	attr		2491747	0					
ANR	2491793	CallExpression	s . substr ( dotPos + 1 )		2491747	1					
ANR	2491794	Callee	s . substr		2491747	0					
ANR	2491795	MemberAccess	s . substr		2491747	0					
ANR	2491796	Identifier	s		2491747	0					
ANR	2491797	Identifier	substr		2491747	1					
ANR	2491798	ArgumentList	dotPos + 1		2491747	1					
ANR	2491799	Argument	dotPos + 1		2491747	0					
ANR	2491800	AdditiveExpression	dotPos + 1		2491747	0		+			
ANR	2491801	Identifier	dotPos		2491747	0					
ANR	2491802	PrimaryExpression	1		2491747	1					
ANR	2491803	ReturnStatement	return true ;	36:1:1166:1177	2491747	4	True				
ANR	2491804	Identifier	true		2491747	0					
ANR	2491805	ReturnType	bool		2491747	1					
ANR	2491806	Identifier	splitString		2491747	2					
ANR	2491807	ParameterList	"std :: string s , std :: string & label , std :: string & attr"		2491747	3					
ANR	2491808	Parameter	std :: string s	28:18:952:964	2491747	0	True				
ANR	2491809	ParameterType	std :: string		2491747	0					
ANR	2491810	Identifier	s		2491747	1					
ANR	2491811	Parameter	std :: string & label	28:33:967:984	2491747	1	True				
ANR	2491812	ParameterType	std :: string &		2491747	0					
ANR	2491813	Identifier	label		2491747	1					
ANR	2491814	Parameter	std :: string & attr	28:53:987:1003	2491747	2	True				
ANR	2491815	ParameterType	std :: string &		2491747	0					
ANR	2491816	Identifier	attr		2491747	1					
ANR	2491817	CFGEntryNode	ENTRY		2491747		True				
ANR	2491818	CFGExitNode	EXIT		2491747		True				
ANR	2491819	Symbol	s		2491747						
ANR	2491820	Symbol	s . substr		2491747						
ANR	2491821	Symbol	s . size		2491747						
ANR	2491822	Symbol	s . find_first_of		2491747						
ANR	2491823	Symbol	false		2491747						
ANR	2491824	Symbol	true		2491747						
ANR	2491825	Symbol	label		2491747						
ANR	2491826	Symbol	attr		2491747						
ANR	2491827	Symbol	dotPos		2491747						
ANR	2491828	DeclStmt									
ANR	2491829	Decl							int	int	ExtAttrNode :: nextENodeNum
ANR	2491830	Function	ExtAttrNode :: ExtAttrNode	43:0:1242:1455							
ANR	2491831	FunctionDef	"ExtAttrNode :: ExtAttrNode (PortNode * _parent , std :: string _attrName)"		2491830	0					
ANR	2491832	CompoundStatement		45:0:1312:1455	2491830	0					
ANR	2491833	ExpressionStatement	eNodeNum = nextENodeNum	46:1:1315:1338	2491830	0	True				
ANR	2491834	AssignmentExpression	eNodeNum = nextENodeNum		2491830	0		=			
ANR	2491835	Identifier	eNodeNum		2491830	0					
ANR	2491836	Identifier	nextENodeNum		2491830	1					
ANR	2491837	ExpressionStatement	nextENodeNum ++	47:1:1341:1355	2491830	1	True				
ANR	2491838	PostIncDecOperationExpression	nextENodeNum ++		2491830	0					
ANR	2491839	Identifier	nextENodeNum		2491830	0					
ANR	2491840	IncDec	++		2491830	1					
ANR	2491841	ExpressionStatement	parent = _parent	48:1:1358:1374	2491830	2	True				
ANR	2491842	AssignmentExpression	parent = _parent		2491830	0		=			
ANR	2491843	Identifier	parent		2491830	0					
ANR	2491844	Identifier	_parent		2491830	1					
ANR	2491845	ExpressionStatement	attrName = _attrName	49:1:1377:1397	2491830	3	True				
ANR	2491846	AssignmentExpression	attrName = _attrName		2491830	0		=			
ANR	2491847	Identifier	attrName		2491830	0					
ANR	2491848	Identifier	_attrName		2491830	1					
ANR	2491849	ExpressionStatement	visited = NULL	51:1:1401:1415	2491830	4	True				
ANR	2491850	AssignmentExpression	visited = NULL		2491830	0		=			
ANR	2491851	Identifier	visited		2491830	0					
ANR	2491852	Identifier	NULL		2491830	1					
ANR	2491853	ExpressionStatement	currEdgeAtNode = NULL	52:1:1418:1439	2491830	5	True				
ANR	2491854	AssignmentExpression	currEdgeAtNode = NULL		2491830	0		=			
ANR	2491855	Identifier	currEdgeAtNode		2491830	0					
ANR	2491856	Identifier	NULL		2491830	1					
ANR	2491857	ExpressionStatement	path = NULL	53:1:1442:1453	2491830	6	True				
ANR	2491858	AssignmentExpression	path = NULL		2491830	0		=			
ANR	2491859	Identifier	path		2491830	0					
ANR	2491860	Identifier	NULL		2491830	1					
ANR	2491861	Identifier	ExtAttrNode :: ExtAttrNode		2491830	1					
ANR	2491862	ParameterList	"PortNode * _parent , std :: string _attrName"		2491830	2					
ANR	2491863	Parameter	PortNode * _parent	44:13:1269:1285	2491830	0	True				
ANR	2491864	ParameterType	PortNode *		2491830	0					
ANR	2491865	Identifier	_parent		2491830	1					
ANR	2491866	Parameter	std :: string _attrName	44:32:1288:1308	2491830	1	True				
ANR	2491867	ParameterType	std :: string		2491830	0					
ANR	2491868	Identifier	_attrName		2491830	1					
ANR	2491869	CFGEntryNode	ENTRY		2491830		True				
ANR	2491870	CFGExitNode	EXIT		2491830		True				
ANR	2491871	Symbol	parent		2491830						
ANR	2491872	Symbol	path		2491830						
ANR	2491873	Symbol	_parent		2491830						
ANR	2491874	Symbol	nextENodeNum		2491830						
ANR	2491875	Symbol	NULL		2491830						
ANR	2491876	Symbol	currEdgeAtNode		2491830						
ANR	2491877	Symbol	visited		2491830						
ANR	2491878	Symbol	eNodeNum		2491830						
ANR	2491879	Symbol	_attrName		2491830						
ANR	2491880	Symbol	attrName		2491830						
ANR	2491881	Function	ExtAttrNode :: ~ExtAttrNode	57:0:1459:1619							
ANR	2491882	FunctionDef	ExtAttrNode :: ~ExtAttrNode ()		2491881	0					
ANR	2491883	CompoundStatement		59:0:1489:1619	2491881	0					
ANR	2491884	IfStatement	if ( visited )		2491881	0					
ANR	2491885	Condition	visited	60:5:1496:1502	2491881	0	True				
ANR	2491886	Identifier	visited		2491881	0					
ANR	2491887	CompoundStatement		2:15:16:16	2491881	1					
ANR	2491888	Statement	delete	61:2:1510:1515	2491881	0	True				
ANR	2491889	Statement	[	61:9:1517:1517	2491881	1	True				
ANR	2491890	Statement	]	61:10:1518:1518	2491881	2	True				
ANR	2491891	ExpressionStatement	visited	61:12:1520:1527	2491881	3	True				
ANR	2491892	Identifier	visited		2491881	0					
ANR	2491893	IfStatement	if ( currEdgeAtNode )		2491881	1					
ANR	2491894	Condition	currEdgeAtNode	63:5:1537:1550	2491881	0	True				
ANR	2491895	Identifier	currEdgeAtNode		2491881	0					
ANR	2491896	CompoundStatement		5:22:64:64	2491881	1					
ANR	2491897	Statement	delete	64:2:1558:1563	2491881	0	True				
ANR	2491898	Statement	[	64:9:1565:1565	2491881	1	True				
ANR	2491899	Statement	]	64:10:1566:1566	2491881	2	True				
ANR	2491900	ExpressionStatement	currEdgeAtNode	64:12:1568:1582	2491881	3	True				
ANR	2491901	Identifier	currEdgeAtNode		2491881	0					
ANR	2491902	IfStatement	if ( path )		2491881	2					
ANR	2491903	Condition	path	66:5:1592:1595	2491881	0	True				
ANR	2491904	Identifier	path		2491881	0					
ANR	2491905	CompoundStatement		8:12:109:109	2491881	1					
ANR	2491906	Statement	delete	67:2:1603:1608	2491881	0	True				
ANR	2491907	ExpressionStatement	path	67:9:1610:1614	2491881	1	True				
ANR	2491908	Identifier	path		2491881	0					
ANR	2491909	Identifier	ExtAttrNode :: ~ExtAttrNode		2491881	1					
ANR	2491910	ParameterList			2491881	2					
ANR	2491911	CFGEntryNode	ENTRY		2491881		True				
ANR	2491912	CFGExitNode	EXIT		2491881		True				
ANR	2491913	Symbol	path		2491881						
ANR	2491914	Symbol	currEdgeAtNode		2491881						
ANR	2491915	Symbol	visited		2491881						
ANR	2491916	Function	ExtAttrNode :: GetFirstPath	71:0:1622:2160							
ANR	2491917	FunctionDef	ExtAttrNode :: GetFirstPath ()		2491916	0					
ANR	2491918	CompoundStatement		73:0:1663:2160	2491916	0					
ANR	2491919	IfStatement	if ( ! visited )		2491916	0					
ANR	2491920	Condition	! visited	75:5:1726:1733	2491916	0	True				
ANR	2491921	UnaryOperationExpression	! visited		2491916	0					
ANR	2491922	UnaryOperator	!		2491916	0					
ANR	2491923	Identifier	visited		2491916	1					
ANR	2491924	CompoundStatement		3:16:73:73	2491916	1					
ANR	2491925	ExpressionStatement	visited = new bool [ nextENodeNum ]	76:2:1741:1773	2491916	0	True				
ANR	2491926	AssignmentExpression	visited = new bool [ nextENodeNum ]		2491916	0		=			
ANR	2491927	Identifier	visited		2491916	0					
ANR	2491928	Identifier	nextENodeNum		2491916	1					
ANR	2491929	IfStatement	if ( ! currEdgeAtNode )		2491916	1					
ANR	2491930	Condition	! currEdgeAtNode	78:5:1783:1797	2491916	0	True				
ANR	2491931	UnaryOperationExpression	! currEdgeAtNode		2491916	0					
ANR	2491932	UnaryOperator	!		2491916	0					
ANR	2491933	Identifier	currEdgeAtNode		2491916	1					
ANR	2491934	CompoundStatement		6:23:137:137	2491916	1					
ANR	2491935	ExpressionStatement	currEdgeAtNode = new unsigned int [ nextENodeNum ]	79:2:1805:1852	2491916	0	True				
ANR	2491936	AssignmentExpression	currEdgeAtNode = new unsigned int [ nextENodeNum ]		2491916	0		=			
ANR	2491937	Identifier	currEdgeAtNode		2491916	0					
ANR	2491938	Identifier	nextENodeNum		2491916	1					
ANR	2491939	ForStatement	for ( int i = 0 ; i < nextENodeNum ; i ++ )		2491916	2					
ANR	2491940	ForInit	int i = 0 ;	83:6:1934:1943	2491916	0	True				
ANR	2491941	IdentifierDeclStatement	int i = 0 ;		2491916	0					
ANR	2491942	IdentifierDecl	i = 0		2491916	0					
ANR	2491943	IdentifierDeclType	int		2491916	0					
ANR	2491944	Identifier	i		2491916	1					
ANR	2491945	AssignmentExpression	i = 0		2491916	2		=			
ANR	2491946	Identifier	i		2491916	0					
ANR	2491947	PrimaryExpression	0		2491916	1					
ANR	2491948	Condition	i < nextENodeNum	83:17:1945:1960	2491916	1	True				
ANR	2491949	RelationalExpression	i < nextENodeNum		2491916	0		<			
ANR	2491950	Identifier	i		2491916	0					
ANR	2491951	Identifier	nextENodeNum		2491916	1					
ANR	2491952	PostIncDecOperationExpression	i ++	83:35:1963:1965	2491916	2	True				
ANR	2491953	Identifier	i		2491916	0					
ANR	2491954	IncDec	++		2491916	1					
ANR	2491955	CompoundStatement		11:41:305:305	2491916	3					
ANR	2491956	ExpressionStatement	visited [ i ] = false	84:2:1973:1991	2491916	0	True				
ANR	2491957	AssignmentExpression	visited [ i ] = false		2491916	0		=			
ANR	2491958	ArrayIndexing	visited [ i ]		2491916	0					
ANR	2491959	Identifier	visited		2491916	0					
ANR	2491960	Identifier	i		2491916	1					
ANR	2491961	Identifier	false		2491916	1					
ANR	2491962	ExpressionStatement	currEdgeAtNode [ i ] = 0	85:2:1995:2016	2491916	1	True				
ANR	2491963	AssignmentExpression	currEdgeAtNode [ i ] = 0		2491916	0		=			
ANR	2491964	ArrayIndexing	currEdgeAtNode [ i ]		2491916	0					
ANR	2491965	Identifier	currEdgeAtNode		2491916	0					
ANR	2491966	Identifier	i		2491916	1					
ANR	2491967	PrimaryExpression	0		2491916	1					
ANR	2491968	ExpressionStatement	visited [ eNodeNum ] = true	87:1:2022:2046	2491916	3	True				
ANR	2491969	AssignmentExpression	visited [ eNodeNum ] = true		2491916	0		=			
ANR	2491970	ArrayIndexing	visited [ eNodeNum ]		2491916	0					
ANR	2491971	Identifier	visited		2491916	0					
ANR	2491972	Identifier	eNodeNum		2491916	1					
ANR	2491973	Identifier	true		2491916	1					
ANR	2491974	ExpressionStatement	nodeStack . push_back ( this )	88:1:2049:2076	2491916	4	True				
ANR	2491975	CallExpression	nodeStack . push_back ( this )		2491916	0					
ANR	2491976	Callee	nodeStack . push_back		2491916	0					
ANR	2491977	MemberAccess	nodeStack . push_back		2491916	0					
ANR	2491978	Identifier	nodeStack		2491916	0					
ANR	2491979	Identifier	push_back		2491916	1					
ANR	2491980	ArgumentList	this		2491916	1					
ANR	2491981	Argument	this		2491916	0					
ANR	2491982	Identifier	this		2491916	0					
ANR	2491983	IfStatement	if ( path )		2491916	5					
ANR	2491984	Condition	path	89:5:2083:2086	2491916	0	True				
ANR	2491985	Identifier	path		2491916	0					
ANR	2491986	CompoundStatement		17:12:426:426	2491916	1					
ANR	2491987	Statement	delete	90:2:2094:2099	2491916	0	True				
ANR	2491988	ExpressionStatement	path	90:9:2101:2105	2491916	1	True				
ANR	2491989	Identifier	path		2491916	0					
ANR	2491990	ExpressionStatement	path = new MatchPath ( )	92:1:2111:2134	2491916	6	True				
ANR	2491991	AssignmentExpression	path = new MatchPath ( )		2491916	0		=			
ANR	2491992	Identifier	path		2491916	0					
ANR	2491993	UnaryExpression	new MatchPath ( )		2491916	1					
ANR	2491994	ReturnStatement	return GetNextPath ( ) ;	93:1:2137:2158	2491916	7	True				
ANR	2491995	CallExpression	GetNextPath ( )		2491916	0					
ANR	2491996	Callee	GetNextPath		2491916	0					
ANR	2491997	Identifier	GetNextPath		2491916	0					
ANR	2491998	ArgumentList			2491916	1					
ANR	2491999	ReturnType	MatchPath *		2491916	1					
ANR	2492000	Identifier	ExtAttrNode :: GetFirstPath		2491916	2					
ANR	2492001	ParameterList			2491916	3					
ANR	2492002	CFGEntryNode	ENTRY		2491916		True				
ANR	2492003	CFGExitNode	EXIT		2491916		True				
ANR	2492004	Symbol	nextENodeNum		2491916						
ANR	2492005	Symbol	* eNodeNum		2491916						
ANR	2492006	Symbol	currEdgeAtNode		2491916						
ANR	2492007	Symbol	* visited		2491916						
ANR	2492008	Symbol	GetNextPath		2491916						
ANR	2492009	Symbol	* currEdgeAtNode		2491916						
ANR	2492010	Symbol	false		2491916						
ANR	2492011	Symbol	this		2491916						
ANR	2492012	Symbol	i		2491916						
ANR	2492013	Symbol	eNodeNum		2491916						
ANR	2492014	Symbol	path		2491916						
ANR	2492015	Symbol	* i		2491916						
ANR	2492016	Symbol	visited		2491916						
ANR	2492017	Symbol	true		2491916						
ANR	2492018	Symbol	nodeStack		2491916						
ANR	2492019	Function	ExtAttrNode :: GetNextPath	96:0:2165:6450							
ANR	2492020	FunctionDef	ExtAttrNode :: GetNextPath ()		2492019	0					
ANR	2492021	CompoundStatement		98:0:2205:6450	2492019	0					
ANR	2492022	IfStatement	if ( nodeStack . empty ( ) )		2492019	0					
ANR	2492023	Condition	nodeStack . empty ( )	99:5:2212:2229	2492019	0	True				
ANR	2492024	CallExpression	nodeStack . empty ( )		2492019	0					
ANR	2492025	Callee	nodeStack . empty		2492019	0					
ANR	2492026	MemberAccess	nodeStack . empty		2492019	0					
ANR	2492027	Identifier	nodeStack		2492019	0					
ANR	2492028	Identifier	empty		2492019	1					
ANR	2492029	ArgumentList			2492019	1					
ANR	2492030	CompoundStatement		2:26:27:27	2492019	1					
ANR	2492031	ReturnStatement	return GetFirstPath ( ) ;	100:2:2237:2259	2492019	0	True				
ANR	2492032	CallExpression	GetFirstPath ( )		2492019	0					
ANR	2492033	Callee	GetFirstPath		2492019	0					
ANR	2492034	Identifier	GetFirstPath		2492019	0					
ANR	2492035	ArgumentList			2492019	1					
ANR	2492036	IdentifierDeclStatement	ExtAttrNode * currNode = nodeStack [ nodeStack . size ( ) - 1 ] ;	102:1:2265:2321	2492019	1	True				
ANR	2492037	IdentifierDecl	* currNode = nodeStack [ nodeStack . size ( ) - 1 ]		2492019	0					
ANR	2492038	IdentifierDeclType	ExtAttrNode *		2492019	0					
ANR	2492039	Identifier	currNode		2492019	1					
ANR	2492040	AssignmentExpression	* currNode = nodeStack [ nodeStack . size ( ) - 1 ]		2492019	2		=			
ANR	2492041	Identifier	currNode		2492019	0					
ANR	2492042	ArrayIndexing	nodeStack [ nodeStack . size ( ) - 1 ]		2492019	1					
ANR	2492043	Identifier	nodeStack		2492019	0					
ANR	2492044	AdditiveExpression	nodeStack . size ( ) - 1		2492019	1		-			
ANR	2492045	CallExpression	nodeStack . size ( )		2492019	0					
ANR	2492046	Callee	nodeStack . size		2492019	0					
ANR	2492047	MemberAccess	nodeStack . size		2492019	0					
ANR	2492048	Identifier	nodeStack		2492019	0					
ANR	2492049	Identifier	size		2492019	1					
ANR	2492050	ArgumentList			2492019	1					
ANR	2492051	PrimaryExpression	1		2492019	1					
ANR	2492052	IdentifierDeclStatement	ExtAttrNode * nextNode = NULL ;	103:1:2324:2352	2492019	2	True				
ANR	2492053	IdentifierDecl	* nextNode = NULL		2492019	0					
ANR	2492054	IdentifierDeclType	ExtAttrNode *		2492019	0					
ANR	2492055	Identifier	nextNode		2492019	1					
ANR	2492056	AssignmentExpression	* nextNode = NULL		2492019	2		=			
ANR	2492057	Identifier	NULL		2492019	0					
ANR	2492058	Identifier	NULL		2492019	1					
ANR	2492059	IdentifierDeclStatement	AttrNode * attrNode = NULL ;	104:1:2355:2380	2492019	3	True				
ANR	2492060	IdentifierDecl	* attrNode = NULL		2492019	0					
ANR	2492061	IdentifierDeclType	AttrNode *		2492019	0					
ANR	2492062	Identifier	attrNode		2492019	1					
ANR	2492063	AssignmentExpression	* attrNode = NULL		2492019	2		=			
ANR	2492064	Identifier	NULL		2492019	0					
ANR	2492065	Identifier	NULL		2492019	1					
ANR	2492066	IdentifierDeclStatement	MatchEdge * edge = NULL ;	105:1:2383:2405	2492019	4	True				
ANR	2492067	IdentifierDecl	* edge = NULL		2492019	0					
ANR	2492068	IdentifierDeclType	MatchEdge *		2492019	0					
ANR	2492069	Identifier	edge		2492019	1					
ANR	2492070	AssignmentExpression	* edge = NULL		2492019	2		=			
ANR	2492071	Identifier	NULL		2492019	0					
ANR	2492072	Identifier	NULL		2492019	1					
ANR	2492073	IdentifierDeclStatement	MatchPath * pathCopy = NULL ;	106:1:2408:2434	2492019	5	True				
ANR	2492074	IdentifierDecl	* pathCopy = NULL		2492019	0					
ANR	2492075	IdentifierDeclType	MatchPath *		2492019	0					
ANR	2492076	Identifier	pathCopy		2492019	1					
ANR	2492077	AssignmentExpression	* pathCopy = NULL		2492019	2		=			
ANR	2492078	Identifier	NULL		2492019	0					
ANR	2492079	Identifier	NULL		2492019	1					
ANR	2492080	IdentifierDeclStatement	unsigned int numMatchEdges = 0 ;	107:1:2437:2467	2492019	6	True				
ANR	2492081	IdentifierDecl	numMatchEdges = 0		2492019	0					
ANR	2492082	IdentifierDeclType	unsigned int		2492019	0					
ANR	2492083	Identifier	numMatchEdges		2492019	1					
ANR	2492084	AssignmentExpression	numMatchEdges = 0		2492019	2		=			
ANR	2492085	Identifier	numMatchEdges		2492019	0					
ANR	2492086	PrimaryExpression	0		2492019	1					
ANR	2492087	IdentifierDeclStatement	unsigned int currEdgeNum = 0 ;	108:1:2470:2498	2492019	7	True				
ANR	2492088	IdentifierDecl	currEdgeNum = 0		2492019	0					
ANR	2492089	IdentifierDeclType	unsigned int		2492019	0					
ANR	2492090	Identifier	currEdgeNum		2492019	1					
ANR	2492091	AssignmentExpression	currEdgeNum = 0		2492019	2		=			
ANR	2492092	Identifier	currEdgeNum		2492019	0					
ANR	2492093	PrimaryExpression	0		2492019	1					
ANR	2492094	WhileStatement	while ( true )		2492019	8					
ANR	2492095	Condition	true	127:8:3080:3083	2492019	0	True				
ANR	2492096	Identifier	true		2492019	0					
ANR	2492097	CompoundStatement		30:15:881:881	2492019	1					
ANR	2492098	ExpressionStatement	numMatchEdges = currNode -> parent -> GetNumMatchEdges ( )	128:2:3092:3145	2492019	0	True				
ANR	2492099	AssignmentExpression	numMatchEdges = currNode -> parent -> GetNumMatchEdges ( )		2492019	0		=			
ANR	2492100	Identifier	numMatchEdges		2492019	0					
ANR	2492101	CallExpression	currNode -> parent -> GetNumMatchEdges ( )		2492019	1					
ANR	2492102	Callee	currNode -> parent -> GetNumMatchEdges		2492019	0					
ANR	2492103	PtrMemberAccess	currNode -> parent -> GetNumMatchEdges		2492019	0					
ANR	2492104	PtrMemberAccess	currNode -> parent		2492019	0					
ANR	2492105	Identifier	currNode		2492019	0					
ANR	2492106	Identifier	parent		2492019	1					
ANR	2492107	Identifier	GetNumMatchEdges		2492019	1					
ANR	2492108	ArgumentList			2492019	1					
ANR	2492109	ExpressionStatement	currEdgeNum = currEdgeAtNode [ currNode -> eNodeNum ]	130:2:3207:3255	2492019	1	True				
ANR	2492110	AssignmentExpression	currEdgeNum = currEdgeAtNode [ currNode -> eNodeNum ]		2492019	0		=			
ANR	2492111	Identifier	currEdgeNum		2492019	0					
ANR	2492112	ArrayIndexing	currEdgeAtNode [ currNode -> eNodeNum ]		2492019	1					
ANR	2492113	Identifier	currEdgeAtNode		2492019	0					
ANR	2492114	PtrMemberAccess	currNode -> eNodeNum		2492019	1					
ANR	2492115	Identifier	currNode		2492019	0					
ANR	2492116	Identifier	eNodeNum		2492019	1					
ANR	2492117	IfStatement	if ( currEdgeNum >= numMatchEdges )		2492019	2					
ANR	2492118	Condition	currEdgeNum >= numMatchEdges	131:6:3263:3290	2492019	0	True				
ANR	2492119	RelationalExpression	currEdgeNum >= numMatchEdges		2492019	0		>=			
ANR	2492120	Identifier	currEdgeNum		2492019	0					
ANR	2492121	Identifier	numMatchEdges		2492019	1					
ANR	2492122	CompoundStatement		34:37:1088:1088	2492019	1					
ANR	2492123	IfStatement	if ( path -> Empty ( ) )		2492019	0					
ANR	2492124	Condition	path -> Empty ( )	134:7:3356:3369	2492019	0	True				
ANR	2492125	CallExpression	path -> Empty ( )		2492019	0					
ANR	2492126	Callee	path -> Empty		2492019	0					
ANR	2492127	PtrMemberAccess	path -> Empty		2492019	0					
ANR	2492128	Identifier	path		2492019	0					
ANR	2492129	Identifier	Empty		2492019	1					
ANR	2492130	ArgumentList			2492019	1					
ANR	2492131	CompoundStatement		37:24:1167:1167	2492019	1					
ANR	2492132	ReturnStatement	return NULL ;	138:4:3477:3488	2492019	0	True				
ANR	2492133	Identifier	NULL		2492019	0					
ANR	2492134	ElseStatement	else		2492019	0					
ANR	2492135	CompoundStatement		43:8:1297:1297	2492019	0					
ANR	2492136	ExpressionStatement	currEdgeAtNode [ currNode -> eNodeNum ] = 0	143:4:3538:3576	2492019	0	True				
ANR	2492137	AssignmentExpression	currEdgeAtNode [ currNode -> eNodeNum ] = 0		2492019	0		=			
ANR	2492138	ArrayIndexing	currEdgeAtNode [ currNode -> eNodeNum ]		2492019	0					
ANR	2492139	Identifier	currEdgeAtNode		2492019	0					
ANR	2492140	PtrMemberAccess	currNode -> eNodeNum		2492019	1					
ANR	2492141	Identifier	currNode		2492019	0					
ANR	2492142	Identifier	eNodeNum		2492019	1					
ANR	2492143	PrimaryExpression	0		2492019	1					
ANR	2492144	ExpressionStatement	visited [ currNode -> eNodeNum ] = false	144:4:3582:3617	2492019	1	True				
ANR	2492145	AssignmentExpression	visited [ currNode -> eNodeNum ] = false		2492019	0		=			
ANR	2492146	ArrayIndexing	visited [ currNode -> eNodeNum ]		2492019	0					
ANR	2492147	Identifier	visited		2492019	0					
ANR	2492148	PtrMemberAccess	currNode -> eNodeNum		2492019	1					
ANR	2492149	Identifier	currNode		2492019	0					
ANR	2492150	Identifier	eNodeNum		2492019	1					
ANR	2492151	Identifier	false		2492019	1					
ANR	2492152	ExpressionStatement	path -> RemoveLastEdge ( )	149:4:3754:3777	2492019	2	True				
ANR	2492153	CallExpression	path -> RemoveLastEdge ( )		2492019	0					
ANR	2492154	Callee	path -> RemoveLastEdge		2492019	0					
ANR	2492155	PtrMemberAccess	path -> RemoveLastEdge		2492019	0					
ANR	2492156	Identifier	path		2492019	0					
ANR	2492157	Identifier	RemoveLastEdge		2492019	1					
ANR	2492158	ArgumentList			2492019	1					
ANR	2492159	ExpressionStatement	nodeStack . pop_back ( )	153:4:3880:3901	2492019	3	True				
ANR	2492160	CallExpression	nodeStack . pop_back ( )		2492019	0					
ANR	2492161	Callee	nodeStack . pop_back		2492019	0					
ANR	2492162	MemberAccess	nodeStack . pop_back		2492019	0					
ANR	2492163	Identifier	nodeStack		2492019	0					
ANR	2492164	Identifier	pop_back		2492019	1					
ANR	2492165	ArgumentList			2492019	1					
ANR	2492166	IfStatement	if ( nodeStack . empty ( ) )		2492019	4					
ANR	2492167	Condition	nodeStack . empty ( )	154:8:3911:3928	2492019	0	True				
ANR	2492168	CallExpression	nodeStack . empty ( )		2492019	0					
ANR	2492169	Callee	nodeStack . empty		2492019	0					
ANR	2492170	MemberAccess	nodeStack . empty		2492019	0					
ANR	2492171	Identifier	nodeStack		2492019	0					
ANR	2492172	Identifier	empty		2492019	1					
ANR	2492173	ArgumentList			2492019	1					
ANR	2492174	CompoundStatement		57:29:1726:1726	2492019	1					
ANR	2492175	ReturnStatement	return NULL ;	157:5:4025:4036	2492019	0	True				
ANR	2492176	Identifier	NULL		2492019	0					
ANR	2492177	ExpressionStatement	currNode = nodeStack [ nodeStack . size ( ) - 1 ]	159:4:4048:4091	2492019	5	True				
ANR	2492178	AssignmentExpression	currNode = nodeStack [ nodeStack . size ( ) - 1 ]		2492019	0		=			
ANR	2492179	Identifier	currNode		2492019	0					
ANR	2492180	ArrayIndexing	nodeStack [ nodeStack . size ( ) - 1 ]		2492019	1					
ANR	2492181	Identifier	nodeStack		2492019	0					
ANR	2492182	AdditiveExpression	nodeStack . size ( ) - 1		2492019	1		-			
ANR	2492183	CallExpression	nodeStack . size ( )		2492019	0					
ANR	2492184	Callee	nodeStack . size		2492019	0					
ANR	2492185	MemberAccess	nodeStack . size		2492019	0					
ANR	2492186	Identifier	nodeStack		2492019	0					
ANR	2492187	Identifier	size		2492019	1					
ANR	2492188	ArgumentList			2492019	1					
ANR	2492189	PrimaryExpression	1		2492019	1					
ANR	2492190	ExpressionStatement	currEdgeAtNode [ currNode -> eNodeNum ] ++	160:4:4097:4133	2492019	6	True				
ANR	2492191	PostIncDecOperationExpression	currEdgeAtNode [ currNode -> eNodeNum ] ++		2492019	0					
ANR	2492192	ArrayIndexing	currEdgeAtNode [ currNode -> eNodeNum ]		2492019	0					
ANR	2492193	Identifier	currEdgeAtNode		2492019	0					
ANR	2492194	PtrMemberAccess	currNode -> eNodeNum		2492019	1					
ANR	2492195	Identifier	currNode		2492019	0					
ANR	2492196	Identifier	eNodeNum		2492019	1					
ANR	2492197	IncDec	++		2492019	1					
ANR	2492198	ElseStatement	else		2492019	0					
ANR	2492199	CompoundStatement		66:7:1945:1945	2492019	0					
ANR	2492200	ExpressionStatement	edge = currNode -> parent -> GetMatchEdge ( currEdgeNum )	166:3:4188:4240	2492019	0	True				
ANR	2492201	AssignmentExpression	edge = currNode -> parent -> GetMatchEdge ( currEdgeNum )		2492019	0		=			
ANR	2492202	Identifier	edge		2492019	0					
ANR	2492203	CallExpression	currNode -> parent -> GetMatchEdge ( currEdgeNum )		2492019	1					
ANR	2492204	Callee	currNode -> parent -> GetMatchEdge		2492019	0					
ANR	2492205	PtrMemberAccess	currNode -> parent -> GetMatchEdge		2492019	0					
ANR	2492206	PtrMemberAccess	currNode -> parent		2492019	0					
ANR	2492207	Identifier	currNode		2492019	0					
ANR	2492208	Identifier	parent		2492019	1					
ANR	2492209	Identifier	GetMatchEdge		2492019	1					
ANR	2492210	ArgumentList	currEdgeNum		2492019	1					
ANR	2492211	Argument	currEdgeNum		2492019	0					
ANR	2492212	Identifier	currEdgeNum		2492019	0					
ANR	2492213	ExpressionStatement	attrNode = edge -> GetTarget ( ) -> GetAttrNode ( currNode -> attrName )	173:3:4454:4518	2492019	1	True				
ANR	2492214	AssignmentExpression	attrNode = edge -> GetTarget ( ) -> GetAttrNode ( currNode -> attrName )		2492019	0		=			
ANR	2492215	Identifier	attrNode		2492019	0					
ANR	2492216	CallExpression	edge -> GetTarget ( ) -> GetAttrNode ( currNode -> attrName )		2492019	1					
ANR	2492217	Callee	edge -> GetTarget ( ) -> GetAttrNode		2492019	0					
ANR	2492218	PtrMemberAccess	edge -> GetTarget ( ) -> GetAttrNode		2492019	0					
ANR	2492219	CallExpression	edge -> GetTarget ( )		2492019	0					
ANR	2492220	Callee	edge -> GetTarget		2492019	0					
ANR	2492221	PtrMemberAccess	edge -> GetTarget		2492019	0					
ANR	2492222	Identifier	edge		2492019	0					
ANR	2492223	Identifier	GetTarget		2492019	1					
ANR	2492224	ArgumentList			2492019	1					
ANR	2492225	Identifier	GetAttrNode		2492019	1					
ANR	2492226	ArgumentList	currNode -> attrName		2492019	1					
ANR	2492227	Argument	currNode -> attrName		2492019	0					
ANR	2492228	PtrMemberAccess	currNode -> attrName		2492019	0					
ANR	2492229	Identifier	currNode		2492019	0					
ANR	2492230	Identifier	attrName		2492019	1					
ANR	2492231	IfStatement	if ( attrNode )		2492019	2					
ANR	2492232	Condition	attrNode	174:7:4527:4534	2492019	0	True				
ANR	2492233	Identifier	attrNode		2492019	0					
ANR	2492234	CompoundStatement		77:18:2332:2332	2492019	1					
ANR	2492235	ExpressionStatement	nextNode = attrNode -> GetDep ( )	177:4:4598:4628	2492019	0	True				
ANR	2492236	AssignmentExpression	nextNode = attrNode -> GetDep ( )		2492019	0		=			
ANR	2492237	Identifier	nextNode		2492019	0					
ANR	2492238	CallExpression	attrNode -> GetDep ( )		2492019	1					
ANR	2492239	Callee	attrNode -> GetDep		2492019	0					
ANR	2492240	PtrMemberAccess	attrNode -> GetDep		2492019	0					
ANR	2492241	Identifier	attrNode		2492019	0					
ANR	2492242	Identifier	GetDep		2492019	1					
ANR	2492243	ArgumentList			2492019	1					
ANR	2492244	IfStatement	if ( nextNode )		2492019	1					
ANR	2492245	Condition	nextNode	178:8:4638:4645	2492019	0	True				
ANR	2492246	Identifier	nextNode		2492019	0					
ANR	2492247	CompoundStatement		81:19:2443:2443	2492019	1					
ANR	2492248	IfStatement	if ( visited [ nextNode -> eNodeNum ] )		2492019	0					
ANR	2492249	Condition	visited [ nextNode -> eNodeNum ]	181:9:4708:4734	2492019	0	True				
ANR	2492250	ArrayIndexing	visited [ nextNode -> eNodeNum ]		2492019	0					
ANR	2492251	Identifier	visited		2492019	0					
ANR	2492252	PtrMemberAccess	nextNode -> eNodeNum		2492019	1					
ANR	2492253	Identifier	nextNode		2492019	0					
ANR	2492254	Identifier	eNodeNum		2492019	1					
ANR	2492255	CompoundStatement		84:39:2532:2532	2492019	1					
ANR	2492256	ExpressionStatement	currEdgeAtNode [ currNode -> eNodeNum ] ++	184:6:4805:4841	2492019	0	True				
ANR	2492257	PostIncDecOperationExpression	currEdgeAtNode [ currNode -> eNodeNum ] ++		2492019	0					
ANR	2492258	ArrayIndexing	currEdgeAtNode [ currNode -> eNodeNum ]		2492019	0					
ANR	2492259	Identifier	currEdgeAtNode		2492019	0					
ANR	2492260	PtrMemberAccess	currNode -> eNodeNum		2492019	1					
ANR	2492261	Identifier	currNode		2492019	0					
ANR	2492262	Identifier	eNodeNum		2492019	1					
ANR	2492263	IncDec	++		2492019	1					
ANR	2492264	ElseStatement	else		2492019	0					
ANR	2492265	CompoundStatement		89:10:2654:2654	2492019	0					
ANR	2492266	ExpressionStatement	path -> AddMatchEdge ( edge )	191:6:4988:5014	2492019	0	True				
ANR	2492267	CallExpression	path -> AddMatchEdge ( edge )		2492019	0					
ANR	2492268	Callee	path -> AddMatchEdge		2492019	0					
ANR	2492269	PtrMemberAccess	path -> AddMatchEdge		2492019	0					
ANR	2492270	Identifier	path		2492019	0					
ANR	2492271	Identifier	AddMatchEdge		2492019	1					
ANR	2492272	ArgumentList	edge		2492019	1					
ANR	2492273	Argument	edge		2492019	0					
ANR	2492274	Identifier	edge		2492019	0					
ANR	2492275	ExpressionStatement	currNode = nextNode	195:6:5125:5144	2492019	1	True				
ANR	2492276	AssignmentExpression	currNode = nextNode		2492019	0		=			
ANR	2492277	Identifier	currNode		2492019	0					
ANR	2492278	Identifier	nextNode		2492019	1					
ANR	2492279	ExpressionStatement	nodeStack . push_back ( currNode )	196:6:5152:5183	2492019	2	True				
ANR	2492280	CallExpression	nodeStack . push_back ( currNode )		2492019	0					
ANR	2492281	Callee	nodeStack . push_back		2492019	0					
ANR	2492282	MemberAccess	nodeStack . push_back		2492019	0					
ANR	2492283	Identifier	nodeStack		2492019	0					
ANR	2492284	Identifier	push_back		2492019	1					
ANR	2492285	ArgumentList	currNode		2492019	1					
ANR	2492286	Argument	currNode		2492019	0					
ANR	2492287	Identifier	currNode		2492019	0					
ANR	2492288	ExpressionStatement	visited [ currNode -> eNodeNum ] = true	197:6:5191:5225	2492019	3	True				
ANR	2492289	AssignmentExpression	visited [ currNode -> eNodeNum ] = true		2492019	0		=			
ANR	2492290	ArrayIndexing	visited [ currNode -> eNodeNum ]		2492019	0					
ANR	2492291	Identifier	visited		2492019	0					
ANR	2492292	PtrMemberAccess	currNode -> eNodeNum		2492019	1					
ANR	2492293	Identifier	currNode		2492019	0					
ANR	2492294	Identifier	eNodeNum		2492019	1					
ANR	2492295	Identifier	true		2492019	1					
ANR	2492296	ElseStatement	else		2492019	0					
ANR	2492297	IfStatement	if ( attrNode -> IsLiteral ( ) )		2492019	0					
ANR	2492298	Condition	attrNode -> IsLiteral ( )	200:13:5253:5274	2492019	0	True				
ANR	2492299	CallExpression	attrNode -> IsLiteral ( )		2492019	0					
ANR	2492300	Callee	attrNode -> IsLiteral		2492019	0					
ANR	2492301	PtrMemberAccess	attrNode -> IsLiteral		2492019	0					
ANR	2492302	Identifier	attrNode		2492019	0					
ANR	2492303	Identifier	IsLiteral		2492019	1					
ANR	2492304	ArgumentList			2492019	1					
ANR	2492305	CompoundStatement		103:38:3072:3072	2492019	1					
ANR	2492306	ExpressionStatement	path -> AddMatchEdge ( edge )	205:5:5423:5449	2492019	0	True				
ANR	2492307	CallExpression	path -> AddMatchEdge ( edge )		2492019	0					
ANR	2492308	Callee	path -> AddMatchEdge		2492019	0					
ANR	2492309	PtrMemberAccess	path -> AddMatchEdge		2492019	0					
ANR	2492310	Identifier	path		2492019	0					
ANR	2492311	Identifier	AddMatchEdge		2492019	1					
ANR	2492312	ArgumentList	edge		2492019	1					
ANR	2492313	Argument	edge		2492019	0					
ANR	2492314	Identifier	edge		2492019	0					
ANR	2492315	ExpressionStatement	currEdgeAtNode [ currNode -> eNodeNum ] ++	211:5:5633:5669	2492019	1	True				
ANR	2492316	PostIncDecOperationExpression	currEdgeAtNode [ currNode -> eNodeNum ] ++		2492019	0					
ANR	2492317	ArrayIndexing	currEdgeAtNode [ currNode -> eNodeNum ]		2492019	0					
ANR	2492318	Identifier	currEdgeAtNode		2492019	0					
ANR	2492319	PtrMemberAccess	currNode -> eNodeNum		2492019	1					
ANR	2492320	Identifier	currNode		2492019	0					
ANR	2492321	Identifier	eNodeNum		2492019	1					
ANR	2492322	IncDec	++		2492019	1					
ANR	2492323	ExpressionStatement	pathCopy = path -> Copy ( )	212:5:5676:5700	2492019	2	True				
ANR	2492324	AssignmentExpression	pathCopy = path -> Copy ( )		2492019	0		=			
ANR	2492325	Identifier	pathCopy		2492019	0					
ANR	2492326	CallExpression	path -> Copy ( )		2492019	1					
ANR	2492327	Callee	path -> Copy		2492019	0					
ANR	2492328	PtrMemberAccess	path -> Copy		2492019	0					
ANR	2492329	Identifier	path		2492019	0					
ANR	2492330	Identifier	Copy		2492019	1					
ANR	2492331	ArgumentList			2492019	1					
ANR	2492332	ExpressionStatement	path -> RemoveLastEdge ( )	213:5:5707:5730	2492019	3	True				
ANR	2492333	CallExpression	path -> RemoveLastEdge ( )		2492019	0					
ANR	2492334	Callee	path -> RemoveLastEdge		2492019	0					
ANR	2492335	PtrMemberAccess	path -> RemoveLastEdge		2492019	0					
ANR	2492336	Identifier	path		2492019	0					
ANR	2492337	Identifier	RemoveLastEdge		2492019	1					
ANR	2492338	ArgumentList			2492019	1					
ANR	2492339	ReturnStatement	return pathCopy ;	214:5:5737:5752	2492019	4	True				
ANR	2492340	Identifier	pathCopy		2492019	0					
ANR	2492341	ElseStatement	else		2492019	0					
ANR	2492342	CompoundStatement		122:5:3602:3625	2492019	0					
ANR	2492343	IdentifierDeclStatement	"std :: string buffer = """" ;"	219:5:5808:5831	2492019	0	True				
ANR	2492344	IdentifierDecl	"buffer = """""		2492019	0					
ANR	2492345	IdentifierDeclType	std :: string		2492019	0					
ANR	2492346	Identifier	buffer		2492019	1					
ANR	2492347	AssignmentExpression	"buffer = """""		2492019	2		=			
ANR	2492348	Identifier	buffer		2492019	0					
ANR	2492349	PrimaryExpression	""""""		2492019	1					
ANR	2492350	ExpressionStatement	attrNode -> ToString ( buffer )	220:5:5838:5866	2492019	1	True				
ANR	2492351	CallExpression	attrNode -> ToString ( buffer )		2492019	0					
ANR	2492352	Callee	attrNode -> ToString		2492019	0					
ANR	2492353	PtrMemberAccess	attrNode -> ToString		2492019	0					
ANR	2492354	Identifier	attrNode		2492019	0					
ANR	2492355	Identifier	ToString		2492019	1					
ANR	2492356	ArgumentList	buffer		2492019	1					
ANR	2492357	Argument	buffer		2492019	0					
ANR	2492358	Identifier	buffer		2492019	0					
ANR	2492359	ExpressionStatement	"cout << ""error: AttrNode "" << buffer << ""has no dependencies and no literal value"" << endl"	221:5:5873:5970	2492019	2	True				
ANR	2492360	ShiftExpression	"cout << ""error: AttrNode "" << buffer << ""has no dependencies and no literal value"" << endl"		2492019	0		<<			
ANR	2492361	Identifier	cout		2492019	0					
ANR	2492362	ShiftExpression	"""error: AttrNode "" << buffer << ""has no dependencies and no literal value"" << endl"		2492019	1		<<			
ANR	2492363	PrimaryExpression	"""error: AttrNode """		2492019	0					
ANR	2492364	ShiftExpression	"buffer << ""has no dependencies and no literal value"" << endl"		2492019	1		<<			
ANR	2492365	Identifier	buffer		2492019	0					
ANR	2492366	ShiftExpression	"""has no dependencies and no literal value"" << endl"		2492019	1		<<			
ANR	2492367	PrimaryExpression	"""has no dependencies and no literal value"""		2492019	0					
ANR	2492368	Identifier	endl		2492019	1					
ANR	2492369	ReturnStatement	return NULL ;	223:5:5977:5988	2492019	3	True				
ANR	2492370	Identifier	NULL		2492019	0					
ANR	2492371	ElseStatement	else		2492019	0					
ANR	2492372	CompoundStatement		129:8:3803:3803	2492019	0					
ANR	2492373	ExpressionStatement	currEdgeAtNode [ currNode -> eNodeNum ] ++	234:4:6310:6346	2492019	0	True				
ANR	2492374	PostIncDecOperationExpression	currEdgeAtNode [ currNode -> eNodeNum ] ++		2492019	0					
ANR	2492375	ArrayIndexing	currEdgeAtNode [ currNode -> eNodeNum ]		2492019	0					
ANR	2492376	Identifier	currEdgeAtNode		2492019	0					
ANR	2492377	PtrMemberAccess	currNode -> eNodeNum		2492019	1					
ANR	2492378	Identifier	currNode		2492019	0					
ANR	2492379	Identifier	eNodeNum		2492019	1					
ANR	2492380	IncDec	++		2492019	1					
ANR	2492381	ExpressionStatement	"cout << ""error: ExtAttrNode::GetNextPath exited loop abnormally"" << endl"	238:1:6361:6433	2492019	9	True				
ANR	2492382	ShiftExpression	"cout << ""error: ExtAttrNode::GetNextPath exited loop abnormally"" << endl"		2492019	0		<<			
ANR	2492383	Identifier	cout		2492019	0					
ANR	2492384	ShiftExpression	"""error: ExtAttrNode::GetNextPath exited loop abnormally"" << endl"		2492019	1		<<			
ANR	2492385	PrimaryExpression	"""error: ExtAttrNode::GetNextPath exited loop abnormally"""		2492019	0					
ANR	2492386	Identifier	endl		2492019	1					
ANR	2492387	ReturnStatement	return NULL ;	239:1:6437:6448	2492019	10	True				
ANR	2492388	Identifier	NULL		2492019	0					
ANR	2492389	ReturnType	MatchPath *		2492019	1					
ANR	2492390	Identifier	ExtAttrNode :: GetNextPath		2492019	2					
ANR	2492391	ParameterList			2492019	3					
ANR	2492392	CFGEntryNode	ENTRY		2492019		True				
ANR	2492393	CFGExitNode	EXIT		2492019		True				
ANR	2492394	Symbol	path -> Empty		2492019						
ANR	2492395	Symbol	edge -> GetTarget		2492019						
ANR	2492396	Symbol	currEdgeAtNode		2492019						
ANR	2492397	Symbol	* visited		2492019						
ANR	2492398	Symbol	currNode -> parent		2492019						
ANR	2492399	Symbol	currNode -> eNodeNum		2492019						
ANR	2492400	Symbol	edge -> GetTarget ( ) -> GetAttrNode		2492019						
ANR	2492401	Symbol	numMatchEdges		2492019						
ANR	2492402	Symbol	attrNode		2492019						
ANR	2492403	Symbol	* currNode		2492019						
ANR	2492404	Symbol	path		2492019						
ANR	2492405	Symbol	edge		2492019						
ANR	2492406	Symbol	* nextNode -> eNodeNum		2492019						
ANR	2492407	Symbol	* nodeStack . size		2492019						
ANR	2492408	Symbol	* attrNode		2492019						
ANR	2492409	Symbol	currNode		2492019						
ANR	2492410	Symbol	nodeStack . empty		2492019						
ANR	2492411	Symbol	currNode -> parent -> GetMatchEdge		2492019						
ANR	2492412	Symbol	* * currNode		2492019						
ANR	2492413	Symbol	attrNode -> IsLiteral		2492019						
ANR	2492414	Symbol	buffer		2492019						
ANR	2492415	Symbol	nextNode -> eNodeNum		2492019						
ANR	2492416	Symbol	* currNode -> parent		2492019						
ANR	2492417	Symbol	NULL		2492019						
ANR	2492418	Symbol	currNode -> attrName		2492019						
ANR	2492419	Symbol	* currNode -> eNodeNum		2492019						
ANR	2492420	Symbol	* currEdgeAtNode		2492019						
ANR	2492421	Symbol	false		2492019						
ANR	2492422	Symbol	path -> Copy		2492019						
ANR	2492423	Symbol	nodeStack . size		2492019						
ANR	2492424	Symbol	currNode -> parent -> GetNumMatchEdges		2492019						
ANR	2492425	Symbol	* edge		2492019						
ANR	2492426	Symbol	* edge -> GetTarget		2492019						
ANR	2492427	Symbol	pathCopy		2492019						
ANR	2492428	Symbol	* nextNode		2492019						
ANR	2492429	Symbol	nextNode		2492019						
ANR	2492430	Symbol	true		2492019						
ANR	2492431	Symbol	visited		2492019						
ANR	2492432	Symbol	* * nextNode		2492019						
ANR	2492433	Symbol	currEdgeNum		2492019						
ANR	2492434	Symbol	* path		2492019						
ANR	2492435	Symbol	attrNode -> GetDep		2492019						
ANR	2492436	Symbol	GetFirstPath		2492019						
ANR	2492437	Symbol	nodeStack		2492019						
ANR	2492438	Symbol	* nodeStack		2492019						
ANR	2492439	Symbol	* * edge		2492019						
ANR	2492440	Function	ExtAttrNode :: ToString	242:0:6453:6638							
ANR	2492441	FunctionDef	ExtAttrNode :: ToString (std :: string & buffer)		2492440	0					
ANR	2492442	CompoundStatement		244:0:6504:6638	2492440	0					
ANR	2492443	IdentifierDeclStatement	char tempBuf [ 512 ] ;	245:1:6507:6524	2492440	0	True				
ANR	2492444	IdentifierDecl	tempBuf [ 512 ]		2492440	0					
ANR	2492445	IdentifierDeclType	char [ 512 ]		2492440	0					
ANR	2492446	Identifier	tempBuf		2492440	1					
ANR	2492447	PrimaryExpression	512		2492440	2					
ANR	2492448	ExpressionStatement	"sprintf ( tempBuf , ""%d"" , eNodeNum )"	246:1:6527:6561	2492440	1	True				
ANR	2492449	CallExpression	"sprintf ( tempBuf , ""%d"" , eNodeNum )"		2492440	0					
ANR	2492450	Callee	sprintf		2492440	0					
ANR	2492451	Identifier	sprintf		2492440	0					
ANR	2492452	ArgumentList	tempBuf		2492440	1					
ANR	2492453	Argument	tempBuf		2492440	0					
ANR	2492454	Identifier	tempBuf		2492440	0					
ANR	2492455	Argument	"""%d"""		2492440	1					
ANR	2492456	PrimaryExpression	"""%d"""		2492440	0					
ANR	2492457	Argument	eNodeNum		2492440	2					
ANR	2492458	Identifier	eNodeNum		2492440	0					
ANR	2492459	ExpressionStatement	"buffer += ""[eNodeNum:"""	247:1:6564:6586	2492440	2	True				
ANR	2492460	AssignmentExpression	"buffer += ""[eNodeNum:"""		2492440	0		+=			
ANR	2492461	Identifier	buffer		2492440	0					
ANR	2492462	PrimaryExpression	"""[eNodeNum:"""		2492440	1					
ANR	2492463	ExpressionStatement	buffer += tempBuf	248:1:6589:6606	2492440	3	True				
ANR	2492464	AssignmentExpression	buffer += tempBuf		2492440	0		+=			
ANR	2492465	Identifier	buffer		2492440	0					
ANR	2492466	Identifier	tempBuf		2492440	1					
ANR	2492467	ExpressionStatement	"buffer += ""]"""	249:1:6609:6622	2492440	4	True				
ANR	2492468	AssignmentExpression	"buffer += ""]"""		2492440	0		+=			
ANR	2492469	Identifier	buffer		2492440	0					
ANR	2492470	PrimaryExpression	"""]"""		2492440	1					
ANR	2492471	ReturnStatement	return true ;	250:1:6625:6636	2492440	5	True				
ANR	2492472	Identifier	true		2492440	0					
ANR	2492473	ReturnType	bool		2492440	1					
ANR	2492474	Identifier	ExtAttrNode :: ToString		2492440	2					
ANR	2492475	ParameterList	std :: string & buffer		2492440	3					
ANR	2492476	Parameter	std :: string & buffer	243:10:6482:6500	2492440	0	True				
ANR	2492477	ParameterType	std :: string &		2492440	0					
ANR	2492478	Identifier	buffer		2492440	1					
ANR	2492479	CFGEntryNode	ENTRY		2492440		True				
ANR	2492480	CFGExitNode	EXIT		2492440		True				
ANR	2492481	Symbol	true		2492440						
ANR	2492482	Symbol	eNodeNum		2492440						
ANR	2492483	Symbol	buffer		2492440						
ANR	2492484	Symbol	tempBuf		2492440						
ANR	2492485	Function	AttrNode :: AttrNode	254:0:6661:6720							
ANR	2492486	FunctionDef	AttrNode :: AttrNode ()		2492485	0					
ANR	2492487	CompoundStatement		256:0:6684:6720	2492485	0					
ANR	2492488	ExpressionStatement	literalVal = false	257:1:6687:6705	2492485	0	True				
ANR	2492489	AssignmentExpression	literalVal = false		2492485	0		=			
ANR	2492490	Identifier	literalVal		2492485	0					
ANR	2492491	Identifier	false		2492485	1					
ANR	2492492	ExpressionStatement	dep = NULL	258:1:6708:6718	2492485	1	True				
ANR	2492493	AssignmentExpression	dep = NULL		2492485	0		=			
ANR	2492494	Identifier	dep		2492485	0					
ANR	2492495	Identifier	NULL		2492485	1					
ANR	2492496	Identifier	AttrNode :: AttrNode		2492485	1					
ANR	2492497	ParameterList			2492485	2					
ANR	2492498	CFGEntryNode	ENTRY		2492485		True				
ANR	2492499	CFGExitNode	EXIT		2492485		True				
ANR	2492500	Symbol	NULL		2492485						
ANR	2492501	Symbol	false		2492485						
ANR	2492502	Symbol	literalVal		2492485						
ANR	2492503	Symbol	dep		2492485						
ANR	2492504	Function	AttrNode :: AttrNode	261:0:6723:6825							
ANR	2492505	FunctionDef	AttrNode :: AttrNode (classad :: Value & _val)		2492504	0					
ANR	2492506	CompoundStatement		263:0:6767:6825	2492504	0					
ANR	2492507	ExpressionStatement	literalVal = true	264:1:6770:6787	2492504	0	True				
ANR	2492508	AssignmentExpression	literalVal = true		2492504	0		=			
ANR	2492509	Identifier	literalVal		2492504	0					
ANR	2492510	Identifier	true		2492504	1					
ANR	2492511	ExpressionStatement	dep = NULL	265:1:6790:6800	2492504	1	True				
ANR	2492512	AssignmentExpression	dep = NULL		2492504	0		=			
ANR	2492513	Identifier	dep		2492504	0					
ANR	2492514	Identifier	NULL		2492504	1					
ANR	2492515	ExpressionStatement	val . CopyFrom ( _val )	266:1:6803:6823	2492504	2	True				
ANR	2492516	CallExpression	val . CopyFrom ( _val )		2492504	0					
ANR	2492517	Callee	val . CopyFrom		2492504	0					
ANR	2492518	MemberAccess	val . CopyFrom		2492504	0					
ANR	2492519	Identifier	val		2492504	0					
ANR	2492520	Identifier	CopyFrom		2492504	1					
ANR	2492521	ArgumentList	_val		2492504	1					
ANR	2492522	Argument	_val		2492504	0					
ANR	2492523	Identifier	_val		2492504	0					
ANR	2492524	Identifier	AttrNode :: AttrNode		2492504	1					
ANR	2492525	ParameterList	classad :: Value & _val		2492504	2					
ANR	2492526	Parameter	classad :: Value & _val	262:10:6744:6763	2492504	0	True				
ANR	2492527	ParameterType	classad :: Value &		2492504	0					
ANR	2492528	Identifier	_val		2492504	1					
ANR	2492529	CFGEntryNode	ENTRY		2492504		True				
ANR	2492530	CFGExitNode	EXIT		2492504		True				
ANR	2492531	Symbol	val		2492504						
ANR	2492532	Symbol	NULL		2492504						
ANR	2492533	Symbol	true		2492504						
ANR	2492534	Symbol	_val		2492504						
ANR	2492535	Symbol	literalVal		2492504						
ANR	2492536	Symbol	dep		2492504						
ANR	2492537	Function	AttrNode :: ~AttrNode	269:0:6828:6877							
ANR	2492538	FunctionDef	AttrNode :: ~AttrNode ()		2492537	0					
ANR	2492539	CompoundStatement		271:0:6852:6877	2492537	0					
ANR	2492540	IfStatement	if ( dep )		2492537	0					
ANR	2492541	Condition	dep	272:5:6859:6861	2492537	0	True				
ANR	2492542	Identifier	dep		2492537	0					
ANR	2492543	Statement	delete	272:11:6865:6870	2492537	1	True				
ANR	2492544	ExpressionStatement	dep	272:18:6872:6875	2492537	1	True				
ANR	2492545	Identifier	dep		2492537	0					
ANR	2492546	Identifier	AttrNode :: ~AttrNode		2492537	1					
ANR	2492547	ParameterList			2492537	2					
ANR	2492548	CFGEntryNode	ENTRY		2492537		True				
ANR	2492549	CFGExitNode	EXIT		2492537		True				
ANR	2492550	Symbol	dep		2492537						
ANR	2492551	Function	AttrNode :: AddDep	275:0:6880:6955							
ANR	2492552	FunctionDef	AttrNode :: AddDep (ExtAttrNode * eNode)		2492551	0					
ANR	2492553	CompoundStatement		277:0:6925:6955	2492551	0					
ANR	2492554	ExpressionStatement	dep = eNode	278:1:6928:6939	2492551	0	True				
ANR	2492555	AssignmentExpression	dep = eNode		2492551	0		=			
ANR	2492556	Identifier	dep		2492551	0					
ANR	2492557	Identifier	eNode		2492551	1					
ANR	2492558	ReturnStatement	return true ;	279:1:6942:6953	2492551	1	True				
ANR	2492559	Identifier	true		2492551	0					
ANR	2492560	ReturnType	bool		2492551	1					
ANR	2492561	Identifier	AttrNode :: AddDep		2492551	2					
ANR	2492562	ParameterList	ExtAttrNode * eNode		2492551	3					
ANR	2492563	Parameter	ExtAttrNode * eNode	276:8:6904:6921	2492551	0	True				
ANR	2492564	ParameterType	ExtAttrNode *		2492551	0					
ANR	2492565	Identifier	eNode		2492551	1					
ANR	2492566	CFGEntryNode	ENTRY		2492551		True				
ANR	2492567	CFGExitNode	EXIT		2492551		True				
ANR	2492568	Symbol	eNode		2492551						
ANR	2492569	Symbol	true		2492551						
ANR	2492570	Symbol	dep		2492551						
ANR	2492571	Function	AttrNode :: GetDep	282:0:6958:7007							
ANR	2492572	FunctionDef	AttrNode :: GetDep ()		2492571	0					
ANR	2492573	CompoundStatement		284:0:6992:7007	2492571	0					
ANR	2492574	ReturnStatement	return dep ;	285:1:6995:7005	2492571	0	True				
ANR	2492575	Identifier	dep		2492571	0					
ANR	2492576	ReturnType	ExtAttrNode *		2492571	1					
ANR	2492577	Identifier	AttrNode :: GetDep		2492571	2					
ANR	2492578	ParameterList			2492571	3					
ANR	2492579	CFGEntryNode	ENTRY		2492571		True				
ANR	2492580	CFGExitNode	EXIT		2492571		True				
ANR	2492581	Symbol	dep		2492571						
ANR	2492582	Function	AttrNode :: IsLiteral	288:0:7010:7061							
ANR	2492583	FunctionDef	AttrNode :: IsLiteral ()		2492582	0					
ANR	2492584	CompoundStatement		290:0:7039:7061	2492582	0					
ANR	2492585	ReturnStatement	return literalVal ;	291:1:7042:7059	2492582	0	True				
ANR	2492586	Identifier	literalVal		2492582	0					
ANR	2492587	ReturnType	bool		2492582	1					
ANR	2492588	Identifier	AttrNode :: IsLiteral		2492582	2					
ANR	2492589	ParameterList			2492582	3					
ANR	2492590	CFGEntryNode	ENTRY		2492582		True				
ANR	2492591	CFGExitNode	EXIT		2492582		True				
ANR	2492592	Symbol	literalVal		2492582						
ANR	2492593	Function	AttrNode :: ToString	294:0:7064:7368							
ANR	2492594	FunctionDef	AttrNode :: ToString (std :: string & buffer)		2492593	0					
ANR	2492595	CompoundStatement		296:0:7112:7368	2492593	0					
ANR	2492596	IdentifierDeclStatement	classad :: PrettyPrint pp ;	297:1:7115:7138	2492593	0	True				
ANR	2492597	IdentifierDecl	pp		2492593	0					
ANR	2492598	IdentifierDeclType	classad :: PrettyPrint		2492593	0					
ANR	2492599	Identifier	pp		2492593	1					
ANR	2492600	ExpressionStatement	"buffer += ""["""	298:1:7141:7154	2492593	1	True				
ANR	2492601	AssignmentExpression	"buffer += ""["""		2492593	0		+=			
ANR	2492602	Identifier	buffer		2492593	0					
ANR	2492603	PrimaryExpression	"""["""		2492593	1					
ANR	2492604	IfStatement	if ( literalVal )		2492593	2					
ANR	2492605	Condition	literalVal	299:5:7161:7170	2492593	0	True				
ANR	2492606	Identifier	literalVal		2492593	0					
ANR	2492607	CompoundStatement		4:18:61:61	2492593	1					
ANR	2492608	ExpressionStatement	"buffer += ""val:"""	300:2:7178:7194	2492593	0	True				
ANR	2492609	AssignmentExpression	"buffer += ""val:"""		2492593	0		+=			
ANR	2492610	Identifier	buffer		2492593	0					
ANR	2492611	PrimaryExpression	"""val:"""		2492593	1					
ANR	2492612	ExpressionStatement	"pp . Unparse ( buffer , val )"	301:2:7198:7223	2492593	1	True				
ANR	2492613	CallExpression	"pp . Unparse ( buffer , val )"		2492593	0					
ANR	2492614	Callee	pp . Unparse		2492593	0					
ANR	2492615	MemberAccess	pp . Unparse		2492593	0					
ANR	2492616	Identifier	pp		2492593	0					
ANR	2492617	Identifier	Unparse		2492593	1					
ANR	2492618	ArgumentList	buffer		2492593	1					
ANR	2492619	Argument	buffer		2492593	0					
ANR	2492620	Identifier	buffer		2492593	0					
ANR	2492621	Argument	val		2492593	1					
ANR	2492622	Identifier	val		2492593	0					
ANR	2492623	IfStatement	if ( literalVal && dep )		2492593	3					
ANR	2492624	Condition	literalVal && dep	303:5:7233:7249	2492593	0	True				
ANR	2492625	AndExpression	literalVal && dep		2492593	0		&&			
ANR	2492626	Identifier	literalVal		2492593	0					
ANR	2492627	Identifier	dep		2492593	1					
ANR	2492628	CompoundStatement		8:25:140:140	2492593	1					
ANR	2492629	ExpressionStatement	"buffer += "","""	304:2:7257:7270	2492593	0	True				
ANR	2492630	AssignmentExpression	"buffer += "","""		2492593	0		+=			
ANR	2492631	Identifier	buffer		2492593	0					
ANR	2492632	PrimaryExpression	""","""		2492593	1					
ANR	2492633	IfStatement	if ( dep )		2492593	4					
ANR	2492634	Condition	dep	306:5:7280:7282	2492593	0	True				
ANR	2492635	Identifier	dep		2492593	0					
ANR	2492636	CompoundStatement		11:11:173:173	2492593	1					
ANR	2492637	ExpressionStatement	"buffer += ""dep:"""	307:2:7290:7306	2492593	0	True				
ANR	2492638	AssignmentExpression	"buffer += ""dep:"""		2492593	0		+=			
ANR	2492639	Identifier	buffer		2492593	0					
ANR	2492640	PrimaryExpression	"""dep:"""		2492593	1					
ANR	2492641	ExpressionStatement	dep -> ToString ( buffer )	308:2:7310:7333	2492593	1	True				
ANR	2492642	CallExpression	dep -> ToString ( buffer )		2492593	0					
ANR	2492643	Callee	dep -> ToString		2492593	0					
ANR	2492644	PtrMemberAccess	dep -> ToString		2492593	0					
ANR	2492645	Identifier	dep		2492593	0					
ANR	2492646	Identifier	ToString		2492593	1					
ANR	2492647	ArgumentList	buffer		2492593	1					
ANR	2492648	Argument	buffer		2492593	0					
ANR	2492649	Identifier	buffer		2492593	0					
ANR	2492650	ExpressionStatement	"buffer += ""]"""	310:1:7339:7352	2492593	5	True				
ANR	2492651	AssignmentExpression	"buffer += ""]"""		2492593	0		+=			
ANR	2492652	Identifier	buffer		2492593	0					
ANR	2492653	PrimaryExpression	"""]"""		2492593	1					
ANR	2492654	ReturnStatement	return true ;	311:1:7355:7366	2492593	6	True				
ANR	2492655	Identifier	true		2492593	0					
ANR	2492656	ReturnType	bool		2492593	1					
ANR	2492657	Identifier	AttrNode :: ToString		2492593	2					
ANR	2492658	ParameterList	std :: string & buffer		2492593	3					
ANR	2492659	Parameter	std :: string & buffer	295:10:7090:7108	2492593	0	True				
ANR	2492660	ParameterType	std :: string &		2492593	0					
ANR	2492661	Identifier	buffer		2492593	1					
ANR	2492662	CFGEntryNode	ENTRY		2492593		True				
ANR	2492663	CFGExitNode	EXIT		2492593		True				
ANR	2492664	Symbol	pp		2492593						
ANR	2492665	Symbol	val		2492593						
ANR	2492666	Symbol	true		2492593						
ANR	2492667	Symbol	buffer		2492593						
ANR	2492668	Symbol	literalVal		2492593						
ANR	2492669	Symbol	dep		2492593						
ANR	2492670	Function	PortNode :: PortNode	315:0:7391:7462							
ANR	2492671	FunctionDef	PortNode :: PortNode ()		2492670	0					
ANR	2492672	CompoundStatement		317:0:7414:7462	2492670	0					
ANR	2492673	ExpressionStatement	parentAd = NULL	318:1:7417:7432	2492670	0	True				
ANR	2492674	AssignmentExpression	parentAd = NULL		2492670	0		=			
ANR	2492675	Identifier	parentAd		2492670	0					
ANR	2492676	Identifier	NULL		2492670	1					
ANR	2492677	ExpressionStatement	adNum = - 1	319:1:7435:7445	2492670	1	True				
ANR	2492678	AssignmentExpression	adNum = - 1		2492670	0		=			
ANR	2492679	Identifier	adNum		2492670	0					
ANR	2492680	UnaryOperationExpression	- 1		2492670	1					
ANR	2492681	UnaryOperator	-		2492670	0					
ANR	2492682	PrimaryExpression	1		2492670	1					
ANR	2492683	ExpressionStatement	portNum = - 1	320:1:7448:7460	2492670	2	True				
ANR	2492684	AssignmentExpression	portNum = - 1		2492670	0		=			
ANR	2492685	Identifier	portNum		2492670	0					
ANR	2492686	UnaryOperationExpression	- 1		2492670	1					
ANR	2492687	UnaryOperator	-		2492670	0					
ANR	2492688	PrimaryExpression	1		2492670	1					
ANR	2492689	Identifier	PortNode :: PortNode		2492670	1					
ANR	2492690	ParameterList			2492670	2					
ANR	2492691	CFGEntryNode	ENTRY		2492670		True				
ANR	2492692	CFGExitNode	EXIT		2492670		True				
ANR	2492693	Symbol	NULL		2492670						
ANR	2492694	Symbol	portNum		2492670						
ANR	2492695	Symbol	parentAd		2492670						
ANR	2492696	Symbol	adNum		2492670						
ANR	2492697	Function	PortNode :: PortNode	323:0:7465:7605							
ANR	2492698	FunctionDef	"PortNode :: PortNode (classad :: ClassAd * _parentAd , int _adNum , int _portNum)"		2492697	0					
ANR	2492699	CompoundStatement		325:0:7542:7605	2492697	0					
ANR	2492700	ExpressionStatement	parentAd = _parentAd	326:1:7545:7565	2492697	0	True				
ANR	2492701	AssignmentExpression	parentAd = _parentAd		2492697	0		=			
ANR	2492702	Identifier	parentAd		2492697	0					
ANR	2492703	Identifier	_parentAd		2492697	1					
ANR	2492704	ExpressionStatement	adNum = _adNum	327:1:7568:7582	2492697	1	True				
ANR	2492705	AssignmentExpression	adNum = _adNum		2492697	0		=			
ANR	2492706	Identifier	adNum		2492697	0					
ANR	2492707	Identifier	_adNum		2492697	1					
ANR	2492708	ExpressionStatement	portNum = _portNum	328:1:7585:7603	2492697	2	True				
ANR	2492709	AssignmentExpression	portNum = _portNum		2492697	0		=			
ANR	2492710	Identifier	portNum		2492697	0					
ANR	2492711	Identifier	_portNum		2492697	1					
ANR	2492712	Identifier	PortNode :: PortNode		2492697	1					
ANR	2492713	ParameterList	"classad :: ClassAd * _parentAd , int _adNum , int _portNum"		2492697	2					
ANR	2492714	Parameter	classad :: ClassAd * _parentAd	324:10:7486:7512	2492697	0	True				
ANR	2492715	ParameterType	classad :: ClassAd *		2492697	0					
ANR	2492716	Identifier	_parentAd		2492697	1					
ANR	2492717	Parameter	int _adNum	324:39:7515:7524	2492697	1	True				
ANR	2492718	ParameterType	int		2492697	0					
ANR	2492719	Identifier	_adNum		2492697	1					
ANR	2492720	Parameter	int _portNum	324:51:7527:7538	2492697	2	True				
ANR	2492721	ParameterType	int		2492697	0					
ANR	2492722	Identifier	_portNum		2492697	1					
ANR	2492723	CFGEntryNode	ENTRY		2492697		True				
ANR	2492724	CFGExitNode	EXIT		2492697		True				
ANR	2492725	Symbol	_adNum		2492697						
ANR	2492726	Symbol	portNum		2492697						
ANR	2492727	Symbol	parentAd		2492697						
ANR	2492728	Symbol	adNum		2492697						
ANR	2492729	Symbol	_portNum		2492697						
ANR	2492730	Symbol	_parentAd		2492697						
ANR	2492731	Function	PortNode :: ~PortNode	331:0:7608:7796							
ANR	2492732	FunctionDef	PortNode :: ~PortNode ()		2492731	0					
ANR	2492733	CompoundStatement		333:0:7632:7796	2492731	0					
ANR	2492734	IfStatement	if ( parentAd )		2492731	0					
ANR	2492735	Condition	parentAd	334:5:7639:7646	2492731	0	True				
ANR	2492736	Identifier	parentAd		2492731	0					
ANR	2492737	Statement	delete	334:16:7650:7655	2492731	1	True				
ANR	2492738	ExpressionStatement	parentAd	334:23:7657:7665	2492731	1	True				
ANR	2492739	Identifier	parentAd		2492731	0					
ANR	2492740	IdentifierDeclStatement	std :: vector < std :: vector < ExtAttrNode * > * > :: iterator r ;	335:1:7668:7719	2492731	2	True				
ANR	2492741	IdentifierDecl	r		2492731	0					
ANR	2492742	IdentifierDeclType	std :: vector < std :: vector < ExtAttrNode * > * > :: iterator		2492731	0					
ANR	2492743	Identifier	r		2492731	1					
ANR	2492744	ForStatement	for ( r = reqDeps . begin ( ) ; r != reqDeps . end ( ) ; r ++ )		2492731	3					
ANR	2492745	ForInit	r = reqDeps . begin ( ) ;	336:6:7727:7747	2492731	0	True				
ANR	2492746	AssignmentExpression	r = reqDeps . begin ( )		2492731	0		=			
ANR	2492747	Identifier	r		2492731	0					
ANR	2492748	CallExpression	reqDeps . begin ( )		2492731	1					
ANR	2492749	Callee	reqDeps . begin		2492731	0					
ANR	2492750	MemberAccess	reqDeps . begin		2492731	0					
ANR	2492751	Identifier	reqDeps		2492731	0					
ANR	2492752	Identifier	begin		2492731	1					
ANR	2492753	ArgumentList			2492731	1					
ANR	2492754	Condition	r != reqDeps . end ( )	336:28:7749:7767	2492731	1	True				
ANR	2492755	EqualityExpression	r != reqDeps . end ( )		2492731	0		!=			
ANR	2492756	Identifier	r		2492731	0					
ANR	2492757	CallExpression	reqDeps . end ( )		2492731	1					
ANR	2492758	Callee	reqDeps . end		2492731	0					
ANR	2492759	MemberAccess	reqDeps . end		2492731	0					
ANR	2492760	Identifier	reqDeps		2492731	0					
ANR	2492761	Identifier	end		2492731	1					
ANR	2492762	ArgumentList			2492731	1					
ANR	2492763	PostIncDecOperationExpression	r ++	336:49:7770:7772	2492731	2	True				
ANR	2492764	Identifier	r		2492731	0					
ANR	2492765	IncDec	++		2492731	1					
ANR	2492766	CompoundStatement		4:55:143:143	2492731	3					
ANR	2492767	Statement	delete	337:2:7780:7785	2492731	0	True				
ANR	2492768	ExpressionStatement	* r	337:9:7787:7791	2492731	1	True				
ANR	2492769	UnaryOperationExpression	* r		2492731	0					
ANR	2492770	UnaryOperator	*		2492731	0					
ANR	2492771	Identifier	r		2492731	1					
ANR	2492772	Identifier	PortNode :: ~PortNode		2492731	1					
ANR	2492773	ParameterList			2492731	2					
ANR	2492774	CFGEntryNode	ENTRY		2492731		True				
ANR	2492775	CFGExitNode	EXIT		2492731		True				
ANR	2492776	Symbol	reqDeps . begin		2492731						
ANR	2492777	Symbol	r		2492731						
ANR	2492778	Symbol	parentAd		2492731						
ANR	2492779	Symbol	reqDeps		2492731						
ANR	2492780	Symbol	reqDeps . end		2492731						
ANR	2492781	Function	PortNode :: GetAdNum	341:0:7799:7843							
ANR	2492782	FunctionDef	PortNode :: GetAdNum ()		2492781	0					
ANR	2492783	CompoundStatement		343:0:7826:7843	2492781	0					
ANR	2492784	ReturnStatement	return adNum ;	344:1:7829:7841	2492781	0	True				
ANR	2492785	Identifier	adNum		2492781	0					
ANR	2492786	ReturnType	int		2492781	1					
ANR	2492787	Identifier	PortNode :: GetAdNum		2492781	2					
ANR	2492788	ParameterList			2492781	3					
ANR	2492789	CFGEntryNode	ENTRY		2492781		True				
ANR	2492790	CFGExitNode	EXIT		2492781		True				
ANR	2492791	Symbol	adNum		2492781						
ANR	2492792	Function	PortNode :: GetPortNum	347:0:7846:7894							
ANR	2492793	FunctionDef	PortNode :: GetPortNum ()		2492792	0					
ANR	2492794	CompoundStatement		349:0:7875:7894	2492792	0					
ANR	2492795	ReturnStatement	return portNum ;	350:1:7878:7892	2492792	0	True				
ANR	2492796	Identifier	portNum		2492792	0					
ANR	2492797	ReturnType	int		2492792	1					
ANR	2492798	Identifier	PortNode :: GetPortNum		2492792	2					
ANR	2492799	ParameterList			2492792	3					
ANR	2492800	CFGEntryNode	ENTRY		2492792		True				
ANR	2492801	CFGExitNode	EXIT		2492792		True				
ANR	2492802	Symbol	portNum		2492792						
ANR	2492803	Function	PortNode :: GetReqDeps	353:0:7897:8170							
ANR	2492804	FunctionDef	"PortNode :: GetReqDeps (unsigned int clauseNum , std :: set < ExtAttrNode * > & deps)"		2492803	0					
ANR	2492805	CompoundStatement		355:0:7980:8170	2492803	0					
ANR	2492806	IfStatement	if ( clauseNum < reqDeps . size ( ) )		2492803	0					
ANR	2492807	Condition	clauseNum < reqDeps . size ( )	356:5:7987:8013	2492803	0	True				
ANR	2492808	RelationalExpression	clauseNum < reqDeps . size ( )		2492803	0		<			
ANR	2492809	Identifier	clauseNum		2492803	0					
ANR	2492810	CallExpression	reqDeps . size ( )		2492803	1					
ANR	2492811	Callee	reqDeps . size		2492803	0					
ANR	2492812	MemberAccess	reqDeps . size		2492803	0					
ANR	2492813	Identifier	reqDeps		2492803	0					
ANR	2492814	Identifier	size		2492803	1					
ANR	2492815	ArgumentList			2492803	1					
ANR	2492816	CompoundStatement		2:35:36:36	2492803	1					
ANR	2492817	ForStatement	for ( unsigned int i = 0 ; i < reqDeps [ clauseNum ] -> size ( ) ; i ++ )		2492803	0					
ANR	2492818	ForInit	unsigned int i = 0 ;	357:7:8026:8044	2492803	0	True				
ANR	2492819	IdentifierDeclStatement	unsigned int i = 0 ;		2492803	0					
ANR	2492820	IdentifierDecl	i = 0		2492803	0					
ANR	2492821	IdentifierDeclType	unsigned int		2492803	0					
ANR	2492822	Identifier	i		2492803	1					
ANR	2492823	AssignmentExpression	i = 0		2492803	2		=			
ANR	2492824	Identifier	i		2492803	0					
ANR	2492825	PrimaryExpression	0		2492803	1					
ANR	2492826	Condition	i < reqDeps [ clauseNum ] -> size ( )	357:27:8046:8076	2492803	1	True				
ANR	2492827	RelationalExpression	i < reqDeps [ clauseNum ] -> size ( )		2492803	0		<			
ANR	2492828	Identifier	i		2492803	0					
ANR	2492829	CallExpression	reqDeps [ clauseNum ] -> size ( )		2492803	1					
ANR	2492830	Callee	reqDeps [ clauseNum ] -> size		2492803	0					
ANR	2492831	PtrMemberAccess	reqDeps [ clauseNum ] -> size		2492803	0					
ANR	2492832	ArrayIndexing	reqDeps [ clauseNum ]		2492803	0					
ANR	2492833	Identifier	reqDeps		2492803	0					
ANR	2492834	Identifier	clauseNum		2492803	1					
ANR	2492835	Identifier	size		2492803	1					
ANR	2492836	ArgumentList			2492803	1					
ANR	2492837	PostIncDecOperationExpression	i ++	357:60:8079:8081	2492803	2	True				
ANR	2492838	Identifier	i		2492803	0					
ANR	2492839	IncDec	++		2492803	1					
ANR	2492840	CompoundStatement		3:66:104:104	2492803	3					
ANR	2492841	ExpressionStatement	deps . insert ( ( * ( reqDeps [ clauseNum ] ) ) [ i ] )	358:3:8090:8131	2492803	0	True				
ANR	2492842	CallExpression	deps . insert ( ( * ( reqDeps [ clauseNum ] ) ) [ i ] )		2492803	0					
ANR	2492843	Callee	deps . insert		2492803	0					
ANR	2492844	MemberAccess	deps . insert		2492803	0					
ANR	2492845	Identifier	deps		2492803	0					
ANR	2492846	Identifier	insert		2492803	1					
ANR	2492847	ArgumentList	( * ( reqDeps [ clauseNum ] ) ) [ i ]		2492803	1					
ANR	2492848	Argument	( * ( reqDeps [ clauseNum ] ) ) [ i ]		2492803	0					
ANR	2492849	ArrayIndexing	( * ( reqDeps [ clauseNum ] ) ) [ i ]		2492803	0					
ANR	2492850	UnaryOperationExpression	* ( reqDeps [ clauseNum ] )		2492803	0					
ANR	2492851	UnaryOperator	*		2492803	0					
ANR	2492852	ArrayIndexing	reqDeps [ clauseNum ]		2492803	1					
ANR	2492853	Identifier	reqDeps		2492803	0					
ANR	2492854	Identifier	clauseNum		2492803	1					
ANR	2492855	Identifier	i		2492803	1					
ANR	2492856	ReturnStatement	return true ;	360:2:8139:8150	2492803	1	True				
ANR	2492857	Identifier	true		2492803	0					
ANR	2492858	ReturnStatement	return false ;	362:1:8156:8168	2492803	1	True				
ANR	2492859	Identifier	false		2492803	0					
ANR	2492860	ReturnType	bool		2492803	1					
ANR	2492861	Identifier	PortNode :: GetReqDeps		2492803	2					
ANR	2492862	ParameterList	"unsigned int clauseNum , std :: set < ExtAttrNode * > & deps"		2492803	3					
ANR	2492863	Parameter	unsigned int clauseNum	354:12:7925:7946	2492803	0	True				
ANR	2492864	ParameterType	unsigned int		2492803	0					
ANR	2492865	Identifier	clauseNum		2492803	1					
ANR	2492866	Parameter	std :: set < ExtAttrNode * > & deps	354:36:7949:7976	2492803	1	True				
ANR	2492867	ParameterType	std :: set < ExtAttrNode * > &		2492803	0					
ANR	2492868	Identifier	deps		2492803	1					
ANR	2492869	CFGEntryNode	ENTRY		2492803		True				
ANR	2492870	CFGExitNode	EXIT		2492803		True				
ANR	2492871	Symbol	* ( reqDeps [ clauseNum ] )		2492803						
ANR	2492872	Symbol	false		2492803						
ANR	2492873	Symbol	i		2492803						
ANR	2492874	Symbol	* * * clauseNum		2492803						
ANR	2492875	Symbol	deps		2492803						
ANR	2492876	Symbol	clauseNum		2492803						
ANR	2492877	Symbol	* * clauseNum		2492803						
ANR	2492878	Symbol	* clauseNum		2492803						
ANR	2492879	Symbol	* i		2492803						
ANR	2492880	Symbol	* reqDeps		2492803						
ANR	2492881	Symbol	* * ( reqDeps [ clauseNum ] )		2492803						
ANR	2492882	Symbol	reqDeps [ clauseNum ] -> size		2492803						
ANR	2492883	Symbol	true		2492803						
ANR	2492884	Symbol	reqDeps		2492803						
ANR	2492885	Symbol	* * reqDeps		2492803						
ANR	2492886	Symbol	reqDeps . size		2492803						
ANR	2492887	Symbol	* * * reqDeps		2492803						
ANR	2492888	Function	PortNode :: GetAttrDeps	365:0:8173:8420							
ANR	2492889	FunctionDef	PortNode :: GetAttrDeps (std :: set < ExtAttrNode * > & deps)		2492888	0					
ANR	2492890	CompoundStatement		367:0:8233:8420	2492888	0					
ANR	2492891	IdentifierDeclStatement	AttrNodeMap :: const_iterator a ;	368:1:8236:8265	2492888	0	True				
ANR	2492892	IdentifierDecl	a		2492888	0					
ANR	2492893	IdentifierDeclType	AttrNodeMap :: const_iterator		2492888	0					
ANR	2492894	Identifier	a		2492888	1					
ANR	2492895	ForStatement	for ( a = attrNodes . begin ( ) ; a != attrNodes . end ( ) ; a ++ )		2492888	1					
ANR	2492896	ForInit	a = attrNodes . begin ( ) ;	369:6:8273:8295	2492888	0	True				
ANR	2492897	AssignmentExpression	a = attrNodes . begin ( )		2492888	0		=			
ANR	2492898	Identifier	a		2492888	0					
ANR	2492899	CallExpression	attrNodes . begin ( )		2492888	1					
ANR	2492900	Callee	attrNodes . begin		2492888	0					
ANR	2492901	MemberAccess	attrNodes . begin		2492888	0					
ANR	2492902	Identifier	attrNodes		2492888	0					
ANR	2492903	Identifier	begin		2492888	1					
ANR	2492904	ArgumentList			2492888	1					
ANR	2492905	Condition	a != attrNodes . end ( )	369:30:8297:8317	2492888	1	True				
ANR	2492906	EqualityExpression	a != attrNodes . end ( )		2492888	0		!=			
ANR	2492907	Identifier	a		2492888	0					
ANR	2492908	CallExpression	attrNodes . end ( )		2492888	1					
ANR	2492909	Callee	attrNodes . end		2492888	0					
ANR	2492910	MemberAccess	attrNodes . end		2492888	0					
ANR	2492911	Identifier	attrNodes		2492888	0					
ANR	2492912	Identifier	end		2492888	1					
ANR	2492913	ArgumentList			2492888	1					
ANR	2492914	PostIncDecOperationExpression	a ++	369:53:8320:8322	2492888	2	True				
ANR	2492915	Identifier	a		2492888	0					
ANR	2492916	IncDec	++		2492888	1					
ANR	2492917	CompoundStatement		3:59:92:92	2492888	3					
ANR	2492918	IfStatement	if ( a -> second -> GetDep ( ) )		2492888	0					
ANR	2492919	Condition	a -> second -> GetDep ( )	370:6:8334:8353	2492888	0	True				
ANR	2492920	CallExpression	a -> second -> GetDep ( )		2492888	0					
ANR	2492921	Callee	a -> second -> GetDep		2492888	0					
ANR	2492922	PtrMemberAccess	a -> second -> GetDep		2492888	0					
ANR	2492923	PtrMemberAccess	a -> second		2492888	0					
ANR	2492924	Identifier	a		2492888	0					
ANR	2492925	Identifier	second		2492888	1					
ANR	2492926	Identifier	GetDep		2492888	1					
ANR	2492927	ArgumentList			2492888	1					
ANR	2492928	CompoundStatement		4:29:123:123	2492888	1					
ANR	2492929	ExpressionStatement	deps . insert ( a -> second -> GetDep ( ) )	371:3:8362:8397	2492888	0	True				
ANR	2492930	CallExpression	deps . insert ( a -> second -> GetDep ( ) )		2492888	0					
ANR	2492931	Callee	deps . insert		2492888	0					
ANR	2492932	MemberAccess	deps . insert		2492888	0					
ANR	2492933	Identifier	deps		2492888	0					
ANR	2492934	Identifier	insert		2492888	1					
ANR	2492935	ArgumentList	a -> second -> GetDep ( )		2492888	1					
ANR	2492936	Argument	a -> second -> GetDep ( )		2492888	0					
ANR	2492937	CallExpression	a -> second -> GetDep ( )		2492888	0					
ANR	2492938	Callee	a -> second -> GetDep		2492888	0					
ANR	2492939	PtrMemberAccess	a -> second -> GetDep		2492888	0					
ANR	2492940	PtrMemberAccess	a -> second		2492888	0					
ANR	2492941	Identifier	a		2492888	0					
ANR	2492942	Identifier	second		2492888	1					
ANR	2492943	Identifier	GetDep		2492888	1					
ANR	2492944	ArgumentList			2492888	1					
ANR	2492945	ReturnStatement	return true ;	374:1:8407:8418	2492888	2	True				
ANR	2492946	Identifier	true		2492888	0					
ANR	2492947	ReturnType	bool		2492888	1					
ANR	2492948	Identifier	PortNode :: GetAttrDeps		2492888	2					
ANR	2492949	ParameterList	std :: set < ExtAttrNode * > & deps		2492888	3					
ANR	2492950	Parameter	std :: set < ExtAttrNode * > & deps	366:13:8202:8229	2492888	0	True				
ANR	2492951	ParameterType	std :: set < ExtAttrNode * > &		2492888	0					
ANR	2492952	Identifier	deps		2492888	1					
ANR	2492953	CFGEntryNode	ENTRY		2492888		True				
ANR	2492954	CFGExitNode	EXIT		2492888		True				
ANR	2492955	Symbol	attrNodes		2492888						
ANR	2492956	Symbol	a		2492888						
ANR	2492957	Symbol	a -> second -> GetDep		2492888						
ANR	2492958	Symbol	* a -> second		2492888						
ANR	2492959	Symbol	true		2492888						
ANR	2492960	Symbol	deps		2492888						
ANR	2492961	Symbol	* * a		2492888						
ANR	2492962	Symbol	* a		2492888						
ANR	2492963	Symbol	attrNodes . end		2492888						
ANR	2492964	Symbol	a -> second		2492888						
ANR	2492965	Symbol	attrNodes . begin		2492888						
ANR	2492966	Function	PortNode :: GetParentAd	377:0:8423:8487							
ANR	2492967	FunctionDef	PortNode :: GetParentAd ()		2492966	0					
ANR	2492968	CompoundStatement		379:0:8467:8487	2492966	0					
ANR	2492969	ReturnStatement	return parentAd ;	380:1:8470:8485	2492966	0	True				
ANR	2492970	Identifier	parentAd		2492966	0					
ANR	2492971	ReturnType	classad :: ClassAd *		2492966	1					
ANR	2492972	Identifier	PortNode :: GetParentAd		2492966	2					
ANR	2492973	ParameterList			2492966	3					
ANR	2492974	CFGEntryNode	ENTRY		2492966		True				
ANR	2492975	CFGExitNode	EXIT		2492966		True				
ANR	2492976	Symbol	parentAd		2492966						
ANR	2492977	Function	PortNode :: GetExtAttrNode	383:0:8490:8702							
ANR	2492978	FunctionDef	PortNode :: GetExtAttrNode (std :: string attr)		2492977	0					
ANR	2492979	CompoundStatement		385:0:8549:8702	2492977	0					
ANR	2492980	IdentifierDeclStatement	ExtAttrNodeMap :: const_iterator itr ;	386:1:8552:8586	2492977	0	True				
ANR	2492981	IdentifierDecl	itr		2492977	0					
ANR	2492982	IdentifierDeclType	ExtAttrNodeMap :: const_iterator		2492977	0					
ANR	2492983	Identifier	itr		2492977	1					
ANR	2492984	ExpressionStatement	itr = extAttrNodes . find ( attr )	387:1:8589:8620	2492977	1	True				
ANR	2492985	AssignmentExpression	itr = extAttrNodes . find ( attr )		2492977	0		=			
ANR	2492986	Identifier	itr		2492977	0					
ANR	2492987	CallExpression	extAttrNodes . find ( attr )		2492977	1					
ANR	2492988	Callee	extAttrNodes . find		2492977	0					
ANR	2492989	MemberAccess	extAttrNodes . find		2492977	0					
ANR	2492990	Identifier	extAttrNodes		2492977	0					
ANR	2492991	Identifier	find		2492977	1					
ANR	2492992	ArgumentList	attr		2492977	1					
ANR	2492993	Argument	attr		2492977	0					
ANR	2492994	Identifier	attr		2492977	0					
ANR	2492995	IfStatement	if ( itr != extAttrNodes . end ( ) )		2492977	2					
ANR	2492996	Condition	itr != extAttrNodes . end ( )	388:5:8627:8652	2492977	0	True				
ANR	2492997	EqualityExpression	itr != extAttrNodes . end ( )		2492977	0		!=			
ANR	2492998	Identifier	itr		2492977	0					
ANR	2492999	CallExpression	extAttrNodes . end ( )		2492977	1					
ANR	2493000	Callee	extAttrNodes . end		2492977	0					
ANR	2493001	MemberAccess	extAttrNodes . end		2492977	0					
ANR	2493002	Identifier	extAttrNodes		2492977	0					
ANR	2493003	Identifier	end		2492977	1					
ANR	2493004	ArgumentList			2492977	1					
ANR	2493005	CompoundStatement		4:34:106:106	2492977	1					
ANR	2493006	ReturnStatement	return itr -> second ;	389:2:8660:8678	2492977	0	True				
ANR	2493007	PtrMemberAccess	itr -> second		2492977	0					
ANR	2493008	Identifier	itr		2492977	0					
ANR	2493009	Identifier	second		2492977	1					
ANR	2493010	ElseStatement	else		2492977	0					
ANR	2493011	ReturnStatement	return NULL ;	391:6:8689:8700	2492977	0	True				
ANR	2493012	Identifier	NULL		2492977	0					
ANR	2493013	ReturnType	ExtAttrNode *		2492977	1					
ANR	2493014	Identifier	PortNode :: GetExtAttrNode		2492977	2					
ANR	2493015	ParameterList	std :: string attr		2492977	3					
ANR	2493016	Parameter	std :: string attr	384:16:8530:8545	2492977	0	True				
ANR	2493017	ParameterType	std :: string		2492977	0					
ANR	2493018	Identifier	attr		2492977	1					
ANR	2493019	CFGEntryNode	ENTRY		2492977		True				
ANR	2493020	CFGExitNode	EXIT		2492977		True				
ANR	2493021	Symbol	NULL		2492977						
ANR	2493022	Symbol	itr		2492977						
ANR	2493023	Symbol	extAttrNodes . find		2492977						
ANR	2493024	Symbol	extAttrNodes . end		2492977						
ANR	2493025	Symbol	extAttrNodes		2492977						
ANR	2493026	Symbol	attr		2492977						
ANR	2493027	Symbol	* itr		2492977						
ANR	2493028	Symbol	itr -> second		2492977						
ANR	2493029	Function	PortNode :: GetAttrNode	394:0:8705:8902							
ANR	2493030	FunctionDef	PortNode :: GetAttrNode (std :: string attr)		2493029	0					
ANR	2493031	CompoundStatement		396:0:8758:8902	2493029	0					
ANR	2493032	IdentifierDeclStatement	AttrNodeMap :: const_iterator itr ;	397:1:8761:8792	2493029	0	True				
ANR	2493033	IdentifierDecl	itr		2493029	0					
ANR	2493034	IdentifierDeclType	AttrNodeMap :: const_iterator		2493029	0					
ANR	2493035	Identifier	itr		2493029	1					
ANR	2493036	ExpressionStatement	itr = attrNodes . find ( attr )	398:1:8795:8823	2493029	1	True				
ANR	2493037	AssignmentExpression	itr = attrNodes . find ( attr )		2493029	0		=			
ANR	2493038	Identifier	itr		2493029	0					
ANR	2493039	CallExpression	attrNodes . find ( attr )		2493029	1					
ANR	2493040	Callee	attrNodes . find		2493029	0					
ANR	2493041	MemberAccess	attrNodes . find		2493029	0					
ANR	2493042	Identifier	attrNodes		2493029	0					
ANR	2493043	Identifier	find		2493029	1					
ANR	2493044	ArgumentList	attr		2493029	1					
ANR	2493045	Argument	attr		2493029	0					
ANR	2493046	Identifier	attr		2493029	0					
ANR	2493047	IfStatement	if ( itr != attrNodes . end ( ) )		2493029	2					
ANR	2493048	Condition	itr != attrNodes . end ( )	399:5:8830:8852	2493029	0	True				
ANR	2493049	EqualityExpression	itr != attrNodes . end ( )		2493029	0		!=			
ANR	2493050	Identifier	itr		2493029	0					
ANR	2493051	CallExpression	attrNodes . end ( )		2493029	1					
ANR	2493052	Callee	attrNodes . end		2493029	0					
ANR	2493053	MemberAccess	attrNodes . end		2493029	0					
ANR	2493054	Identifier	attrNodes		2493029	0					
ANR	2493055	Identifier	end		2493029	1					
ANR	2493056	ArgumentList			2493029	1					
ANR	2493057	CompoundStatement		4:31:97:97	2493029	1					
ANR	2493058	ReturnStatement	return itr -> second ;	400:2:8860:8878	2493029	0	True				
ANR	2493059	PtrMemberAccess	itr -> second		2493029	0					
ANR	2493060	Identifier	itr		2493029	0					
ANR	2493061	Identifier	second		2493029	1					
ANR	2493062	ElseStatement	else		2493029	0					
ANR	2493063	ReturnStatement	return NULL ;	402:6:8889:8900	2493029	0	True				
ANR	2493064	Identifier	NULL		2493029	0					
ANR	2493065	ReturnType	AttrNode *		2493029	1					
ANR	2493066	Identifier	PortNode :: GetAttrNode		2493029	2					
ANR	2493067	ParameterList	std :: string attr		2493029	3					
ANR	2493068	Parameter	std :: string attr	395:13:8739:8754	2493029	0	True				
ANR	2493069	ParameterType	std :: string		2493029	0					
ANR	2493070	Identifier	attr		2493029	1					
ANR	2493071	CFGEntryNode	ENTRY		2493029		True				
ANR	2493072	CFGExitNode	EXIT		2493029		True				
ANR	2493073	Symbol	attrNodes		2493029						
ANR	2493074	Symbol	NULL		2493029						
ANR	2493075	Symbol	itr		2493029						
ANR	2493076	Symbol	attrNodes . find		2493029						
ANR	2493077	Symbol	attr		2493029						
ANR	2493078	Symbol	attrNodes . end		2493029						
ANR	2493079	Symbol	* itr		2493029						
ANR	2493080	Symbol	itr -> second		2493029						
ANR	2493081	Function	PortNode :: GetMatchEdge	405:0:8905:9039							
ANR	2493082	FunctionDef	PortNode :: GetMatchEdge (unsigned int i)		2493081	0					
ANR	2493083	CompoundStatement		407:0:8958:9039	2493081	0					
ANR	2493084	IfStatement	if ( i >= matchEdges . size ( ) )		2493081	0					
ANR	2493085	Condition	i >= matchEdges . size ( )	408:5:8965:8987	2493081	0	True				
ANR	2493086	RelationalExpression	i >= matchEdges . size ( )		2493081	0		>=			
ANR	2493087	Identifier	i		2493081	0					
ANR	2493088	CallExpression	matchEdges . size ( )		2493081	1					
ANR	2493089	Callee	matchEdges . size		2493081	0					
ANR	2493090	MemberAccess	matchEdges . size		2493081	0					
ANR	2493091	Identifier	matchEdges		2493081	0					
ANR	2493092	Identifier	size		2493081	1					
ANR	2493093	ArgumentList			2493081	1					
ANR	2493094	CompoundStatement		2:31:32:32	2493081	1					
ANR	2493095	ReturnStatement	return NULL ;	409:2:8995:9006	2493081	0	True				
ANR	2493096	Identifier	NULL		2493081	0					
ANR	2493097	ElseStatement	else		2493081	0					
ANR	2493098	ReturnStatement	return matchEdges [ i ] ;	411:6:9017:9037	2493081	0	True				
ANR	2493099	ArrayIndexing	matchEdges [ i ]		2493081	0					
ANR	2493100	Identifier	matchEdges		2493081	0					
ANR	2493101	Identifier	i		2493081	1					
ANR	2493102	ReturnType	MatchEdge *		2493081	1					
ANR	2493103	Identifier	PortNode :: GetMatchEdge		2493081	2					
ANR	2493104	ParameterList	unsigned int i		2493081	3					
ANR	2493105	Parameter	unsigned int i	406:14:8941:8954	2493081	0	True				
ANR	2493106	ParameterType	unsigned int		2493081	0					
ANR	2493107	Identifier	i		2493081	1					
ANR	2493108	CFGEntryNode	ENTRY		2493081		True				
ANR	2493109	CFGExitNode	EXIT		2493081		True				
ANR	2493110	Symbol	NULL		2493081						
ANR	2493111	Symbol	* i		2493081						
ANR	2493112	Symbol	* matchEdges		2493081						
ANR	2493113	Symbol	matchEdges		2493081						
ANR	2493114	Symbol	i		2493081						
ANR	2493115	Symbol	matchEdges . size		2493081						
ANR	2493116	Function	PortNode :: GetNumMatchEdges	414:0:9042:9116							
ANR	2493117	FunctionDef	PortNode :: GetNumMatchEdges ()		2493116	0					
ANR	2493118	CompoundStatement		416:0:9086:9116	2493116	0					
ANR	2493119	ReturnStatement	return matchEdges . size ( ) ;	417:1:9089:9114	2493116	0	True				
ANR	2493120	CallExpression	matchEdges . size ( )		2493116	0					
ANR	2493121	Callee	matchEdges . size		2493116	0					
ANR	2493122	MemberAccess	matchEdges . size		2493116	0					
ANR	2493123	Identifier	matchEdges		2493116	0					
ANR	2493124	Identifier	size		2493116	1					
ANR	2493125	ArgumentList			2493116	1					
ANR	2493126	ReturnType	unsigned int		2493116	1					
ANR	2493127	Identifier	PortNode :: GetNumMatchEdges		2493116	2					
ANR	2493128	ParameterList			2493116	3					
ANR	2493129	CFGEntryNode	ENTRY		2493116		True				
ANR	2493130	CFGExitNode	EXIT		2493116		True				
ANR	2493131	Symbol	matchEdges		2493116						
ANR	2493132	Symbol	matchEdges . size		2493116						
ANR	2493133	Function	PortNode :: GetNumClauses	420:0:9119:9187							
ANR	2493134	FunctionDef	PortNode :: GetNumClauses ()		2493133	0					
ANR	2493135	CompoundStatement		422:0:9160:9187	2493133	0					
ANR	2493136	ReturnStatement	return reqDeps . size ( ) ;	423:1:9163:9185	2493133	0	True				
ANR	2493137	CallExpression	reqDeps . size ( )		2493133	0					
ANR	2493138	Callee	reqDeps . size		2493133	0					
ANR	2493139	MemberAccess	reqDeps . size		2493133	0					
ANR	2493140	Identifier	reqDeps		2493133	0					
ANR	2493141	Identifier	size		2493133	1					
ANR	2493142	ArgumentList			2493133	1					
ANR	2493143	ReturnType	unsigned int		2493133	1					
ANR	2493144	Identifier	PortNode :: GetNumClauses		2493133	2					
ANR	2493145	ParameterList			2493133	3					
ANR	2493146	CFGEntryNode	ENTRY		2493133		True				
ANR	2493147	CFGExitNode	EXIT		2493133		True				
ANR	2493148	Symbol	reqDeps		2493133						
ANR	2493149	Symbol	reqDeps . size		2493133						
ANR	2493150	Function	PortNode :: AddAttrNode	426:0:9190:9290							
ANR	2493151	FunctionDef	PortNode :: AddAttrNode (std :: string attr)		2493150	0					
ANR	2493152	CompoundStatement		428:0:9238:9290	2493150	0					
ANR	2493153	ExpressionStatement	attrNodes [ attr ] = new AttrNode ( )	429:1:9241:9274	2493150	0	True				
ANR	2493154	AssignmentExpression	attrNodes [ attr ] = new AttrNode ( )		2493150	0		=			
ANR	2493155	ArrayIndexing	attrNodes [ attr ]		2493150	0					
ANR	2493156	Identifier	attrNodes		2493150	0					
ANR	2493157	Identifier	attr		2493150	1					
ANR	2493158	UnaryExpression	new AttrNode ( )		2493150	1					
ANR	2493159	ReturnStatement	return true ;	430:1:9277:9288	2493150	1	True				
ANR	2493160	Identifier	true		2493150	0					
ANR	2493161	ReturnType	bool		2493150	1					
ANR	2493162	Identifier	PortNode :: AddAttrNode		2493150	2					
ANR	2493163	ParameterList	std :: string attr		2493150	3					
ANR	2493164	Parameter	std :: string attr	427:13:9219:9234	2493150	0	True				
ANR	2493165	ParameterType	std :: string		2493150	0					
ANR	2493166	Identifier	attr		2493150	1					
ANR	2493167	CFGEntryNode	ENTRY		2493150		True				
ANR	2493168	CFGExitNode	EXIT		2493150		True				
ANR	2493169	Symbol	attrNodes		2493150						
ANR	2493170	Symbol	true		2493150						
ANR	2493171	Symbol	* attr		2493150						
ANR	2493172	Symbol	attr		2493150						
ANR	2493173	Symbol	* attrNodes		2493150						
ANR	2493174	Function	PortNode :: AddAttrNode	433:0:9293:9418							
ANR	2493175	FunctionDef	"PortNode :: AddAttrNode (std :: string attr , classad :: Value & val)"		2493174	0					
ANR	2493176	CompoundStatement		435:0:9362:9418	2493174	0					
ANR	2493177	ExpressionStatement	attrNodes [ attr ] = new AttrNode ( val )	436:1:9365:9402	2493174	0	True				
ANR	2493178	AssignmentExpression	attrNodes [ attr ] = new AttrNode ( val )		2493174	0		=			
ANR	2493179	ArrayIndexing	attrNodes [ attr ]		2493174	0					
ANR	2493180	Identifier	attrNodes		2493174	0					
ANR	2493181	Identifier	attr		2493174	1					
ANR	2493182	Identifier	val		2493174	1					
ANR	2493183	ReturnStatement	return true ;	437:1:9405:9416	2493174	1	True				
ANR	2493184	Identifier	true		2493174	0					
ANR	2493185	ReturnType	bool		2493174	1					
ANR	2493186	Identifier	PortNode :: AddAttrNode		2493174	2					
ANR	2493187	ParameterList	"std :: string attr , classad :: Value & val"		2493174	3					
ANR	2493188	Parameter	std :: string attr	434:13:9322:9337	2493174	0	True				
ANR	2493189	ParameterType	std :: string		2493174	0					
ANR	2493190	Identifier	attr		2493174	1					
ANR	2493191	Parameter	classad :: Value & val	434:31:9340:9358	2493174	1	True				
ANR	2493192	ParameterType	classad :: Value &		2493174	0					
ANR	2493193	Identifier	val		2493174	1					
ANR	2493194	CFGEntryNode	ENTRY		2493174		True				
ANR	2493195	CFGExitNode	EXIT		2493174		True				
ANR	2493196	Symbol	val		2493174						
ANR	2493197	Symbol	attrNodes		2493174						
ANR	2493198	Symbol	true		2493174						
ANR	2493199	Symbol	* attr		2493174						
ANR	2493200	Symbol	attr		2493174						
ANR	2493201	Symbol	* attrNodes		2493174						
ANR	2493202	Function	PortNode :: AddExtAttrNode	440:0:9421:9541							
ANR	2493203	FunctionDef	PortNode :: AddExtAttrNode (std :: string attr)		2493202	0					
ANR	2493204	CompoundStatement		442:0:9472:9541	2493202	0					
ANR	2493205	ExpressionStatement	"extAttrNodes [ attr ] = new ExtAttrNode ( this , attr )"	443:1:9475:9525	2493202	0	True				
ANR	2493206	AssignmentExpression	"extAttrNodes [ attr ] = new ExtAttrNode ( this , attr )"		2493202	0		=			
ANR	2493207	ArrayIndexing	extAttrNodes [ attr ]		2493202	0					
ANR	2493208	Identifier	extAttrNodes		2493202	0					
ANR	2493209	Identifier	attr		2493202	1					
ANR	2493210	Expression	"this , attr"		2493202	1					
ANR	2493211	Identifier	this		2493202	0					
ANR	2493212	Identifier	attr		2493202	1					
ANR	2493213	ReturnStatement	return true ;	444:1:9528:9539	2493202	1	True				
ANR	2493214	Identifier	true		2493202	0					
ANR	2493215	ReturnType	bool		2493202	1					
ANR	2493216	Identifier	PortNode :: AddExtAttrNode		2493202	2					
ANR	2493217	ParameterList	std :: string attr		2493202	3					
ANR	2493218	Parameter	std :: string attr	441:16:9453:9468	2493202	0	True				
ANR	2493219	ParameterType	std :: string		2493202	0					
ANR	2493220	Identifier	attr		2493202	1					
ANR	2493221	CFGEntryNode	ENTRY		2493202		True				
ANR	2493222	CFGExitNode	EXIT		2493202		True				
ANR	2493223	Symbol	this		2493202						
ANR	2493224	Symbol	true		2493202						
ANR	2493225	Symbol	extAttrNodes		2493202						
ANR	2493226	Symbol	* attr		2493202						
ANR	2493227	Symbol	attr		2493202						
ANR	2493228	Symbol	* extAttrNodes		2493202						
ANR	2493229	Function	PortNode :: AddClause	447:0:9544:9713							
ANR	2493230	FunctionDef	PortNode :: AddClause ()		2493229	0					
ANR	2493231	CompoundStatement		449:0:9581:9713	2493229	0					
ANR	2493232	Statement	std	450:1:9584:9586	2493229	0	True				
ANR	2493233	Statement	::	450:4:9587:9588	2493229	1	True				
ANR	2493234	Statement	vector	450:6:9589:9594	2493229	2	True				
ANR	2493235	Statement	<	450:12:9595:9595	2493229	3	True				
ANR	2493236	Statement	ExtAttrNode	450:13:9596:9606	2493229	4	True				
ANR	2493237	Statement	*	450:24:9607:9607	2493229	5	True				
ANR	2493238	Statement	>	450:25:9608:9608	2493229	6	True				
ANR	2493239	Statement	*	450:27:9610:9610	2493229	7	True				
ANR	2493240	Statement	clause	450:28:9611:9616	2493229	8	True				
ANR	2493241	Statement	=	450:35:9618:9618	2493229	9	True				
ANR	2493242	Statement	new	450:37:9620:9622	2493229	10	True				
ANR	2493243	Statement	std	450:41:9624:9626	2493229	11	True				
ANR	2493244	Statement	::	450:44:9627:9628	2493229	12	True				
ANR	2493245	Statement	vector	450:46:9629:9634	2493229	13	True				
ANR	2493246	Statement	<	450:52:9635:9635	2493229	14	True				
ANR	2493247	Statement	ExtAttrNode	450:53:9636:9646	2493229	15	True				
ANR	2493248	Statement	*	450:64:9647:9647	2493229	16	True				
ANR	2493249	Statement	>	450:65:9648:9648	2493229	17	True				
ANR	2493250	ExpressionStatement		450:66:9649:9649	2493229	18	True				
ANR	2493251	ExpressionStatement	reqDeps . push_back ( clause )	451:1:9652:9679	2493229	19	True				
ANR	2493252	CallExpression	reqDeps . push_back ( clause )		2493229	0					
ANR	2493253	Callee	reqDeps . push_back		2493229	0					
ANR	2493254	MemberAccess	reqDeps . push_back		2493229	0					
ANR	2493255	Identifier	reqDeps		2493229	0					
ANR	2493256	Identifier	push_back		2493229	1					
ANR	2493257	ArgumentList	clause		2493229	1					
ANR	2493258	Argument	clause		2493229	0					
ANR	2493259	Identifier	clause		2493229	0					
ANR	2493260	ReturnStatement	return ( reqDeps . size ( ) - 1 ) ;	452:1:9682:9711	2493229	20	True				
ANR	2493261	AdditiveExpression	reqDeps . size ( ) - 1		2493229	0		-			
ANR	2493262	CallExpression	reqDeps . size ( )		2493229	0					
ANR	2493263	Callee	reqDeps . size		2493229	0					
ANR	2493264	MemberAccess	reqDeps . size		2493229	0					
ANR	2493265	Identifier	reqDeps		2493229	0					
ANR	2493266	Identifier	size		2493229	1					
ANR	2493267	ArgumentList			2493229	1					
ANR	2493268	PrimaryExpression	1		2493229	1					
ANR	2493269	ReturnType	unsigned int		2493229	1					
ANR	2493270	Identifier	PortNode :: AddClause		2493229	2					
ANR	2493271	ParameterList			2493229	3					
ANR	2493272	CFGEntryNode	ENTRY		2493229		True				
ANR	2493273	CFGExitNode	EXIT		2493229		True				
ANR	2493274	Symbol	clause		2493229						
ANR	2493275	Symbol	reqDeps		2493229						
ANR	2493276	Symbol	reqDeps . size		2493229						
ANR	2493277	Function	PortNode :: AddReqDep	455:0:9716:9911							
ANR	2493278	FunctionDef	"PortNode :: AddReqDep (unsigned int clauseNum , ExtAttrNode * eNode)"		2493277	0					
ANR	2493279	CompoundStatement		457:0:9788:9911	2493277	0					
ANR	2493280	IfStatement	if ( eNode || clauseNum < reqDeps . size ( ) )		2493277	0					
ANR	2493281	Condition	eNode || clauseNum < reqDeps . size ( )	458:5:9795:9830	2493277	0	True				
ANR	2493282	OrExpression	eNode || clauseNum < reqDeps . size ( )		2493277	0		||			
ANR	2493283	Identifier	eNode		2493277	0					
ANR	2493284	RelationalExpression	clauseNum < reqDeps . size ( )		2493277	1		<			
ANR	2493285	Identifier	clauseNum		2493277	0					
ANR	2493286	CallExpression	reqDeps . size ( )		2493277	1					
ANR	2493287	Callee	reqDeps . size		2493277	0					
ANR	2493288	MemberAccess	reqDeps . size		2493277	0					
ANR	2493289	Identifier	reqDeps		2493277	0					
ANR	2493290	Identifier	size		2493277	1					
ANR	2493291	ArgumentList			2493277	1					
ANR	2493292	CompoundStatement		2:44:45:45	2493277	1					
ANR	2493293	ExpressionStatement	reqDeps [ clauseNum ] -> push_back ( eNode )	459:2:9838:9876	2493277	0	True				
ANR	2493294	CallExpression	reqDeps [ clauseNum ] -> push_back ( eNode )		2493277	0					
ANR	2493295	Callee	reqDeps [ clauseNum ] -> push_back		2493277	0					
ANR	2493296	PtrMemberAccess	reqDeps [ clauseNum ] -> push_back		2493277	0					
ANR	2493297	ArrayIndexing	reqDeps [ clauseNum ]		2493277	0					
ANR	2493298	Identifier	reqDeps		2493277	0					
ANR	2493299	Identifier	clauseNum		2493277	1					
ANR	2493300	Identifier	push_back		2493277	1					
ANR	2493301	ArgumentList	eNode		2493277	1					
ANR	2493302	Argument	eNode		2493277	0					
ANR	2493303	Identifier	eNode		2493277	0					
ANR	2493304	ReturnStatement	return true ;	460:2:9880:9891	2493277	1	True				
ANR	2493305	Identifier	true		2493277	0					
ANR	2493306	ReturnStatement	return false ;	462:1:9897:9909	2493277	1	True				
ANR	2493307	Identifier	false		2493277	0					
ANR	2493308	ReturnType	bool		2493277	1					
ANR	2493309	Identifier	PortNode :: AddReqDep		2493277	2					
ANR	2493310	ParameterList	"unsigned int clauseNum , ExtAttrNode * eNode"		2493277	3					
ANR	2493311	Parameter	unsigned int clauseNum	456:11:9743:9764	2493277	0	True				
ANR	2493312	ParameterType	unsigned int		2493277	0					
ANR	2493313	Identifier	clauseNum		2493277	1					
ANR	2493314	Parameter	ExtAttrNode * eNode	456:35:9767:9784	2493277	1	True				
ANR	2493315	ParameterType	ExtAttrNode *		2493277	0					
ANR	2493316	Identifier	eNode		2493277	1					
ANR	2493317	CFGEntryNode	ENTRY		2493277		True				
ANR	2493318	CFGExitNode	EXIT		2493277		True				
ANR	2493319	Symbol	* clauseNum		2493277						
ANR	2493320	Symbol	eNode		2493277						
ANR	2493321	Symbol	* reqDeps		2493277						
ANR	2493322	Symbol	true		2493277						
ANR	2493323	Symbol	false		2493277						
ANR	2493324	Symbol	reqDeps		2493277						
ANR	2493325	Symbol	clauseNum		2493277						
ANR	2493326	Symbol	reqDeps . size		2493277						
ANR	2493327	Function	PortNode :: AddAttrDep	465:0:9914:10059							
ANR	2493328	FunctionDef	"PortNode :: AddAttrDep (std :: string attr , ExtAttrNode * eNode)"		2493327	0					
ANR	2493329	CompoundStatement		467:0:9981:10059	2493327	0					
ANR	2493330	IfStatement	if ( eNode )		2493327	0					
ANR	2493331	Condition	eNode	468:5:9988:9992	2493327	0	True				
ANR	2493332	Identifier	eNode		2493327	0					
ANR	2493333	CompoundStatement		2:13:14:14	2493327	1					
ANR	2493334	ReturnStatement	return attrNodes [ attr ] -> AddDep ( eNode ) ;	469:2:10000:10039	2493327	0	True				
ANR	2493335	CallExpression	attrNodes [ attr ] -> AddDep ( eNode )		2493327	0					
ANR	2493336	Callee	attrNodes [ attr ] -> AddDep		2493327	0					
ANR	2493337	PtrMemberAccess	attrNodes [ attr ] -> AddDep		2493327	0					
ANR	2493338	ArrayIndexing	attrNodes [ attr ]		2493327	0					
ANR	2493339	Identifier	attrNodes		2493327	0					
ANR	2493340	Identifier	attr		2493327	1					
ANR	2493341	Identifier	AddDep		2493327	1					
ANR	2493342	ArgumentList	eNode		2493327	1					
ANR	2493343	Argument	eNode		2493327	0					
ANR	2493344	Identifier	eNode		2493327	0					
ANR	2493345	ReturnStatement	return false ;	471:1:10045:10057	2493327	1	True				
ANR	2493346	Identifier	false		2493327	0					
ANR	2493347	ReturnType	bool		2493327	1					
ANR	2493348	Identifier	PortNode :: AddAttrDep		2493327	2					
ANR	2493349	ParameterList	"std :: string attr , ExtAttrNode * eNode"		2493327	3					
ANR	2493350	Parameter	std :: string attr	466:12:9942:9957	2493327	0	True				
ANR	2493351	ParameterType	std :: string		2493327	0					
ANR	2493352	Identifier	attr		2493327	1					
ANR	2493353	Parameter	ExtAttrNode * eNode	466:30:9960:9977	2493327	1	True				
ANR	2493354	ParameterType	ExtAttrNode *		2493327	0					
ANR	2493355	Identifier	eNode		2493327	1					
ANR	2493356	CFGEntryNode	ENTRY		2493327		True				
ANR	2493357	CFGExitNode	EXIT		2493327		True				
ANR	2493358	Symbol	attrNodes		2493327						
ANR	2493359	Symbol	eNode		2493327						
ANR	2493360	Symbol	attrNodes [ attr ] -> AddDep		2493327						
ANR	2493361	Symbol	* * attr		2493327						
ANR	2493362	Symbol	false		2493327						
ANR	2493363	Symbol	* attr		2493327						
ANR	2493364	Symbol	attr		2493327						
ANR	2493365	Symbol	* * attrNodes		2493327						
ANR	2493366	Symbol	* attrNodes		2493327						
ANR	2493367	Function	PortNode :: AddMatchEdge	474:0:10062:10763							
ANR	2493368	FunctionDef	"PortNode :: AddMatchEdge (int edgeNum , PortNode * target , std :: vector < MatchPath * > & annotations)"		2493367	0					
ANR	2493369	CompoundStatement		477:0:10168:10763	2493367	0					
ANR	2493370	IfStatement	if ( target )		2493367	0					
ANR	2493371	Condition	target	478:5:10175:10180	2493367	0	True				
ANR	2493372	Identifier	target		2493367	0					
ANR	2493373	CompoundStatement		12:2:287:356	2493367	1					
ANR	2493374	IdentifierDeclStatement	std :: vector < MatchEdge * > :: iterator m1 ;	479:2:10188:10224	2493367	0	True				
ANR	2493375	IdentifierDecl	m1		2493367	0					
ANR	2493376	IdentifierDeclType	std :: vector < MatchEdge * > :: iterator		2493367	0					
ANR	2493377	Identifier	m1		2493367	1					
ANR	2493378	ForStatement	for ( m1 = matchEdges . begin ( ) ; m1 != matchEdges . end ( ) ; m1 ++ )		2493367	1					
ANR	2493379	ForInit	m1 = matchEdges . begin ( ) ;	480:7:10233:10257	2493367	0	True				
ANR	2493380	AssignmentExpression	m1 = matchEdges . begin ( )		2493367	0		=			
ANR	2493381	Identifier	m1		2493367	0					
ANR	2493382	CallExpression	matchEdges . begin ( )		2493367	1					
ANR	2493383	Callee	matchEdges . begin		2493367	0					
ANR	2493384	MemberAccess	matchEdges . begin		2493367	0					
ANR	2493385	Identifier	matchEdges		2493367	0					
ANR	2493386	Identifier	begin		2493367	1					
ANR	2493387	ArgumentList			2493367	1					
ANR	2493388	Condition	m1 != matchEdges . end ( )	480:33:10259:10281	2493367	1	True				
ANR	2493389	EqualityExpression	m1 != matchEdges . end ( )		2493367	0		!=			
ANR	2493390	Identifier	m1		2493367	0					
ANR	2493391	CallExpression	matchEdges . end ( )		2493367	1					
ANR	2493392	Callee	matchEdges . end		2493367	0					
ANR	2493393	MemberAccess	matchEdges . end		2493367	0					
ANR	2493394	Identifier	matchEdges		2493367	0					
ANR	2493395	Identifier	end		2493367	1					
ANR	2493396	ArgumentList			2493367	1					
ANR	2493397	PostIncDecOperationExpression	m1 ++	480:58:10284:10287	2493367	2	True				
ANR	2493398	Identifier	m1		2493367	0					
ANR	2493399	IncDec	++		2493367	1					
ANR	2493400	CompoundStatement		4:65:122:122	2493367	3					
ANR	2493401	IfStatement	if ( ( * m1 ) -> GetTarget ( ) == target )		2493367	0					
ANR	2493402	Condition	( * m1 ) -> GetTarget ( ) == target	481:7:10300:10328	2493367	0	True				
ANR	2493403	EqualityExpression	( * m1 ) -> GetTarget ( ) == target		2493367	0		==			
ANR	2493404	CallExpression	( * m1 ) -> GetTarget ( )		2493367	0					
ANR	2493405	Callee	( * m1 ) -> GetTarget		2493367	0					
ANR	2493406	PtrMemberAccess	( * m1 ) -> GetTarget		2493367	0					
ANR	2493407	UnaryOperationExpression	* m1		2493367	0					
ANR	2493408	UnaryOperator	*		2493367	0					
ANR	2493409	Identifier	m1		2493367	1					
ANR	2493410	Identifier	GetTarget		2493367	1					
ANR	2493411	ArgumentList			2493367	1					
ANR	2493412	Identifier	target		2493367	1					
ANR	2493413	CompoundStatement		5:39:163:163	2493367	1					
ANR	2493414	IfStatement	if ( ( * m1 ) -> HasNoAnnotations ( ) || ( * m1 ) -> SameAnnotations ( annotations ) )		2493367	0					
ANR	2493415	Condition	( * m1 ) -> HasNoAnnotations ( ) || ( * m1 ) -> SameAnnotations ( annotations )	482:8:10342:10414	2493367	0	True				
ANR	2493416	OrExpression	( * m1 ) -> HasNoAnnotations ( ) || ( * m1 ) -> SameAnnotations ( annotations )		2493367	0		||			
ANR	2493417	CallExpression	( * m1 ) -> HasNoAnnotations ( )		2493367	0					
ANR	2493418	Callee	( * m1 ) -> HasNoAnnotations		2493367	0					
ANR	2493419	PtrMemberAccess	( * m1 ) -> HasNoAnnotations		2493367	0					
ANR	2493420	UnaryOperationExpression	* m1		2493367	0					
ANR	2493421	UnaryOperator	*		2493367	0					
ANR	2493422	Identifier	m1		2493367	1					
ANR	2493423	Identifier	HasNoAnnotations		2493367	1					
ANR	2493424	ArgumentList			2493367	1					
ANR	2493425	CallExpression	( * m1 ) -> SameAnnotations ( annotations )		2493367	1					
ANR	2493426	Callee	( * m1 ) -> SameAnnotations		2493367	0					
ANR	2493427	PtrMemberAccess	( * m1 ) -> SameAnnotations		2493367	0					
ANR	2493428	UnaryOperationExpression	* m1		2493367	0					
ANR	2493429	UnaryOperator	*		2493367	0					
ANR	2493430	Identifier	m1		2493367	1					
ANR	2493431	Identifier	SameAnnotations		2493367	1					
ANR	2493432	ArgumentList	annotations		2493367	1					
ANR	2493433	Argument	annotations		2493367	0					
ANR	2493434	Identifier	annotations		2493367	0					
ANR	2493435	CompoundStatement		7:45:249:249	2493367	1					
ANR	2493436	ReturnStatement	return false ;	484:5:10425:10437	2493367	0	True				
ANR	2493437	Identifier	false		2493367	0					
ANR	2493438	IdentifierDeclStatement	"MatchEdge * edge = new MatchEdge ( edgeNum , this , target , annotations ) ;"	488:2:10456:10525	2493367	2	True				
ANR	2493439	IdentifierDecl	"* edge = new MatchEdge ( edgeNum , this , target , annotations )"		2493367	0					
ANR	2493440	IdentifierDeclType	MatchEdge *		2493367	0					
ANR	2493441	Identifier	edge		2493367	1					
ANR	2493442	AssignmentExpression	"* edge = new MatchEdge ( edgeNum , this , target , annotations )"		2493367	2		=			
ANR	2493443	Identifier	edge		2493367	0					
ANR	2493444	Expression	"edgeNum , this , target , annotations"		2493367	1					
ANR	2493445	Identifier	edgeNum		2493367	0					
ANR	2493446	Expression	"this , target , annotations"		2493367	1					
ANR	2493447	Identifier	this		2493367	0					
ANR	2493448	Expression	"target , annotations"		2493367	1					
ANR	2493449	Identifier	target		2493367	0					
ANR	2493450	Identifier	annotations		2493367	1					
ANR	2493451	ExpressionStatement	matchEdges . push_back ( edge )	489:2:10529:10557	2493367	3	True				
ANR	2493452	CallExpression	matchEdges . push_back ( edge )		2493367	0					
ANR	2493453	Callee	matchEdges . push_back		2493367	0					
ANR	2493454	MemberAccess	matchEdges . push_back		2493367	0					
ANR	2493455	Identifier	matchEdges		2493367	0					
ANR	2493456	Identifier	push_back		2493367	1					
ANR	2493457	ArgumentList	edge		2493367	1					
ANR	2493458	Argument	edge		2493367	0					
ANR	2493459	Identifier	edge		2493367	0					
ANR	2493460	ReturnStatement	return true ;	493:2:10732:10743	2493367	4	True				
ANR	2493461	Identifier	true		2493367	0					
ANR	2493462	ReturnStatement	return false ;	495:1:10749:10761	2493367	1	True				
ANR	2493463	Identifier	false		2493367	0					
ANR	2493464	ReturnType	bool		2493367	1					
ANR	2493465	Identifier	PortNode :: AddMatchEdge		2493367	2					
ANR	2493466	ParameterList	"int edgeNum , PortNode * target , std :: vector < MatchPath * > & annotations"		2493367	3					
ANR	2493467	Parameter	int edgeNum	475:14:10092:10102	2493367	0	True				
ANR	2493468	ParameterType	int		2493367	0					
ANR	2493469	Identifier	edgeNum		2493367	1					
ANR	2493470	Parameter	PortNode * target	475:27:10105:10120	2493367	1	True				
ANR	2493471	ParameterType	PortNode *		2493367	0					
ANR	2493472	Identifier	target		2493367	1					
ANR	2493473	Parameter	std :: vector < MatchPath * > & annotations	476:5:10129:10164	2493367	2	True				
ANR	2493474	ParameterType	std :: vector < MatchPath * > &		2493367	0					
ANR	2493475	Identifier	annotations		2493367	1					
ANR	2493476	CFGEntryNode	ENTRY		2493367		True				
ANR	2493477	CFGExitNode	EXIT		2493367		True				
ANR	2493478	Symbol	matchEdges . begin		2493367						
ANR	2493479	Symbol	m1		2493367						
ANR	2493480	Symbol	matchEdges		2493367						
ANR	2493481	Symbol	false		2493367						
ANR	2493482	Symbol	this		2493367						
ANR	2493483	Symbol	annotations		2493367						
ANR	2493484	Symbol	* m1		2493367						
ANR	2493485	Symbol	( * m1 ) -> GetTarget		2493367						
ANR	2493486	Symbol	target		2493367						
ANR	2493487	Symbol	matchEdges . end		2493367						
ANR	2493488	Symbol	* * m1		2493367						
ANR	2493489	Symbol	edge		2493367						
ANR	2493490	Symbol	true		2493367						
ANR	2493491	Symbol	( * m1 ) -> SameAnnotations		2493367						
ANR	2493492	Symbol	edgeNum		2493367						
ANR	2493493	Symbol	( * m1 ) -> HasNoAnnotations		2493367						
ANR	2493494	Function	PortNode :: ToString	499:0:10767:12182							
ANR	2493495	FunctionDef	PortNode :: ToString (std :: string & buffer)		2493494	0					
ANR	2493496	CompoundStatement		500:32:10815:12182	2493494	0					
ANR	2493497	IdentifierDeclStatement	char tempBuf [ 512 ] ;	501:1:10818:10835	2493494	0	True				
ANR	2493498	IdentifierDecl	tempBuf [ 512 ]		2493494	0					
ANR	2493499	IdentifierDeclType	char [ 512 ]		2493494	0					
ANR	2493500	Identifier	tempBuf		2493494	1					
ANR	2493501	PrimaryExpression	512		2493494	2					
ANR	2493502	ExpressionStatement	"sprintf ( tempBuf , ""%d"" , adNum )"	502:1:10838:10869	2493494	1	True				
ANR	2493503	CallExpression	"sprintf ( tempBuf , ""%d"" , adNum )"		2493494	0					
ANR	2493504	Callee	sprintf		2493494	0					
ANR	2493505	Identifier	sprintf		2493494	0					
ANR	2493506	ArgumentList	tempBuf		2493494	1					
ANR	2493507	Argument	tempBuf		2493494	0					
ANR	2493508	Identifier	tempBuf		2493494	0					
ANR	2493509	Argument	"""%d"""		2493494	1					
ANR	2493510	PrimaryExpression	"""%d"""		2493494	0					
ANR	2493511	Argument	adNum		2493494	2					
ANR	2493512	Identifier	adNum		2493494	0					
ANR	2493513	ExpressionStatement	"buffer += ""[adNum:"""	503:1:10872:10891	2493494	2	True				
ANR	2493514	AssignmentExpression	"buffer += ""[adNum:"""		2493494	0		+=			
ANR	2493515	Identifier	buffer		2493494	0					
ANR	2493516	PrimaryExpression	"""[adNum:"""		2493494	1					
ANR	2493517	ExpressionStatement	buffer += tempBuf	504:1:10894:10911	2493494	3	True				
ANR	2493518	AssignmentExpression	buffer += tempBuf		2493494	0		+=			
ANR	2493519	Identifier	buffer		2493494	0					
ANR	2493520	Identifier	tempBuf		2493494	1					
ANR	2493521	ExpressionStatement	"sprintf ( tempBuf , ""%d"" , portNum )"	505:1:10914:10947	2493494	4	True				
ANR	2493522	CallExpression	"sprintf ( tempBuf , ""%d"" , portNum )"		2493494	0					
ANR	2493523	Callee	sprintf		2493494	0					
ANR	2493524	Identifier	sprintf		2493494	0					
ANR	2493525	ArgumentList	tempBuf		2493494	1					
ANR	2493526	Argument	tempBuf		2493494	0					
ANR	2493527	Identifier	tempBuf		2493494	0					
ANR	2493528	Argument	"""%d"""		2493494	1					
ANR	2493529	PrimaryExpression	"""%d"""		2493494	0					
ANR	2493530	Argument	portNum		2493494	2					
ANR	2493531	Identifier	portNum		2493494	0					
ANR	2493532	ExpressionStatement	"buffer += "",portNum:"""	506:1:10950:10971	2493494	5	True				
ANR	2493533	AssignmentExpression	"buffer += "",portNum:"""		2493494	0		+=			
ANR	2493534	Identifier	buffer		2493494	0					
ANR	2493535	PrimaryExpression	""",portNum:"""		2493494	1					
ANR	2493536	ExpressionStatement	buffer += tempBuf	507:1:10974:10991	2493494	6	True				
ANR	2493537	AssignmentExpression	buffer += tempBuf		2493494	0		+=			
ANR	2493538	Identifier	buffer		2493494	0					
ANR	2493539	Identifier	tempBuf		2493494	1					
ANR	2493540	ExpressionStatement	"buffer += "",attrNodes:{"""	508:1:10994:11018	2493494	7	True				
ANR	2493541	AssignmentExpression	"buffer += "",attrNodes:{"""		2493494	0		+=			
ANR	2493542	Identifier	buffer		2493494	0					
ANR	2493543	PrimaryExpression	""",attrNodes:{"""		2493494	1					
ANR	2493544	IdentifierDeclStatement	AttrNodeMap :: const_iterator a ;	509:1:11021:11050	2493494	8	True				
ANR	2493545	IdentifierDecl	a		2493494	0					
ANR	2493546	IdentifierDeclType	AttrNodeMap :: const_iterator		2493494	0					
ANR	2493547	Identifier	a		2493494	1					
ANR	2493548	ForStatement	for ( a = attrNodes . begin ( ) ; a != attrNodes . end ( ) ; a ++ )		2493494	9					
ANR	2493549	ForInit	a = attrNodes . begin ( ) ;	510:6:11058:11080	2493494	0	True				
ANR	2493550	AssignmentExpression	a = attrNodes . begin ( )		2493494	0		=			
ANR	2493551	Identifier	a		2493494	0					
ANR	2493552	CallExpression	attrNodes . begin ( )		2493494	1					
ANR	2493553	Callee	attrNodes . begin		2493494	0					
ANR	2493554	MemberAccess	attrNodes . begin		2493494	0					
ANR	2493555	Identifier	attrNodes		2493494	0					
ANR	2493556	Identifier	begin		2493494	1					
ANR	2493557	ArgumentList			2493494	1					
ANR	2493558	Condition	a != attrNodes . end ( )	510:30:11082:11102	2493494	1	True				
ANR	2493559	EqualityExpression	a != attrNodes . end ( )		2493494	0		!=			
ANR	2493560	Identifier	a		2493494	0					
ANR	2493561	CallExpression	attrNodes . end ( )		2493494	1					
ANR	2493562	Callee	attrNodes . end		2493494	0					
ANR	2493563	MemberAccess	attrNodes . end		2493494	0					
ANR	2493564	Identifier	attrNodes		2493494	0					
ANR	2493565	Identifier	end		2493494	1					
ANR	2493566	ArgumentList			2493494	1					
ANR	2493567	PostIncDecOperationExpression	a ++	510:53:11105:11107	2493494	2	True				
ANR	2493568	Identifier	a		2493494	0					
ANR	2493569	IncDec	++		2493494	1					
ANR	2493570	CompoundStatement		11:59:295:295	2493494	3					
ANR	2493571	IfStatement	if ( a != attrNodes . begin ( ) )		2493494	0					
ANR	2493572	Condition	a != attrNodes . begin ( )	511:6:11119:11141	2493494	0	True				
ANR	2493573	EqualityExpression	a != attrNodes . begin ( )		2493494	0		!=			
ANR	2493574	Identifier	a		2493494	0					
ANR	2493575	CallExpression	attrNodes . begin ( )		2493494	1					
ANR	2493576	Callee	attrNodes . begin		2493494	0					
ANR	2493577	MemberAccess	attrNodes . begin		2493494	0					
ANR	2493578	Identifier	attrNodes		2493494	0					
ANR	2493579	Identifier	begin		2493494	1					
ANR	2493580	ArgumentList			2493494	1					
ANR	2493581	CompoundStatement		12:32:329:329	2493494	1					
ANR	2493582	ExpressionStatement	"buffer += "","""	512:3:11150:11163	2493494	0	True				
ANR	2493583	AssignmentExpression	"buffer += "","""		2493494	0		+=			
ANR	2493584	Identifier	buffer		2493494	0					
ANR	2493585	PrimaryExpression	""","""		2493494	1					
ANR	2493586	ExpressionStatement	buffer += a -> first	514:2:11171:11189	2493494	1	True				
ANR	2493587	AssignmentExpression	buffer += a -> first		2493494	0		+=			
ANR	2493588	Identifier	buffer		2493494	0					
ANR	2493589	PtrMemberAccess	a -> first		2493494	1					
ANR	2493590	Identifier	a		2493494	0					
ANR	2493591	Identifier	first		2493494	1					
ANR	2493592	ExpressionStatement	a -> second -> ToString ( buffer )	515:2:11193:11222	2493494	2	True				
ANR	2493593	CallExpression	a -> second -> ToString ( buffer )		2493494	0					
ANR	2493594	Callee	a -> second -> ToString		2493494	0					
ANR	2493595	PtrMemberAccess	a -> second -> ToString		2493494	0					
ANR	2493596	PtrMemberAccess	a -> second		2493494	0					
ANR	2493597	Identifier	a		2493494	0					
ANR	2493598	Identifier	second		2493494	1					
ANR	2493599	Identifier	ToString		2493494	1					
ANR	2493600	ArgumentList	buffer		2493494	1					
ANR	2493601	Argument	buffer		2493494	0					
ANR	2493602	Identifier	buffer		2493494	0					
ANR	2493603	ExpressionStatement	"buffer += ""},extAttrNodes:{"""	517:1:11229:11257	2493494	10	True				
ANR	2493604	AssignmentExpression	"buffer += ""},extAttrNodes:{"""		2493494	0		+=			
ANR	2493605	Identifier	buffer		2493494	0					
ANR	2493606	PrimaryExpression	"""},extAttrNodes:{"""		2493494	1					
ANR	2493607	IdentifierDeclStatement	ExtAttrNodeMap :: const_iterator e ;	518:1:11260:11292	2493494	11	True				
ANR	2493608	IdentifierDecl	e		2493494	0					
ANR	2493609	IdentifierDeclType	ExtAttrNodeMap :: const_iterator		2493494	0					
ANR	2493610	Identifier	e		2493494	1					
ANR	2493611	ForStatement	for ( e = extAttrNodes . begin ( ) ; e != extAttrNodes . end ( ) ; e ++ )		2493494	12					
ANR	2493612	ForInit	e = extAttrNodes . begin ( ) ;	519:6:11300:11325	2493494	0	True				
ANR	2493613	AssignmentExpression	e = extAttrNodes . begin ( )		2493494	0		=			
ANR	2493614	Identifier	e		2493494	0					
ANR	2493615	CallExpression	extAttrNodes . begin ( )		2493494	1					
ANR	2493616	Callee	extAttrNodes . begin		2493494	0					
ANR	2493617	MemberAccess	extAttrNodes . begin		2493494	0					
ANR	2493618	Identifier	extAttrNodes		2493494	0					
ANR	2493619	Identifier	begin		2493494	1					
ANR	2493620	ArgumentList			2493494	1					
ANR	2493621	Condition	e != extAttrNodes . end ( )	519:33:11327:11350	2493494	1	True				
ANR	2493622	EqualityExpression	e != extAttrNodes . end ( )		2493494	0		!=			
ANR	2493623	Identifier	e		2493494	0					
ANR	2493624	CallExpression	extAttrNodes . end ( )		2493494	1					
ANR	2493625	Callee	extAttrNodes . end		2493494	0					
ANR	2493626	MemberAccess	extAttrNodes . end		2493494	0					
ANR	2493627	Identifier	extAttrNodes		2493494	0					
ANR	2493628	Identifier	end		2493494	1					
ANR	2493629	ArgumentList			2493494	1					
ANR	2493630	PostIncDecOperationExpression	e ++	519:59:11353:11355	2493494	2	True				
ANR	2493631	Identifier	e		2493494	0					
ANR	2493632	IncDec	++		2493494	1					
ANR	2493633	CompoundStatement		20:65:543:543	2493494	3					
ANR	2493634	IfStatement	if ( e != extAttrNodes . begin ( ) )		2493494	0					
ANR	2493635	Condition	e != extAttrNodes . begin ( )	520:6:11367:11392	2493494	0	True				
ANR	2493636	EqualityExpression	e != extAttrNodes . begin ( )		2493494	0		!=			
ANR	2493637	Identifier	e		2493494	0					
ANR	2493638	CallExpression	extAttrNodes . begin ( )		2493494	1					
ANR	2493639	Callee	extAttrNodes . begin		2493494	0					
ANR	2493640	MemberAccess	extAttrNodes . begin		2493494	0					
ANR	2493641	Identifier	extAttrNodes		2493494	0					
ANR	2493642	Identifier	begin		2493494	1					
ANR	2493643	ArgumentList			2493494	1					
ANR	2493644	CompoundStatement		21:35:580:580	2493494	1					
ANR	2493645	ExpressionStatement	"buffer += "","""	521:3:11401:11414	2493494	0	True				
ANR	2493646	AssignmentExpression	"buffer += "","""		2493494	0		+=			
ANR	2493647	Identifier	buffer		2493494	0					
ANR	2493648	PrimaryExpression	""","""		2493494	1					
ANR	2493649	ExpressionStatement	buffer += e -> first	523:2:11422:11440	2493494	1	True				
ANR	2493650	AssignmentExpression	buffer += e -> first		2493494	0		+=			
ANR	2493651	Identifier	buffer		2493494	0					
ANR	2493652	PtrMemberAccess	e -> first		2493494	1					
ANR	2493653	Identifier	e		2493494	0					
ANR	2493654	Identifier	first		2493494	1					
ANR	2493655	ExpressionStatement	e -> second -> ToString ( buffer )	524:2:11444:11473	2493494	2	True				
ANR	2493656	CallExpression	e -> second -> ToString ( buffer )		2493494	0					
ANR	2493657	Callee	e -> second -> ToString		2493494	0					
ANR	2493658	PtrMemberAccess	e -> second -> ToString		2493494	0					
ANR	2493659	PtrMemberAccess	e -> second		2493494	0					
ANR	2493660	Identifier	e		2493494	0					
ANR	2493661	Identifier	second		2493494	1					
ANR	2493662	Identifier	ToString		2493494	1					
ANR	2493663	ArgumentList	buffer		2493494	1					
ANR	2493664	Argument	buffer		2493494	0					
ANR	2493665	Identifier	buffer		2493494	0					
ANR	2493666	ExpressionStatement	"buffer += ""},reqDeps:{"""	526:1:11479:11502	2493494	13	True				
ANR	2493667	AssignmentExpression	"buffer += ""},reqDeps:{"""		2493494	0		+=			
ANR	2493668	Identifier	buffer		2493494	0					
ANR	2493669	PrimaryExpression	"""},reqDeps:{"""		2493494	1					
ANR	2493670	IdentifierDeclStatement	std :: vector < std :: vector < ExtAttrNode * > * > :: iterator r ;	527:1:11505:11556	2493494	14	True				
ANR	2493671	IdentifierDecl	r		2493494	0					
ANR	2493672	IdentifierDeclType	std :: vector < std :: vector < ExtAttrNode * > * > :: iterator		2493494	0					
ANR	2493673	Identifier	r		2493494	1					
ANR	2493674	IdentifierDeclStatement	std :: vector < ExtAttrNode * > :: iterator rr ;	528:1:11559:11597	2493494	15	True				
ANR	2493675	IdentifierDecl	rr		2493494	0					
ANR	2493676	IdentifierDeclType	std :: vector < ExtAttrNode * > :: iterator		2493494	0					
ANR	2493677	Identifier	rr		2493494	1					
ANR	2493678	ForStatement	for ( r = reqDeps . begin ( ) ; r != reqDeps . end ( ) ; r ++ )		2493494	16					
ANR	2493679	ForInit	r = reqDeps . begin ( ) ;	529:6:11605:11625	2493494	0	True				
ANR	2493680	AssignmentExpression	r = reqDeps . begin ( )		2493494	0		=			
ANR	2493681	Identifier	r		2493494	0					
ANR	2493682	CallExpression	reqDeps . begin ( )		2493494	1					
ANR	2493683	Callee	reqDeps . begin		2493494	0					
ANR	2493684	MemberAccess	reqDeps . begin		2493494	0					
ANR	2493685	Identifier	reqDeps		2493494	0					
ANR	2493686	Identifier	begin		2493494	1					
ANR	2493687	ArgumentList			2493494	1					
ANR	2493688	Condition	r != reqDeps . end ( )	529:28:11627:11645	2493494	1	True				
ANR	2493689	EqualityExpression	r != reqDeps . end ( )		2493494	0		!=			
ANR	2493690	Identifier	r		2493494	0					
ANR	2493691	CallExpression	reqDeps . end ( )		2493494	1					
ANR	2493692	Callee	reqDeps . end		2493494	0					
ANR	2493693	MemberAccess	reqDeps . end		2493494	0					
ANR	2493694	Identifier	reqDeps		2493494	0					
ANR	2493695	Identifier	end		2493494	1					
ANR	2493696	ArgumentList			2493494	1					
ANR	2493697	PostIncDecOperationExpression	r ++	529:49:11648:11650	2493494	2	True				
ANR	2493698	Identifier	r		2493494	0					
ANR	2493699	IncDec	++		2493494	1					
ANR	2493700	CompoundStatement		30:55:838:838	2493494	3					
ANR	2493701	IfStatement	if ( r != reqDeps . begin ( ) )		2493494	0					
ANR	2493702	Condition	r != reqDeps . begin ( )	530:6:11662:11682	2493494	0	True				
ANR	2493703	EqualityExpression	r != reqDeps . begin ( )		2493494	0		!=			
ANR	2493704	Identifier	r		2493494	0					
ANR	2493705	CallExpression	reqDeps . begin ( )		2493494	1					
ANR	2493706	Callee	reqDeps . begin		2493494	0					
ANR	2493707	MemberAccess	reqDeps . begin		2493494	0					
ANR	2493708	Identifier	reqDeps		2493494	0					
ANR	2493709	Identifier	begin		2493494	1					
ANR	2493710	ArgumentList			2493494	1					
ANR	2493711	CompoundStatement		31:30:870:870	2493494	1					
ANR	2493712	ExpressionStatement	"buffer += "","""	531:3:11691:11704	2493494	0	True				
ANR	2493713	AssignmentExpression	"buffer += "","""		2493494	0		+=			
ANR	2493714	Identifier	buffer		2493494	0					
ANR	2493715	PrimaryExpression	""","""		2493494	1					
ANR	2493716	IfStatement	if ( ! ( * r ) -> empty ( ) )		2493494	1					
ANR	2493717	Condition	! ( * r ) -> empty ( )	533:6:11716:11730	2493494	0	True				
ANR	2493718	UnaryOperationExpression	! ( * r ) -> empty ( )		2493494	0					
ANR	2493719	UnaryOperator	!		2493494	0					
ANR	2493720	CallExpression	( * r ) -> empty ( )		2493494	1					
ANR	2493721	Callee	( * r ) -> empty		2493494	0					
ANR	2493722	PtrMemberAccess	( * r ) -> empty		2493494	0					
ANR	2493723	UnaryOperationExpression	* r		2493494	0					
ANR	2493724	UnaryOperator	*		2493494	0					
ANR	2493725	Identifier	r		2493494	1					
ANR	2493726	Identifier	empty		2493494	1					
ANR	2493727	ArgumentList			2493494	1					
ANR	2493728	CompoundStatement		34:24:918:918	2493494	1					
ANR	2493729	ExpressionStatement	"buffer += ""{"""	534:3:11739:11752	2493494	0	True				
ANR	2493730	AssignmentExpression	"buffer += ""{"""		2493494	0		+=			
ANR	2493731	Identifier	buffer		2493494	0					
ANR	2493732	PrimaryExpression	"""{"""		2493494	1					
ANR	2493733	ForStatement	for ( rr = ( * r ) -> begin ( ) ; rr != ( * r ) -> end ( ) ; rr ++ )		2493494	1					
ANR	2493734	ForInit	rr = ( * r ) -> begin ( ) ;	535:8:11762:11781	2493494	0	True				
ANR	2493735	AssignmentExpression	rr = ( * r ) -> begin ( )		2493494	0		=			
ANR	2493736	Identifier	rr		2493494	0					
ANR	2493737	CallExpression	( * r ) -> begin ( )		2493494	1					
ANR	2493738	Callee	( * r ) -> begin		2493494	0					
ANR	2493739	PtrMemberAccess	( * r ) -> begin		2493494	0					
ANR	2493740	UnaryOperationExpression	* r		2493494	0					
ANR	2493741	UnaryOperator	*		2493494	0					
ANR	2493742	Identifier	r		2493494	1					
ANR	2493743	Identifier	begin		2493494	1					
ANR	2493744	ArgumentList			2493494	1					
ANR	2493745	Condition	rr != ( * r ) -> end ( )	535:29:11783:11800	2493494	1	True				
ANR	2493746	EqualityExpression	rr != ( * r ) -> end ( )		2493494	0		!=			
ANR	2493747	Identifier	rr		2493494	0					
ANR	2493748	CallExpression	( * r ) -> end ( )		2493494	1					
ANR	2493749	Callee	( * r ) -> end		2493494	0					
ANR	2493750	PtrMemberAccess	( * r ) -> end		2493494	0					
ANR	2493751	UnaryOperationExpression	* r		2493494	0					
ANR	2493752	UnaryOperator	*		2493494	0					
ANR	2493753	Identifier	r		2493494	1					
ANR	2493754	Identifier	end		2493494	1					
ANR	2493755	ArgumentList			2493494	1					
ANR	2493756	PostIncDecOperationExpression	rr ++	535:49:11803:11806	2493494	2	True				
ANR	2493757	Identifier	rr		2493494	0					
ANR	2493758	IncDec	++		2493494	1					
ANR	2493759	CompoundStatement		36:56:994:994	2493494	3					
ANR	2493760	IfStatement	if ( rr != ( * r ) -> begin ( ) )		2493494	0					
ANR	2493761	Condition	rr != ( * r ) -> begin ( )	536:8:11820:11839	2493494	0	True				
ANR	2493762	EqualityExpression	rr != ( * r ) -> begin ( )		2493494	0		!=			
ANR	2493763	Identifier	rr		2493494	0					
ANR	2493764	CallExpression	( * r ) -> begin ( )		2493494	1					
ANR	2493765	Callee	( * r ) -> begin		2493494	0					
ANR	2493766	PtrMemberAccess	( * r ) -> begin		2493494	0					
ANR	2493767	UnaryOperationExpression	* r		2493494	0					
ANR	2493768	UnaryOperator	*		2493494	0					
ANR	2493769	Identifier	r		2493494	1					
ANR	2493770	Identifier	begin		2493494	1					
ANR	2493771	ArgumentList			2493494	1					
ANR	2493772	CompoundStatement		37:31:1027:1027	2493494	1					
ANR	2493773	ExpressionStatement	"buffer += "","""	537:5:11850:11863	2493494	0	True				
ANR	2493774	AssignmentExpression	"buffer += "","""		2493494	0		+=			
ANR	2493775	Identifier	buffer		2493494	0					
ANR	2493776	PrimaryExpression	""","""		2493494	1					
ANR	2493777	ExpressionStatement	( * rr ) -> ToString ( buffer )	539:4:11875:11900	2493494	1	True				
ANR	2493778	CallExpression	( * rr ) -> ToString ( buffer )		2493494	0					
ANR	2493779	Callee	( * rr ) -> ToString		2493494	0					
ANR	2493780	PtrMemberAccess	( * rr ) -> ToString		2493494	0					
ANR	2493781	UnaryOperationExpression	* rr		2493494	0					
ANR	2493782	UnaryOperator	*		2493494	0					
ANR	2493783	Identifier	rr		2493494	1					
ANR	2493784	Identifier	ToString		2493494	1					
ANR	2493785	ArgumentList	buffer		2493494	1					
ANR	2493786	Argument	buffer		2493494	0					
ANR	2493787	Identifier	buffer		2493494	0					
ANR	2493788	ExpressionStatement	"buffer += ""}"""	541:3:11910:11923	2493494	2	True				
ANR	2493789	AssignmentExpression	"buffer += ""}"""		2493494	0		+=			
ANR	2493790	Identifier	buffer		2493494	0					
ANR	2493791	PrimaryExpression	"""}"""		2493494	1					
ANR	2493792	ExpressionStatement	"buffer += ""},matchEdges:{"""	544:1:11933:11959	2493494	17	True				
ANR	2493793	AssignmentExpression	"buffer += ""},matchEdges:{"""		2493494	0		+=			
ANR	2493794	Identifier	buffer		2493494	0					
ANR	2493795	PrimaryExpression	"""},matchEdges:{"""		2493494	1					
ANR	2493796	IdentifierDeclStatement	std :: vector < MatchEdge * > :: iterator m ;	545:1:11962:11997	2493494	18	True				
ANR	2493797	IdentifierDecl	m		2493494	0					
ANR	2493798	IdentifierDeclType	std :: vector < MatchEdge * > :: iterator		2493494	0					
ANR	2493799	Identifier	m		2493494	1					
ANR	2493800	ForStatement	for ( m = matchEdges . begin ( ) ; m != matchEdges . end ( ) ; m ++ )		2493494	19					
ANR	2493801	ForInit	m = matchEdges . begin ( ) ;	546:6:12005:12028	2493494	0	True				
ANR	2493802	AssignmentExpression	m = matchEdges . begin ( )		2493494	0		=			
ANR	2493803	Identifier	m		2493494	0					
ANR	2493804	CallExpression	matchEdges . begin ( )		2493494	1					
ANR	2493805	Callee	matchEdges . begin		2493494	0					
ANR	2493806	MemberAccess	matchEdges . begin		2493494	0					
ANR	2493807	Identifier	matchEdges		2493494	0					
ANR	2493808	Identifier	begin		2493494	1					
ANR	2493809	ArgumentList			2493494	1					
ANR	2493810	Condition	m != matchEdges . end ( )	546:31:12030:12051	2493494	1	True				
ANR	2493811	EqualityExpression	m != matchEdges . end ( )		2493494	0		!=			
ANR	2493812	Identifier	m		2493494	0					
ANR	2493813	CallExpression	matchEdges . end ( )		2493494	1					
ANR	2493814	Callee	matchEdges . end		2493494	0					
ANR	2493815	MemberAccess	matchEdges . end		2493494	0					
ANR	2493816	Identifier	matchEdges		2493494	0					
ANR	2493817	Identifier	end		2493494	1					
ANR	2493818	ArgumentList			2493494	1					
ANR	2493819	PostIncDecOperationExpression	m ++	546:55:12054:12056	2493494	2	True				
ANR	2493820	Identifier	m		2493494	0					
ANR	2493821	IncDec	++		2493494	1					
ANR	2493822	CompoundStatement		47:61:1244:1244	2493494	3					
ANR	2493823	IfStatement	if ( m != matchEdges . begin ( ) )		2493494	0					
ANR	2493824	Condition	m != matchEdges . begin ( )	547:6:12068:12091	2493494	0	True				
ANR	2493825	EqualityExpression	m != matchEdges . begin ( )		2493494	0		!=			
ANR	2493826	Identifier	m		2493494	0					
ANR	2493827	CallExpression	matchEdges . begin ( )		2493494	1					
ANR	2493828	Callee	matchEdges . begin		2493494	0					
ANR	2493829	MemberAccess	matchEdges . begin		2493494	0					
ANR	2493830	Identifier	matchEdges		2493494	0					
ANR	2493831	Identifier	begin		2493494	1					
ANR	2493832	ArgumentList			2493494	1					
ANR	2493833	CompoundStatement		48:33:1279:1279	2493494	1					
ANR	2493834	ExpressionStatement	"buffer += "","""	548:3:12100:12113	2493494	0	True				
ANR	2493835	AssignmentExpression	"buffer += "","""		2493494	0		+=			
ANR	2493836	Identifier	buffer		2493494	0					
ANR	2493837	PrimaryExpression	""","""		2493494	1					
ANR	2493838	ExpressionStatement	( * m ) -> ToString ( buffer )	550:2:12121:12145	2493494	1	True				
ANR	2493839	CallExpression	( * m ) -> ToString ( buffer )		2493494	0					
ANR	2493840	Callee	( * m ) -> ToString		2493494	0					
ANR	2493841	PtrMemberAccess	( * m ) -> ToString		2493494	0					
ANR	2493842	UnaryOperationExpression	* m		2493494	0					
ANR	2493843	UnaryOperator	*		2493494	0					
ANR	2493844	Identifier	m		2493494	1					
ANR	2493845	Identifier	ToString		2493494	1					
ANR	2493846	ArgumentList	buffer		2493494	1					
ANR	2493847	Argument	buffer		2493494	0					
ANR	2493848	Identifier	buffer		2493494	0					
ANR	2493849	ExpressionStatement	"buffer += ""}]"""	553:1:12152:12166	2493494	20	True				
ANR	2493850	AssignmentExpression	"buffer += ""}]"""		2493494	0		+=			
ANR	2493851	Identifier	buffer		2493494	0					
ANR	2493852	PrimaryExpression	"""}]"""		2493494	1					
ANR	2493853	ReturnStatement	return true ;	554:1:12169:12180	2493494	21	True				
ANR	2493854	Identifier	true		2493494	0					
ANR	2493855	ReturnType	bool		2493494	1					
ANR	2493856	Identifier	PortNode :: ToString		2493494	2					
ANR	2493857	ParameterList	std :: string & buffer		2493494	3					
ANR	2493858	Parameter	std :: string & buffer	500:10:10793:10811	2493494	0	True				
ANR	2493859	ParameterType	std :: string &		2493494	0					
ANR	2493860	Identifier	buffer		2493494	1					
ANR	2493861	CFGEntryNode	ENTRY		2493494		True				
ANR	2493862	CFGExitNode	EXIT		2493494		True				
ANR	2493863	Symbol	rr		2493494						
ANR	2493864	Symbol	a -> first		2493494						
ANR	2493865	Symbol	matchEdges . begin		2493494						
ANR	2493866	Symbol	extAttrNodes . end		2493494						
ANR	2493867	Symbol	extAttrNodes		2493494						
ANR	2493868	Symbol	reqDeps . end		2493494						
ANR	2493869	Symbol	attrNodes . begin		2493494						
ANR	2493870	Symbol	attrNodes		2493494						
ANR	2493871	Symbol	reqDeps . begin		2493494						
ANR	2493872	Symbol	e -> first		2493494						
ANR	2493873	Symbol	extAttrNodes . begin		2493494						
ANR	2493874	Symbol	* * r		2493494						
ANR	2493875	Symbol	buffer		2493494						
ANR	2493876	Symbol	attrNodes . end		2493494						
ANR	2493877	Symbol	tempBuf		2493494						
ANR	2493878	Symbol	a		2493494						
ANR	2493879	Symbol	( * r ) -> empty		2493494						
ANR	2493880	Symbol	portNum		2493494						
ANR	2493881	Symbol	e		2493494						
ANR	2493882	Symbol	* rr		2493494						
ANR	2493883	Symbol	adNum		2493494						
ANR	2493884	Symbol	matchEdges		2493494						
ANR	2493885	Symbol	( * r ) -> begin		2493494						
ANR	2493886	Symbol	* a		2493494						
ANR	2493887	Symbol	a -> second		2493494						
ANR	2493888	Symbol	m		2493494						
ANR	2493889	Symbol	* e		2493494						
ANR	2493890	Symbol	r		2493494						
ANR	2493891	Symbol	matchEdges . end		2493494						
ANR	2493892	Symbol	e -> second		2493494						
ANR	2493893	Symbol	* m		2493494						
ANR	2493894	Symbol	true		2493494						
ANR	2493895	Symbol	reqDeps		2493494						
ANR	2493896	Symbol	* r		2493494						
ANR	2493897	Symbol	( * r ) -> end		2493494						
ANR	2493898	Function	MatchEdge :: MatchEdge	559:0:12207:12259							
ANR	2493899	FunctionDef	MatchEdge :: MatchEdge ()		2493898	0					
ANR	2493900	CompoundStatement		561:0:12232:12259	2493898	0					
ANR	2493901	ExpressionStatement	source = target = NULL	562:1:12235:12257	2493898	0	True				
ANR	2493902	AssignmentExpression	source = target = NULL		2493898	0		=			
ANR	2493903	Identifier	source		2493898	0					
ANR	2493904	AssignmentExpression	target = NULL		2493898	1		=			
ANR	2493905	Identifier	target		2493898	0					
ANR	2493906	Identifier	NULL		2493898	1					
ANR	2493907	Identifier	MatchEdge :: MatchEdge		2493898	1					
ANR	2493908	ParameterList			2493898	2					
ANR	2493909	CFGEntryNode	ENTRY		2493898		True				
ANR	2493910	CFGExitNode	EXIT		2493898		True				
ANR	2493911	Symbol	NULL		2493898						
ANR	2493912	Symbol	source		2493898						
ANR	2493913	Symbol	target		2493898						
ANR	2493914	Function	MatchEdge :: MatchEdge	565:0:12262:12582							
ANR	2493915	FunctionDef	"MatchEdge :: MatchEdge (int _edgeNum , PortNode * _source , PortNode * _target , std :: vector < MatchPath * > & _annotations)"		2493914	0					
ANR	2493916	CompoundStatement		568:0:12382:12582	2493914	0					
ANR	2493917	ExpressionStatement	edgeNum = _edgeNum	569:1:12385:12403	2493914	0	True				
ANR	2493918	AssignmentExpression	edgeNum = _edgeNum		2493914	0		=			
ANR	2493919	Identifier	edgeNum		2493914	0					
ANR	2493920	Identifier	_edgeNum		2493914	1					
ANR	2493921	ExpressionStatement	source = _source	570:1:12406:12422	2493914	1	True				
ANR	2493922	AssignmentExpression	source = _source		2493914	0		=			
ANR	2493923	Identifier	source		2493914	0					
ANR	2493924	Identifier	_source		2493914	1					
ANR	2493925	ExpressionStatement	target = _target	571:1:12425:12441	2493914	2	True				
ANR	2493926	AssignmentExpression	target = _target		2493914	0		=			
ANR	2493927	Identifier	target		2493914	0					
ANR	2493928	Identifier	_target		2493914	1					
ANR	2493929	IdentifierDeclStatement	std :: vector < MatchPath * > :: iterator a ;	572:1:12444:12479	2493914	3	True				
ANR	2493930	IdentifierDecl	a		2493914	0					
ANR	2493931	IdentifierDeclType	std :: vector < MatchPath * > :: iterator		2493914	0					
ANR	2493932	Identifier	a		2493914	1					
ANR	2493933	ForStatement	for ( a = _annotations . begin ( ) ; a != _annotations . end ( ) ; a ++ )		2493914	4					
ANR	2493934	ForInit	a = _annotations . begin ( ) ;	573:6:12487:12512	2493914	0	True				
ANR	2493935	AssignmentExpression	a = _annotations . begin ( )		2493914	0		=			
ANR	2493936	Identifier	a		2493914	0					
ANR	2493937	CallExpression	_annotations . begin ( )		2493914	1					
ANR	2493938	Callee	_annotations . begin		2493914	0					
ANR	2493939	MemberAccess	_annotations . begin		2493914	0					
ANR	2493940	Identifier	_annotations		2493914	0					
ANR	2493941	Identifier	begin		2493914	1					
ANR	2493942	ArgumentList			2493914	1					
ANR	2493943	Condition	a != _annotations . end ( )	573:33:12514:12537	2493914	1	True				
ANR	2493944	EqualityExpression	a != _annotations . end ( )		2493914	0		!=			
ANR	2493945	Identifier	a		2493914	0					
ANR	2493946	CallExpression	_annotations . end ( )		2493914	1					
ANR	2493947	Callee	_annotations . end		2493914	0					
ANR	2493948	MemberAccess	_annotations . end		2493914	0					
ANR	2493949	Identifier	_annotations		2493914	0					
ANR	2493950	Identifier	end		2493914	1					
ANR	2493951	ArgumentList			2493914	1					
ANR	2493952	PostIncDecOperationExpression	a ++	573:59:12540:12542	2493914	2	True				
ANR	2493953	Identifier	a		2493914	0					
ANR	2493954	IncDec	++		2493914	1					
ANR	2493955	CompoundStatement		6:65:163:163	2493914	3					
ANR	2493956	ExpressionStatement	annotations . push_back ( * a )	574:2:12550:12577	2493914	0	True				
ANR	2493957	CallExpression	annotations . push_back ( * a )		2493914	0					
ANR	2493958	Callee	annotations . push_back		2493914	0					
ANR	2493959	MemberAccess	annotations . push_back		2493914	0					
ANR	2493960	Identifier	annotations		2493914	0					
ANR	2493961	Identifier	push_back		2493914	1					
ANR	2493962	ArgumentList	* a		2493914	1					
ANR	2493963	Argument	* a		2493914	0					
ANR	2493964	UnaryOperationExpression	* a		2493914	0					
ANR	2493965	UnaryOperator	*		2493914	0					
ANR	2493966	Identifier	a		2493914	1					
ANR	2493967	Identifier	MatchEdge :: MatchEdge		2493914	1					
ANR	2493968	ParameterList	"int _edgeNum , PortNode * _source , PortNode * _target , std :: vector < MatchPath * > & _annotations"		2493914	2					
ANR	2493969	Parameter	int _edgeNum	566:11:12285:12296	2493914	0	True				
ANR	2493970	ParameterType	int		2493914	0					
ANR	2493971	Identifier	_edgeNum		2493914	1					
ANR	2493972	Parameter	PortNode * _source	566:25:12299:12315	2493914	1	True				
ANR	2493973	ParameterType	PortNode *		2493914	0					
ANR	2493974	Identifier	_source		2493914	1					
ANR	2493975	Parameter	PortNode * _target	566:44:12318:12334	2493914	2	True				
ANR	2493976	ParameterType	PortNode *		2493914	0					
ANR	2493977	Identifier	_target		2493914	1					
ANR	2493978	Parameter	std :: vector < MatchPath * > & _annotations	567:5:12342:12378	2493914	3	True				
ANR	2493979	ParameterType	std :: vector < MatchPath * > &		2493914	0					
ANR	2493980	Identifier	_annotations		2493914	1					
ANR	2493981	CFGEntryNode	ENTRY		2493914		True				
ANR	2493982	CFGExitNode	EXIT		2493914		True				
ANR	2493983	Symbol	a		2493914						
ANR	2493984	Symbol	_annotations . end		2493914						
ANR	2493985	Symbol	_annotations . begin		2493914						
ANR	2493986	Symbol	annotations		2493914						
ANR	2493987	Symbol	_source		2493914						
ANR	2493988	Symbol	source		2493914						
ANR	2493989	Symbol	* a		2493914						
ANR	2493990	Symbol	_annotations		2493914						
ANR	2493991	Symbol	edgeNum		2493914						
ANR	2493992	Symbol	_edgeNum		2493914						
ANR	2493993	Symbol	_target		2493914						
ANR	2493994	Symbol	target		2493914						
ANR	2493995	Function	MatchEdge :: ~MatchEdge	578:0:12585:12613							
ANR	2493996	FunctionDef	MatchEdge :: ~MatchEdge ()		2493995	0					
ANR	2493997	CompoundStatement		580:0:12611:12613	2493995	0					
ANR	2493998	Identifier	MatchEdge :: ~MatchEdge		2493995	1					
ANR	2493999	ParameterList			2493995	2					
ANR	2494000	CFGEntryNode	ENTRY		2493995		True				
ANR	2494001	CFGExitNode	EXIT		2493995		True				
ANR	2494002	Function	MatchEdge :: GetSource	583:0:12616:12669							
ANR	2494003	FunctionDef	MatchEdge :: GetSource ()		2494002	0					
ANR	2494004	CompoundStatement		585:0:12651:12669	2494002	0					
ANR	2494005	ReturnStatement	return source ;	586:1:12654:12667	2494002	0	True				
ANR	2494006	Identifier	source		2494002	0					
ANR	2494007	ReturnType	PortNode *		2494002	1					
ANR	2494008	Identifier	MatchEdge :: GetSource		2494002	2					
ANR	2494009	ParameterList			2494002	3					
ANR	2494010	CFGEntryNode	ENTRY		2494002		True				
ANR	2494011	CFGExitNode	EXIT		2494002		True				
ANR	2494012	Symbol	source		2494002						
ANR	2494013	Function	MatchEdge :: GetTarget	589:0:12672:12725							
ANR	2494014	FunctionDef	MatchEdge :: GetTarget ()		2494013	0					
ANR	2494015	CompoundStatement		591:0:12707:12725	2494013	0					
ANR	2494016	ReturnStatement	return target ;	592:1:12710:12723	2494013	0	True				
ANR	2494017	Identifier	target		2494013	0					
ANR	2494018	ReturnType	PortNode *		2494013	1					
ANR	2494019	Identifier	MatchEdge :: GetTarget		2494013	2					
ANR	2494020	ParameterList			2494013	3					
ANR	2494021	CFGEntryNode	ENTRY		2494013		True				
ANR	2494022	CFGExitNode	EXIT		2494013		True				
ANR	2494023	Symbol	target		2494013						
ANR	2494024	Function	MatchEdge :: GetEdgeNum	595:0:12728:12777							
ANR	2494025	FunctionDef	MatchEdge :: GetEdgeNum ()		2494024	0					
ANR	2494026	CompoundStatement		597:0:12758:12777	2494024	0					
ANR	2494027	ReturnStatement	return edgeNum ;	598:1:12761:12775	2494024	0	True				
ANR	2494028	Identifier	edgeNum		2494024	0					
ANR	2494029	ReturnType	int		2494024	1					
ANR	2494030	Identifier	MatchEdge :: GetEdgeNum		2494024	2					
ANR	2494031	ParameterList			2494024	3					
ANR	2494032	CFGEntryNode	ENTRY		2494024		True				
ANR	2494033	CFGExitNode	EXIT		2494024		True				
ANR	2494034	Symbol	edgeNum		2494024						
ANR	2494035	Function	MatchEdge :: HasNoAnnotations	601:0:12780:12849							
ANR	2494036	FunctionDef	MatchEdge :: HasNoAnnotations ()		2494035	0					
ANR	2494037	CompoundStatement		603:0:12817:12849	2494035	0					
ANR	2494038	ReturnStatement	return annotations . empty ( ) ;	604:1:12820:12847	2494035	0	True				
ANR	2494039	CallExpression	annotations . empty ( )		2494035	0					
ANR	2494040	Callee	annotations . empty		2494035	0					
ANR	2494041	MemberAccess	annotations . empty		2494035	0					
ANR	2494042	Identifier	annotations		2494035	0					
ANR	2494043	Identifier	empty		2494035	1					
ANR	2494044	ArgumentList			2494035	1					
ANR	2494045	ReturnType	bool		2494035	1					
ANR	2494046	Identifier	MatchEdge :: HasNoAnnotations		2494035	2					
ANR	2494047	ParameterList			2494035	3					
ANR	2494048	CFGEntryNode	ENTRY		2494035		True				
ANR	2494049	CFGExitNode	EXIT		2494035		True				
ANR	2494050	Symbol	annotations		2494035						
ANR	2494051	Symbol	annotations . empty		2494035						
ANR	2494052	Function	MatchEdge :: SameAnnotations	607:0:12852:13135							
ANR	2494053	FunctionDef	MatchEdge :: SameAnnotations (std :: vector < MatchPath * > & mps)		2494052	0					
ANR	2494054	CompoundStatement		609:0:12917:13135	2494052	0					
ANR	2494055	IdentifierDeclStatement	"std :: vector < MatchPath * > :: iterator a , m ;"	610:1:12920:12958	2494052	0	True				
ANR	2494056	IdentifierDecl	a		2494052	0					
ANR	2494057	IdentifierDeclType	std :: vector < MatchPath * > :: iterator		2494052	0					
ANR	2494058	Identifier	a		2494052	1					
ANR	2494059	IdentifierDecl	m		2494052	1					
ANR	2494060	IdentifierDeclType	std :: vector < MatchPath * > :: iterator		2494052	0					
ANR	2494061	Identifier	m		2494052	1					
ANR	2494062	ExpressionStatement	m = mps . begin ( )	611:1:12961:12977	2494052	1	True				
ANR	2494063	AssignmentExpression	m = mps . begin ( )		2494052	0		=			
ANR	2494064	Identifier	m		2494052	0					
ANR	2494065	CallExpression	mps . begin ( )		2494052	1					
ANR	2494066	Callee	mps . begin		2494052	0					
ANR	2494067	MemberAccess	mps . begin		2494052	0					
ANR	2494068	Identifier	mps		2494052	0					
ANR	2494069	Identifier	begin		2494052	1					
ANR	2494070	ArgumentList			2494052	1					
ANR	2494071	ForStatement	for ( a = annotations . begin ( ) ; a != annotations . end ( ) ; a ++ )		2494052	2					
ANR	2494072	ForInit	a = annotations . begin ( ) ;	612:6:12985:13009	2494052	0	True				
ANR	2494073	AssignmentExpression	a = annotations . begin ( )		2494052	0		=			
ANR	2494074	Identifier	a		2494052	0					
ANR	2494075	CallExpression	annotations . begin ( )		2494052	1					
ANR	2494076	Callee	annotations . begin		2494052	0					
ANR	2494077	MemberAccess	annotations . begin		2494052	0					
ANR	2494078	Identifier	annotations		2494052	0					
ANR	2494079	Identifier	begin		2494052	1					
ANR	2494080	ArgumentList			2494052	1					
ANR	2494081	Condition	a != annotations . end ( )	612:32:13011:13033	2494052	1	True				
ANR	2494082	EqualityExpression	a != annotations . end ( )		2494052	0		!=			
ANR	2494083	Identifier	a		2494052	0					
ANR	2494084	CallExpression	annotations . end ( )		2494052	1					
ANR	2494085	Callee	annotations . end		2494052	0					
ANR	2494086	MemberAccess	annotations . end		2494052	0					
ANR	2494087	Identifier	annotations		2494052	0					
ANR	2494088	Identifier	end		2494052	1					
ANR	2494089	ArgumentList			2494052	1					
ANR	2494090	PostIncDecOperationExpression	a ++	612:57:13036:13038	2494052	2	True				
ANR	2494091	Identifier	a		2494052	0					
ANR	2494092	IncDec	++		2494052	1					
ANR	2494093	CompoundStatement		4:62:123:123	2494052	3					
ANR	2494094	IfStatement	if ( m == mps . end ( ) || ! ( * a ) -> SameAs ( * m ) )		2494052	0					
ANR	2494095	Condition	m == mps . end ( ) || ! ( * a ) -> SameAs ( * m )	613:6:13049:13084	2494052	0	True				
ANR	2494096	OrExpression	m == mps . end ( ) || ! ( * a ) -> SameAs ( * m )		2494052	0		||			
ANR	2494097	EqualityExpression	m == mps . end ( )		2494052	0		==			
ANR	2494098	Identifier	m		2494052	0					
ANR	2494099	CallExpression	mps . end ( )		2494052	1					
ANR	2494100	Callee	mps . end		2494052	0					
ANR	2494101	MemberAccess	mps . end		2494052	0					
ANR	2494102	Identifier	mps		2494052	0					
ANR	2494103	Identifier	end		2494052	1					
ANR	2494104	ArgumentList			2494052	1					
ANR	2494105	UnaryOperationExpression	! ( * a ) -> SameAs ( * m )		2494052	1					
ANR	2494106	UnaryOperator	!		2494052	0					
ANR	2494107	CallExpression	( * a ) -> SameAs ( * m )		2494052	1					
ANR	2494108	Callee	( * a ) -> SameAs		2494052	0					
ANR	2494109	PtrMemberAccess	( * a ) -> SameAs		2494052	0					
ANR	2494110	UnaryOperationExpression	* a		2494052	0					
ANR	2494111	UnaryOperator	*		2494052	0					
ANR	2494112	Identifier	a		2494052	1					
ANR	2494113	Identifier	SameAs		2494052	1					
ANR	2494114	ArgumentList	* m		2494052	1					
ANR	2494115	Argument	* m		2494052	0					
ANR	2494116	UnaryOperationExpression	* m		2494052	0					
ANR	2494117	UnaryOperator	*		2494052	0					
ANR	2494118	Identifier	m		2494052	1					
ANR	2494119	CompoundStatement		5:45:170:170	2494052	1					
ANR	2494120	ReturnStatement	return false ;	614:3:13093:13105	2494052	0	True				
ANR	2494121	Identifier	false		2494052	0					
ANR	2494122	ExpressionStatement	m ++	616:2:13113:13116	2494052	1	True				
ANR	2494123	PostIncDecOperationExpression	m ++		2494052	0					
ANR	2494124	Identifier	m		2494052	0					
ANR	2494125	IncDec	++		2494052	1					
ANR	2494126	ReturnStatement	return true ;	618:1:13122:13133	2494052	3	True				
ANR	2494127	Identifier	true		2494052	0					
ANR	2494128	ReturnType	bool		2494052	1					
ANR	2494129	Identifier	MatchEdge :: SameAnnotations		2494052	2					
ANR	2494130	ParameterList	std :: vector < MatchPath * > & mps		2494052	3					
ANR	2494131	Parameter	std :: vector < MatchPath * > & mps	608:17:12886:12913	2494052	0	True				
ANR	2494132	ParameterType	std :: vector < MatchPath * > &		2494052	0					
ANR	2494133	Identifier	mps		2494052	1					
ANR	2494134	CFGEntryNode	ENTRY		2494052		True				
ANR	2494135	CFGExitNode	EXIT		2494052		True				
ANR	2494136	Symbol	a		2494052						
ANR	2494137	Symbol	( * a ) -> SameAs		2494052						
ANR	2494138	Symbol	false		2494052						
ANR	2494139	Symbol	annotations		2494052						
ANR	2494140	Symbol	* * a		2494052						
ANR	2494141	Symbol	* a		2494052						
ANR	2494142	Symbol	m		2494052						
ANR	2494143	Symbol	annotations . begin		2494052						
ANR	2494144	Symbol	mps		2494052						
ANR	2494145	Symbol	mps . begin		2494052						
ANR	2494146	Symbol	annotations . end		2494052						
ANR	2494147	Symbol	* m		2494052						
ANR	2494148	Symbol	true		2494052						
ANR	2494149	Symbol	mps . end		2494052						
ANR	2494150	Function	MatchEdge :: ToString	621:0:13138:14128							
ANR	2494151	FunctionDef	MatchEdge :: ToString (std :: string & buffer)		2494150	0					
ANR	2494152	CompoundStatement		623:0:13187:14128	2494150	0					
ANR	2494153	IdentifierDeclStatement	char tempBuf [ 512 ] ;	624:1:13190:13207	2494150	0	True				
ANR	2494154	IdentifierDecl	tempBuf [ 512 ]		2494150	0					
ANR	2494155	IdentifierDeclType	char [ 512 ]		2494150	0					
ANR	2494156	Identifier	tempBuf		2494150	1					
ANR	2494157	PrimaryExpression	512		2494150	2					
ANR	2494158	ExpressionStatement	"buffer += ""[edgeNum:"""	625:1:13210:13231	2494150	1	True				
ANR	2494159	AssignmentExpression	"buffer += ""[edgeNum:"""		2494150	0		+=			
ANR	2494160	Identifier	buffer		2494150	0					
ANR	2494161	PrimaryExpression	"""[edgeNum:"""		2494150	1					
ANR	2494162	ExpressionStatement	"sprintf ( tempBuf , ""%d"" , edgeNum )"	626:1:13234:13267	2494150	2	True				
ANR	2494163	CallExpression	"sprintf ( tempBuf , ""%d"" , edgeNum )"		2494150	0					
ANR	2494164	Callee	sprintf		2494150	0					
ANR	2494165	Identifier	sprintf		2494150	0					
ANR	2494166	ArgumentList	tempBuf		2494150	1					
ANR	2494167	Argument	tempBuf		2494150	0					
ANR	2494168	Identifier	tempBuf		2494150	0					
ANR	2494169	Argument	"""%d"""		2494150	1					
ANR	2494170	PrimaryExpression	"""%d"""		2494150	0					
ANR	2494171	Argument	edgeNum		2494150	2					
ANR	2494172	Identifier	edgeNum		2494150	0					
ANR	2494173	ExpressionStatement	buffer += tempBuf	627:1:13270:13287	2494150	3	True				
ANR	2494174	AssignmentExpression	buffer += tempBuf		2494150	0		+=			
ANR	2494175	Identifier	buffer		2494150	0					
ANR	2494176	Identifier	tempBuf		2494150	1					
ANR	2494177	IfStatement	if ( source || target )		2494150	4					
ANR	2494178	Condition	source || target	628:5:13294:13309	2494150	0	True				
ANR	2494179	OrExpression	source || target		2494150	0		||			
ANR	2494180	Identifier	source		2494150	0					
ANR	2494181	Identifier	target		2494150	1					
ANR	2494182	CompoundStatement		6:24:125:125	2494150	1					
ANR	2494183	ExpressionStatement	"buffer += "","""	629:2:13317:13330	2494150	0	True				
ANR	2494184	AssignmentExpression	"buffer += "","""		2494150	0		+=			
ANR	2494185	Identifier	buffer		2494150	0					
ANR	2494186	PrimaryExpression	""","""		2494150	1					
ANR	2494187	IfStatement	if ( source )		2494150	5					
ANR	2494188	Condition	source	631:5:13340:13345	2494150	0	True				
ANR	2494189	Identifier	source		2494150	0					
ANR	2494190	CompoundStatement		9:14:161:161	2494150	1					
ANR	2494191	ExpressionStatement	"buffer += ""source:{"""	632:2:13353:13373	2494150	0	True				
ANR	2494192	AssignmentExpression	"buffer += ""source:{"""		2494150	0		+=			
ANR	2494193	Identifier	buffer		2494150	0					
ANR	2494194	PrimaryExpression	"""source:{"""		2494150	1					
ANR	2494195	ExpressionStatement	"sprintf ( tempBuf , ""%d"" , source -> GetAdNum ( ) )"	633:2:13377:13422	2494150	1	True				
ANR	2494196	CallExpression	"sprintf ( tempBuf , ""%d"" , source -> GetAdNum ( ) )"		2494150	0					
ANR	2494197	Callee	sprintf		2494150	0					
ANR	2494198	Identifier	sprintf		2494150	0					
ANR	2494199	ArgumentList	tempBuf		2494150	1					
ANR	2494200	Argument	tempBuf		2494150	0					
ANR	2494201	Identifier	tempBuf		2494150	0					
ANR	2494202	Argument	"""%d"""		2494150	1					
ANR	2494203	PrimaryExpression	"""%d"""		2494150	0					
ANR	2494204	Argument	source -> GetAdNum ( )		2494150	2					
ANR	2494205	CallExpression	source -> GetAdNum ( )		2494150	0					
ANR	2494206	Callee	source -> GetAdNum		2494150	0					
ANR	2494207	PtrMemberAccess	source -> GetAdNum		2494150	0					
ANR	2494208	Identifier	source		2494150	0					
ANR	2494209	Identifier	GetAdNum		2494150	1					
ANR	2494210	ArgumentList			2494150	1					
ANR	2494211	ExpressionStatement	buffer += tempBuf	634:2:13426:13443	2494150	2	True				
ANR	2494212	AssignmentExpression	buffer += tempBuf		2494150	0		+=			
ANR	2494213	Identifier	buffer		2494150	0					
ANR	2494214	Identifier	tempBuf		2494150	1					
ANR	2494215	ExpressionStatement	"buffer += "","""	635:2:13447:13460	2494150	3	True				
ANR	2494216	AssignmentExpression	"buffer += "","""		2494150	0		+=			
ANR	2494217	Identifier	buffer		2494150	0					
ANR	2494218	PrimaryExpression	""","""		2494150	1					
ANR	2494219	ExpressionStatement	"sprintf ( tempBuf , ""%d"" , source -> GetPortNum ( ) )"	636:2:13464:13511	2494150	4	True				
ANR	2494220	CallExpression	"sprintf ( tempBuf , ""%d"" , source -> GetPortNum ( ) )"		2494150	0					
ANR	2494221	Callee	sprintf		2494150	0					
ANR	2494222	Identifier	sprintf		2494150	0					
ANR	2494223	ArgumentList	tempBuf		2494150	1					
ANR	2494224	Argument	tempBuf		2494150	0					
ANR	2494225	Identifier	tempBuf		2494150	0					
ANR	2494226	Argument	"""%d"""		2494150	1					
ANR	2494227	PrimaryExpression	"""%d"""		2494150	0					
ANR	2494228	Argument	source -> GetPortNum ( )		2494150	2					
ANR	2494229	CallExpression	source -> GetPortNum ( )		2494150	0					
ANR	2494230	Callee	source -> GetPortNum		2494150	0					
ANR	2494231	PtrMemberAccess	source -> GetPortNum		2494150	0					
ANR	2494232	Identifier	source		2494150	0					
ANR	2494233	Identifier	GetPortNum		2494150	1					
ANR	2494234	ArgumentList			2494150	1					
ANR	2494235	ExpressionStatement	buffer += tempBuf	637:2:13515:13532	2494150	5	True				
ANR	2494236	AssignmentExpression	buffer += tempBuf		2494150	0		+=			
ANR	2494237	Identifier	buffer		2494150	0					
ANR	2494238	Identifier	tempBuf		2494150	1					
ANR	2494239	ExpressionStatement	"buffer += ""}"""	638:2:13536:13549	2494150	6	True				
ANR	2494240	AssignmentExpression	"buffer += ""}"""		2494150	0		+=			
ANR	2494241	Identifier	buffer		2494150	0					
ANR	2494242	PrimaryExpression	"""}"""		2494150	1					
ANR	2494243	IfStatement	if ( source && target )		2494150	6					
ANR	2494244	Condition	source && target	640:5:13559:13574	2494150	0	True				
ANR	2494245	AndExpression	source && target		2494150	0		&&			
ANR	2494246	Identifier	source		2494150	0					
ANR	2494247	Identifier	target		2494150	1					
ANR	2494248	CompoundStatement		18:24:390:390	2494150	1					
ANR	2494249	ExpressionStatement	"buffer += "","""	641:2:13582:13595	2494150	0	True				
ANR	2494250	AssignmentExpression	"buffer += "","""		2494150	0		+=			
ANR	2494251	Identifier	buffer		2494150	0					
ANR	2494252	PrimaryExpression	""","""		2494150	1					
ANR	2494253	IfStatement	if ( target )		2494150	7					
ANR	2494254	Condition	target	643:5:13605:13610	2494150	0	True				
ANR	2494255	Identifier	target		2494150	0					
ANR	2494256	CompoundStatement		21:14:426:426	2494150	1					
ANR	2494257	ExpressionStatement	"buffer += ""target:{"""	644:2:13618:13638	2494150	0	True				
ANR	2494258	AssignmentExpression	"buffer += ""target:{"""		2494150	0		+=			
ANR	2494259	Identifier	buffer		2494150	0					
ANR	2494260	PrimaryExpression	"""target:{"""		2494150	1					
ANR	2494261	ExpressionStatement	"sprintf ( tempBuf , ""%d"" , target -> GetAdNum ( ) )"	645:2:13642:13687	2494150	1	True				
ANR	2494262	CallExpression	"sprintf ( tempBuf , ""%d"" , target -> GetAdNum ( ) )"		2494150	0					
ANR	2494263	Callee	sprintf		2494150	0					
ANR	2494264	Identifier	sprintf		2494150	0					
ANR	2494265	ArgumentList	tempBuf		2494150	1					
ANR	2494266	Argument	tempBuf		2494150	0					
ANR	2494267	Identifier	tempBuf		2494150	0					
ANR	2494268	Argument	"""%d"""		2494150	1					
ANR	2494269	PrimaryExpression	"""%d"""		2494150	0					
ANR	2494270	Argument	target -> GetAdNum ( )		2494150	2					
ANR	2494271	CallExpression	target -> GetAdNum ( )		2494150	0					
ANR	2494272	Callee	target -> GetAdNum		2494150	0					
ANR	2494273	PtrMemberAccess	target -> GetAdNum		2494150	0					
ANR	2494274	Identifier	target		2494150	0					
ANR	2494275	Identifier	GetAdNum		2494150	1					
ANR	2494276	ArgumentList			2494150	1					
ANR	2494277	ExpressionStatement	buffer += tempBuf	646:2:13691:13708	2494150	2	True				
ANR	2494278	AssignmentExpression	buffer += tempBuf		2494150	0		+=			
ANR	2494279	Identifier	buffer		2494150	0					
ANR	2494280	Identifier	tempBuf		2494150	1					
ANR	2494281	ExpressionStatement	"buffer += "","""	647:2:13712:13725	2494150	3	True				
ANR	2494282	AssignmentExpression	"buffer += "","""		2494150	0		+=			
ANR	2494283	Identifier	buffer		2494150	0					
ANR	2494284	PrimaryExpression	""","""		2494150	1					
ANR	2494285	ExpressionStatement	"sprintf ( tempBuf , ""%d"" , target -> GetPortNum ( ) )"	648:2:13729:13776	2494150	4	True				
ANR	2494286	CallExpression	"sprintf ( tempBuf , ""%d"" , target -> GetPortNum ( ) )"		2494150	0					
ANR	2494287	Callee	sprintf		2494150	0					
ANR	2494288	Identifier	sprintf		2494150	0					
ANR	2494289	ArgumentList	tempBuf		2494150	1					
ANR	2494290	Argument	tempBuf		2494150	0					
ANR	2494291	Identifier	tempBuf		2494150	0					
ANR	2494292	Argument	"""%d"""		2494150	1					
ANR	2494293	PrimaryExpression	"""%d"""		2494150	0					
ANR	2494294	Argument	target -> GetPortNum ( )		2494150	2					
ANR	2494295	CallExpression	target -> GetPortNum ( )		2494150	0					
ANR	2494296	Callee	target -> GetPortNum		2494150	0					
ANR	2494297	PtrMemberAccess	target -> GetPortNum		2494150	0					
ANR	2494298	Identifier	target		2494150	0					
ANR	2494299	Identifier	GetPortNum		2494150	1					
ANR	2494300	ArgumentList			2494150	1					
ANR	2494301	ExpressionStatement	buffer += tempBuf	649:2:13780:13797	2494150	5	True				
ANR	2494302	AssignmentExpression	buffer += tempBuf		2494150	0		+=			
ANR	2494303	Identifier	buffer		2494150	0					
ANR	2494304	Identifier	tempBuf		2494150	1					
ANR	2494305	ExpressionStatement	"buffer += ""}"""	650:2:13801:13814	2494150	6	True				
ANR	2494306	AssignmentExpression	"buffer += ""}"""		2494150	0		+=			
ANR	2494307	Identifier	buffer		2494150	0					
ANR	2494308	PrimaryExpression	"""}"""		2494150	1					
ANR	2494309	IfStatement	if ( ! annotations . empty ( ) )		2494150	8					
ANR	2494310	Condition	! annotations . empty ( )	652:5:13824:13844	2494150	0	True				
ANR	2494311	UnaryOperationExpression	! annotations . empty ( )		2494150	0					
ANR	2494312	UnaryOperator	!		2494150	0					
ANR	2494313	CallExpression	annotations . empty ( )		2494150	1					
ANR	2494314	Callee	annotations . empty		2494150	0					
ANR	2494315	MemberAccess	annotations . empty		2494150	0					
ANR	2494316	Identifier	annotations		2494150	0					
ANR	2494317	Identifier	empty		2494150	1					
ANR	2494318	ArgumentList			2494150	1					
ANR	2494319	CompoundStatement		31:2:664:699	2494150	1					
ANR	2494320	IdentifierDeclStatement	std :: vector < MatchPath * > :: iterator a ;	653:2:13852:13887	2494150	0	True				
ANR	2494321	IdentifierDecl	a		2494150	0					
ANR	2494322	IdentifierDeclType	std :: vector < MatchPath * > :: iterator		2494150	0					
ANR	2494323	Identifier	a		2494150	1					
ANR	2494324	ExpressionStatement	"buffer += ""annotations:{"""	654:2:13891:13916	2494150	1	True				
ANR	2494325	AssignmentExpression	"buffer += ""annotations:{"""		2494150	0		+=			
ANR	2494326	Identifier	buffer		2494150	0					
ANR	2494327	PrimaryExpression	"""annotations:{"""		2494150	1					
ANR	2494328	ForStatement	for ( a = annotations . begin ( ) ; a != annotations . end ( ) ; a ++ )		2494150	2					
ANR	2494329	ForInit	a = annotations . begin ( ) ;	655:7:13925:13949	2494150	0	True				
ANR	2494330	AssignmentExpression	a = annotations . begin ( )		2494150	0		=			
ANR	2494331	Identifier	a		2494150	0					
ANR	2494332	CallExpression	annotations . begin ( )		2494150	1					
ANR	2494333	Callee	annotations . begin		2494150	0					
ANR	2494334	MemberAccess	annotations . begin		2494150	0					
ANR	2494335	Identifier	annotations		2494150	0					
ANR	2494336	Identifier	begin		2494150	1					
ANR	2494337	ArgumentList			2494150	1					
ANR	2494338	Condition	a != annotations . end ( )	655:33:13951:13973	2494150	1	True				
ANR	2494339	EqualityExpression	a != annotations . end ( )		2494150	0		!=			
ANR	2494340	Identifier	a		2494150	0					
ANR	2494341	CallExpression	annotations . end ( )		2494150	1					
ANR	2494342	Callee	annotations . end		2494150	0					
ANR	2494343	MemberAccess	annotations . end		2494150	0					
ANR	2494344	Identifier	annotations		2494150	0					
ANR	2494345	Identifier	end		2494150	1					
ANR	2494346	ArgumentList			2494150	1					
ANR	2494347	PostIncDecOperationExpression	a ++	655:58:13976:13978	2494150	2	True				
ANR	2494348	Identifier	a		2494150	0					
ANR	2494349	IncDec	++		2494150	1					
ANR	2494350	CompoundStatement		33:64:794:794	2494150	3					
ANR	2494351	IfStatement	if ( a != annotations . begin ( ) )		2494150	0					
ANR	2494352	Condition	a != annotations . begin ( )	656:7:13991:14015	2494150	0	True				
ANR	2494353	EqualityExpression	a != annotations . begin ( )		2494150	0		!=			
ANR	2494354	Identifier	a		2494150	0					
ANR	2494355	CallExpression	annotations . begin ( )		2494150	1					
ANR	2494356	Callee	annotations . begin		2494150	0					
ANR	2494357	MemberAccess	annotations . begin		2494150	0					
ANR	2494358	Identifier	annotations		2494150	0					
ANR	2494359	Identifier	begin		2494150	1					
ANR	2494360	ArgumentList			2494150	1					
ANR	2494361	CompoundStatement		34:35:831:831	2494150	1					
ANR	2494362	ExpressionStatement	"buffer += "","""	657:4:14025:14038	2494150	0	True				
ANR	2494363	AssignmentExpression	"buffer += "","""		2494150	0		+=			
ANR	2494364	Identifier	buffer		2494150	0					
ANR	2494365	PrimaryExpression	""","""		2494150	1					
ANR	2494366	ExpressionStatement	( * a ) -> ToString ( buffer )	659:3:14048:14072	2494150	1	True				
ANR	2494367	CallExpression	( * a ) -> ToString ( buffer )		2494150	0					
ANR	2494368	Callee	( * a ) -> ToString		2494150	0					
ANR	2494369	PtrMemberAccess	( * a ) -> ToString		2494150	0					
ANR	2494370	UnaryOperationExpression	* a		2494150	0					
ANR	2494371	UnaryOperator	*		2494150	0					
ANR	2494372	Identifier	a		2494150	1					
ANR	2494373	Identifier	ToString		2494150	1					
ANR	2494374	ArgumentList	buffer		2494150	1					
ANR	2494375	Argument	buffer		2494150	0					
ANR	2494376	Identifier	buffer		2494150	0					
ANR	2494377	ExpressionStatement	"buffer += ""}"""	661:2:14080:14093	2494150	3	True				
ANR	2494378	AssignmentExpression	"buffer += ""}"""		2494150	0		+=			
ANR	2494379	Identifier	buffer		2494150	0					
ANR	2494380	PrimaryExpression	"""}"""		2494150	1					
ANR	2494381	ExpressionStatement	"buffer += ""]"""	663:1:14099:14112	2494150	9	True				
ANR	2494382	AssignmentExpression	"buffer += ""]"""		2494150	0		+=			
ANR	2494383	Identifier	buffer		2494150	0					
ANR	2494384	PrimaryExpression	"""]"""		2494150	1					
ANR	2494385	ReturnStatement	return true ;	664:1:14115:14126	2494150	10	True				
ANR	2494386	Identifier	true		2494150	0					
ANR	2494387	ReturnType	bool		2494150	1					
ANR	2494388	Identifier	MatchEdge :: ToString		2494150	2					
ANR	2494389	ParameterList	std :: string & buffer		2494150	3					
ANR	2494390	Parameter	std :: string & buffer	622:10:13165:13183	2494150	0	True				
ANR	2494391	ParameterType	std :: string &		2494150	0					
ANR	2494392	Identifier	buffer		2494150	1					
ANR	2494393	CFGEntryNode	ENTRY		2494150		True				
ANR	2494394	CFGExitNode	EXIT		2494150		True				
ANR	2494395	Symbol	a		2494150						
ANR	2494396	Symbol	source -> GetPortNum		2494150						
ANR	2494397	Symbol	target -> GetPortNum		2494150						
ANR	2494398	Symbol	annotations		2494150						
ANR	2494399	Symbol	source		2494150						
ANR	2494400	Symbol	* a		2494150						
ANR	2494401	Symbol	annotations . begin		2494150						
ANR	2494402	Symbol	target		2494150						
ANR	2494403	Symbol	* target		2494150						
ANR	2494404	Symbol	source -> GetAdNum		2494150						
ANR	2494405	Symbol	annotations . end		2494150						
ANR	2494406	Symbol	* source		2494150						
ANR	2494407	Symbol	true		2494150						
ANR	2494408	Symbol	buffer		2494150						
ANR	2494409	Symbol	annotations . empty		2494150						
ANR	2494410	Symbol	edgeNum		2494150						
ANR	2494411	Symbol	target -> GetAdNum		2494150						
ANR	2494412	Symbol	tempBuf		2494150						
ANR	2494413	Function	MatchPath :: MatchPath	668:0:14152:14179							
ANR	2494414	FunctionDef	MatchPath :: MatchPath ()		2494413	0					
ANR	2494415	CompoundStatement		670:0:14177:14179	2494413	0					
ANR	2494416	Identifier	MatchPath :: MatchPath		2494413	1					
ANR	2494417	ParameterList			2494413	2					
ANR	2494418	CFGEntryNode	ENTRY		2494413		True				
ANR	2494419	CFGExitNode	EXIT		2494413		True				
ANR	2494420	Function	MatchPath :: ~MatchPath	673:0:14182:14210							
ANR	2494421	FunctionDef	MatchPath :: ~MatchPath ()		2494420	0					
ANR	2494422	CompoundStatement		675:0:14208:14210	2494420	0					
ANR	2494423	Identifier	MatchPath :: ~MatchPath		2494420	1					
ANR	2494424	ParameterList			2494420	2					
ANR	2494425	CFGEntryNode	ENTRY		2494420		True				
ANR	2494426	CFGExitNode	EXIT		2494420		True				
ANR	2494427	Function	MatchPath :: AddMatchEdge	678:0:14213:14304							
ANR	2494428	FunctionDef	MatchPath :: AddMatchEdge (MatchEdge * edge)		2494427	0					
ANR	2494429	CompoundStatement		680:0:14262:14304	2494427	0					
ANR	2494430	ExpressionStatement	edges . push_back ( edge )	681:1:14265:14288	2494427	0	True				
ANR	2494431	CallExpression	edges . push_back ( edge )		2494427	0					
ANR	2494432	Callee	edges . push_back		2494427	0					
ANR	2494433	MemberAccess	edges . push_back		2494427	0					
ANR	2494434	Identifier	edges		2494427	0					
ANR	2494435	Identifier	push_back		2494427	1					
ANR	2494436	ArgumentList	edge		2494427	1					
ANR	2494437	Argument	edge		2494427	0					
ANR	2494438	Identifier	edge		2494427	0					
ANR	2494439	ReturnStatement	return true ;	682:1:14291:14302	2494427	1	True				
ANR	2494440	Identifier	true		2494427	0					
ANR	2494441	ReturnType	bool		2494427	1					
ANR	2494442	Identifier	MatchPath :: AddMatchEdge		2494427	2					
ANR	2494443	ParameterList	MatchEdge * edge		2494427	3					
ANR	2494444	Parameter	MatchEdge * edge	679:14:14244:14258	2494427	0	True				
ANR	2494445	ParameterType	MatchEdge *		2494427	0					
ANR	2494446	Identifier	edge		2494427	1					
ANR	2494447	CFGEntryNode	ENTRY		2494427		True				
ANR	2494448	CFGExitNode	EXIT		2494427		True				
ANR	2494449	Symbol	edge		2494427						
ANR	2494450	Symbol	edges		2494427						
ANR	2494451	Symbol	true		2494427						
ANR	2494452	Function	MatchPath :: Empty	685:0:14307:14359							
ANR	2494453	FunctionDef	MatchPath :: Empty ()		2494452	0					
ANR	2494454	CompoundStatement		687:0:14333:14359	2494452	0					
ANR	2494455	ReturnStatement	return edges . empty ( ) ;	688:1:14336:14357	2494452	0	True				
ANR	2494456	CallExpression	edges . empty ( )		2494452	0					
ANR	2494457	Callee	edges . empty		2494452	0					
ANR	2494458	MemberAccess	edges . empty		2494452	0					
ANR	2494459	Identifier	edges		2494452	0					
ANR	2494460	Identifier	empty		2494452	1					
ANR	2494461	ArgumentList			2494452	1					
ANR	2494462	ReturnType	bool		2494452	1					
ANR	2494463	Identifier	MatchPath :: Empty		2494452	2					
ANR	2494464	ParameterList			2494452	3					
ANR	2494465	CFGEntryNode	ENTRY		2494452		True				
ANR	2494466	CFGExitNode	EXIT		2494452		True				
ANR	2494467	Symbol	edges . empty		2494452						
ANR	2494468	Symbol	edges		2494452						
ANR	2494469	Function	MatchPath :: RemoveLastEdge	691:0:14362:14433							
ANR	2494470	FunctionDef	MatchPath :: RemoveLastEdge ()		2494469	0					
ANR	2494471	CompoundStatement		693:0:14397:14433	2494469	0					
ANR	2494472	ExpressionStatement	edges . pop_back ( )	694:1:14400:14417	2494469	0	True				
ANR	2494473	CallExpression	edges . pop_back ( )		2494469	0					
ANR	2494474	Callee	edges . pop_back		2494469	0					
ANR	2494475	MemberAccess	edges . pop_back		2494469	0					
ANR	2494476	Identifier	edges		2494469	0					
ANR	2494477	Identifier	pop_back		2494469	1					
ANR	2494478	ArgumentList			2494469	1					
ANR	2494479	ReturnStatement	return true ;	695:1:14420:14431	2494469	1	True				
ANR	2494480	Identifier	true		2494469	0					
ANR	2494481	ReturnType	bool		2494469	1					
ANR	2494482	Identifier	MatchPath :: RemoveLastEdge		2494469	2					
ANR	2494483	ParameterList			2494469	3					
ANR	2494484	CFGEntryNode	ENTRY		2494469		True				
ANR	2494485	CFGExitNode	EXIT		2494469		True				
ANR	2494486	Symbol	edges		2494469						
ANR	2494487	Symbol	true		2494469						
ANR	2494488	Function	MatchPath :: Copy	698:0:14436:14636							
ANR	2494489	FunctionDef	MatchPath :: Copy ()		2494488	0					
ANR	2494490	CompoundStatement		700:0:14467:14636	2494488	0					
ANR	2494491	IdentifierDeclStatement	MatchPath * mp = new MatchPath ( ) ;	701:1:14470:14502	2494488	0	True				
ANR	2494492	IdentifierDecl	* mp = new MatchPath ( )		2494488	0					
ANR	2494493	IdentifierDeclType	MatchPath *		2494488	0					
ANR	2494494	Identifier	mp		2494488	1					
ANR	2494495	AssignmentExpression	* mp = new MatchPath ( )		2494488	2		=			
ANR	2494496	Identifier	mp		2494488	0					
ANR	2494497	UnaryExpression	new MatchPath ( )		2494488	1					
ANR	2494498	IdentifierDeclStatement	std :: vector < MatchEdge * > :: iterator e ;	702:1:14505:14540	2494488	1	True				
ANR	2494499	IdentifierDecl	e		2494488	0					
ANR	2494500	IdentifierDeclType	std :: vector < MatchEdge * > :: iterator		2494488	0					
ANR	2494501	Identifier	e		2494488	1					
ANR	2494502	ForStatement	for ( e = edges . begin ( ) ; e != edges . end ( ) ; e ++ )		2494488	2					
ANR	2494503	ForInit	e = edges . begin ( ) ;	703:6:14548:14566	2494488	0	True				
ANR	2494504	AssignmentExpression	e = edges . begin ( )		2494488	0		=			
ANR	2494505	Identifier	e		2494488	0					
ANR	2494506	CallExpression	edges . begin ( )		2494488	1					
ANR	2494507	Callee	edges . begin		2494488	0					
ANR	2494508	MemberAccess	edges . begin		2494488	0					
ANR	2494509	Identifier	edges		2494488	0					
ANR	2494510	Identifier	begin		2494488	1					
ANR	2494511	ArgumentList			2494488	1					
ANR	2494512	Condition	e != edges . end ( )	703:26:14568:14584	2494488	1	True				
ANR	2494513	EqualityExpression	e != edges . end ( )		2494488	0		!=			
ANR	2494514	Identifier	e		2494488	0					
ANR	2494515	CallExpression	edges . end ( )		2494488	1					
ANR	2494516	Callee	edges . end		2494488	0					
ANR	2494517	MemberAccess	edges . end		2494488	0					
ANR	2494518	Identifier	edges		2494488	0					
ANR	2494519	Identifier	end		2494488	1					
ANR	2494520	ArgumentList			2494488	1					
ANR	2494521	PostIncDecOperationExpression	e ++	703:45:14587:14589	2494488	2	True				
ANR	2494522	Identifier	e		2494488	0					
ANR	2494523	IncDec	++		2494488	1					
ANR	2494524	CompoundStatement		4:51:125:125	2494488	3					
ANR	2494525	ExpressionStatement	mp -> AddMatchEdge ( * e )	704:2:14597:14619	2494488	0	True				
ANR	2494526	CallExpression	mp -> AddMatchEdge ( * e )		2494488	0					
ANR	2494527	Callee	mp -> AddMatchEdge		2494488	0					
ANR	2494528	PtrMemberAccess	mp -> AddMatchEdge		2494488	0					
ANR	2494529	Identifier	mp		2494488	0					
ANR	2494530	Identifier	AddMatchEdge		2494488	1					
ANR	2494531	ArgumentList	* e		2494488	1					
ANR	2494532	Argument	* e		2494488	0					
ANR	2494533	UnaryOperationExpression	* e		2494488	0					
ANR	2494534	UnaryOperator	*		2494488	0					
ANR	2494535	Identifier	e		2494488	1					
ANR	2494536	ReturnStatement	return mp ;	706:1:14625:14634	2494488	3	True				
ANR	2494537	Identifier	mp		2494488	0					
ANR	2494538	ReturnType	MatchPath *		2494488	1					
ANR	2494539	Identifier	MatchPath :: Copy		2494488	2					
ANR	2494540	ParameterList			2494488	3					
ANR	2494541	CFGEntryNode	ENTRY		2494488		True				
ANR	2494542	CFGExitNode	EXIT		2494488		True				
ANR	2494543	Symbol	mp		2494488						
ANR	2494544	Symbol	e		2494488						
ANR	2494545	Symbol	edges . end		2494488						
ANR	2494546	Symbol	edges		2494488						
ANR	2494547	Symbol	edges . begin		2494488						
ANR	2494548	Symbol	* e		2494488						
ANR	2494549	Function	MatchPath :: SameAs	709:0:14639:14910							
ANR	2494550	FunctionDef	MatchPath :: SameAs (MatchPath * path)		2494549	0					
ANR	2494551	CompoundStatement		711:0:14682:14910	2494549	0					
ANR	2494552	IdentifierDeclStatement	"std :: vector < MatchEdge * > :: iterator e1 , e2 ;"	712:1:14685:14725	2494549	0	True				
ANR	2494553	IdentifierDecl	e1		2494549	0					
ANR	2494554	IdentifierDeclType	std :: vector < MatchEdge * > :: iterator		2494549	0					
ANR	2494555	Identifier	e1		2494549	1					
ANR	2494556	IdentifierDecl	e2		2494549	1					
ANR	2494557	IdentifierDeclType	std :: vector < MatchEdge * > :: iterator		2494549	0					
ANR	2494558	Identifier	e2		2494549	1					
ANR	2494559	ExpressionStatement	e2 = path -> edges . begin ( )	713:1:14728:14753	2494549	1	True				
ANR	2494560	AssignmentExpression	e2 = path -> edges . begin ( )		2494549	0		=			
ANR	2494561	Identifier	e2		2494549	0					
ANR	2494562	CallExpression	path -> edges . begin ( )		2494549	1					
ANR	2494563	Callee	path -> edges . begin		2494549	0					
ANR	2494564	MemberAccess	path -> edges . begin		2494549	0					
ANR	2494565	PtrMemberAccess	path -> edges		2494549	0					
ANR	2494566	Identifier	path		2494549	0					
ANR	2494567	Identifier	edges		2494549	1					
ANR	2494568	Identifier	begin		2494549	1					
ANR	2494569	ArgumentList			2494549	1					
ANR	2494570	ForStatement	for ( e1 = edges . begin ( ) ; e1 != edges . end ( ) ; e1 ++ )		2494549	2					
ANR	2494571	ForInit	e1 = edges . begin ( ) ;	714:6:14761:14780	2494549	0	True				
ANR	2494572	AssignmentExpression	e1 = edges . begin ( )		2494549	0		=			
ANR	2494573	Identifier	e1		2494549	0					
ANR	2494574	CallExpression	edges . begin ( )		2494549	1					
ANR	2494575	Callee	edges . begin		2494549	0					
ANR	2494576	MemberAccess	edges . begin		2494549	0					
ANR	2494577	Identifier	edges		2494549	0					
ANR	2494578	Identifier	begin		2494549	1					
ANR	2494579	ArgumentList			2494549	1					
ANR	2494580	Condition	e1 != edges . end ( )	714:27:14782:14799	2494549	1	True				
ANR	2494581	EqualityExpression	e1 != edges . end ( )		2494549	0		!=			
ANR	2494582	Identifier	e1		2494549	0					
ANR	2494583	CallExpression	edges . end ( )		2494549	1					
ANR	2494584	Callee	edges . end		2494549	0					
ANR	2494585	MemberAccess	edges . end		2494549	0					
ANR	2494586	Identifier	edges		2494549	0					
ANR	2494587	Identifier	end		2494549	1					
ANR	2494588	ArgumentList			2494549	1					
ANR	2494589	PostIncDecOperationExpression	e1 ++	714:47:14802:14805	2494549	2	True				
ANR	2494590	Identifier	e1		2494549	0					
ANR	2494591	IncDec	++		2494549	1					
ANR	2494592	CompoundStatement		4:54:126:126	2494549	3					
ANR	2494593	IfStatement	if ( e2 == path -> edges . end ( ) || ( * e1 ) != ( * e2 ) )		2494549	0					
ANR	2494594	Condition	e2 == path -> edges . end ( ) || ( * e1 ) != ( * e2 )	715:6:14817:14858	2494549	0	True				
ANR	2494595	OrExpression	e2 == path -> edges . end ( ) || ( * e1 ) != ( * e2 )		2494549	0		||			
ANR	2494596	EqualityExpression	e2 == path -> edges . end ( )		2494549	0		==			
ANR	2494597	Identifier	e2		2494549	0					
ANR	2494598	CallExpression	path -> edges . end ( )		2494549	1					
ANR	2494599	Callee	path -> edges . end		2494549	0					
ANR	2494600	MemberAccess	path -> edges . end		2494549	0					
ANR	2494601	PtrMemberAccess	path -> edges		2494549	0					
ANR	2494602	Identifier	path		2494549	0					
ANR	2494603	Identifier	edges		2494549	1					
ANR	2494604	Identifier	end		2494549	1					
ANR	2494605	ArgumentList			2494549	1					
ANR	2494606	EqualityExpression	( * e1 ) != ( * e2 )		2494549	1		!=			
ANR	2494607	UnaryOperationExpression	* e1		2494549	0					
ANR	2494608	UnaryOperator	*		2494549	0					
ANR	2494609	Identifier	e1		2494549	1					
ANR	2494610	UnaryOperationExpression	* e2		2494549	1					
ANR	2494611	UnaryOperator	*		2494549	0					
ANR	2494612	Identifier	e2		2494549	1					
ANR	2494613	CompoundStatement		5:51:179:179	2494549	1					
ANR	2494614	ReturnStatement	return false ;	716:3:14867:14879	2494549	0	True				
ANR	2494615	Identifier	false		2494549	0					
ANR	2494616	ExpressionStatement	e2 ++	718:2:14887:14891	2494549	1	True				
ANR	2494617	PostIncDecOperationExpression	e2 ++		2494549	0					
ANR	2494618	Identifier	e2		2494549	0					
ANR	2494619	IncDec	++		2494549	1					
ANR	2494620	ReturnStatement	return true ;	720:1:14897:14908	2494549	3	True				
ANR	2494621	Identifier	true		2494549	0					
ANR	2494622	ReturnType	bool		2494549	1					
ANR	2494623	Identifier	MatchPath :: SameAs		2494549	2					
ANR	2494624	ParameterList	MatchPath * path		2494549	3					
ANR	2494625	Parameter	MatchPath * path	710:8:14664:14678	2494549	0	True				
ANR	2494626	ParameterType	MatchPath *		2494549	0					
ANR	2494627	Identifier	path		2494549	1					
ANR	2494628	CFGEntryNode	ENTRY		2494549		True				
ANR	2494629	CFGExitNode	EXIT		2494549		True				
ANR	2494630	Symbol	edges		2494549						
ANR	2494631	Symbol	edges . begin		2494549						
ANR	2494632	Symbol	false		2494549						
ANR	2494633	Symbol	e1		2494549						
ANR	2494634	Symbol	e2		2494549						
ANR	2494635	Symbol	path -> edges . begin		2494549						
ANR	2494636	Symbol	* e2		2494549						
ANR	2494637	Symbol	path		2494549						
ANR	2494638	Symbol	* e1		2494549						
ANR	2494639	Symbol	path -> edges		2494549						
ANR	2494640	Symbol	edges . end		2494549						
ANR	2494641	Symbol	true		2494549						
ANR	2494642	Symbol	* path		2494549						
ANR	2494643	Symbol	path -> edges . end		2494549						
ANR	2494644	Function	MatchPath :: GetNumEdges	723:0:14913:14978							
ANR	2494645	FunctionDef	MatchPath :: GetNumEdges ()		2494644	0					
ANR	2494646	CompoundStatement		725:0:14953:14978	2494644	0					
ANR	2494647	ReturnStatement	return edges . size ( ) ;	726:1:14956:14976	2494644	0	True				
ANR	2494648	CallExpression	edges . size ( )		2494644	0					
ANR	2494649	Callee	edges . size		2494644	0					
ANR	2494650	MemberAccess	edges . size		2494644	0					
ANR	2494651	Identifier	edges		2494644	0					
ANR	2494652	Identifier	size		2494644	1					
ANR	2494653	ArgumentList			2494644	1					
ANR	2494654	ReturnType	unsigned int		2494644	1					
ANR	2494655	Identifier	MatchPath :: GetNumEdges		2494644	2					
ANR	2494656	ParameterList			2494644	3					
ANR	2494657	CFGEntryNode	ENTRY		2494644		True				
ANR	2494658	CFGExitNode	EXIT		2494644		True				
ANR	2494659	Symbol	edges . size		2494644						
ANR	2494660	Symbol	edges		2494644						
ANR	2494661	Function	MatchPath :: GetMatchEdge	729:0:14981:15112							
ANR	2494662	FunctionDef	MatchPath :: GetMatchEdge (unsigned int i)		2494661	0					
ANR	2494663	CompoundStatement		731:0:15035:15112	2494661	0					
ANR	2494664	IfStatement	if ( i < edges . size ( ) )		2494661	0					
ANR	2494665	Condition	i < edges . size ( )	732:5:15042:15058	2494661	0	True				
ANR	2494666	RelationalExpression	i < edges . size ( )		2494661	0		<			
ANR	2494667	Identifier	i		2494661	0					
ANR	2494668	CallExpression	edges . size ( )		2494661	1					
ANR	2494669	Callee	edges . size		2494661	0					
ANR	2494670	MemberAccess	edges . size		2494661	0					
ANR	2494671	Identifier	edges		2494661	0					
ANR	2494672	Identifier	size		2494661	1					
ANR	2494673	ArgumentList			2494661	1					
ANR	2494674	CompoundStatement		2:25:26:26	2494661	1					
ANR	2494675	ReturnStatement	return edges [ i ] ;	733:2:15066:15081	2494661	0	True				
ANR	2494676	ArrayIndexing	edges [ i ]		2494661	0					
ANR	2494677	Identifier	edges		2494661	0					
ANR	2494678	Identifier	i		2494661	1					
ANR	2494679	ElseStatement	else		2494661	0					
ANR	2494680	CompoundStatement		5:6:56:56	2494661	0					
ANR	2494681	ReturnStatement	return NULL ;	736:2:15096:15107	2494661	0	True				
ANR	2494682	Identifier	NULL		2494661	0					
ANR	2494683	ReturnType	MatchEdge *		2494661	1					
ANR	2494684	Identifier	MatchPath :: GetMatchEdge		2494661	2					
ANR	2494685	ParameterList	unsigned int i		2494661	3					
ANR	2494686	Parameter	unsigned int i	730:14:15018:15031	2494661	0	True				
ANR	2494687	ParameterType	unsigned int		2494661	0					
ANR	2494688	Identifier	i		2494661	1					
ANR	2494689	CFGEntryNode	ENTRY		2494661		True				
ANR	2494690	CFGExitNode	EXIT		2494661		True				
ANR	2494691	Symbol	edges . size		2494661						
ANR	2494692	Symbol	* i		2494661						
ANR	2494693	Symbol	NULL		2494661						
ANR	2494694	Symbol	edges		2494661						
ANR	2494695	Symbol	i		2494661						
ANR	2494696	Symbol	* edges		2494661						
ANR	2494697	Function	MatchPath :: ToString	740:0:15115:15450							
ANR	2494698	FunctionDef	MatchPath :: ToString (std :: string & buffer)		2494697	0					
ANR	2494699	CompoundStatement		742:0:15164:15450	2494697	0					
ANR	2494700	IdentifierDeclStatement	char tempBuf [ 512 ] ;	743:1:15167:15184	2494697	0	True				
ANR	2494701	IdentifierDecl	tempBuf [ 512 ]		2494697	0					
ANR	2494702	IdentifierDeclType	char [ 512 ]		2494697	0					
ANR	2494703	Identifier	tempBuf		2494697	1					
ANR	2494704	PrimaryExpression	512		2494697	2					
ANR	2494705	ExpressionStatement	"buffer += ""{"""	744:1:15187:15200	2494697	1	True				
ANR	2494706	AssignmentExpression	"buffer += ""{"""		2494697	0		+=			
ANR	2494707	Identifier	buffer		2494697	0					
ANR	2494708	PrimaryExpression	"""{"""		2494697	1					
ANR	2494709	IdentifierDeclStatement	std :: vector < MatchEdge * > :: iterator e ;	745:1:15203:15238	2494697	2	True				
ANR	2494710	IdentifierDecl	e		2494697	0					
ANR	2494711	IdentifierDeclType	std :: vector < MatchEdge * > :: iterator		2494697	0					
ANR	2494712	Identifier	e		2494697	1					
ANR	2494713	ForStatement	for ( e = edges . begin ( ) ; e != edges . end ( ) ; e ++ )		2494697	3					
ANR	2494714	ForInit	e = edges . begin ( ) ;	746:6:15246:15264	2494697	0	True				
ANR	2494715	AssignmentExpression	e = edges . begin ( )		2494697	0		=			
ANR	2494716	Identifier	e		2494697	0					
ANR	2494717	CallExpression	edges . begin ( )		2494697	1					
ANR	2494718	Callee	edges . begin		2494697	0					
ANR	2494719	MemberAccess	edges . begin		2494697	0					
ANR	2494720	Identifier	edges		2494697	0					
ANR	2494721	Identifier	begin		2494697	1					
ANR	2494722	ArgumentList			2494697	1					
ANR	2494723	Condition	e != edges . end ( )	746:26:15266:15282	2494697	1	True				
ANR	2494724	EqualityExpression	e != edges . end ( )		2494697	0		!=			
ANR	2494725	Identifier	e		2494697	0					
ANR	2494726	CallExpression	edges . end ( )		2494697	1					
ANR	2494727	Callee	edges . end		2494697	0					
ANR	2494728	MemberAccess	edges . end		2494697	0					
ANR	2494729	Identifier	edges		2494697	0					
ANR	2494730	Identifier	end		2494697	1					
ANR	2494731	ArgumentList			2494697	1					
ANR	2494732	PostIncDecOperationExpression	e ++	746:45:15285:15287	2494697	2	True				
ANR	2494733	Identifier	e		2494697	0					
ANR	2494734	IncDec	++		2494697	1					
ANR	2494735	CompoundStatement		5:51:126:126	2494697	3					
ANR	2494736	IfStatement	if ( e != edges . begin ( ) )		2494697	0					
ANR	2494737	Condition	e != edges . begin ( )	747:6:15299:15317	2494697	0	True				
ANR	2494738	EqualityExpression	e != edges . begin ( )		2494697	0		!=			
ANR	2494739	Identifier	e		2494697	0					
ANR	2494740	CallExpression	edges . begin ( )		2494697	1					
ANR	2494741	Callee	edges . begin		2494697	0					
ANR	2494742	MemberAccess	edges . begin		2494697	0					
ANR	2494743	Identifier	edges		2494697	0					
ANR	2494744	Identifier	begin		2494697	1					
ANR	2494745	ArgumentList			2494697	1					
ANR	2494746	CompoundStatement		6:28:156:156	2494697	1					
ANR	2494747	ExpressionStatement	"buffer += "","""	748:3:15326:15339	2494697	0	True				
ANR	2494748	AssignmentExpression	"buffer += "","""		2494697	0		+=			
ANR	2494749	Identifier	buffer		2494697	0					
ANR	2494750	PrimaryExpression	""","""		2494697	1					
ANR	2494751	ExpressionStatement	"sprintf ( tempBuf , ""%d"" , ( * e ) -> GetEdgeNum ( ) )"	750:2:15347:15392	2494697	1	True				
ANR	2494752	CallExpression	"sprintf ( tempBuf , ""%d"" , ( * e ) -> GetEdgeNum ( ) )"		2494697	0					
ANR	2494753	Callee	sprintf		2494697	0					
ANR	2494754	Identifier	sprintf		2494697	0					
ANR	2494755	ArgumentList	tempBuf		2494697	1					
ANR	2494756	Argument	tempBuf		2494697	0					
ANR	2494757	Identifier	tempBuf		2494697	0					
ANR	2494758	Argument	"""%d"""		2494697	1					
ANR	2494759	PrimaryExpression	"""%d"""		2494697	0					
ANR	2494760	Argument	( * e ) -> GetEdgeNum ( )		2494697	2					
ANR	2494761	CallExpression	( * e ) -> GetEdgeNum ( )		2494697	0					
ANR	2494762	Callee	( * e ) -> GetEdgeNum		2494697	0					
ANR	2494763	PtrMemberAccess	( * e ) -> GetEdgeNum		2494697	0					
ANR	2494764	UnaryOperationExpression	* e		2494697	0					
ANR	2494765	UnaryOperator	*		2494697	0					
ANR	2494766	Identifier	e		2494697	1					
ANR	2494767	Identifier	GetEdgeNum		2494697	1					
ANR	2494768	ArgumentList			2494697	1					
ANR	2494769	ExpressionStatement	buffer += tempBuf	751:2:15396:15413	2494697	2	True				
ANR	2494770	AssignmentExpression	buffer += tempBuf		2494697	0		+=			
ANR	2494771	Identifier	buffer		2494697	0					
ANR	2494772	Identifier	tempBuf		2494697	1					
ANR	2494773	ExpressionStatement	"buffer += ""}"""	753:1:15421:15434	2494697	4	True				
ANR	2494774	AssignmentExpression	"buffer += ""}"""		2494697	0		+=			
ANR	2494775	Identifier	buffer		2494697	0					
ANR	2494776	PrimaryExpression	"""}"""		2494697	1					
ANR	2494777	ReturnStatement	return true ;	754:1:15437:15448	2494697	5	True				
ANR	2494778	Identifier	true		2494697	0					
ANR	2494779	ReturnType	bool		2494697	1					
ANR	2494780	Identifier	MatchPath :: ToString		2494697	2					
ANR	2494781	ParameterList	std :: string & buffer		2494697	3					
ANR	2494782	Parameter	std :: string & buffer	741:10:15142:15160	2494697	0	True				
ANR	2494783	ParameterType	std :: string &		2494697	0					
ANR	2494784	Identifier	buffer		2494697	1					
ANR	2494785	CFGEntryNode	ENTRY		2494697		True				
ANR	2494786	CFGExitNode	EXIT		2494697		True				
ANR	2494787	Symbol	e		2494697						
ANR	2494788	Symbol	edges . end		2494697						
ANR	2494789	Symbol	( * e ) -> GetEdgeNum		2494697						
ANR	2494790	Symbol	* * e		2494697						
ANR	2494791	Symbol	edges		2494697						
ANR	2494792	Symbol	edges . begin		2494697						
ANR	2494793	Symbol	true		2494697						
ANR	2494794	Symbol	buffer		2494697						
ANR	2494795	Symbol	tempBuf		2494697						
ANR	2494796	Symbol	* e		2494697						
ANR	2494797	Function	PortGraph :: PortGraph	758:0:15474:15543							
ANR	2494798	FunctionDef	PortGraph :: PortGraph ()		2494797	0					
ANR	2494799	CompoundStatement		760:0:15499:15543	2494797	0					
ANR	2494800	ExpressionStatement	nextMatchEdgeNum = 0	761:1:15502:15522	2494797	0	True				
ANR	2494801	AssignmentExpression	nextMatchEdgeNum = 0		2494797	0		=			
ANR	2494802	Identifier	nextMatchEdgeNum		2494797	0					
ANR	2494803	PrimaryExpression	0		2494797	1					
ANR	2494804	ExpressionStatement	numPortNodes = 0	762:1:15525:15541	2494797	1	True				
ANR	2494805	AssignmentExpression	numPortNodes = 0		2494797	0		=			
ANR	2494806	Identifier	numPortNodes		2494797	0					
ANR	2494807	PrimaryExpression	0		2494797	1					
ANR	2494808	Identifier	PortGraph :: PortGraph		2494797	1					
ANR	2494809	ParameterList			2494797	2					
ANR	2494810	CFGEntryNode	ENTRY		2494797		True				
ANR	2494811	CFGExitNode	EXIT		2494797		True				
ANR	2494812	Symbol	numPortNodes		2494797						
ANR	2494813	Symbol	nextMatchEdgeNum		2494797						
ANR	2494814	Function	PortGraph :: ~PortGraph	765:0:15546:15669							
ANR	2494815	FunctionDef	PortGraph :: ~PortGraph ()		2494814	0					
ANR	2494816	CompoundStatement		767:0:15572:15669	2494814	0					
ANR	2494817	Identifier	PortGraph :: ~PortGraph		2494814	1					
ANR	2494818	ParameterList			2494814	2					
ANR	2494819	CFGEntryNode	ENTRY		2494814		True				
ANR	2494820	CFGExitNode	EXIT		2494814		True				
ANR	2494821	Function	PortGraph :: Initialize	774:0:15724:21779							
ANR	2494822	FunctionDef	PortGraph :: Initialize (std :: vector < classad :: ClassAd * > & ads)		2494821	0					
ANR	2494823	CompoundStatement		776:0:15791:21779	2494821	0					
ANR	2494824	IdentifierDeclStatement	int adNum = 0 ;	777:1:15794:15836	2494821	0	True				
ANR	2494825	IdentifierDecl	adNum = 0		2494821	0					
ANR	2494826	IdentifierDeclType	int		2494821	0					
ANR	2494827	Identifier	adNum		2494821	1					
ANR	2494828	AssignmentExpression	adNum = 0		2494821	2		=			
ANR	2494829	Identifier	adNum		2494821	0					
ANR	2494830	PrimaryExpression	0		2494821	1					
ANR	2494831	IdentifierDeclStatement	int portNum = 0 ;	778:1:15839:15883	2494821	1	True				
ANR	2494832	IdentifierDecl	portNum = 0		2494821	0					
ANR	2494833	IdentifierDeclType	int		2494821	0					
ANR	2494834	Identifier	portNum		2494821	1					
ANR	2494835	AssignmentExpression	portNum = 0		2494821	2		=			
ANR	2494836	Identifier	portNum		2494821	0					
ANR	2494837	PrimaryExpression	0		2494821	1					
ANR	2494838	IdentifierDeclStatement	bool attrIsRequirements = false ;	779:1:15886:15945	2494821	2	True				
ANR	2494839	IdentifierDecl	attrIsRequirements = false		2494821	0					
ANR	2494840	IdentifierDeclType	bool		2494821	0					
ANR	2494841	Identifier	attrIsRequirements		2494821	1					
ANR	2494842	AssignmentExpression	attrIsRequirements = false		2494821	2		=			
ANR	2494843	Identifier	false		2494821	0					
ANR	2494844	Identifier	false		2494821	1					
ANR	2494845	IdentifierDeclStatement	std :: string attr ;	780:1:15948:15985	2494821	3	True				
ANR	2494846	IdentifierDecl	attr		2494821	0					
ANR	2494847	IdentifierDeclType	std :: string		2494821	0					
ANR	2494848	Identifier	attr		2494821	1					
ANR	2494849	IdentifierDeclStatement	std :: string label ;	781:1:15988:16026	2494821	4	True				
ANR	2494850	IdentifierDecl	label		2494821	0					
ANR	2494851	IdentifierDeclType	std :: string		2494821	0					
ANR	2494852	Identifier	label		2494821	1					
ANR	2494853	IdentifierDeclStatement	std :: string rLabel ;	782:1:16029:16068	2494821	5	True				
ANR	2494854	IdentifierDecl	rLabel		2494821	0					
ANR	2494855	IdentifierDeclType	std :: string		2494821	0					
ANR	2494856	Identifier	rLabel		2494821	1					
ANR	2494857	IdentifierDeclStatement	std :: string rAttr ;	783:1:16071:16109	2494821	6	True				
ANR	2494858	IdentifierDecl	rAttr		2494821	0					
ANR	2494859	IdentifierDeclType	std :: string		2494821	0					
ANR	2494860	Identifier	rAttr		2494821	1					
ANR	2494861	IdentifierDeclStatement	const classad :: ExprTree * expr ;	784:4:16115:16153	2494821	7	True				
ANR	2494862	IdentifierDecl	* expr		2494821	0					
ANR	2494863	IdentifierDeclType	const classad :: ExprTree *		2494821	0					
ANR	2494864	Identifier	expr		2494821	1					
ANR	2494865	IdentifierDeclStatement	classad :: ExprTree * flatExpr ;	785:4:16159:16201	2494821	8	True				
ANR	2494866	IdentifierDecl	* flatExpr		2494821	0					
ANR	2494867	IdentifierDeclType	classad :: ExprTree *		2494821	0					
ANR	2494868	Identifier	flatExpr		2494821	1					
ANR	2494869	IdentifierDeclStatement	classad :: ExprTree * reqExpr ;	786:1:16204:16245	2494821	9	True				
ANR	2494870	IdentifierDecl	* reqExpr		2494821	0					
ANR	2494871	IdentifierDeclType	classad :: ExprTree *		2494821	0					
ANR	2494872	Identifier	reqExpr		2494821	1					
ANR	2494873	IdentifierDeclStatement	const classad :: ExprList * el ;	787:4:16251:16287	2494821	10	True				
ANR	2494874	IdentifierDecl	* el		2494821	0					
ANR	2494875	IdentifierDeclType	const classad :: ExprList *		2494821	0					
ANR	2494876	Identifier	el		2494821	1					
ANR	2494877	IdentifierDeclStatement	classad :: References refs ;	788:1:16290:16327	2494821	11	True				
ANR	2494878	IdentifierDecl	refs		2494821	0					
ANR	2494879	IdentifierDeclType	classad :: References		2494821	0					
ANR	2494880	Identifier	refs		2494821	1					
ANR	2494881	IdentifierDeclStatement	classad :: ClassAd * ad ;	789:1:16330:16354	2494821	12	True				
ANR	2494882	IdentifierDecl	* ad		2494821	0					
ANR	2494883	IdentifierDeclType	classad :: ClassAd *		2494821	0					
ANR	2494884	Identifier	ad		2494821	1					
ANR	2494885	IdentifierDeclStatement	classad :: ClassAd * portAd ;	790:4:16360:16400	2494821	13	True				
ANR	2494886	IdentifierDecl	* portAd		2494821	0					
ANR	2494887	IdentifierDeclType	classad :: ClassAd *		2494821	0					
ANR	2494888	Identifier	portAd		2494821	1					
ANR	2494889	IdentifierDeclStatement	classad :: Value val ;	791:1:16403:16439	2494821	14	True				
ANR	2494890	IdentifierDecl	val		2494821	0					
ANR	2494891	IdentifierDeclType	classad :: Value		2494821	0					
ANR	2494892	Identifier	val		2494821	1					
ANR	2494893	IdentifierDeclStatement	classad :: References :: iterator r ;	792:4:16445:16479	2494821	15	True				
ANR	2494894	IdentifierDecl	r		2494821	0					
ANR	2494895	IdentifierDeclType	classad :: References :: iterator		2494821	0					
ANR	2494896	Identifier	r		2494821	1					
ANR	2494897	IdentifierDeclStatement	classad :: ExprListIterator l ;	793:4:16485:16519	2494821	16	True				
ANR	2494898	IdentifierDecl	l		2494821	0					
ANR	2494899	IdentifierDeclType	classad :: ExprListIterator		2494821	0					
ANR	2494900	Identifier	l		2494821	1					
ANR	2494901	IdentifierDeclStatement	classad :: ClassAdIterator c ;	794:1:16522:16556	2494821	17	True				
ANR	2494902	IdentifierDecl	c		2494821	0					
ANR	2494903	IdentifierDeclType	classad :: ClassAdIterator		2494821	0					
ANR	2494904	Identifier	c		2494821	1					
ANR	2494905	IdentifierDeclStatement	std :: vector < classad :: ClassAd * > :: iterator a ;	795:1:16559:16602	2494821	18	True				
ANR	2494906	IdentifierDecl	a		2494821	0					
ANR	2494907	IdentifierDeclType	std :: vector < classad :: ClassAd * > :: iterator		2494821	0					
ANR	2494908	Identifier	a		2494821	1					
ANR	2494909	IdentifierDeclStatement	PortNodeMap pNodes ;	796:1:16605:16644	2494821	19	True				
ANR	2494910	IdentifierDecl	pNodes		2494821	0					
ANR	2494911	IdentifierDeclType	PortNodeMap		2494821	0					
ANR	2494912	Identifier	pNodes		2494821	1					
ANR	2494913	IdentifierDeclStatement	PortNode * pNode ;	797:1:16647:16686	2494821	20	True				
ANR	2494914	IdentifierDecl	* pNode		2494821	0					
ANR	2494915	IdentifierDeclType	PortNode *		2494821	0					
ANR	2494916	Identifier	pNode		2494821	1					
ANR	2494917	IdentifierDeclStatement	PortNode * rPortNode ;	798:1:16689:16732	2494821	21	True				
ANR	2494918	IdentifierDecl	* rPortNode		2494821	0					
ANR	2494919	IdentifierDeclType	PortNode *		2494821	0					
ANR	2494920	Identifier	rPortNode		2494821	1					
ANR	2494921	IdentifierDeclStatement	ExtAttrNode * eNode ;	799:1:16735:16774	2494821	22	True				
ANR	2494922	IdentifierDecl	* eNode		2494821	0					
ANR	2494923	IdentifierDeclType	ExtAttrNode *		2494821	0					
ANR	2494924	Identifier	eNode		2494821	1					
ANR	2494925	IdentifierDeclStatement	MultiProfile * requirements ;	800:1:16777:16823	2494821	23	True				
ANR	2494926	IdentifierDecl	* requirements		2494821	0					
ANR	2494927	IdentifierDeclType	MultiProfile *		2494821	0					
ANR	2494928	Identifier	requirements		2494821	1					
ANR	2494929	IdentifierDeclStatement	Profile * profile = NULL ;	801:1:16826:16874	2494821	24	True				
ANR	2494930	IdentifierDecl	* profile = NULL		2494821	0					
ANR	2494931	IdentifierDeclType	Profile *		2494821	0					
ANR	2494932	Identifier	profile		2494821	1					
ANR	2494933	AssignmentExpression	* profile = NULL		2494821	2		=			
ANR	2494934	Identifier	NULL		2494821	0					
ANR	2494935	Identifier	NULL		2494821	1					
ANR	2494936	IdentifierDeclStatement	classad :: PrettyPrint pp ;	802:1:16877:16912	2494821	25	True				
ANR	2494937	IdentifierDecl	pp		2494821	0					
ANR	2494938	IdentifierDeclType	classad :: PrettyPrint		2494821	0					
ANR	2494939	Identifier	pp		2494821	1					
ANR	2494940	IdentifierDeclStatement	std :: string buffer ;	803:1:16915:16954	2494821	26	True				
ANR	2494941	IdentifierDecl	buffer		2494821	0					
ANR	2494942	IdentifierDeclType	std :: string		2494821	0					
ANR	2494943	Identifier	buffer		2494821	1					
ANR	2494944	IdentifierDeclStatement	unsigned int clauseNum ;	804:1:16957:16999	2494821	27	True				
ANR	2494945	IdentifierDecl	clauseNum		2494821	0					
ANR	2494946	IdentifierDeclType	unsigned int		2494821	0					
ANR	2494947	Identifier	clauseNum		2494821	1					
ANR	2494948	ForStatement	for ( a = ads . begin ( ) ; a != ads . end ( ) ; a ++ )		2494821	28					
ANR	2494949	ForInit	a = ads . begin ( ) ;	807:6:17032:17048	2494821	0	True				
ANR	2494950	AssignmentExpression	a = ads . begin ( )		2494821	0		=			
ANR	2494951	Identifier	a		2494821	0					
ANR	2494952	CallExpression	ads . begin ( )		2494821	1					
ANR	2494953	Callee	ads . begin		2494821	0					
ANR	2494954	MemberAccess	ads . begin		2494821	0					
ANR	2494955	Identifier	ads		2494821	0					
ANR	2494956	Identifier	begin		2494821	1					
ANR	2494957	ArgumentList			2494821	1					
ANR	2494958	Condition	a != ads . end ( )	807:25:17051:17065	2494821	1	True				
ANR	2494959	EqualityExpression	a != ads . end ( )		2494821	0		!=			
ANR	2494960	Identifier	a		2494821	0					
ANR	2494961	CallExpression	ads . end ( )		2494821	1					
ANR	2494962	Callee	ads . end		2494821	0					
ANR	2494963	MemberAccess	ads . end		2494821	0					
ANR	2494964	Identifier	ads		2494821	0					
ANR	2494965	Identifier	end		2494821	1					
ANR	2494966	ArgumentList			2494821	1					
ANR	2494967	PostIncDecOperationExpression	a ++	807:42:17068:17070	2494821	2	True				
ANR	2494968	Identifier	a		2494821	0					
ANR	2494969	IncDec	++		2494821	1					
ANR	2494970	CompoundStatement		32:48:1282:1282	2494821	3					
ANR	2494971	ExpressionStatement	ad = * a	808:2:17078:17085	2494821	0	True				
ANR	2494972	AssignmentExpression	ad = * a		2494821	0		=			
ANR	2494973	Identifier	ad		2494821	0					
ANR	2494974	UnaryOperationExpression	* a		2494821	1					
ANR	2494975	UnaryOperator	*		2494821	0					
ANR	2494976	Identifier	a		2494821	1					
ANR	2494977	IfStatement	"if ( ! ad -> EvaluateAttr ( ""Ports"" , val ) )"		2494821	1					
ANR	2494978	Condition	"! ad -> EvaluateAttr ( ""Ports"" , val )"	811:6:17151:17183	2494821	0	True				
ANR	2494979	UnaryOperationExpression	"! ad -> EvaluateAttr ( ""Ports"" , val )"		2494821	0					
ANR	2494980	UnaryOperator	!		2494821	0					
ANR	2494981	CallExpression	"ad -> EvaluateAttr ( ""Ports"" , val )"		2494821	1					
ANR	2494982	Callee	ad -> EvaluateAttr		2494821	0					
ANR	2494983	PtrMemberAccess	ad -> EvaluateAttr		2494821	0					
ANR	2494984	Identifier	ad		2494821	0					
ANR	2494985	Identifier	EvaluateAttr		2494821	1					
ANR	2494986	ArgumentList	"""Ports"""		2494821	1					
ANR	2494987	Argument	"""Ports"""		2494821	0					
ANR	2494988	PrimaryExpression	"""Ports"""		2494821	0					
ANR	2494989	Argument	val		2494821	1					
ANR	2494990	Identifier	val		2494821	0					
ANR	2494991	CompoundStatement		36:42:1395:1395	2494821	1					
ANR	2494992	ExpressionStatement	"cout << ""error: Failed to get 'Ports' attribute"" << endl"	812:3:17192:17248	2494821	0	True				
ANR	2494993	ShiftExpression	"cout << ""error: Failed to get 'Ports' attribute"" << endl"		2494821	0		<<			
ANR	2494994	Identifier	cout		2494821	0					
ANR	2494995	ShiftExpression	"""error: Failed to get 'Ports' attribute"" << endl"		2494821	1		<<			
ANR	2494996	PrimaryExpression	"""error: Failed to get 'Ports' attribute"""		2494821	0					
ANR	2494997	Identifier	endl		2494821	1					
ANR	2494998	ReturnStatement	return false ;	813:3:17253:17265	2494821	1	True				
ANR	2494999	Identifier	false		2494821	0					
ANR	2495000	IfStatement	if ( ! val . IsListValue ( el ) )		2494821	2					
ANR	2495001	Condition	! val . IsListValue ( el )	815:6:17277:17298	2494821	0	True				
ANR	2495002	UnaryOperationExpression	! val . IsListValue ( el )		2494821	0					
ANR	2495003	UnaryOperator	!		2494821	0					
ANR	2495004	CallExpression	val . IsListValue ( el )		2494821	1					
ANR	2495005	Callee	val . IsListValue		2494821	0					
ANR	2495006	MemberAccess	val . IsListValue		2494821	0					
ANR	2495007	Identifier	val		2494821	0					
ANR	2495008	Identifier	IsListValue		2494821	1					
ANR	2495009	ArgumentList	el		2494821	1					
ANR	2495010	Argument	el		2494821	0					
ANR	2495011	Identifier	el		2494821	0					
ANR	2495012	CompoundStatement		40:31:1510:1510	2494821	1					
ANR	2495013	ExpressionStatement	"cout << ""error: 'Ports' attribute not a list"" << endl"	816:3:17307:17360	2494821	0	True				
ANR	2495014	ShiftExpression	"cout << ""error: 'Ports' attribute not a list"" << endl"		2494821	0		<<			
ANR	2495015	Identifier	cout		2494821	0					
ANR	2495016	ShiftExpression	"""error: 'Ports' attribute not a list"" << endl"		2494821	1		<<			
ANR	2495017	PrimaryExpression	"""error: 'Ports' attribute not a list"""		2494821	0					
ANR	2495018	Identifier	endl		2494821	1					
ANR	2495019	ReturnStatement	return false ;	817:3:17365:17377	2494821	1	True				
ANR	2495020	Identifier	false		2494821	0					
ANR	2495021	ForStatement	for ( l . Initialize ( el ) ; ! l . IsAfterLast ( ) ; l . NextExpr ( ) )		2494821	3					
ANR	2495022	ForInit	l . Initialize ( el ) ;	821:7:17419:17438	2494821	0	True				
ANR	2495023	CallExpression	l . Initialize ( el )		2494821	0					
ANR	2495024	Callee	l . Initialize		2494821	0					
ANR	2495025	MemberAccess	l . Initialize		2494821	0					
ANR	2495026	Identifier	l		2494821	0					
ANR	2495027	Identifier	Initialize		2494821	1					
ANR	2495028	ArgumentList	el		2494821	1					
ANR	2495029	Argument	el		2494821	0					
ANR	2495030	Identifier	el		2494821	0					
ANR	2495031	Condition	! l . IsAfterLast ( )	821:28:17440:17456	2494821	1	True				
ANR	2495032	UnaryOperationExpression	! l . IsAfterLast ( )		2494821	0					
ANR	2495033	UnaryOperator	!		2494821	0					
ANR	2495034	CallExpression	l . IsAfterLast ( )		2494821	1					
ANR	2495035	Callee	l . IsAfterLast		2494821	0					
ANR	2495036	MemberAccess	l . IsAfterLast		2494821	0					
ANR	2495037	Identifier	l		2494821	0					
ANR	2495038	Identifier	IsAfterLast		2494821	1					
ANR	2495039	ArgumentList			2494821	1					
ANR	2495040	CallExpression	l . NextExpr ( )	821:47:17459:17471	2494821	2	True				
ANR	2495041	Callee	l . NextExpr		2494821	0					
ANR	2495042	MemberAccess	l . NextExpr		2494821	0					
ANR	2495043	Identifier	l		2494821	0					
ANR	2495044	Identifier	NextExpr		2494821	1					
ANR	2495045	ArgumentList			2494821	1					
ANR	2495046	CompoundStatement		46:63:1683:1683	2494821	3					
ANR	2495047	IfStatement	if ( ! ( expr = l . CurrentExpr ( ) ) || expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE )		2494821	0					
ANR	2495048	Condition	! ( expr = l . CurrentExpr ( ) ) || expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE	824:7:17526:17610	2494821	0	True				
ANR	2495049	OrExpression	! ( expr = l . CurrentExpr ( ) ) || expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE		2494821	0		||			
ANR	2495050	UnaryOperationExpression	! ( expr = l . CurrentExpr ( ) )		2494821	0					
ANR	2495051	UnaryOperator	!		2494821	0					
ANR	2495052	AssignmentExpression	expr = l . CurrentExpr ( )		2494821	1		=			
ANR	2495053	Identifier	expr		2494821	0					
ANR	2495054	CallExpression	l . CurrentExpr ( )		2494821	1					
ANR	2495055	Callee	l . CurrentExpr		2494821	0					
ANR	2495056	MemberAccess	l . CurrentExpr		2494821	0					
ANR	2495057	Identifier	l		2494821	0					
ANR	2495058	Identifier	CurrentExpr		2494821	1					
ANR	2495059	ArgumentList			2494821	1					
ANR	2495060	EqualityExpression	expr -> GetKind ( ) != classad :: ExprTree :: CLASSAD_NODE		2494821	1		!=			
ANR	2495061	CallExpression	expr -> GetKind ( )		2494821	0					
ANR	2495062	Callee	expr -> GetKind		2494821	0					
ANR	2495063	PtrMemberAccess	expr -> GetKind		2494821	0					
ANR	2495064	Identifier	expr		2494821	0					
ANR	2495065	Identifier	GetKind		2494821	1					
ANR	2495066	ArgumentList			2494821	1					
ANR	2495067	Identifier	classad :: ExprTree :: CLASSAD_NODE		2494821	1					
ANR	2495068	CompoundStatement		50:57:1822:1822	2494821	1					
ANR	2495069	ExpressionStatement	"cout << ""error: Port is not a classad\\n"" << endl"	826:4:17620:17668	2494821	0	True				
ANR	2495070	ShiftExpression	"cout << ""error: Port is not a classad\\n"" << endl"		2494821	0		<<			
ANR	2495071	Identifier	cout		2494821	0					
ANR	2495072	ShiftExpression	"""error: Port is not a classad\\n"" << endl"		2494821	1		<<			
ANR	2495073	PrimaryExpression	"""error: Port is not a classad\\n"""		2494821	0					
ANR	2495074	Identifier	endl		2494821	1					
ANR	2495075	ReturnStatement	return false ;	827:4:17674:17686	2494821	1	True				
ANR	2495076	Identifier	false		2494821	0					
ANR	2495077	ExpressionStatement	portAd = ( classad :: ClassAd * ) expr	831:3:17721:17755	2494821	1	True				
ANR	2495078	AssignmentExpression	portAd = ( classad :: ClassAd * ) expr		2494821	0		=			
ANR	2495079	Identifier	portAd		2494821	0					
ANR	2495080	CastExpression	( classad :: ClassAd * ) expr		2494821	1					
ANR	2495081	CastTarget	classad :: ClassAd *		2494821	0					
ANR	2495082	Identifier	expr		2494821	1					
ANR	2495083	ExpressionStatement	"pNode = new PortNode ( ad , adNum , portNum )"	832:3:17760:17802	2494821	2	True				
ANR	2495084	AssignmentExpression	"pNode = new PortNode ( ad , adNum , portNum )"		2494821	0		=			
ANR	2495085	Identifier	pNode		2494821	0					
ANR	2495086	Expression	"ad , adNum , portNum"		2494821	1					
ANR	2495087	Identifier	ad		2494821	0					
ANR	2495088	Expression	"adNum , portNum"		2494821	1					
ANR	2495089	Identifier	adNum		2494821	0					
ANR	2495090	Identifier	portNum		2494821	1					
ANR	2495091	IfStatement	"if ( ! portAd -> EvaluateAttrString ( ""label"" , label ) )"		2494821	3					
ANR	2495092	Condition	"! portAd -> EvaluateAttrString ( ""label"" , label )"	835:7:17873:17917	2494821	0	True				
ANR	2495093	UnaryOperationExpression	"! portAd -> EvaluateAttrString ( ""label"" , label )"		2494821	0					
ANR	2495094	UnaryOperator	!		2494821	0					
ANR	2495095	CallExpression	"portAd -> EvaluateAttrString ( ""label"" , label )"		2494821	1					
ANR	2495096	Callee	portAd -> EvaluateAttrString		2494821	0					
ANR	2495097	PtrMemberAccess	portAd -> EvaluateAttrString		2494821	0					
ANR	2495098	Identifier	portAd		2494821	0					
ANR	2495099	Identifier	EvaluateAttrString		2494821	1					
ANR	2495100	ArgumentList	"""label"""		2494821	1					
ANR	2495101	Argument	"""label"""		2494821	0					
ANR	2495102	PrimaryExpression	"""label"""		2494821	0					
ANR	2495103	Argument	label		2494821	1					
ANR	2495104	Identifier	label		2494821	0					
ANR	2495105	CompoundStatement		60:55:2129:2129	2494821	1					
ANR	2495106	ExpressionStatement	"cout << ""error: Bad or missing port label\\n"" << endl"	836:4:17927:17979	2494821	0	True				
ANR	2495107	ShiftExpression	"cout << ""error: Bad or missing port label\\n"" << endl"		2494821	0		<<			
ANR	2495108	Identifier	cout		2494821	0					
ANR	2495109	ShiftExpression	"""error: Bad or missing port label\\n"" << endl"		2494821	1		<<			
ANR	2495110	PrimaryExpression	"""error: Bad or missing port label\\n"""		2494821	0					
ANR	2495111	Identifier	endl		2494821	1					
ANR	2495112	ReturnStatement	return false ;	837:4:17985:17997	2494821	1	True				
ANR	2495113	Identifier	false		2494821	0					
ANR	2495114	ExpressionStatement	pNodes [ label ] = pNode	841:3:18037:18058	2494821	4	True				
ANR	2495115	AssignmentExpression	pNodes [ label ] = pNode		2494821	0		=			
ANR	2495116	ArrayIndexing	pNodes [ label ]		2494821	0					
ANR	2495117	Identifier	pNodes		2494821	0					
ANR	2495118	Identifier	label		2494821	1					
ANR	2495119	Identifier	pNode		2494821	1					
ANR	2495120	IfStatement	"if ( ! ( reqExpr = portAd -> Lookup ( ""Requirements"" ) ) )"		2494821	5					
ANR	2495121	Condition	"! ( reqExpr = portAd -> Lookup ( ""Requirements"" ) )"	845:7:18097:18143	2494821	0	True				
ANR	2495122	UnaryOperationExpression	"! ( reqExpr = portAd -> Lookup ( ""Requirements"" ) )"		2494821	0					
ANR	2495123	UnaryOperator	!		2494821	0					
ANR	2495124	AssignmentExpression	"reqExpr = portAd -> Lookup ( ""Requirements"" )"		2494821	1		=			
ANR	2495125	Identifier	reqExpr		2494821	0					
ANR	2495126	CallExpression	"portAd -> Lookup ( ""Requirements"" )"		2494821	1					
ANR	2495127	Callee	portAd -> Lookup		2494821	0					
ANR	2495128	PtrMemberAccess	portAd -> Lookup		2494821	0					
ANR	2495129	Identifier	portAd		2494821	0					
ANR	2495130	Identifier	Lookup		2494821	1					
ANR	2495131	ArgumentList	"""Requirements"""		2494821	1					
ANR	2495132	Argument	"""Requirements"""		2494821	0					
ANR	2495133	PrimaryExpression	"""Requirements"""		2494821	0					
ANR	2495134	CompoundStatement		70:57:2355:2355	2494821	1					
ANR	2495135	ExpressionStatement	"pp . Unparse ( buffer , portAd )"	846:4:18153:18181	2494821	0	True				
ANR	2495136	CallExpression	"pp . Unparse ( buffer , portAd )"		2494821	0					
ANR	2495137	Callee	pp . Unparse		2494821	0					
ANR	2495138	MemberAccess	pp . Unparse		2494821	0					
ANR	2495139	Identifier	pp		2494821	0					
ANR	2495140	Identifier	Unparse		2494821	1					
ANR	2495141	ArgumentList	buffer		2494821	1					
ANR	2495142	Argument	buffer		2494821	0					
ANR	2495143	Identifier	buffer		2494821	0					
ANR	2495144	Argument	portAd		2494821	1					
ANR	2495145	Identifier	portAd		2494821	0					
ANR	2495146	ExpressionStatement	"cout << ""error looking up Requirements expression in "" << buffer << endl"	847:4:18187:18265	2494821	1	True				
ANR	2495147	ShiftExpression	"cout << ""error looking up Requirements expression in "" << buffer << endl"		2494821	0		<<			
ANR	2495148	Identifier	cout		2494821	0					
ANR	2495149	ShiftExpression	"""error looking up Requirements expression in "" << buffer << endl"		2494821	1		<<			
ANR	2495150	PrimaryExpression	"""error looking up Requirements expression in """		2494821	0					
ANR	2495151	ShiftExpression	buffer << endl		2494821	1		<<			
ANR	2495152	Identifier	buffer		2494821	0					
ANR	2495153	Identifier	endl		2494821	1					
ANR	2495154	ReturnStatement	return false ;	849:4:18271:18283	2494821	2	True				
ANR	2495155	Identifier	false		2494821	0					
ANR	2495156	ExpressionStatement	requirements = new MultiProfile ( )	852:3:18297:18331	2494821	6	True				
ANR	2495157	AssignmentExpression	requirements = new MultiProfile ( )		2494821	0		=			
ANR	2495158	Identifier	requirements		2494821	0					
ANR	2495159	UnaryExpression	new MultiProfile ( )		2494821	1					
ANR	2495160	IfStatement	"if ( ! BoolExpr :: ExprToMultiProfile ( reqExpr , requirements ) )"		2494821	7					
ANR	2495161	Condition	"! BoolExpr :: ExprToMultiProfile ( reqExpr , requirements )"	853:7:18340:18393	2494821	0	True				
ANR	2495162	UnaryOperationExpression	"! BoolExpr :: ExprToMultiProfile ( reqExpr , requirements )"		2494821	0					
ANR	2495163	UnaryOperator	!		2494821	0					
ANR	2495164	CallExpression	"BoolExpr :: ExprToMultiProfile ( reqExpr , requirements )"		2494821	1					
ANR	2495165	Callee	BoolExpr :: ExprToMultiProfile		2494821	0					
ANR	2495166	Identifier	BoolExpr :: ExprToMultiProfile		2494821	0					
ANR	2495167	ArgumentList	reqExpr		2494821	1					
ANR	2495168	Argument	reqExpr		2494821	0					
ANR	2495169	Identifier	reqExpr		2494821	0					
ANR	2495170	Argument	requirements		2494821	1					
ANR	2495171	Identifier	requirements		2494821	0					
ANR	2495172	CompoundStatement		78:64:2605:2605	2494821	1					
ANR	2495173	ExpressionStatement	"pp . Unparse ( buffer , reqExpr )"	854:4:18403:18432	2494821	0	True				
ANR	2495174	CallExpression	"pp . Unparse ( buffer , reqExpr )"		2494821	0					
ANR	2495175	Callee	pp . Unparse		2494821	0					
ANR	2495176	MemberAccess	pp . Unparse		2494821	0					
ANR	2495177	Identifier	pp		2494821	0					
ANR	2495178	Identifier	Unparse		2494821	1					
ANR	2495179	ArgumentList	buffer		2494821	1					
ANR	2495180	Argument	buffer		2494821	0					
ANR	2495181	Identifier	buffer		2494821	0					
ANR	2495182	Argument	reqExpr		2494821	1					
ANR	2495183	Identifier	reqExpr		2494821	0					
ANR	2495184	ExpressionStatement	"cout << ""error calling ExprToMultiProfile on"" << buffer << endl"	855:4:18438:18507	2494821	1	True				
ANR	2495185	ShiftExpression	"cout << ""error calling ExprToMultiProfile on"" << buffer << endl"		2494821	0		<<			
ANR	2495186	Identifier	cout		2494821	0					
ANR	2495187	ShiftExpression	"""error calling ExprToMultiProfile on"" << buffer << endl"		2494821	1		<<			
ANR	2495188	PrimaryExpression	"""error calling ExprToMultiProfile on"""		2494821	0					
ANR	2495189	ShiftExpression	buffer << endl		2494821	1		<<			
ANR	2495190	Identifier	buffer		2494821	0					
ANR	2495191	Identifier	endl		2494821	1					
ANR	2495192	ReturnStatement	return false ;	857:4:18513:18525	2494821	2	True				
ANR	2495193	Identifier	false		2494821	0					
ANR	2495194	ExpressionStatement	requirements -> Rewind ( )	860:3:18536:18559	2494821	8	True				
ANR	2495195	CallExpression	requirements -> Rewind ( )		2494821	0					
ANR	2495196	Callee	requirements -> Rewind		2494821	0					
ANR	2495197	PtrMemberAccess	requirements -> Rewind		2494821	0					
ANR	2495198	Identifier	requirements		2494821	0					
ANR	2495199	Identifier	Rewind		2494821	1					
ANR	2495200	ArgumentList			2494821	1					
ANR	2495201	WhileStatement	while ( requirements -> NextProfile ( profile ) )		2494821	9					
ANR	2495202	Condition	requirements -> NextProfile ( profile )	861:10:18571:18606	2494821	0	True				
ANR	2495203	CallExpression	requirements -> NextProfile ( profile )		2494821	0					
ANR	2495204	Callee	requirements -> NextProfile		2494821	0					
ANR	2495205	PtrMemberAccess	requirements -> NextProfile		2494821	0					
ANR	2495206	Identifier	requirements		2494821	0					
ANR	2495207	Identifier	NextProfile		2494821	1					
ANR	2495208	ArgumentList	profile		2494821	1					
ANR	2495209	Argument	profile		2494821	0					
ANR	2495210	Identifier	profile		2494821	0					
ANR	2495211	CompoundStatement		86:49:2818:2818	2494821	1					
ANR	2495212	IfStatement	"if ( ! portAd -> FlattenAndInline ( profile -> GetExpr ( ) , val , flatExpr ) )"		2494821	0					
ANR	2495213	Condition	"! portAd -> FlattenAndInline ( profile -> GetExpr ( ) , val , flatExpr )"	863:8:18641:18718	2494821	0	True				
ANR	2495214	UnaryOperationExpression	"! portAd -> FlattenAndInline ( profile -> GetExpr ( ) , val , flatExpr )"		2494821	0					
ANR	2495215	UnaryOperator	!		2494821	0					
ANR	2495216	CallExpression	"portAd -> FlattenAndInline ( profile -> GetExpr ( ) , val , flatExpr )"		2494821	1					
ANR	2495217	Callee	portAd -> FlattenAndInline		2494821	0					
ANR	2495218	PtrMemberAccess	portAd -> FlattenAndInline		2494821	0					
ANR	2495219	Identifier	portAd		2494821	0					
ANR	2495220	Identifier	FlattenAndInline		2494821	1					
ANR	2495221	ArgumentList	profile -> GetExpr ( )		2494821	1					
ANR	2495222	Argument	profile -> GetExpr ( )		2494821	0					
ANR	2495223	CallExpression	profile -> GetExpr ( )		2494821	0					
ANR	2495224	Callee	profile -> GetExpr		2494821	0					
ANR	2495225	PtrMemberAccess	profile -> GetExpr		2494821	0					
ANR	2495226	Identifier	profile		2494821	0					
ANR	2495227	Identifier	GetExpr		2494821	1					
ANR	2495228	ArgumentList			2494821	1					
ANR	2495229	Argument	val		2494821	1					
ANR	2495230	Identifier	val		2494821	0					
ANR	2495231	Argument	flatExpr		2494821	2					
ANR	2495232	Identifier	flatExpr		2494821	0					
ANR	2495233	CompoundStatement		89:27:2930:2930	2494821	1					
ANR	2495234	ExpressionStatement	profile -> ToString ( buffer )	865:5:18729:18756	2494821	0	True				
ANR	2495235	CallExpression	profile -> ToString ( buffer )		2494821	0					
ANR	2495236	Callee	profile -> ToString		2494821	0					
ANR	2495237	PtrMemberAccess	profile -> ToString		2494821	0					
ANR	2495238	Identifier	profile		2494821	0					
ANR	2495239	Identifier	ToString		2494821	1					
ANR	2495240	ArgumentList	buffer		2494821	1					
ANR	2495241	Argument	buffer		2494821	0					
ANR	2495242	Identifier	buffer		2494821	0					
ANR	2495243	ExpressionStatement	"cout << ""error flattening expression: "" << buffer << ""in port"" << label << endl"	866:5:18763:18850	2494821	1	True				
ANR	2495244	ShiftExpression	"cout << ""error flattening expression: "" << buffer << ""in port"" << label << endl"		2494821	0		<<			
ANR	2495245	Identifier	cout		2494821	0					
ANR	2495246	ShiftExpression	"""error flattening expression: "" << buffer << ""in port"" << label << endl"		2494821	1		<<			
ANR	2495247	PrimaryExpression	"""error flattening expression: """		2494821	0					
ANR	2495248	ShiftExpression	"buffer << ""in port"" << label << endl"		2494821	1		<<			
ANR	2495249	Identifier	buffer		2494821	0					
ANR	2495250	ShiftExpression	"""in port"" << label << endl"		2494821	1		<<			
ANR	2495251	PrimaryExpression	"""in port"""		2494821	0					
ANR	2495252	ShiftExpression	label << endl		2494821	1		<<			
ANR	2495253	Identifier	label		2494821	0					
ANR	2495254	Identifier	endl		2494821	1					
ANR	2495255	ReturnStatement	return false ;	868:5:18857:18869	2494821	2	True				
ANR	2495256	Identifier	false		2494821	0					
ANR	2495257	IfStatement	"if ( ! ad -> GetExternalReferences ( flatExpr , refs , true ) )"		2494821	1					
ANR	2495258	Condition	"! ad -> GetExternalReferences ( flatExpr , refs , true )"	872:8:18930:18979	2494821	0	True				
ANR	2495259	UnaryOperationExpression	"! ad -> GetExternalReferences ( flatExpr , refs , true )"		2494821	0					
ANR	2495260	UnaryOperator	!		2494821	0					
ANR	2495261	CallExpression	"ad -> GetExternalReferences ( flatExpr , refs , true )"		2494821	1					
ANR	2495262	Callee	ad -> GetExternalReferences		2494821	0					
ANR	2495263	PtrMemberAccess	ad -> GetExternalReferences		2494821	0					
ANR	2495264	Identifier	ad		2494821	0					
ANR	2495265	Identifier	GetExternalReferences		2494821	1					
ANR	2495266	ArgumentList	flatExpr		2494821	1					
ANR	2495267	Argument	flatExpr		2494821	0					
ANR	2495268	Identifier	flatExpr		2494821	0					
ANR	2495269	Argument	refs		2494821	1					
ANR	2495270	Identifier	refs		2494821	0					
ANR	2495271	Argument	true		2494821	2					
ANR	2495272	Identifier	true		2494821	0					
ANR	2495273	CompoundStatement		97:61:3191:3191	2494821	1					
ANR	2495274	ExpressionStatement	"pp . Unparse ( buffer , flatExpr )"	873:5:18991:19021	2494821	0	True				
ANR	2495275	CallExpression	"pp . Unparse ( buffer , flatExpr )"		2494821	0					
ANR	2495276	Callee	pp . Unparse		2494821	0					
ANR	2495277	MemberAccess	pp . Unparse		2494821	0					
ANR	2495278	Identifier	pp		2494821	0					
ANR	2495279	Identifier	Unparse		2494821	1					
ANR	2495280	ArgumentList	buffer		2494821	1					
ANR	2495281	Argument	buffer		2494821	0					
ANR	2495282	Identifier	buffer		2494821	0					
ANR	2495283	Argument	flatExpr		2494821	1					
ANR	2495284	Identifier	flatExpr		2494821	0					
ANR	2495285	ExpressionStatement	"cout << ""error: Failed to get external refs in expression: "" << buffer << ""in port"" << label << endl"	874:5:19028:19143	2494821	1	True				
ANR	2495286	ShiftExpression	"cout << ""error: Failed to get external refs in expression: "" << buffer << ""in port"" << label << endl"		2494821	0		<<			
ANR	2495287	Identifier	cout		2494821	0					
ANR	2495288	ShiftExpression	"""error: Failed to get external refs in expression: "" << buffer << ""in port"" << label << endl"		2494821	1		<<			
ANR	2495289	PrimaryExpression	"""error: Failed to get external refs in expression: """		2494821	0					
ANR	2495290	ShiftExpression	"buffer << ""in port"" << label << endl"		2494821	1		<<			
ANR	2495291	Identifier	buffer		2494821	0					
ANR	2495292	ShiftExpression	"""in port"" << label << endl"		2494821	1		<<			
ANR	2495293	PrimaryExpression	"""in port"""		2494821	0					
ANR	2495294	ShiftExpression	label << endl		2494821	1		<<			
ANR	2495295	Identifier	label		2494821	0					
ANR	2495296	Identifier	endl		2494821	1					
ANR	2495297	ReturnStatement	return false ;	877:5:19150:19162	2494821	2	True				
ANR	2495298	Identifier	false		2494821	0					
ANR	2495299	ExpressionStatement	clauseNum = pNode -> AddClause ( )	880:4:19175:19206	2494821	2	True				
ANR	2495300	AssignmentExpression	clauseNum = pNode -> AddClause ( )		2494821	0		=			
ANR	2495301	Identifier	clauseNum		2494821	0					
ANR	2495302	CallExpression	pNode -> AddClause ( )		2494821	1					
ANR	2495303	Callee	pNode -> AddClause		2494821	0					
ANR	2495304	PtrMemberAccess	pNode -> AddClause		2494821	0					
ANR	2495305	Identifier	pNode		2494821	0					
ANR	2495306	Identifier	AddClause		2494821	1					
ANR	2495307	ArgumentList			2494821	1					
ANR	2495308	ForStatement	for ( r = refs . begin ( ) ; r != refs . end ( ) ; r ++ )		2494821	3					
ANR	2495309	ForInit	r = refs . begin ( ) ;	883:9:19243:19260	2494821	0	True				
ANR	2495310	AssignmentExpression	r = refs . begin ( )		2494821	0		=			
ANR	2495311	Identifier	r		2494821	0					
ANR	2495312	CallExpression	refs . begin ( )		2494821	1					
ANR	2495313	Callee	refs . begin		2494821	0					
ANR	2495314	MemberAccess	refs . begin		2494821	0					
ANR	2495315	Identifier	refs		2494821	0					
ANR	2495316	Identifier	begin		2494821	1					
ANR	2495317	ArgumentList			2494821	1					
ANR	2495318	Condition	r != refs . end ( )	883:28:19262:19277	2494821	1	True				
ANR	2495319	EqualityExpression	r != refs . end ( )		2494821	0		!=			
ANR	2495320	Identifier	r		2494821	0					
ANR	2495321	CallExpression	refs . end ( )		2494821	1					
ANR	2495322	Callee	refs . end		2494821	0					
ANR	2495323	MemberAccess	refs . end		2494821	0					
ANR	2495324	Identifier	refs		2494821	0					
ANR	2495325	Identifier	end		2494821	1					
ANR	2495326	ArgumentList			2494821	1					
ANR	2495327	PostIncDecOperationExpression	r ++	883:46:19280:19282	2494821	2	True				
ANR	2495328	Identifier	r		2494821	0					
ANR	2495329	IncDec	++		2494821	1					
ANR	2495330	CompoundStatement		108:52:3494:3494	2494821	3					
ANR	2495331	IfStatement	"if ( strncasecmp ( r -> c_str ( ) , label . c_str ( ) , label . size ( ) ) == 0 )"		2494821	0					
ANR	2495332	Condition	"strncasecmp ( r -> c_str ( ) , label . c_str ( ) , label . size ( ) ) == 0"	884:9:19297:19368	2494821	0	True				
ANR	2495333	EqualityExpression	"strncasecmp ( r -> c_str ( ) , label . c_str ( ) , label . size ( ) ) == 0"		2494821	0		==			
ANR	2495334	CallExpression	"strncasecmp ( r -> c_str ( ) , label . c_str ( ) , label . size ( ) )"		2494821	0					
ANR	2495335	Callee	strncasecmp		2494821	0					
ANR	2495336	Identifier	strncasecmp		2494821	0					
ANR	2495337	ArgumentList	r -> c_str ( )		2494821	1					
ANR	2495338	Argument	r -> c_str ( )		2494821	0					
ANR	2495339	CallExpression	r -> c_str ( )		2494821	0					
ANR	2495340	Callee	r -> c_str		2494821	0					
ANR	2495341	PtrMemberAccess	r -> c_str		2494821	0					
ANR	2495342	Identifier	r		2494821	0					
ANR	2495343	Identifier	c_str		2494821	1					
ANR	2495344	ArgumentList			2494821	1					
ANR	2495345	Argument	label . c_str ( )		2494821	1					
ANR	2495346	CallExpression	label . c_str ( )		2494821	0					
ANR	2495347	Callee	label . c_str		2494821	0					
ANR	2495348	MemberAccess	label . c_str		2494821	0					
ANR	2495349	Identifier	label		2494821	0					
ANR	2495350	Identifier	c_str		2494821	1					
ANR	2495351	ArgumentList			2494821	1					
ANR	2495352	Argument	label . size ( )		2494821	2					
ANR	2495353	CallExpression	label . size ( )		2494821	0					
ANR	2495354	Callee	label . size		2494821	0					
ANR	2495355	MemberAccess	label . size		2494821	0					
ANR	2495356	Identifier	label		2494821	0					
ANR	2495357	Identifier	size		2494821	1					
ANR	2495358	ArgumentList			2494821	1					
ANR	2495359	PrimaryExpression	0		2494821	1					
ANR	2495360	CompoundStatement		110:33:3580:3580	2494821	1					
ANR	2495361	ElseStatement	else		2494821	0					
ANR	2495362	CompoundStatement		113:10:3657:3657	2494821	0					
ANR	2495363	ExpressionStatement	"rAttr = rLabel = """""	891:6:19556:19575	2494821	0	True				
ANR	2495364	AssignmentExpression	"rAttr = rLabel = """""		2494821	0		=			
ANR	2495365	Identifier	rAttr		2494821	0					
ANR	2495366	AssignmentExpression	"rLabel = """""		2494821	1		=			
ANR	2495367	Identifier	rLabel		2494821	0					
ANR	2495368	PrimaryExpression	""""""		2494821	1					
ANR	2495369	ExpressionStatement	"splitString ( * r , rLabel , rAttr )"	892:6:19583:19613	2494821	1	True				
ANR	2495370	CallExpression	"splitString ( * r , rLabel , rAttr )"		2494821	0					
ANR	2495371	Callee	splitString		2494821	0					
ANR	2495372	Identifier	splitString		2494821	0					
ANR	2495373	ArgumentList	* r		2494821	1					
ANR	2495374	Argument	* r		2494821	0					
ANR	2495375	UnaryOperationExpression	* r		2494821	0					
ANR	2495376	UnaryOperator	*		2494821	0					
ANR	2495377	Identifier	r		2494821	1					
ANR	2495378	Argument	rLabel		2494821	1					
ANR	2495379	Identifier	rLabel		2494821	0					
ANR	2495380	Argument	rAttr		2494821	2					
ANR	2495381	Identifier	rAttr		2494821	0					
ANR	2495382	ExpressionStatement	rPortNode = pNodes [ rLabel ]	893:6:19621:19647	2494821	2	True				
ANR	2495383	AssignmentExpression	rPortNode = pNodes [ rLabel ]		2494821	0		=			
ANR	2495384	Identifier	rPortNode		2494821	0					
ANR	2495385	ArrayIndexing	pNodes [ rLabel ]		2494821	1					
ANR	2495386	Identifier	pNodes		2494821	0					
ANR	2495387	Identifier	rLabel		2494821	1					
ANR	2495388	ExpressionStatement	rPortNode -> AddExtAttrNode ( rAttr )	894:6:19655:19689	2494821	3	True				
ANR	2495389	CallExpression	rPortNode -> AddExtAttrNode ( rAttr )		2494821	0					
ANR	2495390	Callee	rPortNode -> AddExtAttrNode		2494821	0					
ANR	2495391	PtrMemberAccess	rPortNode -> AddExtAttrNode		2494821	0					
ANR	2495392	Identifier	rPortNode		2494821	0					
ANR	2495393	Identifier	AddExtAttrNode		2494821	1					
ANR	2495394	ArgumentList	rAttr		2494821	1					
ANR	2495395	Argument	rAttr		2494821	0					
ANR	2495396	Identifier	rAttr		2494821	0					
ANR	2495397	ExpressionStatement	eNode = pNodes [ rLabel ] -> GetExtAttrNode ( rAttr )	897:6:19743:19790	2494821	4	True				
ANR	2495398	AssignmentExpression	eNode = pNodes [ rLabel ] -> GetExtAttrNode ( rAttr )		2494821	0		=			
ANR	2495399	Identifier	eNode		2494821	0					
ANR	2495400	CallExpression	pNodes [ rLabel ] -> GetExtAttrNode ( rAttr )		2494821	1					
ANR	2495401	Callee	pNodes [ rLabel ] -> GetExtAttrNode		2494821	0					
ANR	2495402	PtrMemberAccess	pNodes [ rLabel ] -> GetExtAttrNode		2494821	0					
ANR	2495403	ArrayIndexing	pNodes [ rLabel ]		2494821	0					
ANR	2495404	Identifier	pNodes		2494821	0					
ANR	2495405	Identifier	rLabel		2494821	1					
ANR	2495406	Identifier	GetExtAttrNode		2494821	1					
ANR	2495407	ArgumentList	rAttr		2494821	1					
ANR	2495408	Argument	rAttr		2494821	0					
ANR	2495409	Identifier	rAttr		2494821	0					
ANR	2495410	ExpressionStatement	"pNode -> AddReqDep ( clauseNum , eNode )"	898:6:19798:19834	2494821	5	True				
ANR	2495411	CallExpression	"pNode -> AddReqDep ( clauseNum , eNode )"		2494821	0					
ANR	2495412	Callee	pNode -> AddReqDep		2494821	0					
ANR	2495413	PtrMemberAccess	pNode -> AddReqDep		2494821	0					
ANR	2495414	Identifier	pNode		2494821	0					
ANR	2495415	Identifier	AddReqDep		2494821	1					
ANR	2495416	ArgumentList	clauseNum		2494821	1					
ANR	2495417	Argument	clauseNum		2494821	0					
ANR	2495418	Identifier	clauseNum		2494821	0					
ANR	2495419	Argument	eNode		2494821	1					
ANR	2495420	Identifier	eNode		2494821	0					
ANR	2495421	ExpressionStatement	refs . clear ( )	901:4:19879:19891	2494821	4	True				
ANR	2495422	CallExpression	refs . clear ( )		2494821	0					
ANR	2495423	Callee	refs . clear		2494821	0					
ANR	2495424	MemberAccess	refs . clear		2494821	0					
ANR	2495425	Identifier	refs		2494821	0					
ANR	2495426	Identifier	clear		2494821	1					
ANR	2495427	ArgumentList			2494821	1					
ANR	2495428	ExpressionStatement	c . Initialize ( * portAd )	906:3:19944:19967	2494821	10	True				
ANR	2495429	CallExpression	c . Initialize ( * portAd )		2494821	0					
ANR	2495430	Callee	c . Initialize		2494821	0					
ANR	2495431	MemberAccess	c . Initialize		2494821	0					
ANR	2495432	Identifier	c		2494821	0					
ANR	2495433	Identifier	Initialize		2494821	1					
ANR	2495434	ArgumentList	* portAd		2494821	1					
ANR	2495435	Argument	* portAd		2494821	0					
ANR	2495436	UnaryOperationExpression	* portAd		2494821	0					
ANR	2495437	UnaryOperator	*		2494821	0					
ANR	2495438	Identifier	portAd		2494821	1					
ANR	2495439	ForStatement	"for ( ; ! c . IsAfterLast ( ) ; c . NextAttribute ( attr , expr ) )"		2494821	11					
ANR	2495440	Condition	! c . IsAfterLast ( )	907:10:19979:19995	2494821	0	True				
ANR	2495441	UnaryOperationExpression	! c . IsAfterLast ( )		2494821	0					
ANR	2495442	UnaryOperator	!		2494821	0					
ANR	2495443	CallExpression	c . IsAfterLast ( )		2494821	1					
ANR	2495444	Callee	c . IsAfterLast		2494821	0					
ANR	2495445	MemberAccess	c . IsAfterLast		2494821	0					
ANR	2495446	Identifier	c		2494821	0					
ANR	2495447	Identifier	IsAfterLast		2494821	1					
ANR	2495448	ArgumentList			2494821	1					
ANR	2495449	CallExpression	"c . NextAttribute ( attr , expr )"	907:30:19999:20027	2494821	1	True				
ANR	2495450	Callee	c . NextAttribute		2494821	0					
ANR	2495451	MemberAccess	c . NextAttribute		2494821	0					
ANR	2495452	Identifier	c		2494821	0					
ANR	2495453	Identifier	NextAttribute		2494821	1					
ANR	2495454	ArgumentList	attr		2494821	1					
ANR	2495455	Argument	attr		2494821	0					
ANR	2495456	Identifier	attr		2494821	0					
ANR	2495457	Argument	expr		2494821	1					
ANR	2495458	Identifier	expr		2494821	0					
ANR	2495459	CompoundStatement		132:62:4239:4239	2494821	2					
ANR	2495460	ExpressionStatement	"c . CurrentAttribute ( attr , expr )"	908:4:20037:20069	2494821	0	True				
ANR	2495461	CallExpression	"c . CurrentAttribute ( attr , expr )"		2494821	0					
ANR	2495462	Callee	c . CurrentAttribute		2494821	0					
ANR	2495463	MemberAccess	c . CurrentAttribute		2494821	0					
ANR	2495464	Identifier	c		2494821	0					
ANR	2495465	Identifier	CurrentAttribute		2494821	1					
ANR	2495466	ArgumentList	attr		2494821	1					
ANR	2495467	Argument	attr		2494821	0					
ANR	2495468	Identifier	attr		2494821	0					
ANR	2495469	Argument	expr		2494821	1					
ANR	2495470	Identifier	expr		2494821	0					
ANR	2495471	IfStatement	"if ( strcasecmp ( attr . c_str ( ) , ""Requirements"" ) != 0 )"		2494821	1					
ANR	2495472	Condition	"strcasecmp ( attr . c_str ( ) , ""Requirements"" ) != 0"	910:8:20080:20127	2494821	0	True				
ANR	2495473	EqualityExpression	"strcasecmp ( attr . c_str ( ) , ""Requirements"" ) != 0"		2494821	0		!=			
ANR	2495474	CallExpression	"strcasecmp ( attr . c_str ( ) , ""Requirements"" )"		2494821	0					
ANR	2495475	Callee	strcasecmp		2494821	0					
ANR	2495476	Identifier	strcasecmp		2494821	0					
ANR	2495477	ArgumentList	attr . c_str ( )		2494821	1					
ANR	2495478	Argument	attr . c_str ( )		2494821	0					
ANR	2495479	CallExpression	attr . c_str ( )		2494821	0					
ANR	2495480	Callee	attr . c_str		2494821	0					
ANR	2495481	MemberAccess	attr . c_str		2494821	0					
ANR	2495482	Identifier	attr		2494821	0					
ANR	2495483	Identifier	c_str		2494821	1					
ANR	2495484	ArgumentList			2494821	1					
ANR	2495485	Argument	"""Requirements"""		2494821	1					
ANR	2495486	PrimaryExpression	"""Requirements"""		2494821	0					
ANR	2495487	PrimaryExpression	0		2494821	1					
ANR	2495488	CompoundStatement		135:59:4339:4339	2494821	1					
ANR	2495489	IfStatement	"if ( ! portAd -> FlattenAndInline ( expr , val , flatExpr ) )"		2494821	0					
ANR	2495490	Condition	"! portAd -> FlattenAndInline ( expr , val , flatExpr )"	913:9:20165:20212	2494821	0	True				
ANR	2495491	UnaryOperationExpression	"! portAd -> FlattenAndInline ( expr , val , flatExpr )"		2494821	0					
ANR	2495492	UnaryOperator	!		2494821	0					
ANR	2495493	CallExpression	"portAd -> FlattenAndInline ( expr , val , flatExpr )"		2494821	1					
ANR	2495494	Callee	portAd -> FlattenAndInline		2494821	0					
ANR	2495495	PtrMemberAccess	portAd -> FlattenAndInline		2494821	0					
ANR	2495496	Identifier	portAd		2494821	0					
ANR	2495497	Identifier	FlattenAndInline		2494821	1					
ANR	2495498	ArgumentList	expr		2494821	1					
ANR	2495499	Argument	expr		2494821	0					
ANR	2495500	Identifier	expr		2494821	0					
ANR	2495501	Argument	val		2494821	1					
ANR	2495502	Identifier	val		2494821	0					
ANR	2495503	Argument	flatExpr		2494821	2					
ANR	2495504	Identifier	flatExpr		2494821	0					
ANR	2495505	CompoundStatement		138:60:4424:4424	2494821	1					
ANR	2495506	ExpressionStatement	"cout << ""error flattening expression for"" << attr << ""in port"" << label << endl"	914:6:20224:20312	2494821	0	True				
ANR	2495507	ShiftExpression	"cout << ""error flattening expression for"" << attr << ""in port"" << label << endl"		2494821	0		<<			
ANR	2495508	Identifier	cout		2494821	0					
ANR	2495509	ShiftExpression	"""error flattening expression for"" << attr << ""in port"" << label << endl"		2494821	1		<<			
ANR	2495510	PrimaryExpression	"""error flattening expression for"""		2494821	0					
ANR	2495511	ShiftExpression	"attr << ""in port"" << label << endl"		2494821	1		<<			
ANR	2495512	Identifier	attr		2494821	0					
ANR	2495513	ShiftExpression	"""in port"" << label << endl"		2494821	1		<<			
ANR	2495514	PrimaryExpression	"""in port"""		2494821	0					
ANR	2495515	ShiftExpression	label << endl		2494821	1		<<			
ANR	2495516	Identifier	label		2494821	0					
ANR	2495517	Identifier	endl		2494821	1					
ANR	2495518	ReturnStatement	return false ;	916:6:20320:20332	2494821	1	True				
ANR	2495519	Identifier	false		2494821	0					
ANR	2495520	IfStatement	if ( ! flatExpr )		2494821	1					
ANR	2495521	Condition	! flatExpr	920:9:20410:20418	2494821	0	True				
ANR	2495522	UnaryOperationExpression	! flatExpr		2494821	0					
ANR	2495523	UnaryOperator	!		2494821	0					
ANR	2495524	Identifier	flatExpr		2494821	1					
ANR	2495525	CompoundStatement		145:21:4630:4630	2494821	1					
ANR	2495526	IfStatement	if ( ! attrIsRequirements )		2494821	0					
ANR	2495527	Condition	! attrIsRequirements	921:10:20434:20452	2494821	0	True				
ANR	2495528	UnaryOperationExpression	! attrIsRequirements		2494821	0					
ANR	2495529	UnaryOperator	!		2494821	0					
ANR	2495530	Identifier	attrIsRequirements		2494821	1					
ANR	2495531	CompoundStatement		146:32:4664:4664	2494821	1					
ANR	2495532	ExpressionStatement	"pNode -> AddAttrNode ( attr , val )"	922:7:20465:20496	2494821	0	True				
ANR	2495533	CallExpression	"pNode -> AddAttrNode ( attr , val )"		2494821	0					
ANR	2495534	Callee	pNode -> AddAttrNode		2494821	0					
ANR	2495535	PtrMemberAccess	pNode -> AddAttrNode		2494821	0					
ANR	2495536	Identifier	pNode		2494821	0					
ANR	2495537	Identifier	AddAttrNode		2494821	1					
ANR	2495538	ArgumentList	attr		2494821	1					
ANR	2495539	Argument	attr		2494821	0					
ANR	2495540	Identifier	attr		2494821	0					
ANR	2495541	Argument	val		2494821	1					
ANR	2495542	Identifier	val		2494821	0					
ANR	2495543	ContinueStatement	continue ;	925:6:20571:20579	2494821	1	True				
ANR	2495544	ExpressionStatement	pNode -> AddAttrNode ( attr )	927:5:20593:20619	2494821	2	True				
ANR	2495545	CallExpression	pNode -> AddAttrNode ( attr )		2494821	0					
ANR	2495546	Callee	pNode -> AddAttrNode		2494821	0					
ANR	2495547	PtrMemberAccess	pNode -> AddAttrNode		2494821	0					
ANR	2495548	Identifier	pNode		2494821	0					
ANR	2495549	Identifier	AddAttrNode		2494821	1					
ANR	2495550	ArgumentList	attr		2494821	1					
ANR	2495551	Argument	attr		2494821	0					
ANR	2495552	Identifier	attr		2494821	0					
ANR	2495553	IfStatement	"if ( ! ad -> GetExternalReferences ( flatExpr , refs , true ) )"		2494821	3					
ANR	2495554	Condition	"! ad -> GetExternalReferences ( flatExpr , refs , true )"	930:9:20679:20728	2494821	0	True				
ANR	2495555	UnaryOperationExpression	"! ad -> GetExternalReferences ( flatExpr , refs , true )"		2494821	0					
ANR	2495556	UnaryOperator	!		2494821	0					
ANR	2495557	CallExpression	"ad -> GetExternalReferences ( flatExpr , refs , true )"		2494821	1					
ANR	2495558	Callee	ad -> GetExternalReferences		2494821	0					
ANR	2495559	PtrMemberAccess	ad -> GetExternalReferences		2494821	0					
ANR	2495560	Identifier	ad		2494821	0					
ANR	2495561	Identifier	GetExternalReferences		2494821	1					
ANR	2495562	ArgumentList	flatExpr		2494821	1					
ANR	2495563	Argument	flatExpr		2494821	0					
ANR	2495564	Identifier	flatExpr		2494821	0					
ANR	2495565	Argument	refs		2494821	1					
ANR	2495566	Identifier	refs		2494821	0					
ANR	2495567	Argument	true		2494821	2					
ANR	2495568	Identifier	true		2494821	0					
ANR	2495569	CompoundStatement		155:62:4940:4940	2494821	1					
ANR	2495570	ExpressionStatement	"cout << ""error: Failed to get external refs for"" << attr << ""in port"" << label << endl"	931:6:20740:20834	2494821	0	True				
ANR	2495571	ShiftExpression	"cout << ""error: Failed to get external refs for"" << attr << ""in port"" << label << endl"		2494821	0		<<			
ANR	2495572	Identifier	cout		2494821	0					
ANR	2495573	ShiftExpression	"""error: Failed to get external refs for"" << attr << ""in port"" << label << endl"		2494821	1		<<			
ANR	2495574	PrimaryExpression	"""error: Failed to get external refs for"""		2494821	0					
ANR	2495575	ShiftExpression	"attr << ""in port"" << label << endl"		2494821	1		<<			
ANR	2495576	Identifier	attr		2494821	0					
ANR	2495577	ShiftExpression	"""in port"" << label << endl"		2494821	1		<<			
ANR	2495578	PrimaryExpression	"""in port"""		2494821	0					
ANR	2495579	ShiftExpression	label << endl		2494821	1		<<			
ANR	2495580	Identifier	label		2494821	0					
ANR	2495581	Identifier	endl		2494821	1					
ANR	2495582	ReturnStatement	return false ;	933:6:20842:20854	2494821	1	True				
ANR	2495583	Identifier	false		2494821	0					
ANR	2495584	ForStatement	for ( r = refs . begin ( ) ; r != refs . end ( ) ; r ++ )		2494821	4					
ANR	2495585	ForInit	r = refs . begin ( ) ;	937:10:20900:20917	2494821	0	True				
ANR	2495586	AssignmentExpression	r = refs . begin ( )		2494821	0		=			
ANR	2495587	Identifier	r		2494821	0					
ANR	2495588	CallExpression	refs . begin ( )		2494821	1					
ANR	2495589	Callee	refs . begin		2494821	0					
ANR	2495590	MemberAccess	refs . begin		2494821	0					
ANR	2495591	Identifier	refs		2494821	0					
ANR	2495592	Identifier	begin		2494821	1					
ANR	2495593	ArgumentList			2494821	1					
ANR	2495594	Condition	r != refs . end ( )	937:29:20919:20934	2494821	1	True				
ANR	2495595	EqualityExpression	r != refs . end ( )		2494821	0		!=			
ANR	2495596	Identifier	r		2494821	0					
ANR	2495597	CallExpression	refs . end ( )		2494821	1					
ANR	2495598	Callee	refs . end		2494821	0					
ANR	2495599	MemberAccess	refs . end		2494821	0					
ANR	2495600	Identifier	refs		2494821	0					
ANR	2495601	Identifier	end		2494821	1					
ANR	2495602	ArgumentList			2494821	1					
ANR	2495603	PostIncDecOperationExpression	r ++	937:47:20937:20939	2494821	2	True				
ANR	2495604	Identifier	r		2494821	0					
ANR	2495605	IncDec	++		2494821	1					
ANR	2495606	CompoundStatement		162:53:5151:5151	2494821	3					
ANR	2495607	IfStatement	"if ( strncasecmp ( r -> c_str ( ) , label . c_str ( ) , label . size ( ) ) == 0 )"		2494821	0					
ANR	2495608	Condition	"strncasecmp ( r -> c_str ( ) , label . c_str ( ) , label . size ( ) ) == 0"	938:10:20955:21027	2494821	0	True				
ANR	2495609	EqualityExpression	"strncasecmp ( r -> c_str ( ) , label . c_str ( ) , label . size ( ) ) == 0"		2494821	0		==			
ANR	2495610	CallExpression	"strncasecmp ( r -> c_str ( ) , label . c_str ( ) , label . size ( ) )"		2494821	0					
ANR	2495611	Callee	strncasecmp		2494821	0					
ANR	2495612	Identifier	strncasecmp		2494821	0					
ANR	2495613	ArgumentList	r -> c_str ( )		2494821	1					
ANR	2495614	Argument	r -> c_str ( )		2494821	0					
ANR	2495615	CallExpression	r -> c_str ( )		2494821	0					
ANR	2495616	Callee	r -> c_str		2494821	0					
ANR	2495617	PtrMemberAccess	r -> c_str		2494821	0					
ANR	2495618	Identifier	r		2494821	0					
ANR	2495619	Identifier	c_str		2494821	1					
ANR	2495620	ArgumentList			2494821	1					
ANR	2495621	Argument	label . c_str ( )		2494821	1					
ANR	2495622	CallExpression	label . c_str ( )		2494821	0					
ANR	2495623	Callee	label . c_str		2494821	0					
ANR	2495624	MemberAccess	label . c_str		2494821	0					
ANR	2495625	Identifier	label		2494821	0					
ANR	2495626	Identifier	c_str		2494821	1					
ANR	2495627	ArgumentList			2494821	1					
ANR	2495628	Argument	label . size ( )		2494821	2					
ANR	2495629	CallExpression	label . size ( )		2494821	0					
ANR	2495630	Callee	label . size		2494821	0					
ANR	2495631	MemberAccess	label . size		2494821	0					
ANR	2495632	Identifier	label		2494821	0					
ANR	2495633	Identifier	size		2494821	1					
ANR	2495634	ArgumentList			2494821	1					
ANR	2495635	PrimaryExpression	0		2494821	1					
ANR	2495636	CompoundStatement		164:34:5239:5239	2494821	1					
ANR	2495637	ElseStatement	else		2494821	0					
ANR	2495638	CompoundStatement		167:11:5319:5319	2494821	0					
ANR	2495639	ExpressionStatement	"rAttr = rLabel = """""	945:7:21221:21240	2494821	0	True				
ANR	2495640	AssignmentExpression	"rAttr = rLabel = """""		2494821	0		=			
ANR	2495641	Identifier	rAttr		2494821	0					
ANR	2495642	AssignmentExpression	"rLabel = """""		2494821	1		=			
ANR	2495643	Identifier	rLabel		2494821	0					
ANR	2495644	PrimaryExpression	""""""		2494821	1					
ANR	2495645	ExpressionStatement	"splitString ( * r , rLabel , rAttr )"	946:7:21249:21279	2494821	1	True				
ANR	2495646	CallExpression	"splitString ( * r , rLabel , rAttr )"		2494821	0					
ANR	2495647	Callee	splitString		2494821	0					
ANR	2495648	Identifier	splitString		2494821	0					
ANR	2495649	ArgumentList	* r		2494821	1					
ANR	2495650	Argument	* r		2494821	0					
ANR	2495651	UnaryOperationExpression	* r		2494821	0					
ANR	2495652	UnaryOperator	*		2494821	0					
ANR	2495653	Identifier	r		2494821	1					
ANR	2495654	Argument	rLabel		2494821	1					
ANR	2495655	Identifier	rLabel		2494821	0					
ANR	2495656	Argument	rAttr		2494821	2					
ANR	2495657	Identifier	rAttr		2494821	0					
ANR	2495658	ExpressionStatement	rPortNode = pNodes [ rLabel ]	947:7:21288:21314	2494821	2	True				
ANR	2495659	AssignmentExpression	rPortNode = pNodes [ rLabel ]		2494821	0		=			
ANR	2495660	Identifier	rPortNode		2494821	0					
ANR	2495661	ArrayIndexing	pNodes [ rLabel ]		2494821	1					
ANR	2495662	Identifier	pNodes		2494821	0					
ANR	2495663	Identifier	rLabel		2494821	1					
ANR	2495664	ExpressionStatement	rPortNode -> AddExtAttrNode ( rAttr )	948:7:21323:21357	2494821	3	True				
ANR	2495665	CallExpression	rPortNode -> AddExtAttrNode ( rAttr )		2494821	0					
ANR	2495666	Callee	rPortNode -> AddExtAttrNode		2494821	0					
ANR	2495667	PtrMemberAccess	rPortNode -> AddExtAttrNode		2494821	0					
ANR	2495668	Identifier	rPortNode		2494821	0					
ANR	2495669	Identifier	AddExtAttrNode		2494821	1					
ANR	2495670	ArgumentList	rAttr		2494821	1					
ANR	2495671	Argument	rAttr		2494821	0					
ANR	2495672	Identifier	rAttr		2494821	0					
ANR	2495673	ExpressionStatement	eNode = pNodes [ rLabel ] -> GetExtAttrNode ( rAttr )	951:7:21413:21460	2494821	4	True				
ANR	2495674	AssignmentExpression	eNode = pNodes [ rLabel ] -> GetExtAttrNode ( rAttr )		2494821	0		=			
ANR	2495675	Identifier	eNode		2494821	0					
ANR	2495676	CallExpression	pNodes [ rLabel ] -> GetExtAttrNode ( rAttr )		2494821	1					
ANR	2495677	Callee	pNodes [ rLabel ] -> GetExtAttrNode		2494821	0					
ANR	2495678	PtrMemberAccess	pNodes [ rLabel ] -> GetExtAttrNode		2494821	0					
ANR	2495679	ArrayIndexing	pNodes [ rLabel ]		2494821	0					
ANR	2495680	Identifier	pNodes		2494821	0					
ANR	2495681	Identifier	rLabel		2494821	1					
ANR	2495682	Identifier	GetExtAttrNode		2494821	1					
ANR	2495683	ArgumentList	rAttr		2494821	1					
ANR	2495684	Argument	rAttr		2494821	0					
ANR	2495685	Identifier	rAttr		2494821	0					
ANR	2495686	ExpressionStatement	"pNode -> AddAttrDep ( attr , eNode )"	952:7:21469:21501	2494821	5	True				
ANR	2495687	CallExpression	"pNode -> AddAttrDep ( attr , eNode )"		2494821	0					
ANR	2495688	Callee	pNode -> AddAttrDep		2494821	0					
ANR	2495689	PtrMemberAccess	pNode -> AddAttrDep		2494821	0					
ANR	2495690	Identifier	pNode		2494821	0					
ANR	2495691	Identifier	AddAttrDep		2494821	1					
ANR	2495692	ArgumentList	attr		2494821	1					
ANR	2495693	Argument	attr		2494821	0					
ANR	2495694	Identifier	attr		2494821	0					
ANR	2495695	Argument	eNode		2494821	1					
ANR	2495696	Identifier	eNode		2494821	0					
ANR	2495697	ExpressionStatement	refs . clear ( )	956:4:21554:21566	2494821	2	True				
ANR	2495698	CallExpression	refs . clear ( )		2494821	0					
ANR	2495699	Callee	refs . clear		2494821	0					
ANR	2495700	MemberAccess	refs . clear		2494821	0					
ANR	2495701	Identifier	refs		2494821	0					
ANR	2495702	Identifier	clear		2494821	1					
ANR	2495703	ArgumentList			2494821	1					
ANR	2495704	ExpressionStatement	portNodes . push_back ( pNode )	958:3:21605:21633	2494821	12	True				
ANR	2495705	CallExpression	portNodes . push_back ( pNode )		2494821	0					
ANR	2495706	Callee	portNodes . push_back		2494821	0					
ANR	2495707	MemberAccess	portNodes . push_back		2494821	0					
ANR	2495708	Identifier	portNodes		2494821	0					
ANR	2495709	Identifier	push_back		2494821	1					
ANR	2495710	ArgumentList	pNode		2494821	1					
ANR	2495711	Argument	pNode		2494821	0					
ANR	2495712	Identifier	pNode		2494821	0					
ANR	2495713	ExpressionStatement	numPortNodes ++	959:3:21638:21652	2494821	13	True				
ANR	2495714	PostIncDecOperationExpression	numPortNodes ++		2494821	0					
ANR	2495715	Identifier	numPortNodes		2494821	0					
ANR	2495716	IncDec	++		2494821	1					
ANR	2495717	ExpressionStatement	portNum ++	960:3:21657:21666	2494821	14	True				
ANR	2495718	PostIncDecOperationExpression	portNum ++		2494821	0					
ANR	2495719	Identifier	portNum		2494821	0					
ANR	2495720	IncDec	++		2494821	1					
ANR	2495721	ExpressionStatement	pNodes . clear ( )	962:2:21695:21710	2494821	4	True				
ANR	2495722	CallExpression	pNodes . clear ( )		2494821	0					
ANR	2495723	Callee	pNodes . clear		2494821	0					
ANR	2495724	MemberAccess	pNodes . clear		2494821	0					
ANR	2495725	Identifier	pNodes		2494821	0					
ANR	2495726	Identifier	clear		2494821	1					
ANR	2495727	ArgumentList			2494821	1					
ANR	2495728	ExpressionStatement	portNum = 0	963:2:21714:21725	2494821	5	True				
ANR	2495729	AssignmentExpression	portNum = 0		2494821	0		=			
ANR	2495730	Identifier	portNum		2494821	0					
ANR	2495731	PrimaryExpression	0		2494821	1					
ANR	2495732	ExpressionStatement	adNum ++	964:2:21729:21736	2494821	6	True				
ANR	2495733	PostIncDecOperationExpression	adNum ++		2494821	0					
ANR	2495734	Identifier	adNum		2494821	0					
ANR	2495735	IncDec	++		2494821	1					
ANR	2495736	ReturnStatement	return true ;	966:1:21766:21777	2494821	29	True				
ANR	2495737	Identifier	true		2494821	0					
ANR	2495738	ReturnType	bool		2494821	1					
ANR	2495739	Identifier	PortGraph :: Initialize		2494821	2					
ANR	2495740	ParameterList	std :: vector < classad :: ClassAd * > & ads		2494821	3					
ANR	2495741	Parameter	std :: vector < classad :: ClassAd * > & ads	775:12:15753:15787	2494821	0	True				
ANR	2495742	ParameterType	std :: vector < classad :: ClassAd * > &		2494821	0					
ANR	2495743	Identifier	ads		2494821	1					
ANR	2495744	CFGEntryNode	ENTRY		2494821		True				
ANR	2495745	CFGExitNode	EXIT		2494821		True				
ANR	2495746	Symbol	pp		2494821						
ANR	2495747	Symbol	pNode -> AddClause		2494821						
ANR	2495748	Symbol	* pNodes		2494821						
ANR	2495749	Symbol	refs . end		2494821						
ANR	2495750	Symbol	reqExpr		2494821						
ANR	2495751	Symbol	l . CurrentExpr		2494821						
ANR	2495752	Symbol	label . c_str		2494821						
ANR	2495753	Symbol	rPortNode		2494821						
ANR	2495754	Symbol	ads . begin		2494821						
ANR	2495755	Symbol	* portAd		2494821						
ANR	2495756	Symbol	portAd -> FlattenAndInline		2494821						
ANR	2495757	Symbol	ad -> EvaluateAttr		2494821						
ANR	2495758	Symbol	buffer		2494821						
ANR	2495759	Symbol	strcasecmp		2494821						
ANR	2495760	Symbol	val		2494821						
ANR	2495761	Symbol	ad		2494821						
ANR	2495762	Symbol	NULL		2494821						
ANR	2495763	Symbol	el		2494821						
ANR	2495764	Symbol	profile		2494821						
ANR	2495765	Symbol	classad :: ExprTree :: CLASSAD_NODE		2494821						
ANR	2495766	Symbol	label . size		2494821						
ANR	2495767	Symbol	* pNode		2494821						
ANR	2495768	Symbol	BoolExpr :: ExprToMultiProfile		2494821						
ANR	2495769	Symbol	l . IsAfterLast		2494821						
ANR	2495770	Symbol	ads		2494821						
ANR	2495771	Symbol	eNode		2494821						
ANR	2495772	Symbol	* expr		2494821						
ANR	2495773	Symbol	* * rLabel		2494821						
ANR	2495774	Symbol	true		2494821						
ANR	2495775	Symbol	portNodes		2494821						
ANR	2495776	Symbol	pNodes		2494821						
ANR	2495777	Symbol	r -> c_str		2494821						
ANR	2495778	Symbol	ad -> GetExternalReferences		2494821						
ANR	2495779	Symbol	pNodes [ rLabel ] -> GetExtAttrNode		2494821						
ANR	2495780	Symbol	portAd -> Lookup		2494821						
ANR	2495781	Symbol	attr . c_str		2494821						
ANR	2495782	Symbol	* rLabel		2494821						
ANR	2495783	Symbol	rLabel		2494821						
ANR	2495784	Symbol	strncasecmp		2494821						
ANR	2495785	Symbol	* ad		2494821						
ANR	2495786	Symbol	clauseNum		2494821						
ANR	2495787	Symbol	attrIsRequirements		2494821						
ANR	2495788	Symbol	c . IsAfterLast		2494821						
ANR	2495789	Symbol	profile -> GetExpr		2494821						
ANR	2495790	Symbol	numPortNodes		2494821						
ANR	2495791	Symbol	expr		2494821						
ANR	2495792	Symbol	attr		2494821						
ANR	2495793	Symbol	val . IsListValue		2494821						
ANR	2495794	Symbol	pNode		2494821						
ANR	2495795	Symbol	* profile		2494821						
ANR	2495796	Symbol	refs . begin		2494821						
ANR	2495797	Symbol	a		2494821						
ANR	2495798	Symbol	expr -> GetKind		2494821						
ANR	2495799	Symbol	requirements		2494821						
ANR	2495800	Symbol	c		2494821						
ANR	2495801	Symbol	portNum		2494821						
ANR	2495802	Symbol	requirements -> NextProfile		2494821						
ANR	2495803	Symbol	adNum		2494821						
ANR	2495804	Symbol	rAttr		2494821						
ANR	2495805	Symbol	false		2494821						
ANR	2495806	Symbol	label		2494821						
ANR	2495807	Symbol	* a		2494821						
ANR	2495808	Symbol	flatExpr		2494821						
ANR	2495809	Symbol	l		2494821						
ANR	2495810	Symbol	portAd -> EvaluateAttrString		2494821						
ANR	2495811	Symbol	* requirements		2494821						
ANR	2495812	Symbol	r		2494821						
ANR	2495813	Symbol	portAd		2494821						
ANR	2495814	Symbol	refs		2494821						
ANR	2495815	Symbol	ads . end		2494821						
ANR	2495816	Symbol	* r		2494821						
ANR	2495817	Symbol	* * pNodes		2494821						
ANR	2495818	Symbol	* label		2494821						
ANR	2495819	Function	PortGraph :: Saturate	970:0:21831:22133							
ANR	2495820	FunctionDef	PortGraph :: Saturate ()		2495819	0					
ANR	2495821	CompoundStatement		972:0:21860:22133	2495819	0					
ANR	2495822	IdentifierDeclStatement	bool dirtyNodes = true ;	973:1:21863:21885	2495819	0	True				
ANR	2495823	IdentifierDecl	dirtyNodes = true		2495819	0					
ANR	2495824	IdentifierDeclType	bool		2495819	0					
ANR	2495825	Identifier	dirtyNodes		2495819	1					
ANR	2495826	AssignmentExpression	dirtyNodes = true		2495819	2		=			
ANR	2495827	Identifier	true		2495819	0					
ANR	2495828	Identifier	true		2495819	1					
ANR	2495829	WhileStatement	while ( dirtyNodes )		2495819	1					
ANR	2495830	Condition	dirtyNodes	974:8:21895:21904	2495819	0	True				
ANR	2495831	Identifier	dirtyNodes		2495819	0					
ANR	2495832	CompoundStatement		3:21:47:47	2495819	1					
ANR	2495833	ExpressionStatement	dirtyNodes = false	975:2:21912:21930	2495819	0	True				
ANR	2495834	AssignmentExpression	dirtyNodes = false		2495819	0		=			
ANR	2495835	Identifier	dirtyNodes		2495819	0					
ANR	2495836	Identifier	false		2495819	1					
ANR	2495837	ForStatement	for ( int i = 0 ; i < numPortNodes ; i ++ )		2495819	1					
ANR	2495838	ForInit	int i = 0 ;	976:7:21939:21948	2495819	0	True				
ANR	2495839	IdentifierDeclStatement	int i = 0 ;		2495819	0					
ANR	2495840	IdentifierDecl	i = 0		2495819	0					
ANR	2495841	IdentifierDeclType	int		2495819	0					
ANR	2495842	Identifier	i		2495819	1					
ANR	2495843	AssignmentExpression	i = 0		2495819	2		=			
ANR	2495844	Identifier	i		2495819	0					
ANR	2495845	PrimaryExpression	0		2495819	1					
ANR	2495846	Condition	i < numPortNodes	976:18:21950:21965	2495819	1	True				
ANR	2495847	RelationalExpression	i < numPortNodes		2495819	0		<			
ANR	2495848	Identifier	i		2495819	0					
ANR	2495849	Identifier	numPortNodes		2495819	1					
ANR	2495850	PostIncDecOperationExpression	i ++	976:36:21968:21970	2495819	2	True				
ANR	2495851	Identifier	i		2495819	0					
ANR	2495852	IncDec	++		2495819	1					
ANR	2495853	CompoundStatement		5:42:113:113	2495819	3					
ANR	2495854	ForStatement	for ( int j = 0 ; j < numPortNodes ; j ++ )		2495819	0					
ANR	2495855	ForInit	int j = 0 ;	977:8:21984:21993	2495819	0	True				
ANR	2495856	IdentifierDeclStatement	int j = 0 ;		2495819	0					
ANR	2495857	IdentifierDecl	j = 0		2495819	0					
ANR	2495858	IdentifierDeclType	int		2495819	0					
ANR	2495859	Identifier	j		2495819	1					
ANR	2495860	AssignmentExpression	j = 0		2495819	2		=			
ANR	2495861	Identifier	j		2495819	0					
ANR	2495862	PrimaryExpression	0		2495819	1					
ANR	2495863	Condition	j < numPortNodes	977:19:21995:22010	2495819	1	True				
ANR	2495864	RelationalExpression	j < numPortNodes		2495819	0		<			
ANR	2495865	Identifier	j		2495819	0					
ANR	2495866	Identifier	numPortNodes		2495819	1					
ANR	2495867	PostIncDecOperationExpression	j ++	977:37:22013:22015	2495819	2	True				
ANR	2495868	Identifier	j		2495819	0					
ANR	2495869	IncDec	++		2495819	1					
ANR	2495870	CompoundStatement		6:43:158:158	2495819	3					
ANR	2495871	IfStatement	"if ( AddMatchEdges ( portNodes [ i ] , portNodes [ j ] ) )"		2495819	0					
ANR	2495872	Condition	"AddMatchEdges ( portNodes [ i ] , portNodes [ j ] )"	978:8:22029:22071	2495819	0	True				
ANR	2495873	CallExpression	"AddMatchEdges ( portNodes [ i ] , portNodes [ j ] )"		2495819	0					
ANR	2495874	Callee	AddMatchEdges		2495819	0					
ANR	2495875	Identifier	AddMatchEdges		2495819	0					
ANR	2495876	ArgumentList	portNodes [ i ]		2495819	1					
ANR	2495877	Argument	portNodes [ i ]		2495819	0					
ANR	2495878	ArrayIndexing	portNodes [ i ]		2495819	0					
ANR	2495879	Identifier	portNodes		2495819	0					
ANR	2495880	Identifier	i		2495819	1					
ANR	2495881	Argument	portNodes [ j ]		2495819	1					
ANR	2495882	ArrayIndexing	portNodes [ j ]		2495819	0					
ANR	2495883	Identifier	portNodes		2495819	0					
ANR	2495884	Identifier	j		2495819	1					
ANR	2495885	CompoundStatement		7:54:214:214	2495819	1					
ANR	2495886	ExpressionStatement	dirtyNodes = true	979:5:22082:22099	2495819	0	True				
ANR	2495887	AssignmentExpression	dirtyNodes = true		2495819	0		=			
ANR	2495888	Identifier	dirtyNodes		2495819	0					
ANR	2495889	Identifier	true		2495819	1					
ANR	2495890	ReturnStatement	return true ;	984:1:22120:22131	2495819	2	True				
ANR	2495891	Identifier	true		2495819	0					
ANR	2495892	ReturnType	bool		2495819	1					
ANR	2495893	Identifier	PortGraph :: Saturate		2495819	2					
ANR	2495894	ParameterList			2495819	3					
ANR	2495895	CFGEntryNode	ENTRY		2495819		True				
ANR	2495896	CFGExitNode	EXIT		2495819		True				
ANR	2495897	Symbol	* i		2495819						
ANR	2495898	Symbol	* portNodes		2495819						
ANR	2495899	Symbol	* j		2495819						
ANR	2495900	Symbol	numPortNodes		2495819						
ANR	2495901	Symbol	true		2495819						
ANR	2495902	Symbol	false		2495819						
ANR	2495903	Symbol	i		2495819						
ANR	2495904	Symbol	j		2495819						
ANR	2495905	Symbol	portNodes		2495819						
ANR	2495906	Symbol	AddMatchEdges		2495819						
ANR	2495907	Symbol	dirtyNodes		2495819						
ANR	2495908	Function	PortGraph :: AddMatchEdges	987:0:22136:25338							
ANR	2495909	FunctionDef	"PortGraph :: AddMatchEdges (PortNode * p1 , PortNode * p2)"		2495908	0					
ANR	2495910	CompoundStatement		989:0:22197:25338	2495908	0					
ANR	2495911	IdentifierDeclStatement	bool success = false ;	995:1:22391:22411	2495908	0	True				
ANR	2495912	IdentifierDecl	success = false		2495908	0					
ANR	2495913	IdentifierDeclType	bool		2495908	0					
ANR	2495914	Identifier	success		2495908	1					
ANR	2495915	AssignmentExpression	success = false		2495908	2		=			
ANR	2495916	Identifier	false		2495908	0					
ANR	2495917	Identifier	false		2495908	1					
ANR	2495918	IdentifierDeclStatement	std :: set < ExtAttrNode * > depsSet ;	998:1:22463:22493	2495908	1	True				
ANR	2495919	IdentifierDecl	depsSet		2495908	0					
ANR	2495920	IdentifierDeclType	std :: set < ExtAttrNode * >		2495908	0					
ANR	2495921	Identifier	depsSet		2495908	1					
ANR	2495922	IdentifierDeclStatement	std :: vector < MatchPath * > paths ;	999:1:22496:22525	2495908	2	True				
ANR	2495923	IdentifierDecl	paths		2495908	0					
ANR	2495924	IdentifierDeclType	std :: vector < MatchPath * >		2495908	0					
ANR	2495925	Identifier	paths		2495908	1					
ANR	2495926	IdentifierDeclStatement	std :: vector < ExtAttrNode * > deps ;	1000:1:22528:22558	2495908	3	True				
ANR	2495927	IdentifierDecl	deps		2495908	0					
ANR	2495928	IdentifierDeclType	std :: vector < ExtAttrNode * >		2495908	0					
ANR	2495929	Identifier	deps		2495908	1					
ANR	2495930	IdentifierDeclStatement	std :: set < ExtAttrNode * > :: iterator d ;	1001:1:22561:22595	2495908	4	True				
ANR	2495931	IdentifierDecl	d		2495908	0					
ANR	2495932	IdentifierDeclType	std :: set < ExtAttrNode * > :: iterator		2495908	0					
ANR	2495933	Identifier	d		2495908	1					
ANR	2495934	ForStatement	for ( unsigned int clauseNum = 0 ; clauseNum < p1 -> GetNumClauses ( ) ; clauseNum ++ )		2495908	5					
ANR	2495935	ForInit	unsigned int clauseNum = 0 ;	1003:6:22604:22630	2495908	0	True				
ANR	2495936	IdentifierDeclStatement	unsigned int clauseNum = 0 ;		2495908	0					
ANR	2495937	IdentifierDecl	clauseNum = 0		2495908	0					
ANR	2495938	IdentifierDeclType	unsigned int		2495908	0					
ANR	2495939	Identifier	clauseNum		2495908	1					
ANR	2495940	AssignmentExpression	clauseNum = 0		2495908	2		=			
ANR	2495941	Identifier	clauseNum		2495908	0					
ANR	2495942	PrimaryExpression	0		2495908	1					
ANR	2495943	Condition	clauseNum < p1 -> GetNumClauses ( )	1003:34:22632:22663	2495908	1	True				
ANR	2495944	RelationalExpression	clauseNum < p1 -> GetNumClauses ( )		2495908	0		<			
ANR	2495945	Identifier	clauseNum		2495908	0					
ANR	2495946	CallExpression	p1 -> GetNumClauses ( )		2495908	1					
ANR	2495947	Callee	p1 -> GetNumClauses		2495908	0					
ANR	2495948	PtrMemberAccess	p1 -> GetNumClauses		2495908	0					
ANR	2495949	Identifier	p1		2495908	0					
ANR	2495950	Identifier	GetNumClauses		2495908	1					
ANR	2495951	ArgumentList			2495908	1					
ANR	2495952	PostIncDecOperationExpression	clauseNum ++	1004:3:22669:22679	2495908	2	True				
ANR	2495953	Identifier	clauseNum		2495908	0					
ANR	2495954	IncDec	++		2495908	1					
ANR	2495955	CompoundStatement		16:17:485:485	2495908	3					
ANR	2495956	ExpressionStatement	"p1 -> GetReqDeps ( clauseNum , depsSet )"	1005:2:22687:22723	2495908	0	True				
ANR	2495957	CallExpression	"p1 -> GetReqDeps ( clauseNum , depsSet )"		2495908	0					
ANR	2495958	Callee	p1 -> GetReqDeps		2495908	0					
ANR	2495959	PtrMemberAccess	p1 -> GetReqDeps		2495908	0					
ANR	2495960	Identifier	p1		2495908	0					
ANR	2495961	Identifier	GetReqDeps		2495908	1					
ANR	2495962	ArgumentList	clauseNum		2495908	1					
ANR	2495963	Argument	clauseNum		2495908	0					
ANR	2495964	Identifier	clauseNum		2495908	0					
ANR	2495965	Argument	depsSet		2495908	1					
ANR	2495966	Identifier	depsSet		2495908	0					
ANR	2495967	ExpressionStatement	p2 -> GetAttrDeps ( depsSet )	1006:2:22727:22753	2495908	1	True				
ANR	2495968	CallExpression	p2 -> GetAttrDeps ( depsSet )		2495908	0					
ANR	2495969	Callee	p2 -> GetAttrDeps		2495908	0					
ANR	2495970	PtrMemberAccess	p2 -> GetAttrDeps		2495908	0					
ANR	2495971	Identifier	p2		2495908	0					
ANR	2495972	Identifier	GetAttrDeps		2495908	1					
ANR	2495973	ArgumentList	depsSet		2495908	1					
ANR	2495974	Argument	depsSet		2495908	0					
ANR	2495975	Identifier	depsSet		2495908	0					
ANR	2495976	IfStatement	if ( depsSet . size ( ) == 0 )		2495908	2					
ANR	2495977	Condition	depsSet . size ( ) == 0	1007:6:22761:22780	2495908	0	True				
ANR	2495978	EqualityExpression	depsSet . size ( ) == 0		2495908	0		==			
ANR	2495979	CallExpression	depsSet . size ( )		2495908	0					
ANR	2495980	Callee	depsSet . size		2495908	0					
ANR	2495981	MemberAccess	depsSet . size		2495908	0					
ANR	2495982	Identifier	depsSet		2495908	0					
ANR	2495983	Identifier	size		2495908	1					
ANR	2495984	ArgumentList			2495908	1					
ANR	2495985	PrimaryExpression	0		2495908	1					
ANR	2495986	CompoundStatement		19:29:586:586	2495908	1					
ANR	2495987	IfStatement	"if ( EvalReqs ( p1 , p2 , paths ) )"		2495908	0					
ANR	2495988	Condition	"EvalReqs ( p1 , p2 , paths )"	1010:7:22852:22876	2495908	0	True				
ANR	2495989	CallExpression	"EvalReqs ( p1 , p2 , paths )"		2495908	0					
ANR	2495990	Callee	EvalReqs		2495908	0					
ANR	2495991	Identifier	EvalReqs		2495908	0					
ANR	2495992	ArgumentList	p1		2495908	1					
ANR	2495993	Argument	p1		2495908	0					
ANR	2495994	Identifier	p1		2495908	0					
ANR	2495995	Argument	p2		2495908	1					
ANR	2495996	Identifier	p2		2495908	0					
ANR	2495997	Argument	paths		2495908	2					
ANR	2495998	Identifier	paths		2495908	0					
ANR	2495999	CompoundStatement		22:35:682:682	2495908	1					
ANR	2496000	IfStatement	"if ( AddMatchEdge ( p1 , p2 , paths ) )"		2495908	0					
ANR	2496001	Condition	"AddMatchEdge ( p1 , p2 , paths )"	1011:8:22890:22918	2495908	0	True				
ANR	2496002	CallExpression	"AddMatchEdge ( p1 , p2 , paths )"		2495908	0					
ANR	2496003	Callee	AddMatchEdge		2495908	0					
ANR	2496004	Identifier	AddMatchEdge		2495908	0					
ANR	2496005	ArgumentList	p1		2495908	1					
ANR	2496006	Argument	p1		2495908	0					
ANR	2496007	Identifier	p1		2495908	0					
ANR	2496008	Argument	p2		2495908	1					
ANR	2496009	Identifier	p2		2495908	0					
ANR	2496010	Argument	paths		2495908	2					
ANR	2496011	Identifier	paths		2495908	0					
ANR	2496012	CompoundStatement		23:40:724:724	2495908	1					
ANR	2496013	ReturnStatement	return true ;	1012:5:22929:22940	2495908	0	True				
ANR	2496014	Identifier	true		2495908	0					
ANR	2496015	ReturnStatement	return false ;	1015:3:22957:22969	2495908	1	True				
ANR	2496016	Identifier	false		2495908	0					
ANR	2496017	ElseStatement	else		2495908	0					
ANR	2496018	CompoundStatement		51:3:1508:1526	2495908	0					
ANR	2496019	ForStatement	for ( d = depsSet . begin ( ) ; d != depsSet . end ( ) ; d ++ )		2495908	0					
ANR	2496020	ForInit	d = depsSet . begin ( ) ;	1021:8:23161:23181	2495908	0	True				
ANR	2496021	AssignmentExpression	d = depsSet . begin ( )		2495908	0		=			
ANR	2496022	Identifier	d		2495908	0					
ANR	2496023	CallExpression	depsSet . begin ( )		2495908	1					
ANR	2496024	Callee	depsSet . begin		2495908	0					
ANR	2496025	MemberAccess	depsSet . begin		2495908	0					
ANR	2496026	Identifier	depsSet		2495908	0					
ANR	2496027	Identifier	begin		2495908	1					
ANR	2496028	ArgumentList			2495908	1					
ANR	2496029	Condition	d != depsSet . end ( )	1021:30:23183:23201	2495908	1	True				
ANR	2496030	EqualityExpression	d != depsSet . end ( )		2495908	0		!=			
ANR	2496031	Identifier	d		2495908	0					
ANR	2496032	CallExpression	depsSet . end ( )		2495908	1					
ANR	2496033	Callee	depsSet . end		2495908	0					
ANR	2496034	MemberAccess	depsSet . end		2495908	0					
ANR	2496035	Identifier	depsSet		2495908	0					
ANR	2496036	Identifier	end		2495908	1					
ANR	2496037	ArgumentList			2495908	1					
ANR	2496038	PostIncDecOperationExpression	d ++	1021:51:23204:23206	2495908	2	True				
ANR	2496039	Identifier	d		2495908	0					
ANR	2496040	IncDec	++		2495908	1					
ANR	2496041	CompoundStatement		33:57:1012:1012	2495908	3					
ANR	2496042	ExpressionStatement	deps . push_back ( * d )	1022:4:23216:23236	2495908	0	True				
ANR	2496043	CallExpression	deps . push_back ( * d )		2495908	0					
ANR	2496044	Callee	deps . push_back		2495908	0					
ANR	2496045	MemberAccess	deps . push_back		2495908	0					
ANR	2496046	Identifier	deps		2495908	0					
ANR	2496047	Identifier	push_back		2495908	1					
ANR	2496048	ArgumentList	* d		2495908	1					
ANR	2496049	Argument	* d		2495908	0					
ANR	2496050	UnaryOperationExpression	* d		2495908	0					
ANR	2496051	UnaryOperator	*		2495908	0					
ANR	2496052	Identifier	d		2495908	1					
ANR	2496053	IdentifierDeclStatement	MatchPath * path = NULL ;	1028:3:23368:23390	2495908	1	True				
ANR	2496054	IdentifierDecl	* path = NULL		2495908	0					
ANR	2496055	IdentifierDeclType	MatchPath *		2495908	0					
ANR	2496056	Identifier	path		2495908	1					
ANR	2496057	AssignmentExpression	* path = NULL		2495908	2		=			
ANR	2496058	Identifier	NULL		2495908	0					
ANR	2496059	Identifier	NULL		2495908	1					
ANR	2496060	ForStatement	for ( unsigned int i = 0 ; i < deps . size ( ) ; i ++ )		2495908	2					
ANR	2496061	ForInit	unsigned int i = 0 ;	1029:8:23400:23418	2495908	0	True				
ANR	2496062	IdentifierDeclStatement	unsigned int i = 0 ;		2495908	0					
ANR	2496063	IdentifierDecl	i = 0		2495908	0					
ANR	2496064	IdentifierDeclType	unsigned int		2495908	0					
ANR	2496065	Identifier	i		2495908	1					
ANR	2496066	AssignmentExpression	i = 0		2495908	2		=			
ANR	2496067	Identifier	i		2495908	0					
ANR	2496068	PrimaryExpression	0		2495908	1					
ANR	2496069	Condition	i < deps . size ( )	1029:28:23420:23435	2495908	1	True				
ANR	2496070	RelationalExpression	i < deps . size ( )		2495908	0		<			
ANR	2496071	Identifier	i		2495908	0					
ANR	2496072	CallExpression	deps . size ( )		2495908	1					
ANR	2496073	Callee	deps . size		2495908	0					
ANR	2496074	MemberAccess	deps . size		2495908	0					
ANR	2496075	Identifier	deps		2495908	0					
ANR	2496076	Identifier	size		2495908	1					
ANR	2496077	ArgumentList			2495908	1					
ANR	2496078	PostIncDecOperationExpression	i ++	1029:46:23438:23441	2495908	2	True				
ANR	2496079	Identifier	i		2495908	0					
ANR	2496080	IncDec	++		2495908	1					
ANR	2496081	CompoundStatement		41:53:1247:1247	2495908	3					
ANR	2496082	ExpressionStatement	path = deps [ i ] -> GetFirstPath ( )	1030:4:23451:23482	2495908	0	True				
ANR	2496083	AssignmentExpression	path = deps [ i ] -> GetFirstPath ( )		2495908	0		=			
ANR	2496084	Identifier	path		2495908	0					
ANR	2496085	CallExpression	deps [ i ] -> GetFirstPath ( )		2495908	1					
ANR	2496086	Callee	deps [ i ] -> GetFirstPath		2495908	0					
ANR	2496087	PtrMemberAccess	deps [ i ] -> GetFirstPath		2495908	0					
ANR	2496088	ArrayIndexing	deps [ i ]		2495908	0					
ANR	2496089	Identifier	deps		2495908	0					
ANR	2496090	Identifier	i		2495908	1					
ANR	2496091	Identifier	GetFirstPath		2495908	1					
ANR	2496092	ArgumentList			2495908	1					
ANR	2496093	IfStatement	if ( path )		2495908	1					
ANR	2496094	Condition	path	1031:8:23492:23495	2495908	0	True				
ANR	2496095	Identifier	path		2495908	0					
ANR	2496096	CompoundStatement		43:15:1301:1301	2495908	1					
ANR	2496097	ExpressionStatement	paths . push_back ( path )	1032:5:23506:23529	2495908	0	True				
ANR	2496098	CallExpression	paths . push_back ( path )		2495908	0					
ANR	2496099	Callee	paths . push_back		2495908	0					
ANR	2496100	MemberAccess	paths . push_back		2495908	0					
ANR	2496101	Identifier	paths		2495908	0					
ANR	2496102	Identifier	push_back		2495908	1					
ANR	2496103	ArgumentList	path		2495908	1					
ANR	2496104	Argument	path		2495908	0					
ANR	2496105	Identifier	path		2495908	0					
ANR	2496106	IdentifierDeclStatement	bool moreCombos = true ;	1038:3:23679:23701	2495908	3	True				
ANR	2496107	IdentifierDecl	moreCombos = true		2495908	0					
ANR	2496108	IdentifierDeclType	bool		2495908	0					
ANR	2496109	Identifier	moreCombos		2495908	1					
ANR	2496110	AssignmentExpression	moreCombos = true		2495908	2		=			
ANR	2496111	Identifier	true		2495908	0					
ANR	2496112	Identifier	true		2495908	1					
ANR	2496113	IdentifierDeclStatement	unsigned int i = 0 ;	1039:3:23706:23724	2495908	4	True				
ANR	2496114	IdentifierDecl	i = 0		2495908	0					
ANR	2496115	IdentifierDeclType	unsigned int		2495908	0					
ANR	2496116	Identifier	i		2495908	1					
ANR	2496117	AssignmentExpression	i = 0		2495908	2		=			
ANR	2496118	Identifier	i		2495908	0					
ANR	2496119	PrimaryExpression	0		2495908	1					
ANR	2496120	WhileStatement	while ( moreCombos )		2495908	5					
ANR	2496121	Condition	moreCombos	1040:10:23736:23745	2495908	0	True				
ANR	2496122	Identifier	moreCombos		2495908	0					
ANR	2496123	CompoundStatement		71:4:2234:2253	2495908	1					
ANR	2496124	IfStatement	"if ( EvalReqs ( p1 , p2 , paths ) )"		2495908	0					
ANR	2496125	Condition	"EvalReqs ( p1 , p2 , paths )"	1047:8:24016:24040	2495908	0	True				
ANR	2496126	CallExpression	"EvalReqs ( p1 , p2 , paths )"		2495908	0					
ANR	2496127	Callee	EvalReqs		2495908	0					
ANR	2496128	Identifier	EvalReqs		2495908	0					
ANR	2496129	ArgumentList	p1		2495908	1					
ANR	2496130	Argument	p1		2495908	0					
ANR	2496131	Identifier	p1		2495908	0					
ANR	2496132	Argument	p2		2495908	1					
ANR	2496133	Identifier	p2		2495908	0					
ANR	2496134	Argument	paths		2495908	2					
ANR	2496135	Identifier	paths		2495908	0					
ANR	2496136	CompoundStatement		59:36:1846:1846	2495908	1					
ANR	2496137	IfStatement	"if ( AddMatchEdge ( p1 , p2 , paths ) )"		2495908	0					
ANR	2496138	Condition	"AddMatchEdge ( p1 , p2 , paths )"	1053:10:24262:24290	2495908	0	True				
ANR	2496139	CallExpression	"AddMatchEdge ( p1 , p2 , paths )"		2495908	0					
ANR	2496140	Callee	AddMatchEdge		2495908	0					
ANR	2496141	Identifier	AddMatchEdge		2495908	0					
ANR	2496142	ArgumentList	p1		2495908	1					
ANR	2496143	Argument	p1		2495908	0					
ANR	2496144	Identifier	p1		2495908	0					
ANR	2496145	Argument	p2		2495908	1					
ANR	2496146	Identifier	p2		2495908	0					
ANR	2496147	Argument	paths		2495908	2					
ANR	2496148	Identifier	paths		2495908	0					
ANR	2496149	CompoundStatement		65:42:2096:2096	2495908	1					
ANR	2496150	ExpressionStatement	success = true	1054:6:24302:24316	2495908	0	True				
ANR	2496151	AssignmentExpression	success = true		2495908	0		=			
ANR	2496152	Identifier	success		2495908	0					
ANR	2496153	Identifier	true		2495908	1					
ANR	2496154	IdentifierDeclStatement	bool incNext = true ;	1059:4:24432:24451	2495908	1	True				
ANR	2496155	IdentifierDecl	incNext = true		2495908	0					
ANR	2496156	IdentifierDeclType	bool		2495908	0					
ANR	2496157	Identifier	incNext		2495908	1					
ANR	2496158	AssignmentExpression	incNext = true		2495908	2		=			
ANR	2496159	Identifier	true		2495908	0					
ANR	2496160	Identifier	true		2495908	1					
ANR	2496161	WhileStatement	while ( incNext )		2495908	2					
ANR	2496162	Condition	incNext	1060:11:24464:24470	2495908	0	True				
ANR	2496163	Identifier	incNext		2495908	0					
ANR	2496164	CompoundStatement		72:21:2276:2276	2495908	1					
ANR	2496165	ExpressionStatement	path = deps [ i ] -> GetNextPath ( )	1061:5:24481:24511	2495908	0	True				
ANR	2496166	AssignmentExpression	path = deps [ i ] -> GetNextPath ( )		2495908	0		=			
ANR	2496167	Identifier	path		2495908	0					
ANR	2496168	CallExpression	deps [ i ] -> GetNextPath ( )		2495908	1					
ANR	2496169	Callee	deps [ i ] -> GetNextPath		2495908	0					
ANR	2496170	PtrMemberAccess	deps [ i ] -> GetNextPath		2495908	0					
ANR	2496171	ArrayIndexing	deps [ i ]		2495908	0					
ANR	2496172	Identifier	deps		2495908	0					
ANR	2496173	Identifier	i		2495908	1					
ANR	2496174	Identifier	GetNextPath		2495908	1					
ANR	2496175	ArgumentList			2495908	1					
ANR	2496176	IfStatement	if ( ! path )		2495908	1					
ANR	2496177	Condition	! path	1062:9:24522:24526	2495908	0	True				
ANR	2496178	UnaryOperationExpression	! path		2495908	0					
ANR	2496179	UnaryOperator	!		2495908	0					
ANR	2496180	Identifier	path		2495908	1					
ANR	2496181	CompoundStatement		74:17:2332:2332	2495908	1					
ANR	2496182	IfStatement	if ( i < deps . size ( ) - 1 )		2495908	0					
ANR	2496183	Condition	i < deps . size ( ) - 1	1067:10:24688:24707	2495908	0	True				
ANR	2496184	RelationalExpression	i < deps . size ( ) - 1		2495908	0		<			
ANR	2496185	Identifier	i		2495908	0					
ANR	2496186	AdditiveExpression	deps . size ( ) - 1		2495908	1		-			
ANR	2496187	CallExpression	deps . size ( )		2495908	0					
ANR	2496188	Callee	deps . size		2495908	0					
ANR	2496189	MemberAccess	deps . size		2495908	0					
ANR	2496190	Identifier	deps		2495908	0					
ANR	2496191	Identifier	size		2495908	1					
ANR	2496192	ArgumentList			2495908	1					
ANR	2496193	PrimaryExpression	1		2495908	1					
ANR	2496194	CompoundStatement		79:33:2513:2513	2495908	1					
ANR	2496195	ExpressionStatement	path = deps [ i ] -> GetFirstPath ( )	1070:7:24811:24842	2495908	0	True				
ANR	2496196	AssignmentExpression	path = deps [ i ] -> GetFirstPath ( )		2495908	0		=			
ANR	2496197	Identifier	path		2495908	0					
ANR	2496198	CallExpression	deps [ i ] -> GetFirstPath ( )		2495908	1					
ANR	2496199	Callee	deps [ i ] -> GetFirstPath		2495908	0					
ANR	2496200	PtrMemberAccess	deps [ i ] -> GetFirstPath		2495908	0					
ANR	2496201	ArrayIndexing	deps [ i ]		2495908	0					
ANR	2496202	Identifier	deps		2495908	0					
ANR	2496203	Identifier	i		2495908	1					
ANR	2496204	Identifier	GetFirstPath		2495908	1					
ANR	2496205	ArgumentList			2495908	1					
ANR	2496206	IfStatement	if ( ! path )		2495908	1					
ANR	2496207	Condition	! path	1071:11:24855:24859	2495908	0	True				
ANR	2496208	UnaryOperationExpression	! path		2495908	0					
ANR	2496209	UnaryOperator	!		2495908	0					
ANR	2496210	Identifier	path		2495908	1					
ANR	2496211	CompoundStatement		83:19:2665:2665	2495908	1					
ANR	2496212	ReturnStatement	return false ;	1072:8:24873:24885	2495908	0	True				
ANR	2496213	Identifier	false		2495908	0					
ANR	2496214	ExpressionStatement	paths [ i ] = path	1074:7:24903:24918	2495908	2	True				
ANR	2496215	AssignmentExpression	paths [ i ] = path		2495908	0		=			
ANR	2496216	ArrayIndexing	paths [ i ]		2495908	0					
ANR	2496217	Identifier	paths		2495908	0					
ANR	2496218	Identifier	i		2495908	1					
ANR	2496219	Identifier	path		2495908	1					
ANR	2496220	ExpressionStatement	i ++	1075:7:24927:24930	2495908	3	True				
ANR	2496221	PostIncDecOperationExpression	i ++		2495908	0					
ANR	2496222	Identifier	i		2495908	0					
ANR	2496223	IncDec	++		2495908	1					
ANR	2496224	ElseStatement	else		2495908	0					
ANR	2496225	CompoundStatement		89:11:2753:2753	2495908	0					
ANR	2496226	ExpressionStatement	incNext = false	1080:7:25056:25071	2495908	0	True				
ANR	2496227	AssignmentExpression	incNext = false		2495908	0		=			
ANR	2496228	Identifier	incNext		2495908	0					
ANR	2496229	Identifier	false		2495908	1					
ANR	2496230	ExpressionStatement	moreCombos = false	1081:7:25080:25098	2495908	1	True				
ANR	2496231	AssignmentExpression	moreCombos = false		2495908	0		=			
ANR	2496232	Identifier	moreCombos		2495908	0					
ANR	2496233	Identifier	false		2495908	1					
ANR	2496234	ElseStatement	else		2495908	0					
ANR	2496235	CompoundStatement		96:10:2927:2927	2495908	0					
ANR	2496236	ExpressionStatement	paths [ i ] = path	1085:6:25133:25148	2495908	0	True				
ANR	2496237	AssignmentExpression	paths [ i ] = path		2495908	0		=			
ANR	2496238	ArrayIndexing	paths [ i ]		2495908	0					
ANR	2496239	Identifier	paths		2495908	0					
ANR	2496240	Identifier	i		2495908	1					
ANR	2496241	Identifier	path		2495908	1					
ANR	2496242	ExpressionStatement	incNext = false	1086:6:25156:25171	2495908	1	True				
ANR	2496243	AssignmentExpression	incNext = false		2495908	0		=			
ANR	2496244	Identifier	incNext		2495908	0					
ANR	2496245	Identifier	false		2495908	1					
ANR	2496246	ExpressionStatement	depsSet . clear ( )	1091:2:25197:25213	2495908	3	True				
ANR	2496247	CallExpression	depsSet . clear ( )		2495908	0					
ANR	2496248	Callee	depsSet . clear		2495908	0					
ANR	2496249	MemberAccess	depsSet . clear		2495908	0					
ANR	2496250	Identifier	depsSet		2495908	0					
ANR	2496251	Identifier	clear		2495908	1					
ANR	2496252	ArgumentList			2495908	1					
ANR	2496253	ExpressionStatement	paths . clear ( )	1092:2:25217:25231	2495908	4	True				
ANR	2496254	CallExpression	paths . clear ( )		2495908	0					
ANR	2496255	Callee	paths . clear		2495908	0					
ANR	2496256	MemberAccess	paths . clear		2495908	0					
ANR	2496257	Identifier	paths		2495908	0					
ANR	2496258	Identifier	clear		2495908	1					
ANR	2496259	ArgumentList			2495908	1					
ANR	2496260	ExpressionStatement	deps . clear ( )	1093:2:25235:25248	2495908	5	True				
ANR	2496261	CallExpression	deps . clear ( )		2495908	0					
ANR	2496262	Callee	deps . clear		2495908	0					
ANR	2496263	MemberAccess	deps . clear		2495908	0					
ANR	2496264	Identifier	deps		2495908	0					
ANR	2496265	Identifier	clear		2495908	1					
ANR	2496266	ArgumentList			2495908	1					
ANR	2496267	ReturnStatement	return success ;	1097:1:25322:25336	2495908	6	True				
ANR	2496268	Identifier	success		2495908	0					
ANR	2496269	ReturnType	bool		2495908	1					
ANR	2496270	Identifier	PortGraph :: AddMatchEdges		2495908	2					
ANR	2496271	ParameterList	"PortNode * p1 , PortNode * p2"		2495908	3					
ANR	2496272	Parameter	PortNode * p1	988:15:22168:22179	2495908	0	True				
ANR	2496273	ParameterType	PortNode *		2495908	0					
ANR	2496274	Identifier	p1		2495908	1					
ANR	2496275	Parameter	PortNode * p2	988:29:22182:22193	2495908	1	True				
ANR	2496276	ParameterType	PortNode *		2495908	0					
ANR	2496277	Identifier	p2		2495908	1					
ANR	2496278	CFGEntryNode	ENTRY		2495908		True				
ANR	2496279	CFGExitNode	EXIT		2495908		True				
ANR	2496280	Symbol	* paths		2495908						
ANR	2496281	Symbol	p1		2495908						
ANR	2496282	Symbol	p2		2495908						
ANR	2496283	Symbol	AddMatchEdge		2495908						
ANR	2496284	Symbol	p1 -> GetNumClauses		2495908						
ANR	2496285	Symbol	depsSet . size		2495908						
ANR	2496286	Symbol	incNext		2495908						
ANR	2496287	Symbol	clauseNum		2495908						
ANR	2496288	Symbol	deps [ i ] -> GetFirstPath		2495908						
ANR	2496289	Symbol	path		2495908						
ANR	2496290	Symbol	depsSet		2495908						
ANR	2496291	Symbol	depsSet . end		2495908						
ANR	2496292	Symbol	EvalReqs		2495908						
ANR	2496293	Symbol	deps [ i ] -> GetNextPath		2495908						
ANR	2496294	Symbol	* * i		2495908						
ANR	2496295	Symbol	NULL		2495908						
ANR	2496296	Symbol	d		2495908						
ANR	2496297	Symbol	* p1		2495908						
ANR	2496298	Symbol	* * deps		2495908						
ANR	2496299	Symbol	* deps		2495908						
ANR	2496300	Symbol	false		2495908						
ANR	2496301	Symbol	deps . size		2495908						
ANR	2496302	Symbol	i		2495908						
ANR	2496303	Symbol	deps		2495908						
ANR	2496304	Symbol	moreCombos		2495908						
ANR	2496305	Symbol	* d		2495908						
ANR	2496306	Symbol	* i		2495908						
ANR	2496307	Symbol	success		2495908						
ANR	2496308	Symbol	paths		2495908						
ANR	2496309	Symbol	true		2495908						
ANR	2496310	Symbol	depsSet . begin		2495908						
ANR	2496311	Function	PortGraph :: EvalReqs	1100:0:25341:27855							
ANR	2496312	FunctionDef	"PortGraph :: EvalReqs (PortNode * p1 , PortNode * p2 , std :: vector < MatchPath * > & paths)"		2496311	0					
ANR	2496313	CompoundStatement		1102:0:25429:27855	2496311	0					
ANR	2496314	IdentifierDeclStatement	classad :: ClassAd * ad1 = ( classad :: ClassAd * ) p1 -> GetParentAd ( ) -> Copy ( ) ;	1104:1:25459:25529	2496311	0	True				
ANR	2496315	IdentifierDecl	* ad1 = ( classad :: ClassAd * ) p1 -> GetParentAd ( ) -> Copy ( )		2496311	0					
ANR	2496316	IdentifierDeclType	classad :: ClassAd *		2496311	0					
ANR	2496317	Identifier	ad1		2496311	1					
ANR	2496318	AssignmentExpression	* ad1 = ( classad :: ClassAd * ) p1 -> GetParentAd ( ) -> Copy ( )		2496311	2		=			
ANR	2496319	Identifier	ad1		2496311	0					
ANR	2496320	CastExpression	( classad :: ClassAd * ) p1 -> GetParentAd ( ) -> Copy ( )		2496311	1					
ANR	2496321	CastTarget	classad :: ClassAd *		2496311	0					
ANR	2496322	CallExpression	p1 -> GetParentAd ( ) -> Copy ( )		2496311	1					
ANR	2496323	Callee	p1 -> GetParentAd ( ) -> Copy		2496311	0					
ANR	2496324	PtrMemberAccess	p1 -> GetParentAd ( ) -> Copy		2496311	0					
ANR	2496325	CallExpression	p1 -> GetParentAd ( )		2496311	0					
ANR	2496326	Callee	p1 -> GetParentAd		2496311	0					
ANR	2496327	PtrMemberAccess	p1 -> GetParentAd		2496311	0					
ANR	2496328	Identifier	p1		2496311	0					
ANR	2496329	Identifier	GetParentAd		2496311	1					
ANR	2496330	ArgumentList			2496311	1					
ANR	2496331	Identifier	Copy		2496311	1					
ANR	2496332	ArgumentList			2496311	1					
ANR	2496333	IdentifierDeclStatement	classad :: ClassAd * ad2 = ( classad :: ClassAd * ) p2 -> GetParentAd ( ) -> Copy ( ) ;	1105:1:25532:25602	2496311	1	True				
ANR	2496334	IdentifierDecl	* ad2 = ( classad :: ClassAd * ) p2 -> GetParentAd ( ) -> Copy ( )		2496311	0					
ANR	2496335	IdentifierDeclType	classad :: ClassAd *		2496311	0					
ANR	2496336	Identifier	ad2		2496311	1					
ANR	2496337	AssignmentExpression	* ad2 = ( classad :: ClassAd * ) p2 -> GetParentAd ( ) -> Copy ( )		2496311	2		=			
ANR	2496338	Identifier	ad2		2496311	0					
ANR	2496339	CastExpression	( classad :: ClassAd * ) p2 -> GetParentAd ( ) -> Copy ( )		2496311	1					
ANR	2496340	CastTarget	classad :: ClassAd *		2496311	0					
ANR	2496341	CallExpression	p2 -> GetParentAd ( ) -> Copy ( )		2496311	1					
ANR	2496342	Callee	p2 -> GetParentAd ( ) -> Copy		2496311	0					
ANR	2496343	PtrMemberAccess	p2 -> GetParentAd ( ) -> Copy		2496311	0					
ANR	2496344	CallExpression	p2 -> GetParentAd ( )		2496311	0					
ANR	2496345	Callee	p2 -> GetParentAd		2496311	0					
ANR	2496346	PtrMemberAccess	p2 -> GetParentAd		2496311	0					
ANR	2496347	Identifier	p2		2496311	0					
ANR	2496348	Identifier	GetParentAd		2496311	1					
ANR	2496349	ArgumentList			2496311	1					
ANR	2496350	Identifier	Copy		2496311	1					
ANR	2496351	ArgumentList			2496311	1					
ANR	2496352	IdentifierDeclStatement	"GMR * gmr1 = GMR :: MakeGMR ( 0 , ad1 ) ;"	1106:1:25605:25639	2496311	2	True				
ANR	2496353	IdentifierDecl	"* gmr1 = GMR :: MakeGMR ( 0 , ad1 )"		2496311	0					
ANR	2496354	IdentifierDeclType	GMR *		2496311	0					
ANR	2496355	Identifier	gmr1		2496311	1					
ANR	2496356	AssignmentExpression	"* gmr1 = GMR :: MakeGMR ( 0 , ad1 )"		2496311	2		=			
ANR	2496357	Identifier	gmr1		2496311	0					
ANR	2496358	CallExpression	"GMR :: MakeGMR ( 0 , ad1 )"		2496311	1					
ANR	2496359	Callee	GMR :: MakeGMR		2496311	0					
ANR	2496360	Identifier	GMR :: MakeGMR		2496311	0					
ANR	2496361	ArgumentList	0		2496311	1					
ANR	2496362	Argument	0		2496311	0					
ANR	2496363	PrimaryExpression	0		2496311	0					
ANR	2496364	Argument	ad1		2496311	1					
ANR	2496365	Identifier	ad1		2496311	0					
ANR	2496366	IdentifierDeclStatement	"GMR * gmr2 = GMR :: MakeGMR ( 1 , ad2 ) ;"	1108:1:25670:25704	2496311	3	True				
ANR	2496367	IdentifierDecl	"* gmr2 = GMR :: MakeGMR ( 1 , ad2 )"		2496311	0					
ANR	2496368	IdentifierDeclType	GMR *		2496311	0					
ANR	2496369	Identifier	gmr2		2496311	1					
ANR	2496370	AssignmentExpression	"* gmr2 = GMR :: MakeGMR ( 1 , ad2 )"		2496311	2		=			
ANR	2496371	Identifier	gmr2		2496311	0					
ANR	2496372	CallExpression	"GMR :: MakeGMR ( 1 , ad2 )"		2496311	1					
ANR	2496373	Callee	GMR :: MakeGMR		2496311	0					
ANR	2496374	Identifier	GMR :: MakeGMR		2496311	0					
ANR	2496375	ArgumentList	1		2496311	1					
ANR	2496376	Argument	1		2496311	0					
ANR	2496377	PrimaryExpression	1		2496311	0					
ANR	2496378	Argument	ad2		2496311	1					
ANR	2496379	Identifier	ad2		2496311	0					
ANR	2496380	IdentifierDeclStatement	"Gangster gangster_p1 ( NULL , - 1 ) ;"	1112:1:25768:25800	2496311	4	True				
ANR	2496381	IdentifierDecl	"gangster_p1 ( NULL , - 1 )"		2496311	0					
ANR	2496382	IdentifierDeclType	Gangster		2496311	0					
ANR	2496383	Identifier	gangster_p1		2496311	1					
ANR	2496384	Expression	"NULL , - 1"		2496311	2					
ANR	2496385	Identifier	NULL		2496311	0					
ANR	2496386	UnaryOperationExpression	- 1		2496311	1					
ANR	2496387	UnaryOperator	-		2496311	0					
ANR	2496388	PrimaryExpression	1		2496311	1					
ANR	2496389	ExpressionStatement	gangster_p1 . assign ( gmr1 )	1113:1:25803:25829	2496311	5	True				
ANR	2496390	CallExpression	gangster_p1 . assign ( gmr1 )		2496311	0					
ANR	2496391	Callee	gangster_p1 . assign		2496311	0					
ANR	2496392	MemberAccess	gangster_p1 . assign		2496311	0					
ANR	2496393	Identifier	gangster_p1		2496311	0					
ANR	2496394	Identifier	assign		2496311	1					
ANR	2496395	ArgumentList	gmr1		2496311	1					
ANR	2496396	Argument	gmr1		2496311	0					
ANR	2496397	Identifier	gmr1		2496311	0					
ANR	2496398	IdentifierDeclStatement	"Gangster gangster_p2 ( & gangster_p1 , p1 -> GetPortNum ( ) ) ;"	1114:1:25832:25887	2496311	6	True				
ANR	2496399	IdentifierDecl	"gangster_p2 ( & gangster_p1 , p1 -> GetPortNum ( ) )"		2496311	0					
ANR	2496400	IdentifierDeclType	Gangster		2496311	0					
ANR	2496401	Identifier	gangster_p2		2496311	1					
ANR	2496402	Expression	"& gangster_p1 , p1 -> GetPortNum ( )"		2496311	2					
ANR	2496403	UnaryOperationExpression	& gangster_p1		2496311	0					
ANR	2496404	UnaryOperator	&		2496311	0					
ANR	2496405	Identifier	gangster_p1		2496311	1					
ANR	2496406	CallExpression	p1 -> GetPortNum ( )		2496311	1					
ANR	2496407	Callee	p1 -> GetPortNum		2496311	0					
ANR	2496408	PtrMemberAccess	p1 -> GetPortNum		2496311	0					
ANR	2496409	Identifier	p1		2496311	0					
ANR	2496410	Identifier	GetPortNum		2496311	1					
ANR	2496411	ArgumentList			2496311	1					
ANR	2496412	ExpressionStatement	gangster_p2 . assign ( gmr2 )	1115:1:25890:25916	2496311	7	True				
ANR	2496413	CallExpression	gangster_p2 . assign ( gmr2 )		2496311	0					
ANR	2496414	Callee	gangster_p2 . assign		2496311	0					
ANR	2496415	MemberAccess	gangster_p2 . assign		2496311	0					
ANR	2496416	Identifier	gangster_p2		2496311	0					
ANR	2496417	Identifier	assign		2496311	1					
ANR	2496418	ArgumentList	gmr2		2496311	1					
ANR	2496419	Argument	gmr2		2496311	0					
ANR	2496420	Identifier	gmr2		2496311	0					
ANR	2496421	ExpressionStatement	gangster_p2 . setupMatchBindings ( p2 -> GetPortNum ( ) )	1116:1:25919:25970	2496311	8	True				
ANR	2496422	CallExpression	gangster_p2 . setupMatchBindings ( p2 -> GetPortNum ( ) )		2496311	0					
ANR	2496423	Callee	gangster_p2 . setupMatchBindings		2496311	0					
ANR	2496424	MemberAccess	gangster_p2 . setupMatchBindings		2496311	0					
ANR	2496425	Identifier	gangster_p2		2496311	0					
ANR	2496426	Identifier	setupMatchBindings		2496311	1					
ANR	2496427	ArgumentList	p2 -> GetPortNum ( )		2496311	1					
ANR	2496428	Argument	p2 -> GetPortNum ( )		2496311	0					
ANR	2496429	CallExpression	p2 -> GetPortNum ( )		2496311	0					
ANR	2496430	Callee	p2 -> GetPortNum		2496311	0					
ANR	2496431	PtrMemberAccess	p2 -> GetPortNum		2496311	0					
ANR	2496432	Identifier	p2		2496311	0					
ANR	2496433	Identifier	GetPortNum		2496311	1					
ANR	2496434	ArgumentList			2496311	1					
ANR	2496435	IfStatement	if ( ! paths . empty ( ) )		2496311	9					
ANR	2496436	Condition	! paths . empty ( )	1119:5:26005:26019	2496311	0	True				
ANR	2496437	UnaryOperationExpression	! paths . empty ( )		2496311	0					
ANR	2496438	UnaryOperator	!		2496311	0					
ANR	2496439	CallExpression	paths . empty ( )		2496311	1					
ANR	2496440	Callee	paths . empty		2496311	0					
ANR	2496441	MemberAccess	paths . empty		2496311	0					
ANR	2496442	Identifier	paths		2496311	0					
ANR	2496443	Identifier	empty		2496311	1					
ANR	2496444	ArgumentList			2496311	1					
ANR	2496445	CompoundStatement		29:2:805:840	2496311	1					
ANR	2496446	IdentifierDeclStatement	"Gangster * curr_gangster , * next_gangster ;"	1120:2:26027:26066	2496311	0	True				
ANR	2496447	IdentifierDecl	* curr_gangster		2496311	0					
ANR	2496448	IdentifierDeclType	Gangster *		2496311	0					
ANR	2496449	Identifier	curr_gangster		2496311	1					
ANR	2496450	IdentifierDecl	* next_gangster		2496311	1					
ANR	2496451	IdentifierDeclType	Gangster *		2496311	0					
ANR	2496452	Identifier	next_gangster		2496311	1					
ANR	2496453	IdentifierDeclStatement	"PortNode * source , * target ;"	1121:2:26070:26095	2496311	1	True				
ANR	2496454	IdentifierDecl	* source		2496311	0					
ANR	2496455	IdentifierDeclType	PortNode *		2496311	0					
ANR	2496456	Identifier	source		2496311	1					
ANR	2496457	IdentifierDecl	* target		2496311	1					
ANR	2496458	IdentifierDeclType	PortNode *		2496311	0					
ANR	2496459	Identifier	target		2496311	1					
ANR	2496460	IdentifierDeclStatement	GMR * gmr ;	1122:2:26099:26107	2496311	2	True				
ANR	2496461	IdentifierDecl	* gmr		2496311	0					
ANR	2496462	IdentifierDeclType	GMR *		2496311	0					
ANR	2496463	Identifier	gmr		2496311	1					
ANR	2496464	IdentifierDeclStatement	MatchEdge * edge ;	1123:2:26111:26126	2496311	3	True				
ANR	2496465	IdentifierDecl	* edge		2496311	0					
ANR	2496466	IdentifierDeclType	MatchEdge *		2496311	0					
ANR	2496467	Identifier	edge		2496311	1					
ANR	2496468	IdentifierDeclStatement	classad :: ClassAd * ad ;	1124:2:26130:26150	2496311	4	True				
ANR	2496469	IdentifierDecl	* ad		2496311	0					
ANR	2496470	IdentifierDeclType	classad :: ClassAd *		2496311	0					
ANR	2496471	Identifier	ad		2496311	1					
ANR	2496472	IdentifierDeclStatement	int nextAdNum = 2 ;	1125:2:26154:26171	2496311	5	True				
ANR	2496473	IdentifierDecl	nextAdNum = 2		2496311	0					
ANR	2496474	IdentifierDeclType	int		2496311	0					
ANR	2496475	Identifier	nextAdNum		2496311	1					
ANR	2496476	AssignmentExpression	nextAdNum = 2		2496311	2		=			
ANR	2496477	Identifier	nextAdNum		2496311	0					
ANR	2496478	PrimaryExpression	2		2496311	1					
ANR	2496479	IdentifierDeclStatement	std :: vector < MatchPath * > :: iterator p ;	1130:2:26235:26270	2496311	6	True				
ANR	2496480	IdentifierDecl	p		2496311	0					
ANR	2496481	IdentifierDeclType	std :: vector < MatchPath * > :: iterator		2496311	0					
ANR	2496482	Identifier	p		2496311	1					
ANR	2496483	ForStatement	for ( p = paths . begin ( ) ; p != paths . end ( ) ; p ++ )		2496311	7					
ANR	2496484	ForInit	p = paths . begin ( ) ;	1131:7:26279:26297	2496311	0	True				
ANR	2496485	AssignmentExpression	p = paths . begin ( )		2496311	0		=			
ANR	2496486	Identifier	p		2496311	0					
ANR	2496487	CallExpression	paths . begin ( )		2496311	1					
ANR	2496488	Callee	paths . begin		2496311	0					
ANR	2496489	MemberAccess	paths . begin		2496311	0					
ANR	2496490	Identifier	paths		2496311	0					
ANR	2496491	Identifier	begin		2496311	1					
ANR	2496492	ArgumentList			2496311	1					
ANR	2496493	Condition	p != paths . end ( )	1131:27:26299:26315	2496311	1	True				
ANR	2496494	EqualityExpression	p != paths . end ( )		2496311	0		!=			
ANR	2496495	Identifier	p		2496311	0					
ANR	2496496	CallExpression	paths . end ( )		2496311	1					
ANR	2496497	Callee	paths . end		2496311	0					
ANR	2496498	MemberAccess	paths . end		2496311	0					
ANR	2496499	Identifier	paths		2496311	0					
ANR	2496500	Identifier	end		2496311	1					
ANR	2496501	ArgumentList			2496311	1					
ANR	2496502	PostIncDecOperationExpression	p ++	1131:46:26318:26320	2496311	2	True				
ANR	2496503	Identifier	p		2496311	0					
ANR	2496504	IncDec	++		2496311	1					
ANR	2496505	CompoundStatement		30:52:894:894	2496311	3					
ANR	2496506	IfStatement	if ( ( * p ) -> Empty ( ) )		2496311	0					
ANR	2496507	Condition	( * p ) -> Empty ( )	1137:7:26419:26432	2496311	0	True				
ANR	2496508	CallExpression	( * p ) -> Empty ( )		2496311	0					
ANR	2496509	Callee	( * p ) -> Empty		2496311	0					
ANR	2496510	PtrMemberAccess	( * p ) -> Empty		2496311	0					
ANR	2496511	UnaryOperationExpression	* p		2496311	0					
ANR	2496512	UnaryOperator	*		2496311	0					
ANR	2496513	Identifier	p		2496311	1					
ANR	2496514	Identifier	Empty		2496311	1					
ANR	2496515	ArgumentList			2496311	1					
ANR	2496516	CompoundStatement		36:24:1006:1006	2496311	1					
ANR	2496517	ExpressionStatement	"cout << ""error: MatchPath is empty"" << endl"	1138:4:26442:26485	2496311	0	True				
ANR	2496518	ShiftExpression	"cout << ""error: MatchPath is empty"" << endl"		2496311	0		<<			
ANR	2496519	Identifier	cout		2496311	0					
ANR	2496520	ShiftExpression	"""error: MatchPath is empty"" << endl"		2496311	1		<<			
ANR	2496521	PrimaryExpression	"""error: MatchPath is empty"""		2496311	0					
ANR	2496522	Identifier	endl		2496311	1					
ANR	2496523	ReturnStatement	return false ;	1139:4:26492:26504	2496311	1	True				
ANR	2496524	Identifier	false		2496311	0					
ANR	2496525	ExpressionStatement	edge = ( * p ) -> GetMatchEdge ( 0 )	1141:3:26514:26544	2496311	1	True				
ANR	2496526	AssignmentExpression	edge = ( * p ) -> GetMatchEdge ( 0 )		2496311	0		=			
ANR	2496527	Identifier	edge		2496311	0					
ANR	2496528	CallExpression	( * p ) -> GetMatchEdge ( 0 )		2496311	1					
ANR	2496529	Callee	( * p ) -> GetMatchEdge		2496311	0					
ANR	2496530	PtrMemberAccess	( * p ) -> GetMatchEdge		2496311	0					
ANR	2496531	UnaryOperationExpression	* p		2496311	0					
ANR	2496532	UnaryOperator	*		2496311	0					
ANR	2496533	Identifier	p		2496311	1					
ANR	2496534	Identifier	GetMatchEdge		2496311	1					
ANR	2496535	ArgumentList	0		2496311	1					
ANR	2496536	Argument	0		2496311	0					
ANR	2496537	PrimaryExpression	0		2496311	0					
ANR	2496538	ExpressionStatement	source = edge -> GetSource ( )	1142:3:26549:26576	2496311	2	True				
ANR	2496539	AssignmentExpression	source = edge -> GetSource ( )		2496311	0		=			
ANR	2496540	Identifier	source		2496311	0					
ANR	2496541	CallExpression	edge -> GetSource ( )		2496311	1					
ANR	2496542	Callee	edge -> GetSource		2496311	0					
ANR	2496543	PtrMemberAccess	edge -> GetSource		2496311	0					
ANR	2496544	Identifier	edge		2496311	0					
ANR	2496545	Identifier	GetSource		2496311	1					
ANR	2496546	ArgumentList			2496311	1					
ANR	2496547	IfStatement	if ( source -> GetAdNum ( ) == p1 -> GetAdNum ( ) )		2496311	3					
ANR	2496548	Condition	source -> GetAdNum ( ) == p1 -> GetAdNum ( )	1143:7:26585:26622	2496311	0	True				
ANR	2496549	EqualityExpression	source -> GetAdNum ( ) == p1 -> GetAdNum ( )		2496311	0		==			
ANR	2496550	CallExpression	source -> GetAdNum ( )		2496311	0					
ANR	2496551	Callee	source -> GetAdNum		2496311	0					
ANR	2496552	PtrMemberAccess	source -> GetAdNum		2496311	0					
ANR	2496553	Identifier	source		2496311	0					
ANR	2496554	Identifier	GetAdNum		2496311	1					
ANR	2496555	ArgumentList			2496311	1					
ANR	2496556	CallExpression	p1 -> GetAdNum ( )		2496311	1					
ANR	2496557	Callee	p1 -> GetAdNum		2496311	0					
ANR	2496558	PtrMemberAccess	p1 -> GetAdNum		2496311	0					
ANR	2496559	Identifier	p1		2496311	0					
ANR	2496560	Identifier	GetAdNum		2496311	1					
ANR	2496561	ArgumentList			2496311	1					
ANR	2496562	CompoundStatement		42:48:1196:1196	2496311	1					
ANR	2496563	ExpressionStatement	curr_gangster = & gangster_p1	1144:4:26632:26660	2496311	0	True				
ANR	2496564	AssignmentExpression	curr_gangster = & gangster_p1		2496311	0		=			
ANR	2496565	Identifier	curr_gangster		2496311	0					
ANR	2496566	UnaryOperationExpression	& gangster_p1		2496311	1					
ANR	2496567	UnaryOperator	&		2496311	0					
ANR	2496568	Identifier	gangster_p1		2496311	1					
ANR	2496569	ElseStatement	else		2496311	0					
ANR	2496570	IfStatement	if ( source -> GetAdNum ( ) == p2 -> GetAdNum ( ) )		2496311	0					
ANR	2496571	Condition	source -> GetAdNum ( ) == p2 -> GetAdNum ( )	1146:12:26679:26716	2496311	0	True				
ANR	2496572	EqualityExpression	source -> GetAdNum ( ) == p2 -> GetAdNum ( )		2496311	0		==			
ANR	2496573	CallExpression	source -> GetAdNum ( )		2496311	0					
ANR	2496574	Callee	source -> GetAdNum		2496311	0					
ANR	2496575	PtrMemberAccess	source -> GetAdNum		2496311	0					
ANR	2496576	Identifier	source		2496311	0					
ANR	2496577	Identifier	GetAdNum		2496311	1					
ANR	2496578	ArgumentList			2496311	1					
ANR	2496579	CallExpression	p2 -> GetAdNum ( )		2496311	1					
ANR	2496580	Callee	p2 -> GetAdNum		2496311	0					
ANR	2496581	PtrMemberAccess	p2 -> GetAdNum		2496311	0					
ANR	2496582	Identifier	p2		2496311	0					
ANR	2496583	Identifier	GetAdNum		2496311	1					
ANR	2496584	ArgumentList			2496311	1					
ANR	2496585	CompoundStatement		45:53:1290:1290	2496311	1					
ANR	2496586	ExpressionStatement	curr_gangster = & gangster_p2	1147:4:26726:26754	2496311	0	True				
ANR	2496587	AssignmentExpression	curr_gangster = & gangster_p2		2496311	0		=			
ANR	2496588	Identifier	curr_gangster		2496311	0					
ANR	2496589	UnaryOperationExpression	& gangster_p2		2496311	1					
ANR	2496590	UnaryOperator	&		2496311	0					
ANR	2496591	Identifier	gangster_p2		2496311	1					
ANR	2496592	ElseStatement	else		2496311	0					
ANR	2496593	CompoundStatement		48:8:1339:1339	2496311	0					
ANR	2496594	ExpressionStatement	"cout << ""error: MatchPath begins with port "" << source -> GetAdNum ( ) << ""."" << source -> GetPortNum ( ) << endl"	1150:4:26775:26894	2496311	0	True				
ANR	2496595	ShiftExpression	"cout << ""error: MatchPath begins with port "" << source -> GetAdNum ( ) << ""."" << source -> GetPortNum ( ) << endl"		2496311	0		<<			
ANR	2496596	Identifier	cout		2496311	0					
ANR	2496597	ShiftExpression	"""error: MatchPath begins with port "" << source -> GetAdNum ( ) << ""."" << source -> GetPortNum ( ) << endl"		2496311	1		<<			
ANR	2496598	PrimaryExpression	"""error: MatchPath begins with port """		2496311	0					
ANR	2496599	ShiftExpression	"source -> GetAdNum ( ) << ""."" << source -> GetPortNum ( ) << endl"		2496311	1		<<			
ANR	2496600	CallExpression	source -> GetAdNum ( )		2496311	0					
ANR	2496601	Callee	source -> GetAdNum		2496311	0					
ANR	2496602	PtrMemberAccess	source -> GetAdNum		2496311	0					
ANR	2496603	Identifier	source		2496311	0					
ANR	2496604	Identifier	GetAdNum		2496311	1					
ANR	2496605	ArgumentList			2496311	1					
ANR	2496606	ShiftExpression	"""."" << source -> GetPortNum ( ) << endl"		2496311	1		<<			
ANR	2496607	PrimaryExpression	"""."""		2496311	0					
ANR	2496608	ShiftExpression	source -> GetPortNum ( ) << endl		2496311	1		<<			
ANR	2496609	CallExpression	source -> GetPortNum ( )		2496311	0					
ANR	2496610	Callee	source -> GetPortNum		2496311	0					
ANR	2496611	PtrMemberAccess	source -> GetPortNum		2496311	0					
ANR	2496612	Identifier	source		2496311	0					
ANR	2496613	Identifier	GetPortNum		2496311	1					
ANR	2496614	ArgumentList			2496311	1					
ANR	2496615	Identifier	endl		2496311	1					
ANR	2496616	ExpressionStatement	"cout << ""       p1 = "" << p1 -> GetAdNum ( ) << ""."" << p1 -> GetPortNum ( ) << ""p2 = "" << p2 -> GetAdNum ( ) << ""."" << p2 -> GetPortNum ( )"	1153:7:26903:27048	2496311	1	True				
ANR	2496617	ShiftExpression	"cout << ""       p1 = "" << p1 -> GetAdNum ( ) << ""."" << p1 -> GetPortNum ( ) << ""p2 = "" << p2 -> GetAdNum ( ) << ""."" << p2 -> GetPortNum ( )"		2496311	0		<<			
ANR	2496618	Identifier	cout		2496311	0					
ANR	2496619	ShiftExpression	"""       p1 = "" << p1 -> GetAdNum ( ) << ""."" << p1 -> GetPortNum ( ) << ""p2 = "" << p2 -> GetAdNum ( ) << ""."" << p2 -> GetPortNum ( )"		2496311	1		<<			
ANR	2496620	PrimaryExpression	"""       p1 = """		2496311	0					
ANR	2496621	ShiftExpression	"p1 -> GetAdNum ( ) << ""."" << p1 -> GetPortNum ( ) << ""p2 = "" << p2 -> GetAdNum ( ) << ""."" << p2 -> GetPortNum ( )"		2496311	1		<<			
ANR	2496622	CallExpression	p1 -> GetAdNum ( )		2496311	0					
ANR	2496623	Callee	p1 -> GetAdNum		2496311	0					
ANR	2496624	PtrMemberAccess	p1 -> GetAdNum		2496311	0					
ANR	2496625	Identifier	p1		2496311	0					
ANR	2496626	Identifier	GetAdNum		2496311	1					
ANR	2496627	ArgumentList			2496311	1					
ANR	2496628	ShiftExpression	"""."" << p1 -> GetPortNum ( ) << ""p2 = "" << p2 -> GetAdNum ( ) << ""."" << p2 -> GetPortNum ( )"		2496311	1		<<			
ANR	2496629	PrimaryExpression	"""."""		2496311	0					
ANR	2496630	ShiftExpression	"p1 -> GetPortNum ( ) << ""p2 = "" << p2 -> GetAdNum ( ) << ""."" << p2 -> GetPortNum ( )"		2496311	1		<<			
ANR	2496631	CallExpression	p1 -> GetPortNum ( )		2496311	0					
ANR	2496632	Callee	p1 -> GetPortNum		2496311	0					
ANR	2496633	PtrMemberAccess	p1 -> GetPortNum		2496311	0					
ANR	2496634	Identifier	p1		2496311	0					
ANR	2496635	Identifier	GetPortNum		2496311	1					
ANR	2496636	ArgumentList			2496311	1					
ANR	2496637	ShiftExpression	"""p2 = "" << p2 -> GetAdNum ( ) << ""."" << p2 -> GetPortNum ( )"		2496311	1		<<			
ANR	2496638	PrimaryExpression	"""p2 = """		2496311	0					
ANR	2496639	ShiftExpression	"p2 -> GetAdNum ( ) << ""."" << p2 -> GetPortNum ( )"		2496311	1		<<			
ANR	2496640	CallExpression	p2 -> GetAdNum ( )		2496311	0					
ANR	2496641	Callee	p2 -> GetAdNum		2496311	0					
ANR	2496642	PtrMemberAccess	p2 -> GetAdNum		2496311	0					
ANR	2496643	Identifier	p2		2496311	0					
ANR	2496644	Identifier	GetAdNum		2496311	1					
ANR	2496645	ArgumentList			2496311	1					
ANR	2496646	ShiftExpression	"""."" << p2 -> GetPortNum ( )"		2496311	1		<<			
ANR	2496647	PrimaryExpression	"""."""		2496311	0					
ANR	2496648	CallExpression	p2 -> GetPortNum ( )		2496311	1					
ANR	2496649	Callee	p2 -> GetPortNum		2496311	0					
ANR	2496650	PtrMemberAccess	p2 -> GetPortNum		2496311	0					
ANR	2496651	Identifier	p2		2496311	0					
ANR	2496652	Identifier	GetPortNum		2496311	1					
ANR	2496653	ArgumentList			2496311	1					
ANR	2496654	ForStatement	for ( unsigned int i = 0 ; i < ( * p ) -> GetNumEdges ( ) ; i ++ )		2496311	4					
ANR	2496655	ForInit	unsigned int i = 0 ;	1159:8:27064:27082	2496311	0	True				
ANR	2496656	IdentifierDeclStatement	unsigned int i = 0 ;		2496311	0					
ANR	2496657	IdentifierDecl	i = 0		2496311	0					
ANR	2496658	IdentifierDeclType	unsigned int		2496311	0					
ANR	2496659	Identifier	i		2496311	1					
ANR	2496660	AssignmentExpression	i = 0		2496311	2		=			
ANR	2496661	Identifier	i		2496311	0					
ANR	2496662	PrimaryExpression	0		2496311	1					
ANR	2496663	Condition	i < ( * p ) -> GetNumEdges ( )	1159:28:27084:27107	2496311	1	True				
ANR	2496664	RelationalExpression	i < ( * p ) -> GetNumEdges ( )		2496311	0		<			
ANR	2496665	Identifier	i		2496311	0					
ANR	2496666	CallExpression	( * p ) -> GetNumEdges ( )		2496311	1					
ANR	2496667	Callee	( * p ) -> GetNumEdges		2496311	0					
ANR	2496668	PtrMemberAccess	( * p ) -> GetNumEdges		2496311	0					
ANR	2496669	UnaryOperationExpression	* p		2496311	0					
ANR	2496670	UnaryOperator	*		2496311	0					
ANR	2496671	Identifier	p		2496311	1					
ANR	2496672	Identifier	GetNumEdges		2496311	1					
ANR	2496673	ArgumentList			2496311	1					
ANR	2496674	PostIncDecOperationExpression	i ++	1159:54:27110:27112	2496311	2	True				
ANR	2496675	Identifier	i		2496311	0					
ANR	2496676	IncDec	++		2496311	1					
ANR	2496677	CompoundStatement		58:60:1686:1686	2496311	3					
ANR	2496678	ExpressionStatement	edge = ( * p ) -> GetMatchEdge ( i )	1160:4:27122:27152	2496311	0	True				
ANR	2496679	AssignmentExpression	edge = ( * p ) -> GetMatchEdge ( i )		2496311	0		=			
ANR	2496680	Identifier	edge		2496311	0					
ANR	2496681	CallExpression	( * p ) -> GetMatchEdge ( i )		2496311	1					
ANR	2496682	Callee	( * p ) -> GetMatchEdge		2496311	0					
ANR	2496683	PtrMemberAccess	( * p ) -> GetMatchEdge		2496311	0					
ANR	2496684	UnaryOperationExpression	* p		2496311	0					
ANR	2496685	UnaryOperator	*		2496311	0					
ANR	2496686	Identifier	p		2496311	1					
ANR	2496687	Identifier	GetMatchEdge		2496311	1					
ANR	2496688	ArgumentList	i		2496311	1					
ANR	2496689	Argument	i		2496311	0					
ANR	2496690	Identifier	i		2496311	0					
ANR	2496691	ExpressionStatement	source = edge -> GetSource ( )	1161:4:27158:27185	2496311	1	True				
ANR	2496692	AssignmentExpression	source = edge -> GetSource ( )		2496311	0		=			
ANR	2496693	Identifier	source		2496311	0					
ANR	2496694	CallExpression	edge -> GetSource ( )		2496311	1					
ANR	2496695	Callee	edge -> GetSource		2496311	0					
ANR	2496696	PtrMemberAccess	edge -> GetSource		2496311	0					
ANR	2496697	Identifier	edge		2496311	0					
ANR	2496698	Identifier	GetSource		2496311	1					
ANR	2496699	ArgumentList			2496311	1					
ANR	2496700	ExpressionStatement	target = edge -> GetTarget ( )	1162:4:27191:27218	2496311	2	True				
ANR	2496701	AssignmentExpression	target = edge -> GetTarget ( )		2496311	0		=			
ANR	2496702	Identifier	target		2496311	0					
ANR	2496703	CallExpression	edge -> GetTarget ( )		2496311	1					
ANR	2496704	Callee	edge -> GetTarget		2496311	0					
ANR	2496705	PtrMemberAccess	edge -> GetTarget		2496311	0					
ANR	2496706	Identifier	edge		2496311	0					
ANR	2496707	Identifier	GetTarget		2496311	1					
ANR	2496708	ArgumentList			2496311	1					
ANR	2496709	ExpressionStatement	ad = ( classad :: ClassAd * ) target -> GetParentAd ( ) -> Copy ( )	1163:4:27224:27279	2496311	3	True				
ANR	2496710	AssignmentExpression	ad = ( classad :: ClassAd * ) target -> GetParentAd ( ) -> Copy ( )		2496311	0		=			
ANR	2496711	Identifier	ad		2496311	0					
ANR	2496712	CastExpression	( classad :: ClassAd * ) target -> GetParentAd ( ) -> Copy ( )		2496311	1					
ANR	2496713	CastTarget	classad :: ClassAd *		2496311	0					
ANR	2496714	CallExpression	target -> GetParentAd ( ) -> Copy ( )		2496311	1					
ANR	2496715	Callee	target -> GetParentAd ( ) -> Copy		2496311	0					
ANR	2496716	PtrMemberAccess	target -> GetParentAd ( ) -> Copy		2496311	0					
ANR	2496717	CallExpression	target -> GetParentAd ( )		2496311	0					
ANR	2496718	Callee	target -> GetParentAd		2496311	0					
ANR	2496719	PtrMemberAccess	target -> GetParentAd		2496311	0					
ANR	2496720	Identifier	target		2496311	0					
ANR	2496721	Identifier	GetParentAd		2496311	1					
ANR	2496722	ArgumentList			2496311	1					
ANR	2496723	Identifier	Copy		2496311	1					
ANR	2496724	ArgumentList			2496311	1					
ANR	2496725	ExpressionStatement	"gmr = GMR :: MakeGMR ( nextAdNum , ad )"	1164:4:27285:27320	2496311	4	True				
ANR	2496726	AssignmentExpression	"gmr = GMR :: MakeGMR ( nextAdNum , ad )"		2496311	0		=			
ANR	2496727	Identifier	gmr		2496311	0					
ANR	2496728	CallExpression	"GMR :: MakeGMR ( nextAdNum , ad )"		2496311	1					
ANR	2496729	Callee	GMR :: MakeGMR		2496311	0					
ANR	2496730	Identifier	GMR :: MakeGMR		2496311	0					
ANR	2496731	ArgumentList	nextAdNum		2496311	1					
ANR	2496732	Argument	nextAdNum		2496311	0					
ANR	2496733	Identifier	nextAdNum		2496311	0					
ANR	2496734	Argument	ad		2496311	1					
ANR	2496735	Identifier	ad		2496311	0					
ANR	2496736	ExpressionStatement	nextAdNum ++	1165:4:27326:27337	2496311	5	True				
ANR	2496737	PostIncDecOperationExpression	nextAdNum ++		2496311	0					
ANR	2496738	Identifier	nextAdNum		2496311	0					
ANR	2496739	IncDec	++		2496311	1					
ANR	2496740	ExpressionStatement	"next_gangster = new Gangster ( curr_gangster , source -> GetPortNum ( ) )"	1166:4:27343:27424	2496311	6	True				
ANR	2496741	AssignmentExpression	"next_gangster = new Gangster ( curr_gangster , source -> GetPortNum ( ) )"		2496311	0		=			
ANR	2496742	Identifier	next_gangster		2496311	0					
ANR	2496743	Expression	"curr_gangster , source -> GetPortNum ( )"		2496311	1					
ANR	2496744	Identifier	curr_gangster		2496311	0					
ANR	2496745	CallExpression	source -> GetPortNum ( )		2496311	1					
ANR	2496746	Callee	source -> GetPortNum		2496311	0					
ANR	2496747	PtrMemberAccess	source -> GetPortNum		2496311	0					
ANR	2496748	Identifier	source		2496311	0					
ANR	2496749	Identifier	GetPortNum		2496311	1					
ANR	2496750	ArgumentList			2496311	1					
ANR	2496751	ExpressionStatement	next_gangster -> assign ( gmr )	1168:4:27431:27459	2496311	7	True				
ANR	2496752	CallExpression	next_gangster -> assign ( gmr )		2496311	0					
ANR	2496753	Callee	next_gangster -> assign		2496311	0					
ANR	2496754	PtrMemberAccess	next_gangster -> assign		2496311	0					
ANR	2496755	Identifier	next_gangster		2496311	0					
ANR	2496756	Identifier	assign		2496311	1					
ANR	2496757	ArgumentList	gmr		2496311	1					
ANR	2496758	Argument	gmr		2496311	0					
ANR	2496759	Identifier	gmr		2496311	0					
ANR	2496760	ExpressionStatement	next_gangster -> setupMatchBindings ( target -> GetPortNum ( ) )	1169:4:27465:27523	2496311	8	True				
ANR	2496761	CallExpression	next_gangster -> setupMatchBindings ( target -> GetPortNum ( ) )		2496311	0					
ANR	2496762	Callee	next_gangster -> setupMatchBindings		2496311	0					
ANR	2496763	PtrMemberAccess	next_gangster -> setupMatchBindings		2496311	0					
ANR	2496764	Identifier	next_gangster		2496311	0					
ANR	2496765	Identifier	setupMatchBindings		2496311	1					
ANR	2496766	ArgumentList	target -> GetPortNum ( )		2496311	1					
ANR	2496767	Argument	target -> GetPortNum ( )		2496311	0					
ANR	2496768	CallExpression	target -> GetPortNum ( )		2496311	0					
ANR	2496769	Callee	target -> GetPortNum		2496311	0					
ANR	2496770	PtrMemberAccess	target -> GetPortNum		2496311	0					
ANR	2496771	Identifier	target		2496311	0					
ANR	2496772	Identifier	GetPortNum		2496311	1					
ANR	2496773	ArgumentList			2496311	1					
ANR	2496774	ExpressionStatement	curr_gangster = next_gangster	1170:4:27529:27558	2496311	9	True				
ANR	2496775	AssignmentExpression	curr_gangster = next_gangster		2496311	0		=			
ANR	2496776	Identifier	curr_gangster		2496311	0					
ANR	2496777	Identifier	next_gangster		2496311	1					
ANR	2496778	IdentifierDeclStatement	classad :: Value resultV ;	1177:1:27637:27659	2496311	10	True				
ANR	2496779	IdentifierDecl	resultV		2496311	0					
ANR	2496780	IdentifierDeclType	classad :: Value		2496311	0					
ANR	2496781	Identifier	resultV		2496311	1					
ANR	2496782	IdentifierDeclStatement	bool result = false ;	1178:1:27662:27681	2496311	11	True				
ANR	2496783	IdentifierDecl	result = false		2496311	0					
ANR	2496784	IdentifierDeclType	bool		2496311	0					
ANR	2496785	Identifier	result		2496311	1					
ANR	2496786	AssignmentExpression	result = false		2496311	2		=			
ANR	2496787	Identifier	false		2496311	0					
ANR	2496788	Identifier	false		2496311	1					
ANR	2496789	ExpressionStatement	"gangster_p1 . testOneWayMatch ( p1 -> GetPortNum ( ) , resultV )"	1179:1:27684:27741	2496311	12	True				
ANR	2496790	CallExpression	"gangster_p1 . testOneWayMatch ( p1 -> GetPortNum ( ) , resultV )"		2496311	0					
ANR	2496791	Callee	gangster_p1 . testOneWayMatch		2496311	0					
ANR	2496792	MemberAccess	gangster_p1 . testOneWayMatch		2496311	0					
ANR	2496793	Identifier	gangster_p1		2496311	0					
ANR	2496794	Identifier	testOneWayMatch		2496311	1					
ANR	2496795	ArgumentList	p1 -> GetPortNum ( )		2496311	1					
ANR	2496796	Argument	p1 -> GetPortNum ( )		2496311	0					
ANR	2496797	CallExpression	p1 -> GetPortNum ( )		2496311	0					
ANR	2496798	Callee	p1 -> GetPortNum		2496311	0					
ANR	2496799	PtrMemberAccess	p1 -> GetPortNum		2496311	0					
ANR	2496800	Identifier	p1		2496311	0					
ANR	2496801	Identifier	GetPortNum		2496311	1					
ANR	2496802	ArgumentList			2496311	1					
ANR	2496803	Argument	resultV		2496311	1					
ANR	2496804	Identifier	resultV		2496311	0					
ANR	2496805	IfStatement	if ( resultV . IsBooleanValue ( result ) )		2496311	13					
ANR	2496806	Condition	resultV . IsBooleanValue ( result )	1182:5:27780:27811	2496311	0	True				
ANR	2496807	CallExpression	resultV . IsBooleanValue ( result )		2496311	0					
ANR	2496808	Callee	resultV . IsBooleanValue		2496311	0					
ANR	2496809	MemberAccess	resultV . IsBooleanValue		2496311	0					
ANR	2496810	Identifier	resultV		2496311	0					
ANR	2496811	Identifier	IsBooleanValue		2496311	1					
ANR	2496812	ArgumentList	result		2496311	1					
ANR	2496813	Argument	result		2496311	0					
ANR	2496814	Identifier	result		2496311	0					
ANR	2496815	ReturnStatement	return result ;	1183:2:27817:27830	2496311	1	True				
ANR	2496816	Identifier	result		2496311	0					
ANR	2496817	ElseStatement	else		2496311	0					
ANR	2496818	ReturnStatement	return false ;	1185:2:27841:27853	2496311	0	True				
ANR	2496819	Identifier	false		2496311	0					
ANR	2496820	ReturnType	bool		2496311	1					
ANR	2496821	Identifier	PortGraph :: EvalReqs		2496311	2					
ANR	2496822	ParameterList	"PortNode * p1 , PortNode * p2 , std :: vector < MatchPath * > & paths"		2496311	3					
ANR	2496823	Parameter	PortNode * p1	1101:10:25368:25379	2496311	0	True				
ANR	2496824	ParameterType	PortNode *		2496311	0					
ANR	2496825	Identifier	p1		2496311	1					
ANR	2496826	Parameter	PortNode * p2	1101:24:25382:25393	2496311	1	True				
ANR	2496827	ParameterType	PortNode *		2496311	0					
ANR	2496828	Identifier	p2		2496311	1					
ANR	2496829	Parameter	std :: vector < MatchPath * > & paths	1101:38:25396:25425	2496311	2	True				
ANR	2496830	ParameterType	std :: vector < MatchPath * > &		2496311	0					
ANR	2496831	Identifier	paths		2496311	1					
ANR	2496832	CFGEntryNode	ENTRY		2496311		True				
ANR	2496833	CFGExitNode	EXIT		2496311		True				
ANR	2496834	Symbol	next_gangster		2496311						
ANR	2496835	Symbol	p2 -> GetParentAd		2496311						
ANR	2496836	Symbol	* p1 -> GetParentAd		2496311						
ANR	2496837	Symbol	source		2496311						
ANR	2496838	Symbol	paths . begin		2496311						
ANR	2496839	Symbol	paths . empty		2496311						
ANR	2496840	Symbol	edge		2496311						
ANR	2496841	Symbol	source -> GetAdNum		2496311						
ANR	2496842	Symbol	* source		2496311						
ANR	2496843	Symbol	gangster_p2		2496311						
ANR	2496844	Symbol	* target -> GetParentAd		2496311						
ANR	2496845	Symbol	p2 -> GetAdNum		2496311						
ANR	2496846	Symbol	ad		2496311						
ANR	2496847	Symbol	gangster_p1		2496311						
ANR	2496848	Symbol	p1 -> GetAdNum		2496311						
ANR	2496849	Symbol	* * p2		2496311						
ANR	2496850	Symbol	* * target		2496311						
ANR	2496851	Symbol	* * p1		2496311						
ANR	2496852	Symbol	resultV		2496311						
ANR	2496853	Symbol	p1 -> GetPortNum		2496311						
ANR	2496854	Symbol	p1 -> GetParentAd ( ) -> Copy		2496311						
ANR	2496855	Symbol	paths		2496311						
ANR	2496856	Symbol	target -> GetParentAd		2496311						
ANR	2496857	Symbol	resultV . IsBooleanValue		2496311						
ANR	2496858	Symbol	edge -> GetTarget		2496311						
ANR	2496859	Symbol	p1		2496311						
ANR	2496860	Symbol	p2		2496311						
ANR	2496861	Symbol	source -> GetPortNum		2496311						
ANR	2496862	Symbol	& gangster_p2		2496311						
ANR	2496863	Symbol	& gangster_p1		2496311						
ANR	2496864	Symbol	edge -> GetSource		2496311						
ANR	2496865	Symbol	paths . end		2496311						
ANR	2496866	Symbol	gmr		2496311						
ANR	2496867	Symbol	( * p ) -> GetNumEdges		2496311						
ANR	2496868	Symbol	result		2496311						
ANR	2496869	Symbol	* p2 -> GetParentAd		2496311						
ANR	2496870	Symbol	gmr1		2496311						
ANR	2496871	Symbol	target -> GetParentAd ( ) -> Copy		2496311						
ANR	2496872	Symbol	gmr2		2496311						
ANR	2496873	Symbol	* * p		2496311						
ANR	2496874	Symbol	* p1		2496311						
ANR	2496875	Symbol	target -> GetPortNum		2496311						
ANR	2496876	Symbol	p2 -> GetPortNum		2496311						
ANR	2496877	Symbol	false		2496311						
ANR	2496878	Symbol	i		2496311						
ANR	2496879	Symbol	* p2		2496311						
ANR	2496880	Symbol	p2 -> GetParentAd ( ) -> Copy		2496311						
ANR	2496881	Symbol	ad2		2496311						
ANR	2496882	Symbol	nextAdNum		2496311						
ANR	2496883	Symbol	* edge		2496311						
ANR	2496884	Symbol	ad1		2496311						
ANR	2496885	Symbol	target		2496311						
ANR	2496886	Symbol	p		2496311						
ANR	2496887	Symbol	( * p ) -> GetMatchEdge		2496311						
ANR	2496888	Symbol	* target		2496311						
ANR	2496889	Symbol	p1 -> GetParentAd		2496311						
ANR	2496890	Symbol	curr_gangster		2496311						
ANR	2496891	Symbol	* p		2496311						
ANR	2496892	Symbol	GMR :: MakeGMR		2496311						
ANR	2496893	Symbol	( * p ) -> Empty		2496311						
ANR	2496894	Function	PortGraph :: AddMatchEdge	1188:0:27858:28069							
ANR	2496895	FunctionDef	"PortGraph :: AddMatchEdge (PortNode * p1 , PortNode * p2 , std :: vector < MatchPath * > & paths)"		2496894	0					
ANR	2496896	CompoundStatement		1190:0:27950:28069	2496894	0					
ANR	2496897	IfStatement	"if ( p1 -> AddMatchEdge ( nextMatchEdgeNum , p2 , paths ) )"		2496894	0					
ANR	2496898	Condition	"p1 -> AddMatchEdge ( nextMatchEdgeNum , p2 , paths )"	1191:5:27957:28003	2496894	0	True				
ANR	2496899	CallExpression	"p1 -> AddMatchEdge ( nextMatchEdgeNum , p2 , paths )"		2496894	0					
ANR	2496900	Callee	p1 -> AddMatchEdge		2496894	0					
ANR	2496901	PtrMemberAccess	p1 -> AddMatchEdge		2496894	0					
ANR	2496902	Identifier	p1		2496894	0					
ANR	2496903	Identifier	AddMatchEdge		2496894	1					
ANR	2496904	ArgumentList	nextMatchEdgeNum		2496894	1					
ANR	2496905	Argument	nextMatchEdgeNum		2496894	0					
ANR	2496906	Identifier	nextMatchEdgeNum		2496894	0					
ANR	2496907	Argument	p2		2496894	1					
ANR	2496908	Identifier	p2		2496894	0					
ANR	2496909	Argument	paths		2496894	2					
ANR	2496910	Identifier	paths		2496894	0					
ANR	2496911	CompoundStatement		2:55:56:56	2496894	1					
ANR	2496912	ExpressionStatement	nextMatchEdgeNum ++	1192:2:28011:28029	2496894	0	True				
ANR	2496913	PostIncDecOperationExpression	nextMatchEdgeNum ++		2496894	0					
ANR	2496914	Identifier	nextMatchEdgeNum		2496894	0					
ANR	2496915	IncDec	++		2496894	1					
ANR	2496916	ReturnStatement	return true ;	1193:2:28033:28044	2496894	1	True				
ANR	2496917	Identifier	true		2496894	0					
ANR	2496918	ElseStatement	else		2496894	0					
ANR	2496919	ReturnStatement	return false ;	1195:6:28055:28067	2496894	0	True				
ANR	2496920	Identifier	false		2496894	0					
ANR	2496921	ReturnType	bool		2496894	1					
ANR	2496922	Identifier	PortGraph :: AddMatchEdge		2496894	2					
ANR	2496923	ParameterList	"PortNode * p1 , PortNode * p2 , std :: vector < MatchPath * > & paths"		2496894	3					
ANR	2496924	Parameter	PortNode * p1	1189:14:27889:27900	2496894	0	True				
ANR	2496925	ParameterType	PortNode *		2496894	0					
ANR	2496926	Identifier	p1		2496894	1					
ANR	2496927	Parameter	PortNode * p2	1189:28:27903:27914	2496894	1	True				
ANR	2496928	ParameterType	PortNode *		2496894	0					
ANR	2496929	Identifier	p2		2496894	1					
ANR	2496930	Parameter	std :: vector < MatchPath * > & paths	1189:42:27917:27946	2496894	2	True				
ANR	2496931	ParameterType	std :: vector < MatchPath * > &		2496894	0					
ANR	2496932	Identifier	paths		2496894	1					
ANR	2496933	CFGEntryNode	ENTRY		2496894		True				
ANR	2496934	CFGExitNode	EXIT		2496894		True				
ANR	2496935	Symbol	p1		2496894						
ANR	2496936	Symbol	p1 -> AddMatchEdge		2496894						
ANR	2496937	Symbol	p2		2496894						
ANR	2496938	Symbol	* p1		2496894						
ANR	2496939	Symbol	paths		2496894						
ANR	2496940	Symbol	nextMatchEdgeNum		2496894						
ANR	2496941	Symbol	true		2496894						
ANR	2496942	Symbol	false		2496894						
ANR	2496943	Function	PortGraph :: ToString	1198:0:28072:28478							
ANR	2496944	FunctionDef	PortGraph :: ToString (std :: string & buffer)		2496943	0					
ANR	2496945	CompoundStatement		1200:0:28121:28478	2496943	0					
ANR	2496946	IdentifierDeclStatement	char tempBuf [ 512 ] ;	1201:1:28124:28141	2496943	0	True				
ANR	2496947	IdentifierDecl	tempBuf [ 512 ]		2496943	0					
ANR	2496948	IdentifierDeclType	char [ 512 ]		2496943	0					
ANR	2496949	Identifier	tempBuf		2496943	1					
ANR	2496950	PrimaryExpression	512		2496943	2					
ANR	2496951	ExpressionStatement	"sprintf ( tempBuf , ""%d"" , numPortNodes )"	1202:1:28144:28182	2496943	1	True				
ANR	2496952	CallExpression	"sprintf ( tempBuf , ""%d"" , numPortNodes )"		2496943	0					
ANR	2496953	Callee	sprintf		2496943	0					
ANR	2496954	Identifier	sprintf		2496943	0					
ANR	2496955	ArgumentList	tempBuf		2496943	1					
ANR	2496956	Argument	tempBuf		2496943	0					
ANR	2496957	Identifier	tempBuf		2496943	0					
ANR	2496958	Argument	"""%d"""		2496943	1					
ANR	2496959	PrimaryExpression	"""%d"""		2496943	0					
ANR	2496960	Argument	numPortNodes		2496943	2					
ANR	2496961	Identifier	numPortNodes		2496943	0					
ANR	2496962	ExpressionStatement	"buffer += ""[numPortNodes:"""	1203:1:28185:28211	2496943	2	True				
ANR	2496963	AssignmentExpression	"buffer += ""[numPortNodes:"""		2496943	0		+=			
ANR	2496964	Identifier	buffer		2496943	0					
ANR	2496965	PrimaryExpression	"""[numPortNodes:"""		2496943	1					
ANR	2496966	ExpressionStatement	buffer += tempBuf	1204:1:28214:28231	2496943	3	True				
ANR	2496967	AssignmentExpression	buffer += tempBuf		2496943	0		+=			
ANR	2496968	Identifier	buffer		2496943	0					
ANR	2496969	Identifier	tempBuf		2496943	1					
ANR	2496970	ExpressionStatement	"buffer += "",portNodes:{"""	1205:1:28234:28258	2496943	4	True				
ANR	2496971	AssignmentExpression	"buffer += "",portNodes:{"""		2496943	0		+=			
ANR	2496972	Identifier	buffer		2496943	0					
ANR	2496973	PrimaryExpression	""",portNodes:{"""		2496943	1					
ANR	2496974	IdentifierDeclStatement	std :: vector < PortNode * > :: iterator p ;	1206:1:28261:28295	2496943	5	True				
ANR	2496975	IdentifierDecl	p		2496943	0					
ANR	2496976	IdentifierDeclType	std :: vector < PortNode * > :: iterator		2496943	0					
ANR	2496977	Identifier	p		2496943	1					
ANR	2496978	ForStatement	for ( p = portNodes . begin ( ) ; p != portNodes . end ( ) ; p ++ )		2496943	6					
ANR	2496979	ForInit	p = portNodes . begin ( ) ;	1207:6:28303:28325	2496943	0	True				
ANR	2496980	AssignmentExpression	p = portNodes . begin ( )		2496943	0		=			
ANR	2496981	Identifier	p		2496943	0					
ANR	2496982	CallExpression	portNodes . begin ( )		2496943	1					
ANR	2496983	Callee	portNodes . begin		2496943	0					
ANR	2496984	MemberAccess	portNodes . begin		2496943	0					
ANR	2496985	Identifier	portNodes		2496943	0					
ANR	2496986	Identifier	begin		2496943	1					
ANR	2496987	ArgumentList			2496943	1					
ANR	2496988	Condition	p != portNodes . end ( )	1207:30:28327:28347	2496943	1	True				
ANR	2496989	EqualityExpression	p != portNodes . end ( )		2496943	0		!=			
ANR	2496990	Identifier	p		2496943	0					
ANR	2496991	CallExpression	portNodes . end ( )		2496943	1					
ANR	2496992	Callee	portNodes . end		2496943	0					
ANR	2496993	MemberAccess	portNodes . end		2496943	0					
ANR	2496994	Identifier	portNodes		2496943	0					
ANR	2496995	Identifier	end		2496943	1					
ANR	2496996	ArgumentList			2496943	1					
ANR	2496997	PostIncDecOperationExpression	p ++	1207:53:28350:28352	2496943	2	True				
ANR	2496998	Identifier	p		2496943	0					
ANR	2496999	IncDec	++		2496943	1					
ANR	2497000	CompoundStatement		8:59:234:234	2496943	3					
ANR	2497001	IfStatement	if ( p != portNodes . begin ( ) )		2496943	0					
ANR	2497002	Condition	p != portNodes . begin ( )	1208:6:28364:28386	2496943	0	True				
ANR	2497003	EqualityExpression	p != portNodes . begin ( )		2496943	0		!=			
ANR	2497004	Identifier	p		2496943	0					
ANR	2497005	CallExpression	portNodes . begin ( )		2496943	1					
ANR	2497006	Callee	portNodes . begin		2496943	0					
ANR	2497007	MemberAccess	portNodes . begin		2496943	0					
ANR	2497008	Identifier	portNodes		2496943	0					
ANR	2497009	Identifier	begin		2496943	1					
ANR	2497010	ArgumentList			2496943	1					
ANR	2497011	CompoundStatement		9:32:268:268	2496943	1					
ANR	2497012	ExpressionStatement	"buffer += "","""	1209:3:28395:28408	2496943	0	True				
ANR	2497013	AssignmentExpression	"buffer += "","""		2496943	0		+=			
ANR	2497014	Identifier	buffer		2496943	0					
ANR	2497015	PrimaryExpression	""","""		2496943	1					
ANR	2497016	ExpressionStatement	( * p ) -> ToString ( buffer )	1211:2:28416:28440	2496943	1	True				
ANR	2497017	CallExpression	( * p ) -> ToString ( buffer )		2496943	0					
ANR	2497018	Callee	( * p ) -> ToString		2496943	0					
ANR	2497019	PtrMemberAccess	( * p ) -> ToString		2496943	0					
ANR	2497020	UnaryOperationExpression	* p		2496943	0					
ANR	2497021	UnaryOperator	*		2496943	0					
ANR	2497022	Identifier	p		2496943	1					
ANR	2497023	Identifier	ToString		2496943	1					
ANR	2497024	ArgumentList	buffer		2496943	1					
ANR	2497025	Argument	buffer		2496943	0					
ANR	2497026	Identifier	buffer		2496943	0					
ANR	2497027	ExpressionStatement	"buffer += ""}]"""	1213:1:28446:28460	2496943	7	True				
ANR	2497028	AssignmentExpression	"buffer += ""}]"""		2496943	0		+=			
ANR	2497029	Identifier	buffer		2496943	0					
ANR	2497030	PrimaryExpression	"""}]"""		2496943	1					
ANR	2497031	ReturnStatement	return true ;	1215:1:28465:28476	2496943	8	True				
ANR	2497032	Identifier	true		2496943	0					
ANR	2497033	ReturnType	bool		2496943	1					
ANR	2497034	Identifier	PortGraph :: ToString		2496943	2					
ANR	2497035	ParameterList	std :: string & buffer		2496943	3					
ANR	2497036	Parameter	std :: string & buffer	1199:10:28099:28117	2496943	0	True				
ANR	2497037	ParameterType	std :: string &		2496943	0					
ANR	2497038	Identifier	buffer		2496943	1					
ANR	2497039	CFGEntryNode	ENTRY		2496943		True				
ANR	2497040	CFGExitNode	EXIT		2496943		True				
ANR	2497041	Symbol	p		2496943						
ANR	2497042	Symbol	portNodes . end		2496943						
ANR	2497043	Symbol	numPortNodes		2496943						
ANR	2497044	Symbol	true		2496943						
ANR	2497045	Symbol	portNodes		2496943						
ANR	2497046	Symbol	* p		2496943						
ANR	2497047	Symbol	buffer		2496943						
ANR	2497048	Symbol	tempBuf		2496943						
ANR	2497049	Symbol	portNodes . begin		2496943						
