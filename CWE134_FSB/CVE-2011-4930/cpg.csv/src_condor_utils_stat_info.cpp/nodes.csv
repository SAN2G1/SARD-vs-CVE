command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4892916	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_stat_info.cpp								
ANR	4892917	Function	StatInfo :: StatInfo	34:0:1113:1803							
ANR	4892918	FunctionDef	StatInfo :: StatInfo (const char * path)		4892917	0					
ANR	4892919	CompoundStatement		35:0:1152:1803	4892917	0					
ANR	4892920	IdentifierDeclStatement	"char * s , * last = NULL ;"	36:1:1155:1176	4892917	0	True				
ANR	4892921	IdentifierDecl	* s		4892917	0					
ANR	4892922	IdentifierDeclType	char *		4892917	0					
ANR	4892923	Identifier	s		4892917	1					
ANR	4892924	IdentifierDecl	* last = NULL		4892917	1					
ANR	4892925	IdentifierDeclType	char *		4892917	0					
ANR	4892926	Identifier	last		4892917	1					
ANR	4892927	AssignmentExpression	* last = NULL		4892917	2		=			
ANR	4892928	Identifier	NULL		4892917	0					
ANR	4892929	Identifier	NULL		4892917	1					
ANR	4892930	ExpressionStatement	fullpath = strnewp ( path )	37:1:1179:1205	4892917	1	True				
ANR	4892931	AssignmentExpression	fullpath = strnewp ( path )		4892917	0		=			
ANR	4892932	Identifier	fullpath		4892917	0					
ANR	4892933	CallExpression	strnewp ( path )		4892917	1					
ANR	4892934	Callee	strnewp		4892917	0					
ANR	4892935	Identifier	strnewp		4892917	0					
ANR	4892936	ArgumentList	path		4892917	1					
ANR	4892937	Argument	path		4892917	0					
ANR	4892938	Identifier	path		4892917	0					
ANR	4892939	ExpressionStatement	dirpath = strnewp ( path )	38:1:1208:1233	4892917	2	True				
ANR	4892940	AssignmentExpression	dirpath = strnewp ( path )		4892917	0		=			
ANR	4892941	Identifier	dirpath		4892917	0					
ANR	4892942	CallExpression	strnewp ( path )		4892917	1					
ANR	4892943	Callee	strnewp		4892917	0					
ANR	4892944	Identifier	strnewp		4892917	0					
ANR	4892945	ArgumentList	path		4892917	1					
ANR	4892946	Argument	path		4892917	0					
ANR	4892947	Identifier	path		4892917	0					
ANR	4892948	ForStatement	for ( s = dirpath ; s && * s != '\\0' ; s ++ )		4892917	3					
ANR	4892949	ForInit	s = dirpath ;	45:6:1554:1565	4892917	0	True				
ANR	4892950	AssignmentExpression	s = dirpath		4892917	0		=			
ANR	4892951	Identifier	s		4892917	0					
ANR	4892952	Identifier	dirpath		4892917	1					
ANR	4892953	Condition	s && * s != '\\0'	45:19:1567:1581	4892917	1	True				
ANR	4892954	AndExpression	s && * s != '\\0'		4892917	0		&&			
ANR	4892955	Identifier	s		4892917	0					
ANR	4892956	EqualityExpression	* s != '\\0'		4892917	1		!=			
ANR	4892957	UnaryOperationExpression	* s		4892917	0					
ANR	4892958	UnaryOperator	*		4892917	0					
ANR	4892959	Identifier	s		4892917	1					
ANR	4892960	PrimaryExpression	'\\0'		4892917	1					
ANR	4892961	PostIncDecOperationExpression	s ++	45:36:1584:1586	4892917	2	True				
ANR	4892962	Identifier	s		4892917	0					
ANR	4892963	IncDec	++		4892917	1					
ANR	4892964	CompoundStatement		11:42:437:437	4892917	3					
ANR	4892965	IfStatement	if ( * s == '\\\\' || * s == '/' )		4892917	0					
ANR	4892966	Condition	* s == '\\\\' || * s == '/'	46:12:1604:1626	4892917	0	True				
ANR	4892967	OrExpression	* s == '\\\\' || * s == '/'		4892917	0		||			
ANR	4892968	EqualityExpression	* s == '\\\\'		4892917	0		==			
ANR	4892969	UnaryOperationExpression	* s		4892917	0					
ANR	4892970	UnaryOperator	*		4892917	0					
ANR	4892971	Identifier	s		4892917	1					
ANR	4892972	PrimaryExpression	'\\\\'		4892917	1					
ANR	4892973	EqualityExpression	* s == '/'		4892917	1		==			
ANR	4892974	UnaryOperationExpression	* s		4892917	0					
ANR	4892975	UnaryOperator	*		4892917	0					
ANR	4892976	Identifier	s		4892917	1					
ANR	4892977	PrimaryExpression	'/'		4892917	1					
ANR	4892978	CompoundStatement		12:38:477:477	4892917	1					
ANR	4892979	ExpressionStatement	last = s	47:3:1635:1643	4892917	0	True				
ANR	4892980	AssignmentExpression	last = s		4892917	0		=			
ANR	4892981	Identifier	last		4892917	0					
ANR	4892982	Identifier	s		4892917	1					
ANR	4892983	IfStatement	if ( last != NULL && last [ 1 ] )		4892917	4					
ANR	4892984	Condition	last != NULL && last [ 1 ]	50:5:1666:1688	4892917	0	True				
ANR	4892985	AndExpression	last != NULL && last [ 1 ]		4892917	0		&&			
ANR	4892986	EqualityExpression	last != NULL		4892917	0		!=			
ANR	4892987	Identifier	last		4892917	0					
ANR	4892988	Identifier	NULL		4892917	1					
ANR	4892989	ArrayIndexing	last [ 1 ]		4892917	1					
ANR	4892990	Identifier	last		4892917	0					
ANR	4892991	PrimaryExpression	1		4892917	1					
ANR	4892992	CompoundStatement		16:31:539:539	4892917	1					
ANR	4892993	ExpressionStatement	filename = strnewp ( & last [ 1 ] )	51:2:1696:1726	4892917	0	True				
ANR	4892994	AssignmentExpression	filename = strnewp ( & last [ 1 ] )		4892917	0		=			
ANR	4892995	Identifier	filename		4892917	0					
ANR	4892996	CallExpression	strnewp ( & last [ 1 ] )		4892917	1					
ANR	4892997	Callee	strnewp		4892917	0					
ANR	4892998	Identifier	strnewp		4892917	0					
ANR	4892999	ArgumentList	& last [ 1 ]		4892917	1					
ANR	4893000	Argument	& last [ 1 ]		4892917	0					
ANR	4893001	UnaryOperationExpression	& last [ 1 ]		4892917	0					
ANR	4893002	UnaryOperator	&		4892917	0					
ANR	4893003	ArrayIndexing	last [ 1 ]		4892917	1					
ANR	4893004	Identifier	last		4892917	0					
ANR	4893005	PrimaryExpression	1		4892917	1					
ANR	4893006	ExpressionStatement	last [ 1 ] = '\\0'	52:2:1731:1745	4892917	1	True				
ANR	4893007	AssignmentExpression	last [ 1 ] = '\\0'		4892917	0		=			
ANR	4893008	ArrayIndexing	last [ 1 ]		4892917	0					
ANR	4893009	Identifier	last		4892917	0					
ANR	4893010	PrimaryExpression	1		4892917	1					
ANR	4893011	PrimaryExpression	'\\0'		4892917	1					
ANR	4893012	ElseStatement	else		4892917	0					
ANR	4893013	CompoundStatement		19:8:602:602	4892917	0					
ANR	4893014	ExpressionStatement	filename = NULL	54:2:1759:1774	4892917	0	True				
ANR	4893015	AssignmentExpression	filename = NULL		4892917	0		=			
ANR	4893016	Identifier	filename		4892917	0					
ANR	4893017	Identifier	NULL		4892917	1					
ANR	4893018	ExpressionStatement	stat_file ( fullpath )	56:1:1780:1801	4892917	5	True				
ANR	4893019	CallExpression	stat_file ( fullpath )		4892917	0					
ANR	4893020	Callee	stat_file		4892917	0					
ANR	4893021	Identifier	stat_file		4892917	0					
ANR	4893022	ArgumentList	fullpath		4892917	1					
ANR	4893023	Argument	fullpath		4892917	0					
ANR	4893024	Identifier	fullpath		4892917	0					
ANR	4893025	Identifier	StatInfo :: StatInfo		4892917	1					
ANR	4893026	ParameterList	const char * path		4892917	2					
ANR	4893027	Parameter	const char * path	34:20:1133:1148	4892917	0	True				
ANR	4893028	ParameterType	const char *		4892917	0					
ANR	4893029	Identifier	path		4892917	1					
ANR	4893030	CFGEntryNode	ENTRY		4892917		True				
ANR	4893031	CFGExitNode	EXIT		4892917		True				
ANR	4893032	Symbol	path		4892917						
ANR	4893033	Symbol	s		4892917						
ANR	4893034	Symbol	NULL		4892917						
ANR	4893035	Symbol	filename		4892917						
ANR	4893036	Symbol	last		4892917						
ANR	4893037	Symbol	dirpath		4892917						
ANR	4893038	Symbol	fullpath		4892917						
ANR	4893039	Symbol	strnewp		4892917						
ANR	4893040	Symbol	* s		4892917						
ANR	4893041	Symbol	* last		4892917						
ANR	4893042	Function	StatInfo :: StatInfo	59:0:1806:2059							
ANR	4893043	FunctionDef	"StatInfo :: StatInfo (const char * param_dirpath , const char * param_filename)"		4893042	0					
ANR	4893044	CompoundStatement		61:0:1887:2059	4893042	0					
ANR	4893045	ExpressionStatement	this -> filename = strnewp ( param_filename )	62:1:1890:1932	4893042	0	True				
ANR	4893046	AssignmentExpression	this -> filename = strnewp ( param_filename )		4893042	0		=			
ANR	4893047	PtrMemberAccess	this -> filename		4893042	0					
ANR	4893048	Identifier	this		4893042	0					
ANR	4893049	Identifier	filename		4893042	1					
ANR	4893050	CallExpression	strnewp ( param_filename )		4893042	1					
ANR	4893051	Callee	strnewp		4893042	0					
ANR	4893052	Identifier	strnewp		4893042	0					
ANR	4893053	ArgumentList	param_filename		4893042	1					
ANR	4893054	Argument	param_filename		4893042	0					
ANR	4893055	Identifier	param_filename		4893042	0					
ANR	4893056	ExpressionStatement	this -> dirpath = make_dirpath ( param_dirpath )	63:1:1935:1980	4893042	1	True				
ANR	4893057	AssignmentExpression	this -> dirpath = make_dirpath ( param_dirpath )		4893042	0		=			
ANR	4893058	PtrMemberAccess	this -> dirpath		4893042	0					
ANR	4893059	Identifier	this		4893042	0					
ANR	4893060	Identifier	dirpath		4893042	1					
ANR	4893061	CallExpression	make_dirpath ( param_dirpath )		4893042	1					
ANR	4893062	Callee	make_dirpath		4893042	0					
ANR	4893063	Identifier	make_dirpath		4893042	0					
ANR	4893064	ArgumentList	param_dirpath		4893042	1					
ANR	4893065	Argument	param_dirpath		4893042	0					
ANR	4893066	Identifier	param_dirpath		4893042	0					
ANR	4893067	ExpressionStatement	"fullpath = dircat ( param_dirpath , param_filename )"	64:1:1983:2033	4893042	2	True				
ANR	4893068	AssignmentExpression	"fullpath = dircat ( param_dirpath , param_filename )"		4893042	0		=			
ANR	4893069	Identifier	fullpath		4893042	0					
ANR	4893070	CallExpression	"dircat ( param_dirpath , param_filename )"		4893042	1					
ANR	4893071	Callee	dircat		4893042	0					
ANR	4893072	Identifier	dircat		4893042	0					
ANR	4893073	ArgumentList	param_dirpath		4893042	1					
ANR	4893074	Argument	param_dirpath		4893042	0					
ANR	4893075	Identifier	param_dirpath		4893042	0					
ANR	4893076	Argument	param_filename		4893042	1					
ANR	4893077	Identifier	param_filename		4893042	0					
ANR	4893078	ExpressionStatement	stat_file ( fullpath )	65:1:2036:2057	4893042	3	True				
ANR	4893079	CallExpression	stat_file ( fullpath )		4893042	0					
ANR	4893080	Callee	stat_file		4893042	0					
ANR	4893081	Identifier	stat_file		4893042	0					
ANR	4893082	ArgumentList	fullpath		4893042	1					
ANR	4893083	Argument	fullpath		4893042	0					
ANR	4893084	Identifier	fullpath		4893042	0					
ANR	4893085	Identifier	StatInfo :: StatInfo		4893042	1					
ANR	4893086	ParameterList	"const char * param_dirpath , const char * param_filename"		4893042	2					
ANR	4893087	Parameter	const char * param_dirpath	59:20:1826:1850	4893042	0	True				
ANR	4893088	ParameterType	const char *		4893042	0					
ANR	4893089	Identifier	param_dirpath		4893042	1					
ANR	4893090	Parameter	const char * param_filename	60:5:1858:1883	4893042	1	True				
ANR	4893091	ParameterType	const char *		4893042	0					
ANR	4893092	Identifier	param_filename		4893042	1					
ANR	4893093	CFGEntryNode	ENTRY		4893042		True				
ANR	4893094	CFGExitNode	EXIT		4893042		True				
ANR	4893095	Symbol	* this		4893042						
ANR	4893096	Symbol	make_dirpath		4893042						
ANR	4893097	Symbol	param_filename		4893042						
ANR	4893098	Symbol	fullpath		4893042						
ANR	4893099	Symbol	param_dirpath		4893042						
ANR	4893100	Symbol	this -> filename		4893042						
ANR	4893101	Symbol	this		4893042						
ANR	4893102	Symbol	dircat		4893042						
ANR	4893103	Symbol	strnewp		4893042						
ANR	4893104	Symbol	this -> dirpath		4893042						
ANR	4893105	Function	StatInfo :: StatInfo	68:0:2062:2165							
ANR	4893106	FunctionDef	StatInfo :: StatInfo (int fd)		4893105	0					
ANR	4893107	CompoundStatement		69:0:2091:2165	4893105	0					
ANR	4893108	ExpressionStatement	filename = NULL	70:1:2094:2109	4893105	0	True				
ANR	4893109	AssignmentExpression	filename = NULL		4893105	0		=			
ANR	4893110	Identifier	filename		4893105	0					
ANR	4893111	Identifier	NULL		4893105	1					
ANR	4893112	ExpressionStatement	fullpath = NULL	71:1:2112:2127	4893105	1	True				
ANR	4893113	AssignmentExpression	fullpath = NULL		4893105	0		=			
ANR	4893114	Identifier	fullpath		4893105	0					
ANR	4893115	Identifier	NULL		4893105	1					
ANR	4893116	ExpressionStatement	dirpath = NULL	72:1:2130:2144	4893105	2	True				
ANR	4893117	AssignmentExpression	dirpath = NULL		4893105	0		=			
ANR	4893118	Identifier	dirpath		4893105	0					
ANR	4893119	Identifier	NULL		4893105	1					
ANR	4893120	ExpressionStatement	stat_file ( fd )	74:1:2148:2163	4893105	3	True				
ANR	4893121	CallExpression	stat_file ( fd )		4893105	0					
ANR	4893122	Callee	stat_file		4893105	0					
ANR	4893123	Identifier	stat_file		4893105	0					
ANR	4893124	ArgumentList	fd		4893105	1					
ANR	4893125	Argument	fd		4893105	0					
ANR	4893126	Identifier	fd		4893105	0					
ANR	4893127	Identifier	StatInfo :: StatInfo		4893105	1					
ANR	4893128	ParameterList	int fd		4893105	2					
ANR	4893129	Parameter	int fd	68:20:2082:2087	4893105	0	True				
ANR	4893130	ParameterType	int		4893105	0					
ANR	4893131	Identifier	fd		4893105	1					
ANR	4893132	CFGEntryNode	ENTRY		4893105		True				
ANR	4893133	CFGExitNode	EXIT		4893105		True				
ANR	4893134	Symbol	NULL		4893105						
ANR	4893135	Symbol	filename		4893105						
ANR	4893136	Symbol	dirpath		4893105						
ANR	4893137	Symbol	fullpath		4893105						
ANR	4893138	Symbol	fd		4893105						
ANR	4893139	Function	StatInfo :: StatInfo	78:0:2181:2696							
ANR	4893140	FunctionDef	"StatInfo :: StatInfo (const char * dirpath , const char * filename , time_t time_access , time_t time_create , time_t time_modify , filesize_t fsize , bool is_dir , bool is_symlink)"		4893139	0					
ANR	4893141	CompoundStatement		82:0:2370:2696	4893139	0					
ANR	4893142	ExpressionStatement	this -> dirpath = strnewp ( dirpath )	83:1:2373:2407	4893139	0	True				
ANR	4893143	AssignmentExpression	this -> dirpath = strnewp ( dirpath )		4893139	0		=			
ANR	4893144	PtrMemberAccess	this -> dirpath		4893139	0					
ANR	4893145	Identifier	this		4893139	0					
ANR	4893146	Identifier	dirpath		4893139	1					
ANR	4893147	CallExpression	strnewp ( dirpath )		4893139	1					
ANR	4893148	Callee	strnewp		4893139	0					
ANR	4893149	Identifier	strnewp		4893139	0					
ANR	4893150	ArgumentList	dirpath		4893139	1					
ANR	4893151	Argument	dirpath		4893139	0					
ANR	4893152	Identifier	dirpath		4893139	0					
ANR	4893153	ExpressionStatement	this -> filename = strnewp ( filename )	84:1:2410:2446	4893139	1	True				
ANR	4893154	AssignmentExpression	this -> filename = strnewp ( filename )		4893139	0		=			
ANR	4893155	PtrMemberAccess	this -> filename		4893139	0					
ANR	4893156	Identifier	this		4893139	0					
ANR	4893157	Identifier	filename		4893139	1					
ANR	4893158	CallExpression	strnewp ( filename )		4893139	1					
ANR	4893159	Callee	strnewp		4893139	0					
ANR	4893160	Identifier	strnewp		4893139	0					
ANR	4893161	ArgumentList	filename		4893139	1					
ANR	4893162	Argument	filename		4893139	0					
ANR	4893163	Identifier	filename		4893139	0					
ANR	4893164	ExpressionStatement	"fullpath = dircat ( dirpath , filename )"	85:1:2449:2487	4893139	2	True				
ANR	4893165	AssignmentExpression	"fullpath = dircat ( dirpath , filename )"		4893139	0		=			
ANR	4893166	Identifier	fullpath		4893139	0					
ANR	4893167	CallExpression	"dircat ( dirpath , filename )"		4893139	1					
ANR	4893168	Callee	dircat		4893139	0					
ANR	4893169	Identifier	dircat		4893139	0					
ANR	4893170	ArgumentList	dirpath		4893139	1					
ANR	4893171	Argument	dirpath		4893139	0					
ANR	4893172	Identifier	dirpath		4893139	0					
ANR	4893173	Argument	filename		4893139	1					
ANR	4893174	Identifier	filename		4893139	0					
ANR	4893175	ExpressionStatement	si_error = SIGood	86:1:2490:2507	4893139	3	True				
ANR	4893176	AssignmentExpression	si_error = SIGood		4893139	0		=			
ANR	4893177	Identifier	si_error		4893139	0					
ANR	4893178	Identifier	SIGood		4893139	1					
ANR	4893179	ExpressionStatement	si_errno = 0	87:1:2510:2522	4893139	4	True				
ANR	4893180	AssignmentExpression	si_errno = 0		4893139	0		=			
ANR	4893181	Identifier	si_errno		4893139	0					
ANR	4893182	PrimaryExpression	0		4893139	1					
ANR	4893183	ExpressionStatement	access_time = time_access	88:1:2525:2550	4893139	5	True				
ANR	4893184	AssignmentExpression	access_time = time_access		4893139	0		=			
ANR	4893185	Identifier	access_time		4893139	0					
ANR	4893186	Identifier	time_access		4893139	1					
ANR	4893187	ExpressionStatement	modify_time = time_modify	89:1:2553:2578	4893139	6	True				
ANR	4893188	AssignmentExpression	modify_time = time_modify		4893139	0		=			
ANR	4893189	Identifier	modify_time		4893139	0					
ANR	4893190	Identifier	time_modify		4893139	1					
ANR	4893191	ExpressionStatement	create_time = time_create	90:1:2581:2606	4893139	7	True				
ANR	4893192	AssignmentExpression	create_time = time_create		4893139	0		=			
ANR	4893193	Identifier	create_time		4893139	0					
ANR	4893194	Identifier	time_create		4893139	1					
ANR	4893195	ExpressionStatement	valid = false	91:1:2609:2622	4893139	8	True				
ANR	4893196	AssignmentExpression	valid = false		4893139	0		=			
ANR	4893197	Identifier	valid		4893139	0					
ANR	4893198	Identifier	false		4893139	1					
ANR	4893199	ExpressionStatement	file_size = fsize	92:1:2625:2642	4893139	9	True				
ANR	4893200	AssignmentExpression	file_size = fsize		4893139	0		=			
ANR	4893201	Identifier	file_size		4893139	0					
ANR	4893202	Identifier	fsize		4893139	1					
ANR	4893203	ExpressionStatement	m_isDirectory = is_dir	93:1:2645:2667	4893139	10	True				
ANR	4893204	AssignmentExpression	m_isDirectory = is_dir		4893139	0		=			
ANR	4893205	Identifier	m_isDirectory		4893139	0					
ANR	4893206	Identifier	is_dir		4893139	1					
ANR	4893207	ExpressionStatement	m_isSymlink = is_symlink	94:1:2670:2694	4893139	11	True				
ANR	4893208	AssignmentExpression	m_isSymlink = is_symlink		4893139	0		=			
ANR	4893209	Identifier	m_isSymlink		4893139	0					
ANR	4893210	Identifier	is_symlink		4893139	1					
ANR	4893211	Identifier	StatInfo :: StatInfo		4893139	1					
ANR	4893212	ParameterList	"const char * dirpath , const char * filename , time_t time_access , time_t time_create , time_t time_modify , filesize_t fsize , bool is_dir , bool is_symlink"		4893139	2					
ANR	4893213	Parameter	const char * dirpath	78:20:2201:2219	4893139	0	True				
ANR	4893214	ParameterType	const char *		4893139	0					
ANR	4893215	Identifier	dirpath		4893139	1					
ANR	4893216	Parameter	const char * filename	78:41:2222:2241	4893139	1	True				
ANR	4893217	ParameterType	const char *		4893139	0					
ANR	4893218	Identifier	filename		4893139	1					
ANR	4893219	Parameter	time_t time_access	79:5:2250:2267	4893139	2	True				
ANR	4893220	ParameterType	time_t		4893139	0					
ANR	4893221	Identifier	time_access		4893139	1					
ANR	4893222	Parameter	time_t time_create	79:25:2270:2287	4893139	3	True				
ANR	4893223	ParameterType	time_t		4893139	0					
ANR	4893224	Identifier	time_create		4893139	1					
ANR	4893225	Parameter	time_t time_modify	80:5:2296:2313	4893139	4	True				
ANR	4893226	ParameterType	time_t		4893139	0					
ANR	4893227	Identifier	time_modify		4893139	1					
ANR	4893228	Parameter	filesize_t fsize	80:25:2316:2331	4893139	5	True				
ANR	4893229	ParameterType	filesize_t		4893139	0					
ANR	4893230	Identifier	fsize		4893139	1					
ANR	4893231	Parameter	bool is_dir	81:5:2339:2349	4893139	6	True				
ANR	4893232	ParameterType	bool		4893139	0					
ANR	4893233	Identifier	is_dir		4893139	1					
ANR	4893234	Parameter	bool is_symlink	81:18:2352:2366	4893139	7	True				
ANR	4893235	ParameterType	bool		4893139	0					
ANR	4893236	Identifier	is_symlink		4893139	1					
ANR	4893237	CFGEntryNode	ENTRY		4893139		True				
ANR	4893238	CFGExitNode	EXIT		4893139		True				
ANR	4893239	Symbol	m_isDirectory		4893139						
ANR	4893240	Symbol	time_access		4893139						
ANR	4893241	Symbol	modify_time		4893139						
ANR	4893242	Symbol	dircat		4893139						
ANR	4893243	Symbol	m_isSymlink		4893139						
ANR	4893244	Symbol	si_errno		4893139						
ANR	4893245	Symbol	valid		4893139						
ANR	4893246	Symbol	is_dir		4893139						
ANR	4893247	Symbol	fullpath		4893139						
ANR	4893248	Symbol	this -> filename		4893139						
ANR	4893249	Symbol	time_modify		4893139						
ANR	4893250	Symbol	strnewp		4893139						
ANR	4893251	Symbol	this -> dirpath		4893139						
ANR	4893252	Symbol	time_create		4893139						
ANR	4893253	Symbol	dirpath		4893139						
ANR	4893254	Symbol	create_time		4893139						
ANR	4893255	Symbol	this		4893139						
ANR	4893256	Symbol	false		4893139						
ANR	4893257	Symbol	si_error		4893139						
ANR	4893258	Symbol	is_symlink		4893139						
ANR	4893259	Symbol	file_size		4893139						
ANR	4893260	Symbol	* this		4893139						
ANR	4893261	Symbol	filename		4893139						
ANR	4893262	Symbol	fsize		4893139						
ANR	4893263	Symbol	SIGood		4893139						
ANR	4893264	Symbol	access_time		4893139						
ANR	4893265	Function	StatInfo :: ~StatInfo	99:0:2719:2859							
ANR	4893266	FunctionDef	StatInfo :: ~StatInfo ()		4893265	0					
ANR	4893267	CompoundStatement		100:0:2747:2859	4893265	0					
ANR	4893268	IfStatement	if ( filename )		4893265	0					
ANR	4893269	Condition	filename	101:6:2755:2762	4893265	0	True				
ANR	4893270	Identifier	filename		4893265	0					
ANR	4893271	Statement	delete	101:17:2766:2771	4893265	1	True				
ANR	4893272	Statement	[	101:24:2773:2773	4893265	1	True				
ANR	4893273	Statement	]	101:25:2774:2774	4893265	2	True				
ANR	4893274	ExpressionStatement	filename	101:27:2776:2784	4893265	3	True				
ANR	4893275	Identifier	filename		4893265	0					
ANR	4893276	IfStatement	if ( dirpath )		4893265	4					
ANR	4893277	Condition	dirpath	102:6:2792:2798	4893265	0	True				
ANR	4893278	Identifier	dirpath		4893265	0					
ANR	4893279	Statement	delete	102:17:2803:2808	4893265	1	True				
ANR	4893280	Statement	[	102:24:2810:2810	4893265	5	True				
ANR	4893281	Statement	]	102:25:2811:2811	4893265	6	True				
ANR	4893282	ExpressionStatement	dirpath	102:27:2813:2820	4893265	7	True				
ANR	4893283	Identifier	dirpath		4893265	0					
ANR	4893284	IfStatement	if ( fullpath )		4893265	8					
ANR	4893285	Condition	fullpath	103:6:2828:2835	4893265	0	True				
ANR	4893286	Identifier	fullpath		4893265	0					
ANR	4893287	Statement	delete	103:17:2839:2844	4893265	1	True				
ANR	4893288	Statement	[	103:24:2846:2846	4893265	9	True				
ANR	4893289	Statement	]	103:25:2847:2847	4893265	10	True				
ANR	4893290	ExpressionStatement	fullpath	103:27:2849:2857	4893265	11	True				
ANR	4893291	Identifier	fullpath		4893265	0					
ANR	4893292	Identifier	StatInfo :: ~StatInfo		4893265	1					
ANR	4893293	ParameterList			4893265	2					
ANR	4893294	CFGEntryNode	ENTRY		4893265		True				
ANR	4893295	CFGExitNode	EXIT		4893265		True				
ANR	4893296	Symbol	filename		4893265						
ANR	4893297	Symbol	dirpath		4893265						
ANR	4893298	Symbol	fullpath		4893265						
ANR	4893299	Function	StatInfo :: stat_file	115:0:3182:4122							
ANR	4893300	FunctionDef	StatInfo :: stat_file (const char * path)		4893299	0					
ANR	4893301	CompoundStatement		117:0:3227:4122	4893299	0					
ANR	4893302	ExpressionStatement	init ( )	119:1:3246:3253	4893299	0	True				
ANR	4893303	CallExpression	init ( )		4893299	0					
ANR	4893304	Callee	init		4893299	0					
ANR	4893305	Identifier	init		4893299	0					
ANR	4893306	ArgumentList			4893299	1					
ANR	4893307	IdentifierDeclStatement	StatWrapper statbuf ;	122:1:3275:3294	4893299	1	True				
ANR	4893308	IdentifierDecl	statbuf		4893299	0					
ANR	4893309	IdentifierDeclType	StatWrapper		4893299	0					
ANR	4893310	Identifier	statbuf		4893299	1					
ANR	4893311	IdentifierDeclStatement	"int status = statbuf . Stat ( path , StatWrapper :: STATOP_STAT ) ;"	123:1:3297:3356	4893299	2	True				
ANR	4893312	IdentifierDecl	"status = statbuf . Stat ( path , StatWrapper :: STATOP_STAT )"		4893299	0					
ANR	4893313	IdentifierDeclType	int		4893299	0					
ANR	4893314	Identifier	status		4893299	1					
ANR	4893315	AssignmentExpression	"status = statbuf . Stat ( path , StatWrapper :: STATOP_STAT )"		4893299	2		=			
ANR	4893316	Identifier	status		4893299	0					
ANR	4893317	CallExpression	"statbuf . Stat ( path , StatWrapper :: STATOP_STAT )"		4893299	1					
ANR	4893318	Callee	statbuf . Stat		4893299	0					
ANR	4893319	MemberAccess	statbuf . Stat		4893299	0					
ANR	4893320	Identifier	statbuf		4893299	0					
ANR	4893321	Identifier	Stat		4893299	1					
ANR	4893322	ArgumentList	path		4893299	1					
ANR	4893323	Argument	path		4893299	0					
ANR	4893324	Identifier	path		4893299	0					
ANR	4893325	Argument	StatWrapper :: STATOP_STAT		4893299	1					
ANR	4893326	Identifier	StatWrapper :: STATOP_STAT		4893299	0					
ANR	4893327	Statement	if	125:2:3361:3362	4893299	3	True				
ANR	4893328	Statement	(	125:5:3364:3364	4893299	4	True				
ANR	4893329	Statement	!	125:6:3365:3365	4893299	5	True				
ANR	4893330	Statement	defined	125:8:3367:3373	4893299	6	True				
ANR	4893331	Statement	WIN32	125:16:3375:3379	4893299	7	True				
ANR	4893332	Statement	)	125:21:3380:3380	4893299	8	True				
ANR	4893333	IfStatement	if ( ! status )		4893299	9					
ANR	4893334	Condition	! status	126:6:3388:3394	4893299	0	True				
ANR	4893335	UnaryOperationExpression	! status		4893299	0					
ANR	4893336	UnaryOperator	!		4893299	0					
ANR	4893337	Identifier	status		4893299	1					
ANR	4893338	CompoundStatement		10:16:170:170	4893299	1					
ANR	4893339	ExpressionStatement	status = statbuf . Stat ( StatWrapper :: STATOP_LSTAT )	127:2:3402:3452	4893299	0	True				
ANR	4893340	AssignmentExpression	status = statbuf . Stat ( StatWrapper :: STATOP_LSTAT )		4893299	0		=			
ANR	4893341	Identifier	status		4893299	0					
ANR	4893342	CallExpression	statbuf . Stat ( StatWrapper :: STATOP_LSTAT )		4893299	1					
ANR	4893343	Callee	statbuf . Stat		4893299	0					
ANR	4893344	MemberAccess	statbuf . Stat		4893299	0					
ANR	4893345	Identifier	statbuf		4893299	0					
ANR	4893346	Identifier	Stat		4893299	1					
ANR	4893347	ArgumentList	StatWrapper :: STATOP_LSTAT		4893299	1					
ANR	4893348	Argument	StatWrapper :: STATOP_LSTAT		4893299	0					
ANR	4893349	Identifier	StatWrapper :: STATOP_LSTAT		4893299	0					
ANR	4893350	Statement	endif	129:2:3459:3463	4893299	10	True				
ANR	4893351	IfStatement	if ( status )		4893299	11					
ANR	4893352	Condition	status	132:6:3490:3495	4893299	0	True				
ANR	4893353	Identifier	status		4893299	0					
ANR	4893354	CompoundStatement		16:15:271:271	4893299	1					
ANR	4893355	ExpressionStatement	si_errno = statbuf . GetErrno ( )	133:2:3503:3533	4893299	0	True				
ANR	4893356	AssignmentExpression	si_errno = statbuf . GetErrno ( )		4893299	0		=			
ANR	4893357	Identifier	si_errno		4893299	0					
ANR	4893358	CallExpression	statbuf . GetErrno ( )		4893299	1					
ANR	4893359	Callee	statbuf . GetErrno		4893299	0					
ANR	4893360	MemberAccess	statbuf . GetErrno		4893299	0					
ANR	4893361	Identifier	statbuf		4893299	0					
ANR	4893362	Identifier	GetErrno		4893299	1					
ANR	4893363	ArgumentList			4893299	1					
ANR	4893364	Statement	if	135:2:3538:3539	4893299	1	True				
ANR	4893365	Statement	(	135:5:3541:3541	4893299	2	True				
ANR	4893366	Statement	!	135:6:3542:3542	4893299	3	True				
ANR	4893367	Statement	defined	135:8:3544:3550	4893299	4	True				
ANR	4893368	Statement	WIN32	135:16:3552:3556	4893299	5	True				
ANR	4893369	Statement	)	135:22:3558:3558	4893299	6	True				
ANR	4893370	IfStatement	if ( EACCES == si_errno )		4893299	7					
ANR	4893371	Condition	EACCES == si_errno	136:7:3567:3584	4893299	0	True				
ANR	4893372	EqualityExpression	EACCES == si_errno		4893299	0		==			
ANR	4893373	Identifier	EACCES		4893299	0					
ANR	4893374	Identifier	si_errno		4893299	1					
ANR	4893375	CompoundStatement		22:3:405:440	4893299	1					
ANR	4893376	IdentifierDeclStatement	priv_state priv = set_condor_priv ( ) ;	138:3:3633:3668	4893299	0	True				
ANR	4893377	IdentifierDecl	priv = set_condor_priv ( )		4893299	0					
ANR	4893378	IdentifierDeclType	priv_state		4893299	0					
ANR	4893379	Identifier	priv		4893299	1					
ANR	4893380	AssignmentExpression	priv = set_condor_priv ( )		4893299	2		=			
ANR	4893381	Identifier	priv		4893299	0					
ANR	4893382	CallExpression	set_condor_priv ( )		4893299	1					
ANR	4893383	Callee	set_condor_priv		4893299	0					
ANR	4893384	Identifier	set_condor_priv		4893299	0					
ANR	4893385	ArgumentList			4893299	1					
ANR	4893386	ExpressionStatement	status = statbuf . Retry ( )	139:3:3673:3698	4893299	1	True				
ANR	4893387	AssignmentExpression	status = statbuf . Retry ( )		4893299	0		=			
ANR	4893388	Identifier	status		4893299	0					
ANR	4893389	CallExpression	statbuf . Retry ( )		4893299	1					
ANR	4893390	Callee	statbuf . Retry		4893299	0					
ANR	4893391	MemberAccess	statbuf . Retry		4893299	0					
ANR	4893392	Identifier	statbuf		4893299	0					
ANR	4893393	Identifier	Retry		4893299	1					
ANR	4893394	ArgumentList			4893299	1					
ANR	4893395	ExpressionStatement	set_priv ( priv )	140:3:3703:3719	4893299	2	True				
ANR	4893396	CallExpression	set_priv ( priv )		4893299	0					
ANR	4893397	Callee	set_priv		4893299	0					
ANR	4893398	Identifier	set_priv		4893299	0					
ANR	4893399	ArgumentList	priv		4893299	1					
ANR	4893400	Argument	priv		4893299	0					
ANR	4893401	Identifier	priv		4893299	0					
ANR	4893402	IfStatement	if ( status < 0 )		4893299	3					
ANR	4893403	Condition	status < 0	142:7:3729:3738	4893299	0	True				
ANR	4893404	RelationalExpression	status < 0		4893299	0		<			
ANR	4893405	Identifier	status		4893299	0					
ANR	4893406	PrimaryExpression	0		4893299	1					
ANR	4893407	CompoundStatement		26:20:514:514	4893299	1					
ANR	4893408	ExpressionStatement	si_errno = statbuf . GetErrno ( )	143:4:3748:3778	4893299	0	True				
ANR	4893409	AssignmentExpression	si_errno = statbuf . GetErrno ( )		4893299	0		=			
ANR	4893410	Identifier	si_errno		4893299	0					
ANR	4893411	CallExpression	statbuf . GetErrno ( )		4893299	1					
ANR	4893412	Callee	statbuf . GetErrno		4893299	0					
ANR	4893413	MemberAccess	statbuf . GetErrno		4893299	0					
ANR	4893414	Identifier	statbuf		4893299	0					
ANR	4893415	Identifier	GetErrno		4893299	1					
ANR	4893416	ArgumentList			4893299	1					
ANR	4893417	Statement	endif	146:2:3791:3795	4893299	8	True				
ANR	4893418	IfStatement	if ( status )		4893299	12					
ANR	4893419	Condition	status	150:6:3843:3848	4893299	0	True				
ANR	4893420	Identifier	status		4893299	0					
ANR	4893421	CompoundStatement		34:15:624:624	4893299	1					
ANR	4893422	IfStatement	if ( ( ENOENT == si_errno ) || ( EBADF == si_errno ) )		4893299	0					
ANR	4893423	Condition	( ENOENT == si_errno ) || ( EBADF == si_errno )	151:6:3860:3904	4893299	0	True				
ANR	4893424	OrExpression	( ENOENT == si_errno ) || ( EBADF == si_errno )		4893299	0		||			
ANR	4893425	EqualityExpression	ENOENT == si_errno		4893299	0		==			
ANR	4893426	Identifier	ENOENT		4893299	0					
ANR	4893427	Identifier	si_errno		4893299	1					
ANR	4893428	EqualityExpression	EBADF == si_errno		4893299	1		==			
ANR	4893429	Identifier	EBADF		4893299	0					
ANR	4893430	Identifier	si_errno		4893299	1					
ANR	4893431	CompoundStatement		35:54:680:680	4893299	1					
ANR	4893432	ExpressionStatement	si_error = SINoFile	152:3:3913:3932	4893299	0	True				
ANR	4893433	AssignmentExpression	si_error = SINoFile		4893299	0		=			
ANR	4893434	Identifier	si_error		4893299	0					
ANR	4893435	Identifier	SINoFile		4893299	1					
ANR	4893436	ElseStatement	else		4893299	0					
ANR	4893437	CompoundStatement		37:9:715:715	4893299	0					
ANR	4893438	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""StatInfo::%s(%s) failed, errno: %d = %s\\n"" , statbuf . GetStatFn ( ) , path , si_errno , strerror ( si_errno ) )"	154:3:3948:4082	4893299	0	True				
ANR	4893439	CallExpression	"dprintf ( D_FULLDEBUG , ""StatInfo::%s(%s) failed, errno: %d = %s\\n"" , statbuf . GetStatFn ( ) , path , si_errno , strerror ( si_errno ) )"		4893299	0					
ANR	4893440	Callee	dprintf		4893299	0					
ANR	4893441	Identifier	dprintf		4893299	0					
ANR	4893442	ArgumentList	D_FULLDEBUG		4893299	1					
ANR	4893443	Argument	D_FULLDEBUG		4893299	0					
ANR	4893444	Identifier	D_FULLDEBUG		4893299	0					
ANR	4893445	Argument	"""StatInfo::%s(%s) failed, errno: %d = %s\\n"""		4893299	1					
ANR	4893446	PrimaryExpression	"""StatInfo::%s(%s) failed, errno: %d = %s\\n"""		4893299	0					
ANR	4893447	Argument	statbuf . GetStatFn ( )		4893299	2					
ANR	4893448	CallExpression	statbuf . GetStatFn ( )		4893299	0					
ANR	4893449	Callee	statbuf . GetStatFn		4893299	0					
ANR	4893450	MemberAccess	statbuf . GetStatFn		4893299	0					
ANR	4893451	Identifier	statbuf		4893299	0					
ANR	4893452	Identifier	GetStatFn		4893299	1					
ANR	4893453	ArgumentList			4893299	1					
ANR	4893454	Argument	path		4893299	3					
ANR	4893455	Identifier	path		4893299	0					
ANR	4893456	Argument	si_errno		4893299	4					
ANR	4893457	Identifier	si_errno		4893299	0					
ANR	4893458	Argument	strerror ( si_errno )		4893299	5					
ANR	4893459	CallExpression	strerror ( si_errno )		4893299	0					
ANR	4893460	Callee	strerror		4893299	0					
ANR	4893461	Identifier	strerror		4893299	0					
ANR	4893462	ArgumentList	si_errno		4893299	1					
ANR	4893463	Argument	si_errno		4893299	0					
ANR	4893464	Identifier	si_errno		4893299	0					
ANR	4893465	ReturnStatement	return ;	158:2:4090:4096	4893299	1	True				
ANR	4893466	ExpressionStatement	init ( & statbuf )	161:1:4103:4119	4893299	13	True				
ANR	4893467	CallExpression	init ( & statbuf )		4893299	0					
ANR	4893468	Callee	init		4893299	0					
ANR	4893469	Identifier	init		4893299	0					
ANR	4893470	ArgumentList	& statbuf		4893299	1					
ANR	4893471	Argument	& statbuf		4893299	0					
ANR	4893472	UnaryOperationExpression	& statbuf		4893299	0					
ANR	4893473	UnaryOperator	&		4893299	0					
ANR	4893474	Identifier	statbuf		4893299	1					
ANR	4893475	ReturnType	void		4893299	1					
ANR	4893476	Identifier	StatInfo :: stat_file		4893299	2					
ANR	4893477	ParameterList	const char * path		4893299	3					
ANR	4893478	Parameter	const char * path	116:21:3208:3223	4893299	0	True				
ANR	4893479	ParameterType	const char *		4893299	0					
ANR	4893480	Identifier	path		4893299	1					
ANR	4893481	CFGEntryNode	ENTRY		4893299		True				
ANR	4893482	CFGExitNode	EXIT		4893299		True				
ANR	4893483	Symbol	set_condor_priv		4893299						
ANR	4893484	Symbol	statbuf . GetStatFn		4893299						
ANR	4893485	Symbol	si_error		4893299						
ANR	4893486	Symbol	D_FULLDEBUG		4893299						
ANR	4893487	Symbol	StatWrapper :: STATOP_LSTAT		4893299						
ANR	4893488	Symbol	si_errno		4893299						
ANR	4893489	Symbol	ENOENT		4893299						
ANR	4893490	Symbol	EBADF		4893299						
ANR	4893491	Symbol	strerror		4893299						
ANR	4893492	Symbol	path		4893299						
ANR	4893493	Symbol	SINoFile		4893299						
ANR	4893494	Symbol	statbuf		4893299						
ANR	4893495	Symbol	statbuf . GetErrno		4893299						
ANR	4893496	Symbol	StatWrapper :: STATOP_STAT		4893299						
ANR	4893497	Symbol	statbuf . Stat		4893299						
ANR	4893498	Symbol	EACCES		4893299						
ANR	4893499	Symbol	priv		4893299						
ANR	4893500	Symbol	& statbuf		4893299						
ANR	4893501	Symbol	statbuf . Retry		4893299						
ANR	4893502	Symbol	status		4893299						
ANR	4893503	Function	StatInfo :: stat_file	164:0:4124:4923							
ANR	4893504	FunctionDef	StatInfo :: stat_file (int fd)		4893503	0					
ANR	4893505	CompoundStatement		166:0:4159:4923	4893503	0					
ANR	4893506	ExpressionStatement	init ( )	168:1:4178:4185	4893503	0	True				
ANR	4893507	CallExpression	init ( )		4893503	0					
ANR	4893508	Callee	init		4893503	0					
ANR	4893509	Identifier	init		4893503	0					
ANR	4893510	ArgumentList			4893503	1					
ANR	4893511	IdentifierDeclStatement	StatWrapper statbuf ;	171:1:4207:4226	4893503	1	True				
ANR	4893512	IdentifierDecl	statbuf		4893503	0					
ANR	4893513	IdentifierDeclType	StatWrapper		4893503	0					
ANR	4893514	Identifier	statbuf		4893503	1					
ANR	4893515	IdentifierDeclStatement	int status = statbuf . Stat ( fd ) ;	172:1:4229:4260	4893503	2	True				
ANR	4893516	IdentifierDecl	status = statbuf . Stat ( fd )		4893503	0					
ANR	4893517	IdentifierDeclType	int		4893503	0					
ANR	4893518	Identifier	status		4893503	1					
ANR	4893519	AssignmentExpression	status = statbuf . Stat ( fd )		4893503	2		=			
ANR	4893520	Identifier	status		4893503	0					
ANR	4893521	CallExpression	statbuf . Stat ( fd )		4893503	1					
ANR	4893522	Callee	statbuf . Stat		4893503	0					
ANR	4893523	MemberAccess	statbuf . Stat		4893503	0					
ANR	4893524	Identifier	statbuf		4893503	0					
ANR	4893525	Identifier	Stat		4893503	1					
ANR	4893526	ArgumentList	fd		4893503	1					
ANR	4893527	Argument	fd		4893503	0					
ANR	4893528	Identifier	fd		4893503	0					
ANR	4893529	IfStatement	if ( status )		4893503	3					
ANR	4893530	Condition	status	176:6:4288:4293	4893503	0	True				
ANR	4893531	Identifier	status		4893503	0					
ANR	4893532	CompoundStatement		11:15:137:137	4893503	1					
ANR	4893533	ExpressionStatement	si_errno = statbuf . GetErrno ( )	177:2:4301:4331	4893503	0	True				
ANR	4893534	AssignmentExpression	si_errno = statbuf . GetErrno ( )		4893503	0		=			
ANR	4893535	Identifier	si_errno		4893503	0					
ANR	4893536	CallExpression	statbuf . GetErrno ( )		4893503	1					
ANR	4893537	Callee	statbuf . GetErrno		4893503	0					
ANR	4893538	MemberAccess	statbuf . GetErrno		4893503	0					
ANR	4893539	Identifier	statbuf		4893503	0					
ANR	4893540	Identifier	GetErrno		4893503	1					
ANR	4893541	ArgumentList			4893503	1					
ANR	4893542	Statement	if	179:2:4336:4337	4893503	1	True				
ANR	4893543	Statement	(	179:5:4339:4339	4893503	2	True				
ANR	4893544	Statement	!	179:6:4340:4340	4893503	3	True				
ANR	4893545	Statement	defined	179:8:4342:4348	4893503	4	True				
ANR	4893546	Statement	WIN32	179:16:4350:4354	4893503	5	True				
ANR	4893547	Statement	)	179:22:4356:4356	4893503	6	True				
ANR	4893548	IfStatement	if ( EACCES == si_errno )		4893503	7					
ANR	4893549	Condition	EACCES == si_errno	180:7:4365:4382	4893503	0	True				
ANR	4893550	EqualityExpression	EACCES == si_errno		4893503	0		==			
ANR	4893551	Identifier	EACCES		4893503	0					
ANR	4893552	Identifier	si_errno		4893503	1					
ANR	4893553	CompoundStatement		17:3:271:306	4893503	1					
ANR	4893554	IdentifierDeclStatement	priv_state priv = set_condor_priv ( ) ;	182:3:4431:4466	4893503	0	True				
ANR	4893555	IdentifierDecl	priv = set_condor_priv ( )		4893503	0					
ANR	4893556	IdentifierDeclType	priv_state		4893503	0					
ANR	4893557	Identifier	priv		4893503	1					
ANR	4893558	AssignmentExpression	priv = set_condor_priv ( )		4893503	2		=			
ANR	4893559	Identifier	priv		4893503	0					
ANR	4893560	CallExpression	set_condor_priv ( )		4893503	1					
ANR	4893561	Callee	set_condor_priv		4893503	0					
ANR	4893562	Identifier	set_condor_priv		4893503	0					
ANR	4893563	ArgumentList			4893503	1					
ANR	4893564	ExpressionStatement	status = statbuf . Retry ( )	183:3:4471:4496	4893503	1	True				
ANR	4893565	AssignmentExpression	status = statbuf . Retry ( )		4893503	0		=			
ANR	4893566	Identifier	status		4893503	0					
ANR	4893567	CallExpression	statbuf . Retry ( )		4893503	1					
ANR	4893568	Callee	statbuf . Retry		4893503	0					
ANR	4893569	MemberAccess	statbuf . Retry		4893503	0					
ANR	4893570	Identifier	statbuf		4893503	0					
ANR	4893571	Identifier	Retry		4893503	1					
ANR	4893572	ArgumentList			4893503	1					
ANR	4893573	ExpressionStatement	set_priv ( priv )	184:3:4501:4517	4893503	2	True				
ANR	4893574	CallExpression	set_priv ( priv )		4893503	0					
ANR	4893575	Callee	set_priv		4893503	0					
ANR	4893576	Identifier	set_priv		4893503	0					
ANR	4893577	ArgumentList	priv		4893503	1					
ANR	4893578	Argument	priv		4893503	0					
ANR	4893579	Identifier	priv		4893503	0					
ANR	4893580	IfStatement	if ( status < 0 )		4893503	3					
ANR	4893581	Condition	status < 0	186:7:4527:4536	4893503	0	True				
ANR	4893582	RelationalExpression	status < 0		4893503	0		<			
ANR	4893583	Identifier	status		4893503	0					
ANR	4893584	PrimaryExpression	0		4893503	1					
ANR	4893585	CompoundStatement		21:20:380:380	4893503	1					
ANR	4893586	ExpressionStatement	si_errno = statbuf . GetErrno ( )	187:4:4546:4576	4893503	0	True				
ANR	4893587	AssignmentExpression	si_errno = statbuf . GetErrno ( )		4893503	0		=			
ANR	4893588	Identifier	si_errno		4893503	0					
ANR	4893589	CallExpression	statbuf . GetErrno ( )		4893503	1					
ANR	4893590	Callee	statbuf . GetErrno		4893503	0					
ANR	4893591	MemberAccess	statbuf . GetErrno		4893503	0					
ANR	4893592	Identifier	statbuf		4893503	0					
ANR	4893593	Identifier	GetErrno		4893503	1					
ANR	4893594	ArgumentList			4893503	1					
ANR	4893595	Statement	endif	190:2:4589:4593	4893503	8	True				
ANR	4893596	IfStatement	if ( status )		4893503	4					
ANR	4893597	Condition	status	194:6:4641:4646	4893503	0	True				
ANR	4893598	Identifier	status		4893503	0					
ANR	4893599	CompoundStatement		29:15:490:490	4893503	1					
ANR	4893600	IfStatement	if ( ( ENOENT == si_errno ) || ( EBADF == si_errno ) )		4893503	0					
ANR	4893601	Condition	( ENOENT == si_errno ) || ( EBADF == si_errno )	195:6:4658:4702	4893503	0	True				
ANR	4893602	OrExpression	( ENOENT == si_errno ) || ( EBADF == si_errno )		4893503	0		||			
ANR	4893603	EqualityExpression	ENOENT == si_errno		4893503	0		==			
ANR	4893604	Identifier	ENOENT		4893503	0					
ANR	4893605	Identifier	si_errno		4893503	1					
ANR	4893606	EqualityExpression	EBADF == si_errno		4893503	1		==			
ANR	4893607	Identifier	EBADF		4893503	0					
ANR	4893608	Identifier	si_errno		4893503	1					
ANR	4893609	CompoundStatement		30:54:546:546	4893503	1					
ANR	4893610	ExpressionStatement	si_error = SINoFile	196:3:4711:4730	4893503	0	True				
ANR	4893611	AssignmentExpression	si_error = SINoFile		4893503	0		=			
ANR	4893612	Identifier	si_error		4893503	0					
ANR	4893613	Identifier	SINoFile		4893503	1					
ANR	4893614	ElseStatement	else		4893503	0					
ANR	4893615	CompoundStatement		32:9:581:581	4893503	0					
ANR	4893616	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""StatInfo::%s(fd=%d) failed, errno: %d = %s\\n"" , statbuf . GetStatFn ( ) , fd , si_errno , strerror ( si_errno ) )"	198:3:4746:4884	4893503	0	True				
ANR	4893617	CallExpression	"dprintf ( D_FULLDEBUG , ""StatInfo::%s(fd=%d) failed, errno: %d = %s\\n"" , statbuf . GetStatFn ( ) , fd , si_errno , strerror ( si_errno ) )"		4893503	0					
ANR	4893618	Callee	dprintf		4893503	0					
ANR	4893619	Identifier	dprintf		4893503	0					
ANR	4893620	ArgumentList	D_FULLDEBUG		4893503	1					
ANR	4893621	Argument	D_FULLDEBUG		4893503	0					
ANR	4893622	Identifier	D_FULLDEBUG		4893503	0					
ANR	4893623	Argument	"""StatInfo::%s(fd=%d) failed, errno: %d = %s\\n"""		4893503	1					
ANR	4893624	PrimaryExpression	"""StatInfo::%s(fd=%d) failed, errno: %d = %s\\n"""		4893503	0					
ANR	4893625	Argument	statbuf . GetStatFn ( )		4893503	2					
ANR	4893626	CallExpression	statbuf . GetStatFn ( )		4893503	0					
ANR	4893627	Callee	statbuf . GetStatFn		4893503	0					
ANR	4893628	MemberAccess	statbuf . GetStatFn		4893503	0					
ANR	4893629	Identifier	statbuf		4893503	0					
ANR	4893630	Identifier	GetStatFn		4893503	1					
ANR	4893631	ArgumentList			4893503	1					
ANR	4893632	Argument	fd		4893503	3					
ANR	4893633	Identifier	fd		4893503	0					
ANR	4893634	Argument	si_errno		4893503	4					
ANR	4893635	Identifier	si_errno		4893503	0					
ANR	4893636	Argument	strerror ( si_errno )		4893503	5					
ANR	4893637	CallExpression	strerror ( si_errno )		4893503	0					
ANR	4893638	Callee	strerror		4893503	0					
ANR	4893639	Identifier	strerror		4893503	0					
ANR	4893640	ArgumentList	si_errno		4893503	1					
ANR	4893641	Argument	si_errno		4893503	0					
ANR	4893642	Identifier	si_errno		4893503	0					
ANR	4893643	ReturnStatement	return ;	202:2:4892:4898	4893503	1	True				
ANR	4893644	ExpressionStatement	init ( & statbuf )	205:1:4905:4921	4893503	5	True				
ANR	4893645	CallExpression	init ( & statbuf )		4893503	0					
ANR	4893646	Callee	init		4893503	0					
ANR	4893647	Identifier	init		4893503	0					
ANR	4893648	ArgumentList	& statbuf		4893503	1					
ANR	4893649	Argument	& statbuf		4893503	0					
ANR	4893650	UnaryOperationExpression	& statbuf		4893503	0					
ANR	4893651	UnaryOperator	&		4893503	0					
ANR	4893652	Identifier	statbuf		4893503	1					
ANR	4893653	ReturnType	void		4893503	1					
ANR	4893654	Identifier	StatInfo :: stat_file		4893503	2					
ANR	4893655	ParameterList	int fd		4893503	3					
ANR	4893656	Parameter	int fd	165:21:4150:4155	4893503	0	True				
ANR	4893657	ParameterType	int		4893503	0					
ANR	4893658	Identifier	fd		4893503	1					
ANR	4893659	CFGEntryNode	ENTRY		4893503		True				
ANR	4893660	CFGExitNode	EXIT		4893503		True				
ANR	4893661	Symbol	set_condor_priv		4893503						
ANR	4893662	Symbol	statbuf . GetStatFn		4893503						
ANR	4893663	Symbol	si_error		4893503						
ANR	4893664	Symbol	D_FULLDEBUG		4893503						
ANR	4893665	Symbol	si_errno		4893503						
ANR	4893666	Symbol	ENOENT		4893503						
ANR	4893667	Symbol	EBADF		4893503						
ANR	4893668	Symbol	strerror		4893503						
ANR	4893669	Symbol	SINoFile		4893503						
ANR	4893670	Symbol	statbuf		4893503						
ANR	4893671	Symbol	statbuf . GetErrno		4893503						
ANR	4893672	Symbol	statbuf . Stat		4893503						
ANR	4893673	Symbol	EACCES		4893503						
ANR	4893674	Symbol	priv		4893503						
ANR	4893675	Symbol	& statbuf		4893503						
ANR	4893676	Symbol	statbuf . Retry		4893503						
ANR	4893677	Symbol	fd		4893503						
ANR	4893678	Symbol	status		4893503						
ANR	4893679	Function	StatInfo :: init	208:0:4926:6192							
ANR	4893680	FunctionDef	StatInfo :: init (StatWrapper * statbuf)		4893679	0					
ANR	4893681	CompoundStatement		210:0:4970:6192	4893679	0					
ANR	4893682	IfStatement	if ( NULL == statbuf )		4893679	0					
ANR	4893683	Condition	NULL == statbuf	212:6:4994:5008	4893679	0	True				
ANR	4893684	EqualityExpression	NULL == statbuf		4893679	0		==			
ANR	4893685	Identifier	NULL		4893679	0					
ANR	4893686	Identifier	statbuf		4893679	1					
ANR	4893687	CompoundStatement		4:1:42:42	4893679	1					
ANR	4893688	ExpressionStatement	si_error = SIFailure	214:2:5017:5037	4893679	0	True				
ANR	4893689	AssignmentExpression	si_error = SIFailure		4893679	0		=			
ANR	4893690	Identifier	si_error		4893679	0					
ANR	4893691	Identifier	SIFailure		4893679	1					
ANR	4893692	ExpressionStatement	access_time = 0	215:2:5041:5056	4893679	1	True				
ANR	4893693	AssignmentExpression	access_time = 0		4893679	0		=			
ANR	4893694	Identifier	access_time		4893679	0					
ANR	4893695	PrimaryExpression	0		4893679	1					
ANR	4893696	ExpressionStatement	modify_time = 0	216:2:5060:5075	4893679	2	True				
ANR	4893697	AssignmentExpression	modify_time = 0		4893679	0		=			
ANR	4893698	Identifier	modify_time		4893679	0					
ANR	4893699	PrimaryExpression	0		4893679	1					
ANR	4893700	ExpressionStatement	create_time = 0	217:2:5079:5094	4893679	3	True				
ANR	4893701	AssignmentExpression	create_time = 0		4893679	0		=			
ANR	4893702	Identifier	create_time		4893679	0					
ANR	4893703	PrimaryExpression	0		4893679	1					
ANR	4893704	ExpressionStatement	file_size = 0	218:2:5098:5111	4893679	4	True				
ANR	4893705	AssignmentExpression	file_size = 0		4893679	0		=			
ANR	4893706	Identifier	file_size		4893679	0					
ANR	4893707	PrimaryExpression	0		4893679	1					
ANR	4893708	ExpressionStatement	m_isDirectory = false	219:2:5115:5136	4893679	5	True				
ANR	4893709	AssignmentExpression	m_isDirectory = false		4893679	0		=			
ANR	4893710	Identifier	m_isDirectory		4893679	0					
ANR	4893711	Identifier	false		4893679	1					
ANR	4893712	ExpressionStatement	m_isExecutable = false	220:2:5140:5162	4893679	6	True				
ANR	4893713	AssignmentExpression	m_isExecutable = false		4893679	0		=			
ANR	4893714	Identifier	m_isExecutable		4893679	0					
ANR	4893715	Identifier	false		4893679	1					
ANR	4893716	ExpressionStatement	m_isSymlink = false	221:2:5166:5185	4893679	7	True				
ANR	4893717	AssignmentExpression	m_isSymlink = false		4893679	0		=			
ANR	4893718	Identifier	m_isSymlink		4893679	0					
ANR	4893719	Identifier	false		4893679	1					
ANR	4893720	ExpressionStatement	valid = false	222:2:5189:5202	4893679	8	True				
ANR	4893721	AssignmentExpression	valid = false		4893679	0		=			
ANR	4893722	Identifier	valid		4893679	0					
ANR	4893723	Identifier	false		4893679	1					
ANR	4893724	ElseStatement	else		4893679	0					
ANR	4893725	CompoundStatement		19:2:302:327	4893679	0					
ANR	4893726	IdentifierDeclStatement	const StatStructType * sb ;	227:2:5245:5269	4893679	0	True				
ANR	4893727	IdentifierDecl	* sb		4893679	0					
ANR	4893728	IdentifierDeclType	const StatStructType *		4893679	0					
ANR	4893729	Identifier	sb		4893679	1					
ANR	4893730	IdentifierDeclStatement	const StatStructType * lsb ;	228:2:5273:5298	4893679	1	True				
ANR	4893731	IdentifierDecl	* lsb		4893679	0					
ANR	4893732	IdentifierDeclType	const StatStructType *		4893679	0					
ANR	4893733	Identifier	lsb		4893679	1					
ANR	4893734	ExpressionStatement	sb = statbuf -> GetBuf ( StatWrapper :: STATOP_STAT )	230:2:5303:5351	4893679	2	True				
ANR	4893735	AssignmentExpression	sb = statbuf -> GetBuf ( StatWrapper :: STATOP_STAT )		4893679	0		=			
ANR	4893736	Identifier	sb		4893679	0					
ANR	4893737	CallExpression	statbuf -> GetBuf ( StatWrapper :: STATOP_STAT )		4893679	1					
ANR	4893738	Callee	statbuf -> GetBuf		4893679	0					
ANR	4893739	PtrMemberAccess	statbuf -> GetBuf		4893679	0					
ANR	4893740	Identifier	statbuf		4893679	0					
ANR	4893741	Identifier	GetBuf		4893679	1					
ANR	4893742	ArgumentList	StatWrapper :: STATOP_STAT		4893679	1					
ANR	4893743	Argument	StatWrapper :: STATOP_STAT		4893679	0					
ANR	4893744	Identifier	StatWrapper :: STATOP_STAT		4893679	0					
ANR	4893745	IfStatement	if ( ! sb )		4893679	3					
ANR	4893746	Condition	! sb	231:7:5360:5362	4893679	0	True				
ANR	4893747	UnaryOperationExpression	! sb		4893679	0					
ANR	4893748	UnaryOperator	!		4893679	0					
ANR	4893749	Identifier	sb		4893679	1					
ANR	4893750	CompoundStatement		22:13:395:395	4893679	1					
ANR	4893751	ExpressionStatement	sb = statbuf -> GetBuf ( StatWrapper :: STATOP_FSTAT )	232:3:5371:5420	4893679	0	True				
ANR	4893752	AssignmentExpression	sb = statbuf -> GetBuf ( StatWrapper :: STATOP_FSTAT )		4893679	0		=			
ANR	4893753	Identifier	sb		4893679	0					
ANR	4893754	CallExpression	statbuf -> GetBuf ( StatWrapper :: STATOP_FSTAT )		4893679	1					
ANR	4893755	Callee	statbuf -> GetBuf		4893679	0					
ANR	4893756	PtrMemberAccess	statbuf -> GetBuf		4893679	0					
ANR	4893757	Identifier	statbuf		4893679	0					
ANR	4893758	Identifier	GetBuf		4893679	1					
ANR	4893759	ArgumentList	StatWrapper :: STATOP_FSTAT		4893679	1					
ANR	4893760	Argument	StatWrapper :: STATOP_FSTAT		4893679	0					
ANR	4893761	Identifier	StatWrapper :: STATOP_FSTAT		4893679	0					
ANR	4893762	IfStatement	if ( ! sb )		4893679	4					
ANR	4893763	Condition	! sb	234:7:5433:5435	4893679	0	True				
ANR	4893764	UnaryOperationExpression	! sb		4893679	0					
ANR	4893765	UnaryOperator	!		4893679	0					
ANR	4893766	Identifier	sb		4893679	1					
ANR	4893767	CompoundStatement		25:13:468:468	4893679	1					
ANR	4893768	ExpressionStatement	sb = statbuf -> GetBuf ( StatWrapper :: STATOP_LAST )	235:3:5444:5492	4893679	0	True				
ANR	4893769	AssignmentExpression	sb = statbuf -> GetBuf ( StatWrapper :: STATOP_LAST )		4893679	0		=			
ANR	4893770	Identifier	sb		4893679	0					
ANR	4893771	CallExpression	statbuf -> GetBuf ( StatWrapper :: STATOP_LAST )		4893679	1					
ANR	4893772	Callee	statbuf -> GetBuf		4893679	0					
ANR	4893773	PtrMemberAccess	statbuf -> GetBuf		4893679	0					
ANR	4893774	Identifier	statbuf		4893679	0					
ANR	4893775	Identifier	GetBuf		4893679	1					
ANR	4893776	ArgumentList	StatWrapper :: STATOP_LAST		4893679	1					
ANR	4893777	Argument	StatWrapper :: STATOP_LAST		4893679	0					
ANR	4893778	Identifier	StatWrapper :: STATOP_LAST		4893679	0					
ANR	4893779	ElseStatement	else		4893679	0					
ANR	4893780	ExpressionStatement	m_isDirectory = ( ( _S_IFDIR & sb -> st_mode ) != 0 )	256:2:6080:6127	4893679	0	True				
ANR	4893781	AssignmentExpression	m_isDirectory = ( ( _S_IFDIR & sb -> st_mode ) != 0 )		4893679	0		=			
ANR	4893782	Identifier	m_isDirectory		4893679	0					
ANR	4893783	EqualityExpression	( _S_IFDIR & sb -> st_mode ) != 0		4893679	1		!=			
ANR	4893784	BitAndExpression	_S_IFDIR & sb -> st_mode		4893679	0		&			
ANR	4893785	Identifier	_S_IFDIR		4893679	0					
ANR	4893786	PtrMemberAccess	sb -> st_mode		4893679	1					
ANR	4893787	Identifier	sb		4893679	0					
ANR	4893788	Identifier	st_mode		4893679	1					
ANR	4893789	PrimaryExpression	0		4893679	1					
ANR	4893790	ExpressionStatement	ASSERT ( sb )	237:2:5500:5510	4893679	5	True				
ANR	4893791	CallExpression	ASSERT ( sb )		4893679	0					
ANR	4893792	Callee	ASSERT		4893679	0					
ANR	4893793	Identifier	ASSERT		4893679	0					
ANR	4893794	ArgumentList	sb		4893679	1					
ANR	4893795	Argument	sb		4893679	0					
ANR	4893796	Identifier	sb		4893679	0					
ANR	4893797	ExpressionStatement	lsb = statbuf -> GetBuf ( StatWrapper :: STATOP_LSTAT )	238:2:5514:5564	4893679	6	True				
ANR	4893798	AssignmentExpression	lsb = statbuf -> GetBuf ( StatWrapper :: STATOP_LSTAT )		4893679	0		=			
ANR	4893799	Identifier	lsb		4893679	0					
ANR	4893800	CallExpression	statbuf -> GetBuf ( StatWrapper :: STATOP_LSTAT )		4893679	1					
ANR	4893801	Callee	statbuf -> GetBuf		4893679	0					
ANR	4893802	PtrMemberAccess	statbuf -> GetBuf		4893679	0					
ANR	4893803	Identifier	statbuf		4893679	0					
ANR	4893804	Identifier	GetBuf		4893679	1					
ANR	4893805	ArgumentList	StatWrapper :: STATOP_LSTAT		4893679	1					
ANR	4893806	Argument	StatWrapper :: STATOP_LSTAT		4893679	0					
ANR	4893807	Identifier	StatWrapper :: STATOP_LSTAT		4893679	0					
ANR	4893808	ExpressionStatement	si_error = SIGood	240:2:5569:5586	4893679	7	True				
ANR	4893809	AssignmentExpression	si_error = SIGood		4893679	0		=			
ANR	4893810	Identifier	si_error		4893679	0					
ANR	4893811	Identifier	SIGood		4893679	1					
ANR	4893812	ExpressionStatement	access_time = sb -> st_atime	241:2:5590:5616	4893679	8	True				
ANR	4893813	AssignmentExpression	access_time = sb -> st_atime		4893679	0		=			
ANR	4893814	Identifier	access_time		4893679	0					
ANR	4893815	PtrMemberAccess	sb -> st_atime		4893679	1					
ANR	4893816	Identifier	sb		4893679	0					
ANR	4893817	Identifier	st_atime		4893679	1					
ANR	4893818	ExpressionStatement	create_time = sb -> st_ctime	242:2:5620:5646	4893679	9	True				
ANR	4893819	AssignmentExpression	create_time = sb -> st_ctime		4893679	0		=			
ANR	4893820	Identifier	create_time		4893679	0					
ANR	4893821	PtrMemberAccess	sb -> st_ctime		4893679	1					
ANR	4893822	Identifier	sb		4893679	0					
ANR	4893823	Identifier	st_ctime		4893679	1					
ANR	4893824	ExpressionStatement	modify_time = sb -> st_mtime	243:2:5650:5676	4893679	10	True				
ANR	4893825	AssignmentExpression	modify_time = sb -> st_mtime		4893679	0		=			
ANR	4893826	Identifier	modify_time		4893679	0					
ANR	4893827	PtrMemberAccess	sb -> st_mtime		4893679	1					
ANR	4893828	Identifier	sb		4893679	0					
ANR	4893829	Identifier	st_mtime		4893679	1					
ANR	4893830	ExpressionStatement	file_size = sb -> st_size	244:2:5680:5703	4893679	11	True				
ANR	4893831	AssignmentExpression	file_size = sb -> st_size		4893679	0		=			
ANR	4893832	Identifier	file_size		4893679	0					
ANR	4893833	PtrMemberAccess	sb -> st_size		4893679	1					
ANR	4893834	Identifier	sb		4893679	0					
ANR	4893835	Identifier	st_size		4893679	1					
ANR	4893836	ExpressionStatement	file_mode = sb -> st_mode	245:2:5707:5730	4893679	12	True				
ANR	4893837	AssignmentExpression	file_mode = sb -> st_mode		4893679	0		=			
ANR	4893838	Identifier	file_mode		4893679	0					
ANR	4893839	PtrMemberAccess	sb -> st_mode		4893679	1					
ANR	4893840	Identifier	sb		4893679	0					
ANR	4893841	Identifier	st_mode		4893679	1					
ANR	4893842	ExpressionStatement	valid = true	246:2:5734:5746	4893679	13	True				
ANR	4893843	AssignmentExpression	valid = true		4893679	0		=			
ANR	4893844	Identifier	valid		4893679	0					
ANR	4893845	Identifier	true		4893679	1					
ANR	4893846	Statement	if	247:2:5750:5751	4893679	14	True				
ANR	4893847	Statement	(	247:5:5753:5753	4893679	15	True				
ANR	4893848	Statement	!	247:6:5754:5754	4893679	16	True				
ANR	4893849	Statement	defined	247:8:5756:5762	4893679	17	True				
ANR	4893850	Statement	WIN32	247:16:5764:5768	4893679	18	True				
ANR	4893851	Statement	)	247:21:5769:5769	4893679	19	True				
ANR	4893852	ExpressionStatement	m_isDirectory = S_ISDIR ( sb -> st_mode )	248:2:5773:5809	4893679	20	True				
ANR	4893853	AssignmentExpression	m_isDirectory = S_ISDIR ( sb -> st_mode )		4893679	0		=			
ANR	4893854	Identifier	m_isDirectory		4893679	0					
ANR	4893855	CallExpression	S_ISDIR ( sb -> st_mode )		4893679	1					
ANR	4893856	Callee	S_ISDIR		4893679	0					
ANR	4893857	Identifier	S_ISDIR		4893679	0					
ANR	4893858	ArgumentList	sb -> st_mode		4893679	1					
ANR	4893859	Argument	sb -> st_mode		4893679	0					
ANR	4893860	PtrMemberAccess	sb -> st_mode		4893679	0					
ANR	4893861	Identifier	sb		4893679	0					
ANR	4893862	Identifier	st_mode		4893679	1					
ANR	4893863	ExpressionStatement	m_isExecutable = ( ( sb -> st_mode & ( S_IXUSR | S_IXGRP | S_IXOTH ) ) != 0 )	251:2:5913:5979	4893679	21	True				
ANR	4893864	AssignmentExpression	m_isExecutable = ( ( sb -> st_mode & ( S_IXUSR | S_IXGRP | S_IXOTH ) ) != 0 )		4893679	0		=			
ANR	4893865	Identifier	m_isExecutable		4893679	0					
ANR	4893866	EqualityExpression	( sb -> st_mode & ( S_IXUSR | S_IXGRP | S_IXOTH ) ) != 0		4893679	1		!=			
ANR	4893867	BitAndExpression	sb -> st_mode & ( S_IXUSR | S_IXGRP | S_IXOTH )		4893679	0		&			
ANR	4893868	PtrMemberAccess	sb -> st_mode		4893679	0					
ANR	4893869	Identifier	sb		4893679	0					
ANR	4893870	Identifier	st_mode		4893679	1					
ANR	4893871	InclusiveOrExpression	S_IXUSR | S_IXGRP | S_IXOTH		4893679	1		|			
ANR	4893872	Identifier	S_IXUSR		4893679	0					
ANR	4893873	InclusiveOrExpression	S_IXGRP | S_IXOTH		4893679	1		|			
ANR	4893874	Identifier	S_IXGRP		4893679	0					
ANR	4893875	Identifier	S_IXOTH		4893679	1					
ANR	4893876	PrimaryExpression	0		4893679	1					
ANR	4893877	ExpressionStatement	m_isSymlink = lsb && S_ISLNK ( lsb -> st_mode )	252:2:5983:6025	4893679	22	True				
ANR	4893878	AssignmentExpression	m_isSymlink = lsb && S_ISLNK ( lsb -> st_mode )		4893679	0		=			
ANR	4893879	Identifier	m_isSymlink		4893679	0					
ANR	4893880	AndExpression	lsb && S_ISLNK ( lsb -> st_mode )		4893679	1		&&			
ANR	4893881	Identifier	lsb		4893679	0					
ANR	4893882	CallExpression	S_ISLNK ( lsb -> st_mode )		4893679	1					
ANR	4893883	Callee	S_ISLNK		4893679	0					
ANR	4893884	Identifier	S_ISLNK		4893679	0					
ANR	4893885	ArgumentList	lsb -> st_mode		4893679	1					
ANR	4893886	Argument	lsb -> st_mode		4893679	0					
ANR	4893887	PtrMemberAccess	lsb -> st_mode		4893679	0					
ANR	4893888	Identifier	lsb		4893679	0					
ANR	4893889	Identifier	st_mode		4893679	1					
ANR	4893890	ExpressionStatement	owner = sb -> st_uid	253:2:6029:6047	4893679	23	True				
ANR	4893891	AssignmentExpression	owner = sb -> st_uid		4893679	0		=			
ANR	4893892	Identifier	owner		4893679	0					
ANR	4893893	PtrMemberAccess	sb -> st_uid		4893679	1					
ANR	4893894	Identifier	sb		4893679	0					
ANR	4893895	Identifier	st_uid		4893679	1					
ANR	4893896	ExpressionStatement	group = sb -> st_gid	254:2:6051:6069	4893679	24	True				
ANR	4893897	AssignmentExpression	group = sb -> st_gid		4893679	0		=			
ANR	4893898	Identifier	group		4893679	0					
ANR	4893899	PtrMemberAccess	sb -> st_gid		4893679	1					
ANR	4893900	Identifier	sb		4893679	0					
ANR	4893901	Identifier	st_gid		4893679	1					
ANR	4893902	ExpressionStatement	m_isExecutable = ( ( _S_IEXEC & sb -> st_mode ) != 0 )	257:2:6131:6179	4893679	25	True				
ANR	4893903	AssignmentExpression	m_isExecutable = ( ( _S_IEXEC & sb -> st_mode ) != 0 )		4893679	0		=			
ANR	4893904	Identifier	m_isExecutable		4893679	0					
ANR	4893905	EqualityExpression	( _S_IEXEC & sb -> st_mode ) != 0		4893679	1		!=			
ANR	4893906	BitAndExpression	_S_IEXEC & sb -> st_mode		4893679	0		&			
ANR	4893907	Identifier	_S_IEXEC		4893679	0					
ANR	4893908	PtrMemberAccess	sb -> st_mode		4893679	1					
ANR	4893909	Identifier	sb		4893679	0					
ANR	4893910	Identifier	st_mode		4893679	1					
ANR	4893911	PrimaryExpression	0		4893679	1					
ANR	4893912	Statement	endif	258:2:6183:6187	4893679	26	True				
ANR	4893913	ReturnType	void		4893679	1					
ANR	4893914	Identifier	StatInfo :: init		4893679	2					
ANR	4893915	ParameterList	StatWrapper * statbuf		4893679	3					
ANR	4893916	Parameter	StatWrapper * statbuf	209:16:4947:4966	4893679	0	True				
ANR	4893917	ParameterType	StatWrapper *		4893679	0					
ANR	4893918	Identifier	statbuf		4893679	1					
ANR	4893919	CFGEntryNode	ENTRY		4893679		True				
ANR	4893920	CFGExitNode	EXIT		4893679		True				
ANR	4893921	Symbol	m_isDirectory		4893679						
ANR	4893922	Symbol	sb -> st_size		4893679						
ANR	4893923	Symbol	StatWrapper :: STATOP_FSTAT		4893679						
ANR	4893924	Symbol	modify_time		4893679						
ANR	4893925	Symbol	m_isSymlink		4893679						
ANR	4893926	Symbol	StatWrapper :: STATOP_LSTAT		4893679						
ANR	4893927	Symbol	sb -> st_mtime		4893679						
ANR	4893928	Symbol	SIFailure		4893679						
ANR	4893929	Symbol	file_mode		4893679						
ANR	4893930	Symbol	sb -> st_gid		4893679						
ANR	4893931	Symbol	sb		4893679						
ANR	4893932	Symbol	valid		4893679						
ANR	4893933	Symbol	* sb		4893679						
ANR	4893934	Symbol	S_IXUSR		4893679						
ANR	4893935	Symbol	StatWrapper :: STATOP_STAT		4893679						
ANR	4893936	Symbol	sb -> st_ctime		4893679						
ANR	4893937	Symbol	_S_IEXEC		4893679						
ANR	4893938	Symbol	sb -> st_uid		4893679						
ANR	4893939	Symbol	statbuf -> GetBuf		4893679						
ANR	4893940	Symbol	S_ISLNK		4893679						
ANR	4893941	Symbol	group		4893679						
ANR	4893942	Symbol	owner		4893679						
ANR	4893943	Symbol	* statbuf		4893679						
ANR	4893944	Symbol	StatWrapper :: STATOP_LAST		4893679						
ANR	4893945	Symbol	sb -> st_mode		4893679						
ANR	4893946	Symbol	NULL		4893679						
ANR	4893947	Symbol	sb -> st_atime		4893679						
ANR	4893948	Symbol	create_time		4893679						
ANR	4893949	Symbol	S_IXGRP		4893679						
ANR	4893950	Symbol	lsb -> st_mode		4893679						
ANR	4893951	Symbol	* lsb		4893679						
ANR	4893952	Symbol	S_IXOTH		4893679						
ANR	4893953	Symbol	false		4893679						
ANR	4893954	Symbol	si_error		4893679						
ANR	4893955	Symbol	file_size		4893679						
ANR	4893956	Symbol	_S_IFDIR		4893679						
ANR	4893957	Symbol	statbuf		4893679						
ANR	4893958	Symbol	true		4893679						
ANR	4893959	Symbol	lsb		4893679						
ANR	4893960	Symbol	S_ISDIR		4893679						
ANR	4893961	Symbol	m_isExecutable		4893679						
ANR	4893962	Symbol	SIGood		4893679						
ANR	4893963	Symbol	access_time		4893679						
ANR	4893964	Function	StatInfo :: make_dirpath	263:0:6196:6645							
ANR	4893965	FunctionDef	StatInfo :: make_dirpath (const char * dir)		4893964	0					
ANR	4893966	CompoundStatement		265:0:6245:6645	4893964	0					
ANR	4893967	ExpressionStatement	ASSERT ( dir )	266:1:6248:6259	4893964	0	True				
ANR	4893968	CallExpression	ASSERT ( dir )		4893964	0					
ANR	4893969	Callee	ASSERT		4893964	0					
ANR	4893970	Identifier	ASSERT		4893964	0					
ANR	4893971	ArgumentList	dir		4893964	1					
ANR	4893972	Argument	dir		4893964	0					
ANR	4893973	Identifier	dir		4893964	0					
ANR	4893974	IdentifierDeclStatement	char * rval ;	268:1:6263:6273	4893964	1	True				
ANR	4893975	IdentifierDecl	* rval		4893964	0					
ANR	4893976	IdentifierDeclType	char *		4893964	0					
ANR	4893977	Identifier	rval		4893964	1					
ANR	4893978	IdentifierDeclStatement	int dirlen = strlen ( dir ) ;	269:1:6276:6300	4893964	2	True				
ANR	4893979	IdentifierDecl	dirlen = strlen ( dir )		4893964	0					
ANR	4893980	IdentifierDeclType	int		4893964	0					
ANR	4893981	Identifier	dirlen		4893964	1					
ANR	4893982	AssignmentExpression	dirlen = strlen ( dir )		4893964	2		=			
ANR	4893983	Identifier	dirlen		4893964	0					
ANR	4893984	CallExpression	strlen ( dir )		4893964	1					
ANR	4893985	Callee	strlen		4893964	0					
ANR	4893986	Identifier	strlen		4893964	0					
ANR	4893987	ArgumentList	dir		4893964	1					
ANR	4893988	Argument	dir		4893964	0					
ANR	4893989	Identifier	dir		4893964	0					
ANR	4893990	IfStatement	if ( dir [ dirlen - 1 ] == DIR_DELIM_CHAR )		4893964	3					
ANR	4893991	Condition	dir [ dirlen - 1 ] == DIR_DELIM_CHAR	270:5:6307:6339	4893964	0	True				
ANR	4893992	EqualityExpression	dir [ dirlen - 1 ] == DIR_DELIM_CHAR		4893964	0		==			
ANR	4893993	ArrayIndexing	dir [ dirlen - 1 ]		4893964	0					
ANR	4893994	Identifier	dir		4893964	0					
ANR	4893995	AdditiveExpression	dirlen - 1		4893964	1		-			
ANR	4893996	Identifier	dirlen		4893964	0					
ANR	4893997	PrimaryExpression	1		4893964	1					
ANR	4893998	Identifier	DIR_DELIM_CHAR		4893964	1					
ANR	4893999	CompoundStatement		6:41:97:97	4893964	1					
ANR	4894000	ExpressionStatement	rval = new char [ dirlen + 1 ]	273:2:6434:6461	4893964	0	True				
ANR	4894001	AssignmentExpression	rval = new char [ dirlen + 1 ]		4893964	0		=			
ANR	4894002	Identifier	rval		4893964	0					
ANR	4894003	AdditiveExpression	dirlen + 1		4893964	1		+			
ANR	4894004	Identifier	dirlen		4893964	0					
ANR	4894005	PrimaryExpression	1		4893964	1					
ANR	4894006	ExpressionStatement	"sprintf ( rval , ""%s"" , dir )"	274:2:6465:6491	4893964	1	True				
ANR	4894007	CallExpression	"sprintf ( rval , ""%s"" , dir )"		4893964	0					
ANR	4894008	Callee	sprintf		4893964	0					
ANR	4894009	Identifier	sprintf		4893964	0					
ANR	4894010	ArgumentList	rval		4893964	1					
ANR	4894011	Argument	rval		4893964	0					
ANR	4894012	Identifier	rval		4893964	0					
ANR	4894013	Argument	"""%s"""		4893964	1					
ANR	4894014	PrimaryExpression	"""%s"""		4893964	0					
ANR	4894015	Argument	dir		4893964	2					
ANR	4894016	Identifier	dir		4893964	0					
ANR	4894017	ElseStatement	else		4893964	0					
ANR	4894018	CompoundStatement		11:8:255:255	4893964	0					
ANR	4894019	ExpressionStatement	rval = new char [ dirlen + 2 ]	277:2:6551:6578	4893964	0	True				
ANR	4894020	AssignmentExpression	rval = new char [ dirlen + 2 ]		4893964	0		=			
ANR	4894021	Identifier	rval		4893964	0					
ANR	4894022	AdditiveExpression	dirlen + 2		4893964	1		+			
ANR	4894023	Identifier	dirlen		4893964	0					
ANR	4894024	PrimaryExpression	2		4893964	1					
ANR	4894025	ExpressionStatement	"sprintf ( rval , ""%s%c"" , dir , DIR_DELIM_CHAR )"	278:2:6582:6626	4893964	1	True				
ANR	4894026	CallExpression	"sprintf ( rval , ""%s%c"" , dir , DIR_DELIM_CHAR )"		4893964	0					
ANR	4894027	Callee	sprintf		4893964	0					
ANR	4894028	Identifier	sprintf		4893964	0					
ANR	4894029	ArgumentList	rval		4893964	1					
ANR	4894030	Argument	rval		4893964	0					
ANR	4894031	Identifier	rval		4893964	0					
ANR	4894032	Argument	"""%s%c"""		4893964	1					
ANR	4894033	PrimaryExpression	"""%s%c"""		4893964	0					
ANR	4894034	Argument	dir		4893964	2					
ANR	4894035	Identifier	dir		4893964	0					
ANR	4894036	Argument	DIR_DELIM_CHAR		4893964	3					
ANR	4894037	Identifier	DIR_DELIM_CHAR		4893964	0					
ANR	4894038	ReturnStatement	return rval ;	280:1:6632:6643	4893964	4	True				
ANR	4894039	Identifier	rval		4893964	0					
ANR	4894040	ReturnType	char *		4893964	1					
ANR	4894041	Identifier	StatInfo :: make_dirpath		4893964	2					
ANR	4894042	ParameterList	const char * dir		4893964	3					
ANR	4894043	Parameter	const char * dir	264:24:6226:6240	4893964	0	True				
ANR	4894044	ParameterType	const char *		4893964	0					
ANR	4894045	Identifier	dir		4893964	1					
ANR	4894046	CFGEntryNode	ENTRY		4893964		True				
ANR	4894047	CFGExitNode	EXIT		4893964		True				
ANR	4894048	Symbol	strlen		4893964						
ANR	4894049	Symbol	* dirlen		4893964						
ANR	4894050	Symbol	DIR_DELIM_CHAR		4893964						
ANR	4894051	Symbol	* dir		4893964						
ANR	4894052	Symbol	dirlen		4893964						
ANR	4894053	Symbol	rval		4893964						
ANR	4894054	Symbol	dir		4893964						
ANR	4894055	Function	StatInfo :: GetMode	284:0:6649:6814							
ANR	4894056	FunctionDef	StatInfo :: GetMode ()		4894055	0					
ANR	4894057	CompoundStatement		286:0:6683:6814	4894055	0					
ANR	4894058	IfStatement	if ( ! valid )		4894055	0					
ANR	4894059	Condition	! valid	287:4:6689:6694	4894055	0	True				
ANR	4894060	UnaryOperationExpression	! valid		4894055	0					
ANR	4894061	UnaryOperator	!		4894055	0					
ANR	4894062	Identifier	valid		4894055	1					
ANR	4894063	CompoundStatement		2:12:13:13	4894055	1					
ANR	4894064	ExpressionStatement	stat_file ( fullpath )	288:2:6701:6722	4894055	0	True				
ANR	4894065	CallExpression	stat_file ( fullpath )		4894055	0					
ANR	4894066	Callee	stat_file		4894055	0					
ANR	4894067	Identifier	stat_file		4894055	0					
ANR	4894068	ArgumentList	fullpath		4894055	1					
ANR	4894069	Argument	fullpath		4894055	0					
ANR	4894070	Identifier	fullpath		4894055	0					
ANR	4894071	IfStatement	if ( ! valid )		4894055	1					
ANR	4894072	Condition	! valid	290:4:6731:6736	4894055	0	True				
ANR	4894073	UnaryOperationExpression	! valid		4894055	0					
ANR	4894074	UnaryOperator	!		4894055	0					
ANR	4894075	Identifier	valid		4894055	1					
ANR	4894076	CompoundStatement		5:12:55:55	4894055	1					
ANR	4894077	ExpressionStatement	"EXCEPT ( ""Avoiding a use of an undefined mode"" )"	291:2:6743:6788	4894055	0	True				
ANR	4894078	CallExpression	"EXCEPT ( ""Avoiding a use of an undefined mode"" )"		4894055	0					
ANR	4894079	Callee	EXCEPT		4894055	0					
ANR	4894080	Identifier	EXCEPT		4894055	0					
ANR	4894081	ArgumentList	"""Avoiding a use of an undefined mode"""		4894055	1					
ANR	4894082	Argument	"""Avoiding a use of an undefined mode"""		4894055	0					
ANR	4894083	PrimaryExpression	"""Avoiding a use of an undefined mode"""		4894055	0					
ANR	4894084	ReturnStatement	return file_mode ;	294:1:6795:6811	4894055	2	True				
ANR	4894085	Identifier	file_mode		4894055	0					
ANR	4894086	ReturnType	mode_t		4894055	1					
ANR	4894087	Identifier	StatInfo :: GetMode		4894055	2					
ANR	4894088	ParameterList			4894055	3					
ANR	4894089	CFGEntryNode	ENTRY		4894055		True				
ANR	4894090	CFGExitNode	EXIT		4894055		True				
ANR	4894091	Symbol	valid		4894055						
ANR	4894092	Symbol	fullpath		4894055						
ANR	4894093	Symbol	file_mode		4894055						
ANR	4894094	Function	StatInfo :: GetOwner	298:0:6831:7037							
ANR	4894095	FunctionDef	StatInfo :: GetOwner ()		4894094	0					
ANR	4894096	CompoundStatement		300:0:6864:7037	4894094	0					
ANR	4894097	IfStatement	if ( ! valid )		4894094	0					
ANR	4894098	Condition	! valid	303:4:6960:6965	4894094	0	True				
ANR	4894099	UnaryOperationExpression	! valid		4894094	0					
ANR	4894100	UnaryOperator	!		4894094	0					
ANR	4894101	Identifier	valid		4894094	1					
ANR	4894102	CompoundStatement		4:12:103:103	4894094	1					
ANR	4894103	ExpressionStatement	"EXCEPT ( ""Avoiding a use of an undefined uid"" )"	304:2:6972:7016	4894094	0	True				
ANR	4894104	CallExpression	"EXCEPT ( ""Avoiding a use of an undefined uid"" )"		4894094	0					
ANR	4894105	Callee	EXCEPT		4894094	0					
ANR	4894106	Identifier	EXCEPT		4894094	0					
ANR	4894107	ArgumentList	"""Avoiding a use of an undefined uid"""		4894094	1					
ANR	4894108	Argument	"""Avoiding a use of an undefined uid"""		4894094	0					
ANR	4894109	PrimaryExpression	"""Avoiding a use of an undefined uid"""		4894094	0					
ANR	4894110	ReturnStatement	return owner ;	307:1:7023:7035	4894094	1	True				
ANR	4894111	Identifier	owner		4894094	0					
ANR	4894112	ReturnType	uid_t		4894094	1					
ANR	4894113	Identifier	StatInfo :: GetOwner		4894094	2					
ANR	4894114	ParameterList			4894094	3					
ANR	4894115	CFGEntryNode	ENTRY		4894094		True				
ANR	4894116	CFGExitNode	EXIT		4894094		True				
ANR	4894117	Symbol	valid		4894094						
ANR	4894118	Symbol	owner		4894094						
ANR	4894119	Function	StatInfo :: GetGroup	310:0:7040:7246							
ANR	4894120	FunctionDef	StatInfo :: GetGroup ()		4894119	0					
ANR	4894121	CompoundStatement		312:0:7073:7246	4894119	0					
ANR	4894122	IfStatement	if ( ! valid )		4894119	0					
ANR	4894123	Condition	! valid	315:4:7169:7174	4894119	0	True				
ANR	4894124	UnaryOperationExpression	! valid		4894119	0					
ANR	4894125	UnaryOperator	!		4894119	0					
ANR	4894126	Identifier	valid		4894119	1					
ANR	4894127	CompoundStatement		4:12:103:103	4894119	1					
ANR	4894128	ExpressionStatement	"EXCEPT ( ""Avoiding a use of an undefined gid"" )"	316:2:7181:7225	4894119	0	True				
ANR	4894129	CallExpression	"EXCEPT ( ""Avoiding a use of an undefined gid"" )"		4894119	0					
ANR	4894130	Callee	EXCEPT		4894119	0					
ANR	4894131	Identifier	EXCEPT		4894119	0					
ANR	4894132	ArgumentList	"""Avoiding a use of an undefined gid"""		4894119	1					
ANR	4894133	Argument	"""Avoiding a use of an undefined gid"""		4894119	0					
ANR	4894134	PrimaryExpression	"""Avoiding a use of an undefined gid"""		4894119	0					
ANR	4894135	ReturnStatement	return group ;	319:1:7232:7244	4894119	1	True				
ANR	4894136	Identifier	group		4894119	0					
ANR	4894137	ReturnType	gid_t		4894119	1					
ANR	4894138	Identifier	StatInfo :: GetGroup		4894119	2					
ANR	4894139	ParameterList			4894119	3					
ANR	4894140	CFGEntryNode	ENTRY		4894119		True				
ANR	4894141	CFGExitNode	EXIT		4894119		True				
ANR	4894142	Symbol	valid		4894119						
ANR	4894143	Symbol	group		4894119						
