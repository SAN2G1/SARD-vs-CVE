command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4710750	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_dprintf.cpp								
ANR	4710751	DeclStmt									
ANR	4710752	Decl							FILE	"FILE * ( int debug_flags , const char * mode , int force_lock )"	debug_lock
ANR	4710753	DeclStmt									
ANR	4710754	Decl							void	void ( int debug_flags )	debug_unlock
ANR	4710755	DeclStmt									
ANR	4710756	Decl							FILE	"FILE * ( struct DebugFileInfo * it , const char * mode , int force_lock , bool dont_panic )"	debug_lock_it
ANR	4710757	DeclStmt									
ANR	4710758	Decl							void	void ( struct DebugFileInfo * it )	debug_unlock_it
ANR	4710759	DeclStmt									
ANR	4710760	Decl							FILE	"FILE * ( struct DebugFileInfo * it , const char flags [ ] , bool dont_panic )"	open_debug_file
ANR	4710761	DeclStmt									
ANR	4710762	Decl							void	void ( struct DebugFileInfo * it )	debug_close_file
ANR	4710763	DeclStmt									
ANR	4710764	Decl							void	void ( void )	debug_close_all_files
ANR	4710765	DeclStmt									
ANR	4710766	Decl							void	void ( void )	debug_open_lock
ANR	4710767	DeclStmt									
ANR	4710768	Decl							void	void ( void )	debug_close_lock
ANR	4710769	DeclStmt									
ANR	4710770	Decl							FILE	"FILE * ( struct DebugFileInfo * it , bool dont_panic )"	preserve_log_file
ANR	4710771	DeclStmt									
ANR	4710772	Decl							void	"void ( int error_code , const char * msg )"	_condor_dprintf_exit
ANR	4710773	DeclStmt									
ANR	4710774	Decl							void	void ( const char * strflags )	_condor_set_debug_flags
ANR	4710775	DeclStmt									
ANR	4710776	Decl							void	"void ( int flags , const char * fmt , va_list args )"	_condor_save_dprintf_line
ANR	4710777	DeclStmt									
ANR	4710778	Decl							void	void ( void )	_condor_dprintf_saved_lines
ANR	4710779	ClassDef	saved_dprintf	72:0:2921:2998							
ANR	4710780	DeclStmt									
ANR	4710781	Decl							int	int	level
ANR	4710782	DeclStmt									
ANR	4710783	Decl							char	char *	line
ANR	4710784	DeclStmt									
ANR	4710785	Decl							struct saved_dprintf	struct saved_dprintf *	next
ANR	4710786	DeclStmt									
ANR	4710787	Decl							struct saved_dprintf	struct saved_dprintf *	saved_list
ANR	4710788	DeclStmt									
ANR	4710789	Decl							struct saved_dprintf	struct saved_dprintf *	saved_list_tail
ANR	4710790	DeclStmt									
ANR	4710791	Decl							extern DLL_IMPORT_MAGIC int	extern DLL_IMPORT_MAGIC int	errno
ANR	4710792	DeclStmt									
ANR	4710793	Decl							extern int	extern int	DebugFlags
ANR	4710794	DeclStmt									
ANR	4710795	Decl							extern param_functions	extern param_functions *	dprintf_param_funcs
ANR	4710796	DeclStmt									
ANR	4710797	Decl							extern int	extern int	_condor_dprintf_works
ANR	4710798	DeclStmt									
ANR	4710799	Decl							int	int	DebugShouldLockToAppend
ANR	4710800	DeclStmt									
ANR	4710801	Decl							int	int	DebugIsLocked
ANR	4710802	DeclStmt									
ANR	4710803	Decl							int	int	DebugLockDelay
ANR	4710804	DeclStmt									
ANR	4710805	Decl							time_t	time_t	DebugLockDelayPeriodStarted
ANR	4710806	DeclStmt									
ANR	4710807	Decl							std :: vector < DebugFileInfo >	std :: vector < DebugFileInfo > *	DebugLogs
ANR	4710808	DeclStmt									
ANR	4710809	Decl							time_t	time_t	DebugLastMod
ANR	4710810	DeclStmt									
ANR	4710811	Decl							int	int	DebugUseTimestamps
ANR	4710812	DeclStmt									
ANR	4710813	Decl							int	int	DebugContinueOnOpenFailure
ANR	4710814	DeclStmt									
ANR	4710815	Decl							char	char *	DebugLock
ANR	4710816	DeclStmt									
ANR	4710817	Decl							"int ( * ) ( char * * buf , int * bufpos , int * buflen )"	"int ( * ) ( char * * buf , int * bufpos , int * buflen )"	DebugId
ANR	4710818	DeclStmt									
ANR	4710819	Decl							int	int ( int mode )	SetSyscalls
ANR	4710820	DeclStmt									
ANR	4710821	Decl							int	int	LockFd
ANR	4710822	DeclStmt									
ANR	4710823	Decl							int	int	log_keep_open
ANR	4710824	DeclStmt									
ANR	4710825	Decl							int	int	DprintfBroken
ANR	4710826	DeclStmt									
ANR	4710827	Decl							int	int	DebugUnlockBroken
ANR	4710828	DeclStmt									
ANR	4710829	Decl							pthread_mutex_t	pthread_mutex_t	_condor_dprintf_critsec
ANR	4710830	DeclStmt									
ANR	4710831	Decl							CRITICAL_SECTION	CRITICAL_SECTION *	_condor_dprintf_critsec
ANR	4710832	DeclStmt									
ANR	4710833	Decl							int	"int ( int fd , LOCK_TYPE type , int do_block )"	lock_or_mutex_file
ANR	4710834	DeclStmt									
ANR	4710835	Decl							extern int	"extern int ( const char * format , va_list args )"	vprintf_length
ANR	4710836	DeclStmt									
ANR	4710837	Decl							HANDLE	HANDLE	debug_win32_mutex
ANR	4710838	DeclStmt									
ANR	4710839	Decl							int	int	use_kernel_mutex
ANR	4710840	DeclStmt									
ANR	4710841	Decl							int	int	dprintf_count
ANR	4710842	DeclStmt									
ANR	4710843	Decl							int	int	InDBX
ANR	4710844	Function	DebugFileInfo :: DebugFileInfo	172:0:6075:6346							
ANR	4710845	FunctionDef	DebugFileInfo :: DebugFileInfo (const DebugFileInfo & debugFileInfo)		4710844	0					
ANR	4710846	CompoundStatement		173:0:6140:6346	4710844	0					
ANR	4710847	ExpressionStatement	this -> debugFlags = debugFileInfo . debugFlags	174:1:6143:6186	4710844	0	True				
ANR	4710848	AssignmentExpression	this -> debugFlags = debugFileInfo . debugFlags		4710844	0		=			
ANR	4710849	PtrMemberAccess	this -> debugFlags		4710844	0					
ANR	4710850	Identifier	this		4710844	0					
ANR	4710851	Identifier	debugFlags		4710844	1					
ANR	4710852	MemberAccess	debugFileInfo . debugFlags		4710844	1					
ANR	4710853	Identifier	debugFileInfo		4710844	0					
ANR	4710854	Identifier	debugFlags		4710844	1					
ANR	4710855	ExpressionStatement	this -> logPath = std :: string ( debugFileInfo . logPath )	175:1:6189:6239	4710844	1	True				
ANR	4710856	AssignmentExpression	this -> logPath = std :: string ( debugFileInfo . logPath )		4710844	0		=			
ANR	4710857	PtrMemberAccess	this -> logPath		4710844	0					
ANR	4710858	Identifier	this		4710844	0					
ANR	4710859	Identifier	logPath		4710844	1					
ANR	4710860	CallExpression	std :: string ( debugFileInfo . logPath )		4710844	1					
ANR	4710861	Callee	std :: string		4710844	0					
ANR	4710862	Identifier	std :: string		4710844	0					
ANR	4710863	ArgumentList	debugFileInfo . logPath		4710844	1					
ANR	4710864	Argument	debugFileInfo . logPath		4710844	0					
ANR	4710865	MemberAccess	debugFileInfo . logPath		4710844	0					
ANR	4710866	Identifier	debugFileInfo		4710844	0					
ANR	4710867	Identifier	logPath		4710844	1					
ANR	4710868	ExpressionStatement	this -> maxLog = debugFileInfo . maxLog	176:1:6242:6277	4710844	2	True				
ANR	4710869	AssignmentExpression	this -> maxLog = debugFileInfo . maxLog		4710844	0		=			
ANR	4710870	PtrMemberAccess	this -> maxLog		4710844	0					
ANR	4710871	Identifier	this		4710844	0					
ANR	4710872	Identifier	maxLog		4710844	1					
ANR	4710873	MemberAccess	debugFileInfo . maxLog		4710844	1					
ANR	4710874	Identifier	debugFileInfo		4710844	0					
ANR	4710875	Identifier	maxLog		4710844	1					
ANR	4710876	ExpressionStatement	this -> maxLogNum = debugFileInfo . maxLogNum	177:1:6280:6321	4710844	3	True				
ANR	4710877	AssignmentExpression	this -> maxLogNum = debugFileInfo . maxLogNum		4710844	0		=			
ANR	4710878	PtrMemberAccess	this -> maxLogNum		4710844	0					
ANR	4710879	Identifier	this		4710844	0					
ANR	4710880	Identifier	maxLogNum		4710844	1					
ANR	4710881	MemberAccess	debugFileInfo . maxLogNum		4710844	1					
ANR	4710882	Identifier	debugFileInfo		4710844	0					
ANR	4710883	Identifier	maxLogNum		4710844	1					
ANR	4710884	ExpressionStatement	this -> debugFP = NULL	178:1:6324:6344	4710844	4	True				
ANR	4710885	AssignmentExpression	this -> debugFP = NULL		4710844	0		=			
ANR	4710886	PtrMemberAccess	this -> debugFP		4710844	0					
ANR	4710887	Identifier	this		4710844	0					
ANR	4710888	Identifier	debugFP		4710844	1					
ANR	4710889	Identifier	NULL		4710844	1					
ANR	4710890	Identifier	DebugFileInfo :: DebugFileInfo		4710844	1					
ANR	4710891	ParameterList	const DebugFileInfo & debugFileInfo		4710844	2					
ANR	4710892	Parameter	const DebugFileInfo & debugFileInfo	172:29:6104:6137	4710844	0	True				
ANR	4710893	ParameterType	const DebugFileInfo &		4710844	0					
ANR	4710894	Identifier	debugFileInfo		4710844	1					
ANR	4710895	CFGEntryNode	ENTRY		4710844		True				
ANR	4710896	CFGExitNode	EXIT		4710844		True				
ANR	4710897	Symbol	debugFileInfo . maxLog		4710844						
ANR	4710898	Symbol	debugFileInfo . debugFlags		4710844						
ANR	4710899	Symbol	debugFileInfo . logPath		4710844						
ANR	4710900	Symbol	NULL		4710844						
ANR	4710901	Symbol	this		4710844						
ANR	4710902	Symbol	this -> debugFlags		4710844						
ANR	4710903	Symbol	this -> maxLog		4710844						
ANR	4710904	Symbol	debugFileInfo . maxLogNum		4710844						
ANR	4710905	Symbol	* this		4710844						
ANR	4710906	Symbol	std :: string		4710844						
ANR	4710907	Symbol	debugFileInfo		4710844						
ANR	4710908	Symbol	this -> logPath		4710844						
ANR	4710909	Symbol	this -> maxLogNum		4710844						
ANR	4710910	Symbol	this -> debugFP		4710844						
ANR	4710911	Function	DebugFileInfo :: ~DebugFileInfo	181:0:6349:6439							
ANR	4710912	FunctionDef	DebugFileInfo :: ~DebugFileInfo ()		4710911	0					
ANR	4710913	CompoundStatement		182:0:6381:6439	4710911	0					
ANR	4710914	IfStatement	if ( debugFP )		4710911	0					
ANR	4710915	Condition	debugFP	183:4:6387:6393	4710911	0	True				
ANR	4710916	Identifier	debugFP		4710911	0					
ANR	4710917	CompoundStatement		3:1:15:15	4710911	1					
ANR	4710918	ExpressionStatement	fclose ( debugFP )	185:2:6401:6416	4710911	0	True				
ANR	4710919	CallExpression	fclose ( debugFP )		4710911	0					
ANR	4710920	Callee	fclose		4710911	0					
ANR	4710921	Identifier	fclose		4710911	0					
ANR	4710922	ArgumentList	debugFP		4710911	1					
ANR	4710923	Argument	debugFP		4710911	0					
ANR	4710924	Identifier	debugFP		4710911	0					
ANR	4710925	ExpressionStatement	debugFP = NULL	186:2:6420:6434	4710911	1	True				
ANR	4710926	AssignmentExpression	debugFP = NULL		4710911	0		=			
ANR	4710927	Identifier	debugFP		4710911	0					
ANR	4710928	Identifier	NULL		4710911	1					
ANR	4710929	Identifier	DebugFileInfo :: ~DebugFileInfo		4710911	1					
ANR	4710930	ParameterList			4710911	2					
ANR	4710931	CFGEntryNode	ENTRY		4710911		True				
ANR	4710932	CFGExitNode	EXIT		4710911		True				
ANR	4710933	Symbol	NULL		4710911						
ANR	4710934	Symbol	debugFP		4710911						
ANR	4710935	Function	DebugFileInfo :: MatchesFlags	190:0:6442:6623							
ANR	4710936	FunctionDef	DebugFileInfo :: MatchesFlags (int flags)		4710935	0					
ANR	4710937	CompoundStatement		191:0:6492:6623	4710935	0					
ANR	4710938	IfStatement	if ( ! flags )		4710935	0					
ANR	4710939	Condition	! flags	192:6:6500:6506	4710935	0	True				
ANR	4710940	UnaryOperationExpression	! flags		4710935	0					
ANR	4710941	UnaryOperator	!		4710935	0					
ANR	4710942	Identifier	flags		4710935	1					
ANR	4710943	ReturnStatement	return true ;	192:15:6509:6520	4710935	1	True				
ANR	4710944	Identifier	true		4710935	0					
ANR	4710945	IfStatement	if ( ! this -> debugFlags )		4710935	1					
ANR	4710946	Condition	! this -> debugFlags	193:6:6528:6545	4710935	0	True				
ANR	4710947	UnaryOperationExpression	! this -> debugFlags		4710935	0					
ANR	4710948	UnaryOperator	!		4710935	0					
ANR	4710949	PtrMemberAccess	this -> debugFlags		4710935	1					
ANR	4710950	Identifier	this		4710935	0					
ANR	4710951	Identifier	debugFlags		4710935	1					
ANR	4710952	ReturnStatement	return ( DebugFlags & flags ) != 0 ;	193:26:6548:6580	4710935	1	True				
ANR	4710953	EqualityExpression	( DebugFlags & flags ) != 0		4710935	0		!=			
ANR	4710954	BitAndExpression	DebugFlags & flags		4710935	0		&			
ANR	4710955	Identifier	DebugFlags		4710935	0					
ANR	4710956	Identifier	flags		4710935	1					
ANR	4710957	PrimaryExpression	0		4710935	1					
ANR	4710958	ReturnStatement	return ( this -> debugFlags & flags ) != 0 ;	194:1:6583:6621	4710935	2	True				
ANR	4710959	EqualityExpression	( this -> debugFlags & flags ) != 0		4710935	0		!=			
ANR	4710960	BitAndExpression	this -> debugFlags & flags		4710935	0		&			
ANR	4710961	PtrMemberAccess	this -> debugFlags		4710935	0					
ANR	4710962	Identifier	this		4710935	0					
ANR	4710963	Identifier	debugFlags		4710935	1					
ANR	4710964	Identifier	flags		4710935	1					
ANR	4710965	PrimaryExpression	0		4710935	1					
ANR	4710966	ReturnType	bool		4710935	1					
ANR	4710967	Identifier	DebugFileInfo :: MatchesFlags		4710935	2					
ANR	4710968	ParameterList	int flags		4710935	3					
ANR	4710969	Parameter	int flags	190:33:6475:6483	4710935	0	True				
ANR	4710970	ParameterType	int		4710935	0					
ANR	4710971	Identifier	flags		4710935	1					
ANR	4710972	CFGEntryNode	ENTRY		4710935		True				
ANR	4710973	CFGExitNode	EXIT		4710935		True				
ANR	4710974	Symbol	* this		4710935						
ANR	4710975	Symbol	flags		4710935						
ANR	4710976	Symbol	true		4710935						
ANR	4710977	Symbol	this		4710935						
ANR	4710978	Symbol	this -> debugFlags		4710935						
ANR	4710979	Symbol	DebugFlags		4710935						
ANR	4710980	Function	formatTimeHeader	197:0:6626:7164							
ANR	4710981	FunctionDef	formatTimeHeader (struct tm * tm)		4710980	0					
ANR	4710982	CompoundStatement		197:45:6671:7164	4710980	0					
ANR	4710983	Statement	static	198:1:6674:6679	4710980	0	True				
ANR	4710984	IdentifierDeclStatement	char timebuf [ 80 ] ;	198:8:6681:6697	4710980	1	True				
ANR	4710985	IdentifierDecl	timebuf [ 80 ]		4710980	0					
ANR	4710986	IdentifierDeclType	char [ 80 ]		4710980	0					
ANR	4710987	Identifier	timebuf		4710980	1					
ANR	4710988	PrimaryExpression	80		4710980	2					
ANR	4710989	Statement	static	199:1:6700:6705	4710980	2	True				
ANR	4710990	IdentifierDeclStatement	char * timeFormat = 0 ;	199:8:6707:6727	4710980	3	True				
ANR	4710991	IdentifierDecl	* timeFormat = 0		4710980	0					
ANR	4710992	IdentifierDeclType	char *		4710980	0					
ANR	4710993	Identifier	timeFormat		4710980	1					
ANR	4710994	AssignmentExpression	* timeFormat = 0		4710980	2		=			
ANR	4710995	Identifier	timeFormat		4710980	0					
ANR	4710996	PrimaryExpression	0		4710980	1					
ANR	4710997	Statement	static	200:1:6730:6735	4710980	4	True				
ANR	4710998	IdentifierDeclStatement	int firstTime = 1 ;	200:8:6737:6754	4710980	5	True				
ANR	4710999	IdentifierDecl	firstTime = 1		4710980	0					
ANR	4711000	IdentifierDeclType	int		4710980	0					
ANR	4711001	Identifier	firstTime		4710980	1					
ANR	4711002	AssignmentExpression	firstTime = 1		4710980	2		=			
ANR	4711003	Identifier	firstTime		4710980	0					
ANR	4711004	PrimaryExpression	1		4710980	1					
ANR	4711005	IfStatement	if ( firstTime )		4710980	6					
ANR	4711006	Condition	firstTime	202:5:6762:6770	4710980	0	True				
ANR	4711007	Identifier	firstTime		4710980	0					
ANR	4711008	CompoundStatement		6:16:101:101	4710980	1					
ANR	4711009	ExpressionStatement	firstTime = 0	203:2:6777:6790	4710980	0	True				
ANR	4711010	AssignmentExpression	firstTime = 0		4710980	0		=			
ANR	4711011	Identifier	firstTime		4710980	0					
ANR	4711012	PrimaryExpression	0		4710980	1					
ANR	4711013	ExpressionStatement	"timeFormat = dprintf_param_funcs -> param ( ""DEBUG_TIME_FORMAT"" )"	204:2:6794:6856	4710980	1	True				
ANR	4711014	AssignmentExpression	"timeFormat = dprintf_param_funcs -> param ( ""DEBUG_TIME_FORMAT"" )"		4710980	0		=			
ANR	4711015	Identifier	timeFormat		4710980	0					
ANR	4711016	CallExpression	"dprintf_param_funcs -> param ( ""DEBUG_TIME_FORMAT"" )"		4710980	1					
ANR	4711017	Callee	dprintf_param_funcs -> param		4710980	0					
ANR	4711018	PtrMemberAccess	dprintf_param_funcs -> param		4710980	0					
ANR	4711019	Identifier	dprintf_param_funcs		4710980	0					
ANR	4711020	Identifier	param		4710980	1					
ANR	4711021	ArgumentList	"""DEBUG_TIME_FORMAT"""		4710980	1					
ANR	4711022	Argument	"""DEBUG_TIME_FORMAT"""		4710980	0					
ANR	4711023	PrimaryExpression	"""DEBUG_TIME_FORMAT"""		4710980	0					
ANR	4711024	IfStatement	if ( ! timeFormat )		4710980	2					
ANR	4711025	Condition	! timeFormat	205:6:6864:6874	4710980	0	True				
ANR	4711026	UnaryOperationExpression	! timeFormat		4710980	0					
ANR	4711027	UnaryOperator	!		4710980	0					
ANR	4711028	Identifier	timeFormat		4710980	1					
ANR	4711029	CompoundStatement		9:19:205:205	4710980	1					
ANR	4711030	ExpressionStatement	"timeFormat = strdup ( ""%m/%d/%y %H:%M:%S "" )"	206:3:6882:6923	4710980	0	True				
ANR	4711031	AssignmentExpression	"timeFormat = strdup ( ""%m/%d/%y %H:%M:%S "" )"		4710980	0		=			
ANR	4711032	Identifier	timeFormat		4710980	0					
ANR	4711033	CallExpression	"strdup ( ""%m/%d/%y %H:%M:%S "" )"		4710980	1					
ANR	4711034	Callee	strdup		4710980	0					
ANR	4711035	Identifier	strdup		4710980	0					
ANR	4711036	ArgumentList	"""%m/%d/%y %H:%M:%S """		4710980	1					
ANR	4711037	Argument	"""%m/%d/%y %H:%M:%S """		4710980	0					
ANR	4711038	PrimaryExpression	"""%m/%d/%y %H:%M:%S """		4710980	0					
ANR	4711039	ElseStatement	else		4710980	0					
ANR	4711040	CompoundStatement		13:3:295:302	4710980	0					
ANR	4711041	IdentifierDeclStatement	char * p ;	209:3:6967:6974	4710980	0	True				
ANR	4711042	IdentifierDecl	* p		4710980	0					
ANR	4711043	IdentifierDeclType	char *		4710980	0					
ANR	4711044	Identifier	p		4710980	1					
ANR	4711045	IfStatement	"if ( * timeFormat == '""' )"		4710980	1					
ANR	4711046	Condition	"* timeFormat == '""'"	210:7:6983:7000	4710980	0	True				
ANR	4711047	EqualityExpression	"* timeFormat == '""'"		4710980	0		==			
ANR	4711048	UnaryOperationExpression	* timeFormat		4710980	0					
ANR	4711049	UnaryOperator	*		4710980	0					
ANR	4711050	Identifier	timeFormat		4710980	1					
ANR	4711051	PrimaryExpression	"'""'"		4710980	1					
ANR	4711052	CompoundStatement		14:27:331:331	4710980	1					
ANR	4711053	ExpressionStatement	timeFormat ++	211:4:7009:7021	4710980	0	True				
ANR	4711054	PostIncDecOperationExpression	timeFormat ++		4710980	0					
ANR	4711055	Identifier	timeFormat		4710980	0					
ANR	4711056	IncDec	++		4710980	1					
ANR	4711057	ExpressionStatement	p = timeFormat	213:3:7031:7045	4710980	2	True				
ANR	4711058	AssignmentExpression	p = timeFormat		4710980	0		=			
ANR	4711059	Identifier	p		4710980	0					
ANR	4711060	Identifier	timeFormat		4710980	1					
ANR	4711061	WhileStatement	while ( * p ++ )		4710980	3					
ANR	4711062	Condition	* p ++	214:10:7057:7060	4710980	0	True				
ANR	4711063	UnaryOperationExpression	* p ++		4710980	0					
ANR	4711064	UnaryOperator	*		4710980	0					
ANR	4711065	PostIncDecOperationExpression	p ++		4710980	1					
ANR	4711066	Identifier	p		4710980	0					
ANR	4711067	IncDec	++		4710980	1					
ANR	4711068	CompoundStatement		18:16:391:391	4710980	1					
ANR	4711069	IfStatement	"if ( * p == '""' )"		4710980	0					
ANR	4711070	Condition	"* p == '""'"	215:8:7073:7081	4710980	0	True				
ANR	4711071	EqualityExpression	"* p == '""'"		4710980	0		==			
ANR	4711072	UnaryOperationExpression	* p		4710980	0					
ANR	4711073	UnaryOperator	*		4710980	0					
ANR	4711074	Identifier	p		4710980	1					
ANR	4711075	PrimaryExpression	"'""'"		4710980	1					
ANR	4711076	ExpressionStatement	* p = '\\0'	215:19:7084:7093	4710980	1	True				
ANR	4711077	AssignmentExpression	* p = '\\0'		4710980	0		=			
ANR	4711078	UnaryOperationExpression	* p		4710980	0					
ANR	4711079	UnaryOperator	*		4710980	0					
ANR	4711080	Identifier	p		4710980	1					
ANR	4711081	PrimaryExpression	'\\0'		4710980	1					
ANR	4711082	ExpressionStatement	"strftime ( timebuf , 80 , timeFormat , tm )"	219:1:7108:7145	4710980	7	True				
ANR	4711083	CallExpression	"strftime ( timebuf , 80 , timeFormat , tm )"		4710980	0					
ANR	4711084	Callee	strftime		4710980	0					
ANR	4711085	Identifier	strftime		4710980	0					
ANR	4711086	ArgumentList	timebuf		4710980	1					
ANR	4711087	Argument	timebuf		4710980	0					
ANR	4711088	Identifier	timebuf		4710980	0					
ANR	4711089	Argument	80		4710980	1					
ANR	4711090	PrimaryExpression	80		4710980	0					
ANR	4711091	Argument	timeFormat		4710980	2					
ANR	4711092	Identifier	timeFormat		4710980	0					
ANR	4711093	Argument	tm		4710980	3					
ANR	4711094	Identifier	tm		4710980	0					
ANR	4711095	ReturnStatement	return timebuf ;	220:1:7148:7162	4710980	8	True				
ANR	4711096	Identifier	timebuf		4710980	0					
ANR	4711097	ReturnType	static char *		4710980	1					
ANR	4711098	Identifier	formatTimeHeader		4710980	2					
ANR	4711099	ParameterList	struct tm * tm		4710980	3					
ANR	4711100	Parameter	struct tm * tm	197:30:6656:6668	4710980	0	True				
ANR	4711101	ParameterType	struct tm *		4710980	0					
ANR	4711102	Identifier	tm		4710980	1					
ANR	4711103	CFGEntryNode	ENTRY		4710980		True				
ANR	4711104	CFGExitNode	EXIT		4710980		True				
ANR	4711105	Symbol	firstTime		4710980						
ANR	4711106	Symbol	p		4710980						
ANR	4711107	Symbol	* timeFormat		4710980						
ANR	4711108	Symbol	timeFormat		4710980						
ANR	4711109	Symbol	* p ++		4710980						
ANR	4711110	Symbol	tm		4710980						
ANR	4711111	Symbol	timebuf		4710980						
ANR	4711112	Symbol	dprintf_param_funcs -> param		4710980						
ANR	4711113	Symbol	* p		4710980						
ANR	4711114	Symbol	strdup		4710980						
ANR	4711115	Symbol	dprintf_param_funcs		4710980						
ANR	4711116	Symbol	* dprintf_param_funcs		4710980						
ANR	4711117	Function	_condor_dfprintf_va	238:0:7866:10917							
ANR	4711118	FunctionDef	"_condor_dfprintf_va (int flags , int mask_flags , time_t clock_now , struct tm * tm , FILE * fp , const char * fmt , va_list args)"		4711117	0					
ANR	4711119	CompoundStatement		240:0:8001:10917	4711117	0					
ANR	4711120	Statement	static	242:1:8059:8064	4711117	0	True				
ANR	4711121	IdentifierDeclStatement	char * buf = NULL ;	242:8:8066:8082	4711117	1	True				
ANR	4711122	IdentifierDecl	* buf = NULL		4711117	0					
ANR	4711123	IdentifierDeclType	char *		4711117	0					
ANR	4711124	Identifier	buf		4711117	1					
ANR	4711125	AssignmentExpression	* buf = NULL		4711117	2		=			
ANR	4711126	Identifier	NULL		4711117	0					
ANR	4711127	Identifier	NULL		4711117	1					
ANR	4711128	Statement	static	243:1:8085:8090	4711117	2	True				
ANR	4711129	IdentifierDeclStatement	int buflen = 0 ;	243:8:8092:8106	4711117	3	True				
ANR	4711130	IdentifierDecl	buflen = 0		4711117	0					
ANR	4711131	IdentifierDeclType	int		4711117	0					
ANR	4711132	Identifier	buflen		4711117	1					
ANR	4711133	AssignmentExpression	buflen = 0		4711117	2		=			
ANR	4711134	Identifier	buflen		4711117	0					
ANR	4711135	PrimaryExpression	0		4711117	1					
ANR	4711136	IdentifierDeclStatement	int bufpos = 0 ;	245:1:8110:8124	4711117	4	True				
ANR	4711137	IdentifierDecl	bufpos = 0		4711117	0					
ANR	4711138	IdentifierDeclType	int		4711117	0					
ANR	4711139	Identifier	bufpos		4711117	1					
ANR	4711140	AssignmentExpression	bufpos = 0		4711117	2		=			
ANR	4711141	Identifier	bufpos		4711117	0					
ANR	4711142	PrimaryExpression	0		4711117	1					
ANR	4711143	IdentifierDeclStatement	int rc = 0 ;	246:1:8127:8137	4711117	5	True				
ANR	4711144	IdentifierDecl	rc = 0		4711117	0					
ANR	4711145	IdentifierDeclType	int		4711117	0					
ANR	4711146	Identifier	rc		4711117	1					
ANR	4711147	AssignmentExpression	rc = 0		4711117	2		=			
ANR	4711148	Identifier	rc		4711117	0					
ANR	4711149	PrimaryExpression	0		4711117	1					
ANR	4711150	IdentifierDeclStatement	int sprintf_errno = 0 ;	247:1:8140:8161	4711117	6	True				
ANR	4711151	IdentifierDecl	sprintf_errno = 0		4711117	0					
ANR	4711152	IdentifierDeclType	int		4711117	0					
ANR	4711153	Identifier	sprintf_errno		4711117	1					
ANR	4711154	AssignmentExpression	sprintf_errno = 0		4711117	2		=			
ANR	4711155	Identifier	sprintf_errno		4711117	0					
ANR	4711156	PrimaryExpression	0		4711117	1					
ANR	4711157	IdentifierDeclStatement	int my_pid ;	248:1:8164:8174	4711117	7	True				
ANR	4711158	IdentifierDecl	my_pid		4711117	0					
ANR	4711159	IdentifierDeclType	int		4711117	0					
ANR	4711160	Identifier	my_pid		4711117	1					
ANR	4711161	IdentifierDeclStatement	int my_tid ;	249:1:8177:8187	4711117	8	True				
ANR	4711162	IdentifierDecl	my_tid		4711117	0					
ANR	4711163	IdentifierDeclType	int		4711117	0					
ANR	4711164	Identifier	my_tid		4711117	1					
ANR	4711165	IdentifierDeclStatement	int start_pos ;	250:1:8190:8203	4711117	9	True				
ANR	4711166	IdentifierDecl	start_pos		4711117	0					
ANR	4711167	IdentifierDeclType	int		4711117	0					
ANR	4711168	Identifier	start_pos		4711117	1					
ANR	4711169	IdentifierDeclStatement	FILE * local_fp ;	251:1:8206:8220	4711117	10	True				
ANR	4711170	IdentifierDecl	* local_fp		4711117	0					
ANR	4711171	IdentifierDeclType	FILE *		4711117	0					
ANR	4711172	Identifier	local_fp		4711117	1					
ANR	4711173	IdentifierDeclStatement	int fopen_rc = 1 ;	252:1:8223:8239	4711117	11	True				
ANR	4711174	IdentifierDecl	fopen_rc = 1		4711117	0					
ANR	4711175	IdentifierDeclType	int		4711117	0					
ANR	4711176	Identifier	fopen_rc		4711117	1					
ANR	4711177	AssignmentExpression	fopen_rc = 1		4711117	2		=			
ANR	4711178	Identifier	fopen_rc		4711117	0					
ANR	4711179	PrimaryExpression	1		4711117	1					
ANR	4711180	IfStatement	if ( ( ( mask_flags | flags ) & D_NOHEADER ) == 0 )		4711117	12					
ANR	4711181	Condition	( ( mask_flags | flags ) & D_NOHEADER ) == 0	255:5:8309:8346	4711117	0	True				
ANR	4711182	EqualityExpression	( ( mask_flags | flags ) & D_NOHEADER ) == 0		4711117	0		==			
ANR	4711183	BitAndExpression	( mask_flags | flags ) & D_NOHEADER		4711117	0		&			
ANR	4711184	InclusiveOrExpression	mask_flags | flags		4711117	0		|			
ANR	4711185	Identifier	mask_flags		4711117	0					
ANR	4711186	Identifier	flags		4711117	1					
ANR	4711187	Identifier	D_NOHEADER		4711117	1					
ANR	4711188	PrimaryExpression	0		4711117	1					
ANR	4711189	CompoundStatement		16:46:348:348	4711117	1					
ANR	4711190	IfStatement	if ( DebugUseTimestamps )		4711117	0					
ANR	4711191	Condition	DebugUseTimestamps	256:7:8359:8376	4711117	0	True				
ANR	4711192	Identifier	DebugUseTimestamps		4711117	0					
ANR	4711193	CompoundStatement		17:28:378:378	4711117	1					
ANR	4711194	ExpressionStatement	"rc = sprintf_realloc ( & buf , & bufpos , & buflen , ""(%d) "" , ( int ) clock_now )"	261:3:8599:8670	4711117	0	True				
ANR	4711195	AssignmentExpression	"rc = sprintf_realloc ( & buf , & bufpos , & buflen , ""(%d) "" , ( int ) clock_now )"		4711117	0		=			
ANR	4711196	Identifier	rc		4711117	0					
ANR	4711197	CallExpression	"sprintf_realloc ( & buf , & bufpos , & buflen , ""(%d) "" , ( int ) clock_now )"		4711117	1					
ANR	4711198	Callee	sprintf_realloc		4711117	0					
ANR	4711199	Identifier	sprintf_realloc		4711117	0					
ANR	4711200	ArgumentList	& buf		4711117	1					
ANR	4711201	Argument	& buf		4711117	0					
ANR	4711202	UnaryOperationExpression	& buf		4711117	0					
ANR	4711203	UnaryOperator	&		4711117	0					
ANR	4711204	Identifier	buf		4711117	1					
ANR	4711205	Argument	& bufpos		4711117	1					
ANR	4711206	UnaryOperationExpression	& bufpos		4711117	0					
ANR	4711207	UnaryOperator	&		4711117	0					
ANR	4711208	Identifier	bufpos		4711117	1					
ANR	4711209	Argument	& buflen		4711117	2					
ANR	4711210	UnaryOperationExpression	& buflen		4711117	0					
ANR	4711211	UnaryOperator	&		4711117	0					
ANR	4711212	Identifier	buflen		4711117	1					
ANR	4711213	Argument	"""(%d) """		4711117	3					
ANR	4711214	PrimaryExpression	"""(%d) """		4711117	0					
ANR	4711215	Argument	( int ) clock_now		4711117	4					
ANR	4711216	CastExpression	( int ) clock_now		4711117	0					
ANR	4711217	CastTarget	int		4711117	0					
ANR	4711218	Identifier	clock_now		4711117	1					
ANR	4711219	IfStatement	if ( rc < 0 )		4711117	1					
ANR	4711220	Condition	rc < 0	262:7:8679:8684	4711117	0	True				
ANR	4711221	RelationalExpression	rc < 0		4711117	0		<			
ANR	4711222	Identifier	rc		4711117	0					
ANR	4711223	PrimaryExpression	0		4711117	1					
ANR	4711224	CompoundStatement		23:16:686:686	4711117	1					
ANR	4711225	ExpressionStatement	sprintf_errno = errno	263:4:8694:8715	4711117	0	True				
ANR	4711226	AssignmentExpression	sprintf_errno = errno		4711117	0		=			
ANR	4711227	Identifier	sprintf_errno		4711117	0					
ANR	4711228	Identifier	errno		4711117	1					
ANR	4711229	ElseStatement	else		4711117	0					
ANR	4711230	CompoundStatement		26:9:729:729	4711117	0					
ANR	4711231	ExpressionStatement	"rc = sprintf_realloc ( & buf , & bufpos , & buflen , ""%s"" , formatTimeHeader ( tm ) )"	266:3:8736:8809	4711117	0	True				
ANR	4711232	AssignmentExpression	"rc = sprintf_realloc ( & buf , & bufpos , & buflen , ""%s"" , formatTimeHeader ( tm ) )"		4711117	0		=			
ANR	4711233	Identifier	rc		4711117	0					
ANR	4711234	CallExpression	"sprintf_realloc ( & buf , & bufpos , & buflen , ""%s"" , formatTimeHeader ( tm ) )"		4711117	1					
ANR	4711235	Callee	sprintf_realloc		4711117	0					
ANR	4711236	Identifier	sprintf_realloc		4711117	0					
ANR	4711237	ArgumentList	& buf		4711117	1					
ANR	4711238	Argument	& buf		4711117	0					
ANR	4711239	UnaryOperationExpression	& buf		4711117	0					
ANR	4711240	UnaryOperator	&		4711117	0					
ANR	4711241	Identifier	buf		4711117	1					
ANR	4711242	Argument	& bufpos		4711117	1					
ANR	4711243	UnaryOperationExpression	& bufpos		4711117	0					
ANR	4711244	UnaryOperator	&		4711117	0					
ANR	4711245	Identifier	bufpos		4711117	1					
ANR	4711246	Argument	& buflen		4711117	2					
ANR	4711247	UnaryOperationExpression	& buflen		4711117	0					
ANR	4711248	UnaryOperator	&		4711117	0					
ANR	4711249	Identifier	buflen		4711117	1					
ANR	4711250	Argument	"""%s"""		4711117	3					
ANR	4711251	PrimaryExpression	"""%s"""		4711117	0					
ANR	4711252	Argument	formatTimeHeader ( tm )		4711117	4					
ANR	4711253	CallExpression	formatTimeHeader ( tm )		4711117	0					
ANR	4711254	Callee	formatTimeHeader		4711117	0					
ANR	4711255	Identifier	formatTimeHeader		4711117	0					
ANR	4711256	ArgumentList	tm		4711117	1					
ANR	4711257	Argument	tm		4711117	0					
ANR	4711258	Identifier	tm		4711117	0					
ANR	4711259	IfStatement	if ( rc < 0 )		4711117	1					
ANR	4711260	Condition	rc < 0	267:7:8818:8823	4711117	0	True				
ANR	4711261	RelationalExpression	rc < 0		4711117	0		<			
ANR	4711262	Identifier	rc		4711117	0					
ANR	4711263	PrimaryExpression	0		4711117	1					
ANR	4711264	CompoundStatement		28:16:825:825	4711117	1					
ANR	4711265	ExpressionStatement	sprintf_errno = errno	268:4:8833:8854	4711117	0	True				
ANR	4711266	AssignmentExpression	sprintf_errno = errno		4711117	0		=			
ANR	4711267	Identifier	sprintf_errno		4711117	0					
ANR	4711268	Identifier	errno		4711117	1					
ANR	4711269	IfStatement	if ( ( mask_flags | flags ) & D_FDS )		4711117	1					
ANR	4711270	Condition	( mask_flags | flags ) & D_FDS	272:7:8873:8898	4711117	0	True				
ANR	4711271	BitAndExpression	( mask_flags | flags ) & D_FDS		4711117	0		&			
ANR	4711272	InclusiveOrExpression	mask_flags | flags		4711117	0		|			
ANR	4711273	Identifier	mask_flags		4711117	0					
ANR	4711274	Identifier	flags		4711117	1					
ANR	4711275	Identifier	D_FDS		4711117	1					
ANR	4711276	CompoundStatement		33:36:900:900	4711117	1					
ANR	4711277	IfStatement	"if ( ( local_fp = safe_fopen_wrapper_follow ( NULL_FILE , ""rN"" , 0644 ) ) == NULL )"		4711117	0					
ANR	4711278	Condition	"( local_fp = safe_fopen_wrapper_follow ( NULL_FILE , ""rN"" , 0644 ) ) == NULL"	275:7:9025:9089	4711117	0	True				
ANR	4711279	EqualityExpression	"( local_fp = safe_fopen_wrapper_follow ( NULL_FILE , ""rN"" , 0644 ) ) == NULL"		4711117	0		==			
ANR	4711280	AssignmentExpression	"local_fp = safe_fopen_wrapper_follow ( NULL_FILE , ""rN"" , 0644 )"		4711117	0		=			
ANR	4711281	Identifier	local_fp		4711117	0					
ANR	4711282	CallExpression	"safe_fopen_wrapper_follow ( NULL_FILE , ""rN"" , 0644 )"		4711117	1					
ANR	4711283	Callee	safe_fopen_wrapper_follow		4711117	0					
ANR	4711284	Identifier	safe_fopen_wrapper_follow		4711117	0					
ANR	4711285	ArgumentList	NULL_FILE		4711117	1					
ANR	4711286	Argument	NULL_FILE		4711117	0					
ANR	4711287	Identifier	NULL_FILE		4711117	0					
ANR	4711288	Argument	"""rN"""		4711117	1					
ANR	4711289	PrimaryExpression	"""rN"""		4711117	0					
ANR	4711290	Argument	0644		4711117	2					
ANR	4711291	PrimaryExpression	0644		4711117	0					
ANR	4711292	Identifier	NULL		4711117	1					
ANR	4711293	CompoundStatement		37:3:1094:1094	4711117	1					
ANR	4711294	ExpressionStatement	local_fp = fp	277:4:9102:9115	4711117	0	True				
ANR	4711295	AssignmentExpression	local_fp = fp		4711117	0		=			
ANR	4711296	Identifier	local_fp		4711117	0					
ANR	4711297	Identifier	fp		4711117	1					
ANR	4711298	ExpressionStatement	fopen_rc = 0	278:4:9121:9133	4711117	1	True				
ANR	4711299	AssignmentExpression	fopen_rc = 0		4711117	0		=			
ANR	4711300	Identifier	fopen_rc		4711117	0					
ANR	4711301	PrimaryExpression	0		4711117	1					
ANR	4711302	ExpressionStatement	"rc = sprintf_realloc ( & buf , & bufpos , & buflen , ""(fd:%d) "" , fileno ( local_fp ) )"	280:3:9143:9219	4711117	1	True				
ANR	4711303	AssignmentExpression	"rc = sprintf_realloc ( & buf , & bufpos , & buflen , ""(fd:%d) "" , fileno ( local_fp ) )"		4711117	0		=			
ANR	4711304	Identifier	rc		4711117	0					
ANR	4711305	CallExpression	"sprintf_realloc ( & buf , & bufpos , & buflen , ""(fd:%d) "" , fileno ( local_fp ) )"		4711117	1					
ANR	4711306	Callee	sprintf_realloc		4711117	0					
ANR	4711307	Identifier	sprintf_realloc		4711117	0					
ANR	4711308	ArgumentList	& buf		4711117	1					
ANR	4711309	Argument	& buf		4711117	0					
ANR	4711310	UnaryOperationExpression	& buf		4711117	0					
ANR	4711311	UnaryOperator	&		4711117	0					
ANR	4711312	Identifier	buf		4711117	1					
ANR	4711313	Argument	& bufpos		4711117	1					
ANR	4711314	UnaryOperationExpression	& bufpos		4711117	0					
ANR	4711315	UnaryOperator	&		4711117	0					
ANR	4711316	Identifier	bufpos		4711117	1					
ANR	4711317	Argument	& buflen		4711117	2					
ANR	4711318	UnaryOperationExpression	& buflen		4711117	0					
ANR	4711319	UnaryOperator	&		4711117	0					
ANR	4711320	Identifier	buflen		4711117	1					
ANR	4711321	Argument	"""(fd:%d) """		4711117	3					
ANR	4711322	PrimaryExpression	"""(fd:%d) """		4711117	0					
ANR	4711323	Argument	fileno ( local_fp )		4711117	4					
ANR	4711324	CallExpression	fileno ( local_fp )		4711117	0					
ANR	4711325	Callee	fileno		4711117	0					
ANR	4711326	Identifier	fileno		4711117	0					
ANR	4711327	ArgumentList	local_fp		4711117	1					
ANR	4711328	Argument	local_fp		4711117	0					
ANR	4711329	Identifier	local_fp		4711117	0					
ANR	4711330	IfStatement	if ( rc < 0 )		4711117	2					
ANR	4711331	Condition	rc < 0	281:7:9228:9233	4711117	0	True				
ANR	4711332	RelationalExpression	rc < 0		4711117	0		<			
ANR	4711333	Identifier	rc		4711117	0					
ANR	4711334	PrimaryExpression	0		4711117	1					
ANR	4711335	CompoundStatement		42:16:1235:1235	4711117	1					
ANR	4711336	ExpressionStatement	sprintf_errno = errno	282:4:9243:9264	4711117	0	True				
ANR	4711337	AssignmentExpression	sprintf_errno = errno		4711117	0		=			
ANR	4711338	Identifier	sprintf_errno		4711117	0					
ANR	4711339	Identifier	errno		4711117	1					
ANR	4711340	IfStatement	if ( fopen_rc )		4711117	3					
ANR	4711341	Condition	fopen_rc	284:6:9277:9284	4711117	0	True				
ANR	4711342	Identifier	fopen_rc		4711117	0					
ANR	4711343	CompoundStatement		46:3:1288:1288	4711117	1					
ANR	4711344	ExpressionStatement	"fopen_rc = fclose_wrapper ( local_fp , FCLOSE_RETRY_MAX )"	286:4:9296:9349	4711117	0	True				
ANR	4711345	AssignmentExpression	"fopen_rc = fclose_wrapper ( local_fp , FCLOSE_RETRY_MAX )"		4711117	0		=			
ANR	4711346	Identifier	fopen_rc		4711117	0					
ANR	4711347	CallExpression	"fclose_wrapper ( local_fp , FCLOSE_RETRY_MAX )"		4711117	1					
ANR	4711348	Callee	fclose_wrapper		4711117	0					
ANR	4711349	Identifier	fclose_wrapper		4711117	0					
ANR	4711350	ArgumentList	local_fp		4711117	1					
ANR	4711351	Argument	local_fp		4711117	0					
ANR	4711352	Identifier	local_fp		4711117	0					
ANR	4711353	Argument	FCLOSE_RETRY_MAX		4711117	1					
ANR	4711354	Identifier	FCLOSE_RETRY_MAX		4711117	0					
ANR	4711355	IfStatement	if ( ( mask_flags | flags ) & D_PID )		4711117	2					
ANR	4711356	Condition	( mask_flags | flags ) & D_PID	290:6:9367:9392	4711117	0	True				
ANR	4711357	BitAndExpression	( mask_flags | flags ) & D_PID		4711117	0		&			
ANR	4711358	InclusiveOrExpression	mask_flags | flags		4711117	0		|			
ANR	4711359	Identifier	mask_flags		4711117	0					
ANR	4711360	Identifier	flags		4711117	1					
ANR	4711361	Identifier	D_PID		4711117	1					
ANR	4711362	CompoundStatement		51:35:1394:1394	4711117	1					
ANR	4711363	ExpressionStatement	my_pid = ( int ) GetCurrentProcessId ( )	292:3:9414:9450	4711117	0	True				
ANR	4711364	AssignmentExpression	my_pid = ( int ) GetCurrentProcessId ( )		4711117	0		=			
ANR	4711365	Identifier	my_pid		4711117	0					
ANR	4711366	CastExpression	( int ) GetCurrentProcessId ( )		4711117	1					
ANR	4711367	CastTarget	int		4711117	0					
ANR	4711368	CallExpression	GetCurrentProcessId ( )		4711117	1					
ANR	4711369	Callee	GetCurrentProcessId		4711117	0					
ANR	4711370	Identifier	GetCurrentProcessId		4711117	0					
ANR	4711371	ArgumentList			4711117	1					
ANR	4711372	ExpressionStatement	"rc = sprintf_realloc ( & buf , & bufpos , & buflen , ""(pid:%d) "" , my_pid )"	296:3:9496:9563	4711117	1	True				
ANR	4711373	AssignmentExpression	"rc = sprintf_realloc ( & buf , & bufpos , & buflen , ""(pid:%d) "" , my_pid )"		4711117	0		=			
ANR	4711374	Identifier	rc		4711117	0					
ANR	4711375	CallExpression	"sprintf_realloc ( & buf , & bufpos , & buflen , ""(pid:%d) "" , my_pid )"		4711117	1					
ANR	4711376	Callee	sprintf_realloc		4711117	0					
ANR	4711377	Identifier	sprintf_realloc		4711117	0					
ANR	4711378	ArgumentList	& buf		4711117	1					
ANR	4711379	Argument	& buf		4711117	0					
ANR	4711380	UnaryOperationExpression	& buf		4711117	0					
ANR	4711381	UnaryOperator	&		4711117	0					
ANR	4711382	Identifier	buf		4711117	1					
ANR	4711383	Argument	& bufpos		4711117	1					
ANR	4711384	UnaryOperationExpression	& bufpos		4711117	0					
ANR	4711385	UnaryOperator	&		4711117	0					
ANR	4711386	Identifier	bufpos		4711117	1					
ANR	4711387	Argument	& buflen		4711117	2					
ANR	4711388	UnaryOperationExpression	& buflen		4711117	0					
ANR	4711389	UnaryOperator	&		4711117	0					
ANR	4711390	Identifier	buflen		4711117	1					
ANR	4711391	Argument	"""(pid:%d) """		4711117	3					
ANR	4711392	PrimaryExpression	"""(pid:%d) """		4711117	0					
ANR	4711393	Argument	my_pid		4711117	4					
ANR	4711394	Identifier	my_pid		4711117	0					
ANR	4711395	IfStatement	if ( rc < 0 )		4711117	2					
ANR	4711396	Condition	rc < 0	297:7:9572:9577	4711117	0	True				
ANR	4711397	RelationalExpression	rc < 0		4711117	0		<			
ANR	4711398	Identifier	rc		4711117	0					
ANR	4711399	PrimaryExpression	0		4711117	1					
ANR	4711400	CompoundStatement		58:16:1579:1579	4711117	1					
ANR	4711401	ExpressionStatement	sprintf_errno = errno	298:4:9587:9608	4711117	0	True				
ANR	4711402	AssignmentExpression	sprintf_errno = errno		4711117	0		=			
ANR	4711403	Identifier	sprintf_errno		4711117	0					
ANR	4711404	Identifier	errno		4711117	1					
ANR	4711405	ExpressionStatement	my_tid = CondorThreads_gettid ( )	303:2:9685:9716	4711117	3	True				
ANR	4711406	AssignmentExpression	my_tid = CondorThreads_gettid ( )		4711117	0		=			
ANR	4711407	Identifier	my_tid		4711117	0					
ANR	4711408	CallExpression	CondorThreads_gettid ( )		4711117	1					
ANR	4711409	Callee	CondorThreads_gettid		4711117	0					
ANR	4711410	Identifier	CondorThreads_gettid		4711117	0					
ANR	4711411	ArgumentList			4711117	1					
ANR	4711412	IfStatement	if ( my_tid > 0 )		4711117	4					
ANR	4711413	Condition	my_tid > 0	304:7:9725:9734	4711117	0	True				
ANR	4711414	RelationalExpression	my_tid > 0		4711117	0		>			
ANR	4711415	Identifier	my_tid		4711117	0					
ANR	4711416	PrimaryExpression	0		4711117	1					
ANR	4711417	CompoundStatement		65:20:1736:1736	4711117	1					
ANR	4711418	ExpressionStatement	"rc = sprintf_realloc ( & buf , & bufpos , & buflen , ""(tid:%d) "" , my_tid )"	305:3:9743:9810	4711117	0	True				
ANR	4711419	AssignmentExpression	"rc = sprintf_realloc ( & buf , & bufpos , & buflen , ""(tid:%d) "" , my_tid )"		4711117	0		=			
ANR	4711420	Identifier	rc		4711117	0					
ANR	4711421	CallExpression	"sprintf_realloc ( & buf , & bufpos , & buflen , ""(tid:%d) "" , my_tid )"		4711117	1					
ANR	4711422	Callee	sprintf_realloc		4711117	0					
ANR	4711423	Identifier	sprintf_realloc		4711117	0					
ANR	4711424	ArgumentList	& buf		4711117	1					
ANR	4711425	Argument	& buf		4711117	0					
ANR	4711426	UnaryOperationExpression	& buf		4711117	0					
ANR	4711427	UnaryOperator	&		4711117	0					
ANR	4711428	Identifier	buf		4711117	1					
ANR	4711429	Argument	& bufpos		4711117	1					
ANR	4711430	UnaryOperationExpression	& bufpos		4711117	0					
ANR	4711431	UnaryOperator	&		4711117	0					
ANR	4711432	Identifier	bufpos		4711117	1					
ANR	4711433	Argument	& buflen		4711117	2					
ANR	4711434	UnaryOperationExpression	& buflen		4711117	0					
ANR	4711435	UnaryOperator	&		4711117	0					
ANR	4711436	Identifier	buflen		4711117	1					
ANR	4711437	Argument	"""(tid:%d) """		4711117	3					
ANR	4711438	PrimaryExpression	"""(tid:%d) """		4711117	0					
ANR	4711439	Argument	my_tid		4711117	4					
ANR	4711440	Identifier	my_tid		4711117	0					
ANR	4711441	IfStatement	if ( rc < 0 )		4711117	1					
ANR	4711442	Condition	rc < 0	306:7:9819:9824	4711117	0	True				
ANR	4711443	RelationalExpression	rc < 0		4711117	0		<			
ANR	4711444	Identifier	rc		4711117	0					
ANR	4711445	PrimaryExpression	0		4711117	1					
ANR	4711446	CompoundStatement		67:16:1826:1826	4711117	1					
ANR	4711447	ExpressionStatement	sprintf_errno = errno	307:4:9834:9855	4711117	0	True				
ANR	4711448	AssignmentExpression	sprintf_errno = errno		4711117	0		=			
ANR	4711449	Identifier	sprintf_errno		4711117	0					
ANR	4711450	Identifier	errno		4711117	1					
ANR	4711451	IfStatement	if ( DebugId )		4711117	5					
ANR	4711452	Condition	DebugId	311:6:9873:9879	4711117	0	True				
ANR	4711453	Identifier	DebugId		4711117	0					
ANR	4711454	CompoundStatement		72:16:1881:1881	4711117	1					
ANR	4711455	ExpressionStatement	"rc = ( * DebugId ) ( & buf , & bufpos , & buflen )"	312:3:9888:9929	4711117	0	True				
ANR	4711456	AssignmentExpression	"rc = ( * DebugId ) ( & buf , & bufpos , & buflen )"		4711117	0		=			
ANR	4711457	Identifier	rc		4711117	0					
ANR	4711458	CallExpression	"( * DebugId ) ( & buf , & bufpos , & buflen )"		4711117	1					
ANR	4711459	Callee	* DebugId		4711117	0					
ANR	4711460	UnaryOperationExpression	* DebugId		4711117	0					
ANR	4711461	UnaryOperator	*		4711117	0					
ANR	4711462	Identifier	DebugId		4711117	1					
ANR	4711463	ArgumentList	& buf		4711117	1					
ANR	4711464	Argument	& buf		4711117	0					
ANR	4711465	UnaryOperationExpression	& buf		4711117	0					
ANR	4711466	UnaryOperator	&		4711117	0					
ANR	4711467	Identifier	buf		4711117	1					
ANR	4711468	Argument	& bufpos		4711117	1					
ANR	4711469	UnaryOperationExpression	& bufpos		4711117	0					
ANR	4711470	UnaryOperator	&		4711117	0					
ANR	4711471	Identifier	bufpos		4711117	1					
ANR	4711472	Argument	& buflen		4711117	2					
ANR	4711473	UnaryOperationExpression	& buflen		4711117	0					
ANR	4711474	UnaryOperator	&		4711117	0					
ANR	4711475	Identifier	buflen		4711117	1					
ANR	4711476	IfStatement	if ( rc < 0 )		4711117	1					
ANR	4711477	Condition	rc < 0	313:7:9938:9943	4711117	0	True				
ANR	4711478	RelationalExpression	rc < 0		4711117	0		<			
ANR	4711479	Identifier	rc		4711117	0					
ANR	4711480	PrimaryExpression	0		4711117	1					
ANR	4711481	CompoundStatement		74:16:1945:1945	4711117	1					
ANR	4711482	ExpressionStatement	sprintf_errno = errno	314:4:9953:9974	4711117	0	True				
ANR	4711483	AssignmentExpression	sprintf_errno = errno		4711117	0		=			
ANR	4711484	Identifier	sprintf_errno		4711117	0					
ANR	4711485	Identifier	errno		4711117	1					
ANR	4711486	IfStatement	if ( sprintf_errno != 0 )		4711117	13					
ANR	4711487	Condition	sprintf_errno != 0	319:5:9994:10011	4711117	0	True				
ANR	4711488	EqualityExpression	sprintf_errno != 0		4711117	0		!=			
ANR	4711489	Identifier	sprintf_errno		4711117	0					
ANR	4711490	PrimaryExpression	0		4711117	1					
ANR	4711491	CompoundStatement		80:26:2013:2013	4711117	1					
ANR	4711492	ExpressionStatement	"_condor_dprintf_exit ( sprintf_errno , ""Error writing to debug header\\n"" )"	320:2:10019:10089	4711117	0	True				
ANR	4711493	CallExpression	"_condor_dprintf_exit ( sprintf_errno , ""Error writing to debug header\\n"" )"		4711117	0					
ANR	4711494	Callee	_condor_dprintf_exit		4711117	0					
ANR	4711495	Identifier	_condor_dprintf_exit		4711117	0					
ANR	4711496	ArgumentList	sprintf_errno		4711117	1					
ANR	4711497	Argument	sprintf_errno		4711117	0					
ANR	4711498	Identifier	sprintf_errno		4711117	0					
ANR	4711499	Argument	"""Error writing to debug header\\n"""		4711117	1					
ANR	4711500	PrimaryExpression	"""Error writing to debug header\\n"""		4711117	0					
ANR	4711501	ExpressionStatement	"rc = vsprintf_realloc ( & buf , & bufpos , & buflen , fmt , args )"	323:1:10097:10155	4711117	14	True				
ANR	4711502	AssignmentExpression	"rc = vsprintf_realloc ( & buf , & bufpos , & buflen , fmt , args )"		4711117	0		=			
ANR	4711503	Identifier	rc		4711117	0					
ANR	4711504	CallExpression	"vsprintf_realloc ( & buf , & bufpos , & buflen , fmt , args )"		4711117	1					
ANR	4711505	Callee	vsprintf_realloc		4711117	0					
ANR	4711506	Identifier	vsprintf_realloc		4711117	0					
ANR	4711507	ArgumentList	& buf		4711117	1					
ANR	4711508	Argument	& buf		4711117	0					
ANR	4711509	UnaryOperationExpression	& buf		4711117	0					
ANR	4711510	UnaryOperator	&		4711117	0					
ANR	4711511	Identifier	buf		4711117	1					
ANR	4711512	Argument	& bufpos		4711117	1					
ANR	4711513	UnaryOperationExpression	& bufpos		4711117	0					
ANR	4711514	UnaryOperator	&		4711117	0					
ANR	4711515	Identifier	bufpos		4711117	1					
ANR	4711516	Argument	& buflen		4711117	2					
ANR	4711517	UnaryOperationExpression	& buflen		4711117	0					
ANR	4711518	UnaryOperator	&		4711117	0					
ANR	4711519	Identifier	buflen		4711117	1					
ANR	4711520	Argument	fmt		4711117	3					
ANR	4711521	Identifier	fmt		4711117	0					
ANR	4711522	Argument	args		4711117	4					
ANR	4711523	Identifier	args		4711117	0					
ANR	4711524	IfStatement	if ( rc < 0 )		4711117	15					
ANR	4711525	Condition	rc < 0	326:5:10199:10204	4711117	0	True				
ANR	4711526	RelationalExpression	rc < 0		4711117	0		<			
ANR	4711527	Identifier	rc		4711117	0					
ANR	4711528	PrimaryExpression	0		4711117	1					
ANR	4711529	CompoundStatement		87:13:2205:2205	4711117	1					
ANR	4711530	ExpressionStatement	"_condor_dprintf_exit ( errno , ""Error writing to debug buffer\\n"" )"	327:2:10211:10273	4711117	0	True				
ANR	4711531	CallExpression	"_condor_dprintf_exit ( errno , ""Error writing to debug buffer\\n"" )"		4711117	0					
ANR	4711532	Callee	_condor_dprintf_exit		4711117	0					
ANR	4711533	Identifier	_condor_dprintf_exit		4711117	0					
ANR	4711534	ArgumentList	errno		4711117	1					
ANR	4711535	Argument	errno		4711117	0					
ANR	4711536	Identifier	errno		4711117	0					
ANR	4711537	Argument	"""Error writing to debug buffer\\n"""		4711117	1					
ANR	4711538	PrimaryExpression	"""Error writing to debug buffer\\n"""		4711117	0					
ANR	4711539	ExpressionStatement	start_pos = 0	337:1:10662:10675	4711117	16	True				
ANR	4711540	AssignmentExpression	start_pos = 0		4711117	0		=			
ANR	4711541	Identifier	start_pos		4711117	0					
ANR	4711542	PrimaryExpression	0		4711117	1					
ANR	4711543	WhileStatement	while ( start_pos < bufpos )		4711117	17					
ANR	4711544	Condition	start_pos < bufpos	338:8:10685:10700	4711117	0	True				
ANR	4711545	RelationalExpression	start_pos < bufpos		4711117	0		<			
ANR	4711546	Identifier	start_pos		4711117	0					
ANR	4711547	Identifier	bufpos		4711117	1					
ANR	4711548	CompoundStatement		99:27:2702:2702	4711117	1					
ANR	4711549	ExpressionStatement	"rc = write ( fileno ( fp ) , buf + start_pos , bufpos - start_pos )"	339:2:10708:10775	4711117	0	True				
ANR	4711550	AssignmentExpression	"rc = write ( fileno ( fp ) , buf + start_pos , bufpos - start_pos )"		4711117	0		=			
ANR	4711551	Identifier	rc		4711117	0					
ANR	4711552	CallExpression	"write ( fileno ( fp ) , buf + start_pos , bufpos - start_pos )"		4711117	1					
ANR	4711553	Callee	write		4711117	0					
ANR	4711554	Identifier	write		4711117	0					
ANR	4711555	ArgumentList	fileno ( fp )		4711117	1					
ANR	4711556	Argument	fileno ( fp )		4711117	0					
ANR	4711557	CallExpression	fileno ( fp )		4711117	0					
ANR	4711558	Callee	fileno		4711117	0					
ANR	4711559	Identifier	fileno		4711117	0					
ANR	4711560	ArgumentList	fp		4711117	1					
ANR	4711561	Argument	fp		4711117	0					
ANR	4711562	Identifier	fp		4711117	0					
ANR	4711563	Argument	buf + start_pos		4711117	1					
ANR	4711564	AdditiveExpression	buf + start_pos		4711117	0		+			
ANR	4711565	Identifier	buf		4711117	0					
ANR	4711566	Identifier	start_pos		4711117	1					
ANR	4711567	Argument	bufpos - start_pos		4711117	2					
ANR	4711568	AdditiveExpression	bufpos - start_pos		4711117	0		-			
ANR	4711569	Identifier	bufpos		4711117	0					
ANR	4711570	Identifier	start_pos		4711117	1					
ANR	4711571	IfStatement	if ( rc > 0 )		4711117	1					
ANR	4711572	Condition	rc > 0	342:6:10783:10788	4711117	0	True				
ANR	4711573	RelationalExpression	rc > 0		4711117	0		>			
ANR	4711574	Identifier	rc		4711117	0					
ANR	4711575	PrimaryExpression	0		4711117	1					
ANR	4711576	CompoundStatement		103:15:2790:2790	4711117	1					
ANR	4711577	ExpressionStatement	start_pos += rc	343:3:10797:10812	4711117	0	True				
ANR	4711578	AssignmentExpression	start_pos += rc		4711117	0		+=			
ANR	4711579	Identifier	start_pos		4711117	0					
ANR	4711580	Identifier	rc		4711117	1					
ANR	4711581	ElseStatement	else		4711117	0					
ANR	4711582	IfStatement	if ( errno != EINTR )		4711117	0					
ANR	4711583	Condition	errno != EINTR	345:11:10829:10842	4711117	0	True				
ANR	4711584	EqualityExpression	errno != EINTR		4711117	0		!=			
ANR	4711585	Identifier	errno		4711117	0					
ANR	4711586	Identifier	EINTR		4711117	1					
ANR	4711587	CompoundStatement		106:28:2844:2844	4711117	1					
ANR	4711588	ExpressionStatement	"_condor_dprintf_exit ( errno , ""Error writing debug log\\n"" )"	346:3:10851:10907	4711117	0	True				
ANR	4711589	CallExpression	"_condor_dprintf_exit ( errno , ""Error writing debug log\\n"" )"		4711117	0					
ANR	4711590	Callee	_condor_dprintf_exit		4711117	0					
ANR	4711591	Identifier	_condor_dprintf_exit		4711117	0					
ANR	4711592	ArgumentList	errno		4711117	1					
ANR	4711593	Argument	errno		4711117	0					
ANR	4711594	Identifier	errno		4711117	0					
ANR	4711595	Argument	"""Error writing debug log\\n"""		4711117	1					
ANR	4711596	PrimaryExpression	"""Error writing debug log\\n"""		4711117	0					
ANR	4711597	ReturnType	static void		4711117	1					
ANR	4711598	Identifier	_condor_dfprintf_va		4711117	2					
ANR	4711599	ParameterList	"int flags , int mask_flags , time_t clock_now , struct tm * tm , FILE * fp , const char * fmt , va_list args"		4711117	3					
ANR	4711600	Parameter	int flags	239:21:7899:7907	4711117	0	True				
ANR	4711601	ParameterType	int		4711117	0					
ANR	4711602	Identifier	flags		4711117	1					
ANR	4711603	Parameter	int mask_flags	239:32:7910:7923	4711117	1	True				
ANR	4711604	ParameterType	int		4711117	0					
ANR	4711605	Identifier	mask_flags		4711117	1					
ANR	4711606	Parameter	time_t clock_now	239:48:7926:7941	4711117	2	True				
ANR	4711607	ParameterType	time_t		4711117	0					
ANR	4711608	Identifier	clock_now		4711117	1					
ANR	4711609	Parameter	struct tm * tm	239:66:7944:7956	4711117	3	True				
ANR	4711610	ParameterType	struct tm *		4711117	0					
ANR	4711611	Identifier	tm		4711117	1					
ANR	4711612	Parameter	FILE * fp	239:81:7959:7966	4711117	4	True				
ANR	4711613	ParameterType	FILE *		4711117	0					
ANR	4711614	Identifier	fp		4711117	1					
ANR	4711615	Parameter	const char * fmt	239:91:7969:7983	4711117	5	True				
ANR	4711616	ParameterType	const char *		4711117	0					
ANR	4711617	Identifier	fmt		4711117	1					
ANR	4711618	Parameter	va_list args	239:108:7986:7997	4711117	6	True				
ANR	4711619	ParameterType	va_list		4711117	0					
ANR	4711620	Identifier	args		4711117	1					
ANR	4711621	CFGEntryNode	ENTRY		4711117		True				
ANR	4711622	CFGExitNode	EXIT		4711117		True				
ANR	4711623	Symbol	* DebugId		4711117						
ANR	4711624	Symbol	EINTR		4711117						
ANR	4711625	Symbol	DebugUseTimestamps		4711117						
ANR	4711626	Symbol	flags		4711117						
ANR	4711627	Symbol	fp		4711117						
ANR	4711628	Symbol	fmt		4711117						
ANR	4711629	Symbol	fopen_rc		4711117						
ANR	4711630	Symbol	CondorThreads_gettid		4711117						
ANR	4711631	Symbol	local_fp		4711117						
ANR	4711632	Symbol	buflen		4711117						
ANR	4711633	Symbol	bufpos		4711117						
ANR	4711634	Symbol	D_PID		4711117						
ANR	4711635	Symbol	FCLOSE_RETRY_MAX		4711117						
ANR	4711636	Symbol	safe_fopen_wrapper_follow		4711117						
ANR	4711637	Symbol	write		4711117						
ANR	4711638	Symbol	& buf		4711117						
ANR	4711639	Symbol	errno		4711117						
ANR	4711640	Symbol	NULL		4711117						
ANR	4711641	Symbol	formatTimeHeader		4711117						
ANR	4711642	Symbol	my_tid		4711117						
ANR	4711643	Symbol	sprintf_errno		4711117						
ANR	4711644	Symbol	GetCurrentProcessId		4711117						
ANR	4711645	Symbol	clock_now		4711117						
ANR	4711646	Symbol	start_pos		4711117						
ANR	4711647	Symbol	fclose_wrapper		4711117						
ANR	4711648	Symbol	vsprintf_realloc		4711117						
ANR	4711649	Symbol	my_pid		4711117						
ANR	4711650	Symbol	args		4711117						
ANR	4711651	Symbol	D_FDS		4711117						
ANR	4711652	Symbol	rc		4711117						
ANR	4711653	Symbol	buf		4711117						
ANR	4711654	Symbol	DebugId		4711117						
ANR	4711655	Symbol	& buflen		4711117						
ANR	4711656	Symbol	& bufpos		4711117						
ANR	4711657	Symbol	mask_flags		4711117						
ANR	4711658	Symbol	fileno		4711117						
ANR	4711659	Symbol	sprintf_realloc		4711117						
ANR	4711660	Symbol	NULL_FILE		4711117						
ANR	4711661	Symbol	tm		4711117						
ANR	4711662	Symbol	D_NOHEADER		4711117						
ANR	4711663	Function	_condor_dfprintf	355:0:11064:11483							
ANR	4711664	FunctionDef	"_condor_dfprintf (FILE * fp , const char * fmt)"		4711663	0					
ANR	4711665	CompoundStatement		357:0:11127:11483	4711663	0					
ANR	4711666	IdentifierDeclStatement	struct tm * tm = 0 ;	358:1:11130:11145	4711663	0	True				
ANR	4711667	IdentifierDecl	* tm = 0		4711663	0					
ANR	4711668	IdentifierDeclType	struct tm *		4711663	0					
ANR	4711669	Identifier	tm		4711663	1					
ANR	4711670	AssignmentExpression	* tm = 0		4711663	2		=			
ANR	4711671	Identifier	tm		4711663	0					
ANR	4711672	PrimaryExpression	0		4711663	1					
ANR	4711673	IdentifierDeclStatement	time_t clock_now ;	359:1:11148:11164	4711663	1	True				
ANR	4711674	IdentifierDecl	clock_now		4711663	0					
ANR	4711675	IdentifierDeclType	time_t		4711663	0					
ANR	4711676	Identifier	clock_now		4711663	1					
ANR	4711677	IdentifierDeclStatement	va_list args ;	360:4:11170:11182	4711663	2	True				
ANR	4711678	IdentifierDecl	args		4711663	0					
ANR	4711679	IdentifierDeclType	va_list		4711663	0					
ANR	4711680	Identifier	args		4711663	1					
ANR	4711681	ExpressionStatement	"memset ( ( void * ) & clock_now , 0 , sizeof ( time_t ) )"	362:1:11186:11228	4711663	3	True				
ANR	4711682	CallExpression	"memset ( ( void * ) & clock_now , 0 , sizeof ( time_t ) )"		4711663	0					
ANR	4711683	Callee	memset		4711663	0					
ANR	4711684	Identifier	memset		4711663	0					
ANR	4711685	ArgumentList	( void * ) & clock_now		4711663	1					
ANR	4711686	Argument	( void * ) & clock_now		4711663	0					
ANR	4711687	CastExpression	( void * ) & clock_now		4711663	0					
ANR	4711688	CastTarget	void *		4711663	0					
ANR	4711689	UnaryOperationExpression	& clock_now		4711663	1					
ANR	4711690	UnaryOperator	&		4711663	0					
ANR	4711691	Identifier	clock_now		4711663	1					
ANR	4711692	Argument	0		4711663	1					
ANR	4711693	PrimaryExpression	0		4711663	0					
ANR	4711694	Argument	sizeof ( time_t )		4711663	2					
ANR	4711695	SizeofExpression	sizeof ( time_t )		4711663	0					
ANR	4711696	Sizeof	sizeof		4711663	0					
ANR	4711697	SizeofOperand	time_t		4711663	1					
ANR	4711698	ExpressionStatement	( void ) time ( & clock_now )	363:1:11265:11290	4711663	4	True				
ANR	4711699	CastExpression	( void ) time ( & clock_now )		4711663	0					
ANR	4711700	CastTarget	void		4711663	0					
ANR	4711701	CallExpression	time ( & clock_now )		4711663	1					
ANR	4711702	Callee	time		4711663	0					
ANR	4711703	Identifier	time		4711663	0					
ANR	4711704	ArgumentList	& clock_now		4711663	1					
ANR	4711705	Argument	& clock_now		4711663	0					
ANR	4711706	UnaryOperationExpression	& clock_now		4711663	0					
ANR	4711707	UnaryOperator	&		4711663	0					
ANR	4711708	Identifier	clock_now		4711663	1					
ANR	4711709	IfStatement	if ( ! DebugUseTimestamps )		4711663	5					
ANR	4711710	Condition	! DebugUseTimestamps	364:6:11298:11317	4711663	0	True				
ANR	4711711	UnaryOperationExpression	! DebugUseTimestamps		4711663	0					
ANR	4711712	UnaryOperator	!		4711663	0					
ANR	4711713	Identifier	DebugUseTimestamps		4711663	1					
ANR	4711714	CompoundStatement		8:29:193:193	4711663	1					
ANR	4711715	ExpressionStatement	tm = localtime ( & clock_now )	365:2:11325:11353	4711663	0	True				
ANR	4711716	AssignmentExpression	tm = localtime ( & clock_now )		4711663	0		=			
ANR	4711717	Identifier	tm		4711663	0					
ANR	4711718	CallExpression	localtime ( & clock_now )		4711663	1					
ANR	4711719	Callee	localtime		4711663	0					
ANR	4711720	Identifier	localtime		4711663	0					
ANR	4711721	ArgumentList	& clock_now		4711663	1					
ANR	4711722	Argument	& clock_now		4711663	0					
ANR	4711723	UnaryOperationExpression	& clock_now		4711663	0					
ANR	4711724	UnaryOperator	&		4711663	0					
ANR	4711725	Identifier	clock_now		4711663	1					
ANR	4711726	ExpressionStatement	"va_start ( args , fmt )"	368:4:11363:11384	4711663	6	True				
ANR	4711727	CallExpression	"va_start ( args , fmt )"		4711663	0					
ANR	4711728	Callee	va_start		4711663	0					
ANR	4711729	Identifier	va_start		4711663	0					
ANR	4711730	ArgumentList	args		4711663	1					
ANR	4711731	Argument	args		4711663	0					
ANR	4711732	Identifier	args		4711663	0					
ANR	4711733	Argument	fmt		4711663	1					
ANR	4711734	Identifier	fmt		4711663	0					
ANR	4711735	ExpressionStatement	"_condor_dfprintf_va ( D_ALWAYS , D_ALWAYS | DebugFlags , clock_now , tm , fp , fmt , args )"	369:1:11387:11461	4711663	7	True				
ANR	4711736	CallExpression	"_condor_dfprintf_va ( D_ALWAYS , D_ALWAYS | DebugFlags , clock_now , tm , fp , fmt , args )"		4711663	0					
ANR	4711737	Callee	_condor_dfprintf_va		4711663	0					
ANR	4711738	Identifier	_condor_dfprintf_va		4711663	0					
ANR	4711739	ArgumentList	D_ALWAYS		4711663	1					
ANR	4711740	Argument	D_ALWAYS		4711663	0					
ANR	4711741	Identifier	D_ALWAYS		4711663	0					
ANR	4711742	Argument	D_ALWAYS | DebugFlags		4711663	1					
ANR	4711743	InclusiveOrExpression	D_ALWAYS | DebugFlags		4711663	0		|			
ANR	4711744	Identifier	D_ALWAYS		4711663	0					
ANR	4711745	Identifier	DebugFlags		4711663	1					
ANR	4711746	Argument	clock_now		4711663	2					
ANR	4711747	Identifier	clock_now		4711663	0					
ANR	4711748	Argument	tm		4711663	3					
ANR	4711749	Identifier	tm		4711663	0					
ANR	4711750	Argument	fp		4711663	4					
ANR	4711751	Identifier	fp		4711663	0					
ANR	4711752	Argument	fmt		4711663	5					
ANR	4711753	Identifier	fmt		4711663	0					
ANR	4711754	Argument	args		4711663	6					
ANR	4711755	Identifier	args		4711663	0					
ANR	4711756	ExpressionStatement	va_end ( args )	370:4:11467:11481	4711663	8	True				
ANR	4711757	CallExpression	va_end ( args )		4711663	0					
ANR	4711758	Callee	va_end		4711663	0					
ANR	4711759	Identifier	va_end		4711663	0					
ANR	4711760	ArgumentList	args		4711663	1					
ANR	4711761	Argument	args		4711663	0					
ANR	4711762	Identifier	args		4711663	0					
ANR	4711763	ReturnType	static void		4711663	1					
ANR	4711764	Identifier	_condor_dfprintf		4711663	2					
ANR	4711765	ParameterList	"FILE * fp , const char * fmt"		4711663	3					
ANR	4711766	Parameter	FILE * fp	356:18:11094:11101	4711663	0	True				
ANR	4711767	ParameterType	FILE *		4711663	0					
ANR	4711768	Identifier	fp		4711663	1					
ANR	4711769	Parameter	const char * fmt	356:28:11104:11118	4711663	1	True				
ANR	4711770	ParameterType	const char *		4711663	0					
ANR	4711771	Identifier	fmt		4711663	1					
ANR	4711772	CFGEntryNode	ENTRY		4711663		True				
ANR	4711773	CFGExitNode	EXIT		4711663		True				
ANR	4711774	Symbol	args		4711663						
ANR	4711775	Symbol	localtime		4711663						
ANR	4711776	Symbol	& clock_now		4711663						
ANR	4711777	Symbol	DebugUseTimestamps		4711663						
ANR	4711778	Symbol	D_ALWAYS		4711663						
ANR	4711779	Symbol	tm		4711663						
ANR	4711780	Symbol	fp		4711663						
ANR	4711781	Symbol	DebugFlags		4711663						
ANR	4711782	Symbol	fmt		4711663						
ANR	4711783	Symbol	clock_now		4711663						
ANR	4711784	Function	dprintf_getCount	373:0:11486:11541							
ANR	4711785	FunctionDef	dprintf_getCount ()		4711784	0					
ANR	4711786	CompoundStatement		374:0:11513:11541	4711784	0					
ANR	4711787	ReturnStatement	return dprintf_count ;	375:4:11519:11539	4711784	0	True				
ANR	4711788	Identifier	dprintf_count		4711784	0					
ANR	4711789	ReturnType	int		4711784	1					
ANR	4711790	Identifier	dprintf_getCount		4711784	2					
ANR	4711791	ParameterList			4711784	3					
ANR	4711792	CFGEntryNode	ENTRY		4711784		True				
ANR	4711793	CFGExitNode	EXIT		4711784		True				
ANR	4711794	Symbol	dprintf_count		4711784						
ANR	4711795	DeclStmt									
ANR	4711796	Decl							struct tm	struct tm * ( )	localtime
ANR	4711797	Function	_condor_dprintf_va	387:0:11701:17762							
ANR	4711798	FunctionDef	"_condor_dprintf_va (int flags , const char * fmt , va_list args)"		4711797	0					
ANR	4711799	CompoundStatement		389:0:11769:17762	4711797	0					
ANR	4711800	IdentifierDeclStatement	struct tm * tm = 0 ;	390:1:11772:11787	4711797	0	True				
ANR	4711801	IdentifierDecl	* tm = 0		4711797	0					
ANR	4711802	IdentifierDeclType	struct tm *		4711797	0					
ANR	4711803	Identifier	tm		4711797	1					
ANR	4711804	AssignmentExpression	* tm = 0		4711797	2		=			
ANR	4711805	Identifier	tm		4711797	0					
ANR	4711806	PrimaryExpression	0		4711797	1					
ANR	4711807	IdentifierDeclStatement	time_t clock_now ;	391:1:11790:11806	4711797	1	True				
ANR	4711808	IdentifierDecl	clock_now		4711797	0					
ANR	4711809	IdentifierDeclType	time_t		4711797	0					
ANR	4711810	Identifier	clock_now		4711797	1					
ANR	4711811	IdentifierDeclStatement	"sigset_t mask , omask ;"	393:1:11829:11849	4711797	2	True				
ANR	4711812	IdentifierDecl	mask		4711797	0					
ANR	4711813	IdentifierDeclType	sigset_t		4711797	0					
ANR	4711814	Identifier	mask		4711797	1					
ANR	4711815	IdentifierDecl	omask		4711797	1					
ANR	4711816	IdentifierDeclType	sigset_t		4711797	0					
ANR	4711817	Identifier	omask		4711797	1					
ANR	4711818	IdentifierDeclStatement	mode_t old_umask ;	394:1:11852:11869	4711797	3	True				
ANR	4711819	IdentifierDecl	old_umask		4711797	0					
ANR	4711820	IdentifierDeclType	mode_t		4711797	0					
ANR	4711821	Identifier	old_umask		4711797	1					
ANR	4711822	IdentifierDeclStatement	int saved_errno ;	396:1:11879:11894	4711797	4	True				
ANR	4711823	IdentifierDecl	saved_errno		4711797	0					
ANR	4711824	IdentifierDeclType	int		4711797	0					
ANR	4711825	Identifier	saved_errno		4711797	1					
ANR	4711826	IdentifierDeclStatement	priv_state priv ;	397:1:11897:11912	4711797	5	True				
ANR	4711827	IdentifierDecl	priv		4711797	0					
ANR	4711828	IdentifierDeclType	priv_state		4711797	0					
ANR	4711829	Identifier	priv		4711797	1					
ANR	4711830	IdentifierDeclStatement	FILE * debug_file_ptr = NULL ;	398:1:11915:11942	4711797	6	True				
ANR	4711831	IdentifierDecl	* debug_file_ptr = NULL		4711797	0					
ANR	4711832	IdentifierDeclType	FILE *		4711797	0					
ANR	4711833	Identifier	debug_file_ptr		4711797	1					
ANR	4711834	AssignmentExpression	* debug_file_ptr = NULL		4711797	2		=			
ANR	4711835	Identifier	NULL		4711797	0					
ANR	4711836	Identifier	NULL		4711797	1					
ANR	4711837	IdentifierDeclStatement	std :: vector < DebugFileInfo > :: iterator it ;	399:1:11945:11984	4711797	7	True				
ANR	4711838	IdentifierDecl	it		4711797	0					
ANR	4711839	IdentifierDeclType	std :: vector < DebugFileInfo > :: iterator		4711797	0					
ANR	4711840	Identifier	it		4711797	1					
ANR	4711841	IfStatement	if ( DprintfBroken )		4711797	8					
ANR	4711842	Condition	DprintfBroken	407:5:12288:12300	4711797	0	True				
ANR	4711843	Identifier	DprintfBroken		4711797	0					
ANR	4711844	ReturnStatement	return ;	407:21:12304:12310	4711797	1	True				
ANR	4711845	IfStatement	if ( ! _condor_dprintf_works )		4711797	9					
ANR	4711846	Condition	! _condor_dprintf_works	416:5:12620:12642	4711797	0	True				
ANR	4711847	UnaryOperationExpression	! _condor_dprintf_works		4711797	0					
ANR	4711848	UnaryOperator	!		4711797	0					
ANR	4711849	Identifier	_condor_dprintf_works		4711797	1					
ANR	4711850	CompoundStatement		28:31:876:876	4711797	1					
ANR	4711851	ExpressionStatement	"_condor_save_dprintf_line ( flags , fmt , args )"	417:2:12650:12695	4711797	0	True				
ANR	4711852	CallExpression	"_condor_save_dprintf_line ( flags , fmt , args )"		4711797	0					
ANR	4711853	Callee	_condor_save_dprintf_line		4711797	0					
ANR	4711854	Identifier	_condor_save_dprintf_line		4711797	0					
ANR	4711855	ArgumentList	flags		4711797	1					
ANR	4711856	Argument	flags		4711797	0					
ANR	4711857	Identifier	flags		4711797	0					
ANR	4711858	Argument	fmt		4711797	1					
ANR	4711859	Identifier	fmt		4711797	0					
ANR	4711860	Argument	args		4711797	2					
ANR	4711861	Identifier	args		4711797	0					
ANR	4711862	ReturnStatement	return ;	418:2:12699:12705	4711797	1	True				
ANR	4711863	IfStatement	if ( ! ( flags & DebugFlags ) )		4711797	10					
ANR	4711864	Condition	! ( flags & DebugFlags )	422:5:12776:12794	4711797	0	True				
ANR	4711865	UnaryOperationExpression	! ( flags & DebugFlags )		4711797	0					
ANR	4711866	UnaryOperator	!		4711797	0					
ANR	4711867	BitAndExpression	flags & DebugFlags		4711797	1		&			
ANR	4711868	Identifier	flags		4711797	0					
ANR	4711869	Identifier	DebugFlags		4711797	1					
ANR	4711870	CompoundStatement		34:27:1028:1028	4711797	1					
ANR	4711871	ReturnStatement	return ;	423:2:12802:12808	4711797	0	True				
ANR	4711872	ExpressionStatement	sigfillset ( & mask )	431:1:13022:13041	4711797	11	True				
ANR	4711873	CallExpression	sigfillset ( & mask )		4711797	0					
ANR	4711874	Callee	sigfillset		4711797	0					
ANR	4711875	Identifier	sigfillset		4711797	0					
ANR	4711876	ArgumentList	& mask		4711797	1					
ANR	4711877	Argument	& mask		4711797	0					
ANR	4711878	UnaryOperationExpression	& mask		4711797	0					
ANR	4711879	UnaryOperator	&		4711797	0					
ANR	4711880	Identifier	mask		4711797	1					
ANR	4711881	ExpressionStatement	"sigdelset ( & mask , SIGABRT )"	432:1:13044:13071	4711797	12	True				
ANR	4711882	CallExpression	"sigdelset ( & mask , SIGABRT )"		4711797	0					
ANR	4711883	Callee	sigdelset		4711797	0					
ANR	4711884	Identifier	sigdelset		4711797	0					
ANR	4711885	ArgumentList	& mask		4711797	1					
ANR	4711886	Argument	& mask		4711797	0					
ANR	4711887	UnaryOperationExpression	& mask		4711797	0					
ANR	4711888	UnaryOperator	&		4711797	0					
ANR	4711889	Identifier	mask		4711797	1					
ANR	4711890	Argument	SIGABRT		4711797	1					
ANR	4711891	Identifier	SIGABRT		4711797	0					
ANR	4711892	ExpressionStatement	"sigdelset ( & mask , SIGBUS )"	433:1:13074:13100	4711797	13	True				
ANR	4711893	CallExpression	"sigdelset ( & mask , SIGBUS )"		4711797	0					
ANR	4711894	Callee	sigdelset		4711797	0					
ANR	4711895	Identifier	sigdelset		4711797	0					
ANR	4711896	ArgumentList	& mask		4711797	1					
ANR	4711897	Argument	& mask		4711797	0					
ANR	4711898	UnaryOperationExpression	& mask		4711797	0					
ANR	4711899	UnaryOperator	&		4711797	0					
ANR	4711900	Identifier	mask		4711797	1					
ANR	4711901	Argument	SIGBUS		4711797	1					
ANR	4711902	Identifier	SIGBUS		4711797	0					
ANR	4711903	ExpressionStatement	"sigdelset ( & mask , SIGFPE )"	434:1:13103:13129	4711797	14	True				
ANR	4711904	CallExpression	"sigdelset ( & mask , SIGFPE )"		4711797	0					
ANR	4711905	Callee	sigdelset		4711797	0					
ANR	4711906	Identifier	sigdelset		4711797	0					
ANR	4711907	ArgumentList	& mask		4711797	1					
ANR	4711908	Argument	& mask		4711797	0					
ANR	4711909	UnaryOperationExpression	& mask		4711797	0					
ANR	4711910	UnaryOperator	&		4711797	0					
ANR	4711911	Identifier	mask		4711797	1					
ANR	4711912	Argument	SIGFPE		4711797	1					
ANR	4711913	Identifier	SIGFPE		4711797	0					
ANR	4711914	ExpressionStatement	"sigdelset ( & mask , SIGILL )"	435:1:13132:13158	4711797	15	True				
ANR	4711915	CallExpression	"sigdelset ( & mask , SIGILL )"		4711797	0					
ANR	4711916	Callee	sigdelset		4711797	0					
ANR	4711917	Identifier	sigdelset		4711797	0					
ANR	4711918	ArgumentList	& mask		4711797	1					
ANR	4711919	Argument	& mask		4711797	0					
ANR	4711920	UnaryOperationExpression	& mask		4711797	0					
ANR	4711921	UnaryOperator	&		4711797	0					
ANR	4711922	Identifier	mask		4711797	1					
ANR	4711923	Argument	SIGILL		4711797	1					
ANR	4711924	Identifier	SIGILL		4711797	0					
ANR	4711925	ExpressionStatement	"sigdelset ( & mask , SIGSEGV )"	436:1:13161:13188	4711797	16	True				
ANR	4711926	CallExpression	"sigdelset ( & mask , SIGSEGV )"		4711797	0					
ANR	4711927	Callee	sigdelset		4711797	0					
ANR	4711928	Identifier	sigdelset		4711797	0					
ANR	4711929	ArgumentList	& mask		4711797	1					
ANR	4711930	Argument	& mask		4711797	0					
ANR	4711931	UnaryOperationExpression	& mask		4711797	0					
ANR	4711932	UnaryOperator	&		4711797	0					
ANR	4711933	Identifier	mask		4711797	1					
ANR	4711934	Argument	SIGSEGV		4711797	1					
ANR	4711935	Identifier	SIGSEGV		4711797	0					
ANR	4711936	ExpressionStatement	"sigdelset ( & mask , SIGTRAP )"	437:1:13191:13218	4711797	17	True				
ANR	4711937	CallExpression	"sigdelset ( & mask , SIGTRAP )"		4711797	0					
ANR	4711938	Callee	sigdelset		4711797	0					
ANR	4711939	Identifier	sigdelset		4711797	0					
ANR	4711940	ArgumentList	& mask		4711797	1					
ANR	4711941	Argument	& mask		4711797	0					
ANR	4711942	UnaryOperationExpression	& mask		4711797	0					
ANR	4711943	UnaryOperator	&		4711797	0					
ANR	4711944	Identifier	mask		4711797	1					
ANR	4711945	Argument	SIGTRAP		4711797	1					
ANR	4711946	Identifier	SIGTRAP		4711797	0					
ANR	4711947	ExpressionStatement	"sigprocmask ( SIG_BLOCK , & mask , & omask )"	438:1:13221:13260	4711797	18	True				
ANR	4711948	CallExpression	"sigprocmask ( SIG_BLOCK , & mask , & omask )"		4711797	0					
ANR	4711949	Callee	sigprocmask		4711797	0					
ANR	4711950	Identifier	sigprocmask		4711797	0					
ANR	4711951	ArgumentList	SIG_BLOCK		4711797	1					
ANR	4711952	Argument	SIG_BLOCK		4711797	0					
ANR	4711953	Identifier	SIG_BLOCK		4711797	0					
ANR	4711954	Argument	& mask		4711797	1					
ANR	4711955	UnaryOperationExpression	& mask		4711797	0					
ANR	4711956	UnaryOperator	&		4711797	0					
ANR	4711957	Identifier	mask		4711797	1					
ANR	4711958	Argument	& omask		4711797	2					
ANR	4711959	UnaryOperationExpression	& omask		4711797	0					
ANR	4711960	UnaryOperator	&		4711797	0					
ANR	4711961	Identifier	omask		4711797	1					
ANR	4711962	ExpressionStatement	old_umask = umask ( 022 )	443:1:13425:13449	4711797	19	True				
ANR	4711963	AssignmentExpression	old_umask = umask ( 022 )		4711797	0		=			
ANR	4711964	Identifier	old_umask		4711797	0					
ANR	4711965	CallExpression	umask ( 022 )		4711797	1					
ANR	4711966	Callee	umask		4711797	0					
ANR	4711967	Identifier	umask		4711797	0					
ANR	4711968	ArgumentList	022		4711797	1					
ANR	4711969	Argument	022		4711797	0					
ANR	4711970	PrimaryExpression	022		4711797	0					
ANR	4711971	IfStatement	if ( _condor_dprintf_critsec == NULL )		4711797	20					
ANR	4711972	Condition	_condor_dprintf_critsec == NULL	452:6:13704:13734	4711797	0	True				
ANR	4711973	EqualityExpression	_condor_dprintf_critsec == NULL		4711797	0		==			
ANR	4711974	Identifier	_condor_dprintf_critsec		4711797	0					
ANR	4711975	Identifier	NULL		4711797	1					
ANR	4711976	CompoundStatement		64:40:1968:1968	4711797	1					
ANR	4711977	ExpressionStatement	_condor_dprintf_critsec = ( CRITICAL_SECTION * ) malloc ( sizeof ( CRITICAL_SECTION ) )	453:2:13742:13824	4711797	0	True				
ANR	4711978	AssignmentExpression	_condor_dprintf_critsec = ( CRITICAL_SECTION * ) malloc ( sizeof ( CRITICAL_SECTION ) )		4711797	0		=			
ANR	4711979	Identifier	_condor_dprintf_critsec		4711797	0					
ANR	4711980	CastExpression	( CRITICAL_SECTION * ) malloc ( sizeof ( CRITICAL_SECTION ) )		4711797	1					
ANR	4711981	CastTarget	CRITICAL_SECTION *		4711797	0					
ANR	4711982	CallExpression	malloc ( sizeof ( CRITICAL_SECTION ) )		4711797	1					
ANR	4711983	Callee	malloc		4711797	0					
ANR	4711984	Identifier	malloc		4711797	0					
ANR	4711985	ArgumentList	sizeof ( CRITICAL_SECTION )		4711797	1					
ANR	4711986	Argument	sizeof ( CRITICAL_SECTION )		4711797	0					
ANR	4711987	SizeofExpression	sizeof ( CRITICAL_SECTION )		4711797	0					
ANR	4711988	Sizeof	sizeof		4711797	0					
ANR	4711989	SizeofOperand	CRITICAL_SECTION		4711797	1					
ANR	4711990	ExpressionStatement	InitializeCriticalSection ( _condor_dprintf_critsec )	455:2:13828:13878	4711797	1	True				
ANR	4711991	CallExpression	InitializeCriticalSection ( _condor_dprintf_critsec )		4711797	0					
ANR	4711992	Callee	InitializeCriticalSection		4711797	0					
ANR	4711993	Identifier	InitializeCriticalSection		4711797	0					
ANR	4711994	ArgumentList	_condor_dprintf_critsec		4711797	1					
ANR	4711995	Argument	_condor_dprintf_critsec		4711797	0					
ANR	4711996	Identifier	_condor_dprintf_critsec		4711797	0					
ANR	4711997	ExpressionStatement	EnterCriticalSection ( _condor_dprintf_critsec )	457:1:13884:13929	4711797	21	True				
ANR	4711998	CallExpression	EnterCriticalSection ( _condor_dprintf_critsec )		4711797	0					
ANR	4711999	Callee	EnterCriticalSection		4711797	0					
ANR	4712000	Identifier	EnterCriticalSection		4711797	0					
ANR	4712001	ArgumentList	_condor_dprintf_critsec		4711797	1					
ANR	4712002	Argument	_condor_dprintf_critsec		4711797	0					
ANR	4712003	Identifier	_condor_dprintf_critsec		4711797	0					
ANR	4712004	ExpressionStatement	saved_errno = errno	468:1:14275:14294	4711797	22	True				
ANR	4712005	AssignmentExpression	saved_errno = errno		4711797	0		=			
ANR	4712006	Identifier	saved_errno		4711797	0					
ANR	4712007	Identifier	errno		4711797	1					
ANR	4712008	IfStatement	if ( get_priv ( ) == PRIV_USER_FINAL )		4711797	23					
ANR	4712009	Condition	get_priv ( ) == PRIV_USER_FINAL	479:5:14693:14721	4711797	0	True				
ANR	4712010	EqualityExpression	get_priv ( ) == PRIV_USER_FINAL		4711797	0		==			
ANR	4712011	CallExpression	get_priv ( )		4711797	0					
ANR	4712012	Callee	get_priv		4711797	0					
ANR	4712013	Identifier	get_priv		4711797	0					
ANR	4712014	ArgumentList			4711797	1					
ANR	4712015	Identifier	PRIV_USER_FINAL		4711797	1					
ANR	4712016	CompoundStatement		91:36:2954:2954	4711797	1					
ANR	4712017	GotoStatement	goto cleanup ;	482:2:14838:14850	4711797	0	True				
ANR	4712018	Identifier	cleanup		4711797	0					
ANR	4712019	CompoundStatement		98:9:3098:3126	4711797	24					
ANR	4712020	Statement	static	486:2:14861:14866	4711797	0	True				
ANR	4712021	IdentifierDeclStatement	int in_nonreentrant_part = 0 ;	486:9:14868:14896	4711797	1	True				
ANR	4712022	IdentifierDecl	in_nonreentrant_part = 0		4711797	0					
ANR	4712023	IdentifierDeclType	int		4711797	0					
ANR	4712024	Identifier	in_nonreentrant_part		4711797	1					
ANR	4712025	AssignmentExpression	in_nonreentrant_part = 0		4711797	2		=			
ANR	4712026	Identifier	in_nonreentrant_part		4711797	0					
ANR	4712027	PrimaryExpression	0		4711797	1					
ANR	4712028	IfStatement	if ( in_nonreentrant_part )		4711797	2					
ANR	4712029	Condition	in_nonreentrant_part	487:6:14904:14923	4711797	0	True				
ANR	4712030	Identifier	in_nonreentrant_part		4711797	0					
ANR	4712031	CompoundStatement		99:29:3157:3157	4711797	1					
ANR	4712032	GotoStatement	goto cleanup ;	494:3:15207:15219	4711797	0	True				
ANR	4712033	Identifier	cleanup		4711797	0					
ANR	4712034	ExpressionStatement	in_nonreentrant_part = 1	496:2:15227:15251	4711797	3	True				
ANR	4712035	AssignmentExpression	in_nonreentrant_part = 1		4711797	0		=			
ANR	4712036	Identifier	in_nonreentrant_part		4711797	0					
ANR	4712037	PrimaryExpression	1		4711797	1					
ANR	4712038	ExpressionStatement	"priv = _set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"	499:2:15313:15365	4711797	4	True				
ANR	4712039	AssignmentExpression	"priv = _set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"		4711797	0		=			
ANR	4712040	Identifier	priv		4711797	0					
ANR	4712041	CallExpression	"_set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"		4711797	1					
ANR	4712042	Callee	_set_priv		4711797	0					
ANR	4712043	Identifier	_set_priv		4711797	0					
ANR	4712044	ArgumentList	PRIV_CONDOR		4711797	1					
ANR	4712045	Argument	PRIV_CONDOR		4711797	0					
ANR	4712046	Identifier	PRIV_CONDOR		4711797	0					
ANR	4712047	Argument	__FILE__		4711797	1					
ANR	4712048	Identifier	__FILE__		4711797	0					
ANR	4712049	Argument	__LINE__		4711797	2					
ANR	4712050	Identifier	__LINE__		4711797	0					
ANR	4712051	Argument	0		4711797	3					
ANR	4712052	PrimaryExpression	0		4711797	0					
ANR	4712053	ExpressionStatement	"memset ( ( void * ) & clock_now , 0 , sizeof ( time_t ) )"	503:2:15460:15502	4711797	5	True				
ANR	4712054	CallExpression	"memset ( ( void * ) & clock_now , 0 , sizeof ( time_t ) )"		4711797	0					
ANR	4712055	Callee	memset		4711797	0					
ANR	4712056	Identifier	memset		4711797	0					
ANR	4712057	ArgumentList	( void * ) & clock_now		4711797	1					
ANR	4712058	Argument	( void * ) & clock_now		4711797	0					
ANR	4712059	CastExpression	( void * ) & clock_now		4711797	0					
ANR	4712060	CastTarget	void *		4711797	0					
ANR	4712061	UnaryOperationExpression	& clock_now		4711797	1					
ANR	4712062	UnaryOperator	&		4711797	0					
ANR	4712063	Identifier	clock_now		4711797	1					
ANR	4712064	Argument	0		4711797	1					
ANR	4712065	PrimaryExpression	0		4711797	0					
ANR	4712066	Argument	sizeof ( time_t )		4711797	2					
ANR	4712067	SizeofExpression	sizeof ( time_t )		4711797	0					
ANR	4712068	Sizeof	sizeof		4711797	0					
ANR	4712069	SizeofOperand	time_t		4711797	1					
ANR	4712070	ExpressionStatement	( void ) time ( & clock_now )	504:2:15540:15565	4711797	6	True				
ANR	4712071	CastExpression	( void ) time ( & clock_now )		4711797	0					
ANR	4712072	CastTarget	void		4711797	0					
ANR	4712073	CallExpression	time ( & clock_now )		4711797	1					
ANR	4712074	Callee	time		4711797	0					
ANR	4712075	Identifier	time		4711797	0					
ANR	4712076	ArgumentList	& clock_now		4711797	1					
ANR	4712077	Argument	& clock_now		4711797	0					
ANR	4712078	UnaryOperationExpression	& clock_now		4711797	0					
ANR	4712079	UnaryOperator	&		4711797	0					
ANR	4712080	Identifier	clock_now		4711797	1					
ANR	4712081	IfStatement	if ( ! DebugUseTimestamps )		4711797	7					
ANR	4712082	Condition	! DebugUseTimestamps	505:7:15574:15593	4711797	0	True				
ANR	4712083	UnaryOperationExpression	! DebugUseTimestamps		4711797	0					
ANR	4712084	UnaryOperator	!		4711797	0					
ANR	4712085	Identifier	DebugUseTimestamps		4711797	1					
ANR	4712086	CompoundStatement		117:30:3827:3827	4711797	1					
ANR	4712087	ExpressionStatement	tm = localtime ( & clock_now )	506:3:15602:15630	4711797	0	True				
ANR	4712088	AssignmentExpression	tm = localtime ( & clock_now )		4711797	0		=			
ANR	4712089	Identifier	tm		4711797	0					
ANR	4712090	CallExpression	localtime ( & clock_now )		4711797	1					
ANR	4712091	Callee	localtime		4711797	0					
ANR	4712092	Identifier	localtime		4711797	0					
ANR	4712093	ArgumentList	& clock_now		4711797	1					
ANR	4712094	Argument	& clock_now		4711797	0					
ANR	4712095	UnaryOperationExpression	& clock_now		4711797	0					
ANR	4712096	UnaryOperator	&		4711797	0					
ANR	4712097	Identifier	clock_now		4711797	1					
ANR	4712098	IfStatement	if ( ! DebugLogs -> size ( ) )		4711797	8					
ANR	4712099	Condition	! DebugLogs -> size ( )	511:5:15750:15767	4711797	0	True				
ANR	4712100	UnaryOperationExpression	! DebugLogs -> size ( )		4711797	0					
ANR	4712101	UnaryOperator	!		4711797	0					
ANR	4712102	CallExpression	DebugLogs -> size ( )		4711797	1					
ANR	4712103	Callee	DebugLogs -> size		4711797	0					
ANR	4712104	PtrMemberAccess	DebugLogs -> size		4711797	0					
ANR	4712105	Identifier	DebugLogs		4711797	0					
ANR	4712106	Identifier	size		4711797	1					
ANR	4712107	ArgumentList			4711797	1					
ANR	4712108	CompoundStatement		127:3:4050:4066	4711797	1					
ANR	4712109	ExpressionStatement	debug_file_ptr = stderr	513:3:15777:15800	4711797	0	True				
ANR	4712110	AssignmentExpression	debug_file_ptr = stderr		4711797	0		=			
ANR	4712111	Identifier	debug_file_ptr		4711797	0					
ANR	4712112	Identifier	stderr		4711797	1					
ANR	4712113	IdentifierDeclStatement	va_list copyargs ;	515:3:15820:15836	4711797	1	True				
ANR	4712114	IdentifierDecl	copyargs		4711797	0					
ANR	4712115	IdentifierDeclType	va_list		4711797	0					
ANR	4712116	Identifier	copyargs		4711797	1					
ANR	4712117	ExpressionStatement	"va_copy ( copyargs , args )"	516:3:15841:15864	4711797	2	True				
ANR	4712118	CallExpression	"va_copy ( copyargs , args )"		4711797	0					
ANR	4712119	Callee	va_copy		4711797	0					
ANR	4712120	Identifier	va_copy		4711797	0					
ANR	4712121	ArgumentList	copyargs		4711797	1					
ANR	4712122	Argument	copyargs		4711797	0					
ANR	4712123	Identifier	copyargs		4711797	0					
ANR	4712124	Argument	args		4711797	1					
ANR	4712125	Identifier	args		4711797	0					
ANR	4712126	ExpressionStatement	"_condor_dfprintf_va ( flags , DebugFlags , clock_now , tm , debug_file_ptr , fmt , copyargs )"	517:3:15869:15947	4711797	3	True				
ANR	4712127	CallExpression	"_condor_dfprintf_va ( flags , DebugFlags , clock_now , tm , debug_file_ptr , fmt , copyargs )"		4711797	0					
ANR	4712128	Callee	_condor_dfprintf_va		4711797	0					
ANR	4712129	Identifier	_condor_dfprintf_va		4711797	0					
ANR	4712130	ArgumentList	flags		4711797	1					
ANR	4712131	Argument	flags		4711797	0					
ANR	4712132	Identifier	flags		4711797	0					
ANR	4712133	Argument	DebugFlags		4711797	1					
ANR	4712134	Identifier	DebugFlags		4711797	0					
ANR	4712135	Argument	clock_now		4711797	2					
ANR	4712136	Identifier	clock_now		4711797	0					
ANR	4712137	Argument	tm		4711797	3					
ANR	4712138	Identifier	tm		4711797	0					
ANR	4712139	Argument	debug_file_ptr		4711797	4					
ANR	4712140	Identifier	debug_file_ptr		4711797	0					
ANR	4712141	Argument	fmt		4711797	5					
ANR	4712142	Identifier	fmt		4711797	0					
ANR	4712143	Argument	copyargs		4711797	6					
ANR	4712144	Identifier	copyargs		4711797	0					
ANR	4712145	ExpressionStatement	va_end ( copyargs )	518:3:15952:15968	4711797	4	True				
ANR	4712146	CallExpression	va_end ( copyargs )		4711797	0					
ANR	4712147	Callee	va_end		4711797	0					
ANR	4712148	Identifier	va_end		4711797	0					
ANR	4712149	ArgumentList	copyargs		4711797	1					
ANR	4712150	Argument	copyargs		4711797	0					
ANR	4712151	Identifier	copyargs		4711797	0					
ANR	4712152	ForStatement	for ( it = DebugLogs -> begin ( ) ; it < DebugLogs -> end ( ) ; it ++ )		4711797	9					
ANR	4712153	ForInit	it = DebugLogs -> begin ( ) ;	523:6:16072:16095	4711797	0	True				
ANR	4712154	AssignmentExpression	it = DebugLogs -> begin ( )		4711797	0		=			
ANR	4712155	Identifier	it		4711797	0					
ANR	4712156	CallExpression	DebugLogs -> begin ( )		4711797	1					
ANR	4712157	Callee	DebugLogs -> begin		4711797	0					
ANR	4712158	PtrMemberAccess	DebugLogs -> begin		4711797	0					
ANR	4712159	Identifier	DebugLogs		4711797	0					
ANR	4712160	Identifier	begin		4711797	1					
ANR	4712161	ArgumentList			4711797	1					
ANR	4712162	Condition	it < DebugLogs -> end ( )	523:31:16097:16117	4711797	1	True				
ANR	4712163	RelationalExpression	it < DebugLogs -> end ( )		4711797	0		<			
ANR	4712164	Identifier	it		4711797	0					
ANR	4712165	CallExpression	DebugLogs -> end ( )		4711797	1					
ANR	4712166	Callee	DebugLogs -> end		4711797	0					
ANR	4712167	PtrMemberAccess	DebugLogs -> end		4711797	0					
ANR	4712168	Identifier	DebugLogs		4711797	0					
ANR	4712169	Identifier	end		4711797	1					
ANR	4712170	ArgumentList			4711797	1					
ANR	4712171	PostIncDecOperationExpression	it ++	523:54:16120:16123	4711797	2	True				
ANR	4712172	Identifier	it		4711797	0					
ANR	4712173	IncDec	++		4711797	1					
ANR	4712174	CompoundStatement		148:3:4780:4845	4711797	3					
ANR	4712175	IdentifierDeclStatement	int debugFlags = ( * it ) . debugFlags ;	525:3:16133:16166	4711797	0	True				
ANR	4712176	IdentifierDecl	debugFlags = ( * it ) . debugFlags		4711797	0					
ANR	4712177	IdentifierDeclType	int		4711797	0					
ANR	4712178	Identifier	debugFlags		4711797	1					
ANR	4712179	AssignmentExpression	debugFlags = ( * it ) . debugFlags		4711797	2		=			
ANR	4712180	Identifier	debugFlags		4711797	0					
ANR	4712181	MemberAccess	( * it ) . debugFlags		4711797	1					
ANR	4712182	UnaryOperationExpression	* it		4711797	0					
ANR	4712183	UnaryOperator	*		4711797	0					
ANR	4712184	Identifier	it		4711797	1					
ANR	4712185	Identifier	debugFlags		4711797	1					
ANR	4712186	IfStatement	if ( debugFlags && ! ( debugFlags & flags ) )		4711797	1					
ANR	4712187	Condition	debugFlags && ! ( debugFlags & flags )	531:7:16399:16433	4711797	0	True				
ANR	4712188	AndExpression	debugFlags && ! ( debugFlags & flags )		4711797	0		&&			
ANR	4712189	Identifier	debugFlags		4711797	0					
ANR	4712190	UnaryOperationExpression	! ( debugFlags & flags )		4711797	1					
ANR	4712191	UnaryOperator	!		4711797	0					
ANR	4712192	BitAndExpression	debugFlags & flags		4711797	1		&			
ANR	4712193	Identifier	debugFlags		4711797	0					
ANR	4712194	Identifier	flags		4711797	1					
ANR	4712195	ContinueStatement	continue ;	532:4:16440:16448	4711797	1	True				
ANR	4712196	IdentifierDeclStatement	bool dont_panic = ( debugFlags != 0 ) || DebugContinueOnOpenFailure ;	536:3:16550:16615	4711797	2	True				
ANR	4712197	IdentifierDecl	dont_panic = ( debugFlags != 0 ) || DebugContinueOnOpenFailure		4711797	0					
ANR	4712198	IdentifierDeclType	bool		4711797	0					
ANR	4712199	Identifier	dont_panic		4711797	1					
ANR	4712200	AssignmentExpression	dont_panic = ( debugFlags != 0 ) || DebugContinueOnOpenFailure		4711797	2		=			
ANR	4712201	Identifier	dont_panic		4711797	0					
ANR	4712202	OrExpression	( debugFlags != 0 ) || DebugContinueOnOpenFailure		4711797	1		||			
ANR	4712203	EqualityExpression	debugFlags != 0		4711797	0		!=			
ANR	4712204	Identifier	debugFlags		4711797	0					
ANR	4712205	PrimaryExpression	0		4711797	1					
ANR	4712206	Identifier	DebugContinueOnOpenFailure		4711797	1					
ANR	4712207	ExpressionStatement	"debug_file_ptr = debug_lock_it ( & ( * it ) , NULL , 0 , dont_panic )"	539:3:16657:16716	4711797	3	True				
ANR	4712208	AssignmentExpression	"debug_file_ptr = debug_lock_it ( & ( * it ) , NULL , 0 , dont_panic )"		4711797	0		=			
ANR	4712209	Identifier	debug_file_ptr		4711797	0					
ANR	4712210	CallExpression	"debug_lock_it ( & ( * it ) , NULL , 0 , dont_panic )"		4711797	1					
ANR	4712211	Callee	debug_lock_it		4711797	0					
ANR	4712212	Identifier	debug_lock_it		4711797	0					
ANR	4712213	ArgumentList	& ( * it )		4711797	1					
ANR	4712214	Argument	& ( * it )		4711797	0					
ANR	4712215	UnaryOperationExpression	& ( * it )		4711797	0					
ANR	4712216	UnaryOperator	&		4711797	0					
ANR	4712217	UnaryOperationExpression	* it		4711797	1					
ANR	4712218	UnaryOperator	*		4711797	0					
ANR	4712219	Identifier	it		4711797	1					
ANR	4712220	Argument	NULL		4711797	1					
ANR	4712221	Identifier	NULL		4711797	0					
ANR	4712222	Argument	0		4711797	2					
ANR	4712223	PrimaryExpression	0		4711797	0					
ANR	4712224	Argument	dont_panic		4711797	3					
ANR	4712225	Identifier	dont_panic		4711797	0					
ANR	4712226	IfStatement	if ( debug_file_ptr )		4711797	4					
ANR	4712227	Condition	debug_file_ptr	540:7:16725:16738	4711797	0	True				
ANR	4712228	Identifier	debug_file_ptr		4711797	0					
ANR	4712229	CompoundStatement		154:4:4992:5008	4711797	1					
ANR	4712230	IdentifierDeclStatement	va_list copyargs ;	542:4:16762:16778	4711797	0	True				
ANR	4712231	IdentifierDecl	copyargs		4711797	0					
ANR	4712232	IdentifierDeclType	va_list		4711797	0					
ANR	4712233	Identifier	copyargs		4711797	1					
ANR	4712234	ExpressionStatement	"va_copy ( copyargs , args )"	543:4:16784:16807	4711797	1	True				
ANR	4712235	CallExpression	"va_copy ( copyargs , args )"		4711797	0					
ANR	4712236	Callee	va_copy		4711797	0					
ANR	4712237	Identifier	va_copy		4711797	0					
ANR	4712238	ArgumentList	copyargs		4711797	1					
ANR	4712239	Argument	copyargs		4711797	0					
ANR	4712240	Identifier	copyargs		4711797	0					
ANR	4712241	Argument	args		4711797	1					
ANR	4712242	Identifier	args		4711797	0					
ANR	4712243	ExpressionStatement	"_condor_dfprintf_va ( flags , DebugFlags , clock_now , tm , debug_file_ptr , fmt , copyargs )"	544:4:16813:16891	4711797	2	True				
ANR	4712244	CallExpression	"_condor_dfprintf_va ( flags , DebugFlags , clock_now , tm , debug_file_ptr , fmt , copyargs )"		4711797	0					
ANR	4712245	Callee	_condor_dfprintf_va		4711797	0					
ANR	4712246	Identifier	_condor_dfprintf_va		4711797	0					
ANR	4712247	ArgumentList	flags		4711797	1					
ANR	4712248	Argument	flags		4711797	0					
ANR	4712249	Identifier	flags		4711797	0					
ANR	4712250	Argument	DebugFlags		4711797	1					
ANR	4712251	Identifier	DebugFlags		4711797	0					
ANR	4712252	Argument	clock_now		4711797	2					
ANR	4712253	Identifier	clock_now		4711797	0					
ANR	4712254	Argument	tm		4711797	3					
ANR	4712255	Identifier	tm		4711797	0					
ANR	4712256	Argument	debug_file_ptr		4711797	4					
ANR	4712257	Identifier	debug_file_ptr		4711797	0					
ANR	4712258	Argument	fmt		4711797	5					
ANR	4712259	Identifier	fmt		4711797	0					
ANR	4712260	Argument	copyargs		4711797	6					
ANR	4712261	Identifier	copyargs		4711797	0					
ANR	4712262	ExpressionStatement	va_end ( copyargs )	545:4:16897:16913	4711797	3	True				
ANR	4712263	CallExpression	va_end ( copyargs )		4711797	0					
ANR	4712264	Callee	va_end		4711797	0					
ANR	4712265	Identifier	va_end		4711797	0					
ANR	4712266	ArgumentList	copyargs		4711797	1					
ANR	4712267	Argument	copyargs		4711797	0					
ANR	4712268	Identifier	copyargs		4711797	0					
ANR	4712269	ExpressionStatement	debug_unlock_it ( & ( * it ) )	551:3:17017:17040	4711797	5	True				
ANR	4712270	CallExpression	debug_unlock_it ( & ( * it ) )		4711797	0					
ANR	4712271	Callee	debug_unlock_it		4711797	0					
ANR	4712272	Identifier	debug_unlock_it		4711797	0					
ANR	4712273	ArgumentList	& ( * it )		4711797	1					
ANR	4712274	Argument	& ( * it )		4711797	0					
ANR	4712275	UnaryOperationExpression	& ( * it )		4711797	0					
ANR	4712276	UnaryOperator	&		4711797	0					
ANR	4712277	UnaryOperationExpression	* it		4711797	1					
ANR	4712278	UnaryOperator	*		4711797	0					
ANR	4712279	Identifier	it		4711797	1					
ANR	4712280	ExpressionStatement	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"	555:2:17077:17115	4711797	10	True				
ANR	4712281	CallExpression	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"		4711797	0					
ANR	4712282	Callee	_set_priv		4711797	0					
ANR	4712283	Identifier	_set_priv		4711797	0					
ANR	4712284	ArgumentList	priv		4711797	1					
ANR	4712285	Argument	priv		4711797	0					
ANR	4712286	Identifier	priv		4711797	0					
ANR	4712287	Argument	__FILE__		4711797	1					
ANR	4712288	Identifier	__FILE__		4711797	0					
ANR	4712289	Argument	__LINE__		4711797	2					
ANR	4712290	Identifier	__LINE__		4711797	0					
ANR	4712291	Argument	0		4711797	3					
ANR	4712292	PrimaryExpression	0		4711797	0					
ANR	4712293	ExpressionStatement	dprintf_count += 1	557:8:17126:17144	4711797	11	True				
ANR	4712294	AssignmentExpression	dprintf_count += 1		4711797	0		+=			
ANR	4712295	Identifier	dprintf_count		4711797	0					
ANR	4712296	PrimaryExpression	1		4711797	1					
ANR	4712297	ExpressionStatement	in_nonreentrant_part = 0	559:2:17149:17173	4711797	12	True				
ANR	4712298	AssignmentExpression	in_nonreentrant_part = 0		4711797	0		=			
ANR	4712299	Identifier	in_nonreentrant_part		4711797	0					
ANR	4712300	PrimaryExpression	0		4711797	1					
ANR	4712301	Label	cleanup :	562:1:17180:17187	4711797	25	True				
ANR	4712302	Identifier	cleanup		4711797	0					
ANR	4712303	ExpressionStatement	errno = saved_errno	564:1:17191:17210	4711797	26	True				
ANR	4712304	AssignmentExpression	errno = saved_errno		4711797	0		=			
ANR	4712305	Identifier	errno		4711797	0					
ANR	4712306	Identifier	saved_errno		4711797	1					
ANR	4712307	ExpressionStatement	( void ) umask ( old_umask )	568:1:17287:17311	4711797	27	True				
ANR	4712308	CastExpression	( void ) umask ( old_umask )		4711797	0					
ANR	4712309	CastTarget	void		4711797	0					
ANR	4712310	CallExpression	umask ( old_umask )		4711797	1					
ANR	4712311	Callee	umask		4711797	0					
ANR	4712312	Identifier	umask		4711797	0					
ANR	4712313	ArgumentList	old_umask		4711797	1					
ANR	4712314	Argument	old_umask		4711797	0					
ANR	4712315	Identifier	old_umask		4711797	0					
ANR	4712316	ExpressionStatement	LeaveCriticalSection ( _condor_dprintf_critsec )	573:1:17406:17451	4711797	28	True				
ANR	4712317	CallExpression	LeaveCriticalSection ( _condor_dprintf_critsec )		4711797	0					
ANR	4712318	Callee	LeaveCriticalSection		4711797	0					
ANR	4712319	Identifier	LeaveCriticalSection		4711797	0					
ANR	4712320	ArgumentList	_condor_dprintf_critsec		4711797	1					
ANR	4712321	Argument	_condor_dprintf_critsec		4711797	0					
ANR	4712322	Identifier	_condor_dprintf_critsec		4711797	0					
ANR	4712323	ExpressionStatement	"( void ) sigprocmask ( SIG_SETMASK , & omask , 0 )"	582:1:17709:17753	4711797	29	True				
ANR	4712324	CastExpression	"( void ) sigprocmask ( SIG_SETMASK , & omask , 0 )"		4711797	0					
ANR	4712325	CastTarget	void		4711797	0					
ANR	4712326	CallExpression	"sigprocmask ( SIG_SETMASK , & omask , 0 )"		4711797	1					
ANR	4712327	Callee	sigprocmask		4711797	0					
ANR	4712328	Identifier	sigprocmask		4711797	0					
ANR	4712329	ArgumentList	SIG_SETMASK		4711797	1					
ANR	4712330	Argument	SIG_SETMASK		4711797	0					
ANR	4712331	Identifier	SIG_SETMASK		4711797	0					
ANR	4712332	Argument	& omask		4711797	1					
ANR	4712333	UnaryOperationExpression	& omask		4711797	0					
ANR	4712334	UnaryOperator	&		4711797	0					
ANR	4712335	Identifier	omask		4711797	1					
ANR	4712336	Argument	0		4711797	2					
ANR	4712337	PrimaryExpression	0		4711797	0					
ANR	4712338	ReturnType	void		4711797	1					
ANR	4712339	Identifier	_condor_dprintf_va		4711797	2					
ANR	4712340	ParameterList	"int flags , const char * fmt , va_list args"		4711797	3					
ANR	4712341	Parameter	int flags	388:20:11726:11734	4711797	0	True				
ANR	4712342	ParameterType	int		4711797	0					
ANR	4712343	Identifier	flags		4711797	1					
ANR	4712344	Parameter	const char * fmt	388:31:11737:11751	4711797	1	True				
ANR	4712345	ParameterType	const char *		4711797	0					
ANR	4712346	Identifier	fmt		4711797	1					
ANR	4712347	Parameter	va_list args	388:48:11754:11765	4711797	2	True				
ANR	4712348	ParameterType	va_list		4711797	0					
ANR	4712349	Identifier	args		4711797	1					
ANR	4712350	CFGEntryNode	ENTRY		4711797		True				
ANR	4712351	CFGExitNode	EXIT		4711797		True				
ANR	4712352	Symbol	localtime		4711797						
ANR	4712353	Symbol	_set_priv		4711797						
ANR	4712354	Symbol	DebugContinueOnOpenFailure		4711797						
ANR	4712355	Symbol	fmt		4711797						
ANR	4712356	Symbol	copyargs		4711797						
ANR	4712357	Symbol	DprintfBroken		4711797						
ANR	4712358	Symbol	old_umask		4711797						
ANR	4712359	Symbol	omask		4711797						
ANR	4712360	Symbol	SIGTRAP		4711797						
ANR	4712361	Symbol	debugFlags		4711797						
ANR	4712362	Symbol	priv		4711797						
ANR	4712363	Symbol	DebugLogs		4711797						
ANR	4712364	Symbol	DebugLogs -> size		4711797						
ANR	4712365	Symbol	SIGFPE		4711797						
ANR	4712366	Symbol	errno		4711797						
ANR	4712367	Symbol	NULL		4711797						
ANR	4712368	Symbol	__FILE__		4711797						
ANR	4712369	Symbol	DebugFlags		4711797						
ANR	4712370	Symbol	it		4711797						
ANR	4712371	Symbol	stderr		4711797						
ANR	4712372	Symbol	dont_panic		4711797						
ANR	4712373	Symbol	( * it ) . debugFlags		4711797						
ANR	4712374	Symbol	SIGSEGV		4711797						
ANR	4712375	Symbol	get_priv		4711797						
ANR	4712376	Symbol	in_nonreentrant_part		4711797						
ANR	4712377	Symbol	DebugLogs -> end		4711797						
ANR	4712378	Symbol	dprintf_count		4711797						
ANR	4712379	Symbol	& clock_now		4711797						
ANR	4712380	Symbol	umask		4711797						
ANR	4712381	Symbol	SIGBUS		4711797						
ANR	4712382	Symbol	DebugUseTimestamps		4711797						
ANR	4712383	Symbol	flags		4711797						
ANR	4712384	Symbol	_condor_dprintf_works		4711797						
ANR	4712385	Symbol	PRIV_USER_FINAL		4711797						
ANR	4712386	Symbol	* DebugLogs		4711797						
ANR	4712387	Symbol	mask		4711797						
ANR	4712388	Symbol	malloc		4711797						
ANR	4712389	Symbol	& mask		4711797						
ANR	4712390	Symbol	SIG_SETMASK		4711797						
ANR	4712391	Symbol	_condor_dprintf_critsec		4711797						
ANR	4712392	Symbol	SIGABRT		4711797						
ANR	4712393	Symbol	clock_now		4711797						
ANR	4712394	Symbol	saved_errno		4711797						
ANR	4712395	Symbol	debug_file_ptr		4711797						
ANR	4712396	Symbol	__LINE__		4711797						
ANR	4712397	Symbol	args		4711797						
ANR	4712398	Symbol	SIGILL		4711797						
ANR	4712399	Symbol	* it		4711797						
ANR	4712400	Symbol	& omask		4711797						
ANR	4712401	Symbol	tm		4711797						
ANR	4712402	Symbol	debug_lock_it		4711797						
ANR	4712403	Symbol	DebugLogs -> begin		4711797						
ANR	4712404	Symbol	PRIV_CONDOR		4711797						
ANR	4712405	Symbol	SIG_BLOCK		4711797						
ANR	4712406	Function	_condor_open_lock_file	586:0:17765:19735							
ANR	4712407	FunctionDef	"_condor_open_lock_file (const char * filename , int flags , mode_t perm)"		4712406	0					
ANR	4712408	CompoundStatement		588:0:17837:19735	4712406	0					
ANR	4712409	IdentifierDeclStatement	int retry = 0 ;	589:1:17840:17853	4712406	0	True				
ANR	4712410	IdentifierDecl	retry = 0		4712406	0					
ANR	4712411	IdentifierDeclType	int		4712406	0					
ANR	4712412	Identifier	retry		4712406	1					
ANR	4712413	AssignmentExpression	retry = 0		4712406	2		=			
ANR	4712414	Identifier	retry		4712406	0					
ANR	4712415	PrimaryExpression	0		4712406	1					
ANR	4712416	IdentifierDeclStatement	int save_errno = 0 ;	590:1:17856:17874	4712406	1	True				
ANR	4712417	IdentifierDecl	save_errno = 0		4712406	0					
ANR	4712418	IdentifierDeclType	int		4712406	0					
ANR	4712419	Identifier	save_errno		4712406	1					
ANR	4712420	AssignmentExpression	save_errno = 0		4712406	2		=			
ANR	4712421	Identifier	save_errno		4712406	0					
ANR	4712422	PrimaryExpression	0		4712406	1					
ANR	4712423	IdentifierDeclStatement	priv_state priv ;	591:1:17877:17892	4712406	2	True				
ANR	4712424	IdentifierDecl	priv		4712406	0					
ANR	4712425	IdentifierDeclType	priv_state		4712406	0					
ANR	4712426	Identifier	priv		4712406	1					
ANR	4712427	IdentifierDeclStatement	char * dirpath = NULL ;	592:1:17895:17916	4712406	3	True				
ANR	4712428	IdentifierDecl	* dirpath = NULL		4712406	0					
ANR	4712429	IdentifierDeclType	char *		4712406	0					
ANR	4712430	Identifier	dirpath		4712406	1					
ANR	4712431	AssignmentExpression	* dirpath = NULL		4712406	2		=			
ANR	4712432	Identifier	NULL		4712406	0					
ANR	4712433	Identifier	NULL		4712406	1					
ANR	4712434	IdentifierDeclStatement	int lock_fd ;	593:1:17919:17930	4712406	4	True				
ANR	4712435	IdentifierDecl	lock_fd		4712406	0					
ANR	4712436	IdentifierDeclType	int		4712406	0					
ANR	4712437	Identifier	lock_fd		4712406	1					
ANR	4712438	IfStatement	if ( ! filename )		4712406	5					
ANR	4712439	Condition	! filename	595:5:17938:17946	4712406	0	True				
ANR	4712440	UnaryOperationExpression	! filename		4712406	0					
ANR	4712441	UnaryOperator	!		4712406	0					
ANR	4712442	Identifier	filename		4712406	1					
ANR	4712443	CompoundStatement		8:17:112:112	4712406	1					
ANR	4712444	ReturnStatement	return - 1 ;	596:2:17954:17963	4712406	0	True				
ANR	4712445	UnaryOperationExpression	- 1		4712406	0					
ANR	4712446	UnaryOperator	-		4712406	0					
ANR	4712447	PrimaryExpression	1		4712406	1					
ANR	4712448	ExpressionStatement	"priv = _set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"	599:1:17970:18022	4712406	6	True				
ANR	4712449	AssignmentExpression	"priv = _set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"		4712406	0		=			
ANR	4712450	Identifier	priv		4712406	0					
ANR	4712451	CallExpression	"_set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"		4712406	1					
ANR	4712452	Callee	_set_priv		4712406	0					
ANR	4712453	Identifier	_set_priv		4712406	0					
ANR	4712454	ArgumentList	PRIV_CONDOR		4712406	1					
ANR	4712455	Argument	PRIV_CONDOR		4712406	0					
ANR	4712456	Identifier	PRIV_CONDOR		4712406	0					
ANR	4712457	Argument	__FILE__		4712406	1					
ANR	4712458	Identifier	__FILE__		4712406	0					
ANR	4712459	Argument	__LINE__		4712406	2					
ANR	4712460	Identifier	__LINE__		4712406	0					
ANR	4712461	Argument	0		4712406	3					
ANR	4712462	PrimaryExpression	0		4712406	0					
ANR	4712463	ExpressionStatement	"lock_fd = safe_open_wrapper_follow ( filename , flags , perm )"	600:1:18025:18080	4712406	7	True				
ANR	4712464	AssignmentExpression	"lock_fd = safe_open_wrapper_follow ( filename , flags , perm )"		4712406	0		=			
ANR	4712465	Identifier	lock_fd		4712406	0					
ANR	4712466	CallExpression	"safe_open_wrapper_follow ( filename , flags , perm )"		4712406	1					
ANR	4712467	Callee	safe_open_wrapper_follow		4712406	0					
ANR	4712468	Identifier	safe_open_wrapper_follow		4712406	0					
ANR	4712469	ArgumentList	filename		4712406	1					
ANR	4712470	Argument	filename		4712406	0					
ANR	4712471	Identifier	filename		4712406	0					
ANR	4712472	Argument	flags		4712406	1					
ANR	4712473	Identifier	flags		4712406	0					
ANR	4712474	Argument	perm		4712406	2					
ANR	4712475	Identifier	perm		4712406	0					
ANR	4712476	IfStatement	if ( lock_fd < 0 )		4712406	8					
ANR	4712477	Condition	lock_fd < 0	601:5:18087:18097	4712406	0	True				
ANR	4712478	RelationalExpression	lock_fd < 0		4712406	0		<			
ANR	4712479	Identifier	lock_fd		4712406	0					
ANR	4712480	PrimaryExpression	0		4712406	1					
ANR	4712481	CompoundStatement		14:19:263:263	4712406	1					
ANR	4712482	ExpressionStatement	save_errno = errno	602:2:18105:18123	4712406	0	True				
ANR	4712483	AssignmentExpression	save_errno = errno		4712406	0		=			
ANR	4712484	Identifier	save_errno		4712406	0					
ANR	4712485	Identifier	errno		4712406	1					
ANR	4712486	IfStatement	if ( save_errno == ENOENT )		4712406	1					
ANR	4712487	Condition	save_errno == ENOENT	603:6:18131:18150	4712406	0	True				
ANR	4712488	EqualityExpression	save_errno == ENOENT		4712406	0		==			
ANR	4712489	Identifier	save_errno		4712406	0					
ANR	4712490	Identifier	ENOENT		4712406	1					
ANR	4712491	CompoundStatement		16:29:316:316	4712406	1					
ANR	4712492	ExpressionStatement	dirpath = condor_dirname ( filename )	610:3:18351:18387	4712406	0	True				
ANR	4712493	AssignmentExpression	dirpath = condor_dirname ( filename )		4712406	0		=			
ANR	4712494	Identifier	dirpath		4712406	0					
ANR	4712495	CallExpression	condor_dirname ( filename )		4712406	1					
ANR	4712496	Callee	condor_dirname		4712406	0					
ANR	4712497	Identifier	condor_dirname		4712406	0					
ANR	4712498	ArgumentList	filename		4712406	1					
ANR	4712499	Argument	filename		4712406	0					
ANR	4712500	Identifier	filename		4712406	0					
ANR	4712501	ExpressionStatement	errno = 0	611:3:18392:18401	4712406	1	True				
ANR	4712502	AssignmentExpression	errno = 0		4712406	0		=			
ANR	4712503	Identifier	errno		4712406	0					
ANR	4712504	PrimaryExpression	0		4712406	1					
ANR	4712505	IfStatement	"if ( mkdir ( dirpath , 0777 ) < 0 )"		4712406	2					
ANR	4712506	Condition	"mkdir ( dirpath , 0777 ) < 0"	612:7:18410:18433	4712406	0	True				
ANR	4712507	RelationalExpression	"mkdir ( dirpath , 0777 ) < 0"		4712406	0		<			
ANR	4712508	CallExpression	"mkdir ( dirpath , 0777 )"		4712406	0					
ANR	4712509	Callee	mkdir		4712406	0					
ANR	4712510	Identifier	mkdir		4712406	0					
ANR	4712511	ArgumentList	dirpath		4712406	1					
ANR	4712512	Argument	dirpath		4712406	0					
ANR	4712513	Identifier	dirpath		4712406	0					
ANR	4712514	Argument	0777		4712406	1					
ANR	4712515	PrimaryExpression	0777		4712406	0					
ANR	4712516	PrimaryExpression	0		4712406	1					
ANR	4712517	CompoundStatement		25:34:599:599	4712406	1					
ANR	4712518	IfStatement	if ( errno == EACCES )		4712406	0					
ANR	4712519	Condition	errno == EACCES	613:8:18447:18461	4712406	0	True				
ANR	4712520	EqualityExpression	errno == EACCES		4712406	0		==			
ANR	4712521	Identifier	errno		4712406	0					
ANR	4712522	Identifier	EACCES		4712406	1					
ANR	4712523	CompoundStatement		26:26:627:627	4712406	1					
ANR	4712524	ExpressionStatement	"_set_priv ( PRIV_ROOT , __FILE__ , __LINE__ , 0 )"	615:5:18497:18540	4712406	0	True				
ANR	4712525	CallExpression	"_set_priv ( PRIV_ROOT , __FILE__ , __LINE__ , 0 )"		4712406	0					
ANR	4712526	Callee	_set_priv		4712406	0					
ANR	4712527	Identifier	_set_priv		4712406	0					
ANR	4712528	ArgumentList	PRIV_ROOT		4712406	1					
ANR	4712529	Argument	PRIV_ROOT		4712406	0					
ANR	4712530	Identifier	PRIV_ROOT		4712406	0					
ANR	4712531	Argument	__FILE__		4712406	1					
ANR	4712532	Identifier	__FILE__		4712406	0					
ANR	4712533	Argument	__LINE__		4712406	2					
ANR	4712534	Identifier	__LINE__		4712406	0					
ANR	4712535	Argument	0		4712406	3					
ANR	4712536	PrimaryExpression	0		4712406	0					
ANR	4712537	IfStatement	"if ( mkdir ( dirpath , 0777 ) < 0 )"		4712406	1					
ANR	4712538	Condition	"mkdir ( dirpath , 0777 ) < 0"	616:9:18551:18574	4712406	0	True				
ANR	4712539	RelationalExpression	"mkdir ( dirpath , 0777 ) < 0"		4712406	0		<			
ANR	4712540	CallExpression	"mkdir ( dirpath , 0777 )"		4712406	0					
ANR	4712541	Callee	mkdir		4712406	0					
ANR	4712542	Identifier	mkdir		4712406	0					
ANR	4712543	ArgumentList	dirpath		4712406	1					
ANR	4712544	Argument	dirpath		4712406	0					
ANR	4712545	Identifier	dirpath		4712406	0					
ANR	4712546	Argument	0777		4712406	1					
ANR	4712547	PrimaryExpression	0777		4712406	0					
ANR	4712548	PrimaryExpression	0		4712406	1					
ANR	4712549	CompoundStatement		29:36:740:740	4712406	1					
ANR	4712550	Statement	fprintf	618:6:18623:18629	4712406	0	True				
ANR	4712551	Statement	(	618:13:18630:18630	4712406	1	True				
ANR	4712552	Statement	stderr	618:15:18632:18637	4712406	2	True				
ANR	4712553	Statement	","	618:21:18638:18638	4712406	3	True				
ANR	4712554	Statement	"""Can't create lock directory \\""%s\\"", """	618:23:18640:18677	4712406	4	True				
ANR	4712555	Statement	"""errno: %d (%s)\\n"""	619:9:18688:18705	4712406	5	True				
ANR	4712556	Statement	","	619:27:18706:18706	4712406	6	True				
ANR	4712557	Statement	dirpath	619:29:18708:18714	4712406	7	True				
ANR	4712558	Statement	","	619:36:18715:18715	4712406	8	True				
ANR	4712559	Statement	errno	619:38:18717:18721	4712406	9	True				
ANR	4712560	Statement	","	619:43:18722:18722	4712406	10	True				
ANR	4712561	Statement	strerror	620:9:18734:18741	4712406	11	True				
ANR	4712562	Statement	(	620:17:18742:18742	4712406	12	True				
ANR	4712563	Statement	errno	620:18:18743:18747	4712406	13	True				
ANR	4712564	Statement	)	620:23:18748:18748	4712406	14	True				
ANR	4712565	Statement	)	620:25:18750:18750	4712406	15	True				
ANR	4712566	ExpressionStatement		620:26:18751:18751	4712406	16	True				
ANR	4712567	ElseStatement	else		4712406	0					
ANR	4712568	CompoundStatement		34:12:927:927	4712406	0					
ANR	4712569	ExpressionStatement	"chown ( dirpath , get_condor_uid ( ) , get_condor_gid ( ) )"	626:6:18917:18979	4712406	0	True				
ANR	4712570	CallExpression	"chown ( dirpath , get_condor_uid ( ) , get_condor_gid ( ) )"		4712406	0					
ANR	4712571	Callee	chown		4712406	0					
ANR	4712572	Identifier	chown		4712406	0					
ANR	4712573	ArgumentList	dirpath		4712406	1					
ANR	4712574	Argument	dirpath		4712406	0					
ANR	4712575	Identifier	dirpath		4712406	0					
ANR	4712576	Argument	get_condor_uid ( )		4712406	1					
ANR	4712577	CallExpression	get_condor_uid ( )		4712406	0					
ANR	4712578	Callee	get_condor_uid		4712406	0					
ANR	4712579	Identifier	get_condor_uid		4712406	0					
ANR	4712580	ArgumentList			4712406	1					
ANR	4712581	Argument	get_condor_gid ( )		4712406	2					
ANR	4712582	CallExpression	get_condor_gid ( )		4712406	0					
ANR	4712583	Callee	get_condor_gid		4712406	0					
ANR	4712584	Identifier	get_condor_gid		4712406	0					
ANR	4712585	ArgumentList			4712406	1					
ANR	4712586	ExpressionStatement	retry = 1	629:6:18994:19003	4712406	1	True				
ANR	4712587	AssignmentExpression	retry = 1		4712406	0		=			
ANR	4712588	Identifier	retry		4712406	0					
ANR	4712589	PrimaryExpression	1		4712406	1					
ANR	4712590	ExpressionStatement	"_set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"	631:5:19017:19062	4712406	2	True				
ANR	4712591	CallExpression	"_set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"		4712406	0					
ANR	4712592	Callee	_set_priv		4712406	0					
ANR	4712593	Identifier	_set_priv		4712406	0					
ANR	4712594	ArgumentList	PRIV_CONDOR		4712406	1					
ANR	4712595	Argument	PRIV_CONDOR		4712406	0					
ANR	4712596	Identifier	PRIV_CONDOR		4712406	0					
ANR	4712597	Argument	__FILE__		4712406	1					
ANR	4712598	Identifier	__FILE__		4712406	0					
ANR	4712599	Argument	__LINE__		4712406	2					
ANR	4712600	Identifier	__LINE__		4712406	0					
ANR	4712601	Argument	0		4712406	3					
ANR	4712602	PrimaryExpression	0		4712406	0					
ANR	4712603	ElseStatement	else		4712406	0					
ANR	4712604	CompoundStatement		45:11:1237:1237	4712406	0					
ANR	4712605	Statement	fprintf	634:5:19133:19139	4712406	0	True				
ANR	4712606	Statement	(	634:12:19140:19140	4712406	1	True				
ANR	4712607	Statement	stderr	634:14:19142:19147	4712406	2	True				
ANR	4712608	Statement	","	634:20:19148:19148	4712406	3	True				
ANR	4712609	Statement	"""Can't create lock directory: \\""%s\\"""""	634:22:19150:19186	4712406	4	True				
ANR	4712610	Statement	"""errno: %d (%s)\\n"""	635:8:19196:19213	4712406	5	True				
ANR	4712611	Statement	","	635:26:19214:19214	4712406	6	True				
ANR	4712612	Statement	dirpath	635:28:19216:19222	4712406	7	True				
ANR	4712613	Statement	","	635:35:19223:19223	4712406	8	True				
ANR	4712614	Statement	errno	635:37:19225:19229	4712406	9	True				
ANR	4712615	Statement	","	635:42:19230:19230	4712406	10	True				
ANR	4712616	Statement	strerror	636:8:19241:19248	4712406	11	True				
ANR	4712617	Statement	(	636:16:19249:19249	4712406	12	True				
ANR	4712618	Statement	errno	636:17:19250:19254	4712406	13	True				
ANR	4712619	Statement	)	636:22:19255:19255	4712406	14	True				
ANR	4712620	Statement	)	636:24:19257:19257	4712406	15	True				
ANR	4712621	ExpressionStatement		636:25:19258:19258	4712406	16	True				
ANR	4712622	ElseStatement	else		4712406	0					
ANR	4712623	CompoundStatement		51:10:1445:1445	4712406	0					
ANR	4712624	ExpressionStatement	retry = 1	641:4:19382:19391	4712406	0	True				
ANR	4712625	AssignmentExpression	retry = 1		4712406	0		=			
ANR	4712626	Identifier	retry		4712406	0					
ANR	4712627	PrimaryExpression	1		4712406	1					
ANR	4712628	ExpressionStatement	free ( dirpath )	645:3:19473:19488	4712406	3	True				
ANR	4712629	CallExpression	free ( dirpath )		4712406	0					
ANR	4712630	Callee	free		4712406	0					
ANR	4712631	Identifier	free		4712406	0					
ANR	4712632	ArgumentList	dirpath		4712406	1					
ANR	4712633	Argument	dirpath		4712406	0					
ANR	4712634	Identifier	dirpath		4712406	0					
ANR	4712635	IfStatement	if ( retry )		4712406	2					
ANR	4712636	Condition	retry	647:6:19500:19504	4712406	0	True				
ANR	4712637	Identifier	retry		4712406	0					
ANR	4712638	CompoundStatement		60:14:1670:1670	4712406	1					
ANR	4712639	ExpressionStatement	"lock_fd = safe_open_wrapper_follow ( filename , flags , perm )"	648:3:19513:19568	4712406	0	True				
ANR	4712640	AssignmentExpression	"lock_fd = safe_open_wrapper_follow ( filename , flags , perm )"		4712406	0		=			
ANR	4712641	Identifier	lock_fd		4712406	0					
ANR	4712642	CallExpression	"safe_open_wrapper_follow ( filename , flags , perm )"		4712406	1					
ANR	4712643	Callee	safe_open_wrapper_follow		4712406	0					
ANR	4712644	Identifier	safe_open_wrapper_follow		4712406	0					
ANR	4712645	ArgumentList	filename		4712406	1					
ANR	4712646	Argument	filename		4712406	0					
ANR	4712647	Identifier	filename		4712406	0					
ANR	4712648	Argument	flags		4712406	1					
ANR	4712649	Identifier	flags		4712406	0					
ANR	4712650	Argument	perm		4712406	2					
ANR	4712651	Identifier	perm		4712406	0					
ANR	4712652	IfStatement	if ( lock_fd < 0 )		4712406	1					
ANR	4712653	Condition	lock_fd < 0	649:7:19577:19587	4712406	0	True				
ANR	4712654	RelationalExpression	lock_fd < 0		4712406	0		<			
ANR	4712655	Identifier	lock_fd		4712406	0					
ANR	4712656	PrimaryExpression	0		4712406	1					
ANR	4712657	CompoundStatement		62:21:1753:1753	4712406	1					
ANR	4712658	ExpressionStatement	save_errno = errno	650:4:19597:19615	4712406	0	True				
ANR	4712659	AssignmentExpression	save_errno = errno		4712406	0		=			
ANR	4712660	Identifier	save_errno		4712406	0					
ANR	4712661	Identifier	errno		4712406	1					
ANR	4712662	ExpressionStatement	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"	655:1:19631:19669	4712406	9	True				
ANR	4712663	CallExpression	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"		4712406	0					
ANR	4712664	Callee	_set_priv		4712406	0					
ANR	4712665	Identifier	_set_priv		4712406	0					
ANR	4712666	ArgumentList	priv		4712406	1					
ANR	4712667	Argument	priv		4712406	0					
ANR	4712668	Identifier	priv		4712406	0					
ANR	4712669	Argument	__FILE__		4712406	1					
ANR	4712670	Identifier	__FILE__		4712406	0					
ANR	4712671	Argument	__LINE__		4712406	2					
ANR	4712672	Identifier	__LINE__		4712406	0					
ANR	4712673	Argument	0		4712406	3					
ANR	4712674	PrimaryExpression	0		4712406	0					
ANR	4712675	IfStatement	if ( lock_fd < 0 )		4712406	10					
ANR	4712676	Condition	lock_fd < 0	657:5:19677:19687	4712406	0	True				
ANR	4712677	RelationalExpression	lock_fd < 0		4712406	0		<			
ANR	4712678	Identifier	lock_fd		4712406	0					
ANR	4712679	PrimaryExpression	0		4712406	1					
ANR	4712680	CompoundStatement		70:19:1853:1853	4712406	1					
ANR	4712681	ExpressionStatement	errno = save_errno	658:2:19695:19713	4712406	0	True				
ANR	4712682	AssignmentExpression	errno = save_errno		4712406	0		=			
ANR	4712683	Identifier	errno		4712406	0					
ANR	4712684	Identifier	save_errno		4712406	1					
ANR	4712685	ReturnStatement	return lock_fd ;	660:1:19719:19733	4712406	11	True				
ANR	4712686	Identifier	lock_fd		4712406	0					
ANR	4712687	ReturnType	int		4712406	1					
ANR	4712688	Identifier	_condor_open_lock_file		4712406	2					
ANR	4712689	ParameterList	"const char * filename , int flags , mode_t perm"		4712406	3					
ANR	4712690	Parameter	const char * filename	587:23:17792:17811	4712406	0	True				
ANR	4712691	ParameterType	const char *		4712406	0					
ANR	4712692	Identifier	filename		4712406	1					
ANR	4712693	Parameter	int flags	587:44:17813:17821	4712406	1	True				
ANR	4712694	ParameterType	int		4712406	0					
ANR	4712695	Identifier	flags		4712406	1					
ANR	4712696	Parameter	mode_t perm	587:55:17824:17834	4712406	2	True				
ANR	4712697	ParameterType	mode_t		4712406	0					
ANR	4712698	Identifier	perm		4712406	1					
ANR	4712699	CFGEntryNode	ENTRY		4712406		True				
ANR	4712700	CFGExitNode	EXIT		4712406		True				
ANR	4712701	Symbol	lock_fd		4712406						
ANR	4712702	Symbol	errno		4712406						
ANR	4712703	Symbol	NULL		4712406						
ANR	4712704	Symbol	safe_open_wrapper_follow		4712406						
ANR	4712705	Symbol	perm		4712406						
ANR	4712706	Symbol	dirpath		4712406						
ANR	4712707	Symbol	__FILE__		4712406						
ANR	4712708	Symbol	flags		4712406						
ANR	4712709	Symbol	_set_priv		4712406						
ANR	4712710	Symbol	condor_dirname		4712406						
ANR	4712711	Symbol	save_errno		4712406						
ANR	4712712	Symbol	ENOENT		4712406						
ANR	4712713	Symbol	__LINE__		4712406						
ANR	4712714	Symbol	filename		4712406						
ANR	4712715	Symbol	get_condor_uid		4712406						
ANR	4712716	Symbol	PRIV_ROOT		4712406						
ANR	4712717	Symbol	get_condor_gid		4712406						
ANR	4712718	Symbol	priv		4712406						
ANR	4712719	Symbol	EACCES		4712406						
ANR	4712720	Symbol	PRIV_CONDOR		4712406						
ANR	4712721	Symbol	mkdir		4712406						
ANR	4712722	Symbol	retry		4712406						
ANR	4712723	Function	debug_open_lock	667:0:19861:21738							
ANR	4712724	FunctionDef	debug_open_lock ()		4712723	0					
ANR	4712725	CompoundStatement		669:0:19895:21738	4712723	0					
ANR	4712726	IdentifierDeclStatement	int save_errno ;	670:1:19898:19912	4712723	0	True				
ANR	4712727	IdentifierDecl	save_errno		4712723	0					
ANR	4712728	IdentifierDeclType	int		4712723	0					
ANR	4712729	Identifier	save_errno		4712723	1					
ANR	4712730	IdentifierDeclStatement	char msg_buf [ DPRINTF_ERR_MAX ] ;	671:1:19915:19944	4712723	1	True				
ANR	4712731	IdentifierDecl	msg_buf [ DPRINTF_ERR_MAX ]		4712723	0					
ANR	4712732	IdentifierDeclType	char [ DPRINTF_ERR_MAX ]		4712723	0					
ANR	4712733	Identifier	msg_buf		4712723	1					
ANR	4712734	Identifier	DPRINTF_ERR_MAX		4712723	2					
ANR	4712735	IdentifierDeclStatement	struct stat fstatus ;	672:1:19947:19966	4712723	2	True				
ANR	4712736	IdentifierDecl	fstatus		4712723	0					
ANR	4712737	IdentifierDeclType	struct stat		4712723	0					
ANR	4712738	Identifier	fstatus		4712723	1					
ANR	4712739	IdentifierDeclStatement	"time_t start_time , end_time ;"	673:1:19969:19995	4712723	3	True				
ANR	4712740	IdentifierDecl	start_time		4712723	0					
ANR	4712741	IdentifierDeclType	time_t		4712723	0					
ANR	4712742	Identifier	start_time		4712723	1					
ANR	4712743	IdentifierDecl	end_time		4712723	1					
ANR	4712744	IdentifierDeclType	time_t		4712723	0					
ANR	4712745	Identifier	end_time		4712723	1					
ANR	4712746	IfStatement	if ( use_kernel_mutex == - 1 )		4712723	4					
ANR	4712747	Condition	use_kernel_mutex == - 1	675:6:20004:20025	4712723	0	True				
ANR	4712748	EqualityExpression	use_kernel_mutex == - 1		4712723	0		==			
ANR	4712749	Identifier	use_kernel_mutex		4712723	0					
ANR	4712750	UnaryOperationExpression	- 1		4712723	1					
ANR	4712751	UnaryOperator	-		4712723	0					
ANR	4712752	PrimaryExpression	1		4712723	1					
ANR	4712753	CompoundStatement		7:31:133:133	4712723	1					
ANR	4712754	ExpressionStatement	"use_kernel_mutex = dprintf_param_funcs -> param_boolean_int ( ""FILE_LOCK_VIA_MUTEX"" , TRUE )"	678:2:20083:20169	4712723	0	True				
ANR	4712755	AssignmentExpression	"use_kernel_mutex = dprintf_param_funcs -> param_boolean_int ( ""FILE_LOCK_VIA_MUTEX"" , TRUE )"		4712723	0		=			
ANR	4712756	Identifier	use_kernel_mutex		4712723	0					
ANR	4712757	CallExpression	"dprintf_param_funcs -> param_boolean_int ( ""FILE_LOCK_VIA_MUTEX"" , TRUE )"		4712723	1					
ANR	4712758	Callee	dprintf_param_funcs -> param_boolean_int		4712723	0					
ANR	4712759	PtrMemberAccess	dprintf_param_funcs -> param_boolean_int		4712723	0					
ANR	4712760	Identifier	dprintf_param_funcs		4712723	0					
ANR	4712761	Identifier	param_boolean_int		4712723	1					
ANR	4712762	ArgumentList	"""FILE_LOCK_VIA_MUTEX"""		4712723	1					
ANR	4712763	Argument	"""FILE_LOCK_VIA_MUTEX"""		4712723	0					
ANR	4712764	PrimaryExpression	"""FILE_LOCK_VIA_MUTEX"""		4712723	0					
ANR	4712765	Argument	TRUE		4712723	1					
ANR	4712766	Identifier	TRUE		4712723	0					
ANR	4712767	IfStatement	if ( DebugLock )		4712723	5					
ANR	4712768	Condition	DebugLock	690:5:20552:20560	4712723	0	True				
ANR	4712769	Identifier	DebugLock		4712723	0					
ANR	4712770	CompoundStatement		22:17:668:668	4712723	1					
ANR	4712771	IfStatement	if ( use_kernel_mutex == FALSE )		4712723	0					
ANR	4712772	Condition	use_kernel_mutex == FALSE	691:6:20572:20596	4712723	0	True				
ANR	4712773	EqualityExpression	use_kernel_mutex == FALSE		4712723	0		==			
ANR	4712774	Identifier	use_kernel_mutex		4712723	0					
ANR	4712775	Identifier	FALSE		4712723	1					
ANR	4712776	CompoundStatement		23:33:703:703	4712723	1					
ANR	4712777	IfStatement	if ( LockFd > 0 )		4712723	0					
ANR	4712778	Condition	LockFd > 0	692:7:20608:20617	4712723	0	True				
ANR	4712779	RelationalExpression	LockFd > 0		4712723	0		>			
ANR	4712780	Identifier	LockFd		4712723	0					
ANR	4712781	PrimaryExpression	0		4712723	1					
ANR	4712782	CompoundStatement		24:20:725:725	4712723	1					
ANR	4712783	ExpressionStatement	"fstat ( LockFd , & fstatus )"	693:4:20627:20650	4712723	0	True				
ANR	4712784	CallExpression	"fstat ( LockFd , & fstatus )"		4712723	0					
ANR	4712785	Callee	fstat		4712723	0					
ANR	4712786	Identifier	fstat		4712723	0					
ANR	4712787	ArgumentList	LockFd		4712723	1					
ANR	4712788	Argument	LockFd		4712723	0					
ANR	4712789	Identifier	LockFd		4712723	0					
ANR	4712790	Argument	& fstatus		4712723	1					
ANR	4712791	UnaryOperationExpression	& fstatus		4712723	0					
ANR	4712792	UnaryOperator	&		4712723	0					
ANR	4712793	Identifier	fstatus		4712723	1					
ANR	4712794	IfStatement	if ( fstatus . st_nlink == 0 )		4712723	1					
ANR	4712795	Condition	fstatus . st_nlink == 0	694:8:20660:20680	4712723	0	True				
ANR	4712796	EqualityExpression	fstatus . st_nlink == 0		4712723	0		==			
ANR	4712797	MemberAccess	fstatus . st_nlink		4712723	0					
ANR	4712798	Identifier	fstatus		4712723	0					
ANR	4712799	Identifier	st_nlink		4712723	1					
ANR	4712800	PrimaryExpression	0		4712723	1					
ANR	4712801	CompoundStatement		26:30:786:786	4712723	1					
ANR	4712802	ExpressionStatement	close ( LockFd )	695:5:20689:20702	4712723	0	True				
ANR	4712803	CallExpression	close ( LockFd )		4712723	0					
ANR	4712804	Callee	close		4712723	0					
ANR	4712805	Identifier	close		4712723	0					
ANR	4712806	ArgumentList	LockFd		4712723	1					
ANR	4712807	Argument	LockFd		4712723	0					
ANR	4712808	Identifier	LockFd		4712723	0					
ANR	4712809	ExpressionStatement	LockFd = - 1	696:5:20709:20720	4712723	1	True				
ANR	4712810	AssignmentExpression	LockFd = - 1		4712723	0		=			
ANR	4712811	Identifier	LockFd		4712723	0					
ANR	4712812	UnaryOperationExpression	- 1		4712723	1					
ANR	4712813	UnaryOperator	-		4712723	0					
ANR	4712814	PrimaryExpression	1		4712723	1					
ANR	4712815	IfStatement	if ( LockFd < 0 )		4712723	1					
ANR	4712816	Condition	LockFd < 0	699:7:20741:20750	4712723	0	True				
ANR	4712817	RelationalExpression	LockFd < 0		4712723	0		<			
ANR	4712818	Identifier	LockFd		4712723	0					
ANR	4712819	PrimaryExpression	0		4712723	1					
ANR	4712820	CompoundStatement		31:19:857:857	4712723	1					
ANR	4712821	ExpressionStatement	"LockFd = _condor_open_lock_file ( DebugLock , O_CREAT | O_WRONLY , 0660 )"	700:4:20759:20823	4712723	0	True				
ANR	4712822	AssignmentExpression	"LockFd = _condor_open_lock_file ( DebugLock , O_CREAT | O_WRONLY , 0660 )"		4712723	0		=			
ANR	4712823	Identifier	LockFd		4712723	0					
ANR	4712824	CallExpression	"_condor_open_lock_file ( DebugLock , O_CREAT | O_WRONLY , 0660 )"		4712723	1					
ANR	4712825	Callee	_condor_open_lock_file		4712723	0					
ANR	4712826	Identifier	_condor_open_lock_file		4712723	0					
ANR	4712827	ArgumentList	DebugLock		4712723	1					
ANR	4712828	Argument	DebugLock		4712723	0					
ANR	4712829	Identifier	DebugLock		4712723	0					
ANR	4712830	Argument	O_CREAT | O_WRONLY		4712723	1					
ANR	4712831	InclusiveOrExpression	O_CREAT | O_WRONLY		4712723	0		|			
ANR	4712832	Identifier	O_CREAT		4712723	0					
ANR	4712833	Identifier	O_WRONLY		4712723	1					
ANR	4712834	Argument	0660		4712723	2					
ANR	4712835	PrimaryExpression	0660		4712723	0					
ANR	4712836	IfStatement	if ( LockFd < 0 )		4712723	1					
ANR	4712837	Condition	LockFd < 0	701:8:20833:20842	4712723	0	True				
ANR	4712838	RelationalExpression	LockFd < 0		4712723	0		<			
ANR	4712839	Identifier	LockFd		4712723	0					
ANR	4712840	PrimaryExpression	0		4712723	1					
ANR	4712841	CompoundStatement		33:21:950:950	4712723	1					
ANR	4712842	ExpressionStatement	save_errno = errno	702:5:20853:20871	4712723	0	True				
ANR	4712843	AssignmentExpression	save_errno = errno		4712723	0		=			
ANR	4712844	Identifier	save_errno		4712723	0					
ANR	4712845	Identifier	errno		4712723	1					
ANR	4712846	ExpressionStatement	"snprintf ( msg_buf , sizeof ( msg_buf ) , ""Can't open \\""%s\\""\\n"" , DebugLock )"	703:5:20878:20948	4712723	1	True				
ANR	4712847	CallExpression	"snprintf ( msg_buf , sizeof ( msg_buf ) , ""Can't open \\""%s\\""\\n"" , DebugLock )"		4712723	0					
ANR	4712848	Callee	snprintf		4712723	0					
ANR	4712849	Identifier	snprintf		4712723	0					
ANR	4712850	ArgumentList	msg_buf		4712723	1					
ANR	4712851	Argument	msg_buf		4712723	0					
ANR	4712852	Identifier	msg_buf		4712723	0					
ANR	4712853	Argument	sizeof ( msg_buf )		4712723	1					
ANR	4712854	SizeofExpression	sizeof ( msg_buf )		4712723	0					
ANR	4712855	Sizeof	sizeof		4712723	0					
ANR	4712856	SizeofOperand	msg_buf		4712723	1					
ANR	4712857	Argument	"""Can't open \\""%s\\""\\n"""		4712723	2					
ANR	4712858	PrimaryExpression	"""Can't open \\""%s\\""\\n"""		4712723	0					
ANR	4712859	Argument	DebugLock		4712723	3					
ANR	4712860	Identifier	DebugLock		4712723	0					
ANR	4712861	ExpressionStatement	"_condor_dprintf_exit ( save_errno , msg_buf )"	704:5:20955:20998	4712723	2	True				
ANR	4712862	CallExpression	"_condor_dprintf_exit ( save_errno , msg_buf )"		4712723	0					
ANR	4712863	Callee	_condor_dprintf_exit		4712723	0					
ANR	4712864	Identifier	_condor_dprintf_exit		4712723	0					
ANR	4712865	ArgumentList	save_errno		4712723	1					
ANR	4712866	Argument	save_errno		4712723	0					
ANR	4712867	Identifier	save_errno		4712723	0					
ANR	4712868	Argument	msg_buf		4712723	1					
ANR	4712869	Identifier	msg_buf		4712723	0					
ANR	4712870	ExpressionStatement	start_time = time ( NULL )	709:2:21020:21043	4712723	1	True				
ANR	4712871	AssignmentExpression	start_time = time ( NULL )		4712723	0		=			
ANR	4712872	Identifier	start_time		4712723	0					
ANR	4712873	CallExpression	time ( NULL )		4712723	1					
ANR	4712874	Callee	time		4712723	0					
ANR	4712875	Identifier	time		4712723	0					
ANR	4712876	ArgumentList	NULL		4712723	1					
ANR	4712877	Argument	NULL		4712723	0					
ANR	4712878	Identifier	NULL		4712723	0					
ANR	4712879	IfStatement	if ( DebugLockDelayPeriodStarted == 0 )		4712723	2					
ANR	4712880	Condition	DebugLockDelayPeriodStarted == 0	710:6:21051:21082	4712723	0	True				
ANR	4712881	EqualityExpression	DebugLockDelayPeriodStarted == 0		4712723	0		==			
ANR	4712882	Identifier	DebugLockDelayPeriodStarted		4712723	0					
ANR	4712883	PrimaryExpression	0		4712723	1					
ANR	4712884	CompoundStatement		42:41:1190:1190	4712723	1					
ANR	4712885	ExpressionStatement	DebugLockDelayPeriodStarted = start_time	711:3:21091:21131	4712723	0	True				
ANR	4712886	AssignmentExpression	DebugLockDelayPeriodStarted = start_time		4712723	0		=			
ANR	4712887	Identifier	DebugLockDelayPeriodStarted		4712723	0					
ANR	4712888	Identifier	start_time		4712723	1					
ANR	4712889	ExpressionStatement	errno = 0	714:2:21140:21149	4712723	3	True				
ANR	4712890	AssignmentExpression	errno = 0		4712723	0		=			
ANR	4712891	Identifier	errno		4712723	0					
ANR	4712892	PrimaryExpression	0		4712723	1					
ANR	4712893	IfStatement	"if ( lock_or_mutex_file ( LockFd , WRITE_LOCK , TRUE ) < 0 )"		4712723	4					
ANR	4712894	Condition	"lock_or_mutex_file ( LockFd , WRITE_LOCK , TRUE ) < 0"	716:6:21170:21215	4712723	0	True				
ANR	4712895	RelationalExpression	"lock_or_mutex_file ( LockFd , WRITE_LOCK , TRUE ) < 0"		4712723	0		<			
ANR	4712896	CallExpression	"lock_or_mutex_file ( LockFd , WRITE_LOCK , TRUE )"		4712723	0					
ANR	4712897	Callee	lock_or_mutex_file		4712723	0					
ANR	4712898	Identifier	lock_or_mutex_file		4712723	0					
ANR	4712899	ArgumentList	LockFd		4712723	1					
ANR	4712900	Argument	LockFd		4712723	0					
ANR	4712901	Identifier	LockFd		4712723	0					
ANR	4712902	Argument	WRITE_LOCK		4712723	1					
ANR	4712903	Identifier	WRITE_LOCK		4712723	0					
ANR	4712904	Argument	TRUE		4712723	2					
ANR	4712905	Identifier	TRUE		4712723	0					
ANR	4712906	PrimaryExpression	0		4712723	1					
ANR	4712907	CompoundStatement		52:2:1390:1390	4712723	1					
ANR	4712908	ExpressionStatement	save_errno = errno	721:3:21291:21309	4712723	0	True				
ANR	4712909	AssignmentExpression	save_errno = errno		4712723	0		=			
ANR	4712910	Identifier	save_errno		4712723	0					
ANR	4712911	Identifier	errno		4712723	1					
ANR	4712912	Statement	snprintf	722:3:21314:21321	4712723	1	True				
ANR	4712913	Statement	(	722:11:21322:21322	4712723	2	True				
ANR	4712914	Statement	msg_buf	722:13:21324:21330	4712723	3	True				
ANR	4712915	Statement	","	722:20:21331:21331	4712723	4	True				
ANR	4712916	Statement	sizeof	722:22:21333:21338	4712723	5	True				
ANR	4712917	Statement	(	722:28:21339:21339	4712723	6	True				
ANR	4712918	Statement	msg_buf	722:29:21340:21346	4712723	7	True				
ANR	4712919	Statement	)	722:36:21347:21347	4712723	8	True				
ANR	4712920	Statement	","	722:37:21348:21348	4712723	9	True				
ANR	4712921	Statement	"""Can't get exclusive lock on \\""%s\\"", """	722:39:21350:21387	4712723	10	True				
ANR	4712922	Statement	"""LockFd: %d\\n"""	723:6:21395:21408	4712723	11	True				
ANR	4712923	Statement	","	723:20:21409:21409	4712723	12	True				
ANR	4712924	Statement	DebugLock	723:22:21411:21419	4712723	13	True				
ANR	4712925	Statement	","	723:31:21420:21420	4712723	14	True				
ANR	4712926	Statement	LockFd	723:33:21422:21427	4712723	15	True				
ANR	4712927	Statement	)	723:40:21429:21429	4712723	16	True				
ANR	4712928	ExpressionStatement		723:41:21430:21430	4712723	17	True				
ANR	4712929	ExpressionStatement	"_condor_dprintf_exit ( save_errno , msg_buf )"	724:3:21435:21478	4712723	18	True				
ANR	4712930	CallExpression	"_condor_dprintf_exit ( save_errno , msg_buf )"		4712723	0					
ANR	4712931	Callee	_condor_dprintf_exit		4712723	0					
ANR	4712932	Identifier	_condor_dprintf_exit		4712723	0					
ANR	4712933	ArgumentList	save_errno		4712723	1					
ANR	4712934	Argument	save_errno		4712723	0					
ANR	4712935	Identifier	save_errno		4712723	0					
ANR	4712936	Argument	msg_buf		4712723	1					
ANR	4712937	Identifier	msg_buf		4712723	0					
ANR	4712938	ExpressionStatement	DebugIsLocked = 1	727:2:21487:21504	4712723	5	True				
ANR	4712939	AssignmentExpression	DebugIsLocked = 1		4712723	0		=			
ANR	4712940	Identifier	DebugIsLocked		4712723	0					
ANR	4712941	PrimaryExpression	1		4712723	1					
ANR	4712942	ExpressionStatement	end_time = time ( NULL )	732:2:21632:21653	4712723	6	True				
ANR	4712943	AssignmentExpression	end_time = time ( NULL )		4712723	0		=			
ANR	4712944	Identifier	end_time		4712723	0					
ANR	4712945	CallExpression	time ( NULL )		4712723	1					
ANR	4712946	Callee	time		4712723	0					
ANR	4712947	Identifier	time		4712723	0					
ANR	4712948	ArgumentList	NULL		4712723	1					
ANR	4712949	Argument	NULL		4712723	0					
ANR	4712950	Identifier	NULL		4712723	0					
ANR	4712951	IfStatement	if ( end_time - start_time > 1 )		4712723	7					
ANR	4712952	Condition	end_time - start_time > 1	733:6:21661:21683	4712723	0	True				
ANR	4712953	RelationalExpression	end_time - start_time > 1		4712723	0		>			
ANR	4712954	AdditiveExpression	end_time - start_time		4712723	0		-			
ANR	4712955	Identifier	end_time		4712723	0					
ANR	4712956	Identifier	start_time		4712723	1					
ANR	4712957	PrimaryExpression	1		4712723	1					
ANR	4712958	CompoundStatement		65:32:1791:1791	4712723	1					
ANR	4712959	ExpressionStatement	DebugLockDelay += end_time - start_time	734:3:21692:21729	4712723	0	True				
ANR	4712960	AssignmentExpression	DebugLockDelay += end_time - start_time		4712723	0		+=			
ANR	4712961	Identifier	DebugLockDelay		4712723	0					
ANR	4712962	AdditiveExpression	end_time - start_time		4712723	1		-			
ANR	4712963	Identifier	end_time		4712723	0					
ANR	4712964	Identifier	start_time		4712723	1					
ANR	4712965	ReturnType	static void		4712723	1					
ANR	4712966	Identifier	debug_open_lock		4712723	2					
ANR	4712967	ParameterList			4712723	3					
ANR	4712968	CFGEntryNode	ENTRY		4712723		True				
ANR	4712969	CFGExitNode	EXIT		4712723		True				
ANR	4712970	Symbol	DebugIsLocked		4712723						
ANR	4712971	Symbol	dprintf_param_funcs -> param_boolean_int		4712723						
ANR	4712972	Symbol	fstatus . st_nlink		4712723						
ANR	4712973	Symbol	_condor_open_lock_file		4712723						
ANR	4712974	Symbol	O_CREAT		4712723						
ANR	4712975	Symbol	lock_or_mutex_file		4712723						
ANR	4712976	Symbol	save_errno		4712723						
ANR	4712977	Symbol	use_kernel_mutex		4712723						
ANR	4712978	Symbol	& fstatus		4712723						
ANR	4712979	Symbol	DebugLockDelay		4712723						
ANR	4712980	Symbol	DebugLockDelayPeriodStarted		4712723						
ANR	4712981	Symbol	fstatus		4712723						
ANR	4712982	Symbol	LockFd		4712723						
ANR	4712983	Symbol	WRITE_LOCK		4712723						
ANR	4712984	Symbol	dprintf_param_funcs		4712723						
ANR	4712985	Symbol	errno		4712723						
ANR	4712986	Symbol	DebugLock		4712723						
ANR	4712987	Symbol	NULL		4712723						
ANR	4712988	Symbol	end_time		4712723						
ANR	4712989	Symbol	msg_buf		4712723						
ANR	4712990	Symbol	TRUE		4712723						
ANR	4712991	Symbol	start_time		4712723						
ANR	4712992	Symbol	FALSE		4712723						
ANR	4712993	Symbol	time		4712723						
ANR	4712994	Symbol	O_WRONLY		4712723						
ANR	4712995	Symbol	* dprintf_param_funcs		4712723						
ANR	4712996	Function	dprintf_reset_lock_delay	739:0:21741:21834							
ANR	4712997	FunctionDef	dprintf_reset_lock_delay ()		4712996	0					
ANR	4712998	CompoundStatement		739:36:21777:21834	4712996	0					
ANR	4712999	ExpressionStatement	DebugLockDelay = 0	740:1:21780:21798	4712996	0	True				
ANR	4713000	AssignmentExpression	DebugLockDelay = 0		4712996	0		=			
ANR	4713001	Identifier	DebugLockDelay		4712996	0					
ANR	4713002	PrimaryExpression	0		4712996	1					
ANR	4713003	ExpressionStatement	DebugLockDelayPeriodStarted = 0	741:1:21801:21832	4712996	1	True				
ANR	4713004	AssignmentExpression	DebugLockDelayPeriodStarted = 0		4712996	0		=			
ANR	4713005	Identifier	DebugLockDelayPeriodStarted		4712996	0					
ANR	4713006	PrimaryExpression	0		4712996	1					
ANR	4713007	ReturnType	void		4712996	1					
ANR	4713008	Identifier	dprintf_reset_lock_delay		4712996	2					
ANR	4713009	ParameterList			4712996	3					
ANR	4713010	CFGEntryNode	ENTRY		4712996		True				
ANR	4713011	CFGExitNode	EXIT		4712996		True				
ANR	4713012	Symbol	DebugLockDelayPeriodStarted		4712996						
ANR	4713013	Symbol	DebugLockDelay		4712996						
ANR	4713014	Function	dprintf_get_lock_delay	744:0:21837:22032							
ANR	4713015	FunctionDef	dprintf_get_lock_delay ()		4713014	0					
ANR	4713016	CompoundStatement		744:36:21873:22032	4713014	0					
ANR	4713017	IdentifierDeclStatement	time_t now = time ( NULL ) ;	745:1:21876:21899	4713014	0	True				
ANR	4713018	IdentifierDecl	now = time ( NULL )		4713014	0					
ANR	4713019	IdentifierDeclType	time_t		4713014	0					
ANR	4713020	Identifier	now		4713014	1					
ANR	4713021	AssignmentExpression	now = time ( NULL )		4713014	2		=			
ANR	4713022	Identifier	now		4713014	0					
ANR	4713023	CallExpression	time ( NULL )		4713014	1					
ANR	4713024	Callee	time		4713014	0					
ANR	4713025	Identifier	time		4713014	0					
ANR	4713026	ArgumentList	NULL		4713014	1					
ANR	4713027	Argument	NULL		4713014	0					
ANR	4713028	Identifier	NULL		4713014	0					
ANR	4713029	IfStatement	if ( now - DebugLockDelayPeriodStarted <= 0 )		4713014	1					
ANR	4713030	Condition	now - DebugLockDelayPeriodStarted <= 0	746:5:21906:21943	4713014	0	True				
ANR	4713031	RelationalExpression	now - DebugLockDelayPeriodStarted <= 0		4713014	0		<=			
ANR	4713032	AdditiveExpression	now - DebugLockDelayPeriodStarted		4713014	0		-			
ANR	4713033	Identifier	now		4713014	0					
ANR	4713034	Identifier	DebugLockDelayPeriodStarted		4713014	1					
ANR	4713035	PrimaryExpression	0		4713014	1					
ANR	4713036	CompoundStatement		3:46:73:73	4713014	1					
ANR	4713037	ReturnStatement	return 0 ;	747:2:21951:21959	4713014	0	True				
ANR	4713038	PrimaryExpression	0		4713014	0					
ANR	4713039	ReturnStatement	return ( ( double ) DebugLockDelay ) / ( now - DebugLockDelayPeriodStarted ) ;	749:1:21965:22030	4713014	2	True				
ANR	4713040	MultiplicativeExpression	( ( double ) DebugLockDelay ) / ( now - DebugLockDelayPeriodStarted )		4713014	0		/			
ANR	4713041	CastExpression	( double ) DebugLockDelay		4713014	0					
ANR	4713042	CastTarget	double		4713014	0					
ANR	4713043	Identifier	DebugLockDelay		4713014	1					
ANR	4713044	AdditiveExpression	now - DebugLockDelayPeriodStarted		4713014	1		-			
ANR	4713045	Identifier	now		4713014	0					
ANR	4713046	Identifier	DebugLockDelayPeriodStarted		4713014	1					
ANR	4713047	ReturnType	double		4713014	1					
ANR	4713048	Identifier	dprintf_get_lock_delay		4713014	2					
ANR	4713049	ParameterList			4713014	3					
ANR	4713050	CFGEntryNode	ENTRY		4713014		True				
ANR	4713051	CFGExitNode	EXIT		4713014		True				
ANR	4713052	Symbol	DebugLockDelayPeriodStarted		4713014						
ANR	4713053	Symbol	NULL		4713014						
ANR	4713054	Symbol	now		4713014						
ANR	4713055	Symbol	DebugLockDelay		4713014						
ANR	4713056	Symbol	time		4713014						
ANR	4713057	Function	debug_lock	752:0:22035:22718							
ANR	4713058	FunctionDef	"debug_lock (int debug_flags , const char * mode , int force_lock)"		4713057	0					
ANR	4713059	CompoundStatement		754:0:22104:22718	4713057	0					
ANR	4713060	IdentifierDeclStatement	std :: vector < DebugFileInfo > :: iterator it ;	755:1:22107:22146	4713057	0	True				
ANR	4713061	IdentifierDecl	it		4713057	0					
ANR	4713062	IdentifierDeclType	std :: vector < DebugFileInfo > :: iterator		4713057	0					
ANR	4713063	Identifier	it		4713057	1					
ANR	4713064	ForStatement	for ( it = DebugLogs -> begin ( ) ; it < DebugLogs -> end ( ) ; it ++ )		4713057	1					
ANR	4713065	ForInit	it = DebugLogs -> begin ( ) ;	757:5:22154:22177	4713057	0	True				
ANR	4713066	AssignmentExpression	it = DebugLogs -> begin ( )		4713057	0		=			
ANR	4713067	Identifier	it		4713057	0					
ANR	4713068	CallExpression	DebugLogs -> begin ( )		4713057	1					
ANR	4713069	Callee	DebugLogs -> begin		4713057	0					
ANR	4713070	PtrMemberAccess	DebugLogs -> begin		4713057	0					
ANR	4713071	Identifier	DebugLogs		4713057	0					
ANR	4713072	Identifier	begin		4713057	1					
ANR	4713073	ArgumentList			4713057	1					
ANR	4713074	Condition	it < DebugLogs -> end ( )	757:30:22179:22199	4713057	1	True				
ANR	4713075	RelationalExpression	it < DebugLogs -> end ( )		4713057	0		<			
ANR	4713076	Identifier	it		4713057	0					
ANR	4713077	CallExpression	DebugLogs -> end ( )		4713057	1					
ANR	4713078	Callee	DebugLogs -> end		4713057	0					
ANR	4713079	PtrMemberAccess	DebugLogs -> end		4713057	0					
ANR	4713080	Identifier	DebugLogs		4713057	0					
ANR	4713081	Identifier	end		4713057	1					
ANR	4713082	ArgumentList			4713057	1					
ANR	4713083	PostIncDecOperationExpression	it ++	757:53:22202:22205	4713057	2	True				
ANR	4713084	Identifier	it		4713057	0					
ANR	4713085	IncDec	++		4713057	1					
ANR	4713086	CompoundStatement		16:2:459:528	4713057	3					
ANR	4713087	IfStatement	if ( it -> debugFlags != debug_flags )		4713057	0					
ANR	4713088	Condition	it -> debugFlags != debug_flags	764:5:22423:22451	4713057	0	True				
ANR	4713089	EqualityExpression	it -> debugFlags != debug_flags		4713057	0		!=			
ANR	4713090	PtrMemberAccess	it -> debugFlags		4713057	0					
ANR	4713091	Identifier	it		4713057	0					
ANR	4713092	Identifier	debugFlags		4713057	1					
ANR	4713093	Identifier	debug_flags		4713057	1					
ANR	4713094	ContinueStatement	continue ;	765:3:22457:22465	4713057	1	True				
ANR	4713095	IdentifierDeclStatement	bool dont_panic = ( it -> debugFlags != 0 ) || DebugContinueOnOpenFailure ;	769:2:22564:22633	4713057	1	True				
ANR	4713096	IdentifierDecl	dont_panic = ( it -> debugFlags != 0 ) || DebugContinueOnOpenFailure		4713057	0					
ANR	4713097	IdentifierDeclType	bool		4713057	0					
ANR	4713098	Identifier	dont_panic		4713057	1					
ANR	4713099	AssignmentExpression	dont_panic = ( it -> debugFlags != 0 ) || DebugContinueOnOpenFailure		4713057	2		=			
ANR	4713100	Identifier	dont_panic		4713057	0					
ANR	4713101	OrExpression	( it -> debugFlags != 0 ) || DebugContinueOnOpenFailure		4713057	1		||			
ANR	4713102	EqualityExpression	it -> debugFlags != 0		4713057	0		!=			
ANR	4713103	PtrMemberAccess	it -> debugFlags		4713057	0					
ANR	4713104	Identifier	it		4713057	0					
ANR	4713105	Identifier	debugFlags		4713057	1					
ANR	4713106	PrimaryExpression	0		4713057	1					
ANR	4713107	Identifier	DebugContinueOnOpenFailure		4713057	1					
ANR	4713108	ReturnStatement	"return debug_lock_it ( & ( * it ) , mode , force_lock , dont_panic ) ;"	771:2:22638:22696	4713057	2	True				
ANR	4713109	CallExpression	"debug_lock_it ( & ( * it ) , mode , force_lock , dont_panic )"		4713057	0					
ANR	4713110	Callee	debug_lock_it		4713057	0					
ANR	4713111	Identifier	debug_lock_it		4713057	0					
ANR	4713112	ArgumentList	& ( * it )		4713057	1					
ANR	4713113	Argument	& ( * it )		4713057	0					
ANR	4713114	UnaryOperationExpression	& ( * it )		4713057	0					
ANR	4713115	UnaryOperator	&		4713057	0					
ANR	4713116	UnaryOperationExpression	* it		4713057	1					
ANR	4713117	UnaryOperator	*		4713057	0					
ANR	4713118	Identifier	it		4713057	1					
ANR	4713119	Argument	mode		4713057	1					
ANR	4713120	Identifier	mode		4713057	0					
ANR	4713121	Argument	force_lock		4713057	2					
ANR	4713122	Identifier	force_lock		4713057	0					
ANR	4713123	Argument	dont_panic		4713057	3					
ANR	4713124	Identifier	dont_panic		4713057	0					
ANR	4713125	ReturnStatement	return stderr ;	774:1:22703:22716	4713057	2	True				
ANR	4713126	Identifier	stderr		4713057	0					
ANR	4713127	ReturnType	FILE *		4713057	1					
ANR	4713128	Identifier	debug_lock		4713057	2					
ANR	4713129	ParameterList	"int debug_flags , const char * mode , int force_lock"		4713057	3					
ANR	4713130	Parameter	int debug_flags	753:11:22053:22067	4713057	0	True				
ANR	4713131	ParameterType	int		4713057	0					
ANR	4713132	Identifier	debug_flags		4713057	1					
ANR	4713133	Parameter	const char * mode	753:28:22070:22085	4713057	1	True				
ANR	4713134	ParameterType	const char *		4713057	0					
ANR	4713135	Identifier	mode		4713057	1					
ANR	4713136	Parameter	int force_lock	753:46:22088:22101	4713057	2	True				
ANR	4713137	ParameterType	int		4713057	0					
ANR	4713138	Identifier	force_lock		4713057	1					
ANR	4713139	CFGEntryNode	ENTRY		4713057		True				
ANR	4713140	CFGExitNode	EXIT		4713057		True				
ANR	4713141	Symbol	DebugLogs -> end		4713057						
ANR	4713142	Symbol	debug_flags		4713057						
ANR	4713143	Symbol	it -> debugFlags		4713057						
ANR	4713144	Symbol	DebugContinueOnOpenFailure		4713057						
ANR	4713145	Symbol	it		4713057						
ANR	4713146	Symbol	stderr		4713057						
ANR	4713147	Symbol	dont_panic		4713057						
ANR	4713148	Symbol	mode		4713057						
ANR	4713149	Symbol	* it		4713057						
ANR	4713150	Symbol	debug_lock_it		4713057						
ANR	4713151	Symbol	force_lock		4713057						
ANR	4713152	Symbol	DebugLogs -> begin		4713057						
ANR	4713153	Symbol	* DebugLogs		4713057						
ANR	4713154	Symbol	DebugLogs		4713057						
ANR	4713155	Function	debug_lock_it	777:0:22721:25704							
ANR	4713156	FunctionDef	"debug_lock_it (struct DebugFileInfo * it , const char * mode , int force_lock , bool dont_panic)"		4713155	0					
ANR	4713157	CompoundStatement		779:0:22826:25704	4713155	0					
ANR	4713158	IdentifierDeclStatement	off_t length = 0 ;	780:1:22829:22846	4713155	0	True				
ANR	4713159	IdentifierDecl	length = 0		4713155	0					
ANR	4713160	IdentifierDeclType	off_t		4713155	0					
ANR	4713161	Identifier	length		4713155	1					
ANR	4713162	AssignmentExpression	length = 0		4713155	2		=			
ANR	4713163	Identifier	length		4713155	0					
ANR	4713164	PrimaryExpression	0		4713155	1					
ANR	4713165	IdentifierDeclStatement	priv_state priv ;	781:1:22897:22912	4713155	1	True				
ANR	4713166	IdentifierDecl	priv		4713155	0					
ANR	4713167	IdentifierDeclType	priv_state		4713155	0					
ANR	4713168	Identifier	priv		4713155	1					
ANR	4713169	IdentifierDeclStatement	int save_errno ;	782:1:22915:22929	4713155	2	True				
ANR	4713170	IdentifierDecl	save_errno		4713155	0					
ANR	4713171	IdentifierDeclType	int		4713155	0					
ANR	4713172	Identifier	save_errno		4713155	1					
ANR	4713173	IdentifierDeclStatement	char msg_buf [ DPRINTF_ERR_MAX ] ;	783:1:22932:22961	4713155	3	True				
ANR	4713174	IdentifierDecl	msg_buf [ DPRINTF_ERR_MAX ]		4713155	0					
ANR	4713175	IdentifierDeclType	char [ DPRINTF_ERR_MAX ]		4713155	0					
ANR	4713176	Identifier	msg_buf		4713155	1					
ANR	4713177	Identifier	DPRINTF_ERR_MAX		4713155	2					
ANR	4713178	IdentifierDeclStatement	int locked = 0 ;	784:1:22964:22978	4713155	4	True				
ANR	4713179	IdentifierDecl	locked = 0		4713155	0					
ANR	4713180	IdentifierDeclType	int		4713155	0					
ANR	4713181	Identifier	locked		4713155	1					
ANR	4713182	AssignmentExpression	locked = 0		4713155	2		=			
ANR	4713183	Identifier	locked		4713155	0					
ANR	4713184	PrimaryExpression	0		4713155	1					
ANR	4713185	IdentifierDeclStatement	FILE * debug_file_ptr = it -> debugFP ;	785:1:22981:23015	4713155	5	True				
ANR	4713186	IdentifierDecl	* debug_file_ptr = it -> debugFP		4713155	0					
ANR	4713187	IdentifierDeclType	FILE *		4713155	0					
ANR	4713188	Identifier	debug_file_ptr		4713155	1					
ANR	4713189	AssignmentExpression	* debug_file_ptr = it -> debugFP		4713155	2		=			
ANR	4713190	Identifier	debug_file_ptr		4713155	0					
ANR	4713191	PtrMemberAccess	it -> debugFP		4713155	1					
ANR	4713192	Identifier	it		4713155	0					
ANR	4713193	Identifier	debugFP		4713155	1					
ANR	4713194	IfStatement	if ( mode == NULL )		4713155	6					
ANR	4713195	Condition	mode == NULL	787:6:23024:23035	4713155	0	True				
ANR	4713196	EqualityExpression	mode == NULL		4713155	0		==			
ANR	4713197	Identifier	mode		4713155	0					
ANR	4713198	Identifier	NULL		4713155	1					
ANR	4713199	CompoundStatement		9:21:212:212	4713155	1					
ANR	4713200	ExpressionStatement	"mode = ""aN"""	788:2:23043:23054	4713155	0	True				
ANR	4713201	AssignmentExpression	"mode = ""aN"""		4713155	0		=			
ANR	4713202	Identifier	mode		4713155	0					
ANR	4713203	PrimaryExpression	"""aN"""		4713155	1					
ANR	4713204	ExpressionStatement	errno = 0	791:1:23061:23070	4713155	7	True				
ANR	4713205	AssignmentExpression	errno = 0		4713155	0		=			
ANR	4713206	Identifier	errno		4713155	0					
ANR	4713207	PrimaryExpression	0		4713155	1					
ANR	4713208	ExpressionStatement	"priv = _set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"	793:1:23074:23126	4713155	8	True				
ANR	4713209	AssignmentExpression	"priv = _set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"		4713155	0		=			
ANR	4713210	Identifier	priv		4713155	0					
ANR	4713211	CallExpression	"_set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"		4713155	1					
ANR	4713212	Callee	_set_priv		4713155	0					
ANR	4713213	Identifier	_set_priv		4713155	0					
ANR	4713214	ArgumentList	PRIV_CONDOR		4713155	1					
ANR	4713215	Argument	PRIV_CONDOR		4713155	0					
ANR	4713216	Identifier	PRIV_CONDOR		4713155	0					
ANR	4713217	Argument	__FILE__		4713155	1					
ANR	4713218	Identifier	__FILE__		4713155	0					
ANR	4713219	Argument	__LINE__		4713155	2					
ANR	4713220	Identifier	__LINE__		4713155	0					
ANR	4713221	Argument	0		4713155	3					
ANR	4713222	PrimaryExpression	0		4713155	0					
ANR	4713223	IfStatement	if ( debug_file_ptr )		4713155	9					
ANR	4713224	Condition	debug_file_ptr	795:4:23133:23146	4713155	0	True				
ANR	4713225	Identifier	debug_file_ptr		4713155	0					
ANR	4713226	CompoundStatement		18:1:323:323	4713155	1					
ANR	4713227	IfStatement	if ( DebugShouldLockToAppend || force_lock )		4713155	0					
ANR	4713228	Condition	DebugShouldLockToAppend || force_lock	800:6:23311:23347	4713155	0	True				
ANR	4713229	OrExpression	DebugShouldLockToAppend || force_lock		4713155	0		||			
ANR	4713230	Identifier	DebugShouldLockToAppend		4713155	0					
ANR	4713231	Identifier	force_lock		4713155	1					
ANR	4713232	ExpressionStatement	locked = 1	801:3:23354:23364	4713155	1	True				
ANR	4713233	AssignmentExpression	locked = 1		4713155	0		=			
ANR	4713234	Identifier	locked		4713155	0					
ANR	4713235	PrimaryExpression	1		4713155	1					
ANR	4713236	ElseStatement	else		4713155	0					
ANR	4713237	CompoundStatement		26:1:549:549	4713155	0					
ANR	4713238	IfStatement	if ( DebugShouldLockToAppend || force_lock )		4713155	0					
ANR	4713239	Condition	DebugShouldLockToAppend || force_lock	805:6:23384:23420	4713155	0	True				
ANR	4713240	OrExpression	DebugShouldLockToAppend || force_lock		4713155	0		||			
ANR	4713241	Identifier	DebugShouldLockToAppend		4713155	0					
ANR	4713242	Identifier	force_lock		4713155	1					
ANR	4713243	CompoundStatement		27:46:597:597	4713155	1					
ANR	4713244	ExpressionStatement	debug_open_lock ( )	806:3:23429:23446	4713155	0	True				
ANR	4713245	CallExpression	debug_open_lock ( )		4713155	0					
ANR	4713246	Callee	debug_open_lock		4713155	0					
ANR	4713247	Identifier	debug_open_lock		4713155	0					
ANR	4713248	ArgumentList			4713155	1					
ANR	4713249	ExpressionStatement	locked = 1	807:3:23451:23461	4713155	1	True				
ANR	4713250	AssignmentExpression	locked = 1		4713155	0		=			
ANR	4713251	Identifier	locked		4713155	0					
ANR	4713252	PrimaryExpression	1		4713155	1					
ANR	4713253	ExpressionStatement	"debug_file_ptr = open_debug_file ( it , mode , dont_panic )"	813:2:23621:23675	4713155	1	True				
ANR	4713254	AssignmentExpression	"debug_file_ptr = open_debug_file ( it , mode , dont_panic )"		4713155	0		=			
ANR	4713255	Identifier	debug_file_ptr		4713155	0					
ANR	4713256	CallExpression	"open_debug_file ( it , mode , dont_panic )"		4713155	1					
ANR	4713257	Callee	open_debug_file		4713155	0					
ANR	4713258	Identifier	open_debug_file		4713155	0					
ANR	4713259	ArgumentList	it		4713155	1					
ANR	4713260	Argument	it		4713155	0					
ANR	4713261	Identifier	it		4713155	0					
ANR	4713262	Argument	mode		4713155	1					
ANR	4713263	Identifier	mode		4713155	0					
ANR	4713264	Argument	dont_panic		4713155	2					
ANR	4713265	Identifier	dont_panic		4713155	0					
ANR	4713266	IfStatement	if ( debug_file_ptr == NULL )		4713155	2					
ANR	4713267	Condition	debug_file_ptr == NULL	815:6:23684:23705	4713155	0	True				
ANR	4713268	EqualityExpression	debug_file_ptr == NULL		4713155	0		==			
ANR	4713269	Identifier	debug_file_ptr		4713155	0					
ANR	4713270	Identifier	NULL		4713155	1					
ANR	4713271	CompoundStatement		37:31:882:882	4713155	1					
ANR	4713272	ExpressionStatement	save_errno = errno	817:3:23718:23736	4713155	0	True				
ANR	4713273	AssignmentExpression	save_errno = errno		4713155	0		=			
ANR	4713274	Identifier	save_errno		4713155	0					
ANR	4713275	Identifier	errno		4713155	1					
ANR	4713276	IfStatement	if ( dont_panic )		4713155	1					
ANR	4713277	Condition	dont_panic	818:7:23745:23754	4713155	0	True				
ANR	4713278	Identifier	dont_panic		4713155	0					
ANR	4713279	CompoundStatement		40:19:930:930	4713155	1					
ANR	4713280	ExpressionStatement	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"	819:4:23763:23801	4713155	0	True				
ANR	4713281	CallExpression	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"		4713155	0					
ANR	4713282	Callee	_set_priv		4713155	0					
ANR	4713283	Identifier	_set_priv		4713155	0					
ANR	4713284	ArgumentList	priv		4713155	1					
ANR	4713285	Argument	priv		4713155	0					
ANR	4713286	Identifier	priv		4713155	0					
ANR	4713287	Argument	__FILE__		4713155	1					
ANR	4713288	Identifier	__FILE__		4713155	0					
ANR	4713289	Argument	__LINE__		4713155	2					
ANR	4713290	Identifier	__LINE__		4713155	0					
ANR	4713291	Argument	0		4713155	3					
ANR	4713292	PrimaryExpression	0		4713155	0					
ANR	4713293	ReturnStatement	return NULL ;	820:4:23807:23818	4713155	1	True				
ANR	4713294	Identifier	NULL		4713155	0					
ANR	4713295	IfStatement	if ( DebugContinueOnOpenFailure )		4713155	2					
ANR	4713296	Condition	DebugContinueOnOpenFailure	823:7:23845:23870	4713155	0	True				
ANR	4713297	Identifier	DebugContinueOnOpenFailure		4713155	0					
ANR	4713298	CompoundStatement		45:35:1046:1046	4713155	1					
ANR	4713299	ExpressionStatement	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"	824:4:23879:23917	4713155	0	True				
ANR	4713300	CallExpression	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"		4713155	0					
ANR	4713301	Callee	_set_priv		4713155	0					
ANR	4713302	Identifier	_set_priv		4713155	0					
ANR	4713303	ArgumentList	priv		4713155	1					
ANR	4713304	Argument	priv		4713155	0					
ANR	4713305	Identifier	priv		4713155	0					
ANR	4713306	Argument	__FILE__		4713155	1					
ANR	4713307	Identifier	__FILE__		4713155	0					
ANR	4713308	Argument	__LINE__		4713155	2					
ANR	4713309	Identifier	__LINE__		4713155	0					
ANR	4713310	Argument	0		4713155	3					
ANR	4713311	PrimaryExpression	0		4713155	0					
ANR	4713312	ReturnStatement	return NULL ;	825:4:23923:23934	4713155	1	True				
ANR	4713313	Identifier	NULL		4713155	0					
ANR	4713314	ExpressionStatement	"snprintf ( msg_buf , sizeof ( msg_buf ) , ""Could not open DebugFile \\""%s\\""\\n"" , it -> logPath . c_str ( ) )"	832:3:24033:24132	4713155	3	True				
ANR	4713315	CallExpression	"snprintf ( msg_buf , sizeof ( msg_buf ) , ""Could not open DebugFile \\""%s\\""\\n"" , it -> logPath . c_str ( ) )"		4713155	0					
ANR	4713316	Callee	snprintf		4713155	0					
ANR	4713317	Identifier	snprintf		4713155	0					
ANR	4713318	ArgumentList	msg_buf		4713155	1					
ANR	4713319	Argument	msg_buf		4713155	0					
ANR	4713320	Identifier	msg_buf		4713155	0					
ANR	4713321	Argument	sizeof ( msg_buf )		4713155	1					
ANR	4713322	SizeofExpression	sizeof ( msg_buf )		4713155	0					
ANR	4713323	Sizeof	sizeof		4713155	0					
ANR	4713324	SizeofOperand	msg_buf		4713155	1					
ANR	4713325	Argument	"""Could not open DebugFile \\""%s\\""\\n"""		4713155	2					
ANR	4713326	PrimaryExpression	"""Could not open DebugFile \\""%s\\""\\n"""		4713155	0					
ANR	4713327	Argument	it -> logPath . c_str ( )		4713155	3					
ANR	4713328	CallExpression	it -> logPath . c_str ( )		4713155	0					
ANR	4713329	Callee	it -> logPath . c_str		4713155	0					
ANR	4713330	MemberAccess	it -> logPath . c_str		4713155	0					
ANR	4713331	PtrMemberAccess	it -> logPath		4713155	0					
ANR	4713332	Identifier	it		4713155	0					
ANR	4713333	Identifier	logPath		4713155	1					
ANR	4713334	Identifier	c_str		4713155	1					
ANR	4713335	ArgumentList			4713155	1					
ANR	4713336	ExpressionStatement	"_condor_dprintf_exit ( save_errno , msg_buf )"	834:3:24137:24180	4713155	4	True				
ANR	4713337	CallExpression	"_condor_dprintf_exit ( save_errno , msg_buf )"		4713155	0					
ANR	4713338	Callee	_condor_dprintf_exit		4713155	0					
ANR	4713339	Identifier	_condor_dprintf_exit		4713155	0					
ANR	4713340	ArgumentList	save_errno		4713155	1					
ANR	4713341	Argument	save_errno		4713155	0					
ANR	4713342	Identifier	save_errno		4713155	0					
ANR	4713343	Argument	msg_buf		4713155	1					
ANR	4713344	Identifier	msg_buf		4713155	0					
ANR	4713345	IfStatement	"if ( ( length = lseek ( fileno ( debug_file_ptr ) , 0 , SEEK_END ) ) < 0 )"		4713155	10					
ANR	4713346	Condition	"( length = lseek ( fileno ( debug_file_ptr ) , 0 , SEEK_END ) ) < 0"	838:5:24195:24249	4713155	0	True				
ANR	4713347	RelationalExpression	"( length = lseek ( fileno ( debug_file_ptr ) , 0 , SEEK_END ) ) < 0"		4713155	0		<			
ANR	4713348	AssignmentExpression	"length = lseek ( fileno ( debug_file_ptr ) , 0 , SEEK_END )"		4713155	0		=			
ANR	4713349	Identifier	length		4713155	0					
ANR	4713350	CallExpression	"lseek ( fileno ( debug_file_ptr ) , 0 , SEEK_END )"		4713155	1					
ANR	4713351	Callee	lseek		4713155	0					
ANR	4713352	Identifier	lseek		4713155	0					
ANR	4713353	ArgumentList	fileno ( debug_file_ptr )		4713155	1					
ANR	4713354	Argument	fileno ( debug_file_ptr )		4713155	0					
ANR	4713355	CallExpression	fileno ( debug_file_ptr )		4713155	0					
ANR	4713356	Callee	fileno		4713155	0					
ANR	4713357	Identifier	fileno		4713155	0					
ANR	4713358	ArgumentList	debug_file_ptr		4713155	1					
ANR	4713359	Argument	debug_file_ptr		4713155	0					
ANR	4713360	Identifier	debug_file_ptr		4713155	0					
ANR	4713361	Argument	0		4713155	1					
ANR	4713362	PrimaryExpression	0		4713155	0					
ANR	4713363	Argument	SEEK_END		4713155	2					
ANR	4713364	Identifier	SEEK_END		4713155	0					
ANR	4713365	PrimaryExpression	0		4713155	1					
ANR	4713366	CompoundStatement		60:63:1426:1426	4713155	1					
ANR	4713367	IfStatement	if ( dont_panic )		4713155	0					
ANR	4713368	Condition	dont_panic	839:6:24261:24270	4713155	0	True				
ANR	4713369	Identifier	dont_panic		4713155	0					
ANR	4713370	CompoundStatement		61:18:1446:1446	4713155	1					
ANR	4713371	IfStatement	if ( locked )		4713155	0					
ANR	4713372	Condition	locked	840:6:24281:24286	4713155	0	True				
ANR	4713373	Identifier	locked		4713155	0					
ANR	4713374	ExpressionStatement	debug_close_lock ( )	840:14:24289:24307	4713155	1	True				
ANR	4713375	CallExpression	debug_close_lock ( )		4713155	0					
ANR	4713376	Callee	debug_close_lock		4713155	0					
ANR	4713377	Identifier	debug_close_lock		4713155	0					
ANR	4713378	ArgumentList			4713155	1					
ANR	4713379	ExpressionStatement	debug_close_file ( it )	841:3:24312:24332	4713155	1	True				
ANR	4713380	CallExpression	debug_close_file ( it )		4713155	0					
ANR	4713381	Callee	debug_close_file		4713155	0					
ANR	4713382	Identifier	debug_close_file		4713155	0					
ANR	4713383	ArgumentList	it		4713155	1					
ANR	4713384	Argument	it		4713155	0					
ANR	4713385	Identifier	it		4713155	0					
ANR	4713386	ReturnStatement	return NULL ;	843:3:24338:24349	4713155	2	True				
ANR	4713387	Identifier	NULL		4713155	0					
ANR	4713388	ExpressionStatement	save_errno = errno	845:2:24357:24375	4713155	1	True				
ANR	4713389	AssignmentExpression	save_errno = errno		4713155	0		=			
ANR	4713390	Identifier	save_errno		4713155	0					
ANR	4713391	Identifier	errno		4713155	1					
ANR	4713392	ExpressionStatement	"snprintf ( msg_buf , sizeof ( msg_buf ) , ""Can't seek to end of DebugFP file\\n"" )"	846:2:24379:24454	4713155	2	True				
ANR	4713393	CallExpression	"snprintf ( msg_buf , sizeof ( msg_buf ) , ""Can't seek to end of DebugFP file\\n"" )"		4713155	0					
ANR	4713394	Callee	snprintf		4713155	0					
ANR	4713395	Identifier	snprintf		4713155	0					
ANR	4713396	ArgumentList	msg_buf		4713155	1					
ANR	4713397	Argument	msg_buf		4713155	0					
ANR	4713398	Identifier	msg_buf		4713155	0					
ANR	4713399	Argument	sizeof ( msg_buf )		4713155	1					
ANR	4713400	SizeofExpression	sizeof ( msg_buf )		4713155	0					
ANR	4713401	Sizeof	sizeof		4713155	0					
ANR	4713402	SizeofOperand	msg_buf		4713155	1					
ANR	4713403	Argument	"""Can't seek to end of DebugFP file\\n"""		4713155	2					
ANR	4713404	PrimaryExpression	"""Can't seek to end of DebugFP file\\n"""		4713155	0					
ANR	4713405	ExpressionStatement	"_condor_dprintf_exit ( save_errno , msg_buf )"	847:2:24458:24501	4713155	3	True				
ANR	4713406	CallExpression	"_condor_dprintf_exit ( save_errno , msg_buf )"		4713155	0					
ANR	4713407	Callee	_condor_dprintf_exit		4713155	0					
ANR	4713408	Identifier	_condor_dprintf_exit		4713155	0					
ANR	4713409	ArgumentList	save_errno		4713155	1					
ANR	4713410	Argument	save_errno		4713155	0					
ANR	4713411	Identifier	save_errno		4713155	0					
ANR	4713412	Argument	msg_buf		4713155	1					
ANR	4713413	Identifier	msg_buf		4713155	0					
ANR	4713414	IfStatement	if ( it -> maxLog && length > it -> maxLog )		4713155	11					
ANR	4713415	Condition	it -> maxLog && length > it -> maxLog	850:5:24512:24544	4713155	0	True				
ANR	4713416	AndExpression	it -> maxLog && length > it -> maxLog		4713155	0		&&			
ANR	4713417	PtrMemberAccess	it -> maxLog		4713155	0					
ANR	4713418	Identifier	it		4713155	0					
ANR	4713419	Identifier	maxLog		4713155	1					
ANR	4713420	RelationalExpression	length > it -> maxLog		4713155	1		>			
ANR	4713421	Identifier	length		4713155	0					
ANR	4713422	PtrMemberAccess	it -> maxLog		4713155	1					
ANR	4713423	Identifier	it		4713155	0					
ANR	4713424	Identifier	maxLog		4713155	1					
ANR	4713425	CompoundStatement		72:41:1721:1721	4713155	1					
ANR	4713426	IfStatement	if ( ! locked )		4713155	0					
ANR	4713427	Condition	! locked	851:6:24556:24562	4713155	0	True				
ANR	4713428	UnaryOperationExpression	! locked		4713155	0					
ANR	4713429	UnaryOperator	!		4713155	0					
ANR	4713430	Identifier	locked		4713155	1					
ANR	4713431	CompoundStatement		73:16:1739:1739	4713155	1					
ANR	4713432	IfStatement	if ( debug_file_ptr )		4713155	0					
ANR	4713433	Condition	debug_file_ptr	857:7:24673:24686	4713155	0	True				
ANR	4713434	Identifier	debug_file_ptr		4713155	0					
ANR	4713435	CompoundStatement		80:4:1868:1905	4713155	1					
ANR	4713436	IdentifierDeclStatement	int result = fflush ( debug_file_ptr ) ;	858:4:24695:24732	4713155	0	True				
ANR	4713437	IdentifierDecl	result = fflush ( debug_file_ptr )		4713155	0					
ANR	4713438	IdentifierDeclType	int		4713155	0					
ANR	4713439	Identifier	result		4713155	1					
ANR	4713440	AssignmentExpression	result = fflush ( debug_file_ptr )		4713155	2		=			
ANR	4713441	Identifier	result		4713155	0					
ANR	4713442	CallExpression	fflush ( debug_file_ptr )		4713155	1					
ANR	4713443	Callee	fflush		4713155	0					
ANR	4713444	Identifier	fflush		4713155	0					
ANR	4713445	ArgumentList	debug_file_ptr		4713155	1					
ANR	4713446	Argument	debug_file_ptr		4713155	0					
ANR	4713447	Identifier	debug_file_ptr		4713155	0					
ANR	4713448	IfStatement	if ( result < 0 )		4713155	1					
ANR	4713449	Condition	result < 0	859:8:24742:24751	4713155	0	True				
ANR	4713450	RelationalExpression	result < 0		4713155	0		<			
ANR	4713451	Identifier	result		4713155	0					
ANR	4713452	PrimaryExpression	0		4713155	1					
ANR	4713453	CompoundStatement		81:20:1927:1927	4713155	1					
ANR	4713454	ExpressionStatement	DebugUnlockBroken = 1	860:5:24761:24782	4713155	0	True				
ANR	4713455	AssignmentExpression	DebugUnlockBroken = 1		4713155	0		=			
ANR	4713456	Identifier	DebugUnlockBroken		4713155	0					
ANR	4713457	PrimaryExpression	1		4713155	1					
ANR	4713458	ExpressionStatement	"_condor_dprintf_exit ( errno , ""Can't fflush debug log file\\n"" )"	861:5:24789:24849	4713155	1	True				
ANR	4713459	CallExpression	"_condor_dprintf_exit ( errno , ""Can't fflush debug log file\\n"" )"		4713155	0					
ANR	4713460	Callee	_condor_dprintf_exit		4713155	0					
ANR	4713461	Identifier	_condor_dprintf_exit		4713155	0					
ANR	4713462	ArgumentList	errno		4713155	1					
ANR	4713463	Argument	errno		4713155	0					
ANR	4713464	Identifier	errno		4713155	0					
ANR	4713465	Argument	"""Can't fflush debug log file\\n"""		4713155	1					
ANR	4713466	PrimaryExpression	"""Can't fflush debug log file\\n"""		4713155	0					
ANR	4713467	IfStatement	if ( DebugLock )		4713155	1					
ANR	4713468	Condition	DebugLock	871:6:25093:25101	4713155	0	True				
ANR	4713469	Identifier	DebugLock		4713155	0					
ANR	4713470	CompoundStatement		94:3:2280:2280	4713155	1					
ANR	4713471	ExpressionStatement	debug_close_lock ( )	873:4:25113:25131	4713155	0	True				
ANR	4713472	CallExpression	debug_close_lock ( )		4713155	0					
ANR	4713473	Callee	debug_close_lock		4713155	0					
ANR	4713474	Identifier	debug_close_lock		4713155	0					
ANR	4713475	ArgumentList			4713155	1					
ANR	4713476	ExpressionStatement	debug_close_file ( it )	874:4:25137:25157	4713155	1	True				
ANR	4713477	CallExpression	debug_close_file ( it )		4713155	0					
ANR	4713478	Callee	debug_close_file		4713155	0					
ANR	4713479	Identifier	debug_close_file		4713155	0					
ANR	4713480	ArgumentList	it		4713155	1					
ANR	4713481	Argument	it		4713155	0					
ANR	4713482	Identifier	it		4713155	0					
ANR	4713483	ExpressionStatement	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"	875:4:25163:25201	4713155	2	True				
ANR	4713484	CallExpression	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"		4713155	0					
ANR	4713485	Callee	_set_priv		4713155	0					
ANR	4713486	Identifier	_set_priv		4713155	0					
ANR	4713487	ArgumentList	priv		4713155	1					
ANR	4713488	Argument	priv		4713155	0					
ANR	4713489	Identifier	priv		4713155	0					
ANR	4713490	Argument	__FILE__		4713155	1					
ANR	4713491	Identifier	__FILE__		4713155	0					
ANR	4713492	Argument	__LINE__		4713155	2					
ANR	4713493	Identifier	__LINE__		4713155	0					
ANR	4713494	Argument	0		4713155	3					
ANR	4713495	PrimaryExpression	0		4713155	0					
ANR	4713496	ReturnStatement	"return debug_lock_it ( it , mode , 1 , dont_panic ) ;"	876:4:25207:25252	4713155	3	True				
ANR	4713497	CallExpression	"debug_lock_it ( it , mode , 1 , dont_panic )"		4713155	0					
ANR	4713498	Callee	debug_lock_it		4713155	0					
ANR	4713499	Identifier	debug_lock_it		4713155	0					
ANR	4713500	ArgumentList	it		4713155	1					
ANR	4713501	Argument	it		4713155	0					
ANR	4713502	Identifier	it		4713155	0					
ANR	4713503	Argument	mode		4713155	1					
ANR	4713504	Identifier	mode		4713155	0					
ANR	4713505	Argument	1		4713155	2					
ANR	4713506	PrimaryExpression	1		4713155	0					
ANR	4713507	Argument	dont_panic		4713155	3					
ANR	4713508	Identifier	dont_panic		4713155	0					
ANR	4713509	ExpressionStatement	"_condor_dfprintf ( debug_file_ptr , ""MaxLog = %lld, length = %lld\\n"" , ( long long ) it -> maxLog , ( long long ) length )"	884:2:25467:25575	4713155	1	True				
ANR	4713510	CallExpression	"_condor_dfprintf ( debug_file_ptr , ""MaxLog = %lld, length = %lld\\n"" , ( long long ) it -> maxLog , ( long long ) length )"		4713155	0					
ANR	4713511	Callee	_condor_dfprintf		4713155	0					
ANR	4713512	Identifier	_condor_dfprintf		4713155	0					
ANR	4713513	ArgumentList	debug_file_ptr		4713155	1					
ANR	4713514	Argument	debug_file_ptr		4713155	0					
ANR	4713515	Identifier	debug_file_ptr		4713155	0					
ANR	4713516	Argument	"""MaxLog = %lld, length = %lld\\n"""		4713155	1					
ANR	4713517	PrimaryExpression	"""MaxLog = %lld, length = %lld\\n"""		4713155	0					
ANR	4713518	Argument	( long long ) it -> maxLog		4713155	2					
ANR	4713519	CastExpression	( long long ) it -> maxLog		4713155	0					
ANR	4713520	CastTarget	long long		4713155	0					
ANR	4713521	PtrMemberAccess	it -> maxLog		4713155	1					
ANR	4713522	Identifier	it		4713155	0					
ANR	4713523	Identifier	maxLog		4713155	1					
ANR	4713524	Argument	( long long ) length		4713155	3					
ANR	4713525	CastExpression	( long long ) length		4713155	0					
ANR	4713526	CastTarget	long long		4713155	0					
ANR	4713527	Identifier	length		4713155	1					
ANR	4713528	ExpressionStatement	"debug_file_ptr = preserve_log_file ( it , dont_panic )"	886:2:25582:25632	4713155	2	True				
ANR	4713529	AssignmentExpression	"debug_file_ptr = preserve_log_file ( it , dont_panic )"		4713155	0		=			
ANR	4713530	Identifier	debug_file_ptr		4713155	0					
ANR	4713531	CallExpression	"preserve_log_file ( it , dont_panic )"		4713155	1					
ANR	4713532	Callee	preserve_log_file		4713155	0					
ANR	4713533	Identifier	preserve_log_file		4713155	0					
ANR	4713534	ArgumentList	it		4713155	1					
ANR	4713535	Argument	it		4713155	0					
ANR	4713536	Identifier	it		4713155	0					
ANR	4713537	Argument	dont_panic		4713155	1					
ANR	4713538	Identifier	dont_panic		4713155	0					
ANR	4713539	ExpressionStatement	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"	889:1:25639:25677	4713155	12	True				
ANR	4713540	CallExpression	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"		4713155	0					
ANR	4713541	Callee	_set_priv		4713155	0					
ANR	4713542	Identifier	_set_priv		4713155	0					
ANR	4713543	ArgumentList	priv		4713155	1					
ANR	4713544	Argument	priv		4713155	0					
ANR	4713545	Identifier	priv		4713155	0					
ANR	4713546	Argument	__FILE__		4713155	1					
ANR	4713547	Identifier	__FILE__		4713155	0					
ANR	4713548	Argument	__LINE__		4713155	2					
ANR	4713549	Identifier	__LINE__		4713155	0					
ANR	4713550	Argument	0		4713155	3					
ANR	4713551	PrimaryExpression	0		4713155	0					
ANR	4713552	ReturnStatement	return debug_file_ptr ;	891:1:25681:25702	4713155	13	True				
ANR	4713553	Identifier	debug_file_ptr		4713155	0					
ANR	4713554	ReturnType	static FILE *		4713155	1					
ANR	4713555	Identifier	debug_lock_it		4713155	2					
ANR	4713556	ParameterList	"struct DebugFileInfo * it , const char * mode , int force_lock , bool dont_panic"		4713155	3					
ANR	4713557	Parameter	struct DebugFileInfo * it	778:14:22749:22772	4713155	0	True				
ANR	4713558	ParameterType	struct DebugFileInfo *		4713155	0					
ANR	4713559	Identifier	it		4713155	1					
ANR	4713560	Parameter	const char * mode	778:40:22775:22790	4713155	1	True				
ANR	4713561	ParameterType	const char *		4713155	0					
ANR	4713562	Identifier	mode		4713155	1					
ANR	4713563	Parameter	int force_lock	778:58:22793:22806	4713155	2	True				
ANR	4713564	ParameterType	int		4713155	0					
ANR	4713565	Identifier	force_lock		4713155	1					
ANR	4713566	Parameter	bool dont_panic	778:74:22809:22823	4713155	3	True				
ANR	4713567	ParameterType	bool		4713155	0					
ANR	4713568	Identifier	dont_panic		4713155	1					
ANR	4713569	CFGEntryNode	ENTRY		4713155		True				
ANR	4713570	CFGExitNode	EXIT		4713155		True				
ANR	4713571	Symbol	fflush		4713155						
ANR	4713572	Symbol	lseek		4713155						
ANR	4713573	Symbol	_set_priv		4713155						
ANR	4713574	Symbol	DebugContinueOnOpenFailure		4713155						
ANR	4713575	Symbol	it -> maxLog		4713155						
ANR	4713576	Symbol	save_errno		4713155						
ANR	4713577	Symbol	mode		4713155						
ANR	4713578	Symbol	result		4713155						
ANR	4713579	Symbol	DebugShouldLockToAppend		4713155						
ANR	4713580	Symbol	priv		4713155						
ANR	4713581	Symbol	it -> debugFP		4713155						
ANR	4713582	Symbol	locked		4713155						
ANR	4713583	Symbol	DebugUnlockBroken		4713155						
ANR	4713584	Symbol	errno		4713155						
ANR	4713585	Symbol	NULL		4713155						
ANR	4713586	Symbol	DebugLock		4713155						
ANR	4713587	Symbol	preserve_log_file		4713155						
ANR	4713588	Symbol	it -> logPath . c_str		4713155						
ANR	4713589	Symbol	__FILE__		4713155						
ANR	4713590	Symbol	open_debug_file		4713155						
ANR	4713591	Symbol	length		4713155						
ANR	4713592	Symbol	msg_buf		4713155						
ANR	4713593	Symbol	it		4713155						
ANR	4713594	Symbol	dont_panic		4713155						
ANR	4713595	Symbol	debug_file_ptr		4713155						
ANR	4713596	Symbol	__LINE__		4713155						
ANR	4713597	Symbol	SEEK_END		4713155						
ANR	4713598	Symbol	* it		4713155						
ANR	4713599	Symbol	fileno		4713155						
ANR	4713600	Symbol	debug_lock_it		4713155						
ANR	4713601	Symbol	force_lock		4713155						
ANR	4713602	Symbol	PRIV_CONDOR		4713155						
ANR	4713603	Symbol	it -> logPath		4713155						
ANR	4713604	Function	debug_close_lock	894:0:25707:26222							
ANR	4713605	FunctionDef	debug_close_lock ()		4713604	0					
ANR	4713606	CompoundStatement		896:0:25743:26222	4713604	0					
ANR	4713607	IdentifierDeclStatement	int flock_errno ;	897:1:25746:25761	4713604	0	True				
ANR	4713608	IdentifierDecl	flock_errno		4713604	0					
ANR	4713609	IdentifierDeclType	int		4713604	0					
ANR	4713610	Identifier	flock_errno		4713604	1					
ANR	4713611	IdentifierDeclStatement	char msg_buf [ DPRINTF_ERR_MAX ] ;	898:1:25764:25793	4713604	1	True				
ANR	4713612	IdentifierDecl	msg_buf [ DPRINTF_ERR_MAX ]		4713604	0					
ANR	4713613	IdentifierDeclType	char [ DPRINTF_ERR_MAX ]		4713604	0					
ANR	4713614	Identifier	msg_buf		4713604	1					
ANR	4713615	Identifier	DPRINTF_ERR_MAX		4713604	2					
ANR	4713616	IfStatement	if ( DebugUnlockBroken )		4713604	2					
ANR	4713617	Condition	DebugUnlockBroken	899:4:25799:25815	4713604	0	True				
ANR	4713618	Identifier	DebugUnlockBroken		4713604	0					
ANR	4713619	ReturnStatement	return ;	900:2:25820:25826	4713604	1	True				
ANR	4713620	IfStatement	if ( DebugIsLocked )		4713604	3					
ANR	4713621	Condition	DebugIsLocked	902:4:25833:25845	4713604	0	True				
ANR	4713622	Identifier	DebugIsLocked		4713604	0					
ANR	4713623	CompoundStatement		8:1:105:105	4713604	1					
ANR	4713624	ExpressionStatement	errno = 0	904:2:25853:25862	4713604	0	True				
ANR	4713625	AssignmentExpression	errno = 0		4713604	0		=			
ANR	4713626	Identifier	errno		4713604	0					
ANR	4713627	PrimaryExpression	0		4713604	1					
ANR	4713628	IfStatement	"if ( lock_or_mutex_file ( LockFd , UN_LOCK , TRUE ) < 0 )"		4713604	1					
ANR	4713629	Condition	"lock_or_mutex_file ( LockFd , UN_LOCK , TRUE ) < 0"	906:7:25884:25926	4713604	0	True				
ANR	4713630	RelationalExpression	"lock_or_mutex_file ( LockFd , UN_LOCK , TRUE ) < 0"		4713604	0		<			
ANR	4713631	CallExpression	"lock_or_mutex_file ( LockFd , UN_LOCK , TRUE )"		4713604	0					
ANR	4713632	Callee	lock_or_mutex_file		4713604	0					
ANR	4713633	Identifier	lock_or_mutex_file		4713604	0					
ANR	4713634	ArgumentList	LockFd		4713604	1					
ANR	4713635	Argument	LockFd		4713604	0					
ANR	4713636	Identifier	LockFd		4713604	0					
ANR	4713637	Argument	UN_LOCK		4713604	1					
ANR	4713638	Identifier	UN_LOCK		4713604	0					
ANR	4713639	Argument	TRUE		4713604	2					
ANR	4713640	Identifier	TRUE		4713604	0					
ANR	4713641	PrimaryExpression	0		4713604	1					
ANR	4713642	CompoundStatement		15:2:250:250	4713604	1					
ANR	4713643	ExpressionStatement	flock_errno = errno	911:3:25999:26018	4713604	0	True				
ANR	4713644	AssignmentExpression	flock_errno = errno		4713604	0		=			
ANR	4713645	Identifier	flock_errno		4713604	0					
ANR	4713646	Identifier	errno		4713604	1					
ANR	4713647	ExpressionStatement	"snprintf ( msg_buf , sizeof ( msg_buf ) , ""Can't release exclusive lock on \\""%s\\"", LockFd=%d\\n"" , DebugLock , LockFd )"	912:3:26023:26138	4713604	1	True				
ANR	4713648	CallExpression	"snprintf ( msg_buf , sizeof ( msg_buf ) , ""Can't release exclusive lock on \\""%s\\"", LockFd=%d\\n"" , DebugLock , LockFd )"		4713604	0					
ANR	4713649	Callee	snprintf		4713604	0					
ANR	4713650	Identifier	snprintf		4713604	0					
ANR	4713651	ArgumentList	msg_buf		4713604	1					
ANR	4713652	Argument	msg_buf		4713604	0					
ANR	4713653	Identifier	msg_buf		4713604	0					
ANR	4713654	Argument	sizeof ( msg_buf )		4713604	1					
ANR	4713655	SizeofExpression	sizeof ( msg_buf )		4713604	0					
ANR	4713656	Sizeof	sizeof		4713604	0					
ANR	4713657	SizeofOperand	msg_buf		4713604	1					
ANR	4713658	Argument	"""Can't release exclusive lock on \\""%s\\"", LockFd=%d\\n"""		4713604	2					
ANR	4713659	PrimaryExpression	"""Can't release exclusive lock on \\""%s\\"", LockFd=%d\\n"""		4713604	0					
ANR	4713660	Argument	DebugLock		4713604	3					
ANR	4713661	Identifier	DebugLock		4713604	0					
ANR	4713662	Argument	LockFd		4713604	4					
ANR	4713663	Identifier	LockFd		4713604	0					
ANR	4713664	ExpressionStatement	DebugUnlockBroken = 1	914:3:26143:26164	4713604	2	True				
ANR	4713665	AssignmentExpression	DebugUnlockBroken = 1		4713604	0		=			
ANR	4713666	Identifier	DebugUnlockBroken		4713604	0					
ANR	4713667	PrimaryExpression	1		4713604	1					
ANR	4713668	ExpressionStatement	"_condor_dprintf_exit ( flock_errno , msg_buf )"	915:3:26169:26213	4713604	3	True				
ANR	4713669	CallExpression	"_condor_dprintf_exit ( flock_errno , msg_buf )"		4713604	0					
ANR	4713670	Callee	_condor_dprintf_exit		4713604	0					
ANR	4713671	Identifier	_condor_dprintf_exit		4713604	0					
ANR	4713672	ArgumentList	flock_errno		4713604	1					
ANR	4713673	Argument	flock_errno		4713604	0					
ANR	4713674	Identifier	flock_errno		4713604	0					
ANR	4713675	Argument	msg_buf		4713604	1					
ANR	4713676	Identifier	msg_buf		4713604	0					
ANR	4713677	ReturnType	static void		4713604	1					
ANR	4713678	Identifier	debug_close_lock		4713604	2					
ANR	4713679	ParameterList			4713604	3					
ANR	4713680	CFGEntryNode	ENTRY		4713604		True				
ANR	4713681	CFGExitNode	EXIT		4713604		True				
ANR	4713682	Symbol	DebugIsLocked		4713604						
ANR	4713683	Symbol	errno		4713604						
ANR	4713684	Symbol	LockFd		4713604						
ANR	4713685	Symbol	DebugLock		4713604						
ANR	4713686	Symbol	lock_or_mutex_file		4713604						
ANR	4713687	Symbol	msg_buf		4713604						
ANR	4713688	Symbol	TRUE		4713604						
ANR	4713689	Symbol	UN_LOCK		4713604						
ANR	4713690	Symbol	DebugUnlockBroken		4713604						
ANR	4713691	Symbol	flock_errno		4713604						
ANR	4713692	Function	debug_close_file	920:0:26225:26602							
ANR	4713693	FunctionDef	debug_close_file (struct DebugFileInfo * it)		4713692	0					
ANR	4713694	CompoundStatement		922:0:26281:26602	4713692	0					
ANR	4713695	IdentifierDeclStatement	FILE * debug_file_ptr = ( * it ) . debugFP ;	923:1:26284:26320	4713692	0	True				
ANR	4713696	IdentifierDecl	* debug_file_ptr = ( * it ) . debugFP		4713692	0					
ANR	4713697	IdentifierDeclType	FILE *		4713692	0					
ANR	4713698	Identifier	debug_file_ptr		4713692	1					
ANR	4713699	AssignmentExpression	* debug_file_ptr = ( * it ) . debugFP		4713692	2		=			
ANR	4713700	Identifier	debug_file_ptr		4713692	0					
ANR	4713701	MemberAccess	( * it ) . debugFP		4713692	1					
ANR	4713702	UnaryOperationExpression	* it		4713692	0					
ANR	4713703	UnaryOperator	*		4713692	0					
ANR	4713704	Identifier	it		4713692	1					
ANR	4713705	Identifier	debugFP		4713692	1					
ANR	4713706	IfStatement	if ( debug_file_ptr )		4713692	1					
ANR	4713707	Condition	debug_file_ptr	925:5:26328:26341	4713692	0	True				
ANR	4713708	Identifier	debug_file_ptr		4713692	0					
ANR	4713709	CompoundStatement		4:22:63:63	4713692	1					
ANR	4713710	IfStatement	if ( debug_file_ptr )		4713692	0					
ANR	4713711	Condition	debug_file_ptr	926:6:26353:26366	4713692	0	True				
ANR	4713712	Identifier	debug_file_ptr		4713692	0					
ANR	4713713	CompoundStatement		6:3:92:161	4713692	1					
ANR	4713714	IdentifierDeclStatement	"int close_result = fclose_wrapper ( debug_file_ptr , FCLOSE_RETRY_MAX ) ;"	927:3:26374:26443	4713692	0	True				
ANR	4713715	IdentifierDecl	"close_result = fclose_wrapper ( debug_file_ptr , FCLOSE_RETRY_MAX )"		4713692	0					
ANR	4713716	IdentifierDeclType	int		4713692	0					
ANR	4713717	Identifier	close_result		4713692	1					
ANR	4713718	AssignmentExpression	"close_result = fclose_wrapper ( debug_file_ptr , FCLOSE_RETRY_MAX )"		4713692	2		=			
ANR	4713719	Identifier	close_result		4713692	0					
ANR	4713720	CallExpression	"fclose_wrapper ( debug_file_ptr , FCLOSE_RETRY_MAX )"		4713692	1					
ANR	4713721	Callee	fclose_wrapper		4713692	0					
ANR	4713722	Identifier	fclose_wrapper		4713692	0					
ANR	4713723	ArgumentList	debug_file_ptr		4713692	1					
ANR	4713724	Argument	debug_file_ptr		4713692	0					
ANR	4713725	Identifier	debug_file_ptr		4713692	0					
ANR	4713726	Argument	FCLOSE_RETRY_MAX		4713692	1					
ANR	4713727	Identifier	FCLOSE_RETRY_MAX		4713692	0					
ANR	4713728	IfStatement	if ( close_result < 0 )		4713692	1					
ANR	4713729	Condition	close_result < 0	928:7:26452:26467	4713692	0	True				
ANR	4713730	RelationalExpression	close_result < 0		4713692	0		<			
ANR	4713731	Identifier	close_result		4713692	0					
ANR	4713732	PrimaryExpression	0		4713692	1					
ANR	4713733	CompoundStatement		7:25:188:188	4713692	1					
ANR	4713734	ExpressionStatement	DebugUnlockBroken = 1	929:4:26476:26497	4713692	0	True				
ANR	4713735	AssignmentExpression	DebugUnlockBroken = 1		4713692	0		=			
ANR	4713736	Identifier	DebugUnlockBroken		4713692	0					
ANR	4713737	PrimaryExpression	1		4713692	1					
ANR	4713738	ExpressionStatement	"_condor_dprintf_exit ( errno , ""Can't fclose debug log file\\n"" )"	930:4:26503:26563	4713692	1	True				
ANR	4713739	CallExpression	"_condor_dprintf_exit ( errno , ""Can't fclose debug log file\\n"" )"		4713692	0					
ANR	4713740	Callee	_condor_dprintf_exit		4713692	0					
ANR	4713741	Identifier	_condor_dprintf_exit		4713692	0					
ANR	4713742	ArgumentList	errno		4713692	1					
ANR	4713743	Argument	errno		4713692	0					
ANR	4713744	Identifier	errno		4713692	0					
ANR	4713745	Argument	"""Can't fclose debug log file\\n"""		4713692	1					
ANR	4713746	PrimaryExpression	"""Can't fclose debug log file\\n"""		4713692	0					
ANR	4713747	ExpressionStatement	( * it ) . debugFP = NULL	932:3:26573:26593	4713692	2	True				
ANR	4713748	AssignmentExpression	( * it ) . debugFP = NULL		4713692	0		=			
ANR	4713749	MemberAccess	( * it ) . debugFP		4713692	0					
ANR	4713750	UnaryOperationExpression	* it		4713692	0					
ANR	4713751	UnaryOperator	*		4713692	0					
ANR	4713752	Identifier	it		4713692	1					
ANR	4713753	Identifier	debugFP		4713692	1					
ANR	4713754	Identifier	NULL		4713692	1					
ANR	4713755	ReturnType	static void		4713692	1					
ANR	4713756	Identifier	debug_close_file		4713692	2					
ANR	4713757	ParameterList	struct DebugFileInfo * it		4713692	3					
ANR	4713758	Parameter	struct DebugFileInfo * it	921:17:26255:26278	4713692	0	True				
ANR	4713759	ParameterType	struct DebugFileInfo *		4713692	0					
ANR	4713760	Identifier	it		4713692	1					
ANR	4713761	CFGEntryNode	ENTRY		4713692		True				
ANR	4713762	CFGExitNode	EXIT		4713692		True				
ANR	4713763	Symbol	* it		4713692						
ANR	4713764	Symbol	errno		4713692						
ANR	4713765	Symbol	NULL		4713692						
ANR	4713766	Symbol	it		4713692						
ANR	4713767	Symbol	close_result		4713692						
ANR	4713768	Symbol	FCLOSE_RETRY_MAX		4713692						
ANR	4713769	Symbol	debug_file_ptr		4713692						
ANR	4713770	Symbol	fclose_wrapper		4713692						
ANR	4713771	Symbol	DebugUnlockBroken		4713692						
ANR	4713772	Symbol	( * it ) . debugFP		4713692						
ANR	4713773	Function	debug_close_all_files	937:0:26605:27069							
ANR	4713774	FunctionDef	debug_close_all_files ()		4713773	0					
ANR	4713775	CompoundStatement		939:0:26642:27069	4713773	0					
ANR	4713776	IdentifierDeclStatement	FILE * debug_file_ptr = NULL ;	940:1:26645:26672	4713773	0	True				
ANR	4713777	IdentifierDecl	* debug_file_ptr = NULL		4713773	0					
ANR	4713778	IdentifierDeclType	FILE *		4713773	0					
ANR	4713779	Identifier	debug_file_ptr		4713773	1					
ANR	4713780	AssignmentExpression	* debug_file_ptr = NULL		4713773	2		=			
ANR	4713781	Identifier	NULL		4713773	0					
ANR	4713782	Identifier	NULL		4713773	1					
ANR	4713783	IdentifierDeclStatement	std :: vector < DebugFileInfo > :: iterator it ;	941:1:26675:26714	4713773	1	True				
ANR	4713784	IdentifierDecl	it		4713773	0					
ANR	4713785	IdentifierDeclType	std :: vector < DebugFileInfo > :: iterator		4713773	0					
ANR	4713786	Identifier	it		4713773	1					
ANR	4713787	ForStatement	for ( it = DebugLogs -> begin ( ) ; it < DebugLogs -> end ( ) ; it ++ )		4713773	2					
ANR	4713788	ForInit	it = DebugLogs -> begin ( ) ;	943:5:26722:26745	4713773	0	True				
ANR	4713789	AssignmentExpression	it = DebugLogs -> begin ( )		4713773	0		=			
ANR	4713790	Identifier	it		4713773	0					
ANR	4713791	CallExpression	DebugLogs -> begin ( )		4713773	1					
ANR	4713792	Callee	DebugLogs -> begin		4713773	0					
ANR	4713793	PtrMemberAccess	DebugLogs -> begin		4713773	0					
ANR	4713794	Identifier	DebugLogs		4713773	0					
ANR	4713795	Identifier	begin		4713773	1					
ANR	4713796	ArgumentList			4713773	1					
ANR	4713797	Condition	it < DebugLogs -> end ( )	943:30:26747:26767	4713773	1	True				
ANR	4713798	RelationalExpression	it < DebugLogs -> end ( )		4713773	0		<			
ANR	4713799	Identifier	it		4713773	0					
ANR	4713800	CallExpression	DebugLogs -> end ( )		4713773	1					
ANR	4713801	Callee	DebugLogs -> end		4713773	0					
ANR	4713802	PtrMemberAccess	DebugLogs -> end		4713773	0					
ANR	4713803	Identifier	DebugLogs		4713773	0					
ANR	4713804	Identifier	end		4713773	1					
ANR	4713805	ArgumentList			4713773	1					
ANR	4713806	PostIncDecOperationExpression	it ++	943:53:26770:26773	4713773	2	True				
ANR	4713807	Identifier	it		4713773	0					
ANR	4713808	IncDec	++		4713773	1					
ANR	4713809	CompoundStatement		10:2:207:276	4713773	3					
ANR	4713810	ExpressionStatement	debug_file_ptr = ( * it ) . debugFP	945:2:26781:26811	4713773	0	True				
ANR	4713811	AssignmentExpression	debug_file_ptr = ( * it ) . debugFP		4713773	0		=			
ANR	4713812	Identifier	debug_file_ptr		4713773	0					
ANR	4713813	MemberAccess	( * it ) . debugFP		4713773	1					
ANR	4713814	UnaryOperationExpression	* it		4713773	0					
ANR	4713815	UnaryOperator	*		4713773	0					
ANR	4713816	Identifier	it		4713773	1					
ANR	4713817	Identifier	debugFP		4713773	1					
ANR	4713818	IfStatement	if ( ! debug_file_ptr )		4713773	1					
ANR	4713819	Condition	! debug_file_ptr	946:5:26818:26832	4713773	0	True				
ANR	4713820	UnaryOperationExpression	! debug_file_ptr		4713773	0					
ANR	4713821	UnaryOperator	!		4713773	0					
ANR	4713822	Identifier	debug_file_ptr		4713773	1					
ANR	4713823	ContinueStatement	continue ;	947:3:26838:26846	4713773	1	True				
ANR	4713824	IdentifierDeclStatement	"int close_result = fclose_wrapper ( debug_file_ptr , FCLOSE_RETRY_MAX ) ;"	948:2:26850:26919	4713773	2	True				
ANR	4713825	IdentifierDecl	"close_result = fclose_wrapper ( debug_file_ptr , FCLOSE_RETRY_MAX )"		4713773	0					
ANR	4713826	IdentifierDeclType	int		4713773	0					
ANR	4713827	Identifier	close_result		4713773	1					
ANR	4713828	AssignmentExpression	"close_result = fclose_wrapper ( debug_file_ptr , FCLOSE_RETRY_MAX )"		4713773	2		=			
ANR	4713829	Identifier	close_result		4713773	0					
ANR	4713830	CallExpression	"fclose_wrapper ( debug_file_ptr , FCLOSE_RETRY_MAX )"		4713773	1					
ANR	4713831	Callee	fclose_wrapper		4713773	0					
ANR	4713832	Identifier	fclose_wrapper		4713773	0					
ANR	4713833	ArgumentList	debug_file_ptr		4713773	1					
ANR	4713834	Argument	debug_file_ptr		4713773	0					
ANR	4713835	Identifier	debug_file_ptr		4713773	0					
ANR	4713836	Argument	FCLOSE_RETRY_MAX		4713773	1					
ANR	4713837	Identifier	FCLOSE_RETRY_MAX		4713773	0					
ANR	4713838	IfStatement	if ( close_result < 0 )		4713773	3					
ANR	4713839	Condition	close_result < 0	949:6:26927:26942	4713773	0	True				
ANR	4713840	RelationalExpression	close_result < 0		4713773	0		<			
ANR	4713841	Identifier	close_result		4713773	0					
ANR	4713842	PrimaryExpression	0		4713773	1					
ANR	4713843	CompoundStatement		11:24:302:302	4713773	1					
ANR	4713844	ExpressionStatement	DebugUnlockBroken = 1	950:3:26950:26971	4713773	0	True				
ANR	4713845	AssignmentExpression	DebugUnlockBroken = 1		4713773	0		=			
ANR	4713846	Identifier	DebugUnlockBroken		4713773	0					
ANR	4713847	PrimaryExpression	1		4713773	1					
ANR	4713848	ExpressionStatement	"_condor_dprintf_exit ( errno , ""Can't fclose debug log file\\n"" )"	951:3:26976:27036	4713773	1	True				
ANR	4713849	CallExpression	"_condor_dprintf_exit ( errno , ""Can't fclose debug log file\\n"" )"		4713773	0					
ANR	4713850	Callee	_condor_dprintf_exit		4713773	0					
ANR	4713851	Identifier	_condor_dprintf_exit		4713773	0					
ANR	4713852	ArgumentList	errno		4713773	1					
ANR	4713853	Argument	errno		4713773	0					
ANR	4713854	Identifier	errno		4713773	0					
ANR	4713855	Argument	"""Can't fclose debug log file\\n"""		4713773	1					
ANR	4713856	PrimaryExpression	"""Can't fclose debug log file\\n"""		4713773	0					
ANR	4713857	ExpressionStatement	( * it ) . debugFP = NULL	953:2:27044:27064	4713773	4	True				
ANR	4713858	AssignmentExpression	( * it ) . debugFP = NULL		4713773	0		=			
ANR	4713859	MemberAccess	( * it ) . debugFP		4713773	0					
ANR	4713860	UnaryOperationExpression	* it		4713773	0					
ANR	4713861	UnaryOperator	*		4713773	0					
ANR	4713862	Identifier	it		4713773	1					
ANR	4713863	Identifier	debugFP		4713773	1					
ANR	4713864	Identifier	NULL		4713773	1					
ANR	4713865	ReturnType	static void		4713773	1					
ANR	4713866	Identifier	debug_close_all_files		4713773	2					
ANR	4713867	ParameterList			4713773	3					
ANR	4713868	CFGEntryNode	ENTRY		4713773		True				
ANR	4713869	CFGExitNode	EXIT		4713773		True				
ANR	4713870	Symbol	DebugLogs -> end		4713773						
ANR	4713871	Symbol	errno		4713773						
ANR	4713872	Symbol	NULL		4713773						
ANR	4713873	Symbol	it		4713773						
ANR	4713874	Symbol	debug_file_ptr		4713773						
ANR	4713875	Symbol	fclose_wrapper		4713773						
ANR	4713876	Symbol	* it		4713773						
ANR	4713877	Symbol	DebugLogs -> begin		4713773						
ANR	4713878	Symbol	close_result		4713773						
ANR	4713879	Symbol	FCLOSE_RETRY_MAX		4713773						
ANR	4713880	Symbol	* DebugLogs		4713773						
ANR	4713881	Symbol	DebugUnlockBroken		4713773						
ANR	4713882	Symbol	DebugLogs		4713773						
ANR	4713883	Symbol	( * it ) . debugFP		4713773						
ANR	4713884	Function	debug_unlock	957:0:27072:27508							
ANR	4713885	FunctionDef	debug_unlock (int debug_flags)		4713884	0					
ANR	4713886	CompoundStatement		959:0:27107:27508	4713884	0					
ANR	4713887	IdentifierDeclStatement	std :: vector < DebugFileInfo > :: iterator it ;	960:1:27110:27149	4713884	0	True				
ANR	4713888	IdentifierDecl	it		4713884	0					
ANR	4713889	IdentifierDeclType	std :: vector < DebugFileInfo > :: iterator		4713884	0					
ANR	4713890	Identifier	it		4713884	1					
ANR	4713891	ForStatement	for ( it = DebugLogs -> begin ( ) ; it < DebugLogs -> end ( ) ; it ++ )		4713884	1					
ANR	4713892	ForInit	it = DebugLogs -> begin ( ) ;	961:5:27156:27179	4713884	0	True				
ANR	4713893	AssignmentExpression	it = DebugLogs -> begin ( )		4713884	0		=			
ANR	4713894	Identifier	it		4713884	0					
ANR	4713895	CallExpression	DebugLogs -> begin ( )		4713884	1					
ANR	4713896	Callee	DebugLogs -> begin		4713884	0					
ANR	4713897	PtrMemberAccess	DebugLogs -> begin		4713884	0					
ANR	4713898	Identifier	DebugLogs		4713884	0					
ANR	4713899	Identifier	begin		4713884	1					
ANR	4713900	ArgumentList			4713884	1					
ANR	4713901	Condition	it < DebugLogs -> end ( )	961:30:27181:27201	4713884	1	True				
ANR	4713902	RelationalExpression	it < DebugLogs -> end ( )		4713884	0		<			
ANR	4713903	Identifier	it		4713884	0					
ANR	4713904	CallExpression	DebugLogs -> end ( )		4713884	1					
ANR	4713905	Callee	DebugLogs -> end		4713884	0					
ANR	4713906	PtrMemberAccess	DebugLogs -> end		4713884	0					
ANR	4713907	Identifier	DebugLogs		4713884	0					
ANR	4713908	Identifier	end		4713884	1					
ANR	4713909	ArgumentList			4713884	1					
ANR	4713910	PostIncDecOperationExpression	it ++	961:53:27204:27207	4713884	2	True				
ANR	4713911	Identifier	it		4713884	0					
ANR	4713912	IncDec	++		4713884	1					
ANR	4713913	CompoundStatement		4:1:103:103	4713884	3					
ANR	4713914	IfStatement	if ( it -> debugFlags != debug_flags )		4713884	0					
ANR	4713915	Condition	it -> debugFlags != debug_flags	968:5:27425:27453	4713884	0	True				
ANR	4713916	EqualityExpression	it -> debugFlags != debug_flags		4713884	0		!=			
ANR	4713917	PtrMemberAccess	it -> debugFlags		4713884	0					
ANR	4713918	Identifier	it		4713884	0					
ANR	4713919	Identifier	debugFlags		4713884	1					
ANR	4713920	Identifier	debug_flags		4713884	1					
ANR	4713921	ContinueStatement	continue ;	969:3:27459:27467	4713884	1	True				
ANR	4713922	ExpressionStatement	debug_unlock_it ( & ( * it ) )	970:2:27471:27494	4713884	1	True				
ANR	4713923	CallExpression	debug_unlock_it ( & ( * it ) )		4713884	0					
ANR	4713924	Callee	debug_unlock_it		4713884	0					
ANR	4713925	Identifier	debug_unlock_it		4713884	0					
ANR	4713926	ArgumentList	& ( * it )		4713884	1					
ANR	4713927	Argument	& ( * it )		4713884	0					
ANR	4713928	UnaryOperationExpression	& ( * it )		4713884	0					
ANR	4713929	UnaryOperator	&		4713884	0					
ANR	4713930	UnaryOperationExpression	* it		4713884	1					
ANR	4713931	UnaryOperator	*		4713884	0					
ANR	4713932	Identifier	it		4713884	1					
ANR	4713933	BreakStatement	break ;	971:2:27498:27503	4713884	2	True				
ANR	4713934	ReturnType	void		4713884	1					
ANR	4713935	Identifier	debug_unlock		4713884	2					
ANR	4713936	ParameterList	int debug_flags		4713884	3					
ANR	4713937	Parameter	int debug_flags	958:13:27090:27104	4713884	0	True				
ANR	4713938	ParameterType	int		4713884	0					
ANR	4713939	Identifier	debug_flags		4713884	1					
ANR	4713940	CFGEntryNode	ENTRY		4713884		True				
ANR	4713941	CFGExitNode	EXIT		4713884		True				
ANR	4713942	Symbol	DebugLogs -> end		4713884						
ANR	4713943	Symbol	debug_flags		4713884						
ANR	4713944	Symbol	* it		4713884						
ANR	4713945	Symbol	it -> debugFlags		4713884						
ANR	4713946	Symbol	DebugLogs -> begin		4713884						
ANR	4713947	Symbol	it		4713884						
ANR	4713948	Symbol	* DebugLogs		4713884						
ANR	4713949	Symbol	DebugLogs		4713884						
ANR	4713950	Function	debug_unlock_it	975:0:27511:28039							
ANR	4713951	FunctionDef	debug_unlock_it (struct DebugFileInfo * it)		4713950	0					
ANR	4713952	CompoundStatement		977:0:27565:28039	4713950	0					
ANR	4713953	IdentifierDeclStatement	priv_state priv ;	978:1:27568:27583	4713950	0	True				
ANR	4713954	IdentifierDecl	priv		4713950	0					
ANR	4713955	IdentifierDeclType	priv_state		4713950	0					
ANR	4713956	Identifier	priv		4713950	1					
ANR	4713957	IdentifierDeclStatement	int result = 0 ;	979:1:27586:27600	4713950	1	True				
ANR	4713958	IdentifierDecl	result = 0		4713950	0					
ANR	4713959	IdentifierDeclType	int		4713950	0					
ANR	4713960	Identifier	result		4713950	1					
ANR	4713961	AssignmentExpression	result = 0		4713950	2		=			
ANR	4713962	Identifier	result		4713950	0					
ANR	4713963	PrimaryExpression	0		4713950	1					
ANR	4713964	IdentifierDeclStatement	FILE * debug_file_ptr = ( * it ) . debugFP ;	981:1:27604:27640	4713950	2	True				
ANR	4713965	IdentifierDecl	* debug_file_ptr = ( * it ) . debugFP		4713950	0					
ANR	4713966	IdentifierDeclType	FILE *		4713950	0					
ANR	4713967	Identifier	debug_file_ptr		4713950	1					
ANR	4713968	AssignmentExpression	* debug_file_ptr = ( * it ) . debugFP		4713950	2		=			
ANR	4713969	Identifier	debug_file_ptr		4713950	0					
ANR	4713970	MemberAccess	( * it ) . debugFP		4713950	1					
ANR	4713971	UnaryOperationExpression	* it		4713950	0					
ANR	4713972	UnaryOperator	*		4713950	0					
ANR	4713973	Identifier	it		4713950	1					
ANR	4713974	Identifier	debugFP		4713950	1					
ANR	4713975	IfStatement	if ( log_keep_open )		4713950	3					
ANR	4713976	Condition	log_keep_open	983:4:27647:27659	4713950	0	True				
ANR	4713977	Identifier	log_keep_open		4713950	0					
ANR	4713978	ReturnStatement	return ;	984:2:27664:27670	4713950	1	True				
ANR	4713979	IfStatement	if ( DebugUnlockBroken )		4713950	4					
ANR	4713980	Condition	DebugUnlockBroken	986:5:27678:27694	4713950	0	True				
ANR	4713981	Identifier	DebugUnlockBroken		4713950	0					
ANR	4713982	CompoundStatement		10:25:132:132	4713950	1					
ANR	4713983	ReturnStatement	return ;	987:2:27702:27708	4713950	0	True				
ANR	4713984	ExpressionStatement	"priv = _set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"	990:1:27715:27767	4713950	5	True				
ANR	4713985	AssignmentExpression	"priv = _set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"		4713950	0		=			
ANR	4713986	Identifier	priv		4713950	0					
ANR	4713987	CallExpression	"_set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"		4713950	1					
ANR	4713988	Callee	_set_priv		4713950	0					
ANR	4713989	Identifier	_set_priv		4713950	0					
ANR	4713990	ArgumentList	PRIV_CONDOR		4713950	1					
ANR	4713991	Argument	PRIV_CONDOR		4713950	0					
ANR	4713992	Identifier	PRIV_CONDOR		4713950	0					
ANR	4713993	Argument	__FILE__		4713950	1					
ANR	4713994	Identifier	__FILE__		4713950	0					
ANR	4713995	Argument	__LINE__		4713950	2					
ANR	4713996	Identifier	__LINE__		4713950	0					
ANR	4713997	Argument	0		4713950	3					
ANR	4713998	PrimaryExpression	0		4713950	0					
ANR	4713999	IfStatement	if ( debug_file_ptr )		4713950	6					
ANR	4714000	Condition	debug_file_ptr	992:5:27775:27788	4713950	0	True				
ANR	4714001	Identifier	debug_file_ptr		4713950	0					
ANR	4714002	CompoundStatement		16:21:225:225	4713950	1					
ANR	4714003	ExpressionStatement	result = fflush ( debug_file_ptr )	993:2:27795:27828	4713950	0	True				
ANR	4714004	AssignmentExpression	result = fflush ( debug_file_ptr )		4713950	0		=			
ANR	4714005	Identifier	result		4713950	0					
ANR	4714006	CallExpression	fflush ( debug_file_ptr )		4713950	1					
ANR	4714007	Callee	fflush		4713950	0					
ANR	4714008	Identifier	fflush		4713950	0					
ANR	4714009	ArgumentList	debug_file_ptr		4713950	1					
ANR	4714010	Argument	debug_file_ptr		4713950	0					
ANR	4714011	Identifier	debug_file_ptr		4713950	0					
ANR	4714012	IfStatement	if ( result < 0 )		4713950	1					
ANR	4714013	Condition	result < 0	994:6:27836:27845	4713950	0	True				
ANR	4714014	RelationalExpression	result < 0		4713950	0		<			
ANR	4714015	Identifier	result		4713950	0					
ANR	4714016	PrimaryExpression	0		4713950	1					
ANR	4714017	CompoundStatement		18:18:282:282	4713950	1					
ANR	4714018	ExpressionStatement	DebugUnlockBroken = 1	995:4:27854:27875	4713950	0	True				
ANR	4714019	AssignmentExpression	DebugUnlockBroken = 1		4713950	0		=			
ANR	4714020	Identifier	DebugUnlockBroken		4713950	0					
ANR	4714021	PrimaryExpression	1		4713950	1					
ANR	4714022	ExpressionStatement	"_condor_dprintf_exit ( errno , ""Can't fflush debug log file\\n"" )"	996:4:27881:27941	4713950	1	True				
ANR	4714023	CallExpression	"_condor_dprintf_exit ( errno , ""Can't fflush debug log file\\n"" )"		4713950	0					
ANR	4714024	Callee	_condor_dprintf_exit		4713950	0					
ANR	4714025	Identifier	_condor_dprintf_exit		4713950	0					
ANR	4714026	ArgumentList	errno		4713950	1					
ANR	4714027	Argument	errno		4713950	0					
ANR	4714028	Identifier	errno		4713950	0					
ANR	4714029	Argument	"""Can't fflush debug log file\\n"""		4713950	1					
ANR	4714030	PrimaryExpression	"""Can't fflush debug log file\\n"""		4713950	0					
ANR	4714031	ExpressionStatement	debug_close_lock ( )	999:2:27950:27968	4713950	2	True				
ANR	4714032	CallExpression	debug_close_lock ( )		4713950	0					
ANR	4714033	Callee	debug_close_lock		4713950	0					
ANR	4714034	Identifier	debug_close_lock		4713950	0					
ANR	4714035	ArgumentList			4713950	1					
ANR	4714036	ExpressionStatement	debug_close_file ( it )	1000:2:27972:27992	4713950	3	True				
ANR	4714037	CallExpression	debug_close_file ( it )		4713950	0					
ANR	4714038	Callee	debug_close_file		4713950	0					
ANR	4714039	Identifier	debug_close_file		4713950	0					
ANR	4714040	ArgumentList	it		4713950	1					
ANR	4714041	Argument	it		4713950	0					
ANR	4714042	Identifier	it		4713950	0					
ANR	4714043	ExpressionStatement	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"	1003:1:27999:28037	4713950	7	True				
ANR	4714044	CallExpression	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"		4713950	0					
ANR	4714045	Callee	_set_priv		4713950	0					
ANR	4714046	Identifier	_set_priv		4713950	0					
ANR	4714047	ArgumentList	priv		4713950	1					
ANR	4714048	Argument	priv		4713950	0					
ANR	4714049	Identifier	priv		4713950	0					
ANR	4714050	Argument	__FILE__		4713950	1					
ANR	4714051	Identifier	__FILE__		4713950	0					
ANR	4714052	Argument	__LINE__		4713950	2					
ANR	4714053	Identifier	__LINE__		4713950	0					
ANR	4714054	Argument	0		4713950	3					
ANR	4714055	PrimaryExpression	0		4713950	0					
ANR	4714056	ReturnType	static void		4713950	1					
ANR	4714057	Identifier	debug_unlock_it		4713950	2					
ANR	4714058	ParameterList	struct DebugFileInfo * it		4713950	3					
ANR	4714059	Parameter	struct DebugFileInfo * it	976:16:27539:27562	4713950	0	True				
ANR	4714060	ParameterType	struct DebugFileInfo *		4713950	0					
ANR	4714061	Identifier	it		4713950	1					
ANR	4714062	CFGEntryNode	ENTRY		4713950		True				
ANR	4714063	CFGExitNode	EXIT		4713950		True				
ANR	4714064	Symbol	fflush		4713950						
ANR	4714065	Symbol	errno		4713950						
ANR	4714066	Symbol	__FILE__		4713950						
ANR	4714067	Symbol	_set_priv		4713950						
ANR	4714068	Symbol	it		4713950						
ANR	4714069	Symbol	debug_file_ptr		4713950						
ANR	4714070	Symbol	__LINE__		4713950						
ANR	4714071	Symbol	log_keep_open		4713950						
ANR	4714072	Symbol	result		4713950						
ANR	4714073	Symbol	* it		4713950						
ANR	4714074	Symbol	priv		4713950						
ANR	4714075	Symbol	PRIV_CONDOR		4713950						
ANR	4714076	Symbol	DebugUnlockBroken		4713950						
ANR	4714077	Symbol	( * it ) . debugFP		4713950						
ANR	4714078	Function	preserve_log_file	1010:0:28114:31918							
ANR	4714079	FunctionDef	"preserve_log_file (struct DebugFileInfo * it , bool dont_panic)"		4714078	0					
ANR	4714080	CompoundStatement		1012:0:28189:31918	4714078	0					
ANR	4714081	IdentifierDeclStatement	char old [ MAXPATHLEN + 4 ] ;	1013:1:28192:28217	4714078	0	True				
ANR	4714082	IdentifierDecl	old [ MAXPATHLEN + 4 ]		4714078	0					
ANR	4714083	IdentifierDeclType	char [ MAXPATHLEN + 4 ]		4714078	0					
ANR	4714084	Identifier	old		4714078	1					
ANR	4714085	AdditiveExpression	MAXPATHLEN + 4		4714078	2		+			
ANR	4714086	Identifier	MAXPATHLEN		4714078	0					
ANR	4714087	PrimaryExpression	4		4714078	1					
ANR	4714088	IdentifierDeclStatement	priv_state priv ;	1014:1:28220:28235	4714078	1	True				
ANR	4714089	IdentifierDecl	priv		4714078	0					
ANR	4714090	IdentifierDeclType	priv_state		4714078	0					
ANR	4714091	Identifier	priv		4714078	1					
ANR	4714092	IdentifierDeclStatement	int still_in_old_file = FALSE ;	1015:1:28238:28269	4714078	2	True				
ANR	4714093	IdentifierDecl	still_in_old_file = FALSE		4714078	0					
ANR	4714094	IdentifierDeclType	int		4714078	0					
ANR	4714095	Identifier	still_in_old_file		4714078	1					
ANR	4714096	AssignmentExpression	still_in_old_file = FALSE		4714078	2		=			
ANR	4714097	Identifier	FALSE		4714078	0					
ANR	4714098	Identifier	FALSE		4714078	1					
ANR	4714099	IdentifierDeclStatement	int failed_to_rotate = FALSE ;	1016:1:28272:28302	4714078	3	True				
ANR	4714100	IdentifierDecl	failed_to_rotate = FALSE		4714078	0					
ANR	4714101	IdentifierDeclType	int		4714078	0					
ANR	4714102	Identifier	failed_to_rotate		4714078	1					
ANR	4714103	AssignmentExpression	failed_to_rotate = FALSE		4714078	2		=			
ANR	4714104	Identifier	FALSE		4714078	0					
ANR	4714105	Identifier	FALSE		4714078	1					
ANR	4714106	IdentifierDeclStatement	int save_errno ;	1017:1:28305:28321	4714078	4	True				
ANR	4714107	IdentifierDecl	save_errno		4714078	0					
ANR	4714108	IdentifierDeclType	int		4714078	0					
ANR	4714109	Identifier	save_errno		4714078	1					
ANR	4714110	IdentifierDeclStatement	int rename_failed = 0 ;	1018:1:28324:28353	4714078	5	True				
ANR	4714111	IdentifierDecl	rename_failed = 0		4714078	0					
ANR	4714112	IdentifierDeclType	int		4714078	0					
ANR	4714113	Identifier	rename_failed		4714078	1					
ANR	4714114	AssignmentExpression	rename_failed = 0		4714078	2		=			
ANR	4714115	Identifier	rename_failed		4714078	0					
ANR	4714116	PrimaryExpression	0		4714078	1					
ANR	4714117	IdentifierDeclStatement	const char * timestamp ;	1019:1:28356:28377	4714078	6	True				
ANR	4714118	IdentifierDecl	* timestamp		4714078	0					
ANR	4714119	IdentifierDeclType	const char *		4714078	0					
ANR	4714120	Identifier	timestamp		4714078	1					
ANR	4714121	IdentifierDeclStatement	int result ;	1020:1:28380:28392	4714078	7	True				
ANR	4714122	IdentifierDecl	result		4714078	0					
ANR	4714123	IdentifierDeclType	int		4714078	0					
ANR	4714124	Identifier	result		4714078	1					
ANR	4714125	IdentifierDeclStatement	int file_there = 0 ;	1021:1:28395:28415	4714078	8	True				
ANR	4714126	IdentifierDecl	file_there = 0		4714078	0					
ANR	4714127	IdentifierDeclType	int		4714078	0					
ANR	4714128	Identifier	file_there		4714078	1					
ANR	4714129	AssignmentExpression	file_there = 0		4714078	2		=			
ANR	4714130	Identifier	file_there		4714078	0					
ANR	4714131	PrimaryExpression	0		4714078	1					
ANR	4714132	IdentifierDeclStatement	FILE * debug_file_ptr = ( * it ) . debugFP ;	1022:1:28418:28455	4714078	9	True				
ANR	4714133	IdentifierDecl	* debug_file_ptr = ( * it ) . debugFP		4714078	0					
ANR	4714134	IdentifierDeclType	FILE *		4714078	0					
ANR	4714135	Identifier	debug_file_ptr		4714078	1					
ANR	4714136	AssignmentExpression	* debug_file_ptr = ( * it ) . debugFP		4714078	2		=			
ANR	4714137	Identifier	debug_file_ptr		4714078	0					
ANR	4714138	MemberAccess	( * it ) . debugFP		4714078	1					
ANR	4714139	UnaryOperationExpression	* it		4714078	0					
ANR	4714140	UnaryOperator	*		4714078	0					
ANR	4714141	Identifier	it		4714078	1					
ANR	4714142	Identifier	debugFP		4714078	1					
ANR	4714143	IdentifierDeclStatement	std :: string filePath = ( * it ) . logPath ;	1023:1:28458:28495	4714078	10	True				
ANR	4714144	IdentifierDecl	filePath = ( * it ) . logPath		4714078	0					
ANR	4714145	IdentifierDeclType	std :: string		4714078	0					
ANR	4714146	Identifier	filePath		4714078	1					
ANR	4714147	AssignmentExpression	filePath = ( * it ) . logPath		4714078	2		=			
ANR	4714148	Identifier	filePath		4714078	0					
ANR	4714149	MemberAccess	( * it ) . logPath		4714078	1					
ANR	4714150	UnaryOperationExpression	* it		4714078	0					
ANR	4714151	UnaryOperator	*		4714078	0					
ANR	4714152	Identifier	it		4714078	1					
ANR	4714153	Identifier	logPath		4714078	1					
ANR	4714154	IdentifierDeclStatement	struct stat buf ;	1025:1:28512:28527	4714078	11	True				
ANR	4714155	IdentifierDecl	buf		4714078	0					
ANR	4714156	IdentifierDeclType	struct stat		4714078	0					
ANR	4714157	Identifier	buf		4714078	1					
ANR	4714158	IdentifierDeclStatement	char msg_buf [ DPRINTF_ERR_MAX ] ;	1027:1:28537:28566	4714078	12	True				
ANR	4714159	IdentifierDecl	msg_buf [ DPRINTF_ERR_MAX ]		4714078	0					
ANR	4714160	IdentifierDeclType	char [ DPRINTF_ERR_MAX ]		4714078	0					
ANR	4714161	Identifier	msg_buf		4714078	1					
ANR	4714162	Identifier	DPRINTF_ERR_MAX		4714078	2					
ANR	4714163	ExpressionStatement	"priv = _set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"	1030:1:28571:28623	4714078	13	True				
ANR	4714164	AssignmentExpression	"priv = _set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"		4714078	0		=			
ANR	4714165	Identifier	priv		4714078	0					
ANR	4714166	CallExpression	"_set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"		4714078	1					
ANR	4714167	Callee	_set_priv		4714078	0					
ANR	4714168	Identifier	_set_priv		4714078	0					
ANR	4714169	ArgumentList	PRIV_CONDOR		4714078	1					
ANR	4714170	Argument	PRIV_CONDOR		4714078	0					
ANR	4714171	Identifier	PRIV_CONDOR		4714078	0					
ANR	4714172	Argument	__FILE__		4714078	1					
ANR	4714173	Identifier	__FILE__		4714078	0					
ANR	4714174	Argument	__LINE__		4714078	2					
ANR	4714175	Identifier	__LINE__		4714078	0					
ANR	4714176	Argument	0		4714078	3					
ANR	4714177	PrimaryExpression	0		4714078	0					
ANR	4714178	ExpressionStatement	( void ) setBaseName ( filePath . c_str ( ) )	1031:1:28626:28661	4714078	14	True				
ANR	4714179	CastExpression	( void ) setBaseName ( filePath . c_str ( ) )		4714078	0					
ANR	4714180	CastTarget	void		4714078	0					
ANR	4714181	CallExpression	setBaseName ( filePath . c_str ( ) )		4714078	1					
ANR	4714182	Callee	setBaseName		4714078	0					
ANR	4714183	Identifier	setBaseName		4714078	0					
ANR	4714184	ArgumentList	filePath . c_str ( )		4714078	1					
ANR	4714185	Argument	filePath . c_str ( )		4714078	0					
ANR	4714186	CallExpression	filePath . c_str ( )		4714078	0					
ANR	4714187	Callee	filePath . c_str		4714078	0					
ANR	4714188	MemberAccess	filePath . c_str		4714078	0					
ANR	4714189	Identifier	filePath		4714078	0					
ANR	4714190	Identifier	c_str		4714078	1					
ANR	4714191	ArgumentList			4714078	1					
ANR	4714192	ExpressionStatement	"timestamp = createRotateFilename ( NULL , it -> maxLogNum )"	1032:1:28664:28717	4714078	15	True				
ANR	4714193	AssignmentExpression	"timestamp = createRotateFilename ( NULL , it -> maxLogNum )"		4714078	0		=			
ANR	4714194	Identifier	timestamp		4714078	0					
ANR	4714195	CallExpression	"createRotateFilename ( NULL , it -> maxLogNum )"		4714078	1					
ANR	4714196	Callee	createRotateFilename		4714078	0					
ANR	4714197	Identifier	createRotateFilename		4714078	0					
ANR	4714198	ArgumentList	NULL		4714078	1					
ANR	4714199	Argument	NULL		4714078	0					
ANR	4714200	Identifier	NULL		4714078	0					
ANR	4714201	Argument	it -> maxLogNum		4714078	1					
ANR	4714202	PtrMemberAccess	it -> maxLogNum		4714078	0					
ANR	4714203	Identifier	it		4714078	0					
ANR	4714204	Identifier	maxLogNum		4714078	1					
ANR	4714205	ExpressionStatement	"( void ) sprintf ( old , ""%s.%s"" , filePath . c_str ( ) , timestamp )"	1033:1:28720:28778	4714078	16	True				
ANR	4714206	CastExpression	"( void ) sprintf ( old , ""%s.%s"" , filePath . c_str ( ) , timestamp )"		4714078	0					
ANR	4714207	CastTarget	void		4714078	0					
ANR	4714208	CallExpression	"sprintf ( old , ""%s.%s"" , filePath . c_str ( ) , timestamp )"		4714078	1					
ANR	4714209	Callee	sprintf		4714078	0					
ANR	4714210	Identifier	sprintf		4714078	0					
ANR	4714211	ArgumentList	old		4714078	1					
ANR	4714212	Argument	old		4714078	0					
ANR	4714213	Identifier	old		4714078	0					
ANR	4714214	Argument	"""%s.%s"""		4714078	1					
ANR	4714215	PrimaryExpression	"""%s.%s"""		4714078	0					
ANR	4714216	Argument	filePath . c_str ( )		4714078	2					
ANR	4714217	CallExpression	filePath . c_str ( )		4714078	0					
ANR	4714218	Callee	filePath . c_str		4714078	0					
ANR	4714219	MemberAccess	filePath . c_str		4714078	0					
ANR	4714220	Identifier	filePath		4714078	0					
ANR	4714221	Identifier	c_str		4714078	1					
ANR	4714222	ArgumentList			4714078	1					
ANR	4714223	Argument	timestamp		4714078	3					
ANR	4714224	Identifier	timestamp		4714078	0					
ANR	4714225	ExpressionStatement	"_condor_dfprintf ( debug_file_ptr , ""Saving log file to \\""%s\\""\\n"" , old )"	1034:1:28781:28851	4714078	17	True				
ANR	4714226	CallExpression	"_condor_dfprintf ( debug_file_ptr , ""Saving log file to \\""%s\\""\\n"" , old )"		4714078	0					
ANR	4714227	Callee	_condor_dfprintf		4714078	0					
ANR	4714228	Identifier	_condor_dfprintf		4714078	0					
ANR	4714229	ArgumentList	debug_file_ptr		4714078	1					
ANR	4714230	Argument	debug_file_ptr		4714078	0					
ANR	4714231	Identifier	debug_file_ptr		4714078	0					
ANR	4714232	Argument	"""Saving log file to \\""%s\\""\\n"""		4714078	1					
ANR	4714233	PrimaryExpression	"""Saving log file to \\""%s\\""\\n"""		4714078	0					
ANR	4714234	Argument	old		4714078	2					
ANR	4714235	Identifier	old		4714078	0					
ANR	4714236	ExpressionStatement	( void ) fflush ( debug_file_ptr )	1035:1:28854:28884	4714078	18	True				
ANR	4714237	CastExpression	( void ) fflush ( debug_file_ptr )		4714078	0					
ANR	4714238	CastTarget	void		4714078	0					
ANR	4714239	CallExpression	fflush ( debug_file_ptr )		4714078	1					
ANR	4714240	Callee	fflush		4714078	0					
ANR	4714241	Identifier	fflush		4714078	0					
ANR	4714242	ArgumentList	debug_file_ptr		4714078	1					
ANR	4714243	Argument	debug_file_ptr		4714078	0					
ANR	4714244	Identifier	debug_file_ptr		4714078	0					
ANR	4714245	ExpressionStatement	"fclose_wrapper ( debug_file_ptr , FCLOSE_RETRY_MAX )"	1037:1:28888:28938	4714078	19	True				
ANR	4714246	CallExpression	"fclose_wrapper ( debug_file_ptr , FCLOSE_RETRY_MAX )"		4714078	0					
ANR	4714247	Callee	fclose_wrapper		4714078	0					
ANR	4714248	Identifier	fclose_wrapper		4714078	0					
ANR	4714249	ArgumentList	debug_file_ptr		4714078	1					
ANR	4714250	Argument	debug_file_ptr		4714078	0					
ANR	4714251	Identifier	debug_file_ptr		4714078	0					
ANR	4714252	Argument	FCLOSE_RETRY_MAX		4714078	1					
ANR	4714253	Identifier	FCLOSE_RETRY_MAX		4714078	0					
ANR	4714254	ExpressionStatement	debug_file_ptr = NULL	1038:1:28941:28962	4714078	20	True				
ANR	4714255	AssignmentExpression	debug_file_ptr = NULL		4714078	0		=			
ANR	4714256	Identifier	debug_file_ptr		4714078	0					
ANR	4714257	Identifier	NULL		4714078	1					
ANR	4714258	ExpressionStatement	( * it ) . debugFP = debug_file_ptr	1039:1:28965:28995	4714078	21	True				
ANR	4714259	AssignmentExpression	( * it ) . debugFP = debug_file_ptr		4714078	0		=			
ANR	4714260	MemberAccess	( * it ) . debugFP		4714078	0					
ANR	4714261	UnaryOperationExpression	* it		4714078	0					
ANR	4714262	UnaryOperator	*		4714078	0					
ANR	4714263	Identifier	it		4714078	1					
ANR	4714264	Identifier	debugFP		4714078	1					
ANR	4714265	Identifier	debug_file_ptr		4714078	1					
ANR	4714266	ExpressionStatement	"result = rotateTimestamp ( timestamp , it -> maxLogNum )"	1041:1:28999:29049	4714078	22	True				
ANR	4714267	AssignmentExpression	"result = rotateTimestamp ( timestamp , it -> maxLogNum )"		4714078	0		=			
ANR	4714268	Identifier	result		4714078	0					
ANR	4714269	CallExpression	"rotateTimestamp ( timestamp , it -> maxLogNum )"		4714078	1					
ANR	4714270	Callee	rotateTimestamp		4714078	0					
ANR	4714271	Identifier	rotateTimestamp		4714078	0					
ANR	4714272	ArgumentList	timestamp		4714078	1					
ANR	4714273	Argument	timestamp		4714078	0					
ANR	4714274	Identifier	timestamp		4714078	0					
ANR	4714275	Argument	it -> maxLogNum		4714078	1					
ANR	4714276	PtrMemberAccess	it -> maxLogNum		4714078	0					
ANR	4714277	Identifier	it		4714078	0					
ANR	4714278	Identifier	maxLogNum		4714078	1					
ANR	4714279	IfStatement	if ( result < 0 )		4714078	23					
ANR	4714280	Condition	result < 0	1044:5:29076:29085	4714078	0	True				
ANR	4714281	RelationalExpression	result < 0		4714078	0		<			
ANR	4714282	Identifier	result		4714078	0					
ANR	4714283	PrimaryExpression	0		4714078	1					
ANR	4714284	CompoundStatement		33:17:898:898	4714078	1					
ANR	4714285	ExpressionStatement	failed_to_rotate = TRUE	1045:2:29122:29145	4714078	0	True				
ANR	4714286	AssignmentExpression	failed_to_rotate = TRUE		4714078	0		=			
ANR	4714287	Identifier	failed_to_rotate		4714078	0					
ANR	4714288	Identifier	TRUE		4714078	1					
ANR	4714289	ExpressionStatement	"debug_file_ptr = open_debug_file ( it , ""wN"" , dont_panic )"	1046:2:29149:29203	4714078	1	True				
ANR	4714290	AssignmentExpression	"debug_file_ptr = open_debug_file ( it , ""wN"" , dont_panic )"		4714078	0		=			
ANR	4714291	Identifier	debug_file_ptr		4714078	0					
ANR	4714292	CallExpression	"open_debug_file ( it , ""wN"" , dont_panic )"		4714078	1					
ANR	4714293	Callee	open_debug_file		4714078	0					
ANR	4714294	Identifier	open_debug_file		4714078	0					
ANR	4714295	ArgumentList	it		4714078	1					
ANR	4714296	Argument	it		4714078	0					
ANR	4714297	Identifier	it		4714078	0					
ANR	4714298	Argument	"""wN"""		4714078	1					
ANR	4714299	PrimaryExpression	"""wN"""		4714078	0					
ANR	4714300	Argument	dont_panic		4714078	2					
ANR	4714301	Identifier	dont_panic		4714078	0					
ANR	4714302	IfStatement	if ( debug_file_ptr == NULL )		4714078	2					
ANR	4714303	Condition	debug_file_ptr == NULL	1047:7:29212:29234	4714078	0	True				
ANR	4714304	EqualityExpression	debug_file_ptr == NULL		4714078	0		==			
ANR	4714305	Identifier	debug_file_ptr		4714078	0					
ANR	4714306	Identifier	NULL		4714078	1					
ANR	4714307	CompoundStatement		36:33:1048:1048	4714078	1					
ANR	4714308	ExpressionStatement	still_in_old_file = TRUE	1048:3:29243:29267	4714078	0	True				
ANR	4714309	AssignmentExpression	still_in_old_file = TRUE		4714078	0		=			
ANR	4714310	Identifier	still_in_old_file		4714078	0					
ANR	4714311	Identifier	TRUE		4714078	1					
ANR	4714312	IfStatement	if ( debug_file_ptr == NULL )		4714078	24					
ANR	4714313	Condition	debug_file_ptr == NULL	1098:5:30725:30746	4714078	0	True				
ANR	4714314	EqualityExpression	debug_file_ptr == NULL		4714078	0		==			
ANR	4714315	Identifier	debug_file_ptr		4714078	0					
ANR	4714316	Identifier	NULL		4714078	1					
ANR	4714317	CompoundStatement		87:29:2559:2559	4714078	1					
ANR	4714318	ExpressionStatement	"debug_file_ptr = open_debug_file ( it , ""aN"" , dont_panic )"	1099:2:30753:30807	4714078	0	True				
ANR	4714319	AssignmentExpression	"debug_file_ptr = open_debug_file ( it , ""aN"" , dont_panic )"		4714078	0		=			
ANR	4714320	Identifier	debug_file_ptr		4714078	0					
ANR	4714321	CallExpression	"open_debug_file ( it , ""aN"" , dont_panic )"		4714078	1					
ANR	4714322	Callee	open_debug_file		4714078	0					
ANR	4714323	Identifier	open_debug_file		4714078	0					
ANR	4714324	ArgumentList	it		4714078	1					
ANR	4714325	Argument	it		4714078	0					
ANR	4714326	Identifier	it		4714078	0					
ANR	4714327	Argument	"""aN"""		4714078	1					
ANR	4714328	PrimaryExpression	"""aN"""		4714078	0					
ANR	4714329	Argument	dont_panic		4714078	2					
ANR	4714330	Identifier	dont_panic		4714078	0					
ANR	4714331	IfStatement	if ( debug_file_ptr == NULL )		4714078	25					
ANR	4714332	Condition	debug_file_ptr == NULL	1102:5:30818:30839	4714078	0	True				
ANR	4714333	EqualityExpression	debug_file_ptr == NULL		4714078	0		==			
ANR	4714334	Identifier	debug_file_ptr		4714078	0					
ANR	4714335	Identifier	NULL		4714078	1					
ANR	4714336	CompoundStatement		91:30:2653:2653	4714078	1					
ANR	4714337	ExpressionStatement	debug_file_ptr = stderr	1103:2:30847:30870	4714078	0	True				
ANR	4714338	AssignmentExpression	debug_file_ptr = stderr		4714078	0		=			
ANR	4714339	Identifier	debug_file_ptr		4714078	0					
ANR	4714340	Identifier	stderr		4714078	1					
ANR	4714341	ExpressionStatement	save_errno = errno	1105:2:30875:30893	4714078	1	True				
ANR	4714342	AssignmentExpression	save_errno = errno		4714078	0		=			
ANR	4714343	Identifier	save_errno		4714078	0					
ANR	4714344	Identifier	errno		4714078	1					
ANR	4714345	ExpressionStatement	"snprintf ( msg_buf , sizeof ( msg_buf ) , ""Can't open file for debug level %d\\n"" , it -> debugFlags )"	1106:2:30897:30994	4714078	2	True				
ANR	4714346	CallExpression	"snprintf ( msg_buf , sizeof ( msg_buf ) , ""Can't open file for debug level %d\\n"" , it -> debugFlags )"		4714078	0					
ANR	4714347	Callee	snprintf		4714078	0					
ANR	4714348	Identifier	snprintf		4714078	0					
ANR	4714349	ArgumentList	msg_buf		4714078	1					
ANR	4714350	Argument	msg_buf		4714078	0					
ANR	4714351	Identifier	msg_buf		4714078	0					
ANR	4714352	Argument	sizeof ( msg_buf )		4714078	1					
ANR	4714353	SizeofExpression	sizeof ( msg_buf )		4714078	0					
ANR	4714354	Sizeof	sizeof		4714078	0					
ANR	4714355	SizeofOperand	msg_buf		4714078	1					
ANR	4714356	Argument	"""Can't open file for debug level %d\\n"""		4714078	2					
ANR	4714357	PrimaryExpression	"""Can't open file for debug level %d\\n"""		4714078	0					
ANR	4714358	Argument	it -> debugFlags		4714078	3					
ANR	4714359	PtrMemberAccess	it -> debugFlags		4714078	0					
ANR	4714360	Identifier	it		4714078	0					
ANR	4714361	Identifier	debugFlags		4714078	1					
ANR	4714362	ExpressionStatement	"_condor_dprintf_exit ( save_errno , msg_buf )"	1108:2:30999:31042	4714078	3	True				
ANR	4714363	CallExpression	"_condor_dprintf_exit ( save_errno , msg_buf )"		4714078	0					
ANR	4714364	Callee	_condor_dprintf_exit		4714078	0					
ANR	4714365	Identifier	_condor_dprintf_exit		4714078	0					
ANR	4714366	ArgumentList	save_errno		4714078	1					
ANR	4714367	Argument	save_errno		4714078	0					
ANR	4714368	Identifier	save_errno		4714078	0					
ANR	4714369	Argument	msg_buf		4714078	1					
ANR	4714370	Identifier	msg_buf		4714078	0					
ANR	4714371	IfStatement	if ( ! still_in_old_file )		4714078	26					
ANR	4714372	Condition	! still_in_old_file	1111:6:31054:31071	4714078	0	True				
ANR	4714373	UnaryOperationExpression	! still_in_old_file		4714078	0					
ANR	4714374	UnaryOperator	!		4714078	0					
ANR	4714375	Identifier	still_in_old_file		4714078	1					
ANR	4714376	CompoundStatement		100:27:2885:2885	4714078	1					
ANR	4714377	ExpressionStatement	"_condor_dfprintf ( debug_file_ptr , ""Now in new log file %s\\n"" , it -> logPath . c_str ( ) )"	1112:2:31079:31161	4714078	0	True				
ANR	4714378	CallExpression	"_condor_dfprintf ( debug_file_ptr , ""Now in new log file %s\\n"" , it -> logPath . c_str ( ) )"		4714078	0					
ANR	4714379	Callee	_condor_dfprintf		4714078	0					
ANR	4714380	Identifier	_condor_dfprintf		4714078	0					
ANR	4714381	ArgumentList	debug_file_ptr		4714078	1					
ANR	4714382	Argument	debug_file_ptr		4714078	0					
ANR	4714383	Identifier	debug_file_ptr		4714078	0					
ANR	4714384	Argument	"""Now in new log file %s\\n"""		4714078	1					
ANR	4714385	PrimaryExpression	"""Now in new log file %s\\n"""		4714078	0					
ANR	4714386	Argument	it -> logPath . c_str ( )		4714078	2					
ANR	4714387	CallExpression	it -> logPath . c_str ( )		4714078	0					
ANR	4714388	Callee	it -> logPath . c_str		4714078	0					
ANR	4714389	MemberAccess	it -> logPath . c_str		4714078	0					
ANR	4714390	PtrMemberAccess	it -> logPath		4714078	0					
ANR	4714391	Identifier	it		4714078	0					
ANR	4714392	Identifier	logPath		4714078	1					
ANR	4714393	Identifier	c_str		4714078	1					
ANR	4714394	ArgumentList			4714078	1					
ANR	4714395	IfStatement	if ( file_there > 0 )		4714078	27					
ANR	4714396	Condition	file_there > 0	1117:5:31323:31336	4714078	0	True				
ANR	4714397	RelationalExpression	file_there > 0		4714078	0		>			
ANR	4714398	Identifier	file_there		4714078	0					
ANR	4714399	PrimaryExpression	0		4714078	1					
ANR	4714400	CompoundStatement		106:21:3149:3149	4714078	1					
ANR	4714401	ExpressionStatement	"_condor_dfprintf ( debug_file_ptr , ""WARNING: %s"" , msg_buf )"	1118:2:31343:31399	4714078	0	True				
ANR	4714402	CallExpression	"_condor_dfprintf ( debug_file_ptr , ""WARNING: %s"" , msg_buf )"		4714078	0					
ANR	4714403	Callee	_condor_dfprintf		4714078	0					
ANR	4714404	Identifier	_condor_dfprintf		4714078	0					
ANR	4714405	ArgumentList	debug_file_ptr		4714078	1					
ANR	4714406	Argument	debug_file_ptr		4714078	0					
ANR	4714407	Identifier	debug_file_ptr		4714078	0					
ANR	4714408	Argument	"""WARNING: %s"""		4714078	1					
ANR	4714409	PrimaryExpression	"""WARNING: %s"""		4714078	0					
ANR	4714410	Argument	msg_buf		4714078	2					
ANR	4714411	Identifier	msg_buf		4714078	0					
ANR	4714412	IfStatement	if ( failed_to_rotate || rename_failed )		4714078	28					
ANR	4714413	Condition	failed_to_rotate || rename_failed	1121:6:31411:31443	4714078	0	True				
ANR	4714414	OrExpression	failed_to_rotate || rename_failed		4714078	0		||			
ANR	4714415	Identifier	failed_to_rotate		4714078	0					
ANR	4714416	Identifier	rename_failed		4714078	1					
ANR	4714417	CompoundStatement		110:42:3257:3257	4714078	1					
ANR	4714418	ExpressionStatement	"_condor_dfprintf ( debug_file_ptr , ""WARNING: Failed to rotate log into file %s!\\n"" , old )"	1122:2:31451:31535	4714078	0	True				
ANR	4714419	CallExpression	"_condor_dfprintf ( debug_file_ptr , ""WARNING: Failed to rotate log into file %s!\\n"" , old )"		4714078	0					
ANR	4714420	Callee	_condor_dfprintf		4714078	0					
ANR	4714421	Identifier	_condor_dfprintf		4714078	0					
ANR	4714422	ArgumentList	debug_file_ptr		4714078	1					
ANR	4714423	Argument	debug_file_ptr		4714078	0					
ANR	4714424	Identifier	debug_file_ptr		4714078	0					
ANR	4714425	Argument	"""WARNING: Failed to rotate log into file %s!\\n"""		4714078	1					
ANR	4714426	PrimaryExpression	"""WARNING: Failed to rotate log into file %s!\\n"""		4714078	0					
ANR	4714427	Argument	old		4714078	2					
ANR	4714428	Identifier	old		4714078	0					
ANR	4714429	IfStatement	if ( rename_failed )		4714078	1					
ANR	4714430	Condition	rename_failed	1123:6:31543:31555	4714078	0	True				
ANR	4714431	Identifier	rename_failed		4714078	0					
ANR	4714432	CompoundStatement		112:22:3369:3369	4714078	1					
ANR	4714433	ExpressionStatement	"_condor_dfprintf ( debug_file_ptr , ""Likely cause is that another Condor process rotated the file at the same time.\\n"" )"	1124:3:31564:31679	4714078	0	True				
ANR	4714434	CallExpression	"_condor_dfprintf ( debug_file_ptr , ""Likely cause is that another Condor process rotated the file at the same time.\\n"" )"		4714078	0					
ANR	4714435	Callee	_condor_dfprintf		4714078	0					
ANR	4714436	Identifier	_condor_dfprintf		4714078	0					
ANR	4714437	ArgumentList	debug_file_ptr		4714078	1					
ANR	4714438	Argument	debug_file_ptr		4714078	0					
ANR	4714439	Identifier	debug_file_ptr		4714078	0					
ANR	4714440	Argument	"""Likely cause is that another Condor process rotated the file at the same time.\\n"""		4714078	1					
ANR	4714441	PrimaryExpression	"""Likely cause is that another Condor process rotated the file at the same time.\\n"""		4714078	0					
ANR	4714442	ElseStatement	else		4714078	0					
ANR	4714443	CompoundStatement		115:7:3502:3502	4714078	0					
ANR	4714444	ExpressionStatement	"_condor_dfprintf ( debug_file_ptr , ""       Perhaps someone is keeping log files open???"" )"	1127:3:31697:31783	4714078	0	True				
ANR	4714445	CallExpression	"_condor_dfprintf ( debug_file_ptr , ""       Perhaps someone is keeping log files open???"" )"		4714078	0					
ANR	4714446	Callee	_condor_dfprintf		4714078	0					
ANR	4714447	Identifier	_condor_dfprintf		4714078	0					
ANR	4714448	ArgumentList	debug_file_ptr		4714078	1					
ANR	4714449	Argument	debug_file_ptr		4714078	0					
ANR	4714450	Identifier	debug_file_ptr		4714078	0					
ANR	4714451	Argument	"""       Perhaps someone is keeping log files open???"""		4714078	1					
ANR	4714452	PrimaryExpression	"""       Perhaps someone is keeping log files open???"""		4714078	0					
ANR	4714453	ExpressionStatement	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"	1131:1:31795:31833	4714078	29	True				
ANR	4714454	CallExpression	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"		4714078	0					
ANR	4714455	Callee	_set_priv		4714078	0					
ANR	4714456	Identifier	_set_priv		4714078	0					
ANR	4714457	ArgumentList	priv		4714078	1					
ANR	4714458	Argument	priv		4714078	0					
ANR	4714459	Identifier	priv		4714078	0					
ANR	4714460	Argument	__FILE__		4714078	1					
ANR	4714461	Identifier	__FILE__		4714078	0					
ANR	4714462	Argument	__LINE__		4714078	2					
ANR	4714463	Identifier	__LINE__		4714078	0					
ANR	4714464	Argument	0		4714078	3					
ANR	4714465	PrimaryExpression	0		4714078	0					
ANR	4714466	ExpressionStatement	cleanUp ( it -> maxLogNum )	1132:1:31836:31858	4714078	30	True				
ANR	4714467	CallExpression	cleanUp ( it -> maxLogNum )		4714078	0					
ANR	4714468	Callee	cleanUp		4714078	0					
ANR	4714469	Identifier	cleanUp		4714078	0					
ANR	4714470	ArgumentList	it -> maxLogNum		4714078	1					
ANR	4714471	Argument	it -> maxLogNum		4714078	0					
ANR	4714472	PtrMemberAccess	it -> maxLogNum		4714078	0					
ANR	4714473	Identifier	it		4714078	0					
ANR	4714474	Identifier	maxLogNum		4714078	1					
ANR	4714475	ExpressionStatement	( * it ) . debugFP = debug_file_ptr	1133:1:31861:31891	4714078	31	True				
ANR	4714476	AssignmentExpression	( * it ) . debugFP = debug_file_ptr		4714078	0		=			
ANR	4714477	MemberAccess	( * it ) . debugFP		4714078	0					
ANR	4714478	UnaryOperationExpression	* it		4714078	0					
ANR	4714479	UnaryOperator	*		4714078	0					
ANR	4714480	Identifier	it		4714078	1					
ANR	4714481	Identifier	debugFP		4714078	1					
ANR	4714482	Identifier	debug_file_ptr		4714078	1					
ANR	4714483	ReturnStatement	return debug_file_ptr ;	1135:1:31895:31916	4714078	32	True				
ANR	4714484	Identifier	debug_file_ptr		4714078	0					
ANR	4714485	ReturnType	static FILE *		4714078	1					
ANR	4714486	Identifier	preserve_log_file		4714078	2					
ANR	4714487	ParameterList	"struct DebugFileInfo * it , bool dont_panic"		4714078	3					
ANR	4714488	Parameter	struct DebugFileInfo * it	1011:18:28146:28169	4714078	0	True				
ANR	4714489	ParameterType	struct DebugFileInfo *		4714078	0					
ANR	4714490	Identifier	it		4714078	1					
ANR	4714491	Parameter	bool dont_panic	1011:44:28172:28186	4714078	1	True				
ANR	4714492	ParameterType	bool		4714078	0					
ANR	4714493	Identifier	dont_panic		4714078	1					
ANR	4714494	CFGEntryNode	ENTRY		4714078		True				
ANR	4714495	CFGExitNode	EXIT		4714078		True				
ANR	4714496	Symbol	failed_to_rotate		4714078						
ANR	4714497	Symbol	it -> debugFlags		4714078						
ANR	4714498	Symbol	_set_priv		4714078						
ANR	4714499	Symbol	save_errno		4714078						
ANR	4714500	Symbol	it -> maxLogNum		4714078						
ANR	4714501	Symbol	result		4714078						
ANR	4714502	Symbol	( * it ) . logPath		4714078						
ANR	4714503	Symbol	rename_failed		4714078						
ANR	4714504	Symbol	filePath . c_str		4714078						
ANR	4714505	Symbol	priv		4714078						
ANR	4714506	Symbol	FCLOSE_RETRY_MAX		4714078						
ANR	4714507	Symbol	timestamp		4714078						
ANR	4714508	Symbol	rotateTimestamp		4714078						
ANR	4714509	Symbol	errno		4714078						
ANR	4714510	Symbol	NULL		4714078						
ANR	4714511	Symbol	old		4714078						
ANR	4714512	Symbol	it -> logPath . c_str		4714078						
ANR	4714513	Symbol	filePath		4714078						
ANR	4714514	Symbol	__FILE__		4714078						
ANR	4714515	Symbol	open_debug_file		4714078						
ANR	4714516	Symbol	msg_buf		4714078						
ANR	4714517	Symbol	TRUE		4714078						
ANR	4714518	Symbol	still_in_old_file		4714078						
ANR	4714519	Symbol	it		4714078						
ANR	4714520	Symbol	stderr		4714078						
ANR	4714521	Symbol	dont_panic		4714078						
ANR	4714522	Symbol	debug_file_ptr		4714078						
ANR	4714523	Symbol	__LINE__		4714078						
ANR	4714524	Symbol	* it		4714078						
ANR	4714525	Symbol	buf		4714078						
ANR	4714526	Symbol	file_there		4714078						
ANR	4714527	Symbol	FALSE		4714078						
ANR	4714528	Symbol	PRIV_CONDOR		4714078						
ANR	4714529	Symbol	( * it ) . debugFP		4714078						
ANR	4714530	Symbol	createRotateFilename		4714078						
ANR	4714531	Symbol	it -> logPath		4714078						
ANR	4714532	Function	_condor_fd_panic	1144:0:32051:33216							
ANR	4714533	FunctionDef	"_condor_fd_panic (int line , const char * file)"		4714532	0					
ANR	4714534	CompoundStatement		1146:0:32103:33216	4714532	0					
ANR	4714535	IdentifierDeclStatement	int i ;	1147:1:32106:32111	4714532	0	True				
ANR	4714536	IdentifierDecl	i		4714532	0					
ANR	4714537	IdentifierDeclType	int		4714532	0					
ANR	4714538	Identifier	i		4714532	1					
ANR	4714539	IdentifierDeclStatement	char msg_buf [ DPRINTF_ERR_MAX ] ;	1148:1:32114:32143	4714532	1	True				
ANR	4714540	IdentifierDecl	msg_buf [ DPRINTF_ERR_MAX ]		4714532	0					
ANR	4714541	IdentifierDeclType	char [ DPRINTF_ERR_MAX ]		4714532	0					
ANR	4714542	Identifier	msg_buf		4714532	1					
ANR	4714543	Identifier	DPRINTF_ERR_MAX		4714532	2					
ANR	4714544	IdentifierDeclStatement	char panic_msg [ DPRINTF_ERR_MAX ] ;	1149:1:32146:32177	4714532	2	True				
ANR	4714545	IdentifierDecl	panic_msg [ DPRINTF_ERR_MAX ]		4714532	0					
ANR	4714546	IdentifierDeclType	char [ DPRINTF_ERR_MAX ]		4714532	0					
ANR	4714547	Identifier	panic_msg		4714532	1					
ANR	4714548	Identifier	DPRINTF_ERR_MAX		4714532	2					
ANR	4714549	IdentifierDeclStatement	int save_errno ;	1150:1:32180:32194	4714532	3	True				
ANR	4714550	IdentifierDecl	save_errno		4714532	0					
ANR	4714551	IdentifierDeclType	int		4714532	0					
ANR	4714552	Identifier	save_errno		4714532	1					
ANR	4714553	IdentifierDeclStatement	std :: vector < DebugFileInfo > :: iterator it ;	1151:1:32197:32236	4714532	4	True				
ANR	4714554	IdentifierDecl	it		4714532	0					
ANR	4714555	IdentifierDeclType	std :: vector < DebugFileInfo > :: iterator		4714532	0					
ANR	4714556	Identifier	it		4714532	1					
ANR	4714557	IdentifierDeclStatement	std :: string filePath ;	1152:1:32239:32259	4714532	5	True				
ANR	4714558	IdentifierDecl	filePath		4714532	0					
ANR	4714559	IdentifierDeclType	std :: string		4714532	0					
ANR	4714560	Identifier	filePath		4714532	1					
ANR	4714561	IdentifierDeclStatement	bool fileExists = false ;	1153:1:32262:32285	4714532	6	True				
ANR	4714562	IdentifierDecl	fileExists = false		4714532	0					
ANR	4714563	IdentifierDeclType	bool		4714532	0					
ANR	4714564	Identifier	fileExists		4714532	1					
ANR	4714565	AssignmentExpression	fileExists = false		4714532	2		=			
ANR	4714566	Identifier	false		4714532	0					
ANR	4714567	Identifier	false		4714532	1					
ANR	4714568	IdentifierDeclStatement	FILE * debug_file_ptr = 0 ;	1154:1:32288:32310	4714532	7	True				
ANR	4714569	IdentifierDecl	* debug_file_ptr = 0		4714532	0					
ANR	4714570	IdentifierDeclType	FILE *		4714532	0					
ANR	4714571	Identifier	debug_file_ptr		4714532	1					
ANR	4714572	AssignmentExpression	* debug_file_ptr = 0		4714532	2		=			
ANR	4714573	Identifier	debug_file_ptr		4714532	0					
ANR	4714574	PrimaryExpression	0		4714532	1					
ANR	4714575	ExpressionStatement	"_set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"	1156:1:32314:32359	4714532	8	True				
ANR	4714576	CallExpression	"_set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"		4714532	0					
ANR	4714577	Callee	_set_priv		4714532	0					
ANR	4714578	Identifier	_set_priv		4714532	0					
ANR	4714579	ArgumentList	PRIV_CONDOR		4714532	1					
ANR	4714580	Argument	PRIV_CONDOR		4714532	0					
ANR	4714581	Identifier	PRIV_CONDOR		4714532	0					
ANR	4714582	Argument	__FILE__		4714532	1					
ANR	4714583	Identifier	__FILE__		4714532	0					
ANR	4714584	Argument	__LINE__		4714532	2					
ANR	4714585	Identifier	__LINE__		4714532	0					
ANR	4714586	Argument	0		4714532	3					
ANR	4714587	PrimaryExpression	0		4714532	0					
ANR	4714588	ExpressionStatement	"snprintf ( panic_msg , sizeof ( panic_msg ) , ""**** PANIC -- OUT OF FILE DESCRIPTORS at line %d in %s"" , line , file )"	1158:1:32363:32481	4714532	9	True				
ANR	4714589	CallExpression	"snprintf ( panic_msg , sizeof ( panic_msg ) , ""**** PANIC -- OUT OF FILE DESCRIPTORS at line %d in %s"" , line , file )"		4714532	0					
ANR	4714590	Callee	snprintf		4714532	0					
ANR	4714591	Identifier	snprintf		4714532	0					
ANR	4714592	ArgumentList	panic_msg		4714532	1					
ANR	4714593	Argument	panic_msg		4714532	0					
ANR	4714594	Identifier	panic_msg		4714532	0					
ANR	4714595	Argument	sizeof ( panic_msg )		4714532	1					
ANR	4714596	SizeofExpression	sizeof ( panic_msg )		4714532	0					
ANR	4714597	Sizeof	sizeof		4714532	0					
ANR	4714598	SizeofOperand	panic_msg		4714532	1					
ANR	4714599	Argument	"""**** PANIC -- OUT OF FILE DESCRIPTORS at line %d in %s"""		4714532	2					
ANR	4714600	PrimaryExpression	"""**** PANIC -- OUT OF FILE DESCRIPTORS at line %d in %s"""		4714532	0					
ANR	4714601	Argument	line		4714532	3					
ANR	4714602	Identifier	line		4714532	0					
ANR	4714603	Argument	file		4714532	4					
ANR	4714604	Identifier	file		4714532	0					
ANR	4714605	ForStatement	for ( i = 0 ; i < 50 ; i ++ )		4714532	10					
ANR	4714606	ForInit	i = 0 ;	1163:7:32553:32557	4714532	0	True				
ANR	4714607	AssignmentExpression	i = 0		4714532	0		=			
ANR	4714608	Identifier	i		4714532	0					
ANR	4714609	PrimaryExpression	0		4714532	1					
ANR	4714610	Condition	i < 50	1163:13:32559:32562	4714532	1	True				
ANR	4714611	RelationalExpression	i < 50		4714532	0		<			
ANR	4714612	Identifier	i		4714532	0					
ANR	4714613	PrimaryExpression	50		4714532	1					
ANR	4714614	PostIncDecOperationExpression	i ++	1163:20:32566:32568	4714532	2	True				
ANR	4714615	Identifier	i		4714532	0					
ANR	4714616	IncDec	++		4714532	1					
ANR	4714617	CompoundStatement		18:26:468:468	4714532	3					
ANR	4714618	ExpressionStatement	( void ) close ( i )	1164:2:32576:32592	4714532	0	True				
ANR	4714619	CastExpression	( void ) close ( i )		4714532	0					
ANR	4714620	CastTarget	void		4714532	0					
ANR	4714621	CallExpression	close ( i )		4714532	1					
ANR	4714622	Callee	close		4714532	0					
ANR	4714623	Identifier	close		4714532	0					
ANR	4714624	ArgumentList	i		4714532	1					
ANR	4714625	Argument	i		4714532	0					
ANR	4714626	Identifier	i		4714532	0					
ANR	4714627	ForStatement	for ( it = DebugLogs -> begin ( ) ; it < DebugLogs -> end ( ) ; it ++ )		4714532	11					
ANR	4714628	ForInit	it = DebugLogs -> begin ( ) ;	1167:5:32603:32626	4714532	0	True				
ANR	4714629	AssignmentExpression	it = DebugLogs -> begin ( )		4714532	0		=			
ANR	4714630	Identifier	it		4714532	0					
ANR	4714631	CallExpression	DebugLogs -> begin ( )		4714532	1					
ANR	4714632	Callee	DebugLogs -> begin		4714532	0					
ANR	4714633	PtrMemberAccess	DebugLogs -> begin		4714532	0					
ANR	4714634	Identifier	DebugLogs		4714532	0					
ANR	4714635	Identifier	begin		4714532	1					
ANR	4714636	ArgumentList			4714532	1					
ANR	4714637	Condition	it < DebugLogs -> end ( )	1167:30:32628:32648	4714532	1	True				
ANR	4714638	RelationalExpression	it < DebugLogs -> end ( )		4714532	0		<			
ANR	4714639	Identifier	it		4714532	0					
ANR	4714640	CallExpression	DebugLogs -> end ( )		4714532	1					
ANR	4714641	Callee	DebugLogs -> end		4714532	0					
ANR	4714642	PtrMemberAccess	DebugLogs -> end		4714532	0					
ANR	4714643	Identifier	DebugLogs		4714532	0					
ANR	4714644	Identifier	end		4714532	1					
ANR	4714645	ArgumentList			4714532	1					
ANR	4714646	PostIncDecOperationExpression	it ++	1167:53:32651:32654	4714532	2	True				
ANR	4714647	Identifier	it		4714532	0					
ANR	4714648	IncDec	++		4714532	1					
ANR	4714649	CompoundStatement		23:1:554:554	4714532	3					
ANR	4714650	ExpressionStatement	filePath = ( * it ) . logPath	1169:2:32662:32686	4714532	0	True				
ANR	4714651	AssignmentExpression	filePath = ( * it ) . logPath		4714532	0		=			
ANR	4714652	Identifier	filePath		4714532	0					
ANR	4714653	MemberAccess	( * it ) . logPath		4714532	1					
ANR	4714654	UnaryOperationExpression	* it		4714532	0					
ANR	4714655	UnaryOperator	*		4714532	0					
ANR	4714656	Identifier	it		4714532	1					
ANR	4714657	Identifier	logPath		4714532	1					
ANR	4714658	ExpressionStatement	fileExists = true	1170:2:32690:32707	4714532	1	True				
ANR	4714659	AssignmentExpression	fileExists = true		4714532	0		=			
ANR	4714660	Identifier	fileExists		4714532	0					
ANR	4714661	Identifier	true		4714532	1					
ANR	4714662	BreakStatement	break ;	1171:2:32711:32716	4714532	2	True				
ANR	4714663	IfStatement	if ( fileExists )		4714532	12					
ANR	4714664	Condition	fileExists	1173:5:32726:32735	4714532	0	True				
ANR	4714665	Identifier	fileExists		4714532	0					
ANR	4714666	CompoundStatement		28:18:635:635	4714532	1					
ANR	4714667	ExpressionStatement	"debug_file_ptr = safe_fopen_wrapper_follow ( filePath . c_str ( ) , ""a"" , 0644 )"	1174:2:32743:32814	4714532	0	True				
ANR	4714668	AssignmentExpression	"debug_file_ptr = safe_fopen_wrapper_follow ( filePath . c_str ( ) , ""a"" , 0644 )"		4714532	0		=			
ANR	4714669	Identifier	debug_file_ptr		4714532	0					
ANR	4714670	CallExpression	"safe_fopen_wrapper_follow ( filePath . c_str ( ) , ""a"" , 0644 )"		4714532	1					
ANR	4714671	Callee	safe_fopen_wrapper_follow		4714532	0					
ANR	4714672	Identifier	safe_fopen_wrapper_follow		4714532	0					
ANR	4714673	ArgumentList	filePath . c_str ( )		4714532	1					
ANR	4714674	Argument	filePath . c_str ( )		4714532	0					
ANR	4714675	CallExpression	filePath . c_str ( )		4714532	0					
ANR	4714676	Callee	filePath . c_str		4714532	0					
ANR	4714677	MemberAccess	filePath . c_str		4714532	0					
ANR	4714678	Identifier	filePath		4714532	0					
ANR	4714679	Identifier	c_str		4714532	1					
ANR	4714680	ArgumentList			4714532	1					
ANR	4714681	Argument	"""a"""		4714532	1					
ANR	4714682	PrimaryExpression	"""a"""		4714532	0					
ANR	4714683	Argument	0644		4714532	2					
ANR	4714684	PrimaryExpression	0644		4714532	0					
ANR	4714685	IfStatement	if ( ! debug_file_ptr )		4714532	13					
ANR	4714686	Condition	! debug_file_ptr	1177:5:32825:32839	4714532	0	True				
ANR	4714687	UnaryOperationExpression	! debug_file_ptr		4714532	0					
ANR	4714688	UnaryOperator	!		4714532	0					
ANR	4714689	Identifier	debug_file_ptr		4714532	1					
ANR	4714690	CompoundStatement		32:23:739:739	4714532	1					
ANR	4714691	ExpressionStatement	save_errno = errno	1178:2:32847:32865	4714532	0	True				
ANR	4714692	AssignmentExpression	save_errno = errno		4714532	0		=			
ANR	4714693	Identifier	save_errno		4714532	0					
ANR	4714694	Identifier	errno		4714532	1					
ANR	4714695	ExpressionStatement	"snprintf ( msg_buf , sizeof ( msg_buf ) , ""Can't open \\""%s\\""\\n%s\\n"" , filePath . c_str ( ) , panic_msg )"	1179:2:32869:32966	4714532	1	True				
ANR	4714696	CallExpression	"snprintf ( msg_buf , sizeof ( msg_buf ) , ""Can't open \\""%s\\""\\n%s\\n"" , filePath . c_str ( ) , panic_msg )"		4714532	0					
ANR	4714697	Callee	snprintf		4714532	0					
ANR	4714698	Identifier	snprintf		4714532	0					
ANR	4714699	ArgumentList	msg_buf		4714532	1					
ANR	4714700	Argument	msg_buf		4714532	0					
ANR	4714701	Identifier	msg_buf		4714532	0					
ANR	4714702	Argument	sizeof ( msg_buf )		4714532	1					
ANR	4714703	SizeofExpression	sizeof ( msg_buf )		4714532	0					
ANR	4714704	Sizeof	sizeof		4714532	0					
ANR	4714705	SizeofOperand	msg_buf		4714532	1					
ANR	4714706	Argument	"""Can't open \\""%s\\""\\n%s\\n"""		4714532	2					
ANR	4714707	PrimaryExpression	"""Can't open \\""%s\\""\\n%s\\n"""		4714532	0					
ANR	4714708	Argument	filePath . c_str ( )		4714532	3					
ANR	4714709	CallExpression	filePath . c_str ( )		4714532	0					
ANR	4714710	Callee	filePath . c_str		4714532	0					
ANR	4714711	MemberAccess	filePath . c_str		4714532	0					
ANR	4714712	Identifier	filePath		4714532	0					
ANR	4714713	Identifier	c_str		4714532	1					
ANR	4714714	ArgumentList			4714532	1					
ANR	4714715	Argument	panic_msg		4714532	4					
ANR	4714716	Identifier	panic_msg		4714532	0					
ANR	4714717	ExpressionStatement	"_condor_dprintf_exit ( save_errno , msg_buf )"	1181:2:32971:33014	4714532	2	True				
ANR	4714718	CallExpression	"_condor_dprintf_exit ( save_errno , msg_buf )"		4714532	0					
ANR	4714719	Callee	_condor_dprintf_exit		4714532	0					
ANR	4714720	Identifier	_condor_dprintf_exit		4714532	0					
ANR	4714721	ArgumentList	save_errno		4714532	1					
ANR	4714722	Argument	save_errno		4714532	0					
ANR	4714723	Identifier	save_errno		4714532	0					
ANR	4714724	Argument	msg_buf		4714532	1					
ANR	4714725	Identifier	msg_buf		4714532	0					
ANR	4714726	ExpressionStatement	"( void ) lseek ( fileno ( debug_file_ptr ) , 0 , SEEK_END )"	1184:1:33044:33094	4714532	14	True				
ANR	4714727	CastExpression	"( void ) lseek ( fileno ( debug_file_ptr ) , 0 , SEEK_END )"		4714532	0					
ANR	4714728	CastTarget	void		4714532	0					
ANR	4714729	CallExpression	"lseek ( fileno ( debug_file_ptr ) , 0 , SEEK_END )"		4714532	1					
ANR	4714730	Callee	lseek		4714532	0					
ANR	4714731	Identifier	lseek		4714532	0					
ANR	4714732	ArgumentList	fileno ( debug_file_ptr )		4714532	1					
ANR	4714733	Argument	fileno ( debug_file_ptr )		4714532	0					
ANR	4714734	CallExpression	fileno ( debug_file_ptr )		4714532	0					
ANR	4714735	Callee	fileno		4714532	0					
ANR	4714736	Identifier	fileno		4714532	0					
ANR	4714737	ArgumentList	debug_file_ptr		4714532	1					
ANR	4714738	Argument	debug_file_ptr		4714532	0					
ANR	4714739	Identifier	debug_file_ptr		4714532	0					
ANR	4714740	Argument	0		4714532	1					
ANR	4714741	PrimaryExpression	0		4714532	0					
ANR	4714742	Argument	SEEK_END		4714532	2					
ANR	4714743	Identifier	SEEK_END		4714532	0					
ANR	4714744	ExpressionStatement	"fprintf ( debug_file_ptr , ""%s\\n"" , panic_msg )"	1185:1:33097:33141	4714532	15	True				
ANR	4714745	CallExpression	"fprintf ( debug_file_ptr , ""%s\\n"" , panic_msg )"		4714532	0					
ANR	4714746	Callee	fprintf		4714532	0					
ANR	4714747	Identifier	fprintf		4714532	0					
ANR	4714748	ArgumentList	debug_file_ptr		4714532	1					
ANR	4714749	Argument	debug_file_ptr		4714532	0					
ANR	4714750	Identifier	debug_file_ptr		4714532	0					
ANR	4714751	Argument	"""%s\\n"""		4714532	1					
ANR	4714752	PrimaryExpression	"""%s\\n"""		4714532	0					
ANR	4714753	Argument	panic_msg		4714532	2					
ANR	4714754	Identifier	panic_msg		4714532	0					
ANR	4714755	ExpressionStatement	( void ) fflush ( debug_file_ptr )	1186:1:33144:33174	4714532	16	True				
ANR	4714756	CastExpression	( void ) fflush ( debug_file_ptr )		4714532	0					
ANR	4714757	CastTarget	void		4714532	0					
ANR	4714758	CallExpression	fflush ( debug_file_ptr )		4714532	1					
ANR	4714759	Callee	fflush		4714532	0					
ANR	4714760	Identifier	fflush		4714532	0					
ANR	4714761	ArgumentList	debug_file_ptr		4714532	1					
ANR	4714762	Argument	debug_file_ptr		4714532	0					
ANR	4714763	Identifier	debug_file_ptr		4714532	0					
ANR	4714764	ExpressionStatement	"_condor_dprintf_exit ( 0 , panic_msg )"	1188:1:33178:33214	4714532	17	True				
ANR	4714765	CallExpression	"_condor_dprintf_exit ( 0 , panic_msg )"		4714532	0					
ANR	4714766	Callee	_condor_dprintf_exit		4714532	0					
ANR	4714767	Identifier	_condor_dprintf_exit		4714532	0					
ANR	4714768	ArgumentList	0		4714532	1					
ANR	4714769	Argument	0		4714532	0					
ANR	4714770	PrimaryExpression	0		4714532	0					
ANR	4714771	Argument	panic_msg		4714532	1					
ANR	4714772	Identifier	panic_msg		4714532	0					
ANR	4714773	ReturnType	void		4714532	1					
ANR	4714774	Identifier	_condor_fd_panic		4714532	2					
ANR	4714775	ParameterList	"int line , const char * file"		4714532	3					
ANR	4714776	Parameter	int line	1145:18:32074:32081	4714532	0	True				
ANR	4714777	ParameterType	int		4714532	0					
ANR	4714778	Identifier	line		4714532	1					
ANR	4714779	Parameter	const char * file	1145:28:32084:32099	4714532	1	True				
ANR	4714780	ParameterType	const char *		4714532	0					
ANR	4714781	Identifier	file		4714532	1					
ANR	4714782	CFGEntryNode	ENTRY		4714532		True				
ANR	4714783	CFGExitNode	EXIT		4714532		True				
ANR	4714784	Symbol	DebugLogs -> end		4714532						
ANR	4714785	Symbol	panic_msg		4714532						
ANR	4714786	Symbol	line		4714532						
ANR	4714787	Symbol	save_errno		4714532						
ANR	4714788	Symbol	fileExists		4714532						
ANR	4714789	Symbol	file		4714532						
ANR	4714790	Symbol	( * it ) . logPath		4714532						
ANR	4714791	Symbol	filePath . c_str		4714532						
ANR	4714792	Symbol	* DebugLogs		4714532						
ANR	4714793	Symbol	safe_fopen_wrapper_follow		4714532						
ANR	4714794	Symbol	DebugLogs		4714532						
ANR	4714795	Symbol	errno		4714532						
ANR	4714796	Symbol	filePath		4714532						
ANR	4714797	Symbol	__FILE__		4714532						
ANR	4714798	Symbol	false		4714532						
ANR	4714799	Symbol	i		4714532						
ANR	4714800	Symbol	msg_buf		4714532						
ANR	4714801	Symbol	it		4714532						
ANR	4714802	Symbol	debug_file_ptr		4714532						
ANR	4714803	Symbol	__LINE__		4714532						
ANR	4714804	Symbol	SEEK_END		4714532						
ANR	4714805	Symbol	* it		4714532						
ANR	4714806	Symbol	fileno		4714532						
ANR	4714807	Symbol	true		4714532						
ANR	4714808	Symbol	DebugLogs -> begin		4714532						
ANR	4714809	Symbol	PRIV_CONDOR		4714532						
ANR	4714810	Function	tzset	1194:0:33242:33255							
ANR	4714811	FunctionDef	tzset ()		4714810	0					
ANR	4714812	CompoundStatement		1194:12:33254:33255	4714810	0					
ANR	4714813	ReturnType	void		4714810	1					
ANR	4714814	Identifier	tzset		4714810	2					
ANR	4714815	ParameterList			4714810	3					
ANR	4714816	CFGEntryNode	ENTRY		4714810		True				
ANR	4714817	CFGExitNode	EXIT		4714810		True				
ANR	4714818	DeclStmt									
ANR	4714819	Decl							extern char	extern char * *	environ
ANR	4714820	DeclStmt									
ANR	4714821	Decl							char	char *	name
ANR	4714822	DeclStmt									
ANR	4714823	Decl							char	char * *	envp
ANR	4714824	DeclStmt									
ANR	4714825	Decl							char	char *	p1
ANR	4714826	Decl							char	char *	p2
ANR	4714827	DeclStmt									
ANR	4714828	Decl							char	char *	name
ANR	4714829	Function	sigset	1221:0:33590:33599							
ANR	4714830	FunctionDef	sigset ()		4714829	0					
ANR	4714831	CompoundStatement		1221:8:33598:33599	4714829	0					
ANR	4714832	Identifier	sigset		4714829	1					
ANR	4714833	ParameterList			4714829	2					
ANR	4714834	CFGEntryNode	ENTRY		4714829		True				
ANR	4714835	CFGExitNode	EXIT		4714829		True				
ANR	4714836	Function	open_debug_file	1224:0:33609:34639							
ANR	4714837	FunctionDef	"open_debug_file (struct DebugFileInfo * it , const char flags [ ] , bool dont_panic)"		4714836	0					
ANR	4714838	CompoundStatement		1226:0:33702:34639	4714836	0					
ANR	4714839	IdentifierDeclStatement	FILE * fp ;	1227:1:33705:33714	4714836	0	True				
ANR	4714840	IdentifierDecl	* fp		4714836	0					
ANR	4714841	IdentifierDeclType	FILE *		4714836	0					
ANR	4714842	Identifier	fp		4714836	1					
ANR	4714843	IdentifierDeclStatement	priv_state priv ;	1228:1:33717:33732	4714836	1	True				
ANR	4714844	IdentifierDecl	priv		4714836	0					
ANR	4714845	IdentifierDeclType	priv_state		4714836	0					
ANR	4714846	Identifier	priv		4714836	1					
ANR	4714847	IdentifierDeclStatement	char msg_buf [ DPRINTF_ERR_MAX ] ;	1229:1:33735:33764	4714836	2	True				
ANR	4714848	IdentifierDecl	msg_buf [ DPRINTF_ERR_MAX ]		4714836	0					
ANR	4714849	IdentifierDeclType	char [ DPRINTF_ERR_MAX ]		4714836	0					
ANR	4714850	Identifier	msg_buf		4714836	1					
ANR	4714851	Identifier	DPRINTF_ERR_MAX		4714836	2					
ANR	4714852	IdentifierDeclStatement	int save_errno ;	1230:1:33767:33781	4714836	3	True				
ANR	4714853	IdentifierDecl	save_errno		4714836	0					
ANR	4714854	IdentifierDeclType	int		4714836	0					
ANR	4714855	Identifier	save_errno		4714836	1					
ANR	4714856	IdentifierDeclStatement	std :: string filePath = ( * it ) . logPath ;	1231:1:33784:33820	4714836	4	True				
ANR	4714857	IdentifierDecl	filePath = ( * it ) . logPath		4714836	0					
ANR	4714858	IdentifierDeclType	std :: string		4714836	0					
ANR	4714859	Identifier	filePath		4714836	1					
ANR	4714860	AssignmentExpression	filePath = ( * it ) . logPath		4714836	2		=			
ANR	4714861	Identifier	filePath		4714836	0					
ANR	4714862	MemberAccess	( * it ) . logPath		4714836	1					
ANR	4714863	UnaryOperationExpression	* it		4714836	0					
ANR	4714864	UnaryOperator	*		4714836	0					
ANR	4714865	Identifier	it		4714836	1					
ANR	4714866	Identifier	logPath		4714836	1					
ANR	4714867	ExpressionStatement	"priv = _set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"	1233:1:33824:33876	4714836	5	True				
ANR	4714868	AssignmentExpression	"priv = _set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"		4714836	0		=			
ANR	4714869	Identifier	priv		4714836	0					
ANR	4714870	CallExpression	"_set_priv ( PRIV_CONDOR , __FILE__ , __LINE__ , 0 )"		4714836	1					
ANR	4714871	Callee	_set_priv		4714836	0					
ANR	4714872	Identifier	_set_priv		4714836	0					
ANR	4714873	ArgumentList	PRIV_CONDOR		4714836	1					
ANR	4714874	Argument	PRIV_CONDOR		4714836	0					
ANR	4714875	Identifier	PRIV_CONDOR		4714836	0					
ANR	4714876	Argument	__FILE__		4714836	1					
ANR	4714877	Identifier	__FILE__		4714836	0					
ANR	4714878	Argument	__LINE__		4714836	2					
ANR	4714879	Identifier	__LINE__		4714836	0					
ANR	4714880	Argument	0		4714836	3					
ANR	4714881	PrimaryExpression	0		4714836	0					
ANR	4714882	ExpressionStatement	errno = 0	1238:1:33993:34002	4714836	6	True				
ANR	4714883	AssignmentExpression	errno = 0		4714836	0		=			
ANR	4714884	Identifier	errno		4714836	0					
ANR	4714885	PrimaryExpression	0		4714836	1					
ANR	4714886	IfStatement	"if ( ( fp = safe_fopen_wrapper_follow ( filePath . c_str ( ) , flags , 0644 ) ) == NULL )"		4714836	7					
ANR	4714887	Condition	"( fp = safe_fopen_wrapper_follow ( filePath . c_str ( ) , flags , 0644 ) ) == NULL"	1239:5:34009:34075	4714836	0	True				
ANR	4714888	EqualityExpression	"( fp = safe_fopen_wrapper_follow ( filePath . c_str ( ) , flags , 0644 ) ) == NULL"		4714836	0		==			
ANR	4714889	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( filePath . c_str ( ) , flags , 0644 )"		4714836	0		=			
ANR	4714890	Identifier	fp		4714836	0					
ANR	4714891	CallExpression	"safe_fopen_wrapper_follow ( filePath . c_str ( ) , flags , 0644 )"		4714836	1					
ANR	4714892	Callee	safe_fopen_wrapper_follow		4714836	0					
ANR	4714893	Identifier	safe_fopen_wrapper_follow		4714836	0					
ANR	4714894	ArgumentList	filePath . c_str ( )		4714836	1					
ANR	4714895	Argument	filePath . c_str ( )		4714836	0					
ANR	4714896	CallExpression	filePath . c_str ( )		4714836	0					
ANR	4714897	Callee	filePath . c_str		4714836	0					
ANR	4714898	MemberAccess	filePath . c_str		4714836	0					
ANR	4714899	Identifier	filePath		4714836	0					
ANR	4714900	Identifier	c_str		4714836	1					
ANR	4714901	ArgumentList			4714836	1					
ANR	4714902	Argument	flags		4714836	1					
ANR	4714903	Identifier	flags		4714836	0					
ANR	4714904	Argument	0644		4714836	2					
ANR	4714905	PrimaryExpression	0644		4714836	0					
ANR	4714906	Identifier	NULL		4714836	1					
ANR	4714907	CompoundStatement		14:75:376:376	4714836	1					
ANR	4714908	ExpressionStatement	save_errno = errno	1240:2:34083:34101	4714836	0	True				
ANR	4714909	AssignmentExpression	save_errno = errno		4714836	0		=			
ANR	4714910	Identifier	save_errno		4714836	0					
ANR	4714911	Identifier	errno		4714836	1					
ANR	4714912	IfStatement	if ( errno == EMFILE )		4714836	1					
ANR	4714913	Condition	errno == EMFILE	1242:6:34129:34143	4714836	0	True				
ANR	4714914	EqualityExpression	errno == EMFILE		4714836	0		==			
ANR	4714915	Identifier	errno		4714836	0					
ANR	4714916	Identifier	EMFILE		4714836	1					
ANR	4714917	CompoundStatement		17:24:444:444	4714836	1					
ANR	4714918	ExpressionStatement	"_condor_fd_panic ( __LINE__ , __FILE__ )"	1243:3:34152:34190	4714836	0	True				
ANR	4714919	CallExpression	"_condor_fd_panic ( __LINE__ , __FILE__ )"		4714836	0					
ANR	4714920	Callee	_condor_fd_panic		4714836	0					
ANR	4714921	Identifier	_condor_fd_panic		4714836	0					
ANR	4714922	ArgumentList	__LINE__		4714836	1					
ANR	4714923	Argument	__LINE__		4714836	0					
ANR	4714924	Identifier	__LINE__		4714836	0					
ANR	4714925	Argument	__FILE__		4714836	1					
ANR	4714926	Identifier	__FILE__		4714836	0					
ANR	4714927	IfStatement	if ( fp == NULL )		4714836	2					
ANR	4714928	Condition	fp == NULL	1246:6:34209:34218	4714836	0	True				
ANR	4714929	EqualityExpression	fp == NULL		4714836	0		==			
ANR	4714930	Identifier	fp		4714836	0					
ANR	4714931	Identifier	NULL		4714836	1					
ANR	4714932	CompoundStatement		21:18:518:518	4714836	1					
ANR	4714933	ExpressionStatement	fp = stderr	1247:3:34226:34237	4714836	0	True				
ANR	4714934	AssignmentExpression	fp = stderr		4714836	0		=			
ANR	4714935	Identifier	fp		4714836	0					
ANR	4714936	Identifier	stderr		4714836	1					
ANR	4714937	ExpressionStatement	"_condor_dfprintf ( fp , ""Can't open \\""%s\\""\\n"" , filePath . c_str ( ) )"	1249:2:34245:34308	4714836	3	True				
ANR	4714938	CallExpression	"_condor_dfprintf ( fp , ""Can't open \\""%s\\""\\n"" , filePath . c_str ( ) )"		4714836	0					
ANR	4714939	Callee	_condor_dfprintf		4714836	0					
ANR	4714940	Identifier	_condor_dfprintf		4714836	0					
ANR	4714941	ArgumentList	fp		4714836	1					
ANR	4714942	Argument	fp		4714836	0					
ANR	4714943	Identifier	fp		4714836	0					
ANR	4714944	Argument	"""Can't open \\""%s\\""\\n"""		4714836	1					
ANR	4714945	PrimaryExpression	"""Can't open \\""%s\\""\\n"""		4714836	0					
ANR	4714946	Argument	filePath . c_str ( )		4714836	2					
ANR	4714947	CallExpression	filePath . c_str ( )		4714836	0					
ANR	4714948	Callee	filePath . c_str		4714836	0					
ANR	4714949	MemberAccess	filePath . c_str		4714836	0					
ANR	4714950	Identifier	filePath		4714836	0					
ANR	4714951	Identifier	c_str		4714836	1					
ANR	4714952	ArgumentList			4714836	1					
ANR	4714953	IfStatement	if ( ! dont_panic )		4714836	4					
ANR	4714954	Condition	! dont_panic	1250:6:34316:34327	4714836	0	True				
ANR	4714955	UnaryOperationExpression	! dont_panic		4714836	0					
ANR	4714956	UnaryOperator	!		4714836	0					
ANR	4714957	Identifier	dont_panic		4714836	1					
ANR	4714958	CompoundStatement		25:21:628:628	4714836	1					
ANR	4714959	ExpressionStatement	"snprintf ( msg_buf , sizeof ( msg_buf ) , ""Can't open \\""%s\\""\\n"" , filePath . c_str ( ) )"	1251:3:34336:34419	4714836	0	True				
ANR	4714960	CallExpression	"snprintf ( msg_buf , sizeof ( msg_buf ) , ""Can't open \\""%s\\""\\n"" , filePath . c_str ( ) )"		4714836	0					
ANR	4714961	Callee	snprintf		4714836	0					
ANR	4714962	Identifier	snprintf		4714836	0					
ANR	4714963	ArgumentList	msg_buf		4714836	1					
ANR	4714964	Argument	msg_buf		4714836	0					
ANR	4714965	Identifier	msg_buf		4714836	0					
ANR	4714966	Argument	sizeof ( msg_buf )		4714836	1					
ANR	4714967	SizeofExpression	sizeof ( msg_buf )		4714836	0					
ANR	4714968	Sizeof	sizeof		4714836	0					
ANR	4714969	SizeofOperand	msg_buf		4714836	1					
ANR	4714970	Argument	"""Can't open \\""%s\\""\\n"""		4714836	2					
ANR	4714971	PrimaryExpression	"""Can't open \\""%s\\""\\n"""		4714836	0					
ANR	4714972	Argument	filePath . c_str ( )		4714836	3					
ANR	4714973	CallExpression	filePath . c_str ( )		4714836	0					
ANR	4714974	Callee	filePath . c_str		4714836	0					
ANR	4714975	MemberAccess	filePath . c_str		4714836	0					
ANR	4714976	Identifier	filePath		4714836	0					
ANR	4714977	Identifier	c_str		4714836	1					
ANR	4714978	ArgumentList			4714836	1					
ANR	4714979	IfStatement	if ( ! DebugContinueOnOpenFailure )		4714836	1					
ANR	4714980	Condition	! DebugContinueOnOpenFailure	1254:8:34430:34457	4714836	0	True				
ANR	4714981	UnaryOperationExpression	! DebugContinueOnOpenFailure		4714836	0					
ANR	4714982	UnaryOperator	!		4714836	0					
ANR	4714983	Identifier	DebugContinueOnOpenFailure		4714836	1					
ANR	4714984	CompoundStatement		29:38:757:757	4714836	1					
ANR	4714985	ExpressionStatement	"_condor_dprintf_exit ( save_errno , msg_buf )"	1255:7:34469:34512	4714836	0	True				
ANR	4714986	CallExpression	"_condor_dprintf_exit ( save_errno , msg_buf )"		4714836	0					
ANR	4714987	Callee	_condor_dprintf_exit		4714836	0					
ANR	4714988	Identifier	_condor_dprintf_exit		4714836	0					
ANR	4714989	ArgumentList	save_errno		4714836	1					
ANR	4714990	Argument	save_errno		4714836	0					
ANR	4714991	Identifier	save_errno		4714836	0					
ANR	4714992	Argument	msg_buf		4714836	1					
ANR	4714993	Identifier	msg_buf		4714836	0					
ANR	4714994	ExpressionStatement	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"	1261:1:34567:34605	4714836	8	True				
ANR	4714995	CallExpression	"_set_priv ( priv , __FILE__ , __LINE__ , 0 )"		4714836	0					
ANR	4714996	Callee	_set_priv		4714836	0					
ANR	4714997	Identifier	_set_priv		4714836	0					
ANR	4714998	ArgumentList	priv		4714836	1					
ANR	4714999	Argument	priv		4714836	0					
ANR	4715000	Identifier	priv		4714836	0					
ANR	4715001	Argument	__FILE__		4714836	1					
ANR	4715002	Identifier	__FILE__		4714836	0					
ANR	4715003	Argument	__LINE__		4714836	2					
ANR	4715004	Identifier	__LINE__		4714836	0					
ANR	4715005	Argument	0		4714836	3					
ANR	4715006	PrimaryExpression	0		4714836	0					
ANR	4715007	ExpressionStatement	it -> debugFP = fp	1262:1:34608:34624	4714836	9	True				
ANR	4715008	AssignmentExpression	it -> debugFP = fp		4714836	0		=			
ANR	4715009	PtrMemberAccess	it -> debugFP		4714836	0					
ANR	4715010	Identifier	it		4714836	0					
ANR	4715011	Identifier	debugFP		4714836	1					
ANR	4715012	Identifier	fp		4714836	1					
ANR	4715013	ReturnStatement	return fp ;	1264:1:34628:34637	4714836	10	True				
ANR	4715014	Identifier	fp		4714836	0					
ANR	4715015	ReturnType	static FILE *		4714836	1					
ANR	4715016	Identifier	open_debug_file		4714836	2					
ANR	4715017	ParameterList	"struct DebugFileInfo * it , const char flags [ ] , bool dont_panic"		4714836	3					
ANR	4715018	Parameter	struct DebugFileInfo * it	1225:16:33639:33662	4714836	0	True				
ANR	4715019	ParameterType	struct DebugFileInfo *		4714836	0					
ANR	4715020	Identifier	it		4714836	1					
ANR	4715021	Parameter	const char flags [ ]	1225:42:33665:33682	4714836	1	True				
ANR	4715022	ParameterType	const char [ ]		4714836	0					
ANR	4715023	Identifier	flags		4714836	1					
ANR	4715024	Parameter	bool dont_panic	1225:62:33685:33699	4714836	2	True				
ANR	4715025	ParameterType	bool		4714836	0					
ANR	4715026	Identifier	dont_panic		4714836	1					
ANR	4715027	CFGEntryNode	ENTRY		4714836		True				
ANR	4715028	CFGExitNode	EXIT		4714836		True				
ANR	4715029	Symbol	errno		4714836						
ANR	4715030	Symbol	NULL		4714836						
ANR	4715031	Symbol	filePath		4714836						
ANR	4715032	Symbol	__FILE__		4714836						
ANR	4715033	Symbol	flags		4714836						
ANR	4715034	Symbol	_set_priv		4714836						
ANR	4715035	Symbol	DebugContinueOnOpenFailure		4714836						
ANR	4715036	Symbol	msg_buf		4714836						
ANR	4715037	Symbol	save_errno		4714836						
ANR	4715038	Symbol	fp		4714836						
ANR	4715039	Symbol	it		4714836						
ANR	4715040	Symbol	stderr		4714836						
ANR	4715041	Symbol	dont_panic		4714836						
ANR	4715042	Symbol	__LINE__		4714836						
ANR	4715043	Symbol	* it		4714836						
ANR	4715044	Symbol	( * it ) . logPath		4714836						
ANR	4715045	Symbol	EMFILE		4714836						
ANR	4715046	Symbol	filePath . c_str		4714836						
ANR	4715047	Symbol	priv		4714836						
ANR	4715048	Symbol	it -> debugFP		4714836						
ANR	4715049	Symbol	PRIV_CONDOR		4714836						
ANR	4715050	Symbol	safe_fopen_wrapper_follow		4714836						
ANR	4715051	Function	debug_check_it	1267:0:34642:34978							
ANR	4715052	FunctionDef	"debug_check_it (struct DebugFileInfo & it , bool fTruncate , bool dont_panic)"		4715051	0					
ANR	4715053	CompoundStatement		1268:0:34721:34978	4715051	0					
ANR	4715054	IdentifierDeclStatement	FILE * debug_file_fp ;	1269:1:34724:34743	4715051	0	True				
ANR	4715055	IdentifierDecl	* debug_file_fp		4715051	0					
ANR	4715056	IdentifierDeclType	FILE *		4715051	0					
ANR	4715057	Identifier	debug_file_fp		4715051	1					
ANR	4715058	IfStatement	if ( fTruncate )		4715051	1					
ANR	4715059	Condition	fTruncate	1271:5:34751:34759	4715051	0	True				
ANR	4715060	Identifier	fTruncate		4715051	0					
ANR	4715061	CompoundStatement		4:17:41:41	4715051	1					
ANR	4715062	ExpressionStatement	"debug_file_fp = debug_lock_it ( & it , ""wN"" , 0 , dont_panic )"	1272:2:34767:34822	4715051	0	True				
ANR	4715063	AssignmentExpression	"debug_file_fp = debug_lock_it ( & it , ""wN"" , 0 , dont_panic )"		4715051	0		=			
ANR	4715064	Identifier	debug_file_fp		4715051	0					
ANR	4715065	CallExpression	"debug_lock_it ( & it , ""wN"" , 0 , dont_panic )"		4715051	1					
ANR	4715066	Callee	debug_lock_it		4715051	0					
ANR	4715067	Identifier	debug_lock_it		4715051	0					
ANR	4715068	ArgumentList	& it		4715051	1					
ANR	4715069	Argument	& it		4715051	0					
ANR	4715070	UnaryOperationExpression	& it		4715051	0					
ANR	4715071	UnaryOperator	&		4715051	0					
ANR	4715072	Identifier	it		4715051	1					
ANR	4715073	Argument	"""wN"""		4715051	1					
ANR	4715074	PrimaryExpression	"""wN"""		4715051	0					
ANR	4715075	Argument	0		4715051	2					
ANR	4715076	PrimaryExpression	0		4715051	0					
ANR	4715077	Argument	dont_panic		4715051	3					
ANR	4715078	Identifier	dont_panic		4715051	0					
ANR	4715079	ElseStatement	else		4715051	0					
ANR	4715080	CompoundStatement		6:8:110:110	4715051	0					
ANR	4715081	ExpressionStatement	"debug_file_fp = debug_lock_it ( & it , ""aN"" , 0 , dont_panic )"	1274:2:34836:34891	4715051	0	True				
ANR	4715082	AssignmentExpression	"debug_file_fp = debug_lock_it ( & it , ""aN"" , 0 , dont_panic )"		4715051	0		=			
ANR	4715083	Identifier	debug_file_fp		4715051	0					
ANR	4715084	CallExpression	"debug_lock_it ( & it , ""aN"" , 0 , dont_panic )"		4715051	1					
ANR	4715085	Callee	debug_lock_it		4715051	0					
ANR	4715086	Identifier	debug_lock_it		4715051	0					
ANR	4715087	ArgumentList	& it		4715051	1					
ANR	4715088	Argument	& it		4715051	0					
ANR	4715089	UnaryOperationExpression	& it		4715051	0					
ANR	4715090	UnaryOperator	&		4715051	0					
ANR	4715091	Identifier	it		4715051	1					
ANR	4715092	Argument	"""aN"""		4715051	1					
ANR	4715093	PrimaryExpression	"""aN"""		4715051	0					
ANR	4715094	Argument	0		4715051	2					
ANR	4715095	PrimaryExpression	0		4715051	0					
ANR	4715096	Argument	dont_panic		4715051	3					
ANR	4715097	Identifier	dont_panic		4715051	0					
ANR	4715098	IfStatement	if ( debug_file_fp )		4715051	2					
ANR	4715099	Condition	debug_file_fp	1277:5:34902:34914	4715051	0	True				
ANR	4715100	Identifier	debug_file_fp		4715051	0					
ANR	4715101	ExpressionStatement	( void ) debug_unlock_it ( & it )	1277:20:34917:34943	4715051	1	True				
ANR	4715102	CastExpression	( void ) debug_unlock_it ( & it )		4715051	0					
ANR	4715103	CastTarget	void		4715051	0					
ANR	4715104	CallExpression	debug_unlock_it ( & it )		4715051	1					
ANR	4715105	Callee	debug_unlock_it		4715051	0					
ANR	4715106	Identifier	debug_unlock_it		4715051	0					
ANR	4715107	ArgumentList	& it		4715051	1					
ANR	4715108	Argument	& it		4715051	0					
ANR	4715109	UnaryOperationExpression	& it		4715051	0					
ANR	4715110	UnaryOperator	&		4715051	0					
ANR	4715111	Identifier	it		4715051	1					
ANR	4715112	ReturnStatement	return ( debug_file_fp != NULL ) ;	1278:1:34946:34976	4715051	3	True				
ANR	4715113	EqualityExpression	debug_file_fp != NULL		4715051	0		!=			
ANR	4715114	Identifier	debug_file_fp		4715051	0					
ANR	4715115	Identifier	NULL		4715051	1					
ANR	4715116	ReturnType	bool		4715051	1					
ANR	4715117	Identifier	debug_check_it		4715051	2					
ANR	4715118	ParameterList	"struct DebugFileInfo & it , bool fTruncate , bool dont_panic"		4715051	3					
ANR	4715119	Parameter	struct DebugFileInfo & it	1267:20:34662:34685	4715051	0	True				
ANR	4715120	ParameterType	struct DebugFileInfo &		4715051	0					
ANR	4715121	Identifier	it		4715051	1					
ANR	4715122	Parameter	bool fTruncate	1267:46:34688:34701	4715051	1	True				
ANR	4715123	ParameterType	bool		4715051	0					
ANR	4715124	Identifier	fTruncate		4715051	1					
ANR	4715125	Parameter	bool dont_panic	1267:62:34704:34718	4715051	2	True				
ANR	4715126	ParameterType	bool		4715051	0					
ANR	4715127	Identifier	dont_panic		4715051	1					
ANR	4715128	CFGEntryNode	ENTRY		4715051		True				
ANR	4715129	CFGExitNode	EXIT		4715051		True				
ANR	4715130	Symbol	debug_file_fp		4715051						
ANR	4715131	Symbol	NULL		4715051						
ANR	4715132	Symbol	& it		4715051						
ANR	4715133	Symbol	debug_lock_it		4715051						
ANR	4715134	Symbol	it		4715051						
ANR	4715135	Symbol	fTruncate		4715051						
ANR	4715136	Symbol	dont_panic		4715051						
ANR	4715137	Function	_condor_dprintf_exit	1282:0:35040:37699							
ANR	4715138	FunctionDef	"_condor_dprintf_exit (int error_code , const char * msg)"		4715137	0					
ANR	4715139	CompoundStatement		1284:0:35101:37699	4715137	0					
ANR	4715140	IdentifierDeclStatement	char * tmp ;	1285:1:35104:35113	4715137	0	True				
ANR	4715141	IdentifierDecl	* tmp		4715137	0					
ANR	4715142	IdentifierDeclType	char *		4715137	0					
ANR	4715143	Identifier	tmp		4715137	1					
ANR	4715144	IdentifierDeclStatement	FILE * fail_fp ;	1286:1:35116:35129	4715137	1	True				
ANR	4715145	IdentifierDecl	* fail_fp		4715137	0					
ANR	4715146	IdentifierDeclType	FILE *		4715137	0					
ANR	4715147	Identifier	fail_fp		4715137	1					
ANR	4715148	IdentifierDeclStatement	char buf [ DPRINTF_ERR_MAX ] ;	1287:1:35132:35157	4715137	2	True				
ANR	4715149	IdentifierDecl	buf [ DPRINTF_ERR_MAX ]		4715137	0					
ANR	4715150	IdentifierDeclType	char [ DPRINTF_ERR_MAX ]		4715137	0					
ANR	4715151	Identifier	buf		4715137	1					
ANR	4715152	Identifier	DPRINTF_ERR_MAX		4715137	2					
ANR	4715153	IdentifierDeclStatement	char header [ DPRINTF_ERR_MAX ] ;	1288:1:35160:35188	4715137	3	True				
ANR	4715154	IdentifierDecl	header [ DPRINTF_ERR_MAX ]		4715137	0					
ANR	4715155	IdentifierDeclType	char [ DPRINTF_ERR_MAX ]		4715137	0					
ANR	4715156	Identifier	header		4715137	1					
ANR	4715157	Identifier	DPRINTF_ERR_MAX		4715137	2					
ANR	4715158	IdentifierDeclStatement	char tail [ DPRINTF_ERR_MAX ] ;	1289:1:35191:35217	4715137	4	True				
ANR	4715159	IdentifierDecl	tail [ DPRINTF_ERR_MAX ]		4715137	0					
ANR	4715160	IdentifierDeclType	char [ DPRINTF_ERR_MAX ]		4715137	0					
ANR	4715161	Identifier	tail		4715137	1					
ANR	4715162	Identifier	DPRINTF_ERR_MAX		4715137	2					
ANR	4715163	IdentifierDeclStatement	int wrote_warning = FALSE ;	1290:1:35220:35245	4715137	5	True				
ANR	4715164	IdentifierDecl	wrote_warning = FALSE		4715137	0					
ANR	4715165	IdentifierDeclType	int		4715137	0					
ANR	4715166	Identifier	wrote_warning		4715137	1					
ANR	4715167	AssignmentExpression	wrote_warning = FALSE		4715137	2		=			
ANR	4715168	Identifier	FALSE		4715137	0					
ANR	4715169	Identifier	FALSE		4715137	1					
ANR	4715170	IdentifierDeclStatement	struct tm * tm ;	1291:1:35248:35261	4715137	6	True				
ANR	4715171	IdentifierDecl	* tm		4715137	0					
ANR	4715172	IdentifierDeclType	struct tm *		4715137	0					
ANR	4715173	Identifier	tm		4715137	1					
ANR	4715174	IdentifierDeclStatement	time_t clock_now ;	1292:1:35264:35280	4715137	7	True				
ANR	4715175	IdentifierDecl	clock_now		4715137	0					
ANR	4715176	IdentifierDeclType	time_t		4715137	0					
ANR	4715177	Identifier	clock_now		4715137	1					
ANR	4715178	IdentifierDeclStatement	std :: vector < DebugFileInfo > :: iterator it ;	1293:1:35283:35322	4715137	8	True				
ANR	4715179	IdentifierDecl	it		4715137	0					
ANR	4715180	IdentifierDeclType	std :: vector < DebugFileInfo > :: iterator		4715137	0					
ANR	4715181	Identifier	it		4715137	1					
ANR	4715182	IfStatement	if ( ! DprintfBroken )		4715137	9					
ANR	4715183	Condition	! DprintfBroken	1302:5:35679:35692	4715137	0	True				
ANR	4715184	UnaryOperationExpression	! DprintfBroken		4715137	0					
ANR	4715185	UnaryOperator	!		4715137	0					
ANR	4715186	Identifier	DprintfBroken		4715137	1					
ANR	4715187	CompoundStatement		19:22:594:594	4715137	1					
ANR	4715188	ExpressionStatement	( void ) time ( & clock_now )	1303:2:35700:35724	4715137	0	True				
ANR	4715189	CastExpression	( void ) time ( & clock_now )		4715137	0					
ANR	4715190	CastTarget	void		4715137	0					
ANR	4715191	CallExpression	time ( & clock_now )		4715137	1					
ANR	4715192	Callee	time		4715137	0					
ANR	4715193	Identifier	time		4715137	0					
ANR	4715194	ArgumentList	& clock_now		4715137	1					
ANR	4715195	Argument	& clock_now		4715137	0					
ANR	4715196	UnaryOperationExpression	& clock_now		4715137	0					
ANR	4715197	UnaryOperator	&		4715137	0					
ANR	4715198	Identifier	clock_now		4715137	1					
ANR	4715199	IfStatement	if ( DebugUseTimestamps )		4715137	1					
ANR	4715200	Condition	DebugUseTimestamps	1305:7:35734:35751	4715137	0	True				
ANR	4715201	Identifier	DebugUseTimestamps		4715137	0					
ANR	4715202	CompoundStatement		22:28:653:653	4715137	1					
ANR	4715203	ExpressionStatement	"snprintf ( header , sizeof ( header ) , ""(%d) "" , ( int ) clock_now )"	1310:3:35972:36031	4715137	0	True				
ANR	4715204	CallExpression	"snprintf ( header , sizeof ( header ) , ""(%d) "" , ( int ) clock_now )"		4715137	0					
ANR	4715205	Callee	snprintf		4715137	0					
ANR	4715206	Identifier	snprintf		4715137	0					
ANR	4715207	ArgumentList	header		4715137	1					
ANR	4715208	Argument	header		4715137	0					
ANR	4715209	Identifier	header		4715137	0					
ANR	4715210	Argument	sizeof ( header )		4715137	1					
ANR	4715211	SizeofExpression	sizeof ( header )		4715137	0					
ANR	4715212	Sizeof	sizeof		4715137	0					
ANR	4715213	SizeofOperand	header		4715137	1					
ANR	4715214	Argument	"""(%d) """		4715137	2					
ANR	4715215	PrimaryExpression	"""(%d) """		4715137	0					
ANR	4715216	Argument	( int ) clock_now		4715137	3					
ANR	4715217	CastExpression	( int ) clock_now		4715137	0					
ANR	4715218	CastTarget	int		4715137	0					
ANR	4715219	Identifier	clock_now		4715137	1					
ANR	4715220	ElseStatement	else		4715137	0					
ANR	4715221	CompoundStatement		28:9:940:940	4715137	0					
ANR	4715222	ExpressionStatement	tm = localtime ( & clock_now )	1312:3:36047:36075	4715137	0	True				
ANR	4715223	AssignmentExpression	tm = localtime ( & clock_now )		4715137	0		=			
ANR	4715224	Identifier	tm		4715137	0					
ANR	4715225	CallExpression	localtime ( & clock_now )		4715137	1					
ANR	4715226	Callee	localtime		4715137	0					
ANR	4715227	Identifier	localtime		4715137	0					
ANR	4715228	ArgumentList	& clock_now		4715137	1					
ANR	4715229	Argument	& clock_now		4715137	0					
ANR	4715230	UnaryOperationExpression	& clock_now		4715137	0					
ANR	4715231	UnaryOperator	&		4715137	0					
ANR	4715232	Identifier	clock_now		4715137	1					
ANR	4715233	ExpressionStatement	"snprintf ( header , sizeof ( header ) , ""%d/%d %02d:%02d:%02d "" , tm -> tm_mon + 1 , tm -> tm_mday , tm -> tm_hour , tm -> tm_min , tm -> tm_sec )"	1313:3:36080:36220	4715137	1	True				
ANR	4715234	CallExpression	"snprintf ( header , sizeof ( header ) , ""%d/%d %02d:%02d:%02d "" , tm -> tm_mon + 1 , tm -> tm_mday , tm -> tm_hour , tm -> tm_min , tm -> tm_sec )"		4715137	0					
ANR	4715235	Callee	snprintf		4715137	0					
ANR	4715236	Identifier	snprintf		4715137	0					
ANR	4715237	ArgumentList	header		4715137	1					
ANR	4715238	Argument	header		4715137	0					
ANR	4715239	Identifier	header		4715137	0					
ANR	4715240	Argument	sizeof ( header )		4715137	1					
ANR	4715241	SizeofExpression	sizeof ( header )		4715137	0					
ANR	4715242	Sizeof	sizeof		4715137	0					
ANR	4715243	SizeofOperand	header		4715137	1					
ANR	4715244	Argument	"""%d/%d %02d:%02d:%02d """		4715137	2					
ANR	4715245	PrimaryExpression	"""%d/%d %02d:%02d:%02d """		4715137	0					
ANR	4715246	Argument	tm -> tm_mon + 1		4715137	3					
ANR	4715247	AdditiveExpression	tm -> tm_mon + 1		4715137	0		+			
ANR	4715248	PtrMemberAccess	tm -> tm_mon		4715137	0					
ANR	4715249	Identifier	tm		4715137	0					
ANR	4715250	Identifier	tm_mon		4715137	1					
ANR	4715251	PrimaryExpression	1		4715137	1					
ANR	4715252	Argument	tm -> tm_mday		4715137	4					
ANR	4715253	PtrMemberAccess	tm -> tm_mday		4715137	0					
ANR	4715254	Identifier	tm		4715137	0					
ANR	4715255	Identifier	tm_mday		4715137	1					
ANR	4715256	Argument	tm -> tm_hour		4715137	5					
ANR	4715257	PtrMemberAccess	tm -> tm_hour		4715137	0					
ANR	4715258	Identifier	tm		4715137	0					
ANR	4715259	Identifier	tm_hour		4715137	1					
ANR	4715260	Argument	tm -> tm_min		4715137	6					
ANR	4715261	PtrMemberAccess	tm -> tm_min		4715137	0					
ANR	4715262	Identifier	tm		4715137	0					
ANR	4715263	Identifier	tm_min		4715137	1					
ANR	4715264	Argument	tm -> tm_sec		4715137	7					
ANR	4715265	PtrMemberAccess	tm -> tm_sec		4715137	0					
ANR	4715266	Identifier	tm		4715137	0					
ANR	4715267	Identifier	tm_sec		4715137	1					
ANR	4715268	ExpressionStatement	"snprintf ( header , sizeof ( header ) , ""dprintf() had a fatal error in pid %d\\n"" , ( int ) getpid ( ) )"	1317:2:36228:36320	4715137	2	True				
ANR	4715269	CallExpression	"snprintf ( header , sizeof ( header ) , ""dprintf() had a fatal error in pid %d\\n"" , ( int ) getpid ( ) )"		4715137	0					
ANR	4715270	Callee	snprintf		4715137	0					
ANR	4715271	Identifier	snprintf		4715137	0					
ANR	4715272	ArgumentList	header		4715137	1					
ANR	4715273	Argument	header		4715137	0					
ANR	4715274	Identifier	header		4715137	0					
ANR	4715275	Argument	sizeof ( header )		4715137	1					
ANR	4715276	SizeofExpression	sizeof ( header )		4715137	0					
ANR	4715277	Sizeof	sizeof		4715137	0					
ANR	4715278	SizeofOperand	header		4715137	1					
ANR	4715279	Argument	"""dprintf() had a fatal error in pid %d\\n"""		4715137	2					
ANR	4715280	PrimaryExpression	"""dprintf() had a fatal error in pid %d\\n"""		4715137	0					
ANR	4715281	Argument	( int ) getpid ( )		4715137	3					
ANR	4715282	CastExpression	( int ) getpid ( )		4715137	0					
ANR	4715283	CastTarget	int		4715137	0					
ANR	4715284	CallExpression	getpid ( )		4715137	1					
ANR	4715285	Callee	getpid		4715137	0					
ANR	4715286	Identifier	getpid		4715137	0					
ANR	4715287	ArgumentList			4715137	1					
ANR	4715288	ExpressionStatement	tail [ 0 ] = '\\0'	1318:2:36324:36338	4715137	3	True				
ANR	4715289	AssignmentExpression	tail [ 0 ] = '\\0'		4715137	0		=			
ANR	4715290	ArrayIndexing	tail [ 0 ]		4715137	0					
ANR	4715291	Identifier	tail		4715137	0					
ANR	4715292	PrimaryExpression	0		4715137	1					
ANR	4715293	PrimaryExpression	'\\0'		4715137	1					
ANR	4715294	IfStatement	if ( error_code )		4715137	4					
ANR	4715295	Condition	error_code	1319:6:36346:36355	4715137	0	True				
ANR	4715296	Identifier	error_code		4715137	0					
ANR	4715297	CompoundStatement		36:19:1257:1257	4715137	1					
ANR	4715298	ExpressionStatement	"sprintf ( tail , ""errno: %d (%s)\\n"" , error_code , strerror ( error_code ) )"	1320:3:36364:36439	4715137	0	True				
ANR	4715299	CallExpression	"sprintf ( tail , ""errno: %d (%s)\\n"" , error_code , strerror ( error_code ) )"		4715137	0					
ANR	4715300	Callee	sprintf		4715137	0					
ANR	4715301	Identifier	sprintf		4715137	0					
ANR	4715302	ArgumentList	tail		4715137	1					
ANR	4715303	Argument	tail		4715137	0					
ANR	4715304	Identifier	tail		4715137	0					
ANR	4715305	Argument	"""errno: %d (%s)\\n"""		4715137	1					
ANR	4715306	PrimaryExpression	"""errno: %d (%s)\\n"""		4715137	0					
ANR	4715307	Argument	error_code		4715137	2					
ANR	4715308	Identifier	error_code		4715137	0					
ANR	4715309	Argument	strerror ( error_code )		4715137	3					
ANR	4715310	CallExpression	strerror ( error_code )		4715137	0					
ANR	4715311	Callee	strerror		4715137	0					
ANR	4715312	Identifier	strerror		4715137	0					
ANR	4715313	ArgumentList	error_code		4715137	1					
ANR	4715314	Argument	error_code		4715137	0					
ANR	4715315	Identifier	error_code		4715137	0					
ANR	4715316	ExpressionStatement	"sprintf ( buf , ""euid: %d, ruid: %d\\n"" , ( int ) geteuid ( ) , ( int ) getuid ( ) )"	1324:2:36464:36538	4715137	5	True				
ANR	4715317	CallExpression	"sprintf ( buf , ""euid: %d, ruid: %d\\n"" , ( int ) geteuid ( ) , ( int ) getuid ( ) )"		4715137	0					
ANR	4715318	Callee	sprintf		4715137	0					
ANR	4715319	Identifier	sprintf		4715137	0					
ANR	4715320	ArgumentList	buf		4715137	1					
ANR	4715321	Argument	buf		4715137	0					
ANR	4715322	Identifier	buf		4715137	0					
ANR	4715323	Argument	"""euid: %d, ruid: %d\\n"""		4715137	1					
ANR	4715324	PrimaryExpression	"""euid: %d, ruid: %d\\n"""		4715137	0					
ANR	4715325	Argument	( int ) geteuid ( )		4715137	2					
ANR	4715326	CastExpression	( int ) geteuid ( )		4715137	0					
ANR	4715327	CastTarget	int		4715137	0					
ANR	4715328	CallExpression	geteuid ( )		4715137	1					
ANR	4715329	Callee	geteuid		4715137	0					
ANR	4715330	Identifier	geteuid		4715137	0					
ANR	4715331	ArgumentList			4715137	1					
ANR	4715332	Argument	( int ) getuid ( )		4715137	3					
ANR	4715333	CastExpression	( int ) getuid ( )		4715137	0					
ANR	4715334	CastTarget	int		4715137	0					
ANR	4715335	CallExpression	getuid ( )		4715137	1					
ANR	4715336	Callee	getuid		4715137	0					
ANR	4715337	Identifier	getuid		4715137	0					
ANR	4715338	ArgumentList			4715137	1					
ANR	4715339	ExpressionStatement	"strcat ( tail , buf )"	1326:2:36542:36561	4715137	6	True				
ANR	4715340	CallExpression	"strcat ( tail , buf )"		4715137	0					
ANR	4715341	Callee	strcat		4715137	0					
ANR	4715342	Identifier	strcat		4715137	0					
ANR	4715343	ArgumentList	tail		4715137	1					
ANR	4715344	Argument	tail		4715137	0					
ANR	4715345	Identifier	tail		4715137	0					
ANR	4715346	Argument	buf		4715137	1					
ANR	4715347	Identifier	buf		4715137	0					
ANR	4715348	ExpressionStatement	"tmp = dprintf_param_funcs -> param ( ""LOG"" )"	1329:2:36573:36614	4715137	7	True				
ANR	4715349	AssignmentExpression	"tmp = dprintf_param_funcs -> param ( ""LOG"" )"		4715137	0		=			
ANR	4715350	Identifier	tmp		4715137	0					
ANR	4715351	CallExpression	"dprintf_param_funcs -> param ( ""LOG"" )"		4715137	1					
ANR	4715352	Callee	dprintf_param_funcs -> param		4715137	0					
ANR	4715353	PtrMemberAccess	dprintf_param_funcs -> param		4715137	0					
ANR	4715354	Identifier	dprintf_param_funcs		4715137	0					
ANR	4715355	Identifier	param		4715137	1					
ANR	4715356	ArgumentList	"""LOG"""		4715137	1					
ANR	4715357	Argument	"""LOG"""		4715137	0					
ANR	4715358	PrimaryExpression	"""LOG"""		4715137	0					
ANR	4715359	IfStatement	if ( tmp )		4715137	8					
ANR	4715360	Condition	tmp	1330:6:36622:36624	4715137	0	True				
ANR	4715361	Identifier	tmp		4715137	0					
ANR	4715362	CompoundStatement		47:12:1526:1526	4715137	1					
ANR	4715363	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%s/dprintf_failure.%s"" , tmp , get_mySubSystemName ( ) )"	1331:3:36633:36721	4715137	0	True				
ANR	4715364	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%s/dprintf_failure.%s"" , tmp , get_mySubSystemName ( ) )"		4715137	0					
ANR	4715365	Callee	snprintf		4715137	0					
ANR	4715366	Identifier	snprintf		4715137	0					
ANR	4715367	ArgumentList	buf		4715137	1					
ANR	4715368	Argument	buf		4715137	0					
ANR	4715369	Identifier	buf		4715137	0					
ANR	4715370	Argument	sizeof ( buf )		4715137	1					
ANR	4715371	SizeofExpression	sizeof ( buf )		4715137	0					
ANR	4715372	Sizeof	sizeof		4715137	0					
ANR	4715373	SizeofOperand	buf		4715137	1					
ANR	4715374	Argument	"""%s/dprintf_failure.%s"""		4715137	2					
ANR	4715375	PrimaryExpression	"""%s/dprintf_failure.%s"""		4715137	0					
ANR	4715376	Argument	tmp		4715137	3					
ANR	4715377	Identifier	tmp		4715137	0					
ANR	4715378	Argument	get_mySubSystemName ( )		4715137	4					
ANR	4715379	CallExpression	get_mySubSystemName ( )		4715137	0					
ANR	4715380	Callee	get_mySubSystemName		4715137	0					
ANR	4715381	Identifier	get_mySubSystemName		4715137	0					
ANR	4715382	ArgumentList			4715137	1					
ANR	4715383	ExpressionStatement	"fail_fp = safe_fopen_wrapper_follow ( buf , ""wN"" , 0644 )"	1333:3:36726:36779	4715137	1	True				
ANR	4715384	AssignmentExpression	"fail_fp = safe_fopen_wrapper_follow ( buf , ""wN"" , 0644 )"		4715137	0		=			
ANR	4715385	Identifier	fail_fp		4715137	0					
ANR	4715386	CallExpression	"safe_fopen_wrapper_follow ( buf , ""wN"" , 0644 )"		4715137	1					
ANR	4715387	Callee	safe_fopen_wrapper_follow		4715137	0					
ANR	4715388	Identifier	safe_fopen_wrapper_follow		4715137	0					
ANR	4715389	ArgumentList	buf		4715137	1					
ANR	4715390	Argument	buf		4715137	0					
ANR	4715391	Identifier	buf		4715137	0					
ANR	4715392	Argument	"""wN"""		4715137	1					
ANR	4715393	PrimaryExpression	"""wN"""		4715137	0					
ANR	4715394	Argument	0644		4715137	2					
ANR	4715395	PrimaryExpression	0644		4715137	0					
ANR	4715396	IfStatement	if ( fail_fp )		4715137	2					
ANR	4715397	Condition	fail_fp	1334:7:36788:36794	4715137	0	True				
ANR	4715398	Identifier	fail_fp		4715137	0					
ANR	4715399	CompoundStatement		51:17:1696:1696	4715137	1					
ANR	4715400	ExpressionStatement	"fprintf ( fail_fp , ""%s"" , header )"	1335:4:36804:36836	4715137	0	True				
ANR	4715401	CallExpression	"fprintf ( fail_fp , ""%s"" , header )"		4715137	0					
ANR	4715402	Callee	fprintf		4715137	0					
ANR	4715403	Identifier	fprintf		4715137	0					
ANR	4715404	ArgumentList	fail_fp		4715137	1					
ANR	4715405	Argument	fail_fp		4715137	0					
ANR	4715406	Identifier	fail_fp		4715137	0					
ANR	4715407	Argument	"""%s"""		4715137	1					
ANR	4715408	PrimaryExpression	"""%s"""		4715137	0					
ANR	4715409	Argument	header		4715137	2					
ANR	4715410	Identifier	header		4715137	0					
ANR	4715411	ExpressionStatement	"fprintf ( fail_fp , ""%s"" , msg )"	1336:4:36842:36871	4715137	1	True				
ANR	4715412	CallExpression	"fprintf ( fail_fp , ""%s"" , msg )"		4715137	0					
ANR	4715413	Callee	fprintf		4715137	0					
ANR	4715414	Identifier	fprintf		4715137	0					
ANR	4715415	ArgumentList	fail_fp		4715137	1					
ANR	4715416	Argument	fail_fp		4715137	0					
ANR	4715417	Identifier	fail_fp		4715137	0					
ANR	4715418	Argument	"""%s"""		4715137	1					
ANR	4715419	PrimaryExpression	"""%s"""		4715137	0					
ANR	4715420	Argument	msg		4715137	2					
ANR	4715421	Identifier	msg		4715137	0					
ANR	4715422	IfStatement	if ( tail [ 0 ] )		4715137	2					
ANR	4715423	Condition	tail [ 0 ]	1337:8:36881:36887	4715137	0	True				
ANR	4715424	ArrayIndexing	tail [ 0 ]		4715137	0					
ANR	4715425	Identifier	tail		4715137	0					
ANR	4715426	PrimaryExpression	0		4715137	1					
ANR	4715427	CompoundStatement		54:18:1789:1789	4715137	1					
ANR	4715428	ExpressionStatement	"fprintf ( fail_fp , ""%s"" , tail )"	1338:5:36898:36928	4715137	0	True				
ANR	4715429	CallExpression	"fprintf ( fail_fp , ""%s"" , tail )"		4715137	0					
ANR	4715430	Callee	fprintf		4715137	0					
ANR	4715431	Identifier	fprintf		4715137	0					
ANR	4715432	ArgumentList	fail_fp		4715137	1					
ANR	4715433	Argument	fail_fp		4715137	0					
ANR	4715434	Identifier	fail_fp		4715137	0					
ANR	4715435	Argument	"""%s"""		4715137	1					
ANR	4715436	PrimaryExpression	"""%s"""		4715137	0					
ANR	4715437	Argument	tail		4715137	2					
ANR	4715438	Identifier	tail		4715137	0					
ANR	4715439	ExpressionStatement	"fclose_wrapper ( fail_fp , FCLOSE_RETRY_MAX )"	1340:4:36940:36983	4715137	3	True				
ANR	4715440	CallExpression	"fclose_wrapper ( fail_fp , FCLOSE_RETRY_MAX )"		4715137	0					
ANR	4715441	Callee	fclose_wrapper		4715137	0					
ANR	4715442	Identifier	fclose_wrapper		4715137	0					
ANR	4715443	ArgumentList	fail_fp		4715137	1					
ANR	4715444	Argument	fail_fp		4715137	0					
ANR	4715445	Identifier	fail_fp		4715137	0					
ANR	4715446	Argument	FCLOSE_RETRY_MAX		4715137	1					
ANR	4715447	Identifier	FCLOSE_RETRY_MAX		4715137	0					
ANR	4715448	ExpressionStatement	wrote_warning = TRUE	1341:4:36989:37009	4715137	4	True				
ANR	4715449	AssignmentExpression	wrote_warning = TRUE		4715137	0		=			
ANR	4715450	Identifier	wrote_warning		4715137	0					
ANR	4715451	Identifier	TRUE		4715137	1					
ANR	4715452	ExpressionStatement	free ( tmp )	1343:3:37020:37031	4715137	3	True				
ANR	4715453	CallExpression	free ( tmp )		4715137	0					
ANR	4715454	Callee	free		4715137	0					
ANR	4715455	Identifier	free		4715137	0					
ANR	4715456	ArgumentList	tmp		4715137	1					
ANR	4715457	Argument	tmp		4715137	0					
ANR	4715458	Identifier	tmp		4715137	0					
ANR	4715459	IfStatement	if ( ! wrote_warning )		4715137	9					
ANR	4715460	Condition	! wrote_warning	1345:6:37043:37057	4715137	0	True				
ANR	4715461	UnaryOperationExpression	! wrote_warning		4715137	0					
ANR	4715462	UnaryOperator	!		4715137	0					
ANR	4715463	Identifier	wrote_warning		4715137	1					
ANR	4715464	CompoundStatement		62:24:1959:1959	4715137	1					
ANR	4715465	ExpressionStatement	"fprintf ( stderr , ""%s"" , header )"	1346:3:37066:37097	4715137	0	True				
ANR	4715466	CallExpression	"fprintf ( stderr , ""%s"" , header )"		4715137	0					
ANR	4715467	Callee	fprintf		4715137	0					
ANR	4715468	Identifier	fprintf		4715137	0					
ANR	4715469	ArgumentList	stderr		4715137	1					
ANR	4715470	Argument	stderr		4715137	0					
ANR	4715471	Identifier	stderr		4715137	0					
ANR	4715472	Argument	"""%s"""		4715137	1					
ANR	4715473	PrimaryExpression	"""%s"""		4715137	0					
ANR	4715474	Argument	header		4715137	2					
ANR	4715475	Identifier	header		4715137	0					
ANR	4715476	ExpressionStatement	"fprintf ( stderr , ""%s"" , msg )"	1347:3:37102:37130	4715137	1	True				
ANR	4715477	CallExpression	"fprintf ( stderr , ""%s"" , msg )"		4715137	0					
ANR	4715478	Callee	fprintf		4715137	0					
ANR	4715479	Identifier	fprintf		4715137	0					
ANR	4715480	ArgumentList	stderr		4715137	1					
ANR	4715481	Argument	stderr		4715137	0					
ANR	4715482	Identifier	stderr		4715137	0					
ANR	4715483	Argument	"""%s"""		4715137	1					
ANR	4715484	PrimaryExpression	"""%s"""		4715137	0					
ANR	4715485	Argument	msg		4715137	2					
ANR	4715486	Identifier	msg		4715137	0					
ANR	4715487	IfStatement	if ( tail [ 0 ] )		4715137	2					
ANR	4715488	Condition	tail [ 0 ]	1348:7:37139:37145	4715137	0	True				
ANR	4715489	ArrayIndexing	tail [ 0 ]		4715137	0					
ANR	4715490	Identifier	tail		4715137	0					
ANR	4715491	PrimaryExpression	0		4715137	1					
ANR	4715492	CompoundStatement		65:17:2047:2047	4715137	1					
ANR	4715493	ExpressionStatement	"fprintf ( stderr , ""%s"" , tail )"	1349:4:37155:37184	4715137	0	True				
ANR	4715494	CallExpression	"fprintf ( stderr , ""%s"" , tail )"		4715137	0					
ANR	4715495	Callee	fprintf		4715137	0					
ANR	4715496	Identifier	fprintf		4715137	0					
ANR	4715497	ArgumentList	stderr		4715137	1					
ANR	4715498	Argument	stderr		4715137	0					
ANR	4715499	Identifier	stderr		4715137	0					
ANR	4715500	Argument	"""%s"""		4715137	1					
ANR	4715501	PrimaryExpression	"""%s"""		4715137	0					
ANR	4715502	Argument	tail		4715137	2					
ANR	4715503	Identifier	tail		4715137	0					
ANR	4715504	ExpressionStatement	DprintfBroken = 1	1355:2:37299:37316	4715137	10	True				
ANR	4715505	AssignmentExpression	DprintfBroken = 1		4715137	0		=			
ANR	4715506	Identifier	DprintfBroken		4715137	0					
ANR	4715507	PrimaryExpression	1		4715137	1					
ANR	4715508	ExpressionStatement	debug_close_lock ( )	1358:2:37380:37398	4715137	11	True				
ANR	4715509	CallExpression	debug_close_lock ( )		4715137	0					
ANR	4715510	Callee	debug_close_lock		4715137	0					
ANR	4715511	Identifier	debug_close_lock		4715137	0					
ANR	4715512	ArgumentList			4715137	1					
ANR	4715513	ExpressionStatement	debug_close_all_files ( )	1359:2:37402:37425	4715137	12	True				
ANR	4715514	CallExpression	debug_close_all_files ( )		4715137	0					
ANR	4715515	Callee	debug_close_all_files		4715137	0					
ANR	4715516	Identifier	debug_close_all_files		4715137	0					
ANR	4715517	ArgumentList			4715137	1					
ANR	4715518	IfStatement	if ( _EXCEPT_Cleanup )		4715137	10					
ANR	4715519	Condition	_EXCEPT_Cleanup	1364:5:37536:37550	4715137	0	True				
ANR	4715520	Identifier	_EXCEPT_Cleanup		4715137	0					
ANR	4715521	CompoundStatement		81:23:2452:2452	4715137	1					
ANR	4715522	ExpressionStatement	"( * _EXCEPT_Cleanup ) ( __LINE__ , errno , ""dprintf hit fatal errors\\n"" )"	1365:2:37558:37625	4715137	0	True				
ANR	4715523	CallExpression	"( * _EXCEPT_Cleanup ) ( __LINE__ , errno , ""dprintf hit fatal errors\\n"" )"		4715137	0					
ANR	4715524	Callee	* _EXCEPT_Cleanup		4715137	0					
ANR	4715525	UnaryOperationExpression	* _EXCEPT_Cleanup		4715137	0					
ANR	4715526	UnaryOperator	*		4715137	0					
ANR	4715527	Identifier	_EXCEPT_Cleanup		4715137	1					
ANR	4715528	ArgumentList	__LINE__		4715137	1					
ANR	4715529	Argument	__LINE__		4715137	0					
ANR	4715530	Identifier	__LINE__		4715137	0					
ANR	4715531	Argument	errno		4715137	1					
ANR	4715532	Identifier	errno		4715137	0					
ANR	4715533	Argument	"""dprintf hit fatal errors\\n"""		4715137	2					
ANR	4715534	PrimaryExpression	"""dprintf hit fatal errors\\n"""		4715137	0					
ANR	4715535	ExpressionStatement	fflush ( stderr )	1369:1:37658:37673	4715137	11	True				
ANR	4715536	CallExpression	fflush ( stderr )		4715137	0					
ANR	4715537	Callee	fflush		4715137	0					
ANR	4715538	Identifier	fflush		4715137	0					
ANR	4715539	ArgumentList	stderr		4715137	1					
ANR	4715540	Argument	stderr		4715137	0					
ANR	4715541	Identifier	stderr		4715137	0					
ANR	4715542	ExpressionStatement	exit ( DPRINTF_ERROR )	1371:1:37677:37696	4715137	12	True				
ANR	4715543	CallExpression	exit ( DPRINTF_ERROR )		4715137	0					
ANR	4715544	Callee	exit		4715137	0					
ANR	4715545	Identifier	exit		4715137	0					
ANR	4715546	ArgumentList	DPRINTF_ERROR		4715137	1					
ANR	4715547	Argument	DPRINTF_ERROR		4715137	0					
ANR	4715548	Identifier	DPRINTF_ERROR		4715137	0					
ANR	4715549	ReturnType	void		4715137	1					
ANR	4715550	Identifier	_condor_dprintf_exit		4715137	2					
ANR	4715551	ParameterList	"int error_code , const char * msg"		4715137	3					
ANR	4715552	Parameter	int error_code	1283:22:35067:35080	4715137	0	True				
ANR	4715553	ParameterType	int		4715137	0					
ANR	4715554	Identifier	error_code		4715137	1					
ANR	4715555	Parameter	const char * msg	1283:38:35083:35097	4715137	1	True				
ANR	4715556	ParameterType	const char *		4715137	0					
ANR	4715557	Identifier	msg		4715137	1					
ANR	4715558	CFGEntryNode	ENTRY		4715137		True				
ANR	4715559	CFGExitNode	EXIT		4715137		True				
ANR	4715560	Symbol	msg		4715137						
ANR	4715561	Symbol	localtime		4715137						
ANR	4715562	Symbol	& clock_now		4715137						
ANR	4715563	Symbol	DPRINTF_ERROR		4715137						
ANR	4715564	Symbol	DebugUseTimestamps		4715137						
ANR	4715565	Symbol	wrote_warning		4715137						
ANR	4715566	Symbol	get_mySubSystemName		4715137						
ANR	4715567	Symbol	DprintfBroken		4715137						
ANR	4715568	Symbol	tmp		4715137						
ANR	4715569	Symbol	tm -> tm_mday		4715137						
ANR	4715570	Symbol	dprintf_param_funcs -> param		4715137						
ANR	4715571	Symbol	dprintf_param_funcs		4715137						
ANR	4715572	Symbol	FCLOSE_RETRY_MAX		4715137						
ANR	4715573	Symbol	_EXCEPT_Cleanup		4715137						
ANR	4715574	Symbol	safe_fopen_wrapper_follow		4715137						
ANR	4715575	Symbol	* tail		4715137						
ANR	4715576	Symbol	errno		4715137						
ANR	4715577	Symbol	tail		4715137						
ANR	4715578	Symbol	TRUE		4715137						
ANR	4715579	Symbol	it		4715137						
ANR	4715580	Symbol	clock_now		4715137						
ANR	4715581	Symbol	geteuid		4715137						
ANR	4715582	Symbol	stderr		4715137						
ANR	4715583	Symbol	tm -> tm_mon		4715137						
ANR	4715584	Symbol	__LINE__		4715137						
ANR	4715585	Symbol	fail_fp		4715137						
ANR	4715586	Symbol	strerror		4715137						
ANR	4715587	Symbol	buf		4715137						
ANR	4715588	Symbol	getuid		4715137						
ANR	4715589	Symbol	tm -> tm_min		4715137						
ANR	4715590	Symbol	tm -> tm_sec		4715137						
ANR	4715591	Symbol	header		4715137						
ANR	4715592	Symbol	tm		4715137						
ANR	4715593	Symbol	error_code		4715137						
ANR	4715594	Symbol	FALSE		4715137						
ANR	4715595	Symbol	tm -> tm_hour		4715137						
ANR	4715596	Symbol	* tm		4715137						
ANR	4715597	Symbol	getpid		4715137						
ANR	4715598	Symbol	* dprintf_param_funcs		4715137						
ANR	4715599	Function	set_debug_flags	1381:0:37961:38046							
ANR	4715600	FunctionDef	set_debug_flags (const char * strflags)		4715599	0					
ANR	4715601	CompoundStatement		1383:0:38006:38046	4715599	0					
ANR	4715602	ExpressionStatement	_condor_set_debug_flags ( strflags )	1384:1:38009:38044	4715599	0	True				
ANR	4715603	CallExpression	_condor_set_debug_flags ( strflags )		4715599	0					
ANR	4715604	Callee	_condor_set_debug_flags		4715599	0					
ANR	4715605	Identifier	_condor_set_debug_flags		4715599	0					
ANR	4715606	ArgumentList	strflags		4715599	1					
ANR	4715607	Argument	strflags		4715599	0					
ANR	4715608	Identifier	strflags		4715599	0					
ANR	4715609	ReturnType	void		4715599	1					
ANR	4715610	Identifier	set_debug_flags		4715599	2					
ANR	4715611	ParameterList	const char * strflags		4715599	3					
ANR	4715612	Parameter	const char * strflags	1382:17:37983:38002	4715599	0	True				
ANR	4715613	ParameterType	const char *		4715599	0					
ANR	4715614	Identifier	strflags		4715599	1					
ANR	4715615	CFGEntryNode	ENTRY		4715599		True				
ANR	4715616	CFGExitNode	EXIT		4715599		True				
ANR	4715617	Symbol	strflags		4715599						
ANR	4715618	Function	dprintf_last_modification	1388:0:38050:38109							
ANR	4715619	FunctionDef	dprintf_last_modification ()		4715618	0					
ANR	4715620	CompoundStatement		1390:0:38085:38109	4715618	0					
ANR	4715621	ReturnStatement	return DebugLastMod ;	1391:1:38088:38107	4715618	0	True				
ANR	4715622	Identifier	DebugLastMod		4715618	0					
ANR	4715623	ReturnType	time_t		4715618	1					
ANR	4715624	Identifier	dprintf_last_modification		4715618	2					
ANR	4715625	ParameterList			4715618	3					
ANR	4715626	CFGEntryNode	ENTRY		4715618		True				
ANR	4715627	CFGExitNode	EXIT		4715618		True				
ANR	4715628	Symbol	DebugLastMod		4715618						
ANR	4715629	Function	dprintf_touch_log	1394:0:38112:38541							
ANR	4715630	FunctionDef	dprintf_touch_log ()		4715629	0					
ANR	4715631	CompoundStatement		1396:0:38137:38541	4715629	0					
ANR	4715632	IdentifierDeclStatement	std :: vector < DebugFileInfo > :: iterator it ;	1397:1:38140:38179	4715629	0	True				
ANR	4715633	IdentifierDecl	it		4715629	0					
ANR	4715634	IdentifierDeclType	std :: vector < DebugFileInfo > :: iterator		4715629	0					
ANR	4715635	Identifier	it		4715629	1					
ANR	4715636	IfStatement	if ( _condor_dprintf_works )		4715629	1					
ANR	4715637	Condition	_condor_dprintf_works	1398:6:38187:38207	4715629	0	True				
ANR	4715638	Identifier	_condor_dprintf_works		4715629	0					
ANR	4715639	CompoundStatement		3:30:73:73	4715629	1					
ANR	4715640	IfStatement	if ( ! DebugLogs -> empty ( ) )		4715629	0					
ANR	4715641	Condition	! DebugLogs -> empty ( )	1399:6:38219:38237	4715629	0	True				
ANR	4715642	UnaryOperationExpression	! DebugLogs -> empty ( )		4715629	0					
ANR	4715643	UnaryOperator	!		4715629	0					
ANR	4715644	CallExpression	DebugLogs -> empty ( )		4715629	1					
ANR	4715645	Callee	DebugLogs -> empty		4715629	0					
ANR	4715646	PtrMemberAccess	DebugLogs -> empty		4715629	0					
ANR	4715647	Identifier	DebugLogs		4715629	0					
ANR	4715648	Identifier	empty		4715629	1					
ANR	4715649	ArgumentList			4715629	1					
ANR	4715650	CompoundStatement		4:27:102:102	4715629	1					
ANR	4715651	ExpressionStatement	it = DebugLogs -> begin ( )	1400:3:38245:38268	4715629	0	True				
ANR	4715652	AssignmentExpression	it = DebugLogs -> begin ( )		4715629	0		=			
ANR	4715653	Identifier	it		4715629	0					
ANR	4715654	CallExpression	DebugLogs -> begin ( )		4715629	1					
ANR	4715655	Callee	DebugLogs -> begin		4715629	0					
ANR	4715656	PtrMemberAccess	DebugLogs -> begin		4715629	0					
ANR	4715657	Identifier	DebugLogs		4715629	0					
ANR	4715658	Identifier	begin		4715629	1					
ANR	4715659	ArgumentList			4715629	1					
ANR	4715660	ExpressionStatement	"utime ( it -> logPath . c_str ( ) , NULL )"	1402:3:38286:38320	4715629	1	True				
ANR	4715661	CallExpression	"utime ( it -> logPath . c_str ( ) , NULL )"		4715629	0					
ANR	4715662	Callee	utime		4715629	0					
ANR	4715663	Identifier	utime		4715629	0					
ANR	4715664	ArgumentList	it -> logPath . c_str ( )		4715629	1					
ANR	4715665	Argument	it -> logPath . c_str ( )		4715629	0					
ANR	4715666	CallExpression	it -> logPath . c_str ( )		4715629	0					
ANR	4715667	Callee	it -> logPath . c_str		4715629	0					
ANR	4715668	MemberAccess	it -> logPath . c_str		4715629	0					
ANR	4715669	PtrMemberAccess	it -> logPath		4715629	0					
ANR	4715670	Identifier	it		4715629	0					
ANR	4715671	Identifier	logPath		4715629	1					
ANR	4715672	Identifier	c_str		4715629	1					
ANR	4715673	ArgumentList			4715629	1					
ANR	4715674	Argument	NULL		4715629	1					
ANR	4715675	Identifier	NULL		4715629	0					
ANR	4715676	ReturnType	void		4715629	1					
ANR	4715677	Identifier	dprintf_touch_log		4715629	2					
ANR	4715678	ParameterList			4715629	3					
ANR	4715679	CFGEntryNode	ENTRY		4715629		True				
ANR	4715680	CFGExitNode	EXIT		4715629		True				
ANR	4715681	Symbol	* it		4715629						
ANR	4715682	Symbol	NULL		4715629						
ANR	4715683	Symbol	it -> logPath . c_str		4715629						
ANR	4715684	Symbol	_condor_dprintf_works		4715629						
ANR	4715685	Symbol	DebugLogs -> begin		4715629						
ANR	4715686	Symbol	it		4715629						
ANR	4715687	Symbol	DebugLogs -> empty		4715629						
ANR	4715688	Symbol	* DebugLogs		4715629						
ANR	4715689	Symbol	DebugLogs		4715629						
ANR	4715690	Symbol	it -> logPath		4715629						
ANR	4715691	DeclStmt									
ANR	4715692	Decl							BOOLEAN	BOOLEAN ( int value )	dprintf_retry_errno
ANR	4715693	Function	dprintf_retry_errno	1416:0:38587:38695							
ANR	4715694	FunctionDef	dprintf_retry_errno (int value)		4715693	0					
ANR	4715695	CompoundStatement		1417:0:38628:38695	4715693	0					
ANR	4715696	ReturnStatement	return FALSE ;	1419:1:38644:38656	4715693	0	True				
ANR	4715697	Identifier	FALSE		4715693	0					
ANR	4715698	ReturnType	BOOLEAN		4715693	1					
ANR	4715699	Identifier	dprintf_retry_errno		4715693	2					
ANR	4715700	ParameterList	int value		4715693	3					
ANR	4715701	Parameter	int value	1416:29:38616:38624	4715693	0	True				
ANR	4715702	ParameterType	int		4715693	0					
ANR	4715703	Identifier	value		4715693	1					
ANR	4715704	CFGEntryNode	ENTRY		4715693		True				
ANR	4715705	CFGExitNode	EXIT		4715693		True				
ANR	4715706	Symbol	FALSE		4715693						
ANR	4715707	Symbol	value		4715693						
ANR	4715708	Function	fclose_wrapper	1432:0:39093:39616							
ANR	4715709	FunctionDef	"fclose_wrapper (FILE * stream , int maxRetries)"		4715708	0					
ANR	4715710	CompoundStatement		1434:0:39144:39616	4715708	0					
ANR	4715711	IdentifierDeclStatement	int result = 0 ;	1436:1:39148:39163	4715708	0	True				
ANR	4715712	IdentifierDecl	result = 0		4715708	0					
ANR	4715713	IdentifierDeclType	int		4715708	0					
ANR	4715714	Identifier	result		4715708	1					
ANR	4715715	AssignmentExpression	result = 0		4715708	2		=			
ANR	4715716	Identifier	result		4715708	0					
ANR	4715717	PrimaryExpression	0		4715708	1					
ANR	4715718	IdentifierDeclStatement	int retryCount = 0 ;	1438:1:39167:39186	4715708	1	True				
ANR	4715719	IdentifierDecl	retryCount = 0		4715708	0					
ANR	4715720	IdentifierDeclType	int		4715708	0					
ANR	4715721	Identifier	retryCount		4715708	1					
ANR	4715722	AssignmentExpression	retryCount = 0		4715708	2		=			
ANR	4715723	Identifier	retryCount		4715708	0					
ANR	4715724	PrimaryExpression	0		4715708	1					
ANR	4715725	IdentifierDeclStatement	BOOLEAN done = FALSE ;	1439:1:39189:39209	4715708	2	True				
ANR	4715726	IdentifierDecl	done = FALSE		4715708	0					
ANR	4715727	IdentifierDeclType	BOOLEAN		4715708	0					
ANR	4715728	Identifier	done		4715708	1					
ANR	4715729	AssignmentExpression	done = FALSE		4715708	2		=			
ANR	4715730	Identifier	FALSE		4715708	0					
ANR	4715731	Identifier	FALSE		4715708	1					
ANR	4715732	ExpressionStatement	ASSERT ( maxRetries >= 0 )	1441:1:39213:39238	4715708	3	True				
ANR	4715733	CallExpression	ASSERT ( maxRetries >= 0 )		4715708	0					
ANR	4715734	Callee	ASSERT		4715708	0					
ANR	4715735	Identifier	ASSERT		4715708	0					
ANR	4715736	ArgumentList	maxRetries >= 0		4715708	1					
ANR	4715737	Argument	maxRetries >= 0		4715708	0					
ANR	4715738	RelationalExpression	maxRetries >= 0		4715708	0		>=			
ANR	4715739	Identifier	maxRetries		4715708	0					
ANR	4715740	PrimaryExpression	0		4715708	1					
ANR	4715741	WhileStatement	while ( ! done )		4715708	4					
ANR	4715742	Condition	! done	1442:9:39249:39253	4715708	0	True				
ANR	4715743	UnaryOperationExpression	! done		4715708	0					
ANR	4715744	UnaryOperator	!		4715708	0					
ANR	4715745	Identifier	done		4715708	1					
ANR	4715746	CompoundStatement		9:17:112:112	4715708	1					
ANR	4715747	IfStatement	if ( ( result = fclose ( stream ) ) != 0 )		4715708	0					
ANR	4715748	Condition	( result = fclose ( stream ) ) != 0	1443:7:39266:39299	4715708	0	True				
ANR	4715749	EqualityExpression	( result = fclose ( stream ) ) != 0		4715708	0		!=			
ANR	4715750	AssignmentExpression	result = fclose ( stream )		4715708	0		=			
ANR	4715751	Identifier	result		4715708	0					
ANR	4715752	CallExpression	fclose ( stream )		4715708	1					
ANR	4715753	Callee	fclose		4715708	0					
ANR	4715754	Identifier	fclose		4715708	0					
ANR	4715755	ArgumentList	stream		4715708	1					
ANR	4715756	Argument	stream		4715708	0					
ANR	4715757	Identifier	stream		4715708	0					
ANR	4715758	PrimaryExpression	0		4715708	1					
ANR	4715759	CompoundStatement		10:44:158:158	4715708	1					
ANR	4715760	IfStatement	if ( dprintf_retry_errno ( errno ) && retryCount < maxRetries )		4715708	0					
ANR	4715761	Condition	dprintf_retry_errno ( errno ) && retryCount < maxRetries	1444:8:39313:39367	4715708	0	True				
ANR	4715762	AndExpression	dprintf_retry_errno ( errno ) && retryCount < maxRetries		4715708	0		&&			
ANR	4715763	CallExpression	dprintf_retry_errno ( errno )		4715708	0					
ANR	4715764	Callee	dprintf_retry_errno		4715708	0					
ANR	4715765	Identifier	dprintf_retry_errno		4715708	0					
ANR	4715766	ArgumentList	errno		4715708	1					
ANR	4715767	Argument	errno		4715708	0					
ANR	4715768	Identifier	errno		4715708	0					
ANR	4715769	RelationalExpression	retryCount < maxRetries		4715708	1		<			
ANR	4715770	Identifier	retryCount		4715708	0					
ANR	4715771	Identifier	maxRetries		4715708	1					
ANR	4715772	CompoundStatement		11:66:226:226	4715708	1					
ANR	4715773	ExpressionStatement	retryCount ++	1445:4:39377:39389	4715708	0	True				
ANR	4715774	PostIncDecOperationExpression	retryCount ++		4715708	0					
ANR	4715775	Identifier	retryCount		4715708	0					
ANR	4715776	IncDec	++		4715708	1					
ANR	4715777	ElseStatement	else		4715708	0					
ANR	4715778	CompoundStatement		13:10:256:256	4715708	0					
ANR	4715779	Statement	fprintf	1447:4:39407:39413	4715708	0	True				
ANR	4715780	Statement	(	1447:11:39414:39414	4715708	1	True				
ANR	4715781	Statement	stderr	1447:13:39416:39421	4715708	2	True				
ANR	4715782	Statement	","	1447:19:39422:39422	4715708	3	True				
ANR	4715783	Statement	"""fclose_wrapper() failed after %d retries; """	1447:21:39424:39467	4715708	4	True				
ANR	4715784	Statement	"""errno: %d (%s)\\n"""	1448:7:39476:39493	4715708	5	True				
ANR	4715785	Statement	","	1448:25:39494:39494	4715708	6	True				
ANR	4715786	Statement	retryCount	1449:7:39503:39512	4715708	7	True				
ANR	4715787	Statement	","	1449:17:39513:39513	4715708	8	True				
ANR	4715788	Statement	errno	1449:19:39515:39519	4715708	9	True				
ANR	4715789	Statement	","	1449:24:39520:39520	4715708	10	True				
ANR	4715790	Statement	strerror	1449:26:39522:39529	4715708	11	True				
ANR	4715791	Statement	(	1449:34:39530:39530	4715708	12	True				
ANR	4715792	Statement	errno	1449:36:39532:39536	4715708	13	True				
ANR	4715793	Statement	)	1449:42:39538:39538	4715708	14	True				
ANR	4715794	Statement	)	1449:44:39540:39540	4715708	15	True				
ANR	4715795	ExpressionStatement		1449:45:39541:39541	4715708	16	True				
ANR	4715796	ExpressionStatement	done = TRUE	1450:4:39547:39558	4715708	17	True				
ANR	4715797	AssignmentExpression	done = TRUE		4715708	0		=			
ANR	4715798	Identifier	done		4715708	0					
ANR	4715799	Identifier	TRUE		4715708	1					
ANR	4715800	ElseStatement	else		4715708	0					
ANR	4715801	CompoundStatement		19:9:429:429	4715708	0					
ANR	4715802	ExpressionStatement	done = TRUE	1453:3:39579:39590	4715708	0	True				
ANR	4715803	AssignmentExpression	done = TRUE		4715708	0		=			
ANR	4715804	Identifier	done		4715708	0					
ANR	4715805	Identifier	TRUE		4715708	1					
ANR	4715806	ReturnStatement	return result ;	1457:1:39601:39614	4715708	5	True				
ANR	4715807	Identifier	result		4715708	0					
ANR	4715808	ReturnType	int		4715708	1					
ANR	4715809	Identifier	fclose_wrapper		4715708	2					
ANR	4715810	ParameterList	"FILE * stream , int maxRetries"		4715708	3					
ANR	4715811	Parameter	FILE * stream	1433:16:39113:39124	4715708	0	True				
ANR	4715812	ParameterType	FILE *		4715708	0					
ANR	4715813	Identifier	stream		4715708	1					
ANR	4715814	Parameter	int maxRetries	1433:30:39127:39140	4715708	1	True				
ANR	4715815	ParameterType	int		4715708	0					
ANR	4715816	Identifier	maxRetries		4715708	1					
ANR	4715817	CFGEntryNode	ENTRY		4715708		True				
ANR	4715818	CFGExitNode	EXIT		4715708		True				
ANR	4715819	Symbol	result		4715708						
ANR	4715820	Symbol	maxRetries		4715708						
ANR	4715821	Symbol	errno		4715708						
ANR	4715822	Symbol	dprintf_retry_errno		4715708						
ANR	4715823	Symbol	stream		4715708						
ANR	4715824	Symbol	retryCount		4715708						
ANR	4715825	Symbol	fclose		4715708						
ANR	4715826	Symbol	TRUE		4715708						
ANR	4715827	Symbol	FALSE		4715708						
ANR	4715828	Symbol	done		4715708						
ANR	4715829	DeclStmt									
ANR	4715830	Decl							int	"int ( int * argc , char * argv [ ] , char * line )"	_condor_mkargv
ANR	4715831	Function	mkargv	1464:0:39770:39867							
ANR	4715832	FunctionDef	"mkargv (int * argc , char * argv [ ] , char * line)"		4715831	0					
ANR	4715833	CompoundStatement		1466:0:39820:39867	4715831	0					
ANR	4715834	ReturnStatement	"return ( _condor_mkargv ( argc , argv , line ) ) ;"	1467:1:39823:39865	4715831	0	True				
ANR	4715835	CallExpression	"_condor_mkargv ( argc , argv , line )"		4715831	0					
ANR	4715836	Callee	_condor_mkargv		4715831	0					
ANR	4715837	Identifier	_condor_mkargv		4715831	0					
ANR	4715838	ArgumentList	argc		4715831	1					
ANR	4715839	Argument	argc		4715831	0					
ANR	4715840	Identifier	argc		4715831	0					
ANR	4715841	Argument	argv		4715831	1					
ANR	4715842	Identifier	argv		4715831	0					
ANR	4715843	Argument	line		4715831	2					
ANR	4715844	Identifier	line		4715831	0					
ANR	4715845	ReturnType	int		4715831	1					
ANR	4715846	Identifier	mkargv		4715831	2					
ANR	4715847	ParameterList	"int * argc , char * argv [ ] , char * line"		4715831	3					
ANR	4715848	Parameter	int * argc	1465:8:39782:39790	4715831	0	True				
ANR	4715849	ParameterType	int *		4715831	0					
ANR	4715850	Identifier	argc		4715831	1					
ANR	4715851	Parameter	char * argv [ ]	1465:19:39793:39804	4715831	1	True				
ANR	4715852	ParameterType	char * [ ]		4715831	0					
ANR	4715853	Identifier	argv		4715831	1					
ANR	4715854	Parameter	char * line	1465:33:39807:39816	4715831	2	True				
ANR	4715855	ParameterType	char *		4715831	0					
ANR	4715856	Identifier	line		4715831	1					
ANR	4715857	CFGEntryNode	ENTRY		4715831		True				
ANR	4715858	CFGExitNode	EXIT		4715831		True				
ANR	4715859	Symbol	argc		4715831						
ANR	4715860	Symbol	_condor_mkargv		4715831						
ANR	4715861	Symbol	line		4715831						
ANR	4715862	Symbol	argv		4715831						
ANR	4715863	Function	_condor_save_dprintf_line	1470:0:39870:40708							
ANR	4715864	FunctionDef	"_condor_save_dprintf_line (int flags , const char * fmt , va_list args)"		4715863	0					
ANR	4715865	CompoundStatement		1472:0:39952:40708	4715863	0					
ANR	4715866	IdentifierDeclStatement	char * buf ;	1473:1:39955:39964	4715863	0	True				
ANR	4715867	IdentifierDecl	* buf		4715863	0					
ANR	4715868	IdentifierDeclType	char *		4715863	0					
ANR	4715869	Identifier	buf		4715863	1					
ANR	4715870	IdentifierDeclStatement	struct saved_dprintf * new_node ;	1474:1:39967:39997	4715863	1	True				
ANR	4715871	IdentifierDecl	* new_node		4715863	0					
ANR	4715872	IdentifierDeclType	struct saved_dprintf *		4715863	0					
ANR	4715873	Identifier	new_node		4715863	1					
ANR	4715874	IdentifierDeclStatement	int len ;	1475:1:40000:40007	4715863	2	True				
ANR	4715875	IdentifierDecl	len		4715863	0					
ANR	4715876	IdentifierDeclType	int		4715863	0					
ANR	4715877	Identifier	len		4715863	1					
ANR	4715878	ExpressionStatement	"len = vprintf_length ( fmt , args ) + 1"	1478:1:40073:40108	4715863	3	True				
ANR	4715879	AssignmentExpression	"len = vprintf_length ( fmt , args ) + 1"		4715863	0		=			
ANR	4715880	Identifier	len		4715863	0					
ANR	4715881	AdditiveExpression	"vprintf_length ( fmt , args ) + 1"		4715863	1		+			
ANR	4715882	CallExpression	"vprintf_length ( fmt , args )"		4715863	0					
ANR	4715883	Callee	vprintf_length		4715863	0					
ANR	4715884	Identifier	vprintf_length		4715863	0					
ANR	4715885	ArgumentList	fmt		4715863	1					
ANR	4715886	Argument	fmt		4715863	0					
ANR	4715887	Identifier	fmt		4715863	0					
ANR	4715888	Argument	args		4715863	1					
ANR	4715889	Identifier	args		4715863	0					
ANR	4715890	PrimaryExpression	1		4715863	1					
ANR	4715891	IfStatement	if ( len <= 0 )		4715863	4					
ANR	4715892	Condition	len <= 0	1479:5:40151:40158	4715863	0	True				
ANR	4715893	RelationalExpression	len <= 0		4715863	0		<=			
ANR	4715894	Identifier	len		4715863	0					
ANR	4715895	PrimaryExpression	0		4715863	1					
ANR	4715896	CompoundStatement		8:16:209:209	4715863	1					
ANR	4715897	ReturnStatement	return ;	1480:2:40167:40173	4715863	0	True				
ANR	4715898	ExpressionStatement	buf = ( char * ) malloc ( sizeof ( char ) * ( len + 1 ) )	1483:1:40231:40279	4715863	5	True				
ANR	4715899	AssignmentExpression	buf = ( char * ) malloc ( sizeof ( char ) * ( len + 1 ) )		4715863	0		=			
ANR	4715900	Identifier	buf		4715863	0					
ANR	4715901	CastExpression	( char * ) malloc ( sizeof ( char ) * ( len + 1 ) )		4715863	1					
ANR	4715902	CastTarget	char *		4715863	0					
ANR	4715903	CallExpression	malloc ( sizeof ( char ) * ( len + 1 ) )		4715863	1					
ANR	4715904	Callee	malloc		4715863	0					
ANR	4715905	Identifier	malloc		4715863	0					
ANR	4715906	ArgumentList	sizeof ( char ) * ( len + 1 )		4715863	1					
ANR	4715907	Argument	sizeof ( char ) * ( len + 1 )		4715863	0					
ANR	4715908	MultiplicativeExpression	sizeof ( char ) * ( len + 1 )		4715863	0		*			
ANR	4715909	SizeofExpression	sizeof ( char )		4715863	0					
ANR	4715910	Sizeof	sizeof		4715863	0					
ANR	4715911	SizeofOperand	char		4715863	1					
ANR	4715912	AdditiveExpression	len + 1		4715863	1		+			
ANR	4715913	Identifier	len		4715863	0					
ANR	4715914	PrimaryExpression	1		4715863	1					
ANR	4715915	IfStatement	if ( ! buf )		4715863	6					
ANR	4715916	Condition	! buf	1484:5:40286:40290	4715863	0	True				
ANR	4715917	UnaryOperationExpression	! buf		4715863	0					
ANR	4715918	UnaryOperator	!		4715863	0					
ANR	4715919	Identifier	buf		4715863	1					
ANR	4715920	CompoundStatement		13:13:341:341	4715863	1					
ANR	4715921	ExpressionStatement	"EXCEPT ( ""Out of memory!"" )"	1485:2:40298:40324	4715863	0	True				
ANR	4715922	CallExpression	"EXCEPT ( ""Out of memory!"" )"		4715863	0					
ANR	4715923	Callee	EXCEPT		4715863	0					
ANR	4715924	Identifier	EXCEPT		4715863	0					
ANR	4715925	ArgumentList	"""Out of memory!"""		4715863	1					
ANR	4715926	Argument	"""Out of memory!"""		4715863	0					
ANR	4715927	PrimaryExpression	"""Out of memory!"""		4715863	0					
ANR	4715928	ExpressionStatement	"vsnprintf ( buf , len , fmt , args )"	1487:1:40330:40362	4715863	7	True				
ANR	4715929	CallExpression	"vsnprintf ( buf , len , fmt , args )"		4715863	0					
ANR	4715930	Callee	vsnprintf		4715863	0					
ANR	4715931	Identifier	vsnprintf		4715863	0					
ANR	4715932	ArgumentList	buf		4715863	1					
ANR	4715933	Argument	buf		4715863	0					
ANR	4715934	Identifier	buf		4715863	0					
ANR	4715935	Argument	len		4715863	1					
ANR	4715936	Identifier	len		4715863	0					
ANR	4715937	Argument	fmt		4715863	2					
ANR	4715938	Identifier	fmt		4715863	0					
ANR	4715939	Argument	args		4715863	3					
ANR	4715940	Identifier	args		4715863	0					
ANR	4715941	ExpressionStatement	new_node = ( struct saved_dprintf * ) malloc ( sizeof ( struct saved_dprintf ) )	1490:1:40429:40502	4715863	8	True				
ANR	4715942	AssignmentExpression	new_node = ( struct saved_dprintf * ) malloc ( sizeof ( struct saved_dprintf ) )		4715863	0		=			
ANR	4715943	Identifier	new_node		4715863	0					
ANR	4715944	CastExpression	( struct saved_dprintf * ) malloc ( sizeof ( struct saved_dprintf ) )		4715863	1					
ANR	4715945	CastTarget	struct saved_dprintf *		4715863	0					
ANR	4715946	CallExpression	malloc ( sizeof ( struct saved_dprintf ) )		4715863	1					
ANR	4715947	Callee	malloc		4715863	0					
ANR	4715948	Identifier	malloc		4715863	0					
ANR	4715949	ArgumentList	sizeof ( struct saved_dprintf )		4715863	1					
ANR	4715950	Argument	sizeof ( struct saved_dprintf )		4715863	0					
ANR	4715951	SizeofExpression	sizeof ( struct saved_dprintf )		4715863	0					
ANR	4715952	Sizeof	sizeof		4715863	0					
ANR	4715953	SizeofOperand	struct saved_dprintf		4715863	1					
ANR	4715954	IfStatement	if ( saved_list == NULL )		4715863	9					
ANR	4715955	Condition	saved_list == NULL	1491:5:40509:40526	4715863	0	True				
ANR	4715956	EqualityExpression	saved_list == NULL		4715863	0		==			
ANR	4715957	Identifier	saved_list		4715863	0					
ANR	4715958	Identifier	NULL		4715863	1					
ANR	4715959	CompoundStatement		20:26:577:577	4715863	1					
ANR	4715960	ExpressionStatement	saved_list = new_node	1492:2:40534:40555	4715863	0	True				
ANR	4715961	AssignmentExpression	saved_list = new_node		4715863	0		=			
ANR	4715962	Identifier	saved_list		4715863	0					
ANR	4715963	Identifier	new_node		4715863	1					
ANR	4715964	ElseStatement	else		4715863	0					
ANR	4715965	CompoundStatement		22:8:612:612	4715863	0					
ANR	4715966	ExpressionStatement	saved_list_tail -> next = new_node	1494:2:40569:40601	4715863	0	True				
ANR	4715967	AssignmentExpression	saved_list_tail -> next = new_node		4715863	0		=			
ANR	4715968	PtrMemberAccess	saved_list_tail -> next		4715863	0					
ANR	4715969	Identifier	saved_list_tail		4715863	0					
ANR	4715970	Identifier	next		4715863	1					
ANR	4715971	Identifier	new_node		4715863	1					
ANR	4715972	ExpressionStatement	saved_list_tail = new_node	1496:1:40607:40633	4715863	10	True				
ANR	4715973	AssignmentExpression	saved_list_tail = new_node		4715863	0		=			
ANR	4715974	Identifier	saved_list_tail		4715863	0					
ANR	4715975	Identifier	new_node		4715863	1					
ANR	4715976	ExpressionStatement	new_node -> next = NULL	1497:1:40636:40657	4715863	11	True				
ANR	4715977	AssignmentExpression	new_node -> next = NULL		4715863	0		=			
ANR	4715978	PtrMemberAccess	new_node -> next		4715863	0					
ANR	4715979	Identifier	new_node		4715863	0					
ANR	4715980	Identifier	next		4715863	1					
ANR	4715981	Identifier	NULL		4715863	1					
ANR	4715982	ExpressionStatement	new_node -> level = flags	1498:1:40660:40683	4715863	12	True				
ANR	4715983	AssignmentExpression	new_node -> level = flags		4715863	0		=			
ANR	4715984	PtrMemberAccess	new_node -> level		4715863	0					
ANR	4715985	Identifier	new_node		4715863	0					
ANR	4715986	Identifier	level		4715863	1					
ANR	4715987	Identifier	flags		4715863	1					
ANR	4715988	ExpressionStatement	new_node -> line = buf	1499:1:40686:40706	4715863	13	True				
ANR	4715989	AssignmentExpression	new_node -> line = buf		4715863	0		=			
ANR	4715990	PtrMemberAccess	new_node -> line		4715863	0					
ANR	4715991	Identifier	new_node		4715863	0					
ANR	4715992	Identifier	line		4715863	1					
ANR	4715993	Identifier	buf		4715863	1					
ANR	4715994	ReturnType	static void		4715863	1					
ANR	4715995	Identifier	_condor_save_dprintf_line		4715863	2					
ANR	4715996	ParameterList	"int flags , const char * fmt , va_list args"		4715863	3					
ANR	4715997	Parameter	int flags	1471:27:39909:39917	4715863	0	True				
ANR	4715998	ParameterType	int		4715863	0					
ANR	4715999	Identifier	flags		4715863	1					
ANR	4716000	Parameter	const char * fmt	1471:38:39920:39934	4715863	1	True				
ANR	4716001	ParameterType	const char *		4715863	0					
ANR	4716002	Identifier	fmt		4715863	1					
ANR	4716003	Parameter	va_list args	1471:55:39937:39948	4715863	2	True				
ANR	4716004	ParameterType	va_list		4715863	0					
ANR	4716005	Identifier	args		4715863	1					
ANR	4716006	CFGEntryNode	ENTRY		4715863		True				
ANR	4716007	CFGExitNode	EXIT		4715863		True				
ANR	4716008	Symbol	malloc		4715863						
ANR	4716009	Symbol	new_node -> line		4715863						
ANR	4716010	Symbol	NULL		4715863						
ANR	4716011	Symbol	new_node -> next		4715863						
ANR	4716012	Symbol	* new_node		4715863						
ANR	4716013	Symbol	flags		4715863						
ANR	4716014	Symbol	saved_list_tail -> next		4715863						
ANR	4716015	Symbol	vprintf_length		4715863						
ANR	4716016	Symbol	saved_list		4715863						
ANR	4716017	Symbol	fmt		4715863						
ANR	4716018	Symbol	new_node -> level		4715863						
ANR	4716019	Symbol	saved_list_tail		4715863						
ANR	4716020	Symbol	args		4715863						
ANR	4716021	Symbol	buf		4715863						
ANR	4716022	Symbol	* saved_list_tail		4715863						
ANR	4716023	Symbol	new_node		4715863						
ANR	4716024	Symbol	len		4715863						
ANR	4716025	Function	_condor_dprintf_saved_lines	1503:0:40712:41825							
ANR	4716026	FunctionDef	_condor_dprintf_saved_lines ()		4716025	0					
ANR	4716027	CompoundStatement		1505:0:40753:41825	4716025	0					
ANR	4716028	IdentifierDeclStatement	struct saved_dprintf * node ;	1506:1:40756:40782	4716025	0	True				
ANR	4716029	IdentifierDecl	* node		4716025	0					
ANR	4716030	IdentifierDeclType	struct saved_dprintf *		4716025	0					
ANR	4716031	Identifier	node		4716025	1					
ANR	4716032	IdentifierDeclStatement	struct saved_dprintf * next ;	1507:1:40785:40811	4716025	1	True				
ANR	4716033	IdentifierDecl	* next		4716025	0					
ANR	4716034	IdentifierDeclType	struct saved_dprintf *		4716025	0					
ANR	4716035	Identifier	next		4716025	1					
ANR	4716036	IfStatement	if ( ! saved_list )		4716025	2					
ANR	4716037	Condition	! saved_list	1509:5:40819:40830	4716025	0	True				
ANR	4716038	UnaryOperationExpression	! saved_list		4716025	0					
ANR	4716039	UnaryOperator	!		4716025	0					
ANR	4716040	Identifier	saved_list		4716025	1					
ANR	4716041	CompoundStatement		5:20:80:80	4716025	1					
ANR	4716042	ReturnStatement	return ;	1510:2:40838:40844	4716025	0	True				
ANR	4716043	ExpressionStatement	node = saved_list	1513:1:40851:40868	4716025	3	True				
ANR	4716044	AssignmentExpression	node = saved_list		4716025	0		=			
ANR	4716045	Identifier	node		4716025	0					
ANR	4716046	Identifier	saved_list		4716025	1					
ANR	4716047	WhileStatement	while ( node )		4716025	4					
ANR	4716048	Condition	node	1514:8:40878:40881	4716025	0	True				
ANR	4716049	Identifier	node		4716025	0					
ANR	4716050	CompoundStatement		10:15:131:131	4716025	1					
ANR	4716051	ExpressionStatement	"dprintf ( node -> level , ""%s"" , node -> line )"	1527:2:41486:41526	4716025	0	True				
ANR	4716052	CallExpression	"dprintf ( node -> level , ""%s"" , node -> line )"		4716025	0					
ANR	4716053	Callee	dprintf		4716025	0					
ANR	4716054	Identifier	dprintf		4716025	0					
ANR	4716055	ArgumentList	node -> level		4716025	1					
ANR	4716056	Argument	node -> level		4716025	0					
ANR	4716057	PtrMemberAccess	node -> level		4716025	0					
ANR	4716058	Identifier	node		4716025	0					
ANR	4716059	Identifier	level		4716025	1					
ANR	4716060	Argument	"""%s"""		4716025	1					
ANR	4716061	PrimaryExpression	"""%s"""		4716025	0					
ANR	4716062	Argument	node -> line		4716025	2					
ANR	4716063	PtrMemberAccess	node -> line		4716025	0					
ANR	4716064	Identifier	node		4716025	0					
ANR	4716065	Identifier	line		4716025	1					
ANR	4716066	ExpressionStatement	next = node -> next	1530:2:41580:41597	4716025	1	True				
ANR	4716067	AssignmentExpression	next = node -> next		4716025	0		=			
ANR	4716068	Identifier	next		4716025	0					
ANR	4716069	PtrMemberAccess	node -> next		4716025	1					
ANR	4716070	Identifier	node		4716025	0					
ANR	4716071	Identifier	next		4716025	1					
ANR	4716072	ExpressionStatement	free ( node -> line )	1533:2:41644:41662	4716025	2	True				
ANR	4716073	CallExpression	free ( node -> line )		4716025	0					
ANR	4716074	Callee	free		4716025	0					
ANR	4716075	Identifier	free		4716025	0					
ANR	4716076	ArgumentList	node -> line		4716025	1					
ANR	4716077	Argument	node -> line		4716025	0					
ANR	4716078	PtrMemberAccess	node -> line		4716025	0					
ANR	4716079	Identifier	node		4716025	0					
ANR	4716080	Identifier	line		4716025	1					
ANR	4716081	ExpressionStatement	free ( node )	1534:2:41666:41678	4716025	3	True				
ANR	4716082	CallExpression	free ( node )		4716025	0					
ANR	4716083	Callee	free		4716025	0					
ANR	4716084	Identifier	free		4716025	0					
ANR	4716085	ArgumentList	node		4716025	1					
ANR	4716086	Argument	node		4716025	0					
ANR	4716087	Identifier	node		4716025	0					
ANR	4716088	ExpressionStatement	node = next	1536:2:41683:41694	4716025	4	True				
ANR	4716089	AssignmentExpression	node = next		4716025	0		=			
ANR	4716090	Identifier	node		4716025	0					
ANR	4716091	Identifier	next		4716025	1					
ANR	4716092	ExpressionStatement	saved_list = NULL	1541:1:41806:41823	4716025	5	True				
ANR	4716093	AssignmentExpression	saved_list = NULL		4716025	0		=			
ANR	4716094	Identifier	saved_list		4716025	0					
ANR	4716095	Identifier	NULL		4716025	1					
ANR	4716096	ReturnType	void		4716025	1					
ANR	4716097	Identifier	_condor_dprintf_saved_lines		4716025	2					
ANR	4716098	ParameterList			4716025	3					
ANR	4716099	CFGEntryNode	ENTRY		4716025		True				
ANR	4716100	CFGExitNode	EXIT		4716025		True				
ANR	4716101	Symbol	next		4716025						
ANR	4716102	Symbol	node		4716025						
ANR	4716103	Symbol	NULL		4716025						
ANR	4716104	Symbol	node -> level		4716025						
ANR	4716105	Symbol	* node		4716025						
ANR	4716106	Symbol	saved_list		4716025						
ANR	4716107	Symbol	node -> line		4716025						
ANR	4716108	Symbol	node -> next		4716025						
ANR	4716109	Function	lock_or_mutex_file	1545:0:41841:44708							
ANR	4716110	FunctionDef	"lock_or_mutex_file (int fd , LOCK_TYPE type , int do_block)"		4716109	0					
ANR	4716111	CompoundStatement		1547:0:41910:44708	4716109	0					
ANR	4716112	IdentifierDeclStatement	int result = - 1 ;	1548:1:41913:41928	4716109	0	True				
ANR	4716113	IdentifierDecl	result = - 1		4716109	0					
ANR	4716114	IdentifierDeclType	int		4716109	0					
ANR	4716115	Identifier	result		4716109	1					
ANR	4716116	AssignmentExpression	result = - 1		4716109	2		=			
ANR	4716117	Identifier	result		4716109	0					
ANR	4716118	UnaryOperationExpression	- 1		4716109	1					
ANR	4716119	UnaryOperator	-		4716109	0					
ANR	4716120	PrimaryExpression	1		4716109	1					
ANR	4716121	IdentifierDeclStatement	char * filename = NULL ;	1549:1:41931:41953	4716109	1	True				
ANR	4716122	IdentifierDecl	* filename = NULL		4716109	0					
ANR	4716123	IdentifierDeclType	char *		4716109	0					
ANR	4716124	Identifier	filename		4716109	1					
ANR	4716125	AssignmentExpression	* filename = NULL		4716109	2		=			
ANR	4716126	Identifier	NULL		4716109	0					
ANR	4716127	Identifier	NULL		4716109	1					
ANR	4716128	IdentifierDeclStatement	int filename_len ;	1550:1:41956:41972	4716109	2	True				
ANR	4716129	IdentifierDecl	filename_len		4716109	0					
ANR	4716130	IdentifierDeclType	int		4716109	0					
ANR	4716131	Identifier	filename_len		4716109	1					
ANR	4716132	IdentifierDeclStatement	char * ptr = NULL ;	1551:1:41975:41991	4716109	3	True				
ANR	4716133	IdentifierDecl	* ptr = NULL		4716109	0					
ANR	4716134	IdentifierDeclType	char *		4716109	0					
ANR	4716135	Identifier	ptr		4716109	1					
ANR	4716136	AssignmentExpression	* ptr = NULL		4716109	2		=			
ANR	4716137	Identifier	NULL		4716109	0					
ANR	4716138	Identifier	NULL		4716109	1					
ANR	4716139	IdentifierDeclStatement	char mutex_name [ MAX_PATH ] ;	1552:1:41994:42019	4716109	4	True				
ANR	4716140	IdentifierDecl	mutex_name [ MAX_PATH ]		4716109	0					
ANR	4716141	IdentifierDeclType	char [ MAX_PATH ]		4716109	0					
ANR	4716142	Identifier	mutex_name		4716109	1					
ANR	4716143	Identifier	MAX_PATH		4716109	2					
ANR	4716144	IfStatement	"if ( strcasecmp ( DebugLock , ""NUL"" ) == 0 )"		4716109	5					
ANR	4716145	Condition	"strcasecmp ( DebugLock , ""NUL"" ) == 0"	1555:5:42087:42119	4716109	0	True				
ANR	4716146	EqualityExpression	"strcasecmp ( DebugLock , ""NUL"" ) == 0"		4716109	0		==			
ANR	4716147	CallExpression	"strcasecmp ( DebugLock , ""NUL"" )"		4716109	0					
ANR	4716148	Callee	strcasecmp		4716109	0					
ANR	4716149	Identifier	strcasecmp		4716109	0					
ANR	4716150	ArgumentList	DebugLock		4716109	1					
ANR	4716151	Argument	DebugLock		4716109	0					
ANR	4716152	Identifier	DebugLock		4716109	0					
ANR	4716153	Argument	"""NUL"""		4716109	1					
ANR	4716154	PrimaryExpression	"""NUL"""		4716109	0					
ANR	4716155	PrimaryExpression	0		4716109	1					
ANR	4716156	CompoundStatement		9:40:211:211	4716109	1					
ANR	4716157	ReturnStatement	return 0 ;	1556:2:42126:42134	4716109	0	True				
ANR	4716158	PrimaryExpression	0		4716109	0					
ANR	4716159	IfStatement	if ( use_kernel_mutex == FALSE )		4716109	6					
ANR	4716160	Condition	use_kernel_mutex == FALSE	1559:6:42146:42170	4716109	0	True				
ANR	4716161	EqualityExpression	use_kernel_mutex == FALSE		4716109	0		==			
ANR	4716162	Identifier	use_kernel_mutex		4716109	0					
ANR	4716163	Identifier	FALSE		4716109	1					
ANR	4716164	CompoundStatement		13:34:263:263	4716109	1					
ANR	4716165	ReturnStatement	"return lock_file_plain ( fd , type , do_block ) ;"	1561:2:42206:42246	4716109	0	True				
ANR	4716166	CallExpression	"lock_file_plain ( fd , type , do_block )"		4716109	0					
ANR	4716167	Callee	lock_file_plain		4716109	0					
ANR	4716168	Identifier	lock_file_plain		4716109	0					
ANR	4716169	ArgumentList	fd		4716109	1					
ANR	4716170	Argument	fd		4716109	0					
ANR	4716171	Identifier	fd		4716109	0					
ANR	4716172	Argument	type		4716109	1					
ANR	4716173	Identifier	type		4716109	0					
ANR	4716174	Argument	do_block		4716109	2					
ANR	4716175	Identifier	do_block		4716109	0					
ANR	4716176	IfStatement	if ( debug_win32_mutex == NULL && DebugLock )		4716109	7					
ANR	4716177	Condition	debug_win32_mutex == NULL && DebugLock	1574:6:42687:42724	4716109	0	True				
ANR	4716178	AndExpression	debug_win32_mutex == NULL && DebugLock		4716109	0		&&			
ANR	4716179	EqualityExpression	debug_win32_mutex == NULL		4716109	0		==			
ANR	4716180	Identifier	debug_win32_mutex		4716109	0					
ANR	4716181	Identifier	NULL		4716109	1					
ANR	4716182	Identifier	DebugLock		4716109	1					
ANR	4716183	CompoundStatement		31:2:916:951	4716109	1					
ANR	4716184	IdentifierDeclStatement	char * filename = strdup ( DebugLock ) ;	1577:2:42827:42862	4716109	0	True				
ANR	4716185	IdentifierDecl	* filename = strdup ( DebugLock )		4716109	0					
ANR	4716186	IdentifierDeclType	char *		4716109	0					
ANR	4716187	Identifier	filename		4716109	1					
ANR	4716188	AssignmentExpression	* filename = strdup ( DebugLock )		4716109	2		=			
ANR	4716189	Identifier	filename		4716109	0					
ANR	4716190	CallExpression	strdup ( DebugLock )		4716109	1					
ANR	4716191	Callee	strdup		4716109	0					
ANR	4716192	Identifier	strdup		4716109	0					
ANR	4716193	ArgumentList	DebugLock		4716109	1					
ANR	4716194	Argument	DebugLock		4716109	0					
ANR	4716195	Identifier	DebugLock		4716109	0					
ANR	4716196	ExpressionStatement	filename_len = strlen ( filename )	1578:2:42866:42897	4716109	1	True				
ANR	4716197	AssignmentExpression	filename_len = strlen ( filename )		4716109	0		=			
ANR	4716198	Identifier	filename_len		4716109	0					
ANR	4716199	CallExpression	strlen ( filename )		4716109	1					
ANR	4716200	Callee	strlen		4716109	0					
ANR	4716201	Identifier	strlen		4716109	0					
ANR	4716202	ArgumentList	filename		4716109	1					
ANR	4716203	Argument	filename		4716109	0					
ANR	4716204	Identifier	filename		4716109	0					
ANR	4716205	ExpressionStatement	"ptr = strchr ( filename , '\\\\' )"	1581:2:42989:43016	4716109	2	True				
ANR	4716206	AssignmentExpression	"ptr = strchr ( filename , '\\\\' )"		4716109	0		=			
ANR	4716207	Identifier	ptr		4716109	0					
ANR	4716208	CallExpression	"strchr ( filename , '\\\\' )"		4716109	1					
ANR	4716209	Callee	strchr		4716109	0					
ANR	4716210	Identifier	strchr		4716109	0					
ANR	4716211	ArgumentList	filename		4716109	1					
ANR	4716212	Argument	filename		4716109	0					
ANR	4716213	Identifier	filename		4716109	0					
ANR	4716214	Argument	'\\\\'		4716109	1					
ANR	4716215	PrimaryExpression	'\\\\'		4716109	0					
ANR	4716216	WhileStatement	while ( ptr )		4716109	3					
ANR	4716217	Condition	ptr	1582:10:43028:43030	4716109	0	True				
ANR	4716218	Identifier	ptr		4716109	0					
ANR	4716219	CompoundStatement		36:16:1123:1123	4716109	1					
ANR	4716220	ExpressionStatement	* ptr = '/'	1583:3:43039:43049	4716109	0	True				
ANR	4716221	AssignmentExpression	* ptr = '/'		4716109	0		=			
ANR	4716222	UnaryOperationExpression	* ptr		4716109	0					
ANR	4716223	UnaryOperator	*		4716109	0					
ANR	4716224	Identifier	ptr		4716109	1					
ANR	4716225	PrimaryExpression	'/'		4716109	1					
ANR	4716226	ExpressionStatement	"ptr = strchr ( filename , '\\\\' )"	1584:3:43054:43081	4716109	1	True				
ANR	4716227	AssignmentExpression	"ptr = strchr ( filename , '\\\\' )"		4716109	0		=			
ANR	4716228	Identifier	ptr		4716109	0					
ANR	4716229	CallExpression	"strchr ( filename , '\\\\' )"		4716109	1					
ANR	4716230	Callee	strchr		4716109	0					
ANR	4716231	Identifier	strchr		4716109	0					
ANR	4716232	ArgumentList	filename		4716109	1					
ANR	4716233	Argument	filename		4716109	0					
ANR	4716234	Identifier	filename		4716109	0					
ANR	4716235	Argument	'\\\\'		4716109	1					
ANR	4716236	PrimaryExpression	'\\\\'		4716109	0					
ANR	4716237	ExpressionStatement	strlwr ( filename )	1588:2:43204:43220	4716109	4	True				
ANR	4716238	CallExpression	strlwr ( filename )		4716109	0					
ANR	4716239	Callee	strlwr		4716109	0					
ANR	4716240	Identifier	strlwr		4716109	0					
ANR	4716241	ArgumentList	filename		4716109	1					
ANR	4716242	Argument	filename		4716109	0					
ANR	4716243	Identifier	filename		4716109	0					
ANR	4716244	ExpressionStatement	"snprintf ( mutex_name , MAX_PATH , ""Global\\\\%s"" , filename )"	1591:2:43340:43391	4716109	5	True				
ANR	4716245	CallExpression	"snprintf ( mutex_name , MAX_PATH , ""Global\\\\%s"" , filename )"		4716109	0					
ANR	4716246	Callee	snprintf		4716109	0					
ANR	4716247	Identifier	snprintf		4716109	0					
ANR	4716248	ArgumentList	mutex_name		4716109	1					
ANR	4716249	Argument	mutex_name		4716109	0					
ANR	4716250	Identifier	mutex_name		4716109	0					
ANR	4716251	Argument	MAX_PATH		4716109	1					
ANR	4716252	Identifier	MAX_PATH		4716109	0					
ANR	4716253	Argument	"""Global\\\\%s"""		4716109	2					
ANR	4716254	PrimaryExpression	"""Global\\\\%s"""		4716109	0					
ANR	4716255	Argument	filename		4716109	3					
ANR	4716256	Identifier	filename		4716109	0					
ANR	4716257	ExpressionStatement	free ( filename )	1592:2:43395:43409	4716109	6	True				
ANR	4716258	CallExpression	free ( filename )		4716109	0					
ANR	4716259	Callee	free		4716109	0					
ANR	4716260	Identifier	free		4716109	0					
ANR	4716261	ArgumentList	filename		4716109	1					
ANR	4716262	Argument	filename		4716109	0					
ANR	4716263	Identifier	filename		4716109	0					
ANR	4716264	ExpressionStatement	filename = NULL	1593:2:43413:43428	4716109	7	True				
ANR	4716265	AssignmentExpression	filename = NULL		4716109	0		=			
ANR	4716266	Identifier	filename		4716109	0					
ANR	4716267	Identifier	NULL		4716109	1					
ANR	4716268	ExpressionStatement	"debug_win32_mutex = CreateMutex ( 0 , FALSE , mutex_name )"	1604:2:44043:44094	4716109	8	True				
ANR	4716269	AssignmentExpression	"debug_win32_mutex = CreateMutex ( 0 , FALSE , mutex_name )"		4716109	0		=			
ANR	4716270	Identifier	debug_win32_mutex		4716109	0					
ANR	4716271	CallExpression	"CreateMutex ( 0 , FALSE , mutex_name )"		4716109	1					
ANR	4716272	Callee	CreateMutex		4716109	0					
ANR	4716273	Identifier	CreateMutex		4716109	0					
ANR	4716274	ArgumentList	0		4716109	1					
ANR	4716275	Argument	0		4716109	0					
ANR	4716276	PrimaryExpression	0		4716109	0					
ANR	4716277	Argument	FALSE		4716109	1					
ANR	4716278	Identifier	FALSE		4716109	0					
ANR	4716279	Argument	mutex_name		4716109	2					
ANR	4716280	Identifier	mutex_name		4716109	0					
ANR	4716281	IfStatement	if ( debug_win32_mutex )		4716109	8					
ANR	4716282	Condition	debug_win32_mutex	1608:6:44166:44182	4716109	0	True				
ANR	4716283	Identifier	debug_win32_mutex		4716109	0					
ANR	4716284	CompoundStatement		62:26:2275:2275	4716109	1					
ANR	4716285	IfStatement	if ( type == UN_LOCK )		4716109	0					
ANR	4716286	Condition	type == UN_LOCK	1609:7:44195:44209	4716109	0	True				
ANR	4716287	EqualityExpression	type == UN_LOCK		4716109	0		==			
ANR	4716288	Identifier	type		4716109	0					
ANR	4716289	Identifier	UN_LOCK		4716109	1					
ANR	4716290	CompoundStatement		63:25:2302:2302	4716109	1					
ANR	4716291	ExpressionStatement	ReleaseMutex ( debug_win32_mutex )	1611:3:44239:44270	4716109	0	True				
ANR	4716292	CallExpression	ReleaseMutex ( debug_win32_mutex )		4716109	0					
ANR	4716293	Callee	ReleaseMutex		4716109	0					
ANR	4716294	Identifier	ReleaseMutex		4716109	0					
ANR	4716295	ArgumentList	debug_win32_mutex		4716109	1					
ANR	4716296	Argument	debug_win32_mutex		4716109	0					
ANR	4716297	Identifier	debug_win32_mutex		4716109	0					
ANR	4716298	ExpressionStatement	result = 0	1612:3:44275:44285	4716109	1	True				
ANR	4716299	AssignmentExpression	result = 0		4716109	0		=			
ANR	4716300	Identifier	result		4716109	0					
ANR	4716301	PrimaryExpression	0		4716109	1					
ANR	4716302	ElseStatement	else		4716109	0					
ANR	4716303	CompoundStatement		67:9:2404:2404	4716109	0					
ANR	4716304	ExpressionStatement	"result = WaitForSingleObject ( debug_win32_mutex , do_block ? INFINITE : 10 * 1000 )"	1616:3:44400:44485	4716109	0	True				
ANR	4716305	AssignmentExpression	"result = WaitForSingleObject ( debug_win32_mutex , do_block ? INFINITE : 10 * 1000 )"		4716109	0		=			
ANR	4716306	Identifier	result		4716109	0					
ANR	4716307	CallExpression	"WaitForSingleObject ( debug_win32_mutex , do_block ? INFINITE : 10 * 1000 )"		4716109	1					
ANR	4716308	Callee	WaitForSingleObject		4716109	0					
ANR	4716309	Identifier	WaitForSingleObject		4716109	0					
ANR	4716310	ArgumentList	debug_win32_mutex		4716109	1					
ANR	4716311	Argument	debug_win32_mutex		4716109	0					
ANR	4716312	Identifier	debug_win32_mutex		4716109	0					
ANR	4716313	Argument	do_block ? INFINITE : 10 * 1000		4716109	1					
ANR	4716314	ConditionalExpression	do_block ? INFINITE : 10 * 1000		4716109	0					
ANR	4716315	Condition	do_block		4716109	0					
ANR	4716316	Identifier	do_block		4716109	0					
ANR	4716317	Identifier	INFINITE		4716109	1					
ANR	4716318	MultiplicativeExpression	10 * 1000		4716109	2		*			
ANR	4716319	PrimaryExpression	10		4716109	0					
ANR	4716320	PrimaryExpression	1000		4716109	1					
ANR	4716321	IfStatement	if ( result == WAIT_OBJECT_0 || result == WAIT_ABANDONED )		4716109	1					
ANR	4716322	Condition	result == WAIT_OBJECT_0 || result == WAIT_ABANDONED	1619:8:44581:44627	4716109	0	True				
ANR	4716323	OrExpression	result == WAIT_OBJECT_0 || result == WAIT_ABANDONED		4716109	0		||			
ANR	4716324	EqualityExpression	result == WAIT_OBJECT_0		4716109	0		==			
ANR	4716325	Identifier	result		4716109	0					
ANR	4716326	Identifier	WAIT_OBJECT_0		4716109	1					
ANR	4716327	EqualityExpression	result == WAIT_ABANDONED		4716109	1		==			
ANR	4716328	Identifier	result		4716109	0					
ANR	4716329	Identifier	WAIT_ABANDONED		4716109	1					
ANR	4716330	CompoundStatement		73:58:2720:2720	4716109	1					
ANR	4716331	ExpressionStatement	result = 0	1620:4:44637:44647	4716109	0	True				
ANR	4716332	AssignmentExpression	result = 0		4716109	0		=			
ANR	4716333	Identifier	result		4716109	0					
ANR	4716334	PrimaryExpression	0		4716109	1					
ANR	4716335	ElseStatement	else		4716109	0					
ANR	4716336	CompoundStatement		75:10:2748:2748	4716109	0					
ANR	4716337	ExpressionStatement	result = - 1	1622:4:44665:44676	4716109	0	True				
ANR	4716338	AssignmentExpression	result = - 1		4716109	0		=			
ANR	4716339	Identifier	result		4716109	0					
ANR	4716340	UnaryOperationExpression	- 1		4716109	1					
ANR	4716341	UnaryOperator	-		4716109	0					
ANR	4716342	PrimaryExpression	1		4716109	1					
ANR	4716343	ReturnStatement	return result ;	1628:1:44693:44706	4716109	9	True				
ANR	4716344	Identifier	result		4716109	0					
ANR	4716345	ReturnType	static int		4716109	1					
ANR	4716346	Identifier	lock_or_mutex_file		4716109	2					
ANR	4716347	ParameterList	"int fd , LOCK_TYPE type , int do_block"		4716109	3					
ANR	4716348	Parameter	int fd	1546:19:41872:41877	4716109	0	True				
ANR	4716349	ParameterType	int		4716109	0					
ANR	4716350	Identifier	fd		4716109	1					
ANR	4716351	Parameter	LOCK_TYPE type	1546:27:41880:41893	4716109	1	True				
ANR	4716352	ParameterType	LOCK_TYPE		4716109	0					
ANR	4716353	Identifier	type		4716109	1					
ANR	4716354	Parameter	int do_block	1546:43:41896:41907	4716109	2	True				
ANR	4716355	ParameterType	int		4716109	0					
ANR	4716356	Identifier	do_block		4716109	1					
ANR	4716357	CFGEntryNode	ENTRY		4716109		True				
ANR	4716358	CFGExitNode	EXIT		4716109		True				
ANR	4716359	Symbol	CreateMutex		4716109						
ANR	4716360	Symbol	use_kernel_mutex		4716109						
ANR	4716361	Symbol	strchr		4716109						
ANR	4716362	Symbol	type		4716109						
ANR	4716363	Symbol	result		4716109						
ANR	4716364	Symbol	WaitForSingleObject		4716109						
ANR	4716365	Symbol	strlen		4716109						
ANR	4716366	Symbol	WAIT_ABANDONED		4716109						
ANR	4716367	Symbol	mutex_name		4716109						
ANR	4716368	Symbol	filename_len		4716109						
ANR	4716369	Symbol	* ptr		4716109						
ANR	4716370	Symbol	WAIT_OBJECT_0		4716109						
ANR	4716371	Symbol	strcasecmp		4716109						
ANR	4716372	Symbol	NULL		4716109						
ANR	4716373	Symbol	DebugLock		4716109						
ANR	4716374	Symbol	do_block		4716109						
ANR	4716375	Symbol	debug_win32_mutex		4716109						
ANR	4716376	Symbol	INFINITE		4716109						
ANR	4716377	Symbol	ptr		4716109						
ANR	4716378	Symbol	filename		4716109						
ANR	4716379	Symbol	FALSE		4716109						
ANR	4716380	Symbol	MAX_PATH		4716109						
ANR	4716381	Symbol	strdup		4716109						
ANR	4716382	Symbol	UN_LOCK		4716109						
ANR	4716383	Symbol	lock_file_plain		4716109						
ANR	4716384	Symbol	fd		4716109						
ANR	4716385	DeclStmt									
ANR	4716386	Decl							int	int	ParentLockFd
ANR	4716387	Function	dprintf_before_shared_mem_clone	1635:0:44776:44841							
ANR	4716388	FunctionDef	dprintf_before_shared_mem_clone ()		4716387	0					
ANR	4716389	CompoundStatement		1636:34:44815:44841	4716387	0					
ANR	4716390	ExpressionStatement	ParentLockFd = LockFd	1637:1:44818:44839	4716387	0	True				
ANR	4716391	AssignmentExpression	ParentLockFd = LockFd		4716387	0		=			
ANR	4716392	Identifier	ParentLockFd		4716387	0					
ANR	4716393	Identifier	LockFd		4716387	1					
ANR	4716394	ReturnType	void		4716387	1					
ANR	4716395	Identifier	dprintf_before_shared_mem_clone		4716387	2					
ANR	4716396	ParameterList			4716387	3					
ANR	4716397	CFGEntryNode	ENTRY		4716387		True				
ANR	4716398	CFGExitNode	EXIT		4716387		True				
ANR	4716399	Symbol	LockFd		4716387						
ANR	4716400	Symbol	ParentLockFd		4716387						
ANR	4716401	Function	dprintf_after_shared_mem_clone	1640:0:44844:44908							
ANR	4716402	FunctionDef	dprintf_after_shared_mem_clone ()		4716401	0					
ANR	4716403	CompoundStatement		1641:33:44882:44908	4716401	0					
ANR	4716404	ExpressionStatement	LockFd = ParentLockFd	1642:1:44885:44906	4716401	0	True				
ANR	4716405	AssignmentExpression	LockFd = ParentLockFd		4716401	0		=			
ANR	4716406	Identifier	LockFd		4716401	0					
ANR	4716407	Identifier	ParentLockFd		4716401	1					
ANR	4716408	ReturnType	void		4716401	1					
ANR	4716409	Identifier	dprintf_after_shared_mem_clone		4716401	2					
ANR	4716410	ParameterList			4716401	3					
ANR	4716411	CFGEntryNode	ENTRY		4716401		True				
ANR	4716412	CFGExitNode	EXIT		4716401		True				
ANR	4716413	Symbol	LockFd		4716401						
ANR	4716414	Symbol	ParentLockFd		4716401						
ANR	4716415	Function	dprintf_init_fork_child	1645:0:44911:45003							
ANR	4716416	FunctionDef	dprintf_init_fork_child ()		4716415	0					
ANR	4716417	CompoundStatement		1646:27:44943:45003	4716415	0					
ANR	4716418	IfStatement	if ( LockFd >= 0 )		4716415	0					
ANR	4716419	Condition	LockFd >= 0	1647:5:44950:44960	4716415	0	True				
ANR	4716420	RelationalExpression	LockFd >= 0		4716415	0		>=			
ANR	4716421	Identifier	LockFd		4716415	0					
ANR	4716422	PrimaryExpression	0		4716415	1					
ANR	4716423	CompoundStatement		2:19:20:20	4716415	1					
ANR	4716424	ExpressionStatement	close ( LockFd )	1648:2:44968:44983	4716415	0	True				
ANR	4716425	CallExpression	close ( LockFd )		4716415	0					
ANR	4716426	Callee	close		4716415	0					
ANR	4716427	Identifier	close		4716415	0					
ANR	4716428	ArgumentList	LockFd		4716415	1					
ANR	4716429	Argument	LockFd		4716415	0					
ANR	4716430	Identifier	LockFd		4716415	0					
ANR	4716431	ExpressionStatement	LockFd = - 1	1649:2:44987:44998	4716415	1	True				
ANR	4716432	AssignmentExpression	LockFd = - 1		4716415	0		=			
ANR	4716433	Identifier	LockFd		4716415	0					
ANR	4716434	UnaryOperationExpression	- 1		4716415	1					
ANR	4716435	UnaryOperator	-		4716415	0					
ANR	4716436	PrimaryExpression	1		4716415	1					
ANR	4716437	ReturnType	void		4716415	1					
ANR	4716438	Identifier	dprintf_init_fork_child		4716415	2					
ANR	4716439	ParameterList			4716415	3					
ANR	4716440	CFGEntryNode	ENTRY		4716415		True				
ANR	4716441	CFGExitNode	EXIT		4716415		True				
ANR	4716442	Symbol	LockFd		4716415						
ANR	4716443	Function	dprintf_wrapup_fork_child	1653:0:45006:45260							
ANR	4716444	FunctionDef	dprintf_wrapup_fork_child ()		4716443	0					
ANR	4716445	CompoundStatement		1654:29:45040:45260	4716443	0					
ANR	4716446	IfStatement	if ( LockFd >= 0 )		4716443	0					
ANR	4716447	Condition	LockFd >= 0	1659:5:45207:45217	4716443	0	True				
ANR	4716448	RelationalExpression	LockFd >= 0		4716443	0		>=			
ANR	4716449	Identifier	LockFd		4716443	0					
ANR	4716450	PrimaryExpression	0		4716443	1					
ANR	4716451	CompoundStatement		6:19:180:180	4716443	1					
ANR	4716452	ExpressionStatement	close ( LockFd )	1660:2:45225:45240	4716443	0	True				
ANR	4716453	CallExpression	close ( LockFd )		4716443	0					
ANR	4716454	Callee	close		4716443	0					
ANR	4716455	Identifier	close		4716443	0					
ANR	4716456	ArgumentList	LockFd		4716443	1					
ANR	4716457	Argument	LockFd		4716443	0					
ANR	4716458	Identifier	LockFd		4716443	0					
ANR	4716459	ExpressionStatement	LockFd = - 1	1661:2:45244:45255	4716443	1	True				
ANR	4716460	AssignmentExpression	LockFd = - 1		4716443	0		=			
ANR	4716461	Identifier	LockFd		4716443	0					
ANR	4716462	UnaryOperationExpression	- 1		4716443	1					
ANR	4716463	UnaryOperator	-		4716443	0					
ANR	4716464	PrimaryExpression	1		4716443	1					
ANR	4716465	ReturnType	void		4716443	1					
ANR	4716466	Identifier	dprintf_wrapup_fork_child		4716443	2					
ANR	4716467	ParameterList			4716443	3					
ANR	4716468	CFGEntryNode	ENTRY		4716443		True				
ANR	4716469	CFGExitNode	EXIT		4716443		True				
ANR	4716470	Symbol	LockFd		4716443						
ANR	4716471	Function	safe_async_simple_fwrite_fd	1667:0:45283:46148							
ANR	4716472	FunctionDef	"safe_async_simple_fwrite_fd (int fd , char const * msg , unsigned int * args , unsigned int num_args)"		4716471	0					
ANR	4716473	CompoundStatement		1669:0:45388:46148	4716471	0					
ANR	4716474	IdentifierDeclStatement	unsigned int arg_index ;	1670:1:45391:45413	4716471	0	True				
ANR	4716475	IdentifierDecl	arg_index		4716471	0					
ANR	4716476	IdentifierDeclType	unsigned int		4716471	0					
ANR	4716477	Identifier	arg_index		4716471	1					
ANR	4716478	IdentifierDeclStatement	"unsigned int digit , arg ;"	1671:1:45416:45438	4716471	1	True				
ANR	4716479	IdentifierDecl	digit		4716471	0					
ANR	4716480	IdentifierDeclType	unsigned int		4716471	0					
ANR	4716481	Identifier	digit		4716471	1					
ANR	4716482	IdentifierDecl	arg		4716471	1					
ANR	4716483	IdentifierDeclType	unsigned int		4716471	0					
ANR	4716484	Identifier	arg		4716471	1					
ANR	4716485	IdentifierDeclStatement	char intbuf [ 50 ] ;	1672:1:45441:45456	4716471	2	True				
ANR	4716486	IdentifierDecl	intbuf [ 50 ]		4716471	0					
ANR	4716487	IdentifierDeclType	char [ 50 ]		4716471	0					
ANR	4716488	Identifier	intbuf		4716471	1					
ANR	4716489	PrimaryExpression	50		4716471	2					
ANR	4716490	IdentifierDeclStatement	char * intbuf_pos ;	1673:1:45459:45475	4716471	3	True				
ANR	4716491	IdentifierDecl	* intbuf_pos		4716471	0					
ANR	4716492	IdentifierDeclType	char *		4716471	0					
ANR	4716493	Identifier	intbuf_pos		4716471	1					
ANR	4716494	ForStatement	for ( ; * msg ; msg ++ )		4716471	4					
ANR	4716495	Condition	* msg	1675:6:45484:45487	4716471	0	True				
ANR	4716496	UnaryOperationExpression	* msg		4716471	0					
ANR	4716497	UnaryOperator	*		4716471	0					
ANR	4716498	Identifier	msg		4716471	1					
ANR	4716499	PostIncDecOperationExpression	msg ++	1675:11:45489:45493	4716471	1	True				
ANR	4716500	Identifier	msg		4716471	0					
ANR	4716501	IncDec	++		4716471	1					
ANR	4716502	CompoundStatement		7:18:107:107	4716471	2					
ANR	4716503	IfStatement	if ( * msg != '%' )		4716471	0					
ANR	4716504	Condition	* msg != '%'	1676:6:45504:45514	4716471	0	True				
ANR	4716505	EqualityExpression	* msg != '%'		4716471	0		!=			
ANR	4716506	UnaryOperationExpression	* msg		4716471	0					
ANR	4716507	UnaryOperator	*		4716471	0					
ANR	4716508	Identifier	msg		4716471	1					
ANR	4716509	PrimaryExpression	'%'		4716471	1					
ANR	4716510	CompoundStatement		8:20:129:129	4716471	1					
ANR	4716511	ExpressionStatement	"write ( fd , msg , 1 )"	1677:3:45523:45538	4716471	0	True				
ANR	4716512	CallExpression	"write ( fd , msg , 1 )"		4716471	0					
ANR	4716513	Callee	write		4716471	0					
ANR	4716514	Identifier	write		4716471	0					
ANR	4716515	ArgumentList	fd		4716471	1					
ANR	4716516	Argument	fd		4716471	0					
ANR	4716517	Identifier	fd		4716471	0					
ANR	4716518	Argument	msg		4716471	1					
ANR	4716519	Identifier	msg		4716471	0					
ANR	4716520	Argument	1		4716471	2					
ANR	4716521	PrimaryExpression	1		4716471	0					
ANR	4716522	ElseStatement	else		4716471	0					
ANR	4716523	CompoundStatement		11:7:162:162	4716471	0					
ANR	4716524	ExpressionStatement	arg_index = * ( ++ msg ) - '0'	1681:3:45619:45643	4716471	0	True				
ANR	4716525	AssignmentExpression	arg_index = * ( ++ msg ) - '0'		4716471	0		=			
ANR	4716526	Identifier	arg_index		4716471	0					
ANR	4716527	AdditiveExpression	* ( ++ msg ) - '0'		4716471	1		-			
ANR	4716528	UnaryOperationExpression	* ( ++ msg )		4716471	0					
ANR	4716529	UnaryOperator	*		4716471	0					
ANR	4716530	UnaryExpression	++ msg		4716471	1					
ANR	4716531	IncDec	++		4716471	0					
ANR	4716532	Identifier	msg		4716471	1					
ANR	4716533	PrimaryExpression	'0'		4716471	1					
ANR	4716534	IfStatement	if ( arg_index >= num_args || ! * msg )		4716471	1					
ANR	4716535	Condition	arg_index >= num_args || ! * msg	1682:7:45652:45681	4716471	0	True				
ANR	4716536	OrExpression	arg_index >= num_args || ! * msg		4716471	0		||			
ANR	4716537	RelationalExpression	arg_index >= num_args		4716471	0		>=			
ANR	4716538	Identifier	arg_index		4716471	0					
ANR	4716539	Identifier	num_args		4716471	1					
ANR	4716540	UnaryOperationExpression	! * msg		4716471	1					
ANR	4716541	UnaryOperator	!		4716471	0					
ANR	4716542	UnaryOperationExpression	* msg		4716471	1					
ANR	4716543	UnaryOperator	*		4716471	0					
ANR	4716544	Identifier	msg		4716471	1					
ANR	4716545	CompoundStatement		14:40:296:296	4716471	1					
ANR	4716546	ExpressionStatement	"write ( fd , "" INVALID! "" , 10 )"	1683:4:45691:45716	4716471	0	True				
ANR	4716547	CallExpression	"write ( fd , "" INVALID! "" , 10 )"		4716471	0					
ANR	4716548	Callee	write		4716471	0					
ANR	4716549	Identifier	write		4716471	0					
ANR	4716550	ArgumentList	fd		4716471	1					
ANR	4716551	Argument	fd		4716471	0					
ANR	4716552	Identifier	fd		4716471	0					
ANR	4716553	Argument	""" INVALID! """		4716471	1					
ANR	4716554	PrimaryExpression	""" INVALID! """		4716471	0					
ANR	4716555	Argument	10		4716471	2					
ANR	4716556	PrimaryExpression	10		4716471	0					
ANR	4716557	BreakStatement	break ;	1684:4:45722:45727	4716471	1	True				
ANR	4716558	ExpressionStatement	arg = args [ arg_index ]	1686:3:45737:45758	4716471	2	True				
ANR	4716559	AssignmentExpression	arg = args [ arg_index ]		4716471	0		=			
ANR	4716560	Identifier	arg		4716471	0					
ANR	4716561	ArrayIndexing	args [ arg_index ]		4716471	1					
ANR	4716562	Identifier	args		4716471	0					
ANR	4716563	Identifier	arg_index		4716471	1					
ANR	4716564	ExpressionStatement	intbuf_pos = intbuf	1687:3:45763:45780	4716471	3	True				
ANR	4716565	AssignmentExpression	intbuf_pos = intbuf		4716471	0		=			
ANR	4716566	Identifier	intbuf_pos		4716471	0					
ANR	4716567	Identifier	intbuf		4716471	1					
ANR	4716568	DoStatement	do		4716471	4					
ANR	4716569	CompoundStatement		20:6:399:399	4716471	0					
ANR	4716570	ExpressionStatement	digit = arg % 10	1689:4:45794:45810	4716471	0	True				
ANR	4716571	AssignmentExpression	digit = arg % 10		4716471	0		=			
ANR	4716572	Identifier	digit		4716471	0					
ANR	4716573	MultiplicativeExpression	arg % 10		4716471	1		%			
ANR	4716574	Identifier	arg		4716471	0					
ANR	4716575	PrimaryExpression	10		4716471	1					
ANR	4716576	ExpressionStatement	* ( intbuf_pos ++ ) = digit + '0'	1690:4:45816:45845	4716471	1	True				
ANR	4716577	AssignmentExpression	* ( intbuf_pos ++ ) = digit + '0'		4716471	0		=			
ANR	4716578	UnaryOperationExpression	* ( intbuf_pos ++ )		4716471	0					
ANR	4716579	UnaryOperator	*		4716471	0					
ANR	4716580	PostIncDecOperationExpression	intbuf_pos ++		4716471	1					
ANR	4716581	Identifier	intbuf_pos		4716471	0					
ANR	4716582	IncDec	++		4716471	1					
ANR	4716583	AdditiveExpression	digit + '0'		4716471	1		+			
ANR	4716584	Identifier	digit		4716471	0					
ANR	4716585	PrimaryExpression	'0'		4716471	1					
ANR	4716586	ExpressionStatement	arg /= 10	1691:4:45851:45860	4716471	2	True				
ANR	4716587	AssignmentExpression	arg /= 10		4716471	0		/=			
ANR	4716588	Identifier	arg		4716471	0					
ANR	4716589	PrimaryExpression	10		4716471	1					
ANR	4716590	Condition	arg	1692:12:45924:45926	4716471	1	True				
ANR	4716591	Identifier	arg		4716471	0					
ANR	4716592	WhileStatement	while ( intbuf_pos -- > intbuf )		4716471	5					
ANR	4716593	Condition	intbuf_pos -- > intbuf	1696:10:46082:46102	4716471	0	True				
ANR	4716594	RelationalExpression	intbuf_pos -- > intbuf		4716471	0		>			
ANR	4716595	PostIncDecOperationExpression	intbuf_pos --		4716471	0					
ANR	4716596	Identifier	intbuf_pos		4716471	0					
ANR	4716597	IncDec	--		4716471	1					
ANR	4716598	Identifier	intbuf		4716471	1					
ANR	4716599	CompoundStatement		28:34:717:717	4716471	1					
ANR	4716600	ExpressionStatement	"write ( fd , intbuf_pos , 1 )"	1697:4:46112:46134	4716471	0	True				
ANR	4716601	CallExpression	"write ( fd , intbuf_pos , 1 )"		4716471	0					
ANR	4716602	Callee	write		4716471	0					
ANR	4716603	Identifier	write		4716471	0					
ANR	4716604	ArgumentList	fd		4716471	1					
ANR	4716605	Argument	fd		4716471	0					
ANR	4716606	Identifier	fd		4716471	0					
ANR	4716607	Argument	intbuf_pos		4716471	1					
ANR	4716608	Identifier	intbuf_pos		4716471	0					
ANR	4716609	Argument	1		4716471	2					
ANR	4716610	PrimaryExpression	1		4716471	0					
ANR	4716611	ReturnType	static void		4716471	1					
ANR	4716612	Identifier	safe_async_simple_fwrite_fd		4716471	2					
ANR	4716613	ParameterList	"int fd , char const * msg , unsigned int * args , unsigned int num_args"		4716471	3					
ANR	4716614	Parameter	int fd	1668:28:45323:45328	4716471	0	True				
ANR	4716615	ParameterType	int		4716471	0					
ANR	4716616	Identifier	fd		4716471	1					
ANR	4716617	Parameter	char const * msg	1668:35:45330:45344	4716471	1	True				
ANR	4716618	ParameterType	char const *		4716471	0					
ANR	4716619	Identifier	msg		4716471	1					
ANR	4716620	Parameter	unsigned int * args	1668:51:45346:45363	4716471	2	True				
ANR	4716621	ParameterType	unsigned int *		4716471	0					
ANR	4716622	Identifier	args		4716471	1					
ANR	4716623	Parameter	unsigned int num_args	1668:70:45365:45385	4716471	3	True				
ANR	4716624	ParameterType	unsigned int		4716471	0					
ANR	4716625	Identifier	num_args		4716471	1					
ANR	4716626	CFGEntryNode	ENTRY		4716471		True				
ANR	4716627	CFGExitNode	EXIT		4716471		True				
ANR	4716628	Symbol	msg		4716471						
ANR	4716629	Symbol	arg_index		4716471						
ANR	4716630	Symbol	* ( ++ msg )		4716471						
ANR	4716631	Symbol	* msg		4716471						
ANR	4716632	Symbol	* args		4716471						
ANR	4716633	Symbol	args		4716471						
ANR	4716634	Symbol	* arg_index		4716471						
ANR	4716635	Symbol	num_args		4716471						
ANR	4716636	Symbol	intbuf		4716471						
ANR	4716637	Symbol	arg		4716471						
ANR	4716638	Symbol	* ( intbuf_pos ++ )		4716471						
ANR	4716639	Symbol	intbuf_pos		4716471						
ANR	4716640	Symbol	fd		4716471						
ANR	4716641	Symbol	digit		4716471						
ANR	4716642	Function	dprintf_dump_stack	1703:0:46151:48200							
ANR	4716643	FunctionDef	dprintf_dump_stack ()		4716642	0					
ANR	4716644	CompoundStatement		1704:25:46181:48200	4716642	0					
ANR	4716645	IdentifierDeclStatement	priv_state orig_priv_state ;	1705:1:46184:46210	4716642	0	True				
ANR	4716646	IdentifierDecl	orig_priv_state		4716642	0					
ANR	4716647	IdentifierDeclType	priv_state		4716642	0					
ANR	4716648	Identifier	orig_priv_state		4716642	1					
ANR	4716649	IdentifierDeclStatement	int orig_euid ;	1706:1:46213:46226	4716642	1	True				
ANR	4716650	IdentifierDecl	orig_euid		4716642	0					
ANR	4716651	IdentifierDeclType	int		4716642	0					
ANR	4716652	Identifier	orig_euid		4716642	1					
ANR	4716653	IdentifierDeclStatement	int orig_egid ;	1707:1:46229:46242	4716642	2	True				
ANR	4716654	IdentifierDecl	orig_egid		4716642	0					
ANR	4716655	IdentifierDeclType	int		4716642	0					
ANR	4716656	Identifier	orig_egid		4716642	1					
ANR	4716657	IdentifierDeclStatement	int fd ;	1708:1:46245:46251	4716642	3	True				
ANR	4716658	IdentifierDecl	fd		4716642	0					
ANR	4716659	IdentifierDeclType	int		4716642	0					
ANR	4716660	Identifier	fd		4716642	1					
ANR	4716661	IdentifierDeclStatement	void * trace [ 50 ] ;	1709:1:46254:46269	4716642	4	True				
ANR	4716662	IdentifierDecl	* trace [ 50 ]		4716642	0					
ANR	4716663	IdentifierDeclType	void * [ 50 ]		4716642	0					
ANR	4716664	Identifier	trace		4716642	1					
ANR	4716665	PrimaryExpression	50		4716642	2					
ANR	4716666	IdentifierDeclStatement	int trace_size ;	1710:1:46272:46286	4716642	5	True				
ANR	4716667	IdentifierDecl	trace_size		4716642	0					
ANR	4716668	IdentifierDeclType	int		4716642	0					
ANR	4716669	Identifier	trace_size		4716642	1					
ANR	4716670	IdentifierDeclStatement	unsigned int args [ 3 ] ;	1711:1:46289:46309	4716642	6	True				
ANR	4716671	IdentifierDecl	args [ 3 ]		4716642	0					
ANR	4716672	IdentifierDeclType	unsigned int [ 3 ]		4716642	0					
ANR	4716673	Identifier	args		4716642	1					
ANR	4716674	PrimaryExpression	3		4716642	2					
ANR	4716675	IfStatement	if ( DprintfBroken || ! _condor_dprintf_works || DebugLogs -> empty ( ) )		4716642	7					
ANR	4716676	Condition	DprintfBroken || ! _condor_dprintf_works || DebugLogs -> empty ( )	1718:5:46558:46618	4716642	0	True				
ANR	4716677	OrExpression	DprintfBroken || ! _condor_dprintf_works || DebugLogs -> empty ( )		4716642	0		||			
ANR	4716678	Identifier	DprintfBroken		4716642	0					
ANR	4716679	OrExpression	! _condor_dprintf_works || DebugLogs -> empty ( )		4716642	1		||			
ANR	4716680	UnaryOperationExpression	! _condor_dprintf_works		4716642	0					
ANR	4716681	UnaryOperator	!		4716642	0					
ANR	4716682	Identifier	_condor_dprintf_works		4716642	1					
ANR	4716683	CallExpression	DebugLogs -> empty ( )		4716642	1					
ANR	4716684	Callee	DebugLogs -> empty		4716642	0					
ANR	4716685	PtrMemberAccess	DebugLogs -> empty		4716642	0					
ANR	4716686	Identifier	DebugLogs		4716642	0					
ANR	4716687	Identifier	empty		4716642	1					
ANR	4716688	ArgumentList			4716642	1					
ANR	4716689	CompoundStatement		15:68:439:439	4716642	1					
ANR	4716690	ExpressionStatement	fd = 2	1725:2:46951:46957	4716642	0	True				
ANR	4716691	AssignmentExpression	fd = 2		4716642	0		=			
ANR	4716692	Identifier	fd		4716642	0					
ANR	4716693	PrimaryExpression	2		4716642	1					
ANR	4716694	ElseStatement	else		4716642	0					
ANR	4716695	CompoundStatement		24:6:786:786	4716642	0					
ANR	4716696	ExpressionStatement	orig_euid = geteuid ( )	1731:2:47137:47158	4716642	0	True				
ANR	4716697	AssignmentExpression	orig_euid = geteuid ( )		4716642	0		=			
ANR	4716698	Identifier	orig_euid		4716642	0					
ANR	4716699	CallExpression	geteuid ( )		4716642	1					
ANR	4716700	Callee	geteuid		4716642	0					
ANR	4716701	Identifier	geteuid		4716642	0					
ANR	4716702	ArgumentList			4716642	1					
ANR	4716703	ExpressionStatement	orig_egid = getegid ( )	1732:2:47162:47183	4716642	1	True				
ANR	4716704	AssignmentExpression	orig_egid = getegid ( )		4716642	0		=			
ANR	4716705	Identifier	orig_egid		4716642	0					
ANR	4716706	CallExpression	getegid ( )		4716642	1					
ANR	4716707	Callee	getegid		4716642	0					
ANR	4716708	Identifier	getegid		4716642	0					
ANR	4716709	ArgumentList			4716642	1					
ANR	4716710	ExpressionStatement	orig_priv_state = get_priv_state ( )	1733:2:47187:47221	4716642	2	True				
ANR	4716711	AssignmentExpression	orig_priv_state = get_priv_state ( )		4716642	0		=			
ANR	4716712	Identifier	orig_priv_state		4716642	0					
ANR	4716713	CallExpression	get_priv_state ( )		4716642	1					
ANR	4716714	Callee	get_priv_state		4716642	0					
ANR	4716715	Identifier	get_priv_state		4716642	0					
ANR	4716716	ArgumentList			4716642	1					
ANR	4716717	IfStatement	if ( orig_priv_state != PRIV_CONDOR )		4716642	3					
ANR	4716718	Condition	orig_priv_state != PRIV_CONDOR	1734:6:47229:47258	4716642	0	True				
ANR	4716719	EqualityExpression	orig_priv_state != PRIV_CONDOR		4716642	0		!=			
ANR	4716720	Identifier	orig_priv_state		4716642	0					
ANR	4716721	Identifier	PRIV_CONDOR		4716642	1					
ANR	4716722	CompoundStatement		31:39:1080:1080	4716642	1					
ANR	4716723	ExpressionStatement	setegid ( getgid ( ) )	1739:3:47474:47491	4716642	0	True				
ANR	4716724	CallExpression	setegid ( getgid ( ) )		4716642	0					
ANR	4716725	Callee	setegid		4716642	0					
ANR	4716726	Identifier	setegid		4716642	0					
ANR	4716727	ArgumentList	getgid ( )		4716642	1					
ANR	4716728	Argument	getgid ( )		4716642	0					
ANR	4716729	CallExpression	getgid ( )		4716642	0					
ANR	4716730	Callee	getgid		4716642	0					
ANR	4716731	Identifier	getgid		4716642	0					
ANR	4716732	ArgumentList			4716642	1					
ANR	4716733	ExpressionStatement	seteuid ( getuid ( ) )	1740:3:47496:47513	4716642	1	True				
ANR	4716734	CallExpression	seteuid ( getuid ( ) )		4716642	0					
ANR	4716735	Callee	seteuid		4716642	0					
ANR	4716736	Identifier	seteuid		4716642	0					
ANR	4716737	ArgumentList	getuid ( )		4716642	1					
ANR	4716738	Argument	getuid ( )		4716642	0					
ANR	4716739	CallExpression	getuid ( )		4716642	0					
ANR	4716740	Callee	getuid		4716642	0					
ANR	4716741	Identifier	getuid		4716642	0					
ANR	4716742	ArgumentList			4716642	1					
ANR	4716743	ExpressionStatement	"fd = safe_open_wrapper_follow ( DebugLogs -> begin ( ) -> logPath . c_str ( ) , O_APPEND | O_WRONLY | O_CREAT , 0644 )"	1743:2:47522:47619	4716642	4	True				
ANR	4716744	AssignmentExpression	"fd = safe_open_wrapper_follow ( DebugLogs -> begin ( ) -> logPath . c_str ( ) , O_APPEND | O_WRONLY | O_CREAT , 0644 )"		4716642	0		=			
ANR	4716745	Identifier	fd		4716642	0					
ANR	4716746	CallExpression	"safe_open_wrapper_follow ( DebugLogs -> begin ( ) -> logPath . c_str ( ) , O_APPEND | O_WRONLY | O_CREAT , 0644 )"		4716642	1					
ANR	4716747	Callee	safe_open_wrapper_follow		4716642	0					
ANR	4716748	Identifier	safe_open_wrapper_follow		4716642	0					
ANR	4716749	ArgumentList	DebugLogs -> begin ( ) -> logPath . c_str ( )		4716642	1					
ANR	4716750	Argument	DebugLogs -> begin ( ) -> logPath . c_str ( )		4716642	0					
ANR	4716751	CallExpression	DebugLogs -> begin ( ) -> logPath . c_str ( )		4716642	0					
ANR	4716752	Callee	DebugLogs -> begin ( ) -> logPath . c_str		4716642	0					
ANR	4716753	MemberAccess	DebugLogs -> begin ( ) -> logPath . c_str		4716642	0					
ANR	4716754	PtrMemberAccess	DebugLogs -> begin ( ) -> logPath		4716642	0					
ANR	4716755	CallExpression	DebugLogs -> begin ( )		4716642	0					
ANR	4716756	Callee	DebugLogs -> begin		4716642	0					
ANR	4716757	PtrMemberAccess	DebugLogs -> begin		4716642	0					
ANR	4716758	Identifier	DebugLogs		4716642	0					
ANR	4716759	Identifier	begin		4716642	1					
ANR	4716760	ArgumentList			4716642	1					
ANR	4716761	Identifier	logPath		4716642	1					
ANR	4716762	Identifier	c_str		4716642	1					
ANR	4716763	ArgumentList			4716642	1					
ANR	4716764	Argument	O_APPEND | O_WRONLY | O_CREAT		4716642	1					
ANR	4716765	InclusiveOrExpression	O_APPEND | O_WRONLY | O_CREAT		4716642	0		|			
ANR	4716766	Identifier	O_APPEND		4716642	0					
ANR	4716767	InclusiveOrExpression	O_WRONLY | O_CREAT		4716642	1		|			
ANR	4716768	Identifier	O_WRONLY		4716642	0					
ANR	4716769	Identifier	O_CREAT		4716642	1					
ANR	4716770	Argument	0644		4716642	2					
ANR	4716771	PrimaryExpression	0644		4716642	0					
ANR	4716772	IfStatement	if ( orig_priv_state != PRIV_CONDOR )		4716642	5					
ANR	4716773	Condition	orig_priv_state != PRIV_CONDOR	1745:6:47628:47657	4716642	0	True				
ANR	4716774	EqualityExpression	orig_priv_state != PRIV_CONDOR		4716642	0		!=			
ANR	4716775	Identifier	orig_priv_state		4716642	0					
ANR	4716776	Identifier	PRIV_CONDOR		4716642	1					
ANR	4716777	CompoundStatement		42:39:1479:1479	4716642	1					
ANR	4716778	ExpressionStatement	setegid ( orig_egid )	1746:3:47666:47684	4716642	0	True				
ANR	4716779	CallExpression	setegid ( orig_egid )		4716642	0					
ANR	4716780	Callee	setegid		4716642	0					
ANR	4716781	Identifier	setegid		4716642	0					
ANR	4716782	ArgumentList	orig_egid		4716642	1					
ANR	4716783	Argument	orig_egid		4716642	0					
ANR	4716784	Identifier	orig_egid		4716642	0					
ANR	4716785	ExpressionStatement	seteuid ( orig_euid )	1747:3:47689:47707	4716642	1	True				
ANR	4716786	CallExpression	seteuid ( orig_euid )		4716642	0					
ANR	4716787	Callee	seteuid		4716642	0					
ANR	4716788	Identifier	seteuid		4716642	0					
ANR	4716789	ArgumentList	orig_euid		4716642	1					
ANR	4716790	Argument	orig_euid		4716642	0					
ANR	4716791	Identifier	orig_euid		4716642	0					
ANR	4716792	IfStatement	if ( fd == - 1 )		4716642	6					
ANR	4716793	Condition	fd == - 1	1750:6:47720:47725	4716642	0	True				
ANR	4716794	EqualityExpression	fd == - 1		4716642	0		==			
ANR	4716795	Identifier	fd		4716642	0					
ANR	4716796	UnaryOperationExpression	- 1		4716642	1					
ANR	4716797	UnaryOperator	-		4716642	0					
ANR	4716798	PrimaryExpression	1		4716642	1					
ANR	4716799	CompoundStatement		47:15:1547:1547	4716642	1					
ANR	4716800	ExpressionStatement	fd = 2	1751:3:47734:47738	4716642	0	True				
ANR	4716801	AssignmentExpression	fd = 2		4716642	0		=			
ANR	4716802	Identifier	fd		4716642	0					
ANR	4716803	PrimaryExpression	2		4716642	1					
ANR	4716804	ExpressionStatement	"trace_size = backtrace ( trace , 50 )"	1755:1:47749:47781	4716642	8	True				
ANR	4716805	AssignmentExpression	"trace_size = backtrace ( trace , 50 )"		4716642	0		=			
ANR	4716806	Identifier	trace_size		4716642	0					
ANR	4716807	CallExpression	"backtrace ( trace , 50 )"		4716642	1					
ANR	4716808	Callee	backtrace		4716642	0					
ANR	4716809	Identifier	backtrace		4716642	0					
ANR	4716810	ArgumentList	trace		4716642	1					
ANR	4716811	Argument	trace		4716642	0					
ANR	4716812	Identifier	trace		4716642	0					
ANR	4716813	Argument	50		4716642	1					
ANR	4716814	PrimaryExpression	50		4716642	0					
ANR	4716815	ExpressionStatement	args [ 0 ] = ( unsigned int ) getpid ( )	1759:1:47917:47949	4716642	9	True				
ANR	4716816	AssignmentExpression	args [ 0 ] = ( unsigned int ) getpid ( )		4716642	0		=			
ANR	4716817	ArrayIndexing	args [ 0 ]		4716642	0					
ANR	4716818	Identifier	args		4716642	0					
ANR	4716819	PrimaryExpression	0		4716642	1					
ANR	4716820	CastExpression	( unsigned int ) getpid ( )		4716642	1					
ANR	4716821	CastTarget	unsigned int		4716642	0					
ANR	4716822	CallExpression	getpid ( )		4716642	1					
ANR	4716823	Callee	getpid		4716642	0					
ANR	4716824	Identifier	getpid		4716642	0					
ANR	4716825	ArgumentList			4716642	1					
ANR	4716826	ExpressionStatement	args [ 1 ] = ( unsigned int ) time ( NULL )	1760:1:47952:47986	4716642	10	True				
ANR	4716827	AssignmentExpression	args [ 1 ] = ( unsigned int ) time ( NULL )		4716642	0		=			
ANR	4716828	ArrayIndexing	args [ 1 ]		4716642	0					
ANR	4716829	Identifier	args		4716642	0					
ANR	4716830	PrimaryExpression	1		4716642	1					
ANR	4716831	CastExpression	( unsigned int ) time ( NULL )		4716642	1					
ANR	4716832	CastTarget	unsigned int		4716642	0					
ANR	4716833	CallExpression	time ( NULL )		4716642	1					
ANR	4716834	Callee	time		4716642	0					
ANR	4716835	Identifier	time		4716642	0					
ANR	4716836	ArgumentList	NULL		4716642	1					
ANR	4716837	Argument	NULL		4716642	0					
ANR	4716838	Identifier	NULL		4716642	0					
ANR	4716839	ExpressionStatement	args [ 2 ] = ( unsigned int ) trace_size	1761:1:47989:48023	4716642	11	True				
ANR	4716840	AssignmentExpression	args [ 2 ] = ( unsigned int ) trace_size		4716642	0		=			
ANR	4716841	ArrayIndexing	args [ 2 ]		4716642	0					
ANR	4716842	Identifier	args		4716642	0					
ANR	4716843	PrimaryExpression	2		4716642	1					
ANR	4716844	CastExpression	( unsigned int ) trace_size		4716642	1					
ANR	4716845	CastTarget	unsigned int		4716642	0					
ANR	4716846	Identifier	trace_size		4716642	1					
ANR	4716847	ExpressionStatement	"safe_async_simple_fwrite_fd ( fd , ""Stack dump for process %0 at timestamp %1 (%2 frames)\\n"" , args , 3 )"	1762:1:48026:48122	4716642	12	True				
ANR	4716848	CallExpression	"safe_async_simple_fwrite_fd ( fd , ""Stack dump for process %0 at timestamp %1 (%2 frames)\\n"" , args , 3 )"		4716642	0					
ANR	4716849	Callee	safe_async_simple_fwrite_fd		4716642	0					
ANR	4716850	Identifier	safe_async_simple_fwrite_fd		4716642	0					
ANR	4716851	ArgumentList	fd		4716642	1					
ANR	4716852	Argument	fd		4716642	0					
ANR	4716853	Identifier	fd		4716642	0					
ANR	4716854	Argument	"""Stack dump for process %0 at timestamp %1 (%2 frames)\\n"""		4716642	1					
ANR	4716855	PrimaryExpression	"""Stack dump for process %0 at timestamp %1 (%2 frames)\\n"""		4716642	0					
ANR	4716856	Argument	args		4716642	2					
ANR	4716857	Identifier	args		4716642	0					
ANR	4716858	Argument	3		4716642	3					
ANR	4716859	PrimaryExpression	3		4716642	0					
ANR	4716860	ExpressionStatement	"backtrace_symbols_fd ( trace , trace_size , fd )"	1764:1:48126:48167	4716642	13	True				
ANR	4716861	CallExpression	"backtrace_symbols_fd ( trace , trace_size , fd )"		4716642	0					
ANR	4716862	Callee	backtrace_symbols_fd		4716642	0					
ANR	4716863	Identifier	backtrace_symbols_fd		4716642	0					
ANR	4716864	ArgumentList	trace		4716642	1					
ANR	4716865	Argument	trace		4716642	0					
ANR	4716866	Identifier	trace		4716642	0					
ANR	4716867	Argument	trace_size		4716642	1					
ANR	4716868	Identifier	trace_size		4716642	0					
ANR	4716869	Argument	fd		4716642	2					
ANR	4716870	Identifier	fd		4716642	0					
ANR	4716871	IfStatement	if ( fd != 2 )		4716642	14					
ANR	4716872	Condition	fd != 2	1766:5:48175:48179	4716642	0	True				
ANR	4716873	EqualityExpression	fd != 2		4716642	0		!=			
ANR	4716874	Identifier	fd		4716642	0					
ANR	4716875	PrimaryExpression	2		4716642	1					
ANR	4716876	CompoundStatement		63:12:2000:2000	4716642	1					
ANR	4716877	ExpressionStatement	close ( fd )	1767:2:48186:48195	4716642	0	True				
ANR	4716878	CallExpression	close ( fd )		4716642	0					
ANR	4716879	Callee	close		4716642	0					
ANR	4716880	Identifier	close		4716642	0					
ANR	4716881	ArgumentList	fd		4716642	1					
ANR	4716882	Argument	fd		4716642	0					
ANR	4716883	Identifier	fd		4716642	0					
ANR	4716884	ReturnType	void		4716642	1					
ANR	4716885	Identifier	dprintf_dump_stack		4716642	2					
ANR	4716886	ParameterList			4716642	3					
ANR	4716887	CFGEntryNode	ENTRY		4716642		True				
ANR	4716888	CFGExitNode	EXIT		4716642		True				
ANR	4716889	Symbol	safe_open_wrapper_follow		4716642						
ANR	4716890	Symbol	orig_euid		4716642						
ANR	4716891	Symbol	backtrace		4716642						
ANR	4716892	Symbol	orig_priv_state		4716642						
ANR	4716893	Symbol	O_CREAT		4716642						
ANR	4716894	Symbol	_condor_dprintf_works		4716642						
ANR	4716895	Symbol	DebugLogs -> begin ( ) -> logPath		4716642						
ANR	4716896	Symbol	get_priv_state		4716642						
ANR	4716897	Symbol	* args		4716642						
ANR	4716898	Symbol	DprintfBroken		4716642						
ANR	4716899	Symbol	trace		4716642						
ANR	4716900	Symbol	* * DebugLogs		4716642						
ANR	4716901	Symbol	* DebugLogs		4716642						
ANR	4716902	Symbol	trace_size		4716642						
ANR	4716903	Symbol	getegid		4716642						
ANR	4716904	Symbol	DebugLogs		4716642						
ANR	4716905	Symbol	NULL		4716642						
ANR	4716906	Symbol	getgid		4716642						
ANR	4716907	Symbol	DebugLogs -> empty		4716642						
ANR	4716908	Symbol	geteuid		4716642						
ANR	4716909	Symbol	O_APPEND		4716642						
ANR	4716910	Symbol	args		4716642						
ANR	4716911	Symbol	DebugLogs -> begin ( ) -> logPath . c_str		4716642						
ANR	4716912	Symbol	getuid		4716642						
ANR	4716913	Symbol	* DebugLogs -> begin		4716642						
ANR	4716914	Symbol	orig_egid		4716642						
ANR	4716915	Symbol	DebugLogs -> begin		4716642						
ANR	4716916	Symbol	time		4716642						
ANR	4716917	Symbol	PRIV_CONDOR		4716642						
ANR	4716918	Symbol	O_WRONLY		4716642						
ANR	4716919	Symbol	getpid		4716642						
ANR	4716920	Symbol	fd		4716642						
ANR	4716921	Function	debug_open_fds	1774:0:48218:48529							
ANR	4716922	FunctionDef	"debug_open_fds (std :: map < int , bool > & open_fds)"		4716921	0					
ANR	4716923	CompoundStatement		1775:0:48268:48529	4716921	0					
ANR	4716924	IdentifierDeclStatement	bool found = false ;	1776:1:48271:48289	4716921	0	True				
ANR	4716925	IdentifierDecl	found = false		4716921	0					
ANR	4716926	IdentifierDeclType	bool		4716921	0					
ANR	4716927	Identifier	found		4716921	1					
ANR	4716928	AssignmentExpression	found = false		4716921	2		=			
ANR	4716929	Identifier	false		4716921	0					
ANR	4716930	Identifier	false		4716921	1					
ANR	4716931	IdentifierDeclStatement	std :: vector < DebugFileInfo > :: iterator it ;	1777:1:48292:48331	4716921	1	True				
ANR	4716932	IdentifierDecl	it		4716921	0					
ANR	4716933	IdentifierDeclType	std :: vector < DebugFileInfo > :: iterator		4716921	0					
ANR	4716934	Identifier	it		4716921	1					
ANR	4716935	ForStatement	for ( it = DebugLogs -> begin ( ) ; it < DebugLogs -> end ( ) ; it ++ )		4716921	2					
ANR	4716936	ForInit	it = DebugLogs -> begin ( ) ;	1779:5:48339:48362	4716921	0	True				
ANR	4716937	AssignmentExpression	it = DebugLogs -> begin ( )		4716921	0		=			
ANR	4716938	Identifier	it		4716921	0					
ANR	4716939	CallExpression	DebugLogs -> begin ( )		4716921	1					
ANR	4716940	Callee	DebugLogs -> begin		4716921	0					
ANR	4716941	PtrMemberAccess	DebugLogs -> begin		4716921	0					
ANR	4716942	Identifier	DebugLogs		4716921	0					
ANR	4716943	Identifier	begin		4716921	1					
ANR	4716944	ArgumentList			4716921	1					
ANR	4716945	Condition	it < DebugLogs -> end ( )	1779:30:48364:48384	4716921	1	True				
ANR	4716946	RelationalExpression	it < DebugLogs -> end ( )		4716921	0		<			
ANR	4716947	Identifier	it		4716921	0					
ANR	4716948	CallExpression	DebugLogs -> end ( )		4716921	1					
ANR	4716949	Callee	DebugLogs -> end		4716921	0					
ANR	4716950	PtrMemberAccess	DebugLogs -> end		4716921	0					
ANR	4716951	Identifier	DebugLogs		4716921	0					
ANR	4716952	Identifier	end		4716921	1					
ANR	4716953	ArgumentList			4716921	1					
ANR	4716954	PostIncDecOperationExpression	it ++	1779:53:48387:48390	4716921	2	True				
ANR	4716955	Identifier	it		4716921	0					
ANR	4716956	IncDec	++		4716921	1					
ANR	4716957	CompoundStatement		6:1:125:125	4716921	3					
ANR	4716958	IfStatement	if ( ! it -> debugFP )		4716921	0					
ANR	4716959	Condition	! it -> debugFP	1781:5:48401:48412	4716921	0	True				
ANR	4716960	UnaryOperationExpression	! it -> debugFP		4716921	0					
ANR	4716961	UnaryOperator	!		4716921	0					
ANR	4716962	PtrMemberAccess	it -> debugFP		4716921	1					
ANR	4716963	Identifier	it		4716921	0					
ANR	4716964	Identifier	debugFP		4716921	1					
ANR	4716965	ContinueStatement	continue ;	1782:3:48418:48426	4716921	1	True				
ANR	4716966	ExpressionStatement	"open_fds . insert ( std :: pair < int , bool > ( fileno ( it -> debugFP ) , true ) )"	1783:2:48430:48492	4716921	1	True				
ANR	4716967	CallExpression	"open_fds . insert ( std :: pair < int , bool > ( fileno ( it -> debugFP ) , true ) )"		4716921	0					
ANR	4716968	Callee	open_fds . insert		4716921	0					
ANR	4716969	MemberAccess	open_fds . insert		4716921	0					
ANR	4716970	Identifier	open_fds		4716921	0					
ANR	4716971	Identifier	insert		4716921	1					
ANR	4716972	ArgumentList	std :: pair < int		4716921	1					
ANR	4716973	Argument	std :: pair < int		4716921	0					
ANR	4716974	RelationalExpression	std :: pair < int		4716921	0		<			
ANR	4716975	Identifier	std :: pair		4716921	0					
ANR	4716976	Identifier	int		4716921	1					
ANR	4716977	Argument	"bool > ( fileno ( it -> debugFP ) , true )"		4716921	1					
ANR	4716978	RelationalExpression	"bool > ( fileno ( it -> debugFP ) , true )"		4716921	0		>			
ANR	4716979	Identifier	bool		4716921	0					
ANR	4716980	Expression	"fileno ( it -> debugFP ) , true"		4716921	1					
ANR	4716981	CallExpression	fileno ( it -> debugFP )		4716921	0					
ANR	4716982	Callee	fileno		4716921	0					
ANR	4716983	Identifier	fileno		4716921	0					
ANR	4716984	ArgumentList	it -> debugFP		4716921	1					
ANR	4716985	Argument	it -> debugFP		4716921	0					
ANR	4716986	PtrMemberAccess	it -> debugFP		4716921	0					
ANR	4716987	Identifier	it		4716921	0					
ANR	4716988	Identifier	debugFP		4716921	1					
ANR	4716989	Identifier	true		4716921	1					
ANR	4716990	ExpressionStatement	found = true	1784:2:48496:48508	4716921	2	True				
ANR	4716991	AssignmentExpression	found = true		4716921	0		=			
ANR	4716992	Identifier	found		4716921	0					
ANR	4716993	Identifier	true		4716921	1					
ANR	4716994	ReturnStatement	return found ;	1787:1:48515:48527	4716921	3	True				
ANR	4716995	Identifier	found		4716921	0					
ANR	4716996	ReturnType	bool		4716921	1					
ANR	4716997	Identifier	debug_open_fds		4716921	2					
ANR	4716998	ParameterList	"std :: map < int , bool > & open_fds"		4716921	3					
ANR	4716999	Parameter	"std :: map < int , bool > & open_fds"	1774:20:48238:48265	4716921	0	True				
ANR	4717000	ParameterType	"std :: map < int , bool > &"		4716921	0					
ANR	4717001	Identifier	open_fds		4716921	1					
ANR	4717002	CFGEntryNode	ENTRY		4716921		True				
ANR	4717003	CFGExitNode	EXIT		4716921		True				
ANR	4717004	Symbol	DebugLogs -> end		4716921						
ANR	4717005	Symbol	std :: pair		4716921						
ANR	4717006	Symbol	bool		4716921						
ANR	4717007	Symbol	false		4716921						
ANR	4717008	Symbol	it		4716921						
ANR	4717009	Symbol	int		4716921						
ANR	4717010	Symbol	open_fds		4716921						
ANR	4717011	Symbol	* it		4716921						
ANR	4717012	Symbol	found		4716921						
ANR	4717013	Symbol	fileno		4716921						
ANR	4717014	Symbol	true		4716921						
ANR	4717015	Symbol	DebugLogs -> begin		4716921						
ANR	4717016	Symbol	it -> debugFP		4716921						
ANR	4717017	Symbol	* DebugLogs		4716921						
ANR	4717018	Symbol	DebugLogs		4716921						
ANR	4717019	Function	dprintf_dump_stack	1791:0:48561:48641							
ANR	4717020	FunctionDef	dprintf_dump_stack ()		4717019	0					
ANR	4717021	CompoundStatement		1792:25:48591:48641	4717019	0					
ANR	4717022	ReturnType	void		4717019	1					
ANR	4717023	Identifier	dprintf_dump_stack		4717019	2					
ANR	4717024	ParameterList			4717019	3					
ANR	4717025	CFGEntryNode	ENTRY		4717019		True				
ANR	4717026	CFGExitNode	EXIT		4717019		True				
