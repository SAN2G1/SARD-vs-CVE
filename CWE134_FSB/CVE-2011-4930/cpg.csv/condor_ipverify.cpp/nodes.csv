command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	918177	File	data/converged/CVE-2011-4930_htcondor/condor_ipverify.cpp								
ANR	918178	DeclStmt									
ANR	918179	Decl							const char	const char [ ]	TotallyWild
ANR	918180	Function	compute_perm_hash	40:0:1220:1551							
ANR	918181	FunctionDef	compute_perm_hash (const in6_addr & in_addr)		918180	0					
ANR	918182	CompoundStatement		42:0:1283:1551	918180	0					
ANR	918183	IdentifierDeclStatement	int Len = sizeof ( in6_addr ) ;	44:1:1338:1364	918180	0	True				
ANR	918184	IdentifierDecl	Len = sizeof ( in6_addr )		918180	0					
ANR	918185	IdentifierDeclType	int		918180	0					
ANR	918186	Identifier	Len		918180	1					
ANR	918187	AssignmentExpression	Len = sizeof ( in6_addr )		918180	2		=			
ANR	918188	Identifier	Len		918180	0					
ANR	918189	SizeofExpression	sizeof ( in6_addr )		918180	1					
ANR	918190	Sizeof	sizeof		918180	0					
ANR	918191	SizeofOperand	in6_addr		918180	1					
ANR	918192	IdentifierDeclStatement	const unsigned char * Data = ( const unsigned char * ) & in_addr ;	45:1:1367:1425	918180	1	True				
ANR	918193	IdentifierDecl	* Data = ( const unsigned char * ) & in_addr		918180	0					
ANR	918194	IdentifierDeclType	const unsigned char *		918180	0					
ANR	918195	Identifier	Data		918180	1					
ANR	918196	AssignmentExpression	* Data = ( const unsigned char * ) & in_addr		918180	2		=			
ANR	918197	Identifier	Data		918180	0					
ANR	918198	CastExpression	( const unsigned char * ) & in_addr		918180	1					
ANR	918199	CastTarget	const unsigned char *		918180	0					
ANR	918200	UnaryOperationExpression	& in_addr		918180	1					
ANR	918201	UnaryOperator	&		918180	0					
ANR	918202	Identifier	in_addr		918180	1					
ANR	918203	IdentifierDeclStatement	int i ;	46:1:1428:1433	918180	2	True				
ANR	918204	IdentifierDecl	i		918180	0					
ANR	918205	IdentifierDeclType	int		918180	0					
ANR	918206	Identifier	i		918180	1					
ANR	918207	IdentifierDeclStatement	unsigned int result = 0 ;	47:1:1436:1459	918180	3	True				
ANR	918208	IdentifierDecl	result = 0		918180	0					
ANR	918209	IdentifierDeclType	unsigned int		918180	0					
ANR	918210	Identifier	result		918180	1					
ANR	918211	AssignmentExpression	result = 0		918180	2		=			
ANR	918212	Identifier	result		918180	0					
ANR	918213	PrimaryExpression	0		918180	1					
ANR	918214	ForStatement	for ( i = 0 ; i < Len ; i ++ )		918180	4					
ANR	918215	ForInit	i = 0 ;	48:5:1466:1471	918180	0	True				
ANR	918216	AssignmentExpression	i = 0		918180	0		=			
ANR	918217	Identifier	i		918180	0					
ANR	918218	PrimaryExpression	0		918180	1					
ANR	918219	Condition	i < Len	48:12:1473:1479	918180	1	True				
ANR	918220	RelationalExpression	i < Len		918180	0		<			
ANR	918221	Identifier	i		918180	0					
ANR	918222	Identifier	Len		918180	1					
ANR	918223	PostIncDecOperationExpression	i ++	48:21:1482:1484	918180	2	True				
ANR	918224	Identifier	i		918180	0					
ANR	918225	IncDec	++		918180	1					
ANR	918226	CompoundStatement		7:26:203:203	918180	3					
ANR	918227	ExpressionStatement	result = ( result << 5 ) + result + Data [ i ]	49:2:1491:1530	918180	0	True				
ANR	918228	AssignmentExpression	result = ( result << 5 ) + result + Data [ i ]		918180	0		=			
ANR	918229	Identifier	result		918180	0					
ANR	918230	AdditiveExpression	( result << 5 ) + result + Data [ i ]		918180	1		+			
ANR	918231	ShiftExpression	result << 5		918180	0		<<			
ANR	918232	Identifier	result		918180	0					
ANR	918233	PrimaryExpression	5		918180	1					
ANR	918234	AdditiveExpression	result + Data [ i ]		918180	1		+			
ANR	918235	Identifier	result		918180	0					
ANR	918236	ArrayIndexing	Data [ i ]		918180	1					
ANR	918237	Identifier	Data		918180	0					
ANR	918238	Identifier	i		918180	1					
ANR	918239	ReturnStatement	return result ;	51:1:1536:1549	918180	5	True				
ANR	918240	Identifier	result		918180	0					
ANR	918241	ReturnType	static unsigned int		918180	1					
ANR	918242	Identifier	compute_perm_hash		918180	2					
ANR	918243	ParameterList	const in6_addr & in_addr		918180	3					
ANR	918244	Parameter	const in6_addr & in_addr	41:18:1258:1280	918180	0	True				
ANR	918245	ParameterType	const in6_addr &		918180	0					
ANR	918246	Identifier	in_addr		918180	1					
ANR	918247	CFGEntryNode	ENTRY		918180		True				
ANR	918248	CFGExitNode	EXIT		918180		True				
ANR	918249	Symbol	in_addr		918180						
ANR	918250	Symbol	result		918180						
ANR	918251	Symbol	* i		918180						
ANR	918252	Symbol	Len		918180						
ANR	918253	Symbol	& in_addr		918180						
ANR	918254	Symbol	i		918180						
ANR	918255	Symbol	Data		918180						
ANR	918256	Symbol	* Data		918180						
ANR	918257	Function	compute_host_hash	55:0:1604:1692							
ANR	918258	FunctionDef	compute_host_hash (const MyString & str)		918257	0					
ANR	918259	CompoundStatement		57:0:1666:1692	918257	0					
ANR	918260	ReturnStatement	return ( str . Hash ( ) ) ;	58:1:1669:1690	918257	0	True				
ANR	918261	CallExpression	str . Hash ( )		918257	0					
ANR	918262	Callee	str . Hash		918257	0					
ANR	918263	MemberAccess	str . Hash		918257	0					
ANR	918264	Identifier	str		918257	0					
ANR	918265	Identifier	Hash		918257	1					
ANR	918266	ArgumentList			918257	1					
ANR	918267	ReturnType	static unsigned int		918257	1					
ANR	918268	Identifier	compute_host_hash		918257	2					
ANR	918269	ParameterList	const MyString & str		918257	3					
ANR	918270	Parameter	const MyString & str	56:19:1643:1662	918257	0	True				
ANR	918271	ParameterType	const MyString &		918257	0					
ANR	918272	Identifier	str		918257	1					
ANR	918273	CFGEntryNode	ENTRY		918257		True				
ANR	918274	CFGExitNode	EXIT		918257		True				
ANR	918275	Symbol	str		918257						
ANR	918276	Symbol	str . Hash		918257						
ANR	918277	Function	operator ==	62:0:1766:1858							
ANR	918278	FunctionDef	"operator == (const in6_addr & a , const in6_addr & b)"		918277	0					
ANR	918279	CompoundStatement		62:54:1820:1858	918277	0					
ANR	918280	ReturnStatement	"return IN6_ARE_ADDR_EQUAL ( & a , & b ) ;"	63:1:1823:1856	918277	0	True				
ANR	918281	CallExpression	"IN6_ARE_ADDR_EQUAL ( & a , & b )"		918277	0					
ANR	918282	Callee	IN6_ARE_ADDR_EQUAL		918277	0					
ANR	918283	Identifier	IN6_ARE_ADDR_EQUAL		918277	0					
ANR	918284	ArgumentList	& a		918277	1					
ANR	918285	Argument	& a		918277	0					
ANR	918286	UnaryOperationExpression	& a		918277	0					
ANR	918287	UnaryOperator	&		918277	0					
ANR	918288	Identifier	a		918277	1					
ANR	918289	Argument	& b		918277	1					
ANR	918290	UnaryOperationExpression	& b		918277	0					
ANR	918291	UnaryOperator	&		918277	0					
ANR	918292	Identifier	b		918277	1					
ANR	918293	ReturnType	bool		918277	1					
ANR	918294	Identifier	operator ==		918277	2					
ANR	918295	ParameterList	"const in6_addr & a , const in6_addr & b"		918277	3					
ANR	918296	Parameter	const in6_addr & a	62:16:1782:1798	918277	0	True				
ANR	918297	ParameterType	const in6_addr &		918277	0					
ANR	918298	Identifier	a		918277	1					
ANR	918299	Parameter	const in6_addr & b	62:35:1801:1817	918277	1	True				
ANR	918300	ParameterType	const in6_addr &		918277	0					
ANR	918301	Identifier	b		918277	1					
ANR	918302	CFGEntryNode	ENTRY		918277		True				
ANR	918303	CFGExitNode	EXIT		918277		True				
ANR	918304	Symbol	a		918277						
ANR	918305	Symbol	b		918277						
ANR	918306	Symbol	& a		918277						
ANR	918307	Symbol	& b		918277						
ANR	918308	Symbol	IN6_ARE_ADDR_EQUAL		918277						
ANR	918309	Function	IpVerify :: IpVerify	67:0:1876:2132							
ANR	918310	FunctionDef	IpVerify :: IpVerify ()		918309	0					
ANR	918311	CompoundStatement		68:0:1898:2132	918309	0					
ANR	918312	ExpressionStatement	did_init = FALSE	69:1:1901:1917	918309	0	True				
ANR	918313	AssignmentExpression	did_init = FALSE		918309	0		=			
ANR	918314	Identifier	did_init		918309	0					
ANR	918315	Identifier	FALSE		918309	1					
ANR	918316	IdentifierDeclStatement	DCpermission perm ;	71:1:1921:1938	918309	1	True				
ANR	918317	IdentifierDecl	perm		918309	0					
ANR	918318	IdentifierDeclType	DCpermission		918309	0					
ANR	918319	Identifier	perm		918309	1					
ANR	918320	ForStatement	for ( perm = FIRST_PERM ; perm < LAST_PERM ; perm = NEXT_PERM ( perm ) )		918309	2					
ANR	918321	ForInit	perm = FIRST_PERM ;	72:6:1946:1961	918309	0	True				
ANR	918322	AssignmentExpression	perm = FIRST_PERM		918309	0		=			
ANR	918323	Identifier	perm		918309	0					
ANR	918324	Identifier	FIRST_PERM		918309	1					
ANR	918325	Condition	perm < LAST_PERM	72:23:1963:1976	918309	1	True				
ANR	918326	RelationalExpression	perm < LAST_PERM		918309	0		<			
ANR	918327	Identifier	perm		918309	0					
ANR	918328	Identifier	LAST_PERM		918309	1					
ANR	918329	AssignmentExpression	perm = NEXT_PERM ( perm )	72:39:1979:1998	918309	2	True	=			
ANR	918330	Identifier	perm		918309	0					
ANR	918331	CallExpression	NEXT_PERM ( perm )		918309	1					
ANR	918332	Callee	NEXT_PERM		918309	0					
ANR	918333	Identifier	NEXT_PERM		918309	0					
ANR	918334	ArgumentList	perm		918309	1					
ANR	918335	Argument	perm		918309	0					
ANR	918336	Identifier	perm		918309	0					
ANR	918337	CompoundStatement		5:61:102:102	918309	3					
ANR	918338	ExpressionStatement	PermTypeArray [ perm ] = NULL	73:2:2005:2031	918309	0	True				
ANR	918339	AssignmentExpression	PermTypeArray [ perm ] = NULL		918309	0		=			
ANR	918340	ArrayIndexing	PermTypeArray [ perm ]		918309	0					
ANR	918341	Identifier	PermTypeArray		918309	0					
ANR	918342	Identifier	perm		918309	1					
ANR	918343	Identifier	NULL		918309	1					
ANR	918344	ExpressionStatement	PunchedHoleArray [ perm ] = NULL	74:2:2035:2064	918309	1	True				
ANR	918345	AssignmentExpression	PunchedHoleArray [ perm ] = NULL		918309	0		=			
ANR	918346	ArrayIndexing	PunchedHoleArray [ perm ]		918309	0					
ANR	918347	Identifier	PunchedHoleArray		918309	0					
ANR	918348	Identifier	perm		918309	1					
ANR	918349	Identifier	NULL		918309	1					
ANR	918350	ExpressionStatement	"PermHashTable = new PermHashTable_t ( 797 , compute_perm_hash )"	77:1:2071:2130	918309	3	True				
ANR	918351	AssignmentExpression	"PermHashTable = new PermHashTable_t ( 797 , compute_perm_hash )"		918309	0		=			
ANR	918352	Identifier	PermHashTable		918309	0					
ANR	918353	Expression	"797 , compute_perm_hash"		918309	1					
ANR	918354	PrimaryExpression	797		918309	0					
ANR	918355	Identifier	compute_perm_hash		918309	1					
ANR	918356	Identifier	IpVerify :: IpVerify		918309	1					
ANR	918357	ParameterList			918309	2					
ANR	918358	CFGEntryNode	ENTRY		918309		True				
ANR	918359	CFGExitNode	EXIT		918309		True				
ANR	918360	Symbol	LAST_PERM		918309						
ANR	918361	Symbol	NULL		918309						
ANR	918362	Symbol	did_init		918309						
ANR	918363	Symbol	perm		918309						
ANR	918364	Symbol	* PermTypeArray		918309						
ANR	918365	Symbol	* perm		918309						
ANR	918366	Symbol	FIRST_PERM		918309						
ANR	918367	Symbol	PermTypeArray		918309						
ANR	918368	Symbol	compute_perm_hash		918309						
ANR	918369	Symbol	PermHashTable		918309						
ANR	918370	Symbol	* PunchedHoleArray		918309						
ANR	918371	Symbol	FALSE		918309						
ANR	918372	Symbol	NEXT_PERM		918309						
ANR	918373	Symbol	PunchedHoleArray		918309						
ANR	918374	Function	IpVerify :: ~IpVerify	82:0:2150:2731							
ANR	918375	FunctionDef	IpVerify :: ~IpVerify ()		918374	0					
ANR	918376	CompoundStatement		83:0:2172:2731	918374	0					
ANR	918377	IfStatement	if ( PermHashTable )		918374	0					
ANR	918378	Condition	PermHashTable	86:5:2216:2228	918374	0	True				
ANR	918379	Identifier	PermHashTable		918374	0					
ANR	918380	CompoundStatement		7:2:132:150	918374	1					
ANR	918381	IdentifierDeclStatement	in6_addr key ;	88:2:2289:2301	918374	0	True				
ANR	918382	IdentifierDecl	key		918374	0					
ANR	918383	IdentifierDeclType	in6_addr		918374	0					
ANR	918384	Identifier	key		918374	1					
ANR	918385	IdentifierDeclStatement	UserPerm_t * value ;	89:2:2305:2323	918374	1	True				
ANR	918386	IdentifierDecl	* value		918374	0					
ANR	918387	IdentifierDeclType	UserPerm_t *		918374	0					
ANR	918388	Identifier	value		918374	1					
ANR	918389	ExpressionStatement	PermHashTable -> startIterations ( )	90:2:2327:2359	918374	2	True				
ANR	918390	CallExpression	PermHashTable -> startIterations ( )		918374	0					
ANR	918391	Callee	PermHashTable -> startIterations		918374	0					
ANR	918392	PtrMemberAccess	PermHashTable -> startIterations		918374	0					
ANR	918393	Identifier	PermHashTable		918374	0					
ANR	918394	Identifier	startIterations		918374	1					
ANR	918395	ArgumentList			918374	1					
ANR	918396	WhileStatement	"while ( PermHashTable -> iterate ( key , value ) )"		918374	3					
ANR	918397	Condition	"PermHashTable -> iterate ( key , value )"	92:9:2371:2404	918374	0	True				
ANR	918398	CallExpression	"PermHashTable -> iterate ( key , value )"		918374	0					
ANR	918399	Callee	PermHashTable -> iterate		918374	0					
ANR	918400	PtrMemberAccess	PermHashTable -> iterate		918374	0					
ANR	918401	Identifier	PermHashTable		918374	0					
ANR	918402	Identifier	iterate		918374	1					
ANR	918403	ArgumentList	key		918374	1					
ANR	918404	Argument	key		918374	0					
ANR	918405	Identifier	key		918374	0					
ANR	918406	Argument	value		918374	1					
ANR	918407	Identifier	value		918374	0					
ANR	918408	CompoundStatement		10:45:234:234	918374	1					
ANR	918409	Statement	delete	93:3:2412:2417	918374	0	True				
ANR	918410	ExpressionStatement	value	93:10:2419:2424	918374	1	True				
ANR	918411	Identifier	value		918374	0					
ANR	918412	Statement	delete	96:2:2433:2438	918374	4	True				
ANR	918413	ExpressionStatement	PermHashTable	96:9:2440:2453	918374	5	True				
ANR	918414	Identifier	PermHashTable		918374	0					
ANR	918415	IdentifierDeclStatement	DCpermission perm ;	100:1:2519:2536	918374	1	True				
ANR	918416	IdentifierDecl	perm		918374	0					
ANR	918417	IdentifierDeclType	DCpermission		918374	0					
ANR	918418	Identifier	perm		918374	1					
ANR	918419	ForStatement	for ( perm = FIRST_PERM ; perm < LAST_PERM ; perm = NEXT_PERM ( perm ) )		918374	2					
ANR	918420	ForInit	perm = FIRST_PERM ;	101:6:2544:2559	918374	0	True				
ANR	918421	AssignmentExpression	perm = FIRST_PERM		918374	0		=			
ANR	918422	Identifier	perm		918374	0					
ANR	918423	Identifier	FIRST_PERM		918374	1					
ANR	918424	Condition	perm < LAST_PERM	101:23:2561:2574	918374	1	True				
ANR	918425	RelationalExpression	perm < LAST_PERM		918374	0		<			
ANR	918426	Identifier	perm		918374	0					
ANR	918427	Identifier	LAST_PERM		918374	1					
ANR	918428	AssignmentExpression	perm = NEXT_PERM ( perm )	101:39:2577:2596	918374	2	True	=			
ANR	918429	Identifier	perm		918374	0					
ANR	918430	CallExpression	NEXT_PERM ( perm )		918374	1					
ANR	918431	Callee	NEXT_PERM		918374	0					
ANR	918432	Identifier	NEXT_PERM		918374	0					
ANR	918433	ArgumentList	perm		918374	1					
ANR	918434	Argument	perm		918374	0					
ANR	918435	Identifier	perm		918374	0					
ANR	918436	CompoundStatement		19:61:426:426	918374	3					
ANR	918437	IfStatement	if ( PermTypeArray [ perm ] )		918374	0					
ANR	918438	Condition	PermTypeArray [ perm ]	102:7:2608:2626	918374	0	True				
ANR	918439	ArrayIndexing	PermTypeArray [ perm ]		918374	0					
ANR	918440	Identifier	PermTypeArray		918374	0					
ANR	918441	Identifier	perm		918374	1					
ANR	918442	Statement	delete	103:3:2633:2638	918374	1	True				
ANR	918443	ExpressionStatement	PermTypeArray [ perm ]	103:10:2640:2659	918374	1	True				
ANR	918444	ArrayIndexing	PermTypeArray [ perm ]		918374	0					
ANR	918445	Identifier	PermTypeArray		918374	0					
ANR	918446	Identifier	perm		918374	1					
ANR	918447	IfStatement	if ( PunchedHoleArray [ perm ] )		918374	2					
ANR	918448	Condition	PunchedHoleArray [ perm ]	104:7:2668:2689	918374	0	True				
ANR	918449	ArrayIndexing	PunchedHoleArray [ perm ]		918374	0					
ANR	918450	Identifier	PunchedHoleArray		918374	0					
ANR	918451	Identifier	perm		918374	1					
ANR	918452	Statement	delete	105:3:2696:2701	918374	1	True				
ANR	918453	ExpressionStatement	PunchedHoleArray [ perm ]	105:10:2703:2725	918374	3	True				
ANR	918454	ArrayIndexing	PunchedHoleArray [ perm ]		918374	0					
ANR	918455	Identifier	PunchedHoleArray		918374	0					
ANR	918456	Identifier	perm		918374	1					
ANR	918457	Identifier	IpVerify :: ~IpVerify		918374	1					
ANR	918458	ParameterList			918374	2					
ANR	918459	CFGEntryNode	ENTRY		918374		True				
ANR	918460	CFGExitNode	EXIT		918374		True				
ANR	918461	Symbol	LAST_PERM		918374						
ANR	918462	Symbol	PermHashTable -> iterate		918374						
ANR	918463	Symbol	perm		918374						
ANR	918464	Symbol	* perm		918374						
ANR	918465	Symbol	* PermTypeArray		918374						
ANR	918466	Symbol	FIRST_PERM		918374						
ANR	918467	Symbol	PermTypeArray		918374						
ANR	918468	Symbol	PermHashTable		918374						
ANR	918469	Symbol	* PunchedHoleArray		918374						
ANR	918470	Symbol	* PermHashTable		918374						
ANR	918471	Symbol	NEXT_PERM		918374						
ANR	918472	Symbol	PunchedHoleArray		918374						
ANR	918473	Symbol	value		918374						
ANR	918474	Symbol	key		918374						
ANR	918475	Function	IpVerify :: Init	110:0:2735:7008							
ANR	918476	FunctionDef	IpVerify :: Init ()		918475	0					
ANR	918477	CompoundStatement		112:0:2756:7008	918475	0					
ANR	918478	IdentifierDeclStatement	"char * pAllow = NULL , * pDeny = NULL , * pOldAllow = NULL , * pOldDeny = NULL , * pNewAllow = NULL , * pNewDeny = NULL ;"	113:1:2759:2869	918475	0	True				
ANR	918479	IdentifierDecl	* pAllow = NULL		918475	0					
ANR	918480	IdentifierDeclType	char *		918475	0					
ANR	918481	Identifier	pAllow		918475	1					
ANR	918482	AssignmentExpression	* pAllow = NULL		918475	2		=			
ANR	918483	Identifier	NULL		918475	0					
ANR	918484	Identifier	NULL		918475	1					
ANR	918485	IdentifierDecl	* pDeny = NULL		918475	1					
ANR	918486	IdentifierDeclType	char *		918475	0					
ANR	918487	Identifier	pDeny		918475	1					
ANR	918488	AssignmentExpression	* pDeny = NULL		918475	2		=			
ANR	918489	Identifier	NULL		918475	0					
ANR	918490	Identifier	NULL		918475	1					
ANR	918491	IdentifierDecl	* pOldAllow = NULL		918475	2					
ANR	918492	IdentifierDeclType	char *		918475	0					
ANR	918493	Identifier	pOldAllow		918475	1					
ANR	918494	AssignmentExpression	* pOldAllow = NULL		918475	2		=			
ANR	918495	Identifier	NULL		918475	0					
ANR	918496	Identifier	NULL		918475	1					
ANR	918497	IdentifierDecl	* pOldDeny = NULL		918475	3					
ANR	918498	IdentifierDeclType	char *		918475	0					
ANR	918499	Identifier	pOldDeny		918475	1					
ANR	918500	AssignmentExpression	* pOldDeny = NULL		918475	2		=			
ANR	918501	Identifier	NULL		918475	0					
ANR	918502	Identifier	NULL		918475	1					
ANR	918503	IdentifierDecl	* pNewAllow = NULL		918475	4					
ANR	918504	IdentifierDeclType	char *		918475	0					
ANR	918505	Identifier	pNewAllow		918475	1					
ANR	918506	AssignmentExpression	* pNewAllow = NULL		918475	2		=			
ANR	918507	Identifier	NULL		918475	0					
ANR	918508	Identifier	NULL		918475	1					
ANR	918509	IdentifierDecl	* pNewDeny = NULL		918475	5					
ANR	918510	IdentifierDeclType	char *		918475	0					
ANR	918511	Identifier	pNewDeny		918475	1					
ANR	918512	AssignmentExpression	* pNewDeny = NULL		918475	2		=			
ANR	918513	Identifier	NULL		918475	0					
ANR	918514	Identifier	NULL		918475	1					
ANR	918515	IdentifierDeclStatement	DCpermission perm ;	115:1:2872:2889	918475	1	True				
ANR	918516	IdentifierDecl	perm		918475	0					
ANR	918517	IdentifierDeclType	DCpermission		918475	0					
ANR	918518	Identifier	perm		918475	1					
ANR	918519	Statement	const	116:1:2892:2896	918475	2	True				
ANR	918520	Statement	char	116:7:2898:2901	918475	3	True				
ANR	918521	Statement	*	116:11:2902:2902	918475	4	True				
ANR	918522	Statement	const	116:13:2904:2908	918475	5	True				
ANR	918523	ExpressionStatement	ssysname = get_mySubSystem ( ) -> getName ( )	116:19:2910:2949	918475	6	True				
ANR	918524	AssignmentExpression	ssysname = get_mySubSystem ( ) -> getName ( )		918475	0		=			
ANR	918525	Identifier	ssysname		918475	0					
ANR	918526	CallExpression	get_mySubSystem ( ) -> getName ( )		918475	1					
ANR	918527	Callee	get_mySubSystem ( ) -> getName		918475	0					
ANR	918528	PtrMemberAccess	get_mySubSystem ( ) -> getName		918475	0					
ANR	918529	CallExpression	get_mySubSystem ( )		918475	0					
ANR	918530	Callee	get_mySubSystem		918475	0					
ANR	918531	Identifier	get_mySubSystem		918475	0					
ANR	918532	ArgumentList			918475	1					
ANR	918533	Identifier	getName		918475	1					
ANR	918534	ArgumentList			918475	1					
ANR	918535	ExpressionStatement	did_init = TRUE	118:1:2954:2969	918475	7	True				
ANR	918536	AssignmentExpression	did_init = TRUE		918475	0		=			
ANR	918537	Identifier	did_init		918475	0					
ANR	918538	Identifier	TRUE		918475	1					
ANR	918539	ExpressionStatement	ASSERT ( sizeof ( perm_mask_t ) * 8 - 2 > LAST_PERM )	122:1:3084:3131	918475	8	True				
ANR	918540	CallExpression	ASSERT ( sizeof ( perm_mask_t ) * 8 - 2 > LAST_PERM )		918475	0					
ANR	918541	Callee	ASSERT		918475	0					
ANR	918542	Identifier	ASSERT		918475	0					
ANR	918543	ArgumentList	sizeof ( perm_mask_t ) * 8 - 2 > LAST_PERM		918475	1					
ANR	918544	Argument	sizeof ( perm_mask_t ) * 8 - 2 > LAST_PERM		918475	0					
ANR	918545	RelationalExpression	sizeof ( perm_mask_t ) * 8 - 2 > LAST_PERM		918475	0		>			
ANR	918546	AdditiveExpression	sizeof ( perm_mask_t ) * 8 - 2		918475	0		-			
ANR	918547	MultiplicativeExpression	sizeof ( perm_mask_t ) * 8		918475	0		*			
ANR	918548	SizeofExpression	sizeof ( perm_mask_t )		918475	0					
ANR	918549	Sizeof	sizeof		918475	0					
ANR	918550	SizeofOperand	perm_mask_t		918475	1					
ANR	918551	PrimaryExpression	8		918475	1					
ANR	918552	PrimaryExpression	2		918475	1					
ANR	918553	Identifier	LAST_PERM		918475	1					
ANR	918554	IfStatement	if ( PermHashTable )		918475	9					
ANR	918555	Condition	PermHashTable	125:5:3199:3211	918475	0	True				
ANR	918556	Identifier	PermHashTable		918475	0					
ANR	918557	CompoundStatement		17:2:538:556	918475	1					
ANR	918558	IdentifierDeclStatement	struct in6_addr key ;	127:2:3272:3291	918475	0	True				
ANR	918559	IdentifierDecl	key		918475	0					
ANR	918560	IdentifierDeclType	struct in6_addr		918475	0					
ANR	918561	Identifier	key		918475	1					
ANR	918562	IdentifierDeclStatement	UserPerm_t * value ;	128:2:3295:3313	918475	1	True				
ANR	918563	IdentifierDecl	* value		918475	0					
ANR	918564	IdentifierDeclType	UserPerm_t *		918475	0					
ANR	918565	Identifier	value		918475	1					
ANR	918566	ExpressionStatement	PermHashTable -> startIterations ( )	129:2:3317:3349	918475	2	True				
ANR	918567	CallExpression	PermHashTable -> startIterations ( )		918475	0					
ANR	918568	Callee	PermHashTable -> startIterations		918475	0					
ANR	918569	PtrMemberAccess	PermHashTable -> startIterations		918475	0					
ANR	918570	Identifier	PermHashTable		918475	0					
ANR	918571	Identifier	startIterations		918475	1					
ANR	918572	ArgumentList			918475	1					
ANR	918573	WhileStatement	"while ( PermHashTable -> iterate ( key , value ) )"		918475	3					
ANR	918574	Condition	"PermHashTable -> iterate ( key , value )"	131:9:3361:3394	918475	0	True				
ANR	918575	CallExpression	"PermHashTable -> iterate ( key , value )"		918475	0					
ANR	918576	Callee	PermHashTable -> iterate		918475	0					
ANR	918577	PtrMemberAccess	PermHashTable -> iterate		918475	0					
ANR	918578	Identifier	PermHashTable		918475	0					
ANR	918579	Identifier	iterate		918475	1					
ANR	918580	ArgumentList	key		918475	1					
ANR	918581	Argument	key		918475	0					
ANR	918582	Identifier	key		918475	0					
ANR	918583	Argument	value		918475	1					
ANR	918584	Identifier	value		918475	0					
ANR	918585	CompoundStatement		20:45:640:640	918475	1					
ANR	918586	Statement	delete	132:3:3402:3407	918475	0	True				
ANR	918587	ExpressionStatement	value	132:10:3409:3414	918475	1	True				
ANR	918588	Identifier	value		918475	0					
ANR	918589	ExpressionStatement	PermHashTable -> clear ( )	135:2:3423:3445	918475	4	True				
ANR	918590	CallExpression	PermHashTable -> clear ( )		918475	0					
ANR	918591	Callee	PermHashTable -> clear		918475	0					
ANR	918592	PtrMemberAccess	PermHashTable -> clear		918475	0					
ANR	918593	Identifier	PermHashTable		918475	0					
ANR	918594	Identifier	clear		918475	1					
ANR	918595	ArgumentList			918475	1					
ANR	918596	ForStatement	for ( perm = FIRST_PERM ; perm < LAST_PERM ; perm = NEXT_PERM ( perm ) )		918475	10					
ANR	918597	ForInit	perm = FIRST_PERM ;	139:6:3497:3512	918475	0	True				
ANR	918598	AssignmentExpression	perm = FIRST_PERM		918475	0		=			
ANR	918599	Identifier	perm		918475	0					
ANR	918600	Identifier	FIRST_PERM		918475	1					
ANR	918601	Condition	perm < LAST_PERM	139:23:3514:3527	918475	1	True				
ANR	918602	RelationalExpression	perm < LAST_PERM		918475	0		<			
ANR	918603	Identifier	perm		918475	0					
ANR	918604	Identifier	LAST_PERM		918475	1					
ANR	918605	AssignmentExpression	perm = NEXT_PERM ( perm )	139:39:3530:3549	918475	2	True	=			
ANR	918606	Identifier	perm		918475	0					
ANR	918607	CallExpression	NEXT_PERM ( perm )		918475	1					
ANR	918608	Callee	NEXT_PERM		918475	0					
ANR	918609	Identifier	NEXT_PERM		918475	0					
ANR	918610	ArgumentList	perm		918475	1					
ANR	918611	Argument	perm		918475	0					
ANR	918612	Identifier	perm		918475	0					
ANR	918613	CompoundStatement		28:61:795:795	918475	3					
ANR	918614	IfStatement	if ( PermTypeArray [ perm ] )		918475	0					
ANR	918615	Condition	PermTypeArray [ perm ]	140:7:3561:3579	918475	0	True				
ANR	918616	ArrayIndexing	PermTypeArray [ perm ]		918475	0					
ANR	918617	Identifier	PermTypeArray		918475	0					
ANR	918618	Identifier	perm		918475	1					
ANR	918619	CompoundStatement		29:29:826:826	918475	1					
ANR	918620	Statement	delete	141:3:3588:3593	918475	0	True				
ANR	918621	ExpressionStatement	PermTypeArray [ perm ]	141:10:3595:3614	918475	1	True				
ANR	918622	ArrayIndexing	PermTypeArray [ perm ]		918475	0					
ANR	918623	Identifier	PermTypeArray		918475	0					
ANR	918624	Identifier	perm		918475	1					
ANR	918625	ExpressionStatement	PermTypeArray [ perm ] = NULL	142:3:3619:3645	918475	2	True				
ANR	918626	AssignmentExpression	PermTypeArray [ perm ] = NULL		918475	0		=			
ANR	918627	ArrayIndexing	PermTypeArray [ perm ]		918475	0					
ANR	918628	Identifier	PermTypeArray		918475	0					
ANR	918629	Identifier	perm		918475	1					
ANR	918630	Identifier	NULL		918475	1					
ANR	918631	ForStatement	for ( perm = FIRST_PERM ; perm < LAST_PERM ; perm = NEXT_PERM ( perm ) )		918475	11					
ANR	918632	ForInit	perm = FIRST_PERM ;	147:7:3688:3703	918475	0	True				
ANR	918633	AssignmentExpression	perm = FIRST_PERM		918475	0		=			
ANR	918634	Identifier	perm		918475	0					
ANR	918635	Identifier	FIRST_PERM		918475	1					
ANR	918636	Condition	perm < LAST_PERM	147:24:3705:3720	918475	1	True				
ANR	918637	RelationalExpression	perm < LAST_PERM		918475	0		<			
ANR	918638	Identifier	perm		918475	0					
ANR	918639	Identifier	LAST_PERM		918475	1					
ANR	918640	AssignmentExpression	perm = NEXT_PERM ( perm )	147:42:3723:3742	918475	2	True	=			
ANR	918641	Identifier	perm		918475	0					
ANR	918642	CallExpression	NEXT_PERM ( perm )		918475	1					
ANR	918643	Callee	NEXT_PERM		918475	0					
ANR	918644	Identifier	NEXT_PERM		918475	0					
ANR	918645	ArgumentList	perm		918475	1					
ANR	918646	Argument	perm		918475	0					
ANR	918647	Identifier	perm		918475	0					
ANR	918648	CompoundStatement		40:2:1092:1124	918475	3					
ANR	918649	IdentifierDeclStatement	PermTypeEntry * pentry = new PermTypeEntry ( ) ;	148:2:3750:3793	918475	0	True				
ANR	918650	IdentifierDecl	* pentry = new PermTypeEntry ( )		918475	0					
ANR	918651	IdentifierDeclType	PermTypeEntry *		918475	0					
ANR	918652	Identifier	pentry		918475	1					
ANR	918653	AssignmentExpression	* pentry = new PermTypeEntry ( )		918475	2		=			
ANR	918654	Identifier	pentry		918475	0					
ANR	918655	UnaryExpression	new PermTypeEntry ( )		918475	1					
ANR	918656	ExpressionStatement	ASSERT ( pentry )	149:2:3797:3813	918475	1	True				
ANR	918657	CallExpression	ASSERT ( pentry )		918475	0					
ANR	918658	Callee	ASSERT		918475	0					
ANR	918659	Identifier	ASSERT		918475	0					
ANR	918660	ArgumentList	pentry		918475	1					
ANR	918661	Argument	pentry		918475	0					
ANR	918662	Identifier	pentry		918475	0					
ANR	918663	ExpressionStatement	PermTypeArray [ perm ] = pentry	150:2:3817:3845	918475	2	True				
ANR	918664	AssignmentExpression	PermTypeArray [ perm ] = pentry		918475	0		=			
ANR	918665	ArrayIndexing	PermTypeArray [ perm ]		918475	0					
ANR	918666	Identifier	PermTypeArray		918475	0					
ANR	918667	Identifier	perm		918475	1					
ANR	918668	Identifier	pentry		918475	1					
ANR	918669	IdentifierDeclStatement	"MyString allow_param , deny_param ;"	151:2:3849:3881	918475	3	True				
ANR	918670	IdentifierDecl	allow_param		918475	0					
ANR	918671	IdentifierDeclType	MyString		918475	0					
ANR	918672	Identifier	allow_param		918475	1					
ANR	918673	IdentifierDecl	deny_param		918475	1					
ANR	918674	IdentifierDeclType	MyString		918475	0					
ANR	918675	Identifier	deny_param		918475	1					
ANR	918676	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: Subsystem %s\\n"" , ssysname )"	153:2:3886:3941	918475	4	True				
ANR	918677	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: Subsystem %s\\n"" , ssysname )"		918475	0					
ANR	918678	Callee	dprintf		918475	0					
ANR	918679	Identifier	dprintf		918475	0					
ANR	918680	ArgumentList	D_SECURITY		918475	1					
ANR	918681	Argument	D_SECURITY		918475	0					
ANR	918682	Identifier	D_SECURITY		918475	0					
ANR	918683	Argument	"""IPVERIFY: Subsystem %s\\n"""		918475	1					
ANR	918684	PrimaryExpression	"""IPVERIFY: Subsystem %s\\n"""		918475	0					
ANR	918685	Argument	ssysname		918475	2					
ANR	918686	Identifier	ssysname		918475	0					
ANR	918687	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: Permission %s\\n"" , PermString ( perm ) )"	154:2:3945:4009	918475	5	True				
ANR	918688	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: Permission %s\\n"" , PermString ( perm ) )"		918475	0					
ANR	918689	Callee	dprintf		918475	0					
ANR	918690	Identifier	dprintf		918475	0					
ANR	918691	ArgumentList	D_SECURITY		918475	1					
ANR	918692	Argument	D_SECURITY		918475	0					
ANR	918693	Identifier	D_SECURITY		918475	0					
ANR	918694	Argument	"""IPVERIFY: Permission %s\\n"""		918475	1					
ANR	918695	PrimaryExpression	"""IPVERIFY: Permission %s\\n"""		918475	0					
ANR	918696	Argument	PermString ( perm )		918475	2					
ANR	918697	CallExpression	PermString ( perm )		918475	0					
ANR	918698	Callee	PermString		918475	0					
ANR	918699	Identifier	PermString		918475	0					
ANR	918700	ArgumentList	perm		918475	1					
ANR	918701	Argument	perm		918475	0					
ANR	918702	Identifier	perm		918475	0					
ANR	918703	IfStatement	"if ( strcmp ( ssysname , ""TOOL"" ) == 0 || strcmp ( ssysname , ""SUBMIT"" ) == 0 )"		918475	6					
ANR	918704	Condition	"strcmp ( ssysname , ""TOOL"" ) == 0 || strcmp ( ssysname , ""SUBMIT"" ) == 0"	155:5:4016:4073	918475	0	True				
ANR	918705	OrExpression	"strcmp ( ssysname , ""TOOL"" ) == 0 || strcmp ( ssysname , ""SUBMIT"" ) == 0"		918475	0		||			
ANR	918706	EqualityExpression	"strcmp ( ssysname , ""TOOL"" ) == 0"		918475	0		==			
ANR	918707	CallExpression	"strcmp ( ssysname , ""TOOL"" )"		918475	0					
ANR	918708	Callee	strcmp		918475	0					
ANR	918709	Identifier	strcmp		918475	0					
ANR	918710	ArgumentList	ssysname		918475	1					
ANR	918711	Argument	ssysname		918475	0					
ANR	918712	Identifier	ssysname		918475	0					
ANR	918713	Argument	"""TOOL"""		918475	1					
ANR	918714	PrimaryExpression	"""TOOL"""		918475	0					
ANR	918715	PrimaryExpression	0		918475	1					
ANR	918716	EqualityExpression	"strcmp ( ssysname , ""SUBMIT"" ) == 0"		918475	1		==			
ANR	918717	CallExpression	"strcmp ( ssysname , ""SUBMIT"" )"		918475	0					
ANR	918718	Callee	strcmp		918475	0					
ANR	918719	Identifier	strcmp		918475	0					
ANR	918720	ArgumentList	ssysname		918475	1					
ANR	918721	Argument	ssysname		918475	0					
ANR	918722	Identifier	ssysname		918475	0					
ANR	918723	Argument	"""SUBMIT"""		918475	1					
ANR	918724	PrimaryExpression	"""SUBMIT"""		918475	0					
ANR	918725	PrimaryExpression	0		918475	1					
ANR	918726	CompoundStatement		44:64:1318:1318	918475	1					
ANR	918727	IfStatement	"if ( strcmp ( PermString ( perm ) , ""CLIENT"" ) == 0 )"		918475	0					
ANR	918728	Condition	"strcmp ( PermString ( perm ) , ""CLIENT"" ) == 0"	159:6:4273:4308	918475	0	True				
ANR	918729	EqualityExpression	"strcmp ( PermString ( perm ) , ""CLIENT"" ) == 0"		918475	0		==			
ANR	918730	CallExpression	"strcmp ( PermString ( perm ) , ""CLIENT"" )"		918475	0					
ANR	918731	Callee	strcmp		918475	0					
ANR	918732	Identifier	strcmp		918475	0					
ANR	918733	ArgumentList	PermString ( perm )		918475	1					
ANR	918734	Argument	PermString ( perm )		918475	0					
ANR	918735	CallExpression	PermString ( perm )		918475	0					
ANR	918736	Callee	PermString		918475	0					
ANR	918737	Identifier	PermString		918475	0					
ANR	918738	ArgumentList	perm		918475	1					
ANR	918739	Argument	perm		918475	0					
ANR	918740	Identifier	perm		918475	0					
ANR	918741	Argument	"""CLIENT"""		918475	1					
ANR	918742	PrimaryExpression	"""CLIENT"""		918475	0					
ANR	918743	PrimaryExpression	0		918475	1					
ANR	918744	CompoundStatement		48:43:1553:1553	918475	1					
ANR	918745	ExpressionStatement	"pNewAllow = SecMan :: getSecSetting ( ""ALLOW_%s"" , perm , & allow_param , ssysname )"	160:4:4317:4391	918475	0	True				
ANR	918746	AssignmentExpression	"pNewAllow = SecMan :: getSecSetting ( ""ALLOW_%s"" , perm , & allow_param , ssysname )"		918475	0		=			
ANR	918747	Identifier	pNewAllow		918475	0					
ANR	918748	CallExpression	"SecMan :: getSecSetting ( ""ALLOW_%s"" , perm , & allow_param , ssysname )"		918475	1					
ANR	918749	Callee	SecMan :: getSecSetting		918475	0					
ANR	918750	Identifier	SecMan :: getSecSetting		918475	0					
ANR	918751	ArgumentList	"""ALLOW_%s"""		918475	1					
ANR	918752	Argument	"""ALLOW_%s"""		918475	0					
ANR	918753	PrimaryExpression	"""ALLOW_%s"""		918475	0					
ANR	918754	Argument	perm		918475	1					
ANR	918755	Identifier	perm		918475	0					
ANR	918756	Argument	& allow_param		918475	2					
ANR	918757	UnaryOperationExpression	& allow_param		918475	0					
ANR	918758	UnaryOperator	&		918475	0					
ANR	918759	Identifier	allow_param		918475	1					
ANR	918760	Argument	ssysname		918475	3					
ANR	918761	Identifier	ssysname		918475	0					
ANR	918762	ExpressionStatement	"pOldAllow = SecMan :: getSecSetting ( ""HOSTALLOW_%s"" , perm , & allow_param , ssysname )"	161:4:4397:4475	918475	1	True				
ANR	918763	AssignmentExpression	"pOldAllow = SecMan :: getSecSetting ( ""HOSTALLOW_%s"" , perm , & allow_param , ssysname )"		918475	0		=			
ANR	918764	Identifier	pOldAllow		918475	0					
ANR	918765	CallExpression	"SecMan :: getSecSetting ( ""HOSTALLOW_%s"" , perm , & allow_param , ssysname )"		918475	1					
ANR	918766	Callee	SecMan :: getSecSetting		918475	0					
ANR	918767	Identifier	SecMan :: getSecSetting		918475	0					
ANR	918768	ArgumentList	"""HOSTALLOW_%s"""		918475	1					
ANR	918769	Argument	"""HOSTALLOW_%s"""		918475	0					
ANR	918770	PrimaryExpression	"""HOSTALLOW_%s"""		918475	0					
ANR	918771	Argument	perm		918475	1					
ANR	918772	Identifier	perm		918475	0					
ANR	918773	Argument	& allow_param		918475	2					
ANR	918774	UnaryOperationExpression	& allow_param		918475	0					
ANR	918775	UnaryOperator	&		918475	0					
ANR	918776	Identifier	allow_param		918475	1					
ANR	918777	Argument	ssysname		918475	3					
ANR	918778	Identifier	ssysname		918475	0					
ANR	918779	ExpressionStatement	"pNewDeny = SecMan :: getSecSetting ( ""DENY_%s"" , perm , & deny_param , ssysname )"	162:4:4481:4552	918475	2	True				
ANR	918780	AssignmentExpression	"pNewDeny = SecMan :: getSecSetting ( ""DENY_%s"" , perm , & deny_param , ssysname )"		918475	0		=			
ANR	918781	Identifier	pNewDeny		918475	0					
ANR	918782	CallExpression	"SecMan :: getSecSetting ( ""DENY_%s"" , perm , & deny_param , ssysname )"		918475	1					
ANR	918783	Callee	SecMan :: getSecSetting		918475	0					
ANR	918784	Identifier	SecMan :: getSecSetting		918475	0					
ANR	918785	ArgumentList	"""DENY_%s"""		918475	1					
ANR	918786	Argument	"""DENY_%s"""		918475	0					
ANR	918787	PrimaryExpression	"""DENY_%s"""		918475	0					
ANR	918788	Argument	perm		918475	1					
ANR	918789	Identifier	perm		918475	0					
ANR	918790	Argument	& deny_param		918475	2					
ANR	918791	UnaryOperationExpression	& deny_param		918475	0					
ANR	918792	UnaryOperator	&		918475	0					
ANR	918793	Identifier	deny_param		918475	1					
ANR	918794	Argument	ssysname		918475	3					
ANR	918795	Identifier	ssysname		918475	0					
ANR	918796	ExpressionStatement	"pOldDeny = SecMan :: getSecSetting ( ""HOSTDENY_%s"" , perm , & deny_param , ssysname )"	163:4:4558:4633	918475	3	True				
ANR	918797	AssignmentExpression	"pOldDeny = SecMan :: getSecSetting ( ""HOSTDENY_%s"" , perm , & deny_param , ssysname )"		918475	0		=			
ANR	918798	Identifier	pOldDeny		918475	0					
ANR	918799	CallExpression	"SecMan :: getSecSetting ( ""HOSTDENY_%s"" , perm , & deny_param , ssysname )"		918475	1					
ANR	918800	Callee	SecMan :: getSecSetting		918475	0					
ANR	918801	Identifier	SecMan :: getSecSetting		918475	0					
ANR	918802	ArgumentList	"""HOSTDENY_%s"""		918475	1					
ANR	918803	Argument	"""HOSTDENY_%s"""		918475	0					
ANR	918804	PrimaryExpression	"""HOSTDENY_%s"""		918475	0					
ANR	918805	Argument	perm		918475	1					
ANR	918806	Identifier	perm		918475	0					
ANR	918807	Argument	& deny_param		918475	2					
ANR	918808	UnaryOperationExpression	& deny_param		918475	0					
ANR	918809	UnaryOperator	&		918475	0					
ANR	918810	Identifier	deny_param		918475	1					
ANR	918811	Argument	ssysname		918475	3					
ANR	918812	Identifier	ssysname		918475	0					
ANR	918813	ElseStatement	else		918475	0					
ANR	918814	CompoundStatement		54:9:1892:1892	918475	0					
ANR	918815	ExpressionStatement	"pNewAllow = SecMan :: getSecSetting ( ""ALLOW_%s"" , perm , & allow_param , ssysname )"	166:3:4654:4728	918475	0	True				
ANR	918816	AssignmentExpression	"pNewAllow = SecMan :: getSecSetting ( ""ALLOW_%s"" , perm , & allow_param , ssysname )"		918475	0		=			
ANR	918817	Identifier	pNewAllow		918475	0					
ANR	918818	CallExpression	"SecMan :: getSecSetting ( ""ALLOW_%s"" , perm , & allow_param , ssysname )"		918475	1					
ANR	918819	Callee	SecMan :: getSecSetting		918475	0					
ANR	918820	Identifier	SecMan :: getSecSetting		918475	0					
ANR	918821	ArgumentList	"""ALLOW_%s"""		918475	1					
ANR	918822	Argument	"""ALLOW_%s"""		918475	0					
ANR	918823	PrimaryExpression	"""ALLOW_%s"""		918475	0					
ANR	918824	Argument	perm		918475	1					
ANR	918825	Identifier	perm		918475	0					
ANR	918826	Argument	& allow_param		918475	2					
ANR	918827	UnaryOperationExpression	& allow_param		918475	0					
ANR	918828	UnaryOperator	&		918475	0					
ANR	918829	Identifier	allow_param		918475	1					
ANR	918830	Argument	ssysname		918475	3					
ANR	918831	Identifier	ssysname		918475	0					
ANR	918832	ExpressionStatement	"pOldAllow = SecMan :: getSecSetting ( ""HOSTALLOW_%s"" , perm , & allow_param , ssysname )"	167:3:4733:4811	918475	1	True				
ANR	918833	AssignmentExpression	"pOldAllow = SecMan :: getSecSetting ( ""HOSTALLOW_%s"" , perm , & allow_param , ssysname )"		918475	0		=			
ANR	918834	Identifier	pOldAllow		918475	0					
ANR	918835	CallExpression	"SecMan :: getSecSetting ( ""HOSTALLOW_%s"" , perm , & allow_param , ssysname )"		918475	1					
ANR	918836	Callee	SecMan :: getSecSetting		918475	0					
ANR	918837	Identifier	SecMan :: getSecSetting		918475	0					
ANR	918838	ArgumentList	"""HOSTALLOW_%s"""		918475	1					
ANR	918839	Argument	"""HOSTALLOW_%s"""		918475	0					
ANR	918840	PrimaryExpression	"""HOSTALLOW_%s"""		918475	0					
ANR	918841	Argument	perm		918475	1					
ANR	918842	Identifier	perm		918475	0					
ANR	918843	Argument	& allow_param		918475	2					
ANR	918844	UnaryOperationExpression	& allow_param		918475	0					
ANR	918845	UnaryOperator	&		918475	0					
ANR	918846	Identifier	allow_param		918475	1					
ANR	918847	Argument	ssysname		918475	3					
ANR	918848	Identifier	ssysname		918475	0					
ANR	918849	ExpressionStatement	"pNewDeny = SecMan :: getSecSetting ( ""DENY_%s"" , perm , & deny_param , ssysname )"	168:3:4816:4887	918475	2	True				
ANR	918850	AssignmentExpression	"pNewDeny = SecMan :: getSecSetting ( ""DENY_%s"" , perm , & deny_param , ssysname )"		918475	0		=			
ANR	918851	Identifier	pNewDeny		918475	0					
ANR	918852	CallExpression	"SecMan :: getSecSetting ( ""DENY_%s"" , perm , & deny_param , ssysname )"		918475	1					
ANR	918853	Callee	SecMan :: getSecSetting		918475	0					
ANR	918854	Identifier	SecMan :: getSecSetting		918475	0					
ANR	918855	ArgumentList	"""DENY_%s"""		918475	1					
ANR	918856	Argument	"""DENY_%s"""		918475	0					
ANR	918857	PrimaryExpression	"""DENY_%s"""		918475	0					
ANR	918858	Argument	perm		918475	1					
ANR	918859	Identifier	perm		918475	0					
ANR	918860	Argument	& deny_param		918475	2					
ANR	918861	UnaryOperationExpression	& deny_param		918475	0					
ANR	918862	UnaryOperator	&		918475	0					
ANR	918863	Identifier	deny_param		918475	1					
ANR	918864	Argument	ssysname		918475	3					
ANR	918865	Identifier	ssysname		918475	0					
ANR	918866	ExpressionStatement	"pOldDeny = SecMan :: getSecSetting ( ""HOSTDENY_%s"" , perm , & deny_param , ssysname )"	169:3:4892:4967	918475	3	True				
ANR	918867	AssignmentExpression	"pOldDeny = SecMan :: getSecSetting ( ""HOSTDENY_%s"" , perm , & deny_param , ssysname )"		918475	0		=			
ANR	918868	Identifier	pOldDeny		918475	0					
ANR	918869	CallExpression	"SecMan :: getSecSetting ( ""HOSTDENY_%s"" , perm , & deny_param , ssysname )"		918475	1					
ANR	918870	Callee	SecMan :: getSecSetting		918475	0					
ANR	918871	Identifier	SecMan :: getSecSetting		918475	0					
ANR	918872	ArgumentList	"""HOSTDENY_%s"""		918475	1					
ANR	918873	Argument	"""HOSTDENY_%s"""		918475	0					
ANR	918874	PrimaryExpression	"""HOSTDENY_%s"""		918475	0					
ANR	918875	Argument	perm		918475	1					
ANR	918876	Identifier	perm		918475	0					
ANR	918877	Argument	& deny_param		918475	2					
ANR	918878	UnaryOperationExpression	& deny_param		918475	0					
ANR	918879	UnaryOperator	&		918475	0					
ANR	918880	Identifier	deny_param		918475	1					
ANR	918881	Argument	ssysname		918475	3					
ANR	918882	Identifier	ssysname		918475	0					
ANR	918883	ExpressionStatement	"pAllow = merge ( pNewAllow , pOldAllow )"	172:2:4995:5031	918475	7	True				
ANR	918884	AssignmentExpression	"pAllow = merge ( pNewAllow , pOldAllow )"		918475	0		=			
ANR	918885	Identifier	pAllow		918475	0					
ANR	918886	CallExpression	"merge ( pNewAllow , pOldAllow )"		918475	1					
ANR	918887	Callee	merge		918475	0					
ANR	918888	Identifier	merge		918475	0					
ANR	918889	ArgumentList	pNewAllow		918475	1					
ANR	918890	Argument	pNewAllow		918475	0					
ANR	918891	Identifier	pNewAllow		918475	0					
ANR	918892	Argument	pOldAllow		918475	1					
ANR	918893	Identifier	pOldAllow		918475	0					
ANR	918894	ExpressionStatement	"pDeny = merge ( pNewDeny , pOldDeny )"	174:2:5055:5088	918475	8	True				
ANR	918895	AssignmentExpression	"pDeny = merge ( pNewDeny , pOldDeny )"		918475	0		=			
ANR	918896	Identifier	pDeny		918475	0					
ANR	918897	CallExpression	"merge ( pNewDeny , pOldDeny )"		918475	1					
ANR	918898	Callee	merge		918475	0					
ANR	918899	Identifier	merge		918475	0					
ANR	918900	ArgumentList	pNewDeny		918475	1					
ANR	918901	Argument	pNewDeny		918475	0					
ANR	918902	Identifier	pNewDeny		918475	0					
ANR	918903	Argument	pOldDeny		918475	1					
ANR	918904	Identifier	pOldDeny		918475	0					
ANR	918905	IfStatement	if ( pAllow )		918475	9					
ANR	918906	Condition	pAllow	175:6:5096:5101	918475	0	True				
ANR	918907	Identifier	pAllow		918475	0					
ANR	918908	CompoundStatement		64:15:2348:2348	918475	1					
ANR	918909	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: allow %s: %s (from config value %s)\\n"" , PermString ( perm ) , pAllow , allow_param . Value ( ) )"	176:3:5110:5227	918475	0	True				
ANR	918910	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: allow %s: %s (from config value %s)\\n"" , PermString ( perm ) , pAllow , allow_param . Value ( ) )"		918475	0					
ANR	918911	Callee	dprintf		918475	0					
ANR	918912	Identifier	dprintf		918475	0					
ANR	918913	ArgumentList	D_SECURITY		918475	1					
ANR	918914	Argument	D_SECURITY		918475	0					
ANR	918915	Identifier	D_SECURITY		918475	0					
ANR	918916	Argument	"""IPVERIFY: allow %s: %s (from config value %s)\\n"""		918475	1					
ANR	918917	PrimaryExpression	"""IPVERIFY: allow %s: %s (from config value %s)\\n"""		918475	0					
ANR	918918	Argument	PermString ( perm )		918475	2					
ANR	918919	CallExpression	PermString ( perm )		918475	0					
ANR	918920	Callee	PermString		918475	0					
ANR	918921	Identifier	PermString		918475	0					
ANR	918922	ArgumentList	perm		918475	1					
ANR	918923	Argument	perm		918475	0					
ANR	918924	Identifier	perm		918475	0					
ANR	918925	Argument	pAllow		918475	3					
ANR	918926	Identifier	pAllow		918475	0					
ANR	918927	Argument	allow_param . Value ( )		918475	4					
ANR	918928	CallExpression	allow_param . Value ( )		918475	0					
ANR	918929	Callee	allow_param . Value		918475	0					
ANR	918930	MemberAccess	allow_param . Value		918475	0					
ANR	918931	Identifier	allow_param		918475	0					
ANR	918932	Identifier	Value		918475	1					
ANR	918933	ArgumentList			918475	1					
ANR	918934	IfStatement	if ( pDeny )		918475	10					
ANR	918935	Condition	pDeny	178:6:5239:5243	918475	0	True				
ANR	918936	Identifier	pDeny		918475	0					
ANR	918937	CompoundStatement		67:14:2490:2490	918475	1					
ANR	918938	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: deny %s: %s (from config value %s)\\n"" , PermString ( perm ) , pDeny , deny_param . Value ( ) )"	179:3:5252:5366	918475	0	True				
ANR	918939	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: deny %s: %s (from config value %s)\\n"" , PermString ( perm ) , pDeny , deny_param . Value ( ) )"		918475	0					
ANR	918940	Callee	dprintf		918475	0					
ANR	918941	Identifier	dprintf		918475	0					
ANR	918942	ArgumentList	D_SECURITY		918475	1					
ANR	918943	Argument	D_SECURITY		918475	0					
ANR	918944	Identifier	D_SECURITY		918475	0					
ANR	918945	Argument	"""IPVERIFY: deny %s: %s (from config value %s)\\n"""		918475	1					
ANR	918946	PrimaryExpression	"""IPVERIFY: deny %s: %s (from config value %s)\\n"""		918475	0					
ANR	918947	Argument	PermString ( perm )		918475	2					
ANR	918948	CallExpression	PermString ( perm )		918475	0					
ANR	918949	Callee	PermString		918475	0					
ANR	918950	Identifier	PermString		918475	0					
ANR	918951	ArgumentList	perm		918475	1					
ANR	918952	Argument	perm		918475	0					
ANR	918953	Identifier	perm		918475	0					
ANR	918954	Argument	pDeny		918475	3					
ANR	918955	Identifier	pDeny		918475	0					
ANR	918956	Argument	deny_param . Value ( )		918475	4					
ANR	918957	CallExpression	deny_param . Value ( )		918475	0					
ANR	918958	Callee	deny_param . Value		918475	0					
ANR	918959	MemberAccess	deny_param . Value		918475	0					
ANR	918960	Identifier	deny_param		918475	0					
ANR	918961	Identifier	Value		918475	1					
ANR	918962	ArgumentList			918475	1					
ANR	918963	IfStatement	if ( perm != CONFIG_PERM )		918475	11					
ANR	918964	Condition	perm != CONFIG_PERM	184:6:5557:5575	918475	0	True				
ANR	918965	EqualityExpression	perm != CONFIG_PERM		918475	0		!=			
ANR	918966	Identifier	perm		918475	0					
ANR	918967	Identifier	CONFIG_PERM		918475	1					
ANR	918968	CompoundStatement		73:28:2822:2822	918475	1					
ANR	918969	IfStatement	"if ( pAllow && ( ! strcmp ( pAllow , ""*"" ) || ! strcmp ( pAllow , ""*/*"" ) ) )"		918475	0					
ANR	918970	Condition	"pAllow && ( ! strcmp ( pAllow , ""*"" ) || ! strcmp ( pAllow , ""*/*"" ) )"	185:6:5587:5644	918475	0	True				
ANR	918971	AndExpression	"pAllow && ( ! strcmp ( pAllow , ""*"" ) || ! strcmp ( pAllow , ""*/*"" ) )"		918475	0		&&			
ANR	918972	Identifier	pAllow		918475	0					
ANR	918973	OrExpression	"! strcmp ( pAllow , ""*"" ) || ! strcmp ( pAllow , ""*/*"" )"		918475	1		||			
ANR	918974	UnaryOperationExpression	"! strcmp ( pAllow , ""*"" )"		918475	0					
ANR	918975	UnaryOperator	!		918475	0					
ANR	918976	CallExpression	"strcmp ( pAllow , ""*"" )"		918475	1					
ANR	918977	Callee	strcmp		918475	0					
ANR	918978	Identifier	strcmp		918475	0					
ANR	918979	ArgumentList	pAllow		918475	1					
ANR	918980	Argument	pAllow		918475	0					
ANR	918981	Identifier	pAllow		918475	0					
ANR	918982	Argument	"""*"""		918475	1					
ANR	918983	PrimaryExpression	"""*"""		918475	0					
ANR	918984	UnaryOperationExpression	"! strcmp ( pAllow , ""*/*"" )"		918475	1					
ANR	918985	UnaryOperator	!		918475	0					
ANR	918986	CallExpression	"strcmp ( pAllow , ""*/*"" )"		918475	1					
ANR	918987	Callee	strcmp		918475	0					
ANR	918988	Identifier	strcmp		918475	0					
ANR	918989	ArgumentList	pAllow		918475	1					
ANR	918990	Argument	pAllow		918475	0					
ANR	918991	Identifier	pAllow		918475	0					
ANR	918992	Argument	"""*/*"""		918475	1					
ANR	918993	PrimaryExpression	"""*/*"""		918475	0					
ANR	918994	CompoundStatement		74:66:2890:2890	918475	1					
ANR	918995	ExpressionStatement	free ( pAllow )	186:4:5653:5667	918475	0	True				
ANR	918996	CallExpression	free ( pAllow )		918475	0					
ANR	918997	Callee	free		918475	0					
ANR	918998	Identifier	free		918475	0					
ANR	918999	ArgumentList	pAllow		918475	1					
ANR	919000	Argument	pAllow		918475	0					
ANR	919001	Identifier	pAllow		918475	0					
ANR	919002	ExpressionStatement	pAllow = NULL	187:4:5673:5686	918475	1	True				
ANR	919003	AssignmentExpression	pAllow = NULL		918475	0		=			
ANR	919004	Identifier	pAllow		918475	0					
ANR	919005	Identifier	NULL		918475	1					
ANR	919006	IfStatement	if ( ! pAllow && ! pDeny )		918475	12					
ANR	919007	Condition	! pAllow && ! pDeny	190:7:5704:5720	918475	0	True				
ANR	919008	AndExpression	! pAllow && ! pDeny		918475	0		&&			
ANR	919009	UnaryOperationExpression	! pAllow		918475	0					
ANR	919010	UnaryOperator	!		918475	0					
ANR	919011	Identifier	pAllow		918475	1					
ANR	919012	UnaryOperationExpression	! pDeny		918475	1					
ANR	919013	UnaryOperator	!		918475	0					
ANR	919014	Identifier	pDeny		918475	1					
ANR	919015	CompoundStatement		79:27:2967:2967	918475	1					
ANR	919016	IfStatement	if ( perm == CONFIG_PERM )		918475	0					
ANR	919017	Condition	perm == CONFIG_PERM	191:7:5733:5751	918475	0	True				
ANR	919018	EqualityExpression	perm == CONFIG_PERM		918475	0		==			
ANR	919019	Identifier	perm		918475	0					
ANR	919020	Identifier	CONFIG_PERM		918475	1					
ANR	919021	CompoundStatement		80:28:2997:2997	918475	1					
ANR	919022	ExpressionStatement	pentry -> behavior = USERVERIFY_DENY	192:4:5792:5826	918475	0	True				
ANR	919023	AssignmentExpression	pentry -> behavior = USERVERIFY_DENY		918475	0		=			
ANR	919024	PtrMemberAccess	pentry -> behavior		918475	0					
ANR	919025	Identifier	pentry		918475	0					
ANR	919026	Identifier	behavior		918475	1					
ANR	919027	Identifier	USERVERIFY_DENY		918475	1					
ANR	919028	ExpressionStatement	"dprintf ( D_SECURITY , ""ipverify: %s optimized to deny everyone\\n"" , PermString ( perm ) )"	193:4:5846:5930	918475	1	True				
ANR	919029	CallExpression	"dprintf ( D_SECURITY , ""ipverify: %s optimized to deny everyone\\n"" , PermString ( perm ) )"		918475	0					
ANR	919030	Callee	dprintf		918475	0					
ANR	919031	Identifier	dprintf		918475	0					
ANR	919032	ArgumentList	D_SECURITY		918475	1					
ANR	919033	Argument	D_SECURITY		918475	0					
ANR	919034	Identifier	D_SECURITY		918475	0					
ANR	919035	Argument	"""ipverify: %s optimized to deny everyone\\n"""		918475	1					
ANR	919036	PrimaryExpression	"""ipverify: %s optimized to deny everyone\\n"""		918475	0					
ANR	919037	Argument	PermString ( perm )		918475	2					
ANR	919038	CallExpression	PermString ( perm )		918475	0					
ANR	919039	Callee	PermString		918475	0					
ANR	919040	Identifier	PermString		918475	0					
ANR	919041	ArgumentList	perm		918475	1					
ANR	919042	Argument	perm		918475	0					
ANR	919043	Identifier	perm		918475	0					
ANR	919044	ElseStatement	else		918475	0					
ANR	919045	CompoundStatement		83:10:3185:3185	918475	0					
ANR	919046	ExpressionStatement	pentry -> behavior = USERVERIFY_ALLOW	195:4:5948:5983	918475	0	True				
ANR	919047	AssignmentExpression	pentry -> behavior = USERVERIFY_ALLOW		918475	0		=			
ANR	919048	PtrMemberAccess	pentry -> behavior		918475	0					
ANR	919049	Identifier	pentry		918475	0					
ANR	919050	Identifier	behavior		918475	1					
ANR	919051	Identifier	USERVERIFY_ALLOW		918475	1					
ANR	919052	IfStatement	if ( perm != ALLOW )		918475	1					
ANR	919053	Condition	perm != ALLOW	196:8:5993:6005	918475	0	True				
ANR	919054	EqualityExpression	perm != ALLOW		918475	0		!=			
ANR	919055	Identifier	perm		918475	0					
ANR	919056	Identifier	ALLOW		918475	1					
ANR	919057	CompoundStatement		85:24:3252:3252	918475	1					
ANR	919058	ExpressionStatement	"dprintf ( D_SECURITY , ""ipverify: %s optimized to allow anyone\\n"" , PermString ( perm ) )"	197:5:6016:6099	918475	0	True				
ANR	919059	CallExpression	"dprintf ( D_SECURITY , ""ipverify: %s optimized to allow anyone\\n"" , PermString ( perm ) )"		918475	0					
ANR	919060	Callee	dprintf		918475	0					
ANR	919061	Identifier	dprintf		918475	0					
ANR	919062	ArgumentList	D_SECURITY		918475	1					
ANR	919063	Argument	D_SECURITY		918475	0					
ANR	919064	Identifier	D_SECURITY		918475	0					
ANR	919065	Argument	"""ipverify: %s optimized to allow anyone\\n"""		918475	1					
ANR	919066	PrimaryExpression	"""ipverify: %s optimized to allow anyone\\n"""		918475	0					
ANR	919067	Argument	PermString ( perm )		918475	2					
ANR	919068	CallExpression	PermString ( perm )		918475	0					
ANR	919069	Callee	PermString		918475	0					
ANR	919070	Identifier	PermString		918475	0					
ANR	919071	ArgumentList	perm		918475	1					
ANR	919072	Argument	perm		918475	0					
ANR	919073	Identifier	perm		918475	0					
ANR	919074	ElseStatement	else		918475	0					
ANR	919075	CompoundStatement		89:9:3364:3364	918475	0					
ANR	919076	IfStatement	if ( pDeny && ! pAllow && perm != CONFIG_PERM )		918475	0					
ANR	919077	Condition	pDeny && ! pAllow && perm != CONFIG_PERM	201:8:6131:6169	918475	0	True				
ANR	919078	AndExpression	pDeny && ! pAllow && perm != CONFIG_PERM		918475	0		&&			
ANR	919079	Identifier	pDeny		918475	0					
ANR	919080	AndExpression	! pAllow && perm != CONFIG_PERM		918475	1		&&			
ANR	919081	UnaryOperationExpression	! pAllow		918475	0					
ANR	919082	UnaryOperator	!		918475	0					
ANR	919083	Identifier	pAllow		918475	1					
ANR	919084	EqualityExpression	perm != CONFIG_PERM		918475	1		!=			
ANR	919085	Identifier	perm		918475	0					
ANR	919086	Identifier	CONFIG_PERM		918475	1					
ANR	919087	CompoundStatement		90:50:3416:3416	918475	1					
ANR	919088	ExpressionStatement	pentry -> behavior = USERVERIFY_ONLY_DENIES	202:4:6179:6220	918475	0	True				
ANR	919089	AssignmentExpression	pentry -> behavior = USERVERIFY_ONLY_DENIES		918475	0		=			
ANR	919090	PtrMemberAccess	pentry -> behavior		918475	0					
ANR	919091	Identifier	pentry		918475	0					
ANR	919092	Identifier	behavior		918475	1					
ANR	919093	Identifier	USERVERIFY_ONLY_DENIES		918475	1					
ANR	919094	ElseStatement	else		918475	0					
ANR	919095	CompoundStatement		92:10:3475:3475	918475	0					
ANR	919096	ExpressionStatement	pentry -> behavior = USERVERIFY_USE_TABLE	204:4:6238:6277	918475	0	True				
ANR	919097	AssignmentExpression	pentry -> behavior = USERVERIFY_USE_TABLE		918475	0		=			
ANR	919098	PtrMemberAccess	pentry -> behavior		918475	0					
ANR	919099	Identifier	pentry		918475	0					
ANR	919100	Identifier	behavior		918475	1					
ANR	919101	Identifier	USERVERIFY_USE_TABLE		918475	1					
ANR	919102	IfStatement	if ( pAllow )		918475	1					
ANR	919103	Condition	pAllow	206:8:6292:6297	918475	0	True				
ANR	919104	Identifier	pAllow		918475	0					
ANR	919105	CompoundStatement		95:17:3544:3544	918475	1					
ANR	919106	ExpressionStatement	"fill_table ( pentry , pAllow , true )"	207:4:6307:6341	918475	0	True				
ANR	919107	CallExpression	"fill_table ( pentry , pAllow , true )"		918475	0					
ANR	919108	Callee	fill_table		918475	0					
ANR	919109	Identifier	fill_table		918475	0					
ANR	919110	ArgumentList	pentry		918475	1					
ANR	919111	Argument	pentry		918475	0					
ANR	919112	Identifier	pentry		918475	0					
ANR	919113	Argument	pAllow		918475	1					
ANR	919114	Identifier	pAllow		918475	0					
ANR	919115	Argument	true		918475	2					
ANR	919116	Identifier	true		918475	0					
ANR	919117	ExpressionStatement	free ( pAllow )	208:4:6347:6359	918475	1	True				
ANR	919118	CallExpression	free ( pAllow )		918475	0					
ANR	919119	Callee	free		918475	0					
ANR	919120	Identifier	free		918475	0					
ANR	919121	ArgumentList	pAllow		918475	1					
ANR	919122	Argument	pAllow		918475	0					
ANR	919123	Identifier	pAllow		918475	0					
ANR	919124	ExpressionStatement	pAllow = NULL	209:4:6365:6378	918475	2	True				
ANR	919125	AssignmentExpression	pAllow = NULL		918475	0		=			
ANR	919126	Identifier	pAllow		918475	0					
ANR	919127	Identifier	NULL		918475	1					
ANR	919128	IfStatement	if ( pDeny )		918475	2					
ANR	919129	Condition	pDeny	211:8:6393:6397	918475	0	True				
ANR	919130	Identifier	pDeny		918475	0					
ANR	919131	CompoundStatement		100:16:3644:3644	918475	1					
ANR	919132	ExpressionStatement	"fill_table ( pentry , pDeny , false )"	212:4:6407:6441	918475	0	True				
ANR	919133	CallExpression	"fill_table ( pentry , pDeny , false )"		918475	0					
ANR	919134	Callee	fill_table		918475	0					
ANR	919135	Identifier	fill_table		918475	0					
ANR	919136	ArgumentList	pentry		918475	1					
ANR	919137	Argument	pentry		918475	0					
ANR	919138	Identifier	pentry		918475	0					
ANR	919139	Argument	pDeny		918475	1					
ANR	919140	Identifier	pDeny		918475	0					
ANR	919141	Argument	false		918475	2					
ANR	919142	Identifier	false		918475	0					
ANR	919143	ExpressionStatement	free ( pDeny )	213:4:6447:6458	918475	1	True				
ANR	919144	CallExpression	free ( pDeny )		918475	0					
ANR	919145	Callee	free		918475	0					
ANR	919146	Identifier	free		918475	0					
ANR	919147	ArgumentList	pDeny		918475	1					
ANR	919148	Argument	pDeny		918475	0					
ANR	919149	Identifier	pDeny		918475	0					
ANR	919150	ExpressionStatement	pDeny = NULL	214:4:6464:6476	918475	2	True				
ANR	919151	AssignmentExpression	pDeny = NULL		918475	0		=			
ANR	919152	Identifier	pDeny		918475	0					
ANR	919153	Identifier	NULL		918475	1					
ANR	919154	IfStatement	if ( pAllow )		918475	13					
ANR	919155	Condition	pAllow	217:6:6493:6498	918475	0	True				
ANR	919156	Identifier	pAllow		918475	0					
ANR	919157	CompoundStatement		106:14:3744:3744	918475	1					
ANR	919158	ExpressionStatement	free ( pAllow )	218:3:6506:6518	918475	0	True				
ANR	919159	CallExpression	free ( pAllow )		918475	0					
ANR	919160	Callee	free		918475	0					
ANR	919161	Identifier	free		918475	0					
ANR	919162	ArgumentList	pAllow		918475	1					
ANR	919163	Argument	pAllow		918475	0					
ANR	919164	Identifier	pAllow		918475	0					
ANR	919165	ExpressionStatement	pAllow = NULL	219:3:6523:6536	918475	1	True				
ANR	919166	AssignmentExpression	pAllow = NULL		918475	0		=			
ANR	919167	Identifier	pAllow		918475	0					
ANR	919168	Identifier	NULL		918475	1					
ANR	919169	IfStatement	if ( pDeny )		918475	14					
ANR	919170	Condition	pDeny	221:6:6548:6552	918475	0	True				
ANR	919171	Identifier	pDeny		918475	0					
ANR	919172	CompoundStatement		110:13:3798:3798	918475	1					
ANR	919173	ExpressionStatement	free ( pDeny )	222:3:6560:6571	918475	0	True				
ANR	919174	CallExpression	free ( pDeny )		918475	0					
ANR	919175	Callee	free		918475	0					
ANR	919176	Identifier	free		918475	0					
ANR	919177	ArgumentList	pDeny		918475	1					
ANR	919178	Argument	pDeny		918475	0					
ANR	919179	Identifier	pDeny		918475	0					
ANR	919180	ExpressionStatement	pDeny = NULL	223:3:6576:6588	918475	1	True				
ANR	919181	AssignmentExpression	pDeny = NULL		918475	0		=			
ANR	919182	Identifier	pDeny		918475	0					
ANR	919183	Identifier	NULL		918475	1					
ANR	919184	IfStatement	if ( pOldAllow )		918475	15					
ANR	919185	Condition	pOldAllow	225:6:6600:6608	918475	0	True				
ANR	919186	Identifier	pOldAllow		918475	0					
ANR	919187	CompoundStatement		114:17:3854:3854	918475	1					
ANR	919188	ExpressionStatement	free ( pOldAllow )	226:3:6616:6631	918475	0	True				
ANR	919189	CallExpression	free ( pOldAllow )		918475	0					
ANR	919190	Callee	free		918475	0					
ANR	919191	Identifier	free		918475	0					
ANR	919192	ArgumentList	pOldAllow		918475	1					
ANR	919193	Argument	pOldAllow		918475	0					
ANR	919194	Identifier	pOldAllow		918475	0					
ANR	919195	ExpressionStatement	pOldAllow = NULL	227:3:6636:6652	918475	1	True				
ANR	919196	AssignmentExpression	pOldAllow = NULL		918475	0		=			
ANR	919197	Identifier	pOldAllow		918475	0					
ANR	919198	Identifier	NULL		918475	1					
ANR	919199	IfStatement	if ( pOldDeny )		918475	16					
ANR	919200	Condition	pOldDeny	229:6:6664:6671	918475	0	True				
ANR	919201	Identifier	pOldDeny		918475	0					
ANR	919202	CompoundStatement		118:16:3917:3917	918475	1					
ANR	919203	ExpressionStatement	free ( pOldDeny )	230:3:6679:6693	918475	0	True				
ANR	919204	CallExpression	free ( pOldDeny )		918475	0					
ANR	919205	Callee	free		918475	0					
ANR	919206	Identifier	free		918475	0					
ANR	919207	ArgumentList	pOldDeny		918475	1					
ANR	919208	Argument	pOldDeny		918475	0					
ANR	919209	Identifier	pOldDeny		918475	0					
ANR	919210	ExpressionStatement	pOldDeny = NULL	231:3:6698:6713	918475	1	True				
ANR	919211	AssignmentExpression	pOldDeny = NULL		918475	0		=			
ANR	919212	Identifier	pOldDeny		918475	0					
ANR	919213	Identifier	NULL		918475	1					
ANR	919214	IfStatement	if ( pNewAllow )		918475	17					
ANR	919215	Condition	pNewAllow	233:6:6725:6733	918475	0	True				
ANR	919216	Identifier	pNewAllow		918475	0					
ANR	919217	CompoundStatement		122:17:3979:3979	918475	1					
ANR	919218	ExpressionStatement	free ( pNewAllow )	234:3:6741:6756	918475	0	True				
ANR	919219	CallExpression	free ( pNewAllow )		918475	0					
ANR	919220	Callee	free		918475	0					
ANR	919221	Identifier	free		918475	0					
ANR	919222	ArgumentList	pNewAllow		918475	1					
ANR	919223	Argument	pNewAllow		918475	0					
ANR	919224	Identifier	pNewAllow		918475	0					
ANR	919225	ExpressionStatement	pNewAllow = NULL	235:3:6761:6777	918475	1	True				
ANR	919226	AssignmentExpression	pNewAllow = NULL		918475	0		=			
ANR	919227	Identifier	pNewAllow		918475	0					
ANR	919228	Identifier	NULL		918475	1					
ANR	919229	IfStatement	if ( pNewDeny )		918475	18					
ANR	919230	Condition	pNewDeny	237:6:6789:6796	918475	0	True				
ANR	919231	Identifier	pNewDeny		918475	0					
ANR	919232	CompoundStatement		126:16:4042:4042	918475	1					
ANR	919233	ExpressionStatement	free ( pNewDeny )	238:3:6804:6818	918475	0	True				
ANR	919234	CallExpression	free ( pNewDeny )		918475	0					
ANR	919235	Callee	free		918475	0					
ANR	919236	Identifier	free		918475	0					
ANR	919237	ArgumentList	pNewDeny		918475	1					
ANR	919238	Argument	pNewDeny		918475	0					
ANR	919239	Identifier	pNewDeny		918475	0					
ANR	919240	ExpressionStatement	pNewDeny = NULL	239:3:6823:6838	918475	1	True				
ANR	919241	AssignmentExpression	pNewDeny = NULL		918475	0		=			
ANR	919242	Identifier	pNewDeny		918475	0					
ANR	919243	Identifier	NULL		918475	1					
ANR	919244	ExpressionStatement	"dprintf ( D_FULLDEBUG | D_SECURITY , ""Initialized the following authorization table:\\n"" )"	242:1:6848:6930	918475	12	True				
ANR	919245	CallExpression	"dprintf ( D_FULLDEBUG | D_SECURITY , ""Initialized the following authorization table:\\n"" )"		918475	0					
ANR	919246	Callee	dprintf		918475	0					
ANR	919247	Identifier	dprintf		918475	0					
ANR	919248	ArgumentList	D_FULLDEBUG | D_SECURITY		918475	1					
ANR	919249	Argument	D_FULLDEBUG | D_SECURITY		918475	0					
ANR	919250	InclusiveOrExpression	D_FULLDEBUG | D_SECURITY		918475	0		|			
ANR	919251	Identifier	D_FULLDEBUG		918475	0					
ANR	919252	Identifier	D_SECURITY		918475	1					
ANR	919253	Argument	"""Initialized the following authorization table:\\n"""		918475	1					
ANR	919254	PrimaryExpression	"""Initialized the following authorization table:\\n"""		918475	0					
ANR	919255	IfStatement	if ( PermHashTable )		918475	13					
ANR	919256	Condition	PermHashTable	243:4:6936:6948	918475	0	True				
ANR	919257	Identifier	PermHashTable		918475	0					
ANR	919258	ExpressionStatement	PrintAuthTable ( D_FULLDEBUG | D_SECURITY )	244:2:6954:6992	918475	1	True				
ANR	919259	CallExpression	PrintAuthTable ( D_FULLDEBUG | D_SECURITY )		918475	0					
ANR	919260	Callee	PrintAuthTable		918475	0					
ANR	919261	Identifier	PrintAuthTable		918475	0					
ANR	919262	ArgumentList	D_FULLDEBUG | D_SECURITY		918475	1					
ANR	919263	Argument	D_FULLDEBUG | D_SECURITY		918475	0					
ANR	919264	InclusiveOrExpression	D_FULLDEBUG | D_SECURITY		918475	0		|			
ANR	919265	Identifier	D_FULLDEBUG		918475	0					
ANR	919266	Identifier	D_SECURITY		918475	1					
ANR	919267	ReturnStatement	return TRUE ;	245:1:6995:7006	918475	14	True				
ANR	919268	Identifier	TRUE		918475	0					
ANR	919269	ReturnType	int		918475	1					
ANR	919270	Identifier	IpVerify :: Init		918475	2					
ANR	919271	ParameterList			918475	3					
ANR	919272	CFGEntryNode	ENTRY		918475		True				
ANR	919273	CFGExitNode	EXIT		918475		True				
ANR	919274	Symbol	PermHashTable -> iterate		918475						
ANR	919275	Symbol	perm		918475						
ANR	919276	Symbol	* PermTypeArray		918475						
ANR	919277	Symbol	* perm		918475						
ANR	919278	Symbol	D_SECURITY		918475						
ANR	919279	Symbol	allow_param		918475						
ANR	919280	Symbol	pOldAllow		918475						
ANR	919281	Symbol	pNewDeny		918475						
ANR	919282	Symbol	USERVERIFY_DENY		918475						
ANR	919283	Symbol	CONFIG_PERM		918475						
ANR	919284	Symbol	ssysname		918475						
ANR	919285	Symbol	pDeny		918475						
ANR	919286	Symbol	merge		918475						
ANR	919287	Symbol	PermHashTable		918475						
ANR	919288	Symbol	* PermHashTable		918475						
ANR	919289	Symbol	NEXT_PERM		918475						
ANR	919290	Symbol	& allow_param		918475						
ANR	919291	Symbol	pAllow		918475						
ANR	919292	Symbol	value		918475						
ANR	919293	Symbol	key		918475						
ANR	919294	Symbol	ALLOW		918475						
ANR	919295	Symbol	allow_param . Value		918475						
ANR	919296	Symbol	pNewAllow		918475						
ANR	919297	Symbol	LAST_PERM		918475						
ANR	919298	Symbol	strcmp		918475						
ANR	919299	Symbol	* pentry		918475						
ANR	919300	Symbol	USERVERIFY_USE_TABLE		918475						
ANR	919301	Symbol	NULL		918475						
ANR	919302	Symbol	pentry		918475						
ANR	919303	Symbol	get_mySubSystem ( ) -> getName		918475						
ANR	919304	Symbol	did_init		918475						
ANR	919305	Symbol	* get_mySubSystem		918475						
ANR	919306	Symbol	SecMan :: getSecSetting		918475						
ANR	919307	Symbol	false		918475						
ANR	919308	Symbol	TRUE		918475						
ANR	919309	Symbol	FIRST_PERM		918475						
ANR	919310	Symbol	D_FULLDEBUG		918475						
ANR	919311	Symbol	PermTypeArray		918475						
ANR	919312	Symbol	deny_param		918475						
ANR	919313	Symbol	USERVERIFY_ALLOW		918475						
ANR	919314	Symbol	deny_param . Value		918475						
ANR	919315	Symbol	pentry -> behavior		918475						
ANR	919316	Symbol	& deny_param		918475						
ANR	919317	Symbol	true		918475						
ANR	919318	Symbol	PermString		918475						
ANR	919319	Symbol	get_mySubSystem		918475						
ANR	919320	Symbol	USERVERIFY_ONLY_DENIES		918475						
ANR	919321	Symbol	pOldDeny		918475						
ANR	919322	Function	IpVerify :: merge	248:0:7011:7462							
ANR	919323	FunctionDef	"IpVerify :: merge (char * pNewList , char * pOldList)"		919322	0					
ANR	919324	CompoundStatement		249:0:7070:7462	919322	0					
ANR	919325	IdentifierDeclStatement	char * pList = NULL ;	250:4:7076:7095	919322	0	True				
ANR	919326	IdentifierDecl	* pList = NULL		919322	0					
ANR	919327	IdentifierDeclType	char *		919322	0					
ANR	919328	Identifier	pList		919322	1					
ANR	919329	AssignmentExpression	* pList = NULL		919322	2		=			
ANR	919330	Identifier	NULL		919322	0					
ANR	919331	Identifier	NULL		919322	1					
ANR	919332	IfStatement	if ( pOldList )		919322	1					
ANR	919333	Condition	pOldList	252:8:7106:7113	919322	0	True				
ANR	919334	Identifier	pOldList		919322	0					
ANR	919335	CompoundStatement		4:18:45:45	919322	1					
ANR	919336	IfStatement	if ( pNewList )		919322	0					
ANR	919337	Condition	pNewList	253:12:7130:7137	919322	0	True				
ANR	919338	Identifier	pNewList		919322	0					
ANR	919339	CompoundStatement		5:22:69:69	919322	1					
ANR	919340	ExpressionStatement	pList = ( char * ) malloc ( strlen ( pOldList ) + strlen ( pNewList ) + 2 )	254:12:7154:7217	919322	0	True				
ANR	919341	AssignmentExpression	pList = ( char * ) malloc ( strlen ( pOldList ) + strlen ( pNewList ) + 2 )		919322	0		=			
ANR	919342	Identifier	pList		919322	0					
ANR	919343	CastExpression	( char * ) malloc ( strlen ( pOldList ) + strlen ( pNewList ) + 2 )		919322	1					
ANR	919344	CastTarget	char *		919322	0					
ANR	919345	CallExpression	malloc ( strlen ( pOldList ) + strlen ( pNewList ) + 2 )		919322	1					
ANR	919346	Callee	malloc		919322	0					
ANR	919347	Identifier	malloc		919322	0					
ANR	919348	ArgumentList	strlen ( pOldList ) + strlen ( pNewList ) + 2		919322	1					
ANR	919349	Argument	strlen ( pOldList ) + strlen ( pNewList ) + 2		919322	0					
ANR	919350	AdditiveExpression	strlen ( pOldList ) + strlen ( pNewList ) + 2		919322	0		+			
ANR	919351	CallExpression	strlen ( pOldList )		919322	0					
ANR	919352	Callee	strlen		919322	0					
ANR	919353	Identifier	strlen		919322	0					
ANR	919354	ArgumentList	pOldList		919322	1					
ANR	919355	Argument	pOldList		919322	0					
ANR	919356	Identifier	pOldList		919322	0					
ANR	919357	AdditiveExpression	strlen ( pNewList ) + 2		919322	1		+			
ANR	919358	CallExpression	strlen ( pNewList )		919322	0					
ANR	919359	Callee	strlen		919322	0					
ANR	919360	Identifier	strlen		919322	0					
ANR	919361	ArgumentList	pNewList		919322	1					
ANR	919362	Argument	pNewList		919322	0					
ANR	919363	Identifier	pNewList		919322	0					
ANR	919364	PrimaryExpression	2		919322	1					
ANR	919365	ExpressionStatement	"sprintf ( pList , ""%s,%s"" , pNewList , pOldList )"	255:12:7231:7274	919322	1	True				
ANR	919366	CallExpression	"sprintf ( pList , ""%s,%s"" , pNewList , pOldList )"		919322	0					
ANR	919367	Callee	sprintf		919322	0					
ANR	919368	Identifier	sprintf		919322	0					
ANR	919369	ArgumentList	pList		919322	1					
ANR	919370	Argument	pList		919322	0					
ANR	919371	Identifier	pList		919322	0					
ANR	919372	Argument	"""%s,%s"""		919322	1					
ANR	919373	PrimaryExpression	"""%s,%s"""		919322	0					
ANR	919374	Argument	pNewList		919322	2					
ANR	919375	Identifier	pNewList		919322	0					
ANR	919376	Argument	pOldList		919322	3					
ANR	919377	Identifier	pOldList		919322	0					
ANR	919378	ElseStatement	else		919322	0					
ANR	919379	CompoundStatement		9:13:228:228	919322	0					
ANR	919380	ExpressionStatement	pList = strdup ( pOldList )	258:12:7313:7337	919322	0	True				
ANR	919381	AssignmentExpression	pList = strdup ( pOldList )		919322	0		=			
ANR	919382	Identifier	pList		919322	0					
ANR	919383	CallExpression	strdup ( pOldList )		919322	1					
ANR	919384	Callee	strdup		919322	0					
ANR	919385	Identifier	strdup		919322	0					
ANR	919386	ArgumentList	pOldList		919322	1					
ANR	919387	Argument	pOldList		919322	0					
ANR	919388	Identifier	pOldList		919322	0					
ANR	919389	ElseStatement	else		919322	0					
ANR	919390	CompoundStatement		13:9:293:293	919322	0					
ANR	919391	IfStatement	if ( pNewList )		919322	0					
ANR	919392	Condition	pNewList	262:12:7378:7385	919322	0	True				
ANR	919393	Identifier	pNewList		919322	0					
ANR	919394	CompoundStatement		14:22:317:317	919322	1					
ANR	919395	ExpressionStatement	pList = strdup ( pNewList )	263:12:7402:7426	919322	0	True				
ANR	919396	AssignmentExpression	pList = strdup ( pNewList )		919322	0		=			
ANR	919397	Identifier	pList		919322	0					
ANR	919398	CallExpression	strdup ( pNewList )		919322	1					
ANR	919399	Callee	strdup		919322	0					
ANR	919400	Identifier	strdup		919322	0					
ANR	919401	ArgumentList	pNewList		919322	1					
ANR	919402	Argument	pNewList		919322	0					
ANR	919403	Identifier	pNewList		919322	0					
ANR	919404	ReturnStatement	return pList ;	266:4:7448:7460	919322	2	True				
ANR	919405	Identifier	pList		919322	0					
ANR	919406	ReturnType	char *		919322	1					
ANR	919407	Identifier	IpVerify :: merge		919322	2					
ANR	919408	ParameterList	"char * pNewList , char * pOldList"		919322	3					
ANR	919409	Parameter	char * pNewList	248:25:7036:7050	919322	0	True				
ANR	919410	ParameterType	char *		919322	0					
ANR	919411	Identifier	pNewList		919322	1					
ANR	919412	Parameter	char * pOldList	248:42:7053:7067	919322	1	True				
ANR	919413	ParameterType	char *		919322	0					
ANR	919414	Identifier	pOldList		919322	1					
ANR	919415	CFGEntryNode	ENTRY		919322		True				
ANR	919416	CFGExitNode	EXIT		919322		True				
ANR	919417	Symbol	pList		919322						
ANR	919418	Symbol	strlen		919322						
ANR	919419	Symbol	malloc		919322						
ANR	919420	Symbol	NULL		919322						
ANR	919421	Symbol	pOldList		919322						
ANR	919422	Symbol	pNewList		919322						
ANR	919423	Symbol	strdup		919322						
ANR	919424	Function	IpVerify :: has_user	269:0:7465:7772							
ANR	919425	FunctionDef	"IpVerify :: has_user (UserPerm_t * perm , const char * user , perm_mask_t & mask)"		919424	0					
ANR	919426	CompoundStatement		270:0:7550:7772	919424	0					
ANR	919427	IdentifierDeclStatement	MyString user_key ;	272:4:7599:7616	919424	0	True				
ANR	919428	IdentifierDecl	user_key		919424	0					
ANR	919429	IdentifierDeclType	MyString		919424	0					
ANR	919430	Identifier	user_key		919424	1					
ANR	919431	ExpressionStatement	assert ( perm )	273:4:7622:7634	919424	1	True				
ANR	919432	CallExpression	assert ( perm )		919424	0					
ANR	919433	Callee	assert		919424	0					
ANR	919434	Identifier	assert		919424	0					
ANR	919435	ArgumentList	perm		919424	1					
ANR	919436	Argument	perm		919424	0					
ANR	919437	Identifier	perm		919424	0					
ANR	919438	IfStatement	if ( ! user || ! * user )		919424	2					
ANR	919439	Condition	! user || ! * user	275:8:7645:7659	919424	0	True				
ANR	919440	OrExpression	! user || ! * user		919424	0		||			
ANR	919441	UnaryOperationExpression	! user		919424	0					
ANR	919442	UnaryOperator	!		919424	0					
ANR	919443	Identifier	user		919424	1					
ANR	919444	UnaryOperationExpression	! * user		919424	1					
ANR	919445	UnaryOperator	!		919424	0					
ANR	919446	UnaryOperationExpression	* user		919424	1					
ANR	919447	UnaryOperator	*		919424	0					
ANR	919448	Identifier	user		919424	1					
ANR	919449	CompoundStatement		6:26:112:112	919424	1					
ANR	919450	ExpressionStatement	user_key = TotallyWild	276:2:7667:7689	919424	0	True				
ANR	919451	AssignmentExpression	user_key = TotallyWild		919424	0		=			
ANR	919452	Identifier	user_key		919424	0					
ANR	919453	Identifier	TotallyWild		919424	1					
ANR	919454	ElseStatement	else		919424	0					
ANR	919455	CompoundStatement		9:6:149:149	919424	0					
ANR	919456	ExpressionStatement	user_key = user	279:2:7704:7719	919424	0	True				
ANR	919457	AssignmentExpression	user_key = user		919424	0		=			
ANR	919458	Identifier	user_key		919424	0					
ANR	919459	Identifier	user		919424	1					
ANR	919460	ReturnStatement	"return perm -> lookup ( user_key , mask ) != - 1 ;"	282:4:7729:7770	919424	3	True				
ANR	919461	EqualityExpression	"perm -> lookup ( user_key , mask ) != - 1"		919424	0		!=			
ANR	919462	CallExpression	"perm -> lookup ( user_key , mask )"		919424	0					
ANR	919463	Callee	perm -> lookup		919424	0					
ANR	919464	PtrMemberAccess	perm -> lookup		919424	0					
ANR	919465	Identifier	perm		919424	0					
ANR	919466	Identifier	lookup		919424	1					
ANR	919467	ArgumentList	user_key		919424	1					
ANR	919468	Argument	user_key		919424	0					
ANR	919469	Identifier	user_key		919424	0					
ANR	919470	Argument	mask		919424	1					
ANR	919471	Identifier	mask		919424	0					
ANR	919472	UnaryOperationExpression	- 1		919424	1					
ANR	919473	UnaryOperator	-		919424	0					
ANR	919474	PrimaryExpression	1		919424	1					
ANR	919475	ReturnType	bool		919424	1					
ANR	919476	Identifier	IpVerify :: has_user		919424	2					
ANR	919477	ParameterList	"UserPerm_t * perm , const char * user , perm_mask_t & mask"		919424	3					
ANR	919478	Parameter	UserPerm_t * perm	269:26:7491:7507	919424	0	True				
ANR	919479	ParameterType	UserPerm_t *		919424	0					
ANR	919480	Identifier	perm		919424	1					
ANR	919481	Parameter	const char * user	269:45:7510:7526	919424	1	True				
ANR	919482	ParameterType	const char *		919424	0					
ANR	919483	Identifier	user		919424	1					
ANR	919484	Parameter	perm_mask_t & mask	269:64:7529:7546	919424	2	True				
ANR	919485	ParameterType	perm_mask_t &		919424	0					
ANR	919486	Identifier	mask		919424	1					
ANR	919487	CFGEntryNode	ENTRY		919424		True				
ANR	919488	CFGExitNode	EXIT		919424		True				
ANR	919489	Symbol	perm		919424						
ANR	919490	Symbol	* user		919424						
ANR	919491	Symbol	* perm		919424						
ANR	919492	Symbol	user_key		919424						
ANR	919493	Symbol	user		919424						
ANR	919494	Symbol	TotallyWild		919424						
ANR	919495	Symbol	perm -> lookup		919424						
ANR	919496	Symbol	mask		919424						
ANR	919497	Function	IpVerify :: LookupCachedVerifyResult	286:0:7779:8237							
ANR	919498	FunctionDef	"IpVerify :: LookupCachedVerifyResult (DCpermission perm , const struct in6_addr & sin6 , const char * user , perm_mask_t & mask)"		919497	0					
ANR	919499	CompoundStatement		288:0:7907:8237	919497	0					
ANR	919500	IdentifierDeclStatement	UserPerm_t * ptable = NULL ;	289:4:7913:7939	919497	0	True				
ANR	919501	IdentifierDecl	* ptable = NULL		919497	0					
ANR	919502	IdentifierDeclType	UserPerm_t *		919497	0					
ANR	919503	Identifier	ptable		919497	1					
ANR	919504	AssignmentExpression	* ptable = NULL		919497	2		=			
ANR	919505	Identifier	NULL		919497	0					
ANR	919506	Identifier	NULL		919497	1					
ANR	919507	IfStatement	"if ( PermHashTable -> lookup ( sin6 , ptable ) != - 1 )"		919497	1					
ANR	919508	Condition	"PermHashTable -> lookup ( sin6 , ptable ) != - 1"	291:5:7947:7987	919497	0	True				
ANR	919509	EqualityExpression	"PermHashTable -> lookup ( sin6 , ptable ) != - 1"		919497	0		!=			
ANR	919510	CallExpression	"PermHashTable -> lookup ( sin6 , ptable )"		919497	0					
ANR	919511	Callee	PermHashTable -> lookup		919497	0					
ANR	919512	PtrMemberAccess	PermHashTable -> lookup		919497	0					
ANR	919513	Identifier	PermHashTable		919497	0					
ANR	919514	Identifier	lookup		919497	1					
ANR	919515	ArgumentList	sin6		919497	1					
ANR	919516	Argument	sin6		919497	0					
ANR	919517	Identifier	sin6		919497	0					
ANR	919518	Argument	ptable		919497	1					
ANR	919519	Identifier	ptable		919497	0					
ANR	919520	UnaryOperationExpression	- 1		919497	1					
ANR	919521	UnaryOperator	-		919497	0					
ANR	919522	PrimaryExpression	1		919497	1					
ANR	919523	CompoundStatement		4:49:83:83	919497	1					
ANR	919524	IfStatement	"if ( has_user ( ptable , user , mask ) )"		919497	0					
ANR	919525	Condition	"has_user ( ptable , user , mask )"	293:6:8000:8027	919497	0	True				
ANR	919526	CallExpression	"has_user ( ptable , user , mask )"		919497	0					
ANR	919527	Callee	has_user		919497	0					
ANR	919528	Identifier	has_user		919497	0					
ANR	919529	ArgumentList	ptable		919497	1					
ANR	919530	Argument	ptable		919497	0					
ANR	919531	Identifier	ptable		919497	0					
ANR	919532	Argument	user		919497	1					
ANR	919533	Identifier	user		919497	0					
ANR	919534	Argument	mask		919497	2					
ANR	919535	Identifier	mask		919497	0					
ANR	919536	CompoundStatement		6:36:122:122	919497	1					
ANR	919537	IfStatement	if ( mask & ( allow_mask ( perm ) | deny_mask ( perm ) ) )		919497	0					
ANR	919538	Condition	mask & ( allow_mask ( perm ) | deny_mask ( perm ) )	298:7:8147:8187	919497	0	True				
ANR	919539	BitAndExpression	mask & ( allow_mask ( perm ) | deny_mask ( perm ) )		919497	0		&			
ANR	919540	Identifier	mask		919497	0					
ANR	919541	InclusiveOrExpression	allow_mask ( perm ) | deny_mask ( perm )		919497	1		|			
ANR	919542	CallExpression	allow_mask ( perm )		919497	0					
ANR	919543	Callee	allow_mask		919497	0					
ANR	919544	Identifier	allow_mask		919497	0					
ANR	919545	ArgumentList	perm		919497	1					
ANR	919546	Argument	perm		919497	0					
ANR	919547	Identifier	perm		919497	0					
ANR	919548	CallExpression	deny_mask ( perm )		919497	1					
ANR	919549	Callee	deny_mask		919497	0					
ANR	919550	Identifier	deny_mask		919497	0					
ANR	919551	ArgumentList	perm		919497	1					
ANR	919552	Argument	perm		919497	0					
ANR	919553	Identifier	perm		919497	0					
ANR	919554	CompoundStatement		11:51:283:283	919497	1					
ANR	919555	ReturnStatement	return true ;	299:4:8197:8208	919497	0	True				
ANR	919556	Identifier	true		919497	0					
ANR	919557	ReturnStatement	return false ;	303:1:8223:8235	919497	2	True				
ANR	919558	Identifier	false		919497	0					
ANR	919559	ReturnType	bool		919497	1					
ANR	919560	Identifier	IpVerify :: LookupCachedVerifyResult		919497	2					
ANR	919561	ParameterList	"DCpermission perm , const struct in6_addr & sin6 , const char * user , perm_mask_t & mask"		919497	3					
ANR	919562	Parameter	DCpermission perm	287:36:7820:7836	919497	0	True				
ANR	919563	ParameterType	DCpermission		919497	0					
ANR	919564	Identifier	perm		919497	1					
ANR	919565	Parameter	const struct in6_addr & sin6	287:55:7839:7865	919497	1	True				
ANR	919566	ParameterType	const struct in6_addr &		919497	0					
ANR	919567	Identifier	sin6		919497	1					
ANR	919568	Parameter	const char * user	287:84:7868:7884	919497	2	True				
ANR	919569	ParameterType	const char *		919497	0					
ANR	919570	Identifier	user		919497	1					
ANR	919571	Parameter	perm_mask_t & mask	287:103:7887:7904	919497	3	True				
ANR	919572	ParameterType	perm_mask_t &		919497	0					
ANR	919573	Identifier	mask		919497	1					
ANR	919574	CFGEntryNode	ENTRY		919497		True				
ANR	919575	CFGExitNode	EXIT		919497		True				
ANR	919576	Symbol	allow_mask		919497						
ANR	919577	Symbol	NULL		919497						
ANR	919578	Symbol	perm		919497						
ANR	919579	Symbol	false		919497						
ANR	919580	Symbol	sin6		919497						
ANR	919581	Symbol	PermHashTable -> lookup		919497						
ANR	919582	Symbol	ptable		919497						
ANR	919583	Symbol	has_user		919497						
ANR	919584	Symbol	PermHashTable		919497						
ANR	919585	Symbol	deny_mask		919497						
ANR	919586	Symbol	true		919497						
ANR	919587	Symbol	* PermHashTable		919497						
ANR	919588	Symbol	user		919497						
ANR	919589	Symbol	mask		919497						
ANR	919590	Function	IpVerify :: add_hash_entry	306:0:8240:9247							
ANR	919591	FunctionDef	"IpVerify :: add_hash_entry (const struct in6_addr & sin6_addr , const char * user , perm_mask_t new_mask)"		919590	0					
ANR	919592	CompoundStatement		308:0:8345:9247	919590	0					
ANR	919593	IdentifierDeclStatement	UserPerm_t * perm = NULL ;	309:4:8351:8375	919590	0	True				
ANR	919594	IdentifierDecl	* perm = NULL		919590	0					
ANR	919595	IdentifierDeclType	UserPerm_t *		919590	0					
ANR	919596	Identifier	perm		919590	1					
ANR	919597	AssignmentExpression	* perm = NULL		919590	2		=			
ANR	919598	Identifier	NULL		919590	0					
ANR	919599	Identifier	NULL		919590	1					
ANR	919600	IdentifierDeclStatement	perm_mask_t old_mask = 0 ;	310:4:8381:8405	919590	1	True				
ANR	919601	IdentifierDecl	old_mask = 0		919590	0					
ANR	919602	IdentifierDeclType	perm_mask_t		919590	0					
ANR	919603	Identifier	old_mask		919590	1					
ANR	919604	AssignmentExpression	old_mask = 0		919590	2		=			
ANR	919605	Identifier	old_mask		919590	0					
ANR	919606	PrimaryExpression	0		919590	1					
ANR	919607	IdentifierDeclStatement	MyString user_key = user ;	311:4:8445:8469	919590	2	True				
ANR	919608	IdentifierDecl	user_key = user		919590	0					
ANR	919609	IdentifierDeclType	MyString		919590	0					
ANR	919610	Identifier	user_key		919590	1					
ANR	919611	AssignmentExpression	user_key = user		919590	2		=			
ANR	919612	Identifier	user		919590	0					
ANR	919613	Identifier	user		919590	1					
ANR	919614	IfStatement	"if ( PermHashTable -> lookup ( sin6_addr , perm ) != - 1 )"		919590	3					
ANR	919615	Condition	"PermHashTable -> lookup ( sin6_addr , perm ) != - 1"	314:6:8505:8548	919590	0	True				
ANR	919616	EqualityExpression	"PermHashTable -> lookup ( sin6_addr , perm ) != - 1"		919590	0		!=			
ANR	919617	CallExpression	"PermHashTable -> lookup ( sin6_addr , perm )"		919590	0					
ANR	919618	Callee	PermHashTable -> lookup		919590	0					
ANR	919619	PtrMemberAccess	PermHashTable -> lookup		919590	0					
ANR	919620	Identifier	PermHashTable		919590	0					
ANR	919621	Identifier	lookup		919590	1					
ANR	919622	ArgumentList	sin6_addr		919590	1					
ANR	919623	Argument	sin6_addr		919590	0					
ANR	919624	Identifier	sin6_addr		919590	0					
ANR	919625	Argument	perm		919590	1					
ANR	919626	Identifier	perm		919590	0					
ANR	919627	UnaryOperationExpression	- 1		919590	1					
ANR	919628	UnaryOperator	-		919590	0					
ANR	919629	PrimaryExpression	1		919590	1					
ANR	919630	CompoundStatement		7:53:206:206	919590	1					
ANR	919631	IfStatement	"if ( has_user ( perm , user , old_mask ) )"		919590	0					
ANR	919632	Condition	"has_user ( perm , user , old_mask )"	317:6:8593:8622	919590	0	True				
ANR	919633	CallExpression	"has_user ( perm , user , old_mask )"		919590	0					
ANR	919634	Callee	has_user		919590	0					
ANR	919635	Identifier	has_user		919590	0					
ANR	919636	ArgumentList	perm		919590	1					
ANR	919637	Argument	perm		919590	0					
ANR	919638	Identifier	perm		919590	0					
ANR	919639	Argument	user		919590	1					
ANR	919640	Identifier	user		919590	0					
ANR	919641	Argument	old_mask		919590	2					
ANR	919642	Identifier	old_mask		919590	0					
ANR	919643	CompoundStatement		10:38:279:279	919590	1					
ANR	919644	ExpressionStatement	perm -> remove ( user_key )	320:3:8714:8736	919590	0	True				
ANR	919645	CallExpression	perm -> remove ( user_key )		919590	0					
ANR	919646	Callee	perm -> remove		919590	0					
ANR	919647	PtrMemberAccess	perm -> remove		919590	0					
ANR	919648	Identifier	perm		919590	0					
ANR	919649	Identifier	remove		919590	1					
ANR	919650	ArgumentList	user_key		919590	1					
ANR	919651	Argument	user_key		919590	0					
ANR	919652	Identifier	user_key		919590	0					
ANR	919653	ElseStatement	else		919590	0					
ANR	919654	CompoundStatement		16:9:414:414	919590	0					
ANR	919655	ExpressionStatement	"perm = new UserPerm_t ( 42 , compute_host_hash )"	324:8:8770:8814	919590	0	True				
ANR	919656	AssignmentExpression	"perm = new UserPerm_t ( 42 , compute_host_hash )"		919590	0		=			
ANR	919657	Identifier	perm		919590	0					
ANR	919658	Expression	"42 , compute_host_hash"		919590	1					
ANR	919659	PrimaryExpression	42		919590	0					
ANR	919660	Identifier	compute_host_hash		919590	1					
ANR	919661	IfStatement	"if ( PermHashTable -> insert ( sin6_addr , perm ) != 0 )"		919590	1					
ANR	919662	Condition	"PermHashTable -> insert ( sin6_addr , perm ) != 0"	325:12:8828:8870	919590	0	True				
ANR	919663	EqualityExpression	"PermHashTable -> insert ( sin6_addr , perm ) != 0"		919590	0		!=			
ANR	919664	CallExpression	"PermHashTable -> insert ( sin6_addr , perm )"		919590	0					
ANR	919665	Callee	PermHashTable -> insert		919590	0					
ANR	919666	PtrMemberAccess	PermHashTable -> insert		919590	0					
ANR	919667	Identifier	PermHashTable		919590	0					
ANR	919668	Identifier	insert		919590	1					
ANR	919669	ArgumentList	sin6_addr		919590	1					
ANR	919670	Argument	sin6_addr		919590	0					
ANR	919671	Identifier	sin6_addr		919590	0					
ANR	919672	Argument	perm		919590	1					
ANR	919673	Identifier	perm		919590	0					
ANR	919674	PrimaryExpression	0		919590	1					
ANR	919675	CompoundStatement		18:57:527:527	919590	1					
ANR	919676	Statement	delete	326:12:8887:8892	919590	0	True				
ANR	919677	ExpressionStatement	perm	326:19:8894:8898	919590	1	True				
ANR	919678	Identifier	perm		919590	0					
ANR	919679	ReturnStatement	return FALSE ;	327:12:8912:8924	919590	2	True				
ANR	919680	Identifier	FALSE		919590	0					
ANR	919681	ExpressionStatement	"perm -> insert ( user_key , old_mask | new_mask )"	331:4:8947:8990	919590	4	True				
ANR	919682	CallExpression	"perm -> insert ( user_key , old_mask | new_mask )"		919590	0					
ANR	919683	Callee	perm -> insert		919590	0					
ANR	919684	PtrMemberAccess	perm -> insert		919590	0					
ANR	919685	Identifier	perm		919590	0					
ANR	919686	Identifier	insert		919590	1					
ANR	919687	ArgumentList	user_key		919590	1					
ANR	919688	Argument	user_key		919590	0					
ANR	919689	Identifier	user_key		919590	0					
ANR	919690	Argument	old_mask | new_mask		919590	1					
ANR	919691	InclusiveOrExpression	old_mask | new_mask		919590	0		|			
ANR	919692	Identifier	old_mask		919590	0					
ANR	919693	Identifier	new_mask		919590	1					
ANR	919694	IfStatement	if ( DebugFlags & ( D_FULLDEBUG | D_SECURITY ) )		919590	5					
ANR	919695	Condition	DebugFlags & ( D_FULLDEBUG | D_SECURITY )	333:5:8998:9034	919590	0	True				
ANR	919696	BitAndExpression	DebugFlags & ( D_FULLDEBUG | D_SECURITY )		919590	0		&			
ANR	919697	Identifier	DebugFlags		919590	0					
ANR	919698	InclusiveOrExpression	D_FULLDEBUG | D_SECURITY		919590	1		|			
ANR	919699	Identifier	D_FULLDEBUG		919590	0					
ANR	919700	Identifier	D_SECURITY		919590	1					
ANR	919701	CompoundStatement		27:2:696:713	919590	1					
ANR	919702	IdentifierDeclStatement	MyString auth_str ;	334:2:9042:9059	919590	0	True				
ANR	919703	IdentifierDecl	auth_str		919590	0					
ANR	919704	IdentifierDeclType	MyString		919590	0					
ANR	919705	Identifier	auth_str		919590	1					
ANR	919706	ExpressionStatement	"AuthEntryToString ( sin6_addr , user , new_mask , auth_str )"	335:2:9063:9115	919590	1	True				
ANR	919707	CallExpression	"AuthEntryToString ( sin6_addr , user , new_mask , auth_str )"		919590	0					
ANR	919708	Callee	AuthEntryToString		919590	0					
ANR	919709	Identifier	AuthEntryToString		919590	0					
ANR	919710	ArgumentList	sin6_addr		919590	1					
ANR	919711	Argument	sin6_addr		919590	0					
ANR	919712	Identifier	sin6_addr		919590	0					
ANR	919713	Argument	user		919590	1					
ANR	919714	Identifier	user		919590	0					
ANR	919715	Argument	new_mask		919590	2					
ANR	919716	Identifier	new_mask		919590	0					
ANR	919717	Argument	auth_str		919590	3					
ANR	919718	Identifier	auth_str		919590	0					
ANR	919719	ExpressionStatement	"dprintf ( D_FULLDEBUG | D_SECURITY , ""Adding to resolved authorization table: %s\\n"" , auth_str . Value ( ) )"	336:2:9119:9224	919590	2	True				
ANR	919720	CallExpression	"dprintf ( D_FULLDEBUG | D_SECURITY , ""Adding to resolved authorization table: %s\\n"" , auth_str . Value ( ) )"		919590	0					
ANR	919721	Callee	dprintf		919590	0					
ANR	919722	Identifier	dprintf		919590	0					
ANR	919723	ArgumentList	D_FULLDEBUG | D_SECURITY		919590	1					
ANR	919724	Argument	D_FULLDEBUG | D_SECURITY		919590	0					
ANR	919725	InclusiveOrExpression	D_FULLDEBUG | D_SECURITY		919590	0		|			
ANR	919726	Identifier	D_FULLDEBUG		919590	0					
ANR	919727	Identifier	D_SECURITY		919590	1					
ANR	919728	Argument	"""Adding to resolved authorization table: %s\\n"""		919590	1					
ANR	919729	PrimaryExpression	"""Adding to resolved authorization table: %s\\n"""		919590	0					
ANR	919730	Argument	auth_str . Value ( )		919590	2					
ANR	919731	CallExpression	auth_str . Value ( )		919590	0					
ANR	919732	Callee	auth_str . Value		919590	0					
ANR	919733	MemberAccess	auth_str . Value		919590	0					
ANR	919734	Identifier	auth_str		919590	0					
ANR	919735	Identifier	Value		919590	1					
ANR	919736	ArgumentList			919590	1					
ANR	919737	ReturnStatement	return TRUE ;	341:4:9234:9245	919590	6	True				
ANR	919738	Identifier	TRUE		919590	0					
ANR	919739	ReturnType	int		919590	1					
ANR	919740	Identifier	IpVerify :: add_hash_entry		919590	2					
ANR	919741	ParameterList	"const struct in6_addr & sin6_addr , const char * user , perm_mask_t new_mask"		919590	3					
ANR	919742	Parameter	const struct in6_addr & sin6_addr	307:25:8269:8301	919590	0	True				
ANR	919743	ParameterType	const struct in6_addr &		919590	0					
ANR	919744	Identifier	sin6_addr		919590	1					
ANR	919745	Parameter	const char * user	307:60:8304:8320	919590	1	True				
ANR	919746	ParameterType	const char *		919590	0					
ANR	919747	Identifier	user		919590	1					
ANR	919748	Parameter	perm_mask_t new_mask	307:79:8323:8342	919590	2	True				
ANR	919749	ParameterType	perm_mask_t		919590	0					
ANR	919750	Identifier	new_mask		919590	1					
ANR	919751	CFGEntryNode	ENTRY		919590		True				
ANR	919752	CFGExitNode	EXIT		919590		True				
ANR	919753	Symbol	auth_str . Value		919590						
ANR	919754	Symbol	NULL		919590						
ANR	919755	Symbol	perm		919590						
ANR	919756	Symbol	D_SECURITY		919590						
ANR	919757	Symbol	sin6_addr		919590						
ANR	919758	Symbol	PermHashTable -> insert		919590						
ANR	919759	Symbol	compute_host_hash		919590						
ANR	919760	Symbol	user_key		919590						
ANR	919761	Symbol	TRUE		919590						
ANR	919762	Symbol	DebugFlags		919590						
ANR	919763	Symbol	D_FULLDEBUG		919590						
ANR	919764	Symbol	PermHashTable -> lookup		919590						
ANR	919765	Symbol	old_mask		919590						
ANR	919766	Symbol	has_user		919590						
ANR	919767	Symbol	PermHashTable		919590						
ANR	919768	Symbol	auth_str		919590						
ANR	919769	Symbol	* PermHashTable		919590						
ANR	919770	Symbol	FALSE		919590						
ANR	919771	Symbol	user		919590						
ANR	919772	Symbol	new_mask		919590						
ANR	919773	Function	IpVerify :: allow_mask	344:0:9250:9346							
ANR	919774	FunctionDef	IpVerify :: allow_mask (DCpermission perm)		919773	0					
ANR	919775	CompoundStatement		345:40:9303:9346	919773	0					
ANR	919776	ReturnStatement	return ( ( perm_mask_t ) 1 << ( 1 + 2 * perm ) ) ;	346:1:9307:9344	919773	0	True				
ANR	919777	ShiftExpression	( perm_mask_t ) 1 << ( 1 + 2 * perm )		919773	0		<<			
ANR	919778	CastExpression	( perm_mask_t ) 1		919773	0					
ANR	919779	CastTarget	perm_mask_t		919773	0					
ANR	919780	PrimaryExpression	1		919773	1					
ANR	919781	AdditiveExpression	1 + 2 * perm		919773	1		+			
ANR	919782	PrimaryExpression	1		919773	0					
ANR	919783	MultiplicativeExpression	2 * perm		919773	1		*			
ANR	919784	PrimaryExpression	2		919773	0					
ANR	919785	Identifier	perm		919773	1					
ANR	919786	ReturnType	perm_mask_t		919773	1					
ANR	919787	Identifier	IpVerify :: allow_mask		919773	2					
ANR	919788	ParameterList	DCpermission perm		919773	3					
ANR	919789	Parameter	DCpermission perm	345:21:9284:9300	919773	0	True				
ANR	919790	ParameterType	DCpermission		919773	0					
ANR	919791	Identifier	perm		919773	1					
ANR	919792	CFGEntryNode	ENTRY		919773		True				
ANR	919793	CFGExitNode	EXIT		919773		True				
ANR	919794	Symbol	perm		919773						
ANR	919795	Function	IpVerify :: deny_mask	349:0:9349:9444							
ANR	919796	FunctionDef	IpVerify :: deny_mask (DCpermission perm)		919795	0					
ANR	919797	CompoundStatement		350:39:9401:9444	919795	0					
ANR	919798	ReturnStatement	return ( ( perm_mask_t ) 1 << ( 2 + 2 * perm ) ) ;	351:1:9405:9442	919795	0	True				
ANR	919799	ShiftExpression	( perm_mask_t ) 1 << ( 2 + 2 * perm )		919795	0		<<			
ANR	919800	CastExpression	( perm_mask_t ) 1		919795	0					
ANR	919801	CastTarget	perm_mask_t		919795	0					
ANR	919802	PrimaryExpression	1		919795	1					
ANR	919803	AdditiveExpression	2 + 2 * perm		919795	1		+			
ANR	919804	PrimaryExpression	2		919795	0					
ANR	919805	MultiplicativeExpression	2 * perm		919795	1		*			
ANR	919806	PrimaryExpression	2		919795	0					
ANR	919807	Identifier	perm		919795	1					
ANR	919808	ReturnType	perm_mask_t		919795	1					
ANR	919809	Identifier	IpVerify :: deny_mask		919795	2					
ANR	919810	ParameterList	DCpermission perm		919795	3					
ANR	919811	Parameter	DCpermission perm	350:20:9382:9398	919795	0	True				
ANR	919812	ParameterType	DCpermission		919795	0					
ANR	919813	Identifier	perm		919795	1					
ANR	919814	CFGEntryNode	ENTRY		919795		True				
ANR	919815	CFGExitNode	EXIT		919795		True				
ANR	919816	Symbol	perm		919795						
ANR	919817	Function	IpVerify :: PermMaskToString	354:0:9448:9796							
ANR	919818	FunctionDef	"IpVerify :: PermMaskToString (perm_mask_t mask , MyString & mask_str)"		919817	0					
ANR	919819	CompoundStatement		356:0:9518:9796	919817	0					
ANR	919820	IdentifierDeclStatement	DCpermission perm ;	357:1:9521:9538	919817	0	True				
ANR	919821	IdentifierDecl	perm		919817	0					
ANR	919822	IdentifierDeclType	DCpermission		919817	0					
ANR	919823	Identifier	perm		919817	1					
ANR	919824	ForStatement	for ( perm = FIRST_PERM ; perm < LAST_PERM ; perm = NEXT_PERM ( perm ) )		919817	1					
ANR	919825	ForInit	perm = FIRST_PERM ;	358:5:9545:9560	919817	0	True				
ANR	919826	AssignmentExpression	perm = FIRST_PERM		919817	0		=			
ANR	919827	Identifier	perm		919817	0					
ANR	919828	Identifier	FIRST_PERM		919817	1					
ANR	919829	Condition	perm < LAST_PERM	358:22:9562:9575	919817	1	True				
ANR	919830	RelationalExpression	perm < LAST_PERM		919817	0		<			
ANR	919831	Identifier	perm		919817	0					
ANR	919832	Identifier	LAST_PERM		919817	1					
ANR	919833	AssignmentExpression	perm = NEXT_PERM ( perm )	358:38:9578:9597	919817	2	True	=			
ANR	919834	Identifier	perm		919817	0					
ANR	919835	CallExpression	NEXT_PERM ( perm )		919817	1					
ANR	919836	Callee	NEXT_PERM		919817	0					
ANR	919837	Identifier	NEXT_PERM		919817	0					
ANR	919838	ArgumentList	perm		919817	1					
ANR	919839	Argument	perm		919817	0					
ANR	919840	Identifier	perm		919817	0					
ANR	919841	CompoundStatement		3:60:81:81	919817	3					
ANR	919842	IfStatement	if ( mask & allow_mask ( perm ) )		919817	0					
ANR	919843	Condition	mask & allow_mask ( perm )	359:6:9608:9630	919817	0	True				
ANR	919844	BitAndExpression	mask & allow_mask ( perm )		919817	0		&			
ANR	919845	Identifier	mask		919817	0					
ANR	919846	CallExpression	allow_mask ( perm )		919817	1					
ANR	919847	Callee	allow_mask		919817	0					
ANR	919848	Identifier	allow_mask		919817	0					
ANR	919849	ArgumentList	perm		919817	1					
ANR	919850	Argument	perm		919817	0					
ANR	919851	Identifier	perm		919817	0					
ANR	919852	CompoundStatement		4:32:115:115	919817	1					
ANR	919853	ExpressionStatement	mask_str . append_to_list ( PermString ( perm ) )	360:3:9639:9680	919817	0	True				
ANR	919854	CallExpression	mask_str . append_to_list ( PermString ( perm ) )		919817	0					
ANR	919855	Callee	mask_str . append_to_list		919817	0					
ANR	919856	MemberAccess	mask_str . append_to_list		919817	0					
ANR	919857	Identifier	mask_str		919817	0					
ANR	919858	Identifier	append_to_list		919817	1					
ANR	919859	ArgumentList	PermString ( perm )		919817	1					
ANR	919860	Argument	PermString ( perm )		919817	0					
ANR	919861	CallExpression	PermString ( perm )		919817	0					
ANR	919862	Callee	PermString		919817	0					
ANR	919863	Identifier	PermString		919817	0					
ANR	919864	ArgumentList	perm		919817	1					
ANR	919865	Argument	perm		919817	0					
ANR	919866	Identifier	perm		919817	0					
ANR	919867	IfStatement	if ( mask & deny_mask ( perm ) )		919817	1					
ANR	919868	Condition	mask & deny_mask ( perm )	362:6:9692:9713	919817	0	True				
ANR	919869	BitAndExpression	mask & deny_mask ( perm )		919817	0		&			
ANR	919870	Identifier	mask		919817	0					
ANR	919871	CallExpression	deny_mask ( perm )		919817	1					
ANR	919872	Callee	deny_mask		919817	0					
ANR	919873	Identifier	deny_mask		919817	0					
ANR	919874	ArgumentList	perm		919817	1					
ANR	919875	Argument	perm		919817	0					
ANR	919876	Identifier	perm		919817	0					
ANR	919877	CompoundStatement		7:31:198:198	919817	1					
ANR	919878	ExpressionStatement	"mask_str . append_to_list ( ""DENY_"" )"	363:3:9722:9754	919817	0	True				
ANR	919879	CallExpression	"mask_str . append_to_list ( ""DENY_"" )"		919817	0					
ANR	919880	Callee	mask_str . append_to_list		919817	0					
ANR	919881	MemberAccess	mask_str . append_to_list		919817	0					
ANR	919882	Identifier	mask_str		919817	0					
ANR	919883	Identifier	append_to_list		919817	1					
ANR	919884	ArgumentList	"""DENY_"""		919817	1					
ANR	919885	Argument	"""DENY_"""		919817	0					
ANR	919886	PrimaryExpression	"""DENY_"""		919817	0					
ANR	919887	ExpressionStatement	mask_str += PermString ( perm )	364:3:9759:9787	919817	1	True				
ANR	919888	AssignmentExpression	mask_str += PermString ( perm )		919817	0		+=			
ANR	919889	Identifier	mask_str		919817	0					
ANR	919890	CallExpression	PermString ( perm )		919817	1					
ANR	919891	Callee	PermString		919817	0					
ANR	919892	Identifier	PermString		919817	0					
ANR	919893	ArgumentList	perm		919817	1					
ANR	919894	Argument	perm		919817	0					
ANR	919895	Identifier	perm		919817	0					
ANR	919896	ReturnType	void		919817	1					
ANR	919897	Identifier	IpVerify :: PermMaskToString		919817	2					
ANR	919898	ParameterList	"perm_mask_t mask , MyString & mask_str"		919817	3					
ANR	919899	Parameter	perm_mask_t mask	355:27:9480:9495	919817	0	True				
ANR	919900	ParameterType	perm_mask_t		919817	0					
ANR	919901	Identifier	mask		919817	1					
ANR	919902	Parameter	MyString & mask_str	355:45:9498:9515	919817	1	True				
ANR	919903	ParameterType	MyString &		919817	0					
ANR	919904	Identifier	mask_str		919817	1					
ANR	919905	CFGEntryNode	ENTRY		919817		True				
ANR	919906	CFGExitNode	EXIT		919817		True				
ANR	919907	Symbol	LAST_PERM		919817						
ANR	919908	Symbol	allow_mask		919817						
ANR	919909	Symbol	mask_str		919817						
ANR	919910	Symbol	perm		919817						
ANR	919911	Symbol	deny_mask		919817						
ANR	919912	Symbol	FIRST_PERM		919817						
ANR	919913	Symbol	NEXT_PERM		919817						
ANR	919914	Symbol	PermString		919817						
ANR	919915	Symbol	mask		919817						
ANR	919916	Function	IpVerify :: UserHashToString	369:0:9799:10184							
ANR	919917	FunctionDef	"IpVerify :: UserHashToString (UserHash_t * user_hash , MyString & result)"		919916	0					
ANR	919918	CompoundStatement		371:0:9872:10184	919916	0					
ANR	919919	ExpressionStatement	ASSERT ( user_hash )	372:1:9875:9894	919916	0	True				
ANR	919920	CallExpression	ASSERT ( user_hash )		919916	0					
ANR	919921	Callee	ASSERT		919916	0					
ANR	919922	Identifier	ASSERT		919916	0					
ANR	919923	ArgumentList	user_hash		919916	1					
ANR	919924	Argument	user_hash		919916	0					
ANR	919925	Identifier	user_hash		919916	0					
ANR	919926	ExpressionStatement	user_hash -> startIterations ( )	373:1:9897:9925	919916	1	True				
ANR	919927	CallExpression	user_hash -> startIterations ( )		919916	0					
ANR	919928	Callee	user_hash -> startIterations		919916	0					
ANR	919929	PtrMemberAccess	user_hash -> startIterations		919916	0					
ANR	919930	Identifier	user_hash		919916	0					
ANR	919931	Identifier	startIterations		919916	1					
ANR	919932	ArgumentList			919916	1					
ANR	919933	IdentifierDeclStatement	MyString host ;	374:1:9928:9941	919916	2	True				
ANR	919934	IdentifierDecl	host		919916	0					
ANR	919935	IdentifierDeclType	MyString		919916	0					
ANR	919936	Identifier	host		919916	1					
ANR	919937	IdentifierDeclStatement	StringList * users ;	375:1:9944:9961	919916	3	True				
ANR	919938	IdentifierDecl	* users		919916	0					
ANR	919939	IdentifierDeclType	StringList *		919916	0					
ANR	919940	Identifier	users		919916	1					
ANR	919941	IdentifierDeclStatement	char const * user ;	376:1:9964:9980	919916	4	True				
ANR	919942	IdentifierDecl	* user		919916	0					
ANR	919943	IdentifierDeclType	char const *		919916	0					
ANR	919944	Identifier	user		919916	1					
ANR	919945	WhileStatement	"while ( user_hash -> iterate ( host , users ) )"		919916	5					
ANR	919946	Condition	"user_hash -> iterate ( host , users )"	377:8:9990:10019	919916	0	True				
ANR	919947	CallExpression	"user_hash -> iterate ( host , users )"		919916	0					
ANR	919948	Callee	user_hash -> iterate		919916	0					
ANR	919949	PtrMemberAccess	user_hash -> iterate		919916	0					
ANR	919950	Identifier	user_hash		919916	0					
ANR	919951	Identifier	iterate		919916	1					
ANR	919952	ArgumentList	host		919916	1					
ANR	919953	Argument	host		919916	0					
ANR	919954	Identifier	host		919916	0					
ANR	919955	Argument	users		919916	1					
ANR	919956	Identifier	users		919916	0					
ANR	919957	CompoundStatement		7:41:150:150	919916	1					
ANR	919958	IfStatement	if ( users )		919916	0					
ANR	919959	Condition	users	378:6:10031:10035	919916	0	True				
ANR	919960	Identifier	users		919916	0					
ANR	919961	CompoundStatement		8:14:166:166	919916	1					
ANR	919962	ExpressionStatement	users -> rewind ( )	379:3:10044:10059	919916	0	True				
ANR	919963	CallExpression	users -> rewind ( )		919916	0					
ANR	919964	Callee	users -> rewind		919916	0					
ANR	919965	PtrMemberAccess	users -> rewind		919916	0					
ANR	919966	Identifier	users		919916	0					
ANR	919967	Identifier	rewind		919916	1					
ANR	919968	ArgumentList			919916	1					
ANR	919969	WhileStatement	while ( ( user = users -> next ( ) ) )		919916	1					
ANR	919970	Condition	user = users -> next ( )	380:10:10071:10090	919916	0	True				
ANR	919971	AssignmentExpression	user = users -> next ( )		919916	0		=			
ANR	919972	Identifier	user		919916	0					
ANR	919973	CallExpression	users -> next ( )		919916	1					
ANR	919974	Callee	users -> next		919916	0					
ANR	919975	PtrMemberAccess	users -> next		919916	0					
ANR	919976	Identifier	users		919916	0					
ANR	919977	Identifier	next		919916	1					
ANR	919978	ArgumentList			919916	1					
ANR	919979	CompoundStatement		10:33:221:221	919916	1					
ANR	919980	ExpressionStatement	"result . sprintf_cat ( "" %s/%s"" , user , host . Value ( ) )"	381:4:10100:10170	919916	0	True				
ANR	919981	CallExpression	"result . sprintf_cat ( "" %s/%s"" , user , host . Value ( ) )"		919916	0					
ANR	919982	Callee	result . sprintf_cat		919916	0					
ANR	919983	MemberAccess	result . sprintf_cat		919916	0					
ANR	919984	Identifier	result		919916	0					
ANR	919985	Identifier	sprintf_cat		919916	1					
ANR	919986	ArgumentList	""" %s/%s"""		919916	1					
ANR	919987	Argument	""" %s/%s"""		919916	0					
ANR	919988	PrimaryExpression	""" %s/%s"""		919916	0					
ANR	919989	Argument	user		919916	1					
ANR	919990	Identifier	user		919916	0					
ANR	919991	Argument	host . Value ( )		919916	2					
ANR	919992	CallExpression	host . Value ( )		919916	0					
ANR	919993	Callee	host . Value		919916	0					
ANR	919994	MemberAccess	host . Value		919916	0					
ANR	919995	Identifier	host		919916	0					
ANR	919996	Identifier	Value		919916	1					
ANR	919997	ArgumentList			919916	1					
ANR	919998	ReturnType	void		919916	1					
ANR	919999	Identifier	IpVerify :: UserHashToString		919916	2					
ANR	920000	ParameterList	"UserHash_t * user_hash , MyString & result"		919916	3					
ANR	920001	Parameter	UserHash_t * user_hash	370:27:9831:9851	919916	0	True				
ANR	920002	ParameterType	UserHash_t *		919916	0					
ANR	920003	Identifier	user_hash		919916	1					
ANR	920004	Parameter	MyString & result	370:50:9854:9869	919916	1	True				
ANR	920005	ParameterType	MyString &		919916	0					
ANR	920006	Identifier	result		919916	1					
ANR	920007	CFGEntryNode	ENTRY		919916		True				
ANR	920008	CFGExitNode	EXIT		919916		True				
ANR	920009	Symbol	result		919916						
ANR	920010	Symbol	user_hash		919916						
ANR	920011	Symbol	* users		919916						
ANR	920012	Symbol	* user_hash		919916						
ANR	920013	Symbol	users -> next		919916						
ANR	920014	Symbol	host		919916						
ANR	920015	Symbol	host . Value		919916						
ANR	920016	Symbol	user_hash -> iterate		919916						
ANR	920017	Symbol	user		919916						
ANR	920018	Symbol	users		919916						
ANR	920019	Function	IpVerify :: AuthEntryToString	389:0:10187:11103							
ANR	920020	FunctionDef	"IpVerify :: AuthEntryToString (const in6_addr & host , const char * user , perm_mask_t mask , MyString & result)"		920019	0					
ANR	920021	CompoundStatement		391:0:10298:11103	920019	0					
ANR	920022	IdentifierDeclStatement	char buf [ INET6_ADDRSTRLEN ] ;	394:1:10404:10430	920019	0	True				
ANR	920023	IdentifierDecl	buf [ INET6_ADDRSTRLEN ]		920019	0					
ANR	920024	IdentifierDeclType	char [ INET6_ADDRSTRLEN ]		920019	0					
ANR	920025	Identifier	buf		920019	1					
ANR	920026	Identifier	INET6_ADDRSTRLEN		920019	2					
ANR	920027	ExpressionStatement	"memset ( ( void * ) buf , 0 , sizeof ( buf ) )"	395:1:10433:10467	920019	1	True				
ANR	920028	CallExpression	"memset ( ( void * ) buf , 0 , sizeof ( buf ) )"		920019	0					
ANR	920029	Callee	memset		920019	0					
ANR	920030	Identifier	memset		920019	0					
ANR	920031	ArgumentList	( void * ) buf		920019	1					
ANR	920032	Argument	( void * ) buf		920019	0					
ANR	920033	CastExpression	( void * ) buf		920019	0					
ANR	920034	CastTarget	void *		920019	0					
ANR	920035	Identifier	buf		920019	1					
ANR	920036	Argument	0		920019	1					
ANR	920037	PrimaryExpression	0		920019	0					
ANR	920038	Argument	sizeof ( buf )		920019	2					
ANR	920039	SizeofExpression	sizeof ( buf )		920019	0					
ANR	920040	Sizeof	sizeof		920019	0					
ANR	920041	SizeofOperand	buf		920019	1					
ANR	920042	IdentifierDeclStatement	uint32_t * addr = ( uint32_t * ) & host ;	396:1:10470:10503	920019	2	True				
ANR	920043	IdentifierDecl	* addr = ( uint32_t * ) & host		920019	0					
ANR	920044	IdentifierDeclType	uint32_t *		920019	0					
ANR	920045	Identifier	addr		920019	1					
ANR	920046	AssignmentExpression	* addr = ( uint32_t * ) & host		920019	2		=			
ANR	920047	Identifier	addr		920019	0					
ANR	920048	CastExpression	( uint32_t * ) & host		920019	1					
ANR	920049	CastTarget	uint32_t *		920019	0					
ANR	920050	UnaryOperationExpression	& host		920019	1					
ANR	920051	UnaryOperator	&		920019	0					
ANR	920052	Identifier	host		920019	1					
ANR	920053	IdentifierDeclStatement	const char * ret = NULL ;	399:1:10548:10570	920019	3	True				
ANR	920054	IdentifierDecl	* ret = NULL		920019	0					
ANR	920055	IdentifierDeclType	const char *		920019	0					
ANR	920056	Identifier	ret		920019	1					
ANR	920057	AssignmentExpression	* ret = NULL		920019	2		=			
ANR	920058	Identifier	NULL		920019	0					
ANR	920059	Identifier	NULL		920019	1					
ANR	920060	IfStatement	if ( addr [ 0 ] == 0 && addr [ 1 ] == 0 && addr [ 2 ] == htonl ( 0xffff ) )		920019	4					
ANR	920061	Condition	addr [ 0 ] == 0 && addr [ 1 ] == 0 && addr [ 2 ] == htonl ( 0xffff )	400:5:10577:10632	920019	0	True				
ANR	920062	AndExpression	addr [ 0 ] == 0 && addr [ 1 ] == 0 && addr [ 2 ] == htonl ( 0xffff )		920019	0		&&			
ANR	920063	EqualityExpression	addr [ 0 ] == 0		920019	0		==			
ANR	920064	ArrayIndexing	addr [ 0 ]		920019	0					
ANR	920065	Identifier	addr		920019	0					
ANR	920066	PrimaryExpression	0		920019	1					
ANR	920067	PrimaryExpression	0		920019	1					
ANR	920068	AndExpression	addr [ 1 ] == 0 && addr [ 2 ] == htonl ( 0xffff )		920019	1		&&			
ANR	920069	EqualityExpression	addr [ 1 ] == 0		920019	0		==			
ANR	920070	ArrayIndexing	addr [ 1 ]		920019	0					
ANR	920071	Identifier	addr		920019	0					
ANR	920072	PrimaryExpression	1		920019	1					
ANR	920073	PrimaryExpression	0		920019	1					
ANR	920074	EqualityExpression	addr [ 2 ] == htonl ( 0xffff )		920019	1		==			
ANR	920075	ArrayIndexing	addr [ 2 ]		920019	0					
ANR	920076	Identifier	addr		920019	0					
ANR	920077	PrimaryExpression	2		920019	1					
ANR	920078	CallExpression	htonl ( 0xffff )		920019	1					
ANR	920079	Callee	htonl		920019	0					
ANR	920080	Identifier	htonl		920019	0					
ANR	920081	ArgumentList	0xffff		920019	1					
ANR	920082	Argument	0xffff		920019	0					
ANR	920083	PrimaryExpression	0xffff		920019	0					
ANR	920084	CompoundStatement		10:63:336:336	920019	1					
ANR	920085	ExpressionStatement	"ret = inet_ntop ( AF_INET , ( const void * ) & addr [ 3 ] , buf , sizeof ( buf ) )"	401:2:10639:10704	920019	0	True				
ANR	920086	AssignmentExpression	"ret = inet_ntop ( AF_INET , ( const void * ) & addr [ 3 ] , buf , sizeof ( buf ) )"		920019	0		=			
ANR	920087	Identifier	ret		920019	0					
ANR	920088	CallExpression	"inet_ntop ( AF_INET , ( const void * ) & addr [ 3 ] , buf , sizeof ( buf ) )"		920019	1					
ANR	920089	Callee	inet_ntop		920019	0					
ANR	920090	Identifier	inet_ntop		920019	0					
ANR	920091	ArgumentList	AF_INET		920019	1					
ANR	920092	Argument	AF_INET		920019	0					
ANR	920093	Identifier	AF_INET		920019	0					
ANR	920094	Argument	( const void * ) & addr [ 3 ]		920019	1					
ANR	920095	CastExpression	( const void * ) & addr [ 3 ]		920019	0					
ANR	920096	CastTarget	const void *		920019	0					
ANR	920097	UnaryOperationExpression	& addr [ 3 ]		920019	1					
ANR	920098	UnaryOperator	&		920019	0					
ANR	920099	ArrayIndexing	addr [ 3 ]		920019	1					
ANR	920100	Identifier	addr		920019	0					
ANR	920101	PrimaryExpression	3		920019	1					
ANR	920102	Argument	buf		920019	2					
ANR	920103	Identifier	buf		920019	0					
ANR	920104	Argument	sizeof ( buf )		920019	3					
ANR	920105	SizeofExpression	sizeof ( buf )		920019	0					
ANR	920106	Sizeof	sizeof		920019	0					
ANR	920107	SizeofOperand	buf		920019	1					
ANR	920108	ElseStatement	else		920019	0					
ANR	920109	CompoundStatement		12:8:415:415	920019	0					
ANR	920110	ExpressionStatement	"ret = inet_ntop ( AF_INET6 , & host , buf , sizeof ( buf ) )"	403:2:10718:10768	920019	0	True				
ANR	920111	AssignmentExpression	"ret = inet_ntop ( AF_INET6 , & host , buf , sizeof ( buf ) )"		920019	0		=			
ANR	920112	Identifier	ret		920019	0					
ANR	920113	CallExpression	"inet_ntop ( AF_INET6 , & host , buf , sizeof ( buf ) )"		920019	1					
ANR	920114	Callee	inet_ntop		920019	0					
ANR	920115	Identifier	inet_ntop		920019	0					
ANR	920116	ArgumentList	AF_INET6		920019	1					
ANR	920117	Argument	AF_INET6		920019	0					
ANR	920118	Identifier	AF_INET6		920019	0					
ANR	920119	Argument	& host		920019	1					
ANR	920120	UnaryOperationExpression	& host		920019	0					
ANR	920121	UnaryOperator	&		920019	0					
ANR	920122	Identifier	host		920019	1					
ANR	920123	Argument	buf		920019	2					
ANR	920124	Identifier	buf		920019	0					
ANR	920125	Argument	sizeof ( buf )		920019	3					
ANR	920126	SizeofExpression	sizeof ( buf )		920019	0					
ANR	920127	Sizeof	sizeof		920019	0					
ANR	920128	SizeofOperand	buf		920019	1					
ANR	920129	IfStatement	if ( ! ret )		920019	5					
ANR	920130	Condition	! ret	407:5:10793:10796	920019	0	True				
ANR	920131	UnaryOperationExpression	! ret		920019	0					
ANR	920132	UnaryOperator	!		920019	0					
ANR	920133	Identifier	ret		920019	1					
ANR	920134	CompoundStatement		17:11:500:500	920019	1					
ANR	920135	ExpressionStatement	"dprintf ( D_HOSTNAME , ""IP address conversion failed, errno = %d\\n"" , errno )"	408:2:10803:10879	920019	0	True				
ANR	920136	CallExpression	"dprintf ( D_HOSTNAME , ""IP address conversion failed, errno = %d\\n"" , errno )"		920019	0					
ANR	920137	Callee	dprintf		920019	0					
ANR	920138	Identifier	dprintf		920019	0					
ANR	920139	ArgumentList	D_HOSTNAME		920019	1					
ANR	920140	Argument	D_HOSTNAME		920019	0					
ANR	920141	Identifier	D_HOSTNAME		920019	0					
ANR	920142	Argument	"""IP address conversion failed, errno = %d\\n"""		920019	1					
ANR	920143	PrimaryExpression	"""IP address conversion failed, errno = %d\\n"""		920019	0					
ANR	920144	Argument	errno		920019	2					
ANR	920145	Identifier	errno		920019	0					
ANR	920146	IdentifierDeclStatement	MyString mask_str ;	413:1:10893:10910	920019	6	True				
ANR	920147	IdentifierDecl	mask_str		920019	0					
ANR	920148	IdentifierDeclType	MyString		920019	0					
ANR	920149	Identifier	mask_str		920019	1					
ANR	920150	ExpressionStatement	"PermMaskToString ( mask , mask_str )"	414:1:10913:10947	920019	7	True				
ANR	920151	CallExpression	"PermMaskToString ( mask , mask_str )"		920019	0					
ANR	920152	Callee	PermMaskToString		920019	0					
ANR	920153	Identifier	PermMaskToString		920019	0					
ANR	920154	ArgumentList	mask		920019	1					
ANR	920155	Argument	mask		920019	0					
ANR	920156	Identifier	mask		920019	0					
ANR	920157	Argument	mask_str		920019	1					
ANR	920158	Identifier	mask_str		920019	0					
ANR	920159	ExpressionStatement	"result . sprintf ( ""%s/%s: %s"" , user ? user : ""(null)"" , buf , mask_str . Value ( ) )"	415:1:10950:11101	920019	8	True				
ANR	920160	CallExpression	"result . sprintf ( ""%s/%s: %s"" , user ? user : ""(null)"" , buf , mask_str . Value ( ) )"		920019	0					
ANR	920161	Callee	result . sprintf		920019	0					
ANR	920162	MemberAccess	result . sprintf		920019	0					
ANR	920163	Identifier	result		920019	0					
ANR	920164	Identifier	sprintf		920019	1					
ANR	920165	ArgumentList	"""%s/%s: %s"""		920019	1					
ANR	920166	Argument	"""%s/%s: %s"""		920019	0					
ANR	920167	PrimaryExpression	"""%s/%s: %s"""		920019	0					
ANR	920168	Argument	"user ? user : ""(null)"""		920019	1					
ANR	920169	ConditionalExpression	"user ? user : ""(null)"""		920019	0					
ANR	920170	Condition	user		920019	0					
ANR	920171	Identifier	user		920019	0					
ANR	920172	Identifier	user		920019	1					
ANR	920173	PrimaryExpression	"""(null)"""		920019	2					
ANR	920174	Argument	buf		920019	2					
ANR	920175	Identifier	buf		920019	0					
ANR	920176	Argument	mask_str . Value ( )		920019	3					
ANR	920177	CallExpression	mask_str . Value ( )		920019	0					
ANR	920178	Callee	mask_str . Value		920019	0					
ANR	920179	MemberAccess	mask_str . Value		920019	0					
ANR	920180	Identifier	mask_str		920019	0					
ANR	920181	Identifier	Value		920019	1					
ANR	920182	ArgumentList			920019	1					
ANR	920183	ReturnType	void		920019	1					
ANR	920184	Identifier	IpVerify :: AuthEntryToString		920019	2					
ANR	920185	ParameterList	"const in6_addr & host , const char * user , perm_mask_t mask , MyString & result"		920019	3					
ANR	920186	Parameter	const in6_addr & host	390:28:10220:10240	920019	0	True				
ANR	920187	ParameterType	const in6_addr &		920019	0					
ANR	920188	Identifier	host		920019	1					
ANR	920189	Parameter	const char * user	390:51:10243:10259	920019	1	True				
ANR	920190	ParameterType	const char *		920019	0					
ANR	920191	Identifier	user		920019	1					
ANR	920192	Parameter	perm_mask_t mask	390:70:10262:10277	920019	2	True				
ANR	920193	ParameterType	perm_mask_t		920019	0					
ANR	920194	Identifier	mask		920019	1					
ANR	920195	Parameter	MyString & result	390:88:10280:10295	920019	3	True				
ANR	920196	ParameterType	MyString &		920019	0					
ANR	920197	Identifier	result		920019	1					
ANR	920198	CFGEntryNode	ENTRY		920019		True				
ANR	920199	CFGExitNode	EXIT		920019		True				
ANR	920200	Symbol	ret		920019						
ANR	920201	Symbol	D_HOSTNAME		920019						
ANR	920202	Symbol	errno		920019						
ANR	920203	Symbol	NULL		920019						
ANR	920204	Symbol	AF_INET		920019						
ANR	920205	Symbol	mask_str . Value		920019						
ANR	920206	Symbol	& host		920019						
ANR	920207	Symbol	htonl		920019						
ANR	920208	Symbol	AF_INET6		920019						
ANR	920209	Symbol	result		920019						
ANR	920210	Symbol	buf		920019						
ANR	920211	Symbol	mask_str		920019						
ANR	920212	Symbol	host		920019						
ANR	920213	Symbol	inet_ntop		920019						
ANR	920214	Symbol	* addr		920019						
ANR	920215	Symbol	addr		920019						
ANR	920216	Symbol	user		920019						
ANR	920217	Symbol	mask		920019						
ANR	920218	Function	IpVerify :: PrintAuthTable	421:0:11106:12331							
ANR	920219	FunctionDef	IpVerify :: PrintAuthTable (int dprintf_level)		920218	0					
ANR	920220	CompoundStatement		422:44:11155:12331	920218	0					
ANR	920221	IdentifierDeclStatement	struct in6_addr host ;	423:1:11158:11178	920218	0	True				
ANR	920222	IdentifierDecl	host		920218	0					
ANR	920223	IdentifierDeclType	struct in6_addr		920218	0					
ANR	920224	Identifier	host		920218	1					
ANR	920225	IdentifierDeclStatement	UserPerm_t * ptable ;	424:1:11181:11200	920218	1	True				
ANR	920226	IdentifierDecl	* ptable		920218	0					
ANR	920227	IdentifierDeclType	UserPerm_t *		920218	0					
ANR	920228	Identifier	ptable		920218	1					
ANR	920229	ExpressionStatement	PermHashTable -> startIterations ( )	425:1:11203:11235	920218	2	True				
ANR	920230	CallExpression	PermHashTable -> startIterations ( )		920218	0					
ANR	920231	Callee	PermHashTable -> startIterations		920218	0					
ANR	920232	PtrMemberAccess	PermHashTable -> startIterations		920218	0					
ANR	920233	Identifier	PermHashTable		920218	0					
ANR	920234	Identifier	startIterations		920218	1					
ANR	920235	ArgumentList			920218	1					
ANR	920236	WhileStatement	"while ( PermHashTable -> iterate ( host , ptable ) )"		920218	3					
ANR	920237	Condition	"PermHashTable -> iterate ( host , ptable )"	427:8:11246:11281	920218	0	True				
ANR	920238	CallExpression	"PermHashTable -> iterate ( host , ptable )"		920218	0					
ANR	920239	Callee	PermHashTable -> iterate		920218	0					
ANR	920240	PtrMemberAccess	PermHashTable -> iterate		920218	0					
ANR	920241	Identifier	PermHashTable		920218	0					
ANR	920242	Identifier	iterate		920218	1					
ANR	920243	ArgumentList	host		920218	1					
ANR	920244	Argument	host		920218	0					
ANR	920245	Identifier	host		920218	0					
ANR	920246	Argument	ptable		920218	1					
ANR	920247	Identifier	ptable		920218	0					
ANR	920248	CompoundStatement		8:2:151:167	920218	1					
ANR	920249	IdentifierDeclStatement	MyString userid ;	428:2:11288:11303	920218	0	True				
ANR	920250	IdentifierDecl	userid		920218	0					
ANR	920251	IdentifierDeclType	MyString		920218	0					
ANR	920252	Identifier	userid		920218	1					
ANR	920253	IdentifierDeclStatement	perm_mask_t mask ;	429:2:11307:11323	920218	1	True				
ANR	920254	IdentifierDecl	mask		920218	0					
ANR	920255	IdentifierDeclType	perm_mask_t		920218	0					
ANR	920256	Identifier	mask		920218	1					
ANR	920257	ExpressionStatement	ptable -> startIterations ( )	431:2:11328:11353	920218	2	True				
ANR	920258	CallExpression	ptable -> startIterations ( )		920218	0					
ANR	920259	Callee	ptable -> startIterations		920218	0					
ANR	920260	PtrMemberAccess	ptable -> startIterations		920218	0					
ANR	920261	Identifier	ptable		920218	0					
ANR	920262	Identifier	startIterations		920218	1					
ANR	920263	ArgumentList			920218	1					
ANR	920264	WhileStatement	"while ( ptable -> iterate ( userid , mask ) )"		920218	3					
ANR	920265	Condition	"ptable -> iterate ( userid , mask )"	432:9:11364:11391	920218	0	True				
ANR	920266	CallExpression	"ptable -> iterate ( userid , mask )"		920218	0					
ANR	920267	Callee	ptable -> iterate		920218	0					
ANR	920268	PtrMemberAccess	ptable -> iterate		920218	0					
ANR	920269	Identifier	ptable		920218	0					
ANR	920270	Identifier	iterate		920218	1					
ANR	920271	ArgumentList	userid		920218	1					
ANR	920272	Argument	userid		920218	0					
ANR	920273	Identifier	userid		920218	0					
ANR	920274	Argument	mask		920218	1					
ANR	920275	Identifier	mask		920218	0					
ANR	920276	CompoundStatement		15:3:332:355	920218	1					
ANR	920277	ExpressionStatement	"has_user ( ptable , userid . Value ( ) , mask )"	434:3:11444:11482	920218	0	True				
ANR	920278	CallExpression	"has_user ( ptable , userid . Value ( ) , mask )"		920218	0					
ANR	920279	Callee	has_user		920218	0					
ANR	920280	Identifier	has_user		920218	0					
ANR	920281	ArgumentList	ptable		920218	1					
ANR	920282	Argument	ptable		920218	0					
ANR	920283	Identifier	ptable		920218	0					
ANR	920284	Argument	userid . Value ( )		920218	1					
ANR	920285	CallExpression	userid . Value ( )		920218	0					
ANR	920286	Callee	userid . Value		920218	0					
ANR	920287	MemberAccess	userid . Value		920218	0					
ANR	920288	Identifier	userid		920218	0					
ANR	920289	Identifier	Value		920218	1					
ANR	920290	ArgumentList			920218	1					
ANR	920291	Argument	mask		920218	2					
ANR	920292	Identifier	mask		920218	0					
ANR	920293	IdentifierDeclStatement	MyString auth_entry_str ;	436:3:11488:11511	920218	1	True				
ANR	920294	IdentifierDecl	auth_entry_str		920218	0					
ANR	920295	IdentifierDeclType	MyString		920218	0					
ANR	920296	Identifier	auth_entry_str		920218	1					
ANR	920297	ExpressionStatement	"AuthEntryToString ( host , userid . Value ( ) , mask , auth_entry_str )"	437:3:11516:11575	920218	2	True				
ANR	920298	CallExpression	"AuthEntryToString ( host , userid . Value ( ) , mask , auth_entry_str )"		920218	0					
ANR	920299	Callee	AuthEntryToString		920218	0					
ANR	920300	Identifier	AuthEntryToString		920218	0					
ANR	920301	ArgumentList	host		920218	1					
ANR	920302	Argument	host		920218	0					
ANR	920303	Identifier	host		920218	0					
ANR	920304	Argument	userid . Value ( )		920218	1					
ANR	920305	CallExpression	userid . Value ( )		920218	0					
ANR	920306	Callee	userid . Value		920218	0					
ANR	920307	MemberAccess	userid . Value		920218	0					
ANR	920308	Identifier	userid		920218	0					
ANR	920309	Identifier	Value		920218	1					
ANR	920310	ArgumentList			920218	1					
ANR	920311	Argument	mask		920218	2					
ANR	920312	Identifier	mask		920218	0					
ANR	920313	Argument	auth_entry_str		920218	3					
ANR	920314	Identifier	auth_entry_str		920218	0					
ANR	920315	ExpressionStatement	"dprintf ( dprintf_level , ""%s\\n"" , auth_entry_str . Value ( ) )"	438:3:11580:11633	920218	3	True				
ANR	920316	CallExpression	"dprintf ( dprintf_level , ""%s\\n"" , auth_entry_str . Value ( ) )"		920218	0					
ANR	920317	Callee	dprintf		920218	0					
ANR	920318	Identifier	dprintf		920218	0					
ANR	920319	ArgumentList	dprintf_level		920218	1					
ANR	920320	Argument	dprintf_level		920218	0					
ANR	920321	Identifier	dprintf_level		920218	0					
ANR	920322	Argument	"""%s\\n"""		920218	1					
ANR	920323	PrimaryExpression	"""%s\\n"""		920218	0					
ANR	920324	Argument	auth_entry_str . Value ( )		920218	2					
ANR	920325	CallExpression	auth_entry_str . Value ( )		920218	0					
ANR	920326	Callee	auth_entry_str . Value		920218	0					
ANR	920327	MemberAccess	auth_entry_str . Value		920218	0					
ANR	920328	Identifier	auth_entry_str		920218	0					
ANR	920329	Identifier	Value		920218	1					
ANR	920330	ArgumentList			920218	1					
ANR	920331	ExpressionStatement	"dprintf ( dprintf_level , ""Authorizations yet to be resolved:\\n"" )"	442:1:11644:11705	920218	4	True				
ANR	920332	CallExpression	"dprintf ( dprintf_level , ""Authorizations yet to be resolved:\\n"" )"		920218	0					
ANR	920333	Callee	dprintf		920218	0					
ANR	920334	Identifier	dprintf		920218	0					
ANR	920335	ArgumentList	dprintf_level		920218	1					
ANR	920336	Argument	dprintf_level		920218	0					
ANR	920337	Identifier	dprintf_level		920218	0					
ANR	920338	Argument	"""Authorizations yet to be resolved:\\n"""		920218	1					
ANR	920339	PrimaryExpression	"""Authorizations yet to be resolved:\\n"""		920218	0					
ANR	920340	IdentifierDeclStatement	DCpermission perm ;	443:1:11708:11725	920218	5	True				
ANR	920341	IdentifierDecl	perm		920218	0					
ANR	920342	IdentifierDeclType	DCpermission		920218	0					
ANR	920343	Identifier	perm		920218	1					
ANR	920344	ForStatement	for ( perm = FIRST_PERM ; perm < LAST_PERM ; perm = NEXT_PERM ( perm ) )		920218	6					
ANR	920345	ForInit	perm = FIRST_PERM ;	444:7:11734:11749	920218	0	True				
ANR	920346	AssignmentExpression	perm = FIRST_PERM		920218	0		=			
ANR	920347	Identifier	perm		920218	0					
ANR	920348	Identifier	FIRST_PERM		920218	1					
ANR	920349	Condition	perm < LAST_PERM	444:24:11751:11766	920218	1	True				
ANR	920350	RelationalExpression	perm < LAST_PERM		920218	0		<			
ANR	920351	Identifier	perm		920218	0					
ANR	920352	Identifier	LAST_PERM		920218	1					
ANR	920353	AssignmentExpression	perm = NEXT_PERM ( perm )	444:42:11769:11788	920218	2	True	=			
ANR	920354	Identifier	perm		920218	0					
ANR	920355	CallExpression	NEXT_PERM ( perm )		920218	1					
ANR	920356	Callee	NEXT_PERM		920218	0					
ANR	920357	Identifier	NEXT_PERM		920218	0					
ANR	920358	ArgumentList	perm		920218	1					
ANR	920359	Argument	perm		920218	0					
ANR	920360	Identifier	perm		920218	0					
ANR	920361	CompoundStatement		28:2:709:740	920218	3					
ANR	920362	IdentifierDeclStatement	PermTypeEntry * pentry = PermTypeArray [ perm ] ;	446:2:11797:11840	920218	0	True				
ANR	920363	IdentifierDecl	* pentry = PermTypeArray [ perm ]		920218	0					
ANR	920364	IdentifierDeclType	PermTypeEntry *		920218	0					
ANR	920365	Identifier	pentry		920218	1					
ANR	920366	AssignmentExpression	* pentry = PermTypeArray [ perm ]		920218	2		=			
ANR	920367	Identifier	pentry		920218	0					
ANR	920368	ArrayIndexing	PermTypeArray [ perm ]		920218	1					
ANR	920369	Identifier	PermTypeArray		920218	0					
ANR	920370	Identifier	perm		920218	1					
ANR	920371	ExpressionStatement	ASSERT ( pentry )	447:2:11844:11860	920218	1	True				
ANR	920372	CallExpression	ASSERT ( pentry )		920218	0					
ANR	920373	Callee	ASSERT		920218	0					
ANR	920374	Identifier	ASSERT		920218	0					
ANR	920375	ArgumentList	pentry		920218	1					
ANR	920376	Argument	pentry		920218	0					
ANR	920377	Identifier	pentry		920218	0					
ANR	920378	IdentifierDeclStatement	"MyString allow_users , deny_users ;"	449:2:11865:11896	920218	2	True				
ANR	920379	IdentifierDecl	allow_users		920218	0					
ANR	920380	IdentifierDeclType	MyString		920218	0					
ANR	920381	Identifier	allow_users		920218	1					
ANR	920382	IdentifierDecl	deny_users		920218	1					
ANR	920383	IdentifierDeclType	MyString		920218	0					
ANR	920384	Identifier	deny_users		920218	1					
ANR	920385	IfStatement	if ( pentry -> allow_users )		920218	3					
ANR	920386	Condition	pentry -> allow_users	451:6:11905:11923	920218	0	True				
ANR	920387	PtrMemberAccess	pentry -> allow_users		920218	0					
ANR	920388	Identifier	pentry		920218	0					
ANR	920389	Identifier	allow_users		920218	1					
ANR	920390	CompoundStatement		30:28:771:771	920218	1					
ANR	920391	ExpressionStatement	"UserHashToString ( pentry -> allow_users , allow_users )"	452:3:11932:11981	920218	0	True				
ANR	920392	CallExpression	"UserHashToString ( pentry -> allow_users , allow_users )"		920218	0					
ANR	920393	Callee	UserHashToString		920218	0					
ANR	920394	Identifier	UserHashToString		920218	0					
ANR	920395	ArgumentList	pentry -> allow_users		920218	1					
ANR	920396	Argument	pentry -> allow_users		920218	0					
ANR	920397	PtrMemberAccess	pentry -> allow_users		920218	0					
ANR	920398	Identifier	pentry		920218	0					
ANR	920399	Identifier	allow_users		920218	1					
ANR	920400	Argument	allow_users		920218	1					
ANR	920401	Identifier	allow_users		920218	0					
ANR	920402	IfStatement	if ( pentry -> deny_users )		920218	4					
ANR	920403	Condition	pentry -> deny_users	455:6:11994:12011	920218	0	True				
ANR	920404	PtrMemberAccess	pentry -> deny_users		920218	0					
ANR	920405	Identifier	pentry		920218	0					
ANR	920406	Identifier	deny_users		920218	1					
ANR	920407	CompoundStatement		34:27:859:859	920218	1					
ANR	920408	ExpressionStatement	"UserHashToString ( pentry -> deny_users , deny_users )"	456:3:12020:12067	920218	0	True				
ANR	920409	CallExpression	"UserHashToString ( pentry -> deny_users , deny_users )"		920218	0					
ANR	920410	Callee	UserHashToString		920218	0					
ANR	920411	Identifier	UserHashToString		920218	0					
ANR	920412	ArgumentList	pentry -> deny_users		920218	1					
ANR	920413	Argument	pentry -> deny_users		920218	0					
ANR	920414	PtrMemberAccess	pentry -> deny_users		920218	0					
ANR	920415	Identifier	pentry		920218	0					
ANR	920416	Identifier	deny_users		920218	1					
ANR	920417	Argument	deny_users		920218	1					
ANR	920418	Identifier	deny_users		920218	0					
ANR	920419	IfStatement	if ( allow_users . Length ( ) )		920218	5					
ANR	920420	Condition	allow_users . Length ( )	459:6:12080:12099	920218	0	True				
ANR	920421	CallExpression	allow_users . Length ( )		920218	0					
ANR	920422	Callee	allow_users . Length		920218	0					
ANR	920423	MemberAccess	allow_users . Length		920218	0					
ANR	920424	Identifier	allow_users		920218	0					
ANR	920425	Identifier	Length		920218	1					
ANR	920426	ArgumentList			920218	1					
ANR	920427	CompoundStatement		38:29:947:947	920218	1					
ANR	920428	ExpressionStatement	"dprintf ( dprintf_level , ""allow %s: %s\\n"" , PermString ( perm ) , allow_users . Value ( ) )"	460:3:12108:12196	920218	0	True				
ANR	920429	CallExpression	"dprintf ( dprintf_level , ""allow %s: %s\\n"" , PermString ( perm ) , allow_users . Value ( ) )"		920218	0					
ANR	920430	Callee	dprintf		920218	0					
ANR	920431	Identifier	dprintf		920218	0					
ANR	920432	ArgumentList	dprintf_level		920218	1					
ANR	920433	Argument	dprintf_level		920218	0					
ANR	920434	Identifier	dprintf_level		920218	0					
ANR	920435	Argument	"""allow %s: %s\\n"""		920218	1					
ANR	920436	PrimaryExpression	"""allow %s: %s\\n"""		920218	0					
ANR	920437	Argument	PermString ( perm )		920218	2					
ANR	920438	CallExpression	PermString ( perm )		920218	0					
ANR	920439	Callee	PermString		920218	0					
ANR	920440	Identifier	PermString		920218	0					
ANR	920441	ArgumentList	perm		920218	1					
ANR	920442	Argument	perm		920218	0					
ANR	920443	Identifier	perm		920218	0					
ANR	920444	Argument	allow_users . Value ( )		920218	3					
ANR	920445	CallExpression	allow_users . Value ( )		920218	0					
ANR	920446	Callee	allow_users . Value		920218	0					
ANR	920447	MemberAccess	allow_users . Value		920218	0					
ANR	920448	Identifier	allow_users		920218	0					
ANR	920449	Identifier	Value		920218	1					
ANR	920450	ArgumentList			920218	1					
ANR	920451	IfStatement	if ( deny_users . Length ( ) )		920218	6					
ANR	920452	Condition	deny_users . Length ( )	465:6:12209:12227	920218	0	True				
ANR	920453	CallExpression	deny_users . Length ( )		920218	0					
ANR	920454	Callee	deny_users . Length		920218	0					
ANR	920455	MemberAccess	deny_users . Length		920218	0					
ANR	920456	Identifier	deny_users		920218	0					
ANR	920457	Identifier	Length		920218	1					
ANR	920458	ArgumentList			920218	1					
ANR	920459	CompoundStatement		44:28:1075:1075	920218	1					
ANR	920460	ExpressionStatement	"dprintf ( dprintf_level , ""deny %s: %s\\n"" , PermString ( perm ) , deny_users . Value ( ) )"	466:3:12236:12322	920218	0	True				
ANR	920461	CallExpression	"dprintf ( dprintf_level , ""deny %s: %s\\n"" , PermString ( perm ) , deny_users . Value ( ) )"		920218	0					
ANR	920462	Callee	dprintf		920218	0					
ANR	920463	Identifier	dprintf		920218	0					
ANR	920464	ArgumentList	dprintf_level		920218	1					
ANR	920465	Argument	dprintf_level		920218	0					
ANR	920466	Identifier	dprintf_level		920218	0					
ANR	920467	Argument	"""deny %s: %s\\n"""		920218	1					
ANR	920468	PrimaryExpression	"""deny %s: %s\\n"""		920218	0					
ANR	920469	Argument	PermString ( perm )		920218	2					
ANR	920470	CallExpression	PermString ( perm )		920218	0					
ANR	920471	Callee	PermString		920218	0					
ANR	920472	Identifier	PermString		920218	0					
ANR	920473	ArgumentList	perm		920218	1					
ANR	920474	Argument	perm		920218	0					
ANR	920475	Identifier	perm		920218	0					
ANR	920476	Argument	deny_users . Value ( )		920218	3					
ANR	920477	CallExpression	deny_users . Value ( )		920218	0					
ANR	920478	Callee	deny_users . Value		920218	0					
ANR	920479	MemberAccess	deny_users . Value		920218	0					
ANR	920480	Identifier	deny_users		920218	0					
ANR	920481	Identifier	Value		920218	1					
ANR	920482	ArgumentList			920218	1					
ANR	920483	ReturnType	void		920218	1					
ANR	920484	Identifier	IpVerify :: PrintAuthTable		920218	2					
ANR	920485	ParameterList	int dprintf_level		920218	3					
ANR	920486	Parameter	int dprintf_level	422:25:11136:11152	920218	0	True				
ANR	920487	ParameterType	int		920218	0					
ANR	920488	Identifier	dprintf_level		920218	1					
ANR	920489	CFGEntryNode	ENTRY		920218		True				
ANR	920490	CFGExitNode	EXIT		920218		True				
ANR	920491	Symbol	PermHashTable -> iterate		920218						
ANR	920492	Symbol	deny_users . Value		920218						
ANR	920493	Symbol	perm		920218						
ANR	920494	Symbol	* PermTypeArray		920218						
ANR	920495	Symbol	* perm		920218						
ANR	920496	Symbol	dprintf_level		920218						
ANR	920497	Symbol	allow_users . Length		920218						
ANR	920498	Symbol	auth_entry_str . Value		920218						
ANR	920499	Symbol	auth_entry_str		920218						
ANR	920500	Symbol	userid		920218						
ANR	920501	Symbol	deny_users		920218						
ANR	920502	Symbol	host		920218						
ANR	920503	Symbol	PermHashTable		920218						
ANR	920504	Symbol	* PermHashTable		920218						
ANR	920505	Symbol	NEXT_PERM		920218						
ANR	920506	Symbol	mask		920218						
ANR	920507	Symbol	ptable -> iterate		920218						
ANR	920508	Symbol	LAST_PERM		920218						
ANR	920509	Symbol	* pentry		920218						
ANR	920510	Symbol	pentry		920218						
ANR	920511	Symbol	allow_users . Value		920218						
ANR	920512	Symbol	FIRST_PERM		920218						
ANR	920513	Symbol	PermTypeArray		920218						
ANR	920514	Symbol	userid . Value		920218						
ANR	920515	Symbol	ptable		920218						
ANR	920516	Symbol	pentry -> allow_users		920218						
ANR	920517	Symbol	* ptable		920218						
ANR	920518	Symbol	deny_users . Length		920218						
ANR	920519	Symbol	pentry -> deny_users		920218						
ANR	920520	Symbol	PermString		920218						
ANR	920521	Symbol	allow_users		920218						
ANR	920522	Function	ExpandHostAddresses	475:0:12439:12962							
ANR	920523	FunctionDef	"ExpandHostAddresses (char const * host , StringList * list)"		920522	0					
ANR	920524	CompoundStatement		477:0:12506:12962	920522	0					
ANR	920525	ExpressionStatement	list -> append ( host )	478:1:12509:12527	920522	0	True				
ANR	920526	CallExpression	list -> append ( host )		920522	0					
ANR	920527	Callee	list -> append		920522	0					
ANR	920528	PtrMemberAccess	list -> append		920522	0					
ANR	920529	Identifier	list		920522	0					
ANR	920530	Identifier	append		920522	1					
ANR	920531	ArgumentList	host		920522	1					
ANR	920532	Argument	host		920522	0					
ANR	920533	Identifier	host		920522	0					
ANR	920534	IdentifierDeclStatement	condor_netaddr netaddr ;	479:1:12530:12552	920522	1	True				
ANR	920535	IdentifierDecl	netaddr		920522	0					
ANR	920536	IdentifierDeclType	condor_netaddr		920522	0					
ANR	920537	Identifier	netaddr		920522	1					
ANR	920538	IfStatement	"if ( strchr ( host , '*' ) || strchr ( host , '/' ) || netaddr . from_net_string ( host ) )"		920522	2					
ANR	920539	Condition	"strchr ( host , '*' ) || strchr ( host , '/' ) || netaddr . from_net_string ( host )"	481:5:12560:12628	920522	0	True				
ANR	920540	OrExpression	"strchr ( host , '*' ) || strchr ( host , '/' ) || netaddr . from_net_string ( host )"		920522	0		||			
ANR	920541	CallExpression	"strchr ( host , '*' )"		920522	0					
ANR	920542	Callee	strchr		920522	0					
ANR	920543	Identifier	strchr		920522	0					
ANR	920544	ArgumentList	host		920522	1					
ANR	920545	Argument	host		920522	0					
ANR	920546	Identifier	host		920522	0					
ANR	920547	Argument	'*'		920522	1					
ANR	920548	PrimaryExpression	'*'		920522	0					
ANR	920549	OrExpression	"strchr ( host , '/' ) || netaddr . from_net_string ( host )"		920522	1		||			
ANR	920550	CallExpression	"strchr ( host , '/' )"		920522	0					
ANR	920551	Callee	strchr		920522	0					
ANR	920552	Identifier	strchr		920522	0					
ANR	920553	ArgumentList	host		920522	1					
ANR	920554	Argument	host		920522	0					
ANR	920555	Identifier	host		920522	0					
ANR	920556	Argument	'/'		920522	1					
ANR	920557	PrimaryExpression	'/'		920522	0					
ANR	920558	CallExpression	netaddr . from_net_string ( host )		920522	1					
ANR	920559	Callee	netaddr . from_net_string		920522	0					
ANR	920560	MemberAccess	netaddr . from_net_string		920522	0					
ANR	920561	Identifier	netaddr		920522	0					
ANR	920562	Identifier	from_net_string		920522	1					
ANR	920563	ArgumentList	host		920522	1					
ANR	920564	Argument	host		920522	0					
ANR	920565	Identifier	host		920522	0					
ANR	920566	CompoundStatement		5:76:124:124	920522	1					
ANR	920567	ReturnStatement	return ;	482:2:12635:12641	920522	0	True				
ANR	920568	IdentifierDeclStatement	std :: vector < condor_sockaddr > addrs = resolve_hostname ( host ) ;	485:1:12710:12769	920522	3	True				
ANR	920569	IdentifierDecl	addrs = resolve_hostname ( host )		920522	0					
ANR	920570	IdentifierDeclType	std :: vector < condor_sockaddr >		920522	0					
ANR	920571	Identifier	addrs		920522	1					
ANR	920572	AssignmentExpression	addrs = resolve_hostname ( host )		920522	2		=			
ANR	920573	Identifier	addrs		920522	0					
ANR	920574	CallExpression	resolve_hostname ( host )		920522	1					
ANR	920575	Callee	resolve_hostname		920522	0					
ANR	920576	Identifier	resolve_hostname		920522	0					
ANR	920577	ArgumentList	host		920522	1					
ANR	920578	Argument	host		920522	0					
ANR	920579	Identifier	host		920522	0					
ANR	920580	ForStatement	for ( std :: vector < condor_sockaddr > :: iterator iter = addrs . begin ( ) ; iter != addrs . end ( ) ; ++ iter )		920522	4					
ANR	920581	ForInit	std :: vector < condor_sockaddr > :: iterator iter = addrs . begin ( ) ;	486:6:12777:12836	920522	0	True				
ANR	920582	IdentifierDeclStatement	std :: vector < condor_sockaddr > :: iterator iter = addrs . begin ( ) ;		920522	0					
ANR	920583	IdentifierDecl	iter = addrs . begin ( )		920522	0					
ANR	920584	IdentifierDeclType	std :: vector < condor_sockaddr > :: iterator		920522	0					
ANR	920585	Identifier	iter		920522	1					
ANR	920586	AssignmentExpression	iter = addrs . begin ( )		920522	2		=			
ANR	920587	Identifier	iter		920522	0					
ANR	920588	CallExpression	addrs . begin ( )		920522	1					
ANR	920589	Callee	addrs . begin		920522	0					
ANR	920590	MemberAccess	addrs . begin		920522	0					
ANR	920591	Identifier	addrs		920522	0					
ANR	920592	Identifier	begin		920522	1					
ANR	920593	ArgumentList			920522	1					
ANR	920594	Condition	iter != addrs . end ( )	487:3:12841:12859	920522	1	True				
ANR	920595	EqualityExpression	iter != addrs . end ( )		920522	0		!=			
ANR	920596	Identifier	iter		920522	0					
ANR	920597	CallExpression	addrs . end ( )		920522	1					
ANR	920598	Callee	addrs . end		920522	0					
ANR	920599	MemberAccess	addrs . end		920522	0					
ANR	920600	Identifier	addrs		920522	0					
ANR	920601	Identifier	end		920522	1					
ANR	920602	ArgumentList			920522	1					
ANR	920603	UnaryExpression	++ iter	488:3:12865:12870	920522	2	True				
ANR	920604	IncDec	++		920522	0					
ANR	920605	Identifier	iter		920522	1					
ANR	920606	CompoundStatement		13:2:370:405	920522	3					
ANR	920607	IdentifierDeclStatement	const condor_sockaddr & addr = * iter ;	489:2:12877:12912	920522	0	True				
ANR	920608	IdentifierDecl	& addr = * iter		920522	0					
ANR	920609	IdentifierDeclType	const condor_sockaddr &		920522	0					
ANR	920610	Identifier	addr		920522	1					
ANR	920611	AssignmentExpression	& addr = * iter		920522	2		=			
ANR	920612	Identifier	addr		920522	0					
ANR	920613	UnaryOperationExpression	* iter		920522	1					
ANR	920614	UnaryOperator	*		920522	0					
ANR	920615	Identifier	iter		920522	1					
ANR	920616	ExpressionStatement	list -> append ( addr . to_ip_string ( ) . Value ( ) )	490:2:12916:12957	920522	1	True				
ANR	920617	CallExpression	list -> append ( addr . to_ip_string ( ) . Value ( ) )		920522	0					
ANR	920618	Callee	list -> append		920522	0					
ANR	920619	PtrMemberAccess	list -> append		920522	0					
ANR	920620	Identifier	list		920522	0					
ANR	920621	Identifier	append		920522	1					
ANR	920622	ArgumentList	addr . to_ip_string ( ) . Value ( )		920522	1					
ANR	920623	Argument	addr . to_ip_string ( ) . Value ( )		920522	0					
ANR	920624	CallExpression	addr . to_ip_string ( ) . Value ( )		920522	0					
ANR	920625	Callee	addr . to_ip_string ( ) . Value		920522	0					
ANR	920626	MemberAccess	addr . to_ip_string ( ) . Value		920522	0					
ANR	920627	CallExpression	addr . to_ip_string ( )		920522	0					
ANR	920628	Callee	addr . to_ip_string		920522	0					
ANR	920629	MemberAccess	addr . to_ip_string		920522	0					
ANR	920630	Identifier	addr		920522	0					
ANR	920631	Identifier	to_ip_string		920522	1					
ANR	920632	ArgumentList			920522	1					
ANR	920633	Identifier	Value		920522	1					
ANR	920634	ArgumentList			920522	1					
ANR	920635	ReturnType	static void		920522	1					
ANR	920636	Identifier	ExpandHostAddresses		920522	2					
ANR	920637	ParameterList	"char const * host , StringList * list"		920522	3					
ANR	920638	Parameter	char const * host	476:20:12471:12486	920522	0	True				
ANR	920639	ParameterType	char const *		920522	0					
ANR	920640	Identifier	host		920522	1					
ANR	920641	Parameter	StringList * list	476:37:12488:12503	920522	1	True				
ANR	920642	ParameterType	StringList *		920522	0					
ANR	920643	Identifier	list		920522	1					
ANR	920644	CFGEntryNode	ENTRY		920522		True				
ANR	920645	CFGExitNode	EXIT		920522		True				
ANR	920646	Symbol	addr . to_ip_string		920522						
ANR	920647	Symbol	addrs		920522						
ANR	920648	Symbol	strchr		920522						
ANR	920649	Symbol	iter		920522						
ANR	920650	Symbol	list		920522						
ANR	920651	Symbol	addr . to_ip_string ( ) . Value		920522						
ANR	920652	Symbol	* iter		920522						
ANR	920653	Symbol	netaddr . from_net_string		920522						
ANR	920654	Symbol	addrs . end		920522						
ANR	920655	Symbol	resolve_hostname		920522						
ANR	920656	Symbol	host		920522						
ANR	920657	Symbol	netaddr		920522						
ANR	920658	Symbol	addrs . begin		920522						
ANR	920659	Symbol	addr		920522						
ANR	920660	Function	IpVerify :: fill_table	494:0:12965:14625							
ANR	920661	FunctionDef	"IpVerify :: fill_table (PermTypeEntry * pentry , char * list , bool allow)"		920660	0					
ANR	920662	CompoundStatement		496:0:13040:14625	920660	0					
ANR	920663	IdentifierDeclStatement	NetStringList * whichHostList = NULL ;	497:4:13046:13082	920660	0	True				
ANR	920664	IdentifierDecl	* whichHostList = NULL		920660	0					
ANR	920665	IdentifierDeclType	NetStringList *		920660	0					
ANR	920666	Identifier	whichHostList		920660	1					
ANR	920667	AssignmentExpression	* whichHostList = NULL		920660	2		=			
ANR	920668	Identifier	NULL		920660	0					
ANR	920669	Identifier	NULL		920660	1					
ANR	920670	IdentifierDeclStatement	UserHash_t * whichUserHash = NULL ;	498:4:13088:13121	920660	1	True				
ANR	920671	IdentifierDecl	* whichUserHash = NULL		920660	0					
ANR	920672	IdentifierDeclType	UserHash_t *		920660	0					
ANR	920673	Identifier	whichUserHash		920660	1					
ANR	920674	AssignmentExpression	* whichUserHash = NULL		920660	2		=			
ANR	920675	Identifier	NULL		920660	0					
ANR	920676	Identifier	NULL		920660	1					
ANR	920677	IdentifierDeclStatement	StringList * slist ;	499:4:13127:13145	920660	2	True				
ANR	920678	IdentifierDecl	* slist		920660	0					
ANR	920679	IdentifierDeclType	StringList *		920660	0					
ANR	920680	Identifier	slist		920660	1					
ANR	920681	ExpressionStatement	assert ( pentry )	501:4:13152:13166	920660	3	True				
ANR	920682	CallExpression	assert ( pentry )		920660	0					
ANR	920683	Callee	assert		920660	0					
ANR	920684	Identifier	assert		920660	0					
ANR	920685	ArgumentList	pentry		920660	1					
ANR	920686	Argument	pentry		920660	0					
ANR	920687	Identifier	pentry		920660	0					
ANR	920688	IfStatement	if ( whichHostList == NULL )		920660	4					
ANR	920689	Condition	whichHostList == NULL	503:8:13177:13197	920660	0	True				
ANR	920690	EqualityExpression	whichHostList == NULL		920660	0		==			
ANR	920691	Identifier	whichHostList		920660	0					
ANR	920692	Identifier	NULL		920660	1					
ANR	920693	CompoundStatement		8:31:159:159	920660	1					
ANR	920694	ExpressionStatement	whichHostList = new NetStringList ( )	504:8:13210:13245	920660	0	True				
ANR	920695	AssignmentExpression	whichHostList = new NetStringList ( )		920660	0		=			
ANR	920696	Identifier	whichHostList		920660	0					
ANR	920697	UnaryExpression	new NetStringList ( )		920660	1					
ANR	920698	IfStatement	if ( whichUserHash == NULL )		920660	5					
ANR	920699	Condition	whichUserHash == NULL	506:8:13261:13281	920660	0	True				
ANR	920700	EqualityExpression	whichUserHash == NULL		920660	0		==			
ANR	920701	Identifier	whichUserHash		920660	0					
ANR	920702	Identifier	NULL		920660	1					
ANR	920703	CompoundStatement		11:31:243:243	920660	1					
ANR	920704	ExpressionStatement	"whichUserHash = new UserHash_t ( 1024 , compute_host_hash )"	507:8:13294:13349	920660	0	True				
ANR	920705	AssignmentExpression	"whichUserHash = new UserHash_t ( 1024 , compute_host_hash )"		920660	0		=			
ANR	920706	Identifier	whichUserHash		920660	0					
ANR	920707	Expression	"1024 , compute_host_hash"		920660	1					
ANR	920708	PrimaryExpression	1024		920660	0					
ANR	920709	Identifier	compute_host_hash		920660	1					
ANR	920710	ExpressionStatement	slist = new StringList ( list )	510:4:13362:13390	920660	6	True				
ANR	920711	AssignmentExpression	slist = new StringList ( list )		920660	0		=			
ANR	920712	Identifier	slist		920660	0					
ANR	920713	Identifier	list		920660	1					
ANR	920714	IdentifierDeclStatement	"char * entry , * host , * user ;"	511:1:13393:13420	920660	7	True				
ANR	920715	IdentifierDecl	* entry		920660	0					
ANR	920716	IdentifierDeclType	char *		920660	0					
ANR	920717	Identifier	entry		920660	1					
ANR	920718	IdentifierDecl	* host		920660	1					
ANR	920719	IdentifierDeclType	char *		920660	0					
ANR	920720	Identifier	host		920660	1					
ANR	920721	IdentifierDecl	* user		920660	2					
ANR	920722	IdentifierDeclType	char *		920660	0					
ANR	920723	Identifier	user		920660	1					
ANR	920724	ExpressionStatement	slist -> rewind ( )	512:1:13423:13438	920660	8	True				
ANR	920725	CallExpression	slist -> rewind ( )		920660	0					
ANR	920726	Callee	slist -> rewind		920660	0					
ANR	920727	PtrMemberAccess	slist -> rewind		920660	0					
ANR	920728	Identifier	slist		920660	0					
ANR	920729	Identifier	rewind		920660	1					
ANR	920730	ArgumentList			920660	1					
ANR	920731	WhileStatement	while ( ( entry = slist -> next ( ) ) )		920660	9					
ANR	920732	Condition	entry = slist -> next ( )	513:9:13449:13469	920660	0	True				
ANR	920733	AssignmentExpression	entry = slist -> next ( )		920660	0		=			
ANR	920734	Identifier	entry		920660	0					
ANR	920735	CallExpression	slist -> next ( )		920660	1					
ANR	920736	Callee	slist -> next		920660	0					
ANR	920737	PtrMemberAccess	slist -> next		920660	0					
ANR	920738	Identifier	slist		920660	0					
ANR	920739	Identifier	next		920660	1					
ANR	920740	ArgumentList			920660	1					
ANR	920741	CompoundStatement		36:2:914:935	920660	1					
ANR	920742	IfStatement	if ( ! * entry )		920660	0					
ANR	920743	Condition	! * entry	514:6:13481:13487	920660	0	True				
ANR	920744	UnaryOperationExpression	! * entry		920660	0					
ANR	920745	UnaryOperator	!		920660	0					
ANR	920746	UnaryOperationExpression	* entry		920660	1					
ANR	920747	UnaryOperator	*		920660	0					
ANR	920748	Identifier	entry		920660	1					
ANR	920749	CompoundStatement		19:15:449:449	920660	1					
ANR	920750	ExpressionStatement	slist -> deleteCurrent ( )	516:3:13515:13537	920660	0	True				
ANR	920751	CallExpression	slist -> deleteCurrent ( )		920660	0					
ANR	920752	Callee	slist -> deleteCurrent		920660	0					
ANR	920753	PtrMemberAccess	slist -> deleteCurrent		920660	0					
ANR	920754	Identifier	slist		920660	0					
ANR	920755	Identifier	deleteCurrent		920660	1					
ANR	920756	ArgumentList			920660	1					
ANR	920757	ContinueStatement	continue ;	517:3:13542:13550	920660	1	True				
ANR	920758	ExpressionStatement	"split_entry ( entry , & host , & user )"	519:2:13558:13590	920660	1	True				
ANR	920759	CallExpression	"split_entry ( entry , & host , & user )"		920660	0					
ANR	920760	Callee	split_entry		920660	0					
ANR	920761	Identifier	split_entry		920660	0					
ANR	920762	ArgumentList	entry		920660	1					
ANR	920763	Argument	entry		920660	0					
ANR	920764	Identifier	entry		920660	0					
ANR	920765	Argument	& host		920660	1					
ANR	920766	UnaryOperationExpression	& host		920660	0					
ANR	920767	UnaryOperator	&		920660	0					
ANR	920768	Identifier	host		920660	1					
ANR	920769	Argument	& user		920660	2					
ANR	920770	UnaryOperationExpression	& user		920660	0					
ANR	920771	UnaryOperator	&		920660	0					
ANR	920772	Identifier	user		920660	1					
ANR	920773	ExpressionStatement	ASSERT ( host )	520:2:13594:13608	920660	2	True				
ANR	920774	CallExpression	ASSERT ( host )		920660	0					
ANR	920775	Callee	ASSERT		920660	0					
ANR	920776	Identifier	ASSERT		920660	0					
ANR	920777	ArgumentList	host		920660	1					
ANR	920778	Argument	host		920660	0					
ANR	920779	Identifier	host		920660	0					
ANR	920780	ExpressionStatement	ASSERT ( user )	521:2:13612:13626	920660	3	True				
ANR	920781	CallExpression	ASSERT ( user )		920660	0					
ANR	920782	Callee	ASSERT		920660	0					
ANR	920783	Identifier	ASSERT		920660	0					
ANR	920784	ArgumentList	user		920660	1					
ANR	920785	Argument	user		920660	0					
ANR	920786	Identifier	user		920660	0					
ANR	920787	IdentifierDeclStatement	StringList host_addrs ;	527:2:13865:13886	920660	4	True				
ANR	920788	IdentifierDecl	host_addrs		920660	0					
ANR	920789	IdentifierDeclType	StringList		920660	0					
ANR	920790	Identifier	host_addrs		920660	1					
ANR	920791	ExpressionStatement	"ExpandHostAddresses ( host , & host_addrs )"	528:2:13890:13927	920660	5	True				
ANR	920792	CallExpression	"ExpandHostAddresses ( host , & host_addrs )"		920660	0					
ANR	920793	Callee	ExpandHostAddresses		920660	0					
ANR	920794	Identifier	ExpandHostAddresses		920660	0					
ANR	920795	ArgumentList	host		920660	1					
ANR	920796	Argument	host		920660	0					
ANR	920797	Identifier	host		920660	0					
ANR	920798	Argument	& host_addrs		920660	1					
ANR	920799	UnaryOperationExpression	& host_addrs		920660	0					
ANR	920800	UnaryOperator	&		920660	0					
ANR	920801	Identifier	host_addrs		920660	1					
ANR	920802	ExpressionStatement	host_addrs . rewind ( )	529:2:13931:13950	920660	6	True				
ANR	920803	CallExpression	host_addrs . rewind ( )		920660	0					
ANR	920804	Callee	host_addrs . rewind		920660	0					
ANR	920805	MemberAccess	host_addrs . rewind		920660	0					
ANR	920806	Identifier	host_addrs		920660	0					
ANR	920807	Identifier	rewind		920660	1					
ANR	920808	ArgumentList			920660	1					
ANR	920809	IdentifierDeclStatement	char const * host_addr ;	531:2:13955:13976	920660	7	True				
ANR	920810	IdentifierDecl	* host_addr		920660	0					
ANR	920811	IdentifierDeclType	char const *		920660	0					
ANR	920812	Identifier	host_addr		920660	1					
ANR	920813	WhileStatement	while ( ( host_addr = host_addrs . next ( ) ) )		920660	8					
ANR	920814	Condition	host_addr = host_addrs . next ( )	532:9:13987:14015	920660	0	True				
ANR	920815	AssignmentExpression	host_addr = host_addrs . next ( )		920660	0		=			
ANR	920816	Identifier	host_addr		920660	0					
ANR	920817	CallExpression	host_addrs . next ( )		920660	1					
ANR	920818	Callee	host_addrs . next		920660	0					
ANR	920819	MemberAccess	host_addrs . next		920660	0					
ANR	920820	Identifier	host_addrs		920660	0					
ANR	920821	Identifier	next		920660	1					
ANR	920822	ArgumentList			920660	1					
ANR	920823	CompoundStatement		39:3:1018:1043	920660	1					
ANR	920824	IdentifierDeclStatement	MyString hostString ( host_addr ) ;	533:3:14024:14054	920660	0	True				
ANR	920825	IdentifierDecl	hostString ( host_addr )		920660	0					
ANR	920826	IdentifierDeclType	MyString		920660	0					
ANR	920827	Identifier	hostString		920660	1					
ANR	920828	Identifier	host_addr		920660	2					
ANR	920829	IdentifierDeclStatement	StringList * userList = 0 ;	534:3:14059:14084	920660	1	True				
ANR	920830	IdentifierDecl	* userList = 0		920660	0					
ANR	920831	IdentifierDeclType	StringList *		920660	0					
ANR	920832	Identifier	userList		920660	1					
ANR	920833	AssignmentExpression	* userList = 0		920660	2		=			
ANR	920834	Identifier	userList		920660	0					
ANR	920835	PrimaryExpression	0		920660	1					
ANR	920836	IfStatement	"if ( whichUserHash -> lookup ( hostString , userList ) == - 1 )"		920660	2					
ANR	920837	Condition	"whichUserHash -> lookup ( hostString , userList ) == - 1"	536:7:14141:14189	920660	0	True				
ANR	920838	EqualityExpression	"whichUserHash -> lookup ( hostString , userList ) == - 1"		920660	0		==			
ANR	920839	CallExpression	"whichUserHash -> lookup ( hostString , userList )"		920660	0					
ANR	920840	Callee	whichUserHash -> lookup		920660	0					
ANR	920841	PtrMemberAccess	whichUserHash -> lookup		920660	0					
ANR	920842	Identifier	whichUserHash		920660	0					
ANR	920843	Identifier	lookup		920660	1					
ANR	920844	ArgumentList	hostString		920660	1					
ANR	920845	Argument	hostString		920660	0					
ANR	920846	Identifier	hostString		920660	0					
ANR	920847	Argument	userList		920660	1					
ANR	920848	Identifier	userList		920660	0					
ANR	920849	UnaryOperationExpression	- 1		920660	1					
ANR	920850	UnaryOperator	-		920660	0					
ANR	920851	PrimaryExpression	1		920660	1					
ANR	920852	CompoundStatement		41:58:1151:1151	920660	1					
ANR	920853	ExpressionStatement	"whichUserHash -> insert ( hostString , new StringList ( user ) )"	537:4:14198:14253	920660	0	True				
ANR	920854	CallExpression	"whichUserHash -> insert ( hostString , new StringList ( user ) )"		920660	0					
ANR	920855	Callee	whichUserHash -> insert		920660	0					
ANR	920856	PtrMemberAccess	whichUserHash -> insert		920660	0					
ANR	920857	Identifier	whichUserHash		920660	0					
ANR	920858	Identifier	insert		920660	1					
ANR	920859	ArgumentList	hostString		920660	1					
ANR	920860	Argument	hostString		920660	0					
ANR	920861	Identifier	hostString		920660	0					
ANR	920862	Argument	user		920660	1					
ANR	920863	Identifier	user		920660	0					
ANR	920864	ExpressionStatement	whichHostList -> append ( hostString . Value ( ) )	538:4:14260:14301	920660	1	True				
ANR	920865	CallExpression	whichHostList -> append ( hostString . Value ( ) )		920660	0					
ANR	920866	Callee	whichHostList -> append		920660	0					
ANR	920867	PtrMemberAccess	whichHostList -> append		920660	0					
ANR	920868	Identifier	whichHostList		920660	0					
ANR	920869	Identifier	append		920660	1					
ANR	920870	ArgumentList	hostString . Value ( )		920660	1					
ANR	920871	Argument	hostString . Value ( )		920660	0					
ANR	920872	CallExpression	hostString . Value ( )		920660	0					
ANR	920873	Callee	hostString . Value		920660	0					
ANR	920874	MemberAccess	hostString . Value		920660	0					
ANR	920875	Identifier	hostString		920660	0					
ANR	920876	Identifier	Value		920660	1					
ANR	920877	ArgumentList			920660	1					
ANR	920878	ElseStatement	else		920660	0					
ANR	920879	CompoundStatement		45:8:1275:1275	920660	0					
ANR	920880	ExpressionStatement	userList -> append ( user )	541:4:14322:14344	920660	0	True				
ANR	920881	CallExpression	userList -> append ( user )		920660	0					
ANR	920882	Callee	userList -> append		920660	0					
ANR	920883	PtrMemberAccess	userList -> append		920660	0					
ANR	920884	Identifier	userList		920660	0					
ANR	920885	Identifier	append		920660	1					
ANR	920886	ArgumentList	user		920660	1					
ANR	920887	Argument	user		920660	0					
ANR	920888	Identifier	user		920660	0					
ANR	920889	ExpressionStatement	free ( host )	545:2:14358:14368	920660	9	True				
ANR	920890	CallExpression	free ( host )		920660	0					
ANR	920891	Callee	free		920660	0					
ANR	920892	Identifier	free		920660	0					
ANR	920893	ArgumentList	host		920660	1					
ANR	920894	Argument	host		920660	0					
ANR	920895	Identifier	host		920660	0					
ANR	920896	ExpressionStatement	free ( user )	546:2:14372:14382	920660	10	True				
ANR	920897	CallExpression	free ( user )		920660	0					
ANR	920898	Callee	free		920660	0					
ANR	920899	Identifier	free		920660	0					
ANR	920900	ArgumentList	user		920660	1					
ANR	920901	Argument	user		920660	0					
ANR	920902	Identifier	user		920660	0					
ANR	920903	IfStatement	if ( allow )		920660	10					
ANR	920904	Condition	allow	549:8:14396:14400	920660	0	True				
ANR	920905	Identifier	allow		920660	0					
ANR	920906	CompoundStatement		54:15:1362:1362	920660	1					
ANR	920907	ExpressionStatement	pentry -> allow_hosts = whichHostList	550:8:14413:14448	920660	0	True				
ANR	920908	AssignmentExpression	pentry -> allow_hosts = whichHostList		920660	0		=			
ANR	920909	PtrMemberAccess	pentry -> allow_hosts		920660	0					
ANR	920910	Identifier	pentry		920660	0					
ANR	920911	Identifier	allow_hosts		920660	1					
ANR	920912	Identifier	whichHostList		920660	1					
ANR	920913	ExpressionStatement	pentry -> allow_users = whichUserHash	551:8:14458:14494	920660	1	True				
ANR	920914	AssignmentExpression	pentry -> allow_users = whichUserHash		920660	0		=			
ANR	920915	PtrMemberAccess	pentry -> allow_users		920660	0					
ANR	920916	Identifier	pentry		920660	0					
ANR	920917	Identifier	allow_users		920660	1					
ANR	920918	Identifier	whichUserHash		920660	1					
ANR	920919	ElseStatement	else		920660	0					
ANR	920920	CompoundStatement		58:9:1470:1470	920660	0					
ANR	920921	ExpressionStatement	pentry -> deny_hosts = whichHostList	554:8:14521:14555	920660	0	True				
ANR	920922	AssignmentExpression	pentry -> deny_hosts = whichHostList		920660	0		=			
ANR	920923	PtrMemberAccess	pentry -> deny_hosts		920660	0					
ANR	920924	Identifier	pentry		920660	0					
ANR	920925	Identifier	deny_hosts		920660	1					
ANR	920926	Identifier	whichHostList		920660	1					
ANR	920927	ExpressionStatement	pentry -> deny_users = whichUserHash	555:8:14565:14599	920660	1	True				
ANR	920928	AssignmentExpression	pentry -> deny_users = whichUserHash		920660	0		=			
ANR	920929	PtrMemberAccess	pentry -> deny_users		920660	0					
ANR	920930	Identifier	pentry		920660	0					
ANR	920931	Identifier	deny_users		920660	1					
ANR	920932	Identifier	whichUserHash		920660	1					
ANR	920933	Statement	delete	557:4:14611:14616	920660	11	True				
ANR	920934	ExpressionStatement	slist	557:11:14618:14623	920660	12	True				
ANR	920935	Identifier	slist		920660	0					
ANR	920936	ReturnType	void		920660	1					
ANR	920937	Identifier	IpVerify :: fill_table		920660	2					
ANR	920938	ParameterList	"PermTypeEntry * pentry , char * list , bool allow"		920660	3					
ANR	920939	Parameter	PermTypeEntry * pentry	495:21:12991:13012	920660	0	True				
ANR	920940	ParameterType	PermTypeEntry *		920660	0					
ANR	920941	Identifier	pentry		920660	1					
ANR	920942	Parameter	char * list	495:45:13015:13025	920660	1	True				
ANR	920943	ParameterType	char *		920660	0					
ANR	920944	Identifier	list		920660	1					
ANR	920945	Parameter	bool allow	495:58:13028:13037	920660	2	True				
ANR	920946	ParameterType	bool		920660	0					
ANR	920947	Identifier	allow		920660	1					
ANR	920948	CFGEntryNode	ENTRY		920660		True				
ANR	920949	CFGExitNode	EXIT		920660		True				
ANR	920950	Symbol	allow		920660						
ANR	920951	Symbol	compute_host_hash		920660						
ANR	920952	Symbol	pentry -> deny_hosts		920660						
ANR	920953	Symbol	slist -> next		920660						
ANR	920954	Symbol	userList		920660						
ANR	920955	Symbol	host_addrs		920660						
ANR	920956	Symbol	whichUserHash -> lookup		920660						
ANR	920957	Symbol	slist		920660						
ANR	920958	Symbol	& host_addrs		920660						
ANR	920959	Symbol	& user		920660						
ANR	920960	Symbol	host		920660						
ANR	920961	Symbol	host_addr		920660						
ANR	920962	Symbol	* entry		920660						
ANR	920963	Symbol	* pentry		920660						
ANR	920964	Symbol	pentry		920660						
ANR	920965	Symbol	whichHostList		920660						
ANR	920966	Symbol	NULL		920660						
ANR	920967	Symbol	list		920660						
ANR	920968	Symbol	& host		920660						
ANR	920969	Symbol	hostString		920660						
ANR	920970	Symbol	whichUserHash		920660						
ANR	920971	Symbol	entry		920660						
ANR	920972	Symbol	pentry -> allow_users		920660						
ANR	920973	Symbol	* slist		920660						
ANR	920974	Symbol	hostString . Value		920660						
ANR	920975	Symbol	host_addrs . next		920660						
ANR	920976	Symbol	pentry -> deny_users		920660						
ANR	920977	Symbol	user		920660						
ANR	920978	Symbol	pentry -> allow_hosts		920660						
ANR	920979	Symbol	* whichUserHash		920660						
ANR	920980	Function	IpVerify :: split_entry	560:0:14628:16881							
ANR	920981	FunctionDef	"IpVerify :: split_entry (const char * perm_entry , char * * host , char * * user)"		920980	0					
ANR	920982	CompoundStatement		561:0:14709:16881	920980	0					
ANR	920983	IdentifierDeclStatement	char * slash0 ;	562:4:14715:14728	920980	0	True				
ANR	920984	IdentifierDecl	* slash0		920980	0					
ANR	920985	IdentifierDeclType	char *		920980	0					
ANR	920986	Identifier	slash0		920980	1					
ANR	920987	IdentifierDeclStatement	char * slash1 ;	563:4:14734:14747	920980	1	True				
ANR	920988	IdentifierDecl	* slash1		920980	0					
ANR	920989	IdentifierDeclType	char *		920980	0					
ANR	920990	Identifier	slash1		920980	1					
ANR	920991	IdentifierDeclStatement	char * at ;	564:4:14753:14762	920980	2	True				
ANR	920992	IdentifierDecl	* at		920980	0					
ANR	920993	IdentifierDeclType	char *		920980	0					
ANR	920994	Identifier	at		920980	1					
ANR	920995	IdentifierDeclStatement	char * colon ;	565:1:14765:14777	920980	3	True				
ANR	920996	IdentifierDecl	* colon		920980	0					
ANR	920997	IdentifierDeclType	char *		920980	0					
ANR	920998	Identifier	colon		920980	1					
ANR	920999	IdentifierDeclStatement	char * permbuf ;	566:4:14783:14797	920980	4	True				
ANR	921000	IdentifierDecl	* permbuf		920980	0					
ANR	921001	IdentifierDeclType	char *		920980	0					
ANR	921002	Identifier	permbuf		920980	1					
ANR	921003	IfStatement	if ( ! perm_entry || ! * perm_entry )		920980	5					
ANR	921004	Condition	! perm_entry || ! * perm_entry	568:5:14805:14831	920980	0	True				
ANR	921005	OrExpression	! perm_entry || ! * perm_entry		920980	0		||			
ANR	921006	UnaryOperationExpression	! perm_entry		920980	0					
ANR	921007	UnaryOperator	!		920980	0					
ANR	921008	Identifier	perm_entry		920980	1					
ANR	921009	UnaryOperationExpression	! * perm_entry		920980	1					
ANR	921010	UnaryOperator	!		920980	0					
ANR	921011	UnaryOperationExpression	* perm_entry		920980	1					
ANR	921012	UnaryOperator	*		920980	0					
ANR	921013	Identifier	perm_entry		920980	1					
ANR	921014	CompoundStatement		8:34:124:124	920980	1					
ANR	921015	ExpressionStatement	"EXCEPT ( ""split_entry called with NULL or &NULL!"" )"	569:2:14838:14886	920980	0	True				
ANR	921016	CallExpression	"EXCEPT ( ""split_entry called with NULL or &NULL!"" )"		920980	0					
ANR	921017	Callee	EXCEPT		920980	0					
ANR	921018	Identifier	EXCEPT		920980	0					
ANR	921019	ArgumentList	"""split_entry called with NULL or &NULL!"""		920980	1					
ANR	921020	Argument	"""split_entry called with NULL or &NULL!"""		920980	0					
ANR	921021	PrimaryExpression	"""split_entry called with NULL or &NULL!"""		920980	0					
ANR	921022	ExpressionStatement	permbuf = strdup ( perm_entry )	587:1:15341:15371	920980	6	True				
ANR	921023	AssignmentExpression	permbuf = strdup ( perm_entry )		920980	0		=			
ANR	921024	Identifier	permbuf		920980	0					
ANR	921025	CallExpression	strdup ( perm_entry )		920980	1					
ANR	921026	Callee	strdup		920980	0					
ANR	921027	Identifier	strdup		920980	0					
ANR	921028	ArgumentList	perm_entry		920980	1					
ANR	921029	Argument	perm_entry		920980	0					
ANR	921030	Identifier	perm_entry		920980	0					
ANR	921031	ExpressionStatement	ASSERT ( permbuf )	588:1:15374:15391	920980	7	True				
ANR	921032	CallExpression	ASSERT ( permbuf )		920980	0					
ANR	921033	Callee	ASSERT		920980	0					
ANR	921034	Identifier	ASSERT		920980	0					
ANR	921035	ArgumentList	permbuf		920980	1					
ANR	921036	Argument	permbuf		920980	0					
ANR	921037	Identifier	permbuf		920980	0					
ANR	921038	ExpressionStatement	"slash0 = strchr ( permbuf , '/' )"	590:4:15398:15427	920980	8	True				
ANR	921039	AssignmentExpression	"slash0 = strchr ( permbuf , '/' )"		920980	0		=			
ANR	921040	Identifier	slash0		920980	0					
ANR	921041	CallExpression	"strchr ( permbuf , '/' )"		920980	1					
ANR	921042	Callee	strchr		920980	0					
ANR	921043	Identifier	strchr		920980	0					
ANR	921044	ArgumentList	permbuf		920980	1					
ANR	921045	Argument	permbuf		920980	0					
ANR	921046	Identifier	permbuf		920980	0					
ANR	921047	Argument	'/'		920980	1					
ANR	921048	PrimaryExpression	'/'		920980	0					
ANR	921049	IfStatement	if ( ! slash0 )		920980	9					
ANR	921050	Condition	! slash0	591:5:15434:15440	920980	0	True				
ANR	921051	UnaryOperationExpression	! slash0		920980	0					
ANR	921052	UnaryOperator	!		920980	0					
ANR	921053	Identifier	slash0		920980	1					
ANR	921054	CompoundStatement		31:14:733:733	920980	1					
ANR	921055	ExpressionStatement	"at = strchr ( permbuf , '@' )"	592:2:15447:15472	920980	0	True				
ANR	921056	AssignmentExpression	"at = strchr ( permbuf , '@' )"		920980	0		=			
ANR	921057	Identifier	at		920980	0					
ANR	921058	CallExpression	"strchr ( permbuf , '@' )"		920980	1					
ANR	921059	Callee	strchr		920980	0					
ANR	921060	Identifier	strchr		920980	0					
ANR	921061	ArgumentList	permbuf		920980	1					
ANR	921062	Argument	permbuf		920980	0					
ANR	921063	Identifier	permbuf		920980	0					
ANR	921064	Argument	'@'		920980	1					
ANR	921065	PrimaryExpression	'@'		920980	0					
ANR	921066	IfStatement	if ( at )		920980	1					
ANR	921067	Condition	at	593:6:15480:15481	920980	0	True				
ANR	921068	Identifier	at		920980	0					
ANR	921069	CompoundStatement		33:10:774:774	920980	1					
ANR	921070	ExpressionStatement	* user = strdup ( permbuf )	594:3:15489:15512	920980	0	True				
ANR	921071	AssignmentExpression	* user = strdup ( permbuf )		920980	0		=			
ANR	921072	UnaryOperationExpression	* user		920980	0					
ANR	921073	UnaryOperator	*		920980	0					
ANR	921074	Identifier	user		920980	1					
ANR	921075	CallExpression	strdup ( permbuf )		920980	1					
ANR	921076	Callee	strdup		920980	0					
ANR	921077	Identifier	strdup		920980	0					
ANR	921078	ArgumentList	permbuf		920980	1					
ANR	921079	Argument	permbuf		920980	0					
ANR	921080	Identifier	permbuf		920980	0					
ANR	921081	ExpressionStatement	"* host = strdup ( ""*"" )"	595:3:15517:15536	920980	1	True				
ANR	921082	AssignmentExpression	"* host = strdup ( ""*"" )"		920980	0		=			
ANR	921083	UnaryOperationExpression	* host		920980	0					
ANR	921084	UnaryOperator	*		920980	0					
ANR	921085	Identifier	host		920980	1					
ANR	921086	CallExpression	"strdup ( ""*"" )"		920980	1					
ANR	921087	Callee	strdup		920980	0					
ANR	921088	Identifier	strdup		920980	0					
ANR	921089	ArgumentList	"""*"""		920980	1					
ANR	921090	Argument	"""*"""		920980	0					
ANR	921091	PrimaryExpression	"""*"""		920980	0					
ANR	921092	ElseStatement	else		920980	0					
ANR	921093	CompoundStatement		36:9:837:837	920980	0					
ANR	921094	ExpressionStatement	"* user = strdup ( ""*"" )"	597:3:15552:15571	920980	0	True				
ANR	921095	AssignmentExpression	"* user = strdup ( ""*"" )"		920980	0		=			
ANR	921096	UnaryOperationExpression	* user		920980	0					
ANR	921097	UnaryOperator	*		920980	0					
ANR	921098	Identifier	user		920980	1					
ANR	921099	CallExpression	"strdup ( ""*"" )"		920980	1					
ANR	921100	Callee	strdup		920980	0					
ANR	921101	Identifier	strdup		920980	0					
ANR	921102	ArgumentList	"""*"""		920980	1					
ANR	921103	Argument	"""*"""		920980	0					
ANR	921104	PrimaryExpression	"""*"""		920980	0					
ANR	921105	ExpressionStatement	* host = strdup ( permbuf )	613:3:16000:16023	920980	1	True				
ANR	921106	AssignmentExpression	* host = strdup ( permbuf )		920980	0		=			
ANR	921107	UnaryOperationExpression	* host		920980	0					
ANR	921108	UnaryOperator	*		920980	0					
ANR	921109	Identifier	host		920980	1					
ANR	921110	CallExpression	strdup ( permbuf )		920980	1					
ANR	921111	Callee	strdup		920980	0					
ANR	921112	Identifier	strdup		920980	0					
ANR	921113	ArgumentList	permbuf		920980	1					
ANR	921114	Argument	permbuf		920980	0					
ANR	921115	Identifier	permbuf		920980	0					
ANR	921116	ElseStatement	else		920980	0					
ANR	921117	CompoundStatement		55:8:1327:1327	920980	0					
ANR	921118	ExpressionStatement	"slash1 = strchr ( slash0 + 1 , '/' )"	617:2:16092:16124	920980	0	True				
ANR	921119	AssignmentExpression	"slash1 = strchr ( slash0 + 1 , '/' )"		920980	0		=			
ANR	921120	Identifier	slash1		920980	0					
ANR	921121	CallExpression	"strchr ( slash0 + 1 , '/' )"		920980	1					
ANR	921122	Callee	strchr		920980	0					
ANR	921123	Identifier	strchr		920980	0					
ANR	921124	ArgumentList	slash0 + 1		920980	1					
ANR	921125	Argument	slash0 + 1		920980	0					
ANR	921126	AdditiveExpression	slash0 + 1		920980	0		+			
ANR	921127	Identifier	slash0		920980	0					
ANR	921128	PrimaryExpression	1		920980	1					
ANR	921129	Argument	'/'		920980	1					
ANR	921130	PrimaryExpression	'/'		920980	0					
ANR	921131	IfStatement	if ( slash1 )		920980	1					
ANR	921132	Condition	slash1	618:6:16132:16137	920980	0	True				
ANR	921133	Identifier	slash1		920980	0					
ANR	921134	CompoundStatement		58:14:1430:1430	920980	1					
ANR	921135	ExpressionStatement	* slash0 ++ = 0	620:3:16173:16186	920980	0	True				
ANR	921136	AssignmentExpression	* slash0 ++ = 0		920980	0		=			
ANR	921137	UnaryOperationExpression	* slash0 ++		920980	0					
ANR	921138	UnaryOperator	*		920980	0					
ANR	921139	PostIncDecOperationExpression	slash0 ++		920980	1					
ANR	921140	Identifier	slash0		920980	0					
ANR	921141	IncDec	++		920980	1					
ANR	921142	PrimaryExpression	0		920980	1					
ANR	921143	ExpressionStatement	* user = strdup ( permbuf )	621:3:16191:16214	920980	1	True				
ANR	921144	AssignmentExpression	* user = strdup ( permbuf )		920980	0		=			
ANR	921145	UnaryOperationExpression	* user		920980	0					
ANR	921146	UnaryOperator	*		920980	0					
ANR	921147	Identifier	user		920980	1					
ANR	921148	CallExpression	strdup ( permbuf )		920980	1					
ANR	921149	Callee	strdup		920980	0					
ANR	921150	Identifier	strdup		920980	0					
ANR	921151	ArgumentList	permbuf		920980	1					
ANR	921152	Argument	permbuf		920980	0					
ANR	921153	Identifier	permbuf		920980	0					
ANR	921154	ExpressionStatement	* host = strdup ( slash0 )	622:3:16219:16241	920980	2	True				
ANR	921155	AssignmentExpression	* host = strdup ( slash0 )		920980	0		=			
ANR	921156	UnaryOperationExpression	* host		920980	0					
ANR	921157	UnaryOperator	*		920980	0					
ANR	921158	Identifier	host		920980	1					
ANR	921159	CallExpression	strdup ( slash0 )		920980	1					
ANR	921160	Callee	strdup		920980	0					
ANR	921161	Identifier	strdup		920980	0					
ANR	921162	ArgumentList	slash0		920980	1					
ANR	921163	Argument	slash0		920980	0					
ANR	921164	Identifier	slash0		920980	0					
ANR	921165	ElseStatement	else		920980	0					
ANR	921166	CompoundStatement		63:9:1542:1542	920980	0					
ANR	921167	ExpressionStatement	"at = strchr ( permbuf , '@' )"	626:3:16331:16356	920980	0	True				
ANR	921168	AssignmentExpression	"at = strchr ( permbuf , '@' )"		920980	0		=			
ANR	921169	Identifier	at		920980	0					
ANR	921170	CallExpression	"strchr ( permbuf , '@' )"		920980	1					
ANR	921171	Callee	strchr		920980	0					
ANR	921172	Identifier	strchr		920980	0					
ANR	921173	ArgumentList	permbuf		920980	1					
ANR	921174	Argument	permbuf		920980	0					
ANR	921175	Identifier	permbuf		920980	0					
ANR	921176	Argument	'@'		920980	1					
ANR	921177	PrimaryExpression	'@'		920980	0					
ANR	921178	IfStatement	if ( ( at && at < slash0 ) || permbuf [ 0 ] == '*' )		920980	1					
ANR	921179	Condition	( at && at < slash0 ) || permbuf [ 0 ] == '*'	627:7:16365:16404	920980	0	True				
ANR	921180	OrExpression	( at && at < slash0 ) || permbuf [ 0 ] == '*'		920980	0		||			
ANR	921181	AndExpression	at && at < slash0		920980	0		&&			
ANR	921182	Identifier	at		920980	0					
ANR	921183	RelationalExpression	at < slash0		920980	1		<			
ANR	921184	Identifier	at		920980	0					
ANR	921185	Identifier	slash0		920980	1					
ANR	921186	EqualityExpression	permbuf [ 0 ] == '*'		920980	1		==			
ANR	921187	ArrayIndexing	permbuf [ 0 ]		920980	0					
ANR	921188	Identifier	permbuf		920980	0					
ANR	921189	PrimaryExpression	0		920980	1					
ANR	921190	PrimaryExpression	'*'		920980	1					
ANR	921191	CompoundStatement		67:49:1697:1697	920980	1					
ANR	921192	ExpressionStatement	* slash0 ++ = 0	628:4:16413:16426	920980	0	True				
ANR	921193	AssignmentExpression	* slash0 ++ = 0		920980	0		=			
ANR	921194	UnaryOperationExpression	* slash0 ++		920980	0					
ANR	921195	UnaryOperator	*		920980	0					
ANR	921196	PostIncDecOperationExpression	slash0 ++		920980	1					
ANR	921197	Identifier	slash0		920980	0					
ANR	921198	IncDec	++		920980	1					
ANR	921199	PrimaryExpression	0		920980	1					
ANR	921200	ExpressionStatement	* user = strdup ( permbuf )	629:4:16432:16455	920980	1	True				
ANR	921201	AssignmentExpression	* user = strdup ( permbuf )		920980	0		=			
ANR	921202	UnaryOperationExpression	* user		920980	0					
ANR	921203	UnaryOperator	*		920980	0					
ANR	921204	Identifier	user		920980	1					
ANR	921205	CallExpression	strdup ( permbuf )		920980	1					
ANR	921206	Callee	strdup		920980	0					
ANR	921207	Identifier	strdup		920980	0					
ANR	921208	ArgumentList	permbuf		920980	1					
ANR	921209	Argument	permbuf		920980	0					
ANR	921210	Identifier	permbuf		920980	0					
ANR	921211	ExpressionStatement	* host = strdup ( slash0 )	630:4:16461:16483	920980	2	True				
ANR	921212	AssignmentExpression	* host = strdup ( slash0 )		920980	0		=			
ANR	921213	UnaryOperationExpression	* host		920980	0					
ANR	921214	UnaryOperator	*		920980	0					
ANR	921215	Identifier	host		920980	1					
ANR	921216	CallExpression	strdup ( slash0 )		920980	1					
ANR	921217	Callee	strdup		920980	0					
ANR	921218	Identifier	strdup		920980	0					
ANR	921219	ArgumentList	slash0		920980	1					
ANR	921220	Argument	slash0		920980	0					
ANR	921221	Identifier	slash0		920980	0					
ANR	921222	ElseStatement	else		920980	0					
ANR	921223	CompoundStatement		72:4:1791:1813	920980	0					
ANR	921224	IdentifierDeclStatement	condor_netaddr netaddr ;	632:4:16501:16523	920980	0	True				
ANR	921225	IdentifierDecl	netaddr		920980	0					
ANR	921226	IdentifierDeclType	condor_netaddr		920980	0					
ANR	921227	Identifier	netaddr		920980	1					
ANR	921228	IfStatement	if ( netaddr . from_net_string ( permbuf ) )		920980	1					
ANR	921229	Condition	netaddr . from_net_string ( permbuf )	633:8:16533:16564	920980	0	True				
ANR	921230	CallExpression	netaddr . from_net_string ( permbuf )		920980	0					
ANR	921231	Callee	netaddr . from_net_string		920980	0					
ANR	921232	MemberAccess	netaddr . from_net_string		920980	0					
ANR	921233	Identifier	netaddr		920980	0					
ANR	921234	Identifier	from_net_string		920980	1					
ANR	921235	ArgumentList	permbuf		920980	1					
ANR	921236	Argument	permbuf		920980	0					
ANR	921237	Identifier	permbuf		920980	0					
ANR	921238	CompoundStatement		73:42:1857:1857	920980	1					
ANR	921239	ExpressionStatement	"* user = strdup ( ""*"" )"	635:5:16625:16644	920980	0	True				
ANR	921240	AssignmentExpression	"* user = strdup ( ""*"" )"		920980	0		=			
ANR	921241	UnaryOperationExpression	* user		920980	0					
ANR	921242	UnaryOperator	*		920980	0					
ANR	921243	Identifier	user		920980	1					
ANR	921244	CallExpression	"strdup ( ""*"" )"		920980	1					
ANR	921245	Callee	strdup		920980	0					
ANR	921246	Identifier	strdup		920980	0					
ANR	921247	ArgumentList	"""*"""		920980	1					
ANR	921248	Argument	"""*"""		920980	0					
ANR	921249	PrimaryExpression	"""*"""		920980	0					
ANR	921250	ExpressionStatement	* host = strdup ( permbuf )	636:5:16651:16674	920980	1	True				
ANR	921251	AssignmentExpression	* host = strdup ( permbuf )		920980	0		=			
ANR	921252	UnaryOperationExpression	* host		920980	0					
ANR	921253	UnaryOperator	*		920980	0					
ANR	921254	Identifier	host		920980	1					
ANR	921255	CallExpression	strdup ( permbuf )		920980	1					
ANR	921256	Callee	strdup		920980	0					
ANR	921257	Identifier	strdup		920980	0					
ANR	921258	ArgumentList	permbuf		920980	1					
ANR	921259	Argument	permbuf		920980	0					
ANR	921260	Identifier	permbuf		920980	0					
ANR	921261	ElseStatement	else		920980	0					
ANR	921262	CompoundStatement		77:11:1977:1977	920980	0					
ANR	921263	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: warning, strange entry %s\\n"" , permbuf )"	638:5:16694:16764	920980	0	True				
ANR	921264	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: warning, strange entry %s\\n"" , permbuf )"		920980	0					
ANR	921265	Callee	dprintf		920980	0					
ANR	921266	Identifier	dprintf		920980	0					
ANR	921267	ArgumentList	D_SECURITY		920980	1					
ANR	921268	Argument	D_SECURITY		920980	0					
ANR	921269	Identifier	D_SECURITY		920980	0					
ANR	921270	Argument	"""IPVERIFY: warning, strange entry %s\\n"""		920980	1					
ANR	921271	PrimaryExpression	"""IPVERIFY: warning, strange entry %s\\n"""		920980	0					
ANR	921272	Argument	permbuf		920980	2					
ANR	921273	Identifier	permbuf		920980	0					
ANR	921274	ExpressionStatement	* slash0 ++ = 0	639:5:16771:16784	920980	1	True				
ANR	921275	AssignmentExpression	* slash0 ++ = 0		920980	0		=			
ANR	921276	UnaryOperationExpression	* slash0 ++		920980	0					
ANR	921277	UnaryOperator	*		920980	0					
ANR	921278	PostIncDecOperationExpression	slash0 ++		920980	1					
ANR	921279	Identifier	slash0		920980	0					
ANR	921280	IncDec	++		920980	1					
ANR	921281	PrimaryExpression	0		920980	1					
ANR	921282	ExpressionStatement	* user = strdup ( permbuf )	640:5:16791:16814	920980	2	True				
ANR	921283	AssignmentExpression	* user = strdup ( permbuf )		920980	0		=			
ANR	921284	UnaryOperationExpression	* user		920980	0					
ANR	921285	UnaryOperator	*		920980	0					
ANR	921286	Identifier	user		920980	1					
ANR	921287	CallExpression	strdup ( permbuf )		920980	1					
ANR	921288	Callee	strdup		920980	0					
ANR	921289	Identifier	strdup		920980	0					
ANR	921290	ArgumentList	permbuf		920980	1					
ANR	921291	Argument	permbuf		920980	0					
ANR	921292	Identifier	permbuf		920980	0					
ANR	921293	ExpressionStatement	* host = strdup ( slash0 )	641:5:16821:16843	920980	3	True				
ANR	921294	AssignmentExpression	* host = strdup ( slash0 )		920980	0		=			
ANR	921295	UnaryOperationExpression	* host		920980	0					
ANR	921296	UnaryOperator	*		920980	0					
ANR	921297	Identifier	host		920980	1					
ANR	921298	CallExpression	strdup ( slash0 )		920980	1					
ANR	921299	Callee	strdup		920980	0					
ANR	921300	Identifier	strdup		920980	0					
ANR	921301	ArgumentList	slash0		920980	1					
ANR	921302	Argument	slash0		920980	0					
ANR	921303	Identifier	slash0		920980	0					
ANR	921304	ExpressionStatement	free ( permbuf )	646:1:16864:16879	920980	10	True				
ANR	921305	CallExpression	free ( permbuf )		920980	0					
ANR	921306	Callee	free		920980	0					
ANR	921307	Identifier	free		920980	0					
ANR	921308	ArgumentList	permbuf		920980	1					
ANR	921309	Argument	permbuf		920980	0					
ANR	921310	Identifier	permbuf		920980	0					
ANR	921311	ReturnType	void		920980	1					
ANR	921312	Identifier	IpVerify :: split_entry		920980	2					
ANR	921313	ParameterList	"const char * perm_entry , char * * host , char * * user"		920980	3					
ANR	921314	Parameter	const char * perm_entry	560:29:14657:14679	920980	0	True				
ANR	921315	ParameterType	const char *		920980	0					
ANR	921316	Identifier	perm_entry		920980	1					
ANR	921317	Parameter	char * * host	560:54:14682:14693	920980	1	True				
ANR	921318	ParameterType	char * *		920980	0					
ANR	921319	Identifier	host		920980	1					
ANR	921320	Parameter	char * * user	560:68:14696:14706	920980	2	True				
ANR	921321	ParameterType	char * *		920980	0					
ANR	921322	Identifier	user		920980	1					
ANR	921323	CFGEntryNode	ENTRY		920980		True				
ANR	921324	CFGExitNode	EXIT		920980		True				
ANR	921325	Symbol	* host		920980						
ANR	921326	Symbol	* permbuf		920980						
ANR	921327	Symbol	* user		920980						
ANR	921328	Symbol	D_SECURITY		920980						
ANR	921329	Symbol	slash1		920980						
ANR	921330	Symbol	strchr		920980						
ANR	921331	Symbol	perm_entry		920980						
ANR	921332	Symbol	slash0		920980						
ANR	921333	Symbol	* slash0 ++		920980						
ANR	921334	Symbol	permbuf		920980						
ANR	921335	Symbol	* perm_entry		920980						
ANR	921336	Symbol	netaddr . from_net_string		920980						
ANR	921337	Symbol	at		920980						
ANR	921338	Symbol	host		920980						
ANR	921339	Symbol	colon		920980						
ANR	921340	Symbol	netaddr		920980						
ANR	921341	Symbol	strdup		920980						
ANR	921342	Symbol	user		920980						
ANR	921343	Function	IpVerify :: reconfig	649:0:16884:16931							
ANR	921344	FunctionDef	IpVerify :: reconfig ()		921343	0					
ANR	921345	CompoundStatement		651:0:16910:16931	921343	0					
ANR	921346	ExpressionStatement	did_init = false	652:1:16913:16929	921343	0	True				
ANR	921347	AssignmentExpression	did_init = false		921343	0		=			
ANR	921348	Identifier	did_init		921343	0					
ANR	921349	Identifier	false		921343	1					
ANR	921350	ReturnType	void		921343	1					
ANR	921351	Identifier	IpVerify :: reconfig		921343	2					
ANR	921352	ParameterList			921343	3					
ANR	921353	CFGEntryNode	ENTRY		921343		True				
ANR	921354	CFGExitNode	EXIT		921343		True				
ANR	921355	Symbol	did_init		921343						
ANR	921356	Symbol	false		921343						
ANR	921357	Function	IpVerify :: refreshDNS	655:0:16934:17195							
ANR	921358	FunctionDef	IpVerify :: refreshDNS ()		921357	0					
ANR	921359	CompoundStatement		656:23:16962:17195	921357	0					
ANR	921360	ExpressionStatement	reconfig ( )	661:1:17183:17193	921357	0	True				
ANR	921361	CallExpression	reconfig ( )		921357	0					
ANR	921362	Callee	reconfig		921357	0					
ANR	921363	Identifier	reconfig		921357	0					
ANR	921364	ArgumentList			921357	1					
ANR	921365	ReturnType	void		921357	1					
ANR	921366	Identifier	IpVerify :: refreshDNS		921357	2					
ANR	921367	ParameterList			921357	3					
ANR	921368	CFGEntryNode	ENTRY		921357		True				
ANR	921369	CFGExitNode	EXIT		921357		True				
ANR	921370	Function	IpVerify :: Verify	664:0:17198:25709							
ANR	921371	FunctionDef	"IpVerify :: Verify (DCpermission perm , const condor_sockaddr & addr , const char * user , MyString * allow_reason , MyString * deny_reason)"		921370	0					
ANR	921372	CompoundStatement		666:0:17335:25709	921370	0					
ANR	921373	IdentifierDeclStatement	perm_mask_t mask ;	667:1:17338:17354	921370	0	True				
ANR	921374	IdentifierDecl	mask		921370	0					
ANR	921375	IdentifierDeclType	perm_mask_t		921370	0					
ANR	921376	Identifier	mask		921370	1					
ANR	921377	IdentifierDeclStatement	in6_addr sin6_addr ;	668:1:17357:17375	921370	1	True				
ANR	921378	IdentifierDecl	sin6_addr		921370	0					
ANR	921379	IdentifierDeclType	in6_addr		921370	0					
ANR	921380	Identifier	sin6_addr		921370	1					
ANR	921381	IdentifierDeclStatement	const char * thehost ;	669:1:17378:17397	921370	2	True				
ANR	921382	IdentifierDecl	* thehost		921370	0					
ANR	921383	IdentifierDeclType	const char *		921370	0					
ANR	921384	Identifier	thehost		921370	1					
ANR	921385	IdentifierDeclStatement	const char * who = user ;	670:4:17403:17426	921370	3	True				
ANR	921386	IdentifierDecl	* who = user		921370	0					
ANR	921387	IdentifierDeclType	const char *		921370	0					
ANR	921388	Identifier	who		921370	1					
ANR	921389	AssignmentExpression	* who = user		921370	2		=			
ANR	921390	Identifier	user		921370	0					
ANR	921391	Identifier	user		921370	1					
ANR	921392	IdentifierDeclStatement	MyString peer_description ;	671:1:17429:17454	921370	4	True				
ANR	921393	IdentifierDecl	peer_description		921370	0					
ANR	921394	IdentifierDeclType	MyString		921370	0					
ANR	921395	Identifier	peer_description		921370	1					
ANR	921396	IfStatement	if ( ! did_init )		921370	5					
ANR	921397	Condition	! did_init	673:5:17508:17516	921370	0	True				
ANR	921398	UnaryOperationExpression	! did_init		921370	0					
ANR	921399	UnaryOperator	!		921370	0					
ANR	921400	Identifier	did_init		921370	1					
ANR	921401	CompoundStatement		8:17:184:184	921370	1					
ANR	921402	ExpressionStatement	Init ( )	674:2:17524:17530	921370	0	True				
ANR	921403	CallExpression	Init ( )		921370	0					
ANR	921404	Callee	Init		921370	0					
ANR	921405	Identifier	Init		921370	0					
ANR	921406	ArgumentList			921370	1					
ANR	921407	SwitchStatement	switch ( perm )		921370	6					
ANR	921408	Condition	perm	682:10:17695:17698	921370	0	True				
ANR	921409	Identifier	perm		921370	0					
ANR	921410	CompoundStatement		17:17:366:366	921370	1					
ANR	921411	Label	case ALLOW :	684:1:17706:17716	921370	0	True				
ANR	921412	Identifier	ALLOW		921370	0					
ANR	921413	ReturnStatement	return USER_AUTH_SUCCESS ;	685:2:17720:17744	921370	1	True				
ANR	921414	Identifier	USER_AUTH_SUCCESS		921370	0					
ANR	921415	BreakStatement	break ;	686:2:17748:17753	921370	2	True				
ANR	921416	Label	default :	688:1:17757:17764	921370	3	True				
ANR	921417	Identifier	default		921370	0					
ANR	921418	BreakStatement	break ;	689:2:17768:17773	921370	4	True				
ANR	921419	ExpressionStatement	sin6_addr = addr . to_ipv6_address ( )	692:1:17780:17814	921370	7	True				
ANR	921420	AssignmentExpression	sin6_addr = addr . to_ipv6_address ( )		921370	0		=			
ANR	921421	Identifier	sin6_addr		921370	0					
ANR	921422	CallExpression	addr . to_ipv6_address ( )		921370	1					
ANR	921423	Callee	addr . to_ipv6_address		921370	0					
ANR	921424	MemberAccess	addr . to_ipv6_address		921370	0					
ANR	921425	Identifier	addr		921370	0					
ANR	921426	Identifier	to_ipv6_address		921370	1					
ANR	921427	ArgumentList			921370	1					
ANR	921428	ExpressionStatement	mask = 0	693:1:17817:17825	921370	8	True				
ANR	921429	AssignmentExpression	mask = 0		921370	0		=			
ANR	921430	Identifier	mask		921370	0					
ANR	921431	PrimaryExpression	0		921370	1					
ANR	921432	IfStatement	if ( who == NULL || * who == '\\0' )		921370	9					
ANR	921433	Condition	who == NULL || * who == '\\0'	695:8:17900:17926	921370	0	True				
ANR	921434	OrExpression	who == NULL || * who == '\\0'		921370	0		||			
ANR	921435	EqualityExpression	who == NULL		921370	0		==			
ANR	921436	Identifier	who		921370	0					
ANR	921437	Identifier	NULL		921370	1					
ANR	921438	EqualityExpression	* who == '\\0'		921370	1		==			
ANR	921439	UnaryOperationExpression	* who		921370	0					
ANR	921440	UnaryOperator	*		921370	0					
ANR	921441	Identifier	who		921370	1					
ANR	921442	PrimaryExpression	'\\0'		921370	1					
ANR	921443	CompoundStatement		30:37:593:593	921370	1					
ANR	921444	ExpressionStatement	who = TotallyWild	696:8:17939:17956	921370	0	True				
ANR	921445	AssignmentExpression	who = TotallyWild		921370	0		=			
ANR	921446	Identifier	who		921370	0					
ANR	921447	Identifier	TotallyWild		921370	1					
ANR	921448	IfStatement	if ( ! PermTypeArray [ perm ] )		921370	10					
ANR	921449	Condition	! PermTypeArray [ perm ]	699:6:17971:17990	921370	0	True				
ANR	921450	UnaryOperationExpression	! PermTypeArray [ perm ]		921370	0					
ANR	921451	UnaryOperator	!		921370	0					
ANR	921452	ArrayIndexing	PermTypeArray [ perm ]		921370	1					
ANR	921453	Identifier	PermTypeArray		921370	0					
ANR	921454	Identifier	perm		921370	1					
ANR	921455	CompoundStatement		34:29:658:658	921370	1					
ANR	921456	ExpressionStatement	"EXCEPT ( ""IpVerify::Verify: called with unknown permission %d\\n"" , perm )"	700:2:17998:18066	921370	0	True				
ANR	921457	CallExpression	"EXCEPT ( ""IpVerify::Verify: called with unknown permission %d\\n"" , perm )"		921370	0					
ANR	921458	Callee	EXCEPT		921370	0					
ANR	921459	Identifier	EXCEPT		921370	0					
ANR	921460	ArgumentList	"""IpVerify::Verify: called with unknown permission %d\\n"""		921370	1					
ANR	921461	Argument	"""IpVerify::Verify: called with unknown permission %d\\n"""		921370	0					
ANR	921462	PrimaryExpression	"""IpVerify::Verify: called with unknown permission %d\\n"""		921370	0					
ANR	921463	Argument	perm		921370	1					
ANR	921464	Identifier	perm		921370	0					
ANR	921465	IfStatement	if ( PunchedHoleArray [ perm ] != NULL )		921370	11					
ANR	921466	Condition	PunchedHoleArray [ perm ] != NULL	714:6:18608:18637	921370	0	True				
ANR	921467	EqualityExpression	PunchedHoleArray [ perm ] != NULL		921370	0		!=			
ANR	921468	ArrayIndexing	PunchedHoleArray [ perm ]		921370	0					
ANR	921469	Identifier	PunchedHoleArray		921370	0					
ANR	921470	Identifier	perm		921370	1					
ANR	921471	Identifier	NULL		921370	1					
ANR	921472	CompoundStatement		55:2:1485:1494	921370	1					
ANR	921473	IdentifierDeclStatement	HolePunchTable_t * hpt = PunchedHoleArray [ perm ] ;	715:2:18645:18691	921370	0	True				
ANR	921474	IdentifierDecl	* hpt = PunchedHoleArray [ perm ]		921370	0					
ANR	921475	IdentifierDeclType	HolePunchTable_t *		921370	0					
ANR	921476	Identifier	hpt		921370	1					
ANR	921477	AssignmentExpression	* hpt = PunchedHoleArray [ perm ]		921370	2		=			
ANR	921478	Identifier	hpt		921370	0					
ANR	921479	ArrayIndexing	PunchedHoleArray [ perm ]		921370	1					
ANR	921480	Identifier	PunchedHoleArray		921370	0					
ANR	921481	Identifier	perm		921370	1					
ANR	921482	IdentifierDeclStatement	MyString ip_str_buf = addr . to_ip_string ( ) ;	716:2:18695:18736	921370	1	True				
ANR	921483	IdentifierDecl	ip_str_buf = addr . to_ip_string ( )		921370	0					
ANR	921484	IdentifierDeclType	MyString		921370	0					
ANR	921485	Identifier	ip_str_buf		921370	1					
ANR	921486	AssignmentExpression	ip_str_buf = addr . to_ip_string ( )		921370	2		=			
ANR	921487	Identifier	ip_str_buf		921370	0					
ANR	921488	CallExpression	addr . to_ip_string ( )		921370	1					
ANR	921489	Callee	addr . to_ip_string		921370	0					
ANR	921490	MemberAccess	addr . to_ip_string		921370	0					
ANR	921491	Identifier	addr		921370	0					
ANR	921492	Identifier	to_ip_string		921370	1					
ANR	921493	ArgumentList			921370	1					
ANR	921494	IdentifierDeclStatement	const char * ip_str = ip_str_buf . Value ( ) ;	717:2:18740:18779	921370	2	True				
ANR	921495	IdentifierDecl	* ip_str = ip_str_buf . Value ( )		921370	0					
ANR	921496	IdentifierDeclType	const char *		921370	0					
ANR	921497	Identifier	ip_str		921370	1					
ANR	921498	AssignmentExpression	* ip_str = ip_str_buf . Value ( )		921370	2		=			
ANR	921499	Identifier	ip_str		921370	0					
ANR	921500	CallExpression	ip_str_buf . Value ( )		921370	1					
ANR	921501	Callee	ip_str_buf . Value		921370	0					
ANR	921502	MemberAccess	ip_str_buf . Value		921370	0					
ANR	921503	Identifier	ip_str_buf		921370	0					
ANR	921504	Identifier	Value		921370	1					
ANR	921505	ArgumentList			921370	1					
ANR	921506	IdentifierDeclStatement	MyString id_with_ip ;	718:2:18783:18802	921370	3	True				
ANR	921507	IdentifierDecl	id_with_ip		921370	0					
ANR	921508	IdentifierDeclType	MyString		921370	0					
ANR	921509	Identifier	id_with_ip		921370	1					
ANR	921510	IdentifierDeclStatement	MyString id ;	719:2:18806:18817	921370	4	True				
ANR	921511	IdentifierDecl	id		921370	0					
ANR	921512	IdentifierDeclType	MyString		921370	0					
ANR	921513	Identifier	id		921370	1					
ANR	921514	IdentifierDeclStatement	int count ;	720:2:18821:18830	921370	5	True				
ANR	921515	IdentifierDecl	count		921370	0					
ANR	921516	IdentifierDeclType	int		921370	0					
ANR	921517	Identifier	count		921370	1					
ANR	921518	IfStatement	if ( who != TotallyWild )		921370	6					
ANR	921519	Condition	who != TotallyWild	721:7:18839:18856	921370	0	True				
ANR	921520	EqualityExpression	who != TotallyWild		921370	0		!=			
ANR	921521	Identifier	who		921370	0					
ANR	921522	Identifier	TotallyWild		921370	1					
ANR	921523	CompoundStatement		56:28:1524:1524	921370	1					
ANR	921524	ExpressionStatement	"id_with_ip . sprintf ( ""%s/%s"" , who , ip_str )"	722:3:18865:18905	921370	0	True				
ANR	921525	CallExpression	"id_with_ip . sprintf ( ""%s/%s"" , who , ip_str )"		921370	0					
ANR	921526	Callee	id_with_ip . sprintf		921370	0					
ANR	921527	MemberAccess	id_with_ip . sprintf		921370	0					
ANR	921528	Identifier	id_with_ip		921370	0					
ANR	921529	Identifier	sprintf		921370	1					
ANR	921530	ArgumentList	"""%s/%s"""		921370	1					
ANR	921531	Argument	"""%s/%s"""		921370	0					
ANR	921532	PrimaryExpression	"""%s/%s"""		921370	0					
ANR	921533	Argument	who		921370	1					
ANR	921534	Identifier	who		921370	0					
ANR	921535	Argument	ip_str		921370	2					
ANR	921536	Identifier	ip_str		921370	0					
ANR	921537	ExpressionStatement	id = who	723:3:18910:18918	921370	1	True				
ANR	921538	AssignmentExpression	id = who		921370	0		=			
ANR	921539	Identifier	id		921370	0					
ANR	921540	Identifier	who		921370	1					
ANR	921541	IfStatement	"if ( hpt -> lookup ( id , count ) != - 1 )"		921370	2					
ANR	921542	Condition	"hpt -> lookup ( id , count ) != - 1"	724:8:18928:18955	921370	0	True				
ANR	921543	EqualityExpression	"hpt -> lookup ( id , count ) != - 1"		921370	0		!=			
ANR	921544	CallExpression	"hpt -> lookup ( id , count )"		921370	0					
ANR	921545	Callee	hpt -> lookup		921370	0					
ANR	921546	PtrMemberAccess	hpt -> lookup		921370	0					
ANR	921547	Identifier	hpt		921370	0					
ANR	921548	Identifier	lookup		921370	1					
ANR	921549	ArgumentList	id		921370	1					
ANR	921550	Argument	id		921370	0					
ANR	921551	Identifier	id		921370	0					
ANR	921552	Argument	count		921370	1					
ANR	921553	Identifier	count		921370	0					
ANR	921554	UnaryOperationExpression	- 1		921370	1					
ANR	921555	UnaryOperator	-		921370	0					
ANR	921556	PrimaryExpression	1		921370	1					
ANR	921557	CompoundStatement		59:39:1623:1623	921370	1					
ANR	921558	IfStatement	if ( allow_reason )		921370	0					
ANR	921559	Condition	allow_reason	725:8:18969:18980	921370	0	True				
ANR	921560	Identifier	allow_reason		921370	0					
ANR	921561	CompoundStatement		60:23:1648:1648	921370	1					
ANR	921562	ExpressionStatement	"allow_reason -> sprintf ( ""%s authorization has been made automatic for %s"" , PermString ( perm ) , id . Value ( ) )"	726:5:18991:19107	921370	0	True				
ANR	921563	CallExpression	"allow_reason -> sprintf ( ""%s authorization has been made automatic for %s"" , PermString ( perm ) , id . Value ( ) )"		921370	0					
ANR	921564	Callee	allow_reason -> sprintf		921370	0					
ANR	921565	PtrMemberAccess	allow_reason -> sprintf		921370	0					
ANR	921566	Identifier	allow_reason		921370	0					
ANR	921567	Identifier	sprintf		921370	1					
ANR	921568	ArgumentList	"""%s authorization has been made automatic for %s"""		921370	1					
ANR	921569	Argument	"""%s authorization has been made automatic for %s"""		921370	0					
ANR	921570	PrimaryExpression	"""%s authorization has been made automatic for %s"""		921370	0					
ANR	921571	Argument	PermString ( perm )		921370	1					
ANR	921572	CallExpression	PermString ( perm )		921370	0					
ANR	921573	Callee	PermString		921370	0					
ANR	921574	Identifier	PermString		921370	0					
ANR	921575	ArgumentList	perm		921370	1					
ANR	921576	Argument	perm		921370	0					
ANR	921577	Identifier	perm		921370	0					
ANR	921578	Argument	id . Value ( )		921370	2					
ANR	921579	CallExpression	id . Value ( )		921370	0					
ANR	921580	Callee	id . Value		921370	0					
ANR	921581	MemberAccess	id . Value		921370	0					
ANR	921582	Identifier	id		921370	0					
ANR	921583	Identifier	Value		921370	1					
ANR	921584	ArgumentList			921370	1					
ANR	921585	ReturnStatement	return USER_AUTH_SUCCESS ;	730:4:19119:19143	921370	1	True				
ANR	921586	Identifier	USER_AUTH_SUCCESS		921370	0					
ANR	921587	IfStatement	"if ( hpt -> lookup ( id_with_ip , count ) != - 1 )"		921370	3					
ANR	921588	Condition	"hpt -> lookup ( id_with_ip , count ) != - 1"	732:8:19158:19193	921370	0	True				
ANR	921589	EqualityExpression	"hpt -> lookup ( id_with_ip , count ) != - 1"		921370	0		!=			
ANR	921590	CallExpression	"hpt -> lookup ( id_with_ip , count )"		921370	0					
ANR	921591	Callee	hpt -> lookup		921370	0					
ANR	921592	PtrMemberAccess	hpt -> lookup		921370	0					
ANR	921593	Identifier	hpt		921370	0					
ANR	921594	Identifier	lookup		921370	1					
ANR	921595	ArgumentList	id_with_ip		921370	1					
ANR	921596	Argument	id_with_ip		921370	0					
ANR	921597	Identifier	id_with_ip		921370	0					
ANR	921598	Argument	count		921370	1					
ANR	921599	Identifier	count		921370	0					
ANR	921600	UnaryOperationExpression	- 1		921370	1					
ANR	921601	UnaryOperator	-		921370	0					
ANR	921602	PrimaryExpression	1		921370	1					
ANR	921603	CompoundStatement		67:47:1861:1861	921370	1					
ANR	921604	IfStatement	if ( allow_reason )		921370	0					
ANR	921605	Condition	allow_reason	733:8:19207:19218	921370	0	True				
ANR	921606	Identifier	allow_reason		921370	0					
ANR	921607	CompoundStatement		68:23:1886:1886	921370	1					
ANR	921608	ExpressionStatement	"allow_reason -> sprintf ( ""%s authorization has been made automatic for %s"" , PermString ( perm ) , id_with_ip . Value ( ) )"	734:5:19229:19353	921370	0	True				
ANR	921609	CallExpression	"allow_reason -> sprintf ( ""%s authorization has been made automatic for %s"" , PermString ( perm ) , id_with_ip . Value ( ) )"		921370	0					
ANR	921610	Callee	allow_reason -> sprintf		921370	0					
ANR	921611	PtrMemberAccess	allow_reason -> sprintf		921370	0					
ANR	921612	Identifier	allow_reason		921370	0					
ANR	921613	Identifier	sprintf		921370	1					
ANR	921614	ArgumentList	"""%s authorization has been made automatic for %s"""		921370	1					
ANR	921615	Argument	"""%s authorization has been made automatic for %s"""		921370	0					
ANR	921616	PrimaryExpression	"""%s authorization has been made automatic for %s"""		921370	0					
ANR	921617	Argument	PermString ( perm )		921370	1					
ANR	921618	CallExpression	PermString ( perm )		921370	0					
ANR	921619	Callee	PermString		921370	0					
ANR	921620	Identifier	PermString		921370	0					
ANR	921621	ArgumentList	perm		921370	1					
ANR	921622	Argument	perm		921370	0					
ANR	921623	Identifier	perm		921370	0					
ANR	921624	Argument	id_with_ip . Value ( )		921370	2					
ANR	921625	CallExpression	id_with_ip . Value ( )		921370	0					
ANR	921626	Callee	id_with_ip . Value		921370	0					
ANR	921627	MemberAccess	id_with_ip . Value		921370	0					
ANR	921628	Identifier	id_with_ip		921370	0					
ANR	921629	Identifier	Value		921370	1					
ANR	921630	ArgumentList			921370	1					
ANR	921631	ReturnStatement	return USER_AUTH_SUCCESS ;	738:4:19365:19389	921370	1	True				
ANR	921632	Identifier	USER_AUTH_SUCCESS		921370	0					
ANR	921633	ExpressionStatement	id = ip_str	741:2:19402:19413	921370	7	True				
ANR	921634	AssignmentExpression	id = ip_str		921370	0		=			
ANR	921635	Identifier	id		921370	0					
ANR	921636	Identifier	ip_str		921370	1					
ANR	921637	IfStatement	"if ( hpt -> lookup ( id , count ) != - 1 )"		921370	8					
ANR	921638	Condition	"hpt -> lookup ( id , count ) != - 1"	742:7:19422:19449	921370	0	True				
ANR	921639	EqualityExpression	"hpt -> lookup ( id , count ) != - 1"		921370	0		!=			
ANR	921640	CallExpression	"hpt -> lookup ( id , count )"		921370	0					
ANR	921641	Callee	hpt -> lookup		921370	0					
ANR	921642	PtrMemberAccess	hpt -> lookup		921370	0					
ANR	921643	Identifier	hpt		921370	0					
ANR	921644	Identifier	lookup		921370	1					
ANR	921645	ArgumentList	id		921370	1					
ANR	921646	Argument	id		921370	0					
ANR	921647	Identifier	id		921370	0					
ANR	921648	Argument	count		921370	1					
ANR	921649	Identifier	count		921370	0					
ANR	921650	UnaryOperationExpression	- 1		921370	1					
ANR	921651	UnaryOperator	-		921370	0					
ANR	921652	PrimaryExpression	1		921370	1					
ANR	921653	CompoundStatement		77:38:2117:2117	921370	1					
ANR	921654	IfStatement	if ( allow_reason )		921370	0					
ANR	921655	Condition	allow_reason	743:7:19462:19473	921370	0	True				
ANR	921656	Identifier	allow_reason		921370	0					
ANR	921657	CompoundStatement		78:22:2141:2141	921370	1					
ANR	921658	ExpressionStatement	"allow_reason -> sprintf ( ""%s authorization has been made automatic for %s"" , PermString ( perm ) , id . Value ( ) )"	744:4:19483:19597	921370	0	True				
ANR	921659	CallExpression	"allow_reason -> sprintf ( ""%s authorization has been made automatic for %s"" , PermString ( perm ) , id . Value ( ) )"		921370	0					
ANR	921660	Callee	allow_reason -> sprintf		921370	0					
ANR	921661	PtrMemberAccess	allow_reason -> sprintf		921370	0					
ANR	921662	Identifier	allow_reason		921370	0					
ANR	921663	Identifier	sprintf		921370	1					
ANR	921664	ArgumentList	"""%s authorization has been made automatic for %s"""		921370	1					
ANR	921665	Argument	"""%s authorization has been made automatic for %s"""		921370	0					
ANR	921666	PrimaryExpression	"""%s authorization has been made automatic for %s"""		921370	0					
ANR	921667	Argument	PermString ( perm )		921370	1					
ANR	921668	CallExpression	PermString ( perm )		921370	0					
ANR	921669	Callee	PermString		921370	0					
ANR	921670	Identifier	PermString		921370	0					
ANR	921671	ArgumentList	perm		921370	1					
ANR	921672	Argument	perm		921370	0					
ANR	921673	Identifier	perm		921370	0					
ANR	921674	Argument	id . Value ( )		921370	2					
ANR	921675	CallExpression	id . Value ( )		921370	0					
ANR	921676	Callee	id . Value		921370	0					
ANR	921677	MemberAccess	id . Value		921370	0					
ANR	921678	Identifier	id		921370	0					
ANR	921679	Identifier	Value		921370	1					
ANR	921680	ArgumentList			921370	1					
ANR	921681	ReturnStatement	return USER_AUTH_SUCCESS ;	748:3:19607:19631	921370	1	True				
ANR	921682	Identifier	USER_AUTH_SUCCESS		921370	0					
ANR	921683	IfStatement	if ( PermTypeArray [ perm ] -> behavior == USERVERIFY_ALLOW )		921370	12					
ANR	921684	Condition	PermTypeArray [ perm ] -> behavior == USERVERIFY_ALLOW	752:6:19647:19695	921370	0	True				
ANR	921685	EqualityExpression	PermTypeArray [ perm ] -> behavior == USERVERIFY_ALLOW		921370	0		==			
ANR	921686	PtrMemberAccess	PermTypeArray [ perm ] -> behavior		921370	0					
ANR	921687	ArrayIndexing	PermTypeArray [ perm ]		921370	0					
ANR	921688	Identifier	PermTypeArray		921370	0					
ANR	921689	Identifier	perm		921370	1					
ANR	921690	Identifier	behavior		921370	1					
ANR	921691	Identifier	USERVERIFY_ALLOW		921370	1					
ANR	921692	CompoundStatement		87:58:2363:2363	921370	1					
ANR	921693	IfStatement	if ( allow_reason )		921370	0					
ANR	921694	Condition	allow_reason	755:6:19782:19793	921370	0	True				
ANR	921695	Identifier	allow_reason		921370	0					
ANR	921696	CompoundStatement		90:21:2461:2461	921370	1					
ANR	921697	ExpressionStatement	"allow_reason -> sprintf ( ""%s authorization policy allows access by anyone"" , PermString ( perm ) )"	756:3:19802:19901	921370	0	True				
ANR	921698	CallExpression	"allow_reason -> sprintf ( ""%s authorization policy allows access by anyone"" , PermString ( perm ) )"		921370	0					
ANR	921699	Callee	allow_reason -> sprintf		921370	0					
ANR	921700	PtrMemberAccess	allow_reason -> sprintf		921370	0					
ANR	921701	Identifier	allow_reason		921370	0					
ANR	921702	Identifier	sprintf		921370	1					
ANR	921703	ArgumentList	"""%s authorization policy allows access by anyone"""		921370	1					
ANR	921704	Argument	"""%s authorization policy allows access by anyone"""		921370	0					
ANR	921705	PrimaryExpression	"""%s authorization policy allows access by anyone"""		921370	0					
ANR	921706	Argument	PermString ( perm )		921370	1					
ANR	921707	CallExpression	PermString ( perm )		921370	0					
ANR	921708	Callee	PermString		921370	0					
ANR	921709	Identifier	PermString		921370	0					
ANR	921710	ArgumentList	perm		921370	1					
ANR	921711	Argument	perm		921370	0					
ANR	921712	Identifier	perm		921370	0					
ANR	921713	ReturnStatement	return USER_AUTH_SUCCESS ;	760:2:19909:19933	921370	1	True				
ANR	921714	Identifier	USER_AUTH_SUCCESS		921370	0					
ANR	921715	IfStatement	if ( PermTypeArray [ perm ] -> behavior == USERVERIFY_DENY )		921370	13					
ANR	921716	Condition	PermTypeArray [ perm ] -> behavior == USERVERIFY_DENY	763:6:19947:19994	921370	0	True				
ANR	921717	EqualityExpression	PermTypeArray [ perm ] -> behavior == USERVERIFY_DENY		921370	0		==			
ANR	921718	PtrMemberAccess	PermTypeArray [ perm ] -> behavior		921370	0					
ANR	921719	ArrayIndexing	PermTypeArray [ perm ]		921370	0					
ANR	921720	Identifier	PermTypeArray		921370	0					
ANR	921721	Identifier	perm		921370	1					
ANR	921722	Identifier	behavior		921370	1					
ANR	921723	Identifier	USERVERIFY_DENY		921370	1					
ANR	921724	CompoundStatement		98:57:2662:2662	921370	1					
ANR	921725	IfStatement	if ( deny_reason )		921370	0					
ANR	921726	Condition	deny_reason	765:6:20017:20027	921370	0	True				
ANR	921727	Identifier	deny_reason		921370	0					
ANR	921728	CompoundStatement		100:20:2695:2695	921370	1					
ANR	921729	ExpressionStatement	"deny_reason -> sprintf ( ""%s authorization policy denies all access"" , PermString ( perm ) )"	766:3:20036:20128	921370	0	True				
ANR	921730	CallExpression	"deny_reason -> sprintf ( ""%s authorization policy denies all access"" , PermString ( perm ) )"		921370	0					
ANR	921731	Callee	deny_reason -> sprintf		921370	0					
ANR	921732	PtrMemberAccess	deny_reason -> sprintf		921370	0					
ANR	921733	Identifier	deny_reason		921370	0					
ANR	921734	Identifier	sprintf		921370	1					
ANR	921735	ArgumentList	"""%s authorization policy denies all access"""		921370	1					
ANR	921736	Argument	"""%s authorization policy denies all access"""		921370	0					
ANR	921737	PrimaryExpression	"""%s authorization policy denies all access"""		921370	0					
ANR	921738	Argument	PermString ( perm )		921370	1					
ANR	921739	CallExpression	PermString ( perm )		921370	0					
ANR	921740	Callee	PermString		921370	0					
ANR	921741	Identifier	PermString		921370	0					
ANR	921742	ArgumentList	perm		921370	1					
ANR	921743	Argument	perm		921370	0					
ANR	921744	Identifier	perm		921370	0					
ANR	921745	ReturnStatement	return USER_AUTH_FAILURE ;	770:2:20136:20160	921370	1	True				
ANR	921746	Identifier	USER_AUTH_FAILURE		921370	0					
ANR	921747	IfStatement	"if ( LookupCachedVerifyResult ( perm , sin6_addr , who , mask ) )"		921370	14					
ANR	921748	Condition	"LookupCachedVerifyResult ( perm , sin6_addr , who , mask )"	773:5:20173:20221	921370	0	True				
ANR	921749	CallExpression	"LookupCachedVerifyResult ( perm , sin6_addr , who , mask )"		921370	0					
ANR	921750	Callee	LookupCachedVerifyResult		921370	0					
ANR	921751	Identifier	LookupCachedVerifyResult		921370	0					
ANR	921752	ArgumentList	perm		921370	1					
ANR	921753	Argument	perm		921370	0					
ANR	921754	Identifier	perm		921370	0					
ANR	921755	Argument	sin6_addr		921370	1					
ANR	921756	Identifier	sin6_addr		921370	0					
ANR	921757	Argument	who		921370	2					
ANR	921758	Identifier	who		921370	0					
ANR	921759	Argument	mask		921370	3					
ANR	921760	Identifier	mask		921370	0					
ANR	921761	CompoundStatement		108:57:2889:2889	921370	1					
ANR	921762	IfStatement	if ( deny_reason && ( mask & deny_mask ( perm ) ) )		921370	0					
ANR	921763	Condition	deny_reason && ( mask & deny_mask ( perm ) )	774:6:20233:20269	921370	0	True				
ANR	921764	AndExpression	deny_reason && ( mask & deny_mask ( perm ) )		921370	0		&&			
ANR	921765	Identifier	deny_reason		921370	0					
ANR	921766	BitAndExpression	mask & deny_mask ( perm )		921370	1		&			
ANR	921767	Identifier	mask		921370	0					
ANR	921768	CallExpression	deny_mask ( perm )		921370	1					
ANR	921769	Callee	deny_mask		921370	0					
ANR	921770	Identifier	deny_mask		921370	0					
ANR	921771	ArgumentList	perm		921370	1					
ANR	921772	Argument	perm		921370	0					
ANR	921773	Identifier	perm		921370	0					
ANR	921774	CompoundStatement		109:46:2937:2937	921370	1					
ANR	921775	ExpressionStatement	"deny_reason -> sprintf ( ""cached result for %s; see first case for the full reason"" , PermString ( perm ) )"	775:3:20278:20385	921370	0	True				
ANR	921776	CallExpression	"deny_reason -> sprintf ( ""cached result for %s; see first case for the full reason"" , PermString ( perm ) )"		921370	0					
ANR	921777	Callee	deny_reason -> sprintf		921370	0					
ANR	921778	PtrMemberAccess	deny_reason -> sprintf		921370	0					
ANR	921779	Identifier	deny_reason		921370	0					
ANR	921780	Identifier	sprintf		921370	1					
ANR	921781	ArgumentList	"""cached result for %s; see first case for the full reason"""		921370	1					
ANR	921782	Argument	"""cached result for %s; see first case for the full reason"""		921370	0					
ANR	921783	PrimaryExpression	"""cached result for %s; see first case for the full reason"""		921370	0					
ANR	921784	Argument	PermString ( perm )		921370	1					
ANR	921785	CallExpression	PermString ( perm )		921370	0					
ANR	921786	Callee	PermString		921370	0					
ANR	921787	Identifier	PermString		921370	0					
ANR	921788	ArgumentList	perm		921370	1					
ANR	921789	Argument	perm		921370	0					
ANR	921790	Identifier	perm		921370	0					
ANR	921791	ElseStatement	else		921370	0					
ANR	921792	IfStatement	if ( allow_reason && ( mask & allow_mask ( perm ) ) )		921370	0					
ANR	921793	Condition	allow_reason && ( mask & allow_mask ( perm ) )	779:11:20402:20440	921370	0	True				
ANR	921794	AndExpression	allow_reason && ( mask & allow_mask ( perm ) )		921370	0		&&			
ANR	921795	Identifier	allow_reason		921370	0					
ANR	921796	BitAndExpression	mask & allow_mask ( perm )		921370	1		&			
ANR	921797	Identifier	mask		921370	0					
ANR	921798	CallExpression	allow_mask ( perm )		921370	1					
ANR	921799	Callee	allow_mask		921370	0					
ANR	921800	Identifier	allow_mask		921370	0					
ANR	921801	ArgumentList	perm		921370	1					
ANR	921802	Argument	perm		921370	0					
ANR	921803	Identifier	perm		921370	0					
ANR	921804	CompoundStatement		114:53:3108:3108	921370	1					
ANR	921805	ExpressionStatement	"allow_reason -> sprintf ( ""cached result for %s; see first case for the full reason"" , PermString ( perm ) )"	780:3:20449:20557	921370	0	True				
ANR	921806	CallExpression	"allow_reason -> sprintf ( ""cached result for %s; see first case for the full reason"" , PermString ( perm ) )"		921370	0					
ANR	921807	Callee	allow_reason -> sprintf		921370	0					
ANR	921808	PtrMemberAccess	allow_reason -> sprintf		921370	0					
ANR	921809	Identifier	allow_reason		921370	0					
ANR	921810	Identifier	sprintf		921370	1					
ANR	921811	ArgumentList	"""cached result for %s; see first case for the full reason"""		921370	1					
ANR	921812	Argument	"""cached result for %s; see first case for the full reason"""		921370	0					
ANR	921813	PrimaryExpression	"""cached result for %s; see first case for the full reason"""		921370	0					
ANR	921814	Argument	PermString ( perm )		921370	1					
ANR	921815	CallExpression	PermString ( perm )		921370	0					
ANR	921816	Callee	PermString		921370	0					
ANR	921817	Identifier	PermString		921370	0					
ANR	921818	ArgumentList	perm		921370	1					
ANR	921819	Argument	perm		921370	0					
ANR	921820	Identifier	perm		921370	0					
ANR	921821	ElseStatement	else		921370	0					
ANR	921822	CompoundStatement		191:2:5591:5624	921370	0					
ANR	921823	ExpressionStatement	mask = 0	786:2:20576:20584	921370	0	True				
ANR	921824	AssignmentExpression	mask = 0		921370	0		=			
ANR	921825	Identifier	mask		921370	0					
ANR	921826	PrimaryExpression	0		921370	1					
ANR	921827	IdentifierDeclStatement	perm_mask_t const deny_resolved = deny_mask ( perm ) ;	789:2:20654:20703	921370	1	True				
ANR	921828	IdentifierDecl	deny_resolved = deny_mask ( perm )		921370	0					
ANR	921829	IdentifierDeclType	perm_mask_t const		921370	0					
ANR	921830	Identifier	deny_resolved		921370	1					
ANR	921831	AssignmentExpression	deny_resolved = deny_mask ( perm )		921370	2		=			
ANR	921832	Identifier	deny_resolved		921370	0					
ANR	921833	CallExpression	deny_mask ( perm )		921370	1					
ANR	921834	Callee	deny_mask		921370	0					
ANR	921835	Identifier	deny_mask		921370	0					
ANR	921836	ArgumentList	perm		921370	1					
ANR	921837	Argument	perm		921370	0					
ANR	921838	Identifier	perm		921370	0					
ANR	921839	IdentifierDeclStatement	perm_mask_t const allow_resolved = allow_mask ( perm ) | deny_mask ( perm ) ;	792:2:20788:20855	921370	2	True				
ANR	921840	IdentifierDecl	allow_resolved = allow_mask ( perm ) | deny_mask ( perm )		921370	0					
ANR	921841	IdentifierDeclType	perm_mask_t const		921370	0					
ANR	921842	Identifier	allow_resolved		921370	1					
ANR	921843	AssignmentExpression	allow_resolved = allow_mask ( perm ) | deny_mask ( perm )		921370	2		=			
ANR	921844	Identifier	allow_resolved		921370	0					
ANR	921845	InclusiveOrExpression	allow_mask ( perm ) | deny_mask ( perm )		921370	1		|			
ANR	921846	CallExpression	allow_mask ( perm )		921370	0					
ANR	921847	Callee	allow_mask		921370	0					
ANR	921848	Identifier	allow_mask		921370	0					
ANR	921849	ArgumentList	perm		921370	1					
ANR	921850	Argument	perm		921370	0					
ANR	921851	Identifier	perm		921370	0					
ANR	921852	CallExpression	deny_mask ( perm )		921370	1					
ANR	921853	Callee	deny_mask		921370	0					
ANR	921854	Identifier	deny_mask		921370	0					
ANR	921855	ArgumentList	perm		921370	1					
ANR	921856	Argument	perm		921370	0					
ANR	921857	Identifier	perm		921370	0					
ANR	921858	Statement	char	795:2:20910:20913	921370	3	True				
ANR	921859	Statement	ipstr	795:7:20915:20919	921370	4	True				
ANR	921860	Statement	[	795:12:20920:20920	921370	5	True				
ANR	921861	Statement	INET6_ADDRSTRLEN	795:13:20921:20936	921370	6	True				
ANR	921862	Statement	]	795:29:20937:20937	921370	7	True				
ANR	921863	Statement	=	795:31:20939:20939	921370	8	True				
ANR	921864	CompoundStatement		130:33:3605:3605	921370	9					
ANR	921865	Statement	0	795:35:20943:20943	921370	0	True				
ANR	921866	Statement	","	795:36:20944:20944	921370	1	True				
ANR	921867	ExpressionStatement		795:39:20947:20947	921370	10	True				
ANR	921868	ExpressionStatement	"addr . to_ip_string ( ipstr , INET6_ADDRSTRLEN )"	796:5:20954:20996	921370	11	True				
ANR	921869	CallExpression	"addr . to_ip_string ( ipstr , INET6_ADDRSTRLEN )"		921370	0					
ANR	921870	Callee	addr . to_ip_string		921370	0					
ANR	921871	MemberAccess	addr . to_ip_string		921370	0					
ANR	921872	Identifier	addr		921370	0					
ANR	921873	Identifier	to_ip_string		921370	1					
ANR	921874	ArgumentList	ipstr		921370	1					
ANR	921875	Argument	ipstr		921370	0					
ANR	921876	Identifier	ipstr		921370	0					
ANR	921877	Argument	INET6_ADDRSTRLEN		921370	1					
ANR	921878	Identifier	INET6_ADDRSTRLEN		921370	0					
ANR	921879	ExpressionStatement	peer_description = addr . to_ip_string ( )	798:2:21001:21039	921370	12	True				
ANR	921880	AssignmentExpression	peer_description = addr . to_ip_string ( )		921370	0		=			
ANR	921881	Identifier	peer_description		921370	0					
ANR	921882	CallExpression	addr . to_ip_string ( )		921370	1					
ANR	921883	Callee	addr . to_ip_string		921370	0					
ANR	921884	MemberAccess	addr . to_ip_string		921370	0					
ANR	921885	Identifier	addr		921370	0					
ANR	921886	Identifier	to_ip_string		921370	1					
ANR	921887	ArgumentList			921370	1					
ANR	921888	IfStatement	"if ( ! ( mask & deny_resolved ) && lookup_user_ip_deny ( perm , who , ipstr ) )"		921370	13					
ANR	921889	Condition	"! ( mask & deny_resolved ) && lookup_user_ip_deny ( perm , who , ipstr )"	800:7:21049:21108	921370	0	True				
ANR	921890	AndExpression	"! ( mask & deny_resolved ) && lookup_user_ip_deny ( perm , who , ipstr )"		921370	0		&&			
ANR	921891	UnaryOperationExpression	! ( mask & deny_resolved )		921370	0					
ANR	921892	UnaryOperator	!		921370	0					
ANR	921893	BitAndExpression	mask & deny_resolved		921370	1		&			
ANR	921894	Identifier	mask		921370	0					
ANR	921895	Identifier	deny_resolved		921370	1					
ANR	921896	CallExpression	"lookup_user_ip_deny ( perm , who , ipstr )"		921370	1					
ANR	921897	Callee	lookup_user_ip_deny		921370	0					
ANR	921898	Identifier	lookup_user_ip_deny		921370	0					
ANR	921899	ArgumentList	perm		921370	1					
ANR	921900	Argument	perm		921370	0					
ANR	921901	Identifier	perm		921370	0					
ANR	921902	Argument	who		921370	1					
ANR	921903	Identifier	who		921370	0					
ANR	921904	Argument	ipstr		921370	2					
ANR	921905	Identifier	ipstr		921370	0					
ANR	921906	CompoundStatement		135:69:3775:3775	921370	1					
ANR	921907	ExpressionStatement	mask |= deny_mask ( perm )	801:3:21116:21139	921370	0	True				
ANR	921908	AssignmentExpression	mask |= deny_mask ( perm )		921370	0		|=			
ANR	921909	Identifier	mask		921370	0					
ANR	921910	CallExpression	deny_mask ( perm )		921370	1					
ANR	921911	Callee	deny_mask		921370	0					
ANR	921912	Identifier	deny_mask		921370	0					
ANR	921913	ArgumentList	perm		921370	1					
ANR	921914	Argument	perm		921370	0					
ANR	921915	Identifier	perm		921370	0					
ANR	921916	IfStatement	if ( deny_reason )		921370	1					
ANR	921917	Condition	deny_reason	802:7:21148:21158	921370	0	True				
ANR	921918	Identifier	deny_reason		921370	0					
ANR	921919	CompoundStatement		137:21:3826:3826	921370	1					
ANR	921920	ExpressionStatement	"deny_reason -> sprintf ( ""%s authorization policy denies IP address %s"" , PermString ( perm ) , addr . to_ip_string ( ) . Value ( ) )"	803:4:21168:21295	921370	0	True				
ANR	921921	CallExpression	"deny_reason -> sprintf ( ""%s authorization policy denies IP address %s"" , PermString ( perm ) , addr . to_ip_string ( ) . Value ( ) )"		921370	0					
ANR	921922	Callee	deny_reason -> sprintf		921370	0					
ANR	921923	PtrMemberAccess	deny_reason -> sprintf		921370	0					
ANR	921924	Identifier	deny_reason		921370	0					
ANR	921925	Identifier	sprintf		921370	1					
ANR	921926	ArgumentList	"""%s authorization policy denies IP address %s"""		921370	1					
ANR	921927	Argument	"""%s authorization policy denies IP address %s"""		921370	0					
ANR	921928	PrimaryExpression	"""%s authorization policy denies IP address %s"""		921370	0					
ANR	921929	Argument	PermString ( perm )		921370	1					
ANR	921930	CallExpression	PermString ( perm )		921370	0					
ANR	921931	Callee	PermString		921370	0					
ANR	921932	Identifier	PermString		921370	0					
ANR	921933	ArgumentList	perm		921370	1					
ANR	921934	Argument	perm		921370	0					
ANR	921935	Identifier	perm		921370	0					
ANR	921936	Argument	addr . to_ip_string ( ) . Value ( )		921370	2					
ANR	921937	CallExpression	addr . to_ip_string ( ) . Value ( )		921370	0					
ANR	921938	Callee	addr . to_ip_string ( ) . Value		921370	0					
ANR	921939	MemberAccess	addr . to_ip_string ( ) . Value		921370	0					
ANR	921940	CallExpression	addr . to_ip_string ( )		921370	0					
ANR	921941	Callee	addr . to_ip_string		921370	0					
ANR	921942	MemberAccess	addr . to_ip_string		921370	0					
ANR	921943	Identifier	addr		921370	0					
ANR	921944	Identifier	to_ip_string		921370	1					
ANR	921945	ArgumentList			921370	1					
ANR	921946	Identifier	Value		921370	1					
ANR	921947	ArgumentList			921370	1					
ANR	921948	IfStatement	"if ( ! ( mask & allow_resolved ) && lookup_user_ip_allow ( perm , who , ipstr ) )"		921370	14					
ANR	921949	Condition	"! ( mask & allow_resolved ) && lookup_user_ip_allow ( perm , who , ipstr )"	809:7:21314:21375	921370	0	True				
ANR	921950	AndExpression	"! ( mask & allow_resolved ) && lookup_user_ip_allow ( perm , who , ipstr )"		921370	0		&&			
ANR	921951	UnaryOperationExpression	! ( mask & allow_resolved )		921370	0					
ANR	921952	UnaryOperator	!		921370	0					
ANR	921953	BitAndExpression	mask & allow_resolved		921370	1		&			
ANR	921954	Identifier	mask		921370	0					
ANR	921955	Identifier	allow_resolved		921370	1					
ANR	921956	CallExpression	"lookup_user_ip_allow ( perm , who , ipstr )"		921370	1					
ANR	921957	Callee	lookup_user_ip_allow		921370	0					
ANR	921958	Identifier	lookup_user_ip_allow		921370	0					
ANR	921959	ArgumentList	perm		921370	1					
ANR	921960	Argument	perm		921370	0					
ANR	921961	Identifier	perm		921370	0					
ANR	921962	Argument	who		921370	1					
ANR	921963	Identifier	who		921370	0					
ANR	921964	Argument	ipstr		921370	2					
ANR	921965	Identifier	ipstr		921370	0					
ANR	921966	CompoundStatement		144:71:4042:4042	921370	1					
ANR	921967	ExpressionStatement	mask |= allow_mask ( perm )	810:3:21383:21407	921370	0	True				
ANR	921968	AssignmentExpression	mask |= allow_mask ( perm )		921370	0		|=			
ANR	921969	Identifier	mask		921370	0					
ANR	921970	CallExpression	allow_mask ( perm )		921370	1					
ANR	921971	Callee	allow_mask		921370	0					
ANR	921972	Identifier	allow_mask		921370	0					
ANR	921973	ArgumentList	perm		921370	1					
ANR	921974	Argument	perm		921370	0					
ANR	921975	Identifier	perm		921370	0					
ANR	921976	IfStatement	if ( allow_reason )		921370	1					
ANR	921977	Condition	allow_reason	811:7:21416:21427	921370	0	True				
ANR	921978	Identifier	allow_reason		921370	0					
ANR	921979	CompoundStatement		146:22:4095:4095	921370	1					
ANR	921980	ExpressionStatement	"allow_reason -> sprintf ( ""%s authorization policy allows IP address %s"" , PermString ( perm ) , addr . to_ip_string ( ) . Value ( ) )"	812:4:21437:21565	921370	0	True				
ANR	921981	CallExpression	"allow_reason -> sprintf ( ""%s authorization policy allows IP address %s"" , PermString ( perm ) , addr . to_ip_string ( ) . Value ( ) )"		921370	0					
ANR	921982	Callee	allow_reason -> sprintf		921370	0					
ANR	921983	PtrMemberAccess	allow_reason -> sprintf		921370	0					
ANR	921984	Identifier	allow_reason		921370	0					
ANR	921985	Identifier	sprintf		921370	1					
ANR	921986	ArgumentList	"""%s authorization policy allows IP address %s"""		921370	1					
ANR	921987	Argument	"""%s authorization policy allows IP address %s"""		921370	0					
ANR	921988	PrimaryExpression	"""%s authorization policy allows IP address %s"""		921370	0					
ANR	921989	Argument	PermString ( perm )		921370	1					
ANR	921990	CallExpression	PermString ( perm )		921370	0					
ANR	921991	Callee	PermString		921370	0					
ANR	921992	Identifier	PermString		921370	0					
ANR	921993	ArgumentList	perm		921370	1					
ANR	921994	Argument	perm		921370	0					
ANR	921995	Identifier	perm		921370	0					
ANR	921996	Argument	addr . to_ip_string ( ) . Value ( )		921370	2					
ANR	921997	CallExpression	addr . to_ip_string ( ) . Value ( )		921370	0					
ANR	921998	Callee	addr . to_ip_string ( ) . Value		921370	0					
ANR	921999	MemberAccess	addr . to_ip_string ( ) . Value		921370	0					
ANR	922000	CallExpression	addr . to_ip_string ( )		921370	0					
ANR	922001	Callee	addr . to_ip_string		921370	0					
ANR	922002	MemberAccess	addr . to_ip_string		921370	0					
ANR	922003	Identifier	addr		921370	0					
ANR	922004	Identifier	to_ip_string		921370	1					
ANR	922005	ArgumentList			921370	1					
ANR	922006	Identifier	Value		921370	1					
ANR	922007	ArgumentList			921370	1					
ANR	922008	IdentifierDeclStatement	std :: vector < MyString > hostnames ;	819:2:21580:21611	921370	15	True				
ANR	922009	IdentifierDecl	hostnames		921370	0					
ANR	922010	IdentifierDeclType	std :: vector < MyString >		921370	0					
ANR	922011	Identifier	hostnames		921370	1					
ANR	922012	IfStatement	if ( ! ( mask & allow_resolved ) || ! ( mask & deny_resolved ) )		921370	16					
ANR	922013	Condition	! ( mask & allow_resolved ) || ! ( mask & deny_resolved )	821:6:21658:21704	921370	0	True				
ANR	922014	OrExpression	! ( mask & allow_resolved ) || ! ( mask & deny_resolved )		921370	0		||			
ANR	922015	UnaryOperationExpression	! ( mask & allow_resolved )		921370	0					
ANR	922016	UnaryOperator	!		921370	0					
ANR	922017	BitAndExpression	mask & allow_resolved		921370	1		&			
ANR	922018	Identifier	mask		921370	0					
ANR	922019	Identifier	allow_resolved		921370	1					
ANR	922020	UnaryOperationExpression	! ( mask & deny_resolved )		921370	1					
ANR	922021	UnaryOperator	!		921370	0					
ANR	922022	BitAndExpression	mask & deny_resolved		921370	1		&			
ANR	922023	Identifier	mask		921370	0					
ANR	922024	Identifier	deny_resolved		921370	1					
ANR	922025	CompoundStatement		156:56:4372:4372	921370	1					
ANR	922026	ExpressionStatement	hostnames = get_hostname_with_alias ( addr )	822:3:21713:21754	921370	0	True				
ANR	922027	AssignmentExpression	hostnames = get_hostname_with_alias ( addr )		921370	0		=			
ANR	922028	Identifier	hostnames		921370	0					
ANR	922029	CallExpression	get_hostname_with_alias ( addr )		921370	1					
ANR	922030	Callee	get_hostname_with_alias		921370	0					
ANR	922031	Identifier	get_hostname_with_alias		921370	0					
ANR	922032	ArgumentList	addr		921370	1					
ANR	922033	Argument	addr		921370	0					
ANR	922034	Identifier	addr		921370	0					
ANR	922035	ForStatement	for ( unsigned int i = 0 ; i < hostnames . size ( ) ; ++ i )		921370	17					
ANR	922036	ForInit	unsigned int i = 0 ;	825:7:21768:21786	921370	0	True				
ANR	922037	IdentifierDeclStatement	unsigned int i = 0 ;		921370	0					
ANR	922038	IdentifierDecl	i = 0		921370	0					
ANR	922039	IdentifierDeclType	unsigned int		921370	0					
ANR	922040	Identifier	i		921370	1					
ANR	922041	AssignmentExpression	i = 0		921370	2		=			
ANR	922042	Identifier	i		921370	0					
ANR	922043	PrimaryExpression	0		921370	1					
ANR	922044	Condition	i < hostnames . size ( )	825:27:21788:21807	921370	1	True				
ANR	922045	RelationalExpression	i < hostnames . size ( )		921370	0		<			
ANR	922046	Identifier	i		921370	0					
ANR	922047	CallExpression	hostnames . size ( )		921370	1					
ANR	922048	Callee	hostnames . size		921370	0					
ANR	922049	MemberAccess	hostnames . size		921370	0					
ANR	922050	Identifier	hostnames		921370	0					
ANR	922051	Identifier	size		921370	1					
ANR	922052	ArgumentList			921370	1					
ANR	922053	UnaryExpression	++ i	825:49:21810:21812	921370	2	True				
ANR	922054	IncDec	++		921370	0					
ANR	922055	Identifier	i		921370	1					
ANR	922056	CompoundStatement		160:54:4479:4479	921370	3					
ANR	922057	ExpressionStatement	thehost = hostnames [ i ] . Value ( )	826:3:21820:21850	921370	0	True				
ANR	922058	AssignmentExpression	thehost = hostnames [ i ] . Value ( )		921370	0		=			
ANR	922059	Identifier	thehost		921370	0					
ANR	922060	CallExpression	hostnames [ i ] . Value ( )		921370	1					
ANR	922061	Callee	hostnames [ i ] . Value		921370	0					
ANR	922062	MemberAccess	hostnames [ i ] . Value		921370	0					
ANR	922063	ArrayIndexing	hostnames [ i ]		921370	0					
ANR	922064	Identifier	hostnames		921370	0					
ANR	922065	Identifier	i		921370	1					
ANR	922066	Identifier	Value		921370	1					
ANR	922067	ArgumentList			921370	1					
ANR	922068	ExpressionStatement	peer_description . append_to_list ( thehost )	827:3:21855:21895	921370	1	True				
ANR	922069	CallExpression	peer_description . append_to_list ( thehost )		921370	0					
ANR	922070	Callee	peer_description . append_to_list		921370	0					
ANR	922071	MemberAccess	peer_description . append_to_list		921370	0					
ANR	922072	Identifier	peer_description		921370	0					
ANR	922073	Identifier	append_to_list		921370	1					
ANR	922074	ArgumentList	thehost		921370	1					
ANR	922075	Argument	thehost		921370	0					
ANR	922076	Identifier	thehost		921370	0					
ANR	922077	IfStatement	"if ( ! ( mask & deny_resolved ) && lookup_user_host_deny ( perm , who , thehost ) )"		921370	2					
ANR	922078	Condition	"! ( mask & deny_resolved ) && lookup_user_host_deny ( perm , who , thehost )"	829:8:21906:21969	921370	0	True				
ANR	922079	AndExpression	"! ( mask & deny_resolved ) && lookup_user_host_deny ( perm , who , thehost )"		921370	0		&&			
ANR	922080	UnaryOperationExpression	! ( mask & deny_resolved )		921370	0					
ANR	922081	UnaryOperator	!		921370	0					
ANR	922082	BitAndExpression	mask & deny_resolved		921370	1		&			
ANR	922083	Identifier	mask		921370	0					
ANR	922084	Identifier	deny_resolved		921370	1					
ANR	922085	CallExpression	"lookup_user_host_deny ( perm , who , thehost )"		921370	1					
ANR	922086	Callee	lookup_user_host_deny		921370	0					
ANR	922087	Identifier	lookup_user_host_deny		921370	0					
ANR	922088	ArgumentList	perm		921370	1					
ANR	922089	Argument	perm		921370	0					
ANR	922090	Identifier	perm		921370	0					
ANR	922091	Argument	who		921370	1					
ANR	922092	Identifier	who		921370	0					
ANR	922093	Argument	thehost		921370	2					
ANR	922094	Identifier	thehost		921370	0					
ANR	922095	CompoundStatement		164:75:4637:4637	921370	1					
ANR	922096	ExpressionStatement	mask |= deny_mask ( perm )	830:4:21979:22002	921370	0	True				
ANR	922097	AssignmentExpression	mask |= deny_mask ( perm )		921370	0		|=			
ANR	922098	Identifier	mask		921370	0					
ANR	922099	CallExpression	deny_mask ( perm )		921370	1					
ANR	922100	Callee	deny_mask		921370	0					
ANR	922101	Identifier	deny_mask		921370	0					
ANR	922102	ArgumentList	perm		921370	1					
ANR	922103	Argument	perm		921370	0					
ANR	922104	Identifier	perm		921370	0					
ANR	922105	IfStatement	if ( deny_reason )		921370	1					
ANR	922106	Condition	deny_reason	831:8:22012:22022	921370	0	True				
ANR	922107	Identifier	deny_reason		921370	0					
ANR	922108	CompoundStatement		166:22:4690:4690	921370	1					
ANR	922109	ExpressionStatement	"deny_reason -> sprintf ( ""%s authorization policy denies hostname %s"" , PermString ( perm ) , thehost )"	832:5:22033:22140	921370	0	True				
ANR	922110	CallExpression	"deny_reason -> sprintf ( ""%s authorization policy denies hostname %s"" , PermString ( perm ) , thehost )"		921370	0					
ANR	922111	Callee	deny_reason -> sprintf		921370	0					
ANR	922112	PtrMemberAccess	deny_reason -> sprintf		921370	0					
ANR	922113	Identifier	deny_reason		921370	0					
ANR	922114	Identifier	sprintf		921370	1					
ANR	922115	ArgumentList	"""%s authorization policy denies hostname %s"""		921370	1					
ANR	922116	Argument	"""%s authorization policy denies hostname %s"""		921370	0					
ANR	922117	PrimaryExpression	"""%s authorization policy denies hostname %s"""		921370	0					
ANR	922118	Argument	PermString ( perm )		921370	1					
ANR	922119	CallExpression	PermString ( perm )		921370	0					
ANR	922120	Callee	PermString		921370	0					
ANR	922121	Identifier	PermString		921370	0					
ANR	922122	ArgumentList	perm		921370	1					
ANR	922123	Argument	perm		921370	0					
ANR	922124	Identifier	perm		921370	0					
ANR	922125	Argument	thehost		921370	2					
ANR	922126	Identifier	thehost		921370	0					
ANR	922127	IfStatement	"if ( ! ( mask & allow_resolved ) && lookup_user_host_allow ( perm , who , thehost ) )"		921370	3					
ANR	922128	Condition	"! ( mask & allow_resolved ) && lookup_user_host_allow ( perm , who , thehost )"	838:8:22162:22227	921370	0	True				
ANR	922129	AndExpression	"! ( mask & allow_resolved ) && lookup_user_host_allow ( perm , who , thehost )"		921370	0		&&			
ANR	922130	UnaryOperationExpression	! ( mask & allow_resolved )		921370	0					
ANR	922131	UnaryOperator	!		921370	0					
ANR	922132	BitAndExpression	mask & allow_resolved		921370	1		&			
ANR	922133	Identifier	mask		921370	0					
ANR	922134	Identifier	allow_resolved		921370	1					
ANR	922135	CallExpression	"lookup_user_host_allow ( perm , who , thehost )"		921370	1					
ANR	922136	Callee	lookup_user_host_allow		921370	0					
ANR	922137	Identifier	lookup_user_host_allow		921370	0					
ANR	922138	ArgumentList	perm		921370	1					
ANR	922139	Argument	perm		921370	0					
ANR	922140	Identifier	perm		921370	0					
ANR	922141	Argument	who		921370	1					
ANR	922142	Identifier	who		921370	0					
ANR	922143	Argument	thehost		921370	2					
ANR	922144	Identifier	thehost		921370	0					
ANR	922145	CompoundStatement		173:77:4895:4895	921370	1					
ANR	922146	ExpressionStatement	mask |= allow_mask ( perm )	839:4:22237:22261	921370	0	True				
ANR	922147	AssignmentExpression	mask |= allow_mask ( perm )		921370	0		|=			
ANR	922148	Identifier	mask		921370	0					
ANR	922149	CallExpression	allow_mask ( perm )		921370	1					
ANR	922150	Callee	allow_mask		921370	0					
ANR	922151	Identifier	allow_mask		921370	0					
ANR	922152	ArgumentList	perm		921370	1					
ANR	922153	Argument	perm		921370	0					
ANR	922154	Identifier	perm		921370	0					
ANR	922155	IfStatement	if ( allow_reason )		921370	1					
ANR	922156	Condition	allow_reason	840:8:22271:22282	921370	0	True				
ANR	922157	Identifier	allow_reason		921370	0					
ANR	922158	CompoundStatement		175:23:4950:4950	921370	1					
ANR	922159	ExpressionStatement	"allow_reason -> sprintf ( ""%s authorization policy allows hostname %s"" , PermString ( perm ) , thehost )"	841:5:22293:22401	921370	0	True				
ANR	922160	CallExpression	"allow_reason -> sprintf ( ""%s authorization policy allows hostname %s"" , PermString ( perm ) , thehost )"		921370	0					
ANR	922161	Callee	allow_reason -> sprintf		921370	0					
ANR	922162	PtrMemberAccess	allow_reason -> sprintf		921370	0					
ANR	922163	Identifier	allow_reason		921370	0					
ANR	922164	Identifier	sprintf		921370	1					
ANR	922165	ArgumentList	"""%s authorization policy allows hostname %s"""		921370	1					
ANR	922166	Argument	"""%s authorization policy allows hostname %s"""		921370	0					
ANR	922167	PrimaryExpression	"""%s authorization policy allows hostname %s"""		921370	0					
ANR	922168	Argument	PermString ( perm )		921370	1					
ANR	922169	CallExpression	PermString ( perm )		921370	0					
ANR	922170	Callee	PermString		921370	0					
ANR	922171	Identifier	PermString		921370	0					
ANR	922172	ArgumentList	perm		921370	1					
ANR	922173	Argument	perm		921370	0					
ANR	922174	Identifier	perm		921370	0					
ANR	922175	Argument	thehost		921370	2					
ANR	922176	Identifier	thehost		921370	0					
ANR	922177	IdentifierDeclStatement	bool determined_by_parent = false ;	856:2:22927:22960	921370	18	True				
ANR	922178	IdentifierDecl	determined_by_parent = false		921370	0					
ANR	922179	IdentifierDeclType	bool		921370	0					
ANR	922180	Identifier	determined_by_parent		921370	1					
ANR	922181	AssignmentExpression	determined_by_parent = false		921370	2		=			
ANR	922182	Identifier	false		921370	0					
ANR	922183	Identifier	false		921370	1					
ANR	922184	IfStatement	if ( mask == 0 )		921370	19					
ANR	922185	Condition	mask == 0	857:7:22969:22977	921370	0	True				
ANR	922186	EqualityExpression	mask == 0		921370	0		==			
ANR	922187	Identifier	mask		921370	0					
ANR	922188	PrimaryExpression	0		921370	1					
ANR	922189	CompoundStatement		192:19:5645:5645	921370	1					
ANR	922190	IfStatement	if ( PermTypeArray [ perm ] -> behavior == USERVERIFY_ONLY_DENIES )		921370	0					
ANR	922191	Condition	PermTypeArray [ perm ] -> behavior == USERVERIFY_ONLY_DENIES	858:8:22991:23045	921370	0	True				
ANR	922192	EqualityExpression	PermTypeArray [ perm ] -> behavior == USERVERIFY_ONLY_DENIES		921370	0		==			
ANR	922193	PtrMemberAccess	PermTypeArray [ perm ] -> behavior		921370	0					
ANR	922194	ArrayIndexing	PermTypeArray [ perm ]		921370	0					
ANR	922195	Identifier	PermTypeArray		921370	0					
ANR	922196	Identifier	perm		921370	1					
ANR	922197	Identifier	behavior		921370	1					
ANR	922198	Identifier	USERVERIFY_ONLY_DENIES		921370	1					
ANR	922199	CompoundStatement		193:66:5713:5713	921370	1					
ANR	922200	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: %s at %s not matched to deny list, so allowing.\\n"" , who , addr . to_sinful ( ) . Value ( ) )"	859:4:23055:23166	921370	0	True				
ANR	922201	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: %s at %s not matched to deny list, so allowing.\\n"" , who , addr . to_sinful ( ) . Value ( ) )"		921370	0					
ANR	922202	Callee	dprintf		921370	0					
ANR	922203	Identifier	dprintf		921370	0					
ANR	922204	ArgumentList	D_SECURITY		921370	1					
ANR	922205	Argument	D_SECURITY		921370	0					
ANR	922206	Identifier	D_SECURITY		921370	0					
ANR	922207	Argument	"""IPVERIFY: %s at %s not matched to deny list, so allowing.\\n"""		921370	1					
ANR	922208	PrimaryExpression	"""IPVERIFY: %s at %s not matched to deny list, so allowing.\\n"""		921370	0					
ANR	922209	Argument	who		921370	2					
ANR	922210	Identifier	who		921370	0					
ANR	922211	Argument	addr . to_sinful ( ) . Value ( )		921370	3					
ANR	922212	CallExpression	addr . to_sinful ( ) . Value ( )		921370	0					
ANR	922213	Callee	addr . to_sinful ( ) . Value		921370	0					
ANR	922214	MemberAccess	addr . to_sinful ( ) . Value		921370	0					
ANR	922215	CallExpression	addr . to_sinful ( )		921370	0					
ANR	922216	Callee	addr . to_sinful		921370	0					
ANR	922217	MemberAccess	addr . to_sinful		921370	0					
ANR	922218	Identifier	addr		921370	0					
ANR	922219	Identifier	to_sinful		921370	1					
ANR	922220	ArgumentList			921370	1					
ANR	922221	Identifier	Value		921370	1					
ANR	922222	ArgumentList			921370	1					
ANR	922223	IfStatement	if ( allow_reason )		921370	1					
ANR	922224	Condition	allow_reason	860:8:23176:23187	921370	0	True				
ANR	922225	Identifier	allow_reason		921370	0					
ANR	922226	CompoundStatement		195:23:5855:5855	921370	1					
ANR	922227	ExpressionStatement	"allow_reason -> sprintf ( ""%s authorization policy does not deny, so allowing"" , PermString ( perm ) )"	861:5:23198:23304	921370	0	True				
ANR	922228	CallExpression	"allow_reason -> sprintf ( ""%s authorization policy does not deny, so allowing"" , PermString ( perm ) )"		921370	0					
ANR	922229	Callee	allow_reason -> sprintf		921370	0					
ANR	922230	PtrMemberAccess	allow_reason -> sprintf		921370	0					
ANR	922231	Identifier	allow_reason		921370	0					
ANR	922232	Identifier	sprintf		921370	1					
ANR	922233	ArgumentList	"""%s authorization policy does not deny, so allowing"""		921370	1					
ANR	922234	Argument	"""%s authorization policy does not deny, so allowing"""		921370	0					
ANR	922235	PrimaryExpression	"""%s authorization policy does not deny, so allowing"""		921370	0					
ANR	922236	Argument	PermString ( perm )		921370	1					
ANR	922237	CallExpression	PermString ( perm )		921370	0					
ANR	922238	Callee	PermString		921370	0					
ANR	922239	Identifier	PermString		921370	0					
ANR	922240	ArgumentList	perm		921370	1					
ANR	922241	Argument	perm		921370	0					
ANR	922242	Identifier	perm		921370	0					
ANR	922243	ExpressionStatement	mask |= allow_mask ( perm )	866:4:23317:23341	921370	2	True				
ANR	922244	AssignmentExpression	mask |= allow_mask ( perm )		921370	0		|=			
ANR	922245	Identifier	mask		921370	0					
ANR	922246	CallExpression	allow_mask ( perm )		921370	1					
ANR	922247	Callee	allow_mask		921370	0					
ANR	922248	Identifier	allow_mask		921370	0					
ANR	922249	ArgumentList	perm		921370	1					
ANR	922250	Argument	perm		921370	0					
ANR	922251	Identifier	perm		921370	0					
ANR	922252	ElseStatement	else		921370	0					
ANR	922253	CompoundStatement		206:4:6154:6181	921370	0					
ANR	922254	IdentifierDeclStatement	DCpermissionHierarchy hierarchy ( perm ) ;	868:4:23359:23398	921370	0	True				
ANR	922255	IdentifierDecl	hierarchy ( perm )		921370	0					
ANR	922256	IdentifierDeclType	DCpermissionHierarchy		921370	0					
ANR	922257	Identifier	hierarchy		921370	1					
ANR	922258	Identifier	perm		921370	2					
ANR	922259	IdentifierDeclStatement	DCpermission const * parent_perms = hierarchy . getPermsIAmDirectlyImpliedBy ( ) ;	869:4:23404:23484	921370	1	True				
ANR	922260	IdentifierDecl	* parent_perms = hierarchy . getPermsIAmDirectlyImpliedBy ( )		921370	0					
ANR	922261	IdentifierDeclType	DCpermission const *		921370	0					
ANR	922262	Identifier	parent_perms		921370	1					
ANR	922263	AssignmentExpression	* parent_perms = hierarchy . getPermsIAmDirectlyImpliedBy ( )		921370	2		=			
ANR	922264	Identifier	parent_perms		921370	0					
ANR	922265	CallExpression	hierarchy . getPermsIAmDirectlyImpliedBy ( )		921370	1					
ANR	922266	Callee	hierarchy . getPermsIAmDirectlyImpliedBy		921370	0					
ANR	922267	MemberAccess	hierarchy . getPermsIAmDirectlyImpliedBy		921370	0					
ANR	922268	Identifier	hierarchy		921370	0					
ANR	922269	Identifier	getPermsIAmDirectlyImpliedBy		921370	1					
ANR	922270	ArgumentList			921370	1					
ANR	922271	IdentifierDeclStatement	bool parent_allowed = false ;	871:4:23490:23517	921370	2	True				
ANR	922272	IdentifierDecl	parent_allowed = false		921370	0					
ANR	922273	IdentifierDeclType	bool		921370	0					
ANR	922274	Identifier	parent_allowed		921370	1					
ANR	922275	AssignmentExpression	parent_allowed = false		921370	2		=			
ANR	922276	Identifier	false		921370	0					
ANR	922277	Identifier	false		921370	1					
ANR	922278	ForStatement	for ( ; * parent_perms != LAST_PERM ; parent_perms ++ )		921370	3					
ANR	922279	Condition	* parent_perms != LAST_PERM	872:11:23530:23555	921370	0	True				
ANR	922280	EqualityExpression	* parent_perms != LAST_PERM		921370	0		!=			
ANR	922281	UnaryOperationExpression	* parent_perms		921370	0					
ANR	922282	UnaryOperator	*		921370	0					
ANR	922283	Identifier	parent_perms		921370	1					
ANR	922284	Identifier	LAST_PERM		921370	1					
ANR	922285	PostIncDecOperationExpression	parent_perms ++	872:39:23558:23571	921370	1	True				
ANR	922286	Identifier	parent_perms		921370	0					
ANR	922287	IncDec	++		921370	1					
ANR	922288	CompoundStatement		207:56:6239:6239	921370	2					
ANR	922289	IfStatement	"if ( Verify ( * parent_perms , addr , user , allow_reason , NULL ) == USER_AUTH_SUCCESS )"		921370	0					
ANR	922290	Condition	"Verify ( * parent_perms , addr , user , allow_reason , NULL ) == USER_AUTH_SUCCESS"	873:9:23586:23661	921370	0	True				
ANR	922291	EqualityExpression	"Verify ( * parent_perms , addr , user , allow_reason , NULL ) == USER_AUTH_SUCCESS"		921370	0		==			
ANR	922292	CallExpression	"Verify ( * parent_perms , addr , user , allow_reason , NULL )"		921370	0					
ANR	922293	Callee	Verify		921370	0					
ANR	922294	Identifier	Verify		921370	0					
ANR	922295	ArgumentList	* parent_perms		921370	1					
ANR	922296	Argument	* parent_perms		921370	0					
ANR	922297	UnaryOperationExpression	* parent_perms		921370	0					
ANR	922298	UnaryOperator	*		921370	0					
ANR	922299	Identifier	parent_perms		921370	1					
ANR	922300	Argument	addr		921370	1					
ANR	922301	Identifier	addr		921370	0					
ANR	922302	Argument	user		921370	2					
ANR	922303	Identifier	user		921370	0					
ANR	922304	Argument	allow_reason		921370	3					
ANR	922305	Identifier	allow_reason		921370	0					
ANR	922306	Argument	NULL		921370	4					
ANR	922307	Identifier	NULL		921370	0					
ANR	922308	Identifier	USER_AUTH_SUCCESS		921370	1					
ANR	922309	CompoundStatement		208:88:6329:6329	921370	1					
ANR	922310	ExpressionStatement	determined_by_parent = true	874:6:23673:23700	921370	0	True				
ANR	922311	AssignmentExpression	determined_by_parent = true		921370	0		=			
ANR	922312	Identifier	determined_by_parent		921370	0					
ANR	922313	Identifier	true		921370	1					
ANR	922314	ExpressionStatement	parent_allowed = true	875:6:23708:23729	921370	1	True				
ANR	922315	AssignmentExpression	parent_allowed = true		921370	0		=			
ANR	922316	Identifier	parent_allowed		921370	0					
ANR	922317	Identifier	true		921370	1					
ANR	922318	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: allowing %s at %s for %s because %s is allowed\\n"" , who , addr . to_sinful ( ) . Value ( ) , PermString ( perm ) , PermString ( * parent_perms ) )"	876:6:23737:23890	921370	2	True				
ANR	922319	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: allowing %s at %s for %s because %s is allowed\\n"" , who , addr . to_sinful ( ) . Value ( ) , PermString ( perm ) , PermString ( * parent_perms ) )"		921370	0					
ANR	922320	Callee	dprintf		921370	0					
ANR	922321	Identifier	dprintf		921370	0					
ANR	922322	ArgumentList	D_SECURITY		921370	1					
ANR	922323	Argument	D_SECURITY		921370	0					
ANR	922324	Identifier	D_SECURITY		921370	0					
ANR	922325	Argument	"""IPVERIFY: allowing %s at %s for %s because %s is allowed\\n"""		921370	1					
ANR	922326	PrimaryExpression	"""IPVERIFY: allowing %s at %s for %s because %s is allowed\\n"""		921370	0					
ANR	922327	Argument	who		921370	2					
ANR	922328	Identifier	who		921370	0					
ANR	922329	Argument	addr . to_sinful ( ) . Value ( )		921370	3					
ANR	922330	CallExpression	addr . to_sinful ( ) . Value ( )		921370	0					
ANR	922331	Callee	addr . to_sinful ( ) . Value		921370	0					
ANR	922332	MemberAccess	addr . to_sinful ( ) . Value		921370	0					
ANR	922333	CallExpression	addr . to_sinful ( )		921370	0					
ANR	922334	Callee	addr . to_sinful		921370	0					
ANR	922335	MemberAccess	addr . to_sinful		921370	0					
ANR	922336	Identifier	addr		921370	0					
ANR	922337	Identifier	to_sinful		921370	1					
ANR	922338	ArgumentList			921370	1					
ANR	922339	Identifier	Value		921370	1					
ANR	922340	ArgumentList			921370	1					
ANR	922341	Argument	PermString ( perm )		921370	4					
ANR	922342	CallExpression	PermString ( perm )		921370	0					
ANR	922343	Callee	PermString		921370	0					
ANR	922344	Identifier	PermString		921370	0					
ANR	922345	ArgumentList	perm		921370	1					
ANR	922346	Argument	perm		921370	0					
ANR	922347	Identifier	perm		921370	0					
ANR	922348	Argument	PermString ( * parent_perms )		921370	5					
ANR	922349	CallExpression	PermString ( * parent_perms )		921370	0					
ANR	922350	Callee	PermString		921370	0					
ANR	922351	Identifier	PermString		921370	0					
ANR	922352	ArgumentList	* parent_perms		921370	1					
ANR	922353	Argument	* parent_perms		921370	0					
ANR	922354	UnaryOperationExpression	* parent_perms		921370	0					
ANR	922355	UnaryOperator	*		921370	0					
ANR	922356	Identifier	parent_perms		921370	1					
ANR	922357	IfStatement	if ( allow_reason )		921370	3					
ANR	922358	Condition	allow_reason	877:10:23902:23913	921370	0	True				
ANR	922359	Identifier	allow_reason		921370	0					
ANR	922360	CompoundStatement		213:7:6590:6618	921370	1					
ANR	922361	IdentifierDeclStatement	MyString tmp = * allow_reason ;	878:7:23926:23954	921370	0	True				
ANR	922362	IdentifierDecl	tmp = * allow_reason		921370	0					
ANR	922363	IdentifierDeclType	MyString		921370	0					
ANR	922364	Identifier	tmp		921370	1					
ANR	922365	AssignmentExpression	tmp = * allow_reason		921370	2		=			
ANR	922366	Identifier	tmp		921370	0					
ANR	922367	UnaryOperationExpression	* allow_reason		921370	1					
ANR	922368	UnaryOperator	*		921370	0					
ANR	922369	Identifier	allow_reason		921370	1					
ANR	922370	ExpressionStatement	"allow_reason -> sprintf ( ""%s is implied by %s; %s"" , PermString ( perm ) , PermString ( * parent_perms ) , tmp . Value ( ) )"	879:7:23963:24102	921370	1	True				
ANR	922371	CallExpression	"allow_reason -> sprintf ( ""%s is implied by %s; %s"" , PermString ( perm ) , PermString ( * parent_perms ) , tmp . Value ( ) )"		921370	0					
ANR	922372	Callee	allow_reason -> sprintf		921370	0					
ANR	922373	PtrMemberAccess	allow_reason -> sprintf		921370	0					
ANR	922374	Identifier	allow_reason		921370	0					
ANR	922375	Identifier	sprintf		921370	1					
ANR	922376	ArgumentList	"""%s is implied by %s; %s"""		921370	1					
ANR	922377	Argument	"""%s is implied by %s; %s"""		921370	0					
ANR	922378	PrimaryExpression	"""%s is implied by %s; %s"""		921370	0					
ANR	922379	Argument	PermString ( perm )		921370	1					
ANR	922380	CallExpression	PermString ( perm )		921370	0					
ANR	922381	Callee	PermString		921370	0					
ANR	922382	Identifier	PermString		921370	0					
ANR	922383	ArgumentList	perm		921370	1					
ANR	922384	Argument	perm		921370	0					
ANR	922385	Identifier	perm		921370	0					
ANR	922386	Argument	PermString ( * parent_perms )		921370	2					
ANR	922387	CallExpression	PermString ( * parent_perms )		921370	0					
ANR	922388	Callee	PermString		921370	0					
ANR	922389	Identifier	PermString		921370	0					
ANR	922390	ArgumentList	* parent_perms		921370	1					
ANR	922391	Argument	* parent_perms		921370	0					
ANR	922392	UnaryOperationExpression	* parent_perms		921370	0					
ANR	922393	UnaryOperator	*		921370	0					
ANR	922394	Identifier	parent_perms		921370	1					
ANR	922395	Argument	tmp . Value ( )		921370	3					
ANR	922396	CallExpression	tmp . Value ( )		921370	0					
ANR	922397	Callee	tmp . Value		921370	0					
ANR	922398	MemberAccess	tmp . Value		921370	0					
ANR	922399	Identifier	tmp		921370	0					
ANR	922400	Identifier	Value		921370	1					
ANR	922401	ArgumentList			921370	1					
ANR	922402	BreakStatement	break ;	885:6:24118:24123	921370	4	True				
ANR	922403	IfStatement	if ( parent_allowed )		921370	4					
ANR	922404	Condition	parent_allowed	888:8:24146:24159	921370	0	True				
ANR	922405	Identifier	parent_allowed		921370	0					
ANR	922406	CompoundStatement		223:25:6827:6827	921370	1					
ANR	922407	ExpressionStatement	mask |= allow_mask ( perm )	889:5:24170:24194	921370	0	True				
ANR	922408	AssignmentExpression	mask |= allow_mask ( perm )		921370	0		|=			
ANR	922409	Identifier	mask		921370	0					
ANR	922410	CallExpression	allow_mask ( perm )		921370	1					
ANR	922411	Callee	allow_mask		921370	0					
ANR	922412	Identifier	allow_mask		921370	0					
ANR	922413	ArgumentList	perm		921370	1					
ANR	922414	Argument	perm		921370	0					
ANR	922415	Identifier	perm		921370	0					
ANR	922416	ElseStatement	else		921370	0					
ANR	922417	CompoundStatement		226:9:6875:6875	921370	0					
ANR	922418	ExpressionStatement	mask |= deny_mask ( perm )	892:5:24218:24241	921370	0	True				
ANR	922419	AssignmentExpression	mask |= deny_mask ( perm )		921370	0		|=			
ANR	922420	Identifier	mask		921370	0					
ANR	922421	CallExpression	deny_mask ( perm )		921370	1					
ANR	922422	Callee	deny_mask		921370	0					
ANR	922423	Identifier	deny_mask		921370	0					
ANR	922424	ArgumentList	perm		921370	1					
ANR	922425	Argument	perm		921370	0					
ANR	922426	Identifier	perm		921370	0					
ANR	922427	IfStatement	if ( ! determined_by_parent && deny_reason )		921370	1					
ANR	922428	Condition	! determined_by_parent && deny_reason	894:9:24253:24288	921370	0	True				
ANR	922429	AndExpression	! determined_by_parent && deny_reason		921370	0		&&			
ANR	922430	UnaryOperationExpression	! determined_by_parent		921370	0					
ANR	922431	UnaryOperator	!		921370	0					
ANR	922432	Identifier	determined_by_parent		921370	1					
ANR	922433	Identifier	deny_reason		921370	1					
ANR	922434	CompoundStatement		229:48:6956:6956	921370	1					
ANR	922435	Statement	deny_reason	900:6:24557:24567	921370	0	True				
ANR	922436	Statement	->	900:17:24568:24569	921370	1	True				
ANR	922437	Statement	sprintf	900:19:24570:24576	921370	2	True				
ANR	922438	Statement	(	900:26:24577:24577	921370	3	True				
ANR	922439	Statement	"""%s authorization policy contains no matching """	901:7:24586:24632	921370	4	True				
ANR	922440	Statement	"""ALLOW entry for this request"""	902:7:24641:24670	921370	5	True				
ANR	922441	Statement	"""; identifiers used for this host: %s, hostname size = %lu, """	903:7:24679:24739	921370	6	True				
ANR	922442	Statement	"""original ip address = %s"""	904:7:24748:24773	921370	7	True				
ANR	922443	Statement	","	904:33:24774:24774	921370	8	True				
ANR	922444	Statement	PermString	905:7:24783:24792	921370	9	True				
ANR	922445	Statement	(	905:17:24793:24793	921370	10	True				
ANR	922446	Statement	perm	905:18:24794:24797	921370	11	True				
ANR	922447	Statement	)	905:22:24798:24798	921370	12	True				
ANR	922448	Statement	","	905:23:24799:24799	921370	13	True				
ANR	922449	Statement	peer_description	906:7:24808:24823	921370	14	True				
ANR	922450	Statement	.	906:23:24824:24824	921370	15	True				
ANR	922451	Statement	Value	906:24:24825:24829	921370	16	True				
ANR	922452	Statement	(	906:29:24830:24830	921370	17	True				
ANR	922453	Statement	)	906:30:24831:24831	921370	18	True				
ANR	922454	Statement	","	906:31:24832:24832	921370	19	True				
ANR	922455	Statement	hostnames	907:7:24841:24849	921370	20	True				
ANR	922456	Statement	.	907:16:24850:24850	921370	21	True				
ANR	922457	Statement	size	907:17:24851:24854	921370	22	True				
ANR	922458	Statement	(	907:21:24855:24855	921370	23	True				
ANR	922459	Statement	)	907:22:24856:24856	921370	24	True				
ANR	922460	Statement	","	907:23:24857:24857	921370	25	True				
ANR	922461	Statement	ipstr	908:7:24866:24870	921370	26	True				
ANR	922462	Statement	)	908:12:24871:24871	921370	27	True				
ANR	922463	ExpressionStatement		908:13:24872:24872	921370	28	True				
ANR	922464	IfStatement	if ( ! determined_by_parent && ( mask & allow_mask ( perm ) ) )		921370	20					
ANR	922465	Condition	! determined_by_parent && ( mask & allow_mask ( perm ) )	914:6:24903:24950	921370	0	True				
ANR	922466	AndExpression	! determined_by_parent && ( mask & allow_mask ( perm ) )		921370	0		&&			
ANR	922467	UnaryOperationExpression	! determined_by_parent		921370	0					
ANR	922468	UnaryOperator	!		921370	0					
ANR	922469	Identifier	determined_by_parent		921370	1					
ANR	922470	BitAndExpression	mask & allow_mask ( perm )		921370	1		&			
ANR	922471	Identifier	mask		921370	0					
ANR	922472	CallExpression	allow_mask ( perm )		921370	1					
ANR	922473	Callee	allow_mask		921370	0					
ANR	922474	Identifier	allow_mask		921370	0					
ANR	922475	ArgumentList	perm		921370	1					
ANR	922476	Argument	perm		921370	0					
ANR	922477	Identifier	perm		921370	0					
ANR	922478	CompoundStatement		249:57:7618:7618	921370	1					
ANR	922479	IfStatement	if ( allow_reason && ! peer_description . IsEmpty ( ) )		921370	0					
ANR	922480	Condition	allow_reason && ! peer_description . IsEmpty ( )	919:7:25164:25206	921370	0	True				
ANR	922481	AndExpression	allow_reason && ! peer_description . IsEmpty ( )		921370	0		&&			
ANR	922482	Identifier	allow_reason		921370	0					
ANR	922483	UnaryOperationExpression	! peer_description . IsEmpty ( )		921370	1					
ANR	922484	UnaryOperator	!		921370	0					
ANR	922485	CallExpression	peer_description . IsEmpty ( )		921370	1					
ANR	922486	Callee	peer_description . IsEmpty		921370	0					
ANR	922487	MemberAccess	peer_description . IsEmpty		921370	0					
ANR	922488	Identifier	peer_description		921370	0					
ANR	922489	Identifier	IsEmpty		921370	1					
ANR	922490	ArgumentList			921370	1					
ANR	922491	CompoundStatement		254:53:7874:7874	921370	1					
ANR	922492	ExpressionStatement	"allow_reason -> sprintf_cat ( ""; identifiers used for this remote host: %s"" , peer_description . Value ( ) )"	920:4:25216:25325	921370	0	True				
ANR	922493	CallExpression	"allow_reason -> sprintf_cat ( ""; identifiers used for this remote host: %s"" , peer_description . Value ( ) )"		921370	0					
ANR	922494	Callee	allow_reason -> sprintf_cat		921370	0					
ANR	922495	PtrMemberAccess	allow_reason -> sprintf_cat		921370	0					
ANR	922496	Identifier	allow_reason		921370	0					
ANR	922497	Identifier	sprintf_cat		921370	1					
ANR	922498	ArgumentList	"""; identifiers used for this remote host: %s"""		921370	1					
ANR	922499	Argument	"""; identifiers used for this remote host: %s"""		921370	0					
ANR	922500	PrimaryExpression	"""; identifiers used for this remote host: %s"""		921370	0					
ANR	922501	Argument	peer_description . Value ( )		921370	1					
ANR	922502	CallExpression	peer_description . Value ( )		921370	0					
ANR	922503	Callee	peer_description . Value		921370	0					
ANR	922504	MemberAccess	peer_description . Value		921370	0					
ANR	922505	Identifier	peer_description		921370	0					
ANR	922506	Identifier	Value		921370	1					
ANR	922507	ArgumentList			921370	1					
ANR	922508	ExpressionStatement	"add_hash_entry ( sin6_addr , who , mask )"	927:3:25413:25449	921370	21	True				
ANR	922509	CallExpression	"add_hash_entry ( sin6_addr , who , mask )"		921370	0					
ANR	922510	Callee	add_hash_entry		921370	0					
ANR	922511	Identifier	add_hash_entry		921370	0					
ANR	922512	ArgumentList	sin6_addr		921370	1					
ANR	922513	Argument	sin6_addr		921370	0					
ANR	922514	Identifier	sin6_addr		921370	0					
ANR	922515	Argument	who		921370	1					
ANR	922516	Identifier	who		921370	0					
ANR	922517	Argument	mask		921370	2					
ANR	922518	Identifier	mask		921370	0					
ANR	922519	IfStatement	if ( mask & deny_mask ( perm ) )		921370	15					
ANR	922520	Condition	mask & deny_mask ( perm )	931:6:25557:25578	921370	0	True				
ANR	922521	BitAndExpression	mask & deny_mask ( perm )		921370	0		&			
ANR	922522	Identifier	mask		921370	0					
ANR	922523	CallExpression	deny_mask ( perm )		921370	1					
ANR	922524	Callee	deny_mask		921370	0					
ANR	922525	Identifier	deny_mask		921370	0					
ANR	922526	ArgumentList	perm		921370	1					
ANR	922527	Argument	perm		921370	0					
ANR	922528	Identifier	perm		921370	0					
ANR	922529	CompoundStatement		266:31:8246:8246	921370	1					
ANR	922530	ReturnStatement	return USER_AUTH_FAILURE ;	932:2:25586:25610	921370	0	True				
ANR	922531	Identifier	USER_AUTH_FAILURE		921370	0					
ANR	922532	IfStatement	if ( mask & allow_mask ( perm ) )		921370	16					
ANR	922533	Condition	mask & allow_mask ( perm )	935:6:25622:25644	921370	0	True				
ANR	922534	BitAndExpression	mask & allow_mask ( perm )		921370	0		&			
ANR	922535	Identifier	mask		921370	0					
ANR	922536	CallExpression	allow_mask ( perm )		921370	1					
ANR	922537	Callee	allow_mask		921370	0					
ANR	922538	Identifier	allow_mask		921370	0					
ANR	922539	ArgumentList	perm		921370	1					
ANR	922540	Argument	perm		921370	0					
ANR	922541	Identifier	perm		921370	0					
ANR	922542	CompoundStatement		270:32:8312:8312	921370	1					
ANR	922543	ReturnStatement	return USER_AUTH_SUCCESS ;	936:2:25652:25676	921370	0	True				
ANR	922544	Identifier	USER_AUTH_SUCCESS		921370	0					
ANR	922545	ReturnStatement	return USER_AUTH_FAILURE ;	939:1:25683:25707	921370	17	True				
ANR	922546	Identifier	USER_AUTH_FAILURE		921370	0					
ANR	922547	ReturnType	int		921370	1					
ANR	922548	Identifier	IpVerify :: Verify		921370	2					
ANR	922549	ParameterList	"DCpermission perm , const condor_sockaddr & addr , const char * user , MyString * allow_reason , MyString * deny_reason"		921370	3					
ANR	922550	Parameter	DCpermission perm	665:18:17220:17236	921370	0	True				
ANR	922551	ParameterType	DCpermission		921370	0					
ANR	922552	Identifier	perm		921370	1					
ANR	922553	Parameter	const condor_sockaddr & addr	665:37:17239:17265	921370	1	True				
ANR	922554	ParameterType	const condor_sockaddr &		921370	0					
ANR	922555	Identifier	addr		921370	1					
ANR	922556	Parameter	const char * user	665:66:17268:17284	921370	2	True				
ANR	922557	ParameterType	const char *		921370	0					
ANR	922558	Identifier	user		921370	1					
ANR	922559	Parameter	MyString * allow_reason	665:85:17287:17308	921370	3	True				
ANR	922560	ParameterType	MyString *		921370	0					
ANR	922561	Identifier	allow_reason		921370	1					
ANR	922562	Parameter	MyString * deny_reason	665:109:17311:17331	921370	4	True				
ANR	922563	ParameterType	MyString *		921370	0					
ANR	922564	Identifier	deny_reason		921370	1					
ANR	922565	CFGEntryNode	ENTRY		921370		True				
ANR	922566	CFGExitNode	EXIT		921370		True				
ANR	922567	Symbol	* perm		921370						
ANR	922568	Symbol	* PermTypeArray		921370						
ANR	922569	Symbol	* parent_perms		921370						
ANR	922570	Symbol	* * perm		921370						
ANR	922571	Symbol	deny_resolved		921370						
ANR	922572	Symbol	tmp . Value		921370						
ANR	922573	Symbol	ip_str_buf . Value		921370						
ANR	922574	Symbol	deny_reason		921370						
ANR	922575	Symbol	USERVERIFY_DENY		921370						
ANR	922576	Symbol	thehost		921370						
ANR	922577	Symbol	id_with_ip . Value		921370						
ANR	922578	Symbol	* * PermTypeArray		921370						
ANR	922579	Symbol	tmp		921370						
ANR	922580	Symbol	* hostnames		921370						
ANR	922581	Symbol	id		921370						
ANR	922582	Symbol	Verify		921370						
ANR	922583	Symbol	ip_str		921370						
ANR	922584	Symbol	hostnames [ i ] . Value		921370						
ANR	922585	Symbol	hpt -> lookup		921370						
ANR	922586	Symbol	LAST_PERM		921370						
ANR	922587	Symbol	allow_mask		921370						
ANR	922588	Symbol	NULL		921370						
ANR	922589	Symbol	did_init		921370						
ANR	922590	Symbol	sin6_addr		921370						
ANR	922591	Symbol	hierarchy		921370						
ANR	922592	Symbol	* who		921370						
ANR	922593	Symbol	count		921370						
ANR	922594	Symbol	* allow_reason		921370						
ANR	922595	Symbol	* hpt		921370						
ANR	922596	Symbol	hostnames		921370						
ANR	922597	Symbol	id_with_ip		921370						
ANR	922598	Symbol	addr . to_ip_string ( ) . Value		921370						
ANR	922599	Symbol	allow_reason		921370						
ANR	922600	Symbol	USERVERIFY_ALLOW		921370						
ANR	922601	Symbol	parent_perms		921370						
ANR	922602	Symbol	USER_AUTH_SUCCESS		921370						
ANR	922603	Symbol	allow_resolved		921370						
ANR	922604	Symbol	true		921370						
ANR	922605	Symbol	* PunchedHoleArray		921370						
ANR	922606	Symbol	id . Value		921370						
ANR	922607	Symbol	lookup_user_host_deny		921370						
ANR	922608	Symbol	PermString		921370						
ANR	922609	Symbol	ip_str_buf		921370						
ANR	922610	Symbol	lookup_user_ip_allow		921370						
ANR	922611	Symbol	USER_AUTH_FAILURE		921370						
ANR	922612	Symbol	hostnames . size		921370						
ANR	922613	Symbol	USERVERIFY_ONLY_DENIES		921370						
ANR	922614	Symbol	who		921370						
ANR	922615	Symbol	parent_allowed		921370						
ANR	922616	Symbol	peer_description		921370						
ANR	922617	Symbol	lookup_user_ip_deny		921370						
ANR	922618	Symbol	perm		921370						
ANR	922619	Symbol	addr . to_sinful ( ) . Value		921370						
ANR	922620	Symbol	D_SECURITY		921370						
ANR	922621	Symbol	peer_description . Value		921370						
ANR	922622	Symbol	lookup_user_host_allow		921370						
ANR	922623	Symbol	get_hostname_with_alias		921370						
ANR	922624	Symbol	ipstr		921370						
ANR	922625	Symbol	deny_mask		921370						
ANR	922626	Symbol	determined_by_parent		921370						
ANR	922627	Symbol	addr		921370						
ANR	922628	Symbol	PunchedHoleArray		921370						
ANR	922629	Symbol	hierarchy . getPermsIAmDirectlyImpliedBy		921370						
ANR	922630	Symbol	mask		921370						
ANR	922631	Symbol	addr . to_ip_string		921370						
ANR	922632	Symbol	LookupCachedVerifyResult		921370						
ANR	922633	Symbol	false		921370						
ANR	922634	Symbol	i		921370						
ANR	922635	Symbol	PermTypeArray		921370						
ANR	922636	Symbol	INET6_ADDRSTRLEN		921370						
ANR	922637	Symbol	addr . to_ipv6_address		921370						
ANR	922638	Symbol	hpt		921370						
ANR	922639	Symbol	TotallyWild		921370						
ANR	922640	Symbol	PermTypeArray [ perm ] -> behavior		921370						
ANR	922641	Symbol	* i		921370						
ANR	922642	Symbol	addr . to_sinful		921370						
ANR	922643	Symbol	peer_description . IsEmpty		921370						
ANR	922644	Symbol	user		921370						
ANR	922645	Function	IpVerify :: lookup_user_ip_allow	942:0:25712:25938							
ANR	922646	FunctionDef	"IpVerify :: lookup_user_ip_allow (DCpermission perm , char const * user , char const * ip)"		922645	0					
ANR	922647	CompoundStatement		944:0:25801:25938	922645	0					
ANR	922648	IdentifierDeclStatement	PermTypeEntry * permentry = PermTypeArray [ perm ] ;	945:1:25804:25850	922645	0	True				
ANR	922649	IdentifierDecl	* permentry = PermTypeArray [ perm ]		922645	0					
ANR	922650	IdentifierDeclType	PermTypeEntry *		922645	0					
ANR	922651	Identifier	permentry		922645	1					
ANR	922652	AssignmentExpression	* permentry = PermTypeArray [ perm ]		922645	2		=			
ANR	922653	Identifier	permentry		922645	0					
ANR	922654	ArrayIndexing	PermTypeArray [ perm ]		922645	1					
ANR	922655	Identifier	PermTypeArray		922645	0					
ANR	922656	Identifier	perm		922645	1					
ANR	922657	ReturnStatement	"return lookup_user ( permentry -> allow_hosts , permentry -> allow_users , user , ip , NULL , true ) ;"	946:1:25853:25936	922645	1	True				
ANR	922658	CallExpression	"lookup_user ( permentry -> allow_hosts , permentry -> allow_users , user , ip , NULL , true )"		922645	0					
ANR	922659	Callee	lookup_user		922645	0					
ANR	922660	Identifier	lookup_user		922645	0					
ANR	922661	ArgumentList	permentry -> allow_hosts		922645	1					
ANR	922662	Argument	permentry -> allow_hosts		922645	0					
ANR	922663	PtrMemberAccess	permentry -> allow_hosts		922645	0					
ANR	922664	Identifier	permentry		922645	0					
ANR	922665	Identifier	allow_hosts		922645	1					
ANR	922666	Argument	permentry -> allow_users		922645	1					
ANR	922667	PtrMemberAccess	permentry -> allow_users		922645	0					
ANR	922668	Identifier	permentry		922645	0					
ANR	922669	Identifier	allow_users		922645	1					
ANR	922670	Argument	user		922645	2					
ANR	922671	Identifier	user		922645	0					
ANR	922672	Argument	ip		922645	3					
ANR	922673	Identifier	ip		922645	0					
ANR	922674	Argument	NULL		922645	4					
ANR	922675	Identifier	NULL		922645	0					
ANR	922676	Argument	true		922645	5					
ANR	922677	Identifier	true		922645	0					
ANR	922678	ReturnType	bool		922645	1					
ANR	922679	Identifier	IpVerify :: lookup_user_ip_allow		922645	2					
ANR	922680	ParameterList	"DCpermission perm , char const * user , char const * ip"		922645	3					
ANR	922681	Parameter	DCpermission perm	943:31:25748:25764	922645	0	True				
ANR	922682	ParameterType	DCpermission		922645	0					
ANR	922683	Identifier	perm		922645	1					
ANR	922684	Parameter	char const * user	943:50:25767:25782	922645	1	True				
ANR	922685	ParameterType	char const *		922645	0					
ANR	922686	Identifier	user		922645	1					
ANR	922687	Parameter	char const * ip	943:68:25785:25798	922645	2	True				
ANR	922688	ParameterType	char const *		922645	0					
ANR	922689	Identifier	ip		922645	1					
ANR	922690	CFGEntryNode	ENTRY		922645		True				
ANR	922691	CFGExitNode	EXIT		922645		True				
ANR	922692	Symbol	NULL		922645						
ANR	922693	Symbol	perm		922645						
ANR	922694	Symbol	* perm		922645						
ANR	922695	Symbol	* PermTypeArray		922645						
ANR	922696	Symbol	ip		922645						
ANR	922697	Symbol	* permentry		922645						
ANR	922698	Symbol	PermTypeArray		922645						
ANR	922699	Symbol	permentry		922645						
ANR	922700	Symbol	permentry -> allow_users		922645						
ANR	922701	Symbol	lookup_user		922645						
ANR	922702	Symbol	true		922645						
ANR	922703	Symbol	permentry -> allow_hosts		922645						
ANR	922704	Symbol	user		922645						
ANR	922705	Function	IpVerify :: lookup_user_ip_deny	949:0:25941:26165							
ANR	922706	FunctionDef	"IpVerify :: lookup_user_ip_deny (DCpermission perm , char const * user , char const * ip)"		922705	0					
ANR	922707	CompoundStatement		951:0:26029:26165	922705	0					
ANR	922708	IdentifierDeclStatement	PermTypeEntry * permentry = PermTypeArray [ perm ] ;	952:1:26032:26078	922705	0	True				
ANR	922709	IdentifierDecl	* permentry = PermTypeArray [ perm ]		922705	0					
ANR	922710	IdentifierDeclType	PermTypeEntry *		922705	0					
ANR	922711	Identifier	permentry		922705	1					
ANR	922712	AssignmentExpression	* permentry = PermTypeArray [ perm ]		922705	2		=			
ANR	922713	Identifier	permentry		922705	0					
ANR	922714	ArrayIndexing	PermTypeArray [ perm ]		922705	1					
ANR	922715	Identifier	PermTypeArray		922705	0					
ANR	922716	Identifier	perm		922705	1					
ANR	922717	ReturnStatement	"return lookup_user ( permentry -> deny_hosts , permentry -> deny_users , user , ip , NULL , false ) ;"	953:1:26081:26163	922705	1	True				
ANR	922718	CallExpression	"lookup_user ( permentry -> deny_hosts , permentry -> deny_users , user , ip , NULL , false )"		922705	0					
ANR	922719	Callee	lookup_user		922705	0					
ANR	922720	Identifier	lookup_user		922705	0					
ANR	922721	ArgumentList	permentry -> deny_hosts		922705	1					
ANR	922722	Argument	permentry -> deny_hosts		922705	0					
ANR	922723	PtrMemberAccess	permentry -> deny_hosts		922705	0					
ANR	922724	Identifier	permentry		922705	0					
ANR	922725	Identifier	deny_hosts		922705	1					
ANR	922726	Argument	permentry -> deny_users		922705	1					
ANR	922727	PtrMemberAccess	permentry -> deny_users		922705	0					
ANR	922728	Identifier	permentry		922705	0					
ANR	922729	Identifier	deny_users		922705	1					
ANR	922730	Argument	user		922705	2					
ANR	922731	Identifier	user		922705	0					
ANR	922732	Argument	ip		922705	3					
ANR	922733	Identifier	ip		922705	0					
ANR	922734	Argument	NULL		922705	4					
ANR	922735	Identifier	NULL		922705	0					
ANR	922736	Argument	false		922705	5					
ANR	922737	Identifier	false		922705	0					
ANR	922738	ReturnType	bool		922705	1					
ANR	922739	Identifier	IpVerify :: lookup_user_ip_deny		922705	2					
ANR	922740	ParameterList	"DCpermission perm , char const * user , char const * ip"		922705	3					
ANR	922741	Parameter	DCpermission perm	950:30:25976:25992	922705	0	True				
ANR	922742	ParameterType	DCpermission		922705	0					
ANR	922743	Identifier	perm		922705	1					
ANR	922744	Parameter	char const * user	950:49:25995:26010	922705	1	True				
ANR	922745	ParameterType	char const *		922705	0					
ANR	922746	Identifier	user		922705	1					
ANR	922747	Parameter	char const * ip	950:67:26013:26026	922705	2	True				
ANR	922748	ParameterType	char const *		922705	0					
ANR	922749	Identifier	ip		922705	1					
ANR	922750	CFGEntryNode	ENTRY		922705		True				
ANR	922751	CFGExitNode	EXIT		922705		True				
ANR	922752	Symbol	NULL		922705						
ANR	922753	Symbol	perm		922705						
ANR	922754	Symbol	* perm		922705						
ANR	922755	Symbol	* PermTypeArray		922705						
ANR	922756	Symbol	ip		922705						
ANR	922757	Symbol	* permentry		922705						
ANR	922758	Symbol	false		922705						
ANR	922759	Symbol	PermTypeArray		922705						
ANR	922760	Symbol	permentry -> deny_users		922705						
ANR	922761	Symbol	permentry		922705						
ANR	922762	Symbol	lookup_user		922705						
ANR	922763	Symbol	permentry -> deny_hosts		922705						
ANR	922764	Symbol	user		922705						
ANR	922765	Function	IpVerify :: lookup_user_host_allow	956:0:26168:26408							
ANR	922766	FunctionDef	"IpVerify :: lookup_user_host_allow (DCpermission perm , char const * user , char const * hostname)"		922765	0					
ANR	922767	CompoundStatement		958:0:26265:26408	922765	0					
ANR	922768	IdentifierDeclStatement	PermTypeEntry * permentry = PermTypeArray [ perm ] ;	959:1:26268:26314	922765	0	True				
ANR	922769	IdentifierDecl	* permentry = PermTypeArray [ perm ]		922765	0					
ANR	922770	IdentifierDeclType	PermTypeEntry *		922765	0					
ANR	922771	Identifier	permentry		922765	1					
ANR	922772	AssignmentExpression	* permentry = PermTypeArray [ perm ]		922765	2		=			
ANR	922773	Identifier	permentry		922765	0					
ANR	922774	ArrayIndexing	PermTypeArray [ perm ]		922765	1					
ANR	922775	Identifier	PermTypeArray		922765	0					
ANR	922776	Identifier	perm		922765	1					
ANR	922777	ReturnStatement	"return lookup_user ( permentry -> allow_hosts , permentry -> allow_users , user , NULL , hostname , true ) ;"	960:1:26317:26406	922765	1	True				
ANR	922778	CallExpression	"lookup_user ( permentry -> allow_hosts , permentry -> allow_users , user , NULL , hostname , true )"		922765	0					
ANR	922779	Callee	lookup_user		922765	0					
ANR	922780	Identifier	lookup_user		922765	0					
ANR	922781	ArgumentList	permentry -> allow_hosts		922765	1					
ANR	922782	Argument	permentry -> allow_hosts		922765	0					
ANR	922783	PtrMemberAccess	permentry -> allow_hosts		922765	0					
ANR	922784	Identifier	permentry		922765	0					
ANR	922785	Identifier	allow_hosts		922765	1					
ANR	922786	Argument	permentry -> allow_users		922765	1					
ANR	922787	PtrMemberAccess	permentry -> allow_users		922765	0					
ANR	922788	Identifier	permentry		922765	0					
ANR	922789	Identifier	allow_users		922765	1					
ANR	922790	Argument	user		922765	2					
ANR	922791	Identifier	user		922765	0					
ANR	922792	Argument	NULL		922765	3					
ANR	922793	Identifier	NULL		922765	0					
ANR	922794	Argument	hostname		922765	4					
ANR	922795	Identifier	hostname		922765	0					
ANR	922796	Argument	true		922765	5					
ANR	922797	Identifier	true		922765	0					
ANR	922798	ReturnType	bool		922765	1					
ANR	922799	Identifier	IpVerify :: lookup_user_host_allow		922765	2					
ANR	922800	ParameterList	"DCpermission perm , char const * user , char const * hostname"		922765	3					
ANR	922801	Parameter	DCpermission perm	957:33:26206:26222	922765	0	True				
ANR	922802	ParameterType	DCpermission		922765	0					
ANR	922803	Identifier	perm		922765	1					
ANR	922804	Parameter	char const * user	957:52:26225:26240	922765	1	True				
ANR	922805	ParameterType	char const *		922765	0					
ANR	922806	Identifier	user		922765	1					
ANR	922807	Parameter	char const * hostname	957:70:26243:26262	922765	2	True				
ANR	922808	ParameterType	char const *		922765	0					
ANR	922809	Identifier	hostname		922765	1					
ANR	922810	CFGEntryNode	ENTRY		922765		True				
ANR	922811	CFGExitNode	EXIT		922765		True				
ANR	922812	Symbol	NULL		922765						
ANR	922813	Symbol	perm		922765						
ANR	922814	Symbol	* perm		922765						
ANR	922815	Symbol	* PermTypeArray		922765						
ANR	922816	Symbol	* permentry		922765						
ANR	922817	Symbol	PermTypeArray		922765						
ANR	922818	Symbol	hostname		922765						
ANR	922819	Symbol	permentry		922765						
ANR	922820	Symbol	permentry -> allow_users		922765						
ANR	922821	Symbol	lookup_user		922765						
ANR	922822	Symbol	permentry -> allow_hosts		922765						
ANR	922823	Symbol	true		922765						
ANR	922824	Symbol	user		922765						
ANR	922825	Function	IpVerify :: lookup_user_host_deny	963:0:26411:26649							
ANR	922826	FunctionDef	"IpVerify :: lookup_user_host_deny (DCpermission perm , char const * user , char const * hostname)"		922825	0					
ANR	922827	CompoundStatement		965:0:26507:26649	922825	0					
ANR	922828	IdentifierDeclStatement	PermTypeEntry * permentry = PermTypeArray [ perm ] ;	966:1:26510:26556	922825	0	True				
ANR	922829	IdentifierDecl	* permentry = PermTypeArray [ perm ]		922825	0					
ANR	922830	IdentifierDeclType	PermTypeEntry *		922825	0					
ANR	922831	Identifier	permentry		922825	1					
ANR	922832	AssignmentExpression	* permentry = PermTypeArray [ perm ]		922825	2		=			
ANR	922833	Identifier	permentry		922825	0					
ANR	922834	ArrayIndexing	PermTypeArray [ perm ]		922825	1					
ANR	922835	Identifier	PermTypeArray		922825	0					
ANR	922836	Identifier	perm		922825	1					
ANR	922837	ReturnStatement	"return lookup_user ( permentry -> deny_hosts , permentry -> deny_users , user , NULL , hostname , false ) ;"	967:1:26559:26647	922825	1	True				
ANR	922838	CallExpression	"lookup_user ( permentry -> deny_hosts , permentry -> deny_users , user , NULL , hostname , false )"		922825	0					
ANR	922839	Callee	lookup_user		922825	0					
ANR	922840	Identifier	lookup_user		922825	0					
ANR	922841	ArgumentList	permentry -> deny_hosts		922825	1					
ANR	922842	Argument	permentry -> deny_hosts		922825	0					
ANR	922843	PtrMemberAccess	permentry -> deny_hosts		922825	0					
ANR	922844	Identifier	permentry		922825	0					
ANR	922845	Identifier	deny_hosts		922825	1					
ANR	922846	Argument	permentry -> deny_users		922825	1					
ANR	922847	PtrMemberAccess	permentry -> deny_users		922825	0					
ANR	922848	Identifier	permentry		922825	0					
ANR	922849	Identifier	deny_users		922825	1					
ANR	922850	Argument	user		922825	2					
ANR	922851	Identifier	user		922825	0					
ANR	922852	Argument	NULL		922825	3					
ANR	922853	Identifier	NULL		922825	0					
ANR	922854	Argument	hostname		922825	4					
ANR	922855	Identifier	hostname		922825	0					
ANR	922856	Argument	false		922825	5					
ANR	922857	Identifier	false		922825	0					
ANR	922858	ReturnType	bool		922825	1					
ANR	922859	Identifier	IpVerify :: lookup_user_host_deny		922825	2					
ANR	922860	ParameterList	"DCpermission perm , char const * user , char const * hostname"		922825	3					
ANR	922861	Parameter	DCpermission perm	964:32:26448:26464	922825	0	True				
ANR	922862	ParameterType	DCpermission		922825	0					
ANR	922863	Identifier	perm		922825	1					
ANR	922864	Parameter	char const * user	964:51:26467:26482	922825	1	True				
ANR	922865	ParameterType	char const *		922825	0					
ANR	922866	Identifier	user		922825	1					
ANR	922867	Parameter	char const * hostname	964:69:26485:26504	922825	2	True				
ANR	922868	ParameterType	char const *		922825	0					
ANR	922869	Identifier	hostname		922825	1					
ANR	922870	CFGEntryNode	ENTRY		922825		True				
ANR	922871	CFGExitNode	EXIT		922825		True				
ANR	922872	Symbol	NULL		922825						
ANR	922873	Symbol	perm		922825						
ANR	922874	Symbol	* perm		922825						
ANR	922875	Symbol	* PermTypeArray		922825						
ANR	922876	Symbol	false		922825						
ANR	922877	Symbol	* permentry		922825						
ANR	922878	Symbol	PermTypeArray		922825						
ANR	922879	Symbol	permentry -> deny_users		922825						
ANR	922880	Symbol	hostname		922825						
ANR	922881	Symbol	permentry		922825						
ANR	922882	Symbol	lookup_user		922825						
ANR	922883	Symbol	permentry -> deny_hosts		922825						
ANR	922884	Symbol	user		922825						
ANR	922885	Function	IpVerify :: lookup_user	970:0:26652:27548							
ANR	922886	FunctionDef	"IpVerify :: lookup_user (NetStringList * hosts , UserHash_t * users , char const * user , char const * ip , char const * hostname , bool is_allow_list)"		922885	0					
ANR	922887	CompoundStatement		972:0:26796:27548	922885	0					
ANR	922888	IfStatement	if ( ! hosts || ! users )		922885	0					
ANR	922889	Condition	! hosts || ! users	973:5:26803:26818	922885	0	True				
ANR	922890	OrExpression	! hosts || ! users		922885	0		||			
ANR	922891	UnaryOperationExpression	! hosts		922885	0					
ANR	922892	UnaryOperator	!		922885	0					
ANR	922893	Identifier	hosts		922885	1					
ANR	922894	UnaryOperationExpression	! users		922885	1					
ANR	922895	UnaryOperator	!		922885	0					
ANR	922896	Identifier	users		922885	1					
ANR	922897	CompoundStatement		2:24:25:25	922885	1					
ANR	922898	ReturnStatement	return false ;	974:2:26826:26838	922885	0	True				
ANR	922899	Identifier	false		922885	0					
ANR	922900	ExpressionStatement	ASSERT ( user )	976:1:26844:26858	922885	1	True				
ANR	922901	CallExpression	ASSERT ( user )		922885	0					
ANR	922902	Callee	ASSERT		922885	0					
ANR	922903	Identifier	ASSERT		922885	0					
ANR	922904	ArgumentList	user		922885	1					
ANR	922905	Argument	user		922885	0					
ANR	922906	Identifier	user		922885	0					
ANR	922907	ExpressionStatement	ASSERT ( ! ip || ! hostname )	979:1:26909:26935	922885	2	True				
ANR	922908	CallExpression	ASSERT ( ! ip || ! hostname )		922885	0					
ANR	922909	Callee	ASSERT		922885	0					
ANR	922910	Identifier	ASSERT		922885	0					
ANR	922911	ArgumentList	! ip || ! hostname		922885	1					
ANR	922912	Argument	! ip || ! hostname		922885	0					
ANR	922913	OrExpression	! ip || ! hostname		922885	0		||			
ANR	922914	UnaryOperationExpression	! ip		922885	0					
ANR	922915	UnaryOperator	!		922885	0					
ANR	922916	Identifier	ip		922885	1					
ANR	922917	UnaryOperationExpression	! hostname		922885	1					
ANR	922918	UnaryOperator	!		922885	0					
ANR	922919	Identifier	hostname		922885	1					
ANR	922920	ExpressionStatement	ASSERT ( ip || hostname )	980:1:26938:26961	922885	3	True				
ANR	922921	CallExpression	ASSERT ( ip || hostname )		922885	0					
ANR	922922	Callee	ASSERT		922885	0					
ANR	922923	Identifier	ASSERT		922885	0					
ANR	922924	ArgumentList	ip || hostname		922885	1					
ANR	922925	Argument	ip || hostname		922885	0					
ANR	922926	OrExpression	ip || hostname		922885	0		||			
ANR	922927	Identifier	ip		922885	0					
ANR	922928	Identifier	hostname		922885	1					
ANR	922929	IdentifierDeclStatement	StringList hostmatches ;	982:1:26965:26987	922885	4	True				
ANR	922930	IdentifierDecl	hostmatches		922885	0					
ANR	922931	IdentifierDeclType	StringList		922885	0					
ANR	922932	Identifier	hostmatches		922885	1					
ANR	922933	IfStatement	if ( ip )		922885	5					
ANR	922934	Condition	ip	983:5:26994:26995	922885	0	True				
ANR	922935	Identifier	ip		922885	0					
ANR	922936	CompoundStatement		12:10:202:202	922885	1					
ANR	922937	ExpressionStatement	"hosts -> find_matches_withnetwork ( ip , & hostmatches )"	984:2:27003:27051	922885	0	True				
ANR	922938	CallExpression	"hosts -> find_matches_withnetwork ( ip , & hostmatches )"		922885	0					
ANR	922939	Callee	hosts -> find_matches_withnetwork		922885	0					
ANR	922940	PtrMemberAccess	hosts -> find_matches_withnetwork		922885	0					
ANR	922941	Identifier	hosts		922885	0					
ANR	922942	Identifier	find_matches_withnetwork		922885	1					
ANR	922943	ArgumentList	ip		922885	1					
ANR	922944	Argument	ip		922885	0					
ANR	922945	Identifier	ip		922885	0					
ANR	922946	Argument	& hostmatches		922885	1					
ANR	922947	UnaryOperationExpression	& hostmatches		922885	0					
ANR	922948	UnaryOperator	&		922885	0					
ANR	922949	Identifier	hostmatches		922885	1					
ANR	922950	ElseStatement	else		922885	0					
ANR	922951	IfStatement	if ( hostname )		922885	0					
ANR	922952	Condition	hostname	986:10:27066:27073	922885	0	True				
ANR	922953	Identifier	hostname		922885	0					
ANR	922954	CompoundStatement		15:21:280:280	922885	1					
ANR	922955	ExpressionStatement	"hosts -> find_matches_anycase_withwildcard ( hostname , & hostmatches )"	987:2:27081:27144	922885	0	True				
ANR	922956	CallExpression	"hosts -> find_matches_anycase_withwildcard ( hostname , & hostmatches )"		922885	0					
ANR	922957	Callee	hosts -> find_matches_anycase_withwildcard		922885	0					
ANR	922958	PtrMemberAccess	hosts -> find_matches_anycase_withwildcard		922885	0					
ANR	922959	Identifier	hosts		922885	0					
ANR	922960	Identifier	find_matches_anycase_withwildcard		922885	1					
ANR	922961	ArgumentList	hostname		922885	1					
ANR	922962	Argument	hostname		922885	0					
ANR	922963	Identifier	hostname		922885	0					
ANR	922964	Argument	& hostmatches		922885	1					
ANR	922965	UnaryOperationExpression	& hostmatches		922885	0					
ANR	922966	UnaryOperator	&		922885	0					
ANR	922967	Identifier	hostmatches		922885	1					
ANR	922968	IdentifierDeclStatement	char const * hostmatch ;	990:1:27151:27173	922885	6	True				
ANR	922969	IdentifierDecl	* hostmatch		922885	0					
ANR	922970	IdentifierDeclType	char const *		922885	0					
ANR	922971	Identifier	hostmatch		922885	1					
ANR	922972	ExpressionStatement	hostmatches . rewind ( )	991:1:27176:27196	922885	7	True				
ANR	922973	CallExpression	hostmatches . rewind ( )		922885	0					
ANR	922974	Callee	hostmatches . rewind		922885	0					
ANR	922975	MemberAccess	hostmatches . rewind		922885	0					
ANR	922976	Identifier	hostmatches		922885	0					
ANR	922977	Identifier	rewind		922885	1					
ANR	922978	ArgumentList			922885	1					
ANR	922979	WhileStatement	while ( ( hostmatch = hostmatches . next ( ) ) )		922885	8					
ANR	922980	Condition	hostmatch = hostmatches . next ( )	992:8:27206:27235	922885	0	True				
ANR	922981	AssignmentExpression	hostmatch = hostmatches . next ( )		922885	0		=			
ANR	922982	Identifier	hostmatch		922885	0					
ANR	922983	CallExpression	hostmatches . next ( )		922885	1					
ANR	922984	Callee	hostmatches . next		922885	0					
ANR	922985	MemberAccess	hostmatches . next		922885	0					
ANR	922986	Identifier	hostmatches		922885	0					
ANR	922987	Identifier	next		922885	1					
ANR	922988	ArgumentList			922885	1					
ANR	922989	CompoundStatement		22:2:446:466	922885	1					
ANR	922990	IdentifierDeclStatement	StringList * userlist ;	993:2:27243:27263	922885	0	True				
ANR	922991	IdentifierDecl	* userlist		922885	0					
ANR	922992	IdentifierDeclType	StringList *		922885	0					
ANR	922993	Identifier	userlist		922885	1					
ANR	922994	ExpressionStatement	"ASSERT ( users -> lookup ( hostmatch , userlist ) != - 1 )"	994:2:27267:27316	922885	1	True				
ANR	922995	CallExpression	"ASSERT ( users -> lookup ( hostmatch , userlist ) != - 1 )"		922885	0					
ANR	922996	Callee	ASSERT		922885	0					
ANR	922997	Identifier	ASSERT		922885	0					
ANR	922998	ArgumentList	"users -> lookup ( hostmatch , userlist ) != - 1"		922885	1					
ANR	922999	Argument	"users -> lookup ( hostmatch , userlist ) != - 1"		922885	0					
ANR	923000	EqualityExpression	"users -> lookup ( hostmatch , userlist ) != - 1"		922885	0		!=			
ANR	923001	CallExpression	"users -> lookup ( hostmatch , userlist )"		922885	0					
ANR	923002	Callee	users -> lookup		922885	0					
ANR	923003	PtrMemberAccess	users -> lookup		922885	0					
ANR	923004	Identifier	users		922885	0					
ANR	923005	Identifier	lookup		922885	1					
ANR	923006	ArgumentList	hostmatch		922885	1					
ANR	923007	Argument	hostmatch		922885	0					
ANR	923008	Identifier	hostmatch		922885	0					
ANR	923009	Argument	userlist		922885	1					
ANR	923010	Identifier	userlist		922885	0					
ANR	923011	UnaryOperationExpression	- 1		922885	1					
ANR	923012	UnaryOperator	-		922885	0					
ANR	923013	PrimaryExpression	1		922885	1					
ANR	923014	IfStatement	if ( userlist -> contains_anycase_withwildcard ( user ) )		922885	2					
ANR	923015	Condition	userlist -> contains_anycase_withwildcard ( user )	996:6:27325:27369	922885	0	True				
ANR	923016	CallExpression	userlist -> contains_anycase_withwildcard ( user )		922885	0					
ANR	923017	Callee	userlist -> contains_anycase_withwildcard		922885	0					
ANR	923018	PtrMemberAccess	userlist -> contains_anycase_withwildcard		922885	0					
ANR	923019	Identifier	userlist		922885	0					
ANR	923020	Identifier	contains_anycase_withwildcard		922885	1					
ANR	923021	ArgumentList	user		922885	1					
ANR	923022	Argument	user		922885	0					
ANR	923023	Identifier	user		922885	0					
ANR	923024	CompoundStatement		25:53:575:575	922885	1					
ANR	923025	ExpressionStatement	"dprintf ( D_SECURITY , ""IPVERIFY: matched user %s from %s to %s list\\n"" , user , hostmatch , is_allow_list ? ""allow"" : ""deny"" )"	997:3:27377:27507	922885	0	True				
ANR	923026	CallExpression	"dprintf ( D_SECURITY , ""IPVERIFY: matched user %s from %s to %s list\\n"" , user , hostmatch , is_allow_list ? ""allow"" : ""deny"" )"		922885	0					
ANR	923027	Callee	dprintf		922885	0					
ANR	923028	Identifier	dprintf		922885	0					
ANR	923029	ArgumentList	D_SECURITY		922885	1					
ANR	923030	Argument	D_SECURITY		922885	0					
ANR	923031	Identifier	D_SECURITY		922885	0					
ANR	923032	Argument	"""IPVERIFY: matched user %s from %s to %s list\\n"""		922885	1					
ANR	923033	PrimaryExpression	"""IPVERIFY: matched user %s from %s to %s list\\n"""		922885	0					
ANR	923034	Argument	user		922885	2					
ANR	923035	Identifier	user		922885	0					
ANR	923036	Argument	hostmatch		922885	3					
ANR	923037	Identifier	hostmatch		922885	0					
ANR	923038	Argument	"is_allow_list ? ""allow"" : ""deny"""		922885	4					
ANR	923039	ConditionalExpression	"is_allow_list ? ""allow"" : ""deny"""		922885	0					
ANR	923040	Condition	is_allow_list		922885	0					
ANR	923041	Identifier	is_allow_list		922885	0					
ANR	923042	PrimaryExpression	"""allow"""		922885	1					
ANR	923043	PrimaryExpression	"""deny"""		922885	2					
ANR	923044	ReturnStatement	return true ;	999:3:27512:27523	922885	1	True				
ANR	923045	Identifier	true		922885	0					
ANR	923046	ReturnStatement	return false ;	1003:1:27534:27546	922885	9	True				
ANR	923047	Identifier	false		922885	0					
ANR	923048	ReturnType	bool		922885	1					
ANR	923049	Identifier	IpVerify :: lookup_user		922885	2					
ANR	923050	ParameterList	"NetStringList * hosts , UserHash_t * users , char const * user , char const * ip , char const * hostname , bool is_allow_list"		922885	3					
ANR	923051	Parameter	NetStringList * hosts	971:22:26679:26698	922885	0	True				
ANR	923052	ParameterType	NetStringList *		922885	0					
ANR	923053	Identifier	hosts		922885	1					
ANR	923054	Parameter	UserHash_t * users	971:44:26701:26717	922885	1	True				
ANR	923055	ParameterType	UserHash_t *		922885	0					
ANR	923056	Identifier	users		922885	1					
ANR	923057	Parameter	char const * user	971:63:26720:26735	922885	2	True				
ANR	923058	ParameterType	char const *		922885	0					
ANR	923059	Identifier	user		922885	1					
ANR	923060	Parameter	char const * ip	971:81:26738:26751	922885	3	True				
ANR	923061	ParameterType	char const *		922885	0					
ANR	923062	Identifier	ip		922885	1					
ANR	923063	Parameter	char const * hostname	971:97:26754:26773	922885	4	True				
ANR	923064	ParameterType	char const *		922885	0					
ANR	923065	Identifier	hostname		922885	1					
ANR	923066	Parameter	bool is_allow_list	971:119:26776:26793	922885	5	True				
ANR	923067	ParameterType	bool		922885	0					
ANR	923068	Identifier	is_allow_list		922885	1					
ANR	923069	CFGEntryNode	ENTRY		922885		True				
ANR	923070	CFGExitNode	EXIT		922885		True				
ANR	923071	Symbol	hostmatch		922885						
ANR	923072	Symbol	userlist		922885						
ANR	923073	Symbol	D_SECURITY		922885						
ANR	923074	Symbol	is_allow_list		922885						
ANR	923075	Symbol	users -> lookup		922885						
ANR	923076	Symbol	hosts		922885						
ANR	923077	Symbol	hostmatches . next		922885						
ANR	923078	Symbol	ip		922885						
ANR	923079	Symbol	false		922885						
ANR	923080	Symbol	users		922885						
ANR	923081	Symbol	hostmatches		922885						
ANR	923082	Symbol	hostname		922885						
ANR	923083	Symbol	* users		922885						
ANR	923084	Symbol	userlist -> contains_anycase_withwildcard		922885						
ANR	923085	Symbol	true		922885						
ANR	923086	Symbol	& hostmatches		922885						
ANR	923087	Symbol	* userlist		922885						
ANR	923088	Symbol	user		922885						
ANR	923089	Function	IpVerify :: PunchHole	1012:0:27847:29032							
ANR	923090	FunctionDef	"IpVerify :: PunchHole (DCpermission perm , MyString & id)"		923089	0					
ANR	923091	CompoundStatement		1014:0:27905:29032	923089	0					
ANR	923092	IdentifierDeclStatement	int count = 0 ;	1015:1:27908:27921	923089	0	True				
ANR	923093	IdentifierDecl	count = 0		923089	0					
ANR	923094	IdentifierDeclType	int		923089	0					
ANR	923095	Identifier	count		923089	1					
ANR	923096	AssignmentExpression	count = 0		923089	2		=			
ANR	923097	Identifier	count		923089	0					
ANR	923098	PrimaryExpression	0		923089	1					
ANR	923099	IfStatement	if ( PunchedHoleArray [ perm ] == NULL )		923089	1					
ANR	923100	Condition	PunchedHoleArray [ perm ] == NULL	1016:5:27928:27957	923089	0	True				
ANR	923101	EqualityExpression	PunchedHoleArray [ perm ] == NULL		923089	0		==			
ANR	923102	ArrayIndexing	PunchedHoleArray [ perm ]		923089	0					
ANR	923103	Identifier	PunchedHoleArray		923089	0					
ANR	923104	Identifier	perm		923089	1					
ANR	923105	Identifier	NULL		923089	1					
ANR	923106	CompoundStatement		3:37:54:54	923089	1					
ANR	923107	ExpressionStatement	PunchedHoleArray [ perm ] = new HolePunchTable_t ( compute_host_hash )	1017:2:27964:28031	923089	0	True				
ANR	923108	AssignmentExpression	PunchedHoleArray [ perm ] = new HolePunchTable_t ( compute_host_hash )		923089	0		=			
ANR	923109	ArrayIndexing	PunchedHoleArray [ perm ]		923089	0					
ANR	923110	Identifier	PunchedHoleArray		923089	0					
ANR	923111	Identifier	perm		923089	1					
ANR	923112	Identifier	compute_host_hash		923089	1					
ANR	923113	ExpressionStatement	ASSERT ( PunchedHoleArray [ perm ] != NULL )	1019:2:28035:28073	923089	1	True				
ANR	923114	CallExpression	ASSERT ( PunchedHoleArray [ perm ] != NULL )		923089	0					
ANR	923115	Callee	ASSERT		923089	0					
ANR	923116	Identifier	ASSERT		923089	0					
ANR	923117	ArgumentList	PunchedHoleArray [ perm ] != NULL		923089	1					
ANR	923118	Argument	PunchedHoleArray [ perm ] != NULL		923089	0					
ANR	923119	EqualityExpression	PunchedHoleArray [ perm ] != NULL		923089	0		!=			
ANR	923120	ArrayIndexing	PunchedHoleArray [ perm ]		923089	0					
ANR	923121	Identifier	PunchedHoleArray		923089	0					
ANR	923122	Identifier	perm		923089	1					
ANR	923123	Identifier	NULL		923089	1					
ANR	923124	ElseStatement	else		923089	0					
ANR	923125	CompoundStatement		9:2:182:187	923089	0					
ANR	923126	IdentifierDeclStatement	int c ;	1022:2:28088:28093	923089	0	True				
ANR	923127	IdentifierDecl	c		923089	0					
ANR	923128	IdentifierDeclType	int		923089	0					
ANR	923129	Identifier	c		923089	1					
ANR	923130	IfStatement	"if ( PunchedHoleArray [ perm ] -> lookup ( id , c ) != - 1 )"		923089	1					
ANR	923131	Condition	"PunchedHoleArray [ perm ] -> lookup ( id , c ) != - 1"	1023:6:28101:28143	923089	0	True				
ANR	923132	EqualityExpression	"PunchedHoleArray [ perm ] -> lookup ( id , c ) != - 1"		923089	0		!=			
ANR	923133	CallExpression	"PunchedHoleArray [ perm ] -> lookup ( id , c )"		923089	0					
ANR	923134	Callee	PunchedHoleArray [ perm ] -> lookup		923089	0					
ANR	923135	PtrMemberAccess	PunchedHoleArray [ perm ] -> lookup		923089	0					
ANR	923136	ArrayIndexing	PunchedHoleArray [ perm ]		923089	0					
ANR	923137	Identifier	PunchedHoleArray		923089	0					
ANR	923138	Identifier	perm		923089	1					
ANR	923139	Identifier	lookup		923089	1					
ANR	923140	ArgumentList	id		923089	1					
ANR	923141	Argument	id		923089	0					
ANR	923142	Identifier	id		923089	0					
ANR	923143	Argument	c		923089	1					
ANR	923144	Identifier	c		923089	0					
ANR	923145	UnaryOperationExpression	- 1		923089	1					
ANR	923146	UnaryOperator	-		923089	0					
ANR	923147	PrimaryExpression	1		923089	1					
ANR	923148	CompoundStatement		10:51:240:240	923089	1					
ANR	923149	ExpressionStatement	count = c	1024:3:28151:28160	923089	0	True				
ANR	923150	AssignmentExpression	count = c		923089	0		=			
ANR	923151	Identifier	count		923089	0					
ANR	923152	Identifier	c		923089	1					
ANR	923153	IfStatement	if ( PunchedHoleArray [ perm ] -> remove ( id ) == - 1 )		923089	1					
ANR	923154	Condition	PunchedHoleArray [ perm ] -> remove ( id ) == - 1	1025:7:28169:28208	923089	0	True				
ANR	923155	EqualityExpression	PunchedHoleArray [ perm ] -> remove ( id ) == - 1		923089	0		==			
ANR	923156	CallExpression	PunchedHoleArray [ perm ] -> remove ( id )		923089	0					
ANR	923157	Callee	PunchedHoleArray [ perm ] -> remove		923089	0					
ANR	923158	PtrMemberAccess	PunchedHoleArray [ perm ] -> remove		923089	0					
ANR	923159	ArrayIndexing	PunchedHoleArray [ perm ]		923089	0					
ANR	923160	Identifier	PunchedHoleArray		923089	0					
ANR	923161	Identifier	perm		923089	1					
ANR	923162	Identifier	remove		923089	1					
ANR	923163	ArgumentList	id		923089	1					
ANR	923164	Argument	id		923089	0					
ANR	923165	Identifier	id		923089	0					
ANR	923166	UnaryOperationExpression	- 1		923089	1					
ANR	923167	UnaryOperator	-		923089	0					
ANR	923168	PrimaryExpression	1		923089	1					
ANR	923169	CompoundStatement		12:49:305:305	923089	1					
ANR	923170	Statement	EXCEPT	1026:4:28217:28222	923089	0	True				
ANR	923171	Statement	(	1026:10:28223:28223	923089	1	True				
ANR	923172	Statement	"""IpVerify::PunchHole: """	1026:11:28224:28246	923089	2	True				
ANR	923173	Statement	"""table entry removal error"""	1027:15:28263:28289	923089	3	True				
ANR	923174	Statement	)	1027:42:28290:28290	923089	4	True				
ANR	923175	ExpressionStatement		1027:43:28291:28291	923089	5	True				
ANR	923176	ExpressionStatement	count ++	1032:1:28307:28314	923089	2	True				
ANR	923177	PostIncDecOperationExpression	count ++		923089	0					
ANR	923178	Identifier	count		923089	0					
ANR	923179	IncDec	++		923089	1					
ANR	923180	IfStatement	"if ( PunchedHoleArray [ perm ] -> insert ( id , count ) == - 1 )"		923089	3					
ANR	923181	Condition	"PunchedHoleArray [ perm ] -> insert ( id , count ) == - 1"	1033:5:28321:28367	923089	0	True				
ANR	923182	EqualityExpression	"PunchedHoleArray [ perm ] -> insert ( id , count ) == - 1"		923089	0		==			
ANR	923183	CallExpression	"PunchedHoleArray [ perm ] -> insert ( id , count )"		923089	0					
ANR	923184	Callee	PunchedHoleArray [ perm ] -> insert		923089	0					
ANR	923185	PtrMemberAccess	PunchedHoleArray [ perm ] -> insert		923089	0					
ANR	923186	ArrayIndexing	PunchedHoleArray [ perm ]		923089	0					
ANR	923187	Identifier	PunchedHoleArray		923089	0					
ANR	923188	Identifier	perm		923089	1					
ANR	923189	Identifier	insert		923089	1					
ANR	923190	ArgumentList	id		923089	1					
ANR	923191	Argument	id		923089	0					
ANR	923192	Identifier	id		923089	0					
ANR	923193	Argument	count		923089	1					
ANR	923194	Identifier	count		923089	0					
ANR	923195	UnaryOperationExpression	- 1		923089	1					
ANR	923196	UnaryOperator	-		923089	0					
ANR	923197	PrimaryExpression	1		923089	1					
ANR	923198	CompoundStatement		20:54:464:464	923089	1					
ANR	923199	ExpressionStatement	"EXCEPT ( ""IpVerify::PunchHole: table entry insertion error"" )"	1034:2:28374:28432	923089	0	True				
ANR	923200	CallExpression	"EXCEPT ( ""IpVerify::PunchHole: table entry insertion error"" )"		923089	0					
ANR	923201	Callee	EXCEPT		923089	0					
ANR	923202	Identifier	EXCEPT		923089	0					
ANR	923203	ArgumentList	"""IpVerify::PunchHole: table entry insertion error"""		923089	1					
ANR	923204	Argument	"""IpVerify::PunchHole: table entry insertion error"""		923089	0					
ANR	923205	PrimaryExpression	"""IpVerify::PunchHole: table entry insertion error"""		923089	0					
ANR	923206	IfStatement	if ( count == 1 )		923089	4					
ANR	923207	Condition	count == 1	1037:5:28443:28452	923089	0	True				
ANR	923208	EqualityExpression	count == 1		923089	0		==			
ANR	923209	Identifier	count		923089	0					
ANR	923210	PrimaryExpression	1		923089	1					
ANR	923211	CompoundStatement		24:17:549:549	923089	1					
ANR	923212	ExpressionStatement	"dprintf ( D_SECURITY , ""IpVerify::PunchHole: opened %s level to %s\\n"" , PermString ( perm ) , id . Value ( ) )"	1038:2:28459:28586	923089	0	True				
ANR	923213	CallExpression	"dprintf ( D_SECURITY , ""IpVerify::PunchHole: opened %s level to %s\\n"" , PermString ( perm ) , id . Value ( ) )"		923089	0					
ANR	923214	Callee	dprintf		923089	0					
ANR	923215	Identifier	dprintf		923089	0					
ANR	923216	ArgumentList	D_SECURITY		923089	1					
ANR	923217	Argument	D_SECURITY		923089	0					
ANR	923218	Identifier	D_SECURITY		923089	0					
ANR	923219	Argument	"""IpVerify::PunchHole: opened %s level to %s\\n"""		923089	1					
ANR	923220	PrimaryExpression	"""IpVerify::PunchHole: opened %s level to %s\\n"""		923089	0					
ANR	923221	Argument	PermString ( perm )		923089	2					
ANR	923222	CallExpression	PermString ( perm )		923089	0					
ANR	923223	Callee	PermString		923089	0					
ANR	923224	Identifier	PermString		923089	0					
ANR	923225	ArgumentList	perm		923089	1					
ANR	923226	Argument	perm		923089	0					
ANR	923227	Identifier	perm		923089	0					
ANR	923228	Argument	id . Value ( )		923089	3					
ANR	923229	CallExpression	id . Value ( )		923089	0					
ANR	923230	Callee	id . Value		923089	0					
ANR	923231	MemberAccess	id . Value		923089	0					
ANR	923232	Identifier	id		923089	0					
ANR	923233	Identifier	Value		923089	1					
ANR	923234	ArgumentList			923089	1					
ANR	923235	ElseStatement	else		923089	0					
ANR	923236	CompoundStatement		30:6:691:691	923089	0					
ANR	923237	Statement	dprintf	1044:2:28601:28607	923089	0	True				
ANR	923238	Statement	(	1044:9:28608:28608	923089	1	True				
ANR	923239	Statement	D_SECURITY	1044:10:28609:28618	923089	2	True				
ANR	923240	Statement	","	1044:20:28619:28619	923089	3	True				
ANR	923241	Statement	"""IpVerify::PunchHole: """	1045:10:28631:28653	923089	4	True				
ANR	923242	Statement	"""open count at level %s for %s now %d\\n"""	1046:7:28662:28701	923089	5	True				
ANR	923243	Statement	","	1046:47:28702:28702	923089	6	True				
ANR	923244	Statement	PermString	1047:10:28714:28723	923089	7	True				
ANR	923245	Statement	(	1047:20:28724:28724	923089	8	True				
ANR	923246	Statement	perm	1047:21:28725:28728	923089	9	True				
ANR	923247	Statement	)	1047:25:28729:28729	923089	10	True				
ANR	923248	Statement	","	1047:26:28730:28730	923089	11	True				
ANR	923249	Statement	id	1048:10:28742:28743	923089	12	True				
ANR	923250	Statement	.	1048:12:28744:28744	923089	13	True				
ANR	923251	Statement	Value	1048:13:28745:28749	923089	14	True				
ANR	923252	Statement	(	1048:18:28750:28750	923089	15	True				
ANR	923253	Statement	)	1048:19:28751:28751	923089	16	True				
ANR	923254	Statement	","	1048:20:28752:28752	923089	17	True				
ANR	923255	Statement	count	1049:10:28764:28768	923089	18	True				
ANR	923256	Statement	)	1049:15:28769:28769	923089	19	True				
ANR	923257	ExpressionStatement		1049:16:28770:28770	923089	20	True				
ANR	923258	IdentifierDeclStatement	DCpermissionHierarchy hierarchy ( perm ) ;	1052:1:28777:28816	923089	5	True				
ANR	923259	IdentifierDecl	hierarchy ( perm )		923089	0					
ANR	923260	IdentifierDeclType	DCpermissionHierarchy		923089	0					
ANR	923261	Identifier	hierarchy		923089	1					
ANR	923262	Identifier	perm		923089	2					
ANR	923263	IdentifierDeclStatement	DCpermission const * implied_perms = hierarchy . getImpliedPerms ( ) ;	1053:1:28819:28880	923089	6	True				
ANR	923264	IdentifierDecl	* implied_perms = hierarchy . getImpliedPerms ( )		923089	0					
ANR	923265	IdentifierDeclType	DCpermission const *		923089	0					
ANR	923266	Identifier	implied_perms		923089	1					
ANR	923267	AssignmentExpression	* implied_perms = hierarchy . getImpliedPerms ( )		923089	2		=			
ANR	923268	Identifier	implied_perms		923089	0					
ANR	923269	CallExpression	hierarchy . getImpliedPerms ( )		923089	1					
ANR	923270	Callee	hierarchy . getImpliedPerms		923089	0					
ANR	923271	MemberAccess	hierarchy . getImpliedPerms		923089	0					
ANR	923272	Identifier	hierarchy		923089	0					
ANR	923273	Identifier	getImpliedPerms		923089	1					
ANR	923274	ArgumentList			923089	1					
ANR	923275	ForStatement	for ( ; implied_perms [ 0 ] != LAST_PERM ; implied_perms ++ )		923089	7					
ANR	923276	Condition	implied_perms [ 0 ] != LAST_PERM	1054:7:28889:28917	923089	0	True				
ANR	923277	EqualityExpression	implied_perms [ 0 ] != LAST_PERM		923089	0		!=			
ANR	923278	ArrayIndexing	implied_perms [ 0 ]		923089	0					
ANR	923279	Identifier	implied_perms		923089	0					
ANR	923280	PrimaryExpression	0		923089	1					
ANR	923281	Identifier	LAST_PERM		923089	1					
ANR	923282	PostIncDecOperationExpression	implied_perms ++	1054:38:28920:28934	923089	1	True				
ANR	923283	Identifier	implied_perms		923089	0					
ANR	923284	IncDec	++		923089	1					
ANR	923285	CompoundStatement		41:56:1032:1032	923089	2					
ANR	923286	IfStatement	if ( perm != implied_perms [ 0 ] )		923089	0					
ANR	923287	Condition	perm != implied_perms [ 0 ]	1055:6:28946:28969	923089	0	True				
ANR	923288	EqualityExpression	perm != implied_perms [ 0 ]		923089	0		!=			
ANR	923289	Identifier	perm		923089	0					
ANR	923290	ArrayIndexing	implied_perms [ 0 ]		923089	1					
ANR	923291	Identifier	implied_perms		923089	0					
ANR	923292	PrimaryExpression	0		923089	1					
ANR	923293	CompoundStatement		42:33:1067:1067	923089	1					
ANR	923294	ExpressionStatement	"PunchHole ( implied_perms [ 0 ] , id )"	1056:3:28978:29008	923089	0	True				
ANR	923295	CallExpression	"PunchHole ( implied_perms [ 0 ] , id )"		923089	0					
ANR	923296	Callee	PunchHole		923089	0					
ANR	923297	Identifier	PunchHole		923089	0					
ANR	923298	ArgumentList	implied_perms [ 0 ]		923089	1					
ANR	923299	Argument	implied_perms [ 0 ]		923089	0					
ANR	923300	ArrayIndexing	implied_perms [ 0 ]		923089	0					
ANR	923301	Identifier	implied_perms		923089	0					
ANR	923302	PrimaryExpression	0		923089	1					
ANR	923303	Argument	id		923089	1					
ANR	923304	Identifier	id		923089	0					
ANR	923305	ReturnStatement	return true ;	1060:1:29019:29030	923089	8	True				
ANR	923306	Identifier	true		923089	0					
ANR	923307	ReturnType	bool		923089	1					
ANR	923308	Identifier	IpVerify :: PunchHole		923089	2					
ANR	923309	ParameterList	"DCpermission perm , MyString & id"		923089	3					
ANR	923310	Parameter	DCpermission perm	1013:20:27872:27888	923089	0	True				
ANR	923311	ParameterType	DCpermission		923089	0					
ANR	923312	Identifier	perm		923089	1					
ANR	923313	Parameter	MyString & id	1013:39:27891:27902	923089	1	True				
ANR	923314	ParameterType	MyString &		923089	0					
ANR	923315	Identifier	id		923089	1					
ANR	923316	CFGEntryNode	ENTRY		923089		True				
ANR	923317	CFGExitNode	EXIT		923089		True				
ANR	923318	Symbol	PunchedHoleArray [ perm ] -> remove		923089						
ANR	923319	Symbol	LAST_PERM		923089						
ANR	923320	Symbol	NULL		923089						
ANR	923321	Symbol	c		923089						
ANR	923322	Symbol	perm		923089						
ANR	923323	Symbol	* perm		923089						
ANR	923324	Symbol	D_SECURITY		923089						
ANR	923325	Symbol	PunchedHoleArray [ perm ] -> lookup		923089						
ANR	923326	Symbol	hierarchy . getImpliedPerms		923089						
ANR	923327	Symbol	compute_host_hash		923089						
ANR	923328	Symbol	* * perm		923089						
ANR	923329	Symbol	hierarchy		923089						
ANR	923330	Symbol	* implied_perms		923089						
ANR	923331	Symbol	count		923089						
ANR	923332	Symbol	* * PunchedHoleArray		923089						
ANR	923333	Symbol	PunchedHoleArray [ perm ] -> insert		923089						
ANR	923334	Symbol	implied_perms		923089						
ANR	923335	Symbol	true		923089						
ANR	923336	Symbol	* PunchedHoleArray		923089						
ANR	923337	Symbol	id . Value		923089						
ANR	923338	Symbol	id		923089						
ANR	923339	Symbol	PermString		923089						
ANR	923340	Symbol	PunchedHoleArray		923089						
ANR	923341	Function	IpVerify :: FillHole	1065:0:29101:30200							
ANR	923342	FunctionDef	"IpVerify :: FillHole (DCpermission perm , MyString & id)"		923341	0					
ANR	923343	CompoundStatement		1067:0:29158:30200	923341	0					
ANR	923344	IdentifierDeclStatement	HolePunchTable_t * table = PunchedHoleArray [ perm ] ;	1068:1:29161:29209	923341	0	True				
ANR	923345	IdentifierDecl	* table = PunchedHoleArray [ perm ]		923341	0					
ANR	923346	IdentifierDeclType	HolePunchTable_t *		923341	0					
ANR	923347	Identifier	table		923341	1					
ANR	923348	AssignmentExpression	* table = PunchedHoleArray [ perm ]		923341	2		=			
ANR	923349	Identifier	table		923341	0					
ANR	923350	ArrayIndexing	PunchedHoleArray [ perm ]		923341	1					
ANR	923351	Identifier	PunchedHoleArray		923341	0					
ANR	923352	Identifier	perm		923341	1					
ANR	923353	IfStatement	if ( table == NULL )		923341	1					
ANR	923354	Condition	table == NULL	1069:5:29216:29228	923341	0	True				
ANR	923355	EqualityExpression	table == NULL		923341	0		==			
ANR	923356	Identifier	table		923341	0					
ANR	923357	Identifier	NULL		923341	1					
ANR	923358	CompoundStatement		3:20:72:72	923341	1					
ANR	923359	ReturnStatement	return false ;	1070:2:29235:29247	923341	0	True				
ANR	923360	Identifier	false		923341	0					
ANR	923361	IdentifierDeclStatement	int count ;	1073:1:29254:29263	923341	2	True				
ANR	923362	IdentifierDecl	count		923341	0					
ANR	923363	IdentifierDeclType	int		923341	0					
ANR	923364	Identifier	count		923341	1					
ANR	923365	IfStatement	"if ( table -> lookup ( id , count ) == - 1 )"		923341	3					
ANR	923366	Condition	"table -> lookup ( id , count ) == - 1"	1074:5:29270:29299	923341	0	True				
ANR	923367	EqualityExpression	"table -> lookup ( id , count ) == - 1"		923341	0		==			
ANR	923368	CallExpression	"table -> lookup ( id , count )"		923341	0					
ANR	923369	Callee	table -> lookup		923341	0					
ANR	923370	PtrMemberAccess	table -> lookup		923341	0					
ANR	923371	Identifier	table		923341	0					
ANR	923372	Identifier	lookup		923341	1					
ANR	923373	ArgumentList	id		923341	1					
ANR	923374	Argument	id		923341	0					
ANR	923375	Identifier	id		923341	0					
ANR	923376	Argument	count		923341	1					
ANR	923377	Identifier	count		923341	0					
ANR	923378	UnaryOperationExpression	- 1		923341	1					
ANR	923379	UnaryOperator	-		923341	0					
ANR	923380	PrimaryExpression	1		923341	1					
ANR	923381	CompoundStatement		8:37:143:143	923341	1					
ANR	923382	ReturnStatement	return false ;	1075:2:29306:29318	923341	0	True				
ANR	923383	Identifier	false		923341	0					
ANR	923384	IfStatement	if ( table -> remove ( id ) == - 1 )		923341	4					
ANR	923385	Condition	table -> remove ( id ) == - 1	1077:5:29328:29350	923341	0	True				
ANR	923386	EqualityExpression	table -> remove ( id ) == - 1		923341	0		==			
ANR	923387	CallExpression	table -> remove ( id )		923341	0					
ANR	923388	Callee	table -> remove		923341	0					
ANR	923389	PtrMemberAccess	table -> remove		923341	0					
ANR	923390	Identifier	table		923341	0					
ANR	923391	Identifier	remove		923341	1					
ANR	923392	ArgumentList	id		923341	1					
ANR	923393	Argument	id		923341	0					
ANR	923394	Identifier	id		923341	0					
ANR	923395	UnaryOperationExpression	- 1		923341	1					
ANR	923396	UnaryOperator	-		923341	0					
ANR	923397	PrimaryExpression	1		923341	1					
ANR	923398	CompoundStatement		11:30:194:194	923341	1					
ANR	923399	ExpressionStatement	"EXCEPT ( ""IpVerify::FillHole: table entry removal error"" )"	1078:2:29357:29412	923341	0	True				
ANR	923400	CallExpression	"EXCEPT ( ""IpVerify::FillHole: table entry removal error"" )"		923341	0					
ANR	923401	Callee	EXCEPT		923341	0					
ANR	923402	Identifier	EXCEPT		923341	0					
ANR	923403	ArgumentList	"""IpVerify::FillHole: table entry removal error"""		923341	1					
ANR	923404	Argument	"""IpVerify::FillHole: table entry removal error"""		923341	0					
ANR	923405	PrimaryExpression	"""IpVerify::FillHole: table entry removal error"""		923341	0					
ANR	923406	ExpressionStatement	count --	1081:1:29419:29426	923341	5	True				
ANR	923407	PostIncDecOperationExpression	count --		923341	0					
ANR	923408	Identifier	count		923341	0					
ANR	923409	IncDec	--		923341	1					
ANR	923410	IfStatement	if ( count != 0 )		923341	6					
ANR	923411	Condition	count != 0	1083:5:29434:29443	923341	0	True				
ANR	923412	EqualityExpression	count != 0		923341	0		!=			
ANR	923413	Identifier	count		923341	0					
ANR	923414	PrimaryExpression	0		923341	1					
ANR	923415	CompoundStatement		17:17:287:287	923341	1					
ANR	923416	IfStatement	"if ( table -> insert ( id , count ) == - 1 )"		923341	0					
ANR	923417	Condition	"table -> insert ( id , count ) == - 1"	1084:6:29454:29483	923341	0	True				
ANR	923418	EqualityExpression	"table -> insert ( id , count ) == - 1"		923341	0		==			
ANR	923419	CallExpression	"table -> insert ( id , count )"		923341	0					
ANR	923420	Callee	table -> insert		923341	0					
ANR	923421	PtrMemberAccess	table -> insert		923341	0					
ANR	923422	Identifier	table		923341	0					
ANR	923423	Identifier	insert		923341	1					
ANR	923424	ArgumentList	id		923341	1					
ANR	923425	Argument	id		923341	0					
ANR	923426	Identifier	id		923341	0					
ANR	923427	Argument	count		923341	1					
ANR	923428	Identifier	count		923341	0					
ANR	923429	UnaryOperationExpression	- 1		923341	1					
ANR	923430	UnaryOperator	-		923341	0					
ANR	923431	PrimaryExpression	1		923341	1					
ANR	923432	CompoundStatement		18:38:327:327	923341	1					
ANR	923433	Statement	EXCEPT	1085:3:29491:29496	923341	0	True				
ANR	923434	Statement	(	1085:9:29497:29497	923341	1	True				
ANR	923435	Statement	"""IpVerify::FillHole: """	1085:10:29498:29519	923341	2	True				
ANR	923436	Statement	"""table entry insertion error"""	1086:14:29535:29563	923341	3	True				
ANR	923437	Statement	)	1086:43:29564:29564	923341	4	True				
ANR	923438	ExpressionStatement		1086:44:29565:29565	923341	5	True				
ANR	923439	IfStatement	if ( count == 0 )		923341	7					
ANR	923440	Condition	count == 0	1090:5:29580:29589	923341	0	True				
ANR	923441	EqualityExpression	count == 0		923341	0		==			
ANR	923442	Identifier	count		923341	0					
ANR	923443	PrimaryExpression	0		923341	1					
ANR	923444	CompoundStatement		24:17:433:433	923341	1					
ANR	923445	Statement	dprintf	1091:2:29596:29602	923341	0	True				
ANR	923446	Statement	(	1091:9:29603:29603	923341	1	True				
ANR	923447	Statement	D_SECURITY	1091:10:29604:29613	923341	2	True				
ANR	923448	Statement	","	1091:20:29614:29614	923341	3	True				
ANR	923449	Statement	"""IpVerify::FillHole: """	1092:10:29626:29647	923341	4	True				
ANR	923450	Statement	"""removed %s-level opening for %s\\n"""	1093:14:29663:29697	923341	5	True				
ANR	923451	Statement	","	1093:49:29698:29698	923341	6	True				
ANR	923452	Statement	PermString	1094:10:29710:29719	923341	7	True				
ANR	923453	Statement	(	1094:20:29720:29720	923341	8	True				
ANR	923454	Statement	perm	1094:21:29721:29724	923341	9	True				
ANR	923455	Statement	)	1094:25:29725:29725	923341	10	True				
ANR	923456	Statement	","	1094:26:29726:29726	923341	11	True				
ANR	923457	Statement	id	1095:10:29738:29739	923341	12	True				
ANR	923458	Statement	.	1095:12:29740:29740	923341	13	True				
ANR	923459	Statement	Value	1095:13:29741:29745	923341	14	True				
ANR	923460	Statement	(	1095:18:29746:29746	923341	15	True				
ANR	923461	Statement	)	1095:19:29747:29747	923341	16	True				
ANR	923462	Statement	)	1095:20:29748:29748	923341	17	True				
ANR	923463	ExpressionStatement		1095:21:29749:29749	923341	18	True				
ANR	923464	ElseStatement	else		923341	0					
ANR	923465	CompoundStatement		31:6:601:601	923341	0					
ANR	923466	Statement	dprintf	1098:2:29764:29770	923341	0	True				
ANR	923467	Statement	(	1098:9:29771:29771	923341	1	True				
ANR	923468	Statement	D_SECURITY	1098:10:29772:29781	923341	2	True				
ANR	923469	Statement	","	1098:20:29782:29782	923341	3	True				
ANR	923470	Statement	"""IpVerify::FillHole: """	1099:10:29794:29815	923341	4	True				
ANR	923471	Statement	"""open count at level %s for %s now %d\\n"""	1100:14:29831:29870	923341	5	True				
ANR	923472	Statement	","	1100:54:29871:29871	923341	6	True				
ANR	923473	Statement	PermString	1101:10:29883:29892	923341	7	True				
ANR	923474	Statement	(	1101:20:29893:29893	923341	8	True				
ANR	923475	Statement	perm	1101:21:29894:29897	923341	9	True				
ANR	923476	Statement	)	1101:25:29898:29898	923341	10	True				
ANR	923477	Statement	","	1101:26:29899:29899	923341	11	True				
ANR	923478	Statement	id	1102:10:29911:29912	923341	12	True				
ANR	923479	Statement	.	1102:12:29913:29913	923341	13	True				
ANR	923480	Statement	Value	1102:13:29914:29918	923341	14	True				
ANR	923481	Statement	(	1102:18:29919:29919	923341	15	True				
ANR	923482	Statement	)	1102:19:29920:29920	923341	16	True				
ANR	923483	Statement	","	1102:20:29921:29921	923341	17	True				
ANR	923484	Statement	count	1103:10:29933:29937	923341	18	True				
ANR	923485	Statement	)	1103:15:29938:29938	923341	19	True				
ANR	923486	ExpressionStatement		1103:16:29939:29939	923341	20	True				
ANR	923487	IdentifierDeclStatement	DCpermissionHierarchy hierarchy ( perm ) ;	1106:1:29946:29985	923341	8	True				
ANR	923488	IdentifierDecl	hierarchy ( perm )		923341	0					
ANR	923489	IdentifierDeclType	DCpermissionHierarchy		923341	0					
ANR	923490	Identifier	hierarchy		923341	1					
ANR	923491	Identifier	perm		923341	2					
ANR	923492	IdentifierDeclStatement	DCpermission const * implied_perms = hierarchy . getImpliedPerms ( ) ;	1107:1:29988:30049	923341	9	True				
ANR	923493	IdentifierDecl	* implied_perms = hierarchy . getImpliedPerms ( )		923341	0					
ANR	923494	IdentifierDeclType	DCpermission const *		923341	0					
ANR	923495	Identifier	implied_perms		923341	1					
ANR	923496	AssignmentExpression	* implied_perms = hierarchy . getImpliedPerms ( )		923341	2		=			
ANR	923497	Identifier	implied_perms		923341	0					
ANR	923498	CallExpression	hierarchy . getImpliedPerms ( )		923341	1					
ANR	923499	Callee	hierarchy . getImpliedPerms		923341	0					
ANR	923500	MemberAccess	hierarchy . getImpliedPerms		923341	0					
ANR	923501	Identifier	hierarchy		923341	0					
ANR	923502	Identifier	getImpliedPerms		923341	1					
ANR	923503	ArgumentList			923341	1					
ANR	923504	ForStatement	for ( ; implied_perms [ 0 ] != LAST_PERM ; implied_perms ++ )		923341	10					
ANR	923505	Condition	implied_perms [ 0 ] != LAST_PERM	1108:7:30058:30086	923341	0	True				
ANR	923506	EqualityExpression	implied_perms [ 0 ] != LAST_PERM		923341	0		!=			
ANR	923507	ArrayIndexing	implied_perms [ 0 ]		923341	0					
ANR	923508	Identifier	implied_perms		923341	0					
ANR	923509	PrimaryExpression	0		923341	1					
ANR	923510	Identifier	LAST_PERM		923341	1					
ANR	923511	PostIncDecOperationExpression	implied_perms ++	1108:38:30089:30103	923341	1	True				
ANR	923512	Identifier	implied_perms		923341	0					
ANR	923513	IncDec	++		923341	1					
ANR	923514	CompoundStatement		42:56:948:948	923341	2					
ANR	923515	IfStatement	if ( perm != implied_perms [ 0 ] )		923341	0					
ANR	923516	Condition	perm != implied_perms [ 0 ]	1109:6:30115:30138	923341	0	True				
ANR	923517	EqualityExpression	perm != implied_perms [ 0 ]		923341	0		!=			
ANR	923518	Identifier	perm		923341	0					
ANR	923519	ArrayIndexing	implied_perms [ 0 ]		923341	1					
ANR	923520	Identifier	implied_perms		923341	0					
ANR	923521	PrimaryExpression	0		923341	1					
ANR	923522	CompoundStatement		43:33:983:983	923341	1					
ANR	923523	ExpressionStatement	"FillHole ( implied_perms [ 0 ] , id )"	1110:3:30147:30176	923341	0	True				
ANR	923524	CallExpression	"FillHole ( implied_perms [ 0 ] , id )"		923341	0					
ANR	923525	Callee	FillHole		923341	0					
ANR	923526	Identifier	FillHole		923341	0					
ANR	923527	ArgumentList	implied_perms [ 0 ]		923341	1					
ANR	923528	Argument	implied_perms [ 0 ]		923341	0					
ANR	923529	ArrayIndexing	implied_perms [ 0 ]		923341	0					
ANR	923530	Identifier	implied_perms		923341	0					
ANR	923531	PrimaryExpression	0		923341	1					
ANR	923532	Argument	id		923341	1					
ANR	923533	Identifier	id		923341	0					
ANR	923534	ReturnStatement	return true ;	1114:1:30187:30198	923341	11	True				
ANR	923535	Identifier	true		923341	0					
ANR	923536	ReturnType	bool		923341	1					
ANR	923537	Identifier	IpVerify :: FillHole		923341	2					
ANR	923538	ParameterList	"DCpermission perm , MyString & id"		923341	3					
ANR	923539	Parameter	DCpermission perm	1066:19:29125:29141	923341	0	True				
ANR	923540	ParameterType	DCpermission		923341	0					
ANR	923541	Identifier	perm		923341	1					
ANR	923542	Parameter	MyString & id	1066:38:29144:29155	923341	1	True				
ANR	923543	ParameterType	MyString &		923341	0					
ANR	923544	Identifier	id		923341	1					
ANR	923545	CFGEntryNode	ENTRY		923341		True				
ANR	923546	CFGExitNode	EXIT		923341		True				
ANR	923547	Symbol	LAST_PERM		923341						
ANR	923548	Symbol	NULL		923341						
ANR	923549	Symbol	perm		923341						
ANR	923550	Symbol	* perm		923341						
ANR	923551	Symbol	hierarchy . getImpliedPerms		923341						
ANR	923552	Symbol	hierarchy		923341						
ANR	923553	Symbol	* implied_perms		923341						
ANR	923554	Symbol	false		923341						
ANR	923555	Symbol	count		923341						
ANR	923556	Symbol	* table		923341						
ANR	923557	Symbol	implied_perms		923341						
ANR	923558	Symbol	table -> insert		923341						
ANR	923559	Symbol	true		923341						
ANR	923560	Symbol	* PunchedHoleArray		923341						
ANR	923561	Symbol	table -> remove		923341						
ANR	923562	Symbol	id		923341						
ANR	923563	Symbol	PunchedHoleArray		923341						
ANR	923564	Symbol	table -> lookup		923341						
ANR	923565	Symbol	table		923341						
ANR	923566	Function	IpVerify :: PermTypeEntry :: ~PermTypeEntry	1117:0:30203:30691							
ANR	923567	FunctionDef	IpVerify :: PermTypeEntry :: ~PermTypeEntry ()		923566	0					
ANR	923568	CompoundStatement		1117:42:30245:30691	923566	0					
ANR	923569	IfStatement	if ( allow_hosts )		923566	0					
ANR	923570	Condition	allow_hosts	1118:5:30252:30262	923566	0	True				
ANR	923571	Identifier	allow_hosts		923566	0					
ANR	923572	Statement	delete	1119:2:30267:30272	923566	1	True				
ANR	923573	ExpressionStatement	allow_hosts	1119:9:30274:30285	923566	1	True				
ANR	923574	Identifier	allow_hosts		923566	0					
ANR	923575	IfStatement	if ( deny_hosts )		923566	2					
ANR	923576	Condition	deny_hosts	1120:5:30292:30301	923566	0	True				
ANR	923577	Identifier	deny_hosts		923566	0					
ANR	923578	Statement	delete	1121:2:30306:30311	923566	1	True				
ANR	923579	ExpressionStatement	deny_hosts	1121:9:30313:30323	923566	3	True				
ANR	923580	Identifier	deny_hosts		923566	0					
ANR	923581	IfStatement	if ( allow_users )		923566	4					
ANR	923582	Condition	allow_users	1122:5:30330:30340	923566	0	True				
ANR	923583	Identifier	allow_users		923566	0					
ANR	923584	CompoundStatement		8:2:120:137	923566	1					
ANR	923585	IdentifierDeclStatement	MyString key ;	1123:2:30347:30362	923566	0	True				
ANR	923586	IdentifierDecl	key		923566	0					
ANR	923587	IdentifierDeclType	MyString		923566	0					
ANR	923588	Identifier	key		923566	1					
ANR	923589	IdentifierDeclStatement	StringList * value ;	1124:2:30366:30383	923566	1	True				
ANR	923590	IdentifierDecl	* value		923566	0					
ANR	923591	IdentifierDeclType	StringList *		923566	0					
ANR	923592	Identifier	value		923566	1					
ANR	923593	ExpressionStatement	allow_users -> startIterations ( )	1125:2:30387:30417	923566	2	True				
ANR	923594	CallExpression	allow_users -> startIterations ( )		923566	0					
ANR	923595	Callee	allow_users -> startIterations		923566	0					
ANR	923596	PtrMemberAccess	allow_users -> startIterations		923566	0					
ANR	923597	Identifier	allow_users		923566	0					
ANR	923598	Identifier	startIterations		923566	1					
ANR	923599	ArgumentList			923566	1					
ANR	923600	WhileStatement	"while ( allow_users -> iterate ( key , value ) )"		923566	3					
ANR	923601	Condition	"allow_users -> iterate ( key , value )"	1126:9:30428:30459	923566	0	True				
ANR	923602	CallExpression	"allow_users -> iterate ( key , value )"		923566	0					
ANR	923603	Callee	allow_users -> iterate		923566	0					
ANR	923604	PtrMemberAccess	allow_users -> iterate		923566	0					
ANR	923605	Identifier	allow_users		923566	0					
ANR	923606	Identifier	iterate		923566	1					
ANR	923607	ArgumentList	key		923566	1					
ANR	923608	Argument	key		923566	0					
ANR	923609	Identifier	key		923566	0					
ANR	923610	Argument	value		923566	1					
ANR	923611	Identifier	value		923566	0					
ANR	923612	CompoundStatement		10:43:216:216	923566	1					
ANR	923613	Statement	delete	1127:3:30467:30472	923566	0	True				
ANR	923614	ExpressionStatement	value	1127:10:30474:30479	923566	1	True				
ANR	923615	Identifier	value		923566	0					
ANR	923616	Statement	delete	1129:2:30487:30492	923566	4	True				
ANR	923617	ExpressionStatement	allow_users	1129:9:30494:30505	923566	5	True				
ANR	923618	Identifier	allow_users		923566	0					
ANR	923619	IfStatement	if ( deny_users )		923566	5					
ANR	923620	Condition	deny_users	1131:5:30515:30524	923566	0	True				
ANR	923621	Identifier	deny_users		923566	0					
ANR	923622	CompoundStatement		17:2:304:321	923566	1					
ANR	923623	IdentifierDeclStatement	MyString key ;	1132:2:30531:30546	923566	0	True				
ANR	923624	IdentifierDecl	key		923566	0					
ANR	923625	IdentifierDeclType	MyString		923566	0					
ANR	923626	Identifier	key		923566	1					
ANR	923627	IdentifierDeclStatement	StringList * value ;	1133:2:30550:30567	923566	1	True				
ANR	923628	IdentifierDecl	* value		923566	0					
ANR	923629	IdentifierDeclType	StringList *		923566	0					
ANR	923630	Identifier	value		923566	1					
ANR	923631	ExpressionStatement	deny_users -> startIterations ( )	1134:2:30571:30600	923566	2	True				
ANR	923632	CallExpression	deny_users -> startIterations ( )		923566	0					
ANR	923633	Callee	deny_users -> startIterations		923566	0					
ANR	923634	PtrMemberAccess	deny_users -> startIterations		923566	0					
ANR	923635	Identifier	deny_users		923566	0					
ANR	923636	Identifier	startIterations		923566	1					
ANR	923637	ArgumentList			923566	1					
ANR	923638	WhileStatement	"while ( deny_users -> iterate ( key , value ) )"		923566	3					
ANR	923639	Condition	"deny_users -> iterate ( key , value )"	1135:9:30611:30641	923566	0	True				
ANR	923640	CallExpression	"deny_users -> iterate ( key , value )"		923566	0					
ANR	923641	Callee	deny_users -> iterate		923566	0					
ANR	923642	PtrMemberAccess	deny_users -> iterate		923566	0					
ANR	923643	Identifier	deny_users		923566	0					
ANR	923644	Identifier	iterate		923566	1					
ANR	923645	ArgumentList	key		923566	1					
ANR	923646	Argument	key		923566	0					
ANR	923647	Identifier	key		923566	0					
ANR	923648	Argument	value		923566	1					
ANR	923649	Identifier	value		923566	0					
ANR	923650	CompoundStatement		19:42:398:398	923566	1					
ANR	923651	Statement	delete	1136:3:30649:30654	923566	0	True				
ANR	923652	ExpressionStatement	value	1136:10:30656:30661	923566	1	True				
ANR	923653	Identifier	value		923566	0					
ANR	923654	Statement	delete	1138:2:30669:30674	923566	4	True				
ANR	923655	ExpressionStatement	deny_users	1138:9:30676:30686	923566	5	True				
ANR	923656	Identifier	deny_users		923566	0					
ANR	923657	Identifier	IpVerify :: PermTypeEntry :: ~PermTypeEntry		923566	1					
ANR	923658	ParameterList			923566	2					
ANR	923659	CFGEntryNode	ENTRY		923566		True				
ANR	923660	CFGExitNode	EXIT		923566		True				
ANR	923661	Symbol	allow_hosts		923566						
ANR	923662	Symbol	deny_users		923566						
ANR	923663	Symbol	deny_hosts		923566						
ANR	923664	Symbol	* deny_users		923566						
ANR	923665	Symbol	allow_users -> iterate		923566						
ANR	923666	Symbol	* allow_users		923566						
ANR	923667	Symbol	value		923566						
ANR	923668	Symbol	deny_users -> iterate		923566						
ANR	923669	Symbol	key		923566						
ANR	923670	Symbol	allow_users		923566						
ANR	923671	DeclStmt									
ANR	923672	Decl							_CrtMemState	_CrtMemState	s1
ANR	923673	Decl							_CrtMemState	_CrtMemState	s2
ANR	923674	Decl							_CrtMemState	_CrtMemState	s3
ANR	923675	Function	main	1149:0:30818:32110							
ANR	923676	FunctionDef	main ()		923675	0					
ANR	923677	CompoundStatement		1151:0:30829:32110	923675	0					
ANR	923678	IdentifierDeclStatement	char buf [ 50 ] ;	1152:1:30832:30844	923675	0	True				
ANR	923679	IdentifierDecl	buf [ 50 ]		923675	0					
ANR	923680	IdentifierDeclType	char [ 50 ]		923675	0					
ANR	923681	Identifier	buf		923675	1					
ANR	923682	PrimaryExpression	50		923675	2					
ANR	923683	IdentifierDeclStatement	char buf1 [ 50 ] ;	1153:1:30847:30860	923675	1	True				
ANR	923684	IdentifierDecl	buf1 [ 50 ]		923675	0					
ANR	923685	IdentifierDeclType	char [ 50 ]		923675	0					
ANR	923686	Identifier	buf1		923675	1					
ANR	923687	PrimaryExpression	50		923675	2					
ANR	923688	IdentifierDeclStatement	struct sockaddr_in sin ;	1154:1:30863:30885	923675	2	True				
ANR	923689	IdentifierDecl	sin		923675	0					
ANR	923690	IdentifierDeclType	struct sockaddr_in		923675	0					
ANR	923691	Identifier	sin		923675	1					
ANR	923692	IdentifierDeclStatement	SafeSock ssock ;	1155:1:30888:30902	923675	3	True				
ANR	923693	IdentifierDecl	ssock		923675	0					
ANR	923694	IdentifierDeclType	SafeSock		923675	0					
ANR	923695	Identifier	ssock		923675	1					
ANR	923696	IdentifierDeclStatement	IpVerify * userverify ;	1156:1:30905:30925	923675	4	True				
ANR	923697	IdentifierDecl	* userverify		923675	0					
ANR	923698	IdentifierDeclType	IpVerify *		923675	0					
ANR	923699	Identifier	userverify		923675	1					
ANR	923700	ExpressionStatement	"set_mySubSystem ( ""COLLECTOR"" , SUBSYSTEM_TYPE_COLLECTOR )"	1158:1:30929:30985	923675	5	True				
ANR	923701	CallExpression	"set_mySubSystem ( ""COLLECTOR"" , SUBSYSTEM_TYPE_COLLECTOR )"		923675	0					
ANR	923702	Callee	set_mySubSystem		923675	0					
ANR	923703	Identifier	set_mySubSystem		923675	0					
ANR	923704	ArgumentList	"""COLLECTOR"""		923675	1					
ANR	923705	Argument	"""COLLECTOR"""		923675	0					
ANR	923706	PrimaryExpression	"""COLLECTOR"""		923675	0					
ANR	923707	Argument	SUBSYSTEM_TYPE_COLLECTOR		923675	1					
ANR	923708	Identifier	SUBSYSTEM_TYPE_COLLECTOR		923675	0					
ANR	923709	ExpressionStatement	config ( )	1160:1:30989:30997	923675	6	True				
ANR	923710	CallExpression	config ( )		923675	0					
ANR	923711	Callee	config		923675	0					
ANR	923712	Identifier	config		923675	0					
ANR	923713	ArgumentList			923675	1					
ANR	923714	ExpressionStatement	_CrtMemCheckpoint ( & s1 )	1163:1:31014:31038	923675	7	True				
ANR	923715	CallExpression	_CrtMemCheckpoint ( & s1 )		923675	0					
ANR	923716	Callee	_CrtMemCheckpoint		923675	0					
ANR	923717	Identifier	_CrtMemCheckpoint		923675	0					
ANR	923718	ArgumentList	& s1		923675	1					
ANR	923719	Argument	& s1		923675	0					
ANR	923720	UnaryOperationExpression	& s1		923675	0					
ANR	923721	UnaryOperator	&		923675	0					
ANR	923722	Identifier	s1		923675	1					
ANR	923723	ExpressionStatement	userverify = new IpVerify ( )	1166:1:31049:31076	923675	8	True				
ANR	923724	AssignmentExpression	userverify = new IpVerify ( )		923675	0		=			
ANR	923725	Identifier	userverify		923675	0					
ANR	923726	UnaryExpression	new IpVerify ( )		923675	1					
ANR	923727	ExpressionStatement	userverify -> Init ( )	1168:1:31080:31098	923675	9	True				
ANR	923728	CallExpression	userverify -> Init ( )		923675	0					
ANR	923729	Callee	userverify -> Init		923675	0					
ANR	923730	PtrMemberAccess	userverify -> Init		923675	0					
ANR	923731	Identifier	userverify		923675	0					
ANR	923732	Identifier	Init		923675	1					
ANR	923733	ArgumentList			923675	1					
ANR	923734	ExpressionStatement	buf [ 0 ] = '\\0'	1170:1:31102:31115	923675	10	True				
ANR	923735	AssignmentExpression	buf [ 0 ] = '\\0'		923675	0		=			
ANR	923736	ArrayIndexing	buf [ 0 ]		923675	0					
ANR	923737	Identifier	buf		923675	0					
ANR	923738	PrimaryExpression	0		923675	1					
ANR	923739	PrimaryExpression	'\\0'		923675	1					
ANR	923740	WhileStatement	while ( 1 )		923675	11					
ANR	923741	Condition	1	1172:8:31126:31126	923675	0	True				
ANR	923742	PrimaryExpression	1		923675	0					
ANR	923743	CompoundStatement		22:12:300:300	923675	1					
ANR	923744	ExpressionStatement	"printf ( ""Enter test:\\n"" )"	1173:2:31134:31157	923675	0	True				
ANR	923745	CallExpression	"printf ( ""Enter test:\\n"" )"		923675	0					
ANR	923746	Callee	printf		923675	0					
ANR	923747	Identifier	printf		923675	0					
ANR	923748	ArgumentList	"""Enter test:\\n"""		923675	1					
ANR	923749	Argument	"""Enter test:\\n"""		923675	0					
ANR	923750	PrimaryExpression	"""Enter test:\\n"""		923675	0					
ANR	923751	ExpressionStatement	"scanf ( ""%s"" , buf )"	1174:2:31161:31176	923675	1	True				
ANR	923752	CallExpression	"scanf ( ""%s"" , buf )"		923675	0					
ANR	923753	Callee	scanf		923675	0					
ANR	923754	Identifier	scanf		923675	0					
ANR	923755	ArgumentList	"""%s"""		923675	1					
ANR	923756	Argument	"""%s"""		923675	0					
ANR	923757	PrimaryExpression	"""%s"""		923675	0					
ANR	923758	Argument	buf		923675	1					
ANR	923759	Identifier	buf		923675	0					
ANR	923760	IfStatement	"if ( strncmp ( buf , ""exit"" , 4 ) == 0 )"		923675	2					
ANR	923761	Condition	"strncmp ( buf , ""exit"" , 4 ) == 0"	1175:7:31185:31210	923675	0	True				
ANR	923762	EqualityExpression	"strncmp ( buf , ""exit"" , 4 ) == 0"		923675	0		==			
ANR	923763	CallExpression	"strncmp ( buf , ""exit"" , 4 )"		923675	0					
ANR	923764	Callee	strncmp		923675	0					
ANR	923765	Identifier	strncmp		923675	0					
ANR	923766	ArgumentList	buf		923675	1					
ANR	923767	Argument	buf		923675	0					
ANR	923768	Identifier	buf		923675	0					
ANR	923769	Argument	"""exit"""		923675	1					
ANR	923770	PrimaryExpression	"""exit"""		923675	0					
ANR	923771	Argument	4		923675	2					
ANR	923772	PrimaryExpression	4		923675	0					
ANR	923773	PrimaryExpression	0		923675	1					
ANR	923774	BreakStatement	break ;	1176:3:31217:31222	923675	1	True				
ANR	923775	IfStatement	"if ( strncmp ( buf , ""reinit"" , 6 ) == 0 )"		923675	3					
ANR	923776	Condition	"strncmp ( buf , ""reinit"" , 6 ) == 0"	1177:7:31231:31258	923675	0	True				
ANR	923777	EqualityExpression	"strncmp ( buf , ""reinit"" , 6 ) == 0"		923675	0		==			
ANR	923778	CallExpression	"strncmp ( buf , ""reinit"" , 6 )"		923675	0					
ANR	923779	Callee	strncmp		923675	0					
ANR	923780	Identifier	strncmp		923675	0					
ANR	923781	ArgumentList	buf		923675	1					
ANR	923782	Argument	buf		923675	0					
ANR	923783	Identifier	buf		923675	0					
ANR	923784	Argument	"""reinit"""		923675	1					
ANR	923785	PrimaryExpression	"""reinit"""		923675	0					
ANR	923786	Argument	6		923675	2					
ANR	923787	PrimaryExpression	6		923675	0					
ANR	923788	PrimaryExpression	0		923675	1					
ANR	923789	CompoundStatement		27:38:432:432	923675	1					
ANR	923790	ExpressionStatement	config ( )	1178:3:31267:31275	923675	0	True				
ANR	923791	CallExpression	config ( )		923675	0					
ANR	923792	Callee	config		923675	0					
ANR	923793	Identifier	config		923675	0					
ANR	923794	ArgumentList			923675	1					
ANR	923795	ExpressionStatement	userverify -> Init ( )	1179:3:31280:31298	923675	1	True				
ANR	923796	CallExpression	userverify -> Init ( )		923675	0					
ANR	923797	Callee	userverify -> Init		923675	0					
ANR	923798	PtrMemberAccess	userverify -> Init		923675	0					
ANR	923799	Identifier	userverify		923675	0					
ANR	923800	Identifier	Init		923675	1					
ANR	923801	ArgumentList			923675	1					
ANR	923802	ContinueStatement	continue ;	1180:3:31303:31311	923675	2	True				
ANR	923803	ExpressionStatement	"printf ( ""Verifying %s ... "" , buf )"	1182:2:31319:31350	923675	4	True				
ANR	923804	CallExpression	"printf ( ""Verifying %s ... "" , buf )"		923675	0					
ANR	923805	Callee	printf		923675	0					
ANR	923806	Identifier	printf		923675	0					
ANR	923807	ArgumentList	"""Verifying %s ... """		923675	1					
ANR	923808	Argument	"""Verifying %s ... """		923675	0					
ANR	923809	PrimaryExpression	"""Verifying %s ... """		923675	0					
ANR	923810	Argument	buf		923675	1					
ANR	923811	Identifier	buf		923675	0					
ANR	923812	ExpressionStatement	"sprintf ( buf1 , ""<%s:1970>"" , buf )"	1183:2:31354:31383	923675	5	True				
ANR	923813	CallExpression	"sprintf ( buf1 , ""<%s:1970>"" , buf )"		923675	0					
ANR	923814	Callee	sprintf		923675	0					
ANR	923815	Identifier	sprintf		923675	0					
ANR	923816	ArgumentList	buf1		923675	1					
ANR	923817	Argument	buf1		923675	0					
ANR	923818	Identifier	buf1		923675	0					
ANR	923819	Argument	"""<%s:1970>"""		923675	1					
ANR	923820	PrimaryExpression	"""<%s:1970>"""		923675	0					
ANR	923821	Argument	buf		923675	2					
ANR	923822	Identifier	buf		923675	0					
ANR	923823	ExpressionStatement	"string_to_sin ( buf1 , & sin )"	1184:2:31387:31411	923675	6	True				
ANR	923824	CallExpression	"string_to_sin ( buf1 , & sin )"		923675	0					
ANR	923825	Callee	string_to_sin		923675	0					
ANR	923826	Identifier	string_to_sin		923675	0					
ANR	923827	ArgumentList	buf1		923675	1					
ANR	923828	Argument	buf1		923675	0					
ANR	923829	Identifier	buf1		923675	0					
ANR	923830	Argument	& sin		923675	1					
ANR	923831	UnaryOperationExpression	& sin		923675	0					
ANR	923832	UnaryOperator	&		923675	0					
ANR	923833	Identifier	sin		923675	1					
ANR	923834	IfStatement	"if ( userverify -> Verify ( WRITE , & sin ) == TRUE )"		923675	7					
ANR	923835	Condition	"userverify -> Verify ( WRITE , & sin ) == TRUE"	1185:7:31420:31457	923675	0	True				
ANR	923836	EqualityExpression	"userverify -> Verify ( WRITE , & sin ) == TRUE"		923675	0		==			
ANR	923837	CallExpression	"userverify -> Verify ( WRITE , & sin )"		923675	0					
ANR	923838	Callee	userverify -> Verify		923675	0					
ANR	923839	PtrMemberAccess	userverify -> Verify		923675	0					
ANR	923840	Identifier	userverify		923675	0					
ANR	923841	Identifier	Verify		923675	1					
ANR	923842	ArgumentList	WRITE		923675	1					
ANR	923843	Argument	WRITE		923675	0					
ANR	923844	Identifier	WRITE		923675	0					
ANR	923845	Argument	& sin		923675	1					
ANR	923846	UnaryOperationExpression	& sin		923675	0					
ANR	923847	UnaryOperator	&		923675	0					
ANR	923848	Identifier	sin		923675	1					
ANR	923849	Identifier	TRUE		923675	1					
ANR	923850	ExpressionStatement	"printf ( ""ALLOW\\n"" )"	1186:3:31464:31481	923675	1	True				
ANR	923851	CallExpression	"printf ( ""ALLOW\\n"" )"		923675	0					
ANR	923852	Callee	printf		923675	0					
ANR	923853	Identifier	printf		923675	0					
ANR	923854	ArgumentList	"""ALLOW\\n"""		923675	1					
ANR	923855	Argument	"""ALLOW\\n"""		923675	0					
ANR	923856	PrimaryExpression	"""ALLOW\\n"""		923675	0					
ANR	923857	ElseStatement	else		923675	0					
ANR	923858	ExpressionStatement	"printf ( ""DENY\\n"" )"	1188:3:31493:31509	923675	0	True				
ANR	923859	CallExpression	"printf ( ""DENY\\n"" )"		923675	0					
ANR	923860	Callee	printf		923675	0					
ANR	923861	Identifier	printf		923675	0					
ANR	923862	ArgumentList	"""DENY\\n"""		923675	1					
ANR	923863	Argument	"""DENY\\n"""		923675	0					
ANR	923864	PrimaryExpression	"""DENY\\n"""		923675	0					
ANR	923865	Statement	delete	1191:1:31517:31522	923675	12	True				
ANR	923866	ExpressionStatement	userverify	1191:8:31524:31534	923675	13	True				
ANR	923867	Identifier	userverify		923675	0					
ANR	923868	ExpressionStatement	_CrtMemCheckpoint ( & s2 )	1194:1:31551:31575	923675	14	True				
ANR	923869	CallExpression	_CrtMemCheckpoint ( & s2 )		923675	0					
ANR	923870	Callee	_CrtMemCheckpoint		923675	0					
ANR	923871	Identifier	_CrtMemCheckpoint		923675	0					
ANR	923872	ArgumentList	& s2		923675	1					
ANR	923873	Argument	& s2		923675	0					
ANR	923874	UnaryOperationExpression	& s2		923675	0					
ANR	923875	UnaryOperator	&		923675	0					
ANR	923876	Identifier	s2		923675	1					
ANR	923877	ExpressionStatement	"_CrtSetReportMode ( _CRT_WARN , _CRTDBG_MODE_FILE )"	1196:4:31620:31667	923675	15	True				
ANR	923878	CallExpression	"_CrtSetReportMode ( _CRT_WARN , _CRTDBG_MODE_FILE )"		923675	0					
ANR	923879	Callee	_CrtSetReportMode		923675	0					
ANR	923880	Identifier	_CrtSetReportMode		923675	0					
ANR	923881	ArgumentList	_CRT_WARN		923675	1					
ANR	923882	Argument	_CRT_WARN		923675	0					
ANR	923883	Identifier	_CRT_WARN		923675	0					
ANR	923884	Argument	_CRTDBG_MODE_FILE		923675	1					
ANR	923885	Identifier	_CRTDBG_MODE_FILE		923675	0					
ANR	923886	ExpressionStatement	"_CrtSetReportFile ( _CRT_WARN , _CRTDBG_FILE_STDOUT )"	1197:4:31673:31722	923675	16	True				
ANR	923887	CallExpression	"_CrtSetReportFile ( _CRT_WARN , _CRTDBG_FILE_STDOUT )"		923675	0					
ANR	923888	Callee	_CrtSetReportFile		923675	0					
ANR	923889	Identifier	_CrtSetReportFile		923675	0					
ANR	923890	ArgumentList	_CRT_WARN		923675	1					
ANR	923891	Argument	_CRT_WARN		923675	0					
ANR	923892	Identifier	_CRT_WARN		923675	0					
ANR	923893	Argument	_CRTDBG_FILE_STDOUT		923675	1					
ANR	923894	Identifier	_CRTDBG_FILE_STDOUT		923675	0					
ANR	923895	ExpressionStatement	"_CrtSetReportMode ( _CRT_ERROR , _CRTDBG_MODE_FILE )"	1198:4:31728:31776	923675	17	True				
ANR	923896	CallExpression	"_CrtSetReportMode ( _CRT_ERROR , _CRTDBG_MODE_FILE )"		923675	0					
ANR	923897	Callee	_CrtSetReportMode		923675	0					
ANR	923898	Identifier	_CrtSetReportMode		923675	0					
ANR	923899	ArgumentList	_CRT_ERROR		923675	1					
ANR	923900	Argument	_CRT_ERROR		923675	0					
ANR	923901	Identifier	_CRT_ERROR		923675	0					
ANR	923902	Argument	_CRTDBG_MODE_FILE		923675	1					
ANR	923903	Identifier	_CRTDBG_MODE_FILE		923675	0					
ANR	923904	ExpressionStatement	"_CrtSetReportFile ( _CRT_ERROR , _CRTDBG_FILE_STDOUT )"	1199:4:31782:31832	923675	18	True				
ANR	923905	CallExpression	"_CrtSetReportFile ( _CRT_ERROR , _CRTDBG_FILE_STDOUT )"		923675	0					
ANR	923906	Callee	_CrtSetReportFile		923675	0					
ANR	923907	Identifier	_CrtSetReportFile		923675	0					
ANR	923908	ArgumentList	_CRT_ERROR		923675	1					
ANR	923909	Argument	_CRT_ERROR		923675	0					
ANR	923910	Identifier	_CRT_ERROR		923675	0					
ANR	923911	Argument	_CRTDBG_FILE_STDOUT		923675	1					
ANR	923912	Identifier	_CRTDBG_FILE_STDOUT		923675	0					
ANR	923913	ExpressionStatement	"_CrtSetReportMode ( _CRT_ASSERT , _CRTDBG_MODE_FILE )"	1200:4:31838:31887	923675	19	True				
ANR	923914	CallExpression	"_CrtSetReportMode ( _CRT_ASSERT , _CRTDBG_MODE_FILE )"		923675	0					
ANR	923915	Callee	_CrtSetReportMode		923675	0					
ANR	923916	Identifier	_CrtSetReportMode		923675	0					
ANR	923917	ArgumentList	_CRT_ASSERT		923675	1					
ANR	923918	Argument	_CRT_ASSERT		923675	0					
ANR	923919	Identifier	_CRT_ASSERT		923675	0					
ANR	923920	Argument	_CRTDBG_MODE_FILE		923675	1					
ANR	923921	Identifier	_CRTDBG_MODE_FILE		923675	0					
ANR	923922	ExpressionStatement	"_CrtSetReportFile ( _CRT_ASSERT , _CRTDBG_FILE_STDOUT )"	1201:4:31893:31944	923675	20	True				
ANR	923923	CallExpression	"_CrtSetReportFile ( _CRT_ASSERT , _CRTDBG_FILE_STDOUT )"		923675	0					
ANR	923924	Callee	_CrtSetReportFile		923675	0					
ANR	923925	Identifier	_CrtSetReportFile		923675	0					
ANR	923926	ArgumentList	_CRT_ASSERT		923675	1					
ANR	923927	Argument	_CRT_ASSERT		923675	0					
ANR	923928	Identifier	_CRT_ASSERT		923675	0					
ANR	923929	Argument	_CRTDBG_FILE_STDOUT		923675	1					
ANR	923930	Identifier	_CRTDBG_FILE_STDOUT		923675	0					
ANR	923931	IfStatement	"if ( _CrtMemDifference ( & s3 , & s1 , & s2 ) )"		923675	21					
ANR	923932	Condition	"_CrtMemDifference ( & s3 , & s1 , & s2 )"	1202:6:31952:31985	923675	0	True				
ANR	923933	CallExpression	"_CrtMemDifference ( & s3 , & s1 , & s2 )"		923675	0					
ANR	923934	Callee	_CrtMemDifference		923675	0					
ANR	923935	Identifier	_CrtMemDifference		923675	0					
ANR	923936	ArgumentList	& s3		923675	1					
ANR	923937	Argument	& s3		923675	0					
ANR	923938	UnaryOperationExpression	& s3		923675	0					
ANR	923939	UnaryOperator	&		923675	0					
ANR	923940	Identifier	s3		923675	1					
ANR	923941	Argument	& s1		923675	1					
ANR	923942	UnaryOperationExpression	& s1		923675	0					
ANR	923943	UnaryOperator	&		923675	0					
ANR	923944	Identifier	s1		923675	1					
ANR	923945	Argument	& s2		923675	2					
ANR	923946	UnaryOperationExpression	& s2		923675	0					
ANR	923947	UnaryOperator	&		923675	0					
ANR	923948	Identifier	s2		923675	1					
ANR	923949	ExpressionStatement	_CrtMemDumpStatistics ( & s3 )	1203:6:31995:32023	923675	1	True				
ANR	923950	CallExpression	_CrtMemDumpStatistics ( & s3 )		923675	0					
ANR	923951	Callee	_CrtMemDumpStatistics		923675	0					
ANR	923952	Identifier	_CrtMemDumpStatistics		923675	0					
ANR	923953	ArgumentList	& s3		923675	1					
ANR	923954	Argument	& s3		923675	0					
ANR	923955	UnaryOperationExpression	& s3		923675	0					
ANR	923956	UnaryOperator	&		923675	0					
ANR	923957	Identifier	s3		923675	1					
ANR	923958	ReturnStatement	return TRUE ;	1207:1:32097:32108	923675	22	True				
ANR	923959	Identifier	TRUE		923675	0					
ANR	923960	ReturnType	int		923675	1					
ANR	923961	Identifier	main		923675	2					
ANR	923962	ParameterList			923675	3					
ANR	923963	CFGEntryNode	ENTRY		923675		True				
ANR	923964	CFGExitNode	EXIT		923675		True				
ANR	923965	Symbol	* buf		923675						
ANR	923966	Symbol	userverify -> Verify		923675						
ANR	923967	Symbol	_CRTDBG_FILE_STDOUT		923675						
ANR	923968	Symbol	_CRT_ASSERT		923675						
ANR	923969	Symbol	userverify		923675						
ANR	923970	Symbol	& s2		923675						
ANR	923971	Symbol	& s1		923675						
ANR	923972	Symbol	TRUE		923675						
ANR	923973	Symbol	_CRT_ERROR		923675						
ANR	923974	Symbol	& s3		923675						
ANR	923975	Symbol	_CrtMemDifference		923675						
ANR	923976	Symbol	SUBSYSTEM_TYPE_COLLECTOR		923675						
ANR	923977	Symbol	WRITE		923675						
ANR	923978	Symbol	buf1		923675						
ANR	923979	Symbol	strncmp		923675						
ANR	923980	Symbol	buf		923675						
ANR	923981	Symbol	_CRT_WARN		923675						
ANR	923982	Symbol	sin		923675						
ANR	923983	Symbol	& sin		923675						
ANR	923984	Symbol	ssock		923675						
ANR	923985	Symbol	* userverify		923675						
ANR	923986	Symbol	_CRTDBG_MODE_FILE		923675						
