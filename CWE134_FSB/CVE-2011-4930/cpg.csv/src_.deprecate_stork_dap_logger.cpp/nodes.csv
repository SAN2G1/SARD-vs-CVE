command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2393920	File	data/converged/CVE-2011-4930_htcondor/src_.deprecate_stork_dap_logger.cpp								
ANR	2393921	DeclStmt									
ANR	2393922	Decl							extern char	extern char *	clientagenthost
ANR	2393923	Function	write_dap_log	37:0:1330:3635							
ANR	2393924	FunctionDef	"write_dap_log (const char * logfilename , const char * status , const char * param1 , const char * value1 , const char * param2 , const char * value2 , const char * param3 , const char * value3 , const char * param4 , const char * value4 , const char * param5 , const char * value5 , const char * param6 , const char * value6)"		2393923	0					
ANR	2393925	CompoundStatement		38:0:1634:3635	2393923	0					
ANR	2393926	IfStatement	"if ( ! param_boolean ( ""STORK_HISTORY_LOGGING"" , true ) )"		2393923	0					
ANR	2393927	Condition	"! param_boolean ( ""STORK_HISTORY_LOGGING"" , true )"	40:5:1644:1689	2393923	0	True				
ANR	2393928	UnaryOperationExpression	"! param_boolean ( ""STORK_HISTORY_LOGGING"" , true )"		2393923	0					
ANR	2393929	UnaryOperator	!		2393923	0					
ANR	2393930	CallExpression	"param_boolean ( ""STORK_HISTORY_LOGGING"" , true )"		2393923	1					
ANR	2393931	Callee	param_boolean		2393923	0					
ANR	2393932	Identifier	param_boolean		2393923	0					
ANR	2393933	ArgumentList	"""STORK_HISTORY_LOGGING"""		2393923	1					
ANR	2393934	Argument	"""STORK_HISTORY_LOGGING"""		2393923	0					
ANR	2393935	PrimaryExpression	"""STORK_HISTORY_LOGGING"""		2393923	0					
ANR	2393936	Argument	true		2393923	1					
ANR	2393937	Identifier	true		2393923	0					
ANR	2393938	ReturnStatement	return ;	40:54:1693:1699	2393923	1	True				
ANR	2393939	Statement	classad	45:2:1785:1791	2393923	1	True				
ANR	2393940	Statement	::	45:9:1792:1793	2393923	2	True				
ANR	2393941	Statement	ClassAd	45:11:1794:1800	2393923	3	True				
ANR	2393942	Statement	*	45:19:1802:1802	2393923	4	True				
ANR	2393943	Statement	classad	45:20:1803:1809	2393923	5	True				
ANR	2393944	Statement	=	45:28:1811:1811	2393923	6	True				
ANR	2393945	Statement	new	45:30:1813:1815	2393923	7	True				
ANR	2393946	ExpressionStatement	classad :: ClassAd	45:34:1817:1833	2393923	8	True				
ANR	2393947	Identifier	classad :: ClassAd		2393923	0					
ANR	2393948	IdentifierDeclStatement	classad :: ClassAdParser parser ;	46:2:1837:1866	2393923	9	True				
ANR	2393949	IdentifierDecl	parser		2393923	0					
ANR	2393950	IdentifierDeclType	classad :: ClassAdParser		2393923	0					
ANR	2393951	Identifier	parser		2393923	1					
ANR	2393952	IdentifierDeclStatement	classad :: ExprTree * expr = NULL ;	47:2:1870:1900	2393923	10	True				
ANR	2393953	IdentifierDecl	* expr = NULL		2393923	0					
ANR	2393954	IdentifierDeclType	classad :: ExprTree *		2393923	0					
ANR	2393955	Identifier	expr		2393923	1					
ANR	2393956	AssignmentExpression	* expr = NULL		2393923	2		=			
ANR	2393957	Identifier	NULL		2393923	0					
ANR	2393958	Identifier	NULL		2393923	1					
ANR	2393959	ExpressionStatement	"classad -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"	50:2:1938:1998	2393923	11	True				
ANR	2393960	CallExpression	"classad -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"		2393923	0					
ANR	2393961	Callee	classad -> Insert		2393923	0					
ANR	2393962	PtrMemberAccess	classad -> Insert		2393923	0					
ANR	2393963	Identifier	classad		2393923	0					
ANR	2393964	Identifier	Insert		2393923	1					
ANR	2393965	ArgumentList	"""timestamp"""		2393923	1					
ANR	2393966	Argument	"""timestamp"""		2393923	0					
ANR	2393967	PrimaryExpression	"""timestamp"""		2393923	0					
ANR	2393968	Argument	classad :: Literal :: MakeAbsTime ( )		2393923	1					
ANR	2393969	CallExpression	classad :: Literal :: MakeAbsTime ( )		2393923	0					
ANR	2393970	Callee	classad :: Literal :: MakeAbsTime		2393923	0					
ANR	2393971	Identifier	classad :: Literal :: MakeAbsTime		2393923	0					
ANR	2393972	ArgumentList			2393923	1					
ANR	2393973	IfStatement	"if ( ! parser . ParseExpression ( value1 , expr ) )"		2393923	12					
ANR	2393974	Condition	"! parser . ParseExpression ( value1 , expr )"	52:7:2008:2044	2393923	0	True				
ANR	2393975	UnaryOperationExpression	"! parser . ParseExpression ( value1 , expr )"		2393923	0					
ANR	2393976	UnaryOperator	!		2393923	0					
ANR	2393977	CallExpression	"parser . ParseExpression ( value1 , expr )"		2393923	1					
ANR	2393978	Callee	parser . ParseExpression		2393923	0					
ANR	2393979	MemberAccess	parser . ParseExpression		2393923	0					
ANR	2393980	Identifier	parser		2393923	0					
ANR	2393981	Identifier	ParseExpression		2393923	1					
ANR	2393982	ArgumentList	value1		2393923	1					
ANR	2393983	Argument	value1		2393923	0					
ANR	2393984	Identifier	value1		2393923	0					
ANR	2393985	Argument	expr		2393923	1					
ANR	2393986	Identifier	expr		2393923	0					
ANR	2393987	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	53:4:2052:2085	2393923	1	True				
ANR	2393988	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		2393923	0					
ANR	2393989	Callee	dprintf		2393923	0					
ANR	2393990	Identifier	dprintf		2393923	0					
ANR	2393991	ArgumentList	D_ALWAYS		2393923	1					
ANR	2393992	Argument	D_ALWAYS		2393923	0					
ANR	2393993	Identifier	D_ALWAYS		2393923	0					
ANR	2393994	Argument	"""Parse error\\n"""		2393923	1					
ANR	2393995	PrimaryExpression	"""Parse error\\n"""		2393923	0					
ANR	2393996	ExpressionStatement	"classad -> Insert ( param1 , expr )"	54:2:2089:2118	2393923	13	True				
ANR	2393997	CallExpression	"classad -> Insert ( param1 , expr )"		2393923	0					
ANR	2393998	Callee	classad -> Insert		2393923	0					
ANR	2393999	PtrMemberAccess	classad -> Insert		2393923	0					
ANR	2394000	Identifier	classad		2393923	0					
ANR	2394001	Identifier	Insert		2393923	1					
ANR	2394002	ArgumentList	param1		2393923	1					
ANR	2394003	Argument	param1		2393923	0					
ANR	2394004	Identifier	param1		2393923	0					
ANR	2394005	Argument	expr		2393923	1					
ANR	2394006	Identifier	expr		2393923	0					
ANR	2394007	IfStatement	if ( ( param2 != NULL ) && ( value2 != NULL ) )		2393923	14					
ANR	2394008	Condition	( param2 != NULL ) && ( value2 != NULL )	56:6:2129:2164	2393923	0	True				
ANR	2394009	AndExpression	( param2 != NULL ) && ( value2 != NULL )		2393923	0		&&			
ANR	2394010	EqualityExpression	param2 != NULL		2393923	0		!=			
ANR	2394011	Identifier	param2		2393923	0					
ANR	2394012	Identifier	NULL		2393923	1					
ANR	2394013	EqualityExpression	value2 != NULL		2393923	1		!=			
ANR	2394014	Identifier	value2		2393923	0					
ANR	2394015	Identifier	NULL		2393923	1					
ANR	2394016	CompoundStatement		19:43:531:531	2393923	1					
ANR	2394017	IfStatement	"if ( ! parser . ParseExpression ( value2 , expr ) )"		2393923	0					
ANR	2394018	Condition	"! parser . ParseExpression ( value2 , expr )"	57:9:2177:2213	2393923	0	True				
ANR	2394019	UnaryOperationExpression	"! parser . ParseExpression ( value2 , expr )"		2393923	0					
ANR	2394020	UnaryOperator	!		2393923	0					
ANR	2394021	CallExpression	"parser . ParseExpression ( value2 , expr )"		2393923	1					
ANR	2394022	Callee	parser . ParseExpression		2393923	0					
ANR	2394023	MemberAccess	parser . ParseExpression		2393923	0					
ANR	2394024	Identifier	parser		2393923	0					
ANR	2394025	Identifier	ParseExpression		2393923	1					
ANR	2394026	ArgumentList	value2		2393923	1					
ANR	2394027	Argument	value2		2393923	0					
ANR	2394028	Identifier	value2		2393923	0					
ANR	2394029	Argument	expr		2393923	1					
ANR	2394030	Identifier	expr		2393923	0					
ANR	2394031	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	58:6:2223:2256	2393923	1	True				
ANR	2394032	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		2393923	0					
ANR	2394033	Callee	dprintf		2393923	0					
ANR	2394034	Identifier	dprintf		2393923	0					
ANR	2394035	ArgumentList	D_ALWAYS		2393923	1					
ANR	2394036	Argument	D_ALWAYS		2393923	0					
ANR	2394037	Identifier	D_ALWAYS		2393923	0					
ANR	2394038	Argument	"""Parse error\\n"""		2393923	1					
ANR	2394039	PrimaryExpression	"""Parse error\\n"""		2393923	0					
ANR	2394040	ExpressionStatement	"classad -> Insert ( param2 , expr )"	59:4:2262:2291	2393923	1	True				
ANR	2394041	CallExpression	"classad -> Insert ( param2 , expr )"		2393923	0					
ANR	2394042	Callee	classad -> Insert		2393923	0					
ANR	2394043	PtrMemberAccess	classad -> Insert		2393923	0					
ANR	2394044	Identifier	classad		2393923	0					
ANR	2394045	Identifier	Insert		2393923	1					
ANR	2394046	ArgumentList	param2		2393923	1					
ANR	2394047	Argument	param2		2393923	0					
ANR	2394048	Identifier	param2		2393923	0					
ANR	2394049	Argument	expr		2393923	1					
ANR	2394050	Identifier	expr		2393923	0					
ANR	2394051	IfStatement	if ( ( param3 != NULL ) && ( value3 != NULL ) )		2393923	15					
ANR	2394052	Condition	( param3 != NULL ) && ( value3 != NULL )	62:6:2304:2339	2393923	0	True				
ANR	2394053	AndExpression	( param3 != NULL ) && ( value3 != NULL )		2393923	0		&&			
ANR	2394054	EqualityExpression	param3 != NULL		2393923	0		!=			
ANR	2394055	Identifier	param3		2393923	0					
ANR	2394056	Identifier	NULL		2393923	1					
ANR	2394057	EqualityExpression	value3 != NULL		2393923	1		!=			
ANR	2394058	Identifier	value3		2393923	0					
ANR	2394059	Identifier	NULL		2393923	1					
ANR	2394060	CompoundStatement		25:43:706:706	2393923	1					
ANR	2394061	IfStatement	"if ( ! parser . ParseExpression ( value3 , expr ) )"		2393923	0					
ANR	2394062	Condition	"! parser . ParseExpression ( value3 , expr )"	63:9:2352:2388	2393923	0	True				
ANR	2394063	UnaryOperationExpression	"! parser . ParseExpression ( value3 , expr )"		2393923	0					
ANR	2394064	UnaryOperator	!		2393923	0					
ANR	2394065	CallExpression	"parser . ParseExpression ( value3 , expr )"		2393923	1					
ANR	2394066	Callee	parser . ParseExpression		2393923	0					
ANR	2394067	MemberAccess	parser . ParseExpression		2393923	0					
ANR	2394068	Identifier	parser		2393923	0					
ANR	2394069	Identifier	ParseExpression		2393923	1					
ANR	2394070	ArgumentList	value3		2393923	1					
ANR	2394071	Argument	value3		2393923	0					
ANR	2394072	Identifier	value3		2393923	0					
ANR	2394073	Argument	expr		2393923	1					
ANR	2394074	Identifier	expr		2393923	0					
ANR	2394075	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	64:6:2398:2431	2393923	1	True				
ANR	2394076	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		2393923	0					
ANR	2394077	Callee	dprintf		2393923	0					
ANR	2394078	Identifier	dprintf		2393923	0					
ANR	2394079	ArgumentList	D_ALWAYS		2393923	1					
ANR	2394080	Argument	D_ALWAYS		2393923	0					
ANR	2394081	Identifier	D_ALWAYS		2393923	0					
ANR	2394082	Argument	"""Parse error\\n"""		2393923	1					
ANR	2394083	PrimaryExpression	"""Parse error\\n"""		2393923	0					
ANR	2394084	ExpressionStatement	"classad -> Insert ( param3 , expr )"	65:4:2437:2466	2393923	1	True				
ANR	2394085	CallExpression	"classad -> Insert ( param3 , expr )"		2393923	0					
ANR	2394086	Callee	classad -> Insert		2393923	0					
ANR	2394087	PtrMemberAccess	classad -> Insert		2393923	0					
ANR	2394088	Identifier	classad		2393923	0					
ANR	2394089	Identifier	Insert		2393923	1					
ANR	2394090	ArgumentList	param3		2393923	1					
ANR	2394091	Argument	param3		2393923	0					
ANR	2394092	Identifier	param3		2393923	0					
ANR	2394093	Argument	expr		2393923	1					
ANR	2394094	Identifier	expr		2393923	0					
ANR	2394095	IfStatement	if ( ( param4 != NULL ) && ( value4 != NULL ) )		2393923	16					
ANR	2394096	Condition	( param4 != NULL ) && ( value4 != NULL )	68:6:2479:2514	2393923	0	True				
ANR	2394097	AndExpression	( param4 != NULL ) && ( value4 != NULL )		2393923	0		&&			
ANR	2394098	EqualityExpression	param4 != NULL		2393923	0		!=			
ANR	2394099	Identifier	param4		2393923	0					
ANR	2394100	Identifier	NULL		2393923	1					
ANR	2394101	EqualityExpression	value4 != NULL		2393923	1		!=			
ANR	2394102	Identifier	value4		2393923	0					
ANR	2394103	Identifier	NULL		2393923	1					
ANR	2394104	CompoundStatement		31:43:881:881	2393923	1					
ANR	2394105	IfStatement	"if ( ! parser . ParseExpression ( value4 , expr ) )"		2393923	0					
ANR	2394106	Condition	"! parser . ParseExpression ( value4 , expr )"	69:9:2527:2563	2393923	0	True				
ANR	2394107	UnaryOperationExpression	"! parser . ParseExpression ( value4 , expr )"		2393923	0					
ANR	2394108	UnaryOperator	!		2393923	0					
ANR	2394109	CallExpression	"parser . ParseExpression ( value4 , expr )"		2393923	1					
ANR	2394110	Callee	parser . ParseExpression		2393923	0					
ANR	2394111	MemberAccess	parser . ParseExpression		2393923	0					
ANR	2394112	Identifier	parser		2393923	0					
ANR	2394113	Identifier	ParseExpression		2393923	1					
ANR	2394114	ArgumentList	value4		2393923	1					
ANR	2394115	Argument	value4		2393923	0					
ANR	2394116	Identifier	value4		2393923	0					
ANR	2394117	Argument	expr		2393923	1					
ANR	2394118	Identifier	expr		2393923	0					
ANR	2394119	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	70:6:2573:2606	2393923	1	True				
ANR	2394120	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		2393923	0					
ANR	2394121	Callee	dprintf		2393923	0					
ANR	2394122	Identifier	dprintf		2393923	0					
ANR	2394123	ArgumentList	D_ALWAYS		2393923	1					
ANR	2394124	Argument	D_ALWAYS		2393923	0					
ANR	2394125	Identifier	D_ALWAYS		2393923	0					
ANR	2394126	Argument	"""Parse error\\n"""		2393923	1					
ANR	2394127	PrimaryExpression	"""Parse error\\n"""		2393923	0					
ANR	2394128	ExpressionStatement	"classad -> Insert ( param4 , expr )"	71:4:2612:2641	2393923	1	True				
ANR	2394129	CallExpression	"classad -> Insert ( param4 , expr )"		2393923	0					
ANR	2394130	Callee	classad -> Insert		2393923	0					
ANR	2394131	PtrMemberAccess	classad -> Insert		2393923	0					
ANR	2394132	Identifier	classad		2393923	0					
ANR	2394133	Identifier	Insert		2393923	1					
ANR	2394134	ArgumentList	param4		2393923	1					
ANR	2394135	Argument	param4		2393923	0					
ANR	2394136	Identifier	param4		2393923	0					
ANR	2394137	Argument	expr		2393923	1					
ANR	2394138	Identifier	expr		2393923	0					
ANR	2394139	IfStatement	if ( ( param5 != NULL ) && ( value5 != NULL ) )		2393923	17					
ANR	2394140	Condition	( param5 != NULL ) && ( value5 != NULL )	74:6:2654:2689	2393923	0	True				
ANR	2394141	AndExpression	( param5 != NULL ) && ( value5 != NULL )		2393923	0		&&			
ANR	2394142	EqualityExpression	param5 != NULL		2393923	0		!=			
ANR	2394143	Identifier	param5		2393923	0					
ANR	2394144	Identifier	NULL		2393923	1					
ANR	2394145	EqualityExpression	value5 != NULL		2393923	1		!=			
ANR	2394146	Identifier	value5		2393923	0					
ANR	2394147	Identifier	NULL		2393923	1					
ANR	2394148	CompoundStatement		37:43:1056:1056	2393923	1					
ANR	2394149	IfStatement	"if ( ! parser . ParseExpression ( value5 , expr ) )"		2393923	0					
ANR	2394150	Condition	"! parser . ParseExpression ( value5 , expr )"	75:9:2702:2738	2393923	0	True				
ANR	2394151	UnaryOperationExpression	"! parser . ParseExpression ( value5 , expr )"		2393923	0					
ANR	2394152	UnaryOperator	!		2393923	0					
ANR	2394153	CallExpression	"parser . ParseExpression ( value5 , expr )"		2393923	1					
ANR	2394154	Callee	parser . ParseExpression		2393923	0					
ANR	2394155	MemberAccess	parser . ParseExpression		2393923	0					
ANR	2394156	Identifier	parser		2393923	0					
ANR	2394157	Identifier	ParseExpression		2393923	1					
ANR	2394158	ArgumentList	value5		2393923	1					
ANR	2394159	Argument	value5		2393923	0					
ANR	2394160	Identifier	value5		2393923	0					
ANR	2394161	Argument	expr		2393923	1					
ANR	2394162	Identifier	expr		2393923	0					
ANR	2394163	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	76:6:2748:2781	2393923	1	True				
ANR	2394164	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		2393923	0					
ANR	2394165	Callee	dprintf		2393923	0					
ANR	2394166	Identifier	dprintf		2393923	0					
ANR	2394167	ArgumentList	D_ALWAYS		2393923	1					
ANR	2394168	Argument	D_ALWAYS		2393923	0					
ANR	2394169	Identifier	D_ALWAYS		2393923	0					
ANR	2394170	Argument	"""Parse error\\n"""		2393923	1					
ANR	2394171	PrimaryExpression	"""Parse error\\n"""		2393923	0					
ANR	2394172	ExpressionStatement	"classad -> Insert ( param5 , expr )"	77:4:2787:2816	2393923	1	True				
ANR	2394173	CallExpression	"classad -> Insert ( param5 , expr )"		2393923	0					
ANR	2394174	Callee	classad -> Insert		2393923	0					
ANR	2394175	PtrMemberAccess	classad -> Insert		2393923	0					
ANR	2394176	Identifier	classad		2393923	0					
ANR	2394177	Identifier	Insert		2393923	1					
ANR	2394178	ArgumentList	param5		2393923	1					
ANR	2394179	Argument	param5		2393923	0					
ANR	2394180	Identifier	param5		2393923	0					
ANR	2394181	Argument	expr		2393923	1					
ANR	2394182	Identifier	expr		2393923	0					
ANR	2394183	IfStatement	if ( ( param6 != NULL ) && ( value6 != NULL ) )		2393923	18					
ANR	2394184	Condition	( param6 != NULL ) && ( value6 != NULL )	80:6:2829:2864	2393923	0	True				
ANR	2394185	AndExpression	( param6 != NULL ) && ( value6 != NULL )		2393923	0		&&			
ANR	2394186	EqualityExpression	param6 != NULL		2393923	0		!=			
ANR	2394187	Identifier	param6		2393923	0					
ANR	2394188	Identifier	NULL		2393923	1					
ANR	2394189	EqualityExpression	value6 != NULL		2393923	1		!=			
ANR	2394190	Identifier	value6		2393923	0					
ANR	2394191	Identifier	NULL		2393923	1					
ANR	2394192	CompoundStatement		43:43:1231:1231	2393923	1					
ANR	2394193	IfStatement	"if ( ! parser . ParseExpression ( value6 , expr ) )"		2393923	0					
ANR	2394194	Condition	"! parser . ParseExpression ( value6 , expr )"	81:9:2877:2913	2393923	0	True				
ANR	2394195	UnaryOperationExpression	"! parser . ParseExpression ( value6 , expr )"		2393923	0					
ANR	2394196	UnaryOperator	!		2393923	0					
ANR	2394197	CallExpression	"parser . ParseExpression ( value6 , expr )"		2393923	1					
ANR	2394198	Callee	parser . ParseExpression		2393923	0					
ANR	2394199	MemberAccess	parser . ParseExpression		2393923	0					
ANR	2394200	Identifier	parser		2393923	0					
ANR	2394201	Identifier	ParseExpression		2393923	1					
ANR	2394202	ArgumentList	value6		2393923	1					
ANR	2394203	Argument	value6		2393923	0					
ANR	2394204	Identifier	value6		2393923	0					
ANR	2394205	Argument	expr		2393923	1					
ANR	2394206	Identifier	expr		2393923	0					
ANR	2394207	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	82:6:2923:2956	2393923	1	True				
ANR	2394208	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		2393923	0					
ANR	2394209	Callee	dprintf		2393923	0					
ANR	2394210	Identifier	dprintf		2393923	0					
ANR	2394211	ArgumentList	D_ALWAYS		2393923	1					
ANR	2394212	Argument	D_ALWAYS		2393923	0					
ANR	2394213	Identifier	D_ALWAYS		2393923	0					
ANR	2394214	Argument	"""Parse error\\n"""		2393923	1					
ANR	2394215	PrimaryExpression	"""Parse error\\n"""		2393923	0					
ANR	2394216	ExpressionStatement	"classad -> Insert ( param6 , expr )"	83:4:2962:2991	2393923	1	True				
ANR	2394217	CallExpression	"classad -> Insert ( param6 , expr )"		2393923	0					
ANR	2394218	Callee	classad -> Insert		2393923	0					
ANR	2394219	PtrMemberAccess	classad -> Insert		2393923	0					
ANR	2394220	Identifier	classad		2393923	0					
ANR	2394221	Identifier	Insert		2393923	1					
ANR	2394222	ArgumentList	param6		2393923	1					
ANR	2394223	Argument	param6		2393923	0					
ANR	2394224	Identifier	param6		2393923	0					
ANR	2394225	Argument	expr		2393923	1					
ANR	2394226	Identifier	expr		2393923	0					
ANR	2394227	IfStatement	"if ( ! parser . ParseExpression ( status , expr ) )"		2393923	19					
ANR	2394228	Condition	"! parser . ParseExpression ( status , expr )"	86:7:3005:3041	2393923	0	True				
ANR	2394229	UnaryOperationExpression	"! parser . ParseExpression ( status , expr )"		2393923	0					
ANR	2394230	UnaryOperator	!		2393923	0					
ANR	2394231	CallExpression	"parser . ParseExpression ( status , expr )"		2393923	1					
ANR	2394232	Callee	parser . ParseExpression		2393923	0					
ANR	2394233	MemberAccess	parser . ParseExpression		2393923	0					
ANR	2394234	Identifier	parser		2393923	0					
ANR	2394235	Identifier	ParseExpression		2393923	1					
ANR	2394236	ArgumentList	status		2393923	1					
ANR	2394237	Argument	status		2393923	0					
ANR	2394238	Identifier	status		2393923	0					
ANR	2394239	Argument	expr		2393923	1					
ANR	2394240	Identifier	expr		2393923	0					
ANR	2394241	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	87:4:3049:3082	2393923	1	True				
ANR	2394242	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		2393923	0					
ANR	2394243	Callee	dprintf		2393923	0					
ANR	2394244	Identifier	dprintf		2393923	0					
ANR	2394245	ArgumentList	D_ALWAYS		2393923	1					
ANR	2394246	Argument	D_ALWAYS		2393923	0					
ANR	2394247	Identifier	D_ALWAYS		2393923	0					
ANR	2394248	Argument	"""Parse error\\n"""		2393923	1					
ANR	2394249	PrimaryExpression	"""Parse error\\n"""		2393923	0					
ANR	2394250	ExpressionStatement	"classad -> Insert ( ""status"" , expr )"	88:2:3086:3117	2393923	20	True				
ANR	2394251	CallExpression	"classad -> Insert ( ""status"" , expr )"		2393923	0					
ANR	2394252	Callee	classad -> Insert		2393923	0					
ANR	2394253	PtrMemberAccess	classad -> Insert		2393923	0					
ANR	2394254	Identifier	classad		2393923	0					
ANR	2394255	Identifier	Insert		2393923	1					
ANR	2394256	ArgumentList	"""status"""		2393923	1					
ANR	2394257	Argument	"""status"""		2393923	0					
ANR	2394258	PrimaryExpression	"""status"""		2393923	0					
ANR	2394259	Argument	expr		2393923	1					
ANR	2394260	Identifier	expr		2393923	0					
ANR	2394261	IdentifierDeclStatement	classad :: PrettyPrint unparser ;	92:2:3145:3174	2393923	21	True				
ANR	2394262	IdentifierDecl	unparser		2393923	0					
ANR	2394263	IdentifierDeclType	classad :: PrettyPrint		2393923	0					
ANR	2394264	Identifier	unparser		2393923	1					
ANR	2394265	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	93:2:3178:3203	2393923	22	True				
ANR	2394266	IdentifierDecl	"adbuffer = """""		2393923	0					
ANR	2394267	IdentifierDeclType	std :: string		2393923	0					
ANR	2394268	Identifier	adbuffer		2393923	1					
ANR	2394269	AssignmentExpression	"adbuffer = """""		2393923	2		=			
ANR	2394270	Identifier	adbuffer		2393923	0					
ANR	2394271	PrimaryExpression	""""""		2393923	1					
ANR	2394272	ExpressionStatement	"unparser . Unparse ( adbuffer , classad )"	94:2:3207:3242	2393923	23	True				
ANR	2394273	CallExpression	"unparser . Unparse ( adbuffer , classad )"		2393923	0					
ANR	2394274	Callee	unparser . Unparse		2393923	0					
ANR	2394275	MemberAccess	unparser . Unparse		2393923	0					
ANR	2394276	Identifier	unparser		2393923	0					
ANR	2394277	Identifier	Unparse		2393923	1					
ANR	2394278	ArgumentList	adbuffer		2393923	1					
ANR	2394279	Argument	adbuffer		2393923	0					
ANR	2394280	Identifier	adbuffer		2393923	0					
ANR	2394281	Argument	classad		2393923	1					
ANR	2394282	Identifier	classad		2393923	0					
ANR	2394283	Statement	delete	98:2:3290:3295	2393923	24	True				
ANR	2394284	ExpressionStatement	classad	98:9:3297:3304	2393923	25	True				
ANR	2394285	Identifier	classad		2393923	0					
ANR	2394286	IdentifierDeclStatement	FILE * flog ;	102:2:3376:3386	2393923	26	True				
ANR	2394287	IdentifierDecl	* flog		2393923	0					
ANR	2394288	IdentifierDeclType	FILE *		2393923	0					
ANR	2394289	Identifier	flog		2393923	1					
ANR	2394290	IfStatement	"if ( ( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL )"		2393923	27					
ANR	2394291	Condition	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"	105:6:3433:3485	2393923	0	True				
ANR	2394292	EqualityExpression	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"		2393923	0		==			
ANR	2394293	AssignmentExpression	"flog = safe_fopen_wrapper ( logfilename , ""a+"" )"		2393923	0		=			
ANR	2394294	Identifier	flog		2393923	0					
ANR	2394295	CallExpression	"safe_fopen_wrapper ( logfilename , ""a+"" )"		2393923	1					
ANR	2394296	Callee	safe_fopen_wrapper		2393923	0					
ANR	2394297	Identifier	safe_fopen_wrapper		2393923	0					
ANR	2394298	ArgumentList	logfilename		2393923	1					
ANR	2394299	Argument	logfilename		2393923	0					
ANR	2394300	Identifier	logfilename		2393923	0					
ANR	2394301	Argument	"""a+"""		2393923	1					
ANR	2394302	PrimaryExpression	"""a+"""		2393923	0					
ANR	2394303	Identifier	NULL		2393923	1					
ANR	2394304	CompoundStatement		68:60:1852:1852	2393923	1					
ANR	2394305	ExpressionStatement	"dprintf ( D_ALWAYS , ""cannot open logfile :%s...\\n"" , logfilename )"	106:4:3493:3559	2393923	0	True				
ANR	2394306	CallExpression	"dprintf ( D_ALWAYS , ""cannot open logfile :%s...\\n"" , logfilename )"		2393923	0					
ANR	2394307	Callee	dprintf		2393923	0					
ANR	2394308	Identifier	dprintf		2393923	0					
ANR	2394309	ArgumentList	D_ALWAYS		2393923	1					
ANR	2394310	Argument	D_ALWAYS		2393923	0					
ANR	2394311	Identifier	D_ALWAYS		2393923	0					
ANR	2394312	Argument	"""cannot open logfile :%s...\\n"""		2393923	1					
ANR	2394313	PrimaryExpression	"""cannot open logfile :%s...\\n"""		2393923	0					
ANR	2394314	Argument	logfilename		2393923	2					
ANR	2394315	Identifier	logfilename		2393923	0					
ANR	2394316	ExpressionStatement	exit ( 1 )	108:4:3565:3572	2393923	1	True				
ANR	2394317	CallExpression	exit ( 1 )		2393923	0					
ANR	2394318	Callee	exit		2393923	0					
ANR	2394319	Identifier	exit		2393923	0					
ANR	2394320	ArgumentList	1		2393923	1					
ANR	2394321	Argument	1		2393923	0					
ANR	2394322	PrimaryExpression	1		2393923	0					
ANR	2394323	ExpressionStatement	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"	110:2:3580:3616	2393923	28	True				
ANR	2394324	CallExpression	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"		2393923	0					
ANR	2394325	Callee	fprintf		2393923	0					
ANR	2394326	Identifier	fprintf		2393923	0					
ANR	2394327	ArgumentList	flog		2393923	1					
ANR	2394328	Argument	flog		2393923	0					
ANR	2394329	Identifier	flog		2393923	0					
ANR	2394330	Argument	"""%s"""		2393923	1					
ANR	2394331	PrimaryExpression	"""%s"""		2393923	0					
ANR	2394332	Argument	adbuffer . c_str ( )		2393923	2					
ANR	2394333	CallExpression	adbuffer . c_str ( )		2393923	0					
ANR	2394334	Callee	adbuffer . c_str		2393923	0					
ANR	2394335	MemberAccess	adbuffer . c_str		2393923	0					
ANR	2394336	Identifier	adbuffer		2393923	0					
ANR	2394337	Identifier	c_str		2393923	1					
ANR	2394338	ArgumentList			2393923	1					
ANR	2394339	ExpressionStatement	fclose ( flog )	111:2:3620:3632	2393923	29	True				
ANR	2394340	CallExpression	fclose ( flog )		2393923	0					
ANR	2394341	Callee	fclose		2393923	0					
ANR	2394342	Identifier	fclose		2393923	0					
ANR	2394343	ArgumentList	flog		2393923	1					
ANR	2394344	Argument	flog		2393923	0					
ANR	2394345	Identifier	flog		2393923	0					
ANR	2394346	ReturnType	void		2393923	1					
ANR	2394347	Identifier	write_dap_log		2393923	2					
ANR	2394348	ParameterList	"const char * logfilename , const char * status , const char * param1 , const char * value1 , const char * param2 , const char * value2 , const char * param3 , const char * value3 , const char * param4 , const char * value4 , const char * param5 , const char * value5 , const char * param6 , const char * value6"		2393923	3					
ANR	2394349	Parameter	const char * logfilename	37:19:1349:1371	2393923	0	True				
ANR	2394350	ParameterType	const char *		2393923	0					
ANR	2394351	Identifier	logfilename		2393923	1					
ANR	2394352	Parameter	const char * status	37:44:1374:1391	2393923	1	True				
ANR	2394353	ParameterType	const char *		2393923	0					
ANR	2394354	Identifier	status		2393923	1					
ANR	2394355	Parameter	const char * param1	37:64:1394:1411	2393923	2	True				
ANR	2394356	ParameterType	const char *		2393923	0					
ANR	2394357	Identifier	param1		2393923	1					
ANR	2394358	Parameter	const char * value1	37:84:1414:1431	2393923	3	True				
ANR	2394359	ParameterType	const char *		2393923	0					
ANR	2394360	Identifier	value1		2393923	1					
ANR	2394361	Parameter	const char * param2	37:104:1434:1451	2393923	4	True				
ANR	2394362	ParameterType	const char *		2393923	0					
ANR	2394363	Identifier	param2		2393923	1					
ANR	2394364	Parameter	const char * value2	37:124:1454:1471	2393923	5	True				
ANR	2394365	ParameterType	const char *		2393923	0					
ANR	2394366	Identifier	value2		2393923	1					
ANR	2394367	Parameter	const char * param3	37:144:1474:1491	2393923	6	True				
ANR	2394368	ParameterType	const char *		2393923	0					
ANR	2394369	Identifier	param3		2393923	1					
ANR	2394370	Parameter	const char * value3	37:164:1494:1511	2393923	7	True				
ANR	2394371	ParameterType	const char *		2393923	0					
ANR	2394372	Identifier	value3		2393923	1					
ANR	2394373	Parameter	const char * param4	37:184:1514:1531	2393923	8	True				
ANR	2394374	ParameterType	const char *		2393923	0					
ANR	2394375	Identifier	param4		2393923	1					
ANR	2394376	Parameter	const char * value4	37:204:1534:1551	2393923	9	True				
ANR	2394377	ParameterType	const char *		2393923	0					
ANR	2394378	Identifier	value4		2393923	1					
ANR	2394379	Parameter	const char * param5	37:224:1554:1571	2393923	10	True				
ANR	2394380	ParameterType	const char *		2393923	0					
ANR	2394381	Identifier	param5		2393923	1					
ANR	2394382	Parameter	const char * value5	37:244:1574:1591	2393923	11	True				
ANR	2394383	ParameterType	const char *		2393923	0					
ANR	2394384	Identifier	value5		2393923	1					
ANR	2394385	Parameter	const char * param6	37:264:1594:1611	2393923	12	True				
ANR	2394386	ParameterType	const char *		2393923	0					
ANR	2394387	Identifier	param6		2393923	1					
ANR	2394388	Parameter	const char * value6	37:284:1614:1631	2393923	13	True				
ANR	2394389	ParameterType	const char *		2393923	0					
ANR	2394390	Identifier	value6		2393923	1					
ANR	2394391	CFGEntryNode	ENTRY		2393923		True				
ANR	2394392	CFGExitNode	EXIT		2393923		True				
ANR	2394393	Symbol	value6		2393923						
ANR	2394394	Symbol	value5		2393923						
ANR	2394395	Symbol	value2		2393923						
ANR	2394396	Symbol	value1		2393923						
ANR	2394397	Symbol	value4		2393923						
ANR	2394398	Symbol	value3		2393923						
ANR	2394399	Symbol	expr		2393923						
ANR	2394400	Symbol	logfilename		2393923						
ANR	2394401	Symbol	param5		2393923						
ANR	2394402	Symbol	param6		2393923						
ANR	2394403	Symbol	NULL		2393923						
ANR	2394404	Symbol	parser . ParseExpression		2393923						
ANR	2394405	Symbol	safe_fopen_wrapper		2393923						
ANR	2394406	Symbol	D_ALWAYS		2393923						
ANR	2394407	Symbol	param_boolean		2393923						
ANR	2394408	Symbol	param3		2393923						
ANR	2394409	Symbol	param4		2393923						
ANR	2394410	Symbol	param1		2393923						
ANR	2394411	Symbol	flog		2393923						
ANR	2394412	Symbol	param2		2393923						
ANR	2394413	Symbol	parser		2393923						
ANR	2394414	Symbol	true		2393923						
ANR	2394415	Symbol	classad		2393923						
ANR	2394416	Symbol	unparser		2393923						
ANR	2394417	Symbol	adbuffer . c_str		2393923						
ANR	2394418	Symbol	classad :: Literal :: MakeAbsTime		2393923						
ANR	2394419	Symbol	status		2393923						
ANR	2394420	Symbol	adbuffer		2393923						
ANR	2394421	Function	write_classad_log	116:0:3715:4819							
ANR	2394422	FunctionDef	"write_classad_log (const char * logfilename , const char * status , classad :: ClassAd * classad)"		2394421	0					
ANR	2394423	CompoundStatement		117:0:3810:4819	2394421	0					
ANR	2394424	IdentifierDeclStatement	classad :: ClassAdParser parser ;	119:2:3815:3844	2394421	0	True				
ANR	2394425	IdentifierDecl	parser		2394421	0					
ANR	2394426	IdentifierDeclType	classad :: ClassAdParser		2394421	0					
ANR	2394427	Identifier	parser		2394421	1					
ANR	2394428	IdentifierDeclStatement	classad :: ExprTree * expr = NULL ;	120:2:3848:3878	2394421	1	True				
ANR	2394429	IdentifierDecl	* expr = NULL		2394421	0					
ANR	2394430	IdentifierDeclType	classad :: ExprTree *		2394421	0					
ANR	2394431	Identifier	expr		2394421	1					
ANR	2394432	AssignmentExpression	* expr = NULL		2394421	2		=			
ANR	2394433	Identifier	NULL		2394421	0					
ANR	2394434	Identifier	NULL		2394421	1					
ANR	2394435	IdentifierDeclStatement	classad :: PrettyPrint unparser ;	121:2:3882:3911	2394421	2	True				
ANR	2394436	IdentifierDecl	unparser		2394421	0					
ANR	2394437	IdentifierDeclType	classad :: PrettyPrint		2394421	0					
ANR	2394438	Identifier	unparser		2394421	1					
ANR	2394439	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	122:2:3915:3940	2394421	3	True				
ANR	2394440	IdentifierDecl	"adbuffer = """""		2394421	0					
ANR	2394441	IdentifierDeclType	std :: string		2394421	0					
ANR	2394442	Identifier	adbuffer		2394421	1					
ANR	2394443	AssignmentExpression	"adbuffer = """""		2394421	2		=			
ANR	2394444	Identifier	adbuffer		2394421	0					
ANR	2394445	PrimaryExpression	""""""		2394421	1					
ANR	2394446	IdentifierDeclStatement	FILE * flog ;	123:2:3944:3954	2394421	4	True				
ANR	2394447	IdentifierDecl	* flog		2394421	0					
ANR	2394448	IdentifierDeclType	FILE *		2394421	0					
ANR	2394449	Identifier	flog		2394421	1					
ANR	2394450	ExpressionStatement	"printf ( ""Logging the classad..\\n"" )"	125:2:3959:3992	2394421	5	True				
ANR	2394451	CallExpression	"printf ( ""Logging the classad..\\n"" )"		2394421	0					
ANR	2394452	Callee	printf		2394421	0					
ANR	2394453	Identifier	printf		2394421	0					
ANR	2394454	ArgumentList	"""Logging the classad..\\n"""		2394421	1					
ANR	2394455	Argument	"""Logging the classad..\\n"""		2394421	0					
ANR	2394456	PrimaryExpression	"""Logging the classad..\\n"""		2394421	0					
ANR	2394457	ExpressionStatement	"classad -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"	128:2:4030:4090	2394421	6	True				
ANR	2394458	CallExpression	"classad -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"		2394421	0					
ANR	2394459	Callee	classad -> Insert		2394421	0					
ANR	2394460	PtrMemberAccess	classad -> Insert		2394421	0					
ANR	2394461	Identifier	classad		2394421	0					
ANR	2394462	Identifier	Insert		2394421	1					
ANR	2394463	ArgumentList	"""timestamp"""		2394421	1					
ANR	2394464	Argument	"""timestamp"""		2394421	0					
ANR	2394465	PrimaryExpression	"""timestamp"""		2394421	0					
ANR	2394466	Argument	classad :: Literal :: MakeAbsTime ( )		2394421	1					
ANR	2394467	CallExpression	classad :: Literal :: MakeAbsTime ( )		2394421	0					
ANR	2394468	Callee	classad :: Literal :: MakeAbsTime		2394421	0					
ANR	2394469	Identifier	classad :: Literal :: MakeAbsTime		2394421	0					
ANR	2394470	ArgumentList			2394421	1					
ANR	2394471	ExpressionStatement	"printf ( ""*1*\\n"" )"	130:2:4095:4110	2394421	7	True				
ANR	2394472	CallExpression	"printf ( ""*1*\\n"" )"		2394421	0					
ANR	2394473	Callee	printf		2394421	0					
ANR	2394474	Identifier	printf		2394421	0					
ANR	2394475	ArgumentList	"""*1*\\n"""		2394421	1					
ANR	2394476	Argument	"""*1*\\n"""		2394421	0					
ANR	2394477	PrimaryExpression	"""*1*\\n"""		2394421	0					
ANR	2394478	IfStatement	"if ( ! parser . ParseExpression ( status , expr ) )"		2394421	8					
ANR	2394479	Condition	"! parser . ParseExpression ( status , expr )"	132:7:4120:4156	2394421	0	True				
ANR	2394480	UnaryOperationExpression	"! parser . ParseExpression ( status , expr )"		2394421	0					
ANR	2394481	UnaryOperator	!		2394421	0					
ANR	2394482	CallExpression	"parser . ParseExpression ( status , expr )"		2394421	1					
ANR	2394483	Callee	parser . ParseExpression		2394421	0					
ANR	2394484	MemberAccess	parser . ParseExpression		2394421	0					
ANR	2394485	Identifier	parser		2394421	0					
ANR	2394486	Identifier	ParseExpression		2394421	1					
ANR	2394487	ArgumentList	status		2394421	1					
ANR	2394488	Argument	status		2394421	0					
ANR	2394489	Identifier	status		2394421	0					
ANR	2394490	Argument	expr		2394421	1					
ANR	2394491	Identifier	expr		2394421	0					
ANR	2394492	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	133:4:4164:4197	2394421	1	True				
ANR	2394493	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		2394421	0					
ANR	2394494	Callee	dprintf		2394421	0					
ANR	2394495	Identifier	dprintf		2394421	0					
ANR	2394496	ArgumentList	D_ALWAYS		2394421	1					
ANR	2394497	Argument	D_ALWAYS		2394421	0					
ANR	2394498	Identifier	D_ALWAYS		2394421	0					
ANR	2394499	Argument	"""Parse error\\n"""		2394421	1					
ANR	2394500	PrimaryExpression	"""Parse error\\n"""		2394421	0					
ANR	2394501	ExpressionStatement	"classad -> Insert ( ""status"" , expr )"	134:2:4201:4232	2394421	9	True				
ANR	2394502	CallExpression	"classad -> Insert ( ""status"" , expr )"		2394421	0					
ANR	2394503	Callee	classad -> Insert		2394421	0					
ANR	2394504	PtrMemberAccess	classad -> Insert		2394421	0					
ANR	2394505	Identifier	classad		2394421	0					
ANR	2394506	Identifier	Insert		2394421	1					
ANR	2394507	ArgumentList	"""status"""		2394421	1					
ANR	2394508	Argument	"""status"""		2394421	0					
ANR	2394509	PrimaryExpression	"""status"""		2394421	0					
ANR	2394510	Argument	expr		2394421	1					
ANR	2394511	Identifier	expr		2394421	0					
ANR	2394512	ExpressionStatement	"printf ( ""*2*\\n"" )"	136:2:4237:4252	2394421	10	True				
ANR	2394513	CallExpression	"printf ( ""*2*\\n"" )"		2394421	0					
ANR	2394514	Callee	printf		2394421	0					
ANR	2394515	Identifier	printf		2394421	0					
ANR	2394516	ArgumentList	"""*2*\\n"""		2394421	1					
ANR	2394517	Argument	"""*2*\\n"""		2394421	0					
ANR	2394518	PrimaryExpression	"""*2*\\n"""		2394421	0					
ANR	2394519	ExpressionStatement	"unparser . Unparse ( adbuffer , classad )"	147:2:4472:4507	2394421	11	True				
ANR	2394520	CallExpression	"unparser . Unparse ( adbuffer , classad )"		2394421	0					
ANR	2394521	Callee	unparser . Unparse		2394421	0					
ANR	2394522	MemberAccess	unparser . Unparse		2394421	0					
ANR	2394523	Identifier	unparser		2394421	0					
ANR	2394524	Identifier	Unparse		2394421	1					
ANR	2394525	ArgumentList	adbuffer		2394421	1					
ANR	2394526	Argument	adbuffer		2394421	0					
ANR	2394527	Identifier	adbuffer		2394421	0					
ANR	2394528	Argument	classad		2394421	1					
ANR	2394529	Identifier	classad		2394421	0					
ANR	2394530	ExpressionStatement	"printf ( ""*3*\\n"" )"	149:2:4514:4529	2394421	12	True				
ANR	2394531	CallExpression	"printf ( ""*3*\\n"" )"		2394421	0					
ANR	2394532	Callee	printf		2394421	0					
ANR	2394533	Identifier	printf		2394421	0					
ANR	2394534	ArgumentList	"""*3*\\n"""		2394421	1					
ANR	2394535	Argument	"""*3*\\n"""		2394421	0					
ANR	2394536	PrimaryExpression	"""*3*\\n"""		2394421	0					
ANR	2394537	IfStatement	"if ( ( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL )"		2394421	13					
ANR	2394538	Condition	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"	152:6:4576:4628	2394421	0	True				
ANR	2394539	EqualityExpression	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"		2394421	0		==			
ANR	2394540	AssignmentExpression	"flog = safe_fopen_wrapper ( logfilename , ""a+"" )"		2394421	0		=			
ANR	2394541	Identifier	flog		2394421	0					
ANR	2394542	CallExpression	"safe_fopen_wrapper ( logfilename , ""a+"" )"		2394421	1					
ANR	2394543	Callee	safe_fopen_wrapper		2394421	0					
ANR	2394544	Identifier	safe_fopen_wrapper		2394421	0					
ANR	2394545	ArgumentList	logfilename		2394421	1					
ANR	2394546	Argument	logfilename		2394421	0					
ANR	2394547	Identifier	logfilename		2394421	0					
ANR	2394548	Argument	"""a+"""		2394421	1					
ANR	2394549	PrimaryExpression	"""a+"""		2394421	0					
ANR	2394550	Identifier	NULL		2394421	1					
ANR	2394551	CompoundStatement		36:60:819:819	2394421	1					
ANR	2394552	ExpressionStatement	"dprintf ( D_ALWAYS , ""cannot open logfile :%s...\\n"" , logfilename )"	153:4:4636:4702	2394421	0	True				
ANR	2394553	CallExpression	"dprintf ( D_ALWAYS , ""cannot open logfile :%s...\\n"" , logfilename )"		2394421	0					
ANR	2394554	Callee	dprintf		2394421	0					
ANR	2394555	Identifier	dprintf		2394421	0					
ANR	2394556	ArgumentList	D_ALWAYS		2394421	1					
ANR	2394557	Argument	D_ALWAYS		2394421	0					
ANR	2394558	Identifier	D_ALWAYS		2394421	0					
ANR	2394559	Argument	"""cannot open logfile :%s...\\n"""		2394421	1					
ANR	2394560	PrimaryExpression	"""cannot open logfile :%s...\\n"""		2394421	0					
ANR	2394561	Argument	logfilename		2394421	2					
ANR	2394562	Identifier	logfilename		2394421	0					
ANR	2394563	ExpressionStatement	exit ( 1 )	155:4:4708:4715	2394421	1	True				
ANR	2394564	CallExpression	exit ( 1 )		2394421	0					
ANR	2394565	Callee	exit		2394421	0					
ANR	2394566	Identifier	exit		2394421	0					
ANR	2394567	ArgumentList	1		2394421	1					
ANR	2394568	Argument	1		2394421	0					
ANR	2394569	PrimaryExpression	1		2394421	0					
ANR	2394570	ExpressionStatement	"printf ( ""*4*\\n"" )"	158:2:4724:4739	2394421	14	True				
ANR	2394571	CallExpression	"printf ( ""*4*\\n"" )"		2394421	0					
ANR	2394572	Callee	printf		2394421	0					
ANR	2394573	Identifier	printf		2394421	0					
ANR	2394574	ArgumentList	"""*4*\\n"""		2394421	1					
ANR	2394575	Argument	"""*4*\\n"""		2394421	0					
ANR	2394576	PrimaryExpression	"""*4*\\n"""		2394421	0					
ANR	2394577	ExpressionStatement	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"	160:2:4744:4780	2394421	15	True				
ANR	2394578	CallExpression	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"		2394421	0					
ANR	2394579	Callee	fprintf		2394421	0					
ANR	2394580	Identifier	fprintf		2394421	0					
ANR	2394581	ArgumentList	flog		2394421	1					
ANR	2394582	Argument	flog		2394421	0					
ANR	2394583	Identifier	flog		2394421	0					
ANR	2394584	Argument	"""%s"""		2394421	1					
ANR	2394585	PrimaryExpression	"""%s"""		2394421	0					
ANR	2394586	Argument	adbuffer . c_str ( )		2394421	2					
ANR	2394587	CallExpression	adbuffer . c_str ( )		2394421	0					
ANR	2394588	Callee	adbuffer . c_str		2394421	0					
ANR	2394589	MemberAccess	adbuffer . c_str		2394421	0					
ANR	2394590	Identifier	adbuffer		2394421	0					
ANR	2394591	Identifier	c_str		2394421	1					
ANR	2394592	ArgumentList			2394421	1					
ANR	2394593	ExpressionStatement	"printf ( ""*5*\\n"" )"	162:2:4785:4800	2394421	16	True				
ANR	2394594	CallExpression	"printf ( ""*5*\\n"" )"		2394421	0					
ANR	2394595	Callee	printf		2394421	0					
ANR	2394596	Identifier	printf		2394421	0					
ANR	2394597	ArgumentList	"""*5*\\n"""		2394421	1					
ANR	2394598	Argument	"""*5*\\n"""		2394421	0					
ANR	2394599	PrimaryExpression	"""*5*\\n"""		2394421	0					
ANR	2394600	ExpressionStatement	fclose ( flog )	164:2:4805:4817	2394421	17	True				
ANR	2394601	CallExpression	fclose ( flog )		2394421	0					
ANR	2394602	Callee	fclose		2394421	0					
ANR	2394603	Identifier	fclose		2394421	0					
ANR	2394604	ArgumentList	flog		2394421	1					
ANR	2394605	Argument	flog		2394421	0					
ANR	2394606	Identifier	flog		2394421	0					
ANR	2394607	ReturnType	void		2394421	1					
ANR	2394608	Identifier	write_classad_log		2394421	2					
ANR	2394609	ParameterList	"const char * logfilename , const char * status , classad :: ClassAd * classad"		2394421	3					
ANR	2394610	Parameter	const char * logfilename	116:23:3738:3760	2394421	0	True				
ANR	2394611	ParameterType	const char *		2394421	0					
ANR	2394612	Identifier	logfilename		2394421	1					
ANR	2394613	Parameter	const char * status	116:48:3763:3780	2394421	1	True				
ANR	2394614	ParameterType	const char *		2394421	0					
ANR	2394615	Identifier	status		2394421	1					
ANR	2394616	Parameter	classad :: ClassAd * classad	116:68:3783:3807	2394421	2	True				
ANR	2394617	ParameterType	classad :: ClassAd *		2394421	0					
ANR	2394618	Identifier	classad		2394421	1					
ANR	2394619	CFGEntryNode	ENTRY		2394421		True				
ANR	2394620	CFGExitNode	EXIT		2394421		True				
ANR	2394621	Symbol	NULL		2394421						
ANR	2394622	Symbol	parser . ParseExpression		2394421						
ANR	2394623	Symbol	safe_fopen_wrapper		2394421						
ANR	2394624	Symbol	D_ALWAYS		2394421						
ANR	2394625	Symbol	flog		2394421						
ANR	2394626	Symbol	parser		2394421						
ANR	2394627	Symbol	classad		2394421						
ANR	2394628	Symbol	expr		2394421						
ANR	2394629	Symbol	unparser		2394421						
ANR	2394630	Symbol	logfilename		2394421						
ANR	2394631	Symbol	adbuffer . c_str		2394421						
ANR	2394632	Symbol	classad :: Literal :: MakeAbsTime		2394421						
ANR	2394633	Symbol	status		2394421						
ANR	2394634	Symbol	adbuffer		2394421						
ANR	2394635	Function	write_collection_log	168:0:4899:6392							
ANR	2394636	FunctionDef	"write_collection_log (classad :: ClassAdCollection * dapcollection , const char * dap_id , const char * update)"		2394635	0					
ANR	2394637	CompoundStatement		170:0:5014:6392	2394635	0					
ANR	2394638	IdentifierDeclStatement	classad :: ClassAdParser parser ;	172:2:5056:5085	2394635	0	True				
ANR	2394639	IdentifierDecl	parser		2394635	0					
ANR	2394640	IdentifierDeclType	classad :: ClassAdParser		2394635	0					
ANR	2394641	Identifier	parser		2394635	1					
ANR	2394642	IdentifierDeclStatement	bool status ;	173:2:5089:5100	2394635	1	True				
ANR	2394643	IdentifierDecl	status		2394635	0					
ANR	2394644	IdentifierDeclType	bool		2394635	0					
ANR	2394645	Identifier	status		2394635	1					
ANR	2394646	IdentifierDeclStatement	std :: string key ;	174:2:5104:5119	2394635	2	True				
ANR	2394647	IdentifierDecl	key		2394635	0					
ANR	2394648	IdentifierDeclType	std :: string		2394635	0					
ANR	2394649	Identifier	key		2394635	1					
ANR	2394650	ExpressionStatement	"key = ""key = """	175:2:5123:5137	2394635	3	True				
ANR	2394651	AssignmentExpression	"key = ""key = """		2394635	0		=			
ANR	2394652	Identifier	key		2394635	0					
ANR	2394653	PrimaryExpression	"""key = """		2394635	1					
ANR	2394654	ExpressionStatement	key += dap_id	176:2:5141:5154	2394635	4	True				
ANR	2394655	AssignmentExpression	key += dap_id		2394635	0		+=			
ANR	2394656	Identifier	key		2394635	0					
ANR	2394657	Identifier	dap_id		2394635	1					
ANR	2394658	IdentifierDeclStatement	"std :: string partial_s = ""[ "" ;"	178:2:5161:5189	2394635	5	True				
ANR	2394659	IdentifierDecl	"partial_s = ""[ """		2394635	0					
ANR	2394660	IdentifierDeclType	std :: string		2394635	0					
ANR	2394661	Identifier	partial_s		2394635	1					
ANR	2394662	AssignmentExpression	"partial_s = ""[ """		2394635	2		=			
ANR	2394663	Identifier	partial_s		2394635	0					
ANR	2394664	PrimaryExpression	"""[ """		2394635	1					
ANR	2394665	ExpressionStatement	partial_s += update	179:2:5193:5212	2394635	6	True				
ANR	2394666	AssignmentExpression	partial_s += update		2394635	0		+=			
ANR	2394667	Identifier	partial_s		2394635	0					
ANR	2394668	Identifier	update		2394635	1					
ANR	2394669	ExpressionStatement	"partial_s += "" ]"""	180:2:5216:5233	2394635	7	True				
ANR	2394670	AssignmentExpression	"partial_s += "" ]"""		2394635	0		+=			
ANR	2394671	Identifier	partial_s		2394635	0					
ANR	2394672	PrimaryExpression	""" ]"""		2394635	1					
ANR	2394673	IdentifierDeclStatement	"classad :: ClassAd * partialAd = parser . ParseClassAd ( partial_s , true ) ;"	182:2:5240:5306	2394635	8	True				
ANR	2394674	IdentifierDecl	"* partialAd = parser . ParseClassAd ( partial_s , true )"		2394635	0					
ANR	2394675	IdentifierDeclType	classad :: ClassAd *		2394635	0					
ANR	2394676	Identifier	partialAd		2394635	1					
ANR	2394677	AssignmentExpression	"* partialAd = parser . ParseClassAd ( partial_s , true )"		2394635	2		=			
ANR	2394678	Identifier	partialAd		2394635	0					
ANR	2394679	CallExpression	"parser . ParseClassAd ( partial_s , true )"		2394635	1					
ANR	2394680	Callee	parser . ParseClassAd		2394635	0					
ANR	2394681	MemberAccess	parser . ParseClassAd		2394635	0					
ANR	2394682	Identifier	parser		2394635	0					
ANR	2394683	Identifier	ParseClassAd		2394635	1					
ANR	2394684	ArgumentList	partial_s		2394635	1					
ANR	2394685	Argument	partial_s		2394635	0					
ANR	2394686	Identifier	partial_s		2394635	0					
ANR	2394687	Argument	true		2394635	1					
ANR	2394688	Identifier	true		2394635	0					
ANR	2394689	IfStatement	if ( partialAd == NULL )		2394635	9					
ANR	2394690	Condition	partialAd == NULL	183:6:5314:5330	2394635	0	True				
ANR	2394691	EqualityExpression	partialAd == NULL		2394635	0		==			
ANR	2394692	Identifier	partialAd		2394635	0					
ANR	2394693	Identifier	NULL		2394635	1					
ANR	2394694	CompoundStatement		14:25:318:318	2394635	1					
ANR	2394695	ExpressionStatement	"dprintf ( D_ALWAYS , ""ParseClassAd partial %s failed! dap_id:%s\\n"" , partial_s . c_str ( ) , dap_id )"	184:1:5336:5429	2394635	0	True				
ANR	2394696	CallExpression	"dprintf ( D_ALWAYS , ""ParseClassAd partial %s failed! dap_id:%s\\n"" , partial_s . c_str ( ) , dap_id )"		2394635	0					
ANR	2394697	Callee	dprintf		2394635	0					
ANR	2394698	Identifier	dprintf		2394635	0					
ANR	2394699	ArgumentList	D_ALWAYS		2394635	1					
ANR	2394700	Argument	D_ALWAYS		2394635	0					
ANR	2394701	Identifier	D_ALWAYS		2394635	0					
ANR	2394702	Argument	"""ParseClassAd partial %s failed! dap_id:%s\\n"""		2394635	1					
ANR	2394703	PrimaryExpression	"""ParseClassAd partial %s failed! dap_id:%s\\n"""		2394635	0					
ANR	2394704	Argument	partial_s . c_str ( )		2394635	2					
ANR	2394705	CallExpression	partial_s . c_str ( )		2394635	0					
ANR	2394706	Callee	partial_s . c_str		2394635	0					
ANR	2394707	MemberAccess	partial_s . c_str		2394635	0					
ANR	2394708	Identifier	partial_s		2394635	0					
ANR	2394709	Identifier	c_str		2394635	1					
ANR	2394710	ArgumentList			2394635	1					
ANR	2394711	Argument	dap_id		2394635	3					
ANR	2394712	Identifier	dap_id		2394635	0					
ANR	2394713	ReturnStatement	return ;	186:1:5432:5438	2394635	1	True				
ANR	2394714	ExpressionStatement	"status = partialAd -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"	188:2:5446:5517	2394635	10	True				
ANR	2394715	AssignmentExpression	"status = partialAd -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"		2394635	0		=			
ANR	2394716	Identifier	status		2394635	0					
ANR	2394717	CallExpression	"partialAd -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"		2394635	1					
ANR	2394718	Callee	partialAd -> Insert		2394635	0					
ANR	2394719	PtrMemberAccess	partialAd -> Insert		2394635	0					
ANR	2394720	Identifier	partialAd		2394635	0					
ANR	2394721	Identifier	Insert		2394635	1					
ANR	2394722	ArgumentList	"""timestamp"""		2394635	1					
ANR	2394723	Argument	"""timestamp"""		2394635	0					
ANR	2394724	PrimaryExpression	"""timestamp"""		2394635	0					
ANR	2394725	Argument	classad :: Literal :: MakeAbsTime ( )		2394635	1					
ANR	2394726	CallExpression	classad :: Literal :: MakeAbsTime ( )		2394635	0					
ANR	2394727	Callee	classad :: Literal :: MakeAbsTime		2394635	0					
ANR	2394728	Identifier	classad :: Literal :: MakeAbsTime		2394635	0					
ANR	2394729	ArgumentList			2394635	1					
ANR	2394730	IfStatement	if ( status == false )		2394635	11					
ANR	2394731	Condition	status == false	189:6:5525:5539	2394635	0	True				
ANR	2394732	EqualityExpression	status == false		2394635	0		==			
ANR	2394733	Identifier	status		2394635	0					
ANR	2394734	Identifier	false		2394635	1					
ANR	2394735	CompoundStatement		20:23:527:527	2394635	1					
ANR	2394736	Statement	delete	190:4:5548:5553	2394635	0	True				
ANR	2394737	ExpressionStatement	partialAd	190:11:5555:5564	2394635	1	True				
ANR	2394738	Identifier	partialAd		2394635	0					
ANR	2394739	ExpressionStatement	"dprintf ( D_ALWAYS , ""ParseClassAd partial %s insert timestamp failed! dap_id:%s\\n"" , partial_s . c_str ( ) , dap_id )"	191:2:5568:5682	2394635	2	True				
ANR	2394740	CallExpression	"dprintf ( D_ALWAYS , ""ParseClassAd partial %s insert timestamp failed! dap_id:%s\\n"" , partial_s . c_str ( ) , dap_id )"		2394635	0					
ANR	2394741	Callee	dprintf		2394635	0					
ANR	2394742	Identifier	dprintf		2394635	0					
ANR	2394743	ArgumentList	D_ALWAYS		2394635	1					
ANR	2394744	Argument	D_ALWAYS		2394635	0					
ANR	2394745	Identifier	D_ALWAYS		2394635	0					
ANR	2394746	Argument	"""ParseClassAd partial %s insert timestamp failed! dap_id:%s\\n"""		2394635	1					
ANR	2394747	PrimaryExpression	"""ParseClassAd partial %s insert timestamp failed! dap_id:%s\\n"""		2394635	0					
ANR	2394748	Argument	partial_s . c_str ( )		2394635	2					
ANR	2394749	CallExpression	partial_s . c_str ( )		2394635	0					
ANR	2394750	Callee	partial_s . c_str		2394635	0					
ANR	2394751	MemberAccess	partial_s . c_str		2394635	0					
ANR	2394752	Identifier	partial_s		2394635	0					
ANR	2394753	Identifier	c_str		2394635	1					
ANR	2394754	ArgumentList			2394635	1					
ANR	2394755	Argument	dap_id		2394635	3					
ANR	2394756	Identifier	dap_id		2394635	0					
ANR	2394757	ReturnStatement	return ;	194:3:5687:5693	2394635	3	True				
ANR	2394758	IdentifierDeclStatement	classad :: PrettyPrint unparser ;	197:2:5706:5735	2394635	12	True				
ANR	2394759	IdentifierDecl	unparser		2394635	0					
ANR	2394760	IdentifierDeclType	classad :: PrettyPrint		2394635	0					
ANR	2394761	Identifier	unparser		2394635	1					
ANR	2394762	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	198:2:5739:5764	2394635	13	True				
ANR	2394763	IdentifierDecl	"adbuffer = """""		2394635	0					
ANR	2394764	IdentifierDeclType	std :: string		2394635	0					
ANR	2394765	Identifier	adbuffer		2394635	1					
ANR	2394766	AssignmentExpression	"adbuffer = """""		2394635	2		=			
ANR	2394767	Identifier	adbuffer		2394635	0					
ANR	2394768	PrimaryExpression	""""""		2394635	1					
ANR	2394769	ExpressionStatement	"unparser . Unparse ( adbuffer , partialAd )"	199:2:5768:5805	2394635	14	True				
ANR	2394770	CallExpression	"unparser . Unparse ( adbuffer , partialAd )"		2394635	0					
ANR	2394771	Callee	unparser . Unparse		2394635	0					
ANR	2394772	MemberAccess	unparser . Unparse		2394635	0					
ANR	2394773	Identifier	unparser		2394635	0					
ANR	2394774	Identifier	Unparse		2394635	1					
ANR	2394775	ArgumentList	adbuffer		2394635	1					
ANR	2394776	Argument	adbuffer		2394635	0					
ANR	2394777	Identifier	adbuffer		2394635	0					
ANR	2394778	Argument	partialAd		2394635	1					
ANR	2394779	Identifier	partialAd		2394635	0					
ANR	2394780	IdentifierDeclStatement	"std :: string modify_s = ""[ Updates  = "" ;"	201:2:5810:5847	2394635	15	True				
ANR	2394781	IdentifierDecl	"modify_s = ""[ Updates  = """		2394635	0					
ANR	2394782	IdentifierDeclType	std :: string		2394635	0					
ANR	2394783	Identifier	modify_s		2394635	1					
ANR	2394784	AssignmentExpression	"modify_s = ""[ Updates  = """		2394635	2		=			
ANR	2394785	Identifier	modify_s		2394635	0					
ANR	2394786	PrimaryExpression	"""[ Updates  = """		2394635	1					
ANR	2394787	ExpressionStatement	modify_s += adbuffer	202:2:5851:5871	2394635	16	True				
ANR	2394788	AssignmentExpression	modify_s += adbuffer		2394635	0		+=			
ANR	2394789	Identifier	modify_s		2394635	0					
ANR	2394790	Identifier	adbuffer		2394635	1					
ANR	2394791	ExpressionStatement	"modify_s += "" ]"""	203:2:5875:5891	2394635	17	True				
ANR	2394792	AssignmentExpression	"modify_s += "" ]"""		2394635	0		+=			
ANR	2394793	Identifier	modify_s		2394635	0					
ANR	2394794	PrimaryExpression	""" ]"""		2394635	1					
ANR	2394795	IdentifierDeclStatement	"classad :: ClassAd * tmpad = parser . ParseClassAd ( modify_s , true ) ;"	205:2:5898:5959	2394635	18	True				
ANR	2394796	IdentifierDecl	"* tmpad = parser . ParseClassAd ( modify_s , true )"		2394635	0					
ANR	2394797	IdentifierDeclType	classad :: ClassAd *		2394635	0					
ANR	2394798	Identifier	tmpad		2394635	1					
ANR	2394799	AssignmentExpression	"* tmpad = parser . ParseClassAd ( modify_s , true )"		2394635	2		=			
ANR	2394800	Identifier	tmpad		2394635	0					
ANR	2394801	CallExpression	"parser . ParseClassAd ( modify_s , true )"		2394635	1					
ANR	2394802	Callee	parser . ParseClassAd		2394635	0					
ANR	2394803	MemberAccess	parser . ParseClassAd		2394635	0					
ANR	2394804	Identifier	parser		2394635	0					
ANR	2394805	Identifier	ParseClassAd		2394635	1					
ANR	2394806	ArgumentList	modify_s		2394635	1					
ANR	2394807	Argument	modify_s		2394635	0					
ANR	2394808	Identifier	modify_s		2394635	0					
ANR	2394809	Argument	true		2394635	1					
ANR	2394810	Identifier	true		2394635	0					
ANR	2394811	IfStatement	if ( tmpad == NULL )		2394635	19					
ANR	2394812	Condition	tmpad == NULL	206:6:5967:5979	2394635	0	True				
ANR	2394813	EqualityExpression	tmpad == NULL		2394635	0		==			
ANR	2394814	Identifier	tmpad		2394635	0					
ANR	2394815	Identifier	NULL		2394635	1					
ANR	2394816	CompoundStatement		37:21:967:967	2394635	1					
ANR	2394817	Statement	delete	207:3:5987:5992	2394635	0	True				
ANR	2394818	ExpressionStatement	partialAd	207:10:5994:6003	2394635	1	True				
ANR	2394819	Identifier	partialAd		2394635	0					
ANR	2394820	ExpressionStatement	"dprintf ( D_ALWAYS , ""ParseClassAd modify %s failed! dap_id:%s\\n"" , partial_s . c_str ( ) , dap_id )"	208:3:6008:6101	2394635	2	True				
ANR	2394821	CallExpression	"dprintf ( D_ALWAYS , ""ParseClassAd modify %s failed! dap_id:%s\\n"" , partial_s . c_str ( ) , dap_id )"		2394635	0					
ANR	2394822	Callee	dprintf		2394635	0					
ANR	2394823	Identifier	dprintf		2394635	0					
ANR	2394824	ArgumentList	D_ALWAYS		2394635	1					
ANR	2394825	Argument	D_ALWAYS		2394635	0					
ANR	2394826	Identifier	D_ALWAYS		2394635	0					
ANR	2394827	Argument	"""ParseClassAd modify %s failed! dap_id:%s\\n"""		2394635	1					
ANR	2394828	PrimaryExpression	"""ParseClassAd modify %s failed! dap_id:%s\\n"""		2394635	0					
ANR	2394829	Argument	partial_s . c_str ( )		2394635	2					
ANR	2394830	CallExpression	partial_s . c_str ( )		2394635	0					
ANR	2394831	Callee	partial_s . c_str		2394635	0					
ANR	2394832	MemberAccess	partial_s . c_str		2394635	0					
ANR	2394833	Identifier	partial_s		2394635	0					
ANR	2394834	Identifier	c_str		2394635	1					
ANR	2394835	ArgumentList			2394635	1					
ANR	2394836	Argument	dap_id		2394635	3					
ANR	2394837	Identifier	dap_id		2394635	0					
ANR	2394838	ReturnStatement	return ;	210:3:6106:6112	2394635	3	True				
ANR	2394839	ExpressionStatement	"unparser . Unparse ( adbuffer , tmpad )"	213:2:6121:6154	2394635	20	True				
ANR	2394840	CallExpression	"unparser . Unparse ( adbuffer , tmpad )"		2394635	0					
ANR	2394841	Callee	unparser . Unparse		2394635	0					
ANR	2394842	MemberAccess	unparser . Unparse		2394635	0					
ANR	2394843	Identifier	unparser		2394635	0					
ANR	2394844	Identifier	Unparse		2394635	1					
ANR	2394845	ArgumentList	adbuffer		2394635	1					
ANR	2394846	Argument	adbuffer		2394635	0					
ANR	2394847	Identifier	adbuffer		2394635	0					
ANR	2394848	Argument	tmpad		2394635	1					
ANR	2394849	Identifier	tmpad		2394635	0					
ANR	2394850	IfStatement	"if ( ! dapcollection -> ModifyClassAd ( key , tmpad ) )"		2394635	21					
ANR	2394851	Condition	"! dapcollection -> ModifyClassAd ( key , tmpad )"	216:6:6168:6208	2394635	0	True				
ANR	2394852	UnaryOperationExpression	"! dapcollection -> ModifyClassAd ( key , tmpad )"		2394635	0					
ANR	2394853	UnaryOperator	!		2394635	0					
ANR	2394854	CallExpression	"dapcollection -> ModifyClassAd ( key , tmpad )"		2394635	1					
ANR	2394855	Callee	dapcollection -> ModifyClassAd		2394635	0					
ANR	2394856	PtrMemberAccess	dapcollection -> ModifyClassAd		2394635	0					
ANR	2394857	Identifier	dapcollection		2394635	0					
ANR	2394858	Identifier	ModifyClassAd		2394635	1					
ANR	2394859	ArgumentList	key		2394635	1					
ANR	2394860	Argument	key		2394635	0					
ANR	2394861	Identifier	key		2394635	0					
ANR	2394862	Argument	tmpad		2394635	1					
ANR	2394863	Identifier	tmpad		2394635	0					
ANR	2394864	CompoundStatement		47:48:1195:1195	2394635	1					
ANR	2394865	ExpressionStatement	"dprintf ( D_ALWAYS , ""ModifyClassAd failed! dap_id:%s\\n"" , dap_id )"	217:4:6243:6305	2394635	0	True				
ANR	2394866	CallExpression	"dprintf ( D_ALWAYS , ""ModifyClassAd failed! dap_id:%s\\n"" , dap_id )"		2394635	0					
ANR	2394867	Callee	dprintf		2394635	0					
ANR	2394868	Identifier	dprintf		2394635	0					
ANR	2394869	ArgumentList	D_ALWAYS		2394635	1					
ANR	2394870	Argument	D_ALWAYS		2394635	0					
ANR	2394871	Identifier	D_ALWAYS		2394635	0					
ANR	2394872	Argument	"""ModifyClassAd failed! dap_id:%s\\n"""		2394635	1					
ANR	2394873	PrimaryExpression	"""ModifyClassAd failed! dap_id:%s\\n"""		2394635	0					
ANR	2394874	Argument	dap_id		2394635	2					
ANR	2394875	Identifier	dap_id		2394635	0					
ANR	2394876	Statement	delete	220:2:6314:6319	2394635	22	True				
ANR	2394877	ExpressionStatement	partialAd	220:9:6321:6330	2394635	23	True				
ANR	2394878	Identifier	partialAd		2394635	0					
ANR	2394879	ReturnStatement	return ;	222:2:6384:6390	2394635	24	True				
ANR	2394880	ReturnType	void		2394635	1					
ANR	2394881	Identifier	write_collection_log		2394635	2					
ANR	2394882	ParameterList	"classad :: ClassAdCollection * dapcollection , const char * dap_id , const char * update"		2394635	3					
ANR	2394883	Parameter	classad :: ClassAdCollection * dapcollection	168:26:4925:4965	2394635	0	True				
ANR	2394884	ParameterType	classad :: ClassAdCollection *		2394635	0					
ANR	2394885	Identifier	dapcollection		2394635	1					
ANR	2394886	Parameter	const char * dap_id	168:69:4968:4985	2394635	1	True				
ANR	2394887	ParameterType	const char *		2394635	0					
ANR	2394888	Identifier	dap_id		2394635	1					
ANR	2394889	Parameter	const char * update	169:5:4994:5011	2394635	2	True				
ANR	2394890	ParameterType	const char *		2394635	0					
ANR	2394891	Identifier	update		2394635	1					
ANR	2394892	CFGEntryNode	ENTRY		2394635		True				
ANR	2394893	CFGExitNode	EXIT		2394635		True				
ANR	2394894	Symbol	* dapcollection		2394635						
ANR	2394895	Symbol	NULL		2394635						
ANR	2394896	Symbol	partial_s		2394635						
ANR	2394897	Symbol	partialAd -> Insert		2394635						
ANR	2394898	Symbol	dap_id		2394635						
ANR	2394899	Symbol	D_ALWAYS		2394635						
ANR	2394900	Symbol	false		2394635						
ANR	2394901	Symbol	update		2394635						
ANR	2394902	Symbol	partial_s . c_str		2394635						
ANR	2394903	Symbol	* partialAd		2394635						
ANR	2394904	Symbol	parser . ParseClassAd		2394635						
ANR	2394905	Symbol	tmpad		2394635						
ANR	2394906	Symbol	dapcollection		2394635						
ANR	2394907	Symbol	parser		2394635						
ANR	2394908	Symbol	partialAd		2394635						
ANR	2394909	Symbol	true		2394635						
ANR	2394910	Symbol	unparser		2394635						
ANR	2394911	Symbol	classad :: Literal :: MakeAbsTime		2394635						
ANR	2394912	Symbol	key		2394635						
ANR	2394913	Symbol	modify_s		2394635						
ANR	2394914	Symbol	dapcollection -> ModifyClassAd		2394635						
ANR	2394915	Symbol	status		2394635						
ANR	2394916	Symbol	adbuffer		2394635						
ANR	2394917	Function	write_xml_log	227:0:6549:7567							
ANR	2394918	FunctionDef	"write_xml_log (const char * logfilename , classad :: ClassAd * classad , const char * status)"		2394917	0					
ANR	2394919	CompoundStatement		228:0:6640:7567	2394917	0					
ANR	2394920	IdentifierDeclStatement	classad :: ClassAdParser parser ;	230:2:6645:6674	2394917	0	True				
ANR	2394921	IdentifierDecl	parser		2394917	0					
ANR	2394922	IdentifierDeclType	classad :: ClassAdParser		2394917	0					
ANR	2394923	Identifier	parser		2394917	1					
ANR	2394924	IdentifierDeclStatement	classad :: ExprTree * expr = NULL ;	231:2:6678:6708	2394917	1	True				
ANR	2394925	IdentifierDecl	* expr = NULL		2394917	0					
ANR	2394926	IdentifierDeclType	classad :: ExprTree *		2394917	0					
ANR	2394927	Identifier	expr		2394917	1					
ANR	2394928	AssignmentExpression	* expr = NULL		2394917	2		=			
ANR	2394929	Identifier	NULL		2394917	0					
ANR	2394930	Identifier	NULL		2394917	1					
ANR	2394931	IdentifierDeclStatement	classad :: ClassAdXMLUnParser xmlunparser ;	232:2:6712:6752	2394917	2	True				
ANR	2394932	IdentifierDecl	xmlunparser		2394917	0					
ANR	2394933	IdentifierDeclType	classad :: ClassAdXMLUnParser		2394917	0					
ANR	2394934	Identifier	xmlunparser		2394917	1					
ANR	2394935	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	233:2:6756:6781	2394917	3	True				
ANR	2394936	IdentifierDecl	"adbuffer = """""		2394917	0					
ANR	2394937	IdentifierDeclType	std :: string		2394917	0					
ANR	2394938	Identifier	adbuffer		2394917	1					
ANR	2394939	AssignmentExpression	"adbuffer = """""		2394917	2		=			
ANR	2394940	Identifier	adbuffer		2394917	0					
ANR	2394941	PrimaryExpression	""""""		2394917	1					
ANR	2394942	IdentifierDeclStatement	FILE * flog ;	234:2:6785:6795	2394917	4	True				
ANR	2394943	IdentifierDecl	* flog		2394917	0					
ANR	2394944	IdentifierDeclType	FILE *		2394917	0					
ANR	2394945	Identifier	flog		2394917	1					
ANR	2394946	ExpressionStatement	"classad -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"	237:2:6833:6893	2394917	5	True				
ANR	2394947	CallExpression	"classad -> Insert ( ""timestamp"" , classad :: Literal :: MakeAbsTime ( ) )"		2394917	0					
ANR	2394948	Callee	classad -> Insert		2394917	0					
ANR	2394949	PtrMemberAccess	classad -> Insert		2394917	0					
ANR	2394950	Identifier	classad		2394917	0					
ANR	2394951	Identifier	Insert		2394917	1					
ANR	2394952	ArgumentList	"""timestamp"""		2394917	1					
ANR	2394953	Argument	"""timestamp"""		2394917	0					
ANR	2394954	PrimaryExpression	"""timestamp"""		2394917	0					
ANR	2394955	Argument	classad :: Literal :: MakeAbsTime ( )		2394917	1					
ANR	2394956	CallExpression	classad :: Literal :: MakeAbsTime ( )		2394917	0					
ANR	2394957	Callee	classad :: Literal :: MakeAbsTime		2394917	0					
ANR	2394958	Identifier	classad :: Literal :: MakeAbsTime		2394917	0					
ANR	2394959	ArgumentList			2394917	1					
ANR	2394960	ExpressionStatement	"classad -> Delete ( ""status"" )"	240:2:6916:6941	2394917	6	True				
ANR	2394961	CallExpression	"classad -> Delete ( ""status"" )"		2394917	0					
ANR	2394962	Callee	classad -> Delete		2394917	0					
ANR	2394963	PtrMemberAccess	classad -> Delete		2394917	0					
ANR	2394964	Identifier	classad		2394917	0					
ANR	2394965	Identifier	Delete		2394917	1					
ANR	2394966	ArgumentList	"""status"""		2394917	1					
ANR	2394967	Argument	"""status"""		2394917	0					
ANR	2394968	PrimaryExpression	"""status"""		2394917	0					
ANR	2394969	IfStatement	"if ( ! parser . ParseExpression ( status , expr ) )"		2394917	7					
ANR	2394970	Condition	"! parser . ParseExpression ( status , expr )"	241:7:6950:6986	2394917	0	True				
ANR	2394971	UnaryOperationExpression	"! parser . ParseExpression ( status , expr )"		2394917	0					
ANR	2394972	UnaryOperator	!		2394917	0					
ANR	2394973	CallExpression	"parser . ParseExpression ( status , expr )"		2394917	1					
ANR	2394974	Callee	parser . ParseExpression		2394917	0					
ANR	2394975	MemberAccess	parser . ParseExpression		2394917	0					
ANR	2394976	Identifier	parser		2394917	0					
ANR	2394977	Identifier	ParseExpression		2394917	1					
ANR	2394978	ArgumentList	status		2394917	1					
ANR	2394979	Argument	status		2394917	0					
ANR	2394980	Identifier	status		2394917	0					
ANR	2394981	Argument	expr		2394917	1					
ANR	2394982	Identifier	expr		2394917	0					
ANR	2394983	ExpressionStatement	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"	242:4:6994:7027	2394917	1	True				
ANR	2394984	CallExpression	"dprintf ( D_ALWAYS , ""Parse error\\n"" )"		2394917	0					
ANR	2394985	Callee	dprintf		2394917	0					
ANR	2394986	Identifier	dprintf		2394917	0					
ANR	2394987	ArgumentList	D_ALWAYS		2394917	1					
ANR	2394988	Argument	D_ALWAYS		2394917	0					
ANR	2394989	Identifier	D_ALWAYS		2394917	0					
ANR	2394990	Argument	"""Parse error\\n"""		2394917	1					
ANR	2394991	PrimaryExpression	"""Parse error\\n"""		2394917	0					
ANR	2394992	ExpressionStatement	"classad -> Insert ( ""status"" , expr )"	243:2:7031:7062	2394917	8	True				
ANR	2394993	CallExpression	"classad -> Insert ( ""status"" , expr )"		2394917	0					
ANR	2394994	Callee	classad -> Insert		2394917	0					
ANR	2394995	PtrMemberAccess	classad -> Insert		2394917	0					
ANR	2394996	Identifier	classad		2394917	0					
ANR	2394997	Identifier	Insert		2394917	1					
ANR	2394998	ArgumentList	"""status"""		2394917	1					
ANR	2394999	Argument	"""status"""		2394917	0					
ANR	2395000	PrimaryExpression	"""status"""		2394917	0					
ANR	2395001	Argument	expr		2394917	1					
ANR	2395002	Identifier	expr		2394917	0					
ANR	2395003	IfStatement	"if ( ! strcmp ( status , ""\\""processing_request\\"""" ) || ! strcmp ( status , ""\\""request_rescheduled\\"""" ) )"		2394917	9					
ANR	2395004	Condition	"! strcmp ( status , ""\\""processing_request\\"""" ) || ! strcmp ( status , ""\\""request_rescheduled\\"""" )"	245:6:7071:7164	2394917	0	True				
ANR	2395005	OrExpression	"! strcmp ( status , ""\\""processing_request\\"""" ) || ! strcmp ( status , ""\\""request_rescheduled\\"""" )"		2394917	0		||			
ANR	2395006	UnaryOperationExpression	"! strcmp ( status , ""\\""processing_request\\"""" )"		2394917	0					
ANR	2395007	UnaryOperator	!		2394917	0					
ANR	2395008	CallExpression	"strcmp ( status , ""\\""processing_request\\"""" )"		2394917	1					
ANR	2395009	Callee	strcmp		2394917	0					
ANR	2395010	Identifier	strcmp		2394917	0					
ANR	2395011	ArgumentList	status		2394917	1					
ANR	2395012	Argument	status		2394917	0					
ANR	2395013	Identifier	status		2394917	0					
ANR	2395014	Argument	"""\\""processing_request\\"""""		2394917	1					
ANR	2395015	PrimaryExpression	"""\\""processing_request\\"""""		2394917	0					
ANR	2395016	UnaryOperationExpression	"! strcmp ( status , ""\\""request_rescheduled\\"""" )"		2394917	1					
ANR	2395017	UnaryOperator	!		2394917	0					
ANR	2395018	CallExpression	"strcmp ( status , ""\\""request_rescheduled\\"""" )"		2394917	1					
ANR	2395019	Callee	strcmp		2394917	0					
ANR	2395020	Identifier	strcmp		2394917	0					
ANR	2395021	ArgumentList	status		2394917	1					
ANR	2395022	Argument	status		2394917	0					
ANR	2395023	Identifier	status		2394917	0					
ANR	2395024	Argument	"""\\""request_rescheduled\\"""""		2394917	1					
ANR	2395025	PrimaryExpression	"""\\""request_rescheduled\\"""""		2394917	0					
ANR	2395026	CompoundStatement		19:49:525:525	2394917	1					
ANR	2395027	ExpressionStatement	"classad -> Delete ( ""error_code"" )"	247:4:7172:7201	2394917	0	True				
ANR	2395028	CallExpression	"classad -> Delete ( ""error_code"" )"		2394917	0					
ANR	2395029	Callee	classad -> Delete		2394917	0					
ANR	2395030	PtrMemberAccess	classad -> Delete		2394917	0					
ANR	2395031	Identifier	classad		2394917	0					
ANR	2395032	Identifier	Delete		2394917	1					
ANR	2395033	ArgumentList	"""error_code"""		2394917	1					
ANR	2395034	Argument	"""error_code"""		2394917	0					
ANR	2395035	PrimaryExpression	"""error_code"""		2394917	0					
ANR	2395036	ExpressionStatement	xmlunparser . SetCompactSpacing ( false )	251:2:7239:7275	2394917	10	True				
ANR	2395037	CallExpression	xmlunparser . SetCompactSpacing ( false )		2394917	0					
ANR	2395038	Callee	xmlunparser . SetCompactSpacing		2394917	0					
ANR	2395039	MemberAccess	xmlunparser . SetCompactSpacing		2394917	0					
ANR	2395040	Identifier	xmlunparser		2394917	0					
ANR	2395041	Identifier	SetCompactSpacing		2394917	1					
ANR	2395042	ArgumentList	false		2394917	1					
ANR	2395043	Argument	false		2394917	0					
ANR	2395044	Identifier	false		2394917	0					
ANR	2395045	ExpressionStatement	"xmlunparser . Unparse ( adbuffer , classad )"	252:2:7279:7317	2394917	11	True				
ANR	2395046	CallExpression	"xmlunparser . Unparse ( adbuffer , classad )"		2394917	0					
ANR	2395047	Callee	xmlunparser . Unparse		2394917	0					
ANR	2395048	MemberAccess	xmlunparser . Unparse		2394917	0					
ANR	2395049	Identifier	xmlunparser		2394917	0					
ANR	2395050	Identifier	Unparse		2394917	1					
ANR	2395051	ArgumentList	adbuffer		2394917	1					
ANR	2395052	Argument	adbuffer		2394917	0					
ANR	2395053	Identifier	adbuffer		2394917	0					
ANR	2395054	Argument	classad		2394917	1					
ANR	2395055	Identifier	classad		2394917	0					
ANR	2395056	IfStatement	"if ( ( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL )"		2394917	12					
ANR	2395057	Condition	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"	255:6:7366:7418	2394917	0	True				
ANR	2395058	EqualityExpression	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"		2394917	0		==			
ANR	2395059	AssignmentExpression	"flog = safe_fopen_wrapper ( logfilename , ""a+"" )"		2394917	0		=			
ANR	2395060	Identifier	flog		2394917	0					
ANR	2395061	CallExpression	"safe_fopen_wrapper ( logfilename , ""a+"" )"		2394917	1					
ANR	2395062	Callee	safe_fopen_wrapper		2394917	0					
ANR	2395063	Identifier	safe_fopen_wrapper		2394917	0					
ANR	2395064	ArgumentList	logfilename		2394917	1					
ANR	2395065	Argument	logfilename		2394917	0					
ANR	2395066	Identifier	logfilename		2394917	0					
ANR	2395067	Argument	"""a+"""		2394917	1					
ANR	2395068	PrimaryExpression	"""a+"""		2394917	0					
ANR	2395069	Identifier	NULL		2394917	1					
ANR	2395070	CompoundStatement		28:60:779:779	2394917	1					
ANR	2395071	ExpressionStatement	"dprintf ( D_ALWAYS , ""cannot open logfile :%s...\\n"" , logfilename )"	256:4:7426:7492	2394917	0	True				
ANR	2395072	CallExpression	"dprintf ( D_ALWAYS , ""cannot open logfile :%s...\\n"" , logfilename )"		2394917	0					
ANR	2395073	Callee	dprintf		2394917	0					
ANR	2395074	Identifier	dprintf		2394917	0					
ANR	2395075	ArgumentList	D_ALWAYS		2394917	1					
ANR	2395076	Argument	D_ALWAYS		2394917	0					
ANR	2395077	Identifier	D_ALWAYS		2394917	0					
ANR	2395078	Argument	"""cannot open logfile :%s...\\n"""		2394917	1					
ANR	2395079	PrimaryExpression	"""cannot open logfile :%s...\\n"""		2394917	0					
ANR	2395080	Argument	logfilename		2394917	2					
ANR	2395081	Identifier	logfilename		2394917	0					
ANR	2395082	ExpressionStatement	exit ( 1 )	258:4:7498:7505	2394917	1	True				
ANR	2395083	CallExpression	exit ( 1 )		2394917	0					
ANR	2395084	Callee	exit		2394917	0					
ANR	2395085	Identifier	exit		2394917	0					
ANR	2395086	ArgumentList	1		2394917	1					
ANR	2395087	Argument	1		2394917	0					
ANR	2395088	PrimaryExpression	1		2394917	0					
ANR	2395089	ExpressionStatement	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"	260:2:7513:7549	2394917	13	True				
ANR	2395090	CallExpression	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"		2394917	0					
ANR	2395091	Callee	fprintf		2394917	0					
ANR	2395092	Identifier	fprintf		2394917	0					
ANR	2395093	ArgumentList	flog		2394917	1					
ANR	2395094	Argument	flog		2394917	0					
ANR	2395095	Identifier	flog		2394917	0					
ANR	2395096	Argument	"""%s"""		2394917	1					
ANR	2395097	PrimaryExpression	"""%s"""		2394917	0					
ANR	2395098	Argument	adbuffer . c_str ( )		2394917	2					
ANR	2395099	CallExpression	adbuffer . c_str ( )		2394917	0					
ANR	2395100	Callee	adbuffer . c_str		2394917	0					
ANR	2395101	MemberAccess	adbuffer . c_str		2394917	0					
ANR	2395102	Identifier	adbuffer		2394917	0					
ANR	2395103	Identifier	c_str		2394917	1					
ANR	2395104	ArgumentList			2394917	1					
ANR	2395105	ExpressionStatement	fclose ( flog )	261:2:7553:7565	2394917	14	True				
ANR	2395106	CallExpression	fclose ( flog )		2394917	0					
ANR	2395107	Callee	fclose		2394917	0					
ANR	2395108	Identifier	fclose		2394917	0					
ANR	2395109	ArgumentList	flog		2394917	1					
ANR	2395110	Argument	flog		2394917	0					
ANR	2395111	Identifier	flog		2394917	0					
ANR	2395112	ReturnType	void		2394917	1					
ANR	2395113	Identifier	write_xml_log		2394917	2					
ANR	2395114	ParameterList	"const char * logfilename , classad :: ClassAd * classad , const char * status"		2394917	3					
ANR	2395115	Parameter	const char * logfilename	227:19:6568:6590	2394917	0	True				
ANR	2395116	ParameterType	const char *		2394917	0					
ANR	2395117	Identifier	logfilename		2394917	1					
ANR	2395118	Parameter	classad :: ClassAd * classad	227:44:6593:6617	2394917	1	True				
ANR	2395119	ParameterType	classad :: ClassAd *		2394917	0					
ANR	2395120	Identifier	classad		2394917	1					
ANR	2395121	Parameter	const char * status	227:71:6620:6637	2394917	2	True				
ANR	2395122	ParameterType	const char *		2394917	0					
ANR	2395123	Identifier	status		2394917	1					
ANR	2395124	CFGEntryNode	ENTRY		2394917		True				
ANR	2395125	CFGExitNode	EXIT		2394917		True				
ANR	2395126	Symbol	strcmp		2394917						
ANR	2395127	Symbol	NULL		2394917						
ANR	2395128	Symbol	parser . ParseExpression		2394917						
ANR	2395129	Symbol	safe_fopen_wrapper		2394917						
ANR	2395130	Symbol	D_ALWAYS		2394917						
ANR	2395131	Symbol	false		2394917						
ANR	2395132	Symbol	flog		2394917						
ANR	2395133	Symbol	parser		2394917						
ANR	2395134	Symbol	xmlunparser		2394917						
ANR	2395135	Symbol	classad		2394917						
ANR	2395136	Symbol	expr		2394917						
ANR	2395137	Symbol	logfilename		2394917						
ANR	2395138	Symbol	adbuffer . c_str		2394917						
ANR	2395139	Symbol	classad :: Literal :: MakeAbsTime		2394917						
ANR	2395140	Symbol	status		2394917						
ANR	2395141	Symbol	adbuffer		2394917						
ANR	2395142	Function	send_log_to_client_agent	265:0:7647:9226							
ANR	2395143	FunctionDef	send_log_to_client_agent (const char * log)		2395142	0					
ANR	2395144	CompoundStatement		266:0:7693:9226	2395142	0					
ANR	2395145	IdentifierDeclStatement	struct sockaddr_in cli_addr ;	267:2:7697:7724	2395142	0	True				
ANR	2395146	IdentifierDecl	cli_addr		2395142	0					
ANR	2395147	IdentifierDeclType	struct sockaddr_in		2395142	0					
ANR	2395148	Identifier	cli_addr		2395142	1					
ANR	2395149	IdentifierDeclStatement	struct hostent * client ;	268:2:7729:7751	2395142	1	True				
ANR	2395150	IdentifierDecl	* client		2395142	0					
ANR	2395151	IdentifierDeclType	struct hostent *		2395142	0					
ANR	2395152	Identifier	client		2395142	1					
ANR	2395153	IdentifierDeclStatement	int dap_conn ;	269:2:7755:7767	2395142	2	True				
ANR	2395154	IdentifierDecl	dap_conn		2395142	0					
ANR	2395155	IdentifierDeclType	int		2395142	0					
ANR	2395156	Identifier	dap_conn		2395142	1					
ANR	2395157	IfStatement	if ( ( client = condor_gethostbyname ( clientagenthost ) ) == NULL )		2395142	3					
ANR	2395158	Condition	( client = condor_gethostbyname ( clientagenthost ) ) == NULL	271:7:7777:7832	2395142	0	True				
ANR	2395159	EqualityExpression	( client = condor_gethostbyname ( clientagenthost ) ) == NULL		2395142	0		==			
ANR	2395160	AssignmentExpression	client = condor_gethostbyname ( clientagenthost )		2395142	0		=			
ANR	2395161	Identifier	client		2395142	0					
ANR	2395162	CallExpression	condor_gethostbyname ( clientagenthost )		2395142	1					
ANR	2395163	Callee	condor_gethostbyname		2395142	0					
ANR	2395164	Identifier	condor_gethostbyname		2395142	0					
ANR	2395165	ArgumentList	clientagenthost		2395142	1					
ANR	2395166	Argument	clientagenthost		2395142	0					
ANR	2395167	Identifier	clientagenthost		2395142	0					
ANR	2395168	Identifier	NULL		2395142	1					
ANR	2395169	CompoundStatement		6:65:141:141	2395142	1					
ANR	2395170	ExpressionStatement	"fprintf ( stderr , ""Cannot get address for host %s\\n"" , clientagenthost )"	272:4:7841:7908	2395142	0	True				
ANR	2395171	CallExpression	"fprintf ( stderr , ""Cannot get address for host %s\\n"" , clientagenthost )"		2395142	0					
ANR	2395172	Callee	fprintf		2395142	0					
ANR	2395173	Identifier	fprintf		2395142	0					
ANR	2395174	ArgumentList	stderr		2395142	1					
ANR	2395175	Argument	stderr		2395142	0					
ANR	2395176	Identifier	stderr		2395142	0					
ANR	2395177	Argument	"""Cannot get address for host %s\\n"""		2395142	1					
ANR	2395178	PrimaryExpression	"""Cannot get address for host %s\\n"""		2395142	0					
ANR	2395179	Argument	clientagenthost		2395142	2					
ANR	2395180	Identifier	clientagenthost		2395142	0					
ANR	2395181	ReturnStatement	return DAP_ERROR ;	273:4:7914:7930	2395142	1	True				
ANR	2395182	Identifier	DAP_ERROR		2395142	0					
ANR	2395183	IfStatement	"if ( ( dap_conn = socket ( AF_INET , SOCK_STREAM , 0 ) ) < 0 )"		2395142	4					
ANR	2395184	Condition	"( dap_conn = socket ( AF_INET , SOCK_STREAM , 0 ) ) < 0"	277:7:7962:8007	2395142	0	True				
ANR	2395185	RelationalExpression	"( dap_conn = socket ( AF_INET , SOCK_STREAM , 0 ) ) < 0"		2395142	0		<			
ANR	2395186	AssignmentExpression	"dap_conn = socket ( AF_INET , SOCK_STREAM , 0 )"		2395142	0		=			
ANR	2395187	Identifier	dap_conn		2395142	0					
ANR	2395188	CallExpression	"socket ( AF_INET , SOCK_STREAM , 0 )"		2395142	1					
ANR	2395189	Callee	socket		2395142	0					
ANR	2395190	Identifier	socket		2395142	0					
ANR	2395191	ArgumentList	AF_INET		2395142	1					
ANR	2395192	Argument	AF_INET		2395142	0					
ANR	2395193	Identifier	AF_INET		2395142	0					
ANR	2395194	Argument	SOCK_STREAM		2395142	1					
ANR	2395195	Identifier	SOCK_STREAM		2395142	0					
ANR	2395196	Argument	0		2395142	2					
ANR	2395197	PrimaryExpression	0		2395142	0					
ANR	2395198	PrimaryExpression	0		2395142	1					
ANR	2395199	CompoundStatement		12:55:316:316	2395142	1					
ANR	2395200	ExpressionStatement	"fprintf ( stderr , ""Stork server: cannot open socket to client agent!\\n"" )"	278:4:8016:8086	2395142	0	True				
ANR	2395201	CallExpression	"fprintf ( stderr , ""Stork server: cannot open socket to client agent!\\n"" )"		2395142	0					
ANR	2395202	Callee	fprintf		2395142	0					
ANR	2395203	Identifier	fprintf		2395142	0					
ANR	2395204	ArgumentList	stderr		2395142	1					
ANR	2395205	Argument	stderr		2395142	0					
ANR	2395206	Identifier	stderr		2395142	0					
ANR	2395207	Argument	"""Stork server: cannot open socket to client agent!\\n"""		2395142	1					
ANR	2395208	PrimaryExpression	"""Stork server: cannot open socket to client agent!\\n"""		2395142	0					
ANR	2395209	ReturnStatement	return DAP_ERROR ;	279:4:8092:8108	2395142	1	True				
ANR	2395210	Identifier	DAP_ERROR		2395142	0					
ANR	2395211	ExpressionStatement	"bzero ( & cli_addr , sizeof ( cli_addr ) )"	283:2:8132:8166	2395142	5	True				
ANR	2395212	CallExpression	"bzero ( & cli_addr , sizeof ( cli_addr ) )"		2395142	0					
ANR	2395213	Callee	bzero		2395142	0					
ANR	2395214	Identifier	bzero		2395142	0					
ANR	2395215	ArgumentList	& cli_addr		2395142	1					
ANR	2395216	Argument	& cli_addr		2395142	0					
ANR	2395217	UnaryOperationExpression	& cli_addr		2395142	0					
ANR	2395218	UnaryOperator	&		2395142	0					
ANR	2395219	Identifier	cli_addr		2395142	1					
ANR	2395220	Argument	sizeof ( cli_addr )		2395142	1					
ANR	2395221	SizeofExpression	sizeof ( cli_addr )		2395142	0					
ANR	2395222	Sizeof	sizeof		2395142	0					
ANR	2395223	SizeofOperand	cli_addr		2395142	1					
ANR	2395224	ExpressionStatement	cli_addr . sin_family = AF_INET	284:2:8171:8205	2395142	6	True				
ANR	2395225	AssignmentExpression	cli_addr . sin_family = AF_INET		2395142	0		=			
ANR	2395226	MemberAccess	cli_addr . sin_family		2395142	0					
ANR	2395227	Identifier	cli_addr		2395142	0					
ANR	2395228	Identifier	sin_family		2395142	1					
ANR	2395229	Identifier	AF_INET		2395142	1					
ANR	2395230	ExpressionStatement	"memcpy ( & ( cli_addr . sin_addr . s_addr ) , client -> h_addr , client -> h_length )"	285:2:8211:8280	2395142	7	True				
ANR	2395231	CallExpression	"memcpy ( & ( cli_addr . sin_addr . s_addr ) , client -> h_addr , client -> h_length )"		2395142	0					
ANR	2395232	Callee	memcpy		2395142	0					
ANR	2395233	Identifier	memcpy		2395142	0					
ANR	2395234	ArgumentList	& ( cli_addr . sin_addr . s_addr )		2395142	1					
ANR	2395235	Argument	& ( cli_addr . sin_addr . s_addr )		2395142	0					
ANR	2395236	UnaryOperationExpression	& ( cli_addr . sin_addr . s_addr )		2395142	0					
ANR	2395237	UnaryOperator	&		2395142	0					
ANR	2395238	MemberAccess	cli_addr . sin_addr . s_addr		2395142	1					
ANR	2395239	MemberAccess	cli_addr . sin_addr		2395142	0					
ANR	2395240	Identifier	cli_addr		2395142	0					
ANR	2395241	Identifier	sin_addr		2395142	1					
ANR	2395242	Identifier	s_addr		2395142	1					
ANR	2395243	Argument	client -> h_addr		2395142	1					
ANR	2395244	PtrMemberAccess	client -> h_addr		2395142	0					
ANR	2395245	Identifier	client		2395142	0					
ANR	2395246	Identifier	h_addr		2395142	1					
ANR	2395247	Argument	client -> h_length		2395142	2					
ANR	2395248	PtrMemberAccess	client -> h_length		2395142	0					
ANR	2395249	Identifier	client		2395142	0					
ANR	2395250	Identifier	h_length		2395142	1					
ANR	2395251	ExpressionStatement	cli_addr . sin_port = htons ( CLI_AGENT_LOG_TCP_PORT )	286:2:8286:8342	2395142	8	True				
ANR	2395252	AssignmentExpression	cli_addr . sin_port = htons ( CLI_AGENT_LOG_TCP_PORT )		2395142	0		=			
ANR	2395253	MemberAccess	cli_addr . sin_port		2395142	0					
ANR	2395254	Identifier	cli_addr		2395142	0					
ANR	2395255	Identifier	sin_port		2395142	1					
ANR	2395256	CallExpression	htons ( CLI_AGENT_LOG_TCP_PORT )		2395142	1					
ANR	2395257	Callee	htons		2395142	0					
ANR	2395258	Identifier	htons		2395142	0					
ANR	2395259	ArgumentList	CLI_AGENT_LOG_TCP_PORT		2395142	1					
ANR	2395260	Argument	CLI_AGENT_LOG_TCP_PORT		2395142	0					
ANR	2395261	Identifier	CLI_AGENT_LOG_TCP_PORT		2395142	0					
ANR	2395262	IfStatement	"if ( connect ( dap_conn , ( struct sockaddr * ) & cli_addr , sizeof ( cli_addr ) ) != 0 )"		2395142	9					
ANR	2395263	Condition	"connect ( dap_conn , ( struct sockaddr * ) & cli_addr , sizeof ( cli_addr ) ) != 0"	295:7:8515:8584	2395142	0	True				
ANR	2395264	EqualityExpression	"connect ( dap_conn , ( struct sockaddr * ) & cli_addr , sizeof ( cli_addr ) ) != 0"		2395142	0		!=			
ANR	2395265	CallExpression	"connect ( dap_conn , ( struct sockaddr * ) & cli_addr , sizeof ( cli_addr ) )"		2395142	0					
ANR	2395266	Callee	connect		2395142	0					
ANR	2395267	Identifier	connect		2395142	0					
ANR	2395268	ArgumentList	dap_conn		2395142	1					
ANR	2395269	Argument	dap_conn		2395142	0					
ANR	2395270	Identifier	dap_conn		2395142	0					
ANR	2395271	Argument	( struct sockaddr * ) & cli_addr		2395142	1					
ANR	2395272	CastExpression	( struct sockaddr * ) & cli_addr		2395142	0					
ANR	2395273	CastTarget	struct sockaddr *		2395142	0					
ANR	2395274	UnaryOperationExpression	& cli_addr		2395142	1					
ANR	2395275	UnaryOperator	&		2395142	0					
ANR	2395276	Identifier	cli_addr		2395142	1					
ANR	2395277	Argument	sizeof ( cli_addr )		2395142	2					
ANR	2395278	SizeofExpression	sizeof ( cli_addr )		2395142	0					
ANR	2395279	Sizeof	sizeof		2395142	0					
ANR	2395280	SizeofOperand	cli_addr		2395142	1					
ANR	2395281	PrimaryExpression	0		2395142	1					
ANR	2395282	CompoundStatement		30:78:892:892	2395142	1					
ANR	2395283	ExpressionStatement	"fprintf ( stderr , ""Stork server:cannot connect to client agent @%s!\\n"" , clientagenthost )"	296:4:8592:8678	2395142	0	True				
ANR	2395284	CallExpression	"fprintf ( stderr , ""Stork server:cannot connect to client agent @%s!\\n"" , clientagenthost )"		2395142	0					
ANR	2395285	Callee	fprintf		2395142	0					
ANR	2395286	Identifier	fprintf		2395142	0					
ANR	2395287	ArgumentList	stderr		2395142	1					
ANR	2395288	Argument	stderr		2395142	0					
ANR	2395289	Identifier	stderr		2395142	0					
ANR	2395290	Argument	"""Stork server:cannot connect to client agent @%s!\\n"""		2395142	1					
ANR	2395291	PrimaryExpression	"""Stork server:cannot connect to client agent @%s!\\n"""		2395142	0					
ANR	2395292	Argument	clientagenthost		2395142	2					
ANR	2395293	Identifier	clientagenthost		2395142	0					
ANR	2395294	ReturnStatement	return DAP_ERROR ;	297:4:8684:8700	2395142	1	True				
ANR	2395295	Identifier	DAP_ERROR		2395142	0					
ANR	2395296	IfStatement	"if ( send ( dap_conn , log , strlen ( log ) , 0 ) == - 1 )"		2395142	10					
ANR	2395297	Condition	"send ( dap_conn , log , strlen ( log ) , 0 ) == - 1"	307:7:8879:8920	2395142	0	True				
ANR	2395298	EqualityExpression	"send ( dap_conn , log , strlen ( log ) , 0 ) == - 1"		2395142	0		==			
ANR	2395299	CallExpression	"send ( dap_conn , log , strlen ( log ) , 0 )"		2395142	0					
ANR	2395300	Callee	send		2395142	0					
ANR	2395301	Identifier	send		2395142	0					
ANR	2395302	ArgumentList	dap_conn		2395142	1					
ANR	2395303	Argument	dap_conn		2395142	0					
ANR	2395304	Identifier	dap_conn		2395142	0					
ANR	2395305	Argument	log		2395142	1					
ANR	2395306	Identifier	log		2395142	0					
ANR	2395307	Argument	strlen ( log )		2395142	2					
ANR	2395308	CallExpression	strlen ( log )		2395142	0					
ANR	2395309	Callee	strlen		2395142	0					
ANR	2395310	Identifier	strlen		2395142	0					
ANR	2395311	ArgumentList	log		2395142	1					
ANR	2395312	Argument	log		2395142	0					
ANR	2395313	Identifier	log		2395142	0					
ANR	2395314	Argument	0		2395142	3					
ANR	2395315	PrimaryExpression	0		2395142	0					
ANR	2395316	UnaryOperationExpression	- 1		2395142	1					
ANR	2395317	UnaryOperator	-		2395142	0					
ANR	2395318	PrimaryExpression	1		2395142	1					
ANR	2395319	CompoundStatement		42:50:1228:1228	2395142	1					
ANR	2395320	ExpressionStatement	"fprintf ( stderr , ""Stork server: send error!\\n"" )"	308:4:8928:8974	2395142	0	True				
ANR	2395321	CallExpression	"fprintf ( stderr , ""Stork server: send error!\\n"" )"		2395142	0					
ANR	2395322	Callee	fprintf		2395142	0					
ANR	2395323	Identifier	fprintf		2395142	0					
ANR	2395324	ArgumentList	stderr		2395142	1					
ANR	2395325	Argument	stderr		2395142	0					
ANR	2395326	Identifier	stderr		2395142	0					
ANR	2395327	Argument	"""Stork server: send error!\\n"""		2395142	1					
ANR	2395328	PrimaryExpression	"""Stork server: send error!\\n"""		2395142	0					
ANR	2395329	ReturnStatement	return DAP_ERROR ;	309:4:8980:8996	2395142	1	True				
ANR	2395330	Identifier	DAP_ERROR		2395142	0					
ANR	2395331	IfStatement	if ( close ( dap_conn ) != 0 )		2395142	11					
ANR	2395332	Condition	close ( dap_conn ) != 0	313:7:9029:9048	2395142	0	True				
ANR	2395333	EqualityExpression	close ( dap_conn ) != 0		2395142	0		!=			
ANR	2395334	CallExpression	close ( dap_conn )		2395142	0					
ANR	2395335	Callee	close		2395142	0					
ANR	2395336	Identifier	close		2395142	0					
ANR	2395337	ArgumentList	dap_conn		2395142	1					
ANR	2395338	Argument	dap_conn		2395142	0					
ANR	2395339	Identifier	dap_conn		2395142	0					
ANR	2395340	PrimaryExpression	0		2395142	1					
ANR	2395341	CompoundStatement		48:28:1356:1356	2395142	1					
ANR	2395342	ExpressionStatement	"fprintf ( stderr , ""Error in closing the connection!\\n"" )"	314:4:9056:9109	2395142	0	True				
ANR	2395343	CallExpression	"fprintf ( stderr , ""Error in closing the connection!\\n"" )"		2395142	0					
ANR	2395344	Callee	fprintf		2395142	0					
ANR	2395345	Identifier	fprintf		2395142	0					
ANR	2395346	ArgumentList	stderr		2395142	1					
ANR	2395347	Argument	stderr		2395142	0					
ANR	2395348	Identifier	stderr		2395142	0					
ANR	2395349	Argument	"""Error in closing the connection!\\n"""		2395142	1					
ANR	2395350	PrimaryExpression	"""Error in closing the connection!\\n"""		2395142	0					
ANR	2395351	ReturnStatement	return DAP_ERROR ;	315:4:9115:9131	2395142	1	True				
ANR	2395352	Identifier	DAP_ERROR		2395142	0					
ANR	2395353	ReturnStatement	return DAP_SUCCESS ;	320:2:9205:9223	2395142	12	True				
ANR	2395354	Identifier	DAP_SUCCESS		2395142	0					
ANR	2395355	ReturnType	int		2395142	1					
ANR	2395356	Identifier	send_log_to_client_agent		2395142	2					
ANR	2395357	ParameterList	const char * log		2395142	3					
ANR	2395358	Parameter	const char * log	265:29:7676:7690	2395142	0	True				
ANR	2395359	ParameterType	const char *		2395142	0					
ANR	2395360	Identifier	log		2395142	1					
ANR	2395361	CFGEntryNode	ENTRY		2395142		True				
ANR	2395362	CFGExitNode	EXIT		2395142		True				
ANR	2395363	Symbol	log		2395142						
ANR	2395364	Symbol	DAP_ERROR		2395142						
ANR	2395365	Symbol	htons		2395142						
ANR	2395366	Symbol	* client		2395142						
ANR	2395367	Symbol	client -> h_length		2395142						
ANR	2395368	Symbol	cli_addr . sin_addr		2395142						
ANR	2395369	Symbol	DAP_SUCCESS		2395142						
ANR	2395370	Symbol	strlen		2395142						
ANR	2395371	Symbol	SOCK_STREAM		2395142						
ANR	2395372	Symbol	& cli_addr		2395142						
ANR	2395373	Symbol	client		2395142						
ANR	2395374	Symbol	client -> h_addr		2395142						
ANR	2395375	Symbol	close		2395142						
ANR	2395376	Symbol	connect		2395142						
ANR	2395377	Symbol	dap_conn		2395142						
ANR	2395378	Symbol	condor_gethostbyname		2395142						
ANR	2395379	Symbol	NULL		2395142						
ANR	2395380	Symbol	& cli_addr . sin_addr		2395142						
ANR	2395381	Symbol	AF_INET		2395142						
ANR	2395382	Symbol	stderr		2395142						
ANR	2395383	Symbol	CLI_AGENT_LOG_TCP_PORT		2395142						
ANR	2395384	Symbol	clientagenthost		2395142						
ANR	2395385	Symbol	cli_addr . sin_family		2395142						
ANR	2395386	Symbol	& cli_addr . sin_addr . s_addr		2395142						
ANR	2395387	Symbol	cli_addr . sin_port		2395142						
ANR	2395388	Symbol	cli_addr		2395142						
ANR	2395389	Symbol	socket		2395142						
ANR	2395390	Symbol	send		2395142						
ANR	2395391	Function	write_xml_user_log	325:0:9306:12246							
ANR	2395392	FunctionDef	"write_xml_user_log (const char * logfilename , const char * param1 , const char * value1 , const char * param2 , const char * value2 , const char * param3 , const char * value3 , const char * param4 , const char * value4 , const char * param5 , const char * value5 , const char * param6 , const char * value6 , const char * param7 , const char * value7 , const char * param8 , const char * value8 , const char * param9 , const char * value9 , const char * param10 , const char * value10)"		2395391	0					
ANR	2395393	CompoundStatement		339:0:9781:12246	2395391	0					
ANR	2395394	IfStatement	if ( ! logfilename )		2395391	0					
ANR	2395395	Condition	! logfilename	340:6:9789:9801	2395391	0	True				
ANR	2395396	UnaryOperationExpression	! logfilename		2395391	0					
ANR	2395397	UnaryOperator	!		2395391	0					
ANR	2395398	Identifier	logfilename		2395391	1					
ANR	2395399	ReturnStatement	return ;	340:22:9805:9811	2395391	1	True				
ANR	2395400	IfStatement	"if ( ! param_boolean ( ""STORK_ENABLE_DEPRECATED_USERLOG"" , false ) )"		2395391	1					
ANR	2395401	Condition	"! param_boolean ( ""STORK_ENABLE_DEPRECATED_USERLOG"" , false )"	345:6:9994:10050	2395391	0	True				
ANR	2395402	UnaryOperationExpression	"! param_boolean ( ""STORK_ENABLE_DEPRECATED_USERLOG"" , false )"		2395391	0					
ANR	2395403	UnaryOperator	!		2395391	0					
ANR	2395404	CallExpression	"param_boolean ( ""STORK_ENABLE_DEPRECATED_USERLOG"" , false )"		2395391	1					
ANR	2395405	Callee	param_boolean		2395391	0					
ANR	2395406	Identifier	param_boolean		2395391	0					
ANR	2395407	ArgumentList	"""STORK_ENABLE_DEPRECATED_USERLOG"""		2395391	1					
ANR	2395408	Argument	"""STORK_ENABLE_DEPRECATED_USERLOG"""		2395391	0					
ANR	2395409	PrimaryExpression	"""STORK_ENABLE_DEPRECATED_USERLOG"""		2395391	0					
ANR	2395410	Argument	false		2395391	1					
ANR	2395411	Identifier	false		2395391	0					
ANR	2395412	CompoundStatement		7:66:272:272	2395391	1					
ANR	2395413	ReturnStatement	return ;	346:2:10058:10064	2395391	0	True				
ANR	2395414	IdentifierDeclStatement	classad :: ClassAdParser parser ;	349:2:10072:10101	2395391	2	True				
ANR	2395415	IdentifierDecl	parser		2395391	0					
ANR	2395416	IdentifierDeclType	classad :: ClassAdParser		2395391	0					
ANR	2395417	Identifier	parser		2395391	1					
ANR	2395418	IdentifierDeclStatement	classad :: ExprTree * expr = NULL ;	350:2:10105:10135	2395391	3	True				
ANR	2395419	IdentifierDecl	* expr = NULL		2395391	0					
ANR	2395420	IdentifierDeclType	classad :: ExprTree *		2395391	0					
ANR	2395421	Identifier	expr		2395391	1					
ANR	2395422	AssignmentExpression	* expr = NULL		2395391	2		=			
ANR	2395423	Identifier	NULL		2395391	0					
ANR	2395424	Identifier	NULL		2395391	1					
ANR	2395425	IdentifierDeclStatement	classad :: ClassAdXMLUnParser xmlunparser ;	351:2:10139:10179	2395391	4	True				
ANR	2395426	IdentifierDecl	xmlunparser		2395391	0					
ANR	2395427	IdentifierDeclType	classad :: ClassAdXMLUnParser		2395391	0					
ANR	2395428	Identifier	xmlunparser		2395391	1					
ANR	2395429	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	352:2:10183:10208	2395391	5	True				
ANR	2395430	IdentifierDecl	"adbuffer = """""		2395391	0					
ANR	2395431	IdentifierDeclType	std :: string		2395391	0					
ANR	2395432	Identifier	adbuffer		2395391	1					
ANR	2395433	AssignmentExpression	"adbuffer = """""		2395391	2		=			
ANR	2395434	Identifier	adbuffer		2395391	0					
ANR	2395435	PrimaryExpression	""""""		2395391	1					
ANR	2395436	IdentifierDeclStatement	FILE * flog ;	353:2:10212:10222	2395391	6	True				
ANR	2395437	IdentifierDecl	* flog		2395391	0					
ANR	2395438	IdentifierDeclType	FILE *		2395391	0					
ANR	2395439	Identifier	flog		2395391	1					
ANR	2395440	Statement	classad	357:2:10247:10253	2395391	7	True				
ANR	2395441	Statement	::	357:9:10254:10255	2395391	8	True				
ANR	2395442	Statement	ClassAd	357:11:10256:10262	2395391	9	True				
ANR	2395443	Statement	*	357:19:10264:10264	2395391	10	True				
ANR	2395444	Statement	classad	357:20:10265:10271	2395391	11	True				
ANR	2395445	Statement	=	357:28:10273:10273	2395391	12	True				
ANR	2395446	Statement	new	357:30:10275:10277	2395391	13	True				
ANR	2395447	ExpressionStatement	classad :: ClassAd	357:34:10279:10295	2395391	14	True				
ANR	2395448	Identifier	classad :: ClassAd		2395391	0					
ANR	2395449	ExpressionStatement	ASSERT ( classad )	358:2:10299:10314	2395391	15	True				
ANR	2395450	CallExpression	ASSERT ( classad )		2395391	0					
ANR	2395451	Callee	ASSERT		2395391	0					
ANR	2395452	Identifier	ASSERT		2395391	0					
ANR	2395453	ArgumentList	classad		2395391	1					
ANR	2395454	Argument	classad		2395391	0					
ANR	2395455	Identifier	classad		2395391	0					
ANR	2395456	ExpressionStatement	"classad -> Insert ( ""EventTime"" , classad :: Literal :: MakeAbsTime ( ) )"	361:2:10352:10412	2395391	16	True				
ANR	2395457	CallExpression	"classad -> Insert ( ""EventTime"" , classad :: Literal :: MakeAbsTime ( ) )"		2395391	0					
ANR	2395458	Callee	classad -> Insert		2395391	0					
ANR	2395459	PtrMemberAccess	classad -> Insert		2395391	0					
ANR	2395460	Identifier	classad		2395391	0					
ANR	2395461	Identifier	Insert		2395391	1					
ANR	2395462	ArgumentList	"""EventTime"""		2395391	1					
ANR	2395463	Argument	"""EventTime"""		2395391	0					
ANR	2395464	PrimaryExpression	"""EventTime"""		2395391	0					
ANR	2395465	Argument	classad :: Literal :: MakeAbsTime ( )		2395391	1					
ANR	2395466	CallExpression	classad :: Literal :: MakeAbsTime ( )		2395391	0					
ANR	2395467	Callee	classad :: Literal :: MakeAbsTime		2395391	0					
ANR	2395468	Identifier	classad :: Literal :: MakeAbsTime		2395391	0					
ANR	2395469	ArgumentList			2395391	1					
ANR	2395470	IfStatement	"if ( parser . ParseExpression ( value1 , expr ) )"		2395391	17					
ANR	2395471	Condition	"parser . ParseExpression ( value1 , expr )"	363:7:10422:10457	2395391	0	True				
ANR	2395472	CallExpression	"parser . ParseExpression ( value1 , expr )"		2395391	0					
ANR	2395473	Callee	parser . ParseExpression		2395391	0					
ANR	2395474	MemberAccess	parser . ParseExpression		2395391	0					
ANR	2395475	Identifier	parser		2395391	0					
ANR	2395476	Identifier	ParseExpression		2395391	1					
ANR	2395477	ArgumentList	value1		2395391	1					
ANR	2395478	Argument	value1		2395391	0					
ANR	2395479	Identifier	value1		2395391	0					
ANR	2395480	Argument	expr		2395391	1					
ANR	2395481	Identifier	expr		2395391	0					
ANR	2395482	ExpressionStatement	"classad -> Insert ( param1 , expr )"	364:4:10465:10494	2395391	1	True				
ANR	2395483	CallExpression	"classad -> Insert ( param1 , expr )"		2395391	0					
ANR	2395484	Callee	classad -> Insert		2395391	0					
ANR	2395485	PtrMemberAccess	classad -> Insert		2395391	0					
ANR	2395486	Identifier	classad		2395391	0					
ANR	2395487	Identifier	Insert		2395391	1					
ANR	2395488	ArgumentList	param1		2395391	1					
ANR	2395489	Argument	param1		2395391	0					
ANR	2395490	Identifier	param1		2395391	0					
ANR	2395491	Argument	expr		2395391	1					
ANR	2395492	Identifier	expr		2395391	0					
ANR	2395493	IfStatement	if ( ( param2 != NULL ) && ( value2 != NULL ) )		2395391	18					
ANR	2395494	Condition	( param2 != NULL ) && ( value2 != NULL )	366:7:10504:10539	2395391	0	True				
ANR	2395495	AndExpression	( param2 != NULL ) && ( value2 != NULL )		2395391	0		&&			
ANR	2395496	EqualityExpression	param2 != NULL		2395391	0		!=			
ANR	2395497	Identifier	param2		2395391	0					
ANR	2395498	Identifier	NULL		2395391	1					
ANR	2395499	EqualityExpression	value2 != NULL		2395391	1		!=			
ANR	2395500	Identifier	value2		2395391	0					
ANR	2395501	Identifier	NULL		2395391	1					
ANR	2395502	CompoundStatement		28:44:759:759	2395391	1					
ANR	2395503	IfStatement	"if ( parser . ParseExpression ( value2 , expr ) )"		2395391	0					
ANR	2395504	Condition	"parser . ParseExpression ( value2 , expr )"	367:9:10552:10587	2395391	0	True				
ANR	2395505	CallExpression	"parser . ParseExpression ( value2 , expr )"		2395391	0					
ANR	2395506	Callee	parser . ParseExpression		2395391	0					
ANR	2395507	MemberAccess	parser . ParseExpression		2395391	0					
ANR	2395508	Identifier	parser		2395391	0					
ANR	2395509	Identifier	ParseExpression		2395391	1					
ANR	2395510	ArgumentList	value2		2395391	1					
ANR	2395511	Argument	value2		2395391	0					
ANR	2395512	Identifier	value2		2395391	0					
ANR	2395513	Argument	expr		2395391	1					
ANR	2395514	Identifier	expr		2395391	0					
ANR	2395515	ExpressionStatement	"classad -> Insert ( param2 , expr )"	368:6:10597:10626	2395391	1	True				
ANR	2395516	CallExpression	"classad -> Insert ( param2 , expr )"		2395391	0					
ANR	2395517	Callee	classad -> Insert		2395391	0					
ANR	2395518	PtrMemberAccess	classad -> Insert		2395391	0					
ANR	2395519	Identifier	classad		2395391	0					
ANR	2395520	Identifier	Insert		2395391	1					
ANR	2395521	ArgumentList	param2		2395391	1					
ANR	2395522	Argument	param2		2395391	0					
ANR	2395523	Identifier	param2		2395391	0					
ANR	2395524	Argument	expr		2395391	1					
ANR	2395525	Identifier	expr		2395391	0					
ANR	2395526	IfStatement	if ( ( param3 != NULL ) && ( value3 != NULL ) )		2395391	19					
ANR	2395527	Condition	( param3 != NULL ) && ( value3 != NULL )	371:6:10639:10674	2395391	0	True				
ANR	2395528	AndExpression	( param3 != NULL ) && ( value3 != NULL )		2395391	0		&&			
ANR	2395529	EqualityExpression	param3 != NULL		2395391	0		!=			
ANR	2395530	Identifier	param3		2395391	0					
ANR	2395531	Identifier	NULL		2395391	1					
ANR	2395532	EqualityExpression	value3 != NULL		2395391	1		!=			
ANR	2395533	Identifier	value3		2395391	0					
ANR	2395534	Identifier	NULL		2395391	1					
ANR	2395535	CompoundStatement		33:43:894:894	2395391	1					
ANR	2395536	IfStatement	"if ( parser . ParseExpression ( value3 , expr ) )"		2395391	0					
ANR	2395537	Condition	"parser . ParseExpression ( value3 , expr )"	372:9:10687:10722	2395391	0	True				
ANR	2395538	CallExpression	"parser . ParseExpression ( value3 , expr )"		2395391	0					
ANR	2395539	Callee	parser . ParseExpression		2395391	0					
ANR	2395540	MemberAccess	parser . ParseExpression		2395391	0					
ANR	2395541	Identifier	parser		2395391	0					
ANR	2395542	Identifier	ParseExpression		2395391	1					
ANR	2395543	ArgumentList	value3		2395391	1					
ANR	2395544	Argument	value3		2395391	0					
ANR	2395545	Identifier	value3		2395391	0					
ANR	2395546	Argument	expr		2395391	1					
ANR	2395547	Identifier	expr		2395391	0					
ANR	2395548	ExpressionStatement	"classad -> Insert ( param3 , expr )"	373:6:10732:10761	2395391	1	True				
ANR	2395549	CallExpression	"classad -> Insert ( param3 , expr )"		2395391	0					
ANR	2395550	Callee	classad -> Insert		2395391	0					
ANR	2395551	PtrMemberAccess	classad -> Insert		2395391	0					
ANR	2395552	Identifier	classad		2395391	0					
ANR	2395553	Identifier	Insert		2395391	1					
ANR	2395554	ArgumentList	param3		2395391	1					
ANR	2395555	Argument	param3		2395391	0					
ANR	2395556	Identifier	param3		2395391	0					
ANR	2395557	Argument	expr		2395391	1					
ANR	2395558	Identifier	expr		2395391	0					
ANR	2395559	IfStatement	if ( ( param4 != NULL ) && ( value4 != NULL ) )		2395391	20					
ANR	2395560	Condition	( param4 != NULL ) && ( value4 != NULL )	376:6:10774:10809	2395391	0	True				
ANR	2395561	AndExpression	( param4 != NULL ) && ( value4 != NULL )		2395391	0		&&			
ANR	2395562	EqualityExpression	param4 != NULL		2395391	0		!=			
ANR	2395563	Identifier	param4		2395391	0					
ANR	2395564	Identifier	NULL		2395391	1					
ANR	2395565	EqualityExpression	value4 != NULL		2395391	1		!=			
ANR	2395566	Identifier	value4		2395391	0					
ANR	2395567	Identifier	NULL		2395391	1					
ANR	2395568	CompoundStatement		38:43:1029:1029	2395391	1					
ANR	2395569	IfStatement	"if ( parser . ParseExpression ( value4 , expr ) )"		2395391	0					
ANR	2395570	Condition	"parser . ParseExpression ( value4 , expr )"	377:9:10822:10857	2395391	0	True				
ANR	2395571	CallExpression	"parser . ParseExpression ( value4 , expr )"		2395391	0					
ANR	2395572	Callee	parser . ParseExpression		2395391	0					
ANR	2395573	MemberAccess	parser . ParseExpression		2395391	0					
ANR	2395574	Identifier	parser		2395391	0					
ANR	2395575	Identifier	ParseExpression		2395391	1					
ANR	2395576	ArgumentList	value4		2395391	1					
ANR	2395577	Argument	value4		2395391	0					
ANR	2395578	Identifier	value4		2395391	0					
ANR	2395579	Argument	expr		2395391	1					
ANR	2395580	Identifier	expr		2395391	0					
ANR	2395581	ExpressionStatement	"classad -> Insert ( param4 , expr )"	378:6:10867:10896	2395391	1	True				
ANR	2395582	CallExpression	"classad -> Insert ( param4 , expr )"		2395391	0					
ANR	2395583	Callee	classad -> Insert		2395391	0					
ANR	2395584	PtrMemberAccess	classad -> Insert		2395391	0					
ANR	2395585	Identifier	classad		2395391	0					
ANR	2395586	Identifier	Insert		2395391	1					
ANR	2395587	ArgumentList	param4		2395391	1					
ANR	2395588	Argument	param4		2395391	0					
ANR	2395589	Identifier	param4		2395391	0					
ANR	2395590	Argument	expr		2395391	1					
ANR	2395591	Identifier	expr		2395391	0					
ANR	2395592	IfStatement	if ( ( param5 != NULL ) && ( value5 != NULL ) )		2395391	21					
ANR	2395593	Condition	( param5 != NULL ) && ( value5 != NULL )	381:6:10909:10944	2395391	0	True				
ANR	2395594	AndExpression	( param5 != NULL ) && ( value5 != NULL )		2395391	0		&&			
ANR	2395595	EqualityExpression	param5 != NULL		2395391	0		!=			
ANR	2395596	Identifier	param5		2395391	0					
ANR	2395597	Identifier	NULL		2395391	1					
ANR	2395598	EqualityExpression	value5 != NULL		2395391	1		!=			
ANR	2395599	Identifier	value5		2395391	0					
ANR	2395600	Identifier	NULL		2395391	1					
ANR	2395601	CompoundStatement		43:43:1164:1164	2395391	1					
ANR	2395602	IfStatement	"if ( parser . ParseExpression ( value5 , expr ) )"		2395391	0					
ANR	2395603	Condition	"parser . ParseExpression ( value5 , expr )"	382:9:10957:10992	2395391	0	True				
ANR	2395604	CallExpression	"parser . ParseExpression ( value5 , expr )"		2395391	0					
ANR	2395605	Callee	parser . ParseExpression		2395391	0					
ANR	2395606	MemberAccess	parser . ParseExpression		2395391	0					
ANR	2395607	Identifier	parser		2395391	0					
ANR	2395608	Identifier	ParseExpression		2395391	1					
ANR	2395609	ArgumentList	value5		2395391	1					
ANR	2395610	Argument	value5		2395391	0					
ANR	2395611	Identifier	value5		2395391	0					
ANR	2395612	Argument	expr		2395391	1					
ANR	2395613	Identifier	expr		2395391	0					
ANR	2395614	ExpressionStatement	"classad -> Insert ( param5 , expr )"	383:6:11002:11031	2395391	1	True				
ANR	2395615	CallExpression	"classad -> Insert ( param5 , expr )"		2395391	0					
ANR	2395616	Callee	classad -> Insert		2395391	0					
ANR	2395617	PtrMemberAccess	classad -> Insert		2395391	0					
ANR	2395618	Identifier	classad		2395391	0					
ANR	2395619	Identifier	Insert		2395391	1					
ANR	2395620	ArgumentList	param5		2395391	1					
ANR	2395621	Argument	param5		2395391	0					
ANR	2395622	Identifier	param5		2395391	0					
ANR	2395623	Argument	expr		2395391	1					
ANR	2395624	Identifier	expr		2395391	0					
ANR	2395625	IfStatement	if ( ( param6 != NULL ) && ( value6 != NULL ) )		2395391	22					
ANR	2395626	Condition	( param6 != NULL ) && ( value6 != NULL )	386:6:11044:11079	2395391	0	True				
ANR	2395627	AndExpression	( param6 != NULL ) && ( value6 != NULL )		2395391	0		&&			
ANR	2395628	EqualityExpression	param6 != NULL		2395391	0		!=			
ANR	2395629	Identifier	param6		2395391	0					
ANR	2395630	Identifier	NULL		2395391	1					
ANR	2395631	EqualityExpression	value6 != NULL		2395391	1		!=			
ANR	2395632	Identifier	value6		2395391	0					
ANR	2395633	Identifier	NULL		2395391	1					
ANR	2395634	CompoundStatement		48:43:1299:1299	2395391	1					
ANR	2395635	IfStatement	"if ( parser . ParseExpression ( value6 , expr ) )"		2395391	0					
ANR	2395636	Condition	"parser . ParseExpression ( value6 , expr )"	387:9:11092:11127	2395391	0	True				
ANR	2395637	CallExpression	"parser . ParseExpression ( value6 , expr )"		2395391	0					
ANR	2395638	Callee	parser . ParseExpression		2395391	0					
ANR	2395639	MemberAccess	parser . ParseExpression		2395391	0					
ANR	2395640	Identifier	parser		2395391	0					
ANR	2395641	Identifier	ParseExpression		2395391	1					
ANR	2395642	ArgumentList	value6		2395391	1					
ANR	2395643	Argument	value6		2395391	0					
ANR	2395644	Identifier	value6		2395391	0					
ANR	2395645	Argument	expr		2395391	1					
ANR	2395646	Identifier	expr		2395391	0					
ANR	2395647	ExpressionStatement	"classad -> Insert ( param6 , expr )"	388:6:11137:11166	2395391	1	True				
ANR	2395648	CallExpression	"classad -> Insert ( param6 , expr )"		2395391	0					
ANR	2395649	Callee	classad -> Insert		2395391	0					
ANR	2395650	PtrMemberAccess	classad -> Insert		2395391	0					
ANR	2395651	Identifier	classad		2395391	0					
ANR	2395652	Identifier	Insert		2395391	1					
ANR	2395653	ArgumentList	param6		2395391	1					
ANR	2395654	Argument	param6		2395391	0					
ANR	2395655	Identifier	param6		2395391	0					
ANR	2395656	Argument	expr		2395391	1					
ANR	2395657	Identifier	expr		2395391	0					
ANR	2395658	IfStatement	if ( ( param7 != NULL ) && ( value7 != NULL ) )		2395391	23					
ANR	2395659	Condition	( param7 != NULL ) && ( value7 != NULL )	391:6:11179:11214	2395391	0	True				
ANR	2395660	AndExpression	( param7 != NULL ) && ( value7 != NULL )		2395391	0		&&			
ANR	2395661	EqualityExpression	param7 != NULL		2395391	0		!=			
ANR	2395662	Identifier	param7		2395391	0					
ANR	2395663	Identifier	NULL		2395391	1					
ANR	2395664	EqualityExpression	value7 != NULL		2395391	1		!=			
ANR	2395665	Identifier	value7		2395391	0					
ANR	2395666	Identifier	NULL		2395391	1					
ANR	2395667	CompoundStatement		53:43:1434:1434	2395391	1					
ANR	2395668	IfStatement	"if ( parser . ParseExpression ( value7 , expr ) )"		2395391	0					
ANR	2395669	Condition	"parser . ParseExpression ( value7 , expr )"	392:9:11227:11262	2395391	0	True				
ANR	2395670	CallExpression	"parser . ParseExpression ( value7 , expr )"		2395391	0					
ANR	2395671	Callee	parser . ParseExpression		2395391	0					
ANR	2395672	MemberAccess	parser . ParseExpression		2395391	0					
ANR	2395673	Identifier	parser		2395391	0					
ANR	2395674	Identifier	ParseExpression		2395391	1					
ANR	2395675	ArgumentList	value7		2395391	1					
ANR	2395676	Argument	value7		2395391	0					
ANR	2395677	Identifier	value7		2395391	0					
ANR	2395678	Argument	expr		2395391	1					
ANR	2395679	Identifier	expr		2395391	0					
ANR	2395680	ExpressionStatement	"classad -> Insert ( param7 , expr )"	393:6:11272:11301	2395391	1	True				
ANR	2395681	CallExpression	"classad -> Insert ( param7 , expr )"		2395391	0					
ANR	2395682	Callee	classad -> Insert		2395391	0					
ANR	2395683	PtrMemberAccess	classad -> Insert		2395391	0					
ANR	2395684	Identifier	classad		2395391	0					
ANR	2395685	Identifier	Insert		2395391	1					
ANR	2395686	ArgumentList	param7		2395391	1					
ANR	2395687	Argument	param7		2395391	0					
ANR	2395688	Identifier	param7		2395391	0					
ANR	2395689	Argument	expr		2395391	1					
ANR	2395690	Identifier	expr		2395391	0					
ANR	2395691	IfStatement	if ( ( param8 != NULL ) && ( value8 != NULL ) )		2395391	24					
ANR	2395692	Condition	( param8 != NULL ) && ( value8 != NULL )	396:6:11316:11351	2395391	0	True				
ANR	2395693	AndExpression	( param8 != NULL ) && ( value8 != NULL )		2395391	0		&&			
ANR	2395694	EqualityExpression	param8 != NULL		2395391	0		!=			
ANR	2395695	Identifier	param8		2395391	0					
ANR	2395696	Identifier	NULL		2395391	1					
ANR	2395697	EqualityExpression	value8 != NULL		2395391	1		!=			
ANR	2395698	Identifier	value8		2395391	0					
ANR	2395699	Identifier	NULL		2395391	1					
ANR	2395700	CompoundStatement		58:43:1571:1571	2395391	1					
ANR	2395701	IfStatement	"if ( parser . ParseExpression ( value8 , expr ) )"		2395391	0					
ANR	2395702	Condition	"parser . ParseExpression ( value8 , expr )"	397:9:11364:11399	2395391	0	True				
ANR	2395703	CallExpression	"parser . ParseExpression ( value8 , expr )"		2395391	0					
ANR	2395704	Callee	parser . ParseExpression		2395391	0					
ANR	2395705	MemberAccess	parser . ParseExpression		2395391	0					
ANR	2395706	Identifier	parser		2395391	0					
ANR	2395707	Identifier	ParseExpression		2395391	1					
ANR	2395708	ArgumentList	value8		2395391	1					
ANR	2395709	Argument	value8		2395391	0					
ANR	2395710	Identifier	value8		2395391	0					
ANR	2395711	Argument	expr		2395391	1					
ANR	2395712	Identifier	expr		2395391	0					
ANR	2395713	ExpressionStatement	"classad -> Insert ( param8 , expr )"	398:6:11409:11438	2395391	1	True				
ANR	2395714	CallExpression	"classad -> Insert ( param8 , expr )"		2395391	0					
ANR	2395715	Callee	classad -> Insert		2395391	0					
ANR	2395716	PtrMemberAccess	classad -> Insert		2395391	0					
ANR	2395717	Identifier	classad		2395391	0					
ANR	2395718	Identifier	Insert		2395391	1					
ANR	2395719	ArgumentList	param8		2395391	1					
ANR	2395720	Argument	param8		2395391	0					
ANR	2395721	Identifier	param8		2395391	0					
ANR	2395722	Argument	expr		2395391	1					
ANR	2395723	Identifier	expr		2395391	0					
ANR	2395724	IfStatement	if ( ( param9 != NULL ) && ( value9 != NULL ) )		2395391	25					
ANR	2395725	Condition	( param9 != NULL ) && ( value9 != NULL )	401:6:11451:11486	2395391	0	True				
ANR	2395726	AndExpression	( param9 != NULL ) && ( value9 != NULL )		2395391	0		&&			
ANR	2395727	EqualityExpression	param9 != NULL		2395391	0		!=			
ANR	2395728	Identifier	param9		2395391	0					
ANR	2395729	Identifier	NULL		2395391	1					
ANR	2395730	EqualityExpression	value9 != NULL		2395391	1		!=			
ANR	2395731	Identifier	value9		2395391	0					
ANR	2395732	Identifier	NULL		2395391	1					
ANR	2395733	CompoundStatement		63:43:1706:1706	2395391	1					
ANR	2395734	IfStatement	"if ( parser . ParseExpression ( value9 , expr ) )"		2395391	0					
ANR	2395735	Condition	"parser . ParseExpression ( value9 , expr )"	402:9:11499:11534	2395391	0	True				
ANR	2395736	CallExpression	"parser . ParseExpression ( value9 , expr )"		2395391	0					
ANR	2395737	Callee	parser . ParseExpression		2395391	0					
ANR	2395738	MemberAccess	parser . ParseExpression		2395391	0					
ANR	2395739	Identifier	parser		2395391	0					
ANR	2395740	Identifier	ParseExpression		2395391	1					
ANR	2395741	ArgumentList	value9		2395391	1					
ANR	2395742	Argument	value9		2395391	0					
ANR	2395743	Identifier	value9		2395391	0					
ANR	2395744	Argument	expr		2395391	1					
ANR	2395745	Identifier	expr		2395391	0					
ANR	2395746	ExpressionStatement	"classad -> Insert ( param9 , expr )"	403:6:11544:11573	2395391	1	True				
ANR	2395747	CallExpression	"classad -> Insert ( param9 , expr )"		2395391	0					
ANR	2395748	Callee	classad -> Insert		2395391	0					
ANR	2395749	PtrMemberAccess	classad -> Insert		2395391	0					
ANR	2395750	Identifier	classad		2395391	0					
ANR	2395751	Identifier	Insert		2395391	1					
ANR	2395752	ArgumentList	param9		2395391	1					
ANR	2395753	Argument	param9		2395391	0					
ANR	2395754	Identifier	param9		2395391	0					
ANR	2395755	Argument	expr		2395391	1					
ANR	2395756	Identifier	expr		2395391	0					
ANR	2395757	IfStatement	if ( ( param10 != NULL ) && ( value10 != NULL ) )		2395391	26					
ANR	2395758	Condition	( param10 != NULL ) && ( value10 != NULL )	406:6:11586:11623	2395391	0	True				
ANR	2395759	AndExpression	( param10 != NULL ) && ( value10 != NULL )		2395391	0		&&			
ANR	2395760	EqualityExpression	param10 != NULL		2395391	0		!=			
ANR	2395761	Identifier	param10		2395391	0					
ANR	2395762	Identifier	NULL		2395391	1					
ANR	2395763	EqualityExpression	value10 != NULL		2395391	1		!=			
ANR	2395764	Identifier	value10		2395391	0					
ANR	2395765	Identifier	NULL		2395391	1					
ANR	2395766	CompoundStatement		68:45:1843:1843	2395391	1					
ANR	2395767	IfStatement	"if ( parser . ParseExpression ( value10 , expr ) )"		2395391	0					
ANR	2395768	Condition	"parser . ParseExpression ( value10 , expr )"	407:9:11636:11672	2395391	0	True				
ANR	2395769	CallExpression	"parser . ParseExpression ( value10 , expr )"		2395391	0					
ANR	2395770	Callee	parser . ParseExpression		2395391	0					
ANR	2395771	MemberAccess	parser . ParseExpression		2395391	0					
ANR	2395772	Identifier	parser		2395391	0					
ANR	2395773	Identifier	ParseExpression		2395391	1					
ANR	2395774	ArgumentList	value10		2395391	1					
ANR	2395775	Argument	value10		2395391	0					
ANR	2395776	Identifier	value10		2395391	0					
ANR	2395777	Argument	expr		2395391	1					
ANR	2395778	Identifier	expr		2395391	0					
ANR	2395779	ExpressionStatement	"classad -> Insert ( param10 , expr )"	408:6:11682:11712	2395391	1	True				
ANR	2395780	CallExpression	"classad -> Insert ( param10 , expr )"		2395391	0					
ANR	2395781	Callee	classad -> Insert		2395391	0					
ANR	2395782	PtrMemberAccess	classad -> Insert		2395391	0					
ANR	2395783	Identifier	classad		2395391	0					
ANR	2395784	Identifier	Insert		2395391	1					
ANR	2395785	ArgumentList	param10		2395391	1					
ANR	2395786	Argument	param10		2395391	0					
ANR	2395787	Identifier	param10		2395391	0					
ANR	2395788	Argument	expr		2395391	1					
ANR	2395789	Identifier	expr		2395391	0					
ANR	2395790	ExpressionStatement	xmlunparser . SetCompactSpacing ( false )	412:2:11748:11784	2395391	27	True				
ANR	2395791	CallExpression	xmlunparser . SetCompactSpacing ( false )		2395391	0					
ANR	2395792	Callee	xmlunparser . SetCompactSpacing		2395391	0					
ANR	2395793	MemberAccess	xmlunparser . SetCompactSpacing		2395391	0					
ANR	2395794	Identifier	xmlunparser		2395391	0					
ANR	2395795	Identifier	SetCompactSpacing		2395391	1					
ANR	2395796	ArgumentList	false		2395391	1					
ANR	2395797	Argument	false		2395391	0					
ANR	2395798	Identifier	false		2395391	0					
ANR	2395799	ExpressionStatement	"xmlunparser . Unparse ( adbuffer , classad )"	413:2:11788:11826	2395391	28	True				
ANR	2395800	CallExpression	"xmlunparser . Unparse ( adbuffer , classad )"		2395391	0					
ANR	2395801	Callee	xmlunparser . Unparse		2395391	0					
ANR	2395802	MemberAccess	xmlunparser . Unparse		2395391	0					
ANR	2395803	Identifier	xmlunparser		2395391	0					
ANR	2395804	Identifier	Unparse		2395391	1					
ANR	2395805	ArgumentList	adbuffer		2395391	1					
ANR	2395806	Argument	adbuffer		2395391	0					
ANR	2395807	Identifier	adbuffer		2395391	0					
ANR	2395808	Argument	classad		2395391	1					
ANR	2395809	Identifier	classad		2395391	0					
ANR	2395810	Statement	delete	417:2:11874:11879	2395391	29	True				
ANR	2395811	ExpressionStatement	classad	417:9:11881:11888	2395391	30	True				
ANR	2395812	Identifier	classad		2395391	0					
ANR	2395813	IfStatement	"if ( ( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL )"		2395391	31					
ANR	2395814	Condition	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"	420:6:11942:11994	2395391	0	True				
ANR	2395815	EqualityExpression	"( flog = safe_fopen_wrapper ( logfilename , ""a+"" ) ) == NULL"		2395391	0		==			
ANR	2395816	AssignmentExpression	"flog = safe_fopen_wrapper ( logfilename , ""a+"" )"		2395391	0		=			
ANR	2395817	Identifier	flog		2395391	0					
ANR	2395818	CallExpression	"safe_fopen_wrapper ( logfilename , ""a+"" )"		2395391	1					
ANR	2395819	Callee	safe_fopen_wrapper		2395391	0					
ANR	2395820	Identifier	safe_fopen_wrapper		2395391	0					
ANR	2395821	ArgumentList	logfilename		2395391	1					
ANR	2395822	Argument	logfilename		2395391	0					
ANR	2395823	Identifier	logfilename		2395391	0					
ANR	2395824	Argument	"""a+"""		2395391	1					
ANR	2395825	PrimaryExpression	"""a+"""		2395391	0					
ANR	2395826	Identifier	NULL		2395391	1					
ANR	2395827	CompoundStatement		82:60:2214:2214	2395391	1					
ANR	2395828	ExpressionStatement	"dprintf ( D_ALWAYS , ""cannot open user logfile :%s...\\n"" , logfilename )"	421:4:12002:12073	2395391	0	True				
ANR	2395829	CallExpression	"dprintf ( D_ALWAYS , ""cannot open user logfile :%s...\\n"" , logfilename )"		2395391	0					
ANR	2395830	Callee	dprintf		2395391	0					
ANR	2395831	Identifier	dprintf		2395391	0					
ANR	2395832	ArgumentList	D_ALWAYS		2395391	1					
ANR	2395833	Argument	D_ALWAYS		2395391	0					
ANR	2395834	Identifier	D_ALWAYS		2395391	0					
ANR	2395835	Argument	"""cannot open user logfile :%s...\\n"""		2395391	1					
ANR	2395836	PrimaryExpression	"""cannot open user logfile :%s...\\n"""		2395391	0					
ANR	2395837	Argument	logfilename		2395391	2					
ANR	2395838	Identifier	logfilename		2395391	0					
ANR	2395839	ReturnStatement	return ;	423:1:12076:12082	2395391	1	True				
ANR	2395840	ExpressionStatement	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"	425:2:12090:12126	2395391	32	True				
ANR	2395841	CallExpression	"fprintf ( flog , ""%s"" , adbuffer . c_str ( ) )"		2395391	0					
ANR	2395842	Callee	fprintf		2395391	0					
ANR	2395843	Identifier	fprintf		2395391	0					
ANR	2395844	ArgumentList	flog		2395391	1					
ANR	2395845	Argument	flog		2395391	0					
ANR	2395846	Identifier	flog		2395391	0					
ANR	2395847	Argument	"""%s"""		2395391	1					
ANR	2395848	PrimaryExpression	"""%s"""		2395391	0					
ANR	2395849	Argument	adbuffer . c_str ( )		2395391	2					
ANR	2395850	CallExpression	adbuffer . c_str ( )		2395391	0					
ANR	2395851	Callee	adbuffer . c_str		2395391	0					
ANR	2395852	MemberAccess	adbuffer . c_str		2395391	0					
ANR	2395853	Identifier	adbuffer		2395391	0					
ANR	2395854	Identifier	c_str		2395391	1					
ANR	2395855	ArgumentList			2395391	1					
ANR	2395856	IfStatement	if ( clientagenthost != NULL )		2395391	33					
ANR	2395857	Condition	clientagenthost != NULL	427:6:12135:12157	2395391	0	True				
ANR	2395858	EqualityExpression	clientagenthost != NULL		2395391	0		!=			
ANR	2395859	Identifier	clientagenthost		2395391	0					
ANR	2395860	Identifier	NULL		2395391	1					
ANR	2395861	CompoundStatement		89:30:2377:2377	2395391	1					
ANR	2395862	ExpressionStatement	send_log_to_client_agent ( adbuffer . c_str ( ) )	428:4:12165:12207	2395391	0	True				
ANR	2395863	CallExpression	send_log_to_client_agent ( adbuffer . c_str ( ) )		2395391	0					
ANR	2395864	Callee	send_log_to_client_agent		2395391	0					
ANR	2395865	Identifier	send_log_to_client_agent		2395391	0					
ANR	2395866	ArgumentList	adbuffer . c_str ( )		2395391	1					
ANR	2395867	Argument	adbuffer . c_str ( )		2395391	0					
ANR	2395868	CallExpression	adbuffer . c_str ( )		2395391	0					
ANR	2395869	Callee	adbuffer . c_str		2395391	0					
ANR	2395870	MemberAccess	adbuffer . c_str		2395391	0					
ANR	2395871	Identifier	adbuffer		2395391	0					
ANR	2395872	Identifier	c_str		2395391	1					
ANR	2395873	ArgumentList			2395391	1					
ANR	2395874	ExpressionStatement	fclose ( flog )	431:2:12222:12234	2395391	34	True				
ANR	2395875	CallExpression	fclose ( flog )		2395391	0					
ANR	2395876	Callee	fclose		2395391	0					
ANR	2395877	Identifier	fclose		2395391	0					
ANR	2395878	ArgumentList	flog		2395391	1					
ANR	2395879	Argument	flog		2395391	0					
ANR	2395880	Identifier	flog		2395391	0					
ANR	2395881	ReturnStatement	return ;	432:2:12238:12244	2395391	35	True				
ANR	2395882	ReturnType	void		2395391	1					
ANR	2395883	Identifier	write_xml_user_log		2395391	2					
ANR	2395884	ParameterList	"const char * logfilename , const char * param1 , const char * value1 , const char * param2 , const char * value2 , const char * param3 , const char * value3 , const char * param4 , const char * value4 , const char * param5 , const char * value5 , const char * param6 , const char * value6 , const char * param7 , const char * value7 , const char * param8 , const char * value8 , const char * param9 , const char * value9 , const char * param10 , const char * value10"		2395391	3					
ANR	2395885	Parameter	const char * logfilename	327:2:9333:9355	2395391	0	True				
ANR	2395886	ParameterType	const char *		2395391	0					
ANR	2395887	Identifier	logfilename		2395391	1					
ANR	2395888	Parameter	const char * param1	328:2:9360:9377	2395391	1	True				
ANR	2395889	ParameterType	const char *		2395391	0					
ANR	2395890	Identifier	param1		2395391	1					
ANR	2395891	Parameter	const char * value1	328:22:9380:9397	2395391	2	True				
ANR	2395892	ParameterType	const char *		2395391	0					
ANR	2395893	Identifier	value1		2395391	1					
ANR	2395894	Parameter	const char * param2	329:2:9402:9419	2395391	3	True				
ANR	2395895	ParameterType	const char *		2395391	0					
ANR	2395896	Identifier	param2		2395391	1					
ANR	2395897	Parameter	const char * value2	329:22:9422:9439	2395391	4	True				
ANR	2395898	ParameterType	const char *		2395391	0					
ANR	2395899	Identifier	value2		2395391	1					
ANR	2395900	Parameter	const char * param3	330:2:9444:9461	2395391	5	True				
ANR	2395901	ParameterType	const char *		2395391	0					
ANR	2395902	Identifier	param3		2395391	1					
ANR	2395903	Parameter	const char * value3	330:22:9464:9481	2395391	6	True				
ANR	2395904	ParameterType	const char *		2395391	0					
ANR	2395905	Identifier	value3		2395391	1					
ANR	2395906	Parameter	const char * param4	331:2:9486:9503	2395391	7	True				
ANR	2395907	ParameterType	const char *		2395391	0					
ANR	2395908	Identifier	param4		2395391	1					
ANR	2395909	Parameter	const char * value4	331:22:9506:9523	2395391	8	True				
ANR	2395910	ParameterType	const char *		2395391	0					
ANR	2395911	Identifier	value4		2395391	1					
ANR	2395912	Parameter	const char * param5	332:2:9528:9545	2395391	9	True				
ANR	2395913	ParameterType	const char *		2395391	0					
ANR	2395914	Identifier	param5		2395391	1					
ANR	2395915	Parameter	const char * value5	332:22:9548:9565	2395391	10	True				
ANR	2395916	ParameterType	const char *		2395391	0					
ANR	2395917	Identifier	value5		2395391	1					
ANR	2395918	Parameter	const char * param6	333:2:9570:9587	2395391	11	True				
ANR	2395919	ParameterType	const char *		2395391	0					
ANR	2395920	Identifier	param6		2395391	1					
ANR	2395921	Parameter	const char * value6	333:22:9590:9607	2395391	12	True				
ANR	2395922	ParameterType	const char *		2395391	0					
ANR	2395923	Identifier	value6		2395391	1					
ANR	2395924	Parameter	const char * param7	334:2:9612:9629	2395391	13	True				
ANR	2395925	ParameterType	const char *		2395391	0					
ANR	2395926	Identifier	param7		2395391	1					
ANR	2395927	Parameter	const char * value7	334:22:9632:9649	2395391	14	True				
ANR	2395928	ParameterType	const char *		2395391	0					
ANR	2395929	Identifier	value7		2395391	1					
ANR	2395930	Parameter	const char * param8	335:2:9654:9671	2395391	15	True				
ANR	2395931	ParameterType	const char *		2395391	0					
ANR	2395932	Identifier	param8		2395391	1					
ANR	2395933	Parameter	const char * value8	335:22:9674:9691	2395391	16	True				
ANR	2395934	ParameterType	const char *		2395391	0					
ANR	2395935	Identifier	value8		2395391	1					
ANR	2395936	Parameter	const char * param9	336:2:9696:9713	2395391	17	True				
ANR	2395937	ParameterType	const char *		2395391	0					
ANR	2395938	Identifier	param9		2395391	1					
ANR	2395939	Parameter	const char * value9	336:22:9716:9733	2395391	18	True				
ANR	2395940	ParameterType	const char *		2395391	0					
ANR	2395941	Identifier	value9		2395391	1					
ANR	2395942	Parameter	const char * param10	337:2:9738:9756	2395391	19	True				
ANR	2395943	ParameterType	const char *		2395391	0					
ANR	2395944	Identifier	param10		2395391	1					
ANR	2395945	Parameter	const char * value10	337:23:9759:9777	2395391	20	True				
ANR	2395946	ParameterType	const char *		2395391	0					
ANR	2395947	Identifier	value10		2395391	1					
ANR	2395948	CFGEntryNode	ENTRY		2395391		True				
ANR	2395949	CFGExitNode	EXIT		2395391		True				
ANR	2395950	Symbol	value6		2395391						
ANR	2395951	Symbol	value5		2395391						
ANR	2395952	Symbol	value8		2395391						
ANR	2395953	Symbol	value7		2395391						
ANR	2395954	Symbol	value2		2395391						
ANR	2395955	Symbol	value1		2395391						
ANR	2395956	Symbol	value4		2395391						
ANR	2395957	Symbol	value3		2395391						
ANR	2395958	Symbol	value9		2395391						
ANR	2395959	Symbol	xmlunparser		2395391						
ANR	2395960	Symbol	param10		2395391						
ANR	2395961	Symbol	expr		2395391						
ANR	2395962	Symbol	logfilename		2395391						
ANR	2395963	Symbol	value10		2395391						
ANR	2395964	Symbol	param7		2395391						
ANR	2395965	Symbol	param8		2395391						
ANR	2395966	Symbol	param5		2395391						
ANR	2395967	Symbol	param6		2395391						
ANR	2395968	Symbol	NULL		2395391						
ANR	2395969	Symbol	parser . ParseExpression		2395391						
ANR	2395970	Symbol	safe_fopen_wrapper		2395391						
ANR	2395971	Symbol	param9		2395391						
ANR	2395972	Symbol	false		2395391						
ANR	2395973	Symbol	D_ALWAYS		2395391						
ANR	2395974	Symbol	param_boolean		2395391						
ANR	2395975	Symbol	param3		2395391						
ANR	2395976	Symbol	param4		2395391						
ANR	2395977	Symbol	param1		2395391						
ANR	2395978	Symbol	flog		2395391						
ANR	2395979	Symbol	param2		2395391						
ANR	2395980	Symbol	clientagenthost		2395391						
ANR	2395981	Symbol	parser		2395391						
ANR	2395982	Symbol	classad		2395391						
ANR	2395983	Symbol	adbuffer . c_str		2395391						
ANR	2395984	Symbol	classad :: Literal :: MakeAbsTime		2395391						
ANR	2395985	Symbol	adbuffer		2395391						
ANR	2395986	Function	user_log_submit	435:0:12249:13096							
ANR	2395987	FunctionDef	"user_log_submit (const classad :: ClassAd * ad , WriteUserLog & user_log)"		2395986	0					
ANR	2395988	CompoundStatement		438:0:12328:13096	2395986	0					
ANR	2395989	IdentifierDeclStatement	SubmitEvent jobSubmit ;	439:1:12331:12352	2395986	0	True				
ANR	2395990	IdentifierDecl	jobSubmit		2395986	0					
ANR	2395991	IdentifierDeclType	SubmitEvent		2395986	0					
ANR	2395992	Identifier	jobSubmit		2395986	1					
ANR	2395993	IdentifierDeclStatement	std :: string logNotes ;	440:1:12355:12375	2395986	1	True				
ANR	2395994	IdentifierDecl	logNotes		2395986	0					
ANR	2395995	IdentifierDeclType	std :: string		2395986	0					
ANR	2395996	Identifier	logNotes		2395986	1					
ANR	2395997	IdentifierDeclStatement	std :: string dap_id ;	442:1:12379:12397	2395986	2	True				
ANR	2395998	IdentifierDecl	dap_id		2395986	0					
ANR	2395999	IdentifierDeclType	std :: string		2395986	0					
ANR	2396000	Identifier	dap_id		2395986	1					
ANR	2396001	ExpressionStatement	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"	443:1:12400:12440	2395986	3	True				
ANR	2396002	CallExpression	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"		2395986	0					
ANR	2396003	Callee	ad -> EvaluateAttrString		2395986	0					
ANR	2396004	PtrMemberAccess	ad -> EvaluateAttrString		2395986	0					
ANR	2396005	Identifier	ad		2395986	0					
ANR	2396006	Identifier	EvaluateAttrString		2395986	1					
ANR	2396007	ArgumentList	"""dap_id"""		2395986	1					
ANR	2396008	Argument	"""dap_id"""		2395986	0					
ANR	2396009	PrimaryExpression	"""dap_id"""		2395986	0					
ANR	2396010	Argument	dap_id		2395986	1					
ANR	2396011	Identifier	dap_id		2395986	0					
ANR	2396012	IfStatement	"if ( ad -> EvaluateAttrString ( ""LogNotes"" , logNotes ) && ! logNotes . empty ( ) )"		2395986	4					
ANR	2396013	Condition	"ad -> EvaluateAttrString ( ""LogNotes"" , logNotes ) && ! logNotes . empty ( )"	445:6:12449:12516	2395986	0	True				
ANR	2396014	AndExpression	"ad -> EvaluateAttrString ( ""LogNotes"" , logNotes ) && ! logNotes . empty ( )"		2395986	0		&&			
ANR	2396015	CallExpression	"ad -> EvaluateAttrString ( ""LogNotes"" , logNotes )"		2395986	0					
ANR	2396016	Callee	ad -> EvaluateAttrString		2395986	0					
ANR	2396017	PtrMemberAccess	ad -> EvaluateAttrString		2395986	0					
ANR	2396018	Identifier	ad		2395986	0					
ANR	2396019	Identifier	EvaluateAttrString		2395986	1					
ANR	2396020	ArgumentList	"""LogNotes"""		2395986	1					
ANR	2396021	Argument	"""LogNotes"""		2395986	0					
ANR	2396022	PrimaryExpression	"""LogNotes"""		2395986	0					
ANR	2396023	Argument	logNotes		2395986	1					
ANR	2396024	Identifier	logNotes		2395986	0					
ANR	2396025	UnaryOperationExpression	! logNotes . empty ( )		2395986	1					
ANR	2396026	UnaryOperator	!		2395986	0					
ANR	2396027	CallExpression	logNotes . empty ( )		2395986	1					
ANR	2396028	Callee	logNotes . empty		2395986	0					
ANR	2396029	MemberAccess	logNotes . empty		2395986	0					
ANR	2396030	Identifier	logNotes		2395986	0					
ANR	2396031	Identifier	empty		2395986	1					
ANR	2396032	ArgumentList			2395986	1					
ANR	2396033	CompoundStatement		11:1:194:194	2395986	1					
ANR	2396034	ExpressionStatement	jobSubmit . submitEventLogNotes = strnewp ( logNotes . c_str ( ) )	451:2:12627:12686	2395986	0	True				
ANR	2396035	AssignmentExpression	jobSubmit . submitEventLogNotes = strnewp ( logNotes . c_str ( ) )		2395986	0		=			
ANR	2396036	MemberAccess	jobSubmit . submitEventLogNotes		2395986	0					
ANR	2396037	Identifier	jobSubmit		2395986	0					
ANR	2396038	Identifier	submitEventLogNotes		2395986	1					
ANR	2396039	CallExpression	strnewp ( logNotes . c_str ( ) )		2395986	1					
ANR	2396040	Callee	strnewp		2395986	0					
ANR	2396041	Identifier	strnewp		2395986	0					
ANR	2396042	ArgumentList	logNotes . c_str ( )		2395986	1					
ANR	2396043	Argument	logNotes . c_str ( )		2395986	0					
ANR	2396044	CallExpression	logNotes . c_str ( )		2395986	0					
ANR	2396045	Callee	logNotes . c_str		2395986	0					
ANR	2396046	MemberAccess	logNotes . c_str		2395986	0					
ANR	2396047	Identifier	logNotes		2395986	0					
ANR	2396048	Identifier	c_str		2395986	1					
ANR	2396049	ArgumentList			2395986	1					
ANR	2396050	IdentifierDeclStatement	std :: string submit_host ;	454:1:12693:12716	2395986	5	True				
ANR	2396051	IdentifierDecl	submit_host		2395986	0					
ANR	2396052	IdentifierDeclType	std :: string		2395986	0					
ANR	2396053	Identifier	submit_host		2395986	1					
ANR	2396054	ExpressionStatement	"ad -> EvaluateAttrString ( ""submit_host"" , submit_host )"	455:1:12719:12769	2395986	6	True				
ANR	2396055	CallExpression	"ad -> EvaluateAttrString ( ""submit_host"" , submit_host )"		2395986	0					
ANR	2396056	Callee	ad -> EvaluateAttrString		2395986	0					
ANR	2396057	PtrMemberAccess	ad -> EvaluateAttrString		2395986	0					
ANR	2396058	Identifier	ad		2395986	0					
ANR	2396059	Identifier	EvaluateAttrString		2395986	1					
ANR	2396060	ArgumentList	"""submit_host"""		2395986	1					
ANR	2396061	Argument	"""submit_host"""		2395986	0					
ANR	2396062	PrimaryExpression	"""submit_host"""		2395986	0					
ANR	2396063	Argument	submit_host		2395986	1					
ANR	2396064	Identifier	submit_host		2395986	0					
ANR	2396065	ExpressionStatement	"strncpy ( jobSubmit . submitHost , submit_host . c_str ( ) , sizeof ( jobSubmit . submitHost ) - 1 )"	456:1:12772:12860	2395986	7	True				
ANR	2396066	CallExpression	"strncpy ( jobSubmit . submitHost , submit_host . c_str ( ) , sizeof ( jobSubmit . submitHost ) - 1 )"		2395986	0					
ANR	2396067	Callee	strncpy		2395986	0					
ANR	2396068	Identifier	strncpy		2395986	0					
ANR	2396069	ArgumentList	jobSubmit . submitHost		2395986	1					
ANR	2396070	Argument	jobSubmit . submitHost		2395986	0					
ANR	2396071	MemberAccess	jobSubmit . submitHost		2395986	0					
ANR	2396072	Identifier	jobSubmit		2395986	0					
ANR	2396073	Identifier	submitHost		2395986	1					
ANR	2396074	Argument	submit_host . c_str ( )		2395986	1					
ANR	2396075	CallExpression	submit_host . c_str ( )		2395986	0					
ANR	2396076	Callee	submit_host . c_str		2395986	0					
ANR	2396077	MemberAccess	submit_host . c_str		2395986	0					
ANR	2396078	Identifier	submit_host		2395986	0					
ANR	2396079	Identifier	c_str		2395986	1					
ANR	2396080	ArgumentList			2395986	1					
ANR	2396081	Argument	sizeof ( jobSubmit . submitHost ) - 1		2395986	2					
ANR	2396082	AdditiveExpression	sizeof ( jobSubmit . submitHost ) - 1		2395986	0		-			
ANR	2396083	SizeofExpression	sizeof ( jobSubmit . submitHost )		2395986	0					
ANR	2396084	Sizeof	sizeof		2395986	0					
ANR	2396085	MemberAccess	jobSubmit . submitHost		2395986	1					
ANR	2396086	Identifier	jobSubmit		2395986	0					
ANR	2396087	Identifier	submitHost		2395986	1					
ANR	2396088	PrimaryExpression	1		2395986	1					
ANR	2396089	ExpressionStatement	jobSubmit . submitHost [ sizeof ( jobSubmit . submitHost ) - 1 ] = '\\0'	458:1:12863:12926	2395986	8	True				
ANR	2396090	AssignmentExpression	jobSubmit . submitHost [ sizeof ( jobSubmit . submitHost ) - 1 ] = '\\0'		2395986	0		=			
ANR	2396091	ArrayIndexing	jobSubmit . submitHost [ sizeof ( jobSubmit . submitHost ) - 1 ]		2395986	0					
ANR	2396092	MemberAccess	jobSubmit . submitHost		2395986	0					
ANR	2396093	Identifier	jobSubmit		2395986	0					
ANR	2396094	Identifier	submitHost		2395986	1					
ANR	2396095	AdditiveExpression	sizeof ( jobSubmit . submitHost ) - 1		2395986	1		-			
ANR	2396096	SizeofExpression	sizeof ( jobSubmit . submitHost )		2395986	0					
ANR	2396097	Sizeof	sizeof		2395986	0					
ANR	2396098	MemberAccess	jobSubmit . submitHost		2395986	1					
ANR	2396099	Identifier	jobSubmit		2395986	0					
ANR	2396100	Identifier	submitHost		2395986	1					
ANR	2396101	PrimaryExpression	1		2395986	1					
ANR	2396102	PrimaryExpression	'\\0'		2395986	1					
ANR	2396103	IfStatement	if ( ! user_log . writeEvent ( & jobSubmit ) )		2395986	9					
ANR	2396104	Condition	! user_log . writeEvent ( & jobSubmit )	460:6:12935:12967	2395986	0	True				
ANR	2396105	UnaryOperationExpression	! user_log . writeEvent ( & jobSubmit )		2395986	0					
ANR	2396106	UnaryOperator	!		2395986	0					
ANR	2396107	CallExpression	user_log . writeEvent ( & jobSubmit )		2395986	1					
ANR	2396108	Callee	user_log . writeEvent		2395986	0					
ANR	2396109	MemberAccess	user_log . writeEvent		2395986	0					
ANR	2396110	Identifier	user_log		2395986	0					
ANR	2396111	Identifier	writeEvent		2395986	1					
ANR	2396112	ArgumentList	& jobSubmit		2395986	1					
ANR	2396113	Argument	& jobSubmit		2395986	0					
ANR	2396114	UnaryOperationExpression	& jobSubmit		2395986	0					
ANR	2396115	UnaryOperator	&		2395986	0					
ANR	2396116	Identifier	jobSubmit		2395986	1					
ANR	2396117	CompoundStatement		23:42:642:642	2395986	1					
ANR	2396118	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s submit event.\\n"" , dap_id . c_str ( ) )"	461:2:12975:13060	2395986	0	True				
ANR	2396119	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s submit event.\\n"" , dap_id . c_str ( ) )"		2395986	0					
ANR	2396120	Callee	dprintf		2395986	0					
ANR	2396121	Identifier	dprintf		2395986	0					
ANR	2396122	ArgumentList	D_ALWAYS		2395986	1					
ANR	2396123	Argument	D_ALWAYS		2395986	0					
ANR	2396124	Identifier	D_ALWAYS		2395986	0					
ANR	2396125	Argument	"""ERROR: Failed to log job %s submit event.\\n"""		2395986	1					
ANR	2396126	PrimaryExpression	"""ERROR: Failed to log job %s submit event.\\n"""		2395986	0					
ANR	2396127	Argument	dap_id . c_str ( )		2395986	2					
ANR	2396128	CallExpression	dap_id . c_str ( )		2395986	0					
ANR	2396129	Callee	dap_id . c_str		2395986	0					
ANR	2396130	MemberAccess	dap_id . c_str		2395986	0					
ANR	2396131	Identifier	dap_id		2395986	0					
ANR	2396132	Identifier	c_str		2395986	1					
ANR	2396133	ArgumentList			2395986	1					
ANR	2396134	ReturnStatement	return false ;	463:2:13064:13076	2395986	1	True				
ANR	2396135	Identifier	false		2395986	0					
ANR	2396136	ReturnStatement	return true ;	466:1:13083:13094	2395986	10	True				
ANR	2396137	Identifier	true		2395986	0					
ANR	2396138	ReturnType	bool		2395986	1					
ANR	2396139	Identifier	user_log_submit		2395986	2					
ANR	2396140	ParameterList	"const classad :: ClassAd * ad , WriteUserLog & user_log"		2395986	3					
ANR	2396141	Parameter	const classad :: ClassAd * ad	436:17:12271:12296	2395986	0	True				
ANR	2396142	ParameterType	const classad :: ClassAd *		2395986	0					
ANR	2396143	Identifier	ad		2395986	1					
ANR	2396144	Parameter	WriteUserLog & user_log	437:5:12304:12325	2395986	1	True				
ANR	2396145	ParameterType	WriteUserLog &		2395986	0					
ANR	2396146	Identifier	user_log		2395986	1					
ANR	2396147	CFGEntryNode	ENTRY		2395986		True				
ANR	2396148	CFGExitNode	EXIT		2395986		True				
ANR	2396149	Symbol	ad		2395986						
ANR	2396150	Symbol	submit_host		2395986						
ANR	2396151	Symbol	& jobSubmit		2395986						
ANR	2396152	Symbol	logNotes		2395986						
ANR	2396153	Symbol	dap_id		2395986						
ANR	2396154	Symbol	D_ALWAYS		2395986						
ANR	2396155	Symbol	false		2395986						
ANR	2396156	Symbol	jobSubmit		2395986						
ANR	2396157	Symbol	* ad		2395986						
ANR	2396158	Symbol	* jobSubmit . submitHost		2395986						
ANR	2396159	Symbol	logNotes . empty		2395986						
ANR	2396160	Symbol	* jobSubmit		2395986						
ANR	2396161	Symbol	user_log		2395986						
ANR	2396162	Symbol	logNotes . c_str		2395986						
ANR	2396163	Symbol	dap_id . c_str		2395986						
ANR	2396164	Symbol	user_log . writeEvent		2395986						
ANR	2396165	Symbol	submit_host . c_str		2395986						
ANR	2396166	Symbol	true		2395986						
ANR	2396167	Symbol	strnewp		2395986						
ANR	2396168	Symbol	jobSubmit . submitEventLogNotes		2395986						
ANR	2396169	Symbol	ad -> EvaluateAttrString		2395986						
ANR	2396170	Symbol	jobSubmit . submitHost		2395986						
ANR	2396171	Function	user_log_execute	469:0:13099:13661							
ANR	2396172	FunctionDef	"user_log_execute (const classad :: ClassAd * ad , WriteUserLog & user_log)"		2396171	0					
ANR	2396173	CompoundStatement		472:0:13179:13661	2396171	0					
ANR	2396174	IdentifierDeclStatement	ExecuteEvent event ;	473:1:13182:13200	2396171	0	True				
ANR	2396175	IdentifierDecl	event		2396171	0					
ANR	2396176	IdentifierDeclType	ExecuteEvent		2396171	0					
ANR	2396177	Identifier	event		2396171	1					
ANR	2396178	IdentifierDeclStatement	std :: string dap_id ;	475:1:13204:13222	2396171	1	True				
ANR	2396179	IdentifierDecl	dap_id		2396171	0					
ANR	2396180	IdentifierDeclType	std :: string		2396171	0					
ANR	2396181	Identifier	dap_id		2396171	1					
ANR	2396182	ExpressionStatement	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"	476:1:13225:13265	2396171	2	True				
ANR	2396183	CallExpression	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"		2396171	0					
ANR	2396184	Callee	ad -> EvaluateAttrString		2396171	0					
ANR	2396185	PtrMemberAccess	ad -> EvaluateAttrString		2396171	0					
ANR	2396186	Identifier	ad		2396171	0					
ANR	2396187	Identifier	EvaluateAttrString		2396171	1					
ANR	2396188	ArgumentList	"""dap_id"""		2396171	1					
ANR	2396189	Argument	"""dap_id"""		2396171	0					
ANR	2396190	PrimaryExpression	"""dap_id"""		2396171	0					
ANR	2396191	Argument	dap_id		2396171	1					
ANR	2396192	Identifier	dap_id		2396171	0					
ANR	2396193	IdentifierDeclStatement	std :: string execute_host ;	478:1:13269:13293	2396171	3	True				
ANR	2396194	IdentifierDecl	execute_host		2396171	0					
ANR	2396195	IdentifierDeclType	std :: string		2396171	0					
ANR	2396196	Identifier	execute_host		2396171	1					
ANR	2396197	ExpressionStatement	"ad -> EvaluateAttrString ( ""execute_host"" , execute_host )"	479:1:13296:13348	2396171	4	True				
ANR	2396198	CallExpression	"ad -> EvaluateAttrString ( ""execute_host"" , execute_host )"		2396171	0					
ANR	2396199	Callee	ad -> EvaluateAttrString		2396171	0					
ANR	2396200	PtrMemberAccess	ad -> EvaluateAttrString		2396171	0					
ANR	2396201	Identifier	ad		2396171	0					
ANR	2396202	Identifier	EvaluateAttrString		2396171	1					
ANR	2396203	ArgumentList	"""execute_host"""		2396171	1					
ANR	2396204	Argument	"""execute_host"""		2396171	0					
ANR	2396205	PrimaryExpression	"""execute_host"""		2396171	0					
ANR	2396206	Argument	execute_host		2396171	1					
ANR	2396207	Identifier	execute_host		2396171	0					
ANR	2396208	ExpressionStatement	"strncpy ( event . executeHost , execute_host . c_str ( ) , sizeof ( event . executeHost ) - 1 )"	480:1:13351:13434	2396171	5	True				
ANR	2396209	CallExpression	"strncpy ( event . executeHost , execute_host . c_str ( ) , sizeof ( event . executeHost ) - 1 )"		2396171	0					
ANR	2396210	Callee	strncpy		2396171	0					
ANR	2396211	Identifier	strncpy		2396171	0					
ANR	2396212	ArgumentList	event . executeHost		2396171	1					
ANR	2396213	Argument	event . executeHost		2396171	0					
ANR	2396214	MemberAccess	event . executeHost		2396171	0					
ANR	2396215	Identifier	event		2396171	0					
ANR	2396216	Identifier	executeHost		2396171	1					
ANR	2396217	Argument	execute_host . c_str ( )		2396171	1					
ANR	2396218	CallExpression	execute_host . c_str ( )		2396171	0					
ANR	2396219	Callee	execute_host . c_str		2396171	0					
ANR	2396220	MemberAccess	execute_host . c_str		2396171	0					
ANR	2396221	Identifier	execute_host		2396171	0					
ANR	2396222	Identifier	c_str		2396171	1					
ANR	2396223	ArgumentList			2396171	1					
ANR	2396224	Argument	sizeof ( event . executeHost ) - 1		2396171	2					
ANR	2396225	AdditiveExpression	sizeof ( event . executeHost ) - 1		2396171	0		-			
ANR	2396226	SizeofExpression	sizeof ( event . executeHost )		2396171	0					
ANR	2396227	Sizeof	sizeof		2396171	0					
ANR	2396228	MemberAccess	event . executeHost		2396171	1					
ANR	2396229	Identifier	event		2396171	0					
ANR	2396230	Identifier	executeHost		2396171	1					
ANR	2396231	PrimaryExpression	1		2396171	1					
ANR	2396232	ExpressionStatement	event . executeHost [ sizeof ( event . executeHost ) - 1 ] = '\\0'	482:1:13437:13494	2396171	6	True				
ANR	2396233	AssignmentExpression	event . executeHost [ sizeof ( event . executeHost ) - 1 ] = '\\0'		2396171	0		=			
ANR	2396234	ArrayIndexing	event . executeHost [ sizeof ( event . executeHost ) - 1 ]		2396171	0					
ANR	2396235	MemberAccess	event . executeHost		2396171	0					
ANR	2396236	Identifier	event		2396171	0					
ANR	2396237	Identifier	executeHost		2396171	1					
ANR	2396238	AdditiveExpression	sizeof ( event . executeHost ) - 1		2396171	1		-			
ANR	2396239	SizeofExpression	sizeof ( event . executeHost )		2396171	0					
ANR	2396240	Sizeof	sizeof		2396171	0					
ANR	2396241	MemberAccess	event . executeHost		2396171	1					
ANR	2396242	Identifier	event		2396171	0					
ANR	2396243	Identifier	executeHost		2396171	1					
ANR	2396244	PrimaryExpression	1		2396171	1					
ANR	2396245	PrimaryExpression	'\\0'		2396171	1					
ANR	2396246	IfStatement	if ( ! user_log . writeEvent ( & event ) )		2396171	7					
ANR	2396247	Condition	! user_log . writeEvent ( & event )	484:6:13503:13531	2396171	0	True				
ANR	2396248	UnaryOperationExpression	! user_log . writeEvent ( & event )		2396171	0					
ANR	2396249	UnaryOperator	!		2396171	0					
ANR	2396250	CallExpression	user_log . writeEvent ( & event )		2396171	1					
ANR	2396251	Callee	user_log . writeEvent		2396171	0					
ANR	2396252	MemberAccess	user_log . writeEvent		2396171	0					
ANR	2396253	Identifier	user_log		2396171	0					
ANR	2396254	Identifier	writeEvent		2396171	1					
ANR	2396255	ArgumentList	& event		2396171	1					
ANR	2396256	Argument	& event		2396171	0					
ANR	2396257	UnaryOperationExpression	& event		2396171	0					
ANR	2396258	UnaryOperator	&		2396171	0					
ANR	2396259	Identifier	event		2396171	1					
ANR	2396260	CompoundStatement		13:38:355:355	2396171	1					
ANR	2396261	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s execute event.\\n"" , dap_id . c_str ( ) )"	485:2:13539:13625	2396171	0	True				
ANR	2396262	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s execute event.\\n"" , dap_id . c_str ( ) )"		2396171	0					
ANR	2396263	Callee	dprintf		2396171	0					
ANR	2396264	Identifier	dprintf		2396171	0					
ANR	2396265	ArgumentList	D_ALWAYS		2396171	1					
ANR	2396266	Argument	D_ALWAYS		2396171	0					
ANR	2396267	Identifier	D_ALWAYS		2396171	0					
ANR	2396268	Argument	"""ERROR: Failed to log job %s execute event.\\n"""		2396171	1					
ANR	2396269	PrimaryExpression	"""ERROR: Failed to log job %s execute event.\\n"""		2396171	0					
ANR	2396270	Argument	dap_id . c_str ( )		2396171	2					
ANR	2396271	CallExpression	dap_id . c_str ( )		2396171	0					
ANR	2396272	Callee	dap_id . c_str		2396171	0					
ANR	2396273	MemberAccess	dap_id . c_str		2396171	0					
ANR	2396274	Identifier	dap_id		2396171	0					
ANR	2396275	Identifier	c_str		2396171	1					
ANR	2396276	ArgumentList			2396171	1					
ANR	2396277	ReturnStatement	return false ;	487:2:13629:13641	2396171	1	True				
ANR	2396278	Identifier	false		2396171	0					
ANR	2396279	ReturnStatement	return true ;	490:1:13648:13659	2396171	8	True				
ANR	2396280	Identifier	true		2396171	0					
ANR	2396281	ReturnType	bool		2396171	1					
ANR	2396282	Identifier	user_log_execute		2396171	2					
ANR	2396283	ParameterList	"const classad :: ClassAd * ad , WriteUserLog & user_log"		2396171	3					
ANR	2396284	Parameter	const classad :: ClassAd * ad	470:18:13122:13147	2396171	0	True				
ANR	2396285	ParameterType	const classad :: ClassAd *		2396171	0					
ANR	2396286	Identifier	ad		2396171	1					
ANR	2396287	Parameter	WriteUserLog & user_log	471:5:13155:13176	2396171	1	True				
ANR	2396288	ParameterType	WriteUserLog &		2396171	0					
ANR	2396289	Identifier	user_log		2396171	1					
ANR	2396290	CFGEntryNode	ENTRY		2396171		True				
ANR	2396291	CFGExitNode	EXIT		2396171		True				
ANR	2396292	Symbol	ad		2396171						
ANR	2396293	Symbol	event . executeHost		2396171						
ANR	2396294	Symbol	* event		2396171						
ANR	2396295	Symbol	dap_id		2396171						
ANR	2396296	Symbol	D_ALWAYS		2396171						
ANR	2396297	Symbol	false		2396171						
ANR	2396298	Symbol	execute_host		2396171						
ANR	2396299	Symbol	& event		2396171						
ANR	2396300	Symbol	user_log		2396171						
ANR	2396301	Symbol	dap_id . c_str		2396171						
ANR	2396302	Symbol	execute_host . c_str		2396171						
ANR	2396303	Symbol	user_log . writeEvent		2396171						
ANR	2396304	Symbol	* event . executeHost		2396171						
ANR	2396305	Symbol	true		2396171						
ANR	2396306	Symbol	event		2396171						
ANR	2396307	Function	user_log_generic	493:0:13664:14128							
ANR	2396308	FunctionDef	"user_log_generic (const classad :: ClassAd * ad , WriteUserLog & user_log)"		2396307	0					
ANR	2396309	CompoundStatement		496:0:13744:14128	2396307	0					
ANR	2396310	IdentifierDeclStatement	GenericEvent event ;	497:1:13747:13765	2396307	0	True				
ANR	2396311	IdentifierDecl	event		2396307	0					
ANR	2396312	IdentifierDeclType	GenericEvent		2396307	0					
ANR	2396313	Identifier	event		2396307	1					
ANR	2396314	IdentifierDeclStatement	std :: string dap_id ;	499:1:13769:13787	2396307	1	True				
ANR	2396315	IdentifierDecl	dap_id		2396307	0					
ANR	2396316	IdentifierDeclType	std :: string		2396307	0					
ANR	2396317	Identifier	dap_id		2396307	1					
ANR	2396318	ExpressionStatement	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"	500:1:13790:13830	2396307	2	True				
ANR	2396319	CallExpression	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"		2396307	0					
ANR	2396320	Callee	ad -> EvaluateAttrString		2396307	0					
ANR	2396321	PtrMemberAccess	ad -> EvaluateAttrString		2396307	0					
ANR	2396322	Identifier	ad		2396307	0					
ANR	2396323	Identifier	EvaluateAttrString		2396307	1					
ANR	2396324	ArgumentList	"""dap_id"""		2396307	1					
ANR	2396325	Argument	"""dap_id"""		2396307	0					
ANR	2396326	PrimaryExpression	"""dap_id"""		2396307	0					
ANR	2396327	Argument	dap_id		2396307	1					
ANR	2396328	Identifier	dap_id		2396307	0					
ANR	2396329	IdentifierDeclStatement	std :: string generic_event ;	502:1:13834:13859	2396307	3	True				
ANR	2396330	IdentifierDecl	generic_event		2396307	0					
ANR	2396331	IdentifierDeclType	std :: string		2396307	0					
ANR	2396332	Identifier	generic_event		2396307	1					
ANR	2396333	ExpressionStatement	"ad -> EvaluateAttrString ( ""generic_event"" , generic_event )"	503:1:13862:13916	2396307	4	True				
ANR	2396334	CallExpression	"ad -> EvaluateAttrString ( ""generic_event"" , generic_event )"		2396307	0					
ANR	2396335	Callee	ad -> EvaluateAttrString		2396307	0					
ANR	2396336	PtrMemberAccess	ad -> EvaluateAttrString		2396307	0					
ANR	2396337	Identifier	ad		2396307	0					
ANR	2396338	Identifier	EvaluateAttrString		2396307	1					
ANR	2396339	ArgumentList	"""generic_event"""		2396307	1					
ANR	2396340	Argument	"""generic_event"""		2396307	0					
ANR	2396341	PrimaryExpression	"""generic_event"""		2396307	0					
ANR	2396342	Argument	generic_event		2396307	1					
ANR	2396343	Identifier	generic_event		2396307	0					
ANR	2396344	ExpressionStatement	event . setInfoText ( generic_event . c_str ( ) )	504:1:13919:13961	2396307	5	True				
ANR	2396345	CallExpression	event . setInfoText ( generic_event . c_str ( ) )		2396307	0					
ANR	2396346	Callee	event . setInfoText		2396307	0					
ANR	2396347	MemberAccess	event . setInfoText		2396307	0					
ANR	2396348	Identifier	event		2396307	0					
ANR	2396349	Identifier	setInfoText		2396307	1					
ANR	2396350	ArgumentList	generic_event . c_str ( )		2396307	1					
ANR	2396351	Argument	generic_event . c_str ( )		2396307	0					
ANR	2396352	CallExpression	generic_event . c_str ( )		2396307	0					
ANR	2396353	Callee	generic_event . c_str		2396307	0					
ANR	2396354	MemberAccess	generic_event . c_str		2396307	0					
ANR	2396355	Identifier	generic_event		2396307	0					
ANR	2396356	Identifier	c_str		2396307	1					
ANR	2396357	ArgumentList			2396307	1					
ANR	2396358	IfStatement	if ( ! user_log . writeEvent ( & event ) )		2396307	6					
ANR	2396359	Condition	! user_log . writeEvent ( & event )	506:6:13970:13998	2396307	0	True				
ANR	2396360	UnaryOperationExpression	! user_log . writeEvent ( & event )		2396307	0					
ANR	2396361	UnaryOperator	!		2396307	0					
ANR	2396362	CallExpression	user_log . writeEvent ( & event )		2396307	1					
ANR	2396363	Callee	user_log . writeEvent		2396307	0					
ANR	2396364	MemberAccess	user_log . writeEvent		2396307	0					
ANR	2396365	Identifier	user_log		2396307	0					
ANR	2396366	Identifier	writeEvent		2396307	1					
ANR	2396367	ArgumentList	& event		2396307	1					
ANR	2396368	Argument	& event		2396307	0					
ANR	2396369	UnaryOperationExpression	& event		2396307	0					
ANR	2396370	UnaryOperator	&		2396307	0					
ANR	2396371	Identifier	event		2396307	1					
ANR	2396372	CompoundStatement		11:38:257:257	2396307	1					
ANR	2396373	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s generic event.\\n"" , dap_id . c_str ( ) )"	507:2:14006:14092	2396307	0	True				
ANR	2396374	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s generic event.\\n"" , dap_id . c_str ( ) )"		2396307	0					
ANR	2396375	Callee	dprintf		2396307	0					
ANR	2396376	Identifier	dprintf		2396307	0					
ANR	2396377	ArgumentList	D_ALWAYS		2396307	1					
ANR	2396378	Argument	D_ALWAYS		2396307	0					
ANR	2396379	Identifier	D_ALWAYS		2396307	0					
ANR	2396380	Argument	"""ERROR: Failed to log job %s generic event.\\n"""		2396307	1					
ANR	2396381	PrimaryExpression	"""ERROR: Failed to log job %s generic event.\\n"""		2396307	0					
ANR	2396382	Argument	dap_id . c_str ( )		2396307	2					
ANR	2396383	CallExpression	dap_id . c_str ( )		2396307	0					
ANR	2396384	Callee	dap_id . c_str		2396307	0					
ANR	2396385	MemberAccess	dap_id . c_str		2396307	0					
ANR	2396386	Identifier	dap_id		2396307	0					
ANR	2396387	Identifier	c_str		2396307	1					
ANR	2396388	ArgumentList			2396307	1					
ANR	2396389	ReturnStatement	return false ;	509:2:14096:14108	2396307	1	True				
ANR	2396390	Identifier	false		2396307	0					
ANR	2396391	ReturnStatement	return true ;	512:1:14115:14126	2396307	7	True				
ANR	2396392	Identifier	true		2396307	0					
ANR	2396393	ReturnType	bool		2396307	1					
ANR	2396394	Identifier	user_log_generic		2396307	2					
ANR	2396395	ParameterList	"const classad :: ClassAd * ad , WriteUserLog & user_log"		2396307	3					
ANR	2396396	Parameter	const classad :: ClassAd * ad	494:18:13687:13712	2396307	0	True				
ANR	2396397	ParameterType	const classad :: ClassAd *		2396307	0					
ANR	2396398	Identifier	ad		2396307	1					
ANR	2396399	Parameter	WriteUserLog & user_log	495:5:13720:13741	2396307	1	True				
ANR	2396400	ParameterType	WriteUserLog &		2396307	0					
ANR	2396401	Identifier	user_log		2396307	1					
ANR	2396402	CFGEntryNode	ENTRY		2396307		True				
ANR	2396403	CFGExitNode	EXIT		2396307		True				
ANR	2396404	Symbol	user_log		2396307						
ANR	2396405	Symbol	generic_event . c_str		2396307						
ANR	2396406	Symbol	ad		2396307						
ANR	2396407	Symbol	dap_id . c_str		2396307						
ANR	2396408	Symbol	user_log . writeEvent		2396307						
ANR	2396409	Symbol	dap_id		2396307						
ANR	2396410	Symbol	D_ALWAYS		2396307						
ANR	2396411	Symbol	false		2396307						
ANR	2396412	Symbol	true		2396307						
ANR	2396413	Symbol	event		2396307						
ANR	2396414	Symbol	generic_event		2396307						
ANR	2396415	Symbol	& event		2396307						
ANR	2396416	Function	user_log_terminated	515:0:14131:15764							
ANR	2396417	FunctionDef	"user_log_terminated (const classad :: ClassAd * ad , WriteUserLog & user_log)"		2396416	0					
ANR	2396418	CompoundStatement		518:0:14215:15764	2396416	0					
ANR	2396419	IdentifierDeclStatement	JobTerminatedEvent event ;	519:1:14218:14242	2396416	0	True				
ANR	2396420	IdentifierDecl	event		2396416	0					
ANR	2396421	IdentifierDeclType	JobTerminatedEvent		2396416	0					
ANR	2396422	Identifier	event		2396416	1					
ANR	2396423	IdentifierDeclStatement	std :: string termination_type ;	520:1:14245:14273	2396416	1	True				
ANR	2396424	IdentifierDecl	termination_type		2396416	0					
ANR	2396425	IdentifierDeclType	std :: string		2396416	0					
ANR	2396426	Identifier	termination_type		2396416	1					
ANR	2396427	IdentifierDeclStatement	std :: string dap_id ;	522:1:14277:14295	2396416	2	True				
ANR	2396428	IdentifierDecl	dap_id		2396416	0					
ANR	2396429	IdentifierDeclType	std :: string		2396416	0					
ANR	2396430	Identifier	dap_id		2396416	1					
ANR	2396431	ExpressionStatement	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"	523:1:14298:14338	2396416	3	True				
ANR	2396432	CallExpression	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"		2396416	0					
ANR	2396433	Callee	ad -> EvaluateAttrString		2396416	0					
ANR	2396434	PtrMemberAccess	ad -> EvaluateAttrString		2396416	0					
ANR	2396435	Identifier	ad		2396416	0					
ANR	2396436	Identifier	EvaluateAttrString		2396416	1					
ANR	2396437	ArgumentList	"""dap_id"""		2396416	1					
ANR	2396438	Argument	"""dap_id"""		2396416	0					
ANR	2396439	PrimaryExpression	"""dap_id"""		2396416	0					
ANR	2396440	Argument	dap_id		2396416	1					
ANR	2396441	Identifier	dap_id		2396416	0					
ANR	2396442	IfStatement	"if ( ! ad -> EvaluateAttrString ( ""termination_type"" , termination_type ) || termination_type . empty ( ) )"		2396416	4					
ANR	2396443	Condition	"! ad -> EvaluateAttrString ( ""termination_type"" , termination_type ) || termination_type . empty ( )"	525:6:14347:14439	2396416	0	True				
ANR	2396444	OrExpression	"! ad -> EvaluateAttrString ( ""termination_type"" , termination_type ) || termination_type . empty ( )"		2396416	0		||			
ANR	2396445	UnaryOperationExpression	"! ad -> EvaluateAttrString ( ""termination_type"" , termination_type )"		2396416	0					
ANR	2396446	UnaryOperator	!		2396416	0					
ANR	2396447	CallExpression	"ad -> EvaluateAttrString ( ""termination_type"" , termination_type )"		2396416	1					
ANR	2396448	Callee	ad -> EvaluateAttrString		2396416	0					
ANR	2396449	PtrMemberAccess	ad -> EvaluateAttrString		2396416	0					
ANR	2396450	Identifier	ad		2396416	0					
ANR	2396451	Identifier	EvaluateAttrString		2396416	1					
ANR	2396452	ArgumentList	"""termination_type"""		2396416	1					
ANR	2396453	Argument	"""termination_type"""		2396416	0					
ANR	2396454	PrimaryExpression	"""termination_type"""		2396416	0					
ANR	2396455	Argument	termination_type		2396416	1					
ANR	2396456	Identifier	termination_type		2396416	0					
ANR	2396457	CallExpression	termination_type . empty ( )		2396416	1					
ANR	2396458	Callee	termination_type . empty		2396416	0					
ANR	2396459	MemberAccess	termination_type . empty		2396416	0					
ANR	2396460	Identifier	termination_type		2396416	0					
ANR	2396461	Identifier	empty		2396416	1					
ANR	2396462	ArgumentList			2396416	1					
ANR	2396463	CompoundStatement		10:1:228:228	2396416	1					
ANR	2396464	ExpressionStatement	"dprintf ( D_ALWAYS , ""job %s has no termination type\\n"" , dap_id . c_str ( ) )"	528:2:14448:14518	2396416	0	True				
ANR	2396465	CallExpression	"dprintf ( D_ALWAYS , ""job %s has no termination type\\n"" , dap_id . c_str ( ) )"		2396416	0					
ANR	2396466	Callee	dprintf		2396416	0					
ANR	2396467	Identifier	dprintf		2396416	0					
ANR	2396468	ArgumentList	D_ALWAYS		2396416	1					
ANR	2396469	Argument	D_ALWAYS		2396416	0					
ANR	2396470	Identifier	D_ALWAYS		2396416	0					
ANR	2396471	Argument	"""job %s has no termination type\\n"""		2396416	1					
ANR	2396472	PrimaryExpression	"""job %s has no termination type\\n"""		2396416	0					
ANR	2396473	Argument	dap_id . c_str ( )		2396416	2					
ANR	2396474	CallExpression	dap_id . c_str ( )		2396416	0					
ANR	2396475	Callee	dap_id . c_str		2396416	0					
ANR	2396476	MemberAccess	dap_id . c_str		2396416	0					
ANR	2396477	Identifier	dap_id		2396416	0					
ANR	2396478	Identifier	c_str		2396416	1					
ANR	2396479	ArgumentList			2396416	1					
ANR	2396480	ReturnStatement	return false ;	529:2:14522:14534	2396416	1	True				
ANR	2396481	Identifier	false		2396416	0					
ANR	2396482	IfStatement	"if ( termination_type == ""job_retry_limit"" || termination_type == ""server_error"" )"		2396416	5					
ANR	2396483	Condition	"termination_type == ""job_retry_limit"" || termination_type == ""server_error"""	532:5:14545:14621	2396416	0	True				
ANR	2396484	OrExpression	"termination_type == ""job_retry_limit"" || termination_type == ""server_error"""		2396416	0		||			
ANR	2396485	EqualityExpression	"termination_type == ""job_retry_limit"""		2396416	0		==			
ANR	2396486	Identifier	termination_type		2396416	0					
ANR	2396487	PrimaryExpression	"""job_retry_limit"""		2396416	1					
ANR	2396488	EqualityExpression	"termination_type == ""server_error"""		2396416	1		==			
ANR	2396489	Identifier	termination_type		2396416	0					
ANR	2396490	PrimaryExpression	"""server_error"""		2396416	1					
ANR	2396491	CompoundStatement		16:38:408:408	2396416	1					
ANR	2396492	ExpressionStatement	event . normal = false	536:2:14722:14742	2396416	0	True				
ANR	2396493	AssignmentExpression	event . normal = false		2396416	0		=			
ANR	2396494	MemberAccess	event . normal		2396416	0					
ANR	2396495	Identifier	event		2396416	0					
ANR	2396496	Identifier	normal		2396416	1					
ANR	2396497	Identifier	false		2396416	1					
ANR	2396498	ElseStatement	else		2396416	0					
ANR	2396499	IfStatement	"if ( termination_type == ""exited"" )"		2396416	0					
ANR	2396500	Condition	"termination_type == ""exited"""	537:12:14756:14783	2396416	0	True				
ANR	2396501	EqualityExpression	"termination_type == ""exited"""		2396416	0		==			
ANR	2396502	Identifier	termination_type		2396416	0					
ANR	2396503	PrimaryExpression	"""exited"""		2396416	1					
ANR	2396504	CompoundStatement		22:2:619:634	2396416	1					
ANR	2396505	IdentifierDeclStatement	int exit_status ;	539:2:14835:14850	2396416	0	True				
ANR	2396506	IdentifierDecl	exit_status		2396416	0					
ANR	2396507	IdentifierDeclType	int		2396416	0					
ANR	2396508	Identifier	exit_status		2396416	1					
ANR	2396509	IfStatement	"if ( ! ad -> EvaluateAttrInt ( ""exit_status"" , exit_status ) )"		2396416	1					
ANR	2396510	Condition	"! ad -> EvaluateAttrInt ( ""exit_status"" , exit_status )"	540:6:14858:14906	2396416	0	True				
ANR	2396511	UnaryOperationExpression	"! ad -> EvaluateAttrInt ( ""exit_status"" , exit_status )"		2396416	0					
ANR	2396512	UnaryOperator	!		2396416	0					
ANR	2396513	CallExpression	"ad -> EvaluateAttrInt ( ""exit_status"" , exit_status )"		2396416	1					
ANR	2396514	Callee	ad -> EvaluateAttrInt		2396416	0					
ANR	2396515	PtrMemberAccess	ad -> EvaluateAttrInt		2396416	0					
ANR	2396516	Identifier	ad		2396416	0					
ANR	2396517	Identifier	EvaluateAttrInt		2396416	1					
ANR	2396518	ArgumentList	"""exit_status"""		2396416	1					
ANR	2396519	Argument	"""exit_status"""		2396416	0					
ANR	2396520	PrimaryExpression	"""exit_status"""		2396416	0					
ANR	2396521	Argument	exit_status		2396416	1					
ANR	2396522	Identifier	exit_status		2396416	0					
ANR	2396523	CompoundStatement		23:58:694:694	2396416	1					
ANR	2396524	ExpressionStatement	"dprintf ( D_ALWAYS , ""job %s exit_status not found\\n"" , dap_id . c_str ( ) )"	541:3:14915:14988	2396416	0	True				
ANR	2396525	CallExpression	"dprintf ( D_ALWAYS , ""job %s exit_status not found\\n"" , dap_id . c_str ( ) )"		2396416	0					
ANR	2396526	Callee	dprintf		2396416	0					
ANR	2396527	Identifier	dprintf		2396416	0					
ANR	2396528	ArgumentList	D_ALWAYS		2396416	1					
ANR	2396529	Argument	D_ALWAYS		2396416	0					
ANR	2396530	Identifier	D_ALWAYS		2396416	0					
ANR	2396531	Argument	"""job %s exit_status not found\\n"""		2396416	1					
ANR	2396532	PrimaryExpression	"""job %s exit_status not found\\n"""		2396416	0					
ANR	2396533	Argument	dap_id . c_str ( )		2396416	2					
ANR	2396534	CallExpression	dap_id . c_str ( )		2396416	0					
ANR	2396535	Callee	dap_id . c_str		2396416	0					
ANR	2396536	MemberAccess	dap_id . c_str		2396416	0					
ANR	2396537	Identifier	dap_id		2396416	0					
ANR	2396538	Identifier	c_str		2396416	1					
ANR	2396539	ArgumentList			2396416	1					
ANR	2396540	ReturnStatement	return false ;	543:3:14993:15005	2396416	1	True				
ANR	2396541	Identifier	false		2396416	0					
ANR	2396542	ElseStatement	else		2396416	0					
ANR	2396543	IfStatement	if ( WIFEXITED ( exit_status ) )		2396416	0					
ANR	2396544	Condition	WIFEXITED ( exit_status )	544:14:15021:15043	2396416	0	True				
ANR	2396545	CallExpression	WIFEXITED ( exit_status )		2396416	0					
ANR	2396546	Callee	WIFEXITED		2396416	0					
ANR	2396547	Identifier	WIFEXITED		2396416	0					
ANR	2396548	ArgumentList	exit_status		2396416	1					
ANR	2396549	Argument	exit_status		2396416	0					
ANR	2396550	Identifier	exit_status		2396416	0					
ANR	2396551	CompoundStatement		27:40:831:831	2396416	1					
ANR	2396552	ExpressionStatement	event . normal = ( exit_status == 0 ) ? true : false	546:3:15115:15163	2396416	0	True				
ANR	2396553	AssignmentExpression	event . normal = ( exit_status == 0 ) ? true : false		2396416	0		=			
ANR	2396554	MemberAccess	event . normal		2396416	0					
ANR	2396555	Identifier	event		2396416	0					
ANR	2396556	Identifier	normal		2396416	1					
ANR	2396557	ConditionalExpression	( exit_status == 0 ) ? true : false		2396416	1					
ANR	2396558	Condition	exit_status == 0		2396416	0					
ANR	2396559	EqualityExpression	exit_status == 0		2396416	0		==			
ANR	2396560	Identifier	exit_status		2396416	0					
ANR	2396561	PrimaryExpression	0		2396416	1					
ANR	2396562	Identifier	true		2396416	1					
ANR	2396563	Identifier	false		2396416	2					
ANR	2396564	ExpressionStatement	event . returnValue = WEXITSTATUS ( exit_status )	547:3:15168:15214	2396416	1	True				
ANR	2396565	AssignmentExpression	event . returnValue = WEXITSTATUS ( exit_status )		2396416	0		=			
ANR	2396566	MemberAccess	event . returnValue		2396416	0					
ANR	2396567	Identifier	event		2396416	0					
ANR	2396568	Identifier	returnValue		2396416	1					
ANR	2396569	CallExpression	WEXITSTATUS ( exit_status )		2396416	1					
ANR	2396570	Callee	WEXITSTATUS		2396416	0					
ANR	2396571	Identifier	WEXITSTATUS		2396416	0					
ANR	2396572	ArgumentList	exit_status		2396416	1					
ANR	2396573	Argument	exit_status		2396416	0					
ANR	2396574	Identifier	exit_status		2396416	0					
ANR	2396575	ElseStatement	else		2396416	0					
ANR	2396576	IfStatement	if ( WIFSIGNALED ( exit_status ) )		2396416	0					
ANR	2396577	Condition	WIFSIGNALED ( exit_status )	548:14:15230:15254	2396416	0	True				
ANR	2396578	CallExpression	WIFSIGNALED ( exit_status )		2396416	0					
ANR	2396579	Callee	WIFSIGNALED		2396416	0					
ANR	2396580	Identifier	WIFSIGNALED		2396416	0					
ANR	2396581	ArgumentList	exit_status		2396416	1					
ANR	2396582	Argument	exit_status		2396416	0					
ANR	2396583	Identifier	exit_status		2396416	0					
ANR	2396584	CompoundStatement		31:42:1042:1042	2396416	1					
ANR	2396585	ExpressionStatement	event . normal = false	549:3:15263:15283	2396416	0	True				
ANR	2396586	AssignmentExpression	event . normal = false		2396416	0		=			
ANR	2396587	MemberAccess	event . normal		2396416	0					
ANR	2396588	Identifier	event		2396416	0					
ANR	2396589	Identifier	normal		2396416	1					
ANR	2396590	Identifier	false		2396416	1					
ANR	2396591	ExpressionStatement	event . signalNumber = WTERMSIG ( exit_status )	550:3:15288:15332	2396416	1	True				
ANR	2396592	AssignmentExpression	event . signalNumber = WTERMSIG ( exit_status )		2396416	0		=			
ANR	2396593	MemberAccess	event . signalNumber		2396416	0					
ANR	2396594	Identifier	event		2396416	0					
ANR	2396595	Identifier	signalNumber		2396416	1					
ANR	2396596	CallExpression	WTERMSIG ( exit_status )		2396416	1					
ANR	2396597	Callee	WTERMSIG		2396416	0					
ANR	2396598	Identifier	WTERMSIG		2396416	0					
ANR	2396599	ArgumentList	exit_status		2396416	1					
ANR	2396600	Argument	exit_status		2396416	0					
ANR	2396601	Identifier	exit_status		2396416	0					
ANR	2396602	ElseStatement	else		2396416	0					
ANR	2396603	CompoundStatement		34:9:1127:1127	2396416	0					
ANR	2396604	ExpressionStatement	"dprintf ( D_ALWAYS , ""job %s exit_status %d unknown\\n"" , dap_id . c_str ( ) , exit_status )"	552:3:15348:15435	2396416	0	True				
ANR	2396605	CallExpression	"dprintf ( D_ALWAYS , ""job %s exit_status %d unknown\\n"" , dap_id . c_str ( ) , exit_status )"		2396416	0					
ANR	2396606	Callee	dprintf		2396416	0					
ANR	2396607	Identifier	dprintf		2396416	0					
ANR	2396608	ArgumentList	D_ALWAYS		2396416	1					
ANR	2396609	Argument	D_ALWAYS		2396416	0					
ANR	2396610	Identifier	D_ALWAYS		2396416	0					
ANR	2396611	Argument	"""job %s exit_status %d unknown\\n"""		2396416	1					
ANR	2396612	PrimaryExpression	"""job %s exit_status %d unknown\\n"""		2396416	0					
ANR	2396613	Argument	dap_id . c_str ( )		2396416	2					
ANR	2396614	CallExpression	dap_id . c_str ( )		2396416	0					
ANR	2396615	Callee	dap_id . c_str		2396416	0					
ANR	2396616	MemberAccess	dap_id . c_str		2396416	0					
ANR	2396617	Identifier	dap_id		2396416	0					
ANR	2396618	Identifier	c_str		2396416	1					
ANR	2396619	ArgumentList			2396416	1					
ANR	2396620	Argument	exit_status		2396416	3					
ANR	2396621	Identifier	exit_status		2396416	0					
ANR	2396622	ReturnStatement	return false ;	554:3:15440:15452	2396416	1	True				
ANR	2396623	Identifier	false		2396416	0					
ANR	2396624	ElseStatement	else		2396416	0					
ANR	2396625	CompoundStatement		39:8:1250:1250	2396416	0					
ANR	2396626	ExpressionStatement	"dprintf ( D_ALWAYS , ""job %s unknown termination type: %s\\n"" , dap_id . c_str ( ) , termination_type . c_str ( ) )"	557:2:15470:15575	2396416	0	True				
ANR	2396627	CallExpression	"dprintf ( D_ALWAYS , ""job %s unknown termination type: %s\\n"" , dap_id . c_str ( ) , termination_type . c_str ( ) )"		2396416	0					
ANR	2396628	Callee	dprintf		2396416	0					
ANR	2396629	Identifier	dprintf		2396416	0					
ANR	2396630	ArgumentList	D_ALWAYS		2396416	1					
ANR	2396631	Argument	D_ALWAYS		2396416	0					
ANR	2396632	Identifier	D_ALWAYS		2396416	0					
ANR	2396633	Argument	"""job %s unknown termination type: %s\\n"""		2396416	1					
ANR	2396634	PrimaryExpression	"""job %s unknown termination type: %s\\n"""		2396416	0					
ANR	2396635	Argument	dap_id . c_str ( )		2396416	2					
ANR	2396636	CallExpression	dap_id . c_str ( )		2396416	0					
ANR	2396637	Callee	dap_id . c_str		2396416	0					
ANR	2396638	MemberAccess	dap_id . c_str		2396416	0					
ANR	2396639	Identifier	dap_id		2396416	0					
ANR	2396640	Identifier	c_str		2396416	1					
ANR	2396641	ArgumentList			2396416	1					
ANR	2396642	Argument	termination_type . c_str ( )		2396416	3					
ANR	2396643	CallExpression	termination_type . c_str ( )		2396416	0					
ANR	2396644	Callee	termination_type . c_str		2396416	0					
ANR	2396645	MemberAccess	termination_type . c_str		2396416	0					
ANR	2396646	Identifier	termination_type		2396416	0					
ANR	2396647	Identifier	c_str		2396416	1					
ANR	2396648	ArgumentList			2396416	1					
ANR	2396649	ReturnStatement	return false ;	559:2:15579:15591	2396416	1	True				
ANR	2396650	Identifier	false		2396416	0					
ANR	2396651	IfStatement	if ( ! user_log . writeEvent ( & event ) )		2396416	6					
ANR	2396652	Condition	! user_log . writeEvent ( & event )	562:6:15603:15631	2396416	0	True				
ANR	2396653	UnaryOperationExpression	! user_log . writeEvent ( & event )		2396416	0					
ANR	2396654	UnaryOperator	!		2396416	0					
ANR	2396655	CallExpression	user_log . writeEvent ( & event )		2396416	1					
ANR	2396656	Callee	user_log . writeEvent		2396416	0					
ANR	2396657	MemberAccess	user_log . writeEvent		2396416	0					
ANR	2396658	Identifier	user_log		2396416	0					
ANR	2396659	Identifier	writeEvent		2396416	1					
ANR	2396660	ArgumentList	& event		2396416	1					
ANR	2396661	Argument	& event		2396416	0					
ANR	2396662	UnaryOperationExpression	& event		2396416	0					
ANR	2396663	UnaryOperator	&		2396416	0					
ANR	2396664	Identifier	event		2396416	1					
ANR	2396665	CompoundStatement		45:38:1419:1419	2396416	1					
ANR	2396666	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s terminated event.\\n"" , dap_id . c_str ( ) )"	563:2:15639:15728	2396416	0	True				
ANR	2396667	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s terminated event.\\n"" , dap_id . c_str ( ) )"		2396416	0					
ANR	2396668	Callee	dprintf		2396416	0					
ANR	2396669	Identifier	dprintf		2396416	0					
ANR	2396670	ArgumentList	D_ALWAYS		2396416	1					
ANR	2396671	Argument	D_ALWAYS		2396416	0					
ANR	2396672	Identifier	D_ALWAYS		2396416	0					
ANR	2396673	Argument	"""ERROR: Failed to log job %s terminated event.\\n"""		2396416	1					
ANR	2396674	PrimaryExpression	"""ERROR: Failed to log job %s terminated event.\\n"""		2396416	0					
ANR	2396675	Argument	dap_id . c_str ( )		2396416	2					
ANR	2396676	CallExpression	dap_id . c_str ( )		2396416	0					
ANR	2396677	Callee	dap_id . c_str		2396416	0					
ANR	2396678	MemberAccess	dap_id . c_str		2396416	0					
ANR	2396679	Identifier	dap_id		2396416	0					
ANR	2396680	Identifier	c_str		2396416	1					
ANR	2396681	ArgumentList			2396416	1					
ANR	2396682	ReturnStatement	return false ;	565:2:15732:15744	2396416	1	True				
ANR	2396683	Identifier	false		2396416	0					
ANR	2396684	ReturnStatement	return true ;	568:1:15751:15762	2396416	7	True				
ANR	2396685	Identifier	true		2396416	0					
ANR	2396686	ReturnType	bool		2396416	1					
ANR	2396687	Identifier	user_log_terminated		2396416	2					
ANR	2396688	ParameterList	"const classad :: ClassAd * ad , WriteUserLog & user_log"		2396416	3					
ANR	2396689	Parameter	const classad :: ClassAd * ad	516:21:14157:14182	2396416	0	True				
ANR	2396690	ParameterType	const classad :: ClassAd *		2396416	0					
ANR	2396691	Identifier	ad		2396416	1					
ANR	2396692	Parameter	WriteUserLog & user_log	517:6:14191:14212	2396416	1	True				
ANR	2396693	ParameterType	WriteUserLog &		2396416	0					
ANR	2396694	Identifier	user_log		2396416	1					
ANR	2396695	CFGEntryNode	ENTRY		2396416		True				
ANR	2396696	CFGExitNode	EXIT		2396416		True				
ANR	2396697	Symbol	WIFSIGNALED		2396416						
ANR	2396698	Symbol	ad		2396416						
ANR	2396699	Symbol	event . normal		2396416						
ANR	2396700	Symbol	event . signalNumber		2396416						
ANR	2396701	Symbol	dap_id		2396416						
ANR	2396702	Symbol	D_ALWAYS		2396416						
ANR	2396703	Symbol	false		2396416						
ANR	2396704	Symbol	* ad		2396416						
ANR	2396705	Symbol	WEXITSTATUS		2396416						
ANR	2396706	Symbol	exit_status		2396416						
ANR	2396707	Symbol	& event		2396416						
ANR	2396708	Symbol	termination_type		2396416						
ANR	2396709	Symbol	user_log		2396416						
ANR	2396710	Symbol	dap_id . c_str		2396416						
ANR	2396711	Symbol	WIFEXITED		2396416						
ANR	2396712	Symbol	user_log . writeEvent		2396416						
ANR	2396713	Symbol	termination_type . empty		2396416						
ANR	2396714	Symbol	ad -> EvaluateAttrInt		2396416						
ANR	2396715	Symbol	true		2396416						
ANR	2396716	Symbol	event . returnValue		2396416						
ANR	2396717	Symbol	WTERMSIG		2396416						
ANR	2396718	Symbol	event		2396416						
ANR	2396719	Symbol	ad -> EvaluateAttrString		2396416						
ANR	2396720	Symbol	termination_type . c_str		2396416						
ANR	2396721	Function	user_log_aborted	571:0:15767:16104							
ANR	2396722	FunctionDef	"user_log_aborted (const classad :: ClassAd * ad , WriteUserLog & user_log)"		2396721	0					
ANR	2396723	CompoundStatement		574:0:15848:16104	2396721	0					
ANR	2396724	IdentifierDeclStatement	JobAbortedEvent event ;	575:1:15851:15872	2396721	0	True				
ANR	2396725	IdentifierDecl	event		2396721	0					
ANR	2396726	IdentifierDeclType	JobAbortedEvent		2396721	0					
ANR	2396727	Identifier	event		2396721	1					
ANR	2396728	IdentifierDeclStatement	std :: string dap_id ;	577:1:15876:15894	2396721	1	True				
ANR	2396729	IdentifierDecl	dap_id		2396721	0					
ANR	2396730	IdentifierDeclType	std :: string		2396721	0					
ANR	2396731	Identifier	dap_id		2396721	1					
ANR	2396732	ExpressionStatement	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"	578:1:15897:15937	2396721	2	True				
ANR	2396733	CallExpression	"ad -> EvaluateAttrString ( ""dap_id"" , dap_id )"		2396721	0					
ANR	2396734	Callee	ad -> EvaluateAttrString		2396721	0					
ANR	2396735	PtrMemberAccess	ad -> EvaluateAttrString		2396721	0					
ANR	2396736	Identifier	ad		2396721	0					
ANR	2396737	Identifier	EvaluateAttrString		2396721	1					
ANR	2396738	ArgumentList	"""dap_id"""		2396721	1					
ANR	2396739	Argument	"""dap_id"""		2396721	0					
ANR	2396740	PrimaryExpression	"""dap_id"""		2396721	0					
ANR	2396741	Argument	dap_id		2396721	1					
ANR	2396742	Identifier	dap_id		2396721	0					
ANR	2396743	IfStatement	if ( ! user_log . writeEvent ( & event ) )		2396721	3					
ANR	2396744	Condition	! user_log . writeEvent ( & event )	580:6:15946:15974	2396721	0	True				
ANR	2396745	UnaryOperationExpression	! user_log . writeEvent ( & event )		2396721	0					
ANR	2396746	UnaryOperator	!		2396721	0					
ANR	2396747	CallExpression	user_log . writeEvent ( & event )		2396721	1					
ANR	2396748	Callee	user_log . writeEvent		2396721	0					
ANR	2396749	MemberAccess	user_log . writeEvent		2396721	0					
ANR	2396750	Identifier	user_log		2396721	0					
ANR	2396751	Identifier	writeEvent		2396721	1					
ANR	2396752	ArgumentList	& event		2396721	1					
ANR	2396753	Argument	& event		2396721	0					
ANR	2396754	UnaryOperationExpression	& event		2396721	0					
ANR	2396755	UnaryOperator	&		2396721	0					
ANR	2396756	Identifier	event		2396721	1					
ANR	2396757	CompoundStatement		7:38:129:129	2396721	1					
ANR	2396758	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s aborted event.\\n"" , dap_id . c_str ( ) )"	581:2:15982:16068	2396721	0	True				
ANR	2396759	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Failed to log job %s aborted event.\\n"" , dap_id . c_str ( ) )"		2396721	0					
ANR	2396760	Callee	dprintf		2396721	0					
ANR	2396761	Identifier	dprintf		2396721	0					
ANR	2396762	ArgumentList	D_ALWAYS		2396721	1					
ANR	2396763	Argument	D_ALWAYS		2396721	0					
ANR	2396764	Identifier	D_ALWAYS		2396721	0					
ANR	2396765	Argument	"""ERROR: Failed to log job %s aborted event.\\n"""		2396721	1					
ANR	2396766	PrimaryExpression	"""ERROR: Failed to log job %s aborted event.\\n"""		2396721	0					
ANR	2396767	Argument	dap_id . c_str ( )		2396721	2					
ANR	2396768	CallExpression	dap_id . c_str ( )		2396721	0					
ANR	2396769	Callee	dap_id . c_str		2396721	0					
ANR	2396770	MemberAccess	dap_id . c_str		2396721	0					
ANR	2396771	Identifier	dap_id		2396721	0					
ANR	2396772	Identifier	c_str		2396721	1					
ANR	2396773	ArgumentList			2396721	1					
ANR	2396774	ReturnStatement	return false ;	583:2:16072:16084	2396721	1	True				
ANR	2396775	Identifier	false		2396721	0					
ANR	2396776	ReturnStatement	return true ;	586:1:16091:16102	2396721	4	True				
ANR	2396777	Identifier	true		2396721	0					
ANR	2396778	ReturnType	bool		2396721	1					
ANR	2396779	Identifier	user_log_aborted		2396721	2					
ANR	2396780	ParameterList	"const classad :: ClassAd * ad , WriteUserLog & user_log"		2396721	3					
ANR	2396781	Parameter	const classad :: ClassAd * ad	572:18:15790:15815	2396721	0	True				
ANR	2396782	ParameterType	const classad :: ClassAd *		2396721	0					
ANR	2396783	Identifier	ad		2396721	1					
ANR	2396784	Parameter	WriteUserLog & user_log	573:6:15824:15845	2396721	1	True				
ANR	2396785	ParameterType	WriteUserLog &		2396721	0					
ANR	2396786	Identifier	user_log		2396721	1					
ANR	2396787	CFGEntryNode	ENTRY		2396721		True				
ANR	2396788	CFGExitNode	EXIT		2396721		True				
ANR	2396789	Symbol	user_log		2396721						
ANR	2396790	Symbol	ad		2396721						
ANR	2396791	Symbol	dap_id . c_str		2396721						
ANR	2396792	Symbol	user_log . writeEvent		2396721						
ANR	2396793	Symbol	dap_id		2396721						
ANR	2396794	Symbol	D_ALWAYS		2396721						
ANR	2396795	Symbol	false		2396721						
ANR	2396796	Symbol	true		2396721						
ANR	2396797	Symbol	event		2396721						
ANR	2396798	Symbol	& event		2396721						
ANR	2396799	Function	user_log	589:0:16107:17737							
ANR	2396800	FunctionDef	"user_log (const classad :: ClassAd * ad , const enum ULogEventNumber eventNum)"		2396799	0					
ANR	2396801	CompoundStatement		592:0:16194:17737	2396799	0					
ANR	2396802	IdentifierDeclStatement	std :: string userLogFile ;	593:1:16197:16220	2396799	0	True				
ANR	2396803	IdentifierDecl	userLogFile		2396799	0					
ANR	2396804	IdentifierDeclType	std :: string		2396799	0					
ANR	2396805	Identifier	userLogFile		2396799	1					
ANR	2396806	IdentifierDeclStatement	"int cluster_id , proc_id ;"	594:1:16223:16246	2396799	1	True				
ANR	2396807	IdentifierDecl	cluster_id		2396799	0					
ANR	2396808	IdentifierDeclType	int		2396799	0					
ANR	2396809	Identifier	cluster_id		2396799	1					
ANR	2396810	IdentifierDecl	proc_id		2396799	1					
ANR	2396811	IdentifierDeclType	int		2396799	0					
ANR	2396812	Identifier	proc_id		2396799	1					
ANR	2396813	IdentifierDeclStatement	bool log_xml ;	595:1:16249:16261	2396799	2	True				
ANR	2396814	IdentifierDecl	log_xml		2396799	0					
ANR	2396815	IdentifierDeclType	bool		2396799	0					
ANR	2396816	Identifier	log_xml		2396799	1					
ANR	2396817	IdentifierDeclStatement	WriteUserLog usr_log ;	596:1:16264:16284	2396799	3	True				
ANR	2396818	IdentifierDecl	usr_log		2396799	0					
ANR	2396819	IdentifierDeclType	WriteUserLog		2396799	0					
ANR	2396820	Identifier	usr_log		2396799	1					
ANR	2396821	IfStatement	"if ( ! ad -> EvaluateAttrString ( ""log"" , userLogFile ) || userLogFile . empty ( ) )"		2396799	4					
ANR	2396822	Condition	"! ad -> EvaluateAttrString ( ""log"" , userLogFile ) || userLogFile . empty ( )"	598:6:16293:16361	2396799	0	True				
ANR	2396823	OrExpression	"! ad -> EvaluateAttrString ( ""log"" , userLogFile ) || userLogFile . empty ( )"		2396799	0		||			
ANR	2396824	UnaryOperationExpression	"! ad -> EvaluateAttrString ( ""log"" , userLogFile )"		2396799	0					
ANR	2396825	UnaryOperator	!		2396799	0					
ANR	2396826	CallExpression	"ad -> EvaluateAttrString ( ""log"" , userLogFile )"		2396799	1					
ANR	2396827	Callee	ad -> EvaluateAttrString		2396799	0					
ANR	2396828	PtrMemberAccess	ad -> EvaluateAttrString		2396799	0					
ANR	2396829	Identifier	ad		2396799	0					
ANR	2396830	Identifier	EvaluateAttrString		2396799	1					
ANR	2396831	ArgumentList	"""log"""		2396799	1					
ANR	2396832	Argument	"""log"""		2396799	0					
ANR	2396833	PrimaryExpression	"""log"""		2396799	0					
ANR	2396834	Argument	userLogFile		2396799	1					
ANR	2396835	Identifier	userLogFile		2396799	0					
ANR	2396836	CallExpression	userLogFile . empty ( )		2396799	1					
ANR	2396837	Callee	userLogFile . empty		2396799	0					
ANR	2396838	MemberAccess	userLogFile . empty		2396799	0					
ANR	2396839	Identifier	userLogFile		2396799	0					
ANR	2396840	Identifier	empty		2396799	1					
ANR	2396841	ArgumentList			2396799	1					
ANR	2396842	CompoundStatement		10:1:173:173	2396799	1					
ANR	2396843	ReturnStatement	return true ;	603:2:16411:16422	2396799	0	True				
ANR	2396844	Identifier	true		2396799	0					
ANR	2396845	ExpressionStatement	"ad -> EvaluateAttrInt ( ""cluster_id"" , cluster_id )"	607:1:16453:16498	2396799	5	True				
ANR	2396846	CallExpression	"ad -> EvaluateAttrInt ( ""cluster_id"" , cluster_id )"		2396799	0					
ANR	2396847	Callee	ad -> EvaluateAttrInt		2396799	0					
ANR	2396848	PtrMemberAccess	ad -> EvaluateAttrInt		2396799	0					
ANR	2396849	Identifier	ad		2396799	0					
ANR	2396850	Identifier	EvaluateAttrInt		2396799	1					
ANR	2396851	ArgumentList	"""cluster_id"""		2396799	1					
ANR	2396852	Argument	"""cluster_id"""		2396799	0					
ANR	2396853	PrimaryExpression	"""cluster_id"""		2396799	0					
ANR	2396854	Argument	cluster_id		2396799	1					
ANR	2396855	Identifier	cluster_id		2396799	0					
ANR	2396856	ExpressionStatement	"ad -> EvaluateAttrInt ( ""proc_id"" , proc_id )"	608:1:16501:16541	2396799	6	True				
ANR	2396857	CallExpression	"ad -> EvaluateAttrInt ( ""proc_id"" , proc_id )"		2396799	0					
ANR	2396858	Callee	ad -> EvaluateAttrInt		2396799	0					
ANR	2396859	PtrMemberAccess	ad -> EvaluateAttrInt		2396799	0					
ANR	2396860	Identifier	ad		2396799	0					
ANR	2396861	Identifier	EvaluateAttrInt		2396799	1					
ANR	2396862	ArgumentList	"""proc_id"""		2396799	1					
ANR	2396863	Argument	"""proc_id"""		2396799	0					
ANR	2396864	PrimaryExpression	"""proc_id"""		2396799	0					
ANR	2396865	Argument	proc_id		2396799	1					
ANR	2396866	Identifier	proc_id		2396799	0					
ANR	2396867	IfStatement	"if ( ! ad -> EvaluateAttrBool ( ""log_xml"" , log_xml ) )"		2396799	7					
ANR	2396868	Condition	"! ad -> EvaluateAttrBool ( ""log_xml"" , log_xml )"	610:6:16550:16590	2396799	0	True				
ANR	2396869	UnaryOperationExpression	"! ad -> EvaluateAttrBool ( ""log_xml"" , log_xml )"		2396799	0					
ANR	2396870	UnaryOperator	!		2396799	0					
ANR	2396871	CallExpression	"ad -> EvaluateAttrBool ( ""log_xml"" , log_xml )"		2396799	1					
ANR	2396872	Callee	ad -> EvaluateAttrBool		2396799	0					
ANR	2396873	PtrMemberAccess	ad -> EvaluateAttrBool		2396799	0					
ANR	2396874	Identifier	ad		2396799	0					
ANR	2396875	Identifier	EvaluateAttrBool		2396799	1					
ANR	2396876	ArgumentList	"""log_xml"""		2396799	1					
ANR	2396877	Argument	"""log_xml"""		2396799	0					
ANR	2396878	PrimaryExpression	"""log_xml"""		2396799	0					
ANR	2396879	Argument	log_xml		2396799	1					
ANR	2396880	Identifier	log_xml		2396799	0					
ANR	2396881	CompoundStatement		19:50:399:399	2396799	1					
ANR	2396882	ExpressionStatement	log_xml = false	611:2:16598:16613	2396799	0	True				
ANR	2396883	AssignmentExpression	log_xml = false		2396799	0		=			
ANR	2396884	Identifier	log_xml		2396799	0					
ANR	2396885	Identifier	false		2396799	1					
ANR	2396886	ExpressionStatement	usr_log . setUseXML ( log_xml )	613:1:16656:16682	2396799	8	True				
ANR	2396887	CallExpression	usr_log . setUseXML ( log_xml )		2396799	0					
ANR	2396888	Callee	usr_log . setUseXML		2396799	0					
ANR	2396889	MemberAccess	usr_log . setUseXML		2396799	0					
ANR	2396890	Identifier	usr_log		2396799	0					
ANR	2396891	Identifier	setUseXML		2396799	1					
ANR	2396892	ArgumentList	log_xml		2396799	1					
ANR	2396893	Argument	log_xml		2396799	0					
ANR	2396894	Identifier	log_xml		2396799	0					
ANR	2396895	IdentifierDeclStatement	std :: string owner ;	615:1:16686:16703	2396799	9	True				
ANR	2396896	IdentifierDecl	owner		2396799	0					
ANR	2396897	IdentifierDeclType	std :: string		2396799	0					
ANR	2396898	Identifier	owner		2396799	1					
ANR	2396899	IfStatement	"if ( ! ad -> EvaluateAttrString ( ""owner"" , owner ) || owner . empty ( ) )"		2396799	10					
ANR	2396900	Condition	"! ad -> EvaluateAttrString ( ""owner"" , owner ) || owner . empty ( )"	616:6:16711:16767	2396799	0	True				
ANR	2396901	OrExpression	"! ad -> EvaluateAttrString ( ""owner"" , owner ) || owner . empty ( )"		2396799	0		||			
ANR	2396902	UnaryOperationExpression	"! ad -> EvaluateAttrString ( ""owner"" , owner )"		2396799	0					
ANR	2396903	UnaryOperator	!		2396799	0					
ANR	2396904	CallExpression	"ad -> EvaluateAttrString ( ""owner"" , owner )"		2396799	1					
ANR	2396905	Callee	ad -> EvaluateAttrString		2396799	0					
ANR	2396906	PtrMemberAccess	ad -> EvaluateAttrString		2396799	0					
ANR	2396907	Identifier	ad		2396799	0					
ANR	2396908	Identifier	EvaluateAttrString		2396799	1					
ANR	2396909	ArgumentList	"""owner"""		2396799	1					
ANR	2396910	Argument	"""owner"""		2396799	0					
ANR	2396911	PrimaryExpression	"""owner"""		2396799	0					
ANR	2396912	Argument	owner		2396799	1					
ANR	2396913	Identifier	owner		2396799	0					
ANR	2396914	CallExpression	owner . empty ( )		2396799	1					
ANR	2396915	Callee	owner . empty		2396799	0					
ANR	2396916	MemberAccess	owner . empty		2396799	0					
ANR	2396917	Identifier	owner		2396799	0					
ANR	2396918	Identifier	empty		2396799	1					
ANR	2396919	ArgumentList			2396799	1					
ANR	2396920	CompoundStatement		25:66:576:576	2396799	1					
ANR	2396921	ExpressionStatement	"dprintf ( D_ALWAYS , ""unable to extract owner to log job %d user log event %d\\n"" , cluster_id , eventNum )"	617:2:16775:16883	2396799	0	True				
ANR	2396922	CallExpression	"dprintf ( D_ALWAYS , ""unable to extract owner to log job %d user log event %d\\n"" , cluster_id , eventNum )"		2396799	0					
ANR	2396923	Callee	dprintf		2396799	0					
ANR	2396924	Identifier	dprintf		2396799	0					
ANR	2396925	ArgumentList	D_ALWAYS		2396799	1					
ANR	2396926	Argument	D_ALWAYS		2396799	0					
ANR	2396927	Identifier	D_ALWAYS		2396799	0					
ANR	2396928	Argument	"""unable to extract owner to log job %d user log event %d\\n"""		2396799	1					
ANR	2396929	PrimaryExpression	"""unable to extract owner to log job %d user log event %d\\n"""		2396799	0					
ANR	2396930	Argument	cluster_id		2396799	2					
ANR	2396931	Identifier	cluster_id		2396799	0					
ANR	2396932	Argument	eventNum		2396799	3					
ANR	2396933	Identifier	eventNum		2396799	0					
ANR	2396934	ReturnStatement	return false ;	620:2:16887:16899	2396799	1	True				
ANR	2396935	Identifier	false		2396799	0					
ANR	2396936	IfStatement	"if ( ! usr_log . initialize ( owner . c_str ( ) , NULL , userLogFile . c_str ( ) , cluster_id , proc_id , - 1 , NULL ) )"		2396799	11					
ANR	2396937	Condition	"! usr_log . initialize ( owner . c_str ( ) , NULL , userLogFile . c_str ( ) , cluster_id , proc_id , - 1 , NULL )"	622:5:16909:17064	2396799	0	True				
ANR	2396938	UnaryOperationExpression	"! usr_log . initialize ( owner . c_str ( ) , NULL , userLogFile . c_str ( ) , cluster_id , proc_id , - 1 , NULL )"		2396799	0					
ANR	2396939	UnaryOperator	!		2396799	0					
ANR	2396940	CallExpression	"usr_log . initialize ( owner . c_str ( ) , NULL , userLogFile . c_str ( ) , cluster_id , proc_id , - 1 , NULL )"		2396799	1					
ANR	2396941	Callee	usr_log . initialize		2396799	0					
ANR	2396942	MemberAccess	usr_log . initialize		2396799	0					
ANR	2396943	Identifier	usr_log		2396799	0					
ANR	2396944	Identifier	initialize		2396799	1					
ANR	2396945	ArgumentList	owner . c_str ( )		2396799	1					
ANR	2396946	Argument	owner . c_str ( )		2396799	0					
ANR	2396947	CallExpression	owner . c_str ( )		2396799	0					
ANR	2396948	Callee	owner . c_str		2396799	0					
ANR	2396949	MemberAccess	owner . c_str		2396799	0					
ANR	2396950	Identifier	owner		2396799	0					
ANR	2396951	Identifier	c_str		2396799	1					
ANR	2396952	ArgumentList			2396799	1					
ANR	2396953	Argument	NULL		2396799	1					
ANR	2396954	Identifier	NULL		2396799	0					
ANR	2396955	Argument	userLogFile . c_str ( )		2396799	2					
ANR	2396956	CallExpression	userLogFile . c_str ( )		2396799	0					
ANR	2396957	Callee	userLogFile . c_str		2396799	0					
ANR	2396958	MemberAccess	userLogFile . c_str		2396799	0					
ANR	2396959	Identifier	userLogFile		2396799	0					
ANR	2396960	Identifier	c_str		2396799	1					
ANR	2396961	ArgumentList			2396799	1					
ANR	2396962	Argument	cluster_id		2396799	3					
ANR	2396963	Identifier	cluster_id		2396799	0					
ANR	2396964	Argument	proc_id		2396799	4					
ANR	2396965	Identifier	proc_id		2396799	0					
ANR	2396966	Argument	- 1		2396799	5					
ANR	2396967	UnaryOperationExpression	- 1		2396799	0					
ANR	2396968	UnaryOperator	-		2396799	0					
ANR	2396969	PrimaryExpression	1		2396799	1					
ANR	2396970	Argument	NULL		2396799	6					
ANR	2396971	Identifier	NULL		2396799	0					
ANR	2396972	CompoundStatement		40:1:876:876	2396799	1					
ANR	2396973	ExpressionStatement	"dprintf ( D_ALWAYS , ""error initializing user log event %d for job %d\\n"" , eventNum , cluster_id )"	632:2:17075:17175	2396799	0	True				
ANR	2396974	CallExpression	"dprintf ( D_ALWAYS , ""error initializing user log event %d for job %d\\n"" , eventNum , cluster_id )"		2396799	0					
ANR	2396975	Callee	dprintf		2396799	0					
ANR	2396976	Identifier	dprintf		2396799	0					
ANR	2396977	ArgumentList	D_ALWAYS		2396799	1					
ANR	2396978	Argument	D_ALWAYS		2396799	0					
ANR	2396979	Identifier	D_ALWAYS		2396799	0					
ANR	2396980	Argument	"""error initializing user log event %d for job %d\\n"""		2396799	1					
ANR	2396981	PrimaryExpression	"""error initializing user log event %d for job %d\\n"""		2396799	0					
ANR	2396982	Argument	eventNum		2396799	2					
ANR	2396983	Identifier	eventNum		2396799	0					
ANR	2396984	Argument	cluster_id		2396799	3					
ANR	2396985	Identifier	cluster_id		2396799	0					
ANR	2396986	ReturnStatement	return false ;	635:2:17179:17191	2396799	1	True				
ANR	2396987	Identifier	false		2396799	0					
ANR	2396988	SwitchStatement	switch ( eventNum )		2396799	12					
ANR	2396989	Condition	eventNum	638:8:17205:17212	2396799	0	True				
ANR	2396990	Identifier	eventNum		2396799	0					
ANR	2396991	CompoundStatement		47:18:1020:1020	2396799	1					
ANR	2396992	Label	case ULOG_SUBMIT :	639:2:17219:17235	2396799	0	True				
ANR	2396993	Identifier	ULOG_SUBMIT		2396799	0					
ANR	2396994	ReturnStatement	"return user_log_submit ( ad , usr_log ) ;"	640:3:17240:17275	2396799	1	True				
ANR	2396995	CallExpression	"user_log_submit ( ad , usr_log )"		2396799	0					
ANR	2396996	Callee	user_log_submit		2396799	0					
ANR	2396997	Identifier	user_log_submit		2396799	0					
ANR	2396998	ArgumentList	ad		2396799	1					
ANR	2396999	Argument	ad		2396799	0					
ANR	2397000	Identifier	ad		2396799	0					
ANR	2397001	Argument	usr_log		2396799	1					
ANR	2397002	Identifier	usr_log		2396799	0					
ANR	2397003	BreakStatement	break ;	641:3:17280:17285	2396799	2	True				
ANR	2397004	Label	case ULOG_EXECUTE :	643:2:17290:17307	2396799	3	True				
ANR	2397005	Identifier	ULOG_EXECUTE		2396799	0					
ANR	2397006	ReturnStatement	"return user_log_execute ( ad , usr_log ) ;"	644:3:17312:17348	2396799	4	True				
ANR	2397007	CallExpression	"user_log_execute ( ad , usr_log )"		2396799	0					
ANR	2397008	Callee	user_log_execute		2396799	0					
ANR	2397009	Identifier	user_log_execute		2396799	0					
ANR	2397010	ArgumentList	ad		2396799	1					
ANR	2397011	Argument	ad		2396799	0					
ANR	2397012	Identifier	ad		2396799	0					
ANR	2397013	Argument	usr_log		2396799	1					
ANR	2397014	Identifier	usr_log		2396799	0					
ANR	2397015	BreakStatement	break ;	645:3:17353:17358	2396799	5	True				
ANR	2397016	Label	case ULOG_JOB_TERMINATED :	647:2:17363:17387	2396799	6	True				
ANR	2397017	Identifier	ULOG_JOB_TERMINATED		2396799	0					
ANR	2397018	ReturnStatement	"return user_log_terminated ( ad , usr_log ) ;"	648:3:17392:17431	2396799	7	True				
ANR	2397019	CallExpression	"user_log_terminated ( ad , usr_log )"		2396799	0					
ANR	2397020	Callee	user_log_terminated		2396799	0					
ANR	2397021	Identifier	user_log_terminated		2396799	0					
ANR	2397022	ArgumentList	ad		2396799	1					
ANR	2397023	Argument	ad		2396799	0					
ANR	2397024	Identifier	ad		2396799	0					
ANR	2397025	Argument	usr_log		2396799	1					
ANR	2397026	Identifier	usr_log		2396799	0					
ANR	2397027	BreakStatement	break ;	649:3:17436:17441	2396799	8	True				
ANR	2397028	Label	case ULOG_JOB_ABORTED :	651:2:17446:17467	2396799	9	True				
ANR	2397029	Identifier	ULOG_JOB_ABORTED		2396799	0					
ANR	2397030	ReturnStatement	"return user_log_aborted ( ad , usr_log ) ;"	652:3:17472:17508	2396799	10	True				
ANR	2397031	CallExpression	"user_log_aborted ( ad , usr_log )"		2396799	0					
ANR	2397032	Callee	user_log_aborted		2396799	0					
ANR	2397033	Identifier	user_log_aborted		2396799	0					
ANR	2397034	ArgumentList	ad		2396799	1					
ANR	2397035	Argument	ad		2396799	0					
ANR	2397036	Identifier	ad		2396799	0					
ANR	2397037	Argument	usr_log		2396799	1					
ANR	2397038	Identifier	usr_log		2396799	0					
ANR	2397039	BreakStatement	break ;	653:3:17513:17518	2396799	11	True				
ANR	2397040	Label	case ULOG_GENERIC :	655:2:17523:17540	2396799	12	True				
ANR	2397041	Identifier	ULOG_GENERIC		2396799	0					
ANR	2397042	ReturnStatement	"return user_log_generic ( ad , usr_log ) ;"	656:3:17545:17581	2396799	13	True				
ANR	2397043	CallExpression	"user_log_generic ( ad , usr_log )"		2396799	0					
ANR	2397044	Callee	user_log_generic		2396799	0					
ANR	2397045	Identifier	user_log_generic		2396799	0					
ANR	2397046	ArgumentList	ad		2396799	1					
ANR	2397047	Argument	ad		2396799	0					
ANR	2397048	Identifier	ad		2396799	0					
ANR	2397049	Argument	usr_log		2396799	1					
ANR	2397050	Identifier	usr_log		2396799	0					
ANR	2397051	BreakStatement	break ;	657:3:17586:17591	2396799	14	True				
ANR	2397052	Label	default :	659:2:17596:17603	2396799	15	True				
ANR	2397053	Identifier	default		2396799	0					
ANR	2397054	ExpressionStatement	"dprintf ( D_ALWAYS , ""job %d write user log for unknown event %d\\n"" , cluster_id , eventNum )"	660:3:17608:17700	2396799	16	True				
ANR	2397055	CallExpression	"dprintf ( D_ALWAYS , ""job %d write user log for unknown event %d\\n"" , cluster_id , eventNum )"		2396799	0					
ANR	2397056	Callee	dprintf		2396799	0					
ANR	2397057	Identifier	dprintf		2396799	0					
ANR	2397058	ArgumentList	D_ALWAYS		2396799	1					
ANR	2397059	Argument	D_ALWAYS		2396799	0					
ANR	2397060	Identifier	D_ALWAYS		2396799	0					
ANR	2397061	Argument	"""job %d write user log for unknown event %d\\n"""		2396799	1					
ANR	2397062	PrimaryExpression	"""job %d write user log for unknown event %d\\n"""		2396799	0					
ANR	2397063	Argument	cluster_id		2396799	2					
ANR	2397064	Identifier	cluster_id		2396799	0					
ANR	2397065	Argument	eventNum		2396799	3					
ANR	2397066	Identifier	eventNum		2396799	0					
ANR	2397067	ReturnStatement	return false ;	662:3:17705:17717	2396799	17	True				
ANR	2397068	Identifier	false		2396799	0					
ANR	2397069	ReturnStatement	return true ;	665:1:17724:17735	2396799	13	True				
ANR	2397070	Identifier	true		2396799	0					
ANR	2397071	ReturnType	bool		2396799	1					
ANR	2397072	Identifier	user_log		2396799	2					
ANR	2397073	ParameterList	"const classad :: ClassAd * ad , const enum ULogEventNumber eventNum"		2396799	3					
ANR	2397074	Parameter	const classad :: ClassAd * ad	590:12:16124:16149	2396799	0	True				
ANR	2397075	ParameterType	const classad :: ClassAd *		2396799	0					
ANR	2397076	Identifier	ad		2396799	1					
ANR	2397077	Parameter	const enum ULogEventNumber eventNum	591:5:16157:16191	2396799	1	True				
ANR	2397078	ParameterType	const enum ULogEventNumber		2396799	0					
ANR	2397079	Identifier	eventNum		2396799	1					
ANR	2397080	CFGEntryNode	ENTRY		2396799		True				
ANR	2397081	CFGExitNode	EXIT		2396799		True				
ANR	2397082	Symbol	ad -> EvaluateAttrBool		2396799						
ANR	2397083	Symbol	user_log_execute		2396799						
ANR	2397084	Symbol	user_log_submit		2396799						
ANR	2397085	Symbol	* ad		2396799						
ANR	2397086	Symbol	userLogFile		2396799						
ANR	2397087	Symbol	user_log_generic		2396799						
ANR	2397088	Symbol	usr_log . initialize		2396799						
ANR	2397089	Symbol	cluster_id		2396799						
ANR	2397090	Symbol	owner . empty		2396799						
ANR	2397091	Symbol	user_log_aborted		2396799						
ANR	2397092	Symbol	userLogFile . c_str		2396799						
ANR	2397093	Symbol	eventNum		2396799						
ANR	2397094	Symbol	owner		2396799						
ANR	2397095	Symbol	ad		2396799						
ANR	2397096	Symbol	NULL		2396799						
ANR	2397097	Symbol	false		2396799						
ANR	2397098	Symbol	D_ALWAYS		2396799						
ANR	2397099	Symbol	proc_id		2396799						
ANR	2397100	Symbol	owner . c_str		2396799						
ANR	2397101	Symbol	usr_log		2396799						
ANR	2397102	Symbol	user_log_terminated		2396799						
ANR	2397103	Symbol	userLogFile . empty		2396799						
ANR	2397104	Symbol	true		2396799						
ANR	2397105	Symbol	ad -> EvaluateAttrString		2396799						
ANR	2397106	Symbol	log_xml		2396799						
