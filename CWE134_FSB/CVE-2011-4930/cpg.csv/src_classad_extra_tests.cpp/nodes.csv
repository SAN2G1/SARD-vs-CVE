command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2538131	File	data/converged/CVE-2011-4930_htcondor/src_classad_extra_tests.cpp								
ANR	2538132	DeclStmt									
ANR	2538133	Decl							string	string	parsing_text
ANR	2538134	DeclStmt									
ANR	2538135	Decl							string	string	chaining_root_text
ANR	2538136	DeclStmt									
ANR	2538137	Decl							string	string	chaining_child_text
ANR	2538138	DeclStmt									
ANR	2538139	Decl							string	string	dirty_classad_text
ANR	2538140	DeclStmt									
ANR	2538141	Decl							int	"int ( int argc , char * * argv )"	main
ANR	2538142	DeclStmt									
ANR	2538143	Decl							void	void ( void )	test_quoting_bug
ANR	2538144	DeclStmt									
ANR	2538145	Decl							void	void ( void )	test_parsing
ANR	2538146	DeclStmt									
ANR	2538147	Decl							void	"void ( ClassAd * classad_a , ClassAd * classad_b )"	test_parsing_helper
ANR	2538148	DeclStmt									
ANR	2538149	Decl							void	"void ( ClassAd * * classad_a , ClassAd * * classad_b )"	read_from_string
ANR	2538150	DeclStmt									
ANR	2538151	Decl							void	"void ( ClassAd * * classad_a , ClassAd * * classad_b )"	read_from_string_alt
ANR	2538152	DeclStmt									
ANR	2538153	Decl							void	"void ( ClassAd * * classad_a , ClassAd * * classad_b )"	read_from_char
ANR	2538154	DeclStmt									
ANR	2538155	Decl							void	"void ( ClassAd * * classad_a , ClassAd * * classad_b )"	read_from_char_alt
ANR	2538156	DeclStmt									
ANR	2538157	Decl							void	void ( void )	make_file
ANR	2538158	DeclStmt									
ANR	2538159	Decl							void	void ( void )	remove_file
ANR	2538160	DeclStmt									
ANR	2538161	Decl							void	"void ( ClassAd * * classad_a , ClassAd * * classad_b )"	read_from_file
ANR	2538162	DeclStmt									
ANR	2538163	Decl							void	"void ( ClassAd * * classad_a , ClassAd * * classad_b )"	read_from_file_alt
ANR	2538164	DeclStmt									
ANR	2538165	Decl							void	"void ( ClassAd * * classad_a , ClassAd * * classad_b )"	read_from_stream
ANR	2538166	DeclStmt									
ANR	2538167	Decl							void	"void ( ClassAd * * classad_a , ClassAd * * classad_b )"	read_from_stream_alt
ANR	2538168	DeclStmt									
ANR	2538169	Decl							void	"void ( ClassAd * classad_a , ClassAd * classad_b , ClassAd * classad_c )"	check_parse
ANR	2538170	DeclStmt									
ANR	2538171	Decl							void	void ( ClassAd * classad )	check_classad_a
ANR	2538172	DeclStmt									
ANR	2538173	Decl							void	void ( ClassAd * classad )	check_classad_b
ANR	2538174	DeclStmt									
ANR	2538175	Decl							void	void ( void )	test_chaining
ANR	2538176	DeclStmt									
ANR	2538177	Decl							void	void ( void )	test_dirty
ANR	2538178	DeclStmt									
ANR	2538179	Decl							void	void ( void )	test_user_functions
ANR	2538180	DeclStmt									
ANR	2538181	Decl							bool	"bool ( const char * name , const ArgumentList & arguments , EvalState & state , Value & result )"	triple
ANR	2538182	Function	test_quoting_bug	94:0:3197:3493							
ANR	2538183	FunctionDef	test_quoting_bug ()		2538182	0					
ANR	2538184	CompoundStatement		95:0:3232:3493	2538182	0					
ANR	2538185	IdentifierDeclStatement	ClassAdParser par ;	96:4:3238:3256	2538182	0	True				
ANR	2538186	IdentifierDecl	par		2538182	0					
ANR	2538187	IdentifierDeclType	ClassAdParser		2538182	0					
ANR	2538188	Identifier	par		2538182	1					
ANR	2538189	IdentifierDeclStatement	"string attr = ""other.GlueCEStateStatus == \\""Production\\"""" ;"	97:4:3262:3319	2538182	1	True				
ANR	2538190	IdentifierDecl	"attr = ""other.GlueCEStateStatus == \\""Production\\"""""		2538182	0					
ANR	2538191	IdentifierDeclType	string		2538182	0					
ANR	2538192	Identifier	attr		2538182	1					
ANR	2538193	AssignmentExpression	"attr = ""other.GlueCEStateStatus == \\""Production\\"""""		2538182	2		=			
ANR	2538194	Identifier	attr		2538182	0					
ANR	2538195	PrimaryExpression	"""other.GlueCEStateStatus == \\""Production\\"""""		2538182	1					
ANR	2538196	IfStatement	"if ( ! par . ParseExpression ( attr , true ) )"		2538182	2					
ANR	2538197	Condition	"! par . ParseExpression ( attr , true )"	98:8:3329:3360	2538182	0	True				
ANR	2538198	UnaryOperationExpression	"! par . ParseExpression ( attr , true )"		2538182	0					
ANR	2538199	UnaryOperator	!		2538182	0					
ANR	2538200	CallExpression	"par . ParseExpression ( attr , true )"		2538182	1					
ANR	2538201	Callee	par . ParseExpression		2538182	0					
ANR	2538202	MemberAccess	par . ParseExpression		2538182	0					
ANR	2538203	Identifier	par		2538182	0					
ANR	2538204	Identifier	ParseExpression		2538182	1					
ANR	2538205	ArgumentList	attr		2538182	1					
ANR	2538206	Argument	attr		2538182	0					
ANR	2538207	Identifier	attr		2538182	0					
ANR	2538208	Argument	true		2538182	1					
ANR	2538209	Identifier	true		2538182	0					
ANR	2538210	CompoundStatement		4:42:130:130	2538182	1					
ANR	2538211	ExpressionStatement	"cout << ""Error in parsing quotes.\\n"""	99:8:3373:3409	2538182	0	True				
ANR	2538212	ShiftExpression	"cout << ""Error in parsing quotes.\\n"""		2538182	0		<<			
ANR	2538213	Identifier	cout		2538182	0					
ANR	2538214	PrimaryExpression	"""Error in parsing quotes.\\n"""		2538182	1					
ANR	2538215	ElseStatement	else		2538182	0					
ANR	2538216	CompoundStatement		6:11:189:189	2538182	0					
ANR	2538217	ExpressionStatement	"cout << ""No problem in parsing quotes.\\n"""	101:8:3432:3473	2538182	0	True				
ANR	2538218	ShiftExpression	"cout << ""No problem in parsing quotes.\\n"""		2538182	0		<<			
ANR	2538219	Identifier	cout		2538182	0					
ANR	2538220	PrimaryExpression	"""No problem in parsing quotes.\\n"""		2538182	1					
ANR	2538221	ReturnStatement	return ;	103:4:3485:3491	2538182	3	True				
ANR	2538222	ReturnType	static void		2538182	1					
ANR	2538223	Identifier	test_quoting_bug		2538182	2					
ANR	2538224	ParameterList			2538182	3					
ANR	2538225	CFGEntryNode	ENTRY		2538182		True				
ANR	2538226	CFGExitNode	EXIT		2538182		True				
ANR	2538227	Symbol	par		2538182						
ANR	2538228	Symbol	true		2538182						
ANR	2538229	Symbol	par . ParseExpression		2538182						
ANR	2538230	Symbol	attr		2538182						
ANR	2538231	Function	test_parsing	106:0:3496:4322							
ANR	2538232	FunctionDef	test_parsing ()		2538231	0					
ANR	2538233	CompoundStatement		107:0:3527:4322	2538231	0					
ANR	2538234	IdentifierDeclStatement	"ClassAd * classad_a , * classad_b ;"	108:1:3530:3566	2538231	0	True				
ANR	2538235	IdentifierDecl	* classad_a		2538231	0					
ANR	2538236	IdentifierDeclType	ClassAd *		2538231	0					
ANR	2538237	Identifier	classad_a		2538231	1					
ANR	2538238	IdentifierDecl	* classad_b		2538231	1					
ANR	2538239	IdentifierDeclType	ClassAd *		2538231	0					
ANR	2538240	Identifier	classad_b		2538231	1					
ANR	2538241	ExpressionStatement	"read_from_string ( & classad_a , & classad_b )"	110:1:3570:3610	2538231	1	True				
ANR	2538242	CallExpression	"read_from_string ( & classad_a , & classad_b )"		2538231	0					
ANR	2538243	Callee	read_from_string		2538231	0					
ANR	2538244	Identifier	read_from_string		2538231	0					
ANR	2538245	ArgumentList	& classad_a		2538231	1					
ANR	2538246	Argument	& classad_a		2538231	0					
ANR	2538247	UnaryOperationExpression	& classad_a		2538231	0					
ANR	2538248	UnaryOperator	&		2538231	0					
ANR	2538249	Identifier	classad_a		2538231	1					
ANR	2538250	Argument	& classad_b		2538231	1					
ANR	2538251	UnaryOperationExpression	& classad_b		2538231	0					
ANR	2538252	UnaryOperator	&		2538231	0					
ANR	2538253	Identifier	classad_b		2538231	1					
ANR	2538254	ExpressionStatement	"test_parsing_helper ( classad_a , classad_b )"	111:1:3613:3654	2538231	2	True				
ANR	2538255	CallExpression	"test_parsing_helper ( classad_a , classad_b )"		2538231	0					
ANR	2538256	Callee	test_parsing_helper		2538231	0					
ANR	2538257	Identifier	test_parsing_helper		2538231	0					
ANR	2538258	ArgumentList	classad_a		2538231	1					
ANR	2538259	Argument	classad_a		2538231	0					
ANR	2538260	Identifier	classad_a		2538231	0					
ANR	2538261	Argument	classad_b		2538231	1					
ANR	2538262	Identifier	classad_b		2538231	0					
ANR	2538263	ExpressionStatement	"read_from_string_alt ( & classad_a , & classad_b )"	113:1:3658:3702	2538231	3	True				
ANR	2538264	CallExpression	"read_from_string_alt ( & classad_a , & classad_b )"		2538231	0					
ANR	2538265	Callee	read_from_string_alt		2538231	0					
ANR	2538266	Identifier	read_from_string_alt		2538231	0					
ANR	2538267	ArgumentList	& classad_a		2538231	1					
ANR	2538268	Argument	& classad_a		2538231	0					
ANR	2538269	UnaryOperationExpression	& classad_a		2538231	0					
ANR	2538270	UnaryOperator	&		2538231	0					
ANR	2538271	Identifier	classad_a		2538231	1					
ANR	2538272	Argument	& classad_b		2538231	1					
ANR	2538273	UnaryOperationExpression	& classad_b		2538231	0					
ANR	2538274	UnaryOperator	&		2538231	0					
ANR	2538275	Identifier	classad_b		2538231	1					
ANR	2538276	ExpressionStatement	"test_parsing_helper ( classad_a , classad_b )"	114:1:3705:3746	2538231	4	True				
ANR	2538277	CallExpression	"test_parsing_helper ( classad_a , classad_b )"		2538231	0					
ANR	2538278	Callee	test_parsing_helper		2538231	0					
ANR	2538279	Identifier	test_parsing_helper		2538231	0					
ANR	2538280	ArgumentList	classad_a		2538231	1					
ANR	2538281	Argument	classad_a		2538231	0					
ANR	2538282	Identifier	classad_a		2538231	0					
ANR	2538283	Argument	classad_b		2538231	1					
ANR	2538284	Identifier	classad_b		2538231	0					
ANR	2538285	ExpressionStatement	"read_from_char ( & classad_a , & classad_b )"	116:1:3750:3788	2538231	5	True				
ANR	2538286	CallExpression	"read_from_char ( & classad_a , & classad_b )"		2538231	0					
ANR	2538287	Callee	read_from_char		2538231	0					
ANR	2538288	Identifier	read_from_char		2538231	0					
ANR	2538289	ArgumentList	& classad_a		2538231	1					
ANR	2538290	Argument	& classad_a		2538231	0					
ANR	2538291	UnaryOperationExpression	& classad_a		2538231	0					
ANR	2538292	UnaryOperator	&		2538231	0					
ANR	2538293	Identifier	classad_a		2538231	1					
ANR	2538294	Argument	& classad_b		2538231	1					
ANR	2538295	UnaryOperationExpression	& classad_b		2538231	0					
ANR	2538296	UnaryOperator	&		2538231	0					
ANR	2538297	Identifier	classad_b		2538231	1					
ANR	2538298	ExpressionStatement	"test_parsing_helper ( classad_a , classad_b )"	117:1:3791:3832	2538231	6	True				
ANR	2538299	CallExpression	"test_parsing_helper ( classad_a , classad_b )"		2538231	0					
ANR	2538300	Callee	test_parsing_helper		2538231	0					
ANR	2538301	Identifier	test_parsing_helper		2538231	0					
ANR	2538302	ArgumentList	classad_a		2538231	1					
ANR	2538303	Argument	classad_a		2538231	0					
ANR	2538304	Identifier	classad_a		2538231	0					
ANR	2538305	Argument	classad_b		2538231	1					
ANR	2538306	Identifier	classad_b		2538231	0					
ANR	2538307	ExpressionStatement	"read_from_char_alt ( & classad_a , & classad_b )"	119:1:3836:3878	2538231	7	True				
ANR	2538308	CallExpression	"read_from_char_alt ( & classad_a , & classad_b )"		2538231	0					
ANR	2538309	Callee	read_from_char_alt		2538231	0					
ANR	2538310	Identifier	read_from_char_alt		2538231	0					
ANR	2538311	ArgumentList	& classad_a		2538231	1					
ANR	2538312	Argument	& classad_a		2538231	0					
ANR	2538313	UnaryOperationExpression	& classad_a		2538231	0					
ANR	2538314	UnaryOperator	&		2538231	0					
ANR	2538315	Identifier	classad_a		2538231	1					
ANR	2538316	Argument	& classad_b		2538231	1					
ANR	2538317	UnaryOperationExpression	& classad_b		2538231	0					
ANR	2538318	UnaryOperator	&		2538231	0					
ANR	2538319	Identifier	classad_b		2538231	1					
ANR	2538320	ExpressionStatement	"test_parsing_helper ( classad_a , classad_b )"	120:1:3881:3922	2538231	8	True				
ANR	2538321	CallExpression	"test_parsing_helper ( classad_a , classad_b )"		2538231	0					
ANR	2538322	Callee	test_parsing_helper		2538231	0					
ANR	2538323	Identifier	test_parsing_helper		2538231	0					
ANR	2538324	ArgumentList	classad_a		2538231	1					
ANR	2538325	Argument	classad_a		2538231	0					
ANR	2538326	Identifier	classad_a		2538231	0					
ANR	2538327	Argument	classad_b		2538231	1					
ANR	2538328	Identifier	classad_b		2538231	0					
ANR	2538329	ExpressionStatement	make_file ( )	122:1:3926:3937	2538231	9	True				
ANR	2538330	CallExpression	make_file ( )		2538231	0					
ANR	2538331	Callee	make_file		2538231	0					
ANR	2538332	Identifier	make_file		2538231	0					
ANR	2538333	ArgumentList			2538231	1					
ANR	2538334	ExpressionStatement	"read_from_file ( & classad_a , & classad_b )"	124:1:3941:3979	2538231	10	True				
ANR	2538335	CallExpression	"read_from_file ( & classad_a , & classad_b )"		2538231	0					
ANR	2538336	Callee	read_from_file		2538231	0					
ANR	2538337	Identifier	read_from_file		2538231	0					
ANR	2538338	ArgumentList	& classad_a		2538231	1					
ANR	2538339	Argument	& classad_a		2538231	0					
ANR	2538340	UnaryOperationExpression	& classad_a		2538231	0					
ANR	2538341	UnaryOperator	&		2538231	0					
ANR	2538342	Identifier	classad_a		2538231	1					
ANR	2538343	Argument	& classad_b		2538231	1					
ANR	2538344	UnaryOperationExpression	& classad_b		2538231	0					
ANR	2538345	UnaryOperator	&		2538231	0					
ANR	2538346	Identifier	classad_b		2538231	1					
ANR	2538347	ExpressionStatement	"test_parsing_helper ( classad_a , classad_b )"	125:1:3982:4023	2538231	11	True				
ANR	2538348	CallExpression	"test_parsing_helper ( classad_a , classad_b )"		2538231	0					
ANR	2538349	Callee	test_parsing_helper		2538231	0					
ANR	2538350	Identifier	test_parsing_helper		2538231	0					
ANR	2538351	ArgumentList	classad_a		2538231	1					
ANR	2538352	Argument	classad_a		2538231	0					
ANR	2538353	Identifier	classad_a		2538231	0					
ANR	2538354	Argument	classad_b		2538231	1					
ANR	2538355	Identifier	classad_b		2538231	0					
ANR	2538356	ExpressionStatement	"read_from_file_alt ( & classad_a , & classad_b )"	127:1:4027:4069	2538231	12	True				
ANR	2538357	CallExpression	"read_from_file_alt ( & classad_a , & classad_b )"		2538231	0					
ANR	2538358	Callee	read_from_file_alt		2538231	0					
ANR	2538359	Identifier	read_from_file_alt		2538231	0					
ANR	2538360	ArgumentList	& classad_a		2538231	1					
ANR	2538361	Argument	& classad_a		2538231	0					
ANR	2538362	UnaryOperationExpression	& classad_a		2538231	0					
ANR	2538363	UnaryOperator	&		2538231	0					
ANR	2538364	Identifier	classad_a		2538231	1					
ANR	2538365	Argument	& classad_b		2538231	1					
ANR	2538366	UnaryOperationExpression	& classad_b		2538231	0					
ANR	2538367	UnaryOperator	&		2538231	0					
ANR	2538368	Identifier	classad_b		2538231	1					
ANR	2538369	ExpressionStatement	"test_parsing_helper ( classad_a , classad_b )"	128:1:4072:4113	2538231	13	True				
ANR	2538370	CallExpression	"test_parsing_helper ( classad_a , classad_b )"		2538231	0					
ANR	2538371	Callee	test_parsing_helper		2538231	0					
ANR	2538372	Identifier	test_parsing_helper		2538231	0					
ANR	2538373	ArgumentList	classad_a		2538231	1					
ANR	2538374	Argument	classad_a		2538231	0					
ANR	2538375	Identifier	classad_a		2538231	0					
ANR	2538376	Argument	classad_b		2538231	1					
ANR	2538377	Identifier	classad_b		2538231	0					
ANR	2538378	ExpressionStatement	"read_from_stream ( & classad_a , & classad_b )"	130:1:4117:4157	2538231	14	True				
ANR	2538379	CallExpression	"read_from_stream ( & classad_a , & classad_b )"		2538231	0					
ANR	2538380	Callee	read_from_stream		2538231	0					
ANR	2538381	Identifier	read_from_stream		2538231	0					
ANR	2538382	ArgumentList	& classad_a		2538231	1					
ANR	2538383	Argument	& classad_a		2538231	0					
ANR	2538384	UnaryOperationExpression	& classad_a		2538231	0					
ANR	2538385	UnaryOperator	&		2538231	0					
ANR	2538386	Identifier	classad_a		2538231	1					
ANR	2538387	Argument	& classad_b		2538231	1					
ANR	2538388	UnaryOperationExpression	& classad_b		2538231	0					
ANR	2538389	UnaryOperator	&		2538231	0					
ANR	2538390	Identifier	classad_b		2538231	1					
ANR	2538391	ExpressionStatement	"test_parsing_helper ( classad_a , classad_b )"	131:1:4160:4201	2538231	15	True				
ANR	2538392	CallExpression	"test_parsing_helper ( classad_a , classad_b )"		2538231	0					
ANR	2538393	Callee	test_parsing_helper		2538231	0					
ANR	2538394	Identifier	test_parsing_helper		2538231	0					
ANR	2538395	ArgumentList	classad_a		2538231	1					
ANR	2538396	Argument	classad_a		2538231	0					
ANR	2538397	Identifier	classad_a		2538231	0					
ANR	2538398	Argument	classad_b		2538231	1					
ANR	2538399	Identifier	classad_b		2538231	0					
ANR	2538400	ExpressionStatement	"read_from_stream_alt ( & classad_a , & classad_b )"	133:1:4205:4249	2538231	16	True				
ANR	2538401	CallExpression	"read_from_stream_alt ( & classad_a , & classad_b )"		2538231	0					
ANR	2538402	Callee	read_from_stream_alt		2538231	0					
ANR	2538403	Identifier	read_from_stream_alt		2538231	0					
ANR	2538404	ArgumentList	& classad_a		2538231	1					
ANR	2538405	Argument	& classad_a		2538231	0					
ANR	2538406	UnaryOperationExpression	& classad_a		2538231	0					
ANR	2538407	UnaryOperator	&		2538231	0					
ANR	2538408	Identifier	classad_a		2538231	1					
ANR	2538409	Argument	& classad_b		2538231	1					
ANR	2538410	UnaryOperationExpression	& classad_b		2538231	0					
ANR	2538411	UnaryOperator	&		2538231	0					
ANR	2538412	Identifier	classad_b		2538231	1					
ANR	2538413	ExpressionStatement	"test_parsing_helper ( classad_a , classad_b )"	134:1:4252:4293	2538231	17	True				
ANR	2538414	CallExpression	"test_parsing_helper ( classad_a , classad_b )"		2538231	0					
ANR	2538415	Callee	test_parsing_helper		2538231	0					
ANR	2538416	Identifier	test_parsing_helper		2538231	0					
ANR	2538417	ArgumentList	classad_a		2538231	1					
ANR	2538418	Argument	classad_a		2538231	0					
ANR	2538419	Identifier	classad_a		2538231	0					
ANR	2538420	Argument	classad_b		2538231	1					
ANR	2538421	Identifier	classad_b		2538231	0					
ANR	2538422	ExpressionStatement	remove_file ( )	136:1:4297:4310	2538231	18	True				
ANR	2538423	CallExpression	remove_file ( )		2538231	0					
ANR	2538424	Callee	remove_file		2538231	0					
ANR	2538425	Identifier	remove_file		2538231	0					
ANR	2538426	ArgumentList			2538231	1					
ANR	2538427	ReturnStatement	return ;	138:1:4314:4320	2538231	19	True				
ANR	2538428	ReturnType	static void		2538231	1					
ANR	2538429	Identifier	test_parsing		2538231	2					
ANR	2538430	ParameterList			2538231	3					
ANR	2538431	CFGEntryNode	ENTRY		2538231		True				
ANR	2538432	CFGExitNode	EXIT		2538231		True				
ANR	2538433	Symbol	& classad_a		2538231						
ANR	2538434	Symbol	& classad_b		2538231						
ANR	2538435	Symbol	classad_a		2538231						
ANR	2538436	Symbol	classad_b		2538231						
ANR	2538437	Function	test_parsing_helper	141:0:4325:4507							
ANR	2538438	FunctionDef	"test_parsing_helper (ClassAd * classad_a , ClassAd * classad_b)"		2538437	0					
ANR	2538439	CompoundStatement		144:0:4400:4507	2538437	0					
ANR	2538440	ExpressionStatement	check_classad_a ( classad_a )	145:1:4403:4429	2538437	0	True				
ANR	2538441	CallExpression	check_classad_a ( classad_a )		2538437	0					
ANR	2538442	Callee	check_classad_a		2538437	0					
ANR	2538443	Identifier	check_classad_a		2538437	0					
ANR	2538444	ArgumentList	classad_a		2538437	1					
ANR	2538445	Argument	classad_a		2538437	0					
ANR	2538446	Identifier	classad_a		2538437	0					
ANR	2538447	ExpressionStatement	check_classad_b ( classad_b )	146:1:4432:4458	2538437	1	True				
ANR	2538448	CallExpression	check_classad_b ( classad_b )		2538437	0					
ANR	2538449	Callee	check_classad_b		2538437	0					
ANR	2538450	Identifier	check_classad_b		2538437	0					
ANR	2538451	ArgumentList	classad_b		2538437	1					
ANR	2538452	Argument	classad_b		2538437	0					
ANR	2538453	Identifier	classad_b		2538437	0					
ANR	2538454	Statement	delete	147:1:4461:4466	2538437	2	True				
ANR	2538455	ExpressionStatement	classad_a	147:8:4468:4477	2538437	3	True				
ANR	2538456	Identifier	classad_a		2538437	0					
ANR	2538457	Statement	delete	148:1:4480:4485	2538437	4	True				
ANR	2538458	ExpressionStatement	classad_b	148:8:4487:4496	2538437	5	True				
ANR	2538459	Identifier	classad_b		2538437	0					
ANR	2538460	ReturnStatement	return ;	149:1:4499:4505	2538437	6	True				
ANR	2538461	ReturnType	static void		2538437	1					
ANR	2538462	Identifier	test_parsing_helper		2538437	2					
ANR	2538463	ParameterList	"ClassAd * classad_a , ClassAd * classad_b"		2538437	3					
ANR	2538464	Parameter	ClassAd * classad_a	142:1:4359:4376	2538437	0	True				
ANR	2538465	ParameterType	ClassAd *		2538437	0					
ANR	2538466	Identifier	classad_a		2538437	1					
ANR	2538467	Parameter	ClassAd * classad_b	143:1:4380:4397	2538437	1	True				
ANR	2538468	ParameterType	ClassAd *		2538437	0					
ANR	2538469	Identifier	classad_b		2538437	1					
ANR	2538470	CFGEntryNode	ENTRY		2538437		True				
ANR	2538471	CFGExitNode	EXIT		2538437		True				
ANR	2538472	Symbol	classad_a		2538437						
ANR	2538473	Symbol	classad_b		2538437						
ANR	2538474	Function	read_from_string	152:0:4510:4924							
ANR	2538475	FunctionDef	"read_from_string (ClassAd * * classad_a , ClassAd * * classad_b)"		2538474	0					
ANR	2538476	CompoundStatement		153:0:4581:4924	2538474	0					
ANR	2538477	IdentifierDeclStatement	ClassAdParser parser ;	154:1:4584:4604	2538474	0	True				
ANR	2538478	IdentifierDecl	parser		2538474	0					
ANR	2538479	IdentifierDeclType	ClassAdParser		2538474	0					
ANR	2538480	Identifier	parser		2538474	1					
ANR	2538481	IdentifierDeclStatement	ClassAd * classad_c ;	155:1:4607:4625	2538474	1	True				
ANR	2538482	IdentifierDecl	* classad_c		2538474	0					
ANR	2538483	IdentifierDeclType	ClassAd *		2538474	0					
ANR	2538484	Identifier	classad_c		2538474	1					
ANR	2538485	IdentifierDeclStatement	int offset ;	156:1:4628:4638	2538474	2	True				
ANR	2538486	IdentifierDecl	offset		2538474	0					
ANR	2538487	IdentifierDeclType	int		2538474	0					
ANR	2538488	Identifier	offset		2538474	1					
ANR	2538489	ExpressionStatement	"cout << ""Reading from C++ string.\\n"""	158:1:4642:4678	2538474	3	True				
ANR	2538490	ShiftExpression	"cout << ""Reading from C++ string.\\n"""		2538474	0		<<			
ANR	2538491	Identifier	cout		2538474	0					
ANR	2538492	PrimaryExpression	"""Reading from C++ string.\\n"""		2538474	1					
ANR	2538493	ExpressionStatement	offset = 0	160:1:4682:4692	2538474	4	True				
ANR	2538494	AssignmentExpression	offset = 0		2538474	0		=			
ANR	2538495	Identifier	offset		2538474	0					
ANR	2538496	PrimaryExpression	0		2538474	1					
ANR	2538497	ExpressionStatement	"* classad_a = parser . ParseClassAd ( parsing_text , offset )"	161:1:4695:4749	2538474	5	True				
ANR	2538498	AssignmentExpression	"* classad_a = parser . ParseClassAd ( parsing_text , offset )"		2538474	0		=			
ANR	2538499	UnaryOperationExpression	* classad_a		2538474	0					
ANR	2538500	UnaryOperator	*		2538474	0					
ANR	2538501	Identifier	classad_a		2538474	1					
ANR	2538502	CallExpression	"parser . ParseClassAd ( parsing_text , offset )"		2538474	1					
ANR	2538503	Callee	parser . ParseClassAd		2538474	0					
ANR	2538504	MemberAccess	parser . ParseClassAd		2538474	0					
ANR	2538505	Identifier	parser		2538474	0					
ANR	2538506	Identifier	ParseClassAd		2538474	1					
ANR	2538507	ArgumentList	parsing_text		2538474	1					
ANR	2538508	Argument	parsing_text		2538474	0					
ANR	2538509	Identifier	parsing_text		2538474	0					
ANR	2538510	Argument	offset		2538474	1					
ANR	2538511	Identifier	offset		2538474	0					
ANR	2538512	ExpressionStatement	"* classad_b = parser . ParseClassAd ( parsing_text , offset )"	162:1:4752:4806	2538474	6	True				
ANR	2538513	AssignmentExpression	"* classad_b = parser . ParseClassAd ( parsing_text , offset )"		2538474	0		=			
ANR	2538514	UnaryOperationExpression	* classad_b		2538474	0					
ANR	2538515	UnaryOperator	*		2538474	0					
ANR	2538516	Identifier	classad_b		2538474	1					
ANR	2538517	CallExpression	"parser . ParseClassAd ( parsing_text , offset )"		2538474	1					
ANR	2538518	Callee	parser . ParseClassAd		2538474	0					
ANR	2538519	MemberAccess	parser . ParseClassAd		2538474	0					
ANR	2538520	Identifier	parser		2538474	0					
ANR	2538521	Identifier	ParseClassAd		2538474	1					
ANR	2538522	ArgumentList	parsing_text		2538474	1					
ANR	2538523	Argument	parsing_text		2538474	0					
ANR	2538524	Identifier	parsing_text		2538474	0					
ANR	2538525	Argument	offset		2538474	1					
ANR	2538526	Identifier	offset		2538474	0					
ANR	2538527	ExpressionStatement	"classad_c = parser . ParseClassAd ( parsing_text , offset )"	163:1:4809:4862	2538474	7	True				
ANR	2538528	AssignmentExpression	"classad_c = parser . ParseClassAd ( parsing_text , offset )"		2538474	0		=			
ANR	2538529	Identifier	classad_c		2538474	0					
ANR	2538530	CallExpression	"parser . ParseClassAd ( parsing_text , offset )"		2538474	1					
ANR	2538531	Callee	parser . ParseClassAd		2538474	0					
ANR	2538532	MemberAccess	parser . ParseClassAd		2538474	0					
ANR	2538533	Identifier	parser		2538474	0					
ANR	2538534	Identifier	ParseClassAd		2538474	1					
ANR	2538535	ArgumentList	parsing_text		2538474	1					
ANR	2538536	Argument	parsing_text		2538474	0					
ANR	2538537	Identifier	parsing_text		2538474	0					
ANR	2538538	Argument	offset		2538474	1					
ANR	2538539	Identifier	offset		2538474	0					
ANR	2538540	ExpressionStatement	"check_parse ( * classad_a , * classad_b , classad_c )"	165:1:4866:4912	2538474	8	True				
ANR	2538541	CallExpression	"check_parse ( * classad_a , * classad_b , classad_c )"		2538474	0					
ANR	2538542	Callee	check_parse		2538474	0					
ANR	2538543	Identifier	check_parse		2538474	0					
ANR	2538544	ArgumentList	* classad_a		2538474	1					
ANR	2538545	Argument	* classad_a		2538474	0					
ANR	2538546	UnaryOperationExpression	* classad_a		2538474	0					
ANR	2538547	UnaryOperator	*		2538474	0					
ANR	2538548	Identifier	classad_a		2538474	1					
ANR	2538549	Argument	* classad_b		2538474	1					
ANR	2538550	UnaryOperationExpression	* classad_b		2538474	0					
ANR	2538551	UnaryOperator	*		2538474	0					
ANR	2538552	Identifier	classad_b		2538474	1					
ANR	2538553	Argument	classad_c		2538474	2					
ANR	2538554	Identifier	classad_c		2538474	0					
ANR	2538555	ReturnStatement	return ;	167:1:4916:4922	2538474	9	True				
ANR	2538556	ReturnType	static void		2538474	1					
ANR	2538557	Identifier	read_from_string		2538474	2					
ANR	2538558	ParameterList	"ClassAd * * classad_a , ClassAd * * classad_b"		2538474	3					
ANR	2538559	Parameter	ClassAd * * classad_a	152:29:4539:4557	2538474	0	True				
ANR	2538560	ParameterType	ClassAd * *		2538474	0					
ANR	2538561	Identifier	classad_a		2538474	1					
ANR	2538562	Parameter	ClassAd * * classad_b	152:50:4560:4578	2538474	1	True				
ANR	2538563	ParameterType	ClassAd * *		2538474	0					
ANR	2538564	Identifier	classad_b		2538474	1					
ANR	2538565	CFGEntryNode	ENTRY		2538474		True				
ANR	2538566	CFGExitNode	EXIT		2538474		True				
ANR	2538567	Symbol	* classad_a		2538474						
ANR	2538568	Symbol	parsing_text		2538474						
ANR	2538569	Symbol	parser		2538474						
ANR	2538570	Symbol	offset		2538474						
ANR	2538571	Symbol	classad_a		2538474						
ANR	2538572	Symbol	* classad_b		2538474						
ANR	2538573	Symbol	classad_c		2538474						
ANR	2538574	Symbol	parser . ParseClassAd		2538474						
ANR	2538575	Symbol	classad_b		2538474						
ANR	2538576	Function	read_from_string_alt	170:0:4927:5487							
ANR	2538577	FunctionDef	"read_from_string_alt (ClassAd * * classad_a , ClassAd * * classad_b)"		2538576	0					
ANR	2538578	CompoundStatement		171:0:5002:5487	2538576	0					
ANR	2538579	IdentifierDeclStatement	ClassAdParser parser ;	172:1:5005:5025	2538576	0	True				
ANR	2538580	IdentifierDecl	parser		2538576	0					
ANR	2538581	IdentifierDeclType	ClassAdParser		2538576	0					
ANR	2538582	Identifier	parser		2538576	1					
ANR	2538583	IdentifierDeclStatement	ClassAd * classad_c ;	173:1:5028:5046	2538576	1	True				
ANR	2538584	IdentifierDecl	* classad_c		2538576	0					
ANR	2538585	IdentifierDeclType	ClassAd *		2538576	0					
ANR	2538586	Identifier	classad_c		2538576	1					
ANR	2538587	IdentifierDeclStatement	int offset ;	174:1:5049:5059	2538576	2	True				
ANR	2538588	IdentifierDecl	offset		2538576	0					
ANR	2538589	IdentifierDeclType	int		2538576	0					
ANR	2538590	Identifier	offset		2538576	1					
ANR	2538591	ExpressionStatement	"cout << ""Reading from C++ string (alt parse).\\n"""	176:1:5063:5111	2538576	3	True				
ANR	2538592	ShiftExpression	"cout << ""Reading from C++ string (alt parse).\\n"""		2538576	0		<<			
ANR	2538593	Identifier	cout		2538576	0					
ANR	2538594	PrimaryExpression	"""Reading from C++ string (alt parse).\\n"""		2538576	1					
ANR	2538595	ExpressionStatement	offset = 0	178:1:5115:5125	2538576	4	True				
ANR	2538596	AssignmentExpression	offset = 0		2538576	0		=			
ANR	2538597	Identifier	offset		2538576	0					
ANR	2538598	PrimaryExpression	0		2538576	1					
ANR	2538599	Statement	*	179:1:5128:5128	2538576	5	True				
ANR	2538600	Statement	classad_a	179:2:5129:5137	2538576	6	True				
ANR	2538601	Statement	=	179:12:5139:5139	2538576	7	True				
ANR	2538602	Statement	new	179:14:5141:5143	2538576	8	True				
ANR	2538603	ExpressionStatement	ClassAd	179:18:5145:5152	2538576	9	True				
ANR	2538604	Identifier	ClassAd		2538576	0					
ANR	2538605	Statement	*	180:1:5155:5155	2538576	10	True				
ANR	2538606	Statement	classad_b	180:2:5156:5164	2538576	11	True				
ANR	2538607	Statement	=	180:12:5166:5166	2538576	12	True				
ANR	2538608	Statement	new	180:14:5168:5170	2538576	13	True				
ANR	2538609	ExpressionStatement	ClassAd	180:18:5172:5179	2538576	14	True				
ANR	2538610	Identifier	ClassAd		2538576	0					
ANR	2538611	Statement	classad_c	181:1:5182:5190	2538576	15	True				
ANR	2538612	Statement	=	181:12:5193:5193	2538576	16	True				
ANR	2538613	Statement	new	181:14:5195:5197	2538576	17	True				
ANR	2538614	ExpressionStatement	ClassAd	181:18:5199:5206	2538576	18	True				
ANR	2538615	Identifier	ClassAd		2538576	0					
ANR	2538616	ExpressionStatement	"parser . ParseClassAd ( parsing_text , * * classad_a , offset )"	182:1:5209:5263	2538576	19	True				
ANR	2538617	CallExpression	"parser . ParseClassAd ( parsing_text , * * classad_a , offset )"		2538576	0					
ANR	2538618	Callee	parser . ParseClassAd		2538576	0					
ANR	2538619	MemberAccess	parser . ParseClassAd		2538576	0					
ANR	2538620	Identifier	parser		2538576	0					
ANR	2538621	Identifier	ParseClassAd		2538576	1					
ANR	2538622	ArgumentList	parsing_text		2538576	1					
ANR	2538623	Argument	parsing_text		2538576	0					
ANR	2538624	Identifier	parsing_text		2538576	0					
ANR	2538625	Argument	* * classad_a		2538576	1					
ANR	2538626	UnaryOperationExpression	* * classad_a		2538576	0					
ANR	2538627	UnaryOperator	*		2538576	0					
ANR	2538628	UnaryOperationExpression	* classad_a		2538576	1					
ANR	2538629	UnaryOperator	*		2538576	0					
ANR	2538630	Identifier	classad_a		2538576	1					
ANR	2538631	Argument	offset		2538576	2					
ANR	2538632	Identifier	offset		2538576	0					
ANR	2538633	ExpressionStatement	"parser . ParseClassAd ( parsing_text , * * classad_b , offset )"	183:1:5266:5320	2538576	20	True				
ANR	2538634	CallExpression	"parser . ParseClassAd ( parsing_text , * * classad_b , offset )"		2538576	0					
ANR	2538635	Callee	parser . ParseClassAd		2538576	0					
ANR	2538636	MemberAccess	parser . ParseClassAd		2538576	0					
ANR	2538637	Identifier	parser		2538576	0					
ANR	2538638	Identifier	ParseClassAd		2538576	1					
ANR	2538639	ArgumentList	parsing_text		2538576	1					
ANR	2538640	Argument	parsing_text		2538576	0					
ANR	2538641	Identifier	parsing_text		2538576	0					
ANR	2538642	Argument	* * classad_b		2538576	1					
ANR	2538643	UnaryOperationExpression	* * classad_b		2538576	0					
ANR	2538644	UnaryOperator	*		2538576	0					
ANR	2538645	UnaryOperationExpression	* classad_b		2538576	1					
ANR	2538646	UnaryOperator	*		2538576	0					
ANR	2538647	Identifier	classad_b		2538576	1					
ANR	2538648	Argument	offset		2538576	2					
ANR	2538649	Identifier	offset		2538576	0					
ANR	2538650	IfStatement	"if ( ! parser . ParseClassAd ( parsing_text , * classad_c , offset ) )"		2538576	21					
ANR	2538651	Condition	"! parser . ParseClassAd ( parsing_text , * classad_c , offset )"	184:5:5327:5380	2538576	0	True				
ANR	2538652	UnaryOperationExpression	"! parser . ParseClassAd ( parsing_text , * classad_c , offset )"		2538576	0					
ANR	2538653	UnaryOperator	!		2538576	0					
ANR	2538654	CallExpression	"parser . ParseClassAd ( parsing_text , * classad_c , offset )"		2538576	1					
ANR	2538655	Callee	parser . ParseClassAd		2538576	0					
ANR	2538656	MemberAccess	parser . ParseClassAd		2538576	0					
ANR	2538657	Identifier	parser		2538576	0					
ANR	2538658	Identifier	ParseClassAd		2538576	1					
ANR	2538659	ArgumentList	parsing_text		2538576	1					
ANR	2538660	Argument	parsing_text		2538576	0					
ANR	2538661	Identifier	parsing_text		2538576	0					
ANR	2538662	Argument	* classad_c		2538576	1					
ANR	2538663	UnaryOperationExpression	* classad_c		2538576	0					
ANR	2538664	UnaryOperator	*		2538576	0					
ANR	2538665	Identifier	classad_c		2538576	1					
ANR	2538666	Argument	offset		2538576	2					
ANR	2538667	Identifier	offset		2538576	0					
ANR	2538668	CompoundStatement		14:61:380:380	2538576	1					
ANR	2538669	Statement	delete	185:2:5387:5392	2538576	0	True				
ANR	2538670	ExpressionStatement	classad_c	185:9:5394:5403	2538576	1	True				
ANR	2538671	Identifier	classad_c		2538576	0					
ANR	2538672	ExpressionStatement	classad_c = NULL	186:2:5407:5423	2538576	2	True				
ANR	2538673	AssignmentExpression	classad_c = NULL		2538576	0		=			
ANR	2538674	Identifier	classad_c		2538576	0					
ANR	2538675	Identifier	NULL		2538576	1					
ANR	2538676	ExpressionStatement	"check_parse ( * classad_a , * classad_b , classad_c )"	189:1:5430:5476	2538576	22	True				
ANR	2538677	CallExpression	"check_parse ( * classad_a , * classad_b , classad_c )"		2538576	0					
ANR	2538678	Callee	check_parse		2538576	0					
ANR	2538679	Identifier	check_parse		2538576	0					
ANR	2538680	ArgumentList	* classad_a		2538576	1					
ANR	2538681	Argument	* classad_a		2538576	0					
ANR	2538682	UnaryOperationExpression	* classad_a		2538576	0					
ANR	2538683	UnaryOperator	*		2538576	0					
ANR	2538684	Identifier	classad_a		2538576	1					
ANR	2538685	Argument	* classad_b		2538576	1					
ANR	2538686	UnaryOperationExpression	* classad_b		2538576	0					
ANR	2538687	UnaryOperator	*		2538576	0					
ANR	2538688	Identifier	classad_b		2538576	1					
ANR	2538689	Argument	classad_c		2538576	2					
ANR	2538690	Identifier	classad_c		2538576	0					
ANR	2538691	ReturnStatement	return ;	190:1:5479:5485	2538576	23	True				
ANR	2538692	ReturnType	static void		2538576	1					
ANR	2538693	Identifier	read_from_string_alt		2538576	2					
ANR	2538694	ParameterList	"ClassAd * * classad_a , ClassAd * * classad_b"		2538576	3					
ANR	2538695	Parameter	ClassAd * * classad_a	170:33:4960:4978	2538576	0	True				
ANR	2538696	ParameterType	ClassAd * *		2538576	0					
ANR	2538697	Identifier	classad_a		2538576	1					
ANR	2538698	Parameter	ClassAd * * classad_b	170:54:4981:4999	2538576	1	True				
ANR	2538699	ParameterType	ClassAd * *		2538576	0					
ANR	2538700	Identifier	classad_b		2538576	1					
ANR	2538701	CFGEntryNode	ENTRY		2538576		True				
ANR	2538702	CFGExitNode	EXIT		2538576		True				
ANR	2538703	Symbol	* classad_a		2538576						
ANR	2538704	Symbol	NULL		2538576						
ANR	2538705	Symbol	offset		2538576						
ANR	2538706	Symbol	* * classad_a		2538576						
ANR	2538707	Symbol	* * classad_b		2538576						
ANR	2538708	Symbol	classad_a		2538576						
ANR	2538709	Symbol	* classad_c		2538576						
ANR	2538710	Symbol	* classad_b		2538576						
ANR	2538711	Symbol	classad_c		2538576						
ANR	2538712	Symbol	parser . ParseClassAd		2538576						
ANR	2538713	Symbol	classad_b		2538576						
ANR	2538714	Symbol	parsing_text		2538576						
ANR	2538715	Symbol	parser		2538576						
ANR	2538716	Function	read_from_char	193:0:5490:5917							
ANR	2538717	FunctionDef	"read_from_char (ClassAd * * classad_a , ClassAd * * classad_b)"		2538716	0					
ANR	2538718	CompoundStatement		194:0:5559:5917	2538716	0					
ANR	2538719	IdentifierDeclStatement	ClassAdParser parser ;	195:1:5562:5582	2538716	0	True				
ANR	2538720	IdentifierDecl	parser		2538716	0					
ANR	2538721	IdentifierDeclType	ClassAdParser		2538716	0					
ANR	2538722	Identifier	parser		2538716	1					
ANR	2538723	IdentifierDeclStatement	ClassAd * classad_c ;	196:1:5585:5603	2538716	1	True				
ANR	2538724	IdentifierDecl	* classad_c		2538716	0					
ANR	2538725	IdentifierDeclType	ClassAd *		2538716	0					
ANR	2538726	Identifier	classad_c		2538716	1					
ANR	2538727	IdentifierDeclStatement	const char * text = parsing_text . c_str ( ) ;	197:1:5606:5645	2538716	2	True				
ANR	2538728	IdentifierDecl	* text = parsing_text . c_str ( )		2538716	0					
ANR	2538729	IdentifierDeclType	const char *		2538716	0					
ANR	2538730	Identifier	text		2538716	1					
ANR	2538731	AssignmentExpression	* text = parsing_text . c_str ( )		2538716	2		=			
ANR	2538732	Identifier	text		2538716	0					
ANR	2538733	CallExpression	parsing_text . c_str ( )		2538716	1					
ANR	2538734	Callee	parsing_text . c_str		2538716	0					
ANR	2538735	MemberAccess	parsing_text . c_str		2538716	0					
ANR	2538736	Identifier	parsing_text		2538716	0					
ANR	2538737	Identifier	c_str		2538716	1					
ANR	2538738	ArgumentList			2538716	1					
ANR	2538739	IdentifierDeclStatement	int offset ;	198:1:5648:5658	2538716	3	True				
ANR	2538740	IdentifierDecl	offset		2538716	0					
ANR	2538741	IdentifierDeclType	int		2538716	0					
ANR	2538742	Identifier	offset		2538716	1					
ANR	2538743	ExpressionStatement	"cout << ""Reading from C string.\\n"""	200:1:5662:5696	2538716	4	True				
ANR	2538744	ShiftExpression	"cout << ""Reading from C string.\\n"""		2538716	0		<<			
ANR	2538745	Identifier	cout		2538716	0					
ANR	2538746	PrimaryExpression	"""Reading from C string.\\n"""		2538716	1					
ANR	2538747	ExpressionStatement	offset = 0	202:1:5700:5710	2538716	5	True				
ANR	2538748	AssignmentExpression	offset = 0		2538716	0		=			
ANR	2538749	Identifier	offset		2538716	0					
ANR	2538750	PrimaryExpression	0		2538716	1					
ANR	2538751	ExpressionStatement	"* classad_a = parser . ParseClassAd ( text , offset )"	203:1:5713:5759	2538716	6	True				
ANR	2538752	AssignmentExpression	"* classad_a = parser . ParseClassAd ( text , offset )"		2538716	0		=			
ANR	2538753	UnaryOperationExpression	* classad_a		2538716	0					
ANR	2538754	UnaryOperator	*		2538716	0					
ANR	2538755	Identifier	classad_a		2538716	1					
ANR	2538756	CallExpression	"parser . ParseClassAd ( text , offset )"		2538716	1					
ANR	2538757	Callee	parser . ParseClassAd		2538716	0					
ANR	2538758	MemberAccess	parser . ParseClassAd		2538716	0					
ANR	2538759	Identifier	parser		2538716	0					
ANR	2538760	Identifier	ParseClassAd		2538716	1					
ANR	2538761	ArgumentList	text		2538716	1					
ANR	2538762	Argument	text		2538716	0					
ANR	2538763	Identifier	text		2538716	0					
ANR	2538764	Argument	offset		2538716	1					
ANR	2538765	Identifier	offset		2538716	0					
ANR	2538766	ExpressionStatement	"* classad_b = parser . ParseClassAd ( text , offset )"	204:1:5762:5808	2538716	7	True				
ANR	2538767	AssignmentExpression	"* classad_b = parser . ParseClassAd ( text , offset )"		2538716	0		=			
ANR	2538768	UnaryOperationExpression	* classad_b		2538716	0					
ANR	2538769	UnaryOperator	*		2538716	0					
ANR	2538770	Identifier	classad_b		2538716	1					
ANR	2538771	CallExpression	"parser . ParseClassAd ( text , offset )"		2538716	1					
ANR	2538772	Callee	parser . ParseClassAd		2538716	0					
ANR	2538773	MemberAccess	parser . ParseClassAd		2538716	0					
ANR	2538774	Identifier	parser		2538716	0					
ANR	2538775	Identifier	ParseClassAd		2538716	1					
ANR	2538776	ArgumentList	text		2538716	1					
ANR	2538777	Argument	text		2538716	0					
ANR	2538778	Identifier	text		2538716	0					
ANR	2538779	Argument	offset		2538716	1					
ANR	2538780	Identifier	offset		2538716	0					
ANR	2538781	ExpressionStatement	"classad_c = parser . ParseClassAd ( text , offset )"	205:1:5811:5856	2538716	8	True				
ANR	2538782	AssignmentExpression	"classad_c = parser . ParseClassAd ( text , offset )"		2538716	0		=			
ANR	2538783	Identifier	classad_c		2538716	0					
ANR	2538784	CallExpression	"parser . ParseClassAd ( text , offset )"		2538716	1					
ANR	2538785	Callee	parser . ParseClassAd		2538716	0					
ANR	2538786	MemberAccess	parser . ParseClassAd		2538716	0					
ANR	2538787	Identifier	parser		2538716	0					
ANR	2538788	Identifier	ParseClassAd		2538716	1					
ANR	2538789	ArgumentList	text		2538716	1					
ANR	2538790	Argument	text		2538716	0					
ANR	2538791	Identifier	text		2538716	0					
ANR	2538792	Argument	offset		2538716	1					
ANR	2538793	Identifier	offset		2538716	0					
ANR	2538794	ExpressionStatement	"check_parse ( * classad_a , * classad_b , classad_c )"	207:1:5860:5906	2538716	9	True				
ANR	2538795	CallExpression	"check_parse ( * classad_a , * classad_b , classad_c )"		2538716	0					
ANR	2538796	Callee	check_parse		2538716	0					
ANR	2538797	Identifier	check_parse		2538716	0					
ANR	2538798	ArgumentList	* classad_a		2538716	1					
ANR	2538799	Argument	* classad_a		2538716	0					
ANR	2538800	UnaryOperationExpression	* classad_a		2538716	0					
ANR	2538801	UnaryOperator	*		2538716	0					
ANR	2538802	Identifier	classad_a		2538716	1					
ANR	2538803	Argument	* classad_b		2538716	1					
ANR	2538804	UnaryOperationExpression	* classad_b		2538716	0					
ANR	2538805	UnaryOperator	*		2538716	0					
ANR	2538806	Identifier	classad_b		2538716	1					
ANR	2538807	Argument	classad_c		2538716	2					
ANR	2538808	Identifier	classad_c		2538716	0					
ANR	2538809	ReturnStatement	return ;	208:1:5909:5915	2538716	10	True				
ANR	2538810	ReturnType	static void		2538716	1					
ANR	2538811	Identifier	read_from_char		2538716	2					
ANR	2538812	ParameterList	"ClassAd * * classad_a , ClassAd * * classad_b"		2538716	3					
ANR	2538813	Parameter	ClassAd * * classad_a	193:27:5517:5535	2538716	0	True				
ANR	2538814	ParameterType	ClassAd * *		2538716	0					
ANR	2538815	Identifier	classad_a		2538716	1					
ANR	2538816	Parameter	ClassAd * * classad_b	193:48:5538:5556	2538716	1	True				
ANR	2538817	ParameterType	ClassAd * *		2538716	0					
ANR	2538818	Identifier	classad_b		2538716	1					
ANR	2538819	CFGEntryNode	ENTRY		2538716		True				
ANR	2538820	CFGExitNode	EXIT		2538716		True				
ANR	2538821	Symbol	* classad_a		2538716						
ANR	2538822	Symbol	parsing_text		2538716						
ANR	2538823	Symbol	parser		2538716						
ANR	2538824	Symbol	offset		2538716						
ANR	2538825	Symbol	text		2538716						
ANR	2538826	Symbol	classad_a		2538716						
ANR	2538827	Symbol	* classad_b		2538716						
ANR	2538828	Symbol	classad_c		2538716						
ANR	2538829	Symbol	parsing_text . c_str		2538716						
ANR	2538830	Symbol	parser . ParseClassAd		2538716						
ANR	2538831	Symbol	classad_b		2538716						
ANR	2538832	Function	read_from_char_alt	211:0:5920:6494							
ANR	2538833	FunctionDef	"read_from_char_alt (ClassAd * * classad_a , ClassAd * * classad_b)"		2538832	0					
ANR	2538834	CompoundStatement		212:0:5993:6494	2538832	0					
ANR	2538835	IdentifierDeclStatement	ClassAdParser parser ;	213:1:5996:6016	2538832	0	True				
ANR	2538836	IdentifierDecl	parser		2538832	0					
ANR	2538837	IdentifierDeclType	ClassAdParser		2538832	0					
ANR	2538838	Identifier	parser		2538832	1					
ANR	2538839	IdentifierDeclStatement	ClassAd * classad_c ;	214:1:6019:6037	2538832	1	True				
ANR	2538840	IdentifierDecl	* classad_c		2538832	0					
ANR	2538841	IdentifierDeclType	ClassAd *		2538832	0					
ANR	2538842	Identifier	classad_c		2538832	1					
ANR	2538843	IdentifierDeclStatement	const char * text = parsing_text . c_str ( ) ;	215:1:6040:6079	2538832	2	True				
ANR	2538844	IdentifierDecl	* text = parsing_text . c_str ( )		2538832	0					
ANR	2538845	IdentifierDeclType	const char *		2538832	0					
ANR	2538846	Identifier	text		2538832	1					
ANR	2538847	AssignmentExpression	* text = parsing_text . c_str ( )		2538832	2		=			
ANR	2538848	Identifier	text		2538832	0					
ANR	2538849	CallExpression	parsing_text . c_str ( )		2538832	1					
ANR	2538850	Callee	parsing_text . c_str		2538832	0					
ANR	2538851	MemberAccess	parsing_text . c_str		2538832	0					
ANR	2538852	Identifier	parsing_text		2538832	0					
ANR	2538853	Identifier	c_str		2538832	1					
ANR	2538854	ArgumentList			2538832	1					
ANR	2538855	IdentifierDeclStatement	int offset ;	216:1:6082:6092	2538832	3	True				
ANR	2538856	IdentifierDecl	offset		2538832	0					
ANR	2538857	IdentifierDeclType	int		2538832	0					
ANR	2538858	Identifier	offset		2538832	1					
ANR	2538859	ExpressionStatement	"cout << ""Reading from C string (alt parse).\\n"""	218:1:6096:6142	2538832	4	True				
ANR	2538860	ShiftExpression	"cout << ""Reading from C string (alt parse).\\n"""		2538832	0		<<			
ANR	2538861	Identifier	cout		2538832	0					
ANR	2538862	PrimaryExpression	"""Reading from C string (alt parse).\\n"""		2538832	1					
ANR	2538863	ExpressionStatement	offset = 0	220:1:6146:6156	2538832	5	True				
ANR	2538864	AssignmentExpression	offset = 0		2538832	0		=			
ANR	2538865	Identifier	offset		2538832	0					
ANR	2538866	PrimaryExpression	0		2538832	1					
ANR	2538867	Statement	*	221:1:6159:6159	2538832	6	True				
ANR	2538868	Statement	classad_a	221:2:6160:6168	2538832	7	True				
ANR	2538869	Statement	=	221:12:6170:6170	2538832	8	True				
ANR	2538870	Statement	new	221:14:6172:6174	2538832	9	True				
ANR	2538871	ExpressionStatement	ClassAd	221:18:6176:6183	2538832	10	True				
ANR	2538872	Identifier	ClassAd		2538832	0					
ANR	2538873	Statement	*	222:1:6186:6186	2538832	11	True				
ANR	2538874	Statement	classad_b	222:2:6187:6195	2538832	12	True				
ANR	2538875	Statement	=	222:12:6197:6197	2538832	13	True				
ANR	2538876	Statement	new	222:14:6199:6201	2538832	14	True				
ANR	2538877	ExpressionStatement	ClassAd	222:18:6203:6210	2538832	15	True				
ANR	2538878	Identifier	ClassAd		2538832	0					
ANR	2538879	Statement	classad_c	223:1:6213:6221	2538832	16	True				
ANR	2538880	Statement	=	223:12:6224:6224	2538832	17	True				
ANR	2538881	Statement	new	223:14:6226:6228	2538832	18	True				
ANR	2538882	ExpressionStatement	ClassAd	223:18:6230:6237	2538832	19	True				
ANR	2538883	Identifier	ClassAd		2538832	0					
ANR	2538884	ExpressionStatement	"parser . ParseClassAd ( text , * * classad_a , offset )"	224:1:6240:6286	2538832	20	True				
ANR	2538885	CallExpression	"parser . ParseClassAd ( text , * * classad_a , offset )"		2538832	0					
ANR	2538886	Callee	parser . ParseClassAd		2538832	0					
ANR	2538887	MemberAccess	parser . ParseClassAd		2538832	0					
ANR	2538888	Identifier	parser		2538832	0					
ANR	2538889	Identifier	ParseClassAd		2538832	1					
ANR	2538890	ArgumentList	text		2538832	1					
ANR	2538891	Argument	text		2538832	0					
ANR	2538892	Identifier	text		2538832	0					
ANR	2538893	Argument	* * classad_a		2538832	1					
ANR	2538894	UnaryOperationExpression	* * classad_a		2538832	0					
ANR	2538895	UnaryOperator	*		2538832	0					
ANR	2538896	UnaryOperationExpression	* classad_a		2538832	1					
ANR	2538897	UnaryOperator	*		2538832	0					
ANR	2538898	Identifier	classad_a		2538832	1					
ANR	2538899	Argument	offset		2538832	2					
ANR	2538900	Identifier	offset		2538832	0					
ANR	2538901	ExpressionStatement	"parser . ParseClassAd ( text , * * classad_b , offset )"	225:1:6289:6335	2538832	21	True				
ANR	2538902	CallExpression	"parser . ParseClassAd ( text , * * classad_b , offset )"		2538832	0					
ANR	2538903	Callee	parser . ParseClassAd		2538832	0					
ANR	2538904	MemberAccess	parser . ParseClassAd		2538832	0					
ANR	2538905	Identifier	parser		2538832	0					
ANR	2538906	Identifier	ParseClassAd		2538832	1					
ANR	2538907	ArgumentList	text		2538832	1					
ANR	2538908	Argument	text		2538832	0					
ANR	2538909	Identifier	text		2538832	0					
ANR	2538910	Argument	* * classad_b		2538832	1					
ANR	2538911	UnaryOperationExpression	* * classad_b		2538832	0					
ANR	2538912	UnaryOperator	*		2538832	0					
ANR	2538913	UnaryOperationExpression	* classad_b		2538832	1					
ANR	2538914	UnaryOperator	*		2538832	0					
ANR	2538915	Identifier	classad_b		2538832	1					
ANR	2538916	Argument	offset		2538832	2					
ANR	2538917	Identifier	offset		2538832	0					
ANR	2538918	IfStatement	"if ( ! parser . ParseClassAd ( text , * classad_c , offset ) )"		2538832	22					
ANR	2538919	Condition	"! parser . ParseClassAd ( text , * classad_c , offset )"	226:5:6342:6387	2538832	0	True				
ANR	2538920	UnaryOperationExpression	"! parser . ParseClassAd ( text , * classad_c , offset )"		2538832	0					
ANR	2538921	UnaryOperator	!		2538832	0					
ANR	2538922	CallExpression	"parser . ParseClassAd ( text , * classad_c , offset )"		2538832	1					
ANR	2538923	Callee	parser . ParseClassAd		2538832	0					
ANR	2538924	MemberAccess	parser . ParseClassAd		2538832	0					
ANR	2538925	Identifier	parser		2538832	0					
ANR	2538926	Identifier	ParseClassAd		2538832	1					
ANR	2538927	ArgumentList	text		2538832	1					
ANR	2538928	Argument	text		2538832	0					
ANR	2538929	Identifier	text		2538832	0					
ANR	2538930	Argument	* classad_c		2538832	1					
ANR	2538931	UnaryOperationExpression	* classad_c		2538832	0					
ANR	2538932	UnaryOperator	*		2538832	0					
ANR	2538933	Identifier	classad_c		2538832	1					
ANR	2538934	Argument	offset		2538832	2					
ANR	2538935	Identifier	offset		2538832	0					
ANR	2538936	CompoundStatement		15:53:396:396	2538832	1					
ANR	2538937	Statement	delete	227:2:6394:6399	2538832	0	True				
ANR	2538938	ExpressionStatement	classad_c	227:9:6401:6410	2538832	1	True				
ANR	2538939	Identifier	classad_c		2538832	0					
ANR	2538940	ExpressionStatement	classad_c = NULL	228:2:6414:6430	2538832	2	True				
ANR	2538941	AssignmentExpression	classad_c = NULL		2538832	0		=			
ANR	2538942	Identifier	classad_c		2538832	0					
ANR	2538943	Identifier	NULL		2538832	1					
ANR	2538944	ExpressionStatement	"check_parse ( * classad_a , * classad_b , classad_c )"	231:1:6437:6483	2538832	23	True				
ANR	2538945	CallExpression	"check_parse ( * classad_a , * classad_b , classad_c )"		2538832	0					
ANR	2538946	Callee	check_parse		2538832	0					
ANR	2538947	Identifier	check_parse		2538832	0					
ANR	2538948	ArgumentList	* classad_a		2538832	1					
ANR	2538949	Argument	* classad_a		2538832	0					
ANR	2538950	UnaryOperationExpression	* classad_a		2538832	0					
ANR	2538951	UnaryOperator	*		2538832	0					
ANR	2538952	Identifier	classad_a		2538832	1					
ANR	2538953	Argument	* classad_b		2538832	1					
ANR	2538954	UnaryOperationExpression	* classad_b		2538832	0					
ANR	2538955	UnaryOperator	*		2538832	0					
ANR	2538956	Identifier	classad_b		2538832	1					
ANR	2538957	Argument	classad_c		2538832	2					
ANR	2538958	Identifier	classad_c		2538832	0					
ANR	2538959	ReturnStatement	return ;	232:1:6486:6492	2538832	24	True				
ANR	2538960	ReturnType	static void		2538832	1					
ANR	2538961	Identifier	read_from_char_alt		2538832	2					
ANR	2538962	ParameterList	"ClassAd * * classad_a , ClassAd * * classad_b"		2538832	3					
ANR	2538963	Parameter	ClassAd * * classad_a	211:31:5951:5969	2538832	0	True				
ANR	2538964	ParameterType	ClassAd * *		2538832	0					
ANR	2538965	Identifier	classad_a		2538832	1					
ANR	2538966	Parameter	ClassAd * * classad_b	211:52:5972:5990	2538832	1	True				
ANR	2538967	ParameterType	ClassAd * *		2538832	0					
ANR	2538968	Identifier	classad_b		2538832	1					
ANR	2538969	CFGEntryNode	ENTRY		2538832		True				
ANR	2538970	CFGExitNode	EXIT		2538832		True				
ANR	2538971	Symbol	* classad_a		2538832						
ANR	2538972	Symbol	NULL		2538832						
ANR	2538973	Symbol	offset		2538832						
ANR	2538974	Symbol	* * classad_a		2538832						
ANR	2538975	Symbol	* * classad_b		2538832						
ANR	2538976	Symbol	classad_a		2538832						
ANR	2538977	Symbol	* classad_c		2538832						
ANR	2538978	Symbol	* classad_b		2538832						
ANR	2538979	Symbol	classad_c		2538832						
ANR	2538980	Symbol	parser . ParseClassAd		2538832						
ANR	2538981	Symbol	classad_b		2538832						
ANR	2538982	Symbol	parsing_text		2538832						
ANR	2538983	Symbol	parser		2538832						
ANR	2538984	Symbol	text		2538832						
ANR	2538985	Symbol	parsing_text . c_str		2538832						
ANR	2538986	Function	make_file	235:0:6497:6666							
ANR	2538987	FunctionDef	make_file ()		2538986	0					
ANR	2538988	CompoundStatement		236:0:6525:6666	2538986	0					
ANR	2538989	IdentifierDeclStatement	FILE * file ;	237:1:6528:6538	2538986	0	True				
ANR	2538990	IdentifierDecl	* file		2538986	0					
ANR	2538991	IdentifierDeclType	FILE *		2538986	0					
ANR	2538992	Identifier	file		2538986	1					
ANR	2538993	ExpressionStatement	remove_file ( )	239:1:6542:6555	2538986	1	True				
ANR	2538994	CallExpression	remove_file ( )		2538986	0					
ANR	2538995	Callee	remove_file		2538986	0					
ANR	2538996	Identifier	remove_file		2538986	0					
ANR	2538997	ArgumentList			2538986	1					
ANR	2538998	ExpressionStatement	"file = fopen ( ""tmp.classads.tmp"" , ""w"" )"	240:1:6558:6595	2538986	2	True				
ANR	2538999	AssignmentExpression	"file = fopen ( ""tmp.classads.tmp"" , ""w"" )"		2538986	0		=			
ANR	2539000	Identifier	file		2538986	0					
ANR	2539001	CallExpression	"fopen ( ""tmp.classads.tmp"" , ""w"" )"		2538986	1					
ANR	2539002	Callee	fopen		2538986	0					
ANR	2539003	Identifier	fopen		2538986	0					
ANR	2539004	ArgumentList	"""tmp.classads.tmp"""		2538986	1					
ANR	2539005	Argument	"""tmp.classads.tmp"""		2538986	0					
ANR	2539006	PrimaryExpression	"""tmp.classads.tmp"""		2538986	0					
ANR	2539007	Argument	"""w"""		2538986	1					
ANR	2539008	PrimaryExpression	"""w"""		2538986	0					
ANR	2539009	ExpressionStatement	"fprintf ( file , ""%s"" , parsing_text . c_str ( ) )"	241:1:6598:6639	2538986	3	True				
ANR	2539010	CallExpression	"fprintf ( file , ""%s"" , parsing_text . c_str ( ) )"		2538986	0					
ANR	2539011	Callee	fprintf		2538986	0					
ANR	2539012	Identifier	fprintf		2538986	0					
ANR	2539013	ArgumentList	file		2538986	1					
ANR	2539014	Argument	file		2538986	0					
ANR	2539015	Identifier	file		2538986	0					
ANR	2539016	Argument	"""%s"""		2538986	1					
ANR	2539017	PrimaryExpression	"""%s"""		2538986	0					
ANR	2539018	Argument	parsing_text . c_str ( )		2538986	2					
ANR	2539019	CallExpression	parsing_text . c_str ( )		2538986	0					
ANR	2539020	Callee	parsing_text . c_str		2538986	0					
ANR	2539021	MemberAccess	parsing_text . c_str		2538986	0					
ANR	2539022	Identifier	parsing_text		2538986	0					
ANR	2539023	Identifier	c_str		2538986	1					
ANR	2539024	ArgumentList			2538986	1					
ANR	2539025	ExpressionStatement	fclose ( file )	242:1:6642:6654	2538986	4	True				
ANR	2539026	CallExpression	fclose ( file )		2538986	0					
ANR	2539027	Callee	fclose		2538986	0					
ANR	2539028	Identifier	fclose		2538986	0					
ANR	2539029	ArgumentList	file		2538986	1					
ANR	2539030	Argument	file		2538986	0					
ANR	2539031	Identifier	file		2538986	0					
ANR	2539032	ReturnStatement	return ;	244:1:6658:6664	2538986	5	True				
ANR	2539033	ReturnType	static void		2538986	1					
ANR	2539034	Identifier	make_file		2538986	2					
ANR	2539035	ParameterList			2538986	3					
ANR	2539036	CFGEntryNode	ENTRY		2538986		True				
ANR	2539037	CFGExitNode	EXIT		2538986		True				
ANR	2539038	Symbol	fopen		2538986						
ANR	2539039	Symbol	file		2538986						
ANR	2539040	Symbol	parsing_text		2538986						
ANR	2539041	Symbol	parsing_text . c_str		2538986						
ANR	2539042	Function	remove_file	247:0:6669:6745							
ANR	2539043	FunctionDef	remove_file ()		2539042	0					
ANR	2539044	CompoundStatement		248:0:6699:6745	2539042	0					
ANR	2539045	ExpressionStatement	"system ( ""rm -f tmp.classads.tmp"" )"	249:1:6702:6734	2539042	0	True				
ANR	2539046	CallExpression	"system ( ""rm -f tmp.classads.tmp"" )"		2539042	0					
ANR	2539047	Callee	system		2539042	0					
ANR	2539048	Identifier	system		2539042	0					
ANR	2539049	ArgumentList	"""rm -f tmp.classads.tmp"""		2539042	1					
ANR	2539050	Argument	"""rm -f tmp.classads.tmp"""		2539042	0					
ANR	2539051	PrimaryExpression	"""rm -f tmp.classads.tmp"""		2539042	0					
ANR	2539052	ReturnStatement	return ;	250:1:6737:6743	2539042	1	True				
ANR	2539053	ReturnType	static void		2539042	1					
ANR	2539054	Identifier	remove_file		2539042	2					
ANR	2539055	ParameterList			2539042	3					
ANR	2539056	CFGEntryNode	ENTRY		2539042		True				
ANR	2539057	CFGExitNode	EXIT		2539042		True				
ANR	2539058	Function	read_from_file	253:0:6748:7218							
ANR	2539059	FunctionDef	"read_from_file (ClassAd * * classad_a , ClassAd * * classad_b)"		2539058	0					
ANR	2539060	CompoundStatement		254:0:6817:7218	2539058	0					
ANR	2539061	IdentifierDeclStatement	ClassAdParser parser ;	255:1:6820:6840	2539058	0	True				
ANR	2539062	IdentifierDecl	parser		2539058	0					
ANR	2539063	IdentifierDeclType	ClassAdParser		2539058	0					
ANR	2539064	Identifier	parser		2539058	1					
ANR	2539065	IdentifierDeclStatement	ClassAd * classad_c ;	256:1:6843:6861	2539058	1	True				
ANR	2539066	IdentifierDecl	* classad_c		2539058	0					
ANR	2539067	IdentifierDeclType	ClassAd *		2539058	0					
ANR	2539068	Identifier	classad_c		2539058	1					
ANR	2539069	IdentifierDeclStatement	FILE * file ;	257:1:6864:6874	2539058	2	True				
ANR	2539070	IdentifierDecl	* file		2539058	0					
ANR	2539071	IdentifierDeclType	FILE *		2539058	0					
ANR	2539072	Identifier	file		2539058	1					
ANR	2539073	ExpressionStatement	"file = fopen ( ""tmp.classads.tmp"" , ""r"" )"	259:1:6878:6915	2539058	3	True				
ANR	2539074	AssignmentExpression	"file = fopen ( ""tmp.classads.tmp"" , ""r"" )"		2539058	0		=			
ANR	2539075	Identifier	file		2539058	0					
ANR	2539076	CallExpression	"fopen ( ""tmp.classads.tmp"" , ""r"" )"		2539058	1					
ANR	2539077	Callee	fopen		2539058	0					
ANR	2539078	Identifier	fopen		2539058	0					
ANR	2539079	ArgumentList	"""tmp.classads.tmp"""		2539058	1					
ANR	2539080	Argument	"""tmp.classads.tmp"""		2539058	0					
ANR	2539081	PrimaryExpression	"""tmp.classads.tmp"""		2539058	0					
ANR	2539082	Argument	"""r"""		2539058	1					
ANR	2539083	PrimaryExpression	"""r"""		2539058	0					
ANR	2539084	IfStatement	if ( file == NULL )		2539058	4					
ANR	2539085	Condition	file == NULL	260:5:6922:6933	2539058	0	True				
ANR	2539086	EqualityExpression	file == NULL		2539058	0		==			
ANR	2539087	Identifier	file		2539058	0					
ANR	2539088	Identifier	NULL		2539058	1					
ANR	2539089	CompoundStatement		7:19:118:118	2539058	1					
ANR	2539090	ExpressionStatement	"cout << ""Can't open temporary ClassAd file.\\n"""	261:2:6940:6986	2539058	0	True				
ANR	2539091	ShiftExpression	"cout << ""Can't open temporary ClassAd file.\\n"""		2539058	0		<<			
ANR	2539092	Identifier	cout		2539058	0					
ANR	2539093	PrimaryExpression	"""Can't open temporary ClassAd file.\\n"""		2539058	1					
ANR	2539094	ExpressionStatement	exit ( 1 )	262:2:6990:6997	2539058	1	True				
ANR	2539095	CallExpression	exit ( 1 )		2539058	0					
ANR	2539096	Callee	exit		2539058	0					
ANR	2539097	Identifier	exit		2539058	0					
ANR	2539098	ArgumentList	1		2539058	1					
ANR	2539099	Argument	1		2539058	0					
ANR	2539100	PrimaryExpression	1		2539058	0					
ANR	2539101	ExpressionStatement	"cout << ""Reading from FILE.\\n"""	265:1:7004:7034	2539058	5	True				
ANR	2539102	ShiftExpression	"cout << ""Reading from FILE.\\n"""		2539058	0		<<			
ANR	2539103	Identifier	cout		2539058	0					
ANR	2539104	PrimaryExpression	"""Reading from FILE.\\n"""		2539058	1					
ANR	2539105	ExpressionStatement	* classad_a = parser . ParseClassAd ( file )	267:1:7038:7076	2539058	6	True				
ANR	2539106	AssignmentExpression	* classad_a = parser . ParseClassAd ( file )		2539058	0		=			
ANR	2539107	UnaryOperationExpression	* classad_a		2539058	0					
ANR	2539108	UnaryOperator	*		2539058	0					
ANR	2539109	Identifier	classad_a		2539058	1					
ANR	2539110	CallExpression	parser . ParseClassAd ( file )		2539058	1					
ANR	2539111	Callee	parser . ParseClassAd		2539058	0					
ANR	2539112	MemberAccess	parser . ParseClassAd		2539058	0					
ANR	2539113	Identifier	parser		2539058	0					
ANR	2539114	Identifier	ParseClassAd		2539058	1					
ANR	2539115	ArgumentList	file		2539058	1					
ANR	2539116	Argument	file		2539058	0					
ANR	2539117	Identifier	file		2539058	0					
ANR	2539118	ExpressionStatement	* classad_b = parser . ParseClassAd ( file )	268:1:7079:7117	2539058	7	True				
ANR	2539119	AssignmentExpression	* classad_b = parser . ParseClassAd ( file )		2539058	0		=			
ANR	2539120	UnaryOperationExpression	* classad_b		2539058	0					
ANR	2539121	UnaryOperator	*		2539058	0					
ANR	2539122	Identifier	classad_b		2539058	1					
ANR	2539123	CallExpression	parser . ParseClassAd ( file )		2539058	1					
ANR	2539124	Callee	parser . ParseClassAd		2539058	0					
ANR	2539125	MemberAccess	parser . ParseClassAd		2539058	0					
ANR	2539126	Identifier	parser		2539058	0					
ANR	2539127	Identifier	ParseClassAd		2539058	1					
ANR	2539128	ArgumentList	file		2539058	1					
ANR	2539129	Argument	file		2539058	0					
ANR	2539130	Identifier	file		2539058	0					
ANR	2539131	ExpressionStatement	classad_c = parser . ParseClassAd ( file )	269:1:7120:7157	2539058	8	True				
ANR	2539132	AssignmentExpression	classad_c = parser . ParseClassAd ( file )		2539058	0		=			
ANR	2539133	Identifier	classad_c		2539058	0					
ANR	2539134	CallExpression	parser . ParseClassAd ( file )		2539058	1					
ANR	2539135	Callee	parser . ParseClassAd		2539058	0					
ANR	2539136	MemberAccess	parser . ParseClassAd		2539058	0					
ANR	2539137	Identifier	parser		2539058	0					
ANR	2539138	Identifier	ParseClassAd		2539058	1					
ANR	2539139	ArgumentList	file		2539058	1					
ANR	2539140	Argument	file		2539058	0					
ANR	2539141	Identifier	file		2539058	0					
ANR	2539142	ExpressionStatement	"check_parse ( * classad_a , * classad_b , classad_c )"	271:1:7161:7207	2539058	9	True				
ANR	2539143	CallExpression	"check_parse ( * classad_a , * classad_b , classad_c )"		2539058	0					
ANR	2539144	Callee	check_parse		2539058	0					
ANR	2539145	Identifier	check_parse		2539058	0					
ANR	2539146	ArgumentList	* classad_a		2539058	1					
ANR	2539147	Argument	* classad_a		2539058	0					
ANR	2539148	UnaryOperationExpression	* classad_a		2539058	0					
ANR	2539149	UnaryOperator	*		2539058	0					
ANR	2539150	Identifier	classad_a		2539058	1					
ANR	2539151	Argument	* classad_b		2539058	1					
ANR	2539152	UnaryOperationExpression	* classad_b		2539058	0					
ANR	2539153	UnaryOperator	*		2539058	0					
ANR	2539154	Identifier	classad_b		2539058	1					
ANR	2539155	Argument	classad_c		2539058	2					
ANR	2539156	Identifier	classad_c		2539058	0					
ANR	2539157	ReturnStatement	return ;	272:1:7210:7216	2539058	10	True				
ANR	2539158	ReturnType	static void		2539058	1					
ANR	2539159	Identifier	read_from_file		2539058	2					
ANR	2539160	ParameterList	"ClassAd * * classad_a , ClassAd * * classad_b"		2539058	3					
ANR	2539161	Parameter	ClassAd * * classad_a	253:27:6775:6793	2539058	0	True				
ANR	2539162	ParameterType	ClassAd * *		2539058	0					
ANR	2539163	Identifier	classad_a		2539058	1					
ANR	2539164	Parameter	ClassAd * * classad_b	253:48:6796:6814	2539058	1	True				
ANR	2539165	ParameterType	ClassAd * *		2539058	0					
ANR	2539166	Identifier	classad_b		2539058	1					
ANR	2539167	CFGEntryNode	ENTRY		2539058		True				
ANR	2539168	CFGExitNode	EXIT		2539058		True				
ANR	2539169	Symbol	fopen		2539058						
ANR	2539170	Symbol	* classad_a		2539058						
ANR	2539171	Symbol	file		2539058						
ANR	2539172	Symbol	NULL		2539058						
ANR	2539173	Symbol	parser		2539058						
ANR	2539174	Symbol	classad_a		2539058						
ANR	2539175	Symbol	* classad_b		2539058						
ANR	2539176	Symbol	classad_c		2539058						
ANR	2539177	Symbol	parser . ParseClassAd		2539058						
ANR	2539178	Symbol	classad_b		2539058						
ANR	2539179	Function	read_from_file_alt	275:0:7221:7838							
ANR	2539180	FunctionDef	"read_from_file_alt (ClassAd * * classad_a , ClassAd * * classad_b)"		2539179	0					
ANR	2539181	CompoundStatement		276:0:7294:7838	2539179	0					
ANR	2539182	IdentifierDeclStatement	ClassAdParser parser ;	277:1:7297:7317	2539179	0	True				
ANR	2539183	IdentifierDecl	parser		2539179	0					
ANR	2539184	IdentifierDeclType	ClassAdParser		2539179	0					
ANR	2539185	Identifier	parser		2539179	1					
ANR	2539186	IdentifierDeclStatement	ClassAd * classad_c ;	278:1:7320:7338	2539179	1	True				
ANR	2539187	IdentifierDecl	* classad_c		2539179	0					
ANR	2539188	IdentifierDeclType	ClassAd *		2539179	0					
ANR	2539189	Identifier	classad_c		2539179	1					
ANR	2539190	IdentifierDeclStatement	FILE * file ;	279:1:7341:7351	2539179	2	True				
ANR	2539191	IdentifierDecl	* file		2539179	0					
ANR	2539192	IdentifierDeclType	FILE *		2539179	0					
ANR	2539193	Identifier	file		2539179	1					
ANR	2539194	ExpressionStatement	"file = fopen ( ""tmp.classads.tmp"" , ""r"" )"	281:1:7355:7392	2539179	3	True				
ANR	2539195	AssignmentExpression	"file = fopen ( ""tmp.classads.tmp"" , ""r"" )"		2539179	0		=			
ANR	2539196	Identifier	file		2539179	0					
ANR	2539197	CallExpression	"fopen ( ""tmp.classads.tmp"" , ""r"" )"		2539179	1					
ANR	2539198	Callee	fopen		2539179	0					
ANR	2539199	Identifier	fopen		2539179	0					
ANR	2539200	ArgumentList	"""tmp.classads.tmp"""		2539179	1					
ANR	2539201	Argument	"""tmp.classads.tmp"""		2539179	0					
ANR	2539202	PrimaryExpression	"""tmp.classads.tmp"""		2539179	0					
ANR	2539203	Argument	"""r"""		2539179	1					
ANR	2539204	PrimaryExpression	"""r"""		2539179	0					
ANR	2539205	IfStatement	if ( file == NULL )		2539179	4					
ANR	2539206	Condition	file == NULL	282:5:7399:7410	2539179	0	True				
ANR	2539207	EqualityExpression	file == NULL		2539179	0		==			
ANR	2539208	Identifier	file		2539179	0					
ANR	2539209	Identifier	NULL		2539179	1					
ANR	2539210	CompoundStatement		7:19:118:118	2539179	1					
ANR	2539211	ExpressionStatement	"cout << ""Can't open temporary ClassAd file.\\n"""	283:2:7417:7463	2539179	0	True				
ANR	2539212	ShiftExpression	"cout << ""Can't open temporary ClassAd file.\\n"""		2539179	0		<<			
ANR	2539213	Identifier	cout		2539179	0					
ANR	2539214	PrimaryExpression	"""Can't open temporary ClassAd file.\\n"""		2539179	1					
ANR	2539215	ExpressionStatement	exit ( 1 )	284:2:7467:7474	2539179	1	True				
ANR	2539216	CallExpression	exit ( 1 )		2539179	0					
ANR	2539217	Callee	exit		2539179	0					
ANR	2539218	Identifier	exit		2539179	0					
ANR	2539219	ArgumentList	1		2539179	1					
ANR	2539220	Argument	1		2539179	0					
ANR	2539221	PrimaryExpression	1		2539179	0					
ANR	2539222	ExpressionStatement	"cout << ""Reading from FILE (alt parse).\\n"""	287:1:7481:7523	2539179	5	True				
ANR	2539223	ShiftExpression	"cout << ""Reading from FILE (alt parse).\\n"""		2539179	0		<<			
ANR	2539224	Identifier	cout		2539179	0					
ANR	2539225	PrimaryExpression	"""Reading from FILE (alt parse).\\n"""		2539179	1					
ANR	2539226	Statement	*	289:1:7527:7527	2539179	6	True				
ANR	2539227	Statement	classad_a	289:2:7528:7536	2539179	7	True				
ANR	2539228	Statement	=	289:12:7538:7538	2539179	8	True				
ANR	2539229	Statement	new	289:14:7540:7542	2539179	9	True				
ANR	2539230	ExpressionStatement	ClassAd	289:18:7544:7551	2539179	10	True				
ANR	2539231	Identifier	ClassAd		2539179	0					
ANR	2539232	Statement	*	290:1:7554:7554	2539179	11	True				
ANR	2539233	Statement	classad_b	290:2:7555:7563	2539179	12	True				
ANR	2539234	Statement	=	290:12:7565:7565	2539179	13	True				
ANR	2539235	Statement	new	290:14:7567:7569	2539179	14	True				
ANR	2539236	ExpressionStatement	ClassAd	290:18:7571:7578	2539179	15	True				
ANR	2539237	Identifier	ClassAd		2539179	0					
ANR	2539238	Statement	classad_c	291:1:7581:7589	2539179	16	True				
ANR	2539239	Statement	=	291:12:7592:7592	2539179	17	True				
ANR	2539240	Statement	new	291:14:7594:7596	2539179	18	True				
ANR	2539241	ExpressionStatement	ClassAd	291:18:7598:7605	2539179	19	True				
ANR	2539242	Identifier	ClassAd		2539179	0					
ANR	2539243	ExpressionStatement	"parser . ParseClassAd ( file , * * classad_a )"	292:1:7608:7646	2539179	20	True				
ANR	2539244	CallExpression	"parser . ParseClassAd ( file , * * classad_a )"		2539179	0					
ANR	2539245	Callee	parser . ParseClassAd		2539179	0					
ANR	2539246	MemberAccess	parser . ParseClassAd		2539179	0					
ANR	2539247	Identifier	parser		2539179	0					
ANR	2539248	Identifier	ParseClassAd		2539179	1					
ANR	2539249	ArgumentList	file		2539179	1					
ANR	2539250	Argument	file		2539179	0					
ANR	2539251	Identifier	file		2539179	0					
ANR	2539252	Argument	* * classad_a		2539179	1					
ANR	2539253	UnaryOperationExpression	* * classad_a		2539179	0					
ANR	2539254	UnaryOperator	*		2539179	0					
ANR	2539255	UnaryOperationExpression	* classad_a		2539179	1					
ANR	2539256	UnaryOperator	*		2539179	0					
ANR	2539257	Identifier	classad_a		2539179	1					
ANR	2539258	ExpressionStatement	"parser . ParseClassAd ( file , * * classad_b )"	293:1:7649:7687	2539179	21	True				
ANR	2539259	CallExpression	"parser . ParseClassAd ( file , * * classad_b )"		2539179	0					
ANR	2539260	Callee	parser . ParseClassAd		2539179	0					
ANR	2539261	MemberAccess	parser . ParseClassAd		2539179	0					
ANR	2539262	Identifier	parser		2539179	0					
ANR	2539263	Identifier	ParseClassAd		2539179	1					
ANR	2539264	ArgumentList	file		2539179	1					
ANR	2539265	Argument	file		2539179	0					
ANR	2539266	Identifier	file		2539179	0					
ANR	2539267	Argument	* * classad_b		2539179	1					
ANR	2539268	UnaryOperationExpression	* * classad_b		2539179	0					
ANR	2539269	UnaryOperator	*		2539179	0					
ANR	2539270	UnaryOperationExpression	* classad_b		2539179	1					
ANR	2539271	UnaryOperator	*		2539179	0					
ANR	2539272	Identifier	classad_b		2539179	1					
ANR	2539273	IfStatement	"if ( ! parser . ParseClassAd ( file , * classad_c ) )"		2539179	22					
ANR	2539274	Condition	"! parser . ParseClassAd ( file , * classad_c )"	294:5:7694:7731	2539179	0	True				
ANR	2539275	UnaryOperationExpression	"! parser . ParseClassAd ( file , * classad_c )"		2539179	0					
ANR	2539276	UnaryOperator	!		2539179	0					
ANR	2539277	CallExpression	"parser . ParseClassAd ( file , * classad_c )"		2539179	1					
ANR	2539278	Callee	parser . ParseClassAd		2539179	0					
ANR	2539279	MemberAccess	parser . ParseClassAd		2539179	0					
ANR	2539280	Identifier	parser		2539179	0					
ANR	2539281	Identifier	ParseClassAd		2539179	1					
ANR	2539282	ArgumentList	file		2539179	1					
ANR	2539283	Argument	file		2539179	0					
ANR	2539284	Identifier	file		2539179	0					
ANR	2539285	Argument	* classad_c		2539179	1					
ANR	2539286	UnaryOperationExpression	* classad_c		2539179	0					
ANR	2539287	UnaryOperator	*		2539179	0					
ANR	2539288	Identifier	classad_c		2539179	1					
ANR	2539289	CompoundStatement		19:45:439:439	2539179	1					
ANR	2539290	Statement	delete	295:2:7738:7743	2539179	0	True				
ANR	2539291	ExpressionStatement	classad_c	295:9:7745:7754	2539179	1	True				
ANR	2539292	Identifier	classad_c		2539179	0					
ANR	2539293	ExpressionStatement	classad_c = NULL	296:2:7758:7774	2539179	2	True				
ANR	2539294	AssignmentExpression	classad_c = NULL		2539179	0		=			
ANR	2539295	Identifier	classad_c		2539179	0					
ANR	2539296	Identifier	NULL		2539179	1					
ANR	2539297	ExpressionStatement	"check_parse ( * classad_a , * classad_b , classad_c )"	299:1:7781:7827	2539179	23	True				
ANR	2539298	CallExpression	"check_parse ( * classad_a , * classad_b , classad_c )"		2539179	0					
ANR	2539299	Callee	check_parse		2539179	0					
ANR	2539300	Identifier	check_parse		2539179	0					
ANR	2539301	ArgumentList	* classad_a		2539179	1					
ANR	2539302	Argument	* classad_a		2539179	0					
ANR	2539303	UnaryOperationExpression	* classad_a		2539179	0					
ANR	2539304	UnaryOperator	*		2539179	0					
ANR	2539305	Identifier	classad_a		2539179	1					
ANR	2539306	Argument	* classad_b		2539179	1					
ANR	2539307	UnaryOperationExpression	* classad_b		2539179	0					
ANR	2539308	UnaryOperator	*		2539179	0					
ANR	2539309	Identifier	classad_b		2539179	1					
ANR	2539310	Argument	classad_c		2539179	2					
ANR	2539311	Identifier	classad_c		2539179	0					
ANR	2539312	ReturnStatement	return ;	300:1:7830:7836	2539179	24	True				
ANR	2539313	ReturnType	static void		2539179	1					
ANR	2539314	Identifier	read_from_file_alt		2539179	2					
ANR	2539315	ParameterList	"ClassAd * * classad_a , ClassAd * * classad_b"		2539179	3					
ANR	2539316	Parameter	ClassAd * * classad_a	275:31:7252:7270	2539179	0	True				
ANR	2539317	ParameterType	ClassAd * *		2539179	0					
ANR	2539318	Identifier	classad_a		2539179	1					
ANR	2539319	Parameter	ClassAd * * classad_b	275:52:7273:7291	2539179	1	True				
ANR	2539320	ParameterType	ClassAd * *		2539179	0					
ANR	2539321	Identifier	classad_b		2539179	1					
ANR	2539322	CFGEntryNode	ENTRY		2539179		True				
ANR	2539323	CFGExitNode	EXIT		2539179		True				
ANR	2539324	Symbol	fopen		2539179						
ANR	2539325	Symbol	* classad_a		2539179						
ANR	2539326	Symbol	NULL		2539179						
ANR	2539327	Symbol	* * classad_a		2539179						
ANR	2539328	Symbol	* * classad_b		2539179						
ANR	2539329	Symbol	classad_a		2539179						
ANR	2539330	Symbol	* classad_c		2539179						
ANR	2539331	Symbol	* classad_b		2539179						
ANR	2539332	Symbol	classad_c		2539179						
ANR	2539333	Symbol	parser . ParseClassAd		2539179						
ANR	2539334	Symbol	classad_b		2539179						
ANR	2539335	Symbol	file		2539179						
ANR	2539336	Symbol	parser		2539179						
ANR	2539337	Function	read_from_stream	303:0:7841:8303							
ANR	2539338	FunctionDef	"read_from_stream (ClassAd * * classad_a , ClassAd * * classad_b)"		2539337	0					
ANR	2539339	CompoundStatement		304:0:7912:8303	2539337	0					
ANR	2539340	IdentifierDeclStatement	ClassAdParser parser ;	305:1:7915:7935	2539337	0	True				
ANR	2539341	IdentifierDecl	parser		2539337	0					
ANR	2539342	IdentifierDeclType	ClassAdParser		2539337	0					
ANR	2539343	Identifier	parser		2539337	1					
ANR	2539344	IdentifierDeclStatement	ClassAd * classad_c ;	306:1:7938:7956	2539337	1	True				
ANR	2539345	IdentifierDecl	* classad_c		2539337	0					
ANR	2539346	IdentifierDeclType	ClassAd *		2539337	0					
ANR	2539347	Identifier	classad_c		2539337	1					
ANR	2539348	IdentifierDeclStatement	"ifstream stream ( ""tmp.classads.tmp"" ) ;"	308:1:7960:7995	2539337	2	True				
ANR	2539349	IdentifierDecl	"stream ( ""tmp.classads.tmp"" )"		2539337	0					
ANR	2539350	IdentifierDeclType	ifstream		2539337	0					
ANR	2539351	Identifier	stream		2539337	1					
ANR	2539352	PrimaryExpression	"""tmp.classads.tmp"""		2539337	2					
ANR	2539353	IfStatement	if ( ! stream )		2539337	3					
ANR	2539354	Condition	! stream	309:5:8002:8008	2539337	0	True				
ANR	2539355	UnaryOperationExpression	! stream		2539337	0					
ANR	2539356	UnaryOperator	!		2539337	0					
ANR	2539357	Identifier	stream		2539337	1					
ANR	2539358	CompoundStatement		6:14:98:98	2539337	1					
ANR	2539359	ExpressionStatement	"cout << ""Can't open temporary ClassAd file.\\n"""	310:2:8015:8061	2539337	0	True				
ANR	2539360	ShiftExpression	"cout << ""Can't open temporary ClassAd file.\\n"""		2539337	0		<<			
ANR	2539361	Identifier	cout		2539337	0					
ANR	2539362	PrimaryExpression	"""Can't open temporary ClassAd file.\\n"""		2539337	1					
ANR	2539363	ExpressionStatement	exit ( 1 )	311:2:8065:8072	2539337	1	True				
ANR	2539364	CallExpression	exit ( 1 )		2539337	0					
ANR	2539365	Callee	exit		2539337	0					
ANR	2539366	Identifier	exit		2539337	0					
ANR	2539367	ArgumentList	1		2539337	1					
ANR	2539368	Argument	1		2539337	0					
ANR	2539369	PrimaryExpression	1		2539337	0					
ANR	2539370	ExpressionStatement	"cout << ""Reading from ifstream.\\n"""	314:1:8079:8113	2539337	4	True				
ANR	2539371	ShiftExpression	"cout << ""Reading from ifstream.\\n"""		2539337	0		<<			
ANR	2539372	Identifier	cout		2539337	0					
ANR	2539373	PrimaryExpression	"""Reading from ifstream.\\n"""		2539337	1					
ANR	2539374	ExpressionStatement	* classad_a = parser . ParseClassAd ( stream )	316:1:8117:8157	2539337	5	True				
ANR	2539375	AssignmentExpression	* classad_a = parser . ParseClassAd ( stream )		2539337	0		=			
ANR	2539376	UnaryOperationExpression	* classad_a		2539337	0					
ANR	2539377	UnaryOperator	*		2539337	0					
ANR	2539378	Identifier	classad_a		2539337	1					
ANR	2539379	CallExpression	parser . ParseClassAd ( stream )		2539337	1					
ANR	2539380	Callee	parser . ParseClassAd		2539337	0					
ANR	2539381	MemberAccess	parser . ParseClassAd		2539337	0					
ANR	2539382	Identifier	parser		2539337	0					
ANR	2539383	Identifier	ParseClassAd		2539337	1					
ANR	2539384	ArgumentList	stream		2539337	1					
ANR	2539385	Argument	stream		2539337	0					
ANR	2539386	Identifier	stream		2539337	0					
ANR	2539387	ExpressionStatement	* classad_b = parser . ParseClassAd ( stream )	317:1:8160:8200	2539337	6	True				
ANR	2539388	AssignmentExpression	* classad_b = parser . ParseClassAd ( stream )		2539337	0		=			
ANR	2539389	UnaryOperationExpression	* classad_b		2539337	0					
ANR	2539390	UnaryOperator	*		2539337	0					
ANR	2539391	Identifier	classad_b		2539337	1					
ANR	2539392	CallExpression	parser . ParseClassAd ( stream )		2539337	1					
ANR	2539393	Callee	parser . ParseClassAd		2539337	0					
ANR	2539394	MemberAccess	parser . ParseClassAd		2539337	0					
ANR	2539395	Identifier	parser		2539337	0					
ANR	2539396	Identifier	ParseClassAd		2539337	1					
ANR	2539397	ArgumentList	stream		2539337	1					
ANR	2539398	Argument	stream		2539337	0					
ANR	2539399	Identifier	stream		2539337	0					
ANR	2539400	ExpressionStatement	classad_c = parser . ParseClassAd ( stream )	318:1:8203:8242	2539337	7	True				
ANR	2539401	AssignmentExpression	classad_c = parser . ParseClassAd ( stream )		2539337	0		=			
ANR	2539402	Identifier	classad_c		2539337	0					
ANR	2539403	CallExpression	parser . ParseClassAd ( stream )		2539337	1					
ANR	2539404	Callee	parser . ParseClassAd		2539337	0					
ANR	2539405	MemberAccess	parser . ParseClassAd		2539337	0					
ANR	2539406	Identifier	parser		2539337	0					
ANR	2539407	Identifier	ParseClassAd		2539337	1					
ANR	2539408	ArgumentList	stream		2539337	1					
ANR	2539409	Argument	stream		2539337	0					
ANR	2539410	Identifier	stream		2539337	0					
ANR	2539411	ExpressionStatement	"check_parse ( * classad_a , * classad_b , classad_c )"	320:1:8246:8292	2539337	8	True				
ANR	2539412	CallExpression	"check_parse ( * classad_a , * classad_b , classad_c )"		2539337	0					
ANR	2539413	Callee	check_parse		2539337	0					
ANR	2539414	Identifier	check_parse		2539337	0					
ANR	2539415	ArgumentList	* classad_a		2539337	1					
ANR	2539416	Argument	* classad_a		2539337	0					
ANR	2539417	UnaryOperationExpression	* classad_a		2539337	0					
ANR	2539418	UnaryOperator	*		2539337	0					
ANR	2539419	Identifier	classad_a		2539337	1					
ANR	2539420	Argument	* classad_b		2539337	1					
ANR	2539421	UnaryOperationExpression	* classad_b		2539337	0					
ANR	2539422	UnaryOperator	*		2539337	0					
ANR	2539423	Identifier	classad_b		2539337	1					
ANR	2539424	Argument	classad_c		2539337	2					
ANR	2539425	Identifier	classad_c		2539337	0					
ANR	2539426	ReturnStatement	return ;	321:1:8295:8301	2539337	9	True				
ANR	2539427	ReturnType	static void		2539337	1					
ANR	2539428	Identifier	read_from_stream		2539337	2					
ANR	2539429	ParameterList	"ClassAd * * classad_a , ClassAd * * classad_b"		2539337	3					
ANR	2539430	Parameter	ClassAd * * classad_a	303:29:7870:7888	2539337	0	True				
ANR	2539431	ParameterType	ClassAd * *		2539337	0					
ANR	2539432	Identifier	classad_a		2539337	1					
ANR	2539433	Parameter	ClassAd * * classad_b	303:50:7891:7909	2539337	1	True				
ANR	2539434	ParameterType	ClassAd * *		2539337	0					
ANR	2539435	Identifier	classad_b		2539337	1					
ANR	2539436	CFGEntryNode	ENTRY		2539337		True				
ANR	2539437	CFGExitNode	EXIT		2539337		True				
ANR	2539438	Symbol	* classad_a		2539337						
ANR	2539439	Symbol	parser		2539337						
ANR	2539440	Symbol	stream		2539337						
ANR	2539441	Symbol	classad_a		2539337						
ANR	2539442	Symbol	* classad_b		2539337						
ANR	2539443	Symbol	classad_c		2539337						
ANR	2539444	Symbol	parser . ParseClassAd		2539337						
ANR	2539445	Symbol	classad_b		2539337						
ANR	2539446	Function	read_from_stream_alt	324:0:8306:8915							
ANR	2539447	FunctionDef	"read_from_stream_alt (ClassAd * * classad_a , ClassAd * * classad_b)"		2539446	0					
ANR	2539448	CompoundStatement		325:0:8381:8915	2539446	0					
ANR	2539449	IdentifierDeclStatement	ClassAdParser parser ;	326:1:8384:8404	2539446	0	True				
ANR	2539450	IdentifierDecl	parser		2539446	0					
ANR	2539451	IdentifierDeclType	ClassAdParser		2539446	0					
ANR	2539452	Identifier	parser		2539446	1					
ANR	2539453	IdentifierDeclStatement	ClassAd * classad_c ;	327:1:8407:8425	2539446	1	True				
ANR	2539454	IdentifierDecl	* classad_c		2539446	0					
ANR	2539455	IdentifierDeclType	ClassAd *		2539446	0					
ANR	2539456	Identifier	classad_c		2539446	1					
ANR	2539457	IdentifierDeclStatement	"ifstream stream ( ""tmp.classads.tmp"" ) ;"	329:1:8429:8464	2539446	2	True				
ANR	2539458	IdentifierDecl	"stream ( ""tmp.classads.tmp"" )"		2539446	0					
ANR	2539459	IdentifierDeclType	ifstream		2539446	0					
ANR	2539460	Identifier	stream		2539446	1					
ANR	2539461	PrimaryExpression	"""tmp.classads.tmp"""		2539446	2					
ANR	2539462	IfStatement	if ( ! stream )		2539446	3					
ANR	2539463	Condition	! stream	330:5:8471:8477	2539446	0	True				
ANR	2539464	UnaryOperationExpression	! stream		2539446	0					
ANR	2539465	UnaryOperator	!		2539446	0					
ANR	2539466	Identifier	stream		2539446	1					
ANR	2539467	CompoundStatement		6:14:98:98	2539446	1					
ANR	2539468	ExpressionStatement	"cout << ""Can't open temporary ClassAd file.\\n"""	331:2:8484:8530	2539446	0	True				
ANR	2539469	ShiftExpression	"cout << ""Can't open temporary ClassAd file.\\n"""		2539446	0		<<			
ANR	2539470	Identifier	cout		2539446	0					
ANR	2539471	PrimaryExpression	"""Can't open temporary ClassAd file.\\n"""		2539446	1					
ANR	2539472	ExpressionStatement	exit ( 1 )	332:2:8534:8541	2539446	1	True				
ANR	2539473	CallExpression	exit ( 1 )		2539446	0					
ANR	2539474	Callee	exit		2539446	0					
ANR	2539475	Identifier	exit		2539446	0					
ANR	2539476	ArgumentList	1		2539446	1					
ANR	2539477	Argument	1		2539446	0					
ANR	2539478	PrimaryExpression	1		2539446	0					
ANR	2539479	ExpressionStatement	"cout << ""Reading from ifstream (alt parse).\\n"""	335:1:8548:8594	2539446	4	True				
ANR	2539480	ShiftExpression	"cout << ""Reading from ifstream (alt parse).\\n"""		2539446	0		<<			
ANR	2539481	Identifier	cout		2539446	0					
ANR	2539482	PrimaryExpression	"""Reading from ifstream (alt parse).\\n"""		2539446	1					
ANR	2539483	Statement	*	337:1:8598:8598	2539446	5	True				
ANR	2539484	Statement	classad_a	337:2:8599:8607	2539446	6	True				
ANR	2539485	Statement	=	337:12:8609:8609	2539446	7	True				
ANR	2539486	Statement	new	337:14:8611:8613	2539446	8	True				
ANR	2539487	ExpressionStatement	ClassAd	337:18:8615:8622	2539446	9	True				
ANR	2539488	Identifier	ClassAd		2539446	0					
ANR	2539489	Statement	*	338:1:8625:8625	2539446	10	True				
ANR	2539490	Statement	classad_b	338:2:8626:8634	2539446	11	True				
ANR	2539491	Statement	=	338:12:8636:8636	2539446	12	True				
ANR	2539492	Statement	new	338:14:8638:8640	2539446	13	True				
ANR	2539493	ExpressionStatement	ClassAd	338:18:8642:8649	2539446	14	True				
ANR	2539494	Identifier	ClassAd		2539446	0					
ANR	2539495	Statement	classad_c	339:1:8652:8660	2539446	15	True				
ANR	2539496	Statement	=	339:12:8663:8663	2539446	16	True				
ANR	2539497	Statement	new	339:14:8665:8667	2539446	17	True				
ANR	2539498	ExpressionStatement	ClassAd	339:18:8669:8676	2539446	18	True				
ANR	2539499	Identifier	ClassAd		2539446	0					
ANR	2539500	ExpressionStatement	"parser . ParseClassAd ( stream , * * classad_a )"	340:1:8679:8719	2539446	19	True				
ANR	2539501	CallExpression	"parser . ParseClassAd ( stream , * * classad_a )"		2539446	0					
ANR	2539502	Callee	parser . ParseClassAd		2539446	0					
ANR	2539503	MemberAccess	parser . ParseClassAd		2539446	0					
ANR	2539504	Identifier	parser		2539446	0					
ANR	2539505	Identifier	ParseClassAd		2539446	1					
ANR	2539506	ArgumentList	stream		2539446	1					
ANR	2539507	Argument	stream		2539446	0					
ANR	2539508	Identifier	stream		2539446	0					
ANR	2539509	Argument	* * classad_a		2539446	1					
ANR	2539510	UnaryOperationExpression	* * classad_a		2539446	0					
ANR	2539511	UnaryOperator	*		2539446	0					
ANR	2539512	UnaryOperationExpression	* classad_a		2539446	1					
ANR	2539513	UnaryOperator	*		2539446	0					
ANR	2539514	Identifier	classad_a		2539446	1					
ANR	2539515	ExpressionStatement	"parser . ParseClassAd ( stream , * * classad_b )"	341:1:8722:8762	2539446	20	True				
ANR	2539516	CallExpression	"parser . ParseClassAd ( stream , * * classad_b )"		2539446	0					
ANR	2539517	Callee	parser . ParseClassAd		2539446	0					
ANR	2539518	MemberAccess	parser . ParseClassAd		2539446	0					
ANR	2539519	Identifier	parser		2539446	0					
ANR	2539520	Identifier	ParseClassAd		2539446	1					
ANR	2539521	ArgumentList	stream		2539446	1					
ANR	2539522	Argument	stream		2539446	0					
ANR	2539523	Identifier	stream		2539446	0					
ANR	2539524	Argument	* * classad_b		2539446	1					
ANR	2539525	UnaryOperationExpression	* * classad_b		2539446	0					
ANR	2539526	UnaryOperator	*		2539446	0					
ANR	2539527	UnaryOperationExpression	* classad_b		2539446	1					
ANR	2539528	UnaryOperator	*		2539446	0					
ANR	2539529	Identifier	classad_b		2539446	1					
ANR	2539530	IfStatement	"if ( ! parser . ParseClassAd ( stream , * classad_c ) )"		2539446	21					
ANR	2539531	Condition	"! parser . ParseClassAd ( stream , * classad_c )"	342:5:8769:8808	2539446	0	True				
ANR	2539532	UnaryOperationExpression	"! parser . ParseClassAd ( stream , * classad_c )"		2539446	0					
ANR	2539533	UnaryOperator	!		2539446	0					
ANR	2539534	CallExpression	"parser . ParseClassAd ( stream , * classad_c )"		2539446	1					
ANR	2539535	Callee	parser . ParseClassAd		2539446	0					
ANR	2539536	MemberAccess	parser . ParseClassAd		2539446	0					
ANR	2539537	Identifier	parser		2539446	0					
ANR	2539538	Identifier	ParseClassAd		2539446	1					
ANR	2539539	ArgumentList	stream		2539446	1					
ANR	2539540	Argument	stream		2539446	0					
ANR	2539541	Identifier	stream		2539446	0					
ANR	2539542	Argument	* classad_c		2539446	1					
ANR	2539543	UnaryOperationExpression	* classad_c		2539446	0					
ANR	2539544	UnaryOperator	*		2539446	0					
ANR	2539545	Identifier	classad_c		2539446	1					
ANR	2539546	CompoundStatement		18:47:429:429	2539446	1					
ANR	2539547	Statement	delete	343:2:8815:8820	2539446	0	True				
ANR	2539548	ExpressionStatement	classad_c	343:9:8822:8831	2539446	1	True				
ANR	2539549	Identifier	classad_c		2539446	0					
ANR	2539550	ExpressionStatement	classad_c = NULL	344:2:8835:8851	2539446	2	True				
ANR	2539551	AssignmentExpression	classad_c = NULL		2539446	0		=			
ANR	2539552	Identifier	classad_c		2539446	0					
ANR	2539553	Identifier	NULL		2539446	1					
ANR	2539554	ExpressionStatement	"check_parse ( * classad_a , * classad_b , classad_c )"	347:1:8858:8904	2539446	22	True				
ANR	2539555	CallExpression	"check_parse ( * classad_a , * classad_b , classad_c )"		2539446	0					
ANR	2539556	Callee	check_parse		2539446	0					
ANR	2539557	Identifier	check_parse		2539446	0					
ANR	2539558	ArgumentList	* classad_a		2539446	1					
ANR	2539559	Argument	* classad_a		2539446	0					
ANR	2539560	UnaryOperationExpression	* classad_a		2539446	0					
ANR	2539561	UnaryOperator	*		2539446	0					
ANR	2539562	Identifier	classad_a		2539446	1					
ANR	2539563	Argument	* classad_b		2539446	1					
ANR	2539564	UnaryOperationExpression	* classad_b		2539446	0					
ANR	2539565	UnaryOperator	*		2539446	0					
ANR	2539566	Identifier	classad_b		2539446	1					
ANR	2539567	Argument	classad_c		2539446	2					
ANR	2539568	Identifier	classad_c		2539446	0					
ANR	2539569	ReturnStatement	return ;	348:1:8907:8913	2539446	23	True				
ANR	2539570	ReturnType	static void		2539446	1					
ANR	2539571	Identifier	read_from_stream_alt		2539446	2					
ANR	2539572	ParameterList	"ClassAd * * classad_a , ClassAd * * classad_b"		2539446	3					
ANR	2539573	Parameter	ClassAd * * classad_a	324:33:8339:8357	2539446	0	True				
ANR	2539574	ParameterType	ClassAd * *		2539446	0					
ANR	2539575	Identifier	classad_a		2539446	1					
ANR	2539576	Parameter	ClassAd * * classad_b	324:54:8360:8378	2539446	1	True				
ANR	2539577	ParameterType	ClassAd * *		2539446	0					
ANR	2539578	Identifier	classad_b		2539446	1					
ANR	2539579	CFGEntryNode	ENTRY		2539446		True				
ANR	2539580	CFGExitNode	EXIT		2539446		True				
ANR	2539581	Symbol	* classad_a		2539446						
ANR	2539582	Symbol	NULL		2539446						
ANR	2539583	Symbol	parser		2539446						
ANR	2539584	Symbol	stream		2539446						
ANR	2539585	Symbol	* * classad_a		2539446						
ANR	2539586	Symbol	* * classad_b		2539446						
ANR	2539587	Symbol	classad_a		2539446						
ANR	2539588	Symbol	* classad_c		2539446						
ANR	2539589	Symbol	* classad_b		2539446						
ANR	2539590	Symbol	classad_c		2539446						
ANR	2539591	Symbol	parser . ParseClassAd		2539446						
ANR	2539592	Symbol	classad_b		2539446						
ANR	2539593	Function	check_parse	351:0:8918:9274							
ANR	2539594	FunctionDef	"check_parse (ClassAd * classad_a , ClassAd * classad_b , ClassAd * classad_c)"		2539593	0					
ANR	2539595	CompoundStatement		355:0:9006:9274	2539593	0					
ANR	2539596	IfStatement	if ( classad_a == NULL )		2539593	0					
ANR	2539597	Condition	classad_a == NULL	357:5:9014:9030	2539593	0	True				
ANR	2539598	EqualityExpression	classad_a == NULL		2539593	0		==			
ANR	2539599	Identifier	classad_a		2539593	0					
ANR	2539600	Identifier	NULL		2539593	1					
ANR	2539601	CompoundStatement		3:24:26:26	2539593	1					
ANR	2539602	ExpressionStatement	"cout << ""Couldn't parse first classad!\\n"""	358:2:9037:9078	2539593	0	True				
ANR	2539603	ShiftExpression	"cout << ""Couldn't parse first classad!\\n"""		2539593	0		<<			
ANR	2539604	Identifier	cout		2539593	0					
ANR	2539605	PrimaryExpression	"""Couldn't parse first classad!\\n"""		2539593	1					
ANR	2539606	ExpressionStatement	exit ( 1 )	359:2:9082:9089	2539593	1	True				
ANR	2539607	CallExpression	exit ( 1 )		2539593	0					
ANR	2539608	Callee	exit		2539593	0					
ANR	2539609	Identifier	exit		2539593	0					
ANR	2539610	ArgumentList	1		2539593	1					
ANR	2539611	Argument	1		2539593	0					
ANR	2539612	PrimaryExpression	1		2539593	0					
ANR	2539613	ElseStatement	else		2539593	0					
ANR	2539614	IfStatement	if ( classad_b == NULL )		2539593	0					
ANR	2539615	Condition	classad_b == NULL	360:12:9103:9119	2539593	0	True				
ANR	2539616	EqualityExpression	classad_b == NULL		2539593	0		==			
ANR	2539617	Identifier	classad_b		2539593	0					
ANR	2539618	Identifier	NULL		2539593	1					
ANR	2539619	CompoundStatement		6:31:115:115	2539593	1					
ANR	2539620	ExpressionStatement	"cout << ""Couldn't parse second classad!\\n"""	361:2:9126:9168	2539593	0	True				
ANR	2539621	ShiftExpression	"cout << ""Couldn't parse second classad!\\n"""		2539593	0		<<			
ANR	2539622	Identifier	cout		2539593	0					
ANR	2539623	PrimaryExpression	"""Couldn't parse second classad!\\n"""		2539593	1					
ANR	2539624	ExpressionStatement	exit ( 1 )	362:2:9172:9179	2539593	1	True				
ANR	2539625	CallExpression	exit ( 1 )		2539593	0					
ANR	2539626	Callee	exit		2539593	0					
ANR	2539627	Identifier	exit		2539593	0					
ANR	2539628	ArgumentList	1		2539593	1					
ANR	2539629	Argument	1		2539593	0					
ANR	2539630	PrimaryExpression	1		2539593	0					
ANR	2539631	ElseStatement	else		2539593	0					
ANR	2539632	IfStatement	if ( classad_c != NULL )		2539593	0					
ANR	2539633	Condition	classad_c != NULL	363:12:9193:9209	2539593	0	True				
ANR	2539634	EqualityExpression	classad_c != NULL		2539593	0		!=			
ANR	2539635	Identifier	classad_c		2539593	0					
ANR	2539636	Identifier	NULL		2539593	1					
ANR	2539637	CompoundStatement		9:31:205:205	2539593	1					
ANR	2539638	ExpressionStatement	"cout << ""Parsed third ClassAd?\\n"""	364:2:9216:9249	2539593	0	True				
ANR	2539639	ShiftExpression	"cout << ""Parsed third ClassAd?\\n"""		2539593	0		<<			
ANR	2539640	Identifier	cout		2539593	0					
ANR	2539641	PrimaryExpression	"""Parsed third ClassAd?\\n"""		2539593	1					
ANR	2539642	ExpressionStatement	exit ( 1 )	365:2:9253:9260	2539593	1	True				
ANR	2539643	CallExpression	exit ( 1 )		2539593	0					
ANR	2539644	Callee	exit		2539593	0					
ANR	2539645	Identifier	exit		2539593	0					
ANR	2539646	ArgumentList	1		2539593	1					
ANR	2539647	Argument	1		2539593	0					
ANR	2539648	PrimaryExpression	1		2539593	0					
ANR	2539649	ReturnStatement	return ;	367:1:9266:9272	2539593	1	True				
ANR	2539650	ReturnType	static void		2539593	1					
ANR	2539651	Identifier	check_parse		2539593	2					
ANR	2539652	ParameterList	"ClassAd * classad_a , ClassAd * classad_b , ClassAd * classad_c"		2539593	3					
ANR	2539653	Parameter	ClassAd * classad_a	352:1:8944:8961	2539593	0	True				
ANR	2539654	ParameterType	ClassAd *		2539593	0					
ANR	2539655	Identifier	classad_a		2539593	1					
ANR	2539656	Parameter	ClassAd * classad_b	353:1:8965:8982	2539593	1	True				
ANR	2539657	ParameterType	ClassAd *		2539593	0					
ANR	2539658	Identifier	classad_b		2539593	1					
ANR	2539659	Parameter	ClassAd * classad_c	354:1:8986:9003	2539593	2	True				
ANR	2539660	ParameterType	ClassAd *		2539593	0					
ANR	2539661	Identifier	classad_c		2539593	1					
ANR	2539662	CFGEntryNode	ENTRY		2539593		True				
ANR	2539663	CFGExitNode	EXIT		2539593		True				
ANR	2539664	Symbol	NULL		2539593						
ANR	2539665	Symbol	classad_a		2539593						
ANR	2539666	Symbol	classad_c		2539593						
ANR	2539667	Symbol	classad_b		2539593						
ANR	2539668	Function	check_classad_a	370:0:9277:9801							
ANR	2539669	FunctionDef	check_classad_a (ClassAd * classad)		2539668	0					
ANR	2539670	CompoundStatement		371:0:9323:9801	2539668	0					
ANR	2539671	IdentifierDeclStatement	int a ;	372:1:9326:9334	2539668	0	True				
ANR	2539672	IdentifierDecl	a		2539668	0					
ANR	2539673	IdentifierDeclType	int		2539668	0					
ANR	2539674	Identifier	a		2539668	1					
ANR	2539675	IdentifierDeclStatement	string b ;	373:1:9337:9345	2539668	1	True				
ANR	2539676	IdentifierDecl	b		2539668	0					
ANR	2539677	IdentifierDeclType	string		2539668	0					
ANR	2539678	Identifier	b		2539668	1					
ANR	2539679	IdentifierDeclStatement	bool c ;	374:1:9348:9356	2539668	2	True				
ANR	2539680	IdentifierDecl	c		2539668	0					
ANR	2539681	IdentifierDeclType	bool		2539668	0					
ANR	2539682	Identifier	c		2539668	1					
ANR	2539683	IdentifierDeclStatement	bool success = true ;	375:1:9359:9380	2539668	3	True				
ANR	2539684	IdentifierDecl	success = true		2539668	0					
ANR	2539685	IdentifierDeclType	bool		2539668	0					
ANR	2539686	Identifier	success		2539668	1					
ANR	2539687	AssignmentExpression	success = true		2539668	2		=			
ANR	2539688	Identifier	true		2539668	0					
ANR	2539689	Identifier	true		2539668	1					
ANR	2539690	IfStatement	"if ( ! classad -> EvaluateAttrInt ( ""A"" , a ) || a != 1 )"		2539668	4					
ANR	2539691	Condition	"! classad -> EvaluateAttrInt ( ""A"" , a ) || a != 1"	377:5:9388:9430	2539668	0	True				
ANR	2539692	OrExpression	"! classad -> EvaluateAttrInt ( ""A"" , a ) || a != 1"		2539668	0		||			
ANR	2539693	UnaryOperationExpression	"! classad -> EvaluateAttrInt ( ""A"" , a )"		2539668	0					
ANR	2539694	UnaryOperator	!		2539668	0					
ANR	2539695	CallExpression	"classad -> EvaluateAttrInt ( ""A"" , a )"		2539668	1					
ANR	2539696	Callee	classad -> EvaluateAttrInt		2539668	0					
ANR	2539697	PtrMemberAccess	classad -> EvaluateAttrInt		2539668	0					
ANR	2539698	Identifier	classad		2539668	0					
ANR	2539699	Identifier	EvaluateAttrInt		2539668	1					
ANR	2539700	ArgumentList	"""A"""		2539668	1					
ANR	2539701	Argument	"""A"""		2539668	0					
ANR	2539702	PrimaryExpression	"""A"""		2539668	0					
ANR	2539703	Argument	a		2539668	1					
ANR	2539704	Identifier	a		2539668	0					
ANR	2539705	EqualityExpression	a != 1		2539668	1		!=			
ANR	2539706	Identifier	a		2539668	0					
ANR	2539707	PrimaryExpression	1		2539668	1					
ANR	2539708	CompoundStatement		7:50:109:109	2539668	1					
ANR	2539709	ExpressionStatement	"cout << ""  Failed: A.A is bad.\\n"""	378:2:9437:9470	2539668	0	True				
ANR	2539710	ShiftExpression	"cout << ""  Failed: A.A is bad.\\n"""		2539668	0		<<			
ANR	2539711	Identifier	cout		2539668	0					
ANR	2539712	PrimaryExpression	"""  Failed: A.A is bad.\\n"""		2539668	1					
ANR	2539713	ExpressionStatement	success = false	379:2:9474:9489	2539668	1	True				
ANR	2539714	AssignmentExpression	success = false		2539668	0		=			
ANR	2539715	Identifier	success		2539668	0					
ANR	2539716	Identifier	false		2539668	1					
ANR	2539717	IfStatement	"if ( ! classad -> EvaluateAttrString ( ""B"" , b ) || b != ""blue"" )"		2539668	5					
ANR	2539718	Condition	"! classad -> EvaluateAttrString ( ""B"" , b ) || b != ""blue"""	382:5:9500:9550	2539668	0	True				
ANR	2539719	OrExpression	"! classad -> EvaluateAttrString ( ""B"" , b ) || b != ""blue"""		2539668	0		||			
ANR	2539720	UnaryOperationExpression	"! classad -> EvaluateAttrString ( ""B"" , b )"		2539668	0					
ANR	2539721	UnaryOperator	!		2539668	0					
ANR	2539722	CallExpression	"classad -> EvaluateAttrString ( ""B"" , b )"		2539668	1					
ANR	2539723	Callee	classad -> EvaluateAttrString		2539668	0					
ANR	2539724	PtrMemberAccess	classad -> EvaluateAttrString		2539668	0					
ANR	2539725	Identifier	classad		2539668	0					
ANR	2539726	Identifier	EvaluateAttrString		2539668	1					
ANR	2539727	ArgumentList	"""B"""		2539668	1					
ANR	2539728	Argument	"""B"""		2539668	0					
ANR	2539729	PrimaryExpression	"""B"""		2539668	0					
ANR	2539730	Argument	b		2539668	1					
ANR	2539731	Identifier	b		2539668	0					
ANR	2539732	EqualityExpression	"b != ""blue"""		2539668	1		!=			
ANR	2539733	Identifier	b		2539668	0					
ANR	2539734	PrimaryExpression	"""blue"""		2539668	1					
ANR	2539735	CompoundStatement		12:58:229:229	2539668	1					
ANR	2539736	ExpressionStatement	"cout << ""  Failed: A.B is bad.\\n"""	383:2:9557:9590	2539668	0	True				
ANR	2539737	ShiftExpression	"cout << ""  Failed: A.B is bad.\\n"""		2539668	0		<<			
ANR	2539738	Identifier	cout		2539668	0					
ANR	2539739	PrimaryExpression	"""  Failed: A.B is bad.\\n"""		2539668	1					
ANR	2539740	ExpressionStatement	success = false	384:2:9594:9609	2539668	1	True				
ANR	2539741	AssignmentExpression	success = false		2539668	0		=			
ANR	2539742	Identifier	success		2539668	0					
ANR	2539743	Identifier	false		2539668	1					
ANR	2539744	IfStatement	"if ( ! classad -> EvaluateAttrBool ( ""C"" , c ) || c != true )"		2539668	6					
ANR	2539745	Condition	"! classad -> EvaluateAttrBool ( ""C"" , c ) || c != true"	387:5:9620:9666	2539668	0	True				
ANR	2539746	OrExpression	"! classad -> EvaluateAttrBool ( ""C"" , c ) || c != true"		2539668	0		||			
ANR	2539747	UnaryOperationExpression	"! classad -> EvaluateAttrBool ( ""C"" , c )"		2539668	0					
ANR	2539748	UnaryOperator	!		2539668	0					
ANR	2539749	CallExpression	"classad -> EvaluateAttrBool ( ""C"" , c )"		2539668	1					
ANR	2539750	Callee	classad -> EvaluateAttrBool		2539668	0					
ANR	2539751	PtrMemberAccess	classad -> EvaluateAttrBool		2539668	0					
ANR	2539752	Identifier	classad		2539668	0					
ANR	2539753	Identifier	EvaluateAttrBool		2539668	1					
ANR	2539754	ArgumentList	"""C"""		2539668	1					
ANR	2539755	Argument	"""C"""		2539668	0					
ANR	2539756	PrimaryExpression	"""C"""		2539668	0					
ANR	2539757	Argument	c		2539668	1					
ANR	2539758	Identifier	c		2539668	0					
ANR	2539759	EqualityExpression	c != true		2539668	1		!=			
ANR	2539760	Identifier	c		2539668	0					
ANR	2539761	Identifier	true		2539668	1					
ANR	2539762	CompoundStatement		17:54:345:345	2539668	1					
ANR	2539763	ExpressionStatement	"cout << ""  Failed: A.C is bad.\\n"""	388:2:9673:9706	2539668	0	True				
ANR	2539764	ShiftExpression	"cout << ""  Failed: A.C is bad.\\n"""		2539668	0		<<			
ANR	2539765	Identifier	cout		2539668	0					
ANR	2539766	PrimaryExpression	"""  Failed: A.C is bad.\\n"""		2539668	1					
ANR	2539767	ExpressionStatement	success = false	389:2:9710:9725	2539668	1	True				
ANR	2539768	AssignmentExpression	success = false		2539668	0		=			
ANR	2539769	Identifier	success		2539668	0					
ANR	2539770	Identifier	false		2539668	1					
ANR	2539771	IfStatement	if ( success )		2539668	7					
ANR	2539772	Condition	success	392:5:9739:9745	2539668	0	True				
ANR	2539773	Identifier	success		2539668	0					
ANR	2539774	CompoundStatement		22:14:424:424	2539668	1					
ANR	2539775	ExpressionStatement	"cout << ""  ClassAd A looks good.\\n"""	393:2:9752:9787	2539668	0	True				
ANR	2539776	ShiftExpression	"cout << ""  ClassAd A looks good.\\n"""		2539668	0		<<			
ANR	2539777	Identifier	cout		2539668	0					
ANR	2539778	PrimaryExpression	"""  ClassAd A looks good.\\n"""		2539668	1					
ANR	2539779	ReturnStatement	return ;	395:1:9793:9799	2539668	8	True				
ANR	2539780	ReturnType	static void		2539668	1					
ANR	2539781	Identifier	check_classad_a		2539668	2					
ANR	2539782	ParameterList	ClassAd * classad		2539668	3					
ANR	2539783	Parameter	ClassAd * classad	370:28:9305:9320	2539668	0	True				
ANR	2539784	ParameterType	ClassAd *		2539668	0					
ANR	2539785	Identifier	classad		2539668	1					
ANR	2539786	CFGEntryNode	ENTRY		2539668		True				
ANR	2539787	CFGExitNode	EXIT		2539668		True				
ANR	2539788	Symbol	a		2539668						
ANR	2539789	Symbol	b		2539668						
ANR	2539790	Symbol	c		2539668						
ANR	2539791	Symbol	* classad		2539668						
ANR	2539792	Symbol	success		2539668						
ANR	2539793	Symbol	true		2539668						
ANR	2539794	Symbol	false		2539668						
ANR	2539795	Symbol	classad		2539668						
ANR	2539796	Symbol	classad -> EvaluateAttrInt		2539668						
ANR	2539797	Symbol	classad -> EvaluateAttrString		2539668						
ANR	2539798	Symbol	classad -> EvaluateAttrBool		2539668						
ANR	2539799	Function	check_classad_b	398:0:9804:10347							
ANR	2539800	FunctionDef	check_classad_b (ClassAd * classad)		2539799	0					
ANR	2539801	CompoundStatement		399:0:9850:10347	2539799	0					
ANR	2539802	IdentifierDeclStatement	int aa ;	400:1:9853:9862	2539799	0	True				
ANR	2539803	IdentifierDecl	aa		2539799	0					
ANR	2539804	IdentifierDeclType	int		2539799	0					
ANR	2539805	Identifier	aa		2539799	1					
ANR	2539806	IdentifierDeclStatement	string bb ;	401:1:9865:9874	2539799	1	True				
ANR	2539807	IdentifierDecl	bb		2539799	0					
ANR	2539808	IdentifierDeclType	string		2539799	0					
ANR	2539809	Identifier	bb		2539799	1					
ANR	2539810	IdentifierDeclStatement	bool cc ;	402:1:9877:9886	2539799	2	True				
ANR	2539811	IdentifierDecl	cc		2539799	0					
ANR	2539812	IdentifierDeclType	bool		2539799	0					
ANR	2539813	Identifier	cc		2539799	1					
ANR	2539814	IdentifierDeclStatement	bool success = true ;	403:1:9889:9910	2539799	3	True				
ANR	2539815	IdentifierDecl	success = true		2539799	0					
ANR	2539816	IdentifierDeclType	bool		2539799	0					
ANR	2539817	Identifier	success		2539799	1					
ANR	2539818	AssignmentExpression	success = true		2539799	2		=			
ANR	2539819	Identifier	true		2539799	0					
ANR	2539820	Identifier	true		2539799	1					
ANR	2539821	IfStatement	"if ( ! classad -> EvaluateAttrInt ( ""AA"" , aa ) || aa != 14 )"		2539799	4					
ANR	2539822	Condition	"! classad -> EvaluateAttrInt ( ""AA"" , aa ) || aa != 14"	405:5:9918:9964	2539799	0	True				
ANR	2539823	OrExpression	"! classad -> EvaluateAttrInt ( ""AA"" , aa ) || aa != 14"		2539799	0		||			
ANR	2539824	UnaryOperationExpression	"! classad -> EvaluateAttrInt ( ""AA"" , aa )"		2539799	0					
ANR	2539825	UnaryOperator	!		2539799	0					
ANR	2539826	CallExpression	"classad -> EvaluateAttrInt ( ""AA"" , aa )"		2539799	1					
ANR	2539827	Callee	classad -> EvaluateAttrInt		2539799	0					
ANR	2539828	PtrMemberAccess	classad -> EvaluateAttrInt		2539799	0					
ANR	2539829	Identifier	classad		2539799	0					
ANR	2539830	Identifier	EvaluateAttrInt		2539799	1					
ANR	2539831	ArgumentList	"""AA"""		2539799	1					
ANR	2539832	Argument	"""AA"""		2539799	0					
ANR	2539833	PrimaryExpression	"""AA"""		2539799	0					
ANR	2539834	Argument	aa		2539799	1					
ANR	2539835	Identifier	aa		2539799	0					
ANR	2539836	EqualityExpression	aa != 14		2539799	1		!=			
ANR	2539837	Identifier	aa		2539799	0					
ANR	2539838	PrimaryExpression	14		2539799	1					
ANR	2539839	CompoundStatement		7:54:116:116	2539799	1					
ANR	2539840	ExpressionStatement	"cout << ""  Failed: B.AA is bad.\\n"""	406:2:9971:10005	2539799	0	True				
ANR	2539841	ShiftExpression	"cout << ""  Failed: B.AA is bad.\\n"""		2539799	0		<<			
ANR	2539842	Identifier	cout		2539799	0					
ANR	2539843	PrimaryExpression	"""  Failed: B.AA is bad.\\n"""		2539799	1					
ANR	2539844	ExpressionStatement	success = false	407:2:10009:10024	2539799	1	True				
ANR	2539845	AssignmentExpression	success = false		2539799	0		=			
ANR	2539846	Identifier	success		2539799	0					
ANR	2539847	Identifier	false		2539799	1					
ANR	2539848	IfStatement	"if ( ! classad -> EvaluateAttrString ( ""BB"" , bb ) || bb != ""bonnet"" )"		2539799	5					
ANR	2539849	Condition	"! classad -> EvaluateAttrString ( ""BB"" , bb ) || bb != ""bonnet"""	410:5:10035:10090	2539799	0	True				
ANR	2539850	OrExpression	"! classad -> EvaluateAttrString ( ""BB"" , bb ) || bb != ""bonnet"""		2539799	0		||			
ANR	2539851	UnaryOperationExpression	"! classad -> EvaluateAttrString ( ""BB"" , bb )"		2539799	0					
ANR	2539852	UnaryOperator	!		2539799	0					
ANR	2539853	CallExpression	"classad -> EvaluateAttrString ( ""BB"" , bb )"		2539799	1					
ANR	2539854	Callee	classad -> EvaluateAttrString		2539799	0					
ANR	2539855	PtrMemberAccess	classad -> EvaluateAttrString		2539799	0					
ANR	2539856	Identifier	classad		2539799	0					
ANR	2539857	Identifier	EvaluateAttrString		2539799	1					
ANR	2539858	ArgumentList	"""BB"""		2539799	1					
ANR	2539859	Argument	"""BB"""		2539799	0					
ANR	2539860	PrimaryExpression	"""BB"""		2539799	0					
ANR	2539861	Argument	bb		2539799	1					
ANR	2539862	Identifier	bb		2539799	0					
ANR	2539863	EqualityExpression	"bb != ""bonnet"""		2539799	1		!=			
ANR	2539864	Identifier	bb		2539799	0					
ANR	2539865	PrimaryExpression	"""bonnet"""		2539799	1					
ANR	2539866	CompoundStatement		12:63:242:242	2539799	1					
ANR	2539867	ExpressionStatement	"cout << ""  Failed: B.BB is bad.\\n"""	411:2:10097:10131	2539799	0	True				
ANR	2539868	ShiftExpression	"cout << ""  Failed: B.BB is bad.\\n"""		2539799	0		<<			
ANR	2539869	Identifier	cout		2539799	0					
ANR	2539870	PrimaryExpression	"""  Failed: B.BB is bad.\\n"""		2539799	1					
ANR	2539871	ExpressionStatement	success = false	412:2:10135:10150	2539799	1	True				
ANR	2539872	AssignmentExpression	success = false		2539799	0		=			
ANR	2539873	Identifier	success		2539799	0					
ANR	2539874	Identifier	false		2539799	1					
ANR	2539875	IfStatement	"if ( ! classad -> EvaluateAttrBool ( ""CC"" , cc ) || cc != false )"		2539799	6					
ANR	2539876	Condition	"! classad -> EvaluateAttrBool ( ""CC"" , cc ) || cc != false"	415:5:10161:10211	2539799	0	True				
ANR	2539877	OrExpression	"! classad -> EvaluateAttrBool ( ""CC"" , cc ) || cc != false"		2539799	0		||			
ANR	2539878	UnaryOperationExpression	"! classad -> EvaluateAttrBool ( ""CC"" , cc )"		2539799	0					
ANR	2539879	UnaryOperator	!		2539799	0					
ANR	2539880	CallExpression	"classad -> EvaluateAttrBool ( ""CC"" , cc )"		2539799	1					
ANR	2539881	Callee	classad -> EvaluateAttrBool		2539799	0					
ANR	2539882	PtrMemberAccess	classad -> EvaluateAttrBool		2539799	0					
ANR	2539883	Identifier	classad		2539799	0					
ANR	2539884	Identifier	EvaluateAttrBool		2539799	1					
ANR	2539885	ArgumentList	"""CC"""		2539799	1					
ANR	2539886	Argument	"""CC"""		2539799	0					
ANR	2539887	PrimaryExpression	"""CC"""		2539799	0					
ANR	2539888	Argument	cc		2539799	1					
ANR	2539889	Identifier	cc		2539799	0					
ANR	2539890	EqualityExpression	cc != false		2539799	1		!=			
ANR	2539891	Identifier	cc		2539799	0					
ANR	2539892	Identifier	false		2539799	1					
ANR	2539893	CompoundStatement		17:58:363:363	2539799	1					
ANR	2539894	ExpressionStatement	"cout << ""  Failed: B.CC is bad.\\n"""	416:2:10218:10252	2539799	0	True				
ANR	2539895	ShiftExpression	"cout << ""  Failed: B.CC is bad.\\n"""		2539799	0		<<			
ANR	2539896	Identifier	cout		2539799	0					
ANR	2539897	PrimaryExpression	"""  Failed: B.CC is bad.\\n"""		2539799	1					
ANR	2539898	ExpressionStatement	success = false	417:2:10256:10271	2539799	1	True				
ANR	2539899	AssignmentExpression	success = false		2539799	0		=			
ANR	2539900	Identifier	success		2539799	0					
ANR	2539901	Identifier	false		2539799	1					
ANR	2539902	IfStatement	if ( success )		2539799	7					
ANR	2539903	Condition	success	420:5:10285:10291	2539799	0	True				
ANR	2539904	Identifier	success		2539799	0					
ANR	2539905	CompoundStatement		22:14:443:443	2539799	1					
ANR	2539906	ExpressionStatement	"cout << ""  ClassAd B looks good.\\n"""	421:2:10298:10333	2539799	0	True				
ANR	2539907	ShiftExpression	"cout << ""  ClassAd B looks good.\\n"""		2539799	0		<<			
ANR	2539908	Identifier	cout		2539799	0					
ANR	2539909	PrimaryExpression	"""  ClassAd B looks good.\\n"""		2539799	1					
ANR	2539910	ReturnStatement	return ;	423:1:10339:10345	2539799	8	True				
ANR	2539911	ReturnType	static void		2539799	1					
ANR	2539912	Identifier	check_classad_b		2539799	2					
ANR	2539913	ParameterList	ClassAd * classad		2539799	3					
ANR	2539914	Parameter	ClassAd * classad	398:28:9832:9847	2539799	0	True				
ANR	2539915	ParameterType	ClassAd *		2539799	0					
ANR	2539916	Identifier	classad		2539799	1					
ANR	2539917	CFGEntryNode	ENTRY		2539799		True				
ANR	2539918	CFGExitNode	EXIT		2539799		True				
ANR	2539919	Symbol	aa		2539799						
ANR	2539920	Symbol	bb		2539799						
ANR	2539921	Symbol	cc		2539799						
ANR	2539922	Symbol	* classad		2539799						
ANR	2539923	Symbol	success		2539799						
ANR	2539924	Symbol	true		2539799						
ANR	2539925	Symbol	false		2539799						
ANR	2539926	Symbol	classad		2539799						
ANR	2539927	Symbol	classad -> EvaluateAttrInt		2539799						
ANR	2539928	Symbol	classad -> EvaluateAttrString		2539799						
ANR	2539929	Symbol	classad -> EvaluateAttrBool		2539799						
ANR	2539930	Function	test_chaining	426:0:10350:12070							
ANR	2539931	FunctionDef	test_chaining ()		2539930	0					
ANR	2539932	CompoundStatement		427:0:10382:12070	2539930	0					
ANR	2539933	IdentifierDeclStatement	"ClassAd * root , * child ;"	428:1:10385:10406	2539930	0	True				
ANR	2539934	IdentifierDecl	* root		2539930	0					
ANR	2539935	IdentifierDeclType	ClassAd *		2539930	0					
ANR	2539936	Identifier	root		2539930	1					
ANR	2539937	IdentifierDecl	* child		2539930	1					
ANR	2539938	IdentifierDeclType	ClassAd *		2539930	0					
ANR	2539939	Identifier	child		2539930	1					
ANR	2539940	IdentifierDeclStatement	ClassAdParser parser ;	429:1:10409:10430	2539930	1	True				
ANR	2539941	IdentifierDecl	parser		2539930	0					
ANR	2539942	IdentifierDeclType	ClassAdParser		2539930	0					
ANR	2539943	Identifier	parser		2539930	1					
ANR	2539944	ExpressionStatement	root = parser . ParseClassAd ( chaining_root_text )	431:1:10434:10480	2539930	2	True				
ANR	2539945	AssignmentExpression	root = parser . ParseClassAd ( chaining_root_text )		2539930	0		=			
ANR	2539946	Identifier	root		2539930	0					
ANR	2539947	CallExpression	parser . ParseClassAd ( chaining_root_text )		2539930	1					
ANR	2539948	Callee	parser . ParseClassAd		2539930	0					
ANR	2539949	MemberAccess	parser . ParseClassAd		2539930	0					
ANR	2539950	Identifier	parser		2539930	0					
ANR	2539951	Identifier	ParseClassAd		2539930	1					
ANR	2539952	ArgumentList	chaining_root_text		2539930	1					
ANR	2539953	Argument	chaining_root_text		2539930	0					
ANR	2539954	Identifier	chaining_root_text		2539930	0					
ANR	2539955	ExpressionStatement	child = parser . ParseClassAd ( chaining_child_text )	432:1:10483:10531	2539930	3	True				
ANR	2539956	AssignmentExpression	child = parser . ParseClassAd ( chaining_child_text )		2539930	0		=			
ANR	2539957	Identifier	child		2539930	0					
ANR	2539958	CallExpression	parser . ParseClassAd ( chaining_child_text )		2539930	1					
ANR	2539959	Callee	parser . ParseClassAd		2539930	0					
ANR	2539960	MemberAccess	parser . ParseClassAd		2539930	0					
ANR	2539961	Identifier	parser		2539930	0					
ANR	2539962	Identifier	ParseClassAd		2539930	1					
ANR	2539963	ArgumentList	chaining_child_text		2539930	1					
ANR	2539964	Argument	chaining_child_text		2539930	0					
ANR	2539965	Identifier	chaining_child_text		2539930	0					
ANR	2539966	IfStatement	if ( root == NULL )		2539930	4					
ANR	2539967	Condition	root == NULL	434:5:10539:10550	2539930	0	True				
ANR	2539968	EqualityExpression	root == NULL		2539930	0		==			
ANR	2539969	Identifier	root		2539930	0					
ANR	2539970	Identifier	NULL		2539930	1					
ANR	2539971	CompoundStatement		8:19:170:170	2539930	1					
ANR	2539972	ExpressionStatement	"cout << ""Failed: Couldn't parse chaining root.\\n"""	435:2:10557:10606	2539930	0	True				
ANR	2539973	ShiftExpression	"cout << ""Failed: Couldn't parse chaining root.\\n"""		2539930	0		<<			
ANR	2539974	Identifier	cout		2539930	0					
ANR	2539975	PrimaryExpression	"""Failed: Couldn't parse chaining root.\\n"""		2539930	1					
ANR	2539976	ExpressionStatement	exit ( 1 )	436:2:10610:10617	2539930	1	True				
ANR	2539977	CallExpression	exit ( 1 )		2539930	0					
ANR	2539978	Callee	exit		2539930	0					
ANR	2539979	Identifier	exit		2539930	0					
ANR	2539980	ArgumentList	1		2539930	1					
ANR	2539981	Argument	1		2539930	0					
ANR	2539982	PrimaryExpression	1		2539930	0					
ANR	2539983	ElseStatement	else		2539930	0					
ANR	2539984	IfStatement	if ( child == NULL )		2539930	0					
ANR	2539985	Condition	child == NULL	437:12:10631:10643	2539930	0	True				
ANR	2539986	EqualityExpression	child == NULL		2539930	0		==			
ANR	2539987	Identifier	child		2539930	0					
ANR	2539988	Identifier	NULL		2539930	1					
ANR	2539989	CompoundStatement		11:27:263:263	2539930	1					
ANR	2539990	ExpressionStatement	"cout << ""Failed: Couldn't parser chaining child.\\n"""	438:2:10650:10701	2539930	0	True				
ANR	2539991	ShiftExpression	"cout << ""Failed: Couldn't parser chaining child.\\n"""		2539930	0		<<			
ANR	2539992	Identifier	cout		2539930	0					
ANR	2539993	PrimaryExpression	"""Failed: Couldn't parser chaining child.\\n"""		2539930	1					
ANR	2539994	ExpressionStatement	exit ( 1 )	439:2:10705:10712	2539930	1	True				
ANR	2539995	CallExpression	exit ( 1 )		2539930	0					
ANR	2539996	Callee	exit		2539930	0					
ANR	2539997	Identifier	exit		2539930	0					
ANR	2539998	ArgumentList	1		2539930	1					
ANR	2539999	Argument	1		2539930	0					
ANR	2540000	PrimaryExpression	1		2539930	0					
ANR	2540001	ExpressionStatement	"cout << ""\\nTesting chaining...\\n"""	442:1:10720:10753	2539930	5	True				
ANR	2540002	ShiftExpression	"cout << ""\\nTesting chaining...\\n"""		2539930	0		<<			
ANR	2540003	Identifier	cout		2539930	0					
ANR	2540004	PrimaryExpression	"""\\nTesting chaining...\\n"""		2539930	1					
ANR	2540005	ExpressionStatement	child -> ChainToAd ( root )	443:1:10756:10778	2539930	6	True				
ANR	2540006	CallExpression	child -> ChainToAd ( root )		2539930	0					
ANR	2540007	Callee	child -> ChainToAd		2539930	0					
ANR	2540008	PtrMemberAccess	child -> ChainToAd		2539930	0					
ANR	2540009	Identifier	child		2539930	0					
ANR	2540010	Identifier	ChainToAd		2539930	1					
ANR	2540011	ArgumentList	root		2539930	1					
ANR	2540012	Argument	root		2539930	0					
ANR	2540013	Identifier	root		2539930	0					
ANR	2540014	IdentifierDeclStatement	int aa ;	446:1:10821:10827	2539930	7	True				
ANR	2540015	IdentifierDecl	aa		2539930	0					
ANR	2540016	IdentifierDeclType	int		2539930	0					
ANR	2540017	Identifier	aa		2539930	1					
ANR	2540018	IfStatement	"if ( ! child -> EvaluateAttrInt ( ""AA"" , aa ) || aa != 14 )"		2539930	8					
ANR	2540019	Condition	"! child -> EvaluateAttrInt ( ""AA"" , aa ) || aa != 14"	447:5:10834:10878	2539930	0	True				
ANR	2540020	OrExpression	"! child -> EvaluateAttrInt ( ""AA"" , aa ) || aa != 14"		2539930	0		||			
ANR	2540021	UnaryOperationExpression	"! child -> EvaluateAttrInt ( ""AA"" , aa )"		2539930	0					
ANR	2540022	UnaryOperator	!		2539930	0					
ANR	2540023	CallExpression	"child -> EvaluateAttrInt ( ""AA"" , aa )"		2539930	1					
ANR	2540024	Callee	child -> EvaluateAttrInt		2539930	0					
ANR	2540025	PtrMemberAccess	child -> EvaluateAttrInt		2539930	0					
ANR	2540026	Identifier	child		2539930	0					
ANR	2540027	Identifier	EvaluateAttrInt		2539930	1					
ANR	2540028	ArgumentList	"""AA"""		2539930	1					
ANR	2540029	Argument	"""AA"""		2539930	0					
ANR	2540030	PrimaryExpression	"""AA"""		2539930	0					
ANR	2540031	Argument	aa		2539930	1					
ANR	2540032	Identifier	aa		2539930	0					
ANR	2540033	EqualityExpression	aa != 14		2539930	1		!=			
ANR	2540034	Identifier	aa		2539930	0					
ANR	2540035	PrimaryExpression	14		2539930	1					
ANR	2540036	CompoundStatement		21:52:498:498	2539930	1					
ANR	2540037	ExpressionStatement	"cout << ""  Couldn't retrieve AA from chained child.\\n"""	448:2:10885:10939	2539930	0	True				
ANR	2540038	ShiftExpression	"cout << ""  Couldn't retrieve AA from chained child.\\n"""		2539930	0		<<			
ANR	2540039	Identifier	cout		2539930	0					
ANR	2540040	PrimaryExpression	"""  Couldn't retrieve AA from chained child.\\n"""		2539930	1					
ANR	2540041	ElseStatement	else		2539930	0					
ANR	2540042	CompoundStatement		23:8:566:566	2539930	0					
ANR	2540043	ExpressionStatement	"cout << ""  Can look up AA.\\n"""	450:2:10953:10982	2539930	0	True				
ANR	2540044	ShiftExpression	"cout << ""  Can look up AA.\\n"""		2539930	0		<<			
ANR	2540045	Identifier	cout		2539930	0					
ANR	2540046	PrimaryExpression	"""  Can look up AA.\\n"""		2539930	1					
ANR	2540047	IdentifierDeclStatement	int a ;	454:1:11029:11034	2539930	9	True				
ANR	2540048	IdentifierDecl	a		2539930	0					
ANR	2540049	IdentifierDeclType	int		2539930	0					
ANR	2540050	Identifier	a		2539930	1					
ANR	2540051	IfStatement	"if ( ! child -> EvaluateAttrInt ( ""A"" , a ) || a != 1 )"		2539930	10					
ANR	2540052	Condition	"! child -> EvaluateAttrInt ( ""A"" , a ) || a != 1"	455:5:11041:11081	2539930	0	True				
ANR	2540053	OrExpression	"! child -> EvaluateAttrInt ( ""A"" , a ) || a != 1"		2539930	0		||			
ANR	2540054	UnaryOperationExpression	"! child -> EvaluateAttrInt ( ""A"" , a )"		2539930	0					
ANR	2540055	UnaryOperator	!		2539930	0					
ANR	2540056	CallExpression	"child -> EvaluateAttrInt ( ""A"" , a )"		2539930	1					
ANR	2540057	Callee	child -> EvaluateAttrInt		2539930	0					
ANR	2540058	PtrMemberAccess	child -> EvaluateAttrInt		2539930	0					
ANR	2540059	Identifier	child		2539930	0					
ANR	2540060	Identifier	EvaluateAttrInt		2539930	1					
ANR	2540061	ArgumentList	"""A"""		2539930	1					
ANR	2540062	Argument	"""A"""		2539930	0					
ANR	2540063	PrimaryExpression	"""A"""		2539930	0					
ANR	2540064	Argument	a		2539930	1					
ANR	2540065	Identifier	a		2539930	0					
ANR	2540066	EqualityExpression	a != 1		2539930	1		!=			
ANR	2540067	Identifier	a		2539930	0					
ANR	2540068	PrimaryExpression	1		2539930	1					
ANR	2540069	CompoundStatement		29:48:701:701	2539930	1					
ANR	2540070	ExpressionStatement	"cout << ""  Couldn't retrieve A from chained parent.\\n"""	456:2:11088:11142	2539930	0	True				
ANR	2540071	ShiftExpression	"cout << ""  Couldn't retrieve A from chained parent.\\n"""		2539930	0		<<			
ANR	2540072	Identifier	cout		2539930	0					
ANR	2540073	PrimaryExpression	"""  Couldn't retrieve A from chained parent.\\n"""		2539930	1					
ANR	2540074	ElseStatement	else		2539930	0					
ANR	2540075	CompoundStatement		31:8:769:769	2539930	0					
ANR	2540076	ExpressionStatement	"cout << ""  Can look up A from chained parent.\\n"""	458:2:11156:11204	2539930	0	True				
ANR	2540077	ShiftExpression	"cout << ""  Can look up A from chained parent.\\n"""		2539930	0		<<			
ANR	2540078	Identifier	cout		2539930	0					
ANR	2540079	PrimaryExpression	"""  Can look up A from chained parent.\\n"""		2539930	1					
ANR	2540080	IdentifierDeclStatement	string b ;	463:1:11305:11313	2539930	11	True				
ANR	2540081	IdentifierDecl	b		2539930	0					
ANR	2540082	IdentifierDeclType	string		2539930	0					
ANR	2540083	Identifier	b		2539930	1					
ANR	2540084	IfStatement	"if ( ! child -> EvaluateAttrString ( ""B"" , b ) || b != ""bonnet"" )"		2539930	12					
ANR	2540085	Condition	"! child -> EvaluateAttrString ( ""B"" , b ) || b != ""bonnet"""	464:5:11320:11370	2539930	0	True				
ANR	2540086	OrExpression	"! child -> EvaluateAttrString ( ""B"" , b ) || b != ""bonnet"""		2539930	0		||			
ANR	2540087	UnaryOperationExpression	"! child -> EvaluateAttrString ( ""B"" , b )"		2539930	0					
ANR	2540088	UnaryOperator	!		2539930	0					
ANR	2540089	CallExpression	"child -> EvaluateAttrString ( ""B"" , b )"		2539930	1					
ANR	2540090	Callee	child -> EvaluateAttrString		2539930	0					
ANR	2540091	PtrMemberAccess	child -> EvaluateAttrString		2539930	0					
ANR	2540092	Identifier	child		2539930	0					
ANR	2540093	Identifier	EvaluateAttrString		2539930	1					
ANR	2540094	ArgumentList	"""B"""		2539930	1					
ANR	2540095	Argument	"""B"""		2539930	0					
ANR	2540096	PrimaryExpression	"""B"""		2539930	0					
ANR	2540097	Argument	b		2539930	1					
ANR	2540098	Identifier	b		2539930	0					
ANR	2540099	EqualityExpression	"b != ""bonnet"""		2539930	1		!=			
ANR	2540100	Identifier	b		2539930	0					
ANR	2540101	PrimaryExpression	"""bonnet"""		2539930	1					
ANR	2540102	CompoundStatement		38:58:990:990	2539930	1					
ANR	2540103	ExpressionStatement	"cout << ""  Failed to look up B from chained child.\\n"""	465:2:11377:11430	2539930	0	True				
ANR	2540104	ShiftExpression	"cout << ""  Failed to look up B from chained child.\\n"""		2539930	0		<<			
ANR	2540105	Identifier	cout		2539930	0					
ANR	2540106	PrimaryExpression	"""  Failed to look up B from chained child.\\n"""		2539930	1					
ANR	2540107	ElseStatement	else		2539930	0					
ANR	2540108	CompoundStatement		40:8:1057:1057	2539930	0					
ANR	2540109	ExpressionStatement	"cout << ""  Can look up B from child.\\n"""	467:2:11444:11483	2539930	0	True				
ANR	2540110	ShiftExpression	"cout << ""  Can look up B from child.\\n"""		2539930	0		<<			
ANR	2540111	Identifier	cout		2539930	0					
ANR	2540112	PrimaryExpression	"""  Can look up B from child.\\n"""		2539930	1					
ANR	2540113	IdentifierDeclStatement	Value lookup_value ;	472:1:11570:11588	2539930	13	True				
ANR	2540114	IdentifierDecl	lookup_value		2539930	0					
ANR	2540115	IdentifierDeclType	Value		2539930	0					
ANR	2540116	Identifier	lookup_value		2539930	1					
ANR	2540117	IdentifierDeclStatement	string bb ;	473:1:11591:11600	2539930	14	True				
ANR	2540118	IdentifierDecl	bb		2539930	0					
ANR	2540119	IdentifierDeclType	string		2539930	0					
ANR	2540120	Identifier	bb		2539930	1					
ANR	2540121	ExpressionStatement	"child -> Delete ( ""BB"" )"	474:1:11603:11622	2539930	15	True				
ANR	2540122	CallExpression	"child -> Delete ( ""BB"" )"		2539930	0					
ANR	2540123	Callee	child -> Delete		2539930	0					
ANR	2540124	PtrMemberAccess	child -> Delete		2539930	0					
ANR	2540125	Identifier	child		2539930	0					
ANR	2540126	Identifier	Delete		2539930	1					
ANR	2540127	ArgumentList	"""BB"""		2539930	1					
ANR	2540128	Argument	"""BB"""		2539930	0					
ANR	2540129	PrimaryExpression	"""BB"""		2539930	0					
ANR	2540130	IfStatement	"if ( child -> EvaluateAttrString ( ""BB"" , bb ) )"		2539930	16					
ANR	2540131	Condition	"child -> EvaluateAttrString ( ""BB"" , bb )"	475:5:11629:11663	2539930	0	True				
ANR	2540132	CallExpression	"child -> EvaluateAttrString ( ""BB"" , bb )"		2539930	0					
ANR	2540133	Callee	child -> EvaluateAttrString		2539930	0					
ANR	2540134	PtrMemberAccess	child -> EvaluateAttrString		2539930	0					
ANR	2540135	Identifier	child		2539930	0					
ANR	2540136	Identifier	EvaluateAttrString		2539930	1					
ANR	2540137	ArgumentList	"""BB"""		2539930	1					
ANR	2540138	Argument	"""BB"""		2539930	0					
ANR	2540139	PrimaryExpression	"""BB"""		2539930	0					
ANR	2540140	Argument	bb		2539930	1					
ANR	2540141	Identifier	bb		2539930	0					
ANR	2540142	CompoundStatement		49:42:1283:1283	2539930	1					
ANR	2540143	ExpressionStatement	"cout << ""  Failed: BB still has string value?\\n"""	476:2:11670:11718	2539930	0	True				
ANR	2540144	ShiftExpression	"cout << ""  Failed: BB still has string value?\\n"""		2539930	0		<<			
ANR	2540145	Identifier	cout		2539930	0					
ANR	2540146	PrimaryExpression	"""  Failed: BB still has string value?\\n"""		2539930	1					
ANR	2540147	ElseStatement	else		2539930	0					
ANR	2540148	CompoundStatement		51:8:1345:1345	2539930	0					
ANR	2540149	ExpressionStatement	"cout << ""  BB is now undefined.\\n"""	478:2:11732:11766	2539930	0	True				
ANR	2540150	ShiftExpression	"cout << ""  BB is now undefined.\\n"""		2539930	0		<<			
ANR	2540151	Identifier	cout		2539930	0					
ANR	2540152	PrimaryExpression	"""  BB is now undefined.\\n"""		2539930	1					
ANR	2540153	ExpressionStatement	"child -> Delete ( ""B"" )"	483:1:11852:11870	2539930	17	True				
ANR	2540154	CallExpression	"child -> Delete ( ""B"" )"		2539930	0					
ANR	2540155	Callee	child -> Delete		2539930	0					
ANR	2540156	PtrMemberAccess	child -> Delete		2539930	0					
ANR	2540157	Identifier	child		2539930	0					
ANR	2540158	Identifier	Delete		2539930	1					
ANR	2540159	ArgumentList	"""B"""		2539930	1					
ANR	2540160	Argument	"""B"""		2539930	0					
ANR	2540161	PrimaryExpression	"""B"""		2539930	0					
ANR	2540162	IfStatement	"if ( child -> EvaluateAttrString ( ""B"" , b ) )"		2539930	18					
ANR	2540163	Condition	"child -> EvaluateAttrString ( ""B"" , b )"	484:5:11877:11909	2539930	0	True				
ANR	2540164	CallExpression	"child -> EvaluateAttrString ( ""B"" , b )"		2539930	0					
ANR	2540165	Callee	child -> EvaluateAttrString		2539930	0					
ANR	2540166	PtrMemberAccess	child -> EvaluateAttrString		2539930	0					
ANR	2540167	Identifier	child		2539930	0					
ANR	2540168	Identifier	EvaluateAttrString		2539930	1					
ANR	2540169	ArgumentList	"""B"""		2539930	1					
ANR	2540170	Argument	"""B"""		2539930	0					
ANR	2540171	PrimaryExpression	"""B"""		2539930	0					
ANR	2540172	Argument	b		2539930	1					
ANR	2540173	Identifier	b		2539930	0					
ANR	2540174	CompoundStatement		58:40:1529:1529	2539930	1					
ANR	2540175	ExpressionStatement	"cout << ""  Failed: B still has string value?\\n"""	485:2:11916:11963	2539930	0	True				
ANR	2540176	ShiftExpression	"cout << ""  Failed: B still has string value?\\n"""		2539930	0		<<			
ANR	2540177	Identifier	cout		2539930	0					
ANR	2540178	PrimaryExpression	"""  Failed: B still has string value?\\n"""		2539930	1					
ANR	2540179	ElseStatement	else		2539930	0					
ANR	2540180	CompoundStatement		60:8:1590:1590	2539930	0					
ANR	2540181	ExpressionStatement	"cout << ""  B is now undefined.\\n"""	487:2:11977:12010	2539930	0	True				
ANR	2540182	ShiftExpression	"cout << ""  B is now undefined.\\n"""		2539930	0		<<			
ANR	2540183	Identifier	cout		2539930	0					
ANR	2540184	PrimaryExpression	"""  B is now undefined.\\n"""		2539930	1					
ANR	2540185	ExpressionStatement	cout << * child << endl	489:1:12016:12038	2539930	19	True				
ANR	2540186	ShiftExpression	cout << * child << endl		2539930	0		<<			
ANR	2540187	Identifier	cout		2539930	0					
ANR	2540188	ShiftExpression	* child << endl		2539930	1		<<			
ANR	2540189	UnaryOperationExpression	* child		2539930	0					
ANR	2540190	UnaryOperator	*		2539930	0					
ANR	2540191	Identifier	child		2539930	1					
ANR	2540192	Identifier	endl		2539930	1					
ANR	2540193	ExpressionStatement	child -> Unchain ( )	491:1:12042:12058	2539930	20	True				
ANR	2540194	CallExpression	child -> Unchain ( )		2539930	0					
ANR	2540195	Callee	child -> Unchain		2539930	0					
ANR	2540196	PtrMemberAccess	child -> Unchain		2539930	0					
ANR	2540197	Identifier	child		2539930	0					
ANR	2540198	Identifier	Unchain		2539930	1					
ANR	2540199	ArgumentList			2539930	1					
ANR	2540200	ReturnStatement	return ;	493:1:12062:12068	2539930	21	True				
ANR	2540201	ReturnType	static void		2539930	1					
ANR	2540202	Identifier	test_chaining		2539930	2					
ANR	2540203	ParameterList			2539930	3					
ANR	2540204	CFGEntryNode	ENTRY		2539930		True				
ANR	2540205	CFGExitNode	EXIT		2539930		True				
ANR	2540206	Symbol	aa		2539930						
ANR	2540207	Symbol	bb		2539930						
ANR	2540208	Symbol	a		2539930						
ANR	2540209	Symbol	* child		2539930						
ANR	2540210	Symbol	b		2539930						
ANR	2540211	Symbol	NULL		2539930						
ANR	2540212	Symbol	child -> EvaluateAttrInt		2539930						
ANR	2540213	Symbol	chaining_root_text		2539930						
ANR	2540214	Symbol	chaining_child_text		2539930						
ANR	2540215	Symbol	parser . ParseClassAd		2539930						
ANR	2540216	Symbol	child -> EvaluateAttrString		2539930						
ANR	2540217	Symbol	parser		2539930						
ANR	2540218	Symbol	lookup_value		2539930						
ANR	2540219	Symbol	root		2539930						
ANR	2540220	Symbol	child		2539930						
ANR	2540221	Function	test_dirty	496:0:12073:13715							
ANR	2540222	FunctionDef	test_dirty ()		2540221	0					
ANR	2540223	CompoundStatement		497:0:12102:13715	2540221	0					
ANR	2540224	IdentifierDeclStatement	ClassAd * classad ;	498:1:12105:12128	2540221	0	True				
ANR	2540225	IdentifierDecl	* classad		2540221	0					
ANR	2540226	IdentifierDeclType	ClassAd *		2540221	0					
ANR	2540227	Identifier	classad		2540221	1					
ANR	2540228	IdentifierDeclStatement	ClassAdParser parser ;	499:1:12131:12152	2540221	1	True				
ANR	2540229	IdentifierDecl	parser		2540221	0					
ANR	2540230	IdentifierDeclType	ClassAdParser		2540221	0					
ANR	2540231	Identifier	parser		2540221	1					
ANR	2540232	ExpressionStatement	classad = parser . ParseClassAd ( dirty_classad_text )	501:1:12156:12205	2540221	2	True				
ANR	2540233	AssignmentExpression	classad = parser . ParseClassAd ( dirty_classad_text )		2540221	0		=			
ANR	2540234	Identifier	classad		2540221	0					
ANR	2540235	CallExpression	parser . ParseClassAd ( dirty_classad_text )		2540221	1					
ANR	2540236	Callee	parser . ParseClassAd		2540221	0					
ANR	2540237	MemberAccess	parser . ParseClassAd		2540221	0					
ANR	2540238	Identifier	parser		2540221	0					
ANR	2540239	Identifier	ParseClassAd		2540221	1					
ANR	2540240	ArgumentList	dirty_classad_text		2540221	1					
ANR	2540241	Argument	dirty_classad_text		2540221	0					
ANR	2540242	Identifier	dirty_classad_text		2540221	0					
ANR	2540243	ExpressionStatement	"cout << ""Testing dirty attributes...\\n"""	503:1:12209:12248	2540221	3	True				
ANR	2540244	ShiftExpression	"cout << ""Testing dirty attributes...\\n"""		2540221	0		<<			
ANR	2540245	Identifier	cout		2540221	0					
ANR	2540246	PrimaryExpression	"""Testing dirty attributes...\\n"""		2540221	1					
ANR	2540247	IfStatement	"if ( classad -> IsAttributeDirty ( ""A"" ) )"		2540221	4					
ANR	2540248	Condition	"classad -> IsAttributeDirty ( ""A"" )"	505:5:12256:12285	2540221	0	True				
ANR	2540249	CallExpression	"classad -> IsAttributeDirty ( ""A"" )"		2540221	0					
ANR	2540250	Callee	classad -> IsAttributeDirty		2540221	0					
ANR	2540251	PtrMemberAccess	classad -> IsAttributeDirty		2540221	0					
ANR	2540252	Identifier	classad		2540221	0					
ANR	2540253	Identifier	IsAttributeDirty		2540221	1					
ANR	2540254	ArgumentList	"""A"""		2540221	1					
ANR	2540255	Argument	"""A"""		2540221	0					
ANR	2540256	PrimaryExpression	"""A"""		2540221	0					
ANR	2540257	CompoundStatement		9:37:185:185	2540221	1					
ANR	2540258	ExpressionStatement	"cout << ""  Failed: A is dirty just after construction.\\n"""	506:2:12292:12349	2540221	0	True				
ANR	2540259	ShiftExpression	"cout << ""  Failed: A is dirty just after construction.\\n"""		2540221	0		<<			
ANR	2540260	Identifier	cout		2540221	0					
ANR	2540261	PrimaryExpression	"""  Failed: A is dirty just after construction.\\n"""		2540221	1					
ANR	2540262	ElseStatement	else		2540221	0					
ANR	2540263	CompoundStatement		11:8:256:256	2540221	0					
ANR	2540264	ExpressionStatement	"cout << ""  OK: A is clean.\\n"""	508:2:12363:12392	2540221	0	True				
ANR	2540265	ShiftExpression	"cout << ""  OK: A is clean.\\n"""		2540221	0		<<			
ANR	2540266	Identifier	cout		2540221	0					
ANR	2540267	PrimaryExpression	"""  OK: A is clean.\\n"""		2540221	1					
ANR	2540268	ExpressionStatement	"classad -> InsertAttr ( ""B"" , true )"	511:1:12399:12429	2540221	5	True				
ANR	2540269	CallExpression	"classad -> InsertAttr ( ""B"" , true )"		2540221	0					
ANR	2540270	Callee	classad -> InsertAttr		2540221	0					
ANR	2540271	PtrMemberAccess	classad -> InsertAttr		2540221	0					
ANR	2540272	Identifier	classad		2540221	0					
ANR	2540273	Identifier	InsertAttr		2540221	1					
ANR	2540274	ArgumentList	"""B"""		2540221	1					
ANR	2540275	Argument	"""B"""		2540221	0					
ANR	2540276	PrimaryExpression	"""B"""		2540221	0					
ANR	2540277	Argument	true		2540221	1					
ANR	2540278	Identifier	true		2540221	0					
ANR	2540279	IfStatement	"if ( classad -> IsAttributeDirty ( ""A"" ) )"		2540221	6					
ANR	2540280	Condition	"classad -> IsAttributeDirty ( ""A"" )"	512:5:12436:12465	2540221	0	True				
ANR	2540281	CallExpression	"classad -> IsAttributeDirty ( ""A"" )"		2540221	0					
ANR	2540282	Callee	classad -> IsAttributeDirty		2540221	0					
ANR	2540283	PtrMemberAccess	classad -> IsAttributeDirty		2540221	0					
ANR	2540284	Identifier	classad		2540221	0					
ANR	2540285	Identifier	IsAttributeDirty		2540221	1					
ANR	2540286	ArgumentList	"""A"""		2540221	1					
ANR	2540287	Argument	"""A"""		2540221	0					
ANR	2540288	PrimaryExpression	"""A"""		2540221	0					
ANR	2540289	CompoundStatement		16:37:365:365	2540221	1					
ANR	2540290	ExpressionStatement	"cout << ""  Failed: A is dirty after inserting B.\\n"""	513:2:12472:12523	2540221	0	True				
ANR	2540291	ShiftExpression	"cout << ""  Failed: A is dirty after inserting B.\\n"""		2540221	0		<<			
ANR	2540292	Identifier	cout		2540221	0					
ANR	2540293	PrimaryExpression	"""  Failed: A is dirty after inserting B.\\n"""		2540221	1					
ANR	2540294	ElseStatement	else		2540221	0					
ANR	2540295	CompoundStatement		18:8:430:430	2540221	0					
ANR	2540296	ExpressionStatement	"cout << ""  OK: A is still clean.\\n"""	515:2:12537:12572	2540221	0	True				
ANR	2540297	ShiftExpression	"cout << ""  OK: A is still clean.\\n"""		2540221	0		<<			
ANR	2540298	Identifier	cout		2540221	0					
ANR	2540299	PrimaryExpression	"""  OK: A is still clean.\\n"""		2540221	1					
ANR	2540300	IfStatement	"if ( ! classad -> IsAttributeDirty ( ""B"" ) )"		2540221	7					
ANR	2540301	Condition	"! classad -> IsAttributeDirty ( ""B"" )"	518:5:12584:12614	2540221	0	True				
ANR	2540302	UnaryOperationExpression	"! classad -> IsAttributeDirty ( ""B"" )"		2540221	0					
ANR	2540303	UnaryOperator	!		2540221	0					
ANR	2540304	CallExpression	"classad -> IsAttributeDirty ( ""B"" )"		2540221	1					
ANR	2540305	Callee	classad -> IsAttributeDirty		2540221	0					
ANR	2540306	PtrMemberAccess	classad -> IsAttributeDirty		2540221	0					
ANR	2540307	Identifier	classad		2540221	0					
ANR	2540308	Identifier	IsAttributeDirty		2540221	1					
ANR	2540309	ArgumentList	"""B"""		2540221	1					
ANR	2540310	Argument	"""B"""		2540221	0					
ANR	2540311	PrimaryExpression	"""B"""		2540221	0					
ANR	2540312	CompoundStatement		22:38:514:514	2540221	1					
ANR	2540313	ExpressionStatement	"cout << ""  Failed: B is not dirty.\\n"""	519:2:12621:12658	2540221	0	True				
ANR	2540314	ShiftExpression	"cout << ""  Failed: B is not dirty.\\n"""		2540221	0		<<			
ANR	2540315	Identifier	cout		2540221	0					
ANR	2540316	PrimaryExpression	"""  Failed: B is not dirty.\\n"""		2540221	1					
ANR	2540317	ElseStatement	else		2540221	0					
ANR	2540318	CompoundStatement		24:8:565:565	2540221	0					
ANR	2540319	ExpressionStatement	"cout << ""  OK: B is dirty.\\n"""	521:2:12672:12701	2540221	0	True				
ANR	2540320	ShiftExpression	"cout << ""  OK: B is dirty.\\n"""		2540221	0		<<			
ANR	2540321	Identifier	cout		2540221	0					
ANR	2540322	PrimaryExpression	"""  OK: B is dirty.\\n"""		2540221	1					
ANR	2540323	IdentifierDeclStatement	ClassAd :: dirtyIterator it = classad -> dirtyBegin ( ) ;	524:1:12708:12758	2540221	8	True				
ANR	2540324	IdentifierDecl	it = classad -> dirtyBegin ( )		2540221	0					
ANR	2540325	IdentifierDeclType	ClassAd :: dirtyIterator		2540221	0					
ANR	2540326	Identifier	it		2540221	1					
ANR	2540327	AssignmentExpression	it = classad -> dirtyBegin ( )		2540221	2		=			
ANR	2540328	Identifier	it		2540221	0					
ANR	2540329	CallExpression	classad -> dirtyBegin ( )		2540221	1					
ANR	2540330	Callee	classad -> dirtyBegin		2540221	0					
ANR	2540331	PtrMemberAccess	classad -> dirtyBegin		2540221	0					
ANR	2540332	Identifier	classad		2540221	0					
ANR	2540333	Identifier	dirtyBegin		2540221	1					
ANR	2540334	ArgumentList			2540221	1					
ANR	2540335	IfStatement	if ( it == classad -> dirtyEnd ( ) )		2540221	9					
ANR	2540336	Condition	it == classad -> dirtyEnd ( )	526:5:12767:12791	2540221	0	True				
ANR	2540337	EqualityExpression	it == classad -> dirtyEnd ( )		2540221	0		==			
ANR	2540338	Identifier	it		2540221	0					
ANR	2540339	CallExpression	classad -> dirtyEnd ( )		2540221	1					
ANR	2540340	Callee	classad -> dirtyEnd		2540221	0					
ANR	2540341	PtrMemberAccess	classad -> dirtyEnd		2540221	0					
ANR	2540342	Identifier	classad		2540221	0					
ANR	2540343	Identifier	dirtyEnd		2540221	1					
ANR	2540344	ArgumentList			2540221	1					
ANR	2540345	CompoundStatement		30:32:691:691	2540221	1					
ANR	2540346	ExpressionStatement	"cout << ""  Failed: Dirty iterator gives us nothing.\\n"""	527:2:12798:12852	2540221	0	True				
ANR	2540347	ShiftExpression	"cout << ""  Failed: Dirty iterator gives us nothing.\\n"""		2540221	0		<<			
ANR	2540348	Identifier	cout		2540221	0					
ANR	2540349	PrimaryExpression	"""  Failed: Dirty iterator gives us nothing.\\n"""		2540221	1					
ANR	2540350	ElseStatement	else		2540221	0					
ANR	2540351	CompoundStatement		32:8:759:759	2540221	0					
ANR	2540352	IfStatement	"if ( ( * it ) != ""B"" )"		2540221	0					
ANR	2540353	Condition	"( * it ) != ""B"""	529:6:12870:12881	2540221	0	True				
ANR	2540354	EqualityExpression	"( * it ) != ""B"""		2540221	0		!=			
ANR	2540355	UnaryOperationExpression	* it		2540221	0					
ANR	2540356	UnaryOperator	*		2540221	0					
ANR	2540357	Identifier	it		2540221	1					
ANR	2540358	PrimaryExpression	"""B"""		2540221	1					
ANR	2540359	CompoundStatement		33:20:781:781	2540221	1					
ANR	2540360	ExpressionStatement	"cout << ""  Failed: Dirty iterator is not pointing at B.\\n"""	530:3:12889:12947	2540221	0	True				
ANR	2540361	ShiftExpression	"cout << ""  Failed: Dirty iterator is not pointing at B.\\n"""		2540221	0		<<			
ANR	2540362	Identifier	cout		2540221	0					
ANR	2540363	PrimaryExpression	"""  Failed: Dirty iterator is not pointing at B.\\n"""		2540221	1					
ANR	2540364	ElseStatement	else		2540221	0					
ANR	2540365	CompoundStatement		35:9:855:855	2540221	0					
ANR	2540366	ExpressionStatement	"cout << ""  OK: Dirty iterator starts out okay.\\n"""	532:3:12963:13012	2540221	0	True				
ANR	2540367	ShiftExpression	"cout << ""  OK: Dirty iterator starts out okay.\\n"""		2540221	0		<<			
ANR	2540368	Identifier	cout		2540221	0					
ANR	2540369	PrimaryExpression	"""  OK: Dirty iterator starts out okay.\\n"""		2540221	1					
ANR	2540370	ExpressionStatement	it ++	534:3:13018:13022	2540221	1	True				
ANR	2540371	PostIncDecOperationExpression	it ++		2540221	0					
ANR	2540372	Identifier	it		2540221	0					
ANR	2540373	IncDec	++		2540221	1					
ANR	2540374	IfStatement	if ( it != classad -> dirtyEnd ( ) )		2540221	2					
ANR	2540375	Condition	it != classad -> dirtyEnd ( )	535:7:13031:13055	2540221	0	True				
ANR	2540376	EqualityExpression	it != classad -> dirtyEnd ( )		2540221	0		!=			
ANR	2540377	Identifier	it		2540221	0					
ANR	2540378	CallExpression	classad -> dirtyEnd ( )		2540221	1					
ANR	2540379	Callee	classad -> dirtyEnd		2540221	0					
ANR	2540380	PtrMemberAccess	classad -> dirtyEnd		2540221	0					
ANR	2540381	Identifier	classad		2540221	0					
ANR	2540382	Identifier	dirtyEnd		2540221	1					
ANR	2540383	ArgumentList			2540221	1					
ANR	2540384	CompoundStatement		39:34:955:955	2540221	1					
ANR	2540385	ExpressionStatement	"cout << ""  Failed: Dirty iterator it not at end.\\n"""	536:4:13064:13115	2540221	0	True				
ANR	2540386	ShiftExpression	"cout << ""  Failed: Dirty iterator it not at end.\\n"""		2540221	0		<<			
ANR	2540387	Identifier	cout		2540221	0					
ANR	2540388	PrimaryExpression	"""  Failed: Dirty iterator it not at end.\\n"""		2540221	1					
ANR	2540389	ElseStatement	else		2540221	0					
ANR	2540390	CompoundStatement		41:10:1024:1024	2540221	0					
ANR	2540391	ExpressionStatement	"cout << ""  OK: Dirty iterator ends okay.\\n"""	538:4:13133:13176	2540221	0	True				
ANR	2540392	ShiftExpression	"cout << ""  OK: Dirty iterator ends okay.\\n"""		2540221	0		<<			
ANR	2540393	Identifier	cout		2540221	0					
ANR	2540394	PrimaryExpression	"""  OK: Dirty iterator ends okay.\\n"""		2540221	1					
ANR	2540395	ExpressionStatement	classad -> ClearAllDirtyFlags ( )	543:1:13192:13221	2540221	10	True				
ANR	2540396	CallExpression	classad -> ClearAllDirtyFlags ( )		2540221	0					
ANR	2540397	Callee	classad -> ClearAllDirtyFlags		2540221	0					
ANR	2540398	PtrMemberAccess	classad -> ClearAllDirtyFlags		2540221	0					
ANR	2540399	Identifier	classad		2540221	0					
ANR	2540400	Identifier	ClearAllDirtyFlags		2540221	1					
ANR	2540401	ArgumentList			2540221	1					
ANR	2540402	IfStatement	"if ( classad -> IsAttributeDirty ( ""B"" ) )"		2540221	11					
ANR	2540403	Condition	"classad -> IsAttributeDirty ( ""B"" )"	544:5:13228:13257	2540221	0	True				
ANR	2540404	CallExpression	"classad -> IsAttributeDirty ( ""B"" )"		2540221	0					
ANR	2540405	Callee	classad -> IsAttributeDirty		2540221	0					
ANR	2540406	PtrMemberAccess	classad -> IsAttributeDirty		2540221	0					
ANR	2540407	Identifier	classad		2540221	0					
ANR	2540408	Identifier	IsAttributeDirty		2540221	1					
ANR	2540409	ArgumentList	"""B"""		2540221	1					
ANR	2540410	Argument	"""B"""		2540221	0					
ANR	2540411	PrimaryExpression	"""B"""		2540221	0					
ANR	2540412	CompoundStatement		48:37:1157:1157	2540221	1					
ANR	2540413	ExpressionStatement	"cout << ""  Failed: B is dirty after clearing flags.\\n"""	545:2:13264:13318	2540221	0	True				
ANR	2540414	ShiftExpression	"cout << ""  Failed: B is dirty after clearing flags.\\n"""		2540221	0		<<			
ANR	2540415	Identifier	cout		2540221	0					
ANR	2540416	PrimaryExpression	"""  Failed: B is dirty after clearing flags.\\n"""		2540221	1					
ANR	2540417	ElseStatement	else		2540221	0					
ANR	2540418	CompoundStatement		50:8:1225:1225	2540221	0					
ANR	2540419	ExpressionStatement	"cout << ""  OK: B is clean.\\n"""	547:2:13332:13361	2540221	0	True				
ANR	2540420	ShiftExpression	"cout << ""  OK: B is clean.\\n"""		2540221	0		<<			
ANR	2540421	Identifier	cout		2540221	0					
ANR	2540422	PrimaryExpression	"""  OK: B is clean.\\n"""		2540221	1					
ANR	2540423	ExpressionStatement	"classad -> MarkAttributeDirty ( ""A"" )"	550:1:13368:13400	2540221	12	True				
ANR	2540424	CallExpression	"classad -> MarkAttributeDirty ( ""A"" )"		2540221	0					
ANR	2540425	Callee	classad -> MarkAttributeDirty		2540221	0					
ANR	2540426	PtrMemberAccess	classad -> MarkAttributeDirty		2540221	0					
ANR	2540427	Identifier	classad		2540221	0					
ANR	2540428	Identifier	MarkAttributeDirty		2540221	1					
ANR	2540429	ArgumentList	"""A"""		2540221	1					
ANR	2540430	Argument	"""A"""		2540221	0					
ANR	2540431	PrimaryExpression	"""A"""		2540221	0					
ANR	2540432	IfStatement	"if ( ! classad -> IsAttributeDirty ( ""A"" ) )"		2540221	13					
ANR	2540433	Condition	"! classad -> IsAttributeDirty ( ""A"" )"	551:5:13407:13437	2540221	0	True				
ANR	2540434	UnaryOperationExpression	"! classad -> IsAttributeDirty ( ""A"" )"		2540221	0					
ANR	2540435	UnaryOperator	!		2540221	0					
ANR	2540436	CallExpression	"classad -> IsAttributeDirty ( ""A"" )"		2540221	1					
ANR	2540437	Callee	classad -> IsAttributeDirty		2540221	0					
ANR	2540438	PtrMemberAccess	classad -> IsAttributeDirty		2540221	0					
ANR	2540439	Identifier	classad		2540221	0					
ANR	2540440	Identifier	IsAttributeDirty		2540221	1					
ANR	2540441	ArgumentList	"""A"""		2540221	1					
ANR	2540442	Argument	"""A"""		2540221	0					
ANR	2540443	PrimaryExpression	"""A"""		2540221	0					
ANR	2540444	CompoundStatement		55:38:1337:1337	2540221	1					
ANR	2540445	ExpressionStatement	"cout << ""  Failed: A is not dirty.\\n"""	552:2:13444:13481	2540221	0	True				
ANR	2540446	ShiftExpression	"cout << ""  Failed: A is not dirty.\\n"""		2540221	0		<<			
ANR	2540447	Identifier	cout		2540221	0					
ANR	2540448	PrimaryExpression	"""  Failed: A is not dirty.\\n"""		2540221	1					
ANR	2540449	ElseStatement	else		2540221	0					
ANR	2540450	CompoundStatement		57:8:1388:1388	2540221	0					
ANR	2540451	ExpressionStatement	"cout << ""  OK: A is dirty.\\n"""	554:2:13495:13524	2540221	0	True				
ANR	2540452	ShiftExpression	"cout << ""  OK: A is dirty.\\n"""		2540221	0		<<			
ANR	2540453	Identifier	cout		2540221	0					
ANR	2540454	PrimaryExpression	"""  OK: A is dirty.\\n"""		2540221	1					
ANR	2540455	ExpressionStatement	"classad -> MarkAttributeClean ( ""A"" )"	557:1:13531:13563	2540221	14	True				
ANR	2540456	CallExpression	"classad -> MarkAttributeClean ( ""A"" )"		2540221	0					
ANR	2540457	Callee	classad -> MarkAttributeClean		2540221	0					
ANR	2540458	PtrMemberAccess	classad -> MarkAttributeClean		2540221	0					
ANR	2540459	Identifier	classad		2540221	0					
ANR	2540460	Identifier	MarkAttributeClean		2540221	1					
ANR	2540461	ArgumentList	"""A"""		2540221	1					
ANR	2540462	Argument	"""A"""		2540221	0					
ANR	2540463	PrimaryExpression	"""A"""		2540221	0					
ANR	2540464	IfStatement	"if ( classad -> IsAttributeDirty ( ""A"" ) )"		2540221	15					
ANR	2540465	Condition	"classad -> IsAttributeDirty ( ""A"" )"	558:5:13570:13599	2540221	0	True				
ANR	2540466	CallExpression	"classad -> IsAttributeDirty ( ""A"" )"		2540221	0					
ANR	2540467	Callee	classad -> IsAttributeDirty		2540221	0					
ANR	2540468	PtrMemberAccess	classad -> IsAttributeDirty		2540221	0					
ANR	2540469	Identifier	classad		2540221	0					
ANR	2540470	Identifier	IsAttributeDirty		2540221	1					
ANR	2540471	ArgumentList	"""A"""		2540221	1					
ANR	2540472	Argument	"""A"""		2540221	0					
ANR	2540473	PrimaryExpression	"""A"""		2540221	0					
ANR	2540474	CompoundStatement		62:37:1499:1499	2540221	1					
ANR	2540475	ExpressionStatement	"cout << ""  Failed: A is dirty after cleaning it.\\n"""	559:2:13606:13657	2540221	0	True				
ANR	2540476	ShiftExpression	"cout << ""  Failed: A is dirty after cleaning it.\\n"""		2540221	0		<<			
ANR	2540477	Identifier	cout		2540221	0					
ANR	2540478	PrimaryExpression	"""  Failed: A is dirty after cleaning it.\\n"""		2540221	1					
ANR	2540479	ElseStatement	else		2540221	0					
ANR	2540480	CompoundStatement		64:8:1564:1564	2540221	0					
ANR	2540481	ExpressionStatement	"cout << ""  OK: A is clean.\\n"""	561:2:13671:13700	2540221	0	True				
ANR	2540482	ShiftExpression	"cout << ""  OK: A is clean.\\n"""		2540221	0		<<			
ANR	2540483	Identifier	cout		2540221	0					
ANR	2540484	PrimaryExpression	"""  OK: A is clean.\\n"""		2540221	1					
ANR	2540485	ReturnStatement	return ;	564:1:13707:13713	2540221	16	True				
ANR	2540486	ReturnType	static void		2540221	1					
ANR	2540487	Identifier	test_dirty		2540221	2					
ANR	2540488	ParameterList			2540221	3					
ANR	2540489	CFGEntryNode	ENTRY		2540221		True				
ANR	2540490	CFGExitNode	EXIT		2540221		True				
ANR	2540491	Symbol	classad -> dirtyEnd		2540221						
ANR	2540492	Symbol	* it		2540221						
ANR	2540493	Symbol	classad -> dirtyBegin		2540221						
ANR	2540494	Symbol	parser		2540221						
ANR	2540495	Symbol	* classad		2540221						
ANR	2540496	Symbol	dirty_classad_text		2540221						
ANR	2540497	Symbol	true		2540221						
ANR	2540498	Symbol	classad		2540221						
ANR	2540499	Symbol	classad -> IsAttributeDirty		2540221						
ANR	2540500	Symbol	it		2540221						
ANR	2540501	Symbol	parser . ParseClassAd		2540221						
ANR	2540502	Function	test_user_functions	567:0:13718:16274							
ANR	2540503	FunctionDef	test_user_functions ()		2540502	0					
ANR	2540504	CompoundStatement		568:0:13756:16274	2540502	0					
ANR	2540505	IdentifierDeclStatement	"string name = ""triple"" ;"	569:1:13759:13781	2540502	0	True				
ANR	2540506	IdentifierDecl	"name = ""triple"""		2540502	0					
ANR	2540507	IdentifierDeclType	string		2540502	0					
ANR	2540508	Identifier	name		2540502	1					
ANR	2540509	AssignmentExpression	"name = ""triple"""		2540502	2		=			
ANR	2540510	Identifier	name		2540502	0					
ANR	2540511	PrimaryExpression	"""triple"""		2540502	1					
ANR	2540512	Statement	string	570:1:13784:13789	2540502	1	True				
ANR	2540513	Statement	classad_text	570:8:13791:13802	2540502	2	True				
ANR	2540514	Statement	=	570:21:13804:13804	2540502	3	True				
ANR	2540515	Statement	"""[ Test1 = 3 + triple(9); Test2 = 3 + double(9); """	570:23:13806:13855	2540502	4	True				
ANR	2540516	ExpressionStatement	"""Test3 = todays_date(); ]"""	571:20:13877:13903	2540502	5	True				
ANR	2540517	PrimaryExpression	"""Test3 = todays_date(); ]"""		2540502	0					
ANR	2540518	IdentifierDeclStatement	ClassAd * classad ;	572:1:13906:13929	2540502	6	True				
ANR	2540519	IdentifierDecl	* classad		2540502	0					
ANR	2540520	IdentifierDeclType	ClassAd *		2540502	0					
ANR	2540521	Identifier	classad		2540502	1					
ANR	2540522	IdentifierDeclStatement	ClassAdParser parser ;	573:1:13932:13953	2540502	7	True				
ANR	2540523	IdentifierDecl	parser		2540502	0					
ANR	2540524	IdentifierDeclType	ClassAdParser		2540502	0					
ANR	2540525	Identifier	parser		2540502	1					
ANR	2540526	ExpressionStatement	"cout << ""Testing user functions...\\n"""	575:1:13957:13994	2540502	8	True				
ANR	2540527	ShiftExpression	"cout << ""Testing user functions...\\n"""		2540502	0		<<			
ANR	2540528	Identifier	cout		2540502	0					
ANR	2540529	PrimaryExpression	"""Testing user functions...\\n"""		2540502	1					
ANR	2540530	ExpressionStatement	"FunctionCall :: RegisterFunction ( name , triple )"	577:1:13998:14042	2540502	9	True				
ANR	2540531	CallExpression	"FunctionCall :: RegisterFunction ( name , triple )"		2540502	0					
ANR	2540532	Callee	FunctionCall :: RegisterFunction		2540502	0					
ANR	2540533	Identifier	FunctionCall :: RegisterFunction		2540502	0					
ANR	2540534	ArgumentList	name		2540502	1					
ANR	2540535	Argument	name		2540502	0					
ANR	2540536	Identifier	name		2540502	0					
ANR	2540537	Argument	triple		2540502	1					
ANR	2540538	Identifier	triple		2540502	0					
ANR	2540539	IdentifierDeclStatement	bool opened_library ;	580:1:14105:14124	2540502	10	True				
ANR	2540540	IdentifierDecl	opened_library		2540502	0					
ANR	2540541	IdentifierDeclType	bool		2540502	0					
ANR	2540542	Identifier	opened_library		2540502	1					
ANR	2540543	IdentifierDeclStatement	char path [ 10240 ] ;	581:1:14127:14143	2540502	11	True				
ANR	2540544	IdentifierDecl	path [ 10240 ]		2540502	0					
ANR	2540545	IdentifierDeclType	char [ 10240 ]		2540502	0					
ANR	2540546	Identifier	path		2540502	1					
ANR	2540547	PrimaryExpression	10240		2540502	2					
ANR	2540548	IdentifierDeclStatement	string libname ;	582:1:14146:14160	2540502	12	True				
ANR	2540549	IdentifierDecl	libname		2540502	0					
ANR	2540550	IdentifierDeclType	string		2540502	0					
ANR	2540551	Identifier	libname		2540502	1					
ANR	2540552	ExpressionStatement	path [ 0 ] = 0	583:1:14163:14174	2540502	13	True				
ANR	2540553	AssignmentExpression	path [ 0 ] = 0		2540502	0		=			
ANR	2540554	ArrayIndexing	path [ 0 ]		2540502	0					
ANR	2540555	Identifier	path		2540502	0					
ANR	2540556	PrimaryExpression	0		2540502	1					
ANR	2540557	PrimaryExpression	0		2540502	1					
ANR	2540558	ExpressionStatement	"getcwd ( path , 10239 )"	584:1:14177:14196	2540502	14	True				
ANR	2540559	CallExpression	"getcwd ( path , 10239 )"		2540502	0					
ANR	2540560	Callee	getcwd		2540502	0					
ANR	2540561	Identifier	getcwd		2540502	0					
ANR	2540562	ArgumentList	path		2540502	1					
ANR	2540563	Argument	path		2540502	0					
ANR	2540564	Identifier	path		2540502	0					
ANR	2540565	Argument	10239		2540502	1					
ANR	2540566	PrimaryExpression	10239		2540502	0					
ANR	2540567	ExpressionStatement	libname = path	585:1:14199:14213	2540502	15	True				
ANR	2540568	AssignmentExpression	libname = path		2540502	0		=			
ANR	2540569	Identifier	libname		2540502	0					
ANR	2540570	Identifier	path		2540502	1					
ANR	2540571	ExpressionStatement	"libname += ""/"""	586:1:14216:14230	2540502	16	True				
ANR	2540572	AssignmentExpression	"libname += ""/"""		2540502	0		+=			
ANR	2540573	Identifier	libname		2540502	0					
ANR	2540574	PrimaryExpression	"""/"""		2540502	1					
ANR	2540575	ExpressionStatement	libname += TEST_LIBNAME	587:1:14233:14256	2540502	17	True				
ANR	2540576	AssignmentExpression	libname += TEST_LIBNAME		2540502	0		+=			
ANR	2540577	Identifier	libname		2540502	0					
ANR	2540578	Identifier	TEST_LIBNAME		2540502	1					
ANR	2540579	ExpressionStatement	opened_library = FunctionCall :: RegisterSharedLibraryFunctions ( libname . c_str ( ) )	588:1:14288:14366	2540502	18	True				
ANR	2540580	AssignmentExpression	opened_library = FunctionCall :: RegisterSharedLibraryFunctions ( libname . c_str ( ) )		2540502	0		=			
ANR	2540581	Identifier	opened_library		2540502	0					
ANR	2540582	CallExpression	FunctionCall :: RegisterSharedLibraryFunctions ( libname . c_str ( ) )		2540502	1					
ANR	2540583	Callee	FunctionCall :: RegisterSharedLibraryFunctions		2540502	0					
ANR	2540584	Identifier	FunctionCall :: RegisterSharedLibraryFunctions		2540502	0					
ANR	2540585	ArgumentList	libname . c_str ( )		2540502	1					
ANR	2540586	Argument	libname . c_str ( )		2540502	0					
ANR	2540587	CallExpression	libname . c_str ( )		2540502	0					
ANR	2540588	Callee	libname . c_str		2540502	0					
ANR	2540589	MemberAccess	libname . c_str		2540502	0					
ANR	2540590	Identifier	libname		2540502	0					
ANR	2540591	Identifier	c_str		2540502	1					
ANR	2540592	ArgumentList			2540502	1					
ANR	2540593	IfStatement	if ( ! opened_library )		2540502	19					
ANR	2540594	Condition	! opened_library	589:5:14373:14387	2540502	0	True				
ANR	2540595	UnaryOperationExpression	! opened_library		2540502	0					
ANR	2540596	UnaryOperator	!		2540502	0					
ANR	2540597	Identifier	opened_library		2540502	1					
ANR	2540598	CompoundStatement		22:22:633:633	2540502	1					
ANR	2540599	ExpressionStatement	"cout << ""  Failed to open libshared.so: "" << CondorErrMsg << endl"	590:2:14394:14459	2540502	0	True				
ANR	2540600	ShiftExpression	"cout << ""  Failed to open libshared.so: "" << CondorErrMsg << endl"		2540502	0		<<			
ANR	2540601	Identifier	cout		2540502	0					
ANR	2540602	ShiftExpression	"""  Failed to open libshared.so: "" << CondorErrMsg << endl"		2540502	1		<<			
ANR	2540603	PrimaryExpression	"""  Failed to open libshared.so: """		2540502	0					
ANR	2540604	ShiftExpression	CondorErrMsg << endl		2540502	1		<<			
ANR	2540605	Identifier	CondorErrMsg		2540502	0					
ANR	2540606	Identifier	endl		2540502	1					
ANR	2540607	ExpressionStatement	classad = parser . ParseClassAd ( classad_text )	594:1:14473:14516	2540502	20	True				
ANR	2540608	AssignmentExpression	classad = parser . ParseClassAd ( classad_text )		2540502	0		=			
ANR	2540609	Identifier	classad		2540502	0					
ANR	2540610	CallExpression	parser . ParseClassAd ( classad_text )		2540502	1					
ANR	2540611	Callee	parser . ParseClassAd		2540502	0					
ANR	2540612	MemberAccess	parser . ParseClassAd		2540502	0					
ANR	2540613	Identifier	parser		2540502	0					
ANR	2540614	Identifier	ParseClassAd		2540502	1					
ANR	2540615	ArgumentList	classad_text		2540502	1					
ANR	2540616	Argument	classad_text		2540502	0					
ANR	2540617	Identifier	classad_text		2540502	0					
ANR	2540618	IfStatement	if ( classad == NULL )		2540502	21					
ANR	2540619	Condition	classad == NULL	595:5:14523:14537	2540502	0	True				
ANR	2540620	EqualityExpression	classad == NULL		2540502	0		==			
ANR	2540621	Identifier	classad		2540502	0					
ANR	2540622	Identifier	NULL		2540502	1					
ANR	2540623	CompoundStatement		28:22:783:783	2540502	1					
ANR	2540624	ExpressionStatement	"cout << ""  Failed to parse ClassAd in test_internal_user_function().\\n"""	596:2:14544:14615	2540502	0	True				
ANR	2540625	ShiftExpression	"cout << ""  Failed to parse ClassAd in test_internal_user_function().\\n"""		2540502	0		<<			
ANR	2540626	Identifier	cout		2540502	0					
ANR	2540627	PrimaryExpression	"""  Failed to parse ClassAd in test_internal_user_function().\\n"""		2540502	1					
ANR	2540628	ExpressionStatement	exit ( 1 )	597:2:14619:14626	2540502	1	True				
ANR	2540629	CallExpression	exit ( 1 )		2540502	0					
ANR	2540630	Callee	exit		2540502	0					
ANR	2540631	Identifier	exit		2540502	0					
ANR	2540632	ArgumentList	1		2540502	1					
ANR	2540633	Argument	1		2540502	0					
ANR	2540634	PrimaryExpression	1		2540502	0					
ANR	2540635	IdentifierDeclStatement	int test ;	600:1:14633:14641	2540502	22	True				
ANR	2540636	IdentifierDecl	test		2540502	0					
ANR	2540637	IdentifierDeclType	int		2540502	0					
ANR	2540638	Identifier	test		2540502	1					
ANR	2540639	IfStatement	"if ( ! classad -> EvaluateAttrInt ( ""Test1"" , test ) || test != 30 )"		2540502	23					
ANR	2540640	Condition	"! classad -> EvaluateAttrInt ( ""Test1"" , test ) || test != 30"	601:5:14648:14701	2540502	0	True				
ANR	2540641	OrExpression	"! classad -> EvaluateAttrInt ( ""Test1"" , test ) || test != 30"		2540502	0		||			
ANR	2540642	UnaryOperationExpression	"! classad -> EvaluateAttrInt ( ""Test1"" , test )"		2540502	0					
ANR	2540643	UnaryOperator	!		2540502	0					
ANR	2540644	CallExpression	"classad -> EvaluateAttrInt ( ""Test1"" , test )"		2540502	1					
ANR	2540645	Callee	classad -> EvaluateAttrInt		2540502	0					
ANR	2540646	PtrMemberAccess	classad -> EvaluateAttrInt		2540502	0					
ANR	2540647	Identifier	classad		2540502	0					
ANR	2540648	Identifier	EvaluateAttrInt		2540502	1					
ANR	2540649	ArgumentList	"""Test1"""		2540502	1					
ANR	2540650	Argument	"""Test1"""		2540502	0					
ANR	2540651	PrimaryExpression	"""Test1"""		2540502	0					
ANR	2540652	Argument	test		2540502	1					
ANR	2540653	Identifier	test		2540502	0					
ANR	2540654	EqualityExpression	test != 30		2540502	1		!=			
ANR	2540655	Identifier	test		2540502	0					
ANR	2540656	PrimaryExpression	30		2540502	1					
ANR	2540657	CompoundStatement		34:61:947:947	2540502	1					
ANR	2540658	ExpressionStatement	"cout << ""  Failed: Couldn't evaluate internal user function triple correctly."""	602:2:14708:14786	2540502	0	True				
ANR	2540659	ShiftExpression	"cout << ""  Failed: Couldn't evaluate internal user function triple correctly."""		2540502	0		<<			
ANR	2540660	Identifier	cout		2540502	0					
ANR	2540661	PrimaryExpression	"""  Failed: Couldn't evaluate internal user function triple correctly."""		2540502	1					
ANR	2540662	ElseStatement	else		2540502	0					
ANR	2540663	CompoundStatement		36:8:1039:1039	2540502	0					
ANR	2540664	ExpressionStatement	"cout << ""  OK: Evaluated internal user function triple ("""	604:2:14800:14857	2540502	0	True				
ANR	2540665	ShiftExpression	"cout << ""  OK: Evaluated internal user function triple ("""		2540502	0		<<			
ANR	2540666	Identifier	cout		2540502	0					
ANR	2540667	PrimaryExpression	"""  OK: Evaluated internal user function triple ("""		2540502	1					
ANR	2540668	ExpressionStatement	"cout << test << "") correctly.\\n"""	605:2:14861:14893	2540502	1	True				
ANR	2540669	ShiftExpression	"cout << test << "") correctly.\\n"""		2540502	0		<<			
ANR	2540670	Identifier	cout		2540502	0					
ANR	2540671	ShiftExpression	"test << "") correctly.\\n"""		2540502	1		<<			
ANR	2540672	Identifier	test		2540502	0					
ANR	2540673	PrimaryExpression	""") correctly.\\n"""		2540502	1					
ANR	2540674	IfStatement	if ( opened_library )		2540502	24					
ANR	2540675	Condition	opened_library	609:5:14963:14976	2540502	0	True				
ANR	2540676	Identifier	opened_library		2540502	0					
ANR	2540677	CompoundStatement		67:2:2203:2214	2540502	1					
ANR	2540678	IfStatement	"if ( ! classad -> EvaluateAttrInt ( ""Test1"" , test ) || test != 30 )"		2540502	0					
ANR	2540679	Condition	"! classad -> EvaluateAttrInt ( ""Test1"" , test ) || test != 30"	613:6:15140:15193	2540502	0	True				
ANR	2540680	OrExpression	"! classad -> EvaluateAttrInt ( ""Test1"" , test ) || test != 30"		2540502	0		||			
ANR	2540681	UnaryOperationExpression	"! classad -> EvaluateAttrInt ( ""Test1"" , test )"		2540502	0					
ANR	2540682	UnaryOperator	!		2540502	0					
ANR	2540683	CallExpression	"classad -> EvaluateAttrInt ( ""Test1"" , test )"		2540502	1					
ANR	2540684	Callee	classad -> EvaluateAttrInt		2540502	0					
ANR	2540685	PtrMemberAccess	classad -> EvaluateAttrInt		2540502	0					
ANR	2540686	Identifier	classad		2540502	0					
ANR	2540687	Identifier	EvaluateAttrInt		2540502	1					
ANR	2540688	ArgumentList	"""Test1"""		2540502	1					
ANR	2540689	Argument	"""Test1"""		2540502	0					
ANR	2540690	PrimaryExpression	"""Test1"""		2540502	0					
ANR	2540691	Argument	test		2540502	1					
ANR	2540692	Identifier	test		2540502	0					
ANR	2540693	EqualityExpression	test != 30		2540502	1		!=			
ANR	2540694	Identifier	test		2540502	0					
ANR	2540695	PrimaryExpression	30		2540502	1					
ANR	2540696	CompoundStatement		46:62:1439:1439	2540502	1					
ANR	2540697	ExpressionStatement	"cout << ""  Failed: Couldn't evaluate internal user function triple correctly."" << endl"	614:3:15201:15292	2540502	0	True				
ANR	2540698	ShiftExpression	"cout << ""  Failed: Couldn't evaluate internal user function triple correctly."" << endl"		2540502	0		<<			
ANR	2540699	Identifier	cout		2540502	0					
ANR	2540700	ShiftExpression	"""  Failed: Couldn't evaluate internal user function triple correctly."" << endl"		2540502	1		<<			
ANR	2540701	PrimaryExpression	"""  Failed: Couldn't evaluate internal user function triple correctly."""		2540502	0					
ANR	2540702	Identifier	endl		2540502	1					
ANR	2540703	ElseStatement	else		2540502	0					
ANR	2540704	CompoundStatement		49:9:1546:1546	2540502	0					
ANR	2540705	ExpressionStatement	"cout << ""  OK: Evaluated internal user function triple ("""	617:3:15308:15365	2540502	0	True				
ANR	2540706	ShiftExpression	"cout << ""  OK: Evaluated internal user function triple ("""		2540502	0		<<			
ANR	2540707	Identifier	cout		2540502	0					
ANR	2540708	PrimaryExpression	"""  OK: Evaluated internal user function triple ("""		2540502	1					
ANR	2540709	ExpressionStatement	"cout << test << "") correctly.\\n"""	618:3:15370:15402	2540502	1	True				
ANR	2540710	ShiftExpression	"cout << test << "") correctly.\\n"""		2540502	0		<<			
ANR	2540711	Identifier	cout		2540502	0					
ANR	2540712	ShiftExpression	"test << "") correctly.\\n"""		2540502	1		<<			
ANR	2540713	Identifier	test		2540502	0					
ANR	2540714	PrimaryExpression	""") correctly.\\n"""		2540502	1					
ANR	2540715	IfStatement	"if ( ! classad -> EvaluateAttrInt ( ""Test2"" , test ) || test != 21 )"		2540502	1					
ANR	2540716	Condition	"! classad -> EvaluateAttrInt ( ""Test2"" , test ) || test != 21"	622:6:15482:15535	2540502	0	True				
ANR	2540717	OrExpression	"! classad -> EvaluateAttrInt ( ""Test2"" , test ) || test != 21"		2540502	0		||			
ANR	2540718	UnaryOperationExpression	"! classad -> EvaluateAttrInt ( ""Test2"" , test )"		2540502	0					
ANR	2540719	UnaryOperator	!		2540502	0					
ANR	2540720	CallExpression	"classad -> EvaluateAttrInt ( ""Test2"" , test )"		2540502	1					
ANR	2540721	Callee	classad -> EvaluateAttrInt		2540502	0					
ANR	2540722	PtrMemberAccess	classad -> EvaluateAttrInt		2540502	0					
ANR	2540723	Identifier	classad		2540502	0					
ANR	2540724	Identifier	EvaluateAttrInt		2540502	1					
ANR	2540725	ArgumentList	"""Test2"""		2540502	1					
ANR	2540726	Argument	"""Test2"""		2540502	0					
ANR	2540727	PrimaryExpression	"""Test2"""		2540502	0					
ANR	2540728	Argument	test		2540502	1					
ANR	2540729	Identifier	test		2540502	0					
ANR	2540730	EqualityExpression	test != 21		2540502	1		!=			
ANR	2540731	Identifier	test		2540502	0					
ANR	2540732	PrimaryExpression	21		2540502	1					
ANR	2540733	CompoundStatement		55:62:1781:1781	2540502	1					
ANR	2540734	ExpressionStatement	"cout << ""  Failed: Couldn't evaluate shared user function double "" << "" ("" << test << "") correctly."" << endl"	623:3:15543:15657	2540502	0	True				
ANR	2540735	ShiftExpression	"cout << ""  Failed: Couldn't evaluate shared user function double "" << "" ("" << test << "") correctly."" << endl"		2540502	0		<<			
ANR	2540736	Identifier	cout		2540502	0					
ANR	2540737	ShiftExpression	"""  Failed: Couldn't evaluate shared user function double "" << "" ("" << test << "") correctly."" << endl"		2540502	1		<<			
ANR	2540738	PrimaryExpression	"""  Failed: Couldn't evaluate shared user function double """		2540502	0					
ANR	2540739	ShiftExpression	""" ("" << test << "") correctly."" << endl"		2540502	1		<<			
ANR	2540740	PrimaryExpression	""" ("""		2540502	0					
ANR	2540741	ShiftExpression	"test << "") correctly."" << endl"		2540502	1		<<			
ANR	2540742	Identifier	test		2540502	0					
ANR	2540743	ShiftExpression	""") correctly."" << endl"		2540502	1		<<			
ANR	2540744	PrimaryExpression	""") correctly."""		2540502	0					
ANR	2540745	Identifier	endl		2540502	1					
ANR	2540746	IfStatement	"if ( ! classad -> EvaluateAttrInt ( ""Test2"" , test ) )"		2540502	1					
ANR	2540747	Condition	"! classad -> EvaluateAttrInt ( ""Test2"" , test )"	625:7:15666:15705	2540502	0	True				
ANR	2540748	UnaryOperationExpression	"! classad -> EvaluateAttrInt ( ""Test2"" , test )"		2540502	0					
ANR	2540749	UnaryOperator	!		2540502	0					
ANR	2540750	CallExpression	"classad -> EvaluateAttrInt ( ""Test2"" , test )"		2540502	1					
ANR	2540751	Callee	classad -> EvaluateAttrInt		2540502	0					
ANR	2540752	PtrMemberAccess	classad -> EvaluateAttrInt		2540502	0					
ANR	2540753	Identifier	classad		2540502	0					
ANR	2540754	Identifier	EvaluateAttrInt		2540502	1					
ANR	2540755	ArgumentList	"""Test2"""		2540502	1					
ANR	2540756	Argument	"""Test2"""		2540502	0					
ANR	2540757	PrimaryExpression	"""Test2"""		2540502	0					
ANR	2540758	Argument	test		2540502	1					
ANR	2540759	Identifier	test		2540502	0					
ANR	2540760	CompoundStatement		58:49:1951:1951	2540502	1					
ANR	2540761	ExpressionStatement	"cout << ""  Couldn't even evaluate it at all."" << endl"	626:4:15714:15767	2540502	0	True				
ANR	2540762	ShiftExpression	"cout << ""  Couldn't even evaluate it at all."" << endl"		2540502	0		<<			
ANR	2540763	Identifier	cout		2540502	0					
ANR	2540764	ShiftExpression	"""  Couldn't even evaluate it at all."" << endl"		2540502	1		<<			
ANR	2540765	PrimaryExpression	"""  Couldn't even evaluate it at all."""		2540502	0					
ANR	2540766	Identifier	endl		2540502	1					
ANR	2540767	ElseStatement	else		2540502	0					
ANR	2540768	CompoundStatement		61:9:2026:2026	2540502	0					
ANR	2540769	ExpressionStatement	"cout << ""  OK: Evaluated shared user function double ("""	629:3:15788:15843	2540502	0	True				
ANR	2540770	ShiftExpression	"cout << ""  OK: Evaluated shared user function double ("""		2540502	0		<<			
ANR	2540771	Identifier	cout		2540502	0					
ANR	2540772	PrimaryExpression	"""  OK: Evaluated shared user function double ("""		2540502	1					
ANR	2540773	ExpressionStatement	"cout << test << "") correctly.\\n"""	630:3:15848:15880	2540502	1	True				
ANR	2540774	ShiftExpression	"cout << test << "") correctly.\\n"""		2540502	0		<<			
ANR	2540775	Identifier	cout		2540502	0					
ANR	2540776	ShiftExpression	"test << "") correctly.\\n"""		2540502	1		<<			
ANR	2540777	Identifier	test		2540502	0					
ANR	2540778	PrimaryExpression	""") correctly.\\n"""		2540502	1					
ANR	2540779	IdentifierDeclStatement	string date ;	634:2:15960:15971	2540502	2	True				
ANR	2540780	IdentifierDecl	date		2540502	0					
ANR	2540781	IdentifierDeclType	string		2540502	0					
ANR	2540782	Identifier	date		2540502	1					
ANR	2540783	IfStatement	"if ( ! classad -> EvaluateAttrString ( ""Test3"" , date ) )"		2540502	3					
ANR	2540784	Condition	"! classad -> EvaluateAttrString ( ""Test3"" , date )"	635:6:15979:16021	2540502	0	True				
ANR	2540785	UnaryOperationExpression	"! classad -> EvaluateAttrString ( ""Test3"" , date )"		2540502	0					
ANR	2540786	UnaryOperator	!		2540502	0					
ANR	2540787	CallExpression	"classad -> EvaluateAttrString ( ""Test3"" , date )"		2540502	1					
ANR	2540788	Callee	classad -> EvaluateAttrString		2540502	0					
ANR	2540789	PtrMemberAccess	classad -> EvaluateAttrString		2540502	0					
ANR	2540790	Identifier	classad		2540502	0					
ANR	2540791	Identifier	EvaluateAttrString		2540502	1					
ANR	2540792	ArgumentList	"""Test3"""		2540502	1					
ANR	2540793	Argument	"""Test3"""		2540502	0					
ANR	2540794	PrimaryExpression	"""Test3"""		2540502	0					
ANR	2540795	Argument	date		2540502	1					
ANR	2540796	Identifier	date		2540502	0					
ANR	2540797	CompoundStatement		68:51:2267:2267	2540502	1					
ANR	2540798	ExpressionStatement	"cout << ""  Failed: Couldn't evaluate shared user function "" << "" todays_date ("" << test << "") correctly."" << endl"	636:3:16029:16148	2540502	0	True				
ANR	2540799	ShiftExpression	"cout << ""  Failed: Couldn't evaluate shared user function "" << "" todays_date ("" << test << "") correctly."" << endl"		2540502	0		<<			
ANR	2540800	Identifier	cout		2540502	0					
ANR	2540801	ShiftExpression	"""  Failed: Couldn't evaluate shared user function "" << "" todays_date ("" << test << "") correctly."" << endl"		2540502	1		<<			
ANR	2540802	PrimaryExpression	"""  Failed: Couldn't evaluate shared user function """		2540502	0					
ANR	2540803	ShiftExpression	""" todays_date ("" << test << "") correctly."" << endl"		2540502	1		<<			
ANR	2540804	PrimaryExpression	""" todays_date ("""		2540502	0					
ANR	2540805	ShiftExpression	"test << "") correctly."" << endl"		2540502	1		<<			
ANR	2540806	Identifier	test		2540502	0					
ANR	2540807	ShiftExpression	""") correctly."" << endl"		2540502	1		<<			
ANR	2540808	PrimaryExpression	""") correctly."""		2540502	0					
ANR	2540809	Identifier	endl		2540502	1					
ANR	2540810	ElseStatement	else		2540502	0					
ANR	2540811	CompoundStatement		71:9:2402:2402	2540502	0					
ANR	2540812	ExpressionStatement	"cout << ""  OK: Evaluated shared function todays_date: """	639:3:16164:16219	2540502	0	True				
ANR	2540813	ShiftExpression	"cout << ""  OK: Evaluated shared function todays_date: """		2540502	0		<<			
ANR	2540814	Identifier	cout		2540502	0					
ANR	2540815	PrimaryExpression	"""  OK: Evaluated shared function todays_date: """		2540502	1					
ANR	2540816	ExpressionStatement	cout << date << endl	640:3:16224:16244	2540502	1	True				
ANR	2540817	ShiftExpression	cout << date << endl		2540502	0		<<			
ANR	2540818	Identifier	cout		2540502	0					
ANR	2540819	ShiftExpression	date << endl		2540502	1		<<			
ANR	2540820	Identifier	date		2540502	0					
ANR	2540821	Identifier	endl		2540502	1					
ANR	2540822	ReturnStatement	return ;	646:1:16266:16272	2540502	25	True				
ANR	2540823	ReturnType	static void		2540502	1					
ANR	2540824	Identifier	test_user_functions		2540502	2					
ANR	2540825	ParameterList			2540502	3					
ANR	2540826	CFGEntryNode	ENTRY		2540502		True				
ANR	2540827	CFGExitNode	EXIT		2540502		True				
ANR	2540828	Symbol	opened_library		2540502						
ANR	2540829	Symbol	date		2540502						
ANR	2540830	Symbol	libname . c_str		2540502						
ANR	2540831	Symbol	NULL		2540502						
ANR	2540832	Symbol	test		2540502						
ANR	2540833	Symbol	* classad		2540502						
ANR	2540834	Symbol	classad_text		2540502						
ANR	2540835	Symbol	classad -> EvaluateAttrString		2540502						
ANR	2540836	Symbol	parser . ParseClassAd		2540502						
ANR	2540837	Symbol	path		2540502						
ANR	2540838	Symbol	FunctionCall :: RegisterSharedLibraryFunctions		2540502						
ANR	2540839	Symbol	parser		2540502						
ANR	2540840	Symbol	triple		2540502						
ANR	2540841	Symbol	libname		2540502						
ANR	2540842	Symbol	TEST_LIBNAME		2540502						
ANR	2540843	Symbol	name		2540502						
ANR	2540844	Symbol	* path		2540502						
ANR	2540845	Symbol	classad		2540502						
ANR	2540846	Symbol	classad -> EvaluateAttrInt		2540502						
ANR	2540847	DeclStmt									
ANR	2540848	Decl							Value	Value	arg
ANR	2540849	DeclStmt									
ANR	2540850	Decl							int	int	int_value
ANR	2540851	DeclStmt									
ANR	2540852	Decl							double	double	real_value
