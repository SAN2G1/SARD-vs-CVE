command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	243470	File	data/converged/CVE-2011-4930_htcondor/MgmtStartdPlugin.cpp								
ANR	243471	DeclStmt									
ANR	243472	Decl							extern char	extern char *	Name
ANR	243473	ClassDef	MgmtStartdPlugin	38:0:989:4640							
ANR	243474	DeclStmt									
ANR	243475	Decl							ManagementAgent :: Singleton	ManagementAgent :: Singleton *	singleton
ANR	243476	DeclStmt									
ANR	243477	Decl							"HashTable < AdNameHashKey , SlotObject * >"	"HashTable < AdNameHashKey , SlotObject * >"	SlotHashTable
ANR	243478	DeclStmt									
ANR	243479	Decl							SlotHashTable	SlotHashTable *	startdAds
ANR	243480	Function	initialize	49:1:1316:3123							
ANR	243481	FunctionDef	initialize ()		243480	3					
ANR	243482	CompoundStatement		51:1:1336:3123	243480	0					
ANR	243483	IdentifierDeclStatement	char * host ;	52:2:1340:1350	243480	0	True				
ANR	243484	IdentifierDecl	* host		243480	0					
ANR	243485	IdentifierDeclType	char *		243480	0					
ANR	243486	Identifier	host		243480	1					
ANR	243487	IdentifierDeclStatement	char * username ;	53:2:1354:1368	243480	1	True				
ANR	243488	IdentifierDecl	* username		243480	0					
ANR	243489	IdentifierDeclType	char *		243480	0					
ANR	243490	Identifier	username		243480	1					
ANR	243491	IdentifierDeclStatement	char * password ;	54:2:1372:1386	243480	2	True				
ANR	243492	IdentifierDecl	* password		243480	0					
ANR	243493	IdentifierDeclType	char *		243480	0					
ANR	243494	Identifier	password		243480	1					
ANR	243495	IdentifierDeclStatement	char * mechanism ;	55:2:1390:1405	243480	3	True				
ANR	243496	IdentifierDecl	* mechanism		243480	0					
ANR	243497	IdentifierDeclType	char *		243480	0					
ANR	243498	Identifier	mechanism		243480	1					
ANR	243499	IdentifierDeclStatement	int port ;	56:2:1409:1417	243480	4	True				
ANR	243500	IdentifierDecl	port		243480	0					
ANR	243501	IdentifierDeclType	int		243480	0					
ANR	243502	Identifier	port		243480	1					
ANR	243503	IdentifierDeclStatement	char * tmp ;	57:2:1421:1430	243480	5	True				
ANR	243504	IdentifierDecl	* tmp		243480	0					
ANR	243505	IdentifierDeclType	char *		243480	0					
ANR	243506	Identifier	tmp		243480	1					
ANR	243507	IdentifierDeclStatement	string storefile ;	58:2:1434:1450	243480	6	True				
ANR	243508	IdentifierDecl	storefile		243480	0					
ANR	243509	IdentifierDeclType	string		243480	0					
ANR	243510	Identifier	storefile		243480	1					
ANR	243511	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""MgmtStartdPlugin: Initializing...\\n"" )"	60:2:1455:1514	243480	7	True				
ANR	243512	CallExpression	"dprintf ( D_FULLDEBUG , ""MgmtStartdPlugin: Initializing...\\n"" )"		243480	0					
ANR	243513	Callee	dprintf		243480	0					
ANR	243514	Identifier	dprintf		243480	0					
ANR	243515	ArgumentList	D_FULLDEBUG		243480	1					
ANR	243516	Argument	D_FULLDEBUG		243480	0					
ANR	243517	Identifier	D_FULLDEBUG		243480	0					
ANR	243518	Argument	"""MgmtStartdPlugin: Initializing...\\n"""		243480	1					
ANR	243519	PrimaryExpression	"""MgmtStartdPlugin: Initializing...\\n"""		243480	0					
ANR	243520	ExpressionStatement	singleton = new ManagementAgent :: Singleton ( )	62:2:1519:1563	243480	8	True				
ANR	243521	AssignmentExpression	singleton = new ManagementAgent :: Singleton ( )		243480	0		=			
ANR	243522	Identifier	singleton		243480	0					
ANR	243523	UnaryExpression	new ManagementAgent :: Singleton ( )		243480	1					
ANR	243524	ExpressionStatement	"startdAds = new SlotHashTable ( 4096 , & adNameHashFunction )"	64:2:1568:1624	243480	9	True				
ANR	243525	AssignmentExpression	"startdAds = new SlotHashTable ( 4096 , & adNameHashFunction )"		243480	0		=			
ANR	243526	Identifier	startdAds		243480	0					
ANR	243527	Expression	"4096 , & adNameHashFunction"		243480	1					
ANR	243528	PrimaryExpression	4096		243480	0					
ANR	243529	UnaryOperationExpression	& adNameHashFunction		243480	1					
ANR	243530	UnaryOperator	&		243480	0					
ANR	243531	Identifier	adNameHashFunction		243480	1					
ANR	243532	IdentifierDeclStatement	ManagementAgent * agent = singleton -> getInstance ( ) ;	66:2:1629:1678	243480	10	True				
ANR	243533	IdentifierDecl	* agent = singleton -> getInstance ( )		243480	0					
ANR	243534	IdentifierDeclType	ManagementAgent *		243480	0					
ANR	243535	Identifier	agent		243480	1					
ANR	243536	AssignmentExpression	* agent = singleton -> getInstance ( )		243480	2		=			
ANR	243537	Identifier	agent		243480	0					
ANR	243538	CallExpression	singleton -> getInstance ( )		243480	1					
ANR	243539	Callee	singleton -> getInstance		243480	0					
ANR	243540	PtrMemberAccess	singleton -> getInstance		243480	0					
ANR	243541	Identifier	singleton		243480	0					
ANR	243542	Identifier	getInstance		243480	1					
ANR	243543	ArgumentList			243480	1					
ANR	243544	ExpressionStatement	Slot :: registerSelf ( agent )	68:2:1683:1708	243480	11	True				
ANR	243545	CallExpression	Slot :: registerSelf ( agent )		243480	0					
ANR	243546	Callee	Slot :: registerSelf		243480	0					
ANR	243547	Identifier	Slot :: registerSelf		243480	0					
ANR	243548	ArgumentList	agent		243480	1					
ANR	243549	Argument	agent		243480	0					
ANR	243550	Identifier	agent		243480	0					
ANR	243551	ExpressionStatement	"port = param_integer ( ""QMF_BROKER_PORT"" , 5672 )"	70:2:1713:1758	243480	12	True				
ANR	243552	AssignmentExpression	"port = param_integer ( ""QMF_BROKER_PORT"" , 5672 )"		243480	0		=			
ANR	243553	Identifier	port		243480	0					
ANR	243554	CallExpression	"param_integer ( ""QMF_BROKER_PORT"" , 5672 )"		243480	1					
ANR	243555	Callee	param_integer		243480	0					
ANR	243556	Identifier	param_integer		243480	0					
ANR	243557	ArgumentList	"""QMF_BROKER_PORT"""		243480	1					
ANR	243558	Argument	"""QMF_BROKER_PORT"""		243480	0					
ANR	243559	PrimaryExpression	"""QMF_BROKER_PORT"""		243480	0					
ANR	243560	Argument	5672		243480	1					
ANR	243561	PrimaryExpression	5672		243480	0					
ANR	243562	IfStatement	"if ( NULL == ( host = param ( ""QMF_BROKER_HOST"" ) ) )"		243480	13					
ANR	243563	Condition	"NULL == ( host = param ( ""QMF_BROKER_HOST"" ) )"	71:6:1766:1806	243480	0	True				
ANR	243564	EqualityExpression	"NULL == ( host = param ( ""QMF_BROKER_HOST"" ) )"		243480	0		==			
ANR	243565	Identifier	NULL		243480	0					
ANR	243566	AssignmentExpression	"host = param ( ""QMF_BROKER_HOST"" )"		243480	1		=			
ANR	243567	Identifier	host		243480	0					
ANR	243568	CallExpression	"param ( ""QMF_BROKER_HOST"" )"		243480	1					
ANR	243569	Callee	param		243480	0					
ANR	243570	Identifier	param		243480	0					
ANR	243571	ArgumentList	"""QMF_BROKER_HOST"""		243480	1					
ANR	243572	Argument	"""QMF_BROKER_HOST"""		243480	0					
ANR	243573	PrimaryExpression	"""QMF_BROKER_HOST"""		243480	0					
ANR	243574	CompoundStatement		21:49:472:472	243480	1					
ANR	243575	ExpressionStatement	"host = strdup ( ""localhost"" )"	72:3:1814:1840	243480	0	True				
ANR	243576	AssignmentExpression	"host = strdup ( ""localhost"" )"		243480	0		=			
ANR	243577	Identifier	host		243480	0					
ANR	243578	CallExpression	"strdup ( ""localhost"" )"		243480	1					
ANR	243579	Callee	strdup		243480	0					
ANR	243580	Identifier	strdup		243480	0					
ANR	243581	ArgumentList	"""localhost"""		243480	1					
ANR	243582	Argument	"""localhost"""		243480	0					
ANR	243583	PrimaryExpression	"""localhost"""		243480	0					
ANR	243584	ExpressionStatement	"tmp = param ( ""QMF_STOREFILE"" )"	75:2:1849:1877	243480	14	True				
ANR	243585	AssignmentExpression	"tmp = param ( ""QMF_STOREFILE"" )"		243480	0		=			
ANR	243586	Identifier	tmp		243480	0					
ANR	243587	CallExpression	"param ( ""QMF_STOREFILE"" )"		243480	1					
ANR	243588	Callee	param		243480	0					
ANR	243589	Identifier	param		243480	0					
ANR	243590	ArgumentList	"""QMF_STOREFILE"""		243480	1					
ANR	243591	Argument	"""QMF_STOREFILE"""		243480	0					
ANR	243592	PrimaryExpression	"""QMF_STOREFILE"""		243480	0					
ANR	243593	IfStatement	if ( NULL == tmp )		243480	15					
ANR	243594	Condition	NULL == tmp	76:6:1885:1895	243480	0	True				
ANR	243595	EqualityExpression	NULL == tmp		243480	0		==			
ANR	243596	Identifier	NULL		243480	0					
ANR	243597	Identifier	tmp		243480	1					
ANR	243598	CompoundStatement		26:19:561:561	243480	1					
ANR	243599	ExpressionStatement	"storefile = "".startd_storefile"""	77:3:1903:1934	243480	0	True				
ANR	243600	AssignmentExpression	"storefile = "".startd_storefile"""		243480	0		=			
ANR	243601	Identifier	storefile		243480	0					
ANR	243602	PrimaryExpression	""".startd_storefile"""		243480	1					
ANR	243603	ElseStatement	else		243480	0					
ANR	243604	CompoundStatement		28:9:608:608	243480	0					
ANR	243605	ExpressionStatement	storefile = tmp	79:3:1950:1965	243480	0	True				
ANR	243606	AssignmentExpression	storefile = tmp		243480	0		=			
ANR	243607	Identifier	storefile		243480	0					
ANR	243608	Identifier	tmp		243480	1					
ANR	243609	ExpressionStatement	free ( tmp )	80:3:1970:1979	243480	1	True				
ANR	243610	CallExpression	free ( tmp )		243480	0					
ANR	243611	Callee	free		243480	0					
ANR	243612	Identifier	free		243480	0					
ANR	243613	ArgumentList	tmp		243480	1					
ANR	243614	Argument	tmp		243480	0					
ANR	243615	Identifier	tmp		243480	0					
ANR	243616	ExpressionStatement	tmp = NULL	80:14:1981:1991	243480	2	True				
ANR	243617	AssignmentExpression	tmp = NULL		243480	0		=			
ANR	243618	Identifier	tmp		243480	0					
ANR	243619	Identifier	NULL		243480	1					
ANR	243620	IfStatement	"if ( NULL == ( username = param ( ""QMF_BROKER_USERNAME"" ) ) )"		243480	16					
ANR	243621	Condition	"NULL == ( username = param ( ""QMF_BROKER_USERNAME"" ) )"	83:6:2004:2052	243480	0	True				
ANR	243622	EqualityExpression	"NULL == ( username = param ( ""QMF_BROKER_USERNAME"" ) )"		243480	0		==			
ANR	243623	Identifier	NULL		243480	0					
ANR	243624	AssignmentExpression	"username = param ( ""QMF_BROKER_USERNAME"" )"		243480	1		=			
ANR	243625	Identifier	username		243480	0					
ANR	243626	CallExpression	"param ( ""QMF_BROKER_USERNAME"" )"		243480	1					
ANR	243627	Callee	param		243480	0					
ANR	243628	Identifier	param		243480	0					
ANR	243629	ArgumentList	"""QMF_BROKER_USERNAME"""		243480	1					
ANR	243630	Argument	"""QMF_BROKER_USERNAME"""		243480	0					
ANR	243631	PrimaryExpression	"""QMF_BROKER_USERNAME"""		243480	0					
ANR	243632	CompoundStatement		34:2:720:720	243480	1					
ANR	243633	ExpressionStatement	"username = strdup ( """" )"	85:3:2062:2083	243480	0	True				
ANR	243634	AssignmentExpression	"username = strdup ( """" )"		243480	0		=			
ANR	243635	Identifier	username		243480	0					
ANR	243636	CallExpression	"strdup ( """" )"		243480	1					
ANR	243637	Callee	strdup		243480	0					
ANR	243638	Identifier	strdup		243480	0					
ANR	243639	ArgumentList	""""""		243480	1					
ANR	243640	Argument	""""""		243480	0					
ANR	243641	PrimaryExpression	""""""		243480	0					
ANR	243642	IfStatement	"if ( NULL == ( mechanism = param ( ""QMF_BROKER_AUTH_MECH"" ) ) )"		243480	17					
ANR	243643	Condition	"NULL == ( mechanism = param ( ""QMF_BROKER_AUTH_MECH"" ) )"	88:6:2096:2146	243480	0	True				
ANR	243644	EqualityExpression	"NULL == ( mechanism = param ( ""QMF_BROKER_AUTH_MECH"" ) )"		243480	0		==			
ANR	243645	Identifier	NULL		243480	0					
ANR	243646	AssignmentExpression	"mechanism = param ( ""QMF_BROKER_AUTH_MECH"" )"		243480	1		=			
ANR	243647	Identifier	mechanism		243480	0					
ANR	243648	CallExpression	"param ( ""QMF_BROKER_AUTH_MECH"" )"		243480	1					
ANR	243649	Callee	param		243480	0					
ANR	243650	Identifier	param		243480	0					
ANR	243651	ArgumentList	"""QMF_BROKER_AUTH_MECH"""		243480	1					
ANR	243652	Argument	"""QMF_BROKER_AUTH_MECH"""		243480	0					
ANR	243653	PrimaryExpression	"""QMF_BROKER_AUTH_MECH"""		243480	0					
ANR	243654	CompoundStatement		39:2:814:814	243480	1					
ANR	243655	ExpressionStatement	"mechanism = strdup ( ""ANONYMOUS"" )"	90:3:2156:2187	243480	0	True				
ANR	243656	AssignmentExpression	"mechanism = strdup ( ""ANONYMOUS"" )"		243480	0		=			
ANR	243657	Identifier	mechanism		243480	0					
ANR	243658	CallExpression	"strdup ( ""ANONYMOUS"" )"		243480	1					
ANR	243659	Callee	strdup		243480	0					
ANR	243660	Identifier	strdup		243480	0					
ANR	243661	ArgumentList	"""ANONYMOUS"""		243480	1					
ANR	243662	Argument	"""ANONYMOUS"""		243480	0					
ANR	243663	PrimaryExpression	"""ANONYMOUS"""		243480	0					
ANR	243664	ExpressionStatement	password = getBrokerPassword ( )	93:2:2196:2226	243480	18	True				
ANR	243665	AssignmentExpression	password = getBrokerPassword ( )		243480	0		=			
ANR	243666	Identifier	password		243480	0					
ANR	243667	CallExpression	getBrokerPassword ( )		243480	1					
ANR	243668	Callee	getBrokerPassword		243480	0					
ANR	243669	Identifier	getBrokerPassword		243480	0					
ANR	243670	ArgumentList			243480	1					
ANR	243671	IdentifierDeclStatement	std :: string startd_name = default_daemon_name ( ) ;	95:2:2231:2278	243480	19	True				
ANR	243672	IdentifierDecl	startd_name = default_daemon_name ( )		243480	0					
ANR	243673	IdentifierDeclType	std :: string		243480	0					
ANR	243674	Identifier	startd_name		243480	1					
ANR	243675	AssignmentExpression	startd_name = default_daemon_name ( )		243480	2		=			
ANR	243676	Identifier	startd_name		243480	0					
ANR	243677	CallExpression	default_daemon_name ( )		243480	1					
ANR	243678	Callee	default_daemon_name		243480	0					
ANR	243679	Identifier	default_daemon_name		243480	0					
ANR	243680	ArgumentList			243480	1					
ANR	243681	IfStatement	if ( Name )		243480	20					
ANR	243682	Condition	Name	96:6:2286:2289	243480	0	True				
ANR	243683	Identifier	Name		243480	0					
ANR	243684	CompoundStatement		46:13:956:956	243480	1					
ANR	243685	ExpressionStatement	startd_name = Name	97:3:2298:2316	243480	0	True				
ANR	243686	AssignmentExpression	startd_name = Name		243480	0		=			
ANR	243687	Identifier	startd_name		243480	0					
ANR	243688	Identifier	Name		243480	1					
ANR	243689	ExpressionStatement	"agent -> setName ( ""com.redhat.grid"" , ""slot"" , startd_name . c_str ( ) )"	100:2:2325:2385	243480	21	True				
ANR	243690	CallExpression	"agent -> setName ( ""com.redhat.grid"" , ""slot"" , startd_name . c_str ( ) )"		243480	0					
ANR	243691	Callee	agent -> setName		243480	0					
ANR	243692	PtrMemberAccess	agent -> setName		243480	0					
ANR	243693	Identifier	agent		243480	0					
ANR	243694	Identifier	setName		243480	1					
ANR	243695	ArgumentList	"""com.redhat.grid"""		243480	1					
ANR	243696	Argument	"""com.redhat.grid"""		243480	0					
ANR	243697	PrimaryExpression	"""com.redhat.grid"""		243480	0					
ANR	243698	Argument	"""slot"""		243480	1					
ANR	243699	PrimaryExpression	"""slot"""		243480	0					
ANR	243700	Argument	startd_name . c_str ( )		243480	2					
ANR	243701	CallExpression	startd_name . c_str ( )		243480	0					
ANR	243702	Callee	startd_name . c_str		243480	0					
ANR	243703	MemberAccess	startd_name . c_str		243480	0					
ANR	243704	Identifier	startd_name		243480	0					
ANR	243705	Identifier	c_str		243480	1					
ANR	243706	ArgumentList			243480	1					
ANR	243707	ExpressionStatement	"agent -> init ( string ( host ) , port , param_integer ( ""QMF_UPDATE_INTERVAL"" , 10 ) , true , storefile , username , password , mechanism )"	101:2:2389:2540	243480	22	True				
ANR	243708	CallExpression	"agent -> init ( string ( host ) , port , param_integer ( ""QMF_UPDATE_INTERVAL"" , 10 ) , true , storefile , username , password , mechanism )"		243480	0					
ANR	243709	Callee	agent -> init		243480	0					
ANR	243710	PtrMemberAccess	agent -> init		243480	0					
ANR	243711	Identifier	agent		243480	0					
ANR	243712	Identifier	init		243480	1					
ANR	243713	ArgumentList	string ( host )		243480	1					
ANR	243714	Argument	string ( host )		243480	0					
ANR	243715	CallExpression	string ( host )		243480	0					
ANR	243716	Callee	string		243480	0					
ANR	243717	Identifier	string		243480	0					
ANR	243718	ArgumentList	host		243480	1					
ANR	243719	Argument	host		243480	0					
ANR	243720	Identifier	host		243480	0					
ANR	243721	Argument	port		243480	1					
ANR	243722	Identifier	port		243480	0					
ANR	243723	Argument	"param_integer ( ""QMF_UPDATE_INTERVAL"" , 10 )"		243480	2					
ANR	243724	CallExpression	"param_integer ( ""QMF_UPDATE_INTERVAL"" , 10 )"		243480	0					
ANR	243725	Callee	param_integer		243480	0					
ANR	243726	Identifier	param_integer		243480	0					
ANR	243727	ArgumentList	"""QMF_UPDATE_INTERVAL"""		243480	1					
ANR	243728	Argument	"""QMF_UPDATE_INTERVAL"""		243480	0					
ANR	243729	PrimaryExpression	"""QMF_UPDATE_INTERVAL"""		243480	0					
ANR	243730	Argument	10		243480	1					
ANR	243731	PrimaryExpression	10		243480	0					
ANR	243732	Argument	true		243480	3					
ANR	243733	Identifier	true		243480	0					
ANR	243734	Argument	storefile		243480	4					
ANR	243735	Identifier	storefile		243480	0					
ANR	243736	Argument	username		243480	5					
ANR	243737	Identifier	username		243480	0					
ANR	243738	Argument	password		243480	6					
ANR	243739	Identifier	password		243480	0					
ANR	243740	Argument	mechanism		243480	7					
ANR	243741	Identifier	mechanism		243480	0					
ANR	243742	ExpressionStatement	free ( host )	109:2:2545:2555	243480	23	True				
ANR	243743	CallExpression	free ( host )		243480	0					
ANR	243744	Callee	free		243480	0					
ANR	243745	Identifier	free		243480	0					
ANR	243746	ArgumentList	host		243480	1					
ANR	243747	Argument	host		243480	0					
ANR	243748	Identifier	host		243480	0					
ANR	243749	ExpressionStatement	free ( username )	110:2:2559:2573	243480	24	True				
ANR	243750	CallExpression	free ( username )		243480	0					
ANR	243751	Callee	free		243480	0					
ANR	243752	Identifier	free		243480	0					
ANR	243753	ArgumentList	username		243480	1					
ANR	243754	Argument	username		243480	0					
ANR	243755	Identifier	username		243480	0					
ANR	243756	ExpressionStatement	free ( password )	111:2:2577:2591	243480	25	True				
ANR	243757	CallExpression	free ( password )		243480	0					
ANR	243758	Callee	free		243480	0					
ANR	243759	Identifier	free		243480	0					
ANR	243760	ArgumentList	password		243480	1					
ANR	243761	Argument	password		243480	0					
ANR	243762	Identifier	password		243480	0					
ANR	243763	ExpressionStatement	free ( mechanism )	112:2:2595:2610	243480	26	True				
ANR	243764	CallExpression	free ( mechanism )		243480	0					
ANR	243765	Callee	free		243480	0					
ANR	243766	Identifier	free		243480	0					
ANR	243767	ArgumentList	mechanism		243480	1					
ANR	243768	Argument	mechanism		243480	0					
ANR	243769	Identifier	mechanism		243480	0					
ANR	243770	Statement	ReliSock	114:2:2615:2622	243480	27	True				
ANR	243771	Statement	*	114:11:2624:2624	243480	28	True				
ANR	243772	Statement	sock	114:12:2625:2628	243480	29	True				
ANR	243773	Statement	=	114:17:2630:2630	243480	30	True				
ANR	243774	Statement	new	114:19:2632:2634	243480	31	True				
ANR	243775	ExpressionStatement	ReliSock	114:23:2636:2644	243480	32	True				
ANR	243776	Identifier	ReliSock		243480	0					
ANR	243777	IfStatement	if ( ! sock )		243480	33					
ANR	243778	Condition	! sock	115:6:2652:2656	243480	0	True				
ANR	243779	UnaryOperationExpression	! sock		243480	0					
ANR	243780	UnaryOperator	!		243480	0					
ANR	243781	Identifier	sock		243480	1					
ANR	243782	CompoundStatement		65:13:1322:1322	243480	1					
ANR	243783	ExpressionStatement	"EXCEPT ( ""Failed to allocate Mgmt socket"" )"	116:3:2664:2704	243480	0	True				
ANR	243784	CallExpression	"EXCEPT ( ""Failed to allocate Mgmt socket"" )"		243480	0					
ANR	243785	Callee	EXCEPT		243480	0					
ANR	243786	Identifier	EXCEPT		243480	0					
ANR	243787	ArgumentList	"""Failed to allocate Mgmt socket"""		243480	1					
ANR	243788	Argument	"""Failed to allocate Mgmt socket"""		243480	0					
ANR	243789	PrimaryExpression	"""Failed to allocate Mgmt socket"""		243480	0					
ANR	243790	IfStatement	if ( ! sock -> assign ( agent -> getSignalFd ( ) ) )		243480	34					
ANR	243791	Condition	! sock -> assign ( agent -> getSignalFd ( ) )	118:6:2716:2750	243480	0	True				
ANR	243792	UnaryOperationExpression	! sock -> assign ( agent -> getSignalFd ( ) )		243480	0					
ANR	243793	UnaryOperator	!		243480	0					
ANR	243794	CallExpression	sock -> assign ( agent -> getSignalFd ( ) )		243480	1					
ANR	243795	Callee	sock -> assign		243480	0					
ANR	243796	PtrMemberAccess	sock -> assign		243480	0					
ANR	243797	Identifier	sock		243480	0					
ANR	243798	Identifier	assign		243480	1					
ANR	243799	ArgumentList	agent -> getSignalFd ( )		243480	1					
ANR	243800	Argument	agent -> getSignalFd ( )		243480	0					
ANR	243801	CallExpression	agent -> getSignalFd ( )		243480	0					
ANR	243802	Callee	agent -> getSignalFd		243480	0					
ANR	243803	PtrMemberAccess	agent -> getSignalFd		243480	0					
ANR	243804	Identifier	agent		243480	0					
ANR	243805	Identifier	getSignalFd		243480	1					
ANR	243806	ArgumentList			243480	1					
ANR	243807	CompoundStatement		68:43:1416:1416	243480	1					
ANR	243808	ExpressionStatement	"EXCEPT ( ""Failed to bind Mgmt socket"" )"	119:3:2758:2794	243480	0	True				
ANR	243809	CallExpression	"EXCEPT ( ""Failed to bind Mgmt socket"" )"		243480	0					
ANR	243810	Callee	EXCEPT		243480	0					
ANR	243811	Identifier	EXCEPT		243480	0					
ANR	243812	ArgumentList	"""Failed to bind Mgmt socket"""		243480	1					
ANR	243813	Argument	"""Failed to bind Mgmt socket"""		243480	0					
ANR	243814	PrimaryExpression	"""Failed to bind Mgmt socket"""		243480	0					
ANR	243815	IdentifierDeclStatement	int index ;	121:2:2802:2811	243480	35	True				
ANR	243816	IdentifierDecl	index		243480	0					
ANR	243817	IdentifierDeclType	int		243480	0					
ANR	243818	Identifier	index		243480	1					
ANR	243819	IfStatement	"if ( - 1 == ( index = daemonCore -> Register_Socket ( ( Stream * ) sock , ""Mgmt Method Socket"" , ( SocketHandlercpp ) & MgmtStartdPlugin :: HandleMgmtSocket , ""Handler for Mgmt Methods."" , this ) ) )"		243480	36					
ANR	243820	Condition	"- 1 == ( index = daemonCore -> Register_Socket ( ( Stream * ) sock , ""Mgmt Method Socket"" , ( SocketHandlercpp ) & MgmtStartdPlugin :: HandleMgmtSocket , ""Handler for Mgmt Methods."" , this ) )"	122:6:2819:3068	243480	0	True				
ANR	243821	EqualityExpression	"- 1 == ( index = daemonCore -> Register_Socket ( ( Stream * ) sock , ""Mgmt Method Socket"" , ( SocketHandlercpp ) & MgmtStartdPlugin :: HandleMgmtSocket , ""Handler for Mgmt Methods."" , this ) )"		243480	0		==			
ANR	243822	UnaryOperationExpression	- 1		243480	0					
ANR	243823	UnaryOperator	-		243480	0					
ANR	243824	PrimaryExpression	1		243480	1					
ANR	243825	AssignmentExpression	"index = daemonCore -> Register_Socket ( ( Stream * ) sock , ""Mgmt Method Socket"" , ( SocketHandlercpp ) & MgmtStartdPlugin :: HandleMgmtSocket , ""Handler for Mgmt Methods."" , this )"		243480	1		=			
ANR	243826	Identifier	index		243480	0					
ANR	243827	CallExpression	"daemonCore -> Register_Socket ( ( Stream * ) sock , ""Mgmt Method Socket"" , ( SocketHandlercpp ) & MgmtStartdPlugin :: HandleMgmtSocket , ""Handler for Mgmt Methods."" , this )"		243480	1					
ANR	243828	Callee	daemonCore -> Register_Socket		243480	0					
ANR	243829	PtrMemberAccess	daemonCore -> Register_Socket		243480	0					
ANR	243830	Identifier	daemonCore		243480	0					
ANR	243831	Identifier	Register_Socket		243480	1					
ANR	243832	ArgumentList	( Stream * ) sock		243480	1					
ANR	243833	Argument	( Stream * ) sock		243480	0					
ANR	243834	CastExpression	( Stream * ) sock		243480	0					
ANR	243835	CastTarget	Stream *		243480	0					
ANR	243836	Identifier	sock		243480	1					
ANR	243837	Argument	"""Mgmt Method Socket"""		243480	1					
ANR	243838	PrimaryExpression	"""Mgmt Method Socket"""		243480	0					
ANR	243839	Argument	( SocketHandlercpp ) & MgmtStartdPlugin :: HandleMgmtSocket		243480	2					
ANR	243840	CastExpression	( SocketHandlercpp ) & MgmtStartdPlugin :: HandleMgmtSocket		243480	0					
ANR	243841	CastTarget	SocketHandlercpp		243480	0					
ANR	243842	UnaryOperationExpression	& MgmtStartdPlugin :: HandleMgmtSocket		243480	1					
ANR	243843	UnaryOperator	&		243480	0					
ANR	243844	Identifier	MgmtStartdPlugin :: HandleMgmtSocket		243480	1					
ANR	243845	Argument	"""Handler for Mgmt Methods."""		243480	3					
ANR	243846	PrimaryExpression	"""Handler for Mgmt Methods."""		243480	0					
ANR	243847	Argument	this		243480	4					
ANR	243848	Identifier	this		243480	0					
ANR	243849	CompoundStatement		78:22:1734:1734	243480	1					
ANR	243850	ExpressionStatement	"EXCEPT ( ""Failed to register Mgmt socket"" )"	129:3:3076:3116	243480	0	True				
ANR	243851	CallExpression	"EXCEPT ( ""Failed to register Mgmt socket"" )"		243480	0					
ANR	243852	Callee	EXCEPT		243480	0					
ANR	243853	Identifier	EXCEPT		243480	0					
ANR	243854	ArgumentList	"""Failed to register Mgmt socket"""		243480	1					
ANR	243855	Argument	"""Failed to register Mgmt socket"""		243480	0					
ANR	243856	PrimaryExpression	"""Failed to register Mgmt socket"""		243480	0					
ANR	243857	ReturnType	void		243480	1					
ANR	243858	Identifier	initialize		243480	2					
ANR	243859	ParameterList			243480	3					
ANR	243860	CFGEntryNode	ENTRY		243480		True				
ANR	243861	CFGExitNode	EXIT		243480		True				
ANR	243862	Symbol	agent		243480						
ANR	243863	Symbol	string		243480						
ANR	243864	Symbol	agent -> getSignalFd		243480						
ANR	243865	Symbol	getBrokerPassword		243480						
ANR	243866	Symbol	* singleton		243480						
ANR	243867	Symbol	startd_name . c_str		243480						
ANR	243868	Symbol	Name		243480						
ANR	243869	Symbol	password		243480						
ANR	243870	Symbol	startdAds		243480						
ANR	243871	Symbol	& adNameHashFunction		243480						
ANR	243872	Symbol	singleton -> getInstance		243480						
ANR	243873	Symbol	param		243480						
ANR	243874	Symbol	tmp		243480						
ANR	243875	Symbol	daemonCore -> Register_Socket		243480						
ANR	243876	Symbol	daemonCore		243480						
ANR	243877	Symbol	host		243480						
ANR	243878	Symbol	mechanism		243480						
ANR	243879	Symbol	default_daemon_name		243480						
ANR	243880	Symbol	* sock		243480						
ANR	243881	Symbol	singleton		243480						
ANR	243882	Symbol	NULL		243480						
ANR	243883	Symbol	* agent		243480						
ANR	243884	Symbol	this		243480						
ANR	243885	Symbol	index		243480						
ANR	243886	Symbol	D_FULLDEBUG		243480						
ANR	243887	Symbol	sock		243480						
ANR	243888	Symbol	sock -> assign		243480						
ANR	243889	Symbol	port		243480						
ANR	243890	Symbol	startd_name		243480						
ANR	243891	Symbol	* daemonCore		243480						
ANR	243892	Symbol	true		243480						
ANR	243893	Symbol	param_integer		243480						
ANR	243894	Symbol	strdup		243480						
ANR	243895	Symbol	& MgmtStartdPlugin :: HandleMgmtSocket		243480						
ANR	243896	Symbol	storefile		243480						
ANR	243897	Symbol	username		243480						
ANR	243898	Function	shutdown	133:1:3127:3397							
ANR	243899	FunctionDef	shutdown ()		243898	4					
ANR	243900	CompoundStatement		135:1:3145:3397	243898	0					
ANR	243901	IfStatement	"if ( ! param_boolean ( ""QMF_DELETE_ON_SHUTDOWN"" , true ) )"		243898	0					
ANR	243902	Condition	"! param_boolean ( ""QMF_DELETE_ON_SHUTDOWN"" , true )"	136:6:3153:3198	243898	0	True				
ANR	243903	UnaryOperationExpression	"! param_boolean ( ""QMF_DELETE_ON_SHUTDOWN"" , true )"		243898	0					
ANR	243904	UnaryOperator	!		243898	0					
ANR	243905	CallExpression	"param_boolean ( ""QMF_DELETE_ON_SHUTDOWN"" , true )"		243898	1					
ANR	243906	Callee	param_boolean		243898	0					
ANR	243907	Identifier	param_boolean		243898	0					
ANR	243908	ArgumentList	"""QMF_DELETE_ON_SHUTDOWN"""		243898	1					
ANR	243909	Argument	"""QMF_DELETE_ON_SHUTDOWN"""		243898	0					
ANR	243910	PrimaryExpression	"""QMF_DELETE_ON_SHUTDOWN"""		243898	0					
ANR	243911	Argument	true		243898	1					
ANR	243912	Identifier	true		243898	0					
ANR	243913	CompoundStatement		2:54:55:55	243898	1					
ANR	243914	ReturnStatement	return ;	137:3:3206:3212	243898	0	True				
ANR	243915	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""MgmtStartdPlugin: shutting down...\\n"" )"	140:2:3221:3281	243898	1	True				
ANR	243916	CallExpression	"dprintf ( D_FULLDEBUG , ""MgmtStartdPlugin: shutting down...\\n"" )"		243898	0					
ANR	243917	Callee	dprintf		243898	0					
ANR	243918	Identifier	dprintf		243898	0					
ANR	243919	ArgumentList	D_FULLDEBUG		243898	1					
ANR	243920	Argument	D_FULLDEBUG		243898	0					
ANR	243921	Identifier	D_FULLDEBUG		243898	0					
ANR	243922	Argument	"""MgmtStartdPlugin: shutting down...\\n"""		243898	1					
ANR	243923	PrimaryExpression	"""MgmtStartdPlugin: shutting down...\\n"""		243898	0					
ANR	243924	IfStatement	if ( singleton )		243898	2					
ANR	243925	Condition	singleton	144:6:3337:3345	243898	0	True				
ANR	243926	Identifier	singleton		243898	0					
ANR	243927	CompoundStatement		10:17:202:202	243898	1					
ANR	243928	Statement	delete	145:3:3353:3358	243898	0	True				
ANR	243929	ExpressionStatement	singleton	145:10:3360:3369	243898	1	True				
ANR	243930	Identifier	singleton		243898	0					
ANR	243931	ExpressionStatement	singleton = NULL	146:3:3374:3390	243898	2	True				
ANR	243932	AssignmentExpression	singleton = NULL		243898	0		=			
ANR	243933	Identifier	singleton		243898	0					
ANR	243934	Identifier	NULL		243898	1					
ANR	243935	ReturnType	void		243898	1					
ANR	243936	Identifier	shutdown		243898	2					
ANR	243937	ParameterList			243898	3					
ANR	243938	CFGEntryNode	ENTRY		243898		True				
ANR	243939	CFGExitNode	EXIT		243898		True				
ANR	243940	Symbol	singleton		243898						
ANR	243941	Symbol	NULL		243898						
ANR	243942	Symbol	true		243898						
ANR	243943	Symbol	param_boolean		243898						
ANR	243944	Symbol	D_FULLDEBUG		243898						
ANR	243945	DeclStmt									
ANR	243946	Decl							AdNameHashKey	AdNameHashKey	hashKey
ANR	243947	DeclStmt									
ANR	243948	Decl							SlotObject	SlotObject *	slotObject
ANR	243949	Function	invalidate	172:1:3930:4411							
ANR	243950	FunctionDef	invalidate (const ClassAd * ad)		243949	7					
ANR	243951	CompoundStatement		174:1:3967:4411	243949	0					
ANR	243952	IdentifierDeclStatement	AdNameHashKey hashKey ;	175:2:3971:3992	243949	0	True				
ANR	243953	IdentifierDecl	hashKey		243949	0					
ANR	243954	IdentifierDeclType	AdNameHashKey		243949	0					
ANR	243955	Identifier	hashKey		243949	1					
ANR	243956	IdentifierDeclStatement	SlotObject * slotObject ;	176:2:3996:4018	243949	1	True				
ANR	243957	IdentifierDecl	* slotObject		243949	0					
ANR	243958	IdentifierDeclType	SlotObject *		243949	0					
ANR	243959	Identifier	slotObject		243949	1					
ANR	243960	IfStatement	"if ( ! makeStartdAdHashKey ( hashKey , ( ( ClassAd * ) ad ) ) )"		243949	2					
ANR	243961	Condition	"! makeStartdAdHashKey ( hashKey , ( ( ClassAd * ) ad ) )"	178:6:4027:4073	243949	0	True				
ANR	243962	UnaryOperationExpression	"! makeStartdAdHashKey ( hashKey , ( ( ClassAd * ) ad ) )"		243949	0					
ANR	243963	UnaryOperator	!		243949	0					
ANR	243964	CallExpression	"makeStartdAdHashKey ( hashKey , ( ( ClassAd * ) ad ) )"		243949	1					
ANR	243965	Callee	makeStartdAdHashKey		243949	0					
ANR	243966	Identifier	makeStartdAdHashKey		243949	0					
ANR	243967	ArgumentList	hashKey		243949	1					
ANR	243968	Argument	hashKey		243949	0					
ANR	243969	Identifier	hashKey		243949	0					
ANR	243970	Argument	( ClassAd * ) ad		243949	1					
ANR	243971	CastExpression	( ClassAd * ) ad		243949	0					
ANR	243972	CastTarget	ClassAd *		243949	0					
ANR	243973	Identifier	ad		243949	1					
ANR	243974	CompoundStatement		5:55:108:108	243949	1					
ANR	243975	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Could not make hashkey -- ignoring ad\\n"" )"	179:3:4081:4144	243949	0	True				
ANR	243976	CallExpression	"dprintf ( D_FULLDEBUG , ""Could not make hashkey -- ignoring ad\\n"" )"		243949	0					
ANR	243977	Callee	dprintf		243949	0					
ANR	243978	Identifier	dprintf		243949	0					
ANR	243979	ArgumentList	D_FULLDEBUG		243949	1					
ANR	243980	Argument	D_FULLDEBUG		243949	0					
ANR	243981	Identifier	D_FULLDEBUG		243949	0					
ANR	243982	Argument	"""Could not make hashkey -- ignoring ad\\n"""		243949	1					
ANR	243983	PrimaryExpression	"""Could not make hashkey -- ignoring ad\\n"""		243949	0					
ANR	243984	ReturnStatement	return ;	180:3:4149:4155	243949	1	True				
ANR	243985	IfStatement	"if ( 0 == startdAds -> lookup ( hashKey , slotObject ) )"		243949	3					
ANR	243986	Condition	"0 == startdAds -> lookup ( hashKey , slotObject )"	184:6:4199:4241	243949	0	True				
ANR	243987	EqualityExpression	"0 == startdAds -> lookup ( hashKey , slotObject )"		243949	0		==			
ANR	243988	PrimaryExpression	0		243949	0					
ANR	243989	CallExpression	"startdAds -> lookup ( hashKey , slotObject )"		243949	1					
ANR	243990	Callee	startdAds -> lookup		243949	0					
ANR	243991	PtrMemberAccess	startdAds -> lookup		243949	0					
ANR	243992	Identifier	startdAds		243949	0					
ANR	243993	Identifier	lookup		243949	1					
ANR	243994	ArgumentList	hashKey		243949	1					
ANR	243995	Argument	hashKey		243949	0					
ANR	243996	Identifier	hashKey		243949	0					
ANR	243997	Argument	slotObject		243949	1					
ANR	243998	Identifier	slotObject		243949	0					
ANR	243999	CompoundStatement		11:51:276:276	243949	1					
ANR	244000	ExpressionStatement	startdAds -> remove ( hashKey )	185:3:4249:4275	243949	0	True				
ANR	244001	CallExpression	startdAds -> remove ( hashKey )		243949	0					
ANR	244002	Callee	startdAds -> remove		243949	0					
ANR	244003	PtrMemberAccess	startdAds -> remove		243949	0					
ANR	244004	Identifier	startdAds		243949	0					
ANR	244005	Identifier	remove		243949	1					
ANR	244006	ArgumentList	hashKey		243949	1					
ANR	244007	Argument	hashKey		243949	0					
ANR	244008	Identifier	hashKey		243949	0					
ANR	244009	Statement	delete	186:3:4280:4285	243949	1	True				
ANR	244010	ExpressionStatement	slotObject	186:10:4287:4297	243949	2	True				
ANR	244011	Identifier	slotObject		243949	0					
ANR	244012	ElseStatement	else		243949	0					
ANR	244013	CompoundStatement		15:7:342:342	243949	0					
ANR	244014	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s startd key not found for removal\\n"" , HashString ( hashKey ) . Value ( ) )"	189:3:4315:4404	243949	0	True				
ANR	244015	CallExpression	"dprintf ( D_FULLDEBUG , ""%s startd key not found for removal\\n"" , HashString ( hashKey ) . Value ( ) )"		243949	0					
ANR	244016	Callee	dprintf		243949	0					
ANR	244017	Identifier	dprintf		243949	0					
ANR	244018	ArgumentList	D_FULLDEBUG		243949	1					
ANR	244019	Argument	D_FULLDEBUG		243949	0					
ANR	244020	Identifier	D_FULLDEBUG		243949	0					
ANR	244021	Argument	"""%s startd key not found for removal\\n"""		243949	1					
ANR	244022	PrimaryExpression	"""%s startd key not found for removal\\n"""		243949	0					
ANR	244023	Argument	HashString ( hashKey ) . Value ( )		243949	2					
ANR	244024	CallExpression	HashString ( hashKey ) . Value ( )		243949	0					
ANR	244025	Callee	HashString ( hashKey ) . Value		243949	0					
ANR	244026	MemberAccess	HashString ( hashKey ) . Value		243949	0					
ANR	244027	CallExpression	HashString ( hashKey )		243949	0					
ANR	244028	Callee	HashString		243949	0					
ANR	244029	Identifier	HashString		243949	0					
ANR	244030	ArgumentList	hashKey		243949	1					
ANR	244031	Argument	hashKey		243949	0					
ANR	244032	Identifier	hashKey		243949	0					
ANR	244033	Identifier	Value		243949	1					
ANR	244034	ArgumentList			243949	1					
ANR	244035	ReturnType	void		243949	1					
ANR	244036	Identifier	invalidate		243949	2					
ANR	244037	ParameterList	const ClassAd * ad		243949	3					
ANR	244038	Parameter	const ClassAd * ad	173:12:3947:3963	243949	0	True				
ANR	244039	ParameterType	const ClassAd *		243949	0					
ANR	244040	Identifier	ad		243949	1					
ANR	244041	CFGEntryNode	ENTRY		243949		True				
ANR	244042	CFGExitNode	EXIT		243949		True				
ANR	244043	Symbol	HashString		243949						
ANR	244044	Symbol	hashKey		243949						
ANR	244045	Symbol	startdAds		243949						
ANR	244046	Symbol	ad		243949						
ANR	244047	Symbol	HashString ( hashKey ) . Value		243949						
ANR	244048	Symbol	* startdAds		243949						
ANR	244049	Symbol	slotObject		243949						
ANR	244050	Symbol	D_FULLDEBUG		243949						
ANR	244051	Symbol	makeStartdAdHashKey		243949						
ANR	244052	Symbol	startdAds -> lookup		243949						
ANR	244053	DeclStmt									
ANR	244054	Decl							MgmtStartdPlugin	MgmtStartdPlugin	instance
ANR	244055	Function	load_startd_mgmt	211:0:4698:4738							
ANR	244056	FunctionDef	load_startd_mgmt ()		244055	0					
ANR	244057	CompoundStatement		211:27:4725:4738	244055	0					
ANR	244058	ReturnStatement	return 0 ;	212:1:4728:4736	244055	0	True				
ANR	244059	PrimaryExpression	0		244055	0					
ANR	244060	ReturnType	int		244055	1					
ANR	244061	Identifier	load_startd_mgmt		244055	2					
ANR	244062	ParameterList			244055	3					
ANR	244063	CFGEntryNode	ENTRY		244055		True				
ANR	244064	CFGExitNode	EXIT		244055		True				
