command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2390861	File	data/converged/CVE-2011-4930_htcondor/src_.deprecate_stork_dap_client_interface.cpp								
ANR	2390862	Function	get_stork_sinful_string	34:0:1163:1898							
ANR	2390863	FunctionDef	get_stork_sinful_string (const char * hostname)		2390862	0					
ANR	2390864	CompoundStatement		35:48:1219:1898	2390862	0					
ANR	2390865	IdentifierDeclStatement	MyString _hostname ;	36:2:1223:1241	2390862	0	True				
ANR	2390866	IdentifierDecl	_hostname		2390862	0					
ANR	2390867	IdentifierDeclType	MyString		2390862	0					
ANR	2390868	Identifier	_hostname		2390862	1					
ANR	2390869	IfStatement	"if ( ( hostname == NULL ) || ( strcmp ( hostname , ""localhost"" ) == 0 ) )"		2390862	1					
ANR	2390870	Condition	"( hostname == NULL ) || ( strcmp ( hostname , ""localhost"" ) == 0 )"	37:6:1249:1307	2390862	0	True				
ANR	2390871	OrExpression	"( hostname == NULL ) || ( strcmp ( hostname , ""localhost"" ) == 0 )"		2390862	0		||			
ANR	2390872	EqualityExpression	hostname == NULL		2390862	0		==			
ANR	2390873	Identifier	hostname		2390862	0					
ANR	2390874	Identifier	NULL		2390862	1					
ANR	2390875	EqualityExpression	"strcmp ( hostname , ""localhost"" ) == 0"		2390862	1		==			
ANR	2390876	CallExpression	"strcmp ( hostname , ""localhost"" )"		2390862	0					
ANR	2390877	Callee	strcmp		2390862	0					
ANR	2390878	Identifier	strcmp		2390862	0					
ANR	2390879	ArgumentList	hostname		2390862	1					
ANR	2390880	Argument	hostname		2390862	0					
ANR	2390881	Identifier	hostname		2390862	0					
ANR	2390882	Argument	"""localhost"""		2390862	1					
ANR	2390883	PrimaryExpression	"""localhost"""		2390862	0					
ANR	2390884	PrimaryExpression	0		2390862	1					
ANR	2390885	CompoundStatement		3:67:90:90	2390862	1					
ANR	2390886	ExpressionStatement	_hostname = my_hostname ( )	38:4:1316:1341	2390862	0	True				
ANR	2390887	AssignmentExpression	_hostname = my_hostname ( )		2390862	0		=			
ANR	2390888	Identifier	_hostname		2390862	0					
ANR	2390889	CallExpression	my_hostname ( )		2390862	1					
ANR	2390890	Callee	my_hostname		2390862	0					
ANR	2390891	Identifier	my_hostname		2390862	0					
ANR	2390892	ArgumentList			2390862	1					
ANR	2390893	ElseStatement	else		2390862	0					
ANR	2390894	CompoundStatement		5:9:132:132	2390862	0					
ANR	2390895	ExpressionStatement	_hostname = hostname	40:4:1358:1378	2390862	0	True				
ANR	2390896	AssignmentExpression	_hostname = hostname		2390862	0		=			
ANR	2390897	Identifier	_hostname		2390862	0					
ANR	2390898	Identifier	hostname		2390862	1					
ANR	2390899	IdentifierDeclStatement	char * host = getHostFromAddr ( _hostname . Value ( ) ) ;	43:2:1387:1436	2390862	2	True				
ANR	2390900	IdentifierDecl	* host = getHostFromAddr ( _hostname . Value ( ) )		2390862	0					
ANR	2390901	IdentifierDeclType	char *		2390862	0					
ANR	2390902	Identifier	host		2390862	1					
ANR	2390903	AssignmentExpression	* host = getHostFromAddr ( _hostname . Value ( ) )		2390862	2		=			
ANR	2390904	Identifier	host		2390862	0					
ANR	2390905	CallExpression	getHostFromAddr ( _hostname . Value ( ) )		2390862	1					
ANR	2390906	Callee	getHostFromAddr		2390862	0					
ANR	2390907	Identifier	getHostFromAddr		2390862	0					
ANR	2390908	ArgumentList	_hostname . Value ( )		2390862	1					
ANR	2390909	Argument	_hostname . Value ( )		2390862	0					
ANR	2390910	CallExpression	_hostname . Value ( )		2390862	0					
ANR	2390911	Callee	_hostname . Value		2390862	0					
ANR	2390912	MemberAccess	_hostname . Value		2390862	0					
ANR	2390913	Identifier	_hostname		2390862	0					
ANR	2390914	Identifier	Value		2390862	1					
ANR	2390915	ArgumentList			2390862	1					
ANR	2390916	IdentifierDeclStatement	struct hostent * phe = NULL ;	46:2:1456:1482	2390862	3	True				
ANR	2390917	IdentifierDecl	* phe = NULL		2390862	0					
ANR	2390918	IdentifierDeclType	struct hostent *		2390862	0					
ANR	2390919	Identifier	phe		2390862	1					
ANR	2390920	AssignmentExpression	* phe = NULL		2390862	2		=			
ANR	2390921	Identifier	NULL		2390862	0					
ANR	2390922	Identifier	NULL		2390862	1					
ANR	2390923	IfStatement	if ( host )		2390862	4					
ANR	2390924	Condition	host	47:6:1490:1493	2390862	0	True				
ANR	2390925	Identifier	host		2390862	0					
ANR	2390926	CompoundStatement		13:12:276:276	2390862	1					
ANR	2390927	ExpressionStatement	phe = condor_gethostbyname ( host )	48:4:1502:1532	2390862	0	True				
ANR	2390928	AssignmentExpression	phe = condor_gethostbyname ( host )		2390862	0		=			
ANR	2390929	Identifier	phe		2390862	0					
ANR	2390930	CallExpression	condor_gethostbyname ( host )		2390862	1					
ANR	2390931	Callee	condor_gethostbyname		2390862	0					
ANR	2390932	Identifier	condor_gethostbyname		2390862	0					
ANR	2390933	ArgumentList	host		2390862	1					
ANR	2390934	Argument	host		2390862	0					
ANR	2390935	Identifier	host		2390862	0					
ANR	2390936	IfStatement	if ( ! phe )		2390862	5					
ANR	2390937	Condition	! phe	50:6:1544:1547	2390862	0	True				
ANR	2390938	UnaryOperationExpression	! phe		2390862	0					
ANR	2390939	UnaryOperator	!		2390862	0					
ANR	2390940	Identifier	phe		2390862	1					
ANR	2390941	CompoundStatement		16:12:330:330	2390862	1					
ANR	2390942	ReturnStatement	return NULL ;	51:4:1556:1567	2390862	0	True				
ANR	2390943	Identifier	NULL		2390862	0					
ANR	2390944	IdentifierDeclStatement	struct in_addr addr ;	53:2:1575:1594	2390862	6	True				
ANR	2390945	IdentifierDecl	addr		2390862	0					
ANR	2390946	IdentifierDeclType	struct in_addr		2390862	0					
ANR	2390947	Identifier	addr		2390862	1					
ANR	2390948	ExpressionStatement	"memcpy ( & addr , phe -> h_addr_list [ 0 ] , sizeof ( struct in_addr ) )"	54:2:1598:1656	2390862	7	True				
ANR	2390949	CallExpression	"memcpy ( & addr , phe -> h_addr_list [ 0 ] , sizeof ( struct in_addr ) )"		2390862	0					
ANR	2390950	Callee	memcpy		2390862	0					
ANR	2390951	Identifier	memcpy		2390862	0					
ANR	2390952	ArgumentList	& addr		2390862	1					
ANR	2390953	Argument	& addr		2390862	0					
ANR	2390954	UnaryOperationExpression	& addr		2390862	0					
ANR	2390955	UnaryOperator	&		2390862	0					
ANR	2390956	Identifier	addr		2390862	1					
ANR	2390957	Argument	phe -> h_addr_list [ 0 ]		2390862	1					
ANR	2390958	ArrayIndexing	phe -> h_addr_list [ 0 ]		2390862	0					
ANR	2390959	PtrMemberAccess	phe -> h_addr_list		2390862	0					
ANR	2390960	Identifier	phe		2390862	0					
ANR	2390961	Identifier	h_addr_list		2390862	1					
ANR	2390962	PrimaryExpression	0		2390862	1					
ANR	2390963	Argument	sizeof ( struct in_addr )		2390862	2					
ANR	2390964	SizeofExpression	sizeof ( struct in_addr )		2390862	0					
ANR	2390965	Sizeof	sizeof		2390862	0					
ANR	2390966	SizeofOperand	struct in_addr		2390862	1					
ANR	2390967	IdentifierDeclStatement	char * ip = inet_ntoa ( addr ) ;	55:2:1660:1687	2390862	8	True				
ANR	2390968	IdentifierDecl	* ip = inet_ntoa ( addr )		2390862	0					
ANR	2390969	IdentifierDeclType	char *		2390862	0					
ANR	2390970	Identifier	ip		2390862	1					
ANR	2390971	AssignmentExpression	* ip = inet_ntoa ( addr )		2390862	2		=			
ANR	2390972	Identifier	ip		2390862	0					
ANR	2390973	CallExpression	inet_ntoa ( addr )		2390862	1					
ANR	2390974	Callee	inet_ntoa		2390862	0					
ANR	2390975	Identifier	inet_ntoa		2390862	0					
ANR	2390976	ArgumentList	addr		2390862	1					
ANR	2390977	Argument	addr		2390862	0					
ANR	2390978	Identifier	addr		2390862	0					
ANR	2390979	IdentifierDeclStatement	int port = getPortFromAddr ( hostname ) ;	57:2:1694:1731	2390862	9	True				
ANR	2390980	IdentifierDecl	port = getPortFromAddr ( hostname )		2390862	0					
ANR	2390981	IdentifierDeclType	int		2390862	0					
ANR	2390982	Identifier	port		2390862	1					
ANR	2390983	AssignmentExpression	port = getPortFromAddr ( hostname )		2390862	2		=			
ANR	2390984	Identifier	port		2390862	0					
ANR	2390985	CallExpression	getPortFromAddr ( hostname )		2390862	1					
ANR	2390986	Callee	getPortFromAddr		2390862	0					
ANR	2390987	Identifier	getPortFromAddr		2390862	0					
ANR	2390988	ArgumentList	hostname		2390862	1					
ANR	2390989	Argument	hostname		2390862	0					
ANR	2390990	Identifier	hostname		2390862	0					
ANR	2390991	IfStatement	if ( port == 0 )		2390862	10					
ANR	2390992	Condition	port == 0	58:6:1739:1747	2390862	0	True				
ANR	2390993	EqualityExpression	port == 0		2390862	0		==			
ANR	2390994	Identifier	port		2390862	0					
ANR	2390995	PrimaryExpression	0		2390862	1					
ANR	2390996	ExpressionStatement	port = CLI_AGENT_SUBMIT_TCP_PORT	59:4:1754:1786	2390862	1	True				
ANR	2390997	AssignmentExpression	port = CLI_AGENT_SUBMIT_TCP_PORT		2390862	0		=			
ANR	2390998	Identifier	port		2390862	0					
ANR	2390999	Identifier	CLI_AGENT_SUBMIT_TCP_PORT		2390862	1					
ANR	2391000	IdentifierDeclStatement	char * stork_host = ( char * ) malloc ( 100 ) ;	61:2:1791:1829	2390862	11	True				
ANR	2391001	IdentifierDecl	* stork_host = ( char * ) malloc ( 100 )		2390862	0					
ANR	2391002	IdentifierDeclType	char *		2390862	0					
ANR	2391003	Identifier	stork_host		2390862	1					
ANR	2391004	AssignmentExpression	* stork_host = ( char * ) malloc ( 100 )		2390862	2		=			
ANR	2391005	Identifier	stork_host		2390862	0					
ANR	2391006	CastExpression	( char * ) malloc ( 100 )		2390862	1					
ANR	2391007	CastTarget	char *		2390862	0					
ANR	2391008	CallExpression	malloc ( 100 )		2390862	1					
ANR	2391009	Callee	malloc		2390862	0					
ANR	2391010	Identifier	malloc		2390862	0					
ANR	2391011	ArgumentList	100		2390862	1					
ANR	2391012	Argument	100		2390862	0					
ANR	2391013	PrimaryExpression	100		2390862	0					
ANR	2391014	ExpressionStatement	"generate_sinful ( stork_host , 100 , ip , port )"	62:2:1833:1875	2390862	12	True				
ANR	2391015	CallExpression	"generate_sinful ( stork_host , 100 , ip , port )"		2390862	0					
ANR	2391016	Callee	generate_sinful		2390862	0					
ANR	2391017	Identifier	generate_sinful		2390862	0					
ANR	2391018	ArgumentList	stork_host		2390862	1					
ANR	2391019	Argument	stork_host		2390862	0					
ANR	2391020	Identifier	stork_host		2390862	0					
ANR	2391021	Argument	100		2390862	1					
ANR	2391022	PrimaryExpression	100		2390862	0					
ANR	2391023	Argument	ip		2390862	2					
ANR	2391024	Identifier	ip		2390862	0					
ANR	2391025	Argument	port		2390862	3					
ANR	2391026	Identifier	port		2390862	0					
ANR	2391027	ReturnStatement	return stork_host ;	63:2:1879:1896	2390862	13	True				
ANR	2391028	Identifier	stork_host		2390862	0					
ANR	2391029	ReturnType	char *		2390862	1					
ANR	2391030	Identifier	get_stork_sinful_string		2390862	2					
ANR	2391031	ParameterList	const char * hostname		2390862	3					
ANR	2391032	Parameter	const char * hostname	35:25:1196:1216	2390862	0	True				
ANR	2391033	ParameterType	const char *		2390862	0					
ANR	2391034	Identifier	hostname		2390862	1					
ANR	2391035	CFGEntryNode	ENTRY		2390862		True				
ANR	2391036	CFGExitNode	EXIT		2390862		True				
ANR	2391037	Symbol	strcmp		2390862						
ANR	2391038	Symbol	* * phe		2390862						
ANR	2391039	Symbol	malloc		2390862						
ANR	2391040	Symbol	condor_gethostbyname		2390862						
ANR	2391041	Symbol	NULL		2390862						
ANR	2391042	Symbol	& addr		2390862						
ANR	2391043	Symbol	ip		2390862						
ANR	2391044	Symbol	_hostname . Value		2390862						
ANR	2391045	Symbol	* phe -> h_addr_list		2390862						
ANR	2391046	Symbol	inet_ntoa		2390862						
ANR	2391047	Symbol	stork_host		2390862						
ANR	2391048	Symbol	phe		2390862						
ANR	2391049	Symbol	getHostFromAddr		2390862						
ANR	2391050	Symbol	hostname		2390862						
ANR	2391051	Symbol	_hostname		2390862						
ANR	2391052	Symbol	phe -> h_addr_list		2390862						
ANR	2391053	Symbol	port		2390862						
ANR	2391054	Symbol	* phe		2390862						
ANR	2391055	Symbol	host		2390862						
ANR	2391056	Symbol	my_hostname		2390862						
ANR	2391057	Symbol	addr		2390862						
ANR	2391058	Symbol	CLI_AGENT_SUBMIT_TCP_PORT		2390862						
ANR	2391059	Symbol	getPortFromAddr		2390862						
ANR	2391060	Function	stork_version	66:0:1901:1994							
ANR	2391061	FunctionDef	stork_version ()		2391060	0					
ANR	2391062	CompoundStatement		68:0:1922:1994	2391060	0					
ANR	2391063	ExpressionStatement	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"	69:4:1928:1983	2391060	0	True				
ANR	2391064	CallExpression	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"		2391060	0					
ANR	2391065	Callee	printf		2391060	0					
ANR	2391066	Identifier	printf		2391060	0					
ANR	2391067	ArgumentList	"""%s\\n%s\\n"""		2391060	1					
ANR	2391068	Argument	"""%s\\n%s\\n"""		2391060	0					
ANR	2391069	PrimaryExpression	"""%s\\n%s\\n"""		2391060	0					
ANR	2391070	Argument	CondorVersion ( )		2391060	1					
ANR	2391071	CallExpression	CondorVersion ( )		2391060	0					
ANR	2391072	Callee	CondorVersion		2391060	0					
ANR	2391073	Identifier	CondorVersion		2391060	0					
ANR	2391074	ArgumentList			2391060	1					
ANR	2391075	Argument	CondorPlatform ( )		2391060	2					
ANR	2391076	CallExpression	CondorPlatform ( )		2391060	0					
ANR	2391077	Callee	CondorPlatform		2391060	0					
ANR	2391078	Identifier	CondorPlatform		2391060	0					
ANR	2391079	ArgumentList			2391060	1					
ANR	2391080	ReturnStatement	return ;	70:1:1986:1992	2391060	1	True				
ANR	2391081	ReturnType	void		2391060	1					
ANR	2391082	Identifier	stork_version		2391060	2					
ANR	2391083	ParameterList			2391060	3					
ANR	2391084	CFGEntryNode	ENTRY		2391060		True				
ANR	2391085	CFGExitNode	EXIT		2391060		True				
ANR	2391086	Symbol	CondorVersion		2391060						
ANR	2391087	Symbol	CondorPlatform		2391060						
ANR	2391088	Function	stork_print_usage	73:0:1997:2604							
ANR	2391089	FunctionDef	"stork_print_usage (FILE * stream , const char * argv0 , const char * usage , bool remote_connect)"		2391088	0					
ANR	2391090	CompoundStatement		80:0:2099:2604	2391088	0					
ANR	2391091	IdentifierDeclStatement	const char * my_name = NULL ;	81:1:2102:2128	2391088	0	True				
ANR	2391092	IdentifierDecl	* my_name = NULL		2391088	0					
ANR	2391093	IdentifierDeclType	const char *		2391088	0					
ANR	2391094	Identifier	my_name		2391088	1					
ANR	2391095	AssignmentExpression	* my_name = NULL		2391088	2		=			
ANR	2391096	Identifier	NULL		2391088	0					
ANR	2391097	Identifier	NULL		2391088	1					
ANR	2391098	ExpressionStatement	"my_name = strrchr ( argv0 , DIR_DELIM_CHAR )"	82:1:2131:2173	2391088	1	True				
ANR	2391099	AssignmentExpression	"my_name = strrchr ( argv0 , DIR_DELIM_CHAR )"		2391088	0		=			
ANR	2391100	Identifier	my_name		2391088	0					
ANR	2391101	CallExpression	"strrchr ( argv0 , DIR_DELIM_CHAR )"		2391088	1					
ANR	2391102	Callee	strrchr		2391088	0					
ANR	2391103	Identifier	strrchr		2391088	0					
ANR	2391104	ArgumentList	argv0		2391088	1					
ANR	2391105	Argument	argv0		2391088	0					
ANR	2391106	Identifier	argv0		2391088	0					
ANR	2391107	Argument	DIR_DELIM_CHAR		2391088	1					
ANR	2391108	Identifier	DIR_DELIM_CHAR		2391088	0					
ANR	2391109	IfStatement	if ( ! my_name )		2391088	2					
ANR	2391110	Condition	! my_name	83:5:2180:2187	2391088	0	True				
ANR	2391111	UnaryOperationExpression	! my_name		2391088	0					
ANR	2391112	UnaryOperator	!		2391088	0					
ANR	2391113	Identifier	my_name		2391088	1					
ANR	2391114	CompoundStatement		4:16:91:91	2391088	1					
ANR	2391115	ExpressionStatement	my_name = argv0	84:2:2195:2210	2391088	0	True				
ANR	2391116	AssignmentExpression	my_name = argv0		2391088	0		=			
ANR	2391117	Identifier	my_name		2391088	0					
ANR	2391118	Identifier	argv0		2391088	1					
ANR	2391119	ElseStatement	else		2391088	0					
ANR	2391120	CompoundStatement		6:8:120:120	2391088	0					
ANR	2391121	ExpressionStatement	my_name ++	86:2:2224:2233	2391088	0	True				
ANR	2391122	PostIncDecOperationExpression	my_name ++		2391088	0					
ANR	2391123	Identifier	my_name		2391088	0					
ANR	2391124	IncDec	++		2391088	1					
ANR	2391125	ExpressionStatement	"fprintf ( stream , ""usage: %s  [option]... %s\\n"" , my_name , usage )"	88:1:2239:2302	2391088	3	True				
ANR	2391126	CallExpression	"fprintf ( stream , ""usage: %s  [option]... %s\\n"" , my_name , usage )"		2391088	0					
ANR	2391127	Callee	fprintf		2391088	0					
ANR	2391128	Identifier	fprintf		2391088	0					
ANR	2391129	ArgumentList	stream		2391088	1					
ANR	2391130	Argument	stream		2391088	0					
ANR	2391131	Identifier	stream		2391088	0					
ANR	2391132	Argument	"""usage: %s  [option]... %s\\n"""		2391088	1					
ANR	2391133	PrimaryExpression	"""usage: %s  [option]... %s\\n"""		2391088	0					
ANR	2391134	Argument	my_name		2391088	2					
ANR	2391135	Identifier	my_name		2391088	0					
ANR	2391136	Argument	usage		2391088	3					
ANR	2391137	Identifier	usage		2391088	0					
ANR	2391138	ExpressionStatement	"fprintf ( stream , ""\\t-help\\t\\t\\tprint this help information\\n"" )"	89:1:2305:2367	2391088	4	True				
ANR	2391139	CallExpression	"fprintf ( stream , ""\\t-help\\t\\t\\tprint this help information\\n"" )"		2391088	0					
ANR	2391140	Callee	fprintf		2391088	0					
ANR	2391141	Identifier	fprintf		2391088	0					
ANR	2391142	ArgumentList	stream		2391088	1					
ANR	2391143	Argument	stream		2391088	0					
ANR	2391144	Identifier	stream		2391088	0					
ANR	2391145	Argument	"""\\t-help\\t\\t\\tprint this help information\\n"""		2391088	1					
ANR	2391146	PrimaryExpression	"""\\t-help\\t\\t\\tprint this help information\\n"""		2391088	0					
ANR	2391147	ExpressionStatement	"fprintf ( stream , ""\\t-version\\t\\tprint version information\\n"" )"	90:1:2370:2431	2391088	5	True				
ANR	2391148	CallExpression	"fprintf ( stream , ""\\t-version\\t\\tprint version information\\n"" )"		2391088	0					
ANR	2391149	Callee	fprintf		2391088	0					
ANR	2391150	Identifier	fprintf		2391088	0					
ANR	2391151	ArgumentList	stream		2391088	1					
ANR	2391152	Argument	stream		2391088	0					
ANR	2391153	Identifier	stream		2391088	0					
ANR	2391154	Argument	"""\\t-version\\t\\tprint version information\\n"""		2391088	1					
ANR	2391155	PrimaryExpression	"""\\t-version\\t\\tprint version information\\n"""		2391088	0					
ANR	2391156	IfStatement	if ( remote_connect )		2391088	6					
ANR	2391157	Condition	remote_connect	91:5:2438:2451	2391088	0	True				
ANR	2391158	Identifier	remote_connect		2391088	0					
ANR	2391159	CompoundStatement		12:21:354:354	2391088	1					
ANR	2391160	ExpressionStatement	"fprintf ( stream , ""\\t-debug\\t\\t\\tprint debugging information to console\\n"" )"	92:1:2457:2531	2391088	0	True				
ANR	2391161	CallExpression	"fprintf ( stream , ""\\t-debug\\t\\t\\tprint debugging information to console\\n"" )"		2391088	0					
ANR	2391162	Callee	fprintf		2391088	0					
ANR	2391163	Identifier	fprintf		2391088	0					
ANR	2391164	ArgumentList	stream		2391088	1					
ANR	2391165	Argument	stream		2391088	0					
ANR	2391166	Identifier	stream		2391088	0					
ANR	2391167	Argument	"""\\t-debug\\t\\t\\tprint debugging information to console\\n"""		2391088	1					
ANR	2391168	PrimaryExpression	"""\\t-debug\\t\\t\\tprint debugging information to console\\n"""		2391088	0					
ANR	2391169	ExpressionStatement	"fprintf ( stream , ""\\t-name stork_server\\tstork server\\n"" )"	93:1:2534:2590	2391088	1	True				
ANR	2391170	CallExpression	"fprintf ( stream , ""\\t-name stork_server\\tstork server\\n"" )"		2391088	0					
ANR	2391171	Callee	fprintf		2391088	0					
ANR	2391172	Identifier	fprintf		2391088	0					
ANR	2391173	ArgumentList	stream		2391088	1					
ANR	2391174	Argument	stream		2391088	0					
ANR	2391175	Identifier	stream		2391088	0					
ANR	2391176	Argument	"""\\t-name stork_server\\tstork server\\n"""		2391088	1					
ANR	2391177	PrimaryExpression	"""\\t-name stork_server\\tstork server\\n"""		2391088	0					
ANR	2391178	ReturnStatement	return ;	95:1:2596:2602	2391088	7	True				
ANR	2391179	ReturnType	void		2391088	1					
ANR	2391180	Identifier	stork_print_usage		2391088	2					
ANR	2391181	ParameterList	"FILE * stream , const char * argv0 , const char * usage , bool remote_connect"		2391088	3					
ANR	2391182	Parameter	FILE * stream	75:1:2022:2033	2391088	0	True				
ANR	2391183	ParameterType	FILE *		2391088	0					
ANR	2391184	Identifier	stream		2391088	1					
ANR	2391185	Parameter	const char * argv0	76:1:2037:2053	2391088	1	True				
ANR	2391186	ParameterType	const char *		2391088	0					
ANR	2391187	Identifier	argv0		2391088	1					
ANR	2391188	Parameter	const char * usage	77:1:2057:2073	2391088	2	True				
ANR	2391189	ParameterType	const char *		2391088	0					
ANR	2391190	Identifier	usage		2391088	1					
ANR	2391191	Parameter	bool remote_connect	78:1:2077:2095	2391088	3	True				
ANR	2391192	ParameterType	bool		2391088	0					
ANR	2391193	Identifier	remote_connect		2391088	1					
ANR	2391194	CFGEntryNode	ENTRY		2391088		True				
ANR	2391195	CFGExitNode	EXIT		2391088		True				
ANR	2391196	Symbol	my_name		2391088						
ANR	2391197	Symbol	NULL		2391088						
ANR	2391198	Symbol	stream		2391088						
ANR	2391199	Symbol	strrchr		2391088						
ANR	2391200	Symbol	usage		2391088						
ANR	2391201	Symbol	DIR_DELIM_CHAR		2391088						
ANR	2391202	Symbol	argv0		2391088						
ANR	2391203	Symbol	remote_connect		2391088						
ANR	2391204	Function	stork_parse_global_opts	98:0:2607:4020							
ANR	2391205	FunctionDef	"stork_parse_global_opts (int & argc , char * argv [ ] , const char * usage , struct stork_global_opts * parsed , bool remote_connect)"		2391204	0					
ANR	2391206	CompoundStatement		106:0:2744:4020	2391204	0					
ANR	2391207	IdentifierDeclStatement	const char * argv0 = argv [ 0 ] ;	107:1:2747:2774	2391204	0	True				
ANR	2391208	IdentifierDecl	* argv0 = argv [ 0 ]		2391204	0					
ANR	2391209	IdentifierDeclType	const char *		2391204	0					
ANR	2391210	Identifier	argv0		2391204	1					
ANR	2391211	AssignmentExpression	* argv0 = argv [ 0 ]		2391204	2		=			
ANR	2391212	Identifier	argv0		2391204	0					
ANR	2391213	ArrayIndexing	argv [ 0 ]		2391204	1					
ANR	2391214	Identifier	argv		2391204	0					
ANR	2391215	PrimaryExpression	0		2391204	1					
ANR	2391216	IdentifierDeclStatement	int local_argc = 0 ;	108:1:2777:2795	2391204	1	True				
ANR	2391217	IdentifierDecl	local_argc = 0		2391204	0					
ANR	2391218	IdentifierDeclType	int		2391204	0					
ANR	2391219	Identifier	local_argc		2391204	1					
ANR	2391220	AssignmentExpression	local_argc = 0		2391204	2		=			
ANR	2391221	Identifier	local_argc		2391204	0					
ANR	2391222	PrimaryExpression	0		2391204	1					
ANR	2391223	ExpressionStatement	"memset ( parsed , 0 , sizeof ( * parsed ) )"	109:1:2835:2870	2391204	2	True				
ANR	2391224	CallExpression	"memset ( parsed , 0 , sizeof ( * parsed ) )"		2391204	0					
ANR	2391225	Callee	memset		2391204	0					
ANR	2391226	Identifier	memset		2391204	0					
ANR	2391227	ArgumentList	parsed		2391204	1					
ANR	2391228	Argument	parsed		2391204	0					
ANR	2391229	Identifier	parsed		2391204	0					
ANR	2391230	Argument	0		2391204	1					
ANR	2391231	PrimaryExpression	0		2391204	0					
ANR	2391232	Argument	sizeof ( * parsed )		2391204	2					
ANR	2391233	SizeofExpression	sizeof ( * parsed )		2391204	0					
ANR	2391234	Sizeof	sizeof		2391204	0					
ANR	2391235	UnaryOperationExpression	* parsed		2391204	1					
ANR	2391236	UnaryOperator	*		2391204	0					
ANR	2391237	Identifier	parsed		2391204	1					
ANR	2391238	IdentifierDeclStatement	char * * tmp1 = argv ;	110:1:2895:2913	2391204	3	True				
ANR	2391239	IdentifierDecl	* * tmp1 = argv		2391204	0					
ANR	2391240	IdentifierDeclType	char * *		2391204	0					
ANR	2391241	Identifier	tmp1		2391204	1					
ANR	2391242	AssignmentExpression	* * tmp1 = argv		2391204	2		=			
ANR	2391243	Identifier	argv		2391204	0					
ANR	2391244	Identifier	argv		2391204	1					
ANR	2391245	ForStatement	for ( tmp1 ++ ; * tmp1 ; tmp1 ++ )		2391204	4					
ANR	2391246	ForInit	tmp1 ++ ;	112:6:2922:2928	2391204	0	True				
ANR	2391247	PostIncDecOperationExpression	tmp1 ++		2391204	0					
ANR	2391248	Identifier	tmp1		2391204	0					
ANR	2391249	IncDec	++		2391204	1					
ANR	2391250	Condition	* tmp1	112:14:2930:2934	2391204	1	True				
ANR	2391251	UnaryOperationExpression	* tmp1		2391204	0					
ANR	2391252	UnaryOperator	*		2391204	0					
ANR	2391253	Identifier	tmp1		2391204	1					
ANR	2391254	PostIncDecOperationExpression	tmp1 ++	112:21:2937:2942	2391204	2	True				
ANR	2391255	Identifier	tmp1		2391204	0					
ANR	2391256	IncDec	++		2391204	1					
ANR	2391257	CompoundStatement		7:30:201:201	2391204	3					
ANR	2391258	IfStatement	if ( ( * tmp1 ) [ 0 ] != '-' )		2391204	0					
ANR	2391259	Condition	( * tmp1 ) [ 0 ] != '-'	113:7:2955:2971	2391204	0	True				
ANR	2391260	EqualityExpression	( * tmp1 ) [ 0 ] != '-'		2391204	0		!=			
ANR	2391261	ArrayIndexing	( * tmp1 ) [ 0 ]		2391204	0					
ANR	2391262	UnaryOperationExpression	* tmp1		2391204	0					
ANR	2391263	UnaryOperator	*		2391204	0					
ANR	2391264	Identifier	tmp1		2391204	1					
ANR	2391265	PrimaryExpression	0		2391204	1					
ANR	2391266	PrimaryExpression	'-'		2391204	1					
ANR	2391267	CompoundStatement		8:27:230:230	2391204	1					
ANR	2391268	ExpressionStatement	argv [ ++ local_argc ] = * tmp1	115:3:3024:3052	2391204	0	True				
ANR	2391269	AssignmentExpression	argv [ ++ local_argc ] = * tmp1		2391204	0		=			
ANR	2391270	ArrayIndexing	argv [ ++ local_argc ]		2391204	0					
ANR	2391271	Identifier	argv		2391204	0					
ANR	2391272	UnaryExpression	++ local_argc		2391204	1					
ANR	2391273	IncDec	++		2391204	0					
ANR	2391274	Identifier	local_argc		2391204	1					
ANR	2391275	UnaryOperationExpression	* tmp1		2391204	1					
ANR	2391276	UnaryOperator	*		2391204	0					
ANR	2391277	Identifier	tmp1		2391204	1					
ANR	2391278	ContinueStatement	continue ;	116:3:3081:3089	2391204	1	True				
ANR	2391279	SwitchStatement	switch ( ( * tmp1 ) [ 1 ] )		2391204	1					
ANR	2391280	Condition	( * tmp1 ) [ 1 ]	118:10:3111:3120	2391204	0	True				
ANR	2391281	ArrayIndexing	( * tmp1 ) [ 1 ]		2391204	0					
ANR	2391282	UnaryOperationExpression	* tmp1		2391204	0					
ANR	2391283	UnaryOperator	*		2391204	0					
ANR	2391284	Identifier	tmp1		2391204	1					
ANR	2391285	PrimaryExpression	1		2391204	1					
ANR	2391286	CompoundStatement		13:23:379:379	2391204	1					
ANR	2391287	Label	case 'h' :	119:3:3129:3137	2391204	0	True				
ANR	2391288	ExpressionStatement	"stork_print_usage ( stdout , argv0 , usage , remote_connect )"	121:4:3156:3211	2391204	1	True				
ANR	2391289	CallExpression	"stork_print_usage ( stdout , argv0 , usage , remote_connect )"		2391204	0					
ANR	2391290	Callee	stork_print_usage		2391204	0					
ANR	2391291	Identifier	stork_print_usage		2391204	0					
ANR	2391292	ArgumentList	stdout		2391204	1					
ANR	2391293	Argument	stdout		2391204	0					
ANR	2391294	Identifier	stdout		2391204	0					
ANR	2391295	Argument	argv0		2391204	1					
ANR	2391296	Identifier	argv0		2391204	0					
ANR	2391297	Argument	usage		2391204	2					
ANR	2391298	Identifier	usage		2391204	0					
ANR	2391299	Argument	remote_connect		2391204	3					
ANR	2391300	Identifier	remote_connect		2391204	0					
ANR	2391301	ExpressionStatement	exit ( 0 )	122:4:3217:3224	2391204	2	True				
ANR	2391302	CallExpression	exit ( 0 )		2391204	0					
ANR	2391303	Callee	exit		2391204	0					
ANR	2391304	Identifier	exit		2391204	0					
ANR	2391305	ArgumentList	0		2391204	1					
ANR	2391306	Argument	0		2391204	0					
ANR	2391307	PrimaryExpression	0		2391204	0					
ANR	2391308	Label	case 'v' :	123:3:3229:3237	2391204	3	True				
ANR	2391309	ExpressionStatement	stork_version ( )	124:4:3243:3258	2391204	4	True				
ANR	2391310	CallExpression	stork_version ( )		2391204	0					
ANR	2391311	Callee	stork_version		2391204	0					
ANR	2391312	Identifier	stork_version		2391204	0					
ANR	2391313	ArgumentList			2391204	1					
ANR	2391314	ExpressionStatement	exit ( 0 )	125:4:3264:3271	2391204	5	True				
ANR	2391315	CallExpression	exit ( 0 )		2391204	0					
ANR	2391316	Callee	exit		2391204	0					
ANR	2391317	Identifier	exit		2391204	0					
ANR	2391318	ArgumentList	0		2391204	1					
ANR	2391319	Argument	0		2391204	0					
ANR	2391320	PrimaryExpression	0		2391204	0					
ANR	2391321	Label	case 'd' :	126:3:3276:3284	2391204	6	True				
ANR	2391322	ExpressionStatement	Termlog = 1	128:4:3304:3315	2391204	7	True				
ANR	2391323	AssignmentExpression	Termlog = 1		2391204	0		=			
ANR	2391324	Identifier	Termlog		2391204	0					
ANR	2391325	PrimaryExpression	1		2391204	1					
ANR	2391326	ExpressionStatement	"dprintf_config ( ""TOOL"" )"	129:4:3321:3344	2391204	8	True				
ANR	2391327	CallExpression	"dprintf_config ( ""TOOL"" )"		2391204	0					
ANR	2391328	Callee	dprintf_config		2391204	0					
ANR	2391329	Identifier	dprintf_config		2391204	0					
ANR	2391330	ArgumentList	"""TOOL"""		2391204	1					
ANR	2391331	Argument	"""TOOL"""		2391204	0					
ANR	2391332	PrimaryExpression	"""TOOL"""		2391204	0					
ANR	2391333	ExpressionStatement	argc --	130:4:3350:3356	2391204	9	True				
ANR	2391334	PostIncDecOperationExpression	argc --		2391204	0					
ANR	2391335	Identifier	argc		2391204	0					
ANR	2391336	IncDec	--		2391204	1					
ANR	2391337	BreakStatement	break ;	131:4:3402:3407	2391204	10	True				
ANR	2391338	Label	case 'n' :	132:3:3412:3420	2391204	11	True				
ANR	2391339	IfStatement	if ( remote_connect )		2391204	12					
ANR	2391340	Condition	remote_connect	133:8:3430:3443	2391204	0	True				
ANR	2391341	Identifier	remote_connect		2391204	0					
ANR	2391342	CompoundStatement		28:24:701:701	2391204	1					
ANR	2391343	ExpressionStatement	argc --	135:5:3484:3490	2391204	0	True				
ANR	2391344	PostIncDecOperationExpression	argc --		2391204	0					
ANR	2391345	Identifier	argc		2391204	0					
ANR	2391346	IncDec	--		2391204	1					
ANR	2391347	ExpressionStatement	tmp1 ++	136:5:3537:3543	2391204	1	True				
ANR	2391348	PostIncDecOperationExpression	tmp1 ++		2391204	0					
ANR	2391349	Identifier	tmp1		2391204	0					
ANR	2391350	IncDec	++		2391204	1					
ANR	2391351	IfStatement	if ( tmp1 && * tmp1 )		2391204	2					
ANR	2391352	Condition	tmp1 && * tmp1	137:10:3555:3567	2391204	0	True				
ANR	2391353	AndExpression	tmp1 && * tmp1		2391204	0		&&			
ANR	2391354	Identifier	tmp1		2391204	0					
ANR	2391355	UnaryOperationExpression	* tmp1		2391204	1					
ANR	2391356	UnaryOperator	*		2391204	0					
ANR	2391357	Identifier	tmp1		2391204	1					
ANR	2391358	CompoundStatement		32:26:826:826	2391204	1					
ANR	2391359	ExpressionStatement	parsed -> server = * tmp1	138:6:3579:3601	2391204	0	True				
ANR	2391360	AssignmentExpression	parsed -> server = * tmp1		2391204	0		=			
ANR	2391361	PtrMemberAccess	parsed -> server		2391204	0					
ANR	2391362	Identifier	parsed		2391204	0					
ANR	2391363	Identifier	server		2391204	1					
ANR	2391364	UnaryOperationExpression	* tmp1		2391204	1					
ANR	2391365	UnaryOperator	*		2391204	0					
ANR	2391366	Identifier	tmp1		2391204	1					
ANR	2391367	ExpressionStatement	argc --	139:6:3609:3615	2391204	1	True				
ANR	2391368	PostIncDecOperationExpression	argc --		2391204	0					
ANR	2391369	Identifier	argc		2391204	0					
ANR	2391370	IncDec	--		2391204	1					
ANR	2391371	ElseStatement	else		2391204	0					
ANR	2391372	CompoundStatement		35:12:924:924	2391204	0					
ANR	2391373	ExpressionStatement	"fprintf ( stderr , ""-name requires another argument\\n"" )"	141:6:3677:3729	2391204	0	True				
ANR	2391374	CallExpression	"fprintf ( stderr , ""-name requires another argument\\n"" )"		2391204	0					
ANR	2391375	Callee	fprintf		2391204	0					
ANR	2391376	Identifier	fprintf		2391204	0					
ANR	2391377	ArgumentList	stderr		2391204	1					
ANR	2391378	Argument	stderr		2391204	0					
ANR	2391379	Identifier	stderr		2391204	0					
ANR	2391380	Argument	"""-name requires another argument\\n"""		2391204	1					
ANR	2391381	PrimaryExpression	"""-name requires another argument\\n"""		2391204	0					
ANR	2391382	ExpressionStatement	"stork_print_usage ( stderr , argv0 , usage , remote_connect )"	142:6:3737:3789	2391204	1	True				
ANR	2391383	CallExpression	"stork_print_usage ( stderr , argv0 , usage , remote_connect )"		2391204	0					
ANR	2391384	Callee	stork_print_usage		2391204	0					
ANR	2391385	Identifier	stork_print_usage		2391204	0					
ANR	2391386	ArgumentList	stderr		2391204	1					
ANR	2391387	Argument	stderr		2391204	0					
ANR	2391388	Identifier	stderr		2391204	0					
ANR	2391389	Argument	argv0		2391204	1					
ANR	2391390	Identifier	argv0		2391204	0					
ANR	2391391	Argument	usage		2391204	2					
ANR	2391392	Identifier	usage		2391204	0					
ANR	2391393	Argument	remote_connect		2391204	3					
ANR	2391394	Identifier	remote_connect		2391204	0					
ANR	2391395	ExpressionStatement	exit ( 1 )	143:6:3797:3804	2391204	2	True				
ANR	2391396	CallExpression	exit ( 1 )		2391204	0					
ANR	2391397	Callee	exit		2391204	0					
ANR	2391398	Identifier	exit		2391204	0					
ANR	2391399	ArgumentList	1		2391204	1					
ANR	2391400	Argument	1		2391204	0					
ANR	2391401	PrimaryExpression	1		2391204	0					
ANR	2391402	ElseStatement	else		2391204	0					
ANR	2391403	CompoundStatement		40:11:1079:1079	2391204	0					
ANR	2391404	ExpressionStatement	argv [ ++ local_argc ] = * tmp1	146:5:3831:3859	2391204	0	True				
ANR	2391405	AssignmentExpression	argv [ ++ local_argc ] = * tmp1		2391204	0		=			
ANR	2391406	ArrayIndexing	argv [ ++ local_argc ]		2391204	0					
ANR	2391407	Identifier	argv		2391204	0					
ANR	2391408	UnaryExpression	++ local_argc		2391204	1					
ANR	2391409	IncDec	++		2391204	0					
ANR	2391410	Identifier	local_argc		2391204	1					
ANR	2391411	UnaryOperationExpression	* tmp1		2391204	1					
ANR	2391412	UnaryOperator	*		2391204	0					
ANR	2391413	Identifier	tmp1		2391204	1					
ANR	2391414	BreakStatement	break ;	148:4:3895:3900	2391204	13	True				
ANR	2391415	Label	default :	149:3:3905:3912	2391204	14	True				
ANR	2391416	Identifier	default		2391204	0					
ANR	2391417	ExpressionStatement	argv [ ++ local_argc ] = * tmp1	150:4:3918:3946	2391204	15	True				
ANR	2391418	AssignmentExpression	argv [ ++ local_argc ] = * tmp1		2391204	0		=			
ANR	2391419	ArrayIndexing	argv [ ++ local_argc ]		2391204	0					
ANR	2391420	Identifier	argv		2391204	0					
ANR	2391421	UnaryExpression	++ local_argc		2391204	1					
ANR	2391422	IncDec	++		2391204	0					
ANR	2391423	Identifier	local_argc		2391204	1					
ANR	2391424	UnaryOperationExpression	* tmp1		2391204	1					
ANR	2391425	UnaryOperator	*		2391204	0					
ANR	2391426	Identifier	tmp1		2391204	1					
ANR	2391427	BreakStatement	break ;	151:4:3976:3981	2391204	16	True				
ANR	2391428	ExpressionStatement	argv [ ++ local_argc ] = NULL	154:1:3991:4018	2391204	5	True				
ANR	2391429	AssignmentExpression	argv [ ++ local_argc ] = NULL		2391204	0		=			
ANR	2391430	ArrayIndexing	argv [ ++ local_argc ]		2391204	0					
ANR	2391431	Identifier	argv		2391204	0					
ANR	2391432	UnaryExpression	++ local_argc		2391204	1					
ANR	2391433	IncDec	++		2391204	0					
ANR	2391434	Identifier	local_argc		2391204	1					
ANR	2391435	Identifier	NULL		2391204	1					
ANR	2391436	ReturnType	void		2391204	1					
ANR	2391437	Identifier	stork_parse_global_opts		2391204	2					
ANR	2391438	ParameterList	"int & argc , char * argv [ ] , const char * usage , struct stork_global_opts * parsed , bool remote_connect"		2391204	3					
ANR	2391439	Parameter	int & argc	100:1:2638:2648	2391204	0	True				
ANR	2391440	ParameterType	int &		2391204	0					
ANR	2391441	Identifier	argc		2391204	1					
ANR	2391442	Parameter	char * argv [ ]	101:1:2652:2663	2391204	1	True				
ANR	2391443	ParameterType	char * [ ]		2391204	0					
ANR	2391444	Identifier	argv		2391204	1					
ANR	2391445	Parameter	const char * usage	102:1:2667:2683	2391204	2	True				
ANR	2391446	ParameterType	const char *		2391204	0					
ANR	2391447	Identifier	usage		2391204	1					
ANR	2391448	Parameter	struct stork_global_opts * parsed	103:1:2687:2718	2391204	3	True				
ANR	2391449	ParameterType	struct stork_global_opts *		2391204	0					
ANR	2391450	Identifier	parsed		2391204	1					
ANR	2391451	Parameter	bool remote_connect	104:1:2722:2740	2391204	4	True				
ANR	2391452	ParameterType	bool		2391204	0					
ANR	2391453	Identifier	remote_connect		2391204	1					
ANR	2391454	CFGEntryNode	ENTRY		2391204		True				
ANR	2391455	CFGExitNode	EXIT		2391204		True				
ANR	2391456	Symbol	argc		2391204						
ANR	2391457	Symbol	* parsed		2391204						
ANR	2391458	Symbol	NULL		2391204						
ANR	2391459	Symbol	stdout		2391204						
ANR	2391460	Symbol	Termlog		2391204						
ANR	2391461	Symbol	usage		2391204						
ANR	2391462	Symbol	* argv		2391204						
ANR	2391463	Symbol	parsed -> server		2391204						
ANR	2391464	Symbol	tmp1		2391204						
ANR	2391465	Symbol	stderr		2391204						
ANR	2391466	Symbol	argv		2391204						
ANR	2391467	Symbol	local_argc		2391204						
ANR	2391468	Symbol	* tmp1		2391204						
ANR	2391469	Symbol	parsed		2391204						
ANR	2391470	Symbol	* * tmp1		2391204						
ANR	2391471	Symbol	remote_connect		2391204						
ANR	2391472	Symbol	argv0		2391204						
ANR	2391473	Symbol	* local_argc		2391204						
ANR	2391474	Function	start_stork_command_and_authenticate	157:0:4023:4716							
ANR	2391475	FunctionDef	"start_stork_command_and_authenticate (const char * stork_host , const int command , MyString & error_reason)"		2391474	0					
ANR	2391476	CompoundStatement		161:31:4156:4716	2391474	0					
ANR	2391477	IdentifierDeclStatement	"Daemon my_stork ( DT_STORK , stork_host , NULL ) ;"	163:1:4160:4203	2391474	0	True				
ANR	2391478	IdentifierDecl	"my_stork ( DT_STORK , stork_host , NULL )"		2391474	0					
ANR	2391479	IdentifierDeclType	Daemon		2391474	0					
ANR	2391480	Identifier	my_stork		2391474	1					
ANR	2391481	Expression	"DT_STORK , stork_host , NULL"		2391474	2					
ANR	2391482	Identifier	DT_STORK		2391474	0					
ANR	2391483	Expression	"stork_host , NULL"		2391474	1					
ANR	2391484	Identifier	stork_host		2391474	0					
ANR	2391485	Identifier	NULL		2391474	1					
ANR	2391486	IdentifierDeclStatement	"Sock * sock = my_stork . startCommand ( command , Stream :: reli_sock , 0 ) ;"	165:1:4207:4295	2391474	1	True				
ANR	2391487	IdentifierDecl	"* sock = my_stork . startCommand ( command , Stream :: reli_sock , 0 )"		2391474	0					
ANR	2391488	IdentifierDeclType	Sock *		2391474	0					
ANR	2391489	Identifier	sock		2391474	1					
ANR	2391490	AssignmentExpression	"* sock = my_stork . startCommand ( command , Stream :: reli_sock , 0 )"		2391474	2		=			
ANR	2391491	Identifier	sock		2391474	0					
ANR	2391492	CallExpression	"my_stork . startCommand ( command , Stream :: reli_sock , 0 )"		2391474	1					
ANR	2391493	Callee	my_stork . startCommand		2391474	0					
ANR	2391494	MemberAccess	my_stork . startCommand		2391474	0					
ANR	2391495	Identifier	my_stork		2391474	0					
ANR	2391496	Identifier	startCommand		2391474	1					
ANR	2391497	ArgumentList	command		2391474	1					
ANR	2391498	Argument	command		2391474	0					
ANR	2391499	Identifier	command		2391474	0					
ANR	2391500	Argument	Stream :: reli_sock		2391474	1					
ANR	2391501	Identifier	Stream :: reli_sock		2391474	0					
ANR	2391502	Argument	0		2391474	2					
ANR	2391503	PrimaryExpression	0		2391474	0					
ANR	2391504	IfStatement	if ( ! sock )		2391474	2					
ANR	2391505	Condition	! sock	168:5:4302:4306	2391474	0	True				
ANR	2391506	UnaryOperationExpression	! sock		2391474	0					
ANR	2391507	UnaryOperator	!		2391474	0					
ANR	2391508	Identifier	sock		2391474	1					
ANR	2391509	CompoundStatement		8:12:152:152	2391474	1					
ANR	2391510	ExpressionStatement	"error_reason . sprintf ( ""Unable to start STORK_SUBMIT command to host %s\\n"" , stork_host )"	169:2:4313:4411	2391474	0	True				
ANR	2391511	CallExpression	"error_reason . sprintf ( ""Unable to start STORK_SUBMIT command to host %s\\n"" , stork_host )"		2391474	0					
ANR	2391512	Callee	error_reason . sprintf		2391474	0					
ANR	2391513	MemberAccess	error_reason . sprintf		2391474	0					
ANR	2391514	Identifier	error_reason		2391474	0					
ANR	2391515	Identifier	sprintf		2391474	1					
ANR	2391516	ArgumentList	"""Unable to start STORK_SUBMIT command to host %s\\n"""		2391474	1					
ANR	2391517	Argument	"""Unable to start STORK_SUBMIT command to host %s\\n"""		2391474	0					
ANR	2391518	PrimaryExpression	"""Unable to start STORK_SUBMIT command to host %s\\n"""		2391474	0					
ANR	2391519	Argument	stork_host		2391474	1					
ANR	2391520	Identifier	stork_host		2391474	0					
ANR	2391521	ReturnStatement	return NULL ;	172:2:4415:4426	2391474	1	True				
ANR	2391522	Identifier	NULL		2391474	0					
ANR	2391523	IdentifierDeclStatement	ReliSock * reli_sock = ( ReliSock * ) sock ;	176:1:4434:4472	2391474	3	True				
ANR	2391524	IdentifierDecl	* reli_sock = ( ReliSock * ) sock		2391474	0					
ANR	2391525	IdentifierDeclType	ReliSock *		2391474	0					
ANR	2391526	Identifier	reli_sock		2391474	1					
ANR	2391527	AssignmentExpression	* reli_sock = ( ReliSock * ) sock		2391474	2		=			
ANR	2391528	Identifier	reli_sock		2391474	0					
ANR	2391529	CastExpression	( ReliSock * ) sock		2391474	1					
ANR	2391530	CastTarget	ReliSock *		2391474	0					
ANR	2391531	Identifier	sock		2391474	1					
ANR	2391532	IfStatement	if ( ! reli_sock -> triedAuthentication ( ) )		2391474	4					
ANR	2391533	Condition	! reli_sock -> triedAuthentication ( )	178:5:4480:4512	2391474	0	True				
ANR	2391534	UnaryOperationExpression	! reli_sock -> triedAuthentication ( )		2391474	0					
ANR	2391535	UnaryOperator	!		2391474	0					
ANR	2391536	CallExpression	reli_sock -> triedAuthentication ( )		2391474	1					
ANR	2391537	Callee	reli_sock -> triedAuthentication		2391474	0					
ANR	2391538	PtrMemberAccess	reli_sock -> triedAuthentication		2391474	0					
ANR	2391539	Identifier	reli_sock		2391474	0					
ANR	2391540	Identifier	triedAuthentication		2391474	1					
ANR	2391541	ArgumentList			2391474	1					
ANR	2391542	CompoundStatement		19:2:363:383	2391474	1					
ANR	2391543	IdentifierDeclStatement	CondorError errstack ;	179:2:4520:4540	2391474	0	True				
ANR	2391544	IdentifierDecl	errstack		2391474	0					
ANR	2391545	IdentifierDeclType	CondorError		2391474	0					
ANR	2391546	Identifier	errstack		2391474	1					
ANR	2391547	IfStatement	"if ( ! SecMan :: authenticate_sock ( reli_sock , CLIENT_PERM , & errstack ) )"		2391474	1					
ANR	2391548	Condition	"! SecMan :: authenticate_sock ( reli_sock , CLIENT_PERM , & errstack )"	180:6:4548:4609	2391474	0	True				
ANR	2391549	UnaryOperationExpression	"! SecMan :: authenticate_sock ( reli_sock , CLIENT_PERM , & errstack )"		2391474	0					
ANR	2391550	UnaryOperator	!		2391474	0					
ANR	2391551	CallExpression	"SecMan :: authenticate_sock ( reli_sock , CLIENT_PERM , & errstack )"		2391474	1					
ANR	2391552	Callee	SecMan :: authenticate_sock		2391474	0					
ANR	2391553	Identifier	SecMan :: authenticate_sock		2391474	0					
ANR	2391554	ArgumentList	reli_sock		2391474	1					
ANR	2391555	Argument	reli_sock		2391474	0					
ANR	2391556	Identifier	reli_sock		2391474	0					
ANR	2391557	Argument	CLIENT_PERM		2391474	1					
ANR	2391558	Identifier	CLIENT_PERM		2391474	0					
ANR	2391559	Argument	& errstack		2391474	2					
ANR	2391560	UnaryOperationExpression	& errstack		2391474	0					
ANR	2391561	UnaryOperator	&		2391474	0					
ANR	2391562	Identifier	errstack		2391474	1					
ANR	2391563	CompoundStatement		20:71:456:456	2391474	1					
ANR	2391564	ExpressionStatement	"error_reason = ""Authentication error"""	181:3:4618:4655	2391474	0	True				
ANR	2391565	AssignmentExpression	"error_reason = ""Authentication error"""		2391474	0		=			
ANR	2391566	Identifier	error_reason		2391474	0					
ANR	2391567	PrimaryExpression	"""Authentication error"""		2391474	1					
ANR	2391568	Statement	delete	182:3:4660:4665	2391474	1	True				
ANR	2391569	ExpressionStatement	reli_sock	182:10:4667:4676	2391474	2	True				
ANR	2391570	Identifier	reli_sock		2391474	0					
ANR	2391571	ReturnStatement	return NULL ;	183:3:4681:4692	2391474	3	True				
ANR	2391572	Identifier	NULL		2391474	0					
ANR	2391573	ReturnStatement	return sock ;	187:1:4703:4714	2391474	5	True				
ANR	2391574	Identifier	sock		2391474	0					
ANR	2391575	ReturnType	Sock *		2391474	1					
ANR	2391576	Identifier	start_stork_command_and_authenticate		2391474	2					
ANR	2391577	ParameterList	"const char * stork_host , const int command , MyString & error_reason"		2391474	3					
ANR	2391578	Parameter	const char * stork_host	159:6:4075:4097	2391474	0	True				
ANR	2391579	ParameterType	const char *		2391474	0					
ANR	2391580	Identifier	stork_host		2391474	1					
ANR	2391581	Parameter	const int command	160:6:4106:4122	2391474	1	True				
ANR	2391582	ParameterType	const int		2391474	0					
ANR	2391583	Identifier	command		2391474	1					
ANR	2391584	Parameter	MyString & error_reason	161:6:4131:4153	2391474	2	True				
ANR	2391585	ParameterType	MyString &		2391474	0					
ANR	2391586	Identifier	error_reason		2391474	1					
ANR	2391587	CFGEntryNode	ENTRY		2391474		True				
ANR	2391588	CFGExitNode	EXIT		2391474		True				
ANR	2391589	Symbol	my_stork . startCommand		2391474						
ANR	2391590	Symbol	SecMan :: authenticate_sock		2391474						
ANR	2391591	Symbol	NULL		2391474						
ANR	2391592	Symbol	stork_host		2391474						
ANR	2391593	Symbol	my_stork		2391474						
ANR	2391594	Symbol	command		2391474						
ANR	2391595	Symbol	sock		2391474						
ANR	2391596	Symbol	error_reason		2391474						
ANR	2391597	Symbol	errstack		2391474						
ANR	2391598	Symbol	& errstack		2391474						
ANR	2391599	Symbol	Stream :: reli_sock		2391474						
ANR	2391600	Symbol	reli_sock		2391474						
ANR	2391601	Symbol	CLIENT_PERM		2391474						
ANR	2391602	Symbol	* reli_sock		2391474						
ANR	2391603	Symbol	reli_sock -> triedAuthentication		2391474						
ANR	2391604	Function	stork_submit	194:0:4723:6293							
ANR	2391605	FunctionDef	"stork_submit (Sock * sock , const classad :: ClassAd * request , const char * host , const char * cred , const int cred_size , char * & id , char * & _error_reason)"		2391604	0					
ANR	2391606	CompoundStatement		202:27:4912:6293	2391604	0					
ANR	2391607	IdentifierDeclStatement	bool cleanup_sock = false ;	204:1:4916:4941	2391604	0	True				
ANR	2391608	IdentifierDecl	cleanup_sock = false		2391604	0					
ANR	2391609	IdentifierDeclType	bool		2391604	0					
ANR	2391610	Identifier	cleanup_sock		2391604	1					
ANR	2391611	AssignmentExpression	cleanup_sock = false		2391604	2		=			
ANR	2391612	Identifier	false		2391604	0					
ANR	2391613	Identifier	false		2391604	1					
ANR	2391614	IfStatement	if ( sock == NULL )		2391604	1					
ANR	2391615	Condition	sock == NULL	208:5:5080:5091	2391604	0	True				
ANR	2391616	EqualityExpression	sock == NULL		2391604	0		==			
ANR	2391617	Identifier	sock		2391604	0					
ANR	2391618	Identifier	NULL		2391604	1					
ANR	2391619	CompoundStatement		9:2:207:228	2391604	1					
ANR	2391620	IdentifierDeclStatement	MyString error_reason ;	210:2:5120:5141	2391604	0	True				
ANR	2391621	IdentifierDecl	error_reason		2391604	0					
ANR	2391622	IdentifierDeclType	MyString		2391604	0					
ANR	2391623	Identifier	error_reason		2391604	1					
ANR	2391624	ExpressionStatement	"sock = start_stork_command_and_authenticate ( host , STORK_SUBMIT , error_reason )"	211:2:5145:5234	2391604	1	True				
ANR	2391625	AssignmentExpression	"sock = start_stork_command_and_authenticate ( host , STORK_SUBMIT , error_reason )"		2391604	0		=			
ANR	2391626	Identifier	sock		2391604	0					
ANR	2391627	CallExpression	"start_stork_command_and_authenticate ( host , STORK_SUBMIT , error_reason )"		2391604	1					
ANR	2391628	Callee	start_stork_command_and_authenticate		2391604	0					
ANR	2391629	Identifier	start_stork_command_and_authenticate		2391604	0					
ANR	2391630	ArgumentList	host		2391604	1					
ANR	2391631	Argument	host		2391604	0					
ANR	2391632	Identifier	host		2391604	0					
ANR	2391633	Argument	STORK_SUBMIT		2391604	1					
ANR	2391634	Identifier	STORK_SUBMIT		2391604	0					
ANR	2391635	Argument	error_reason		2391604	2					
ANR	2391636	Identifier	error_reason		2391604	0					
ANR	2391637	IfStatement	if ( ! sock )		2391604	2					
ANR	2391638	Condition	! sock	216:6:5243:5247	2391604	0	True				
ANR	2391639	UnaryOperationExpression	! sock		2391604	0					
ANR	2391640	UnaryOperator	!		2391604	0					
ANR	2391641	Identifier	sock		2391604	1					
ANR	2391642	CompoundStatement		15:13:337:337	2391604	1					
ANR	2391643	ExpressionStatement	_error_reason = strdup ( error_reason . Value ( ) )	217:3:5255:5300	2391604	0	True				
ANR	2391644	AssignmentExpression	_error_reason = strdup ( error_reason . Value ( ) )		2391604	0		=			
ANR	2391645	Identifier	_error_reason		2391604	0					
ANR	2391646	CallExpression	strdup ( error_reason . Value ( ) )		2391604	1					
ANR	2391647	Callee	strdup		2391604	0					
ANR	2391648	Identifier	strdup		2391604	0					
ANR	2391649	ArgumentList	error_reason . Value ( )		2391604	1					
ANR	2391650	Argument	error_reason . Value ( )		2391604	0					
ANR	2391651	CallExpression	error_reason . Value ( )		2391604	0					
ANR	2391652	Callee	error_reason . Value		2391604	0					
ANR	2391653	MemberAccess	error_reason . Value		2391604	0					
ANR	2391654	Identifier	error_reason		2391604	0					
ANR	2391655	Identifier	Value		2391604	1					
ANR	2391656	ArgumentList			2391604	1					
ANR	2391657	ReturnStatement	return FALSE ;	218:3:5305:5317	2391604	1	True				
ANR	2391658	Identifier	FALSE		2391604	0					
ANR	2391659	ExpressionStatement	cleanup_sock = true	220:2:5325:5344	2391604	3	True				
ANR	2391660	AssignmentExpression	cleanup_sock = true		2391604	0		=			
ANR	2391661	Identifier	cleanup_sock		2391604	0					
ANR	2391662	Identifier	true		2391604	1					
ANR	2391663	ExpressionStatement	sock -> encode ( )	223:1:5351:5365	2391604	2	True				
ANR	2391664	CallExpression	sock -> encode ( )		2391604	0					
ANR	2391665	Callee	sock -> encode		2391604	0					
ANR	2391666	PtrMemberAccess	sock -> encode		2391604	0					
ANR	2391667	Identifier	sock		2391604	0					
ANR	2391668	Identifier	encode		2391604	1					
ANR	2391669	ArgumentList			2391604	1					
ANR	2391670	IdentifierDeclStatement	classad :: ClassAdUnParser unparser ;	225:1:5369:5402	2391604	3	True				
ANR	2391671	IdentifierDecl	unparser		2391604	0					
ANR	2391672	IdentifierDeclType	classad :: ClassAdUnParser		2391604	0					
ANR	2391673	Identifier	unparser		2391604	1					
ANR	2391674	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	226:1:5405:5430	2391604	4	True				
ANR	2391675	IdentifierDecl	"adbuffer = """""		2391604	0					
ANR	2391676	IdentifierDeclType	std :: string		2391604	0					
ANR	2391677	Identifier	adbuffer		2391604	1					
ANR	2391678	AssignmentExpression	"adbuffer = """""		2391604	2		=			
ANR	2391679	Identifier	adbuffer		2391604	0					
ANR	2391680	PrimaryExpression	""""""		2391604	1					
ANR	2391681	ExpressionStatement	"unparser . Unparse ( adbuffer , request )"	227:4:5436:5471	2391604	5	True				
ANR	2391682	CallExpression	"unparser . Unparse ( adbuffer , request )"		2391604	0					
ANR	2391683	Callee	unparser . Unparse		2391604	0					
ANR	2391684	MemberAccess	unparser . Unparse		2391604	0					
ANR	2391685	Identifier	unparser		2391604	0					
ANR	2391686	Identifier	Unparse		2391604	1					
ANR	2391687	ArgumentList	adbuffer		2391604	1					
ANR	2391688	Argument	adbuffer		2391604	0					
ANR	2391689	Identifier	adbuffer		2391604	0					
ANR	2391690	Argument	request		2391604	1					
ANR	2391691	Identifier	request		2391604	0					
ANR	2391692	IdentifierDeclStatement	char * _request = strdup ( adbuffer . c_str ( ) ) ;	229:1:5475:5516	2391604	6	True				
ANR	2391693	IdentifierDecl	* _request = strdup ( adbuffer . c_str ( ) )		2391604	0					
ANR	2391694	IdentifierDeclType	char *		2391604	0					
ANR	2391695	Identifier	_request		2391604	1					
ANR	2391696	AssignmentExpression	* _request = strdup ( adbuffer . c_str ( ) )		2391604	2		=			
ANR	2391697	Identifier	_request		2391604	0					
ANR	2391698	CallExpression	strdup ( adbuffer . c_str ( ) )		2391604	1					
ANR	2391699	Callee	strdup		2391604	0					
ANR	2391700	Identifier	strdup		2391604	0					
ANR	2391701	ArgumentList	adbuffer . c_str ( )		2391604	1					
ANR	2391702	Argument	adbuffer . c_str ( )		2391604	0					
ANR	2391703	CallExpression	adbuffer . c_str ( )		2391604	0					
ANR	2391704	Callee	adbuffer . c_str		2391604	0					
ANR	2391705	MemberAccess	adbuffer . c_str		2391604	0					
ANR	2391706	Identifier	adbuffer		2391604	0					
ANR	2391707	Identifier	c_str		2391604	1					
ANR	2391708	ArgumentList			2391604	1					
ANR	2391709	IfStatement	if ( ! sock -> code ( _request ) )		2391604	7					
ANR	2391710	Condition	! sock -> code ( _request )	230:5:5538:5559	2391604	0	True				
ANR	2391711	UnaryOperationExpression	! sock -> code ( _request )		2391604	0					
ANR	2391712	UnaryOperator	!		2391604	0					
ANR	2391713	CallExpression	sock -> code ( _request )		2391604	1					
ANR	2391714	Callee	sock -> code		2391604	0					
ANR	2391715	PtrMemberAccess	sock -> code		2391604	0					
ANR	2391716	Identifier	sock		2391604	0					
ANR	2391717	Identifier	code		2391604	1					
ANR	2391718	ArgumentList	_request		2391604	1					
ANR	2391719	Argument	_request		2391604	0					
ANR	2391720	Identifier	_request		2391604	0					
ANR	2391721	CompoundStatement		29:29:649:649	2391604	1					
ANR	2391722	ExpressionStatement	"_error_reason = strdup ( ""Client send error"" )"	231:2:5566:5609	2391604	0	True				
ANR	2391723	AssignmentExpression	"_error_reason = strdup ( ""Client send error"" )"		2391604	0		=			
ANR	2391724	Identifier	_error_reason		2391604	0					
ANR	2391725	CallExpression	"strdup ( ""Client send error"" )"		2391604	1					
ANR	2391726	Callee	strdup		2391604	0					
ANR	2391727	Identifier	strdup		2391604	0					
ANR	2391728	ArgumentList	"""Client send error"""		2391604	1					
ANR	2391729	Argument	"""Client send error"""		2391604	0					
ANR	2391730	PrimaryExpression	"""Client send error"""		2391604	0					
ANR	2391731	IfStatement	if ( cleanup_sock )		2391604	1					
ANR	2391732	Condition	cleanup_sock	232:6:5617:5628	2391604	0	True				
ANR	2391733	Identifier	cleanup_sock		2391604	0					
ANR	2391734	Statement	delete	232:20:5631:5636	2391604	1	True				
ANR	2391735	ExpressionStatement	sock	232:27:5638:5642	2391604	2	True				
ANR	2391736	Identifier	sock		2391604	0					
ANR	2391737	ReturnStatement	return FALSE ;	233:2:5646:5658	2391604	3	True				
ANR	2391738	Identifier	FALSE		2391604	0					
ANR	2391739	ExpressionStatement	free ( _request )	235:1:5664:5679	2391604	8	True				
ANR	2391740	CallExpression	free ( _request )		2391604	0					
ANR	2391741	Callee	free		2391604	0					
ANR	2391742	Identifier	free		2391604	0					
ANR	2391743	ArgumentList	_request		2391604	1					
ANR	2391744	Argument	_request		2391604	0					
ANR	2391745	Identifier	_request		2391604	0					
ANR	2391746	IdentifierDeclStatement	int _cred_size = cred_size ;	237:1:5684:5710	2391604	9	True				
ANR	2391747	IdentifierDecl	_cred_size = cred_size		2391604	0					
ANR	2391748	IdentifierDeclType	int		2391604	0					
ANR	2391749	Identifier	_cred_size		2391604	1					
ANR	2391750	AssignmentExpression	_cred_size = cred_size		2391604	2		=			
ANR	2391751	Identifier	cred_size		2391604	0					
ANR	2391752	Identifier	cred_size		2391604	1					
ANR	2391753	IfStatement	if ( ! sock -> code ( & _cred_size ) )		2391604	10					
ANR	2391754	Condition	! sock -> code ( & _cred_size )	239:6:5731:5755	2391604	0	True				
ANR	2391755	UnaryOperationExpression	! sock -> code ( & _cred_size )		2391604	0					
ANR	2391756	UnaryOperator	!		2391604	0					
ANR	2391757	CallExpression	sock -> code ( & _cred_size )		2391604	1					
ANR	2391758	Callee	sock -> code		2391604	0					
ANR	2391759	PtrMemberAccess	sock -> code		2391604	0					
ANR	2391760	Identifier	sock		2391604	0					
ANR	2391761	Identifier	code		2391604	1					
ANR	2391762	ArgumentList	& _cred_size		2391604	1					
ANR	2391763	Argument	& _cred_size		2391604	0					
ANR	2391764	UnaryOperationExpression	& _cred_size		2391604	0					
ANR	2391765	UnaryOperator	&		2391604	0					
ANR	2391766	Identifier	_cred_size		2391604	1					
ANR	2391767	CompoundStatement		38:34:846:846	2391604	1					
ANR	2391768	ExpressionStatement	"_error_reason = strdup ( ""Client send error"" )"	240:2:5763:5806	2391604	0	True				
ANR	2391769	AssignmentExpression	"_error_reason = strdup ( ""Client send error"" )"		2391604	0		=			
ANR	2391770	Identifier	_error_reason		2391604	0					
ANR	2391771	CallExpression	"strdup ( ""Client send error"" )"		2391604	1					
ANR	2391772	Callee	strdup		2391604	0					
ANR	2391773	Identifier	strdup		2391604	0					
ANR	2391774	ArgumentList	"""Client send error"""		2391604	1					
ANR	2391775	Argument	"""Client send error"""		2391604	0					
ANR	2391776	PrimaryExpression	"""Client send error"""		2391604	0					
ANR	2391777	IfStatement	if ( cleanup_sock )		2391604	1					
ANR	2391778	Condition	cleanup_sock	241:6:5814:5825	2391604	0	True				
ANR	2391779	Identifier	cleanup_sock		2391604	0					
ANR	2391780	Statement	delete	241:20:5828:5833	2391604	1	True				
ANR	2391781	ExpressionStatement	sock	241:27:5835:5839	2391604	2	True				
ANR	2391782	Identifier	sock		2391604	0					
ANR	2391783	ReturnStatement	return FALSE ;	242:2:5843:5855	2391604	3	True				
ANR	2391784	Identifier	FALSE		2391604	0					
ANR	2391785	IfStatement	if ( cred_size )		2391604	11					
ANR	2391786	Condition	cred_size	244:5:5865:5873	2391604	0	True				
ANR	2391787	Identifier	cred_size		2391604	0					
ANR	2391788	CompoundStatement		44:2:967:995	2391604	1					
ANR	2391789	IdentifierDeclStatement	char * _cred = strdup ( cred ) ;	245:2:5880:5908	2391604	0	True				
ANR	2391790	IdentifierDecl	* _cred = strdup ( cred )		2391604	0					
ANR	2391791	IdentifierDeclType	char *		2391604	0					
ANR	2391792	Identifier	_cred		2391604	1					
ANR	2391793	AssignmentExpression	* _cred = strdup ( cred )		2391604	2		=			
ANR	2391794	Identifier	_cred		2391604	0					
ANR	2391795	CallExpression	strdup ( cred )		2391604	1					
ANR	2391796	Callee	strdup		2391604	0					
ANR	2391797	Identifier	strdup		2391604	0					
ANR	2391798	ArgumentList	cred		2391604	1					
ANR	2391799	Argument	cred		2391604	0					
ANR	2391800	Identifier	cred		2391604	0					
ANR	2391801	ExpressionStatement	"sock -> code_bytes ( _cred , cred_size )"	246:2:5914:5949	2391604	1	True				
ANR	2391802	CallExpression	"sock -> code_bytes ( _cred , cred_size )"		2391604	0					
ANR	2391803	Callee	sock -> code_bytes		2391604	0					
ANR	2391804	PtrMemberAccess	sock -> code_bytes		2391604	0					
ANR	2391805	Identifier	sock		2391604	0					
ANR	2391806	Identifier	code_bytes		2391604	1					
ANR	2391807	ArgumentList	_cred		2391604	1					
ANR	2391808	Argument	_cred		2391604	0					
ANR	2391809	Identifier	_cred		2391604	0					
ANR	2391810	Argument	cred_size		2391604	1					
ANR	2391811	Identifier	cred_size		2391604	0					
ANR	2391812	ExpressionStatement	free ( _cred )	247:2:5953:5965	2391604	2	True				
ANR	2391813	CallExpression	free ( _cred )		2391604	0					
ANR	2391814	Callee	free		2391604	0					
ANR	2391815	Identifier	free		2391604	0					
ANR	2391816	ArgumentList	_cred		2391604	1					
ANR	2391817	Argument	_cred		2391604	0					
ANR	2391818	Identifier	_cred		2391604	0					
ANR	2391819	ExpressionStatement	sock -> end_of_message ( )	251:1:5973:5995	2391604	12	True				
ANR	2391820	CallExpression	sock -> end_of_message ( )		2391604	0					
ANR	2391821	Callee	sock -> end_of_message		2391604	0					
ANR	2391822	PtrMemberAccess	sock -> end_of_message		2391604	0					
ANR	2391823	Identifier	sock		2391604	0					
ANR	2391824	Identifier	end_of_message		2391604	1					
ANR	2391825	ArgumentList			2391604	1					
ANR	2391826	ExpressionStatement	sock -> decode ( )	252:1:5998:6012	2391604	13	True				
ANR	2391827	CallExpression	sock -> decode ( )		2391604	0					
ANR	2391828	Callee	sock -> decode		2391604	0					
ANR	2391829	PtrMemberAccess	sock -> decode		2391604	0					
ANR	2391830	Identifier	sock		2391604	0					
ANR	2391831	Identifier	decode		2391604	1					
ANR	2391832	ArgumentList			2391604	1					
ANR	2391833	IdentifierDeclStatement	char * line = NULL ;	254:1:6016:6033	2391604	14	True				
ANR	2391834	IdentifierDecl	* line = NULL		2391604	0					
ANR	2391835	IdentifierDeclType	char *		2391604	0					
ANR	2391836	Identifier	line		2391604	1					
ANR	2391837	AssignmentExpression	* line = NULL		2391604	2		=			
ANR	2391838	Identifier	NULL		2391604	0					
ANR	2391839	Identifier	NULL		2391604	1					
ANR	2391840	IfStatement	if ( ! sock -> code ( line ) )		2391604	15					
ANR	2391841	Condition	! sock -> code ( line )	255:5:6040:6057	2391604	0	True				
ANR	2391842	UnaryOperationExpression	! sock -> code ( line )		2391604	0					
ANR	2391843	UnaryOperator	!		2391604	0					
ANR	2391844	CallExpression	sock -> code ( line )		2391604	1					
ANR	2391845	Callee	sock -> code		2391604	0					
ANR	2391846	PtrMemberAccess	sock -> code		2391604	0					
ANR	2391847	Identifier	sock		2391604	0					
ANR	2391848	Identifier	code		2391604	1					
ANR	2391849	ArgumentList	line		2391604	1					
ANR	2391850	Argument	line		2391604	0					
ANR	2391851	Identifier	line		2391604	0					
ANR	2391852	CompoundStatement		54:25:1147:1147	2391604	1					
ANR	2391853	ExpressionStatement	"_error_reason = strdup ( ""Client recv error"" )"	256:2:6064:6107	2391604	0	True				
ANR	2391854	AssignmentExpression	"_error_reason = strdup ( ""Client recv error"" )"		2391604	0		=			
ANR	2391855	Identifier	_error_reason		2391604	0					
ANR	2391856	CallExpression	"strdup ( ""Client recv error"" )"		2391604	1					
ANR	2391857	Callee	strdup		2391604	0					
ANR	2391858	Identifier	strdup		2391604	0					
ANR	2391859	ArgumentList	"""Client recv error"""		2391604	1					
ANR	2391860	Argument	"""Client recv error"""		2391604	0					
ANR	2391861	PrimaryExpression	"""Client recv error"""		2391604	0					
ANR	2391862	IfStatement	if ( cleanup_sock )		2391604	1					
ANR	2391863	Condition	cleanup_sock	257:6:6115:6126	2391604	0	True				
ANR	2391864	Identifier	cleanup_sock		2391604	0					
ANR	2391865	Statement	delete	257:20:6129:6134	2391604	1	True				
ANR	2391866	ExpressionStatement	sock	257:27:6136:6140	2391604	2	True				
ANR	2391867	Identifier	sock		2391604	0					
ANR	2391868	ReturnStatement	return FALSE ;	258:2:6144:6156	2391604	3	True				
ANR	2391869	Identifier	FALSE		2391604	0					
ANR	2391870	ExpressionStatement	sock -> end_of_message ( )	260:1:6162:6184	2391604	16	True				
ANR	2391871	CallExpression	sock -> end_of_message ( )		2391604	0					
ANR	2391872	Callee	sock -> end_of_message		2391604	0					
ANR	2391873	PtrMemberAccess	sock -> end_of_message		2391604	0					
ANR	2391874	Identifier	sock		2391604	0					
ANR	2391875	Identifier	end_of_message		2391604	1					
ANR	2391876	ArgumentList			2391604	1					
ANR	2391877	ExpressionStatement	_error_reason = NULL	262:1:6188:6208	2391604	17	True				
ANR	2391878	AssignmentExpression	_error_reason = NULL		2391604	0		=			
ANR	2391879	Identifier	_error_reason		2391604	0					
ANR	2391880	Identifier	NULL		2391604	1					
ANR	2391881	ExpressionStatement	id = line	263:1:6211:6218	2391604	18	True				
ANR	2391882	AssignmentExpression	id = line		2391604	0		=			
ANR	2391883	Identifier	id		2391604	0					
ANR	2391884	Identifier	line		2391604	1					
ANR	2391885	IfStatement	if ( cleanup_sock )		2391604	19					
ANR	2391886	Condition	cleanup_sock	265:5:6226:6237	2391604	0	True				
ANR	2391887	Identifier	cleanup_sock		2391604	0					
ANR	2391888	CompoundStatement		64:19:1327:1327	2391604	1					
ANR	2391889	ExpressionStatement	sock -> close ( )	266:2:6244:6257	2391604	0	True				
ANR	2391890	CallExpression	sock -> close ( )		2391604	0					
ANR	2391891	Callee	sock -> close		2391604	0					
ANR	2391892	PtrMemberAccess	sock -> close		2391604	0					
ANR	2391893	Identifier	sock		2391604	0					
ANR	2391894	Identifier	close		2391604	1					
ANR	2391895	ArgumentList			2391604	1					
ANR	2391896	Statement	delete	267:2:6261:6266	2391604	1	True				
ANR	2391897	ExpressionStatement	sock	267:9:6268:6272	2391604	2	True				
ANR	2391898	Identifier	sock		2391604	0					
ANR	2391899	ReturnStatement	return TRUE ;	270:1:6280:6291	2391604	20	True				
ANR	2391900	Identifier	TRUE		2391604	0					
ANR	2391901	ReturnType	int		2391604	1					
ANR	2391902	Identifier	stork_submit		2391604	2					
ANR	2391903	ParameterList	"Sock * sock , const classad :: ClassAd * request , const char * host , const char * cred , const int cred_size , char * & id , char * & _error_reason"		2391604	3					
ANR	2391904	Parameter	Sock * sock	196:3:4746:4756	2391604	0	True				
ANR	2391905	ParameterType	Sock *		2391604	0					
ANR	2391906	Identifier	sock		2391604	1					
ANR	2391907	Parameter	const classad :: ClassAd * request	197:3:4762:4793	2391604	1	True				
ANR	2391908	ParameterType	const classad :: ClassAd *		2391604	0					
ANR	2391909	Identifier	request		2391604	1					
ANR	2391910	Parameter	const char * host	198:3:4799:4815	2391604	2	True				
ANR	2391911	ParameterType	const char *		2391604	0					
ANR	2391912	Identifier	host		2391604	1					
ANR	2391913	Parameter	const char * cred	199:3:4822:4838	2391604	3	True				
ANR	2391914	ParameterType	const char *		2391604	0					
ANR	2391915	Identifier	cred		2391604	1					
ANR	2391916	Parameter	const int cred_size	200:3:4845:4863	2391604	4	True				
ANR	2391917	ParameterType	const int		2391604	0					
ANR	2391918	Identifier	cred_size		2391604	1					
ANR	2391919	Parameter	char * & id	201:6:4873:4882	2391604	5	True				
ANR	2391920	ParameterType	char * &		2391604	0					
ANR	2391921	Identifier	id		2391604	1					
ANR	2391922	Parameter	char * & _error_reason	202:3:4888:4909	2391604	6	True				
ANR	2391923	ParameterType	char * &		2391604	0					
ANR	2391924	Identifier	_error_reason		2391604	1					
ANR	2391925	CFGEntryNode	ENTRY		2391604		True				
ANR	2391926	CFGExitNode	EXIT		2391604		True				
ANR	2391927	Symbol	STORK_SUBMIT		2391604						
ANR	2391928	Symbol	request		2391604						
ANR	2391929	Symbol	_cred		2391604						
ANR	2391930	Symbol	line		2391604						
ANR	2391931	Symbol	_request		2391604						
ANR	2391932	Symbol	& _cred_size		2391604						
ANR	2391933	Symbol	error_reason		2391604						
ANR	2391934	Symbol	_error_reason		2391604						
ANR	2391935	Symbol	host		2391604						
ANR	2391936	Symbol	error_reason . Value		2391604						
ANR	2391937	Symbol	id		2391604						
ANR	2391938	Symbol	* sock		2391604						
ANR	2391939	Symbol	start_stork_command_and_authenticate		2391604						
ANR	2391940	Symbol	cred		2391604						
ANR	2391941	Symbol	cleanup_sock		2391604						
ANR	2391942	Symbol	NULL		2391604						
ANR	2391943	Symbol	false		2391604						
ANR	2391944	Symbol	TRUE		2391604						
ANR	2391945	Symbol	sock		2391604						
ANR	2391946	Symbol	sock -> code		2391604						
ANR	2391947	Symbol	cred_size		2391604						
ANR	2391948	Symbol	true		2391604						
ANR	2391949	Symbol	FALSE		2391604						
ANR	2391950	Symbol	unparser		2391604						
ANR	2391951	Symbol	strdup		2391604						
ANR	2391952	Symbol	adbuffer . c_str		2391604						
ANR	2391953	Symbol	_cred_size		2391604						
ANR	2391954	Symbol	adbuffer		2391604						
ANR	2391955	Function	stork_rm	273:0:6296:7200							
ANR	2391956	FunctionDef	"stork_rm (const char * id , const char * host , char * & result , char * & _error_reason)"		2391955	0					
ANR	2391957	CompoundStatement		278:27:6402:7200	2391955	0					
ANR	2391958	IdentifierDeclStatement	MyString error_reason ;	281:1:6428:6449	2391955	0	True				
ANR	2391959	IdentifierDecl	error_reason		2391955	0					
ANR	2391960	IdentifierDeclType	MyString		2391955	0					
ANR	2391961	Identifier	error_reason		2391955	1					
ANR	2391962	IdentifierDeclStatement	"Sock * sock = start_stork_command_and_authenticate ( host , STORK_REMOVE , error_reason ) ;"	282:1:6452:6581	2391955	1	True				
ANR	2391963	IdentifierDecl	"* sock = start_stork_command_and_authenticate ( host , STORK_REMOVE , error_reason )"		2391955	0					
ANR	2391964	IdentifierDeclType	Sock *		2391955	0					
ANR	2391965	Identifier	sock		2391955	1					
ANR	2391966	AssignmentExpression	"* sock = start_stork_command_and_authenticate ( host , STORK_REMOVE , error_reason )"		2391955	2		=			
ANR	2391967	Identifier	sock		2391955	0					
ANR	2391968	CallExpression	"start_stork_command_and_authenticate ( host , STORK_REMOVE , error_reason )"		2391955	1					
ANR	2391969	Callee	start_stork_command_and_authenticate		2391955	0					
ANR	2391970	Identifier	start_stork_command_and_authenticate		2391955	0					
ANR	2391971	ArgumentList	host		2391955	1					
ANR	2391972	Argument	host		2391955	0					
ANR	2391973	Identifier	host		2391955	0					
ANR	2391974	Argument	STORK_REMOVE		2391955	1					
ANR	2391975	Identifier	STORK_REMOVE		2391955	0					
ANR	2391976	Argument	error_reason		2391955	2					
ANR	2391977	Identifier	error_reason		2391955	0					
ANR	2391978	IfStatement	if ( ! sock )		2391955	2					
ANR	2391979	Condition	! sock	288:5:6589:6593	2391955	0	True				
ANR	2391980	UnaryOperationExpression	! sock		2391955	0					
ANR	2391981	UnaryOperator	!		2391955	0					
ANR	2391982	Identifier	sock		2391955	1					
ANR	2391983	CompoundStatement		11:12:193:193	2391955	1					
ANR	2391984	ExpressionStatement	_error_reason = strdup ( error_reason . Value ( ) )	289:2:6600:6645	2391955	0	True				
ANR	2391985	AssignmentExpression	_error_reason = strdup ( error_reason . Value ( ) )		2391955	0		=			
ANR	2391986	Identifier	_error_reason		2391955	0					
ANR	2391987	CallExpression	strdup ( error_reason . Value ( ) )		2391955	1					
ANR	2391988	Callee	strdup		2391955	0					
ANR	2391989	Identifier	strdup		2391955	0					
ANR	2391990	ArgumentList	error_reason . Value ( )		2391955	1					
ANR	2391991	Argument	error_reason . Value ( )		2391955	0					
ANR	2391992	CallExpression	error_reason . Value ( )		2391955	0					
ANR	2391993	Callee	error_reason . Value		2391955	0					
ANR	2391994	MemberAccess	error_reason . Value		2391955	0					
ANR	2391995	Identifier	error_reason		2391955	0					
ANR	2391996	Identifier	Value		2391955	1					
ANR	2391997	ArgumentList			2391955	1					
ANR	2391998	ReturnStatement	return FALSE ;	290:2:6649:6661	2391955	1	True				
ANR	2391999	Identifier	FALSE		2391955	0					
ANR	2392000	ExpressionStatement	sock -> encode ( )	293:1:6668:6682	2391955	3	True				
ANR	2392001	CallExpression	sock -> encode ( )		2391955	0					
ANR	2392002	Callee	sock -> encode		2391955	0					
ANR	2392003	PtrMemberAccess	sock -> encode		2391955	0					
ANR	2392004	Identifier	sock		2391955	0					
ANR	2392005	Identifier	encode		2391955	1					
ANR	2392006	ArgumentList			2391955	1					
ANR	2392007	IfStatement	if ( ! sock -> put ( id ) )		2391955	4					
ANR	2392008	Condition	! sock -> put ( id )	295:5:6690:6704	2391955	0	True				
ANR	2392009	UnaryOperationExpression	! sock -> put ( id )		2391955	0					
ANR	2392010	UnaryOperator	!		2391955	0					
ANR	2392011	CallExpression	sock -> put ( id )		2391955	1					
ANR	2392012	Callee	sock -> put		2391955	0					
ANR	2392013	PtrMemberAccess	sock -> put		2391955	0					
ANR	2392014	Identifier	sock		2391955	0					
ANR	2392015	Identifier	put		2391955	1					
ANR	2392016	ArgumentList	id		2391955	1					
ANR	2392017	Argument	id		2391955	0					
ANR	2392018	Identifier	id		2391955	0					
ANR	2392019	CompoundStatement		18:22:304:304	2391955	1					
ANR	2392020	ExpressionStatement	"_error_reason = strdup ( ""Client send error"" )"	296:2:6711:6755	2391955	0	True				
ANR	2392021	AssignmentExpression	"_error_reason = strdup ( ""Client send error"" )"		2391955	0		=			
ANR	2392022	Identifier	_error_reason		2391955	0					
ANR	2392023	CallExpression	"strdup ( ""Client send error"" )"		2391955	1					
ANR	2392024	Callee	strdup		2391955	0					
ANR	2392025	Identifier	strdup		2391955	0					
ANR	2392026	ArgumentList	"""Client send error"""		2391955	1					
ANR	2392027	Argument	"""Client send error"""		2391955	0					
ANR	2392028	PrimaryExpression	"""Client send error"""		2391955	0					
ANR	2392029	Statement	delete	297:2:6759:6764	2391955	1	True				
ANR	2392030	ExpressionStatement	sock	297:9:6766:6770	2391955	2	True				
ANR	2392031	Identifier	sock		2391955	0					
ANR	2392032	ReturnStatement	return FALSE ;	298:2:6774:6786	2391955	3	True				
ANR	2392033	Identifier	FALSE		2391955	0					
ANR	2392034	ExpressionStatement	sock -> end_of_message ( )	301:1:6793:6815	2391955	5	True				
ANR	2392035	CallExpression	sock -> end_of_message ( )		2391955	0					
ANR	2392036	Callee	sock -> end_of_message		2391955	0					
ANR	2392037	PtrMemberAccess	sock -> end_of_message		2391955	0					
ANR	2392038	Identifier	sock		2391955	0					
ANR	2392039	Identifier	end_of_message		2391955	1					
ANR	2392040	ArgumentList			2391955	1					
ANR	2392041	ExpressionStatement	sock -> decode ( )	302:1:6818:6832	2391955	6	True				
ANR	2392042	CallExpression	sock -> decode ( )		2391955	0					
ANR	2392043	Callee	sock -> decode		2391955	0					
ANR	2392044	PtrMemberAccess	sock -> decode		2391955	0					
ANR	2392045	Identifier	sock		2391955	0					
ANR	2392046	Identifier	decode		2391955	1					
ANR	2392047	ArgumentList			2391955	1					
ANR	2392048	IdentifierDeclStatement	int rc = 0 ;	304:1:6836:6844	2391955	7	True				
ANR	2392049	IdentifierDecl	rc = 0		2391955	0					
ANR	2392050	IdentifierDeclType	int		2391955	0					
ANR	2392051	Identifier	rc		2391955	1					
ANR	2392052	AssignmentExpression	rc = 0		2391955	2		=			
ANR	2392053	Identifier	rc		2391955	0					
ANR	2392054	PrimaryExpression	0		2391955	1					
ANR	2392055	IdentifierDeclStatement	char * buff = NULL ;	307:1:6890:6907	2391955	8	True				
ANR	2392056	IdentifierDecl	* buff = NULL		2391955	0					
ANR	2392057	IdentifierDeclType	char *		2391955	0					
ANR	2392058	Identifier	buff		2391955	1					
ANR	2392059	AssignmentExpression	* buff = NULL		2391955	2		=			
ANR	2392060	Identifier	NULL		2391955	0					
ANR	2392061	Identifier	NULL		2391955	1					
ANR	2392062	IfStatement	if ( ! ( sock -> code ( rc ) && sock -> code ( buff ) ) )		2391955	9					
ANR	2392063	Condition	! ( sock -> code ( rc ) && sock -> code ( buff ) )	308:5:6914:6950	2391955	0	True				
ANR	2392064	UnaryOperationExpression	! ( sock -> code ( rc ) && sock -> code ( buff ) )		2391955	0					
ANR	2392065	UnaryOperator	!		2391955	0					
ANR	2392066	AndExpression	sock -> code ( rc ) && sock -> code ( buff )		2391955	1		&&			
ANR	2392067	CallExpression	sock -> code ( rc )		2391955	0					
ANR	2392068	Callee	sock -> code		2391955	0					
ANR	2392069	PtrMemberAccess	sock -> code		2391955	0					
ANR	2392070	Identifier	sock		2391955	0					
ANR	2392071	Identifier	code		2391955	1					
ANR	2392072	ArgumentList	rc		2391955	1					
ANR	2392073	Argument	rc		2391955	0					
ANR	2392074	Identifier	rc		2391955	0					
ANR	2392075	CallExpression	sock -> code ( buff )		2391955	1					
ANR	2392076	Callee	sock -> code		2391955	0					
ANR	2392077	PtrMemberAccess	sock -> code		2391955	0					
ANR	2392078	Identifier	sock		2391955	0					
ANR	2392079	Identifier	code		2391955	1					
ANR	2392080	ArgumentList	buff		2391955	1					
ANR	2392081	Argument	buff		2391955	0					
ANR	2392082	Identifier	buff		2391955	0					
ANR	2392083	CompoundStatement		31:44:550:550	2391955	1					
ANR	2392084	ExpressionStatement	"_error_reason = strdup ( ""Client recv error"" )"	309:2:6957:7001	2391955	0	True				
ANR	2392085	AssignmentExpression	"_error_reason = strdup ( ""Client recv error"" )"		2391955	0		=			
ANR	2392086	Identifier	_error_reason		2391955	0					
ANR	2392087	CallExpression	"strdup ( ""Client recv error"" )"		2391955	1					
ANR	2392088	Callee	strdup		2391955	0					
ANR	2392089	Identifier	strdup		2391955	0					
ANR	2392090	ArgumentList	"""Client recv error"""		2391955	1					
ANR	2392091	Argument	"""Client recv error"""		2391955	0					
ANR	2392092	PrimaryExpression	"""Client recv error"""		2391955	0					
ANR	2392093	Statement	delete	310:2:7005:7010	2391955	1	True				
ANR	2392094	ExpressionStatement	sock	310:9:7012:7016	2391955	2	True				
ANR	2392095	Identifier	sock		2391955	0					
ANR	2392096	ReturnStatement	return FALSE ;	311:2:7020:7032	2391955	3	True				
ANR	2392097	Identifier	FALSE		2391955	0					
ANR	2392098	IfStatement	if ( rc )		2391955	10					
ANR	2392099	Condition	rc	314:5:7043:7044	2391955	0	True				
ANR	2392100	Identifier	rc		2391955	0					
ANR	2392101	CompoundStatement		37:9:644:644	2391955	1					
ANR	2392102	ExpressionStatement	result = buff	315:2:7051:7064	2391955	0	True				
ANR	2392103	AssignmentExpression	result = buff		2391955	0		=			
ANR	2392104	Identifier	result		2391955	0					
ANR	2392105	Identifier	buff		2391955	1					
ANR	2392106	ExpressionStatement	_error_reason = NULL	316:2:7068:7088	2391955	1	True				
ANR	2392107	AssignmentExpression	_error_reason = NULL		2391955	0		=			
ANR	2392108	Identifier	_error_reason		2391955	0					
ANR	2392109	Identifier	NULL		2391955	1					
ANR	2392110	ElseStatement	else		2391955	0					
ANR	2392111	CompoundStatement		40:8:695:695	2391955	0					
ANR	2392112	ExpressionStatement	result = NULL	318:2:7102:7115	2391955	0	True				
ANR	2392113	AssignmentExpression	result = NULL		2391955	0		=			
ANR	2392114	Identifier	result		2391955	0					
ANR	2392115	Identifier	NULL		2391955	1					
ANR	2392116	ExpressionStatement	_error_reason = buff	319:2:7119:7139	2391955	1	True				
ANR	2392117	AssignmentExpression	_error_reason = buff		2391955	0		=			
ANR	2392118	Identifier	_error_reason		2391955	0					
ANR	2392119	Identifier	buff		2391955	1					
ANR	2392120	ExpressionStatement	sock -> close ( )	322:1:7146:7159	2391955	11	True				
ANR	2392121	CallExpression	sock -> close ( )		2391955	0					
ANR	2392122	Callee	sock -> close		2391955	0					
ANR	2392123	PtrMemberAccess	sock -> close		2391955	0					
ANR	2392124	Identifier	sock		2391955	0					
ANR	2392125	Identifier	close		2391955	1					
ANR	2392126	ArgumentList			2391955	1					
ANR	2392127	Statement	delete	323:1:7162:7167	2391955	12	True				
ANR	2392128	ExpressionStatement	sock	323:8:7169:7173	2391955	13	True				
ANR	2392129	Identifier	sock		2391955	0					
ANR	2392130	ReturnStatement	return ( rc ) ? TRUE : FALSE ;	324:1:7176:7198	2391955	14	True				
ANR	2392131	ConditionalExpression	( rc ) ? TRUE : FALSE		2391955	0					
ANR	2392132	Condition	rc		2391955	0					
ANR	2392133	Identifier	rc		2391955	0					
ANR	2392134	Identifier	TRUE		2391955	1					
ANR	2392135	Identifier	FALSE		2391955	2					
ANR	2392136	ReturnType	int		2391955	1					
ANR	2392137	Identifier	stork_rm		2391955	2					
ANR	2392138	ParameterList	"const char * id , const char * host , char * & result , char * & _error_reason"		2391955	3					
ANR	2392139	Parameter	const char * id	275:3:6314:6328	2391955	0	True				
ANR	2392140	ParameterType	const char *		2391955	0					
ANR	2392141	Identifier	id		2391955	1					
ANR	2392142	Parameter	const char * host	276:3:6335:6351	2391955	1	True				
ANR	2392143	ParameterType	const char *		2391955	0					
ANR	2392144	Identifier	host		2391955	1					
ANR	2392145	Parameter	char * & result	277:3:6358:6372	2391955	2	True				
ANR	2392146	ParameterType	char * &		2391955	0					
ANR	2392147	Identifier	result		2391955	1					
ANR	2392148	Parameter	char * & _error_reason	278:3:6378:6399	2391955	3	True				
ANR	2392149	ParameterType	char * &		2391955	0					
ANR	2392150	Identifier	_error_reason		2391955	1					
ANR	2392151	CFGEntryNode	ENTRY		2391955		True				
ANR	2392152	CFGExitNode	EXIT		2391955		True				
ANR	2392153	Symbol	STORK_REMOVE		2391955						
ANR	2392154	Symbol	NULL		2391955						
ANR	2392155	Symbol	sock -> put		2391955						
ANR	2392156	Symbol	TRUE		2391955						
ANR	2392157	Symbol	result		2391955						
ANR	2392158	Symbol	sock		2391955						
ANR	2392159	Symbol	rc		2391955						
ANR	2392160	Symbol	error_reason		2391955						
ANR	2392161	Symbol	_error_reason		2391955						
ANR	2392162	Symbol	sock -> code		2391955						
ANR	2392163	Symbol	host		2391955						
ANR	2392164	Symbol	error_reason . Value		2391955						
ANR	2392165	Symbol	FALSE		2391955						
ANR	2392166	Symbol	id		2391955						
ANR	2392167	Symbol	strdup		2391955						
ANR	2392168	Symbol	buff		2391955						
ANR	2392169	Symbol	* sock		2391955						
ANR	2392170	Symbol	start_stork_command_and_authenticate		2391955						
ANR	2392171	Function	stork_status	328:0:7204:8294							
ANR	2392172	FunctionDef	"stork_status (const char * id , const char * host , classad :: ClassAd * & result , char * & _error_reason)"		2392171	0					
ANR	2392173	CompoundStatement		333:27:7326:8294	2392171	0					
ANR	2392174	IdentifierDeclStatement	MyString error_reason ;	336:1:7352:7373	2392171	0	True				
ANR	2392175	IdentifierDecl	error_reason		2392171	0					
ANR	2392176	IdentifierDeclType	MyString		2392171	0					
ANR	2392177	Identifier	error_reason		2392171	1					
ANR	2392178	IdentifierDeclStatement	"Sock * sock = start_stork_command_and_authenticate ( host , STORK_STATUS , error_reason ) ;"	337:1:7376:7505	2392171	1	True				
ANR	2392179	IdentifierDecl	"* sock = start_stork_command_and_authenticate ( host , STORK_STATUS , error_reason )"		2392171	0					
ANR	2392180	IdentifierDeclType	Sock *		2392171	0					
ANR	2392181	Identifier	sock		2392171	1					
ANR	2392182	AssignmentExpression	"* sock = start_stork_command_and_authenticate ( host , STORK_STATUS , error_reason )"		2392171	2		=			
ANR	2392183	Identifier	sock		2392171	0					
ANR	2392184	CallExpression	"start_stork_command_and_authenticate ( host , STORK_STATUS , error_reason )"		2392171	1					
ANR	2392185	Callee	start_stork_command_and_authenticate		2392171	0					
ANR	2392186	Identifier	start_stork_command_and_authenticate		2392171	0					
ANR	2392187	ArgumentList	host		2392171	1					
ANR	2392188	Argument	host		2392171	0					
ANR	2392189	Identifier	host		2392171	0					
ANR	2392190	Argument	STORK_STATUS		2392171	1					
ANR	2392191	Identifier	STORK_STATUS		2392171	0					
ANR	2392192	Argument	error_reason		2392171	2					
ANR	2392193	Identifier	error_reason		2392171	0					
ANR	2392194	IfStatement	if ( ! sock )		2392171	2					
ANR	2392195	Condition	! sock	343:5:7513:7517	2392171	0	True				
ANR	2392196	UnaryOperationExpression	! sock		2392171	0					
ANR	2392197	UnaryOperator	!		2392171	0					
ANR	2392198	Identifier	sock		2392171	1					
ANR	2392199	CompoundStatement		11:12:193:193	2392171	1					
ANR	2392200	ExpressionStatement	_error_reason = strdup ( error_reason . Value ( ) )	344:2:7524:7569	2392171	0	True				
ANR	2392201	AssignmentExpression	_error_reason = strdup ( error_reason . Value ( ) )		2392171	0		=			
ANR	2392202	Identifier	_error_reason		2392171	0					
ANR	2392203	CallExpression	strdup ( error_reason . Value ( ) )		2392171	1					
ANR	2392204	Callee	strdup		2392171	0					
ANR	2392205	Identifier	strdup		2392171	0					
ANR	2392206	ArgumentList	error_reason . Value ( )		2392171	1					
ANR	2392207	Argument	error_reason . Value ( )		2392171	0					
ANR	2392208	CallExpression	error_reason . Value ( )		2392171	0					
ANR	2392209	Callee	error_reason . Value		2392171	0					
ANR	2392210	MemberAccess	error_reason . Value		2392171	0					
ANR	2392211	Identifier	error_reason		2392171	0					
ANR	2392212	Identifier	Value		2392171	1					
ANR	2392213	ArgumentList			2392171	1					
ANR	2392214	ReturnStatement	return FALSE ;	345:2:7573:7585	2392171	1	True				
ANR	2392215	Identifier	FALSE		2392171	0					
ANR	2392216	ExpressionStatement	sock -> encode ( )	348:1:7592:7606	2392171	3	True				
ANR	2392217	CallExpression	sock -> encode ( )		2392171	0					
ANR	2392218	Callee	sock -> encode		2392171	0					
ANR	2392219	PtrMemberAccess	sock -> encode		2392171	0					
ANR	2392220	Identifier	sock		2392171	0					
ANR	2392221	Identifier	encode		2392171	1					
ANR	2392222	ArgumentList			2392171	1					
ANR	2392223	IfStatement	if ( ! sock -> put ( id ) )		2392171	4					
ANR	2392224	Condition	! sock -> put ( id )	350:5:7614:7628	2392171	0	True				
ANR	2392225	UnaryOperationExpression	! sock -> put ( id )		2392171	0					
ANR	2392226	UnaryOperator	!		2392171	0					
ANR	2392227	CallExpression	sock -> put ( id )		2392171	1					
ANR	2392228	Callee	sock -> put		2392171	0					
ANR	2392229	PtrMemberAccess	sock -> put		2392171	0					
ANR	2392230	Identifier	sock		2392171	0					
ANR	2392231	Identifier	put		2392171	1					
ANR	2392232	ArgumentList	id		2392171	1					
ANR	2392233	Argument	id		2392171	0					
ANR	2392234	Identifier	id		2392171	0					
ANR	2392235	CompoundStatement		18:22:304:304	2392171	1					
ANR	2392236	ExpressionStatement	"_error_reason = strdup ( ""Client send error"" )"	351:2:7635:7679	2392171	0	True				
ANR	2392237	AssignmentExpression	"_error_reason = strdup ( ""Client send error"" )"		2392171	0		=			
ANR	2392238	Identifier	_error_reason		2392171	0					
ANR	2392239	CallExpression	"strdup ( ""Client send error"" )"		2392171	1					
ANR	2392240	Callee	strdup		2392171	0					
ANR	2392241	Identifier	strdup		2392171	0					
ANR	2392242	ArgumentList	"""Client send error"""		2392171	1					
ANR	2392243	Argument	"""Client send error"""		2392171	0					
ANR	2392244	PrimaryExpression	"""Client send error"""		2392171	0					
ANR	2392245	Statement	delete	352:2:7683:7688	2392171	1	True				
ANR	2392246	ExpressionStatement	sock	352:9:7690:7694	2392171	2	True				
ANR	2392247	Identifier	sock		2392171	0					
ANR	2392248	ReturnStatement	return FALSE ;	353:2:7698:7710	2392171	3	True				
ANR	2392249	Identifier	FALSE		2392171	0					
ANR	2392250	ExpressionStatement	sock -> end_of_message ( )	356:1:7717:7739	2392171	5	True				
ANR	2392251	CallExpression	sock -> end_of_message ( )		2392171	0					
ANR	2392252	Callee	sock -> end_of_message		2392171	0					
ANR	2392253	PtrMemberAccess	sock -> end_of_message		2392171	0					
ANR	2392254	Identifier	sock		2392171	0					
ANR	2392255	Identifier	end_of_message		2392171	1					
ANR	2392256	ArgumentList			2392171	1					
ANR	2392257	ExpressionStatement	sock -> decode ( )	357:1:7742:7756	2392171	6	True				
ANR	2392258	CallExpression	sock -> decode ( )		2392171	0					
ANR	2392259	Callee	sock -> decode		2392171	0					
ANR	2392260	PtrMemberAccess	sock -> decode		2392171	0					
ANR	2392261	Identifier	sock		2392171	0					
ANR	2392262	Identifier	decode		2392171	1					
ANR	2392263	ArgumentList			2392171	1					
ANR	2392264	IdentifierDeclStatement	int rc = 0 ;	359:1:7761:7771	2392171	7	True				
ANR	2392265	IdentifierDecl	rc = 0		2392171	0					
ANR	2392266	IdentifierDeclType	int		2392171	0					
ANR	2392267	Identifier	rc		2392171	1					
ANR	2392268	AssignmentExpression	rc = 0		2392171	2		=			
ANR	2392269	Identifier	rc		2392171	0					
ANR	2392270	PrimaryExpression	0		2392171	1					
ANR	2392271	IdentifierDeclStatement	MyString buf ;	361:1:7815:7827	2392171	8	True				
ANR	2392272	IdentifierDecl	buf		2392171	0					
ANR	2392273	IdentifierDeclType	MyString		2392171	0					
ANR	2392274	Identifier	buf		2392171	1					
ANR	2392275	IfStatement	if ( ! ( sock -> code ( rc ) && sock -> code ( buf ) ) )		2392171	9					
ANR	2392276	Condition	! ( sock -> code ( rc ) && sock -> code ( buf ) )	362:5:7834:7869	2392171	0	True				
ANR	2392277	UnaryOperationExpression	! ( sock -> code ( rc ) && sock -> code ( buf ) )		2392171	0					
ANR	2392278	UnaryOperator	!		2392171	0					
ANR	2392279	AndExpression	sock -> code ( rc ) && sock -> code ( buf )		2392171	1		&&			
ANR	2392280	CallExpression	sock -> code ( rc )		2392171	0					
ANR	2392281	Callee	sock -> code		2392171	0					
ANR	2392282	PtrMemberAccess	sock -> code		2392171	0					
ANR	2392283	Identifier	sock		2392171	0					
ANR	2392284	Identifier	code		2392171	1					
ANR	2392285	ArgumentList	rc		2392171	1					
ANR	2392286	Argument	rc		2392171	0					
ANR	2392287	Identifier	rc		2392171	0					
ANR	2392288	CallExpression	sock -> code ( buf )		2392171	1					
ANR	2392289	Callee	sock -> code		2392171	0					
ANR	2392290	PtrMemberAccess	sock -> code		2392171	0					
ANR	2392291	Identifier	sock		2392171	0					
ANR	2392292	Identifier	code		2392171	1					
ANR	2392293	ArgumentList	buf		2392171	1					
ANR	2392294	Argument	buf		2392171	0					
ANR	2392295	Identifier	buf		2392171	0					
ANR	2392296	CompoundStatement		30:43:545:545	2392171	1					
ANR	2392297	ExpressionStatement	"_error_reason = strdup ( ""Client recv error"" )"	363:2:7876:7920	2392171	0	True				
ANR	2392298	AssignmentExpression	"_error_reason = strdup ( ""Client recv error"" )"		2392171	0		=			
ANR	2392299	Identifier	_error_reason		2392171	0					
ANR	2392300	CallExpression	"strdup ( ""Client recv error"" )"		2392171	1					
ANR	2392301	Callee	strdup		2392171	0					
ANR	2392302	Identifier	strdup		2392171	0					
ANR	2392303	ArgumentList	"""Client recv error"""		2392171	1					
ANR	2392304	Argument	"""Client recv error"""		2392171	0					
ANR	2392305	PrimaryExpression	"""Client recv error"""		2392171	0					
ANR	2392306	Statement	delete	364:2:7924:7929	2392171	1	True				
ANR	2392307	ExpressionStatement	sock	364:9:7931:7935	2392171	2	True				
ANR	2392308	Identifier	sock		2392171	0					
ANR	2392309	ReturnStatement	return FALSE ;	365:2:7939:7951	2392171	3	True				
ANR	2392310	Identifier	FALSE		2392171	0					
ANR	2392311	IfStatement	if ( rc )		2392171	10					
ANR	2392312	Condition	rc	369:5:7963:7964	2392171	0	True				
ANR	2392313	Identifier	rc		2392171	0					
ANR	2392314	CompoundStatement		38:3:645:674	2392171	1					
ANR	2392315	IdentifierDeclStatement	classad :: ClassAdParser parser ;	370:3:7972:8001	2392171	0	True				
ANR	2392316	IdentifierDecl	parser		2392171	0					
ANR	2392317	IdentifierDeclType	classad :: ClassAdParser		2392171	0					
ANR	2392318	Identifier	parser		2392171	1					
ANR	2392319	ExpressionStatement	result = parser . ParseClassAd ( buf . Value ( ) )	371:3:8006:8050	2392171	1	True				
ANR	2392320	AssignmentExpression	result = parser . ParseClassAd ( buf . Value ( ) )		2392171	0		=			
ANR	2392321	Identifier	result		2392171	0					
ANR	2392322	CallExpression	parser . ParseClassAd ( buf . Value ( ) )		2392171	1					
ANR	2392323	Callee	parser . ParseClassAd		2392171	0					
ANR	2392324	MemberAccess	parser . ParseClassAd		2392171	0					
ANR	2392325	Identifier	parser		2392171	0					
ANR	2392326	Identifier	ParseClassAd		2392171	1					
ANR	2392327	ArgumentList	buf . Value ( )		2392171	1					
ANR	2392328	Argument	buf . Value ( )		2392171	0					
ANR	2392329	CallExpression	buf . Value ( )		2392171	0					
ANR	2392330	Callee	buf . Value		2392171	0					
ANR	2392331	MemberAccess	buf . Value		2392171	0					
ANR	2392332	Identifier	buf		2392171	0					
ANR	2392333	Identifier	Value		2392171	1					
ANR	2392334	ArgumentList			2392171	1					
ANR	2392335	IfStatement	if ( ! result )		2392171	2					
ANR	2392336	Condition	! result	372:7:8059:8065	2392171	0	True				
ANR	2392337	UnaryOperationExpression	! result		2392171	0					
ANR	2392338	UnaryOperator	!		2392171	0					
ANR	2392339	Identifier	result		2392171	1					
ANR	2392340	CompoundStatement		40:16:741:741	2392171	1					
ANR	2392341	ExpressionStatement	"_error_reason = strdup ( ""Unable to parse result"" )"	373:4:8074:8120	2392171	0	True				
ANR	2392342	AssignmentExpression	"_error_reason = strdup ( ""Unable to parse result"" )"		2392171	0		=			
ANR	2392343	Identifier	_error_reason		2392171	0					
ANR	2392344	CallExpression	"strdup ( ""Unable to parse result"" )"		2392171	1					
ANR	2392345	Callee	strdup		2392171	0					
ANR	2392346	Identifier	strdup		2392171	0					
ANR	2392347	ArgumentList	"""Unable to parse result"""		2392171	1					
ANR	2392348	Argument	"""Unable to parse result"""		2392171	0					
ANR	2392349	PrimaryExpression	"""Unable to parse result"""		2392171	0					
ANR	2392350	ExpressionStatement	rc = 0	374:4:8126:8130	2392171	1	True				
ANR	2392351	AssignmentExpression	rc = 0		2392171	0		=			
ANR	2392352	Identifier	rc		2392171	0					
ANR	2392353	PrimaryExpression	0		2392171	1					
ANR	2392354	ElseStatement	else		2392171	0					
ANR	2392355	CompoundStatement		43:10:815:815	2392171	0					
ANR	2392356	ExpressionStatement	_error_reason = NULL	376:4:8148:8168	2392171	0	True				
ANR	2392357	AssignmentExpression	_error_reason = NULL		2392171	0		=			
ANR	2392358	Identifier	_error_reason		2392171	0					
ANR	2392359	Identifier	NULL		2392171	1					
ANR	2392360	ElseStatement	else		2392171	0					
ANR	2392361	CompoundStatement		46:8:856:856	2392171	0					
ANR	2392362	ExpressionStatement	result = NULL	379:2:8187:8200	2392171	0	True				
ANR	2392363	AssignmentExpression	result = NULL		2392171	0		=			
ANR	2392364	Identifier	result		2392171	0					
ANR	2392365	Identifier	NULL		2392171	1					
ANR	2392366	ExpressionStatement	_error_reason = buf . StrDup ( )	380:2:8204:8233	2392171	1	True				
ANR	2392367	AssignmentExpression	_error_reason = buf . StrDup ( )		2392171	0		=			
ANR	2392368	Identifier	_error_reason		2392171	0					
ANR	2392369	CallExpression	buf . StrDup ( )		2392171	1					
ANR	2392370	Callee	buf . StrDup		2392171	0					
ANR	2392371	MemberAccess	buf . StrDup		2392171	0					
ANR	2392372	Identifier	buf		2392171	0					
ANR	2392373	Identifier	StrDup		2392171	1					
ANR	2392374	ArgumentList			2392171	1					
ANR	2392375	ExpressionStatement	sock -> close ( )	383:1:8240:8253	2392171	11	True				
ANR	2392376	CallExpression	sock -> close ( )		2392171	0					
ANR	2392377	Callee	sock -> close		2392171	0					
ANR	2392378	PtrMemberAccess	sock -> close		2392171	0					
ANR	2392379	Identifier	sock		2392171	0					
ANR	2392380	Identifier	close		2392171	1					
ANR	2392381	ArgumentList			2392171	1					
ANR	2392382	Statement	delete	384:1:8256:8261	2392171	12	True				
ANR	2392383	ExpressionStatement	sock	384:8:8263:8267	2392171	13	True				
ANR	2392384	Identifier	sock		2392171	0					
ANR	2392385	ReturnStatement	return ( rc ) ? TRUE : FALSE ;	385:1:8270:8292	2392171	14	True				
ANR	2392386	ConditionalExpression	( rc ) ? TRUE : FALSE		2392171	0					
ANR	2392387	Condition	rc		2392171	0					
ANR	2392388	Identifier	rc		2392171	0					
ANR	2392389	Identifier	TRUE		2392171	1					
ANR	2392390	Identifier	FALSE		2392171	2					
ANR	2392391	ReturnType	int		2392171	1					
ANR	2392392	Identifier	stork_status		2392171	2					
ANR	2392393	ParameterList	"const char * id , const char * host , classad :: ClassAd * & result , char * & _error_reason"		2392171	3					
ANR	2392394	Parameter	const char * id	330:3:7226:7240	2392171	0	True				
ANR	2392395	ParameterType	const char *		2392171	0					
ANR	2392396	Identifier	id		2392171	1					
ANR	2392397	Parameter	const char * host	331:3:7247:7263	2392171	1	True				
ANR	2392398	ParameterType	const char *		2392171	0					
ANR	2392399	Identifier	host		2392171	1					
ANR	2392400	Parameter	classad :: ClassAd * & result	332:3:7270:7296	2392171	2	True				
ANR	2392401	ParameterType	classad :: ClassAd * &		2392171	0					
ANR	2392402	Identifier	result		2392171	1					
ANR	2392403	Parameter	char * & _error_reason	333:3:7302:7323	2392171	3	True				
ANR	2392404	ParameterType	char * &		2392171	0					
ANR	2392405	Identifier	_error_reason		2392171	1					
ANR	2392406	CFGEntryNode	ENTRY		2392171		True				
ANR	2392407	CFGExitNode	EXIT		2392171		True				
ANR	2392408	Symbol	buf . StrDup		2392171						
ANR	2392409	Symbol	NULL		2392171						
ANR	2392410	Symbol	sock -> put		2392171						
ANR	2392411	Symbol	TRUE		2392171						
ANR	2392412	Symbol	STORK_STATUS		2392171						
ANR	2392413	Symbol	parser . ParseClassAd		2392171						
ANR	2392414	Symbol	result		2392171						
ANR	2392415	Symbol	sock		2392171						
ANR	2392416	Symbol	rc		2392171						
ANR	2392417	Symbol	error_reason		2392171						
ANR	2392418	Symbol	buf		2392171						
ANR	2392419	Symbol	_error_reason		2392171						
ANR	2392420	Symbol	sock -> code		2392171						
ANR	2392421	Symbol	parser		2392171						
ANR	2392422	Symbol	host		2392171						
ANR	2392423	Symbol	error_reason . Value		2392171						
ANR	2392424	Symbol	buf . Value		2392171						
ANR	2392425	Symbol	FALSE		2392171						
ANR	2392426	Symbol	id		2392171						
ANR	2392427	Symbol	strdup		2392171						
ANR	2392428	Symbol	* sock		2392171						
ANR	2392429	Symbol	start_stork_command_and_authenticate		2392171						
ANR	2392430	Function	stork_list	391:0:8300:9230							
ANR	2392431	FunctionDef	"stork_list (const char * host , int & result_size , classad :: ClassAd * * & result , char * & _error_reason)"		2392430	0					
ANR	2392432	CompoundStatement		396:27:8423:9230	2392430	0					
ANR	2392433	IdentifierDeclStatement	MyString error_reason ;	399:1:8449:8470	2392430	0	True				
ANR	2392434	IdentifierDecl	error_reason		2392430	0					
ANR	2392435	IdentifierDeclType	MyString		2392430	0					
ANR	2392436	Identifier	error_reason		2392430	1					
ANR	2392437	IdentifierDeclStatement	"Sock * sock = start_stork_command_and_authenticate ( host , STORK_LIST , error_reason ) ;"	400:1:8473:8600	2392430	1	True				
ANR	2392438	IdentifierDecl	"* sock = start_stork_command_and_authenticate ( host , STORK_LIST , error_reason )"		2392430	0					
ANR	2392439	IdentifierDeclType	Sock *		2392430	0					
ANR	2392440	Identifier	sock		2392430	1					
ANR	2392441	AssignmentExpression	"* sock = start_stork_command_and_authenticate ( host , STORK_LIST , error_reason )"		2392430	2		=			
ANR	2392442	Identifier	sock		2392430	0					
ANR	2392443	CallExpression	"start_stork_command_and_authenticate ( host , STORK_LIST , error_reason )"		2392430	1					
ANR	2392444	Callee	start_stork_command_and_authenticate		2392430	0					
ANR	2392445	Identifier	start_stork_command_and_authenticate		2392430	0					
ANR	2392446	ArgumentList	host		2392430	1					
ANR	2392447	Argument	host		2392430	0					
ANR	2392448	Identifier	host		2392430	0					
ANR	2392449	Argument	STORK_LIST		2392430	1					
ANR	2392450	Identifier	STORK_LIST		2392430	0					
ANR	2392451	Argument	error_reason		2392430	2					
ANR	2392452	Identifier	error_reason		2392430	0					
ANR	2392453	IfStatement	if ( ! sock )		2392430	2					
ANR	2392454	Condition	! sock	406:5:8608:8612	2392430	0	True				
ANR	2392455	UnaryOperationExpression	! sock		2392430	0					
ANR	2392456	UnaryOperator	!		2392430	0					
ANR	2392457	Identifier	sock		2392430	1					
ANR	2392458	CompoundStatement		11:12:191:191	2392430	1					
ANR	2392459	ExpressionStatement	_error_reason = strdup ( error_reason . Value ( ) )	407:2:8619:8664	2392430	0	True				
ANR	2392460	AssignmentExpression	_error_reason = strdup ( error_reason . Value ( ) )		2392430	0		=			
ANR	2392461	Identifier	_error_reason		2392430	0					
ANR	2392462	CallExpression	strdup ( error_reason . Value ( ) )		2392430	1					
ANR	2392463	Callee	strdup		2392430	0					
ANR	2392464	Identifier	strdup		2392430	0					
ANR	2392465	ArgumentList	error_reason . Value ( )		2392430	1					
ANR	2392466	Argument	error_reason . Value ( )		2392430	0					
ANR	2392467	CallExpression	error_reason . Value ( )		2392430	0					
ANR	2392468	Callee	error_reason . Value		2392430	0					
ANR	2392469	MemberAccess	error_reason . Value		2392430	0					
ANR	2392470	Identifier	error_reason		2392430	0					
ANR	2392471	Identifier	Value		2392430	1					
ANR	2392472	ArgumentList			2392430	1					
ANR	2392473	ReturnStatement	return FALSE ;	408:2:8668:8680	2392430	1	True				
ANR	2392474	Identifier	FALSE		2392430	0					
ANR	2392475	ExpressionStatement	sock -> decode ( )	410:1:8686:8700	2392430	3	True				
ANR	2392476	CallExpression	sock -> decode ( )		2392430	0					
ANR	2392477	Callee	sock -> decode		2392430	0					
ANR	2392478	PtrMemberAccess	sock -> decode		2392430	0					
ANR	2392479	Identifier	sock		2392430	0					
ANR	2392480	Identifier	decode		2392430	1					
ANR	2392481	ArgumentList			2392430	1					
ANR	2392482	IdentifierDeclStatement	int rc = 0 ;	412:1:8704:8714	2392430	4	True				
ANR	2392483	IdentifierDecl	rc = 0		2392430	0					
ANR	2392484	IdentifierDeclType	int		2392430	0					
ANR	2392485	Identifier	rc		2392430	1					
ANR	2392486	AssignmentExpression	rc = 0		2392430	2		=			
ANR	2392487	Identifier	rc		2392430	0					
ANR	2392488	PrimaryExpression	0		2392430	1					
ANR	2392489	IfStatement	if ( ! sock -> code ( rc ) )		2392430	5					
ANR	2392490	Condition	! sock -> code ( rc )	413:5:8721:8735	2392430	0	True				
ANR	2392491	UnaryOperationExpression	! sock -> code ( rc )		2392430	0					
ANR	2392492	UnaryOperator	!		2392430	0					
ANR	2392493	CallExpression	sock -> code ( rc )		2392430	1					
ANR	2392494	Callee	sock -> code		2392430	0					
ANR	2392495	PtrMemberAccess	sock -> code		2392430	0					
ANR	2392496	Identifier	sock		2392430	0					
ANR	2392497	Identifier	code		2392430	1					
ANR	2392498	ArgumentList	rc		2392430	1					
ANR	2392499	Argument	rc		2392430	0					
ANR	2392500	Identifier	rc		2392430	0					
ANR	2392501	CompoundStatement		18:22:314:314	2392430	1					
ANR	2392502	ExpressionStatement	"_error_reason = strdup ( ""Client recv error"" )"	414:2:8742:8786	2392430	0	True				
ANR	2392503	AssignmentExpression	"_error_reason = strdup ( ""Client recv error"" )"		2392430	0		=			
ANR	2392504	Identifier	_error_reason		2392430	0					
ANR	2392505	CallExpression	"strdup ( ""Client recv error"" )"		2392430	1					
ANR	2392506	Callee	strdup		2392430	0					
ANR	2392507	Identifier	strdup		2392430	0					
ANR	2392508	ArgumentList	"""Client recv error"""		2392430	1					
ANR	2392509	Argument	"""Client recv error"""		2392430	0					
ANR	2392510	PrimaryExpression	"""Client recv error"""		2392430	0					
ANR	2392511	Statement	delete	415:2:8790:8795	2392430	1	True				
ANR	2392512	ExpressionStatement	sock	415:9:8797:8801	2392430	2	True				
ANR	2392513	Identifier	sock		2392430	0					
ANR	2392514	ReturnStatement	return FALSE ;	416:2:8805:8817	2392430	3	True				
ANR	2392515	Identifier	FALSE		2392430	0					
ANR	2392516	ExpressionStatement	result_size = rc	419:1:8824:8840	2392430	6	True				
ANR	2392517	AssignmentExpression	result_size = rc		2392430	0		=			
ANR	2392518	Identifier	result_size		2392430	0					
ANR	2392519	Identifier	rc		2392430	1					
ANR	2392520	IdentifierDeclStatement	int i ;	420:1:8843:8848	2392430	7	True				
ANR	2392521	IdentifierDecl	i		2392430	0					
ANR	2392522	IdentifierDeclType	int		2392430	0					
ANR	2392523	Identifier	i		2392430	1					
ANR	2392524	IdentifierDeclStatement	MyString buf ;	422:1:8852:8864	2392430	8	True				
ANR	2392525	IdentifierDecl	buf		2392430	0					
ANR	2392526	IdentifierDeclType	MyString		2392430	0					
ANR	2392527	Identifier	buf		2392430	1					
ANR	2392528	IdentifierDeclStatement	classad :: ClassAdParser parser ;	423:1:8867:8896	2392430	9	True				
ANR	2392529	IdentifierDecl	parser		2392430	0					
ANR	2392530	IdentifierDeclType	classad :: ClassAdParser		2392430	0					
ANR	2392531	Identifier	parser		2392430	1					
ANR	2392532	Statement	result	425:1:8900:8905	2392430	10	True				
ANR	2392533	Statement	=	425:8:8907:8907	2392430	11	True				
ANR	2392534	Statement	new	425:10:8909:8911	2392430	12	True				
ANR	2392535	Statement	classad	425:14:8913:8919	2392430	13	True				
ANR	2392536	Statement	::	425:21:8920:8921	2392430	14	True				
ANR	2392537	Statement	ClassAd	425:23:8922:8928	2392430	15	True				
ANR	2392538	Statement	*	425:30:8929:8929	2392430	16	True				
ANR	2392539	Statement	[	425:31:8930:8930	2392430	17	True				
ANR	2392540	Statement	result_size	425:32:8931:8941	2392430	18	True				
ANR	2392541	Statement	]	425:43:8942:8942	2392430	19	True				
ANR	2392542	ExpressionStatement		425:44:8943:8943	2392430	20	True				
ANR	2392543	ForStatement	for ( i = 0 ; i < result_size ; i ++ )		2392430	21					
ANR	2392544	ForInit	i = 0 ;	426:6:8951:8954	2392430	0	True				
ANR	2392545	AssignmentExpression	i = 0		2392430	0		=			
ANR	2392546	Identifier	i		2392430	0					
ANR	2392547	PrimaryExpression	0		2392430	1					
ANR	2392548	Condition	i < result_size	426:11:8956:8968	2392430	1	True				
ANR	2392549	RelationalExpression	i < result_size		2392430	0		<			
ANR	2392550	Identifier	i		2392430	0					
ANR	2392551	Identifier	result_size		2392430	1					
ANR	2392552	PostIncDecOperationExpression	i ++	426:26:8971:8973	2392430	2	True				
ANR	2392553	Identifier	i		2392430	0					
ANR	2392554	IncDec	++		2392430	1					
ANR	2392555	CompoundStatement		31:31:552:552	2392430	3					
ANR	2392556	IfStatement	if ( ! sock -> code ( buf ) )		2392430	0					
ANR	2392557	Condition	! sock -> code ( buf )	427:6:8984:8999	2392430	0	True				
ANR	2392558	UnaryOperationExpression	! sock -> code ( buf )		2392430	0					
ANR	2392559	UnaryOperator	!		2392430	0					
ANR	2392560	CallExpression	sock -> code ( buf )		2392430	1					
ANR	2392561	Callee	sock -> code		2392430	0					
ANR	2392562	PtrMemberAccess	sock -> code		2392430	0					
ANR	2392563	Identifier	sock		2392430	0					
ANR	2392564	Identifier	code		2392430	1					
ANR	2392565	ArgumentList	buf		2392430	1					
ANR	2392566	Argument	buf		2392430	0					
ANR	2392567	Identifier	buf		2392430	0					
ANR	2392568	CompoundStatement		32:24:578:578	2392430	1					
ANR	2392569	ExpressionStatement	"_error_reason = strdup ( ""Client recv error"" )"	428:3:9007:9051	2392430	0	True				
ANR	2392570	AssignmentExpression	"_error_reason = strdup ( ""Client recv error"" )"		2392430	0		=			
ANR	2392571	Identifier	_error_reason		2392430	0					
ANR	2392572	CallExpression	"strdup ( ""Client recv error"" )"		2392430	1					
ANR	2392573	Callee	strdup		2392430	0					
ANR	2392574	Identifier	strdup		2392430	0					
ANR	2392575	ArgumentList	"""Client recv error"""		2392430	1					
ANR	2392576	Argument	"""Client recv error"""		2392430	0					
ANR	2392577	PrimaryExpression	"""Client recv error"""		2392430	0					
ANR	2392578	Statement	delete	429:3:9056:9061	2392430	1	True				
ANR	2392579	ExpressionStatement	sock	429:10:9063:9067	2392430	2	True				
ANR	2392580	Identifier	sock		2392430	0					
ANR	2392581	ReturnStatement	return FALSE ;	430:3:9072:9084	2392430	3	True				
ANR	2392582	Identifier	FALSE		2392430	0					
ANR	2392583	ExpressionStatement	result [ i ] = parser . ParseClassAd ( buf . Value ( ) )	433:2:9095:9141	2392430	1	True				
ANR	2392584	AssignmentExpression	result [ i ] = parser . ParseClassAd ( buf . Value ( ) )		2392430	0		=			
ANR	2392585	ArrayIndexing	result [ i ]		2392430	0					
ANR	2392586	Identifier	result		2392430	0					
ANR	2392587	Identifier	i		2392430	1					
ANR	2392588	CallExpression	parser . ParseClassAd ( buf . Value ( ) )		2392430	1					
ANR	2392589	Callee	parser . ParseClassAd		2392430	0					
ANR	2392590	MemberAccess	parser . ParseClassAd		2392430	0					
ANR	2392591	Identifier	parser		2392430	0					
ANR	2392592	Identifier	ParseClassAd		2392430	1					
ANR	2392593	ArgumentList	buf . Value ( )		2392430	1					
ANR	2392594	Argument	buf . Value ( )		2392430	0					
ANR	2392595	CallExpression	buf . Value ( )		2392430	0					
ANR	2392596	Callee	buf . Value		2392430	0					
ANR	2392597	MemberAccess	buf . Value		2392430	0					
ANR	2392598	Identifier	buf		2392430	0					
ANR	2392599	Identifier	Value		2392430	1					
ANR	2392600	ArgumentList			2392430	1					
ANR	2392601	ExpressionStatement	_error_reason = NULL	435:1:9147:9167	2392430	22	True				
ANR	2392602	AssignmentExpression	_error_reason = NULL		2392430	0		=			
ANR	2392603	Identifier	_error_reason		2392430	0					
ANR	2392604	Identifier	NULL		2392430	1					
ANR	2392605	ExpressionStatement	sock -> close ( )	437:1:9171:9184	2392430	23	True				
ANR	2392606	CallExpression	sock -> close ( )		2392430	0					
ANR	2392607	Callee	sock -> close		2392430	0					
ANR	2392608	PtrMemberAccess	sock -> close		2392430	0					
ANR	2392609	Identifier	sock		2392430	0					
ANR	2392610	Identifier	close		2392430	1					
ANR	2392611	ArgumentList			2392430	1					
ANR	2392612	Statement	delete	438:1:9187:9192	2392430	24	True				
ANR	2392613	ExpressionStatement	sock	438:8:9194:9198	2392430	25	True				
ANR	2392614	Identifier	sock		2392430	0					
ANR	2392615	ReturnStatement	return ( rc >= 0 ) ? TRUE : FALSE ;	439:1:9201:9228	2392430	26	True				
ANR	2392616	ConditionalExpression	( rc >= 0 ) ? TRUE : FALSE		2392430	0					
ANR	2392617	Condition	rc >= 0		2392430	0					
ANR	2392618	RelationalExpression	rc >= 0		2392430	0		>=			
ANR	2392619	Identifier	rc		2392430	0					
ANR	2392620	PrimaryExpression	0		2392430	1					
ANR	2392621	Identifier	TRUE		2392430	1					
ANR	2392622	Identifier	FALSE		2392430	2					
ANR	2392623	ReturnType	int		2392430	1					
ANR	2392624	Identifier	stork_list		2392430	2					
ANR	2392625	ParameterList	"const char * host , int & result_size , classad :: ClassAd * * & result , char * & _error_reason"		2392430	3					
ANR	2392626	Parameter	const char * host	393:3:8320:8336	2392430	0	True				
ANR	2392627	ParameterType	const char *		2392430	0					
ANR	2392628	Identifier	host		2392430	1					
ANR	2392629	Parameter	int & result_size	394:3:8343:8359	2392430	1	True				
ANR	2392630	ParameterType	int &		2392430	0					
ANR	2392631	Identifier	result_size		2392430	1					
ANR	2392632	Parameter	classad :: ClassAd * * & result	395:3:8366:8393	2392430	2	True				
ANR	2392633	ParameterType	classad :: ClassAd * * &		2392430	0					
ANR	2392634	Identifier	result		2392430	1					
ANR	2392635	Parameter	char * & _error_reason	396:3:8399:8420	2392430	3	True				
ANR	2392636	ParameterType	char * &		2392430	0					
ANR	2392637	Identifier	_error_reason		2392430	1					
ANR	2392638	CFGEntryNode	ENTRY		2392430		True				
ANR	2392639	CFGExitNode	EXIT		2392430		True				
ANR	2392640	Symbol	NULL		2392430						
ANR	2392641	Symbol	i		2392430						
ANR	2392642	Symbol	TRUE		2392430						
ANR	2392643	Symbol	parser . ParseClassAd		2392430						
ANR	2392644	Symbol	STORK_LIST		2392430						
ANR	2392645	Symbol	result		2392430						
ANR	2392646	Symbol	sock		2392430						
ANR	2392647	Symbol	rc		2392430						
ANR	2392648	Symbol	error_reason		2392430						
ANR	2392649	Symbol	buf		2392430						
ANR	2392650	Symbol	_error_reason		2392430						
ANR	2392651	Symbol	* i		2392430						
ANR	2392652	Symbol	sock -> code		2392430						
ANR	2392653	Symbol	parser		2392430						
ANR	2392654	Symbol	* result		2392430						
ANR	2392655	Symbol	host		2392430						
ANR	2392656	Symbol	error_reason . Value		2392430						
ANR	2392657	Symbol	buf . Value		2392430						
ANR	2392658	Symbol	FALSE		2392430						
ANR	2392659	Symbol	strdup		2392430						
ANR	2392660	Symbol	* sock		2392430						
ANR	2392661	Symbol	result_size		2392430						
ANR	2392662	Symbol	start_stork_command_and_authenticate		2392430						
