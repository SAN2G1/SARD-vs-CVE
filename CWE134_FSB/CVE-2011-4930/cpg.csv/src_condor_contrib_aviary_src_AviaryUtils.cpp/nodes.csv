command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2879846	File	data/converged/CVE-2011-4930_htcondor/src_condor_contrib_aviary_src_AviaryUtils.cpp								
ANR	2879847	DeclStmt									
ANR	2879848	Decl							const char	const char * [ ]	RESERVED
ANR	2879849	Function	aviary :: util :: getPoolName	38:0:1075:1335							
ANR	2879850	FunctionDef	aviary :: util :: getPoolName ()		2879849	0					
ANR	2879851	CompoundStatement		40:0:1110:1335	2879849	0					
ANR	2879852	IdentifierDeclStatement	string poolName ;	41:4:1116:1131	2879849	0	True				
ANR	2879853	IdentifierDecl	poolName		2879849	0					
ANR	2879854	IdentifierDeclType	string		2879849	0					
ANR	2879855	Identifier	poolName		2879849	1					
ANR	2879856	IdentifierDeclStatement	char * tmp = NULL ;	42:4:1137:1153	2879849	1	True				
ANR	2879857	IdentifierDecl	* tmp = NULL		2879849	0					
ANR	2879858	IdentifierDeclType	char *		2879849	0					
ANR	2879859	Identifier	tmp		2879849	1					
ANR	2879860	AssignmentExpression	* tmp = NULL		2879849	2		=			
ANR	2879861	Identifier	NULL		2879849	0					
ANR	2879862	Identifier	NULL		2879849	1					
ANR	2879863	ExpressionStatement	"tmp = param ( ""COLLECTOR_HOST"" )"	44:4:1160:1189	2879849	2	True				
ANR	2879864	AssignmentExpression	"tmp = param ( ""COLLECTOR_HOST"" )"		2879849	0		=			
ANR	2879865	Identifier	tmp		2879849	0					
ANR	2879866	CallExpression	"param ( ""COLLECTOR_HOST"" )"		2879849	1					
ANR	2879867	Callee	param		2879849	0					
ANR	2879868	Identifier	param		2879849	0					
ANR	2879869	ArgumentList	"""COLLECTOR_HOST"""		2879849	1					
ANR	2879870	Argument	"""COLLECTOR_HOST"""		2879849	0					
ANR	2879871	PrimaryExpression	"""COLLECTOR_HOST"""		2879849	0					
ANR	2879872	IfStatement	if ( ! tmp )		2879849	3					
ANR	2879873	Condition	! tmp	45:8:1199:1202	2879849	0	True				
ANR	2879874	UnaryOperationExpression	! tmp		2879849	0					
ANR	2879875	UnaryOperator	!		2879849	0					
ANR	2879876	Identifier	tmp		2879849	1					
ANR	2879877	CompoundStatement		6:14:94:94	2879849	1					
ANR	2879878	ExpressionStatement	"tmp = strdup ( ""NO COLLECTOR_HOST, NOT GOOD"" )"	46:8:1215:1258	2879849	0	True				
ANR	2879879	AssignmentExpression	"tmp = strdup ( ""NO COLLECTOR_HOST, NOT GOOD"" )"		2879849	0		=			
ANR	2879880	Identifier	tmp		2879849	0					
ANR	2879881	CallExpression	"strdup ( ""NO COLLECTOR_HOST, NOT GOOD"" )"		2879849	1					
ANR	2879882	Callee	strdup		2879849	0					
ANR	2879883	Identifier	strdup		2879849	0					
ANR	2879884	ArgumentList	"""NO COLLECTOR_HOST, NOT GOOD"""		2879849	1					
ANR	2879885	Argument	"""NO COLLECTOR_HOST, NOT GOOD"""		2879849	0					
ANR	2879886	PrimaryExpression	"""NO COLLECTOR_HOST, NOT GOOD"""		2879849	0					
ANR	2879887	ExpressionStatement	poolName = tmp	48:4:1270:1284	2879849	4	True				
ANR	2879888	AssignmentExpression	poolName = tmp		2879849	0		=			
ANR	2879889	Identifier	poolName		2879849	0					
ANR	2879890	Identifier	tmp		2879849	1					
ANR	2879891	ExpressionStatement	free ( tmp )	49:4:1290:1299	2879849	5	True				
ANR	2879892	CallExpression	free ( tmp )		2879849	0					
ANR	2879893	Callee	free		2879849	0					
ANR	2879894	Identifier	free		2879849	0					
ANR	2879895	ArgumentList	tmp		2879849	1					
ANR	2879896	Argument	tmp		2879849	0					
ANR	2879897	Identifier	tmp		2879849	0					
ANR	2879898	ExpressionStatement	tmp = NULL	49:15:1301:1311	2879849	6	True				
ANR	2879899	AssignmentExpression	tmp = NULL		2879849	0		=			
ANR	2879900	Identifier	tmp		2879849	0					
ANR	2879901	Identifier	NULL		2879849	1					
ANR	2879902	ReturnStatement	return poolName ;	51:4:1318:1333	2879849	7	True				
ANR	2879903	Identifier	poolName		2879849	0					
ANR	2879904	ReturnType	string		2879849	1					
ANR	2879905	Identifier	aviary :: util :: getPoolName		2879849	2					
ANR	2879906	ParameterList			2879849	3					
ANR	2879907	CFGEntryNode	ENTRY		2879849		True				
ANR	2879908	CFGExitNode	EXIT		2879849		True				
ANR	2879909	Symbol	NULL		2879849						
ANR	2879910	Symbol	param		2879849						
ANR	2879911	Symbol	tmp		2879849						
ANR	2879912	Symbol	strdup		2879849						
ANR	2879913	Symbol	poolName		2879849						
ANR	2879914	Function	aviary :: util :: getScheddName	54:0:1338:1601							
ANR	2879915	FunctionDef	aviary :: util :: getScheddName ()		2879914	0					
ANR	2879916	CompoundStatement		55:30:1375:1601	2879914	0					
ANR	2879917	IdentifierDeclStatement	string scheddName ;	56:1:1378:1395	2879914	0	True				
ANR	2879918	IdentifierDecl	scheddName		2879914	0					
ANR	2879919	IdentifierDeclType	string		2879914	0					
ANR	2879920	Identifier	scheddName		2879914	1					
ANR	2879921	IdentifierDeclStatement	char * tmp = NULL ;	57:1:1398:1414	2879914	1	True				
ANR	2879922	IdentifierDecl	* tmp = NULL		2879914	0					
ANR	2879923	IdentifierDeclType	char *		2879914	0					
ANR	2879924	Identifier	tmp		2879914	1					
ANR	2879925	AssignmentExpression	* tmp = NULL		2879914	2		=			
ANR	2879926	Identifier	NULL		2879914	0					
ANR	2879927	Identifier	NULL		2879914	1					
ANR	2879928	ExpressionStatement	"tmp = param ( ""SCHEDD_NAME"" )"	59:1:1418:1444	2879914	2	True				
ANR	2879929	AssignmentExpression	"tmp = param ( ""SCHEDD_NAME"" )"		2879914	0		=			
ANR	2879930	Identifier	tmp		2879914	0					
ANR	2879931	CallExpression	"param ( ""SCHEDD_NAME"" )"		2879914	1					
ANR	2879932	Callee	param		2879914	0					
ANR	2879933	Identifier	param		2879914	0					
ANR	2879934	ArgumentList	"""SCHEDD_NAME"""		2879914	1					
ANR	2879935	Argument	"""SCHEDD_NAME"""		2879914	0					
ANR	2879936	PrimaryExpression	"""SCHEDD_NAME"""		2879914	0					
ANR	2879937	IfStatement	if ( ! tmp )		2879914	3					
ANR	2879938	Condition	! tmp	60:5:1451:1454	2879914	0	True				
ANR	2879939	UnaryOperationExpression	! tmp		2879914	0					
ANR	2879940	UnaryOperator	!		2879914	0					
ANR	2879941	Identifier	tmp		2879914	1					
ANR	2879942	CompoundStatement		6:11:81:81	2879914	1					
ANR	2879943	ExpressionStatement	scheddName = default_daemon_name ( )	61:2:1461:1495	2879914	0	True				
ANR	2879944	AssignmentExpression	scheddName = default_daemon_name ( )		2879914	0		=			
ANR	2879945	Identifier	scheddName		2879914	0					
ANR	2879946	CallExpression	default_daemon_name ( )		2879914	1					
ANR	2879947	Callee	default_daemon_name		2879914	0					
ANR	2879948	Identifier	default_daemon_name		2879914	0					
ANR	2879949	ArgumentList			2879914	1					
ANR	2879950	ElseStatement	else		2879914	0					
ANR	2879951	CompoundStatement		8:8:129:129	2879914	0					
ANR	2879952	ExpressionStatement	scheddName = build_valid_daemon_name ( tmp )	63:2:1509:1550	2879914	0	True				
ANR	2879953	AssignmentExpression	scheddName = build_valid_daemon_name ( tmp )		2879914	0		=			
ANR	2879954	Identifier	scheddName		2879914	0					
ANR	2879955	CallExpression	build_valid_daemon_name ( tmp )		2879914	1					
ANR	2879956	Callee	build_valid_daemon_name		2879914	0					
ANR	2879957	Identifier	build_valid_daemon_name		2879914	0					
ANR	2879958	ArgumentList	tmp		2879914	1					
ANR	2879959	Argument	tmp		2879914	0					
ANR	2879960	Identifier	tmp		2879914	0					
ANR	2879961	ExpressionStatement	free ( tmp )	64:2:1554:1563	2879914	1	True				
ANR	2879962	CallExpression	free ( tmp )		2879914	0					
ANR	2879963	Callee	free		2879914	0					
ANR	2879964	Identifier	free		2879914	0					
ANR	2879965	ArgumentList	tmp		2879914	1					
ANR	2879966	Argument	tmp		2879914	0					
ANR	2879967	Identifier	tmp		2879914	0					
ANR	2879968	ExpressionStatement	tmp = NULL	64:13:1565:1575	2879914	2	True				
ANR	2879969	AssignmentExpression	tmp = NULL		2879914	0		=			
ANR	2879970	Identifier	tmp		2879914	0					
ANR	2879971	Identifier	NULL		2879914	1					
ANR	2879972	ReturnStatement	return scheddName ;	67:1:1582:1599	2879914	4	True				
ANR	2879973	Identifier	scheddName		2879914	0					
ANR	2879974	ReturnType	string		2879914	1					
ANR	2879975	Identifier	aviary :: util :: getScheddName		2879914	2					
ANR	2879976	ParameterList			2879914	3					
ANR	2879977	CFGEntryNode	ENTRY		2879914		True				
ANR	2879978	CFGExitNode	EXIT		2879914		True				
ANR	2879979	Symbol	NULL		2879914						
ANR	2879980	Symbol	param		2879914						
ANR	2879981	Symbol	tmp		2879914						
ANR	2879982	Symbol	build_valid_daemon_name		2879914						
ANR	2879983	Symbol	scheddName		2879914						
ANR	2879984	Symbol	default_daemon_name		2879914						
ANR	2879985	Function	aviary :: util :: trimQuotes	71:0:1659:1980							
ANR	2879986	FunctionDef	aviary :: util :: trimQuotes (const char * str)		2879985	0					
ANR	2879987	CompoundStatement		71:49:1708:1980	2879985	0					
ANR	2879988	IdentifierDeclStatement	string val = str ;	72:1:1711:1727	2879985	0	True				
ANR	2879989	IdentifierDecl	val = str		2879985	0					
ANR	2879990	IdentifierDeclType	string		2879985	0					
ANR	2879991	Identifier	val		2879985	1					
ANR	2879992	AssignmentExpression	val = str		2879985	2		=			
ANR	2879993	Identifier	str		2879985	0					
ANR	2879994	Identifier	str		2879985	1					
ANR	2879995	IdentifierDeclStatement	"size_t endpos = val . find_last_not_of ( ""\\\\\\"""" ) ;"	74:1:1731:1775	2879985	1	True				
ANR	2879996	IdentifierDecl	"endpos = val . find_last_not_of ( ""\\\\\\"""" )"		2879985	0					
ANR	2879997	IdentifierDeclType	size_t		2879985	0					
ANR	2879998	Identifier	endpos		2879985	1					
ANR	2879999	AssignmentExpression	"endpos = val . find_last_not_of ( ""\\\\\\"""" )"		2879985	2		=			
ANR	2880000	Identifier	endpos		2879985	0					
ANR	2880001	CallExpression	"val . find_last_not_of ( ""\\\\\\"""" )"		2879985	1					
ANR	2880002	Callee	val . find_last_not_of		2879985	0					
ANR	2880003	MemberAccess	val . find_last_not_of		2879985	0					
ANR	2880004	Identifier	val		2879985	0					
ANR	2880005	Identifier	find_last_not_of		2879985	1					
ANR	2880006	ArgumentList	"""\\\\\\"""""		2879985	1					
ANR	2880007	Argument	"""\\\\\\"""""		2879985	0					
ANR	2880008	PrimaryExpression	"""\\\\\\"""""		2879985	0					
ANR	2880009	IfStatement	if ( string :: npos != endpos )		2879985	2					
ANR	2880010	Condition	string :: npos != endpos	75:5:1782:1803	2879985	0	True				
ANR	2880011	EqualityExpression	string :: npos != endpos		2879985	0		!=			
ANR	2880012	Identifier	string :: npos		2879985	0					
ANR	2880013	Identifier	endpos		2879985	1					
ANR	2880014	CompoundStatement		5:30:98:98	2879985	1					
ANR	2880015	ExpressionStatement	"val = val . substr ( 0 , endpos + 1 )"	76:2:1811:1842	2879985	0	True				
ANR	2880016	AssignmentExpression	"val = val . substr ( 0 , endpos + 1 )"		2879985	0		=			
ANR	2880017	Identifier	val		2879985	0					
ANR	2880018	CallExpression	"val . substr ( 0 , endpos + 1 )"		2879985	1					
ANR	2880019	Callee	val . substr		2879985	0					
ANR	2880020	MemberAccess	val . substr		2879985	0					
ANR	2880021	Identifier	val		2879985	0					
ANR	2880022	Identifier	substr		2879985	1					
ANR	2880023	ArgumentList	0		2879985	1					
ANR	2880024	Argument	0		2879985	0					
ANR	2880025	PrimaryExpression	0		2879985	0					
ANR	2880026	Argument	endpos + 1		2879985	1					
ANR	2880027	AdditiveExpression	endpos + 1		2879985	0		+			
ANR	2880028	Identifier	endpos		2879985	0					
ANR	2880029	PrimaryExpression	1		2879985	1					
ANR	2880030	IdentifierDeclStatement	"size_t startpos = val . find_first_not_of ( ""\\\\\\"""" ) ;"	78:1:1848:1895	2879985	3	True				
ANR	2880031	IdentifierDecl	"startpos = val . find_first_not_of ( ""\\\\\\"""" )"		2879985	0					
ANR	2880032	IdentifierDeclType	size_t		2879985	0					
ANR	2880033	Identifier	startpos		2879985	1					
ANR	2880034	AssignmentExpression	"startpos = val . find_first_not_of ( ""\\\\\\"""" )"		2879985	2		=			
ANR	2880035	Identifier	startpos		2879985	0					
ANR	2880036	CallExpression	"val . find_first_not_of ( ""\\\\\\"""" )"		2879985	1					
ANR	2880037	Callee	val . find_first_not_of		2879985	0					
ANR	2880038	MemberAccess	val . find_first_not_of		2879985	0					
ANR	2880039	Identifier	val		2879985	0					
ANR	2880040	Identifier	find_first_not_of		2879985	1					
ANR	2880041	ArgumentList	"""\\\\\\"""""		2879985	1					
ANR	2880042	Argument	"""\\\\\\"""""		2879985	0					
ANR	2880043	PrimaryExpression	"""\\\\\\"""""		2879985	0					
ANR	2880044	IfStatement	if ( string :: npos != startpos )		2879985	4					
ANR	2880045	Condition	string :: npos != startpos	79:5:1902:1925	2879985	0	True				
ANR	2880046	EqualityExpression	string :: npos != startpos		2879985	0		!=			
ANR	2880047	Identifier	string :: npos		2879985	0					
ANR	2880048	Identifier	startpos		2879985	1					
ANR	2880049	CompoundStatement		9:32:220:220	2879985	1					
ANR	2880050	ExpressionStatement	val = val . substr ( startpos )	80:2:1933:1961	2879985	0	True				
ANR	2880051	AssignmentExpression	val = val . substr ( startpos )		2879985	0		=			
ANR	2880052	Identifier	val		2879985	0					
ANR	2880053	CallExpression	val . substr ( startpos )		2879985	1					
ANR	2880054	Callee	val . substr		2879985	0					
ANR	2880055	MemberAccess	val . substr		2879985	0					
ANR	2880056	Identifier	val		2879985	0					
ANR	2880057	Identifier	substr		2879985	1					
ANR	2880058	ArgumentList	startpos		2879985	1					
ANR	2880059	Argument	startpos		2879985	0					
ANR	2880060	Identifier	startpos		2879985	0					
ANR	2880061	ReturnStatement	return val ;	83:1:1968:1978	2879985	5	True				
ANR	2880062	Identifier	val		2879985	0					
ANR	2880063	ReturnType	string		2879985	1					
ANR	2880064	Identifier	aviary :: util :: trimQuotes		2879985	2					
ANR	2880065	ParameterList	const char * str		2879985	3					
ANR	2880066	Parameter	const char * str	71:32:1691:1705	2879985	0	True				
ANR	2880067	ParameterType	const char *		2879985	0					
ANR	2880068	Identifier	str		2879985	1					
ANR	2880069	CFGEntryNode	ENTRY		2879985		True				
ANR	2880070	CFGExitNode	EXIT		2879985		True				
ANR	2880071	Symbol	str		2879985						
ANR	2880072	Symbol	val		2879985						
ANR	2880073	Symbol	val . find_last_not_of		2879985						
ANR	2880074	Symbol	string :: npos		2879985						
ANR	2880075	Symbol	startpos		2879985						
ANR	2880076	Symbol	endpos		2879985						
ANR	2880077	Symbol	val . substr		2879985						
ANR	2880078	Symbol	val . find_first_not_of		2879985						
ANR	2880079	Function	aviary :: util :: isValidGroupUserName	88:0:2080:2481							
ANR	2880080	FunctionDef	"aviary :: util :: isValidGroupUserName (const string & _name , string & _text)"		2880079	0					
ANR	2880081	CompoundStatement		88:76:2156:2481	2880079	0					
ANR	2880082	IdentifierDeclStatement	const char * ptr = _name . c_str ( ) ;	89:1:2159:2190	2880079	0	True				
ANR	2880083	IdentifierDecl	* ptr = _name . c_str ( )		2880079	0					
ANR	2880084	IdentifierDeclType	const char *		2880079	0					
ANR	2880085	Identifier	ptr		2880079	1					
ANR	2880086	AssignmentExpression	* ptr = _name . c_str ( )		2880079	2		=			
ANR	2880087	Identifier	ptr		2880079	0					
ANR	2880088	CallExpression	_name . c_str ( )		2880079	1					
ANR	2880089	Callee	_name . c_str		2880079	0					
ANR	2880090	MemberAccess	_name . c_str		2880079	0					
ANR	2880091	Identifier	_name		2880079	0					
ANR	2880092	Identifier	c_str		2880079	1					
ANR	2880093	ArgumentList			2880079	1					
ANR	2880094	WhileStatement	while ( * ptr )		2880079	1					
ANR	2880095	Condition	* ptr	90:8:2200:2203	2880079	0	True				
ANR	2880096	UnaryOperationExpression	* ptr		2880079	0					
ANR	2880097	UnaryOperator	*		2880079	0					
ANR	2880098	Identifier	ptr		2880079	1					
ANR	2880099	CompoundStatement		4:2:54:69	2880079	1					
ANR	2880100	IdentifierDeclStatement	char c = * ptr ++ ;	91:2:2211:2226	2880079	0	True				
ANR	2880101	IdentifierDecl	c = * ptr ++		2880079	0					
ANR	2880102	IdentifierDeclType	char		2880079	0					
ANR	2880103	Identifier	c		2880079	1					
ANR	2880104	AssignmentExpression	c = * ptr ++		2880079	2		=			
ANR	2880105	Identifier	c		2880079	0					
ANR	2880106	UnaryOperationExpression	* ptr ++		2880079	1					
ANR	2880107	UnaryOperator	*		2880079	0					
ANR	2880108	PostIncDecOperationExpression	ptr ++		2880079	1					
ANR	2880109	Identifier	ptr		2880079	0					
ANR	2880110	IncDec	++		2880079	1					
ANR	2880111	IfStatement	if ( ( 'a' > c || c > 'z' ) && ( 'A' > c || c > 'Z' ) && ( '0' > c || c > '9' ) && ( c != '_' ) && ( c != '.' ) )		2880079	1					
ANR	2880112	Condition	( 'a' > c || c > 'z' ) && ( 'A' > c || c > 'Z' ) && ( '0' > c || c > '9' ) && ( c != '_' ) && ( c != '.' )	92:7:2235:2344	2880079	0	True				
ANR	2880113	AndExpression	( 'a' > c || c > 'z' ) && ( 'A' > c || c > 'Z' ) && ( '0' > c || c > '9' ) && ( c != '_' ) && ( c != '.' )		2880079	0		&&			
ANR	2880114	OrExpression	'a' > c || c > 'z'		2880079	0		||			
ANR	2880115	RelationalExpression	'a' > c		2880079	0		>			
ANR	2880116	PrimaryExpression	'a'		2880079	0					
ANR	2880117	Identifier	c		2880079	1					
ANR	2880118	RelationalExpression	c > 'z'		2880079	1		>			
ANR	2880119	Identifier	c		2880079	0					
ANR	2880120	PrimaryExpression	'z'		2880079	1					
ANR	2880121	AndExpression	( 'A' > c || c > 'Z' ) && ( '0' > c || c > '9' ) && ( c != '_' ) && ( c != '.' )		2880079	1		&&			
ANR	2880122	OrExpression	'A' > c || c > 'Z'		2880079	0		||			
ANR	2880123	RelationalExpression	'A' > c		2880079	0		>			
ANR	2880124	PrimaryExpression	'A'		2880079	0					
ANR	2880125	Identifier	c		2880079	1					
ANR	2880126	RelationalExpression	c > 'Z'		2880079	1		>			
ANR	2880127	Identifier	c		2880079	0					
ANR	2880128	PrimaryExpression	'Z'		2880079	1					
ANR	2880129	AndExpression	( '0' > c || c > '9' ) && ( c != '_' ) && ( c != '.' )		2880079	1		&&			
ANR	2880130	OrExpression	'0' > c || c > '9'		2880079	0		||			
ANR	2880131	RelationalExpression	'0' > c		2880079	0		>			
ANR	2880132	PrimaryExpression	'0'		2880079	0					
ANR	2880133	Identifier	c		2880079	1					
ANR	2880134	RelationalExpression	c > '9'		2880079	1		>			
ANR	2880135	Identifier	c		2880079	0					
ANR	2880136	PrimaryExpression	'9'		2880079	1					
ANR	2880137	AndExpression	( c != '_' ) && ( c != '.' )		2880079	1		&&			
ANR	2880138	EqualityExpression	c != '_'		2880079	0		!=			
ANR	2880139	Identifier	c		2880079	0					
ANR	2880140	PrimaryExpression	'_'		2880079	1					
ANR	2880141	EqualityExpression	c != '.'		2880079	1		!=			
ANR	2880142	Identifier	c		2880079	0					
ANR	2880143	PrimaryExpression	'.'		2880079	1					
ANR	2880144	CompoundStatement		9:17:191:191	2880079	1					
ANR	2880145	ExpressionStatement	"_text = ""Invalid name for group/user - alphanumeric, underscore and dot characters only"""	97:3:2353:2441	2880079	0	True				
ANR	2880146	AssignmentExpression	"_text = ""Invalid name for group/user - alphanumeric, underscore and dot characters only"""		2880079	0		=			
ANR	2880147	Identifier	_text		2880079	0					
ANR	2880148	PrimaryExpression	"""Invalid name for group/user - alphanumeric, underscore and dot characters only"""		2880079	1					
ANR	2880149	ReturnStatement	return false ;	98:3:2446:2458	2880079	1	True				
ANR	2880150	Identifier	false		2880079	0					
ANR	2880151	ReturnStatement	return true ;	101:1:2468:2479	2880079	2	True				
ANR	2880152	Identifier	true		2880079	0					
ANR	2880153	ReturnType	bool		2880079	1					
ANR	2880154	Identifier	aviary :: util :: isValidGroupUserName		2880079	2					
ANR	2880155	ParameterList	"const string & _name , string & _text"		2880079	3					
ANR	2880156	Parameter	const string & _name	88:40:2120:2138	2880079	0	True				
ANR	2880157	ParameterType	const string &		2880079	0					
ANR	2880158	Identifier	_name		2880079	1					
ANR	2880159	Parameter	string & _text	88:61:2141:2153	2880079	1	True				
ANR	2880160	ParameterType	string &		2880079	0					
ANR	2880161	Identifier	_text		2880079	1					
ANR	2880162	CFGEntryNode	ENTRY		2880079		True				
ANR	2880163	CFGExitNode	EXIT		2880079		True				
ANR	2880164	Symbol	c		2880079						
ANR	2880165	Symbol	_name		2880079						
ANR	2880166	Symbol	* ptr ++		2880079						
ANR	2880167	Symbol	* ptr		2880079						
ANR	2880168	Symbol	false		2880079						
ANR	2880169	Symbol	true		2880079						
ANR	2880170	Symbol	_text		2880079						
ANR	2880171	Symbol	_name . c_str		2880079						
ANR	2880172	Symbol	ptr		2880079						
ANR	2880173	Function	aviary :: util :: isValidAttributeName	106:0:2563:2940							
ANR	2880174	FunctionDef	"aviary :: util :: isValidAttributeName (const string & _name , string & _text)"		2880173	0					
ANR	2880175	CompoundStatement		106:76:2639:2940	2880173	0					
ANR	2880176	IdentifierDeclStatement	const char * ptr = _name . c_str ( ) ;	107:1:2642:2673	2880173	0	True				
ANR	2880177	IdentifierDecl	* ptr = _name . c_str ( )		2880173	0					
ANR	2880178	IdentifierDeclType	const char *		2880173	0					
ANR	2880179	Identifier	ptr		2880173	1					
ANR	2880180	AssignmentExpression	* ptr = _name . c_str ( )		2880173	2		=			
ANR	2880181	Identifier	ptr		2880173	0					
ANR	2880182	CallExpression	_name . c_str ( )		2880173	1					
ANR	2880183	Callee	_name . c_str		2880173	0					
ANR	2880184	MemberAccess	_name . c_str		2880173	0					
ANR	2880185	Identifier	_name		2880173	0					
ANR	2880186	Identifier	c_str		2880173	1					
ANR	2880187	ArgumentList			2880173	1					
ANR	2880188	WhileStatement	while ( * ptr )		2880173	1					
ANR	2880189	Condition	* ptr	108:8:2683:2686	2880173	0	True				
ANR	2880190	UnaryOperationExpression	* ptr		2880173	0					
ANR	2880191	UnaryOperator	*		2880173	0					
ANR	2880192	Identifier	ptr		2880173	1					
ANR	2880193	CompoundStatement		4:2:54:69	2880173	1					
ANR	2880194	IdentifierDeclStatement	char c = * ptr ++ ;	109:2:2694:2709	2880173	0	True				
ANR	2880195	IdentifierDecl	c = * ptr ++		2880173	0					
ANR	2880196	IdentifierDeclType	char		2880173	0					
ANR	2880197	Identifier	c		2880173	1					
ANR	2880198	AssignmentExpression	c = * ptr ++		2880173	2		=			
ANR	2880199	Identifier	c		2880173	0					
ANR	2880200	UnaryOperationExpression	* ptr ++		2880173	1					
ANR	2880201	UnaryOperator	*		2880173	0					
ANR	2880202	PostIncDecOperationExpression	ptr ++		2880173	1					
ANR	2880203	Identifier	ptr		2880173	0					
ANR	2880204	IncDec	++		2880173	1					
ANR	2880205	IfStatement	if ( ( 'a' > c || c > 'z' ) && ( 'A' > c || c > 'Z' ) && ( '0' > c || c > '9' ) && ( c != '_' ) )		2880173	1					
ANR	2880206	Condition	( 'a' > c || c > 'z' ) && ( 'A' > c || c > 'Z' ) && ( '0' > c || c > '9' ) && ( c != '_' )	110:7:2718:2809	2880173	0	True				
ANR	2880207	AndExpression	( 'a' > c || c > 'z' ) && ( 'A' > c || c > 'Z' ) && ( '0' > c || c > '9' ) && ( c != '_' )		2880173	0		&&			
ANR	2880208	OrExpression	'a' > c || c > 'z'		2880173	0		||			
ANR	2880209	RelationalExpression	'a' > c		2880173	0		>			
ANR	2880210	PrimaryExpression	'a'		2880173	0					
ANR	2880211	Identifier	c		2880173	1					
ANR	2880212	RelationalExpression	c > 'z'		2880173	1		>			
ANR	2880213	Identifier	c		2880173	0					
ANR	2880214	PrimaryExpression	'z'		2880173	1					
ANR	2880215	AndExpression	( 'A' > c || c > 'Z' ) && ( '0' > c || c > '9' ) && ( c != '_' )		2880173	1		&&			
ANR	2880216	OrExpression	'A' > c || c > 'Z'		2880173	0		||			
ANR	2880217	RelationalExpression	'A' > c		2880173	0		>			
ANR	2880218	PrimaryExpression	'A'		2880173	0					
ANR	2880219	Identifier	c		2880173	1					
ANR	2880220	RelationalExpression	c > 'Z'		2880173	1		>			
ANR	2880221	Identifier	c		2880173	0					
ANR	2880222	PrimaryExpression	'Z'		2880173	1					
ANR	2880223	AndExpression	( '0' > c || c > '9' ) && ( c != '_' )		2880173	1		&&			
ANR	2880224	OrExpression	'0' > c || c > '9'		2880173	0		||			
ANR	2880225	RelationalExpression	'0' > c		2880173	0		>			
ANR	2880226	PrimaryExpression	'0'		2880173	0					
ANR	2880227	Identifier	c		2880173	1					
ANR	2880228	RelationalExpression	c > '9'		2880173	1		>			
ANR	2880229	Identifier	c		2880173	0					
ANR	2880230	PrimaryExpression	'9'		2880173	1					
ANR	2880231	EqualityExpression	c != '_'		2880173	1		!=			
ANR	2880232	Identifier	c		2880173	0					
ANR	2880233	PrimaryExpression	'_'		2880173	1					
ANR	2880234	CompoundStatement		8:17:173:173	2880173	1					
ANR	2880235	ExpressionStatement	"_text = ""Invalid name for attribute - alphanumeric and underscore characters only"""	114:3:2818:2900	2880173	0	True				
ANR	2880236	AssignmentExpression	"_text = ""Invalid name for attribute - alphanumeric and underscore characters only"""		2880173	0		=			
ANR	2880237	Identifier	_text		2880173	0					
ANR	2880238	PrimaryExpression	"""Invalid name for attribute - alphanumeric and underscore characters only"""		2880173	1					
ANR	2880239	ReturnStatement	return false ;	115:3:2905:2917	2880173	1	True				
ANR	2880240	Identifier	false		2880173	0					
ANR	2880241	ReturnStatement	return true ;	118:1:2927:2938	2880173	2	True				
ANR	2880242	Identifier	true		2880173	0					
ANR	2880243	ReturnType	bool		2880173	1					
ANR	2880244	Identifier	aviary :: util :: isValidAttributeName		2880173	2					
ANR	2880245	ParameterList	"const string & _name , string & _text"		2880173	3					
ANR	2880246	Parameter	const string & _name	106:40:2603:2621	2880173	0	True				
ANR	2880247	ParameterType	const string &		2880173	0					
ANR	2880248	Identifier	_name		2880173	1					
ANR	2880249	Parameter	string & _text	106:61:2624:2636	2880173	1	True				
ANR	2880250	ParameterType	string &		2880173	0					
ANR	2880251	Identifier	_text		2880173	1					
ANR	2880252	CFGEntryNode	ENTRY		2880173		True				
ANR	2880253	CFGExitNode	EXIT		2880173		True				
ANR	2880254	Symbol	c		2880173						
ANR	2880255	Symbol	_name		2880173						
ANR	2880256	Symbol	* ptr ++		2880173						
ANR	2880257	Symbol	* ptr		2880173						
ANR	2880258	Symbol	false		2880173						
ANR	2880259	Symbol	true		2880173						
ANR	2880260	Symbol	_text		2880173						
ANR	2880261	Symbol	_name . c_str		2880173						
ANR	2880262	Symbol	ptr		2880173						
ANR	2880263	Function	aviary :: util :: checkRequiredAttrs	121:0:2943:3238							
ANR	2880264	FunctionDef	"aviary :: util :: checkRequiredAttrs (compat_classad :: ClassAd & ad , const char * attrs [ ] , string & missing)"		2880263	0					
ANR	2880265	CompoundStatement		121:105:3048:3238	2880263	0					
ANR	2880266	IdentifierDeclStatement	bool status = true ;	122:1:3051:3069	2880263	0	True				
ANR	2880267	IdentifierDecl	status = true		2880263	0					
ANR	2880268	IdentifierDeclType	bool		2880263	0					
ANR	2880269	Identifier	status		2880263	1					
ANR	2880270	AssignmentExpression	status = true		2880263	2		=			
ANR	2880271	Identifier	true		2880263	0					
ANR	2880272	Identifier	true		2880263	1					
ANR	2880273	IdentifierDeclStatement	int i = 0 ;	123:1:3072:3081	2880263	1	True				
ANR	2880274	IdentifierDecl	i = 0		2880263	0					
ANR	2880275	IdentifierDeclType	int		2880263	0					
ANR	2880276	Identifier	i		2880263	1					
ANR	2880277	AssignmentExpression	i = 0		2880263	2		=			
ANR	2880278	Identifier	i		2880263	0					
ANR	2880279	PrimaryExpression	0		2880263	1					
ANR	2880280	WhileStatement	while ( NULL != attrs [ i ] )		2880263	2					
ANR	2880281	Condition	NULL != attrs [ i ]	125:15:3099:3114	2880263	0	True				
ANR	2880282	EqualityExpression	NULL != attrs [ i ]		2880263	0		!=			
ANR	2880283	Identifier	NULL		2880263	0					
ANR	2880284	ArrayIndexing	attrs [ i ]		2880263	1					
ANR	2880285	Identifier	attrs		2880263	0					
ANR	2880286	Identifier	i		2880263	1					
ANR	2880287	CompoundStatement		5:33:68:68	2880263	1					
ANR	2880288	IfStatement	if ( ! ad . Lookup ( attrs [ i ] ) )		2880263	0					
ANR	2880289	Condition	! ad . Lookup ( attrs [ i ] )	126:6:3125:3144	2880263	0	True				
ANR	2880290	UnaryOperationExpression	! ad . Lookup ( attrs [ i ] )		2880263	0					
ANR	2880291	UnaryOperator	!		2880263	0					
ANR	2880292	CallExpression	ad . Lookup ( attrs [ i ] )		2880263	1					
ANR	2880293	Callee	ad . Lookup		2880263	0					
ANR	2880294	MemberAccess	ad . Lookup		2880263	0					
ANR	2880295	Identifier	ad		2880263	0					
ANR	2880296	Identifier	Lookup		2880263	1					
ANR	2880297	ArgumentList	attrs [ i ]		2880263	1					
ANR	2880298	Argument	attrs [ i ]		2880263	0					
ANR	2880299	ArrayIndexing	attrs [ i ]		2880263	0					
ANR	2880300	Identifier	attrs		2880263	0					
ANR	2880301	Identifier	i		2880263	1					
ANR	2880302	CompoundStatement		6:28:98:98	2880263	1					
ANR	2880303	ExpressionStatement	"missing += "" """	127:3:3152:3166	2880263	0	True				
ANR	2880304	AssignmentExpression	"missing += "" """		2880263	0		+=			
ANR	2880305	Identifier	missing		2880263	0					
ANR	2880306	PrimaryExpression	""" """		2880263	1					
ANR	2880307	ExpressionStatement	missing += attrs [ i ]	127:19:3168:3187	2880263	1	True				
ANR	2880308	AssignmentExpression	missing += attrs [ i ]		2880263	0		+=			
ANR	2880309	Identifier	missing		2880263	0					
ANR	2880310	ArrayIndexing	attrs [ i ]		2880263	1					
ANR	2880311	Identifier	attrs		2880263	0					
ANR	2880312	Identifier	i		2880263	1					
ANR	2880313	ExpressionStatement	status = false	128:3:3192:3206	2880263	2	True				
ANR	2880314	AssignmentExpression	status = false		2880263	0		=			
ANR	2880315	Identifier	status		2880263	0					
ANR	2880316	Identifier	false		2880263	1					
ANR	2880317	ExpressionStatement	i ++	130:2:3214:3217	2880263	1	True				
ANR	2880318	PostIncDecOperationExpression	i ++		2880263	0					
ANR	2880319	Identifier	i		2880263	0					
ANR	2880320	IncDec	++		2880263	1					
ANR	2880321	ReturnStatement	return status ;	132:1:3223:3236	2880263	3	True				
ANR	2880322	Identifier	status		2880263	0					
ANR	2880323	ReturnType	bool		2880263	1					
ANR	2880324	Identifier	aviary :: util :: checkRequiredAttrs		2880263	2					
ANR	2880325	ParameterList	"compat_classad :: ClassAd & ad , const char * attrs [ ] , string & missing"		2880263	3					
ANR	2880326	Parameter	compat_classad :: ClassAd & ad	121:38:2981:3007	2880263	0	True				
ANR	2880327	ParameterType	compat_classad :: ClassAd &		2880263	0					
ANR	2880328	Identifier	ad		2880263	1					
ANR	2880329	Parameter	const char * attrs [ ]	121:67:3010:3028	2880263	1	True				
ANR	2880330	ParameterType	const char * [ ]		2880263	0					
ANR	2880331	Identifier	attrs		2880263	1					
ANR	2880332	Parameter	string & missing	121:88:3031:3045	2880263	2	True				
ANR	2880333	ParameterType	string &		2880263	0					
ANR	2880334	Identifier	missing		2880263	1					
ANR	2880335	CFGEntryNode	ENTRY		2880263		True				
ANR	2880336	CFGExitNode	EXIT		2880263		True				
ANR	2880337	Symbol	* attrs		2880263						
ANR	2880338	Symbol	ad		2880263						
ANR	2880339	Symbol	* i		2880263						
ANR	2880340	Symbol	NULL		2880263						
ANR	2880341	Symbol	missing		2880263						
ANR	2880342	Symbol	true		2880263						
ANR	2880343	Symbol	false		2880263						
ANR	2880344	Symbol	i		2880263						
ANR	2880345	Symbol	ad . Lookup		2880263						
ANR	2880346	Symbol	attrs		2880263						
ANR	2880347	Symbol	status		2880263						
ANR	2880348	Function	aviary :: util :: isKeyword	136:0:3285:3461							
ANR	2880349	FunctionDef	aviary :: util :: isKeyword (const char * kw)		2880348	0					
ANR	2880350	CompoundStatement		136:45:3330:3461	2880348	0					
ANR	2880351	IdentifierDeclStatement	int i = 0 ;	137:1:3333:3342	2880348	0	True				
ANR	2880352	IdentifierDecl	i = 0		2880348	0					
ANR	2880353	IdentifierDeclType	int		2880348	0					
ANR	2880354	Identifier	i		2880348	1					
ANR	2880355	AssignmentExpression	i = 0		2880348	2		=			
ANR	2880356	Identifier	i		2880348	0					
ANR	2880357	PrimaryExpression	0		2880348	1					
ANR	2880358	WhileStatement	while ( NULL != RESERVED [ i ] )		2880348	1					
ANR	2880359	Condition	NULL != RESERVED [ i ]	138:8:3352:3370	2880348	0	True				
ANR	2880360	EqualityExpression	NULL != RESERVED [ i ]		2880348	0		!=			
ANR	2880361	Identifier	NULL		2880348	0					
ANR	2880362	ArrayIndexing	RESERVED [ i ]		2880348	1					
ANR	2880363	Identifier	RESERVED		2880348	0					
ANR	2880364	Identifier	i		2880348	1					
ANR	2880365	CompoundStatement		3:29:42:42	2880348	1					
ANR	2880366	IfStatement	"if ( strcasecmp ( kw , RESERVED [ i ] ) == 0 )"		2880348	0					
ANR	2880367	Condition	"strcasecmp ( kw , RESERVED [ i ] ) == 0"	139:6:3381:3411	2880348	0	True				
ANR	2880368	EqualityExpression	"strcasecmp ( kw , RESERVED [ i ] ) == 0"		2880348	0		==			
ANR	2880369	CallExpression	"strcasecmp ( kw , RESERVED [ i ] )"		2880348	0					
ANR	2880370	Callee	strcasecmp		2880348	0					
ANR	2880371	Identifier	strcasecmp		2880348	0					
ANR	2880372	ArgumentList	kw		2880348	1					
ANR	2880373	Argument	kw		2880348	0					
ANR	2880374	Identifier	kw		2880348	0					
ANR	2880375	Argument	RESERVED [ i ]		2880348	1					
ANR	2880376	ArrayIndexing	RESERVED [ i ]		2880348	0					
ANR	2880377	Identifier	RESERVED		2880348	0					
ANR	2880378	Identifier	i		2880348	1					
ANR	2880379	PrimaryExpression	0		2880348	1					
ANR	2880380	CompoundStatement		4:39:83:83	2880348	1					
ANR	2880381	ReturnStatement	return true ;	140:3:3419:3430	2880348	0	True				
ANR	2880382	Identifier	true		2880348	0					
ANR	2880383	ExpressionStatement	i ++	142:2:3438:3441	2880348	1	True				
ANR	2880384	PostIncDecOperationExpression	i ++		2880348	0					
ANR	2880385	Identifier	i		2880348	0					
ANR	2880386	IncDec	++		2880348	1					
ANR	2880387	ReturnStatement	return false ;	144:1:3447:3459	2880348	2	True				
ANR	2880388	Identifier	false		2880348	0					
ANR	2880389	ReturnType	bool		2880348	1					
ANR	2880390	Identifier	aviary :: util :: isKeyword		2880348	2					
ANR	2880391	ParameterList	const char * kw		2880348	3					
ANR	2880392	Parameter	const char * kw	136:29:3314:3327	2880348	0	True				
ANR	2880393	ParameterType	const char *		2880348	0					
ANR	2880394	Identifier	kw		2880348	1					
ANR	2880395	CFGEntryNode	ENTRY		2880348		True				
ANR	2880396	CFGExitNode	EXIT		2880348		True				
ANR	2880397	Symbol	NULL		2880348						
ANR	2880398	Symbol	* i		2880348						
ANR	2880399	Symbol	* RESERVED		2880348						
ANR	2880400	Symbol	true		2880348						
ANR	2880401	Symbol	false		2880348						
ANR	2880402	Symbol	i		2880348						
ANR	2880403	Symbol	RESERVED		2880348						
ANR	2880404	Symbol	kw		2880348						
ANR	2880405	Symbol	strcasecmp		2880348						
ANR	2880406	Function	aviary :: util :: isSubmissionChange	148:0:3537:3676							
ANR	2880407	FunctionDef	aviary :: util :: isSubmissionChange (const char * attr)		2880406	0					
ANR	2880408	CompoundStatement		148:56:3593:3676	2880406	0					
ANR	2880409	IfStatement	"if ( strcasecmp ( attr , ATTR_JOB_SUBMISSION ) == 0 )"		2880406	0					
ANR	2880410	Condition	"strcasecmp ( attr , ATTR_JOB_SUBMISSION ) == 0"	149:5:3600:3638	2880406	0	True				
ANR	2880411	EqualityExpression	"strcasecmp ( attr , ATTR_JOB_SUBMISSION ) == 0"		2880406	0		==			
ANR	2880412	CallExpression	"strcasecmp ( attr , ATTR_JOB_SUBMISSION )"		2880406	0					
ANR	2880413	Callee	strcasecmp		2880406	0					
ANR	2880414	Identifier	strcasecmp		2880406	0					
ANR	2880415	ArgumentList	attr		2880406	1					
ANR	2880416	Argument	attr		2880406	0					
ANR	2880417	Identifier	attr		2880406	0					
ANR	2880418	Argument	ATTR_JOB_SUBMISSION		2880406	1					
ANR	2880419	Identifier	ATTR_JOB_SUBMISSION		2880406	0					
ANR	2880420	PrimaryExpression	0		2880406	1					
ANR	2880421	CompoundStatement		2:46:47:47	2880406	1					
ANR	2880422	ReturnStatement	return true ;	150:2:3645:3656	2880406	0	True				
ANR	2880423	Identifier	true		2880406	0					
ANR	2880424	ReturnStatement	return false ;	152:1:3662:3674	2880406	1	True				
ANR	2880425	Identifier	false		2880406	0					
ANR	2880426	ReturnType	bool		2880406	1					
ANR	2880427	Identifier	aviary :: util :: isSubmissionChange		2880406	2					
ANR	2880428	ParameterList	const char * attr		2880406	3					
ANR	2880429	Parameter	const char * attr	148:38:3575:3590	2880406	0	True				
ANR	2880430	ParameterType	const char *		2880406	0					
ANR	2880431	Identifier	attr		2880406	1					
ANR	2880432	CFGEntryNode	ENTRY		2880406		True				
ANR	2880433	CFGExitNode	EXIT		2880406		True				
ANR	2880434	Symbol	ATTR_JOB_SUBMISSION		2880406						
ANR	2880435	Symbol	true		2880406						
ANR	2880436	Symbol	false		2880406						
ANR	2880437	Symbol	attr		2880406						
ANR	2880438	Symbol	strcasecmp		2880406						
