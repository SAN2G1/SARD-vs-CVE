command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4147315	File	data/converged/CVE-2011-4930_htcondor/src_condor_syscall_lib_remote_startup.c								
ANR	4147316	ClassDef	result	136:0:5641:5679							
ANR	4147317	ClassDef	command	138:0:5683:5786							
ANR	4147318	ClassDef	<unnamed>	150:8:5798:5847							
ANR	4147319	DeclStmt									
ANR	4147320	Decl							enum command	enum command	id
ANR	4147321	DeclStmt									
ANR	4147322	Decl							char	char *	name
ANR	4147323	DeclStmt									
ANR	4147324	Decl									COMMAND
ANR	4147325	DeclStmt									
ANR	4147326	Decl							COMMAND	COMMAND [ ]	CmdTable
ANR	4147327	DeclStmt									
ANR	4147328	Decl							int	"int ( int , char * [ ] , char * * )"	main
ANR	4147329	DeclStmt									
ANR	4147330	Decl							void	void ( int fd )	_condor_interp_cmd_stream
ANR	4147331	DeclStmt									
ANR	4147332	Decl							void	"void ( char * buf , int * argc , char * argv [ ] )"	_condor_scan_cmd
ANR	4147333	DeclStmt									
ANR	4147334	Decl							enum result	"enum result ( int argc , char * argv [ ] )"	_condor_do_cmd
ANR	4147335	DeclStmt									
ANR	4147336	Decl							enum command	enum command ( const char * name )	_condor_find_cmd
ANR	4147337	DeclStmt									
ANR	4147338	Decl							BOOLEAN	BOOLEAN ( const char * path )	condor_iwd
ANR	4147339	DeclStmt									
ANR	4147340	Decl							BOOLEAN	"BOOLEAN ( const char * num , const char * path , const char * open_mode )"	condor_fd
ANR	4147341	DeclStmt									
ANR	4147342	Decl							BOOLEAN	BOOLEAN ( const char * path )	condor_ckpt
ANR	4147343	DeclStmt									
ANR	4147344	Decl							BOOLEAN	BOOLEAN ( void )	condor_restart
ANR	4147345	DeclStmt									
ANR	4147346	Decl							BOOLEAN	"BOOLEAN ( const char * host_addr , const char * port_num )"	condor_migrate_to
ANR	4147347	DeclStmt									
ANR	4147348	Decl							BOOLEAN	BOOLEAN ( const char * fd_no )	condor_migrate_from
ANR	4147349	DeclStmt									
ANR	4147350	Decl							BOOLEAN	BOOLEAN ( const char * status )	condor_exit
ANR	4147351	DeclStmt									
ANR	4147352	Decl							void	void ( unsigned int addr )	display_ip_addr
ANR	4147353	DeclStmt									
ANR	4147354	Decl							void	void ( void )	open_std_files
ANR	4147355	DeclStmt									
ANR	4147356	Decl							void	void ( void )	_condor_set_iwd
ANR	4147357	DeclStmt									
ANR	4147358	Decl							int	"int ( const char * local_path , int flags , size_t * len )"	open_file_stream
ANR	4147359	DeclStmt									
ANR	4147360	Decl							int	"int ( const char * name , int flags , size_t n_bytes )"	open_ckpt_file
ANR	4147361	DeclStmt									
ANR	4147362	Decl							void	void ( void )	get_ckpt_name
ANR	4147363	DeclStmt									
ANR	4147364	Decl							volatile int	volatile int	InRestart
ANR	4147365	DeclStmt									
ANR	4147366	Decl							void	void ( void )	_condor_setup_dprintf
ANR	4147367	DeclStmt									
ANR	4147368	Decl							void	void ( int syscall_mode )	_condor_prestart
ANR	4147369	DeclStmt									
ANR	4147370	Decl							extern void	extern void ( int )	init_syscall_connection_noret
ANR	4147371	DeclStmt									
ANR	4147372	Decl							void	void ( const char * ckpt_name )	init_image_with_file_name
ANR	4147373	DeclStmt									
ANR	4147374	Decl							void	void ( void )	restart
ANR	4147375	DeclStmt									
ANR	4147376	Decl							extern int	extern int ( char * version )	REMOTE_CONDOR_register_syscall_version
ANR	4147377	DeclStmt									
ANR	4147378	Decl							extern int	extern int ( const char * path )	REMOTE_CONDOR_chdir
ANR	4147379	DeclStmt									
ANR	4147380	Decl							extern int	extern int ( int kbytes )	REMOTE_CONDOR_image_size
ANR	4147381	DeclStmt									
ANR	4147382	Decl							extern int	extern int ( enum condor_signal_t sig )	REMOTE_CONDOR_get_ckpt_mode
ANR	4147383	DeclStmt									
ANR	4147384	Decl							extern int	extern int ( void )	REMOTE_CONDOR_get_ckpt_speed
ANR	4147385	DeclStmt									
ANR	4147386	Decl							extern int	"extern int ( int fd , char * * logical_name )"	REMOTE_CONDOR_get_std_file_info
ANR	4147387	DeclStmt									
ANR	4147388	Decl							extern int	extern int ( char * * path )	REMOTE_CONDOR_get_iwd
ANR	4147389	DeclStmt									
ANR	4147390	Decl							extern int	extern int ( char * * path )	REMOTE_CONDOR_get_ckpt_name
ANR	4147391	DeclStmt									
ANR	4147392	Decl							extern int	extern int	_condor_dprintf_works
ANR	4147393	DeclStmt									
ANR	4147394	Decl							extern int	extern int	_condor_DebugFD
ANR	4147395	DeclStmt									
ANR	4147396	Decl							int	int	do_remote_syscalls
ANR	4147397	Function	_linked_with_condor_message	211:0:8111:8297							
ANR	4147398	FunctionDef	_linked_with_condor_message ()		4147397	0					
ANR	4147399	CompoundStatement		212:0:8150:8297	4147397	0					
ANR	4147400	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""User Job - %s\\n"" , CondorPlatform ( ) )"	213:1:8153:8223	4147397	0	True				
ANR	4147401	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""User Job - %s\\n"" , CondorPlatform ( ) )"		4147397	0					
ANR	4147402	Callee	dprintf		4147397	0					
ANR	4147403	Identifier	dprintf		4147397	0					
ANR	4147404	ArgumentList	D_ALWAYS | D_NOHEADER		4147397	1					
ANR	4147405	Argument	D_ALWAYS | D_NOHEADER		4147397	0					
ANR	4147406	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		4147397	0		|			
ANR	4147407	Identifier	D_ALWAYS		4147397	0					
ANR	4147408	Identifier	D_NOHEADER		4147397	1					
ANR	4147409	Argument	"""User Job - %s\\n"""		4147397	1					
ANR	4147410	PrimaryExpression	"""User Job - %s\\n"""		4147397	0					
ANR	4147411	Argument	CondorPlatform ( )		4147397	2					
ANR	4147412	CallExpression	CondorPlatform ( )		4147397	0					
ANR	4147413	Callee	CondorPlatform		4147397	0					
ANR	4147414	Identifier	CondorPlatform		4147397	0					
ANR	4147415	ArgumentList			4147397	1					
ANR	4147416	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""User Job - %s\\n"" , CondorVersion ( ) )"	214:1:8226:8295	4147397	1	True				
ANR	4147417	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""User Job - %s\\n"" , CondorVersion ( ) )"		4147397	0					
ANR	4147418	Callee	dprintf		4147397	0					
ANR	4147419	Identifier	dprintf		4147397	0					
ANR	4147420	ArgumentList	D_ALWAYS | D_NOHEADER		4147397	1					
ANR	4147421	Argument	D_ALWAYS | D_NOHEADER		4147397	0					
ANR	4147422	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		4147397	0		|			
ANR	4147423	Identifier	D_ALWAYS		4147397	0					
ANR	4147424	Identifier	D_NOHEADER		4147397	1					
ANR	4147425	Argument	"""User Job - %s\\n"""		4147397	1					
ANR	4147426	PrimaryExpression	"""User Job - %s\\n"""		4147397	0					
ANR	4147427	Argument	CondorVersion ( )		4147397	2					
ANR	4147428	CallExpression	CondorVersion ( )		4147397	0					
ANR	4147429	Callee	CondorVersion		4147397	0					
ANR	4147430	Identifier	CondorVersion		4147397	0					
ANR	4147431	ArgumentList			4147397	1					
ANR	4147432	ReturnType	void		4147397	1					
ANR	4147433	Identifier	_linked_with_condor_message		4147397	2					
ANR	4147434	ParameterList			4147397	3					
ANR	4147435	CFGEntryNode	ENTRY		4147397		True				
ANR	4147436	CFGExitNode	EXIT		4147397		True				
ANR	4147437	Symbol	CondorVersion		4147397						
ANR	4147438	Symbol	CondorPlatform		4147397						
ANR	4147439	Symbol	D_ALWAYS		4147397						
ANR	4147440	Symbol	D_NOHEADER		4147397						
ANR	4147441	DeclStmt									
ANR	4147442	Decl							int	int	cmd_fd
ANR	4147443	DeclStmt									
ANR	4147444	Decl							char	char *	extra
ANR	4147445	DeclStmt									
ANR	4147446	Decl							int	int	scm
ANR	4147447	DeclStmt									
ANR	4147448	Decl							char	char *	arg
ANR	4147449	DeclStmt									
ANR	4147450	Decl							int	int	i
ANR	4147451	DeclStmt									
ANR	4147452	Decl							int	int	should_restart
ANR	4147453	DeclStmt									
ANR	4147454	Decl							char	char *	ckpt_file
ANR	4147455	DeclStmt									
ANR	4147456	Decl							int	int	user_argc
ANR	4147457	DeclStmt									
ANR	4147458	Decl							char	char * [ _POSIX_ARG_MAX ]	user_argv
ANR	4147459	DeclStmt									
ANR	4147460	Decl							volatile int	volatile int	j
ANR	4147461	DeclStmt									
ANR	4147462	Decl							char	char *	kind
ANR	4147463	Decl							char	char *	mode
ANR	4147464	DeclStmt									
ANR	4147465	Decl							char	char *	wd
ANR	4147466	Function	_condor_interp_cmd_stream	504:0:15877:16305							
ANR	4147467	FunctionDef	_condor_interp_cmd_stream (int fd)		4147466	0					
ANR	4147468	CompoundStatement		506:0:15918:16305	4147466	0					
ANR	4147469	IdentifierDeclStatement	"FILE * fp = fdopen ( fd , ""r"" ) ;"	507:1:15921:15949	4147466	0	True				
ANR	4147470	IdentifierDecl	"* fp = fdopen ( fd , ""r"" )"		4147466	0					
ANR	4147471	IdentifierDeclType	FILE *		4147466	0					
ANR	4147472	Identifier	fp		4147466	1					
ANR	4147473	AssignmentExpression	"* fp = fdopen ( fd , ""r"" )"		4147466	2		=			
ANR	4147474	Identifier	fp		4147466	0					
ANR	4147475	CallExpression	"fdopen ( fd , ""r"" )"		4147466	1					
ANR	4147476	Callee	fdopen		4147466	0					
ANR	4147477	Identifier	fdopen		4147466	0					
ANR	4147478	ArgumentList	fd		4147466	1					
ANR	4147479	Argument	fd		4147466	0					
ANR	4147480	Identifier	fd		4147466	0					
ANR	4147481	Argument	"""r"""		4147466	1					
ANR	4147482	PrimaryExpression	"""r"""		4147466	0					
ANR	4147483	IdentifierDeclStatement	char buf [ 1024 ] ;	508:1:15952:15966	4147466	1	True				
ANR	4147484	IdentifierDecl	buf [ 1024 ]		4147466	0					
ANR	4147485	IdentifierDeclType	char [ 1024 ]		4147466	0					
ANR	4147486	Identifier	buf		4147466	1					
ANR	4147487	PrimaryExpression	1024		4147466	2					
ANR	4147488	IdentifierDeclStatement	int argc ;	509:1:15969:15978	4147466	2	True				
ANR	4147489	IdentifierDecl	argc		4147466	0					
ANR	4147490	IdentifierDeclType	int		4147466	0					
ANR	4147491	Identifier	argc		4147466	1					
ANR	4147492	IdentifierDeclStatement	char * argv [ 256 ] ;	510:1:15981:15996	4147466	3	True				
ANR	4147493	IdentifierDecl	* argv [ 256 ]		4147466	0					
ANR	4147494	IdentifierDeclType	char * [ 256 ]		4147466	0					
ANR	4147495	Identifier	argv		4147466	1					
ANR	4147496	PrimaryExpression	256		4147466	2					
ANR	4147497	WhileStatement	"while ( fgets ( buf , sizeof ( buf ) , fp ) )"		4147466	4					
ANR	4147498	Condition	"fgets ( buf , sizeof ( buf ) , fp )"	512:8:16007:16031	4147466	0	True				
ANR	4147499	CallExpression	"fgets ( buf , sizeof ( buf ) , fp )"		4147466	0					
ANR	4147500	Callee	fgets		4147466	0					
ANR	4147501	Identifier	fgets		4147466	0					
ANR	4147502	ArgumentList	buf		4147466	1					
ANR	4147503	Argument	buf		4147466	0					
ANR	4147504	Identifier	buf		4147466	0					
ANR	4147505	Argument	sizeof ( buf )		4147466	1					
ANR	4147506	SizeofExpression	sizeof ( buf )		4147466	0					
ANR	4147507	Sizeof	sizeof		4147466	0					
ANR	4147508	SizeofOperand	buf		4147466	1					
ANR	4147509	Argument	fp		4147466	2					
ANR	4147510	Identifier	fp		4147466	0					
ANR	4147511	CompoundStatement		7:36:116:116	4147466	1					
ANR	4147512	ExpressionStatement	"_condor_scan_cmd ( buf , & argc , argv )"	513:2:16039:16075	4147466	0	True				
ANR	4147513	CallExpression	"_condor_scan_cmd ( buf , & argc , argv )"		4147466	0					
ANR	4147514	Callee	_condor_scan_cmd		4147466	0					
ANR	4147515	Identifier	_condor_scan_cmd		4147466	0					
ANR	4147516	ArgumentList	buf		4147466	1					
ANR	4147517	Argument	buf		4147466	0					
ANR	4147518	Identifier	buf		4147466	0					
ANR	4147519	Argument	& argc		4147466	1					
ANR	4147520	UnaryOperationExpression	& argc		4147466	0					
ANR	4147521	UnaryOperator	&		4147466	0					
ANR	4147522	Identifier	argc		4147466	1					
ANR	4147523	Argument	argv		4147466	2					
ANR	4147524	Identifier	argv		4147466	0					
ANR	4147525	SwitchStatement	"switch ( _condor_do_cmd ( argc , argv ) )"		4147466	1					
ANR	4147526	Condition	"_condor_do_cmd ( argc , argv )"	514:10:16087:16111	4147466	0	True				
ANR	4147527	CallExpression	"_condor_do_cmd ( argc , argv )"		4147466	0					
ANR	4147528	Callee	_condor_do_cmd		4147466	0					
ANR	4147529	Identifier	_condor_do_cmd		4147466	0					
ANR	4147530	ArgumentList	argc		4147466	1					
ANR	4147531	Argument	argc		4147466	0					
ANR	4147532	Identifier	argc		4147466	0					
ANR	4147533	Argument	argv		4147466	1					
ANR	4147534	Identifier	argv		4147466	0					
ANR	4147535	CompoundStatement		9:38:196:196	4147466	1					
ANR	4147536	Label	case OK :	515:4:16121:16128	4147466	0	True				
ANR	4147537	Identifier	OK		4147466	0					
ANR	4147538	BreakStatement	break ;	516:3:16133:16138	4147466	1	True				
ANR	4147539	Label	case NOT_OK :	517:4:16144:16155	4147466	2	True				
ANR	4147540	Identifier	NOT_OK		4147466	0					
ANR	4147541	ExpressionStatement	"dprintf ( D_ALWAYS , ""?\\n"" )"	518:3:16160:16186	4147466	3	True				
ANR	4147542	CallExpression	"dprintf ( D_ALWAYS , ""?\\n"" )"		4147466	0					
ANR	4147543	Callee	dprintf		4147466	0					
ANR	4147544	Identifier	dprintf		4147466	0					
ANR	4147545	ArgumentList	D_ALWAYS		4147466	1					
ANR	4147546	Argument	D_ALWAYS		4147466	0					
ANR	4147547	Identifier	D_ALWAYS		4147466	0					
ANR	4147548	Argument	"""?\\n"""		4147466	1					
ANR	4147549	PrimaryExpression	"""?\\n"""		4147466	0					
ANR	4147550	BreakStatement	break ;	519:3:16191:16196	4147466	4	True				
ANR	4147551	Label	case END :	520:4:16202:16210	4147466	5	True				
ANR	4147552	Identifier	END		4147466	0					
ANR	4147553	ExpressionStatement	fclose ( fp )	521:3:16215:16225	4147466	6	True				
ANR	4147554	CallExpression	fclose ( fp )		4147466	0					
ANR	4147555	Callee	fclose		4147466	0					
ANR	4147556	Identifier	fclose		4147466	0					
ANR	4147557	ArgumentList	fp		4147466	1					
ANR	4147558	Argument	fp		4147466	0					
ANR	4147559	Identifier	fp		4147466	0					
ANR	4147560	ReturnStatement	return ;	522:3:16230:16236	4147466	7	True				
ANR	4147561	ExpressionStatement	fclose ( fp )	525:1:16246:16256	4147466	5	True				
ANR	4147562	CallExpression	fclose ( fp )		4147466	0					
ANR	4147563	Callee	fclose		4147466	0					
ANR	4147564	Identifier	fclose		4147466	0					
ANR	4147565	ArgumentList	fp		4147466	1					
ANR	4147566	Argument	fp		4147466	0					
ANR	4147567	Identifier	fp		4147466	0					
ANR	4147568	ExpressionStatement	"_condor_error_retry ( ""EOF on command stream"" )"	526:1:16259:16303	4147466	6	True				
ANR	4147569	CallExpression	"_condor_error_retry ( ""EOF on command stream"" )"		4147466	0					
ANR	4147570	Callee	_condor_error_retry		4147466	0					
ANR	4147571	Identifier	_condor_error_retry		4147466	0					
ANR	4147572	ArgumentList	"""EOF on command stream"""		4147466	1					
ANR	4147573	Argument	"""EOF on command stream"""		4147466	0					
ANR	4147574	PrimaryExpression	"""EOF on command stream"""		4147466	0					
ANR	4147575	ReturnType	void		4147466	1					
ANR	4147576	Identifier	_condor_interp_cmd_stream		4147466	2					
ANR	4147577	ParameterList	int fd		4147466	3					
ANR	4147578	Parameter	int fd	505:27:15909:15914	4147466	0	True				
ANR	4147579	ParameterType	int		4147466	0					
ANR	4147580	Identifier	fd		4147466	1					
ANR	4147581	CFGEntryNode	ENTRY		4147466		True				
ANR	4147582	CFGExitNode	EXIT		4147466		True				
ANR	4147583	Symbol	argc		4147466						
ANR	4147584	Symbol	buf		4147466						
ANR	4147585	Symbol	_condor_do_cmd		4147466						
ANR	4147586	Symbol	D_ALWAYS		4147466						
ANR	4147587	Symbol	fp		4147466						
ANR	4147588	Symbol	fdopen		4147466						
ANR	4147589	Symbol	argv		4147466						
ANR	4147590	Symbol	fd		4147466						
ANR	4147591	Symbol	fgets		4147466						
ANR	4147592	Symbol	& argc		4147466						
ANR	4147593	Function	_condor_scan_cmd	529:0:16308:16539							
ANR	4147594	FunctionDef	"_condor_scan_cmd (char * buf , int * argc , char * argv [ ])"		4147593	0					
ANR	4147595	CompoundStatement		531:0:16375:16539	4147593	0					
ANR	4147596	IdentifierDeclStatement	int i ;	532:1:16378:16384	4147593	0	True				
ANR	4147597	IdentifierDecl	i		4147593	0					
ANR	4147598	IdentifierDeclType	int		4147593	0					
ANR	4147599	Identifier	i		4147593	1					
ANR	4147600	ExpressionStatement	"argv [ 0 ] = strtok ( buf , "" \\n"" )"	534:1:16388:16418	4147593	1	True				
ANR	4147601	AssignmentExpression	"argv [ 0 ] = strtok ( buf , "" \\n"" )"		4147593	0		=			
ANR	4147602	ArrayIndexing	argv [ 0 ]		4147593	0					
ANR	4147603	Identifier	argv		4147593	0					
ANR	4147604	PrimaryExpression	0		4147593	1					
ANR	4147605	CallExpression	"strtok ( buf , "" \\n"" )"		4147593	1					
ANR	4147606	Callee	strtok		4147593	0					
ANR	4147607	Identifier	strtok		4147593	0					
ANR	4147608	ArgumentList	buf		4147593	1					
ANR	4147609	Argument	buf		4147593	0					
ANR	4147610	Identifier	buf		4147593	0					
ANR	4147611	Argument	""" \\n"""		4147593	1					
ANR	4147612	PrimaryExpression	""" \\n"""		4147593	0					
ANR	4147613	IfStatement	if ( argv [ 0 ] == NULL )		4147593	2					
ANR	4147614	Condition	argv [ 0 ] == NULL	535:5:16425:16439	4147593	0	True				
ANR	4147615	EqualityExpression	argv [ 0 ] == NULL		4147593	0		==			
ANR	4147616	ArrayIndexing	argv [ 0 ]		4147593	0					
ANR	4147617	Identifier	argv		4147593	0					
ANR	4147618	PrimaryExpression	0		4147593	1					
ANR	4147619	Identifier	NULL		4147593	1					
ANR	4147620	CompoundStatement		5:23:67:67	4147593	1					
ANR	4147621	ExpressionStatement	* argc = 0	536:2:16447:16456	4147593	0	True				
ANR	4147622	AssignmentExpression	* argc = 0		4147593	0		=			
ANR	4147623	UnaryOperationExpression	* argc		4147593	0					
ANR	4147624	UnaryOperator	*		4147593	0					
ANR	4147625	Identifier	argc		4147593	1					
ANR	4147626	PrimaryExpression	0		4147593	1					
ANR	4147627	ReturnStatement	return ;	537:2:16460:16466	4147593	1	True				
ANR	4147628	ForStatement	"for ( i = 1 ; ( argv [ i ] = strtok ( NULL , "" \\n"" ) ) ; i ++ )"		4147593	3					
ANR	4147629	ForInit	i = 1 ;	540:6:16478:16483	4147593	0	True				
ANR	4147630	AssignmentExpression	i = 1		4147593	0		=			
ANR	4147631	Identifier	i		4147593	0					
ANR	4147632	PrimaryExpression	1		4147593	1					
ANR	4147633	Condition	"argv [ i ] = strtok ( NULL , "" \\n"" )"	540:13:16485:16514	4147593	1	True				
ANR	4147634	AssignmentExpression	"argv [ i ] = strtok ( NULL , "" \\n"" )"		4147593	0		=			
ANR	4147635	ArrayIndexing	argv [ i ]		4147593	0					
ANR	4147636	Identifier	argv		4147593	0					
ANR	4147637	Identifier	i		4147593	1					
ANR	4147638	CallExpression	"strtok ( NULL , "" \\n"" )"		4147593	1					
ANR	4147639	Callee	strtok		4147593	0					
ANR	4147640	Identifier	strtok		4147593	0					
ANR	4147641	ArgumentList	NULL		4147593	1					
ANR	4147642	Argument	NULL		4147593	0					
ANR	4147643	Identifier	NULL		4147593	0					
ANR	4147644	Argument	""" \\n"""		4147593	1					
ANR	4147645	PrimaryExpression	""" \\n"""		4147593	0					
ANR	4147646	PostIncDecOperationExpression	i ++	540:45:16517:16519	4147593	2	True				
ANR	4147647	Identifier	i		4147593	0					
ANR	4147648	IncDec	++		4147593	1					
ANR	4147649	ExpressionStatement		541:2:16525:16525	4147593	3	True				
ANR	4147650	ExpressionStatement	* argc = i	542:1:16528:16537	4147593	4	True				
ANR	4147651	AssignmentExpression	* argc = i		4147593	0		=			
ANR	4147652	UnaryOperationExpression	* argc		4147593	0					
ANR	4147653	UnaryOperator	*		4147593	0					
ANR	4147654	Identifier	argc		4147593	1					
ANR	4147655	Identifier	i		4147593	1					
ANR	4147656	ReturnType	static void		4147593	1					
ANR	4147657	Identifier	_condor_scan_cmd		4147593	2					
ANR	4147658	ParameterList	"char * buf , int * argc , char * argv [ ]"		4147593	3					
ANR	4147659	Parameter	char * buf	530:18:16338:16346	4147593	0	True				
ANR	4147660	ParameterType	char *		4147593	0					
ANR	4147661	Identifier	buf		4147593	1					
ANR	4147662	Parameter	int * argc	530:29:16349:16357	4147593	1	True				
ANR	4147663	ParameterType	int *		4147593	0					
ANR	4147664	Identifier	argc		4147593	1					
ANR	4147665	Parameter	char * argv [ ]	530:40:16360:16371	4147593	2	True				
ANR	4147666	ParameterType	char * [ ]		4147593	0					
ANR	4147667	Identifier	argv		4147593	1					
ANR	4147668	CFGEntryNode	ENTRY		4147593		True				
ANR	4147669	CFGExitNode	EXIT		4147593		True				
ANR	4147670	Symbol	argc		4147593						
ANR	4147671	Symbol	buf		4147593						
ANR	4147672	Symbol	NULL		4147593						
ANR	4147673	Symbol	* i		4147593						
ANR	4147674	Symbol	i		4147593						
ANR	4147675	Symbol	strtok		4147593						
ANR	4147676	Symbol	* argv		4147593						
ANR	4147677	Symbol	argv		4147593						
ANR	4147678	Symbol	* argc		4147593						
ANR	4147679	Function	_condor_do_cmd	546:0:16543:17474							
ANR	4147680	FunctionDef	"_condor_do_cmd (int argc , char * argv [ ])"		4147679	0					
ANR	4147681	CompoundStatement		548:0:16603:17474	4147679	0					
ANR	4147682	IfStatement	if ( argc == 0 )		4147679	0					
ANR	4147683	Condition	argc == 0	549:5:16610:16618	4147679	0	True				
ANR	4147684	EqualityExpression	argc == 0		4147679	0		==			
ANR	4147685	Identifier	argc		4147679	0					
ANR	4147686	PrimaryExpression	0		4147679	1					
ANR	4147687	CompoundStatement		2:17:18:18	4147679	1					
ANR	4147688	ReturnStatement	return NOT_OK ;	550:2:16626:16639	4147679	0	True				
ANR	4147689	Identifier	NOT_OK		4147679	0					
ANR	4147690	SwitchStatement	switch ( _condor_find_cmd ( argv [ 0 ] ) )		4147679	1					
ANR	4147691	Condition	_condor_find_cmd ( argv [ 0 ] )	553:9:16654:16678	4147679	0	True				
ANR	4147692	CallExpression	_condor_find_cmd ( argv [ 0 ] )		4147679	0					
ANR	4147693	Callee	_condor_find_cmd		4147679	0					
ANR	4147694	Identifier	_condor_find_cmd		4147679	0					
ANR	4147695	ArgumentList	argv [ 0 ]		4147679	1					
ANR	4147696	Argument	argv [ 0 ]		4147679	0					
ANR	4147697	ArrayIndexing	argv [ 0 ]		4147679	0					
ANR	4147698	Identifier	argv		4147679	0					
ANR	4147699	PrimaryExpression	0		4147679	1					
ANR	4147700	CompoundStatement		6:37:78:78	4147679	1					
ANR	4147701	Label	case END_MARKER :	554:3:16687:16702	4147679	0	True				
ANR	4147702	Identifier	END_MARKER		4147679	0					
ANR	4147703	ReturnStatement	return END ;	555:2:16706:16716	4147679	1	True				
ANR	4147704	Identifier	END		4147679	0					
ANR	4147705	Label	case IWD :	556:3:16721:16729	4147679	2	True				
ANR	4147706	Identifier	IWD		4147679	0					
ANR	4147707	IfStatement	if ( argc != 2 )		4147679	3					
ANR	4147708	Condition	argc != 2	557:6:16737:16745	4147679	0	True				
ANR	4147709	EqualityExpression	argc != 2		4147679	0		!=			
ANR	4147710	Identifier	argc		4147679	0					
ANR	4147711	PrimaryExpression	2		4147679	1					
ANR	4147712	CompoundStatement		10:18:145:145	4147679	1					
ANR	4147713	ReturnStatement	return NOT_OK ;	558:3:16754:16767	4147679	0	True				
ANR	4147714	Identifier	NOT_OK		4147679	0					
ANR	4147715	ReturnStatement	return ( condor_iwd ( argv [ 1 ] ) ) ? OK : NOT_OK ;	560:2:16775:16815	4147679	4	True				
ANR	4147716	ConditionalExpression	( condor_iwd ( argv [ 1 ] ) ) ? OK : NOT_OK		4147679	0					
ANR	4147717	Condition	condor_iwd ( argv [ 1 ] )		4147679	0					
ANR	4147718	CallExpression	condor_iwd ( argv [ 1 ] )		4147679	0					
ANR	4147719	Callee	condor_iwd		4147679	0					
ANR	4147720	Identifier	condor_iwd		4147679	0					
ANR	4147721	ArgumentList	argv [ 1 ]		4147679	1					
ANR	4147722	Argument	argv [ 1 ]		4147679	0					
ANR	4147723	ArrayIndexing	argv [ 1 ]		4147679	0					
ANR	4147724	Identifier	argv		4147679	0					
ANR	4147725	PrimaryExpression	1		4147679	1					
ANR	4147726	Identifier	OK		4147679	1					
ANR	4147727	Identifier	NOT_OK		4147679	2					
ANR	4147728	Label	case FD :	561:3:16820:16827	4147679	5	True				
ANR	4147729	Identifier	FD		4147679	0					
ANR	4147730	ExpressionStatement	assert ( argc == 4 )	562:2:16831:16850	4147679	6	True				
ANR	4147731	CallExpression	assert ( argc == 4 )		4147679	0					
ANR	4147732	Callee	assert		4147679	0					
ANR	4147733	Identifier	assert		4147679	0					
ANR	4147734	ArgumentList	argc == 4		4147679	1					
ANR	4147735	Argument	argc == 4		4147679	0					
ANR	4147736	EqualityExpression	argc == 4		4147679	0		==			
ANR	4147737	Identifier	argc		4147679	0					
ANR	4147738	PrimaryExpression	4		4147679	1					
ANR	4147739	ReturnStatement	"return ( condor_fd ( argv [ 1 ] , argv [ 2 ] , argv [ 3 ] ) ) ? OK : NOT_OK ;"	563:2:16854:16911	4147679	7	True				
ANR	4147740	ConditionalExpression	"( condor_fd ( argv [ 1 ] , argv [ 2 ] , argv [ 3 ] ) ) ? OK : NOT_OK"		4147679	0					
ANR	4147741	Condition	"condor_fd ( argv [ 1 ] , argv [ 2 ] , argv [ 3 ] )"		4147679	0					
ANR	4147742	CallExpression	"condor_fd ( argv [ 1 ] , argv [ 2 ] , argv [ 3 ] )"		4147679	0					
ANR	4147743	Callee	condor_fd		4147679	0					
ANR	4147744	Identifier	condor_fd		4147679	0					
ANR	4147745	ArgumentList	argv [ 1 ]		4147679	1					
ANR	4147746	Argument	argv [ 1 ]		4147679	0					
ANR	4147747	ArrayIndexing	argv [ 1 ]		4147679	0					
ANR	4147748	Identifier	argv		4147679	0					
ANR	4147749	PrimaryExpression	1		4147679	1					
ANR	4147750	Argument	argv [ 2 ]		4147679	1					
ANR	4147751	ArrayIndexing	argv [ 2 ]		4147679	0					
ANR	4147752	Identifier	argv		4147679	0					
ANR	4147753	PrimaryExpression	2		4147679	1					
ANR	4147754	Argument	argv [ 3 ]		4147679	2					
ANR	4147755	ArrayIndexing	argv [ 3 ]		4147679	0					
ANR	4147756	Identifier	argv		4147679	0					
ANR	4147757	PrimaryExpression	3		4147679	1					
ANR	4147758	Identifier	OK		4147679	1					
ANR	4147759	Identifier	NOT_OK		4147679	2					
ANR	4147760	Label	case RESTART :	564:3:16916:16928	4147679	8	True				
ANR	4147761	Identifier	RESTART		4147679	0					
ANR	4147762	IfStatement	if ( argc != 1 )		4147679	9					
ANR	4147763	Condition	argc != 1	565:6:16936:16944	4147679	0	True				
ANR	4147764	EqualityExpression	argc != 1		4147679	0		!=			
ANR	4147765	Identifier	argc		4147679	0					
ANR	4147766	PrimaryExpression	1		4147679	1					
ANR	4147767	CompoundStatement		18:18:344:344	4147679	1					
ANR	4147768	ReturnStatement	return NOT_OK ;	566:3:16953:16966	4147679	0	True				
ANR	4147769	Identifier	NOT_OK		4147679	0					
ANR	4147770	ReturnStatement	return condor_restart ( ) ? OK : NOT_OK ;	568:2:16974:17007	4147679	10	True				
ANR	4147771	ConditionalExpression	condor_restart ( ) ? OK : NOT_OK		4147679	0					
ANR	4147772	Condition	condor_restart ( )		4147679	0					
ANR	4147773	CallExpression	condor_restart ( )		4147679	0					
ANR	4147774	Callee	condor_restart		4147679	0					
ANR	4147775	Identifier	condor_restart		4147679	0					
ANR	4147776	ArgumentList			4147679	1					
ANR	4147777	Identifier	OK		4147679	1					
ANR	4147778	Identifier	NOT_OK		4147679	2					
ANR	4147779	Label	case CKPT :	569:3:17012:17021	4147679	11	True				
ANR	4147780	Identifier	CKPT		4147679	0					
ANR	4147781	IfStatement	if ( argc != 2 )		4147679	12					
ANR	4147782	Condition	argc != 2	570:6:17029:17037	4147679	0	True				
ANR	4147783	EqualityExpression	argc != 2		4147679	0		!=			
ANR	4147784	Identifier	argc		4147679	0					
ANR	4147785	PrimaryExpression	2		4147679	1					
ANR	4147786	CompoundStatement		23:18:437:437	4147679	1					
ANR	4147787	ReturnStatement	return NOT_OK ;	571:3:17046:17059	4147679	0	True				
ANR	4147788	Identifier	NOT_OK		4147679	0					
ANR	4147789	ReturnStatement	return condor_ckpt ( argv [ 1 ] ) ? OK : NOT_OK ;	573:2:17067:17106	4147679	13	True				
ANR	4147790	ConditionalExpression	condor_ckpt ( argv [ 1 ] ) ? OK : NOT_OK		4147679	0					
ANR	4147791	Condition	condor_ckpt ( argv [ 1 ] )		4147679	0					
ANR	4147792	CallExpression	condor_ckpt ( argv [ 1 ] )		4147679	0					
ANR	4147793	Callee	condor_ckpt		4147679	0					
ANR	4147794	Identifier	condor_ckpt		4147679	0					
ANR	4147795	ArgumentList	argv [ 1 ]		4147679	1					
ANR	4147796	Argument	argv [ 1 ]		4147679	0					
ANR	4147797	ArrayIndexing	argv [ 1 ]		4147679	0					
ANR	4147798	Identifier	argv		4147679	0					
ANR	4147799	PrimaryExpression	1		4147679	1					
ANR	4147800	Identifier	OK		4147679	1					
ANR	4147801	Identifier	NOT_OK		4147679	2					
ANR	4147802	Label	case MIGRATE_TO :	574:3:17111:17126	4147679	14	True				
ANR	4147803	Identifier	MIGRATE_TO		4147679	0					
ANR	4147804	IfStatement	if ( argc != 3 )		4147679	15					
ANR	4147805	Condition	argc != 3	575:6:17134:17142	4147679	0	True				
ANR	4147806	EqualityExpression	argc != 3		4147679	0		!=			
ANR	4147807	Identifier	argc		4147679	0					
ANR	4147808	PrimaryExpression	3		4147679	1					
ANR	4147809	CompoundStatement		28:18:542:542	4147679	1					
ANR	4147810	ReturnStatement	return NOT_OK ;	576:3:17151:17164	4147679	0	True				
ANR	4147811	Identifier	NOT_OK		4147679	0					
ANR	4147812	ReturnStatement	"return condor_migrate_to ( argv [ 1 ] , argv [ 2 ] ) ? OK : NOT_OK ;"	578:2:17172:17226	4147679	16	True				
ANR	4147813	ConditionalExpression	"condor_migrate_to ( argv [ 1 ] , argv [ 2 ] ) ? OK : NOT_OK"		4147679	0					
ANR	4147814	Condition	"condor_migrate_to ( argv [ 1 ] , argv [ 2 ] )"		4147679	0					
ANR	4147815	CallExpression	"condor_migrate_to ( argv [ 1 ] , argv [ 2 ] )"		4147679	0					
ANR	4147816	Callee	condor_migrate_to		4147679	0					
ANR	4147817	Identifier	condor_migrate_to		4147679	0					
ANR	4147818	ArgumentList	argv [ 1 ]		4147679	1					
ANR	4147819	Argument	argv [ 1 ]		4147679	0					
ANR	4147820	ArrayIndexing	argv [ 1 ]		4147679	0					
ANR	4147821	Identifier	argv		4147679	0					
ANR	4147822	PrimaryExpression	1		4147679	1					
ANR	4147823	Argument	argv [ 2 ]		4147679	1					
ANR	4147824	ArrayIndexing	argv [ 2 ]		4147679	0					
ANR	4147825	Identifier	argv		4147679	0					
ANR	4147826	PrimaryExpression	2		4147679	1					
ANR	4147827	Identifier	OK		4147679	1					
ANR	4147828	Identifier	NOT_OK		4147679	2					
ANR	4147829	Label	case MIGRATE_FROM :	579:3:17231:17248	4147679	17	True				
ANR	4147830	Identifier	MIGRATE_FROM		4147679	0					
ANR	4147831	IfStatement	if ( argc != 2 )		4147679	18					
ANR	4147832	Condition	argc != 2	580:6:17256:17264	4147679	0	True				
ANR	4147833	EqualityExpression	argc != 2		4147679	0		!=			
ANR	4147834	Identifier	argc		4147679	0					
ANR	4147835	PrimaryExpression	2		4147679	1					
ANR	4147836	CompoundStatement		33:18:664:664	4147679	1					
ANR	4147837	ReturnStatement	return NOT_OK ;	581:3:17273:17286	4147679	0	True				
ANR	4147838	Identifier	NOT_OK		4147679	0					
ANR	4147839	ReturnStatement	return condor_migrate_from ( argv [ 1 ] ) ? OK : NOT_OK ;	583:2:17294:17341	4147679	19	True				
ANR	4147840	ConditionalExpression	condor_migrate_from ( argv [ 1 ] ) ? OK : NOT_OK		4147679	0					
ANR	4147841	Condition	condor_migrate_from ( argv [ 1 ] )		4147679	0					
ANR	4147842	CallExpression	condor_migrate_from ( argv [ 1 ] )		4147679	0					
ANR	4147843	Callee	condor_migrate_from		4147679	0					
ANR	4147844	Identifier	condor_migrate_from		4147679	0					
ANR	4147845	ArgumentList	argv [ 1 ]		4147679	1					
ANR	4147846	Argument	argv [ 1 ]		4147679	0					
ANR	4147847	ArrayIndexing	argv [ 1 ]		4147679	0					
ANR	4147848	Identifier	argv		4147679	0					
ANR	4147849	PrimaryExpression	1		4147679	1					
ANR	4147850	Identifier	OK		4147679	1					
ANR	4147851	Identifier	NOT_OK		4147679	2					
ANR	4147852	Label	case EXIT :	584:3:17346:17355	4147679	20	True				
ANR	4147853	Identifier	EXIT		4147679	0					
ANR	4147854	IfStatement	if ( argc != 2 )		4147679	21					
ANR	4147855	Condition	argc != 2	585:6:17363:17371	4147679	0	True				
ANR	4147856	EqualityExpression	argc != 2		4147679	0		!=			
ANR	4147857	Identifier	argc		4147679	0					
ANR	4147858	PrimaryExpression	2		4147679	1					
ANR	4147859	CompoundStatement		38:18:771:771	4147679	1					
ANR	4147860	ReturnStatement	return NOT_OK ;	586:3:17380:17393	4147679	0	True				
ANR	4147861	Identifier	NOT_OK		4147679	0					
ANR	4147862	ReturnStatement	return condor_exit ( argv [ 1 ] ) ? OK : NOT_OK ;	588:2:17401:17440	4147679	22	True				
ANR	4147863	ConditionalExpression	condor_exit ( argv [ 1 ] ) ? OK : NOT_OK		4147679	0					
ANR	4147864	Condition	condor_exit ( argv [ 1 ] )		4147679	0					
ANR	4147865	CallExpression	condor_exit ( argv [ 1 ] )		4147679	0					
ANR	4147866	Callee	condor_exit		4147679	0					
ANR	4147867	Identifier	condor_exit		4147679	0					
ANR	4147868	ArgumentList	argv [ 1 ]		4147679	1					
ANR	4147869	Argument	argv [ 1 ]		4147679	0					
ANR	4147870	ArrayIndexing	argv [ 1 ]		4147679	0					
ANR	4147871	Identifier	argv		4147679	0					
ANR	4147872	PrimaryExpression	1		4147679	1					
ANR	4147873	Identifier	OK		4147679	1					
ANR	4147874	Identifier	NOT_OK		4147679	2					
ANR	4147875	Label	default :	589:3:17445:17452	4147679	23	True				
ANR	4147876	Identifier	default		4147679	0					
ANR	4147877	ReturnStatement	return NOT_OK ;	590:2:17456:17469	4147679	24	True				
ANR	4147878	Identifier	NOT_OK		4147679	0					
ANR	4147879	ReturnType	static enum result		4147679	1					
ANR	4147880	Identifier	_condor_do_cmd		4147679	2					
ANR	4147881	ParameterList	"int argc , char * argv [ ]"		4147679	3					
ANR	4147882	Parameter	int argc	547:16:16578:16585	4147679	0	True				
ANR	4147883	ParameterType	int		4147679	0					
ANR	4147884	Identifier	argc		4147679	1					
ANR	4147885	Parameter	char * argv [ ]	547:26:16588:16599	4147679	1	True				
ANR	4147886	ParameterType	char * [ ]		4147679	0					
ANR	4147887	Identifier	argv		4147679	1					
ANR	4147888	CFGEntryNode	ENTRY		4147679		True				
ANR	4147889	CFGExitNode	EXIT		4147679		True				
ANR	4147890	Symbol	argc		4147679						
ANR	4147891	Symbol	condor_fd		4147679						
ANR	4147892	Symbol	* argv		4147679						
ANR	4147893	Symbol	_condor_find_cmd		4147679						
ANR	4147894	Symbol	argv		4147679						
ANR	4147895	Symbol	condor_ckpt		4147679						
ANR	4147896	Symbol	NOT_OK		4147679						
ANR	4147897	Symbol	condor_exit		4147679						
ANR	4147898	Symbol	END		4147679						
ANR	4147899	Symbol	condor_migrate_from		4147679						
ANR	4147900	Symbol	condor_migrate_to		4147679						
ANR	4147901	Symbol	condor_iwd		4147679						
ANR	4147902	Symbol	OK		4147679						
ANR	4147903	Symbol	condor_restart		4147679						
ANR	4147904	Function	_condor_find_cmd	594:0:17477:17693							
ANR	4147905	FunctionDef	_condor_find_cmd (const char * str)		4147904	0					
ANR	4147906	CompoundStatement		596:0:17533:17693	4147904	0					
ANR	4147907	IdentifierDeclStatement	COMMAND * ptr ;	597:1:17536:17548	4147904	0	True				
ANR	4147908	IdentifierDecl	* ptr		4147904	0					
ANR	4147909	IdentifierDeclType	COMMAND *		4147904	0					
ANR	4147910	Identifier	ptr		4147904	1					
ANR	4147911	ForStatement	for ( ptr = CmdTable ; ptr -> id != NO_COMMAND ; ptr ++ )		4147904	1					
ANR	4147912	ForInit	ptr = CmdTable ;	599:6:17557:17571	4147904	0	True				
ANR	4147913	AssignmentExpression	ptr = CmdTable		4147904	0		=			
ANR	4147914	Identifier	ptr		4147904	0					
ANR	4147915	Identifier	CmdTable		4147904	1					
ANR	4147916	Condition	ptr -> id != NO_COMMAND	599:22:17573:17593	4147904	1	True				
ANR	4147917	EqualityExpression	ptr -> id != NO_COMMAND		4147904	0		!=			
ANR	4147918	PtrMemberAccess	ptr -> id		4147904	0					
ANR	4147919	Identifier	ptr		4147904	0					
ANR	4147920	Identifier	id		4147904	1					
ANR	4147921	Identifier	NO_COMMAND		4147904	1					
ANR	4147922	PostIncDecOperationExpression	ptr ++	599:45:17596:17600	4147904	2	True				
ANR	4147923	Identifier	ptr		4147904	0					
ANR	4147924	IncDec	++		4147904	1					
ANR	4147925	CompoundStatement		4:53:70:70	4147904	3					
ANR	4147926	IfStatement	"if ( strcmp ( ptr -> name , str ) == MATCH )"		4147904	0					
ANR	4147927	Condition	"strcmp ( ptr -> name , str ) == MATCH"	600:6:17612:17641	4147904	0	True				
ANR	4147928	EqualityExpression	"strcmp ( ptr -> name , str ) == MATCH"		4147904	0		==			
ANR	4147929	CallExpression	"strcmp ( ptr -> name , str )"		4147904	0					
ANR	4147930	Callee	strcmp		4147904	0					
ANR	4147931	Identifier	strcmp		4147904	0					
ANR	4147932	ArgumentList	ptr -> name		4147904	1					
ANR	4147933	Argument	ptr -> name		4147904	0					
ANR	4147934	PtrMemberAccess	ptr -> name		4147904	0					
ANR	4147935	Identifier	ptr		4147904	0					
ANR	4147936	Identifier	name		4147904	1					
ANR	4147937	Argument	str		4147904	1					
ANR	4147938	Identifier	str		4147904	0					
ANR	4147939	Identifier	MATCH		4147904	1					
ANR	4147940	CompoundStatement		5:39:111:111	4147904	1					
ANR	4147941	ReturnStatement	return ptr -> id ;	601:3:17650:17664	4147904	0	True				
ANR	4147942	PtrMemberAccess	ptr -> id		4147904	0					
ANR	4147943	Identifier	ptr		4147904	0					
ANR	4147944	Identifier	id		4147904	1					
ANR	4147945	ReturnStatement	return NO_COMMAND ;	604:1:17674:17691	4147904	2	True				
ANR	4147946	Identifier	NO_COMMAND		4147904	0					
ANR	4147947	ReturnType	static enum command		4147904	1					
ANR	4147948	Identifier	_condor_find_cmd		4147904	2					
ANR	4147949	ParameterList	const char * str		4147904	3					
ANR	4147950	Parameter	const char * str	595:18:17515:17529	4147904	0	True				
ANR	4147951	ParameterType	const char *		4147904	0					
ANR	4147952	Identifier	str		4147904	1					
ANR	4147953	CFGEntryNode	ENTRY		4147904		True				
ANR	4147954	CFGExitNode	EXIT		4147904		True				
ANR	4147955	Symbol	str		4147904						
ANR	4147956	Symbol	strcmp		4147904						
ANR	4147957	Symbol	NO_COMMAND		4147904						
ANR	4147958	Symbol	CmdTable		4147904						
ANR	4147959	Symbol	ptr -> name		4147904						
ANR	4147960	Symbol	* ptr		4147904						
ANR	4147961	Symbol	ptr -> id		4147904						
ANR	4147962	Symbol	MATCH		4147904						
ANR	4147963	Symbol	ptr		4147904						
ANR	4147964	Function	condor_iwd	607:0:17696:17925							
ANR	4147965	FunctionDef	condor_iwd (const char * path)		4147964	0					
ANR	4147966	CompoundStatement		609:0:17742:17925	4147964	0					
ANR	4147967	IdentifierDeclStatement	int scm = SetSyscalls ( SYS_REMOTE | SYS_MAPPED ) ;	611:1:17828:17874	4147964	0	True				
ANR	4147968	IdentifierDecl	scm = SetSyscalls ( SYS_REMOTE | SYS_MAPPED )		4147964	0					
ANR	4147969	IdentifierDeclType	int		4147964	0					
ANR	4147970	Identifier	scm		4147964	1					
ANR	4147971	AssignmentExpression	scm = SetSyscalls ( SYS_REMOTE | SYS_MAPPED )		4147964	2		=			
ANR	4147972	Identifier	scm		4147964	0					
ANR	4147973	CallExpression	SetSyscalls ( SYS_REMOTE | SYS_MAPPED )		4147964	1					
ANR	4147974	Callee	SetSyscalls		4147964	0					
ANR	4147975	Identifier	SetSyscalls		4147964	0					
ANR	4147976	ArgumentList	SYS_REMOTE | SYS_MAPPED		4147964	1					
ANR	4147977	Argument	SYS_REMOTE | SYS_MAPPED		4147964	0					
ANR	4147978	InclusiveOrExpression	SYS_REMOTE | SYS_MAPPED		4147964	0		|			
ANR	4147979	Identifier	SYS_REMOTE		4147964	0					
ANR	4147980	Identifier	SYS_MAPPED		4147964	1					
ANR	4147981	ExpressionStatement	chdir ( path )	612:1:17877:17890	4147964	1	True				
ANR	4147982	CallExpression	chdir ( path )		4147964	0					
ANR	4147983	Callee	chdir		4147964	0					
ANR	4147984	Identifier	chdir		4147964	0					
ANR	4147985	ArgumentList	path		4147964	1					
ANR	4147986	Argument	path		4147964	0					
ANR	4147987	Identifier	path		4147964	0					
ANR	4147988	ExpressionStatement	SetSyscalls ( scm )	613:1:17893:17909	4147964	2	True				
ANR	4147989	CallExpression	SetSyscalls ( scm )		4147964	0					
ANR	4147990	Callee	SetSyscalls		4147964	0					
ANR	4147991	Identifier	SetSyscalls		4147964	0					
ANR	4147992	ArgumentList	scm		4147964	1					
ANR	4147993	Argument	scm		4147964	0					
ANR	4147994	Identifier	scm		4147964	0					
ANR	4147995	ReturnStatement	return TRUE ;	614:1:17912:17923	4147964	3	True				
ANR	4147996	Identifier	TRUE		4147964	0					
ANR	4147997	ReturnType	static BOOLEAN		4147964	1					
ANR	4147998	Identifier	condor_iwd		4147964	2					
ANR	4147999	ParameterList	const char * path		4147964	3					
ANR	4148000	Parameter	const char * path	608:12:17723:17738	4147964	0	True				
ANR	4148001	ParameterType	const char *		4147964	0					
ANR	4148002	Identifier	path		4147964	1					
ANR	4148003	CFGEntryNode	ENTRY		4147964		True				
ANR	4148004	CFGExitNode	EXIT		4147964		True				
ANR	4148005	Symbol	path		4147964						
ANR	4148006	Symbol	SYS_REMOTE		4147964						
ANR	4148007	Symbol	SetSyscalls		4147964						
ANR	4148008	Symbol	TRUE		4147964						
ANR	4148009	Symbol	scm		4147964						
ANR	4148010	Symbol	SYS_MAPPED		4147964						
ANR	4148011	Function	condor_fd	617:0:17928:18061							
ANR	4148012	FunctionDef	"condor_fd (const char * num , const char * path , const char * open_mode)"		4148011	0					
ANR	4148013	CompoundStatement		619:0:18013:18061	4148011	0					
ANR	4148014	ReturnStatement	return TRUE ;	621:1:18048:18059	4148011	0	True				
ANR	4148015	Identifier	TRUE		4148011	0					
ANR	4148016	ReturnType	static BOOLEAN		4148011	1					
ANR	4148017	Identifier	condor_fd		4148011	2					
ANR	4148018	ParameterList	"const char * num , const char * path , const char * open_mode"		4148011	3					
ANR	4148019	Parameter	const char * num	618:11:17954:17968	4148011	0	True				
ANR	4148020	ParameterType	const char *		4148011	0					
ANR	4148021	Identifier	num		4148011	1					
ANR	4148022	Parameter	const char * path	618:28:17971:17986	4148011	1	True				
ANR	4148023	ParameterType	const char *		4148011	0					
ANR	4148024	Identifier	path		4148011	1					
ANR	4148025	Parameter	const char * open_mode	618:46:17989:18009	4148011	2	True				
ANR	4148026	ParameterType	const char *		4148011	0					
ANR	4148027	Identifier	open_mode		4148011	1					
ANR	4148028	CFGEntryNode	ENTRY		4148011		True				
ANR	4148029	CFGExitNode	EXIT		4148011		True				
ANR	4148030	Symbol	open_mode		4148011						
ANR	4148031	Symbol	path		4148011						
ANR	4148032	Symbol	num		4148011						
ANR	4148033	Symbol	TRUE		4148011						
ANR	4148034	Function	condor_ckpt	624:0:18064:18228							
ANR	4148035	FunctionDef	condor_ckpt (const char * path)		4148034	0					
ANR	4148036	CompoundStatement		626:0:18111:18228	4148034	0					
ANR	4148037	ExpressionStatement	"dprintf ( D_ALWAYS , ""condor_ckpt: filename = \\""%s\\""\\n"" , path )"	627:1:18114:18175	4148034	0	True				
ANR	4148038	CallExpression	"dprintf ( D_ALWAYS , ""condor_ckpt: filename = \\""%s\\""\\n"" , path )"		4148034	0					
ANR	4148039	Callee	dprintf		4148034	0					
ANR	4148040	Identifier	dprintf		4148034	0					
ANR	4148041	ArgumentList	D_ALWAYS		4148034	1					
ANR	4148042	Argument	D_ALWAYS		4148034	0					
ANR	4148043	Identifier	D_ALWAYS		4148034	0					
ANR	4148044	Argument	"""condor_ckpt: filename = \\""%s\\""\\n"""		4148034	1					
ANR	4148045	PrimaryExpression	"""condor_ckpt: filename = \\""%s\\""\\n"""		4148034	0					
ANR	4148046	Argument	path		4148034	2					
ANR	4148047	Identifier	path		4148034	0					
ANR	4148048	ExpressionStatement	init_image_with_file_name ( path )	628:1:18178:18211	4148034	1	True				
ANR	4148049	CallExpression	init_image_with_file_name ( path )		4148034	0					
ANR	4148050	Callee	init_image_with_file_name		4148034	0					
ANR	4148051	Identifier	init_image_with_file_name		4148034	0					
ANR	4148052	ArgumentList	path		4148034	1					
ANR	4148053	Argument	path		4148034	0					
ANR	4148054	Identifier	path		4148034	0					
ANR	4148055	ReturnStatement	return TRUE ;	630:1:18215:18226	4148034	2	True				
ANR	4148056	Identifier	TRUE		4148034	0					
ANR	4148057	ReturnType	static BOOLEAN		4148034	1					
ANR	4148058	Identifier	condor_ckpt		4148034	2					
ANR	4148059	ParameterList	const char * path		4148034	3					
ANR	4148060	Parameter	const char * path	625:13:18092:18107	4148034	0	True				
ANR	4148061	ParameterType	const char *		4148034	0					
ANR	4148062	Identifier	path		4148034	1					
ANR	4148063	CFGEntryNode	ENTRY		4148034		True				
ANR	4148064	CFGExitNode	EXIT		4148034		True				
ANR	4148065	Symbol	path		4148034						
ANR	4148066	Symbol	D_ALWAYS		4148034						
ANR	4148067	Symbol	TRUE		4148034						
ANR	4148068	Function	condor_restart	634:0:18232:18420							
ANR	4148069	FunctionDef	condor_restart ()		4148068	0					
ANR	4148070	CompoundStatement		636:0:18264:18420	4148068	0					
ANR	4148071	ExpressionStatement	"dprintf ( D_ALWAYS , ""condor_restart:\\n"" )"	637:1:18267:18307	4148068	0	True				
ANR	4148072	CallExpression	"dprintf ( D_ALWAYS , ""condor_restart:\\n"" )"		4148068	0					
ANR	4148073	Callee	dprintf		4148068	0					
ANR	4148074	Identifier	dprintf		4148068	0					
ANR	4148075	ArgumentList	D_ALWAYS		4148068	1					
ANR	4148076	Argument	D_ALWAYS		4148068	0					
ANR	4148077	Identifier	D_ALWAYS		4148068	0					
ANR	4148078	Argument	"""condor_restart:\\n"""		4148068	1					
ANR	4148079	PrimaryExpression	"""condor_restart:\\n"""		4148068	0					
ANR	4148080	ExpressionStatement	get_ckpt_name ( )	638:1:18310:18325	4148068	1	True				
ANR	4148081	CallExpression	get_ckpt_name ( )		4148068	0					
ANR	4148082	Callee	get_ckpt_name		4148068	0					
ANR	4148083	Identifier	get_ckpt_name		4148068	0					
ANR	4148084	ArgumentList			4148068	1					
ANR	4148085	ExpressionStatement	restart ( )	639:1:18328:18337	4148068	2	True				
ANR	4148086	CallExpression	restart ( )		4148068	0					
ANR	4148087	Callee	restart		4148068	0					
ANR	4148088	Identifier	restart		4148068	0					
ANR	4148089	ArgumentList			4148068	1					
ANR	4148090	ReturnStatement	return FALSE ;	642:1:18406:18418	4148068	3	True				
ANR	4148091	Identifier	FALSE		4148068	0					
ANR	4148092	ReturnType	static BOOLEAN		4148068	1					
ANR	4148093	Identifier	condor_restart		4148068	2					
ANR	4148094	ParameterList			4148068	3					
ANR	4148095	CFGEntryNode	ENTRY		4148068		True				
ANR	4148096	CFGExitNode	EXIT		4148068		True				
ANR	4148097	Symbol	D_ALWAYS		4148068						
ANR	4148098	Symbol	FALSE		4148068						
ANR	4148099	Function	condor_migrate_to	645:0:18423:18719							
ANR	4148100	FunctionDef	"condor_migrate_to (const char * host_name , const char * port_num)"		4148099	0					
ANR	4148101	CompoundStatement		647:0:18503:18719	4148099	0					
ANR	4148102	IdentifierDeclStatement	char * extra ;	648:1:18506:18518	4148099	0	True				
ANR	4148103	IdentifierDecl	* extra		4148099	0					
ANR	4148104	IdentifierDeclType	char *		4148099	0					
ANR	4148105	Identifier	extra		4148099	1					
ANR	4148106	IdentifierDeclStatement	long port ;	649:1:18521:18530	4148099	1	True				
ANR	4148107	IdentifierDecl	port		4148099	0					
ANR	4148108	IdentifierDeclType	long		4148099	0					
ANR	4148109	Identifier	port		4148099	1					
ANR	4148110	ExpressionStatement	"port = strtol ( port_num , & extra , 0 )"	651:1:18534:18570	4148099	2	True				
ANR	4148111	AssignmentExpression	"port = strtol ( port_num , & extra , 0 )"		4148099	0		=			
ANR	4148112	Identifier	port		4148099	0					
ANR	4148113	CallExpression	"strtol ( port_num , & extra , 0 )"		4148099	1					
ANR	4148114	Callee	strtol		4148099	0					
ANR	4148115	Identifier	strtol		4148099	0					
ANR	4148116	ArgumentList	port_num		4148099	1					
ANR	4148117	Argument	port_num		4148099	0					
ANR	4148118	Identifier	port_num		4148099	0					
ANR	4148119	Argument	& extra		4148099	1					
ANR	4148120	UnaryOperationExpression	& extra		4148099	0					
ANR	4148121	UnaryOperator	&		4148099	0					
ANR	4148122	Identifier	extra		4148099	1					
ANR	4148123	Argument	0		4148099	2					
ANR	4148124	PrimaryExpression	0		4148099	0					
ANR	4148125	IfStatement	if ( extra [ 0 ] )		4148099	3					
ANR	4148126	Condition	extra [ 0 ]	652:5:18577:18584	4148099	0	True				
ANR	4148127	ArrayIndexing	extra [ 0 ]		4148099	0					
ANR	4148128	Identifier	extra		4148099	0					
ANR	4148129	PrimaryExpression	0		4148099	1					
ANR	4148130	CompoundStatement		6:16:84:84	4148099	1					
ANR	4148131	ReturnStatement	return FALSE ;	653:2:18592:18604	4148099	0	True				
ANR	4148132	Identifier	FALSE		4148099	0					
ANR	4148133	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""condor_migrate_to: host = \\""%s\\"", port = %ld\\n"" , host_name , port )"	656:1:18611:18703	4148099	4	True				
ANR	4148134	CallExpression	"dprintf ( D_FULLDEBUG , ""condor_migrate_to: host = \\""%s\\"", port = %ld\\n"" , host_name , port )"		4148099	0					
ANR	4148135	Callee	dprintf		4148099	0					
ANR	4148136	Identifier	dprintf		4148099	0					
ANR	4148137	ArgumentList	D_FULLDEBUG		4148099	1					
ANR	4148138	Argument	D_FULLDEBUG		4148099	0					
ANR	4148139	Identifier	D_FULLDEBUG		4148099	0					
ANR	4148140	Argument	"""condor_migrate_to: host = \\""%s\\"", port = %ld\\n"""		4148099	1					
ANR	4148141	PrimaryExpression	"""condor_migrate_to: host = \\""%s\\"", port = %ld\\n"""		4148099	0					
ANR	4148142	Argument	host_name		4148099	2					
ANR	4148143	Identifier	host_name		4148099	0					
ANR	4148144	Argument	port		4148099	3					
ANR	4148145	Identifier	port		4148099	0					
ANR	4148146	ReturnStatement	return TRUE ;	659:1:18706:18717	4148099	5	True				
ANR	4148147	Identifier	TRUE		4148099	0					
ANR	4148148	ReturnType	static BOOLEAN		4148099	1					
ANR	4148149	Identifier	condor_migrate_to		4148099	2					
ANR	4148150	ParameterList	"const char * host_name , const char * port_num"		4148099	3					
ANR	4148151	Parameter	const char * host_name	646:19:18457:18477	4148099	0	True				
ANR	4148152	ParameterType	const char *		4148099	0					
ANR	4148153	Identifier	host_name		4148099	1					
ANR	4148154	Parameter	const char * port_num	646:42:18480:18499	4148099	1	True				
ANR	4148155	ParameterType	const char *		4148099	0					
ANR	4148156	Identifier	port_num		4148099	1					
ANR	4148157	CFGEntryNode	ENTRY		4148099		True				
ANR	4148158	CFGExitNode	EXIT		4148099		True				
ANR	4148159	Symbol	* extra		4148099						
ANR	4148160	Symbol	port		4148099						
ANR	4148161	Symbol	strtol		4148099						
ANR	4148162	Symbol	port_num		4148099						
ANR	4148163	Symbol	extra		4148099						
ANR	4148164	Symbol	& extra		4148099						
ANR	4148165	Symbol	TRUE		4148099						
ANR	4148166	Symbol	FALSE		4148099						
ANR	4148167	Symbol	D_FULLDEBUG		4148099						
ANR	4148168	Symbol	host_name		4148099						
ANR	4148169	Function	condor_migrate_from	662:0:18722:18956							
ANR	4148170	FunctionDef	condor_migrate_from (const char * fd_no)		4148169	0					
ANR	4148171	CompoundStatement		664:0:18778:18956	4148169	0					
ANR	4148172	IdentifierDeclStatement	long fd ;	665:1:18781:18788	4148169	0	True				
ANR	4148173	IdentifierDecl	fd		4148169	0					
ANR	4148174	IdentifierDeclType	long		4148169	0					
ANR	4148175	Identifier	fd		4148169	1					
ANR	4148176	IdentifierDeclStatement	char * extra ;	666:1:18791:18802	4148169	1	True				
ANR	4148177	IdentifierDecl	* extra		4148169	0					
ANR	4148178	IdentifierDeclType	char *		4148169	0					
ANR	4148179	Identifier	extra		4148169	1					
ANR	4148180	ExpressionStatement	"fd = strtol ( fd_no , & extra , 0 )"	668:1:18806:18837	4148169	2	True				
ANR	4148181	AssignmentExpression	"fd = strtol ( fd_no , & extra , 0 )"		4148169	0		=			
ANR	4148182	Identifier	fd		4148169	0					
ANR	4148183	CallExpression	"strtol ( fd_no , & extra , 0 )"		4148169	1					
ANR	4148184	Callee	strtol		4148169	0					
ANR	4148185	Identifier	strtol		4148169	0					
ANR	4148186	ArgumentList	fd_no		4148169	1					
ANR	4148187	Argument	fd_no		4148169	0					
ANR	4148188	Identifier	fd_no		4148169	0					
ANR	4148189	Argument	& extra		4148169	1					
ANR	4148190	UnaryOperationExpression	& extra		4148169	0					
ANR	4148191	UnaryOperator	&		4148169	0					
ANR	4148192	Identifier	extra		4148169	1					
ANR	4148193	Argument	0		4148169	2					
ANR	4148194	PrimaryExpression	0		4148169	0					
ANR	4148195	IfStatement	if ( extra [ 0 ] )		4148169	3					
ANR	4148196	Condition	extra [ 0 ]	669:5:18844:18851	4148169	0	True				
ANR	4148197	ArrayIndexing	extra [ 0 ]		4148169	0					
ANR	4148198	Identifier	extra		4148169	0					
ANR	4148199	PrimaryExpression	0		4148169	1					
ANR	4148200	CompoundStatement		6:16:76:76	4148169	1					
ANR	4148201	ReturnStatement	return FALSE ;	670:2:18859:18871	4148169	0	True				
ANR	4148202	Identifier	FALSE		4148169	0					
ANR	4148203	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""condor_migrate_from: fd = %ld\\n"" , fd )"	673:1:18879:18940	4148169	4	True				
ANR	4148204	CallExpression	"dprintf ( D_FULLDEBUG , ""condor_migrate_from: fd = %ld\\n"" , fd )"		4148169	0					
ANR	4148205	Callee	dprintf		4148169	0					
ANR	4148206	Identifier	dprintf		4148169	0					
ANR	4148207	ArgumentList	D_FULLDEBUG		4148169	1					
ANR	4148208	Argument	D_FULLDEBUG		4148169	0					
ANR	4148209	Identifier	D_FULLDEBUG		4148169	0					
ANR	4148210	Argument	"""condor_migrate_from: fd = %ld\\n"""		4148169	1					
ANR	4148211	PrimaryExpression	"""condor_migrate_from: fd = %ld\\n"""		4148169	0					
ANR	4148212	Argument	fd		4148169	2					
ANR	4148213	Identifier	fd		4148169	0					
ANR	4148214	ReturnStatement	return TRUE ;	674:1:18943:18954	4148169	5	True				
ANR	4148215	Identifier	TRUE		4148169	0					
ANR	4148216	ReturnType	static BOOLEAN		4148169	1					
ANR	4148217	Identifier	condor_migrate_from		4148169	2					
ANR	4148218	ParameterList	const char * fd_no		4148169	3					
ANR	4148219	Parameter	const char * fd_no	663:21:18758:18774	4148169	0	True				
ANR	4148220	ParameterType	const char *		4148169	0					
ANR	4148221	Identifier	fd_no		4148169	1					
ANR	4148222	CFGEntryNode	ENTRY		4148169		True				
ANR	4148223	CFGExitNode	EXIT		4148169		True				
ANR	4148224	Symbol	* extra		4148169						
ANR	4148225	Symbol	strtol		4148169						
ANR	4148226	Symbol	extra		4148169						
ANR	4148227	Symbol	& extra		4148169						
ANR	4148228	Symbol	TRUE		4148169						
ANR	4148229	Symbol	FALSE		4148169						
ANR	4148230	Symbol	D_FULLDEBUG		4148169						
ANR	4148231	Symbol	fd_no		4148169						
ANR	4148232	Symbol	fd		4148169						
ANR	4148233	Function	condor_exit	677:0:18959:19183							
ANR	4148234	FunctionDef	condor_exit (const char * status)		4148233	0					
ANR	4148235	CompoundStatement		679:0:19008:19183	4148233	0					
ANR	4148236	IdentifierDeclStatement	long st ;	680:1:19011:19018	4148233	0	True				
ANR	4148237	IdentifierDecl	st		4148233	0					
ANR	4148238	IdentifierDeclType	long		4148233	0					
ANR	4148239	Identifier	st		4148233	1					
ANR	4148240	IdentifierDeclStatement	char * extra ;	681:1:19021:19032	4148233	1	True				
ANR	4148241	IdentifierDecl	* extra		4148233	0					
ANR	4148242	IdentifierDeclType	char *		4148233	0					
ANR	4148243	Identifier	extra		4148233	1					
ANR	4148244	ExpressionStatement	"st = strtol ( status , & extra , 0 )"	683:1:19036:19068	4148233	2	True				
ANR	4148245	AssignmentExpression	"st = strtol ( status , & extra , 0 )"		4148233	0		=			
ANR	4148246	Identifier	st		4148233	0					
ANR	4148247	CallExpression	"strtol ( status , & extra , 0 )"		4148233	1					
ANR	4148248	Callee	strtol		4148233	0					
ANR	4148249	Identifier	strtol		4148233	0					
ANR	4148250	ArgumentList	status		4148233	1					
ANR	4148251	Argument	status		4148233	0					
ANR	4148252	Identifier	status		4148233	0					
ANR	4148253	Argument	& extra		4148233	1					
ANR	4148254	UnaryOperationExpression	& extra		4148233	0					
ANR	4148255	UnaryOperator	&		4148233	0					
ANR	4148256	Identifier	extra		4148233	1					
ANR	4148257	Argument	0		4148233	2					
ANR	4148258	PrimaryExpression	0		4148233	0					
ANR	4148259	IfStatement	if ( extra [ 0 ] )		4148233	3					
ANR	4148260	Condition	extra [ 0 ]	684:5:19075:19082	4148233	0	True				
ANR	4148261	ArrayIndexing	extra [ 0 ]		4148233	0					
ANR	4148262	Identifier	extra		4148233	0					
ANR	4148263	PrimaryExpression	0		4148233	1					
ANR	4148264	CompoundStatement		6:16:77:77	4148233	1					
ANR	4148265	ReturnStatement	return FALSE ;	685:2:19090:19102	4148233	0	True				
ANR	4148266	Identifier	FALSE		4148233	0					
ANR	4148267	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""condor_exit: status = %ld\\n"" , st )"	688:1:19110:19167	4148233	4	True				
ANR	4148268	CallExpression	"dprintf ( D_FULLDEBUG , ""condor_exit: status = %ld\\n"" , st )"		4148233	0					
ANR	4148269	Callee	dprintf		4148233	0					
ANR	4148270	Identifier	dprintf		4148233	0					
ANR	4148271	ArgumentList	D_FULLDEBUG		4148233	1					
ANR	4148272	Argument	D_FULLDEBUG		4148233	0					
ANR	4148273	Identifier	D_FULLDEBUG		4148233	0					
ANR	4148274	Argument	"""condor_exit: status = %ld\\n"""		4148233	1					
ANR	4148275	PrimaryExpression	"""condor_exit: status = %ld\\n"""		4148233	0					
ANR	4148276	Argument	st		4148233	2					
ANR	4148277	Identifier	st		4148233	0					
ANR	4148278	ReturnStatement	return TRUE ;	689:1:19170:19181	4148233	5	True				
ANR	4148279	Identifier	TRUE		4148233	0					
ANR	4148280	ReturnType	static BOOLEAN		4148233	1					
ANR	4148281	Identifier	condor_exit		4148233	2					
ANR	4148282	ParameterList	const char * status		4148233	3					
ANR	4148283	Parameter	const char * status	678:13:18987:19004	4148233	0	True				
ANR	4148284	ParameterType	const char *		4148233	0					
ANR	4148285	Identifier	status		4148233	1					
ANR	4148286	CFGEntryNode	ENTRY		4148233		True				
ANR	4148287	CFGExitNode	EXIT		4148233		True				
ANR	4148288	Symbol	st		4148233						
ANR	4148289	Symbol	* extra		4148233						
ANR	4148290	Symbol	strtol		4148233						
ANR	4148291	Symbol	extra		4148233						
ANR	4148292	Symbol	& extra		4148233						
ANR	4148293	Symbol	TRUE		4148233						
ANR	4148294	Symbol	FALSE		4148233						
ANR	4148295	Symbol	D_FULLDEBUG		4148233						
ANR	4148296	Symbol	status		4148233						
ANR	4148297	Function	open_ckpt_file	698:0:19378:19708							
ANR	4148298	FunctionDef	"open_ckpt_file (const char * name , int flags , size_t n_bytes)"		4148297	0					
ANR	4148299	CompoundStatement		700:0:19444:19708	4148297	0					
ANR	4148300	IfStatement	if ( ! do_remote_syscalls )		4148297	0					
ANR	4148301	Condition	! do_remote_syscalls	701:5:19451:19469	4148297	0	True				
ANR	4148302	UnaryOperationExpression	! do_remote_syscalls		4148297	0					
ANR	4148303	UnaryOperator	!		4148297	0					
ANR	4148304	Identifier	do_remote_syscalls		4148297	1					
ANR	4148305	CompoundStatement		2:27:28:28	4148297	1					
ANR	4148306	IfStatement	if ( flags & O_WRONLY )		4148297	0					
ANR	4148307	Condition	flags & O_WRONLY	702:6:19481:19496	4148297	0	True				
ANR	4148308	BitAndExpression	flags & O_WRONLY		4148297	0		&			
ANR	4148309	Identifier	flags		4148297	0					
ANR	4148310	Identifier	O_WRONLY		4148297	1					
ANR	4148311	CompoundStatement		3:25:55:55	4148297	1					
ANR	4148312	ReturnStatement	"return safe_open_wrapper ( name , O_CREAT | O_TRUNC | O_WRONLY , 0664 ) ;"	703:3:19505:19573	4148297	0	True				
ANR	4148313	CallExpression	"safe_open_wrapper ( name , O_CREAT | O_TRUNC | O_WRONLY , 0664 )"		4148297	0					
ANR	4148314	Callee	safe_open_wrapper		4148297	0					
ANR	4148315	Identifier	safe_open_wrapper		4148297	0					
ANR	4148316	ArgumentList	name		4148297	1					
ANR	4148317	Argument	name		4148297	0					
ANR	4148318	Identifier	name		4148297	0					
ANR	4148319	Argument	O_CREAT | O_TRUNC | O_WRONLY		4148297	1					
ANR	4148320	InclusiveOrExpression	O_CREAT | O_TRUNC | O_WRONLY		4148297	0		|			
ANR	4148321	Identifier	O_CREAT		4148297	0					
ANR	4148322	InclusiveOrExpression	O_TRUNC | O_WRONLY		4148297	1		|			
ANR	4148323	Identifier	O_TRUNC		4148297	0					
ANR	4148324	Identifier	O_WRONLY		4148297	1					
ANR	4148325	Argument	0664		4148297	2					
ANR	4148326	PrimaryExpression	0664		4148297	0					
ANR	4148327	ElseStatement	else		4148297	0					
ANR	4148328	CompoundStatement		5:9:139:139	4148297	0					
ANR	4148329	ReturnStatement	"return safe_open_wrapper ( name , O_RDONLY , 0600 ) ;"	705:3:19589:19637	4148297	0	True				
ANR	4148330	CallExpression	"safe_open_wrapper ( name , O_RDONLY , 0600 )"		4148297	0					
ANR	4148331	Callee	safe_open_wrapper		4148297	0					
ANR	4148332	Identifier	safe_open_wrapper		4148297	0					
ANR	4148333	ArgumentList	name		4148297	1					
ANR	4148334	Argument	name		4148297	0					
ANR	4148335	Identifier	name		4148297	0					
ANR	4148336	Argument	O_RDONLY		4148297	1					
ANR	4148337	Identifier	O_RDONLY		4148297	0					
ANR	4148338	Argument	0600		4148297	2					
ANR	4148339	PrimaryExpression	0600		4148297	0					
ANR	4148340	ElseStatement	else		4148297	0					
ANR	4148341	CompoundStatement		8:8:206:206	4148297	0					
ANR	4148342	ReturnStatement	"return open_file_stream ( name , flags , & n_bytes ) ;"	708:2:19655:19703	4148297	0	True				
ANR	4148343	CallExpression	"open_file_stream ( name , flags , & n_bytes )"		4148297	0					
ANR	4148344	Callee	open_file_stream		4148297	0					
ANR	4148345	Identifier	open_file_stream		4148297	0					
ANR	4148346	ArgumentList	name		4148297	1					
ANR	4148347	Argument	name		4148297	0					
ANR	4148348	Identifier	name		4148297	0					
ANR	4148349	Argument	flags		4148297	1					
ANR	4148350	Identifier	flags		4148297	0					
ANR	4148351	Argument	& n_bytes		4148297	2					
ANR	4148352	UnaryOperationExpression	& n_bytes		4148297	0					
ANR	4148353	UnaryOperator	&		4148297	0					
ANR	4148354	Identifier	n_bytes		4148297	1					
ANR	4148355	ReturnType	int		4148297	1					
ANR	4148356	Identifier	open_ckpt_file		4148297	2					
ANR	4148357	ParameterList	"const char * name , int flags , size_t n_bytes"		4148297	3					
ANR	4148358	Parameter	const char * name	699:16:19398:19413	4148297	0	True				
ANR	4148359	ParameterType	const char *		4148297	0					
ANR	4148360	Identifier	name		4148297	1					
ANR	4148361	Parameter	int flags	699:34:19416:19424	4148297	1	True				
ANR	4148362	ParameterType	int		4148297	0					
ANR	4148363	Identifier	flags		4148297	1					
ANR	4148364	Parameter	size_t n_bytes	699:45:19427:19440	4148297	2	True				
ANR	4148365	ParameterType	size_t		4148297	0					
ANR	4148366	Identifier	n_bytes		4148297	1					
ANR	4148367	CFGEntryNode	ENTRY		4148297		True				
ANR	4148368	CFGExitNode	EXIT		4148297		True				
ANR	4148369	Symbol	O_TRUNC		4148297						
ANR	4148370	Symbol	O_RDONLY		4148297						
ANR	4148371	Symbol	& n_bytes		4148297						
ANR	4148372	Symbol	O_CREAT		4148297						
ANR	4148373	Symbol	name		4148297						
ANR	4148374	Symbol	flags		4148297						
ANR	4148375	Symbol	O_WRONLY		4148297						
ANR	4148376	Symbol	n_bytes		4148297						
ANR	4148377	Symbol	open_file_stream		4148297						
ANR	4148378	Symbol	do_remote_syscalls		4148297						
ANR	4148379	Symbol	safe_open_wrapper		4148297						
ANR	4148380	Function	report_image_size	712:0:19711:19840							
ANR	4148381	FunctionDef	report_image_size (int kbytes)		4148380	0					
ANR	4148382	CompoundStatement		714:0:19748:19840	4148380	0					
ANR	4148383	IfStatement	if ( ! do_remote_syscalls )		4148380	0					
ANR	4148384	Condition	! do_remote_syscalls	715:5:19755:19773	4148380	0	True				
ANR	4148385	UnaryOperationExpression	! do_remote_syscalls		4148380	0					
ANR	4148386	UnaryOperator	!		4148380	0					
ANR	4148387	Identifier	do_remote_syscalls		4148380	1					
ANR	4148388	CompoundStatement		2:27:28:28	4148380	1					
ANR	4148389	ReturnStatement	return ;	716:2:19781:19787	4148380	0	True				
ANR	4148390	ElseStatement	else		4148380	0					
ANR	4148391	CompoundStatement		4:8:48:48	4148380	0					
ANR	4148392	ExpressionStatement	REMOTE_CONDOR_image_size ( kbytes )	718:2:19801:19835	4148380	0	True				
ANR	4148393	CallExpression	REMOTE_CONDOR_image_size ( kbytes )		4148380	0					
ANR	4148394	Callee	REMOTE_CONDOR_image_size		4148380	0					
ANR	4148395	Identifier	REMOTE_CONDOR_image_size		4148380	0					
ANR	4148396	ArgumentList	kbytes		4148380	1					
ANR	4148397	Argument	kbytes		4148380	0					
ANR	4148398	Identifier	kbytes		4148380	0					
ANR	4148399	ReturnType	void		4148380	1					
ANR	4148400	Identifier	report_image_size		4148380	2					
ANR	4148401	ParameterList	int kbytes		4148380	3					
ANR	4148402	Parameter	int kbytes	713:19:19735:19744	4148380	0	True				
ANR	4148403	ParameterType	int		4148380	0					
ANR	4148404	Identifier	kbytes		4148380	1					
ANR	4148405	CFGEntryNode	ENTRY		4148380		True				
ANR	4148406	CFGExitNode	EXIT		4148380		True				
ANR	4148407	Symbol	kbytes		4148380						
ANR	4148408	Symbol	do_remote_syscalls		4148380						
ANR	4148409	Function	get_ckpt_mode	731:0:20317:20447							
ANR	4148410	FunctionDef	get_ckpt_mode (int sig)		4148409	0					
ANR	4148411	CompoundStatement		733:0:20346:20447	4148409	0					
ANR	4148412	IfStatement	if ( ! do_remote_syscalls )		4148409	0					
ANR	4148413	Condition	! do_remote_syscalls	734:5:20353:20371	4148409	0	True				
ANR	4148414	UnaryOperationExpression	! do_remote_syscalls		4148409	0					
ANR	4148415	UnaryOperator	!		4148409	0					
ANR	4148416	Identifier	do_remote_syscalls		4148409	1					
ANR	4148417	CompoundStatement		2:27:28:28	4148409	1					
ANR	4148418	ReturnStatement	return 0 ;	735:2:20379:20387	4148409	0	True				
ANR	4148419	PrimaryExpression	0		4148409	0					
ANR	4148420	ElseStatement	else		4148409	0					
ANR	4148421	CompoundStatement		4:8:50:50	4148409	0					
ANR	4148422	ReturnStatement	return REMOTE_CONDOR_get_ckpt_mode ( sig ) ;	737:2:20401:20442	4148409	0	True				
ANR	4148423	CallExpression	REMOTE_CONDOR_get_ckpt_mode ( sig )		4148409	0					
ANR	4148424	Callee	REMOTE_CONDOR_get_ckpt_mode		4148409	0					
ANR	4148425	Identifier	REMOTE_CONDOR_get_ckpt_mode		4148409	0					
ANR	4148426	ArgumentList	sig		4148409	1					
ANR	4148427	Argument	sig		4148409	0					
ANR	4148428	Identifier	sig		4148409	0					
ANR	4148429	ReturnType	int		4148409	1					
ANR	4148430	Identifier	get_ckpt_mode		4148409	2					
ANR	4148431	ParameterList	int sig		4148409	3					
ANR	4148432	Parameter	int sig	732:15:20336:20342	4148409	0	True				
ANR	4148433	ParameterType	int		4148409	0					
ANR	4148434	Identifier	sig		4148409	1					
ANR	4148435	CFGEntryNode	ENTRY		4148409		True				
ANR	4148436	CFGExitNode	EXIT		4148409		True				
ANR	4148437	Symbol	sig		4148409						
ANR	4148438	Symbol	REMOTE_CONDOR_get_ckpt_mode		4148409						
ANR	4148439	Symbol	do_remote_syscalls		4148409						
ANR	4148440	Function	get_ckpt_speed	745:0:20582:20701							
ANR	4148441	FunctionDef	get_ckpt_speed ()		4148440	0					
ANR	4148442	CompoundStatement		747:0:20603:20701	4148440	0					
ANR	4148443	IfStatement	if ( ! do_remote_syscalls )		4148440	0					
ANR	4148444	Condition	! do_remote_syscalls	748:5:20610:20628	4148440	0	True				
ANR	4148445	UnaryOperationExpression	! do_remote_syscalls		4148440	0					
ANR	4148446	UnaryOperator	!		4148440	0					
ANR	4148447	Identifier	do_remote_syscalls		4148440	1					
ANR	4148448	CompoundStatement		2:27:28:28	4148440	1					
ANR	4148449	ReturnStatement	return 0 ;	749:2:20636:20644	4148440	0	True				
ANR	4148450	PrimaryExpression	0		4148440	0					
ANR	4148451	ElseStatement	else		4148440	0					
ANR	4148452	CompoundStatement		4:8:50:50	4148440	0					
ANR	4148453	ReturnStatement	return REMOTE_CONDOR_get_ckpt_speed ( ) ;	751:2:20658:20696	4148440	0	True				
ANR	4148454	CallExpression	REMOTE_CONDOR_get_ckpt_speed ( )		4148440	0					
ANR	4148455	Callee	REMOTE_CONDOR_get_ckpt_speed		4148440	0					
ANR	4148456	Identifier	REMOTE_CONDOR_get_ckpt_speed		4148440	0					
ANR	4148457	ArgumentList			4148440	1					
ANR	4148458	ReturnType	int		4148440	1					
ANR	4148459	Identifier	get_ckpt_speed		4148440	2					
ANR	4148460	ParameterList			4148440	3					
ANR	4148461	CFGEntryNode	ENTRY		4148440		True				
ANR	4148462	CFGExitNode	EXIT		4148440		True				
ANR	4148463	Symbol	do_remote_syscalls		4148440						
ANR	4148464	Symbol	REMOTE_CONDOR_get_ckpt_speed		4148440						
ANR	4148465	Function	_set_priv	760:0:20864:20893							
ANR	4148466	FunctionDef	_set_priv ()		4148465	0					
ANR	4148467	CompoundStatement		762:0:20880:20893	4148465	0					
ANR	4148468	ReturnStatement	return 0 ;	763:1:20883:20891	4148465	0	True				
ANR	4148469	PrimaryExpression	0		4148465	0					
ANR	4148470	ReturnType	int		4148465	1					
ANR	4148471	Identifier	_set_priv		4148465	2					
ANR	4148472	ParameterList			4148465	3					
ANR	4148473	CFGEntryNode	ENTRY		4148465		True				
ANR	4148474	CFGExitNode	EXIT		4148465		True				
ANR	4148475	Function	display_ip_addr	772:0:21075:21434							
ANR	4148476	FunctionDef	display_ip_addr (unsigned int addr)		4148475	0					
ANR	4148477	CompoundStatement		774:0:21117:21434	4148475	0					
ANR	4148478	IdentifierDeclStatement	int net_part ;	775:1:21120:21133	4148475	0	True				
ANR	4148479	IdentifierDecl	net_part		4148475	0					
ANR	4148480	IdentifierDeclType	int		4148475	0					
ANR	4148481	Identifier	net_part		4148475	1					
ANR	4148482	IdentifierDeclStatement	int host_part ;	776:1:21136:21150	4148475	1	True				
ANR	4148483	IdentifierDecl	host_part		4148475	0					
ANR	4148484	IdentifierDeclType	int		4148475	0					
ANR	4148485	Identifier	host_part		4148475	1					
ANR	4148486	IfStatement	if ( IN_CLASSB ( addr ) )		4148475	2					
ANR	4148487	Condition	IN_CLASSB ( addr )	778:5:21158:21172	4148475	0	True				
ANR	4148488	CallExpression	IN_CLASSB ( addr )		4148475	0					
ANR	4148489	Callee	IN_CLASSB		4148475	0					
ANR	4148490	Identifier	IN_CLASSB		4148475	0					
ANR	4148491	ArgumentList	addr		4148475	1					
ANR	4148492	Argument	addr		4148475	0					
ANR	4148493	Identifier	addr		4148475	0					
ANR	4148494	CompoundStatement		5:23:58:58	4148475	1					
ANR	4148495	ExpressionStatement	net_part = B_NET ( addr )	779:2:21180:21202	4148475	0	True				
ANR	4148496	AssignmentExpression	net_part = B_NET ( addr )		4148475	0		=			
ANR	4148497	Identifier	net_part		4148475	0					
ANR	4148498	CallExpression	B_NET ( addr )		4148475	1					
ANR	4148499	Callee	B_NET		4148475	0					
ANR	4148500	Identifier	B_NET		4148475	0					
ANR	4148501	ArgumentList	addr		4148475	1					
ANR	4148502	Argument	addr		4148475	0					
ANR	4148503	Identifier	addr		4148475	0					
ANR	4148504	ExpressionStatement	host_part = B_HOST ( addr )	780:2:21206:21230	4148475	1	True				
ANR	4148505	AssignmentExpression	host_part = B_HOST ( addr )		4148475	0		=			
ANR	4148506	Identifier	host_part		4148475	0					
ANR	4148507	CallExpression	B_HOST ( addr )		4148475	1					
ANR	4148508	Callee	B_HOST		4148475	0					
ANR	4148509	Identifier	B_HOST		4148475	0					
ANR	4148510	ArgumentList	addr		4148475	1					
ANR	4148511	Argument	addr		4148475	0					
ANR	4148512	Identifier	addr		4148475	0					
ANR	4148513	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%ld.%ld"" , HI ( B_NET ( addr ) ) , LO ( B_NET ( addr ) ) )"	781:2:21234:21301	4148475	2	True				
ANR	4148514	CallExpression	"dprintf ( D_FULLDEBUG , ""%ld.%ld"" , HI ( B_NET ( addr ) ) , LO ( B_NET ( addr ) ) )"		4148475	0					
ANR	4148515	Callee	dprintf		4148475	0					
ANR	4148516	Identifier	dprintf		4148475	0					
ANR	4148517	ArgumentList	D_FULLDEBUG		4148475	1					
ANR	4148518	Argument	D_FULLDEBUG		4148475	0					
ANR	4148519	Identifier	D_FULLDEBUG		4148475	0					
ANR	4148520	Argument	"""%ld.%ld"""		4148475	1					
ANR	4148521	PrimaryExpression	"""%ld.%ld"""		4148475	0					
ANR	4148522	Argument	HI ( B_NET ( addr ) )		4148475	2					
ANR	4148523	CallExpression	HI ( B_NET ( addr ) )		4148475	0					
ANR	4148524	Callee	HI		4148475	0					
ANR	4148525	Identifier	HI		4148475	0					
ANR	4148526	ArgumentList	B_NET ( addr )		4148475	1					
ANR	4148527	Argument	B_NET ( addr )		4148475	0					
ANR	4148528	CallExpression	B_NET ( addr )		4148475	0					
ANR	4148529	Callee	B_NET		4148475	0					
ANR	4148530	Identifier	B_NET		4148475	0					
ANR	4148531	ArgumentList	addr		4148475	1					
ANR	4148532	Argument	addr		4148475	0					
ANR	4148533	Identifier	addr		4148475	0					
ANR	4148534	Argument	LO ( B_NET ( addr ) )		4148475	3					
ANR	4148535	CallExpression	LO ( B_NET ( addr ) )		4148475	0					
ANR	4148536	Callee	LO		4148475	0					
ANR	4148537	Identifier	LO		4148475	0					
ANR	4148538	ArgumentList	B_NET ( addr )		4148475	1					
ANR	4148539	Argument	B_NET ( addr )		4148475	0					
ANR	4148540	CallExpression	B_NET ( addr )		4148475	0					
ANR	4148541	Callee	B_NET		4148475	0					
ANR	4148542	Identifier	B_NET		4148475	0					
ANR	4148543	ArgumentList	addr		4148475	1					
ANR	4148544	Argument	addr		4148475	0					
ANR	4148545	Identifier	addr		4148475	0					
ANR	4148546	ExpressionStatement	"dprintf ( D_FULLDEBUG , "".%ld.%ld\\n"" , HI ( B_HOST ( addr ) ) , LO ( B_HOST ( addr ) ) )"	782:2:21305:21377	4148475	3	True				
ANR	4148547	CallExpression	"dprintf ( D_FULLDEBUG , "".%ld.%ld\\n"" , HI ( B_HOST ( addr ) ) , LO ( B_HOST ( addr ) ) )"		4148475	0					
ANR	4148548	Callee	dprintf		4148475	0					
ANR	4148549	Identifier	dprintf		4148475	0					
ANR	4148550	ArgumentList	D_FULLDEBUG		4148475	1					
ANR	4148551	Argument	D_FULLDEBUG		4148475	0					
ANR	4148552	Identifier	D_FULLDEBUG		4148475	0					
ANR	4148553	Argument	""".%ld.%ld\\n"""		4148475	1					
ANR	4148554	PrimaryExpression	""".%ld.%ld\\n"""		4148475	0					
ANR	4148555	Argument	HI ( B_HOST ( addr ) )		4148475	2					
ANR	4148556	CallExpression	HI ( B_HOST ( addr ) )		4148475	0					
ANR	4148557	Callee	HI		4148475	0					
ANR	4148558	Identifier	HI		4148475	0					
ANR	4148559	ArgumentList	B_HOST ( addr )		4148475	1					
ANR	4148560	Argument	B_HOST ( addr )		4148475	0					
ANR	4148561	CallExpression	B_HOST ( addr )		4148475	0					
ANR	4148562	Callee	B_HOST		4148475	0					
ANR	4148563	Identifier	B_HOST		4148475	0					
ANR	4148564	ArgumentList	addr		4148475	1					
ANR	4148565	Argument	addr		4148475	0					
ANR	4148566	Identifier	addr		4148475	0					
ANR	4148567	Argument	LO ( B_HOST ( addr ) )		4148475	3					
ANR	4148568	CallExpression	LO ( B_HOST ( addr ) )		4148475	0					
ANR	4148569	Callee	LO		4148475	0					
ANR	4148570	Identifier	LO		4148475	0					
ANR	4148571	ArgumentList	B_HOST ( addr )		4148475	1					
ANR	4148572	Argument	B_HOST ( addr )		4148475	0					
ANR	4148573	CallExpression	B_HOST ( addr )		4148475	0					
ANR	4148574	Callee	B_HOST		4148475	0					
ANR	4148575	Identifier	B_HOST		4148475	0					
ANR	4148576	ArgumentList	addr		4148475	1					
ANR	4148577	Argument	addr		4148475	0					
ANR	4148578	Identifier	addr		4148475	0					
ANR	4148579	ElseStatement	else		4148475	0					
ANR	4148580	CompoundStatement		10:8:269:269	4148475	0					
ANR	4148581	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""0x%x\\n"" , addr )"	784:2:21391:21429	4148475	0	True				
ANR	4148582	CallExpression	"dprintf ( D_FULLDEBUG , ""0x%x\\n"" , addr )"		4148475	0					
ANR	4148583	Callee	dprintf		4148475	0					
ANR	4148584	Identifier	dprintf		4148475	0					
ANR	4148585	ArgumentList	D_FULLDEBUG		4148475	1					
ANR	4148586	Argument	D_FULLDEBUG		4148475	0					
ANR	4148587	Identifier	D_FULLDEBUG		4148475	0					
ANR	4148588	Argument	"""0x%x\\n"""		4148475	1					
ANR	4148589	PrimaryExpression	"""0x%x\\n"""		4148475	0					
ANR	4148590	Argument	addr		4148475	2					
ANR	4148591	Identifier	addr		4148475	0					
ANR	4148592	ReturnType	void		4148475	1					
ANR	4148593	Identifier	display_ip_addr		4148475	2					
ANR	4148594	ParameterList	unsigned int addr		4148475	3					
ANR	4148595	Parameter	unsigned int addr	773:17:21097:21113	4148475	0	True				
ANR	4148596	ParameterType	unsigned int		4148475	0					
ANR	4148597	Identifier	addr		4148475	1					
ANR	4148598	CFGEntryNode	ENTRY		4148475		True				
ANR	4148599	CFGExitNode	EXIT		4148475		True				
ANR	4148600	Symbol	HI		4148475						
ANR	4148601	Symbol	net_part		4148475						
ANR	4148602	Symbol	LO		4148475						
ANR	4148603	Symbol	IN_CLASSB		4148475						
ANR	4148604	Symbol	host_part		4148475						
ANR	4148605	Symbol	B_HOST		4148475						
ANR	4148606	Symbol	D_FULLDEBUG		4148475						
ANR	4148607	Symbol	addr		4148475						
ANR	4148608	Symbol	B_NET		4148475						
ANR	4148609	Function	open_std_files	792:0:21479:22332							
ANR	4148610	FunctionDef	open_std_files ()		4148609	0					
ANR	4148611	CompoundStatement		794:0:21501:22332	4148609	0					
ANR	4148612	IdentifierDeclStatement	char * logical_name [ 3 ] ;	795:1:21504:21525	4148609	0	True				
ANR	4148613	IdentifierDecl	* logical_name [ 3 ]		4148609	0					
ANR	4148614	IdentifierDeclType	char * [ 3 ]		4148609	0					
ANR	4148615	Identifier	logical_name		4148609	1					
ANR	4148616	PrimaryExpression	3		4148609	2					
ANR	4148617	IdentifierDeclStatement	int result ;	796:1:21528:21538	4148609	1	True				
ANR	4148618	IdentifierDecl	result		4148609	0					
ANR	4148619	IdentifierDeclType	int		4148609	0					
ANR	4148620	Identifier	result		4148609	1					
ANR	4148621	IdentifierDeclStatement	int new_fd ;	797:1:21541:21551	4148609	2	True				
ANR	4148622	IdentifierDecl	new_fd		4148609	0					
ANR	4148623	IdentifierDeclType	int		4148609	0					
ANR	4148624	Identifier	new_fd		4148609	1					
ANR	4148625	IdentifierDeclStatement	int flags ;	798:1:21554:21563	4148609	3	True				
ANR	4148626	IdentifierDecl	flags		4148609	0					
ANR	4148627	IdentifierDeclType	int		4148609	0					
ANR	4148628	Identifier	flags		4148609	1					
ANR	4148629	IdentifierDeclStatement	int fd ;	799:1:21566:21572	4148609	4	True				
ANR	4148630	IdentifierDecl	fd		4148609	0					
ANR	4148631	IdentifierDeclType	int		4148609	0					
ANR	4148632	Identifier	fd		4148609	1					
ANR	4148633	ForStatement	for ( fd = 0 ; fd < 3 ; fd ++ )		4148609	5					
ANR	4148634	ForInit	fd = 0 ;	801:6:21581:21585	4148609	0	True				
ANR	4148635	AssignmentExpression	fd = 0		4148609	0		=			
ANR	4148636	Identifier	fd		4148609	0					
ANR	4148637	PrimaryExpression	0		4148609	1					
ANR	4148638	Condition	fd < 3	801:12:21587:21590	4148609	1	True				
ANR	4148639	RelationalExpression	fd < 3		4148609	0		<			
ANR	4148640	Identifier	fd		4148609	0					
ANR	4148641	PrimaryExpression	3		4148609	1					
ANR	4148642	PostIncDecOperationExpression	fd ++	801:18:21593:21596	4148609	2	True				
ANR	4148643	Identifier	fd		4148609	0					
ANR	4148644	IncDec	++		4148609	1					
ANR	4148645	CompoundStatement		8:25:98:98	4148609	3					
ANR	4148646	ExpressionStatement	logical_name [ fd ] = NULL	802:2:21604:21627	4148609	0	True				
ANR	4148647	AssignmentExpression	logical_name [ fd ] = NULL		4148609	0		=			
ANR	4148648	ArrayIndexing	logical_name [ fd ]		4148609	0					
ANR	4148649	Identifier	logical_name		4148609	0					
ANR	4148650	Identifier	fd		4148609	1					
ANR	4148651	Identifier	NULL		4148609	1					
ANR	4148652	ExpressionStatement	"result = REMOTE_CONDOR_get_std_file_info ( fd , & logical_name [ fd ] )"	803:2:21631:21693	4148609	1	True				
ANR	4148653	AssignmentExpression	"result = REMOTE_CONDOR_get_std_file_info ( fd , & logical_name [ fd ] )"		4148609	0		=			
ANR	4148654	Identifier	result		4148609	0					
ANR	4148655	CallExpression	"REMOTE_CONDOR_get_std_file_info ( fd , & logical_name [ fd ] )"		4148609	1					
ANR	4148656	Callee	REMOTE_CONDOR_get_std_file_info		4148609	0					
ANR	4148657	Identifier	REMOTE_CONDOR_get_std_file_info		4148609	0					
ANR	4148658	ArgumentList	fd		4148609	1					
ANR	4148659	Argument	fd		4148609	0					
ANR	4148660	Identifier	fd		4148609	0					
ANR	4148661	Argument	& logical_name [ fd ]		4148609	1					
ANR	4148662	UnaryOperationExpression	& logical_name [ fd ]		4148609	0					
ANR	4148663	UnaryOperator	&		4148609	0					
ANR	4148664	ArrayIndexing	logical_name [ fd ]		4148609	1					
ANR	4148665	Identifier	logical_name		4148609	0					
ANR	4148666	Identifier	fd		4148609	1					
ANR	4148667	IfStatement	if ( result != 0 )		4148609	2					
ANR	4148668	Condition	result != 0	804:5:21700:21708	4148609	0	True				
ANR	4148669	EqualityExpression	result != 0		4148609	0		!=			
ANR	4148670	Identifier	result		4148609	0					
ANR	4148671	PrimaryExpression	0		4148609	1					
ANR	4148672	ExpressionStatement	"_condor_error_fatal ( ""Couldn't get info on standard file %d"" , fd )"	804:16:21711:21775	4148609	1	True				
ANR	4148673	CallExpression	"_condor_error_fatal ( ""Couldn't get info on standard file %d"" , fd )"		4148609	0					
ANR	4148674	Callee	_condor_error_fatal		4148609	0					
ANR	4148675	Identifier	_condor_error_fatal		4148609	0					
ANR	4148676	ArgumentList	"""Couldn't get info on standard file %d"""		4148609	1					
ANR	4148677	Argument	"""Couldn't get info on standard file %d"""		4148609	0					
ANR	4148678	PrimaryExpression	"""Couldn't get info on standard file %d"""		4148609	0					
ANR	4148679	Argument	fd		4148609	1					
ANR	4148680	Identifier	fd		4148609	0					
ANR	4148681	ExpressionStatement	close ( fd )	806:2:21780:21789	4148609	3	True				
ANR	4148682	CallExpression	close ( fd )		4148609	0					
ANR	4148683	Callee	close		4148609	0					
ANR	4148684	Identifier	close		4148609	0					
ANR	4148685	ArgumentList	fd		4148609	1					
ANR	4148686	Argument	fd		4148609	0					
ANR	4148687	Identifier	fd		4148609	0					
ANR	4148688	IfStatement	"if ( ( fd == 2 ) && ! strcmp ( logical_name [ 1 ] , logical_name [ 2 ] ) )"		4148609	4					
ANR	4148689	Condition	"( fd == 2 ) && ! strcmp ( logical_name [ 1 ] , logical_name [ 2 ] )"	811:6:21881:21934	4148609	0	True				
ANR	4148690	AndExpression	"( fd == 2 ) && ! strcmp ( logical_name [ 1 ] , logical_name [ 2 ] )"		4148609	0		&&			
ANR	4148691	EqualityExpression	fd == 2		4148609	0		==			
ANR	4148692	Identifier	fd		4148609	0					
ANR	4148693	PrimaryExpression	2		4148609	1					
ANR	4148694	UnaryOperationExpression	"! strcmp ( logical_name [ 1 ] , logical_name [ 2 ] )"		4148609	1					
ANR	4148695	UnaryOperator	!		4148609	0					
ANR	4148696	CallExpression	"strcmp ( logical_name [ 1 ] , logical_name [ 2 ] )"		4148609	1					
ANR	4148697	Callee	strcmp		4148609	0					
ANR	4148698	Identifier	strcmp		4148609	0					
ANR	4148699	ArgumentList	logical_name [ 1 ]		4148609	1					
ANR	4148700	Argument	logical_name [ 1 ]		4148609	0					
ANR	4148701	ArrayIndexing	logical_name [ 1 ]		4148609	0					
ANR	4148702	Identifier	logical_name		4148609	0					
ANR	4148703	PrimaryExpression	1		4148609	1					
ANR	4148704	Argument	logical_name [ 2 ]		4148609	1					
ANR	4148705	ArrayIndexing	logical_name [ 2 ]		4148609	0					
ANR	4148706	Identifier	logical_name		4148609	0					
ANR	4148707	PrimaryExpression	2		4148609	1					
ANR	4148708	CompoundStatement		18:63:436:436	4148609	1					
ANR	4148709	ExpressionStatement	"dup2 ( 1 , 2 )"	812:3:21943:21952	4148609	0	True				
ANR	4148710	CallExpression	"dup2 ( 1 , 2 )"		4148609	0					
ANR	4148711	Callee	dup2		4148609	0					
ANR	4148712	Identifier	dup2		4148609	0					
ANR	4148713	ArgumentList	1		4148609	1					
ANR	4148714	Argument	1		4148609	0					
ANR	4148715	PrimaryExpression	1		4148609	0					
ANR	4148716	Argument	2		4148609	1					
ANR	4148717	PrimaryExpression	2		4148609	0					
ANR	4148718	ElseStatement	else		4148609	0					
ANR	4148719	CompoundStatement		20:9:461:461	4148609	0					
ANR	4148720	IfStatement	if ( fd == 0 )		4148609	0					
ANR	4148721	Condition	fd == 0	814:6:21971:21975	4148609	0	True				
ANR	4148722	EqualityExpression	fd == 0		4148609	0		==			
ANR	4148723	Identifier	fd		4148609	0					
ANR	4148724	PrimaryExpression	0		4148609	1					
ANR	4148725	CompoundStatement		21:13:476:476	4148609	1					
ANR	4148726	ExpressionStatement	flags = O_RDONLY	815:4:21984:22000	4148609	0	True				
ANR	4148727	AssignmentExpression	flags = O_RDONLY		4148609	0		=			
ANR	4148728	Identifier	flags		4148609	0					
ANR	4148729	Identifier	O_RDONLY		4148609	1					
ANR	4148730	ElseStatement	else		4148609	0					
ANR	4148731	CompoundStatement		23:10:510:510	4148609	0					
ANR	4148732	ExpressionStatement	flags = O_WRONLY	817:4:22018:22034	4148609	0	True				
ANR	4148733	AssignmentExpression	flags = O_WRONLY		4148609	0		=			
ANR	4148734	Identifier	flags		4148609	0					
ANR	4148735	Identifier	O_WRONLY		4148609	1					
ANR	4148736	ExpressionStatement	"new_fd = safe_open_wrapper ( logical_name [ fd ] , flags , 0 )"	819:3:22044:22096	4148609	1	True				
ANR	4148737	AssignmentExpression	"new_fd = safe_open_wrapper ( logical_name [ fd ] , flags , 0 )"		4148609	0		=			
ANR	4148738	Identifier	new_fd		4148609	0					
ANR	4148739	CallExpression	"safe_open_wrapper ( logical_name [ fd ] , flags , 0 )"		4148609	1					
ANR	4148740	Callee	safe_open_wrapper		4148609	0					
ANR	4148741	Identifier	safe_open_wrapper		4148609	0					
ANR	4148742	ArgumentList	logical_name [ fd ]		4148609	1					
ANR	4148743	Argument	logical_name [ fd ]		4148609	0					
ANR	4148744	ArrayIndexing	logical_name [ fd ]		4148609	0					
ANR	4148745	Identifier	logical_name		4148609	0					
ANR	4148746	Identifier	fd		4148609	1					
ANR	4148747	Argument	flags		4148609	1					
ANR	4148748	Identifier	flags		4148609	0					
ANR	4148749	Argument	0		4148609	2					
ANR	4148750	PrimaryExpression	0		4148609	0					
ANR	4148751	IfStatement	if ( new_fd < 0 )		4148609	2					
ANR	4148752	Condition	new_fd < 0	820:6:22104:22111	4148609	0	True				
ANR	4148753	RelationalExpression	new_fd < 0		4148609	0		<			
ANR	4148754	Identifier	new_fd		4148609	0					
ANR	4148755	PrimaryExpression	0		4148609	1					
ANR	4148756	CompoundStatement		27:16:612:612	4148609	1					
ANR	4148757	ExpressionStatement	"_condor_error_retry ( ""Couldn't open standard file '%s'"" , logical_name [ fd ] )"	821:4:22120:22194	4148609	0	True				
ANR	4148758	CallExpression	"_condor_error_retry ( ""Couldn't open standard file '%s'"" , logical_name [ fd ] )"		4148609	0					
ANR	4148759	Callee	_condor_error_retry		4148609	0					
ANR	4148760	Identifier	_condor_error_retry		4148609	0					
ANR	4148761	ArgumentList	"""Couldn't open standard file '%s'"""		4148609	1					
ANR	4148762	Argument	"""Couldn't open standard file '%s'"""		4148609	0					
ANR	4148763	PrimaryExpression	"""Couldn't open standard file '%s'"""		4148609	0					
ANR	4148764	Argument	logical_name [ fd ]		4148609	1					
ANR	4148765	ArrayIndexing	logical_name [ fd ]		4148609	0					
ANR	4148766	Identifier	logical_name		4148609	0					
ANR	4148767	Identifier	fd		4148609	1					
ANR	4148768	IfStatement	if ( new_fd != fd )		4148609	3					
ANR	4148769	Condition	new_fd != fd	823:6:22207:22216	4148609	0	True				
ANR	4148770	EqualityExpression	new_fd != fd		4148609	0		!=			
ANR	4148771	Identifier	new_fd		4148609	0					
ANR	4148772	Identifier	fd		4148609	1					
ANR	4148773	CompoundStatement		30:18:717:717	4148609	1					
ANR	4148774	ExpressionStatement	"dup2 ( fd , new_fd )"	824:4:22225:22240	4148609	0	True				
ANR	4148775	CallExpression	"dup2 ( fd , new_fd )"		4148609	0					
ANR	4148776	Callee	dup2		4148609	0					
ANR	4148777	Identifier	dup2		4148609	0					
ANR	4148778	ArgumentList	fd		4148609	1					
ANR	4148779	Argument	fd		4148609	0					
ANR	4148780	Identifier	fd		4148609	0					
ANR	4148781	Argument	new_fd		4148609	1					
ANR	4148782	Identifier	new_fd		4148609	0					
ANR	4148783	ExpressionStatement	free ( logical_name [ 0 ] )	828:1:22255:22278	4148609	6	True				
ANR	4148784	CallExpression	free ( logical_name [ 0 ] )		4148609	0					
ANR	4148785	Callee	free		4148609	0					
ANR	4148786	Identifier	free		4148609	0					
ANR	4148787	ArgumentList	logical_name [ 0 ]		4148609	1					
ANR	4148788	Argument	logical_name [ 0 ]		4148609	0					
ANR	4148789	ArrayIndexing	logical_name [ 0 ]		4148609	0					
ANR	4148790	Identifier	logical_name		4148609	0					
ANR	4148791	PrimaryExpression	0		4148609	1					
ANR	4148792	ExpressionStatement	free ( logical_name [ 1 ] )	829:1:22281:22304	4148609	7	True				
ANR	4148793	CallExpression	free ( logical_name [ 1 ] )		4148609	0					
ANR	4148794	Callee	free		4148609	0					
ANR	4148795	Identifier	free		4148609	0					
ANR	4148796	ArgumentList	logical_name [ 1 ]		4148609	1					
ANR	4148797	Argument	logical_name [ 1 ]		4148609	0					
ANR	4148798	ArrayIndexing	logical_name [ 1 ]		4148609	0					
ANR	4148799	Identifier	logical_name		4148609	0					
ANR	4148800	PrimaryExpression	1		4148609	1					
ANR	4148801	ExpressionStatement	free ( logical_name [ 2 ] )	830:1:22307:22330	4148609	8	True				
ANR	4148802	CallExpression	free ( logical_name [ 2 ] )		4148609	0					
ANR	4148803	Callee	free		4148609	0					
ANR	4148804	Identifier	free		4148609	0					
ANR	4148805	ArgumentList	logical_name [ 2 ]		4148609	1					
ANR	4148806	Argument	logical_name [ 2 ]		4148609	0					
ANR	4148807	ArrayIndexing	logical_name [ 2 ]		4148609	0					
ANR	4148808	Identifier	logical_name		4148609	0					
ANR	4148809	PrimaryExpression	2		4148609	1					
ANR	4148810	ReturnType	void		4148609	1					
ANR	4148811	Identifier	open_std_files		4148609	2					
ANR	4148812	ParameterList			4148609	3					
ANR	4148813	CFGEntryNode	ENTRY		4148609		True				
ANR	4148814	CFGExitNode	EXIT		4148609		True				
ANR	4148815	Symbol	strcmp		4148609						
ANR	4148816	Symbol	logical_name		4148609						
ANR	4148817	Symbol	NULL		4148609						
ANR	4148818	Symbol	new_fd		4148609						
ANR	4148819	Symbol	* fd		4148609						
ANR	4148820	Symbol	flags		4148609						
ANR	4148821	Symbol	safe_open_wrapper		4148609						
ANR	4148822	Symbol	result		4148609						
ANR	4148823	Symbol	* logical_name		4148609						
ANR	4148824	Symbol	O_RDONLY		4148609						
ANR	4148825	Symbol	REMOTE_CONDOR_get_std_file_info		4148609						
ANR	4148826	Symbol	O_WRONLY		4148609						
ANR	4148827	Symbol	fd		4148609						
ANR	4148828	Function	_condor_set_iwd	833:0:22335:22788							
ANR	4148829	FunctionDef	_condor_set_iwd ()		4148828	0					
ANR	4148830	CompoundStatement		835:0:22358:22788	4148828	0					
ANR	4148831	IdentifierDeclStatement	char * iwd = NULL ;	836:1:22361:22377	4148828	0	True				
ANR	4148832	IdentifierDecl	* iwd = NULL		4148828	0					
ANR	4148833	IdentifierDeclType	char *		4148828	0					
ANR	4148834	Identifier	iwd		4148828	1					
ANR	4148835	AssignmentExpression	* iwd = NULL		4148828	2		=			
ANR	4148836	Identifier	NULL		4148828	0					
ANR	4148837	Identifier	NULL		4148828	1					
ANR	4148838	IdentifierDeclStatement	int scm ;	837:1:22380:22387	4148828	1	True				
ANR	4148839	IdentifierDecl	scm		4148828	0					
ANR	4148840	IdentifierDeclType	int		4148828	0					
ANR	4148841	Identifier	scm		4148828	1					
ANR	4148842	IdentifierDeclStatement	int result ;	838:1:22390:22400	4148828	2	True				
ANR	4148843	IdentifierDecl	result		4148828	0					
ANR	4148844	IdentifierDeclType	int		4148828	0					
ANR	4148845	Identifier	result		4148828	1					
ANR	4148846	IfStatement	if ( REMOTE_CONDOR_get_iwd ( & iwd ) < 0 )		4148828	3					
ANR	4148847	Condition	REMOTE_CONDOR_get_iwd ( & iwd ) < 0	840:5:22408:22438	4148828	0	True				
ANR	4148848	RelationalExpression	REMOTE_CONDOR_get_iwd ( & iwd ) < 0		4148828	0		<			
ANR	4148849	CallExpression	REMOTE_CONDOR_get_iwd ( & iwd )		4148828	0					
ANR	4148850	Callee	REMOTE_CONDOR_get_iwd		4148828	0					
ANR	4148851	Identifier	REMOTE_CONDOR_get_iwd		4148828	0					
ANR	4148852	ArgumentList	& iwd		4148828	1					
ANR	4148853	Argument	& iwd		4148828	0					
ANR	4148854	UnaryOperationExpression	& iwd		4148828	0					
ANR	4148855	UnaryOperator	&		4148828	0					
ANR	4148856	Identifier	iwd		4148828	1					
ANR	4148857	PrimaryExpression	0		4148828	1					
ANR	4148858	CompoundStatement		6:39:83:83	4148828	1					
ANR	4148859	ExpressionStatement	"_condor_error_fatal ( ""Can't determine initial working directory"" )"	841:2:22446:22512	4148828	0	True				
ANR	4148860	CallExpression	"_condor_error_fatal ( ""Can't determine initial working directory"" )"		4148828	0					
ANR	4148861	Callee	_condor_error_fatal		4148828	0					
ANR	4148862	Identifier	_condor_error_fatal		4148828	0					
ANR	4148863	ArgumentList	"""Can't determine initial working directory"""		4148828	1					
ANR	4148864	Argument	"""Can't determine initial working directory"""		4148828	0					
ANR	4148865	PrimaryExpression	"""Can't determine initial working directory"""		4148828	0					
ANR	4148866	ExpressionStatement	scm = SetSyscalls ( SYS_REMOTE | SYS_MAPPED )	846:1:22603:22645	4148828	4	True				
ANR	4148867	AssignmentExpression	scm = SetSyscalls ( SYS_REMOTE | SYS_MAPPED )		4148828	0		=			
ANR	4148868	Identifier	scm		4148828	0					
ANR	4148869	CallExpression	SetSyscalls ( SYS_REMOTE | SYS_MAPPED )		4148828	1					
ANR	4148870	Callee	SetSyscalls		4148828	0					
ANR	4148871	Identifier	SetSyscalls		4148828	0					
ANR	4148872	ArgumentList	SYS_REMOTE | SYS_MAPPED		4148828	1					
ANR	4148873	Argument	SYS_REMOTE | SYS_MAPPED		4148828	0					
ANR	4148874	InclusiveOrExpression	SYS_REMOTE | SYS_MAPPED		4148828	0		|			
ANR	4148875	Identifier	SYS_REMOTE		4148828	0					
ANR	4148876	Identifier	SYS_MAPPED		4148828	1					
ANR	4148877	ExpressionStatement	result = chdir ( iwd )	847:1:22648:22669	4148828	5	True				
ANR	4148878	AssignmentExpression	result = chdir ( iwd )		4148828	0		=			
ANR	4148879	Identifier	result		4148828	0					
ANR	4148880	CallExpression	chdir ( iwd )		4148828	1					
ANR	4148881	Callee	chdir		4148828	0					
ANR	4148882	Identifier	chdir		4148828	0					
ANR	4148883	ArgumentList	iwd		4148828	1					
ANR	4148884	Argument	iwd		4148828	0					
ANR	4148885	Identifier	iwd		4148828	0					
ANR	4148886	ExpressionStatement	SetSyscalls ( scm )	848:1:22672:22688	4148828	6	True				
ANR	4148887	CallExpression	SetSyscalls ( scm )		4148828	0					
ANR	4148888	Callee	SetSyscalls		4148828	0					
ANR	4148889	Identifier	SetSyscalls		4148828	0					
ANR	4148890	ArgumentList	scm		4148828	1					
ANR	4148891	Argument	scm		4148828	0					
ANR	4148892	Identifier	scm		4148828	0					
ANR	4148893	IfStatement	if ( result < 0 )		4148828	7					
ANR	4148894	Condition	result < 0	850:5:22696:22705	4148828	0	True				
ANR	4148895	RelationalExpression	result < 0		4148828	0		<			
ANR	4148896	Identifier	result		4148828	0					
ANR	4148897	PrimaryExpression	0		4148828	1					
ANR	4148898	CompoundStatement		16:18:350:350	4148828	1					
ANR	4148899	ExpressionStatement	"_condor_error_retry ( ""Can't move to directory %s"" , iwd )"	851:2:22713:22769	4148828	0	True				
ANR	4148900	CallExpression	"_condor_error_retry ( ""Can't move to directory %s"" , iwd )"		4148828	0					
ANR	4148901	Callee	_condor_error_retry		4148828	0					
ANR	4148902	Identifier	_condor_error_retry		4148828	0					
ANR	4148903	ArgumentList	"""Can't move to directory %s"""		4148828	1					
ANR	4148904	Argument	"""Can't move to directory %s"""		4148828	0					
ANR	4148905	PrimaryExpression	"""Can't move to directory %s"""		4148828	0					
ANR	4148906	Argument	iwd		4148828	1					
ANR	4148907	Identifier	iwd		4148828	0					
ANR	4148908	ExpressionStatement	free ( iwd )	853:1:22775:22786	4148828	8	True				
ANR	4148909	CallExpression	free ( iwd )		4148828	0					
ANR	4148910	Callee	free		4148828	0					
ANR	4148911	Identifier	free		4148828	0					
ANR	4148912	ArgumentList	iwd		4148828	1					
ANR	4148913	Argument	iwd		4148828	0					
ANR	4148914	Identifier	iwd		4148828	0					
ANR	4148915	ReturnType	void		4148828	1					
ANR	4148916	Identifier	_condor_set_iwd		4148828	2					
ANR	4148917	ParameterList			4148828	3					
ANR	4148918	CFGEntryNode	ENTRY		4148828		True				
ANR	4148919	CFGExitNode	EXIT		4148828		True				
ANR	4148920	Symbol	result		4148828						
ANR	4148921	Symbol	SYS_REMOTE		4148828						
ANR	4148922	Symbol	NULL		4148828						
ANR	4148923	Symbol	iwd		4148828						
ANR	4148924	Symbol	SetSyscalls		4148828						
ANR	4148925	Symbol	REMOTE_CONDOR_get_iwd		4148828						
ANR	4148926	Symbol	& iwd		4148828						
ANR	4148927	Symbol	chdir		4148828						
ANR	4148928	Symbol	scm		4148828						
ANR	4148929	Symbol	SYS_MAPPED		4148828						
ANR	4148930	Function	get_ckpt_name	856:0:22791:23120							
ANR	4148931	FunctionDef	get_ckpt_name ()		4148930	0					
ANR	4148932	CompoundStatement		858:0:22812:23120	4148930	0					
ANR	4148933	IdentifierDeclStatement	char * ckpt_name = NULL ;	859:1:22815:22837	4148930	0	True				
ANR	4148934	IdentifierDecl	* ckpt_name = NULL		4148930	0					
ANR	4148935	IdentifierDeclType	char *		4148930	0					
ANR	4148936	Identifier	ckpt_name		4148930	1					
ANR	4148937	AssignmentExpression	* ckpt_name = NULL		4148930	2		=			
ANR	4148938	Identifier	NULL		4148930	0					
ANR	4148939	Identifier	NULL		4148930	1					
ANR	4148940	IdentifierDeclStatement	int status ;	860:1:22840:22851	4148930	1	True				
ANR	4148941	IdentifierDecl	status		4148930	0					
ANR	4148942	IdentifierDeclType	int		4148930	0					
ANR	4148943	Identifier	status		4148930	1					
ANR	4148944	ExpressionStatement	status = REMOTE_CONDOR_get_ckpt_name ( & ckpt_name )	862:1:22855:22905	4148930	2	True				
ANR	4148945	AssignmentExpression	status = REMOTE_CONDOR_get_ckpt_name ( & ckpt_name )		4148930	0		=			
ANR	4148946	Identifier	status		4148930	0					
ANR	4148947	CallExpression	REMOTE_CONDOR_get_ckpt_name ( & ckpt_name )		4148930	1					
ANR	4148948	Callee	REMOTE_CONDOR_get_ckpt_name		4148930	0					
ANR	4148949	Identifier	REMOTE_CONDOR_get_ckpt_name		4148930	0					
ANR	4148950	ArgumentList	& ckpt_name		4148930	1					
ANR	4148951	Argument	& ckpt_name		4148930	0					
ANR	4148952	UnaryOperationExpression	& ckpt_name		4148930	0					
ANR	4148953	UnaryOperator	&		4148930	0					
ANR	4148954	Identifier	ckpt_name		4148930	1					
ANR	4148955	IfStatement	if ( status < 0 )		4148930	3					
ANR	4148956	Condition	status < 0	863:5:22912:22921	4148930	0	True				
ANR	4148957	RelationalExpression	status < 0		4148930	0		<			
ANR	4148958	Identifier	status		4148930	0					
ANR	4148959	PrimaryExpression	0		4148930	1					
ANR	4148960	CompoundStatement		6:18:112:112	4148930	1					
ANR	4148961	ExpressionStatement	"_condor_error_fatal ( ""Can't get checkpoint file name!\\n"" )"	864:2:22929:22985	4148930	0	True				
ANR	4148962	CallExpression	"_condor_error_fatal ( ""Can't get checkpoint file name!\\n"" )"		4148930	0					
ANR	4148963	Callee	_condor_error_fatal		4148930	0					
ANR	4148964	Identifier	_condor_error_fatal		4148930	0					
ANR	4148965	ArgumentList	"""Can't get checkpoint file name!\\n"""		4148930	1					
ANR	4148966	Argument	"""Can't get checkpoint file name!\\n"""		4148930	0					
ANR	4148967	PrimaryExpression	"""Can't get checkpoint file name!\\n"""		4148930	0					
ANR	4148968	ExpressionStatement	"dprintf ( D_ALWAYS , ""Checkpoint file name is \\""%s\\""\\n"" , ckpt_name )"	866:1:22991:23057	4148930	4	True				
ANR	4148969	CallExpression	"dprintf ( D_ALWAYS , ""Checkpoint file name is \\""%s\\""\\n"" , ckpt_name )"		4148930	0					
ANR	4148970	Callee	dprintf		4148930	0					
ANR	4148971	Identifier	dprintf		4148930	0					
ANR	4148972	ArgumentList	D_ALWAYS		4148930	1					
ANR	4148973	Argument	D_ALWAYS		4148930	0					
ANR	4148974	Identifier	D_ALWAYS		4148930	0					
ANR	4148975	Argument	"""Checkpoint file name is \\""%s\\""\\n"""		4148930	1					
ANR	4148976	PrimaryExpression	"""Checkpoint file name is \\""%s\\""\\n"""		4148930	0					
ANR	4148977	Argument	ckpt_name		4148930	2					
ANR	4148978	Identifier	ckpt_name		4148930	0					
ANR	4148979	ExpressionStatement	init_image_with_file_name ( ckpt_name )	867:1:23060:23098	4148930	5	True				
ANR	4148980	CallExpression	init_image_with_file_name ( ckpt_name )		4148930	0					
ANR	4148981	Callee	init_image_with_file_name		4148930	0					
ANR	4148982	Identifier	init_image_with_file_name		4148930	0					
ANR	4148983	ArgumentList	ckpt_name		4148930	1					
ANR	4148984	Argument	ckpt_name		4148930	0					
ANR	4148985	Identifier	ckpt_name		4148930	0					
ANR	4148986	ExpressionStatement	free ( ckpt_name )	868:1:23101:23118	4148930	6	True				
ANR	4148987	CallExpression	free ( ckpt_name )		4148930	0					
ANR	4148988	Callee	free		4148930	0					
ANR	4148989	Identifier	free		4148930	0					
ANR	4148990	ArgumentList	ckpt_name		4148930	1					
ANR	4148991	Argument	ckpt_name		4148930	0					
ANR	4148992	Identifier	ckpt_name		4148930	0					
ANR	4148993	ReturnType	void		4148930	1					
ANR	4148994	Identifier	get_ckpt_name		4148930	2					
ANR	4148995	ParameterList			4148930	3					
ANR	4148996	CFGEntryNode	ENTRY		4148930		True				
ANR	4148997	CFGExitNode	EXIT		4148930		True				
ANR	4148998	Symbol	ckpt_name		4148930						
ANR	4148999	Symbol	NULL		4148930						
ANR	4149000	Symbol	D_ALWAYS		4148930						
ANR	4149001	Symbol	& ckpt_name		4148930						
ANR	4149002	Symbol	REMOTE_CONDOR_get_ckpt_name		4148930						
ANR	4149003	Symbol	status		4148930						
ANR	4149004	Function	_condor_setup_dprintf	871:0:23123:23514							
ANR	4149005	FunctionDef	_condor_setup_dprintf ()		4149004	0					
ANR	4149006	CompoundStatement		873:0:23152:23514	4149004	0					
ANR	4149007	IfStatement	if ( ! DebugFlags )		4149004	0					
ANR	4149008	Condition	! DebugFlags	874:5:23159:23170	4149004	0	True				
ANR	4149009	UnaryOperationExpression	! DebugFlags		4149004	0					
ANR	4149010	UnaryOperator	!		4149004	0					
ANR	4149011	Identifier	DebugFlags		4149004	1					
ANR	4149012	CompoundStatement		2:20:21:21	4149004	1					
ANR	4149013	ExpressionStatement	DebugFlags = D_ALWAYS | D_NOHEADER	877:2:23291:23325	4149004	0	True				
ANR	4149014	AssignmentExpression	DebugFlags = D_ALWAYS | D_NOHEADER		4149004	0		=			
ANR	4149015	Identifier	DebugFlags		4149004	0					
ANR	4149016	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		4149004	1		|			
ANR	4149017	Identifier	D_ALWAYS		4149004	0					
ANR	4149018	Identifier	D_NOHEADER		4149004	1					
ANR	4149019	ExpressionStatement	_condor_DebugFD = CLIENT_LOG	882:1:23455:23483	4149004	1	True				
ANR	4149020	AssignmentExpression	_condor_DebugFD = CLIENT_LOG		4149004	0		=			
ANR	4149021	Identifier	_condor_DebugFD		4149004	0					
ANR	4149022	Identifier	CLIENT_LOG		4149004	1					
ANR	4149023	ExpressionStatement	_condor_dprintf_works = 1	884:1:23487:23512	4149004	2	True				
ANR	4149024	AssignmentExpression	_condor_dprintf_works = 1		4149004	0		=			
ANR	4149025	Identifier	_condor_dprintf_works		4149004	0					
ANR	4149026	PrimaryExpression	1		4149004	1					
ANR	4149027	ReturnType	void		4149004	1					
ANR	4149028	Identifier	_condor_setup_dprintf		4149004	2					
ANR	4149029	ParameterList			4149004	3					
ANR	4149030	CFGEntryNode	ENTRY		4149004		True				
ANR	4149031	CFGExitNode	EXIT		4149004		True				
ANR	4149032	Symbol	CLIENT_LOG		4149004						
ANR	4149033	Symbol	D_ALWAYS		4149004						
ANR	4149034	Symbol	_condor_dprintf_works		4149004						
ANR	4149035	Symbol	DebugFlags		4149004						
ANR	4149036	Symbol	_condor_DebugFD		4149004						
ANR	4149037	Symbol	D_NOHEADER		4149004						
