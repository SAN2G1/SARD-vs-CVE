command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4168025	File	data/converged/CVE-2011-4930_htcondor/src_condor_tests_job_ckpt_stack_std.c								
ANR	4168026	ClassDef	Frame	54:0:2290:2569							
ANR	4168027	DeclStmt									
ANR	4168028	Decl							int	int	value
ANR	4168029	DeclStmt									
ANR	4168030	Decl							int	int *	data
ANR	4168031	DeclStmt									
ANR	4168032	Decl							int	int	size
ANR	4168033	DeclStmt									
ANR	4168034	Decl							struct Frame	struct Frame *	previous
ANR	4168035	DeclStmt									
ANR	4168036	Decl							void	"void ( int * data , int size , int value )"	init_data
ANR	4168037	DeclStmt									
ANR	4168038	Decl							int	"int ( struct Frame * pf , int old_value )"	deepen
ANR	4168039	DeclStmt									
ANR	4168040	Decl							int	"int ( struct Frame * f , int value )"	is_stack_valid
ANR	4168041	DeclStmt									
ANR	4168042	Decl							int	"int ( int * data , int size , int value )"	data_valid
ANR	4168043	DeclStmt									
ANR	4168044	Decl							int	int	g_sum
ANR	4168045	Function	main	74:0:2832:3767							
ANR	4168046	FunctionDef	main ()		4168045	0					
ANR	4168047	CompoundStatement		75:0:2847:3767	4168045	0					
ANR	4168048	IdentifierDeclStatement	int data [ STACKINCREMENT ] ;	77:1:2925:2949	4168045	0	True				
ANR	4168049	IdentifierDecl	data [ STACKINCREMENT ]		4168045	0					
ANR	4168050	IdentifierDeclType	int [ STACKINCREMENT ]		4168045	0					
ANR	4168051	Identifier	data		4168045	1					
ANR	4168052	Identifier	STACKINCREMENT		4168045	2					
ANR	4168053	IdentifierDeclStatement	struct Frame f ;	78:1:2952:2966	4168045	1	True				
ANR	4168054	IdentifierDecl	f		4168045	0					
ANR	4168055	IdentifierDeclType	struct Frame		4168045	0					
ANR	4168056	Identifier	f		4168045	1					
ANR	4168057	IdentifierDeclStatement	int validity ;	79:1:2969:2981	4168045	2	True				
ANR	4168058	IdentifierDecl	validity		4168045	0					
ANR	4168059	IdentifierDeclType	int		4168045	0					
ANR	4168060	Identifier	validity		4168045	1					
ANR	4168061	IdentifierDeclStatement	"int a , b , c ;"	80:1:2984:2995	4168045	3	True				
ANR	4168062	IdentifierDecl	a		4168045	0					
ANR	4168063	IdentifierDeclType	int		4168045	0					
ANR	4168064	Identifier	a		4168045	1					
ANR	4168065	IdentifierDecl	b		4168045	1					
ANR	4168066	IdentifierDeclType	int		4168045	0					
ANR	4168067	Identifier	b		4168045	1					
ANR	4168068	IdentifierDecl	c		4168045	2					
ANR	4168069	IdentifierDeclType	int		4168045	0					
ANR	4168070	Identifier	c		4168045	1					
ANR	4168071	ExpressionStatement	"init_data ( data , STACKINCREMENT , 0 )"	82:1:2999:3033	4168045	4	True				
ANR	4168072	CallExpression	"init_data ( data , STACKINCREMENT , 0 )"		4168045	0					
ANR	4168073	Callee	init_data		4168045	0					
ANR	4168074	Identifier	init_data		4168045	0					
ANR	4168075	ArgumentList	data		4168045	1					
ANR	4168076	Argument	data		4168045	0					
ANR	4168077	Identifier	data		4168045	0					
ANR	4168078	Argument	STACKINCREMENT		4168045	1					
ANR	4168079	Identifier	STACKINCREMENT		4168045	0					
ANR	4168080	Argument	0		4168045	2					
ANR	4168081	PrimaryExpression	0		4168045	0					
ANR	4168082	ExpressionStatement	f . value = 0	87:1:3292:3303	4168045	5	True				
ANR	4168083	AssignmentExpression	f . value = 0		4168045	0		=			
ANR	4168084	MemberAccess	f . value		4168045	0					
ANR	4168085	Identifier	f		4168045	0					
ANR	4168086	Identifier	value		4168045	1					
ANR	4168087	PrimaryExpression	0		4168045	1					
ANR	4168088	ExpressionStatement	f . data = & data [ 0 ]	88:1:3307:3324	4168045	6	True				
ANR	4168089	AssignmentExpression	f . data = & data [ 0 ]		4168045	0		=			
ANR	4168090	MemberAccess	f . data		4168045	0					
ANR	4168091	Identifier	f		4168045	0					
ANR	4168092	Identifier	data		4168045	1					
ANR	4168093	UnaryOperationExpression	& data [ 0 ]		4168045	1					
ANR	4168094	UnaryOperator	&		4168045	0					
ANR	4168095	ArrayIndexing	data [ 0 ]		4168045	1					
ANR	4168096	Identifier	data		4168045	0					
ANR	4168097	PrimaryExpression	0		4168045	1					
ANR	4168098	ExpressionStatement	f . size = STACKINCREMENT	89:1:3327:3350	4168045	7	True				
ANR	4168099	AssignmentExpression	f . size = STACKINCREMENT		4168045	0		=			
ANR	4168100	MemberAccess	f . size		4168045	0					
ANR	4168101	Identifier	f		4168045	0					
ANR	4168102	Identifier	size		4168045	1					
ANR	4168103	Identifier	STACKINCREMENT		4168045	1					
ANR	4168104	ExpressionStatement	f . previous = NULL	90:1:3353:3370	4168045	8	True				
ANR	4168105	AssignmentExpression	f . previous = NULL		4168045	0		=			
ANR	4168106	MemberAccess	f . previous		4168045	0					
ANR	4168107	Identifier	f		4168045	0					
ANR	4168108	Identifier	previous		4168045	1					
ANR	4168109	Identifier	NULL		4168045	1					
ANR	4168110	ExpressionStatement	g_sum += STACKINCREMENT	91:1:3373:3396	4168045	9	True				
ANR	4168111	AssignmentExpression	g_sum += STACKINCREMENT		4168045	0		+=			
ANR	4168112	Identifier	g_sum		4168045	0					
ANR	4168113	Identifier	STACKINCREMENT		4168045	1					
ANR	4168114	ExpressionStatement	"a = is_stack_valid ( & f , 0 )"	93:1:3443:3468	4168045	10	True				
ANR	4168115	AssignmentExpression	"a = is_stack_valid ( & f , 0 )"		4168045	0		=			
ANR	4168116	Identifier	a		4168045	0					
ANR	4168117	CallExpression	"is_stack_valid ( & f , 0 )"		4168045	1					
ANR	4168118	Callee	is_stack_valid		4168045	0					
ANR	4168119	Identifier	is_stack_valid		4168045	0					
ANR	4168120	ArgumentList	& f		4168045	1					
ANR	4168121	Argument	& f		4168045	0					
ANR	4168122	UnaryOperationExpression	& f		4168045	0					
ANR	4168123	UnaryOperator	&		4168045	0					
ANR	4168124	Identifier	f		4168045	1					
ANR	4168125	Argument	0		4168045	1					
ANR	4168126	PrimaryExpression	0		4168045	0					
ANR	4168127	ExpressionStatement	"printf ( ""Deepness Level: %d\\n"" , 0 )"	94:1:3471:3504	4168045	11	True				
ANR	4168128	CallExpression	"printf ( ""Deepness Level: %d\\n"" , 0 )"		4168045	0					
ANR	4168129	Callee	printf		4168045	0					
ANR	4168130	Identifier	printf		4168045	0					
ANR	4168131	ArgumentList	"""Deepness Level: %d\\n"""		4168045	1					
ANR	4168132	Argument	"""Deepness Level: %d\\n"""		4168045	0					
ANR	4168133	PrimaryExpression	"""Deepness Level: %d\\n"""		4168045	0					
ANR	4168134	Argument	0		4168045	1					
ANR	4168135	PrimaryExpression	0		4168045	0					
ANR	4168136	ExpressionStatement	"b = deepen ( & f , 0 )"	95:1:3507:3524	4168045	12	True				
ANR	4168137	AssignmentExpression	"b = deepen ( & f , 0 )"		4168045	0		=			
ANR	4168138	Identifier	b		4168045	0					
ANR	4168139	CallExpression	"deepen ( & f , 0 )"		4168045	1					
ANR	4168140	Callee	deepen		4168045	0					
ANR	4168141	Identifier	deepen		4168045	0					
ANR	4168142	ArgumentList	& f		4168045	1					
ANR	4168143	Argument	& f		4168045	0					
ANR	4168144	UnaryOperationExpression	& f		4168045	0					
ANR	4168145	UnaryOperator	&		4168045	0					
ANR	4168146	Identifier	f		4168045	1					
ANR	4168147	Argument	0		4168045	1					
ANR	4168148	PrimaryExpression	0		4168045	0					
ANR	4168149	ExpressionStatement	"printf ( ""Backchecking %d\\n"" , 0 ) , c = is_stack_valid ( & f , 0 )"	96:1:3527:3586	4168045	13	True				
ANR	4168150	Expression	"printf ( ""Backchecking %d\\n"" , 0 ) , c = is_stack_valid ( & f , 0 )"		4168045	0					
ANR	4168151	CallExpression	"printf ( ""Backchecking %d\\n"" , 0 )"		4168045	0					
ANR	4168152	Callee	printf		4168045	0					
ANR	4168153	Identifier	printf		4168045	0					
ANR	4168154	ArgumentList	"""Backchecking %d\\n"""		4168045	1					
ANR	4168155	Argument	"""Backchecking %d\\n"""		4168045	0					
ANR	4168156	PrimaryExpression	"""Backchecking %d\\n"""		4168045	0					
ANR	4168157	Argument	0		4168045	1					
ANR	4168158	PrimaryExpression	0		4168045	0					
ANR	4168159	AssignmentExpression	"c = is_stack_valid ( & f , 0 )"		4168045	1		=			
ANR	4168160	Identifier	c		4168045	0					
ANR	4168161	CallExpression	"is_stack_valid ( & f , 0 )"		4168045	1					
ANR	4168162	Callee	is_stack_valid		4168045	0					
ANR	4168163	Identifier	is_stack_valid		4168045	0					
ANR	4168164	ArgumentList	& f		4168045	1					
ANR	4168165	Argument	& f		4168045	0					
ANR	4168166	UnaryOperationExpression	& f		4168045	0					
ANR	4168167	UnaryOperator	&		4168045	0					
ANR	4168168	Identifier	f		4168045	1					
ANR	4168169	Argument	0		4168045	1					
ANR	4168170	PrimaryExpression	0		4168045	0					
ANR	4168171	ExpressionStatement	validity = a && b && c	98:1:3589:3611	4168045	14	True				
ANR	4168172	AssignmentExpression	validity = a && b && c		4168045	0		=			
ANR	4168173	Identifier	validity		4168045	0					
ANR	4168174	AndExpression	a && b && c		4168045	1		&&			
ANR	4168175	Identifier	a		4168045	0					
ANR	4168176	AndExpression	b && c		4168045	1		&&			
ANR	4168177	Identifier	b		4168045	0					
ANR	4168178	Identifier	c		4168045	1					
ANR	4168179	IfStatement	if ( validity == FALSE )		4168045	15					
ANR	4168180	Condition	validity == FALSE	99:5:3618:3634	4168045	0	True				
ANR	4168181	EqualityExpression	validity == FALSE		4168045	0		==			
ANR	4168182	Identifier	validity		4168045	0					
ANR	4168183	Identifier	FALSE		4168045	1					
ANR	4168184	CompoundStatement		26:1:790:790	4168045	1					
ANR	4168185	ExpressionStatement	"printf ( ""FAILED\\n"" )"	101:2:3642:3660	4168045	0	True				
ANR	4168186	CallExpression	"printf ( ""FAILED\\n"" )"		4168045	0					
ANR	4168187	Callee	printf		4168045	0					
ANR	4168188	Identifier	printf		4168045	0					
ANR	4168189	ArgumentList	"""FAILED\\n"""		4168045	1					
ANR	4168190	Argument	"""FAILED\\n"""		4168045	0					
ANR	4168191	PrimaryExpression	"""FAILED\\n"""		4168045	0					
ANR	4168192	ExpressionStatement	exit ( EXIT_FAILURE )	102:2:3664:3682	4168045	1	True				
ANR	4168193	CallExpression	exit ( EXIT_FAILURE )		4168045	0					
ANR	4168194	Callee	exit		4168045	0					
ANR	4168195	Identifier	exit		4168045	0					
ANR	4168196	ArgumentList	EXIT_FAILURE		4168045	1					
ANR	4168197	Argument	EXIT_FAILURE		4168045	0					
ANR	4168198	Identifier	EXIT_FAILURE		4168045	0					
ANR	4168199	ElseStatement	else		4168045	0					
ANR	4168200	CompoundStatement		31:1:846:846	4168045	0					
ANR	4168201	ExpressionStatement	"printf ( ""SUCCESS\\n"" )"	106:2:3698:3717	4168045	0	True				
ANR	4168202	CallExpression	"printf ( ""SUCCESS\\n"" )"		4168045	0					
ANR	4168203	Callee	printf		4168045	0					
ANR	4168204	Identifier	printf		4168045	0					
ANR	4168205	ArgumentList	"""SUCCESS\\n"""		4168045	1					
ANR	4168206	Argument	"""SUCCESS\\n"""		4168045	0					
ANR	4168207	PrimaryExpression	"""SUCCESS\\n"""		4168045	0					
ANR	4168208	ExpressionStatement	exit ( EXIT_SUCCESS )	107:2:3721:3739	4168045	1	True				
ANR	4168209	CallExpression	exit ( EXIT_SUCCESS )		4168045	0					
ANR	4168210	Callee	exit		4168045	0					
ANR	4168211	Identifier	exit		4168045	0					
ANR	4168212	ArgumentList	EXIT_SUCCESS		4168045	1					
ANR	4168213	Argument	EXIT_SUCCESS		4168045	0					
ANR	4168214	Identifier	EXIT_SUCCESS		4168045	0					
ANR	4168215	ReturnStatement	return EXIT_FAILURE ;	110:1:3746:3765	4168045	16	True				
ANR	4168216	Identifier	EXIT_FAILURE		4168045	0					
ANR	4168217	ReturnType	int		4168045	1					
ANR	4168218	Identifier	main		4168045	2					
ANR	4168219	ParameterList			4168045	3					
ANR	4168220	CFGEntryNode	ENTRY		4168045		True				
ANR	4168221	CFGExitNode	EXIT		4168045		True				
ANR	4168222	Symbol	a		4168045						
ANR	4168223	Symbol	b		4168045						
ANR	4168224	Symbol	c		4168045						
ANR	4168225	Symbol	NULL		4168045						
ANR	4168226	Symbol	data		4168045						
ANR	4168227	Symbol	f		4168045						
ANR	4168228	Symbol	f . data		4168045						
ANR	4168229	Symbol	g_sum		4168045						
ANR	4168230	Symbol	& f		4168045						
ANR	4168231	Symbol	f . previous		4168045						
ANR	4168232	Symbol	f . value		4168045						
ANR	4168233	Symbol	EXIT_FAILURE		4168045						
ANR	4168234	Symbol	deepen		4168045						
ANR	4168235	Symbol	EXIT_SUCCESS		4168045						
ANR	4168236	Symbol	STACKINCREMENT		4168045						
ANR	4168237	Symbol	is_stack_valid		4168045						
ANR	4168238	Symbol	f . size		4168045						
ANR	4168239	Symbol	FALSE		4168045						
ANR	4168240	Symbol	validity		4168045						
ANR	4168241	Function	init_data	114:0:3815:3927							
ANR	4168242	FunctionDef	"init_data (int * data , int size , int value)"		4168241	0					
ANR	4168243	CompoundStatement		115:0:3862:3927	4168241	0					
ANR	4168244	IdentifierDeclStatement	int i ;	116:1:3865:3870	4168241	0	True				
ANR	4168245	IdentifierDecl	i		4168241	0					
ANR	4168246	IdentifierDeclType	int		4168241	0					
ANR	4168247	Identifier	i		4168241	1					
ANR	4168248	ForStatement	for ( i = 0 ; i < size ; i ++ )		4168241	1					
ANR	4168249	ForInit	i = 0 ;	118:6:3880:3885	4168241	0	True				
ANR	4168250	AssignmentExpression	i = 0		4168241	0		=			
ANR	4168251	Identifier	i		4168241	0					
ANR	4168252	PrimaryExpression	0		4168241	1					
ANR	4168253	Condition	i < size	118:13:3887:3894	4168241	1	True				
ANR	4168254	RelationalExpression	i < size		4168241	0		<			
ANR	4168255	Identifier	i		4168241	0					
ANR	4168256	Identifier	size		4168241	1					
ANR	4168257	PostIncDecOperationExpression	i ++	118:23:3897:3899	4168241	2	True				
ANR	4168258	Identifier	i		4168241	0					
ANR	4168259	IncDec	++		4168241	1					
ANR	4168260	CompoundStatement		5:1:40:40	4168241	3					
ANR	4168261	ExpressionStatement	data [ i ] = value	120:2:3907:3922	4168241	0	True				
ANR	4168262	AssignmentExpression	data [ i ] = value		4168241	0		=			
ANR	4168263	ArrayIndexing	data [ i ]		4168241	0					
ANR	4168264	Identifier	data		4168241	0					
ANR	4168265	Identifier	i		4168241	1					
ANR	4168266	Identifier	value		4168241	1					
ANR	4168267	ReturnType	void		4168241	1					
ANR	4168268	Identifier	init_data		4168241	2					
ANR	4168269	ParameterList	"int * data , int size , int value"		4168241	3					
ANR	4168270	Parameter	int * data	114:15:3830:3838	4168241	0	True				
ANR	4168271	ParameterType	int *		4168241	0					
ANR	4168272	Identifier	data		4168241	1					
ANR	4168273	Parameter	int size	114:26:3841:3848	4168241	1	True				
ANR	4168274	ParameterType	int		4168241	0					
ANR	4168275	Identifier	size		4168241	1					
ANR	4168276	Parameter	int value	114:36:3851:3859	4168241	2	True				
ANR	4168277	ParameterType	int		4168241	0					
ANR	4168278	Identifier	value		4168241	1					
ANR	4168279	CFGEntryNode	ENTRY		4168241		True				
ANR	4168280	CFGExitNode	EXIT		4168241		True				
ANR	4168281	Symbol	* i		4168241						
ANR	4168282	Symbol	data		4168241						
ANR	4168283	Symbol	size		4168241						
ANR	4168284	Symbol	i		4168241						
ANR	4168285	Symbol	value		4168241						
ANR	4168286	Symbol	* data		4168241						
ANR	4168287	Function	deepen	126:0:4027:5051							
ANR	4168288	FunctionDef	"deepen (struct Frame * pf , int old_value)"		4168287	0					
ANR	4168289	CompoundStatement		127:0:4071:5051	4168287	0					
ANR	4168290	IdentifierDeclStatement	int test ;	128:1:4074:4082	4168287	0	True				
ANR	4168291	IdentifierDecl	test		4168287	0					
ANR	4168292	IdentifierDeclType	int		4168287	0					
ANR	4168293	Identifier	test		4168287	1					
ANR	4168294	IdentifierDeclStatement	int data [ STACKINCREMENT ] ;	129:1:4085:4109	4168287	1	True				
ANR	4168295	IdentifierDecl	data [ STACKINCREMENT ]		4168287	0					
ANR	4168296	IdentifierDeclType	int [ STACKINCREMENT ]		4168287	0					
ANR	4168297	Identifier	data		4168287	1					
ANR	4168298	Identifier	STACKINCREMENT		4168287	2					
ANR	4168299	IdentifierDeclStatement	struct Frame f ;	130:1:4112:4126	4168287	2	True				
ANR	4168300	IdentifierDecl	f		4168287	0					
ANR	4168301	IdentifierDeclType	struct Frame		4168287	0					
ANR	4168302	Identifier	f		4168287	1					
ANR	4168303	IdentifierDeclStatement	int new_value = old_value + 1 ;	131:1:4129:4158	4168287	3	True				
ANR	4168304	IdentifierDecl	new_value = old_value + 1		4168287	0					
ANR	4168305	IdentifierDeclType	int		4168287	0					
ANR	4168306	Identifier	new_value		4168287	1					
ANR	4168307	AssignmentExpression	new_value = old_value + 1		4168287	2		=			
ANR	4168308	Identifier	new_value		4168287	0					
ANR	4168309	AdditiveExpression	old_value + 1		4168287	1		+			
ANR	4168310	Identifier	old_value		4168287	0					
ANR	4168311	PrimaryExpression	1		4168287	1					
ANR	4168312	IdentifierDeclStatement	"int a , b ;"	132:1:4161:4169	4168287	4	True				
ANR	4168313	IdentifierDecl	a		4168287	0					
ANR	4168314	IdentifierDeclType	int		4168287	0					
ANR	4168315	Identifier	a		4168287	1					
ANR	4168316	IdentifierDecl	b		4168287	1					
ANR	4168317	IdentifierDeclType	int		4168287	0					
ANR	4168318	Identifier	b		4168287	1					
ANR	4168319	ExpressionStatement	"printf ( ""Deepness Level: %d\\n"" , new_value )"	134:1:4173:4214	4168287	5	True				
ANR	4168320	CallExpression	"printf ( ""Deepness Level: %d\\n"" , new_value )"		4168287	0					
ANR	4168321	Callee	printf		4168287	0					
ANR	4168322	Identifier	printf		4168287	0					
ANR	4168323	ArgumentList	"""Deepness Level: %d\\n"""		4168287	1					
ANR	4168324	Argument	"""Deepness Level: %d\\n"""		4168287	0					
ANR	4168325	PrimaryExpression	"""Deepness Level: %d\\n"""		4168287	0					
ANR	4168326	Argument	new_value		4168287	1					
ANR	4168327	Identifier	new_value		4168287	0					
ANR	4168328	ExpressionStatement	"init_data ( data , STACKINCREMENT , new_value )"	135:1:4217:4259	4168287	6	True				
ANR	4168329	CallExpression	"init_data ( data , STACKINCREMENT , new_value )"		4168287	0					
ANR	4168330	Callee	init_data		4168287	0					
ANR	4168331	Identifier	init_data		4168287	0					
ANR	4168332	ArgumentList	data		4168287	1					
ANR	4168333	Argument	data		4168287	0					
ANR	4168334	Identifier	data		4168287	0					
ANR	4168335	Argument	STACKINCREMENT		4168287	1					
ANR	4168336	Identifier	STACKINCREMENT		4168287	0					
ANR	4168337	Argument	new_value		4168287	2					
ANR	4168338	Identifier	new_value		4168287	0					
ANR	4168339	ExpressionStatement	f . value = new_value	136:1:4262:4281	4168287	7	True				
ANR	4168340	AssignmentExpression	f . value = new_value		4168287	0		=			
ANR	4168341	MemberAccess	f . value		4168287	0					
ANR	4168342	Identifier	f		4168287	0					
ANR	4168343	Identifier	value		4168287	1					
ANR	4168344	Identifier	new_value		4168287	1					
ANR	4168345	ExpressionStatement	f . data = & data [ 0 ]	137:1:4284:4301	4168287	8	True				
ANR	4168346	AssignmentExpression	f . data = & data [ 0 ]		4168287	0		=			
ANR	4168347	MemberAccess	f . data		4168287	0					
ANR	4168348	Identifier	f		4168287	0					
ANR	4168349	Identifier	data		4168287	1					
ANR	4168350	UnaryOperationExpression	& data [ 0 ]		4168287	1					
ANR	4168351	UnaryOperator	&		4168287	0					
ANR	4168352	ArrayIndexing	data [ 0 ]		4168287	1					
ANR	4168353	Identifier	data		4168287	0					
ANR	4168354	PrimaryExpression	0		4168287	1					
ANR	4168355	ExpressionStatement	f . size = STACKINCREMENT	138:1:4304:4327	4168287	9	True				
ANR	4168356	AssignmentExpression	f . size = STACKINCREMENT		4168287	0		=			
ANR	4168357	MemberAccess	f . size		4168287	0					
ANR	4168358	Identifier	f		4168287	0					
ANR	4168359	Identifier	size		4168287	1					
ANR	4168360	Identifier	STACKINCREMENT		4168287	1					
ANR	4168361	ExpressionStatement	f . previous = pf	139:1:4330:4345	4168287	10	True				
ANR	4168362	AssignmentExpression	f . previous = pf		4168287	0		=			
ANR	4168363	MemberAccess	f . previous		4168287	0					
ANR	4168364	Identifier	f		4168287	0					
ANR	4168365	Identifier	previous		4168287	1					
ANR	4168366	Identifier	pf		4168287	1					
ANR	4168367	ExpressionStatement	g_sum += STACKINCREMENT	140:1:4348:4371	4168287	11	True				
ANR	4168368	AssignmentExpression	g_sum += STACKINCREMENT		4168287	0		+=			
ANR	4168369	Identifier	g_sum		4168287	0					
ANR	4168370	Identifier	STACKINCREMENT		4168287	1					
ANR	4168371	ExpressionStatement	"test = is_stack_valid ( & f , new_value )"	142:1:4418:4454	4168287	12	True				
ANR	4168372	AssignmentExpression	"test = is_stack_valid ( & f , new_value )"		4168287	0		=			
ANR	4168373	Identifier	test		4168287	0					
ANR	4168374	CallExpression	"is_stack_valid ( & f , new_value )"		4168287	1					
ANR	4168375	Callee	is_stack_valid		4168287	0					
ANR	4168376	Identifier	is_stack_valid		4168287	0					
ANR	4168377	ArgumentList	& f		4168287	1					
ANR	4168378	Argument	& f		4168287	0					
ANR	4168379	UnaryOperationExpression	& f		4168287	0					
ANR	4168380	UnaryOperator	&		4168287	0					
ANR	4168381	Identifier	f		4168287	1					
ANR	4168382	Argument	new_value		4168287	1					
ANR	4168383	Identifier	new_value		4168287	0					
ANR	4168384	IfStatement	if ( test == TRUE )		4168287	13					
ANR	4168385	Condition	test == TRUE	144:5:4462:4473	4168287	0	True				
ANR	4168386	EqualityExpression	test == TRUE		4168287	0		==			
ANR	4168387	Identifier	test		4168287	0					
ANR	4168388	Identifier	TRUE		4168287	1					
ANR	4168389	CompoundStatement		19:1:405:405	4168287	1					
ANR	4168390	IfStatement	if ( g_sum < STACKSIZETARGET )		4168287	0					
ANR	4168391	Condition	g_sum < STACKSIZETARGET	146:6:4485:4507	4168287	0	True				
ANR	4168392	RelationalExpression	g_sum < STACKSIZETARGET		4168287	0		<			
ANR	4168393	Identifier	g_sum		4168287	0					
ANR	4168394	Identifier	STACKSIZETARGET		4168287	1					
ANR	4168395	CompoundStatement		21:2:440:440	4168287	1					
ANR	4168396	ExpressionStatement	"a = deepen ( & f , new_value )"	149:4:4568:4593	4168287	0	True				
ANR	4168397	AssignmentExpression	"a = deepen ( & f , new_value )"		4168287	0		=			
ANR	4168398	Identifier	a		4168287	0					
ANR	4168399	CallExpression	"deepen ( & f , new_value )"		4168287	1					
ANR	4168400	Callee	deepen		4168287	0					
ANR	4168401	Identifier	deepen		4168287	0					
ANR	4168402	ArgumentList	& f		4168287	1					
ANR	4168403	Argument	& f		4168287	0					
ANR	4168404	UnaryOperationExpression	& f		4168287	0					
ANR	4168405	UnaryOperator	&		4168287	0					
ANR	4168406	Identifier	f		4168287	1					
ANR	4168407	Argument	new_value		4168287	1					
ANR	4168408	Identifier	new_value		4168287	0					
ANR	4168409	ExpressionStatement	"printf ( ""Backchecking %d\\n"" , new_value ) , b = is_stack_valid ( & f , new_value )"	150:4:4599:4677	4168287	1	True				
ANR	4168410	Expression	"printf ( ""Backchecking %d\\n"" , new_value ) , b = is_stack_valid ( & f , new_value )"		4168287	0					
ANR	4168411	CallExpression	"printf ( ""Backchecking %d\\n"" , new_value )"		4168287	0					
ANR	4168412	Callee	printf		4168287	0					
ANR	4168413	Identifier	printf		4168287	0					
ANR	4168414	ArgumentList	"""Backchecking %d\\n"""		4168287	1					
ANR	4168415	Argument	"""Backchecking %d\\n"""		4168287	0					
ANR	4168416	PrimaryExpression	"""Backchecking %d\\n"""		4168287	0					
ANR	4168417	Argument	new_value		4168287	1					
ANR	4168418	Identifier	new_value		4168287	0					
ANR	4168419	AssignmentExpression	"b = is_stack_valid ( & f , new_value )"		4168287	1		=			
ANR	4168420	Identifier	b		4168287	0					
ANR	4168421	CallExpression	"is_stack_valid ( & f , new_value )"		4168287	1					
ANR	4168422	Callee	is_stack_valid		4168287	0					
ANR	4168423	Identifier	is_stack_valid		4168287	0					
ANR	4168424	ArgumentList	& f		4168287	1					
ANR	4168425	Argument	& f		4168287	0					
ANR	4168426	UnaryOperationExpression	& f		4168287	0					
ANR	4168427	UnaryOperator	&		4168287	0					
ANR	4168428	Identifier	f		4168287	1					
ANR	4168429	Argument	new_value		4168287	1					
ANR	4168430	Identifier	new_value		4168287	0					
ANR	4168431	ReturnStatement	return a && b ;	153:4:4684:4697	4168287	2	True				
ANR	4168432	AndExpression	a && b		4168287	0		&&			
ANR	4168433	Identifier	a		4168287	0					
ANR	4168434	Identifier	b		4168287	1					
ANR	4168435	ExpressionStatement	"printf ( ""About to checkpoint....\\n"" )"	156:2:4757:4792	4168287	1	True				
ANR	4168436	CallExpression	"printf ( ""About to checkpoint....\\n"" )"		4168287	0					
ANR	4168437	Callee	printf		4168287	0					
ANR	4168438	Identifier	printf		4168287	0					
ANR	4168439	ArgumentList	"""About to checkpoint....\\n"""		4168287	1					
ANR	4168440	Argument	"""About to checkpoint....\\n"""		4168287	0					
ANR	4168441	PrimaryExpression	"""About to checkpoint....\\n"""		4168287	0					
ANR	4168442	ExpressionStatement	ckpt_and_exit ( )	157:2:4796:4811	4168287	2	True				
ANR	4168443	CallExpression	ckpt_and_exit ( )		4168287	0					
ANR	4168444	Callee	ckpt_and_exit		4168287	0					
ANR	4168445	Identifier	ckpt_and_exit		4168287	0					
ANR	4168446	ArgumentList			4168287	1					
ANR	4168447	ExpressionStatement	"printf ( ""Returning from checkpoint....\\n"" )"	158:2:4815:4856	4168287	3	True				
ANR	4168448	CallExpression	"printf ( ""Returning from checkpoint....\\n"" )"		4168287	0					
ANR	4168449	Callee	printf		4168287	0					
ANR	4168450	Identifier	printf		4168287	0					
ANR	4168451	ArgumentList	"""Returning from checkpoint....\\n"""		4168287	1					
ANR	4168452	Argument	"""Returning from checkpoint....\\n"""		4168287	0					
ANR	4168453	PrimaryExpression	"""Returning from checkpoint....\\n"""		4168287	0					
ANR	4168454	ExpressionStatement	"test = is_stack_valid ( & f , new_value )"	161:2:4979:5015	4168287	4	True				
ANR	4168455	AssignmentExpression	"test = is_stack_valid ( & f , new_value )"		4168287	0		=			
ANR	4168456	Identifier	test		4168287	0					
ANR	4168457	CallExpression	"is_stack_valid ( & f , new_value )"		4168287	1					
ANR	4168458	Callee	is_stack_valid		4168287	0					
ANR	4168459	Identifier	is_stack_valid		4168287	0					
ANR	4168460	ArgumentList	& f		4168287	1					
ANR	4168461	Argument	& f		4168287	0					
ANR	4168462	UnaryOperationExpression	& f		4168287	0					
ANR	4168463	UnaryOperator	&		4168287	0					
ANR	4168464	Identifier	f		4168287	1					
ANR	4168465	Argument	new_value		4168287	1					
ANR	4168466	Identifier	new_value		4168287	0					
ANR	4168467	ReturnStatement	return test ;	162:2:5019:5030	4168287	5	True				
ANR	4168468	Identifier	test		4168287	0					
ANR	4168469	ReturnStatement	return FALSE ;	165:1:5037:5049	4168287	14	True				
ANR	4168470	Identifier	FALSE		4168287	0					
ANR	4168471	ReturnType	int		4168287	1					
ANR	4168472	Identifier	deepen		4168287	2					
ANR	4168473	ParameterList	"struct Frame * pf , int old_value"		4168287	3					
ANR	4168474	Parameter	struct Frame * pf	126:11:4038:4053	4168287	0	True				
ANR	4168475	ParameterType	struct Frame *		4168287	0					
ANR	4168476	Identifier	pf		4168287	1					
ANR	4168477	Parameter	int old_value	126:29:4056:4068	4168287	1	True				
ANR	4168478	ParameterType	int		4168287	0					
ANR	4168479	Identifier	old_value		4168287	1					
ANR	4168480	CFGEntryNode	ENTRY		4168287		True				
ANR	4168481	CFGExitNode	EXIT		4168287		True				
ANR	4168482	Symbol	a		4168287						
ANR	4168483	Symbol	b		4168287						
ANR	4168484	Symbol	test		4168287						
ANR	4168485	Symbol	data		4168287						
ANR	4168486	Symbol	f		4168287						
ANR	4168487	Symbol	f . data		4168287						
ANR	4168488	Symbol	TRUE		4168287						
ANR	4168489	Symbol	g_sum		4168287						
ANR	4168490	Symbol	& f		4168287						
ANR	4168491	Symbol	f . previous		4168287						
ANR	4168492	Symbol	STACKSIZETARGET		4168287						
ANR	4168493	Symbol	f . value		4168287						
ANR	4168494	Symbol	pf		4168287						
ANR	4168495	Symbol	deepen		4168287						
ANR	4168496	Symbol	STACKINCREMENT		4168287						
ANR	4168497	Symbol	is_stack_valid		4168287						
ANR	4168498	Symbol	old_value		4168287						
ANR	4168499	Symbol	f . size		4168287						
ANR	4168500	Symbol	FALSE		4168287						
ANR	4168501	Symbol	new_value		4168287						
ANR	4168502	Function	is_stack_valid	170:0:5184:5463							
ANR	4168503	FunctionDef	"is_stack_valid (struct Frame * f , int value)"		4168502	0					
ANR	4168504	CompoundStatement		171:0:5231:5463	4168502	0					
ANR	4168505	IdentifierDeclStatement	int check ;	172:1:5234:5243	4168502	0	True				
ANR	4168506	IdentifierDecl	check		4168502	0					
ANR	4168507	IdentifierDeclType	int		4168502	0					
ANR	4168508	Identifier	check		4168502	1					
ANR	4168509	ExpressionStatement	"check = data_valid ( f -> data , f -> size , value )"	174:1:5247:5290	4168502	1	True				
ANR	4168510	AssignmentExpression	"check = data_valid ( f -> data , f -> size , value )"		4168502	0		=			
ANR	4168511	Identifier	check		4168502	0					
ANR	4168512	CallExpression	"data_valid ( f -> data , f -> size , value )"		4168502	1					
ANR	4168513	Callee	data_valid		4168502	0					
ANR	4168514	Identifier	data_valid		4168502	0					
ANR	4168515	ArgumentList	f -> data		4168502	1					
ANR	4168516	Argument	f -> data		4168502	0					
ANR	4168517	PtrMemberAccess	f -> data		4168502	0					
ANR	4168518	Identifier	f		4168502	0					
ANR	4168519	Identifier	data		4168502	1					
ANR	4168520	Argument	f -> size		4168502	1					
ANR	4168521	PtrMemberAccess	f -> size		4168502	0					
ANR	4168522	Identifier	f		4168502	0					
ANR	4168523	Identifier	size		4168502	1					
ANR	4168524	Argument	value		4168502	2					
ANR	4168525	Identifier	value		4168502	0					
ANR	4168526	IfStatement	if ( value == 0 )		4168502	2					
ANR	4168527	Condition	value == 0	176:5:5298:5307	4168502	0	True				
ANR	4168528	EqualityExpression	value == 0		4168502	0		==			
ANR	4168529	Identifier	value		4168502	0					
ANR	4168530	PrimaryExpression	0		4168502	1					
ANR	4168531	CompoundStatement		7:1:79:79	4168502	1					
ANR	4168532	IfStatement	if ( check == TRUE )		4168502	0					
ANR	4168533	Condition	check == TRUE	178:6:5319:5331	4168502	0	True				
ANR	4168534	EqualityExpression	check == TRUE		4168502	0		==			
ANR	4168535	Identifier	check		4168502	0					
ANR	4168536	Identifier	TRUE		4168502	1					
ANR	4168537	CompoundStatement		9:2:104:104	4168502	1					
ANR	4168538	ReturnStatement	return TRUE ;	180:3:5341:5352	4168502	0	True				
ANR	4168539	Identifier	TRUE		4168502	0					
ANR	4168540	ReturnStatement	return FALSE ;	182:2:5360:5372	4168502	1	True				
ANR	4168541	Identifier	FALSE		4168502	0					
ANR	4168542	ReturnStatement	"return is_stack_valid ( f -> previous , value - 1 ) ;"	186:1:5416:5461	4168502	3	True				
ANR	4168543	CallExpression	"is_stack_valid ( f -> previous , value - 1 )"		4168502	0					
ANR	4168544	Callee	is_stack_valid		4168502	0					
ANR	4168545	Identifier	is_stack_valid		4168502	0					
ANR	4168546	ArgumentList	f -> previous		4168502	1					
ANR	4168547	Argument	f -> previous		4168502	0					
ANR	4168548	PtrMemberAccess	f -> previous		4168502	0					
ANR	4168549	Identifier	f		4168502	0					
ANR	4168550	Identifier	previous		4168502	1					
ANR	4168551	Argument	value - 1		4168502	1					
ANR	4168552	AdditiveExpression	value - 1		4168502	0		-			
ANR	4168553	Identifier	value		4168502	0					
ANR	4168554	PrimaryExpression	1		4168502	1					
ANR	4168555	ReturnType	int		4168502	1					
ANR	4168556	Identifier	is_stack_valid		4168502	2					
ANR	4168557	ParameterList	"struct Frame * f , int value"		4168502	3					
ANR	4168558	Parameter	struct Frame * f	170:19:5203:5217	4168502	0	True				
ANR	4168559	ParameterType	struct Frame *		4168502	0					
ANR	4168560	Identifier	f		4168502	1					
ANR	4168561	Parameter	int value	170:36:5220:5228	4168502	1	True				
ANR	4168562	ParameterType	int		4168502	0					
ANR	4168563	Identifier	value		4168502	1					
ANR	4168564	CFGEntryNode	ENTRY		4168502		True				
ANR	4168565	CFGExitNode	EXIT		4168502		True				
ANR	4168566	Symbol	* f		4168502						
ANR	4168567	Symbol	f -> size		4168502						
ANR	4168568	Symbol	f		4168502						
ANR	4168569	Symbol	TRUE		4168502						
ANR	4168570	Symbol	is_stack_valid		4168502						
ANR	4168571	Symbol	FALSE		4168502						
ANR	4168572	Symbol	check		4168502						
ANR	4168573	Symbol	f -> previous		4168502						
ANR	4168574	Symbol	data_valid		4168502						
ANR	4168575	Symbol	value		4168502						
ANR	4168576	Symbol	f -> data		4168502						
ANR	4168577	Function	data_valid	191:0:5507:5664							
ANR	4168578	FunctionDef	"data_valid (int * data , int size , int value)"		4168577	0					
ANR	4168579	CompoundStatement		192:0:5554:5664	4168577	0					
ANR	4168580	IdentifierDeclStatement	int i ;	193:1:5557:5562	4168577	0	True				
ANR	4168581	IdentifierDecl	i		4168577	0					
ANR	4168582	IdentifierDeclType	int		4168577	0					
ANR	4168583	Identifier	i		4168577	1					
ANR	4168584	ForStatement	for ( i = 0 ; i < size ; i ++ )		4168577	1					
ANR	4168585	ForInit	i = 0 ;	195:6:5572:5577	4168577	0	True				
ANR	4168586	AssignmentExpression	i = 0		4168577	0		=			
ANR	4168587	Identifier	i		4168577	0					
ANR	4168588	PrimaryExpression	0		4168577	1					
ANR	4168589	Condition	i < size	195:13:5579:5586	4168577	1	True				
ANR	4168590	RelationalExpression	i < size		4168577	0		<			
ANR	4168591	Identifier	i		4168577	0					
ANR	4168592	Identifier	size		4168577	1					
ANR	4168593	PostIncDecOperationExpression	i ++	195:23:5589:5591	4168577	2	True				
ANR	4168594	Identifier	i		4168577	0					
ANR	4168595	IncDec	++		4168577	1					
ANR	4168596	CompoundStatement		5:1:40:40	4168577	3					
ANR	4168597	IfStatement	if ( data [ i ] != value )		4168577	0					
ANR	4168598	Condition	data [ i ] != value	197:6:5603:5618	4168577	0	True				
ANR	4168599	EqualityExpression	data [ i ] != value		4168577	0		!=			
ANR	4168600	ArrayIndexing	data [ i ]		4168577	0					
ANR	4168601	Identifier	data		4168577	0					
ANR	4168602	Identifier	i		4168577	1					
ANR	4168603	Identifier	value		4168577	1					
ANR	4168604	CompoundStatement		7:2:68:68	4168577	1					
ANR	4168605	ReturnStatement	return FALSE ;	199:3:5628:5640	4168577	0	True				
ANR	4168606	Identifier	FALSE		4168577	0					
ANR	4168607	ReturnStatement	return TRUE ;	203:1:5651:5662	4168577	2	True				
ANR	4168608	Identifier	TRUE		4168577	0					
ANR	4168609	ReturnType	int		4168577	1					
ANR	4168610	Identifier	data_valid		4168577	2					
ANR	4168611	ParameterList	"int * data , int size , int value"		4168577	3					
ANR	4168612	Parameter	int * data	191:15:5522:5530	4168577	0	True				
ANR	4168613	ParameterType	int *		4168577	0					
ANR	4168614	Identifier	data		4168577	1					
ANR	4168615	Parameter	int size	191:26:5533:5540	4168577	1	True				
ANR	4168616	ParameterType	int		4168577	0					
ANR	4168617	Identifier	size		4168577	1					
ANR	4168618	Parameter	int value	191:36:5543:5551	4168577	2	True				
ANR	4168619	ParameterType	int		4168577	0					
ANR	4168620	Identifier	value		4168577	1					
ANR	4168621	CFGEntryNode	ENTRY		4168577		True				
ANR	4168622	CFGExitNode	EXIT		4168577		True				
ANR	4168623	Symbol	* i		4168577						
ANR	4168624	Symbol	data		4168577						
ANR	4168625	Symbol	size		4168577						
ANR	4168626	Symbol	i		4168577						
ANR	4168627	Symbol	TRUE		4168577						
ANR	4168628	Symbol	FALSE		4168577						
ANR	4168629	Symbol	value		4168577						
ANR	4168630	Symbol	* data		4168577						
