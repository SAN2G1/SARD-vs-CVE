command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4685972	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_cron_job.cpp								
ANR	4685973	Function	CronJob :: CronJob	34:0:1178:2231							
ANR	4685974	FunctionDef	"CronJob :: CronJob (CronJobParams * params , CronJobMgr & mgr)"		4685973	0					
ANR	4685975	CompoundStatement		55:0:1755:2231	4685973	0					
ANR	4685976	ForStatement	for ( int i = 0 ; i < 3 ; i ++ )		4685973	0					
ANR	4685977	ForInit	int i = 0 ;	56:6:1763:1772	4685973	0	True				
ANR	4685978	IdentifierDeclStatement	int i = 0 ;		4685973	0					
ANR	4685979	IdentifierDecl	i = 0		4685973	0					
ANR	4685980	IdentifierDeclType	int		4685973	0					
ANR	4685981	Identifier	i		4685973	1					
ANR	4685982	AssignmentExpression	i = 0		4685973	2		=			
ANR	4685983	Identifier	i		4685973	0					
ANR	4685984	PrimaryExpression	0		4685973	1					
ANR	4685985	Condition	i < 3	56:17:1774:1778	4685973	1	True				
ANR	4685986	RelationalExpression	i < 3		4685973	0		<			
ANR	4685987	Identifier	i		4685973	0					
ANR	4685988	PrimaryExpression	3		4685973	1					
ANR	4685989	PostIncDecOperationExpression	i ++	56:25:1782:1784	4685973	2	True				
ANR	4685990	Identifier	i		4685973	0					
ANR	4685991	IncDec	++		4685973	1					
ANR	4685992	CompoundStatement		2:31:32:32	4685973	3					
ANR	4685993	ExpressionStatement	m_childFds [ i ] = - 1	57:2:1792:1810	4685973	0	True				
ANR	4685994	AssignmentExpression	m_childFds [ i ] = - 1		4685973	0		=			
ANR	4685995	ArrayIndexing	m_childFds [ i ]		4685973	0					
ANR	4685996	Identifier	m_childFds		4685973	0					
ANR	4685997	Identifier	i		4685973	1					
ANR	4685998	UnaryOperationExpression	- 1		4685973	1					
ANR	4685999	UnaryOperator	-		4685973	0					
ANR	4686000	PrimaryExpression	1		4685973	1					
ANR	4686001	ExpressionStatement	m_stdOutBuf = new CronJobOut ( * this )	61:1:1845:1882	4685973	1	True				
ANR	4686002	AssignmentExpression	m_stdOutBuf = new CronJobOut ( * this )		4685973	0		=			
ANR	4686003	Identifier	m_stdOutBuf		4685973	0					
ANR	4686004	UnaryOperationExpression	* this		4685973	1					
ANR	4686005	UnaryOperator	*		4685973	0					
ANR	4686006	Identifier	this		4685973	1					
ANR	4686007	ExpressionStatement	m_stdErrBuf = new CronJobErr ( * this )	62:1:1885:1922	4685973	2	True				
ANR	4686008	AssignmentExpression	m_stdErrBuf = new CronJobErr ( * this )		4685973	0		=			
ANR	4686009	Identifier	m_stdErrBuf		4685973	0					
ANR	4686010	UnaryOperationExpression	* this		4685973	1					
ANR	4686011	UnaryOperator	*		4685973	0					
ANR	4686012	Identifier	this		4685973	1					
ANR	4686013	Statement	if	64:2:1927:1928	4685973	3	True				
ANR	4686014	IdentifierDeclStatement	CRONJOB_PIPEIO_DEBUG TodoBufSize = 20 * 1024 ;	64:5:1930:1975	4685973	4	True				
ANR	4686015	IdentifierDecl	TodoBufSize = 20 * 1024		4685973	0					
ANR	4686016	IdentifierDeclType	CRONJOB_PIPEIO_DEBUG		4685973	0					
ANR	4686017	Identifier	TodoBufSize		4685973	1					
ANR	4686018	AssignmentExpression	TodoBufSize = 20 * 1024		4685973	2		=			
ANR	4686019	Identifier	TodoBufSize		4685973	0					
ANR	4686020	MultiplicativeExpression	20 * 1024		4685973	1		*			
ANR	4686021	PrimaryExpression	20		4685973	0					
ANR	4686022	PrimaryExpression	1024		4685973	1					
ANR	4686023	ExpressionStatement	TodoWriteNum = TodoBufWrap = TodoBufOffset = 0	66:1:1978:2024	4685973	5	True				
ANR	4686024	AssignmentExpression	TodoWriteNum = TodoBufWrap = TodoBufOffset = 0		4685973	0		=			
ANR	4686025	Identifier	TodoWriteNum		4685973	0					
ANR	4686026	AssignmentExpression	TodoBufWrap = TodoBufOffset = 0		4685973	1		=			
ANR	4686027	Identifier	TodoBufWrap		4685973	0					
ANR	4686028	AssignmentExpression	TodoBufOffset = 0		4685973	1		=			
ANR	4686029	Identifier	TodoBufOffset		4685973	0					
ANR	4686030	PrimaryExpression	0		4685973	1					
ANR	4686031	ExpressionStatement	TodoBuffer = ( char * ) malloc ( TodoBufSize )	67:1:2027:2070	4685973	6	True				
ANR	4686032	AssignmentExpression	TodoBuffer = ( char * ) malloc ( TodoBufSize )		4685973	0		=			
ANR	4686033	Identifier	TodoBuffer		4685973	0					
ANR	4686034	CastExpression	( char * ) malloc ( TodoBufSize )		4685973	1					
ANR	4686035	CastTarget	char *		4685973	0					
ANR	4686036	CallExpression	malloc ( TodoBufSize )		4685973	1					
ANR	4686037	Callee	malloc		4685973	0					
ANR	4686038	Identifier	malloc		4685973	0					
ANR	4686039	ArgumentList	TodoBufSize		4685973	1					
ANR	4686040	Argument	TodoBufSize		4685973	0					
ANR	4686041	Identifier	TodoBufSize		4685973	0					
ANR	4686042	IdentifierDeclStatement	"endif m_reaperId = daemonCore -> Register_Reaper ( ""Cron_Reaper"" , ( ReaperHandlercpp ) & CronJob :: Reaper , ""Cron Reaper"" , this ) ;"	68:2:2074:2229	4685973	7	True				
ANR	4686043	IdentifierDecl	"m_reaperId = daemonCore -> Register_Reaper ( ""Cron_Reaper"" , ( ReaperHandlercpp ) & CronJob :: Reaper , ""Cron Reaper"" , this )"		4685973	0					
ANR	4686044	IdentifierDeclType	endif		4685973	0					
ANR	4686045	Identifier	m_reaperId		4685973	1					
ANR	4686046	AssignmentExpression	"m_reaperId = daemonCore -> Register_Reaper ( ""Cron_Reaper"" , ( ReaperHandlercpp ) & CronJob :: Reaper , ""Cron Reaper"" , this )"		4685973	2		=			
ANR	4686047	Identifier	m_reaperId		4685973	0					
ANR	4686048	CallExpression	"daemonCore -> Register_Reaper ( ""Cron_Reaper"" , ( ReaperHandlercpp ) & CronJob :: Reaper , ""Cron Reaper"" , this )"		4685973	1					
ANR	4686049	Callee	daemonCore -> Register_Reaper		4685973	0					
ANR	4686050	PtrMemberAccess	daemonCore -> Register_Reaper		4685973	0					
ANR	4686051	Identifier	daemonCore		4685973	0					
ANR	4686052	Identifier	Register_Reaper		4685973	1					
ANR	4686053	ArgumentList	"""Cron_Reaper"""		4685973	1					
ANR	4686054	Argument	"""Cron_Reaper"""		4685973	0					
ANR	4686055	PrimaryExpression	"""Cron_Reaper"""		4685973	0					
ANR	4686056	Argument	( ReaperHandlercpp ) & CronJob :: Reaper		4685973	1					
ANR	4686057	CastExpression	( ReaperHandlercpp ) & CronJob :: Reaper		4685973	0					
ANR	4686058	CastTarget	ReaperHandlercpp		4685973	0					
ANR	4686059	UnaryOperationExpression	& CronJob :: Reaper		4685973	1					
ANR	4686060	UnaryOperator	&		4685973	0					
ANR	4686061	Identifier	CronJob :: Reaper		4685973	1					
ANR	4686062	Argument	"""Cron Reaper"""		4685973	2					
ANR	4686063	PrimaryExpression	"""Cron Reaper"""		4685973	0					
ANR	4686064	Argument	this		4685973	3					
ANR	4686065	Identifier	this		4685973	0					
ANR	4686066	Identifier	CronJob :: CronJob		4685973	1					
ANR	4686067	ParameterList	"CronJobParams * params , CronJobMgr & mgr"		4685973	2					
ANR	4686068	Parameter	CronJobParams * params	34:18:1196:1216	4685973	0	True				
ANR	4686069	ParameterType	CronJobParams *		4685973	0					
ANR	4686070	Identifier	params		4685973	1					
ANR	4686071	Parameter	CronJobMgr & mgr	34:41:1219:1233	4685973	1	True				
ANR	4686072	ParameterType	CronJobMgr &		4685973	0					
ANR	4686073	Identifier	mgr		4685973	1					
ANR	4686074	CFGEntryNode	ENTRY		4685973		True				
ANR	4686075	CFGExitNode	EXIT		4685973		True				
ANR	4686076	Symbol	malloc		4685973						
ANR	4686077	Symbol	this		4685973						
ANR	4686078	Symbol	TodoBuffer		4685973						
ANR	4686079	Symbol	i		4685973						
ANR	4686080	Symbol	TodoBufSize		4685973						
ANR	4686081	Symbol	params		4685973						
ANR	4686082	Symbol	* m_childFds		4685973						
ANR	4686083	Symbol	m_stdErrBuf		4685973						
ANR	4686084	Symbol	* this		4685973						
ANR	4686085	Symbol	daemonCore -> Register_Reaper		4685973						
ANR	4686086	Symbol	* i		4685973						
ANR	4686087	Symbol	TodoWriteNum		4685973						
ANR	4686088	Symbol	* daemonCore		4685973						
ANR	4686089	Symbol	daemonCore		4685973						
ANR	4686090	Symbol	TodoBufOffset		4685973						
ANR	4686091	Symbol	mgr		4685973						
ANR	4686092	Symbol	m_reaperId		4685973						
ANR	4686093	Symbol	& CronJob :: Reaper		4685973						
ANR	4686094	Symbol	m_stdOutBuf		4685973						
ANR	4686095	Symbol	TodoBufWrap		4685973						
ANR	4686096	Symbol	m_childFds		4685973						
ANR	4686097	Function	CronJob :: ~CronJob	79:0:2256:2690							
ANR	4686098	FunctionDef	CronJob :: ~CronJob ()		4686097	0					
ANR	4686099	CompoundStatement		80:0:2277:2690	4686097	0					
ANR	4686100	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Deleting job '%s' (%s), timer %d\\n"" , GetName ( ) , GetExecutable ( ) , m_run_timer )"	81:1:2280:2391	4686097	0	True				
ANR	4686101	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Deleting job '%s' (%s), timer %d\\n"" , GetName ( ) , GetExecutable ( ) , m_run_timer )"		4686097	0					
ANR	4686102	Callee	dprintf		4686097	0					
ANR	4686103	Identifier	dprintf		4686097	0					
ANR	4686104	ArgumentList	D_ALWAYS		4686097	1					
ANR	4686105	Argument	D_ALWAYS		4686097	0					
ANR	4686106	Identifier	D_ALWAYS		4686097	0					
ANR	4686107	Argument	"""CronJob: Deleting job '%s' (%s), timer %d\\n"""		4686097	1					
ANR	4686108	PrimaryExpression	"""CronJob: Deleting job '%s' (%s), timer %d\\n"""		4686097	0					
ANR	4686109	Argument	GetName ( )		4686097	2					
ANR	4686110	CallExpression	GetName ( )		4686097	0					
ANR	4686111	Callee	GetName		4686097	0					
ANR	4686112	Identifier	GetName		4686097	0					
ANR	4686113	ArgumentList			4686097	1					
ANR	4686114	Argument	GetExecutable ( )		4686097	3					
ANR	4686115	CallExpression	GetExecutable ( )		4686097	0					
ANR	4686116	Callee	GetExecutable		4686097	0					
ANR	4686117	Identifier	GetExecutable		4686097	0					
ANR	4686118	ArgumentList			4686097	1					
ANR	4686119	Argument	m_run_timer		4686097	4					
ANR	4686120	Identifier	m_run_timer		4686097	0					
ANR	4686121	ExpressionStatement	CancelRunTimer ( )	85:1:2431:2448	4686097	1	True				
ANR	4686122	CallExpression	CancelRunTimer ( )		4686097	0					
ANR	4686123	Callee	CancelRunTimer		4686097	0					
ANR	4686124	Identifier	CancelRunTimer		4686097	0					
ANR	4686125	ArgumentList			4686097	1					
ANR	4686126	IfStatement	if ( m_reaperId >= 0 )		4686097	2					
ANR	4686127	Condition	m_reaperId >= 0	86:6:2456:2470	4686097	0	True				
ANR	4686128	RelationalExpression	m_reaperId >= 0		4686097	0		>=			
ANR	4686129	Identifier	m_reaperId		4686097	0					
ANR	4686130	PrimaryExpression	0		4686097	1					
ANR	4686131	CompoundStatement		7:24:196:196	4686097	1					
ANR	4686132	ExpressionStatement	daemonCore -> Cancel_Reaper ( m_reaperId )	87:2:2478:2517	4686097	0	True				
ANR	4686133	CallExpression	daemonCore -> Cancel_Reaper ( m_reaperId )		4686097	0					
ANR	4686134	Callee	daemonCore -> Cancel_Reaper		4686097	0					
ANR	4686135	PtrMemberAccess	daemonCore -> Cancel_Reaper		4686097	0					
ANR	4686136	Identifier	daemonCore		4686097	0					
ANR	4686137	Identifier	Cancel_Reaper		4686097	1					
ANR	4686138	ArgumentList	m_reaperId		4686097	1					
ANR	4686139	Argument	m_reaperId		4686097	0					
ANR	4686140	Identifier	m_reaperId		4686097	0					
ANR	4686141	ExpressionStatement	KillJob ( true )	91:1:2559:2574	4686097	3	True				
ANR	4686142	CallExpression	KillJob ( true )		4686097	0					
ANR	4686143	Callee	KillJob		4686097	0					
ANR	4686144	Identifier	KillJob		4686097	0					
ANR	4686145	ArgumentList	true		4686097	1					
ANR	4686146	Argument	true		4686097	0					
ANR	4686147	Identifier	true		4686097	0					
ANR	4686148	ExpressionStatement	CleanAll ( )	94:1:2592:2603	4686097	4	True				
ANR	4686149	CallExpression	CleanAll ( )		4686097	0					
ANR	4686150	Callee	CleanAll		4686097	0					
ANR	4686151	Identifier	CleanAll		4686097	0					
ANR	4686152	ArgumentList			4686097	1					
ANR	4686153	Statement	delete	97:1:2630:2635	4686097	5	True				
ANR	4686154	ExpressionStatement	m_stdOutBuf	97:8:2637:2648	4686097	6	True				
ANR	4686155	Identifier	m_stdOutBuf		4686097	0					
ANR	4686156	Statement	delete	98:1:2651:2656	4686097	7	True				
ANR	4686157	ExpressionStatement	m_stdErrBuf	98:8:2658:2669	4686097	8	True				
ANR	4686158	Identifier	m_stdErrBuf		4686097	0					
ANR	4686159	Statement	delete	100:1:2673:2678	4686097	9	True				
ANR	4686160	ExpressionStatement	m_params	100:8:2680:2688	4686097	10	True				
ANR	4686161	Identifier	m_params		4686097	0					
ANR	4686162	Identifier	CronJob :: ~CronJob		4686097	1					
ANR	4686163	ParameterList			4686097	2					
ANR	4686164	CFGEntryNode	ENTRY		4686097		True				
ANR	4686165	CFGExitNode	EXIT		4686097		True				
ANR	4686166	Symbol	GetExecutable		4686097						
ANR	4686167	Symbol	daemonCore		4686097						
ANR	4686168	Symbol	D_ALWAYS		4686097						
ANR	4686169	Symbol	true		4686097						
ANR	4686170	Symbol	m_reaperId		4686097						
ANR	4686171	Symbol	GetName		4686097						
ANR	4686172	Symbol	m_run_timer		4686097						
ANR	4686173	Function	CronJob :: Initialize	104:0:2707:2994							
ANR	4686174	FunctionDef	CronJob :: Initialize ()		4686173	0					
ANR	4686175	CompoundStatement		106:0:2739:2994	4686173	0					
ANR	4686176	IfStatement	if ( IsInitialized ( ) )		4686173	0					
ANR	4686177	Condition	IsInitialized ( )	108:6:2795:2809	4686173	0	True				
ANR	4686178	CallExpression	IsInitialized ( )		4686173	0					
ANR	4686179	Callee	IsInitialized		4686173	0					
ANR	4686180	Identifier	IsInitialized		4686173	0					
ANR	4686181	ArgumentList			4686173	1					
ANR	4686182	CompoundStatement		3:24:73:73	4686173	1					
ANR	4686183	ReturnStatement	return 0 ;	109:2:2817:2825	4686173	0	True				
ANR	4686184	PrimaryExpression	0		4686173	0					
ANR	4686185	ExpressionStatement	SetState ( CRON_IDLE )	113:1:2863:2884	4686173	1	True				
ANR	4686186	CallExpression	SetState ( CRON_IDLE )		4686173	0					
ANR	4686187	Callee	SetState		4686173	0					
ANR	4686188	Identifier	SetState		4686173	0					
ANR	4686189	ArgumentList	CRON_IDLE		4686173	1					
ANR	4686190	Argument	CRON_IDLE		4686173	0					
ANR	4686191	Identifier	CRON_IDLE		4686173	0					
ANR	4686192	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Initializing job '%s' (%s)\\n"" , GetName ( ) , GetExecutable ( ) )"	115:1:2888:2981	4686173	2	True				
ANR	4686193	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Initializing job '%s' (%s)\\n"" , GetName ( ) , GetExecutable ( ) )"		4686173	0					
ANR	4686194	Callee	dprintf		4686173	0					
ANR	4686195	Identifier	dprintf		4686173	0					
ANR	4686196	ArgumentList	D_ALWAYS		4686173	1					
ANR	4686197	Argument	D_ALWAYS		4686173	0					
ANR	4686198	Identifier	D_ALWAYS		4686173	0					
ANR	4686199	Argument	"""CronJob: Initializing job '%s' (%s)\\n"""		4686173	1					
ANR	4686200	PrimaryExpression	"""CronJob: Initializing job '%s' (%s)\\n"""		4686173	0					
ANR	4686201	Argument	GetName ( )		4686173	2					
ANR	4686202	CallExpression	GetName ( )		4686173	0					
ANR	4686203	Callee	GetName		4686173	0					
ANR	4686204	Identifier	GetName		4686173	0					
ANR	4686205	ArgumentList			4686173	1					
ANR	4686206	Argument	GetExecutable ( )		4686173	3					
ANR	4686207	CallExpression	GetExecutable ( )		4686173	0					
ANR	4686208	Callee	GetExecutable		4686173	0					
ANR	4686209	Identifier	GetExecutable		4686173	0					
ANR	4686210	ArgumentList			4686173	1					
ANR	4686211	ReturnStatement	return 0 ;	117:1:2984:2992	4686173	3	True				
ANR	4686212	PrimaryExpression	0		4686173	0					
ANR	4686213	ReturnType	int		4686173	1					
ANR	4686214	Identifier	CronJob :: Initialize		4686173	2					
ANR	4686215	ParameterList			4686173	3					
ANR	4686216	CFGEntryNode	ENTRY		4686173		True				
ANR	4686217	CFGExitNode	EXIT		4686173		True				
ANR	4686218	Symbol	GetExecutable		4686173						
ANR	4686219	Symbol	D_ALWAYS		4686173						
ANR	4686220	Symbol	CRON_IDLE		4686173						
ANR	4686221	Symbol	GetName		4686173						
ANR	4686222	Symbol	IsInitialized		4686173						
ANR	4686223	Function	CronJob :: SetParams	121:0:3019:3162							
ANR	4686224	FunctionDef	CronJob :: SetParams (CronJobParams * params)		4686223	0					
ANR	4686225	CompoundStatement		123:0:3068:3162	4686223	0					
ANR	4686226	ExpressionStatement	m_old_period = m_params -> GetPeriod ( )	124:1:3071:3108	4686223	0	True				
ANR	4686227	AssignmentExpression	m_old_period = m_params -> GetPeriod ( )		4686223	0		=			
ANR	4686228	Identifier	m_old_period		4686223	0					
ANR	4686229	CallExpression	m_params -> GetPeriod ( )		4686223	1					
ANR	4686230	Callee	m_params -> GetPeriod		4686223	0					
ANR	4686231	PtrMemberAccess	m_params -> GetPeriod		4686223	0					
ANR	4686232	Identifier	m_params		4686223	0					
ANR	4686233	Identifier	GetPeriod		4686223	1					
ANR	4686234	ArgumentList			4686223	1					
ANR	4686235	Statement	delete	125:1:3111:3116	4686223	1	True				
ANR	4686236	ExpressionStatement	m_params	125:8:3118:3126	4686223	2	True				
ANR	4686237	Identifier	m_params		4686223	0					
ANR	4686238	ExpressionStatement	m_params = params	126:1:3129:3146	4686223	3	True				
ANR	4686239	AssignmentExpression	m_params = params		4686223	0		=			
ANR	4686240	Identifier	m_params		4686223	0					
ANR	4686241	Identifier	params		4686223	1					
ANR	4686242	ReturnStatement	return true ;	127:1:3149:3160	4686223	4	True				
ANR	4686243	Identifier	true		4686223	0					
ANR	4686244	ReturnType	bool		4686223	1					
ANR	4686245	Identifier	CronJob :: SetParams		4686223	2					
ANR	4686246	ParameterList	CronJobParams * params		4686223	3					
ANR	4686247	Parameter	CronJobParams * params	122:20:3044:3064	4686223	0	True				
ANR	4686248	ParameterType	CronJobParams *		4686223	0					
ANR	4686249	Identifier	params		4686223	1					
ANR	4686250	CFGEntryNode	ENTRY		4686223		True				
ANR	4686251	CFGExitNode	EXIT		4686223		True				
ANR	4686252	Symbol	m_params -> GetPeriod		4686223						
ANR	4686253	Symbol	m_params		4686223						
ANR	4686254	Symbol	true		4686223						
ANR	4686255	Symbol	m_old_period		4686223						
ANR	4686256	Symbol	* m_params		4686223						
ANR	4686257	Symbol	params		4686223						
ANR	4686258	Function	CronJob :: HandleReconfig	131:0:3194:4207							
ANR	4686259	FunctionDef	CronJob :: HandleReconfig ()		4686258	0					
ANR	4686260	CompoundStatement		133:0:3230:4207	4686258	0					
ANR	4686261	IfStatement	if ( Params ( ) . OptReconfigRerun ( ) && m_num_runs )		4686258	0					
ANR	4686262	Condition	Params ( ) . OptReconfigRerun ( ) && m_num_runs	135:7:3266:3308	4686258	0	True				
ANR	4686263	AndExpression	Params ( ) . OptReconfigRerun ( ) && m_num_runs		4686258	0		&&			
ANR	4686264	CallExpression	Params ( ) . OptReconfigRerun ( )		4686258	0					
ANR	4686265	Callee	Params ( ) . OptReconfigRerun		4686258	0					
ANR	4686266	MemberAccess	Params ( ) . OptReconfigRerun		4686258	0					
ANR	4686267	CallExpression	Params ( )		4686258	0					
ANR	4686268	Callee	Params		4686258	0					
ANR	4686269	Identifier	Params		4686258	0					
ANR	4686270	ArgumentList			4686258	1					
ANR	4686271	Identifier	OptReconfigRerun		4686258	1					
ANR	4686272	ArgumentList			4686258	1					
ANR	4686273	Identifier	m_num_runs		4686258	1					
ANR	4686274	CompoundStatement		3:53:81:81	4686258	1					
ANR	4686275	ExpressionStatement	SetState ( CRON_READY )	136:2:3316:3338	4686258	0	True				
ANR	4686276	CallExpression	SetState ( CRON_READY )		4686258	0					
ANR	4686277	Callee	SetState		4686258	0					
ANR	4686278	Identifier	SetState		4686258	0					
ANR	4686279	ArgumentList	CRON_READY		4686258	1					
ANR	4686280	Argument	CRON_READY		4686258	0					
ANR	4686281	Identifier	CRON_READY		4686258	0					
ANR	4686282	ReturnStatement	return 0 ;	137:2:3342:3350	4686258	1	True				
ANR	4686283	PrimaryExpression	0		4686258	0					
ANR	4686284	IfStatement	if ( IsRunning ( ) && Params ( ) . OptReconfig ( ) )		4686258	1					
ANR	4686285	Condition	IsRunning ( ) && Params ( ) . OptReconfig ( )	141:7:3425:3463	4686258	0	True				
ANR	4686286	AndExpression	IsRunning ( ) && Params ( ) . OptReconfig ( )		4686258	0		&&			
ANR	4686287	CallExpression	IsRunning ( )		4686258	0					
ANR	4686288	Callee	IsRunning		4686258	0					
ANR	4686289	Identifier	IsRunning		4686258	0					
ANR	4686290	ArgumentList			4686258	1					
ANR	4686291	CallExpression	Params ( ) . OptReconfig ( )		4686258	1					
ANR	4686292	Callee	Params ( ) . OptReconfig		4686258	0					
ANR	4686293	MemberAccess	Params ( ) . OptReconfig		4686258	0					
ANR	4686294	CallExpression	Params ( )		4686258	0					
ANR	4686295	Callee	Params		4686258	0					
ANR	4686296	Identifier	Params		4686258	0					
ANR	4686297	ArgumentList			4686258	1					
ANR	4686298	Identifier	OptReconfig		4686258	1					
ANR	4686299	ArgumentList			4686258	1					
ANR	4686300	CompoundStatement		9:50:237:237	4686258	1					
ANR	4686301	ReturnStatement	return SendHup ( ) ;	142:2:3472:3489	4686258	0	True				
ANR	4686302	CallExpression	SendHup ( )		4686258	0					
ANR	4686303	Callee	SendHup		4686258	0					
ANR	4686304	Identifier	SendHup		4686258	0					
ANR	4686305	ArgumentList			4686258	1					
ANR	4686306	IfStatement	if ( IsIdle ( ) && ( IsPeriodic ( ) || IsWaitForExit ( ) ) )		4686258	2					
ANR	4686307	Condition	IsIdle ( ) && ( IsPeriodic ( ) || IsWaitForExit ( ) )	146:7:3559:3605	4686258	0	True				
ANR	4686308	AndExpression	IsIdle ( ) && ( IsPeriodic ( ) || IsWaitForExit ( ) )		4686258	0		&&			
ANR	4686309	CallExpression	IsIdle ( )		4686258	0					
ANR	4686310	Callee	IsIdle		4686258	0					
ANR	4686311	Identifier	IsIdle		4686258	0					
ANR	4686312	ArgumentList			4686258	1					
ANR	4686313	OrExpression	IsPeriodic ( ) || IsWaitForExit ( )		4686258	1		||			
ANR	4686314	CallExpression	IsPeriodic ( )		4686258	0					
ANR	4686315	Callee	IsPeriodic		4686258	0					
ANR	4686316	Identifier	IsPeriodic		4686258	0					
ANR	4686317	ArgumentList			4686258	1					
ANR	4686318	CallExpression	IsWaitForExit ( )		4686258	1					
ANR	4686319	Callee	IsWaitForExit		4686258	0					
ANR	4686320	Identifier	IsWaitForExit		4686258	0					
ANR	4686321	ArgumentList			4686258	1					
ANR	4686322	CompoundStatement		20:2:487:502	4686258	1					
ANR	4686323	IfStatement	if ( Period ( ) == m_old_period )		4686258	0					
ANR	4686324	Condition	Period ( ) == m_old_period	147:7:3619:3642	4686258	0	True				
ANR	4686325	EqualityExpression	Period ( ) == m_old_period		4686258	0		==			
ANR	4686326	CallExpression	Period ( )		4686258	0					
ANR	4686327	Callee	Period		4686258	0					
ANR	4686328	Identifier	Period		4686258	0					
ANR	4686329	ArgumentList			4686258	1					
ANR	4686330	Identifier	m_old_period		4686258	1					
ANR	4686331	CompoundStatement		15:34:415:415	4686258	1					
ANR	4686332	ReturnStatement	return 0 ;	148:3:3651:3659	4686258	0	True				
ANR	4686333	PrimaryExpression	0		4686258	0					
ANR	4686334	IdentifierDeclStatement	unsigned now = time ( NULL ) ;	150:2:3667:3692	4686258	1	True				
ANR	4686335	IdentifierDecl	now = time ( NULL )		4686258	0					
ANR	4686336	IdentifierDeclType	unsigned		4686258	0					
ANR	4686337	Identifier	now		4686258	1					
ANR	4686338	AssignmentExpression	now = time ( NULL )		4686258	2		=			
ANR	4686339	Identifier	now		4686258	0					
ANR	4686340	CallExpression	time ( NULL )		4686258	1					
ANR	4686341	Callee	time		4686258	0					
ANR	4686342	Identifier	time		4686258	0					
ANR	4686343	ArgumentList	NULL		4686258	1					
ANR	4686344	Argument	NULL		4686258	0					
ANR	4686345	Identifier	NULL		4686258	0					
ANR	4686346	IdentifierDeclStatement	unsigned last_time ;	151:2:3696:3714	4686258	2	True				
ANR	4686347	IdentifierDecl	last_time		4686258	0					
ANR	4686348	IdentifierDeclType	unsigned		4686258	0					
ANR	4686349	Identifier	last_time		4686258	1					
ANR	4686350	IdentifierDeclStatement	unsigned period ;	152:2:3718:3733	4686258	3	True				
ANR	4686351	IdentifierDecl	period		4686258	0					
ANR	4686352	IdentifierDeclType	unsigned		4686258	0					
ANR	4686353	Identifier	period		4686258	1					
ANR	4686354	IfStatement	if ( IsPeriodic ( ) )		4686258	4					
ANR	4686355	Condition	IsPeriodic ( )	153:7:3742:3753	4686258	0	True				
ANR	4686356	CallExpression	IsPeriodic ( )		4686258	0					
ANR	4686357	Callee	IsPeriodic		4686258	0					
ANR	4686358	Identifier	IsPeriodic		4686258	0					
ANR	4686359	ArgumentList			4686258	1					
ANR	4686360	CompoundStatement		21:22:526:526	4686258	1					
ANR	4686361	ExpressionStatement	last_time = m_last_start_time	154:3:3762:3791	4686258	0	True				
ANR	4686362	AssignmentExpression	last_time = m_last_start_time		4686258	0		=			
ANR	4686363	Identifier	last_time		4686258	0					
ANR	4686364	Identifier	m_last_start_time		4686258	1					
ANR	4686365	ExpressionStatement	period = Period ( )	155:3:3796:3813	4686258	1	True				
ANR	4686366	AssignmentExpression	period = Period ( )		4686258	0		=			
ANR	4686367	Identifier	period		4686258	0					
ANR	4686368	CallExpression	Period ( )		4686258	1					
ANR	4686369	Callee	Period		4686258	0					
ANR	4686370	Identifier	Period		4686258	0					
ANR	4686371	ArgumentList			4686258	1					
ANR	4686372	ElseStatement	else		4686258	0					
ANR	4686373	CompoundStatement		25:7:595:595	4686258	0					
ANR	4686374	ExpressionStatement	last_time = m_last_exit_time	158:3:3831:3859	4686258	0	True				
ANR	4686375	AssignmentExpression	last_time = m_last_exit_time		4686258	0		=			
ANR	4686376	Identifier	last_time		4686258	0					
ANR	4686377	Identifier	m_last_exit_time		4686258	1					
ANR	4686378	ExpressionStatement	period = TIMER_NEVER	159:3:3864:3884	4686258	1	True				
ANR	4686379	AssignmentExpression	period = TIMER_NEVER		4686258	0		=			
ANR	4686380	Identifier	period		4686258	0					
ANR	4686381	Identifier	TIMER_NEVER		4686258	1					
ANR	4686382	IfStatement	if ( last_time + Period ( ) < now )		4686258	5					
ANR	4686383	Condition	last_time + Period ( ) < now	163:7:3952:3977	4686258	0	True				
ANR	4686384	RelationalExpression	last_time + Period ( ) < now		4686258	0		<			
ANR	4686385	AdditiveExpression	last_time + Period ( )		4686258	0		+			
ANR	4686386	Identifier	last_time		4686258	0					
ANR	4686387	CallExpression	Period ( )		4686258	1					
ANR	4686388	Callee	Period		4686258	0					
ANR	4686389	Identifier	Period		4686258	0					
ANR	4686390	ArgumentList			4686258	1					
ANR	4686391	Identifier	now		4686258	1					
ANR	4686392	CompoundStatement		31:36:750:750	4686258	1					
ANR	4686393	ExpressionStatement	CancelRunTimer ( )	164:3:3986:4003	4686258	0	True				
ANR	4686394	CallExpression	CancelRunTimer ( )		4686258	0					
ANR	4686395	Callee	CancelRunTimer		4686258	0					
ANR	4686396	Identifier	CancelRunTimer		4686258	0					
ANR	4686397	ArgumentList			4686258	1					
ANR	4686398	ExpressionStatement	SetState ( CRON_READY )	165:3:4008:4030	4686258	1	True				
ANR	4686399	CallExpression	SetState ( CRON_READY )		4686258	0					
ANR	4686400	Callee	SetState		4686258	0					
ANR	4686401	Identifier	SetState		4686258	0					
ANR	4686402	ArgumentList	CRON_READY		4686258	1					
ANR	4686403	Argument	CRON_READY		4686258	0					
ANR	4686404	Identifier	CRON_READY		4686258	0					
ANR	4686405	IfStatement	if ( IsPeriodic ( ) )		4686258	2					
ANR	4686406	Condition	IsPeriodic ( )	166:8:4040:4051	4686258	0	True				
ANR	4686407	CallExpression	IsPeriodic ( )		4686258	0					
ANR	4686408	Callee	IsPeriodic		4686258	0					
ANR	4686409	Identifier	IsPeriodic		4686258	0					
ANR	4686410	ArgumentList			4686258	1					
ANR	4686411	CompoundStatement		34:24:825:825	4686258	1					
ANR	4686412	ReturnStatement	"return SetTimer ( Period ( ) , period ) ;"	167:4:4062:4097	4686258	0	True				
ANR	4686413	CallExpression	"SetTimer ( Period ( ) , period )"		4686258	0					
ANR	4686414	Callee	SetTimer		4686258	0					
ANR	4686415	Identifier	SetTimer		4686258	0					
ANR	4686416	ArgumentList	Period ( )		4686258	1					
ANR	4686417	Argument	Period ( )		4686258	0					
ANR	4686418	CallExpression	Period ( )		4686258	0					
ANR	4686419	Callee	Period		4686258	0					
ANR	4686420	Identifier	Period		4686258	0					
ANR	4686421	ArgumentList			4686258	1					
ANR	4686422	Argument	period		4686258	1					
ANR	4686423	Identifier	period		4686258	0					
ANR	4686424	ReturnStatement	return 0 ;	169:3:4107:4115	4686258	3	True				
ANR	4686425	PrimaryExpression	0		4686258	0					
ANR	4686426	ElseStatement	else		4686258	0					
ANR	4686427	CompoundStatement		39:7:897:897	4686258	0					
ANR	4686428	ReturnStatement	"return SetTimer ( last_time + Period ( ) - now , period ) ;"	172:3:4133:4186	4686258	0	True				
ANR	4686429	CallExpression	"SetTimer ( last_time + Period ( ) - now , period )"		4686258	0					
ANR	4686430	Callee	SetTimer		4686258	0					
ANR	4686431	Identifier	SetTimer		4686258	0					
ANR	4686432	ArgumentList	last_time + Period ( ) - now		4686258	1					
ANR	4686433	Argument	last_time + Period ( ) - now		4686258	0					
ANR	4686434	AdditiveExpression	last_time + Period ( ) - now		4686258	0		+			
ANR	4686435	Identifier	last_time		4686258	0					
ANR	4686436	AdditiveExpression	Period ( ) - now		4686258	1		-			
ANR	4686437	CallExpression	Period ( )		4686258	0					
ANR	4686438	Callee	Period		4686258	0					
ANR	4686439	Identifier	Period		4686258	0					
ANR	4686440	ArgumentList			4686258	1					
ANR	4686441	Identifier	now		4686258	1					
ANR	4686442	Argument	period		4686258	1					
ANR	4686443	Identifier	period		4686258	0					
ANR	4686444	ReturnStatement	return 0 ;	176:1:4197:4205	4686258	3	True				
ANR	4686445	PrimaryExpression	0		4686258	0					
ANR	4686446	ReturnType	int		4686258	1					
ANR	4686447	Identifier	CronJob :: HandleReconfig		4686258	2					
ANR	4686448	ParameterList			4686258	3					
ANR	4686449	CFGEntryNode	ENTRY		4686258		True				
ANR	4686450	CFGExitNode	EXIT		4686258		True				
ANR	4686451	Symbol	SendHup		4686258						
ANR	4686452	Symbol	period		4686258						
ANR	4686453	Symbol	m_last_start_time		4686258						
ANR	4686454	Symbol	IsPeriodic		4686258						
ANR	4686455	Symbol	NULL		4686258						
ANR	4686456	Symbol	m_num_runs		4686258						
ANR	4686457	Symbol	IsRunning		4686258						
ANR	4686458	Symbol	Params		4686258						
ANR	4686459	Symbol	Period		4686258						
ANR	4686460	Symbol	Params ( ) . OptReconfig		4686258						
ANR	4686461	Symbol	m_old_period		4686258						
ANR	4686462	Symbol	Params ( ) . OptReconfigRerun		4686258						
ANR	4686463	Symbol	CRON_READY		4686258						
ANR	4686464	Symbol	last_time		4686258						
ANR	4686465	Symbol	IsIdle		4686258						
ANR	4686466	Symbol	now		4686258						
ANR	4686467	Symbol	SetTimer		4686258						
ANR	4686468	Symbol	time		4686258						
ANR	4686469	Symbol	m_last_exit_time		4686258						
ANR	4686470	Symbol	TIMER_NEVER		4686258						
ANR	4686471	Symbol	IsWaitForExit		4686258						
ANR	4686472	Function	CronJob :: Schedule	180:0:4229:5444							
ANR	4686473	FunctionDef	CronJob :: Schedule ()		4686472	0					
ANR	4686474	CompoundStatement		182:0:4259:5444	4686472	0					
ANR	4686475	Statement	dprintf	183:1:4262:4268	4686472	0	True				
ANR	4686476	Statement	(	183:8:4269:4269	4686472	1	True				
ANR	4686477	Statement	D_FULLDEBUG	183:10:4271:4281	4686472	2	True				
ANR	4686478	Statement	","	183:21:4282:4282	4686472	3	True				
ANR	4686479	Statement	"""CronJob::Schedule '%s' """	184:4:4288:4312	4686472	4	True				
ANR	4686480	Statement	"""IR=%c IP=%c IWE=%c IOS=%c IOD=%c nr=%d nf=%d\\n"""	185:4:4318:4365	4686472	5	True				
ANR	4686481	Statement	","	185:52:4366:4366	4686472	6	True				
ANR	4686482	Statement	GetName	186:4:4372:4378	4686472	7	True				
ANR	4686483	Statement	(	186:11:4379:4379	4686472	8	True				
ANR	4686484	Statement	)	186:12:4380:4380	4686472	9	True				
ANR	4686485	Statement	","	186:13:4381:4381	4686472	10	True				
ANR	4686486	Statement	IsReady	187:4:4387:4393	4686472	11	True				
ANR	4686487	Statement	(	187:11:4394:4394	4686472	12	True				
ANR	4686488	Statement	)	187:12:4395:4395	4686472	13	True				
ANR	4686489	Statement	?	187:14:4397:4397	4686472	14	True				
ANR	4686490	Label	'T' :	187:16:4399:4403	4686472	15	True				
ANR	4686491	Statement	'F'	187:22:4405:4407	4686472	16	True				
ANR	4686492	Statement	","	187:25:4408:4408	4686472	17	True				
ANR	4686493	Statement	IsPeriodic	188:4:4414:4423	4686472	18	True				
ANR	4686494	Statement	(	188:14:4424:4424	4686472	19	True				
ANR	4686495	Statement	)	188:15:4425:4425	4686472	20	True				
ANR	4686496	Statement	?	188:17:4427:4427	4686472	21	True				
ANR	4686497	Label	'T' :	188:19:4429:4433	4686472	22	True				
ANR	4686498	Statement	'F'	188:25:4435:4437	4686472	23	True				
ANR	4686499	Statement	","	188:28:4438:4438	4686472	24	True				
ANR	4686500	Statement	IsWaitForExit	189:4:4444:4456	4686472	25	True				
ANR	4686501	Statement	(	189:17:4457:4457	4686472	26	True				
ANR	4686502	Statement	)	189:18:4458:4458	4686472	27	True				
ANR	4686503	Statement	?	189:20:4460:4460	4686472	28	True				
ANR	4686504	Label	'T' :	189:22:4462:4466	4686472	29	True				
ANR	4686505	Statement	'F'	189:28:4468:4470	4686472	30	True				
ANR	4686506	Statement	","	189:31:4471:4471	4686472	31	True				
ANR	4686507	Statement	IsOneShot	190:4:4477:4485	4686472	32	True				
ANR	4686508	Statement	(	190:13:4486:4486	4686472	33	True				
ANR	4686509	Statement	)	190:14:4487:4487	4686472	34	True				
ANR	4686510	Statement	?	190:16:4489:4489	4686472	35	True				
ANR	4686511	Label	'T' :	190:18:4491:4495	4686472	36	True				
ANR	4686512	Statement	'F'	190:24:4497:4499	4686472	37	True				
ANR	4686513	Statement	","	190:27:4500:4500	4686472	38	True				
ANR	4686514	Statement	IsOnDemand	191:4:4506:4515	4686472	39	True				
ANR	4686515	Statement	(	191:14:4516:4516	4686472	40	True				
ANR	4686516	Statement	)	191:15:4517:4517	4686472	41	True				
ANR	4686517	Statement	?	191:17:4519:4519	4686472	42	True				
ANR	4686518	Label	'T' :	191:19:4521:4525	4686472	43	True				
ANR	4686519	Statement	'F'	191:25:4527:4529	4686472	44	True				
ANR	4686520	Statement	","	191:28:4530:4530	4686472	45	True				
ANR	4686521	Statement	m_num_runs	192:4:4536:4545	4686472	46	True				
ANR	4686522	Statement	","	192:14:4546:4546	4686472	47	True				
ANR	4686523	Statement	m_num_fails	193:4:4552:4562	4686472	48	True				
ANR	4686524	Statement	)	193:16:4564:4564	4686472	49	True				
ANR	4686525	ExpressionStatement		193:17:4565:4565	4686472	50	True				
ANR	4686526	IfStatement	if ( ! IsInitialized ( ) )		4686472	51					
ANR	4686527	Condition	! IsInitialized ( )	196:6:4622:4638	4686472	0	True				
ANR	4686528	UnaryOperationExpression	! IsInitialized ( )		4686472	0					
ANR	4686529	UnaryOperator	!		4686472	0					
ANR	4686530	CallExpression	IsInitialized ( )		4686472	1					
ANR	4686531	Callee	IsInitialized		4686472	0					
ANR	4686532	Identifier	IsInitialized		4686472	0					
ANR	4686533	ArgumentList			4686472	1					
ANR	4686534	CompoundStatement		15:26:382:382	4686472	1					
ANR	4686535	ReturnStatement	return 0 ;	197:2:4646:4654	4686472	0	True				
ANR	4686536	PrimaryExpression	0		4686472	0					
ANR	4686537	IdentifierDeclStatement	int status = 0 ;	201:1:4696:4710	4686472	52	True				
ANR	4686538	IdentifierDecl	status = 0		4686472	0					
ANR	4686539	IdentifierDeclType	int		4686472	0					
ANR	4686540	Identifier	status		4686472	1					
ANR	4686541	AssignmentExpression	status = 0		4686472	2		=			
ANR	4686542	Identifier	status		4686472	0					
ANR	4686543	PrimaryExpression	0		4686472	1					
ANR	4686544	IfStatement	if ( IsReady ( ) )		4686472	53					
ANR	4686545	Condition	IsReady ( )	204:6:4771:4779	4686472	0	True				
ANR	4686546	CallExpression	IsReady ( )		4686472	0					
ANR	4686547	Callee	IsReady		4686472	0					
ANR	4686548	Identifier	IsReady		4686472	0					
ANR	4686549	ArgumentList			4686472	1					
ANR	4686550	CompoundStatement		23:18:523:523	4686472	1					
ANR	4686551	ExpressionStatement	status = StartJob ( )	205:2:4787:4807	4686472	0	True				
ANR	4686552	AssignmentExpression	status = StartJob ( )		4686472	0		=			
ANR	4686553	Identifier	status		4686472	0					
ANR	4686554	CallExpression	StartJob ( )		4686472	1					
ANR	4686555	Callee	StartJob		4686472	0					
ANR	4686556	Identifier	StartJob		4686472	0					
ANR	4686557	ArgumentList			4686472	1					
ANR	4686558	ElseStatement	else		4686472	0					
ANR	4686559	IfStatement	if ( IsPeriodic ( ) )		4686472	0					
ANR	4686560	Condition	IsPeriodic ( )	209:11:4860:4871	4686472	0	True				
ANR	4686561	CallExpression	IsPeriodic ( )		4686472	0					
ANR	4686562	Callee	IsPeriodic		4686472	0					
ANR	4686563	Identifier	IsPeriodic		4686472	0					
ANR	4686564	ArgumentList			4686472	1					
ANR	4686565	CompoundStatement		28:26:615:615	4686472	1					
ANR	4686566	IfStatement	if ( ( 0 == m_num_runs ) && ( 0 == m_num_fails ) )		4686472	0					
ANR	4686567	Condition	( 0 == m_num_runs ) && ( 0 == m_num_fails )	212:8:4913:4955	4686472	0	True				
ANR	4686568	AndExpression	( 0 == m_num_runs ) && ( 0 == m_num_fails )		4686472	0		&&			
ANR	4686569	EqualityExpression	0 == m_num_runs		4686472	0		==			
ANR	4686570	PrimaryExpression	0		4686472	0					
ANR	4686571	Identifier	m_num_runs		4686472	1					
ANR	4686572	EqualityExpression	0 == m_num_fails		4686472	1		==			
ANR	4686573	PrimaryExpression	0		4686472	0					
ANR	4686574	Identifier	m_num_fails		4686472	1					
ANR	4686575	CompoundStatement		31:55:700:700	4686472	1					
ANR	4686576	ExpressionStatement	status = RunJob ( )	213:3:4965:4983	4686472	0	True				
ANR	4686577	AssignmentExpression	status = RunJob ( )		4686472	0		=			
ANR	4686578	Identifier	status		4686472	0					
ANR	4686579	CallExpression	RunJob ( )		4686472	1					
ANR	4686580	Callee	RunJob		4686472	0					
ANR	4686581	Identifier	RunJob		4686472	0					
ANR	4686582	ArgumentList			4686472	1					
ANR	4686583	ElseStatement	else		4686472	0					
ANR	4686584	IfStatement	if ( IsWaitForExit ( ) )		4686472	0					
ANR	4686585	Condition	IsWaitForExit ( )	218:11:5049:5063	4686472	0	True				
ANR	4686586	CallExpression	IsWaitForExit ( )		4686472	0					
ANR	4686587	Callee	IsWaitForExit		4686472	0					
ANR	4686588	Identifier	IsWaitForExit		4686472	0					
ANR	4686589	ArgumentList			4686472	1					
ANR	4686590	CompoundStatement		37:29:807:807	4686472	1					
ANR	4686591	IfStatement	if ( ( 0 == m_num_runs ) && ( 0 == m_num_fails ) )		4686472	0					
ANR	4686592	Condition	( 0 == m_num_runs ) && ( 0 == m_num_fails )	219:8:5077:5119	4686472	0	True				
ANR	4686593	AndExpression	( 0 == m_num_runs ) && ( 0 == m_num_fails )		4686472	0		&&			
ANR	4686594	EqualityExpression	0 == m_num_runs		4686472	0		==			
ANR	4686595	PrimaryExpression	0		4686472	0					
ANR	4686596	Identifier	m_num_runs		4686472	1					
ANR	4686597	EqualityExpression	0 == m_num_fails		4686472	1		==			
ANR	4686598	PrimaryExpression	0		4686472	0					
ANR	4686599	Identifier	m_num_fails		4686472	1					
ANR	4686600	CompoundStatement		38:55:864:864	4686472	1					
ANR	4686601	ExpressionStatement	status = StartJob ( )	220:3:5129:5149	4686472	0	True				
ANR	4686602	AssignmentExpression	status = StartJob ( )		4686472	0		=			
ANR	4686603	Identifier	status		4686472	0					
ANR	4686604	CallExpression	StartJob ( )		4686472	1					
ANR	4686605	Callee	StartJob		4686472	0					
ANR	4686606	Identifier	StartJob		4686472	0					
ANR	4686607	ArgumentList			4686472	1					
ANR	4686608	ElseStatement	else		4686472	0					
ANR	4686609	IfStatement	if ( IsOneShot ( ) )		4686472	0					
ANR	4686610	Condition	IsOneShot ( )	225:11:5229:5239	4686472	0	True				
ANR	4686611	CallExpression	IsOneShot ( )		4686472	0					
ANR	4686612	Callee	IsOneShot		4686472	0					
ANR	4686613	Identifier	IsOneShot		4686472	0					
ANR	4686614	ArgumentList			4686472	1					
ANR	4686615	CompoundStatement		44:25:983:983	4686472	1					
ANR	4686616	IfStatement	if ( ( 0 == m_num_runs ) && ( 0 == m_num_fails ) )		4686472	0					
ANR	4686617	Condition	( 0 == m_num_runs ) && ( 0 == m_num_fails )	226:8:5253:5295	4686472	0	True				
ANR	4686618	AndExpression	( 0 == m_num_runs ) && ( 0 == m_num_fails )		4686472	0		&&			
ANR	4686619	EqualityExpression	0 == m_num_runs		4686472	0		==			
ANR	4686620	PrimaryExpression	0		4686472	0					
ANR	4686621	Identifier	m_num_runs		4686472	1					
ANR	4686622	EqualityExpression	0 == m_num_fails		4686472	1		==			
ANR	4686623	PrimaryExpression	0		4686472	0					
ANR	4686624	Identifier	m_num_fails		4686472	1					
ANR	4686625	CompoundStatement		45:55:1040:1040	4686472	1					
ANR	4686626	ExpressionStatement	status = StartJob ( )	227:3:5305:5325	4686472	0	True				
ANR	4686627	AssignmentExpression	status = StartJob ( )		4686472	0		=			
ANR	4686628	Identifier	status		4686472	0					
ANR	4686629	CallExpression	StartJob ( )		4686472	1					
ANR	4686630	Callee	StartJob		4686472	0					
ANR	4686631	Identifier	StartJob		4686472	0					
ANR	4686632	ArgumentList			4686472	1					
ANR	4686633	ElseStatement	else		4686472	0					
ANR	4686634	IfStatement	if ( IsOnDemand ( ) )		4686472	0					
ANR	4686635	Condition	IsOnDemand ( )	232:11:5365:5376	4686472	0	True				
ANR	4686636	CallExpression	IsOnDemand ( )		4686472	0					
ANR	4686637	Callee	IsOnDemand		4686472	0					
ANR	4686638	Identifier	IsOnDemand		4686472	0					
ANR	4686639	ArgumentList			4686472	1					
ANR	4686640	CompoundStatement		51:26:1120:1120	4686472	1					
ANR	4686641	ReturnStatement	return status ;	237:1:5429:5442	4686472	54	True				
ANR	4686642	Identifier	status		4686472	0					
ANR	4686643	ReturnType	int		4686472	1					
ANR	4686644	Identifier	CronJob :: Schedule		4686472	2					
ANR	4686645	ParameterList			4686472	3					
ANR	4686646	CFGEntryNode	ENTRY		4686472		True				
ANR	4686647	CFGExitNode	EXIT		4686472		True				
ANR	4686648	Symbol	IsOnDemand		4686472						
ANR	4686649	Symbol	IsPeriodic		4686472						
ANR	4686650	Symbol	RunJob		4686472						
ANR	4686651	Symbol	IsOneShot		4686472						
ANR	4686652	Symbol	m_num_runs		4686472						
ANR	4686653	Symbol	m_num_fails		4686472						
ANR	4686654	Symbol	IsInitialized		4686472						
ANR	4686655	Symbol	StartJob		4686472						
ANR	4686656	Symbol	IsReady		4686472						
ANR	4686657	Symbol	IsWaitForExit		4686472						
ANR	4686658	Symbol	status		4686472						
ANR	4686659	Function	CronJob :: StartOnDemand	241:0:5473:5607							
ANR	4686660	FunctionDef	CronJob :: StartOnDemand ()		4686659	0					
ANR	4686661	CompoundStatement		243:0:5508:5607	4686659	0					
ANR	4686662	IfStatement	if ( IsOnDemand ( ) && IsIdle ( ) )		4686659	0					
ANR	4686663	Condition	IsOnDemand ( ) && IsIdle ( )	244:6:5516:5539	4686659	0	True				
ANR	4686664	AndExpression	IsOnDemand ( ) && IsIdle ( )		4686659	0		&&			
ANR	4686665	CallExpression	IsOnDemand ( )		4686659	0					
ANR	4686666	Callee	IsOnDemand		4686659	0					
ANR	4686667	Identifier	IsOnDemand		4686659	0					
ANR	4686668	ArgumentList			4686659	1					
ANR	4686669	CallExpression	IsIdle ( )		4686659	1					
ANR	4686670	Callee	IsIdle		4686659	0					
ANR	4686671	Identifier	IsIdle		4686659	0					
ANR	4686672	ArgumentList			4686659	1					
ANR	4686673	CompoundStatement		2:33:34:34	4686659	1					
ANR	4686674	ExpressionStatement	SetState ( CRON_READY )	245:2:5547:5569	4686659	0	True				
ANR	4686675	CallExpression	SetState ( CRON_READY )		4686659	0					
ANR	4686676	Callee	SetState		4686659	0					
ANR	4686677	Identifier	SetState		4686659	0					
ANR	4686678	ArgumentList	CRON_READY		4686659	1					
ANR	4686679	Argument	CRON_READY		4686659	0					
ANR	4686680	Identifier	CRON_READY		4686659	0					
ANR	4686681	ReturnStatement	return StartJob ( ) ;	246:2:5573:5591	4686659	1	True				
ANR	4686682	CallExpression	StartJob ( )		4686659	0					
ANR	4686683	Callee	StartJob		4686659	0					
ANR	4686684	Identifier	StartJob		4686659	0					
ANR	4686685	ArgumentList			4686659	1					
ANR	4686686	ReturnStatement	return 0 ;	248:1:5597:5605	4686659	1	True				
ANR	4686687	PrimaryExpression	0		4686659	0					
ANR	4686688	ReturnType	int		4686659	1					
ANR	4686689	Identifier	CronJob :: StartOnDemand		4686659	2					
ANR	4686690	ParameterList			4686659	3					
ANR	4686691	CFGEntryNode	ENTRY		4686659		True				
ANR	4686692	CFGExitNode	EXIT		4686659		True				
ANR	4686693	Symbol	IsOnDemand		4686659						
ANR	4686694	Symbol	CRON_READY		4686659						
ANR	4686695	Symbol	IsIdle		4686659						
ANR	4686696	Symbol	StartJob		4686659						
ANR	4686697	Function	CronJob :: SendHup	252:0:5629:6244							
ANR	4686698	FunctionDef	CronJob :: SendHup ()		4686697	0					
ANR	4686699	CompoundStatement		254:0:5658:6244	4686697	0					
ANR	4686700	IfStatement	if ( ! m_num_outputs )		4686697	0					
ANR	4686701	Condition	! m_num_outputs	257:6:5721:5735	4686697	0	True				
ANR	4686702	UnaryOperationExpression	! m_num_outputs		4686697	0					
ANR	4686703	UnaryOperator	!		4686697	0					
ANR	4686704	Identifier	m_num_outputs		4686697	1					
ANR	4686705	CompoundStatement		4:24:80:80	4686697	1					
ANR	4686706	ExpressionStatement	"dprintf ( D_ALWAYS , ""Not HUPing '%s' pid %d before it's first output\\n"" , GetName ( ) , m_pid )"	258:2:5743:5843	4686697	0	True				
ANR	4686707	CallExpression	"dprintf ( D_ALWAYS , ""Not HUPing '%s' pid %d before it's first output\\n"" , GetName ( ) , m_pid )"		4686697	0					
ANR	4686708	Callee	dprintf		4686697	0					
ANR	4686709	Identifier	dprintf		4686697	0					
ANR	4686710	ArgumentList	D_ALWAYS		4686697	1					
ANR	4686711	Argument	D_ALWAYS		4686697	0					
ANR	4686712	Identifier	D_ALWAYS		4686697	0					
ANR	4686713	Argument	"""Not HUPing '%s' pid %d before it's first output\\n"""		4686697	1					
ANR	4686714	PrimaryExpression	"""Not HUPing '%s' pid %d before it's first output\\n"""		4686697	0					
ANR	4686715	Argument	GetName ( )		4686697	2					
ANR	4686716	CallExpression	GetName ( )		4686697	0					
ANR	4686717	Callee	GetName		4686697	0					
ANR	4686718	Identifier	GetName		4686697	0					
ANR	4686719	ArgumentList			4686697	1					
ANR	4686720	Argument	m_pid		4686697	3					
ANR	4686721	Identifier	m_pid		4686697	0					
ANR	4686722	ReturnStatement	return 0 ;	261:2:5847:5855	4686697	1	True				
ANR	4686723	PrimaryExpression	0		4686697	0					
ANR	4686724	IfStatement	if ( m_pid <= 0 )		4686697	1					
ANR	4686725	Condition	m_pid <= 0	265:6:5904:5913	4686697	0	True				
ANR	4686726	RelationalExpression	m_pid <= 0		4686697	0		<=			
ANR	4686727	Identifier	m_pid		4686697	0					
ANR	4686728	PrimaryExpression	0		4686697	1					
ANR	4686729	CompoundStatement		12:19:258:258	4686697	1					
ANR	4686730	ReturnStatement	return 0 ;	266:2:5921:5929	4686697	0	True				
ANR	4686731	PrimaryExpression	0		4686697	0					
ANR	4686732	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Sending HUP to '%s' pid %d\\n"" , GetName ( ) , m_pid )"	272:1:6110:6192	4686697	2	True				
ANR	4686733	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Sending HUP to '%s' pid %d\\n"" , GetName ( ) , m_pid )"		4686697	0					
ANR	4686734	Callee	dprintf		4686697	0					
ANR	4686735	Identifier	dprintf		4686697	0					
ANR	4686736	ArgumentList	D_ALWAYS		4686697	1					
ANR	4686737	Argument	D_ALWAYS		4686697	0					
ANR	4686738	Identifier	D_ALWAYS		4686697	0					
ANR	4686739	Argument	"""CronJob: Sending HUP to '%s' pid %d\\n"""		4686697	1					
ANR	4686740	PrimaryExpression	"""CronJob: Sending HUP to '%s' pid %d\\n"""		4686697	0					
ANR	4686741	Argument	GetName ( )		4686697	2					
ANR	4686742	CallExpression	GetName ( )		4686697	0					
ANR	4686743	Callee	GetName		4686697	0					
ANR	4686744	Identifier	GetName		4686697	0					
ANR	4686745	ArgumentList			4686697	1					
ANR	4686746	Argument	m_pid		4686697	3					
ANR	4686747	Identifier	m_pid		4686697	0					
ANR	4686748	ReturnStatement	"return daemonCore -> Send_Signal ( m_pid , SIGHUP ) ;"	274:1:6195:6242	4686697	3	True				
ANR	4686749	CallExpression	"daemonCore -> Send_Signal ( m_pid , SIGHUP )"		4686697	0					
ANR	4686750	Callee	daemonCore -> Send_Signal		4686697	0					
ANR	4686751	PtrMemberAccess	daemonCore -> Send_Signal		4686697	0					
ANR	4686752	Identifier	daemonCore		4686697	0					
ANR	4686753	Identifier	Send_Signal		4686697	1					
ANR	4686754	ArgumentList	m_pid		4686697	1					
ANR	4686755	Argument	m_pid		4686697	0					
ANR	4686756	Identifier	m_pid		4686697	0					
ANR	4686757	Argument	SIGHUP		4686697	1					
ANR	4686758	Identifier	SIGHUP		4686697	0					
ANR	4686759	ReturnType	int		4686697	1					
ANR	4686760	Identifier	CronJob :: SendHup		4686697	2					
ANR	4686761	ParameterList			4686697	3					
ANR	4686762	CFGEntryNode	ENTRY		4686697		True				
ANR	4686763	CFGExitNode	EXIT		4686697		True				
ANR	4686764	Symbol	daemonCore -> Send_Signal		4686697						
ANR	4686765	Symbol	m_pid		4686697						
ANR	4686766	Symbol	* daemonCore		4686697						
ANR	4686767	Symbol	m_num_outputs		4686697						
ANR	4686768	Symbol	daemonCore		4686697						
ANR	4686769	Symbol	D_ALWAYS		4686697						
ANR	4686770	Symbol	GetName		4686697						
ANR	4686771	Symbol	SIGHUP		4686697						
ANR	4686772	Function	CronJob :: RunJob	278:0:6275:6641							
ANR	4686773	FunctionDef	CronJob :: RunJob ()		4686772	0					
ANR	4686774	CompoundStatement		280:0:6303:6641	4686772	0					
ANR	4686775	IfStatement	if ( IsAlive ( ) )		4686772	0					
ANR	4686776	Condition	IsAlive ( )	283:6:6365:6373	4686772	0	True				
ANR	4686777	CallExpression	IsAlive ( )		4686772	0					
ANR	4686778	Callee	IsAlive		4686772	0					
ANR	4686779	Identifier	IsAlive		4686772	0					
ANR	4686780	ArgumentList			4686772	1					
ANR	4686781	CompoundStatement		4:18:73:73	4686772	1					
ANR	4686782	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Job '%s' is still running!\\n"" , GetName ( ) )"	284:2:6381:6457	4686772	0	True				
ANR	4686783	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Job '%s' is still running!\\n"" , GetName ( ) )"		4686772	0					
ANR	4686784	Callee	dprintf		4686772	0					
ANR	4686785	Identifier	dprintf		4686772	0					
ANR	4686786	ArgumentList	D_ALWAYS		4686772	1					
ANR	4686787	Argument	D_ALWAYS		4686772	0					
ANR	4686788	Identifier	D_ALWAYS		4686772	0					
ANR	4686789	Argument	"""CronJob: Job '%s' is still running!\\n"""		4686772	1					
ANR	4686790	PrimaryExpression	"""CronJob: Job '%s' is still running!\\n"""		4686772	0					
ANR	4686791	Argument	GetName ( )		4686772	2					
ANR	4686792	CallExpression	GetName ( )		4686772	0					
ANR	4686793	Callee	GetName		4686772	0					
ANR	4686794	Identifier	GetName		4686772	0					
ANR	4686795	ArgumentList			4686772	1					
ANR	4686796	IfStatement	if ( Params ( ) . OptKill ( ) )		4686772	1					
ANR	4686797	Condition	Params ( ) . OptKill ( )	288:7:6536:6553	4686772	0	True				
ANR	4686798	CallExpression	Params ( ) . OptKill ( )		4686772	0					
ANR	4686799	Callee	Params ( ) . OptKill		4686772	0					
ANR	4686800	MemberAccess	Params ( ) . OptKill		4686772	0					
ANR	4686801	CallExpression	Params ( )		4686772	0					
ANR	4686802	Callee	Params		4686772	0					
ANR	4686803	Identifier	Params		4686772	0					
ANR	4686804	ArgumentList			4686772	1					
ANR	4686805	Identifier	OptKill		4686772	1					
ANR	4686806	ArgumentList			4686772	1					
ANR	4686807	CompoundStatement		9:28:253:253	4686772	1					
ANR	4686808	ReturnStatement	return KillJob ( false ) ;	289:3:6562:6585	4686772	0	True				
ANR	4686809	CallExpression	KillJob ( false )		4686772	0					
ANR	4686810	Callee	KillJob		4686772	0					
ANR	4686811	Identifier	KillJob		4686772	0					
ANR	4686812	ArgumentList	false		4686772	1					
ANR	4686813	Argument	false		4686772	0					
ANR	4686814	Identifier	false		4686772	0					
ANR	4686815	ElseStatement	else		4686772	0					
ANR	4686816	CompoundStatement		11:9:292:292	4686772	0					
ANR	4686817	ReturnStatement	return - 1 ;	291:3:6601:6610	4686772	0	True				
ANR	4686818	UnaryOperationExpression	- 1		4686772	0					
ANR	4686819	UnaryOperator	-		4686772	0					
ANR	4686820	PrimaryExpression	1		4686772	1					
ANR	4686821	ReturnStatement	return StartJob ( ) ;	295:1:6621:6639	4686772	1	True				
ANR	4686822	CallExpression	StartJob ( )		4686772	0					
ANR	4686823	Callee	StartJob		4686772	0					
ANR	4686824	Identifier	StartJob		4686772	0					
ANR	4686825	ArgumentList			4686772	1					
ANR	4686826	ReturnType	int		4686772	1					
ANR	4686827	Identifier	CronJob :: RunJob		4686772	2					
ANR	4686828	ParameterList			4686772	3					
ANR	4686829	CFGEntryNode	ENTRY		4686772		True				
ANR	4686830	CFGExitNode	EXIT		4686772		True				
ANR	4686831	Symbol	D_ALWAYS		4686772						
ANR	4686832	Symbol	false		4686772						
ANR	4686833	Symbol	IsAlive		4686772						
ANR	4686834	Symbol	Params		4686772						
ANR	4686835	Symbol	GetName		4686772						
ANR	4686836	Symbol	KillJob		4686772						
ANR	4686837	Symbol	Params ( ) . OptKill		4686772						
ANR	4686838	Symbol	StartJob		4686772						
ANR	4686839	Function	CronJob :: StartJob	299:0:6659:7293							
ANR	4686840	FunctionDef	CronJob :: StartJob ()		4686839	0					
ANR	4686841	CompoundStatement		301:0:6689:7293	4686839	0					
ANR	4686842	IfStatement	if ( ! IsIdle ( ) && ! IsReady ( ) )		4686839	0					
ANR	4686843	Condition	! IsIdle ( ) && ! IsReady ( )	303:6:6714:6736	4686839	0	True				
ANR	4686844	AndExpression	! IsIdle ( ) && ! IsReady ( )		4686839	0		&&			
ANR	4686845	UnaryOperationExpression	! IsIdle ( )		4686839	0					
ANR	4686846	UnaryOperator	!		4686839	0					
ANR	4686847	CallExpression	IsIdle ( )		4686839	1					
ANR	4686848	Callee	IsIdle		4686839	0					
ANR	4686849	Identifier	IsIdle		4686839	0					
ANR	4686850	ArgumentList			4686839	1					
ANR	4686851	UnaryOperationExpression	! IsReady ( )		4686839	1					
ANR	4686852	UnaryOperator	!		4686839	0					
ANR	4686853	CallExpression	IsReady ( )		4686839	1					
ANR	4686854	Callee	IsReady		4686839	0					
ANR	4686855	Identifier	IsReady		4686839	0					
ANR	4686856	ArgumentList			4686839	1					
ANR	4686857	CompoundStatement		3:32:50:50	4686839	1					
ANR	4686858	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Job '%s' not idle!\\n"" , GetName ( ) )"	304:2:6744:6807	4686839	0	True				
ANR	4686859	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Job '%s' not idle!\\n"" , GetName ( ) )"		4686839	0					
ANR	4686860	Callee	dprintf		4686839	0					
ANR	4686861	Identifier	dprintf		4686839	0					
ANR	4686862	ArgumentList	D_ALWAYS		4686839	1					
ANR	4686863	Argument	D_ALWAYS		4686839	0					
ANR	4686864	Identifier	D_ALWAYS		4686839	0					
ANR	4686865	Argument	"""CronJob: Job '%s' not idle!\\n"""		4686839	1					
ANR	4686866	PrimaryExpression	"""CronJob: Job '%s' not idle!\\n"""		4686839	0					
ANR	4686867	Argument	GetName ( )		4686839	2					
ANR	4686868	CallExpression	GetName ( )		4686839	0					
ANR	4686869	Callee	GetName		4686839	0					
ANR	4686870	Identifier	GetName		4686839	0					
ANR	4686871	ArgumentList			4686839	1					
ANR	4686872	ReturnStatement	return 0 ;	305:2:6811:6819	4686839	1	True				
ANR	4686873	PrimaryExpression	0		4686839	0					
ANR	4686874	IfStatement	if ( ! m_mgr . ShouldStartJob ( * this ) )		4686839	1					
ANR	4686875	Condition	! m_mgr . ShouldStartJob ( * this )	309:6:6855:6885	4686839	0	True				
ANR	4686876	UnaryOperationExpression	! m_mgr . ShouldStartJob ( * this )		4686839	0					
ANR	4686877	UnaryOperator	!		4686839	0					
ANR	4686878	CallExpression	m_mgr . ShouldStartJob ( * this )		4686839	1					
ANR	4686879	Callee	m_mgr . ShouldStartJob		4686839	0					
ANR	4686880	MemberAccess	m_mgr . ShouldStartJob		4686839	0					
ANR	4686881	Identifier	m_mgr		4686839	0					
ANR	4686882	Identifier	ShouldStartJob		4686839	1					
ANR	4686883	ArgumentList	* this		4686839	1					
ANR	4686884	Argument	* this		4686839	0					
ANR	4686885	UnaryOperationExpression	* this		4686839	0					
ANR	4686886	UnaryOperator	*		4686839	0					
ANR	4686887	Identifier	this		4686839	1					
ANR	4686888	CompoundStatement		9:40:199:199	4686839	1					
ANR	4686889	ExpressionStatement	SetState ( CRON_READY )	310:2:6893:6915	4686839	0	True				
ANR	4686890	CallExpression	SetState ( CRON_READY )		4686839	0					
ANR	4686891	Callee	SetState		4686839	0					
ANR	4686892	Identifier	SetState		4686839	0					
ANR	4686893	ArgumentList	CRON_READY		4686839	1					
ANR	4686894	Argument	CRON_READY		4686839	0					
ANR	4686895	Identifier	CRON_READY		4686839	0					
ANR	4686896	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Too busy to run job '%s'\\n"" , GetName ( ) )"	311:2:6919:6996	4686839	1	True				
ANR	4686897	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Too busy to run job '%s'\\n"" , GetName ( ) )"		4686839	0					
ANR	4686898	Callee	dprintf		4686839	0					
ANR	4686899	Identifier	dprintf		4686839	0					
ANR	4686900	ArgumentList	D_FULLDEBUG		4686839	1					
ANR	4686901	Argument	D_FULLDEBUG		4686839	0					
ANR	4686902	Identifier	D_FULLDEBUG		4686839	0					
ANR	4686903	Argument	"""CronJob: Too busy to run job '%s'\\n"""		4686839	1					
ANR	4686904	PrimaryExpression	"""CronJob: Too busy to run job '%s'\\n"""		4686839	0					
ANR	4686905	Argument	GetName ( )		4686839	2					
ANR	4686906	CallExpression	GetName ( )		4686839	0					
ANR	4686907	Callee	GetName		4686839	0					
ANR	4686908	Identifier	GetName		4686839	0					
ANR	4686909	ArgumentList			4686839	1					
ANR	4686910	ReturnStatement	return 0 ;	313:2:7000:7008	4686839	2	True				
ANR	4686911	PrimaryExpression	0		4686839	0					
ANR	4686912	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Starting job '%s' (%s)\\n"" , GetName ( ) , GetExecutable ( ) )"	316:1:7015:7106	4686839	2	True				
ANR	4686913	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Starting job '%s' (%s)\\n"" , GetName ( ) , GetExecutable ( ) )"		4686839	0					
ANR	4686914	Callee	dprintf		4686839	0					
ANR	4686915	Identifier	dprintf		4686839	0					
ANR	4686916	ArgumentList	D_FULLDEBUG		4686839	1					
ANR	4686917	Argument	D_FULLDEBUG		4686839	0					
ANR	4686918	Identifier	D_FULLDEBUG		4686839	0					
ANR	4686919	Argument	"""CronJob: Starting job '%s' (%s)\\n"""		4686839	1					
ANR	4686920	PrimaryExpression	"""CronJob: Starting job '%s' (%s)\\n"""		4686839	0					
ANR	4686921	Argument	GetName ( )		4686839	2					
ANR	4686922	CallExpression	GetName ( )		4686839	0					
ANR	4686923	Callee	GetName		4686839	0					
ANR	4686924	Identifier	GetName		4686839	0					
ANR	4686925	ArgumentList			4686839	1					
ANR	4686926	Argument	GetExecutable ( )		4686839	3					
ANR	4686927	CallExpression	GetExecutable ( )		4686839	0					
ANR	4686928	Callee	GetExecutable		4686839	0					
ANR	4686929	Identifier	GetExecutable		4686839	0					
ANR	4686930	ArgumentList			4686839	1					
ANR	4686931	IfStatement	if ( m_stdOutBuf -> FlushQueue ( ) )		4686839	3					
ANR	4686932	Condition	m_stdOutBuf -> FlushQueue ( )	320:6:7139:7164	4686839	0	True				
ANR	4686933	CallExpression	m_stdOutBuf -> FlushQueue ( )		4686839	0					
ANR	4686934	Callee	m_stdOutBuf -> FlushQueue		4686839	0					
ANR	4686935	PtrMemberAccess	m_stdOutBuf -> FlushQueue		4686839	0					
ANR	4686936	Identifier	m_stdOutBuf		4686839	0					
ANR	4686937	Identifier	FlushQueue		4686839	1					
ANR	4686938	ArgumentList			4686839	1					
ANR	4686939	CompoundStatement		20:35:478:478	4686839	1					
ANR	4686940	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Job '%s': Queue not empty!\\n"" , GetName ( ) )"	321:2:7172:7248	4686839	0	True				
ANR	4686941	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Job '%s': Queue not empty!\\n"" , GetName ( ) )"		4686839	0					
ANR	4686942	Callee	dprintf		4686839	0					
ANR	4686943	Identifier	dprintf		4686839	0					
ANR	4686944	ArgumentList	D_ALWAYS		4686839	1					
ANR	4686945	Argument	D_ALWAYS		4686839	0					
ANR	4686946	Identifier	D_ALWAYS		4686839	0					
ANR	4686947	Argument	"""CronJob: Job '%s': Queue not empty!\\n"""		4686839	1					
ANR	4686948	PrimaryExpression	"""CronJob: Job '%s': Queue not empty!\\n"""		4686839	0					
ANR	4686949	Argument	GetName ( )		4686839	2					
ANR	4686950	CallExpression	GetName ( )		4686839	0					
ANR	4686951	Callee	GetName		4686839	0					
ANR	4686952	Identifier	GetName		4686839	0					
ANR	4686953	ArgumentList			4686839	1					
ANR	4686954	ReturnStatement	return StartJobProcess ( ) ;	326:1:7266:7291	4686839	4	True				
ANR	4686955	CallExpression	StartJobProcess ( )		4686839	0					
ANR	4686956	Callee	StartJobProcess		4686839	0					
ANR	4686957	Identifier	StartJobProcess		4686839	0					
ANR	4686958	ArgumentList			4686839	1					
ANR	4686959	ReturnType	int		4686839	1					
ANR	4686960	Identifier	CronJob :: StartJob		4686839	2					
ANR	4686961	ParameterList			4686839	3					
ANR	4686962	CFGEntryNode	ENTRY		4686839		True				
ANR	4686963	CFGExitNode	EXIT		4686839		True				
ANR	4686964	Symbol	GetExecutable		4686839						
ANR	4686965	Symbol	m_mgr . ShouldStartJob		4686839						
ANR	4686966	Symbol	D_ALWAYS		4686839						
ANR	4686967	Symbol	this		4686839						
ANR	4686968	Symbol	m_mgr		4686839						
ANR	4686969	Symbol	D_FULLDEBUG		4686839						
ANR	4686970	Symbol	IsReady		4686839						
ANR	4686971	Symbol	m_stdOutBuf -> FlushQueue		4686839						
ANR	4686972	Symbol	* this		4686839						
ANR	4686973	Symbol	StartJobProcess		4686839						
ANR	4686974	Symbol	CRON_READY		4686839						
ANR	4686975	Symbol	IsIdle		4686839						
ANR	4686976	Symbol	GetName		4686839						
ANR	4686977	Symbol	m_stdOutBuf		4686839						
ANR	4686978	Symbol	* m_stdOutBuf		4686839						
ANR	4686979	Function	CronJob :: KillHandler	330:0:7321:7661							
ANR	4686980	FunctionDef	CronJob :: KillHandler ()		4686979	0					
ANR	4686981	CompoundStatement		332:0:7355:7661	4686979	0					
ANR	4686982	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: KillHandler for job '%s'\\n"" , GetName ( ) )"	335:1:7383:7455	4686979	0	True				
ANR	4686983	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: KillHandler for job '%s'\\n"" , GetName ( ) )"		4686979	0					
ANR	4686984	Callee	dprintf		4686979	0					
ANR	4686985	Identifier	dprintf		4686979	0					
ANR	4686986	ArgumentList	D_FULLDEBUG		4686979	1					
ANR	4686987	Argument	D_FULLDEBUG		4686979	0					
ANR	4686988	Identifier	D_FULLDEBUG		4686979	0					
ANR	4686989	Argument	"""CronJob: KillHandler for job '%s'\\n"""		4686979	1					
ANR	4686990	PrimaryExpression	"""CronJob: KillHandler for job '%s'\\n"""		4686979	0					
ANR	4686991	Argument	GetName ( )		4686979	2					
ANR	4686992	CallExpression	GetName ( )		4686979	0					
ANR	4686993	Callee	GetName		4686979	0					
ANR	4686994	Identifier	GetName		4686979	0					
ANR	4686995	ArgumentList			4686979	1					
ANR	4686996	IfStatement	if ( IsIdle ( ) )		4686979	1					
ANR	4686997	Condition	IsIdle ( )	338:6:7505:7512	4686979	0	True				
ANR	4686998	CallExpression	IsIdle ( )		4686979	0					
ANR	4686999	Callee	IsIdle		4686979	0					
ANR	4687000	Identifier	IsIdle		4686979	0					
ANR	4687001	ArgumentList			4686979	1					
ANR	4687002	CompoundStatement		7:17:160:160	4686979	1					
ANR	4687003	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Job '%s' already idle (%s)!\\n"" , GetName ( ) , GetExecutable ( ) )"	339:2:7520:7613	4686979	0	True				
ANR	4687004	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Job '%s' already idle (%s)!\\n"" , GetName ( ) , GetExecutable ( ) )"		4686979	0					
ANR	4687005	Callee	dprintf		4686979	0					
ANR	4687006	Identifier	dprintf		4686979	0					
ANR	4687007	ArgumentList	D_ALWAYS		4686979	1					
ANR	4687008	Argument	D_ALWAYS		4686979	0					
ANR	4687009	Identifier	D_ALWAYS		4686979	0					
ANR	4687010	Argument	"""CronJob: Job '%s' already idle (%s)!\\n"""		4686979	1					
ANR	4687011	PrimaryExpression	"""CronJob: Job '%s' already idle (%s)!\\n"""		4686979	0					
ANR	4687012	Argument	GetName ( )		4686979	2					
ANR	4687013	CallExpression	GetName ( )		4686979	0					
ANR	4687014	Callee	GetName		4686979	0					
ANR	4687015	Identifier	GetName		4686979	0					
ANR	4687016	ArgumentList			4686979	1					
ANR	4687017	Argument	GetExecutable ( )		4686979	3					
ANR	4687018	CallExpression	GetExecutable ( )		4686979	0					
ANR	4687019	Callee	GetExecutable		4686979	0					
ANR	4687020	Identifier	GetExecutable		4686979	0					
ANR	4687021	ArgumentList			4686979	1					
ANR	4687022	ReturnStatement	return ;	341:2:7617:7623	4686979	1	True				
ANR	4687023	ExpressionStatement	KillJob ( false )	345:1:7643:7659	4686979	2	True				
ANR	4687024	CallExpression	KillJob ( false )		4686979	0					
ANR	4687025	Callee	KillJob		4686979	0					
ANR	4687026	Identifier	KillJob		4686979	0					
ANR	4687027	ArgumentList	false		4686979	1					
ANR	4687028	Argument	false		4686979	0					
ANR	4687029	Identifier	false		4686979	0					
ANR	4687030	ReturnType	void		4686979	1					
ANR	4687031	Identifier	CronJob :: KillHandler		4686979	2					
ANR	4687032	ParameterList			4686979	3					
ANR	4687033	CFGEntryNode	ENTRY		4686979		True				
ANR	4687034	CFGExitNode	EXIT		4686979		True				
ANR	4687035	Symbol	GetExecutable		4686979						
ANR	4687036	Symbol	IsIdle		4686979						
ANR	4687037	Symbol	D_ALWAYS		4686979						
ANR	4687038	Symbol	false		4686979						
ANR	4687039	Symbol	GetName		4686979						
ANR	4687040	Symbol	D_FULLDEBUG		4686979						
ANR	4687041	Function	CronJob :: Reaper	349:0:7680:9703							
ANR	4687042	FunctionDef	"CronJob :: Reaper (int exitPid , int exitStatus)"		4687041	0					
ANR	4687043	CompoundStatement		351:0:7731:9703	4687041	0					
ANR	4687044	IfStatement	if ( WIFSIGNALED ( exitStatus ) )		4687041	0					
ANR	4687045	Condition	WIFSIGNALED ( exitStatus )	352:5:7738:7760	4687041	0	True				
ANR	4687046	CallExpression	WIFSIGNALED ( exitStatus )		4687041	0					
ANR	4687047	Callee	WIFSIGNALED		4687041	0					
ANR	4687048	Identifier	WIFSIGNALED		4687041	0					
ANR	4687049	ArgumentList	exitStatus		4687041	1					
ANR	4687050	Argument	exitStatus		4687041	0					
ANR	4687051	Identifier	exitStatus		4687041	0					
ANR	4687052	CompoundStatement		2:31:32:32	4687041	1					
ANR	4687053	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: '%s' (pid %d) exit_signal=%d\\n"" , GetName ( ) , exitPid , WTERMSIG ( exitStatus ) )"	353:2:7768:7879	4687041	0	True				
ANR	4687054	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: '%s' (pid %d) exit_signal=%d\\n"" , GetName ( ) , exitPid , WTERMSIG ( exitStatus ) )"		4687041	0					
ANR	4687055	Callee	dprintf		4687041	0					
ANR	4687056	Identifier	dprintf		4687041	0					
ANR	4687057	ArgumentList	D_FULLDEBUG		4687041	1					
ANR	4687058	Argument	D_FULLDEBUG		4687041	0					
ANR	4687059	Identifier	D_FULLDEBUG		4687041	0					
ANR	4687060	Argument	"""CronJob: '%s' (pid %d) exit_signal=%d\\n"""		4687041	1					
ANR	4687061	PrimaryExpression	"""CronJob: '%s' (pid %d) exit_signal=%d\\n"""		4687041	0					
ANR	4687062	Argument	GetName ( )		4687041	2					
ANR	4687063	CallExpression	GetName ( )		4687041	0					
ANR	4687064	Callee	GetName		4687041	0					
ANR	4687065	Identifier	GetName		4687041	0					
ANR	4687066	ArgumentList			4687041	1					
ANR	4687067	Argument	exitPid		4687041	3					
ANR	4687068	Identifier	exitPid		4687041	0					
ANR	4687069	Argument	WTERMSIG ( exitStatus )		4687041	4					
ANR	4687070	CallExpression	WTERMSIG ( exitStatus )		4687041	0					
ANR	4687071	Callee	WTERMSIG		4687041	0					
ANR	4687072	Identifier	WTERMSIG		4687041	0					
ANR	4687073	ArgumentList	exitStatus		4687041	1					
ANR	4687074	Argument	exitStatus		4687041	0					
ANR	4687075	Identifier	exitStatus		4687041	0					
ANR	4687076	ElseStatement	else		4687041	0					
ANR	4687077	CompoundStatement		5:8:157:157	4687041	0					
ANR	4687078	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: '%s' (pid %d) exit_status=%d\\n"" , GetName ( ) , exitPid , WEXITSTATUS ( exitStatus ) )"	356:2:7893:8007	4687041	0	True				
ANR	4687079	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: '%s' (pid %d) exit_status=%d\\n"" , GetName ( ) , exitPid , WEXITSTATUS ( exitStatus ) )"		4687041	0					
ANR	4687080	Callee	dprintf		4687041	0					
ANR	4687081	Identifier	dprintf		4687041	0					
ANR	4687082	ArgumentList	D_FULLDEBUG		4687041	1					
ANR	4687083	Argument	D_FULLDEBUG		4687041	0					
ANR	4687084	Identifier	D_FULLDEBUG		4687041	0					
ANR	4687085	Argument	"""CronJob: '%s' (pid %d) exit_status=%d\\n"""		4687041	1					
ANR	4687086	PrimaryExpression	"""CronJob: '%s' (pid %d) exit_status=%d\\n"""		4687041	0					
ANR	4687087	Argument	GetName ( )		4687041	2					
ANR	4687088	CallExpression	GetName ( )		4687041	0					
ANR	4687089	Callee	GetName		4687041	0					
ANR	4687090	Identifier	GetName		4687041	0					
ANR	4687091	ArgumentList			4687041	1					
ANR	4687092	Argument	exitPid		4687041	3					
ANR	4687093	Identifier	exitPid		4687041	0					
ANR	4687094	Argument	WEXITSTATUS ( exitStatus )		4687041	4					
ANR	4687095	CallExpression	WEXITSTATUS ( exitStatus )		4687041	0					
ANR	4687096	Callee	WEXITSTATUS		4687041	0					
ANR	4687097	Identifier	WEXITSTATUS		4687041	0					
ANR	4687098	ArgumentList	exitStatus		4687041	1					
ANR	4687099	Argument	exitStatus		4687041	0					
ANR	4687100	Identifier	exitStatus		4687041	0					
ANR	4687101	IfStatement	if ( exitPid != m_pid )		4687041	1					
ANR	4687102	Condition	exitPid != m_pid	361:6:8054:8069	4687041	0	True				
ANR	4687103	EqualityExpression	exitPid != m_pid		4687041	0		!=			
ANR	4687104	Identifier	exitPid		4687041	0					
ANR	4687105	Identifier	m_pid		4687041	1					
ANR	4687106	CompoundStatement		11:25:341:341	4687041	1					
ANR	4687107	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: WARNING: Child PID %d != Exit PID %d\\n"" , m_pid , exitPid )"	362:2:8077:8170	4687041	0	True				
ANR	4687108	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: WARNING: Child PID %d != Exit PID %d\\n"" , m_pid , exitPid )"		4687041	0					
ANR	4687109	Callee	dprintf		4687041	0					
ANR	4687110	Identifier	dprintf		4687041	0					
ANR	4687111	ArgumentList	D_ALWAYS		4687041	1					
ANR	4687112	Argument	D_ALWAYS		4687041	0					
ANR	4687113	Identifier	D_ALWAYS		4687041	0					
ANR	4687114	Argument	"""CronJob: WARNING: Child PID %d != Exit PID %d\\n"""		4687041	1					
ANR	4687115	PrimaryExpression	"""CronJob: WARNING: Child PID %d != Exit PID %d\\n"""		4687041	0					
ANR	4687116	Argument	m_pid		4687041	2					
ANR	4687117	Identifier	m_pid		4687041	0					
ANR	4687118	Argument	exitPid		4687041	3					
ANR	4687119	Identifier	exitPid		4687041	0					
ANR	4687120	ExpressionStatement	m_pid = 0	367:1:8177:8186	4687041	2	True				
ANR	4687121	AssignmentExpression	m_pid = 0		4687041	0		=			
ANR	4687122	Identifier	m_pid		4687041	0					
ANR	4687123	PrimaryExpression	0		4687041	1					
ANR	4687124	ExpressionStatement	m_last_exit_time = time ( NULL )	368:1:8189:8218	4687041	3	True				
ANR	4687125	AssignmentExpression	m_last_exit_time = time ( NULL )		4687041	0		=			
ANR	4687126	Identifier	m_last_exit_time		4687041	0					
ANR	4687127	CallExpression	time ( NULL )		4687041	1					
ANR	4687128	Callee	time		4687041	0					
ANR	4687129	Identifier	time		4687041	0					
ANR	4687130	ArgumentList	NULL		4687041	1					
ANR	4687131	Argument	NULL		4687041	0					
ANR	4687132	Identifier	NULL		4687041	0					
ANR	4687133	ExpressionStatement	m_run_load = 0.0	369:1:8221:8237	4687041	4	True				
ANR	4687134	AssignmentExpression	m_run_load = 0.0		4687041	0		=			
ANR	4687135	Identifier	m_run_load		4687041	0					
ANR	4687136	PrimaryExpression	0.0		4687041	1					
ANR	4687137	IfStatement	if ( m_stdOut >= 0 )		4687041	5					
ANR	4687138	Condition	m_stdOut >= 0	372:6:8275:8287	4687041	0	True				
ANR	4687139	RelationalExpression	m_stdOut >= 0		4687041	0		>=			
ANR	4687140	Identifier	m_stdOut		4687041	0					
ANR	4687141	PrimaryExpression	0		4687041	1					
ANR	4687142	CompoundStatement		22:22:559:559	4687041	1					
ANR	4687143	ExpressionStatement	StdoutHandler ( m_stdOut )	373:2:8295:8320	4687041	0	True				
ANR	4687144	CallExpression	StdoutHandler ( m_stdOut )		4687041	0					
ANR	4687145	Callee	StdoutHandler		4687041	0					
ANR	4687146	Identifier	StdoutHandler		4687041	0					
ANR	4687147	ArgumentList	m_stdOut		4687041	1					
ANR	4687148	Argument	m_stdOut		4687041	0					
ANR	4687149	Identifier	m_stdOut		4687041	0					
ANR	4687150	IfStatement	if ( m_stdErr >= 0 )		4687041	6					
ANR	4687151	Condition	m_stdErr >= 0	375:6:8331:8343	4687041	0	True				
ANR	4687152	RelationalExpression	m_stdErr >= 0		4687041	0		>=			
ANR	4687153	Identifier	m_stdErr		4687041	0					
ANR	4687154	PrimaryExpression	0		4687041	1					
ANR	4687155	CompoundStatement		25:22:615:615	4687041	1					
ANR	4687156	ExpressionStatement	StderrHandler ( m_stdErr )	376:2:8351:8376	4687041	0	True				
ANR	4687157	CallExpression	StderrHandler ( m_stdErr )		4687041	0					
ANR	4687158	Callee	StderrHandler		4687041	0					
ANR	4687159	Identifier	StderrHandler		4687041	0					
ANR	4687160	ArgumentList	m_stdErr		4687041	1					
ANR	4687161	Argument	m_stdErr		4687041	0					
ANR	4687162	Identifier	m_stdErr		4687041	0					
ANR	4687163	ExpressionStatement	CleanAll ( )	380:1:8418:8429	4687041	7	True				
ANR	4687164	CallExpression	CleanAll ( )		4687041	0					
ANR	4687165	Callee	CleanAll		4687041	0					
ANR	4687166	Identifier	CleanAll		4687041	0					
ANR	4687167	ArgumentList			4687041	1					
ANR	4687168	SwitchStatement	switch ( GetState ( ) )		4687041	8					
ANR	4687169	Condition	GetState ( )	383:10:8502:8511	4687041	0	True				
ANR	4687170	CallExpression	GetState ( )		4687041	0					
ANR	4687171	Callee	GetState		4687041	0					
ANR	4687172	Identifier	GetState		4687041	0					
ANR	4687173	ArgumentList			4687041	1					
ANR	4687174	CompoundStatement		34:1:784:784	4687041	1					
ANR	4687175	Label	case CRON_RUNNING :	386:1:8537:8554	4687041	0	True				
ANR	4687176	Identifier	CRON_RUNNING		4687041	0					
ANR	4687177	ExpressionStatement	SetState ( CRON_IDLE )	387:2:8558:8579	4687041	1	True				
ANR	4687178	CallExpression	SetState ( CRON_IDLE )		4687041	0					
ANR	4687179	Callee	SetState		4687041	0					
ANR	4687180	Identifier	SetState		4687041	0					
ANR	4687181	ArgumentList	CRON_IDLE		4687041	1					
ANR	4687182	Argument	CRON_IDLE		4687041	0					
ANR	4687183	Identifier	CRON_IDLE		4687041	0					
ANR	4687184	IfStatement	if ( IsWaitForExit ( ) )		4687041	2					
ANR	4687185	Condition	IsWaitForExit ( )	388:7:8610:8624	4687041	0	True				
ANR	4687186	CallExpression	IsWaitForExit ( )		4687041	0					
ANR	4687187	Callee	IsWaitForExit		4687041	0					
ANR	4687188	Identifier	IsWaitForExit		4687041	0					
ANR	4687189	ArgumentList			4687041	1					
ANR	4687190	CompoundStatement		38:25:896:896	4687041	1					
ANR	4687191	IfStatement	if ( 0 == Period ( ) )		4687041	0					
ANR	4687192	Condition	0 == Period ( )	389:8:8638:8650	4687041	0	True				
ANR	4687193	EqualityExpression	0 == Period ( )		4687041	0		==			
ANR	4687194	PrimaryExpression	0		4687041	0					
ANR	4687195	CallExpression	Period ( )		4687041	1					
ANR	4687196	Callee	Period		4687041	0					
ANR	4687197	Identifier	Period		4687041	0					
ANR	4687198	ArgumentList			4687041	1					
ANR	4687199	CompoundStatement		39:24:922:922	4687041	1					
ANR	4687200	ExpressionStatement	StartJob ( )	390:4:8689:8700	4687041	0	True				
ANR	4687201	CallExpression	StartJob ( )		4687041	0					
ANR	4687202	Callee	StartJob		4687041	0					
ANR	4687203	Identifier	StartJob		4687041	0					
ANR	4687204	ArgumentList			4687041	1					
ANR	4687205	ElseStatement	else		4687041	0					
ANR	4687206	CompoundStatement		41:10:980:980	4687041	0					
ANR	4687207	ExpressionStatement	"SetTimer ( Period ( ) , TIMER_NEVER )"	392:4:8751:8784	4687041	0	True				
ANR	4687208	CallExpression	"SetTimer ( Period ( ) , TIMER_NEVER )"		4687041	0					
ANR	4687209	Callee	SetTimer		4687041	0					
ANR	4687210	Identifier	SetTimer		4687041	0					
ANR	4687211	ArgumentList	Period ( )		4687041	1					
ANR	4687212	Argument	Period ( )		4687041	0					
ANR	4687213	CallExpression	Period ( )		4687041	0					
ANR	4687214	Callee	Period		4687041	0					
ANR	4687215	Identifier	Period		4687041	0					
ANR	4687216	ArgumentList			4687041	1					
ANR	4687217	Argument	TIMER_NEVER		4687041	1					
ANR	4687218	Identifier	TIMER_NEVER		4687041	0					
ANR	4687219	BreakStatement	break ;	395:2:8797:8802	4687041	3	True				
ANR	4687220	Label	case CRON_IDLE :	398:1:8837:8851	4687041	4	True				
ANR	4687221	Identifier	CRON_IDLE		4687041	0					
ANR	4687222	Label	case CRON_DEAD :	399:1:8854:8868	4687041	5	True				
ANR	4687223	Identifier	CRON_DEAD		4687041	0					
ANR	4687224	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob::Reaper:: Job %s in state %s: Huh?\\n"" , GetName ( ) , StateString ( ) )"	400:2:8872:8970	4687041	6	True				
ANR	4687225	CallExpression	"dprintf ( D_ALWAYS , ""CronJob::Reaper:: Job %s in state %s: Huh?\\n"" , GetName ( ) , StateString ( ) )"		4687041	0					
ANR	4687226	Callee	dprintf		4687041	0					
ANR	4687227	Identifier	dprintf		4687041	0					
ANR	4687228	ArgumentList	D_ALWAYS		4687041	1					
ANR	4687229	Argument	D_ALWAYS		4687041	0					
ANR	4687230	Identifier	D_ALWAYS		4687041	0					
ANR	4687231	Argument	"""CronJob::Reaper:: Job %s in state %s: Huh?\\n"""		4687041	1					
ANR	4687232	PrimaryExpression	"""CronJob::Reaper:: Job %s in state %s: Huh?\\n"""		4687041	0					
ANR	4687233	Argument	GetName ( )		4687041	2					
ANR	4687234	CallExpression	GetName ( )		4687041	0					
ANR	4687235	Callee	GetName		4687041	0					
ANR	4687236	Identifier	GetName		4687041	0					
ANR	4687237	ArgumentList			4687041	1					
ANR	4687238	Argument	StateString ( )		4687041	3					
ANR	4687239	CallExpression	StateString ( )		4687041	0					
ANR	4687240	Callee	StateString		4687041	0					
ANR	4687241	Identifier	StateString		4687041	0					
ANR	4687242	ArgumentList			4687041	1					
ANR	4687243	BreakStatement	break ;	402:2:8974:8979	4687041	7	True				
ANR	4687244	Label	case CRON_TERM_SENT :	405:1:9093:9112	4687041	8	True				
ANR	4687245	Identifier	CRON_TERM_SENT		4687041	0					
ANR	4687246	Label	case CRON_KILL_SENT :	406:1:9115:9134	4687041	9	True				
ANR	4687247	Identifier	CRON_KILL_SENT		4687041	0					
ANR	4687248	ExpressionStatement	m_in_shutdown = false	407:2:9138:9159	4687041	10	True				
ANR	4687249	AssignmentExpression	m_in_shutdown = false		4687041	0		=			
ANR	4687250	Identifier	m_in_shutdown		4687041	0					
ANR	4687251	Identifier	false		4687041	1					
ANR	4687252	Label	default :	409:1:9165:9172	4687041	11	True				
ANR	4687253	Identifier	default		4687041	0					
ANR	4687254	ExpressionStatement	SetState ( CRON_IDLE )	410:2:9176:9197	4687041	12	True				
ANR	4687255	CallExpression	SetState ( CRON_IDLE )		4687041	0					
ANR	4687256	Callee	SetState		4687041	0					
ANR	4687257	Identifier	SetState		4687041	0					
ANR	4687258	ArgumentList	CRON_IDLE		4687041	1					
ANR	4687259	Argument	CRON_IDLE		4687041	0					
ANR	4687260	Identifier	CRON_IDLE		4687041	0					
ANR	4687261	ExpressionStatement	KillTimer ( TIMER_NEVER )	413:2:9266:9290	4687041	13	True				
ANR	4687262	CallExpression	KillTimer ( TIMER_NEVER )		4687041	0					
ANR	4687263	Callee	KillTimer		4687041	0					
ANR	4687264	Identifier	KillTimer		4687041	0					
ANR	4687265	ArgumentList	TIMER_NEVER		4687041	1					
ANR	4687266	Argument	TIMER_NEVER		4687041	0					
ANR	4687267	Identifier	TIMER_NEVER		4687041	0					
ANR	4687268	IfStatement	if ( IsWaitForExit ( ) )		4687041	14					
ANR	4687269	Condition	IsWaitForExit ( )	416:7:9322:9336	4687041	0	True				
ANR	4687270	CallExpression	IsWaitForExit ( )		4687041	0					
ANR	4687271	Callee	IsWaitForExit		4687041	0					
ANR	4687272	Identifier	IsWaitForExit		4687041	0					
ANR	4687273	ArgumentList			4687041	1					
ANR	4687274	CompoundStatement		66:25:1608:1608	4687041	1					
ANR	4687275	IfStatement	if ( 0 == Period ( ) )		4687041	0					
ANR	4687276	Condition	0 == Period ( )	417:8:9350:9362	4687041	0	True				
ANR	4687277	EqualityExpression	0 == Period ( )		4687041	0		==			
ANR	4687278	PrimaryExpression	0		4687041	0					
ANR	4687279	CallExpression	Period ( )		4687041	1					
ANR	4687280	Callee	Period		4687041	0					
ANR	4687281	Identifier	Period		4687041	0					
ANR	4687282	ArgumentList			4687041	1					
ANR	4687283	CompoundStatement		67:24:1634:1634	4687041	1					
ANR	4687284	ExpressionStatement	StartJob ( )	418:4:9403:9414	4687041	0	True				
ANR	4687285	CallExpression	StartJob ( )		4687041	0					
ANR	4687286	Callee	StartJob		4687041	0					
ANR	4687287	Identifier	StartJob		4687041	0					
ANR	4687288	ArgumentList			4687041	1					
ANR	4687289	ElseStatement	else		4687041	0					
ANR	4687290	CompoundStatement		69:10:1694:1694	4687041	0					
ANR	4687291	ExpressionStatement	"SetTimer ( Period ( ) , TIMER_NEVER )"	420:4:9467:9500	4687041	0	True				
ANR	4687292	CallExpression	"SetTimer ( Period ( ) , TIMER_NEVER )"		4687041	0					
ANR	4687293	Callee	SetTimer		4687041	0					
ANR	4687294	Identifier	SetTimer		4687041	0					
ANR	4687295	ArgumentList	Period ( )		4687041	1					
ANR	4687296	Argument	Period ( )		4687041	0					
ANR	4687297	CallExpression	Period ( )		4687041	0					
ANR	4687298	Callee	Period		4687041	0					
ANR	4687299	Identifier	Period		4687041	0					
ANR	4687300	ArgumentList			4687041	1					
ANR	4687301	Argument	TIMER_NEVER		4687041	1					
ANR	4687302	Identifier	TIMER_NEVER		4687041	0					
ANR	4687303	ElseStatement	else		4687041	0					
ANR	4687304	IfStatement	if ( IsPeriodic ( ) )		4687041	0					
ANR	4687305	Condition	IsPeriodic ( )	423:12:9523:9534	4687041	0	True				
ANR	4687306	CallExpression	IsPeriodic ( )		4687041	0					
ANR	4687307	Callee	IsPeriodic		4687041	0					
ANR	4687308	Identifier	IsPeriodic		4687041	0					
ANR	4687309	ArgumentList			4687041	1					
ANR	4687310	CompoundStatement		73:27:1806:1806	4687041	1					
ANR	4687311	ExpressionStatement	RunJob ( )	424:3:9556:9565	4687041	0	True				
ANR	4687312	CallExpression	RunJob ( )		4687041	0					
ANR	4687313	Callee	RunJob		4687041	0					
ANR	4687314	Identifier	RunJob		4687041	0					
ANR	4687315	ArgumentList			4687041	1					
ANR	4687316	BreakStatement	break ;	426:2:9573:9578	4687041	15	True				
ANR	4687317	ExpressionStatement	ProcessOutputQueue ( )	431:1:9609:9630	4687041	9	True				
ANR	4687318	CallExpression	ProcessOutputQueue ( )		4687041	0					
ANR	4687319	Callee	ProcessOutputQueue		4687041	0					
ANR	4687320	Identifier	ProcessOutputQueue		4687041	0					
ANR	4687321	ArgumentList			4687041	1					
ANR	4687322	ExpressionStatement	m_mgr . JobExited ( * this )	434:1:9665:9689	4687041	10	True				
ANR	4687323	CallExpression	m_mgr . JobExited ( * this )		4687041	0					
ANR	4687324	Callee	m_mgr . JobExited		4687041	0					
ANR	4687325	MemberAccess	m_mgr . JobExited		4687041	0					
ANR	4687326	Identifier	m_mgr		4687041	0					
ANR	4687327	Identifier	JobExited		4687041	1					
ANR	4687328	ArgumentList	* this		4687041	1					
ANR	4687329	Argument	* this		4687041	0					
ANR	4687330	UnaryOperationExpression	* this		4687041	0					
ANR	4687331	UnaryOperator	*		4687041	0					
ANR	4687332	Identifier	this		4687041	1					
ANR	4687333	ReturnStatement	return 0 ;	436:1:9693:9701	4687041	11	True				
ANR	4687334	PrimaryExpression	0		4687041	0					
ANR	4687335	ReturnType	int		4687041	1					
ANR	4687336	Identifier	CronJob :: Reaper		4687041	2					
ANR	4687337	ParameterList	"int exitPid , int exitStatus"		4687041	3					
ANR	4687338	Parameter	int exitPid	350:17:7701:7711	4687041	0	True				
ANR	4687339	ParameterType	int		4687041	0					
ANR	4687340	Identifier	exitPid		4687041	1					
ANR	4687341	Parameter	int exitStatus	350:30:7714:7727	4687041	1	True				
ANR	4687342	ParameterType	int		4687041	0					
ANR	4687343	Identifier	exitStatus		4687041	1					
ANR	4687344	CFGEntryNode	ENTRY		4687041		True				
ANR	4687345	CFGExitNode	EXIT		4687041		True				
ANR	4687346	Symbol	m_in_shutdown		4687041						
ANR	4687347	Symbol	m_stdErr		4687041						
ANR	4687348	Symbol	WEXITSTATUS		4687041						
ANR	4687349	Symbol	StateString		4687041						
ANR	4687350	Symbol	exitPid		4687041						
ANR	4687351	Symbol	m_pid		4687041						
ANR	4687352	Symbol	GetName		4687041						
ANR	4687353	Symbol	TIMER_NEVER		4687041						
ANR	4687354	Symbol	exitStatus		4687041						
ANR	4687355	Symbol	WIFSIGNALED		4687041						
ANR	4687356	Symbol	NULL		4687041						
ANR	4687357	Symbol	m_stdOut		4687041						
ANR	4687358	Symbol	IsPeriodic		4687041						
ANR	4687359	Symbol	m_run_load		4687041						
ANR	4687360	Symbol	D_ALWAYS		4687041						
ANR	4687361	Symbol	false		4687041						
ANR	4687362	Symbol	this		4687041						
ANR	4687363	Symbol	CRON_IDLE		4687041						
ANR	4687364	Symbol	Period		4687041						
ANR	4687365	Symbol	D_FULLDEBUG		4687041						
ANR	4687366	Symbol	m_mgr		4687041						
ANR	4687367	Symbol	* this		4687041						
ANR	4687368	Symbol	WTERMSIG		4687041						
ANR	4687369	Symbol	GetState		4687041						
ANR	4687370	Symbol	time		4687041						
ANR	4687371	Symbol	m_last_exit_time		4687041						
ANR	4687372	Symbol	IsWaitForExit		4687041						
ANR	4687373	Function	CronJob :: ProcessOutputQueue	440:0:9719:10691							
ANR	4687374	FunctionDef	CronJob :: ProcessOutputQueue ()		4687373	0					
ANR	4687375	CompoundStatement		442:0:9759:10691	4687373	0					
ANR	4687376	IdentifierDeclStatement	int status = 0 ;	443:1:9762:9777	4687373	0	True				
ANR	4687377	IdentifierDecl	status = 0		4687373	0					
ANR	4687378	IdentifierDeclType	int		4687373	0					
ANR	4687379	Identifier	status		4687373	1					
ANR	4687380	AssignmentExpression	status = 0		4687373	2		=			
ANR	4687381	Identifier	status		4687373	0					
ANR	4687382	PrimaryExpression	0		4687373	1					
ANR	4687383	IdentifierDeclStatement	int linecount = m_stdOutBuf -> GetQueueSize ( ) ;	444:1:9780:9825	4687373	1	True				
ANR	4687384	IdentifierDecl	linecount = m_stdOutBuf -> GetQueueSize ( )		4687373	0					
ANR	4687385	IdentifierDeclType	int		4687373	0					
ANR	4687386	Identifier	linecount		4687373	1					
ANR	4687387	AssignmentExpression	linecount = m_stdOutBuf -> GetQueueSize ( )		4687373	2		=			
ANR	4687388	Identifier	linecount		4687373	0					
ANR	4687389	CallExpression	m_stdOutBuf -> GetQueueSize ( )		4687373	1					
ANR	4687390	Callee	m_stdOutBuf -> GetQueueSize		4687373	0					
ANR	4687391	PtrMemberAccess	m_stdOutBuf -> GetQueueSize		4687373	0					
ANR	4687392	Identifier	m_stdOutBuf		4687373	0					
ANR	4687393	Identifier	GetQueueSize		4687373	1					
ANR	4687394	ArgumentList			4687373	1					
ANR	4687395	IfStatement	if ( linecount != 0 )		4687373	2					
ANR	4687396	Condition	linecount != 0	447:6:9869:9882	4687373	0	True				
ANR	4687397	EqualityExpression	linecount != 0		4687373	0		!=			
ANR	4687398	Identifier	linecount		4687373	0					
ANR	4687399	PrimaryExpression	0		4687373	1					
ANR	4687400	CompoundStatement		22:2:494:533	4687373	1					
ANR	4687401	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s: %d lines in Queue\\n"" , GetName ( ) , linecount )"	448:2:9890:9966	4687373	0	True				
ANR	4687402	CallExpression	"dprintf ( D_FULLDEBUG , ""%s: %d lines in Queue\\n"" , GetName ( ) , linecount )"		4687373	0					
ANR	4687403	Callee	dprintf		4687373	0					
ANR	4687404	Identifier	dprintf		4687373	0					
ANR	4687405	ArgumentList	D_FULLDEBUG		4687373	1					
ANR	4687406	Argument	D_FULLDEBUG		4687373	0					
ANR	4687407	Identifier	D_FULLDEBUG		4687373	0					
ANR	4687408	Argument	"""%s: %d lines in Queue\\n"""		4687373	1					
ANR	4687409	PrimaryExpression	"""%s: %d lines in Queue\\n"""		4687373	0					
ANR	4687410	Argument	GetName ( )		4687373	2					
ANR	4687411	CallExpression	GetName ( )		4687373	0					
ANR	4687412	Callee	GetName		4687373	0					
ANR	4687413	Identifier	GetName		4687373	0					
ANR	4687414	ArgumentList			4687373	1					
ANR	4687415	Argument	linecount		4687373	3					
ANR	4687416	Identifier	linecount		4687373	0					
ANR	4687417	IdentifierDeclStatement	char * linebuf ;	452:2:10012:10025	4687373	1	True				
ANR	4687418	IdentifierDecl	* linebuf		4687373	0					
ANR	4687419	IdentifierDeclType	char *		4687373	0					
ANR	4687420	Identifier	linebuf		4687373	1					
ANR	4687421	WhileStatement	while ( ( linebuf = m_stdOutBuf -> GetLineFromQueue ( ) ) != NULL )		4687373	2					
ANR	4687422	Condition	( linebuf = m_stdOutBuf -> GetLineFromQueue ( ) ) != NULL	453:9:10036:10089	4687373	0	True				
ANR	4687423	EqualityExpression	( linebuf = m_stdOutBuf -> GetLineFromQueue ( ) ) != NULL		4687373	0		!=			
ANR	4687424	AssignmentExpression	linebuf = m_stdOutBuf -> GetLineFromQueue ( )		4687373	0		=			
ANR	4687425	Identifier	linebuf		4687373	0					
ANR	4687426	CallExpression	m_stdOutBuf -> GetLineFromQueue ( )		4687373	1					
ANR	4687427	Callee	m_stdOutBuf -> GetLineFromQueue		4687373	0					
ANR	4687428	PtrMemberAccess	m_stdOutBuf -> GetLineFromQueue		4687373	0					
ANR	4687429	Identifier	m_stdOutBuf		4687373	0					
ANR	4687430	Identifier	GetLineFromQueue		4687373	1					
ANR	4687431	ArgumentList			4687373	1					
ANR	4687432	Identifier	NULL		4687373	1					
ANR	4687433	CompoundStatement		13:3:338:379	4687373	1					
ANR	4687434	IdentifierDeclStatement	int tmpstatus = ProcessOutput ( linebuf ) ;	454:3:10098:10139	4687373	0	True				
ANR	4687435	IdentifierDecl	tmpstatus = ProcessOutput ( linebuf )		4687373	0					
ANR	4687436	IdentifierDeclType	int		4687373	0					
ANR	4687437	Identifier	tmpstatus		4687373	1					
ANR	4687438	AssignmentExpression	tmpstatus = ProcessOutput ( linebuf )		4687373	2		=			
ANR	4687439	Identifier	tmpstatus		4687373	0					
ANR	4687440	CallExpression	ProcessOutput ( linebuf )		4687373	1					
ANR	4687441	Callee	ProcessOutput		4687373	0					
ANR	4687442	Identifier	ProcessOutput		4687373	0					
ANR	4687443	ArgumentList	linebuf		4687373	1					
ANR	4687444	Argument	linebuf		4687373	0					
ANR	4687445	Identifier	linebuf		4687373	0					
ANR	4687446	IfStatement	if ( tmpstatus )		4687373	1					
ANR	4687447	Condition	tmpstatus	455:8:10149:10157	4687373	0	True				
ANR	4687448	Identifier	tmpstatus		4687373	0					
ANR	4687449	CompoundStatement		14:20:401:401	4687373	1					
ANR	4687450	ExpressionStatement	status = tmpstatus	456:4:10167:10185	4687373	0	True				
ANR	4687451	AssignmentExpression	status = tmpstatus		4687373	0		=			
ANR	4687452	Identifier	status		4687373	0					
ANR	4687453	Identifier	tmpstatus		4687373	1					
ANR	4687454	ExpressionStatement	free ( linebuf )	458:3:10195:10210	4687373	2	True				
ANR	4687455	CallExpression	free ( linebuf )		4687373	0					
ANR	4687456	Callee	free		4687373	0					
ANR	4687457	Identifier	free		4687373	0					
ANR	4687458	ArgumentList	linebuf		4687373	1					
ANR	4687459	Argument	linebuf		4687373	0					
ANR	4687460	Identifier	linebuf		4687373	0					
ANR	4687461	ExpressionStatement	linecount --	459:3:10215:10226	4687373	3	True				
ANR	4687462	PostIncDecOperationExpression	linecount --		4687373	0					
ANR	4687463	Identifier	linecount		4687373	0					
ANR	4687464	IncDec	--		4687373	1					
ANR	4687465	IdentifierDeclStatement	int tmp = m_stdOutBuf -> GetQueueSize ( ) ;	463:2:10254:10293	4687373	3	True				
ANR	4687466	IdentifierDecl	tmp = m_stdOutBuf -> GetQueueSize ( )		4687373	0					
ANR	4687467	IdentifierDeclType	int		4687373	0					
ANR	4687468	Identifier	tmp		4687373	1					
ANR	4687469	AssignmentExpression	tmp = m_stdOutBuf -> GetQueueSize ( )		4687373	2		=			
ANR	4687470	Identifier	tmp		4687373	0					
ANR	4687471	CallExpression	m_stdOutBuf -> GetQueueSize ( )		4687373	1					
ANR	4687472	Callee	m_stdOutBuf -> GetQueueSize		4687373	0					
ANR	4687473	PtrMemberAccess	m_stdOutBuf -> GetQueueSize		4687373	0					
ANR	4687474	Identifier	m_stdOutBuf		4687373	0					
ANR	4687475	Identifier	GetQueueSize		4687373	1					
ANR	4687476	ArgumentList			4687373	1					
ANR	4687477	IfStatement	if ( 0 != linecount )		4687373	4					
ANR	4687478	Condition	0 != linecount	464:7:10302:10315	4687373	0	True				
ANR	4687479	EqualityExpression	0 != linecount		4687373	0		!=			
ANR	4687480	PrimaryExpression	0		4687373	0					
ANR	4687481	Identifier	linecount		4687373	1					
ANR	4687482	CompoundStatement		23:24:559:559	4687373	1					
ANR	4687483	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s: %d lines remain!!\\n"" , GetName ( ) , linecount )"	465:3:10324:10398	4687373	0	True				
ANR	4687484	CallExpression	"dprintf ( D_ALWAYS , ""%s: %d lines remain!!\\n"" , GetName ( ) , linecount )"		4687373	0					
ANR	4687485	Callee	dprintf		4687373	0					
ANR	4687486	Identifier	dprintf		4687373	0					
ANR	4687487	ArgumentList	D_ALWAYS		4687373	1					
ANR	4687488	Argument	D_ALWAYS		4687373	0					
ANR	4687489	Identifier	D_ALWAYS		4687373	0					
ANR	4687490	Argument	"""%s: %d lines remain!!\\n"""		4687373	1					
ANR	4687491	PrimaryExpression	"""%s: %d lines remain!!\\n"""		4687373	0					
ANR	4687492	Argument	GetName ( )		4687373	2					
ANR	4687493	CallExpression	GetName ( )		4687373	0					
ANR	4687494	Callee	GetName		4687373	0					
ANR	4687495	Identifier	GetName		4687373	0					
ANR	4687496	ArgumentList			4687373	1					
ANR	4687497	Argument	linecount		4687373	3					
ANR	4687498	Identifier	linecount		4687373	0					
ANR	4687499	ElseStatement	else		4687373	0					
ANR	4687500	IfStatement	if ( 0 != tmp )		4687373	0					
ANR	4687501	Condition	0 != tmp	467:14:10414:10421	4687373	0	True				
ANR	4687502	EqualityExpression	0 != tmp		4687373	0		!=			
ANR	4687503	PrimaryExpression	0		4687373	0					
ANR	4687504	Identifier	tmp		4687373	1					
ANR	4687505	CompoundStatement		26:25:665:665	4687373	1					
ANR	4687506	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s: Queue reports %d lines remain!\\n"" , GetName ( ) , tmp )"	468:3:10430:10511	4687373	0	True				
ANR	4687507	CallExpression	"dprintf ( D_ALWAYS , ""%s: Queue reports %d lines remain!\\n"" , GetName ( ) , tmp )"		4687373	0					
ANR	4687508	Callee	dprintf		4687373	0					
ANR	4687509	Identifier	dprintf		4687373	0					
ANR	4687510	ArgumentList	D_ALWAYS		4687373	1					
ANR	4687511	Argument	D_ALWAYS		4687373	0					
ANR	4687512	Identifier	D_ALWAYS		4687373	0					
ANR	4687513	Argument	"""%s: Queue reports %d lines remain!\\n"""		4687373	1					
ANR	4687514	PrimaryExpression	"""%s: Queue reports %d lines remain!\\n"""		4687373	0					
ANR	4687515	Argument	GetName ( )		4687373	2					
ANR	4687516	CallExpression	GetName ( )		4687373	0					
ANR	4687517	Callee	GetName		4687373	0					
ANR	4687518	Identifier	GetName		4687373	0					
ANR	4687519	ArgumentList			4687373	1					
ANR	4687520	Argument	tmp		4687373	3					
ANR	4687521	Identifier	tmp		4687373	0					
ANR	4687522	ElseStatement	else		4687373	0					
ANR	4687523	CompoundStatement		29:9:762:762	4687373	0					
ANR	4687524	ExpressionStatement	ProcessOutput ( NULL )	472:3:10585:10606	4687373	0	True				
ANR	4687525	CallExpression	ProcessOutput ( NULL )		4687373	0					
ANR	4687526	Callee	ProcessOutput		4687373	0					
ANR	4687527	Identifier	ProcessOutput		4687373	0					
ANR	4687528	ArgumentList	NULL		4687373	1					
ANR	4687529	Argument	NULL		4687373	0					
ANR	4687530	Identifier	NULL		4687373	0					
ANR	4687531	ExpressionStatement	m_num_outputs ++	473:3:10611:10626	4687373	1	True				
ANR	4687532	PostIncDecOperationExpression	m_num_outputs ++		4687373	0					
ANR	4687533	Identifier	m_num_outputs		4687373	0					
ANR	4687534	IncDec	++		4687373	1					
ANR	4687535	ReturnStatement	return status ;	476:1:10676:10689	4687373	3	True				
ANR	4687536	Identifier	status		4687373	0					
ANR	4687537	ReturnType	int		4687373	1					
ANR	4687538	Identifier	CronJob :: ProcessOutputQueue		4687373	2					
ANR	4687539	ParameterList			4687373	3					
ANR	4687540	CFGEntryNode	ENTRY		4687373		True				
ANR	4687541	CFGExitNode	EXIT		4687373		True				
ANR	4687542	Symbol	NULL		4687373						
ANR	4687543	Symbol	tmpstatus		4687373						
ANR	4687544	Symbol	D_ALWAYS		4687373						
ANR	4687545	Symbol	D_FULLDEBUG		4687373						
ANR	4687546	Symbol	m_stdOutBuf -> GetQueueSize		4687373						
ANR	4687547	Symbol	m_stdOutBuf -> GetLineFromQueue		4687373						
ANR	4687548	Symbol	linecount		4687373						
ANR	4687549	Symbol	linebuf		4687373						
ANR	4687550	Symbol	tmp		4687373						
ANR	4687551	Symbol	ProcessOutput		4687373						
ANR	4687552	Symbol	m_num_outputs		4687373						
ANR	4687553	Symbol	GetName		4687373						
ANR	4687554	Symbol	m_stdOutBuf		4687373						
ANR	4687555	Symbol	status		4687373						
ANR	4687556	Symbol	* m_stdOutBuf		4687373						
ANR	4687557	Function	CronJob :: StartJobProcess	480:0:10709:12740							
ANR	4687558	FunctionDef	CronJob :: StartJobProcess ()		4687557	0					
ANR	4687559	CompoundStatement		482:0:10746:12740	4687557	0					
ANR	4687560	IdentifierDeclStatement	ArgList final_args ;	483:1:10749:10767	4687557	0	True				
ANR	4687561	IdentifierDecl	final_args		4687557	0					
ANR	4687562	IdentifierDeclType	ArgList		4687557	0					
ANR	4687563	Identifier	final_args		4687557	1					
ANR	4687564	IfStatement	if ( OpenFds ( ) < 0 )		4687557	1					
ANR	4687565	Condition	OpenFds ( ) < 0	486:6:10804:10817	4687557	0	True				
ANR	4687566	RelationalExpression	OpenFds ( ) < 0		4687557	0		<			
ANR	4687567	CallExpression	OpenFds ( )		4687557	0					
ANR	4687568	Callee	OpenFds		4687557	0					
ANR	4687569	Identifier	OpenFds		4687557	0					
ANR	4687570	ArgumentList			4687557	1					
ANR	4687571	PrimaryExpression	0		4687557	1					
ANR	4687572	CompoundStatement		5:23:74:74	4687557	1					
ANR	4687573	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Error creating FDs for '%s'\\n"" , GetName ( ) )"	487:2:10825:10902	4687557	0	True				
ANR	4687574	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Error creating FDs for '%s'\\n"" , GetName ( ) )"		4687557	0					
ANR	4687575	Callee	dprintf		4687557	0					
ANR	4687576	Identifier	dprintf		4687557	0					
ANR	4687577	ArgumentList	D_ALWAYS		4687557	1					
ANR	4687578	Argument	D_ALWAYS		4687557	0					
ANR	4687579	Identifier	D_ALWAYS		4687557	0					
ANR	4687580	Argument	"""CronJob: Error creating FDs for '%s'\\n"""		4687557	1					
ANR	4687581	PrimaryExpression	"""CronJob: Error creating FDs for '%s'\\n"""		4687557	0					
ANR	4687582	Argument	GetName ( )		4687557	2					
ANR	4687583	CallExpression	GetName ( )		4687557	0					
ANR	4687584	Callee	GetName		4687557	0					
ANR	4687585	Identifier	GetName		4687557	0					
ANR	4687586	ArgumentList			4687557	1					
ANR	4687587	ReturnStatement	return - 1 ;	489:2:10906:10915	4687557	1	True				
ANR	4687588	UnaryOperationExpression	- 1		4687557	0					
ANR	4687589	UnaryOperator	-		4687557	0					
ANR	4687590	PrimaryExpression	1		4687557	1					
ANR	4687591	ExpressionStatement	final_args . AppendArg ( GetName ( ) )	493:1:10994:11027	4687557	2	True				
ANR	4687592	CallExpression	final_args . AppendArg ( GetName ( ) )		4687557	0					
ANR	4687593	Callee	final_args . AppendArg		4687557	0					
ANR	4687594	MemberAccess	final_args . AppendArg		4687557	0					
ANR	4687595	Identifier	final_args		4687557	0					
ANR	4687596	Identifier	AppendArg		4687557	1					
ANR	4687597	ArgumentList	GetName ( )		4687557	1					
ANR	4687598	Argument	GetName ( )		4687557	0					
ANR	4687599	CallExpression	GetName ( )		4687557	0					
ANR	4687600	Callee	GetName		4687557	0					
ANR	4687601	Identifier	GetName		4687557	0					
ANR	4687602	ArgumentList			4687557	1					
ANR	4687603	IfStatement	if ( Params ( ) . GetArgs ( ) . Count ( ) )		4687557	3					
ANR	4687604	Condition	Params ( ) . GetArgs ( ) . Count ( )	494:5:11034:11059	4687557	0	True				
ANR	4687605	CallExpression	Params ( ) . GetArgs ( ) . Count ( )		4687557	0					
ANR	4687606	Callee	Params ( ) . GetArgs ( ) . Count		4687557	0					
ANR	4687607	MemberAccess	Params ( ) . GetArgs ( ) . Count		4687557	0					
ANR	4687608	CallExpression	Params ( ) . GetArgs ( )		4687557	0					
ANR	4687609	Callee	Params ( ) . GetArgs		4687557	0					
ANR	4687610	MemberAccess	Params ( ) . GetArgs		4687557	0					
ANR	4687611	CallExpression	Params ( )		4687557	0					
ANR	4687612	Callee	Params		4687557	0					
ANR	4687613	Identifier	Params		4687557	0					
ANR	4687614	ArgumentList			4687557	1					
ANR	4687615	Identifier	GetArgs		4687557	1					
ANR	4687616	ArgumentList			4687557	1					
ANR	4687617	Identifier	Count		4687557	1					
ANR	4687618	ArgumentList			4687557	1					
ANR	4687619	CompoundStatement		13:34:316:316	4687557	1					
ANR	4687620	ExpressionStatement	final_args . AppendArgsFromArgList ( Params ( ) . GetArgs ( ) )	495:2:11067:11121	4687557	0	True				
ANR	4687621	CallExpression	final_args . AppendArgsFromArgList ( Params ( ) . GetArgs ( ) )		4687557	0					
ANR	4687622	Callee	final_args . AppendArgsFromArgList		4687557	0					
ANR	4687623	MemberAccess	final_args . AppendArgsFromArgList		4687557	0					
ANR	4687624	Identifier	final_args		4687557	0					
ANR	4687625	Identifier	AppendArgsFromArgList		4687557	1					
ANR	4687626	ArgumentList	Params ( ) . GetArgs ( )		4687557	1					
ANR	4687627	Argument	Params ( ) . GetArgs ( )		4687557	0					
ANR	4687628	CallExpression	Params ( ) . GetArgs ( )		4687557	0					
ANR	4687629	Callee	Params ( ) . GetArgs		4687557	0					
ANR	4687630	MemberAccess	Params ( ) . GetArgs		4687557	0					
ANR	4687631	CallExpression	Params ( )		4687557	0					
ANR	4687632	Callee	Params		4687557	0					
ANR	4687633	Identifier	Params		4687557	0					
ANR	4687634	ArgumentList			4687557	1					
ANR	4687635	Identifier	GetArgs		4687557	1					
ANR	4687636	ArgumentList			4687557	1					
ANR	4687637	ElseStatement	else		4687557	0					
ANR	4687638	ExpressionStatement	priv = PRIV_USER_FINAL	505:1:11251:11273	4687557	0	True				
ANR	4687639	AssignmentExpression	priv = PRIV_USER_FINAL		4687557	0		=			
ANR	4687640	Identifier	priv		4687557	0					
ANR	4687641	Identifier	PRIV_USER_FINAL		4687557	1					
ANR	4687642	IdentifierDeclStatement	priv_state priv ;	499:1:11170:11185	4687557	4	True				
ANR	4687643	IdentifierDecl	priv		4687557	0					
ANR	4687644	IdentifierDeclType	priv_state		4687557	0					
ANR	4687645	Identifier	priv		4687557	1					
ANR	4687646	IdentifierDeclStatement	ifdef WIN32 priv = PRIV_CONDOR ;	500:2:11189:11232	4687557	5	True				
ANR	4687647	IdentifierDecl	priv = PRIV_CONDOR		4687557	0					
ANR	4687648	IdentifierDeclType	ifdef WIN32		4687557	0					
ANR	4687649	Identifier	priv		4687557	1					
ANR	4687650	AssignmentExpression	priv = PRIV_CONDOR		4687557	2		=			
ANR	4687651	Identifier	PRIV_CONDOR		4687557	0					
ANR	4687652	Identifier	PRIV_CONDOR		4687557	1					
ANR	4687653	IdentifierDeclStatement	uid_t uid = get_condor_uid ( ) ;	506:1:11276:11305	4687557	6	True				
ANR	4687654	IdentifierDecl	uid = get_condor_uid ( )		4687557	0					
ANR	4687655	IdentifierDeclType	uid_t		4687557	0					
ANR	4687656	Identifier	uid		4687557	1					
ANR	4687657	AssignmentExpression	uid = get_condor_uid ( )		4687557	2		=			
ANR	4687658	Identifier	uid		4687557	0					
ANR	4687659	CallExpression	get_condor_uid ( )		4687557	1					
ANR	4687660	Callee	get_condor_uid		4687557	0					
ANR	4687661	Identifier	get_condor_uid		4687557	0					
ANR	4687662	ArgumentList			4687557	1					
ANR	4687663	IfStatement	if ( uid == ( uid_t ) - 1 )		4687557	7					
ANR	4687664	Condition	uid == ( uid_t ) - 1	507:6:11313:11329	4687557	0	True				
ANR	4687665	EqualityExpression	uid == ( uid_t ) - 1		4687557	0		==			
ANR	4687666	Identifier	uid		4687557	0					
ANR	4687667	CastExpression	( uid_t ) - 1		4687557	1					
ANR	4687668	CastTarget	uid_t		4687557	0					
ANR	4687669	UnaryOperationExpression	- 1		4687557	1					
ANR	4687670	UnaryOperator	-		4687557	0					
ANR	4687671	PrimaryExpression	1		4687557	1					
ANR	4687672	CompoundStatement		27:1:587:587	4687557	1					
ANR	4687673	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Invalid UID -1\\n"" )"	509:2:11338:11386	4687557	0	True				
ANR	4687674	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Invalid UID -1\\n"" )"		4687557	0					
ANR	4687675	Callee	dprintf		4687557	0					
ANR	4687676	Identifier	dprintf		4687557	0					
ANR	4687677	ArgumentList	D_ALWAYS		4687557	1					
ANR	4687678	Argument	D_ALWAYS		4687557	0					
ANR	4687679	Identifier	D_ALWAYS		4687557	0					
ANR	4687680	Argument	"""CronJob: Invalid UID -1\\n"""		4687557	1					
ANR	4687681	PrimaryExpression	"""CronJob: Invalid UID -1\\n"""		4687557	0					
ANR	4687682	ReturnStatement	return - 1 ;	510:2:11390:11399	4687557	1	True				
ANR	4687683	UnaryOperationExpression	- 1		4687557	0					
ANR	4687684	UnaryOperator	-		4687557	0					
ANR	4687685	PrimaryExpression	1		4687557	1					
ANR	4687686	IdentifierDeclStatement	gid_t gid = get_condor_gid ( ) ;	512:1:11405:11434	4687557	8	True				
ANR	4687687	IdentifierDecl	gid = get_condor_gid ( )		4687557	0					
ANR	4687688	IdentifierDeclType	gid_t		4687557	0					
ANR	4687689	Identifier	gid		4687557	1					
ANR	4687690	AssignmentExpression	gid = get_condor_gid ( )		4687557	2		=			
ANR	4687691	Identifier	gid		4687557	0					
ANR	4687692	CallExpression	get_condor_gid ( )		4687557	1					
ANR	4687693	Callee	get_condor_gid		4687557	0					
ANR	4687694	Identifier	get_condor_gid		4687557	0					
ANR	4687695	ArgumentList			4687557	1					
ANR	4687696	IfStatement	if ( gid == ( uid_t ) - 1 )		4687557	9					
ANR	4687697	Condition	gid == ( uid_t ) - 1	513:6:11442:11458	4687557	0	True				
ANR	4687698	EqualityExpression	gid == ( uid_t ) - 1		4687557	0		==			
ANR	4687699	Identifier	gid		4687557	0					
ANR	4687700	CastExpression	( uid_t ) - 1		4687557	1					
ANR	4687701	CastTarget	uid_t		4687557	0					
ANR	4687702	UnaryOperationExpression	- 1		4687557	1					
ANR	4687703	UnaryOperator	-		4687557	0					
ANR	4687704	PrimaryExpression	1		4687557	1					
ANR	4687705	CompoundStatement		33:1:716:716	4687557	1					
ANR	4687706	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Invalid GID -1\\n"" )"	515:2:11467:11515	4687557	0	True				
ANR	4687707	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Invalid GID -1\\n"" )"		4687557	0					
ANR	4687708	Callee	dprintf		4687557	0					
ANR	4687709	Identifier	dprintf		4687557	0					
ANR	4687710	ArgumentList	D_ALWAYS		4687557	1					
ANR	4687711	Argument	D_ALWAYS		4687557	0					
ANR	4687712	Identifier	D_ALWAYS		4687557	0					
ANR	4687713	Argument	"""CronJob: Invalid GID -1\\n"""		4687557	1					
ANR	4687714	PrimaryExpression	"""CronJob: Invalid GID -1\\n"""		4687557	0					
ANR	4687715	ReturnStatement	return - 1 ;	516:2:11519:11528	4687557	1	True				
ANR	4687716	UnaryOperationExpression	- 1		4687557	0					
ANR	4687717	UnaryOperator	-		4687557	0					
ANR	4687718	PrimaryExpression	1		4687557	1					
ANR	4687719	ExpressionStatement	"set_user_ids ( uid , gid )"	518:1:11534:11558	4687557	10	True				
ANR	4687720	CallExpression	"set_user_ids ( uid , gid )"		4687557	0					
ANR	4687721	Callee	set_user_ids		4687557	0					
ANR	4687722	Identifier	set_user_ids		4687557	0					
ANR	4687723	ArgumentList	uid		4687557	1					
ANR	4687724	Argument	uid		4687557	0					
ANR	4687725	Identifier	uid		4687557	0					
ANR	4687726	Argument	gid		4687557	1					
ANR	4687727	Identifier	gid		4687557	0					
ANR	4687728	IdentifierDeclStatement	"endif m_pid = daemonCore -> Create_Process ( GetExecutable ( ) , final_args , priv , m_reaperId , FALSE , & Params ( ) . GetEnv ( ) , Params ( ) . GetCwd ( ) , NULL , NULL , m_childFds , 0 ) ;"	519:2:11562:11988	4687557	11	True				
ANR	4687729	IdentifierDecl	"m_pid = daemonCore -> Create_Process ( GetExecutable ( ) , final_args , priv , m_reaperId , FALSE , & Params ( ) . GetEnv ( ) , Params ( ) . GetCwd ( ) , NULL , NULL , m_childFds , 0 )"		4687557	0					
ANR	4687730	IdentifierDeclType	endif		4687557	0					
ANR	4687731	Identifier	m_pid		4687557	1					
ANR	4687732	AssignmentExpression	"m_pid = daemonCore -> Create_Process ( GetExecutable ( ) , final_args , priv , m_reaperId , FALSE , & Params ( ) . GetEnv ( ) , Params ( ) . GetCwd ( ) , NULL , NULL , m_childFds , 0 )"		4687557	2		=			
ANR	4687733	Identifier	m_pid		4687557	0					
ANR	4687734	CallExpression	"daemonCore -> Create_Process ( GetExecutable ( ) , final_args , priv , m_reaperId , FALSE , & Params ( ) . GetEnv ( ) , Params ( ) . GetCwd ( ) , NULL , NULL , m_childFds , 0 )"		4687557	1					
ANR	4687735	Callee	daemonCore -> Create_Process		4687557	0					
ANR	4687736	PtrMemberAccess	daemonCore -> Create_Process		4687557	0					
ANR	4687737	Identifier	daemonCore		4687557	0					
ANR	4687738	Identifier	Create_Process		4687557	1					
ANR	4687739	ArgumentList	GetExecutable ( )		4687557	1					
ANR	4687740	Argument	GetExecutable ( )		4687557	0					
ANR	4687741	CallExpression	GetExecutable ( )		4687557	0					
ANR	4687742	Callee	GetExecutable		4687557	0					
ANR	4687743	Identifier	GetExecutable		4687557	0					
ANR	4687744	ArgumentList			4687557	1					
ANR	4687745	Argument	final_args		4687557	1					
ANR	4687746	Identifier	final_args		4687557	0					
ANR	4687747	Argument	priv		4687557	2					
ANR	4687748	Identifier	priv		4687557	0					
ANR	4687749	Argument	m_reaperId		4687557	3					
ANR	4687750	Identifier	m_reaperId		4687557	0					
ANR	4687751	Argument	FALSE		4687557	4					
ANR	4687752	Identifier	FALSE		4687557	0					
ANR	4687753	Argument	& Params ( ) . GetEnv ( )		4687557	5					
ANR	4687754	UnaryOperationExpression	& Params ( ) . GetEnv ( )		4687557	0					
ANR	4687755	UnaryOperator	&		4687557	0					
ANR	4687756	CallExpression	Params ( ) . GetEnv ( )		4687557	1					
ANR	4687757	Callee	Params ( ) . GetEnv		4687557	0					
ANR	4687758	MemberAccess	Params ( ) . GetEnv		4687557	0					
ANR	4687759	CallExpression	Params ( )		4687557	0					
ANR	4687760	Callee	Params		4687557	0					
ANR	4687761	Identifier	Params		4687557	0					
ANR	4687762	ArgumentList			4687557	1					
ANR	4687763	Identifier	GetEnv		4687557	1					
ANR	4687764	ArgumentList			4687557	1					
ANR	4687765	Argument	Params ( ) . GetCwd ( )		4687557	6					
ANR	4687766	CallExpression	Params ( ) . GetCwd ( )		4687557	0					
ANR	4687767	Callee	Params ( ) . GetCwd		4687557	0					
ANR	4687768	MemberAccess	Params ( ) . GetCwd		4687557	0					
ANR	4687769	CallExpression	Params ( )		4687557	0					
ANR	4687770	Callee	Params		4687557	0					
ANR	4687771	Identifier	Params		4687557	0					
ANR	4687772	ArgumentList			4687557	1					
ANR	4687773	Identifier	GetCwd		4687557	1					
ANR	4687774	ArgumentList			4687557	1					
ANR	4687775	Argument	NULL		4687557	7					
ANR	4687776	Identifier	NULL		4687557	0					
ANR	4687777	Argument	NULL		4687557	8					
ANR	4687778	Identifier	NULL		4687557	0					
ANR	4687779	Argument	m_childFds		4687557	9					
ANR	4687780	Identifier	m_childFds		4687557	0					
ANR	4687781	Argument	0		4687557	10					
ANR	4687782	PrimaryExpression	0		4687557	0					
ANR	4687783	ExpressionStatement	uninit_user_ids ( )	536:1:12040:12058	4687557	12	True				
ANR	4687784	CallExpression	uninit_user_ids ( )		4687557	0					
ANR	4687785	Callee	uninit_user_ids		4687557	0					
ANR	4687786	Identifier	uninit_user_ids		4687557	0					
ANR	4687787	ArgumentList			4687557	1					
ANR	4687788	ExpressionStatement	CleanFd ( & m_childFds [ 0 ] )	539:1:12086:12111	4687557	13	True				
ANR	4687789	CallExpression	CleanFd ( & m_childFds [ 0 ] )		4687557	0					
ANR	4687790	Callee	CleanFd		4687557	0					
ANR	4687791	Identifier	CleanFd		4687557	0					
ANR	4687792	ArgumentList	& m_childFds [ 0 ]		4687557	1					
ANR	4687793	Argument	& m_childFds [ 0 ]		4687557	0					
ANR	4687794	UnaryOperationExpression	& m_childFds [ 0 ]		4687557	0					
ANR	4687795	UnaryOperator	&		4687557	0					
ANR	4687796	ArrayIndexing	m_childFds [ 0 ]		4687557	1					
ANR	4687797	Identifier	m_childFds		4687557	0					
ANR	4687798	PrimaryExpression	0		4687557	1					
ANR	4687799	ExpressionStatement	CleanFd ( & m_childFds [ 1 ] )	540:1:12114:12139	4687557	14	True				
ANR	4687800	CallExpression	CleanFd ( & m_childFds [ 1 ] )		4687557	0					
ANR	4687801	Callee	CleanFd		4687557	0					
ANR	4687802	Identifier	CleanFd		4687557	0					
ANR	4687803	ArgumentList	& m_childFds [ 1 ]		4687557	1					
ANR	4687804	Argument	& m_childFds [ 1 ]		4687557	0					
ANR	4687805	UnaryOperationExpression	& m_childFds [ 1 ]		4687557	0					
ANR	4687806	UnaryOperator	&		4687557	0					
ANR	4687807	ArrayIndexing	m_childFds [ 1 ]		4687557	1					
ANR	4687808	Identifier	m_childFds		4687557	0					
ANR	4687809	PrimaryExpression	1		4687557	1					
ANR	4687810	ExpressionStatement	CleanFd ( & m_childFds [ 2 ] )	541:1:12142:12167	4687557	15	True				
ANR	4687811	CallExpression	CleanFd ( & m_childFds [ 2 ] )		4687557	0					
ANR	4687812	Callee	CleanFd		4687557	0					
ANR	4687813	Identifier	CleanFd		4687557	0					
ANR	4687814	ArgumentList	& m_childFds [ 2 ]		4687557	1					
ANR	4687815	Argument	& m_childFds [ 2 ]		4687557	0					
ANR	4687816	UnaryOperationExpression	& m_childFds [ 2 ]		4687557	0					
ANR	4687817	UnaryOperator	&		4687557	0					
ANR	4687818	ArrayIndexing	m_childFds [ 2 ]		4687557	1					
ANR	4687819	Identifier	m_childFds		4687557	0					
ANR	4687820	PrimaryExpression	2		4687557	1					
ANR	4687821	IfStatement	if ( m_pid <= 0 )		4687557	16					
ANR	4687822	Condition	m_pid <= 0	544:6:12193:12202	4687557	0	True				
ANR	4687823	RelationalExpression	m_pid <= 0		4687557	0		<=			
ANR	4687824	Identifier	m_pid		4687557	0					
ANR	4687825	PrimaryExpression	0		4687557	1					
ANR	4687826	CompoundStatement		63:19:1459:1459	4687557	1					
ANR	4687827	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Error running job '%s'\\n"" , GetName ( ) )"	545:2:12210:12277	4687557	0	True				
ANR	4687828	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Error running job '%s'\\n"" , GetName ( ) )"		4687557	0					
ANR	4687829	Callee	dprintf		4687557	0					
ANR	4687830	Identifier	dprintf		4687557	0					
ANR	4687831	ArgumentList	D_ALWAYS		4687557	1					
ANR	4687832	Argument	D_ALWAYS		4687557	0					
ANR	4687833	Identifier	D_ALWAYS		4687557	0					
ANR	4687834	Argument	"""CronJob: Error running job '%s'\\n"""		4687557	1					
ANR	4687835	PrimaryExpression	"""CronJob: Error running job '%s'\\n"""		4687557	0					
ANR	4687836	Argument	GetName ( )		4687557	2					
ANR	4687837	CallExpression	GetName ( )		4687557	0					
ANR	4687838	Callee	GetName		4687557	0					
ANR	4687839	Identifier	GetName		4687557	0					
ANR	4687840	ArgumentList			4687557	1					
ANR	4687841	ExpressionStatement	CleanAll ( )	546:2:12281:12291	4687557	1	True				
ANR	4687842	CallExpression	CleanAll ( )		4687557	0					
ANR	4687843	Callee	CleanAll		4687557	0					
ANR	4687844	Identifier	CleanAll		4687557	0					
ANR	4687845	ArgumentList			4687557	1					
ANR	4687846	ExpressionStatement	SetState ( CRON_IDLE )	547:2:12295:12316	4687557	2	True				
ANR	4687847	CallExpression	SetState ( CRON_IDLE )		4687557	0					
ANR	4687848	Callee	SetState		4687557	0					
ANR	4687849	Identifier	SetState		4687557	0					
ANR	4687850	ArgumentList	CRON_IDLE		4687557	1					
ANR	4687851	Argument	CRON_IDLE		4687557	0					
ANR	4687852	Identifier	CRON_IDLE		4687557	0					
ANR	4687853	ExpressionStatement	m_num_fails ++	548:2:12320:12333	4687557	3	True				
ANR	4687854	PostIncDecOperationExpression	m_num_fails ++		4687557	0					
ANR	4687855	Identifier	m_num_fails		4687557	0					
ANR	4687856	IncDec	++		4687557	1					
ANR	4687857	ExpressionStatement	m_mgr . JobExited ( * this )	553:2:12494:12518	4687557	4	True				
ANR	4687858	CallExpression	m_mgr . JobExited ( * this )		4687557	0					
ANR	4687859	Callee	m_mgr . JobExited		4687557	0					
ANR	4687860	MemberAccess	m_mgr . JobExited		4687557	0					
ANR	4687861	Identifier	m_mgr		4687557	0					
ANR	4687862	Identifier	JobExited		4687557	1					
ANR	4687863	ArgumentList	* this		4687557	1					
ANR	4687864	Argument	* this		4687557	0					
ANR	4687865	UnaryOperationExpression	* this		4687557	0					
ANR	4687866	UnaryOperator	*		4687557	0					
ANR	4687867	Identifier	this		4687557	1					
ANR	4687868	ReturnStatement	return - 1 ;	554:2:12522:12531	4687557	5	True				
ANR	4687869	UnaryOperationExpression	- 1		4687557	0					
ANR	4687870	UnaryOperator	-		4687557	0					
ANR	4687871	PrimaryExpression	1		4687557	1					
ANR	4687872	ExpressionStatement	SetState ( CRON_RUNNING )	558:1:12554:12578	4687557	17	True				
ANR	4687873	CallExpression	SetState ( CRON_RUNNING )		4687557	0					
ANR	4687874	Callee	SetState		4687557	0					
ANR	4687875	Identifier	SetState		4687557	0					
ANR	4687876	ArgumentList	CRON_RUNNING		4687557	1					
ANR	4687877	Argument	CRON_RUNNING		4687557	0					
ANR	4687878	Identifier	CRON_RUNNING		4687557	0					
ANR	4687879	ExpressionStatement	m_last_start_time = time ( NULL )	559:1:12581:12611	4687557	18	True				
ANR	4687880	AssignmentExpression	m_last_start_time = time ( NULL )		4687557	0		=			
ANR	4687881	Identifier	m_last_start_time		4687557	0					
ANR	4687882	CallExpression	time ( NULL )		4687557	1					
ANR	4687883	Callee	time		4687557	0					
ANR	4687884	Identifier	time		4687557	0					
ANR	4687885	ArgumentList	NULL		4687557	1					
ANR	4687886	Argument	NULL		4687557	0					
ANR	4687887	Identifier	NULL		4687557	0					
ANR	4687888	ExpressionStatement	m_run_load = GetJobLoad ( )	560:1:12614:12639	4687557	19	True				
ANR	4687889	AssignmentExpression	m_run_load = GetJobLoad ( )		4687557	0		=			
ANR	4687890	Identifier	m_run_load		4687557	0					
ANR	4687891	CallExpression	GetJobLoad ( )		4687557	1					
ANR	4687892	Callee	GetJobLoad		4687557	0					
ANR	4687893	Identifier	GetJobLoad		4687557	0					
ANR	4687894	ArgumentList			4687557	1					
ANR	4687895	ExpressionStatement	m_num_runs ++	561:1:12642:12654	4687557	20	True				
ANR	4687896	PostIncDecOperationExpression	m_num_runs ++		4687557	0					
ANR	4687897	Identifier	m_num_runs		4687557	0					
ANR	4687898	IncDec	++		4687557	1					
ANR	4687899	ExpressionStatement	m_mgr . JobStarted ( * this )	564:1:12689:12714	4687557	21	True				
ANR	4687900	CallExpression	m_mgr . JobStarted ( * this )		4687557	0					
ANR	4687901	Callee	m_mgr . JobStarted		4687557	0					
ANR	4687902	MemberAccess	m_mgr . JobStarted		4687557	0					
ANR	4687903	Identifier	m_mgr		4687557	0					
ANR	4687904	Identifier	JobStarted		4687557	1					
ANR	4687905	ArgumentList	* this		4687557	1					
ANR	4687906	Argument	* this		4687557	0					
ANR	4687907	UnaryOperationExpression	* this		4687557	0					
ANR	4687908	UnaryOperator	*		4687557	0					
ANR	4687909	Identifier	this		4687557	1					
ANR	4687910	ReturnStatement	return 0 ;	567:1:12730:12738	4687557	22	True				
ANR	4687911	PrimaryExpression	0		4687557	0					
ANR	4687912	ReturnType	int		4687557	1					
ANR	4687913	Identifier	CronJob :: StartJobProcess		4687557	2					
ANR	4687914	ParameterList			4687557	3					
ANR	4687915	CFGEntryNode	ENTRY		4687557		True				
ANR	4687916	CFGExitNode	EXIT		4687557		True				
ANR	4687917	Symbol	final_args		4687557						
ANR	4687918	Symbol	daemonCore -> Create_Process		4687557						
ANR	4687919	Symbol	m_last_start_time		4687557						
ANR	4687920	Symbol	gid		4687557						
ANR	4687921	Symbol	OpenFds		4687557						
ANR	4687922	Symbol	GetJobLoad		4687557						
ANR	4687923	Symbol	uid		4687557						
ANR	4687924	Symbol	PRIV_USER_FINAL		4687557						
ANR	4687925	Symbol	m_pid		4687557						
ANR	4687926	Symbol	daemonCore		4687557						
ANR	4687927	Symbol	GetName		4687557						
ANR	4687928	Symbol	priv		4687557						
ANR	4687929	Symbol	Params ( ) . GetArgs ( ) . Count		4687557						
ANR	4687930	Symbol	m_childFds		4687557						
ANR	4687931	Symbol	NULL		4687557						
ANR	4687932	Symbol	& Params		4687557						
ANR	4687933	Symbol	CRON_RUNNING		4687557						
ANR	4687934	Symbol	GetExecutable		4687557						
ANR	4687935	Symbol	Params ( ) . GetCwd		4687557						
ANR	4687936	Symbol	m_num_runs		4687557						
ANR	4687937	Symbol	Params ( ) . GetArgs		4687557						
ANR	4687938	Symbol	m_run_load		4687557						
ANR	4687939	Symbol	D_ALWAYS		4687557						
ANR	4687940	Symbol	this		4687557						
ANR	4687941	Symbol	Params		4687557						
ANR	4687942	Symbol	CRON_IDLE		4687557						
ANR	4687943	Symbol	m_num_fails		4687557						
ANR	4687944	Symbol	m_mgr		4687557						
ANR	4687945	Symbol	* this		4687557						
ANR	4687946	Symbol	get_condor_uid		4687557						
ANR	4687947	Symbol	* daemonCore		4687557						
ANR	4687948	Symbol	& Params ( ) . GetEnv		4687557						
ANR	4687949	Symbol	m_reaperId		4687557						
ANR	4687950	Symbol	get_condor_gid		4687557						
ANR	4687951	Symbol	FALSE		4687557						
ANR	4687952	Symbol	time		4687557						
ANR	4687953	Symbol	PRIV_CONDOR		4687557						
ANR	4687954	Function	CronJob :: TodoWrite	571:5:12761:13292							
ANR	4687955	FunctionDef	CronJob :: TodoWrite ()		4687954	0					
ANR	4687956	CompoundStatement		574:0:12814:13292	4687954	0					
ANR	4687957	IdentifierDeclStatement	char fname [ 1024 ] ;	575:1:12817:12833	4687954	0	True				
ANR	4687958	IdentifierDecl	fname [ 1024 ]		4687954	0					
ANR	4687959	IdentifierDeclType	char [ 1024 ]		4687954	0					
ANR	4687960	Identifier	fname		4687954	1					
ANR	4687961	PrimaryExpression	1024		4687954	2					
ANR	4687962	IdentifierDeclStatement	FILE * fp ;	576:1:12836:12844	4687954	1	True				
ANR	4687963	IdentifierDecl	* fp		4687954	0					
ANR	4687964	IdentifierDeclType	FILE *		4687954	0					
ANR	4687965	Identifier	fp		4687954	1					
ANR	4687966	ExpressionStatement	"snprintf ( fname , 1024 , ""todo.%s.%06d.%02d"" , name , getpid ( ) , TodoWriteNum ++ )"	577:1:12847:12928	4687954	2	True				
ANR	4687967	CallExpression	"snprintf ( fname , 1024 , ""todo.%s.%06d.%02d"" , name , getpid ( ) , TodoWriteNum ++ )"		4687954	0					
ANR	4687968	Callee	snprintf		4687954	0					
ANR	4687969	Identifier	snprintf		4687954	0					
ANR	4687970	ArgumentList	fname		4687954	1					
ANR	4687971	Argument	fname		4687954	0					
ANR	4687972	Identifier	fname		4687954	0					
ANR	4687973	Argument	1024		4687954	1					
ANR	4687974	PrimaryExpression	1024		4687954	0					
ANR	4687975	Argument	"""todo.%s.%06d.%02d"""		4687954	2					
ANR	4687976	PrimaryExpression	"""todo.%s.%06d.%02d"""		4687954	0					
ANR	4687977	Argument	name		4687954	3					
ANR	4687978	Identifier	name		4687954	0					
ANR	4687979	Argument	getpid ( )		4687954	4					
ANR	4687980	CallExpression	getpid ( )		4687954	0					
ANR	4687981	Callee	getpid		4687954	0					
ANR	4687982	Identifier	getpid		4687954	0					
ANR	4687983	ArgumentList			4687954	1					
ANR	4687984	Argument	TodoWriteNum ++		4687954	5					
ANR	4687985	PostIncDecOperationExpression	TodoWriteNum ++		4687954	0					
ANR	4687986	Identifier	TodoWriteNum		4687954	0					
ANR	4687987	IncDec	++		4687954	1					
ANR	4687988	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s: Writing input log '%s'\\n"" , GetName ( ) , fname )"	579:1:12931:13000	4687954	3	True				
ANR	4687989	CallExpression	"dprintf ( D_ALWAYS , ""%s: Writing input log '%s'\\n"" , GetName ( ) , fname )"		4687954	0					
ANR	4687990	Callee	dprintf		4687954	0					
ANR	4687991	Identifier	dprintf		4687954	0					
ANR	4687992	ArgumentList	D_ALWAYS		4687954	1					
ANR	4687993	Argument	D_ALWAYS		4687954	0					
ANR	4687994	Identifier	D_ALWAYS		4687954	0					
ANR	4687995	Argument	"""%s: Writing input log '%s'\\n"""		4687954	1					
ANR	4687996	PrimaryExpression	"""%s: Writing input log '%s'\\n"""		4687954	0					
ANR	4687997	Argument	GetName ( )		4687954	2					
ANR	4687998	CallExpression	GetName ( )		4687954	0					
ANR	4687999	Callee	GetName		4687954	0					
ANR	4688000	Identifier	GetName		4687954	0					
ANR	4688001	ArgumentList			4687954	1					
ANR	4688002	Argument	fname		4687954	3					
ANR	4688003	Identifier	fname		4687954	0					
ANR	4688004	IfStatement	"if ( ( fp = safe_fopen_wrapper_follow ( fname , ""w"" ) ) != NULL )"		4687954	4					
ANR	4688005	Condition	"( fp = safe_fopen_wrapper_follow ( fname , ""w"" ) ) != NULL"	581:6:13009:13064	4687954	0	True				
ANR	4688006	EqualityExpression	"( fp = safe_fopen_wrapper_follow ( fname , ""w"" ) ) != NULL"		4687954	0		!=			
ANR	4688007	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( fname , ""w"" )"		4687954	0		=			
ANR	4688008	Identifier	fp		4687954	0					
ANR	4688009	CallExpression	"safe_fopen_wrapper_follow ( fname , ""w"" )"		4687954	1					
ANR	4688010	Callee	safe_fopen_wrapper_follow		4687954	0					
ANR	4688011	Identifier	safe_fopen_wrapper_follow		4687954	0					
ANR	4688012	ArgumentList	fname		4687954	1					
ANR	4688013	Argument	fname		4687954	0					
ANR	4688014	Identifier	fname		4687954	0					
ANR	4688015	Argument	"""w"""		4687954	1					
ANR	4688016	PrimaryExpression	"""w"""		4687954	0					
ANR	4688017	Identifier	NULL		4687954	1					
ANR	4688018	CompoundStatement		8:65:253:253	4687954	1					
ANR	4688019	IfStatement	if ( TodoBufWrap )		4687954	0					
ANR	4688020	Condition	TodoBufWrap	582:7:13077:13087	4687954	0	True				
ANR	4688021	Identifier	TodoBufWrap		4687954	0					
ANR	4688022	CompoundStatement		9:21:276:276	4687954	1					
ANR	4688023	ExpressionStatement	"fwrite ( TodoBuffer + TodoBufOffset , TodoBufSize - TodoBufOffset , 1 , fp )"	583:3:13096:13183	4687954	0	True				
ANR	4688024	CallExpression	"fwrite ( TodoBuffer + TodoBufOffset , TodoBufSize - TodoBufOffset , 1 , fp )"		4687954	0					
ANR	4688025	Callee	fwrite		4687954	0					
ANR	4688026	Identifier	fwrite		4687954	0					
ANR	4688027	ArgumentList	TodoBuffer + TodoBufOffset		4687954	1					
ANR	4688028	Argument	TodoBuffer + TodoBufOffset		4687954	0					
ANR	4688029	AdditiveExpression	TodoBuffer + TodoBufOffset		4687954	0		+			
ANR	4688030	Identifier	TodoBuffer		4687954	0					
ANR	4688031	Identifier	TodoBufOffset		4687954	1					
ANR	4688032	Argument	TodoBufSize - TodoBufOffset		4687954	1					
ANR	4688033	AdditiveExpression	TodoBufSize - TodoBufOffset		4687954	0		-			
ANR	4688034	Identifier	TodoBufSize		4687954	0					
ANR	4688035	Identifier	TodoBufOffset		4687954	1					
ANR	4688036	Argument	1		4687954	2					
ANR	4688037	PrimaryExpression	1		4687954	0					
ANR	4688038	Argument	fp		4687954	3					
ANR	4688039	Identifier	fp		4687954	0					
ANR	4688040	ExpressionStatement	"fwrite ( TodoBuffer , TodoBufOffset , 1 , fp )"	588:2:13191:13233	4687954	1	True				
ANR	4688041	CallExpression	"fwrite ( TodoBuffer , TodoBufOffset , 1 , fp )"		4687954	0					
ANR	4688042	Callee	fwrite		4687954	0					
ANR	4688043	Identifier	fwrite		4687954	0					
ANR	4688044	ArgumentList	TodoBuffer		4687954	1					
ANR	4688045	Argument	TodoBuffer		4687954	0					
ANR	4688046	Identifier	TodoBuffer		4687954	0					
ANR	4688047	Argument	TodoBufOffset		4687954	1					
ANR	4688048	Identifier	TodoBufOffset		4687954	0					
ANR	4688049	Argument	1		4687954	2					
ANR	4688050	PrimaryExpression	1		4687954	0					
ANR	4688051	Argument	fp		4687954	3					
ANR	4688052	Identifier	fp		4687954	0					
ANR	4688053	ExpressionStatement	fclose ( fp )	589:2:13237:13249	4687954	2	True				
ANR	4688054	CallExpression	fclose ( fp )		4687954	0					
ANR	4688055	Callee	fclose		4687954	0					
ANR	4688056	Identifier	fclose		4687954	0					
ANR	4688057	ArgumentList	fp		4687954	1					
ANR	4688058	Argument	fp		4687954	0					
ANR	4688059	Identifier	fp		4687954	0					
ANR	4688060	ExpressionStatement	TodoBufOffset = 0	591:1:13255:13272	4687954	5	True				
ANR	4688061	AssignmentExpression	TodoBufOffset = 0		4687954	0		=			
ANR	4688062	Identifier	TodoBufOffset		4687954	0					
ANR	4688063	PrimaryExpression	0		4687954	1					
ANR	4688064	ExpressionStatement	TodoBufWrap = 0	592:1:13275:13290	4687954	6	True				
ANR	4688065	AssignmentExpression	TodoBufWrap = 0		4687954	0		=			
ANR	4688066	Identifier	TodoBufWrap		4687954	0					
ANR	4688067	PrimaryExpression	0		4687954	1					
ANR	4688068	ReturnType	CRONJOB_PIPEIO_DEBUG void		4687954	1					
ANR	4688069	Identifier	CronJob :: TodoWrite		4687954	2					
ANR	4688070	ParameterList			4687954	3					
ANR	4688071	CFGEntryNode	ENTRY		4687954		True				
ANR	4688072	CFGExitNode	EXIT		4687954		True				
ANR	4688073	Symbol	fname		4687954						
ANR	4688074	Symbol	NULL		4687954						
ANR	4688075	Symbol	D_ALWAYS		4687954						
ANR	4688076	Symbol	TodoBuffer		4687954						
ANR	4688077	Symbol	TodoBufSize		4687954						
ANR	4688078	Symbol	fp		4687954						
ANR	4688079	Symbol	TodoWriteNum		4687954						
ANR	4688080	Symbol	name		4687954						
ANR	4688081	Symbol	TodoBufOffset		4687954						
ANR	4688082	Symbol	GetName		4687954						
ANR	4688083	Symbol	getpid		4687954						
ANR	4688084	Symbol	safe_fopen_wrapper_follow		4687954						
ANR	4688085	Symbol	TodoBufWrap		4687954						
ANR	4688086	DeclStmt									
ANR	4688087	Decl							char	char [ STDOUT_READBUF_SIZE ]	buf
ANR	4688088	DeclStmt									
ANR	4688089	Decl							int	int	bytes
ANR	4688090	DeclStmt									
ANR	4688091	Decl							int	int	reads
ANR	4688092	DeclStmt									
ANR	4688093	Decl							const char	const char *	bptr
ANR	4688094	DeclStmt									
ANR	4688095	Decl							char	char *	OutPtr
ANR	4688096	DeclStmt									
ANR	4688097	Decl							int	int	Count
ANR	4688098	DeclStmt									
ANR	4688099	Decl							char	char *	InPtr
ANR	4688100	DeclStmt									
ANR	4688101	Decl							char	char [ STDERR_READBUF_SIZE ]	buf
ANR	4688102	DeclStmt									
ANR	4688103	Decl							int	int	bytes
ANR	4688104	DeclStmt									
ANR	4688105	Decl							const char	const char *	bptr
ANR	4688106	Function	CronJob :: OpenFds	710:0:15976:17290							
ANR	4688107	FunctionDef	CronJob :: OpenFds ()		4688106	0					
ANR	4688108	CompoundStatement		712:0:16006:17290	4688106	0					
ANR	4688109	IdentifierDeclStatement	int tmpfds [ 2 ] ;	713:1:16009:16022	4688106	0	True				
ANR	4688110	IdentifierDecl	tmpfds [ 2 ]		4688106	0					
ANR	4688111	IdentifierDeclType	int [ 2 ]		4688106	0					
ANR	4688112	Identifier	tmpfds		4688106	1					
ANR	4688113	PrimaryExpression	2		4688106	2					
ANR	4688114	ExpressionStatement	m_childFds [ 0 ] = - 1	716:1:16059:16077	4688106	1	True				
ANR	4688115	AssignmentExpression	m_childFds [ 0 ] = - 1		4688106	0		=			
ANR	4688116	ArrayIndexing	m_childFds [ 0 ]		4688106	0					
ANR	4688117	Identifier	m_childFds		4688106	0					
ANR	4688118	PrimaryExpression	0		4688106	1					
ANR	4688119	UnaryOperationExpression	- 1		4688106	1					
ANR	4688120	UnaryOperator	-		4688106	0					
ANR	4688121	PrimaryExpression	1		4688106	1					
ANR	4688122	IfStatement	"if ( ! daemonCore -> Create_Pipe ( tmpfds , true , false , true ) )"		4688106	2					
ANR	4688123	Condition	"! daemonCore -> Create_Pipe ( tmpfds , true , false , true )"	719:6:16105:16294	4688106	0	True				
ANR	4688124	UnaryOperationExpression	"! daemonCore -> Create_Pipe ( tmpfds , true , false , true )"		4688106	0					
ANR	4688125	UnaryOperator	!		4688106	0					
ANR	4688126	CallExpression	"daemonCore -> Create_Pipe ( tmpfds , true , false , true )"		4688106	1					
ANR	4688127	Callee	daemonCore -> Create_Pipe		4688106	0					
ANR	4688128	PtrMemberAccess	daemonCore -> Create_Pipe		4688106	0					
ANR	4688129	Identifier	daemonCore		4688106	0					
ANR	4688130	Identifier	Create_Pipe		4688106	1					
ANR	4688131	ArgumentList	tmpfds		4688106	1					
ANR	4688132	Argument	tmpfds		4688106	0					
ANR	4688133	Identifier	tmpfds		4688106	0					
ANR	4688134	Argument	true		4688106	1					
ANR	4688135	Identifier	true		4688106	0					
ANR	4688136	Argument	false		4688106	2					
ANR	4688137	Identifier	false		4688106	0					
ANR	4688138	Argument	true		4688106	3					
ANR	4688139	Identifier	true		4688106	0					
ANR	4688140	CompoundStatement		12:15:291:291	4688106	1					
ANR	4688141	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Can't create pipe, errno %d : %s\\n"" , errno , strerror ( errno ) )"	724:2:16302:16399	4688106	0	True				
ANR	4688142	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Can't create pipe, errno %d : %s\\n"" , errno , strerror ( errno ) )"		4688106	0					
ANR	4688143	Callee	dprintf		4688106	0					
ANR	4688144	Identifier	dprintf		4688106	0					
ANR	4688145	ArgumentList	D_ALWAYS		4688106	1					
ANR	4688146	Argument	D_ALWAYS		4688106	0					
ANR	4688147	Identifier	D_ALWAYS		4688106	0					
ANR	4688148	Argument	"""CronJob: Can't create pipe, errno %d : %s\\n"""		4688106	1					
ANR	4688149	PrimaryExpression	"""CronJob: Can't create pipe, errno %d : %s\\n"""		4688106	0					
ANR	4688150	Argument	errno		4688106	2					
ANR	4688151	Identifier	errno		4688106	0					
ANR	4688152	Argument	strerror ( errno )		4688106	3					
ANR	4688153	CallExpression	strerror ( errno )		4688106	0					
ANR	4688154	Callee	strerror		4688106	0					
ANR	4688155	Identifier	strerror		4688106	0					
ANR	4688156	ArgumentList	errno		4688106	1					
ANR	4688157	Argument	errno		4688106	0					
ANR	4688158	Identifier	errno		4688106	0					
ANR	4688159	ExpressionStatement	CleanAll ( )	726:2:16403:16414	4688106	1	True				
ANR	4688160	CallExpression	CleanAll ( )		4688106	0					
ANR	4688161	Callee	CleanAll		4688106	0					
ANR	4688162	Identifier	CleanAll		4688106	0					
ANR	4688163	ArgumentList			4688106	1					
ANR	4688164	ReturnStatement	return - 1 ;	727:2:16418:16427	4688106	2	True				
ANR	4688165	UnaryOperationExpression	- 1		4688106	0					
ANR	4688166	UnaryOperator	-		4688106	0					
ANR	4688167	PrimaryExpression	1		4688106	1					
ANR	4688168	ExpressionStatement	m_stdOut = tmpfds [ 0 ]	729:1:16433:16453	4688106	3	True				
ANR	4688169	AssignmentExpression	m_stdOut = tmpfds [ 0 ]		4688106	0		=			
ANR	4688170	Identifier	m_stdOut		4688106	0					
ANR	4688171	ArrayIndexing	tmpfds [ 0 ]		4688106	1					
ANR	4688172	Identifier	tmpfds		4688106	0					
ANR	4688173	PrimaryExpression	0		4688106	1					
ANR	4688174	ExpressionStatement	m_childFds [ 1 ] = tmpfds [ 1 ]	730:1:16456:16481	4688106	4	True				
ANR	4688175	AssignmentExpression	m_childFds [ 1 ] = tmpfds [ 1 ]		4688106	0		=			
ANR	4688176	ArrayIndexing	m_childFds [ 1 ]		4688106	0					
ANR	4688177	Identifier	m_childFds		4688106	0					
ANR	4688178	PrimaryExpression	1		4688106	1					
ANR	4688179	ArrayIndexing	tmpfds [ 1 ]		4688106	1					
ANR	4688180	Identifier	tmpfds		4688106	0					
ANR	4688181	PrimaryExpression	1		4688106	1					
ANR	4688182	ExpressionStatement	"daemonCore -> Register_Pipe ( m_stdOut , ""Standard Out"" , static_cast < PipeHandlercpp > ( & CronJob :: StdoutHandler ) , ""Standard Out Handler"" , this )"	731:1:16484:16661	4688106	5	True				
ANR	4688183	CallExpression	"daemonCore -> Register_Pipe ( m_stdOut , ""Standard Out"" , static_cast < PipeHandlercpp > ( & CronJob :: StdoutHandler ) , ""Standard Out Handler"" , this )"		4688106	0					
ANR	4688184	Callee	daemonCore -> Register_Pipe		4688106	0					
ANR	4688185	PtrMemberAccess	daemonCore -> Register_Pipe		4688106	0					
ANR	4688186	Identifier	daemonCore		4688106	0					
ANR	4688187	Identifier	Register_Pipe		4688106	1					
ANR	4688188	ArgumentList	m_stdOut		4688106	1					
ANR	4688189	Argument	m_stdOut		4688106	0					
ANR	4688190	Identifier	m_stdOut		4688106	0					
ANR	4688191	Argument	"""Standard Out"""		4688106	1					
ANR	4688192	PrimaryExpression	"""Standard Out"""		4688106	0					
ANR	4688193	Argument	static_cast < PipeHandlercpp > ( & CronJob :: StdoutHandler )		4688106	2					
ANR	4688194	RelationalExpression	static_cast < PipeHandlercpp > ( & CronJob :: StdoutHandler )		4688106	0		<			
ANR	4688195	Identifier	static_cast		4688106	0					
ANR	4688196	RelationalExpression	PipeHandlercpp > ( & CronJob :: StdoutHandler )		4688106	1		>			
ANR	4688197	Identifier	PipeHandlercpp		4688106	0					
ANR	4688198	UnaryOperationExpression	& CronJob :: StdoutHandler		4688106	1					
ANR	4688199	UnaryOperator	&		4688106	0					
ANR	4688200	Identifier	CronJob :: StdoutHandler		4688106	1					
ANR	4688201	Argument	"""Standard Out Handler"""		4688106	3					
ANR	4688202	PrimaryExpression	"""Standard Out Handler"""		4688106	0					
ANR	4688203	Argument	this		4688106	4					
ANR	4688204	Identifier	this		4688106	0					
ANR	4688205	IfStatement	"if ( ! daemonCore -> Create_Pipe ( tmpfds , true , false , true ) )"		4688106	6					
ANR	4688206	Condition	"! daemonCore -> Create_Pipe ( tmpfds , true , false , true )"	738:6:16689:16876	4688106	0	True				
ANR	4688207	UnaryOperationExpression	"! daemonCore -> Create_Pipe ( tmpfds , true , false , true )"		4688106	0					
ANR	4688208	UnaryOperator	!		4688106	0					
ANR	4688209	CallExpression	"daemonCore -> Create_Pipe ( tmpfds , true , false , true )"		4688106	1					
ANR	4688210	Callee	daemonCore -> Create_Pipe		4688106	0					
ANR	4688211	PtrMemberAccess	daemonCore -> Create_Pipe		4688106	0					
ANR	4688212	Identifier	daemonCore		4688106	0					
ANR	4688213	Identifier	Create_Pipe		4688106	1					
ANR	4688214	ArgumentList	tmpfds		4688106	1					
ANR	4688215	Argument	tmpfds		4688106	0					
ANR	4688216	Identifier	tmpfds		4688106	0					
ANR	4688217	Argument	true		4688106	1					
ANR	4688218	Identifier	true		4688106	0					
ANR	4688219	Argument	false		4688106	2					
ANR	4688220	Identifier	false		4688106	0					
ANR	4688221	Argument	true		4688106	3					
ANR	4688222	Identifier	true		4688106	0					
ANR	4688223	CompoundStatement		31:12:873:873	4688106	1					
ANR	4688224	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Can't create STDERR pipe, errno %d : %s\\n"" , errno , strerror ( errno ) )"	743:2:16884:16993	4688106	0	True				
ANR	4688225	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Can't create STDERR pipe, errno %d : %s\\n"" , errno , strerror ( errno ) )"		4688106	0					
ANR	4688226	Callee	dprintf		4688106	0					
ANR	4688227	Identifier	dprintf		4688106	0					
ANR	4688228	ArgumentList	D_ALWAYS		4688106	1					
ANR	4688229	Argument	D_ALWAYS		4688106	0					
ANR	4688230	Identifier	D_ALWAYS		4688106	0					
ANR	4688231	Argument	"""CronJob: Can't create STDERR pipe, errno %d : %s\\n"""		4688106	1					
ANR	4688232	PrimaryExpression	"""CronJob: Can't create STDERR pipe, errno %d : %s\\n"""		4688106	0					
ANR	4688233	Argument	errno		4688106	2					
ANR	4688234	Identifier	errno		4688106	0					
ANR	4688235	Argument	strerror ( errno )		4688106	3					
ANR	4688236	CallExpression	strerror ( errno )		4688106	0					
ANR	4688237	Callee	strerror		4688106	0					
ANR	4688238	Identifier	strerror		4688106	0					
ANR	4688239	ArgumentList	errno		4688106	1					
ANR	4688240	Argument	errno		4688106	0					
ANR	4688241	Identifier	errno		4688106	0					
ANR	4688242	ExpressionStatement	CleanAll ( )	746:2:16997:17008	4688106	1	True				
ANR	4688243	CallExpression	CleanAll ( )		4688106	0					
ANR	4688244	Callee	CleanAll		4688106	0					
ANR	4688245	Identifier	CleanAll		4688106	0					
ANR	4688246	ArgumentList			4688106	1					
ANR	4688247	ReturnStatement	return - 1 ;	747:2:17012:17021	4688106	2	True				
ANR	4688248	UnaryOperationExpression	- 1		4688106	0					
ANR	4688249	UnaryOperator	-		4688106	0					
ANR	4688250	PrimaryExpression	1		4688106	1					
ANR	4688251	ExpressionStatement	m_stdErr = tmpfds [ 0 ]	749:1:17027:17047	4688106	7	True				
ANR	4688252	AssignmentExpression	m_stdErr = tmpfds [ 0 ]		4688106	0		=			
ANR	4688253	Identifier	m_stdErr		4688106	0					
ANR	4688254	ArrayIndexing	tmpfds [ 0 ]		4688106	1					
ANR	4688255	Identifier	tmpfds		4688106	0					
ANR	4688256	PrimaryExpression	0		4688106	1					
ANR	4688257	ExpressionStatement	m_childFds [ 2 ] = tmpfds [ 1 ]	750:1:17050:17075	4688106	8	True				
ANR	4688258	AssignmentExpression	m_childFds [ 2 ] = tmpfds [ 1 ]		4688106	0		=			
ANR	4688259	ArrayIndexing	m_childFds [ 2 ]		4688106	0					
ANR	4688260	Identifier	m_childFds		4688106	0					
ANR	4688261	PrimaryExpression	2		4688106	1					
ANR	4688262	ArrayIndexing	tmpfds [ 1 ]		4688106	1					
ANR	4688263	Identifier	tmpfds		4688106	0					
ANR	4688264	PrimaryExpression	1		4688106	1					
ANR	4688265	ExpressionStatement	"daemonCore -> Register_Pipe ( m_stdErr , ""Standard Error"" , static_cast < PipeHandlercpp > ( & CronJob :: StderrHandler ) , ""Standard Error Handler"" , this )"	751:1:17078:17259	4688106	9	True				
ANR	4688266	CallExpression	"daemonCore -> Register_Pipe ( m_stdErr , ""Standard Error"" , static_cast < PipeHandlercpp > ( & CronJob :: StderrHandler ) , ""Standard Error Handler"" , this )"		4688106	0					
ANR	4688267	Callee	daemonCore -> Register_Pipe		4688106	0					
ANR	4688268	PtrMemberAccess	daemonCore -> Register_Pipe		4688106	0					
ANR	4688269	Identifier	daemonCore		4688106	0					
ANR	4688270	Identifier	Register_Pipe		4688106	1					
ANR	4688271	ArgumentList	m_stdErr		4688106	1					
ANR	4688272	Argument	m_stdErr		4688106	0					
ANR	4688273	Identifier	m_stdErr		4688106	0					
ANR	4688274	Argument	"""Standard Error"""		4688106	1					
ANR	4688275	PrimaryExpression	"""Standard Error"""		4688106	0					
ANR	4688276	Argument	static_cast < PipeHandlercpp > ( & CronJob :: StderrHandler )		4688106	2					
ANR	4688277	RelationalExpression	static_cast < PipeHandlercpp > ( & CronJob :: StderrHandler )		4688106	0		<			
ANR	4688278	Identifier	static_cast		4688106	0					
ANR	4688279	RelationalExpression	PipeHandlercpp > ( & CronJob :: StderrHandler )		4688106	1		>			
ANR	4688280	Identifier	PipeHandlercpp		4688106	0					
ANR	4688281	UnaryOperationExpression	& CronJob :: StderrHandler		4688106	1					
ANR	4688282	UnaryOperator	&		4688106	0					
ANR	4688283	Identifier	CronJob :: StderrHandler		4688106	1					
ANR	4688284	Argument	"""Standard Error Handler"""		4688106	3					
ANR	4688285	PrimaryExpression	"""Standard Error Handler"""		4688106	0					
ANR	4688286	Argument	this		4688106	4					
ANR	4688287	Identifier	this		4688106	0					
ANR	4688288	ReturnStatement	return 0 ;	758:1:17280:17288	4688106	10	True				
ANR	4688289	PrimaryExpression	0		4688106	0					
ANR	4688290	ReturnType	int		4688106	1					
ANR	4688291	Identifier	CronJob :: OpenFds		4688106	2					
ANR	4688292	ParameterList			4688106	3					
ANR	4688293	CFGEntryNode	ENTRY		4688106		True				
ANR	4688294	CFGExitNode	EXIT		4688106		True				
ANR	4688295	Symbol	errno		4688106						
ANR	4688296	Symbol	m_stdOut		4688106						
ANR	4688297	Symbol	false		4688106						
ANR	4688298	Symbol	D_ALWAYS		4688106						
ANR	4688299	Symbol	this		4688106						
ANR	4688300	Symbol	m_stdErr		4688106						
ANR	4688301	Symbol	* tmpfds		4688106						
ANR	4688302	Symbol	* m_childFds		4688106						
ANR	4688303	Symbol	strerror		4688106						
ANR	4688304	Symbol	static_cast		4688106						
ANR	4688305	Symbol	PipeHandlercpp		4688106						
ANR	4688306	Symbol	* daemonCore		4688106						
ANR	4688307	Symbol	& CronJob :: StderrHandler		4688106						
ANR	4688308	Symbol	daemonCore		4688106						
ANR	4688309	Symbol	tmpfds		4688106						
ANR	4688310	Symbol	true		4688106						
ANR	4688311	Symbol	& CronJob :: StdoutHandler		4688106						
ANR	4688312	Symbol	daemonCore -> Create_Pipe		4688106						
ANR	4688313	Symbol	m_childFds		4688106						
ANR	4688314	Function	CronJob :: CleanAll	762:0:17342:17506							
ANR	4688315	FunctionDef	CronJob :: CleanAll ()		4688314	0					
ANR	4688316	CompoundStatement		764:0:17374:17506	4688314	0					
ANR	4688317	ExpressionStatement	CleanFd ( & m_stdOut )	765:1:17377:17397	4688314	0	True				
ANR	4688318	CallExpression	CleanFd ( & m_stdOut )		4688314	0					
ANR	4688319	Callee	CleanFd		4688314	0					
ANR	4688320	Identifier	CleanFd		4688314	0					
ANR	4688321	ArgumentList	& m_stdOut		4688314	1					
ANR	4688322	Argument	& m_stdOut		4688314	0					
ANR	4688323	UnaryOperationExpression	& m_stdOut		4688314	0					
ANR	4688324	UnaryOperator	&		4688314	0					
ANR	4688325	Identifier	m_stdOut		4688314	1					
ANR	4688326	ExpressionStatement	CleanFd ( & m_stdErr )	766:1:17400:17420	4688314	1	True				
ANR	4688327	CallExpression	CleanFd ( & m_stdErr )		4688314	0					
ANR	4688328	Callee	CleanFd		4688314	0					
ANR	4688329	Identifier	CleanFd		4688314	0					
ANR	4688330	ArgumentList	& m_stdErr		4688314	1					
ANR	4688331	Argument	& m_stdErr		4688314	0					
ANR	4688332	UnaryOperationExpression	& m_stdErr		4688314	0					
ANR	4688333	UnaryOperator	&		4688314	0					
ANR	4688334	Identifier	m_stdErr		4688314	1					
ANR	4688335	ExpressionStatement	CleanFd ( & m_childFds [ 0 ] )	767:1:17423:17448	4688314	2	True				
ANR	4688336	CallExpression	CleanFd ( & m_childFds [ 0 ] )		4688314	0					
ANR	4688337	Callee	CleanFd		4688314	0					
ANR	4688338	Identifier	CleanFd		4688314	0					
ANR	4688339	ArgumentList	& m_childFds [ 0 ]		4688314	1					
ANR	4688340	Argument	& m_childFds [ 0 ]		4688314	0					
ANR	4688341	UnaryOperationExpression	& m_childFds [ 0 ]		4688314	0					
ANR	4688342	UnaryOperator	&		4688314	0					
ANR	4688343	ArrayIndexing	m_childFds [ 0 ]		4688314	1					
ANR	4688344	Identifier	m_childFds		4688314	0					
ANR	4688345	PrimaryExpression	0		4688314	1					
ANR	4688346	ExpressionStatement	CleanFd ( & m_childFds [ 1 ] )	768:1:17451:17476	4688314	3	True				
ANR	4688347	CallExpression	CleanFd ( & m_childFds [ 1 ] )		4688314	0					
ANR	4688348	Callee	CleanFd		4688314	0					
ANR	4688349	Identifier	CleanFd		4688314	0					
ANR	4688350	ArgumentList	& m_childFds [ 1 ]		4688314	1					
ANR	4688351	Argument	& m_childFds [ 1 ]		4688314	0					
ANR	4688352	UnaryOperationExpression	& m_childFds [ 1 ]		4688314	0					
ANR	4688353	UnaryOperator	&		4688314	0					
ANR	4688354	ArrayIndexing	m_childFds [ 1 ]		4688314	1					
ANR	4688355	Identifier	m_childFds		4688314	0					
ANR	4688356	PrimaryExpression	1		4688314	1					
ANR	4688357	ExpressionStatement	CleanFd ( & m_childFds [ 2 ] )	769:1:17479:17504	4688314	4	True				
ANR	4688358	CallExpression	CleanFd ( & m_childFds [ 2 ] )		4688314	0					
ANR	4688359	Callee	CleanFd		4688314	0					
ANR	4688360	Identifier	CleanFd		4688314	0					
ANR	4688361	ArgumentList	& m_childFds [ 2 ]		4688314	1					
ANR	4688362	Argument	& m_childFds [ 2 ]		4688314	0					
ANR	4688363	UnaryOperationExpression	& m_childFds [ 2 ]		4688314	0					
ANR	4688364	UnaryOperator	&		4688314	0					
ANR	4688365	ArrayIndexing	m_childFds [ 2 ]		4688314	1					
ANR	4688366	Identifier	m_childFds		4688314	0					
ANR	4688367	PrimaryExpression	2		4688314	1					
ANR	4688368	ReturnType	void		4688314	1					
ANR	4688369	Identifier	CronJob :: CleanAll		4688314	2					
ANR	4688370	ParameterList			4688314	3					
ANR	4688371	CFGEntryNode	ENTRY		4688314		True				
ANR	4688372	CFGExitNode	EXIT		4688314		True				
ANR	4688373	Symbol	& m_stdOut		4688314						
ANR	4688374	Symbol	& m_stdErr		4688314						
ANR	4688375	Symbol	m_childFds		4688314						
ANR	4688376	Function	CronJob :: CleanFile	773:0:17530:17634							
ANR	4688377	FunctionDef	CronJob :: CleanFile (FILE * * file)		4688376	0					
ANR	4688378	CompoundStatement		775:0:17570:17634	4688376	0					
ANR	4688379	IfStatement	if ( NULL != * file )		4688376	0					
ANR	4688380	Condition	NULL != * file	776:6:17578:17590	4688376	0	True				
ANR	4688381	EqualityExpression	NULL != * file		4688376	0		!=			
ANR	4688382	Identifier	NULL		4688376	0					
ANR	4688383	UnaryOperationExpression	* file		4688376	1					
ANR	4688384	UnaryOperator	*		4688376	0					
ANR	4688385	Identifier	file		4688376	1					
ANR	4688386	CompoundStatement		2:22:23:23	4688376	1					
ANR	4688387	ExpressionStatement	fclose ( * file )	777:2:17598:17613	4688376	0	True				
ANR	4688388	CallExpression	fclose ( * file )		4688376	0					
ANR	4688389	Callee	fclose		4688376	0					
ANR	4688390	Identifier	fclose		4688376	0					
ANR	4688391	ArgumentList	* file		4688376	1					
ANR	4688392	Argument	* file		4688376	0					
ANR	4688393	UnaryOperationExpression	* file		4688376	0					
ANR	4688394	UnaryOperator	*		4688376	0					
ANR	4688395	Identifier	file		4688376	1					
ANR	4688396	ExpressionStatement	* file = NULL	778:2:17617:17629	4688376	1	True				
ANR	4688397	AssignmentExpression	* file = NULL		4688376	0		=			
ANR	4688398	UnaryOperationExpression	* file		4688376	0					
ANR	4688399	UnaryOperator	*		4688376	0					
ANR	4688400	Identifier	file		4688376	1					
ANR	4688401	Identifier	NULL		4688376	1					
ANR	4688402	ReturnType	void		4688376	1					
ANR	4688403	Identifier	CronJob :: CleanFile		4688376	2					
ANR	4688404	ParameterList	FILE * * file		4688376	3					
ANR	4688405	Parameter	FILE * * file	774:21:17556:17566	4688376	0	True				
ANR	4688406	ParameterType	FILE * *		4688376	0					
ANR	4688407	Identifier	file		4688376	1					
ANR	4688408	CFGEntryNode	ENTRY		4688376		True				
ANR	4688409	CFGExitNode	EXIT		4688376		True				
ANR	4688410	Symbol	file		4688376						
ANR	4688411	Symbol	NULL		4688376						
ANR	4688412	Symbol	* file		4688376						
ANR	4688413	Function	CronJob :: CleanFd	783:0:17667:17770							
ANR	4688414	FunctionDef	CronJob :: CleanFd (int * fd)		4688413	0					
ANR	4688415	CompoundStatement		785:0:17701:17770	4688413	0					
ANR	4688416	IfStatement	if ( * fd >= 0 )		4688413	0					
ANR	4688417	Condition	* fd >= 0	786:6:17709:17716	4688413	0	True				
ANR	4688418	RelationalExpression	* fd >= 0		4688413	0		>=			
ANR	4688419	UnaryOperationExpression	* fd		4688413	0					
ANR	4688420	UnaryOperator	*		4688413	0					
ANR	4688421	Identifier	fd		4688413	1					
ANR	4688422	PrimaryExpression	0		4688413	1					
ANR	4688423	CompoundStatement		2:17:18:18	4688413	1					
ANR	4688424	ExpressionStatement	daemonCore -> Close_Pipe ( * fd )	787:2:17724:17753	4688413	0	True				
ANR	4688425	CallExpression	daemonCore -> Close_Pipe ( * fd )		4688413	0					
ANR	4688426	Callee	daemonCore -> Close_Pipe		4688413	0					
ANR	4688427	PtrMemberAccess	daemonCore -> Close_Pipe		4688413	0					
ANR	4688428	Identifier	daemonCore		4688413	0					
ANR	4688429	Identifier	Close_Pipe		4688413	1					
ANR	4688430	ArgumentList	* fd		4688413	1					
ANR	4688431	Argument	* fd		4688413	0					
ANR	4688432	UnaryOperationExpression	* fd		4688413	0					
ANR	4688433	UnaryOperator	*		4688413	0					
ANR	4688434	Identifier	fd		4688413	1					
ANR	4688435	ExpressionStatement	* fd = - 1	788:2:17757:17765	4688413	1	True				
ANR	4688436	AssignmentExpression	* fd = - 1		4688413	0		=			
ANR	4688437	UnaryOperationExpression	* fd		4688413	0					
ANR	4688438	UnaryOperator	*		4688413	0					
ANR	4688439	Identifier	fd		4688413	1					
ANR	4688440	UnaryOperationExpression	- 1		4688413	1					
ANR	4688441	UnaryOperator	-		4688413	0					
ANR	4688442	PrimaryExpression	1		4688413	1					
ANR	4688443	ReturnType	void		4688413	1					
ANR	4688444	Identifier	CronJob :: CleanFd		4688413	2					
ANR	4688445	ParameterList	int * fd		4688413	3					
ANR	4688446	Parameter	int * fd	784:19:17691:17697	4688413	0	True				
ANR	4688447	ParameterType	int *		4688413	0					
ANR	4688448	Identifier	fd		4688413	1					
ANR	4688449	CFGEntryNode	ENTRY		4688413		True				
ANR	4688450	CFGExitNode	EXIT		4688413		True				
ANR	4688451	Symbol	* fd		4688413						
ANR	4688452	Symbol	daemonCore		4688413						
ANR	4688453	Symbol	fd		4688413						
ANR	4688454	Function	CronJob :: KillJob	793:0:17787:19029							
ANR	4688455	FunctionDef	CronJob :: KillJob (bool force)		4688454	0					
ANR	4688456	CompoundStatement		795:0:17822:19029	4688454	0					
ANR	4688457	ExpressionStatement	m_in_shutdown = true	797:1:17845:17865	4688454	0	True				
ANR	4688458	AssignmentExpression	m_in_shutdown = true		4688454	0		=			
ANR	4688459	Identifier	m_in_shutdown		4688454	0					
ANR	4688460	Identifier	true		4688454	1					
ANR	4688461	IfStatement	if ( IsIdle ( ) || IsDead ( ) )		4688454	1					
ANR	4688462	Condition	IsIdle ( ) || IsDead ( )	800:6:17884:17903	4688454	0	True				
ANR	4688463	OrExpression	IsIdle ( ) || IsDead ( )		4688454	0		||			
ANR	4688464	CallExpression	IsIdle ( )		4688454	0					
ANR	4688465	Callee	IsIdle		4688454	0					
ANR	4688466	Identifier	IsIdle		4688454	0					
ANR	4688467	ArgumentList			4688454	1					
ANR	4688468	CallExpression	IsDead ( )		4688454	1					
ANR	4688469	Callee	IsDead		4688454	0					
ANR	4688470	Identifier	IsDead		4688454	0					
ANR	4688471	ArgumentList			4688454	1					
ANR	4688472	CompoundStatement		6:29:84:84	4688454	1					
ANR	4688473	ReturnStatement	return 0 ;	801:2:17911:17919	4688454	0	True				
ANR	4688474	PrimaryExpression	0		4688454	0					
ANR	4688475	IfStatement	if ( m_pid <= 0 )		4688454	2					
ANR	4688476	Condition	m_pid <= 0	805:6:17948:17957	4688454	0	True				
ANR	4688477	RelationalExpression	m_pid <= 0		4688454	0		<=			
ANR	4688478	Identifier	m_pid		4688454	0					
ANR	4688479	PrimaryExpression	0		4688454	1					
ANR	4688480	CompoundStatement		11:19:138:138	4688454	1					
ANR	4688481	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: '%s': Trying to kill illegal PID %d\\n"" , GetName ( ) , m_pid )"	806:2:17965:18057	4688454	0	True				
ANR	4688482	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: '%s': Trying to kill illegal PID %d\\n"" , GetName ( ) , m_pid )"		4688454	0					
ANR	4688483	Callee	dprintf		4688454	0					
ANR	4688484	Identifier	dprintf		4688454	0					
ANR	4688485	ArgumentList	D_ALWAYS		4688454	1					
ANR	4688486	Argument	D_ALWAYS		4688454	0					
ANR	4688487	Identifier	D_ALWAYS		4688454	0					
ANR	4688488	Argument	"""CronJob: '%s': Trying to kill illegal PID %d\\n"""		4688454	1					
ANR	4688489	PrimaryExpression	"""CronJob: '%s': Trying to kill illegal PID %d\\n"""		4688454	0					
ANR	4688490	Argument	GetName ( )		4688454	2					
ANR	4688491	CallExpression	GetName ( )		4688454	0					
ANR	4688492	Callee	GetName		4688454	0					
ANR	4688493	Identifier	GetName		4688454	0					
ANR	4688494	ArgumentList			4688454	1					
ANR	4688495	Argument	m_pid		4688454	3					
ANR	4688496	Identifier	m_pid		4688454	0					
ANR	4688497	ReturnStatement	return - 1 ;	808:2:18061:18070	4688454	1	True				
ANR	4688498	UnaryOperationExpression	- 1		4688454	0					
ANR	4688499	UnaryOperator	-		4688454	0					
ANR	4688500	PrimaryExpression	1		4688454	1					
ANR	4688501	IfStatement	if ( IsReady ( ) )		4688454	3					
ANR	4688502	Condition	IsReady ( )	812:6:18111:18119	4688454	0	True				
ANR	4688503	CallExpression	IsReady ( )		4688454	0					
ANR	4688504	Callee	IsReady		4688454	0					
ANR	4688505	Identifier	IsReady		4688454	0					
ANR	4688506	ArgumentList			4688454	1					
ANR	4688507	CompoundStatement		18:18:300:300	4688454	1					
ANR	4688508	ExpressionStatement	SetState ( CRON_IDLE )	813:2:18127:18148	4688454	0	True				
ANR	4688509	CallExpression	SetState ( CRON_IDLE )		4688454	0					
ANR	4688510	Callee	SetState		4688454	0					
ANR	4688511	Identifier	SetState		4688454	0					
ANR	4688512	ArgumentList	CRON_IDLE		4688454	1					
ANR	4688513	Argument	CRON_IDLE		4688454	0					
ANR	4688514	Identifier	CRON_IDLE		4688454	0					
ANR	4688515	ReturnStatement	return 0 ;	814:2:18152:18160	4688454	1	True				
ANR	4688516	PrimaryExpression	0		4688454	0					
ANR	4688517	ElseStatement	else		4688454	0					
ANR	4688518	IfStatement	if ( ( force ) || IsTermSent ( ) )		4688454	0					
ANR	4688519	Condition	( force ) || IsTermSent ( )	816:11:18176:18200	4688454	0	True				
ANR	4688520	OrExpression	( force ) || IsTermSent ( )		4688454	0		||			
ANR	4688521	Identifier	force		4688454	0					
ANR	4688522	CallExpression	IsTermSent ( )		4688454	1					
ANR	4688523	Callee	IsTermSent		4688454	0					
ANR	4688524	Identifier	IsTermSent		4688454	0					
ANR	4688525	ArgumentList			4688454	1					
ANR	4688526	CompoundStatement		22:39:381:381	4688454	1					
ANR	4688527	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Killing job '%s' with SIGKILL, pid = %d\\n"" , GetName ( ) , m_pid )"	817:2:18208:18313	4688454	0	True				
ANR	4688528	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Killing job '%s' with SIGKILL, pid = %d\\n"" , GetName ( ) , m_pid )"		4688454	0					
ANR	4688529	Callee	dprintf		4688454	0					
ANR	4688530	Identifier	dprintf		4688454	0					
ANR	4688531	ArgumentList	D_FULLDEBUG		4688454	1					
ANR	4688532	Argument	D_FULLDEBUG		4688454	0					
ANR	4688533	Identifier	D_FULLDEBUG		4688454	0					
ANR	4688534	Argument	"""CronJob: Killing job '%s' with SIGKILL, pid = %d\\n"""		4688454	1					
ANR	4688535	PrimaryExpression	"""CronJob: Killing job '%s' with SIGKILL, pid = %d\\n"""		4688454	0					
ANR	4688536	Argument	GetName ( )		4688454	2					
ANR	4688537	CallExpression	GetName ( )		4688454	0					
ANR	4688538	Callee	GetName		4688454	0					
ANR	4688539	Identifier	GetName		4688454	0					
ANR	4688540	ArgumentList			4688454	1					
ANR	4688541	Argument	m_pid		4688454	3					
ANR	4688542	Identifier	m_pid		4688454	0					
ANR	4688543	IfStatement	"if ( daemonCore -> Send_Signal ( m_pid , SIGKILL ) == 0 )"		4688454	1					
ANR	4688544	Condition	"daemonCore -> Send_Signal ( m_pid , SIGKILL ) == 0"	820:7:18322:18367	4688454	0	True				
ANR	4688545	EqualityExpression	"daemonCore -> Send_Signal ( m_pid , SIGKILL ) == 0"		4688454	0		==			
ANR	4688546	CallExpression	"daemonCore -> Send_Signal ( m_pid , SIGKILL )"		4688454	0					
ANR	4688547	Callee	daemonCore -> Send_Signal		4688454	0					
ANR	4688548	PtrMemberAccess	daemonCore -> Send_Signal		4688454	0					
ANR	4688549	Identifier	daemonCore		4688454	0					
ANR	4688550	Identifier	Send_Signal		4688454	1					
ANR	4688551	ArgumentList	m_pid		4688454	1					
ANR	4688552	Argument	m_pid		4688454	0					
ANR	4688553	Identifier	m_pid		4688454	0					
ANR	4688554	Argument	SIGKILL		4688454	1					
ANR	4688555	Identifier	SIGKILL		4688454	0					
ANR	4688556	PrimaryExpression	0		4688454	1					
ANR	4688557	CompoundStatement		26:56:548:548	4688454	1					
ANR	4688558	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: job '%s': Failed to send SIGKILL to %d\\n"" , GetName ( ) , m_pid )"	821:3:18376:18478	4688454	0	True				
ANR	4688559	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: job '%s': Failed to send SIGKILL to %d\\n"" , GetName ( ) , m_pid )"		4688454	0					
ANR	4688560	Callee	dprintf		4688454	0					
ANR	4688561	Identifier	dprintf		4688454	0					
ANR	4688562	ArgumentList	D_ALWAYS		4688454	1					
ANR	4688563	Argument	D_ALWAYS		4688454	0					
ANR	4688564	Identifier	D_ALWAYS		4688454	0					
ANR	4688565	Argument	"""CronJob: job '%s': Failed to send SIGKILL to %d\\n"""		4688454	1					
ANR	4688566	PrimaryExpression	"""CronJob: job '%s': Failed to send SIGKILL to %d\\n"""		4688454	0					
ANR	4688567	Argument	GetName ( )		4688454	2					
ANR	4688568	CallExpression	GetName ( )		4688454	0					
ANR	4688569	Callee	GetName		4688454	0					
ANR	4688570	Identifier	GetName		4688454	0					
ANR	4688571	ArgumentList			4688454	1					
ANR	4688572	Argument	m_pid		4688454	3					
ANR	4688573	Identifier	m_pid		4688454	0					
ANR	4688574	ExpressionStatement	SetState ( CRON_KILL_SENT )	825:2:18486:18512	4688454	2	True				
ANR	4688575	CallExpression	SetState ( CRON_KILL_SENT )		4688454	0					
ANR	4688576	Callee	SetState		4688454	0					
ANR	4688577	Identifier	SetState		4688454	0					
ANR	4688578	ArgumentList	CRON_KILL_SENT		4688454	1					
ANR	4688579	Argument	CRON_KILL_SENT		4688454	0					
ANR	4688580	Identifier	CRON_KILL_SENT		4688454	0					
ANR	4688581	ExpressionStatement	KillTimer ( TIMER_NEVER )	826:2:18516:18540	4688454	3	True				
ANR	4688582	CallExpression	KillTimer ( TIMER_NEVER )		4688454	0					
ANR	4688583	Callee	KillTimer		4688454	0					
ANR	4688584	Identifier	KillTimer		4688454	0					
ANR	4688585	ArgumentList	TIMER_NEVER		4688454	1					
ANR	4688586	Argument	TIMER_NEVER		4688454	0					
ANR	4688587	Identifier	TIMER_NEVER		4688454	0					
ANR	4688588	ReturnStatement	return 0 ;	827:2:18564:18572	4688454	4	True				
ANR	4688589	PrimaryExpression	0		4688454	0					
ANR	4688590	ElseStatement	else		4688454	0					
ANR	4688591	IfStatement	if ( IsRunning ( ) )		4688454	0					
ANR	4688592	Condition	IsRunning ( )	829:11:18588:18598	4688454	0	True				
ANR	4688593	CallExpression	IsRunning ( )		4688454	0					
ANR	4688594	Callee	IsRunning		4688454	0					
ANR	4688595	Identifier	IsRunning		4688454	0					
ANR	4688596	ArgumentList			4688454	1					
ANR	4688597	CompoundStatement		35:25:779:779	4688454	1					
ANR	4688598	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Killing job '%s' with SIGTERM, pid = %d\\n"" , GetName ( ) , m_pid )"	830:2:18606:18710	4688454	0	True				
ANR	4688599	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Killing job '%s' with SIGTERM, pid = %d\\n"" , GetName ( ) , m_pid )"		4688454	0					
ANR	4688600	Callee	dprintf		4688454	0					
ANR	4688601	Identifier	dprintf		4688454	0					
ANR	4688602	ArgumentList	D_FULLDEBUG		4688454	1					
ANR	4688603	Argument	D_FULLDEBUG		4688454	0					
ANR	4688604	Identifier	D_FULLDEBUG		4688454	0					
ANR	4688605	Argument	"""CronJob: Killing job '%s' with SIGTERM, pid = %d\\n"""		4688454	1					
ANR	4688606	PrimaryExpression	"""CronJob: Killing job '%s' with SIGTERM, pid = %d\\n"""		4688454	0					
ANR	4688607	Argument	GetName ( )		4688454	2					
ANR	4688608	CallExpression	GetName ( )		4688454	0					
ANR	4688609	Callee	GetName		4688454	0					
ANR	4688610	Identifier	GetName		4688454	0					
ANR	4688611	ArgumentList			4688454	1					
ANR	4688612	Argument	m_pid		4688454	3					
ANR	4688613	Identifier	m_pid		4688454	0					
ANR	4688614	IfStatement	"if ( daemonCore -> Send_Signal ( m_pid , SIGTERM ) == 0 )"		4688454	1					
ANR	4688615	Condition	"daemonCore -> Send_Signal ( m_pid , SIGTERM ) == 0"	833:7:18719:18764	4688454	0	True				
ANR	4688616	EqualityExpression	"daemonCore -> Send_Signal ( m_pid , SIGTERM ) == 0"		4688454	0		==			
ANR	4688617	CallExpression	"daemonCore -> Send_Signal ( m_pid , SIGTERM )"		4688454	0					
ANR	4688618	Callee	daemonCore -> Send_Signal		4688454	0					
ANR	4688619	PtrMemberAccess	daemonCore -> Send_Signal		4688454	0					
ANR	4688620	Identifier	daemonCore		4688454	0					
ANR	4688621	Identifier	Send_Signal		4688454	1					
ANR	4688622	ArgumentList	m_pid		4688454	1					
ANR	4688623	Argument	m_pid		4688454	0					
ANR	4688624	Identifier	m_pid		4688454	0					
ANR	4688625	Argument	SIGTERM		4688454	1					
ANR	4688626	Identifier	SIGTERM		4688454	0					
ANR	4688627	PrimaryExpression	0		4688454	1					
ANR	4688628	CompoundStatement		39:56:945:945	4688454	1					
ANR	4688629	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: job '%s': Failed to send SIGTERM to %d\\n"" , GetName ( ) , m_pid )"	834:3:18773:18875	4688454	0	True				
ANR	4688630	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: job '%s': Failed to send SIGTERM to %d\\n"" , GetName ( ) , m_pid )"		4688454	0					
ANR	4688631	Callee	dprintf		4688454	0					
ANR	4688632	Identifier	dprintf		4688454	0					
ANR	4688633	ArgumentList	D_ALWAYS		4688454	1					
ANR	4688634	Argument	D_ALWAYS		4688454	0					
ANR	4688635	Identifier	D_ALWAYS		4688454	0					
ANR	4688636	Argument	"""CronJob: job '%s': Failed to send SIGTERM to %d\\n"""		4688454	1					
ANR	4688637	PrimaryExpression	"""CronJob: job '%s': Failed to send SIGTERM to %d\\n"""		4688454	0					
ANR	4688638	Argument	GetName ( )		4688454	2					
ANR	4688639	CallExpression	GetName ( )		4688454	0					
ANR	4688640	Callee	GetName		4688454	0					
ANR	4688641	Identifier	GetName		4688454	0					
ANR	4688642	ArgumentList			4688454	1					
ANR	4688643	Argument	m_pid		4688454	3					
ANR	4688644	Identifier	m_pid		4688454	0					
ANR	4688645	ExpressionStatement	SetState ( CRON_TERM_SENT )	838:2:18883:18909	4688454	2	True				
ANR	4688646	CallExpression	SetState ( CRON_TERM_SENT )		4688454	0					
ANR	4688647	Callee	SetState		4688454	0					
ANR	4688648	Identifier	SetState		4688454	0					
ANR	4688649	ArgumentList	CRON_TERM_SENT		4688454	1					
ANR	4688650	Argument	CRON_TERM_SENT		4688454	0					
ANR	4688651	Identifier	CRON_TERM_SENT		4688454	0					
ANR	4688652	ExpressionStatement	KillTimer ( 1 )	839:2:18913:18927	4688454	3	True				
ANR	4688653	CallExpression	KillTimer ( 1 )		4688454	0					
ANR	4688654	Callee	KillTimer		4688454	0					
ANR	4688655	Identifier	KillTimer		4688454	0					
ANR	4688656	ArgumentList	1		4688454	1					
ANR	4688657	Argument	1		4688454	0					
ANR	4688658	PrimaryExpression	1		4688454	0					
ANR	4688659	ReturnStatement	return 1 ;	840:2:18965:18973	4688454	4	True				
ANR	4688660	PrimaryExpression	1		4688454	0					
ANR	4688661	ElseStatement	else		4688454	0					
ANR	4688662	CompoundStatement		48:6:1161:1161	4688454	0					
ANR	4688663	ReturnStatement	return - 1 ;	843:2:18988:18997	4688454	0	True				
ANR	4688664	UnaryOperationExpression	- 1		4688454	0					
ANR	4688665	UnaryOperator	-		4688454	0					
ANR	4688666	PrimaryExpression	1		4688454	1					
ANR	4688667	ReturnType	int		4688454	1					
ANR	4688668	Identifier	CronJob :: KillJob		4688454	2					
ANR	4688669	ParameterList	bool force		4688454	3					
ANR	4688670	Parameter	bool force	794:18:17809:17818	4688454	0	True				
ANR	4688671	ParameterType	bool		4688454	0					
ANR	4688672	Identifier	force		4688454	1					
ANR	4688673	CFGEntryNode	ENTRY		4688454		True				
ANR	4688674	CFGExitNode	EXIT		4688454		True				
ANR	4688675	Symbol	m_in_shutdown		4688454						
ANR	4688676	Symbol	IsRunning		4688454						
ANR	4688677	Symbol	IsDead		4688454						
ANR	4688678	Symbol	D_ALWAYS		4688454						
ANR	4688679	Symbol	CRON_IDLE		4688454						
ANR	4688680	Symbol	D_FULLDEBUG		4688454						
ANR	4688681	Symbol	CRON_TERM_SENT		4688454						
ANR	4688682	Symbol	SIGKILL		4688454						
ANR	4688683	Symbol	IsReady		4688454						
ANR	4688684	Symbol	daemonCore -> Send_Signal		4688454						
ANR	4688685	Symbol	m_pid		4688454						
ANR	4688686	Symbol	* daemonCore		4688454						
ANR	4688687	Symbol	IsIdle		4688454						
ANR	4688688	Symbol	daemonCore		4688454						
ANR	4688689	Symbol	true		4688454						
ANR	4688690	Symbol	IsTermSent		4688454						
ANR	4688691	Symbol	force		4688454						
ANR	4688692	Symbol	GetName		4688454						
ANR	4688693	Symbol	CRON_KILL_SENT		4688454						
ANR	4688694	Symbol	TIMER_NEVER		4688454						
ANR	4688695	Symbol	SIGTERM		4688454						
ANR	4688696	Function	CronJob :: CancelRunTimer	848:0:19056:19187							
ANR	4688697	FunctionDef	CronJob :: CancelRunTimer ()		4688696	0					
ANR	4688698	CompoundStatement		850:0:19093:19187	4688696	0					
ANR	4688699	IfStatement	if ( m_run_timer >= 0 )		4688696	0					
ANR	4688700	Condition	m_run_timer >= 0	851:6:19101:19116	4688696	0	True				
ANR	4688701	RelationalExpression	m_run_timer >= 0		4688696	0		>=			
ANR	4688702	Identifier	m_run_timer		4688696	0					
ANR	4688703	PrimaryExpression	0		4688696	1					
ANR	4688704	CompoundStatement		2:25:26:26	4688696	1					
ANR	4688705	ExpressionStatement	daemonCore -> Cancel_Timer ( m_run_timer )	852:2:19124:19163	4688696	0	True				
ANR	4688706	CallExpression	daemonCore -> Cancel_Timer ( m_run_timer )		4688696	0					
ANR	4688707	Callee	daemonCore -> Cancel_Timer		4688696	0					
ANR	4688708	PtrMemberAccess	daemonCore -> Cancel_Timer		4688696	0					
ANR	4688709	Identifier	daemonCore		4688696	0					
ANR	4688710	Identifier	Cancel_Timer		4688696	1					
ANR	4688711	ArgumentList	m_run_timer		4688696	1					
ANR	4688712	Argument	m_run_timer		4688696	0					
ANR	4688713	Identifier	m_run_timer		4688696	0					
ANR	4688714	ExpressionStatement	m_run_timer = - 1	854:1:19169:19185	4688696	1	True				
ANR	4688715	AssignmentExpression	m_run_timer = - 1		4688696	0		=			
ANR	4688716	Identifier	m_run_timer		4688696	0					
ANR	4688717	UnaryOperationExpression	- 1		4688696	1					
ANR	4688718	UnaryOperator	-		4688696	0					
ANR	4688719	PrimaryExpression	1		4688696	1					
ANR	4688720	ReturnType	void		4688696	1					
ANR	4688721	Identifier	CronJob :: CancelRunTimer		4688696	2					
ANR	4688722	ParameterList			4688696	3					
ANR	4688723	CFGEntryNode	ENTRY		4688696		True				
ANR	4688724	CFGExitNode	EXIT		4688696		True				
ANR	4688725	Symbol	daemonCore		4688696						
ANR	4688726	Symbol	m_run_timer		4688696						
ANR	4688727	Function	CronJob :: SetTimer	858:0:19211:20513							
ANR	4688728	FunctionDef	"CronJob :: SetTimer (unsigned first , unsigned period_arg)"		4688727	0					
ANR	4688729	CompoundStatement		860:0:19272:20513	4688727	0					
ANR	4688730	ExpressionStatement	ASSERT ( IsPeriodic ( ) || IsWaitForExit ( ) )	861:1:19275:19316	4688727	0	True				
ANR	4688731	CallExpression	ASSERT ( IsPeriodic ( ) || IsWaitForExit ( ) )		4688727	0					
ANR	4688732	Callee	ASSERT		4688727	0					
ANR	4688733	Identifier	ASSERT		4688727	0					
ANR	4688734	ArgumentList	IsPeriodic ( ) || IsWaitForExit ( )		4688727	1					
ANR	4688735	Argument	IsPeriodic ( ) || IsWaitForExit ( )		4688727	0					
ANR	4688736	OrExpression	IsPeriodic ( ) || IsWaitForExit ( )		4688727	0		||			
ANR	4688737	CallExpression	IsPeriodic ( )		4688727	0					
ANR	4688738	Callee	IsPeriodic		4688727	0					
ANR	4688739	Identifier	IsPeriodic		4688727	0					
ANR	4688740	ArgumentList			4688727	1					
ANR	4688741	CallExpression	IsWaitForExit ( )		4688727	1					
ANR	4688742	Callee	IsWaitForExit		4688727	0					
ANR	4688743	Identifier	IsWaitForExit		4688727	0					
ANR	4688744	ArgumentList			4688727	1					
ANR	4688745	IfStatement	if ( m_run_timer >= 0 )		4688727	1					
ANR	4688746	Condition	m_run_timer >= 0	864:6:19345:19360	4688727	0	True				
ANR	4688747	RelationalExpression	m_run_timer >= 0		4688727	0		>=			
ANR	4688748	Identifier	m_run_timer		4688727	0					
ANR	4688749	PrimaryExpression	0		4688727	1					
ANR	4688750	CompoundStatement		6:1:92:92	4688727	1					
ANR	4688751	ExpressionStatement	"daemonCore -> Reset_Timer ( m_run_timer , first , period_arg )"	866:2:19369:19426	4688727	0	True				
ANR	4688752	CallExpression	"daemonCore -> Reset_Timer ( m_run_timer , first , period_arg )"		4688727	0					
ANR	4688753	Callee	daemonCore -> Reset_Timer		4688727	0					
ANR	4688754	PtrMemberAccess	daemonCore -> Reset_Timer		4688727	0					
ANR	4688755	Identifier	daemonCore		4688727	0					
ANR	4688756	Identifier	Reset_Timer		4688727	1					
ANR	4688757	ArgumentList	m_run_timer		4688727	1					
ANR	4688758	Argument	m_run_timer		4688727	0					
ANR	4688759	Identifier	m_run_timer		4688727	0					
ANR	4688760	Argument	first		4688727	1					
ANR	4688761	Identifier	first		4688727	0					
ANR	4688762	Argument	period_arg		4688727	2					
ANR	4688763	Identifier	period_arg		4688727	0					
ANR	4688764	IfStatement	if ( period_arg == TIMER_NEVER )		4688727	1					
ANR	4688765	Condition	period_arg == TIMER_NEVER	867:6:19434:19458	4688727	0	True				
ANR	4688766	EqualityExpression	period_arg == TIMER_NEVER		4688727	0		==			
ANR	4688767	Identifier	period_arg		4688727	0					
ANR	4688768	Identifier	TIMER_NEVER		4688727	1					
ANR	4688769	CompoundStatement		8:34:189:189	4688727	1					
ANR	4688770	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: timer ID %d reset first=%u, period=NEVER\\n"" , m_run_timer , first )"	868:3:19467:19576	4688727	0	True				
ANR	4688771	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: timer ID %d reset first=%u, period=NEVER\\n"" , m_run_timer , first )"		4688727	0					
ANR	4688772	Callee	dprintf		4688727	0					
ANR	4688773	Identifier	dprintf		4688727	0					
ANR	4688774	ArgumentList	D_FULLDEBUG		4688727	1					
ANR	4688775	Argument	D_FULLDEBUG		4688727	0					
ANR	4688776	Identifier	D_FULLDEBUG		4688727	0					
ANR	4688777	Argument	"""CronJob: timer ID %d reset first=%u, period=NEVER\\n"""		4688727	1					
ANR	4688778	PrimaryExpression	"""CronJob: timer ID %d reset first=%u, period=NEVER\\n"""		4688727	0					
ANR	4688779	Argument	m_run_timer		4688727	2					
ANR	4688780	Identifier	m_run_timer		4688727	0					
ANR	4688781	Argument	first		4688727	3					
ANR	4688782	Identifier	first		4688727	0					
ANR	4688783	ElseStatement	else		4688727	0					
ANR	4688784	CompoundStatement		12:9:314:314	4688727	0					
ANR	4688785	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: timer ID %d reset first=%u, period=%u\\n"" , m_run_timer , first , Period ( ) )"	872:3:19592:19708	4688727	0	True				
ANR	4688786	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: timer ID %d reset first=%u, period=%u\\n"" , m_run_timer , first , Period ( ) )"		4688727	0					
ANR	4688787	Callee	dprintf		4688727	0					
ANR	4688788	Identifier	dprintf		4688727	0					
ANR	4688789	ArgumentList	D_FULLDEBUG		4688727	1					
ANR	4688790	Argument	D_FULLDEBUG		4688727	0					
ANR	4688791	Identifier	D_FULLDEBUG		4688727	0					
ANR	4688792	Argument	"""CronJob: timer ID %d reset first=%u, period=%u\\n"""		4688727	1					
ANR	4688793	PrimaryExpression	"""CronJob: timer ID %d reset first=%u, period=%u\\n"""		4688727	0					
ANR	4688794	Argument	m_run_timer		4688727	2					
ANR	4688795	Identifier	m_run_timer		4688727	0					
ANR	4688796	Argument	first		4688727	3					
ANR	4688797	Identifier	first		4688727	0					
ANR	4688798	Argument	Period ( )		4688727	4					
ANR	4688799	CallExpression	Period ( )		4688727	0					
ANR	4688800	Callee	Period		4688727	0					
ANR	4688801	Identifier	Period		4688727	0					
ANR	4688802	ArgumentList			4688727	1					
ANR	4688803	ElseStatement	else		4688727	0					
ANR	4688804	CompoundStatement		25:2:580:722	4688727	0					
ANR	4688805	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Creating timer for job '%s'\\n"" , GetName ( ) )"	882:2:19768:19849	4688727	0	True				
ANR	4688806	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Creating timer for job '%s'\\n"" , GetName ( ) )"		4688727	0					
ANR	4688807	Callee	dprintf		4688727	0					
ANR	4688808	Identifier	dprintf		4688727	0					
ANR	4688809	ArgumentList	D_FULLDEBUG		4688727	1					
ANR	4688810	Argument	D_FULLDEBUG		4688727	0					
ANR	4688811	Identifier	D_FULLDEBUG		4688727	0					
ANR	4688812	Argument	"""CronJob: Creating timer for job '%s'\\n"""		4688727	1					
ANR	4688813	PrimaryExpression	"""CronJob: Creating timer for job '%s'\\n"""		4688727	0					
ANR	4688814	Argument	GetName ( )		4688727	2					
ANR	4688815	CallExpression	GetName ( )		4688727	0					
ANR	4688816	Callee	GetName		4688727	0					
ANR	4688817	Identifier	GetName		4688727	0					
ANR	4688818	ArgumentList			4688727	1					
ANR	4688819	IdentifierDeclStatement	TimerHandlercpp handler = ( ( IsWaitForExit ( ) ) ? ( TimerHandlercpp ) & CronJob :: StartJob : ( TimerHandlercpp ) & CronJob :: RunJob ) ;	884:2:19853:19995	4688727	1	True				
ANR	4688820	IdentifierDecl	handler = ( ( IsWaitForExit ( ) ) ? ( TimerHandlercpp ) & CronJob :: StartJob : ( TimerHandlercpp ) & CronJob :: RunJob )		4688727	0					
ANR	4688821	IdentifierDeclType	TimerHandlercpp		4688727	0					
ANR	4688822	Identifier	handler		4688727	1					
ANR	4688823	AssignmentExpression	handler = ( ( IsWaitForExit ( ) ) ? ( TimerHandlercpp ) & CronJob :: StartJob : ( TimerHandlercpp ) & CronJob :: RunJob )		4688727	2		=			
ANR	4688824	Identifier	handler		4688727	0					
ANR	4688825	ConditionalExpression	( IsWaitForExit ( ) ) ? ( TimerHandlercpp ) & CronJob :: StartJob : ( TimerHandlercpp ) & CronJob :: RunJob		4688727	1					
ANR	4688826	Condition	IsWaitForExit ( )		4688727	0					
ANR	4688827	CallExpression	IsWaitForExit ( )		4688727	0					
ANR	4688828	Callee	IsWaitForExit		4688727	0					
ANR	4688829	Identifier	IsWaitForExit		4688727	0					
ANR	4688830	ArgumentList			4688727	1					
ANR	4688831	CastExpression	( TimerHandlercpp ) & CronJob :: StartJob		4688727	1					
ANR	4688832	CastTarget	TimerHandlercpp		4688727	0					
ANR	4688833	UnaryOperationExpression	& CronJob :: StartJob		4688727	1					
ANR	4688834	UnaryOperator	&		4688727	0					
ANR	4688835	Identifier	CronJob :: StartJob		4688727	1					
ANR	4688836	CastExpression	( TimerHandlercpp ) & CronJob :: RunJob		4688727	2					
ANR	4688837	CastTarget	TimerHandlercpp		4688727	0					
ANR	4688838	UnaryOperationExpression	& CronJob :: RunJob		4688727	1					
ANR	4688839	UnaryOperator	&		4688727	0					
ANR	4688840	Identifier	CronJob :: RunJob		4688727	1					
ANR	4688841	ExpressionStatement	"m_run_timer = daemonCore -> Register_Timer ( first , period_arg , handler , ""RunJob"" , this )"	888:2:19999:20100	4688727	2	True				
ANR	4688842	AssignmentExpression	"m_run_timer = daemonCore -> Register_Timer ( first , period_arg , handler , ""RunJob"" , this )"		4688727	0		=			
ANR	4688843	Identifier	m_run_timer		4688727	0					
ANR	4688844	CallExpression	"daemonCore -> Register_Timer ( first , period_arg , handler , ""RunJob"" , this )"		4688727	1					
ANR	4688845	Callee	daemonCore -> Register_Timer		4688727	0					
ANR	4688846	PtrMemberAccess	daemonCore -> Register_Timer		4688727	0					
ANR	4688847	Identifier	daemonCore		4688727	0					
ANR	4688848	Identifier	Register_Timer		4688727	1					
ANR	4688849	ArgumentList	first		4688727	1					
ANR	4688850	Argument	first		4688727	0					
ANR	4688851	Identifier	first		4688727	0					
ANR	4688852	Argument	period_arg		4688727	1					
ANR	4688853	Identifier	period_arg		4688727	0					
ANR	4688854	Argument	handler		4688727	2					
ANR	4688855	Identifier	handler		4688727	0					
ANR	4688856	Argument	"""RunJob"""		4688727	3					
ANR	4688857	PrimaryExpression	"""RunJob"""		4688727	0					
ANR	4688858	Argument	this		4688727	4					
ANR	4688859	Identifier	this		4688727	0					
ANR	4688860	IfStatement	if ( m_run_timer < 0 )		4688727	3					
ANR	4688861	Condition	m_run_timer < 0	894:7:20109:20123	4688727	0	True				
ANR	4688862	RelationalExpression	m_run_timer < 0		4688727	0		<			
ANR	4688863	Identifier	m_run_timer		4688727	0					
ANR	4688864	PrimaryExpression	0		4688727	1					
ANR	4688865	CompoundStatement		35:25:854:854	4688727	1					
ANR	4688866	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Failed to create timer\\n"" )"	895:3:20132:20188	4688727	0	True				
ANR	4688867	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Failed to create timer\\n"" )"		4688727	0					
ANR	4688868	Callee	dprintf		4688727	0					
ANR	4688869	Identifier	dprintf		4688727	0					
ANR	4688870	ArgumentList	D_ALWAYS		4688727	1					
ANR	4688871	Argument	D_ALWAYS		4688727	0					
ANR	4688872	Identifier	D_ALWAYS		4688727	0					
ANR	4688873	Argument	"""CronJob: Failed to create timer\\n"""		4688727	1					
ANR	4688874	PrimaryExpression	"""CronJob: Failed to create timer\\n"""		4688727	0					
ANR	4688875	ReturnStatement	return - 1 ;	896:3:20193:20202	4688727	1	True				
ANR	4688876	UnaryOperationExpression	- 1		4688727	0					
ANR	4688877	UnaryOperator	-		4688727	0					
ANR	4688878	PrimaryExpression	1		4688727	1					
ANR	4688879	IfStatement	if ( period_arg == TIMER_NEVER )		4688727	4					
ANR	4688880	Condition	period_arg == TIMER_NEVER	898:6:20214:20238	4688727	0	True				
ANR	4688881	EqualityExpression	period_arg == TIMER_NEVER		4688727	0		==			
ANR	4688882	Identifier	period_arg		4688727	0					
ANR	4688883	Identifier	TIMER_NEVER		4688727	1					
ANR	4688884	CompoundStatement		39:34:969:969	4688727	1					
ANR	4688885	Statement	dprintf	899:3:20247:20253	4688727	0	True				
ANR	4688886	Statement	(	899:10:20254:20254	4688727	1	True				
ANR	4688887	Statement	D_FULLDEBUG	899:12:20256:20266	4688727	2	True				
ANR	4688888	Statement	","	899:23:20267:20267	4688727	3	True				
ANR	4688889	Statement	"""CronJob: new timer ID %d set first=%u, """	899:25:20269:20309	4688727	4	True				
ANR	4688890	Statement	"""period: NEVER\\n"""	900:6:20317:20333	4688727	5	True				
ANR	4688891	Statement	","	900:23:20334:20334	4688727	6	True				
ANR	4688892	Statement	m_run_timer	900:25:20336:20346	4688727	7	True				
ANR	4688893	Statement	","	900:36:20347:20347	4688727	8	True				
ANR	4688894	Statement	first	900:38:20349:20353	4688727	9	True				
ANR	4688895	Statement	)	900:44:20355:20355	4688727	10	True				
ANR	4688896	ExpressionStatement		900:45:20356:20356	4688727	11	True				
ANR	4688897	ElseStatement	else		4688727	0					
ANR	4688898	CompoundStatement		42:9:1094:1094	4688727	0					
ANR	4688899	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: new timer ID %d set first=%u, period: %u\\n"" , m_run_timer , first , Period ( ) )"	902:3:20372:20491	4688727	0	True				
ANR	4688900	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: new timer ID %d set first=%u, period: %u\\n"" , m_run_timer , first , Period ( ) )"		4688727	0					
ANR	4688901	Callee	dprintf		4688727	0					
ANR	4688902	Identifier	dprintf		4688727	0					
ANR	4688903	ArgumentList	D_FULLDEBUG		4688727	1					
ANR	4688904	Argument	D_FULLDEBUG		4688727	0					
ANR	4688905	Identifier	D_FULLDEBUG		4688727	0					
ANR	4688906	Argument	"""CronJob: new timer ID %d set first=%u, period: %u\\n"""		4688727	1					
ANR	4688907	PrimaryExpression	"""CronJob: new timer ID %d set first=%u, period: %u\\n"""		4688727	0					
ANR	4688908	Argument	m_run_timer		4688727	2					
ANR	4688909	Identifier	m_run_timer		4688727	0					
ANR	4688910	Argument	first		4688727	3					
ANR	4688911	Identifier	first		4688727	0					
ANR	4688912	Argument	Period ( )		4688727	4					
ANR	4688913	CallExpression	Period ( )		4688727	0					
ANR	4688914	Callee	Period		4688727	0					
ANR	4688915	Identifier	Period		4688727	0					
ANR	4688916	ArgumentList			4688727	1					
ANR	4688917	ReturnStatement	return 0 ;	908:1:20503:20511	4688727	2	True				
ANR	4688918	PrimaryExpression	0		4688727	0					
ANR	4688919	ReturnType	int		4688727	1					
ANR	4688920	Identifier	CronJob :: SetTimer		4688727	2					
ANR	4688921	ParameterList	"unsigned first , unsigned period_arg"		4688727	3					
ANR	4688922	Parameter	unsigned first	859:19:19234:19247	4688727	0	True				
ANR	4688923	ParameterType	unsigned		4688727	0					
ANR	4688924	Identifier	first		4688727	1					
ANR	4688925	Parameter	unsigned period_arg	859:35:19250:19268	4688727	1	True				
ANR	4688926	ParameterType	unsigned		4688727	0					
ANR	4688927	Identifier	period_arg		4688727	1					
ANR	4688928	CFGEntryNode	ENTRY		4688727		True				
ANR	4688929	CFGExitNode	EXIT		4688727		True				
ANR	4688930	Symbol	handler		4688727						
ANR	4688931	Symbol	IsPeriodic		4688727						
ANR	4688932	Symbol	this		4688727						
ANR	4688933	Symbol	D_ALWAYS		4688727						
ANR	4688934	Symbol	Period		4688727						
ANR	4688935	Symbol	D_FULLDEBUG		4688727						
ANR	4688936	Symbol	& CronJob :: StartJob		4688727						
ANR	4688937	Symbol	period_arg		4688727						
ANR	4688938	Symbol	* daemonCore		4688727						
ANR	4688939	Symbol	daemonCore		4688727						
ANR	4688940	Symbol	daemonCore -> Register_Timer		4688727						
ANR	4688941	Symbol	& CronJob :: RunJob		4688727						
ANR	4688942	Symbol	GetName		4688727						
ANR	4688943	Symbol	TIMER_NEVER		4688727						
ANR	4688944	Symbol	first		4688727						
ANR	4688945	Symbol	IsWaitForExit		4688727						
ANR	4688946	Symbol	m_run_timer		4688727						
ANR	4688947	Function	CronJob :: KillTimer	912:0:20540:21545							
ANR	4688948	FunctionDef	CronJob :: KillTimer (unsigned seconds)		4688947	0					
ANR	4688949	CompoundStatement		914:0:20583:21545	4688947	0					
ANR	4688950	IfStatement	if ( TIMER_NEVER == seconds )		4688947	0					
ANR	4688951	Condition	TIMER_NEVER == seconds	916:6:20611:20632	4688947	0	True				
ANR	4688952	EqualityExpression	TIMER_NEVER == seconds		4688947	0		==			
ANR	4688953	Identifier	TIMER_NEVER		4688947	0					
ANR	4688954	Identifier	seconds		4688947	1					
ANR	4688955	CompoundStatement		3:31:52:52	4688947	1					
ANR	4688956	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Canceling kill timer for '%s'\\n"" , GetName ( ) )"	917:2:20640:20722	4688947	0	True				
ANR	4688957	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Canceling kill timer for '%s'\\n"" , GetName ( ) )"		4688947	0					
ANR	4688958	Callee	dprintf		4688947	0					
ANR	4688959	Identifier	dprintf		4688947	0					
ANR	4688960	ArgumentList	D_FULLDEBUG		4688947	1					
ANR	4688961	Argument	D_FULLDEBUG		4688947	0					
ANR	4688962	Identifier	D_FULLDEBUG		4688947	0					
ANR	4688963	Argument	"""CronJob: Canceling kill timer for '%s'\\n"""		4688947	1					
ANR	4688964	PrimaryExpression	"""CronJob: Canceling kill timer for '%s'\\n"""		4688947	0					
ANR	4688965	Argument	GetName ( )		4688947	2					
ANR	4688966	CallExpression	GetName ( )		4688947	0					
ANR	4688967	Callee	GetName		4688947	0					
ANR	4688968	Identifier	GetName		4688947	0					
ANR	4688969	ArgumentList			4688947	1					
ANR	4688970	IfStatement	if ( m_killTimer >= 0 )		4688947	1					
ANR	4688971	Condition	m_killTimer >= 0	919:7:20731:20746	4688947	0	True				
ANR	4688972	RelationalExpression	m_killTimer >= 0		4688947	0		>=			
ANR	4688973	Identifier	m_killTimer		4688947	0					
ANR	4688974	PrimaryExpression	0		4688947	1					
ANR	4688975	CompoundStatement		6:26:166:166	4688947	1					
ANR	4688976	ReturnStatement	"return daemonCore -> Reset_Timer ( m_killTimer , TIMER_NEVER , TIMER_NEVER ) ;"	920:3:20755:20831	4688947	0	True				
ANR	4688977	CallExpression	"daemonCore -> Reset_Timer ( m_killTimer , TIMER_NEVER , TIMER_NEVER )"		4688947	0					
ANR	4688978	Callee	daemonCore -> Reset_Timer		4688947	0					
ANR	4688979	PtrMemberAccess	daemonCore -> Reset_Timer		4688947	0					
ANR	4688980	Identifier	daemonCore		4688947	0					
ANR	4688981	Identifier	Reset_Timer		4688947	1					
ANR	4688982	ArgumentList	m_killTimer		4688947	1					
ANR	4688983	Argument	m_killTimer		4688947	0					
ANR	4688984	Identifier	m_killTimer		4688947	0					
ANR	4688985	Argument	TIMER_NEVER		4688947	1					
ANR	4688986	Identifier	TIMER_NEVER		4688947	0					
ANR	4688987	Argument	TIMER_NEVER		4688947	2					
ANR	4688988	Identifier	TIMER_NEVER		4688947	0					
ANR	4688989	ReturnStatement	return 0 ;	923:2:20839:20847	4688947	2	True				
ANR	4688990	PrimaryExpression	0		4688947	0					
ANR	4688991	IfStatement	if ( m_killTimer >= 0 )		4688947	1					
ANR	4688992	Condition	m_killTimer >= 0	927:6:20879:20894	4688947	0	True				
ANR	4688993	RelationalExpression	m_killTimer >= 0		4688947	0		>=			
ANR	4688994	Identifier	m_killTimer		4688947	0					
ANR	4688995	PrimaryExpression	0		4688947	1					
ANR	4688996	CompoundStatement		15:1:315:315	4688947	1					
ANR	4688997	ExpressionStatement	"daemonCore -> Reset_Timer ( m_killTimer , seconds , 0 )"	929:2:20903:20953	4688947	0	True				
ANR	4688998	CallExpression	"daemonCore -> Reset_Timer ( m_killTimer , seconds , 0 )"		4688947	0					
ANR	4688999	Callee	daemonCore -> Reset_Timer		4688947	0					
ANR	4689000	PtrMemberAccess	daemonCore -> Reset_Timer		4688947	0					
ANR	4689001	Identifier	daemonCore		4688947	0					
ANR	4689002	Identifier	Reset_Timer		4688947	1					
ANR	4689003	ArgumentList	m_killTimer		4688947	1					
ANR	4689004	Argument	m_killTimer		4688947	0					
ANR	4689005	Identifier	m_killTimer		4688947	0					
ANR	4689006	Argument	seconds		4688947	1					
ANR	4689007	Identifier	seconds		4688947	0					
ANR	4689008	Argument	0		4688947	2					
ANR	4689009	PrimaryExpression	0		4688947	0					
ANR	4689010	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Kill timer ID %d reset to %us\\n"" , m_killTimer , seconds )"	930:2:20957:21051	4688947	1	True				
ANR	4689011	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Kill timer ID %d reset to %us\\n"" , m_killTimer , seconds )"		4688947	0					
ANR	4689012	Callee	dprintf		4688947	0					
ANR	4689013	Identifier	dprintf		4688947	0					
ANR	4689014	ArgumentList	D_FULLDEBUG		4688947	1					
ANR	4689015	Argument	D_FULLDEBUG		4688947	0					
ANR	4689016	Identifier	D_FULLDEBUG		4688947	0					
ANR	4689017	Argument	"""CronJob: Kill timer ID %d reset to %us\\n"""		4688947	1					
ANR	4689018	PrimaryExpression	"""CronJob: Kill timer ID %d reset to %us\\n"""		4688947	0					
ANR	4689019	Argument	m_killTimer		4688947	2					
ANR	4689020	Identifier	m_killTimer		4688947	0					
ANR	4689021	Argument	seconds		4688947	3					
ANR	4689022	Identifier	seconds		4688947	0					
ANR	4689023	ElseStatement	else		4688947	0					
ANR	4689024	CompoundStatement		23:1:506:506	4688947	0					
ANR	4689025	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: Creating kill timer for '%s'\\n"" , GetName ( ) )"	938:2:21105:21187	4688947	0	True				
ANR	4689026	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: Creating kill timer for '%s'\\n"" , GetName ( ) )"		4688947	0					
ANR	4689027	Callee	dprintf		4688947	0					
ANR	4689028	Identifier	dprintf		4688947	0					
ANR	4689029	ArgumentList	D_FULLDEBUG		4688947	1					
ANR	4689030	Argument	D_FULLDEBUG		4688947	0					
ANR	4689031	Identifier	D_FULLDEBUG		4688947	0					
ANR	4689032	Argument	"""CronJob: Creating kill timer for '%s'\\n"""		4688947	1					
ANR	4689033	PrimaryExpression	"""CronJob: Creating kill timer for '%s'\\n"""		4688947	0					
ANR	4689034	Argument	GetName ( )		4688947	2					
ANR	4689035	CallExpression	GetName ( )		4688947	0					
ANR	4689036	Callee	GetName		4688947	0					
ANR	4689037	Identifier	GetName		4688947	0					
ANR	4689038	ArgumentList			4688947	1					
ANR	4689039	ExpressionStatement	"m_killTimer = daemonCore -> Register_Timer ( seconds , 0 , ( TimerHandlercpp ) & CronJob :: KillHandler , ""KillJob"" , this )"	940:2:21191:21318	4688947	1	True				
ANR	4689040	AssignmentExpression	"m_killTimer = daemonCore -> Register_Timer ( seconds , 0 , ( TimerHandlercpp ) & CronJob :: KillHandler , ""KillJob"" , this )"		4688947	0		=			
ANR	4689041	Identifier	m_killTimer		4688947	0					
ANR	4689042	CallExpression	"daemonCore -> Register_Timer ( seconds , 0 , ( TimerHandlercpp ) & CronJob :: KillHandler , ""KillJob"" , this )"		4688947	1					
ANR	4689043	Callee	daemonCore -> Register_Timer		4688947	0					
ANR	4689044	PtrMemberAccess	daemonCore -> Register_Timer		4688947	0					
ANR	4689045	Identifier	daemonCore		4688947	0					
ANR	4689046	Identifier	Register_Timer		4688947	1					
ANR	4689047	ArgumentList	seconds		4688947	1					
ANR	4689048	Argument	seconds		4688947	0					
ANR	4689049	Identifier	seconds		4688947	0					
ANR	4689050	Argument	0		4688947	1					
ANR	4689051	PrimaryExpression	0		4688947	0					
ANR	4689052	Argument	( TimerHandlercpp ) & CronJob :: KillHandler		4688947	2					
ANR	4689053	CastExpression	( TimerHandlercpp ) & CronJob :: KillHandler		4688947	0					
ANR	4689054	CastTarget	TimerHandlercpp		4688947	0					
ANR	4689055	UnaryOperationExpression	& CronJob :: KillHandler		4688947	1					
ANR	4689056	UnaryOperator	&		4688947	0					
ANR	4689057	Identifier	CronJob :: KillHandler		4688947	1					
ANR	4689058	Argument	"""KillJob"""		4688947	3					
ANR	4689059	PrimaryExpression	"""KillJob"""		4688947	0					
ANR	4689060	Argument	this		4688947	4					
ANR	4689061	Identifier	this		4688947	0					
ANR	4689062	IfStatement	if ( m_killTimer < 0 )		4688947	2					
ANR	4689063	Condition	m_killTimer < 0	946:7:21327:21341	4688947	0	True				
ANR	4689064	RelationalExpression	m_killTimer < 0		4688947	0		<			
ANR	4689065	Identifier	m_killTimer		4688947	0					
ANR	4689066	PrimaryExpression	0		4688947	1					
ANR	4689067	CompoundStatement		33:25:761:761	4688947	1					
ANR	4689068	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJob: Failed to create kill timer\\n"" )"	947:3:21350:21411	4688947	0	True				
ANR	4689069	CallExpression	"dprintf ( D_ALWAYS , ""CronJob: Failed to create kill timer\\n"" )"		4688947	0					
ANR	4689070	Callee	dprintf		4688947	0					
ANR	4689071	Identifier	dprintf		4688947	0					
ANR	4689072	ArgumentList	D_ALWAYS		4688947	1					
ANR	4689073	Argument	D_ALWAYS		4688947	0					
ANR	4689074	Identifier	D_ALWAYS		4688947	0					
ANR	4689075	Argument	"""CronJob: Failed to create kill timer\\n"""		4688947	1					
ANR	4689076	PrimaryExpression	"""CronJob: Failed to create kill timer\\n"""		4688947	0					
ANR	4689077	ReturnStatement	return - 1 ;	948:3:21416:21425	4688947	1	True				
ANR	4689078	UnaryOperationExpression	- 1		4688947	0					
ANR	4689079	UnaryOperator	-		4688947	0					
ANR	4689080	PrimaryExpression	1		4688947	1					
ANR	4689081	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""CronJob: new kill timer ID=%d set to %us\\n"" , m_killTimer , seconds )"	950:2:21433:21528	4688947	3	True				
ANR	4689082	CallExpression	"dprintf ( D_FULLDEBUG , ""CronJob: new kill timer ID=%d set to %us\\n"" , m_killTimer , seconds )"		4688947	0					
ANR	4689083	Callee	dprintf		4688947	0					
ANR	4689084	Identifier	dprintf		4688947	0					
ANR	4689085	ArgumentList	D_FULLDEBUG		4688947	1					
ANR	4689086	Argument	D_FULLDEBUG		4688947	0					
ANR	4689087	Identifier	D_FULLDEBUG		4688947	0					
ANR	4689088	Argument	"""CronJob: new kill timer ID=%d set to %us\\n"""		4688947	1					
ANR	4689089	PrimaryExpression	"""CronJob: new kill timer ID=%d set to %us\\n"""		4688947	0					
ANR	4689090	Argument	m_killTimer		4688947	2					
ANR	4689091	Identifier	m_killTimer		4688947	0					
ANR	4689092	Argument	seconds		4688947	3					
ANR	4689093	Identifier	seconds		4688947	0					
ANR	4689094	ReturnStatement	return 0 ;	954:1:21535:21543	4688947	2	True				
ANR	4689095	PrimaryExpression	0		4688947	0					
ANR	4689096	ReturnType	int		4688947	1					
ANR	4689097	Identifier	CronJob :: KillTimer		4688947	2					
ANR	4689098	ParameterList	unsigned seconds		4688947	3					
ANR	4689099	Parameter	unsigned seconds	913:20:20564:20579	4688947	0	True				
ANR	4689100	ParameterType	unsigned		4688947	0					
ANR	4689101	Identifier	seconds		4688947	1					
ANR	4689102	CFGEntryNode	ENTRY		4688947		True				
ANR	4689103	CFGExitNode	EXIT		4688947		True				
ANR	4689104	Symbol	m_killTimer		4688947						
ANR	4689105	Symbol	seconds		4688947						
ANR	4689106	Symbol	daemonCore -> Reset_Timer		4688947						
ANR	4689107	Symbol	* daemonCore		4688947						
ANR	4689108	Symbol	daemonCore		4688947						
ANR	4689109	Symbol	daemonCore -> Register_Timer		4688947						
ANR	4689110	Symbol	this		4688947						
ANR	4689111	Symbol	D_ALWAYS		4688947						
ANR	4689112	Symbol	GetName		4688947						
ANR	4689113	Symbol	D_FULLDEBUG		4688947						
ANR	4689114	Symbol	TIMER_NEVER		4688947						
ANR	4689115	Symbol	& CronJob :: KillHandler		4688947						
ANR	4689116	Function	CronJob :: StateString	958:0:21598:21911							
ANR	4689117	FunctionDef	CronJob :: StateString (CronJobState state_arg)		4689116	0					
ANR	4689118	CompoundStatement		960:0:21658:21911	4689116	0					
ANR	4689119	SwitchStatement	switch ( state_arg )		4689116	0					
ANR	4689120	Condition	state_arg	961:9:21669:21677	4689116	0	True				
ANR	4689121	Identifier	state_arg		4689116	0					
ANR	4689122	CompoundStatement		3:1:23:23	4689116	1					
ANR	4689123	Label	case CRON_IDLE :	963:1:21685:21699	4689116	0	True				
ANR	4689124	Identifier	CRON_IDLE		4689116	0					
ANR	4689125	ReturnStatement	"return ""Idle"" ;"	964:2:21703:21716	4689116	1	True				
ANR	4689126	PrimaryExpression	"""Idle"""		4689116	0					
ANR	4689127	Label	case CRON_RUNNING :	965:1:21719:21736	4689116	2	True				
ANR	4689128	Identifier	CRON_RUNNING		4689116	0					
ANR	4689129	ReturnStatement	"return ""Running"" ;"	966:2:21740:21756	4689116	3	True				
ANR	4689130	PrimaryExpression	"""Running"""		4689116	0					
ANR	4689131	Label	case CRON_TERM_SENT :	967:1:21759:21778	4689116	4	True				
ANR	4689132	Identifier	CRON_TERM_SENT		4689116	0					
ANR	4689133	ReturnStatement	"return ""TermSent"" ;"	968:2:21782:21799	4689116	5	True				
ANR	4689134	PrimaryExpression	"""TermSent"""		4689116	0					
ANR	4689135	Label	case CRON_KILL_SENT :	969:1:21802:21821	4689116	6	True				
ANR	4689136	Identifier	CRON_KILL_SENT		4689116	0					
ANR	4689137	ReturnStatement	"return ""KillSent"" ;"	970:2:21825:21842	4689116	7	True				
ANR	4689138	PrimaryExpression	"""KillSent"""		4689116	0					
ANR	4689139	Label	case CRON_DEAD :	971:1:21845:21859	4689116	8	True				
ANR	4689140	Identifier	CRON_DEAD		4689116	0					
ANR	4689141	ReturnStatement	"return ""Dead"" ;"	972:2:21863:21876	4689116	9	True				
ANR	4689142	PrimaryExpression	"""Dead"""		4689116	0					
ANR	4689143	Label	default :	973:1:21879:21886	4689116	10	True				
ANR	4689144	Identifier	default		4689116	0					
ANR	4689145	ReturnStatement	"return ""Unknown"" ;"	974:2:21890:21906	4689116	11	True				
ANR	4689146	PrimaryExpression	"""Unknown"""		4689116	0					
ANR	4689147	ReturnType	const char *		4689116	1					
ANR	4689148	Identifier	CronJob :: StateString		4689116	2					
ANR	4689149	ParameterList	CronJobState state_arg		4689116	3					
ANR	4689150	Parameter	CronJobState state_arg	959:22:21633:21654	4689116	0	True				
ANR	4689151	ParameterType	CronJobState		4689116	0					
ANR	4689152	Identifier	state_arg		4689116	1					
ANR	4689153	CFGEntryNode	ENTRY		4689116		True				
ANR	4689154	CFGExitNode	EXIT		4689116		True				
ANR	4689155	Symbol	state_arg		4689116						
ANR	4689156	Function	CronJob :: StateString	979:0:21956:22035							
ANR	4689157	FunctionDef	CronJob :: StateString ()		4689156	0					
ANR	4689158	CompoundStatement		981:0:21998:22035	4689156	0					
ANR	4689159	ReturnStatement	return StateString ( GetState ( ) ) ;	982:1:22001:22033	4689156	0	True				
ANR	4689160	CallExpression	StateString ( GetState ( ) )		4689156	0					
ANR	4689161	Callee	StateString		4689156	0					
ANR	4689162	Identifier	StateString		4689156	0					
ANR	4689163	ArgumentList	GetState ( )		4689156	1					
ANR	4689164	Argument	GetState ( )		4689156	0					
ANR	4689165	CallExpression	GetState ( )		4689156	0					
ANR	4689166	Callee	GetState		4689156	0					
ANR	4689167	Identifier	GetState		4689156	0					
ANR	4689168	ArgumentList			4689156	1					
ANR	4689169	ReturnType	const char *		4689156	1					
ANR	4689170	Identifier	CronJob :: StateString		4689156	2					
ANR	4689171	ParameterList			4689156	3					
ANR	4689172	CFGEntryNode	ENTRY		4689156		True				
ANR	4689173	CFGExitNode	EXIT		4689156		True				
ANR	4689174	Symbol	StateString		4689156						
ANR	4689175	Symbol	GetState		4689156						
