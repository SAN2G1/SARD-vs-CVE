command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3122287	File	data/converged/CVE-2011-4930_htcondor/src_condor_dagman_dagman_commands.cpp								
ANR	3122288	Function	PauseDag	28:0:952:1407							
ANR	3122289	FunctionDef	PauseDag (Dagman & dm)		3122288	0					
ANR	3122290	CompoundStatement		30:0:978:1407	3122288	0					
ANR	3122291	IfStatement	if ( dm . paused == true )		3122288	0					
ANR	3122292	Condition	dm . paused == true	31:5:985:1001	3122288	0	True				
ANR	3122293	EqualityExpression	dm . paused == true		3122288	0		==			
ANR	3122294	MemberAccess	dm . paused		3122288	0					
ANR	3122295	Identifier	dm		3122288	0					
ANR	3122296	Identifier	paused		3122288	1					
ANR	3122297	Identifier	true		3122288	1					
ANR	3122298	CompoundStatement		2:25:26:26	3122288	1					
ANR	3122299	Statement	debug_printf	35:2:1190:1201	3122288	0	True				
ANR	3122300	Statement	(	35:14:1202:1202	3122288	1	True				
ANR	3122301	Statement	DEBUG_NORMAL	35:16:1204:1215	3122288	2	True				
ANR	3122302	Statement	","	35:28:1216:1216	3122288	3	True				
ANR	3122303	Statement	"""ERROR: PauseDag() called on an """	35:30:1218:1250	3122288	4	True				
ANR	3122304	Statement	"""already-paused DAG\\n"""	36:7:1259:1280	3122288	5	True				
ANR	3122305	Statement	)	36:30:1282:1282	3122288	6	True				
ANR	3122306	ExpressionStatement		36:31:1283:1283	3122288	7	True				
ANR	3122307	ReturnStatement	return false ;	37:2:1287:1299	3122288	8	True				
ANR	3122308	Identifier	false		3122288	0					
ANR	3122309	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""DAGMan event-processing paused...\\n"" )"	39:1:1305:1372	3122288	1	True				
ANR	3122310	CallExpression	"debug_printf ( DEBUG_NORMAL , ""DAGMan event-processing paused...\\n"" )"		3122288	0					
ANR	3122311	Callee	debug_printf		3122288	0					
ANR	3122312	Identifier	debug_printf		3122288	0					
ANR	3122313	ArgumentList	DEBUG_NORMAL		3122288	1					
ANR	3122314	Argument	DEBUG_NORMAL		3122288	0					
ANR	3122315	Identifier	DEBUG_NORMAL		3122288	0					
ANR	3122316	Argument	"""DAGMan event-processing paused...\\n"""		3122288	1					
ANR	3122317	PrimaryExpression	"""DAGMan event-processing paused...\\n"""		3122288	0					
ANR	3122318	ExpressionStatement	dm . paused = true	40:1:1375:1391	3122288	2	True				
ANR	3122319	AssignmentExpression	dm . paused = true		3122288	0		=			
ANR	3122320	MemberAccess	dm . paused		3122288	0					
ANR	3122321	Identifier	dm		3122288	0					
ANR	3122322	Identifier	paused		3122288	1					
ANR	3122323	Identifier	true		3122288	1					
ANR	3122324	ReturnStatement	return true ;	41:1:1394:1405	3122288	3	True				
ANR	3122325	Identifier	true		3122288	0					
ANR	3122326	ReturnType	bool		3122288	1					
ANR	3122327	Identifier	PauseDag		3122288	2					
ANR	3122328	ParameterList	Dagman & dm		3122288	3					
ANR	3122329	Parameter	Dagman & dm	29:9:966:975	3122288	0	True				
ANR	3122330	ParameterType	Dagman &		3122288	0					
ANR	3122331	Identifier	dm		3122288	1					
ANR	3122332	CFGEntryNode	ENTRY		3122288		True				
ANR	3122333	CFGExitNode	EXIT		3122288		True				
ANR	3122334	Symbol	dm . paused		3122288						
ANR	3122335	Symbol	true		3122288						
ANR	3122336	Symbol	false		3122288						
ANR	3122337	Symbol	dm		3122288						
ANR	3122338	Symbol	DEBUG_NORMAL		3122288						
ANR	3122339	Function	ResumeDag	44:0:1410:1958							
ANR	3122340	FunctionDef	ResumeDag (Dagman & dm)		3122339	0					
ANR	3122341	CompoundStatement		46:0:1437:1958	3122339	0					
ANR	3122342	IfStatement	if ( dm . paused != true )		3122339	0					
ANR	3122343	Condition	dm . paused != true	47:5:1444:1460	3122339	0	True				
ANR	3122344	EqualityExpression	dm . paused != true		3122339	0		!=			
ANR	3122345	MemberAccess	dm . paused		3122339	0					
ANR	3122346	Identifier	dm		3122339	0					
ANR	3122347	Identifier	paused		3122339	1					
ANR	3122348	Identifier	true		3122339	1					
ANR	3122349	CompoundStatement		2:25:26:26	3122339	1					
ANR	3122350	Statement	debug_printf	48:2:1468:1479	3122339	0	True				
ANR	3122351	Statement	(	48:14:1480:1480	3122339	1	True				
ANR	3122352	Statement	DEBUG_NORMAL	48:16:1482:1493	3122339	2	True				
ANR	3122353	Statement	","	48:28:1494:1494	3122339	3	True				
ANR	3122354	Statement	"""ERROR: ResumeDag() called on an """	48:30:1496:1529	3122339	4	True				
ANR	3122355	Statement	"""un-paused DAG\\n"""	49:7:1538:1554	3122339	5	True				
ANR	3122356	Statement	)	49:25:1556:1556	3122339	6	True				
ANR	3122357	ExpressionStatement		49:26:1557:1557	3122339	7	True				
ANR	3122358	ReturnStatement	return false ;	50:2:1561:1573	3122339	8	True				
ANR	3122359	Identifier	false		3122339	0					
ANR	3122360	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""DAGMan event-processing resuming...\\n"" )"	57:1:1853:1922	3122339	1	True				
ANR	3122361	CallExpression	"debug_printf ( DEBUG_NORMAL , ""DAGMan event-processing resuming...\\n"" )"		3122339	0					
ANR	3122362	Callee	debug_printf		3122339	0					
ANR	3122363	Identifier	debug_printf		3122339	0					
ANR	3122364	ArgumentList	DEBUG_NORMAL		3122339	1					
ANR	3122365	Argument	DEBUG_NORMAL		3122339	0					
ANR	3122366	Identifier	DEBUG_NORMAL		3122339	0					
ANR	3122367	Argument	"""DAGMan event-processing resuming...\\n"""		3122339	1					
ANR	3122368	PrimaryExpression	"""DAGMan event-processing resuming...\\n"""		3122339	0					
ANR	3122369	ExpressionStatement	dm . paused = false	58:1:1925:1942	3122339	2	True				
ANR	3122370	AssignmentExpression	dm . paused = false		3122339	0		=			
ANR	3122371	MemberAccess	dm . paused		3122339	0					
ANR	3122372	Identifier	dm		3122339	0					
ANR	3122373	Identifier	paused		3122339	1					
ANR	3122374	Identifier	false		3122339	1					
ANR	3122375	ReturnStatement	return true ;	59:1:1945:1956	3122339	3	True				
ANR	3122376	Identifier	true		3122339	0					
ANR	3122377	ReturnType	bool		3122339	1					
ANR	3122378	Identifier	ResumeDag		3122339	2					
ANR	3122379	ParameterList	Dagman & dm		3122339	3					
ANR	3122380	Parameter	Dagman & dm	45:10:1425:1434	3122339	0	True				
ANR	3122381	ParameterType	Dagman &		3122339	0					
ANR	3122382	Identifier	dm		3122339	1					
ANR	3122383	CFGEntryNode	ENTRY		3122339		True				
ANR	3122384	CFGExitNode	EXIT		3122339		True				
ANR	3122385	Symbol	dm . paused		3122339						
ANR	3122386	Symbol	true		3122339						
ANR	3122387	Symbol	false		3122339						
ANR	3122388	Symbol	dm		3122339						
ANR	3122389	Symbol	DEBUG_NORMAL		3122339						
ANR	3122390	Function	AddNode	62:0:1961:3217							
ANR	3122391	FunctionDef	"AddNode (Dag * dag , Job :: job_type_t type , const char * name , const char * directory , const char * submitFile , const char * precmd , const char * postcmd , bool noop , bool done , MyString & failReason)"		3122390	0					
ANR	3122392	CompoundStatement		69:0:2173:3217	3122390	0					
ANR	3122393	IdentifierDeclStatement	MyString why ;	70:1:2176:2188	3122390	0	True				
ANR	3122394	IdentifierDecl	why		3122390	0					
ANR	3122395	IdentifierDeclType	MyString		3122390	0					
ANR	3122396	Identifier	why		3122390	1					
ANR	3122397	IfStatement	"if ( ! IsValidNodeName ( dag , name , why ) )"		3122390	1					
ANR	3122398	Condition	"! IsValidNodeName ( dag , name , why )"	71:5:2195:2228	3122390	0	True				
ANR	3122399	UnaryOperationExpression	"! IsValidNodeName ( dag , name , why )"		3122390	0					
ANR	3122400	UnaryOperator	!		3122390	0					
ANR	3122401	CallExpression	"IsValidNodeName ( dag , name , why )"		3122390	1					
ANR	3122402	Callee	IsValidNodeName		3122390	0					
ANR	3122403	Identifier	IsValidNodeName		3122390	0					
ANR	3122404	ArgumentList	dag		3122390	1					
ANR	3122405	Argument	dag		3122390	0					
ANR	3122406	Identifier	dag		3122390	0					
ANR	3122407	Argument	name		3122390	1					
ANR	3122408	Identifier	name		3122390	0					
ANR	3122409	Argument	why		3122390	2					
ANR	3122410	Identifier	why		3122390	0					
ANR	3122411	CompoundStatement		3:42:58:58	3122390	1					
ANR	3122412	ExpressionStatement	failReason = why	72:2:2236:2252	3122390	0	True				
ANR	3122413	AssignmentExpression	failReason = why		3122390	0		=			
ANR	3122414	Identifier	failReason		3122390	0					
ANR	3122415	Identifier	why		3122390	1					
ANR	3122416	ReturnStatement	return false ;	73:2:2256:2268	3122390	1	True				
ANR	3122417	Identifier	false		3122390	0					
ANR	3122418	IfStatement	"if ( ! IsValidSubmitFileName ( submitFile , why ) )"		3122390	2					
ANR	3122419	Condition	"! IsValidSubmitFileName ( submitFile , why )"	75:5:2278:2318	3122390	0	True				
ANR	3122420	UnaryOperationExpression	"! IsValidSubmitFileName ( submitFile , why )"		3122390	0					
ANR	3122421	UnaryOperator	!		3122390	0					
ANR	3122422	CallExpression	"IsValidSubmitFileName ( submitFile , why )"		3122390	1					
ANR	3122423	Callee	IsValidSubmitFileName		3122390	0					
ANR	3122424	Identifier	IsValidSubmitFileName		3122390	0					
ANR	3122425	ArgumentList	submitFile		3122390	1					
ANR	3122426	Argument	submitFile		3122390	0					
ANR	3122427	Identifier	submitFile		3122390	0					
ANR	3122428	Argument	why		3122390	1					
ANR	3122429	Identifier	why		3122390	0					
ANR	3122430	CompoundStatement		7:49:148:148	3122390	1					
ANR	3122431	ExpressionStatement	failReason = why	76:2:2326:2342	3122390	0	True				
ANR	3122432	AssignmentExpression	failReason = why		3122390	0		=			
ANR	3122433	Identifier	failReason		3122390	0					
ANR	3122434	Identifier	why		3122390	1					
ANR	3122435	ReturnStatement	return false ;	77:2:2346:2358	3122390	1	True				
ANR	3122436	Identifier	false		3122390	0					
ANR	3122437	IdentifierDeclStatement	"Job * node = new Job ( type , name , directory , submitFile ) ;"	79:1:2364:2420	3122390	3	True				
ANR	3122438	IdentifierDecl	"* node = new Job ( type , name , directory , submitFile )"		3122390	0					
ANR	3122439	IdentifierDeclType	Job *		3122390	0					
ANR	3122440	Identifier	node		3122390	1					
ANR	3122441	AssignmentExpression	"* node = new Job ( type , name , directory , submitFile )"		3122390	2		=			
ANR	3122442	Identifier	node		3122390	0					
ANR	3122443	Expression	"type , name , directory , submitFile"		3122390	1					
ANR	3122444	Identifier	type		3122390	0					
ANR	3122445	Expression	"name , directory , submitFile"		3122390	1					
ANR	3122446	Identifier	name		3122390	0					
ANR	3122447	Expression	"directory , submitFile"		3122390	1					
ANR	3122448	Identifier	directory		3122390	0					
ANR	3122449	Identifier	submitFile		3122390	1					
ANR	3122450	IfStatement	if ( ! node )		3122390	4					
ANR	3122451	Condition	! node	80:5:2427:2431	3122390	0	True				
ANR	3122452	UnaryOperationExpression	! node		3122390	0					
ANR	3122453	UnaryOperator	!		3122390	0					
ANR	3122454	Identifier	node		3122390	1					
ANR	3122455	CompoundStatement		12:13:261:261	3122390	1					
ANR	3122456	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: out of memory!\\n"" )"	81:2:2439:2485	3122390	0	True				
ANR	3122457	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: out of memory!\\n"" )"		3122390	0					
ANR	3122458	Callee	dprintf		3122390	0					
ANR	3122459	Identifier	dprintf		3122390	0					
ANR	3122460	ArgumentList	D_ALWAYS		3122390	1					
ANR	3122461	Argument	D_ALWAYS		3122390	0					
ANR	3122462	Identifier	D_ALWAYS		3122390	0					
ANR	3122463	Argument	"""ERROR: out of memory!\\n"""		3122390	1					
ANR	3122464	PrimaryExpression	"""ERROR: out of memory!\\n"""		3122390	0					
ANR	3122465	ExpressionStatement	"failReason = ""out of memory!"""	84:2:2603:2632	3122390	1	True				
ANR	3122466	AssignmentExpression	"failReason = ""out of memory!"""		3122390	0		=			
ANR	3122467	Identifier	failReason		3122390	0					
ANR	3122468	PrimaryExpression	"""out of memory!"""		3122390	1					
ANR	3122469	ReturnStatement	return false ;	85:2:2636:2648	3122390	2	True				
ANR	3122470	Identifier	false		3122390	0					
ANR	3122471	IfStatement	if ( precmd )		3122390	5					
ANR	3122472	Condition	precmd	87:5:2658:2663	3122390	0	True				
ANR	3122473	Identifier	precmd		3122390	0					
ANR	3122474	CompoundStatement		19:14:493:493	3122390	1					
ANR	3122475	IfStatement	"if ( ! node -> AddPreScript ( precmd , why ) )"		3122390	0					
ANR	3122476	Condition	"! node -> AddPreScript ( precmd , why )"	88:6:2675:2708	3122390	0	True				
ANR	3122477	UnaryOperationExpression	"! node -> AddPreScript ( precmd , why )"		3122390	0					
ANR	3122478	UnaryOperator	!		3122390	0					
ANR	3122479	CallExpression	"node -> AddPreScript ( precmd , why )"		3122390	1					
ANR	3122480	Callee	node -> AddPreScript		3122390	0					
ANR	3122481	PtrMemberAccess	node -> AddPreScript		3122390	0					
ANR	3122482	Identifier	node		3122390	0					
ANR	3122483	Identifier	AddPreScript		3122390	1					
ANR	3122484	ArgumentList	precmd		3122390	1					
ANR	3122485	Argument	precmd		3122390	0					
ANR	3122486	Identifier	precmd		3122390	0					
ANR	3122487	Argument	why		3122390	1					
ANR	3122488	Identifier	why		3122390	0					
ANR	3122489	CompoundStatement		20:43:538:538	3122390	1					
ANR	3122490	ExpressionStatement	"failReason = ""failed to add PRE script: "" + why"	89:3:2717:2764	3122390	0	True				
ANR	3122491	AssignmentExpression	"failReason = ""failed to add PRE script: "" + why"		3122390	0		=			
ANR	3122492	Identifier	failReason		3122390	0					
ANR	3122493	AdditiveExpression	"""failed to add PRE script: "" + why"		3122390	1		+			
ANR	3122494	PrimaryExpression	"""failed to add PRE script: """		3122390	0					
ANR	3122495	Identifier	why		3122390	1					
ANR	3122496	Statement	delete	90:3:2769:2774	3122390	1	True				
ANR	3122497	ExpressionStatement	node	90:10:2776:2780	3122390	2	True				
ANR	3122498	Identifier	node		3122390	0					
ANR	3122499	ReturnStatement	return false ;	91:3:2785:2797	3122390	3	True				
ANR	3122500	Identifier	false		3122390	0					
ANR	3122501	IfStatement	if ( postcmd )		3122390	6					
ANR	3122502	Condition	postcmd	94:5:2811:2817	3122390	0	True				
ANR	3122503	Identifier	postcmd		3122390	0					
ANR	3122504	CompoundStatement		26:15:647:647	3122390	1					
ANR	3122505	IfStatement	"if ( ! node -> AddPostScript ( postcmd , why ) )"		3122390	0					
ANR	3122506	Condition	"! node -> AddPostScript ( postcmd , why )"	95:6:2829:2864	3122390	0	True				
ANR	3122507	UnaryOperationExpression	"! node -> AddPostScript ( postcmd , why )"		3122390	0					
ANR	3122508	UnaryOperator	!		3122390	0					
ANR	3122509	CallExpression	"node -> AddPostScript ( postcmd , why )"		3122390	1					
ANR	3122510	Callee	node -> AddPostScript		3122390	0					
ANR	3122511	PtrMemberAccess	node -> AddPostScript		3122390	0					
ANR	3122512	Identifier	node		3122390	0					
ANR	3122513	Identifier	AddPostScript		3122390	1					
ANR	3122514	ArgumentList	postcmd		3122390	1					
ANR	3122515	Argument	postcmd		3122390	0					
ANR	3122516	Identifier	postcmd		3122390	0					
ANR	3122517	Argument	why		3122390	1					
ANR	3122518	Identifier	why		3122390	0					
ANR	3122519	CompoundStatement		27:45:694:694	3122390	1					
ANR	3122520	ExpressionStatement	"failReason = ""failed to add POST script: "" + why"	96:3:2873:2921	3122390	0	True				
ANR	3122521	AssignmentExpression	"failReason = ""failed to add POST script: "" + why"		3122390	0		=			
ANR	3122522	Identifier	failReason		3122390	0					
ANR	3122523	AdditiveExpression	"""failed to add POST script: "" + why"		3122390	1		+			
ANR	3122524	PrimaryExpression	"""failed to add POST script: """		3122390	0					
ANR	3122525	Identifier	why		3122390	1					
ANR	3122526	Statement	delete	97:3:2926:2931	3122390	1	True				
ANR	3122527	ExpressionStatement	node	97:10:2933:2937	3122390	2	True				
ANR	3122528	Identifier	node		3122390	0					
ANR	3122529	ReturnStatement	return false ;	98:3:2942:2954	3122390	3	True				
ANR	3122530	Identifier	false		3122390	0					
ANR	3122531	ExpressionStatement	node -> SetNoop ( noop )	101:1:2964:2985	3122390	7	True				
ANR	3122532	CallExpression	node -> SetNoop ( noop )		3122390	0					
ANR	3122533	Callee	node -> SetNoop		3122390	0					
ANR	3122534	PtrMemberAccess	node -> SetNoop		3122390	0					
ANR	3122535	Identifier	node		3122390	0					
ANR	3122536	Identifier	SetNoop		3122390	1					
ANR	3122537	ArgumentList	noop		3122390	1					
ANR	3122538	Argument	noop		3122390	0					
ANR	3122539	Identifier	noop		3122390	0					
ANR	3122540	IfStatement	if ( done )		3122390	8					
ANR	3122541	Condition	done	102:5:2992:2995	3122390	0	True				
ANR	3122542	Identifier	done		3122390	0					
ANR	3122543	CompoundStatement		34:12:825:825	3122390	1					
ANR	3122544	ExpressionStatement	node -> SetStatus ( Job :: STATUS_DONE )	103:2:3003:3038	3122390	0	True				
ANR	3122545	CallExpression	node -> SetStatus ( Job :: STATUS_DONE )		3122390	0					
ANR	3122546	Callee	node -> SetStatus		3122390	0					
ANR	3122547	PtrMemberAccess	node -> SetStatus		3122390	0					
ANR	3122548	Identifier	node		3122390	0					
ANR	3122549	Identifier	SetStatus		3122390	1					
ANR	3122550	ArgumentList	Job :: STATUS_DONE		3122390	1					
ANR	3122551	Argument	Job :: STATUS_DONE		3122390	0					
ANR	3122552	Identifier	Job :: STATUS_DONE		3122390	0					
ANR	3122553	ExpressionStatement	ASSERT ( dag != NULL )	105:1:3044:3065	3122390	9	True				
ANR	3122554	CallExpression	ASSERT ( dag != NULL )		3122390	0					
ANR	3122555	Callee	ASSERT		3122390	0					
ANR	3122556	Identifier	ASSERT		3122390	0					
ANR	3122557	ArgumentList	dag != NULL		3122390	1					
ANR	3122558	Argument	dag != NULL		3122390	0					
ANR	3122559	EqualityExpression	dag != NULL		3122390	0		!=			
ANR	3122560	Identifier	dag		3122390	0					
ANR	3122561	Identifier	NULL		3122390	1					
ANR	3122562	IfStatement	if ( ! dag -> Add ( * node ) )		3122390	10					
ANR	3122563	Condition	! dag -> Add ( * node )	106:5:3072:3089	3122390	0	True				
ANR	3122564	UnaryOperationExpression	! dag -> Add ( * node )		3122390	0					
ANR	3122565	UnaryOperator	!		3122390	0					
ANR	3122566	CallExpression	dag -> Add ( * node )		3122390	1					
ANR	3122567	Callee	dag -> Add		3122390	0					
ANR	3122568	PtrMemberAccess	dag -> Add		3122390	0					
ANR	3122569	Identifier	dag		3122390	0					
ANR	3122570	Identifier	Add		3122390	1					
ANR	3122571	ArgumentList	* node		3122390	1					
ANR	3122572	Argument	* node		3122390	0					
ANR	3122573	UnaryOperationExpression	* node		3122390	0					
ANR	3122574	UnaryOperator	*		3122390	0					
ANR	3122575	Identifier	node		3122390	1					
ANR	3122576	CompoundStatement		38:26:919:919	3122390	1					
ANR	3122577	ExpressionStatement	"failReason = ""unknown failure adding node to DAG"""	107:2:3097:3146	3122390	0	True				
ANR	3122578	AssignmentExpression	"failReason = ""unknown failure adding node to DAG"""		3122390	0		=			
ANR	3122579	Identifier	failReason		3122390	0					
ANR	3122580	PrimaryExpression	"""unknown failure adding node to DAG"""		3122390	1					
ANR	3122581	Statement	delete	108:2:3150:3155	3122390	1	True				
ANR	3122582	ExpressionStatement	node	108:9:3157:3161	3122390	2	True				
ANR	3122583	Identifier	node		3122390	0					
ANR	3122584	ReturnStatement	return false ;	109:2:3165:3177	3122390	3	True				
ANR	3122585	Identifier	false		3122390	0					
ANR	3122586	ExpressionStatement	"failReason = ""n/a"""	111:1:3183:3201	3122390	11	True				
ANR	3122587	AssignmentExpression	"failReason = ""n/a"""		3122390	0		=			
ANR	3122588	Identifier	failReason		3122390	0					
ANR	3122589	PrimaryExpression	"""n/a"""		3122390	1					
ANR	3122590	ReturnStatement	return true ;	112:1:3204:3215	3122390	12	True				
ANR	3122591	Identifier	true		3122390	0					
ANR	3122592	ReturnType	bool		3122390	1					
ANR	3122593	Identifier	AddNode		3122390	2					
ANR	3122594	ParameterList	"Dag * dag , Job :: job_type_t type , const char * name , const char * directory , const char * submitFile , const char * precmd , const char * postcmd , bool noop , bool done , MyString & failReason"		3122390	3					
ANR	3122595	Parameter	Dag * dag	63:9:1975:1982	3122390	0	True				
ANR	3122596	ParameterType	Dag *		3122390	0					
ANR	3122597	Identifier	dag		3122390	1					
ANR	3122598	Parameter	Job :: job_type_t type	63:19:1985:2004	3122390	1	True				
ANR	3122599	ParameterType	Job :: job_type_t		3122390	0					
ANR	3122600	Identifier	type		3122390	1					
ANR	3122601	Parameter	const char * name	63:41:2007:2022	3122390	2	True				
ANR	3122602	ParameterType	const char *		3122390	0					
ANR	3122603	Identifier	name		3122390	1					
ANR	3122604	Parameter	const char * directory	64:3:2028:2048	3122390	3	True				
ANR	3122605	ParameterType	const char *		3122390	0					
ANR	3122606	Identifier	directory		3122390	1					
ANR	3122607	Parameter	const char * submitFile	65:3:2054:2075	3122390	4	True				
ANR	3122608	ParameterType	const char *		3122390	0					
ANR	3122609	Identifier	submitFile		3122390	1					
ANR	3122610	Parameter	const char * precmd	66:3:2081:2098	3122390	5	True				
ANR	3122611	ParameterType	const char *		3122390	0					
ANR	3122612	Identifier	precmd		3122390	1					
ANR	3122613	Parameter	const char * postcmd	66:23:2101:2119	3122390	6	True				
ANR	3122614	ParameterType	const char *		3122390	0					
ANR	3122615	Identifier	postcmd		3122390	1					
ANR	3122616	Parameter	bool noop	66:44:2122:2130	3122390	7	True				
ANR	3122617	ParameterType	bool		3122390	0					
ANR	3122618	Identifier	noop		3122390	1					
ANR	3122619	Parameter	bool done	67:3:2136:2144	3122390	8	True				
ANR	3122620	ParameterType	bool		3122390	0					
ANR	3122621	Identifier	done		3122390	1					
ANR	3122622	Parameter	MyString & failReason	68:3:2150:2169	3122390	9	True				
ANR	3122623	ParameterType	MyString &		3122390	0					
ANR	3122624	Identifier	failReason		3122390	1					
ANR	3122625	CFGEntryNode	ENTRY		3122390		True				
ANR	3122626	CFGExitNode	EXIT		3122390		True				
ANR	3122627	Symbol	precmd		3122390						
ANR	3122628	Symbol	NULL		3122390						
ANR	3122629	Symbol	IsValidSubmitFileName		3122390						
ANR	3122630	Symbol	node -> AddPreScript		3122390						
ANR	3122631	Symbol	false		3122390						
ANR	3122632	Symbol	D_ALWAYS		3122390						
ANR	3122633	Symbol	why		3122390						
ANR	3122634	Symbol	dag -> Add		3122390						
ANR	3122635	Symbol	dag		3122390						
ANR	3122636	Symbol	* dag		3122390						
ANR	3122637	Symbol	type		3122390						
ANR	3122638	Symbol	directory		3122390						
ANR	3122639	Symbol	done		3122390						
ANR	3122640	Symbol	noop		3122390						
ANR	3122641	Symbol	node		3122390						
ANR	3122642	Symbol	postcmd		3122390						
ANR	3122643	Symbol	name		3122390						
ANR	3122644	Symbol	true		3122390						
ANR	3122645	Symbol	Job :: STATUS_DONE		3122390						
ANR	3122646	Symbol	failReason		3122390						
ANR	3122647	Symbol	IsValidNodeName		3122390						
ANR	3122648	Symbol	* node		3122390						
ANR	3122649	Symbol	node -> AddPostScript		3122390						
ANR	3122650	Symbol	submitFile		3122390						
ANR	3122651	Function	SetNodeDagFile	115:0:3220:3520							
ANR	3122652	FunctionDef	"SetNodeDagFile (Dag * dag , const char * nodeName , const char * dagFile , MyString & whynot)"		3122651	0					
ANR	3122653	CompoundStatement		118:0:3326:3520	3122651	0					
ANR	3122654	IdentifierDeclStatement	Job * job = dag -> FindNodeByName ( nodeName ) ;	119:1:3329:3371	3122651	0	True				
ANR	3122655	IdentifierDecl	* job = dag -> FindNodeByName ( nodeName )		3122651	0					
ANR	3122656	IdentifierDeclType	Job *		3122651	0					
ANR	3122657	Identifier	job		3122651	1					
ANR	3122658	AssignmentExpression	* job = dag -> FindNodeByName ( nodeName )		3122651	2		=			
ANR	3122659	Identifier	job		3122651	0					
ANR	3122660	CallExpression	dag -> FindNodeByName ( nodeName )		3122651	1					
ANR	3122661	Callee	dag -> FindNodeByName		3122651	0					
ANR	3122662	PtrMemberAccess	dag -> FindNodeByName		3122651	0					
ANR	3122663	Identifier	dag		3122651	0					
ANR	3122664	Identifier	FindNodeByName		3122651	1					
ANR	3122665	ArgumentList	nodeName		3122651	1					
ANR	3122666	Argument	nodeName		3122651	0					
ANR	3122667	Identifier	nodeName		3122651	0					
ANR	3122668	IfStatement	if ( job )		3122651	1					
ANR	3122669	Condition	job	120:6:3379:3381	3122651	0	True				
ANR	3122670	Identifier	job		3122651	0					
ANR	3122671	CompoundStatement		3:12:58:58	3122651	1					
ANR	3122672	ExpressionStatement	job -> SetDagFile ( dagFile )	121:2:3389:3415	3122651	0	True				
ANR	3122673	CallExpression	job -> SetDagFile ( dagFile )		3122651	0					
ANR	3122674	Callee	job -> SetDagFile		3122651	0					
ANR	3122675	PtrMemberAccess	job -> SetDagFile		3122651	0					
ANR	3122676	Identifier	job		3122651	0					
ANR	3122677	Identifier	SetDagFile		3122651	1					
ANR	3122678	ArgumentList	dagFile		3122651	1					
ANR	3122679	Argument	dagFile		3122651	0					
ANR	3122680	Identifier	dagFile		3122651	0					
ANR	3122681	ReturnStatement	return true ;	122:2:3419:3430	3122651	1	True				
ANR	3122682	Identifier	true		3122651	0					
ANR	3122683	ElseStatement	else		3122651	0					
ANR	3122684	CompoundStatement		6:8:113:113	3122651	0					
ANR	3122685	ExpressionStatement	"whynot = MyString ( ""Node "" ) + nodeName + "" not found!"""	124:2:3444:3499	3122651	0	True				
ANR	3122686	AssignmentExpression	"whynot = MyString ( ""Node "" ) + nodeName + "" not found!"""		3122651	0		=			
ANR	3122687	Identifier	whynot		3122651	0					
ANR	3122688	AdditiveExpression	"MyString ( ""Node "" ) + nodeName + "" not found!"""		3122651	1		+			
ANR	3122689	CallExpression	"MyString ( ""Node "" )"		3122651	0					
ANR	3122690	Callee	MyString		3122651	0					
ANR	3122691	Identifier	MyString		3122651	0					
ANR	3122692	ArgumentList	"""Node """		3122651	1					
ANR	3122693	Argument	"""Node """		3122651	0					
ANR	3122694	PrimaryExpression	"""Node """		3122651	0					
ANR	3122695	AdditiveExpression	"nodeName + "" not found!"""		3122651	1		+			
ANR	3122696	Identifier	nodeName		3122651	0					
ANR	3122697	PrimaryExpression	""" not found!"""		3122651	1					
ANR	3122698	ReturnStatement	return false ;	125:2:3503:3515	3122651	1	True				
ANR	3122699	Identifier	false		3122651	0					
ANR	3122700	ReturnType	bool		3122651	1					
ANR	3122701	Identifier	SetNodeDagFile		3122651	2					
ANR	3122702	ParameterList	"Dag * dag , const char * nodeName , const char * dagFile , MyString & whynot"		3122651	3					
ANR	3122703	Parameter	Dag * dag	116:16:3241:3248	3122651	0	True				
ANR	3122704	ParameterType	Dag *		3122651	0					
ANR	3122705	Identifier	dag		3122651	1					
ANR	3122706	Parameter	const char * nodeName	116:26:3251:3270	3122651	1	True				
ANR	3122707	ParameterType	const char *		3122651	0					
ANR	3122708	Identifier	nodeName		3122651	1					
ANR	3122709	Parameter	const char * dagFile	116:48:3273:3291	3122651	2	True				
ANR	3122710	ParameterType	const char *		3122651	0					
ANR	3122711	Identifier	dagFile		3122651	1					
ANR	3122712	Parameter	MyString & whynot	117:12:3307:3322	3122651	3	True				
ANR	3122713	ParameterType	MyString &		3122651	0					
ANR	3122714	Identifier	whynot		3122651	1					
ANR	3122715	CFGEntryNode	ENTRY		3122651		True				
ANR	3122716	CFGExitNode	EXIT		3122651		True				
ANR	3122717	Symbol	nodeName		3122651						
ANR	3122718	Symbol	dagFile		3122651						
ANR	3122719	Symbol	true		3122651						
ANR	3122720	Symbol	false		3122651						
ANR	3122721	Symbol	whynot		3122651						
ANR	3122722	Symbol	dag		3122651						
ANR	3122723	Symbol	* dag		3122651						
ANR	3122724	Symbol	MyString		3122651						
ANR	3122725	Symbol	job		3122651						
ANR	3122726	Symbol	dag -> FindNodeByName		3122651						
ANR	3122727	Function	IsValidNodeName	129:0:3523:4051							
ANR	3122728	FunctionDef	"IsValidNodeName (Dag * dag , const char * name , MyString & whynot)"		3122727	0					
ANR	3122729	CompoundStatement		131:0:3592:4051	3122727	0					
ANR	3122730	IfStatement	if ( name == NULL )		3122727	0					
ANR	3122731	Condition	name == NULL	132:5:3599:3610	3122727	0	True				
ANR	3122732	EqualityExpression	name == NULL		3122727	0		==			
ANR	3122733	Identifier	name		3122727	0					
ANR	3122734	Identifier	NULL		3122727	1					
ANR	3122735	CompoundStatement		2:20:21:21	3122727	1					
ANR	3122736	ExpressionStatement	"whynot = ""missing node name"""	133:2:3618:3646	3122727	0	True				
ANR	3122737	AssignmentExpression	"whynot = ""missing node name"""		3122727	0		=			
ANR	3122738	Identifier	whynot		3122727	0					
ANR	3122739	PrimaryExpression	"""missing node name"""		3122727	1					
ANR	3122740	ReturnStatement	return false ;	134:2:3650:3662	3122727	1	True				
ANR	3122741	Identifier	false		3122727	0					
ANR	3122742	IfStatement	if ( strlen ( name ) == 0 )		3122727	1					
ANR	3122743	Condition	strlen ( name ) == 0	136:5:3672:3690	3122727	0	True				
ANR	3122744	EqualityExpression	strlen ( name ) == 0		3122727	0		==			
ANR	3122745	CallExpression	strlen ( name )		3122727	0					
ANR	3122746	Callee	strlen		3122727	0					
ANR	3122747	Identifier	strlen		3122727	0					
ANR	3122748	ArgumentList	name		3122727	1					
ANR	3122749	Argument	name		3122727	0					
ANR	3122750	Identifier	name		3122727	0					
ANR	3122751	PrimaryExpression	0		3122727	1					
ANR	3122752	CompoundStatement		6:27:101:101	3122727	1					
ANR	3122753	ExpressionStatement	"whynot = ""empty node name (name == \\""\\"")"""	137:2:3698:3739	3122727	0	True				
ANR	3122754	AssignmentExpression	"whynot = ""empty node name (name == \\""\\"")"""		3122727	0		=			
ANR	3122755	Identifier	whynot		3122727	0					
ANR	3122756	PrimaryExpression	"""empty node name (name == \\""\\"")"""		3122727	1					
ANR	3122757	ReturnStatement	return false ;	138:2:3743:3755	3122727	1	True				
ANR	3122758	Identifier	false		3122727	0					
ANR	3122759	IfStatement	if ( isReservedWord ( name ) )		3122727	2					
ANR	3122760	Condition	isReservedWord ( name )	140:5:3765:3786	3122727	0	True				
ANR	3122761	CallExpression	isReservedWord ( name )		3122727	0					
ANR	3122762	Callee	isReservedWord		3122727	0					
ANR	3122763	Identifier	isReservedWord		3122727	0					
ANR	3122764	ArgumentList	name		3122727	1					
ANR	3122765	Argument	name		3122727	0					
ANR	3122766	Identifier	name		3122727	0					
ANR	3122767	CompoundStatement		10:30:197:197	3122727	1					
ANR	3122768	ExpressionStatement	"whynot . sprintf ( ""invalid node name: '%s' is a DAGMan reserved word"" , name )"	141:2:3794:3874	3122727	0	True				
ANR	3122769	CallExpression	"whynot . sprintf ( ""invalid node name: '%s' is a DAGMan reserved word"" , name )"		3122727	0					
ANR	3122770	Callee	whynot . sprintf		3122727	0					
ANR	3122771	MemberAccess	whynot . sprintf		3122727	0					
ANR	3122772	Identifier	whynot		3122727	0					
ANR	3122773	Identifier	sprintf		3122727	1					
ANR	3122774	ArgumentList	"""invalid node name: '%s' is a DAGMan reserved word"""		3122727	1					
ANR	3122775	Argument	"""invalid node name: '%s' is a DAGMan reserved word"""		3122727	0					
ANR	3122776	PrimaryExpression	"""invalid node name: '%s' is a DAGMan reserved word"""		3122727	0					
ANR	3122777	Argument	name		3122727	1					
ANR	3122778	Identifier	name		3122727	0					
ANR	3122779	ReturnStatement	return false ;	143:2:3878:3890	3122727	1	True				
ANR	3122780	Identifier	false		3122727	0					
ANR	3122781	ExpressionStatement	ASSERT ( dag != NULL )	145:1:3896:3917	3122727	3	True				
ANR	3122782	CallExpression	ASSERT ( dag != NULL )		3122727	0					
ANR	3122783	Callee	ASSERT		3122727	0					
ANR	3122784	Identifier	ASSERT		3122727	0					
ANR	3122785	ArgumentList	dag != NULL		3122727	1					
ANR	3122786	Argument	dag != NULL		3122727	0					
ANR	3122787	EqualityExpression	dag != NULL		3122727	0		!=			
ANR	3122788	Identifier	dag		3122727	0					
ANR	3122789	Identifier	NULL		3122727	1					
ANR	3122790	IfStatement	if ( dag -> NodeExists ( name ) )		3122727	4					
ANR	3122791	Condition	dag -> NodeExists ( name )	146:5:3924:3946	3122727	0	True				
ANR	3122792	CallExpression	dag -> NodeExists ( name )		3122727	0					
ANR	3122793	Callee	dag -> NodeExists		3122727	0					
ANR	3122794	PtrMemberAccess	dag -> NodeExists		3122727	0					
ANR	3122795	Identifier	dag		3122727	0					
ANR	3122796	Identifier	NodeExists		3122727	1					
ANR	3122797	ArgumentList	name		3122727	1					
ANR	3122798	Argument	name		3122727	0					
ANR	3122799	Identifier	name		3122727	0					
ANR	3122800	CompoundStatement		16:31:357:357	3122727	1					
ANR	3122801	ExpressionStatement	"whynot . sprintf ( ""node name '%s' already exists in DAG"" , name )"	147:2:3954:4016	3122727	0	True				
ANR	3122802	CallExpression	"whynot . sprintf ( ""node name '%s' already exists in DAG"" , name )"		3122727	0					
ANR	3122803	Callee	whynot . sprintf		3122727	0					
ANR	3122804	MemberAccess	whynot . sprintf		3122727	0					
ANR	3122805	Identifier	whynot		3122727	0					
ANR	3122806	Identifier	sprintf		3122727	1					
ANR	3122807	ArgumentList	"""node name '%s' already exists in DAG"""		3122727	1					
ANR	3122808	Argument	"""node name '%s' already exists in DAG"""		3122727	0					
ANR	3122809	PrimaryExpression	"""node name '%s' already exists in DAG"""		3122727	0					
ANR	3122810	Argument	name		3122727	1					
ANR	3122811	Identifier	name		3122727	0					
ANR	3122812	ReturnStatement	return false ;	148:2:4020:4032	3122727	1	True				
ANR	3122813	Identifier	false		3122727	0					
ANR	3122814	ReturnStatement	return true ;	150:1:4038:4049	3122727	5	True				
ANR	3122815	Identifier	true		3122727	0					
ANR	3122816	ReturnType	bool		3122727	1					
ANR	3122817	Identifier	IsValidNodeName		3122727	2					
ANR	3122818	ParameterList	"Dag * dag , const char * name , MyString & whynot"		3122727	3					
ANR	3122819	Parameter	Dag * dag	130:17:3545:3552	3122727	0	True				
ANR	3122820	ParameterType	Dag *		3122727	0					
ANR	3122821	Identifier	dag		3122727	1					
ANR	3122822	Parameter	const char * name	130:27:3555:3570	3122727	1	True				
ANR	3122823	ParameterType	const char *		3122727	0					
ANR	3122824	Identifier	name		3122727	1					
ANR	3122825	Parameter	MyString & whynot	130:45:3573:3588	3122727	2	True				
ANR	3122826	ParameterType	MyString &		3122727	0					
ANR	3122827	Identifier	whynot		3122727	1					
ANR	3122828	CFGEntryNode	ENTRY		3122727		True				
ANR	3122829	CFGExitNode	EXIT		3122727		True				
ANR	3122830	Symbol	dag -> NodeExists		3122727						
ANR	3122831	Symbol	strlen		3122727						
ANR	3122832	Symbol	NULL		3122727						
ANR	3122833	Symbol	isReservedWord		3122727						
ANR	3122834	Symbol	name		3122727						
ANR	3122835	Symbol	false		3122727						
ANR	3122836	Symbol	true		3122727						
ANR	3122837	Symbol	whynot		3122727						
ANR	3122838	Symbol	dag		3122727						
ANR	3122839	Symbol	* dag		3122727						
ANR	3122840	Function	IsValidSubmitFileName	153:0:4054:4315							
ANR	3122841	FunctionDef	"IsValidSubmitFileName (const char * name , MyString & whynot)"		3122840	0					
ANR	3122842	CompoundStatement		155:0:4119:4315	3122840	0					
ANR	3122843	IfStatement	if ( name == NULL )		3122840	0					
ANR	3122844	Condition	name == NULL	156:5:4126:4137	3122840	0	True				
ANR	3122845	EqualityExpression	name == NULL		3122840	0		==			
ANR	3122846	Identifier	name		3122840	0					
ANR	3122847	Identifier	NULL		3122840	1					
ANR	3122848	CompoundStatement		2:20:21:21	3122840	1					
ANR	3122849	ExpressionStatement	"whynot = ""missing submit file name"""	157:2:4145:4180	3122840	0	True				
ANR	3122850	AssignmentExpression	"whynot = ""missing submit file name"""		3122840	0		=			
ANR	3122851	Identifier	whynot		3122840	0					
ANR	3122852	PrimaryExpression	"""missing submit file name"""		3122840	1					
ANR	3122853	ReturnStatement	return false ;	158:2:4184:4196	3122840	1	True				
ANR	3122854	Identifier	false		3122840	0					
ANR	3122855	IfStatement	if ( strlen ( name ) == 0 )		3122840	1					
ANR	3122856	Condition	strlen ( name ) == 0	160:5:4206:4224	3122840	0	True				
ANR	3122857	EqualityExpression	strlen ( name ) == 0		3122840	0		==			
ANR	3122858	CallExpression	strlen ( name )		3122840	0					
ANR	3122859	Callee	strlen		3122840	0					
ANR	3122860	Identifier	strlen		3122840	0					
ANR	3122861	ArgumentList	name		3122840	1					
ANR	3122862	Argument	name		3122840	0					
ANR	3122863	Identifier	name		3122840	0					
ANR	3122864	PrimaryExpression	0		3122840	1					
ANR	3122865	CompoundStatement		6:27:108:108	3122840	1					
ANR	3122866	ExpressionStatement	"whynot = ""empty submit file name (name == \\""\\"")"""	161:2:4232:4280	3122840	0	True				
ANR	3122867	AssignmentExpression	"whynot = ""empty submit file name (name == \\""\\"")"""		3122840	0		=			
ANR	3122868	Identifier	whynot		3122840	0					
ANR	3122869	PrimaryExpression	"""empty submit file name (name == \\""\\"")"""		3122840	1					
ANR	3122870	ReturnStatement	return false ;	162:2:4284:4296	3122840	1	True				
ANR	3122871	Identifier	false		3122840	0					
ANR	3122872	ReturnStatement	return true ;	164:1:4302:4313	3122840	2	True				
ANR	3122873	Identifier	true		3122840	0					
ANR	3122874	ReturnType	bool		3122840	1					
ANR	3122875	Identifier	IsValidSubmitFileName		3122840	2					
ANR	3122876	ParameterList	"const char * name , MyString & whynot"		3122840	3					
ANR	3122877	Parameter	const char * name	154:23:4082:4097	3122840	0	True				
ANR	3122878	ParameterType	const char *		3122840	0					
ANR	3122879	Identifier	name		3122840	1					
ANR	3122880	Parameter	MyString & whynot	154:41:4100:4115	3122840	1	True				
ANR	3122881	ParameterType	MyString &		3122840	0					
ANR	3122882	Identifier	whynot		3122840	1					
ANR	3122883	CFGEntryNode	ENTRY		3122840		True				
ANR	3122884	CFGExitNode	EXIT		3122840		True				
ANR	3122885	Symbol	strlen		3122840						
ANR	3122886	Symbol	NULL		3122840						
ANR	3122887	Symbol	name		3122840						
ANR	3122888	Symbol	false		3122840						
ANR	3122889	Symbol	true		3122840						
ANR	3122890	Symbol	whynot		3122840						
