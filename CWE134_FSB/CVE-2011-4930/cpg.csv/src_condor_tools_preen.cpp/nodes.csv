command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4235658	File	data/converged/CVE-2011-4930_htcondor/src_condor_tools_preen.cpp								
ANR	4235659	DeclStmt									
ANR	4235660	Decl							State	State ( )	get_machine_state
ANR	4235661	DeclStmt									
ANR	4235662	Decl							extern void	extern void ( const char * strflags )	_condor_set_debug_flags
ANR	4235663	DeclStmt									
ANR	4235664	Decl							int	int	MaxCkptInterval
ANR	4235665	DeclStmt									
ANR	4235666	Decl							char	char *	Spool
ANR	4235667	DeclStmt									
ANR	4235668	Decl							StringList	StringList	ExecuteDirs
ANR	4235669	DeclStmt									
ANR	4235670	Decl							char	char *	Log
ANR	4235671	DeclStmt									
ANR	4235672	Decl							char	char *	DaemonSockDir
ANR	4235673	DeclStmt									
ANR	4235674	Decl							char	char *	PreenAdmin
ANR	4235675	DeclStmt									
ANR	4235676	Decl							char	char *	MyName
ANR	4235677	DeclStmt									
ANR	4235678	Decl							char	char *	ValidSpoolFiles
ANR	4235679	DeclStmt									
ANR	4235680	Decl							char	char *	InvalidLogFiles
ANR	4235681	DeclStmt									
ANR	4235682	Decl							char	char *	MailPrg
ANR	4235683	DeclStmt									
ANR	4235684	Decl							BOOLEAN	BOOLEAN	MailFlag
ANR	4235685	DeclStmt									
ANR	4235686	Decl							BOOLEAN	BOOLEAN	VerboseFlag
ANR	4235687	DeclStmt									
ANR	4235688	Decl							BOOLEAN	BOOLEAN	RmFlag
ANR	4235689	DeclStmt									
ANR	4235690	Decl							StringList	StringList *	BadFiles
ANR	4235691	DeclStmt									
ANR	4235692	Decl							void	void ( )	usage
ANR	4235693	DeclStmt									
ANR	4235694	Decl							void	void ( )	send_mail_file
ANR	4235695	DeclStmt									
ANR	4235696	Decl							void	void ( )	init_params
ANR	4235697	DeclStmt									
ANR	4235698	Decl							void	void ( )	check_spool_dir
ANR	4235699	DeclStmt									
ANR	4235700	Decl							void	void ( )	check_execute_dir
ANR	4235701	DeclStmt									
ANR	4235702	Decl							void	void ( )	check_log_dir
ANR	4235703	DeclStmt									
ANR	4235704	Decl							void	void ( )	check_tmp_dir
ANR	4235705	DeclStmt									
ANR	4235706	Decl							void	void ( )	check_daemon_sock_dir
ANR	4235707	DeclStmt									
ANR	4235708	Decl							void	"void ( const char * , const char * , Directory & )"	bad_file
ANR	4235709	DeclStmt									
ANR	4235710	Decl							void	"void ( const char * , const char * )"	good_file
ANR	4235711	DeclStmt									
ANR	4235712	Decl							void	void ( )	produce_output
ANR	4235713	DeclStmt									
ANR	4235714	Decl							BOOLEAN	BOOLEAN ( const char * name )	is_valid_shared_exe
ANR	4235715	DeclStmt									
ANR	4235716	Decl							BOOLEAN	BOOLEAN ( const char * name )	is_ckpt_file
ANR	4235717	DeclStmt									
ANR	4235718	Decl							BOOLEAN	BOOLEAN ( const char * name )	is_v2_ckpt
ANR	4235719	DeclStmt									
ANR	4235720	Decl							BOOLEAN	BOOLEAN ( const char * name )	is_v3_ckpt
ANR	4235721	DeclStmt									
ANR	4235722	Decl							BOOLEAN	BOOLEAN ( int )	cluster_exists
ANR	4235723	DeclStmt									
ANR	4235724	Decl							BOOLEAN	"BOOLEAN ( int , int )"	proc_exists
ANR	4235725	DeclStmt									
ANR	4235726	Decl							BOOLEAN	BOOLEAN ( const char * name )	is_myproxy_file
ANR	4235727	DeclStmt									
ANR	4235728	Decl							BOOLEAN	BOOLEAN ( const char * name )	is_ccb_file
ANR	4235729	DeclStmt									
ANR	4235730	Decl							BOOLEAN	"BOOLEAN ( char const * fname , time_t delta )"	touched_recently
ANR	4235731	Function	usage	101:0:3643:3751							
ANR	4235732	FunctionDef	usage ()		4235731	0					
ANR	4235733	CompoundStatement		103:0:3656:3751	4235731	0					
ANR	4235734	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [-mail] [-remove] [-verbose] [-debug]\\n"" , MyName )"	104:1:3659:3737	4235731	0	True				
ANR	4235735	CallExpression	"fprintf ( stderr , ""Usage: %s [-mail] [-remove] [-verbose] [-debug]\\n"" , MyName )"		4235731	0					
ANR	4235736	Callee	fprintf		4235731	0					
ANR	4235737	Identifier	fprintf		4235731	0					
ANR	4235738	ArgumentList	stderr		4235731	1					
ANR	4235739	Argument	stderr		4235731	0					
ANR	4235740	Identifier	stderr		4235731	0					
ANR	4235741	Argument	"""Usage: %s [-mail] [-remove] [-verbose] [-debug]\\n"""		4235731	1					
ANR	4235742	PrimaryExpression	"""Usage: %s [-mail] [-remove] [-verbose] [-debug]\\n"""		4235731	0					
ANR	4235743	Argument	MyName		4235731	2					
ANR	4235744	Identifier	MyName		4235731	0					
ANR	4235745	ExpressionStatement	exit ( 1 )	105:1:3740:3749	4235731	1	True				
ANR	4235746	CallExpression	exit ( 1 )		4235731	0					
ANR	4235747	Callee	exit		4235731	0					
ANR	4235748	Identifier	exit		4235731	0					
ANR	4235749	ArgumentList	1		4235731	1					
ANR	4235750	Argument	1		4235731	0					
ANR	4235751	PrimaryExpression	1		4235731	0					
ANR	4235752	ReturnType	void		4235731	1					
ANR	4235753	Identifier	usage		4235731	2					
ANR	4235754	ParameterList			4235731	3					
ANR	4235755	CFGEntryNode	ENTRY		4235731		True				
ANR	4235756	CFGExitNode	EXIT		4235731		True				
ANR	4235757	Symbol	MyName		4235731						
ANR	4235758	Symbol	stderr		4235731						
ANR	4235759	Function	main	109:0:3755:5562							
ANR	4235760	FunctionDef	"main (int argc , char * argv [ ])"		4235759	0					
ANR	4235761	CompoundStatement		111:0:3790:5562	4235759	0					
ANR	4235762	ExpressionStatement	"install_sig_handler ( SIGPIPE , SIG_IGN )"	115:4:3903:3941	4235759	0	True				
ANR	4235763	CallExpression	"install_sig_handler ( SIGPIPE , SIG_IGN )"		4235759	0					
ANR	4235764	Callee	install_sig_handler		4235759	0					
ANR	4235765	Identifier	install_sig_handler		4235759	0					
ANR	4235766	ArgumentList	SIGPIPE		4235759	1					
ANR	4235767	Argument	SIGPIPE		4235759	0					
ANR	4235768	Identifier	SIGPIPE		4235759	0					
ANR	4235769	Argument	SIG_IGN		4235759	1					
ANR	4235770	Identifier	SIG_IGN		4235759	0					
ANR	4235771	ExpressionStatement	"config ( false , false , false )"	119:1:3987:4012	4235759	1	True				
ANR	4235772	CallExpression	"config ( false , false , false )"		4235759	0					
ANR	4235773	Callee	config		4235759	0					
ANR	4235774	Identifier	config		4235759	0					
ANR	4235775	ArgumentList	false		4235759	1					
ANR	4235776	Argument	false		4235759	0					
ANR	4235777	Identifier	false		4235759	0					
ANR	4235778	Argument	false		4235759	1					
ANR	4235779	Identifier	false		4235759	0					
ANR	4235780	Argument	false		4235759	2					
ANR	4235781	Identifier	false		4235759	0					
ANR	4235782	ExpressionStatement	MyName = argv [ 0 ]	122:1:4040:4056	4235759	2	True				
ANR	4235783	AssignmentExpression	MyName = argv [ 0 ]		4235759	0		=			
ANR	4235784	Identifier	MyName		4235759	0					
ANR	4235785	ArrayIndexing	argv [ 0 ]		4235759	1					
ANR	4235786	Identifier	argv		4235759	0					
ANR	4235787	PrimaryExpression	0		4235759	1					
ANR	4235788	ExpressionStatement	"myDistro -> Init ( argc , argv )"	123:1:4059:4087	4235759	3	True				
ANR	4235789	CallExpression	"myDistro -> Init ( argc , argv )"		4235759	0					
ANR	4235790	Callee	myDistro -> Init		4235759	0					
ANR	4235791	PtrMemberAccess	myDistro -> Init		4235759	0					
ANR	4235792	Identifier	myDistro		4235759	0					
ANR	4235793	Identifier	Init		4235759	1					
ANR	4235794	ArgumentList	argc		4235759	1					
ANR	4235795	Argument	argc		4235759	0					
ANR	4235796	Identifier	argc		4235759	0					
ANR	4235797	Argument	argv		4235759	1					
ANR	4235798	Identifier	argv		4235759	0					
ANR	4235799	ExpressionStatement	config ( )	124:1:4090:4098	4235759	4	True				
ANR	4235800	CallExpression	config ( )		4235759	0					
ANR	4235801	Callee	config		4235759	0					
ANR	4235802	Identifier	config		4235759	0					
ANR	4235803	ArgumentList			4235759	1					
ANR	4235804	ExpressionStatement	init_params ( )	125:1:4101:4114	4235759	5	True				
ANR	4235805	CallExpression	init_params ( )		4235759	0					
ANR	4235806	Callee	init_params		4235759	0					
ANR	4235807	Identifier	init_params		4235759	0					
ANR	4235808	ArgumentList			4235759	1					
ANR	4235809	Statement	BadFiles	126:1:4117:4124	4235759	6	True				
ANR	4235810	Statement	=	126:10:4126:4126	4235759	7	True				
ANR	4235811	Statement	new	126:12:4128:4130	4235759	8	True				
ANR	4235812	ExpressionStatement	StringList	126:16:4132:4142	4235759	9	True				
ANR	4235813	Identifier	StringList		4235759	0					
ANR	4235814	IdentifierDeclStatement	param_functions * p_funcs = NULL ;	127:1:4145:4176	4235759	10	True				
ANR	4235815	IdentifierDecl	* p_funcs = NULL		4235759	0					
ANR	4235816	IdentifierDeclType	param_functions *		4235759	0					
ANR	4235817	Identifier	p_funcs		4235759	1					
ANR	4235818	AssignmentExpression	* p_funcs = NULL		4235759	2		=			
ANR	4235819	Identifier	NULL		4235759	0					
ANR	4235820	Identifier	NULL		4235759	1					
ANR	4235821	ForStatement	for ( argv ++ ; * argv ; argv ++ )		4235759	11					
ANR	4235822	ForInit	argv ++ ;	130:6:4219:4225	4235759	0	True				
ANR	4235823	PostIncDecOperationExpression	argv ++		4235759	0					
ANR	4235824	Identifier	argv		4235759	0					
ANR	4235825	IncDec	++		4235759	1					
ANR	4235826	Condition	* argv	130:14:4227:4231	4235759	1	True				
ANR	4235827	UnaryOperationExpression	* argv		4235759	0					
ANR	4235828	UnaryOperator	*		4235759	0					
ANR	4235829	Identifier	argv		4235759	1					
ANR	4235830	PostIncDecOperationExpression	argv ++	130:21:4234:4239	4235759	2	True				
ANR	4235831	Identifier	argv		4235759	0					
ANR	4235832	IncDec	++		4235759	1					
ANR	4235833	CompoundStatement		20:30:452:452	4235759	3					
ANR	4235834	IfStatement	if ( ( * argv ) [ 0 ] == '-' )		4235759	0					
ANR	4235835	Condition	( * argv ) [ 0 ] == '-'	131:6:4251:4267	4235759	0	True				
ANR	4235836	EqualityExpression	( * argv ) [ 0 ] == '-'		4235759	0		==			
ANR	4235837	ArrayIndexing	( * argv ) [ 0 ]		4235759	0					
ANR	4235838	UnaryOperationExpression	* argv		4235759	0					
ANR	4235839	UnaryOperator	*		4235759	0					
ANR	4235840	Identifier	argv		4235759	1					
ANR	4235841	PrimaryExpression	0		4235759	1					
ANR	4235842	PrimaryExpression	'-'		4235759	1					
ANR	4235843	CompoundStatement		21:26:480:480	4235759	1					
ANR	4235844	SwitchStatement	switch ( ( * argv ) [ 1 ] )		4235759	0					
ANR	4235845	Condition	( * argv ) [ 1 ]	132:11:4284:4293	4235759	0	True				
ANR	4235846	ArrayIndexing	( * argv ) [ 1 ]		4235759	0					
ANR	4235847	UnaryOperationExpression	* argv		4235759	0					
ANR	4235848	UnaryOperator	*		4235759	0					
ANR	4235849	Identifier	argv		4235759	1					
ANR	4235850	PrimaryExpression	1		4235759	1					
ANR	4235851	CompoundStatement		22:24:506:506	4235759	1					
ANR	4235852	Label	case 'd' :	134:5:4308:4316	4235759	0	True				
ANR	4235853	ExpressionStatement	Termlog = 1	135:16:4334:4345	4235759	1	True				
ANR	4235854	AssignmentExpression	Termlog = 1		4235759	0		=			
ANR	4235855	Identifier	Termlog		4235759	0					
ANR	4235856	PrimaryExpression	1		4235759	1					
ANR	4235857	Label	case 'v' :	136:5:4352:4360	4235759	2	True				
ANR	4235858	ExpressionStatement	VerboseFlag = TRUE	137:4:4366:4384	4235759	3	True				
ANR	4235859	AssignmentExpression	VerboseFlag = TRUE		4235759	0		=			
ANR	4235860	Identifier	VerboseFlag		4235759	0					
ANR	4235861	Identifier	TRUE		4235759	1					
ANR	4235862	BreakStatement	break ;	138:4:4390:4395	4235759	4	True				
ANR	4235863	Label	case 'm' :	140:5:4403:4411	4235759	5	True				
ANR	4235864	ExpressionStatement	MailFlag = TRUE	141:4:4417:4432	4235759	6	True				
ANR	4235865	AssignmentExpression	MailFlag = TRUE		4235759	0		=			
ANR	4235866	Identifier	MailFlag		4235759	0					
ANR	4235867	Identifier	TRUE		4235759	1					
ANR	4235868	BreakStatement	break ;	142:4:4438:4443	4235759	7	True				
ANR	4235869	Label	case 'r' :	144:5:4451:4459	4235759	8	True				
ANR	4235870	ExpressionStatement	RmFlag = TRUE	145:4:4465:4478	4235759	9	True				
ANR	4235871	AssignmentExpression	RmFlag = TRUE		4235759	0		=			
ANR	4235872	Identifier	RmFlag		4235759	0					
ANR	4235873	Identifier	TRUE		4235759	1					
ANR	4235874	BreakStatement	break ;	146:4:4484:4489	4235759	10	True				
ANR	4235875	Label	default :	148:5:4497:4504	4235759	11	True				
ANR	4235876	Identifier	default		4235759	0					
ANR	4235877	ExpressionStatement	usage ( )	149:4:4510:4517	4235759	12	True				
ANR	4235878	CallExpression	usage ( )		4235759	0					
ANR	4235879	Callee	usage		4235759	0					
ANR	4235880	Identifier	usage		4235759	0					
ANR	4235881	ArgumentList			4235759	1					
ANR	4235882	ElseStatement	else		4235759	0					
ANR	4235883	CompoundStatement		42:9:743:743	4235759	0					
ANR	4235884	ExpressionStatement	usage ( )	153:3:4539:4546	4235759	0	True				
ANR	4235885	CallExpression	usage ( )		4235759	0					
ANR	4235886	Callee	usage		4235759	0					
ANR	4235887	Identifier	usage		4235759	0					
ANR	4235888	ArgumentList			4235759	1					
ANR	4235889	ExpressionStatement	p_funcs = get_param_functions ( )	157:1:4558:4589	4235759	12	True				
ANR	4235890	AssignmentExpression	p_funcs = get_param_functions ( )		4235759	0		=			
ANR	4235891	Identifier	p_funcs		4235759	0					
ANR	4235892	CallExpression	get_param_functions ( )		4235759	1					
ANR	4235893	Callee	get_param_functions		4235759	0					
ANR	4235894	Identifier	get_param_functions		4235759	0					
ANR	4235895	ArgumentList			4235759	1					
ANR	4235896	ExpressionStatement	"dprintf_config ( ""TOOL"" , p_funcs )"	158:1:4592:4623	4235759	13	True				
ANR	4235897	CallExpression	"dprintf_config ( ""TOOL"" , p_funcs )"		4235759	0					
ANR	4235898	Callee	dprintf_config		4235759	0					
ANR	4235899	Identifier	dprintf_config		4235759	0					
ANR	4235900	ArgumentList	"""TOOL"""		4235759	1					
ANR	4235901	Argument	"""TOOL"""		4235759	0					
ANR	4235902	PrimaryExpression	"""TOOL"""		4235759	0					
ANR	4235903	Argument	p_funcs		4235759	1					
ANR	4235904	Identifier	p_funcs		4235759	0					
ANR	4235905	IfStatement	if ( VerboseFlag )		4235759	14					
ANR	4235906	Condition	VerboseFlag	159:5:4630:4640	4235759	0	True				
ANR	4235907	Identifier	VerboseFlag		4235759	0					
ANR	4235908	CompoundStatement		54:2:993:1026	4235759	1					
ANR	4235909	IdentifierDeclStatement	"std :: string szVerbose = ""D_FULLDEBUG"" ;"	163:2:4745:4780	4235759	0	True				
ANR	4235910	IdentifierDecl	"szVerbose = ""D_FULLDEBUG"""		4235759	0					
ANR	4235911	IdentifierDeclType	std :: string		4235759	0					
ANR	4235912	Identifier	szVerbose		4235759	1					
ANR	4235913	AssignmentExpression	"szVerbose = ""D_FULLDEBUG"""		4235759	2		=			
ANR	4235914	Identifier	szVerbose		4235759	0					
ANR	4235915	PrimaryExpression	"""D_FULLDEBUG"""		4235759	1					
ANR	4235916	IdentifierDeclStatement	"char * pval = param ( ""TOOL_DEBUG"" ) ;"	164:2:4784:4817	4235759	1	True				
ANR	4235917	IdentifierDecl	"* pval = param ( ""TOOL_DEBUG"" )"		4235759	0					
ANR	4235918	IdentifierDeclType	char *		4235759	0					
ANR	4235919	Identifier	pval		4235759	1					
ANR	4235920	AssignmentExpression	"* pval = param ( ""TOOL_DEBUG"" )"		4235759	2		=			
ANR	4235921	Identifier	pval		4235759	0					
ANR	4235922	CallExpression	"param ( ""TOOL_DEBUG"" )"		4235759	1					
ANR	4235923	Callee	param		4235759	0					
ANR	4235924	Identifier	param		4235759	0					
ANR	4235925	ArgumentList	"""TOOL_DEBUG"""		4235759	1					
ANR	4235926	Argument	"""TOOL_DEBUG"""		4235759	0					
ANR	4235927	PrimaryExpression	"""TOOL_DEBUG"""		4235759	0					
ANR	4235928	IfStatement	if ( pval )		4235759	2					
ANR	4235929	Condition	pval	165:6:4825:4828	4235759	0	True				
ANR	4235930	Identifier	pval		4235759	0					
ANR	4235931	CompoundStatement		55:13:1041:1041	4235759	1					
ANR	4235932	ExpressionStatement	"szVerbose += ""|"""	166:3:4837:4851	4235759	0	True				
ANR	4235933	AssignmentExpression	"szVerbose += ""|"""		4235759	0		+=			
ANR	4235934	Identifier	szVerbose		4235759	0					
ANR	4235935	PrimaryExpression	"""|"""		4235759	1					
ANR	4235936	ExpressionStatement	szVerbose += pval	167:3:4856:4871	4235759	1	True				
ANR	4235937	AssignmentExpression	szVerbose += pval		4235759	0		+=			
ANR	4235938	Identifier	szVerbose		4235759	0					
ANR	4235939	Identifier	pval		4235759	1					
ANR	4235940	ExpressionStatement	free ( pval )	168:3:4876:4888	4235759	2	True				
ANR	4235941	CallExpression	free ( pval )		4235759	0					
ANR	4235942	Callee	free		4235759	0					
ANR	4235943	Identifier	free		4235759	0					
ANR	4235944	ArgumentList	pval		4235759	1					
ANR	4235945	Argument	pval		4235759	0					
ANR	4235946	Identifier	pval		4235759	0					
ANR	4235947	ExpressionStatement	_condor_set_debug_flags ( szVerbose . c_str ( ) )	170:2:4896:4940	4235759	3	True				
ANR	4235948	CallExpression	_condor_set_debug_flags ( szVerbose . c_str ( ) )		4235759	0					
ANR	4235949	Callee	_condor_set_debug_flags		4235759	0					
ANR	4235950	Identifier	_condor_set_debug_flags		4235759	0					
ANR	4235951	ArgumentList	szVerbose . c_str ( )		4235759	1					
ANR	4235952	Argument	szVerbose . c_str ( )		4235759	0					
ANR	4235953	CallExpression	szVerbose . c_str ( )		4235759	0					
ANR	4235954	Callee	szVerbose . c_str		4235759	0					
ANR	4235955	MemberAccess	szVerbose . c_str		4235759	0					
ANR	4235956	Identifier	szVerbose		4235759	0					
ANR	4235957	Identifier	c_str		4235759	1					
ANR	4235958	ArgumentList			4235759	1					
ANR	4235959	ExpressionStatement	"dprintf ( D_ALWAYS , ""********************************\\n"" )"	173:1:4949:5005	4235759	15	True				
ANR	4235960	CallExpression	"dprintf ( D_ALWAYS , ""********************************\\n"" )"		4235759	0					
ANR	4235961	Callee	dprintf		4235759	0					
ANR	4235962	Identifier	dprintf		4235759	0					
ANR	4235963	ArgumentList	D_ALWAYS		4235759	1					
ANR	4235964	Argument	D_ALWAYS		4235759	0					
ANR	4235965	Identifier	D_ALWAYS		4235759	0					
ANR	4235966	Argument	"""********************************\\n"""		4235759	1					
ANR	4235967	PrimaryExpression	"""********************************\\n"""		4235759	0					
ANR	4235968	ExpressionStatement	"dprintf ( D_ALWAYS , ""STARTING: condor_preen\\n"" )"	174:1:5008:5054	4235759	16	True				
ANR	4235969	CallExpression	"dprintf ( D_ALWAYS , ""STARTING: condor_preen\\n"" )"		4235759	0					
ANR	4235970	Callee	dprintf		4235759	0					
ANR	4235971	Identifier	dprintf		4235759	0					
ANR	4235972	ArgumentList	D_ALWAYS		4235759	1					
ANR	4235973	Argument	D_ALWAYS		4235759	0					
ANR	4235974	Identifier	D_ALWAYS		4235759	0					
ANR	4235975	Argument	"""STARTING: condor_preen\\n"""		4235759	1					
ANR	4235976	PrimaryExpression	"""STARTING: condor_preen\\n"""		4235759	0					
ANR	4235977	ExpressionStatement	"dprintf ( D_ALWAYS , ""********************************\\n"" )"	175:1:5057:5113	4235759	17	True				
ANR	4235978	CallExpression	"dprintf ( D_ALWAYS , ""********************************\\n"" )"		4235759	0					
ANR	4235979	Callee	dprintf		4235759	0					
ANR	4235980	Identifier	dprintf		4235759	0					
ANR	4235981	ArgumentList	D_ALWAYS		4235759	1					
ANR	4235982	Argument	D_ALWAYS		4235759	0					
ANR	4235983	Identifier	D_ALWAYS		4235759	0					
ANR	4235984	Argument	"""********************************\\n"""		4235759	1					
ANR	4235985	PrimaryExpression	"""********************************\\n"""		4235759	0					
ANR	4235986	ExpressionStatement	check_spool_dir ( )	178:1:5144:5161	4235759	18	True				
ANR	4235987	CallExpression	check_spool_dir ( )		4235759	0					
ANR	4235988	Callee	check_spool_dir		4235759	0					
ANR	4235989	Identifier	check_spool_dir		4235759	0					
ANR	4235990	ArgumentList			4235759	1					
ANR	4235991	ExpressionStatement	check_execute_dir ( )	179:1:5164:5183	4235759	19	True				
ANR	4235992	CallExpression	check_execute_dir ( )		4235759	0					
ANR	4235993	Callee	check_execute_dir		4235759	0					
ANR	4235994	Identifier	check_execute_dir		4235759	0					
ANR	4235995	ArgumentList			4235759	1					
ANR	4235996	ExpressionStatement	check_log_dir ( )	180:1:5186:5201	4235759	20	True				
ANR	4235997	CallExpression	check_log_dir ( )		4235759	0					
ANR	4235998	Callee	check_log_dir		4235759	0					
ANR	4235999	Identifier	check_log_dir		4235759	0					
ANR	4236000	ArgumentList			4235759	1					
ANR	4236001	ExpressionStatement	check_daemon_sock_dir ( )	181:1:5204:5227	4235759	21	True				
ANR	4236002	CallExpression	check_daemon_sock_dir ( )		4235759	0					
ANR	4236003	Callee	check_daemon_sock_dir		4235759	0					
ANR	4236004	Identifier	check_daemon_sock_dir		4235759	0					
ANR	4236005	ArgumentList			4235759	1					
ANR	4236006	ExpressionStatement	check_tmp_dir ( )	182:1:5230:5245	4235759	22	True				
ANR	4236007	CallExpression	check_tmp_dir ( )		4235759	0					
ANR	4236008	Callee	check_tmp_dir		4235759	0					
ANR	4236009	Identifier	check_tmp_dir		4235759	0					
ANR	4236010	ArgumentList			4235759	1					
ANR	4236011	IfStatement	if ( ! BadFiles -> isEmpty ( ) )		4235759	23					
ANR	4236012	Condition	! BadFiles -> isEmpty ( )	185:5:5302:5321	4235759	0	True				
ANR	4236013	UnaryOperationExpression	! BadFiles -> isEmpty ( )		4235759	0					
ANR	4236014	UnaryOperator	!		4235759	0					
ANR	4236015	CallExpression	BadFiles -> isEmpty ( )		4235759	1					
ANR	4236016	Callee	BadFiles -> isEmpty		4235759	0					
ANR	4236017	PtrMemberAccess	BadFiles -> isEmpty		4235759	0					
ANR	4236018	Identifier	BadFiles		4235759	0					
ANR	4236019	Identifier	isEmpty		4235759	1					
ANR	4236020	ArgumentList			4235759	1					
ANR	4236021	CompoundStatement		75:28:1534:1534	4235759	1					
ANR	4236022	ExpressionStatement	produce_output ( )	186:2:5329:5345	4235759	0	True				
ANR	4236023	CallExpression	produce_output ( )		4235759	0					
ANR	4236024	Callee	produce_output		4235759	0					
ANR	4236025	Identifier	produce_output		4235759	0					
ANR	4236026	ArgumentList			4235759	1					
ANR	4236027	Statement	delete	190:1:5366:5371	4235759	24	True				
ANR	4236028	ExpressionStatement	BadFiles	190:8:5373:5381	4235759	25	True				
ANR	4236029	Identifier	BadFiles		4235759	0					
ANR	4236030	ExpressionStatement	"dprintf ( D_ALWAYS , ""********************************\\n"" )"	192:1:5385:5441	4235759	26	True				
ANR	4236031	CallExpression	"dprintf ( D_ALWAYS , ""********************************\\n"" )"		4235759	0					
ANR	4236032	Callee	dprintf		4235759	0					
ANR	4236033	Identifier	dprintf		4235759	0					
ANR	4236034	ArgumentList	D_ALWAYS		4235759	1					
ANR	4236035	Argument	D_ALWAYS		4235759	0					
ANR	4236036	Identifier	D_ALWAYS		4235759	0					
ANR	4236037	Argument	"""********************************\\n"""		4235759	1					
ANR	4236038	PrimaryExpression	"""********************************\\n"""		4235759	0					
ANR	4236039	ExpressionStatement	"dprintf ( D_ALWAYS , ""ENDING: condor_preen\\n"" )"	193:1:5444:5488	4235759	27	True				
ANR	4236040	CallExpression	"dprintf ( D_ALWAYS , ""ENDING: condor_preen\\n"" )"		4235759	0					
ANR	4236041	Callee	dprintf		4235759	0					
ANR	4236042	Identifier	dprintf		4235759	0					
ANR	4236043	ArgumentList	D_ALWAYS		4235759	1					
ANR	4236044	Argument	D_ALWAYS		4235759	0					
ANR	4236045	Identifier	D_ALWAYS		4235759	0					
ANR	4236046	Argument	"""ENDING: condor_preen\\n"""		4235759	1					
ANR	4236047	PrimaryExpression	"""ENDING: condor_preen\\n"""		4235759	0					
ANR	4236048	ExpressionStatement	"dprintf ( D_ALWAYS , ""********************************\\n"" )"	194:1:5491:5547	4235759	28	True				
ANR	4236049	CallExpression	"dprintf ( D_ALWAYS , ""********************************\\n"" )"		4235759	0					
ANR	4236050	Callee	dprintf		4235759	0					
ANR	4236051	Identifier	dprintf		4235759	0					
ANR	4236052	ArgumentList	D_ALWAYS		4235759	1					
ANR	4236053	Argument	D_ALWAYS		4235759	0					
ANR	4236054	Identifier	D_ALWAYS		4235759	0					
ANR	4236055	Argument	"""********************************\\n"""		4235759	1					
ANR	4236056	PrimaryExpression	"""********************************\\n"""		4235759	0					
ANR	4236057	ReturnStatement	return 0 ;	196:1:5552:5560	4235759	29	True				
ANR	4236058	PrimaryExpression	0		4235759	0					
ANR	4236059	ReturnType	int		4235759	1					
ANR	4236060	Identifier	main		4235759	2					
ANR	4236061	ParameterList	"int argc , char * argv [ ]"		4235759	3					
ANR	4236062	Parameter	int argc	110:6:3765:3772	4235759	0	True				
ANR	4236063	ParameterType	int		4235759	0					
ANR	4236064	Identifier	argc		4235759	1					
ANR	4236065	Parameter	char * argv [ ]	110:16:3775:3786	4235759	1	True				
ANR	4236066	ParameterType	char * [ ]		4235759	0					
ANR	4236067	Identifier	argv		4235759	1					
ANR	4236068	CFGEntryNode	ENTRY		4235759		True				
ANR	4236069	CFGExitNode	EXIT		4235759		True				
ANR	4236070	Symbol	BadFiles -> isEmpty		4235759						
ANR	4236071	Symbol	MyName		4235759						
ANR	4236072	Symbol	pval		4235759						
ANR	4236073	Symbol	* argv		4235759						
ANR	4236074	Symbol	p_funcs		4235759						
ANR	4236075	Symbol	argv		4235759						
ANR	4236076	Symbol	VerboseFlag		4235759						
ANR	4236077	Symbol	MailFlag		4235759						
ANR	4236078	Symbol	param		4235759						
ANR	4236079	Symbol	myDistro		4235759						
ANR	4236080	Symbol	szVerbose . c_str		4235759						
ANR	4236081	Symbol	* * argv		4235759						
ANR	4236082	Symbol	SIGPIPE		4235759						
ANR	4236083	Symbol	* BadFiles		4235759						
ANR	4236084	Symbol	argc		4235759						
ANR	4236085	Symbol	NULL		4235759						
ANR	4236086	Symbol	Termlog		4235759						
ANR	4236087	Symbol	get_param_functions		4235759						
ANR	4236088	Symbol	false		4235759						
ANR	4236089	Symbol	szVerbose		4235759						
ANR	4236090	Symbol	D_ALWAYS		4235759						
ANR	4236091	Symbol	BadFiles		4235759						
ANR	4236092	Symbol	SIG_IGN		4235759						
ANR	4236093	Symbol	TRUE		4235759						
ANR	4236094	Symbol	RmFlag		4235759						
ANR	4236095	Function	produce_output	205:0:5836:7584							
ANR	4236096	FunctionDef	produce_output ()		4236095	0					
ANR	4236097	CompoundStatement		207:0:5858:7584	4236095	0					
ANR	4236098	IdentifierDeclStatement	char * str ;	208:1:5861:5870	4236095	0	True				
ANR	4236099	IdentifierDecl	* str		4236095	0					
ANR	4236100	IdentifierDeclType	char *		4236095	0					
ANR	4236101	Identifier	str		4236095	1					
ANR	4236102	IdentifierDeclStatement	FILE * mailer ;	209:1:5873:5885	4236095	1	True				
ANR	4236103	IdentifierDecl	* mailer		4236095	0					
ANR	4236104	IdentifierDeclType	FILE *		4236095	0					
ANR	4236105	Identifier	mailer		4236095	1					
ANR	4236106	IdentifierDeclStatement	"MyString subject , szTmp ;"	210:1:5888:5910	4236095	2	True				
ANR	4236107	IdentifierDecl	subject		4236095	0					
ANR	4236108	IdentifierDeclType	MyString		4236095	0					
ANR	4236109	Identifier	subject		4236095	1					
ANR	4236110	IdentifierDecl	szTmp		4236095	1					
ANR	4236111	IdentifierDeclType	MyString		4236095	0					
ANR	4236112	Identifier	szTmp		4236095	1					
ANR	4236113	ExpressionStatement	"subject . sprintf ( ""condor_preen results %s: %d old file%s found"" , my_full_hostname ( ) , BadFiles -> number ( ) , ( BadFiles -> number ( ) > 1 ) ? ""s"" : """" )"	211:1:5913:6055	4236095	3	True				
ANR	4236114	CallExpression	"subject . sprintf ( ""condor_preen results %s: %d old file%s found"" , my_full_hostname ( ) , BadFiles -> number ( ) , ( BadFiles -> number ( ) > 1 ) ? ""s"" : """" )"		4236095	0					
ANR	4236115	Callee	subject . sprintf		4236095	0					
ANR	4236116	MemberAccess	subject . sprintf		4236095	0					
ANR	4236117	Identifier	subject		4236095	0					
ANR	4236118	Identifier	sprintf		4236095	1					
ANR	4236119	ArgumentList	"""condor_preen results %s: %d old file%s found"""		4236095	1					
ANR	4236120	Argument	"""condor_preen results %s: %d old file%s found"""		4236095	0					
ANR	4236121	PrimaryExpression	"""condor_preen results %s: %d old file%s found"""		4236095	0					
ANR	4236122	Argument	my_full_hostname ( )		4236095	1					
ANR	4236123	CallExpression	my_full_hostname ( )		4236095	0					
ANR	4236124	Callee	my_full_hostname		4236095	0					
ANR	4236125	Identifier	my_full_hostname		4236095	0					
ANR	4236126	ArgumentList			4236095	1					
ANR	4236127	Argument	BadFiles -> number ( )		4236095	2					
ANR	4236128	CallExpression	BadFiles -> number ( )		4236095	0					
ANR	4236129	Callee	BadFiles -> number		4236095	0					
ANR	4236130	PtrMemberAccess	BadFiles -> number		4236095	0					
ANR	4236131	Identifier	BadFiles		4236095	0					
ANR	4236132	Identifier	number		4236095	1					
ANR	4236133	ArgumentList			4236095	1					
ANR	4236134	Argument	"( BadFiles -> number ( ) > 1 ) ? ""s"" : """""		4236095	3					
ANR	4236135	ConditionalExpression	"( BadFiles -> number ( ) > 1 ) ? ""s"" : """""		4236095	0					
ANR	4236136	Condition	BadFiles -> number ( ) > 1		4236095	0					
ANR	4236137	RelationalExpression	BadFiles -> number ( ) > 1		4236095	0		>			
ANR	4236138	CallExpression	BadFiles -> number ( )		4236095	0					
ANR	4236139	Callee	BadFiles -> number		4236095	0					
ANR	4236140	PtrMemberAccess	BadFiles -> number		4236095	0					
ANR	4236141	Identifier	BadFiles		4236095	0					
ANR	4236142	Identifier	number		4236095	1					
ANR	4236143	ArgumentList			4236095	1					
ANR	4236144	PrimaryExpression	1		4236095	1					
ANR	4236145	PrimaryExpression	"""s"""		4236095	1					
ANR	4236146	PrimaryExpression	""""""		4236095	2					
ANR	4236147	IfStatement	if ( MailFlag )		4236095	4					
ANR	4236148	Condition	MailFlag	215:5:6063:6070	4236095	0	True				
ANR	4236149	Identifier	MailFlag		4236095	0					
ANR	4236150	CompoundStatement		9:16:215:215	4236095	1					
ANR	4236151	IfStatement	"if ( ( mailer = email_open ( PreenAdmin , subject . Value ( ) ) ) == NULL )"		4236095	0					
ANR	4236152	Condition	"( mailer = email_open ( PreenAdmin , subject . Value ( ) ) ) == NULL"	216:6:6082:6137	4236095	0	True				
ANR	4236153	EqualityExpression	"( mailer = email_open ( PreenAdmin , subject . Value ( ) ) ) == NULL"		4236095	0		==			
ANR	4236154	AssignmentExpression	"mailer = email_open ( PreenAdmin , subject . Value ( ) )"		4236095	0		=			
ANR	4236155	Identifier	mailer		4236095	0					
ANR	4236156	CallExpression	"email_open ( PreenAdmin , subject . Value ( ) )"		4236095	1					
ANR	4236157	Callee	email_open		4236095	0					
ANR	4236158	Identifier	email_open		4236095	0					
ANR	4236159	ArgumentList	PreenAdmin		4236095	1					
ANR	4236160	Argument	PreenAdmin		4236095	0					
ANR	4236161	Identifier	PreenAdmin		4236095	0					
ANR	4236162	Argument	subject . Value ( )		4236095	1					
ANR	4236163	CallExpression	subject . Value ( )		4236095	0					
ANR	4236164	Callee	subject . Value		4236095	0					
ANR	4236165	MemberAccess	subject . Value		4236095	0					
ANR	4236166	Identifier	subject		4236095	0					
ANR	4236167	Identifier	Value		4236095	1					
ANR	4236168	ArgumentList			4236095	1					
ANR	4236169	Identifier	NULL		4236095	1					
ANR	4236170	CompoundStatement		10:65:282:282	4236095	1					
ANR	4236171	ExpressionStatement	"EXCEPT ( ""Can't do email_open(\\""%s\\"", \\""%s\\"")\\n"" , PreenAdmin , subject . Value ( ) )"	217:3:6146:6221	4236095	0	True				
ANR	4236172	CallExpression	"EXCEPT ( ""Can't do email_open(\\""%s\\"", \\""%s\\"")\\n"" , PreenAdmin , subject . Value ( ) )"		4236095	0					
ANR	4236173	Callee	EXCEPT		4236095	0					
ANR	4236174	Identifier	EXCEPT		4236095	0					
ANR	4236175	ArgumentList	"""Can't do email_open(\\""%s\\"", \\""%s\\"")\\n"""		4236095	1					
ANR	4236176	Argument	"""Can't do email_open(\\""%s\\"", \\""%s\\"")\\n"""		4236095	0					
ANR	4236177	PrimaryExpression	"""Can't do email_open(\\""%s\\"", \\""%s\\"")\\n"""		4236095	0					
ANR	4236178	Argument	PreenAdmin		4236095	1					
ANR	4236179	Identifier	PreenAdmin		4236095	0					
ANR	4236180	Argument	subject . Value ( )		4236095	2					
ANR	4236181	CallExpression	subject . Value ( )		4236095	0					
ANR	4236182	Callee	subject . Value		4236095	0					
ANR	4236183	MemberAccess	subject . Value		4236095	0					
ANR	4236184	Identifier	subject		4236095	0					
ANR	4236185	Identifier	Value		4236095	1					
ANR	4236186	ArgumentList			4236095	1					
ANR	4236187	ElseStatement	else		4236095	0					
ANR	4236188	CompoundStatement		13:8:376:376	4236095	0					
ANR	4236189	ExpressionStatement	mailer = stdout	220:2:6239:6254	4236095	0	True				
ANR	4236190	AssignmentExpression	mailer = stdout		4236095	0		=			
ANR	4236191	Identifier	mailer		4236095	0					
ANR	4236192	Identifier	stdout		4236095	1					
ANR	4236193	ExpressionStatement	"szTmp . sprintf ( ""The condor_preen process has found the following stale condor files on <%s>:\\n\\n"" , get_local_hostname ( ) . Value ( ) )"	223:1:6261:6389	4236095	5	True				
ANR	4236194	CallExpression	"szTmp . sprintf ( ""The condor_preen process has found the following stale condor files on <%s>:\\n\\n"" , get_local_hostname ( ) . Value ( ) )"		4236095	0					
ANR	4236195	Callee	szTmp . sprintf		4236095	0					
ANR	4236196	MemberAccess	szTmp . sprintf		4236095	0					
ANR	4236197	Identifier	szTmp		4236095	0					
ANR	4236198	Identifier	sprintf		4236095	1					
ANR	4236199	ArgumentList	"""The condor_preen process has found the following stale condor files on <%s>:\\n\\n"""		4236095	1					
ANR	4236200	Argument	"""The condor_preen process has found the following stale condor files on <%s>:\\n\\n"""		4236095	0					
ANR	4236201	PrimaryExpression	"""The condor_preen process has found the following stale condor files on <%s>:\\n\\n"""		4236095	0					
ANR	4236202	Argument	get_local_hostname ( ) . Value ( )		4236095	1					
ANR	4236203	CallExpression	get_local_hostname ( ) . Value ( )		4236095	0					
ANR	4236204	Callee	get_local_hostname ( ) . Value		4236095	0					
ANR	4236205	MemberAccess	get_local_hostname ( ) . Value		4236095	0					
ANR	4236206	CallExpression	get_local_hostname ( )		4236095	0					
ANR	4236207	Callee	get_local_hostname		4236095	0					
ANR	4236208	Identifier	get_local_hostname		4236095	0					
ANR	4236209	ArgumentList			4236095	1					
ANR	4236210	Identifier	Value		4236095	1					
ANR	4236211	ArgumentList			4236095	1					
ANR	4236212	ExpressionStatement	"dprintf ( D_ALWAYS , szTmp . Value ( ) )"	224:1:6392:6424	4236095	6	True				
ANR	4236213	CallExpression	"dprintf ( D_ALWAYS , szTmp . Value ( ) )"		4236095	0					
ANR	4236214	Callee	dprintf		4236095	0					
ANR	4236215	Identifier	dprintf		4236095	0					
ANR	4236216	ArgumentList	D_ALWAYS		4236095	1					
ANR	4236217	Argument	D_ALWAYS		4236095	0					
ANR	4236218	Identifier	D_ALWAYS		4236095	0					
ANR	4236219	Argument	szTmp . Value ( )		4236095	1					
ANR	4236220	CallExpression	szTmp . Value ( )		4236095	0					
ANR	4236221	Callee	szTmp . Value		4236095	0					
ANR	4236222	MemberAccess	szTmp . Value		4236095	0					
ANR	4236223	Identifier	szTmp		4236095	0					
ANR	4236224	Identifier	Value		4236095	1					
ANR	4236225	ArgumentList			4236095	1					
ANR	4236226	IfStatement	if ( MailFlag )		4236095	7					
ANR	4236227	Condition	MailFlag	226:5:6435:6442	4236095	0	True				
ANR	4236228	Identifier	MailFlag		4236095	0					
ANR	4236229	CompoundStatement		20:16:587:587	4236095	1					
ANR	4236230	ExpressionStatement	"fprintf ( mailer , ""\\n"" )"	227:2:6450:6473	4236095	0	True				
ANR	4236231	CallExpression	"fprintf ( mailer , ""\\n"" )"		4236095	0					
ANR	4236232	Callee	fprintf		4236095	0					
ANR	4236233	Identifier	fprintf		4236095	0					
ANR	4236234	ArgumentList	mailer		4236095	1					
ANR	4236235	Argument	mailer		4236095	0					
ANR	4236236	Identifier	mailer		4236095	0					
ANR	4236237	Argument	"""\\n"""		4236095	1					
ANR	4236238	PrimaryExpression	"""\\n"""		4236095	0					
ANR	4236239	ExpressionStatement	"fprintf ( mailer , szTmp . Value ( ) )"	228:2:6477:6508	4236095	1	True				
ANR	4236240	CallExpression	"fprintf ( mailer , szTmp . Value ( ) )"		4236095	0					
ANR	4236241	Callee	fprintf		4236095	0					
ANR	4236242	Identifier	fprintf		4236095	0					
ANR	4236243	ArgumentList	mailer		4236095	1					
ANR	4236244	Argument	mailer		4236095	0					
ANR	4236245	Identifier	mailer		4236095	0					
ANR	4236246	Argument	szTmp . Value ( )		4236095	1					
ANR	4236247	CallExpression	szTmp . Value ( )		4236095	0					
ANR	4236248	Callee	szTmp . Value		4236095	0					
ANR	4236249	MemberAccess	szTmp . Value		4236095	0					
ANR	4236250	Identifier	szTmp		4236095	0					
ANR	4236251	Identifier	Value		4236095	1					
ANR	4236252	ArgumentList			4236095	1					
ANR	4236253	ForStatement	for ( BadFiles -> rewind ( ) ; ( str = BadFiles -> next ( ) ) ; )		4236095	8					
ANR	4236254	ForInit	BadFiles -> rewind ( ) ;	231:6:6520:6538	4236095	0	True				
ANR	4236255	CallExpression	BadFiles -> rewind ( )		4236095	0					
ANR	4236256	Callee	BadFiles -> rewind		4236095	0					
ANR	4236257	PtrMemberAccess	BadFiles -> rewind		4236095	0					
ANR	4236258	Identifier	BadFiles		4236095	0					
ANR	4236259	Identifier	rewind		4236095	1					
ANR	4236260	ArgumentList			4236095	1					
ANR	4236261	Condition	str = BadFiles -> next ( )	231:26:6540:6563	4236095	1	True				
ANR	4236262	AssignmentExpression	str = BadFiles -> next ( )		4236095	0		=			
ANR	4236263	Identifier	str		4236095	0					
ANR	4236264	CallExpression	BadFiles -> next ( )		4236095	1					
ANR	4236265	Callee	BadFiles -> next		4236095	0					
ANR	4236266	PtrMemberAccess	BadFiles -> next		4236095	0					
ANR	4236267	Identifier	BadFiles		4236095	0					
ANR	4236268	Identifier	next		4236095	1					
ANR	4236269	ArgumentList			4236095	1					
ANR	4236270	CompoundStatement		25:54:709:709	4236095	2					
ANR	4236271	ExpressionStatement	"szTmp . sprintf ( ""  %s\\n"" , str )"	232:2:6572:6600	4236095	0	True				
ANR	4236272	CallExpression	"szTmp . sprintf ( ""  %s\\n"" , str )"		4236095	0					
ANR	4236273	Callee	szTmp . sprintf		4236095	0					
ANR	4236274	MemberAccess	szTmp . sprintf		4236095	0					
ANR	4236275	Identifier	szTmp		4236095	0					
ANR	4236276	Identifier	sprintf		4236095	1					
ANR	4236277	ArgumentList	"""  %s\\n"""		4236095	1					
ANR	4236278	Argument	"""  %s\\n"""		4236095	0					
ANR	4236279	PrimaryExpression	"""  %s\\n"""		4236095	0					
ANR	4236280	Argument	str		4236095	1					
ANR	4236281	Identifier	str		4236095	0					
ANR	4236282	ExpressionStatement	"dprintf ( D_ALWAYS , szTmp . Value ( ) )"	233:2:6604:6637	4236095	1	True				
ANR	4236283	CallExpression	"dprintf ( D_ALWAYS , szTmp . Value ( ) )"		4236095	0					
ANR	4236284	Callee	dprintf		4236095	0					
ANR	4236285	Identifier	dprintf		4236095	0					
ANR	4236286	ArgumentList	D_ALWAYS		4236095	1					
ANR	4236287	Argument	D_ALWAYS		4236095	0					
ANR	4236288	Identifier	D_ALWAYS		4236095	0					
ANR	4236289	Argument	szTmp . Value ( )		4236095	1					
ANR	4236290	CallExpression	szTmp . Value ( )		4236095	0					
ANR	4236291	Callee	szTmp . Value		4236095	0					
ANR	4236292	MemberAccess	szTmp . Value		4236095	0					
ANR	4236293	Identifier	szTmp		4236095	0					
ANR	4236294	Identifier	Value		4236095	1					
ANR	4236295	ArgumentList			4236095	1					
ANR	4236296	ExpressionStatement	"fprintf ( mailer , szTmp . Value ( ) )"	234:2:6641:6673	4236095	2	True				
ANR	4236297	CallExpression	"fprintf ( mailer , szTmp . Value ( ) )"		4236095	0					
ANR	4236298	Callee	fprintf		4236095	0					
ANR	4236299	Identifier	fprintf		4236095	0					
ANR	4236300	ArgumentList	mailer		4236095	1					
ANR	4236301	Argument	mailer		4236095	0					
ANR	4236302	Identifier	mailer		4236095	0					
ANR	4236303	Argument	szTmp . Value ( )		4236095	1					
ANR	4236304	CallExpression	szTmp . Value ( )		4236095	0					
ANR	4236305	Callee	szTmp . Value		4236095	0					
ANR	4236306	MemberAccess	szTmp . Value		4236095	0					
ANR	4236307	Identifier	szTmp		4236095	0					
ANR	4236308	Identifier	Value		4236095	1					
ANR	4236309	ArgumentList			4236095	1					
ANR	4236310	IfStatement	if ( MailFlag )		4236095	9					
ANR	4236311	Condition	MailFlag	237:5:6684:6691	4236095	0	True				
ANR	4236312	Identifier	MailFlag		4236095	0					
ANR	4236313	CompoundStatement		31:16:836:836	4236095	1					
ANR	4236314	Statement	const	238:2:6699:6703	4236095	0	True				
ANR	4236315	Statement	char	238:8:6705:6708	4236095	1	True				
ANR	4236316	Statement	*	238:13:6710:6710	4236095	2	True				
ANR	4236317	Statement	explanation	238:14:6711:6721	4236095	3	True				
ANR	4236318	Statement	=	238:26:6723:6723	4236095	4	True				
ANR	4236319	Statement	"""\\n\\nWhat is condor_preen?\\n\\n"""	238:28:6725:6755	4236095	5	True				
ANR	4236320	Statement	"""The condor_preen tool examines the directories belonging to Condor, and\\n"""	239:0:6757:6831	4236095	6	True				
ANR	4236321	Statement	"""removes extraneous files and directories which may be left over from Condor\\n"""	240:0:6833:6911	4236095	7	True				
ANR	4236322	Statement	"""processes which terminated abnormally either due to internal errors or a\\n"""	241:0:6913:6988	4236095	8	True				
ANR	4236323	Statement	"""system crash.  The directories checked are the LOG, EXECUTE, and SPOOL\\n"""	242:0:6990:7063	4236095	9	True				
ANR	4236324	Statement	"""directories as defined in the Condor configuration files.  The condor_preen\\n"""	243:0:7065:7143	4236095	10	True				
ANR	4236325	Statement	"""tool is intended to be run as user root (or user condor) periodically as a\\n"""	244:0:7145:7222	4236095	11	True				
ANR	4236326	Statement	"""backup method to ensure reasonable file system cleanliness in the face of\\n"""	245:0:7224:7300	4236095	12	True				
ANR	4236327	Statement	"""errors. This is done automatically by default by the condor_master daemon.\\n"""	246:0:7302:7379	4236095	13	True				
ANR	4236328	Statement	"""It may also be explicitly invoked on an as needed basis.\\n\\n"""	247:0:7381:7442	4236095	14	True				
ANR	4236329	ExpressionStatement	"""See the Condor manual section on condor_preen for more details.\\n"""	248:0:7444:7511	4236095	15	True				
ANR	4236330	PrimaryExpression	"""See the Condor manual section on condor_preen for more details.\\n"""		4236095	0					
ANR	4236331	ExpressionStatement	"fprintf ( mailer , ""%s\\n"" , explanation )"	250:2:7516:7554	4236095	16	True				
ANR	4236332	CallExpression	"fprintf ( mailer , ""%s\\n"" , explanation )"		4236095	0					
ANR	4236333	Callee	fprintf		4236095	0					
ANR	4236334	Identifier	fprintf		4236095	0					
ANR	4236335	ArgumentList	mailer		4236095	1					
ANR	4236336	Argument	mailer		4236095	0					
ANR	4236337	Identifier	mailer		4236095	0					
ANR	4236338	Argument	"""%s\\n"""		4236095	1					
ANR	4236339	PrimaryExpression	"""%s\\n"""		4236095	0					
ANR	4236340	Argument	explanation		4236095	2					
ANR	4236341	Identifier	explanation		4236095	0					
ANR	4236342	ExpressionStatement	email_close ( mailer )	251:2:7558:7579	4236095	17	True				
ANR	4236343	CallExpression	email_close ( mailer )		4236095	0					
ANR	4236344	Callee	email_close		4236095	0					
ANR	4236345	Identifier	email_close		4236095	0					
ANR	4236346	ArgumentList	mailer		4236095	1					
ANR	4236347	Argument	mailer		4236095	0					
ANR	4236348	Identifier	mailer		4236095	0					
ANR	4236349	ReturnType	void		4236095	1					
ANR	4236350	Identifier	produce_output		4236095	2					
ANR	4236351	ParameterList			4236095	3					
ANR	4236352	CFGEntryNode	ENTRY		4236095		True				
ANR	4236353	CFGExitNode	EXIT		4236095		True				
ANR	4236354	Symbol	szTmp . Value		4236095						
ANR	4236355	Symbol	NULL		4236095						
ANR	4236356	Symbol	stdout		4236095						
ANR	4236357	Symbol	subject		4236095						
ANR	4236358	Symbol	BadFiles		4236095						
ANR	4236359	Symbol	BadFiles -> number		4236095						
ANR	4236360	Symbol	D_ALWAYS		4236095						
ANR	4236361	Symbol	get_local_hostname		4236095						
ANR	4236362	Symbol	mailer		4236095						
ANR	4236363	Symbol	explanation		4236095						
ANR	4236364	Symbol	get_local_hostname ( ) . Value		4236095						
ANR	4236365	Symbol	str		4236095						
ANR	4236366	Symbol	my_full_hostname		4236095						
ANR	4236367	Symbol	BadFiles -> next		4236095						
ANR	4236368	Symbol	PreenAdmin		4236095						
ANR	4236369	Symbol	MailFlag		4236095						
ANR	4236370	Symbol	subject . Value		4236095						
ANR	4236371	Symbol	email_open		4236095						
ANR	4236372	Symbol	* BadFiles		4236095						
ANR	4236373	Symbol	szTmp		4236095						
ANR	4236374	Function	check_job_spool_hierarchy	255:0:7587:9477							
ANR	4236375	FunctionDef	"check_job_spool_hierarchy (char const * parent , char const * child , StringList & bad_spool_files)"		4236374	0					
ANR	4236376	CompoundStatement		257:0:7688:9477	4236374	0					
ANR	4236377	ExpressionStatement	ASSERT ( parent )	258:1:7691:7707	4236374	0	True				
ANR	4236378	CallExpression	ASSERT ( parent )		4236374	0					
ANR	4236379	Callee	ASSERT		4236374	0					
ANR	4236380	Identifier	ASSERT		4236374	0					
ANR	4236381	ArgumentList	parent		4236374	1					
ANR	4236382	Argument	parent		4236374	0					
ANR	4236383	Identifier	parent		4236374	0					
ANR	4236384	ExpressionStatement	ASSERT ( child )	259:1:7710:7725	4236374	1	True				
ANR	4236385	CallExpression	ASSERT ( child )		4236374	0					
ANR	4236386	Callee	ASSERT		4236374	0					
ANR	4236387	Identifier	ASSERT		4236374	0					
ANR	4236388	ArgumentList	child		4236374	1					
ANR	4236389	Argument	child		4236374	0					
ANR	4236390	Identifier	child		4236374	0					
ANR	4236391	IdentifierDeclStatement	char * end = NULL ;	265:1:7973:7987	4236374	2	True				
ANR	4236392	IdentifierDecl	* end = NULL		4236374	0					
ANR	4236393	IdentifierDeclType	char *		4236374	0					
ANR	4236394	Identifier	end		4236374	1					
ANR	4236395	AssignmentExpression	* end = NULL		4236374	2		=			
ANR	4236396	Identifier	NULL		4236374	0					
ANR	4236397	Identifier	NULL		4236374	1					
ANR	4236398	ExpressionStatement	"strtol ( child , & end , 10 )"	266:1:7990:8011	4236374	3	True				
ANR	4236399	CallExpression	"strtol ( child , & end , 10 )"		4236374	0					
ANR	4236400	Callee	strtol		4236374	0					
ANR	4236401	Identifier	strtol		4236374	0					
ANR	4236402	ArgumentList	child		4236374	1					
ANR	4236403	Argument	child		4236374	0					
ANR	4236404	Identifier	child		4236374	0					
ANR	4236405	Argument	& end		4236374	1					
ANR	4236406	UnaryOperationExpression	& end		4236374	0					
ANR	4236407	UnaryOperator	&		4236374	0					
ANR	4236408	Identifier	end		4236374	1					
ANR	4236409	Argument	10		4236374	2					
ANR	4236410	PrimaryExpression	10		4236374	0					
ANR	4236411	IfStatement	if ( ! end || * end != '\\0' )		4236374	4					
ANR	4236412	Condition	! end || * end != '\\0'	267:5:8018:8037	4236374	0	True				
ANR	4236413	OrExpression	! end || * end != '\\0'		4236374	0		||			
ANR	4236414	UnaryOperationExpression	! end		4236374	0					
ANR	4236415	UnaryOperator	!		4236374	0					
ANR	4236416	Identifier	end		4236374	1					
ANR	4236417	EqualityExpression	* end != '\\0'		4236374	1		!=			
ANR	4236418	UnaryOperationExpression	* end		4236374	0					
ANR	4236419	UnaryOperator	*		4236374	0					
ANR	4236420	Identifier	end		4236374	1					
ANR	4236421	PrimaryExpression	'\\0'		4236374	1					
ANR	4236422	CompoundStatement		11:28:352:352	4236374	1					
ANR	4236423	ReturnStatement	return false ;	268:2:8045:8057	4236374	0	True				
ANR	4236424	Identifier	false		4236374	0					
ANR	4236425	IdentifierDeclStatement	std :: string topdir ;	271:1:8103:8121	4236374	5	True				
ANR	4236426	IdentifierDecl	topdir		4236374	0					
ANR	4236427	IdentifierDeclType	std :: string		4236374	0					
ANR	4236428	Identifier	topdir		4236374	1					
ANR	4236429	ExpressionStatement	"sprintf ( topdir , ""%s%c%s"" , parent , DIR_DELIM_CHAR , child )"	272:1:8124:8176	4236374	6	True				
ANR	4236430	CallExpression	"sprintf ( topdir , ""%s%c%s"" , parent , DIR_DELIM_CHAR , child )"		4236374	0					
ANR	4236431	Callee	sprintf		4236374	0					
ANR	4236432	Identifier	sprintf		4236374	0					
ANR	4236433	ArgumentList	topdir		4236374	1					
ANR	4236434	Argument	topdir		4236374	0					
ANR	4236435	Identifier	topdir		4236374	0					
ANR	4236436	Argument	"""%s%c%s"""		4236374	1					
ANR	4236437	PrimaryExpression	"""%s%c%s"""		4236374	0					
ANR	4236438	Argument	parent		4236374	2					
ANR	4236439	Identifier	parent		4236374	0					
ANR	4236440	Argument	DIR_DELIM_CHAR		4236374	3					
ANR	4236441	Identifier	DIR_DELIM_CHAR		4236374	0					
ANR	4236442	Argument	child		4236374	4					
ANR	4236443	Identifier	child		4236374	0					
ANR	4236444	IdentifierDeclStatement	"Directory dir ( topdir . c_str ( ) , PRIV_ROOT ) ;"	273:1:8179:8218	4236374	7	True				
ANR	4236445	IdentifierDecl	"dir ( topdir . c_str ( ) , PRIV_ROOT )"		4236374	0					
ANR	4236446	IdentifierDeclType	Directory		4236374	0					
ANR	4236447	Identifier	dir		4236374	1					
ANR	4236448	Expression	"topdir . c_str ( ) , PRIV_ROOT"		4236374	2					
ANR	4236449	CallExpression	topdir . c_str ( )		4236374	0					
ANR	4236450	Callee	topdir . c_str		4236374	0					
ANR	4236451	MemberAccess	topdir . c_str		4236374	0					
ANR	4236452	Identifier	topdir		4236374	0					
ANR	4236453	Identifier	c_str		4236374	1					
ANR	4236454	ArgumentList			4236374	1					
ANR	4236455	Identifier	PRIV_ROOT		4236374	1					
ANR	4236456	IdentifierDeclStatement	char const * f ;	274:1:8221:8234	4236374	8	True				
ANR	4236457	IdentifierDecl	* f		4236374	0					
ANR	4236458	IdentifierDeclType	char const *		4236374	0					
ANR	4236459	Identifier	f		4236374	1					
ANR	4236460	WhileStatement	while ( ( f = dir . Next ( ) ) )		4236374	9					
ANR	4236461	Condition	f = dir . Next ( )	275:8:8244:8257	4236374	0	True				
ANR	4236462	AssignmentExpression	f = dir . Next ( )		4236374	0		=			
ANR	4236463	Identifier	f		4236374	0					
ANR	4236464	CallExpression	dir . Next ( )		4236374	1					
ANR	4236465	Callee	dir . Next		4236374	0					
ANR	4236466	MemberAccess	dir . Next		4236374	0					
ANR	4236467	Identifier	dir		4236374	0					
ANR	4236468	Identifier	Next		4236374	1					
ANR	4236469	ArgumentList			4236374	1					
ANR	4236470	CompoundStatement		19:25:572:572	4236374	1					
ANR	4236471	IfStatement	if ( is_ckpt_file ( f ) )		4236374	0					
ANR	4236472	Condition	is_ckpt_file ( f )	278:6:8326:8340	4236374	0	True				
ANR	4236473	CallExpression	is_ckpt_file ( f )		4236374	0					
ANR	4236474	Callee	is_ckpt_file		4236374	0					
ANR	4236475	Identifier	is_ckpt_file		4236374	0					
ANR	4236476	ArgumentList	f		4236374	1					
ANR	4236477	Argument	f		4236374	0					
ANR	4236478	Identifier	f		4236374	0					
ANR	4236479	CompoundStatement		22:24:655:655	4236374	1					
ANR	4236480	ExpressionStatement	"good_file ( topdir . c_str ( ) , f )"	279:3:8349:8379	4236374	0	True				
ANR	4236481	CallExpression	"good_file ( topdir . c_str ( ) , f )"		4236374	0					
ANR	4236482	Callee	good_file		4236374	0					
ANR	4236483	Identifier	good_file		4236374	0					
ANR	4236484	ArgumentList	topdir . c_str ( )		4236374	1					
ANR	4236485	Argument	topdir . c_str ( )		4236374	0					
ANR	4236486	CallExpression	topdir . c_str ( )		4236374	0					
ANR	4236487	Callee	topdir . c_str		4236374	0					
ANR	4236488	MemberAccess	topdir . c_str		4236374	0					
ANR	4236489	Identifier	topdir		4236374	0					
ANR	4236490	Identifier	c_str		4236374	1					
ANR	4236491	ArgumentList			4236374	1					
ANR	4236492	Argument	f		4236374	1					
ANR	4236493	Identifier	f		4236374	0					
ANR	4236494	ContinueStatement	continue ;	280:3:8384:8392	4236374	1	True				
ANR	4236495	IfStatement	if ( IsDirectory ( dir . GetFullPath ( ) ) && ! IsSymlink ( dir . GetFullPath ( ) ) )		4236374	1					
ANR	4236496	Condition	IsDirectory ( dir . GetFullPath ( ) ) && ! IsSymlink ( dir . GetFullPath ( ) )	283:6:8405:8467	4236374	0	True				
ANR	4236497	AndExpression	IsDirectory ( dir . GetFullPath ( ) ) && ! IsSymlink ( dir . GetFullPath ( ) )		4236374	0		&&			
ANR	4236498	CallExpression	IsDirectory ( dir . GetFullPath ( ) )		4236374	0					
ANR	4236499	Callee	IsDirectory		4236374	0					
ANR	4236500	Identifier	IsDirectory		4236374	0					
ANR	4236501	ArgumentList	dir . GetFullPath ( )		4236374	1					
ANR	4236502	Argument	dir . GetFullPath ( )		4236374	0					
ANR	4236503	CallExpression	dir . GetFullPath ( )		4236374	0					
ANR	4236504	Callee	dir . GetFullPath		4236374	0					
ANR	4236505	MemberAccess	dir . GetFullPath		4236374	0					
ANR	4236506	Identifier	dir		4236374	0					
ANR	4236507	Identifier	GetFullPath		4236374	1					
ANR	4236508	ArgumentList			4236374	1					
ANR	4236509	UnaryOperationExpression	! IsSymlink ( dir . GetFullPath ( ) )		4236374	1					
ANR	4236510	UnaryOperator	!		4236374	0					
ANR	4236511	CallExpression	IsSymlink ( dir . GetFullPath ( ) )		4236374	1					
ANR	4236512	Callee	IsSymlink		4236374	0					
ANR	4236513	Identifier	IsSymlink		4236374	0					
ANR	4236514	ArgumentList	dir . GetFullPath ( )		4236374	1					
ANR	4236515	Argument	dir . GetFullPath ( )		4236374	0					
ANR	4236516	CallExpression	dir . GetFullPath ( )		4236374	0					
ANR	4236517	Callee	dir . GetFullPath		4236374	0					
ANR	4236518	MemberAccess	dir . GetFullPath		4236374	0					
ANR	4236519	Identifier	dir		4236374	0					
ANR	4236520	Identifier	GetFullPath		4236374	1					
ANR	4236521	ArgumentList			4236374	1					
ANR	4236522	CompoundStatement		27:72:782:782	4236374	1					
ANR	4236523	IfStatement	"if ( check_job_spool_hierarchy ( topdir . c_str ( ) , f , bad_spool_files ) )"		4236374	0					
ANR	4236524	Condition	"check_job_spool_hierarchy ( topdir . c_str ( ) , f , bad_spool_files )"	284:7:8480:8542	4236374	0	True				
ANR	4236525	CallExpression	"check_job_spool_hierarchy ( topdir . c_str ( ) , f , bad_spool_files )"		4236374	0					
ANR	4236526	Callee	check_job_spool_hierarchy		4236374	0					
ANR	4236527	Identifier	check_job_spool_hierarchy		4236374	0					
ANR	4236528	ArgumentList	topdir . c_str ( )		4236374	1					
ANR	4236529	Argument	topdir . c_str ( )		4236374	0					
ANR	4236530	CallExpression	topdir . c_str ( )		4236374	0					
ANR	4236531	Callee	topdir . c_str		4236374	0					
ANR	4236532	MemberAccess	topdir . c_str		4236374	0					
ANR	4236533	Identifier	topdir		4236374	0					
ANR	4236534	Identifier	c_str		4236374	1					
ANR	4236535	ArgumentList			4236374	1					
ANR	4236536	Argument	f		4236374	1					
ANR	4236537	Identifier	f		4236374	0					
ANR	4236538	Argument	bad_spool_files		4236374	2					
ANR	4236539	Identifier	bad_spool_files		4236374	0					
ANR	4236540	CompoundStatement		28:73:857:857	4236374	1					
ANR	4236541	ExpressionStatement	"good_file ( topdir . c_str ( ) , f )"	285:4:8552:8582	4236374	0	True				
ANR	4236542	CallExpression	"good_file ( topdir . c_str ( ) , f )"		4236374	0					
ANR	4236543	Callee	good_file		4236374	0					
ANR	4236544	Identifier	good_file		4236374	0					
ANR	4236545	ArgumentList	topdir . c_str ( )		4236374	1					
ANR	4236546	Argument	topdir . c_str ( )		4236374	0					
ANR	4236547	CallExpression	topdir . c_str ( )		4236374	0					
ANR	4236548	Callee	topdir . c_str		4236374	0					
ANR	4236549	MemberAccess	topdir . c_str		4236374	0					
ANR	4236550	Identifier	topdir		4236374	0					
ANR	4236551	Identifier	c_str		4236374	1					
ANR	4236552	ArgumentList			4236374	1					
ANR	4236553	Argument	f		4236374	1					
ANR	4236554	Identifier	f		4236374	0					
ANR	4236555	ContinueStatement	continue ;	286:4:8588:8596	4236374	1	True				
ANR	4236556	ExpressionStatement	bad_spool_files . append ( dir . GetFullPath ( ) )	290:2:8610:8653	4236374	2	True				
ANR	4236557	CallExpression	bad_spool_files . append ( dir . GetFullPath ( ) )		4236374	0					
ANR	4236558	Callee	bad_spool_files . append		4236374	0					
ANR	4236559	MemberAccess	bad_spool_files . append		4236374	0					
ANR	4236560	Identifier	bad_spool_files		4236374	0					
ANR	4236561	Identifier	append		4236374	1					
ANR	4236562	ArgumentList	dir . GetFullPath ( )		4236374	1					
ANR	4236563	Argument	dir . GetFullPath ( )		4236374	0					
ANR	4236564	CallExpression	dir . GetFullPath ( )		4236374	0					
ANR	4236565	Callee	dir . GetFullPath		4236374	0					
ANR	4236566	MemberAccess	dir . GetFullPath		4236374	0					
ANR	4236567	Identifier	dir		4236374	0					
ANR	4236568	Identifier	GetFullPath		4236374	1					
ANR	4236569	ArgumentList			4236374	1					
ANR	4236570	ReturnStatement	return true ;	307:1:9464:9475	4236374	10	True				
ANR	4236571	Identifier	true		4236374	0					
ANR	4236572	ReturnType	bool		4236374	1					
ANR	4236573	Identifier	check_job_spool_hierarchy		4236374	2					
ANR	4236574	ParameterList	"char const * parent , char const * child , StringList & bad_spool_files"		4236374	3					
ANR	4236575	Parameter	char const * parent	256:27:7619:7636	4236374	0	True				
ANR	4236576	ParameterType	char const *		4236374	0					
ANR	4236577	Identifier	parent		4236374	1					
ANR	4236578	Parameter	char const * child	256:47:7639:7655	4236374	1	True				
ANR	4236579	ParameterType	char const *		4236374	0					
ANR	4236580	Identifier	child		4236374	1					
ANR	4236581	Parameter	StringList & bad_spool_files	256:66:7658:7684	4236374	2	True				
ANR	4236582	ParameterType	StringList &		4236374	0					
ANR	4236583	Identifier	bad_spool_files		4236374	1					
ANR	4236584	CFGEntryNode	ENTRY		4236374		True				
ANR	4236585	CFGExitNode	EXIT		4236374		True				
ANR	4236586	Symbol	parent		4236374						
ANR	4236587	Symbol	NULL		4236374						
ANR	4236588	Symbol	IsDirectory		4236374						
ANR	4236589	Symbol	check_job_spool_hierarchy		4236374						
ANR	4236590	Symbol	& end		4236374						
ANR	4236591	Symbol	f		4236374						
ANR	4236592	Symbol	DIR_DELIM_CHAR		4236374						
ANR	4236593	Symbol	false		4236374						
ANR	4236594	Symbol	IsSymlink		4236374						
ANR	4236595	Symbol	dir		4236374						
ANR	4236596	Symbol	dir . Next		4236374						
ANR	4236597	Symbol	topdir . c_str		4236374						
ANR	4236598	Symbol	dir . GetFullPath		4236374						
ANR	4236599	Symbol	bad_spool_files		4236374						
ANR	4236600	Symbol	true		4236374						
ANR	4236601	Symbol	end		4236374						
ANR	4236602	Symbol	* end		4236374						
ANR	4236603	Symbol	topdir		4236374						
ANR	4236604	Symbol	child		4236374						
ANR	4236605	Symbol	is_ckpt_file		4236374						
ANR	4236606	Function	check_spool_dir	318:0:9872:14057							
ANR	4236607	FunctionDef	check_spool_dir ()		4236606	0					
ANR	4236608	CompoundStatement		320:0:9895:14057	4236606	0					
ANR	4236609	IdentifierDeclStatement	"unsigned int history_length , startd_history_length ;"	321:4:9901:9951	4236606	0	True				
ANR	4236610	IdentifierDecl	history_length		4236606	0					
ANR	4236611	IdentifierDeclType	unsigned int		4236606	0					
ANR	4236612	Identifier	history_length		4236606	1					
ANR	4236613	IdentifierDecl	startd_history_length		4236606	1					
ANR	4236614	IdentifierDeclType	unsigned int		4236606	0					
ANR	4236615	Identifier	startd_history_length		4236606	1					
ANR	4236616	IdentifierDeclStatement	const char * f ;	322:1:9954:9969	4236606	1	True				
ANR	4236617	IdentifierDecl	* f		4236606	0					
ANR	4236618	IdentifierDeclType	const char *		4236606	0					
ANR	4236619	Identifier	f		4236606	1					
ANR	4236620	IdentifierDeclStatement	"const char * history , * startd_history ;"	323:4:9975:10016	4236606	2	True				
ANR	4236621	IdentifierDecl	* history		4236606	0					
ANR	4236622	IdentifierDeclType	const char *		4236606	0					
ANR	4236623	Identifier	history		4236606	1					
ANR	4236624	IdentifierDecl	* startd_history		4236606	1					
ANR	4236625	IdentifierDeclType	const char *		4236606	0					
ANR	4236626	Identifier	startd_history		4236606	1					
ANR	4236627	IdentifierDeclStatement	"Directory dir ( Spool , PRIV_ROOT ) ;"	324:1:10019:10053	4236606	3	True				
ANR	4236628	IdentifierDecl	"dir ( Spool , PRIV_ROOT )"		4236606	0					
ANR	4236629	IdentifierDeclType	Directory		4236606	0					
ANR	4236630	Identifier	dir		4236606	1					
ANR	4236631	Expression	"Spool , PRIV_ROOT"		4236606	2					
ANR	4236632	Identifier	Spool		4236606	0					
ANR	4236633	Identifier	PRIV_ROOT		4236606	1					
ANR	4236634	IdentifierDeclStatement	"StringList well_known_list , bad_spool_files ;"	325:1:10056:10101	4236606	4	True				
ANR	4236635	IdentifierDecl	well_known_list		4236606	0					
ANR	4236636	IdentifierDeclType	StringList		4236606	0					
ANR	4236637	Identifier	well_known_list		4236606	1					
ANR	4236638	IdentifierDecl	bad_spool_files		4236606	1					
ANR	4236639	IdentifierDeclType	StringList		4236606	0					
ANR	4236640	Identifier	bad_spool_files		4236606	1					
ANR	4236641	IdentifierDeclStatement	Qmgr_connection * qmgr ;	326:1:10104:10125	4236606	5	True				
ANR	4236642	IdentifierDecl	* qmgr		4236606	0					
ANR	4236643	IdentifierDeclType	Qmgr_connection *		4236606	0					
ANR	4236644	Identifier	qmgr		4236606	1					
ANR	4236645	IfStatement	if ( ValidSpoolFiles == NULL )		4236606	6					
ANR	4236646	Condition	ValidSpoolFiles == NULL	328:6:10134:10156	4236606	0	True				
ANR	4236647	EqualityExpression	ValidSpoolFiles == NULL		4236606	0		==			
ANR	4236648	Identifier	ValidSpoolFiles		4236606	0					
ANR	4236649	Identifier	NULL		4236606	1					
ANR	4236650	CompoundStatement		9:32:264:264	4236606	1					
ANR	4236651	ExpressionStatement	"dprintf ( D_ALWAYS , ""Not cleaning spool directory: No VALID_SPOOL_FILES defined\\n"" )"	329:2:10164:10246	4236606	0	True				
ANR	4236652	CallExpression	"dprintf ( D_ALWAYS , ""Not cleaning spool directory: No VALID_SPOOL_FILES defined\\n"" )"		4236606	0					
ANR	4236653	Callee	dprintf		4236606	0					
ANR	4236654	Identifier	dprintf		4236606	0					
ANR	4236655	ArgumentList	D_ALWAYS		4236606	1					
ANR	4236656	Argument	D_ALWAYS		4236606	0					
ANR	4236657	Identifier	D_ALWAYS		4236606	0					
ANR	4236658	Argument	"""Not cleaning spool directory: No VALID_SPOOL_FILES defined\\n"""		4236606	1					
ANR	4236659	PrimaryExpression	"""Not cleaning spool directory: No VALID_SPOOL_FILES defined\\n"""		4236606	0					
ANR	4236660	ReturnStatement	return ;	330:2:10250:10256	4236606	1	True				
ANR	4236661	ExpressionStatement	"history = param ( ""HISTORY"" )"	333:4:10266:10292	4236606	7	True				
ANR	4236662	AssignmentExpression	"history = param ( ""HISTORY"" )"		4236606	0		=			
ANR	4236663	Identifier	history		4236606	0					
ANR	4236664	CallExpression	"param ( ""HISTORY"" )"		4236606	1					
ANR	4236665	Callee	param		4236606	0					
ANR	4236666	Identifier	param		4236606	0					
ANR	4236667	ArgumentList	"""HISTORY"""		4236606	1					
ANR	4236668	Argument	"""HISTORY"""		4236606	0					
ANR	4236669	PrimaryExpression	"""HISTORY"""		4236606	0					
ANR	4236670	ExpressionStatement	history = condor_basename ( history )	334:4:10298:10332	4236606	8	True				
ANR	4236671	AssignmentExpression	history = condor_basename ( history )		4236606	0		=			
ANR	4236672	Identifier	history		4236606	0					
ANR	4236673	CallExpression	condor_basename ( history )		4236606	1					
ANR	4236674	Callee	condor_basename		4236606	0					
ANR	4236675	Identifier	condor_basename		4236606	0					
ANR	4236676	ArgumentList	history		4236606	1					
ANR	4236677	Argument	history		4236606	0					
ANR	4236678	Identifier	history		4236606	0					
ANR	4236679	ExpressionStatement	history_length = strlen ( history )	335:4:10376:10408	4236606	9	True				
ANR	4236680	AssignmentExpression	history_length = strlen ( history )		4236606	0		=			
ANR	4236681	Identifier	history_length		4236606	0					
ANR	4236682	CallExpression	strlen ( history )		4236606	1					
ANR	4236683	Callee	strlen		4236606	0					
ANR	4236684	Identifier	strlen		4236606	0					
ANR	4236685	ArgumentList	history		4236606	1					
ANR	4236686	Argument	history		4236606	0					
ANR	4236687	Identifier	history		4236606	0					
ANR	4236688	ExpressionStatement	"startd_history = param ( ""STARTD_HISTORY"" )"	337:4:10415:10455	4236606	10	True				
ANR	4236689	AssignmentExpression	"startd_history = param ( ""STARTD_HISTORY"" )"		4236606	0		=			
ANR	4236690	Identifier	startd_history		4236606	0					
ANR	4236691	CallExpression	"param ( ""STARTD_HISTORY"" )"		4236606	1					
ANR	4236692	Callee	param		4236606	0					
ANR	4236693	Identifier	param		4236606	0					
ANR	4236694	ArgumentList	"""STARTD_HISTORY"""		4236606	1					
ANR	4236695	Argument	"""STARTD_HISTORY"""		4236606	0					
ANR	4236696	PrimaryExpression	"""STARTD_HISTORY"""		4236606	0					
ANR	4236697	ExpressionStatement	startd_history = condor_basename ( startd_history )	338:4:10461:10509	4236606	11	True				
ANR	4236698	AssignmentExpression	startd_history = condor_basename ( startd_history )		4236606	0		=			
ANR	4236699	Identifier	startd_history		4236606	0					
ANR	4236700	CallExpression	condor_basename ( startd_history )		4236606	1					
ANR	4236701	Callee	condor_basename		4236606	0					
ANR	4236702	Identifier	condor_basename		4236606	0					
ANR	4236703	ArgumentList	startd_history		4236606	1					
ANR	4236704	Argument	startd_history		4236606	0					
ANR	4236705	Identifier	startd_history		4236606	0					
ANR	4236706	ExpressionStatement	startd_history_length = strlen ( startd_history )	339:4:10515:10561	4236606	12	True				
ANR	4236707	AssignmentExpression	startd_history_length = strlen ( startd_history )		4236606	0		=			
ANR	4236708	Identifier	startd_history_length		4236606	0					
ANR	4236709	CallExpression	strlen ( startd_history )		4236606	1					
ANR	4236710	Callee	strlen		4236606	0					
ANR	4236711	Identifier	strlen		4236606	0					
ANR	4236712	ArgumentList	startd_history		4236606	1					
ANR	4236713	Argument	startd_history		4236606	0					
ANR	4236714	Identifier	startd_history		4236606	0					
ANR	4236715	ExpressionStatement	well_known_list . initializeFromString ( ValidSpoolFiles )	341:1:10565:10619	4236606	13	True				
ANR	4236716	CallExpression	well_known_list . initializeFromString ( ValidSpoolFiles )		4236606	0					
ANR	4236717	Callee	well_known_list . initializeFromString		4236606	0					
ANR	4236718	MemberAccess	well_known_list . initializeFromString		4236606	0					
ANR	4236719	Identifier	well_known_list		4236606	0					
ANR	4236720	Identifier	initializeFromString		4236606	1					
ANR	4236721	ArgumentList	ValidSpoolFiles		4236606	1					
ANR	4236722	Argument	ValidSpoolFiles		4236606	0					
ANR	4236723	Identifier	ValidSpoolFiles		4236606	0					
ANR	4236724	ExpressionStatement	"well_known_list . append ( ""job_queue.log"" )"	343:1:10685:10726	4236606	14	True				
ANR	4236725	CallExpression	"well_known_list . append ( ""job_queue.log"" )"		4236606	0					
ANR	4236726	Callee	well_known_list . append		4236606	0					
ANR	4236727	MemberAccess	well_known_list . append		4236606	0					
ANR	4236728	Identifier	well_known_list		4236606	0					
ANR	4236729	Identifier	append		4236606	1					
ANR	4236730	ArgumentList	"""job_queue.log"""		4236606	1					
ANR	4236731	Argument	"""job_queue.log"""		4236606	0					
ANR	4236732	PrimaryExpression	"""job_queue.log"""		4236606	0					
ANR	4236733	ExpressionStatement	"well_known_list . append ( ""job_queue.log.tmp"" )"	344:1:10729:10774	4236606	15	True				
ANR	4236734	CallExpression	"well_known_list . append ( ""job_queue.log.tmp"" )"		4236606	0					
ANR	4236735	Callee	well_known_list . append		4236606	0					
ANR	4236736	MemberAccess	well_known_list . append		4236606	0					
ANR	4236737	Identifier	well_known_list		4236606	0					
ANR	4236738	Identifier	append		4236606	1					
ANR	4236739	ArgumentList	"""job_queue.log.tmp"""		4236606	1					
ANR	4236740	Argument	"""job_queue.log.tmp"""		4236606	0					
ANR	4236741	PrimaryExpression	"""job_queue.log.tmp"""		4236606	0					
ANR	4236742	ExpressionStatement	"well_known_list . append ( ""spool_version"" )"	345:1:10777:10818	4236606	16	True				
ANR	4236743	CallExpression	"well_known_list . append ( ""spool_version"" )"		4236606	0					
ANR	4236744	Callee	well_known_list . append		4236606	0					
ANR	4236745	MemberAccess	well_known_list . append		4236606	0					
ANR	4236746	Identifier	well_known_list		4236606	0					
ANR	4236747	Identifier	append		4236606	1					
ANR	4236748	ArgumentList	"""spool_version"""		4236606	1					
ANR	4236749	Argument	"""spool_version"""		4236606	0					
ANR	4236750	PrimaryExpression	"""spool_version"""		4236606	0					
ANR	4236751	ExpressionStatement	"well_known_list . append ( ""Accountant.log"" )"	346:1:10821:10863	4236606	17	True				
ANR	4236752	CallExpression	"well_known_list . append ( ""Accountant.log"" )"		4236606	0					
ANR	4236753	Callee	well_known_list . append		4236606	0					
ANR	4236754	MemberAccess	well_known_list . append		4236606	0					
ANR	4236755	Identifier	well_known_list		4236606	0					
ANR	4236756	Identifier	append		4236606	1					
ANR	4236757	ArgumentList	"""Accountant.log"""		4236606	1					
ANR	4236758	Argument	"""Accountant.log"""		4236606	0					
ANR	4236759	PrimaryExpression	"""Accountant.log"""		4236606	0					
ANR	4236760	ExpressionStatement	"well_known_list . append ( ""Accountantnew.log"" )"	347:1:10866:10911	4236606	18	True				
ANR	4236761	CallExpression	"well_known_list . append ( ""Accountantnew.log"" )"		4236606	0					
ANR	4236762	Callee	well_known_list . append		4236606	0					
ANR	4236763	MemberAccess	well_known_list . append		4236606	0					
ANR	4236764	Identifier	well_known_list		4236606	0					
ANR	4236765	Identifier	append		4236606	1					
ANR	4236766	ArgumentList	"""Accountantnew.log"""		4236606	1					
ANR	4236767	Argument	"""Accountantnew.log"""		4236606	0					
ANR	4236768	PrimaryExpression	"""Accountantnew.log"""		4236606	0					
ANR	4236769	ExpressionStatement	"well_known_list . append ( ""local_univ_execute"" )"	348:1:10914:10960	4236606	19	True				
ANR	4236770	CallExpression	"well_known_list . append ( ""local_univ_execute"" )"		4236606	0					
ANR	4236771	Callee	well_known_list . append		4236606	0					
ANR	4236772	MemberAccess	well_known_list . append		4236606	0					
ANR	4236773	Identifier	well_known_list		4236606	0					
ANR	4236774	Identifier	append		4236606	1					
ANR	4236775	ArgumentList	"""local_univ_execute"""		4236606	1					
ANR	4236776	Argument	"""local_univ_execute"""		4236606	0					
ANR	4236777	PrimaryExpression	"""local_univ_execute"""		4236606	0					
ANR	4236778	ExpressionStatement	"well_known_list . append ( ""EventdShutdownRate.log"" )"	349:1:10963:11013	4236606	20	True				
ANR	4236779	CallExpression	"well_known_list . append ( ""EventdShutdownRate.log"" )"		4236606	0					
ANR	4236780	Callee	well_known_list . append		4236606	0					
ANR	4236781	MemberAccess	well_known_list . append		4236606	0					
ANR	4236782	Identifier	well_known_list		4236606	0					
ANR	4236783	Identifier	append		4236606	1					
ANR	4236784	ArgumentList	"""EventdShutdownRate.log"""		4236606	1					
ANR	4236785	Argument	"""EventdShutdownRate.log"""		4236606	0					
ANR	4236786	PrimaryExpression	"""EventdShutdownRate.log"""		4236606	0					
ANR	4236787	ExpressionStatement	"well_known_list . append ( ""OfflineLog"" )"	350:1:11016:11054	4236606	21	True				
ANR	4236788	CallExpression	"well_known_list . append ( ""OfflineLog"" )"		4236606	0					
ANR	4236789	Callee	well_known_list . append		4236606	0					
ANR	4236790	MemberAccess	well_known_list . append		4236606	0					
ANR	4236791	Identifier	well_known_list		4236606	0					
ANR	4236792	Identifier	append		4236606	1					
ANR	4236793	ArgumentList	"""OfflineLog"""		4236606	1					
ANR	4236794	Argument	"""OfflineLog"""		4236606	0					
ANR	4236795	PrimaryExpression	"""OfflineLog"""		4236606	0					
ANR	4236796	ExpressionStatement	"well_known_list . append ( ""SCHEDD.lock"" )"	353:1:11174:11213	4236606	22	True				
ANR	4236797	CallExpression	"well_known_list . append ( ""SCHEDD.lock"" )"		4236606	0					
ANR	4236798	Callee	well_known_list . append		4236606	0					
ANR	4236799	MemberAccess	well_known_list . append		4236606	0					
ANR	4236800	Identifier	well_known_list		4236606	0					
ANR	4236801	Identifier	append		4236606	1					
ANR	4236802	ArgumentList	"""SCHEDD.lock"""		4236606	1					
ANR	4236803	Argument	"""SCHEDD.lock"""		4236606	0					
ANR	4236804	PrimaryExpression	"""SCHEDD.lock"""		4236606	0					
ANR	4236805	ExpressionStatement	"well_known_list . append ( "".quillwritepassword"" )"	355:1:11251:11298	4236606	23	True				
ANR	4236806	CallExpression	"well_known_list . append ( "".quillwritepassword"" )"		4236606	0					
ANR	4236807	Callee	well_known_list . append		4236606	0					
ANR	4236808	MemberAccess	well_known_list . append		4236606	0					
ANR	4236809	Identifier	well_known_list		4236606	0					
ANR	4236810	Identifier	append		4236606	1					
ANR	4236811	ArgumentList	""".quillwritepassword"""		4236606	1					
ANR	4236812	Argument	""".quillwritepassword"""		4236606	0					
ANR	4236813	PrimaryExpression	""".quillwritepassword"""		4236606	0					
ANR	4236814	ExpressionStatement	"well_known_list . append ( "".pgpass"" )"	356:1:11301:11336	4236606	24	True				
ANR	4236815	CallExpression	"well_known_list . append ( "".pgpass"" )"		4236606	0					
ANR	4236816	Callee	well_known_list . append		4236606	0					
ANR	4236817	MemberAccess	well_known_list . append		4236606	0					
ANR	4236818	Identifier	well_known_list		4236606	0					
ANR	4236819	Identifier	append		4236606	1					
ANR	4236820	ArgumentList	""".pgpass"""		4236606	1					
ANR	4236821	Argument	""".pgpass"""		4236606	0					
ANR	4236822	PrimaryExpression	""".pgpass"""		4236606	0					
ANR	4236823	IfStatement	if ( ! ( qmgr = ConnectQ ( 0 ) ) )		4236606	25					
ANR	4236824	Condition	! ( qmgr = ConnectQ ( 0 ) )	359:5:11374:11395	4236606	0	True				
ANR	4236825	UnaryOperationExpression	! ( qmgr = ConnectQ ( 0 ) )		4236606	0					
ANR	4236826	UnaryOperator	!		4236606	0					
ANR	4236827	AssignmentExpression	qmgr = ConnectQ ( 0 )		4236606	1		=			
ANR	4236828	Identifier	qmgr		4236606	0					
ANR	4236829	CallExpression	ConnectQ ( 0 )		4236606	1					
ANR	4236830	Callee	ConnectQ		4236606	0					
ANR	4236831	Identifier	ConnectQ		4236606	0					
ANR	4236832	ArgumentList	0		4236606	1					
ANR	4236833	Argument	0		4236606	0					
ANR	4236834	PrimaryExpression	0		4236606	0					
ANR	4236835	CompoundStatement		40:29:1502:1502	4236606	1					
ANR	4236836	ExpressionStatement	"dprintf ( D_ALWAYS , ""Not cleaning spool directory: Can't contact schedd\\n"" )"	360:2:11402:11477	4236606	0	True				
ANR	4236837	CallExpression	"dprintf ( D_ALWAYS , ""Not cleaning spool directory: Can't contact schedd\\n"" )"		4236606	0					
ANR	4236838	Callee	dprintf		4236606	0					
ANR	4236839	Identifier	dprintf		4236606	0					
ANR	4236840	ArgumentList	D_ALWAYS		4236606	1					
ANR	4236841	Argument	D_ALWAYS		4236606	0					
ANR	4236842	Identifier	D_ALWAYS		4236606	0					
ANR	4236843	Argument	"""Not cleaning spool directory: Can't contact schedd\\n"""		4236606	1					
ANR	4236844	PrimaryExpression	"""Not cleaning spool directory: Can't contact schedd\\n"""		4236606	0					
ANR	4236845	ReturnStatement	return ;	361:2:11481:11487	4236606	1	True				
ANR	4236846	WhileStatement	while ( ( f = dir . Next ( ) ) )		4236606	26					
ANR	4236847	Condition	f = dir . Next ( )	365:8:11539:11554	4236606	0	True				
ANR	4236848	AssignmentExpression	f = dir . Next ( )		4236606	0		=			
ANR	4236849	Identifier	f		4236606	0					
ANR	4236850	CallExpression	dir . Next ( )		4236606	1					
ANR	4236851	Callee	dir . Next		4236606	0					
ANR	4236852	MemberAccess	dir . Next		4236606	0					
ANR	4236853	Identifier	dir		4236606	0					
ANR	4236854	Identifier	Next		4236606	1					
ANR	4236855	ArgumentList			4236606	1					
ANR	4236856	CompoundStatement		46:27:1662:1662	4236606	1					
ANR	4236857	IfStatement	if ( well_known_list . contains ( f ) )		4236606	0					
ANR	4236858	Condition	well_known_list . contains ( f )	367:6:11596:11622	4236606	0	True				
ANR	4236859	CallExpression	well_known_list . contains ( f )		4236606	0					
ANR	4236860	Callee	well_known_list . contains		4236606	0					
ANR	4236861	MemberAccess	well_known_list . contains		4236606	0					
ANR	4236862	Identifier	well_known_list		4236606	0					
ANR	4236863	Identifier	contains		4236606	1					
ANR	4236864	ArgumentList	f		4236606	1					
ANR	4236865	Argument	f		4236606	0					
ANR	4236866	Identifier	f		4236606	0					
ANR	4236867	CompoundStatement		48:36:1730:1730	4236606	1					
ANR	4236868	ExpressionStatement	"good_file ( Spool , f )"	368:3:11631:11652	4236606	0	True				
ANR	4236869	CallExpression	"good_file ( Spool , f )"		4236606	0					
ANR	4236870	Callee	good_file		4236606	0					
ANR	4236871	Identifier	good_file		4236606	0					
ANR	4236872	ArgumentList	Spool		4236606	1					
ANR	4236873	Argument	Spool		4236606	0					
ANR	4236874	Identifier	Spool		4236606	0					
ANR	4236875	Argument	f		4236606	1					
ANR	4236876	Identifier	f		4236606	0					
ANR	4236877	ContinueStatement	continue ;	369:3:11657:11665	4236606	1	True				
ANR	4236878	IfStatement	"if ( ! strncmp ( f , ""job_queue.log"" , 13 ) )"		4236606	1					
ANR	4236879	Condition	"! strncmp ( f , ""job_queue.log"" , 13 )"	371:6:11677:11706	4236606	0	True				
ANR	4236880	UnaryOperationExpression	"! strncmp ( f , ""job_queue.log"" , 13 )"		4236606	0					
ANR	4236881	UnaryOperator	!		4236606	0					
ANR	4236882	CallExpression	"strncmp ( f , ""job_queue.log"" , 13 )"		4236606	1					
ANR	4236883	Callee	strncmp		4236606	0					
ANR	4236884	Identifier	strncmp		4236606	0					
ANR	4236885	ArgumentList	f		4236606	1					
ANR	4236886	Argument	f		4236606	0					
ANR	4236887	Identifier	f		4236606	0					
ANR	4236888	Argument	"""job_queue.log"""		4236606	1					
ANR	4236889	PrimaryExpression	"""job_queue.log"""		4236606	0					
ANR	4236890	Argument	13		4236606	2					
ANR	4236891	PrimaryExpression	13		4236606	0					
ANR	4236892	CompoundStatement		52:39:1814:1814	4236606	1					
ANR	4236893	ExpressionStatement	"good_file ( Spool , f )"	380:3:12195:12216	4236606	0	True				
ANR	4236894	CallExpression	"good_file ( Spool , f )"		4236606	0					
ANR	4236895	Callee	good_file		4236606	0					
ANR	4236896	Identifier	good_file		4236606	0					
ANR	4236897	ArgumentList	Spool		4236606	1					
ANR	4236898	Argument	Spool		4236606	0					
ANR	4236899	Identifier	Spool		4236606	0					
ANR	4236900	Argument	f		4236606	1					
ANR	4236901	Identifier	f		4236606	0					
ANR	4236902	ContinueStatement	continue ;	381:3:12221:12229	4236606	1	True				
ANR	4236903	IfStatement	"if ( strlen ( f ) >= history_length && strncmp ( f , history , history_length ) == 0 )"		4236606	2					
ANR	4236904	Condition	"strlen ( f ) >= history_length && strncmp ( f , history , history_length ) == 0"	384:15:12302:12385	4236606	0	True				
ANR	4236905	AndExpression	"strlen ( f ) >= history_length && strncmp ( f , history , history_length ) == 0"		4236606	0		&&			
ANR	4236906	RelationalExpression	strlen ( f ) >= history_length		4236606	0		>=			
ANR	4236907	CallExpression	strlen ( f )		4236606	0					
ANR	4236908	Callee	strlen		4236606	0					
ANR	4236909	Identifier	strlen		4236606	0					
ANR	4236910	ArgumentList	f		4236606	1					
ANR	4236911	Argument	f		4236606	0					
ANR	4236912	Identifier	f		4236606	0					
ANR	4236913	Identifier	history_length		4236606	1					
ANR	4236914	EqualityExpression	"strncmp ( f , history , history_length ) == 0"		4236606	1		==			
ANR	4236915	CallExpression	"strncmp ( f , history , history_length )"		4236606	0					
ANR	4236916	Callee	strncmp		4236606	0					
ANR	4236917	Identifier	strncmp		4236606	0					
ANR	4236918	ArgumentList	f		4236606	1					
ANR	4236919	Argument	f		4236606	0					
ANR	4236920	Identifier	f		4236606	0					
ANR	4236921	Argument	history		4236606	1					
ANR	4236922	Identifier	history		4236606	0					
ANR	4236923	Argument	history_length		4236606	2					
ANR	4236924	Identifier	history_length		4236606	0					
ANR	4236925	PrimaryExpression	0		4236606	1					
ANR	4236926	CompoundStatement		66:57:2492:2492	4236606	1					
ANR	4236927	ExpressionStatement	"good_file ( Spool , f )"	386:12:12402:12423	4236606	0	True				
ANR	4236928	CallExpression	"good_file ( Spool , f )"		4236606	0					
ANR	4236929	Callee	good_file		4236606	0					
ANR	4236930	Identifier	good_file		4236606	0					
ANR	4236931	ArgumentList	Spool		4236606	1					
ANR	4236932	Argument	Spool		4236606	0					
ANR	4236933	Identifier	Spool		4236606	0					
ANR	4236934	Argument	f		4236606	1					
ANR	4236935	Identifier	f		4236606	0					
ANR	4236936	ContinueStatement	continue ;	387:12:12437:12445	4236606	1	True				
ANR	4236937	IfStatement	"if ( startd_history_length > 0 && strlen ( f ) >= startd_history_length && strncmp ( f , startd_history , startd_history_length ) == 0 )"		4236606	3					
ANR	4236938	Condition	"startd_history_length > 0 && strlen ( f ) >= startd_history_length && strncmp ( f , startd_history , startd_history_length ) == 0"	391:7:12525:12651	4236606	0	True				
ANR	4236939	AndExpression	"startd_history_length > 0 && strlen ( f ) >= startd_history_length && strncmp ( f , startd_history , startd_history_length ) == 0"		4236606	0		&&			
ANR	4236940	RelationalExpression	startd_history_length > 0		4236606	0		>			
ANR	4236941	Identifier	startd_history_length		4236606	0					
ANR	4236942	PrimaryExpression	0		4236606	1					
ANR	4236943	AndExpression	"strlen ( f ) >= startd_history_length && strncmp ( f , startd_history , startd_history_length ) == 0"		4236606	1		&&			
ANR	4236944	RelationalExpression	strlen ( f ) >= startd_history_length		4236606	0		>=			
ANR	4236945	CallExpression	strlen ( f )		4236606	0					
ANR	4236946	Callee	strlen		4236606	0					
ANR	4236947	Identifier	strlen		4236606	0					
ANR	4236948	ArgumentList	f		4236606	1					
ANR	4236949	Argument	f		4236606	0					
ANR	4236950	Identifier	f		4236606	0					
ANR	4236951	Identifier	startd_history_length		4236606	1					
ANR	4236952	EqualityExpression	"strncmp ( f , startd_history , startd_history_length ) == 0"		4236606	1		==			
ANR	4236953	CallExpression	"strncmp ( f , startd_history , startd_history_length )"		4236606	0					
ANR	4236954	Callee	strncmp		4236606	0					
ANR	4236955	Identifier	strncmp		4236606	0					
ANR	4236956	ArgumentList	f		4236606	1					
ANR	4236957	Argument	f		4236606	0					
ANR	4236958	Identifier	f		4236606	0					
ANR	4236959	Argument	startd_history		4236606	1					
ANR	4236960	Identifier	startd_history		4236606	0					
ANR	4236961	Argument	startd_history_length		4236606	2					
ANR	4236962	Identifier	startd_history_length		4236606	0					
ANR	4236963	PrimaryExpression	0		4236606	1					
ANR	4236964	CompoundStatement		74:59:2758:2758	4236606	1					
ANR	4236965	ExpressionStatement	"good_file ( Spool , f )"	395:12:12669:12690	4236606	0	True				
ANR	4236966	CallExpression	"good_file ( Spool , f )"		4236606	0					
ANR	4236967	Callee	good_file		4236606	0					
ANR	4236968	Identifier	good_file		4236606	0					
ANR	4236969	ArgumentList	Spool		4236606	1					
ANR	4236970	Argument	Spool		4236606	0					
ANR	4236971	Identifier	Spool		4236606	0					
ANR	4236972	Argument	f		4236606	1					
ANR	4236973	Identifier	f		4236606	0					
ANR	4236974	ContinueStatement	continue ;	396:12:12704:12712	4236606	1	True				
ANR	4236975	IfStatement	if ( is_valid_shared_exe ( f ) )		4236606	4					
ANR	4236976	Condition	is_valid_shared_exe ( f )	400:6:12771:12792	4236606	0	True				
ANR	4236977	CallExpression	is_valid_shared_exe ( f )		4236606	0					
ANR	4236978	Callee	is_valid_shared_exe		4236606	0					
ANR	4236979	Identifier	is_valid_shared_exe		4236606	0					
ANR	4236980	ArgumentList	f		4236606	1					
ANR	4236981	Argument	f		4236606	0					
ANR	4236982	Identifier	f		4236606	0					
ANR	4236983	CompoundStatement		81:31:2900:2900	4236606	1					
ANR	4236984	ExpressionStatement	"good_file ( Spool , f )"	401:3:12801:12822	4236606	0	True				
ANR	4236985	CallExpression	"good_file ( Spool , f )"		4236606	0					
ANR	4236986	Callee	good_file		4236606	0					
ANR	4236987	Identifier	good_file		4236606	0					
ANR	4236988	ArgumentList	Spool		4236606	1					
ANR	4236989	Argument	Spool		4236606	0					
ANR	4236990	Identifier	Spool		4236606	0					
ANR	4236991	Argument	f		4236606	1					
ANR	4236992	Identifier	f		4236606	0					
ANR	4236993	ContinueStatement	continue ;	402:3:12827:12835	4236606	1	True				
ANR	4236994	IfStatement	if ( is_ckpt_file ( f ) )		4236606	5					
ANR	4236995	Condition	is_ckpt_file ( f )	406:6:12890:12904	4236606	0	True				
ANR	4236996	CallExpression	is_ckpt_file ( f )		4236606	0					
ANR	4236997	Callee	is_ckpt_file		4236606	0					
ANR	4236998	Identifier	is_ckpt_file		4236606	0					
ANR	4236999	ArgumentList	f		4236606	1					
ANR	4237000	Argument	f		4236606	0					
ANR	4237001	Identifier	f		4236606	0					
ANR	4237002	CompoundStatement		87:24:3012:3012	4236606	1					
ANR	4237003	ExpressionStatement	"good_file ( Spool , f )"	407:3:12913:12934	4236606	0	True				
ANR	4237004	CallExpression	"good_file ( Spool , f )"		4236606	0					
ANR	4237005	Callee	good_file		4236606	0					
ANR	4237006	Identifier	good_file		4236606	0					
ANR	4237007	ArgumentList	Spool		4236606	1					
ANR	4237008	Argument	Spool		4236606	0					
ANR	4237009	Identifier	Spool		4236606	0					
ANR	4237010	Argument	f		4236606	1					
ANR	4237011	Identifier	f		4236606	0					
ANR	4237012	ContinueStatement	continue ;	408:3:12939:12947	4236606	1	True				
ANR	4237013	IfStatement	if ( is_myproxy_file ( f ) )		4236606	6					
ANR	4237014	Condition	is_myproxy_file ( f )	412:7:13012:13031	4236606	0	True				
ANR	4237015	CallExpression	is_myproxy_file ( f )		4236606	0					
ANR	4237016	Callee	is_myproxy_file		4236606	0					
ANR	4237017	Identifier	is_myproxy_file		4236606	0					
ANR	4237018	ArgumentList	f		4236606	1					
ANR	4237019	Argument	f		4236606	0					
ANR	4237020	Identifier	f		4236606	0					
ANR	4237021	CompoundStatement		93:30:3139:3139	4236606	1					
ANR	4237022	ExpressionStatement	"good_file ( Spool , f )"	413:3:13040:13061	4236606	0	True				
ANR	4237023	CallExpression	"good_file ( Spool , f )"		4236606	0					
ANR	4237024	Callee	good_file		4236606	0					
ANR	4237025	Identifier	good_file		4236606	0					
ANR	4237026	ArgumentList	Spool		4236606	1					
ANR	4237027	Argument	Spool		4236606	0					
ANR	4237028	Identifier	Spool		4236606	0					
ANR	4237029	Argument	f		4236606	1					
ANR	4237030	Identifier	f		4236606	0					
ANR	4237031	ContinueStatement	continue ;	414:3:13066:13074	4236606	1	True				
ANR	4237032	IfStatement	if ( is_ccb_file ( f ) )		4236606	7					
ANR	4237033	Condition	is_ccb_file ( f )	418:7:13124:13139	4236606	0	True				
ANR	4237034	CallExpression	is_ccb_file ( f )		4236606	0					
ANR	4237035	Callee	is_ccb_file		4236606	0					
ANR	4237036	Identifier	is_ccb_file		4236606	0					
ANR	4237037	ArgumentList	f		4236606	1					
ANR	4237038	Argument	f		4236606	0					
ANR	4237039	Identifier	f		4236606	0					
ANR	4237040	CompoundStatement		99:26:3247:3247	4236606	1					
ANR	4237041	ExpressionStatement	"good_file ( Spool , f )"	419:3:13148:13169	4236606	0	True				
ANR	4237042	CallExpression	"good_file ( Spool , f )"		4236606	0					
ANR	4237043	Callee	good_file		4236606	0					
ANR	4237044	Identifier	good_file		4236606	0					
ANR	4237045	ArgumentList	Spool		4236606	1					
ANR	4237046	Argument	Spool		4236606	0					
ANR	4237047	Identifier	Spool		4236606	0					
ANR	4237048	Argument	f		4236606	1					
ANR	4237049	Identifier	f		4236606	0					
ANR	4237050	ContinueStatement	continue ;	420:3:13174:13182	4236606	1	True				
ANR	4237051	IfStatement	if ( IsDirectory ( dir . GetFullPath ( ) ) && ! IsSymlink ( dir . GetFullPath ( ) ) )		4236606	8					
ANR	4237052	Condition	IsDirectory ( dir . GetFullPath ( ) ) && ! IsSymlink ( dir . GetFullPath ( ) )	423:6:13195:13261	4236606	0	True				
ANR	4237053	AndExpression	IsDirectory ( dir . GetFullPath ( ) ) && ! IsSymlink ( dir . GetFullPath ( ) )		4236606	0		&&			
ANR	4237054	CallExpression	IsDirectory ( dir . GetFullPath ( ) )		4236606	0					
ANR	4237055	Callee	IsDirectory		4236606	0					
ANR	4237056	Identifier	IsDirectory		4236606	0					
ANR	4237057	ArgumentList	dir . GetFullPath ( )		4236606	1					
ANR	4237058	Argument	dir . GetFullPath ( )		4236606	0					
ANR	4237059	CallExpression	dir . GetFullPath ( )		4236606	0					
ANR	4237060	Callee	dir . GetFullPath		4236606	0					
ANR	4237061	MemberAccess	dir . GetFullPath		4236606	0					
ANR	4237062	Identifier	dir		4236606	0					
ANR	4237063	Identifier	GetFullPath		4236606	1					
ANR	4237064	ArgumentList			4236606	1					
ANR	4237065	UnaryOperationExpression	! IsSymlink ( dir . GetFullPath ( ) )		4236606	1					
ANR	4237066	UnaryOperator	!		4236606	0					
ANR	4237067	CallExpression	IsSymlink ( dir . GetFullPath ( ) )		4236606	1					
ANR	4237068	Callee	IsSymlink		4236606	0					
ANR	4237069	Identifier	IsSymlink		4236606	0					
ANR	4237070	ArgumentList	dir . GetFullPath ( )		4236606	1					
ANR	4237071	Argument	dir . GetFullPath ( )		4236606	0					
ANR	4237072	CallExpression	dir . GetFullPath ( )		4236606	0					
ANR	4237073	Callee	dir . GetFullPath		4236606	0					
ANR	4237074	MemberAccess	dir . GetFullPath		4236606	0					
ANR	4237075	Identifier	dir		4236606	0					
ANR	4237076	Identifier	GetFullPath		4236606	1					
ANR	4237077	ArgumentList			4236606	1					
ANR	4237078	CompoundStatement		104:76:3369:3369	4236606	1					
ANR	4237079	IfStatement	"if ( check_job_spool_hierarchy ( Spool , f , bad_spool_files ) )"		4236606	0					
ANR	4237080	Condition	"check_job_spool_hierarchy ( Spool , f , bad_spool_files )"	424:7:13274:13327	4236606	0	True				
ANR	4237081	CallExpression	"check_job_spool_hierarchy ( Spool , f , bad_spool_files )"		4236606	0					
ANR	4237082	Callee	check_job_spool_hierarchy		4236606	0					
ANR	4237083	Identifier	check_job_spool_hierarchy		4236606	0					
ANR	4237084	ArgumentList	Spool		4236606	1					
ANR	4237085	Argument	Spool		4236606	0					
ANR	4237086	Identifier	Spool		4236606	0					
ANR	4237087	Argument	f		4236606	1					
ANR	4237088	Identifier	f		4236606	0					
ANR	4237089	Argument	bad_spool_files		4236606	2					
ANR	4237090	Identifier	bad_spool_files		4236606	0					
ANR	4237091	CompoundStatement		105:64:3435:3435	4236606	1					
ANR	4237092	ExpressionStatement	"good_file ( Spool , f )"	425:4:13337:13358	4236606	0	True				
ANR	4237093	CallExpression	"good_file ( Spool , f )"		4236606	0					
ANR	4237094	Callee	good_file		4236606	0					
ANR	4237095	Identifier	good_file		4236606	0					
ANR	4237096	ArgumentList	Spool		4236606	1					
ANR	4237097	Argument	Spool		4236606	0					
ANR	4237098	Identifier	Spool		4236606	0					
ANR	4237099	Argument	f		4236606	1					
ANR	4237100	Identifier	f		4236606	0					
ANR	4237101	ContinueStatement	continue ;	426:4:13364:13372	4236606	1	True				
ANR	4237102	ExpressionStatement	bad_spool_files . append ( f )	434:2:13619:13646	4236606	9	True				
ANR	4237103	CallExpression	bad_spool_files . append ( f )		4236606	0					
ANR	4237104	Callee	bad_spool_files . append		4236606	0					
ANR	4237105	MemberAccess	bad_spool_files . append		4236606	0					
ANR	4237106	Identifier	bad_spool_files		4236606	0					
ANR	4237107	Identifier	append		4236606	1					
ANR	4237108	ArgumentList	f		4236606	1					
ANR	4237109	Argument	f		4236606	0					
ANR	4237110	Identifier	f		4236606	0					
ANR	4237111	IfStatement	if ( DisconnectQ ( qmgr ) )		4236606	27					
ANR	4237112	Condition	DisconnectQ ( qmgr )	437:5:13657:13673	4236606	0	True				
ANR	4237113	CallExpression	DisconnectQ ( qmgr )		4236606	0					
ANR	4237114	Callee	DisconnectQ		4236606	0					
ANR	4237115	Identifier	DisconnectQ		4236606	0					
ANR	4237116	ArgumentList	qmgr		4236606	1					
ANR	4237117	Argument	qmgr		4236606	0					
ANR	4237118	Identifier	qmgr		4236606	0					
ANR	4237119	CompoundStatement		118:25:3781:3781	4236606	1					
ANR	4237120	ExpressionStatement	bad_spool_files . rewind ( )	441:2:13846:13870	4236606	0	True				
ANR	4237121	CallExpression	bad_spool_files . rewind ( )		4236606	0					
ANR	4237122	Callee	bad_spool_files . rewind		4236606	0					
ANR	4237123	MemberAccess	bad_spool_files . rewind		4236606	0					
ANR	4237124	Identifier	bad_spool_files		4236606	0					
ANR	4237125	Identifier	rewind		4236606	1					
ANR	4237126	ArgumentList			4236606	1					
ANR	4237127	WhileStatement	while ( ( f = bad_spool_files . next ( ) ) )		4236606	1					
ANR	4237128	Condition	f = bad_spool_files . next ( )	442:9:13881:13908	4236606	0	True				
ANR	4237129	AssignmentExpression	f = bad_spool_files . next ( )		4236606	0		=			
ANR	4237130	Identifier	f		4236606	0					
ANR	4237131	CallExpression	bad_spool_files . next ( )		4236606	1					
ANR	4237132	Callee	bad_spool_files . next		4236606	0					
ANR	4237133	MemberAccess	bad_spool_files . next		4236606	0					
ANR	4237134	Identifier	bad_spool_files		4236606	0					
ANR	4237135	Identifier	next		4236606	1					
ANR	4237136	ArgumentList			4236606	1					
ANR	4237137	CompoundStatement		123:40:4016:4016	4236606	1					
ANR	4237138	ExpressionStatement	"bad_file ( Spool , f , dir )"	443:3:13917:13942	4236606	0	True				
ANR	4237139	CallExpression	"bad_file ( Spool , f , dir )"		4236606	0					
ANR	4237140	Callee	bad_file		4236606	0					
ANR	4237141	Identifier	bad_file		4236606	0					
ANR	4237142	ArgumentList	Spool		4236606	1					
ANR	4237143	Argument	Spool		4236606	0					
ANR	4237144	Identifier	Spool		4236606	0					
ANR	4237145	Argument	f		4236606	1					
ANR	4237146	Identifier	f		4236606	0					
ANR	4237147	Argument	dir		4236606	2					
ANR	4237148	Identifier	dir		4236606	0					
ANR	4237149	ElseStatement	else		4236606	0					
ANR	4237150	CompoundStatement		126:8:4060:4060	4236606	0					
ANR	4237151	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error disconnecting from job queue, not deleting spool files.\\n"" )"	446:2:13960:14052	4236606	0	True				
ANR	4237152	CallExpression	"dprintf ( D_ALWAYS , ""Error disconnecting from job queue, not deleting spool files.\\n"" )"		4236606	0					
ANR	4237153	Callee	dprintf		4236606	0					
ANR	4237154	Identifier	dprintf		4236606	0					
ANR	4237155	ArgumentList	D_ALWAYS		4236606	1					
ANR	4237156	Argument	D_ALWAYS		4236606	0					
ANR	4237157	Identifier	D_ALWAYS		4236606	0					
ANR	4237158	Argument	"""Error disconnecting from job queue, not deleting spool files.\\n"""		4236606	1					
ANR	4237159	PrimaryExpression	"""Error disconnecting from job queue, not deleting spool files.\\n"""		4236606	0					
ANR	4237160	ReturnType	void		4236606	1					
ANR	4237161	Identifier	check_spool_dir		4236606	2					
ANR	4237162	ParameterList			4236606	3					
ANR	4237163	CFGEntryNode	ENTRY		4236606		True				
ANR	4237164	CFGExitNode	EXIT		4236606		True				
ANR	4237165	Symbol	IsDirectory		4236606						
ANR	4237166	Symbol	check_job_spool_hierarchy		4236606						
ANR	4237167	Symbol	is_myproxy_file		4236606						
ANR	4237168	Symbol	dir		4236606						
ANR	4237169	Symbol	dir . Next		4236606						
ANR	4237170	Symbol	dir . GetFullPath		4236606						
ANR	4237171	Symbol	well_known_list		4236606						
ANR	4237172	Symbol	strlen		4236606						
ANR	4237173	Symbol	strncmp		4236606						
ANR	4237174	Symbol	param		4236606						
ANR	4237175	Symbol	bad_spool_files		4236606						
ANR	4237176	Symbol	well_known_list . contains		4236606						
ANR	4237177	Symbol	is_valid_shared_exe		4236606						
ANR	4237178	Symbol	is_ckpt_file		4236606						
ANR	4237179	Symbol	bad_spool_files . next		4236606						
ANR	4237180	Symbol	ValidSpoolFiles		4236606						
ANR	4237181	Symbol	DisconnectQ		4236606						
ANR	4237182	Symbol	NULL		4236606						
ANR	4237183	Symbol	f		4236606						
ANR	4237184	Symbol	D_ALWAYS		4236606						
ANR	4237185	Symbol	Spool		4236606						
ANR	4237186	Symbol	IsSymlink		4236606						
ANR	4237187	Symbol	history		4236606						
ANR	4237188	Symbol	startd_history		4236606						
ANR	4237189	Symbol	history_length		4236606						
ANR	4237190	Symbol	qmgr		4236606						
ANR	4237191	Symbol	ConnectQ		4236606						
ANR	4237192	Symbol	startd_history_length		4236606						
ANR	4237193	Symbol	is_ccb_file		4236606						
ANR	4237194	Symbol	condor_basename		4236606						
ANR	4237195	Function	is_valid_shared_exe	453:0:14066:14433							
ANR	4237196	FunctionDef	is_valid_shared_exe (const char * name)		4237195	0					
ANR	4237197	CompoundStatement		455:0:14114:14433	4237195	0					
ANR	4237198	IfStatement	"if ( ( strlen ( name ) < 4 ) || ( strncmp ( name , ""exe-"" , 4 ) != 0 ) )"		4237195	0					
ANR	4237199	Condition	"( strlen ( name ) < 4 ) || ( strncmp ( name , ""exe-"" , 4 ) != 0 )"	456:5:14121:14173	4237195	0	True				
ANR	4237200	OrExpression	"( strlen ( name ) < 4 ) || ( strncmp ( name , ""exe-"" , 4 ) != 0 )"		4237195	0		||			
ANR	4237201	RelationalExpression	strlen ( name ) < 4		4237195	0		<			
ANR	4237202	CallExpression	strlen ( name )		4237195	0					
ANR	4237203	Callee	strlen		4237195	0					
ANR	4237204	Identifier	strlen		4237195	0					
ANR	4237205	ArgumentList	name		4237195	1					
ANR	4237206	Argument	name		4237195	0					
ANR	4237207	Identifier	name		4237195	0					
ANR	4237208	PrimaryExpression	4		4237195	1					
ANR	4237209	EqualityExpression	"strncmp ( name , ""exe-"" , 4 ) != 0"		4237195	1		!=			
ANR	4237210	CallExpression	"strncmp ( name , ""exe-"" , 4 )"		4237195	0					
ANR	4237211	Callee	strncmp		4237195	0					
ANR	4237212	Identifier	strncmp		4237195	0					
ANR	4237213	ArgumentList	name		4237195	1					
ANR	4237214	Argument	name		4237195	0					
ANR	4237215	Identifier	name		4237195	0					
ANR	4237216	Argument	"""exe-"""		4237195	1					
ANR	4237217	PrimaryExpression	"""exe-"""		4237195	0					
ANR	4237218	Argument	4		4237195	2					
ANR	4237219	PrimaryExpression	4		4237195	0					
ANR	4237220	PrimaryExpression	0		4237195	1					
ANR	4237221	CompoundStatement		2:60:61:61	4237195	1					
ANR	4237222	ReturnStatement	return FALSE ;	457:2:14180:14192	4237195	0	True				
ANR	4237223	Identifier	FALSE		4237195	0					
ANR	4237224	IdentifierDeclStatement	MyString path ;	459:1:14198:14211	4237195	1	True				
ANR	4237225	IdentifierDecl	path		4237195	0					
ANR	4237226	IdentifierDeclType	MyString		4237195	0					
ANR	4237227	Identifier	path		4237195	1					
ANR	4237228	ExpressionStatement	"path . sprintf ( ""%s/%s"" , Spool , name )"	460:1:14214:14248	4237195	2	True				
ANR	4237229	CallExpression	"path . sprintf ( ""%s/%s"" , Spool , name )"		4237195	0					
ANR	4237230	Callee	path . sprintf		4237195	0					
ANR	4237231	MemberAccess	path . sprintf		4237195	0					
ANR	4237232	Identifier	path		4237195	0					
ANR	4237233	Identifier	sprintf		4237195	1					
ANR	4237234	ArgumentList	"""%s/%s"""		4237195	1					
ANR	4237235	Argument	"""%s/%s"""		4237195	0					
ANR	4237236	PrimaryExpression	"""%s/%s"""		4237195	0					
ANR	4237237	Argument	Spool		4237195	1					
ANR	4237238	Identifier	Spool		4237195	0					
ANR	4237239	Argument	name		4237195	2					
ANR	4237240	Identifier	name		4237195	0					
ANR	4237241	IdentifierDeclStatement	int count = link_count ( path . Value ( ) ) ;	461:1:14251:14287	4237195	3	True				
ANR	4237242	IdentifierDecl	count = link_count ( path . Value ( ) )		4237195	0					
ANR	4237243	IdentifierDeclType	int		4237195	0					
ANR	4237244	Identifier	count		4237195	1					
ANR	4237245	AssignmentExpression	count = link_count ( path . Value ( ) )		4237195	2		=			
ANR	4237246	Identifier	count		4237195	0					
ANR	4237247	CallExpression	link_count ( path . Value ( ) )		4237195	1					
ANR	4237248	Callee	link_count		4237195	0					
ANR	4237249	Identifier	link_count		4237195	0					
ANR	4237250	ArgumentList	path . Value ( )		4237195	1					
ANR	4237251	Argument	path . Value ( )		4237195	0					
ANR	4237252	CallExpression	path . Value ( )		4237195	0					
ANR	4237253	Callee	path . Value		4237195	0					
ANR	4237254	MemberAccess	path . Value		4237195	0					
ANR	4237255	Identifier	path		4237195	0					
ANR	4237256	Identifier	Value		4237195	1					
ANR	4237257	ArgumentList			4237195	1					
ANR	4237258	IfStatement	if ( count == 1 )		4237195	4					
ANR	4237259	Condition	count == 1	462:5:14294:14303	4237195	0	True				
ANR	4237260	EqualityExpression	count == 1		4237195	0		==			
ANR	4237261	Identifier	count		4237195	0					
ANR	4237262	PrimaryExpression	1		4237195	1					
ANR	4237263	CompoundStatement		8:17:191:191	4237195	1					
ANR	4237264	ReturnStatement	return FALSE ;	463:2:14310:14322	4237195	0	True				
ANR	4237265	Identifier	FALSE		4237195	0					
ANR	4237266	IfStatement	if ( count == - 1 )		4237195	5					
ANR	4237267	Condition	count == - 1	465:5:14332:14342	4237195	0	True				
ANR	4237268	EqualityExpression	count == - 1		4237195	0		==			
ANR	4237269	Identifier	count		4237195	0					
ANR	4237270	UnaryOperationExpression	- 1		4237195	1					
ANR	4237271	UnaryOperator	-		4237195	0					
ANR	4237272	PrimaryExpression	1		4237195	1					
ANR	4237273	CompoundStatement		11:18:230:230	4237195	1					
ANR	4237274	ExpressionStatement	"dprintf ( D_ALWAYS , ""link_count error on %s; not deleting\\n"" , name )"	466:2:14349:14414	4237195	0	True				
ANR	4237275	CallExpression	"dprintf ( D_ALWAYS , ""link_count error on %s; not deleting\\n"" , name )"		4237195	0					
ANR	4237276	Callee	dprintf		4237195	0					
ANR	4237277	Identifier	dprintf		4237195	0					
ANR	4237278	ArgumentList	D_ALWAYS		4237195	1					
ANR	4237279	Argument	D_ALWAYS		4237195	0					
ANR	4237280	Identifier	D_ALWAYS		4237195	0					
ANR	4237281	Argument	"""link_count error on %s; not deleting\\n"""		4237195	1					
ANR	4237282	PrimaryExpression	"""link_count error on %s; not deleting\\n"""		4237195	0					
ANR	4237283	Argument	name		4237195	2					
ANR	4237284	Identifier	name		4237195	0					
ANR	4237285	ReturnStatement	return TRUE ;	468:1:14420:14431	4237195	6	True				
ANR	4237286	Identifier	TRUE		4237195	0					
ANR	4237287	ReturnType	BOOLEAN		4237195	1					
ANR	4237288	Identifier	is_valid_shared_exe		4237195	2					
ANR	4237289	ParameterList	const char * name		4237195	3					
ANR	4237290	Parameter	const char * name	454:21:14095:14110	4237195	0	True				
ANR	4237291	ParameterType	const char *		4237195	0					
ANR	4237292	Identifier	name		4237195	1					
ANR	4237293	CFGEntryNode	ENTRY		4237195		True				
ANR	4237294	CFGExitNode	EXIT		4237195		True				
ANR	4237295	Symbol	strlen		4237195						
ANR	4237296	Symbol	strncmp		4237195						
ANR	4237297	Symbol	path		4237195						
ANR	4237298	Symbol	link_count		4237195						
ANR	4237299	Symbol	name		4237195						
ANR	4237300	Symbol	count		4237195						
ANR	4237301	Symbol	D_ALWAYS		4237195						
ANR	4237302	Symbol	Spool		4237195						
ANR	4237303	Symbol	path . Value		4237195						
ANR	4237304	Symbol	TRUE		4237195						
ANR	4237305	Symbol	FALSE		4237195						
ANR	4237306	Function	is_ckpt_file	477:0:14717:14865							
ANR	4237307	FunctionDef	is_ckpt_file (const char * name)		4237306	0					
ANR	4237308	CompoundStatement		479:0:14758:14865	4237306	0					
ANR	4237309	IfStatement	"if ( strstr ( name , ""cluster"" ) )"		4237306	0					
ANR	4237310	Condition	"strstr ( name , ""cluster"" )"	481:5:14766:14787	4237306	0	True				
ANR	4237311	CallExpression	"strstr ( name , ""cluster"" )"		4237306	0					
ANR	4237312	Callee	strstr		4237306	0					
ANR	4237313	Identifier	strstr		4237306	0					
ANR	4237314	ArgumentList	name		4237306	1					
ANR	4237315	Argument	name		4237306	0					
ANR	4237316	Identifier	name		4237306	0					
ANR	4237317	Argument	"""cluster"""		4237306	1					
ANR	4237318	PrimaryExpression	"""cluster"""		4237306	0					
ANR	4237319	CompoundStatement		3:30:32:32	4237306	1					
ANR	4237320	ReturnStatement	return is_v3_ckpt ( name ) ;	482:2:14795:14820	4237306	0	True				
ANR	4237321	CallExpression	is_v3_ckpt ( name )		4237306	0					
ANR	4237322	Callee	is_v3_ckpt		4237306	0					
ANR	4237323	Identifier	is_v3_ckpt		4237306	0					
ANR	4237324	ArgumentList	name		4237306	1					
ANR	4237325	Argument	name		4237306	0					
ANR	4237326	Identifier	name		4237306	0					
ANR	4237327	ElseStatement	else		4237306	0					
ANR	4237328	CompoundStatement		5:8:71:71	4237306	0					
ANR	4237329	ReturnStatement	return is_v2_ckpt ( name ) ;	484:2:14834:14859	4237306	0	True				
ANR	4237330	CallExpression	is_v2_ckpt ( name )		4237306	0					
ANR	4237331	Callee	is_v2_ckpt		4237306	0					
ANR	4237332	Identifier	is_v2_ckpt		4237306	0					
ANR	4237333	ArgumentList	name		4237306	1					
ANR	4237334	Argument	name		4237306	0					
ANR	4237335	Identifier	name		4237306	0					
ANR	4237336	ReturnType	BOOLEAN		4237306	1					
ANR	4237337	Identifier	is_ckpt_file		4237306	2					
ANR	4237338	ParameterList	const char * name		4237306	3					
ANR	4237339	Parameter	const char * name	478:14:14739:14754	4237306	0	True				
ANR	4237340	ParameterType	const char *		4237306	0					
ANR	4237341	Identifier	name		4237306	1					
ANR	4237342	CFGEntryNode	ENTRY		4237306		True				
ANR	4237343	CFGExitNode	EXIT		4237306		True				
ANR	4237344	Symbol	strstr		4237306						
ANR	4237345	Symbol	is_v3_ckpt		4237306						
ANR	4237346	Symbol	name		4237306						
ANR	4237347	Symbol	is_v2_ckpt		4237306						
ANR	4237348	Function	grab_val	496:0:15123:15295							
ANR	4237349	FunctionDef	"grab_val (const char * str , const char * pattern)"		4237348	0					
ANR	4237350	CompoundStatement		498:0:15183:15295	4237348	0					
ANR	4237351	IdentifierDeclStatement	char const * ptr ;	499:1:15186:15201	4237348	0	True				
ANR	4237352	IdentifierDecl	* ptr		4237348	0					
ANR	4237353	IdentifierDeclType	char const *		4237348	0					
ANR	4237354	Identifier	ptr		4237348	1					
ANR	4237355	IfStatement	"if ( ( ptr = strstr ( str , pattern ) ) )"		4237348	1					
ANR	4237356	Condition	"ptr = strstr ( str , pattern )"	501:5:15209:15235	4237348	0	True				
ANR	4237357	AssignmentExpression	"ptr = strstr ( str , pattern )"		4237348	0		=			
ANR	4237358	Identifier	ptr		4237348	0					
ANR	4237359	CallExpression	"strstr ( str , pattern )"		4237348	1					
ANR	4237360	Callee	strstr		4237348	0					
ANR	4237361	Identifier	strstr		4237348	0					
ANR	4237362	ArgumentList	str		4237348	1					
ANR	4237363	Argument	str		4237348	0					
ANR	4237364	Identifier	str		4237348	0					
ANR	4237365	Argument	pattern		4237348	1					
ANR	4237366	Identifier	pattern		4237348	0					
ANR	4237367	CompoundStatement		4:35:55:55	4237348	1					
ANR	4237368	ReturnStatement	return atoi ( ptr + strlen ( pattern ) ) ;	502:2:15243:15278	4237348	0	True				
ANR	4237369	CallExpression	atoi ( ptr + strlen ( pattern ) )		4237348	0					
ANR	4237370	Callee	atoi		4237348	0					
ANR	4237371	Identifier	atoi		4237348	0					
ANR	4237372	ArgumentList	ptr + strlen ( pattern )		4237348	1					
ANR	4237373	Argument	ptr + strlen ( pattern )		4237348	0					
ANR	4237374	AdditiveExpression	ptr + strlen ( pattern )		4237348	0		+			
ANR	4237375	Identifier	ptr		4237348	0					
ANR	4237376	CallExpression	strlen ( pattern )		4237348	1					
ANR	4237377	Callee	strlen		4237348	0					
ANR	4237378	Identifier	strlen		4237348	0					
ANR	4237379	ArgumentList	pattern		4237348	1					
ANR	4237380	Argument	pattern		4237348	0					
ANR	4237381	Identifier	pattern		4237348	0					
ANR	4237382	ReturnStatement	return - 1 ;	504:1:15284:15293	4237348	2	True				
ANR	4237383	UnaryOperationExpression	- 1		4237348	0					
ANR	4237384	UnaryOperator	-		4237348	0					
ANR	4237385	PrimaryExpression	1		4237348	1					
ANR	4237386	ReturnType	inline int		4237348	1					
ANR	4237387	Identifier	grab_val		4237348	2					
ANR	4237388	ParameterList	"const char * str , const char * pattern"		4237348	3					
ANR	4237389	Parameter	const char * str	497:10:15144:15158	4237348	0	True				
ANR	4237390	ParameterType	const char *		4237348	0					
ANR	4237391	Identifier	str		4237348	1					
ANR	4237392	Parameter	const char * pattern	497:27:15161:15179	4237348	1	True				
ANR	4237393	ParameterType	const char *		4237348	0					
ANR	4237394	Identifier	pattern		4237348	1					
ANR	4237395	CFGEntryNode	ENTRY		4237348		True				
ANR	4237396	CFGExitNode	EXIT		4237348		True				
ANR	4237397	Symbol	str		4237348						
ANR	4237398	Symbol	atoi		4237348						
ANR	4237399	Symbol	strlen		4237348						
ANR	4237400	Symbol	strstr		4237348						
ANR	4237401	Symbol	pattern		4237348						
ANR	4237402	Symbol	ptr		4237348						
ANR	4237403	Function	is_v2_ckpt	517:0:15656:15904							
ANR	4237404	FunctionDef	is_v2_ckpt (const char * name)		4237403	0					
ANR	4237405	CompoundStatement		519:0:15695:15904	4237403	0					
ANR	4237406	IdentifierDeclStatement	int cluster ;	520:1:15698:15710	4237403	0	True				
ANR	4237407	IdentifierDecl	cluster		4237403	0					
ANR	4237408	IdentifierDeclType	int		4237403	0					
ANR	4237409	Identifier	cluster		4237403	1					
ANR	4237410	IdentifierDeclStatement	int proc ;	521:1:15713:15722	4237403	1	True				
ANR	4237411	IdentifierDecl	proc		4237403	0					
ANR	4237412	IdentifierDeclType	int		4237403	0					
ANR	4237413	Identifier	proc		4237403	1					
ANR	4237414	ExpressionStatement	"cluster = grab_val ( name , ""job"" )"	523:1:15726:15759	4237403	2	True				
ANR	4237415	AssignmentExpression	"cluster = grab_val ( name , ""job"" )"		4237403	0		=			
ANR	4237416	Identifier	cluster		4237403	0					
ANR	4237417	CallExpression	"grab_val ( name , ""job"" )"		4237403	1					
ANR	4237418	Callee	grab_val		4237403	0					
ANR	4237419	Identifier	grab_val		4237403	0					
ANR	4237420	ArgumentList	name		4237403	1					
ANR	4237421	Argument	name		4237403	0					
ANR	4237422	Identifier	name		4237403	0					
ANR	4237423	Argument	"""job"""		4237403	1					
ANR	4237424	PrimaryExpression	"""job"""		4237403	0					
ANR	4237425	ExpressionStatement	"proc = grab_val ( name , "".ckpt."" )"	524:1:15762:15795	4237403	3	True				
ANR	4237426	AssignmentExpression	"proc = grab_val ( name , "".ckpt."" )"		4237403	0		=			
ANR	4237427	Identifier	proc		4237403	0					
ANR	4237428	CallExpression	"grab_val ( name , "".ckpt."" )"		4237403	1					
ANR	4237429	Callee	grab_val		4237403	0					
ANR	4237430	Identifier	grab_val		4237403	0					
ANR	4237431	ArgumentList	name		4237403	1					
ANR	4237432	Argument	name		4237403	0					
ANR	4237433	Identifier	name		4237403	0					
ANR	4237434	Argument	""".ckpt."""		4237403	1					
ANR	4237435	PrimaryExpression	""".ckpt."""		4237403	0					
ANR	4237436	IfStatement	if ( proc < 0 )		4237403	4					
ANR	4237437	Condition	proc < 0	526:5:15803:15810	4237403	0	True				
ANR	4237438	RelationalExpression	proc < 0		4237403	0		<			
ANR	4237439	Identifier	proc		4237403	0					
ANR	4237440	PrimaryExpression	0		4237403	1					
ANR	4237441	CompoundStatement		8:16:118:118	4237403	1					
ANR	4237442	ReturnStatement	return cluster_exists ( cluster ) ;	527:2:15818:15850	4237403	0	True				
ANR	4237443	CallExpression	cluster_exists ( cluster )		4237403	0					
ANR	4237444	Callee	cluster_exists		4237403	0					
ANR	4237445	Identifier	cluster_exists		4237403	0					
ANR	4237446	ArgumentList	cluster		4237403	1					
ANR	4237447	Argument	cluster		4237403	0					
ANR	4237448	Identifier	cluster		4237403	0					
ANR	4237449	ElseStatement	else		4237403	0					
ANR	4237450	CompoundStatement		10:8:164:164	4237403	0					
ANR	4237451	ReturnStatement	"return proc_exists ( cluster , proc ) ;"	529:2:15864:15899	4237403	0	True				
ANR	4237452	CallExpression	"proc_exists ( cluster , proc )"		4237403	0					
ANR	4237453	Callee	proc_exists		4237403	0					
ANR	4237454	Identifier	proc_exists		4237403	0					
ANR	4237455	ArgumentList	cluster		4237403	1					
ANR	4237456	Argument	cluster		4237403	0					
ANR	4237457	Identifier	cluster		4237403	0					
ANR	4237458	Argument	proc		4237403	1					
ANR	4237459	Identifier	proc		4237403	0					
ANR	4237460	ReturnType	BOOLEAN		4237403	1					
ANR	4237461	Identifier	is_v2_ckpt		4237403	2					
ANR	4237462	ParameterList	const char * name		4237403	3					
ANR	4237463	Parameter	const char * name	518:12:15676:15691	4237403	0	True				
ANR	4237464	ParameterType	const char *		4237403	0					
ANR	4237465	Identifier	name		4237403	1					
ANR	4237466	CFGEntryNode	ENTRY		4237403		True				
ANR	4237467	CFGExitNode	EXIT		4237403		True				
ANR	4237468	Symbol	cluster		4237403						
ANR	4237469	Symbol	proc		4237403						
ANR	4237470	Symbol	name		4237403						
ANR	4237471	Symbol	grab_val		4237403						
ANR	4237472	Symbol	cluster_exists		4237403						
ANR	4237473	Symbol	proc_exists		4237403						
ANR	4237474	Function	is_v3_ckpt	543:0:16294:16604							
ANR	4237475	FunctionDef	is_v3_ckpt (const char * name)		4237474	0					
ANR	4237476	CompoundStatement		545:0:16333:16604	4237474	0					
ANR	4237477	IdentifierDeclStatement	int cluster ;	546:1:16336:16348	4237474	0	True				
ANR	4237478	IdentifierDecl	cluster		4237474	0					
ANR	4237479	IdentifierDeclType	int		4237474	0					
ANR	4237480	Identifier	cluster		4237474	1					
ANR	4237481	IdentifierDeclStatement	int proc ;	547:1:16351:16360	4237474	1	True				
ANR	4237482	IdentifierDecl	proc		4237474	0					
ANR	4237483	IdentifierDeclType	int		4237474	0					
ANR	4237484	Identifier	proc		4237474	1					
ANR	4237485	IdentifierDeclStatement	int subproc ;	548:1:16363:16375	4237474	2	True				
ANR	4237486	IdentifierDecl	subproc		4237474	0					
ANR	4237487	IdentifierDeclType	int		4237474	0					
ANR	4237488	Identifier	subproc		4237474	1					
ANR	4237489	ExpressionStatement	"cluster = grab_val ( name , ""cluster"" )"	550:1:16379:16416	4237474	3	True				
ANR	4237490	AssignmentExpression	"cluster = grab_val ( name , ""cluster"" )"		4237474	0		=			
ANR	4237491	Identifier	cluster		4237474	0					
ANR	4237492	CallExpression	"grab_val ( name , ""cluster"" )"		4237474	1					
ANR	4237493	Callee	grab_val		4237474	0					
ANR	4237494	Identifier	grab_val		4237474	0					
ANR	4237495	ArgumentList	name		4237474	1					
ANR	4237496	Argument	name		4237474	0					
ANR	4237497	Identifier	name		4237474	0					
ANR	4237498	Argument	"""cluster"""		4237474	1					
ANR	4237499	PrimaryExpression	"""cluster"""		4237474	0					
ANR	4237500	ExpressionStatement	"proc = grab_val ( name , "".proc"" )"	551:1:16419:16451	4237474	4	True				
ANR	4237501	AssignmentExpression	"proc = grab_val ( name , "".proc"" )"		4237474	0		=			
ANR	4237502	Identifier	proc		4237474	0					
ANR	4237503	CallExpression	"grab_val ( name , "".proc"" )"		4237474	1					
ANR	4237504	Callee	grab_val		4237474	0					
ANR	4237505	Identifier	grab_val		4237474	0					
ANR	4237506	ArgumentList	name		4237474	1					
ANR	4237507	Argument	name		4237474	0					
ANR	4237508	Identifier	name		4237474	0					
ANR	4237509	Argument	""".proc"""		4237474	1					
ANR	4237510	PrimaryExpression	""".proc"""		4237474	0					
ANR	4237511	ExpressionStatement	"subproc = grab_val ( name , "".subproc"" )"	552:1:16454:16492	4237474	5	True				
ANR	4237512	AssignmentExpression	"subproc = grab_val ( name , "".subproc"" )"		4237474	0		=			
ANR	4237513	Identifier	subproc		4237474	0					
ANR	4237514	CallExpression	"grab_val ( name , "".subproc"" )"		4237474	1					
ANR	4237515	Callee	grab_val		4237474	0					
ANR	4237516	Identifier	grab_val		4237474	0					
ANR	4237517	ArgumentList	name		4237474	1					
ANR	4237518	Argument	name		4237474	0					
ANR	4237519	Identifier	name		4237474	0					
ANR	4237520	Argument	""".subproc"""		4237474	1					
ANR	4237521	PrimaryExpression	""".subproc"""		4237474	0					
ANR	4237522	IfStatement	if ( proc < 0 )		4237474	6					
ANR	4237523	Condition	proc < 0	555:5:16503:16510	4237474	0	True				
ANR	4237524	RelationalExpression	proc < 0		4237474	0		<			
ANR	4237525	Identifier	proc		4237474	0					
ANR	4237526	PrimaryExpression	0		4237474	1					
ANR	4237527	CompoundStatement		11:16:180:180	4237474	1					
ANR	4237528	ReturnStatement	return cluster_exists ( cluster ) ;	556:2:16518:16550	4237474	0	True				
ANR	4237529	CallExpression	cluster_exists ( cluster )		4237474	0					
ANR	4237530	Callee	cluster_exists		4237474	0					
ANR	4237531	Identifier	cluster_exists		4237474	0					
ANR	4237532	ArgumentList	cluster		4237474	1					
ANR	4237533	Argument	cluster		4237474	0					
ANR	4237534	Identifier	cluster		4237474	0					
ANR	4237535	ElseStatement	else		4237474	0					
ANR	4237536	CompoundStatement		13:8:226:226	4237474	0					
ANR	4237537	ReturnStatement	"return proc_exists ( cluster , proc ) ;"	558:2:16564:16599	4237474	0	True				
ANR	4237538	CallExpression	"proc_exists ( cluster , proc )"		4237474	0					
ANR	4237539	Callee	proc_exists		4237474	0					
ANR	4237540	Identifier	proc_exists		4237474	0					
ANR	4237541	ArgumentList	cluster		4237474	1					
ANR	4237542	Argument	cluster		4237474	0					
ANR	4237543	Identifier	cluster		4237474	0					
ANR	4237544	Argument	proc		4237474	1					
ANR	4237545	Identifier	proc		4237474	0					
ANR	4237546	ReturnType	BOOLEAN		4237474	1					
ANR	4237547	Identifier	is_v3_ckpt		4237474	2					
ANR	4237548	ParameterList	const char * name		4237474	3					
ANR	4237549	Parameter	const char * name	544:12:16314:16329	4237474	0	True				
ANR	4237550	ParameterType	const char *		4237474	0					
ANR	4237551	Identifier	name		4237474	1					
ANR	4237552	CFGEntryNode	ENTRY		4237474		True				
ANR	4237553	CFGExitNode	EXIT		4237474		True				
ANR	4237554	Symbol	cluster		4237474						
ANR	4237555	Symbol	proc		4237474						
ANR	4237556	Symbol	name		4237474						
ANR	4237557	Symbol	grab_val		4237474						
ANR	4237558	Symbol	cluster_exists		4237474						
ANR	4237559	Symbol	subproc		4237474						
ANR	4237560	Symbol	proc_exists		4237474						
ANR	4237561	Function	is_myproxy_file	566:0:16703:17032							
ANR	4237562	FunctionDef	is_myproxy_file (const char * name)		4237561	0					
ANR	4237563	CompoundStatement		568:0:16747:17032	4237561	0					
ANR	4237564	IdentifierDeclStatement	"int cluster , proc ;"	569:1:16750:16767	4237561	0	True				
ANR	4237565	IdentifierDecl	cluster		4237561	0					
ANR	4237566	IdentifierDeclType	int		4237561	0					
ANR	4237567	Identifier	cluster		4237561	1					
ANR	4237568	IdentifierDecl	proc		4237561	1					
ANR	4237569	IdentifierDeclType	int		4237561	0					
ANR	4237570	Identifier	proc		4237561	1					
ANR	4237571	IdentifierDeclStatement	"int rc = sscanf ( name , ""mpp.%d.%d"" , & cluster , & proc ) ;"	573:1:16902:16955	4237561	1	True				
ANR	4237572	IdentifierDecl	"rc = sscanf ( name , ""mpp.%d.%d"" , & cluster , & proc )"		4237561	0					
ANR	4237573	IdentifierDeclType	int		4237561	0					
ANR	4237574	Identifier	rc		4237561	1					
ANR	4237575	AssignmentExpression	"rc = sscanf ( name , ""mpp.%d.%d"" , & cluster , & proc )"		4237561	2		=			
ANR	4237576	Identifier	rc		4237561	0					
ANR	4237577	CallExpression	"sscanf ( name , ""mpp.%d.%d"" , & cluster , & proc )"		4237561	1					
ANR	4237578	Callee	sscanf		4237561	0					
ANR	4237579	Identifier	sscanf		4237561	0					
ANR	4237580	ArgumentList	name		4237561	1					
ANR	4237581	Argument	name		4237561	0					
ANR	4237582	Identifier	name		4237561	0					
ANR	4237583	Argument	"""mpp.%d.%d"""		4237561	1					
ANR	4237584	PrimaryExpression	"""mpp.%d.%d"""		4237561	0					
ANR	4237585	Argument	& cluster		4237561	2					
ANR	4237586	UnaryOperationExpression	& cluster		4237561	0					
ANR	4237587	UnaryOperator	&		4237561	0					
ANR	4237588	Identifier	cluster		4237561	1					
ANR	4237589	Argument	& proc		4237561	3					
ANR	4237590	UnaryOperationExpression	& proc		4237561	0					
ANR	4237591	UnaryOperator	&		4237561	0					
ANR	4237592	Identifier	proc		4237561	1					
ANR	4237593	IfStatement	if ( rc != 2 )		4237561	2					
ANR	4237594	Condition	rc != 2	574:6:16963:16969	4237561	0	True				
ANR	4237595	EqualityExpression	rc != 2		4237561	0		!=			
ANR	4237596	Identifier	rc		4237561	0					
ANR	4237597	PrimaryExpression	2		4237561	1					
ANR	4237598	CompoundStatement		7:16:225:225	4237561	1					
ANR	4237599	ReturnStatement	return FALSE ;	575:2:16977:16989	4237561	0	True				
ANR	4237600	Identifier	FALSE		4237561	0					
ANR	4237601	ReturnStatement	"return proc_exists ( cluster , proc ) ;"	577:1:16995:17030	4237561	3	True				
ANR	4237602	CallExpression	"proc_exists ( cluster , proc )"		4237561	0					
ANR	4237603	Callee	proc_exists		4237561	0					
ANR	4237604	Identifier	proc_exists		4237561	0					
ANR	4237605	ArgumentList	cluster		4237561	1					
ANR	4237606	Argument	cluster		4237561	0					
ANR	4237607	Identifier	cluster		4237561	0					
ANR	4237608	Argument	proc		4237561	1					
ANR	4237609	Identifier	proc		4237561	0					
ANR	4237610	ReturnType	BOOLEAN		4237561	1					
ANR	4237611	Identifier	is_myproxy_file		4237561	2					
ANR	4237612	ParameterList	const char * name		4237561	3					
ANR	4237613	Parameter	const char * name	567:17:16728:16743	4237561	0	True				
ANR	4237614	ParameterType	const char *		4237561	0					
ANR	4237615	Identifier	name		4237561	1					
ANR	4237616	CFGEntryNode	ENTRY		4237561		True				
ANR	4237617	CFGExitNode	EXIT		4237561		True				
ANR	4237618	Symbol	cluster		4237561						
ANR	4237619	Symbol	rc		4237561						
ANR	4237620	Symbol	proc		4237561						
ANR	4237621	Symbol	sscanf		4237561						
ANR	4237622	Symbol	name		4237561						
ANR	4237623	Symbol	& cluster		4237561						
ANR	4237624	Symbol	FALSE		4237561						
ANR	4237625	Symbol	proc_exists		4237561						
ANR	4237626	Symbol	& proc		4237561						
ANR	4237627	Function	is_ccb_file	584:0:17131:17245							
ANR	4237628	FunctionDef	is_ccb_file (const char * name)		4237627	0					
ANR	4237629	CompoundStatement		586:0:17171:17245	4237627	0					
ANR	4237630	IfStatement	"if ( strstr ( name , "".ccb_reconnect"" ) )"		4237627	0					
ANR	4237631	Condition	"strstr ( name , "".ccb_reconnect"" )"	587:5:17178:17206	4237627	0	True				
ANR	4237632	CallExpression	"strstr ( name , "".ccb_reconnect"" )"		4237627	0					
ANR	4237633	Callee	strstr		4237627	0					
ANR	4237634	Identifier	strstr		4237627	0					
ANR	4237635	ArgumentList	name		4237627	1					
ANR	4237636	Argument	name		4237627	0					
ANR	4237637	Identifier	name		4237627	0					
ANR	4237638	Argument	""".ccb_reconnect"""		4237627	1					
ANR	4237639	PrimaryExpression	""".ccb_reconnect"""		4237627	0					
ANR	4237640	CompoundStatement		2:37:38:38	4237627	1					
ANR	4237641	ReturnStatement	return TRUE ;	588:2:17214:17225	4237627	0	True				
ANR	4237642	Identifier	TRUE		4237627	0					
ANR	4237643	ReturnStatement	return FALSE ;	590:1:17231:17243	4237627	1	True				
ANR	4237644	Identifier	FALSE		4237627	0					
ANR	4237645	ReturnType	BOOLEAN		4237627	1					
ANR	4237646	Identifier	is_ccb_file		4237627	2					
ANR	4237647	ParameterList	const char * name		4237627	3					
ANR	4237648	Parameter	const char * name	585:13:17152:17167	4237627	0	True				
ANR	4237649	ParameterType	const char *		4237627	0					
ANR	4237650	Identifier	name		4237627	1					
ANR	4237651	CFGEntryNode	ENTRY		4237627		True				
ANR	4237652	CFGExitNode	EXIT		4237627		True				
ANR	4237653	Symbol	strstr		4237627						
ANR	4237654	Symbol	name		4237627						
ANR	4237655	Symbol	TRUE		4237627						
ANR	4237656	Symbol	FALSE		4237627						
ANR	4237657	Function	cluster_exists	596:0:17325:17401							
ANR	4237658	FunctionDef	cluster_exists (int cluster)		4237657	0					
ANR	4237659	CompoundStatement		598:0:17363:17401	4237657	0					
ANR	4237660	ReturnStatement	"return proc_exists ( cluster , - 1 ) ;"	599:1:17366:17399	4237657	0	True				
ANR	4237661	CallExpression	"proc_exists ( cluster , - 1 )"		4237657	0					
ANR	4237662	Callee	proc_exists		4237657	0					
ANR	4237663	Identifier	proc_exists		4237657	0					
ANR	4237664	ArgumentList	cluster		4237657	1					
ANR	4237665	Argument	cluster		4237657	0					
ANR	4237666	Identifier	cluster		4237657	0					
ANR	4237667	Argument	- 1		4237657	1					
ANR	4237668	UnaryOperationExpression	- 1		4237657	0					
ANR	4237669	UnaryOperator	-		4237657	0					
ANR	4237670	PrimaryExpression	1		4237657	1					
ANR	4237671	ReturnType	BOOLEAN		4237657	1					
ANR	4237672	Identifier	cluster_exists		4237657	2					
ANR	4237673	ParameterList	int cluster		4237657	3					
ANR	4237674	Parameter	int cluster	597:16:17349:17359	4237657	0	True				
ANR	4237675	ParameterType	int		4237657	0					
ANR	4237676	Identifier	cluster		4237657	1					
ANR	4237677	CFGEntryNode	ENTRY		4237657		True				
ANR	4237678	CFGExitNode	EXIT		4237657		True				
ANR	4237679	Symbol	cluster		4237657						
ANR	4237680	Symbol	proc_exists		4237657						
ANR	4237681	Function	proc_exists	606:0:17494:17653							
ANR	4237682	FunctionDef	"proc_exists (int cluster , int proc)"		4237681	0					
ANR	4237683	CompoundStatement		608:0:17539:17653	4237681	0					
ANR	4237684	IdentifierDeclStatement	ClassAd * ad ;	609:1:17542:17553	4237681	0	True				
ANR	4237685	IdentifierDecl	* ad		4237681	0					
ANR	4237686	IdentifierDeclType	ClassAd *		4237681	0					
ANR	4237687	Identifier	ad		4237681	1					
ANR	4237688	IfStatement	"if ( ( ad = GetJobAd ( cluster , proc ) ) != NULL )"		4237681	1					
ANR	4237689	Condition	"( ad = GetJobAd ( cluster , proc ) ) != NULL"	611:5:17561:17597	4237681	0	True				
ANR	4237690	EqualityExpression	"( ad = GetJobAd ( cluster , proc ) ) != NULL"		4237681	0		!=			
ANR	4237691	AssignmentExpression	"ad = GetJobAd ( cluster , proc )"		4237681	0		=			
ANR	4237692	Identifier	ad		4237681	0					
ANR	4237693	CallExpression	"GetJobAd ( cluster , proc )"		4237681	1					
ANR	4237694	Callee	GetJobAd		4237681	0					
ANR	4237695	Identifier	GetJobAd		4237681	0					
ANR	4237696	ArgumentList	cluster		4237681	1					
ANR	4237697	Argument	cluster		4237681	0					
ANR	4237698	Identifier	cluster		4237681	0					
ANR	4237699	Argument	proc		4237681	1					
ANR	4237700	Identifier	proc		4237681	0					
ANR	4237701	Identifier	NULL		4237681	1					
ANR	4237702	CompoundStatement		4:44:60:60	4237681	1					
ANR	4237703	ExpressionStatement	FreeJobAd ( ad )	612:2:17604:17617	4237681	0	True				
ANR	4237704	CallExpression	FreeJobAd ( ad )		4237681	0					
ANR	4237705	Callee	FreeJobAd		4237681	0					
ANR	4237706	Identifier	FreeJobAd		4237681	0					
ANR	4237707	ArgumentList	ad		4237681	1					
ANR	4237708	Argument	ad		4237681	0					
ANR	4237709	Identifier	ad		4237681	0					
ANR	4237710	ReturnStatement	return TRUE ;	613:2:17621:17632	4237681	1	True				
ANR	4237711	Identifier	TRUE		4237681	0					
ANR	4237712	ReturnStatement	return FALSE ;	616:1:17639:17651	4237681	2	True				
ANR	4237713	Identifier	FALSE		4237681	0					
ANR	4237714	ReturnType	BOOLEAN		4237681	1					
ANR	4237715	Identifier	proc_exists		4237681	2					
ANR	4237716	ParameterList	"int cluster , int proc"		4237681	3					
ANR	4237717	Parameter	int cluster	607:13:17515:17525	4237681	0	True				
ANR	4237718	ParameterType	int		4237681	0					
ANR	4237719	Identifier	cluster		4237681	1					
ANR	4237720	Parameter	int proc	607:26:17528:17535	4237681	1	True				
ANR	4237721	ParameterType	int		4237681	0					
ANR	4237722	Identifier	proc		4237681	1					
ANR	4237723	CFGEntryNode	ENTRY		4237681		True				
ANR	4237724	CFGExitNode	EXIT		4237681		True				
ANR	4237725	Symbol	cluster		4237681						
ANR	4237726	Symbol	proc		4237681						
ANR	4237727	Symbol	ad		4237681						
ANR	4237728	Symbol	NULL		4237681						
ANR	4237729	Symbol	TRUE		4237681						
ANR	4237730	Symbol	FALSE		4237681						
ANR	4237731	Symbol	GetJobAd		4237681						
ANR	4237732	Function	check_execute_dir	622:0:17717:19165							
ANR	4237733	FunctionDef	check_execute_dir ()		4237732	0					
ANR	4237734	CompoundStatement		624:0:17742:19165	4237732	0					
ANR	4237735	IdentifierDeclStatement	time_t now = time ( NULL ) ;	625:1:17745:17768	4237732	0	True				
ANR	4237736	IdentifierDecl	now = time ( NULL )		4237732	0					
ANR	4237737	IdentifierDeclType	time_t		4237732	0					
ANR	4237738	Identifier	now		4237732	1					
ANR	4237739	AssignmentExpression	now = time ( NULL )		4237732	2		=			
ANR	4237740	Identifier	now		4237732	0					
ANR	4237741	CallExpression	time ( NULL )		4237732	1					
ANR	4237742	Callee	time		4237732	0					
ANR	4237743	Identifier	time		4237732	0					
ANR	4237744	ArgumentList	NULL		4237732	1					
ANR	4237745	Argument	NULL		4237732	0					
ANR	4237746	Identifier	NULL		4237732	0					
ANR	4237747	IdentifierDeclStatement	const char * f ;	626:1:17771:17784	4237732	1	True				
ANR	4237748	IdentifierDecl	* f		4237732	0					
ANR	4237749	IdentifierDeclType	const char *		4237732	0					
ANR	4237750	Identifier	f		4237732	1					
ANR	4237751	IdentifierDeclStatement	bool busy ;	627:1:17787:17796	4237732	2	True				
ANR	4237752	IdentifierDecl	busy		4237732	0					
ANR	4237753	IdentifierDeclType	bool		4237732	0					
ANR	4237754	Identifier	busy		4237732	1					
ANR	4237755	IdentifierDeclStatement	State s = get_machine_state ( ) ;	628:1:17799:17828	4237732	3	True				
ANR	4237756	IdentifierDecl	s = get_machine_state ( )		4237732	0					
ANR	4237757	IdentifierDeclType	State		4237732	0					
ANR	4237758	Identifier	s		4237732	1					
ANR	4237759	AssignmentExpression	s = get_machine_state ( )		4237732	2		=			
ANR	4237760	Identifier	s		4237732	0					
ANR	4237761	CallExpression	get_machine_state ( )		4237732	1					
ANR	4237762	Callee	get_machine_state		4237732	0					
ANR	4237763	Identifier	get_machine_state		4237732	0					
ANR	4237764	ArgumentList			4237732	1					
ANR	4237765	SwitchStatement	switch ( s )		4237732	4					
ANR	4237766	Condition	s	635:9:18115:18115	4237732	0	True				
ANR	4237767	Identifier	s		4237732	0					
ANR	4237768	CompoundStatement		12:13:376:376	4237732	1					
ANR	4237769	Label	case owner_state :	636:1:18122:18138	4237732	0	True				
ANR	4237770	Identifier	owner_state		4237732	0					
ANR	4237771	Label	case unclaimed_state :	637:1:18142:18162	4237732	1	True				
ANR	4237772	Identifier	unclaimed_state		4237732	0					
ANR	4237773	Label	case matched_state :	638:1:18165:18183	4237732	2	True				
ANR	4237774	Identifier	matched_state		4237732	0					
ANR	4237775	ExpressionStatement	busy = false	639:2:18188:18200	4237732	3	True				
ANR	4237776	AssignmentExpression	busy = false		4237732	0		=			
ANR	4237777	Identifier	busy		4237732	0					
ANR	4237778	Identifier	false		4237732	1					
ANR	4237779	BreakStatement	break ;	640:2:18204:18209	4237732	4	True				
ANR	4237780	Label	case claimed_state :	641:1:18212:18230	4237732	5	True				
ANR	4237781	Identifier	claimed_state		4237732	0					
ANR	4237782	Label	case preempting_state :	642:1:18233:18254	4237732	6	True				
ANR	4237783	Identifier	preempting_state		4237732	0					
ANR	4237784	ExpressionStatement	busy = true	643:2:18258:18269	4237732	7	True				
ANR	4237785	AssignmentExpression	busy = true		4237732	0		=			
ANR	4237786	Identifier	busy		4237732	0					
ANR	4237787	Identifier	true		4237732	1					
ANR	4237788	BreakStatement	break ;	644:2:18273:18278	4237732	8	True				
ANR	4237789	Label	default :	645:1:18281:18288	4237732	9	True				
ANR	4237790	Identifier	default		4237732	0					
ANR	4237791	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error getting startd state, not cleaning execute directory.\\n"" )"	646:2:18292:18382	4237732	10	True				
ANR	4237792	CallExpression	"dprintf ( D_ALWAYS , ""Error getting startd state, not cleaning execute directory.\\n"" )"		4237732	0					
ANR	4237793	Callee	dprintf		4237732	0					
ANR	4237794	Identifier	dprintf		4237732	0					
ANR	4237795	ArgumentList	D_ALWAYS		4237732	1					
ANR	4237796	Argument	D_ALWAYS		4237732	0					
ANR	4237797	Identifier	D_ALWAYS		4237732	0					
ANR	4237798	Argument	"""Error getting startd state, not cleaning execute directory.\\n"""		4237732	1					
ANR	4237799	PrimaryExpression	"""Error getting startd state, not cleaning execute directory.\\n"""		4237732	0					
ANR	4237800	ReturnStatement	return ;	648:2:18386:18392	4237732	11	True				
ANR	4237801	ExpressionStatement	ExecuteDirs . rewind ( )	651:1:18399:18419	4237732	5	True				
ANR	4237802	CallExpression	ExecuteDirs . rewind ( )		4237732	0					
ANR	4237803	Callee	ExecuteDirs . rewind		4237732	0					
ANR	4237804	MemberAccess	ExecuteDirs . rewind		4237732	0					
ANR	4237805	Identifier	ExecuteDirs		4237732	0					
ANR	4237806	Identifier	rewind		4237732	1					
ANR	4237807	ArgumentList			4237732	1					
ANR	4237808	IdentifierDeclStatement	char const * Execute ;	652:1:18422:18441	4237732	6	True				
ANR	4237809	IdentifierDecl	* Execute		4237732	0					
ANR	4237810	IdentifierDeclType	char const *		4237732	0					
ANR	4237811	Identifier	Execute		4237732	1					
ANR	4237812	WhileStatement	while ( ( Execute = ExecuteDirs . next ( ) ) )		4237732	7					
ANR	4237813	Condition	Execute = ExecuteDirs . next ( )	653:8:18451:18478	4237732	0	True				
ANR	4237814	AssignmentExpression	Execute = ExecuteDirs . next ( )		4237732	0		=			
ANR	4237815	Identifier	Execute		4237732	0					
ANR	4237816	CallExpression	ExecuteDirs . next ( )		4237732	1					
ANR	4237817	Callee	ExecuteDirs . next		4237732	0					
ANR	4237818	MemberAccess	ExecuteDirs . next		4237732	0					
ANR	4237819	Identifier	ExecuteDirs		4237732	0					
ANR	4237820	Identifier	next		4237732	1					
ANR	4237821	ArgumentList			4237732	1					
ANR	4237822	CompoundStatement		31:2:743:778	4237732	1					
ANR	4237823	IdentifierDeclStatement	"Directory dir ( Execute , PRIV_ROOT ) ;"	654:2:18486:18521	4237732	0	True				
ANR	4237824	IdentifierDecl	"dir ( Execute , PRIV_ROOT )"		4237732	0					
ANR	4237825	IdentifierDeclType	Directory		4237732	0					
ANR	4237826	Identifier	dir		4237732	1					
ANR	4237827	Expression	"Execute , PRIV_ROOT"		4237732	2					
ANR	4237828	Identifier	Execute		4237732	0					
ANR	4237829	Identifier	PRIV_ROOT		4237732	1					
ANR	4237830	WhileStatement	while ( ( f = dir . Next ( ) ) )		4237732	1					
ANR	4237831	Condition	f = dir . Next ( )	655:9:18532:18547	4237732	0	True				
ANR	4237832	AssignmentExpression	f = dir . Next ( )		4237732	0		=			
ANR	4237833	Identifier	f		4237732	0					
ANR	4237834	CallExpression	dir . Next ( )		4237732	1					
ANR	4237835	Callee	dir . Next		4237732	0					
ANR	4237836	MemberAccess	dir . Next		4237732	0					
ANR	4237837	Identifier	dir		4237732	0					
ANR	4237838	Identifier	Next		4237732	1					
ANR	4237839	ArgumentList			4237732	1					
ANR	4237840	CompoundStatement		32:28:808:808	4237732	1					
ANR	4237841	IfStatement	if ( busy )		4237732	0					
ANR	4237842	Condition	busy	656:7:18560:18563	4237732	0	True				
ANR	4237843	Identifier	busy		4237732	0					
ANR	4237844	CompoundStatement		33:14:824:824	4237732	1					
ANR	4237845	ExpressionStatement	"good_file ( Execute , f )"	657:4:18573:18596	4237732	0	True				
ANR	4237846	CallExpression	"good_file ( Execute , f )"		4237732	0					
ANR	4237847	Callee	good_file		4237732	0					
ANR	4237848	Identifier	good_file		4237732	0					
ANR	4237849	ArgumentList	Execute		4237732	1					
ANR	4237850	Argument	Execute		4237732	0					
ANR	4237851	Identifier	Execute		4237732	0					
ANR	4237852	Argument	f		4237732	1					
ANR	4237853	Identifier	f		4237732	0					
ANR	4237854	ElseStatement	else		4237732	0					
ANR	4237855	CompoundStatement		35:10:889:889	4237732	0					
ANR	4237856	IfStatement	if ( dir . GetCreateTime ( ) < now )		4237732	0					
ANR	4237857	Condition	dir . GetCreateTime ( ) < now	659:8:18642:18666	4237732	0	True				
ANR	4237858	RelationalExpression	dir . GetCreateTime ( ) < now		4237732	0		<			
ANR	4237859	CallExpression	dir . GetCreateTime ( )		4237732	0					
ANR	4237860	Callee	dir . GetCreateTime		4237732	0					
ANR	4237861	MemberAccess	dir . GetCreateTime		4237732	0					
ANR	4237862	Identifier	dir		4237732	0					
ANR	4237863	Identifier	GetCreateTime		4237732	1					
ANR	4237864	ArgumentList			4237732	1					
ANR	4237865	Identifier	now		4237732	1					
ANR	4237866	CompoundStatement		36:36:927:927	4237732	1					
ANR	4237867	ExpressionStatement	"bad_file ( Execute , f , dir )"	660:5:18677:18704	4237732	0	True				
ANR	4237868	CallExpression	"bad_file ( Execute , f , dir )"		4237732	0					
ANR	4237869	Callee	bad_file		4237732	0					
ANR	4237870	Identifier	bad_file		4237732	0					
ANR	4237871	ArgumentList	Execute		4237732	1					
ANR	4237872	Argument	Execute		4237732	0					
ANR	4237873	Identifier	Execute		4237732	0					
ANR	4237874	Argument	f		4237732	1					
ANR	4237875	Identifier	f		4237732	0					
ANR	4237876	Argument	dir		4237732	2					
ANR	4237877	Identifier	dir		4237732	0					
ANR	4237878	ElseStatement	else		4237732	0					
ANR	4237879	CompoundStatement		39:9:989:989	4237732	0					
ANR	4237880	Statement	dprintf	668:5:18982:18988	4237732	0	True				
ANR	4237881	Statement	(	668:12:18989:18989	4237732	1	True				
ANR	4237882	Statement	D_FULLDEBUG	668:13:18990:19000	4237732	2	True				
ANR	4237883	Statement	","	668:24:19001:19001	4237732	3	True				
ANR	4237884	Statement	"""In %s, found %s with recent """	668:26:19003:19032	4237732	4	True				
ANR	4237885	Statement	"""creation time.  Not removing.\\n"""	669:13:19047:19079	4237732	5	True				
ANR	4237886	Statement	","	669:46:19080:19080	4237732	6	True				
ANR	4237887	Statement	Execute	669:48:19082:19088	4237732	7	True				
ANR	4237888	Statement	","	669:55:19089:19089	4237732	8	True				
ANR	4237889	Statement	f	669:57:19091:19091	4237732	9	True				
ANR	4237890	Statement	)	669:59:19093:19093	4237732	10	True				
ANR	4237891	ExpressionStatement		669:60:19094:19094	4237732	11	True				
ANR	4237892	ExpressionStatement	"good_file ( Execute , f )"	670:5:19101:19124	4237732	12	True				
ANR	4237893	CallExpression	"good_file ( Execute , f )"		4237732	0					
ANR	4237894	Callee	good_file		4237732	0					
ANR	4237895	Identifier	good_file		4237732	0					
ANR	4237896	ArgumentList	Execute		4237732	1					
ANR	4237897	Argument	Execute		4237732	0					
ANR	4237898	Identifier	Execute		4237732	0					
ANR	4237899	Argument	f		4237732	1					
ANR	4237900	Identifier	f		4237732	0					
ANR	4237901	ReturnType	void		4237732	1					
ANR	4237902	Identifier	check_execute_dir		4237732	2					
ANR	4237903	ParameterList			4237732	3					
ANR	4237904	CFGEntryNode	ENTRY		4237732		True				
ANR	4237905	CFGExitNode	EXIT		4237732		True				
ANR	4237906	Symbol	NULL		4237732						
ANR	4237907	Symbol	Execute		4237732						
ANR	4237908	Symbol	f		4237732						
ANR	4237909	Symbol	false		4237732						
ANR	4237910	Symbol	D_ALWAYS		4237732						
ANR	4237911	Symbol	dir		4237732						
ANR	4237912	Symbol	ExecuteDirs . next		4237732						
ANR	4237913	Symbol	dir . Next		4237732						
ANR	4237914	Symbol	s		4237732						
ANR	4237915	Symbol	now		4237732						
ANR	4237916	Symbol	busy		4237732						
ANR	4237917	Symbol	true		4237732						
ANR	4237918	Symbol	time		4237732						
ANR	4237919	Symbol	ExecuteDirs		4237732						
ANR	4237920	Symbol	dir . GetCreateTime		4237732						
ANR	4237921	Symbol	get_machine_state		4237732						
ANR	4237922	Function	check_log_dir	681:0:19280:19575							
ANR	4237923	FunctionDef	check_log_dir ()		4237922	0					
ANR	4237924	CompoundStatement		683:0:19301:19575	4237922	0					
ANR	4237925	IdentifierDeclStatement	const char * f ;	684:1:19304:19317	4237922	0	True				
ANR	4237926	IdentifierDecl	* f		4237922	0					
ANR	4237927	IdentifierDeclType	const char *		4237922	0					
ANR	4237928	Identifier	f		4237922	1					
ANR	4237929	IdentifierDeclStatement	"Directory dir ( Log , PRIV_ROOT ) ;"	685:1:19320:19349	4237922	1	True				
ANR	4237930	IdentifierDecl	"dir ( Log , PRIV_ROOT )"		4237922	0					
ANR	4237931	IdentifierDeclType	Directory		4237922	0					
ANR	4237932	Identifier	dir		4237922	1					
ANR	4237933	Expression	"Log , PRIV_ROOT"		4237922	2					
ANR	4237934	Identifier	Log		4237922	0					
ANR	4237935	Identifier	PRIV_ROOT		4237922	1					
ANR	4237936	IdentifierDeclStatement	StringList invalid ;	686:1:19352:19370	4237922	2	True				
ANR	4237937	IdentifierDecl	invalid		4237922	0					
ANR	4237938	IdentifierDeclType	StringList		4237922	0					
ANR	4237939	Identifier	invalid		4237922	1					
ANR	4237940	ExpressionStatement	"invalid . initializeFromString ( InvalidLogFiles ? InvalidLogFiles : """" )"	688:1:19374:19443	4237922	3	True				
ANR	4237941	CallExpression	"invalid . initializeFromString ( InvalidLogFiles ? InvalidLogFiles : """" )"		4237922	0					
ANR	4237942	Callee	invalid . initializeFromString		4237922	0					
ANR	4237943	MemberAccess	invalid . initializeFromString		4237922	0					
ANR	4237944	Identifier	invalid		4237922	0					
ANR	4237945	Identifier	initializeFromString		4237922	1					
ANR	4237946	ArgumentList	"InvalidLogFiles ? InvalidLogFiles : """""		4237922	1					
ANR	4237947	Argument	"InvalidLogFiles ? InvalidLogFiles : """""		4237922	0					
ANR	4237948	ConditionalExpression	"InvalidLogFiles ? InvalidLogFiles : """""		4237922	0					
ANR	4237949	Condition	InvalidLogFiles		4237922	0					
ANR	4237950	Identifier	InvalidLogFiles		4237922	0					
ANR	4237951	Identifier	InvalidLogFiles		4237922	1					
ANR	4237952	PrimaryExpression	""""""		4237922	2					
ANR	4237953	WhileStatement	while ( ( f = dir . Next ( ) ) )		4237922	4					
ANR	4237954	Condition	f = dir . Next ( )	690:8:19454:19469	4237922	0	True				
ANR	4237955	AssignmentExpression	f = dir . Next ( )		4237922	0		=			
ANR	4237956	Identifier	f		4237922	0					
ANR	4237957	CallExpression	dir . Next ( )		4237922	1					
ANR	4237958	Callee	dir . Next		4237922	0					
ANR	4237959	MemberAccess	dir . Next		4237922	0					
ANR	4237960	Identifier	dir		4237922	0					
ANR	4237961	Identifier	Next		4237922	1					
ANR	4237962	ArgumentList			4237922	1					
ANR	4237963	CompoundStatement		8:27:171:171	4237922	1					
ANR	4237964	IfStatement	if ( invalid . contains ( f ) )		4237922	0					
ANR	4237965	Condition	invalid . contains ( f )	691:6:19481:19499	4237922	0	True				
ANR	4237966	CallExpression	invalid . contains ( f )		4237922	0					
ANR	4237967	Callee	invalid . contains		4237922	0					
ANR	4237968	MemberAccess	invalid . contains		4237922	0					
ANR	4237969	Identifier	invalid		4237922	0					
ANR	4237970	Identifier	contains		4237922	1					
ANR	4237971	ArgumentList	f		4237922	1					
ANR	4237972	Argument	f		4237922	0					
ANR	4237973	Identifier	f		4237922	0					
ANR	4237974	CompoundStatement		9:28:201:201	4237922	1					
ANR	4237975	ExpressionStatement	"bad_file ( Log , f , dir )"	692:3:19508:19531	4237922	0	True				
ANR	4237976	CallExpression	"bad_file ( Log , f , dir )"		4237922	0					
ANR	4237977	Callee	bad_file		4237922	0					
ANR	4237978	Identifier	bad_file		4237922	0					
ANR	4237979	ArgumentList	Log		4237922	1					
ANR	4237980	Argument	Log		4237922	0					
ANR	4237981	Identifier	Log		4237922	0					
ANR	4237982	Argument	f		4237922	1					
ANR	4237983	Identifier	f		4237922	0					
ANR	4237984	Argument	dir		4237922	2					
ANR	4237985	Identifier	dir		4237922	0					
ANR	4237986	ElseStatement	else		4237922	0					
ANR	4237987	CompoundStatement		11:9:240:240	4237922	0					
ANR	4237988	ExpressionStatement	"good_file ( Log , f )"	694:3:19547:19566	4237922	0	True				
ANR	4237989	CallExpression	"good_file ( Log , f )"		4237922	0					
ANR	4237990	Callee	good_file		4237922	0					
ANR	4237991	Identifier	good_file		4237922	0					
ANR	4237992	ArgumentList	Log		4237922	1					
ANR	4237993	Argument	Log		4237922	0					
ANR	4237994	Identifier	Log		4237922	0					
ANR	4237995	Argument	f		4237922	1					
ANR	4237996	Identifier	f		4237922	0					
ANR	4237997	ReturnType	void		4237922	1					
ANR	4237998	Identifier	check_log_dir		4237922	2					
ANR	4237999	ParameterList			4237922	3					
ANR	4238000	CFGEntryNode	ENTRY		4237922		True				
ANR	4238001	CFGExitNode	EXIT		4237922		True				
ANR	4238002	Symbol	invalid . contains		4237922						
ANR	4238003	Symbol	Log		4237922						
ANR	4238004	Symbol	f		4237922						
ANR	4238005	Symbol	invalid		4237922						
ANR	4238006	Symbol	dir		4237922						
ANR	4238007	Symbol	dir . Next		4237922						
ANR	4238008	Symbol	InvalidLogFiles		4237922						
ANR	4238009	Function	check_daemon_sock_dir	699:0:19578:20082							
ANR	4238010	FunctionDef	check_daemon_sock_dir ()		4238009	0					
ANR	4238011	CompoundStatement		701:0:19607:20082	4238009	0					
ANR	4238012	IdentifierDeclStatement	const char * f ;	702:1:19610:19623	4238009	0	True				
ANR	4238013	IdentifierDecl	* f		4238009	0					
ANR	4238014	IdentifierDeclType	const char *		4238009	0					
ANR	4238015	Identifier	f		4238009	1					
ANR	4238016	IdentifierDeclStatement	"Directory dir ( DaemonSockDir , PRIV_ROOT ) ;"	703:1:19626:19665	4238009	1	True				
ANR	4238017	IdentifierDecl	"dir ( DaemonSockDir , PRIV_ROOT )"		4238009	0					
ANR	4238018	IdentifierDeclType	Directory		4238009	0					
ANR	4238019	Identifier	dir		4238009	1					
ANR	4238020	Expression	"DaemonSockDir , PRIV_ROOT"		4238009	2					
ANR	4238021	Identifier	DaemonSockDir		4238009	0					
ANR	4238022	Identifier	PRIV_ROOT		4238009	1					
ANR	4238023	IdentifierDeclStatement	time_t stale_age = SharedPortEndpoint :: TouchSocketInterval ( ) * 100 ;	705:1:19669:19733	4238009	2	True				
ANR	4238024	IdentifierDecl	stale_age = SharedPortEndpoint :: TouchSocketInterval ( ) * 100		4238009	0					
ANR	4238025	IdentifierDeclType	time_t		4238009	0					
ANR	4238026	Identifier	stale_age		4238009	1					
ANR	4238027	AssignmentExpression	stale_age = SharedPortEndpoint :: TouchSocketInterval ( ) * 100		4238009	2		=			
ANR	4238028	Identifier	stale_age		4238009	0					
ANR	4238029	MultiplicativeExpression	SharedPortEndpoint :: TouchSocketInterval ( ) * 100		4238009	1		*			
ANR	4238030	CallExpression	SharedPortEndpoint :: TouchSocketInterval ( )		4238009	0					
ANR	4238031	Callee	SharedPortEndpoint :: TouchSocketInterval		4238009	0					
ANR	4238032	Identifier	SharedPortEndpoint :: TouchSocketInterval		4238009	0					
ANR	4238033	ArgumentList			4238009	1					
ANR	4238034	PrimaryExpression	100		4238009	1					
ANR	4238035	WhileStatement	while ( ( f = dir . Next ( ) ) )		4238009	3					
ANR	4238036	Condition	f = dir . Next ( )	707:8:19744:19759	4238009	0	True				
ANR	4238037	AssignmentExpression	f = dir . Next ( )		4238009	0		=			
ANR	4238038	Identifier	f		4238009	0					
ANR	4238039	CallExpression	dir . Next ( )		4238009	1					
ANR	4238040	Callee	dir . Next		4238009	0					
ANR	4238041	MemberAccess	dir . Next		4238009	0					
ANR	4238042	Identifier	dir		4238009	0					
ANR	4238043	Identifier	Next		4238009	1					
ANR	4238044	ArgumentList			4238009	1					
ANR	4238045	CompoundStatement		8:2:159:177	4238009	1					
ANR	4238046	IdentifierDeclStatement	MyString full_path ;	708:2:19767:19785	4238009	0	True				
ANR	4238047	IdentifierDecl	full_path		4238009	0					
ANR	4238048	IdentifierDeclType	MyString		4238009	0					
ANR	4238049	Identifier	full_path		4238009	1					
ANR	4238050	ExpressionStatement	"full_path . sprintf ( ""%s%c%s"" , DaemonSockDir , DIR_DELIM_CHAR , f )"	709:2:19789:19847	4238009	1	True				
ANR	4238051	CallExpression	"full_path . sprintf ( ""%s%c%s"" , DaemonSockDir , DIR_DELIM_CHAR , f )"		4238009	0					
ANR	4238052	Callee	full_path . sprintf		4238009	0					
ANR	4238053	MemberAccess	full_path . sprintf		4238009	0					
ANR	4238054	Identifier	full_path		4238009	0					
ANR	4238055	Identifier	sprintf		4238009	1					
ANR	4238056	ArgumentList	"""%s%c%s"""		4238009	1					
ANR	4238057	Argument	"""%s%c%s"""		4238009	0					
ANR	4238058	PrimaryExpression	"""%s%c%s"""		4238009	0					
ANR	4238059	Argument	DaemonSockDir		4238009	1					
ANR	4238060	Identifier	DaemonSockDir		4238009	0					
ANR	4238061	Argument	DIR_DELIM_CHAR		4238009	2					
ANR	4238062	Identifier	DIR_DELIM_CHAR		4238009	0					
ANR	4238063	Argument	f		4238009	3					
ANR	4238064	Identifier	f		4238009	0					
ANR	4238065	IfStatement	"if ( touched_recently ( full_path . Value ( ) , stale_age ) )"		4238009	2					
ANR	4238066	Condition	"touched_recently ( full_path . Value ( ) , stale_age )"	713:6:19937:19984	4238009	0	True				
ANR	4238067	CallExpression	"touched_recently ( full_path . Value ( ) , stale_age )"		4238009	0					
ANR	4238068	Callee	touched_recently		4238009	0					
ANR	4238069	Identifier	touched_recently		4238009	0					
ANR	4238070	ArgumentList	full_path . Value ( )		4238009	1					
ANR	4238071	Argument	full_path . Value ( )		4238009	0					
ANR	4238072	CallExpression	full_path . Value ( )		4238009	0					
ANR	4238073	Callee	full_path . Value		4238009	0					
ANR	4238074	MemberAccess	full_path . Value		4238009	0					
ANR	4238075	Identifier	full_path		4238009	0					
ANR	4238076	Identifier	Value		4238009	1					
ANR	4238077	ArgumentList			4238009	1					
ANR	4238078	Argument	stale_age		4238009	1					
ANR	4238079	Identifier	stale_age		4238009	0					
ANR	4238080	CompoundStatement		13:57:380:380	4238009	1					
ANR	4238081	ExpressionStatement	"good_file ( DaemonSockDir , f )"	714:3:19993:20022	4238009	0	True				
ANR	4238082	CallExpression	"good_file ( DaemonSockDir , f )"		4238009	0					
ANR	4238083	Callee	good_file		4238009	0					
ANR	4238084	Identifier	good_file		4238009	0					
ANR	4238085	ArgumentList	DaemonSockDir		4238009	1					
ANR	4238086	Argument	DaemonSockDir		4238009	0					
ANR	4238087	Identifier	DaemonSockDir		4238009	0					
ANR	4238088	Argument	f		4238009	1					
ANR	4238089	Identifier	f		4238009	0					
ANR	4238090	ElseStatement	else		4238009	0					
ANR	4238091	CompoundStatement		16:7:427:427	4238009	0					
ANR	4238092	ExpressionStatement	"bad_file ( DaemonSockDir , f , dir )"	717:3:20040:20073	4238009	0	True				
ANR	4238093	CallExpression	"bad_file ( DaemonSockDir , f , dir )"		4238009	0					
ANR	4238094	Callee	bad_file		4238009	0					
ANR	4238095	Identifier	bad_file		4238009	0					
ANR	4238096	ArgumentList	DaemonSockDir		4238009	1					
ANR	4238097	Argument	DaemonSockDir		4238009	0					
ANR	4238098	Identifier	DaemonSockDir		4238009	0					
ANR	4238099	Argument	f		4238009	1					
ANR	4238100	Identifier	f		4238009	0					
ANR	4238101	Argument	dir		4238009	2					
ANR	4238102	Identifier	dir		4238009	0					
ANR	4238103	ReturnType	void		4238009	1					
ANR	4238104	Identifier	check_daemon_sock_dir		4238009	2					
ANR	4238105	ParameterList			4238009	3					
ANR	4238106	CFGEntryNode	ENTRY		4238009		True				
ANR	4238107	CFGExitNode	EXIT		4238009		True				
ANR	4238108	Symbol	stale_age		4238009						
ANR	4238109	Symbol	full_path . Value		4238009						
ANR	4238110	Symbol	touched_recently		4238009						
ANR	4238111	Symbol	f		4238009						
ANR	4238112	Symbol	DIR_DELIM_CHAR		4238009						
ANR	4238113	Symbol	DaemonSockDir		4238009						
ANR	4238114	Symbol	dir		4238009						
ANR	4238115	Symbol	full_path		4238009						
ANR	4238116	Symbol	SharedPortEndpoint :: TouchSocketInterval		4238009						
ANR	4238117	Symbol	dir . Next		4238009						
ANR	4238118	Function	rec_lock_cleanup	722:0:20085:21214							
ANR	4238119	FunctionDef	"rec_lock_cleanup (const char * path , int depth , bool remove_self)"		4238118	0					
ANR	4238120	CompoundStatement		722:69:20154:21214	4238118	0					
ANR	4238121	IdentifierDeclStatement	FileLock * lock = NULL ;	724:1:20177:20198	4238118	0	True				
ANR	4238122	IdentifierDecl	* lock = NULL		4238118	0					
ANR	4238123	IdentifierDeclType	FileLock *		4238118	0					
ANR	4238124	Identifier	lock		4238118	1					
ANR	4238125	AssignmentExpression	* lock = NULL		4238118	2		=			
ANR	4238126	Identifier	NULL		4238118	0					
ANR	4238127	Identifier	NULL		4238118	1					
ANR	4238128	IfStatement	if ( depth == 0 )		4238118	1					
ANR	4238129	Condition	depth == 0	725:5:20205:20214	4238118	0	True				
ANR	4238130	EqualityExpression	depth == 0		4238118	0		==			
ANR	4238131	Identifier	depth		4238118	0					
ANR	4238132	PrimaryExpression	0		4238118	1					
ANR	4238133	CompoundStatement		4:17:62:62	4238118	1					
ANR	4238134	ExpressionStatement	"lock = new FileLock ( path , true , true )"	726:2:20221:20258	4238118	0	True				
ANR	4238135	AssignmentExpression	"lock = new FileLock ( path , true , true )"		4238118	0		=			
ANR	4238136	Identifier	lock		4238118	0					
ANR	4238137	Expression	"path , true , true"		4238118	1					
ANR	4238138	Identifier	path		4238118	0					
ANR	4238139	Expression	"true , true"		4238118	1					
ANR	4238140	Identifier	true		4238118	0					
ANR	4238141	Identifier	true		4238118	1					
ANR	4238142	Statement	delete	727:2:20262:20267	4238118	1	True				
ANR	4238143	ExpressionStatement	lock	727:9:20269:20273	4238118	2	True				
ANR	4238144	Identifier	lock		4238118	0					
ANR	4238145	ReturnStatement	return ;	728:2:20277:20284	4238118	3	True				
ANR	4238146	IdentifierDeclStatement	Directory * dir = new Directory ( path ) ;	730:1:20290:20326	4238118	2	True				
ANR	4238147	IdentifierDecl	* dir = new Directory ( path )		4238118	0					
ANR	4238148	IdentifierDeclType	Directory *		4238118	0					
ANR	4238149	Identifier	dir		4238118	1					
ANR	4238150	AssignmentExpression	* dir = new Directory ( path )		4238118	2		=			
ANR	4238151	Identifier	path		4238118	0					
ANR	4238152	Identifier	path		4238118	1					
ANR	4238153	IfStatement	if ( dir == NULL )		4238118	3					
ANR	4238154	Condition	dir == NULL	731:5:20333:20343	4238118	0	True				
ANR	4238155	EqualityExpression	dir == NULL		4238118	0		==			
ANR	4238156	Identifier	dir		4238118	0					
ANR	4238157	Identifier	NULL		4238118	1					
ANR	4238158	CompoundStatement		10:18:191:191	4238118	1					
ANR	4238159	ReturnStatement	return ;	733:2:20411:20417	4238118	0	True				
ANR	4238160	IdentifierDeclStatement	const char * entry ;	735:1:20423:20440	4238118	4	True				
ANR	4238161	IdentifierDecl	* entry		4238118	0					
ANR	4238162	IdentifierDeclType	const char *		4238118	0					
ANR	4238163	Identifier	entry		4238118	1					
ANR	4238164	WhileStatement	while ( ( entry = dir -> Next ( ) ) != 0 )		4238118	5					
ANR	4238165	Condition	( entry = dir -> Next ( ) ) != 0	736:8:20450:20475	4238118	0	True				
ANR	4238166	EqualityExpression	( entry = dir -> Next ( ) ) != 0		4238118	0		!=			
ANR	4238167	AssignmentExpression	entry = dir -> Next ( )		4238118	0		=			
ANR	4238168	Identifier	entry		4238118	0					
ANR	4238169	CallExpression	dir -> Next ( )		4238118	1					
ANR	4238170	Callee	dir -> Next		4238118	0					
ANR	4238171	PtrMemberAccess	dir -> Next		4238118	0					
ANR	4238172	Identifier	dir		4238118	0					
ANR	4238173	Identifier	Next		4238118	1					
ANR	4238174	ArgumentList			4238118	1					
ANR	4238175	PrimaryExpression	0		4238118	1					
ANR	4238176	CompoundStatement		15:36:323:323	4238118	1					
ANR	4238177	IfStatement	if ( ! dir -> IsDirectory ( ) && depth > 1 )		4238118	0					
ANR	4238178	Condition	! dir -> IsDirectory ( ) && depth > 1	737:6:20486:20517	4238118	0	True				
ANR	4238179	AndExpression	! dir -> IsDirectory ( ) && depth > 1		4238118	0		&&			
ANR	4238180	UnaryOperationExpression	! dir -> IsDirectory ( )		4238118	0					
ANR	4238181	UnaryOperator	!		4238118	0					
ANR	4238182	CallExpression	dir -> IsDirectory ( )		4238118	1					
ANR	4238183	Callee	dir -> IsDirectory		4238118	0					
ANR	4238184	PtrMemberAccess	dir -> IsDirectory		4238118	0					
ANR	4238185	Identifier	dir		4238118	0					
ANR	4238186	Identifier	IsDirectory		4238118	1					
ANR	4238187	ArgumentList			4238118	1					
ANR	4238188	RelationalExpression	depth > 1		4238118	1		>			
ANR	4238189	Identifier	depth		4238118	0					
ANR	4238190	PrimaryExpression	1		4238118	1					
ANR	4238191	CompoundStatement		22:3:604:640	4238118	1					
ANR	4238192	ExpressionStatement	"lock = new FileLock ( path , false , true )"	738:3:20597:20635	4238118	0	True				
ANR	4238193	AssignmentExpression	"lock = new FileLock ( path , false , true )"		4238118	0		=			
ANR	4238194	Identifier	lock		4238118	0					
ANR	4238195	Expression	"path , false , true"		4238118	1					
ANR	4238196	Identifier	path		4238118	0					
ANR	4238197	Expression	"false , true"		4238118	1					
ANR	4238198	Identifier	false		4238118	0					
ANR	4238199	Identifier	true		4238118	1					
ANR	4238200	IdentifierDeclStatement	bool result = lock -> obtain ( WRITE_LOCK ) ;	739:3:20640:20678	4238118	1	True				
ANR	4238201	IdentifierDecl	result = lock -> obtain ( WRITE_LOCK )		4238118	0					
ANR	4238202	IdentifierDeclType	bool		4238118	0					
ANR	4238203	Identifier	result		4238118	1					
ANR	4238204	AssignmentExpression	result = lock -> obtain ( WRITE_LOCK )		4238118	2		=			
ANR	4238205	Identifier	result		4238118	0					
ANR	4238206	CallExpression	lock -> obtain ( WRITE_LOCK )		4238118	1					
ANR	4238207	Callee	lock -> obtain		4238118	0					
ANR	4238208	PtrMemberAccess	lock -> obtain		4238118	0					
ANR	4238209	Identifier	lock		4238118	0					
ANR	4238210	Identifier	obtain		4238118	1					
ANR	4238211	ArgumentList	WRITE_LOCK		4238118	1					
ANR	4238212	Argument	WRITE_LOCK		4238118	0					
ANR	4238213	Identifier	WRITE_LOCK		4238118	0					
ANR	4238214	IfStatement	if ( ! result )		4238118	2					
ANR	4238215	Condition	! result	740:7:20687:20693	4238118	0	True				
ANR	4238216	UnaryOperationExpression	! result		4238118	0					
ANR	4238217	UnaryOperator	!		4238118	0					
ANR	4238218	Identifier	result		4238118	1					
ANR	4238219	CompoundStatement		19:16:541:541	4238118	1					
ANR	4238220	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Cannot lock %s\\n"" , path )"	741:5:20703:20749	4238118	0	True				
ANR	4238221	CallExpression	"dprintf ( D_FULLDEBUG , ""Cannot lock %s\\n"" , path )"		4238118	0					
ANR	4238222	Callee	dprintf		4238118	0					
ANR	4238223	Identifier	dprintf		4238118	0					
ANR	4238224	ArgumentList	D_FULLDEBUG		4238118	1					
ANR	4238225	Argument	D_FULLDEBUG		4238118	0					
ANR	4238226	Identifier	D_FULLDEBUG		4238118	0					
ANR	4238227	Argument	"""Cannot lock %s\\n"""		4238118	1					
ANR	4238228	PrimaryExpression	"""Cannot lock %s\\n"""		4238118	0					
ANR	4238229	Argument	path		4238118	2					
ANR	4238230	Identifier	path		4238118	0					
ANR	4238231	IdentifierDeclStatement	int res = unlink ( dir -> GetFullPath ( ) ) ;	743:3:20759:20795	4238118	3	True				
ANR	4238232	IdentifierDecl	res = unlink ( dir -> GetFullPath ( ) )		4238118	0					
ANR	4238233	IdentifierDeclType	int		4238118	0					
ANR	4238234	Identifier	res		4238118	1					
ANR	4238235	AssignmentExpression	res = unlink ( dir -> GetFullPath ( ) )		4238118	2		=			
ANR	4238236	Identifier	res		4238118	0					
ANR	4238237	CallExpression	unlink ( dir -> GetFullPath ( ) )		4238118	1					
ANR	4238238	Callee	unlink		4238118	0					
ANR	4238239	Identifier	unlink		4238118	0					
ANR	4238240	ArgumentList	dir -> GetFullPath ( )		4238118	1					
ANR	4238241	Argument	dir -> GetFullPath ( )		4238118	0					
ANR	4238242	CallExpression	dir -> GetFullPath ( )		4238118	0					
ANR	4238243	Callee	dir -> GetFullPath		4238118	0					
ANR	4238244	PtrMemberAccess	dir -> GetFullPath		4238118	0					
ANR	4238245	Identifier	dir		4238118	0					
ANR	4238246	Identifier	GetFullPath		4238118	1					
ANR	4238247	ArgumentList			4238118	1					
ANR	4238248	IfStatement	if ( res != 0 )		4238118	4					
ANR	4238249	Condition	res != 0	744:7:20804:20811	4238118	0	True				
ANR	4238250	EqualityExpression	res != 0		4238118	0		!=			
ANR	4238251	Identifier	res		4238118	0					
ANR	4238252	PrimaryExpression	0		4238118	1					
ANR	4238253	CompoundStatement		23:17:659:659	4238118	1					
ANR	4238254	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Cannot delete %s (%s) \\n"" , path , strerror ( errno ) )"	745:4:20820:20891	4238118	0	True				
ANR	4238255	CallExpression	"dprintf ( D_FULLDEBUG , ""Cannot delete %s (%s) \\n"" , path , strerror ( errno ) )"		4238118	0					
ANR	4238256	Callee	dprintf		4238118	0					
ANR	4238257	Identifier	dprintf		4238118	0					
ANR	4238258	ArgumentList	D_FULLDEBUG		4238118	1					
ANR	4238259	Argument	D_FULLDEBUG		4238118	0					
ANR	4238260	Identifier	D_FULLDEBUG		4238118	0					
ANR	4238261	Argument	"""Cannot delete %s (%s) \\n"""		4238118	1					
ANR	4238262	PrimaryExpression	"""Cannot delete %s (%s) \\n"""		4238118	0					
ANR	4238263	Argument	path		4238118	2					
ANR	4238264	Identifier	path		4238118	0					
ANR	4238265	Argument	strerror ( errno )		4238118	3					
ANR	4238266	CallExpression	strerror ( errno )		4238118	0					
ANR	4238267	Callee	strerror		4238118	0					
ANR	4238268	Identifier	strerror		4238118	0					
ANR	4238269	ArgumentList	errno		4238118	1					
ANR	4238270	Argument	errno		4238118	0					
ANR	4238271	Identifier	errno		4238118	0					
ANR	4238272	Statement	delete	747:3:20901:20906	4238118	5	True				
ANR	4238273	ExpressionStatement	lock	747:10:20908:20912	4238118	6	True				
ANR	4238274	Identifier	lock		4238118	0					
ANR	4238275	ElseStatement	else		4238118	0					
ANR	4238276	CompoundStatement		27:9:768:768	4238118	0					
ANR	4238277	ExpressionStatement	"rec_lock_cleanup ( dir -> GetFullPath ( ) , depth - 1 , true )"	749:3:20928:20979	4238118	0	True				
ANR	4238278	CallExpression	"rec_lock_cleanup ( dir -> GetFullPath ( ) , depth - 1 , true )"		4238118	0					
ANR	4238279	Callee	rec_lock_cleanup		4238118	0					
ANR	4238280	Identifier	rec_lock_cleanup		4238118	0					
ANR	4238281	ArgumentList	dir -> GetFullPath ( )		4238118	1					
ANR	4238282	Argument	dir -> GetFullPath ( )		4238118	0					
ANR	4238283	CallExpression	dir -> GetFullPath ( )		4238118	0					
ANR	4238284	Callee	dir -> GetFullPath		4238118	0					
ANR	4238285	PtrMemberAccess	dir -> GetFullPath		4238118	0					
ANR	4238286	Identifier	dir		4238118	0					
ANR	4238287	Identifier	GetFullPath		4238118	1					
ANR	4238288	ArgumentList			4238118	1					
ANR	4238289	Argument	depth - 1		4238118	1					
ANR	4238290	AdditiveExpression	depth - 1		4238118	0		-			
ANR	4238291	Identifier	depth		4238118	0					
ANR	4238292	PrimaryExpression	1		4238118	1					
ANR	4238293	Argument	true		4238118	2					
ANR	4238294	Identifier	true		4238118	0					
ANR	4238295	IfStatement	if ( remove_self )		4238118	6					
ANR	4238296	Condition	remove_self	753:5:21054:21064	4238118	0	True				
ANR	4238297	Identifier	remove_self		4238118	0					
ANR	4238298	CompoundStatement		33:2:918:939	4238118	1					
ANR	4238299	IdentifierDeclStatement	int res = rmdir ( path ) ;	754:2:21073:21094	4238118	0	True				
ANR	4238300	IdentifierDecl	res = rmdir ( path )		4238118	0					
ANR	4238301	IdentifierDeclType	int		4238118	0					
ANR	4238302	Identifier	res		4238118	1					
ANR	4238303	AssignmentExpression	res = rmdir ( path )		4238118	2		=			
ANR	4238304	Identifier	res		4238118	0					
ANR	4238305	CallExpression	rmdir ( path )		4238118	1					
ANR	4238306	Callee	rmdir		4238118	0					
ANR	4238307	Identifier	rmdir		4238118	0					
ANR	4238308	ArgumentList	path		4238118	1					
ANR	4238309	Argument	path		4238118	0					
ANR	4238310	Identifier	path		4238118	0					
ANR	4238311	IfStatement	if ( res != 0 )		4238118	1					
ANR	4238312	Condition	res != 0	755:6:21102:21109	4238118	0	True				
ANR	4238313	EqualityExpression	res != 0		4238118	0		!=			
ANR	4238314	Identifier	res		4238118	0					
ANR	4238315	PrimaryExpression	0		4238118	1					
ANR	4238316	CompoundStatement		34:16:957:957	4238118	1					
ANR	4238317	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Directory %s could not be removed.\\n"" , path )"	756:3:21117:21183	4238118	0	True				
ANR	4238318	CallExpression	"dprintf ( D_FULLDEBUG , ""Directory %s could not be removed.\\n"" , path )"		4238118	0					
ANR	4238319	Callee	dprintf		4238118	0					
ANR	4238320	Identifier	dprintf		4238118	0					
ANR	4238321	ArgumentList	D_FULLDEBUG		4238118	1					
ANR	4238322	Argument	D_FULLDEBUG		4238118	0					
ANR	4238323	Identifier	D_FULLDEBUG		4238118	0					
ANR	4238324	Argument	"""Directory %s could not be removed.\\n"""		4238118	1					
ANR	4238325	PrimaryExpression	"""Directory %s could not be removed.\\n"""		4238118	0					
ANR	4238326	Argument	path		4238118	2					
ANR	4238327	Identifier	path		4238118	0					
ANR	4238328	Statement	delete	760:1:21195:21200	4238118	7	True				
ANR	4238329	ExpressionStatement	dir	760:8:21202:21205	4238118	8	True				
ANR	4238330	Identifier	dir		4238118	0					
ANR	4238331	ReturnType	void		4238118	1					
ANR	4238332	Identifier	rec_lock_cleanup		4238118	2					
ANR	4238333	ParameterList	"const char * path , int depth , bool remove_self"		4238118	3					
ANR	4238334	Parameter	const char * path	722:22:20107:20122	4238118	0	True				
ANR	4238335	ParameterType	const char *		4238118	0					
ANR	4238336	Identifier	path		4238118	1					
ANR	4238337	Parameter	int depth	722:40:20125:20133	4238118	1	True				
ANR	4238338	ParameterType	int		4238118	0					
ANR	4238339	Identifier	depth		4238118	1					
ANR	4238340	Parameter	bool remove_self	722:51:20136:20151	4238118	2	True				
ANR	4238341	ParameterType	bool		4238118	0					
ANR	4238342	Identifier	remove_self		4238118	1					
ANR	4238343	CFGEntryNode	ENTRY		4238118		True				
ANR	4238344	CFGExitNode	EXIT		4238118		True				
ANR	4238345	Symbol	* lock		4238118						
ANR	4238346	Symbol	dir -> GetFullPath		4238118						
ANR	4238347	Symbol	res		4238118						
ANR	4238348	Symbol	errno		4238118						
ANR	4238349	Symbol	NULL		4238118						
ANR	4238350	Symbol	remove_self		4238118						
ANR	4238351	Symbol	* dir		4238118						
ANR	4238352	Symbol	false		4238118						
ANR	4238353	Symbol	lock -> obtain		4238118						
ANR	4238354	Symbol	D_FULLDEBUG		4238118						
ANR	4238355	Symbol	rmdir		4238118						
ANR	4238356	Symbol	dir		4238118						
ANR	4238357	Symbol	dir -> Next		4238118						
ANR	4238358	Symbol	result		4238118						
ANR	4238359	Symbol	strerror		4238118						
ANR	4238360	Symbol	path		4238118						
ANR	4238361	Symbol	entry		4238118						
ANR	4238362	Symbol	depth		4238118						
ANR	4238363	Symbol	WRITE_LOCK		4238118						
ANR	4238364	Symbol	unlink		4238118						
ANR	4238365	Symbol	true		4238118						
ANR	4238366	Symbol	lock		4238118						
ANR	4238367	Symbol	dir -> IsDirectory		4238118						
ANR	4238368	Function	check_tmp_dir	764:0:21218:21628							
ANR	4238369	FunctionDef	check_tmp_dir ()		4238368	0					
ANR	4238370	CompoundStatement		764:20:21238:21628	4238368	0					
ANR	4238371	IfStatement	if ( ! RmFlag )		4238368	0					
ANR	4238372	Condition	! RmFlag	766:5:21265:21271	4238368	0	True				
ANR	4238373	UnaryOperationExpression	! RmFlag		4238368	0					
ANR	4238374	UnaryOperator	!		4238368	0					
ANR	4238375	Identifier	RmFlag		4238368	1					
ANR	4238376	ReturnStatement	return ;	766:14:21274:21280	4238368	1	True				
ANR	4238377	IdentifierDeclStatement	const char * tmpDir = NULL ;	768:1:21284:21309	4238368	1	True				
ANR	4238378	IdentifierDecl	* tmpDir = NULL		4238368	0					
ANR	4238379	IdentifierDeclType	const char *		4238368	0					
ANR	4238380	Identifier	tmpDir		4238368	1					
ANR	4238381	AssignmentExpression	* tmpDir = NULL		4238368	2		=			
ANR	4238382	Identifier	NULL		4238368	0					
ANR	4238383	Identifier	NULL		4238368	1					
ANR	4238384	IdentifierDeclStatement	"bool newLock = param_boolean ( ""CREATE_LOCKS_ON_LOCAL_DISK"" , true ) ;"	769:1:21312:21376	4238368	2	True				
ANR	4238385	IdentifierDecl	"newLock = param_boolean ( ""CREATE_LOCKS_ON_LOCAL_DISK"" , true )"		4238368	0					
ANR	4238386	IdentifierDeclType	bool		4238368	0					
ANR	4238387	Identifier	newLock		4238368	1					
ANR	4238388	AssignmentExpression	"newLock = param_boolean ( ""CREATE_LOCKS_ON_LOCAL_DISK"" , true )"		4238368	2		=			
ANR	4238389	Identifier	newLock		4238368	0					
ANR	4238390	CallExpression	"param_boolean ( ""CREATE_LOCKS_ON_LOCAL_DISK"" , true )"		4238368	1					
ANR	4238391	Callee	param_boolean		4238368	0					
ANR	4238392	Identifier	param_boolean		4238368	0					
ANR	4238393	ArgumentList	"""CREATE_LOCKS_ON_LOCAL_DISK"""		4238368	1					
ANR	4238394	Argument	"""CREATE_LOCKS_ON_LOCAL_DISK"""		4238368	0					
ANR	4238395	PrimaryExpression	"""CREATE_LOCKS_ON_LOCAL_DISK"""		4238368	0					
ANR	4238396	Argument	true		4238368	1					
ANR	4238397	Identifier	true		4238368	0					
ANR	4238398	IfStatement	if ( newLock )		4238368	3					
ANR	4238399	Condition	newLock	770:5:21383:21389	4238368	0	True				
ANR	4238400	Identifier	newLock		4238368	0					
ANR	4238401	CompoundStatement		9:2:207:252	4238368	1					
ANR	4238402	IdentifierDeclStatement	"FileLock * lock = new FileLock ( - 1 , NULL , NULL ) ;"	772:2:21446:21491	4238368	0	True				
ANR	4238403	IdentifierDecl	"* lock = new FileLock ( - 1 , NULL , NULL )"		4238368	0					
ANR	4238404	IdentifierDeclType	FileLock *		4238368	0					
ANR	4238405	Identifier	lock		4238368	1					
ANR	4238406	AssignmentExpression	"* lock = new FileLock ( - 1 , NULL , NULL )"		4238368	2		=			
ANR	4238407	Identifier	lock		4238368	0					
ANR	4238408	Expression	"- 1 , NULL , NULL"		4238368	1					
ANR	4238409	UnaryOperationExpression	- 1		4238368	0					
ANR	4238410	UnaryOperator	-		4238368	0					
ANR	4238411	PrimaryExpression	1		4238368	1					
ANR	4238412	Expression	"NULL , NULL"		4238368	1					
ANR	4238413	Identifier	NULL		4238368	0					
ANR	4238414	Identifier	NULL		4238368	1					
ANR	4238415	ExpressionStatement	tmpDir = lock -> GetTempPath ( )	773:2:21495:21523	4238368	1	True				
ANR	4238416	AssignmentExpression	tmpDir = lock -> GetTempPath ( )		4238368	0		=			
ANR	4238417	Identifier	tmpDir		4238368	0					
ANR	4238418	CallExpression	lock -> GetTempPath ( )		4238368	1					
ANR	4238419	Callee	lock -> GetTempPath		4238368	0					
ANR	4238420	PtrMemberAccess	lock -> GetTempPath		4238368	0					
ANR	4238421	Identifier	lock		4238368	0					
ANR	4238422	Identifier	GetTempPath		4238368	1					
ANR	4238423	ArgumentList			4238368	1					
ANR	4238424	Statement	delete	774:2:21528:21533	4238368	2	True				
ANR	4238425	ExpressionStatement	lock	774:9:21535:21539	4238368	3	True				
ANR	4238426	Identifier	lock		4238368	0					
ANR	4238427	ExpressionStatement	"rec_lock_cleanup ( tmpDir , 3 )"	775:2:21543:21570	4238368	4	True				
ANR	4238428	CallExpression	"rec_lock_cleanup ( tmpDir , 3 )"		4238368	0					
ANR	4238429	Callee	rec_lock_cleanup		4238368	0					
ANR	4238430	Identifier	rec_lock_cleanup		4238368	0					
ANR	4238431	ArgumentList	tmpDir		4238368	1					
ANR	4238432	Argument	tmpDir		4238368	0					
ANR	4238433	Identifier	tmpDir		4238368	0					
ANR	4238434	Argument	3		4238368	1					
ANR	4238435	PrimaryExpression	3		4238368	0					
ANR	4238436	IfStatement	if ( tmpDir != NULL )		4238368	5					
ANR	4238437	Condition	tmpDir != NULL	776:6:21578:21591	4238368	0	True				
ANR	4238438	EqualityExpression	tmpDir != NULL		4238368	0		!=			
ANR	4238439	Identifier	tmpDir		4238368	0					
ANR	4238440	Identifier	NULL		4238368	1					
ANR	4238441	Statement	delete	777:3:21597:21602	4238368	1	True				
ANR	4238442	Statement	[	777:10:21604:21604	4238368	6	True				
ANR	4238443	Statement	]	777:11:21605:21605	4238368	7	True				
ANR	4238444	ExpressionStatement	tmpDir	777:12:21606:21612	4238368	8	True				
ANR	4238445	Identifier	tmpDir		4238368	0					
ANR	4238446	ReturnType	void		4238368	1					
ANR	4238447	Identifier	check_tmp_dir		4238368	2					
ANR	4238448	ParameterList			4238368	3					
ANR	4238449	CFGEntryNode	ENTRY		4238368		True				
ANR	4238450	CFGExitNode	EXIT		4238368		True				
ANR	4238451	Symbol	tmpDir		4238368						
ANR	4238452	Symbol	* lock		4238368						
ANR	4238453	Symbol	NULL		4238368						
ANR	4238454	Symbol	newLock		4238368						
ANR	4238455	Symbol	lock -> GetTempPath		4238368						
ANR	4238456	Symbol	true		4238368						
ANR	4238457	Symbol	RmFlag		4238368						
ANR	4238458	Symbol	lock		4238368						
ANR	4238459	Symbol	param_boolean		4238368						
ANR	4238460	Function	SetSyscalls	784:11:21643:21684							
ANR	4238461	FunctionDef	SetSyscalls (int foo)		4238460	0					
ANR	4238462	CompoundStatement		785:23:21670:21684	4238460	0					
ANR	4238463	ReturnStatement	return foo ;	785:1:21672:21682	4238460	0	True				
ANR	4238464	Identifier	foo		4238460	0					
ANR	4238465	ReturnType	int		4238460	1					
ANR	4238466	Identifier	SetSyscalls		4238460	2					
ANR	4238467	ParameterList	int foo		4238460	3					
ANR	4238468	Parameter	int foo	785:13:21660:21666	4238460	0	True				
ANR	4238469	ParameterType	int		4238460	0					
ANR	4238470	Identifier	foo		4238460	1					
ANR	4238471	CFGEntryNode	ENTRY		4238460		True				
ANR	4238472	CFGExitNode	EXIT		4238460		True				
ANR	4238473	Symbol	foo		4238460						
ANR	4238474	Function	init_params	790:0:21748:23152							
ANR	4238475	FunctionDef	init_params ()		4238474	0					
ANR	4238476	CompoundStatement		792:0:21767:23152	4238474	0					
ANR	4238477	ExpressionStatement	"Spool = param ( ""SPOOL"" )"	793:1:21770:21792	4238474	0	True				
ANR	4238478	AssignmentExpression	"Spool = param ( ""SPOOL"" )"		4238474	0		=			
ANR	4238479	Identifier	Spool		4238474	0					
ANR	4238480	CallExpression	"param ( ""SPOOL"" )"		4238474	1					
ANR	4238481	Callee	param		4238474	0					
ANR	4238482	Identifier	param		4238474	0					
ANR	4238483	ArgumentList	"""SPOOL"""		4238474	1					
ANR	4238484	Argument	"""SPOOL"""		4238474	0					
ANR	4238485	PrimaryExpression	"""SPOOL"""		4238474	0					
ANR	4238486	IfStatement	if ( Spool == NULL )		4238474	1					
ANR	4238487	Condition	Spool == NULL	794:8:21802:21814	4238474	0	True				
ANR	4238488	EqualityExpression	Spool == NULL		4238474	0		==			
ANR	4238489	Identifier	Spool		4238474	0					
ANR	4238490	Identifier	NULL		4238474	1					
ANR	4238491	CompoundStatement		3:24:50:50	4238474	1					
ANR	4238492	ExpressionStatement	"EXCEPT ( ""SPOOL not specified in config file\\n"" )"	795:8:21828:21876	4238474	0	True				
ANR	4238493	CallExpression	"EXCEPT ( ""SPOOL not specified in config file\\n"" )"		4238474	0					
ANR	4238494	Callee	EXCEPT		4238474	0					
ANR	4238495	Identifier	EXCEPT		4238474	0					
ANR	4238496	ArgumentList	"""SPOOL not specified in config file\\n"""		4238474	1					
ANR	4238497	Argument	"""SPOOL not specified in config file\\n"""		4238474	0					
ANR	4238498	PrimaryExpression	"""SPOOL not specified in config file\\n"""		4238474	0					
ANR	4238499	ExpressionStatement	"Log = param ( ""LOG"" )"	798:1:21886:21904	4238474	2	True				
ANR	4238500	AssignmentExpression	"Log = param ( ""LOG"" )"		4238474	0		=			
ANR	4238501	Identifier	Log		4238474	0					
ANR	4238502	CallExpression	"param ( ""LOG"" )"		4238474	1					
ANR	4238503	Callee	param		4238474	0					
ANR	4238504	Identifier	param		4238474	0					
ANR	4238505	ArgumentList	"""LOG"""		4238474	1					
ANR	4238506	Argument	"""LOG"""		4238474	0					
ANR	4238507	PrimaryExpression	"""LOG"""		4238474	0					
ANR	4238508	IfStatement	if ( Log == NULL )		4238474	3					
ANR	4238509	Condition	Log == NULL	799:8:21914:21924	4238474	0	True				
ANR	4238510	EqualityExpression	Log == NULL		4238474	0		==			
ANR	4238511	Identifier	Log		4238474	0					
ANR	4238512	Identifier	NULL		4238474	1					
ANR	4238513	CompoundStatement		8:22:160:160	4238474	1					
ANR	4238514	ExpressionStatement	"EXCEPT ( ""LOG not specified in config file\\n"" )"	800:8:21938:21984	4238474	0	True				
ANR	4238515	CallExpression	"EXCEPT ( ""LOG not specified in config file\\n"" )"		4238474	0					
ANR	4238516	Callee	EXCEPT		4238474	0					
ANR	4238517	Identifier	EXCEPT		4238474	0					
ANR	4238518	ArgumentList	"""LOG not specified in config file\\n"""		4238474	1					
ANR	4238519	Argument	"""LOG not specified in config file\\n"""		4238474	0					
ANR	4238520	PrimaryExpression	"""LOG not specified in config file\\n"""		4238474	0					
ANR	4238521	ExpressionStatement	"DaemonSockDir = param ( ""DAEMON_SOCKET_DIR"" )"	803:1:21994:22036	4238474	4	True				
ANR	4238522	AssignmentExpression	"DaemonSockDir = param ( ""DAEMON_SOCKET_DIR"" )"		4238474	0		=			
ANR	4238523	Identifier	DaemonSockDir		4238474	0					
ANR	4238524	CallExpression	"param ( ""DAEMON_SOCKET_DIR"" )"		4238474	1					
ANR	4238525	Callee	param		4238474	0					
ANR	4238526	Identifier	param		4238474	0					
ANR	4238527	ArgumentList	"""DAEMON_SOCKET_DIR"""		4238474	1					
ANR	4238528	Argument	"""DAEMON_SOCKET_DIR"""		4238474	0					
ANR	4238529	PrimaryExpression	"""DAEMON_SOCKET_DIR"""		4238474	0					
ANR	4238530	IfStatement	if ( DaemonSockDir == NULL )		4238474	5					
ANR	4238531	Condition	DaemonSockDir == NULL	804:5:22043:22063	4238474	0	True				
ANR	4238532	EqualityExpression	DaemonSockDir == NULL		4238474	0		==			
ANR	4238533	Identifier	DaemonSockDir		4238474	0					
ANR	4238534	Identifier	NULL		4238474	1					
ANR	4238535	CompoundStatement		13:29:299:299	4238474	1					
ANR	4238536	ExpressionStatement	"EXCEPT ( ""DAEMON_SOCKET_DIR not defined\\n"" )"	805:2:22071:22112	4238474	0	True				
ANR	4238537	CallExpression	"EXCEPT ( ""DAEMON_SOCKET_DIR not defined\\n"" )"		4238474	0					
ANR	4238538	Callee	EXCEPT		4238474	0					
ANR	4238539	Identifier	EXCEPT		4238474	0					
ANR	4238540	ArgumentList	"""DAEMON_SOCKET_DIR not defined\\n"""		4238474	1					
ANR	4238541	Argument	"""DAEMON_SOCKET_DIR not defined\\n"""		4238474	0					
ANR	4238542	PrimaryExpression	"""DAEMON_SOCKET_DIR not defined\\n"""		4238474	0					
ANR	4238543	IdentifierDeclStatement	"char * Execute = param ( ""EXECUTE"" ) ;"	808:1:22119:22151	4238474	6	True				
ANR	4238544	IdentifierDecl	"* Execute = param ( ""EXECUTE"" )"		4238474	0					
ANR	4238545	IdentifierDeclType	char *		4238474	0					
ANR	4238546	Identifier	Execute		4238474	1					
ANR	4238547	AssignmentExpression	"* Execute = param ( ""EXECUTE"" )"		4238474	2		=			
ANR	4238548	Identifier	Execute		4238474	0					
ANR	4238549	CallExpression	"param ( ""EXECUTE"" )"		4238474	1					
ANR	4238550	Callee	param		4238474	0					
ANR	4238551	Identifier	param		4238474	0					
ANR	4238552	ArgumentList	"""EXECUTE"""		4238474	1					
ANR	4238553	Argument	"""EXECUTE"""		4238474	0					
ANR	4238554	PrimaryExpression	"""EXECUTE"""		4238474	0					
ANR	4238555	IfStatement	if ( Execute )		4238474	7					
ANR	4238556	Condition	Execute	809:5:22158:22164	4238474	0	True				
ANR	4238557	Identifier	Execute		4238474	0					
ANR	4238558	CompoundStatement		18:15:400:400	4238474	1					
ANR	4238559	ExpressionStatement	ExecuteDirs . append ( Execute )	810:2:22172:22199	4238474	0	True				
ANR	4238560	CallExpression	ExecuteDirs . append ( Execute )		4238474	0					
ANR	4238561	Callee	ExecuteDirs . append		4238474	0					
ANR	4238562	MemberAccess	ExecuteDirs . append		4238474	0					
ANR	4238563	Identifier	ExecuteDirs		4238474	0					
ANR	4238564	Identifier	append		4238474	1					
ANR	4238565	ArgumentList	Execute		4238474	1					
ANR	4238566	Argument	Execute		4238474	0					
ANR	4238567	Identifier	Execute		4238474	0					
ANR	4238568	ExpressionStatement	free ( Execute )	811:2:22203:22216	4238474	1	True				
ANR	4238569	CallExpression	free ( Execute )		4238474	0					
ANR	4238570	Callee	free		4238474	0					
ANR	4238571	Identifier	free		4238474	0					
ANR	4238572	ArgumentList	Execute		4238474	1					
ANR	4238573	Argument	Execute		4238474	0					
ANR	4238574	Identifier	Execute		4238474	0					
ANR	4238575	ExpressionStatement	Execute = NULL	812:2:22220:22234	4238474	2	True				
ANR	4238576	AssignmentExpression	Execute = NULL		4238474	0		=			
ANR	4238577	Identifier	Execute		4238474	0					
ANR	4238578	Identifier	NULL		4238474	1					
ANR	4238579	IdentifierDeclStatement	ExtArray < ParamValue > * params = param_all ( ) ;	815:1:22301:22343	4238474	8	True				
ANR	4238580	IdentifierDecl	* params = param_all ( )		4238474	0					
ANR	4238581	IdentifierDeclType	ExtArray < ParamValue > *		4238474	0					
ANR	4238582	Identifier	params		4238474	1					
ANR	4238583	AssignmentExpression	* params = param_all ( )		4238474	2		=			
ANR	4238584	Identifier	params		4238474	0					
ANR	4238585	CallExpression	param_all ( )		4238474	1					
ANR	4238586	Callee	param_all		4238474	0					
ANR	4238587	Identifier	param_all		4238474	0					
ANR	4238588	ArgumentList			4238474	1					
ANR	4238589	ForStatement	for ( int p = params -> length ( ) ; p -- ; )		4238474	9					
ANR	4238590	ForInit	int p = params -> length ( ) ;	816:6:22351:22373	4238474	0	True				
ANR	4238591	IdentifierDeclStatement	int p = params -> length ( ) ;		4238474	0					
ANR	4238592	IdentifierDecl	p = params -> length ( )		4238474	0					
ANR	4238593	IdentifierDeclType	int		4238474	0					
ANR	4238594	Identifier	p		4238474	1					
ANR	4238595	AssignmentExpression	p = params -> length ( )		4238474	2		=			
ANR	4238596	Identifier	p		4238474	0					
ANR	4238597	CallExpression	params -> length ( )		4238474	1					
ANR	4238598	Callee	params -> length		4238474	0					
ANR	4238599	PtrMemberAccess	params -> length		4238474	0					
ANR	4238600	Identifier	params		4238474	0					
ANR	4238601	Identifier	length		4238474	1					
ANR	4238602	ArgumentList			4238474	1					
ANR	4238603	Condition	p --	816:30:22375:22377	4238474	1	True				
ANR	4238604	PostIncDecOperationExpression	p --		4238474	0					
ANR	4238605	Identifier	p		4238474	0					
ANR	4238606	IncDec	--		4238474	1					
ANR	4238607	CompoundStatement		27:2:666:683	4238474	2					
ANR	4238608	IdentifierDeclStatement	char const * name = ( * params ) [ p ] . name . Value ( ) ;	817:2:22386:22430	4238474	0	True				
ANR	4238609	IdentifierDecl	* name = ( * params ) [ p ] . name . Value ( )		4238474	0					
ANR	4238610	IdentifierDeclType	char const *		4238474	0					
ANR	4238611	Identifier	name		4238474	1					
ANR	4238612	AssignmentExpression	* name = ( * params ) [ p ] . name . Value ( )		4238474	2		=			
ANR	4238613	Identifier	name		4238474	0					
ANR	4238614	CallExpression	( * params ) [ p ] . name . Value ( )		4238474	1					
ANR	4238615	Callee	( * params ) [ p ] . name . Value		4238474	0					
ANR	4238616	MemberAccess	( * params ) [ p ] . name . Value		4238474	0					
ANR	4238617	MemberAccess	( * params ) [ p ] . name		4238474	0					
ANR	4238618	ArrayIndexing	( * params ) [ p ]		4238474	0					
ANR	4238619	UnaryOperationExpression	* params		4238474	0					
ANR	4238620	UnaryOperator	*		4238474	0					
ANR	4238621	Identifier	params		4238474	1					
ANR	4238622	Identifier	p		4238474	1					
ANR	4238623	Identifier	name		4238474	1					
ANR	4238624	Identifier	Value		4238474	1					
ANR	4238625	ArgumentList			4238474	1					
ANR	4238626	IdentifierDeclStatement	char * tail = NULL ;	818:2:22434:22451	4238474	1	True				
ANR	4238627	IdentifierDecl	* tail = NULL		4238474	0					
ANR	4238628	IdentifierDeclType	char *		4238474	0					
ANR	4238629	Identifier	tail		4238474	1					
ANR	4238630	AssignmentExpression	* tail = NULL		4238474	2		=			
ANR	4238631	Identifier	NULL		4238474	0					
ANR	4238632	Identifier	NULL		4238474	1					
ANR	4238633	IfStatement	"if ( strncasecmp ( name , ""SLOT"" , 4 ) != 0 )"		4238474	2					
ANR	4238634	Condition	"strncasecmp ( name , ""SLOT"" , 4 ) != 0"	819:6:22459:22493	4238474	0	True				
ANR	4238635	EqualityExpression	"strncasecmp ( name , ""SLOT"" , 4 ) != 0"		4238474	0		!=			
ANR	4238636	CallExpression	"strncasecmp ( name , ""SLOT"" , 4 )"		4238474	0					
ANR	4238637	Callee	strncasecmp		4238474	0					
ANR	4238638	Identifier	strncasecmp		4238474	0					
ANR	4238639	ArgumentList	name		4238474	1					
ANR	4238640	Argument	name		4238474	0					
ANR	4238641	Identifier	name		4238474	0					
ANR	4238642	Argument	"""SLOT"""		4238474	1					
ANR	4238643	PrimaryExpression	"""SLOT"""		4238474	0					
ANR	4238644	Argument	4		4238474	2					
ANR	4238645	PrimaryExpression	4		4238474	0					
ANR	4238646	PrimaryExpression	0		4238474	1					
ANR	4238647	ContinueStatement	continue ;	819:44:22497:22505	4238474	1	True				
ANR	4238648	ExpressionStatement	"strtol ( name + 4 , & tail , 10 )"	820:2:22509:22536	4238474	3	True				
ANR	4238649	CallExpression	"strtol ( name + 4 , & tail , 10 )"		4238474	0					
ANR	4238650	Callee	strtol		4238474	0					
ANR	4238651	Identifier	strtol		4238474	0					
ANR	4238652	ArgumentList	name + 4		4238474	1					
ANR	4238653	Argument	name + 4		4238474	0					
ANR	4238654	AdditiveExpression	name + 4		4238474	0		+			
ANR	4238655	Identifier	name		4238474	0					
ANR	4238656	PrimaryExpression	4		4238474	1					
ANR	4238657	Argument	& tail		4238474	1					
ANR	4238658	UnaryOperationExpression	& tail		4238474	0					
ANR	4238659	UnaryOperator	&		4238474	0					
ANR	4238660	Identifier	tail		4238474	1					
ANR	4238661	Argument	10		4238474	2					
ANR	4238662	PrimaryExpression	10		4238474	0					
ANR	4238663	IfStatement	"if ( tail <= name || strcasecmp ( tail , ""_EXECUTE"" ) != 0 )"		4238474	4					
ANR	4238664	Condition	"tail <= name || strcasecmp ( tail , ""_EXECUTE"" ) != 0"	821:6:22544:22594	4238474	0	True				
ANR	4238665	OrExpression	"tail <= name || strcasecmp ( tail , ""_EXECUTE"" ) != 0"		4238474	0		||			
ANR	4238666	RelationalExpression	tail <= name		4238474	0		<=			
ANR	4238667	Identifier	tail		4238474	0					
ANR	4238668	Identifier	name		4238474	1					
ANR	4238669	EqualityExpression	"strcasecmp ( tail , ""_EXECUTE"" ) != 0"		4238474	1		!=			
ANR	4238670	CallExpression	"strcasecmp ( tail , ""_EXECUTE"" )"		4238474	0					
ANR	4238671	Callee	strcasecmp		4238474	0					
ANR	4238672	Identifier	strcasecmp		4238474	0					
ANR	4238673	ArgumentList	tail		4238474	1					
ANR	4238674	Argument	tail		4238474	0					
ANR	4238675	Identifier	tail		4238474	0					
ANR	4238676	Argument	"""_EXECUTE"""		4238474	1					
ANR	4238677	PrimaryExpression	"""_EXECUTE"""		4238474	0					
ANR	4238678	PrimaryExpression	0		4238474	1					
ANR	4238679	ContinueStatement	continue ;	821:60:22598:22606	4238474	1	True				
ANR	4238680	ExpressionStatement	Execute = param ( name )	823:2:22611:22632	4238474	5	True				
ANR	4238681	AssignmentExpression	Execute = param ( name )		4238474	0		=			
ANR	4238682	Identifier	Execute		4238474	0					
ANR	4238683	CallExpression	param ( name )		4238474	1					
ANR	4238684	Callee	param		4238474	0					
ANR	4238685	Identifier	param		4238474	0					
ANR	4238686	ArgumentList	name		4238474	1					
ANR	4238687	Argument	name		4238474	0					
ANR	4238688	Identifier	name		4238474	0					
ANR	4238689	IfStatement	if ( Execute )		4238474	6					
ANR	4238690	Condition	Execute	824:6:22640:22646	4238474	0	True				
ANR	4238691	Identifier	Execute		4238474	0					
ANR	4238692	CompoundStatement		33:16:882:882	4238474	1					
ANR	4238693	IfStatement	if ( ! ExecuteDirs . contains ( Execute ) )		4238474	0					
ANR	4238694	Condition	! ExecuteDirs . contains ( Execute )	825:7:22659:22690	4238474	0	True				
ANR	4238695	UnaryOperationExpression	! ExecuteDirs . contains ( Execute )		4238474	0					
ANR	4238696	UnaryOperator	!		4238474	0					
ANR	4238697	CallExpression	ExecuteDirs . contains ( Execute )		4238474	1					
ANR	4238698	Callee	ExecuteDirs . contains		4238474	0					
ANR	4238699	MemberAccess	ExecuteDirs . contains		4238474	0					
ANR	4238700	Identifier	ExecuteDirs		4238474	0					
ANR	4238701	Identifier	contains		4238474	1					
ANR	4238702	ArgumentList	Execute		4238474	1					
ANR	4238703	Argument	Execute		4238474	0					
ANR	4238704	Identifier	Execute		4238474	0					
ANR	4238705	CompoundStatement		34:42:926:926	4238474	1					
ANR	4238706	ExpressionStatement	ExecuteDirs . append ( Execute )	826:4:22700:22729	4238474	0	True				
ANR	4238707	CallExpression	ExecuteDirs . append ( Execute )		4238474	0					
ANR	4238708	Callee	ExecuteDirs . append		4238474	0					
ANR	4238709	MemberAccess	ExecuteDirs . append		4238474	0					
ANR	4238710	Identifier	ExecuteDirs		4238474	0					
ANR	4238711	Identifier	append		4238474	1					
ANR	4238712	ArgumentList	Execute		4238474	1					
ANR	4238713	Argument	Execute		4238474	0					
ANR	4238714	Identifier	Execute		4238474	0					
ANR	4238715	ExpressionStatement	free ( Execute )	828:3:22739:22754	4238474	1	True				
ANR	4238716	CallExpression	free ( Execute )		4238474	0					
ANR	4238717	Callee	free		4238474	0					
ANR	4238718	Identifier	free		4238474	0					
ANR	4238719	ArgumentList	Execute		4238474	1					
ANR	4238720	Argument	Execute		4238474	0					
ANR	4238721	Identifier	Execute		4238474	0					
ANR	4238722	Statement	delete	831:1:22764:22769	4238474	10	True				
ANR	4238723	ExpressionStatement	params	831:8:22771:22777	4238474	11	True				
ANR	4238724	Identifier	params		4238474	0					
ANR	4238725	IfStatement	"if ( ( PreenAdmin = param ( ""PREEN_ADMIN"" ) ) == NULL )"		4238474	12					
ANR	4238726	Condition	"( PreenAdmin = param ( ""PREEN_ADMIN"" ) ) == NULL"	833:8:22788:22830	4238474	0	True				
ANR	4238727	EqualityExpression	"( PreenAdmin = param ( ""PREEN_ADMIN"" ) ) == NULL"		4238474	0		==			
ANR	4238728	AssignmentExpression	"PreenAdmin = param ( ""PREEN_ADMIN"" )"		4238474	0		=			
ANR	4238729	Identifier	PreenAdmin		4238474	0					
ANR	4238730	CallExpression	"param ( ""PREEN_ADMIN"" )"		4238474	1					
ANR	4238731	Callee	param		4238474	0					
ANR	4238732	Identifier	param		4238474	0					
ANR	4238733	ArgumentList	"""PREEN_ADMIN"""		4238474	1					
ANR	4238734	Argument	"""PREEN_ADMIN"""		4238474	0					
ANR	4238735	PrimaryExpression	"""PREEN_ADMIN"""		4238474	0					
ANR	4238736	Identifier	NULL		4238474	1					
ANR	4238737	CompoundStatement		42:54:1066:1066	4238474	1					
ANR	4238738	IfStatement	"if ( ( PreenAdmin = param ( ""CONDOR_ADMIN"" ) ) == NULL )"		4238474	0					
ANR	4238739	Condition	"( PreenAdmin = param ( ""CONDOR_ADMIN"" ) ) == NULL"	834:6:22842:22885	4238474	0	True				
ANR	4238740	EqualityExpression	"( PreenAdmin = param ( ""CONDOR_ADMIN"" ) ) == NULL"		4238474	0		==			
ANR	4238741	AssignmentExpression	"PreenAdmin = param ( ""CONDOR_ADMIN"" )"		4238474	0		=			
ANR	4238742	Identifier	PreenAdmin		4238474	0					
ANR	4238743	CallExpression	"param ( ""CONDOR_ADMIN"" )"		4238474	1					
ANR	4238744	Callee	param		4238474	0					
ANR	4238745	Identifier	param		4238474	0					
ANR	4238746	ArgumentList	"""CONDOR_ADMIN"""		4238474	1					
ANR	4238747	Argument	"""CONDOR_ADMIN"""		4238474	0					
ANR	4238748	PrimaryExpression	"""CONDOR_ADMIN"""		4238474	0					
ANR	4238749	Identifier	NULL		4238474	1					
ANR	4238750	CompoundStatement		43:53:1121:1121	4238474	1					
ANR	4238751	ExpressionStatement	"EXCEPT ( ""CONDOR_ADMIN not specified in config file"" )"	835:3:22894:22947	4238474	0	True				
ANR	4238752	CallExpression	"EXCEPT ( ""CONDOR_ADMIN not specified in config file"" )"		4238474	0					
ANR	4238753	Callee	EXCEPT		4238474	0					
ANR	4238754	Identifier	EXCEPT		4238474	0					
ANR	4238755	ArgumentList	"""CONDOR_ADMIN not specified in config file"""		4238474	1					
ANR	4238756	Argument	"""CONDOR_ADMIN not specified in config file"""		4238474	0					
ANR	4238757	PrimaryExpression	"""CONDOR_ADMIN not specified in config file"""		4238474	0					
ANR	4238758	ExpressionStatement	"ValidSpoolFiles = param ( ""VALID_SPOOL_FILES"" )"	839:1:22961:23005	4238474	13	True				
ANR	4238759	AssignmentExpression	"ValidSpoolFiles = param ( ""VALID_SPOOL_FILES"" )"		4238474	0		=			
ANR	4238760	Identifier	ValidSpoolFiles		4238474	0					
ANR	4238761	CallExpression	"param ( ""VALID_SPOOL_FILES"" )"		4238474	1					
ANR	4238762	Callee	param		4238474	0					
ANR	4238763	Identifier	param		4238474	0					
ANR	4238764	ArgumentList	"""VALID_SPOOL_FILES"""		4238474	1					
ANR	4238765	Argument	"""VALID_SPOOL_FILES"""		4238474	0					
ANR	4238766	PrimaryExpression	"""VALID_SPOOL_FILES"""		4238474	0					
ANR	4238767	ExpressionStatement	"InvalidLogFiles = param ( ""INVALID_LOG_FILES"" )"	841:1:23009:23053	4238474	14	True				
ANR	4238768	AssignmentExpression	"InvalidLogFiles = param ( ""INVALID_LOG_FILES"" )"		4238474	0		=			
ANR	4238769	Identifier	InvalidLogFiles		4238474	0					
ANR	4238770	CallExpression	"param ( ""INVALID_LOG_FILES"" )"		4238474	1					
ANR	4238771	Callee	param		4238474	0					
ANR	4238772	Identifier	param		4238474	0					
ANR	4238773	ArgumentList	"""INVALID_LOG_FILES"""		4238474	1					
ANR	4238774	Argument	"""INVALID_LOG_FILES"""		4238474	0					
ANR	4238775	PrimaryExpression	"""INVALID_LOG_FILES"""		4238474	0					
ANR	4238776	IfStatement	"if ( ( MailPrg = param ( ""MAIL"" ) ) == NULL )"		4238474	15					
ANR	4238777	Condition	"( MailPrg = param ( ""MAIL"" ) ) == NULL"	843:5:23061:23093	4238474	0	True				
ANR	4238778	EqualityExpression	"( MailPrg = param ( ""MAIL"" ) ) == NULL"		4238474	0		==			
ANR	4238779	AssignmentExpression	"MailPrg = param ( ""MAIL"" )"		4238474	0		=			
ANR	4238780	Identifier	MailPrg		4238474	0					
ANR	4238781	CallExpression	"param ( ""MAIL"" )"		4238474	1					
ANR	4238782	Callee	param		4238474	0					
ANR	4238783	Identifier	param		4238474	0					
ANR	4238784	ArgumentList	"""MAIL"""		4238474	1					
ANR	4238785	Argument	"""MAIL"""		4238474	0					
ANR	4238786	PrimaryExpression	"""MAIL"""		4238474	0					
ANR	4238787	Identifier	NULL		4238474	1					
ANR	4238788	CompoundStatement		52:41:1329:1329	4238474	1					
ANR	4238789	ExpressionStatement	"EXCEPT ( ""MAIL not specified in config file"" )"	844:2:23101:23147	4238474	0	True				
ANR	4238790	CallExpression	"EXCEPT ( ""MAIL not specified in config file"" )"		4238474	0					
ANR	4238791	Callee	EXCEPT		4238474	0					
ANR	4238792	Identifier	EXCEPT		4238474	0					
ANR	4238793	ArgumentList	"""MAIL not specified in config file"""		4238474	1					
ANR	4238794	Argument	"""MAIL not specified in config file"""		4238474	0					
ANR	4238795	PrimaryExpression	"""MAIL not specified in config file"""		4238474	0					
ANR	4238796	ReturnType	void		4238474	1					
ANR	4238797	Identifier	init_params		4238474	2					
ANR	4238798	ParameterList			4238474	3					
ANR	4238799	CFGEntryNode	ENTRY		4238474		True				
ANR	4238800	CFGExitNode	EXIT		4238474		True				
ANR	4238801	Symbol	ExecuteDirs . contains		4238474						
ANR	4238802	Symbol	Execute		4238474						
ANR	4238803	Symbol	( * params ) [ p ] . name . Value		4238474						
ANR	4238804	Symbol	strncasecmp		4238474						
ANR	4238805	Symbol	params -> length		4238474						
ANR	4238806	Symbol	* * params		4238474						
ANR	4238807	Symbol	PreenAdmin		4238474						
ANR	4238808	Symbol	param_all		4238474						
ANR	4238809	Symbol	param		4238474						
ANR	4238810	Symbol	DaemonSockDir		4238474						
ANR	4238811	Symbol	& tail		4238474						
ANR	4238812	Symbol	strcasecmp		4238474						
ANR	4238813	Symbol	* params		4238474						
ANR	4238814	Symbol	ValidSpoolFiles		4238474						
ANR	4238815	Symbol	NULL		4238474						
ANR	4238816	Symbol	Log		4238474						
ANR	4238817	Symbol	tail		4238474						
ANR	4238818	Symbol	( * params ) [ p ] . name		4238474						
ANR	4238819	Symbol	Spool		4238474						
ANR	4238820	Symbol	params		4238474						
ANR	4238821	Symbol	InvalidLogFiles		4238474						
ANR	4238822	Symbol	p		4238474						
ANR	4238823	Symbol	MailPrg		4238474						
ANR	4238824	Symbol	name		4238474						
ANR	4238825	Symbol	* p		4238474						
ANR	4238826	Symbol	ExecuteDirs		4238474						
ANR	4238827	Function	good_file	852:0:23233:23434							
ANR	4238828	FunctionDef	"good_file (const char * dir , const char * name)"		4238827	0					
ANR	4238829	CompoundStatement		854:0:23285:23434	4238827	0					
ANR	4238830	IfStatement	if ( VerboseFlag )		4238827	0					
ANR	4238831	Condition	VerboseFlag	855:5:23292:23302	4238827	0	True				
ANR	4238832	Identifier	VerboseFlag		4238827	0					
ANR	4238833	CompoundStatement		2:19:20:20	4238827	1					
ANR	4238834	ExpressionStatement	"printf ( ""%s%c%s - OK\\n"" , dir , DIR_DELIM_CHAR , name )"	856:2:23310:23362	4238827	0	True				
ANR	4238835	CallExpression	"printf ( ""%s%c%s - OK\\n"" , dir , DIR_DELIM_CHAR , name )"		4238827	0					
ANR	4238836	Callee	printf		4238827	0					
ANR	4238837	Identifier	printf		4238827	0					
ANR	4238838	ArgumentList	"""%s%c%s - OK\\n"""		4238827	1					
ANR	4238839	Argument	"""%s%c%s - OK\\n"""		4238827	0					
ANR	4238840	PrimaryExpression	"""%s%c%s - OK\\n"""		4238827	0					
ANR	4238841	Argument	dir		4238827	1					
ANR	4238842	Identifier	dir		4238827	0					
ANR	4238843	Argument	DIR_DELIM_CHAR		4238827	2					
ANR	4238844	Identifier	DIR_DELIM_CHAR		4238827	0					
ANR	4238845	Argument	name		4238827	3					
ANR	4238846	Identifier	name		4238827	0					
ANR	4238847	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s%c%s - OK\\n"" , dir , DIR_DELIM_CHAR , name )"	857:2:23366:23429	4238827	1	True				
ANR	4238848	CallExpression	"dprintf ( D_ALWAYS , ""%s%c%s - OK\\n"" , dir , DIR_DELIM_CHAR , name )"		4238827	0					
ANR	4238849	Callee	dprintf		4238827	0					
ANR	4238850	Identifier	dprintf		4238827	0					
ANR	4238851	ArgumentList	D_ALWAYS		4238827	1					
ANR	4238852	Argument	D_ALWAYS		4238827	0					
ANR	4238853	Identifier	D_ALWAYS		4238827	0					
ANR	4238854	Argument	"""%s%c%s - OK\\n"""		4238827	1					
ANR	4238855	PrimaryExpression	"""%s%c%s - OK\\n"""		4238827	0					
ANR	4238856	Argument	dir		4238827	2					
ANR	4238857	Identifier	dir		4238827	0					
ANR	4238858	Argument	DIR_DELIM_CHAR		4238827	3					
ANR	4238859	Identifier	DIR_DELIM_CHAR		4238827	0					
ANR	4238860	Argument	name		4238827	4					
ANR	4238861	Identifier	name		4238827	0					
ANR	4238862	ReturnType	void		4238827	1					
ANR	4238863	Identifier	good_file		4238827	2					
ANR	4238864	ParameterList	"const char * dir , const char * name"		4238827	3					
ANR	4238865	Parameter	const char * dir	853:11:23249:23263	4238827	0	True				
ANR	4238866	ParameterType	const char *		4238827	0					
ANR	4238867	Identifier	dir		4238827	1					
ANR	4238868	Parameter	const char * name	853:28:23266:23281	4238827	1	True				
ANR	4238869	ParameterType	const char *		4238827	0					
ANR	4238870	Identifier	name		4238827	1					
ANR	4238871	CFGEntryNode	ENTRY		4238827		True				
ANR	4238872	CFGExitNode	EXIT		4238827		True				
ANR	4238873	Symbol	VerboseFlag		4238827						
ANR	4238874	Symbol	DIR_DELIM_CHAR		4238827						
ANR	4238875	Symbol	name		4238827						
ANR	4238876	Symbol	D_ALWAYS		4238827						
ANR	4238877	Symbol	dir		4238827						
ANR	4238878	Function	bad_file	866:0:23602:24665							
ANR	4238879	FunctionDef	"bad_file (const char * dirpath , const char * name , Directory & dir)"		4238878	0					
ANR	4238880	CompoundStatement		868:0:23674:24665	4238878	0					
ANR	4238881	IdentifierDeclStatement	MyString pathname ;	869:1:23677:23694	4238878	0	True				
ANR	4238882	IdentifierDecl	pathname		4238878	0					
ANR	4238883	IdentifierDeclType	MyString		4238878	0					
ANR	4238884	Identifier	pathname		4238878	1					
ANR	4238885	IdentifierDeclStatement	MyString buf ;	870:1:23697:23709	4238878	1	True				
ANR	4238886	IdentifierDecl	buf		4238878	0					
ANR	4238887	IdentifierDeclType	MyString		4238878	0					
ANR	4238888	Identifier	buf		4238878	1					
ANR	4238889	IfStatement	if ( is_relative_to_cwd ( name ) )		4238878	2					
ANR	4238890	Condition	is_relative_to_cwd ( name )	872:5:23717:23742	4238878	0	True				
ANR	4238891	CallExpression	is_relative_to_cwd ( name )		4238878	0					
ANR	4238892	Callee	is_relative_to_cwd		4238878	0					
ANR	4238893	Identifier	is_relative_to_cwd		4238878	0					
ANR	4238894	ArgumentList	name		4238878	1					
ANR	4238895	Argument	name		4238878	0					
ANR	4238896	Identifier	name		4238878	0					
ANR	4238897	CompoundStatement		5:34:71:71	4238878	1					
ANR	4238898	ExpressionStatement	"pathname . sprintf ( ""%s%c%s"" , dirpath , DIR_DELIM_CHAR , name )"	873:1:23749:23808	4238878	0	True				
ANR	4238899	CallExpression	"pathname . sprintf ( ""%s%c%s"" , dirpath , DIR_DELIM_CHAR , name )"		4238878	0					
ANR	4238900	Callee	pathname . sprintf		4238878	0					
ANR	4238901	MemberAccess	pathname . sprintf		4238878	0					
ANR	4238902	Identifier	pathname		4238878	0					
ANR	4238903	Identifier	sprintf		4238878	1					
ANR	4238904	ArgumentList	"""%s%c%s"""		4238878	1					
ANR	4238905	Argument	"""%s%c%s"""		4238878	0					
ANR	4238906	PrimaryExpression	"""%s%c%s"""		4238878	0					
ANR	4238907	Argument	dirpath		4238878	1					
ANR	4238908	Identifier	dirpath		4238878	0					
ANR	4238909	Argument	DIR_DELIM_CHAR		4238878	2					
ANR	4238910	Identifier	DIR_DELIM_CHAR		4238878	0					
ANR	4238911	Argument	name		4238878	3					
ANR	4238912	Identifier	name		4238878	0					
ANR	4238913	ElseStatement	else		4238878	0					
ANR	4238914	CompoundStatement		8:6:144:144	4238878	0					
ANR	4238915	ExpressionStatement	pathname = name	876:2:23823:23838	4238878	0	True				
ANR	4238916	AssignmentExpression	pathname = name		4238878	0		=			
ANR	4238917	Identifier	pathname		4238878	0					
ANR	4238918	Identifier	name		4238878	1					
ANR	4238919	IfStatement	if ( VerboseFlag )		4238878	3					
ANR	4238920	Condition	VerboseFlag	879:5:23849:23859	4238878	0	True				
ANR	4238921	Identifier	VerboseFlag		4238878	0					
ANR	4238922	CompoundStatement		12:19:188:188	4238878	1					
ANR	4238923	ExpressionStatement	"printf ( ""%s - BAD\\n"" , pathname . Value ( ) )"	880:2:23867:23907	4238878	0	True				
ANR	4238924	CallExpression	"printf ( ""%s - BAD\\n"" , pathname . Value ( ) )"		4238878	0					
ANR	4238925	Callee	printf		4238878	0					
ANR	4238926	Identifier	printf		4238878	0					
ANR	4238927	ArgumentList	"""%s - BAD\\n"""		4238878	1					
ANR	4238928	Argument	"""%s - BAD\\n"""		4238878	0					
ANR	4238929	PrimaryExpression	"""%s - BAD\\n"""		4238878	0					
ANR	4238930	Argument	pathname . Value ( )		4238878	1					
ANR	4238931	CallExpression	pathname . Value ( )		4238878	0					
ANR	4238932	Callee	pathname . Value		4238878	0					
ANR	4238933	MemberAccess	pathname . Value		4238878	0					
ANR	4238934	Identifier	pathname		4238878	0					
ANR	4238935	Identifier	Value		4238878	1					
ANR	4238936	ArgumentList			4238878	1					
ANR	4238937	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s - BAD\\n"" , pathname . Value ( ) )"	881:2:23911:23962	4238878	1	True				
ANR	4238938	CallExpression	"dprintf ( D_ALWAYS , ""%s - BAD\\n"" , pathname . Value ( ) )"		4238878	0					
ANR	4238939	Callee	dprintf		4238878	0					
ANR	4238940	Identifier	dprintf		4238878	0					
ANR	4238941	ArgumentList	D_ALWAYS		4238878	1					
ANR	4238942	Argument	D_ALWAYS		4238878	0					
ANR	4238943	Identifier	D_ALWAYS		4238878	0					
ANR	4238944	Argument	"""%s - BAD\\n"""		4238878	1					
ANR	4238945	PrimaryExpression	"""%s - BAD\\n"""		4238878	0					
ANR	4238946	Argument	pathname . Value ( )		4238878	2					
ANR	4238947	CallExpression	pathname . Value ( )		4238878	0					
ANR	4238948	Callee	pathname . Value		4238878	0					
ANR	4238949	MemberAccess	pathname . Value		4238878	0					
ANR	4238950	Identifier	pathname		4238878	0					
ANR	4238951	Identifier	Value		4238878	1					
ANR	4238952	ArgumentList			4238878	1					
ANR	4238953	IfStatement	if ( RmFlag )		4238878	4					
ANR	4238954	Condition	RmFlag	884:5:23973:23978	4238878	0	True				
ANR	4238955	Identifier	RmFlag		4238878	0					
ANR	4238956	CompoundStatement		18:2:311:366	4238878	1					
ANR	4238957	IdentifierDeclStatement	bool removed = dir . Remove_Full_Path ( pathname . Value ( ) ) ;	885:2:23986:24041	4238878	0	True				
ANR	4238958	IdentifierDecl	removed = dir . Remove_Full_Path ( pathname . Value ( ) )		4238878	0					
ANR	4238959	IdentifierDeclType	bool		4238878	0					
ANR	4238960	Identifier	removed		4238878	1					
ANR	4238961	AssignmentExpression	removed = dir . Remove_Full_Path ( pathname . Value ( ) )		4238878	2		=			
ANR	4238962	Identifier	removed		4238878	0					
ANR	4238963	CallExpression	dir . Remove_Full_Path ( pathname . Value ( ) )		4238878	1					
ANR	4238964	Callee	dir . Remove_Full_Path		4238878	0					
ANR	4238965	MemberAccess	dir . Remove_Full_Path		4238878	0					
ANR	4238966	Identifier	dir		4238878	0					
ANR	4238967	Identifier	Remove_Full_Path		4238878	1					
ANR	4238968	ArgumentList	pathname . Value ( )		4238878	1					
ANR	4238969	Argument	pathname . Value ( )		4238878	0					
ANR	4238970	CallExpression	pathname . Value ( )		4238878	0					
ANR	4238971	Callee	pathname . Value		4238878	0					
ANR	4238972	MemberAccess	pathname . Value		4238878	0					
ANR	4238973	Identifier	pathname		4238878	0					
ANR	4238974	Identifier	Value		4238878	1					
ANR	4238975	ArgumentList			4238878	1					
ANR	4238976	IfStatement	if ( ! removed && privsep_enabled ( ) )		4238878	1					
ANR	4238977	Condition	! removed && privsep_enabled ( )	886:6:24049:24077	4238878	0	True				
ANR	4238978	AndExpression	! removed && privsep_enabled ( )		4238878	0		&&			
ANR	4238979	UnaryOperationExpression	! removed		4238878	0					
ANR	4238980	UnaryOperator	!		4238878	0					
ANR	4238981	Identifier	removed		4238878	1					
ANR	4238982	CallExpression	privsep_enabled ( )		4238878	1					
ANR	4238983	Callee	privsep_enabled		4238878	0					
ANR	4238984	Identifier	privsep_enabled		4238878	0					
ANR	4238985	ArgumentList			4238878	1					
ANR	4238986	CompoundStatement		19:38:406:406	4238878	1					
ANR	4238987	ExpressionStatement	removed = privsep_remove_dir ( pathname . Value ( ) )	887:3:24086:24134	4238878	0	True				
ANR	4238988	AssignmentExpression	removed = privsep_remove_dir ( pathname . Value ( ) )		4238878	0		=			
ANR	4238989	Identifier	removed		4238878	0					
ANR	4238990	CallExpression	privsep_remove_dir ( pathname . Value ( ) )		4238878	1					
ANR	4238991	Callee	privsep_remove_dir		4238878	0					
ANR	4238992	Identifier	privsep_remove_dir		4238878	0					
ANR	4238993	ArgumentList	pathname . Value ( )		4238878	1					
ANR	4238994	Argument	pathname . Value ( )		4238878	0					
ANR	4238995	CallExpression	pathname . Value ( )		4238878	0					
ANR	4238996	Callee	pathname . Value		4238878	0					
ANR	4238997	MemberAccess	pathname . Value		4238878	0					
ANR	4238998	Identifier	pathname		4238878	0					
ANR	4238999	Identifier	Value		4238878	1					
ANR	4239000	ArgumentList			4238878	1					
ANR	4239001	IfStatement	if ( VerboseFlag )		4238878	1					
ANR	4239002	Condition	VerboseFlag	888:7:24143:24153	4238878	0	True				
ANR	4239003	Identifier	VerboseFlag		4238878	0					
ANR	4239004	CompoundStatement		21:21:482:482	4238878	1					
ANR	4239005	IfStatement	if ( removed )		4238878	0					
ANR	4239006	Condition	removed	889:8:24167:24173	4238878	0	True				
ANR	4239007	Identifier	removed		4238878	0					
ANR	4239008	CompoundStatement		22:18:502:502	4238878	1					
ANR	4239009	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s - failed to remove directly, but succeeded via privsep switchboard\\n"" , pathname . Value ( ) )"	890:5:24184:24296	4238878	0	True				
ANR	4239010	CallExpression	"dprintf ( D_ALWAYS , ""%s - failed to remove directly, but succeeded via privsep switchboard\\n"" , pathname . Value ( ) )"		4238878	0					
ANR	4239011	Callee	dprintf		4238878	0					
ANR	4239012	Identifier	dprintf		4238878	0					
ANR	4239013	ArgumentList	D_ALWAYS		4238878	1					
ANR	4239014	Argument	D_ALWAYS		4238878	0					
ANR	4239015	Identifier	D_ALWAYS		4238878	0					
ANR	4239016	Argument	"""%s - failed to remove directly, but succeeded via privsep switchboard\\n"""		4238878	1					
ANR	4239017	PrimaryExpression	"""%s - failed to remove directly, but succeeded via privsep switchboard\\n"""		4238878	0					
ANR	4239018	Argument	pathname . Value ( )		4238878	2					
ANR	4239019	CallExpression	pathname . Value ( )		4238878	0					
ANR	4239020	Callee	pathname . Value		4238878	0					
ANR	4239021	MemberAccess	pathname . Value		4238878	0					
ANR	4239022	Identifier	pathname		4238878	0					
ANR	4239023	Identifier	Value		4238878	1					
ANR	4239024	ArgumentList			4238878	1					
ANR	4239025	ExpressionStatement	"printf ( ""%s - failed to remove directly, but succeeded via privsep switchboard\\n"" , pathname . Value ( ) )"	891:5:24303:24404	4238878	1	True				
ANR	4239026	CallExpression	"printf ( ""%s - failed to remove directly, but succeeded via privsep switchboard\\n"" , pathname . Value ( ) )"		4238878	0					
ANR	4239027	Callee	printf		4238878	0					
ANR	4239028	Identifier	printf		4238878	0					
ANR	4239029	ArgumentList	"""%s - failed to remove directly, but succeeded via privsep switchboard\\n"""		4238878	1					
ANR	4239030	Argument	"""%s - failed to remove directly, but succeeded via privsep switchboard\\n"""		4238878	0					
ANR	4239031	PrimaryExpression	"""%s - failed to remove directly, but succeeded via privsep switchboard\\n"""		4238878	0					
ANR	4239032	Argument	pathname . Value ( )		4238878	1					
ANR	4239033	CallExpression	pathname . Value ( )		4238878	0					
ANR	4239034	Callee	pathname . Value		4238878	0					
ANR	4239035	MemberAccess	pathname . Value		4238878	0					
ANR	4239036	Identifier	pathname		4238878	0					
ANR	4239037	Identifier	Value		4238878	1					
ANR	4239038	ArgumentList			4238878	1					
ANR	4239039	IfStatement	if ( removed )		4238878	2					
ANR	4239040	Condition	removed	895:6:24427:24433	4238878	0	True				
ANR	4239041	Identifier	removed		4238878	0					
ANR	4239042	CompoundStatement		28:16:762:762	4238878	1					
ANR	4239043	ExpressionStatement	"buf . sprintf ( ""%s - Removed"" , pathname . Value ( ) )"	896:3:24442:24489	4238878	0	True				
ANR	4239044	CallExpression	"buf . sprintf ( ""%s - Removed"" , pathname . Value ( ) )"		4238878	0					
ANR	4239045	Callee	buf . sprintf		4238878	0					
ANR	4239046	MemberAccess	buf . sprintf		4238878	0					
ANR	4239047	Identifier	buf		4238878	0					
ANR	4239048	Identifier	sprintf		4238878	1					
ANR	4239049	ArgumentList	"""%s - Removed"""		4238878	1					
ANR	4239050	Argument	"""%s - Removed"""		4238878	0					
ANR	4239051	PrimaryExpression	"""%s - Removed"""		4238878	0					
ANR	4239052	Argument	pathname . Value ( )		4238878	1					
ANR	4239053	CallExpression	pathname . Value ( )		4238878	0					
ANR	4239054	Callee	pathname . Value		4238878	0					
ANR	4239055	MemberAccess	pathname . Value		4238878	0					
ANR	4239056	Identifier	pathname		4238878	0					
ANR	4239057	Identifier	Value		4238878	1					
ANR	4239058	ArgumentList			4238878	1					
ANR	4239059	ElseStatement	else		4238878	0					
ANR	4239060	CompoundStatement		30:9:825:825	4238878	0					
ANR	4239061	ExpressionStatement	"buf . sprintf ( ""%s - Can't Remove"" , pathname . Value ( ) )"	898:3:24505:24557	4238878	0	True				
ANR	4239062	CallExpression	"buf . sprintf ( ""%s - Can't Remove"" , pathname . Value ( ) )"		4238878	0					
ANR	4239063	Callee	buf . sprintf		4238878	0					
ANR	4239064	MemberAccess	buf . sprintf		4238878	0					
ANR	4239065	Identifier	buf		4238878	0					
ANR	4239066	Identifier	sprintf		4238878	1					
ANR	4239067	ArgumentList	"""%s - Can't Remove"""		4238878	1					
ANR	4239068	Argument	"""%s - Can't Remove"""		4238878	0					
ANR	4239069	PrimaryExpression	"""%s - Can't Remove"""		4238878	0					
ANR	4239070	Argument	pathname . Value ( )		4238878	1					
ANR	4239071	CallExpression	pathname . Value ( )		4238878	0					
ANR	4239072	Callee	pathname . Value		4238878	0					
ANR	4239073	MemberAccess	pathname . Value		4238878	0					
ANR	4239074	Identifier	pathname		4238878	0					
ANR	4239075	Identifier	Value		4238878	1					
ANR	4239076	ArgumentList			4238878	1					
ANR	4239077	ElseStatement	else		4238878	0					
ANR	4239078	CompoundStatement		33:8:896:896	4238878	0					
ANR	4239079	ExpressionStatement	"buf . sprintf ( ""%s - Not Removed"" , pathname . Value ( ) )"	901:2:24575:24626	4238878	0	True				
ANR	4239080	CallExpression	"buf . sprintf ( ""%s - Not Removed"" , pathname . Value ( ) )"		4238878	0					
ANR	4239081	Callee	buf . sprintf		4238878	0					
ANR	4239082	MemberAccess	buf . sprintf		4238878	0					
ANR	4239083	Identifier	buf		4238878	0					
ANR	4239084	Identifier	sprintf		4238878	1					
ANR	4239085	ArgumentList	"""%s - Not Removed"""		4238878	1					
ANR	4239086	Argument	"""%s - Not Removed"""		4238878	0					
ANR	4239087	PrimaryExpression	"""%s - Not Removed"""		4238878	0					
ANR	4239088	Argument	pathname . Value ( )		4238878	1					
ANR	4239089	CallExpression	pathname . Value ( )		4238878	0					
ANR	4239090	Callee	pathname . Value		4238878	0					
ANR	4239091	MemberAccess	pathname . Value		4238878	0					
ANR	4239092	Identifier	pathname		4238878	0					
ANR	4239093	Identifier	Value		4238878	1					
ANR	4239094	ArgumentList			4238878	1					
ANR	4239095	ExpressionStatement	BadFiles -> append ( buf . Value ( ) )	903:1:24632:24663	4238878	5	True				
ANR	4239096	CallExpression	BadFiles -> append ( buf . Value ( ) )		4238878	0					
ANR	4239097	Callee	BadFiles -> append		4238878	0					
ANR	4239098	PtrMemberAccess	BadFiles -> append		4238878	0					
ANR	4239099	Identifier	BadFiles		4238878	0					
ANR	4239100	Identifier	append		4238878	1					
ANR	4239101	ArgumentList	buf . Value ( )		4238878	1					
ANR	4239102	Argument	buf . Value ( )		4238878	0					
ANR	4239103	CallExpression	buf . Value ( )		4238878	0					
ANR	4239104	Callee	buf . Value		4238878	0					
ANR	4239105	MemberAccess	buf . Value		4238878	0					
ANR	4239106	Identifier	buf		4238878	0					
ANR	4239107	Identifier	Value		4238878	1					
ANR	4239108	ArgumentList			4238878	1					
ANR	4239109	ReturnType	void		4238878	1					
ANR	4239110	Identifier	bad_file		4238878	2					
ANR	4239111	ParameterList	"const char * dirpath , const char * name , Directory & dir"		4238878	3					
ANR	4239112	Parameter	const char * dirpath	867:10:23617:23635	4238878	0	True				
ANR	4239113	ParameterType	const char *		4238878	0					
ANR	4239114	Identifier	dirpath		4238878	1					
ANR	4239115	Parameter	const char * name	867:31:23638:23653	4238878	1	True				
ANR	4239116	ParameterType	const char *		4238878	0					
ANR	4239117	Identifier	name		4238878	1					
ANR	4239118	Parameter	Directory & dir	867:49:23656:23670	4238878	2	True				
ANR	4239119	ParameterType	Directory &		4238878	0					
ANR	4239120	Identifier	dir		4238878	1					
ANR	4239121	CFGEntryNode	ENTRY		4238878		True				
ANR	4239122	CFGExitNode	EXIT		4238878		True				
ANR	4239123	Symbol	dir . Remove_Full_Path		4238878						
ANR	4239124	Symbol	dirpath		4238878						
ANR	4239125	Symbol	DIR_DELIM_CHAR		4238878						
ANR	4239126	Symbol	D_ALWAYS		4238878						
ANR	4239127	Symbol	BadFiles		4238878						
ANR	4239128	Symbol	RmFlag		4238878						
ANR	4239129	Symbol	dir		4238878						
ANR	4239130	Symbol	pathname		4238878						
ANR	4239131	Symbol	buf		4238878						
ANR	4239132	Symbol	VerboseFlag		4238878						
ANR	4239133	Symbol	removed		4238878						
ANR	4239134	Symbol	is_relative_to_cwd		4238878						
ANR	4239135	Symbol	pathname . Value		4238878						
ANR	4239136	Symbol	privsep_enabled		4238878						
ANR	4239137	Symbol	name		4238878						
ANR	4239138	Symbol	buf . Value		4238878						
ANR	4239139	Symbol	privsep_remove_dir		4238878						
ANR	4239140	Function	get_machine_state	908:0:24710:25454							
ANR	4239141	FunctionDef	get_machine_state ()		4239140	0					
ANR	4239142	CompoundStatement		910:0:24736:25454	4239140	0					
ANR	4239143	IdentifierDeclStatement	char * state_str = NULL ;	911:1:24739:24761	4239140	0	True				
ANR	4239144	IdentifierDecl	* state_str = NULL		4239140	0					
ANR	4239145	IdentifierDeclType	char *		4239140	0					
ANR	4239146	Identifier	state_str		4239140	1					
ANR	4239147	AssignmentExpression	* state_str = NULL		4239140	2		=			
ANR	4239148	Identifier	NULL		4239140	0					
ANR	4239149	Identifier	NULL		4239140	1					
ANR	4239150	IdentifierDeclStatement	State s ;	912:1:24764:24771	4239140	1	True				
ANR	4239151	IdentifierDecl	s		4239140	0					
ANR	4239152	IdentifierDeclType	State		4239140	0					
ANR	4239153	Identifier	s		4239140	1					
ANR	4239154	IdentifierDeclStatement	ReliSock * sock ;	914:1:24775:24789	4239140	2	True				
ANR	4239155	IdentifierDecl	* sock		4239140	0					
ANR	4239156	IdentifierDeclType	ReliSock *		4239140	0					
ANR	4239157	Identifier	sock		4239140	1					
ANR	4239158	IdentifierDeclStatement	Daemon my_startd ( DT_STARTD ) ;	915:1:24792:24821	4239140	3	True				
ANR	4239159	IdentifierDecl	my_startd ( DT_STARTD )		4239140	0					
ANR	4239160	IdentifierDeclType	Daemon		4239140	0					
ANR	4239161	Identifier	my_startd		4239140	1					
ANR	4239162	Identifier	DT_STARTD		4239140	2					
ANR	4239163	IfStatement	if ( ! my_startd . locate ( ) )		4239140	4					
ANR	4239164	Condition	! my_startd . locate ( )	916:5:24828:24847	4239140	0	True				
ANR	4239165	UnaryOperationExpression	! my_startd . locate ( )		4239140	0					
ANR	4239166	UnaryOperator	!		4239140	0					
ANR	4239167	CallExpression	my_startd . locate ( )		4239140	1					
ANR	4239168	Callee	my_startd . locate		4239140	0					
ANR	4239169	MemberAccess	my_startd . locate		4239140	0					
ANR	4239170	Identifier	my_startd		4239140	0					
ANR	4239171	Identifier	locate		4239140	1					
ANR	4239172	ArgumentList			4239140	1					
ANR	4239173	CompoundStatement		7:28:114:114	4239140	1					
ANR	4239174	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't find local startd address.\\n"" )"	917:2:24855:24912	4239140	0	True				
ANR	4239175	CallExpression	"dprintf ( D_ALWAYS , ""Can't find local startd address.\\n"" )"		4239140	0					
ANR	4239176	Callee	dprintf		4239140	0					
ANR	4239177	Identifier	dprintf		4239140	0					
ANR	4239178	ArgumentList	D_ALWAYS		4239140	1					
ANR	4239179	Argument	D_ALWAYS		4239140	0					
ANR	4239180	Identifier	D_ALWAYS		4239140	0					
ANR	4239181	Argument	"""Can't find local startd address.\\n"""		4239140	1					
ANR	4239182	PrimaryExpression	"""Can't find local startd address.\\n"""		4239140	0					
ANR	4239183	ReturnStatement	return _error_state_ ;	918:2:24916:24936	4239140	1	True				
ANR	4239184	Identifier	_error_state_		4239140	0					
ANR	4239185	IfStatement	"if ( ! ( sock = ( ReliSock * ) my_startd . startCommand ( GIVE_STATE , Stream :: reli_sock , 0 ) ) )"		4239140	5					
ANR	4239186	Condition	"! ( sock = ( ReliSock * ) my_startd . startCommand ( GIVE_STATE , Stream :: reli_sock , 0 ) )"	921:5:24950:25031	4239140	0	True				
ANR	4239187	UnaryOperationExpression	"! ( sock = ( ReliSock * ) my_startd . startCommand ( GIVE_STATE , Stream :: reli_sock , 0 ) )"		4239140	0					
ANR	4239188	UnaryOperator	!		4239140	0					
ANR	4239189	AssignmentExpression	"sock = ( ReliSock * ) my_startd . startCommand ( GIVE_STATE , Stream :: reli_sock , 0 )"		4239140	1		=			
ANR	4239190	Identifier	sock		4239140	0					
ANR	4239191	CastExpression	"( ReliSock * ) my_startd . startCommand ( GIVE_STATE , Stream :: reli_sock , 0 )"		4239140	1					
ANR	4239192	CastTarget	ReliSock *		4239140	0					
ANR	4239193	CallExpression	"my_startd . startCommand ( GIVE_STATE , Stream :: reli_sock , 0 )"		4239140	1					
ANR	4239194	Callee	my_startd . startCommand		4239140	0					
ANR	4239195	MemberAccess	my_startd . startCommand		4239140	0					
ANR	4239196	Identifier	my_startd		4239140	0					
ANR	4239197	Identifier	startCommand		4239140	1					
ANR	4239198	ArgumentList	GIVE_STATE		4239140	1					
ANR	4239199	Argument	GIVE_STATE		4239140	0					
ANR	4239200	Identifier	GIVE_STATE		4239140	0					
ANR	4239201	Argument	Stream :: reli_sock		4239140	1					
ANR	4239202	Identifier	Stream :: reli_sock		4239140	0					
ANR	4239203	Argument	0		4239140	2					
ANR	4239204	PrimaryExpression	0		4239140	0					
ANR	4239205	CompoundStatement		13:64:298:298	4239140	1					
ANR	4239206	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't connect to startd at %s\\n"" , my_startd . addr ( ) )"	923:2:25039:25117	4239140	0	True				
ANR	4239207	CallExpression	"dprintf ( D_ALWAYS , ""Can't connect to startd at %s\\n"" , my_startd . addr ( ) )"		4239140	0					
ANR	4239208	Callee	dprintf		4239140	0					
ANR	4239209	Identifier	dprintf		4239140	0					
ANR	4239210	ArgumentList	D_ALWAYS		4239140	1					
ANR	4239211	Argument	D_ALWAYS		4239140	0					
ANR	4239212	Identifier	D_ALWAYS		4239140	0					
ANR	4239213	Argument	"""Can't connect to startd at %s\\n"""		4239140	1					
ANR	4239214	PrimaryExpression	"""Can't connect to startd at %s\\n"""		4239140	0					
ANR	4239215	Argument	my_startd . addr ( )		4239140	2					
ANR	4239216	CallExpression	my_startd . addr ( )		4239140	0					
ANR	4239217	Callee	my_startd . addr		4239140	0					
ANR	4239218	MemberAccess	my_startd . addr		4239140	0					
ANR	4239219	Identifier	my_startd		4239140	0					
ANR	4239220	Identifier	addr		4239140	1					
ANR	4239221	ArgumentList			4239140	1					
ANR	4239222	ReturnStatement	return _error_state_ ;	925:2:25121:25141	4239140	1	True				
ANR	4239223	Identifier	_error_state_		4239140	0					
ANR	4239224	ExpressionStatement	sock -> end_of_message ( )	928:1:25148:25170	4239140	6	True				
ANR	4239225	CallExpression	sock -> end_of_message ( )		4239140	0					
ANR	4239226	Callee	sock -> end_of_message		4239140	0					
ANR	4239227	PtrMemberAccess	sock -> end_of_message		4239140	0					
ANR	4239228	Identifier	sock		4239140	0					
ANR	4239229	Identifier	end_of_message		4239140	1					
ANR	4239230	ArgumentList			4239140	1					
ANR	4239231	ExpressionStatement	sock -> decode ( )	929:1:25173:25187	4239140	7	True				
ANR	4239232	CallExpression	sock -> decode ( )		4239140	0					
ANR	4239233	Callee	sock -> decode		4239140	0					
ANR	4239234	PtrMemberAccess	sock -> decode		4239140	0					
ANR	4239235	Identifier	sock		4239140	0					
ANR	4239236	Identifier	decode		4239140	1					
ANR	4239237	ArgumentList			4239140	1					
ANR	4239238	IfStatement	if ( ! sock -> code ( state_str ) || ! sock -> end_of_message ( ) )		4239140	8					
ANR	4239239	Condition	! sock -> code ( state_str ) || ! sock -> end_of_message ( )	930:5:25194:25244	4239140	0	True				
ANR	4239240	OrExpression	! sock -> code ( state_str ) || ! sock -> end_of_message ( )		4239140	0		||			
ANR	4239241	UnaryOperationExpression	! sock -> code ( state_str )		4239140	0					
ANR	4239242	UnaryOperator	!		4239140	0					
ANR	4239243	CallExpression	sock -> code ( state_str )		4239140	1					
ANR	4239244	Callee	sock -> code		4239140	0					
ANR	4239245	PtrMemberAccess	sock -> code		4239140	0					
ANR	4239246	Identifier	sock		4239140	0					
ANR	4239247	Identifier	code		4239140	1					
ANR	4239248	ArgumentList	state_str		4239140	1					
ANR	4239249	Argument	state_str		4239140	0					
ANR	4239250	Identifier	state_str		4239140	0					
ANR	4239251	UnaryOperationExpression	! sock -> end_of_message ( )		4239140	1					
ANR	4239252	UnaryOperator	!		4239140	0					
ANR	4239253	CallExpression	sock -> end_of_message ( )		4239140	1					
ANR	4239254	Callee	sock -> end_of_message		4239140	0					
ANR	4239255	PtrMemberAccess	sock -> end_of_message		4239140	0					
ANR	4239256	Identifier	sock		4239140	0					
ANR	4239257	Identifier	end_of_message		4239140	1					
ANR	4239258	ArgumentList			4239140	1					
ANR	4239259	CompoundStatement		21:59:511:511	4239140	1					
ANR	4239260	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't read state/eom from startd.\\n"" )"	931:2:25252:25310	4239140	0	True				
ANR	4239261	CallExpression	"dprintf ( D_ALWAYS , ""Can't read state/eom from startd.\\n"" )"		4239140	0					
ANR	4239262	Callee	dprintf		4239140	0					
ANR	4239263	Identifier	dprintf		4239140	0					
ANR	4239264	ArgumentList	D_ALWAYS		4239140	1					
ANR	4239265	Argument	D_ALWAYS		4239140	0					
ANR	4239266	Identifier	D_ALWAYS		4239140	0					
ANR	4239267	Argument	"""Can't read state/eom from startd.\\n"""		4239140	1					
ANR	4239268	PrimaryExpression	"""Can't read state/eom from startd.\\n"""		4239140	0					
ANR	4239269	ExpressionStatement	free ( state_str )	932:2:25314:25329	4239140	1	True				
ANR	4239270	CallExpression	free ( state_str )		4239140	0					
ANR	4239271	Callee	free		4239140	0					
ANR	4239272	Identifier	free		4239140	0					
ANR	4239273	ArgumentList	state_str		4239140	1					
ANR	4239274	Argument	state_str		4239140	0					
ANR	4239275	Identifier	state_str		4239140	0					
ANR	4239276	ReturnStatement	return _error_state_ ;	933:2:25333:25353	4239140	2	True				
ANR	4239277	Identifier	_error_state_		4239140	0					
ANR	4239278	ExpressionStatement	sock -> close ( )	936:1:25360:25373	4239140	9	True				
ANR	4239279	CallExpression	sock -> close ( )		4239140	0					
ANR	4239280	Callee	sock -> close		4239140	0					
ANR	4239281	PtrMemberAccess	sock -> close		4239140	0					
ANR	4239282	Identifier	sock		4239140	0					
ANR	4239283	Identifier	close		4239140	1					
ANR	4239284	ArgumentList			4239140	1					
ANR	4239285	Statement	delete	937:1:25376:25381	4239140	10	True				
ANR	4239286	ExpressionStatement	sock	937:8:25383:25387	4239140	11	True				
ANR	4239287	Identifier	sock		4239140	0					
ANR	4239288	ExpressionStatement	s = string_to_state ( state_str )	939:1:25391:25423	4239140	12	True				
ANR	4239289	AssignmentExpression	s = string_to_state ( state_str )		4239140	0		=			
ANR	4239290	Identifier	s		4239140	0					
ANR	4239291	CallExpression	string_to_state ( state_str )		4239140	1					
ANR	4239292	Callee	string_to_state		4239140	0					
ANR	4239293	Identifier	string_to_state		4239140	0					
ANR	4239294	ArgumentList	state_str		4239140	1					
ANR	4239295	Argument	state_str		4239140	0					
ANR	4239296	Identifier	state_str		4239140	0					
ANR	4239297	ExpressionStatement	free ( state_str )	940:1:25426:25441	4239140	13	True				
ANR	4239298	CallExpression	free ( state_str )		4239140	0					
ANR	4239299	Callee	free		4239140	0					
ANR	4239300	Identifier	free		4239140	0					
ANR	4239301	ArgumentList	state_str		4239140	1					
ANR	4239302	Argument	state_str		4239140	0					
ANR	4239303	Identifier	state_str		4239140	0					
ANR	4239304	ReturnStatement	return s ;	941:1:25444:25452	4239140	14	True				
ANR	4239305	Identifier	s		4239140	0					
ANR	4239306	ReturnType	State		4239140	1					
ANR	4239307	Identifier	get_machine_state		4239140	2					
ANR	4239308	ParameterList			4239140	3					
ANR	4239309	CFGEntryNode	ENTRY		4239140		True				
ANR	4239310	CFGExitNode	EXIT		4239140		True				
ANR	4239311	Symbol	NULL		4239140						
ANR	4239312	Symbol	my_startd . locate		4239140						
ANR	4239313	Symbol	sock -> end_of_message		4239140						
ANR	4239314	Symbol	string_to_state		4239140						
ANR	4239315	Symbol	D_ALWAYS		4239140						
ANR	4239316	Symbol	GIVE_STATE		4239140						
ANR	4239317	Symbol	my_startd . addr		4239140						
ANR	4239318	Symbol	my_startd . startCommand		4239140						
ANR	4239319	Symbol	sock		4239140						
ANR	4239320	Symbol	state_str		4239140						
ANR	4239321	Symbol	s		4239140						
ANR	4239322	Symbol	sock -> code		4239140						
ANR	4239323	Symbol	_error_state_		4239140						
ANR	4239324	Symbol	my_startd		4239140						
ANR	4239325	Symbol	Stream :: reli_sock		4239140						
ANR	4239326	Symbol	* sock		4239140						
ANR	4239327	Function	touched_recently	944:0:25457:25834							
ANR	4239328	FunctionDef	"touched_recently (char const * fname , time_t delta)"		4239327	0					
ANR	4239329	CompoundStatement		946:0:25514:25834	4239327	0					
ANR	4239330	IdentifierDeclStatement	StatInfo statinfo ( fname ) ;	947:1:25517:25541	4239327	0	True				
ANR	4239331	IdentifierDecl	statinfo ( fname )		4239327	0					
ANR	4239332	IdentifierDeclType	StatInfo		4239327	0					
ANR	4239333	Identifier	statinfo		4239327	1					
ANR	4239334	Identifier	fname		4239327	2					
ANR	4239335	IfStatement	if ( statinfo . Error ( ) != 0 )		4239327	1					
ANR	4239336	Condition	statinfo . Error ( ) != 0	948:5:25548:25568	4239327	0	True				
ANR	4239337	EqualityExpression	statinfo . Error ( ) != 0		4239327	0		!=			
ANR	4239338	CallExpression	statinfo . Error ( )		4239327	0					
ANR	4239339	Callee	statinfo . Error		4239327	0					
ANR	4239340	MemberAccess	statinfo . Error		4239327	0					
ANR	4239341	Identifier	statinfo		4239327	0					
ANR	4239342	Identifier	Error		4239327	1					
ANR	4239343	ArgumentList			4239327	1					
ANR	4239344	PrimaryExpression	0		4239327	1					
ANR	4239345	CompoundStatement		3:29:57:57	4239327	1					
ANR	4239346	ReturnStatement	return false ;	949:2:25576:25588	4239327	0	True				
ANR	4239347	Identifier	false		4239327	0					
ANR	4239348	IfStatement	if ( abs ( ( int ) ( time ( NULL ) - statinfo . GetModifyTime ( ) ) ) > delta )		4239327	2					
ANR	4239349	Condition	abs ( ( int ) ( time ( NULL ) - statinfo . GetModifyTime ( ) ) ) > delta	953:5:25741:25795	4239327	0	True				
ANR	4239350	RelationalExpression	abs ( ( int ) ( time ( NULL ) - statinfo . GetModifyTime ( ) ) ) > delta		4239327	0		>			
ANR	4239351	CallExpression	abs ( ( int ) ( time ( NULL ) - statinfo . GetModifyTime ( ) ) )		4239327	0					
ANR	4239352	Callee	abs		4239327	0					
ANR	4239353	Identifier	abs		4239327	0					
ANR	4239354	ArgumentList	( int ) ( time ( NULL ) - statinfo . GetModifyTime ( ) )		4239327	1					
ANR	4239355	Argument	( int ) ( time ( NULL ) - statinfo . GetModifyTime ( ) )		4239327	0					
ANR	4239356	CastExpression	( int ) ( time ( NULL ) - statinfo . GetModifyTime ( ) )		4239327	0					
ANR	4239357	CastTarget	int		4239327	0					
ANR	4239358	AdditiveExpression	time ( NULL ) - statinfo . GetModifyTime ( )		4239327	1		-			
ANR	4239359	CallExpression	time ( NULL )		4239327	0					
ANR	4239360	Callee	time		4239327	0					
ANR	4239361	Identifier	time		4239327	0					
ANR	4239362	ArgumentList	NULL		4239327	1					
ANR	4239363	Argument	NULL		4239327	0					
ANR	4239364	Identifier	NULL		4239327	0					
ANR	4239365	CallExpression	statinfo . GetModifyTime ( )		4239327	1					
ANR	4239366	Callee	statinfo . GetModifyTime		4239327	0					
ANR	4239367	MemberAccess	statinfo . GetModifyTime		4239327	0					
ANR	4239368	Identifier	statinfo		4239327	0					
ANR	4239369	Identifier	GetModifyTime		4239327	1					
ANR	4239370	ArgumentList			4239327	1					
ANR	4239371	Identifier	delta		4239327	1					
ANR	4239372	CompoundStatement		8:63:284:284	4239327	1					
ANR	4239373	ReturnStatement	return false ;	954:2:25803:25815	4239327	0	True				
ANR	4239374	Identifier	false		4239327	0					
ANR	4239375	ReturnStatement	return true ;	956:1:25821:25832	4239327	3	True				
ANR	4239376	Identifier	true		4239327	0					
ANR	4239377	ReturnType	BOOLEAN		4239327	1					
ANR	4239378	Identifier	touched_recently		4239327	2					
ANR	4239379	ParameterList	"char const * fname , time_t delta"		4239327	3					
ANR	4239380	Parameter	char const * fname	945:17:25482:25498	4239327	0	True				
ANR	4239381	ParameterType	char const *		4239327	0					
ANR	4239382	Identifier	fname		4239327	1					
ANR	4239383	Parameter	time_t delta	945:35:25500:25511	4239327	1	True				
ANR	4239384	ParameterType	time_t		4239327	0					
ANR	4239385	Identifier	delta		4239327	1					
ANR	4239386	CFGEntryNode	ENTRY		4239327		True				
ANR	4239387	CFGExitNode	EXIT		4239327		True				
ANR	4239388	Symbol	fname		4239327						
ANR	4239389	Symbol	statinfo . GetModifyTime		4239327						
ANR	4239390	Symbol	abs		4239327						
ANR	4239391	Symbol	NULL		4239327						
ANR	4239392	Symbol	statinfo . Error		4239327						
ANR	4239393	Symbol	statinfo		4239327						
ANR	4239394	Symbol	delta		4239327						
ANR	4239395	Symbol	false		4239327						
ANR	4239396	Symbol	true		4239327						
ANR	4239397	Symbol	time		4239327						
