command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3657543	File	data/converged/CVE-2011-4930_htcondor/src_condor_rm.V6_rm.cpp								
ANR	3657544	DeclStmt									
ANR	3657545	Decl							char	char *	MyName
ANR	3657546	DeclStmt									
ANR	3657547	Decl							char	char *	actionReason
ANR	3657548	DeclStmt									
ANR	3657549	Decl							char	char *	holdReasonSubCode
ANR	3657550	DeclStmt									
ANR	3657551	Decl							JobAction	JobAction	mode
ANR	3657552	DeclStmt									
ANR	3657553	Decl							bool	bool	All
ANR	3657554	DeclStmt									
ANR	3657555	Decl							bool	bool	ConstraintArg
ANR	3657556	DeclStmt									
ANR	3657557	Decl							bool	bool	UserJobIdArg
ANR	3657558	DeclStmt									
ANR	3657559	Decl							bool	bool	had_error
ANR	3657560	DeclStmt									
ANR	3657561	Decl							DCSchedd	DCSchedd *	schedd
ANR	3657562	DeclStmt									
ANR	3657563	Decl							StringList	StringList *	job_ids
ANR	3657564	DeclStmt									
ANR	3657565	Decl							void	void ( const char * )	addConstraint
ANR	3657566	DeclStmt									
ANR	3657567	Decl							void	void ( const char * )	procArg
ANR	3657568	DeclStmt									
ANR	3657569	Decl							void	void ( )	handleAll
ANR	3657570	DeclStmt									
ANR	3657571	Decl							void	void ( void )	handleConstraints
ANR	3657572	DeclStmt									
ANR	3657573	Decl							ClassAd	"ClassAd * ( StringList * ids , CondorError * errstack )"	doWorkByList
ANR	3657574	DeclStmt									
ANR	3657575	Decl							void	"void ( ClassAd * result_ad , StringList * ids )"	printNewMessages
ANR	3657576	DeclStmt									
ANR	3657577	Decl							bool	bool ( )	mayUserForceRm
ANR	3657578	DeclStmt									
ANR	3657579	Decl							bool	bool	has_constraint
ANR	3657580	DeclStmt									
ANR	3657581	Decl							MyString	MyString	global_constraint
ANR	3657582	DeclStmt									
ANR	3657583	Decl							StringList	StringList	global_id_list
ANR	3657584	Function	actionWord	71:0:1983:2707							
ANR	3657585	FunctionDef	"actionWord (JobAction action , bool past)"		3657584	0					
ANR	3657586	CompoundStatement		73:0:2038:2707	3657584	0					
ANR	3657587	SwitchStatement	switch ( action )		3657584	0					
ANR	3657588	Condition	action	74:9:2049:2054	3657584	0	True				
ANR	3657589	Identifier	action		3657584	0					
ANR	3657590	CompoundStatement		2:18:19:19	3657584	1					
ANR	3657591	Label	case JA_RELEASE_JOBS :	75:1:2061:2081	3657584	0	True				
ANR	3657592	Identifier	JA_RELEASE_JOBS		3657584	0					
ANR	3657593	ReturnStatement	"return past ? ""released"" : ""release"" ;"	76:2:2085:2121	3657584	1	True				
ANR	3657594	ConditionalExpression	"past ? ""released"" : ""release"""		3657584	0					
ANR	3657595	Condition	past		3657584	0					
ANR	3657596	Identifier	past		3657584	0					
ANR	3657597	PrimaryExpression	"""released"""		3657584	1					
ANR	3657598	PrimaryExpression	"""release"""		3657584	2					
ANR	3657599	BreakStatement	break ;	77:2:2125:2130	3657584	2	True				
ANR	3657600	Label	case JA_HOLD_JOBS :	79:1:2134:2151	3657584	3	True				
ANR	3657601	Identifier	JA_HOLD_JOBS		3657584	0					
ANR	3657602	ReturnStatement	"return past ? ""held"" : ""hold"" ;"	80:2:2155:2184	3657584	4	True				
ANR	3657603	ConditionalExpression	"past ? ""held"" : ""hold"""		3657584	0					
ANR	3657604	Condition	past		3657584	0					
ANR	3657605	Identifier	past		3657584	0					
ANR	3657606	PrimaryExpression	"""held"""		3657584	1					
ANR	3657607	PrimaryExpression	"""hold"""		3657584	2					
ANR	3657608	BreakStatement	break ;	81:2:2188:2193	3657584	5	True				
ANR	3657609	Label	case JA_SUSPEND_JOBS :	83:1:2198:2218	3657584	6	True				
ANR	3657610	Identifier	JA_SUSPEND_JOBS		3657584	0					
ANR	3657611	ReturnStatement	"return past ? ""suspended"" : ""suspend"" ;"	84:2:2222:2259	3657584	7	True				
ANR	3657612	ConditionalExpression	"past ? ""suspended"" : ""suspend"""		3657584	0					
ANR	3657613	Condition	past		3657584	0					
ANR	3657614	Identifier	past		3657584	0					
ANR	3657615	PrimaryExpression	"""suspended"""		3657584	1					
ANR	3657616	PrimaryExpression	"""suspend"""		3657584	2					
ANR	3657617	BreakStatement	break ;	85:2:2263:2268	3657584	8	True				
ANR	3657618	Label	case JA_CONTINUE_JOBS :	87:1:2274:2295	3657584	9	True				
ANR	3657619	Identifier	JA_CONTINUE_JOBS		3657584	0					
ANR	3657620	ReturnStatement	"return past ? ""continued"" : ""continue"" ;"	88:2:2299:2337	3657584	10	True				
ANR	3657621	ConditionalExpression	"past ? ""continued"" : ""continue"""		3657584	0					
ANR	3657622	Condition	past		3657584	0					
ANR	3657623	Identifier	past		3657584	0					
ANR	3657624	PrimaryExpression	"""continued"""		3657584	1					
ANR	3657625	PrimaryExpression	"""continue"""		3657584	2					
ANR	3657626	BreakStatement	break ;	89:2:2341:2346	3657584	11	True				
ANR	3657627	Label	case JA_REMOVE_JOBS :	91:1:2350:2369	3657584	12	True				
ANR	3657628	Identifier	JA_REMOVE_JOBS		3657584	0					
ANR	3657629	Label	case JA_REMOVE_X_JOBS :	92:1:2372:2393	3657584	13	True				
ANR	3657630	Identifier	JA_REMOVE_X_JOBS		3657584	0					
ANR	3657631	ReturnStatement	"return past ? ""removed"" : ""remove"" ;"	93:2:2397:2431	3657584	14	True				
ANR	3657632	ConditionalExpression	"past ? ""removed"" : ""remove"""		3657584	0					
ANR	3657633	Condition	past		3657584	0					
ANR	3657634	Identifier	past		3657584	0					
ANR	3657635	PrimaryExpression	"""removed"""		3657584	1					
ANR	3657636	PrimaryExpression	"""remove"""		3657584	2					
ANR	3657637	BreakStatement	break ;	94:2:2435:2440	3657584	15	True				
ANR	3657638	Label	case JA_VACATE_JOBS :	96:1:2444:2463	3657584	16	True				
ANR	3657639	Identifier	JA_VACATE_JOBS		3657584	0					
ANR	3657640	ReturnStatement	"return past ? ""vacated"" : ""vacate"" ;"	97:2:2467:2501	3657584	17	True				
ANR	3657641	ConditionalExpression	"past ? ""vacated"" : ""vacate"""		3657584	0					
ANR	3657642	Condition	past		3657584	0					
ANR	3657643	Identifier	past		3657584	0					
ANR	3657644	PrimaryExpression	"""vacated"""		3657584	1					
ANR	3657645	PrimaryExpression	"""vacate"""		3657584	2					
ANR	3657646	BreakStatement	break ;	98:2:2505:2510	3657584	18	True				
ANR	3657647	Label	case JA_VACATE_FAST_JOBS :	100:1:2514:2538	3657584	19	True				
ANR	3657648	Identifier	JA_VACATE_FAST_JOBS		3657584	0					
ANR	3657649	ReturnStatement	"return past ? ""fast-vacated"" : ""fast-vacate"" ;"	101:2:2542:2586	3657584	20	True				
ANR	3657650	ConditionalExpression	"past ? ""fast-vacated"" : ""fast-vacate"""		3657584	0					
ANR	3657651	Condition	past		3657584	0					
ANR	3657652	Identifier	past		3657584	0					
ANR	3657653	PrimaryExpression	"""fast-vacated"""		3657584	1					
ANR	3657654	PrimaryExpression	"""fast-vacate"""		3657584	2					
ANR	3657655	BreakStatement	break ;	102:2:2590:2595	3657584	21	True				
ANR	3657656	Label	default :	104:1:2599:2606	3657584	22	True				
ANR	3657657	Identifier	default		3657584	0					
ANR	3657658	ExpressionStatement	"fprintf ( stderr , ""ERROR: Unknown action: %d\\n"" , action )"	105:2:2610:2666	3657584	23	True				
ANR	3657659	CallExpression	"fprintf ( stderr , ""ERROR: Unknown action: %d\\n"" , action )"		3657584	0					
ANR	3657660	Callee	fprintf		3657584	0					
ANR	3657661	Identifier	fprintf		3657584	0					
ANR	3657662	ArgumentList	stderr		3657584	1					
ANR	3657663	Argument	stderr		3657584	0					
ANR	3657664	Identifier	stderr		3657584	0					
ANR	3657665	Argument	"""ERROR: Unknown action: %d\\n"""		3657584	1					
ANR	3657666	PrimaryExpression	"""ERROR: Unknown action: %d\\n"""		3657584	0					
ANR	3657667	Argument	action		3657584	2					
ANR	3657668	Identifier	action		3657584	0					
ANR	3657669	ExpressionStatement	exit ( 1 )	106:2:2670:2679	3657584	24	True				
ANR	3657670	CallExpression	exit ( 1 )		3657584	0					
ANR	3657671	Callee	exit		3657584	0					
ANR	3657672	Identifier	exit		3657584	0					
ANR	3657673	ArgumentList	1		3657584	1					
ANR	3657674	Argument	1		3657584	0					
ANR	3657675	PrimaryExpression	1		3657584	0					
ANR	3657676	BreakStatement	break ;	107:2:2683:2688	3657584	25	True				
ANR	3657677	ReturnStatement	return NULL ;	109:1:2694:2705	3657584	1	True				
ANR	3657678	Identifier	NULL		3657584	0					
ANR	3657679	ReturnType	const char *		3657584	1					
ANR	3657680	Identifier	actionWord		3657584	2					
ANR	3657681	ParameterList	"JobAction action , bool past"		3657584	3					
ANR	3657682	Parameter	JobAction action	72:12:2008:2023	3657584	0	True				
ANR	3657683	ParameterType	JobAction		3657584	0					
ANR	3657684	Identifier	action		3657584	1					
ANR	3657685	Parameter	bool past	72:30:2026:2034	3657584	1	True				
ANR	3657686	ParameterType	bool		3657584	0					
ANR	3657687	Identifier	past		3657584	1					
ANR	3657688	CFGEntryNode	ENTRY		3657584		True				
ANR	3657689	CFGExitNode	EXIT		3657584		True				
ANR	3657690	Symbol	NULL		3657584						
ANR	3657691	Symbol	past		3657584						
ANR	3657692	Symbol	action		3657584						
ANR	3657693	Symbol	stderr		3657584						
ANR	3657694	Function	usage	113:0:2711:4917							
ANR	3657695	FunctionDef	usage (int iExitCode)		3657694	0					
ANR	3657696	CompoundStatement		115:0:2737:4917	3657694	0					
ANR	3657697	IdentifierDeclStatement	char word [ 32 ] ;	116:1:2740:2753	3657694	0	True				
ANR	3657698	IdentifierDecl	word [ 32 ]		3657694	0					
ANR	3657699	IdentifierDeclType	char [ 32 ]		3657694	0					
ANR	3657700	Identifier	word		3657694	1					
ANR	3657701	PrimaryExpression	32		3657694	2					
ANR	3657702	ExpressionStatement	"sprintf ( word , getJobActionString ( mode ) )"	117:1:2756:2797	3657694	1	True				
ANR	3657703	CallExpression	"sprintf ( word , getJobActionString ( mode ) )"		3657694	0					
ANR	3657704	Callee	sprintf		3657694	0					
ANR	3657705	Identifier	sprintf		3657694	0					
ANR	3657706	ArgumentList	word		3657694	1					
ANR	3657707	Argument	word		3657694	0					
ANR	3657708	Identifier	word		3657694	0					
ANR	3657709	Argument	getJobActionString ( mode )		3657694	1					
ANR	3657710	CallExpression	getJobActionString ( mode )		3657694	0					
ANR	3657711	Callee	getJobActionString		3657694	0					
ANR	3657712	Identifier	getJobActionString		3657694	0					
ANR	3657713	ArgumentList	mode		3657694	1					
ANR	3657714	Argument	mode		3657694	0					
ANR	3657715	Identifier	mode		3657694	0					
ANR	3657716	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [options] [constraints]\\n"" , MyName )"	118:1:2800:2864	3657694	2	True				
ANR	3657717	CallExpression	"fprintf ( stderr , ""Usage: %s [options] [constraints]\\n"" , MyName )"		3657694	0					
ANR	3657718	Callee	fprintf		3657694	0					
ANR	3657719	Identifier	fprintf		3657694	0					
ANR	3657720	ArgumentList	stderr		3657694	1					
ANR	3657721	Argument	stderr		3657694	0					
ANR	3657722	Identifier	stderr		3657694	0					
ANR	3657723	Argument	"""Usage: %s [options] [constraints]\\n"""		3657694	1					
ANR	3657724	PrimaryExpression	"""Usage: %s [options] [constraints]\\n"""		3657694	0					
ANR	3657725	Argument	MyName		3657694	2					
ANR	3657726	Identifier	MyName		3657694	0					
ANR	3657727	ExpressionStatement	"fprintf ( stderr , "" where [options] is zero or more of:\\n"" )"	119:1:2867:2926	3657694	3	True				
ANR	3657728	CallExpression	"fprintf ( stderr , "" where [options] is zero or more of:\\n"" )"		3657694	0					
ANR	3657729	Callee	fprintf		3657694	0					
ANR	3657730	Identifier	fprintf		3657694	0					
ANR	3657731	ArgumentList	stderr		3657694	1					
ANR	3657732	Argument	stderr		3657694	0					
ANR	3657733	Identifier	stderr		3657694	0					
ANR	3657734	Argument	""" where [options] is zero or more of:\\n"""		3657694	1					
ANR	3657735	PrimaryExpression	""" where [options] is zero or more of:\\n"""		3657694	0					
ANR	3657736	ExpressionStatement	"fprintf ( stderr , ""  -help               Display this message and exit\\n"" )"	120:1:2929:3003	3657694	4	True				
ANR	3657737	CallExpression	"fprintf ( stderr , ""  -help               Display this message and exit\\n"" )"		3657694	0					
ANR	3657738	Callee	fprintf		3657694	0					
ANR	3657739	Identifier	fprintf		3657694	0					
ANR	3657740	ArgumentList	stderr		3657694	1					
ANR	3657741	Argument	stderr		3657694	0					
ANR	3657742	Identifier	stderr		3657694	0					
ANR	3657743	Argument	"""  -help               Display this message and exit\\n"""		3657694	1					
ANR	3657744	PrimaryExpression	"""  -help               Display this message and exit\\n"""		3657694	0					
ANR	3657745	ExpressionStatement	"fprintf ( stderr , ""  -version            Display version information and exit\\n"" )"	121:1:3006:3087	3657694	5	True				
ANR	3657746	CallExpression	"fprintf ( stderr , ""  -version            Display version information and exit\\n"" )"		3657694	0					
ANR	3657747	Callee	fprintf		3657694	0					
ANR	3657748	Identifier	fprintf		3657694	0					
ANR	3657749	ArgumentList	stderr		3657694	1					
ANR	3657750	Argument	stderr		3657694	0					
ANR	3657751	Identifier	stderr		3657694	0					
ANR	3657752	Argument	"""  -version            Display version information and exit\\n"""		3657694	1					
ANR	3657753	PrimaryExpression	"""  -version            Display version information and exit\\n"""		3657694	0					
ANR	3657754	ExpressionStatement	"fprintf ( stderr , ""  -name schedd_name   Connect to the given schedd\\n"" )"	127:1:3295:3367	3657694	6	True				
ANR	3657755	CallExpression	"fprintf ( stderr , ""  -name schedd_name   Connect to the given schedd\\n"" )"		3657694	0					
ANR	3657756	Callee	fprintf		3657694	0					
ANR	3657757	Identifier	fprintf		3657694	0					
ANR	3657758	ArgumentList	stderr		3657694	1					
ANR	3657759	Argument	stderr		3657694	0					
ANR	3657760	Identifier	stderr		3657694	0					
ANR	3657761	Argument	"""  -name schedd_name   Connect to the given schedd\\n"""		3657694	1					
ANR	3657762	PrimaryExpression	"""  -name schedd_name   Connect to the given schedd\\n"""		3657694	0					
ANR	3657763	ExpressionStatement	"fprintf ( stderr , ""  -pool hostname      Use the given central manager to find daemons\\n"" )"	128:1:3370:3460	3657694	7	True				
ANR	3657764	CallExpression	"fprintf ( stderr , ""  -pool hostname      Use the given central manager to find daemons\\n"" )"		3657694	0					
ANR	3657765	Callee	fprintf		3657694	0					
ANR	3657766	Identifier	fprintf		3657694	0					
ANR	3657767	ArgumentList	stderr		3657694	1					
ANR	3657768	Argument	stderr		3657694	0					
ANR	3657769	Identifier	stderr		3657694	0					
ANR	3657770	Argument	"""  -pool hostname      Use the given central manager to find daemons\\n"""		3657694	1					
ANR	3657771	PrimaryExpression	"""  -pool hostname      Use the given central manager to find daemons\\n"""		3657694	0					
ANR	3657772	ExpressionStatement	"fprintf ( stderr , ""  -addr <ip:port>     Connect directly to the given \\""sinful string\\""\\n"" )"	129:1:3463:3555	3657694	8	True				
ANR	3657773	CallExpression	"fprintf ( stderr , ""  -addr <ip:port>     Connect directly to the given \\""sinful string\\""\\n"" )"		3657694	0					
ANR	3657774	Callee	fprintf		3657694	0					
ANR	3657775	Identifier	fprintf		3657694	0					
ANR	3657776	ArgumentList	stderr		3657694	1					
ANR	3657777	Argument	stderr		3657694	0					
ANR	3657778	Identifier	stderr		3657694	0					
ANR	3657779	Argument	"""  -addr <ip:port>     Connect directly to the given \\""sinful string\\""\\n"""		3657694	1					
ANR	3657780	PrimaryExpression	"""  -addr <ip:port>     Connect directly to the given \\""sinful string\\""\\n"""		3657694	0					
ANR	3657781	IfStatement	if ( mode == JA_REMOVE_JOBS || mode == JA_REMOVE_X_JOBS )		3657694	9					
ANR	3657782	Condition	mode == JA_REMOVE_JOBS || mode == JA_REMOVE_X_JOBS	130:5:3562:3611	3657694	0	True				
ANR	3657783	OrExpression	mode == JA_REMOVE_JOBS || mode == JA_REMOVE_X_JOBS		3657694	0		||			
ANR	3657784	EqualityExpression	mode == JA_REMOVE_JOBS		3657694	0		==			
ANR	3657785	Identifier	mode		3657694	0					
ANR	3657786	Identifier	JA_REMOVE_JOBS		3657694	1					
ANR	3657787	EqualityExpression	mode == JA_REMOVE_X_JOBS		3657694	1		==			
ANR	3657788	Identifier	mode		3657694	0					
ANR	3657789	Identifier	JA_REMOVE_X_JOBS		3657694	1					
ANR	3657790	CompoundStatement		16:58:877:877	3657694	1					
ANR	3657791	ExpressionStatement	"fprintf ( stderr , ""  -reason reason      Use the given RemoveReason\\n"" )"	131:2:3619:3689	3657694	0	True				
ANR	3657792	CallExpression	"fprintf ( stderr , ""  -reason reason      Use the given RemoveReason\\n"" )"		3657694	0					
ANR	3657793	Callee	fprintf		3657694	0					
ANR	3657794	Identifier	fprintf		3657694	0					
ANR	3657795	ArgumentList	stderr		3657694	1					
ANR	3657796	Argument	stderr		3657694	0					
ANR	3657797	Identifier	stderr		3657694	0					
ANR	3657798	Argument	"""  -reason reason      Use the given RemoveReason\\n"""		3657694	1					
ANR	3657799	PrimaryExpression	"""  -reason reason      Use the given RemoveReason\\n"""		3657694	0					
ANR	3657800	ElseStatement	else		3657694	0					
ANR	3657801	IfStatement	if ( mode == JA_RELEASE_JOBS )		3657694	0					
ANR	3657802	Condition	mode == JA_RELEASE_JOBS	132:12:3703:3725	3657694	0	True				
ANR	3657803	EqualityExpression	mode == JA_RELEASE_JOBS		3657694	0		==			
ANR	3657804	Identifier	mode		3657694	0					
ANR	3657805	Identifier	JA_RELEASE_JOBS		3657694	1					
ANR	3657806	CompoundStatement		18:38:991:991	3657694	1					
ANR	3657807	ExpressionStatement	"fprintf ( stderr , ""  -reason reason      Use the given ReleaseReason\\n"" )"	133:2:3733:3804	3657694	0	True				
ANR	3657808	CallExpression	"fprintf ( stderr , ""  -reason reason      Use the given ReleaseReason\\n"" )"		3657694	0					
ANR	3657809	Callee	fprintf		3657694	0					
ANR	3657810	Identifier	fprintf		3657694	0					
ANR	3657811	ArgumentList	stderr		3657694	1					
ANR	3657812	Argument	stderr		3657694	0					
ANR	3657813	Identifier	stderr		3657694	0					
ANR	3657814	Argument	"""  -reason reason      Use the given ReleaseReason\\n"""		3657694	1					
ANR	3657815	PrimaryExpression	"""  -reason reason      Use the given ReleaseReason\\n"""		3657694	0					
ANR	3657816	ElseStatement	else		3657694	0					
ANR	3657817	IfStatement	if ( mode == JA_HOLD_JOBS )		3657694	0					
ANR	3657818	Condition	mode == JA_HOLD_JOBS	134:12:3818:3837	3657694	0	True				
ANR	3657819	EqualityExpression	mode == JA_HOLD_JOBS		3657694	0		==			
ANR	3657820	Identifier	mode		3657694	0					
ANR	3657821	Identifier	JA_HOLD_JOBS		3657694	1					
ANR	3657822	CompoundStatement		20:35:1103:1103	3657694	1					
ANR	3657823	ExpressionStatement	"fprintf ( stderr , ""  -reason reason      Use the given HoldReason\\n"" )"	135:2:3845:3913	3657694	0	True				
ANR	3657824	CallExpression	"fprintf ( stderr , ""  -reason reason      Use the given HoldReason\\n"" )"		3657694	0					
ANR	3657825	Callee	fprintf		3657694	0					
ANR	3657826	Identifier	fprintf		3657694	0					
ANR	3657827	ArgumentList	stderr		3657694	1					
ANR	3657828	Argument	stderr		3657694	0					
ANR	3657829	Identifier	stderr		3657694	0					
ANR	3657830	Argument	"""  -reason reason      Use the given HoldReason\\n"""		3657694	1					
ANR	3657831	PrimaryExpression	"""  -reason reason      Use the given HoldReason\\n"""		3657694	0					
ANR	3657832	ExpressionStatement	"fprintf ( stderr , ""  -subcode number     Set HoldReasonSubCode\\n"" )"	136:2:3917:3982	3657694	1	True				
ANR	3657833	CallExpression	"fprintf ( stderr , ""  -subcode number     Set HoldReasonSubCode\\n"" )"		3657694	0					
ANR	3657834	Callee	fprintf		3657694	0					
ANR	3657835	Identifier	fprintf		3657694	0					
ANR	3657836	ArgumentList	stderr		3657694	1					
ANR	3657837	Argument	stderr		3657694	0					
ANR	3657838	Identifier	stderr		3657694	0					
ANR	3657839	Argument	"""  -subcode number     Set HoldReasonSubCode\\n"""		3657694	1					
ANR	3657840	PrimaryExpression	"""  -subcode number     Set HoldReasonSubCode\\n"""		3657694	0					
ANR	3657841	IfStatement	if ( mode == JA_REMOVE_JOBS || mode == JA_REMOVE_X_JOBS )		3657694	10					
ANR	3657842	Condition	mode == JA_REMOVE_JOBS || mode == JA_REMOVE_X_JOBS	139:5:3993:4042	3657694	0	True				
ANR	3657843	OrExpression	mode == JA_REMOVE_JOBS || mode == JA_REMOVE_X_JOBS		3657694	0		||			
ANR	3657844	EqualityExpression	mode == JA_REMOVE_JOBS		3657694	0		==			
ANR	3657845	Identifier	mode		3657694	0					
ANR	3657846	Identifier	JA_REMOVE_JOBS		3657694	1					
ANR	3657847	EqualityExpression	mode == JA_REMOVE_X_JOBS		3657694	1		==			
ANR	3657848	Identifier	mode		3657694	0					
ANR	3657849	Identifier	JA_REMOVE_X_JOBS		3657694	1					
ANR	3657850	CompoundStatement		25:58:1308:1308	3657694	1					
ANR	3657851	Statement	fprintf	140:2:4050:4056	3657694	0	True				
ANR	3657852	Statement	(	140:9:4057:4057	3657694	1	True				
ANR	3657853	Statement	stderr	140:11:4059:4064	3657694	2	True				
ANR	3657854	Statement	","	140:17:4065:4065	3657694	3	True				
ANR	3657855	Statement	"""  -forcex             Force the immediate local removal of jobs in the X state\\n"""	141:9:4076:4157	3657694	4	True				
ANR	3657856	Statement	"""                      (only affects jobs already being removed)\\n"""	142:11:4170:4236	3657694	5	True				
ANR	3657857	Statement	)	142:79:4238:4238	3657694	6	True				
ANR	3657858	ExpressionStatement		142:80:4239:4239	3657694	7	True				
ANR	3657859	IfStatement	if ( mode == JA_VACATE_JOBS || mode == JA_VACATE_FAST_JOBS )		3657694	11					
ANR	3657860	Condition	mode == JA_VACATE_JOBS || mode == JA_VACATE_FAST_JOBS	144:5:4249:4301	3657694	0	True				
ANR	3657861	OrExpression	mode == JA_VACATE_JOBS || mode == JA_VACATE_FAST_JOBS		3657694	0		||			
ANR	3657862	EqualityExpression	mode == JA_VACATE_JOBS		3657694	0		==			
ANR	3657863	Identifier	mode		3657694	0					
ANR	3657864	Identifier	JA_VACATE_JOBS		3657694	1					
ANR	3657865	EqualityExpression	mode == JA_VACATE_FAST_JOBS		3657694	1		==			
ANR	3657866	Identifier	mode		3657694	0					
ANR	3657867	Identifier	JA_VACATE_FAST_JOBS		3657694	1					
ANR	3657868	CompoundStatement		30:61:1567:1567	3657694	1					
ANR	3657869	ExpressionStatement	"fprintf ( stderr , ""  -fast               Use a fast vacate (hardkill)\\n"" )"	145:2:4309:4391	3657694	0	True				
ANR	3657870	CallExpression	"fprintf ( stderr , ""  -fast               Use a fast vacate (hardkill)\\n"" )"		3657694	0					
ANR	3657871	Callee	fprintf		3657694	0					
ANR	3657872	Identifier	fprintf		3657694	0					
ANR	3657873	ArgumentList	stderr		3657694	1					
ANR	3657874	Argument	stderr		3657694	0					
ANR	3657875	Identifier	stderr		3657694	0					
ANR	3657876	Argument	"""  -fast               Use a fast vacate (hardkill)\\n"""		3657694	1					
ANR	3657877	PrimaryExpression	"""  -fast               Use a fast vacate (hardkill)\\n"""		3657694	0					
ANR	3657878	ExpressionStatement	"fprintf ( stderr , "" and where [constraints] is one of:\\n"" )"	148:1:4397:4455	3657694	12	True				
ANR	3657879	CallExpression	"fprintf ( stderr , "" and where [constraints] is one of:\\n"" )"		3657694	0					
ANR	3657880	Callee	fprintf		3657694	0					
ANR	3657881	Identifier	fprintf		3657694	0					
ANR	3657882	ArgumentList	stderr		3657694	1					
ANR	3657883	Argument	stderr		3657694	0					
ANR	3657884	Identifier	stderr		3657694	0					
ANR	3657885	Argument	""" and where [constraints] is one of:\\n"""		3657694	1					
ANR	3657886	PrimaryExpression	""" and where [constraints] is one of:\\n"""		3657694	0					
ANR	3657887	ExpressionStatement	"fprintf ( stderr , ""  cluster.proc        %s the given job\\n"" , word )"	149:1:4458:4525	3657694	13	True				
ANR	3657888	CallExpression	"fprintf ( stderr , ""  cluster.proc        %s the given job\\n"" , word )"		3657694	0					
ANR	3657889	Callee	fprintf		3657694	0					
ANR	3657890	Identifier	fprintf		3657694	0					
ANR	3657891	ArgumentList	stderr		3657694	1					
ANR	3657892	Argument	stderr		3657694	0					
ANR	3657893	Identifier	stderr		3657694	0					
ANR	3657894	Argument	"""  cluster.proc        %s the given job\\n"""		3657694	1					
ANR	3657895	PrimaryExpression	"""  cluster.proc        %s the given job\\n"""		3657694	0					
ANR	3657896	Argument	word		3657694	2					
ANR	3657897	Identifier	word		3657694	0					
ANR	3657898	ExpressionStatement	"fprintf ( stderr , ""  cluster             %s the given cluster of jobs\\n"" , word )"	150:1:4528:4607	3657694	14	True				
ANR	3657899	CallExpression	"fprintf ( stderr , ""  cluster             %s the given cluster of jobs\\n"" , word )"		3657694	0					
ANR	3657900	Callee	fprintf		3657694	0					
ANR	3657901	Identifier	fprintf		3657694	0					
ANR	3657902	ArgumentList	stderr		3657694	1					
ANR	3657903	Argument	stderr		3657694	0					
ANR	3657904	Identifier	stderr		3657694	0					
ANR	3657905	Argument	"""  cluster             %s the given cluster of jobs\\n"""		3657694	1					
ANR	3657906	PrimaryExpression	"""  cluster             %s the given cluster of jobs\\n"""		3657694	0					
ANR	3657907	Argument	word		3657694	2					
ANR	3657908	Identifier	word		3657694	0					
ANR	3657909	ExpressionStatement	"fprintf ( stderr , ""  user                %s all jobs owned by user\\n"" , word )"	151:1:4610:4686	3657694	15	True				
ANR	3657910	CallExpression	"fprintf ( stderr , ""  user                %s all jobs owned by user\\n"" , word )"		3657694	0					
ANR	3657911	Callee	fprintf		3657694	0					
ANR	3657912	Identifier	fprintf		3657694	0					
ANR	3657913	ArgumentList	stderr		3657694	1					
ANR	3657914	Argument	stderr		3657694	0					
ANR	3657915	Identifier	stderr		3657694	0					
ANR	3657916	Argument	"""  user                %s all jobs owned by user\\n"""		3657694	1					
ANR	3657917	PrimaryExpression	"""  user                %s all jobs owned by user\\n"""		3657694	0					
ANR	3657918	Argument	word		3657694	2					
ANR	3657919	Identifier	word		3657694	0					
ANR	3657920	ExpressionStatement	"fprintf ( stderr , ""  -constraint expr    %s all jobs matching the boolean expression\\n"" , word )"	152:1:4689:4783	3657694	16	True				
ANR	3657921	CallExpression	"fprintf ( stderr , ""  -constraint expr    %s all jobs matching the boolean expression\\n"" , word )"		3657694	0					
ANR	3657922	Callee	fprintf		3657694	0					
ANR	3657923	Identifier	fprintf		3657694	0					
ANR	3657924	ArgumentList	stderr		3657694	1					
ANR	3657925	Argument	stderr		3657694	0					
ANR	3657926	Identifier	stderr		3657694	0					
ANR	3657927	Argument	"""  -constraint expr    %s all jobs matching the boolean expression\\n"""		3657694	1					
ANR	3657928	PrimaryExpression	"""  -constraint expr    %s all jobs matching the boolean expression\\n"""		3657694	0					
ANR	3657929	Argument	word		3657694	2					
ANR	3657930	Identifier	word		3657694	0					
ANR	3657931	Statement	fprintf	153:1:4786:4792	3657694	17	True				
ANR	3657932	Statement	(	153:8:4793:4793	3657694	18	True				
ANR	3657933	Statement	stderr	153:10:4795:4800	3657694	19	True				
ANR	3657934	Statement	","	153:16:4801:4801	3657694	20	True				
ANR	3657935	Statement	"""  -all                %s all jobs """	153:18:4803:4838	3657694	21	True				
ANR	3657936	Statement	"""(cannot be used with other constraints)\\n"""	154:4:4844:4886	3657694	22	True				
ANR	3657937	Statement	","	154:47:4887:4887	3657694	23	True				
ANR	3657938	Statement	word	154:49:4889:4892	3657694	24	True				
ANR	3657939	Statement	)	154:54:4894:4894	3657694	25	True				
ANR	3657940	ExpressionStatement		154:55:4895:4895	3657694	26	True				
ANR	3657941	ExpressionStatement	exit ( iExitCode )	155:1:4898:4915	3657694	27	True				
ANR	3657942	CallExpression	exit ( iExitCode )		3657694	0					
ANR	3657943	Callee	exit		3657694	0					
ANR	3657944	Identifier	exit		3657694	0					
ANR	3657945	ArgumentList	iExitCode		3657694	1					
ANR	3657946	Argument	iExitCode		3657694	0					
ANR	3657947	Identifier	iExitCode		3657694	0					
ANR	3657948	ReturnType	void		3657694	1					
ANR	3657949	Identifier	usage		3657694	2					
ANR	3657950	ParameterList	int iExitCode		3657694	3					
ANR	3657951	Parameter	int iExitCode	114:6:2722:2734	3657694	0	True				
ANR	3657952	ParameterType	int		3657694	0					
ANR	3657953	Identifier	iExitCode		3657694	1					
ANR	3657954	CFGEntryNode	ENTRY		3657694		True				
ANR	3657955	CFGExitNode	EXIT		3657694		True				
ANR	3657956	Symbol	mode		3657694						
ANR	3657957	Symbol	JA_VACATE_JOBS		3657694						
ANR	3657958	Symbol	JA_REMOVE_X_JOBS		3657694						
ANR	3657959	Symbol	JA_RELEASE_JOBS		3657694						
ANR	3657960	Symbol	getJobActionString		3657694						
ANR	3657961	Symbol	MyName		3657694						
ANR	3657962	Symbol	JA_HOLD_JOBS		3657694						
ANR	3657963	Symbol	JA_REMOVE_JOBS		3657694						
ANR	3657964	Symbol	iExitCode		3657694						
ANR	3657965	Symbol	JA_VACATE_FAST_JOBS		3657694						
ANR	3657966	Symbol	stderr		3657694						
ANR	3657967	Symbol	word		3657694						
ANR	3657968	Function	version	159:0:4921:5014							
ANR	3657969	FunctionDef	version ()		3657968	0					
ANR	3657970	CompoundStatement		161:0:4942:5014	3657968	0					
ANR	3657971	ExpressionStatement	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"	162:1:4945:5000	3657968	0	True				
ANR	3657972	CallExpression	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"		3657968	0					
ANR	3657973	Callee	printf		3657968	0					
ANR	3657974	Identifier	printf		3657968	0					
ANR	3657975	ArgumentList	"""%s\\n%s\\n"""		3657968	1					
ANR	3657976	Argument	"""%s\\n%s\\n"""		3657968	0					
ANR	3657977	PrimaryExpression	"""%s\\n%s\\n"""		3657968	0					
ANR	3657978	Argument	CondorVersion ( )		3657968	1					
ANR	3657979	CallExpression	CondorVersion ( )		3657968	0					
ANR	3657980	Callee	CondorVersion		3657968	0					
ANR	3657981	Identifier	CondorVersion		3657968	0					
ANR	3657982	ArgumentList			3657968	1					
ANR	3657983	Argument	CondorPlatform ( )		3657968	2					
ANR	3657984	CallExpression	CondorPlatform ( )		3657968	0					
ANR	3657985	Callee	CondorPlatform		3657968	0					
ANR	3657986	Identifier	CondorPlatform		3657968	0					
ANR	3657987	ArgumentList			3657968	1					
ANR	3657988	ExpressionStatement	exit ( 0 )	163:1:5003:5012	3657968	1	True				
ANR	3657989	CallExpression	exit ( 0 )		3657968	0					
ANR	3657990	Callee	exit		3657968	0					
ANR	3657991	Identifier	exit		3657968	0					
ANR	3657992	ArgumentList	0		3657968	1					
ANR	3657993	Argument	0		3657968	0					
ANR	3657994	PrimaryExpression	0		3657968	0					
ANR	3657995	ReturnType	void		3657968	1					
ANR	3657996	Identifier	version		3657968	2					
ANR	3657997	ParameterList			3657968	3					
ANR	3657998	CFGEntryNode	ENTRY		3657968		True				
ANR	3657999	CFGExitNode	EXIT		3657968		True				
ANR	3658000	Symbol	CondorVersion		3657968						
ANR	3658001	Symbol	CondorPlatform		3657968						
ANR	3658002	Function	main	167:0:5018:13792							
ANR	3658003	FunctionDef	"main (int argc , char * argv [ ])"		3658002	0					
ANR	3658004	CompoundStatement		169:0:5053:13792	3658002	0					
ANR	3658005	IdentifierDeclStatement	char * arg ;	170:1:5056:5065	3658002	0	True				
ANR	3658006	IdentifierDecl	* arg		3658002	0					
ANR	3658007	IdentifierDeclType	char *		3658002	0					
ANR	3658008	Identifier	arg		3658002	1					
ANR	3658009	IdentifierDeclStatement	char * * args = ( char * * ) malloc ( sizeof ( char * ) * ( argc - 1 ) ) ;	171:1:5068:5124	3658002	1	True				
ANR	3658010	IdentifierDecl	* * args = ( char * * ) malloc ( sizeof ( char * ) * ( argc - 1 ) )		3658002	0					
ANR	3658011	IdentifierDeclType	char * *		3658002	0					
ANR	3658012	Identifier	args		3658002	1					
ANR	3658013	AssignmentExpression	* * args = ( char * * ) malloc ( sizeof ( char * ) * ( argc - 1 ) )		3658002	2		=			
ANR	3658014	Identifier	args		3658002	0					
ANR	3658015	CastExpression	( char * * ) malloc ( sizeof ( char * ) * ( argc - 1 ) )		3658002	1					
ANR	3658016	CastTarget	char * *		3658002	0					
ANR	3658017	CallExpression	malloc ( sizeof ( char * ) * ( argc - 1 ) )		3658002	1					
ANR	3658018	Callee	malloc		3658002	0					
ANR	3658019	Identifier	malloc		3658002	0					
ANR	3658020	ArgumentList	sizeof ( char * ) * ( argc - 1 )		3658002	1					
ANR	3658021	Argument	sizeof ( char * ) * ( argc - 1 )		3658002	0					
ANR	3658022	MultiplicativeExpression	sizeof ( char * ) * ( argc - 1 )		3658002	0		*			
ANR	3658023	SizeofExpression	sizeof ( char * )		3658002	0					
ANR	3658024	Sizeof	sizeof		3658002	0					
ANR	3658025	SizeofOperand	char *		3658002	1					
ANR	3658026	AdditiveExpression	argc - 1		3658002	1		-			
ANR	3658027	Identifier	argc		3658002	0					
ANR	3658028	PrimaryExpression	1		3658002	1					
ANR	3658029	IdentifierDeclStatement	int nArgs = 0 ;	172:1:5136:5153	3658002	2	True				
ANR	3658030	IdentifierDecl	nArgs = 0		3658002	0					
ANR	3658031	IdentifierDeclType	int		3658002	0					
ANR	3658032	Identifier	nArgs		3658002	1					
ANR	3658033	AssignmentExpression	nArgs = 0		3658002	2		=			
ANR	3658034	Identifier	nArgs		3658002	0					
ANR	3658035	PrimaryExpression	0		3658002	1					
ANR	3658036	IdentifierDeclStatement	int i ;	173:1:5178:5187	3658002	3	True				
ANR	3658037	IdentifierDecl	i		3658002	0					
ANR	3658038	IdentifierDeclType	int		3658002	0					
ANR	3658039	Identifier	i		3658002	1					
ANR	3658040	IdentifierDeclStatement	char * cmd_str ;	174:1:5190:5203	3658002	4	True				
ANR	3658041	IdentifierDecl	* cmd_str		3658002	0					
ANR	3658042	IdentifierDeclType	char *		3658002	0					
ANR	3658043	Identifier	cmd_str		3658002	1					
ANR	3658044	IdentifierDeclStatement	DCCollector * pool = NULL ;	175:1:5206:5230	3658002	5	True				
ANR	3658045	IdentifierDecl	* pool = NULL		3658002	0					
ANR	3658046	IdentifierDeclType	DCCollector *		3658002	0					
ANR	3658047	Identifier	pool		3658002	1					
ANR	3658048	AssignmentExpression	* pool = NULL		3658002	2		=			
ANR	3658049	Identifier	NULL		3658002	0					
ANR	3658050	Identifier	NULL		3658002	1					
ANR	3658051	IdentifierDeclStatement	char * scheddName = NULL ;	176:1:5233:5256	3658002	6	True				
ANR	3658052	IdentifierDecl	* scheddName = NULL		3658002	0					
ANR	3658053	IdentifierDeclType	char *		3658002	0					
ANR	3658054	Identifier	scheddName		3658002	1					
ANR	3658055	AssignmentExpression	* scheddName = NULL		3658002	2		=			
ANR	3658056	Identifier	NULL		3658002	0					
ANR	3658057	Identifier	NULL		3658002	1					
ANR	3658058	IdentifierDeclStatement	char * scheddAddr = NULL ;	177:1:5259:5282	3658002	7	True				
ANR	3658059	IdentifierDecl	* scheddAddr = NULL		3658002	0					
ANR	3658060	IdentifierDeclType	char *		3658002	0					
ANR	3658061	Identifier	scheddAddr		3658002	1					
ANR	3658062	AssignmentExpression	* scheddAddr = NULL		3658002	2		=			
ANR	3658063	Identifier	NULL		3658002	0					
ANR	3658064	Identifier	NULL		3658002	1					
ANR	3658065	IdentifierDeclStatement	param_functions * p_funcs = NULL ;	178:1:5285:5316	3658002	8	True				
ANR	3658066	IdentifierDecl	* p_funcs = NULL		3658002	0					
ANR	3658067	IdentifierDeclType	param_functions *		3658002	0					
ANR	3658068	Identifier	p_funcs		3658002	1					
ANR	3658069	AssignmentExpression	* p_funcs = NULL		3658002	2		=			
ANR	3658070	Identifier	NULL		3658002	0					
ANR	3658071	Identifier	NULL		3658002	1					
ANR	3658072	ExpressionStatement	has_constraint = false	181:1:5357:5379	3658002	9	True				
ANR	3658073	AssignmentExpression	has_constraint = false		3658002	0		=			
ANR	3658074	Identifier	has_constraint		3658002	0					
ANR	3658075	Identifier	false		3658002	1					
ANR	3658076	ExpressionStatement	"myDistro -> Init ( argc , argv )"	183:1:5383:5411	3658002	10	True				
ANR	3658077	CallExpression	"myDistro -> Init ( argc , argv )"		3658002	0					
ANR	3658078	Callee	myDistro -> Init		3658002	0					
ANR	3658079	PtrMemberAccess	myDistro -> Init		3658002	0					
ANR	3658080	Identifier	myDistro		3658002	0					
ANR	3658081	Identifier	Init		3658002	1					
ANR	3658082	ArgumentList	argc		3658002	1					
ANR	3658083	Argument	argc		3658002	0					
ANR	3658084	Identifier	argc		3658002	0					
ANR	3658085	Argument	argv		3658002	1					
ANR	3658086	Identifier	argv		3658002	0					
ANR	3658087	ExpressionStatement	"MyName = strrchr ( argv [ 0 ] , DIR_DELIM_CHAR )"	184:1:5414:5457	3658002	11	True				
ANR	3658088	AssignmentExpression	"MyName = strrchr ( argv [ 0 ] , DIR_DELIM_CHAR )"		3658002	0		=			
ANR	3658089	Identifier	MyName		3658002	0					
ANR	3658090	CallExpression	"strrchr ( argv [ 0 ] , DIR_DELIM_CHAR )"		3658002	1					
ANR	3658091	Callee	strrchr		3658002	0					
ANR	3658092	Identifier	strrchr		3658002	0					
ANR	3658093	ArgumentList	argv [ 0 ]		3658002	1					
ANR	3658094	Argument	argv [ 0 ]		3658002	0					
ANR	3658095	ArrayIndexing	argv [ 0 ]		3658002	0					
ANR	3658096	Identifier	argv		3658002	0					
ANR	3658097	PrimaryExpression	0		3658002	1					
ANR	3658098	Argument	DIR_DELIM_CHAR		3658002	1					
ANR	3658099	Identifier	DIR_DELIM_CHAR		3658002	0					
ANR	3658100	IfStatement	if ( ! MyName )		3658002	12					
ANR	3658101	Condition	! MyName	185:5:5464:5470	3658002	0	True				
ANR	3658102	UnaryOperationExpression	! MyName		3658002	0					
ANR	3658103	UnaryOperator	!		3658002	0					
ANR	3658104	Identifier	MyName		3658002	1					
ANR	3658105	CompoundStatement		17:15:420:420	3658002	1					
ANR	3658106	ExpressionStatement	MyName = argv [ 0 ]	186:2:5478:5494	3658002	0	True				
ANR	3658107	AssignmentExpression	MyName = argv [ 0 ]		3658002	0		=			
ANR	3658108	Identifier	MyName		3658002	0					
ANR	3658109	ArrayIndexing	argv [ 0 ]		3658002	1					
ANR	3658110	Identifier	argv		3658002	0					
ANR	3658111	PrimaryExpression	0		3658002	1					
ANR	3658112	ElseStatement	else		3658002	0					
ANR	3658113	CompoundStatement		19:8:450:450	3658002	0					
ANR	3658114	ExpressionStatement	MyName ++	188:2:5508:5516	3658002	0	True				
ANR	3658115	PostIncDecOperationExpression	MyName ++		3658002	0					
ANR	3658116	Identifier	MyName		3658002	0					
ANR	3658117	IncDec	++		3658002	1					
ANR	3658118	ExpressionStatement	"cmd_str = strchr ( MyName , '_' )"	191:1:5523:5553	3658002	13	True				
ANR	3658119	AssignmentExpression	"cmd_str = strchr ( MyName , '_' )"		3658002	0		=			
ANR	3658120	Identifier	cmd_str		3658002	0					
ANR	3658121	CallExpression	"strchr ( MyName , '_' )"		3658002	1					
ANR	3658122	Callee	strchr		3658002	0					
ANR	3658123	Identifier	strchr		3658002	0					
ANR	3658124	ArgumentList	MyName		3658002	1					
ANR	3658125	Argument	MyName		3658002	0					
ANR	3658126	Identifier	MyName		3658002	0					
ANR	3658127	Argument	'_'		3658002	1					
ANR	3658128	PrimaryExpression	'_'		3658002	0					
ANR	3658129	IfStatement	"if ( cmd_str && strncasecmp ( cmd_str , ""_hold"" , strlen ( ""_hold"" ) ) == MATCH )"		3658002	14					
ANR	3658130	Condition	"cmd_str && strncasecmp ( cmd_str , ""_hold"" , strlen ( ""_hold"" ) ) == MATCH"	197:5:5719:5786	3658002	0	True				
ANR	3658131	AndExpression	"cmd_str && strncasecmp ( cmd_str , ""_hold"" , strlen ( ""_hold"" ) ) == MATCH"		3658002	0		&&			
ANR	3658132	Identifier	cmd_str		3658002	0					
ANR	3658133	EqualityExpression	"strncasecmp ( cmd_str , ""_hold"" , strlen ( ""_hold"" ) ) == MATCH"		3658002	1		==			
ANR	3658134	CallExpression	"strncasecmp ( cmd_str , ""_hold"" , strlen ( ""_hold"" ) )"		3658002	0					
ANR	3658135	Callee	strncasecmp		3658002	0					
ANR	3658136	Identifier	strncasecmp		3658002	0					
ANR	3658137	ArgumentList	cmd_str		3658002	1					
ANR	3658138	Argument	cmd_str		3658002	0					
ANR	3658139	Identifier	cmd_str		3658002	0					
ANR	3658140	Argument	"""_hold"""		3658002	1					
ANR	3658141	PrimaryExpression	"""_hold"""		3658002	0					
ANR	3658142	Argument	"strlen ( ""_hold"" )"		3658002	2					
ANR	3658143	CallExpression	"strlen ( ""_hold"" )"		3658002	0					
ANR	3658144	Callee	strlen		3658002	0					
ANR	3658145	Identifier	strlen		3658002	0					
ANR	3658146	ArgumentList	"""_hold"""		3658002	1					
ANR	3658147	Argument	"""_hold"""		3658002	0					
ANR	3658148	PrimaryExpression	"""_hold"""		3658002	0					
ANR	3658149	Identifier	MATCH		3658002	1					
ANR	3658150	CompoundStatement		29:75:735:735	3658002	1					
ANR	3658151	ExpressionStatement	mode = JA_HOLD_JOBS	199:2:5795:5814	3658002	0	True				
ANR	3658152	AssignmentExpression	mode = JA_HOLD_JOBS		3658002	0		=			
ANR	3658153	Identifier	mode		3658002	0					
ANR	3658154	Identifier	JA_HOLD_JOBS		3658002	1					
ANR	3658155	ElseStatement	else		3658002	0					
ANR	3658156	IfStatement	"if ( cmd_str && strncasecmp ( cmd_str , ""_release"" , strlen ( ""_release"" ) ) == MATCH )"		3658002	0					
ANR	3658157	Condition	"cmd_str && strncasecmp ( cmd_str , ""_release"" , strlen ( ""_release"" ) ) == MATCH"	201:13:5830:5907	3658002	0	True				
ANR	3658158	AndExpression	"cmd_str && strncasecmp ( cmd_str , ""_release"" , strlen ( ""_release"" ) ) == MATCH"		3658002	0		&&			
ANR	3658159	Identifier	cmd_str		3658002	0					
ANR	3658160	EqualityExpression	"strncasecmp ( cmd_str , ""_release"" , strlen ( ""_release"" ) ) == MATCH"		3658002	1		==			
ANR	3658161	CallExpression	"strncasecmp ( cmd_str , ""_release"" , strlen ( ""_release"" ) )"		3658002	0					
ANR	3658162	Callee	strncasecmp		3658002	0					
ANR	3658163	Identifier	strncasecmp		3658002	0					
ANR	3658164	ArgumentList	cmd_str		3658002	1					
ANR	3658165	Argument	cmd_str		3658002	0					
ANR	3658166	Identifier	cmd_str		3658002	0					
ANR	3658167	Argument	"""_release"""		3658002	1					
ANR	3658168	PrimaryExpression	"""_release"""		3658002	0					
ANR	3658169	Argument	"strlen ( ""_release"" )"		3658002	2					
ANR	3658170	CallExpression	"strlen ( ""_release"" )"		3658002	0					
ANR	3658171	Callee	strlen		3658002	0					
ANR	3658172	Identifier	strlen		3658002	0					
ANR	3658173	ArgumentList	"""_release"""		3658002	1					
ANR	3658174	Argument	"""_release"""		3658002	0					
ANR	3658175	PrimaryExpression	"""_release"""		3658002	0					
ANR	3658176	Identifier	MATCH		3658002	1					
ANR	3658177	CompoundStatement		34:69:857:857	3658002	1					
ANR	3658178	ExpressionStatement	mode = JA_RELEASE_JOBS	204:2:5916:5938	3658002	0	True				
ANR	3658179	AssignmentExpression	mode = JA_RELEASE_JOBS		3658002	0		=			
ANR	3658180	Identifier	mode		3658002	0					
ANR	3658181	Identifier	JA_RELEASE_JOBS		3658002	1					
ANR	3658182	ElseStatement	else		3658002	0					
ANR	3658183	IfStatement	"if ( cmd_str && strncasecmp ( cmd_str , ""_suspend"" , strlen ( ""_suspend"" ) ) == MATCH )"		3658002	0					
ANR	3658184	Condition	"cmd_str && strncasecmp ( cmd_str , ""_suspend"" , strlen ( ""_suspend"" ) ) == MATCH"	206:13:5954:6031	3658002	0	True				
ANR	3658185	AndExpression	"cmd_str && strncasecmp ( cmd_str , ""_suspend"" , strlen ( ""_suspend"" ) ) == MATCH"		3658002	0		&&			
ANR	3658186	Identifier	cmd_str		3658002	0					
ANR	3658187	EqualityExpression	"strncasecmp ( cmd_str , ""_suspend"" , strlen ( ""_suspend"" ) ) == MATCH"		3658002	1		==			
ANR	3658188	CallExpression	"strncasecmp ( cmd_str , ""_suspend"" , strlen ( ""_suspend"" ) )"		3658002	0					
ANR	3658189	Callee	strncasecmp		3658002	0					
ANR	3658190	Identifier	strncasecmp		3658002	0					
ANR	3658191	ArgumentList	cmd_str		3658002	1					
ANR	3658192	Argument	cmd_str		3658002	0					
ANR	3658193	Identifier	cmd_str		3658002	0					
ANR	3658194	Argument	"""_suspend"""		3658002	1					
ANR	3658195	PrimaryExpression	"""_suspend"""		3658002	0					
ANR	3658196	Argument	"strlen ( ""_suspend"" )"		3658002	2					
ANR	3658197	CallExpression	"strlen ( ""_suspend"" )"		3658002	0					
ANR	3658198	Callee	strlen		3658002	0					
ANR	3658199	Identifier	strlen		3658002	0					
ANR	3658200	ArgumentList	"""_suspend"""		3658002	1					
ANR	3658201	Argument	"""_suspend"""		3658002	0					
ANR	3658202	PrimaryExpression	"""_suspend"""		3658002	0					
ANR	3658203	Identifier	MATCH		3658002	1					
ANR	3658204	CompoundStatement		39:69:981:981	3658002	1					
ANR	3658205	ExpressionStatement	mode = JA_SUSPEND_JOBS	209:2:6040:6062	3658002	0	True				
ANR	3658206	AssignmentExpression	mode = JA_SUSPEND_JOBS		3658002	0		=			
ANR	3658207	Identifier	mode		3658002	0					
ANR	3658208	Identifier	JA_SUSPEND_JOBS		3658002	1					
ANR	3658209	ElseStatement	else		3658002	0					
ANR	3658210	IfStatement	"if ( cmd_str && strncasecmp ( cmd_str , ""_continue"" , strlen ( ""_continue"" ) ) == MATCH )"		3658002	0					
ANR	3658211	Condition	"cmd_str && strncasecmp ( cmd_str , ""_continue"" , strlen ( ""_continue"" ) ) == MATCH"	211:13:6078:6157	3658002	0	True				
ANR	3658212	AndExpression	"cmd_str && strncasecmp ( cmd_str , ""_continue"" , strlen ( ""_continue"" ) ) == MATCH"		3658002	0		&&			
ANR	3658213	Identifier	cmd_str		3658002	0					
ANR	3658214	EqualityExpression	"strncasecmp ( cmd_str , ""_continue"" , strlen ( ""_continue"" ) ) == MATCH"		3658002	1		==			
ANR	3658215	CallExpression	"strncasecmp ( cmd_str , ""_continue"" , strlen ( ""_continue"" ) )"		3658002	0					
ANR	3658216	Callee	strncasecmp		3658002	0					
ANR	3658217	Identifier	strncasecmp		3658002	0					
ANR	3658218	ArgumentList	cmd_str		3658002	1					
ANR	3658219	Argument	cmd_str		3658002	0					
ANR	3658220	Identifier	cmd_str		3658002	0					
ANR	3658221	Argument	"""_continue"""		3658002	1					
ANR	3658222	PrimaryExpression	"""_continue"""		3658002	0					
ANR	3658223	Argument	"strlen ( ""_continue"" )"		3658002	2					
ANR	3658224	CallExpression	"strlen ( ""_continue"" )"		3658002	0					
ANR	3658225	Callee	strlen		3658002	0					
ANR	3658226	Identifier	strlen		3658002	0					
ANR	3658227	ArgumentList	"""_continue"""		3658002	1					
ANR	3658228	Argument	"""_continue"""		3658002	0					
ANR	3658229	PrimaryExpression	"""_continue"""		3658002	0					
ANR	3658230	Identifier	MATCH		3658002	1					
ANR	3658231	CompoundStatement		44:71:1107:1107	3658002	1					
ANR	3658232	ExpressionStatement	mode = JA_CONTINUE_JOBS	214:2:6166:6189	3658002	0	True				
ANR	3658233	AssignmentExpression	mode = JA_CONTINUE_JOBS		3658002	0		=			
ANR	3658234	Identifier	mode		3658002	0					
ANR	3658235	Identifier	JA_CONTINUE_JOBS		3658002	1					
ANR	3658236	ElseStatement	else		3658002	0					
ANR	3658237	IfStatement	"if ( cmd_str && strncasecmp ( cmd_str , ""_rm"" , strlen ( ""_rm"" ) ) == MATCH )"		3658002	0					
ANR	3658238	Condition	"cmd_str && strncasecmp ( cmd_str , ""_rm"" , strlen ( ""_rm"" ) ) == MATCH"	216:12:6204:6271	3658002	0	True				
ANR	3658239	AndExpression	"cmd_str && strncasecmp ( cmd_str , ""_rm"" , strlen ( ""_rm"" ) ) == MATCH"		3658002	0		&&			
ANR	3658240	Identifier	cmd_str		3658002	0					
ANR	3658241	EqualityExpression	"strncasecmp ( cmd_str , ""_rm"" , strlen ( ""_rm"" ) ) == MATCH"		3658002	1		==			
ANR	3658242	CallExpression	"strncasecmp ( cmd_str , ""_rm"" , strlen ( ""_rm"" ) )"		3658002	0					
ANR	3658243	Callee	strncasecmp		3658002	0					
ANR	3658244	Identifier	strncasecmp		3658002	0					
ANR	3658245	ArgumentList	cmd_str		3658002	1					
ANR	3658246	Argument	cmd_str		3658002	0					
ANR	3658247	Identifier	cmd_str		3658002	0					
ANR	3658248	Argument	"""_rm"""		3658002	1					
ANR	3658249	PrimaryExpression	"""_rm"""		3658002	0					
ANR	3658250	Argument	"strlen ( ""_rm"" )"		3658002	2					
ANR	3658251	CallExpression	"strlen ( ""_rm"" )"		3658002	0					
ANR	3658252	Callee	strlen		3658002	0					
ANR	3658253	Identifier	strlen		3658002	0					
ANR	3658254	ArgumentList	"""_rm"""		3658002	1					
ANR	3658255	Argument	"""_rm"""		3658002	0					
ANR	3658256	PrimaryExpression	"""_rm"""		3658002	0					
ANR	3658257	Identifier	MATCH		3658002	1					
ANR	3658258	CompoundStatement		49:59:1221:1221	3658002	1					
ANR	3658259	ExpressionStatement	mode = JA_REMOVE_JOBS	219:2:6280:6301	3658002	0	True				
ANR	3658260	AssignmentExpression	mode = JA_REMOVE_JOBS		3658002	0		=			
ANR	3658261	Identifier	mode		3658002	0					
ANR	3658262	Identifier	JA_REMOVE_JOBS		3658002	1					
ANR	3658263	ElseStatement	else		3658002	0					
ANR	3658264	IfStatement	"if ( cmd_str && ! strncasecmp ( cmd_str , ""_vacate_job"" , strlen ( ""_vacate_job"" ) ) )"		3658002	0					
ANR	3658265	Condition	"cmd_str && ! strncasecmp ( cmd_str , ""_vacate_job"" , strlen ( ""_vacate_job"" ) )"	221:12:6316:6395	3658002	0	True				
ANR	3658266	AndExpression	"cmd_str && ! strncasecmp ( cmd_str , ""_vacate_job"" , strlen ( ""_vacate_job"" ) )"		3658002	0		&&			
ANR	3658267	Identifier	cmd_str		3658002	0					
ANR	3658268	UnaryOperationExpression	"! strncasecmp ( cmd_str , ""_vacate_job"" , strlen ( ""_vacate_job"" ) )"		3658002	1					
ANR	3658269	UnaryOperator	!		3658002	0					
ANR	3658270	CallExpression	"strncasecmp ( cmd_str , ""_vacate_job"" , strlen ( ""_vacate_job"" ) )"		3658002	1					
ANR	3658271	Callee	strncasecmp		3658002	0					
ANR	3658272	Identifier	strncasecmp		3658002	0					
ANR	3658273	ArgumentList	cmd_str		3658002	1					
ANR	3658274	Argument	cmd_str		3658002	0					
ANR	3658275	Identifier	cmd_str		3658002	0					
ANR	3658276	Argument	"""_vacate_job"""		3658002	1					
ANR	3658277	PrimaryExpression	"""_vacate_job"""		3658002	0					
ANR	3658278	Argument	"strlen ( ""_vacate_job"" )"		3658002	2					
ANR	3658279	CallExpression	"strlen ( ""_vacate_job"" )"		3658002	0					
ANR	3658280	Callee	strlen		3658002	0					
ANR	3658281	Identifier	strlen		3658002	0					
ANR	3658282	ArgumentList	"""_vacate_job"""		3658002	1					
ANR	3658283	Argument	"""_vacate_job"""		3658002	0					
ANR	3658284	PrimaryExpression	"""_vacate_job"""		3658002	0					
ANR	3658285	CompoundStatement		54:34:1345:1345	3658002	1					
ANR	3658286	ExpressionStatement	mode = JA_VACATE_JOBS	224:2:6406:6427	3658002	0	True				
ANR	3658287	AssignmentExpression	mode = JA_VACATE_JOBS		3658002	0		=			
ANR	3658288	Identifier	mode		3658002	0					
ANR	3658289	Identifier	JA_VACATE_JOBS		3658002	1					
ANR	3658290	ElseStatement	else		3658002	0					
ANR	3658291	CompoundStatement		58:8:1384:1384	3658002	0					
ANR	3658292	ExpressionStatement	"fprintf ( stderr , ""Unrecognized command name, \\""%s\\""\\n"" , MyName )"	228:2:6490:6554	3658002	0	True				
ANR	3658293	CallExpression	"fprintf ( stderr , ""Unrecognized command name, \\""%s\\""\\n"" , MyName )"		3658002	0					
ANR	3658294	Callee	fprintf		3658002	0					
ANR	3658295	Identifier	fprintf		3658002	0					
ANR	3658296	ArgumentList	stderr		3658002	1					
ANR	3658297	Argument	stderr		3658002	0					
ANR	3658298	Identifier	stderr		3658002	0					
ANR	3658299	Argument	"""Unrecognized command name, \\""%s\\""\\n"""		3658002	1					
ANR	3658300	PrimaryExpression	"""Unrecognized command name, \\""%s\\""\\n"""		3658002	0					
ANR	3658301	Argument	MyName		3658002	2					
ANR	3658302	Identifier	MyName		3658002	0					
ANR	3658303	ExpressionStatement	usage ( )	229:2:6559:6566	3658002	1	True				
ANR	3658304	CallExpression	usage ( )		3658002	0					
ANR	3658305	Callee	usage		3658002	0					
ANR	3658306	Identifier	usage		3658002	0					
ANR	3658307	ArgumentList			3658002	1					
ANR	3658308	ExpressionStatement	config ( )	232:1:6573:6581	3658002	15	True				
ANR	3658309	CallExpression	config ( )		3658002	0					
ANR	3658310	Callee	config		3658002	0					
ANR	3658311	Identifier	config		3658002	0					
ANR	3658312	ArgumentList			3658002	1					
ANR	3658313	IfStatement	if ( argc < 2 )		3658002	16					
ANR	3658314	Condition	argc < 2	235:5:6590:6597	3658002	0	True				
ANR	3658315	RelationalExpression	argc < 2		3658002	0		<			
ANR	3658316	Identifier	argc		3658002	0					
ANR	3658317	PrimaryExpression	2		3658002	1					
ANR	3658318	CompoundStatement		67:16:1547:1547	3658002	1					
ANR	3658319	ExpressionStatement	"fprintf ( stderr , ""You did not specify any jobs\\n"" )"	237:2:6650:6701	3658002	0	True				
ANR	3658320	CallExpression	"fprintf ( stderr , ""You did not specify any jobs\\n"" )"		3658002	0					
ANR	3658321	Callee	fprintf		3658002	0					
ANR	3658322	Identifier	fprintf		3658002	0					
ANR	3658323	ArgumentList	stderr		3658002	1					
ANR	3658324	Argument	stderr		3658002	0					
ANR	3658325	Identifier	stderr		3658002	0					
ANR	3658326	Argument	"""You did not specify any jobs\\n"""		3658002	1					
ANR	3658327	PrimaryExpression	"""You did not specify any jobs\\n"""		3658002	0					
ANR	3658328	ExpressionStatement	usage ( )	238:2:6706:6713	3658002	1	True				
ANR	3658329	CallExpression	usage ( )		3658002	0					
ANR	3658330	Callee	usage		3658002	0					
ANR	3658331	Identifier	usage		3658002	0					
ANR	3658332	ArgumentList			3658002	1					
ANR	3658333	ExpressionStatement	"install_sig_handler ( SIGPIPE , SIG_IGN )"	242:1:6740:6778	3658002	17	True				
ANR	3658334	CallExpression	"install_sig_handler ( SIGPIPE , SIG_IGN )"		3658002	0					
ANR	3658335	Callee	install_sig_handler		3658002	0					
ANR	3658336	Identifier	install_sig_handler		3658002	0					
ANR	3658337	ArgumentList	SIGPIPE		3658002	1					
ANR	3658338	Argument	SIGPIPE		3658002	0					
ANR	3658339	Identifier	SIGPIPE		3658002	0					
ANR	3658340	Argument	SIG_IGN		3658002	1					
ANR	3658341	Identifier	SIG_IGN		3658002	0					
ANR	3658342	ForStatement	for ( argv ++ ; ( arg = * argv ) ; argv ++ )		3658002	18					
ANR	3658343	ForInit	argv ++ ;	245:6:6794:6800	3658002	0	True				
ANR	3658344	PostIncDecOperationExpression	argv ++		3658002	0					
ANR	3658345	Identifier	argv		3658002	0					
ANR	3658346	IncDec	++		3658002	1					
ANR	3658347	Condition	arg = * argv	245:14:6802:6814	3658002	1	True				
ANR	3658348	AssignmentExpression	arg = * argv		3658002	0		=			
ANR	3658349	Identifier	arg		3658002	0					
ANR	3658350	UnaryOperationExpression	* argv		3658002	1					
ANR	3658351	UnaryOperator	*		3658002	0					
ANR	3658352	Identifier	argv		3658002	1					
ANR	3658353	PostIncDecOperationExpression	argv ++	245:29:6817:6822	3658002	2	True				
ANR	3658354	Identifier	argv		3658002	0					
ANR	3658355	IncDec	++		3658002	1					
ANR	3658356	CompoundStatement		77:38:1772:1772	3658002	3					
ANR	3658357	IfStatement	if ( arg [ 0 ] == '-' )		3658002	0					
ANR	3658358	Condition	arg [ 0 ] == '-'	246:6:6834:6846	3658002	0	True				
ANR	3658359	EqualityExpression	arg [ 0 ] == '-'		3658002	0		==			
ANR	3658360	ArrayIndexing	arg [ 0 ]		3658002	0					
ANR	3658361	Identifier	arg		3658002	0					
ANR	3658362	PrimaryExpression	0		3658002	1					
ANR	3658363	PrimaryExpression	'-'		3658002	1					
ANR	3658364	CompoundStatement		78:22:1796:1796	3658002	1					
ANR	3658365	IfStatement	"if ( match_prefix ( arg , ""-debug"" ) )"		3658002	0					
ANR	3658366	Condition	"match_prefix ( arg , ""-debug"" )"	247:16:6868:6894	3658002	0	True				
ANR	3658367	CallExpression	"match_prefix ( arg , ""-debug"" )"		3658002	0					
ANR	3658368	Callee	match_prefix		3658002	0					
ANR	3658369	Identifier	match_prefix		3658002	0					
ANR	3658370	ArgumentList	arg		3658002	1					
ANR	3658371	Argument	arg		3658002	0					
ANR	3658372	Identifier	arg		3658002	0					
ANR	3658373	Argument	"""-debug"""		3658002	1					
ANR	3658374	PrimaryExpression	"""-debug"""		3658002	0					
ANR	3658375	CompoundStatement		79:45:1843:1843	3658002	1					
ANR	3658376	ExpressionStatement	Termlog = 1	249:4:6929:6940	3658002	0	True				
ANR	3658377	AssignmentExpression	Termlog = 1		3658002	0		=			
ANR	3658378	Identifier	Termlog		3658002	0					
ANR	3658379	PrimaryExpression	1		3658002	1					
ANR	3658380	ExpressionStatement	p_funcs = get_param_functions ( )	250:4:6946:6977	3658002	1	True				
ANR	3658381	AssignmentExpression	p_funcs = get_param_functions ( )		3658002	0		=			
ANR	3658382	Identifier	p_funcs		3658002	0					
ANR	3658383	CallExpression	get_param_functions ( )		3658002	1					
ANR	3658384	Callee	get_param_functions		3658002	0					
ANR	3658385	Identifier	get_param_functions		3658002	0					
ANR	3658386	ArgumentList			3658002	1					
ANR	3658387	ExpressionStatement	"dprintf_config ( ""TOOL"" , p_funcs )"	251:4:6983:7015	3658002	2	True				
ANR	3658388	CallExpression	"dprintf_config ( ""TOOL"" , p_funcs )"		3658002	0					
ANR	3658389	Callee	dprintf_config		3658002	0					
ANR	3658390	Identifier	dprintf_config		3658002	0					
ANR	3658391	ArgumentList	"""TOOL"""		3658002	1					
ANR	3658392	Argument	"""TOOL"""		3658002	0					
ANR	3658393	PrimaryExpression	"""TOOL"""		3658002	0					
ANR	3658394	Argument	p_funcs		3658002	1					
ANR	3658395	Identifier	p_funcs		3658002	0					
ANR	3658396	ElseStatement	else		3658002	0					
ANR	3658397	IfStatement	"if ( match_prefix ( arg , ""-constraint"" ) )"		3658002	0					
ANR	3658398	Condition	"match_prefix ( arg , ""-constraint"" )"	252:23:7040:7071	3658002	0	True				
ANR	3658399	CallExpression	"match_prefix ( arg , ""-constraint"" )"		3658002	0					
ANR	3658400	Callee	match_prefix		3658002	0					
ANR	3658401	Identifier	match_prefix		3658002	0					
ANR	3658402	ArgumentList	arg		3658002	1					
ANR	3658403	Argument	arg		3658002	0					
ANR	3658404	Identifier	arg		3658002	0					
ANR	3658405	Argument	"""-constraint"""		3658002	1					
ANR	3658406	PrimaryExpression	"""-constraint"""		3658002	0					
ANR	3658407	CompoundStatement		84:57:2020:2020	3658002	1					
ANR	3658408	ExpressionStatement	args [ nArgs ] = arg	253:4:7080:7097	3658002	0	True				
ANR	3658409	AssignmentExpression	args [ nArgs ] = arg		3658002	0		=			
ANR	3658410	ArrayIndexing	args [ nArgs ]		3658002	0					
ANR	3658411	Identifier	args		3658002	0					
ANR	3658412	Identifier	nArgs		3658002	1					
ANR	3658413	Identifier	arg		3658002	1					
ANR	3658414	ExpressionStatement	nArgs ++	254:4:7103:7110	3658002	1	True				
ANR	3658415	PostIncDecOperationExpression	nArgs ++		3658002	0					
ANR	3658416	Identifier	nArgs		3658002	0					
ANR	3658417	IncDec	++		3658002	1					
ANR	3658418	ExpressionStatement	argv ++	255:4:7116:7122	3658002	2	True				
ANR	3658419	PostIncDecOperationExpression	argv ++		3658002	0					
ANR	3658420	Identifier	argv		3658002	0					
ANR	3658421	IncDec	++		3658002	1					
ANR	3658422	IfStatement	if ( ! * argv )		3658002	3					
ANR	3658423	Condition	! * argv	256:8:7132:7138	3658002	0	True				
ANR	3658424	UnaryOperationExpression	! * argv		3658002	0					
ANR	3658425	UnaryOperator	!		3658002	0					
ANR	3658426	UnaryOperationExpression	* argv		3658002	1					
ANR	3658427	UnaryOperator	*		3658002	0					
ANR	3658428	Identifier	argv		3658002	1					
ANR	3658429	CompoundStatement		88:18:2088:2088	3658002	1					
ANR	3658430	ExpressionStatement	"fprintf ( stderr , ""%s: -constraint requires another argument\\n"" , MyName )"	257:5:7149:7238	3658002	0	True				
ANR	3658431	CallExpression	"fprintf ( stderr , ""%s: -constraint requires another argument\\n"" , MyName )"		3658002	0					
ANR	3658432	Callee	fprintf		3658002	0					
ANR	3658433	Identifier	fprintf		3658002	0					
ANR	3658434	ArgumentList	stderr		3658002	1					
ANR	3658435	Argument	stderr		3658002	0					
ANR	3658436	Identifier	stderr		3658002	0					
ANR	3658437	Argument	"""%s: -constraint requires another argument\\n"""		3658002	1					
ANR	3658438	PrimaryExpression	"""%s: -constraint requires another argument\\n"""		3658002	0					
ANR	3658439	Argument	MyName		3658002	2					
ANR	3658440	Identifier	MyName		3658002	0					
ANR	3658441	ExpressionStatement	exit ( 1 )	260:5:7245:7252	3658002	1	True				
ANR	3658442	CallExpression	exit ( 1 )		3658002	0					
ANR	3658443	Callee	exit		3658002	0					
ANR	3658444	Identifier	exit		3658002	0					
ANR	3658445	ArgumentList	1		3658002	1					
ANR	3658446	Argument	1		3658002	0					
ANR	3658447	PrimaryExpression	1		3658002	0					
ANR	3658448	ExpressionStatement	args [ nArgs ] = * argv	262:4:7268:7287	3658002	4	True				
ANR	3658449	AssignmentExpression	args [ nArgs ] = * argv		3658002	0		=			
ANR	3658450	ArrayIndexing	args [ nArgs ]		3658002	0					
ANR	3658451	Identifier	args		3658002	0					
ANR	3658452	Identifier	nArgs		3658002	1					
ANR	3658453	UnaryOperationExpression	* argv		3658002	1					
ANR	3658454	UnaryOperator	*		3658002	0					
ANR	3658455	Identifier	argv		3658002	1					
ANR	3658456	ExpressionStatement	nArgs ++	263:4:7293:7300	3658002	5	True				
ANR	3658457	PostIncDecOperationExpression	nArgs ++		3658002	0					
ANR	3658458	Identifier	nArgs		3658002	0					
ANR	3658459	IncDec	++		3658002	1					
ANR	3658460	ExpressionStatement	ConstraintArg = true	264:4:7306:7326	3658002	6	True				
ANR	3658461	AssignmentExpression	ConstraintArg = true		3658002	0		=			
ANR	3658462	Identifier	ConstraintArg		3658002	0					
ANR	3658463	Identifier	true		3658002	1					
ANR	3658464	ElseStatement	else		3658002	0					
ANR	3658465	IfStatement	"if ( match_prefix ( arg , ""-all"" ) )"		3658002	0					
ANR	3658466	Condition	"match_prefix ( arg , ""-all"" )"	265:23:7351:7375	3658002	0	True				
ANR	3658467	CallExpression	"match_prefix ( arg , ""-all"" )"		3658002	0					
ANR	3658468	Callee	match_prefix		3658002	0					
ANR	3658469	Identifier	match_prefix		3658002	0					
ANR	3658470	ArgumentList	arg		3658002	1					
ANR	3658471	Argument	arg		3658002	0					
ANR	3658472	Identifier	arg		3658002	0					
ANR	3658473	Argument	"""-all"""		3658002	1					
ANR	3658474	PrimaryExpression	"""-all"""		3658002	0					
ANR	3658475	CompoundStatement		97:50:2324:2324	3658002	1					
ANR	3658476	ExpressionStatement	All = true	266:16:7396:7406	3658002	0	True				
ANR	3658477	AssignmentExpression	All = true		3658002	0		=			
ANR	3658478	Identifier	All		3658002	0					
ANR	3658479	Identifier	true		3658002	1					
ANR	3658480	ElseStatement	else		3658002	0					
ANR	3658481	IfStatement	"if ( match_prefix ( arg , ""-addr"" ) )"		3658002	0					
ANR	3658482	Condition	"match_prefix ( arg , ""-addr"" )"	267:23:7431:7456	3658002	0	True				
ANR	3658483	CallExpression	"match_prefix ( arg , ""-addr"" )"		3658002	0					
ANR	3658484	Callee	match_prefix		3658002	0					
ANR	3658485	Identifier	match_prefix		3658002	0					
ANR	3658486	ArgumentList	arg		3658002	1					
ANR	3658487	Argument	arg		3658002	0					
ANR	3658488	Identifier	arg		3658002	0					
ANR	3658489	Argument	"""-addr"""		3658002	1					
ANR	3658490	PrimaryExpression	"""-addr"""		3658002	0					
ANR	3658491	CompoundStatement		99:51:2405:2405	3658002	1					
ANR	3658492	ExpressionStatement	argv ++	268:16:7477:7483	3658002	0	True				
ANR	3658493	PostIncDecOperationExpression	argv ++		3658002	0					
ANR	3658494	Identifier	argv		3658002	0					
ANR	3658495	IncDec	++		3658002	1					
ANR	3658496	IfStatement	if ( ! * argv )		3658002	1					
ANR	3658497	Condition	! * argv	269:20:7505:7511	3658002	0	True				
ANR	3658498	UnaryOperationExpression	! * argv		3658002	0					
ANR	3658499	UnaryOperator	!		3658002	0					
ANR	3658500	UnaryOperationExpression	* argv		3658002	1					
ANR	3658501	UnaryOperator	*		3658002	0					
ANR	3658502	Identifier	argv		3658002	1					
ANR	3658503	CompoundStatement		101:30:2461:2461	3658002	1					
ANR	3658504	ExpressionStatement	"fprintf ( stderr , ""%s: -addr requires another argument\\n"" , MyName )"	270:20:7537:7662	3658002	0	True				
ANR	3658505	CallExpression	"fprintf ( stderr , ""%s: -addr requires another argument\\n"" , MyName )"		3658002	0					
ANR	3658506	Callee	fprintf		3658002	0					
ANR	3658507	Identifier	fprintf		3658002	0					
ANR	3658508	ArgumentList	stderr		3658002	1					
ANR	3658509	Argument	stderr		3658002	0					
ANR	3658510	Identifier	stderr		3658002	0					
ANR	3658511	Argument	"""%s: -addr requires another argument\\n"""		3658002	1					
ANR	3658512	PrimaryExpression	"""%s: -addr requires another argument\\n"""		3658002	0					
ANR	3658513	Argument	MyName		3658002	2					
ANR	3658514	Identifier	MyName		3658002	0					
ANR	3658515	ExpressionStatement	exit ( 1 )	273:20:7684:7691	3658002	1	True				
ANR	3658516	CallExpression	exit ( 1 )		3658002	0					
ANR	3658517	Callee	exit		3658002	0					
ANR	3658518	Identifier	exit		3658002	0					
ANR	3658519	ArgumentList	1		3658002	1					
ANR	3658520	Argument	1		3658002	0					
ANR	3658521	PrimaryExpression	1		3658002	0					
ANR	3658522	IfStatement	if ( is_valid_sinful ( * argv ) )		3658002	2					
ANR	3658523	Condition	is_valid_sinful ( * argv )	275:20:7735:7756	3658002	0	True				
ANR	3658524	CallExpression	is_valid_sinful ( * argv )		3658002	0					
ANR	3658525	Callee	is_valid_sinful		3658002	0					
ANR	3658526	Identifier	is_valid_sinful		3658002	0					
ANR	3658527	ArgumentList	* argv		3658002	1					
ANR	3658528	Argument	* argv		3658002	0					
ANR	3658529	UnaryOperationExpression	* argv		3658002	0					
ANR	3658530	UnaryOperator	*		3658002	0					
ANR	3658531	Identifier	argv		3658002	1					
ANR	3658532	CompoundStatement		107:45:2706:2706	3658002	1					
ANR	3658533	ExpressionStatement	scheddAddr = strdup ( * argv )	276:20:7782:7808	3658002	0	True				
ANR	3658534	AssignmentExpression	scheddAddr = strdup ( * argv )		3658002	0		=			
ANR	3658535	Identifier	scheddAddr		3658002	0					
ANR	3658536	CallExpression	strdup ( * argv )		3658002	1					
ANR	3658537	Callee	strdup		3658002	0					
ANR	3658538	Identifier	strdup		3658002	0					
ANR	3658539	ArgumentList	* argv		3658002	1					
ANR	3658540	Argument	* argv		3658002	0					
ANR	3658541	UnaryOperationExpression	* argv		3658002	0					
ANR	3658542	UnaryOperator	*		3658002	0					
ANR	3658543	Identifier	argv		3658002	1					
ANR	3658544	IfStatement	if ( ! scheddAddr )		3658002	1					
ANR	3658545	Condition	! scheddAddr	277:24:7834:7845	3658002	0	True				
ANR	3658546	UnaryOperationExpression	! scheddAddr		3658002	0					
ANR	3658547	UnaryOperator	!		3658002	0					
ANR	3658548	Identifier	scheddAddr		3658002	1					
ANR	3658549	CompoundStatement		109:39:2795:2795	3658002	1					
ANR	3658550	ExpressionStatement	"fprintf ( stderr , ""Out of memory!\\n"" )"	278:24:7875:7912	3658002	0	True				
ANR	3658551	CallExpression	"fprintf ( stderr , ""Out of memory!\\n"" )"		3658002	0					
ANR	3658552	Callee	fprintf		3658002	0					
ANR	3658553	Identifier	fprintf		3658002	0					
ANR	3658554	ArgumentList	stderr		3658002	1					
ANR	3658555	Argument	stderr		3658002	0					
ANR	3658556	Identifier	stderr		3658002	0					
ANR	3658557	Argument	"""Out of memory!\\n"""		3658002	1					
ANR	3658558	PrimaryExpression	"""Out of memory!\\n"""		3658002	0					
ANR	3658559	ExpressionStatement	exit ( 1 )	279:24:7938:7945	3658002	1	True				
ANR	3658560	CallExpression	exit ( 1 )		3658002	0					
ANR	3658561	Callee	exit		3658002	0					
ANR	3658562	Identifier	exit		3658002	0					
ANR	3658563	ArgumentList	1		3658002	1					
ANR	3658564	Argument	1		3658002	0					
ANR	3658565	PrimaryExpression	1		3658002	0					
ANR	3658566	ElseStatement	else		3658002	0					
ANR	3658567	CompoundStatement		113:23:2938:2938	3658002	0					
ANR	3658568	ExpressionStatement	"fprintf ( stderr , ""%s: \\""%s\\"" is not a valid address\\n"" , MyName , * argv )"	282:20:8014:8144	3658002	0	True				
ANR	3658569	CallExpression	"fprintf ( stderr , ""%s: \\""%s\\"" is not a valid address\\n"" , MyName , * argv )"		3658002	0					
ANR	3658570	Callee	fprintf		3658002	0					
ANR	3658571	Identifier	fprintf		3658002	0					
ANR	3658572	ArgumentList	stderr		3658002	1					
ANR	3658573	Argument	stderr		3658002	0					
ANR	3658574	Identifier	stderr		3658002	0					
ANR	3658575	Argument	"""%s: \\""%s\\"" is not a valid address\\n"""		3658002	1					
ANR	3658576	PrimaryExpression	"""%s: \\""%s\\"" is not a valid address\\n"""		3658002	0					
ANR	3658577	Argument	MyName		3658002	2					
ANR	3658578	Identifier	MyName		3658002	0					
ANR	3658579	Argument	* argv		3658002	3					
ANR	3658580	UnaryOperationExpression	* argv		3658002	0					
ANR	3658581	UnaryOperator	*		3658002	0					
ANR	3658582	Identifier	argv		3658002	1					
ANR	3658583	Statement	fprintf	285:20:8166:8172	3658002	1	True				
ANR	3658584	Statement	(	285:27:8173:8173	3658002	2	True				
ANR	3658585	Statement	stderr	285:29:8175:8180	3658002	3	True				
ANR	3658586	Statement	","	285:35:8181:8181	3658002	4	True				
ANR	3658587	Statement	"""Should be of the form """	285:37:8183:8206	3658002	5	True				
ANR	3658588	Statement	"""<ip.address.here:port>\\n"""	286:29:8237:8262	3658002	6	True				
ANR	3658589	Statement	)	286:56:8264:8264	3658002	7	True				
ANR	3658590	ExpressionStatement		286:57:8265:8265	3658002	8	True				
ANR	3658591	ExpressionStatement	"fprintf ( stderr , ""For example: <123.456.789.123:6789>\\n"" )"	287:20:8287:8375	3658002	9	True				
ANR	3658592	CallExpression	"fprintf ( stderr , ""For example: <123.456.789.123:6789>\\n"" )"		3658002	0					
ANR	3658593	Callee	fprintf		3658002	0					
ANR	3658594	Identifier	fprintf		3658002	0					
ANR	3658595	ArgumentList	stderr		3658002	1					
ANR	3658596	Argument	stderr		3658002	0					
ANR	3658597	Identifier	stderr		3658002	0					
ANR	3658598	Argument	"""For example: <123.456.789.123:6789>\\n"""		3658002	1					
ANR	3658599	PrimaryExpression	"""For example: <123.456.789.123:6789>\\n"""		3658002	0					
ANR	3658600	ExpressionStatement	exit ( 1 )	289:20:8397:8406	3658002	10	True				
ANR	3658601	CallExpression	exit ( 1 )		3658002	0					
ANR	3658602	Callee	exit		3658002	0					
ANR	3658603	Identifier	exit		3658002	0					
ANR	3658604	ArgumentList	1		3658002	1					
ANR	3658605	Argument	1		3658002	0					
ANR	3658606	PrimaryExpression	1		3658002	0					
ANR	3658607	ElseStatement	else		3658002	0					
ANR	3658608	IfStatement	"if ( match_prefix ( arg , ""-reason"" ) )"		3658002	0					
ANR	3658609	Condition	"match_prefix ( arg , ""-reason"" )"	291:14:8440:8467	3658002	0	True				
ANR	3658610	CallExpression	"match_prefix ( arg , ""-reason"" )"		3658002	0					
ANR	3658611	Callee	match_prefix		3658002	0					
ANR	3658612	Identifier	match_prefix		3658002	0					
ANR	3658613	ArgumentList	arg		3658002	1					
ANR	3658614	Argument	arg		3658002	0					
ANR	3658615	Identifier	arg		3658002	0					
ANR	3658616	Argument	"""-reason"""		3658002	1					
ANR	3658617	PrimaryExpression	"""-reason"""		3658002	0					
ANR	3658618	CompoundStatement		123:44:3416:3416	3658002	1					
ANR	3658619	ExpressionStatement	argv ++	292:4:8476:8482	3658002	0	True				
ANR	3658620	PostIncDecOperationExpression	argv ++		3658002	0					
ANR	3658621	Identifier	argv		3658002	0					
ANR	3658622	IncDec	++		3658002	1					
ANR	3658623	IfStatement	if ( ! * argv )		3658002	1					
ANR	3658624	Condition	! * argv	293:8:8492:8498	3658002	0	True				
ANR	3658625	UnaryOperationExpression	! * argv		3658002	0					
ANR	3658626	UnaryOperator	!		3658002	0					
ANR	3658627	UnaryOperationExpression	* argv		3658002	1					
ANR	3658628	UnaryOperator	*		3658002	0					
ANR	3658629	Identifier	argv		3658002	1					
ANR	3658630	CompoundStatement		125:18:3448:3448	3658002	1					
ANR	3658631	ExpressionStatement	"fprintf ( stderr , ""%s: -reason requires another argument\\n"" , MyName )"	294:5:8509:8594	3658002	0	True				
ANR	3658632	CallExpression	"fprintf ( stderr , ""%s: -reason requires another argument\\n"" , MyName )"		3658002	0					
ANR	3658633	Callee	fprintf		3658002	0					
ANR	3658634	Identifier	fprintf		3658002	0					
ANR	3658635	ArgumentList	stderr		3658002	1					
ANR	3658636	Argument	stderr		3658002	0					
ANR	3658637	Identifier	stderr		3658002	0					
ANR	3658638	Argument	"""%s: -reason requires another argument\\n"""		3658002	1					
ANR	3658639	PrimaryExpression	"""%s: -reason requires another argument\\n"""		3658002	0					
ANR	3658640	Argument	MyName		3658002	2					
ANR	3658641	Identifier	MyName		3658002	0					
ANR	3658642	ExpressionStatement	exit ( 1 )	297:5:8601:8608	3658002	1	True				
ANR	3658643	CallExpression	exit ( 1 )		3658002	0					
ANR	3658644	Callee	exit		3658002	0					
ANR	3658645	Identifier	exit		3658002	0					
ANR	3658646	ArgumentList	1		3658002	1					
ANR	3658647	Argument	1		3658002	0					
ANR	3658648	PrimaryExpression	1		3658002	0					
ANR	3658649	ExpressionStatement	actionReason = strdup ( * argv )	299:4:8622:8650	3658002	2	True				
ANR	3658650	AssignmentExpression	actionReason = strdup ( * argv )		3658002	0		=			
ANR	3658651	Identifier	actionReason		3658002	0					
ANR	3658652	CallExpression	strdup ( * argv )		3658002	1					
ANR	3658653	Callee	strdup		3658002	0					
ANR	3658654	Identifier	strdup		3658002	0					
ANR	3658655	ArgumentList	* argv		3658002	1					
ANR	3658656	Argument	* argv		3658002	0					
ANR	3658657	UnaryOperationExpression	* argv		3658002	0					
ANR	3658658	UnaryOperator	*		3658002	0					
ANR	3658659	Identifier	argv		3658002	1					
ANR	3658660	IfStatement	if ( ! actionReason )		3658002	3					
ANR	3658661	Condition	! actionReason	300:8:8662:8675	3658002	0	True				
ANR	3658662	UnaryOperationExpression	! actionReason		3658002	0					
ANR	3658663	UnaryOperator	!		3658002	0					
ANR	3658664	Identifier	actionReason		3658002	1					
ANR	3658665	CompoundStatement		132:25:3625:3625	3658002	1					
ANR	3658666	ExpressionStatement	"fprintf ( stderr , ""Out of memory!\\n"" )"	301:5:8686:8723	3658002	0	True				
ANR	3658667	CallExpression	"fprintf ( stderr , ""Out of memory!\\n"" )"		3658002	0					
ANR	3658668	Callee	fprintf		3658002	0					
ANR	3658669	Identifier	fprintf		3658002	0					
ANR	3658670	ArgumentList	stderr		3658002	1					
ANR	3658671	Argument	stderr		3658002	0					
ANR	3658672	Identifier	stderr		3658002	0					
ANR	3658673	Argument	"""Out of memory!\\n"""		3658002	1					
ANR	3658674	PrimaryExpression	"""Out of memory!\\n"""		3658002	0					
ANR	3658675	ExpressionStatement	exit ( 1 )	302:5:8730:8737	3658002	1	True				
ANR	3658676	CallExpression	exit ( 1 )		3658002	0					
ANR	3658677	Callee	exit		3658002	0					
ANR	3658678	Identifier	exit		3658002	0					
ANR	3658679	ArgumentList	1		3658002	1					
ANR	3658680	Argument	1		3658002	0					
ANR	3658681	PrimaryExpression	1		3658002	0					
ANR	3658682	ElseStatement	else		3658002	0					
ANR	3658683	IfStatement	"if ( match_prefix ( arg , ""-subcode"" ) )"		3658002	0					
ANR	3658684	Condition	"match_prefix ( arg , ""-subcode"" )"	304:14:8759:8787	3658002	0	True				
ANR	3658685	CallExpression	"match_prefix ( arg , ""-subcode"" )"		3658002	0					
ANR	3658686	Callee	match_prefix		3658002	0					
ANR	3658687	Identifier	match_prefix		3658002	0					
ANR	3658688	ArgumentList	arg		3658002	1					
ANR	3658689	Argument	arg		3658002	0					
ANR	3658690	Identifier	arg		3658002	0					
ANR	3658691	Argument	"""-subcode"""		3658002	1					
ANR	3658692	PrimaryExpression	"""-subcode"""		3658002	0					
ANR	3658693	CompoundStatement		144:4:3889:3905	3658002	1					
ANR	3658694	ExpressionStatement	argv ++	305:4:8796:8802	3658002	0	True				
ANR	3658695	PostIncDecOperationExpression	argv ++		3658002	0					
ANR	3658696	Identifier	argv		3658002	0					
ANR	3658697	IncDec	++		3658002	1					
ANR	3658698	IfStatement	if ( ! * argv )		3658002	1					
ANR	3658699	Condition	! * argv	306:8:8812:8818	3658002	0	True				
ANR	3658700	UnaryOperationExpression	! * argv		3658002	0					
ANR	3658701	UnaryOperator	!		3658002	0					
ANR	3658702	UnaryOperationExpression	* argv		3658002	1					
ANR	3658703	UnaryOperator	*		3658002	0					
ANR	3658704	Identifier	argv		3658002	1					
ANR	3658705	CompoundStatement		138:18:3768:3768	3658002	1					
ANR	3658706	ExpressionStatement	"fprintf ( stderr , ""%s: -subcode requires another argument\\n"" , MyName )"	307:5:8829:8915	3658002	0	True				
ANR	3658707	CallExpression	"fprintf ( stderr , ""%s: -subcode requires another argument\\n"" , MyName )"		3658002	0					
ANR	3658708	Callee	fprintf		3658002	0					
ANR	3658709	Identifier	fprintf		3658002	0					
ANR	3658710	ArgumentList	stderr		3658002	1					
ANR	3658711	Argument	stderr		3658002	0					
ANR	3658712	Identifier	stderr		3658002	0					
ANR	3658713	Argument	"""%s: -subcode requires another argument\\n"""		3658002	1					
ANR	3658714	PrimaryExpression	"""%s: -subcode requires another argument\\n"""		3658002	0					
ANR	3658715	Argument	MyName		3658002	2					
ANR	3658716	Identifier	MyName		3658002	0					
ANR	3658717	ExpressionStatement	exit ( 1 )	310:5:8922:8929	3658002	1	True				
ANR	3658718	CallExpression	exit ( 1 )		3658002	0					
ANR	3658719	Callee	exit		3658002	0					
ANR	3658720	Identifier	exit		3658002	0					
ANR	3658721	ArgumentList	1		3658002	1					
ANR	3658722	Argument	1		3658002	0					
ANR	3658723	PrimaryExpression	1		3658002	0					
ANR	3658724	IdentifierDeclStatement	char * end = NULL ;	312:4:8943:8959	3658002	2	True				
ANR	3658725	IdentifierDecl	* end = NULL		3658002	0					
ANR	3658726	IdentifierDeclType	char *		3658002	0					
ANR	3658727	Identifier	end		3658002	1					
ANR	3658728	AssignmentExpression	* end = NULL		3658002	2		=			
ANR	3658729	Identifier	NULL		3658002	0					
ANR	3658730	Identifier	NULL		3658002	1					
ANR	3658731	ExpressionStatement	"strtol ( * argv , & end , 10 )"	313:22:8983:9004	3658002	3	True				
ANR	3658732	CallExpression	"strtol ( * argv , & end , 10 )"		3658002	0					
ANR	3658733	Callee	strtol		3658002	0					
ANR	3658734	Identifier	strtol		3658002	0					
ANR	3658735	ArgumentList	* argv		3658002	1					
ANR	3658736	Argument	* argv		3658002	0					
ANR	3658737	UnaryOperationExpression	* argv		3658002	0					
ANR	3658738	UnaryOperator	*		3658002	0					
ANR	3658739	Identifier	argv		3658002	1					
ANR	3658740	Argument	& end		3658002	1					
ANR	3658741	UnaryOperationExpression	& end		3658002	0					
ANR	3658742	UnaryOperator	&		3658002	0					
ANR	3658743	Identifier	end		3658002	1					
ANR	3658744	Argument	10		3658002	2					
ANR	3658745	PrimaryExpression	10		3658002	0					
ANR	3658746	IfStatement	if ( ! end || * end || end == * argv )		3658002	4					
ANR	3658747	Condition	! end || * end || end == * argv	314:8:9014:9039	3658002	0	True				
ANR	3658748	OrExpression	! end || * end || end == * argv		3658002	0		||			
ANR	3658749	UnaryOperationExpression	! end		3658002	0					
ANR	3658750	UnaryOperator	!		3658002	0					
ANR	3658751	Identifier	end		3658002	1					
ANR	3658752	OrExpression	* end || end == * argv		3658002	1		||			
ANR	3658753	UnaryOperationExpression	* end		3658002	0					
ANR	3658754	UnaryOperator	*		3658002	0					
ANR	3658755	Identifier	end		3658002	1					
ANR	3658756	EqualityExpression	end == * argv		3658002	1		==			
ANR	3658757	Identifier	end		3658002	0					
ANR	3658758	UnaryOperationExpression	* argv		3658002	1					
ANR	3658759	UnaryOperator	*		3658002	0					
ANR	3658760	Identifier	argv		3658002	1					
ANR	3658761	CompoundStatement		146:37:3989:3989	3658002	1					
ANR	3658762	ExpressionStatement	"fprintf ( stderr , ""Invalid -subcode %s!\\n"" , * argv )"	315:5:9050:9100	3658002	0	True				
ANR	3658763	CallExpression	"fprintf ( stderr , ""Invalid -subcode %s!\\n"" , * argv )"		3658002	0					
ANR	3658764	Callee	fprintf		3658002	0					
ANR	3658765	Identifier	fprintf		3658002	0					
ANR	3658766	ArgumentList	stderr		3658002	1					
ANR	3658767	Argument	stderr		3658002	0					
ANR	3658768	Identifier	stderr		3658002	0					
ANR	3658769	Argument	"""Invalid -subcode %s!\\n"""		3658002	1					
ANR	3658770	PrimaryExpression	"""Invalid -subcode %s!\\n"""		3658002	0					
ANR	3658771	Argument	* argv		3658002	2					
ANR	3658772	UnaryOperationExpression	* argv		3658002	0					
ANR	3658773	UnaryOperator	*		3658002	0					
ANR	3658774	Identifier	argv		3658002	1					
ANR	3658775	ExpressionStatement	exit ( 1 )	316:5:9107:9114	3658002	1	True				
ANR	3658776	CallExpression	exit ( 1 )		3658002	0					
ANR	3658777	Callee	exit		3658002	0					
ANR	3658778	Identifier	exit		3658002	0					
ANR	3658779	ArgumentList	1		3658002	1					
ANR	3658780	Argument	1		3658002	0					
ANR	3658781	PrimaryExpression	1		3658002	0					
ANR	3658782	ExpressionStatement	holdReasonSubCode = strdup ( * argv )	318:4:9126:9159	3658002	5	True				
ANR	3658783	AssignmentExpression	holdReasonSubCode = strdup ( * argv )		3658002	0		=			
ANR	3658784	Identifier	holdReasonSubCode		3658002	0					
ANR	3658785	CallExpression	strdup ( * argv )		3658002	1					
ANR	3658786	Callee	strdup		3658002	0					
ANR	3658787	Identifier	strdup		3658002	0					
ANR	3658788	ArgumentList	* argv		3658002	1					
ANR	3658789	Argument	* argv		3658002	0					
ANR	3658790	UnaryOperationExpression	* argv		3658002	0					
ANR	3658791	UnaryOperator	*		3658002	0					
ANR	3658792	Identifier	argv		3658002	1					
ANR	3658793	ExpressionStatement	ASSERT ( holdReasonSubCode )	319:4:9165:9192	3658002	6	True				
ANR	3658794	CallExpression	ASSERT ( holdReasonSubCode )		3658002	0					
ANR	3658795	Callee	ASSERT		3658002	0					
ANR	3658796	Identifier	ASSERT		3658002	0					
ANR	3658797	ArgumentList	holdReasonSubCode		3658002	1					
ANR	3658798	Argument	holdReasonSubCode		3658002	0					
ANR	3658799	Identifier	holdReasonSubCode		3658002	0					
ANR	3658800	ElseStatement	else		3658002	0					
ANR	3658801	IfStatement	"if ( match_prefix ( arg , ""-forcex"" ) )"		3658002	0					
ANR	3658802	Condition	"match_prefix ( arg , ""-forcex"" )"	320:23:9217:9244	3658002	0	True				
ANR	3658803	CallExpression	"match_prefix ( arg , ""-forcex"" )"		3658002	0					
ANR	3658804	Callee	match_prefix		3658002	0					
ANR	3658805	Identifier	match_prefix		3658002	0					
ANR	3658806	ArgumentList	arg		3658002	1					
ANR	3658807	Argument	arg		3658002	0					
ANR	3658808	Identifier	arg		3658002	0					
ANR	3658809	Argument	"""-forcex"""		3658002	1					
ANR	3658810	PrimaryExpression	"""-forcex"""		3658002	0					
ANR	3658811	CompoundStatement		152:53:4193:4193	3658002	1					
ANR	3658812	IfStatement	if ( mode == JA_REMOVE_JOBS )		3658002	0					
ANR	3658813	Condition	mode == JA_REMOVE_JOBS	321:8:9257:9278	3658002	0	True				
ANR	3658814	EqualityExpression	mode == JA_REMOVE_JOBS		3658002	0		==			
ANR	3658815	Identifier	mode		3658002	0					
ANR	3658816	Identifier	JA_REMOVE_JOBS		3658002	1					
ANR	3658817	CompoundStatement		153:33:4228:4228	3658002	1					
ANR	3658818	ExpressionStatement	mode = JA_REMOVE_X_JOBS	322:5:9289:9312	3658002	0	True				
ANR	3658819	AssignmentExpression	mode = JA_REMOVE_X_JOBS		3658002	0		=			
ANR	3658820	Identifier	mode		3658002	0					
ANR	3658821	Identifier	JA_REMOVE_X_JOBS		3658002	1					
ANR	3658822	ElseStatement	else		3658002	0					
ANR	3658823	CompoundStatement		155:11:4271:4271	3658002	0					
ANR	3658824	ExpressionStatement	"fprintf ( stderr , ""-forcex is only valid with condor_rm\\n"" )"	324:20:9347:9436	3658002	0	True				
ANR	3658825	CallExpression	"fprintf ( stderr , ""-forcex is only valid with condor_rm\\n"" )"		3658002	0					
ANR	3658826	Callee	fprintf		3658002	0					
ANR	3658827	Identifier	fprintf		3658002	0					
ANR	3658828	ArgumentList	stderr		3658002	1					
ANR	3658829	Argument	stderr		3658002	0					
ANR	3658830	Identifier	stderr		3658002	0					
ANR	3658831	Argument	"""-forcex is only valid with condor_rm\\n"""		3658002	1					
ANR	3658832	PrimaryExpression	"""-forcex is only valid with condor_rm\\n"""		3658002	0					
ANR	3658833	ExpressionStatement	usage ( )	326:5:9443:9450	3658002	1	True				
ANR	3658834	CallExpression	usage ( )		3658002	0					
ANR	3658835	Callee	usage		3658002	0					
ANR	3658836	Identifier	usage		3658002	0					
ANR	3658837	ArgumentList			3658002	1					
ANR	3658838	ElseStatement	else		3658002	0					
ANR	3658839	IfStatement	"if ( match_prefix ( arg , ""-fast"" ) )"		3658002	0					
ANR	3658840	Condition	"match_prefix ( arg , ""-fast"" )"	328:23:9481:9506	3658002	0	True				
ANR	3658841	CallExpression	"match_prefix ( arg , ""-fast"" )"		3658002	0					
ANR	3658842	Callee	match_prefix		3658002	0					
ANR	3658843	Identifier	match_prefix		3658002	0					
ANR	3658844	ArgumentList	arg		3658002	1					
ANR	3658845	Argument	arg		3658002	0					
ANR	3658846	Identifier	arg		3658002	0					
ANR	3658847	Argument	"""-fast"""		3658002	1					
ANR	3658848	PrimaryExpression	"""-fast"""		3658002	0					
ANR	3658849	CompoundStatement		160:51:4455:4455	3658002	1					
ANR	3658850	IfStatement	if ( mode == JA_VACATE_JOBS )		3658002	0					
ANR	3658851	Condition	mode == JA_VACATE_JOBS	329:8:9519:9540	3658002	0	True				
ANR	3658852	EqualityExpression	mode == JA_VACATE_JOBS		3658002	0		==			
ANR	3658853	Identifier	mode		3658002	0					
ANR	3658854	Identifier	JA_VACATE_JOBS		3658002	1					
ANR	3658855	CompoundStatement		161:33:4490:4490	3658002	1					
ANR	3658856	ExpressionStatement	mode = JA_VACATE_FAST_JOBS	330:5:9551:9577	3658002	0	True				
ANR	3658857	AssignmentExpression	mode = JA_VACATE_FAST_JOBS		3658002	0		=			
ANR	3658858	Identifier	mode		3658002	0					
ANR	3658859	Identifier	JA_VACATE_FAST_JOBS		3658002	1					
ANR	3658860	ElseStatement	else		3658002	0					
ANR	3658861	CompoundStatement		163:11:4536:4536	3658002	0					
ANR	3658862	ExpressionStatement	"fprintf ( stderr , ""-fast is only valid with condor_vacate_job\\n"" )"	332:20:9612:9707	3658002	0	True				
ANR	3658863	CallExpression	"fprintf ( stderr , ""-fast is only valid with condor_vacate_job\\n"" )"		3658002	0					
ANR	3658864	Callee	fprintf		3658002	0					
ANR	3658865	Identifier	fprintf		3658002	0					
ANR	3658866	ArgumentList	stderr		3658002	1					
ANR	3658867	Argument	stderr		3658002	0					
ANR	3658868	Identifier	stderr		3658002	0					
ANR	3658869	Argument	"""-fast is only valid with condor_vacate_job\\n"""		3658002	1					
ANR	3658870	PrimaryExpression	"""-fast is only valid with condor_vacate_job\\n"""		3658002	0					
ANR	3658871	ExpressionStatement	usage ( )	334:5:9714:9721	3658002	1	True				
ANR	3658872	CallExpression	usage ( )		3658002	0					
ANR	3658873	Callee	usage		3658002	0					
ANR	3658874	Identifier	usage		3658002	0					
ANR	3658875	ArgumentList			3658002	1					
ANR	3658876	ElseStatement	else		3658002	0					
ANR	3658877	IfStatement	"if ( match_prefix ( arg , ""-name"" ) )"		3658002	0					
ANR	3658878	Condition	"match_prefix ( arg , ""-name"" )"	336:23:9752:9777	3658002	0	True				
ANR	3658879	CallExpression	"match_prefix ( arg , ""-name"" )"		3658002	0					
ANR	3658880	Callee	match_prefix		3658002	0					
ANR	3658881	Identifier	match_prefix		3658002	0					
ANR	3658882	ArgumentList	arg		3658002	1					
ANR	3658883	Argument	arg		3658002	0					
ANR	3658884	Identifier	arg		3658002	0					
ANR	3658885	Argument	"""-name"""		3658002	1					
ANR	3658886	PrimaryExpression	"""-name"""		3658002	0					
ANR	3658887	CompoundStatement		168:51:4726:4726	3658002	1					
ANR	3658888	ExpressionStatement	argv ++	338:4:9845:9851	3658002	0	True				
ANR	3658889	PostIncDecOperationExpression	argv ++		3658002	0					
ANR	3658890	Identifier	argv		3658002	0					
ANR	3658891	IncDec	++		3658002	1					
ANR	3658892	IfStatement	if ( ! * argv )		3658002	1					
ANR	3658893	Condition	! * argv	339:8:9861:9867	3658002	0	True				
ANR	3658894	UnaryOperationExpression	! * argv		3658002	0					
ANR	3658895	UnaryOperator	!		3658002	0					
ANR	3658896	UnaryOperationExpression	* argv		3658002	1					
ANR	3658897	UnaryOperator	*		3658002	0					
ANR	3658898	Identifier	argv		3658002	1					
ANR	3658899	CompoundStatement		171:18:4817:4817	3658002	1					
ANR	3658900	ExpressionStatement	"fprintf ( stderr , ""%s: -name requires another argument\\n"" , MyName )"	340:5:9878:9952	3658002	0	True				
ANR	3658901	CallExpression	"fprintf ( stderr , ""%s: -name requires another argument\\n"" , MyName )"		3658002	0					
ANR	3658902	Callee	fprintf		3658002	0					
ANR	3658903	Identifier	fprintf		3658002	0					
ANR	3658904	ArgumentList	stderr		3658002	1					
ANR	3658905	Argument	stderr		3658002	0					
ANR	3658906	Identifier	stderr		3658002	0					
ANR	3658907	Argument	"""%s: -name requires another argument\\n"""		3658002	1					
ANR	3658908	PrimaryExpression	"""%s: -name requires another argument\\n"""		3658002	0					
ANR	3658909	Argument	MyName		3658002	2					
ANR	3658910	Identifier	MyName		3658002	0					
ANR	3658911	ExpressionStatement	exit ( 1 )	342:5:9959:9966	3658002	1	True				
ANR	3658912	CallExpression	exit ( 1 )		3658002	0					
ANR	3658913	Callee	exit		3658002	0					
ANR	3658914	Identifier	exit		3658002	0					
ANR	3658915	ArgumentList	1		3658002	1					
ANR	3658916	Argument	1		3658002	0					
ANR	3658917	PrimaryExpression	1		3658002	0					
ANR	3658918	IfStatement	if ( ! ( scheddName = get_daemon_name ( * argv ) ) )		3658002	2					
ANR	3658919	Condition	! ( scheddName = get_daemon_name ( * argv ) )	344:8:9986:10023	3658002	0	True				
ANR	3658920	UnaryOperationExpression	! ( scheddName = get_daemon_name ( * argv ) )		3658002	0					
ANR	3658921	UnaryOperator	!		3658002	0					
ANR	3658922	AssignmentExpression	scheddName = get_daemon_name ( * argv )		3658002	1		=			
ANR	3658923	Identifier	scheddName		3658002	0					
ANR	3658924	CallExpression	get_daemon_name ( * argv )		3658002	1					
ANR	3658925	Callee	get_daemon_name		3658002	0					
ANR	3658926	Identifier	get_daemon_name		3658002	0					
ANR	3658927	ArgumentList	* argv		3658002	1					
ANR	3658928	Argument	* argv		3658002	0					
ANR	3658929	UnaryOperationExpression	* argv		3658002	0					
ANR	3658930	UnaryOperator	*		3658002	0					
ANR	3658931	Identifier	argv		3658002	1					
ANR	3658932	CompoundStatement		176:49:4973:4973	3658002	1					
ANR	3658933	ExpressionStatement	"fprintf ( stderr , ""%s: unknown host %s\\n"" , MyName , get_host_part ( * argv ) )"	345:5:10035:10116	3658002	0	True				
ANR	3658934	CallExpression	"fprintf ( stderr , ""%s: unknown host %s\\n"" , MyName , get_host_part ( * argv ) )"		3658002	0					
ANR	3658935	Callee	fprintf		3658002	0					
ANR	3658936	Identifier	fprintf		3658002	0					
ANR	3658937	ArgumentList	stderr		3658002	1					
ANR	3658938	Argument	stderr		3658002	0					
ANR	3658939	Identifier	stderr		3658002	0					
ANR	3658940	Argument	"""%s: unknown host %s\\n"""		3658002	1					
ANR	3658941	PrimaryExpression	"""%s: unknown host %s\\n"""		3658002	0					
ANR	3658942	Argument	MyName		3658002	2					
ANR	3658943	Identifier	MyName		3658002	0					
ANR	3658944	Argument	get_host_part ( * argv )		3658002	3					
ANR	3658945	CallExpression	get_host_part ( * argv )		3658002	0					
ANR	3658946	Callee	get_host_part		3658002	0					
ANR	3658947	Identifier	get_host_part		3658002	0					
ANR	3658948	ArgumentList	* argv		3658002	1					
ANR	3658949	Argument	* argv		3658002	0					
ANR	3658950	UnaryOperationExpression	* argv		3658002	0					
ANR	3658951	UnaryOperator	*		3658002	0					
ANR	3658952	Identifier	argv		3658002	1					
ANR	3658953	ExpressionStatement	exit ( 1 )	347:5:10123:10130	3658002	1	True				
ANR	3658954	CallExpression	exit ( 1 )		3658002	0					
ANR	3658955	Callee	exit		3658002	0					
ANR	3658956	Identifier	exit		3658002	0					
ANR	3658957	ArgumentList	1		3658002	1					
ANR	3658958	Argument	1		3658002	0					
ANR	3658959	PrimaryExpression	1		3658002	0					
ANR	3658960	ElseStatement	else		3658002	0					
ANR	3658961	IfStatement	"if ( match_prefix ( arg , ""-pool"" ) )"		3658002	0					
ANR	3658962	Condition	"match_prefix ( arg , ""-pool"" )"	349:23:10161:10186	3658002	0	True				
ANR	3658963	CallExpression	"match_prefix ( arg , ""-pool"" )"		3658002	0					
ANR	3658964	Callee	match_prefix		3658002	0					
ANR	3658965	Identifier	match_prefix		3658002	0					
ANR	3658966	ArgumentList	arg		3658002	1					
ANR	3658967	Argument	arg		3658002	0					
ANR	3658968	Identifier	arg		3658002	0					
ANR	3658969	Argument	"""-pool"""		3658002	1					
ANR	3658970	PrimaryExpression	"""-pool"""		3658002	0					
ANR	3658971	CompoundStatement		181:51:5135:5135	3658002	1					
ANR	3658972	ExpressionStatement	argv ++	351:4:10253:10259	3658002	0	True				
ANR	3658973	PostIncDecOperationExpression	argv ++		3658002	0					
ANR	3658974	Identifier	argv		3658002	0					
ANR	3658975	IncDec	++		3658002	1					
ANR	3658976	IfStatement	if ( ! * argv )		3658002	1					
ANR	3658977	Condition	! * argv	352:8:10269:10275	3658002	0	True				
ANR	3658978	UnaryOperationExpression	! * argv		3658002	0					
ANR	3658979	UnaryOperator	!		3658002	0					
ANR	3658980	UnaryOperationExpression	* argv		3658002	1					
ANR	3658981	UnaryOperator	*		3658002	0					
ANR	3658982	Identifier	argv		3658002	1					
ANR	3658983	CompoundStatement		184:18:5225:5225	3658002	1					
ANR	3658984	ExpressionStatement	"fprintf ( stderr , ""%s: -pool requires another argument\\n"" , MyName )"	353:5:10286:10360	3658002	0	True				
ANR	3658985	CallExpression	"fprintf ( stderr , ""%s: -pool requires another argument\\n"" , MyName )"		3658002	0					
ANR	3658986	Callee	fprintf		3658002	0					
ANR	3658987	Identifier	fprintf		3658002	0					
ANR	3658988	ArgumentList	stderr		3658002	1					
ANR	3658989	Argument	stderr		3658002	0					
ANR	3658990	Identifier	stderr		3658002	0					
ANR	3658991	Argument	"""%s: -pool requires another argument\\n"""		3658002	1					
ANR	3658992	PrimaryExpression	"""%s: -pool requires another argument\\n"""		3658002	0					
ANR	3658993	Argument	MyName		3658002	2					
ANR	3658994	Identifier	MyName		3658002	0					
ANR	3658995	ExpressionStatement	exit ( 1 )	355:5:10367:10374	3658002	1	True				
ANR	3658996	CallExpression	exit ( 1 )		3658002	0					
ANR	3658997	Callee	exit		3658002	0					
ANR	3658998	Identifier	exit		3658002	0					
ANR	3658999	ArgumentList	1		3658002	1					
ANR	3659000	Argument	1		3658002	0					
ANR	3659001	PrimaryExpression	1		3658002	0					
ANR	3659002	IfStatement	if ( pool )		3658002	2					
ANR	3659003	Condition	pool	357:8:10394:10397	3658002	0	True				
ANR	3659004	Identifier	pool		3658002	0					
ANR	3659005	CompoundStatement		189:15:5347:5347	3658002	1					
ANR	3659006	Statement	delete	358:5:10408:10413	3658002	0	True				
ANR	3659007	ExpressionStatement	pool	358:12:10415:10419	3658002	1	True				
ANR	3659008	Identifier	pool		3658002	0					
ANR	3659009	ExpressionStatement	pool = new DCCollector ( * argv )	360:4:10431:10462	3658002	3	True				
ANR	3659010	AssignmentExpression	pool = new DCCollector ( * argv )		3658002	0		=			
ANR	3659011	Identifier	pool		3658002	0					
ANR	3659012	UnaryOperationExpression	* argv		3658002	1					
ANR	3659013	UnaryOperator	*		3658002	0					
ANR	3659014	Identifier	argv		3658002	1					
ANR	3659015	IfStatement	if ( ! pool -> addr ( ) )		3658002	4					
ANR	3659016	Condition	! pool -> addr ( )	361:8:10472:10485	3658002	0	True				
ANR	3659017	UnaryOperationExpression	! pool -> addr ( )		3658002	0					
ANR	3659018	UnaryOperator	!		3658002	0					
ANR	3659019	CallExpression	pool -> addr ( )		3658002	1					
ANR	3659020	Callee	pool -> addr		3658002	0					
ANR	3659021	PtrMemberAccess	pool -> addr		3658002	0					
ANR	3659022	Identifier	pool		3658002	0					
ANR	3659023	Identifier	addr		3658002	1					
ANR	3659024	ArgumentList			3658002	1					
ANR	3659025	CompoundStatement		193:25:5435:5435	3658002	1					
ANR	3659026	ExpressionStatement	"fprintf ( stderr , ""%s: %s\\n"" , MyName , pool -> error ( ) )"	362:5:10496:10548	3658002	0	True				
ANR	3659027	CallExpression	"fprintf ( stderr , ""%s: %s\\n"" , MyName , pool -> error ( ) )"		3658002	0					
ANR	3659028	Callee	fprintf		3658002	0					
ANR	3659029	Identifier	fprintf		3658002	0					
ANR	3659030	ArgumentList	stderr		3658002	1					
ANR	3659031	Argument	stderr		3658002	0					
ANR	3659032	Identifier	stderr		3658002	0					
ANR	3659033	Argument	"""%s: %s\\n"""		3658002	1					
ANR	3659034	PrimaryExpression	"""%s: %s\\n"""		3658002	0					
ANR	3659035	Argument	MyName		3658002	2					
ANR	3659036	Identifier	MyName		3658002	0					
ANR	3659037	Argument	pool -> error ( )		3658002	3					
ANR	3659038	CallExpression	pool -> error ( )		3658002	0					
ANR	3659039	Callee	pool -> error		3658002	0					
ANR	3659040	PtrMemberAccess	pool -> error		3658002	0					
ANR	3659041	Identifier	pool		3658002	0					
ANR	3659042	Identifier	error		3658002	1					
ANR	3659043	ArgumentList			3658002	1					
ANR	3659044	ExpressionStatement	exit ( 1 )	363:5:10555:10562	3658002	1	True				
ANR	3659045	CallExpression	exit ( 1 )		3658002	0					
ANR	3659046	Callee	exit		3658002	0					
ANR	3659047	Identifier	exit		3658002	0					
ANR	3659048	ArgumentList	1		3658002	1					
ANR	3659049	Argument	1		3658002	0					
ANR	3659050	PrimaryExpression	1		3658002	0					
ANR	3659051	ElseStatement	else		3658002	0					
ANR	3659052	IfStatement	"if ( match_prefix ( arg , ""-version"" ) )"		3658002	0					
ANR	3659053	Condition	"match_prefix ( arg , ""-version"" )"	365:23:10593:10621	3658002	0	True				
ANR	3659054	CallExpression	"match_prefix ( arg , ""-version"" )"		3658002	0					
ANR	3659055	Callee	match_prefix		3658002	0					
ANR	3659056	Identifier	match_prefix		3658002	0					
ANR	3659057	ArgumentList	arg		3658002	1					
ANR	3659058	Argument	arg		3658002	0					
ANR	3659059	Identifier	arg		3658002	0					
ANR	3659060	Argument	"""-version"""		3658002	1					
ANR	3659061	PrimaryExpression	"""-version"""		3658002	0					
ANR	3659062	CompoundStatement		197:54:5570:5570	3658002	1					
ANR	3659063	ExpressionStatement	version ( )	366:4:10630:10639	3658002	0	True				
ANR	3659064	CallExpression	version ( )		3658002	0					
ANR	3659065	Callee	version		3658002	0					
ANR	3659066	Identifier	version		3658002	0					
ANR	3659067	ArgumentList			3658002	1					
ANR	3659068	ElseStatement	else		3658002	0					
ANR	3659069	IfStatement	"if ( match_prefix ( arg , ""-help"" ) )"		3658002	0					
ANR	3659070	Condition	"match_prefix ( arg , ""-help"" )"	367:23:10664:10689	3658002	0	True				
ANR	3659071	CallExpression	"match_prefix ( arg , ""-help"" )"		3658002	0					
ANR	3659072	Callee	match_prefix		3658002	0					
ANR	3659073	Identifier	match_prefix		3658002	0					
ANR	3659074	ArgumentList	arg		3658002	1					
ANR	3659075	Argument	arg		3658002	0					
ANR	3659076	Identifier	arg		3658002	0					
ANR	3659077	Argument	"""-help"""		3658002	1					
ANR	3659078	PrimaryExpression	"""-help"""		3658002	0					
ANR	3659079	CompoundStatement		199:51:5638:5638	3658002	1					
ANR	3659080	ExpressionStatement	usage ( 0 )	368:4:10698:10706	3658002	0	True				
ANR	3659081	CallExpression	usage ( 0 )		3658002	0					
ANR	3659082	Callee	usage		3658002	0					
ANR	3659083	Identifier	usage		3658002	0					
ANR	3659084	ArgumentList	0		3658002	1					
ANR	3659085	Argument	0		3658002	0					
ANR	3659086	PrimaryExpression	0		3658002	0					
ANR	3659087	ElseStatement	else		3658002	0					
ANR	3659088	CompoundStatement		201:19:5673:5673	3658002	0					
ANR	3659089	ExpressionStatement	"fprintf ( stderr , ""Unrecognized option: %s\\n"" , arg )"	370:4:10733:10784	3658002	0	True				
ANR	3659090	CallExpression	"fprintf ( stderr , ""Unrecognized option: %s\\n"" , arg )"		3658002	0					
ANR	3659091	Callee	fprintf		3658002	0					
ANR	3659092	Identifier	fprintf		3658002	0					
ANR	3659093	ArgumentList	stderr		3658002	1					
ANR	3659094	Argument	stderr		3658002	0					
ANR	3659095	Identifier	stderr		3658002	0					
ANR	3659096	Argument	"""Unrecognized option: %s\\n"""		3658002	1					
ANR	3659097	PrimaryExpression	"""Unrecognized option: %s\\n"""		3658002	0					
ANR	3659098	Argument	arg		3658002	2					
ANR	3659099	Identifier	arg		3658002	0					
ANR	3659100	ExpressionStatement	usage ( )	371:4:10791:10798	3658002	1	True				
ANR	3659101	CallExpression	usage ( )		3658002	0					
ANR	3659102	Callee	usage		3658002	0					
ANR	3659103	Identifier	usage		3658002	0					
ANR	3659104	ArgumentList			3658002	1					
ANR	3659105	ElseStatement	else		3658002	0					
ANR	3659106	CompoundStatement		205:9:5760:5760	3658002	0					
ANR	3659107	IfStatement	if ( All )		3658002	0					
ANR	3659108	Condition	All	374:7:10823:10825	3658002	0	True				
ANR	3659109	Identifier	All		3658002	0					
ANR	3659110	CompoundStatement		206:13:5775:5775	3658002	1					
ANR	3659111	ExpressionStatement	usage ( )	377:4:10914:10921	3658002	0	True				
ANR	3659112	CallExpression	usage ( )		3658002	0					
ANR	3659113	Callee	usage		3658002	0					
ANR	3659114	Identifier	usage		3658002	0					
ANR	3659115	ArgumentList			3658002	1					
ANR	3659116	ExpressionStatement	args [ nArgs ] = arg	379:3:10931:10948	3658002	1	True				
ANR	3659117	AssignmentExpression	args [ nArgs ] = arg		3658002	0		=			
ANR	3659118	ArrayIndexing	args [ nArgs ]		3658002	0					
ANR	3659119	Identifier	args		3658002	0					
ANR	3659120	Identifier	nArgs		3658002	1					
ANR	3659121	Identifier	arg		3658002	1					
ANR	3659122	ExpressionStatement	nArgs ++	380:3:10953:10960	3658002	2	True				
ANR	3659123	PostIncDecOperationExpression	nArgs ++		3658002	0					
ANR	3659124	Identifier	nArgs		3658002	0					
ANR	3659125	IncDec	++		3658002	1					
ANR	3659126	ExpressionStatement	UserJobIdArg = true	381:3:10965:10984	3658002	3	True				
ANR	3659127	AssignmentExpression	UserJobIdArg = true		3658002	0		=			
ANR	3659128	Identifier	UserJobIdArg		3658002	0					
ANR	3659129	Identifier	true		3658002	1					
ANR	3659130	IfStatement	if ( ! ( All || nArgs ) )		3658002	19					
ANR	3659131	Condition	! ( All || nArgs )	385:5:10999:11014	3658002	0	True				
ANR	3659132	UnaryOperationExpression	! ( All || nArgs )		3658002	0					
ANR	3659133	UnaryOperator	!		3658002	0					
ANR	3659134	OrExpression	All || nArgs		3658002	1		||			
ANR	3659135	Identifier	All		3658002	0					
ANR	3659136	Identifier	nArgs		3658002	1					
ANR	3659137	CompoundStatement		217:24:5964:5964	3658002	1					
ANR	3659138	ExpressionStatement	"fprintf ( stderr , ""You did not specify any jobs\\n"" )"	387:2:11067:11118	3658002	0	True				
ANR	3659139	CallExpression	"fprintf ( stderr , ""You did not specify any jobs\\n"" )"		3658002	0					
ANR	3659140	Callee	fprintf		3658002	0					
ANR	3659141	Identifier	fprintf		3658002	0					
ANR	3659142	ArgumentList	stderr		3658002	1					
ANR	3659143	Argument	stderr		3658002	0					
ANR	3659144	Identifier	stderr		3658002	0					
ANR	3659145	Argument	"""You did not specify any jobs\\n"""		3658002	1					
ANR	3659146	PrimaryExpression	"""You did not specify any jobs\\n"""		3658002	0					
ANR	3659147	ExpressionStatement	usage ( )	388:2:11123:11130	3658002	1	True				
ANR	3659148	CallExpression	usage ( )		3658002	0					
ANR	3659149	Callee	usage		3658002	0					
ANR	3659150	Identifier	usage		3658002	0					
ANR	3659151	ArgumentList			3658002	1					
ANR	3659152	IfStatement	if ( ConstraintArg && UserJobIdArg )		3658002	20					
ANR	3659153	Condition	ConstraintArg && UserJobIdArg	391:6:11142:11170	3658002	0	True				
ANR	3659154	AndExpression	ConstraintArg && UserJobIdArg		3658002	0		&&			
ANR	3659155	Identifier	ConstraintArg		3658002	0					
ANR	3659156	Identifier	UserJobIdArg		3658002	1					
ANR	3659157	CompoundStatement		223:38:6120:6120	3658002	1					
ANR	3659158	ExpressionStatement	"fprintf ( stderr , ""You can't use both -constraint and usernames or job ids\\n"" )"	392:2:11178:11256	3658002	0	True				
ANR	3659159	CallExpression	"fprintf ( stderr , ""You can't use both -constraint and usernames or job ids\\n"" )"		3658002	0					
ANR	3659160	Callee	fprintf		3658002	0					
ANR	3659161	Identifier	fprintf		3658002	0					
ANR	3659162	ArgumentList	stderr		3658002	1					
ANR	3659163	Argument	stderr		3658002	0					
ANR	3659164	Identifier	stderr		3658002	0					
ANR	3659165	Argument	"""You can't use both -constraint and usernames or job ids\\n"""		3658002	1					
ANR	3659166	PrimaryExpression	"""You can't use both -constraint and usernames or job ids\\n"""		3658002	0					
ANR	3659167	ExpressionStatement	usage ( )	393:2:11260:11267	3658002	1	True				
ANR	3659168	CallExpression	usage ( )		3658002	0					
ANR	3659169	Callee	usage		3658002	0					
ANR	3659170	Identifier	usage		3658002	0					
ANR	3659171	ArgumentList			3658002	1					
ANR	3659172	IfStatement	if ( actionReason == NULL )		3658002	21					
ANR	3659173	Condition	actionReason == NULL	397:5:11338:11357	3658002	0	True				
ANR	3659174	EqualityExpression	actionReason == NULL		3658002	0		==			
ANR	3659175	Identifier	actionReason		3658002	0					
ANR	3659176	Identifier	NULL		3658002	1					
ANR	3659177	CompoundStatement		229:28:6307:6307	3658002	1					
ANR	3659178	SwitchStatement	switch ( mode )		3658002	0					
ANR	3659179	Condition	mode	398:10:11373:11376	3658002	0	True				
ANR	3659180	Identifier	mode		3658002	0					
ANR	3659181	CompoundStatement		230:17:6326:6326	3658002	1					
ANR	3659182	Label	case JA_RELEASE_JOBS :	399:2:11384:11404	3658002	0	True				
ANR	3659183	Identifier	JA_RELEASE_JOBS		3658002	0					
ANR	3659184	ExpressionStatement	"actionReason = strdup ( ""via condor_release"" )"	400:3:11409:11452	3658002	1	True				
ANR	3659185	AssignmentExpression	"actionReason = strdup ( ""via condor_release"" )"		3658002	0		=			
ANR	3659186	Identifier	actionReason		3658002	0					
ANR	3659187	CallExpression	"strdup ( ""via condor_release"" )"		3658002	1					
ANR	3659188	Callee	strdup		3658002	0					
ANR	3659189	Identifier	strdup		3658002	0					
ANR	3659190	ArgumentList	"""via condor_release"""		3658002	1					
ANR	3659191	Argument	"""via condor_release"""		3658002	0					
ANR	3659192	PrimaryExpression	"""via condor_release"""		3658002	0					
ANR	3659193	BreakStatement	break ;	401:3:11457:11462	3658002	2	True				
ANR	3659194	Label	case JA_REMOVE_X_JOBS :	402:2:11466:11487	3658002	3	True				
ANR	3659195	Identifier	JA_REMOVE_X_JOBS		3658002	0					
ANR	3659196	ExpressionStatement	"actionReason = strdup ( ""via condor_rm -forcex"" )"	403:3:11492:11538	3658002	4	True				
ANR	3659197	AssignmentExpression	"actionReason = strdup ( ""via condor_rm -forcex"" )"		3658002	0		=			
ANR	3659198	Identifier	actionReason		3658002	0					
ANR	3659199	CallExpression	"strdup ( ""via condor_rm -forcex"" )"		3658002	1					
ANR	3659200	Callee	strdup		3658002	0					
ANR	3659201	Identifier	strdup		3658002	0					
ANR	3659202	ArgumentList	"""via condor_rm -forcex"""		3658002	1					
ANR	3659203	Argument	"""via condor_rm -forcex"""		3658002	0					
ANR	3659204	PrimaryExpression	"""via condor_rm -forcex"""		3658002	0					
ANR	3659205	BreakStatement	break ;	404:3:11543:11548	3658002	5	True				
ANR	3659206	Label	case JA_REMOVE_JOBS :	405:2:11552:11571	3658002	6	True				
ANR	3659207	Identifier	JA_REMOVE_JOBS		3658002	0					
ANR	3659208	ExpressionStatement	"actionReason = strdup ( ""via condor_rm"" )"	406:3:11576:11614	3658002	7	True				
ANR	3659209	AssignmentExpression	"actionReason = strdup ( ""via condor_rm"" )"		3658002	0		=			
ANR	3659210	Identifier	actionReason		3658002	0					
ANR	3659211	CallExpression	"strdup ( ""via condor_rm"" )"		3658002	1					
ANR	3659212	Callee	strdup		3658002	0					
ANR	3659213	Identifier	strdup		3658002	0					
ANR	3659214	ArgumentList	"""via condor_rm"""		3658002	1					
ANR	3659215	Argument	"""via condor_rm"""		3658002	0					
ANR	3659216	PrimaryExpression	"""via condor_rm"""		3658002	0					
ANR	3659217	BreakStatement	break ;	407:3:11619:11624	3658002	8	True				
ANR	3659218	Label	case JA_HOLD_JOBS :	408:2:11628:11645	3658002	9	True				
ANR	3659219	Identifier	JA_HOLD_JOBS		3658002	0					
ANR	3659220	ExpressionStatement	"actionReason = strdup ( ""via condor_hold"" )"	409:3:11650:11690	3658002	10	True				
ANR	3659221	AssignmentExpression	"actionReason = strdup ( ""via condor_hold"" )"		3658002	0		=			
ANR	3659222	Identifier	actionReason		3658002	0					
ANR	3659223	CallExpression	"strdup ( ""via condor_hold"" )"		3658002	1					
ANR	3659224	Callee	strdup		3658002	0					
ANR	3659225	Identifier	strdup		3658002	0					
ANR	3659226	ArgumentList	"""via condor_hold"""		3658002	1					
ANR	3659227	Argument	"""via condor_hold"""		3658002	0					
ANR	3659228	PrimaryExpression	"""via condor_hold"""		3658002	0					
ANR	3659229	BreakStatement	break ;	410:3:11695:11700	3658002	11	True				
ANR	3659230	Label	case JA_SUSPEND_JOBS :	411:2:11704:11724	3658002	12	True				
ANR	3659231	Identifier	JA_SUSPEND_JOBS		3658002	0					
ANR	3659232	ExpressionStatement	"actionReason = strdup ( ""via condor_suspend"" )"	412:3:11729:11772	3658002	13	True				
ANR	3659233	AssignmentExpression	"actionReason = strdup ( ""via condor_suspend"" )"		3658002	0		=			
ANR	3659234	Identifier	actionReason		3658002	0					
ANR	3659235	CallExpression	"strdup ( ""via condor_suspend"" )"		3658002	1					
ANR	3659236	Callee	strdup		3658002	0					
ANR	3659237	Identifier	strdup		3658002	0					
ANR	3659238	ArgumentList	"""via condor_suspend"""		3658002	1					
ANR	3659239	Argument	"""via condor_suspend"""		3658002	0					
ANR	3659240	PrimaryExpression	"""via condor_suspend"""		3658002	0					
ANR	3659241	BreakStatement	break ;	413:3:11777:11782	3658002	14	True				
ANR	3659242	Label	case JA_CONTINUE_JOBS :	414:2:11786:11807	3658002	15	True				
ANR	3659243	Identifier	JA_CONTINUE_JOBS		3658002	0					
ANR	3659244	ExpressionStatement	"actionReason = strdup ( ""via condor_continue"" )"	415:3:11812:11856	3658002	16	True				
ANR	3659245	AssignmentExpression	"actionReason = strdup ( ""via condor_continue"" )"		3658002	0		=			
ANR	3659246	Identifier	actionReason		3658002	0					
ANR	3659247	CallExpression	"strdup ( ""via condor_continue"" )"		3658002	1					
ANR	3659248	Callee	strdup		3658002	0					
ANR	3659249	Identifier	strdup		3658002	0					
ANR	3659250	ArgumentList	"""via condor_continue"""		3658002	1					
ANR	3659251	Argument	"""via condor_continue"""		3658002	0					
ANR	3659252	PrimaryExpression	"""via condor_continue"""		3658002	0					
ANR	3659253	BreakStatement	break ;	416:3:11861:11866	3658002	17	True				
ANR	3659254	Label	default :	417:2:11870:11877	3658002	18	True				
ANR	3659255	Identifier	default		3658002	0					
ANR	3659256	ExpressionStatement	actionReason = NULL	418:3:11882:11901	3658002	19	True				
ANR	3659257	AssignmentExpression	actionReason = NULL		3658002	0		=			
ANR	3659258	Identifier	actionReason		3658002	0					
ANR	3659259	Identifier	NULL		3658002	1					
ANR	3659260	IfStatement	if ( ! scheddAddr )		3658002	22					
ANR	3659261	Condition	! scheddAddr	424:5:12001:12012	3658002	0	True				
ANR	3659262	UnaryOperationExpression	! scheddAddr		3658002	0					
ANR	3659263	UnaryOperator	!		3658002	0					
ANR	3659264	Identifier	scheddAddr		3658002	1					
ANR	3659265	CompoundStatement		256:20:6962:6962	3658002	1					
ANR	3659266	ExpressionStatement	"schedd = new DCSchedd ( scheddName , pool ? pool -> addr ( ) : NULL )"	427:2:12124:12187	3658002	0	True				
ANR	3659267	AssignmentExpression	"schedd = new DCSchedd ( scheddName , pool ? pool -> addr ( ) : NULL )"		3658002	0		=			
ANR	3659268	Identifier	schedd		3658002	0					
ANR	3659269	Expression	"scheddName , pool ? pool -> addr ( ) : NULL"		3658002	1					
ANR	3659270	Identifier	scheddName		3658002	0					
ANR	3659271	ConditionalExpression	pool ? pool -> addr ( ) : NULL		3658002	1					
ANR	3659272	Condition	pool		3658002	0					
ANR	3659273	Identifier	pool		3658002	0					
ANR	3659274	CallExpression	pool -> addr ( )		3658002	1					
ANR	3659275	Callee	pool -> addr		3658002	0					
ANR	3659276	PtrMemberAccess	pool -> addr		3658002	0					
ANR	3659277	Identifier	pool		3658002	0					
ANR	3659278	Identifier	addr		3658002	1					
ANR	3659279	ArgumentList			3658002	1					
ANR	3659280	Identifier	NULL		3658002	2					
ANR	3659281	ElseStatement	else		3658002	0					
ANR	3659282	CompoundStatement		260:8:7143:7143	3658002	0					
ANR	3659283	ExpressionStatement	schedd = new DCSchedd ( scheddAddr )	429:2:12201:12236	3658002	0	True				
ANR	3659284	AssignmentExpression	schedd = new DCSchedd ( scheddAddr )		3658002	0		=			
ANR	3659285	Identifier	schedd		3658002	0					
ANR	3659286	Identifier	scheddAddr		3658002	1					
ANR	3659287	IfStatement	if ( ! schedd -> locate ( ) )		3658002	23					
ANR	3659288	Condition	! schedd -> locate ( )	431:5:12246:12263	3658002	0	True				
ANR	3659289	UnaryOperationExpression	! schedd -> locate ( )		3658002	0					
ANR	3659290	UnaryOperator	!		3658002	0					
ANR	3659291	CallExpression	schedd -> locate ( )		3658002	1					
ANR	3659292	Callee	schedd -> locate		3658002	0					
ANR	3659293	PtrMemberAccess	schedd -> locate		3658002	0					
ANR	3659294	Identifier	schedd		3658002	0					
ANR	3659295	Identifier	locate		3658002	1					
ANR	3659296	ArgumentList			3658002	1					
ANR	3659297	CompoundStatement		263:26:7213:7213	3658002	1					
ANR	3659298	ExpressionStatement	"fprintf ( stderr , ""%s: %s\\n"" , MyName , schedd -> error ( ) )"	432:2:12271:12325	3658002	0	True				
ANR	3659299	CallExpression	"fprintf ( stderr , ""%s: %s\\n"" , MyName , schedd -> error ( ) )"		3658002	0					
ANR	3659300	Callee	fprintf		3658002	0					
ANR	3659301	Identifier	fprintf		3658002	0					
ANR	3659302	ArgumentList	stderr		3658002	1					
ANR	3659303	Argument	stderr		3658002	0					
ANR	3659304	Identifier	stderr		3658002	0					
ANR	3659305	Argument	"""%s: %s\\n"""		3658002	1					
ANR	3659306	PrimaryExpression	"""%s: %s\\n"""		3658002	0					
ANR	3659307	Argument	MyName		3658002	2					
ANR	3659308	Identifier	MyName		3658002	0					
ANR	3659309	Argument	schedd -> error ( )		3658002	3					
ANR	3659310	CallExpression	schedd -> error ( )		3658002	0					
ANR	3659311	Callee	schedd -> error		3658002	0					
ANR	3659312	PtrMemberAccess	schedd -> error		3658002	0					
ANR	3659313	Identifier	schedd		3658002	0					
ANR	3659314	Identifier	error		3658002	1					
ANR	3659315	ArgumentList			3658002	1					
ANR	3659316	ExpressionStatement	exit ( 1 )	433:2:12330:12339	3658002	1	True				
ANR	3659317	CallExpression	exit ( 1 )		3658002	0					
ANR	3659318	Callee	exit		3658002	0					
ANR	3659319	Identifier	exit		3658002	0					
ANR	3659320	ArgumentList	1		3658002	1					
ANR	3659321	Argument	1		3658002	0					
ANR	3659322	PrimaryExpression	1		3658002	0					
ANR	3659323	IfStatement	if ( mode == JA_REMOVE_X_JOBS )		3658002	24					
ANR	3659324	Condition	mode == JA_REMOVE_X_JOBS	441:4:12587:12610	3658002	0	True				
ANR	3659325	EqualityExpression	mode == JA_REMOVE_X_JOBS		3658002	0		==			
ANR	3659326	Identifier	mode		3658002	0					
ANR	3659327	Identifier	JA_REMOVE_X_JOBS		3658002	1					
ANR	3659328	CompoundStatement		273:30:7559:7559	3658002	1					
ANR	3659329	IfStatement	if ( mayUserForceRm ( ) == false )		3658002	0					
ANR	3659330	Condition	mayUserForceRm ( ) == false	442:6:12621:12645	3658002	0	True				
ANR	3659331	EqualityExpression	mayUserForceRm ( ) == false		3658002	0		==			
ANR	3659332	CallExpression	mayUserForceRm ( )		3658002	0					
ANR	3659333	Callee	mayUserForceRm		3658002	0					
ANR	3659334	Identifier	mayUserForceRm		3658002	0					
ANR	3659335	ArgumentList			3658002	1					
ANR	3659336	Identifier	false		3658002	1					
ANR	3659337	CompoundStatement		274:33:7594:7594	3658002	1					
ANR	3659338	ExpressionStatement	"fprintf ( stderr , ""Remove aborted. condor_rm -forcex has been disabled by the administrator.\\n"" )"	443:3:12653:12749	3658002	0	True				
ANR	3659339	CallExpression	"fprintf ( stderr , ""Remove aborted. condor_rm -forcex has been disabled by the administrator.\\n"" )"		3658002	0					
ANR	3659340	Callee	fprintf		3658002	0					
ANR	3659341	Identifier	fprintf		3658002	0					
ANR	3659342	ArgumentList	stderr		3658002	1					
ANR	3659343	Argument	stderr		3658002	0					
ANR	3659344	Identifier	stderr		3658002	0					
ANR	3659345	Argument	"""Remove aborted. condor_rm -forcex has been disabled by the administrator.\\n"""		3658002	1					
ANR	3659346	PrimaryExpression	"""Remove aborted. condor_rm -forcex has been disabled by the administrator.\\n"""		3658002	0					
ANR	3659347	ExpressionStatement	exit ( 1 )	444:3:12754:12763	3658002	1	True				
ANR	3659348	CallExpression	exit ( 1 )		3658002	0					
ANR	3659349	Callee	exit		3658002	0					
ANR	3659350	Identifier	exit		3658002	0					
ANR	3659351	ArgumentList	1		3658002	1					
ANR	3659352	Argument	1		3658002	0					
ANR	3659353	PrimaryExpression	1		3658002	0					
ANR	3659354	IfStatement	if ( All )		3658002	25					
ANR	3659355	Condition	All	449:5:12819:12821	3658002	0	True				
ANR	3659356	Identifier	All		3658002	0					
ANR	3659357	CompoundStatement		281:11:7771:7771	3658002	1					
ANR	3659358	ExpressionStatement	handleAll ( )	450:2:12829:12840	3658002	0	True				
ANR	3659359	CallExpression	handleAll ( )		3658002	0					
ANR	3659360	Callee	handleAll		3658002	0					
ANR	3659361	Identifier	handleAll		3658002	0					
ANR	3659362	ArgumentList			3658002	1					
ANR	3659363	ElseStatement	else		3658002	0					
ANR	3659364	CompoundStatement		283:8:7796:7796	3658002	0					
ANR	3659365	ForStatement	for ( i = 0 ; i < nArgs ; i ++ )		3658002	0					
ANR	3659366	ForInit	i = 0 ;	452:6:12858:12863	3658002	0	True				
ANR	3659367	AssignmentExpression	i = 0		3658002	0		=			
ANR	3659368	Identifier	i		3658002	0					
ANR	3659369	PrimaryExpression	0		3658002	1					
ANR	3659370	Condition	i < nArgs	452:13:12865:12873	3658002	1	True				
ANR	3659371	RelationalExpression	i < nArgs		3658002	0		<			
ANR	3659372	Identifier	i		3658002	0					
ANR	3659373	Identifier	nArgs		3658002	1					
ANR	3659374	PostIncDecOperationExpression	i ++	452:24:12876:12878	3658002	2	True				
ANR	3659375	Identifier	i		3658002	0					
ANR	3659376	IncDec	++		3658002	1					
ANR	3659377	CompoundStatement		284:29:7827:7827	3658002	3					
ANR	3659378	IfStatement	"if ( match_prefix ( args [ i ] , ""-constraint"" ) )"		3658002	0					
ANR	3659379	Condition	"match_prefix ( args [ i ] , ""-constraint"" )"	453:7:12890:12927	3658002	0	True				
ANR	3659380	CallExpression	"match_prefix ( args [ i ] , ""-constraint"" )"		3658002	0					
ANR	3659381	Callee	match_prefix		3658002	0					
ANR	3659382	Identifier	match_prefix		3658002	0					
ANR	3659383	ArgumentList	args [ i ]		3658002	1					
ANR	3659384	Argument	args [ i ]		3658002	0					
ANR	3659385	ArrayIndexing	args [ i ]		3658002	0					
ANR	3659386	Identifier	args		3658002	0					
ANR	3659387	Identifier	i		3658002	1					
ANR	3659388	Argument	"""-constraint"""		3658002	1					
ANR	3659389	PrimaryExpression	"""-constraint"""		3658002	0					
ANR	3659390	CompoundStatement		285:48:7877:7877	3658002	1					
ANR	3659391	ExpressionStatement	i ++	454:4:12937:12940	3658002	0	True				
ANR	3659392	PostIncDecOperationExpression	i ++		3658002	0					
ANR	3659393	Identifier	i		3658002	0					
ANR	3659394	IncDec	++		3658002	1					
ANR	3659395	ExpressionStatement	addConstraint ( args [ i ] )	455:4:12946:12970	3658002	1	True				
ANR	3659396	CallExpression	addConstraint ( args [ i ] )		3658002	0					
ANR	3659397	Callee	addConstraint		3658002	0					
ANR	3659398	Identifier	addConstraint		3658002	0					
ANR	3659399	ArgumentList	args [ i ]		3658002	1					
ANR	3659400	Argument	args [ i ]		3658002	0					
ANR	3659401	ArrayIndexing	args [ i ]		3658002	0					
ANR	3659402	Identifier	args		3658002	0					
ANR	3659403	Identifier	i		3658002	1					
ANR	3659404	ElseStatement	else		3658002	0					
ANR	3659405	CompoundStatement		288:10:7928:7928	3658002	0					
ANR	3659406	ExpressionStatement	procArg ( args [ i ] )	457:4:12988:13004	3658002	0	True				
ANR	3659407	CallExpression	procArg ( args [ i ] )		3658002	0					
ANR	3659408	Callee	procArg		3658002	0					
ANR	3659409	Identifier	procArg		3658002	0					
ANR	3659410	ArgumentList	args [ i ]		3658002	1					
ANR	3659411	Argument	args [ i ]		3658002	0					
ANR	3659412	ArrayIndexing	args [ i ]		3658002	0					
ANR	3659413	Identifier	args		3658002	0					
ANR	3659414	Identifier	i		3658002	1					
ANR	3659415	ExpressionStatement	handleConstraints ( )	463:1:13067:13086	3658002	26	True				
ANR	3659416	CallExpression	handleConstraints ( )		3658002	0					
ANR	3659417	Callee	handleConstraints		3658002	0					
ANR	3659418	Identifier	handleConstraints		3658002	0					
ANR	3659419	ArgumentList			3658002	1					
ANR	3659420	IfStatement	if ( job_ids )		3658002	27					
ANR	3659421	Condition	job_ids	467:5:13178:13184	3658002	0	True				
ANR	3659422	Identifier	job_ids		3658002	0					
ANR	3659423	CompoundStatement		301:2:8162:8217	3658002	1					
ANR	3659424	IdentifierDeclStatement	CondorError errstack ;	468:2:13192:13212	3658002	0	True				
ANR	3659425	IdentifierDecl	errstack		3658002	0					
ANR	3659426	IdentifierDeclType	CondorError		3658002	0					
ANR	3659427	Identifier	errstack		3658002	1					
ANR	3659428	IdentifierDeclStatement	"ClassAd * result_ad = doWorkByList ( job_ids , & errstack ) ;"	469:2:13216:13271	3658002	1	True				
ANR	3659429	IdentifierDecl	"* result_ad = doWorkByList ( job_ids , & errstack )"		3658002	0					
ANR	3659430	IdentifierDeclType	ClassAd *		3658002	0					
ANR	3659431	Identifier	result_ad		3658002	1					
ANR	3659432	AssignmentExpression	"* result_ad = doWorkByList ( job_ids , & errstack )"		3658002	2		=			
ANR	3659433	Identifier	result_ad		3658002	0					
ANR	3659434	CallExpression	"doWorkByList ( job_ids , & errstack )"		3658002	1					
ANR	3659435	Callee	doWorkByList		3658002	0					
ANR	3659436	Identifier	doWorkByList		3658002	0					
ANR	3659437	ArgumentList	job_ids		3658002	1					
ANR	3659438	Argument	job_ids		3658002	0					
ANR	3659439	Identifier	job_ids		3658002	0					
ANR	3659440	Argument	& errstack		3658002	1					
ANR	3659441	UnaryOperationExpression	& errstack		3658002	0					
ANR	3659442	UnaryOperator	&		3658002	0					
ANR	3659443	Identifier	errstack		3658002	1					
ANR	3659444	IfStatement	if ( had_error )		3658002	2					
ANR	3659445	Condition	had_error	470:6:13279:13287	3658002	0	True				
ANR	3659446	Identifier	had_error		3658002	0					
ANR	3659447	CompoundStatement		302:17:8236:8236	3658002	1					
ANR	3659448	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"	471:3:13295:13348	3658002	0	True				
ANR	3659449	CallExpression	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"		3658002	0					
ANR	3659450	Callee	fprintf		3658002	0					
ANR	3659451	Identifier	fprintf		3658002	0					
ANR	3659452	ArgumentList	stderr		3658002	1					
ANR	3659453	Argument	stderr		3658002	0					
ANR	3659454	Identifier	stderr		3658002	0					
ANR	3659455	Argument	"""%s\\n"""		3658002	1					
ANR	3659456	PrimaryExpression	"""%s\\n"""		3658002	0					
ANR	3659457	Argument	errstack . getFullText ( true )		3658002	2					
ANR	3659458	CallExpression	errstack . getFullText ( true )		3658002	0					
ANR	3659459	Callee	errstack . getFullText		3658002	0					
ANR	3659460	MemberAccess	errstack . getFullText		3658002	0					
ANR	3659461	Identifier	errstack		3658002	0					
ANR	3659462	Identifier	getFullText		3658002	1					
ANR	3659463	ArgumentList	true		3658002	1					
ANR	3659464	Argument	true		3658002	0					
ANR	3659465	Identifier	true		3658002	0					
ANR	3659466	ExpressionStatement	"printNewMessages ( result_ad , job_ids )"	473:2:13356:13394	3658002	3	True				
ANR	3659467	CallExpression	"printNewMessages ( result_ad , job_ids )"		3658002	0					
ANR	3659468	Callee	printNewMessages		3658002	0					
ANR	3659469	Identifier	printNewMessages		3658002	0					
ANR	3659470	ArgumentList	result_ad		3658002	1					
ANR	3659471	Argument	result_ad		3658002	0					
ANR	3659472	Identifier	result_ad		3658002	0					
ANR	3659473	Argument	job_ids		3658002	1					
ANR	3659474	Identifier	job_ids		3658002	0					
ANR	3659475	Statement	delete	474:2:13398:13403	3658002	4	True				
ANR	3659476	ExpressionStatement	result_ad	474:8:13404:13417	3658002	5	True				
ANR	3659477	Identifier	result_ad		3658002	0					
ANR	3659478	IfStatement	if ( mode == JA_RELEASE_JOBS && had_error == false )		3658002	28					
ANR	3659479	Condition	mode == JA_RELEASE_JOBS && had_error == false	479:6:13512:13556	3658002	0	True				
ANR	3659480	AndExpression	mode == JA_RELEASE_JOBS && had_error == false		3658002	0		&&			
ANR	3659481	EqualityExpression	mode == JA_RELEASE_JOBS		3658002	0		==			
ANR	3659482	Identifier	mode		3658002	0					
ANR	3659483	Identifier	JA_RELEASE_JOBS		3658002	1					
ANR	3659484	EqualityExpression	had_error == false		3658002	1		==			
ANR	3659485	Identifier	had_error		3658002	0					
ANR	3659486	Identifier	false		3658002	1					
ANR	3659487	CompoundStatement		313:2:8554:8574	3658002	1					
ANR	3659488	IdentifierDeclStatement	"Daemon my_schedd ( DT_SCHEDD , NULL , NULL ) ;"	480:2:13564:13604	3658002	0	True				
ANR	3659489	IdentifierDecl	"my_schedd ( DT_SCHEDD , NULL , NULL )"		3658002	0					
ANR	3659490	IdentifierDeclType	Daemon		3658002	0					
ANR	3659491	Identifier	my_schedd		3658002	1					
ANR	3659492	Expression	"DT_SCHEDD , NULL , NULL"		3658002	2					
ANR	3659493	Identifier	DT_SCHEDD		3658002	0					
ANR	3659494	Expression	"NULL , NULL"		3658002	1					
ANR	3659495	Identifier	NULL		3658002	0					
ANR	3659496	Identifier	NULL		3658002	1					
ANR	3659497	IdentifierDeclStatement	CondorError errstack ;	481:2:13608:13628	3658002	1	True				
ANR	3659498	IdentifierDecl	errstack		3658002	0					
ANR	3659499	IdentifierDeclType	CondorError		3658002	0					
ANR	3659500	Identifier	errstack		3658002	1					
ANR	3659501	IfStatement	"if ( ! my_schedd . sendCommand ( RESCHEDULE , Stream :: safe_sock , 0 , & errstack ) )"		3658002	2					
ANR	3659502	Condition	"! my_schedd . sendCommand ( RESCHEDULE , Stream :: safe_sock , 0 , & errstack )"	482:6:13636:13702	3658002	0	True				
ANR	3659503	UnaryOperationExpression	"! my_schedd . sendCommand ( RESCHEDULE , Stream :: safe_sock , 0 , & errstack )"		3658002	0					
ANR	3659504	UnaryOperator	!		3658002	0					
ANR	3659505	CallExpression	"my_schedd . sendCommand ( RESCHEDULE , Stream :: safe_sock , 0 , & errstack )"		3658002	1					
ANR	3659506	Callee	my_schedd . sendCommand		3658002	0					
ANR	3659507	MemberAccess	my_schedd . sendCommand		3658002	0					
ANR	3659508	Identifier	my_schedd		3658002	0					
ANR	3659509	Identifier	sendCommand		3658002	1					
ANR	3659510	ArgumentList	RESCHEDULE		3658002	1					
ANR	3659511	Argument	RESCHEDULE		3658002	0					
ANR	3659512	Identifier	RESCHEDULE		3658002	0					
ANR	3659513	Argument	Stream :: safe_sock		3658002	1					
ANR	3659514	Identifier	Stream :: safe_sock		3658002	0					
ANR	3659515	Argument	0		3658002	2					
ANR	3659516	PrimaryExpression	0		3658002	0					
ANR	3659517	Argument	& errstack		3658002	3					
ANR	3659518	UnaryOperationExpression	& errstack		3658002	0					
ANR	3659519	UnaryOperator	&		3658002	0					
ANR	3659520	Identifier	errstack		3658002	1					
ANR	3659521	CompoundStatement		314:75:8651:8651	3658002	1					
ANR	3659522	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"	483:3:13710:13763	3658002	0	True				
ANR	3659523	CallExpression	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"		3658002	0					
ANR	3659524	Callee	fprintf		3658002	0					
ANR	3659525	Identifier	fprintf		3658002	0					
ANR	3659526	ArgumentList	stderr		3658002	1					
ANR	3659527	Argument	stderr		3658002	0					
ANR	3659528	Identifier	stderr		3658002	0					
ANR	3659529	Argument	"""%s\\n"""		3658002	1					
ANR	3659530	PrimaryExpression	"""%s\\n"""		3658002	0					
ANR	3659531	Argument	errstack . getFullText ( true )		3658002	2					
ANR	3659532	CallExpression	errstack . getFullText ( true )		3658002	0					
ANR	3659533	Callee	errstack . getFullText		3658002	0					
ANR	3659534	MemberAccess	errstack . getFullText		3658002	0					
ANR	3659535	Identifier	errstack		3658002	0					
ANR	3659536	Identifier	getFullText		3658002	1					
ANR	3659537	ArgumentList	true		3658002	1					
ANR	3659538	Argument	true		3658002	0					
ANR	3659539	Identifier	true		3658002	0					
ANR	3659540	ReturnStatement	return had_error ;	487:1:13774:13790	3658002	29	True				
ANR	3659541	Identifier	had_error		3658002	0					
ANR	3659542	ReturnType	int		3658002	1					
ANR	3659543	Identifier	main		3658002	2					
ANR	3659544	ParameterList	"int argc , char * argv [ ]"		3658002	3					
ANR	3659545	Parameter	int argc	168:6:5028:5035	3658002	0	True				
ANR	3659546	ParameterType	int		3658002	0					
ANR	3659547	Identifier	argc		3658002	1					
ANR	3659548	Parameter	char * argv [ ]	168:16:5038:5049	3658002	1	True				
ANR	3659549	ParameterType	char * [ ]		3658002	0					
ANR	3659550	Identifier	argv		3658002	1					
ANR	3659551	CFGEntryNode	ENTRY		3658002		True				
ANR	3659552	CFGExitNode	EXIT		3658002		True				
ANR	3659553	Symbol	All		3658002						
ANR	3659554	Symbol	my_schedd . sendCommand		3658002						
ANR	3659555	Symbol	Stream :: safe_sock		3658002						
ANR	3659556	Symbol	mayUserForceRm		3658002						
ANR	3659557	Symbol	strchr		3658002						
ANR	3659558	Symbol	p_funcs		3658002						
ANR	3659559	Symbol	* argv		3658002						
ANR	3659560	Symbol	holdReasonSubCode		3658002						
ANR	3659561	Symbol	UserJobIdArg		3658002						
ANR	3659562	Symbol	result_ad		3658002						
ANR	3659563	Symbol	* args		3658002						
ANR	3659564	Symbol	pool -> addr		3658002						
ANR	3659565	Symbol	mode		3658002						
ANR	3659566	Symbol	ConstraintArg		3658002						
ANR	3659567	Symbol	strlen		3658002						
ANR	3659568	Symbol	myDistro		3658002						
ANR	3659569	Symbol	scheddAddr		3658002						
ANR	3659570	Symbol	& errstack		3658002						
ANR	3659571	Symbol	JA_VACATE_FAST_JOBS		3658002						
ANR	3659572	Symbol	cmd_str		3658002						
ANR	3659573	Symbol	SIGPIPE		3658002						
ANR	3659574	Symbol	pool -> error		3658002						
ANR	3659575	Symbol	JA_RELEASE_JOBS		3658002						
ANR	3659576	Symbol	NULL		3658002						
ANR	3659577	Symbol	get_param_functions		3658002						
ANR	3659578	Symbol	pool		3658002						
ANR	3659579	Symbol	SIG_IGN		3658002						
ANR	3659580	Symbol	stderr		3658002						
ANR	3659581	Symbol	has_constraint		3658002						
ANR	3659582	Symbol	errstack		3658002						
ANR	3659583	Symbol	scheddName		3658002						
ANR	3659584	Symbol	true		3658002						
ANR	3659585	Symbol	* end		3658002						
ANR	3659586	Symbol	had_error		3658002						
ANR	3659587	Symbol	* arg		3658002						
ANR	3659588	Symbol	MyName		3658002						
ANR	3659589	Symbol	match_prefix		3658002						
ANR	3659590	Symbol	nArgs		3658002						
ANR	3659591	Symbol	& end		3658002						
ANR	3659592	Symbol	strncasecmp		3658002						
ANR	3659593	Symbol	JA_REMOVE_JOBS		3658002						
ANR	3659594	Symbol	is_valid_sinful		3658002						
ANR	3659595	Symbol	actionReason		3658002						
ANR	3659596	Symbol	schedd -> locate		3658002						
ANR	3659597	Symbol	argv		3658002						
ANR	3659598	Symbol	RESCHEDULE		3658002						
ANR	3659599	Symbol	JA_REMOVE_X_JOBS		3658002						
ANR	3659600	Symbol	arg		3658002						
ANR	3659601	Symbol	JA_CONTINUE_JOBS		3658002						
ANR	3659602	Symbol	end		3658002						
ANR	3659603	Symbol	* schedd		3658002						
ANR	3659604	Symbol	argc		3658002						
ANR	3659605	Symbol	malloc		3658002						
ANR	3659606	Symbol	my_schedd		3658002						
ANR	3659607	Symbol	JA_HOLD_JOBS		3658002						
ANR	3659608	Symbol	Termlog		3658002						
ANR	3659609	Symbol	job_ids		3658002						
ANR	3659610	Symbol	DIR_DELIM_CHAR		3658002						
ANR	3659611	Symbol	false		3658002						
ANR	3659612	Symbol	i		3658002						
ANR	3659613	Symbol	get_daemon_name		3658002						
ANR	3659614	Symbol	get_host_part		3658002						
ANR	3659615	Symbol	schedd		3658002						
ANR	3659616	Symbol	doWorkByList		3658002						
ANR	3659617	Symbol	args		3658002						
ANR	3659618	Symbol	JA_VACATE_JOBS		3658002						
ANR	3659619	Symbol	* pool		3658002						
ANR	3659620	Symbol	* i		3658002						
ANR	3659621	Symbol	JA_SUSPEND_JOBS		3658002						
ANR	3659622	Symbol	strrchr		3658002						
ANR	3659623	Symbol	errstack . getFullText		3658002						
ANR	3659624	Symbol	* nArgs		3658002						
ANR	3659625	Symbol	strdup		3658002						
ANR	3659626	Symbol	schedd -> error		3658002						
ANR	3659627	Symbol	MATCH		3658002						
ANR	3659628	Function	doWorkByConstraint	496:0:14015:15696							
ANR	3659629	FunctionDef	"doWorkByConstraint (const char * constraint , CondorError * errstack)"		3659628	0					
ANR	3659630	CompoundStatement		498:0:14089:15696	3659628	0					
ANR	3659631	IdentifierDeclStatement	ClassAd * ad = 0 ;	499:1:14092:14107	3659628	0	True				
ANR	3659632	IdentifierDecl	* ad = 0		3659628	0					
ANR	3659633	IdentifierDeclType	ClassAd *		3659628	0					
ANR	3659634	Identifier	ad		3659628	1					
ANR	3659635	AssignmentExpression	* ad = 0		3659628	2		=			
ANR	3659636	Identifier	ad		3659628	0					
ANR	3659637	PrimaryExpression	0		3659628	1					
ANR	3659638	IdentifierDeclStatement	int total_jobs = - 1 ;	500:1:14110:14129	3659628	1	True				
ANR	3659639	IdentifierDecl	total_jobs = - 1		3659628	0					
ANR	3659640	IdentifierDeclType	int		3659628	0					
ANR	3659641	Identifier	total_jobs		3659628	1					
ANR	3659642	AssignmentExpression	total_jobs = - 1		3659628	2		=			
ANR	3659643	Identifier	total_jobs		3659628	0					
ANR	3659644	UnaryOperationExpression	- 1		3659628	1					
ANR	3659645	UnaryOperator	-		3659628	0					
ANR	3659646	PrimaryExpression	1		3659628	1					
ANR	3659647	IdentifierDeclStatement	bool rval = true ;	501:1:14132:14148	3659628	2	True				
ANR	3659648	IdentifierDecl	rval = true		3659628	0					
ANR	3659649	IdentifierDeclType	bool		3659628	0					
ANR	3659650	Identifier	rval		3659628	1					
ANR	3659651	AssignmentExpression	rval = true		3659628	2		=			
ANR	3659652	Identifier	true		3659628	0					
ANR	3659653	Identifier	true		3659628	1					
ANR	3659654	SwitchStatement	switch ( mode )		3659628	3					
ANR	3659655	Condition	mode	502:9:14159:14162	3659628	0	True				
ANR	3659656	Identifier	mode		3659628	0					
ANR	3659657	CompoundStatement		5:16:76:76	3659628	1					
ANR	3659658	Label	case JA_RELEASE_JOBS :	503:1:14169:14189	3659628	0	True				
ANR	3659659	Identifier	JA_RELEASE_JOBS		3659628	0					
ANR	3659660	ExpressionStatement	"ad = schedd -> releaseJobs ( constraint , actionReason , errstack )"	504:2:14193:14255	3659628	1	True				
ANR	3659661	AssignmentExpression	"ad = schedd -> releaseJobs ( constraint , actionReason , errstack )"		3659628	0		=			
ANR	3659662	Identifier	ad		3659628	0					
ANR	3659663	CallExpression	"schedd -> releaseJobs ( constraint , actionReason , errstack )"		3659628	1					
ANR	3659664	Callee	schedd -> releaseJobs		3659628	0					
ANR	3659665	PtrMemberAccess	schedd -> releaseJobs		3659628	0					
ANR	3659666	Identifier	schedd		3659628	0					
ANR	3659667	Identifier	releaseJobs		3659628	1					
ANR	3659668	ArgumentList	constraint		3659628	1					
ANR	3659669	Argument	constraint		3659628	0					
ANR	3659670	Identifier	constraint		3659628	0					
ANR	3659671	Argument	actionReason		3659628	1					
ANR	3659672	Identifier	actionReason		3659628	0					
ANR	3659673	Argument	errstack		3659628	2					
ANR	3659674	Identifier	errstack		3659628	0					
ANR	3659675	BreakStatement	break ;	505:2:14259:14264	3659628	2	True				
ANR	3659676	Label	case JA_REMOVE_X_JOBS :	506:1:14267:14288	3659628	3	True				
ANR	3659677	Identifier	JA_REMOVE_X_JOBS		3659628	0					
ANR	3659678	ExpressionStatement	"ad = schedd -> removeXJobs ( constraint , actionReason , errstack )"	507:2:14292:14354	3659628	4	True				
ANR	3659679	AssignmentExpression	"ad = schedd -> removeXJobs ( constraint , actionReason , errstack )"		3659628	0		=			
ANR	3659680	Identifier	ad		3659628	0					
ANR	3659681	CallExpression	"schedd -> removeXJobs ( constraint , actionReason , errstack )"		3659628	1					
ANR	3659682	Callee	schedd -> removeXJobs		3659628	0					
ANR	3659683	PtrMemberAccess	schedd -> removeXJobs		3659628	0					
ANR	3659684	Identifier	schedd		3659628	0					
ANR	3659685	Identifier	removeXJobs		3659628	1					
ANR	3659686	ArgumentList	constraint		3659628	1					
ANR	3659687	Argument	constraint		3659628	0					
ANR	3659688	Identifier	constraint		3659628	0					
ANR	3659689	Argument	actionReason		3659628	1					
ANR	3659690	Identifier	actionReason		3659628	0					
ANR	3659691	Argument	errstack		3659628	2					
ANR	3659692	Identifier	errstack		3659628	0					
ANR	3659693	BreakStatement	break ;	508:2:14358:14363	3659628	5	True				
ANR	3659694	Label	case JA_VACATE_JOBS :	509:1:14366:14385	3659628	6	True				
ANR	3659695	Identifier	JA_VACATE_JOBS		3659628	0					
ANR	3659696	ExpressionStatement	"ad = schedd -> vacateJobs ( constraint , VACATE_GRACEFUL , errstack )"	510:2:14389:14453	3659628	7	True				
ANR	3659697	AssignmentExpression	"ad = schedd -> vacateJobs ( constraint , VACATE_GRACEFUL , errstack )"		3659628	0		=			
ANR	3659698	Identifier	ad		3659628	0					
ANR	3659699	CallExpression	"schedd -> vacateJobs ( constraint , VACATE_GRACEFUL , errstack )"		3659628	1					
ANR	3659700	Callee	schedd -> vacateJobs		3659628	0					
ANR	3659701	PtrMemberAccess	schedd -> vacateJobs		3659628	0					
ANR	3659702	Identifier	schedd		3659628	0					
ANR	3659703	Identifier	vacateJobs		3659628	1					
ANR	3659704	ArgumentList	constraint		3659628	1					
ANR	3659705	Argument	constraint		3659628	0					
ANR	3659706	Identifier	constraint		3659628	0					
ANR	3659707	Argument	VACATE_GRACEFUL		3659628	1					
ANR	3659708	Identifier	VACATE_GRACEFUL		3659628	0					
ANR	3659709	Argument	errstack		3659628	2					
ANR	3659710	Identifier	errstack		3659628	0					
ANR	3659711	BreakStatement	break ;	511:2:14457:14462	3659628	8	True				
ANR	3659712	Label	case JA_VACATE_FAST_JOBS :	512:1:14465:14489	3659628	9	True				
ANR	3659713	Identifier	JA_VACATE_FAST_JOBS		3659628	0					
ANR	3659714	ExpressionStatement	"ad = schedd -> vacateJobs ( constraint , VACATE_FAST , errstack )"	513:2:14493:14553	3659628	10	True				
ANR	3659715	AssignmentExpression	"ad = schedd -> vacateJobs ( constraint , VACATE_FAST , errstack )"		3659628	0		=			
ANR	3659716	Identifier	ad		3659628	0					
ANR	3659717	CallExpression	"schedd -> vacateJobs ( constraint , VACATE_FAST , errstack )"		3659628	1					
ANR	3659718	Callee	schedd -> vacateJobs		3659628	0					
ANR	3659719	PtrMemberAccess	schedd -> vacateJobs		3659628	0					
ANR	3659720	Identifier	schedd		3659628	0					
ANR	3659721	Identifier	vacateJobs		3659628	1					
ANR	3659722	ArgumentList	constraint		3659628	1					
ANR	3659723	Argument	constraint		3659628	0					
ANR	3659724	Identifier	constraint		3659628	0					
ANR	3659725	Argument	VACATE_FAST		3659628	1					
ANR	3659726	Identifier	VACATE_FAST		3659628	0					
ANR	3659727	Argument	errstack		3659628	2					
ANR	3659728	Identifier	errstack		3659628	0					
ANR	3659729	BreakStatement	break ;	514:2:14557:14562	3659628	11	True				
ANR	3659730	Label	case JA_REMOVE_JOBS :	515:1:14565:14584	3659628	12	True				
ANR	3659731	Identifier	JA_REMOVE_JOBS		3659628	0					
ANR	3659732	ExpressionStatement	"ad = schedd -> removeJobs ( constraint , actionReason , errstack )"	516:2:14588:14649	3659628	13	True				
ANR	3659733	AssignmentExpression	"ad = schedd -> removeJobs ( constraint , actionReason , errstack )"		3659628	0		=			
ANR	3659734	Identifier	ad		3659628	0					
ANR	3659735	CallExpression	"schedd -> removeJobs ( constraint , actionReason , errstack )"		3659628	1					
ANR	3659736	Callee	schedd -> removeJobs		3659628	0					
ANR	3659737	PtrMemberAccess	schedd -> removeJobs		3659628	0					
ANR	3659738	Identifier	schedd		3659628	0					
ANR	3659739	Identifier	removeJobs		3659628	1					
ANR	3659740	ArgumentList	constraint		3659628	1					
ANR	3659741	Argument	constraint		3659628	0					
ANR	3659742	Identifier	constraint		3659628	0					
ANR	3659743	Argument	actionReason		3659628	1					
ANR	3659744	Identifier	actionReason		3659628	0					
ANR	3659745	Argument	errstack		3659628	2					
ANR	3659746	Identifier	errstack		3659628	0					
ANR	3659747	BreakStatement	break ;	517:2:14653:14658	3659628	14	True				
ANR	3659748	Label	case JA_HOLD_JOBS :	518:1:14661:14678	3659628	15	True				
ANR	3659749	Identifier	JA_HOLD_JOBS		3659628	0					
ANR	3659750	ExpressionStatement	"ad = schedd -> holdJobs ( constraint , actionReason , holdReasonSubCode , errstack )"	519:2:14682:14760	3659628	16	True				
ANR	3659751	AssignmentExpression	"ad = schedd -> holdJobs ( constraint , actionReason , holdReasonSubCode , errstack )"		3659628	0		=			
ANR	3659752	Identifier	ad		3659628	0					
ANR	3659753	CallExpression	"schedd -> holdJobs ( constraint , actionReason , holdReasonSubCode , errstack )"		3659628	1					
ANR	3659754	Callee	schedd -> holdJobs		3659628	0					
ANR	3659755	PtrMemberAccess	schedd -> holdJobs		3659628	0					
ANR	3659756	Identifier	schedd		3659628	0					
ANR	3659757	Identifier	holdJobs		3659628	1					
ANR	3659758	ArgumentList	constraint		3659628	1					
ANR	3659759	Argument	constraint		3659628	0					
ANR	3659760	Identifier	constraint		3659628	0					
ANR	3659761	Argument	actionReason		3659628	1					
ANR	3659762	Identifier	actionReason		3659628	0					
ANR	3659763	Argument	holdReasonSubCode		3659628	2					
ANR	3659764	Identifier	holdReasonSubCode		3659628	0					
ANR	3659765	Argument	errstack		3659628	3					
ANR	3659766	Identifier	errstack		3659628	0					
ANR	3659767	BreakStatement	break ;	520:2:14764:14769	3659628	17	True				
ANR	3659768	Label	case JA_SUSPEND_JOBS :	521:1:14772:14792	3659628	18	True				
ANR	3659769	Identifier	JA_SUSPEND_JOBS		3659628	0					
ANR	3659770	ExpressionStatement	"ad = schedd -> suspendJobs ( constraint , actionReason , errstack )"	522:2:14796:14858	3659628	19	True				
ANR	3659771	AssignmentExpression	"ad = schedd -> suspendJobs ( constraint , actionReason , errstack )"		3659628	0		=			
ANR	3659772	Identifier	ad		3659628	0					
ANR	3659773	CallExpression	"schedd -> suspendJobs ( constraint , actionReason , errstack )"		3659628	1					
ANR	3659774	Callee	schedd -> suspendJobs		3659628	0					
ANR	3659775	PtrMemberAccess	schedd -> suspendJobs		3659628	0					
ANR	3659776	Identifier	schedd		3659628	0					
ANR	3659777	Identifier	suspendJobs		3659628	1					
ANR	3659778	ArgumentList	constraint		3659628	1					
ANR	3659779	Argument	constraint		3659628	0					
ANR	3659780	Identifier	constraint		3659628	0					
ANR	3659781	Argument	actionReason		3659628	1					
ANR	3659782	Identifier	actionReason		3659628	0					
ANR	3659783	Argument	errstack		3659628	2					
ANR	3659784	Identifier	errstack		3659628	0					
ANR	3659785	BreakStatement	break ;	523:2:14862:14867	3659628	20	True				
ANR	3659786	Label	case JA_CONTINUE_JOBS :	524:1:14870:14891	3659628	21	True				
ANR	3659787	Identifier	JA_CONTINUE_JOBS		3659628	0					
ANR	3659788	ExpressionStatement	"ad = schedd -> continueJobs ( constraint , actionReason , errstack )"	525:2:14895:14958	3659628	22	True				
ANR	3659789	AssignmentExpression	"ad = schedd -> continueJobs ( constraint , actionReason , errstack )"		3659628	0		=			
ANR	3659790	Identifier	ad		3659628	0					
ANR	3659791	CallExpression	"schedd -> continueJobs ( constraint , actionReason , errstack )"		3659628	1					
ANR	3659792	Callee	schedd -> continueJobs		3659628	0					
ANR	3659793	PtrMemberAccess	schedd -> continueJobs		3659628	0					
ANR	3659794	Identifier	schedd		3659628	0					
ANR	3659795	Identifier	continueJobs		3659628	1					
ANR	3659796	ArgumentList	constraint		3659628	1					
ANR	3659797	Argument	constraint		3659628	0					
ANR	3659798	Identifier	constraint		3659628	0					
ANR	3659799	Argument	actionReason		3659628	1					
ANR	3659800	Identifier	actionReason		3659628	0					
ANR	3659801	Argument	errstack		3659628	2					
ANR	3659802	Identifier	errstack		3659628	0					
ANR	3659803	BreakStatement	break ;	526:2:14962:14967	3659628	23	True				
ANR	3659804	Label	default :	527:1:14970:14977	3659628	24	True				
ANR	3659805	Identifier	default		3659628	0					
ANR	3659806	ExpressionStatement	"EXCEPT ( ""impossible: unknown mode in doWorkByConstraint"" )"	528:2:14981:15039	3659628	25	True				
ANR	3659807	CallExpression	"EXCEPT ( ""impossible: unknown mode in doWorkByConstraint"" )"		3659628	0					
ANR	3659808	Callee	EXCEPT		3659628	0					
ANR	3659809	Identifier	EXCEPT		3659628	0					
ANR	3659810	ArgumentList	"""impossible: unknown mode in doWorkByConstraint"""		3659628	1					
ANR	3659811	Argument	"""impossible: unknown mode in doWorkByConstraint"""		3659628	0					
ANR	3659812	PrimaryExpression	"""impossible: unknown mode in doWorkByConstraint"""		3659628	0					
ANR	3659813	IfStatement	if ( ! ad )		3659628	4					
ANR	3659814	Condition	! ad	530:5:15049:15052	3659628	0	True				
ANR	3659815	UnaryOperationExpression	! ad		3659628	0					
ANR	3659816	UnaryOperator	!		3659628	0					
ANR	3659817	Identifier	ad		3659628	1					
ANR	3659818	CompoundStatement		33:12:966:966	3659628	1					
ANR	3659819	ExpressionStatement	had_error = true	531:2:15060:15076	3659628	0	True				
ANR	3659820	AssignmentExpression	had_error = true		3659628	0		=			
ANR	3659821	Identifier	had_error		3659628	0					
ANR	3659822	Identifier	true		3659628	1					
ANR	3659823	ExpressionStatement	rval = false	532:2:15080:15092	3659628	1	True				
ANR	3659824	AssignmentExpression	rval = false		3659628	0		=			
ANR	3659825	Identifier	rval		3659628	0					
ANR	3659826	Identifier	false		3659628	1					
ANR	3659827	ElseStatement	else		3659628	0					
ANR	3659828	CompoundStatement		37:2:1016:1034	3659628	0					
ANR	3659829	IdentifierDeclStatement	int result = FALSE ;	534:2:15106:15124	3659628	0	True				
ANR	3659830	IdentifierDecl	result = FALSE		3659628	0					
ANR	3659831	IdentifierDeclType	int		3659628	0					
ANR	3659832	Identifier	result		3659628	1					
ANR	3659833	AssignmentExpression	result = FALSE		3659628	2		=			
ANR	3659834	Identifier	FALSE		3659628	0					
ANR	3659835	Identifier	FALSE		3659628	1					
ANR	3659836	IfStatement	"if ( ! ad -> LookupInteger ( ATTR_ACTION_RESULT , result ) )"		3659628	1					
ANR	3659837	Condition	"! ad -> LookupInteger ( ATTR_ACTION_RESULT , result )"	535:6:15132:15177	3659628	0	True				
ANR	3659838	UnaryOperationExpression	"! ad -> LookupInteger ( ATTR_ACTION_RESULT , result )"		3659628	0					
ANR	3659839	UnaryOperator	!		3659628	0					
ANR	3659840	CallExpression	"ad -> LookupInteger ( ATTR_ACTION_RESULT , result )"		3659628	1					
ANR	3659841	Callee	ad -> LookupInteger		3659628	0					
ANR	3659842	PtrMemberAccess	ad -> LookupInteger		3659628	0					
ANR	3659843	Identifier	ad		3659628	0					
ANR	3659844	Identifier	LookupInteger		3659628	1					
ANR	3659845	ArgumentList	ATTR_ACTION_RESULT		3659628	1					
ANR	3659846	Argument	ATTR_ACTION_RESULT		3659628	0					
ANR	3659847	Identifier	ATTR_ACTION_RESULT		3659628	0					
ANR	3659848	Argument	result		3659628	1					
ANR	3659849	Identifier	result		3659628	0					
ANR	3659850	CompoundStatement		38:55:1091:1091	3659628	1					
ANR	3659851	ExpressionStatement	had_error = true	536:3:15186:15202	3659628	0	True				
ANR	3659852	AssignmentExpression	had_error = true		3659628	0		=			
ANR	3659853	Identifier	had_error		3659628	0					
ANR	3659854	Identifier	true		3659628	1					
ANR	3659855	ExpressionStatement	rval = false	537:3:15207:15219	3659628	1	True				
ANR	3659856	AssignmentExpression	rval = false		3659628	0		=			
ANR	3659857	Identifier	rval		3659628	0					
ANR	3659858	Identifier	false		3659628	1					
ANR	3659859	ElseStatement	else		3659628	0					
ANR	3659860	IfStatement	if ( ! result )		3659628	0					
ANR	3659861	Condition	! result	539:11:15236:15242	3659628	0	True				
ANR	3659862	UnaryOperationExpression	! result		3659628	0					
ANR	3659863	UnaryOperator	!		3659628	0					
ANR	3659864	Identifier	result		3659628	1					
ANR	3659865	CompoundStatement		42:21:1156:1156	3659628	1					
ANR	3659866	IfStatement	"if ( ! ad -> LookupInteger ( ATTR_TOTAL_JOB_ADS , total_jobs ) || total_jobs > 0 )"		3659628	0					
ANR	3659867	Condition	"! ad -> LookupInteger ( ATTR_TOTAL_JOB_ADS , total_jobs ) || total_jobs > 0"	543:14:15390:15457	3659628	0	True				
ANR	3659868	OrExpression	"! ad -> LookupInteger ( ATTR_TOTAL_JOB_ADS , total_jobs ) || total_jobs > 0"		3659628	0		||			
ANR	3659869	UnaryOperationExpression	"! ad -> LookupInteger ( ATTR_TOTAL_JOB_ADS , total_jobs )"		3659628	0					
ANR	3659870	UnaryOperator	!		3659628	0					
ANR	3659871	CallExpression	"ad -> LookupInteger ( ATTR_TOTAL_JOB_ADS , total_jobs )"		3659628	1					
ANR	3659872	Callee	ad -> LookupInteger		3659628	0					
ANR	3659873	PtrMemberAccess	ad -> LookupInteger		3659628	0					
ANR	3659874	Identifier	ad		3659628	0					
ANR	3659875	Identifier	LookupInteger		3659628	1					
ANR	3659876	ArgumentList	ATTR_TOTAL_JOB_ADS		3659628	1					
ANR	3659877	Argument	ATTR_TOTAL_JOB_ADS		3659628	0					
ANR	3659878	Identifier	ATTR_TOTAL_JOB_ADS		3659628	0					
ANR	3659879	Argument	total_jobs		3659628	1					
ANR	3659880	Identifier	total_jobs		3659628	0					
ANR	3659881	RelationalExpression	total_jobs > 0		3659628	1		>			
ANR	3659882	Identifier	total_jobs		3659628	0					
ANR	3659883	PrimaryExpression	0		3659628	1					
ANR	3659884	CompoundStatement		46:85:1371:1371	3659628	1					
ANR	3659885	ExpressionStatement	had_error = true	544:4:15467:15483	3659628	0	True				
ANR	3659886	AssignmentExpression	had_error = true		3659628	0		=			
ANR	3659887	Identifier	had_error		3659628	0					
ANR	3659888	Identifier	true		3659628	1					
ANR	3659889	ElseStatement	else		3659628	0					
ANR	3659890	CompoundStatement		48:10:1405:1405	3659628	0					
ANR	3659891	ExpressionStatement	"errstack -> push ( ""condor_rm"" , 0 , ""There are no jobs in the queue"" )"	548:4:15587:15651	3659628	0	True				
ANR	3659892	CallExpression	"errstack -> push ( ""condor_rm"" , 0 , ""There are no jobs in the queue"" )"		3659628	0					
ANR	3659893	Callee	errstack -> push		3659628	0					
ANR	3659894	PtrMemberAccess	errstack -> push		3659628	0					
ANR	3659895	Identifier	errstack		3659628	0					
ANR	3659896	Identifier	push		3659628	1					
ANR	3659897	ArgumentList	"""condor_rm"""		3659628	1					
ANR	3659898	Argument	"""condor_rm"""		3659628	0					
ANR	3659899	PrimaryExpression	"""condor_rm"""		3659628	0					
ANR	3659900	Argument	0		3659628	1					
ANR	3659901	PrimaryExpression	0		3659628	0					
ANR	3659902	Argument	"""There are no jobs in the queue"""		3659628	2					
ANR	3659903	PrimaryExpression	"""There are no jobs in the queue"""		3659628	0					
ANR	3659904	ExpressionStatement	rval = false	550:3:15661:15673	3659628	1	True				
ANR	3659905	AssignmentExpression	rval = false		3659628	0		=			
ANR	3659906	Identifier	rval		3659628	0					
ANR	3659907	Identifier	false		3659628	1					
ANR	3659908	ReturnStatement	return rval ;	553:1:15683:15694	3659628	5	True				
ANR	3659909	Identifier	rval		3659628	0					
ANR	3659910	ReturnType	bool		3659628	1					
ANR	3659911	Identifier	doWorkByConstraint		3659628	2					
ANR	3659912	ParameterList	"const char * constraint , CondorError * errstack"		3659628	3					
ANR	3659913	Parameter	const char * constraint	497:20:14040:14061	3659628	0	True				
ANR	3659914	ParameterType	const char *		3659628	0					
ANR	3659915	Identifier	constraint		3659628	1					
ANR	3659916	Parameter	CondorError * errstack	497:44:14064:14085	3659628	1	True				
ANR	3659917	ParameterType	CondorError *		3659628	0					
ANR	3659918	Identifier	errstack		3659628	1					
ANR	3659919	CFGEntryNode	ENTRY		3659628		True				
ANR	3659920	CFGExitNode	EXIT		3659628		True				
ANR	3659921	Symbol	ATTR_TOTAL_JOB_ADS		3659628						
ANR	3659922	Symbol	total_jobs		3659628						
ANR	3659923	Symbol	schedd -> removeXJobs		3659628						
ANR	3659924	Symbol	schedd -> vacateJobs		3659628						
ANR	3659925	Symbol	schedd -> suspendJobs		3659628						
ANR	3659926	Symbol	actionReason		3659628						
ANR	3659927	Symbol	* ad		3659628						
ANR	3659928	Symbol	holdReasonSubCode		3659628						
ANR	3659929	Symbol	mode		3659628						
ANR	3659930	Symbol	result		3659628						
ANR	3659931	Symbol	schedd -> removeJobs		3659628						
ANR	3659932	Symbol	rval		3659628						
ANR	3659933	Symbol	* schedd		3659628						
ANR	3659934	Symbol	ad		3659628						
ANR	3659935	Symbol	schedd -> continueJobs		3659628						
ANR	3659936	Symbol	false		3659628						
ANR	3659937	Symbol	schedd -> holdJobs		3659628						
ANR	3659938	Symbol	schedd		3659628						
ANR	3659939	Symbol	errstack		3659628						
ANR	3659940	Symbol	schedd -> releaseJobs		3659628						
ANR	3659941	Symbol	VACATE_FAST		3659628						
ANR	3659942	Symbol	true		3659628						
ANR	3659943	Symbol	constraint		3659628						
ANR	3659944	Symbol	FALSE		3659628						
ANR	3659945	Symbol	ad -> LookupInteger		3659628						
ANR	3659946	Symbol	had_error		3659628						
ANR	3659947	Symbol	ATTR_ACTION_RESULT		3659628						
ANR	3659948	Symbol	VACATE_GRACEFUL		3659628						
ANR	3659949	Function	doWorkByList	557:0:15700:16814							
ANR	3659950	FunctionDef	"doWorkByList (StringList * ids , CondorError * errstack)"		3659949	0					
ANR	3659951	CompoundStatement		559:0:15764:16814	3659949	0					
ANR	3659952	IdentifierDeclStatement	ClassAd * rval = 0 ;	560:1:15767:15784	3659949	0	True				
ANR	3659953	IdentifierDecl	* rval = 0		3659949	0					
ANR	3659954	IdentifierDeclType	ClassAd *		3659949	0					
ANR	3659955	Identifier	rval		3659949	1					
ANR	3659956	AssignmentExpression	* rval = 0		3659949	2		=			
ANR	3659957	Identifier	rval		3659949	0					
ANR	3659958	PrimaryExpression	0		3659949	1					
ANR	3659959	SwitchStatement	switch ( mode )		3659949	1					
ANR	3659960	Condition	mode	561:9:15795:15798	3659949	0	True				
ANR	3659961	Identifier	mode		3659949	0					
ANR	3659962	CompoundStatement		3:16:37:37	3659949	1					
ANR	3659963	Label	case JA_RELEASE_JOBS :	562:1:15805:15825	3659949	0	True				
ANR	3659964	Identifier	JA_RELEASE_JOBS		3659949	0					
ANR	3659965	ExpressionStatement	"rval = schedd -> releaseJobs ( ids , actionReason , errstack )"	563:2:15829:15886	3659949	1	True				
ANR	3659966	AssignmentExpression	"rval = schedd -> releaseJobs ( ids , actionReason , errstack )"		3659949	0		=			
ANR	3659967	Identifier	rval		3659949	0					
ANR	3659968	CallExpression	"schedd -> releaseJobs ( ids , actionReason , errstack )"		3659949	1					
ANR	3659969	Callee	schedd -> releaseJobs		3659949	0					
ANR	3659970	PtrMemberAccess	schedd -> releaseJobs		3659949	0					
ANR	3659971	Identifier	schedd		3659949	0					
ANR	3659972	Identifier	releaseJobs		3659949	1					
ANR	3659973	ArgumentList	ids		3659949	1					
ANR	3659974	Argument	ids		3659949	0					
ANR	3659975	Identifier	ids		3659949	0					
ANR	3659976	Argument	actionReason		3659949	1					
ANR	3659977	Identifier	actionReason		3659949	0					
ANR	3659978	Argument	errstack		3659949	2					
ANR	3659979	Identifier	errstack		3659949	0					
ANR	3659980	BreakStatement	break ;	564:2:15890:15895	3659949	2	True				
ANR	3659981	Label	case JA_REMOVE_X_JOBS :	565:1:15898:15919	3659949	3	True				
ANR	3659982	Identifier	JA_REMOVE_X_JOBS		3659949	0					
ANR	3659983	ExpressionStatement	"rval = schedd -> removeXJobs ( ids , actionReason , errstack )"	566:2:15923:15980	3659949	4	True				
ANR	3659984	AssignmentExpression	"rval = schedd -> removeXJobs ( ids , actionReason , errstack )"		3659949	0		=			
ANR	3659985	Identifier	rval		3659949	0					
ANR	3659986	CallExpression	"schedd -> removeXJobs ( ids , actionReason , errstack )"		3659949	1					
ANR	3659987	Callee	schedd -> removeXJobs		3659949	0					
ANR	3659988	PtrMemberAccess	schedd -> removeXJobs		3659949	0					
ANR	3659989	Identifier	schedd		3659949	0					
ANR	3659990	Identifier	removeXJobs		3659949	1					
ANR	3659991	ArgumentList	ids		3659949	1					
ANR	3659992	Argument	ids		3659949	0					
ANR	3659993	Identifier	ids		3659949	0					
ANR	3659994	Argument	actionReason		3659949	1					
ANR	3659995	Identifier	actionReason		3659949	0					
ANR	3659996	Argument	errstack		3659949	2					
ANR	3659997	Identifier	errstack		3659949	0					
ANR	3659998	BreakStatement	break ;	567:2:15984:15989	3659949	5	True				
ANR	3659999	Label	case JA_VACATE_JOBS :	568:1:15992:16011	3659949	6	True				
ANR	3660000	Identifier	JA_VACATE_JOBS		3659949	0					
ANR	3660001	ExpressionStatement	"rval = schedd -> vacateJobs ( ids , VACATE_GRACEFUL , errstack )"	569:2:16015:16074	3659949	7	True				
ANR	3660002	AssignmentExpression	"rval = schedd -> vacateJobs ( ids , VACATE_GRACEFUL , errstack )"		3659949	0		=			
ANR	3660003	Identifier	rval		3659949	0					
ANR	3660004	CallExpression	"schedd -> vacateJobs ( ids , VACATE_GRACEFUL , errstack )"		3659949	1					
ANR	3660005	Callee	schedd -> vacateJobs		3659949	0					
ANR	3660006	PtrMemberAccess	schedd -> vacateJobs		3659949	0					
ANR	3660007	Identifier	schedd		3659949	0					
ANR	3660008	Identifier	vacateJobs		3659949	1					
ANR	3660009	ArgumentList	ids		3659949	1					
ANR	3660010	Argument	ids		3659949	0					
ANR	3660011	Identifier	ids		3659949	0					
ANR	3660012	Argument	VACATE_GRACEFUL		3659949	1					
ANR	3660013	Identifier	VACATE_GRACEFUL		3659949	0					
ANR	3660014	Argument	errstack		3659949	2					
ANR	3660015	Identifier	errstack		3659949	0					
ANR	3660016	BreakStatement	break ;	570:2:16078:16083	3659949	8	True				
ANR	3660017	Label	case JA_VACATE_FAST_JOBS :	571:1:16086:16110	3659949	9	True				
ANR	3660018	Identifier	JA_VACATE_FAST_JOBS		3659949	0					
ANR	3660019	ExpressionStatement	"rval = schedd -> vacateJobs ( ids , VACATE_FAST , errstack )"	572:2:16114:16169	3659949	10	True				
ANR	3660020	AssignmentExpression	"rval = schedd -> vacateJobs ( ids , VACATE_FAST , errstack )"		3659949	0		=			
ANR	3660021	Identifier	rval		3659949	0					
ANR	3660022	CallExpression	"schedd -> vacateJobs ( ids , VACATE_FAST , errstack )"		3659949	1					
ANR	3660023	Callee	schedd -> vacateJobs		3659949	0					
ANR	3660024	PtrMemberAccess	schedd -> vacateJobs		3659949	0					
ANR	3660025	Identifier	schedd		3659949	0					
ANR	3660026	Identifier	vacateJobs		3659949	1					
ANR	3660027	ArgumentList	ids		3659949	1					
ANR	3660028	Argument	ids		3659949	0					
ANR	3660029	Identifier	ids		3659949	0					
ANR	3660030	Argument	VACATE_FAST		3659949	1					
ANR	3660031	Identifier	VACATE_FAST		3659949	0					
ANR	3660032	Argument	errstack		3659949	2					
ANR	3660033	Identifier	errstack		3659949	0					
ANR	3660034	BreakStatement	break ;	573:2:16173:16178	3659949	11	True				
ANR	3660035	Label	case JA_REMOVE_JOBS :	574:1:16181:16200	3659949	12	True				
ANR	3660036	Identifier	JA_REMOVE_JOBS		3659949	0					
ANR	3660037	ExpressionStatement	"rval = schedd -> removeJobs ( ids , actionReason , errstack )"	575:2:16204:16260	3659949	13	True				
ANR	3660038	AssignmentExpression	"rval = schedd -> removeJobs ( ids , actionReason , errstack )"		3659949	0		=			
ANR	3660039	Identifier	rval		3659949	0					
ANR	3660040	CallExpression	"schedd -> removeJobs ( ids , actionReason , errstack )"		3659949	1					
ANR	3660041	Callee	schedd -> removeJobs		3659949	0					
ANR	3660042	PtrMemberAccess	schedd -> removeJobs		3659949	0					
ANR	3660043	Identifier	schedd		3659949	0					
ANR	3660044	Identifier	removeJobs		3659949	1					
ANR	3660045	ArgumentList	ids		3659949	1					
ANR	3660046	Argument	ids		3659949	0					
ANR	3660047	Identifier	ids		3659949	0					
ANR	3660048	Argument	actionReason		3659949	1					
ANR	3660049	Identifier	actionReason		3659949	0					
ANR	3660050	Argument	errstack		3659949	2					
ANR	3660051	Identifier	errstack		3659949	0					
ANR	3660052	BreakStatement	break ;	576:2:16264:16269	3659949	14	True				
ANR	3660053	Label	case JA_HOLD_JOBS :	577:1:16272:16289	3659949	15	True				
ANR	3660054	Identifier	JA_HOLD_JOBS		3659949	0					
ANR	3660055	ExpressionStatement	"rval = schedd -> holdJobs ( ids , actionReason , holdReasonSubCode , errstack )"	578:2:16293:16366	3659949	16	True				
ANR	3660056	AssignmentExpression	"rval = schedd -> holdJobs ( ids , actionReason , holdReasonSubCode , errstack )"		3659949	0		=			
ANR	3660057	Identifier	rval		3659949	0					
ANR	3660058	CallExpression	"schedd -> holdJobs ( ids , actionReason , holdReasonSubCode , errstack )"		3659949	1					
ANR	3660059	Callee	schedd -> holdJobs		3659949	0					
ANR	3660060	PtrMemberAccess	schedd -> holdJobs		3659949	0					
ANR	3660061	Identifier	schedd		3659949	0					
ANR	3660062	Identifier	holdJobs		3659949	1					
ANR	3660063	ArgumentList	ids		3659949	1					
ANR	3660064	Argument	ids		3659949	0					
ANR	3660065	Identifier	ids		3659949	0					
ANR	3660066	Argument	actionReason		3659949	1					
ANR	3660067	Identifier	actionReason		3659949	0					
ANR	3660068	Argument	holdReasonSubCode		3659949	2					
ANR	3660069	Identifier	holdReasonSubCode		3659949	0					
ANR	3660070	Argument	errstack		3659949	3					
ANR	3660071	Identifier	errstack		3659949	0					
ANR	3660072	BreakStatement	break ;	579:2:16370:16375	3659949	17	True				
ANR	3660073	Label	case JA_SUSPEND_JOBS :	580:1:16378:16398	3659949	18	True				
ANR	3660074	Identifier	JA_SUSPEND_JOBS		3659949	0					
ANR	3660075	ExpressionStatement	"rval = schedd -> suspendJobs ( ids , actionReason , errstack )"	581:2:16402:16459	3659949	19	True				
ANR	3660076	AssignmentExpression	"rval = schedd -> suspendJobs ( ids , actionReason , errstack )"		3659949	0		=			
ANR	3660077	Identifier	rval		3659949	0					
ANR	3660078	CallExpression	"schedd -> suspendJobs ( ids , actionReason , errstack )"		3659949	1					
ANR	3660079	Callee	schedd -> suspendJobs		3659949	0					
ANR	3660080	PtrMemberAccess	schedd -> suspendJobs		3659949	0					
ANR	3660081	Identifier	schedd		3659949	0					
ANR	3660082	Identifier	suspendJobs		3659949	1					
ANR	3660083	ArgumentList	ids		3659949	1					
ANR	3660084	Argument	ids		3659949	0					
ANR	3660085	Identifier	ids		3659949	0					
ANR	3660086	Argument	actionReason		3659949	1					
ANR	3660087	Identifier	actionReason		3659949	0					
ANR	3660088	Argument	errstack		3659949	2					
ANR	3660089	Identifier	errstack		3659949	0					
ANR	3660090	BreakStatement	break ;	582:2:16463:16468	3659949	20	True				
ANR	3660091	Label	case JA_CONTINUE_JOBS :	583:1:16471:16492	3659949	21	True				
ANR	3660092	Identifier	JA_CONTINUE_JOBS		3659949	0					
ANR	3660093	ExpressionStatement	"rval = schedd -> continueJobs ( ids , actionReason , errstack )"	584:2:16496:16554	3659949	22	True				
ANR	3660094	AssignmentExpression	"rval = schedd -> continueJobs ( ids , actionReason , errstack )"		3659949	0		=			
ANR	3660095	Identifier	rval		3659949	0					
ANR	3660096	CallExpression	"schedd -> continueJobs ( ids , actionReason , errstack )"		3659949	1					
ANR	3660097	Callee	schedd -> continueJobs		3659949	0					
ANR	3660098	PtrMemberAccess	schedd -> continueJobs		3659949	0					
ANR	3660099	Identifier	schedd		3659949	0					
ANR	3660100	Identifier	continueJobs		3659949	1					
ANR	3660101	ArgumentList	ids		3659949	1					
ANR	3660102	Argument	ids		3659949	0					
ANR	3660103	Identifier	ids		3659949	0					
ANR	3660104	Argument	actionReason		3659949	1					
ANR	3660105	Identifier	actionReason		3659949	0					
ANR	3660106	Argument	errstack		3659949	2					
ANR	3660107	Identifier	errstack		3659949	0					
ANR	3660108	BreakStatement	break ;	585:2:16558:16563	3659949	23	True				
ANR	3660109	Label	default :	586:1:16566:16573	3659949	24	True				
ANR	3660110	Identifier	default		3659949	0					
ANR	3660111	ExpressionStatement	"EXCEPT ( ""impossible: unknown mode in doWorkByList"" )"	587:2:16577:16629	3659949	25	True				
ANR	3660112	CallExpression	"EXCEPT ( ""impossible: unknown mode in doWorkByList"" )"		3659949	0					
ANR	3660113	Callee	EXCEPT		3659949	0					
ANR	3660114	Identifier	EXCEPT		3659949	0					
ANR	3660115	ArgumentList	"""impossible: unknown mode in doWorkByList"""		3659949	1					
ANR	3660116	Argument	"""impossible: unknown mode in doWorkByList"""		3659949	0					
ANR	3660117	PrimaryExpression	"""impossible: unknown mode in doWorkByList"""		3659949	0					
ANR	3660118	IfStatement	if ( ! rval )		3659949	2					
ANR	3660119	Condition	! rval	589:5:16639:16644	3659949	0	True				
ANR	3660120	UnaryOperationExpression	! rval		3659949	0					
ANR	3660121	UnaryOperator	!		3659949	0					
ANR	3660122	Identifier	rval		3659949	1					
ANR	3660123	CompoundStatement		31:14:883:883	3659949	1					
ANR	3660124	ExpressionStatement	had_error = true	590:2:16652:16668	3659949	0	True				
ANR	3660125	AssignmentExpression	had_error = true		3659949	0		=			
ANR	3660126	Identifier	had_error		3659949	0					
ANR	3660127	Identifier	true		3659949	1					
ANR	3660128	ElseStatement	else		3659949	0					
ANR	3660129	CompoundStatement		34:2:917:935	3659949	0					
ANR	3660130	IdentifierDeclStatement	int result = FALSE ;	592:2:16682:16700	3659949	0	True				
ANR	3660131	IdentifierDecl	result = FALSE		3659949	0					
ANR	3660132	IdentifierDeclType	int		3659949	0					
ANR	3660133	Identifier	result		3659949	1					
ANR	3660134	AssignmentExpression	result = FALSE		3659949	2		=			
ANR	3660135	Identifier	FALSE		3659949	0					
ANR	3660136	Identifier	FALSE		3659949	1					
ANR	3660137	IfStatement	"if ( ! rval -> LookupInteger ( ATTR_ACTION_RESULT , result ) || ! result )"		3659949	1					
ANR	3660138	Condition	"! rval -> LookupInteger ( ATTR_ACTION_RESULT , result ) || ! result"	593:6:16708:16766	3659949	0	True				
ANR	3660139	OrExpression	"! rval -> LookupInteger ( ATTR_ACTION_RESULT , result ) || ! result"		3659949	0		||			
ANR	3660140	UnaryOperationExpression	"! rval -> LookupInteger ( ATTR_ACTION_RESULT , result )"		3659949	0					
ANR	3660141	UnaryOperator	!		3659949	0					
ANR	3660142	CallExpression	"rval -> LookupInteger ( ATTR_ACTION_RESULT , result )"		3659949	1					
ANR	3660143	Callee	rval -> LookupInteger		3659949	0					
ANR	3660144	PtrMemberAccess	rval -> LookupInteger		3659949	0					
ANR	3660145	Identifier	rval		3659949	0					
ANR	3660146	Identifier	LookupInteger		3659949	1					
ANR	3660147	ArgumentList	ATTR_ACTION_RESULT		3659949	1					
ANR	3660148	Argument	ATTR_ACTION_RESULT		3659949	0					
ANR	3660149	Identifier	ATTR_ACTION_RESULT		3659949	0					
ANR	3660150	Argument	result		3659949	1					
ANR	3660151	Identifier	result		3659949	0					
ANR	3660152	UnaryOperationExpression	! result		3659949	1					
ANR	3660153	UnaryOperator	!		3659949	0					
ANR	3660154	Identifier	result		3659949	1					
ANR	3660155	CompoundStatement		35:68:1005:1005	3659949	1					
ANR	3660156	ExpressionStatement	had_error = true	594:3:16775:16791	3659949	0	True				
ANR	3660157	AssignmentExpression	had_error = true		3659949	0		=			
ANR	3660158	Identifier	had_error		3659949	0					
ANR	3660159	Identifier	true		3659949	1					
ANR	3660160	ReturnStatement	return rval ;	597:1:16801:16812	3659949	3	True				
ANR	3660161	Identifier	rval		3659949	0					
ANR	3660162	ReturnType	ClassAd *		3659949	1					
ANR	3660163	Identifier	doWorkByList		3659949	2					
ANR	3660164	ParameterList	"StringList * ids , CondorError * errstack"		3659949	3					
ANR	3660165	Parameter	StringList * ids	558:14:15723:15737	3659949	0	True				
ANR	3660166	ParameterType	StringList *		3659949	0					
ANR	3660167	Identifier	ids		3659949	1					
ANR	3660168	Parameter	CondorError * errstack	558:31:15740:15760	3659949	1	True				
ANR	3660169	ParameterType	CondorError *		3659949	0					
ANR	3660170	Identifier	errstack		3659949	1					
ANR	3660171	CFGEntryNode	ENTRY		3659949		True				
ANR	3660172	CFGExitNode	EXIT		3659949		True				
ANR	3660173	Symbol	* rval		3659949						
ANR	3660174	Symbol	schedd -> removeXJobs		3659949						
ANR	3660175	Symbol	schedd -> continueJobs		3659949						
ANR	3660176	Symbol	schedd -> vacateJobs		3659949						
ANR	3660177	Symbol	schedd -> suspendJobs		3659949						
ANR	3660178	Symbol	rval -> LookupInteger		3659949						
ANR	3660179	Symbol	actionReason		3659949						
ANR	3660180	Symbol	schedd -> holdJobs		3659949						
ANR	3660181	Symbol	schedd		3659949						
ANR	3660182	Symbol	holdReasonSubCode		3659949						
ANR	3660183	Symbol	mode		3659949						
ANR	3660184	Symbol	result		3659949						
ANR	3660185	Symbol	errstack		3659949						
ANR	3660186	Symbol	schedd -> releaseJobs		3659949						
ANR	3660187	Symbol	VACATE_FAST		3659949						
ANR	3660188	Symbol	schedd -> removeJobs		3659949						
ANR	3660189	Symbol	true		3659949						
ANR	3660190	Symbol	ids		3659949						
ANR	3660191	Symbol	rval		3659949						
ANR	3660192	Symbol	* schedd		3659949						
ANR	3660193	Symbol	FALSE		3659949						
ANR	3660194	Symbol	had_error		3659949						
ANR	3660195	Symbol	ATTR_ACTION_RESULT		3659949						
ANR	3660196	Symbol	VACATE_GRACEFUL		3659949						
ANR	3660197	Function	procArg	601:0:16818:18861							
ANR	3660198	FunctionDef	procArg (const char * arg)		3660197	0					
ANR	3660199	CompoundStatement		603:0:16848:18861	3660197	0					
ANR	3660200	IdentifierDeclStatement	"int c , p ;"	604:1:16851:16860	3660197	0	True				
ANR	3660201	IdentifierDecl	c		3660197	0					
ANR	3660202	IdentifierDeclType	int		3660197	0					
ANR	3660203	Identifier	c		3660197	1					
ANR	3660204	IdentifierDecl	p		3660197	1					
ANR	3660205	IdentifierDeclType	int		3660197	0					
ANR	3660206	Identifier	p		3660197	1					
ANR	3660207	IdentifierDeclStatement	char * tmp ;	605:1:16888:16897	3660197	1	True				
ANR	3660208	IdentifierDecl	* tmp		3660197	0					
ANR	3660209	IdentifierDeclType	char *		3660197	0					
ANR	3660210	Identifier	tmp		3660197	1					
ANR	3660211	IdentifierDeclStatement	MyString constraint ;	607:1:16901:16920	3660197	2	True				
ANR	3660212	IdentifierDecl	constraint		3660197	0					
ANR	3660213	IdentifierDeclType	MyString		3660197	0					
ANR	3660214	Identifier	constraint		3660197	1					
ANR	3660215	IfStatement	"if ( str_isint ( arg ) || str_isreal ( arg , true ) )"		3660197	3					
ANR	3660216	Condition	"str_isint ( arg ) || str_isreal ( arg , true )"	609:5:16928:16965	3660197	0	True				
ANR	3660217	OrExpression	"str_isint ( arg ) || str_isreal ( arg , true )"		3660197	0		||			
ANR	3660218	CallExpression	str_isint ( arg )		3660197	0					
ANR	3660219	Callee	str_isint		3660197	0					
ANR	3660220	Identifier	str_isint		3660197	0					
ANR	3660221	ArgumentList	arg		3660197	1					
ANR	3660222	Argument	arg		3660197	0					
ANR	3660223	Identifier	arg		3660197	0					
ANR	3660224	CallExpression	"str_isreal ( arg , true )"		3660197	1					
ANR	3660225	Callee	str_isreal		3660197	0					
ANR	3660226	Identifier	str_isreal		3660197	0					
ANR	3660227	ArgumentList	arg		3660197	1					
ANR	3660228	Argument	arg		3660197	0					
ANR	3660229	Identifier	arg		3660197	0					
ANR	3660230	Argument	true		3660197	1					
ANR	3660231	Identifier	true		3660197	0					
ANR	3660232	CompoundStatement		9:1:151:151	3660197	1					
ANR	3660233	ExpressionStatement	"c = strtol ( arg , & tmp , 10 )"	612:2:17004:17029	3660197	0	True				
ANR	3660234	AssignmentExpression	"c = strtol ( arg , & tmp , 10 )"		3660197	0		=			
ANR	3660235	Identifier	c		3660197	0					
ANR	3660236	CallExpression	"strtol ( arg , & tmp , 10 )"		3660197	1					
ANR	3660237	Callee	strtol		3660197	0					
ANR	3660238	Identifier	strtol		3660197	0					
ANR	3660239	ArgumentList	arg		3660197	1					
ANR	3660240	Argument	arg		3660197	0					
ANR	3660241	Identifier	arg		3660197	0					
ANR	3660242	Argument	& tmp		3660197	1					
ANR	3660243	UnaryOperationExpression	& tmp		3660197	0					
ANR	3660244	UnaryOperator	&		3660197	0					
ANR	3660245	Identifier	tmp		3660197	1					
ANR	3660246	Argument	10		3660197	2					
ANR	3660247	PrimaryExpression	10		3660197	0					
ANR	3660248	IfStatement	if ( c <= 0 )		3660197	1					
ANR	3660249	Condition	c <= 0	613:5:17036:17041	3660197	0	True				
ANR	3660250	RelationalExpression	c <= 0		3660197	0		<=			
ANR	3660251	Identifier	c		3660197	0					
ANR	3660252	PrimaryExpression	0		3660197	1					
ANR	3660253	CompoundStatement		12:2:197:197	3660197	1					
ANR	3660254	ExpressionStatement	"fprintf ( stderr , ""Invalid cluster # from %s.\\n"" , arg )"	615:3:17051:17103	3660197	0	True				
ANR	3660255	CallExpression	"fprintf ( stderr , ""Invalid cluster # from %s.\\n"" , arg )"		3660197	0					
ANR	3660256	Callee	fprintf		3660197	0					
ANR	3660257	Identifier	fprintf		3660197	0					
ANR	3660258	ArgumentList	stderr		3660197	1					
ANR	3660259	Argument	stderr		3660197	0					
ANR	3660260	Identifier	stderr		3660197	0					
ANR	3660261	Argument	"""Invalid cluster # from %s.\\n"""		3660197	1					
ANR	3660262	PrimaryExpression	"""Invalid cluster # from %s.\\n"""		3660197	0					
ANR	3660263	Argument	arg		3660197	2					
ANR	3660264	Identifier	arg		3660197	0					
ANR	3660265	ExpressionStatement	had_error = true	616:3:17108:17124	3660197	1	True				
ANR	3660266	AssignmentExpression	had_error = true		3660197	0		=			
ANR	3660267	Identifier	had_error		3660197	0					
ANR	3660268	Identifier	true		3660197	1					
ANR	3660269	ReturnStatement	return ;	617:3:17129:17135	3660197	2	True				
ANR	3660270	IfStatement	if ( * tmp == '\\0' )		3660197	2					
ANR	3660271	Condition	* tmp == '\\0'	619:5:17146:17157	3660197	0	True				
ANR	3660272	EqualityExpression	* tmp == '\\0'		3660197	0		==			
ANR	3660273	UnaryOperationExpression	* tmp		3660197	0					
ANR	3660274	UnaryOperator	*		3660197	0					
ANR	3660275	Identifier	tmp		3660197	1					
ANR	3660276	PrimaryExpression	'\\0'		3660197	1					
ANR	3660277	CompoundStatement		20:3:342:362	3660197	1					
ANR	3660278	IdentifierDeclStatement	CondorError errstack ;	622:3:17191:17211	3660197	0	True				
ANR	3660279	IdentifierDecl	errstack		3660197	0					
ANR	3660280	IdentifierDeclType	CondorError		3660197	0					
ANR	3660281	Identifier	errstack		3660197	1					
ANR	3660282	ExpressionStatement	"constraint . sprintf ( ""%s == %d"" , ATTR_CLUSTER_ID , c )"	623:3:17216:17268	3660197	1	True				
ANR	3660283	CallExpression	"constraint . sprintf ( ""%s == %d"" , ATTR_CLUSTER_ID , c )"		3660197	0					
ANR	3660284	Callee	constraint . sprintf		3660197	0					
ANR	3660285	MemberAccess	constraint . sprintf		3660197	0					
ANR	3660286	Identifier	constraint		3660197	0					
ANR	3660287	Identifier	sprintf		3660197	1					
ANR	3660288	ArgumentList	"""%s == %d"""		3660197	1					
ANR	3660289	Argument	"""%s == %d"""		3660197	0					
ANR	3660290	PrimaryExpression	"""%s == %d"""		3660197	0					
ANR	3660291	Argument	ATTR_CLUSTER_ID		3660197	1					
ANR	3660292	Identifier	ATTR_CLUSTER_ID		3660197	0					
ANR	3660293	Argument	c		3660197	2					
ANR	3660294	Identifier	c		3660197	0					
ANR	3660295	IfStatement	"if ( doWorkByConstraint ( constraint . Value ( ) , & errstack ) )"		3660197	2					
ANR	3660296	Condition	"doWorkByConstraint ( constraint . Value ( ) , & errstack )"	624:7:17277:17325	3660197	0	True				
ANR	3660297	CallExpression	"doWorkByConstraint ( constraint . Value ( ) , & errstack )"		3660197	0					
ANR	3660298	Callee	doWorkByConstraint		3660197	0					
ANR	3660299	Identifier	doWorkByConstraint		3660197	0					
ANR	3660300	ArgumentList	constraint . Value ( )		3660197	1					
ANR	3660301	Argument	constraint . Value ( )		3660197	0					
ANR	3660302	CallExpression	constraint . Value ( )		3660197	0					
ANR	3660303	Callee	constraint . Value		3660197	0					
ANR	3660304	MemberAccess	constraint . Value		3660197	0					
ANR	3660305	Identifier	constraint		3660197	0					
ANR	3660306	Identifier	Value		3660197	1					
ANR	3660307	ArgumentList			3660197	1					
ANR	3660308	Argument	& errstack		3660197	1					
ANR	3660309	UnaryOperationExpression	& errstack		3660197	0					
ANR	3660310	UnaryOperator	&		3660197	0					
ANR	3660311	Identifier	errstack		3660197	1					
ANR	3660312	CompoundStatement		22:59:480:480	3660197	1					
ANR	3660313	ExpressionStatement	"fprintf ( stdout , ""Cluster %d %s.\\n"" , c , ( mode == JA_REMOVE_JOBS ) ? ""has been marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""has been removed locally (remote state unknown)"" : actionWord ( mode , true ) )"	625:4:17335:17581	3660197	0	True				
ANR	3660314	CallExpression	"fprintf ( stdout , ""Cluster %d %s.\\n"" , c , ( mode == JA_REMOVE_JOBS ) ? ""has been marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""has been removed locally (remote state unknown)"" : actionWord ( mode , true ) )"		3660197	0					
ANR	3660315	Callee	fprintf		3660197	0					
ANR	3660316	Identifier	fprintf		3660197	0					
ANR	3660317	ArgumentList	stdout		3660197	1					
ANR	3660318	Argument	stdout		3660197	0					
ANR	3660319	Identifier	stdout		3660197	0					
ANR	3660320	Argument	"""Cluster %d %s.\\n"""		3660197	1					
ANR	3660321	PrimaryExpression	"""Cluster %d %s.\\n"""		3660197	0					
ANR	3660322	Argument	c		3660197	2					
ANR	3660323	Identifier	c		3660197	0					
ANR	3660324	Argument	"( mode == JA_REMOVE_JOBS ) ? ""has been marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""has been removed locally (remote state unknown)"" : actionWord ( mode , true )"		3660197	3					
ANR	3660325	ConditionalExpression	"( mode == JA_REMOVE_JOBS ) ? ""has been marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""has been removed locally (remote state unknown)"" : actionWord ( mode , true )"		3660197	0					
ANR	3660326	Condition	mode == JA_REMOVE_JOBS		3660197	0					
ANR	3660327	EqualityExpression	mode == JA_REMOVE_JOBS		3660197	0		==			
ANR	3660328	Identifier	mode		3660197	0					
ANR	3660329	Identifier	JA_REMOVE_JOBS		3660197	1					
ANR	3660330	PrimaryExpression	"""has been marked for removal"""		3660197	1					
ANR	3660331	ConditionalExpression	"( mode == JA_REMOVE_X_JOBS ) ? ""has been removed locally (remote state unknown)"" : actionWord ( mode , true )"		3660197	2					
ANR	3660332	Condition	mode == JA_REMOVE_X_JOBS		3660197	0					
ANR	3660333	EqualityExpression	mode == JA_REMOVE_X_JOBS		3660197	0		==			
ANR	3660334	Identifier	mode		3660197	0					
ANR	3660335	Identifier	JA_REMOVE_X_JOBS		3660197	1					
ANR	3660336	PrimaryExpression	"""has been removed locally (remote state unknown)"""		3660197	1					
ANR	3660337	CallExpression	"actionWord ( mode , true )"		3660197	2					
ANR	3660338	Callee	actionWord		3660197	0					
ANR	3660339	Identifier	actionWord		3660197	0					
ANR	3660340	ArgumentList	mode		3660197	1					
ANR	3660341	Argument	mode		3660197	0					
ANR	3660342	Identifier	mode		3660197	0					
ANR	3660343	Argument	true		3660197	1					
ANR	3660344	Identifier	true		3660197	0					
ANR	3660345	ElseStatement	else		3660197	0					
ANR	3660346	CompoundStatement		30:10:744:744	3660197	0					
ANR	3660347	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"	633:4:17599:17652	3660197	0	True				
ANR	3660348	CallExpression	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"		3660197	0					
ANR	3660349	Callee	fprintf		3660197	0					
ANR	3660350	Identifier	fprintf		3660197	0					
ANR	3660351	ArgumentList	stderr		3660197	1					
ANR	3660352	Argument	stderr		3660197	0					
ANR	3660353	Identifier	stderr		3660197	0					
ANR	3660354	Argument	"""%s\\n"""		3660197	1					
ANR	3660355	PrimaryExpression	"""%s\\n"""		3660197	0					
ANR	3660356	Argument	errstack . getFullText ( true )		3660197	2					
ANR	3660357	CallExpression	errstack . getFullText ( true )		3660197	0					
ANR	3660358	Callee	errstack . getFullText		3660197	0					
ANR	3660359	MemberAccess	errstack . getFullText		3660197	0					
ANR	3660360	Identifier	errstack		3660197	0					
ANR	3660361	Identifier	getFullText		3660197	1					
ANR	3660362	ArgumentList	true		3660197	1					
ANR	3660363	Argument	true		3660197	0					
ANR	3660364	Identifier	true		3660197	0					
ANR	3660365	IfStatement	if ( had_error )		3660197	1					
ANR	3660366	Condition	had_error	634:8:17662:17670	3660197	0	True				
ANR	3660367	Identifier	had_error		3660197	0					
ANR	3660368	CompoundStatement		33:4:828:828	3660197	1					
ANR	3660369	ExpressionStatement	"fprintf ( stderr , ""Couldn't find/%s all jobs in cluster %d.\\n"" , actionWord ( mode , false ) , c )"	636:5:17684:17789	3660197	0	True				
ANR	3660370	CallExpression	"fprintf ( stderr , ""Couldn't find/%s all jobs in cluster %d.\\n"" , actionWord ( mode , false ) , c )"		3660197	0					
ANR	3660371	Callee	fprintf		3660197	0					
ANR	3660372	Identifier	fprintf		3660197	0					
ANR	3660373	ArgumentList	stderr		3660197	1					
ANR	3660374	Argument	stderr		3660197	0					
ANR	3660375	Identifier	stderr		3660197	0					
ANR	3660376	Argument	"""Couldn't find/%s all jobs in cluster %d.\\n"""		3660197	1					
ANR	3660377	PrimaryExpression	"""Couldn't find/%s all jobs in cluster %d.\\n"""		3660197	0					
ANR	3660378	Argument	"actionWord ( mode , false )"		3660197	2					
ANR	3660379	CallExpression	"actionWord ( mode , false )"		3660197	0					
ANR	3660380	Callee	actionWord		3660197	0					
ANR	3660381	Identifier	actionWord		3660197	0					
ANR	3660382	ArgumentList	mode		3660197	1					
ANR	3660383	Argument	mode		3660197	0					
ANR	3660384	Identifier	mode		3660197	0					
ANR	3660385	Argument	false		3660197	1					
ANR	3660386	Identifier	false		3660197	0					
ANR	3660387	Argument	c		3660197	3					
ANR	3660388	Identifier	c		3660197	0					
ANR	3660389	ReturnStatement	return ;	641:3:17805:17811	3660197	3	True				
ANR	3660390	IfStatement	if ( * tmp == '.' )		3660197	3					
ANR	3660391	Condition	* tmp == '.'	643:5:17822:17832	3660197	0	True				
ANR	3660392	EqualityExpression	* tmp == '.'		3660197	0		==			
ANR	3660393	UnaryOperationExpression	* tmp		3660197	0					
ANR	3660394	UnaryOperator	*		3660197	0					
ANR	3660395	Identifier	tmp		3660197	1					
ANR	3660396	PrimaryExpression	'.'		3660197	1					
ANR	3660397	CompoundStatement		42:2:988:988	3660197	1					
ANR	3660398	ExpressionStatement	"p = strtol ( tmp + 1 , & tmp , 10 )"	645:3:17842:17871	3660197	0	True				
ANR	3660399	AssignmentExpression	"p = strtol ( tmp + 1 , & tmp , 10 )"		3660197	0		=			
ANR	3660400	Identifier	p		3660197	0					
ANR	3660401	CallExpression	"strtol ( tmp + 1 , & tmp , 10 )"		3660197	1					
ANR	3660402	Callee	strtol		3660197	0					
ANR	3660403	Identifier	strtol		3660197	0					
ANR	3660404	ArgumentList	tmp + 1		3660197	1					
ANR	3660405	Argument	tmp + 1		3660197	0					
ANR	3660406	AdditiveExpression	tmp + 1		3660197	0		+			
ANR	3660407	Identifier	tmp		3660197	0					
ANR	3660408	PrimaryExpression	1		3660197	1					
ANR	3660409	Argument	& tmp		3660197	1					
ANR	3660410	UnaryOperationExpression	& tmp		3660197	0					
ANR	3660411	UnaryOperator	&		3660197	0					
ANR	3660412	Identifier	tmp		3660197	1					
ANR	3660413	Argument	10		3660197	2					
ANR	3660414	PrimaryExpression	10		3660197	0					
ANR	3660415	IfStatement	if ( p < 0 )		3660197	1					
ANR	3660416	Condition	p < 0	646:6:17879:17883	3660197	0	True				
ANR	3660417	RelationalExpression	p < 0		3660197	0		<			
ANR	3660418	Identifier	p		3660197	0					
ANR	3660419	PrimaryExpression	0		3660197	1					
ANR	3660420	CompoundStatement		45:3:1040:1040	3660197	1					
ANR	3660421	ExpressionStatement	"fprintf ( stderr , ""Invalid proc # from %s.\\n"" , arg )"	648:4:17895:17945	3660197	0	True				
ANR	3660422	CallExpression	"fprintf ( stderr , ""Invalid proc # from %s.\\n"" , arg )"		3660197	0					
ANR	3660423	Callee	fprintf		3660197	0					
ANR	3660424	Identifier	fprintf		3660197	0					
ANR	3660425	ArgumentList	stderr		3660197	1					
ANR	3660426	Argument	stderr		3660197	0					
ANR	3660427	Identifier	stderr		3660197	0					
ANR	3660428	Argument	"""Invalid proc # from %s.\\n"""		3660197	1					
ANR	3660429	PrimaryExpression	"""Invalid proc # from %s.\\n"""		3660197	0					
ANR	3660430	Argument	arg		3660197	2					
ANR	3660431	Identifier	arg		3660197	0					
ANR	3660432	ExpressionStatement	had_error = true	649:4:17951:17967	3660197	1	True				
ANR	3660433	AssignmentExpression	had_error = true		3660197	0		=			
ANR	3660434	Identifier	had_error		3660197	0					
ANR	3660435	Identifier	true		3660197	1					
ANR	3660436	ReturnStatement	return ;	650:4:17973:17979	3660197	2	True				
ANR	3660437	IfStatement	if ( * tmp == '\\0' )		3660197	2					
ANR	3660438	Condition	* tmp == '\\0'	652:6:17992:18003	3660197	0	True				
ANR	3660439	EqualityExpression	* tmp == '\\0'		3660197	0		==			
ANR	3660440	UnaryOperationExpression	* tmp		3660197	0					
ANR	3660441	UnaryOperator	*		3660197	0					
ANR	3660442	Identifier	tmp		3660197	1					
ANR	3660443	PrimaryExpression	'\\0'		3660197	1					
ANR	3660444	CompoundStatement		52:3:1181:1181	3660197	1					
ANR	3660445	IfStatement	if ( ! job_ids )		3660197	0					
ANR	3660446	Condition	! job_ids	655:8:18040:18048	3660197	0	True				
ANR	3660447	UnaryOperationExpression	! job_ids		3660197	0					
ANR	3660448	UnaryOperator	!		3660197	0					
ANR	3660449	Identifier	job_ids		3660197	1					
ANR	3660450	CompoundStatement		53:20:1203:1203	3660197	1					
ANR	3660451	ExpressionStatement	job_ids = new StringList ( )	656:5:18059:18085	3660197	0	True				
ANR	3660452	AssignmentExpression	job_ids = new StringList ( )		3660197	0		=			
ANR	3660453	Identifier	job_ids		3660197	0					
ANR	3660454	UnaryExpression	new StringList ( )		3660197	1					
ANR	3660455	ExpressionStatement	job_ids -> append ( arg )	658:4:18097:18119	3660197	1	True				
ANR	3660456	CallExpression	job_ids -> append ( arg )		3660197	0					
ANR	3660457	Callee	job_ids -> append		3660197	0					
ANR	3660458	PtrMemberAccess	job_ids -> append		3660197	0					
ANR	3660459	Identifier	job_ids		3660197	0					
ANR	3660460	Identifier	append		3660197	1					
ANR	3660461	ArgumentList	arg		3660197	1					
ANR	3660462	Argument	arg		3660197	0					
ANR	3660463	Identifier	arg		3660197	0					
ANR	3660464	ReturnStatement	return ;	659:4:18125:18131	3660197	2	True				
ANR	3660465	ExpressionStatement	"fprintf ( stderr , ""Warning: unrecognized \\""%s\\"" skipped.\\n"" , arg )"	662:2:18144:18209	3660197	4	True				
ANR	3660466	CallExpression	"fprintf ( stderr , ""Warning: unrecognized \\""%s\\"" skipped.\\n"" , arg )"		3660197	0					
ANR	3660467	Callee	fprintf		3660197	0					
ANR	3660468	Identifier	fprintf		3660197	0					
ANR	3660469	ArgumentList	stderr		3660197	1					
ANR	3660470	Argument	stderr		3660197	0					
ANR	3660471	Identifier	stderr		3660197	0					
ANR	3660472	Argument	"""Warning: unrecognized \\""%s\\"" skipped.\\n"""		3660197	1					
ANR	3660473	PrimaryExpression	"""Warning: unrecognized \\""%s\\"" skipped.\\n"""		3660197	0					
ANR	3660474	Argument	arg		3660197	2					
ANR	3660475	Identifier	arg		3660197	0					
ANR	3660476	ReturnStatement	return ;	663:2:18213:18219	3660197	5	True				
ANR	3660477	ElseStatement	else		3660197	0					
ANR	3660478	CompoundStatement		65:2:1410:1430	3660197	0					
ANR	3660479	IdentifierDeclStatement	CondorError errstack ;	667:2:18259:18279	3660197	0	True				
ANR	3660480	IdentifierDecl	errstack		3660197	0					
ANR	3660481	IdentifierDeclType	CondorError		3660197	0					
ANR	3660482	Identifier	errstack		3660197	1					
ANR	3660483	ExpressionStatement	"constraint . sprintf ( ""%s == \\""%s\\"""" , ATTR_OWNER , arg )"	668:2:18283:18335	3660197	1	True				
ANR	3660484	CallExpression	"constraint . sprintf ( ""%s == \\""%s\\"""" , ATTR_OWNER , arg )"		3660197	0					
ANR	3660485	Callee	constraint . sprintf		3660197	0					
ANR	3660486	MemberAccess	constraint . sprintf		3660197	0					
ANR	3660487	Identifier	constraint		3660197	0					
ANR	3660488	Identifier	sprintf		3660197	1					
ANR	3660489	ArgumentList	"""%s == \\""%s\\"""""		3660197	1					
ANR	3660490	Argument	"""%s == \\""%s\\"""""		3660197	0					
ANR	3660491	PrimaryExpression	"""%s == \\""%s\\"""""		3660197	0					
ANR	3660492	Argument	ATTR_OWNER		3660197	1					
ANR	3660493	Identifier	ATTR_OWNER		3660197	0					
ANR	3660494	Argument	arg		3660197	2					
ANR	3660495	Identifier	arg		3660197	0					
ANR	3660496	IfStatement	"if ( doWorkByConstraint ( constraint . Value ( ) , & errstack ) )"		3660197	2					
ANR	3660497	Condition	"doWorkByConstraint ( constraint . Value ( ) , & errstack )"	669:6:18343:18391	3660197	0	True				
ANR	3660498	CallExpression	"doWorkByConstraint ( constraint . Value ( ) , & errstack )"		3660197	0					
ANR	3660499	Callee	doWorkByConstraint		3660197	0					
ANR	3660500	Identifier	doWorkByConstraint		3660197	0					
ANR	3660501	ArgumentList	constraint . Value ( )		3660197	1					
ANR	3660502	Argument	constraint . Value ( )		3660197	0					
ANR	3660503	CallExpression	constraint . Value ( )		3660197	0					
ANR	3660504	Callee	constraint . Value		3660197	0					
ANR	3660505	MemberAccess	constraint . Value		3660197	0					
ANR	3660506	Identifier	constraint		3660197	0					
ANR	3660507	Identifier	Value		3660197	1					
ANR	3660508	ArgumentList			3660197	1					
ANR	3660509	Argument	& errstack		3660197	1					
ANR	3660510	UnaryOperationExpression	& errstack		3660197	0					
ANR	3660511	UnaryOperator	&		3660197	0					
ANR	3660512	Identifier	errstack		3660197	1					
ANR	3660513	CompoundStatement		67:58:1546:1546	3660197	1					
ANR	3660514	ExpressionStatement	"fprintf ( stdout , ""User %s's job(s) %s.\\n"" , arg , ( mode == JA_REMOVE_JOBS ) ? ""have been marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""have been removed locally (remote state unknown)"" : actionWord ( mode , true ) )"	670:3:18400:18643	3660197	0	True				
ANR	3660515	CallExpression	"fprintf ( stdout , ""User %s's job(s) %s.\\n"" , arg , ( mode == JA_REMOVE_JOBS ) ? ""have been marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""have been removed locally (remote state unknown)"" : actionWord ( mode , true ) )"		3660197	0					
ANR	3660516	Callee	fprintf		3660197	0					
ANR	3660517	Identifier	fprintf		3660197	0					
ANR	3660518	ArgumentList	stdout		3660197	1					
ANR	3660519	Argument	stdout		3660197	0					
ANR	3660520	Identifier	stdout		3660197	0					
ANR	3660521	Argument	"""User %s's job(s) %s.\\n"""		3660197	1					
ANR	3660522	PrimaryExpression	"""User %s's job(s) %s.\\n"""		3660197	0					
ANR	3660523	Argument	arg		3660197	2					
ANR	3660524	Identifier	arg		3660197	0					
ANR	3660525	Argument	"( mode == JA_REMOVE_JOBS ) ? ""have been marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""have been removed locally (remote state unknown)"" : actionWord ( mode , true )"		3660197	3					
ANR	3660526	ConditionalExpression	"( mode == JA_REMOVE_JOBS ) ? ""have been marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""have been removed locally (remote state unknown)"" : actionWord ( mode , true )"		3660197	0					
ANR	3660527	Condition	mode == JA_REMOVE_JOBS		3660197	0					
ANR	3660528	EqualityExpression	mode == JA_REMOVE_JOBS		3660197	0		==			
ANR	3660529	Identifier	mode		3660197	0					
ANR	3660530	Identifier	JA_REMOVE_JOBS		3660197	1					
ANR	3660531	PrimaryExpression	"""have been marked for removal"""		3660197	1					
ANR	3660532	ConditionalExpression	"( mode == JA_REMOVE_X_JOBS ) ? ""have been removed locally (remote state unknown)"" : actionWord ( mode , true )"		3660197	2					
ANR	3660533	Condition	mode == JA_REMOVE_X_JOBS		3660197	0					
ANR	3660534	EqualityExpression	mode == JA_REMOVE_X_JOBS		3660197	0		==			
ANR	3660535	Identifier	mode		3660197	0					
ANR	3660536	Identifier	JA_REMOVE_X_JOBS		3660197	1					
ANR	3660537	PrimaryExpression	"""have been removed locally (remote state unknown)"""		3660197	1					
ANR	3660538	CallExpression	"actionWord ( mode , true )"		3660197	2					
ANR	3660539	Callee	actionWord		3660197	0					
ANR	3660540	Identifier	actionWord		3660197	0					
ANR	3660541	ArgumentList	mode		3660197	1					
ANR	3660542	Argument	mode		3660197	0					
ANR	3660543	Identifier	mode		3660197	0					
ANR	3660544	Argument	true		3660197	1					
ANR	3660545	Identifier	true		3660197	0					
ANR	3660546	ElseStatement	else		3660197	0					
ANR	3660547	CompoundStatement		74:9:1805:1805	3660197	0					
ANR	3660548	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"	677:3:18659:18712	3660197	0	True				
ANR	3660549	CallExpression	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"		3660197	0					
ANR	3660550	Callee	fprintf		3660197	0					
ANR	3660551	Identifier	fprintf		3660197	0					
ANR	3660552	ArgumentList	stderr		3660197	1					
ANR	3660553	Argument	stderr		3660197	0					
ANR	3660554	Identifier	stderr		3660197	0					
ANR	3660555	Argument	"""%s\\n"""		3660197	1					
ANR	3660556	PrimaryExpression	"""%s\\n"""		3660197	0					
ANR	3660557	Argument	errstack . getFullText ( true )		3660197	2					
ANR	3660558	CallExpression	errstack . getFullText ( true )		3660197	0					
ANR	3660559	Callee	errstack . getFullText		3660197	0					
ANR	3660560	MemberAccess	errstack . getFullText		3660197	0					
ANR	3660561	Identifier	errstack		3660197	0					
ANR	3660562	Identifier	getFullText		3660197	1					
ANR	3660563	ArgumentList	true		3660197	1					
ANR	3660564	Argument	true		3660197	0					
ANR	3660565	Identifier	true		3660197	0					
ANR	3660566	IfStatement	if ( had_error )		3660197	1					
ANR	3660567	Condition	had_error	678:7:18721:18729	3660197	0	True				
ANR	3660568	Identifier	had_error		3660197	0					
ANR	3660569	CompoundStatement		77:3:1886:1886	3660197	1					
ANR	3660570	ExpressionStatement	"fprintf ( stderr , ""Couldn't find/%s all of user %s's job(s).\\n"" , actionWord ( mode , false ) , arg )"	680:4:18741:18847	3660197	0	True				
ANR	3660571	CallExpression	"fprintf ( stderr , ""Couldn't find/%s all of user %s's job(s).\\n"" , actionWord ( mode , false ) , arg )"		3660197	0					
ANR	3660572	Callee	fprintf		3660197	0					
ANR	3660573	Identifier	fprintf		3660197	0					
ANR	3660574	ArgumentList	stderr		3660197	1					
ANR	3660575	Argument	stderr		3660197	0					
ANR	3660576	Identifier	stderr		3660197	0					
ANR	3660577	Argument	"""Couldn't find/%s all of user %s's job(s).\\n"""		3660197	1					
ANR	3660578	PrimaryExpression	"""Couldn't find/%s all of user %s's job(s).\\n"""		3660197	0					
ANR	3660579	Argument	"actionWord ( mode , false )"		3660197	2					
ANR	3660580	CallExpression	"actionWord ( mode , false )"		3660197	0					
ANR	3660581	Callee	actionWord		3660197	0					
ANR	3660582	Identifier	actionWord		3660197	0					
ANR	3660583	ArgumentList	mode		3660197	1					
ANR	3660584	Argument	mode		3660197	0					
ANR	3660585	Identifier	mode		3660197	0					
ANR	3660586	Argument	false		3660197	1					
ANR	3660587	Identifier	false		3660197	0					
ANR	3660588	Argument	arg		3660197	3					
ANR	3660589	Identifier	arg		3660197	0					
ANR	3660590	ReturnType	void		3660197	1					
ANR	3660591	Identifier	procArg		3660197	2					
ANR	3660592	ParameterList	const char * arg		3660197	3					
ANR	3660593	Parameter	const char * arg	602:8:16831:16845	3660197	0	True				
ANR	3660594	ParameterType	const char *		3660197	0					
ANR	3660595	Identifier	arg		3660197	1					
ANR	3660596	CFGEntryNode	ENTRY		3660197		True				
ANR	3660597	CFGExitNode	EXIT		3660197		True				
ANR	3660598	Symbol	* tmp		3660197						
ANR	3660599	Symbol	constraint . Value		3660197						
ANR	3660600	Symbol	actionWord		3660197						
ANR	3660601	Symbol	stdout		3660197						
ANR	3660602	Symbol	JA_REMOVE_JOBS		3660197						
ANR	3660603	Symbol	doWorkByConstraint		3660197						
ANR	3660604	Symbol	mode		3660197						
ANR	3660605	Symbol	str_isint		3660197						
ANR	3660606	Symbol	JA_REMOVE_X_JOBS		3660197						
ANR	3660607	Symbol	ATTR_CLUSTER_ID		3660197						
ANR	3660608	Symbol	strtol		3660197						
ANR	3660609	Symbol	tmp		3660197						
ANR	3660610	Symbol	arg		3660197						
ANR	3660611	Symbol	& errstack		3660197						
ANR	3660612	Symbol	ATTR_OWNER		3660197						
ANR	3660613	Symbol	c		3660197						
ANR	3660614	Symbol	job_ids		3660197						
ANR	3660615	Symbol	false		3660197						
ANR	3660616	Symbol	stderr		3660197						
ANR	3660617	Symbol	p		3660197						
ANR	3660618	Symbol	errstack		3660197						
ANR	3660619	Symbol	true		3660197						
ANR	3660620	Symbol	errstack . getFullText		3660197						
ANR	3660621	Symbol	constraint		3660197						
ANR	3660622	Symbol	str_isreal		3660197						
ANR	3660623	Symbol	& tmp		3660197						
ANR	3660624	Symbol	had_error		3660197						
ANR	3660625	Function	addConstraint	689:0:18865:19144							
ANR	3660626	FunctionDef	addConstraint (const char * constraint)		3660625	0					
ANR	3660627	CompoundStatement		691:0:18910:19144	3660625	0					
ANR	3660628	Statement	static	692:1:18913:18918	3660625	0	True				
ANR	3660629	IdentifierDeclStatement	bool has_clause = false ;	692:8:18920:18943	3660625	1	True				
ANR	3660630	IdentifierDecl	has_clause = false		3660625	0					
ANR	3660631	IdentifierDeclType	bool		3660625	0					
ANR	3660632	Identifier	has_clause		3660625	1					
ANR	3660633	AssignmentExpression	has_clause = false		3660625	2		=			
ANR	3660634	Identifier	false		3660625	0					
ANR	3660635	Identifier	false		3660625	1					
ANR	3660636	IfStatement	if ( has_clause )		3660625	2					
ANR	3660637	Condition	has_clause	693:5:18950:18959	3660625	0	True				
ANR	3660638	Identifier	has_clause		3660625	0					
ANR	3660639	CompoundStatement		3:18:52:52	3660625	1					
ANR	3660640	ExpressionStatement	"global_constraint += "" && ("""	694:2:18967:18995	3660625	0	True				
ANR	3660641	AssignmentExpression	"global_constraint += "" && ("""		3660625	0		+=			
ANR	3660642	Identifier	global_constraint		3660625	0					
ANR	3660643	PrimaryExpression	""" && ("""		3660625	1					
ANR	3660644	ElseStatement	else		3660625	0					
ANR	3660645	CompoundStatement		5:8:94:94	3660625	0					
ANR	3660646	ExpressionStatement	"global_constraint += ""("""	696:2:19009:19033	3660625	0	True				
ANR	3660647	AssignmentExpression	"global_constraint += ""("""		3660625	0		+=			
ANR	3660648	Identifier	global_constraint		3660625	0					
ANR	3660649	PrimaryExpression	"""("""		3660625	1					
ANR	3660650	ExpressionStatement	global_constraint += constraint	698:1:19039:19070	3660625	3	True				
ANR	3660651	AssignmentExpression	global_constraint += constraint		3660625	0		+=			
ANR	3660652	Identifier	global_constraint		3660625	0					
ANR	3660653	Identifier	constraint		3660625	1					
ANR	3660654	ExpressionStatement	"global_constraint += "")"""	699:1:19073:19097	3660625	4	True				
ANR	3660655	AssignmentExpression	"global_constraint += "")"""		3660625	0		+=			
ANR	3660656	Identifier	global_constraint		3660625	0					
ANR	3660657	PrimaryExpression	""")"""		3660625	1					
ANR	3660658	ExpressionStatement	has_clause = true	701:1:19101:19118	3660625	5	True				
ANR	3660659	AssignmentExpression	has_clause = true		3660625	0		=			
ANR	3660660	Identifier	has_clause		3660625	0					
ANR	3660661	Identifier	true		3660625	1					
ANR	3660662	ExpressionStatement	has_constraint = true	702:1:19121:19142	3660625	6	True				
ANR	3660663	AssignmentExpression	has_constraint = true		3660625	0		=			
ANR	3660664	Identifier	has_constraint		3660625	0					
ANR	3660665	Identifier	true		3660625	1					
ANR	3660666	ReturnType	void		3660625	1					
ANR	3660667	Identifier	addConstraint		3660625	2					
ANR	3660668	ParameterList	const char * constraint		3660625	3					
ANR	3660669	Parameter	const char * constraint	690:15:18885:18906	3660625	0	True				
ANR	3660670	ParameterType	const char *		3660625	0					
ANR	3660671	Identifier	constraint		3660625	1					
ANR	3660672	CFGEntryNode	ENTRY		3660625		True				
ANR	3660673	CFGExitNode	EXIT		3660625		True				
ANR	3660674	Symbol	has_constraint		3660625						
ANR	3660675	Symbol	global_constraint		3660625						
ANR	3660676	Symbol	false		3660625						
ANR	3660677	Symbol	true		3660625						
ANR	3660678	Symbol	constraint		3660625						
ANR	3660679	Symbol	has_clause		3660625						
ANR	3660680	Function	mayUserForceRm	705:0:19147:19868							
ANR	3660681	FunctionDef	mayUserForceRm ()		3660680	0					
ANR	3660682	CompoundStatement		707:0:19170:19868	3660680	0					
ANR	3660683	IdentifierDeclStatement	"const char * PARAM_ALLOW_FORCE_RM = ""ALLOW_FORCE_RM"" ;"	708:1:19173:19225	3660680	0	True				
ANR	3660684	IdentifierDecl	"* PARAM_ALLOW_FORCE_RM = ""ALLOW_FORCE_RM"""		3660680	0					
ANR	3660685	IdentifierDeclType	const char *		3660680	0					
ANR	3660686	Identifier	PARAM_ALLOW_FORCE_RM		3660680	1					
ANR	3660687	AssignmentExpression	"* PARAM_ALLOW_FORCE_RM = ""ALLOW_FORCE_RM"""		3660680	2		=			
ANR	3660688	Identifier	PARAM_ALLOW_FORCE_RM		3660680	0					
ANR	3660689	PrimaryExpression	"""ALLOW_FORCE_RM"""		3660680	1					
ANR	3660690	IdentifierDeclStatement	char * tmp = param ( PARAM_ALLOW_FORCE_RM ) ;	709:1:19228:19269	3660680	1	True				
ANR	3660691	IdentifierDecl	* tmp = param ( PARAM_ALLOW_FORCE_RM )		3660680	0					
ANR	3660692	IdentifierDeclType	char *		3660680	0					
ANR	3660693	Identifier	tmp		3660680	1					
ANR	3660694	AssignmentExpression	* tmp = param ( PARAM_ALLOW_FORCE_RM )		3660680	2		=			
ANR	3660695	Identifier	tmp		3660680	0					
ANR	3660696	CallExpression	param ( PARAM_ALLOW_FORCE_RM )		3660680	1					
ANR	3660697	Callee	param		3660680	0					
ANR	3660698	Identifier	param		3660680	0					
ANR	3660699	ArgumentList	PARAM_ALLOW_FORCE_RM		3660680	1					
ANR	3660700	Argument	PARAM_ALLOW_FORCE_RM		3660680	0					
ANR	3660701	Identifier	PARAM_ALLOW_FORCE_RM		3660680	0					
ANR	3660702	IfStatement	if ( tmp == NULL )		3660680	2					
ANR	3660703	Condition	tmp == NULL	710:5:19276:19286	3660680	0	True				
ANR	3660704	EqualityExpression	tmp == NULL		3660680	0		==			
ANR	3660705	Identifier	tmp		3660680	0					
ANR	3660706	Identifier	NULL		3660680	1					
ANR	3660707	CompoundStatement		4:18:118:118	3660680	1					
ANR	3660708	ReturnStatement	return true ;	712:2:19340:19351	3660680	0	True				
ANR	3660709	Identifier	true		3660680	0					
ANR	3660710	IdentifierDeclStatement	ClassAd tmpAd ;	715:1:19358:19371	3660680	3	True				
ANR	3660711	IdentifierDecl	tmpAd		3660680	0					
ANR	3660712	IdentifierDeclType	ClassAd		3660680	0					
ANR	3660713	Identifier	tmpAd		3660680	1					
ANR	3660714	IdentifierDeclStatement	"const char * TESTNAME = ""test"" ;"	716:1:19374:19404	3660680	4	True				
ANR	3660715	IdentifierDecl	"* TESTNAME = ""test"""		3660680	0					
ANR	3660716	IdentifierDeclType	const char *		3660680	0					
ANR	3660717	Identifier	TESTNAME		3660680	1					
ANR	3660718	AssignmentExpression	"* TESTNAME = ""test"""		3660680	2		=			
ANR	3660719	Identifier	TESTNAME		3660680	0					
ANR	3660720	PrimaryExpression	"""test"""		3660680	1					
ANR	3660721	IfStatement	"if ( tmpAd . AssignExpr ( TESTNAME , tmp ) == FALSE )"		3660680	5					
ANR	3660722	Condition	"tmpAd . AssignExpr ( TESTNAME , tmp ) == FALSE"	717:4:19410:19449	3660680	0	True				
ANR	3660723	EqualityExpression	"tmpAd . AssignExpr ( TESTNAME , tmp ) == FALSE"		3660680	0		==			
ANR	3660724	CallExpression	"tmpAd . AssignExpr ( TESTNAME , tmp )"		3660680	0					
ANR	3660725	Callee	tmpAd . AssignExpr		3660680	0					
ANR	3660726	MemberAccess	tmpAd . AssignExpr		3660680	0					
ANR	3660727	Identifier	tmpAd		3660680	0					
ANR	3660728	Identifier	AssignExpr		3660680	1					
ANR	3660729	ArgumentList	TESTNAME		3660680	1					
ANR	3660730	Argument	TESTNAME		3660680	0					
ANR	3660731	Identifier	TESTNAME		3660680	0					
ANR	3660732	Argument	tmp		3660680	1					
ANR	3660733	Identifier	tmp		3660680	0					
ANR	3660734	Identifier	FALSE		3660680	1					
ANR	3660735	CompoundStatement		11:46:281:281	3660680	1					
ANR	3660736	ExpressionStatement	"fprintf ( stderr , ""The configuration setting %s may be invalid.  Treating as TRUE.\\n"" , PARAM_ALLOW_FORCE_RM )"	719:2:19512:19618	3660680	0	True				
ANR	3660737	CallExpression	"fprintf ( stderr , ""The configuration setting %s may be invalid.  Treating as TRUE.\\n"" , PARAM_ALLOW_FORCE_RM )"		3660680	0					
ANR	3660738	Callee	fprintf		3660680	0					
ANR	3660739	Identifier	fprintf		3660680	0					
ANR	3660740	ArgumentList	stderr		3660680	1					
ANR	3660741	Argument	stderr		3660680	0					
ANR	3660742	Identifier	stderr		3660680	0					
ANR	3660743	Argument	"""The configuration setting %s may be invalid.  Treating as TRUE.\\n"""		3660680	1					
ANR	3660744	PrimaryExpression	"""The configuration setting %s may be invalid.  Treating as TRUE.\\n"""		3660680	0					
ANR	3660745	Argument	PARAM_ALLOW_FORCE_RM		3660680	2					
ANR	3660746	Identifier	PARAM_ALLOW_FORCE_RM		3660680	0					
ANR	3660747	ExpressionStatement	free ( tmp )	720:2:19622:19631	3660680	1	True				
ANR	3660748	CallExpression	free ( tmp )		3660680	0					
ANR	3660749	Callee	free		3660680	0					
ANR	3660750	Identifier	free		3660680	0					
ANR	3660751	ArgumentList	tmp		3660680	1					
ANR	3660752	Argument	tmp		3660680	0					
ANR	3660753	Identifier	tmp		3660680	0					
ANR	3660754	ReturnStatement	return true ;	721:2:19635:19646	3660680	2	True				
ANR	3660755	Identifier	true		3660680	0					
ANR	3660756	ExpressionStatement	free ( tmp )	724:1:19653:19662	3660680	6	True				
ANR	3660757	CallExpression	free ( tmp )		3660680	0					
ANR	3660758	Callee	free		3660680	0					
ANR	3660759	Identifier	free		3660680	0					
ANR	3660760	ArgumentList	tmp		3660680	1					
ANR	3660761	Argument	tmp		3660680	0					
ANR	3660762	Identifier	tmp		3660680	0					
ANR	3660763	IdentifierDeclStatement	int is_okay = 0 ;	726:1:19666:19681	3660680	7	True				
ANR	3660764	IdentifierDecl	is_okay = 0		3660680	0					
ANR	3660765	IdentifierDeclType	int		3660680	0					
ANR	3660766	Identifier	is_okay		3660680	1					
ANR	3660767	AssignmentExpression	is_okay = 0		3660680	2		=			
ANR	3660768	Identifier	is_okay		3660680	0					
ANR	3660769	PrimaryExpression	0		3660680	1					
ANR	3660770	IfStatement	"if ( tmpAd . EvalBool ( TESTNAME , 0 , is_okay ) )"		3660680	8					
ANR	3660771	Condition	"tmpAd . EvalBool ( TESTNAME , 0 , is_okay )"	727:4:19687:19722	3660680	0	True				
ANR	3660772	CallExpression	"tmpAd . EvalBool ( TESTNAME , 0 , is_okay )"		3660680	0					
ANR	3660773	Callee	tmpAd . EvalBool		3660680	0					
ANR	3660774	MemberAccess	tmpAd . EvalBool		3660680	0					
ANR	3660775	Identifier	tmpAd		3660680	0					
ANR	3660776	Identifier	EvalBool		3660680	1					
ANR	3660777	ArgumentList	TESTNAME		3660680	1					
ANR	3660778	Argument	TESTNAME		3660680	0					
ANR	3660779	Identifier	TESTNAME		3660680	0					
ANR	3660780	Argument	0		3660680	1					
ANR	3660781	PrimaryExpression	0		3660680	0					
ANR	3660782	Argument	is_okay		3660680	2					
ANR	3660783	Identifier	is_okay		3660680	0					
ANR	3660784	CompoundStatement		21:42:554:554	3660680	1					
ANR	3660785	ReturnStatement	return is_okay ;	728:2:19729:19743	3660680	0	True				
ANR	3660786	Identifier	is_okay		3660680	0					
ANR	3660787	ElseStatement	else		3660680	0					
ANR	3660788	CompoundStatement		23:8:582:582	3660680	0					
ANR	3660789	ReturnStatement	return true ;	732:2:19852:19863	3660680	0	True				
ANR	3660790	Identifier	true		3660680	0					
ANR	3660791	ReturnType	bool		3660680	1					
ANR	3660792	Identifier	mayUserForceRm		3660680	2					
ANR	3660793	ParameterList			3660680	3					
ANR	3660794	CFGEntryNode	ENTRY		3660680		True				
ANR	3660795	CFGExitNode	EXIT		3660680		True				
ANR	3660796	Symbol	NULL		3660680						
ANR	3660797	Symbol	is_okay		3660680						
ANR	3660798	Symbol	param		3660680						
ANR	3660799	Symbol	tmp		3660680						
ANR	3660800	Symbol	true		3660680						
ANR	3660801	Symbol	TESTNAME		3660680						
ANR	3660802	Symbol	tmpAd . AssignExpr		3660680						
ANR	3660803	Symbol	FALSE		3660680						
ANR	3660804	Symbol	tmpAd . EvalBool		3660680						
ANR	3660805	Symbol	PARAM_ALLOW_FORCE_RM		3660680						
ANR	3660806	Symbol	stderr		3660680						
ANR	3660807	Symbol	tmpAd		3660680						
ANR	3660808	Function	handleAll	737:0:19872:20424							
ANR	3660809	FunctionDef	handleAll ()		3660808	0					
ANR	3660810	CompoundStatement		739:0:19889:20424	3660808	0					
ANR	3660811	IdentifierDeclStatement	char constraint [ 128 ] ;	740:1:19892:19912	3660808	0	True				
ANR	3660812	IdentifierDecl	constraint [ 128 ]		3660808	0					
ANR	3660813	IdentifierDeclType	char [ 128 ]		3660808	0					
ANR	3660814	Identifier	constraint		3660808	1					
ANR	3660815	PrimaryExpression	128		3660808	2					
ANR	3660816	ExpressionStatement	"sprintf ( constraint , ""%s >= 0"" , ATTR_CLUSTER_ID )"	741:1:19915:19964	3660808	1	True				
ANR	3660817	CallExpression	"sprintf ( constraint , ""%s >= 0"" , ATTR_CLUSTER_ID )"		3660808	0					
ANR	3660818	Callee	sprintf		3660808	0					
ANR	3660819	Identifier	sprintf		3660808	0					
ANR	3660820	ArgumentList	constraint		3660808	1					
ANR	3660821	Argument	constraint		3660808	0					
ANR	3660822	Identifier	constraint		3660808	0					
ANR	3660823	Argument	"""%s >= 0"""		3660808	1					
ANR	3660824	PrimaryExpression	"""%s >= 0"""		3660808	0					
ANR	3660825	Argument	ATTR_CLUSTER_ID		3660808	2					
ANR	3660826	Identifier	ATTR_CLUSTER_ID		3660808	0					
ANR	3660827	IdentifierDeclStatement	CondorError errstack ;	743:1:19968:19988	3660808	2	True				
ANR	3660828	IdentifierDecl	errstack		3660808	0					
ANR	3660829	IdentifierDeclType	CondorError		3660808	0					
ANR	3660830	Identifier	errstack		3660808	1					
ANR	3660831	IfStatement	"if ( doWorkByConstraint ( constraint , & errstack ) )"		3660808	3					
ANR	3660832	Condition	"doWorkByConstraint ( constraint , & errstack )"	744:5:19995:20035	3660808	0	True				
ANR	3660833	CallExpression	"doWorkByConstraint ( constraint , & errstack )"		3660808	0					
ANR	3660834	Callee	doWorkByConstraint		3660808	0					
ANR	3660835	Identifier	doWorkByConstraint		3660808	0					
ANR	3660836	ArgumentList	constraint		3660808	1					
ANR	3660837	Argument	constraint		3660808	0					
ANR	3660838	Identifier	constraint		3660808	0					
ANR	3660839	Argument	& errstack		3660808	1					
ANR	3660840	UnaryOperationExpression	& errstack		3660808	0					
ANR	3660841	UnaryOperator	&		3660808	0					
ANR	3660842	Identifier	errstack		3660808	1					
ANR	3660843	CompoundStatement		6:49:149:149	3660808	1					
ANR	3660844	ExpressionStatement	"fprintf ( stdout , ""All jobs %s.\\n"" , ( mode == JA_REMOVE_JOBS ) ? ""marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""removed locally (remote state unknown)"" : actionWord ( mode , true ) )"	745:2:20043:20248	3660808	0	True				
ANR	3660845	CallExpression	"fprintf ( stdout , ""All jobs %s.\\n"" , ( mode == JA_REMOVE_JOBS ) ? ""marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""removed locally (remote state unknown)"" : actionWord ( mode , true ) )"		3660808	0					
ANR	3660846	Callee	fprintf		3660808	0					
ANR	3660847	Identifier	fprintf		3660808	0					
ANR	3660848	ArgumentList	stdout		3660808	1					
ANR	3660849	Argument	stdout		3660808	0					
ANR	3660850	Identifier	stdout		3660808	0					
ANR	3660851	Argument	"""All jobs %s.\\n"""		3660808	1					
ANR	3660852	PrimaryExpression	"""All jobs %s.\\n"""		3660808	0					
ANR	3660853	Argument	"( mode == JA_REMOVE_JOBS ) ? ""marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""removed locally (remote state unknown)"" : actionWord ( mode , true )"		3660808	2					
ANR	3660854	ConditionalExpression	"( mode == JA_REMOVE_JOBS ) ? ""marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""removed locally (remote state unknown)"" : actionWord ( mode , true )"		3660808	0					
ANR	3660855	Condition	mode == JA_REMOVE_JOBS		3660808	0					
ANR	3660856	EqualityExpression	mode == JA_REMOVE_JOBS		3660808	0		==			
ANR	3660857	Identifier	mode		3660808	0					
ANR	3660858	Identifier	JA_REMOVE_JOBS		3660808	1					
ANR	3660859	PrimaryExpression	"""marked for removal"""		3660808	1					
ANR	3660860	ConditionalExpression	"( mode == JA_REMOVE_X_JOBS ) ? ""removed locally (remote state unknown)"" : actionWord ( mode , true )"		3660808	2					
ANR	3660861	Condition	mode == JA_REMOVE_X_JOBS		3660808	0					
ANR	3660862	EqualityExpression	mode == JA_REMOVE_X_JOBS		3660808	0		==			
ANR	3660863	Identifier	mode		3660808	0					
ANR	3660864	Identifier	JA_REMOVE_X_JOBS		3660808	1					
ANR	3660865	PrimaryExpression	"""removed locally (remote state unknown)"""		3660808	1					
ANR	3660866	CallExpression	"actionWord ( mode , true )"		3660808	2					
ANR	3660867	Callee	actionWord		3660808	0					
ANR	3660868	Identifier	actionWord		3660808	0					
ANR	3660869	ArgumentList	mode		3660808	1					
ANR	3660870	Argument	mode		3660808	0					
ANR	3660871	Identifier	mode		3660808	0					
ANR	3660872	Argument	true		3660808	1					
ANR	3660873	Identifier	true		3660808	0					
ANR	3660874	ElseStatement	else		3660808	0					
ANR	3660875	CompoundStatement		13:8:368:368	3660808	0					
ANR	3660876	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"	752:2:20262:20315	3660808	0	True				
ANR	3660877	CallExpression	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"		3660808	0					
ANR	3660878	Callee	fprintf		3660808	0					
ANR	3660879	Identifier	fprintf		3660808	0					
ANR	3660880	ArgumentList	stderr		3660808	1					
ANR	3660881	Argument	stderr		3660808	0					
ANR	3660882	Identifier	stderr		3660808	0					
ANR	3660883	Argument	"""%s\\n"""		3660808	1					
ANR	3660884	PrimaryExpression	"""%s\\n"""		3660808	0					
ANR	3660885	Argument	errstack . getFullText ( true )		3660808	2					
ANR	3660886	CallExpression	errstack . getFullText ( true )		3660808	0					
ANR	3660887	Callee	errstack . getFullText		3660808	0					
ANR	3660888	MemberAccess	errstack . getFullText		3660808	0					
ANR	3660889	Identifier	errstack		3660808	0					
ANR	3660890	Identifier	getFullText		3660808	1					
ANR	3660891	ArgumentList	true		3660808	1					
ANR	3660892	Argument	true		3660808	0					
ANR	3660893	Identifier	true		3660808	0					
ANR	3660894	IfStatement	if ( had_error )		3660808	1					
ANR	3660895	Condition	had_error	753:6:20323:20331	3660808	0	True				
ANR	3660896	Identifier	had_error		3660808	0					
ANR	3660897	CompoundStatement		16:2:446:446	3660808	1					
ANR	3660898	ExpressionStatement	"fprintf ( stderr , ""Could not %s all jobs.\\n"" , actionWord ( mode , false ) )"	755:3:20341:20415	3660808	0	True				
ANR	3660899	CallExpression	"fprintf ( stderr , ""Could not %s all jobs.\\n"" , actionWord ( mode , false ) )"		3660808	0					
ANR	3660900	Callee	fprintf		3660808	0					
ANR	3660901	Identifier	fprintf		3660808	0					
ANR	3660902	ArgumentList	stderr		3660808	1					
ANR	3660903	Argument	stderr		3660808	0					
ANR	3660904	Identifier	stderr		3660808	0					
ANR	3660905	Argument	"""Could not %s all jobs.\\n"""		3660808	1					
ANR	3660906	PrimaryExpression	"""Could not %s all jobs.\\n"""		3660808	0					
ANR	3660907	Argument	"actionWord ( mode , false )"		3660808	2					
ANR	3660908	CallExpression	"actionWord ( mode , false )"		3660808	0					
ANR	3660909	Callee	actionWord		3660808	0					
ANR	3660910	Identifier	actionWord		3660808	0					
ANR	3660911	ArgumentList	mode		3660808	1					
ANR	3660912	Argument	mode		3660808	0					
ANR	3660913	Identifier	mode		3660808	0					
ANR	3660914	Argument	false		3660808	1					
ANR	3660915	Identifier	false		3660808	0					
ANR	3660916	ReturnType	void		3660808	1					
ANR	3660917	Identifier	handleAll		3660808	2					
ANR	3660918	ParameterList			3660808	3					
ANR	3660919	CFGEntryNode	ENTRY		3660808		True				
ANR	3660920	CFGExitNode	EXIT		3660808		True				
ANR	3660921	Symbol	actionWord		3660808						
ANR	3660922	Symbol	stdout		3660808						
ANR	3660923	Symbol	false		3660808						
ANR	3660924	Symbol	JA_REMOVE_JOBS		3660808						
ANR	3660925	Symbol	stderr		3660808						
ANR	3660926	Symbol	doWorkByConstraint		3660808						
ANR	3660927	Symbol	mode		3660808						
ANR	3660928	Symbol	JA_REMOVE_X_JOBS		3660808						
ANR	3660929	Symbol	ATTR_CLUSTER_ID		3660808						
ANR	3660930	Symbol	errstack		3660808						
ANR	3660931	Symbol	true		3660808						
ANR	3660932	Symbol	& errstack		3660808						
ANR	3660933	Symbol	errstack . getFullText		3660808						
ANR	3660934	Symbol	constraint		3660808						
ANR	3660935	Symbol	had_error		3660808						
ANR	3660936	Function	handleConstraints	762:0:20428:21078							
ANR	3660937	FunctionDef	handleConstraints ()		3660936	0					
ANR	3660938	CompoundStatement		764:0:20459:21078	3660936	0					
ANR	3660939	IfStatement	if ( ! has_constraint )		3660936	0					
ANR	3660940	Condition	! has_constraint	765:5:20466:20481	3660936	0	True				
ANR	3660941	UnaryOperationExpression	! has_constraint		3660936	0					
ANR	3660942	UnaryOperator	!		3660936	0					
ANR	3660943	Identifier	has_constraint		3660936	1					
ANR	3660944	CompoundStatement		2:24:25:25	3660936	1					
ANR	3660945	ReturnStatement	return ;	766:2:20489:20495	3660936	0	True				
ANR	3660946	IdentifierDeclStatement	const char * tmp = global_constraint . Value ( ) ;	768:1:20501:20544	3660936	1	True				
ANR	3660947	IdentifierDecl	* tmp = global_constraint . Value ( )		3660936	0					
ANR	3660948	IdentifierDeclType	const char *		3660936	0					
ANR	3660949	Identifier	tmp		3660936	1					
ANR	3660950	AssignmentExpression	* tmp = global_constraint . Value ( )		3660936	2		=			
ANR	3660951	Identifier	tmp		3660936	0					
ANR	3660952	CallExpression	global_constraint . Value ( )		3660936	1					
ANR	3660953	Callee	global_constraint . Value		3660936	0					
ANR	3660954	MemberAccess	global_constraint . Value		3660936	0					
ANR	3660955	Identifier	global_constraint		3660936	0					
ANR	3660956	Identifier	Value		3660936	1					
ANR	3660957	ArgumentList			3660936	1					
ANR	3660958	IdentifierDeclStatement	CondorError errstack ;	770:1:20548:20568	3660936	2	True				
ANR	3660959	IdentifierDecl	errstack		3660936	0					
ANR	3660960	IdentifierDeclType	CondorError		3660936	0					
ANR	3660961	Identifier	errstack		3660936	1					
ANR	3660962	IfStatement	"if ( doWorkByConstraint ( tmp , & errstack ) )"		3660936	3					
ANR	3660963	Condition	"doWorkByConstraint ( tmp , & errstack )"	771:5:20575:20608	3660936	0	True				
ANR	3660964	CallExpression	"doWorkByConstraint ( tmp , & errstack )"		3660936	0					
ANR	3660965	Callee	doWorkByConstraint		3660936	0					
ANR	3660966	Identifier	doWorkByConstraint		3660936	0					
ANR	3660967	ArgumentList	tmp		3660936	1					
ANR	3660968	Argument	tmp		3660936	0					
ANR	3660969	Identifier	tmp		3660936	0					
ANR	3660970	Argument	& errstack		3660936	1					
ANR	3660971	UnaryOperationExpression	& errstack		3660936	0					
ANR	3660972	UnaryOperator	&		3660936	0					
ANR	3660973	Identifier	errstack		3660936	1					
ANR	3660974	CompoundStatement		8:42:152:152	3660936	1					
ANR	3660975	ExpressionStatement	"fprintf ( stdout , ""Jobs matching constraint %s %s\\n"" , tmp , ( mode == JA_REMOVE_JOBS ) ? ""have been marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""have been removed locally (remote state unknown)"" : actionWord ( mode , true ) )"	772:2:20616:20864	3660936	0	True				
ANR	3660976	CallExpression	"fprintf ( stdout , ""Jobs matching constraint %s %s\\n"" , tmp , ( mode == JA_REMOVE_JOBS ) ? ""have been marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""have been removed locally (remote state unknown)"" : actionWord ( mode , true ) )"		3660936	0					
ANR	3660977	Callee	fprintf		3660936	0					
ANR	3660978	Identifier	fprintf		3660936	0					
ANR	3660979	ArgumentList	stdout		3660936	1					
ANR	3660980	Argument	stdout		3660936	0					
ANR	3660981	Identifier	stdout		3660936	0					
ANR	3660982	Argument	"""Jobs matching constraint %s %s\\n"""		3660936	1					
ANR	3660983	PrimaryExpression	"""Jobs matching constraint %s %s\\n"""		3660936	0					
ANR	3660984	Argument	tmp		3660936	2					
ANR	3660985	Identifier	tmp		3660936	0					
ANR	3660986	Argument	"( mode == JA_REMOVE_JOBS ) ? ""have been marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""have been removed locally (remote state unknown)"" : actionWord ( mode , true )"		3660936	3					
ANR	3660987	ConditionalExpression	"( mode == JA_REMOVE_JOBS ) ? ""have been marked for removal"" : ( mode == JA_REMOVE_X_JOBS ) ? ""have been removed locally (remote state unknown)"" : actionWord ( mode , true )"		3660936	0					
ANR	3660988	Condition	mode == JA_REMOVE_JOBS		3660936	0					
ANR	3660989	EqualityExpression	mode == JA_REMOVE_JOBS		3660936	0		==			
ANR	3660990	Identifier	mode		3660936	0					
ANR	3660991	Identifier	JA_REMOVE_JOBS		3660936	1					
ANR	3660992	PrimaryExpression	"""have been marked for removal"""		3660936	1					
ANR	3660993	ConditionalExpression	"( mode == JA_REMOVE_X_JOBS ) ? ""have been removed locally (remote state unknown)"" : actionWord ( mode , true )"		3660936	2					
ANR	3660994	Condition	mode == JA_REMOVE_X_JOBS		3660936	0					
ANR	3660995	EqualityExpression	mode == JA_REMOVE_X_JOBS		3660936	0		==			
ANR	3660996	Identifier	mode		3660936	0					
ANR	3660997	Identifier	JA_REMOVE_X_JOBS		3660936	1					
ANR	3660998	PrimaryExpression	"""have been removed locally (remote state unknown)"""		3660936	1					
ANR	3660999	CallExpression	"actionWord ( mode , true )"		3660936	2					
ANR	3661000	Callee	actionWord		3660936	0					
ANR	3661001	Identifier	actionWord		3660936	0					
ANR	3661002	ArgumentList	mode		3660936	1					
ANR	3661003	Argument	mode		3660936	0					
ANR	3661004	Identifier	mode		3660936	0					
ANR	3661005	Argument	true		3660936	1					
ANR	3661006	Identifier	true		3660936	0					
ANR	3661007	ElseStatement	else		3660936	0					
ANR	3661008	CompoundStatement		16:8:415:415	3660936	0					
ANR	3661009	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"	780:2:20879:20932	3660936	0	True				
ANR	3661010	CallExpression	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"		3660936	0					
ANR	3661011	Callee	fprintf		3660936	0					
ANR	3661012	Identifier	fprintf		3660936	0					
ANR	3661013	ArgumentList	stderr		3660936	1					
ANR	3661014	Argument	stderr		3660936	0					
ANR	3661015	Identifier	stderr		3660936	0					
ANR	3661016	Argument	"""%s\\n"""		3660936	1					
ANR	3661017	PrimaryExpression	"""%s\\n"""		3660936	0					
ANR	3661018	Argument	errstack . getFullText ( true )		3660936	2					
ANR	3661019	CallExpression	errstack . getFullText ( true )		3660936	0					
ANR	3661020	Callee	errstack . getFullText		3660936	0					
ANR	3661021	MemberAccess	errstack . getFullText		3660936	0					
ANR	3661022	Identifier	errstack		3660936	0					
ANR	3661023	Identifier	getFullText		3660936	1					
ANR	3661024	ArgumentList	true		3660936	1					
ANR	3661025	Argument	true		3660936	0					
ANR	3661026	Identifier	true		3660936	0					
ANR	3661027	IfStatement	if ( had_error )		3660936	1					
ANR	3661028	Condition	had_error	781:6:20940:20948	3660936	0	True				
ANR	3661029	Identifier	had_error		3660936	0					
ANR	3661030	CompoundStatement		19:2:493:493	3660936	1					
ANR	3661031	ExpressionStatement	"fprintf ( stderr , ""Couldn't find/%s all jobs matching constraint %s\\n"" , actionWord ( mode , false ) , tmp )"	783:3:20958:21069	3660936	0	True				
ANR	3661032	CallExpression	"fprintf ( stderr , ""Couldn't find/%s all jobs matching constraint %s\\n"" , actionWord ( mode , false ) , tmp )"		3660936	0					
ANR	3661033	Callee	fprintf		3660936	0					
ANR	3661034	Identifier	fprintf		3660936	0					
ANR	3661035	ArgumentList	stderr		3660936	1					
ANR	3661036	Argument	stderr		3660936	0					
ANR	3661037	Identifier	stderr		3660936	0					
ANR	3661038	Argument	"""Couldn't find/%s all jobs matching constraint %s\\n"""		3660936	1					
ANR	3661039	PrimaryExpression	"""Couldn't find/%s all jobs matching constraint %s\\n"""		3660936	0					
ANR	3661040	Argument	"actionWord ( mode , false )"		3660936	2					
ANR	3661041	CallExpression	"actionWord ( mode , false )"		3660936	0					
ANR	3661042	Callee	actionWord		3660936	0					
ANR	3661043	Identifier	actionWord		3660936	0					
ANR	3661044	ArgumentList	mode		3660936	1					
ANR	3661045	Argument	mode		3660936	0					
ANR	3661046	Identifier	mode		3660936	0					
ANR	3661047	Argument	false		3660936	1					
ANR	3661048	Identifier	false		3660936	0					
ANR	3661049	Argument	tmp		3660936	3					
ANR	3661050	Identifier	tmp		3660936	0					
ANR	3661051	ReturnType	void		3660936	1					
ANR	3661052	Identifier	handleConstraints		3660936	2					
ANR	3661053	ParameterList			3660936	3					
ANR	3661054	CFGEntryNode	ENTRY		3660936		True				
ANR	3661055	CFGExitNode	EXIT		3660936		True				
ANR	3661056	Symbol	actionWord		3660936						
ANR	3661057	Symbol	stdout		3660936						
ANR	3661058	Symbol	global_constraint . Value		3660936						
ANR	3661059	Symbol	false		3660936						
ANR	3661060	Symbol	JA_REMOVE_JOBS		3660936						
ANR	3661061	Symbol	stderr		3660936						
ANR	3661062	Symbol	doWorkByConstraint		3660936						
ANR	3661063	Symbol	has_constraint		3660936						
ANR	3661064	Symbol	mode		3660936						
ANR	3661065	Symbol	global_constraint		3660936						
ANR	3661066	Symbol	JA_REMOVE_X_JOBS		3660936						
ANR	3661067	Symbol	errstack		3660936						
ANR	3661068	Symbol	tmp		3660936						
ANR	3661069	Symbol	true		3660936						
ANR	3661070	Symbol	& errstack		3660936						
ANR	3661071	Symbol	errstack . getFullText		3660936						
ANR	3661072	Symbol	had_error		3660936						
ANR	3661073	Function	printNewMessages	791:0:21082:21513							
ANR	3661074	FunctionDef	"printNewMessages (ClassAd * result_ad , StringList * ids)"		3661073	0					
ANR	3661075	CompoundStatement		793:0:21143:21513	3661073	0					
ANR	3661076	IdentifierDeclStatement	char * tmp ;	794:1:21146:21155	3661073	0	True				
ANR	3661077	IdentifierDecl	* tmp		3661073	0					
ANR	3661078	IdentifierDeclType	char *		3661073	0					
ANR	3661079	Identifier	tmp		3661073	1					
ANR	3661080	IdentifierDeclStatement	char * msg ;	795:1:21158:21167	3661073	1	True				
ANR	3661081	IdentifierDecl	* msg		3661073	0					
ANR	3661082	IdentifierDeclType	char *		3661073	0					
ANR	3661083	Identifier	msg		3661073	1					
ANR	3661084	IdentifierDeclStatement	PROC_ID job_id ;	796:1:21170:21184	3661073	2	True				
ANR	3661085	IdentifierDecl	job_id		3661073	0					
ANR	3661086	IdentifierDeclType	PROC_ID		3661073	0					
ANR	3661087	Identifier	job_id		3661073	1					
ANR	3661088	IdentifierDeclStatement	bool rval ;	797:1:21187:21196	3661073	3	True				
ANR	3661089	IdentifierDecl	rval		3661073	0					
ANR	3661090	IdentifierDeclType	bool		3661073	0					
ANR	3661091	Identifier	rval		3661073	1					
ANR	3661092	IdentifierDeclStatement	JobActionResults results ;	799:1:21200:21224	3661073	4	True				
ANR	3661093	IdentifierDecl	results		3661073	0					
ANR	3661094	IdentifierDeclType	JobActionResults		3661073	0					
ANR	3661095	Identifier	results		3661073	1					
ANR	3661096	ExpressionStatement	results . readResults ( result_ad )	800:1:21227:21259	3661073	5	True				
ANR	3661097	CallExpression	results . readResults ( result_ad )		3661073	0					
ANR	3661098	Callee	results . readResults		3661073	0					
ANR	3661099	MemberAccess	results . readResults		3661073	0					
ANR	3661100	Identifier	results		3661073	0					
ANR	3661101	Identifier	readResults		3661073	1					
ANR	3661102	ArgumentList	result_ad		3661073	1					
ANR	3661103	Argument	result_ad		3661073	0					
ANR	3661104	Identifier	result_ad		3661073	0					
ANR	3661105	ExpressionStatement	ids -> rewind ( )	802:1:21263:21276	3661073	6	True				
ANR	3661106	CallExpression	ids -> rewind ( )		3661073	0					
ANR	3661107	Callee	ids -> rewind		3661073	0					
ANR	3661108	PtrMemberAccess	ids -> rewind		3661073	0					
ANR	3661109	Identifier	ids		3661073	0					
ANR	3661110	Identifier	rewind		3661073	1					
ANR	3661111	ArgumentList			3661073	1					
ANR	3661112	WhileStatement	while ( ( tmp = ids -> next ( ) ) )		3661073	7					
ANR	3661113	Condition	tmp = ids -> next ( )	803:8:21286:21304	3661073	0	True				
ANR	3661114	AssignmentExpression	tmp = ids -> next ( )		3661073	0		=			
ANR	3661115	Identifier	tmp		3661073	0					
ANR	3661116	CallExpression	ids -> next ( )		3661073	1					
ANR	3661117	Callee	ids -> next		3661073	0					
ANR	3661118	PtrMemberAccess	ids -> next		3661073	0					
ANR	3661119	Identifier	ids		3661073	0					
ANR	3661120	Identifier	next		3661073	1					
ANR	3661121	ArgumentList			3661073	1					
ANR	3661122	CompoundStatement		11:30:164:164	3661073	1					
ANR	3661123	ExpressionStatement	job_id = getProcByString ( tmp )	804:2:21312:21343	3661073	0	True				
ANR	3661124	AssignmentExpression	job_id = getProcByString ( tmp )		3661073	0		=			
ANR	3661125	Identifier	job_id		3661073	0					
ANR	3661126	CallExpression	getProcByString ( tmp )		3661073	1					
ANR	3661127	Callee	getProcByString		3661073	0					
ANR	3661128	Identifier	getProcByString		3661073	0					
ANR	3661129	ArgumentList	tmp		3661073	1					
ANR	3661130	Argument	tmp		3661073	0					
ANR	3661131	Identifier	tmp		3661073	0					
ANR	3661132	ExpressionStatement	"rval = results . getResultString ( job_id , & msg )"	805:2:21347:21393	3661073	1	True				
ANR	3661133	AssignmentExpression	"rval = results . getResultString ( job_id , & msg )"		3661073	0		=			
ANR	3661134	Identifier	rval		3661073	0					
ANR	3661135	CallExpression	"results . getResultString ( job_id , & msg )"		3661073	1					
ANR	3661136	Callee	results . getResultString		3661073	0					
ANR	3661137	MemberAccess	results . getResultString		3661073	0					
ANR	3661138	Identifier	results		3661073	0					
ANR	3661139	Identifier	getResultString		3661073	1					
ANR	3661140	ArgumentList	job_id		3661073	1					
ANR	3661141	Argument	job_id		3661073	0					
ANR	3661142	Identifier	job_id		3661073	0					
ANR	3661143	Argument	& msg		3661073	1					
ANR	3661144	UnaryOperationExpression	& msg		3661073	0					
ANR	3661145	UnaryOperator	&		3661073	0					
ANR	3661146	Identifier	msg		3661073	1					
ANR	3661147	IfStatement	if ( rval )		3661073	2					
ANR	3661148	Condition	rval	806:6:21401:21404	3661073	0	True				
ANR	3661149	Identifier	rval		3661073	0					
ANR	3661150	CompoundStatement		14:13:264:264	3661073	1					
ANR	3661151	ExpressionStatement	"fprintf ( stdout , ""%s\\n"" , msg )"	807:3:21413:21443	3661073	0	True				
ANR	3661152	CallExpression	"fprintf ( stdout , ""%s\\n"" , msg )"		3661073	0					
ANR	3661153	Callee	fprintf		3661073	0					
ANR	3661154	Identifier	fprintf		3661073	0					
ANR	3661155	ArgumentList	stdout		3661073	1					
ANR	3661156	Argument	stdout		3661073	0					
ANR	3661157	Identifier	stdout		3661073	0					
ANR	3661158	Argument	"""%s\\n"""		3661073	1					
ANR	3661159	PrimaryExpression	"""%s\\n"""		3661073	0					
ANR	3661160	Argument	msg		3661073	2					
ANR	3661161	Identifier	msg		3661073	0					
ANR	3661162	ElseStatement	else		3661073	0					
ANR	3661163	CompoundStatement		16:9:310:310	3661073	0					
ANR	3661164	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , msg )"	809:3:21459:21489	3661073	0	True				
ANR	3661165	CallExpression	"fprintf ( stderr , ""%s\\n"" , msg )"		3661073	0					
ANR	3661166	Callee	fprintf		3661073	0					
ANR	3661167	Identifier	fprintf		3661073	0					
ANR	3661168	ArgumentList	stderr		3661073	1					
ANR	3661169	Argument	stderr		3661073	0					
ANR	3661170	Identifier	stderr		3661073	0					
ANR	3661171	Argument	"""%s\\n"""		3661073	1					
ANR	3661172	PrimaryExpression	"""%s\\n"""		3661073	0					
ANR	3661173	Argument	msg		3661073	2					
ANR	3661174	Identifier	msg		3661073	0					
ANR	3661175	ExpressionStatement	free ( msg )	811:2:21497:21508	3661073	3	True				
ANR	3661176	CallExpression	free ( msg )		3661073	0					
ANR	3661177	Callee	free		3661073	0					
ANR	3661178	Identifier	free		3661073	0					
ANR	3661179	ArgumentList	msg		3661073	1					
ANR	3661180	Argument	msg		3661073	0					
ANR	3661181	Identifier	msg		3661073	0					
ANR	3661182	ReturnType	void		3661073	1					
ANR	3661183	Identifier	printNewMessages		3661073	2					
ANR	3661184	ParameterList	"ClassAd * result_ad , StringList * ids"		3661073	3					
ANR	3661185	Parameter	ClassAd * result_ad	792:18:21105:21122	3661073	0	True				
ANR	3661186	ParameterType	ClassAd *		3661073	0					
ANR	3661187	Identifier	result_ad		3661073	1					
ANR	3661188	Parameter	StringList * ids	792:38:21125:21139	3661073	1	True				
ANR	3661189	ParameterType	StringList *		3661073	0					
ANR	3661190	Identifier	ids		3661073	1					
ANR	3661191	CFGEntryNode	ENTRY		3661073		True				
ANR	3661192	CFGExitNode	EXIT		3661073		True				
ANR	3661193	Symbol	msg		3661073						
ANR	3661194	Symbol	& msg		3661073						
ANR	3661195	Symbol	stdout		3661073						
ANR	3661196	Symbol	ids -> next		3661073						
ANR	3661197	Symbol	results . getResultString		3661073						
ANR	3661198	Symbol	stderr		3661073						
ANR	3661199	Symbol	result_ad		3661073						
ANR	3661200	Symbol	tmp		3661073						
ANR	3661201	Symbol	job_id		3661073						
ANR	3661202	Symbol	ids		3661073						
ANR	3661203	Symbol	rval		3661073						
ANR	3661204	Symbol	results		3661073						
ANR	3661205	Symbol	* ids		3661073						
ANR	3661206	Symbol	getProcByString		3661073						
