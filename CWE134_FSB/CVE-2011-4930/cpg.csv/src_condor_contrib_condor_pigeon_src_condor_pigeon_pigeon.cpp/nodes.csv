command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2904916	File	data/converged/CVE-2011-4930_htcondor/src_condor_contrib_condor_pigeon_src_condor_pigeon_pigeon.cpp								
ANR	2904917	Function	clean	44:0:1266:1492							
ANR	2904918	FunctionDef	clean ()		2904917	0					
ANR	2904919	CompoundStatement		45:0:1283:1492	2904917	0					
ANR	2904920	ExpressionStatement	"dprintf ( D_ALWAYS , ""clean called ... \\n"" )"	46:2:1287:1327	2904917	0	True				
ANR	2904921	CallExpression	"dprintf ( D_ALWAYS , ""clean called ... \\n"" )"		2904917	0					
ANR	2904922	Callee	dprintf		2904917	0					
ANR	2904923	Identifier	dprintf		2904917	0					
ANR	2904924	ArgumentList	D_ALWAYS		2904917	1					
ANR	2904925	Argument	D_ALWAYS		2904917	0					
ANR	2904926	Identifier	D_ALWAYS		2904917	0					
ANR	2904927	Argument	"""clean called ... \\n"""		2904917	1					
ANR	2904928	PrimaryExpression	"""clean called ... \\n"""		2904917	0					
ANR	2904929	IdentifierDeclStatement	char * path = getPortPath ( ) ;	47:2:1331:1357	2904917	1	True				
ANR	2904930	IdentifierDecl	* path = getPortPath ( )		2904917	0					
ANR	2904931	IdentifierDeclType	char *		2904917	0					
ANR	2904932	Identifier	path		2904917	1					
ANR	2904933	AssignmentExpression	* path = getPortPath ( )		2904917	2		=			
ANR	2904934	Identifier	path		2904917	0					
ANR	2904935	CallExpression	getPortPath ( )		2904917	1					
ANR	2904936	Callee	getPortPath		2904917	0					
ANR	2904937	Identifier	getPortPath		2904917	0					
ANR	2904938	ArgumentList			2904917	1					
ANR	2904939	IdentifierDeclStatement	int res = unlink ( path ) ;	48:2:1362:1384	2904917	2	True				
ANR	2904940	IdentifierDecl	res = unlink ( path )		2904917	0					
ANR	2904941	IdentifierDeclType	int		2904917	0					
ANR	2904942	Identifier	res		2904917	1					
ANR	2904943	AssignmentExpression	res = unlink ( path )		2904917	2		=			
ANR	2904944	Identifier	res		2904917	0					
ANR	2904945	CallExpression	unlink ( path )		2904917	1					
ANR	2904946	Callee	unlink		2904917	0					
ANR	2904947	Identifier	unlink		2904917	0					
ANR	2904948	ArgumentList	path		2904917	1					
ANR	2904949	Argument	path		2904917	0					
ANR	2904950	Identifier	path		2904917	0					
ANR	2904951	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unlink %s ended with status %i and errno %i \\n"" , path , res , errno )"	49:2:1388:1473	2904917	3	True				
ANR	2904952	CallExpression	"dprintf ( D_ALWAYS , ""Unlink %s ended with status %i and errno %i \\n"" , path , res , errno )"		2904917	0					
ANR	2904953	Callee	dprintf		2904917	0					
ANR	2904954	Identifier	dprintf		2904917	0					
ANR	2904955	ArgumentList	D_ALWAYS		2904917	1					
ANR	2904956	Argument	D_ALWAYS		2904917	0					
ANR	2904957	Identifier	D_ALWAYS		2904917	0					
ANR	2904958	Argument	"""Unlink %s ended with status %i and errno %i \\n"""		2904917	1					
ANR	2904959	PrimaryExpression	"""Unlink %s ended with status %i and errno %i \\n"""		2904917	0					
ANR	2904960	Argument	path		2904917	2					
ANR	2904961	Identifier	path		2904917	0					
ANR	2904962	Argument	res		2904917	3					
ANR	2904963	Identifier	res		2904917	0					
ANR	2904964	Argument	errno		2904917	4					
ANR	2904965	Identifier	errno		2904917	0					
ANR	2904966	ExpressionStatement	free ( path )	50:2:1477:1487	2904917	4	True				
ANR	2904967	CallExpression	free ( path )		2904917	0					
ANR	2904968	Callee	free		2904917	0					
ANR	2904969	Identifier	free		2904917	0					
ANR	2904970	ArgumentList	path		2904917	1					
ANR	2904971	Argument	path		2904917	0					
ANR	2904972	Identifier	path		2904917	0					
ANR	2904973	ReturnType	void		2904917	1					
ANR	2904974	Identifier	clean		2904917	2					
ANR	2904975	ParameterList			2904917	3					
ANR	2904976	CFGEntryNode	ENTRY		2904917		True				
ANR	2904977	CFGExitNode	EXIT		2904917		True				
ANR	2904978	Symbol	path		2904917						
ANR	2904979	Symbol	res		2904917						
ANR	2904980	Symbol	errno		2904917						
ANR	2904981	Symbol	unlink		2904917						
ANR	2904982	Symbol	D_ALWAYS		2904917						
ANR	2904983	Symbol	getPortPath		2904917						
ANR	2904984	Function	Pigeon :: Pigeon	57:0:1510:1705							
ANR	2904985	FunctionDef	Pigeon :: Pigeon ()		2904984	0					
ANR	2904986	CompoundStatement		57:17:1527:1705	2904984	0					
ANR	2904987	ExpressionStatement	m_pid = - 1	58:2:1532:1545	2904984	0	True				
ANR	2904988	AssignmentExpression	m_pid = - 1		2904984	0		=			
ANR	2904989	Identifier	m_pid		2904984	0					
ANR	2904990	UnaryOperationExpression	- 1		2904984	1					
ANR	2904991	UnaryOperator	-		2904984	0					
ANR	2904992	PrimaryExpression	1		2904984	1					
ANR	2904993	ExpressionStatement	m_stdOut = - 1	59:2:1549:1570	2904984	1	True				
ANR	2904994	AssignmentExpression	m_stdOut = - 1		2904984	0		=			
ANR	2904995	Identifier	m_stdOut		2904984	0					
ANR	2904996	UnaryOperationExpression	- 1		2904984	1					
ANR	2904997	UnaryOperator	-		2904984	0					
ANR	2904998	PrimaryExpression	1		2904984	1					
ANR	2904999	ExpressionStatement	m_stdErr = - 1	60:2:1574:1595	2904984	2	True				
ANR	2905000	AssignmentExpression	m_stdErr = - 1		2904984	0		=			
ANR	2905001	Identifier	m_stdErr		2904984	0					
ANR	2905002	UnaryOperationExpression	- 1		2904984	1					
ANR	2905003	UnaryOperator	-		2904984	0					
ANR	2905004	PrimaryExpression	1		2904984	1					
ANR	2905005	ExpressionStatement	m_reaper = - 1	61:2:1599:1620	2904984	3	True				
ANR	2905006	AssignmentExpression	m_reaper = - 1		2904984	0		=			
ANR	2905007	Identifier	m_reaper		2904984	0					
ANR	2905008	UnaryOperationExpression	- 1		2904984	1					
ANR	2905009	UnaryOperator	-		2904984	0					
ANR	2905010	PrimaryExpression	1		2904984	1					
ANR	2905011	ExpressionStatement	m_state = STATE_NULL	62:2:1624:1653	2904984	4	True				
ANR	2905012	AssignmentExpression	m_state = STATE_NULL		2904984	0		=			
ANR	2905013	Identifier	m_state		2904984	0					
ANR	2905014	Identifier	STATE_NULL		2904984	1					
ANR	2905015	ExpressionStatement	m_adPubInterval = 30	63:2:1657:1678	2904984	5	True				
ANR	2905016	AssignmentExpression	m_adPubInterval = 30		2904984	0		=			
ANR	2905017	Identifier	m_adPubInterval		2904984	0					
ANR	2905018	PrimaryExpression	30		2904984	1					
ANR	2905019	ExpressionStatement	m_qpidHome = NULL	64:2:1682:1703	2904984	6	True				
ANR	2905020	AssignmentExpression	m_qpidHome = NULL		2904984	0		=			
ANR	2905021	Identifier	m_qpidHome		2904984	0					
ANR	2905022	Identifier	NULL		2904984	1					
ANR	2905023	Identifier	Pigeon :: Pigeon		2904984	1					
ANR	2905024	ParameterList			2904984	2					
ANR	2905025	CFGEntryNode	ENTRY		2904984		True				
ANR	2905026	CFGExitNode	EXIT		2904984		True				
ANR	2905027	Symbol	m_state		2904984						
ANR	2905028	Symbol	m_qpidHome		2904984						
ANR	2905029	Symbol	m_stdOut		2904984						
ANR	2905030	Symbol	NULL		2904984						
ANR	2905031	Symbol	m_reaper		2904984						
ANR	2905032	Symbol	m_adPubInterval		2904984						
ANR	2905033	Symbol	m_pid		2904984						
ANR	2905034	Symbol	m_stdErr		2904984						
ANR	2905035	Symbol	STATE_NULL		2904984						
ANR	2905036	Function	Pigeon :: main_config	67:0:1708:1736							
ANR	2905037	FunctionDef	Pigeon :: main_config ()		2905036	0					
ANR	2905038	CompoundStatement		67:27:1735:1736	2905036	0					
ANR	2905039	ReturnType	void		2905036	1					
ANR	2905040	Identifier	Pigeon :: main_config		2905036	2					
ANR	2905041	ParameterList			2905036	3					
ANR	2905042	CFGEntryNode	ENTRY		2905036		True				
ANR	2905043	CFGExitNode	EXIT		2905036		True				
ANR	2905044	Function	Pigeon :: initialize	69:0:1739:4890							
ANR	2905045	FunctionDef	Pigeon :: initialize ()		2905044	0					
ANR	2905046	CompoundStatement		69:26:1765:4890	2905044	0					
ANR	2905047	IdentifierDeclStatement	MyString * qpidPort ;	72:2:1818:1836	2905044	0	True				
ANR	2905048	IdentifierDecl	* qpidPort		2905044	0					
ANR	2905049	IdentifierDeclType	MyString *		2905044	0					
ANR	2905050	Identifier	qpidPort		2905044	1					
ANR	2905051	IdentifierDeclStatement	char * path = NULL ;	73:2:1840:1857	2905044	1	True				
ANR	2905052	IdentifierDecl	* path = NULL		2905044	0					
ANR	2905053	IdentifierDeclType	char *		2905044	0					
ANR	2905054	Identifier	path		2905044	1					
ANR	2905055	AssignmentExpression	* path = NULL		2905044	2		=			
ANR	2905056	Identifier	NULL		2905044	0					
ANR	2905057	Identifier	NULL		2905044	1					
ANR	2905058	ExpressionStatement	"m_reaper = daemonCore -> Register_Reaper ( ""reaperQpid"" , ( ReaperHandlercpp ) & Pigeon :: reaperResponse , ""Qpid process reaper"" , ( Service * ) this )"	75:2:1901:2056	2905044	2	True				
ANR	2905059	AssignmentExpression	"m_reaper = daemonCore -> Register_Reaper ( ""reaperQpid"" , ( ReaperHandlercpp ) & Pigeon :: reaperResponse , ""Qpid process reaper"" , ( Service * ) this )"		2905044	0		=			
ANR	2905060	Identifier	m_reaper		2905044	0					
ANR	2905061	CallExpression	"daemonCore -> Register_Reaper ( ""reaperQpid"" , ( ReaperHandlercpp ) & Pigeon :: reaperResponse , ""Qpid process reaper"" , ( Service * ) this )"		2905044	1					
ANR	2905062	Callee	daemonCore -> Register_Reaper		2905044	0					
ANR	2905063	PtrMemberAccess	daemonCore -> Register_Reaper		2905044	0					
ANR	2905064	Identifier	daemonCore		2905044	0					
ANR	2905065	Identifier	Register_Reaper		2905044	1					
ANR	2905066	ArgumentList	"""reaperQpid"""		2905044	1					
ANR	2905067	Argument	"""reaperQpid"""		2905044	0					
ANR	2905068	PrimaryExpression	"""reaperQpid"""		2905044	0					
ANR	2905069	Argument	( ReaperHandlercpp ) & Pigeon :: reaperResponse		2905044	1					
ANR	2905070	CastExpression	( ReaperHandlercpp ) & Pigeon :: reaperResponse		2905044	0					
ANR	2905071	CastTarget	ReaperHandlercpp		2905044	0					
ANR	2905072	UnaryOperationExpression	& Pigeon :: reaperResponse		2905044	1					
ANR	2905073	UnaryOperator	&		2905044	0					
ANR	2905074	Identifier	Pigeon :: reaperResponse		2905044	1					
ANR	2905075	Argument	"""Qpid process reaper"""		2905044	2					
ANR	2905076	PrimaryExpression	"""Qpid process reaper"""		2905044	0					
ANR	2905077	Argument	( Service * ) this		2905044	3					
ANR	2905078	CastExpression	( Service * ) this		2905044	0					
ANR	2905079	CastTarget	Service *		2905044	0					
ANR	2905080	Identifier	this		2905044	1					
ANR	2905081	ExpressionStatement	ASSERT ( m_reaper != FALSE )	80:2:2063:2088	2905044	3	True				
ANR	2905082	CallExpression	ASSERT ( m_reaper != FALSE )		2905044	0					
ANR	2905083	Callee	ASSERT		2905044	0					
ANR	2905084	Identifier	ASSERT		2905044	0					
ANR	2905085	ArgumentList	m_reaper != FALSE		2905044	1					
ANR	2905086	Argument	m_reaper != FALSE		2905044	0					
ANR	2905087	EqualityExpression	m_reaper != FALSE		2905044	0		!=			
ANR	2905088	Identifier	m_reaper		2905044	0					
ANR	2905089	Identifier	FALSE		2905044	1					
ANR	2905090	IdentifierDeclStatement	ArgList argClean ;	84:2:2141:2157	2905044	4	True				
ANR	2905091	IdentifierDecl	argClean		2905044	0					
ANR	2905092	IdentifierDeclType	ArgList		2905044	0					
ANR	2905093	Identifier	argClean		2905044	1					
ANR	2905094	ExpressionStatement	clean ( )	85:2:2161:2168	2905044	5	True				
ANR	2905095	CallExpression	clean ( )		2905044	0					
ANR	2905096	Callee	clean		2905044	0					
ANR	2905097	Identifier	clean		2905044	0					
ANR	2905098	ArgumentList			2905044	1					
ANR	2905099	IdentifierDeclStatement	"char * proc = param ( ""QPID_EXEC"" ) ;"	87:2:2173:2203	2905044	6	True				
ANR	2905100	IdentifierDecl	"* proc = param ( ""QPID_EXEC"" )"		2905044	0					
ANR	2905101	IdentifierDeclType	char *		2905044	0					
ANR	2905102	Identifier	proc		2905044	1					
ANR	2905103	AssignmentExpression	"* proc = param ( ""QPID_EXEC"" )"		2905044	2		=			
ANR	2905104	Identifier	proc		2905044	0					
ANR	2905105	CallExpression	"param ( ""QPID_EXEC"" )"		2905044	1					
ANR	2905106	Callee	param		2905044	0					
ANR	2905107	Identifier	param		2905044	0					
ANR	2905108	ArgumentList	"""QPID_EXEC"""		2905044	1					
ANR	2905109	Argument	"""QPID_EXEC"""		2905044	0					
ANR	2905110	PrimaryExpression	"""QPID_EXEC"""		2905044	0					
ANR	2905111	IfStatement	if ( ! proc )		2905044	7					
ANR	2905112	Condition	! proc	88:6:2211:2215	2905044	0	True				
ANR	2905113	UnaryOperationExpression	! proc		2905044	0					
ANR	2905114	UnaryOperator	!		2905044	0					
ANR	2905115	Identifier	proc		2905044	1					
ANR	2905116	CompoundStatement		20:13:452:452	2905044	1					
ANR	2905117	ExpressionStatement	"dprintf ( D_ALWAYS , ""You need to specify the QPID executable as QPID_EXEC in your condor config \\n"" )"	89:3:2223:2321	2905044	0	True				
ANR	2905118	CallExpression	"dprintf ( D_ALWAYS , ""You need to specify the QPID executable as QPID_EXEC in your condor config \\n"" )"		2905044	0					
ANR	2905119	Callee	dprintf		2905044	0					
ANR	2905120	Identifier	dprintf		2905044	0					
ANR	2905121	ArgumentList	D_ALWAYS		2905044	1					
ANR	2905122	Argument	D_ALWAYS		2905044	0					
ANR	2905123	Identifier	D_ALWAYS		2905044	0					
ANR	2905124	Argument	"""You need to specify the QPID executable as QPID_EXEC in your condor config \\n"""		2905044	1					
ANR	2905125	PrimaryExpression	"""You need to specify the QPID executable as QPID_EXEC in your condor config \\n"""		2905044	0					
ANR	2905126	ExpressionStatement	"EXCEPT ( ""No qpid executable (QPID_EXEC) specified!\\n"" )"	90:3:2326:2379	2905044	1	True				
ANR	2905127	CallExpression	"EXCEPT ( ""No qpid executable (QPID_EXEC) specified!\\n"" )"		2905044	0					
ANR	2905128	Callee	EXCEPT		2905044	0					
ANR	2905129	Identifier	EXCEPT		2905044	0					
ANR	2905130	ArgumentList	"""No qpid executable (QPID_EXEC) specified!\\n"""		2905044	1					
ANR	2905131	Argument	"""No qpid executable (QPID_EXEC) specified!\\n"""		2905044	0					
ANR	2905132	PrimaryExpression	"""No qpid executable (QPID_EXEC) specified!\\n"""		2905044	0					
ANR	2905133	IdentifierDeclStatement	char * hostname = my_full_hostname ( ) ;	92:2:2387:2423	2905044	8	True				
ANR	2905134	IdentifierDecl	* hostname = my_full_hostname ( )		2905044	0					
ANR	2905135	IdentifierDeclType	char *		2905044	0					
ANR	2905136	Identifier	hostname		2905044	1					
ANR	2905137	AssignmentExpression	* hostname = my_full_hostname ( )		2905044	2		=			
ANR	2905138	Identifier	hostname		2905044	0					
ANR	2905139	CallExpression	my_full_hostname ( )		2905044	1					
ANR	2905140	Callee	my_full_hostname		2905044	0					
ANR	2905141	Identifier	my_full_hostname		2905044	0					
ANR	2905142	ArgumentList			2905044	1					
ANR	2905143	IdentifierDeclStatement	ArgList arglist ;	94:2:2430:2445	2905044	9	True				
ANR	2905144	IdentifierDecl	arglist		2905044	0					
ANR	2905145	IdentifierDeclType	ArgList		2905044	0					
ANR	2905146	Identifier	arglist		2905044	1					
ANR	2905147	ExpressionStatement	"arglist . AppendArg ( ""qpidd"" )"	95:2:2450:2476	2905044	10	True				
ANR	2905148	CallExpression	"arglist . AppendArg ( ""qpidd"" )"		2905044	0					
ANR	2905149	Callee	arglist . AppendArg		2905044	0					
ANR	2905150	MemberAccess	arglist . AppendArg		2905044	0					
ANR	2905151	Identifier	arglist		2905044	0					
ANR	2905152	Identifier	AppendArg		2905044	1					
ANR	2905153	ArgumentList	"""qpidd"""		2905044	1					
ANR	2905154	Argument	"""qpidd"""		2905044	0					
ANR	2905155	PrimaryExpression	"""qpidd"""		2905044	0					
ANR	2905156	IdentifierDeclStatement	"char * qpidConf = param ( ""QPID_CONF"" ) ;"	96:2:2480:2515	2905044	11	True				
ANR	2905157	IdentifierDecl	"* qpidConf = param ( ""QPID_CONF"" )"		2905044	0					
ANR	2905158	IdentifierDeclType	char *		2905044	0					
ANR	2905159	Identifier	qpidConf		2905044	1					
ANR	2905160	AssignmentExpression	"* qpidConf = param ( ""QPID_CONF"" )"		2905044	2		=			
ANR	2905161	Identifier	qpidConf		2905044	0					
ANR	2905162	CallExpression	"param ( ""QPID_CONF"" )"		2905044	1					
ANR	2905163	Callee	param		2905044	0					
ANR	2905164	Identifier	param		2905044	0					
ANR	2905165	ArgumentList	"""QPID_CONF"""		2905044	1					
ANR	2905166	Argument	"""QPID_CONF"""		2905044	0					
ANR	2905167	PrimaryExpression	"""QPID_CONF"""		2905044	0					
ANR	2905168	IfStatement	if ( qpidConf )		2905044	12					
ANR	2905169	Condition	qpidConf	97:6:2523:2530	2905044	0	True				
ANR	2905170	Identifier	qpidConf		2905044	0					
ANR	2905171	CompoundStatement		29:16:767:767	2905044	1					
ANR	2905172	ExpressionStatement	"arglist . AppendArg ( ""--config"" )"	98:3:2538:2567	2905044	0	True				
ANR	2905173	CallExpression	"arglist . AppendArg ( ""--config"" )"		2905044	0					
ANR	2905174	Callee	arglist . AppendArg		2905044	0					
ANR	2905175	MemberAccess	arglist . AppendArg		2905044	0					
ANR	2905176	Identifier	arglist		2905044	0					
ANR	2905177	Identifier	AppendArg		2905044	1					
ANR	2905178	ArgumentList	"""--config"""		2905044	1					
ANR	2905179	Argument	"""--config"""		2905044	0					
ANR	2905180	PrimaryExpression	"""--config"""		2905044	0					
ANR	2905181	ExpressionStatement	arglist . AppendArg ( qpidConf )	99:3:2572:2599	2905044	1	True				
ANR	2905182	CallExpression	arglist . AppendArg ( qpidConf )		2905044	0					
ANR	2905183	Callee	arglist . AppendArg		2905044	0					
ANR	2905184	MemberAccess	arglist . AppendArg		2905044	0					
ANR	2905185	Identifier	arglist		2905044	0					
ANR	2905186	Identifier	AppendArg		2905044	1					
ANR	2905187	ArgumentList	qpidConf		2905044	1					
ANR	2905188	Argument	qpidConf		2905044	0					
ANR	2905189	Identifier	qpidConf		2905044	0					
ANR	2905190	ExpressionStatement	free ( qpidConf )	100:3:2604:2618	2905044	2	True				
ANR	2905191	CallExpression	free ( qpidConf )		2905044	0					
ANR	2905192	Callee	free		2905044	0					
ANR	2905193	Identifier	free		2905044	0					
ANR	2905194	ArgumentList	qpidConf		2905044	1					
ANR	2905195	Argument	qpidConf		2905044	0					
ANR	2905196	Identifier	qpidConf		2905044	0					
ANR	2905197	ElseStatement	else		2905044	0					
ANR	2905198	CompoundStatement		33:9:863:863	2905044	0					
ANR	2905199	ExpressionStatement	"arglist . AppendArg ( ""-p0"" )"	103:3:2638:2662	2905044	0	True				
ANR	2905200	CallExpression	"arglist . AppendArg ( ""-p0"" )"		2905044	0					
ANR	2905201	Callee	arglist . AppendArg		2905044	0					
ANR	2905202	MemberAccess	arglist . AppendArg		2905044	0					
ANR	2905203	Identifier	arglist		2905044	0					
ANR	2905204	Identifier	AppendArg		2905044	1					
ANR	2905205	ArgumentList	"""-p0"""		2905044	1					
ANR	2905206	Argument	"""-p0"""		2905044	0					
ANR	2905207	PrimaryExpression	"""-p0"""		2905044	0					
ANR	2905208	ExpressionStatement	"arglist . AppendArg ( ""--auth"" )"	104:3:2667:2694	2905044	1	True				
ANR	2905209	CallExpression	"arglist . AppendArg ( ""--auth"" )"		2905044	0					
ANR	2905210	Callee	arglist . AppendArg		2905044	0					
ANR	2905211	MemberAccess	arglist . AppendArg		2905044	0					
ANR	2905212	Identifier	arglist		2905044	0					
ANR	2905213	Identifier	AppendArg		2905044	1					
ANR	2905214	ArgumentList	"""--auth"""		2905044	1					
ANR	2905215	Argument	"""--auth"""		2905044	0					
ANR	2905216	PrimaryExpression	"""--auth"""		2905044	0					
ANR	2905217	ExpressionStatement	"arglist . AppendArg ( ""no"" )"	105:3:2699:2722	2905044	2	True				
ANR	2905218	CallExpression	"arglist . AppendArg ( ""no"" )"		2905044	0					
ANR	2905219	Callee	arglist . AppendArg		2905044	0					
ANR	2905220	MemberAccess	arglist . AppendArg		2905044	0					
ANR	2905221	Identifier	arglist		2905044	0					
ANR	2905222	Identifier	AppendArg		2905044	1					
ANR	2905223	ArgumentList	"""no"""		2905044	1					
ANR	2905224	Argument	"""no"""		2905044	0					
ANR	2905225	PrimaryExpression	"""no"""		2905044	0					
ANR	2905226	IdentifierDeclStatement	MyString argString ;	109:2:2736:2754	2905044	13	True				
ANR	2905227	IdentifierDecl	argString		2905044	0					
ANR	2905228	IdentifierDeclType	MyString		2905044	0					
ANR	2905229	Identifier	argString		2905044	1					
ANR	2905230	ExpressionStatement	arglist . GetArgsStringForDisplay ( & argString )	110:2:2758:2801	2905044	14	True				
ANR	2905231	CallExpression	arglist . GetArgsStringForDisplay ( & argString )		2905044	0					
ANR	2905232	Callee	arglist . GetArgsStringForDisplay		2905044	0					
ANR	2905233	MemberAccess	arglist . GetArgsStringForDisplay		2905044	0					
ANR	2905234	Identifier	arglist		2905044	0					
ANR	2905235	Identifier	GetArgsStringForDisplay		2905044	1					
ANR	2905236	ArgumentList	& argString		2905044	1					
ANR	2905237	Argument	& argString		2905044	0					
ANR	2905238	UnaryOperationExpression	& argString		2905044	0					
ANR	2905239	UnaryOperator	&		2905044	0					
ANR	2905240	Identifier	argString		2905044	1					
ANR	2905241	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\n chk this chk this %s\\n"" , argString . Value ( ) )"	111:2:2805:2870	2905044	15	True				
ANR	2905242	CallExpression	"dprintf ( D_ALWAYS , ""\\n chk this chk this %s\\n"" , argString . Value ( ) )"		2905044	0					
ANR	2905243	Callee	dprintf		2905044	0					
ANR	2905244	Identifier	dprintf		2905044	0					
ANR	2905245	ArgumentList	D_ALWAYS		2905044	1					
ANR	2905246	Argument	D_ALWAYS		2905044	0					
ANR	2905247	Identifier	D_ALWAYS		2905044	0					
ANR	2905248	Argument	"""\\n chk this chk this %s\\n"""		2905044	1					
ANR	2905249	PrimaryExpression	"""\\n chk this chk this %s\\n"""		2905044	0					
ANR	2905250	Argument	argString . Value ( )		2905044	2					
ANR	2905251	CallExpression	argString . Value ( )		2905044	0					
ANR	2905252	Callee	argString . Value		2905044	0					
ANR	2905253	MemberAccess	argString . Value		2905044	0					
ANR	2905254	Identifier	argString		2905044	0					
ANR	2905255	Identifier	Value		2905044	1					
ANR	2905256	ArgumentList			2905044	1					
ANR	2905257	ExpressionStatement	path = getPortPath ( )	112:2:2874:2894	2905044	16	True				
ANR	2905258	AssignmentExpression	path = getPortPath ( )		2905044	0		=			
ANR	2905259	Identifier	path		2905044	0					
ANR	2905260	CallExpression	getPortPath ( )		2905044	1					
ANR	2905261	Callee	getPortPath		2905044	0					
ANR	2905262	Identifier	getPortPath		2905044	0					
ANR	2905263	ArgumentList			2905044	1					
ANR	2905264	IdentifierDeclStatement	"int fd_stdout = safe_open_wrapper ( path , O_RDWR | O_CREAT , 0666 ) ;"	113:2:2898:2959	2905044	17	True				
ANR	2905265	IdentifierDecl	"fd_stdout = safe_open_wrapper ( path , O_RDWR | O_CREAT , 0666 )"		2905044	0					
ANR	2905266	IdentifierDeclType	int		2905044	0					
ANR	2905267	Identifier	fd_stdout		2905044	1					
ANR	2905268	AssignmentExpression	"fd_stdout = safe_open_wrapper ( path , O_RDWR | O_CREAT , 0666 )"		2905044	2		=			
ANR	2905269	Identifier	fd_stdout		2905044	0					
ANR	2905270	CallExpression	"safe_open_wrapper ( path , O_RDWR | O_CREAT , 0666 )"		2905044	1					
ANR	2905271	Callee	safe_open_wrapper		2905044	0					
ANR	2905272	Identifier	safe_open_wrapper		2905044	0					
ANR	2905273	ArgumentList	path		2905044	1					
ANR	2905274	Argument	path		2905044	0					
ANR	2905275	Identifier	path		2905044	0					
ANR	2905276	Argument	O_RDWR | O_CREAT		2905044	1					
ANR	2905277	InclusiveOrExpression	O_RDWR | O_CREAT		2905044	0		|			
ANR	2905278	Identifier	O_RDWR		2905044	0					
ANR	2905279	Identifier	O_CREAT		2905044	1					
ANR	2905280	Argument	0666		2905044	2					
ANR	2905281	PrimaryExpression	0666		2905044	0					
ANR	2905282	ExpressionStatement	free ( path )	114:2:2963:2973	2905044	18	True				
ANR	2905283	CallExpression	free ( path )		2905044	0					
ANR	2905284	Callee	free		2905044	0					
ANR	2905285	Identifier	free		2905044	0					
ANR	2905286	ArgumentList	path		2905044	1					
ANR	2905287	Argument	path		2905044	0					
ANR	2905288	Identifier	path		2905044	0					
ANR	2905289	IdentifierDeclStatement	"int fds [ 3 ] = { - 1 , fd_stdout , 0 } ;"	115:2:2977:3008	2905044	19	True				
ANR	2905290	IdentifierDecl	"fds [ 3 ] = { - 1 , fd_stdout , 0 }"		2905044	0					
ANR	2905291	IdentifierDeclType	int [ 3 ]		2905044	0					
ANR	2905292	Identifier	fds		2905044	1					
ANR	2905293	PrimaryExpression	3		2905044	2					
ANR	2905294	AssignmentExpression	"fds [ 3 ] = { - 1 , fd_stdout , 0 }"		2905044	3		=			
ANR	2905295	Identifier	fds		2905044	0					
ANR	2905296	InitializerList	- 1		2905044	1					
ANR	2905297	UnaryOperationExpression	- 1		2905044	0					
ANR	2905298	UnaryOperator	-		2905044	0					
ANR	2905299	PrimaryExpression	1		2905044	1					
ANR	2905300	Identifier	fd_stdout		2905044	1					
ANR	2905301	PrimaryExpression	0		2905044	2					
ANR	2905302	IdentifierDeclStatement	"int mm_pid = daemonCore -> Create_Process ( proc , arglist , PRIV_CONDOR_FINAL , 0 , FALSE , NULL , NULL , NULL , NULL , fds ) ;"	116:2:3012:3116	2905044	20	True				
ANR	2905303	IdentifierDecl	"mm_pid = daemonCore -> Create_Process ( proc , arglist , PRIV_CONDOR_FINAL , 0 , FALSE , NULL , NULL , NULL , NULL , fds )"		2905044	0					
ANR	2905304	IdentifierDeclType	int		2905044	0					
ANR	2905305	Identifier	mm_pid		2905044	1					
ANR	2905306	AssignmentExpression	"mm_pid = daemonCore -> Create_Process ( proc , arglist , PRIV_CONDOR_FINAL , 0 , FALSE , NULL , NULL , NULL , NULL , fds )"		2905044	2		=			
ANR	2905307	Identifier	mm_pid		2905044	0					
ANR	2905308	CallExpression	"daemonCore -> Create_Process ( proc , arglist , PRIV_CONDOR_FINAL , 0 , FALSE , NULL , NULL , NULL , NULL , fds )"		2905044	1					
ANR	2905309	Callee	daemonCore -> Create_Process		2905044	0					
ANR	2905310	PtrMemberAccess	daemonCore -> Create_Process		2905044	0					
ANR	2905311	Identifier	daemonCore		2905044	0					
ANR	2905312	Identifier	Create_Process		2905044	1					
ANR	2905313	ArgumentList	proc		2905044	1					
ANR	2905314	Argument	proc		2905044	0					
ANR	2905315	Identifier	proc		2905044	0					
ANR	2905316	Argument	arglist		2905044	1					
ANR	2905317	Identifier	arglist		2905044	0					
ANR	2905318	Argument	PRIV_CONDOR_FINAL		2905044	2					
ANR	2905319	Identifier	PRIV_CONDOR_FINAL		2905044	0					
ANR	2905320	Argument	0		2905044	3					
ANR	2905321	PrimaryExpression	0		2905044	0					
ANR	2905322	Argument	FALSE		2905044	4					
ANR	2905323	Identifier	FALSE		2905044	0					
ANR	2905324	Argument	NULL		2905044	5					
ANR	2905325	Identifier	NULL		2905044	0					
ANR	2905326	Argument	NULL		2905044	6					
ANR	2905327	Identifier	NULL		2905044	0					
ANR	2905328	Argument	NULL		2905044	7					
ANR	2905329	Identifier	NULL		2905044	0					
ANR	2905330	Argument	NULL		2905044	8					
ANR	2905331	Identifier	NULL		2905044	0					
ANR	2905332	Argument	fds		2905044	9					
ANR	2905333	Identifier	fds		2905044	0					
ANR	2905334	IfStatement	if ( mm_pid <= 0 )		2905044	21					
ANR	2905335	Condition	mm_pid <= 0	117:6:3124:3134	2905044	0	True				
ANR	2905336	RelationalExpression	mm_pid <= 0		2905044	0		<=			
ANR	2905337	Identifier	mm_pid		2905044	0					
ANR	2905338	PrimaryExpression	0		2905044	1					
ANR	2905339	ExpressionStatement	"EXCEPT ( ""Failed to launch qpid process using Create_Process.\\n "" )"	118:4:3142:3206	2905044	1	True				
ANR	2905340	CallExpression	"EXCEPT ( ""Failed to launch qpid process using Create_Process.\\n "" )"		2905044	0					
ANR	2905341	Callee	EXCEPT		2905044	0					
ANR	2905342	Identifier	EXCEPT		2905044	0					
ANR	2905343	ArgumentList	"""Failed to launch qpid process using Create_Process.\\n """		2905044	1					
ANR	2905344	Argument	"""Failed to launch qpid process using Create_Process.\\n """		2905044	0					
ANR	2905345	PrimaryExpression	"""Failed to launch qpid process using Create_Process.\\n """		2905044	0					
ANR	2905346	ExpressionStatement	"dprintf ( D_ALWAYS , ""Launched qpid process pid=%d \\n"" , mm_pid )"	120:2:3211:3271	2905044	22	True				
ANR	2905347	CallExpression	"dprintf ( D_ALWAYS , ""Launched qpid process pid=%d \\n"" , mm_pid )"		2905044	0					
ANR	2905348	Callee	dprintf		2905044	0					
ANR	2905349	Identifier	dprintf		2905044	0					
ANR	2905350	ArgumentList	D_ALWAYS		2905044	1					
ANR	2905351	Argument	D_ALWAYS		2905044	0					
ANR	2905352	Identifier	D_ALWAYS		2905044	0					
ANR	2905353	Argument	"""Launched qpid process pid=%d \\n"""		2905044	1					
ANR	2905354	PrimaryExpression	"""Launched qpid process pid=%d \\n"""		2905044	0					
ANR	2905355	Argument	mm_pid		2905044	2					
ANR	2905356	Identifier	mm_pid		2905044	0					
ANR	2905357	ExpressionStatement	sleep ( 10 )	121:2:3275:3284	2905044	23	True				
ANR	2905358	CallExpression	sleep ( 10 )		2905044	0					
ANR	2905359	Callee	sleep		2905044	0					
ANR	2905360	Identifier	sleep		2905044	0					
ANR	2905361	ArgumentList	10		2905044	1					
ANR	2905362	Argument	10		2905044	0					
ANR	2905363	PrimaryExpression	10		2905044	0					
ANR	2905364	ExpressionStatement	close ( fd_stdout )	122:2:3288:3304	2905044	24	True				
ANR	2905365	CallExpression	close ( fd_stdout )		2905044	0					
ANR	2905366	Callee	close		2905044	0					
ANR	2905367	Identifier	close		2905044	0					
ANR	2905368	ArgumentList	fd_stdout		2905044	1					
ANR	2905369	Argument	fd_stdout		2905044	0					
ANR	2905370	Identifier	fd_stdout		2905044	0					
ANR	2905371	IdentifierDeclStatement	char * portChr = getPort ( false ) ;	124:2:3310:3340	2905044	25	True				
ANR	2905372	IdentifierDecl	* portChr = getPort ( false )		2905044	0					
ANR	2905373	IdentifierDeclType	char *		2905044	0					
ANR	2905374	Identifier	portChr		2905044	1					
ANR	2905375	AssignmentExpression	* portChr = getPort ( false )		2905044	2		=			
ANR	2905376	Identifier	portChr		2905044	0					
ANR	2905377	CallExpression	getPort ( false )		2905044	1					
ANR	2905378	Callee	getPort		2905044	0					
ANR	2905379	Identifier	getPort		2905044	0					
ANR	2905380	ArgumentList	false		2905044	1					
ANR	2905381	Argument	false		2905044	0					
ANR	2905382	Identifier	false		2905044	0					
ANR	2905383	IdentifierDeclStatement	string portStr = string ( portChr ) ;	125:2:3344:3376	2905044	26	True				
ANR	2905384	IdentifierDecl	portStr = string ( portChr )		2905044	0					
ANR	2905385	IdentifierDeclType	string		2905044	0					
ANR	2905386	Identifier	portStr		2905044	1					
ANR	2905387	AssignmentExpression	portStr = string ( portChr )		2905044	2		=			
ANR	2905388	Identifier	portStr		2905044	0					
ANR	2905389	CallExpression	string ( portChr )		2905044	1					
ANR	2905390	Callee	string		2905044	0					
ANR	2905391	Identifier	string		2905044	0					
ANR	2905392	ArgumentList	portChr		2905044	1					
ANR	2905393	Argument	portChr		2905044	0					
ANR	2905394	Identifier	portChr		2905044	0					
ANR	2905395	ExpressionStatement	free ( portChr )	126:2:3380:3393	2905044	27	True				
ANR	2905396	CallExpression	free ( portChr )		2905044	0					
ANR	2905397	Callee	free		2905044	0					
ANR	2905398	Identifier	free		2905044	0					
ANR	2905399	ArgumentList	portChr		2905044	1					
ANR	2905400	Argument	portChr		2905044	0					
ANR	2905401	Identifier	portChr		2905044	0					
ANR	2905402	ExpressionStatement	free ( proc )	127:2:3397:3407	2905044	28	True				
ANR	2905403	CallExpression	free ( proc )		2905044	0					
ANR	2905404	Callee	free		2905044	0					
ANR	2905405	Identifier	free		2905044	0					
ANR	2905406	ArgumentList	proc		2905044	1					
ANR	2905407	Argument	proc		2905044	0					
ANR	2905408	Identifier	proc		2905044	0					
ANR	2905409	IfStatement	"if ( strcmp ( portStr . c_str ( ) , """" ) != 0 )"		2905044	29					
ANR	2905410	Condition	"strcmp ( portStr . c_str ( ) , """" ) != 0"	128:5:3414:3444	2905044	0	True				
ANR	2905411	EqualityExpression	"strcmp ( portStr . c_str ( ) , """" ) != 0"		2905044	0		!=			
ANR	2905412	CallExpression	"strcmp ( portStr . c_str ( ) , """" )"		2905044	0					
ANR	2905413	Callee	strcmp		2905044	0					
ANR	2905414	Identifier	strcmp		2905044	0					
ANR	2905415	ArgumentList	portStr . c_str ( )		2905044	1					
ANR	2905416	Argument	portStr . c_str ( )		2905044	0					
ANR	2905417	CallExpression	portStr . c_str ( )		2905044	0					
ANR	2905418	Callee	portStr . c_str		2905044	0					
ANR	2905419	MemberAccess	portStr . c_str		2905044	0					
ANR	2905420	Identifier	portStr		2905044	0					
ANR	2905421	Identifier	c_str		2905044	1					
ANR	2905422	ArgumentList			2905044	1					
ANR	2905423	Argument	""""""		2905044	1					
ANR	2905424	PrimaryExpression	""""""		2905044	0					
ANR	2905425	PrimaryExpression	0		2905044	1					
ANR	2905426	CompoundStatement		60:37:1680:1680	2905044	1					
ANR	2905427	ExpressionStatement	"m_qpidAd . Assign ( ""PORT"" , portStr . c_str ( ) )"	129:4:3452:3492	2905044	0	True				
ANR	2905428	CallExpression	"m_qpidAd . Assign ( ""PORT"" , portStr . c_str ( ) )"		2905044	0					
ANR	2905429	Callee	m_qpidAd . Assign		2905044	0					
ANR	2905430	MemberAccess	m_qpidAd . Assign		2905044	0					
ANR	2905431	Identifier	m_qpidAd		2905044	0					
ANR	2905432	Identifier	Assign		2905044	1					
ANR	2905433	ArgumentList	"""PORT"""		2905044	1					
ANR	2905434	Argument	"""PORT"""		2905044	0					
ANR	2905435	PrimaryExpression	"""PORT"""		2905044	0					
ANR	2905436	Argument	portStr . c_str ( )		2905044	1					
ANR	2905437	CallExpression	portStr . c_str ( )		2905044	0					
ANR	2905438	Callee	portStr . c_str		2905044	0					
ANR	2905439	MemberAccess	portStr . c_str		2905044	0					
ANR	2905440	Identifier	portStr		2905044	0					
ANR	2905441	Identifier	c_str		2905044	1					
ANR	2905442	ArgumentList			2905044	1					
ANR	2905443	ExpressionStatement	"dprintf ( D_ALWAYS , ""qpid process started on port number %s \\n"" , portStr . c_str ( ) )"	130:4:3498:3576	2905044	1	True				
ANR	2905444	CallExpression	"dprintf ( D_ALWAYS , ""qpid process started on port number %s \\n"" , portStr . c_str ( ) )"		2905044	0					
ANR	2905445	Callee	dprintf		2905044	0					
ANR	2905446	Identifier	dprintf		2905044	0					
ANR	2905447	ArgumentList	D_ALWAYS		2905044	1					
ANR	2905448	Argument	D_ALWAYS		2905044	0					
ANR	2905449	Identifier	D_ALWAYS		2905044	0					
ANR	2905450	Argument	"""qpid process started on port number %s \\n"""		2905044	1					
ANR	2905451	PrimaryExpression	"""qpid process started on port number %s \\n"""		2905044	0					
ANR	2905452	Argument	portStr . c_str ( )		2905044	2					
ANR	2905453	CallExpression	portStr . c_str ( )		2905044	0					
ANR	2905454	Callee	portStr . c_str		2905044	0					
ANR	2905455	MemberAccess	portStr . c_str		2905044	0					
ANR	2905456	Identifier	portStr		2905044	0					
ANR	2905457	Identifier	c_str		2905044	1					
ANR	2905458	ArgumentList			2905044	1					
ANR	2905459	ExpressionStatement	m_qpidAd . SetMyTypeName ( GENERIC_ADTYPE )	132:2:3586:3624	2905044	30	True				
ANR	2905460	CallExpression	m_qpidAd . SetMyTypeName ( GENERIC_ADTYPE )		2905044	0					
ANR	2905461	Callee	m_qpidAd . SetMyTypeName		2905044	0					
ANR	2905462	MemberAccess	m_qpidAd . SetMyTypeName		2905044	0					
ANR	2905463	Identifier	m_qpidAd		2905044	0					
ANR	2905464	Identifier	SetMyTypeName		2905044	1					
ANR	2905465	ArgumentList	GENERIC_ADTYPE		2905044	1					
ANR	2905466	Argument	GENERIC_ADTYPE		2905044	0					
ANR	2905467	Identifier	GENERIC_ADTYPE		2905044	0					
ANR	2905468	ExpressionStatement	"m_qpidAd . SetTargetTypeName ( ""pigeon"" )"	133:2:3628:3664	2905044	31	True				
ANR	2905469	CallExpression	"m_qpidAd . SetTargetTypeName ( ""pigeon"" )"		2905044	0					
ANR	2905470	Callee	m_qpidAd . SetTargetTypeName		2905044	0					
ANR	2905471	MemberAccess	m_qpidAd . SetTargetTypeName		2905044	0					
ANR	2905472	Identifier	m_qpidAd		2905044	0					
ANR	2905473	Identifier	SetTargetTypeName		2905044	1					
ANR	2905474	ArgumentList	"""pigeon"""		2905044	1					
ANR	2905475	Argument	"""pigeon"""		2905044	0					
ANR	2905476	PrimaryExpression	"""pigeon"""		2905044	0					
ANR	2905477	IdentifierDeclStatement	"std :: string hostAddr = ""qpid@"" ;"	134:2:3668:3698	2905044	32	True				
ANR	2905478	IdentifierDecl	"hostAddr = ""qpid@"""		2905044	0					
ANR	2905479	IdentifierDeclType	std :: string		2905044	0					
ANR	2905480	Identifier	hostAddr		2905044	1					
ANR	2905481	AssignmentExpression	"hostAddr = ""qpid@"""		2905044	2		=			
ANR	2905482	Identifier	hostAddr		2905044	0					
ANR	2905483	PrimaryExpression	"""qpid@"""		2905044	1					
ANR	2905484	ExpressionStatement	hostAddr += hostname	135:2:3702:3722	2905044	33	True				
ANR	2905485	AssignmentExpression	hostAddr += hostname		2905044	0		+=			
ANR	2905486	Identifier	hostAddr		2905044	0					
ANR	2905487	Identifier	hostname		2905044	1					
ANR	2905488	ExpressionStatement	"m_qpidAd . Assign ( ATTR_NAME , hostAddr . c_str ( ) )"	136:2:3726:3770	2905044	34	True				
ANR	2905489	CallExpression	"m_qpidAd . Assign ( ATTR_NAME , hostAddr . c_str ( ) )"		2905044	0					
ANR	2905490	Callee	m_qpidAd . Assign		2905044	0					
ANR	2905491	MemberAccess	m_qpidAd . Assign		2905044	0					
ANR	2905492	Identifier	m_qpidAd		2905044	0					
ANR	2905493	Identifier	Assign		2905044	1					
ANR	2905494	ArgumentList	ATTR_NAME		2905044	1					
ANR	2905495	Argument	ATTR_NAME		2905044	0					
ANR	2905496	Identifier	ATTR_NAME		2905044	0					
ANR	2905497	Argument	hostAddr . c_str ( )		2905044	1					
ANR	2905498	CallExpression	hostAddr . c_str ( )		2905044	0					
ANR	2905499	Callee	hostAddr . c_str		2905044	0					
ANR	2905500	MemberAccess	hostAddr . c_str		2905044	0					
ANR	2905501	Identifier	hostAddr		2905044	0					
ANR	2905502	Identifier	c_str		2905044	1					
ANR	2905503	ArgumentList			2905044	1					
ANR	2905504	ExpressionStatement	"m_qpidAd . Assign ( ""Key"" , ""qpidKey"" )"	137:2:3774:3807	2905044	35	True				
ANR	2905505	CallExpression	"m_qpidAd . Assign ( ""Key"" , ""qpidKey"" )"		2905044	0					
ANR	2905506	Callee	m_qpidAd . Assign		2905044	0					
ANR	2905507	MemberAccess	m_qpidAd . Assign		2905044	0					
ANR	2905508	Identifier	m_qpidAd		2905044	0					
ANR	2905509	Identifier	Assign		2905044	1					
ANR	2905510	ArgumentList	"""Key"""		2905044	1					
ANR	2905511	Argument	"""Key"""		2905044	0					
ANR	2905512	PrimaryExpression	"""Key"""		2905044	0					
ANR	2905513	Argument	"""qpidKey"""		2905044	1					
ANR	2905514	PrimaryExpression	"""qpidKey"""		2905044	0					
ANR	2905515	ExpressionStatement	"m_qpidAd . Assign ( ""IP"" , ""128"" )"	138:2:3811:3839	2905044	36	True				
ANR	2905516	CallExpression	"m_qpidAd . Assign ( ""IP"" , ""128"" )"		2905044	0					
ANR	2905517	Callee	m_qpidAd . Assign		2905044	0					
ANR	2905518	MemberAccess	m_qpidAd . Assign		2905044	0					
ANR	2905519	Identifier	m_qpidAd		2905044	0					
ANR	2905520	Identifier	Assign		2905044	1					
ANR	2905521	ArgumentList	"""IP"""		2905044	1					
ANR	2905522	Argument	"""IP"""		2905044	0					
ANR	2905523	PrimaryExpression	"""IP"""		2905044	0					
ANR	2905524	Argument	"""128"""		2905044	1					
ANR	2905525	PrimaryExpression	"""128"""		2905044	0					
ANR	2905526	ExpressionStatement	daemonCore -> publish ( & m_qpidAd )	139:2:3843:3873	2905044	37	True				
ANR	2905527	CallExpression	daemonCore -> publish ( & m_qpidAd )		2905044	0					
ANR	2905528	Callee	daemonCore -> publish		2905044	0					
ANR	2905529	PtrMemberAccess	daemonCore -> publish		2905044	0					
ANR	2905530	Identifier	daemonCore		2905044	0					
ANR	2905531	Identifier	publish		2905044	1					
ANR	2905532	ArgumentList	& m_qpidAd		2905044	1					
ANR	2905533	Argument	& m_qpidAd		2905044	0					
ANR	2905534	UnaryOperationExpression	& m_qpidAd		2905044	0					
ANR	2905535	UnaryOperator	&		2905044	0					
ANR	2905536	Identifier	m_qpidAd		2905044	1					
ANR	2905537	ExpressionStatement	"dprintf ( D_ALWAYS , ""Calling the classAd publish()\\n"" )"	143:2:3987:4039	2905044	38	True				
ANR	2905538	CallExpression	"dprintf ( D_ALWAYS , ""Calling the classAd publish()\\n"" )"		2905044	0					
ANR	2905539	Callee	dprintf		2905044	0					
ANR	2905540	Identifier	dprintf		2905044	0					
ANR	2905541	ArgumentList	D_ALWAYS		2905044	1					
ANR	2905542	Argument	D_ALWAYS		2905044	0					
ANR	2905543	Identifier	D_ALWAYS		2905044	0					
ANR	2905544	Argument	"""Calling the classAd publish()\\n"""		2905044	1					
ANR	2905545	PrimaryExpression	"""Calling the classAd publish()\\n"""		2905044	0					
ANR	2905546	ExpressionStatement	"daemonCore -> Register_Timer ( 1 , m_adPubInterval , ( TimerHandlercpp ) & Pigeon :: publishClassAd , ""publishClassAd"" , this )"	144:2:4043:4163	2905044	39	True				
ANR	2905547	CallExpression	"daemonCore -> Register_Timer ( 1 , m_adPubInterval , ( TimerHandlercpp ) & Pigeon :: publishClassAd , ""publishClassAd"" , this )"		2905044	0					
ANR	2905548	Callee	daemonCore -> Register_Timer		2905044	0					
ANR	2905549	PtrMemberAccess	daemonCore -> Register_Timer		2905044	0					
ANR	2905550	Identifier	daemonCore		2905044	0					
ANR	2905551	Identifier	Register_Timer		2905044	1					
ANR	2905552	ArgumentList	1		2905044	1					
ANR	2905553	Argument	1		2905044	0					
ANR	2905554	PrimaryExpression	1		2905044	0					
ANR	2905555	Argument	m_adPubInterval		2905044	1					
ANR	2905556	Identifier	m_adPubInterval		2905044	0					
ANR	2905557	Argument	( TimerHandlercpp ) & Pigeon :: publishClassAd		2905044	2					
ANR	2905558	CastExpression	( TimerHandlercpp ) & Pigeon :: publishClassAd		2905044	0					
ANR	2905559	CastTarget	TimerHandlercpp		2905044	0					
ANR	2905560	UnaryOperationExpression	& Pigeon :: publishClassAd		2905044	1					
ANR	2905561	UnaryOperator	&		2905044	0					
ANR	2905562	Identifier	Pigeon :: publishClassAd		2905044	1					
ANR	2905563	Argument	"""publishClassAd"""		2905044	3					
ANR	2905564	PrimaryExpression	"""publishClassAd"""		2905044	0					
ANR	2905565	Argument	this		2905044	4					
ANR	2905566	Identifier	this		2905044	0					
ANR	2905567	ExpressionStatement	"dprintf ( D_ALWAYS , ""Launched qpid process pid=%d at port=|%s|\\n"" , mm_pid , portStr . c_str ( ) )"	147:2:4168:4256	2905044	40	True				
ANR	2905568	CallExpression	"dprintf ( D_ALWAYS , ""Launched qpid process pid=%d at port=|%s|\\n"" , mm_pid , portStr . c_str ( ) )"		2905044	0					
ANR	2905569	Callee	dprintf		2905044	0					
ANR	2905570	Identifier	dprintf		2905044	0					
ANR	2905571	ArgumentList	D_ALWAYS		2905044	1					
ANR	2905572	Argument	D_ALWAYS		2905044	0					
ANR	2905573	Identifier	D_ALWAYS		2905044	0					
ANR	2905574	Argument	"""Launched qpid process pid=%d at port=|%s|\\n"""		2905044	1					
ANR	2905575	PrimaryExpression	"""Launched qpid process pid=%d at port=|%s|\\n"""		2905044	0					
ANR	2905576	Argument	mm_pid		2905044	2					
ANR	2905577	Identifier	mm_pid		2905044	0					
ANR	2905578	Argument	portStr . c_str ( )		2905044	3					
ANR	2905579	CallExpression	portStr . c_str ( )		2905044	0					
ANR	2905580	Callee	portStr . c_str		2905044	0					
ANR	2905581	MemberAccess	portStr . c_str		2905044	0					
ANR	2905582	Identifier	portStr		2905044	0					
ANR	2905583	Identifier	c_str		2905044	1					
ANR	2905584	ArgumentList			2905044	1					
ANR	2905585	IdentifierDeclStatement	"char * execDir = param ( ""SBIN"" ) ;"	150:2:4266:4295	2905044	41	True				
ANR	2905586	IdentifierDecl	"* execDir = param ( ""SBIN"" )"		2905044	0					
ANR	2905587	IdentifierDeclType	char *		2905044	0					
ANR	2905588	Identifier	execDir		2905044	1					
ANR	2905589	AssignmentExpression	"* execDir = param ( ""SBIN"" )"		2905044	2		=			
ANR	2905590	Identifier	execDir		2905044	0					
ANR	2905591	CallExpression	"param ( ""SBIN"" )"		2905044	1					
ANR	2905592	Callee	param		2905044	0					
ANR	2905593	Identifier	param		2905044	0					
ANR	2905594	ArgumentList	"""SBIN"""		2905044	1					
ANR	2905595	Argument	"""SBIN"""		2905044	0					
ANR	2905596	PrimaryExpression	"""SBIN"""		2905044	0					
ANR	2905597	IfStatement	if ( execDir )		2905044	42					
ANR	2905598	Condition	execDir	151:6:4303:4309	2905044	0	True				
ANR	2905599	Identifier	execDir		2905044	0					
ANR	2905600	CompoundStatement		85:3:2600:2616	2905044	1					
ANR	2905601	ExpressionStatement	"dprintf ( D_ALWAYS , ""Declaring queues...  \\n"" )"	152:3:4317:4361	2905044	0	True				
ANR	2905602	CallExpression	"dprintf ( D_ALWAYS , ""Declaring queues...  \\n"" )"		2905044	0					
ANR	2905603	Callee	dprintf		2905044	0					
ANR	2905604	Identifier	dprintf		2905044	0					
ANR	2905605	ArgumentList	D_ALWAYS		2905044	1					
ANR	2905606	Argument	D_ALWAYS		2905044	0					
ANR	2905607	Identifier	D_ALWAYS		2905044	0					
ANR	2905608	Argument	"""Declaring queues...  \\n"""		2905044	1					
ANR	2905609	PrimaryExpression	"""Declaring queues...  \\n"""		2905044	0					
ANR	2905610	IdentifierDeclStatement	ArgList qArglist ;	153:3:4366:4382	2905044	1	True				
ANR	2905611	IdentifierDecl	qArglist		2905044	0					
ANR	2905612	IdentifierDeclType	ArgList		2905044	0					
ANR	2905613	Identifier	qArglist		2905044	1					
ANR	2905614	ExpressionStatement	proc = ( char * ) malloc ( strlen ( execDir ) + 15 )	154:3:4387:4429	2905044	2	True				
ANR	2905615	AssignmentExpression	proc = ( char * ) malloc ( strlen ( execDir ) + 15 )		2905044	0		=			
ANR	2905616	Identifier	proc		2905044	0					
ANR	2905617	CastExpression	( char * ) malloc ( strlen ( execDir ) + 15 )		2905044	1					
ANR	2905618	CastTarget	char *		2905044	0					
ANR	2905619	CallExpression	malloc ( strlen ( execDir ) + 15 )		2905044	1					
ANR	2905620	Callee	malloc		2905044	0					
ANR	2905621	Identifier	malloc		2905044	0					
ANR	2905622	ArgumentList	strlen ( execDir ) + 15		2905044	1					
ANR	2905623	Argument	strlen ( execDir ) + 15		2905044	0					
ANR	2905624	AdditiveExpression	strlen ( execDir ) + 15		2905044	0		+			
ANR	2905625	CallExpression	strlen ( execDir )		2905044	0					
ANR	2905626	Callee	strlen		2905044	0					
ANR	2905627	Identifier	strlen		2905044	0					
ANR	2905628	ArgumentList	execDir		2905044	1					
ANR	2905629	Argument	execDir		2905044	0					
ANR	2905630	Identifier	execDir		2905044	0					
ANR	2905631	PrimaryExpression	15		2905044	1					
ANR	2905632	ExpressionStatement	"sprintf ( proc , ""%s%c%s"" , execDir , DIR_DELIM_CHAR , ""declareQueues"" )"	155:3:4434:4498	2905044	3	True				
ANR	2905633	CallExpression	"sprintf ( proc , ""%s%c%s"" , execDir , DIR_DELIM_CHAR , ""declareQueues"" )"		2905044	0					
ANR	2905634	Callee	sprintf		2905044	0					
ANR	2905635	Identifier	sprintf		2905044	0					
ANR	2905636	ArgumentList	proc		2905044	1					
ANR	2905637	Argument	proc		2905044	0					
ANR	2905638	Identifier	proc		2905044	0					
ANR	2905639	Argument	"""%s%c%s"""		2905044	1					
ANR	2905640	PrimaryExpression	"""%s%c%s"""		2905044	0					
ANR	2905641	Argument	execDir		2905044	2					
ANR	2905642	Identifier	execDir		2905044	0					
ANR	2905643	Argument	DIR_DELIM_CHAR		2905044	3					
ANR	2905644	Identifier	DIR_DELIM_CHAR		2905044	0					
ANR	2905645	Argument	"""declareQueues"""		2905044	4					
ANR	2905646	PrimaryExpression	"""declareQueues"""		2905044	0					
ANR	2905647	ExpressionStatement	qArglist . AppendArg ( proc )	156:3:4503:4527	2905044	4	True				
ANR	2905648	CallExpression	qArglist . AppendArg ( proc )		2905044	0					
ANR	2905649	Callee	qArglist . AppendArg		2905044	0					
ANR	2905650	MemberAccess	qArglist . AppendArg		2905044	0					
ANR	2905651	Identifier	qArglist		2905044	0					
ANR	2905652	Identifier	AppendArg		2905044	1					
ANR	2905653	ArgumentList	proc		2905044	1					
ANR	2905654	Argument	proc		2905044	0					
ANR	2905655	Identifier	proc		2905044	0					
ANR	2905656	ExpressionStatement	qArglist . AppendArg ( hostname )	157:3:4532:4560	2905044	5	True				
ANR	2905657	CallExpression	qArglist . AppendArg ( hostname )		2905044	0					
ANR	2905658	Callee	qArglist . AppendArg		2905044	0					
ANR	2905659	MemberAccess	qArglist . AppendArg		2905044	0					
ANR	2905660	Identifier	qArglist		2905044	0					
ANR	2905661	Identifier	AppendArg		2905044	1					
ANR	2905662	ArgumentList	hostname		2905044	1					
ANR	2905663	Argument	hostname		2905044	0					
ANR	2905664	Identifier	hostname		2905044	0					
ANR	2905665	ExpressionStatement	qArglist . AppendArg ( portStr . c_str ( ) )	158:3:4565:4600	2905044	6	True				
ANR	2905666	CallExpression	qArglist . AppendArg ( portStr . c_str ( ) )		2905044	0					
ANR	2905667	Callee	qArglist . AppendArg		2905044	0					
ANR	2905668	MemberAccess	qArglist . AppendArg		2905044	0					
ANR	2905669	Identifier	qArglist		2905044	0					
ANR	2905670	Identifier	AppendArg		2905044	1					
ANR	2905671	ArgumentList	portStr . c_str ( )		2905044	1					
ANR	2905672	Argument	portStr . c_str ( )		2905044	0					
ANR	2905673	CallExpression	portStr . c_str ( )		2905044	0					
ANR	2905674	Callee	portStr . c_str		2905044	0					
ANR	2905675	MemberAccess	portStr . c_str		2905044	0					
ANR	2905676	Identifier	portStr		2905044	0					
ANR	2905677	Identifier	c_str		2905044	1					
ANR	2905678	ArgumentList			2905044	1					
ANR	2905679	ExpressionStatement	"mm_pid = daemonCore -> Create_Process ( proc , qArglist , PRIV_CONDOR_FINAL , 0 , FALSE , NULL , NULL , NULL , NULL )"	159:3:4605:4702	2905044	7	True				
ANR	2905680	AssignmentExpression	"mm_pid = daemonCore -> Create_Process ( proc , qArglist , PRIV_CONDOR_FINAL , 0 , FALSE , NULL , NULL , NULL , NULL )"		2905044	0		=			
ANR	2905681	Identifier	mm_pid		2905044	0					
ANR	2905682	CallExpression	"daemonCore -> Create_Process ( proc , qArglist , PRIV_CONDOR_FINAL , 0 , FALSE , NULL , NULL , NULL , NULL )"		2905044	1					
ANR	2905683	Callee	daemonCore -> Create_Process		2905044	0					
ANR	2905684	PtrMemberAccess	daemonCore -> Create_Process		2905044	0					
ANR	2905685	Identifier	daemonCore		2905044	0					
ANR	2905686	Identifier	Create_Process		2905044	1					
ANR	2905687	ArgumentList	proc		2905044	1					
ANR	2905688	Argument	proc		2905044	0					
ANR	2905689	Identifier	proc		2905044	0					
ANR	2905690	Argument	qArglist		2905044	1					
ANR	2905691	Identifier	qArglist		2905044	0					
ANR	2905692	Argument	PRIV_CONDOR_FINAL		2905044	2					
ANR	2905693	Identifier	PRIV_CONDOR_FINAL		2905044	0					
ANR	2905694	Argument	0		2905044	3					
ANR	2905695	PrimaryExpression	0		2905044	0					
ANR	2905696	Argument	FALSE		2905044	4					
ANR	2905697	Identifier	FALSE		2905044	0					
ANR	2905698	Argument	NULL		2905044	5					
ANR	2905699	Identifier	NULL		2905044	0					
ANR	2905700	Argument	NULL		2905044	6					
ANR	2905701	Identifier	NULL		2905044	0					
ANR	2905702	Argument	NULL		2905044	7					
ANR	2905703	Identifier	NULL		2905044	0					
ANR	2905704	Argument	NULL		2905044	8					
ANR	2905705	Identifier	NULL		2905044	0					
ANR	2905706	IfStatement	if ( mm_pid <= 0 )		2905044	8					
ANR	2905707	Condition	mm_pid <= 0	160:7:4711:4721	2905044	0	True				
ANR	2905708	RelationalExpression	mm_pid <= 0		2905044	0		<=			
ANR	2905709	Identifier	mm_pid		2905044	0					
ANR	2905710	PrimaryExpression	0		2905044	1					
ANR	2905711	ExpressionStatement	"EXCEPT ( ""Failed to launch declareQueues process using Create_Process.\\n "" )"	161:2:4727:4800	2905044	1	True				
ANR	2905712	CallExpression	"EXCEPT ( ""Failed to launch declareQueues process using Create_Process.\\n "" )"		2905044	0					
ANR	2905713	Callee	EXCEPT		2905044	0					
ANR	2905714	Identifier	EXCEPT		2905044	0					
ANR	2905715	ArgumentList	"""Failed to launch declareQueues process using Create_Process.\\n """		2905044	1					
ANR	2905716	Argument	"""Failed to launch declareQueues process using Create_Process.\\n """		2905044	0					
ANR	2905717	PrimaryExpression	"""Failed to launch declareQueues process using Create_Process.\\n """		2905044	0					
ANR	2905718	ExpressionStatement	free ( proc )	162:4:4806:4816	2905044	9	True				
ANR	2905719	CallExpression	free ( proc )		2905044	0					
ANR	2905720	Callee	free		2905044	0					
ANR	2905721	Identifier	free		2905044	0					
ANR	2905722	ArgumentList	proc		2905044	1					
ANR	2905723	Argument	proc		2905044	0					
ANR	2905724	Identifier	proc		2905044	0					
ANR	2905725	ExpressionStatement	free ( execDir )	163:4:4822:4835	2905044	10	True				
ANR	2905726	CallExpression	free ( execDir )		2905044	0					
ANR	2905727	Callee	free		2905044	0					
ANR	2905728	Identifier	free		2905044	0					
ANR	2905729	ArgumentList	execDir		2905044	1					
ANR	2905730	Argument	execDir		2905044	0					
ANR	2905731	Identifier	execDir		2905044	0					
ANR	2905732	ExpressionStatement	"dprintf ( D_ALWAYS , ""QPID queues declared. \\n"" )"	164:1:4838:4883	2905044	11	True				
ANR	2905733	CallExpression	"dprintf ( D_ALWAYS , ""QPID queues declared. \\n"" )"		2905044	0					
ANR	2905734	Callee	dprintf		2905044	0					
ANR	2905735	Identifier	dprintf		2905044	0					
ANR	2905736	ArgumentList	D_ALWAYS		2905044	1					
ANR	2905737	Argument	D_ALWAYS		2905044	0					
ANR	2905738	Identifier	D_ALWAYS		2905044	0					
ANR	2905739	Argument	"""QPID queues declared. \\n"""		2905044	1					
ANR	2905740	PrimaryExpression	"""QPID queues declared. \\n"""		2905044	0					
ANR	2905741	ReturnType	void		2905044	1					
ANR	2905742	Identifier	Pigeon :: initialize		2905044	2					
ANR	2905743	ParameterList			2905044	3					
ANR	2905744	CFGEntryNode	ENTRY		2905044		True				
ANR	2905745	CFGExitNode	EXIT		2905044		True				
ANR	2905746	Symbol	daemonCore -> Create_Process		2905044						
ANR	2905747	Symbol	ATTR_NAME		2905044						
ANR	2905748	Symbol	qArglist		2905044						
ANR	2905749	Symbol	O_CREAT		2905044						
ANR	2905750	Symbol	path		2905044						
ANR	2905751	Symbol	my_full_hostname		2905044						
ANR	2905752	Symbol	strlen		2905044						
ANR	2905753	Symbol	hostname		2905044						
ANR	2905754	Symbol	fd_stdout		2905044						
ANR	2905755	Symbol	portStr . c_str		2905044						
ANR	2905756	Symbol	argString		2905044						
ANR	2905757	Symbol	strcmp		2905044						
ANR	2905758	Symbol	NULL		2905044						
ANR	2905759	Symbol	this		2905044						
ANR	2905760	Symbol	argString . Value		2905044						
ANR	2905761	Symbol	safe_open_wrapper		2905044						
ANR	2905762	Symbol	m_qpidAd		2905044						
ANR	2905763	Symbol	& Pigeon :: reaperResponse		2905044						
ANR	2905764	Symbol	GENERIC_ADTYPE		2905044						
ANR	2905765	Symbol	m_adPubInterval		2905044						
ANR	2905766	Symbol	hostAddr		2905044						
ANR	2905767	Symbol	* daemonCore		2905044						
ANR	2905768	Symbol	& argString		2905044						
ANR	2905769	Symbol	mm_pid		2905044						
ANR	2905770	Symbol	hostAddr . c_str		2905044						
ANR	2905771	Symbol	string		2905044						
ANR	2905772	Symbol	portChr		2905044						
ANR	2905773	Symbol	& Pigeon :: publishClassAd		2905044						
ANR	2905774	Symbol	portStr		2905044						
ANR	2905775	Symbol	qpidConf		2905044						
ANR	2905776	Symbol	O_RDWR		2905044						
ANR	2905777	Symbol	param		2905044						
ANR	2905778	Symbol	daemonCore		2905044						
ANR	2905779	Symbol	arglist		2905044						
ANR	2905780	Symbol	PRIV_CONDOR_FINAL		2905044						
ANR	2905781	Symbol	malloc		2905044						
ANR	2905782	Symbol	proc		2905044						
ANR	2905783	Symbol	execDir		2905044						
ANR	2905784	Symbol	DIR_DELIM_CHAR		2905044						
ANR	2905785	Symbol	D_ALWAYS		2905044						
ANR	2905786	Symbol	false		2905044						
ANR	2905787	Symbol	qpidPort		2905044						
ANR	2905788	Symbol	argClean		2905044						
ANR	2905789	Symbol	daemonCore -> Register_Reaper		2905044						
ANR	2905790	Symbol	getPort		2905044						
ANR	2905791	Symbol	m_reaper		2905044						
ANR	2905792	Symbol	fds		2905044						
ANR	2905793	Symbol	FALSE		2905044						
ANR	2905794	Symbol	& m_qpidAd		2905044						
ANR	2905795	Symbol	getPortPath		2905044						
ANR	2905796	Function	Pigeon :: writeConfigFile	168:0:4893:8410							
ANR	2905797	FunctionDef	Pigeon :: writeConfigFile ()		2905796	0					
ANR	2905798	CompoundStatement		168:31:4924:8410	2905796	0					
ANR	2905799	IdentifierDeclStatement	MyString confFile ;	169:2:4928:4945	2905796	0	True				
ANR	2905800	IdentifierDecl	confFile		2905796	0					
ANR	2905801	IdentifierDeclType	MyString		2905796	0					
ANR	2905802	Identifier	confFile		2905796	1					
ANR	2905803	IdentifierDeclStatement	"char * logdir = param ( ""LOG"" ) ;"	170:2:4949:4976	2905796	1	True				
ANR	2905804	IdentifierDecl	"* logdir = param ( ""LOG"" )"		2905796	0					
ANR	2905805	IdentifierDeclType	char *		2905796	0					
ANR	2905806	Identifier	logdir		2905796	1					
ANR	2905807	AssignmentExpression	"* logdir = param ( ""LOG"" )"		2905796	2		=			
ANR	2905808	Identifier	logdir		2905796	0					
ANR	2905809	CallExpression	"param ( ""LOG"" )"		2905796	1					
ANR	2905810	Callee	param		2905796	0					
ANR	2905811	Identifier	param		2905796	0					
ANR	2905812	ArgumentList	"""LOG"""		2905796	1					
ANR	2905813	Argument	"""LOG"""		2905796	0					
ANR	2905814	PrimaryExpression	"""LOG"""		2905796	0					
ANR	2905815	IfStatement	if ( logdir == NULL )		2905796	2					
ANR	2905816	Condition	logdir == NULL	171:6:4984:4997	2905796	0	True				
ANR	2905817	EqualityExpression	logdir == NULL		2905796	0		==			
ANR	2905818	Identifier	logdir		2905796	0					
ANR	2905819	Identifier	NULL		2905796	1					
ANR	2905820	ExpressionStatement	"EXCEPT ( ""Misconfigured QPID!: log directory is not specified\\n"" )"	172:4:5005:5068	2905796	1	True				
ANR	2905821	CallExpression	"EXCEPT ( ""Misconfigured QPID!: log directory is not specified\\n"" )"		2905796	0					
ANR	2905822	Callee	EXCEPT		2905796	0					
ANR	2905823	Identifier	EXCEPT		2905796	0					
ANR	2905824	ArgumentList	"""Misconfigured QPID!: log directory is not specified\\n"""		2905796	1					
ANR	2905825	Argument	"""Misconfigured QPID!: log directory is not specified\\n"""		2905796	0					
ANR	2905826	PrimaryExpression	"""Misconfigured QPID!: log directory is not specified\\n"""		2905796	0					
ANR	2905827	ExpressionStatement	"confFile . sprintf ( ""%s/%s"" , logdir , m_siteFile . Value ( ) )"	174:2:5073:5126	2905796	3	True				
ANR	2905828	CallExpression	"confFile . sprintf ( ""%s/%s"" , logdir , m_siteFile . Value ( ) )"		2905796	0					
ANR	2905829	Callee	confFile . sprintf		2905796	0					
ANR	2905830	MemberAccess	confFile . sprintf		2905796	0					
ANR	2905831	Identifier	confFile		2905796	0					
ANR	2905832	Identifier	sprintf		2905796	1					
ANR	2905833	ArgumentList	"""%s/%s"""		2905796	1					
ANR	2905834	Argument	"""%s/%s"""		2905796	0					
ANR	2905835	PrimaryExpression	"""%s/%s"""		2905796	0					
ANR	2905836	Argument	logdir		2905796	1					
ANR	2905837	Identifier	logdir		2905796	0					
ANR	2905838	Argument	m_siteFile . Value ( )		2905796	2					
ANR	2905839	CallExpression	m_siteFile . Value ( )		2905796	0					
ANR	2905840	Callee	m_siteFile . Value		2905796	0					
ANR	2905841	MemberAccess	m_siteFile . Value		2905796	0					
ANR	2905842	Identifier	m_siteFile		2905796	0					
ANR	2905843	Identifier	Value		2905796	1					
ANR	2905844	ArgumentList			2905796	1					
ANR	2905845	ExpressionStatement	free ( logdir )	175:2:5130:5142	2905796	4	True				
ANR	2905846	CallExpression	free ( logdir )		2905796	0					
ANR	2905847	Callee	free		2905796	0					
ANR	2905848	Identifier	free		2905796	0					
ANR	2905849	ArgumentList	logdir		2905796	1					
ANR	2905850	Argument	logdir		2905796	0					
ANR	2905851	Identifier	logdir		2905796	0					
ANR	2905852	ExpressionStatement	"dprintf ( D_ALWAYS , ""Config file location %s\\n"" , confFile . Value ( ) )"	176:2:5146:5210	2905796	5	True				
ANR	2905853	CallExpression	"dprintf ( D_ALWAYS , ""Config file location %s\\n"" , confFile . Value ( ) )"		2905796	0					
ANR	2905854	Callee	dprintf		2905796	0					
ANR	2905855	Identifier	dprintf		2905796	0					
ANR	2905856	ArgumentList	D_ALWAYS		2905796	1					
ANR	2905857	Argument	D_ALWAYS		2905796	0					
ANR	2905858	Identifier	D_ALWAYS		2905796	0					
ANR	2905859	Argument	"""Config file location %s\\n"""		2905796	1					
ANR	2905860	PrimaryExpression	"""Config file location %s\\n"""		2905796	0					
ANR	2905861	Argument	confFile . Value ( )		2905796	2					
ANR	2905862	CallExpression	confFile . Value ( )		2905796	0					
ANR	2905863	Callee	confFile . Value		2905796	0					
ANR	2905864	MemberAccess	confFile . Value		2905796	0					
ANR	2905865	Identifier	confFile		2905796	0					
ANR	2905866	Identifier	Value		2905796	1					
ANR	2905867	ArgumentList			2905796	1					
ANR	2905868	IdentifierDeclStatement	"int fd = safe_create_replace_if_exists ( confFile . Value ( ) , O_CREAT | O_WRONLY ) ;"	178:2:5215:5289	2905796	6	True				
ANR	2905869	IdentifierDecl	"fd = safe_create_replace_if_exists ( confFile . Value ( ) , O_CREAT | O_WRONLY )"		2905796	0					
ANR	2905870	IdentifierDeclType	int		2905796	0					
ANR	2905871	Identifier	fd		2905796	1					
ANR	2905872	AssignmentExpression	"fd = safe_create_replace_if_exists ( confFile . Value ( ) , O_CREAT | O_WRONLY )"		2905796	2		=			
ANR	2905873	Identifier	fd		2905796	0					
ANR	2905874	CallExpression	"safe_create_replace_if_exists ( confFile . Value ( ) , O_CREAT | O_WRONLY )"		2905796	1					
ANR	2905875	Callee	safe_create_replace_if_exists		2905796	0					
ANR	2905876	Identifier	safe_create_replace_if_exists		2905796	0					
ANR	2905877	ArgumentList	confFile . Value ( )		2905796	1					
ANR	2905878	Argument	confFile . Value ( )		2905796	0					
ANR	2905879	CallExpression	confFile . Value ( )		2905796	0					
ANR	2905880	Callee	confFile . Value		2905796	0					
ANR	2905881	MemberAccess	confFile . Value		2905796	0					
ANR	2905882	Identifier	confFile		2905796	0					
ANR	2905883	Identifier	Value		2905796	1					
ANR	2905884	ArgumentList			2905796	1					
ANR	2905885	Argument	O_CREAT | O_WRONLY		2905796	1					
ANR	2905886	InclusiveOrExpression	O_CREAT | O_WRONLY		2905796	0		|			
ANR	2905887	Identifier	O_CREAT		2905796	0					
ANR	2905888	Identifier	O_WRONLY		2905796	1					
ANR	2905889	IfStatement	if ( fd == - 1 )		2905796	7					
ANR	2905890	Condition	fd == - 1	179:6:5297:5304	2905796	0	True				
ANR	2905891	EqualityExpression	fd == - 1		2905796	0		==			
ANR	2905892	Identifier	fd		2905796	0					
ANR	2905893	UnaryOperationExpression	- 1		2905796	1					
ANR	2905894	UnaryOperator	-		2905796	0					
ANR	2905895	PrimaryExpression	1		2905796	1					
ANR	2905896	CompoundStatement		12:16:382:382	2905796	1					
ANR	2905897	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to create qpid configuration file\\n"" )"	180:4:5313:5376	2905796	0	True				
ANR	2905898	CallExpression	"dprintf ( D_ALWAYS , ""Failed to create qpid configuration file\\n"" )"		2905796	0					
ANR	2905899	Callee	dprintf		2905796	0					
ANR	2905900	Identifier	dprintf		2905796	0					
ANR	2905901	ArgumentList	D_ALWAYS		2905796	1					
ANR	2905902	Argument	D_ALWAYS		2905796	0					
ANR	2905903	Identifier	D_ALWAYS		2905796	0					
ANR	2905904	Argument	"""Failed to create qpid configuration file\\n"""		2905796	1					
ANR	2905905	PrimaryExpression	"""Failed to create qpid configuration file\\n"""		2905796	0					
ANR	2905906	ExpressionStatement	exit ( 1 )	181:4:5382:5389	2905796	1	True				
ANR	2905907	CallExpression	exit ( 1 )		2905796	0					
ANR	2905908	Callee	exit		2905796	0					
ANR	2905909	Identifier	exit		2905796	0					
ANR	2905910	ArgumentList	1		2905796	1					
ANR	2905911	Argument	1		2905796	0					
ANR	2905912	PrimaryExpression	1		2905796	0					
ANR	2905913	IdentifierDeclStatement	"StringList xml ( """" , ""\\n"" ) ;"	184:2:5398:5422	2905796	8	True				
ANR	2905914	IdentifierDecl	"xml ( """" , ""\\n"" )"		2905796	0					
ANR	2905915	IdentifierDeclType	StringList		2905796	0					
ANR	2905916	Identifier	xml		2905796	1					
ANR	2905917	Expression	""""" , ""\\n"""		2905796	2					
ANR	2905918	PrimaryExpression	""""""		2905796	0					
ANR	2905919	PrimaryExpression	"""\\n"""		2905796	1					
ANR	2905920	ExpressionStatement		184:27:5423:5423	2905796	9	True				
ANR	2905921	ExpressionStatement	"xml . append ( ""<?xml version=\\""1.0\\""?>"" )"	185:2:5427:5464	2905796	10	True				
ANR	2905922	CallExpression	"xml . append ( ""<?xml version=\\""1.0\\""?>"" )"		2905796	0					
ANR	2905923	Callee	xml . append		2905796	0					
ANR	2905924	MemberAccess	xml . append		2905796	0					
ANR	2905925	Identifier	xml		2905796	0					
ANR	2905926	Identifier	append		2905796	1					
ANR	2905927	ArgumentList	"""<?xml version=\\""1.0\\""?>"""		2905796	1					
ANR	2905928	Argument	"""<?xml version=\\""1.0\\""?>"""		2905796	0					
ANR	2905929	PrimaryExpression	"""<?xml version=\\""1.0\\""?>"""		2905796	0					
ANR	2905930	ExpressionStatement	"xml . append ( ""<?xml-stylesheet type=\\""text/xsl\\"" href=\\""configuration.xsl\\""?>"" )"	186:2:5468:5545	2905796	11	True				
ANR	2905931	CallExpression	"xml . append ( ""<?xml-stylesheet type=\\""text/xsl\\"" href=\\""configuration.xsl\\""?>"" )"		2905796	0					
ANR	2905932	Callee	xml . append		2905796	0					
ANR	2905933	MemberAccess	xml . append		2905796	0					
ANR	2905934	Identifier	xml		2905796	0					
ANR	2905935	Identifier	append		2905796	1					
ANR	2905936	ArgumentList	"""<?xml-stylesheet type=\\""text/xsl\\"" href=\\""configuration.xsl\\""?>"""		2905796	1					
ANR	2905937	Argument	"""<?xml-stylesheet type=\\""text/xsl\\"" href=\\""configuration.xsl\\""?>"""		2905796	0					
ANR	2905938	PrimaryExpression	"""<?xml-stylesheet type=\\""text/xsl\\"" href=\\""configuration.xsl\\""?>"""		2905796	0					
ANR	2905939	ExpressionStatement	"xml . append ( ""<!-- DON'T MODIFY this file manually, as it is overwritten by CONDOR.-->"" )"	187:2:5549:5635	2905796	12	True				
ANR	2905940	CallExpression	"xml . append ( ""<!-- DON'T MODIFY this file manually, as it is overwritten by CONDOR.-->"" )"		2905796	0					
ANR	2905941	Callee	xml . append		2905796	0					
ANR	2905942	MemberAccess	xml . append		2905796	0					
ANR	2905943	Identifier	xml		2905796	0					
ANR	2905944	Identifier	append		2905796	1					
ANR	2905945	ArgumentList	"""<!-- DON'T MODIFY this file manually, as it is overwritten by CONDOR.-->"""		2905796	1					
ANR	2905946	Argument	"""<!-- DON'T MODIFY this file manually, as it is overwritten by CONDOR.-->"""		2905796	0					
ANR	2905947	PrimaryExpression	"""<!-- DON'T MODIFY this file manually, as it is overwritten by CONDOR.-->"""		2905796	0					
ANR	2905948	ExpressionStatement	"xml . append ( ""<configuration>"" )"	188:2:5639:5668	2905796	13	True				
ANR	2905949	CallExpression	"xml . append ( ""<configuration>"" )"		2905796	0					
ANR	2905950	Callee	xml . append		2905796	0					
ANR	2905951	MemberAccess	xml . append		2905796	0					
ANR	2905952	Identifier	xml		2905796	0					
ANR	2905953	Identifier	append		2905796	1					
ANR	2905954	ArgumentList	"""<configuration>"""		2905796	1					
ANR	2905955	Argument	"""<configuration>"""		2905796	0					
ANR	2905956	PrimaryExpression	"""<configuration>"""		2905796	0					
ANR	2905957	IdentifierDeclStatement	"char * namenode = param ( ""QPID_NAMENODE"" ) ;"	190:2:5673:5712	2905796	14	True				
ANR	2905958	IdentifierDecl	"* namenode = param ( ""QPID_NAMENODE"" )"		2905796	0					
ANR	2905959	IdentifierDeclType	char *		2905796	0					
ANR	2905960	Identifier	namenode		2905796	1					
ANR	2905961	AssignmentExpression	"* namenode = param ( ""QPID_NAMENODE"" )"		2905796	2		=			
ANR	2905962	Identifier	namenode		2905796	0					
ANR	2905963	CallExpression	"param ( ""QPID_NAMENODE"" )"		2905796	1					
ANR	2905964	Callee	param		2905796	0					
ANR	2905965	Identifier	param		2905796	0					
ANR	2905966	ArgumentList	"""QPID_NAMENODE"""		2905796	1					
ANR	2905967	Argument	"""QPID_NAMENODE"""		2905796	0					
ANR	2905968	PrimaryExpression	"""QPID_NAMENODE"""		2905796	0					
ANR	2905969	IfStatement	if ( namenode != NULL )		2905796	15					
ANR	2905970	Condition	namenode != NULL	191:6:5720:5735	2905796	0	True				
ANR	2905971	EqualityExpression	namenode != NULL		2905796	0		!=			
ANR	2905972	Identifier	namenode		2905796	0					
ANR	2905973	Identifier	NULL		2905796	1					
ANR	2905974	CompoundStatement		24:24:813:813	2905796	1					
ANR	2905975	ExpressionStatement	"writeXMLParam ( ""fs.default.name"" , namenode , & xml )"	192:4:5744:5792	2905796	0	True				
ANR	2905976	CallExpression	"writeXMLParam ( ""fs.default.name"" , namenode , & xml )"		2905796	0					
ANR	2905977	Callee	writeXMLParam		2905796	0					
ANR	2905978	Identifier	writeXMLParam		2905796	0					
ANR	2905979	ArgumentList	"""fs.default.name"""		2905796	1					
ANR	2905980	Argument	"""fs.default.name"""		2905796	0					
ANR	2905981	PrimaryExpression	"""fs.default.name"""		2905796	0					
ANR	2905982	Argument	namenode		2905796	1					
ANR	2905983	Identifier	namenode		2905796	0					
ANR	2905984	Argument	& xml		2905796	2					
ANR	2905985	UnaryOperationExpression	& xml		2905796	0					
ANR	2905986	UnaryOperator	&		2905796	0					
ANR	2905987	Identifier	xml		2905796	1					
ANR	2905988	ExpressionStatement	free ( namenode )	193:4:5798:5812	2905796	1	True				
ANR	2905989	CallExpression	free ( namenode )		2905796	0					
ANR	2905990	Callee	free		2905796	0					
ANR	2905991	Identifier	free		2905796	0					
ANR	2905992	ArgumentList	namenode		2905796	1					
ANR	2905993	Argument	namenode		2905796	0					
ANR	2905994	Identifier	namenode		2905796	0					
ANR	2905995	ExpressionStatement	"m_nameNodeDir = ""/tmp/qpid_name"""	196:2:5822:5857	2905796	16	True				
ANR	2905996	AssignmentExpression	"m_nameNodeDir = ""/tmp/qpid_name"""		2905796	0		=			
ANR	2905997	Identifier	m_nameNodeDir		2905796	0					
ANR	2905998	PrimaryExpression	"""/tmp/qpid_name"""		2905796	1					
ANR	2905999	IdentifierDeclStatement	"char * ndir = param ( ""QPID_NAMENODE_DIR"" ) ;"	197:2:5861:5900	2905796	17	True				
ANR	2906000	IdentifierDecl	"* ndir = param ( ""QPID_NAMENODE_DIR"" )"		2905796	0					
ANR	2906001	IdentifierDeclType	char *		2905796	0					
ANR	2906002	Identifier	ndir		2905796	1					
ANR	2906003	AssignmentExpression	"* ndir = param ( ""QPID_NAMENODE_DIR"" )"		2905796	2		=			
ANR	2906004	Identifier	ndir		2905796	0					
ANR	2906005	CallExpression	"param ( ""QPID_NAMENODE_DIR"" )"		2905796	1					
ANR	2906006	Callee	param		2905796	0					
ANR	2906007	Identifier	param		2905796	0					
ANR	2906008	ArgumentList	"""QPID_NAMENODE_DIR"""		2905796	1					
ANR	2906009	Argument	"""QPID_NAMENODE_DIR"""		2905796	0					
ANR	2906010	PrimaryExpression	"""QPID_NAMENODE_DIR"""		2905796	0					
ANR	2906011	IfStatement	if ( ndir != NULL )		2905796	18					
ANR	2906012	Condition	ndir != NULL	198:6:5908:5919	2905796	0	True				
ANR	2906013	EqualityExpression	ndir != NULL		2905796	0		!=			
ANR	2906014	Identifier	ndir		2905796	0					
ANR	2906015	Identifier	NULL		2905796	1					
ANR	2906016	CompoundStatement		31:20:997:997	2905796	1					
ANR	2906017	ExpressionStatement	"writeXMLParam ( ""dfs.name.dir"" , ndir , & xml )"	199:4:5928:5969	2905796	0	True				
ANR	2906018	CallExpression	"writeXMLParam ( ""dfs.name.dir"" , ndir , & xml )"		2905796	0					
ANR	2906019	Callee	writeXMLParam		2905796	0					
ANR	2906020	Identifier	writeXMLParam		2905796	0					
ANR	2906021	ArgumentList	"""dfs.name.dir"""		2905796	1					
ANR	2906022	Argument	"""dfs.name.dir"""		2905796	0					
ANR	2906023	PrimaryExpression	"""dfs.name.dir"""		2905796	0					
ANR	2906024	Argument	ndir		2905796	1					
ANR	2906025	Identifier	ndir		2905796	0					
ANR	2906026	Argument	& xml		2905796	2					
ANR	2906027	UnaryOperationExpression	& xml		2905796	0					
ANR	2906028	UnaryOperator	&		2905796	0					
ANR	2906029	Identifier	xml		2905796	1					
ANR	2906030	ExpressionStatement	m_nameNodeDir = ndir	200:4:5975:5995	2905796	1	True				
ANR	2906031	AssignmentExpression	m_nameNodeDir = ndir		2905796	0		=			
ANR	2906032	Identifier	m_nameNodeDir		2905796	0					
ANR	2906033	Identifier	ndir		2905796	1					
ANR	2906034	ExpressionStatement	free ( ndir )	201:4:6001:6011	2905796	2	True				
ANR	2906035	CallExpression	free ( ndir )		2905796	0					
ANR	2906036	Callee	free		2905796	0					
ANR	2906037	Identifier	free		2905796	0					
ANR	2906038	ArgumentList	ndir		2905796	1					
ANR	2906039	Argument	ndir		2905796	0					
ANR	2906040	Identifier	ndir		2905796	0					
ANR	2906041	IdentifierDeclStatement	"char * ddir = param ( ""QPID_DATANODE_DIR"" ) ;"	204:2:6020:6059	2905796	19	True				
ANR	2906042	IdentifierDecl	"* ddir = param ( ""QPID_DATANODE_DIR"" )"		2905796	0					
ANR	2906043	IdentifierDeclType	char *		2905796	0					
ANR	2906044	Identifier	ddir		2905796	1					
ANR	2906045	AssignmentExpression	"* ddir = param ( ""QPID_DATANODE_DIR"" )"		2905796	2		=			
ANR	2906046	Identifier	ddir		2905796	0					
ANR	2906047	CallExpression	"param ( ""QPID_DATANODE_DIR"" )"		2905796	1					
ANR	2906048	Callee	param		2905796	0					
ANR	2906049	Identifier	param		2905796	0					
ANR	2906050	ArgumentList	"""QPID_DATANODE_DIR"""		2905796	1					
ANR	2906051	Argument	"""QPID_DATANODE_DIR"""		2905796	0					
ANR	2906052	PrimaryExpression	"""QPID_DATANODE_DIR"""		2905796	0					
ANR	2906053	IfStatement	if ( ddir != NULL )		2905796	20					
ANR	2906054	Condition	ddir != NULL	205:6:6067:6078	2905796	0	True				
ANR	2906055	EqualityExpression	ddir != NULL		2905796	0		!=			
ANR	2906056	Identifier	ddir		2905796	0					
ANR	2906057	Identifier	NULL		2905796	1					
ANR	2906058	CompoundStatement		38:20:1156:1156	2905796	1					
ANR	2906059	ExpressionStatement	"writeXMLParam ( ""dfs.data.dir"" , ddir , & xml )"	206:4:6087:6128	2905796	0	True				
ANR	2906060	CallExpression	"writeXMLParam ( ""dfs.data.dir"" , ddir , & xml )"		2905796	0					
ANR	2906061	Callee	writeXMLParam		2905796	0					
ANR	2906062	Identifier	writeXMLParam		2905796	0					
ANR	2906063	ArgumentList	"""dfs.data.dir"""		2905796	1					
ANR	2906064	Argument	"""dfs.data.dir"""		2905796	0					
ANR	2906065	PrimaryExpression	"""dfs.data.dir"""		2905796	0					
ANR	2906066	Argument	ddir		2905796	1					
ANR	2906067	Identifier	ddir		2905796	0					
ANR	2906068	Argument	& xml		2905796	2					
ANR	2906069	UnaryOperationExpression	& xml		2905796	0					
ANR	2906070	UnaryOperator	&		2905796	0					
ANR	2906071	Identifier	xml		2905796	1					
ANR	2906072	ExpressionStatement	free ( ddir )	207:4:6134:6144	2905796	1	True				
ANR	2906073	CallExpression	free ( ddir )		2905796	0					
ANR	2906074	Callee	free		2905796	0					
ANR	2906075	Identifier	free		2905796	0					
ANR	2906076	ArgumentList	ddir		2905796	1					
ANR	2906077	Argument	ddir		2905796	0					
ANR	2906078	Identifier	ddir		2905796	0					
ANR	2906079	IdentifierDeclStatement	"char * dadd = param ( ""QPID_DATANODE_ADDRESS"" ) ;"	210:2:6153:6196	2905796	21	True				
ANR	2906080	IdentifierDecl	"* dadd = param ( ""QPID_DATANODE_ADDRESS"" )"		2905796	0					
ANR	2906081	IdentifierDeclType	char *		2905796	0					
ANR	2906082	Identifier	dadd		2905796	1					
ANR	2906083	AssignmentExpression	"* dadd = param ( ""QPID_DATANODE_ADDRESS"" )"		2905796	2		=			
ANR	2906084	Identifier	dadd		2905796	0					
ANR	2906085	CallExpression	"param ( ""QPID_DATANODE_ADDRESS"" )"		2905796	1					
ANR	2906086	Callee	param		2905796	0					
ANR	2906087	Identifier	param		2905796	0					
ANR	2906088	ArgumentList	"""QPID_DATANODE_ADDRESS"""		2905796	1					
ANR	2906089	Argument	"""QPID_DATANODE_ADDRESS"""		2905796	0					
ANR	2906090	PrimaryExpression	"""QPID_DATANODE_ADDRESS"""		2905796	0					
ANR	2906091	IfStatement	if ( dadd != NULL )		2905796	22					
ANR	2906092	Condition	dadd != NULL	211:6:6204:6215	2905796	0	True				
ANR	2906093	EqualityExpression	dadd != NULL		2905796	0		!=			
ANR	2906094	Identifier	dadd		2905796	0					
ANR	2906095	Identifier	NULL		2905796	1					
ANR	2906096	CompoundStatement		44:20:1293:1293	2905796	1					
ANR	2906097	ExpressionStatement	"writeXMLParam ( ""dfs.datanode.address"" , dadd , & xml )"	212:4:6224:6273	2905796	0	True				
ANR	2906098	CallExpression	"writeXMLParam ( ""dfs.datanode.address"" , dadd , & xml )"		2905796	0					
ANR	2906099	Callee	writeXMLParam		2905796	0					
ANR	2906100	Identifier	writeXMLParam		2905796	0					
ANR	2906101	ArgumentList	"""dfs.datanode.address"""		2905796	1					
ANR	2906102	Argument	"""dfs.datanode.address"""		2905796	0					
ANR	2906103	PrimaryExpression	"""dfs.datanode.address"""		2905796	0					
ANR	2906104	Argument	dadd		2905796	1					
ANR	2906105	Identifier	dadd		2905796	0					
ANR	2906106	Argument	& xml		2905796	2					
ANR	2906107	UnaryOperationExpression	& xml		2905796	0					
ANR	2906108	UnaryOperator	&		2905796	0					
ANR	2906109	Identifier	xml		2905796	1					
ANR	2906110	ExpressionStatement	free ( dadd )	213:4:6279:6289	2905796	1	True				
ANR	2906111	CallExpression	free ( dadd )		2905796	0					
ANR	2906112	Callee	free		2905796	0					
ANR	2906113	Identifier	free		2905796	0					
ANR	2906114	ArgumentList	dadd		2905796	1					
ANR	2906115	Argument	dadd		2905796	0					
ANR	2906116	Identifier	dadd		2905796	0					
ANR	2906117	IdentifierDeclStatement	"char * daddw = param ( ""QPID_DATANODE_WEB"" ) ;"	216:2:6298:6338	2905796	23	True				
ANR	2906118	IdentifierDecl	"* daddw = param ( ""QPID_DATANODE_WEB"" )"		2905796	0					
ANR	2906119	IdentifierDeclType	char *		2905796	0					
ANR	2906120	Identifier	daddw		2905796	1					
ANR	2906121	AssignmentExpression	"* daddw = param ( ""QPID_DATANODE_WEB"" )"		2905796	2		=			
ANR	2906122	Identifier	daddw		2905796	0					
ANR	2906123	CallExpression	"param ( ""QPID_DATANODE_WEB"" )"		2905796	1					
ANR	2906124	Callee	param		2905796	0					
ANR	2906125	Identifier	param		2905796	0					
ANR	2906126	ArgumentList	"""QPID_DATANODE_WEB"""		2905796	1					
ANR	2906127	Argument	"""QPID_DATANODE_WEB"""		2905796	0					
ANR	2906128	PrimaryExpression	"""QPID_DATANODE_WEB"""		2905796	0					
ANR	2906129	IfStatement	if ( daddw != NULL )		2905796	24					
ANR	2906130	Condition	daddw != NULL	217:6:6346:6358	2905796	0	True				
ANR	2906131	EqualityExpression	daddw != NULL		2905796	0		!=			
ANR	2906132	Identifier	daddw		2905796	0					
ANR	2906133	Identifier	NULL		2905796	1					
ANR	2906134	CompoundStatement		50:21:1436:1436	2905796	1					
ANR	2906135	ExpressionStatement	"writeXMLParam ( ""dfs.datanode.http.address"" , daddw , & xml )"	218:4:6367:6422	2905796	0	True				
ANR	2906136	CallExpression	"writeXMLParam ( ""dfs.datanode.http.address"" , daddw , & xml )"		2905796	0					
ANR	2906137	Callee	writeXMLParam		2905796	0					
ANR	2906138	Identifier	writeXMLParam		2905796	0					
ANR	2906139	ArgumentList	"""dfs.datanode.http.address"""		2905796	1					
ANR	2906140	Argument	"""dfs.datanode.http.address"""		2905796	0					
ANR	2906141	PrimaryExpression	"""dfs.datanode.http.address"""		2905796	0					
ANR	2906142	Argument	daddw		2905796	1					
ANR	2906143	Identifier	daddw		2905796	0					
ANR	2906144	Argument	& xml		2905796	2					
ANR	2906145	UnaryOperationExpression	& xml		2905796	0					
ANR	2906146	UnaryOperator	&		2905796	0					
ANR	2906147	Identifier	xml		2905796	1					
ANR	2906148	ExpressionStatement	free ( daddw )	219:4:6428:6439	2905796	1	True				
ANR	2906149	CallExpression	free ( daddw )		2905796	0					
ANR	2906150	Callee	free		2905796	0					
ANR	2906151	Identifier	free		2905796	0					
ANR	2906152	ArgumentList	daddw		2905796	1					
ANR	2906153	Argument	daddw		2905796	0					
ANR	2906154	Identifier	daddw		2905796	0					
ANR	2906155	IdentifierDeclStatement	"char * nnaddw = param ( ""QPID_NAMENODE_WEB"" ) ;"	222:2:6448:6489	2905796	25	True				
ANR	2906156	IdentifierDecl	"* nnaddw = param ( ""QPID_NAMENODE_WEB"" )"		2905796	0					
ANR	2906157	IdentifierDeclType	char *		2905796	0					
ANR	2906158	Identifier	nnaddw		2905796	1					
ANR	2906159	AssignmentExpression	"* nnaddw = param ( ""QPID_NAMENODE_WEB"" )"		2905796	2		=			
ANR	2906160	Identifier	nnaddw		2905796	0					
ANR	2906161	CallExpression	"param ( ""QPID_NAMENODE_WEB"" )"		2905796	1					
ANR	2906162	Callee	param		2905796	0					
ANR	2906163	Identifier	param		2905796	0					
ANR	2906164	ArgumentList	"""QPID_NAMENODE_WEB"""		2905796	1					
ANR	2906165	Argument	"""QPID_NAMENODE_WEB"""		2905796	0					
ANR	2906166	PrimaryExpression	"""QPID_NAMENODE_WEB"""		2905796	0					
ANR	2906167	IfStatement	if ( nnaddw != NULL )		2905796	26					
ANR	2906168	Condition	nnaddw != NULL	223:6:6497:6510	2905796	0	True				
ANR	2906169	EqualityExpression	nnaddw != NULL		2905796	0		!=			
ANR	2906170	Identifier	nnaddw		2905796	0					
ANR	2906171	Identifier	NULL		2905796	1					
ANR	2906172	CompoundStatement		56:22:1588:1588	2905796	1					
ANR	2906173	ExpressionStatement	"writeXMLParam ( ""dfs.http.address"" , nnaddw , & xml )"	224:4:6519:6566	2905796	0	True				
ANR	2906174	CallExpression	"writeXMLParam ( ""dfs.http.address"" , nnaddw , & xml )"		2905796	0					
ANR	2906175	Callee	writeXMLParam		2905796	0					
ANR	2906176	Identifier	writeXMLParam		2905796	0					
ANR	2906177	ArgumentList	"""dfs.http.address"""		2905796	1					
ANR	2906178	Argument	"""dfs.http.address"""		2905796	0					
ANR	2906179	PrimaryExpression	"""dfs.http.address"""		2905796	0					
ANR	2906180	Argument	nnaddw		2905796	1					
ANR	2906181	Identifier	nnaddw		2905796	0					
ANR	2906182	Argument	& xml		2905796	2					
ANR	2906183	UnaryOperationExpression	& xml		2905796	0					
ANR	2906184	UnaryOperator	&		2905796	0					
ANR	2906185	Identifier	xml		2905796	1					
ANR	2906186	ExpressionStatement	free ( nnaddw )	225:4:6572:6584	2905796	1	True				
ANR	2906187	CallExpression	free ( nnaddw )		2905796	0					
ANR	2906188	Callee	free		2905796	0					
ANR	2906189	Identifier	free		2905796	0					
ANR	2906190	ArgumentList	nnaddw		2905796	1					
ANR	2906191	Argument	nnaddw		2905796	0					
ANR	2906192	Identifier	nnaddw		2905796	0					
ANR	2906193	IdentifierDeclStatement	"char * rep = param ( ""QPID_REPLICATION"" ) ;"	228:2:6593:6630	2905796	27	True				
ANR	2906194	IdentifierDecl	"* rep = param ( ""QPID_REPLICATION"" )"		2905796	0					
ANR	2906195	IdentifierDeclType	char *		2905796	0					
ANR	2906196	Identifier	rep		2905796	1					
ANR	2906197	AssignmentExpression	"* rep = param ( ""QPID_REPLICATION"" )"		2905796	2		=			
ANR	2906198	Identifier	rep		2905796	0					
ANR	2906199	CallExpression	"param ( ""QPID_REPLICATION"" )"		2905796	1					
ANR	2906200	Callee	param		2905796	0					
ANR	2906201	Identifier	param		2905796	0					
ANR	2906202	ArgumentList	"""QPID_REPLICATION"""		2905796	1					
ANR	2906203	Argument	"""QPID_REPLICATION"""		2905796	0					
ANR	2906204	PrimaryExpression	"""QPID_REPLICATION"""		2905796	0					
ANR	2906205	IfStatement	if ( rep != NULL )		2905796	28					
ANR	2906206	Condition	rep != NULL	229:6:6638:6648	2905796	0	True				
ANR	2906207	EqualityExpression	rep != NULL		2905796	0		!=			
ANR	2906208	Identifier	rep		2905796	0					
ANR	2906209	Identifier	NULL		2905796	1					
ANR	2906210	CompoundStatement		62:19:1726:1726	2905796	1					
ANR	2906211	ExpressionStatement	"writeXMLParam ( ""dfs.replication"" , rep , & xml )"	230:4:6657:6700	2905796	0	True				
ANR	2906212	CallExpression	"writeXMLParam ( ""dfs.replication"" , rep , & xml )"		2905796	0					
ANR	2906213	Callee	writeXMLParam		2905796	0					
ANR	2906214	Identifier	writeXMLParam		2905796	0					
ANR	2906215	ArgumentList	"""dfs.replication"""		2905796	1					
ANR	2906216	Argument	"""dfs.replication"""		2905796	0					
ANR	2906217	PrimaryExpression	"""dfs.replication"""		2905796	0					
ANR	2906218	Argument	rep		2905796	1					
ANR	2906219	Identifier	rep		2905796	0					
ANR	2906220	Argument	& xml		2905796	2					
ANR	2906221	UnaryOperationExpression	& xml		2905796	0					
ANR	2906222	UnaryOperator	&		2905796	0					
ANR	2906223	Identifier	xml		2905796	1					
ANR	2906224	ExpressionStatement	free ( rep )	231:4:6706:6715	2905796	1	True				
ANR	2906225	CallExpression	free ( rep )		2905796	0					
ANR	2906226	Callee	free		2905796	0					
ANR	2906227	Identifier	free		2905796	0					
ANR	2906228	ArgumentList	rep		2905796	1					
ANR	2906229	Argument	rep		2905796	0					
ANR	2906230	Identifier	rep		2905796	0					
ANR	2906231	IdentifierDeclStatement	"char * qpid_allow = param ( ""QPID_ALLOW"" ) ;"	235:2:6762:6800	2905796	29	True				
ANR	2906232	IdentifierDecl	"* qpid_allow = param ( ""QPID_ALLOW"" )"		2905796	0					
ANR	2906233	IdentifierDeclType	char *		2905796	0					
ANR	2906234	Identifier	qpid_allow		2905796	1					
ANR	2906235	AssignmentExpression	"* qpid_allow = param ( ""QPID_ALLOW"" )"		2905796	2		=			
ANR	2906236	Identifier	qpid_allow		2905796	0					
ANR	2906237	CallExpression	"param ( ""QPID_ALLOW"" )"		2905796	1					
ANR	2906238	Callee	param		2905796	0					
ANR	2906239	Identifier	param		2905796	0					
ANR	2906240	ArgumentList	"""QPID_ALLOW"""		2905796	1					
ANR	2906241	Argument	"""QPID_ALLOW"""		2905796	0					
ANR	2906242	PrimaryExpression	"""QPID_ALLOW"""		2905796	0					
ANR	2906243	IfStatement	if ( qpid_allow != NULL )		2905796	30					
ANR	2906244	Condition	qpid_allow != NULL	236:6:6808:6825	2905796	0	True				
ANR	2906245	EqualityExpression	qpid_allow != NULL		2905796	0		!=			
ANR	2906246	Identifier	qpid_allow		2905796	0					
ANR	2906247	Identifier	NULL		2905796	1					
ANR	2906248	CompoundStatement		69:26:1903:1903	2905796	1					
ANR	2906249	ExpressionStatement	"writeXMLParam ( ""dfs.net.allow"" , qpid_allow , & xml )"	237:4:6834:6882	2905796	0	True				
ANR	2906250	CallExpression	"writeXMLParam ( ""dfs.net.allow"" , qpid_allow , & xml )"		2905796	0					
ANR	2906251	Callee	writeXMLParam		2905796	0					
ANR	2906252	Identifier	writeXMLParam		2905796	0					
ANR	2906253	ArgumentList	"""dfs.net.allow"""		2905796	1					
ANR	2906254	Argument	"""dfs.net.allow"""		2905796	0					
ANR	2906255	PrimaryExpression	"""dfs.net.allow"""		2905796	0					
ANR	2906256	Argument	qpid_allow		2905796	1					
ANR	2906257	Identifier	qpid_allow		2905796	0					
ANR	2906258	Argument	& xml		2905796	2					
ANR	2906259	UnaryOperationExpression	& xml		2905796	0					
ANR	2906260	UnaryOperator	&		2905796	0					
ANR	2906261	Identifier	xml		2905796	1					
ANR	2906262	ExpressionStatement	free ( qpid_allow )	238:4:6888:6904	2905796	1	True				
ANR	2906263	CallExpression	free ( qpid_allow )		2905796	0					
ANR	2906264	Callee	free		2905796	0					
ANR	2906265	Identifier	free		2905796	0					
ANR	2906266	ArgumentList	qpid_allow		2905796	1					
ANR	2906267	Argument	qpid_allow		2905796	0					
ANR	2906268	Identifier	qpid_allow		2905796	0					
ANR	2906269	ElseStatement	else		2905796	0					
ANR	2906270	CompoundStatement		85:4:2302:2357	2905796	0					
ANR	2906271	IdentifierDeclStatement	StringList allow_list ;	240:4:6921:6942	2905796	0	True				
ANR	2906272	IdentifierDecl	allow_list		2905796	0					
ANR	2906273	IdentifierDeclType	StringList		2905796	0					
ANR	2906274	Identifier	allow_list		2905796	1					
ANR	2906275	ExpressionStatement	"qpid_allow = param ( ""HOSTALLOW_READ"" )"	241:4:6948:6984	2905796	1	True				
ANR	2906276	AssignmentExpression	"qpid_allow = param ( ""HOSTALLOW_READ"" )"		2905796	0		=			
ANR	2906277	Identifier	qpid_allow		2905796	0					
ANR	2906278	CallExpression	"param ( ""HOSTALLOW_READ"" )"		2905796	1					
ANR	2906279	Callee	param		2905796	0					
ANR	2906280	Identifier	param		2905796	0					
ANR	2906281	ArgumentList	"""HOSTALLOW_READ"""		2905796	1					
ANR	2906282	Argument	"""HOSTALLOW_READ"""		2905796	0					
ANR	2906283	PrimaryExpression	"""HOSTALLOW_READ"""		2905796	0					
ANR	2906284	IfStatement	if ( qpid_allow != NULL )		2905796	2					
ANR	2906285	Condition	qpid_allow != NULL	242:8:6994:7011	2905796	0	True				
ANR	2906286	EqualityExpression	qpid_allow != NULL		2905796	0		!=			
ANR	2906287	Identifier	qpid_allow		2905796	0					
ANR	2906288	Identifier	NULL		2905796	1					
ANR	2906289	CompoundStatement		75:28:2089:2089	2905796	1					
ANR	2906290	ExpressionStatement	allow_list . append ( qpid_allow )	243:6:7022:7051	2905796	0	True				
ANR	2906291	CallExpression	allow_list . append ( qpid_allow )		2905796	0					
ANR	2906292	Callee	allow_list . append		2905796	0					
ANR	2906293	MemberAccess	allow_list . append		2905796	0					
ANR	2906294	Identifier	allow_list		2905796	0					
ANR	2906295	Identifier	append		2905796	1					
ANR	2906296	ArgumentList	qpid_allow		2905796	1					
ANR	2906297	Argument	qpid_allow		2905796	0					
ANR	2906298	Identifier	qpid_allow		2905796	0					
ANR	2906299	ExpressionStatement	free ( qpid_allow )	244:6:7059:7075	2905796	1	True				
ANR	2906300	CallExpression	free ( qpid_allow )		2905796	0					
ANR	2906301	Callee	free		2905796	0					
ANR	2906302	Identifier	free		2905796	0					
ANR	2906303	ArgumentList	qpid_allow		2905796	1					
ANR	2906304	Argument	qpid_allow		2905796	0					
ANR	2906305	Identifier	qpid_allow		2905796	0					
ANR	2906306	ExpressionStatement	"qpid_allow = param ( ""HOSTALLOW_WRITE"" )"	247:4:7088:7125	2905796	3	True				
ANR	2906307	AssignmentExpression	"qpid_allow = param ( ""HOSTALLOW_WRITE"" )"		2905796	0		=			
ANR	2906308	Identifier	qpid_allow		2905796	0					
ANR	2906309	CallExpression	"param ( ""HOSTALLOW_WRITE"" )"		2905796	1					
ANR	2906310	Callee	param		2905796	0					
ANR	2906311	Identifier	param		2905796	0					
ANR	2906312	ArgumentList	"""HOSTALLOW_WRITE"""		2905796	1					
ANR	2906313	Argument	"""HOSTALLOW_WRITE"""		2905796	0					
ANR	2906314	PrimaryExpression	"""HOSTALLOW_WRITE"""		2905796	0					
ANR	2906315	IfStatement	if ( qpid_allow != NULL )		2905796	4					
ANR	2906316	Condition	qpid_allow != NULL	248:7:7134:7151	2905796	0	True				
ANR	2906317	EqualityExpression	qpid_allow != NULL		2905796	0		!=			
ANR	2906318	Identifier	qpid_allow		2905796	0					
ANR	2906319	Identifier	NULL		2905796	1					
ANR	2906320	CompoundStatement		81:27:2229:2229	2905796	1					
ANR	2906321	ExpressionStatement	allow_list . append ( qpid_allow )	249:6:7162:7191	2905796	0	True				
ANR	2906322	CallExpression	allow_list . append ( qpid_allow )		2905796	0					
ANR	2906323	Callee	allow_list . append		2905796	0					
ANR	2906324	MemberAccess	allow_list . append		2905796	0					
ANR	2906325	Identifier	allow_list		2905796	0					
ANR	2906326	Identifier	append		2905796	1					
ANR	2906327	ArgumentList	qpid_allow		2905796	1					
ANR	2906328	Argument	qpid_allow		2905796	0					
ANR	2906329	Identifier	qpid_allow		2905796	0					
ANR	2906330	ExpressionStatement	free ( qpid_allow )	250:6:7199:7215	2905796	1	True				
ANR	2906331	CallExpression	free ( qpid_allow )		2905796	0					
ANR	2906332	Callee	free		2905796	0					
ANR	2906333	Identifier	free		2905796	0					
ANR	2906334	ArgumentList	qpid_allow		2905796	1					
ANR	2906335	Argument	qpid_allow		2905796	0					
ANR	2906336	Identifier	qpid_allow		2905796	0					
ANR	2906337	IdentifierDeclStatement	"char * tmp_str = allow_list . print_to_delimed_string ( "","" ) ;"	252:4:7227:7282	2905796	5	True				
ANR	2906338	IdentifierDecl	"* tmp_str = allow_list . print_to_delimed_string ( "","" )"		2905796	0					
ANR	2906339	IdentifierDeclType	char *		2905796	0					
ANR	2906340	Identifier	tmp_str		2905796	1					
ANR	2906341	AssignmentExpression	"* tmp_str = allow_list . print_to_delimed_string ( "","" )"		2905796	2		=			
ANR	2906342	Identifier	tmp_str		2905796	0					
ANR	2906343	CallExpression	"allow_list . print_to_delimed_string ( "","" )"		2905796	1					
ANR	2906344	Callee	allow_list . print_to_delimed_string		2905796	0					
ANR	2906345	MemberAccess	allow_list . print_to_delimed_string		2905796	0					
ANR	2906346	Identifier	allow_list		2905796	0					
ANR	2906347	Identifier	print_to_delimed_string		2905796	1					
ANR	2906348	ArgumentList	""","""		2905796	1					
ANR	2906349	Argument	""","""		2905796	0					
ANR	2906350	PrimaryExpression	""","""		2905796	0					
ANR	2906351	ExpressionStatement	ASSERT ( tmp_str != NULL )	253:4:7288:7312	2905796	6	True				
ANR	2906352	CallExpression	ASSERT ( tmp_str != NULL )		2905796	0					
ANR	2906353	Callee	ASSERT		2905796	0					
ANR	2906354	Identifier	ASSERT		2905796	0					
ANR	2906355	ArgumentList	tmp_str != NULL		2905796	1					
ANR	2906356	Argument	tmp_str != NULL		2905796	0					
ANR	2906357	EqualityExpression	tmp_str != NULL		2905796	0		!=			
ANR	2906358	Identifier	tmp_str		2905796	0					
ANR	2906359	Identifier	NULL		2905796	1					
ANR	2906360	ExpressionStatement	"writeXMLParam ( ""dfs.net.allow"" , tmp_str , & xml )"	254:4:7318:7364	2905796	7	True				
ANR	2906361	CallExpression	"writeXMLParam ( ""dfs.net.allow"" , tmp_str , & xml )"		2905796	0					
ANR	2906362	Callee	writeXMLParam		2905796	0					
ANR	2906363	Identifier	writeXMLParam		2905796	0					
ANR	2906364	ArgumentList	"""dfs.net.allow"""		2905796	1					
ANR	2906365	Argument	"""dfs.net.allow"""		2905796	0					
ANR	2906366	PrimaryExpression	"""dfs.net.allow"""		2905796	0					
ANR	2906367	Argument	tmp_str		2905796	1					
ANR	2906368	Identifier	tmp_str		2905796	0					
ANR	2906369	Argument	& xml		2905796	2					
ANR	2906370	UnaryOperationExpression	& xml		2905796	0					
ANR	2906371	UnaryOperator	&		2905796	0					
ANR	2906372	Identifier	xml		2905796	1					
ANR	2906373	ExpressionStatement	free ( tmp_str )	255:4:7370:7383	2905796	8	True				
ANR	2906374	CallExpression	free ( tmp_str )		2905796	0					
ANR	2906375	Callee	free		2905796	0					
ANR	2906376	Identifier	free		2905796	0					
ANR	2906377	ArgumentList	tmp_str		2905796	1					
ANR	2906378	Argument	tmp_str		2905796	0					
ANR	2906379	Identifier	tmp_str		2905796	0					
ANR	2906380	IdentifierDeclStatement	"char * qpid_deny = param ( ""QPID_DENY"" ) ;"	258:2:7392:7428	2905796	31	True				
ANR	2906381	IdentifierDecl	"* qpid_deny = param ( ""QPID_DENY"" )"		2905796	0					
ANR	2906382	IdentifierDeclType	char *		2905796	0					
ANR	2906383	Identifier	qpid_deny		2905796	1					
ANR	2906384	AssignmentExpression	"* qpid_deny = param ( ""QPID_DENY"" )"		2905796	2		=			
ANR	2906385	Identifier	qpid_deny		2905796	0					
ANR	2906386	CallExpression	"param ( ""QPID_DENY"" )"		2905796	1					
ANR	2906387	Callee	param		2905796	0					
ANR	2906388	Identifier	param		2905796	0					
ANR	2906389	ArgumentList	"""QPID_DENY"""		2905796	1					
ANR	2906390	Argument	"""QPID_DENY"""		2905796	0					
ANR	2906391	PrimaryExpression	"""QPID_DENY"""		2905796	0					
ANR	2906392	IfStatement	if ( qpid_deny != NULL )		2905796	32					
ANR	2906393	Condition	qpid_deny != NULL	259:6:7436:7452	2905796	0	True				
ANR	2906394	EqualityExpression	qpid_deny != NULL		2905796	0		!=			
ANR	2906395	Identifier	qpid_deny		2905796	0					
ANR	2906396	Identifier	NULL		2905796	1					
ANR	2906397	CompoundStatement		92:25:2530:2530	2905796	1					
ANR	2906398	ExpressionStatement	"writeXMLParam ( ""dfs.net.deny"" , qpid_deny , & xml )"	260:4:7461:7507	2905796	0	True				
ANR	2906399	CallExpression	"writeXMLParam ( ""dfs.net.deny"" , qpid_deny , & xml )"		2905796	0					
ANR	2906400	Callee	writeXMLParam		2905796	0					
ANR	2906401	Identifier	writeXMLParam		2905796	0					
ANR	2906402	ArgumentList	"""dfs.net.deny"""		2905796	1					
ANR	2906403	Argument	"""dfs.net.deny"""		2905796	0					
ANR	2906404	PrimaryExpression	"""dfs.net.deny"""		2905796	0					
ANR	2906405	Argument	qpid_deny		2905796	1					
ANR	2906406	Identifier	qpid_deny		2905796	0					
ANR	2906407	Argument	& xml		2905796	2					
ANR	2906408	UnaryOperationExpression	& xml		2905796	0					
ANR	2906409	UnaryOperator	&		2905796	0					
ANR	2906410	Identifier	xml		2905796	1					
ANR	2906411	ExpressionStatement	free ( qpid_deny )	261:4:7513:7528	2905796	1	True				
ANR	2906412	CallExpression	free ( qpid_deny )		2905796	0					
ANR	2906413	Callee	free		2905796	0					
ANR	2906414	Identifier	free		2905796	0					
ANR	2906415	ArgumentList	qpid_deny		2905796	1					
ANR	2906416	Argument	qpid_deny		2905796	0					
ANR	2906417	Identifier	qpid_deny		2905796	0					
ANR	2906418	ElseStatement	else		2905796	0					
ANR	2906419	CompoundStatement		107:4:2913:2967	2905796	0					
ANR	2906420	IdentifierDeclStatement	StringList deny_list ;	263:4:7545:7565	2905796	0	True				
ANR	2906421	IdentifierDecl	deny_list		2905796	0					
ANR	2906422	IdentifierDeclType	StringList		2905796	0					
ANR	2906423	Identifier	deny_list		2905796	1					
ANR	2906424	ExpressionStatement	"qpid_deny = param ( ""HOSTDENY_READ"" )"	264:4:7571:7605	2905796	1	True				
ANR	2906425	AssignmentExpression	"qpid_deny = param ( ""HOSTDENY_READ"" )"		2905796	0		=			
ANR	2906426	Identifier	qpid_deny		2905796	0					
ANR	2906427	CallExpression	"param ( ""HOSTDENY_READ"" )"		2905796	1					
ANR	2906428	Callee	param		2905796	0					
ANR	2906429	Identifier	param		2905796	0					
ANR	2906430	ArgumentList	"""HOSTDENY_READ"""		2905796	1					
ANR	2906431	Argument	"""HOSTDENY_READ"""		2905796	0					
ANR	2906432	PrimaryExpression	"""HOSTDENY_READ"""		2905796	0					
ANR	2906433	IfStatement	if ( qpid_deny != NULL )		2905796	2					
ANR	2906434	Condition	qpid_deny != NULL	265:8:7615:7631	2905796	0	True				
ANR	2906435	EqualityExpression	qpid_deny != NULL		2905796	0		!=			
ANR	2906436	Identifier	qpid_deny		2905796	0					
ANR	2906437	Identifier	NULL		2905796	1					
ANR	2906438	CompoundStatement		98:27:2709:2709	2905796	1					
ANR	2906439	ExpressionStatement	deny_list . append ( qpid_deny )	266:6:7642:7669	2905796	0	True				
ANR	2906440	CallExpression	deny_list . append ( qpid_deny )		2905796	0					
ANR	2906441	Callee	deny_list . append		2905796	0					
ANR	2906442	MemberAccess	deny_list . append		2905796	0					
ANR	2906443	Identifier	deny_list		2905796	0					
ANR	2906444	Identifier	append		2905796	1					
ANR	2906445	ArgumentList	qpid_deny		2905796	1					
ANR	2906446	Argument	qpid_deny		2905796	0					
ANR	2906447	Identifier	qpid_deny		2905796	0					
ANR	2906448	ExpressionStatement	free ( qpid_deny )	267:6:7677:7692	2905796	1	True				
ANR	2906449	CallExpression	free ( qpid_deny )		2905796	0					
ANR	2906450	Callee	free		2905796	0					
ANR	2906451	Identifier	free		2905796	0					
ANR	2906452	ArgumentList	qpid_deny		2905796	1					
ANR	2906453	Argument	qpid_deny		2905796	0					
ANR	2906454	Identifier	qpid_deny		2905796	0					
ANR	2906455	ExpressionStatement	"qpid_deny = param ( ""HOSTDENY_WRITE"" )"	269:4:7704:7739	2905796	3	True				
ANR	2906456	AssignmentExpression	"qpid_deny = param ( ""HOSTDENY_WRITE"" )"		2905796	0		=			
ANR	2906457	Identifier	qpid_deny		2905796	0					
ANR	2906458	CallExpression	"param ( ""HOSTDENY_WRITE"" )"		2905796	1					
ANR	2906459	Callee	param		2905796	0					
ANR	2906460	Identifier	param		2905796	0					
ANR	2906461	ArgumentList	"""HOSTDENY_WRITE"""		2905796	1					
ANR	2906462	Argument	"""HOSTDENY_WRITE"""		2905796	0					
ANR	2906463	PrimaryExpression	"""HOSTDENY_WRITE"""		2905796	0					
ANR	2906464	IfStatement	if ( qpid_deny != NULL )		2905796	4					
ANR	2906465	Condition	qpid_deny != NULL	270:7:7748:7764	2905796	0	True				
ANR	2906466	EqualityExpression	qpid_deny != NULL		2905796	0		!=			
ANR	2906467	Identifier	qpid_deny		2905796	0					
ANR	2906468	Identifier	NULL		2905796	1					
ANR	2906469	CompoundStatement		103:26:2842:2842	2905796	1					
ANR	2906470	ExpressionStatement	deny_list . append ( qpid_deny )	271:6:7775:7802	2905796	0	True				
ANR	2906471	CallExpression	deny_list . append ( qpid_deny )		2905796	0					
ANR	2906472	Callee	deny_list . append		2905796	0					
ANR	2906473	MemberAccess	deny_list . append		2905796	0					
ANR	2906474	Identifier	deny_list		2905796	0					
ANR	2906475	Identifier	append		2905796	1					
ANR	2906476	ArgumentList	qpid_deny		2905796	1					
ANR	2906477	Argument	qpid_deny		2905796	0					
ANR	2906478	Identifier	qpid_deny		2905796	0					
ANR	2906479	ExpressionStatement	free ( qpid_deny )	272:6:7811:7826	2905796	1	True				
ANR	2906480	CallExpression	free ( qpid_deny )		2905796	0					
ANR	2906481	Callee	free		2905796	0					
ANR	2906482	Identifier	free		2905796	0					
ANR	2906483	ArgumentList	qpid_deny		2905796	1					
ANR	2906484	Argument	qpid_deny		2905796	0					
ANR	2906485	Identifier	qpid_deny		2905796	0					
ANR	2906486	IdentifierDeclStatement	"char * tmp_str = deny_list . print_to_delimed_string ( "","" ) ;"	274:4:7838:7892	2905796	5	True				
ANR	2906487	IdentifierDecl	"* tmp_str = deny_list . print_to_delimed_string ( "","" )"		2905796	0					
ANR	2906488	IdentifierDeclType	char *		2905796	0					
ANR	2906489	Identifier	tmp_str		2905796	1					
ANR	2906490	AssignmentExpression	"* tmp_str = deny_list . print_to_delimed_string ( "","" )"		2905796	2		=			
ANR	2906491	Identifier	tmp_str		2905796	0					
ANR	2906492	CallExpression	"deny_list . print_to_delimed_string ( "","" )"		2905796	1					
ANR	2906493	Callee	deny_list . print_to_delimed_string		2905796	0					
ANR	2906494	MemberAccess	deny_list . print_to_delimed_string		2905796	0					
ANR	2906495	Identifier	deny_list		2905796	0					
ANR	2906496	Identifier	print_to_delimed_string		2905796	1					
ANR	2906497	ArgumentList	""","""		2905796	1					
ANR	2906498	Argument	""","""		2905796	0					
ANR	2906499	PrimaryExpression	""","""		2905796	0					
ANR	2906500	ExpressionStatement	ASSERT ( tmp_str != NULL )	275:4:7898:7922	2905796	6	True				
ANR	2906501	CallExpression	ASSERT ( tmp_str != NULL )		2905796	0					
ANR	2906502	Callee	ASSERT		2905796	0					
ANR	2906503	Identifier	ASSERT		2905796	0					
ANR	2906504	ArgumentList	tmp_str != NULL		2905796	1					
ANR	2906505	Argument	tmp_str != NULL		2905796	0					
ANR	2906506	EqualityExpression	tmp_str != NULL		2905796	0		!=			
ANR	2906507	Identifier	tmp_str		2905796	0					
ANR	2906508	Identifier	NULL		2905796	1					
ANR	2906509	ExpressionStatement	"writeXMLParam ( ""dfs.net.deny"" , tmp_str , & xml )"	276:4:7928:7973	2905796	7	True				
ANR	2906510	CallExpression	"writeXMLParam ( ""dfs.net.deny"" , tmp_str , & xml )"		2905796	0					
ANR	2906511	Callee	writeXMLParam		2905796	0					
ANR	2906512	Identifier	writeXMLParam		2905796	0					
ANR	2906513	ArgumentList	"""dfs.net.deny"""		2905796	1					
ANR	2906514	Argument	"""dfs.net.deny"""		2905796	0					
ANR	2906515	PrimaryExpression	"""dfs.net.deny"""		2905796	0					
ANR	2906516	Argument	tmp_str		2905796	1					
ANR	2906517	Identifier	tmp_str		2905796	0					
ANR	2906518	Argument	& xml		2905796	2					
ANR	2906519	UnaryOperationExpression	& xml		2905796	0					
ANR	2906520	UnaryOperator	&		2905796	0					
ANR	2906521	Identifier	xml		2905796	1					
ANR	2906522	ExpressionStatement	free ( tmp_str )	277:4:7979:7992	2905796	8	True				
ANR	2906523	CallExpression	free ( tmp_str )		2905796	0					
ANR	2906524	Callee	free		2905796	0					
ANR	2906525	Identifier	free		2905796	0					
ANR	2906526	ArgumentList	tmp_str		2905796	1					
ANR	2906527	Argument	tmp_str		2905796	0					
ANR	2906528	Identifier	tmp_str		2905796	0					
ANR	2906529	ExpressionStatement	"writeXMLParam ( ""dfs.namenode.plugins"" , ""edu.wisc.cs.condor.NameNodeAds"" , & xml )"	281:2:8040:8117	2905796	33	True				
ANR	2906530	CallExpression	"writeXMLParam ( ""dfs.namenode.plugins"" , ""edu.wisc.cs.condor.NameNodeAds"" , & xml )"		2905796	0					
ANR	2906531	Callee	writeXMLParam		2905796	0					
ANR	2906532	Identifier	writeXMLParam		2905796	0					
ANR	2906533	ArgumentList	"""dfs.namenode.plugins"""		2905796	1					
ANR	2906534	Argument	"""dfs.namenode.plugins"""		2905796	0					
ANR	2906535	PrimaryExpression	"""dfs.namenode.plugins"""		2905796	0					
ANR	2906536	Argument	"""edu.wisc.cs.condor.NameNodeAds"""		2905796	1					
ANR	2906537	PrimaryExpression	"""edu.wisc.cs.condor.NameNodeAds"""		2905796	0					
ANR	2906538	Argument	& xml		2905796	2					
ANR	2906539	UnaryOperationExpression	& xml		2905796	0					
ANR	2906540	UnaryOperator	&		2905796	0					
ANR	2906541	Identifier	xml		2905796	1					
ANR	2906542	ExpressionStatement	"writeXMLParam ( ""dfs.datanode.plugins"" , ""edu.wisc.cs.condor.DataNodeAds"" , & xml )"	282:2:8121:8198	2905796	34	True				
ANR	2906543	CallExpression	"writeXMLParam ( ""dfs.datanode.plugins"" , ""edu.wisc.cs.condor.DataNodeAds"" , & xml )"		2905796	0					
ANR	2906544	Callee	writeXMLParam		2905796	0					
ANR	2906545	Identifier	writeXMLParam		2905796	0					
ANR	2906546	ArgumentList	"""dfs.datanode.plugins"""		2905796	1					
ANR	2906547	Argument	"""dfs.datanode.plugins"""		2905796	0					
ANR	2906548	PrimaryExpression	"""dfs.datanode.plugins"""		2905796	0					
ANR	2906549	Argument	"""edu.wisc.cs.condor.DataNodeAds"""		2905796	1					
ANR	2906550	PrimaryExpression	"""edu.wisc.cs.condor.DataNodeAds"""		2905796	0					
ANR	2906551	Argument	& xml		2905796	2					
ANR	2906552	UnaryOperationExpression	& xml		2905796	0					
ANR	2906553	UnaryOperator	&		2905796	0					
ANR	2906554	Identifier	xml		2905796	1					
ANR	2906555	ExpressionStatement	"xml . append ( ""</configuration>"" )"	284:2:8203:8233	2905796	35	True				
ANR	2906556	CallExpression	"xml . append ( ""</configuration>"" )"		2905796	0					
ANR	2906557	Callee	xml . append		2905796	0					
ANR	2906558	MemberAccess	xml . append		2905796	0					
ANR	2906559	Identifier	xml		2905796	0					
ANR	2906560	Identifier	append		2905796	1					
ANR	2906561	ArgumentList	"""</configuration>"""		2905796	1					
ANR	2906562	Argument	"""</configuration>"""		2905796	0					
ANR	2906563	PrimaryExpression	"""</configuration>"""		2905796	0					
ANR	2906564	IdentifierDeclStatement	char * str = xml . print_to_delimed_string ( NULL ) ;	286:2:8238:8283	2905796	36	True				
ANR	2906565	IdentifierDecl	* str = xml . print_to_delimed_string ( NULL )		2905796	0					
ANR	2906566	IdentifierDeclType	char *		2905796	0					
ANR	2906567	Identifier	str		2905796	1					
ANR	2906568	AssignmentExpression	* str = xml . print_to_delimed_string ( NULL )		2905796	2		=			
ANR	2906569	Identifier	str		2905796	0					
ANR	2906570	CallExpression	xml . print_to_delimed_string ( NULL )		2905796	1					
ANR	2906571	Callee	xml . print_to_delimed_string		2905796	0					
ANR	2906572	MemberAccess	xml . print_to_delimed_string		2905796	0					
ANR	2906573	Identifier	xml		2905796	0					
ANR	2906574	Identifier	print_to_delimed_string		2905796	1					
ANR	2906575	ArgumentList	NULL		2905796	1					
ANR	2906576	Argument	NULL		2905796	0					
ANR	2906577	Identifier	NULL		2905796	0					
ANR	2906578	ExpressionStatement	ASSERT ( str != NULL )	287:2:8287:8306	2905796	37	True				
ANR	2906579	CallExpression	ASSERT ( str != NULL )		2905796	0					
ANR	2906580	Callee	ASSERT		2905796	0					
ANR	2906581	Identifier	ASSERT		2905796	0					
ANR	2906582	ArgumentList	str != NULL		2905796	1					
ANR	2906583	Argument	str != NULL		2905796	0					
ANR	2906584	EqualityExpression	str != NULL		2905796	0		!=			
ANR	2906585	Identifier	str		2905796	0					
ANR	2906586	Identifier	NULL		2905796	1					
ANR	2906587	IdentifierDeclStatement	"int len = full_write ( fd , str , strlen ( str ) ) ;"	288:2:8310:8352	2905796	38	True				
ANR	2906588	IdentifierDecl	"len = full_write ( fd , str , strlen ( str ) )"		2905796	0					
ANR	2906589	IdentifierDeclType	int		2905796	0					
ANR	2906590	Identifier	len		2905796	1					
ANR	2906591	AssignmentExpression	"len = full_write ( fd , str , strlen ( str ) )"		2905796	2		=			
ANR	2906592	Identifier	len		2905796	0					
ANR	2906593	CallExpression	"full_write ( fd , str , strlen ( str ) )"		2905796	1					
ANR	2906594	Callee	full_write		2905796	0					
ANR	2906595	Identifier	full_write		2905796	0					
ANR	2906596	ArgumentList	fd		2905796	1					
ANR	2906597	Argument	fd		2905796	0					
ANR	2906598	Identifier	fd		2905796	0					
ANR	2906599	Argument	str		2905796	1					
ANR	2906600	Identifier	str		2905796	0					
ANR	2906601	Argument	strlen ( str )		2905796	2					
ANR	2906602	CallExpression	strlen ( str )		2905796	0					
ANR	2906603	Callee	strlen		2905796	0					
ANR	2906604	Identifier	strlen		2905796	0					
ANR	2906605	ArgumentList	str		2905796	1					
ANR	2906606	Argument	str		2905796	0					
ANR	2906607	Identifier	str		2905796	0					
ANR	2906608	ExpressionStatement	ASSERT ( len == strlen ( str ) )	289:2:8356:8382	2905796	39	True				
ANR	2906609	CallExpression	ASSERT ( len == strlen ( str ) )		2905796	0					
ANR	2906610	Callee	ASSERT		2905796	0					
ANR	2906611	Identifier	ASSERT		2905796	0					
ANR	2906612	ArgumentList	len == strlen ( str )		2905796	1					
ANR	2906613	Argument	len == strlen ( str )		2905796	0					
ANR	2906614	EqualityExpression	len == strlen ( str )		2905796	0		==			
ANR	2906615	Identifier	len		2905796	0					
ANR	2906616	CallExpression	strlen ( str )		2905796	1					
ANR	2906617	Callee	strlen		2905796	0					
ANR	2906618	Identifier	strlen		2905796	0					
ANR	2906619	ArgumentList	str		2905796	1					
ANR	2906620	Argument	str		2905796	0					
ANR	2906621	Identifier	str		2905796	0					
ANR	2906622	ExpressionStatement	close ( fd )	290:2:8386:8395	2905796	40	True				
ANR	2906623	CallExpression	close ( fd )		2905796	0					
ANR	2906624	Callee	close		2905796	0					
ANR	2906625	Identifier	close		2905796	0					
ANR	2906626	ArgumentList	fd		2905796	1					
ANR	2906627	Argument	fd		2905796	0					
ANR	2906628	Identifier	fd		2905796	0					
ANR	2906629	ExpressionStatement	free ( str )	291:2:8399:8408	2905796	41	True				
ANR	2906630	CallExpression	free ( str )		2905796	0					
ANR	2906631	Callee	free		2905796	0					
ANR	2906632	Identifier	free		2905796	0					
ANR	2906633	ArgumentList	str		2905796	1					
ANR	2906634	Argument	str		2905796	0					
ANR	2906635	Identifier	str		2905796	0					
ANR	2906636	ReturnType	void		2905796	1					
ANR	2906637	Identifier	Pigeon :: writeConfigFile		2905796	2					
ANR	2906638	ParameterList			2905796	3					
ANR	2906639	CFGEntryNode	ENTRY		2905796		True				
ANR	2906640	CFGExitNode	EXIT		2905796		True				
ANR	2906641	Symbol	qpid_deny		2905796						
ANR	2906642	Symbol	O_CREAT		2905796						
ANR	2906643	Symbol	m_nameNodeDir		2905796						
ANR	2906644	Symbol	nnaddw		2905796						
ANR	2906645	Symbol	deny_list . print_to_delimed_string		2905796						
ANR	2906646	Symbol	ddir		2905796						
ANR	2906647	Symbol	qpid_allow		2905796						
ANR	2906648	Symbol	confFile . Value		2905796						
ANR	2906649	Symbol	namenode		2905796						
ANR	2906650	Symbol	strlen		2905796						
ANR	2906651	Symbol	dadd		2905796						
ANR	2906652	Symbol	allow_list . print_to_delimed_string		2905796						
ANR	2906653	Symbol	len		2905796						
ANR	2906654	Symbol	param		2905796						
ANR	2906655	Symbol	xml		2905796						
ANR	2906656	Symbol	deny_list		2905796						
ANR	2906657	Symbol	m_siteFile		2905796						
ANR	2906658	Symbol	allow_list		2905796						
ANR	2906659	Symbol	confFile		2905796						
ANR	2906660	Symbol	rep		2905796						
ANR	2906661	Symbol	logdir		2905796						
ANR	2906662	Symbol	xml . print_to_delimed_string		2905796						
ANR	2906663	Symbol	NULL		2905796						
ANR	2906664	Symbol	tmp_str		2905796						
ANR	2906665	Symbol	full_write		2905796						
ANR	2906666	Symbol	D_ALWAYS		2905796						
ANR	2906667	Symbol	ndir		2905796						
ANR	2906668	Symbol	str		2905796						
ANR	2906669	Symbol	daddw		2905796						
ANR	2906670	Symbol	m_siteFile . Value		2905796						
ANR	2906671	Symbol	safe_create_replace_if_exists		2905796						
ANR	2906672	Symbol	& xml		2905796						
ANR	2906673	Symbol	O_WRONLY		2905796						
ANR	2906674	Symbol	fd		2905796						
ANR	2906675	Function	Pigeon :: stop	295:2:8416:9278							
ANR	2906676	FunctionDef	Pigeon :: stop (bool fast)		2906675	0					
ANR	2906677	CompoundStatement		295:31:8445:9278	2906675	0					
ANR	2906678	IfStatement	if ( m_state == STATE_NULL )		2906675	0					
ANR	2906679	Condition	m_state == STATE_NULL	296:8:8455:8475	2906675	0	True				
ANR	2906680	EqualityExpression	m_state == STATE_NULL		2906675	0		==			
ANR	2906681	Identifier	m_state		2906675	0					
ANR	2906682	Identifier	STATE_NULL		2906675	1					
ANR	2906683	ReturnStatement	return ;	297:6:8484:8490	2906675	1	True				
ANR	2906684	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Qpid::stop() current_state = %d\\n"" , m_state )"	299:4:8497:8563	2906675	1	True				
ANR	2906685	CallExpression	"dprintf ( D_FULLDEBUG , ""Qpid::stop() current_state = %d\\n"" , m_state )"		2906675	0					
ANR	2906686	Callee	dprintf		2906675	0					
ANR	2906687	Identifier	dprintf		2906675	0					
ANR	2906688	ArgumentList	D_FULLDEBUG		2906675	1					
ANR	2906689	Argument	D_FULLDEBUG		2906675	0					
ANR	2906690	Identifier	D_FULLDEBUG		2906675	0					
ANR	2906691	Argument	"""Qpid::stop() current_state = %d\\n"""		2906675	1					
ANR	2906692	PrimaryExpression	"""Qpid::stop() current_state = %d\\n"""		2906675	0					
ANR	2906693	Argument	m_state		2906675	2					
ANR	2906694	Identifier	m_state		2906675	0					
ANR	2906695	IfStatement	if ( m_pid != - 1 )		2906675	2					
ANR	2906696	Condition	m_pid != - 1	301:8:8574:8584	2906675	0	True				
ANR	2906697	EqualityExpression	m_pid != - 1		2906675	0		!=			
ANR	2906698	Identifier	m_pid		2906675	0					
ANR	2906699	UnaryOperationExpression	- 1		2906675	1					
ANR	2906700	UnaryOperator	-		2906675	0					
ANR	2906701	PrimaryExpression	1		2906675	1					
ANR	2906702	CompoundStatement		7:21:141:141	2906675	1					
ANR	2906703	IfStatement	if ( m_state != STATE_REINIT )		2906675	0					
ANR	2906704	Condition	m_state != STATE_REINIT	308:10:8874:8896	2906675	0	True				
ANR	2906705	EqualityExpression	m_state != STATE_REINIT		2906675	0		!=			
ANR	2906706	Identifier	m_state		2906675	0					
ANR	2906707	Identifier	STATE_REINIT		2906675	1					
ANR	2906708	ExpressionStatement	m_state = STATE_STOP_REQUESTED	309:8:8907:8937	2906675	1	True				
ANR	2906709	AssignmentExpression	m_state = STATE_STOP_REQUESTED		2906675	0		=			
ANR	2906710	Identifier	m_state		2906675	0					
ANR	2906711	Identifier	STATE_STOP_REQUESTED		2906675	1					
ANR	2906712	ExpressionStatement	"daemonCore -> Send_Signal ( m_pid , ( fast ? SIGKILL : SIGTERM ) )"	311:6:8946:9005	2906675	1	True				
ANR	2906713	CallExpression	"daemonCore -> Send_Signal ( m_pid , ( fast ? SIGKILL : SIGTERM ) )"		2906675	0					
ANR	2906714	Callee	daemonCore -> Send_Signal		2906675	0					
ANR	2906715	PtrMemberAccess	daemonCore -> Send_Signal		2906675	0					
ANR	2906716	Identifier	daemonCore		2906675	0					
ANR	2906717	Identifier	Send_Signal		2906675	1					
ANR	2906718	ArgumentList	m_pid		2906675	1					
ANR	2906719	Argument	m_pid		2906675	0					
ANR	2906720	Identifier	m_pid		2906675	0					
ANR	2906721	Argument	fast ? SIGKILL : SIGTERM		2906675	1					
ANR	2906722	ConditionalExpression	fast ? SIGKILL : SIGTERM		2906675	0					
ANR	2906723	Condition	fast		2906675	0					
ANR	2906724	Identifier	fast		2906675	0					
ANR	2906725	Identifier	SIGKILL		2906675	1					
ANR	2906726	Identifier	SIGTERM		2906675	2					
ANR	2906727	IfStatement	if ( ! fast )		2906675	2					
ANR	2906728	Condition	! fast	312:10:9017:9021	2906675	0	True				
ANR	2906729	UnaryOperationExpression	! fast		2906675	0					
ANR	2906730	UnaryOperator	!		2906675	0					
ANR	2906731	Identifier	fast		2906675	1					
ANR	2906732	CompoundStatement		18:17:578:578	2906675	1					
ANR	2906733	ExpressionStatement	"dprintf ( D_ALWAYS , ""Created timer on daemon kill signal\\n"" )"	313:8:9034:9092	2906675	0	True				
ANR	2906734	CallExpression	"dprintf ( D_ALWAYS , ""Created timer on daemon kill signal\\n"" )"		2906675	0					
ANR	2906735	Callee	dprintf		2906675	0					
ANR	2906736	Identifier	dprintf		2906675	0					
ANR	2906737	ArgumentList	D_ALWAYS		2906675	1					
ANR	2906738	Argument	D_ALWAYS		2906675	0					
ANR	2906739	Identifier	D_ALWAYS		2906675	0					
ANR	2906740	Argument	"""Created timer on daemon kill signal\\n"""		2906675	1					
ANR	2906741	PrimaryExpression	"""Created timer on daemon kill signal\\n"""		2906675	0					
ANR	2906742	ExpressionStatement	"m_timer = daemonCore -> Register_Timer ( 5 , ( TimerHandlercpp ) & Pigeon :: killTimer , ""qpid kill timer"" , this )"	314:8:9102:9260	2906675	1	True				
ANR	2906743	AssignmentExpression	"m_timer = daemonCore -> Register_Timer ( 5 , ( TimerHandlercpp ) & Pigeon :: killTimer , ""qpid kill timer"" , this )"		2906675	0		=			
ANR	2906744	Identifier	m_timer		2906675	0					
ANR	2906745	CallExpression	"daemonCore -> Register_Timer ( 5 , ( TimerHandlercpp ) & Pigeon :: killTimer , ""qpid kill timer"" , this )"		2906675	1					
ANR	2906746	Callee	daemonCore -> Register_Timer		2906675	0					
ANR	2906747	PtrMemberAccess	daemonCore -> Register_Timer		2906675	0					
ANR	2906748	Identifier	daemonCore		2906675	0					
ANR	2906749	Identifier	Register_Timer		2906675	1					
ANR	2906750	ArgumentList	5		2906675	1					
ANR	2906751	Argument	5		2906675	0					
ANR	2906752	PrimaryExpression	5		2906675	0					
ANR	2906753	Argument	( TimerHandlercpp ) & Pigeon :: killTimer		2906675	1					
ANR	2906754	CastExpression	( TimerHandlercpp ) & Pigeon :: killTimer		2906675	0					
ANR	2906755	CastTarget	TimerHandlercpp		2906675	0					
ANR	2906756	UnaryOperationExpression	& Pigeon :: killTimer		2906675	1					
ANR	2906757	UnaryOperator	&		2906675	0					
ANR	2906758	Identifier	Pigeon :: killTimer		2906675	1					
ANR	2906759	Argument	"""qpid kill timer"""		2906675	2					
ANR	2906760	PrimaryExpression	"""qpid kill timer"""		2906675	0					
ANR	2906761	Argument	this		2906675	3					
ANR	2906762	Identifier	this		2906675	0					
ANR	2906763	ReturnType	void		2906675	1					
ANR	2906764	Identifier	Pigeon :: stop		2906675	2					
ANR	2906765	ParameterList	bool fast		2906675	3					
ANR	2906766	Parameter	bool fast	295:20:8434:8442	2906675	0	True				
ANR	2906767	ParameterType	bool		2906675	0					
ANR	2906768	Identifier	fast		2906675	1					
ANR	2906769	CFGEntryNode	ENTRY		2906675		True				
ANR	2906770	CFGExitNode	EXIT		2906675		True				
ANR	2906771	Symbol	m_timer		2906675						
ANR	2906772	Symbol	D_ALWAYS		2906675						
ANR	2906773	Symbol	this		2906675						
ANR	2906774	Symbol	D_FULLDEBUG		2906675						
ANR	2906775	Symbol	STATE_REINIT		2906675						
ANR	2906776	Symbol	STATE_NULL		2906675						
ANR	2906777	Symbol	SIGKILL		2906675						
ANR	2906778	Symbol	m_state		2906675						
ANR	2906779	Symbol	fast		2906675						
ANR	2906780	Symbol	STATE_STOP_REQUESTED		2906675						
ANR	2906781	Symbol	m_pid		2906675						
ANR	2906782	Symbol	* daemonCore		2906675						
ANR	2906783	Symbol	daemonCore		2906675						
ANR	2906784	Symbol	daemonCore -> Register_Timer		2906675						
ANR	2906785	Symbol	SIGTERM		2906675						
ANR	2906786	Symbol	& Pigeon :: killTimer		2906675						
ANR	2906787	Function	Pigeon :: reaperResponse	322:0:9281:9747							
ANR	2906788	FunctionDef	"Pigeon :: reaperResponse (int exit_pid , int exit_status)"		2906787	0					
ANR	2906789	CompoundStatement		322:58:9339:9747	2906787	0					
ANR	2906790	ExpressionStatement	"dprintf ( D_ALWAYS , ""QPID daemon returned %d\\n"" , exit_status )"	323:2:9343:9402	2906787	0	True				
ANR	2906791	CallExpression	"dprintf ( D_ALWAYS , ""QPID daemon returned %d\\n"" , exit_status )"		2906787	0					
ANR	2906792	Callee	dprintf		2906787	0					
ANR	2906793	Identifier	dprintf		2906787	0					
ANR	2906794	ArgumentList	D_ALWAYS		2906787	1					
ANR	2906795	Argument	D_ALWAYS		2906787	0					
ANR	2906796	Identifier	D_ALWAYS		2906787	0					
ANR	2906797	Argument	"""QPID daemon returned %d\\n"""		2906787	1					
ANR	2906798	PrimaryExpression	"""QPID daemon returned %d\\n"""		2906787	0					
ANR	2906799	Argument	exit_status		2906787	2					
ANR	2906800	Identifier	exit_status		2906787	0					
ANR	2906801	ExpressionStatement	daemonCore -> Cancel_Reaper ( m_reaper )	325:2:9407:9442	2906787	1	True				
ANR	2906802	CallExpression	daemonCore -> Cancel_Reaper ( m_reaper )		2906787	0					
ANR	2906803	Callee	daemonCore -> Cancel_Reaper		2906787	0					
ANR	2906804	PtrMemberAccess	daemonCore -> Cancel_Reaper		2906787	0					
ANR	2906805	Identifier	daemonCore		2906787	0					
ANR	2906806	Identifier	Cancel_Reaper		2906787	1					
ANR	2906807	ArgumentList	m_reaper		2906787	1					
ANR	2906808	Argument	m_reaper		2906787	0					
ANR	2906809	Identifier	m_reaper		2906787	0					
ANR	2906810	ExpressionStatement	m_pid = - 1	326:2:9446:9456	2906787	2	True				
ANR	2906811	AssignmentExpression	m_pid = - 1		2906787	0		=			
ANR	2906812	Identifier	m_pid		2906787	0					
ANR	2906813	UnaryOperationExpression	- 1		2906787	1					
ANR	2906814	UnaryOperator	-		2906787	0					
ANR	2906815	PrimaryExpression	1		2906787	1					
ANR	2906816	ExpressionStatement	m_reaper = - 1	327:2:9460:9473	2906787	3	True				
ANR	2906817	AssignmentExpression	m_reaper = - 1		2906787	0		=			
ANR	2906818	Identifier	m_reaper		2906787	0					
ANR	2906819	UnaryOperationExpression	- 1		2906787	1					
ANR	2906820	UnaryOperator	-		2906787	0					
ANR	2906821	PrimaryExpression	1		2906787	1					
ANR	2906822	IfStatement	if ( m_state == STATE_REINIT )		2906787	4					
ANR	2906823	Condition	m_state == STATE_REINIT	329:6:9482:9504	2906787	0	True				
ANR	2906824	EqualityExpression	m_state == STATE_REINIT		2906787	0		==			
ANR	2906825	Identifier	m_state		2906787	0					
ANR	2906826	Identifier	STATE_REINIT		2906787	1					
ANR	2906827	CompoundStatement		8:31:167:167	2906787	1					
ANR	2906828	ExpressionStatement	m_state = STATE_NULL	330:4:9513:9533	2906787	0	True				
ANR	2906829	AssignmentExpression	m_state = STATE_NULL		2906787	0		=			
ANR	2906830	Identifier	m_state		2906787	0					
ANR	2906831	Identifier	STATE_NULL		2906787	1					
ANR	2906832	ExpressionStatement	initialize ( )	331:4:9539:9551	2906787	1	True				
ANR	2906833	CallExpression	initialize ( )		2906787	0					
ANR	2906834	Callee	initialize		2906787	0					
ANR	2906835	Identifier	initialize		2906787	0					
ANR	2906836	ArgumentList			2906787	1					
ANR	2906837	ElseStatement	else		2906787	0					
ANR	2906838	IfStatement	if ( m_state != STATE_STOP_REQUESTED && exit_status != 0 )		2906787	0					
ANR	2906839	Condition	m_state != STATE_STOP_REQUESTED && exit_status != 0	333:12:9569:9619	2906787	0	True				
ANR	2906840	AndExpression	m_state != STATE_STOP_REQUESTED && exit_status != 0		2906787	0		&&			
ANR	2906841	EqualityExpression	m_state != STATE_STOP_REQUESTED		2906787	0		!=			
ANR	2906842	Identifier	m_state		2906787	0					
ANR	2906843	Identifier	STATE_STOP_REQUESTED		2906787	1					
ANR	2906844	EqualityExpression	exit_status != 0		2906787	1		!=			
ANR	2906845	Identifier	exit_status		2906787	0					
ANR	2906846	PrimaryExpression	0		2906787	1					
ANR	2906847	CompoundStatement		12:65:282:282	2906787	1					
ANR	2906848	ExpressionStatement	"EXCEPT ( ""qpid daemon %d was killed unexpectedly\\n"" , exit_pid )"	334:4:9628:9688	2906787	0	True				
ANR	2906849	CallExpression	"EXCEPT ( ""qpid daemon %d was killed unexpectedly\\n"" , exit_pid )"		2906787	0					
ANR	2906850	Callee	EXCEPT		2906787	0					
ANR	2906851	Identifier	EXCEPT		2906787	0					
ANR	2906852	ArgumentList	"""qpid daemon %d was killed unexpectedly\\n"""		2906787	1					
ANR	2906853	Argument	"""qpid daemon %d was killed unexpectedly\\n"""		2906787	0					
ANR	2906854	PrimaryExpression	"""qpid daemon %d was killed unexpectedly\\n"""		2906787	0					
ANR	2906855	Argument	exit_pid		2906787	1					
ANR	2906856	Identifier	exit_pid		2906787	0					
ANR	2906857	ExpressionStatement	m_state = STATE_NULL	337:2:9697:9717	2906787	5	True				
ANR	2906858	AssignmentExpression	m_state = STATE_NULL		2906787	0		=			
ANR	2906859	Identifier	m_state		2906787	0					
ANR	2906860	Identifier	STATE_NULL		2906787	1					
ANR	2906861	ExpressionStatement	DC_Exit ( 0 )	339:2:9722:9732	2906787	6	True				
ANR	2906862	CallExpression	DC_Exit ( 0 )		2906787	0					
ANR	2906863	Callee	DC_Exit		2906787	0					
ANR	2906864	Identifier	DC_Exit		2906787	0					
ANR	2906865	ArgumentList	0		2906787	1					
ANR	2906866	Argument	0		2906787	0					
ANR	2906867	PrimaryExpression	0		2906787	0					
ANR	2906868	ReturnStatement	return 0 ;	341:2:9737:9745	2906787	7	True				
ANR	2906869	PrimaryExpression	0		2906787	0					
ANR	2906870	ReturnType	int		2906787	1					
ANR	2906871	Identifier	Pigeon :: reaperResponse		2906787	2					
ANR	2906872	ParameterList	"int exit_pid , int exit_status"		2906787	3					
ANR	2906873	Parameter	int exit_pid	322:27:9308:9319	2906787	0	True				
ANR	2906874	ParameterType	int		2906787	0					
ANR	2906875	Identifier	exit_pid		2906787	1					
ANR	2906876	Parameter	int exit_status	322:41:9322:9336	2906787	1	True				
ANR	2906877	ParameterType	int		2906787	0					
ANR	2906878	Identifier	exit_status		2906787	1					
ANR	2906879	CFGEntryNode	ENTRY		2906787		True				
ANR	2906880	CFGExitNode	EXIT		2906787		True				
ANR	2906881	Symbol	m_state		2906787						
ANR	2906882	Symbol	exit_pid		2906787						
ANR	2906883	Symbol	m_reaper		2906787						
ANR	2906884	Symbol	STATE_STOP_REQUESTED		2906787						
ANR	2906885	Symbol	m_pid		2906787						
ANR	2906886	Symbol	daemonCore		2906787						
ANR	2906887	Symbol	D_ALWAYS		2906787						
ANR	2906888	Symbol	STATE_REINIT		2906787						
ANR	2906889	Symbol	exit_status		2906787						
ANR	2906890	Symbol	STATE_NULL		2906787						
ANR	2906891	Function	Pigeon :: killTimer	344:0:9750:9965							
ANR	2906892	FunctionDef	Pigeon :: killTimer ()		2906891	0					
ANR	2906893	CompoundStatement		344:24:9774:9965	2906891	0					
ANR	2906894	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Qpid::KillTimer()\\n"" )"	345:2:9786:9829	2906891	0	True				
ANR	2906895	CallExpression	"dprintf ( D_FULLDEBUG , ""Qpid::KillTimer()\\n"" )"		2906891	0					
ANR	2906896	Callee	dprintf		2906891	0					
ANR	2906897	Identifier	dprintf		2906891	0					
ANR	2906898	ArgumentList	D_FULLDEBUG		2906891	1					
ANR	2906899	Argument	D_FULLDEBUG		2906891	0					
ANR	2906900	Identifier	D_FULLDEBUG		2906891	0					
ANR	2906901	Argument	"""Qpid::KillTimer()\\n"""		2906891	1					
ANR	2906902	PrimaryExpression	"""Qpid::KillTimer()\\n"""		2906891	0					
ANR	2906903	ExpressionStatement	daemonCore -> Cancel_Timer ( m_timer )	346:2:9833:9866	2906891	1	True				
ANR	2906904	CallExpression	daemonCore -> Cancel_Timer ( m_timer )		2906891	0					
ANR	2906905	Callee	daemonCore -> Cancel_Timer		2906891	0					
ANR	2906906	PtrMemberAccess	daemonCore -> Cancel_Timer		2906891	0					
ANR	2906907	Identifier	daemonCore		2906891	0					
ANR	2906908	Identifier	Cancel_Timer		2906891	1					
ANR	2906909	ArgumentList	m_timer		2906891	1					
ANR	2906910	Argument	m_timer		2906891	0					
ANR	2906911	Identifier	m_timer		2906891	0					
ANR	2906912	IfStatement	if ( m_state != STATE_NULL )		2906891	2					
ANR	2906913	Condition	m_state != STATE_NULL	349:6:9913:9933	2906891	0	True				
ANR	2906914	EqualityExpression	m_state != STATE_NULL		2906891	0		!=			
ANR	2906915	Identifier	m_state		2906891	0					
ANR	2906916	Identifier	STATE_NULL		2906891	1					
ANR	2906917	ExpressionStatement	stop ( true )	350:4:9940:9950	2906891	1	True				
ANR	2906918	CallExpression	stop ( true )		2906891	0					
ANR	2906919	Callee	stop		2906891	0					
ANR	2906920	Identifier	stop		2906891	0					
ANR	2906921	ArgumentList	true		2906891	1					
ANR	2906922	Argument	true		2906891	0					
ANR	2906923	Identifier	true		2906891	0					
ANR	2906924	ReturnStatement	return 0 ;	352:2:9955:9963	2906891	3	True				
ANR	2906925	PrimaryExpression	0		2906891	0					
ANR	2906926	ReturnType	int		2906891	1					
ANR	2906927	Identifier	Pigeon :: killTimer		2906891	2					
ANR	2906928	ParameterList			2906891	3					
ANR	2906929	CFGEntryNode	ENTRY		2906891		True				
ANR	2906930	CFGExitNode	EXIT		2906891		True				
ANR	2906931	Symbol	m_state		2906891						
ANR	2906932	Symbol	m_timer		2906891						
ANR	2906933	Symbol	daemonCore		2906891						
ANR	2906934	Symbol	true		2906891						
ANR	2906935	Symbol	D_FULLDEBUG		2906891						
ANR	2906936	Symbol	STATE_NULL		2906891						
ANR	2906937	Function	Pigeon :: startServices	355:0:9968:10328							
ANR	2906938	FunctionDef	Pigeon :: startServices ()		2906937	0					
ANR	2906939	CompoundStatement		355:29:9997:10328	2906937	0					
ANR	2906940	IdentifierDeclStatement	"char * services = param ( ""QPID_SERVICES"" ) ;"	356:2:10001:10041	2906937	0	True				
ANR	2906941	IdentifierDecl	"* services = param ( ""QPID_SERVICES"" )"		2906937	0					
ANR	2906942	IdentifierDeclType	char *		2906937	0					
ANR	2906943	Identifier	services		2906937	1					
ANR	2906944	AssignmentExpression	"* services = param ( ""QPID_SERVICES"" )"		2906937	2		=			
ANR	2906945	Identifier	services		2906937	0					
ANR	2906946	CallExpression	"param ( ""QPID_SERVICES"" )"		2906937	1					
ANR	2906947	Callee	param		2906937	0					
ANR	2906948	Identifier	param		2906937	0					
ANR	2906949	ArgumentList	"""QPID_SERVICES"""		2906937	1					
ANR	2906950	Argument	"""QPID_SERVICES"""		2906937	0					
ANR	2906951	PrimaryExpression	"""QPID_SERVICES"""		2906937	0					
ANR	2906952	IfStatement	if ( services == NULL )		2906937	1					
ANR	2906953	Condition	services == NULL	358:6:10050:10065	2906937	0	True				
ANR	2906954	EqualityExpression	services == NULL		2906937	0		==			
ANR	2906955	Identifier	services		2906937	0					
ANR	2906956	Identifier	NULL		2906937	1					
ANR	2906957	CompoundStatement		4:24:70:70	2906937	1					
ANR	2906958	ExpressionStatement	startService ( QPID_DATANODE )	359:4:10074:10101	2906937	0	True				
ANR	2906959	CallExpression	startService ( QPID_DATANODE )		2906937	0					
ANR	2906960	Callee	startService		2906937	0					
ANR	2906961	Identifier	startService		2906937	0					
ANR	2906962	ArgumentList	QPID_DATANODE		2906937	1					
ANR	2906963	Argument	QPID_DATANODE		2906937	0					
ANR	2906964	Identifier	QPID_DATANODE		2906937	0					
ANR	2906965	ElseStatement	else		2906937	0					
ANR	2906966	CompoundStatement		8:4:123:143	2906937	0					
ANR	2906967	IdentifierDeclStatement	MyString s ( services ) ;	362:4:10121:10141	2906937	0	True				
ANR	2906968	IdentifierDecl	s ( services )		2906937	0					
ANR	2906969	IdentifierDeclType	MyString		2906937	0					
ANR	2906970	Identifier	s		2906937	1					
ANR	2906971	Identifier	services		2906937	2					
ANR	2906972	IfStatement	"if ( s == ""QPID_NAMENODE"" )"		2906937	1					
ANR	2906973	Condition	"s == ""QPID_NAMENODE"""	364:8:10152:10171	2906937	0	True				
ANR	2906974	EqualityExpression	"s == ""QPID_NAMENODE"""		2906937	0		==			
ANR	2906975	Identifier	s		2906937	0					
ANR	2906976	PrimaryExpression	"""QPID_NAMENODE"""		2906937	1					
ANR	2906977	ExpressionStatement	startService ( QPID_NAMENODE )	365:6:10180:10207	2906937	1	True				
ANR	2906978	CallExpression	startService ( QPID_NAMENODE )		2906937	0					
ANR	2906979	Callee	startService		2906937	0					
ANR	2906980	Identifier	startService		2906937	0					
ANR	2906981	ArgumentList	QPID_NAMENODE		2906937	1					
ANR	2906982	Argument	QPID_NAMENODE		2906937	0					
ANR	2906983	Identifier	QPID_NAMENODE		2906937	0					
ANR	2906984	ElseStatement	else		2906937	0					
ANR	2906985	IfStatement	"if ( s == ""QPID_DATANODE"" )"		2906937	0					
ANR	2906986	Condition	"s == ""QPID_DATANODE"""	366:13:10222:10241	2906937	0	True				
ANR	2906987	EqualityExpression	"s == ""QPID_DATANODE"""		2906937	0		==			
ANR	2906988	Identifier	s		2906937	0					
ANR	2906989	PrimaryExpression	"""QPID_DATANODE"""		2906937	1					
ANR	2906990	ExpressionStatement	startService ( QPID_DATANODE )	367:6:10250:10277	2906937	1	True				
ANR	2906991	CallExpression	startService ( QPID_DATANODE )		2906937	0					
ANR	2906992	Callee	startService		2906937	0					
ANR	2906993	Identifier	startService		2906937	0					
ANR	2906994	ArgumentList	QPID_DATANODE		2906937	1					
ANR	2906995	Argument	QPID_DATANODE		2906937	0					
ANR	2906996	Identifier	QPID_DATANODE		2906937	0					
ANR	2906997	ElseStatement	else		2906937	0					
ANR	2906998	ExpressionStatement	startService ( QPID_SECONDARY )	369:6:10294:10322	2906937	0	True				
ANR	2906999	CallExpression	startService ( QPID_SECONDARY )		2906937	0					
ANR	2907000	Callee	startService		2906937	0					
ANR	2907001	Identifier	startService		2906937	0					
ANR	2907002	ArgumentList	QPID_SECONDARY		2906937	1					
ANR	2907003	Argument	QPID_SECONDARY		2906937	0					
ANR	2907004	Identifier	QPID_SECONDARY		2906937	0					
ANR	2907005	ReturnType	void		2906937	1					
ANR	2907006	Identifier	Pigeon :: startServices		2906937	2					
ANR	2907007	ParameterList			2906937	3					
ANR	2907008	CFGEntryNode	ENTRY		2906937		True				
ANR	2907009	CFGExitNode	EXIT		2906937		True				
ANR	2907010	Symbol	NULL		2906937						
ANR	2907011	Symbol	s		2906937						
ANR	2907012	Symbol	param		2906937						
ANR	2907013	Symbol	QPID_DATANODE		2906937						
ANR	2907014	Symbol	services		2906937						
ANR	2907015	Symbol	QPID_SECONDARY		2906937						
ANR	2907016	Symbol	QPID_NAMENODE		2906937						
ANR	2907017	Function	Pigeon :: startService	373:0:10331:13857							
ANR	2907018	FunctionDef	Pigeon :: startService (int type)		2907017	0					
ANR	2907019	CompoundStatement		373:36:10367:13857	2907017	0					
ANR	2907020	ExpressionStatement	"dprintf ( D_ALWAYS , ""Starting qpid node service type = %d\\n"" , type )"	374:2:10371:10436	2907017	0	True				
ANR	2907021	CallExpression	"dprintf ( D_ALWAYS , ""Starting qpid node service type = %d\\n"" , type )"		2907017	0					
ANR	2907022	Callee	dprintf		2907017	0					
ANR	2907023	Identifier	dprintf		2907017	0					
ANR	2907024	ArgumentList	D_ALWAYS		2907017	1					
ANR	2907025	Argument	D_ALWAYS		2907017	0					
ANR	2907026	Identifier	D_ALWAYS		2907017	0					
ANR	2907027	Argument	"""Starting qpid node service type = %d\\n"""		2907017	1					
ANR	2907028	PrimaryExpression	"""Starting qpid node service type = %d\\n"""		2907017	0					
ANR	2907029	Argument	type		2907017	2					
ANR	2907030	Identifier	type		2907017	0					
ANR	2907031	IdentifierDeclStatement	ArgList arglist ;	375:2:10440:10455	2907017	1	True				
ANR	2907032	IdentifierDecl	arglist		2907017	0					
ANR	2907033	IdentifierDeclType	ArgList		2907017	0					
ANR	2907034	Identifier	arglist		2907017	1					
ANR	2907035	ExpressionStatement	"java_config ( m_java , & arglist , & m_classpath )"	377:2:10460:10503	2907017	2	True				
ANR	2907036	CallExpression	"java_config ( m_java , & arglist , & m_classpath )"		2907017	0					
ANR	2907037	Callee	java_config		2907017	0					
ANR	2907038	Identifier	java_config		2907017	0					
ANR	2907039	ArgumentList	m_java		2907017	1					
ANR	2907040	Argument	m_java		2907017	0					
ANR	2907041	Identifier	m_java		2907017	0					
ANR	2907042	Argument	& arglist		2907017	1					
ANR	2907043	UnaryOperationExpression	& arglist		2907017	0					
ANR	2907044	UnaryOperator	&		2907017	0					
ANR	2907045	Identifier	arglist		2907017	1					
ANR	2907046	Argument	& m_classpath		2907017	2					
ANR	2907047	UnaryOperationExpression	& m_classpath		2907017	0					
ANR	2907048	UnaryOperator	&		2907017	0					
ANR	2907049	Identifier	m_classpath		2907017	1					
ANR	2907050	IdentifierDeclStatement	"char * ldir = param ( ""LOG"" ) ;"	379:2:10508:10533	2907017	3	True				
ANR	2907051	IdentifierDecl	"* ldir = param ( ""LOG"" )"		2907017	0					
ANR	2907052	IdentifierDeclType	char *		2907017	0					
ANR	2907053	Identifier	ldir		2907017	1					
ANR	2907054	AssignmentExpression	"* ldir = param ( ""LOG"" )"		2907017	2		=			
ANR	2907055	Identifier	ldir		2907017	0					
ANR	2907056	CallExpression	"param ( ""LOG"" )"		2907017	1					
ANR	2907057	Callee	param		2907017	0					
ANR	2907058	Identifier	param		2907017	0					
ANR	2907059	ArgumentList	"""LOG"""		2907017	1					
ANR	2907060	Argument	"""LOG"""		2907017	0					
ANR	2907061	PrimaryExpression	"""LOG"""		2907017	0					
ANR	2907062	IfStatement	if ( ldir != NULL )		2907017	4					
ANR	2907063	Condition	ldir != NULL	380:6:10541:10552	2907017	0	True				
ANR	2907064	EqualityExpression	ldir != NULL		2907017	0		!=			
ANR	2907065	Identifier	ldir		2907017	0					
ANR	2907066	Identifier	NULL		2907017	1					
ANR	2907067	CompoundStatement		17:4:474:490	2907017	1					
ANR	2907068	IdentifierDeclStatement	"char * log4j = param ( ""QPID_LOG4J"" ) ;"	384:4:10652:10685	2907017	0	True				
ANR	2907069	IdentifierDecl	"* log4j = param ( ""QPID_LOG4J"" )"		2907017	0					
ANR	2907070	IdentifierDeclType	char *		2907017	0					
ANR	2907071	Identifier	log4j		2907017	1					
ANR	2907072	AssignmentExpression	"* log4j = param ( ""QPID_LOG4J"" )"		2907017	2		=			
ANR	2907073	Identifier	log4j		2907017	0					
ANR	2907074	CallExpression	"param ( ""QPID_LOG4J"" )"		2907017	1					
ANR	2907075	Callee	param		2907017	0					
ANR	2907076	Identifier	param		2907017	0					
ANR	2907077	ArgumentList	"""QPID_LOG4J"""		2907017	1					
ANR	2907078	Argument	"""QPID_LOG4J"""		2907017	0					
ANR	2907079	PrimaryExpression	"""QPID_LOG4J"""		2907017	0					
ANR	2907080	IdentifierDeclStatement	MyString log4jarg ;	385:4:10691:10708	2907017	1	True				
ANR	2907081	IdentifierDecl	log4jarg		2907017	0					
ANR	2907082	IdentifierDeclType	MyString		2907017	0					
ANR	2907083	Identifier	log4jarg		2907017	1					
ANR	2907084	ExpressionStatement	"log4jarg . sprintf ( ""-Dqpid.root.logger=%s,DRFA"" , ( log4j != NULL ? log4j : ""INFO"" ) )"	386:4:10714:10794	2907017	2	True				
ANR	2907085	CallExpression	"log4jarg . sprintf ( ""-Dqpid.root.logger=%s,DRFA"" , ( log4j != NULL ? log4j : ""INFO"" ) )"		2907017	0					
ANR	2907086	Callee	log4jarg . sprintf		2907017	0					
ANR	2907087	MemberAccess	log4jarg . sprintf		2907017	0					
ANR	2907088	Identifier	log4jarg		2907017	0					
ANR	2907089	Identifier	sprintf		2907017	1					
ANR	2907090	ArgumentList	"""-Dqpid.root.logger=%s,DRFA"""		2907017	1					
ANR	2907091	Argument	"""-Dqpid.root.logger=%s,DRFA"""		2907017	0					
ANR	2907092	PrimaryExpression	"""-Dqpid.root.logger=%s,DRFA"""		2907017	0					
ANR	2907093	Argument	"log4j != NULL ? log4j : ""INFO"""		2907017	1					
ANR	2907094	ConditionalExpression	"log4j != NULL ? log4j : ""INFO"""		2907017	0					
ANR	2907095	Condition	log4j != NULL		2907017	0					
ANR	2907096	EqualityExpression	log4j != NULL		2907017	0		!=			
ANR	2907097	Identifier	log4j		2907017	0					
ANR	2907098	Identifier	NULL		2907017	1					
ANR	2907099	Identifier	log4j		2907017	1					
ANR	2907100	PrimaryExpression	"""INFO"""		2907017	2					
ANR	2907101	ExpressionStatement	arglist . AppendArg ( log4jarg . Value ( ) )	387:4:10800:10835	2907017	3	True				
ANR	2907102	CallExpression	arglist . AppendArg ( log4jarg . Value ( ) )		2907017	0					
ANR	2907103	Callee	arglist . AppendArg		2907017	0					
ANR	2907104	MemberAccess	arglist . AppendArg		2907017	0					
ANR	2907105	Identifier	arglist		2907017	0					
ANR	2907106	Identifier	AppendArg		2907017	1					
ANR	2907107	ArgumentList	log4jarg . Value ( )		2907017	1					
ANR	2907108	Argument	log4jarg . Value ( )		2907017	0					
ANR	2907109	CallExpression	log4jarg . Value ( )		2907017	0					
ANR	2907110	Callee	log4jarg . Value		2907017	0					
ANR	2907111	MemberAccess	log4jarg . Value		2907017	0					
ANR	2907112	Identifier	log4jarg		2907017	0					
ANR	2907113	Identifier	Value		2907017	1					
ANR	2907114	ArgumentList			2907017	1					
ANR	2907115	IdentifierDeclStatement	MyString log_dir ;	389:4:10842:10858	2907017	4	True				
ANR	2907116	IdentifierDecl	log_dir		2907017	0					
ANR	2907117	IdentifierDeclType	MyString		2907017	0					
ANR	2907118	Identifier	log_dir		2907017	1					
ANR	2907119	ExpressionStatement	"log_dir . sprintf ( ""-Dqpid.log.dir=%s/QPID_Logs"" , ldir )"	390:4:10864:10916	2907017	5	True				
ANR	2907120	CallExpression	"log_dir . sprintf ( ""-Dqpid.log.dir=%s/QPID_Logs"" , ldir )"		2907017	0					
ANR	2907121	Callee	log_dir . sprintf		2907017	0					
ANR	2907122	MemberAccess	log_dir . sprintf		2907017	0					
ANR	2907123	Identifier	log_dir		2907017	0					
ANR	2907124	Identifier	sprintf		2907017	1					
ANR	2907125	ArgumentList	"""-Dqpid.log.dir=%s/QPID_Logs"""		2907017	1					
ANR	2907126	Argument	"""-Dqpid.log.dir=%s/QPID_Logs"""		2907017	0					
ANR	2907127	PrimaryExpression	"""-Dqpid.log.dir=%s/QPID_Logs"""		2907017	0					
ANR	2907128	Argument	ldir		2907017	1					
ANR	2907129	Identifier	ldir		2907017	0					
ANR	2907130	ExpressionStatement	arglist . AppendArg ( log_dir . Value ( ) )	391:4:10922:10956	2907017	6	True				
ANR	2907131	CallExpression	arglist . AppendArg ( log_dir . Value ( ) )		2907017	0					
ANR	2907132	Callee	arglist . AppendArg		2907017	0					
ANR	2907133	MemberAccess	arglist . AppendArg		2907017	0					
ANR	2907134	Identifier	arglist		2907017	0					
ANR	2907135	Identifier	AppendArg		2907017	1					
ANR	2907136	ArgumentList	log_dir . Value ( )		2907017	1					
ANR	2907137	Argument	log_dir . Value ( )		2907017	0					
ANR	2907138	CallExpression	log_dir . Value ( )		2907017	0					
ANR	2907139	Callee	log_dir . Value		2907017	0					
ANR	2907140	MemberAccess	log_dir . Value		2907017	0					
ANR	2907141	Identifier	log_dir		2907017	0					
ANR	2907142	Identifier	Value		2907017	1					
ANR	2907143	ArgumentList			2907017	1					
ANR	2907144	ExpressionStatement	"arglist . AppendArg ( ""-Dqpid.log.file=qpid.log"" )"	392:4:10962:11007	2907017	7	True				
ANR	2907145	CallExpression	"arglist . AppendArg ( ""-Dqpid.log.file=qpid.log"" )"		2907017	0					
ANR	2907146	Callee	arglist . AppendArg		2907017	0					
ANR	2907147	MemberAccess	arglist . AppendArg		2907017	0					
ANR	2907148	Identifier	arglist		2907017	0					
ANR	2907149	Identifier	AppendArg		2907017	1					
ANR	2907150	ArgumentList	"""-Dqpid.log.file=qpid.log"""		2907017	1					
ANR	2907151	Argument	"""-Dqpid.log.file=qpid.log"""		2907017	0					
ANR	2907152	PrimaryExpression	"""-Dqpid.log.file=qpid.log"""		2907017	0					
ANR	2907153	ExpressionStatement	free ( ldir )	393:4:11013:11023	2907017	8	True				
ANR	2907154	CallExpression	free ( ldir )		2907017	0					
ANR	2907155	Callee	free		2907017	0					
ANR	2907156	Identifier	free		2907017	0					
ANR	2907157	ArgumentList	ldir		2907017	1					
ANR	2907158	Argument	ldir		2907017	0					
ANR	2907159	Identifier	ldir		2907017	0					
ANR	2907160	IfStatement	if ( type == QPID_NAMENODE )		2907017	5					
ANR	2907161	Condition	type == QPID_NAMENODE	396:6:11036:11056	2907017	0	True				
ANR	2907162	EqualityExpression	type == QPID_NAMENODE		2907017	0		==			
ANR	2907163	Identifier	type		2907017	0					
ANR	2907164	Identifier	QPID_NAMENODE		2907017	1					
ANR	2907165	CompoundStatement		24:29:691:691	2907017	1					
ANR	2907166	ExpressionStatement	arglist . AppendArg ( m_nameNodeClass )	397:4:11065:11099	2907017	0	True				
ANR	2907167	CallExpression	arglist . AppendArg ( m_nameNodeClass )		2907017	0					
ANR	2907168	Callee	arglist . AppendArg		2907017	0					
ANR	2907169	MemberAccess	arglist . AppendArg		2907017	0					
ANR	2907170	Identifier	arglist		2907017	0					
ANR	2907171	Identifier	AppendArg		2907017	1					
ANR	2907172	ArgumentList	m_nameNodeClass		2907017	1					
ANR	2907173	Argument	m_nameNodeClass		2907017	0					
ANR	2907174	Identifier	m_nameNodeClass		2907017	0					
ANR	2907175	ElseStatement	else		2907017	0					
ANR	2907176	IfStatement	if ( type == QPID_DATANODE )		2907017	0					
ANR	2907177	Condition	type == QPID_DATANODE	399:11:11116:11136	2907017	0	True				
ANR	2907178	EqualityExpression	type == QPID_DATANODE		2907017	0		==			
ANR	2907179	Identifier	type		2907017	0					
ANR	2907180	Identifier	QPID_DATANODE		2907017	1					
ANR	2907181	CompoundStatement		27:34:771:771	2907017	1					
ANR	2907182	ExpressionStatement	arglist . AppendArg ( m_dataNodeClass )	400:4:11145:11179	2907017	0	True				
ANR	2907183	CallExpression	arglist . AppendArg ( m_dataNodeClass )		2907017	0					
ANR	2907184	Callee	arglist . AppendArg		2907017	0					
ANR	2907185	MemberAccess	arglist . AppendArg		2907017	0					
ANR	2907186	Identifier	arglist		2907017	0					
ANR	2907187	Identifier	AppendArg		2907017	1					
ANR	2907188	ArgumentList	m_dataNodeClass		2907017	1					
ANR	2907189	Argument	m_dataNodeClass		2907017	0					
ANR	2907190	Identifier	m_dataNodeClass		2907017	0					
ANR	2907191	ElseStatement	else		2907017	0					
ANR	2907192	IfStatement	if ( type == QPID_SECONDARY )		2907017	0					
ANR	2907193	Condition	type == QPID_SECONDARY	402:11:11196:11217	2907017	0	True				
ANR	2907194	EqualityExpression	type == QPID_SECONDARY		2907017	0		==			
ANR	2907195	Identifier	type		2907017	0					
ANR	2907196	Identifier	QPID_SECONDARY		2907017	1					
ANR	2907197	CompoundStatement		30:35:852:852	2907017	1					
ANR	2907198	ExpressionStatement	arglist . AppendArg ( m_secondaryNodeClass )	403:4:11226:11265	2907017	0	True				
ANR	2907199	CallExpression	arglist . AppendArg ( m_secondaryNodeClass )		2907017	0					
ANR	2907200	Callee	arglist . AppendArg		2907017	0					
ANR	2907201	MemberAccess	arglist . AppendArg		2907017	0					
ANR	2907202	Identifier	arglist		2907017	0					
ANR	2907203	Identifier	AppendArg		2907017	1					
ANR	2907204	ArgumentList	m_secondaryNodeClass		2907017	1					
ANR	2907205	Argument	m_secondaryNodeClass		2907017	0					
ANR	2907206	Identifier	m_secondaryNodeClass		2907017	0					
ANR	2907207	IdentifierDeclStatement	int arrIO [ 3 ] ;	406:2:11274:11286	2907017	6	True				
ANR	2907208	IdentifierDecl	arrIO [ 3 ]		2907017	0					
ANR	2907209	IdentifierDeclType	int [ 3 ]		2907017	0					
ANR	2907210	Identifier	arrIO		2907017	1					
ANR	2907211	PrimaryExpression	3		2907017	2					
ANR	2907212	ExpressionStatement	arrIO [ 0 ] = - 1	407:2:11290:11303	2907017	7	True				
ANR	2907213	AssignmentExpression	arrIO [ 0 ] = - 1		2907017	0		=			
ANR	2907214	ArrayIndexing	arrIO [ 0 ]		2907017	0					
ANR	2907215	Identifier	arrIO		2907017	0					
ANR	2907216	PrimaryExpression	0		2907017	1					
ANR	2907217	UnaryOperationExpression	- 1		2907017	1					
ANR	2907218	UnaryOperator	-		2907017	0					
ANR	2907219	PrimaryExpression	1		2907017	1					
ANR	2907220	ExpressionStatement	arrIO [ 1 ] = - 1	408:2:11307:11320	2907017	8	True				
ANR	2907221	AssignmentExpression	arrIO [ 1 ] = - 1		2907017	0		=			
ANR	2907222	ArrayIndexing	arrIO [ 1 ]		2907017	0					
ANR	2907223	Identifier	arrIO		2907017	0					
ANR	2907224	PrimaryExpression	1		2907017	1					
ANR	2907225	UnaryOperationExpression	- 1		2907017	1					
ANR	2907226	UnaryOperator	-		2907017	0					
ANR	2907227	PrimaryExpression	1		2907017	1					
ANR	2907228	ExpressionStatement	arrIO [ 2 ] = - 1	409:2:11324:11337	2907017	9	True				
ANR	2907229	AssignmentExpression	arrIO [ 2 ] = - 1		2907017	0		=			
ANR	2907230	ArrayIndexing	arrIO [ 2 ]		2907017	0					
ANR	2907231	Identifier	arrIO		2907017	0					
ANR	2907232	PrimaryExpression	2		2907017	1					
ANR	2907233	UnaryOperationExpression	- 1		2907017	1					
ANR	2907234	UnaryOperator	-		2907017	0					
ANR	2907235	PrimaryExpression	1		2907017	1					
ANR	2907236	IfStatement	"if ( ! daemonCore -> Create_Pipe ( & arrIO [ 1 ] , true , false , true ) )"		2907017	10					
ANR	2907237	Condition	"! daemonCore -> Create_Pipe ( & arrIO [ 1 ] , true , false , true )"	411:6:11346:11400	2907017	0	True				
ANR	2907238	UnaryOperationExpression	"! daemonCore -> Create_Pipe ( & arrIO [ 1 ] , true , false , true )"		2907017	0					
ANR	2907239	UnaryOperator	!		2907017	0					
ANR	2907240	CallExpression	"daemonCore -> Create_Pipe ( & arrIO [ 1 ] , true , false , true )"		2907017	1					
ANR	2907241	Callee	daemonCore -> Create_Pipe		2907017	0					
ANR	2907242	PtrMemberAccess	daemonCore -> Create_Pipe		2907017	0					
ANR	2907243	Identifier	daemonCore		2907017	0					
ANR	2907244	Identifier	Create_Pipe		2907017	1					
ANR	2907245	ArgumentList	& arrIO [ 1 ]		2907017	1					
ANR	2907246	Argument	& arrIO [ 1 ]		2907017	0					
ANR	2907247	UnaryOperationExpression	& arrIO [ 1 ]		2907017	0					
ANR	2907248	UnaryOperator	&		2907017	0					
ANR	2907249	ArrayIndexing	arrIO [ 1 ]		2907017	1					
ANR	2907250	Identifier	arrIO		2907017	0					
ANR	2907251	PrimaryExpression	1		2907017	1					
ANR	2907252	Argument	true		2907017	1					
ANR	2907253	Identifier	true		2907017	0					
ANR	2907254	Argument	false		2907017	2					
ANR	2907255	Identifier	false		2907017	0					
ANR	2907256	Argument	true		2907017	3					
ANR	2907257	Identifier	true		2907017	0					
ANR	2907258	CompoundStatement		39:64:1036:1036	2907017	1					
ANR	2907259	ExpressionStatement	"dprintf ( D_ALWAYS , ""Couldn't create a stdout pipe\\n"" )"	412:4:11410:11462	2907017	0	True				
ANR	2907260	CallExpression	"dprintf ( D_ALWAYS , ""Couldn't create a stdout pipe\\n"" )"		2907017	0					
ANR	2907261	Callee	dprintf		2907017	0					
ANR	2907262	Identifier	dprintf		2907017	0					
ANR	2907263	ArgumentList	D_ALWAYS		2907017	1					
ANR	2907264	Argument	D_ALWAYS		2907017	0					
ANR	2907265	Identifier	D_ALWAYS		2907017	0					
ANR	2907266	Argument	"""Couldn't create a stdout pipe\\n"""		2907017	1					
ANR	2907267	PrimaryExpression	"""Couldn't create a stdout pipe\\n"""		2907017	0					
ANR	2907268	ElseStatement	else		2907017	0					
ANR	2907269	CompoundStatement		41:9:1105:1105	2907017	0					
ANR	2907270	IfStatement	"if ( ! daemonCore -> Register_Pipe ( arrIO [ 1 ] , ""qpid stdout"" , ( PipeHandlercpp ) & Pigeon :: stdoutHandler , ""stdout"" , this ) )"		2907017	0					
ANR	2907271	Condition	"! daemonCore -> Register_Pipe ( arrIO [ 1 ] , ""qpid stdout"" , ( PipeHandlercpp ) & Pigeon :: stdoutHandler , ""stdout"" , this )"	414:8:11483:11611	2907017	0	True				
ANR	2907272	UnaryOperationExpression	"! daemonCore -> Register_Pipe ( arrIO [ 1 ] , ""qpid stdout"" , ( PipeHandlercpp ) & Pigeon :: stdoutHandler , ""stdout"" , this )"		2907017	0					
ANR	2907273	UnaryOperator	!		2907017	0					
ANR	2907274	CallExpression	"daemonCore -> Register_Pipe ( arrIO [ 1 ] , ""qpid stdout"" , ( PipeHandlercpp ) & Pigeon :: stdoutHandler , ""stdout"" , this )"		2907017	1					
ANR	2907275	Callee	daemonCore -> Register_Pipe		2907017	0					
ANR	2907276	PtrMemberAccess	daemonCore -> Register_Pipe		2907017	0					
ANR	2907277	Identifier	daemonCore		2907017	0					
ANR	2907278	Identifier	Register_Pipe		2907017	1					
ANR	2907279	ArgumentList	arrIO [ 1 ]		2907017	1					
ANR	2907280	Argument	arrIO [ 1 ]		2907017	0					
ANR	2907281	ArrayIndexing	arrIO [ 1 ]		2907017	0					
ANR	2907282	Identifier	arrIO		2907017	0					
ANR	2907283	PrimaryExpression	1		2907017	1					
ANR	2907284	Argument	"""qpid stdout"""		2907017	1					
ANR	2907285	PrimaryExpression	"""qpid stdout"""		2907017	0					
ANR	2907286	Argument	( PipeHandlercpp ) & Pigeon :: stdoutHandler		2907017	2					
ANR	2907287	CastExpression	( PipeHandlercpp ) & Pigeon :: stdoutHandler		2907017	0					
ANR	2907288	CastTarget	PipeHandlercpp		2907017	0					
ANR	2907289	UnaryOperationExpression	& Pigeon :: stdoutHandler		2907017	1					
ANR	2907290	UnaryOperator	&		2907017	0					
ANR	2907291	Identifier	Pigeon :: stdoutHandler		2907017	1					
ANR	2907292	Argument	"""stdout"""		2907017	3					
ANR	2907293	PrimaryExpression	"""stdout"""		2907017	0					
ANR	2907294	Argument	this		2907017	4					
ANR	2907295	Identifier	this		2907017	0					
ANR	2907296	CompoundStatement		44:28:1247:1247	2907017	1					
ANR	2907297	ExpressionStatement	"dprintf ( D_ALWAYS , ""Couldn't register stdout pipe\\n"" )"	418:6:11624:11676	2907017	0	True				
ANR	2907298	CallExpression	"dprintf ( D_ALWAYS , ""Couldn't register stdout pipe\\n"" )"		2907017	0					
ANR	2907299	Callee	dprintf		2907017	0					
ANR	2907300	Identifier	dprintf		2907017	0					
ANR	2907301	ArgumentList	D_ALWAYS		2907017	1					
ANR	2907302	Argument	D_ALWAYS		2907017	0					
ANR	2907303	Identifier	D_ALWAYS		2907017	0					
ANR	2907304	Argument	"""Couldn't register stdout pipe\\n"""		2907017	1					
ANR	2907305	PrimaryExpression	"""Couldn't register stdout pipe\\n"""		2907017	0					
ANR	2907306	ElseStatement	else		2907017	0					
ANR	2907307	CompoundStatement		47:11:1345:1345	2907017	0					
ANR	2907308	ExpressionStatement	m_stdOut = arrIO [ 1 ]	420:6:11721:11740	2907017	0	True				
ANR	2907309	AssignmentExpression	m_stdOut = arrIO [ 1 ]		2907017	0		=			
ANR	2907310	Identifier	m_stdOut		2907017	0					
ANR	2907311	ArrayIndexing	arrIO [ 1 ]		2907017	1					
ANR	2907312	Identifier	arrIO		2907017	0					
ANR	2907313	PrimaryExpression	1		2907017	1					
ANR	2907314	IfStatement	"if ( ! daemonCore -> Create_Pipe ( & arrIO [ 2 ] , true , false , true ) )"		2907017	11					
ANR	2907315	Condition	"! daemonCore -> Create_Pipe ( & arrIO [ 2 ] , true , false , true )"	424:6:11759:11813	2907017	0	True				
ANR	2907316	UnaryOperationExpression	"! daemonCore -> Create_Pipe ( & arrIO [ 2 ] , true , false , true )"		2907017	0					
ANR	2907317	UnaryOperator	!		2907017	0					
ANR	2907318	CallExpression	"daemonCore -> Create_Pipe ( & arrIO [ 2 ] , true , false , true )"		2907017	1					
ANR	2907319	Callee	daemonCore -> Create_Pipe		2907017	0					
ANR	2907320	PtrMemberAccess	daemonCore -> Create_Pipe		2907017	0					
ANR	2907321	Identifier	daemonCore		2907017	0					
ANR	2907322	Identifier	Create_Pipe		2907017	1					
ANR	2907323	ArgumentList	& arrIO [ 2 ]		2907017	1					
ANR	2907324	Argument	& arrIO [ 2 ]		2907017	0					
ANR	2907325	UnaryOperationExpression	& arrIO [ 2 ]		2907017	0					
ANR	2907326	UnaryOperator	&		2907017	0					
ANR	2907327	ArrayIndexing	arrIO [ 2 ]		2907017	1					
ANR	2907328	Identifier	arrIO		2907017	0					
ANR	2907329	PrimaryExpression	2		2907017	1					
ANR	2907330	Argument	true		2907017	1					
ANR	2907331	Identifier	true		2907017	0					
ANR	2907332	Argument	false		2907017	2					
ANR	2907333	Identifier	false		2907017	0					
ANR	2907334	Argument	true		2907017	3					
ANR	2907335	Identifier	true		2907017	0					
ANR	2907336	CompoundStatement		52:64:1449:1449	2907017	1					
ANR	2907337	ExpressionStatement	"dprintf ( D_ALWAYS , ""Couldn't create a stderr pipe\\n"" )"	425:4:11823:11875	2907017	0	True				
ANR	2907338	CallExpression	"dprintf ( D_ALWAYS , ""Couldn't create a stderr pipe\\n"" )"		2907017	0					
ANR	2907339	Callee	dprintf		2907017	0					
ANR	2907340	Identifier	dprintf		2907017	0					
ANR	2907341	ArgumentList	D_ALWAYS		2907017	1					
ANR	2907342	Argument	D_ALWAYS		2907017	0					
ANR	2907343	Identifier	D_ALWAYS		2907017	0					
ANR	2907344	Argument	"""Couldn't create a stderr pipe\\n"""		2907017	1					
ANR	2907345	PrimaryExpression	"""Couldn't create a stderr pipe\\n"""		2907017	0					
ANR	2907346	ElseStatement	else		2907017	0					
ANR	2907347	CompoundStatement		54:9:1518:1518	2907017	0					
ANR	2907348	IfStatement	"if ( ! daemonCore -> Register_Pipe ( arrIO [ 2 ] , ""qpid stderr"" , ( PipeHandlercpp ) & Pigeon :: stderrHandler , ""stderr"" , this ) )"		2907017	0					
ANR	2907349	Condition	"! daemonCore -> Register_Pipe ( arrIO [ 2 ] , ""qpid stderr"" , ( PipeHandlercpp ) & Pigeon :: stderrHandler , ""stderr"" , this )"	427:8:11896:12025	2907017	0	True				
ANR	2907350	UnaryOperationExpression	"! daemonCore -> Register_Pipe ( arrIO [ 2 ] , ""qpid stderr"" , ( PipeHandlercpp ) & Pigeon :: stderrHandler , ""stderr"" , this )"		2907017	0					
ANR	2907351	UnaryOperator	!		2907017	0					
ANR	2907352	CallExpression	"daemonCore -> Register_Pipe ( arrIO [ 2 ] , ""qpid stderr"" , ( PipeHandlercpp ) & Pigeon :: stderrHandler , ""stderr"" , this )"		2907017	1					
ANR	2907353	Callee	daemonCore -> Register_Pipe		2907017	0					
ANR	2907354	PtrMemberAccess	daemonCore -> Register_Pipe		2907017	0					
ANR	2907355	Identifier	daemonCore		2907017	0					
ANR	2907356	Identifier	Register_Pipe		2907017	1					
ANR	2907357	ArgumentList	arrIO [ 2 ]		2907017	1					
ANR	2907358	Argument	arrIO [ 2 ]		2907017	0					
ANR	2907359	ArrayIndexing	arrIO [ 2 ]		2907017	0					
ANR	2907360	Identifier	arrIO		2907017	0					
ANR	2907361	PrimaryExpression	2		2907017	1					
ANR	2907362	Argument	"""qpid stderr"""		2907017	1					
ANR	2907363	PrimaryExpression	"""qpid stderr"""		2907017	0					
ANR	2907364	Argument	( PipeHandlercpp ) & Pigeon :: stderrHandler		2907017	2					
ANR	2907365	CastExpression	( PipeHandlercpp ) & Pigeon :: stderrHandler		2907017	0					
ANR	2907366	CastTarget	PipeHandlercpp		2907017	0					
ANR	2907367	UnaryOperationExpression	& Pigeon :: stderrHandler		2907017	1					
ANR	2907368	UnaryOperator	&		2907017	0					
ANR	2907369	Identifier	Pigeon :: stderrHandler		2907017	1					
ANR	2907370	Argument	"""stderr"""		2907017	3					
ANR	2907371	PrimaryExpression	"""stderr"""		2907017	0					
ANR	2907372	Argument	this		2907017	4					
ANR	2907373	Identifier	this		2907017	0					
ANR	2907374	CompoundStatement		57:28:1661:1661	2907017	1					
ANR	2907375	ExpressionStatement	"dprintf ( D_ALWAYS , ""Couldn't register stderr, pipe\\n"" )"	431:6:12038:12091	2907017	0	True				
ANR	2907376	CallExpression	"dprintf ( D_ALWAYS , ""Couldn't register stderr, pipe\\n"" )"		2907017	0					
ANR	2907377	Callee	dprintf		2907017	0					
ANR	2907378	Identifier	dprintf		2907017	0					
ANR	2907379	ArgumentList	D_ALWAYS		2907017	1					
ANR	2907380	Argument	D_ALWAYS		2907017	0					
ANR	2907381	Identifier	D_ALWAYS		2907017	0					
ANR	2907382	Argument	"""Couldn't register stderr, pipe\\n"""		2907017	1					
ANR	2907383	PrimaryExpression	"""Couldn't register stderr, pipe\\n"""		2907017	0					
ANR	2907384	ElseStatement	else		2907017	0					
ANR	2907385	CompoundStatement		60:11:1736:1736	2907017	0					
ANR	2907386	ExpressionStatement	m_stdErr = arrIO [ 2 ]	433:6:12112:12131	2907017	0	True				
ANR	2907387	AssignmentExpression	m_stdErr = arrIO [ 2 ]		2907017	0		=			
ANR	2907388	Identifier	m_stdErr		2907017	0					
ANR	2907389	ArrayIndexing	arrIO [ 2 ]		2907017	1					
ANR	2907390	Identifier	arrIO		2907017	0					
ANR	2907391	PrimaryExpression	2		2907017	1					
ANR	2907392	IdentifierDeclStatement	Directory dir ( m_nameNodeDir . Value ( ) ) ;	437:2:12146:12182	2907017	12	True				
ANR	2907393	IdentifierDecl	dir ( m_nameNodeDir . Value ( ) )		2907017	0					
ANR	2907394	IdentifierDeclType	Directory		2907017	0					
ANR	2907395	Identifier	dir		2907017	1					
ANR	2907396	CallExpression	m_nameNodeDir . Value ( )		2907017	2					
ANR	2907397	Callee	m_nameNodeDir . Value		2907017	0					
ANR	2907398	MemberAccess	m_nameNodeDir . Value		2907017	0					
ANR	2907399	Identifier	m_nameNodeDir		2907017	0					
ANR	2907400	Identifier	Value		2907017	1					
ANR	2907401	ArgumentList			2907017	1					
ANR	2907402	IfStatement	if ( type == QPID_NAMENODE )		2907017	13					
ANR	2907403	Condition	type == QPID_NAMENODE	439:6:12191:12211	2907017	0	True				
ANR	2907404	EqualityExpression	type == QPID_NAMENODE		2907017	0		==			
ANR	2907405	Identifier	type		2907017	0					
ANR	2907406	Identifier	QPID_NAMENODE		2907017	1					
ANR	2907407	CompoundStatement		67:29:1846:1846	2907017	1					
ANR	2907408	ExpressionStatement	arglist . RemoveArg ( 0 )	440:4:12220:12240	2907017	0	True				
ANR	2907409	CallExpression	arglist . RemoveArg ( 0 )		2907017	0					
ANR	2907410	Callee	arglist . RemoveArg		2907017	0					
ANR	2907411	MemberAccess	arglist . RemoveArg		2907017	0					
ANR	2907412	Identifier	arglist		2907017	0					
ANR	2907413	Identifier	RemoveArg		2907017	1					
ANR	2907414	ArgumentList	0		2907017	1					
ANR	2907415	Argument	0		2907017	0					
ANR	2907416	PrimaryExpression	0		2907017	0					
ANR	2907417	ExpressionStatement	"arglist . InsertArg ( m_java . Value ( ) , 0 )"	441:4:12246:12282	2907017	1	True				
ANR	2907418	CallExpression	"arglist . InsertArg ( m_java . Value ( ) , 0 )"		2907017	0					
ANR	2907419	Callee	arglist . InsertArg		2907017	0					
ANR	2907420	MemberAccess	arglist . InsertArg		2907017	0					
ANR	2907421	Identifier	arglist		2907017	0					
ANR	2907422	Identifier	InsertArg		2907017	1					
ANR	2907423	ArgumentList	m_java . Value ( )		2907017	1					
ANR	2907424	Argument	m_java . Value ( )		2907017	0					
ANR	2907425	CallExpression	m_java . Value ( )		2907017	0					
ANR	2907426	Callee	m_java . Value		2907017	0					
ANR	2907427	MemberAccess	m_java . Value		2907017	0					
ANR	2907428	Identifier	m_java		2907017	0					
ANR	2907429	Identifier	Value		2907017	1					
ANR	2907430	ArgumentList			2907017	1					
ANR	2907431	Argument	0		2907017	1					
ANR	2907432	PrimaryExpression	0		2907017	0					
ANR	2907433	IfStatement	if ( dir . Next ( ) == NULL )		2907017	2					
ANR	2907434	Condition	dir . Next ( ) == NULL	443:8:12293:12310	2907017	0	True				
ANR	2907435	EqualityExpression	dir . Next ( ) == NULL		2907017	0		==			
ANR	2907436	CallExpression	dir . Next ( )		2907017	0					
ANR	2907437	Callee	dir . Next		2907017	0					
ANR	2907438	MemberAccess	dir . Next		2907017	0					
ANR	2907439	Identifier	dir		2907017	0					
ANR	2907440	Identifier	Next		2907017	1					
ANR	2907441	ArgumentList			2907017	1					
ANR	2907442	Identifier	NULL		2907017	1					
ANR	2907443	CompoundStatement		80:6:2195:2221	2907017	1					
ANR	2907444	ExpressionStatement	"arglist . AppendArg ( ""-format"" )"	444:6:12321:12349	2907017	0	True				
ANR	2907445	CallExpression	"arglist . AppendArg ( ""-format"" )"		2907017	0					
ANR	2907446	Callee	arglist . AppendArg		2907017	0					
ANR	2907447	MemberAccess	arglist . AppendArg		2907017	0					
ANR	2907448	Identifier	arglist		2907017	0					
ANR	2907449	Identifier	AppendArg		2907017	1					
ANR	2907450	ArgumentList	"""-format"""		2907017	1					
ANR	2907451	Argument	"""-format"""		2907017	0					
ANR	2907452	PrimaryExpression	"""-format"""		2907017	0					
ANR	2907453	IdentifierDeclStatement	MyString argString ;	446:6:12358:12376	2907017	1	True				
ANR	2907454	IdentifierDecl	argString		2907017	0					
ANR	2907455	IdentifierDeclType	MyString		2907017	0					
ANR	2907456	Identifier	argString		2907017	1					
ANR	2907457	ExpressionStatement	arglist . GetArgsStringForDisplay ( & argString )	447:6:12384:12427	2907017	2	True				
ANR	2907458	CallExpression	arglist . GetArgsStringForDisplay ( & argString )		2907017	0					
ANR	2907459	Callee	arglist . GetArgsStringForDisplay		2907017	0					
ANR	2907460	MemberAccess	arglist . GetArgsStringForDisplay		2907017	0					
ANR	2907461	Identifier	arglist		2907017	0					
ANR	2907462	Identifier	GetArgsStringForDisplay		2907017	1					
ANR	2907463	ArgumentList	& argString		2907017	1					
ANR	2907464	Argument	& argString		2907017	0					
ANR	2907465	UnaryOperationExpression	& argString		2907017	0					
ANR	2907466	UnaryOperator	&		2907017	0					
ANR	2907467	Identifier	argString		2907017	1					
ANR	2907468	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , argString . Value ( ) )"	448:6:12435:12479	2907017	3	True				
ANR	2907469	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , argString . Value ( ) )"		2907017	0					
ANR	2907470	Callee	dprintf		2907017	0					
ANR	2907471	Identifier	dprintf		2907017	0					
ANR	2907472	ArgumentList	D_ALWAYS		2907017	1					
ANR	2907473	Argument	D_ALWAYS		2907017	0					
ANR	2907474	Identifier	D_ALWAYS		2907017	0					
ANR	2907475	Argument	"""%s\\n"""		2907017	1					
ANR	2907476	PrimaryExpression	"""%s\\n"""		2907017	0					
ANR	2907477	Argument	argString . Value ( )		2907017	2					
ANR	2907478	CallExpression	argString . Value ( )		2907017	0					
ANR	2907479	Callee	argString . Value		2907017	0					
ANR	2907480	MemberAccess	argString . Value		2907017	0					
ANR	2907481	Identifier	argString		2907017	0					
ANR	2907482	Identifier	Value		2907017	1					
ANR	2907483	ArgumentList			2907017	1					
ANR	2907484	IdentifierDeclStatement	"FILE * fp = my_popen ( arglist , ""w"" , 0 ) ;"	450:6:12488:12524	2907017	4	True				
ANR	2907485	IdentifierDecl	"* fp = my_popen ( arglist , ""w"" , 0 )"		2907017	0					
ANR	2907486	IdentifierDeclType	FILE *		2907017	0					
ANR	2907487	Identifier	fp		2907017	1					
ANR	2907488	AssignmentExpression	"* fp = my_popen ( arglist , ""w"" , 0 )"		2907017	2		=			
ANR	2907489	Identifier	fp		2907017	0					
ANR	2907490	CallExpression	"my_popen ( arglist , ""w"" , 0 )"		2907017	1					
ANR	2907491	Callee	my_popen		2907017	0					
ANR	2907492	Identifier	my_popen		2907017	0					
ANR	2907493	ArgumentList	arglist		2907017	1					
ANR	2907494	Argument	arglist		2907017	0					
ANR	2907495	Identifier	arglist		2907017	0					
ANR	2907496	Argument	"""w"""		2907017	1					
ANR	2907497	PrimaryExpression	"""w"""		2907017	0					
ANR	2907498	Argument	0		2907017	2					
ANR	2907499	PrimaryExpression	0		2907017	0					
ANR	2907500	ExpressionStatement	"fwrite ( ""Y\\n"" , 1 , 2 , fp )"	451:6:12532:12555	2907017	5	True				
ANR	2907501	CallExpression	"fwrite ( ""Y\\n"" , 1 , 2 , fp )"		2907017	0					
ANR	2907502	Callee	fwrite		2907017	0					
ANR	2907503	Identifier	fwrite		2907017	0					
ANR	2907504	ArgumentList	"""Y\\n"""		2907017	1					
ANR	2907505	Argument	"""Y\\n"""		2907017	0					
ANR	2907506	PrimaryExpression	"""Y\\n"""		2907017	0					
ANR	2907507	Argument	1		2907017	1					
ANR	2907508	PrimaryExpression	1		2907017	0					
ANR	2907509	Argument	2		2907017	2					
ANR	2907510	PrimaryExpression	2		2907017	0					
ANR	2907511	Argument	fp		2907017	3					
ANR	2907512	Identifier	fp		2907017	0					
ANR	2907513	IdentifierDeclStatement	int status = my_pclose ( fp ) ;	452:6:12563:12589	2907017	6	True				
ANR	2907514	IdentifierDecl	status = my_pclose ( fp )		2907017	0					
ANR	2907515	IdentifierDeclType	int		2907017	0					
ANR	2907516	Identifier	status		2907017	1					
ANR	2907517	AssignmentExpression	status = my_pclose ( fp )		2907017	2		=			
ANR	2907518	Identifier	status		2907017	0					
ANR	2907519	CallExpression	my_pclose ( fp )		2907017	1					
ANR	2907520	Callee	my_pclose		2907017	0					
ANR	2907521	Identifier	my_pclose		2907017	0					
ANR	2907522	ArgumentList	fp		2907017	1					
ANR	2907523	Argument	fp		2907017	0					
ANR	2907524	Identifier	fp		2907017	0					
ANR	2907525	ExpressionStatement	"dprintf ( D_ALWAYS , ""Performed a format on QPID with status %d\\n"" , status )"	453:6:12597:12669	2907017	7	True				
ANR	2907526	CallExpression	"dprintf ( D_ALWAYS , ""Performed a format on QPID with status %d\\n"" , status )"		2907017	0					
ANR	2907527	Callee	dprintf		2907017	0					
ANR	2907528	Identifier	dprintf		2907017	0					
ANR	2907529	ArgumentList	D_ALWAYS		2907017	1					
ANR	2907530	Argument	D_ALWAYS		2907017	0					
ANR	2907531	Identifier	D_ALWAYS		2907017	0					
ANR	2907532	Argument	"""Performed a format on QPID with status %d\\n"""		2907017	1					
ANR	2907533	PrimaryExpression	"""Performed a format on QPID with status %d\\n"""		2907017	0					
ANR	2907534	Argument	status		2907017	2					
ANR	2907535	Identifier	status		2907017	0					
ANR	2907536	ElseStatement	else		2907017	0					
ANR	2907537	CompoundStatement		92:6:2595:2622	2907017	0					
ANR	2907538	IdentifierDeclStatement	MyString argString ;	456:6:12691:12709	2907017	0	True				
ANR	2907539	IdentifierDecl	argString		2907017	0					
ANR	2907540	IdentifierDeclType	MyString		2907017	0					
ANR	2907541	Identifier	argString		2907017	1					
ANR	2907542	ExpressionStatement	"arglist . AppendArg ( ""-finalize"" )"	457:6:12740:12770	2907017	1	True				
ANR	2907543	CallExpression	"arglist . AppendArg ( ""-finalize"" )"		2907017	0					
ANR	2907544	Callee	arglist . AppendArg		2907017	0					
ANR	2907545	MemberAccess	arglist . AppendArg		2907017	0					
ANR	2907546	Identifier	arglist		2907017	0					
ANR	2907547	Identifier	AppendArg		2907017	1					
ANR	2907548	ArgumentList	"""-finalize"""		2907017	1					
ANR	2907549	Argument	"""-finalize"""		2907017	0					
ANR	2907550	PrimaryExpression	"""-finalize"""		2907017	0					
ANR	2907551	ExpressionStatement	arglist . GetArgsStringForDisplay ( & argString )	459:6:12779:12822	2907017	2	True				
ANR	2907552	CallExpression	arglist . GetArgsStringForDisplay ( & argString )		2907017	0					
ANR	2907553	Callee	arglist . GetArgsStringForDisplay		2907017	0					
ANR	2907554	MemberAccess	arglist . GetArgsStringForDisplay		2907017	0					
ANR	2907555	Identifier	arglist		2907017	0					
ANR	2907556	Identifier	GetArgsStringForDisplay		2907017	1					
ANR	2907557	ArgumentList	& argString		2907017	1					
ANR	2907558	Argument	& argString		2907017	0					
ANR	2907559	UnaryOperationExpression	& argString		2907017	0					
ANR	2907560	UnaryOperator	&		2907017	0					
ANR	2907561	Identifier	argString		2907017	1					
ANR	2907562	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s\\n"" , argString . Value ( ) )"	460:6:12830:12877	2907017	3	True				
ANR	2907563	CallExpression	"dprintf ( D_FULLDEBUG , ""%s\\n"" , argString . Value ( ) )"		2907017	0					
ANR	2907564	Callee	dprintf		2907017	0					
ANR	2907565	Identifier	dprintf		2907017	0					
ANR	2907566	ArgumentList	D_FULLDEBUG		2907017	1					
ANR	2907567	Argument	D_FULLDEBUG		2907017	0					
ANR	2907568	Identifier	D_FULLDEBUG		2907017	0					
ANR	2907569	Argument	"""%s\\n"""		2907017	1					
ANR	2907570	PrimaryExpression	"""%s\\n"""		2907017	0					
ANR	2907571	Argument	argString . Value ( )		2907017	2					
ANR	2907572	CallExpression	argString . Value ( )		2907017	0					
ANR	2907573	Callee	argString . Value		2907017	0					
ANR	2907574	MemberAccess	argString . Value		2907017	0					
ANR	2907575	Identifier	argString		2907017	0					
ANR	2907576	Identifier	Value		2907017	1					
ANR	2907577	ArgumentList			2907017	1					
ANR	2907578	IdentifierDeclStatement	"FILE * fp2 = my_popen ( arglist , ""w"" , 0 ) ;"	462:6:12886:12923	2907017	4	True				
ANR	2907579	IdentifierDecl	"* fp2 = my_popen ( arglist , ""w"" , 0 )"		2907017	0					
ANR	2907580	IdentifierDeclType	FILE *		2907017	0					
ANR	2907581	Identifier	fp2		2907017	1					
ANR	2907582	AssignmentExpression	"* fp2 = my_popen ( arglist , ""w"" , 0 )"		2907017	2		=			
ANR	2907583	Identifier	fp2		2907017	0					
ANR	2907584	CallExpression	"my_popen ( arglist , ""w"" , 0 )"		2907017	1					
ANR	2907585	Callee	my_popen		2907017	0					
ANR	2907586	Identifier	my_popen		2907017	0					
ANR	2907587	ArgumentList	arglist		2907017	1					
ANR	2907588	Argument	arglist		2907017	0					
ANR	2907589	Identifier	arglist		2907017	0					
ANR	2907590	Argument	"""w"""		2907017	1					
ANR	2907591	PrimaryExpression	"""w"""		2907017	0					
ANR	2907592	Argument	0		2907017	2					
ANR	2907593	PrimaryExpression	0		2907017	0					
ANR	2907594	ExpressionStatement	"fwrite ( ""Y\\n"" , 1 , 2 , fp2 )"	463:6:12931:12955	2907017	5	True				
ANR	2907595	CallExpression	"fwrite ( ""Y\\n"" , 1 , 2 , fp2 )"		2907017	0					
ANR	2907596	Callee	fwrite		2907017	0					
ANR	2907597	Identifier	fwrite		2907017	0					
ANR	2907598	ArgumentList	"""Y\\n"""		2907017	1					
ANR	2907599	Argument	"""Y\\n"""		2907017	0					
ANR	2907600	PrimaryExpression	"""Y\\n"""		2907017	0					
ANR	2907601	Argument	1		2907017	1					
ANR	2907602	PrimaryExpression	1		2907017	0					
ANR	2907603	Argument	2		2907017	2					
ANR	2907604	PrimaryExpression	2		2907017	0					
ANR	2907605	Argument	fp2		2907017	3					
ANR	2907606	Identifier	fp2		2907017	0					
ANR	2907607	IdentifierDeclStatement	int status = my_pclose ( fp2 ) ;	464:6:12963:12990	2907017	6	True				
ANR	2907608	IdentifierDecl	status = my_pclose ( fp2 )		2907017	0					
ANR	2907609	IdentifierDeclType	int		2907017	0					
ANR	2907610	Identifier	status		2907017	1					
ANR	2907611	AssignmentExpression	status = my_pclose ( fp2 )		2907017	2		=			
ANR	2907612	Identifier	status		2907017	0					
ANR	2907613	CallExpression	my_pclose ( fp2 )		2907017	1					
ANR	2907614	Callee	my_pclose		2907017	0					
ANR	2907615	Identifier	my_pclose		2907017	0					
ANR	2907616	ArgumentList	fp2		2907017	1					
ANR	2907617	Argument	fp2		2907017	0					
ANR	2907618	Identifier	fp2		2907017	0					
ANR	2907619	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Finalized any pending upgrades (status = %d)\\n"" , status )"	465:6:12998:13076	2907017	7	True				
ANR	2907620	CallExpression	"dprintf ( D_FULLDEBUG , ""Finalized any pending upgrades (status = %d)\\n"" , status )"		2907017	0					
ANR	2907621	Callee	dprintf		2907017	0					
ANR	2907622	Identifier	dprintf		2907017	0					
ANR	2907623	ArgumentList	D_FULLDEBUG		2907017	1					
ANR	2907624	Argument	D_FULLDEBUG		2907017	0					
ANR	2907625	Identifier	D_FULLDEBUG		2907017	0					
ANR	2907626	Argument	"""Finalized any pending upgrades (status = %d)\\n"""		2907017	1					
ANR	2907627	PrimaryExpression	"""Finalized any pending upgrades (status = %d)\\n"""		2907017	0					
ANR	2907628	Argument	status		2907017	2					
ANR	2907629	Identifier	status		2907017	0					
ANR	2907630	ExpressionStatement	arglist . RemoveArg ( arglist . Count ( ) - 1 )	469:4:13151:13189	2907017	3	True				
ANR	2907631	CallExpression	arglist . RemoveArg ( arglist . Count ( ) - 1 )		2907017	0					
ANR	2907632	Callee	arglist . RemoveArg		2907017	0					
ANR	2907633	MemberAccess	arglist . RemoveArg		2907017	0					
ANR	2907634	Identifier	arglist		2907017	0					
ANR	2907635	Identifier	RemoveArg		2907017	1					
ANR	2907636	ArgumentList	arglist . Count ( ) - 1		2907017	1					
ANR	2907637	Argument	arglist . Count ( ) - 1		2907017	0					
ANR	2907638	AdditiveExpression	arglist . Count ( ) - 1		2907017	0		-			
ANR	2907639	CallExpression	arglist . Count ( )		2907017	0					
ANR	2907640	Callee	arglist . Count		2907017	0					
ANR	2907641	MemberAccess	arglist . Count		2907017	0					
ANR	2907642	Identifier	arglist		2907017	0					
ANR	2907643	Identifier	Count		2907017	1					
ANR	2907644	ArgumentList			2907017	1					
ANR	2907645	PrimaryExpression	1		2907017	1					
ANR	2907646	ExpressionStatement	"arglist . AppendArg ( ""-upgrade"" )"	473:4:13315:13344	2907017	4	True				
ANR	2907647	CallExpression	"arglist . AppendArg ( ""-upgrade"" )"		2907017	0					
ANR	2907648	Callee	arglist . AppendArg		2907017	0					
ANR	2907649	MemberAccess	arglist . AppendArg		2907017	0					
ANR	2907650	Identifier	arglist		2907017	0					
ANR	2907651	Identifier	AppendArg		2907017	1					
ANR	2907652	ArgumentList	"""-upgrade"""		2907017	1					
ANR	2907653	Argument	"""-upgrade"""		2907017	0					
ANR	2907654	PrimaryExpression	"""-upgrade"""		2907017	0					
ANR	2907655	IdentifierDeclStatement	MyString argString ;	476:2:13353:13371	2907017	14	True				
ANR	2907656	IdentifierDecl	argString		2907017	0					
ANR	2907657	IdentifierDeclType	MyString		2907017	0					
ANR	2907658	Identifier	argString		2907017	1					
ANR	2907659	ExpressionStatement	arglist . GetArgsStringForDisplay ( & argString )	477:2:13375:13418	2907017	15	True				
ANR	2907660	CallExpression	arglist . GetArgsStringForDisplay ( & argString )		2907017	0					
ANR	2907661	Callee	arglist . GetArgsStringForDisplay		2907017	0					
ANR	2907662	MemberAccess	arglist . GetArgsStringForDisplay		2907017	0					
ANR	2907663	Identifier	arglist		2907017	0					
ANR	2907664	Identifier	GetArgsStringForDisplay		2907017	1					
ANR	2907665	ArgumentList	& argString		2907017	1					
ANR	2907666	Argument	& argString		2907017	0					
ANR	2907667	UnaryOperationExpression	& argString		2907017	0					
ANR	2907668	UnaryOperator	&		2907017	0					
ANR	2907669	Identifier	argString		2907017	1					
ANR	2907670	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , argString . Value ( ) )"	478:2:13422:13466	2907017	16	True				
ANR	2907671	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , argString . Value ( ) )"		2907017	0					
ANR	2907672	Callee	dprintf		2907017	0					
ANR	2907673	Identifier	dprintf		2907017	0					
ANR	2907674	ArgumentList	D_ALWAYS		2907017	1					
ANR	2907675	Argument	D_ALWAYS		2907017	0					
ANR	2907676	Identifier	D_ALWAYS		2907017	0					
ANR	2907677	Argument	"""%s\\n"""		2907017	1					
ANR	2907678	PrimaryExpression	"""%s\\n"""		2907017	0					
ANR	2907679	Argument	argString . Value ( )		2907017	2					
ANR	2907680	CallExpression	argString . Value ( )		2907017	0					
ANR	2907681	Callee	argString . Value		2907017	0					
ANR	2907682	MemberAccess	argString . Value		2907017	0					
ANR	2907683	Identifier	argString		2907017	0					
ANR	2907684	Identifier	Value		2907017	1					
ANR	2907685	ArgumentList			2907017	1					
ANR	2907686	ExpressionStatement	"m_pid = daemonCore -> Create_Process ( m_java . Value ( ) , arglist , PRIV_CONDOR_FINAL , m_reaper , FALSE , NULL , NULL , NULL , NULL , arrIO )"	480:2:13471:13662	2907017	17	True				
ANR	2907687	AssignmentExpression	"m_pid = daemonCore -> Create_Process ( m_java . Value ( ) , arglist , PRIV_CONDOR_FINAL , m_reaper , FALSE , NULL , NULL , NULL , NULL , arrIO )"		2907017	0		=			
ANR	2907688	Identifier	m_pid		2907017	0					
ANR	2907689	CallExpression	"daemonCore -> Create_Process ( m_java . Value ( ) , arglist , PRIV_CONDOR_FINAL , m_reaper , FALSE , NULL , NULL , NULL , NULL , arrIO )"		2907017	1					
ANR	2907690	Callee	daemonCore -> Create_Process		2907017	0					
ANR	2907691	PtrMemberAccess	daemonCore -> Create_Process		2907017	0					
ANR	2907692	Identifier	daemonCore		2907017	0					
ANR	2907693	Identifier	Create_Process		2907017	1					
ANR	2907694	ArgumentList	m_java . Value ( )		2907017	1					
ANR	2907695	Argument	m_java . Value ( )		2907017	0					
ANR	2907696	CallExpression	m_java . Value ( )		2907017	0					
ANR	2907697	Callee	m_java . Value		2907017	0					
ANR	2907698	MemberAccess	m_java . Value		2907017	0					
ANR	2907699	Identifier	m_java		2907017	0					
ANR	2907700	Identifier	Value		2907017	1					
ANR	2907701	ArgumentList			2907017	1					
ANR	2907702	Argument	arglist		2907017	1					
ANR	2907703	Identifier	arglist		2907017	0					
ANR	2907704	Argument	PRIV_CONDOR_FINAL		2907017	2					
ANR	2907705	Identifier	PRIV_CONDOR_FINAL		2907017	0					
ANR	2907706	Argument	m_reaper		2907017	3					
ANR	2907707	Identifier	m_reaper		2907017	0					
ANR	2907708	Argument	FALSE		2907017	4					
ANR	2907709	Identifier	FALSE		2907017	0					
ANR	2907710	Argument	NULL		2907017	5					
ANR	2907711	Identifier	NULL		2907017	0					
ANR	2907712	Argument	NULL		2907017	6					
ANR	2907713	Identifier	NULL		2907017	0					
ANR	2907714	Argument	NULL		2907017	7					
ANR	2907715	Identifier	NULL		2907017	0					
ANR	2907716	Argument	NULL		2907017	8					
ANR	2907717	Identifier	NULL		2907017	0					
ANR	2907718	Argument	arrIO		2907017	9					
ANR	2907719	Identifier	arrIO		2907017	0					
ANR	2907720	IfStatement	if ( m_pid == FALSE )		2907017	18					
ANR	2907721	Condition	m_pid == FALSE	492:6:13671:13684	2907017	0	True				
ANR	2907722	EqualityExpression	m_pid == FALSE		2907017	0		==			
ANR	2907723	Identifier	m_pid		2907017	0					
ANR	2907724	Identifier	FALSE		2907017	1					
ANR	2907725	ExpressionStatement	"EXCEPT ( ""Failed to launch qpid process using Create_Process.\\n "" )"	493:4:13692:13756	2907017	1	True				
ANR	2907726	CallExpression	"EXCEPT ( ""Failed to launch qpid process using Create_Process.\\n "" )"		2907017	0					
ANR	2907727	Callee	EXCEPT		2907017	0					
ANR	2907728	Identifier	EXCEPT		2907017	0					
ANR	2907729	ArgumentList	"""Failed to launch qpid process using Create_Process.\\n """		2907017	1					
ANR	2907730	Argument	"""Failed to launch qpid process using Create_Process.\\n """		2907017	0					
ANR	2907731	PrimaryExpression	"""Failed to launch qpid process using Create_Process.\\n """		2907017	0					
ANR	2907732	ExpressionStatement	"dprintf ( D_ALWAYS , ""Launched qpid process %d pid=%d\\n"" , type , m_pid )"	495:2:13761:13828	2907017	19	True				
ANR	2907733	CallExpression	"dprintf ( D_ALWAYS , ""Launched qpid process %d pid=%d\\n"" , type , m_pid )"		2907017	0					
ANR	2907734	Callee	dprintf		2907017	0					
ANR	2907735	Identifier	dprintf		2907017	0					
ANR	2907736	ArgumentList	D_ALWAYS		2907017	1					
ANR	2907737	Argument	D_ALWAYS		2907017	0					
ANR	2907738	Identifier	D_ALWAYS		2907017	0					
ANR	2907739	Argument	"""Launched qpid process %d pid=%d\\n"""		2907017	1					
ANR	2907740	PrimaryExpression	"""Launched qpid process %d pid=%d\\n"""		2907017	0					
ANR	2907741	Argument	type		2907017	2					
ANR	2907742	Identifier	type		2907017	0					
ANR	2907743	Argument	m_pid		2907017	3					
ANR	2907744	Identifier	m_pid		2907017	0					
ANR	2907745	ExpressionStatement	m_state = STATE_RUNNING	496:2:13832:13855	2907017	20	True				
ANR	2907746	AssignmentExpression	m_state = STATE_RUNNING		2907017	0		=			
ANR	2907747	Identifier	m_state		2907017	0					
ANR	2907748	Identifier	STATE_RUNNING		2907017	1					
ANR	2907749	ReturnType	void		2907017	1					
ANR	2907750	Identifier	Pigeon :: startService		2907017	2					
ANR	2907751	ParameterList	int type		2907017	3					
ANR	2907752	Parameter	int type	373:26:10357:10364	2907017	0	True				
ANR	2907753	ParameterType	int		2907017	0					
ANR	2907754	Identifier	type		2907017	1					
ANR	2907755	CFGEntryNode	ENTRY		2907017		True				
ANR	2907756	CFGExitNode	EXIT		2907017		True				
ANR	2907757	Symbol	daemonCore -> Create_Process		2907017						
ANR	2907758	Symbol	log_dir . Value		2907017						
ANR	2907759	Symbol	& arglist		2907017						
ANR	2907760	Symbol	type		2907017						
ANR	2907761	Symbol	dir		2907017						
ANR	2907762	Symbol	dir . Next		2907017						
ANR	2907763	Symbol	& m_classpath		2907017						
ANR	2907764	Symbol	m_state		2907017						
ANR	2907765	Symbol	& Pigeon :: stdoutHandler		2907017						
ANR	2907766	Symbol	ldir		2907017						
ANR	2907767	Symbol	m_pid		2907017						
ANR	2907768	Symbol	argString		2907017						
ANR	2907769	Symbol	daemonCore -> Register_Pipe		2907017						
ANR	2907770	Symbol	NULL		2907017						
ANR	2907771	Symbol	m_stdOut		2907017						
ANR	2907772	Symbol	m_secondaryNodeClass		2907017						
ANR	2907773	Symbol	this		2907017						
ANR	2907774	Symbol	fp2		2907017						
ANR	2907775	Symbol	D_FULLDEBUG		2907017						
ANR	2907776	Symbol	argString . Value		2907017						
ANR	2907777	Symbol	m_nameNodeClass		2907017						
ANR	2907778	Symbol	arglist . Count		2907017						
ANR	2907779	Symbol	* daemonCore		2907017						
ANR	2907780	Symbol	log4jarg		2907017						
ANR	2907781	Symbol	true		2907017						
ANR	2907782	Symbol	QPID_DATANODE		2907017						
ANR	2907783	Symbol	daemonCore -> Create_Pipe		2907017						
ANR	2907784	Symbol	* arrIO		2907017						
ANR	2907785	Symbol	& argString		2907017						
ANR	2907786	Symbol	my_pclose		2907017						
ANR	2907787	Symbol	status		2907017						
ANR	2907788	Symbol	m_nameNodeDir		2907017						
ANR	2907789	Symbol	m_stdErr		2907017						
ANR	2907790	Symbol	fp		2907017						
ANR	2907791	Symbol	arrIO		2907017						
ANR	2907792	Symbol	my_popen		2907017						
ANR	2907793	Symbol	QPID_NAMENODE		2907017						
ANR	2907794	Symbol	param		2907017						
ANR	2907795	Symbol	arglist		2907017						
ANR	2907796	Symbol	daemonCore		2907017						
ANR	2907797	Symbol	m_java		2907017						
ANR	2907798	Symbol	log4jarg . Value		2907017						
ANR	2907799	Symbol	PRIV_CONDOR_FINAL		2907017						
ANR	2907800	Symbol	log4j		2907017						
ANR	2907801	Symbol	m_java . Value		2907017						
ANR	2907802	Symbol	D_ALWAYS		2907017						
ANR	2907803	Symbol	false		2907017						
ANR	2907804	Symbol	QPID_SECONDARY		2907017						
ANR	2907805	Symbol	m_dataNodeClass		2907017						
ANR	2907806	Symbol	log_dir		2907017						
ANR	2907807	Symbol	m_reaper		2907017						
ANR	2907808	Symbol	& Pigeon :: stderrHandler		2907017						
ANR	2907809	Symbol	FALSE		2907017						
ANR	2907810	Symbol	STATE_RUNNING		2907017						
ANR	2907811	Function	Pigeon :: writeXMLParam	499:0:13860:14177							
ANR	2907812	FunctionDef	"Pigeon :: writeXMLParam (const char * key , const char * value , StringList * buff)"		2907811	0					
ANR	2907813	CompoundStatement		499:81:13941:14177	2907811	0					
ANR	2907814	IdentifierDeclStatement	MyString temp ;	500:2:13945:13958	2907811	0	True				
ANR	2907815	IdentifierDecl	temp		2907811	0					
ANR	2907816	IdentifierDeclType	MyString		2907811	0					
ANR	2907817	Identifier	temp		2907811	1					
ANR	2907818	ExpressionStatement	"buff -> append ( ""<property>"" )"	502:2:13963:13989	2907811	1	True				
ANR	2907819	CallExpression	"buff -> append ( ""<property>"" )"		2907811	0					
ANR	2907820	Callee	buff -> append		2907811	0					
ANR	2907821	PtrMemberAccess	buff -> append		2907811	0					
ANR	2907822	Identifier	buff		2907811	0					
ANR	2907823	Identifier	append		2907811	1					
ANR	2907824	ArgumentList	"""<property>"""		2907811	1					
ANR	2907825	Argument	"""<property>"""		2907811	0					
ANR	2907826	PrimaryExpression	"""<property>"""		2907811	0					
ANR	2907827	ExpressionStatement	"temp . sprintf ( ""    <name>%s</name>"" , key )"	504:2:13994:14034	2907811	2	True				
ANR	2907828	CallExpression	"temp . sprintf ( ""    <name>%s</name>"" , key )"		2907811	0					
ANR	2907829	Callee	temp . sprintf		2907811	0					
ANR	2907830	MemberAccess	temp . sprintf		2907811	0					
ANR	2907831	Identifier	temp		2907811	0					
ANR	2907832	Identifier	sprintf		2907811	1					
ANR	2907833	ArgumentList	"""    <name>%s</name>"""		2907811	1					
ANR	2907834	Argument	"""    <name>%s</name>"""		2907811	0					
ANR	2907835	PrimaryExpression	"""    <name>%s</name>"""		2907811	0					
ANR	2907836	Argument	key		2907811	1					
ANR	2907837	Identifier	key		2907811	0					
ANR	2907838	ExpressionStatement	buff -> append ( temp . Value ( ) )	505:2:14038:14064	2907811	3	True				
ANR	2907839	CallExpression	buff -> append ( temp . Value ( ) )		2907811	0					
ANR	2907840	Callee	buff -> append		2907811	0					
ANR	2907841	PtrMemberAccess	buff -> append		2907811	0					
ANR	2907842	Identifier	buff		2907811	0					
ANR	2907843	Identifier	append		2907811	1					
ANR	2907844	ArgumentList	temp . Value ( )		2907811	1					
ANR	2907845	Argument	temp . Value ( )		2907811	0					
ANR	2907846	CallExpression	temp . Value ( )		2907811	0					
ANR	2907847	Callee	temp . Value		2907811	0					
ANR	2907848	MemberAccess	temp . Value		2907811	0					
ANR	2907849	Identifier	temp		2907811	0					
ANR	2907850	Identifier	Value		2907811	1					
ANR	2907851	ArgumentList			2907811	1					
ANR	2907852	ExpressionStatement	"temp . sprintf ( ""    <value>%s</value>"" , value )"	507:2:14069:14113	2907811	4	True				
ANR	2907853	CallExpression	"temp . sprintf ( ""    <value>%s</value>"" , value )"		2907811	0					
ANR	2907854	Callee	temp . sprintf		2907811	0					
ANR	2907855	MemberAccess	temp . sprintf		2907811	0					
ANR	2907856	Identifier	temp		2907811	0					
ANR	2907857	Identifier	sprintf		2907811	1					
ANR	2907858	ArgumentList	"""    <value>%s</value>"""		2907811	1					
ANR	2907859	Argument	"""    <value>%s</value>"""		2907811	0					
ANR	2907860	PrimaryExpression	"""    <value>%s</value>"""		2907811	0					
ANR	2907861	Argument	value		2907811	1					
ANR	2907862	Identifier	value		2907811	0					
ANR	2907863	ExpressionStatement	buff -> append ( temp . Value ( ) )	508:2:14117:14143	2907811	5	True				
ANR	2907864	CallExpression	buff -> append ( temp . Value ( ) )		2907811	0					
ANR	2907865	Callee	buff -> append		2907811	0					
ANR	2907866	PtrMemberAccess	buff -> append		2907811	0					
ANR	2907867	Identifier	buff		2907811	0					
ANR	2907868	Identifier	append		2907811	1					
ANR	2907869	ArgumentList	temp . Value ( )		2907811	1					
ANR	2907870	Argument	temp . Value ( )		2907811	0					
ANR	2907871	CallExpression	temp . Value ( )		2907811	0					
ANR	2907872	Callee	temp . Value		2907811	0					
ANR	2907873	MemberAccess	temp . Value		2907811	0					
ANR	2907874	Identifier	temp		2907811	0					
ANR	2907875	Identifier	Value		2907811	1					
ANR	2907876	ArgumentList			2907811	1					
ANR	2907877	ExpressionStatement	"buff -> append ( ""</property>"" )"	510:2:14148:14175	2907811	6	True				
ANR	2907878	CallExpression	"buff -> append ( ""</property>"" )"		2907811	0					
ANR	2907879	Callee	buff -> append		2907811	0					
ANR	2907880	PtrMemberAccess	buff -> append		2907811	0					
ANR	2907881	Identifier	buff		2907811	0					
ANR	2907882	Identifier	append		2907811	1					
ANR	2907883	ArgumentList	"""</property>"""		2907811	1					
ANR	2907884	Argument	"""</property>"""		2907811	0					
ANR	2907885	PrimaryExpression	"""</property>"""		2907811	0					
ANR	2907886	ReturnType	void		2907811	1					
ANR	2907887	Identifier	Pigeon :: writeXMLParam		2907811	2					
ANR	2907888	ParameterList	"const char * key , const char * value , StringList * buff"		2907811	3					
ANR	2907889	Parameter	const char * key	499:27:13887:13901	2907811	0	True				
ANR	2907890	ParameterType	const char *		2907811	0					
ANR	2907891	Identifier	key		2907811	1					
ANR	2907892	Parameter	const char * value	499:44:13904:13920	2907811	1	True				
ANR	2907893	ParameterType	const char *		2907811	0					
ANR	2907894	Identifier	value		2907811	1					
ANR	2907895	Parameter	StringList * buff	499:63:13923:13938	2907811	2	True				
ANR	2907896	ParameterType	StringList *		2907811	0					
ANR	2907897	Identifier	buff		2907811	1					
ANR	2907898	CFGEntryNode	ENTRY		2907811		True				
ANR	2907899	CFGExitNode	EXIT		2907811		True				
ANR	2907900	Symbol	temp		2907811						
ANR	2907901	Symbol	temp . Value		2907811						
ANR	2907902	Symbol	value		2907811						
ANR	2907903	Symbol	buff		2907811						
ANR	2907904	Symbol	key		2907811						
ANR	2907905	Function	Pigeon :: recurrBuildClasspath	513:0:14180:14610							
ANR	2907906	FunctionDef	Pigeon :: recurrBuildClasspath (const char * path)		2907905	0					
ANR	2907907	CompoundStatement		513:52:14232:14610	2907905	0					
ANR	2907908	IdentifierDeclStatement	Directory dir ( path ) ;	514:2:14236:14255	2907905	0	True				
ANR	2907909	IdentifierDecl	dir ( path )		2907905	0					
ANR	2907910	IdentifierDeclType	Directory		2907905	0					
ANR	2907911	Identifier	dir		2907905	1					
ANR	2907912	Identifier	path		2907905	2					
ANR	2907913	ExpressionStatement	dir . Rewind ( )	515:2:14259:14271	2907905	1	True				
ANR	2907914	CallExpression	dir . Rewind ( )		2907905	0					
ANR	2907915	Callee	dir . Rewind		2907905	0					
ANR	2907916	MemberAccess	dir . Rewind		2907905	0					
ANR	2907917	Identifier	dir		2907905	0					
ANR	2907918	Identifier	Rewind		2907905	1					
ANR	2907919	ArgumentList			2907905	1					
ANR	2907920	IdentifierDeclStatement	const char * ctmp ;	517:2:14276:14292	2907905	2	True				
ANR	2907921	IdentifierDecl	* ctmp		2907905	0					
ANR	2907922	IdentifierDeclType	const char *		2907905	0					
ANR	2907923	Identifier	ctmp		2907905	1					
ANR	2907924	WhileStatement	while ( ( ctmp = dir . Next ( ) ) )		2907905	3					
ANR	2907925	Condition	ctmp = dir . Next ( )	518:10:14304:14322	2907905	0	True				
ANR	2907926	AssignmentExpression	ctmp = dir . Next ( )		2907905	0		=			
ANR	2907927	Identifier	ctmp		2907905	0					
ANR	2907928	CallExpression	dir . Next ( )		2907905	1					
ANR	2907929	Callee	dir . Next		2907905	0					
ANR	2907930	MemberAccess	dir . Next		2907905	0					
ANR	2907931	Identifier	dir		2907905	0					
ANR	2907932	Identifier	Next		2907905	1					
ANR	2907933	ArgumentList			2907905	1					
ANR	2907934	CompoundStatement		7:4:98:138	2907905	1					
ANR	2907935	IdentifierDeclStatement	"const char * match = strstr ( ctmp , "".jar"" ) ;"	519:4:14331:14371	2907905	0	True				
ANR	2907936	IdentifierDecl	"* match = strstr ( ctmp , "".jar"" )"		2907905	0					
ANR	2907937	IdentifierDeclType	const char *		2907905	0					
ANR	2907938	Identifier	match		2907905	1					
ANR	2907939	AssignmentExpression	"* match = strstr ( ctmp , "".jar"" )"		2907905	2		=			
ANR	2907940	Identifier	match		2907905	0					
ANR	2907941	CallExpression	"strstr ( ctmp , "".jar"" )"		2907905	1					
ANR	2907942	Callee	strstr		2907905	0					
ANR	2907943	Identifier	strstr		2907905	0					
ANR	2907944	ArgumentList	ctmp		2907905	1					
ANR	2907945	Argument	ctmp		2907905	0					
ANR	2907946	Identifier	ctmp		2907905	0					
ANR	2907947	Argument	""".jar"""		2907905	1					
ANR	2907948	PrimaryExpression	""".jar"""		2907905	0					
ANR	2907949	IfStatement	if ( match && strlen ( match ) == 4 )		2907905	1					
ANR	2907950	Condition	match && strlen ( match ) == 4	520:8:14381:14407	2907905	0	True				
ANR	2907951	AndExpression	match && strlen ( match ) == 4		2907905	0		&&			
ANR	2907952	Identifier	match		2907905	0					
ANR	2907953	EqualityExpression	strlen ( match ) == 4		2907905	1		==			
ANR	2907954	CallExpression	strlen ( match )		2907905	0					
ANR	2907955	Callee	strlen		2907905	0					
ANR	2907956	Identifier	strlen		2907905	0					
ANR	2907957	ArgumentList	match		2907905	1					
ANR	2907958	Argument	match		2907905	0					
ANR	2907959	Identifier	match		2907905	0					
ANR	2907960	PrimaryExpression	4		2907905	1					
ANR	2907961	CompoundStatement		8:37:177:177	2907905	1					
ANR	2907962	ExpressionStatement	m_classpath . insert ( dir . GetFullPath ( ) )	521:6:14418:14455	2907905	0	True				
ANR	2907963	CallExpression	m_classpath . insert ( dir . GetFullPath ( ) )		2907905	0					
ANR	2907964	Callee	m_classpath . insert		2907905	0					
ANR	2907965	MemberAccess	m_classpath . insert		2907905	0					
ANR	2907966	Identifier	m_classpath		2907905	0					
ANR	2907967	Identifier	insert		2907905	1					
ANR	2907968	ArgumentList	dir . GetFullPath ( )		2907905	1					
ANR	2907969	Argument	dir . GetFullPath ( )		2907905	0					
ANR	2907970	CallExpression	dir . GetFullPath ( )		2907905	0					
ANR	2907971	Callee	dir . GetFullPath		2907905	0					
ANR	2907972	MemberAccess	dir . GetFullPath		2907905	0					
ANR	2907973	Identifier	dir		2907905	0					
ANR	2907974	Identifier	GetFullPath		2907905	1					
ANR	2907975	ArgumentList			2907905	1					
ANR	2907976	ElseStatement	else		2907905	0					
ANR	2907977	IfStatement	if ( dir . IsDirectory ( ) )		2907905	0					
ANR	2907978	Condition	dir . IsDirectory ( )	522:15:14472:14488	2907905	0	True				
ANR	2907979	CallExpression	dir . IsDirectory ( )		2907905	0					
ANR	2907980	Callee	dir . IsDirectory		2907905	0					
ANR	2907981	MemberAccess	dir . IsDirectory		2907905	0					
ANR	2907982	Identifier	dir		2907905	0					
ANR	2907983	Identifier	IsDirectory		2907905	1					
ANR	2907984	ArgumentList			2907905	1					
ANR	2907985	CompoundStatement		10:34:258:258	2907905	1					
ANR	2907986	ExpressionStatement	recurrBuildClasspath ( dir . GetFullPath ( ) )	524:6:14539:14578	2907905	0	True				
ANR	2907987	CallExpression	recurrBuildClasspath ( dir . GetFullPath ( ) )		2907905	0					
ANR	2907988	Callee	recurrBuildClasspath		2907905	0					
ANR	2907989	Identifier	recurrBuildClasspath		2907905	0					
ANR	2907990	ArgumentList	dir . GetFullPath ( )		2907905	1					
ANR	2907991	Argument	dir . GetFullPath ( )		2907905	0					
ANR	2907992	CallExpression	dir . GetFullPath ( )		2907905	0					
ANR	2907993	Callee	dir . GetFullPath		2907905	0					
ANR	2907994	MemberAccess	dir . GetFullPath		2907905	0					
ANR	2907995	Identifier	dir		2907905	0					
ANR	2907996	Identifier	GetFullPath		2907905	1					
ANR	2907997	ArgumentList			2907905	1					
ANR	2907998	ReturnType	void		2907905	1					
ANR	2907999	Identifier	Pigeon :: recurrBuildClasspath		2907905	2					
ANR	2908000	ParameterList	const char * path		2907905	3					
ANR	2908001	Parameter	const char * path	513:34:14214:14229	2907905	0	True				
ANR	2908002	ParameterType	const char *		2907905	0					
ANR	2908003	Identifier	path		2907905	1					
ANR	2908004	CFGEntryNode	ENTRY		2907905		True				
ANR	2908005	CFGExitNode	EXIT		2907905		True				
ANR	2908006	Symbol	dir . GetFullPath		2907905						
ANR	2908007	Symbol	path		2907905						
ANR	2908008	Symbol	strlen		2907905						
ANR	2908009	Symbol	m_classpath		2907905						
ANR	2908010	Symbol	strstr		2907905						
ANR	2908011	Symbol	match		2907905						
ANR	2908012	Symbol	ctmp		2907905						
ANR	2908013	Symbol	dir . IsDirectory		2907905						
ANR	2908014	Symbol	dir		2907905						
ANR	2908015	Symbol	dir . Next		2907905						
ANR	2908016	Function	Pigeon :: publishClassAd	529:0:14613:14917							
ANR	2908017	FunctionDef	Pigeon :: publishClassAd ()		2908016	0					
ANR	2908018	CompoundStatement		529:30:14643:14917	2908016	0					
ANR	2908019	ExpressionStatement	daemonCore -> UpdateLocalAd ( & m_qpidAd )	531:2:14711:14747	2908016	0	True				
ANR	2908020	CallExpression	daemonCore -> UpdateLocalAd ( & m_qpidAd )		2908016	0					
ANR	2908021	Callee	daemonCore -> UpdateLocalAd		2908016	0					
ANR	2908022	PtrMemberAccess	daemonCore -> UpdateLocalAd		2908016	0					
ANR	2908023	Identifier	daemonCore		2908016	0					
ANR	2908024	Identifier	UpdateLocalAd		2908016	1					
ANR	2908025	ArgumentList	& m_qpidAd		2908016	1					
ANR	2908026	Argument	& m_qpidAd		2908016	0					
ANR	2908027	UnaryOperationExpression	& m_qpidAd		2908016	0					
ANR	2908028	UnaryOperator	&		2908016	0					
ANR	2908029	Identifier	m_qpidAd		2908016	1					
ANR	2908030	IdentifierDeclStatement	"int stat = daemonCore -> sendUpdates ( UPDATE_AD_GENERIC , & m_qpidAd , NULL , true ) ;"	532:2:14751:14827	2908016	1	True				
ANR	2908031	IdentifierDecl	"stat = daemonCore -> sendUpdates ( UPDATE_AD_GENERIC , & m_qpidAd , NULL , true )"		2908016	0					
ANR	2908032	IdentifierDeclType	int		2908016	0					
ANR	2908033	Identifier	stat		2908016	1					
ANR	2908034	AssignmentExpression	"stat = daemonCore -> sendUpdates ( UPDATE_AD_GENERIC , & m_qpidAd , NULL , true )"		2908016	2		=			
ANR	2908035	Identifier	stat		2908016	0					
ANR	2908036	CallExpression	"daemonCore -> sendUpdates ( UPDATE_AD_GENERIC , & m_qpidAd , NULL , true )"		2908016	1					
ANR	2908037	Callee	daemonCore -> sendUpdates		2908016	0					
ANR	2908038	PtrMemberAccess	daemonCore -> sendUpdates		2908016	0					
ANR	2908039	Identifier	daemonCore		2908016	0					
ANR	2908040	Identifier	sendUpdates		2908016	1					
ANR	2908041	ArgumentList	UPDATE_AD_GENERIC		2908016	1					
ANR	2908042	Argument	UPDATE_AD_GENERIC		2908016	0					
ANR	2908043	Identifier	UPDATE_AD_GENERIC		2908016	0					
ANR	2908044	Argument	& m_qpidAd		2908016	1					
ANR	2908045	UnaryOperationExpression	& m_qpidAd		2908016	0					
ANR	2908046	UnaryOperator	&		2908016	0					
ANR	2908047	Identifier	m_qpidAd		2908016	1					
ANR	2908048	Argument	NULL		2908016	2					
ANR	2908049	Identifier	NULL		2908016	0					
ANR	2908050	Argument	true		2908016	3					
ANR	2908051	Identifier	true		2908016	0					
ANR	2908052	ExpressionStatement	"dprintf ( D_ALWAYS , ""************************ Updated ClassAds (status = %d)\\n"" , stat )"	533:2:14831:14915	2908016	2	True				
ANR	2908053	CallExpression	"dprintf ( D_ALWAYS , ""************************ Updated ClassAds (status = %d)\\n"" , stat )"		2908016	0					
ANR	2908054	Callee	dprintf		2908016	0					
ANR	2908055	Identifier	dprintf		2908016	0					
ANR	2908056	ArgumentList	D_ALWAYS		2908016	1					
ANR	2908057	Argument	D_ALWAYS		2908016	0					
ANR	2908058	Identifier	D_ALWAYS		2908016	0					
ANR	2908059	Argument	"""************************ Updated ClassAds (status = %d)\\n"""		2908016	1					
ANR	2908060	PrimaryExpression	"""************************ Updated ClassAds (status = %d)\\n"""		2908016	0					
ANR	2908061	Argument	stat		2908016	2					
ANR	2908062	Identifier	stat		2908016	0					
ANR	2908063	ReturnType	void		2908016	1					
ANR	2908064	Identifier	Pigeon :: publishClassAd		2908016	2					
ANR	2908065	ParameterList			2908016	3					
ANR	2908066	CFGEntryNode	ENTRY		2908016		True				
ANR	2908067	CFGExitNode	EXIT		2908016		True				
ANR	2908068	Symbol	stat		2908016						
ANR	2908069	Symbol	NULL		2908016						
ANR	2908070	Symbol	* daemonCore		2908016						
ANR	2908071	Symbol	daemonCore		2908016						
ANR	2908072	Symbol	true		2908016						
ANR	2908073	Symbol	UPDATE_AD_GENERIC		2908016						
ANR	2908074	Symbol	D_ALWAYS		2908016						
ANR	2908075	Symbol	& m_qpidAd		2908016						
ANR	2908076	Symbol	daemonCore -> sendUpdates		2908016						
ANR	2908077	DeclStmt									
ANR	2908078	Decl							char	char [ STDOUT_READBUF_SIZE ]	buff
ANR	2908079	DeclStmt									
ANR	2908080	Decl							int	int	bytes
ANR	2908081	DeclStmt									
ANR	2908082	Decl							int	int	ad_type
ANR	2908083	DeclStmt									
ANR	2908084	Decl							int	int	pos
ANR	2908085	DeclStmt									
ANR	2908086	Decl							MyString	MyString	line
ANR	2908087	DeclStmt									
ANR	2908088	Decl							MyString	MyString	adKey
ANR	2908089	Decl							MyString	MyString	adValue
ANR	2908090	DeclStmt									
ANR	2908091	Decl							char	char [ STDOUT_READBUF_SIZE ]	buff
ANR	2908092	DeclStmt									
ANR	2908093	Decl							int	int	bytes
ANR	2908094	DeclStmt									
ANR	2908095	Decl							int	int	pos
ANR	2908096	DeclStmt									
ANR	2908097	Decl							MyString	MyString	line
ANR	2908098	Function	Pigeon :: getKeyValue	601:0:17122:18162							
ANR	2908099	FunctionDef	"Pigeon :: getKeyValue (MyString line , MyString * key , MyString * value)"		2908098	0					
ANR	2908100	CompoundStatement		601:71:17193:18162	2908098	0					
ANR	2908101	IdentifierDeclStatement	int type = AD_NULL ;	602:2:17197:17215	2908098	0	True				
ANR	2908102	IdentifierDecl	type = AD_NULL		2908098	0					
ANR	2908103	IdentifierDeclType	int		2908098	0					
ANR	2908104	Identifier	type		2908098	1					
ANR	2908105	AssignmentExpression	type = AD_NULL		2908098	2		=			
ANR	2908106	Identifier	AD_NULL		2908098	0					
ANR	2908107	Identifier	AD_NULL		2908098	1					
ANR	2908108	IdentifierDeclStatement	int tokenno = - 1 ;	603:2:17219:17235	2908098	1	True				
ANR	2908109	IdentifierDecl	tokenno = - 1		2908098	0					
ANR	2908110	IdentifierDeclType	int		2908098	0					
ANR	2908111	Identifier	tokenno		2908098	1					
ANR	2908112	AssignmentExpression	tokenno = - 1		2908098	2		=			
ANR	2908113	Identifier	tokenno		2908098	0					
ANR	2908114	UnaryOperationExpression	- 1		2908098	1					
ANR	2908115	UnaryOperator	-		2908098	0					
ANR	2908116	PrimaryExpression	1		2908098	1					
ANR	2908117	IdentifierDeclStatement	char * s1 = 0 ;	604:2:17239:17251	2908098	2	True				
ANR	2908118	IdentifierDecl	* s1 = 0		2908098	0					
ANR	2908119	IdentifierDeclType	char *		2908098	0					
ANR	2908120	Identifier	s1		2908098	1					
ANR	2908121	AssignmentExpression	* s1 = 0		2908098	2		=			
ANR	2908122	Identifier	s1		2908098	0					
ANR	2908123	PrimaryExpression	0		2908098	1					
ANR	2908124	ExpressionStatement	line . Tokenize ( )	606:2:17256:17271	2908098	3	True				
ANR	2908125	CallExpression	line . Tokenize ( )		2908098	0					
ANR	2908126	Callee	line . Tokenize		2908098	0					
ANR	2908127	MemberAccess	line . Tokenize		2908098	0					
ANR	2908128	Identifier	line		2908098	0					
ANR	2908129	Identifier	Tokenize		2908098	1					
ANR	2908130	ArgumentList			2908098	1					
ANR	2908131	Statement	while	608:2:17276:17280	2908098	4	True				
ANR	2908132	Statement	(	608:7:17281:17281	2908098	5	True				
ANR	2908133	Statement	(	608:9:17283:17283	2908098	6	True				
ANR	2908134	Statement	s1	608:10:17284:17285	2908098	7	True				
ANR	2908135	Statement	=	608:13:17287:17287	2908098	8	True				
ANR	2908136	Statement	const_cast	608:15:17289:17298	2908098	9	True				
ANR	2908137	Statement	<	608:25:17299:17299	2908098	10	True				
ANR	2908138	Statement	char	608:26:17300:17303	2908098	11	True				
ANR	2908139	Statement	*	608:30:17304:17304	2908098	12	True				
ANR	2908140	Statement	>	608:31:17305:17305	2908098	13	True				
ANR	2908141	Statement	(	608:32:17306:17306	2908098	14	True				
ANR	2908142	Statement	line	608:33:17307:17310	2908098	15	True				
ANR	2908143	Statement	.	608:37:17311:17311	2908098	16	True				
ANR	2908144	Statement	GetNextToken	608:38:17312:17323	2908098	17	True				
ANR	2908145	Statement	(	608:50:17324:17324	2908098	18	True				
ANR	2908146	Statement	""" """	608:51:17325:17327	2908098	19	True				
ANR	2908147	Statement	","	608:54:17328:17328	2908098	20	True				
ANR	2908148	Statement	true	608:56:17330:17333	2908098	21	True				
ANR	2908149	Statement	)	608:60:17334:17334	2908098	22	True				
ANR	2908150	Statement	)	608:61:17335:17335	2908098	23	True				
ANR	2908151	Statement	)	608:62:17336:17336	2908098	24	True				
ANR	2908152	Statement	!=	608:64:17338:17339	2908098	25	True				
ANR	2908153	Statement	NULL	608:67:17341:17344	2908098	26	True				
ANR	2908154	Statement	)	608:71:17345:17345	2908098	27	True				
ANR	2908155	CompoundStatement		8:73:153:153	2908098	28					
ANR	2908156	ExpressionStatement	tokenno ++	609:4:17353:17362	2908098	0	True				
ANR	2908157	PostIncDecOperationExpression	tokenno ++		2908098	0					
ANR	2908158	Identifier	tokenno		2908098	0					
ANR	2908159	IncDec	++		2908098	1					
ANR	2908160	IfStatement	if ( strlen ( s1 ) < 1 )		2908098	1					
ANR	2908161	Condition	strlen ( s1 ) < 1	611:8:17373:17386	2908098	0	True				
ANR	2908162	RelationalExpression	strlen ( s1 ) < 1		2908098	0		<			
ANR	2908163	CallExpression	strlen ( s1 )		2908098	0					
ANR	2908164	Callee	strlen		2908098	0					
ANR	2908165	Identifier	strlen		2908098	0					
ANR	2908166	ArgumentList	s1		2908098	1					
ANR	2908167	Argument	s1		2908098	0					
ANR	2908168	Identifier	s1		2908098	0					
ANR	2908169	PrimaryExpression	1		2908098	1					
ANR	2908170	GotoStatement	goto end ;	612:6:17395:17403	2908098	1	True				
ANR	2908171	Identifier	end		2908098	0					
ANR	2908172	SwitchStatement	switch ( tokenno )		2908098	2					
ANR	2908173	Condition	tokenno	615:12:17478:17484	2908098	0	True				
ANR	2908174	Identifier	tokenno		2908098	0					
ANR	2908175	CompoundStatement		15:21:293:293	2908098	1					
ANR	2908176	Label	case 0 :	616:6:17495:17501	2908098	0	True				
ANR	2908177	IfStatement	"if ( strcmp ( s1 , ""START_AD"" ) != 0 )"		2908098	1					
ANR	2908178	Condition	"strcmp ( s1 , ""START_AD"" ) != 0"	617:12:17515:17541	2908098	0	True				
ANR	2908179	EqualityExpression	"strcmp ( s1 , ""START_AD"" ) != 0"		2908098	0		!=			
ANR	2908180	CallExpression	"strcmp ( s1 , ""START_AD"" )"		2908098	0					
ANR	2908181	Callee	strcmp		2908098	0					
ANR	2908182	Identifier	strcmp		2908098	0					
ANR	2908183	ArgumentList	s1		2908098	1					
ANR	2908184	Argument	s1		2908098	0					
ANR	2908185	Identifier	s1		2908098	0					
ANR	2908186	Argument	"""START_AD"""		2908098	1					
ANR	2908187	PrimaryExpression	"""START_AD"""		2908098	0					
ANR	2908188	PrimaryExpression	0		2908098	1					
ANR	2908189	GotoStatement	goto end ;	618:10:17555:17563	2908098	1	True				
ANR	2908190	Identifier	end		2908098	0					
ANR	2908191	BreakStatement	break ;	620:8:17574:17579	2908098	2	True				
ANR	2908192	Label	case 1 :	622:6:17588:17594	2908098	3	True				
ANR	2908193	IfStatement	if ( s1 [ 0 ] == 'S' )		2908098	4					
ANR	2908194	Condition	s1 [ 0 ] == 'S'	624:12:17635:17646	2908098	0	True				
ANR	2908195	EqualityExpression	s1 [ 0 ] == 'S'		2908098	0		==			
ANR	2908196	ArrayIndexing	s1 [ 0 ]		2908098	0					
ANR	2908197	Identifier	s1		2908098	0					
ANR	2908198	PrimaryExpression	0		2908098	1					
ANR	2908199	PrimaryExpression	'S'		2908098	1					
ANR	2908200	ExpressionStatement	type = AD_STRING	625:10:17659:17675	2908098	1	True				
ANR	2908201	AssignmentExpression	type = AD_STRING		2908098	0		=			
ANR	2908202	Identifier	type		2908098	0					
ANR	2908203	Identifier	AD_STRING		2908098	1					
ANR	2908204	ElseStatement	else		2908098	0					
ANR	2908205	IfStatement	if ( s1 [ 0 ] == 'I' )		2908098	0					
ANR	2908206	Condition	s1 [ 0 ] == 'I'	626:17:17694:17705	2908098	0	True				
ANR	2908207	EqualityExpression	s1 [ 0 ] == 'I'		2908098	0		==			
ANR	2908208	ArrayIndexing	s1 [ 0 ]		2908098	0					
ANR	2908209	Identifier	s1		2908098	0					
ANR	2908210	PrimaryExpression	0		2908098	1					
ANR	2908211	PrimaryExpression	'I'		2908098	1					
ANR	2908212	ExpressionStatement	type = AD_INT	627:10:17718:17731	2908098	1	True				
ANR	2908213	AssignmentExpression	type = AD_INT		2908098	0		=			
ANR	2908214	Identifier	type		2908098	0					
ANR	2908215	Identifier	AD_INT		2908098	1					
ANR	2908216	ElseStatement	else		2908098	0					
ANR	2908217	IfStatement	if ( s1 [ 0 ] == 'D' )		2908098	0					
ANR	2908218	Condition	s1 [ 0 ] == 'D'	628:17:17750:17761	2908098	0	True				
ANR	2908219	EqualityExpression	s1 [ 0 ] == 'D'		2908098	0		==			
ANR	2908220	ArrayIndexing	s1 [ 0 ]		2908098	0					
ANR	2908221	Identifier	s1		2908098	0					
ANR	2908222	PrimaryExpression	0		2908098	1					
ANR	2908223	PrimaryExpression	'D'		2908098	1					
ANR	2908224	ExpressionStatement	type = AD_DOUBLE	629:10:17774:17790	2908098	1	True				
ANR	2908225	AssignmentExpression	type = AD_DOUBLE		2908098	0		=			
ANR	2908226	Identifier	type		2908098	0					
ANR	2908227	Identifier	AD_DOUBLE		2908098	1					
ANR	2908228	ElseStatement	else		2908098	0					
ANR	2908229	IfStatement	if ( s1 [ 0 ] == 'B' )		2908098	0					
ANR	2908230	Condition	s1 [ 0 ] == 'B'	630:17:17809:17820	2908098	0	True				
ANR	2908231	EqualityExpression	s1 [ 0 ] == 'B'		2908098	0		==			
ANR	2908232	ArrayIndexing	s1 [ 0 ]		2908098	0					
ANR	2908233	Identifier	s1		2908098	0					
ANR	2908234	PrimaryExpression	0		2908098	1					
ANR	2908235	PrimaryExpression	'B'		2908098	1					
ANR	2908236	ExpressionStatement	type = AD_BOOLEAN	631:10:17833:17850	2908098	1	True				
ANR	2908237	AssignmentExpression	type = AD_BOOLEAN		2908098	0		=			
ANR	2908238	Identifier	type		2908098	0					
ANR	2908239	Identifier	AD_BOOLEAN		2908098	1					
ANR	2908240	BreakStatement	break ;	633:8:17861:17866	2908098	5	True				
ANR	2908241	Label	case 2 :	635:6:17875:17881	2908098	6	True				
ANR	2908242	ExpressionStatement	* key = s1	636:8:17891:17900	2908098	7	True				
ANR	2908243	AssignmentExpression	* key = s1		2908098	0		=			
ANR	2908244	UnaryOperationExpression	* key		2908098	0					
ANR	2908245	UnaryOperator	*		2908098	0					
ANR	2908246	Identifier	key		2908098	1					
ANR	2908247	Identifier	s1		2908098	1					
ANR	2908248	BreakStatement	break ;	637:8:17910:17915	2908098	8	True				
ANR	2908249	Label	case 3 :	639:6:17924:17930	2908098	9	True				
ANR	2908250	ExpressionStatement	* value = s1	640:8:17940:17951	2908098	10	True				
ANR	2908251	AssignmentExpression	* value = s1		2908098	0		=			
ANR	2908252	UnaryOperationExpression	* value		2908098	0					
ANR	2908253	UnaryOperator	*		2908098	0					
ANR	2908254	Identifier	value		2908098	1					
ANR	2908255	Identifier	s1		2908098	1					
ANR	2908256	BreakStatement	break ;	641:8:17961:17966	2908098	11	True				
ANR	2908257	Label	case 4 :	643:6:17975:17981	2908098	12	True				
ANR	2908258	IfStatement	"if ( strcmp ( s1 , ""END_AD"" ) != 0 )"		2908098	13					
ANR	2908259	Condition	"strcmp ( s1 , ""END_AD"" ) != 0"	644:12:17995:18019	2908098	0	True				
ANR	2908260	EqualityExpression	"strcmp ( s1 , ""END_AD"" ) != 0"		2908098	0		!=			
ANR	2908261	CallExpression	"strcmp ( s1 , ""END_AD"" )"		2908098	0					
ANR	2908262	Callee	strcmp		2908098	0					
ANR	2908263	Identifier	strcmp		2908098	0					
ANR	2908264	ArgumentList	s1		2908098	1					
ANR	2908265	Argument	s1		2908098	0					
ANR	2908266	Identifier	s1		2908098	0					
ANR	2908267	Argument	"""END_AD"""		2908098	1					
ANR	2908268	PrimaryExpression	"""END_AD"""		2908098	0					
ANR	2908269	PrimaryExpression	0		2908098	1					
ANR	2908270	ExpressionStatement	type = AD_NULL	645:10:18032:18046	2908098	1	True				
ANR	2908271	AssignmentExpression	type = AD_NULL		2908098	0		=			
ANR	2908272	Identifier	type		2908098	0					
ANR	2908273	Identifier	AD_NULL		2908098	1					
ANR	2908274	BreakStatement	break ;	647:8:18057:18062	2908098	14	True				
ANR	2908275	IfStatement	if ( tokenno < 4 )		2908098	29					
ANR	2908276	Condition	tokenno < 4	652:6:18108:18118	2908098	0	True				
ANR	2908277	RelationalExpression	tokenno < 4		2908098	0		<			
ANR	2908278	Identifier	tokenno		2908098	0					
ANR	2908279	PrimaryExpression	4		2908098	1					
ANR	2908280	ExpressionStatement	type = AD_NULL	653:4:18125:18139	2908098	1	True				
ANR	2908281	AssignmentExpression	type = AD_NULL		2908098	0		=			
ANR	2908282	Identifier	type		2908098	0					
ANR	2908283	Identifier	AD_NULL		2908098	1					
ANR	2908284	Label	end :	655:0:18142:18145	2908098	30	True				
ANR	2908285	Identifier	end		2908098	0					
ANR	2908286	ReturnStatement	return type ;	656:2:18149:18160	2908098	31	True				
ANR	2908287	Identifier	type		2908098	0					
ANR	2908288	ReturnType	int		2908098	1					
ANR	2908289	Identifier	Pigeon :: getKeyValue		2908098	2					
ANR	2908290	ParameterList	"MyString line , MyString * key , MyString * value"		2908098	3					
ANR	2908291	Parameter	MyString line	601:24:17146:17158	2908098	0	True				
ANR	2908292	ParameterType	MyString		2908098	0					
ANR	2908293	Identifier	line		2908098	1					
ANR	2908294	Parameter	MyString * key	601:39:17161:17173	2908098	1	True				
ANR	2908295	ParameterType	MyString *		2908098	0					
ANR	2908296	Identifier	key		2908098	1					
ANR	2908297	Parameter	MyString * value	601:54:17176:17190	2908098	2	True				
ANR	2908298	ParameterType	MyString *		2908098	0					
ANR	2908299	Identifier	value		2908098	1					
ANR	2908300	CFGEntryNode	ENTRY		2908098		True				
ANR	2908301	CFGExitNode	EXIT		2908098		True				
ANR	2908302	Symbol	strcmp		2908098						
ANR	2908303	Symbol	AD_STRING		2908098						
ANR	2908304	Symbol	AD_BOOLEAN		2908098						
ANR	2908305	Symbol	line		2908098						
ANR	2908306	Symbol	AD_INT		2908098						
ANR	2908307	Symbol	* s1		2908098						
ANR	2908308	Symbol	AD_DOUBLE		2908098						
ANR	2908309	Symbol	* key		2908098						
ANR	2908310	Symbol	tokenno		2908098						
ANR	2908311	Symbol	type		2908098						
ANR	2908312	Symbol	strlen		2908098						
ANR	2908313	Symbol	* value		2908098						
ANR	2908314	Symbol	value		2908098						
ANR	2908315	Symbol	AD_NULL		2908098						
ANR	2908316	Symbol	key		2908098						
ANR	2908317	Symbol	s1		2908098						
