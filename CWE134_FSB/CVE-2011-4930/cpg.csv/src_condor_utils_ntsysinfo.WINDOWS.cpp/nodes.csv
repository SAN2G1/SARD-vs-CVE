command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4828488	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_ntsysinfo.WINDOWS.cpp								
ANR	4828489	DeclStmt									
ANR	4828490	Decl							int	int	CSysinfo :: reference_count
ANR	4828491	DeclStmt									
ANR	4828492	Decl							HINSTANCE	HINSTANCE	CSysinfo :: hNtDll
ANR	4828493	DeclStmt									
ANR	4828494	Decl							HINSTANCE	HINSTANCE	CSysinfo :: hKernel32Dll
ANR	4828495	DeclStmt									
ANR	4828496	Decl							CSysinfo :: FPNtQueryInformationProcess	CSysinfo :: FPNtQueryInformationProcess	CSysinfo :: NtQueryInformationProcess
ANR	4828497	DeclStmt									
ANR	4828498	Decl							CSysinfo :: FPNtQuerySystemInformation	CSysinfo :: FPNtQuerySystemInformation	CSysinfo :: NtQuerySystemInformation
ANR	4828499	DeclStmt									
ANR	4828500	Decl							CSysinfo :: FPNtOpenThread	CSysinfo :: FPNtOpenThread	CSysinfo :: NtOpenThread
ANR	4828501	DeclStmt									
ANR	4828502	Decl							CSysinfo :: FPNtClose	CSysinfo :: FPNtClose	CSysinfo :: NtClose
ANR	4828503	DeclStmt									
ANR	4828504	Decl							CSysinfo :: FPCreateToolhelp32Snapshot	CSysinfo :: FPCreateToolhelp32Snapshot	CSysinfo :: CreateToolhelp32Snapshot
ANR	4828505	DeclStmt									
ANR	4828506	Decl							CSysinfo :: FPThread32First	CSysinfo :: FPThread32First	CSysinfo :: Thread32First
ANR	4828507	DeclStmt									
ANR	4828508	Decl							CSysinfo :: FPThread32Next	CSysinfo :: FPThread32Next	CSysinfo :: Thread32Next
ANR	4828509	DeclStmt									
ANR	4828510	Decl							bool	bool	CSysinfo :: IsWin2k
ANR	4828511	DeclStmt									
ANR	4828512	Decl							DWORD	DWORD *	CSysinfo :: memptr
ANR	4828513	DeclStmt									
ANR	4828514	Decl							DWORD	DWORD	CSysinfo :: memptr_size
ANR	4828515	Function	CSysinfo :: CSysinfo	52:0:2167:4236							
ANR	4828516	FunctionDef	CSysinfo :: CSysinfo ()		4828515	0					
ANR	4828517	CompoundStatement		53:0:2188:4236	4828515	0					
ANR	4828518	IfStatement	if ( reference_count == 0 )		4828515	0					
ANR	4828519	Condition	reference_count == 0	54:6:2196:2215	4828515	0	True				
ANR	4828520	EqualityExpression	reference_count == 0		4828515	0		==			
ANR	4828521	Identifier	reference_count		4828515	0					
ANR	4828522	PrimaryExpression	0		4828515	1					
ANR	4828523	CompoundStatement		38:2:1022:1040	4828515	1					
ANR	4828524	ExpressionStatement	"hNtDll = LoadLibrary ( ""ntdll.dll"" )"	56:2:2224:2257	4828515	0	True				
ANR	4828525	AssignmentExpression	"hNtDll = LoadLibrary ( ""ntdll.dll"" )"		4828515	0		=			
ANR	4828526	Identifier	hNtDll		4828515	0					
ANR	4828527	CallExpression	"LoadLibrary ( ""ntdll.dll"" )"		4828515	1					
ANR	4828528	Callee	LoadLibrary		4828515	0					
ANR	4828529	Identifier	LoadLibrary		4828515	0					
ANR	4828530	ArgumentList	"""ntdll.dll"""		4828515	1					
ANR	4828531	Argument	"""ntdll.dll"""		4828515	0					
ANR	4828532	PrimaryExpression	"""ntdll.dll"""		4828515	0					
ANR	4828533	IfStatement	if ( ! hNtDll )		4828515	1					
ANR	4828534	Condition	! hNtDll	58:7:2267:2273	4828515	0	True				
ANR	4828535	UnaryOperationExpression	! hNtDll		4828515	0					
ANR	4828536	UnaryOperator	!		4828515	0					
ANR	4828537	Identifier	hNtDll		4828515	1					
ANR	4828538	CompoundStatement		6:17:88:88	4828515	1					
ANR	4828539	ExpressionStatement	"EXCEPT ( ""cannot load ntdll.dll library"" )"	59:3:2282:2321	4828515	0	True				
ANR	4828540	CallExpression	"EXCEPT ( ""cannot load ntdll.dll library"" )"		4828515	0					
ANR	4828541	Callee	EXCEPT		4828515	0					
ANR	4828542	Identifier	EXCEPT		4828515	0					
ANR	4828543	ArgumentList	"""cannot load ntdll.dll library"""		4828515	1					
ANR	4828544	Argument	"""cannot load ntdll.dll library"""		4828515	0					
ANR	4828545	PrimaryExpression	"""cannot load ntdll.dll library"""		4828515	0					
ANR	4828546	ExpressionStatement	"NtQueryInformationProcess = ( FPNtQueryInformationProcess ) GetProcAddress ( hNtDll , ""NtQueryInformationProcess"" )"	62:2:2330:2442	4828515	2	True				
ANR	4828547	AssignmentExpression	"NtQueryInformationProcess = ( FPNtQueryInformationProcess ) GetProcAddress ( hNtDll , ""NtQueryInformationProcess"" )"		4828515	0		=			
ANR	4828548	Identifier	NtQueryInformationProcess		4828515	0					
ANR	4828549	CastExpression	"( FPNtQueryInformationProcess ) GetProcAddress ( hNtDll , ""NtQueryInformationProcess"" )"		4828515	1					
ANR	4828550	CastTarget	FPNtQueryInformationProcess		4828515	0					
ANR	4828551	CallExpression	"GetProcAddress ( hNtDll , ""NtQueryInformationProcess"" )"		4828515	1					
ANR	4828552	Callee	GetProcAddress		4828515	0					
ANR	4828553	Identifier	GetProcAddress		4828515	0					
ANR	4828554	ArgumentList	hNtDll		4828515	1					
ANR	4828555	Argument	hNtDll		4828515	0					
ANR	4828556	Identifier	hNtDll		4828515	0					
ANR	4828557	Argument	"""NtQueryInformationProcess"""		4828515	1					
ANR	4828558	PrimaryExpression	"""NtQueryInformationProcess"""		4828515	0					
ANR	4828559	IfStatement	if ( ! NtQueryInformationProcess )		4828515	3					
ANR	4828560	Condition	! NtQueryInformationProcess	64:7:2451:2476	4828515	0	True				
ANR	4828561	UnaryOperationExpression	! NtQueryInformationProcess		4828515	0					
ANR	4828562	UnaryOperator	!		4828515	0					
ANR	4828563	Identifier	NtQueryInformationProcess		4828515	1					
ANR	4828564	CompoundStatement		12:36:291:291	4828515	1					
ANR	4828565	ExpressionStatement	"EXCEPT ( ""cannot get address for NtQueryInformationProcess"" )"	65:3:2485:2543	4828515	0	True				
ANR	4828566	CallExpression	"EXCEPT ( ""cannot get address for NtQueryInformationProcess"" )"		4828515	0					
ANR	4828567	Callee	EXCEPT		4828515	0					
ANR	4828568	Identifier	EXCEPT		4828515	0					
ANR	4828569	ArgumentList	"""cannot get address for NtQueryInformationProcess"""		4828515	1					
ANR	4828570	Argument	"""cannot get address for NtQueryInformationProcess"""		4828515	0					
ANR	4828571	PrimaryExpression	"""cannot get address for NtQueryInformationProcess"""		4828515	0					
ANR	4828572	ExpressionStatement	"NtQuerySystemInformation = ( FPNtQuerySystemInformation ) GetProcAddress ( hNtDll , ""NtQuerySystemInformation"" )"	67:2:2551:2660	4828515	4	True				
ANR	4828573	AssignmentExpression	"NtQuerySystemInformation = ( FPNtQuerySystemInformation ) GetProcAddress ( hNtDll , ""NtQuerySystemInformation"" )"		4828515	0		=			
ANR	4828574	Identifier	NtQuerySystemInformation		4828515	0					
ANR	4828575	CastExpression	"( FPNtQuerySystemInformation ) GetProcAddress ( hNtDll , ""NtQuerySystemInformation"" )"		4828515	1					
ANR	4828576	CastTarget	FPNtQuerySystemInformation		4828515	0					
ANR	4828577	CallExpression	"GetProcAddress ( hNtDll , ""NtQuerySystemInformation"" )"		4828515	1					
ANR	4828578	Callee	GetProcAddress		4828515	0					
ANR	4828579	Identifier	GetProcAddress		4828515	0					
ANR	4828580	ArgumentList	hNtDll		4828515	1					
ANR	4828581	Argument	hNtDll		4828515	0					
ANR	4828582	Identifier	hNtDll		4828515	0					
ANR	4828583	Argument	"""NtQuerySystemInformation"""		4828515	1					
ANR	4828584	PrimaryExpression	"""NtQuerySystemInformation"""		4828515	0					
ANR	4828585	IfStatement	if ( ! NtQuerySystemInformation )		4828515	5					
ANR	4828586	Condition	! NtQuerySystemInformation	69:7:2669:2693	4828515	0	True				
ANR	4828587	UnaryOperationExpression	! NtQuerySystemInformation		4828515	0					
ANR	4828588	UnaryOperator	!		4828515	0					
ANR	4828589	Identifier	NtQuerySystemInformation		4828515	1					
ANR	4828590	CompoundStatement		17:35:508:508	4828515	1					
ANR	4828591	ExpressionStatement	"EXCEPT ( ""cannot get address for NtQuerySystemInformation"" )"	70:3:2702:2759	4828515	0	True				
ANR	4828592	CallExpression	"EXCEPT ( ""cannot get address for NtQuerySystemInformation"" )"		4828515	0					
ANR	4828593	Callee	EXCEPT		4828515	0					
ANR	4828594	Identifier	EXCEPT		4828515	0					
ANR	4828595	ArgumentList	"""cannot get address for NtQuerySystemInformation"""		4828515	1					
ANR	4828596	Argument	"""cannot get address for NtQuerySystemInformation"""		4828515	0					
ANR	4828597	PrimaryExpression	"""cannot get address for NtQuerySystemInformation"""		4828515	0					
ANR	4828598	ExpressionStatement	"NtOpenThread = ( FPNtOpenThread ) GetProcAddress ( hNtDll , ""NtOpenThread"" )"	72:2:2767:2840	4828515	6	True				
ANR	4828599	AssignmentExpression	"NtOpenThread = ( FPNtOpenThread ) GetProcAddress ( hNtDll , ""NtOpenThread"" )"		4828515	0		=			
ANR	4828600	Identifier	NtOpenThread		4828515	0					
ANR	4828601	CastExpression	"( FPNtOpenThread ) GetProcAddress ( hNtDll , ""NtOpenThread"" )"		4828515	1					
ANR	4828602	CastTarget	FPNtOpenThread		4828515	0					
ANR	4828603	CallExpression	"GetProcAddress ( hNtDll , ""NtOpenThread"" )"		4828515	1					
ANR	4828604	Callee	GetProcAddress		4828515	0					
ANR	4828605	Identifier	GetProcAddress		4828515	0					
ANR	4828606	ArgumentList	hNtDll		4828515	1					
ANR	4828607	Argument	hNtDll		4828515	0					
ANR	4828608	Identifier	hNtDll		4828515	0					
ANR	4828609	Argument	"""NtOpenThread"""		4828515	1					
ANR	4828610	PrimaryExpression	"""NtOpenThread"""		4828515	0					
ANR	4828611	IfStatement	if ( ! NtOpenThread )		4828515	7					
ANR	4828612	Condition	! NtOpenThread	74:7:2849:2861	4828515	0	True				
ANR	4828613	UnaryOperationExpression	! NtOpenThread		4828515	0					
ANR	4828614	UnaryOperator	!		4828515	0					
ANR	4828615	Identifier	NtOpenThread		4828515	1					
ANR	4828616	CompoundStatement		22:23:676:676	4828515	1					
ANR	4828617	ExpressionStatement	"EXCEPT ( ""cannot get address for NtOpenThread"" )"	75:3:2870:2915	4828515	0	True				
ANR	4828618	CallExpression	"EXCEPT ( ""cannot get address for NtOpenThread"" )"		4828515	0					
ANR	4828619	Callee	EXCEPT		4828515	0					
ANR	4828620	Identifier	EXCEPT		4828515	0					
ANR	4828621	ArgumentList	"""cannot get address for NtOpenThread"""		4828515	1					
ANR	4828622	Argument	"""cannot get address for NtOpenThread"""		4828515	0					
ANR	4828623	PrimaryExpression	"""cannot get address for NtOpenThread"""		4828515	0					
ANR	4828624	ExpressionStatement	"NtClose = ( FPNtClose ) GetProcAddress ( hNtDll , ""NtClose"" )"	77:2:2923:2981	4828515	8	True				
ANR	4828625	AssignmentExpression	"NtClose = ( FPNtClose ) GetProcAddress ( hNtDll , ""NtClose"" )"		4828515	0		=			
ANR	4828626	Identifier	NtClose		4828515	0					
ANR	4828627	CastExpression	"( FPNtClose ) GetProcAddress ( hNtDll , ""NtClose"" )"		4828515	1					
ANR	4828628	CastTarget	FPNtClose		4828515	0					
ANR	4828629	CallExpression	"GetProcAddress ( hNtDll , ""NtClose"" )"		4828515	1					
ANR	4828630	Callee	GetProcAddress		4828515	0					
ANR	4828631	Identifier	GetProcAddress		4828515	0					
ANR	4828632	ArgumentList	hNtDll		4828515	1					
ANR	4828633	Argument	hNtDll		4828515	0					
ANR	4828634	Identifier	hNtDll		4828515	0					
ANR	4828635	Argument	"""NtClose"""		4828515	1					
ANR	4828636	PrimaryExpression	"""NtClose"""		4828515	0					
ANR	4828637	IfStatement	if ( ! NtClose )		4828515	9					
ANR	4828638	Condition	! NtClose	79:7:2990:2997	4828515	0	True				
ANR	4828639	UnaryOperationExpression	! NtClose		4828515	0					
ANR	4828640	UnaryOperator	!		4828515	0					
ANR	4828641	Identifier	NtClose		4828515	1					
ANR	4828642	CompoundStatement		27:18:812:812	4828515	1					
ANR	4828643	ExpressionStatement	"EXCEPT ( ""cannot get address for NtClose"" )"	80:3:3006:3046	4828515	0	True				
ANR	4828644	CallExpression	"EXCEPT ( ""cannot get address for NtClose"" )"		4828515	0					
ANR	4828645	Callee	EXCEPT		4828515	0					
ANR	4828646	Identifier	EXCEPT		4828515	0					
ANR	4828647	ArgumentList	"""cannot get address for NtClose"""		4828515	1					
ANR	4828648	Argument	"""cannot get address for NtClose"""		4828515	0					
ANR	4828649	PrimaryExpression	"""cannot get address for NtClose"""		4828515	0					
ANR	4828650	ExpressionStatement	"memptr = ( DWORD * ) VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"	83:2:3055:3152	4828515	10	True				
ANR	4828651	AssignmentExpression	"memptr = ( DWORD * ) VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"		4828515	0		=			
ANR	4828652	Identifier	memptr		4828515	0					
ANR	4828653	CastExpression	"( DWORD * ) VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"		4828515	1					
ANR	4828654	CastTarget	DWORD *		4828515	0					
ANR	4828655	CallExpression	"VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"		4828515	1					
ANR	4828656	Callee	VirtualAlloc		4828515	0					
ANR	4828657	Identifier	VirtualAlloc		4828515	0					
ANR	4828658	ArgumentList	NULL		4828515	1					
ANR	4828659	Argument	NULL		4828515	0					
ANR	4828660	Identifier	NULL		4828515	0					
ANR	4828661	Argument	memptr_size		4828515	1					
ANR	4828662	Identifier	memptr_size		4828515	0					
ANR	4828663	Argument	MEM_COMMIT		4828515	2					
ANR	4828664	Identifier	MEM_COMMIT		4828515	0					
ANR	4828665	Argument	PAGE_READWRITE		4828515	3					
ANR	4828666	Identifier	PAGE_READWRITE		4828515	0					
ANR	4828667	IdentifierDeclStatement	OSVERSIONINFO info ;	90:2:3211:3229	4828515	11	True				
ANR	4828668	IdentifierDecl	info		4828515	0					
ANR	4828669	IdentifierDeclType	OSVERSIONINFO		4828515	0					
ANR	4828670	Identifier	info		4828515	1					
ANR	4828671	ExpressionStatement	info . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )	91:2:3233:3281	4828515	12	True				
ANR	4828672	AssignmentExpression	info . dwOSVersionInfoSize = sizeof ( OSVERSIONINFO )		4828515	0		=			
ANR	4828673	MemberAccess	info . dwOSVersionInfoSize		4828515	0					
ANR	4828674	Identifier	info		4828515	0					
ANR	4828675	Identifier	dwOSVersionInfoSize		4828515	1					
ANR	4828676	SizeofExpression	sizeof ( OSVERSIONINFO )		4828515	1					
ANR	4828677	Sizeof	sizeof		4828515	0					
ANR	4828678	SizeofOperand	OSVERSIONINFO		4828515	1					
ANR	4828679	IfStatement	if ( GetVersionEx ( & info ) > 0 )		4828515	13					
ANR	4828680	Condition	GetVersionEx ( & info ) > 0	92:6:3289:3311	4828515	0	True				
ANR	4828681	RelationalExpression	GetVersionEx ( & info ) > 0		4828515	0		>			
ANR	4828682	CallExpression	GetVersionEx ( & info )		4828515	0					
ANR	4828683	Callee	GetVersionEx		4828515	0					
ANR	4828684	Identifier	GetVersionEx		4828515	0					
ANR	4828685	ArgumentList	& info		4828515	1					
ANR	4828686	Argument	& info		4828515	0					
ANR	4828687	UnaryOperationExpression	& info		4828515	0					
ANR	4828688	UnaryOperator	&		4828515	0					
ANR	4828689	Identifier	info		4828515	1					
ANR	4828690	PrimaryExpression	0		4828515	1					
ANR	4828691	CompoundStatement		40:31:1125:1125	4828515	1					
ANR	4828692	IfStatement	if ( info . dwPlatformId == VER_PLATFORM_WIN32_NT && info . dwMajorVersion >= 5 )		4828515	0					
ANR	4828693	Condition	info . dwPlatformId == VER_PLATFORM_WIN32_NT && info . dwMajorVersion >= 5	93:8:3324:3400	4828515	0	True				
ANR	4828694	AndExpression	info . dwPlatformId == VER_PLATFORM_WIN32_NT && info . dwMajorVersion >= 5		4828515	0		&&			
ANR	4828695	EqualityExpression	info . dwPlatformId == VER_PLATFORM_WIN32_NT		4828515	0		==			
ANR	4828696	MemberAccess	info . dwPlatformId		4828515	0					
ANR	4828697	Identifier	info		4828515	0					
ANR	4828698	Identifier	dwPlatformId		4828515	1					
ANR	4828699	Identifier	VER_PLATFORM_WIN32_NT		4828515	1					
ANR	4828700	RelationalExpression	info . dwMajorVersion >= 5		4828515	1		>=			
ANR	4828701	MemberAccess	info . dwMajorVersion		4828515	0					
ANR	4828702	Identifier	info		4828515	0					
ANR	4828703	Identifier	dwMajorVersion		4828515	1					
ANR	4828704	PrimaryExpression	5		4828515	1					
ANR	4828705	CompoundStatement		43:3:1219:1219	4828515	1					
ANR	4828706	ExpressionStatement	IsWin2k = true	96:4:3414:3428	4828515	0	True				
ANR	4828707	AssignmentExpression	IsWin2k = true		4828515	0		=			
ANR	4828708	Identifier	IsWin2k		4828515	0					
ANR	4828709	Identifier	true		4828515	1					
ANR	4828710	IfStatement	if ( IsWin2k )		4828515	14					
ANR	4828711	Condition	IsWin2k	101:7:3503:3509	4828515	0	True				
ANR	4828712	Identifier	IsWin2k		4828515	0					
ANR	4828713	CompoundStatement		49:17:1324:1324	4828515	1					
ANR	4828714	ExpressionStatement	"hKernel32Dll = LoadLibrary ( ""kernel32.dll"" )"	102:3:3518:3560	4828515	0	True				
ANR	4828715	AssignmentExpression	"hKernel32Dll = LoadLibrary ( ""kernel32.dll"" )"		4828515	0		=			
ANR	4828716	Identifier	hKernel32Dll		4828515	0					
ANR	4828717	CallExpression	"LoadLibrary ( ""kernel32.dll"" )"		4828515	1					
ANR	4828718	Callee	LoadLibrary		4828515	0					
ANR	4828719	Identifier	LoadLibrary		4828515	0					
ANR	4828720	ArgumentList	"""kernel32.dll"""		4828515	1					
ANR	4828721	Argument	"""kernel32.dll"""		4828515	0					
ANR	4828722	PrimaryExpression	"""kernel32.dll"""		4828515	0					
ANR	4828723	IfStatement	if ( ! hKernel32Dll )		4828515	1					
ANR	4828724	Condition	! hKernel32Dll	103:8:3570:3582	4828515	0	True				
ANR	4828725	UnaryOperationExpression	! hKernel32Dll		4828515	0					
ANR	4828726	UnaryOperator	!		4828515	0					
ANR	4828727	Identifier	hKernel32Dll		4828515	1					
ANR	4828728	CompoundStatement		51:24:1397:1397	4828515	1					
ANR	4828729	ExpressionStatement	"EXCEPT ( ""cannot load kernel32.dll library"" )"	104:4:3592:3634	4828515	0	True				
ANR	4828730	CallExpression	"EXCEPT ( ""cannot load kernel32.dll library"" )"		4828515	0					
ANR	4828731	Callee	EXCEPT		4828515	0					
ANR	4828732	Identifier	EXCEPT		4828515	0					
ANR	4828733	ArgumentList	"""cannot load kernel32.dll library"""		4828515	1					
ANR	4828734	Argument	"""cannot load kernel32.dll library"""		4828515	0					
ANR	4828735	PrimaryExpression	"""cannot load kernel32.dll library"""		4828515	0					
ANR	4828736	ExpressionStatement	"CreateToolhelp32Snapshot = ( FPCreateToolhelp32Snapshot ) GetProcAddress ( hKernel32Dll , ""CreateToolhelp32Snapshot"" )"	107:3:3645:3761	4828515	2	True				
ANR	4828737	AssignmentExpression	"CreateToolhelp32Snapshot = ( FPCreateToolhelp32Snapshot ) GetProcAddress ( hKernel32Dll , ""CreateToolhelp32Snapshot"" )"		4828515	0		=			
ANR	4828738	Identifier	CreateToolhelp32Snapshot		4828515	0					
ANR	4828739	CastExpression	"( FPCreateToolhelp32Snapshot ) GetProcAddress ( hKernel32Dll , ""CreateToolhelp32Snapshot"" )"		4828515	1					
ANR	4828740	CastTarget	FPCreateToolhelp32Snapshot		4828515	0					
ANR	4828741	CallExpression	"GetProcAddress ( hKernel32Dll , ""CreateToolhelp32Snapshot"" )"		4828515	1					
ANR	4828742	Callee	GetProcAddress		4828515	0					
ANR	4828743	Identifier	GetProcAddress		4828515	0					
ANR	4828744	ArgumentList	hKernel32Dll		4828515	1					
ANR	4828745	Argument	hKernel32Dll		4828515	0					
ANR	4828746	Identifier	hKernel32Dll		4828515	0					
ANR	4828747	Argument	"""CreateToolhelp32Snapshot"""		4828515	1					
ANR	4828748	PrimaryExpression	"""CreateToolhelp32Snapshot"""		4828515	0					
ANR	4828749	IfStatement	if ( ! CreateToolhelp32Snapshot )		4828515	3					
ANR	4828750	Condition	! CreateToolhelp32Snapshot	109:8:3771:3795	4828515	0	True				
ANR	4828751	UnaryOperationExpression	! CreateToolhelp32Snapshot		4828515	0					
ANR	4828752	UnaryOperator	!		4828515	0					
ANR	4828753	Identifier	CreateToolhelp32Snapshot		4828515	1					
ANR	4828754	CompoundStatement		57:36:1610:1610	4828515	1					
ANR	4828755	ExpressionStatement	"EXCEPT ( ""cannot get address for CreateToolhelp32Snapshot"" )"	110:4:3805:3862	4828515	0	True				
ANR	4828756	CallExpression	"EXCEPT ( ""cannot get address for CreateToolhelp32Snapshot"" )"		4828515	0					
ANR	4828757	Callee	EXCEPT		4828515	0					
ANR	4828758	Identifier	EXCEPT		4828515	0					
ANR	4828759	ArgumentList	"""cannot get address for CreateToolhelp32Snapshot"""		4828515	1					
ANR	4828760	Argument	"""cannot get address for CreateToolhelp32Snapshot"""		4828515	0					
ANR	4828761	PrimaryExpression	"""cannot get address for CreateToolhelp32Snapshot"""		4828515	0					
ANR	4828762	ExpressionStatement	"Thread32First = ( FPThread32First ) GetProcAddress ( hKernel32Dll , ""Thread32First"" )"	112:3:3872:3955	4828515	4	True				
ANR	4828763	AssignmentExpression	"Thread32First = ( FPThread32First ) GetProcAddress ( hKernel32Dll , ""Thread32First"" )"		4828515	0		=			
ANR	4828764	Identifier	Thread32First		4828515	0					
ANR	4828765	CastExpression	"( FPThread32First ) GetProcAddress ( hKernel32Dll , ""Thread32First"" )"		4828515	1					
ANR	4828766	CastTarget	FPThread32First		4828515	0					
ANR	4828767	CallExpression	"GetProcAddress ( hKernel32Dll , ""Thread32First"" )"		4828515	1					
ANR	4828768	Callee	GetProcAddress		4828515	0					
ANR	4828769	Identifier	GetProcAddress		4828515	0					
ANR	4828770	ArgumentList	hKernel32Dll		4828515	1					
ANR	4828771	Argument	hKernel32Dll		4828515	0					
ANR	4828772	Identifier	hKernel32Dll		4828515	0					
ANR	4828773	Argument	"""Thread32First"""		4828515	1					
ANR	4828774	PrimaryExpression	"""Thread32First"""		4828515	0					
ANR	4828775	IfStatement	if ( ! Thread32First )		4828515	5					
ANR	4828776	Condition	! Thread32First	114:8:3965:3978	4828515	0	True				
ANR	4828777	UnaryOperationExpression	! Thread32First		4828515	0					
ANR	4828778	UnaryOperator	!		4828515	0					
ANR	4828779	Identifier	Thread32First		4828515	1					
ANR	4828780	CompoundStatement		62:25:1793:1793	4828515	1					
ANR	4828781	ExpressionStatement	"EXCEPT ( ""cannot get address for Thread32First"" )"	115:4:3988:4034	4828515	0	True				
ANR	4828782	CallExpression	"EXCEPT ( ""cannot get address for Thread32First"" )"		4828515	0					
ANR	4828783	Callee	EXCEPT		4828515	0					
ANR	4828784	Identifier	EXCEPT		4828515	0					
ANR	4828785	ArgumentList	"""cannot get address for Thread32First"""		4828515	1					
ANR	4828786	Argument	"""cannot get address for Thread32First"""		4828515	0					
ANR	4828787	PrimaryExpression	"""cannot get address for Thread32First"""		4828515	0					
ANR	4828788	ExpressionStatement	"Thread32Next = ( FPThread32Next ) GetProcAddress ( hKernel32Dll , ""Thread32Next"" )"	117:3:4044:4124	4828515	6	True				
ANR	4828789	AssignmentExpression	"Thread32Next = ( FPThread32Next ) GetProcAddress ( hKernel32Dll , ""Thread32Next"" )"		4828515	0		=			
ANR	4828790	Identifier	Thread32Next		4828515	0					
ANR	4828791	CastExpression	"( FPThread32Next ) GetProcAddress ( hKernel32Dll , ""Thread32Next"" )"		4828515	1					
ANR	4828792	CastTarget	FPThread32Next		4828515	0					
ANR	4828793	CallExpression	"GetProcAddress ( hKernel32Dll , ""Thread32Next"" )"		4828515	1					
ANR	4828794	Callee	GetProcAddress		4828515	0					
ANR	4828795	Identifier	GetProcAddress		4828515	0					
ANR	4828796	ArgumentList	hKernel32Dll		4828515	1					
ANR	4828797	Argument	hKernel32Dll		4828515	0					
ANR	4828798	Identifier	hKernel32Dll		4828515	0					
ANR	4828799	Argument	"""Thread32Next"""		4828515	1					
ANR	4828800	PrimaryExpression	"""Thread32Next"""		4828515	0					
ANR	4828801	IfStatement	if ( ! Thread32Next )		4828515	7					
ANR	4828802	Condition	! Thread32Next	119:8:4134:4146	4828515	0	True				
ANR	4828803	UnaryOperationExpression	! Thread32Next		4828515	0					
ANR	4828804	UnaryOperator	!		4828515	0					
ANR	4828805	Identifier	Thread32Next		4828515	1					
ANR	4828806	CompoundStatement		67:24:1961:1961	4828515	1					
ANR	4828807	ExpressionStatement	"EXCEPT ( ""cannot get address for Thread32Next"" )"	120:4:4156:4201	4828515	0	True				
ANR	4828808	CallExpression	"EXCEPT ( ""cannot get address for Thread32Next"" )"		4828515	0					
ANR	4828809	Callee	EXCEPT		4828515	0					
ANR	4828810	Identifier	EXCEPT		4828515	0					
ANR	4828811	ArgumentList	"""cannot get address for Thread32Next"""		4828515	1					
ANR	4828812	Argument	"""cannot get address for Thread32Next"""		4828515	0					
ANR	4828813	PrimaryExpression	"""cannot get address for Thread32Next"""		4828515	0					
ANR	4828814	ExpressionStatement	reference_count ++	125:1:4217:4234	4828515	1	True				
ANR	4828815	PostIncDecOperationExpression	reference_count ++		4828515	0					
ANR	4828816	Identifier	reference_count		4828515	0					
ANR	4828817	IncDec	++		4828515	1					
ANR	4828818	Identifier	CSysinfo :: CSysinfo		4828515	1					
ANR	4828819	ParameterList			4828515	2					
ANR	4828820	CFGEntryNode	ENTRY		4828515		True				
ANR	4828821	CFGExitNode	EXIT		4828515		True				
ANR	4828822	Symbol	MEM_COMMIT		4828515						
ANR	4828823	Symbol	info . dwMajorVersion		4828515						
ANR	4828824	Symbol	hKernel32Dll		4828515						
ANR	4828825	Symbol	Thread32Next		4828515						
ANR	4828826	Symbol	NtClose		4828515						
ANR	4828827	Symbol	info . dwOSVersionInfoSize		4828515						
ANR	4828828	Symbol	memptr_size		4828515						
ANR	4828829	Symbol	hNtDll		4828515						
ANR	4828830	Symbol	GetVersionEx		4828515						
ANR	4828831	Symbol	NtQueryInformationProcess		4828515						
ANR	4828832	Symbol	VER_PLATFORM_WIN32_NT		4828515						
ANR	4828833	Symbol	LoadLibrary		4828515						
ANR	4828834	Symbol	GetProcAddress		4828515						
ANR	4828835	Symbol	NtQuerySystemInformation		4828515						
ANR	4828836	Symbol	NtOpenThread		4828515						
ANR	4828837	Symbol	info		4828515						
ANR	4828838	Symbol	CreateToolhelp32Snapshot		4828515						
ANR	4828839	Symbol	NULL		4828515						
ANR	4828840	Symbol	VirtualAlloc		4828515						
ANR	4828841	Symbol	& info		4828515						
ANR	4828842	Symbol	PAGE_READWRITE		4828515						
ANR	4828843	Symbol	info . dwPlatformId		4828515						
ANR	4828844	Symbol	IsWin2k		4828515						
ANR	4828845	Symbol	true		4828515						
ANR	4828846	Symbol	memptr		4828515						
ANR	4828847	Symbol	reference_count		4828515						
ANR	4828848	Symbol	Thread32First		4828515						
ANR	4828849	Function	CSysinfo :: ~CSysinfo	128:0:4239:4421							
ANR	4828850	FunctionDef	CSysinfo :: ~CSysinfo ()		4828849	0					
ANR	4828851	CompoundStatement		129:0:4261:4421	4828849	0					
ANR	4828852	ExpressionStatement	reference_count --	130:1:4264:4281	4828849	0	True				
ANR	4828853	PostIncDecOperationExpression	reference_count --		4828849	0					
ANR	4828854	Identifier	reference_count		4828849	0					
ANR	4828855	IncDec	--		4828849	1					
ANR	4828856	IfStatement	if ( reference_count == 0 )		4828849	1					
ANR	4828857	Condition	reference_count == 0	131:6:4289:4308	4828849	0	True				
ANR	4828858	EqualityExpression	reference_count == 0		4828849	0		==			
ANR	4828859	Identifier	reference_count		4828849	0					
ANR	4828860	PrimaryExpression	0		4828849	1					
ANR	4828861	CompoundStatement		3:29:50:50	4828849	1					
ANR	4828862	ExpressionStatement	FreeLibrary ( hNtDll )	132:2:4316:4335	4828849	0	True				
ANR	4828863	CallExpression	FreeLibrary ( hNtDll )		4828849	0					
ANR	4828864	Callee	FreeLibrary		4828849	0					
ANR	4828865	Identifier	FreeLibrary		4828849	0					
ANR	4828866	ArgumentList	hNtDll		4828849	1					
ANR	4828867	Argument	hNtDll		4828849	0					
ANR	4828868	Identifier	hNtDll		4828849	0					
ANR	4828869	IfStatement	if ( memptr )		4828849	1					
ANR	4828870	Condition	memptr	133:7:4344:4349	4828849	0	True				
ANR	4828871	Identifier	memptr		4828849	0					
ANR	4828872	CompoundStatement		5:16:91:91	4828849	1					
ANR	4828873	ExpressionStatement	"VirtualFree ( memptr , 0 , MEM_RELEASE )"	134:3:4358:4394	4828849	0	True				
ANR	4828874	CallExpression	"VirtualFree ( memptr , 0 , MEM_RELEASE )"		4828849	0					
ANR	4828875	Callee	VirtualFree		4828849	0					
ANR	4828876	Identifier	VirtualFree		4828849	0					
ANR	4828877	ArgumentList	memptr		4828849	1					
ANR	4828878	Argument	memptr		4828849	0					
ANR	4828879	Identifier	memptr		4828849	0					
ANR	4828880	Argument	0		4828849	1					
ANR	4828881	PrimaryExpression	0		4828849	0					
ANR	4828882	Argument	MEM_RELEASE		4828849	2					
ANR	4828883	Identifier	MEM_RELEASE		4828849	0					
ANR	4828884	ExpressionStatement	memptr = NULL	135:3:4399:4412	4828849	1	True				
ANR	4828885	AssignmentExpression	memptr = NULL		4828849	0		=			
ANR	4828886	Identifier	memptr		4828849	0					
ANR	4828887	Identifier	NULL		4828849	1					
ANR	4828888	Identifier	CSysinfo :: ~CSysinfo		4828849	1					
ANR	4828889	ParameterList			4828849	2					
ANR	4828890	CFGEntryNode	ENTRY		4828849		True				
ANR	4828891	CFGExitNode	EXIT		4828849		True				
ANR	4828892	Symbol	NULL		4828849						
ANR	4828893	Symbol	memptr		4828849						
ANR	4828894	Symbol	MEM_RELEASE		4828849						
ANR	4828895	Symbol	reference_count		4828849						
ANR	4828896	Symbol	hNtDll		4828849						
ANR	4828897	Function	CSysinfo :: GetPIDs	140:0:4424:5713							
ANR	4828898	FunctionDef	CSysinfo :: GetPIDs (ExtArray < pid_t > & dest)		4828897	0					
ANR	4828899	CompoundStatement		141:0:4471:5713	4828897	0					
ANR	4828900	IdentifierDeclStatement	int s = 0 ;	144:1:4552:4559	4828897	0	True				
ANR	4828901	IdentifierDecl	s = 0		4828897	0					
ANR	4828902	IdentifierDeclType	int		4828897	0					
ANR	4828903	Identifier	s		4828897	1					
ANR	4828904	AssignmentExpression	s = 0		4828897	2		=			
ANR	4828905	Identifier	s		4828897	0					
ANR	4828906	PrimaryExpression	0		4828897	1					
ANR	4828907	IdentifierDeclStatement	pid_t curpid = 0 ;	145:1:4562:4578	4828897	1	True				
ANR	4828908	IdentifierDecl	curpid = 0		4828897	0					
ANR	4828909	IdentifierDeclType	pid_t		4828897	0					
ANR	4828910	Identifier	curpid		4828897	1					
ANR	4828911	AssignmentExpression	curpid = 0		4828897	2		=			
ANR	4828912	Identifier	curpid		4828897	0					
ANR	4828913	PrimaryExpression	0		4828897	1					
ANR	4828914	IdentifierDeclStatement	DWORD * startblock = memptr ;	146:1:4581:4607	4828897	2	True				
ANR	4828915	IdentifierDecl	* startblock = memptr		4828897	0					
ANR	4828916	IdentifierDeclType	DWORD *		4828897	0					
ANR	4828917	Identifier	startblock		4828897	1					
ANR	4828918	AssignmentExpression	* startblock = memptr		4828897	2		=			
ANR	4828919	Identifier	memptr		4828897	0					
ANR	4828920	Identifier	memptr		4828897	1					
ANR	4828921	ExpressionStatement	Refresh ( )	147:1:4610:4619	4828897	3	True				
ANR	4828922	CallExpression	Refresh ( )		4828897	0					
ANR	4828923	Callee	Refresh		4828897	0					
ANR	4828924	Identifier	Refresh		4828897	0					
ANR	4828925	ArgumentList			4828897	1					
ANR	4828926	WhileStatement	while ( startblock )		4828897	4					
ANR	4828927	Condition	startblock	148:8:4630:4639	4828897	0	True				
ANR	4828928	Identifier	startblock		4828897	0					
ANR	4828929	CompoundStatement		9:1:171:171	4828897	1					
ANR	4828930	ExpressionStatement	curpid = * ( startblock + 17 )	150:2:4647:4674	4828897	0	True				
ANR	4828931	AssignmentExpression	curpid = * ( startblock + 17 )		4828897	0		=			
ANR	4828932	Identifier	curpid		4828897	0					
ANR	4828933	UnaryOperationExpression	* ( startblock + 17 )		4828897	1					
ANR	4828934	UnaryOperator	*		4828897	0					
ANR	4828935	AdditiveExpression	startblock + 17		4828897	1		+			
ANR	4828936	Identifier	startblock		4828897	0					
ANR	4828937	PrimaryExpression	17		4828897	1					
ANR	4828938	ExpressionStatement	dest [ s ++ ] = curpid	151:2:4678:4696	4828897	1	True				
ANR	4828939	AssignmentExpression	dest [ s ++ ] = curpid		4828897	0		=			
ANR	4828940	ArrayIndexing	dest [ s ++ ]		4828897	0					
ANR	4828941	Identifier	dest		4828897	0					
ANR	4828942	PostIncDecOperationExpression	s ++		4828897	1					
ANR	4828943	Identifier	s		4828897	0					
ANR	4828944	IncDec	++		4828897	1					
ANR	4828945	Identifier	curpid		4828897	1					
ANR	4828946	ExpressionStatement	startblock = NextBlock ( startblock )	152:2:4700:4735	4828897	2	True				
ANR	4828947	AssignmentExpression	startblock = NextBlock ( startblock )		4828897	0		=			
ANR	4828948	Identifier	startblock		4828897	0					
ANR	4828949	CallExpression	NextBlock ( startblock )		4828897	1					
ANR	4828950	Callee	NextBlock		4828897	0					
ANR	4828951	Identifier	NextBlock		4828897	0					
ANR	4828952	ArgumentList	startblock		4828897	1					
ANR	4828953	Argument	startblock		4828897	0					
ANR	4828954	Identifier	startblock		4828897	0					
ANR	4828955	IfStatement	if ( startblock == ( DWORD * ) 1 )		4828897	3					
ANR	4828956	Condition	startblock == ( DWORD * ) 1	153:7:4744:4766	4828897	0	True				
ANR	4828957	EqualityExpression	startblock == ( DWORD * ) 1		4828897	0		==			
ANR	4828958	Identifier	startblock		4828897	0					
ANR	4828959	CastExpression	( DWORD * ) 1		4828897	1					
ANR	4828960	CastTarget	DWORD *		4828897	0					
ANR	4828961	PrimaryExpression	1		4828897	1					
ANR	4828962	CompoundStatement		13:33:298:298	4828897	1					
ANR	4828963	ExpressionStatement	startblock = memptr	154:3:4775:4794	4828897	0	True				
ANR	4828964	AssignmentExpression	startblock = memptr		4828897	0		=			
ANR	4828965	Identifier	startblock		4828897	0					
ANR	4828966	Identifier	memptr		4828897	1					
ANR	4828967	ExpressionStatement	s = 0	155:3:4799:4804	4828897	1	True				
ANR	4828968	AssignmentExpression	s = 0		4828897	0		=			
ANR	4828969	Identifier	s		4828897	0					
ANR	4828970	PrimaryExpression	0		4828897	1					
ANR	4828971	ReturnStatement	return ( s ) ;	158:1:4814:4824	4828897	5	True				
ANR	4828972	Identifier	s		4828897	0					
ANR	4828973	IdentifierDeclStatement	HANDLE hProcessSnap ;	160:1:4834:4853	4828897	6	True				
ANR	4828974	IdentifierDecl	hProcessSnap		4828897	0					
ANR	4828975	IdentifierDeclType	HANDLE		4828897	0					
ANR	4828976	Identifier	hProcessSnap		4828897	1					
ANR	4828977	IdentifierDeclStatement	PROCESSENTRY32 pe32 ;	161:1:4856:4875	4828897	7	True				
ANR	4828978	IdentifierDecl	pe32		4828897	0					
ANR	4828979	IdentifierDeclType	PROCESSENTRY32		4828897	0					
ANR	4828980	Identifier	pe32		4828897	1					
ANR	4828981	IdentifierDeclStatement	int s ;	162:1:4878:4883	4828897	8	True				
ANR	4828982	IdentifierDecl	s		4828897	0					
ANR	4828983	IdentifierDeclType	int		4828897	0					
ANR	4828984	Identifier	s		4828897	1					
ANR	4828985	ExpressionStatement	s = 0	164:1:4887:4892	4828897	9	True				
ANR	4828986	AssignmentExpression	s = 0		4828897	0		=			
ANR	4828987	Identifier	s		4828897	0					
ANR	4828988	PrimaryExpression	0		4828897	1					
ANR	4828989	ExpressionStatement	"hProcessSnap = CreateToolhelp32Snapshot ( TH32CS_SNAPPROCESS , 0 )"	167:1:4948:5012	4828897	10	True				
ANR	4828990	AssignmentExpression	"hProcessSnap = CreateToolhelp32Snapshot ( TH32CS_SNAPPROCESS , 0 )"		4828897	0		=			
ANR	4828991	Identifier	hProcessSnap		4828897	0					
ANR	4828992	CallExpression	"CreateToolhelp32Snapshot ( TH32CS_SNAPPROCESS , 0 )"		4828897	1					
ANR	4828993	Callee	CreateToolhelp32Snapshot		4828897	0					
ANR	4828994	Identifier	CreateToolhelp32Snapshot		4828897	0					
ANR	4828995	ArgumentList	TH32CS_SNAPPROCESS		4828897	1					
ANR	4828996	Argument	TH32CS_SNAPPROCESS		4828897	0					
ANR	4828997	Identifier	TH32CS_SNAPPROCESS		4828897	0					
ANR	4828998	Argument	0		4828897	1					
ANR	4828999	PrimaryExpression	0		4828897	0					
ANR	4829000	IfStatement	if ( hProcessSnap == INVALID_HANDLE_VALUE )		4828897	11					
ANR	4829001	Condition	hProcessSnap == INVALID_HANDLE_VALUE	169:5:5021:5056	4828897	0	True				
ANR	4829002	EqualityExpression	hProcessSnap == INVALID_HANDLE_VALUE		4828897	0		==			
ANR	4829003	Identifier	hProcessSnap		4828897	0					
ANR	4829004	Identifier	INVALID_HANDLE_VALUE		4828897	1					
ANR	4829005	CompoundStatement		30:1:589:589	4828897	1					
ANR	4829006	ReturnStatement	return 0 ;	171:2:5065:5073	4828897	0	True				
ANR	4829007	PrimaryExpression	0		4828897	0					
ANR	4829008	ExpressionStatement	pe32 . dwSize = sizeof ( PROCESSENTRY32 )	175:1:5132:5170	4828897	12	True				
ANR	4829009	AssignmentExpression	pe32 . dwSize = sizeof ( PROCESSENTRY32 )		4828897	0		=			
ANR	4829010	MemberAccess	pe32 . dwSize		4828897	0					
ANR	4829011	Identifier	pe32		4828897	0					
ANR	4829012	Identifier	dwSize		4828897	1					
ANR	4829013	SizeofExpression	sizeof ( PROCESSENTRY32 )		4828897	1					
ANR	4829014	Sizeof	sizeof		4828897	0					
ANR	4829015	SizeofOperand	PROCESSENTRY32		4828897	1					
ANR	4829016	IfStatement	"if ( ! Process32First ( hProcessSnap , & pe32 ) )"		4828897	13					
ANR	4829017	Condition	"! Process32First ( hProcessSnap , & pe32 )"	179:5:5258:5295	4828897	0	True				
ANR	4829018	UnaryOperationExpression	"! Process32First ( hProcessSnap , & pe32 )"		4828897	0					
ANR	4829019	UnaryOperator	!		4828897	0					
ANR	4829020	CallExpression	"Process32First ( hProcessSnap , & pe32 )"		4828897	1					
ANR	4829021	Callee	Process32First		4828897	0					
ANR	4829022	Identifier	Process32First		4828897	0					
ANR	4829023	ArgumentList	hProcessSnap		4828897	1					
ANR	4829024	Argument	hProcessSnap		4828897	0					
ANR	4829025	Identifier	hProcessSnap		4828897	0					
ANR	4829026	Argument	& pe32		4828897	1					
ANR	4829027	UnaryOperationExpression	& pe32		4828897	0					
ANR	4829028	UnaryOperator	&		4828897	0					
ANR	4829029	Identifier	pe32		4828897	1					
ANR	4829030	CompoundStatement		40:1:828:828	4828897	1					
ANR	4829031	ExpressionStatement	CloseHandle ( hProcessSnap )	181:2:5304:5331	4828897	0	True				
ANR	4829032	CallExpression	CloseHandle ( hProcessSnap )		4828897	0					
ANR	4829033	Callee	CloseHandle		4828897	0					
ANR	4829034	Identifier	CloseHandle		4828897	0					
ANR	4829035	ArgumentList	hProcessSnap		4828897	1					
ANR	4829036	Argument	hProcessSnap		4828897	0					
ANR	4829037	Identifier	hProcessSnap		4828897	0					
ANR	4829038	ReturnStatement	return 0 ;	182:2:5373:5381	4828897	1	True				
ANR	4829039	PrimaryExpression	0		4828897	0					
ANR	4829040	DoStatement	do		4828897	14					
ANR	4829041	CompoundStatement		47:4:1021:1021	4828897	0					
ANR	4829042	ExpressionStatement	dest [ s ++ ] = pe32 . th32ProcessID	188:2:5497:5527	4828897	0	True				
ANR	4829043	AssignmentExpression	dest [ s ++ ] = pe32 . th32ProcessID		4828897	0		=			
ANR	4829044	ArrayIndexing	dest [ s ++ ]		4828897	0					
ANR	4829045	Identifier	dest		4828897	0					
ANR	4829046	PostIncDecOperationExpression	s ++		4828897	1					
ANR	4829047	Identifier	s		4828897	0					
ANR	4829048	IncDec	++		4828897	1					
ANR	4829049	MemberAccess	pe32 . th32ProcessID		4828897	1					
ANR	4829050	Identifier	pe32		4828897	0					
ANR	4829051	Identifier	th32ProcessID		4828897	1					
ANR	4829052	Condition	"Process32Next ( hProcessSnap , & pe32 )"	189:10:5539:5574	4828897	1	True				
ANR	4829053	CallExpression	"Process32Next ( hProcessSnap , & pe32 )"		4828897	0					
ANR	4829054	Callee	Process32Next		4828897	0					
ANR	4829055	Identifier	Process32Next		4828897	0					
ANR	4829056	ArgumentList	hProcessSnap		4828897	1					
ANR	4829057	Argument	hProcessSnap		4828897	0					
ANR	4829058	Identifier	hProcessSnap		4828897	0					
ANR	4829059	Argument	& pe32		4828897	1					
ANR	4829060	UnaryOperationExpression	& pe32		4828897	0					
ANR	4829061	UnaryOperator	&		4828897	0					
ANR	4829062	Identifier	pe32		4828897	1					
ANR	4829063	ExpressionStatement	CloseHandle ( hProcessSnap )	192:2:5633:5660	4828897	15	True				
ANR	4829064	CallExpression	CloseHandle ( hProcessSnap )		4828897	0					
ANR	4829065	Callee	CloseHandle		4828897	0					
ANR	4829066	Identifier	CloseHandle		4828897	0					
ANR	4829067	ArgumentList	hProcessSnap		4828897	1					
ANR	4829068	Argument	hProcessSnap		4828897	0					
ANR	4829069	Identifier	hProcessSnap		4828897	0					
ANR	4829070	ReturnStatement	return s ;	194:2:5667:5675	4828897	16	True				
ANR	4829071	Identifier	s		4828897	0					
ANR	4829072	ReturnType	int		4828897	1					
ANR	4829073	Identifier	CSysinfo :: GetPIDs		4828897	2					
ANR	4829074	ParameterList	ExtArray < pid_t > & dest		4828897	3					
ANR	4829075	Parameter	ExtArray < pid_t > & dest	140:23:4447:4468	4828897	0	True				
ANR	4829076	ParameterType	ExtArray < pid_t > &		4828897	0					
ANR	4829077	Identifier	dest		4828897	1					
ANR	4829078	CFGEntryNode	ENTRY		4828897		True				
ANR	4829079	CFGExitNode	EXIT		4828897		True				
ANR	4829080	Symbol	pe32		4828897						
ANR	4829081	Symbol	CreateToolhelp32Snapshot		4828897						
ANR	4829082	Symbol	& pe32		4828897						
ANR	4829083	Symbol	* dest		4828897						
ANR	4829084	Symbol	pe32 . dwSize		4828897						
ANR	4829085	Symbol	startblock		4828897						
ANR	4829086	Symbol	dest		4828897						
ANR	4829087	Symbol	* ( startblock + 17 )		4828897						
ANR	4829088	Symbol	INVALID_HANDLE_VALUE		4828897						
ANR	4829089	Symbol	pe32 . th32ProcessID		4828897						
ANR	4829090	Symbol	s		4828897						
ANR	4829091	Symbol	TH32CS_SNAPPROCESS		4828897						
ANR	4829092	Symbol	hProcessSnap		4828897						
ANR	4829093	Symbol	Process32First		4828897						
ANR	4829094	Symbol	NextBlock		4828897						
ANR	4829095	Symbol	memptr		4828897						
ANR	4829096	Symbol	* startblock		4828897						
ANR	4829097	Symbol	curpid		4828897						
ANR	4829098	Symbol	Process32Next		4828897						
ANR	4829099	Function	CSysinfo :: NumThreads	197:0:5716:5861							
ANR	4829100	FunctionDef	CSysinfo :: NumThreads (pid_t pid)		4829099	0					
ANR	4829101	CompoundStatement		198:0:5755:5861	4829099	0					
ANR	4829102	IdentifierDeclStatement	DWORD * block ;	199:1:5758:5770	4829099	0	True				
ANR	4829103	IdentifierDecl	* block		4829099	0					
ANR	4829104	IdentifierDeclType	DWORD *		4829099	0					
ANR	4829105	Identifier	block		4829099	1					
ANR	4829106	ExpressionStatement	Refresh ( )	200:1:5773:5782	4829099	1	True				
ANR	4829107	CallExpression	Refresh ( )		4829099	0					
ANR	4829108	Callee	Refresh		4829099	0					
ANR	4829109	Identifier	Refresh		4829099	0					
ANR	4829110	ArgumentList			4829099	1					
ANR	4829111	ExpressionStatement	block = FindBlock ( pid )	201:1:5785:5808	4829099	2	True				
ANR	4829112	AssignmentExpression	block = FindBlock ( pid )		4829099	0		=			
ANR	4829113	Identifier	block		4829099	0					
ANR	4829114	CallExpression	FindBlock ( pid )		4829099	1					
ANR	4829115	Callee	FindBlock		4829099	0					
ANR	4829116	Identifier	FindBlock		4829099	0					
ANR	4829117	ArgumentList	pid		4829099	1					
ANR	4829118	Argument	pid		4829099	0					
ANR	4829119	Identifier	pid		4829099	0					
ANR	4829120	IfStatement	if ( block )		4829099	3					
ANR	4829121	Condition	block	202:5:5815:5819	4829099	0	True				
ANR	4829122	Identifier	block		4829099	0					
ANR	4829123	ReturnStatement	return * ( block + 1 ) ;	203:2:5824:5841	4829099	1	True				
ANR	4829124	UnaryOperationExpression	* ( block + 1 )		4829099	0					
ANR	4829125	UnaryOperator	*		4829099	0					
ANR	4829126	AdditiveExpression	block + 1		4829099	1		+			
ANR	4829127	Identifier	block		4829099	0					
ANR	4829128	PrimaryExpression	1		4829099	1					
ANR	4829129	ElseStatement	else		4829099	0					
ANR	4829130	ReturnStatement	return 0 ;	205:2:5851:5859	4829099	0	True				
ANR	4829131	PrimaryExpression	0		4829099	0					
ANR	4829132	ReturnType	DWORD		4829099	1					
ANR	4829133	Identifier	CSysinfo :: NumThreads		4829099	2					
ANR	4829134	ParameterList	pid_t pid		4829099	3					
ANR	4829135	Parameter	pid_t pid	197:28:5744:5752	4829099	0	True				
ANR	4829136	ParameterType	pid_t		4829099	0					
ANR	4829137	Identifier	pid		4829099	1					
ANR	4829138	CFGEntryNode	ENTRY		4829099		True				
ANR	4829139	CFGExitNode	EXIT		4829099		True				
ANR	4829140	Symbol	* ( block + 1 )		4829099						
ANR	4829141	Symbol	pid		4829099						
ANR	4829142	Symbol	block		4829099						
ANR	4829143	Symbol	FindBlock		4829099						
ANR	4829144	Symbol	* block		4829099						
ANR	4829145	Function	CSysinfo :: GetProcessName	208:0:5864:6363							
ANR	4829146	FunctionDef	"CSysinfo :: GetProcessName (pid_t pid , char * dest , int sz)"		4829145	0					
ANR	4829147	CompoundStatement		209:0:5926:6363	4829145	0					
ANR	4829148	IdentifierDeclStatement	DWORD * block ;	213:1:6016:6028	4829145	0	True				
ANR	4829149	IdentifierDecl	* block		4829145	0					
ANR	4829150	IdentifierDeclType	DWORD *		4829145	0					
ANR	4829151	Identifier	block		4829145	1					
ANR	4829152	ExpressionStatement	Refresh ( )	214:1:6031:6040	4829145	1	True				
ANR	4829153	CallExpression	Refresh ( )		4829145	0					
ANR	4829154	Callee	Refresh		4829145	0					
ANR	4829155	Identifier	Refresh		4829145	0					
ANR	4829156	ArgumentList			4829145	1					
ANR	4829157	ExpressionStatement	block = FindBlock ( pid )	215:1:6043:6066	4829145	2	True				
ANR	4829158	AssignmentExpression	block = FindBlock ( pid )		4829145	0		=			
ANR	4829159	Identifier	block		4829145	0					
ANR	4829160	CallExpression	FindBlock ( pid )		4829145	1					
ANR	4829161	Callee	FindBlock		4829145	0					
ANR	4829162	Identifier	FindBlock		4829145	0					
ANR	4829163	ArgumentList	pid		4829145	1					
ANR	4829164	Argument	pid		4829145	0					
ANR	4829165	Identifier	pid		4829145	0					
ANR	4829166	IfStatement	if ( ! block )		4829145	3					
ANR	4829167	Condition	! block	216:5:6073:6078	4829145	0	True				
ANR	4829168	UnaryOperationExpression	! block		4829145	0					
ANR	4829169	UnaryOperator	!		4829145	0					
ANR	4829170	Identifier	block		4829145	1					
ANR	4829171	CompoundStatement		9:1:155:155	4829145	1					
ANR	4829172	ExpressionStatement	dest [ 0 ] = '\\0'	218:2:6086:6100	4829145	0	True				
ANR	4829173	AssignmentExpression	dest [ 0 ] = '\\0'		4829145	0		=			
ANR	4829174	ArrayIndexing	dest [ 0 ]		4829145	0					
ANR	4829175	Identifier	dest		4829145	0					
ANR	4829176	PrimaryExpression	0		4829145	1					
ANR	4829177	PrimaryExpression	'\\0'		4829145	1					
ANR	4829178	ReturnStatement	return FALSE ;	219:2:6104:6116	4829145	1	True				
ANR	4829179	Identifier	FALSE		4829145	0					
ANR	4829180	ExpressionStatement	"MakeAnsiString ( ( WORD * ) ( * ( block + 15 ) ) , dest )"	221:1:6122:6165	4829145	4	True				
ANR	4829181	CallExpression	"MakeAnsiString ( ( WORD * ) ( * ( block + 15 ) ) , dest )"		4829145	0					
ANR	4829182	Callee	MakeAnsiString		4829145	0					
ANR	4829183	Identifier	MakeAnsiString		4829145	0					
ANR	4829184	ArgumentList	( WORD * ) ( * ( block + 15 ) )		4829145	1					
ANR	4829185	Argument	( WORD * ) ( * ( block + 15 ) )		4829145	0					
ANR	4829186	CastExpression	( WORD * ) ( * ( block + 15 ) )		4829145	0					
ANR	4829187	CastTarget	WORD *		4829145	0					
ANR	4829188	UnaryOperationExpression	* ( block + 15 )		4829145	1					
ANR	4829189	UnaryOperator	*		4829145	0					
ANR	4829190	AdditiveExpression	block + 15		4829145	1		+			
ANR	4829191	Identifier	block		4829145	0					
ANR	4829192	PrimaryExpression	15		4829145	1					
ANR	4829193	Argument	dest		4829145	1					
ANR	4829194	Identifier	dest		4829145	0					
ANR	4829195	IdentifierDeclStatement	HANDLE Hnd ;	223:1:6175:6185	4829145	5	True				
ANR	4829196	IdentifierDecl	Hnd		4829145	0					
ANR	4829197	IdentifierDeclType	HANDLE		4829145	0					
ANR	4829198	Identifier	Hnd		4829145	1					
ANR	4829199	IfStatement	"if ( ! ( Hnd = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid ) ) )"		4829145	6					
ANR	4829200	Condition	"! ( Hnd = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid ) )"	225:5:6193:6252	4829145	0	True				
ANR	4829201	UnaryOperationExpression	"! ( Hnd = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid ) )"		4829145	0					
ANR	4829202	UnaryOperator	!		4829145	0					
ANR	4829203	AssignmentExpression	"Hnd = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid )"		4829145	1		=			
ANR	4829204	Identifier	Hnd		4829145	0					
ANR	4829205	CallExpression	"OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid )"		4829145	1					
ANR	4829206	Callee	OpenProcess		4829145	0					
ANR	4829207	Identifier	OpenProcess		4829145	0					
ANR	4829208	ArgumentList	PROCESS_QUERY_INFORMATION		4829145	1					
ANR	4829209	Argument	PROCESS_QUERY_INFORMATION		4829145	0					
ANR	4829210	Identifier	PROCESS_QUERY_INFORMATION		4829145	0					
ANR	4829211	Argument	FALSE		4829145	1					
ANR	4829212	Identifier	FALSE		4829145	0					
ANR	4829213	Argument	pid		4829145	2					
ANR	4829214	Identifier	pid		4829145	0					
ANR	4829215	CompoundStatement		17:67:328:328	4829145	1					
ANR	4829216	ReturnStatement	return FALSE ;	226:2:6259:6271	4829145	0	True				
ANR	4829217	Identifier	FALSE		4829145	0					
ANR	4829218	IfStatement	"if ( ! GetModuleBaseName ( Hnd , NULL , dest , sz ) )"		4829145	7					
ANR	4829219	Condition	"! GetModuleBaseName ( Hnd , NULL , dest , sz )"	229:6:6283:6322	4829145	0	True				
ANR	4829220	UnaryOperationExpression	"! GetModuleBaseName ( Hnd , NULL , dest , sz )"		4829145	0					
ANR	4829221	UnaryOperator	!		4829145	0					
ANR	4829222	CallExpression	"GetModuleBaseName ( Hnd , NULL , dest , sz )"		4829145	1					
ANR	4829223	Callee	GetModuleBaseName		4829145	0					
ANR	4829224	Identifier	GetModuleBaseName		4829145	0					
ANR	4829225	ArgumentList	Hnd		4829145	1					
ANR	4829226	Argument	Hnd		4829145	0					
ANR	4829227	Identifier	Hnd		4829145	0					
ANR	4829228	Argument	NULL		4829145	1					
ANR	4829229	Identifier	NULL		4829145	0					
ANR	4829230	Argument	dest		4829145	2					
ANR	4829231	Identifier	dest		4829145	0					
ANR	4829232	Argument	sz		4829145	3					
ANR	4829233	Identifier	sz		4829145	0					
ANR	4829234	CompoundStatement		21:49:399:399	4829145	1					
ANR	4829235	ReturnStatement	return FALSE ;	230:2:6330:6342	4829145	0	True				
ANR	4829236	Identifier	FALSE		4829145	0					
ANR	4829237	ReturnStatement	return TRUE ;	233:1:6350:6361	4829145	8	True				
ANR	4829238	Identifier	TRUE		4829145	0					
ANR	4829239	ReturnType	BOOL		4829145	1					
ANR	4829240	Identifier	CSysinfo :: GetProcessName		4829145	2					
ANR	4829241	ParameterList	"pid_t pid , char * dest , int sz"		4829145	3					
ANR	4829242	Parameter	pid_t pid	208:31:5895:5903	4829145	0	True				
ANR	4829243	ParameterType	pid_t		4829145	0					
ANR	4829244	Identifier	pid		4829145	1					
ANR	4829245	Parameter	char * dest	208:42:5906:5915	4829145	1	True				
ANR	4829246	ParameterType	char *		4829145	0					
ANR	4829247	Identifier	dest		4829145	1					
ANR	4829248	Parameter	int sz	208:54:5918:5923	4829145	2	True				
ANR	4829249	ParameterType	int		4829145	0					
ANR	4829250	Identifier	sz		4829145	1					
ANR	4829251	CFGEntryNode	ENTRY		4829145		True				
ANR	4829252	CFGExitNode	EXIT		4829145		True				
ANR	4829253	Symbol	GetModuleBaseName		4829145						
ANR	4829254	Symbol	NULL		4829145						
ANR	4829255	Symbol	* dest		4829145						
ANR	4829256	Symbol	sz		4829145						
ANR	4829257	Symbol	TRUE		4829145						
ANR	4829258	Symbol	pid		4829145						
ANR	4829259	Symbol	dest		4829145						
ANR	4829260	Symbol	FindBlock		4829145						
ANR	4829261	Symbol	* ( block + 15 )		4829145						
ANR	4829262	Symbol	* block		4829145						
ANR	4829263	Symbol	block		4829145						
ANR	4829264	Symbol	FALSE		4829145						
ANR	4829265	Symbol	PROCESS_QUERY_INFORMATION		4829145						
ANR	4829266	Symbol	OpenProcess		4829145						
ANR	4829267	Symbol	Hnd		4829145						
ANR	4829268	Function	CSysinfo :: GetHandleCount	236:0:6366:6508							
ANR	4829269	FunctionDef	CSysinfo :: GetHandleCount (pid_t pid)		4829268	0					
ANR	4829270	CompoundStatement		237:0:6409:6508	4829268	0					
ANR	4829271	IdentifierDeclStatement	DWORD * block ;	238:1:6412:6424	4829268	0	True				
ANR	4829272	IdentifierDecl	* block		4829268	0					
ANR	4829273	IdentifierDeclType	DWORD *		4829268	0					
ANR	4829274	Identifier	block		4829268	1					
ANR	4829275	ExpressionStatement	Refresh ( )	239:1:6427:6436	4829268	1	True				
ANR	4829276	CallExpression	Refresh ( )		4829268	0					
ANR	4829277	Callee	Refresh		4829268	0					
ANR	4829278	Identifier	Refresh		4829268	0					
ANR	4829279	ArgumentList			4829268	1					
ANR	4829280	ExpressionStatement	block = FindBlock ( pid )	240:1:6439:6462	4829268	2	True				
ANR	4829281	AssignmentExpression	block = FindBlock ( pid )		4829268	0		=			
ANR	4829282	Identifier	block		4829268	0					
ANR	4829283	CallExpression	FindBlock ( pid )		4829268	1					
ANR	4829284	Callee	FindBlock		4829268	0					
ANR	4829285	Identifier	FindBlock		4829268	0					
ANR	4829286	ArgumentList	pid		4829268	1					
ANR	4829287	Argument	pid		4829268	0					
ANR	4829288	Identifier	pid		4829268	0					
ANR	4829289	IfStatement	if ( ! block )		4829268	3					
ANR	4829290	Condition	! block	241:5:6469:6474	4829268	0	True				
ANR	4829291	UnaryOperationExpression	! block		4829268	0					
ANR	4829292	UnaryOperator	!		4829268	0					
ANR	4829293	Identifier	block		4829268	1					
ANR	4829294	ReturnStatement	return 0 ;	242:2:6479:6487	4829268	1	True				
ANR	4829295	PrimaryExpression	0		4829268	0					
ANR	4829296	ReturnStatement	return block [ 19 ] ;	243:1:6490:6506	4829268	4	True				
ANR	4829297	ArrayIndexing	block [ 19 ]		4829268	0					
ANR	4829298	Identifier	block		4829268	0					
ANR	4829299	PrimaryExpression	19		4829268	1					
ANR	4829300	ReturnType	DWORD		4829268	1					
ANR	4829301	Identifier	CSysinfo :: GetHandleCount		4829268	2					
ANR	4829302	ParameterList	pid_t pid		4829268	3					
ANR	4829303	Parameter	pid_t pid	236:32:6398:6406	4829268	0	True				
ANR	4829304	ParameterType	pid_t		4829268	0					
ANR	4829305	Identifier	pid		4829268	1					
ANR	4829306	CFGEntryNode	ENTRY		4829268		True				
ANR	4829307	CFGExitNode	EXIT		4829268		True				
ANR	4829308	Symbol	pid		4829268						
ANR	4829309	Symbol	block		4829268						
ANR	4829310	Symbol	FindBlock		4829268						
ANR	4829311	Symbol	* block		4829268						
ANR	4829312	Function	Debug_Subst_Hex_ODS	253:0:6851:7455							
ANR	4829313	FunctionDef	"Debug_Subst_Hex_ODS (const TCHAR * pmsg , const DWORD * pHex , int cHex)"		4829312	0					
ANR	4829314	CompoundStatement		254:0:6933:7455	4829312	0					
ANR	4829315	IdentifierDeclStatement	TCHAR sz [ 200 ] ;	255:3:6938:6951	4829312	0	True				
ANR	4829316	IdentifierDecl	sz [ 200 ]		4829312	0					
ANR	4829317	IdentifierDeclType	TCHAR [ 200 ]		4829312	0					
ANR	4829318	Identifier	sz		4829312	1					
ANR	4829319	PrimaryExpression	200		4829312	2					
ANR	4829320	IdentifierDeclStatement	UINT cch = lstrlen ( pmsg ) + 1 ;	256:3:6956:6983	4829312	1	True				
ANR	4829321	IdentifierDecl	cch = lstrlen ( pmsg ) + 1		4829312	0					
ANR	4829322	IdentifierDeclType	UINT		4829312	0					
ANR	4829323	Identifier	cch		4829312	1					
ANR	4829324	AssignmentExpression	cch = lstrlen ( pmsg ) + 1		4829312	2		=			
ANR	4829325	Identifier	cch		4829312	0					
ANR	4829326	AdditiveExpression	lstrlen ( pmsg ) + 1		4829312	1		+			
ANR	4829327	CallExpression	lstrlen ( pmsg )		4829312	0					
ANR	4829328	Callee	lstrlen		4829312	0					
ANR	4829329	Identifier	lstrlen		4829312	0					
ANR	4829330	ArgumentList	pmsg		4829312	1					
ANR	4829331	Argument	pmsg		4829312	0					
ANR	4829332	Identifier	pmsg		4829312	0					
ANR	4829333	PrimaryExpression	1		4829312	1					
ANR	4829334	ExpressionStatement	"CopyMemory ( sz , pmsg , cch * sizeof ( TCHAR ) )"	257:3:6988:7027	4829312	2	True				
ANR	4829335	CallExpression	"CopyMemory ( sz , pmsg , cch * sizeof ( TCHAR ) )"		4829312	0					
ANR	4829336	Callee	CopyMemory		4829312	0					
ANR	4829337	Identifier	CopyMemory		4829312	0					
ANR	4829338	ArgumentList	sz		4829312	1					
ANR	4829339	Argument	sz		4829312	0					
ANR	4829340	Identifier	sz		4829312	0					
ANR	4829341	Argument	pmsg		4829312	1					
ANR	4829342	Identifier	pmsg		4829312	0					
ANR	4829343	Argument	cch * sizeof ( TCHAR )		4829312	2					
ANR	4829344	MultiplicativeExpression	cch * sizeof ( TCHAR )		4829312	0		*			
ANR	4829345	Identifier	cch		4829312	0					
ANR	4829346	SizeofExpression	sizeof ( TCHAR )		4829312	1					
ANR	4829347	Sizeof	sizeof		4829312	0					
ANR	4829348	SizeofOperand	TCHAR		4829312	1					
ANR	4829349	IdentifierDeclStatement	TCHAR * psz = sz + cch ;	259:3:7033:7055	4829312	3	True				
ANR	4829350	IdentifierDecl	* psz = sz + cch		4829312	0					
ANR	4829351	IdentifierDeclType	TCHAR *		4829312	0					
ANR	4829352	Identifier	psz		4829312	1					
ANR	4829353	AssignmentExpression	* psz = sz + cch		4829312	2		=			
ANR	4829354	Identifier	psz		4829312	0					
ANR	4829355	AdditiveExpression	sz + cch		4829312	1		+			
ANR	4829356	Identifier	sz		4829312	0					
ANR	4829357	Identifier	cch		4829312	1					
ANR	4829358	ForStatement	for ( int ix = cHex - 1 ; ix >= 0 ; -- ix )		4829312	4					
ANR	4829359	ForInit	int ix = cHex - 1 ;	261:8:7066:7081	4829312	0	True				
ANR	4829360	IdentifierDeclStatement	int ix = cHex - 1 ;		4829312	0					
ANR	4829361	IdentifierDecl	ix = cHex - 1		4829312	0					
ANR	4829362	IdentifierDeclType	int		4829312	0					
ANR	4829363	Identifier	ix		4829312	1					
ANR	4829364	AssignmentExpression	ix = cHex - 1		4829312	2		=			
ANR	4829365	Identifier	ix		4829312	0					
ANR	4829366	AdditiveExpression	cHex - 1		4829312	1		-			
ANR	4829367	Identifier	cHex		4829312	0					
ANR	4829368	PrimaryExpression	1		4829312	1					
ANR	4829369	Condition	ix >= 0	261:25:7083:7089	4829312	1	True				
ANR	4829370	RelationalExpression	ix >= 0		4829312	0		>=			
ANR	4829371	Identifier	ix		4829312	0					
ANR	4829372	PrimaryExpression	0		4829312	1					
ANR	4829373	UnaryExpression	-- ix	261:34:7092:7095	4829312	2	True				
ANR	4829374	IncDec	--		4829312	0					
ANR	4829375	Identifier	ix		4829312	1					
ANR	4829376	CompoundStatement		9:6:170:170	4829312	3					
ANR	4829377	WhileStatement	while ( psz > sz && * psz != '0' )		4829312	0					
ANR	4829378	Condition	psz > sz && * psz != '0'	263:13:7119:7141	4829312	0	True				
ANR	4829379	AndExpression	psz > sz && * psz != '0'		4829312	0		&&			
ANR	4829380	RelationalExpression	psz > sz		4829312	0		>			
ANR	4829381	Identifier	psz		4829312	0					
ANR	4829382	Identifier	sz		4829312	1					
ANR	4829383	EqualityExpression	* psz != '0'		4829312	1		!=			
ANR	4829384	UnaryOperationExpression	* psz		4829312	0					
ANR	4829385	UnaryOperator	*		4829312	0					
ANR	4829386	Identifier	psz		4829312	1					
ANR	4829387	PrimaryExpression	'0'		4829312	1					
ANR	4829388	ExpressionStatement	-- psz	264:9:7154:7159	4829312	1	True				
ANR	4829389	UnaryExpression	-- psz		4829312	0					
ANR	4829390	IncDec	--		4829312	0					
ANR	4829391	Identifier	psz		4829312	1					
ANR	4829392	ForStatement	for ( DWORD dw = pHex [ ix ] ; dw && psz >= sz ; dw = dw >> 4 )		4829312	1					
ANR	4829393	ForInit	DWORD dw = pHex [ ix ] ;	265:11:7173:7192	4829312	0	True				
ANR	4829394	IdentifierDeclStatement	DWORD dw = pHex [ ix ] ;		4829312	0					
ANR	4829395	IdentifierDecl	dw = pHex [ ix ]		4829312	0					
ANR	4829396	IdentifierDeclType	DWORD		4829312	0					
ANR	4829397	Identifier	dw		4829312	1					
ANR	4829398	AssignmentExpression	dw = pHex [ ix ]		4829312	2		=			
ANR	4829399	Identifier	dw		4829312	0					
ANR	4829400	ArrayIndexing	pHex [ ix ]		4829312	1					
ANR	4829401	Identifier	pHex		4829312	0					
ANR	4829402	Identifier	ix		4829312	1					
ANR	4829403	Condition	dw && psz >= sz	265:32:7194:7208	4829312	1	True				
ANR	4829404	AndExpression	dw && psz >= sz		4829312	0		&&			
ANR	4829405	Identifier	dw		4829312	0					
ANR	4829406	RelationalExpression	psz >= sz		4829312	1		>=			
ANR	4829407	Identifier	psz		4829312	0					
ANR	4829408	Identifier	sz		4829312	1					
ANR	4829409	AssignmentExpression	dw = dw >> 4	265:49:7211:7222	4829312	2	True	=			
ANR	4829410	Identifier	dw		4829312	0					
ANR	4829411	ShiftExpression	dw >> 4		4829312	1		>>			
ANR	4829412	Identifier	dw		4829312	0					
ANR	4829413	PrimaryExpression	4		4829312	1					
ANR	4829414	CompoundStatement		14:9:313:334	4829312	3					
ANR	4829415	IdentifierDeclStatement	TCHAR ch = ( dw & 0xF ) ;	267:9:7247:7268	4829312	0	True				
ANR	4829416	IdentifierDecl	ch = ( dw & 0xF )		4829312	0					
ANR	4829417	IdentifierDeclType	TCHAR		4829312	0					
ANR	4829418	Identifier	ch		4829312	1					
ANR	4829419	AssignmentExpression	ch = ( dw & 0xF )		4829312	2		=			
ANR	4829420	Identifier	ch		4829312	0					
ANR	4829421	BitAndExpression	dw & 0xF		4829312	1		&			
ANR	4829422	Identifier	dw		4829312	0					
ANR	4829423	PrimaryExpression	0xF		4829312	1					
ANR	4829424	ExpressionStatement	* psz = ( TCHAR ) ( ( ch < 10 ) ? ( ch + '0' ) : ( ch - 10 + 'A' ) )	268:9:7280:7335	4829312	1	True				
ANR	4829425	AssignmentExpression	* psz = ( TCHAR ) ( ( ch < 10 ) ? ( ch + '0' ) : ( ch - 10 + 'A' ) )		4829312	0		=			
ANR	4829426	UnaryOperationExpression	* psz		4829312	0					
ANR	4829427	UnaryOperator	*		4829312	0					
ANR	4829428	Identifier	psz		4829312	1					
ANR	4829429	CastExpression	( TCHAR ) ( ( ch < 10 ) ? ( ch + '0' ) : ( ch - 10 + 'A' ) )		4829312	1					
ANR	4829430	CastTarget	TCHAR		4829312	0					
ANR	4829431	ConditionalExpression	( ch < 10 ) ? ( ch + '0' ) : ( ch - 10 + 'A' )		4829312	1					
ANR	4829432	Condition	ch < 10		4829312	0					
ANR	4829433	RelationalExpression	ch < 10		4829312	0		<			
ANR	4829434	Identifier	ch		4829312	0					
ANR	4829435	PrimaryExpression	10		4829312	1					
ANR	4829436	AdditiveExpression	ch + '0'		4829312	1		+			
ANR	4829437	Identifier	ch		4829312	0					
ANR	4829438	PrimaryExpression	'0'		4829312	1					
ANR	4829439	AdditiveExpression	ch - 10 + 'A'		4829312	2		-			
ANR	4829440	Identifier	ch		4829312	0					
ANR	4829441	AdditiveExpression	10 + 'A'		4829312	1		+			
ANR	4829442	PrimaryExpression	10		4829312	0					
ANR	4829443	PrimaryExpression	'A'		4829312	1					
ANR	4829444	ExpressionStatement	-- psz	269:9:7347:7352	4829312	2	True				
ANR	4829445	UnaryExpression	-- psz		4829312	0					
ANR	4829446	IncDec	--		4829312	0					
ANR	4829447	Identifier	psz		4829312	1					
ANR	4829448	WhileStatement	while ( psz > sz && * psz != ' ' )		4829312	2					
ANR	4829449	Condition	psz > sz && * psz != ' '	271:13:7378:7400	4829312	0	True				
ANR	4829450	AndExpression	psz > sz && * psz != ' '		4829312	0		&&			
ANR	4829451	RelationalExpression	psz > sz		4829312	0		>			
ANR	4829452	Identifier	psz		4829312	0					
ANR	4829453	Identifier	sz		4829312	1					
ANR	4829454	EqualityExpression	* psz != ' '		4829312	1		!=			
ANR	4829455	UnaryOperationExpression	* psz		4829312	0					
ANR	4829456	UnaryOperator	*		4829312	0					
ANR	4829457	Identifier	psz		4829312	1					
ANR	4829458	PrimaryExpression	' '		4829312	1					
ANR	4829459	ExpressionStatement	-- psz	272:9:7413:7418	4829312	1	True				
ANR	4829460	UnaryExpression	-- psz		4829312	0					
ANR	4829461	IncDec	--		4829312	0					
ANR	4829462	Identifier	psz		4829312	1					
ANR	4829463	ExpressionStatement	OutputDebugString ( sz )	274:3:7432:7453	4829312	5	True				
ANR	4829464	CallExpression	OutputDebugString ( sz )		4829312	0					
ANR	4829465	Callee	OutputDebugString		4829312	0					
ANR	4829466	Identifier	OutputDebugString		4829312	0					
ANR	4829467	ArgumentList	sz		4829312	1					
ANR	4829468	Argument	sz		4829312	0					
ANR	4829469	Identifier	sz		4829312	0					
ANR	4829470	ReturnType	static void		4829312	1					
ANR	4829471	Identifier	Debug_Subst_Hex_ODS		4829312	2					
ANR	4829472	ParameterList	"const TCHAR * pmsg , const DWORD * pHex , int cHex"		4829312	3					
ANR	4829473	Parameter	const TCHAR * pmsg	253:32:6883:6900	4829312	0	True				
ANR	4829474	ParameterType	const TCHAR *		4829312	0					
ANR	4829475	Identifier	pmsg		4829312	1					
ANR	4829476	Parameter	const DWORD * pHex	253:52:6903:6920	4829312	1	True				
ANR	4829477	ParameterType	const DWORD *		4829312	0					
ANR	4829478	Identifier	pHex		4829312	1					
ANR	4829479	Parameter	int cHex	253:72:6923:6930	4829312	2	True				
ANR	4829480	ParameterType	int		4829312	0					
ANR	4829481	Identifier	cHex		4829312	1					
ANR	4829482	CFGEntryNode	ENTRY		4829312		True				
ANR	4829483	CFGExitNode	EXIT		4829312		True				
ANR	4829484	Symbol	* psz		4829312						
ANR	4829485	Symbol	* pHex		4829312						
ANR	4829486	Symbol	pmsg		4829312						
ANR	4829487	Symbol	ch		4829312						
ANR	4829488	Symbol	lstrlen		4829312						
ANR	4829489	Symbol	sz		4829312						
ANR	4829490	Symbol	cch		4829312						
ANR	4829491	Symbol	ix		4829312						
ANR	4829492	Symbol	dw		4829312						
ANR	4829493	Symbol	cHex		4829312						
ANR	4829494	Symbol	psz		4829312						
ANR	4829495	Symbol	* ix		4829312						
ANR	4829496	Symbol	pHex		4829312						
ANR	4829497	ClassDef	_PROCESS_BASIC_INFORMATION	278:8:7499:7731							
ANR	4829498	DeclStmt									
ANR	4829499	Decl							ULONG_PTR	ULONG_PTR	ExitStatus
ANR	4829500	DeclStmt									
ANR	4829501	Decl							PVOID	PVOID	PebBaseAddress
ANR	4829502	DeclStmt									
ANR	4829503	Decl							ULONG_PTR	ULONG_PTR	AffinityMask
ANR	4829504	DeclStmt									
ANR	4829505	Decl							ULONG_PTR	ULONG_PTR	BasePriority
ANR	4829506	DeclStmt									
ANR	4829507	Decl							ULONG_PTR	ULONG_PTR	UniqueProcessId
ANR	4829508	DeclStmt									
ANR	4829509	Decl							ULONG_PTR	ULONG_PTR	InheritedFromUniqueProcessId
ANR	4829510	DeclStmt									
ANR	4829511	Decl							_PROCESS_BASIC_INFORMATION	_PROCESS_BASIC_INFORMATION	PROCESS_BASIC_INFORMATION
ANR	4829512	Function	CSysinfo :: GetParentPID	287:0:7734:9568							
ANR	4829513	FunctionDef	CSysinfo :: GetParentPID (pid_t pid)		4829512	0					
ANR	4829514	CompoundStatement		288:0:7775:9568	4829512	0					
ANR	4829515	IdentifierDeclStatement	DWORD * block ;	293:1:7889:7901	4829512	0	True				
ANR	4829516	IdentifierDecl	* block		4829512	0					
ANR	4829517	IdentifierDeclType	DWORD *		4829512	0					
ANR	4829518	Identifier	block		4829512	1					
ANR	4829519	ExpressionStatement	Refresh ( )	294:1:7904:7913	4829512	1	True				
ANR	4829520	CallExpression	Refresh ( )		4829512	0					
ANR	4829521	Callee	Refresh		4829512	0					
ANR	4829522	Identifier	Refresh		4829512	0					
ANR	4829523	ArgumentList			4829512	1					
ANR	4829524	ExpressionStatement	block = FindBlock ( pid )	295:1:7916:7939	4829512	2	True				
ANR	4829525	AssignmentExpression	block = FindBlock ( pid )		4829512	0		=			
ANR	4829526	Identifier	block		4829512	0					
ANR	4829527	CallExpression	FindBlock ( pid )		4829512	1					
ANR	4829528	Callee	FindBlock		4829512	0					
ANR	4829529	Identifier	FindBlock		4829512	0					
ANR	4829530	ArgumentList	pid		4829512	1					
ANR	4829531	Argument	pid		4829512	0					
ANR	4829532	Identifier	pid		4829512	0					
ANR	4829533	IfStatement	if ( ! block )		4829512	3					
ANR	4829534	Condition	! block	296:5:7946:7951	4829512	0	True				
ANR	4829535	UnaryOperationExpression	! block		4829512	0					
ANR	4829536	UnaryOperator	!		4829512	0					
ANR	4829537	Identifier	block		4829512	1					
ANR	4829538	ReturnStatement	return 0 ;	297:2:7956:7964	4829512	1	True				
ANR	4829539	PrimaryExpression	0		4829512	0					
ANR	4829540	ReturnStatement	return block [ 18 ] ;	298:1:7967:7983	4829512	4	True				
ANR	4829541	ArrayIndexing	block [ 18 ]		4829512	0					
ANR	4829542	Identifier	block		4829512	0					
ANR	4829543	PrimaryExpression	18		4829512	1					
ANR	4829544	ReturnType	DWORD		4829512	1					
ANR	4829545	Identifier	CSysinfo :: GetParentPID		4829512	2					
ANR	4829546	ParameterList	pid_t pid		4829512	3					
ANR	4829547	Parameter	pid_t pid	287:30:7764:7772	4829512	0	True				
ANR	4829548	ParameterType	pid_t		4829512	0					
ANR	4829549	Identifier	pid		4829512	1					
ANR	4829550	CFGEntryNode	ENTRY		4829512		True				
ANR	4829551	CFGExitNode	EXIT		4829512		True				
ANR	4829552	Symbol	pid		4829512						
ANR	4829553	Symbol	block		4829512						
ANR	4829554	Symbol	FindBlock		4829512						
ANR	4829555	Symbol	* block		4829512						
ANR	4829556	Function	CSysinfo :: GetProcessEntry	352:0:9571:10522							
ANR	4829557	FunctionDef	"CSysinfo :: GetProcessEntry (pid_t pid , PROCESSENTRY32 & pe32)"		4829556	0					
ANR	4829558	CompoundStatement		353:60:9635:10522	4829556	0					
ANR	4829559	IdentifierDeclStatement	HANDLE hProcessSnap ;	355:1:9640:9659	4829556	0	True				
ANR	4829560	IdentifierDecl	hProcessSnap		4829556	0					
ANR	4829561	IdentifierDeclType	HANDLE		4829556	0					
ANR	4829562	Identifier	hProcessSnap		4829556	1					
ANR	4829563	IdentifierDeclStatement	int result ;	356:1:9662:9672	4829556	1	True				
ANR	4829564	IdentifierDecl	result		4829556	0					
ANR	4829565	IdentifierDeclType	int		4829556	0					
ANR	4829566	Identifier	result		4829556	1					
ANR	4829567	ExpressionStatement	result = FALSE	358:1:9676:9690	4829556	2	True				
ANR	4829568	AssignmentExpression	result = FALSE		4829556	0		=			
ANR	4829569	Identifier	result		4829556	0					
ANR	4829570	Identifier	FALSE		4829556	1					
ANR	4829571	ExpressionStatement	"hProcessSnap = CreateToolhelp32Snapshot ( TH32CS_SNAPPROCESS , 0 )"	361:1:9746:9810	4829556	3	True				
ANR	4829572	AssignmentExpression	"hProcessSnap = CreateToolhelp32Snapshot ( TH32CS_SNAPPROCESS , 0 )"		4829556	0		=			
ANR	4829573	Identifier	hProcessSnap		4829556	0					
ANR	4829574	CallExpression	"CreateToolhelp32Snapshot ( TH32CS_SNAPPROCESS , 0 )"		4829556	1					
ANR	4829575	Callee	CreateToolhelp32Snapshot		4829556	0					
ANR	4829576	Identifier	CreateToolhelp32Snapshot		4829556	0					
ANR	4829577	ArgumentList	TH32CS_SNAPPROCESS		4829556	1					
ANR	4829578	Argument	TH32CS_SNAPPROCESS		4829556	0					
ANR	4829579	Identifier	TH32CS_SNAPPROCESS		4829556	0					
ANR	4829580	Argument	0		4829556	1					
ANR	4829581	PrimaryExpression	0		4829556	0					
ANR	4829582	IfStatement	if ( hProcessSnap == INVALID_HANDLE_VALUE )		4829556	4					
ANR	4829583	Condition	hProcessSnap == INVALID_HANDLE_VALUE	363:5:9819:9854	4829556	0	True				
ANR	4829584	EqualityExpression	hProcessSnap == INVALID_HANDLE_VALUE		4829556	0		==			
ANR	4829585	Identifier	hProcessSnap		4829556	0					
ANR	4829586	Identifier	INVALID_HANDLE_VALUE		4829556	1					
ANR	4829587	CompoundStatement		12:1:223:223	4829556	1					
ANR	4829588	ReturnStatement	return FALSE ;	365:2:9863:9875	4829556	0	True				
ANR	4829589	Identifier	FALSE		4829556	0					
ANR	4829590	ExpressionStatement	pe32 . dwSize = sizeof ( PROCESSENTRY32 )	369:1:9934:9972	4829556	5	True				
ANR	4829591	AssignmentExpression	pe32 . dwSize = sizeof ( PROCESSENTRY32 )		4829556	0		=			
ANR	4829592	MemberAccess	pe32 . dwSize		4829556	0					
ANR	4829593	Identifier	pe32		4829556	0					
ANR	4829594	Identifier	dwSize		4829556	1					
ANR	4829595	SizeofExpression	sizeof ( PROCESSENTRY32 )		4829556	1					
ANR	4829596	Sizeof	sizeof		4829556	0					
ANR	4829597	SizeofOperand	PROCESSENTRY32		4829556	1					
ANR	4829598	IfStatement	"if ( ! Process32First ( hProcessSnap , & pe32 ) )"		4829556	6					
ANR	4829599	Condition	"! Process32First ( hProcessSnap , & pe32 )"	373:5:10060:10097	4829556	0	True				
ANR	4829600	UnaryOperationExpression	"! Process32First ( hProcessSnap , & pe32 )"		4829556	0					
ANR	4829601	UnaryOperator	!		4829556	0					
ANR	4829602	CallExpression	"Process32First ( hProcessSnap , & pe32 )"		4829556	1					
ANR	4829603	Callee	Process32First		4829556	0					
ANR	4829604	Identifier	Process32First		4829556	0					
ANR	4829605	ArgumentList	hProcessSnap		4829556	1					
ANR	4829606	Argument	hProcessSnap		4829556	0					
ANR	4829607	Identifier	hProcessSnap		4829556	0					
ANR	4829608	Argument	& pe32		4829556	1					
ANR	4829609	UnaryOperationExpression	& pe32		4829556	0					
ANR	4829610	UnaryOperator	&		4829556	0					
ANR	4829611	Identifier	pe32		4829556	1					
ANR	4829612	CompoundStatement		22:1:466:466	4829556	1					
ANR	4829613	ExpressionStatement	CloseHandle ( hProcessSnap )	375:2:10106:10133	4829556	0	True				
ANR	4829614	CallExpression	CloseHandle ( hProcessSnap )		4829556	0					
ANR	4829615	Callee	CloseHandle		4829556	0					
ANR	4829616	Identifier	CloseHandle		4829556	0					
ANR	4829617	ArgumentList	hProcessSnap		4829556	1					
ANR	4829618	Argument	hProcessSnap		4829556	0					
ANR	4829619	Identifier	hProcessSnap		4829556	0					
ANR	4829620	ReturnStatement	return FALSE ;	376:2:10175:10187	4829556	1	True				
ANR	4829621	Identifier	FALSE		4829556	0					
ANR	4829622	DoStatement	do		4829556	7					
ANR	4829623	CompoundStatement		29:4:638:638	4829556	0					
ANR	4829624	IfStatement	if ( pe32 . th32ProcessID == pid )		4829556	0					
ANR	4829625	Condition	pe32 . th32ProcessID == pid	382:7:10283:10307	4829556	0	True				
ANR	4829626	EqualityExpression	pe32 . th32ProcessID == pid		4829556	0		==			
ANR	4829627	MemberAccess	pe32 . th32ProcessID		4829556	0					
ANR	4829628	Identifier	pe32		4829556	0					
ANR	4829629	Identifier	th32ProcessID		4829556	1					
ANR	4829630	Identifier	pid		4829556	1					
ANR	4829631	CompoundStatement		30:35:675:675	4829556	1					
ANR	4829632	ExpressionStatement	result = TRUE	384:3:10340:10353	4829556	0	True				
ANR	4829633	AssignmentExpression	result = TRUE		4829556	0		=			
ANR	4829634	Identifier	result		4829556	0					
ANR	4829635	Identifier	TRUE		4829556	1					
ANR	4829636	BreakStatement	break ;	385:3:10358:10363	4829556	1	True				
ANR	4829637	Condition	"Process32Next ( hProcessSnap , & pe32 )"	387:10:10379:10414	4829556	1	True				
ANR	4829638	CallExpression	"Process32Next ( hProcessSnap , & pe32 )"		4829556	0					
ANR	4829639	Callee	Process32Next		4829556	0					
ANR	4829640	Identifier	Process32Next		4829556	0					
ANR	4829641	ArgumentList	hProcessSnap		4829556	1					
ANR	4829642	Argument	hProcessSnap		4829556	0					
ANR	4829643	Identifier	hProcessSnap		4829556	0					
ANR	4829644	Argument	& pe32		4829556	1					
ANR	4829645	UnaryOperationExpression	& pe32		4829556	0					
ANR	4829646	UnaryOperator	&		4829556	0					
ANR	4829647	Identifier	pe32		4829556	1					
ANR	4829648	ExpressionStatement	CloseHandle ( hProcessSnap )	390:2:10473:10500	4829556	8	True				
ANR	4829649	CallExpression	CloseHandle ( hProcessSnap )		4829556	0					
ANR	4829650	Callee	CloseHandle		4829556	0					
ANR	4829651	Identifier	CloseHandle		4829556	0					
ANR	4829652	ArgumentList	hProcessSnap		4829556	1					
ANR	4829653	Argument	hProcessSnap		4829556	0					
ANR	4829654	Identifier	hProcessSnap		4829556	0					
ANR	4829655	ReturnStatement	return result ;	392:2:10507:10520	4829556	9	True				
ANR	4829656	Identifier	result		4829556	0					
ANR	4829657	ReturnType	int		4829556	1					
ANR	4829658	Identifier	CSysinfo :: GetProcessEntry		4829556	2					
ANR	4829659	ParameterList	"pid_t pid , PROCESSENTRY32 & pe32"		4829556	3					
ANR	4829660	Parameter	pid_t pid	353:26:9601:9609	4829556	0	True				
ANR	4829661	ParameterType	pid_t		4829556	0					
ANR	4829662	Identifier	pid		4829556	1					
ANR	4829663	Parameter	PROCESSENTRY32 & pe32	353:37:9612:9631	4829556	1	True				
ANR	4829664	ParameterType	PROCESSENTRY32 &		4829556	0					
ANR	4829665	Identifier	pe32		4829556	1					
ANR	4829666	CFGEntryNode	ENTRY		4829556		True				
ANR	4829667	CFGExitNode	EXIT		4829556		True				
ANR	4829668	Symbol	pe32		4829556						
ANR	4829669	Symbol	CreateToolhelp32Snapshot		4829556						
ANR	4829670	Symbol	& pe32		4829556						
ANR	4829671	Symbol	pe32 . dwSize		4829556						
ANR	4829672	Symbol	TRUE		4829556						
ANR	4829673	Symbol	pid		4829556						
ANR	4829674	Symbol	INVALID_HANDLE_VALUE		4829556						
ANR	4829675	Symbol	result		4829556						
ANR	4829676	Symbol	pe32 . th32ProcessID		4829556						
ANR	4829677	Symbol	TH32CS_SNAPPROCESS		4829556						
ANR	4829678	Symbol	hProcessSnap		4829556						
ANR	4829679	Symbol	Process32First		4829556						
ANR	4829680	Symbol	FALSE		4829556						
ANR	4829681	Symbol	Process32Next		4829556						
ANR	4829682	Function	CSysinfo :: Explore	396:0:10531:10720							
ANR	4829683	FunctionDef	CSysinfo :: Explore (pid_t pid)		4829682	0					
ANR	4829684	CompoundStatement		397:0:10565:10720	4829682	0					
ANR	4829685	IdentifierDeclStatement	DWORD * block ;	398:1:10568:10580	4829682	0	True				
ANR	4829686	IdentifierDecl	* block		4829682	0					
ANR	4829687	IdentifierDeclType	DWORD *		4829682	0					
ANR	4829688	Identifier	block		4829682	1					
ANR	4829689	IdentifierDeclStatement	int i ;	399:1:10583:10588	4829682	1	True				
ANR	4829690	IdentifierDecl	i		4829682	0					
ANR	4829691	IdentifierDeclType	int		4829682	0					
ANR	4829692	Identifier	i		4829682	1					
ANR	4829693	ExpressionStatement	Refresh ( )	401:1:10592:10601	4829682	2	True				
ANR	4829694	CallExpression	Refresh ( )		4829682	0					
ANR	4829695	Callee	Refresh		4829682	0					
ANR	4829696	Identifier	Refresh		4829682	0					
ANR	4829697	ArgumentList			4829682	1					
ANR	4829698	ExpressionStatement	block = FindBlock ( pid )	402:1:10604:10627	4829682	3	True				
ANR	4829699	AssignmentExpression	block = FindBlock ( pid )		4829682	0		=			
ANR	4829700	Identifier	block		4829682	0					
ANR	4829701	CallExpression	FindBlock ( pid )		4829682	1					
ANR	4829702	Callee	FindBlock		4829682	0					
ANR	4829703	Identifier	FindBlock		4829682	0					
ANR	4829704	ArgumentList	pid		4829682	1					
ANR	4829705	Argument	pid		4829682	0					
ANR	4829706	Identifier	pid		4829682	0					
ANR	4829707	IfStatement	if ( ! block )		4829682	4					
ANR	4829708	Condition	! block	403:5:10634:10639	4829682	0	True				
ANR	4829709	UnaryOperationExpression	! block		4829682	0					
ANR	4829710	UnaryOperator	!		4829682	0					
ANR	4829711	Identifier	block		4829682	1					
ANR	4829712	ReturnStatement	return ;	404:2:10644:10650	4829682	1	True				
ANR	4829713	ForStatement	for ( i = 0 ; i < 43 ; i ++ )		4829682	5					
ANR	4829714	ForInit	i = 0 ;	406:6:10659:10662	4829682	0	True				
ANR	4829715	AssignmentExpression	i = 0		4829682	0		=			
ANR	4829716	Identifier	i		4829682	0					
ANR	4829717	PrimaryExpression	0		4829682	1					
ANR	4829718	Condition	i < 43	406:10:10663:10666	4829682	1	True				
ANR	4829719	RelationalExpression	i < 43		4829682	0		<			
ANR	4829720	Identifier	i		4829682	0					
ANR	4829721	PrimaryExpression	43		4829682	1					
ANR	4829722	PostIncDecOperationExpression	i ++	406:15:10668:10670	4829682	2	True				
ANR	4829723	Identifier	i		4829682	0					
ANR	4829724	IncDec	++		4829682	1					
ANR	4829725	CompoundStatement		10:20:107:107	4829682	3					
ANR	4829726	ExpressionStatement	"printf ( ""Offset %d - %d \\n"" , i , block [ i ] )"	407:2:10677:10715	4829682	0	True				
ANR	4829727	CallExpression	"printf ( ""Offset %d - %d \\n"" , i , block [ i ] )"		4829682	0					
ANR	4829728	Callee	printf		4829682	0					
ANR	4829729	Identifier	printf		4829682	0					
ANR	4829730	ArgumentList	"""Offset %d - %d \\n"""		4829682	1					
ANR	4829731	Argument	"""Offset %d - %d \\n"""		4829682	0					
ANR	4829732	PrimaryExpression	"""Offset %d - %d \\n"""		4829682	0					
ANR	4829733	Argument	i		4829682	1					
ANR	4829734	Identifier	i		4829682	0					
ANR	4829735	Argument	block [ i ]		4829682	2					
ANR	4829736	ArrayIndexing	block [ i ]		4829682	0					
ANR	4829737	Identifier	block		4829682	0					
ANR	4829738	Identifier	i		4829682	1					
ANR	4829739	ReturnType	void		4829682	1					
ANR	4829740	Identifier	CSysinfo :: Explore		4829682	2					
ANR	4829741	ParameterList	pid_t pid		4829682	3					
ANR	4829742	Parameter	pid_t pid	396:23:10554:10562	4829682	0	True				
ANR	4829743	ParameterType	pid_t		4829682	0					
ANR	4829744	Identifier	pid		4829682	1					
ANR	4829745	CFGEntryNode	ENTRY		4829682		True				
ANR	4829746	CFGExitNode	EXIT		4829682		True				
ANR	4829747	Symbol	* i		4829682						
ANR	4829748	Symbol	i		4829682						
ANR	4829749	Symbol	pid		4829682						
ANR	4829750	Symbol	block		4829682						
ANR	4829751	Symbol	FindBlock		4829682						
ANR	4829752	Symbol	* block		4829682						
ANR	4829753	Function	CSysinfo :: GetTIDs	416:0:10837:12280							
ANR	4829754	FunctionDef	"CSysinfo :: GetTIDs (pid_t pid , ExtArray < DWORD > & tids)"		4829753	0					
ANR	4829755	CompoundStatement		417:0:10895:12280	4829753	0					
ANR	4829756	IdentifierDeclStatement	DWORD s = 0 ;	418:1:10898:10909	4829753	0	True				
ANR	4829757	IdentifierDecl	s = 0		4829753	0					
ANR	4829758	IdentifierDeclType	DWORD		4829753	0					
ANR	4829759	Identifier	s		4829753	1					
ANR	4829760	AssignmentExpression	s = 0		4829753	2		=			
ANR	4829761	Identifier	s		4829753	0					
ANR	4829762	PrimaryExpression	0		4829753	1					
ANR	4829763	IfStatement	if ( ! IsWin2k )		4829753	1					
ANR	4829764	Condition	! IsWin2k	420:6:10918:10925	4829753	0	True				
ANR	4829765	UnaryOperationExpression	! IsWin2k		4829753	0					
ANR	4829766	UnaryOperator	!		4829753	0					
ANR	4829767	Identifier	IsWin2k		4829753	1					
ANR	4829768	CompoundStatement		6:2:109:121	4829753	1					
ANR	4829769	IdentifierDeclStatement	DWORD * block ;	422:2:11005:11017	4829753	0	True				
ANR	4829770	IdentifierDecl	* block		4829753	0					
ANR	4829771	IdentifierDeclType	DWORD *		4829753	0					
ANR	4829772	Identifier	block		4829753	1					
ANR	4829773	ExpressionStatement	Refresh ( )	423:2:11021:11030	4829753	1	True				
ANR	4829774	CallExpression	Refresh ( )		4829753	0					
ANR	4829775	Callee	Refresh		4829753	0					
ANR	4829776	Identifier	Refresh		4829753	0					
ANR	4829777	ArgumentList			4829753	1					
ANR	4829778	ExpressionStatement	block = FindBlock ( pid )	424:2:11034:11057	4829753	2	True				
ANR	4829779	AssignmentExpression	block = FindBlock ( pid )		4829753	0		=			
ANR	4829780	Identifier	block		4829753	0					
ANR	4829781	CallExpression	FindBlock ( pid )		4829753	1					
ANR	4829782	Callee	FindBlock		4829753	0					
ANR	4829783	Identifier	FindBlock		4829753	0					
ANR	4829784	ArgumentList	pid		4829753	1					
ANR	4829785	Argument	pid		4829753	0					
ANR	4829786	Identifier	pid		4829753	0					
ANR	4829787	IfStatement	if ( ! block )		4829753	3					
ANR	4829788	Condition	! block	425:6:11065:11070	4829753	0	True				
ANR	4829789	UnaryOperationExpression	! block		4829753	0					
ANR	4829790	UnaryOperator	!		4829753	0					
ANR	4829791	Identifier	block		4829753	1					
ANR	4829792	ReturnStatement	return 0 ;	426:3:11076:11084	4829753	1	True				
ANR	4829793	PrimaryExpression	0		4829753	0					
ANR	4829794	ForStatement	for ( s = 0 ; s < * ( block + 1 ) ; s ++ )		4829753	4					
ANR	4829795	ForInit	s = 0 ;	427:7:11093:11096	4829753	0	True				
ANR	4829796	AssignmentExpression	s = 0		4829753	0		=			
ANR	4829797	Identifier	s		4829753	0					
ANR	4829798	PrimaryExpression	0		4829753	1					
ANR	4829799	Condition	s < * ( block + 1 )	427:12:11098:11111	4829753	1	True				
ANR	4829800	RelationalExpression	s < * ( block + 1 )		4829753	0		<			
ANR	4829801	Identifier	s		4829753	0					
ANR	4829802	UnaryOperationExpression	* ( block + 1 )		4829753	1					
ANR	4829803	UnaryOperator	*		4829753	0					
ANR	4829804	AdditiveExpression	block + 1		4829753	1		+			
ANR	4829805	Identifier	block		4829753	0					
ANR	4829806	PrimaryExpression	1		4829753	1					
ANR	4829807	PostIncDecOperationExpression	s ++	427:28:11114:11116	4829753	2	True				
ANR	4829808	Identifier	s		4829753	0					
ANR	4829809	IncDec	++		4829753	1					
ANR	4829810	CompoundStatement		12:2:225:225	4829753	3					
ANR	4829811	ExpressionStatement	tids [ s ] = * ( block + 43 + s * 16 )	429:3:11126:11152	4829753	0	True				
ANR	4829812	AssignmentExpression	tids [ s ] = * ( block + 43 + s * 16 )		4829753	0		=			
ANR	4829813	ArrayIndexing	tids [ s ]		4829753	0					
ANR	4829814	Identifier	tids		4829753	0					
ANR	4829815	Identifier	s		4829753	1					
ANR	4829816	UnaryOperationExpression	* ( block + 43 + s * 16 )		4829753	1					
ANR	4829817	UnaryOperator	*		4829753	0					
ANR	4829818	AdditiveExpression	block + 43 + s * 16		4829753	1		+			
ANR	4829819	Identifier	block		4829753	0					
ANR	4829820	AdditiveExpression	43 + s * 16		4829753	1		+			
ANR	4829821	PrimaryExpression	43		4829753	0					
ANR	4829822	MultiplicativeExpression	s * 16		4829753	1		*			
ANR	4829823	Identifier	s		4829753	0					
ANR	4829824	PrimaryExpression	16		4829753	1					
ANR	4829825	ReturnStatement	return ( int ) s ;	432:2:11222:11235	4829753	5	True				
ANR	4829826	CastExpression	( int ) s		4829753	0					
ANR	4829827	CastTarget	int		4829753	0					
ANR	4829828	Identifier	s		4829753	1					
ANR	4829829	IdentifierDeclStatement	HANDLE hThreadSnap = NULL ;	437:1:11317:11349	4829753	2	True				
ANR	4829830	IdentifierDecl	hThreadSnap = NULL		4829753	0					
ANR	4829831	IdentifierDeclType	HANDLE		4829753	0					
ANR	4829832	Identifier	hThreadSnap		4829753	1					
ANR	4829833	AssignmentExpression	hThreadSnap = NULL		4829753	2		=			
ANR	4829834	Identifier	NULL		4829753	0					
ANR	4829835	Identifier	NULL		4829753	1					
ANR	4829836	IdentifierDeclStatement	THREADENTRY32 te32 = { 0 } ;	438:4:11356:11387	4829753	3	True				
ANR	4829837	IdentifierDecl	te32 = { 0 }		4829753	0					
ANR	4829838	IdentifierDeclType	THREADENTRY32		4829753	0					
ANR	4829839	Identifier	te32		4829753	1					
ANR	4829840	AssignmentExpression	te32 = { 0 }		4829753	2		=			
ANR	4829841	Identifier	te32		4829753	0					
ANR	4829842	InitializerList	0		4829753	1					
ANR	4829843	PrimaryExpression	0		4829753	0					
ANR	4829844	ExpressionStatement	"hThreadSnap = CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , 0 )"	442:4:11461:11521	4829753	4	True				
ANR	4829845	AssignmentExpression	"hThreadSnap = CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , 0 )"		4829753	0		=			
ANR	4829846	Identifier	hThreadSnap		4829753	0					
ANR	4829847	CallExpression	"CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , 0 )"		4829753	1					
ANR	4829848	Callee	CreateToolhelp32Snapshot		4829753	0					
ANR	4829849	Identifier	CreateToolhelp32Snapshot		4829753	0					
ANR	4829850	ArgumentList	TH32CS_SNAPTHREAD		4829753	1					
ANR	4829851	Argument	TH32CS_SNAPTHREAD		4829753	0					
ANR	4829852	Identifier	TH32CS_SNAPTHREAD		4829753	0					
ANR	4829853	Argument	0		4829753	1					
ANR	4829854	PrimaryExpression	0		4829753	0					
ANR	4829855	IfStatement	if ( hThreadSnap == ( HANDLE ) - 1 )		4829753	5					
ANR	4829856	Condition	hThreadSnap == ( HANDLE ) - 1	443:8:11532:11556	4829753	0	True				
ANR	4829857	EqualityExpression	hThreadSnap == ( HANDLE ) - 1		4829753	0		==			
ANR	4829858	Identifier	hThreadSnap		4829753	0					
ANR	4829859	CastExpression	( HANDLE ) - 1		4829753	1					
ANR	4829860	CastTarget	HANDLE		4829753	0					
ANR	4829861	UnaryOperationExpression	- 1		4829753	1					
ANR	4829862	UnaryOperator	-		4829753	0					
ANR	4829863	PrimaryExpression	1		4829753	1					
ANR	4829864	CompoundStatement		28:1:665:665	4829753	1					
ANR	4829865	ReturnStatement	return 0 ;	446:8:11635:11643	4829753	0	True				
ANR	4829866	PrimaryExpression	0		4829753	0					
ANR	4829867	ExpressionStatement	te32 . dwSize = sizeof ( THREADENTRY32 )	451:4:11714:11749	4829753	6	True				
ANR	4829868	AssignmentExpression	te32 . dwSize = sizeof ( THREADENTRY32 )		4829753	0		=			
ANR	4829869	MemberAccess	te32 . dwSize		4829753	0					
ANR	4829870	Identifier	te32		4829753	0					
ANR	4829871	Identifier	dwSize		4829753	1					
ANR	4829872	SizeofExpression	sizeof ( THREADENTRY32 )		4829753	1					
ANR	4829873	Sizeof	sizeof		4829753	0					
ANR	4829874	SizeofOperand	THREADENTRY32		4829753	1					
ANR	4829875	IfStatement	"if ( Thread32First ( hThreadSnap , & te32 ) )"		4829753	7					
ANR	4829876	Condition	"Thread32First ( hThreadSnap , & te32 )"	456:8:11917:11949	4829753	0	True				
ANR	4829877	CallExpression	"Thread32First ( hThreadSnap , & te32 )"		4829753	0					
ANR	4829878	Callee	Thread32First		4829753	0					
ANR	4829879	Identifier	Thread32First		4829753	0					
ANR	4829880	ArgumentList	hThreadSnap		4829753	1					
ANR	4829881	Argument	hThreadSnap		4829753	0					
ANR	4829882	Identifier	hThreadSnap		4829753	0					
ANR	4829883	Argument	& te32		4829753	1					
ANR	4829884	UnaryOperationExpression	& te32		4829753	0					
ANR	4829885	UnaryOperator	&		4829753	0					
ANR	4829886	Identifier	te32		4829753	1					
ANR	4829887	CompoundStatement		41:4:1061:1061	4829753	1					
ANR	4829888	DoStatement	do		4829753	0					
ANR	4829889	CompoundStatement		43:8:1084:1084	4829753	0					
ANR	4829890	IfStatement	if ( te32 . th32OwnerProcessID == pid )		4829753	0					
ANR	4829891	Condition	te32 . th32OwnerProcessID == pid	460:16:11999:12028	4829753	0	True				
ANR	4829892	EqualityExpression	te32 . th32OwnerProcessID == pid		4829753	0		==			
ANR	4829893	MemberAccess	te32 . th32OwnerProcessID		4829753	0					
ANR	4829894	Identifier	te32		4829753	0					
ANR	4829895	Identifier	th32OwnerProcessID		4829753	1					
ANR	4829896	Identifier	pid		4829753	1					
ANR	4829897	CompoundStatement		45:12:1148:1148	4829753	1					
ANR	4829898	ExpressionStatement	tids [ s ] = te32 . th32ThreadID	462:4:12051:12078	4829753	0	True				
ANR	4829899	AssignmentExpression	tids [ s ] = te32 . th32ThreadID		4829753	0		=			
ANR	4829900	ArrayIndexing	tids [ s ]		4829753	0					
ANR	4829901	Identifier	tids		4829753	0					
ANR	4829902	Identifier	s		4829753	1					
ANR	4829903	MemberAccess	te32 . th32ThreadID		4829753	1					
ANR	4829904	Identifier	te32		4829753	0					
ANR	4829905	Identifier	th32ThreadID		4829753	1					
ANR	4829906	ExpressionStatement	s ++	463:4:12085:12088	4829753	1	True				
ANR	4829907	PostIncDecOperationExpression	s ++		4829753	0					
ANR	4829908	Identifier	s		4829753	0					
ANR	4829909	IncDec	++		4829753	1					
ANR	4829910	Condition	"Thread32Next ( hThreadSnap , & te32 )"	466:15:12131:12162	4829753	1	True				
ANR	4829911	CallExpression	"Thread32Next ( hThreadSnap , & te32 )"		4829753	0					
ANR	4829912	Callee	Thread32Next		4829753	0					
ANR	4829913	Identifier	Thread32Next		4829753	0					
ANR	4829914	ArgumentList	hThreadSnap		4829753	1					
ANR	4829915	Argument	hThreadSnap		4829753	0					
ANR	4829916	Identifier	hThreadSnap		4829753	0					
ANR	4829917	Argument	& te32		4829753	1					
ANR	4829918	UnaryOperationExpression	& te32		4829753	0					
ANR	4829919	UnaryOperator	&		4829753	0					
ANR	4829920	Identifier	te32		4829753	1					
ANR	4829921	ExpressionStatement	CloseHandle ( hThreadSnap )	470:1:12232:12257	4829753	8	True				
ANR	4829922	CallExpression	CloseHandle ( hThreadSnap )		4829753	0					
ANR	4829923	Callee	CloseHandle		4829753	0					
ANR	4829924	Identifier	CloseHandle		4829753	0					
ANR	4829925	ArgumentList	hThreadSnap		4829753	1					
ANR	4829926	Argument	hThreadSnap		4829753	0					
ANR	4829927	Identifier	hThreadSnap		4829753	0					
ANR	4829928	ReturnStatement	return ( int ) s ;	472:1:12263:12276	4829753	9	True				
ANR	4829929	CastExpression	( int ) s		4829753	0					
ANR	4829930	CastTarget	int		4829753	0					
ANR	4829931	Identifier	s		4829753	1					
ANR	4829932	ReturnType	int		4829753	1					
ANR	4829933	Identifier	CSysinfo :: GetTIDs		4829753	2					
ANR	4829934	ParameterList	"pid_t pid , ExtArray < DWORD > & tids"		4829753	3					
ANR	4829935	Parameter	pid_t pid	416:23:10860:10868	4829753	0	True				
ANR	4829936	ParameterType	pid_t		4829753	0					
ANR	4829937	Identifier	pid		4829753	1					
ANR	4829938	Parameter	ExtArray < DWORD > & tids	416:34:10871:10892	4829753	1	True				
ANR	4829939	ParameterType	ExtArray < DWORD > &		4829753	0					
ANR	4829940	Identifier	tids		4829753	1					
ANR	4829941	CFGEntryNode	ENTRY		4829753		True				
ANR	4829942	CFGExitNode	EXIT		4829753		True				
ANR	4829943	Symbol	CreateToolhelp32Snapshot		4829753						
ANR	4829944	Symbol	NULL		4829753						
ANR	4829945	Symbol	hThreadSnap		4829753						
ANR	4829946	Symbol	* ( block + 43 + s * 16 )		4829753						
ANR	4829947	Symbol	te32		4829753						
ANR	4829948	Symbol	Thread32Next		4829753						
ANR	4829949	Symbol	pid		4829753						
ANR	4829950	Symbol	FindBlock		4829753						
ANR	4829951	Symbol	te32 . th32ThreadID		4829753						
ANR	4829952	Symbol	* block		4829753						
ANR	4829953	Symbol	tids		4829753						
ANR	4829954	Symbol	s		4829753						
ANR	4829955	Symbol	IsWin2k		4829753						
ANR	4829956	Symbol	* ( block + 1 )		4829753						
ANR	4829957	Symbol	te32 . dwSize		4829753						
ANR	4829958	Symbol	TH32CS_SNAPTHREAD		4829753						
ANR	4829959	Symbol	te32 . th32OwnerProcessID		4829753						
ANR	4829960	Symbol	block		4829753						
ANR	4829961	Symbol	& te32		4829753						
ANR	4829962	Symbol	* s		4829753						
ANR	4829963	Symbol	Thread32First		4829753						
ANR	4829964	Symbol	* tids		4829753						
ANR	4829965	Function	CSysinfo :: FindThreadProcess	475:0:12283:12632							
ANR	4829966	FunctionDef	CSysinfo :: FindThreadProcess (DWORD find_tid)		4829965	0					
ANR	4829967	CompoundStatement		476:0:12334:12632	4829965	0					
ANR	4829968	IdentifierDeclStatement	ExtArray < pid_t > pids ( 256 ) ;	477:1:12337:12362	4829965	0	True				
ANR	4829969	IdentifierDecl	pids ( 256 )		4829965	0					
ANR	4829970	IdentifierDeclType	ExtArray < pid_t >		4829965	0					
ANR	4829971	Identifier	pids		4829965	1					
ANR	4829972	PrimaryExpression	256		4829965	2					
ANR	4829973	IdentifierDeclStatement	ExtArray < DWORD > tids ;	478:1:12365:12385	4829965	1	True				
ANR	4829974	IdentifierDecl	tids		4829965	0					
ANR	4829975	IdentifierDeclType	ExtArray < DWORD >		4829965	0					
ANR	4829976	Identifier	tids		4829965	1					
ANR	4829977	IdentifierDeclStatement	int num_pids ;	479:1:12388:12400	4829965	2	True				
ANR	4829978	IdentifierDecl	num_pids		4829965	0					
ANR	4829979	IdentifierDeclType	int		4829965	0					
ANR	4829980	Identifier	num_pids		4829965	1					
ANR	4829981	IdentifierDeclStatement	int num_tids ;	480:1:12403:12415	4829965	3	True				
ANR	4829982	IdentifierDecl	num_tids		4829965	0					
ANR	4829983	IdentifierDeclType	int		4829965	0					
ANR	4829984	Identifier	num_tids		4829965	1					
ANR	4829985	ExpressionStatement	num_pids = GetPIDs ( pids )	482:1:12420:12445	4829965	4	True				
ANR	4829986	AssignmentExpression	num_pids = GetPIDs ( pids )		4829965	0		=			
ANR	4829987	Identifier	num_pids		4829965	0					
ANR	4829988	CallExpression	GetPIDs ( pids )		4829965	1					
ANR	4829989	Callee	GetPIDs		4829965	0					
ANR	4829990	Identifier	GetPIDs		4829965	0					
ANR	4829991	ArgumentList	pids		4829965	1					
ANR	4829992	Argument	pids		4829965	0					
ANR	4829993	Identifier	pids		4829965	0					
ANR	4829994	ForStatement	for ( int s = 0 ; s < num_pids ; s ++ )		4829965	5					
ANR	4829995	ForInit	int s = 0 ;	483:6:12453:12460	4829965	0	True				
ANR	4829996	IdentifierDeclStatement	int s = 0 ;		4829965	0					
ANR	4829997	IdentifierDecl	s = 0		4829965	0					
ANR	4829998	IdentifierDeclType	int		4829965	0					
ANR	4829999	Identifier	s		4829965	1					
ANR	4830000	AssignmentExpression	s = 0		4829965	2		=			
ANR	4830001	Identifier	s		4829965	0					
ANR	4830002	PrimaryExpression	0		4829965	1					
ANR	4830003	Condition	s < num_pids	483:15:12462:12471	4829965	1	True				
ANR	4830004	RelationalExpression	s < num_pids		4829965	0		<			
ANR	4830005	Identifier	s		4829965	0					
ANR	4830006	Identifier	num_pids		4829965	1					
ANR	4830007	PostIncDecOperationExpression	s ++	483:27:12474:12476	4829965	2	True				
ANR	4830008	Identifier	s		4829965	0					
ANR	4830009	IncDec	++		4829965	1					
ANR	4830010	CompoundStatement		9:1:145:145	4829965	3					
ANR	4830011	ExpressionStatement	"num_tids = GetTIDs ( pids [ s ] , tids )"	485:2:12484:12518	4829965	0	True				
ANR	4830012	AssignmentExpression	"num_tids = GetTIDs ( pids [ s ] , tids )"		4829965	0		=			
ANR	4830013	Identifier	num_tids		4829965	0					
ANR	4830014	CallExpression	"GetTIDs ( pids [ s ] , tids )"		4829965	1					
ANR	4830015	Callee	GetTIDs		4829965	0					
ANR	4830016	Identifier	GetTIDs		4829965	0					
ANR	4830017	ArgumentList	pids [ s ]		4829965	1					
ANR	4830018	Argument	pids [ s ]		4829965	0					
ANR	4830019	ArrayIndexing	pids [ s ]		4829965	0					
ANR	4830020	Identifier	pids		4829965	0					
ANR	4830021	Identifier	s		4829965	1					
ANR	4830022	Argument	tids		4829965	1					
ANR	4830023	Identifier	tids		4829965	0					
ANR	4830024	ForStatement	for ( int l = 0 ; l < num_tids ; l ++ )		4829965	1					
ANR	4830025	ForInit	int l = 0 ;	486:7:12527:12534	4829965	0	True				
ANR	4830026	IdentifierDeclStatement	int l = 0 ;		4829965	0					
ANR	4830027	IdentifierDecl	l = 0		4829965	0					
ANR	4830028	IdentifierDeclType	int		4829965	0					
ANR	4830029	Identifier	l		4829965	1					
ANR	4830030	AssignmentExpression	l = 0		4829965	2		=			
ANR	4830031	Identifier	l		4829965	0					
ANR	4830032	PrimaryExpression	0		4829965	1					
ANR	4830033	Condition	l < num_tids	486:16:12536:12545	4829965	1	True				
ANR	4830034	RelationalExpression	l < num_tids		4829965	0		<			
ANR	4830035	Identifier	l		4829965	0					
ANR	4830036	Identifier	num_tids		4829965	1					
ANR	4830037	PostIncDecOperationExpression	l ++	486:28:12548:12550	4829965	2	True				
ANR	4830038	Identifier	l		4829965	0					
ANR	4830039	IncDec	++		4829965	1					
ANR	4830040	CompoundStatement		12:2:220:220	4829965	3					
ANR	4830041	IfStatement	if ( find_tid == tids [ l ] )		4829965	0					
ANR	4830042	Condition	find_tid == tids [ l ]	488:7:12564:12582	4829965	0	True				
ANR	4830043	EqualityExpression	find_tid == tids [ l ]		4829965	0		==			
ANR	4830044	Identifier	find_tid		4829965	0					
ANR	4830045	ArrayIndexing	tids [ l ]		4829965	1					
ANR	4830046	Identifier	tids		4829965	0					
ANR	4830047	Identifier	l		4829965	1					
ANR	4830048	ReturnStatement	return pids [ s ] ;	489:4:12589:12603	4829965	1	True				
ANR	4830049	ArrayIndexing	pids [ s ]		4829965	0					
ANR	4830050	Identifier	pids		4829965	0					
ANR	4830051	Identifier	s		4829965	1					
ANR	4830052	ReturnStatement	return 0xffffffff ;	492:1:12613:12630	4829965	6	True				
ANR	4830053	PrimaryExpression	0xffffffff		4829965	0					
ANR	4830054	ReturnType	pid_t		4829965	1					
ANR	4830055	Identifier	CSysinfo :: FindThreadProcess		4829965	2					
ANR	4830056	ParameterList	DWORD find_tid		4829965	3					
ANR	4830057	Parameter	DWORD find_tid	475:35:12318:12331	4829965	0	True				
ANR	4830058	ParameterType	DWORD		4829965	0					
ANR	4830059	Identifier	find_tid		4829965	1					
ANR	4830060	CFGEntryNode	ENTRY		4829965		True				
ANR	4830061	CFGExitNode	EXIT		4829965		True				
ANR	4830062	Symbol	find_tid		4829965						
ANR	4830063	Symbol	GetPIDs		4829965						
ANR	4830064	Symbol	GetTIDs		4829965						
ANR	4830065	Symbol	num_pids		4829965						
ANR	4830066	Symbol	l		4829965						
ANR	4830067	Symbol	tids		4829965						
ANR	4830068	Symbol	s		4829965						
ANR	4830069	Symbol	num_tids		4829965						
ANR	4830070	Symbol	* l		4829965						
ANR	4830071	Symbol	pids		4829965						
ANR	4830072	Symbol	* pids		4829965						
ANR	4830073	Symbol	* s		4829965						
ANR	4830074	Symbol	* tids		4829965						
ANR	4830075	Function	CSysinfo :: OpenThread	495:0:12635:12916							
ANR	4830076	FunctionDef	"CSysinfo :: OpenThread (DWORD tid , DWORD accessflag)"		4830075	0					
ANR	4830077	CompoundStatement		496:0:12693:12916	4830075	0					
ANR	4830078	IdentifierDeclStatement	HANDLE hThread = NULL ;	497:1:12696:12717	4830075	0	True				
ANR	4830079	IdentifierDecl	hThread = NULL		4830075	0					
ANR	4830080	IdentifierDeclType	HANDLE		4830075	0					
ANR	4830081	Identifier	hThread		4830075	1					
ANR	4830082	AssignmentExpression	hThread = NULL		4830075	2		=			
ANR	4830083	Identifier	NULL		4830075	0					
ANR	4830084	Identifier	NULL		4830075	1					
ANR	4830085	IdentifierDeclStatement	"DWORD struct1 [ ] = { 0x18 , 0 , 0 , 0 , 0 , 0 } ;"	498:1:12720:12759	4830075	1	True				
ANR	4830086	IdentifierDecl	"struct1 [ ] = { 0x18 , 0 , 0 , 0 , 0 , 0 }"		4830075	0					
ANR	4830087	IdentifierDeclType	DWORD [ ]		4830075	0					
ANR	4830088	Identifier	struct1		4830075	1					
ANR	4830089	AssignmentExpression	"struct1 [ ] = { 0x18 , 0 , 0 , 0 , 0 , 0 }"		4830075	2		=			
ANR	4830090	Identifier	struct1		4830075	0					
ANR	4830091	InitializerList	0x18		4830075	1					
ANR	4830092	PrimaryExpression	0x18		4830075	0					
ANR	4830093	PrimaryExpression	0		4830075	1					
ANR	4830094	PrimaryExpression	0		4830075	2					
ANR	4830095	PrimaryExpression	0		4830075	3					
ANR	4830096	PrimaryExpression	0		4830075	4					
ANR	4830097	PrimaryExpression	0		4830075	5					
ANR	4830098	IdentifierDeclStatement	"DWORD struct2 [ ] = { 0 , tid } ;"	499:1:12782:12807	4830075	2	True				
ANR	4830099	IdentifierDecl	"struct2 [ ] = { 0 , tid }"		4830075	0					
ANR	4830100	IdentifierDeclType	DWORD [ ]		4830075	0					
ANR	4830101	Identifier	struct2		4830075	1					
ANR	4830102	AssignmentExpression	"struct2 [ ] = { 0 , tid }"		4830075	2		=			
ANR	4830103	Identifier	struct2		4830075	0					
ANR	4830104	InitializerList	0		4830075	1					
ANR	4830105	PrimaryExpression	0		4830075	0					
ANR	4830106	Identifier	tid		4830075	1					
ANR	4830107	ExpressionStatement	"NtOpenThread ( & hThread , accessflag , struct1 , struct2 )"	500:1:12822:12896	4830075	3	True				
ANR	4830108	CallExpression	"NtOpenThread ( & hThread , accessflag , struct1 , struct2 )"		4830075	0					
ANR	4830109	Callee	NtOpenThread		4830075	0					
ANR	4830110	Identifier	NtOpenThread		4830075	0					
ANR	4830111	ArgumentList	& hThread		4830075	1					
ANR	4830112	Argument	& hThread		4830075	0					
ANR	4830113	UnaryOperationExpression	& hThread		4830075	0					
ANR	4830114	UnaryOperator	&		4830075	0					
ANR	4830115	Identifier	hThread		4830075	1					
ANR	4830116	Argument	accessflag		4830075	1					
ANR	4830117	Identifier	accessflag		4830075	0					
ANR	4830118	Argument	struct1		4830075	2					
ANR	4830119	Identifier	struct1		4830075	0					
ANR	4830120	Argument	struct2		4830075	3					
ANR	4830121	Identifier	struct2		4830075	0					
ANR	4830122	ReturnStatement	return hThread ;	505:1:12900:12914	4830075	4	True				
ANR	4830123	Identifier	hThread		4830075	0					
ANR	4830124	ReturnType	HANDLE		4830075	1					
ANR	4830125	Identifier	CSysinfo :: OpenThread		4830075	2					
ANR	4830126	ParameterList	"DWORD tid , DWORD accessflag"		4830075	3					
ANR	4830127	Parameter	DWORD tid	495:29:12664:12672	4830075	0	True				
ANR	4830128	ParameterType	DWORD		4830075	0					
ANR	4830129	Identifier	tid		4830075	1					
ANR	4830130	Parameter	DWORD accessflag	495:40:12675:12690	4830075	1	True				
ANR	4830131	ParameterType	DWORD		4830075	0					
ANR	4830132	Identifier	accessflag		4830075	1					
ANR	4830133	CFGEntryNode	ENTRY		4830075		True				
ANR	4830134	CFGExitNode	EXIT		4830075		True				
ANR	4830135	Symbol	NULL		4830075						
ANR	4830136	Symbol	& hThread		4830075						
ANR	4830137	Symbol	accessflag		4830075						
ANR	4830138	Symbol	struct2		4830075						
ANR	4830139	Symbol	struct1		4830075						
ANR	4830140	Symbol	hThread		4830075						
ANR	4830141	Symbol	tid		4830075						
ANR	4830142	Function	CSysinfo :: CloseThread	508:0:12919:12985							
ANR	4830143	FunctionDef	CSysinfo :: CloseThread (HANDLE hthread)		4830142	0					
ANR	4830144	CompoundStatement		509:0:12963:12985	4830142	0					
ANR	4830145	ExpressionStatement	NtClose ( hthread )	510:1:12966:12983	4830142	0	True				
ANR	4830146	CallExpression	NtClose ( hthread )		4830142	0					
ANR	4830147	Callee	NtClose		4830142	0					
ANR	4830148	Identifier	NtClose		4830142	0					
ANR	4830149	ArgumentList	hthread		4830142	1					
ANR	4830150	Argument	hthread		4830142	0					
ANR	4830151	Identifier	hthread		4830142	0					
ANR	4830152	ReturnType	void		4830142	1					
ANR	4830153	Identifier	CSysinfo :: CloseThread		4830142	2					
ANR	4830154	ParameterList	HANDLE hthread		4830142	3					
ANR	4830155	Parameter	HANDLE hthread	508:28:12947:12960	4830142	0	True				
ANR	4830156	ParameterType	HANDLE		4830142	0					
ANR	4830157	Identifier	hthread		4830142	1					
ANR	4830158	CFGEntryNode	ENTRY		4830142		True				
ANR	4830159	CFGExitNode	EXIT		4830142		True				
ANR	4830160	Symbol	hthread		4830142						
ANR	4830161	Function	CSysinfo :: NextBlock	516:0:13057:14400							
ANR	4830162	FunctionDef	CSysinfo :: NextBlock (DWORD * oldblock)		4830161	0					
ANR	4830163	CompoundStatement		517:0:13102:14400	4830161	0					
ANR	4830164	IdentifierDeclStatement	DWORD offset = * oldblock ;	518:1:13105:13129	4830161	0	True				
ANR	4830165	IdentifierDecl	offset = * oldblock		4830161	0					
ANR	4830166	IdentifierDeclType	DWORD		4830161	0					
ANR	4830167	Identifier	offset		4830161	1					
ANR	4830168	AssignmentExpression	offset = * oldblock		4830161	2		=			
ANR	4830169	Identifier	offset		4830161	0					
ANR	4830170	UnaryOperationExpression	* oldblock		4830161	1					
ANR	4830171	UnaryOperator	*		4830161	0					
ANR	4830172	Identifier	oldblock		4830161	1					
ANR	4830173	IdentifierDeclStatement	DWORD * p_nextblock ;	519:1:13132:13150	4830161	1	True				
ANR	4830174	IdentifierDecl	* p_nextblock		4830161	0					
ANR	4830175	IdentifierDeclType	DWORD *		4830161	0					
ANR	4830176	Identifier	p_nextblock		4830161	1					
ANR	4830177	IdentifierDeclStatement	DWORD next_offset ;	520:1:13153:13170	4830161	2	True				
ANR	4830178	IdentifierDecl	next_offset		4830161	0					
ANR	4830179	IdentifierDeclType	DWORD		4830161	0					
ANR	4830180	Identifier	next_offset		4830161	1					
ANR	4830181	IdentifierDeclStatement	bool need_resize = false ;	521:1:13173:13197	4830161	3	True				
ANR	4830182	IdentifierDecl	need_resize = false		4830161	0					
ANR	4830183	IdentifierDeclType	bool		4830161	0					
ANR	4830184	Identifier	need_resize		4830161	1					
ANR	4830185	AssignmentExpression	need_resize = false		4830161	2		=			
ANR	4830186	Identifier	false		4830161	0					
ANR	4830187	Identifier	false		4830161	1					
ANR	4830188	IdentifierDeclStatement	DWORD offset_into_buf ;	522:1:13200:13221	4830161	4	True				
ANR	4830189	IdentifierDecl	offset_into_buf		4830161	0					
ANR	4830190	IdentifierDeclType	DWORD		4830161	0					
ANR	4830191	Identifier	offset_into_buf		4830161	1					
ANR	4830192	Statement	static	523:1:13224:13229	4830161	5	True				
ANR	4830193	IdentifierDeclStatement	DWORD largest_offset = 3000 ;	523:8:13231:13258	4830161	6	True				
ANR	4830194	IdentifierDecl	largest_offset = 3000		4830161	0					
ANR	4830195	IdentifierDeclType	DWORD		4830161	0					
ANR	4830196	Identifier	largest_offset		4830161	1					
ANR	4830197	AssignmentExpression	largest_offset = 3000		4830161	2		=			
ANR	4830198	Identifier	largest_offset		4830161	0					
ANR	4830199	PrimaryExpression	3000		4830161	1					
ANR	4830200	IfStatement	if ( offset > largest_offset )		4830161	7					
ANR	4830201	Condition	offset > largest_offset	525:6:13267:13289	4830161	0	True				
ANR	4830202	RelationalExpression	offset > largest_offset		4830161	0		>			
ANR	4830203	Identifier	offset		4830161	0					
ANR	4830204	Identifier	largest_offset		4830161	1					
ANR	4830205	ExpressionStatement	largest_offset = offset	526:2:13295:13318	4830161	1	True				
ANR	4830206	AssignmentExpression	largest_offset = offset		4830161	0		=			
ANR	4830207	Identifier	largest_offset		4830161	0					
ANR	4830208	Identifier	offset		4830161	1					
ANR	4830209	ExpressionStatement	p_nextblock = ( DWORD * ) ( ( DWORD ) oldblock + offset )	528:1:13322:13370	4830161	8	True				
ANR	4830210	AssignmentExpression	p_nextblock = ( DWORD * ) ( ( DWORD ) oldblock + offset )		4830161	0		=			
ANR	4830211	Identifier	p_nextblock		4830161	0					
ANR	4830212	CastExpression	( DWORD * ) ( ( DWORD ) oldblock + offset )		4830161	1					
ANR	4830213	CastTarget	DWORD *		4830161	0					
ANR	4830214	AdditiveExpression	( DWORD ) oldblock + offset		4830161	1		+			
ANR	4830215	CastExpression	( DWORD ) oldblock		4830161	0					
ANR	4830216	CastTarget	DWORD		4830161	0					
ANR	4830217	Identifier	oldblock		4830161	1					
ANR	4830218	Identifier	offset		4830161	1					
ANR	4830219	ExpressionStatement	offset_into_buf = ( DWORD ) p_nextblock - ( DWORD ) memptr + 1	529:1:13373:13429	4830161	9	True				
ANR	4830220	AssignmentExpression	offset_into_buf = ( DWORD ) p_nextblock - ( DWORD ) memptr + 1		4830161	0		=			
ANR	4830221	Identifier	offset_into_buf		4830161	0					
ANR	4830222	AdditiveExpression	( DWORD ) p_nextblock - ( DWORD ) memptr + 1		4830161	1		-			
ANR	4830223	CastExpression	( DWORD ) p_nextblock		4830161	0					
ANR	4830224	CastTarget	DWORD		4830161	0					
ANR	4830225	Identifier	p_nextblock		4830161	1					
ANR	4830226	AdditiveExpression	( DWORD ) memptr + 1		4830161	1		+			
ANR	4830227	CastExpression	( DWORD ) memptr		4830161	0					
ANR	4830228	CastTarget	DWORD		4830161	0					
ANR	4830229	Identifier	memptr		4830161	1					
ANR	4830230	PrimaryExpression	1		4830161	1					
ANR	4830231	IfStatement	if ( ! offset )		4830161	10					
ANR	4830232	Condition	! offset	531:5:13437:13443	4830161	0	True				
ANR	4830233	UnaryOperationExpression	! offset		4830161	0					
ANR	4830234	UnaryOperator	!		4830161	0					
ANR	4830235	Identifier	offset		4830161	1					
ANR	4830236	CompoundStatement		15:14:343:343	4830161	1					
ANR	4830237	IfStatement	if ( ( offset_into_buf + largest_offset ) > memptr_size )		4830161	0					
ANR	4830238	Condition	( offset_into_buf + largest_offset ) > memptr_size	532:7:13455:13502	4830161	0	True				
ANR	4830239	RelationalExpression	( offset_into_buf + largest_offset ) > memptr_size		4830161	0		>			
ANR	4830240	AdditiveExpression	offset_into_buf + largest_offset		4830161	0		+			
ANR	4830241	Identifier	offset_into_buf		4830161	0					
ANR	4830242	Identifier	largest_offset		4830161	1					
ANR	4830243	Identifier	memptr_size		4830161	1					
ANR	4830244	ExpressionStatement	need_resize = true	533:3:13508:13526	4830161	1	True				
ANR	4830245	AssignmentExpression	need_resize = true		4830161	0		=			
ANR	4830246	Identifier	need_resize		4830161	0					
ANR	4830247	Identifier	true		4830161	1					
ANR	4830248	ElseStatement	else		4830161	0					
ANR	4830249	ReturnStatement	return NULL ;	535:3:13538:13549	4830161	0	True				
ANR	4830250	Identifier	NULL		4830161	0					
ANR	4830251	ElseStatement	else		4830161	0					
ANR	4830252	CompoundStatement		20:8:456:456	4830161	0					
ANR	4830253	IfStatement	if ( ( offset_into_buf + sizeof ( next_offset ) ) > memptr_size )		4830161	0					
ANR	4830254	Condition	( offset_into_buf + sizeof ( next_offset ) ) > memptr_size	539:7:13699:13751	4830161	0	True				
ANR	4830255	RelationalExpression	( offset_into_buf + sizeof ( next_offset ) ) > memptr_size		4830161	0		>			
ANR	4830256	AdditiveExpression	offset_into_buf + sizeof ( next_offset )		4830161	0		+			
ANR	4830257	Identifier	offset_into_buf		4830161	0					
ANR	4830258	SizeofExpression	sizeof ( next_offset )		4830161	1					
ANR	4830259	Sizeof	sizeof		4830161	0					
ANR	4830260	SizeofOperand	next_offset		4830161	1					
ANR	4830261	Identifier	memptr_size		4830161	1					
ANR	4830262	CompoundStatement		24:2:653:653	4830161	1					
ANR	4830263	ExpressionStatement	need_resize = true	541:3:13761:13779	4830161	0	True				
ANR	4830264	AssignmentExpression	need_resize = true		4830161	0		=			
ANR	4830265	Identifier	need_resize		4830161	0					
ANR	4830266	Identifier	true		4830161	1					
ANR	4830267	ElseStatement	else		4830161	0					
ANR	4830268	CompoundStatement		26:9:687:687	4830161	0					
ANR	4830269	ExpressionStatement	next_offset = * p_nextblock	543:3:13795:13821	4830161	0	True				
ANR	4830270	AssignmentExpression	next_offset = * p_nextblock		4830161	0		=			
ANR	4830271	Identifier	next_offset		4830161	0					
ANR	4830272	UnaryOperationExpression	* p_nextblock		4830161	1					
ANR	4830273	UnaryOperator	*		4830161	0					
ANR	4830274	Identifier	p_nextblock		4830161	1					
ANR	4830275	IfStatement	if ( next_offset > largest_offset )		4830161	1					
ANR	4830276	Condition	next_offset > largest_offset	545:8:13832:13859	4830161	0	True				
ANR	4830277	RelationalExpression	next_offset > largest_offset		4830161	0		>			
ANR	4830278	Identifier	next_offset		4830161	0					
ANR	4830279	Identifier	largest_offset		4830161	1					
ANR	4830280	ExpressionStatement	largest_offset = next_offset	546:4:13866:13894	4830161	1	True				
ANR	4830281	AssignmentExpression	largest_offset = next_offset		4830161	0		=			
ANR	4830282	Identifier	largest_offset		4830161	0					
ANR	4830283	Identifier	next_offset		4830161	1					
ANR	4830284	IfStatement	if ( ( offset_into_buf + next_offset ) > memptr_size )		4830161	2					
ANR	4830285	Condition	( offset_into_buf + next_offset ) > memptr_size	548:8:13905:13949	4830161	0	True				
ANR	4830286	RelationalExpression	( offset_into_buf + next_offset ) > memptr_size		4830161	0		>			
ANR	4830287	AdditiveExpression	offset_into_buf + next_offset		4830161	0		+			
ANR	4830288	Identifier	offset_into_buf		4830161	0					
ANR	4830289	Identifier	next_offset		4830161	1					
ANR	4830290	Identifier	memptr_size		4830161	1					
ANR	4830291	CompoundStatement		32:55:849:849	4830161	1					
ANR	4830292	ExpressionStatement	need_resize = true	549:4:13958:13976	4830161	0	True				
ANR	4830293	AssignmentExpression	need_resize = true		4830161	0		=			
ANR	4830294	Identifier	need_resize		4830161	0					
ANR	4830295	Identifier	true		4830161	1					
ANR	4830296	IfStatement	if ( need_resize )		4830161	11					
ANR	4830297	Condition	need_resize	554:6:13998:14008	4830161	0	True				
ANR	4830298	Identifier	need_resize		4830161	0					
ANR	4830299	CompoundStatement		38:20:909:909	4830161	1					
ANR	4830300	ExpressionStatement	"VirtualFree ( memptr , 0 , MEM_RELEASE )"	555:2:14016:14052	4830161	0	True				
ANR	4830301	CallExpression	"VirtualFree ( memptr , 0 , MEM_RELEASE )"		4830161	0					
ANR	4830302	Callee	VirtualFree		4830161	0					
ANR	4830303	Identifier	VirtualFree		4830161	0					
ANR	4830304	ArgumentList	memptr		4830161	1					
ANR	4830305	Argument	memptr		4830161	0					
ANR	4830306	Identifier	memptr		4830161	0					
ANR	4830307	Argument	0		4830161	1					
ANR	4830308	PrimaryExpression	0		4830161	0					
ANR	4830309	Argument	MEM_RELEASE		4830161	2					
ANR	4830310	Identifier	MEM_RELEASE		4830161	0					
ANR	4830311	ExpressionStatement	memptr_size += 0x10000	556:2:14056:14078	4830161	1	True				
ANR	4830312	AssignmentExpression	memptr_size += 0x10000		4830161	0		+=			
ANR	4830313	Identifier	memptr_size		4830161	0					
ANR	4830314	PrimaryExpression	0x10000		4830161	1					
ANR	4830315	ExpressionStatement	"memptr = ( DWORD * ) VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"	557:2:14119:14216	4830161	2	True				
ANR	4830316	AssignmentExpression	"memptr = ( DWORD * ) VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"		4830161	0		=			
ANR	4830317	Identifier	memptr		4830161	0					
ANR	4830318	CastExpression	"( DWORD * ) VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"		4830161	1					
ANR	4830319	CastTarget	DWORD *		4830161	0					
ANR	4830320	CallExpression	"VirtualAlloc ( NULL , memptr_size , MEM_COMMIT , PAGE_READWRITE )"		4830161	1					
ANR	4830321	Callee	VirtualAlloc		4830161	0					
ANR	4830322	Identifier	VirtualAlloc		4830161	0					
ANR	4830323	ArgumentList	NULL		4830161	1					
ANR	4830324	Argument	NULL		4830161	0					
ANR	4830325	Identifier	NULL		4830161	0					
ANR	4830326	Argument	memptr_size		4830161	1					
ANR	4830327	Identifier	memptr_size		4830161	0					
ANR	4830328	Argument	MEM_COMMIT		4830161	2					
ANR	4830329	Identifier	MEM_COMMIT		4830161	0					
ANR	4830330	Argument	PAGE_READWRITE		4830161	3					
ANR	4830331	Identifier	PAGE_READWRITE		4830161	0					
ANR	4830332	ExpressionStatement	Refresh ( )	561:2:14221:14230	4830161	3	True				
ANR	4830333	CallExpression	Refresh ( )		4830161	0					
ANR	4830334	Callee	Refresh		4830161	0					
ANR	4830335	Identifier	Refresh		4830161	0					
ANR	4830336	ArgumentList			4830161	1					
ANR	4830337	ReturnStatement	return ( ( DWORD * ) 1 ) ;	564:2:14351:14371	4830161	4	True				
ANR	4830338	CastExpression	( DWORD * ) 1		4830161	0					
ANR	4830339	CastTarget	DWORD *		4830161	0					
ANR	4830340	PrimaryExpression	1		4830161	1					
ANR	4830341	ReturnStatement	return ( p_nextblock ) ;	567:1:14378:14398	4830161	12	True				
ANR	4830342	Identifier	p_nextblock		4830161	0					
ANR	4830343	ReturnType	DWORD *		4830161	1					
ANR	4830344	Identifier	CSysinfo :: NextBlock		4830161	2					
ANR	4830345	ParameterList	DWORD * oldblock		4830161	3					
ANR	4830346	Parameter	DWORD * oldblock	516:28:13085:13099	4830161	0	True				
ANR	4830347	ParameterType	DWORD *		4830161	0					
ANR	4830348	Identifier	oldblock		4830161	1					
ANR	4830349	CFGEntryNode	ENTRY		4830161		True				
ANR	4830350	CFGExitNode	EXIT		4830161		True				
ANR	4830351	Symbol	* p_nextblock		4830161						
ANR	4830352	Symbol	NULL		4830161						
ANR	4830353	Symbol	VirtualAlloc		4830161						
ANR	4830354	Symbol	offset		4830161						
ANR	4830355	Symbol	MEM_COMMIT		4830161						
ANR	4830356	Symbol	* oldblock		4830161						
ANR	4830357	Symbol	p_nextblock		4830161						
ANR	4830358	Symbol	false		4830161						
ANR	4830359	Symbol	largest_offset		4830161						
ANR	4830360	Symbol	memptr_size		4830161						
ANR	4830361	Symbol	need_resize		4830161						
ANR	4830362	Symbol	offset_into_buf		4830161						
ANR	4830363	Symbol	PAGE_READWRITE		4830161						
ANR	4830364	Symbol	true		4830161						
ANR	4830365	Symbol	oldblock		4830161						
ANR	4830366	Symbol	memptr		4830161						
ANR	4830367	Symbol	MEM_RELEASE		4830161						
ANR	4830368	Symbol	next_offset		4830161						
ANR	4830369	Function	CSysinfo :: Refresh	570:0:14403:14500							
ANR	4830370	FunctionDef	CSysinfo :: Refresh ()		4830369	0					
ANR	4830371	CompoundStatement		571:0:14442:14500	4830369	0					
ANR	4830372	ExpressionStatement	"NtQuerySystemInformation ( 5 , memptr , memptr_size , 0 )"	572:1:14445:14497	4830369	0	True				
ANR	4830373	CallExpression	"NtQuerySystemInformation ( 5 , memptr , memptr_size , 0 )"		4830369	0					
ANR	4830374	Callee	NtQuerySystemInformation		4830369	0					
ANR	4830375	Identifier	NtQuerySystemInformation		4830369	0					
ANR	4830376	ArgumentList	5		4830369	1					
ANR	4830377	Argument	5		4830369	0					
ANR	4830378	PrimaryExpression	5		4830369	0					
ANR	4830379	Argument	memptr		4830369	1					
ANR	4830380	Identifier	memptr		4830369	0					
ANR	4830381	Argument	memptr_size		4830369	2					
ANR	4830382	Identifier	memptr_size		4830369	0					
ANR	4830383	Argument	0		4830369	3					
ANR	4830384	PrimaryExpression	0		4830369	0					
ANR	4830385	ReturnType	__inline void		4830369	1					
ANR	4830386	Identifier	CSysinfo :: Refresh		4830369	2					
ANR	4830387	ParameterList			4830369	3					
ANR	4830388	CFGEntryNode	ENTRY		4830369		True				
ANR	4830389	CFGExitNode	EXIT		4830369		True				
ANR	4830390	Symbol	memptr_size		4830369						
ANR	4830391	Symbol	memptr		4830369						
ANR	4830392	Function	CSysinfo :: MakeAnsiString	575:0:14503:14693							
ANR	4830393	FunctionDef	"CSysinfo :: MakeAnsiString (WORD * unistring , char * ansistring)"		4830392	0					
ANR	4830394	CompoundStatement		576:0:14578:14693	4830392	0					
ANR	4830395	IdentifierDeclStatement	int s = 0 ;	577:1:14581:14588	4830392	0	True				
ANR	4830396	IdentifierDecl	s = 0		4830392	0					
ANR	4830397	IdentifierDeclType	int		4830392	0					
ANR	4830398	Identifier	s		4830392	1					
ANR	4830399	AssignmentExpression	s = 0		4830392	2		=			
ANR	4830400	Identifier	s		4830392	0					
ANR	4830401	PrimaryExpression	0		4830392	1					
ANR	4830402	IfStatement	if ( unistring )		4830392	1					
ANR	4830403	Condition	unistring	578:5:14595:14603	4830392	0	True				
ANR	4830404	Identifier	unistring		4830392	0					
ANR	4830405	WhileStatement	while ( unistring [ s ] )		4830392	1					
ANR	4830406	Condition	unistring [ s ]	579:9:14615:14626	4830392	0	True				
ANR	4830407	ArrayIndexing	unistring [ s ]		4830392	0					
ANR	4830408	Identifier	unistring		4830392	0					
ANR	4830409	Identifier	s		4830392	1					
ANR	4830410	ExpressionStatement	ansistring [ s ] = ( char ) unistring [ s ++ ]	580:3:14632:14668	4830392	1	True				
ANR	4830411	AssignmentExpression	ansistring [ s ] = ( char ) unistring [ s ++ ]		4830392	0		=			
ANR	4830412	ArrayIndexing	ansistring [ s ]		4830392	0					
ANR	4830413	Identifier	ansistring		4830392	0					
ANR	4830414	Identifier	s		4830392	1					
ANR	4830415	CastExpression	( char ) unistring [ s ++ ]		4830392	1					
ANR	4830416	CastTarget	char		4830392	0					
ANR	4830417	ArrayIndexing	unistring [ s ++ ]		4830392	1					
ANR	4830418	Identifier	unistring		4830392	0					
ANR	4830419	PostIncDecOperationExpression	s ++		4830392	1					
ANR	4830420	Identifier	s		4830392	0					
ANR	4830421	IncDec	++		4830392	1					
ANR	4830422	ExpressionStatement	ansistring [ s ] = '\\0'	581:1:14671:14691	4830392	2	True				
ANR	4830423	AssignmentExpression	ansistring [ s ] = '\\0'		4830392	0		=			
ANR	4830424	ArrayIndexing	ansistring [ s ]		4830392	0					
ANR	4830425	Identifier	ansistring		4830392	0					
ANR	4830426	Identifier	s		4830392	1					
ANR	4830427	PrimaryExpression	'\\0'		4830392	1					
ANR	4830428	ReturnType	__inline void		4830392	1					
ANR	4830429	Identifier	CSysinfo :: MakeAnsiString		4830392	2					
ANR	4830430	ParameterList	"WORD * unistring , char * ansistring"		4830392	3					
ANR	4830431	Parameter	WORD * unistring	575:40:14543:14557	4830392	0	True				
ANR	4830432	ParameterType	WORD *		4830392	0					
ANR	4830433	Identifier	unistring		4830392	1					
ANR	4830434	Parameter	char * ansistring	575:57:14560:14575	4830392	1	True				
ANR	4830435	ParameterType	char *		4830392	0					
ANR	4830436	Identifier	ansistring		4830392	1					
ANR	4830437	CFGEntryNode	ENTRY		4830392		True				
ANR	4830438	CFGExitNode	EXIT		4830392		True				
ANR	4830439	Symbol	ansistring		4830392						
ANR	4830440	Symbol	s		4830392						
ANR	4830441	Symbol	* unistring		4830392						
ANR	4830442	Symbol	unistring		4830392						
ANR	4830443	Symbol	* ansistring		4830392						
ANR	4830444	Symbol	* s		4830392						
ANR	4830445	Function	CSysinfo :: FindBlock	584:0:14696:14964							
ANR	4830446	FunctionDef	CSysinfo :: FindBlock (DWORD pid)		4830445	0					
ANR	4830447	CompoundStatement		585:0:14744:14964	4830445	0					
ANR	4830448	IdentifierDeclStatement	DWORD * startblock = memptr ;	586:1:14747:14773	4830445	0	True				
ANR	4830449	IdentifierDecl	* startblock = memptr		4830445	0					
ANR	4830450	IdentifierDeclType	DWORD *		4830445	0					
ANR	4830451	Identifier	startblock		4830445	1					
ANR	4830452	AssignmentExpression	* startblock = memptr		4830445	2		=			
ANR	4830453	Identifier	memptr		4830445	0					
ANR	4830454	Identifier	memptr		4830445	1					
ANR	4830455	WhileStatement	while ( startblock )		4830445	1					
ANR	4830456	Condition	startblock	587:8:14783:14792	4830445	0	True				
ANR	4830457	Identifier	startblock		4830445	0					
ANR	4830458	CompoundStatement		4:1:51:51	4830445	1					
ANR	4830459	IfStatement	if ( * ( startblock + 17 ) == pid )		4830445	0					
ANR	4830460	Condition	* ( startblock + 17 ) == pid	589:6:14804:14826	4830445	0	True				
ANR	4830461	EqualityExpression	* ( startblock + 17 ) == pid		4830445	0		==			
ANR	4830462	UnaryOperationExpression	* ( startblock + 17 )		4830445	0					
ANR	4830463	UnaryOperator	*		4830445	0					
ANR	4830464	AdditiveExpression	startblock + 17		4830445	1		+			
ANR	4830465	Identifier	startblock		4830445	0					
ANR	4830466	PrimaryExpression	17		4830445	1					
ANR	4830467	Identifier	pid		4830445	1					
ANR	4830468	ReturnStatement	return startblock ;	590:3:14832:14849	4830445	1	True				
ANR	4830469	Identifier	startblock		4830445	0					
ANR	4830470	ExpressionStatement	startblock = NextBlock ( startblock )	591:2:14853:14888	4830445	1	True				
ANR	4830471	AssignmentExpression	startblock = NextBlock ( startblock )		4830445	0		=			
ANR	4830472	Identifier	startblock		4830445	0					
ANR	4830473	CallExpression	NextBlock ( startblock )		4830445	1					
ANR	4830474	Callee	NextBlock		4830445	0					
ANR	4830475	Identifier	NextBlock		4830445	0					
ANR	4830476	ArgumentList	startblock		4830445	1					
ANR	4830477	Argument	startblock		4830445	0					
ANR	4830478	Identifier	startblock		4830445	0					
ANR	4830479	IfStatement	if ( startblock == ( DWORD * ) 1 )		4830445	2					
ANR	4830480	Condition	startblock == ( DWORD * ) 1	592:7:14897:14919	4830445	0	True				
ANR	4830481	EqualityExpression	startblock == ( DWORD * ) 1		4830445	0		==			
ANR	4830482	Identifier	startblock		4830445	0					
ANR	4830483	CastExpression	( DWORD * ) 1		4830445	1					
ANR	4830484	CastTarget	DWORD *		4830445	0					
ANR	4830485	PrimaryExpression	1		4830445	1					
ANR	4830486	ExpressionStatement	startblock = memptr	593:3:14926:14945	4830445	1	True				
ANR	4830487	AssignmentExpression	startblock = memptr		4830445	0		=			
ANR	4830488	Identifier	startblock		4830445	0					
ANR	4830489	Identifier	memptr		4830445	1					
ANR	4830490	ReturnStatement	return NULL ;	595:1:14951:14962	4830445	2	True				
ANR	4830491	Identifier	NULL		4830445	0					
ANR	4830492	ReturnType	__inline DWORD *		4830445	1					
ANR	4830493	Identifier	CSysinfo :: FindBlock		4830445	2					
ANR	4830494	ParameterList	DWORD pid		4830445	3					
ANR	4830495	Parameter	DWORD pid	584:37:14733:14741	4830445	0	True				
ANR	4830496	ParameterType	DWORD		4830445	0					
ANR	4830497	Identifier	pid		4830445	1					
ANR	4830498	CFGEntryNode	ENTRY		4830445		True				
ANR	4830499	CFGExitNode	EXIT		4830445		True				
ANR	4830500	Symbol	NULL		4830445						
ANR	4830501	Symbol	startblock		4830445						
ANR	4830502	Symbol	NextBlock		4830445						
ANR	4830503	Symbol	pid		4830445						
ANR	4830504	Symbol	memptr		4830445						
ANR	4830505	Symbol	* ( startblock + 17 )		4830445						
ANR	4830506	Symbol	* startblock		4830445						
ANR	4830507	Function	CSysinfo :: GetProcessBirthday	602:0:15203:16132							
ANR	4830508	FunctionDef	"CSysinfo :: GetProcessBirthday (pid_t pid , FILETIME * ft)"		4830507	0					
ANR	4830509	CompoundStatement		603:54:15262:16132	4830507	0					
ANR	4830510	IdentifierDeclStatement	HANDLE pidHnd ;	605:1:15266:15279	4830507	0	True				
ANR	4830511	IdentifierDecl	pidHnd		4830507	0					
ANR	4830512	IdentifierDeclType	HANDLE		4830507	0					
ANR	4830513	Identifier	pidHnd		4830507	1					
ANR	4830514	IdentifierDeclStatement	"FILETIME crtime , extime , kerntime , usertime ;"	606:1:15282:15325	4830507	1	True				
ANR	4830515	IdentifierDecl	crtime		4830507	0					
ANR	4830516	IdentifierDeclType	FILETIME		4830507	0					
ANR	4830517	Identifier	crtime		4830507	1					
ANR	4830518	IdentifierDecl	extime		4830507	1					
ANR	4830519	IdentifierDeclType	FILETIME		4830507	0					
ANR	4830520	Identifier	extime		4830507	1					
ANR	4830521	IdentifierDecl	kerntime		4830507	2					
ANR	4830522	IdentifierDeclType	FILETIME		4830507	0					
ANR	4830523	Identifier	kerntime		4830507	1					
ANR	4830524	IdentifierDecl	usertime		4830507	3					
ANR	4830525	IdentifierDeclType	FILETIME		4830507	0					
ANR	4830526	Identifier	usertime		4830507	1					
ANR	4830527	IdentifierDeclStatement	BOOL result ;	607:1:15328:15339	4830507	2	True				
ANR	4830528	IdentifierDecl	result		4830507	0					
ANR	4830529	IdentifierDeclType	BOOL		4830507	0					
ANR	4830530	Identifier	result		4830507	1					
ANR	4830531	ExpressionStatement	"ZeroMemory ( & crtime , sizeof ( FILETIME ) )"	609:1:15343:15380	4830507	3	True				
ANR	4830532	CallExpression	"ZeroMemory ( & crtime , sizeof ( FILETIME ) )"		4830507	0					
ANR	4830533	Callee	ZeroMemory		4830507	0					
ANR	4830534	Identifier	ZeroMemory		4830507	0					
ANR	4830535	ArgumentList	& crtime		4830507	1					
ANR	4830536	Argument	& crtime		4830507	0					
ANR	4830537	UnaryOperationExpression	& crtime		4830507	0					
ANR	4830538	UnaryOperator	&		4830507	0					
ANR	4830539	Identifier	crtime		4830507	1					
ANR	4830540	Argument	sizeof ( FILETIME )		4830507	1					
ANR	4830541	SizeofExpression	sizeof ( FILETIME )		4830507	0					
ANR	4830542	Sizeof	sizeof		4830507	0					
ANR	4830543	SizeofOperand	FILETIME		4830507	1					
ANR	4830544	ExpressionStatement	"ZeroMemory ( & extime , sizeof ( FILETIME ) )"	610:1:15383:15420	4830507	4	True				
ANR	4830545	CallExpression	"ZeroMemory ( & extime , sizeof ( FILETIME ) )"		4830507	0					
ANR	4830546	Callee	ZeroMemory		4830507	0					
ANR	4830547	Identifier	ZeroMemory		4830507	0					
ANR	4830548	ArgumentList	& extime		4830507	1					
ANR	4830549	Argument	& extime		4830507	0					
ANR	4830550	UnaryOperationExpression	& extime		4830507	0					
ANR	4830551	UnaryOperator	&		4830507	0					
ANR	4830552	Identifier	extime		4830507	1					
ANR	4830553	Argument	sizeof ( FILETIME )		4830507	1					
ANR	4830554	SizeofExpression	sizeof ( FILETIME )		4830507	0					
ANR	4830555	Sizeof	sizeof		4830507	0					
ANR	4830556	SizeofOperand	FILETIME		4830507	1					
ANR	4830557	ExpressionStatement	"ZeroMemory ( & kerntime , sizeof ( FILETIME ) )"	611:1:15423:15462	4830507	5	True				
ANR	4830558	CallExpression	"ZeroMemory ( & kerntime , sizeof ( FILETIME ) )"		4830507	0					
ANR	4830559	Callee	ZeroMemory		4830507	0					
ANR	4830560	Identifier	ZeroMemory		4830507	0					
ANR	4830561	ArgumentList	& kerntime		4830507	1					
ANR	4830562	Argument	& kerntime		4830507	0					
ANR	4830563	UnaryOperationExpression	& kerntime		4830507	0					
ANR	4830564	UnaryOperator	&		4830507	0					
ANR	4830565	Identifier	kerntime		4830507	1					
ANR	4830566	Argument	sizeof ( FILETIME )		4830507	1					
ANR	4830567	SizeofExpression	sizeof ( FILETIME )		4830507	0					
ANR	4830568	Sizeof	sizeof		4830507	0					
ANR	4830569	SizeofOperand	FILETIME		4830507	1					
ANR	4830570	ExpressionStatement	"ZeroMemory ( & usertime , sizeof ( FILETIME ) )"	612:1:15465:15504	4830507	6	True				
ANR	4830571	CallExpression	"ZeroMemory ( & usertime , sizeof ( FILETIME ) )"		4830507	0					
ANR	4830572	Callee	ZeroMemory		4830507	0					
ANR	4830573	Identifier	ZeroMemory		4830507	0					
ANR	4830574	ArgumentList	& usertime		4830507	1					
ANR	4830575	Argument	& usertime		4830507	0					
ANR	4830576	UnaryOperationExpression	& usertime		4830507	0					
ANR	4830577	UnaryOperator	&		4830507	0					
ANR	4830578	Identifier	usertime		4830507	1					
ANR	4830579	Argument	sizeof ( FILETIME )		4830507	1					
ANR	4830580	SizeofExpression	sizeof ( FILETIME )		4830507	0					
ANR	4830581	Sizeof	sizeof		4830507	0					
ANR	4830582	SizeofOperand	FILETIME		4830507	1					
ANR	4830583	ExpressionStatement	"pidHnd = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid )"	614:1:15508:15576	4830507	7	True				
ANR	4830584	AssignmentExpression	"pidHnd = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid )"		4830507	0		=			
ANR	4830585	Identifier	pidHnd		4830507	0					
ANR	4830586	CallExpression	"OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , pid )"		4830507	1					
ANR	4830587	Callee	OpenProcess		4830507	0					
ANR	4830588	Identifier	OpenProcess		4830507	0					
ANR	4830589	ArgumentList	PROCESS_QUERY_INFORMATION		4830507	1					
ANR	4830590	Argument	PROCESS_QUERY_INFORMATION		4830507	0					
ANR	4830591	Identifier	PROCESS_QUERY_INFORMATION		4830507	0					
ANR	4830592	Argument	FALSE		4830507	1					
ANR	4830593	Identifier	FALSE		4830507	0					
ANR	4830594	Argument	pid		4830507	2					
ANR	4830595	Identifier	pid		4830507	0					
ANR	4830596	IfStatement	if ( pidHnd == NULL )		4830507	8					
ANR	4830597	Condition	pidHnd == NULL	618:6:15585:15598	4830507	0	True				
ANR	4830598	EqualityExpression	pidHnd == NULL		4830507	0		==			
ANR	4830599	Identifier	pidHnd		4830507	0					
ANR	4830600	Identifier	NULL		4830507	1					
ANR	4830601	CompoundStatement		16:23:339:339	4830507	1					
ANR	4830602	Statement	dprintf	619:2:15606:15612	4830507	0	True				
ANR	4830603	Statement	(	619:9:15613:15613	4830507	1	True				
ANR	4830604	Statement	D_ALWAYS	619:10:15614:15621	4830507	2	True				
ANR	4830605	Statement	","	619:18:15622:15622	4830507	3	True				
ANR	4830606	Statement	"""CSysinfo::GetProcessBirthday() - OpenProcess() """	619:20:15624:15672	4830507	4	True				
ANR	4830607	Statement	"""failed with err=%d\\n"""	620:6:15680:15701	4830507	5	True				
ANR	4830608	Statement	","	620:28:15702:15702	4830507	6	True				
ANR	4830609	Statement	GetLastError	620:30:15704:15715	4830507	7	True				
ANR	4830610	Statement	(	620:42:15716:15716	4830507	8	True				
ANR	4830611	Statement	)	620:43:15717:15717	4830507	9	True				
ANR	4830612	Statement	)	620:44:15718:15718	4830507	10	True				
ANR	4830613	ExpressionStatement		620:45:15719:15719	4830507	11	True				
ANR	4830614	ReturnStatement	return false ;	621:2:15724:15736	4830507	12	True				
ANR	4830615	Identifier	false		4830507	0					
ANR	4830616	ExpressionStatement	"result = GetProcessTimes ( pidHnd , & crtime , & extime , & kerntime , & usertime )"	625:1:15744:15816	4830507	9	True				
ANR	4830617	AssignmentExpression	"result = GetProcessTimes ( pidHnd , & crtime , & extime , & kerntime , & usertime )"		4830507	0		=			
ANR	4830618	Identifier	result		4830507	0					
ANR	4830619	CallExpression	"GetProcessTimes ( pidHnd , & crtime , & extime , & kerntime , & usertime )"		4830507	1					
ANR	4830620	Callee	GetProcessTimes		4830507	0					
ANR	4830621	Identifier	GetProcessTimes		4830507	0					
ANR	4830622	ArgumentList	pidHnd		4830507	1					
ANR	4830623	Argument	pidHnd		4830507	0					
ANR	4830624	Identifier	pidHnd		4830507	0					
ANR	4830625	Argument	& crtime		4830507	1					
ANR	4830626	UnaryOperationExpression	& crtime		4830507	0					
ANR	4830627	UnaryOperator	&		4830507	0					
ANR	4830628	Identifier	crtime		4830507	1					
ANR	4830629	Argument	& extime		4830507	2					
ANR	4830630	UnaryOperationExpression	& extime		4830507	0					
ANR	4830631	UnaryOperator	&		4830507	0					
ANR	4830632	Identifier	extime		4830507	1					
ANR	4830633	Argument	& kerntime		4830507	3					
ANR	4830634	UnaryOperationExpression	& kerntime		4830507	0					
ANR	4830635	UnaryOperator	&		4830507	0					
ANR	4830636	Identifier	kerntime		4830507	1					
ANR	4830637	Argument	& usertime		4830507	4					
ANR	4830638	UnaryOperationExpression	& usertime		4830507	0					
ANR	4830639	UnaryOperator	&		4830507	0					
ANR	4830640	Identifier	usertime		4830507	1					
ANR	4830641	IfStatement	if ( result == 0 )		4830507	10					
ANR	4830642	Condition	result == 0	627:6:15825:15835	4830507	0	True				
ANR	4830643	EqualityExpression	result == 0		4830507	0		==			
ANR	4830644	Identifier	result		4830507	0					
ANR	4830645	PrimaryExpression	0		4830507	1					
ANR	4830646	CompoundStatement		25:20:576:576	4830507	1					
ANR	4830647	Statement	dprintf	628:2:15843:15849	4830507	0	True				
ANR	4830648	Statement	(	628:9:15850:15850	4830507	1	True				
ANR	4830649	Statement	D_ALWAYS	628:10:15851:15858	4830507	2	True				
ANR	4830650	Statement	","	628:18:15859:15859	4830507	3	True				
ANR	4830651	Statement	"""CSysinfo::GetProcessBirthday() - GetProcessTimes() """	628:20:15861:15913	4830507	4	True				
ANR	4830652	Statement	"""failed with err=%d\\n"""	629:6:15921:15942	4830507	5	True				
ANR	4830653	Statement	","	629:28:15943:15943	4830507	6	True				
ANR	4830654	Statement	GetLastError	629:30:15945:15956	4830507	7	True				
ANR	4830655	Statement	(	629:42:15957:15957	4830507	8	True				
ANR	4830656	Statement	)	629:43:15958:15958	4830507	9	True				
ANR	4830657	Statement	)	629:44:15959:15959	4830507	10	True				
ANR	4830658	ExpressionStatement		629:45:15960:15960	4830507	11	True				
ANR	4830659	ExpressionStatement	CloseHandle ( pidHnd )	630:2:15965:15984	4830507	12	True				
ANR	4830660	CallExpression	CloseHandle ( pidHnd )		4830507	0					
ANR	4830661	Callee	CloseHandle		4830507	0					
ANR	4830662	Identifier	CloseHandle		4830507	0					
ANR	4830663	ArgumentList	pidHnd		4830507	1					
ANR	4830664	Argument	pidHnd		4830507	0					
ANR	4830665	Identifier	pidHnd		4830507	0					
ANR	4830666	ReturnStatement	return false ;	631:2:15988:16000	4830507	13	True				
ANR	4830667	Identifier	false		4830507	0					
ANR	4830668	ExpressionStatement	ft -> dwLowDateTime = crtime . dwLowDateTime	634:1:16007:16047	4830507	11	True				
ANR	4830669	AssignmentExpression	ft -> dwLowDateTime = crtime . dwLowDateTime		4830507	0		=			
ANR	4830670	PtrMemberAccess	ft -> dwLowDateTime		4830507	0					
ANR	4830671	Identifier	ft		4830507	0					
ANR	4830672	Identifier	dwLowDateTime		4830507	1					
ANR	4830673	MemberAccess	crtime . dwLowDateTime		4830507	1					
ANR	4830674	Identifier	crtime		4830507	0					
ANR	4830675	Identifier	dwLowDateTime		4830507	1					
ANR	4830676	ExpressionStatement	ft -> dwHighDateTime = crtime . dwHighDateTime	635:1:16050:16092	4830507	12	True				
ANR	4830677	AssignmentExpression	ft -> dwHighDateTime = crtime . dwHighDateTime		4830507	0		=			
ANR	4830678	PtrMemberAccess	ft -> dwHighDateTime		4830507	0					
ANR	4830679	Identifier	ft		4830507	0					
ANR	4830680	Identifier	dwHighDateTime		4830507	1					
ANR	4830681	MemberAccess	crtime . dwHighDateTime		4830507	1					
ANR	4830682	Identifier	crtime		4830507	0					
ANR	4830683	Identifier	dwHighDateTime		4830507	1					
ANR	4830684	ExpressionStatement	CloseHandle ( pidHnd )	637:1:16097:16116	4830507	13	True				
ANR	4830685	CallExpression	CloseHandle ( pidHnd )		4830507	0					
ANR	4830686	Callee	CloseHandle		4830507	0					
ANR	4830687	Identifier	CloseHandle		4830507	0					
ANR	4830688	ArgumentList	pidHnd		4830507	1					
ANR	4830689	Argument	pidHnd		4830507	0					
ANR	4830690	Identifier	pidHnd		4830507	0					
ANR	4830691	ReturnStatement	return true ;	638:1:16119:16130	4830507	14	True				
ANR	4830692	Identifier	true		4830507	0					
ANR	4830693	ReturnType	bool		4830507	1					
ANR	4830694	Identifier	CSysinfo :: GetProcessBirthday		4830507	2					
ANR	4830695	ParameterList	"pid_t pid , FILETIME * ft"		4830507	3					
ANR	4830696	Parameter	pid_t pid	603:29:15237:15245	4830507	0	True				
ANR	4830697	ParameterType	pid_t		4830507	0					
ANR	4830698	Identifier	pid		4830507	1					
ANR	4830699	Parameter	FILETIME * ft	603:40:15248:15259	4830507	1	True				
ANR	4830700	ParameterType	FILETIME *		4830507	0					
ANR	4830701	Identifier	ft		4830507	1					
ANR	4830702	CFGEntryNode	ENTRY		4830507		True				
ANR	4830703	CFGExitNode	EXIT		4830507		True				
ANR	4830704	Symbol	ft -> dwLowDateTime		4830507						
ANR	4830705	Symbol	kerntime		4830507						
ANR	4830706	Symbol	NULL		4830507						
ANR	4830707	Symbol	& extime		4830507						
ANR	4830708	Symbol	crtime . dwHighDateTime		4830507						
ANR	4830709	Symbol	pidHnd		4830507						
ANR	4830710	Symbol	false		4830507						
ANR	4830711	Symbol	& kerntime		4830507						
ANR	4830712	Symbol	pid		4830507						
ANR	4830713	Symbol	extime		4830507						
ANR	4830714	Symbol	ft -> dwHighDateTime		4830507						
ANR	4830715	Symbol	ft		4830507						
ANR	4830716	Symbol	crtime		4830507						
ANR	4830717	Symbol	result		4830507						
ANR	4830718	Symbol	crtime . dwLowDateTime		4830507						
ANR	4830719	Symbol	& usertime		4830507						
ANR	4830720	Symbol	usertime		4830507						
ANR	4830721	Symbol	& crtime		4830507						
ANR	4830722	Symbol	* ft		4830507						
ANR	4830723	Symbol	GetProcessTimes		4830507						
ANR	4830724	Symbol	true		4830507						
ANR	4830725	Symbol	FALSE		4830507						
ANR	4830726	Symbol	PROCESS_QUERY_INFORMATION		4830507						
ANR	4830727	Symbol	OpenProcess		4830507						
ANR	4830728	Function	CSysinfo :: ComparePidAge	646:0:16285:16752							
ANR	4830729	FunctionDef	"CSysinfo :: ComparePidAge (pid_t pid1 , pid_t pid2)"		4830728	0					
ANR	4830730	CompoundStatement		647:49:16338:16752	4830728	0					
ANR	4830731	IdentifierDeclStatement	"FILETIME ft1 , ft2 ;"	649:1:16342:16359	4830728	0	True				
ANR	4830732	IdentifierDecl	ft1		4830728	0					
ANR	4830733	IdentifierDeclType	FILETIME		4830728	0					
ANR	4830734	Identifier	ft1		4830728	1					
ANR	4830735	IdentifierDecl	ft2		4830728	1					
ANR	4830736	IdentifierDeclType	FILETIME		4830728	0					
ANR	4830737	Identifier	ft2		4830728	1					
ANR	4830738	ExpressionStatement	"ZeroMemory ( & ft1 , sizeof ( FILETIME ) )"	651:1:16363:16397	4830728	1	True				
ANR	4830739	CallExpression	"ZeroMemory ( & ft1 , sizeof ( FILETIME ) )"		4830728	0					
ANR	4830740	Callee	ZeroMemory		4830728	0					
ANR	4830741	Identifier	ZeroMemory		4830728	0					
ANR	4830742	ArgumentList	& ft1		4830728	1					
ANR	4830743	Argument	& ft1		4830728	0					
ANR	4830744	UnaryOperationExpression	& ft1		4830728	0					
ANR	4830745	UnaryOperator	&		4830728	0					
ANR	4830746	Identifier	ft1		4830728	1					
ANR	4830747	Argument	sizeof ( FILETIME )		4830728	1					
ANR	4830748	SizeofExpression	sizeof ( FILETIME )		4830728	0					
ANR	4830749	Sizeof	sizeof		4830728	0					
ANR	4830750	SizeofOperand	FILETIME		4830728	1					
ANR	4830751	ExpressionStatement	"ZeroMemory ( & ft2 , sizeof ( FILETIME ) )"	652:1:16400:16434	4830728	2	True				
ANR	4830752	CallExpression	"ZeroMemory ( & ft2 , sizeof ( FILETIME ) )"		4830728	0					
ANR	4830753	Callee	ZeroMemory		4830728	0					
ANR	4830754	Identifier	ZeroMemory		4830728	0					
ANR	4830755	ArgumentList	& ft2		4830728	1					
ANR	4830756	Argument	& ft2		4830728	0					
ANR	4830757	UnaryOperationExpression	& ft2		4830728	0					
ANR	4830758	UnaryOperator	&		4830728	0					
ANR	4830759	Identifier	ft2		4830728	1					
ANR	4830760	Argument	sizeof ( FILETIME )		4830728	1					
ANR	4830761	SizeofExpression	sizeof ( FILETIME )		4830728	0					
ANR	4830762	Sizeof	sizeof		4830728	0					
ANR	4830763	SizeofOperand	FILETIME		4830728	1					
ANR	4830764	IfStatement	"if ( ! GetProcessBirthday ( pid1 , & ft1 ) )"		4830728	3					
ANR	4830765	Condition	"! GetProcessBirthday ( pid1 , & ft1 )"	654:5:16442:16473	4830728	0	True				
ANR	4830766	UnaryOperationExpression	"! GetProcessBirthday ( pid1 , & ft1 )"		4830728	0					
ANR	4830767	UnaryOperator	!		4830728	0					
ANR	4830768	CallExpression	"GetProcessBirthday ( pid1 , & ft1 )"		4830728	1					
ANR	4830769	Callee	GetProcessBirthday		4830728	0					
ANR	4830770	Identifier	GetProcessBirthday		4830728	0					
ANR	4830771	ArgumentList	pid1		4830728	1					
ANR	4830772	Argument	pid1		4830728	0					
ANR	4830773	Identifier	pid1		4830728	0					
ANR	4830774	Argument	& ft1		4830728	1					
ANR	4830775	UnaryOperationExpression	& ft1		4830728	0					
ANR	4830776	UnaryOperator	&		4830728	0					
ANR	4830777	Identifier	ft1		4830728	1					
ANR	4830778	CompoundStatement		8:39:137:137	4830728	1					
ANR	4830779	ExpressionStatement	"dprintf ( D_ALWAYS , ""Should never happen: ComparePidAge(%d) failed\\n"" , pid1 )"	655:2:16480:16558	4830728	0	True				
ANR	4830780	CallExpression	"dprintf ( D_ALWAYS , ""Should never happen: ComparePidAge(%d) failed\\n"" , pid1 )"		4830728	0					
ANR	4830781	Callee	dprintf		4830728	0					
ANR	4830782	Identifier	dprintf		4830728	0					
ANR	4830783	ArgumentList	D_ALWAYS		4830728	1					
ANR	4830784	Argument	D_ALWAYS		4830728	0					
ANR	4830785	Identifier	D_ALWAYS		4830728	0					
ANR	4830786	Argument	"""Should never happen: ComparePidAge(%d) failed\\n"""		4830728	1					
ANR	4830787	PrimaryExpression	"""Should never happen: ComparePidAge(%d) failed\\n"""		4830728	0					
ANR	4830788	Argument	pid1		4830728	2					
ANR	4830789	Identifier	pid1		4830728	0					
ANR	4830790	ReturnStatement	return 0 ;	657:2:16562:16570	4830728	1	True				
ANR	4830791	PrimaryExpression	0		4830728	0					
ANR	4830792	IfStatement	"if ( ! GetProcessBirthday ( pid2 , & ft2 ) )"		4830728	4					
ANR	4830793	Condition	"! GetProcessBirthday ( pid2 , & ft2 )"	660:5:16581:16612	4830728	0	True				
ANR	4830794	UnaryOperationExpression	"! GetProcessBirthday ( pid2 , & ft2 )"		4830728	0					
ANR	4830795	UnaryOperator	!		4830728	0					
ANR	4830796	CallExpression	"GetProcessBirthday ( pid2 , & ft2 )"		4830728	1					
ANR	4830797	Callee	GetProcessBirthday		4830728	0					
ANR	4830798	Identifier	GetProcessBirthday		4830728	0					
ANR	4830799	ArgumentList	pid2		4830728	1					
ANR	4830800	Argument	pid2		4830728	0					
ANR	4830801	Identifier	pid2		4830728	0					
ANR	4830802	Argument	& ft2		4830728	1					
ANR	4830803	UnaryOperationExpression	& ft2		4830728	0					
ANR	4830804	UnaryOperator	&		4830728	0					
ANR	4830805	Identifier	ft2		4830728	1					
ANR	4830806	CompoundStatement		14:39:276:276	4830728	1					
ANR	4830807	ExpressionStatement	"dprintf ( D_ALWAYS , ""Should never happen: ComparePidAge(%d) failed\\n"" , pid2 )"	661:2:16619:16697	4830728	0	True				
ANR	4830808	CallExpression	"dprintf ( D_ALWAYS , ""Should never happen: ComparePidAge(%d) failed\\n"" , pid2 )"		4830728	0					
ANR	4830809	Callee	dprintf		4830728	0					
ANR	4830810	Identifier	dprintf		4830728	0					
ANR	4830811	ArgumentList	D_ALWAYS		4830728	1					
ANR	4830812	Argument	D_ALWAYS		4830728	0					
ANR	4830813	Identifier	D_ALWAYS		4830728	0					
ANR	4830814	Argument	"""Should never happen: ComparePidAge(%d) failed\\n"""		4830728	1					
ANR	4830815	PrimaryExpression	"""Should never happen: ComparePidAge(%d) failed\\n"""		4830728	0					
ANR	4830816	Argument	pid2		4830728	2					
ANR	4830817	Identifier	pid2		4830728	0					
ANR	4830818	ReturnStatement	return 0 ;	663:2:16701:16709	4830728	1	True				
ANR	4830819	PrimaryExpression	0		4830728	0					
ANR	4830820	ReturnStatement	"return CompareFileTime ( & ft1 , & ft2 ) ;"	666:1:16716:16750	4830728	5	True				
ANR	4830821	CallExpression	"CompareFileTime ( & ft1 , & ft2 )"		4830728	0					
ANR	4830822	Callee	CompareFileTime		4830728	0					
ANR	4830823	Identifier	CompareFileTime		4830728	0					
ANR	4830824	ArgumentList	& ft1		4830728	1					
ANR	4830825	Argument	& ft1		4830728	0					
ANR	4830826	UnaryOperationExpression	& ft1		4830728	0					
ANR	4830827	UnaryOperator	&		4830728	0					
ANR	4830828	Identifier	ft1		4830728	1					
ANR	4830829	Argument	& ft2		4830728	1					
ANR	4830830	UnaryOperationExpression	& ft2		4830728	0					
ANR	4830831	UnaryOperator	&		4830728	0					
ANR	4830832	Identifier	ft2		4830728	1					
ANR	4830833	ReturnType	int		4830728	1					
ANR	4830834	Identifier	CSysinfo :: ComparePidAge		4830728	2					
ANR	4830835	ParameterList	"pid_t pid1 , pid_t pid2"		4830728	3					
ANR	4830836	Parameter	pid_t pid1	647:24:16313:16322	4830728	0	True				
ANR	4830837	ParameterType	pid_t		4830728	0					
ANR	4830838	Identifier	pid1		4830728	1					
ANR	4830839	Parameter	pid_t pid2	647:36:16325:16334	4830728	1	True				
ANR	4830840	ParameterType	pid_t		4830728	0					
ANR	4830841	Identifier	pid2		4830728	1					
ANR	4830842	CFGEntryNode	ENTRY		4830728		True				
ANR	4830843	CFGExitNode	EXIT		4830728		True				
ANR	4830844	Symbol	pid1		4830728						
ANR	4830845	Symbol	ft1		4830728						
ANR	4830846	Symbol	pid2		4830728						
ANR	4830847	Symbol	ft2		4830728						
ANR	4830848	Symbol	CompareFileTime		4830728						
ANR	4830849	Symbol	D_ALWAYS		4830728						
ANR	4830850	Symbol	& ft2		4830728						
ANR	4830851	Symbol	& ft1		4830728						
ANR	4830852	Symbol	GetProcessBirthday		4830728						
