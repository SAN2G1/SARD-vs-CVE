command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3032054	File	data/converged/CVE-2011-4930_htcondor/src_condor_daemon_core.V6_HookClientMgr.cpp								
ANR	3032055	Function	HookClientMgr :: HookClientMgr	28:0:1001:1086							
ANR	3032056	FunctionDef	HookClientMgr :: HookClientMgr ()		3032055	0					
ANR	3032057	CompoundStatement		28:31:1032:1086	3032055	0					
ANR	3032058	ExpressionStatement	m_reaper_output_id = - 1	29:1:1035:1058	3032055	0	True				
ANR	3032059	AssignmentExpression	m_reaper_output_id = - 1		3032055	0		=			
ANR	3032060	Identifier	m_reaper_output_id		3032055	0					
ANR	3032061	UnaryOperationExpression	- 1		3032055	1					
ANR	3032062	UnaryOperator	-		3032055	0					
ANR	3032063	PrimaryExpression	1		3032055	1					
ANR	3032064	ExpressionStatement	m_reaper_ignore_id = - 1	30:1:1061:1084	3032055	1	True				
ANR	3032065	AssignmentExpression	m_reaper_ignore_id = - 1		3032055	0		=			
ANR	3032066	Identifier	m_reaper_ignore_id		3032055	0					
ANR	3032067	UnaryOperationExpression	- 1		3032055	1					
ANR	3032068	UnaryOperator	-		3032055	0					
ANR	3032069	PrimaryExpression	1		3032055	1					
ANR	3032070	Identifier	HookClientMgr :: HookClientMgr		3032055	1					
ANR	3032071	ParameterList			3032055	2					
ANR	3032072	CFGEntryNode	ENTRY		3032055		True				
ANR	3032073	CFGExitNode	EXIT		3032055		True				
ANR	3032074	Symbol	m_reaper_ignore_id		3032055						
ANR	3032075	Symbol	m_reaper_output_id		3032055						
ANR	3032076	Function	HookClientMgr :: ~HookClientMgr	34:0:1090:1460							
ANR	3032077	FunctionDef	HookClientMgr :: ~HookClientMgr ()		3032076	0					
ANR	3032078	CompoundStatement		34:32:1122:1460	3032076	0					
ANR	3032079	IdentifierDeclStatement	HookClient * client ;	35:1:1125:1143	3032076	0	True				
ANR	3032080	IdentifierDecl	* client		3032076	0					
ANR	3032081	IdentifierDeclType	HookClient *		3032076	0					
ANR	3032082	Identifier	client		3032076	1					
ANR	3032083	ExpressionStatement	m_client_list . Rewind ( )	36:1:1147:1169	3032076	1	True				
ANR	3032084	CallExpression	m_client_list . Rewind ( )		3032076	0					
ANR	3032085	Callee	m_client_list . Rewind		3032076	0					
ANR	3032086	MemberAccess	m_client_list . Rewind		3032076	0					
ANR	3032087	Identifier	m_client_list		3032076	0					
ANR	3032088	Identifier	Rewind		3032076	1					
ANR	3032089	ArgumentList			3032076	1					
ANR	3032090	WhileStatement	while ( m_client_list . Next ( client ) )		3032076	2					
ANR	3032091	Condition	m_client_list . Next ( client )	37:8:1179:1204	3032076	0	True				
ANR	3032092	CallExpression	m_client_list . Next ( client )		3032076	0					
ANR	3032093	Callee	m_client_list . Next		3032076	0					
ANR	3032094	MemberAccess	m_client_list . Next		3032076	0					
ANR	3032095	Identifier	m_client_list		3032076	0					
ANR	3032096	Identifier	Next		3032076	1					
ANR	3032097	ArgumentList	client		3032076	1					
ANR	3032098	Argument	client		3032076	0					
ANR	3032099	Identifier	client		3032076	0					
ANR	3032100	CompoundStatement		4:36:84:84	3032076	1					
ANR	3032101	ExpressionStatement	m_client_list . DeleteCurrent ( )	39:2:1239:1268	3032076	0	True				
ANR	3032102	CallExpression	m_client_list . DeleteCurrent ( )		3032076	0					
ANR	3032103	Callee	m_client_list . DeleteCurrent		3032076	0					
ANR	3032104	MemberAccess	m_client_list . DeleteCurrent		3032076	0					
ANR	3032105	Identifier	m_client_list		3032076	0					
ANR	3032106	Identifier	DeleteCurrent		3032076	1					
ANR	3032107	ArgumentList			3032076	1					
ANR	3032108	Statement	delete	40:2:1272:1277	3032076	1	True				
ANR	3032109	ExpressionStatement	client	40:9:1279:1285	3032076	2	True				
ANR	3032110	Identifier	client		3032076	0					
ANR	3032111	IfStatement	if ( m_reaper_output_id != - 1 )		3032076	3					
ANR	3032112	Condition	m_reaper_output_id != - 1	42:5:1295:1318	3032076	0	True				
ANR	3032113	EqualityExpression	m_reaper_output_id != - 1		3032076	0		!=			
ANR	3032114	Identifier	m_reaper_output_id		3032076	0					
ANR	3032115	UnaryOperationExpression	- 1		3032076	1					
ANR	3032116	UnaryOperator	-		3032076	0					
ANR	3032117	PrimaryExpression	1		3032076	1					
ANR	3032118	CompoundStatement		9:31:198:198	3032076	1					
ANR	3032119	ExpressionStatement	daemonCore -> Cancel_Reaper ( m_reaper_output_id )	43:2:1325:1370	3032076	0	True				
ANR	3032120	CallExpression	daemonCore -> Cancel_Reaper ( m_reaper_output_id )		3032076	0					
ANR	3032121	Callee	daemonCore -> Cancel_Reaper		3032076	0					
ANR	3032122	PtrMemberAccess	daemonCore -> Cancel_Reaper		3032076	0					
ANR	3032123	Identifier	daemonCore		3032076	0					
ANR	3032124	Identifier	Cancel_Reaper		3032076	1					
ANR	3032125	ArgumentList	m_reaper_output_id		3032076	1					
ANR	3032126	Argument	m_reaper_output_id		3032076	0					
ANR	3032127	Identifier	m_reaper_output_id		3032076	0					
ANR	3032128	IfStatement	if ( m_reaper_ignore_id != - 1 )		3032076	4					
ANR	3032129	Condition	m_reaper_ignore_id != - 1	45:5:1380:1403	3032076	0	True				
ANR	3032130	EqualityExpression	m_reaper_ignore_id != - 1		3032076	0		!=			
ANR	3032131	Identifier	m_reaper_ignore_id		3032076	0					
ANR	3032132	UnaryOperationExpression	- 1		3032076	1					
ANR	3032133	UnaryOperator	-		3032076	0					
ANR	3032134	PrimaryExpression	1		3032076	1					
ANR	3032135	CompoundStatement		12:31:283:283	3032076	1					
ANR	3032136	ExpressionStatement	daemonCore -> Cancel_Reaper ( m_reaper_ignore_id )	46:2:1410:1455	3032076	0	True				
ANR	3032137	CallExpression	daemonCore -> Cancel_Reaper ( m_reaper_ignore_id )		3032076	0					
ANR	3032138	Callee	daemonCore -> Cancel_Reaper		3032076	0					
ANR	3032139	PtrMemberAccess	daemonCore -> Cancel_Reaper		3032076	0					
ANR	3032140	Identifier	daemonCore		3032076	0					
ANR	3032141	Identifier	Cancel_Reaper		3032076	1					
ANR	3032142	ArgumentList	m_reaper_ignore_id		3032076	1					
ANR	3032143	Argument	m_reaper_ignore_id		3032076	0					
ANR	3032144	Identifier	m_reaper_ignore_id		3032076	0					
ANR	3032145	Identifier	HookClientMgr :: ~HookClientMgr		3032076	1					
ANR	3032146	ParameterList			3032076	2					
ANR	3032147	CFGEntryNode	ENTRY		3032076		True				
ANR	3032148	CFGExitNode	EXIT		3032076		True				
ANR	3032149	Symbol	m_reaper_ignore_id		3032076						
ANR	3032150	Symbol	m_client_list . Next		3032076						
ANR	3032151	Symbol	daemonCore		3032076						
ANR	3032152	Symbol	m_client_list		3032076						
ANR	3032153	Symbol	client		3032076						
ANR	3032154	Symbol	m_reaper_output_id		3032076						
ANR	3032155	Function	HookClientMgr :: initialize	51:0:1464:1936							
ANR	3032156	FunctionDef	HookClientMgr :: initialize ()		3032155	0					
ANR	3032157	CompoundStatement		52:28:1497:1936	3032155	0					
ANR	3032158	ExpressionStatement	"m_reaper_output_id = daemonCore -> Register_Reaper ( ""HookClientMgr Output Reaper"" , ( ReaperHandlercpp ) & HookClientMgr :: reaperOutput , ""HookClientMgr Output Reaper"" , this )"	53:1:1500:1680	3032155	0	True				
ANR	3032159	AssignmentExpression	"m_reaper_output_id = daemonCore -> Register_Reaper ( ""HookClientMgr Output Reaper"" , ( ReaperHandlercpp ) & HookClientMgr :: reaperOutput , ""HookClientMgr Output Reaper"" , this )"		3032155	0		=			
ANR	3032160	Identifier	m_reaper_output_id		3032155	0					
ANR	3032161	CallExpression	"daemonCore -> Register_Reaper ( ""HookClientMgr Output Reaper"" , ( ReaperHandlercpp ) & HookClientMgr :: reaperOutput , ""HookClientMgr Output Reaper"" , this )"		3032155	1					
ANR	3032162	Callee	daemonCore -> Register_Reaper		3032155	0					
ANR	3032163	PtrMemberAccess	daemonCore -> Register_Reaper		3032155	0					
ANR	3032164	Identifier	daemonCore		3032155	0					
ANR	3032165	Identifier	Register_Reaper		3032155	1					
ANR	3032166	ArgumentList	"""HookClientMgr Output Reaper"""		3032155	1					
ANR	3032167	Argument	"""HookClientMgr Output Reaper"""		3032155	0					
ANR	3032168	PrimaryExpression	"""HookClientMgr Output Reaper"""		3032155	0					
ANR	3032169	Argument	( ReaperHandlercpp ) & HookClientMgr :: reaperOutput		3032155	1					
ANR	3032170	CastExpression	( ReaperHandlercpp ) & HookClientMgr :: reaperOutput		3032155	0					
ANR	3032171	CastTarget	ReaperHandlercpp		3032155	0					
ANR	3032172	UnaryOperationExpression	& HookClientMgr :: reaperOutput		3032155	1					
ANR	3032173	UnaryOperator	&		3032155	0					
ANR	3032174	Identifier	HookClientMgr :: reaperOutput		3032155	1					
ANR	3032175	Argument	"""HookClientMgr Output Reaper"""		3032155	2					
ANR	3032176	PrimaryExpression	"""HookClientMgr Output Reaper"""		3032155	0					
ANR	3032177	Argument	this		3032155	3					
ANR	3032178	Identifier	this		3032155	0					
ANR	3032179	ExpressionStatement	"m_reaper_ignore_id = daemonCore -> Register_Reaper ( ""HookClientMgr Ignore Reaper"" , ( ReaperHandlercpp ) & HookClientMgr :: reaperIgnore , ""HookClientMgr Ignore Reaper"" , this )"	57:1:1683:1863	3032155	1	True				
ANR	3032180	AssignmentExpression	"m_reaper_ignore_id = daemonCore -> Register_Reaper ( ""HookClientMgr Ignore Reaper"" , ( ReaperHandlercpp ) & HookClientMgr :: reaperIgnore , ""HookClientMgr Ignore Reaper"" , this )"		3032155	0		=			
ANR	3032181	Identifier	m_reaper_ignore_id		3032155	0					
ANR	3032182	CallExpression	"daemonCore -> Register_Reaper ( ""HookClientMgr Ignore Reaper"" , ( ReaperHandlercpp ) & HookClientMgr :: reaperIgnore , ""HookClientMgr Ignore Reaper"" , this )"		3032155	1					
ANR	3032183	Callee	daemonCore -> Register_Reaper		3032155	0					
ANR	3032184	PtrMemberAccess	daemonCore -> Register_Reaper		3032155	0					
ANR	3032185	Identifier	daemonCore		3032155	0					
ANR	3032186	Identifier	Register_Reaper		3032155	1					
ANR	3032187	ArgumentList	"""HookClientMgr Ignore Reaper"""		3032155	1					
ANR	3032188	Argument	"""HookClientMgr Ignore Reaper"""		3032155	0					
ANR	3032189	PrimaryExpression	"""HookClientMgr Ignore Reaper"""		3032155	0					
ANR	3032190	Argument	( ReaperHandlercpp ) & HookClientMgr :: reaperIgnore		3032155	1					
ANR	3032191	CastExpression	( ReaperHandlercpp ) & HookClientMgr :: reaperIgnore		3032155	0					
ANR	3032192	CastTarget	ReaperHandlercpp		3032155	0					
ANR	3032193	UnaryOperationExpression	& HookClientMgr :: reaperIgnore		3032155	1					
ANR	3032194	UnaryOperator	&		3032155	0					
ANR	3032195	Identifier	HookClientMgr :: reaperIgnore		3032155	1					
ANR	3032196	Argument	"""HookClientMgr Ignore Reaper"""		3032155	2					
ANR	3032197	PrimaryExpression	"""HookClientMgr Ignore Reaper"""		3032155	0					
ANR	3032198	Argument	this		3032155	3					
ANR	3032199	Identifier	this		3032155	0					
ANR	3032200	ReturnStatement	return ( m_reaper_output_id != FALSE && m_reaper_ignore_id != FALSE ) ;	62:1:1867:1934	3032155	2	True				
ANR	3032201	AndExpression	m_reaper_output_id != FALSE && m_reaper_ignore_id != FALSE		3032155	0		&&			
ANR	3032202	EqualityExpression	m_reaper_output_id != FALSE		3032155	0		!=			
ANR	3032203	Identifier	m_reaper_output_id		3032155	0					
ANR	3032204	Identifier	FALSE		3032155	1					
ANR	3032205	EqualityExpression	m_reaper_ignore_id != FALSE		3032155	1		!=			
ANR	3032206	Identifier	m_reaper_ignore_id		3032155	0					
ANR	3032207	Identifier	FALSE		3032155	1					
ANR	3032208	ReturnType	bool		3032155	1					
ANR	3032209	Identifier	HookClientMgr :: initialize		3032155	2					
ANR	3032210	ParameterList			3032155	3					
ANR	3032211	CFGEntryNode	ENTRY		3032155		True				
ANR	3032212	CFGExitNode	EXIT		3032155		True				
ANR	3032213	Symbol	daemonCore -> Register_Reaper		3032155						
ANR	3032214	Symbol	& HookClientMgr :: reaperIgnore		3032155						
ANR	3032215	Symbol	& HookClientMgr :: reaperOutput		3032155						
ANR	3032216	Symbol	m_reaper_ignore_id		3032155						
ANR	3032217	Symbol	* daemonCore		3032155						
ANR	3032218	Symbol	daemonCore		3032155						
ANR	3032219	Symbol	this		3032155						
ANR	3032220	Symbol	FALSE		3032155						
ANR	3032221	Symbol	m_reaper_output_id		3032155						
ANR	3032222	Function	HookClientMgr :: spawn	66:0:1940:3338							
ANR	3032223	FunctionDef	"HookClientMgr :: spawn (HookClient * client , ArgList * args , MyString * hook_stdin , priv_state priv , Env * env)"		3032222	0					
ANR	3032224	CompoundStatement		67:105:2050:3338	3032222	0					
ANR	3032225	IdentifierDeclStatement	int reaper_id ;	68:1:2053:2066	3032222	0	True				
ANR	3032226	IdentifierDecl	reaper_id		3032222	0					
ANR	3032227	IdentifierDeclType	int		3032222	0					
ANR	3032228	Identifier	reaper_id		3032222	1					
ANR	3032229	IdentifierDeclStatement	bool wants_output = client -> wantsOutput ( ) ;	69:1:2069:2110	3032222	1	True				
ANR	3032230	IdentifierDecl	wants_output = client -> wantsOutput ( )		3032222	0					
ANR	3032231	IdentifierDeclType	bool		3032222	0					
ANR	3032232	Identifier	wants_output		3032222	1					
ANR	3032233	AssignmentExpression	wants_output = client -> wantsOutput ( )		3032222	2		=			
ANR	3032234	Identifier	wants_output		3032222	0					
ANR	3032235	CallExpression	client -> wantsOutput ( )		3032222	1					
ANR	3032236	Callee	client -> wantsOutput		3032222	0					
ANR	3032237	PtrMemberAccess	client -> wantsOutput		3032222	0					
ANR	3032238	Identifier	client		3032222	0					
ANR	3032239	Identifier	wantsOutput		3032222	1					
ANR	3032240	ArgumentList			3032222	1					
ANR	3032241	IdentifierDeclStatement	const char * hook_path = client -> path ( ) ;	70:1:2113:2151	3032222	2	True				
ANR	3032242	IdentifierDecl	* hook_path = client -> path ( )		3032222	0					
ANR	3032243	IdentifierDeclType	const char *		3032222	0					
ANR	3032244	Identifier	hook_path		3032222	1					
ANR	3032245	AssignmentExpression	* hook_path = client -> path ( )		3032222	2		=			
ANR	3032246	Identifier	hook_path		3032222	0					
ANR	3032247	CallExpression	client -> path ( )		3032222	1					
ANR	3032248	Callee	client -> path		3032222	0					
ANR	3032249	PtrMemberAccess	client -> path		3032222	0					
ANR	3032250	Identifier	client		3032222	0					
ANR	3032251	Identifier	path		3032222	1					
ANR	3032252	ArgumentList			3032222	1					
ANR	3032253	IdentifierDeclStatement	ArgList final_args ;	72:1:2155:2173	3032222	3	True				
ANR	3032254	IdentifierDecl	final_args		3032222	0					
ANR	3032255	IdentifierDeclType	ArgList		3032222	0					
ANR	3032256	Identifier	final_args		3032222	1					
ANR	3032257	ExpressionStatement	final_args . AppendArg ( hook_path )	73:1:2176:2207	3032222	4	True				
ANR	3032258	CallExpression	final_args . AppendArg ( hook_path )		3032222	0					
ANR	3032259	Callee	final_args . AppendArg		3032222	0					
ANR	3032260	MemberAccess	final_args . AppendArg		3032222	0					
ANR	3032261	Identifier	final_args		3032222	0					
ANR	3032262	Identifier	AppendArg		3032222	1					
ANR	3032263	ArgumentList	hook_path		3032222	1					
ANR	3032264	Argument	hook_path		3032222	0					
ANR	3032265	Identifier	hook_path		3032222	0					
ANR	3032266	IfStatement	if ( args )		3032222	5					
ANR	3032267	Condition	args	74:5:2214:2217	3032222	0	True				
ANR	3032268	Identifier	args		3032222	0					
ANR	3032269	CompoundStatement		8:11:169:169	3032222	1					
ANR	3032270	ExpressionStatement	final_args . AppendArgsFromArgList ( * args )	75:2:2224:2263	3032222	0	True				
ANR	3032271	CallExpression	final_args . AppendArgsFromArgList ( * args )		3032222	0					
ANR	3032272	Callee	final_args . AppendArgsFromArgList		3032222	0					
ANR	3032273	MemberAccess	final_args . AppendArgsFromArgList		3032222	0					
ANR	3032274	Identifier	final_args		3032222	0					
ANR	3032275	Identifier	AppendArgsFromArgList		3032222	1					
ANR	3032276	ArgumentList	* args		3032222	1					
ANR	3032277	Argument	* args		3032222	0					
ANR	3032278	UnaryOperationExpression	* args		3032222	0					
ANR	3032279	UnaryOperator	*		3032222	0					
ANR	3032280	Identifier	args		3032222	1					
ANR	3032281	IdentifierDeclStatement	"int std_fds [ 3 ] = { DC_STD_FD_NOPIPE , DC_STD_FD_NOPIPE , DC_STD_FD_NOPIPE } ;"	78:4:2273:2344	3032222	6	True				
ANR	3032282	IdentifierDecl	"std_fds [ 3 ] = { DC_STD_FD_NOPIPE , DC_STD_FD_NOPIPE , DC_STD_FD_NOPIPE }"		3032222	0					
ANR	3032283	IdentifierDeclType	int [ 3 ]		3032222	0					
ANR	3032284	Identifier	std_fds		3032222	1					
ANR	3032285	PrimaryExpression	3		3032222	2					
ANR	3032286	AssignmentExpression	"std_fds [ 3 ] = { DC_STD_FD_NOPIPE , DC_STD_FD_NOPIPE , DC_STD_FD_NOPIPE }"		3032222	3		=			
ANR	3032287	Identifier	std_fds		3032222	0					
ANR	3032288	InitializerList	DC_STD_FD_NOPIPE		3032222	1					
ANR	3032289	Identifier	DC_STD_FD_NOPIPE		3032222	0					
ANR	3032290	Identifier	DC_STD_FD_NOPIPE		3032222	1					
ANR	3032291	Identifier	DC_STD_FD_NOPIPE		3032222	2					
ANR	3032292	IfStatement	if ( hook_stdin && hook_stdin -> Length ( ) )		3032222	7					
ANR	3032293	Condition	hook_stdin && hook_stdin -> Length ( )	79:8:2354:2387	3032222	0	True				
ANR	3032294	AndExpression	hook_stdin && hook_stdin -> Length ( )		3032222	0		&&			
ANR	3032295	Identifier	hook_stdin		3032222	0					
ANR	3032296	CallExpression	hook_stdin -> Length ( )		3032222	1					
ANR	3032297	Callee	hook_stdin -> Length		3032222	0					
ANR	3032298	PtrMemberAccess	hook_stdin -> Length		3032222	0					
ANR	3032299	Identifier	hook_stdin		3032222	0					
ANR	3032300	Identifier	Length		3032222	1					
ANR	3032301	ArgumentList			3032222	1					
ANR	3032302	CompoundStatement		13:44:339:339	3032222	1					
ANR	3032303	ExpressionStatement	std_fds [ 0 ] = DC_STD_FD_PIPE	80:2:2394:2421	3032222	0	True				
ANR	3032304	AssignmentExpression	std_fds [ 0 ] = DC_STD_FD_PIPE		3032222	0		=			
ANR	3032305	ArrayIndexing	std_fds [ 0 ]		3032222	0					
ANR	3032306	Identifier	std_fds		3032222	0					
ANR	3032307	PrimaryExpression	0		3032222	1					
ANR	3032308	Identifier	DC_STD_FD_PIPE		3032222	1					
ANR	3032309	IfStatement	if ( wants_output )		3032222	8					
ANR	3032310	Condition	wants_output	82:5:2431:2442	3032222	0	True				
ANR	3032311	Identifier	wants_output		3032222	0					
ANR	3032312	CompoundStatement		16:19:394:394	3032222	1					
ANR	3032313	ExpressionStatement	std_fds [ 1 ] = DC_STD_FD_PIPE	83:2:2449:2476	3032222	0	True				
ANR	3032314	AssignmentExpression	std_fds [ 1 ] = DC_STD_FD_PIPE		3032222	0		=			
ANR	3032315	ArrayIndexing	std_fds [ 1 ]		3032222	0					
ANR	3032316	Identifier	std_fds		3032222	0					
ANR	3032317	PrimaryExpression	1		3032222	1					
ANR	3032318	Identifier	DC_STD_FD_PIPE		3032222	1					
ANR	3032319	ExpressionStatement	std_fds [ 2 ] = DC_STD_FD_PIPE	84:2:2480:2507	3032222	1	True				
ANR	3032320	AssignmentExpression	std_fds [ 2 ] = DC_STD_FD_PIPE		3032222	0		=			
ANR	3032321	ArrayIndexing	std_fds [ 2 ]		3032222	0					
ANR	3032322	Identifier	std_fds		3032222	0					
ANR	3032323	PrimaryExpression	2		3032222	1					
ANR	3032324	Identifier	DC_STD_FD_PIPE		3032222	1					
ANR	3032325	ExpressionStatement	reaper_id = m_reaper_output_id	85:2:2511:2541	3032222	2	True				
ANR	3032326	AssignmentExpression	reaper_id = m_reaper_output_id		3032222	0		=			
ANR	3032327	Identifier	reaper_id		3032222	0					
ANR	3032328	Identifier	m_reaper_output_id		3032222	1					
ANR	3032329	ElseStatement	else		3032222	0					
ANR	3032330	CompoundStatement		21:6:501:501	3032222	0					
ANR	3032331	ExpressionStatement	reaper_id = m_reaper_ignore_id	88:2:2556:2586	3032222	0	True				
ANR	3032332	AssignmentExpression	reaper_id = m_reaper_ignore_id		3032222	0		=			
ANR	3032333	Identifier	reaper_id		3032222	0					
ANR	3032334	Identifier	m_reaper_ignore_id		3032222	1					
ANR	3032335	IdentifierDeclStatement	FamilyInfo fi ;	93:1:2701:2714	3032222	9	True				
ANR	3032336	IdentifierDecl	fi		3032222	0					
ANR	3032337	IdentifierDeclType	FamilyInfo		3032222	0					
ANR	3032338	Identifier	fi		3032222	1					
ANR	3032339	ExpressionStatement	"fi . max_snapshot_interval = param_integer ( ""PID_SNAPSHOT_INTERVAL"" , 15 )"	94:1:2717:2786	3032222	10	True				
ANR	3032340	AssignmentExpression	"fi . max_snapshot_interval = param_integer ( ""PID_SNAPSHOT_INTERVAL"" , 15 )"		3032222	0		=			
ANR	3032341	MemberAccess	fi . max_snapshot_interval		3032222	0					
ANR	3032342	Identifier	fi		3032222	0					
ANR	3032343	Identifier	max_snapshot_interval		3032222	1					
ANR	3032344	CallExpression	"param_integer ( ""PID_SNAPSHOT_INTERVAL"" , 15 )"		3032222	1					
ANR	3032345	Callee	param_integer		3032222	0					
ANR	3032346	Identifier	param_integer		3032222	0					
ANR	3032347	ArgumentList	"""PID_SNAPSHOT_INTERVAL"""		3032222	1					
ANR	3032348	Argument	"""PID_SNAPSHOT_INTERVAL"""		3032222	0					
ANR	3032349	PrimaryExpression	"""PID_SNAPSHOT_INTERVAL"""		3032222	0					
ANR	3032350	Argument	15		3032222	1					
ANR	3032351	PrimaryExpression	15		3032222	0					
ANR	3032352	IdentifierDeclStatement	"int pid = daemonCore -> Create_Process ( hook_path , final_args , priv , reaper_id , FALSE , env , NULL , & fi , NULL , std_fds ) ;"	96:1:2790:2921	3032222	11	True				
ANR	3032353	IdentifierDecl	"pid = daemonCore -> Create_Process ( hook_path , final_args , priv , reaper_id , FALSE , env , NULL , & fi , NULL , std_fds )"		3032222	0					
ANR	3032354	IdentifierDeclType	int		3032222	0					
ANR	3032355	Identifier	pid		3032222	1					
ANR	3032356	AssignmentExpression	"pid = daemonCore -> Create_Process ( hook_path , final_args , priv , reaper_id , FALSE , env , NULL , & fi , NULL , std_fds )"		3032222	2		=			
ANR	3032357	Identifier	pid		3032222	0					
ANR	3032358	CallExpression	"daemonCore -> Create_Process ( hook_path , final_args , priv , reaper_id , FALSE , env , NULL , & fi , NULL , std_fds )"		3032222	1					
ANR	3032359	Callee	daemonCore -> Create_Process		3032222	0					
ANR	3032360	PtrMemberAccess	daemonCore -> Create_Process		3032222	0					
ANR	3032361	Identifier	daemonCore		3032222	0					
ANR	3032362	Identifier	Create_Process		3032222	1					
ANR	3032363	ArgumentList	hook_path		3032222	1					
ANR	3032364	Argument	hook_path		3032222	0					
ANR	3032365	Identifier	hook_path		3032222	0					
ANR	3032366	Argument	final_args		3032222	1					
ANR	3032367	Identifier	final_args		3032222	0					
ANR	3032368	Argument	priv		3032222	2					
ANR	3032369	Identifier	priv		3032222	0					
ANR	3032370	Argument	reaper_id		3032222	3					
ANR	3032371	Identifier	reaper_id		3032222	0					
ANR	3032372	Argument	FALSE		3032222	4					
ANR	3032373	Identifier	FALSE		3032222	0					
ANR	3032374	Argument	env		3032222	5					
ANR	3032375	Identifier	env		3032222	0					
ANR	3032376	Argument	NULL		3032222	6					
ANR	3032377	Identifier	NULL		3032222	0					
ANR	3032378	Argument	& fi		3032222	7					
ANR	3032379	UnaryOperationExpression	& fi		3032222	0					
ANR	3032380	UnaryOperator	&		3032222	0					
ANR	3032381	Identifier	fi		3032222	1					
ANR	3032382	Argument	NULL		3032222	8					
ANR	3032383	Identifier	NULL		3032222	0					
ANR	3032384	Argument	std_fds		3032222	9					
ANR	3032385	Identifier	std_fds		3032222	0					
ANR	3032386	ExpressionStatement	client -> setPid ( pid )	100:1:2924:2943	3032222	12	True				
ANR	3032387	CallExpression	client -> setPid ( pid )		3032222	0					
ANR	3032388	Callee	client -> setPid		3032222	0					
ANR	3032389	PtrMemberAccess	client -> setPid		3032222	0					
ANR	3032390	Identifier	client		3032222	0					
ANR	3032391	Identifier	setPid		3032222	1					
ANR	3032392	ArgumentList	pid		3032222	1					
ANR	3032393	Argument	pid		3032222	0					
ANR	3032394	Identifier	pid		3032222	0					
ANR	3032395	IfStatement	if ( pid == FALSE )		3032222	13					
ANR	3032396	Condition	pid == FALSE	101:5:2950:2961	3032222	0	True				
ANR	3032397	EqualityExpression	pid == FALSE		3032222	0		==			
ANR	3032398	Identifier	pid		3032222	0					
ANR	3032399	Identifier	FALSE		3032222	1					
ANR	3032400	CompoundStatement		35:19:913:913	3032222	1					
ANR	3032401	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Create_Process failed in HookClient::spawn()!\\n"" )"	102:2:2968:3044	3032222	0	True				
ANR	3032402	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Create_Process failed in HookClient::spawn()!\\n"" )"		3032222	0					
ANR	3032403	Callee	dprintf		3032222	0					
ANR	3032404	Identifier	dprintf		3032222	0					
ANR	3032405	ArgumentList	D_ALWAYS		3032222	1					
ANR	3032406	Argument	D_ALWAYS		3032222	0					
ANR	3032407	Identifier	D_ALWAYS		3032222	0					
ANR	3032408	Argument	"""ERROR: Create_Process failed in HookClient::spawn()!\\n"""		3032222	1					
ANR	3032409	PrimaryExpression	"""ERROR: Create_Process failed in HookClient::spawn()!\\n"""		3032222	0					
ANR	3032410	ReturnStatement	return false ;	103:2:3048:3060	3032222	1	True				
ANR	3032411	Identifier	false		3032222	0					
ANR	3032412	IfStatement	if ( hook_stdin && hook_stdin -> Length ( ) )		3032222	14					
ANR	3032413	Condition	hook_stdin && hook_stdin -> Length ( )	107:8:3136:3169	3032222	0	True				
ANR	3032414	AndExpression	hook_stdin && hook_stdin -> Length ( )		3032222	0		&&			
ANR	3032415	Identifier	hook_stdin		3032222	0					
ANR	3032416	CallExpression	hook_stdin -> Length ( )		3032222	1					
ANR	3032417	Callee	hook_stdin -> Length		3032222	0					
ANR	3032418	PtrMemberAccess	hook_stdin -> Length		3032222	0					
ANR	3032419	Identifier	hook_stdin		3032222	0					
ANR	3032420	Identifier	Length		3032222	1					
ANR	3032421	ArgumentList			3032222	1					
ANR	3032422	CompoundStatement		41:44:1121:1121	3032222	1					
ANR	3032423	ExpressionStatement	"daemonCore -> Write_Stdin_Pipe ( pid , hook_stdin -> Value ( ) , hook_stdin -> Length ( ) )"	108:2:3176:3262	3032222	0	True				
ANR	3032424	CallExpression	"daemonCore -> Write_Stdin_Pipe ( pid , hook_stdin -> Value ( ) , hook_stdin -> Length ( ) )"		3032222	0					
ANR	3032425	Callee	daemonCore -> Write_Stdin_Pipe		3032222	0					
ANR	3032426	PtrMemberAccess	daemonCore -> Write_Stdin_Pipe		3032222	0					
ANR	3032427	Identifier	daemonCore		3032222	0					
ANR	3032428	Identifier	Write_Stdin_Pipe		3032222	1					
ANR	3032429	ArgumentList	pid		3032222	1					
ANR	3032430	Argument	pid		3032222	0					
ANR	3032431	Identifier	pid		3032222	0					
ANR	3032432	Argument	hook_stdin -> Value ( )		3032222	1					
ANR	3032433	CallExpression	hook_stdin -> Value ( )		3032222	0					
ANR	3032434	Callee	hook_stdin -> Value		3032222	0					
ANR	3032435	PtrMemberAccess	hook_stdin -> Value		3032222	0					
ANR	3032436	Identifier	hook_stdin		3032222	0					
ANR	3032437	Identifier	Value		3032222	1					
ANR	3032438	ArgumentList			3032222	1					
ANR	3032439	Argument	hook_stdin -> Length ( )		3032222	2					
ANR	3032440	CallExpression	hook_stdin -> Length ( )		3032222	0					
ANR	3032441	Callee	hook_stdin -> Length		3032222	0					
ANR	3032442	PtrMemberAccess	hook_stdin -> Length		3032222	0					
ANR	3032443	Identifier	hook_stdin		3032222	0					
ANR	3032444	Identifier	Length		3032222	1					
ANR	3032445	ArgumentList			3032222	1					
ANR	3032446	IfStatement	if ( wants_output )		3032222	15					
ANR	3032447	Condition	wants_output	112:5:3273:3284	3032222	0	True				
ANR	3032448	Identifier	wants_output		3032222	0					
ANR	3032449	CompoundStatement		46:19:1236:1236	3032222	1					
ANR	3032450	ExpressionStatement	m_client_list . Append ( client )	113:2:3291:3319	3032222	0	True				
ANR	3032451	CallExpression	m_client_list . Append ( client )		3032222	0					
ANR	3032452	Callee	m_client_list . Append		3032222	0					
ANR	3032453	MemberAccess	m_client_list . Append		3032222	0					
ANR	3032454	Identifier	m_client_list		3032222	0					
ANR	3032455	Identifier	Append		3032222	1					
ANR	3032456	ArgumentList	client		3032222	1					
ANR	3032457	Argument	client		3032222	0					
ANR	3032458	Identifier	client		3032222	0					
ANR	3032459	ReturnStatement	return true ;	115:1:3325:3336	3032222	16	True				
ANR	3032460	Identifier	true		3032222	0					
ANR	3032461	ReturnType	bool		3032222	1					
ANR	3032462	Identifier	HookClientMgr :: spawn		3032222	2					
ANR	3032463	ParameterList	"HookClient * client , ArgList * args , MyString * hook_stdin , priv_state priv , Env * env"		3032222	3					
ANR	3032464	Parameter	HookClient * client	67:21:1966:1983	3032222	0	True				
ANR	3032465	ParameterType	HookClient *		3032222	0					
ANR	3032466	Identifier	client		3032222	1					
ANR	3032467	Parameter	ArgList * args	67:41:1986:1998	3032222	1	True				
ANR	3032468	ParameterType	ArgList *		3032222	0					
ANR	3032469	Identifier	args		3032222	1					
ANR	3032470	Parameter	MyString * hook_stdin	67:56:2001:2020	3032222	2	True				
ANR	3032471	ParameterType	MyString *		3032222	0					
ANR	3032472	Identifier	hook_stdin		3032222	1					
ANR	3032473	Parameter	priv_state priv	67:78:2023:2037	3032222	3	True				
ANR	3032474	ParameterType	priv_state		3032222	0					
ANR	3032475	Identifier	priv		3032222	1					
ANR	3032476	Parameter	Env * env	67:95:2040:2047	3032222	4	True				
ANR	3032477	ParameterType	Env *		3032222	0					
ANR	3032478	Identifier	env		3032222	1					
ANR	3032479	CFGEntryNode	ENTRY		3032222		True				
ANR	3032480	CFGExitNode	EXIT		3032222		True				
ANR	3032481	Symbol	final_args		3032222						
ANR	3032482	Symbol	daemonCore -> Create_Process		3032222						
ANR	3032483	Symbol	fi		3032222						
ANR	3032484	Symbol	fi . max_snapshot_interval		3032222						
ANR	3032485	Symbol	client -> wantsOutput		3032222						
ANR	3032486	Symbol	hook_path		3032222						
ANR	3032487	Symbol	* client		3032222						
ANR	3032488	Symbol	client -> path		3032222						
ANR	3032489	Symbol	pid		3032222						
ANR	3032490	Symbol	* args		3032222						
ANR	3032491	Symbol	* std_fds		3032222						
ANR	3032492	Symbol	std_fds		3032222						
ANR	3032493	Symbol	daemonCore		3032222						
ANR	3032494	Symbol	m_client_list		3032222						
ANR	3032495	Symbol	client		3032222						
ANR	3032496	Symbol	DC_STD_FD_NOPIPE		3032222						
ANR	3032497	Symbol	priv		3032222						
ANR	3032498	Symbol	m_reaper_output_id		3032222						
ANR	3032499	Symbol	* hook_stdin		3032222						
ANR	3032500	Symbol	NULL		3032222						
ANR	3032501	Symbol	reaper_id		3032222						
ANR	3032502	Symbol	m_reaper_ignore_id		3032222						
ANR	3032503	Symbol	D_ALWAYS		3032222						
ANR	3032504	Symbol	false		3032222						
ANR	3032505	Symbol	wants_output		3032222						
ANR	3032506	Symbol	DC_STD_FD_PIPE		3032222						
ANR	3032507	Symbol	hook_stdin		3032222						
ANR	3032508	Symbol	env		3032222						
ANR	3032509	Symbol	& fi		3032222						
ANR	3032510	Symbol	args		3032222						
ANR	3032511	Symbol	* daemonCore		3032222						
ANR	3032512	Symbol	true		3032222						
ANR	3032513	Symbol	hook_stdin -> Value		3032222						
ANR	3032514	Symbol	param_integer		3032222						
ANR	3032515	Symbol	FALSE		3032222						
ANR	3032516	Symbol	hook_stdin -> Length		3032222						
ANR	3032517	Function	HookClientMgr :: remove	119:0:3342:3432							
ANR	3032518	FunctionDef	HookClientMgr :: remove (HookClient * client)		3032517	0					
ANR	3032519	CompoundStatement		120:42:3389:3432	3032517	0					
ANR	3032520	ReturnStatement	return m_client_list . Delete ( client ) ;	121:4:3395:3430	3032517	0	True				
ANR	3032521	CallExpression	m_client_list . Delete ( client )		3032517	0					
ANR	3032522	Callee	m_client_list . Delete		3032517	0					
ANR	3032523	MemberAccess	m_client_list . Delete		3032517	0					
ANR	3032524	Identifier	m_client_list		3032517	0					
ANR	3032525	Identifier	Delete		3032517	1					
ANR	3032526	ArgumentList	client		3032517	1					
ANR	3032527	Argument	client		3032517	0					
ANR	3032528	Identifier	client		3032517	0					
ANR	3032529	ReturnType	bool		3032517	1					
ANR	3032530	Identifier	HookClientMgr :: remove		3032517	2					
ANR	3032531	ParameterList	HookClient * client		3032517	3					
ANR	3032532	Parameter	HookClient * client	120:22:3369:3386	3032517	0	True				
ANR	3032533	ParameterType	HookClient *		3032517	0					
ANR	3032534	Identifier	client		3032517	1					
ANR	3032535	CFGEntryNode	ENTRY		3032517		True				
ANR	3032536	CFGExitNode	EXIT		3032517		True				
ANR	3032537	Symbol	m_client_list . Delete		3032517						
ANR	3032538	Symbol	m_client_list		3032517						
ANR	3032539	Symbol	client		3032517						
ANR	3032540	Function	HookClientMgr :: reaperOutput	125:0:3436:4197							
ANR	3032541	FunctionDef	"HookClientMgr :: reaperOutput (int exit_pid , int exit_status)"		3032540	0					
ANR	3032542	CompoundStatement		127:0:3499:4197	3032540	0					
ANR	3032543	ExpressionStatement	daemonCore -> Kill_Family ( exit_pid )	129:1:3560:3593	3032540	0	True				
ANR	3032544	CallExpression	daemonCore -> Kill_Family ( exit_pid )		3032540	0					
ANR	3032545	Callee	daemonCore -> Kill_Family		3032540	0					
ANR	3032546	PtrMemberAccess	daemonCore -> Kill_Family		3032540	0					
ANR	3032547	Identifier	daemonCore		3032540	0					
ANR	3032548	Identifier	Kill_Family		3032540	1					
ANR	3032549	ArgumentList	exit_pid		3032540	1					
ANR	3032550	Argument	exit_pid		3032540	0					
ANR	3032551	Identifier	exit_pid		3032540	0					
ANR	3032552	IdentifierDeclStatement	bool found_it = false ;	131:1:3597:3618	3032540	1	True				
ANR	3032553	IdentifierDecl	found_it = false		3032540	0					
ANR	3032554	IdentifierDeclType	bool		3032540	0					
ANR	3032555	Identifier	found_it		3032540	1					
ANR	3032556	AssignmentExpression	found_it = false		3032540	2		=			
ANR	3032557	Identifier	false		3032540	0					
ANR	3032558	Identifier	false		3032540	1					
ANR	3032559	IdentifierDeclStatement	HookClient * client ;	132:1:3621:3639	3032540	2	True				
ANR	3032560	IdentifierDecl	* client		3032540	0					
ANR	3032561	IdentifierDeclType	HookClient *		3032540	0					
ANR	3032562	Identifier	client		3032540	1					
ANR	3032563	ExpressionStatement	m_client_list . Rewind ( )	133:1:3643:3665	3032540	3	True				
ANR	3032564	CallExpression	m_client_list . Rewind ( )		3032540	0					
ANR	3032565	Callee	m_client_list . Rewind		3032540	0					
ANR	3032566	MemberAccess	m_client_list . Rewind		3032540	0					
ANR	3032567	Identifier	m_client_list		3032540	0					
ANR	3032568	Identifier	Rewind		3032540	1					
ANR	3032569	ArgumentList			3032540	1					
ANR	3032570	WhileStatement	while ( m_client_list . Next ( client ) )		3032540	4					
ANR	3032571	Condition	m_client_list . Next ( client )	134:8:3675:3700	3032540	0	True				
ANR	3032572	CallExpression	m_client_list . Next ( client )		3032540	0					
ANR	3032573	Callee	m_client_list . Next		3032540	0					
ANR	3032574	MemberAccess	m_client_list . Next		3032540	0					
ANR	3032575	Identifier	m_client_list		3032540	0					
ANR	3032576	Identifier	Next		3032540	1					
ANR	3032577	ArgumentList	client		3032540	1					
ANR	3032578	Argument	client		3032540	0					
ANR	3032579	Identifier	client		3032540	0					
ANR	3032580	CompoundStatement		8:36:203:203	3032540	1					
ANR	3032581	IfStatement	if ( exit_pid == client -> getPid ( ) )		3032540	0					
ANR	3032582	Condition	exit_pid == client -> getPid ( )	135:6:3711:3738	3032540	0	True				
ANR	3032583	EqualityExpression	exit_pid == client -> getPid ( )		3032540	0		==			
ANR	3032584	Identifier	exit_pid		3032540	0					
ANR	3032585	CallExpression	client -> getPid ( )		3032540	1					
ANR	3032586	Callee	client -> getPid		3032540	0					
ANR	3032587	PtrMemberAccess	client -> getPid		3032540	0					
ANR	3032588	Identifier	client		3032540	0					
ANR	3032589	Identifier	getPid		3032540	1					
ANR	3032590	ArgumentList			3032540	1					
ANR	3032591	CompoundStatement		9:36:241:241	3032540	1					
ANR	3032592	ExpressionStatement	found_it = true	136:3:3746:3761	3032540	0	True				
ANR	3032593	AssignmentExpression	found_it = true		3032540	0		=			
ANR	3032594	Identifier	found_it		3032540	0					
ANR	3032595	Identifier	true		3032540	1					
ANR	3032596	BreakStatement	break ;	137:3:3766:3771	3032540	1	True				
ANR	3032597	IfStatement	if ( ! found_it )		3032540	5					
ANR	3032598	Condition	! found_it	141:5:3786:3794	3032540	0	True				
ANR	3032599	UnaryOperationExpression	! found_it		3032540	0					
ANR	3032600	UnaryOperator	!		3032540	0					
ANR	3032601	Identifier	found_it		3032540	1					
ANR	3032602	CompoundStatement		15:16:297:297	3032540	1					
ANR	3032603	Statement	dprintf	143:2:3824:3830	3032540	0	True				
ANR	3032604	Statement	(	143:9:3831:3831	3032540	1	True				
ANR	3032605	Statement	D_ALWAYS	143:10:3832:3839	3032540	2	True				
ANR	3032606	Statement	|	143:18:3840:3840	3032540	3	True				
ANR	3032607	Statement	D_FAILURE	143:19:3841:3849	3032540	4	True				
ANR	3032608	Statement	","	143:28:3850:3850	3032540	5	True				
ANR	3032609	Statement	"""Unexpected: HookClientMgr::reaper() """	143:30:3852:3889	3032540	6	True				
ANR	3032610	Statement	"""called with pid %d but no HookClient found that matches.\\n"""	144:4:3895:3954	3032540	7	True				
ANR	3032611	Statement	","	144:64:3955:3955	3032540	8	True				
ANR	3032612	Statement	exit_pid	145:4:3961:3968	3032540	9	True				
ANR	3032613	Statement	)	145:12:3969:3969	3032540	10	True				
ANR	3032614	ExpressionStatement		145:13:3970:3970	3032540	11	True				
ANR	3032615	ReturnStatement	return FALSE ;	146:2:3974:3986	3032540	12	True				
ANR	3032616	Identifier	FALSE		3032540	0					
ANR	3032617	ExpressionStatement	client -> hookExited ( exit_status )	148:1:3992:4023	3032540	6	True				
ANR	3032618	CallExpression	client -> hookExited ( exit_status )		3032540	0					
ANR	3032619	Callee	client -> hookExited		3032540	0					
ANR	3032620	PtrMemberAccess	client -> hookExited		3032540	0					
ANR	3032621	Identifier	client		3032540	0					
ANR	3032622	Identifier	hookExited		3032540	1					
ANR	3032623	ArgumentList	exit_status		3032540	1					
ANR	3032624	Argument	exit_status		3032540	0					
ANR	3032625	Identifier	exit_status		3032540	0					
ANR	3032626	ExpressionStatement	m_client_list . DeleteCurrent ( )	152:1:4135:4164	3032540	7	True				
ANR	3032627	CallExpression	m_client_list . DeleteCurrent ( )		3032540	0					
ANR	3032628	Callee	m_client_list . DeleteCurrent		3032540	0					
ANR	3032629	MemberAccess	m_client_list . DeleteCurrent		3032540	0					
ANR	3032630	Identifier	m_client_list		3032540	0					
ANR	3032631	Identifier	DeleteCurrent		3032540	1					
ANR	3032632	ArgumentList			3032540	1					
ANR	3032633	Statement	delete	153:1:4167:4172	3032540	8	True				
ANR	3032634	ExpressionStatement	client	153:8:4174:4180	3032540	9	True				
ANR	3032635	Identifier	client		3032540	0					
ANR	3032636	ReturnStatement	return TRUE ;	155:1:4184:4195	3032540	10	True				
ANR	3032637	Identifier	TRUE		3032540	0					
ANR	3032638	ReturnType	int		3032540	1					
ANR	3032639	Identifier	HookClientMgr :: reaperOutput		3032540	2					
ANR	3032640	ParameterList	"int exit_pid , int exit_status"		3032540	3					
ANR	3032641	Parameter	int exit_pid	126:28:3468:3479	3032540	0	True				
ANR	3032642	ParameterType	int		3032540	0					
ANR	3032643	Identifier	exit_pid		3032540	1					
ANR	3032644	Parameter	int exit_status	126:42:3482:3496	3032540	1	True				
ANR	3032645	ParameterType	int		3032540	0					
ANR	3032646	Identifier	exit_status		3032540	1					
ANR	3032647	CFGEntryNode	ENTRY		3032540		True				
ANR	3032648	CFGExitNode	EXIT		3032540		True				
ANR	3032649	Symbol	found_it		3032540						
ANR	3032650	Symbol	m_client_list . Next		3032540						
ANR	3032651	Symbol	false		3032540						
ANR	3032652	Symbol	client -> getPid		3032540						
ANR	3032653	Symbol	TRUE		3032540						
ANR	3032654	Symbol	* client		3032540						
ANR	3032655	Symbol	exit_status		3032540						
ANR	3032656	Symbol	exit_pid		3032540						
ANR	3032657	Symbol	daemonCore		3032540						
ANR	3032658	Symbol	m_client_list		3032540						
ANR	3032659	Symbol	true		3032540						
ANR	3032660	Symbol	client		3032540						
ANR	3032661	Symbol	FALSE		3032540						
ANR	3032662	Function	HookClientMgr :: reaperIgnore	159:0:4201:4660							
ANR	3032663	FunctionDef	"HookClientMgr :: reaperIgnore (int exit_pid , int exit_status)"		3032662	0					
ANR	3032664	CompoundStatement		161:0:4264:4660	3032662	0					
ANR	3032665	ExpressionStatement	daemonCore -> Kill_Family ( exit_pid )	163:1:4325:4358	3032662	0	True				
ANR	3032666	CallExpression	daemonCore -> Kill_Family ( exit_pid )		3032662	0					
ANR	3032667	Callee	daemonCore -> Kill_Family		3032662	0					
ANR	3032668	PtrMemberAccess	daemonCore -> Kill_Family		3032662	0					
ANR	3032669	Identifier	daemonCore		3032662	0					
ANR	3032670	Identifier	Kill_Family		3032662	1					
ANR	3032671	ArgumentList	exit_pid		3032662	1					
ANR	3032672	Argument	exit_pid		3032662	0					
ANR	3032673	Identifier	exit_pid		3032662	0					
ANR	3032674	IdentifierDeclStatement	MyString status_txt ;	167:1:4485:4504	3032662	1	True				
ANR	3032675	IdentifierDecl	status_txt		3032662	0					
ANR	3032676	IdentifierDeclType	MyString		3032662	0					
ANR	3032677	Identifier	status_txt		3032662	1					
ANR	3032678	ExpressionStatement	"status_txt . sprintf ( ""Hook (pid %d) "" , exit_pid )"	168:1:4507:4553	3032662	2	True				
ANR	3032679	CallExpression	"status_txt . sprintf ( ""Hook (pid %d) "" , exit_pid )"		3032662	0					
ANR	3032680	Callee	status_txt . sprintf		3032662	0					
ANR	3032681	MemberAccess	status_txt . sprintf		3032662	0					
ANR	3032682	Identifier	status_txt		3032662	0					
ANR	3032683	Identifier	sprintf		3032662	1					
ANR	3032684	ArgumentList	"""Hook (pid %d) """		3032662	1					
ANR	3032685	Argument	"""Hook (pid %d) """		3032662	0					
ANR	3032686	PrimaryExpression	"""Hook (pid %d) """		3032662	0					
ANR	3032687	Argument	exit_pid		3032662	1					
ANR	3032688	Identifier	exit_pid		3032662	0					
ANR	3032689	ExpressionStatement	"statusString ( exit_status , status_txt )"	169:1:4556:4593	3032662	3	True				
ANR	3032690	CallExpression	"statusString ( exit_status , status_txt )"		3032662	0					
ANR	3032691	Callee	statusString		3032662	0					
ANR	3032692	Identifier	statusString		3032662	0					
ANR	3032693	ArgumentList	exit_status		3032662	1					
ANR	3032694	Argument	exit_status		3032662	0					
ANR	3032695	Identifier	exit_status		3032662	0					
ANR	3032696	Argument	status_txt		3032662	1					
ANR	3032697	Identifier	status_txt		3032662	0					
ANR	3032698	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s\\n"" , status_txt . Value ( ) )"	170:1:4596:4644	3032662	4	True				
ANR	3032699	CallExpression	"dprintf ( D_FULLDEBUG , ""%s\\n"" , status_txt . Value ( ) )"		3032662	0					
ANR	3032700	Callee	dprintf		3032662	0					
ANR	3032701	Identifier	dprintf		3032662	0					
ANR	3032702	ArgumentList	D_FULLDEBUG		3032662	1					
ANR	3032703	Argument	D_FULLDEBUG		3032662	0					
ANR	3032704	Identifier	D_FULLDEBUG		3032662	0					
ANR	3032705	Argument	"""%s\\n"""		3032662	1					
ANR	3032706	PrimaryExpression	"""%s\\n"""		3032662	0					
ANR	3032707	Argument	status_txt . Value ( )		3032662	2					
ANR	3032708	CallExpression	status_txt . Value ( )		3032662	0					
ANR	3032709	Callee	status_txt . Value		3032662	0					
ANR	3032710	MemberAccess	status_txt . Value		3032662	0					
ANR	3032711	Identifier	status_txt		3032662	0					
ANR	3032712	Identifier	Value		3032662	1					
ANR	3032713	ArgumentList			3032662	1					
ANR	3032714	ReturnStatement	return TRUE ;	171:1:4647:4658	3032662	5	True				
ANR	3032715	Identifier	TRUE		3032662	0					
ANR	3032716	ReturnType	int		3032662	1					
ANR	3032717	Identifier	HookClientMgr :: reaperIgnore		3032662	2					
ANR	3032718	ParameterList	"int exit_pid , int exit_status"		3032662	3					
ANR	3032719	Parameter	int exit_pid	160:28:4233:4244	3032662	0	True				
ANR	3032720	ParameterType	int		3032662	0					
ANR	3032721	Identifier	exit_pid		3032662	1					
ANR	3032722	Parameter	int exit_status	160:42:4247:4261	3032662	1	True				
ANR	3032723	ParameterType	int		3032662	0					
ANR	3032724	Identifier	exit_status		3032662	1					
ANR	3032725	CFGEntryNode	ENTRY		3032662		True				
ANR	3032726	CFGExitNode	EXIT		3032662		True				
ANR	3032727	Symbol	status_txt . Value		3032662						
ANR	3032728	Symbol	exit_pid		3032662						
ANR	3032729	Symbol	daemonCore		3032662						
ANR	3032730	Symbol	TRUE		3032662						
ANR	3032731	Symbol	D_FULLDEBUG		3032662						
ANR	3032732	Symbol	exit_status		3032662						
ANR	3032733	Symbol	status_txt		3032662						
