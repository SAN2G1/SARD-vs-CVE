command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5559220	File	data/converged/CVE-2011-4930_htcondor/vm_type.cpp								
ANR	5559221	DeclStmt									
ANR	5559222	Decl							extern VMGahp	extern VMGahp *	vmgahp
ANR	5559223	Function	VMType :: VMType	40:0:1310:2254							
ANR	5559224	FunctionDef	"VMType :: VMType (const char * prog_for_script , const char * scriptname , const char * workingpath , ClassAd * ad)"		5559223	0					
ANR	5559225	CompoundStatement		41:0:1416:2254	5559223	0					
ANR	5559226	ExpressionStatement	m_vm_id = vmgahp -> getNewVMId ( )	42:1:1419:1449	5559223	0	True				
ANR	5559227	AssignmentExpression	m_vm_id = vmgahp -> getNewVMId ( )		5559223	0		=			
ANR	5559228	Identifier	m_vm_id		5559223	0					
ANR	5559229	CallExpression	vmgahp -> getNewVMId ( )		5559223	1					
ANR	5559230	Callee	vmgahp -> getNewVMId		5559223	0					
ANR	5559231	PtrMemberAccess	vmgahp -> getNewVMId		5559223	0					
ANR	5559232	Identifier	vmgahp		5559223	0					
ANR	5559233	Identifier	getNewVMId		5559223	1					
ANR	5559234	ArgumentList			5559223	1					
ANR	5559235	ExpressionStatement	m_prog_for_script = prog_for_script	43:1:1452:1487	5559223	1	True				
ANR	5559236	AssignmentExpression	m_prog_for_script = prog_for_script		5559223	0		=			
ANR	5559237	Identifier	m_prog_for_script		5559223	0					
ANR	5559238	Identifier	prog_for_script		5559223	1					
ANR	5559239	ExpressionStatement	m_scriptname = scriptname	44:1:1490:1515	5559223	2	True				
ANR	5559240	AssignmentExpression	m_scriptname = scriptname		5559223	0		=			
ANR	5559241	Identifier	m_scriptname		5559223	0					
ANR	5559242	Identifier	scriptname		5559223	1					
ANR	5559243	ExpressionStatement	m_workingpath = workingpath	45:1:1518:1545	5559223	3	True				
ANR	5559244	AssignmentExpression	m_workingpath = workingpath		5559223	0		=			
ANR	5559245	Identifier	m_workingpath		5559223	0					
ANR	5559246	Identifier	workingpath		5559223	1					
ANR	5559247	ExpressionStatement	m_classAd = * ad	46:1:1548:1563	5559223	4	True				
ANR	5559248	AssignmentExpression	m_classAd = * ad		5559223	0		=			
ANR	5559249	Identifier	m_classAd		5559223	0					
ANR	5559250	UnaryOperationExpression	* ad		5559223	1					
ANR	5559251	UnaryOperator	*		5559223	0					
ANR	5559252	Identifier	ad		5559223	1					
ANR	5559253	ExpressionStatement	m_vm_pid = 0	47:1:1566:1578	5559223	5	True				
ANR	5559254	AssignmentExpression	m_vm_pid = 0		5559223	0		=			
ANR	5559255	Identifier	m_vm_pid		5559223	0					
ANR	5559256	PrimaryExpression	0		5559223	1					
ANR	5559257	ExpressionStatement	m_vm_mem = 0	48:1:1581:1593	5559223	6	True				
ANR	5559258	AssignmentExpression	m_vm_mem = 0		5559223	0		=			
ANR	5559259	Identifier	m_vm_mem		5559223	0					
ANR	5559260	PrimaryExpression	0		5559223	1					
ANR	5559261	ExpressionStatement	m_vm_networking = false	49:1:1596:1619	5559223	7	True				
ANR	5559262	AssignmentExpression	m_vm_networking = false		5559223	0		=			
ANR	5559263	Identifier	m_vm_networking		5559223	0					
ANR	5559264	Identifier	false		5559223	1					
ANR	5559265	ExpressionStatement	m_vm_checkpoint = false	50:1:1622:1645	5559223	8	True				
ANR	5559266	AssignmentExpression	m_vm_checkpoint = false		5559223	0		=			
ANR	5559267	Identifier	m_vm_checkpoint		5559223	0					
ANR	5559268	Identifier	false		5559223	1					
ANR	5559269	ExpressionStatement	m_vm_no_output_vm = false	51:1:1648:1673	5559223	9	True				
ANR	5559270	AssignmentExpression	m_vm_no_output_vm = false		5559223	0		=			
ANR	5559271	Identifier	m_vm_no_output_vm		5559223	0					
ANR	5559272	Identifier	false		5559223	1					
ANR	5559273	ExpressionStatement	m_vm_hardware_vt = false	52:1:1677:1701	5559223	10	True				
ANR	5559274	AssignmentExpression	m_vm_hardware_vt = false		5559223	0		=			
ANR	5559275	Identifier	m_vm_hardware_vt		5559223	0					
ANR	5559276	Identifier	false		5559223	1					
ANR	5559277	ExpressionStatement	m_is_soft_suspended = false	53:1:1705:1732	5559223	11	True				
ANR	5559278	AssignmentExpression	m_is_soft_suspended = false		5559223	0		=			
ANR	5559279	Identifier	m_is_soft_suspended		5559223	0					
ANR	5559280	Identifier	false		5559223	1					
ANR	5559281	ExpressionStatement	m_self_shutdown = false	54:1:1735:1758	5559223	12	True				
ANR	5559282	AssignmentExpression	m_self_shutdown = false		5559223	0		=			
ANR	5559283	Identifier	m_self_shutdown		5559223	0					
ANR	5559284	Identifier	false		5559223	1					
ANR	5559285	ExpressionStatement	m_is_checkpointed = false	55:1:1761:1786	5559223	13	True				
ANR	5559286	AssignmentExpression	m_is_checkpointed = false		5559223	0		=			
ANR	5559287	Identifier	m_is_checkpointed		5559223	0					
ANR	5559288	Identifier	false		5559223	1					
ANR	5559289	ExpressionStatement	m_status = VM_STOPPED	56:1:1789:1810	5559223	14	True				
ANR	5559290	AssignmentExpression	m_status = VM_STOPPED		5559223	0		=			
ANR	5559291	Identifier	m_status		5559223	0					
ANR	5559292	Identifier	VM_STOPPED		5559223	1					
ANR	5559293	ExpressionStatement	m_cpu_time = 0	57:1:1813:1827	5559223	15	True				
ANR	5559294	AssignmentExpression	m_cpu_time = 0		5559223	0		=			
ANR	5559295	Identifier	m_cpu_time		5559223	0					
ANR	5559296	PrimaryExpression	0		5559223	1					
ANR	5559297	ExpressionStatement	m_delete_working_files = false	58:1:1830:1860	5559223	16	True				
ANR	5559298	AssignmentExpression	m_delete_working_files = false		5559223	0		=			
ANR	5559299	Identifier	m_delete_working_files		5559223	0					
ANR	5559300	Identifier	false		5559223	1					
ANR	5559301	ExpressionStatement	m_vcpus = 1	59:1:1863:1874	5559223	17	True				
ANR	5559302	AssignmentExpression	m_vcpus = 1		5559223	0		=			
ANR	5559303	Identifier	m_vcpus		5559223	0					
ANR	5559304	PrimaryExpression	1		5559223	1					
ANR	5559305	IfStatement	if ( privsep_enabled ( ) )		5559223	18					
ANR	5559306	Condition	privsep_enabled ( )	61:6:1883:1899	5559223	0	True				
ANR	5559307	CallExpression	privsep_enabled ( )		5559223	0					
ANR	5559308	Callee	privsep_enabled		5559223	0					
ANR	5559309	Identifier	privsep_enabled		5559223	0					
ANR	5559310	ArgumentList			5559223	1					
ANR	5559311	CompoundStatement		21:26:486:486	5559223	1					
ANR	5559312	ExpressionStatement	m_file_owner = PRIV_CONDOR	62:2:1907:1933	5559223	0	True				
ANR	5559313	AssignmentExpression	m_file_owner = PRIV_CONDOR		5559223	0		=			
ANR	5559314	Identifier	m_file_owner		5559223	0					
ANR	5559315	Identifier	PRIV_CONDOR		5559223	1					
ANR	5559316	ElseStatement	else		5559223	0					
ANR	5559317	CompoundStatement		23:8:526:526	5559223	0					
ANR	5559318	ExpressionStatement	m_file_owner = PRIV_USER	64:2:1947:1971	5559223	0	True				
ANR	5559319	AssignmentExpression	m_file_owner = PRIV_USER		5559223	0		=			
ANR	5559320	Identifier	m_file_owner		5559223	0					
ANR	5559321	Identifier	PRIV_USER		5559223	1					
ANR	5559322	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Constructed VM_Type.\\n"" )"	67:1:1978:2025	5559223	19	True				
ANR	5559323	CallExpression	"vmprintf ( D_FULLDEBUG , ""Constructed VM_Type.\\n"" )"		5559223	0					
ANR	5559324	Callee	vmprintf		5559223	0					
ANR	5559325	Identifier	vmprintf		5559223	0					
ANR	5559326	ArgumentList	D_FULLDEBUG		5559223	1					
ANR	5559327	Argument	D_FULLDEBUG		5559223	0					
ANR	5559328	Identifier	D_FULLDEBUG		5559223	0					
ANR	5559329	Argument	"""Constructed VM_Type.\\n"""		5559223	1					
ANR	5559330	PrimaryExpression	"""Constructed VM_Type.\\n"""		5559223	0					
ANR	5559331	ExpressionStatement	"m_use_script_to_create_config = param_boolean ( ""USE_SCRIPT_TO_CREATE_CONFIG"" , false )"	70:1:2096:2182	5559223	20	True				
ANR	5559332	AssignmentExpression	"m_use_script_to_create_config = param_boolean ( ""USE_SCRIPT_TO_CREATE_CONFIG"" , false )"		5559223	0		=			
ANR	5559333	Identifier	m_use_script_to_create_config		5559223	0					
ANR	5559334	CallExpression	"param_boolean ( ""USE_SCRIPT_TO_CREATE_CONFIG"" , false )"		5559223	1					
ANR	5559335	Callee	param_boolean		5559223	0					
ANR	5559336	Identifier	param_boolean		5559223	0					
ANR	5559337	ArgumentList	"""USE_SCRIPT_TO_CREATE_CONFIG"""		5559223	1					
ANR	5559338	Argument	"""USE_SCRIPT_TO_CREATE_CONFIG"""		5559223	0					
ANR	5559339	PrimaryExpression	"""USE_SCRIPT_TO_CREATE_CONFIG"""		5559223	0					
ANR	5559340	Argument	false		5559223	1					
ANR	5559341	Identifier	false		5559223	0					
ANR	5559342	ExpressionStatement	createInitialFileList ( )	74:1:2228:2251	5559223	21	True				
ANR	5559343	CallExpression	createInitialFileList ( )		5559223	0					
ANR	5559344	Callee	createInitialFileList		5559223	0					
ANR	5559345	Identifier	createInitialFileList		5559223	0					
ANR	5559346	ArgumentList			5559223	1					
ANR	5559347	Identifier	VMType :: VMType		5559223	1					
ANR	5559348	ParameterList	"const char * prog_for_script , const char * scriptname , const char * workingpath , ClassAd * ad"		5559223	2					
ANR	5559349	Parameter	const char * prog_for_script	40:15:1325:1351	5559223	0	True				
ANR	5559350	ParameterType	const char *		5559223	0					
ANR	5559351	Identifier	prog_for_script		5559223	1					
ANR	5559352	Parameter	const char * scriptname	40:44:1354:1375	5559223	1	True				
ANR	5559353	ParameterType	const char *		5559223	0					
ANR	5559354	Identifier	scriptname		5559223	1					
ANR	5559355	Parameter	const char * workingpath	40:68:1378:1400	5559223	2	True				
ANR	5559356	ParameterType	const char *		5559223	0					
ANR	5559357	Identifier	workingpath		5559223	1					
ANR	5559358	Parameter	ClassAd * ad	40:93:1403:1413	5559223	3	True				
ANR	5559359	ParameterType	ClassAd *		5559223	0					
ANR	5559360	Identifier	ad		5559223	1					
ANR	5559361	CFGEntryNode	ENTRY		5559223		True				
ANR	5559362	CFGExitNode	EXIT		5559223		True				
ANR	5559363	Symbol	m_vm_id		5559223						
ANR	5559364	Symbol	m_cpu_time		5559223						
ANR	5559365	Symbol	m_vm_mem		5559223						
ANR	5559366	Symbol	* ad		5559223						
ANR	5559367	Symbol	scriptname		5559223						
ANR	5559368	Symbol	* vmgahp		5559223						
ANR	5559369	Symbol	m_vm_pid		5559223						
ANR	5559370	Symbol	vmgahp		5559223						
ANR	5559371	Symbol	PRIV_USER		5559223						
ANR	5559372	Symbol	workingpath		5559223						
ANR	5559373	Symbol	m_vm_checkpoint		5559223						
ANR	5559374	Symbol	m_file_owner		5559223						
ANR	5559375	Symbol	m_status		5559223						
ANR	5559376	Symbol	m_vm_hardware_vt		5559223						
ANR	5559377	Symbol	m_prog_for_script		5559223						
ANR	5559378	Symbol	m_self_shutdown		5559223						
ANR	5559379	Symbol	ad		5559223						
ANR	5559380	Symbol	m_delete_working_files		5559223						
ANR	5559381	Symbol	false		5559223						
ANR	5559382	Symbol	VM_STOPPED		5559223						
ANR	5559383	Symbol	D_FULLDEBUG		5559223						
ANR	5559384	Symbol	param_boolean		5559223						
ANR	5559385	Symbol	prog_for_script		5559223						
ANR	5559386	Symbol	m_workingpath		5559223						
ANR	5559387	Symbol	m_use_script_to_create_config		5559223						
ANR	5559388	Symbol	m_vm_networking		5559223						
ANR	5559389	Symbol	privsep_enabled		5559223						
ANR	5559390	Symbol	m_scriptname		5559223						
ANR	5559391	Symbol	m_is_soft_suspended		5559223						
ANR	5559392	Symbol	m_is_checkpointed		5559223						
ANR	5559393	Symbol	PRIV_CONDOR		5559223						
ANR	5559394	Symbol	m_classAd		5559223						
ANR	5559395	Symbol	m_vm_no_output_vm		5559223						
ANR	5559396	Symbol	m_vcpus		5559223						
ANR	5559397	Symbol	vmgahp -> getNewVMId		5559223						
ANR	5559398	Function	VMType :: ~VMType	78:0:2257:2696							
ANR	5559399	FunctionDef	VMType :: ~VMType ()		5559398	0					
ANR	5559400	CompoundStatement		79:0:2275:2696	5559398	0					
ANR	5559401	IfStatement	if ( m_vm_pid > 0 && daemonCore )		5559398	0					
ANR	5559402	Condition	m_vm_pid > 0 && daemonCore	80:5:2282:2307	5559398	0	True				
ANR	5559403	AndExpression	m_vm_pid > 0 && daemonCore		5559398	0		&&			
ANR	5559404	RelationalExpression	m_vm_pid > 0		5559398	0		>			
ANR	5559405	Identifier	m_vm_pid		5559398	0					
ANR	5559406	PrimaryExpression	0		5559398	1					
ANR	5559407	Identifier	daemonCore		5559398	1					
ANR	5559408	CompoundStatement		2:34:35:35	5559398	1					
ANR	5559409	ExpressionStatement	"daemonCore -> Send_Signal ( m_vm_pid , SIGKILL )"	81:2:2315:2357	5559398	0	True				
ANR	5559410	CallExpression	"daemonCore -> Send_Signal ( m_vm_pid , SIGKILL )"		5559398	0					
ANR	5559411	Callee	daemonCore -> Send_Signal		5559398	0					
ANR	5559412	PtrMemberAccess	daemonCore -> Send_Signal		5559398	0					
ANR	5559413	Identifier	daemonCore		5559398	0					
ANR	5559414	Identifier	Send_Signal		5559398	1					
ANR	5559415	ArgumentList	m_vm_pid		5559398	1					
ANR	5559416	Argument	m_vm_pid		5559398	0					
ANR	5559417	Identifier	m_vm_pid		5559398	0					
ANR	5559418	Argument	SIGKILL		5559398	1					
ANR	5559419	Identifier	SIGKILL		5559398	0					
ANR	5559420	ExpressionStatement	m_vm_id = 0	83:1:2363:2374	5559398	1	True				
ANR	5559421	AssignmentExpression	m_vm_id = 0		5559398	0		=			
ANR	5559422	Identifier	m_vm_id		5559398	0					
ANR	5559423	PrimaryExpression	0		5559398	1					
ANR	5559424	ExpressionStatement	m_vm_pid = 0	84:1:2377:2389	5559398	2	True				
ANR	5559425	AssignmentExpression	m_vm_pid = 0		5559398	0		=			
ANR	5559426	Identifier	m_vm_pid		5559398	0					
ANR	5559427	PrimaryExpression	0		5559398	1					
ANR	5559428	ExpressionStatement	m_status = VM_STOPPED	85:1:2392:2413	5559398	3	True				
ANR	5559429	AssignmentExpression	m_status = VM_STOPPED		5559398	0		=			
ANR	5559430	Identifier	m_status		5559398	0					
ANR	5559431	Identifier	VM_STOPPED		5559398	1					
ANR	5559432	ExpressionStatement	m_cpu_time = 0	86:1:2416:2430	5559398	4	True				
ANR	5559433	AssignmentExpression	m_cpu_time = 0		5559398	0		=			
ANR	5559434	Identifier	m_cpu_time		5559398	0					
ANR	5559435	PrimaryExpression	0		5559398	1					
ANR	5559436	IfStatement	if ( m_delete_working_files && ! m_is_checkpointed )		5559398	5					
ANR	5559437	Condition	m_delete_working_files && ! m_is_checkpointed	88:5:2438:2481	5559398	0	True				
ANR	5559438	AndExpression	m_delete_working_files && ! m_is_checkpointed		5559398	0		&&			
ANR	5559439	Identifier	m_delete_working_files		5559398	0					
ANR	5559440	UnaryOperationExpression	! m_is_checkpointed		5559398	1					
ANR	5559441	UnaryOperator	!		5559398	0					
ANR	5559442	Identifier	m_is_checkpointed		5559398	1					
ANR	5559443	CompoundStatement		10:52:209:209	5559398	1					
ANR	5559444	IfStatement	if ( m_workingpath . IsEmpty ( ) == false )		5559398	0					
ANR	5559445	Condition	m_workingpath . IsEmpty ( ) == false	89:6:2493:2524	5559398	0	True				
ANR	5559446	EqualityExpression	m_workingpath . IsEmpty ( ) == false		5559398	0		==			
ANR	5559447	CallExpression	m_workingpath . IsEmpty ( )		5559398	0					
ANR	5559448	Callee	m_workingpath . IsEmpty		5559398	0					
ANR	5559449	MemberAccess	m_workingpath . IsEmpty		5559398	0					
ANR	5559450	Identifier	m_workingpath		5559398	0					
ANR	5559451	Identifier	IsEmpty		5559398	1					
ANR	5559452	ArgumentList			5559398	1					
ANR	5559453	Identifier	false		5559398	1					
ANR	5559454	CompoundStatement		13:3:314:369	5559398	1					
ANR	5559455	IdentifierDeclStatement	"Directory working_dir ( m_workingpath . Value ( ) , PRIV_USER ) ;"	91:3:2590:2645	5559398	0	True				
ANR	5559456	IdentifierDecl	"working_dir ( m_workingpath . Value ( ) , PRIV_USER )"		5559398	0					
ANR	5559457	IdentifierDeclType	Directory		5559398	0					
ANR	5559458	Identifier	working_dir		5559398	1					
ANR	5559459	Expression	"m_workingpath . Value ( ) , PRIV_USER"		5559398	2					
ANR	5559460	CallExpression	m_workingpath . Value ( )		5559398	0					
ANR	5559461	Callee	m_workingpath . Value		5559398	0					
ANR	5559462	MemberAccess	m_workingpath . Value		5559398	0					
ANR	5559463	Identifier	m_workingpath		5559398	0					
ANR	5559464	Identifier	Value		5559398	1					
ANR	5559465	ArgumentList			5559398	1					
ANR	5559466	Identifier	PRIV_USER		5559398	1					
ANR	5559467	ExpressionStatement	working_dir . Remove_Entire_Directory ( )	92:3:2650:2687	5559398	1	True				
ANR	5559468	CallExpression	working_dir . Remove_Entire_Directory ( )		5559398	0					
ANR	5559469	Callee	working_dir . Remove_Entire_Directory		5559398	0					
ANR	5559470	MemberAccess	working_dir . Remove_Entire_Directory		5559398	0					
ANR	5559471	Identifier	working_dir		5559398	0					
ANR	5559472	Identifier	Remove_Entire_Directory		5559398	1					
ANR	5559473	ArgumentList			5559398	1					
ANR	5559474	Identifier	VMType :: ~VMType		5559398	1					
ANR	5559475	ParameterList			5559398	2					
ANR	5559476	CFGEntryNode	ENTRY		5559398		True				
ANR	5559477	CFGExitNode	EXIT		5559398		True				
ANR	5559478	Symbol	m_workingpath . IsEmpty		5559398						
ANR	5559479	Symbol	m_vm_id		5559398						
ANR	5559480	Symbol	m_delete_working_files		5559398						
ANR	5559481	Symbol	m_cpu_time		5559398						
ANR	5559482	Symbol	working_dir		5559398						
ANR	5559483	Symbol	false		5559398						
ANR	5559484	Symbol	VM_STOPPED		5559398						
ANR	5559485	Symbol	m_vm_pid		5559398						
ANR	5559486	Symbol	SIGKILL		5559398						
ANR	5559487	Symbol	m_workingpath		5559398						
ANR	5559488	Symbol	daemonCore		5559398						
ANR	5559489	Symbol	m_is_checkpointed		5559398						
ANR	5559490	Symbol	m_status		5559398						
ANR	5559491	Function	VMType :: parseCommonParamFromClassAd	97:0:2699:7603							
ANR	5559492	FunctionDef	VMType :: parseCommonParamFromClassAd (bool is_root)		5559491	0					
ANR	5559493	CompoundStatement		99:0:2765:7603	5559491	0					
ANR	5559494	ExpressionStatement	"m_result_msg = """""	102:1:2804:2821	5559491	0	True				
ANR	5559495	AssignmentExpression	"m_result_msg = """""		5559491	0		=			
ANR	5559496	Identifier	m_result_msg		5559491	0					
ANR	5559497	PrimaryExpression	""""""		5559491	1					
ANR	5559498	IfStatement	"if ( m_classAd . LookupInteger ( ATTR_JOB_VM_MEMORY , m_vm_mem ) != 1 )"		5559491	1					
ANR	5559499	Condition	"m_classAd . LookupInteger ( ATTR_JOB_VM_MEMORY , m_vm_mem ) != 1"	104:5:2865:2923	5559491	0	True				
ANR	5559500	EqualityExpression	"m_classAd . LookupInteger ( ATTR_JOB_VM_MEMORY , m_vm_mem ) != 1"		5559491	0		!=			
ANR	5559501	CallExpression	"m_classAd . LookupInteger ( ATTR_JOB_VM_MEMORY , m_vm_mem )"		5559491	0					
ANR	5559502	Callee	m_classAd . LookupInteger		5559491	0					
ANR	5559503	MemberAccess	m_classAd . LookupInteger		5559491	0					
ANR	5559504	Identifier	m_classAd		5559491	0					
ANR	5559505	Identifier	LookupInteger		5559491	1					
ANR	5559506	ArgumentList	ATTR_JOB_VM_MEMORY		5559491	1					
ANR	5559507	Argument	ATTR_JOB_VM_MEMORY		5559491	0					
ANR	5559508	Identifier	ATTR_JOB_VM_MEMORY		5559491	0					
ANR	5559509	Argument	m_vm_mem		5559491	1					
ANR	5559510	Identifier	m_vm_mem		5559491	0					
ANR	5559511	PrimaryExpression	1		5559491	1					
ANR	5559512	CompoundStatement		6:67:161:161	5559491	1					
ANR	5559513	ExpressionStatement	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , ATTR_JOB_VM_MEMORY )"	105:2:2931:3013	5559491	0	True				
ANR	5559514	CallExpression	"vmprintf ( D_ALWAYS , ""%s cannot be found in job classAd\\n"" , ATTR_JOB_VM_MEMORY )"		5559491	0					
ANR	5559515	Callee	vmprintf		5559491	0					
ANR	5559516	Identifier	vmprintf		5559491	0					
ANR	5559517	ArgumentList	D_ALWAYS		5559491	1					
ANR	5559518	Argument	D_ALWAYS		5559491	0					
ANR	5559519	Identifier	D_ALWAYS		5559491	0					
ANR	5559520	Argument	"""%s cannot be found in job classAd\\n"""		5559491	1					
ANR	5559521	PrimaryExpression	"""%s cannot be found in job classAd\\n"""		5559491	0					
ANR	5559522	Argument	ATTR_JOB_VM_MEMORY		5559491	2					
ANR	5559523	Identifier	ATTR_JOB_VM_MEMORY		5559491	0					
ANR	5559524	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_NO_VM_MEMORY_PARAM	107:2:3017:3072	5559491	1	True				
ANR	5559525	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_NO_VM_MEMORY_PARAM		5559491	0		=			
ANR	5559526	Identifier	m_result_msg		5559491	0					
ANR	5559527	Identifier	VMGAHP_ERR_JOBCLASSAD_NO_VM_MEMORY_PARAM		5559491	1					
ANR	5559528	ReturnStatement	return false ;	108:2:3076:3088	5559491	2	True				
ANR	5559529	Identifier	false		5559491	0					
ANR	5559530	ElseStatement	else		5559491	0					
ANR	5559531	CompoundStatement		11:7:331:331	5559491	0					
ANR	5559532	IfStatement	if ( ( m_vm_mem <= 0 ) || ( m_vm_mem > vmgahp -> m_gahp_config -> m_vm_max_memory ) )		5559491	0					
ANR	5559533	Condition	( m_vm_mem <= 0 ) || ( m_vm_mem > vmgahp -> m_gahp_config -> m_vm_max_memory )	111:6:3180:3256	5559491	0	True				
ANR	5559534	OrExpression	( m_vm_mem <= 0 ) || ( m_vm_mem > vmgahp -> m_gahp_config -> m_vm_max_memory )		5559491	0		||			
ANR	5559535	RelationalExpression	m_vm_mem <= 0		5559491	0		<=			
ANR	5559536	Identifier	m_vm_mem		5559491	0					
ANR	5559537	PrimaryExpression	0		5559491	1					
ANR	5559538	RelationalExpression	m_vm_mem > vmgahp -> m_gahp_config -> m_vm_max_memory		5559491	1		>			
ANR	5559539	Identifier	m_vm_mem		5559491	0					
ANR	5559540	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_max_memory		5559491	1					
ANR	5559541	PtrMemberAccess	vmgahp -> m_gahp_config		5559491	0					
ANR	5559542	Identifier	vmgahp		5559491	0					
ANR	5559543	Identifier	m_gahp_config		5559491	1					
ANR	5559544	Identifier	m_vm_max_memory		5559491	1					
ANR	5559545	CompoundStatement		14:58:494:494	5559491	1					
ANR	5559546	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_TOO_MUCH_MEMORY_REQUEST	113:3:3265:3325	5559491	0	True				
ANR	5559547	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_TOO_MUCH_MEMORY_REQUEST		5559491	0		=			
ANR	5559548	Identifier	m_result_msg		5559491	0					
ANR	5559549	Identifier	VMGAHP_ERR_JOBCLASSAD_TOO_MUCH_MEMORY_REQUEST		5559491	1					
ANR	5559550	ReturnStatement	return false ;	114:3:3330:3342	5559491	1	True				
ANR	5559551	Identifier	false		5559491	0					
ANR	5559552	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Memory: %d\\n"" , m_vm_mem )"	117:1:3352:3399	5559491	2	True				
ANR	5559553	CallExpression	"vmprintf ( D_FULLDEBUG , ""Memory: %d\\n"" , m_vm_mem )"		5559491	0					
ANR	5559554	Callee	vmprintf		5559491	0					
ANR	5559555	Identifier	vmprintf		5559491	0					
ANR	5559556	ArgumentList	D_FULLDEBUG		5559491	1					
ANR	5559557	Argument	D_FULLDEBUG		5559491	0					
ANR	5559558	Identifier	D_FULLDEBUG		5559491	0					
ANR	5559559	Argument	"""Memory: %d\\n"""		5559491	1					
ANR	5559560	PrimaryExpression	"""Memory: %d\\n"""		5559491	0					
ANR	5559561	Argument	m_vm_mem		5559491	2					
ANR	5559562	Identifier	m_vm_mem		5559491	0					
ANR	5559563	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Looking up number of vcpus.\\n"" )"	119:1:3403:3457	5559491	3	True				
ANR	5559564	CallExpression	"vmprintf ( D_FULLDEBUG , ""Looking up number of vcpus.\\n"" )"		5559491	0					
ANR	5559565	Callee	vmprintf		5559491	0					
ANR	5559566	Identifier	vmprintf		5559491	0					
ANR	5559567	ArgumentList	D_FULLDEBUG		5559491	1					
ANR	5559568	Argument	D_FULLDEBUG		5559491	0					
ANR	5559569	Identifier	D_FULLDEBUG		5559491	0					
ANR	5559570	Argument	"""Looking up number of vcpus.\\n"""		5559491	1					
ANR	5559571	PrimaryExpression	"""Looking up number of vcpus.\\n"""		5559491	0					
ANR	5559572	IfStatement	"if ( m_classAd . LookupInteger ( ATTR_JOB_VM_VCPUS , m_vcpus ) != 1 )"		5559491	4					
ANR	5559573	Condition	"m_classAd . LookupInteger ( ATTR_JOB_VM_VCPUS , m_vcpus ) != 1"	121:5:3493:3549	5559491	0	True				
ANR	5559574	EqualityExpression	"m_classAd . LookupInteger ( ATTR_JOB_VM_VCPUS , m_vcpus ) != 1"		5559491	0		!=			
ANR	5559575	CallExpression	"m_classAd . LookupInteger ( ATTR_JOB_VM_VCPUS , m_vcpus )"		5559491	0					
ANR	5559576	Callee	m_classAd . LookupInteger		5559491	0					
ANR	5559577	MemberAccess	m_classAd . LookupInteger		5559491	0					
ANR	5559578	Identifier	m_classAd		5559491	0					
ANR	5559579	Identifier	LookupInteger		5559491	1					
ANR	5559580	ArgumentList	ATTR_JOB_VM_VCPUS		5559491	1					
ANR	5559581	Argument	ATTR_JOB_VM_VCPUS		5559491	0					
ANR	5559582	Identifier	ATTR_JOB_VM_VCPUS		5559491	0					
ANR	5559583	Argument	m_vcpus		5559491	1					
ANR	5559584	Identifier	m_vcpus		5559491	0					
ANR	5559585	PrimaryExpression	1		5559491	1					
ANR	5559586	CompoundStatement		23:64:786:786	5559491	1					
ANR	5559587	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""No VCPUS defined or VCPUS definition is bad.\\n"" )"	122:3:3557:3628	5559491	0	True				
ANR	5559588	CallExpression	"vmprintf ( D_FULLDEBUG , ""No VCPUS defined or VCPUS definition is bad.\\n"" )"		5559491	0					
ANR	5559589	Callee	vmprintf		5559491	0					
ANR	5559590	Identifier	vmprintf		5559491	0					
ANR	5559591	ArgumentList	D_FULLDEBUG		5559491	1					
ANR	5559592	Argument	D_FULLDEBUG		5559491	0					
ANR	5559593	Identifier	D_FULLDEBUG		5559491	0					
ANR	5559594	Argument	"""No VCPUS defined or VCPUS definition is bad.\\n"""		5559491	1					
ANR	5559595	PrimaryExpression	"""No VCPUS defined or VCPUS definition is bad.\\n"""		5559491	0					
ANR	5559596	IfStatement	if ( m_vcpus < 1 )		5559491	5					
ANR	5559597	Condition	m_vcpus < 1	124:4:3637:3647	5559491	0	True				
ANR	5559598	RelationalExpression	m_vcpus < 1		5559491	0		<			
ANR	5559599	Identifier	m_vcpus		5559491	0					
ANR	5559600	PrimaryExpression	1		5559491	1					
ANR	5559601	ExpressionStatement	m_vcpus = 1	124:17:3650:3661	5559491	1	True				
ANR	5559602	AssignmentExpression	m_vcpus = 1		5559491	0		=			
ANR	5559603	Identifier	m_vcpus		5559491	0					
ANR	5559604	PrimaryExpression	1		5559491	1					
ANR	5559605	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Setting up %d CPUS\\n"" , m_vcpus )"	125:1:3664:3718	5559491	6	True				
ANR	5559606	CallExpression	"vmprintf ( D_FULLDEBUG , ""Setting up %d CPUS\\n"" , m_vcpus )"		5559491	0					
ANR	5559607	Callee	vmprintf		5559491	0					
ANR	5559608	Identifier	vmprintf		5559491	0					
ANR	5559609	ArgumentList	D_FULLDEBUG		5559491	1					
ANR	5559610	Argument	D_FULLDEBUG		5559491	0					
ANR	5559611	Identifier	D_FULLDEBUG		5559491	0					
ANR	5559612	Argument	"""Setting up %d CPUS\\n"""		5559491	1					
ANR	5559613	PrimaryExpression	"""Setting up %d CPUS\\n"""		5559491	0					
ANR	5559614	Argument	m_vcpus		5559491	2					
ANR	5559615	Identifier	m_vcpus		5559491	0					
ANR	5559616	ExpressionStatement	m_vm_networking = false	128:1:3756:3779	5559491	7	True				
ANR	5559617	AssignmentExpression	m_vm_networking = false		5559491	0		=			
ANR	5559618	Identifier	m_vm_networking		5559491	0					
ANR	5559619	Identifier	false		5559491	1					
ANR	5559620	ExpressionStatement	"m_classAd . LookupBool ( ATTR_JOB_VM_NETWORKING , m_vm_networking )"	129:1:3782:3844	5559491	8	True				
ANR	5559621	CallExpression	"m_classAd . LookupBool ( ATTR_JOB_VM_NETWORKING , m_vm_networking )"		5559491	0					
ANR	5559622	Callee	m_classAd . LookupBool		5559491	0					
ANR	5559623	MemberAccess	m_classAd . LookupBool		5559491	0					
ANR	5559624	Identifier	m_classAd		5559491	0					
ANR	5559625	Identifier	LookupBool		5559491	1					
ANR	5559626	ArgumentList	ATTR_JOB_VM_NETWORKING		5559491	1					
ANR	5559627	Argument	ATTR_JOB_VM_NETWORKING		5559491	0					
ANR	5559628	Identifier	ATTR_JOB_VM_NETWORKING		5559491	0					
ANR	5559629	Argument	m_vm_networking		5559491	1					
ANR	5559630	Identifier	m_vm_networking		5559491	0					
ANR	5559631	IfStatement	if ( m_vm_networking && ( vmgahp -> m_gahp_config -> m_vm_networking == false ) )		5559491	9					
ANR	5559632	Condition	m_vm_networking && ( vmgahp -> m_gahp_config -> m_vm_networking == false )	131:5:3852:3924	5559491	0	True				
ANR	5559633	AndExpression	m_vm_networking && ( vmgahp -> m_gahp_config -> m_vm_networking == false )		5559491	0		&&			
ANR	5559634	Identifier	m_vm_networking		5559491	0					
ANR	5559635	EqualityExpression	vmgahp -> m_gahp_config -> m_vm_networking == false		5559491	1		==			
ANR	5559636	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_networking		5559491	0					
ANR	5559637	PtrMemberAccess	vmgahp -> m_gahp_config		5559491	0					
ANR	5559638	Identifier	vmgahp		5559491	0					
ANR	5559639	Identifier	m_gahp_config		5559491	1					
ANR	5559640	Identifier	m_vm_networking		5559491	1					
ANR	5559641	Identifier	false		5559491	1					
ANR	5559642	CompoundStatement		34:56:1162:1162	5559491	1					
ANR	5559643	Statement	vmprintf	133:2:3932:3939	5559491	0	True				
ANR	5559644	Statement	(	133:10:3940:3940	5559491	1	True				
ANR	5559645	Statement	D_ALWAYS	133:11:3941:3948	5559491	2	True				
ANR	5559646	Statement	","	133:19:3949:3949	5559491	3	True				
ANR	5559647	Statement	"""A job requests networking but """	133:21:3951:3982	5559491	4	True				
ANR	5559648	Statement	"""the gahp server doesn't support networking\\n"""	134:4:3989:4034	5559491	5	True				
ANR	5559649	Statement	)	134:50:4035:4035	5559491	6	True				
ANR	5559650	ExpressionStatement		134:51:4036:4036	5559491	7	True				
ANR	5559651	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_MISMATCHED_NETWORKING	135:2:4040:4098	5559491	8	True				
ANR	5559652	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_MISMATCHED_NETWORKING		5559491	0		=			
ANR	5559653	Identifier	m_result_msg		5559491	0					
ANR	5559654	Identifier	VMGAHP_ERR_JOBCLASSAD_MISMATCHED_NETWORKING		5559491	1					
ANR	5559655	ReturnStatement	return false ;	136:2:4102:4114	5559491	9	True				
ANR	5559656	Identifier	false		5559491	0					
ANR	5559657	IfStatement	if ( m_vm_networking )		5559491	10					
ANR	5559658	Condition	m_vm_networking	139:5:4125:4139	5559491	0	True				
ANR	5559659	Identifier	m_vm_networking		5559491	0					
ANR	5559660	CompoundStatement		41:23:1377:1377	5559491	1					
ANR	5559661	IfStatement	"if ( m_classAd . LookupString ( ATTR_JOB_VM_NETWORKING_TYPE , m_vm_networking_type ) == 1 )"		5559491	0					
ANR	5559662	Condition	"m_classAd . LookupString ( ATTR_JOB_VM_NETWORKING_TYPE , m_vm_networking_type ) == 1"	141:6:4192:4276	5559491	0	True				
ANR	5559663	EqualityExpression	"m_classAd . LookupString ( ATTR_JOB_VM_NETWORKING_TYPE , m_vm_networking_type ) == 1"		5559491	0		==			
ANR	5559664	CallExpression	"m_classAd . LookupString ( ATTR_JOB_VM_NETWORKING_TYPE , m_vm_networking_type )"		5559491	0					
ANR	5559665	Callee	m_classAd . LookupString		5559491	0					
ANR	5559666	MemberAccess	m_classAd . LookupString		5559491	0					
ANR	5559667	Identifier	m_classAd		5559491	0					
ANR	5559668	Identifier	LookupString		5559491	1					
ANR	5559669	ArgumentList	ATTR_JOB_VM_NETWORKING_TYPE		5559491	1					
ANR	5559670	Argument	ATTR_JOB_VM_NETWORKING_TYPE		5559491	0					
ANR	5559671	Identifier	ATTR_JOB_VM_NETWORKING_TYPE		5559491	0					
ANR	5559672	Argument	m_vm_networking_type		5559491	1					
ANR	5559673	Identifier	m_vm_networking_type		5559491	0					
ANR	5559674	PrimaryExpression	1		5559491	1					
ANR	5559675	CompoundStatement		44:34:1514:1514	5559491	1					
ANR	5559676	ExpressionStatement	m_vm_networking_type . trim ( )	146:3:4355:4382	5559491	0	True				
ANR	5559677	CallExpression	m_vm_networking_type . trim ( )		5559491	0					
ANR	5559678	Callee	m_vm_networking_type . trim		5559491	0					
ANR	5559679	MemberAccess	m_vm_networking_type . trim		5559491	0					
ANR	5559680	Identifier	m_vm_networking_type		5559491	0					
ANR	5559681	Identifier	trim		5559491	1					
ANR	5559682	ArgumentList			5559491	1					
ANR	5559683	ExpressionStatement	m_vm_networking_type . lower_case ( )	147:3:4387:4420	5559491	1	True				
ANR	5559684	CallExpression	m_vm_networking_type . lower_case ( )		5559491	0					
ANR	5559685	Callee	m_vm_networking_type . lower_case		5559491	0					
ANR	5559686	MemberAccess	m_vm_networking_type . lower_case		5559491	0					
ANR	5559687	Identifier	m_vm_networking_type		5559491	0					
ANR	5559688	Identifier	lower_case		5559491	1					
ANR	5559689	ArgumentList			5559491	1					
ANR	5559690	IfStatement	if ( vmgahp -> m_gahp_config -> m_vm_networking_types . contains ( m_vm_networking_type . Value ( ) ) == false )		5559491	2					
ANR	5559691	Condition	vmgahp -> m_gahp_config -> m_vm_networking_types . contains ( m_vm_networking_type . Value ( ) ) == false	148:7:4429:4520	5559491	0	True				
ANR	5559692	EqualityExpression	vmgahp -> m_gahp_config -> m_vm_networking_types . contains ( m_vm_networking_type . Value ( ) ) == false		5559491	0		==			
ANR	5559693	CallExpression	vmgahp -> m_gahp_config -> m_vm_networking_types . contains ( m_vm_networking_type . Value ( ) )		5559491	0					
ANR	5559694	Callee	vmgahp -> m_gahp_config -> m_vm_networking_types . contains		5559491	0					
ANR	5559695	MemberAccess	vmgahp -> m_gahp_config -> m_vm_networking_types . contains		5559491	0					
ANR	5559696	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_networking_types		5559491	0					
ANR	5559697	PtrMemberAccess	vmgahp -> m_gahp_config		5559491	0					
ANR	5559698	Identifier	vmgahp		5559491	0					
ANR	5559699	Identifier	m_gahp_config		5559491	1					
ANR	5559700	Identifier	m_vm_networking_types		5559491	1					
ANR	5559701	Identifier	contains		5559491	1					
ANR	5559702	ArgumentList	m_vm_networking_type . Value ( )		5559491	1					
ANR	5559703	Argument	m_vm_networking_type . Value ( )		5559491	0					
ANR	5559704	CallExpression	m_vm_networking_type . Value ( )		5559491	0					
ANR	5559705	Callee	m_vm_networking_type . Value		5559491	0					
ANR	5559706	MemberAccess	m_vm_networking_type . Value		5559491	0					
ANR	5559707	Identifier	m_vm_networking_type		5559491	0					
ANR	5559708	Identifier	Value		5559491	1					
ANR	5559709	ArgumentList			5559491	1					
ANR	5559710	Identifier	false		5559491	1					
ANR	5559711	CompoundStatement		50:102:1758:1758	5559491	1					
ANR	5559712	Statement	vmprintf	149:4:4530:4537	5559491	0	True				
ANR	5559713	Statement	(	149:12:4538:4538	5559491	1	True				
ANR	5559714	Statement	D_ALWAYS	149:13:4539:4546	5559491	2	True				
ANR	5559715	Statement	","	149:21:4547:4547	5559491	3	True				
ANR	5559716	Statement	"""Networking type(%s) is not supported by """	149:23:4549:4590	5559491	4	True				
ANR	5559717	Statement	"""this gahp server\\n"""	150:6:4598:4617	5559491	5	True				
ANR	5559718	Statement	","	150:26:4618:4618	5559491	6	True				
ANR	5559719	Statement	m_vm_networking_type	150:28:4620:4639	5559491	7	True				
ANR	5559720	Statement	.	150:48:4640:4640	5559491	8	True				
ANR	5559721	Statement	Value	150:49:4641:4645	5559491	9	True				
ANR	5559722	Statement	(	150:54:4646:4646	5559491	10	True				
ANR	5559723	Statement	)	150:55:4647:4647	5559491	11	True				
ANR	5559724	Statement	)	150:56:4648:4648	5559491	12	True				
ANR	5559725	ExpressionStatement		150:57:4649:4649	5559491	13	True				
ANR	5559726	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_MISMATCHED_NETWORKING_TYPE	151:4:4655:4718	5559491	14	True				
ANR	5559727	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_MISMATCHED_NETWORKING_TYPE		5559491	0		=			
ANR	5559728	Identifier	m_result_msg		5559491	0					
ANR	5559729	Identifier	VMGAHP_ERR_JOBCLASSAD_MISMATCHED_NETWORKING_TYPE		5559491	1					
ANR	5559730	ReturnStatement	return false ;	152:4:4724:4736	5559491	15	True				
ANR	5559731	Identifier	false		5559491	0					
ANR	5559732	ElseStatement	else		5559491	0					
ANR	5559733	CompoundStatement		56:8:1985:1985	5559491	0					
ANR	5559734	IfStatement	if ( vmgahp -> m_gahp_config -> m_vm_default_networking_type . IsEmpty ( ) == false )		5559491	0					
ANR	5559735	Condition	vmgahp -> m_gahp_config -> m_vm_default_networking_type . IsEmpty ( ) == false	156:7:4798:4867	5559491	0	True				
ANR	5559736	EqualityExpression	vmgahp -> m_gahp_config -> m_vm_default_networking_type . IsEmpty ( ) == false		5559491	0		==			
ANR	5559737	CallExpression	vmgahp -> m_gahp_config -> m_vm_default_networking_type . IsEmpty ( )		5559491	0					
ANR	5559738	Callee	vmgahp -> m_gahp_config -> m_vm_default_networking_type . IsEmpty		5559491	0					
ANR	5559739	MemberAccess	vmgahp -> m_gahp_config -> m_vm_default_networking_type . IsEmpty		5559491	0					
ANR	5559740	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_default_networking_type		5559491	0					
ANR	5559741	PtrMemberAccess	vmgahp -> m_gahp_config		5559491	0					
ANR	5559742	Identifier	vmgahp		5559491	0					
ANR	5559743	Identifier	m_gahp_config		5559491	1					
ANR	5559744	Identifier	m_vm_default_networking_type		5559491	1					
ANR	5559745	Identifier	IsEmpty		5559491	1					
ANR	5559746	ArgumentList			5559491	1					
ANR	5559747	Identifier	false		5559491	1					
ANR	5559748	CompoundStatement		58:80:2105:2105	5559491	1					
ANR	5559749	ExpressionStatement	m_vm_networking_type = vmgahp -> m_gahp_config -> m_vm_default_networking_type	157:4:4877:4951	5559491	0	True				
ANR	5559750	AssignmentExpression	m_vm_networking_type = vmgahp -> m_gahp_config -> m_vm_default_networking_type		5559491	0		=			
ANR	5559751	Identifier	m_vm_networking_type		5559491	0					
ANR	5559752	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_default_networking_type		5559491	1					
ANR	5559753	PtrMemberAccess	vmgahp -> m_gahp_config		5559491	0					
ANR	5559754	Identifier	vmgahp		5559491	0					
ANR	5559755	Identifier	m_gahp_config		5559491	1					
ANR	5559756	Identifier	m_vm_default_networking_type		5559491	1					
ANR	5559757	ElseStatement	else		5559491	0					
ANR	5559758	CompoundStatement		60:9:2196:2196	5559491	0					
ANR	5559759	ExpressionStatement	"m_vm_networking_type = ""nat"""	159:4:4968:4996	5559491	0	True				
ANR	5559760	AssignmentExpression	"m_vm_networking_type = ""nat"""		5559491	0		=			
ANR	5559761	Identifier	m_vm_networking_type		5559491	0					
ANR	5559762	PrimaryExpression	"""nat"""		5559491	1					
ANR	5559763	IfStatement	"if ( m_classAd . LookupString ( ATTR_JOB_VM_MACADDR , m_vm_job_mac ) != 1 )"		5559491	1					
ANR	5559764	Condition	"m_classAd . LookupString ( ATTR_JOB_VM_MACADDR , m_vm_job_mac ) != 1"	162:5:5012:5074	5559491	0	True				
ANR	5559765	EqualityExpression	"m_classAd . LookupString ( ATTR_JOB_VM_MACADDR , m_vm_job_mac ) != 1"		5559491	0		!=			
ANR	5559766	CallExpression	"m_classAd . LookupString ( ATTR_JOB_VM_MACADDR , m_vm_job_mac )"		5559491	0					
ANR	5559767	Callee	m_classAd . LookupString		5559491	0					
ANR	5559768	MemberAccess	m_classAd . LookupString		5559491	0					
ANR	5559769	Identifier	m_classAd		5559491	0					
ANR	5559770	Identifier	LookupString		5559491	1					
ANR	5559771	ArgumentList	ATTR_JOB_VM_MACADDR		5559491	1					
ANR	5559772	Argument	ATTR_JOB_VM_MACADDR		5559491	0					
ANR	5559773	Identifier	ATTR_JOB_VM_MACADDR		5559491	0					
ANR	5559774	Argument	m_vm_job_mac		5559491	1					
ANR	5559775	Identifier	m_vm_job_mac		5559491	0					
ANR	5559776	PrimaryExpression	1		5559491	1					
ANR	5559777	CompoundStatement		65:4:2315:2315	5559491	1					
ANR	5559778	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""MAC address was not defined.\\n"" )"	164:6:5089:5144	5559491	0	True				
ANR	5559779	CallExpression	"vmprintf ( D_FULLDEBUG , ""MAC address was not defined.\\n"" )"		5559491	0					
ANR	5559780	Callee	vmprintf		5559491	0					
ANR	5559781	Identifier	vmprintf		5559491	0					
ANR	5559782	ArgumentList	D_FULLDEBUG		5559491	1					
ANR	5559783	Argument	D_FULLDEBUG		5559491	0					
ANR	5559784	Identifier	D_FULLDEBUG		5559491	0					
ANR	5559785	Argument	"""MAC address was not defined.\\n"""		5559491	1					
ANR	5559786	PrimaryExpression	"""MAC address was not defined.\\n"""		5559491	0					
ANR	5559787	ExpressionStatement	m_vm_checkpoint = false	169:1:5191:5214	5559491	11	True				
ANR	5559788	AssignmentExpression	m_vm_checkpoint = false		5559491	0		=			
ANR	5559789	Identifier	m_vm_checkpoint		5559491	0					
ANR	5559790	Identifier	false		5559491	1					
ANR	5559791	ExpressionStatement	"m_classAd . LookupBool ( ATTR_JOB_VM_CHECKPOINT , m_vm_checkpoint )"	170:1:5217:5278	5559491	12	True				
ANR	5559792	CallExpression	"m_classAd . LookupBool ( ATTR_JOB_VM_CHECKPOINT , m_vm_checkpoint )"		5559491	0					
ANR	5559793	Callee	m_classAd . LookupBool		5559491	0					
ANR	5559794	MemberAccess	m_classAd . LookupBool		5559491	0					
ANR	5559795	Identifier	m_classAd		5559491	0					
ANR	5559796	Identifier	LookupBool		5559491	1					
ANR	5559797	ArgumentList	ATTR_JOB_VM_CHECKPOINT		5559491	1					
ANR	5559798	Argument	ATTR_JOB_VM_CHECKPOINT		5559491	0					
ANR	5559799	Identifier	ATTR_JOB_VM_CHECKPOINT		5559491	0					
ANR	5559800	Argument	m_vm_checkpoint		5559491	1					
ANR	5559801	Identifier	m_vm_checkpoint		5559491	0					
ANR	5559802	IfStatement	"if ( VMType :: createVMName ( & m_classAd , m_vm_name ) == false )"		5559491	13					
ANR	5559803	Condition	"VMType :: createVMName ( & m_classAd , m_vm_name ) == false"	172:5:5286:5337	5559491	0	True				
ANR	5559804	EqualityExpression	"VMType :: createVMName ( & m_classAd , m_vm_name ) == false"		5559491	0		==			
ANR	5559805	CallExpression	"VMType :: createVMName ( & m_classAd , m_vm_name )"		5559491	0					
ANR	5559806	Callee	VMType :: createVMName		5559491	0					
ANR	5559807	Identifier	VMType :: createVMName		5559491	0					
ANR	5559808	ArgumentList	& m_classAd		5559491	1					
ANR	5559809	Argument	& m_classAd		5559491	0					
ANR	5559810	UnaryOperationExpression	& m_classAd		5559491	0					
ANR	5559811	UnaryOperator	&		5559491	0					
ANR	5559812	Identifier	m_classAd		5559491	1					
ANR	5559813	Argument	m_vm_name		5559491	1					
ANR	5559814	Identifier	m_vm_name		5559491	0					
ANR	5559815	Identifier	false		5559491	1					
ANR	5559816	CompoundStatement		74:60:2575:2575	5559491	1					
ANR	5559817	ExpressionStatement	m_result_msg = VMGAHP_ERR_CRITICAL	173:2:5345:5379	5559491	0	True				
ANR	5559818	AssignmentExpression	m_result_msg = VMGAHP_ERR_CRITICAL		5559491	0		=			
ANR	5559819	Identifier	m_result_msg		5559491	0					
ANR	5559820	Identifier	VMGAHP_ERR_CRITICAL		5559491	1					
ANR	5559821	ReturnStatement	return false ;	174:2:5383:5395	5559491	1	True				
ANR	5559822	Identifier	false		5559491	0					
ANR	5559823	ExpressionStatement	"m_classAd . Assign ( ""VMPARAM_VM_NAME"" , m_vm_name )"	178:1:5447:5493	5559491	14	True				
ANR	5559824	CallExpression	"m_classAd . Assign ( ""VMPARAM_VM_NAME"" , m_vm_name )"		5559491	0					
ANR	5559825	Callee	m_classAd . Assign		5559491	0					
ANR	5559826	MemberAccess	m_classAd . Assign		5559491	0					
ANR	5559827	Identifier	m_classAd		5559491	0					
ANR	5559828	Identifier	Assign		5559491	1					
ANR	5559829	ArgumentList	"""VMPARAM_VM_NAME"""		5559491	1					
ANR	5559830	Argument	"""VMPARAM_VM_NAME"""		5559491	0					
ANR	5559831	PrimaryExpression	"""VMPARAM_VM_NAME"""		5559491	0					
ANR	5559832	Argument	m_vm_name		5559491	1					
ANR	5559833	Identifier	m_vm_name		5559491	0					
ANR	5559834	ExpressionStatement	m_vm_hardware_vt = false	181:1:5536:5560	5559491	15	True				
ANR	5559835	AssignmentExpression	m_vm_hardware_vt = false		5559491	0		=			
ANR	5559836	Identifier	m_vm_hardware_vt		5559491	0					
ANR	5559837	Identifier	false		5559491	1					
ANR	5559838	ExpressionStatement	"m_classAd . LookupBool ( ATTR_JOB_VM_HARDWARE_VT , m_vm_hardware_vt )"	182:1:5564:5627	5559491	16	True				
ANR	5559839	CallExpression	"m_classAd . LookupBool ( ATTR_JOB_VM_HARDWARE_VT , m_vm_hardware_vt )"		5559491	0					
ANR	5559840	Callee	m_classAd . LookupBool		5559491	0					
ANR	5559841	MemberAccess	m_classAd . LookupBool		5559491	0					
ANR	5559842	Identifier	m_classAd		5559491	0					
ANR	5559843	Identifier	LookupBool		5559491	1					
ANR	5559844	ArgumentList	ATTR_JOB_VM_HARDWARE_VT		5559491	1					
ANR	5559845	Argument	ATTR_JOB_VM_HARDWARE_VT		5559491	0					
ANR	5559846	Identifier	ATTR_JOB_VM_HARDWARE_VT		5559491	0					
ANR	5559847	Argument	m_vm_hardware_vt		5559491	1					
ANR	5559848	Identifier	m_vm_hardware_vt		5559491	0					
ANR	5559849	IfStatement	if ( m_vm_hardware_vt && ( vmgahp -> m_gahp_config -> m_vm_hardware_vt == false ) )		5559491	17					
ANR	5559850	Condition	m_vm_hardware_vt && ( vmgahp -> m_gahp_config -> m_vm_hardware_vt == false )	183:5:5634:5708	5559491	0	True				
ANR	5559851	AndExpression	m_vm_hardware_vt && ( vmgahp -> m_gahp_config -> m_vm_hardware_vt == false )		5559491	0		&&			
ANR	5559852	Identifier	m_vm_hardware_vt		5559491	0					
ANR	5559853	EqualityExpression	vmgahp -> m_gahp_config -> m_vm_hardware_vt == false		5559491	1		==			
ANR	5559854	PtrMemberAccess	vmgahp -> m_gahp_config -> m_vm_hardware_vt		5559491	0					
ANR	5559855	PtrMemberAccess	vmgahp -> m_gahp_config		5559491	0					
ANR	5559856	Identifier	vmgahp		5559491	0					
ANR	5559857	Identifier	m_gahp_config		5559491	1					
ANR	5559858	Identifier	m_vm_hardware_vt		5559491	1					
ANR	5559859	Identifier	false		5559491	1					
ANR	5559860	CompoundStatement		86:57:2946:2946	5559491	1					
ANR	5559861	Statement	vmprintf	185:2:5716:5723	5559491	0	True				
ANR	5559862	Statement	(	185:10:5724:5724	5559491	1	True				
ANR	5559863	Statement	D_ALWAYS	185:11:5725:5732	5559491	2	True				
ANR	5559864	Statement	","	185:19:5733:5733	5559491	3	True				
ANR	5559865	Statement	"""A job requests hardware virtualization but """	185:21:5735:5779	5559491	4	True				
ANR	5559866	Statement	"""the vmgahp server doesn't support hardware VT\\n"""	186:4:5786:5834	5559491	5	True				
ANR	5559867	Statement	)	186:53:5835:5835	5559491	6	True				
ANR	5559868	ExpressionStatement		186:54:5836:5836	5559491	7	True				
ANR	5559869	ExpressionStatement	m_result_msg = VMGAHP_ERR_JOBCLASSAD_MISMATCHED_HARDWARE_VT	187:2:5840:5899	5559491	8	True				
ANR	5559870	AssignmentExpression	m_result_msg = VMGAHP_ERR_JOBCLASSAD_MISMATCHED_HARDWARE_VT		5559491	0		=			
ANR	5559871	Identifier	m_result_msg		5559491	0					
ANR	5559872	Identifier	VMGAHP_ERR_JOBCLASSAD_MISMATCHED_HARDWARE_VT		5559491	1					
ANR	5559873	ReturnStatement	return false ;	188:2:5903:5915	5559491	9	True				
ANR	5559874	Identifier	false		5559491	0					
ANR	5559875	ExpressionStatement	m_vm_no_output_vm = false	201:1:6449:6474	5559491	18	True				
ANR	5559876	AssignmentExpression	m_vm_no_output_vm = false		5559491	0		=			
ANR	5559877	Identifier	m_vm_no_output_vm		5559491	0					
ANR	5559878	Identifier	false		5559491	1					
ANR	5559879	ExpressionStatement	"m_classAd . LookupBool ( VMPARAM_NO_OUTPUT_VM , m_vm_no_output_vm )"	202:1:6478:6539	5559491	19	True				
ANR	5559880	CallExpression	"m_classAd . LookupBool ( VMPARAM_NO_OUTPUT_VM , m_vm_no_output_vm )"		5559491	0					
ANR	5559881	Callee	m_classAd . LookupBool		5559491	0					
ANR	5559882	MemberAccess	m_classAd . LookupBool		5559491	0					
ANR	5559883	Identifier	m_classAd		5559491	0					
ANR	5559884	Identifier	LookupBool		5559491	1					
ANR	5559885	ArgumentList	VMPARAM_NO_OUTPUT_VM		5559491	1					
ANR	5559886	Argument	VMPARAM_NO_OUTPUT_VM		5559491	0					
ANR	5559887	Identifier	VMPARAM_NO_OUTPUT_VM		5559491	0					
ANR	5559888	Argument	m_vm_no_output_vm		5559491	1					
ANR	5559889	Identifier	m_vm_no_output_vm		5559491	0					
ANR	5559890	ExpressionStatement	"m_classad_arg = """""	204:1:6543:6561	5559491	20	True				
ANR	5559891	AssignmentExpression	"m_classad_arg = """""		5559491	0		=			
ANR	5559892	Identifier	m_classad_arg		5559491	0					
ANR	5559893	PrimaryExpression	""""""		5559491	1					
ANR	5559894	IdentifierDeclStatement	ArgList arglist ;	205:1:6564:6579	5559491	21	True				
ANR	5559895	IdentifierDecl	arglist		5559491	0					
ANR	5559896	IdentifierDeclType	ArgList		5559491	0					
ANR	5559897	Identifier	arglist		5559491	1					
ANR	5559898	IdentifierDeclStatement	MyString error_msg ;	206:1:6582:6600	5559491	22	True				
ANR	5559899	IdentifierDecl	error_msg		5559491	0					
ANR	5559900	IdentifierDeclType	MyString		5559491	0					
ANR	5559901	Identifier	error_msg		5559491	1					
ANR	5559902	IfStatement	"if ( ! arglist . GetArgsStringV1or2Raw ( & m_classAd , & m_classad_arg , & error_msg ) )"		5559491	23					
ANR	5559903	Condition	"! arglist . GetArgsStringV1or2Raw ( & m_classAd , & m_classad_arg , & error_msg )"	207:4:6606:6675	5559491	0	True				
ANR	5559904	UnaryOperationExpression	"! arglist . GetArgsStringV1or2Raw ( & m_classAd , & m_classad_arg , & error_msg )"		5559491	0					
ANR	5559905	UnaryOperator	!		5559491	0					
ANR	5559906	CallExpression	"arglist . GetArgsStringV1or2Raw ( & m_classAd , & m_classad_arg , & error_msg )"		5559491	1					
ANR	5559907	Callee	arglist . GetArgsStringV1or2Raw		5559491	0					
ANR	5559908	MemberAccess	arglist . GetArgsStringV1or2Raw		5559491	0					
ANR	5559909	Identifier	arglist		5559491	0					
ANR	5559910	Identifier	GetArgsStringV1or2Raw		5559491	1					
ANR	5559911	ArgumentList	& m_classAd		5559491	1					
ANR	5559912	Argument	& m_classAd		5559491	0					
ANR	5559913	UnaryOperationExpression	& m_classAd		5559491	0					
ANR	5559914	UnaryOperator	&		5559491	0					
ANR	5559915	Identifier	m_classAd		5559491	1					
ANR	5559916	Argument	& m_classad_arg		5559491	1					
ANR	5559917	UnaryOperationExpression	& m_classad_arg		5559491	0					
ANR	5559918	UnaryOperator	&		5559491	0					
ANR	5559919	Identifier	m_classad_arg		5559491	1					
ANR	5559920	Argument	& error_msg		5559491	2					
ANR	5559921	UnaryOperationExpression	& error_msg		5559491	0					
ANR	5559922	UnaryOperator	&		5559491	0					
ANR	5559923	Identifier	error_msg		5559491	1					
ANR	5559924	CompoundStatement		109:76:3912:3912	5559491	1					
ANR	5559925	ExpressionStatement	"m_classad_arg = """""	208:2:6682:6700	5559491	0	True				
ANR	5559926	AssignmentExpression	"m_classad_arg = """""		5559491	0		=			
ANR	5559927	Identifier	m_classad_arg		5559491	0					
ANR	5559928	PrimaryExpression	""""""		5559491	1					
ANR	5559929	IfStatement	if ( m_classad_arg . IsEmpty ( ) == false )		5559491	24					
ANR	5559930	Condition	m_classad_arg . IsEmpty ( ) == false	211:5:6711:6742	5559491	0	True				
ANR	5559931	EqualityExpression	m_classad_arg . IsEmpty ( ) == false		5559491	0		==			
ANR	5559932	CallExpression	m_classad_arg . IsEmpty ( )		5559491	0					
ANR	5559933	Callee	m_classad_arg . IsEmpty		5559491	0					
ANR	5559934	MemberAccess	m_classad_arg . IsEmpty		5559491	0					
ANR	5559935	Identifier	m_classad_arg		5559491	0					
ANR	5559936	Identifier	IsEmpty		5559491	1					
ANR	5559937	ArgumentList			5559491	1					
ANR	5559938	Identifier	false		5559491	1					
ANR	5559939	CompoundStatement		116:2:4024:4096	5559491	1					
ANR	5559940	IdentifierDeclStatement	"FILE * argfile_fp = safe_fopen_wrapper_follow ( VM_UNIV_ARGUMENT_FILE , ""w"" ) ;"	214:2:6790:6862	5559491	0	True				
ANR	5559941	IdentifierDecl	"* argfile_fp = safe_fopen_wrapper_follow ( VM_UNIV_ARGUMENT_FILE , ""w"" )"		5559491	0					
ANR	5559942	IdentifierDeclType	FILE *		5559491	0					
ANR	5559943	Identifier	argfile_fp		5559491	1					
ANR	5559944	AssignmentExpression	"* argfile_fp = safe_fopen_wrapper_follow ( VM_UNIV_ARGUMENT_FILE , ""w"" )"		5559491	2		=			
ANR	5559945	Identifier	argfile_fp		5559491	0					
ANR	5559946	CallExpression	"safe_fopen_wrapper_follow ( VM_UNIV_ARGUMENT_FILE , ""w"" )"		5559491	1					
ANR	5559947	Callee	safe_fopen_wrapper_follow		5559491	0					
ANR	5559948	Identifier	safe_fopen_wrapper_follow		5559491	0					
ANR	5559949	ArgumentList	VM_UNIV_ARGUMENT_FILE		5559491	1					
ANR	5559950	Argument	VM_UNIV_ARGUMENT_FILE		5559491	0					
ANR	5559951	Identifier	VM_UNIV_ARGUMENT_FILE		5559491	0					
ANR	5559952	Argument	"""w"""		5559491	1					
ANR	5559953	PrimaryExpression	"""w"""		5559491	0					
ANR	5559954	IfStatement	if ( ! argfile_fp )		5559491	1					
ANR	5559955	Condition	! argfile_fp	215:6:6870:6880	5559491	0	True				
ANR	5559956	UnaryOperationExpression	! argfile_fp		5559491	0					
ANR	5559957	UnaryOperator	!		5559491	0					
ANR	5559958	Identifier	argfile_fp		5559491	1					
ANR	5559959	CompoundStatement		117:20:4118:4118	5559491	1					
ANR	5559960	Statement	vmprintf	216:3:6889:6896	5559491	0	True				
ANR	5559961	Statement	(	216:11:6897:6897	5559491	1	True				
ANR	5559962	Statement	D_ALWAYS	216:12:6898:6905	5559491	2	True				
ANR	5559963	Statement	","	216:20:6906:6906	5559491	3	True				
ANR	5559964	Statement	"""failed to safe_fopen_wrapper the file """	216:22:6908:6947	5559491	4	True				
ANR	5559965	Statement	"""for arguments: safe_fopen_wrapper_follow(%s) returns %s\\n"""	217:5:6954:7012	5559491	5	True				
ANR	5559966	Statement	","	217:64:7013:7013	5559491	6	True				
ANR	5559967	Statement	VM_UNIV_ARGUMENT_FILE	218:5:7021:7041	5559491	7	True				
ANR	5559968	Statement	","	218:26:7042:7042	5559491	8	True				
ANR	5559969	Statement	strerror	218:28:7044:7051	5559491	9	True				
ANR	5559970	Statement	(	218:36:7052:7052	5559491	10	True				
ANR	5559971	Statement	errno	218:37:7053:7057	5559491	11	True				
ANR	5559972	Statement	)	218:42:7058:7058	5559491	12	True				
ANR	5559973	Statement	)	218:43:7059:7059	5559491	13	True				
ANR	5559974	ExpressionStatement		218:44:7060:7060	5559491	14	True				
ANR	5559975	ExpressionStatement	m_result_msg = VMGAHP_ERR_CANNOT_CREATE_ARG_FILE	219:3:7065:7113	5559491	15	True				
ANR	5559976	AssignmentExpression	m_result_msg = VMGAHP_ERR_CANNOT_CREATE_ARG_FILE		5559491	0		=			
ANR	5559977	Identifier	m_result_msg		5559491	0					
ANR	5559978	Identifier	VMGAHP_ERR_CANNOT_CREATE_ARG_FILE		5559491	1					
ANR	5559979	ReturnStatement	return false ;	220:3:7118:7130	5559491	16	True				
ANR	5559980	Identifier	false		5559491	0					
ANR	5559981	IfStatement	"if ( fprintf ( argfile_fp , ""%s"" , m_classad_arg . Value ( ) ) < 0 )"		5559491	2					
ANR	5559982	Condition	"fprintf ( argfile_fp , ""%s"" , m_classad_arg . Value ( ) ) < 0"	222:6:7142:7193	5559491	0	True				
ANR	5559983	RelationalExpression	"fprintf ( argfile_fp , ""%s"" , m_classad_arg . Value ( ) ) < 0"		5559491	0		<			
ANR	5559984	CallExpression	"fprintf ( argfile_fp , ""%s"" , m_classad_arg . Value ( ) )"		5559491	0					
ANR	5559985	Callee	fprintf		5559491	0					
ANR	5559986	Identifier	fprintf		5559491	0					
ANR	5559987	ArgumentList	argfile_fp		5559491	1					
ANR	5559988	Argument	argfile_fp		5559491	0					
ANR	5559989	Identifier	argfile_fp		5559491	0					
ANR	5559990	Argument	"""%s"""		5559491	1					
ANR	5559991	PrimaryExpression	"""%s"""		5559491	0					
ANR	5559992	Argument	m_classad_arg . Value ( )		5559491	2					
ANR	5559993	CallExpression	m_classad_arg . Value ( )		5559491	0					
ANR	5559994	Callee	m_classad_arg . Value		5559491	0					
ANR	5559995	MemberAccess	m_classad_arg . Value		5559491	0					
ANR	5559996	Identifier	m_classad_arg		5559491	0					
ANR	5559997	Identifier	Value		5559491	1					
ANR	5559998	ArgumentList			5559491	1					
ANR	5559999	PrimaryExpression	0		5559491	1					
ANR	5560000	CompoundStatement		124:60:4430:4430	5559491	1					
ANR	5560001	ExpressionStatement	fclose ( argfile_fp )	223:3:7201:7219	5559491	0	True				
ANR	5560002	CallExpression	fclose ( argfile_fp )		5559491	0					
ANR	5560003	Callee	fclose		5559491	0					
ANR	5560004	Identifier	fclose		5559491	0					
ANR	5560005	ArgumentList	argfile_fp		5559491	1					
ANR	5560006	Argument	argfile_fp		5559491	0					
ANR	5560007	Identifier	argfile_fp		5559491	0					
ANR	5560008	ExpressionStatement	unlink ( VM_UNIV_ARGUMENT_FILE )	224:3:7224:7253	5559491	1	True				
ANR	5560009	CallExpression	unlink ( VM_UNIV_ARGUMENT_FILE )		5559491	0					
ANR	5560010	Callee	unlink		5559491	0					
ANR	5560011	Identifier	unlink		5559491	0					
ANR	5560012	ArgumentList	VM_UNIV_ARGUMENT_FILE		5559491	1					
ANR	5560013	Argument	VM_UNIV_ARGUMENT_FILE		5559491	0					
ANR	5560014	Identifier	VM_UNIV_ARGUMENT_FILE		5559491	0					
ANR	5560015	ExpressionStatement	"vmprintf ( D_ALWAYS , ""failed to fprintf in CreateConfigFile(%s:%s)\\n"" , VM_UNIV_ARGUMENT_FILE , strerror ( errno ) )"	225:3:7258:7371	5559491	2	True				
ANR	5560016	CallExpression	"vmprintf ( D_ALWAYS , ""failed to fprintf in CreateConfigFile(%s:%s)\\n"" , VM_UNIV_ARGUMENT_FILE , strerror ( errno ) )"		5559491	0					
ANR	5560017	Callee	vmprintf		5559491	0					
ANR	5560018	Identifier	vmprintf		5559491	0					
ANR	5560019	ArgumentList	D_ALWAYS		5559491	1					
ANR	5560020	Argument	D_ALWAYS		5559491	0					
ANR	5560021	Identifier	D_ALWAYS		5559491	0					
ANR	5560022	Argument	"""failed to fprintf in CreateConfigFile(%s:%s)\\n"""		5559491	1					
ANR	5560023	PrimaryExpression	"""failed to fprintf in CreateConfigFile(%s:%s)\\n"""		5559491	0					
ANR	5560024	Argument	VM_UNIV_ARGUMENT_FILE		5559491	2					
ANR	5560025	Identifier	VM_UNIV_ARGUMENT_FILE		5559491	0					
ANR	5560026	Argument	strerror ( errno )		5559491	3					
ANR	5560027	CallExpression	strerror ( errno )		5559491	0					
ANR	5560028	Callee	strerror		5559491	0					
ANR	5560029	Identifier	strerror		5559491	0					
ANR	5560030	ArgumentList	errno		5559491	1					
ANR	5560031	Argument	errno		5559491	0					
ANR	5560032	Identifier	errno		5559491	0					
ANR	5560033	ExpressionStatement	m_result_msg = VMGAHP_ERR_CANNOT_CREATE_ARG_FILE	227:3:7376:7424	5559491	3	True				
ANR	5560034	AssignmentExpression	m_result_msg = VMGAHP_ERR_CANNOT_CREATE_ARG_FILE		5559491	0		=			
ANR	5560035	Identifier	m_result_msg		5559491	0					
ANR	5560036	Identifier	VMGAHP_ERR_CANNOT_CREATE_ARG_FILE		5559491	1					
ANR	5560037	ReturnStatement	return false ;	228:3:7429:7441	5559491	4	True				
ANR	5560038	Identifier	false		5559491	0					
ANR	5560039	ExpressionStatement	fclose ( argfile_fp )	230:2:7449:7467	5559491	3	True				
ANR	5560040	CallExpression	fclose ( argfile_fp )		5559491	0					
ANR	5560041	Callee	fclose		5559491	0					
ANR	5560042	Identifier	fclose		5559491	0					
ANR	5560043	ArgumentList	argfile_fp		5559491	1					
ANR	5560044	Argument	argfile_fp		5559491	0					
ANR	5560045	Identifier	argfile_fp		5559491	0					
ANR	5560046	ExpressionStatement	"m_arg_file . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , VM_UNIV_ARGUMENT_FILE )"	233:2:7485:7580	5559491	4	True				
ANR	5560047	CallExpression	"m_arg_file . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , VM_UNIV_ARGUMENT_FILE )"		5559491	0					
ANR	5560048	Callee	m_arg_file . sprintf		5559491	0					
ANR	5560049	MemberAccess	m_arg_file . sprintf		5559491	0					
ANR	5560050	Identifier	m_arg_file		5559491	0					
ANR	5560051	Identifier	sprintf		5559491	1					
ANR	5560052	ArgumentList	"""%s%c%s"""		5559491	1					
ANR	5560053	Argument	"""%s%c%s"""		5559491	0					
ANR	5560054	PrimaryExpression	"""%s%c%s"""		5559491	0					
ANR	5560055	Argument	m_workingpath . Value ( )		5559491	1					
ANR	5560056	CallExpression	m_workingpath . Value ( )		5559491	0					
ANR	5560057	Callee	m_workingpath . Value		5559491	0					
ANR	5560058	MemberAccess	m_workingpath . Value		5559491	0					
ANR	5560059	Identifier	m_workingpath		5559491	0					
ANR	5560060	Identifier	Value		5559491	1					
ANR	5560061	ArgumentList			5559491	1					
ANR	5560062	Argument	DIR_DELIM_CHAR		5559491	2					
ANR	5560063	Identifier	DIR_DELIM_CHAR		5559491	0					
ANR	5560064	Argument	VM_UNIV_ARGUMENT_FILE		5559491	3					
ANR	5560065	Identifier	VM_UNIV_ARGUMENT_FILE		5559491	0					
ANR	5560066	ReturnStatement	return true ;	237:1:7590:7601	5559491	25	True				
ANR	5560067	Identifier	true		5559491	0					
ANR	5560068	ReturnType	bool		5559491	1					
ANR	5560069	Identifier	VMType :: parseCommonParamFromClassAd		5559491	2					
ANR	5560070	ParameterList	bool is_root		5559491	3					
ANR	5560071	Parameter	bool is_root	98:36:2741:2752	5559491	0	True				
ANR	5560072	ParameterType	bool		5559491	0					
ANR	5560073	Identifier	is_root		5559491	1					
ANR	5560074	CFGEntryNode	ENTRY		5559491		True				
ANR	5560075	CFGExitNode	EXIT		5559491		True				
ANR	5560076	Symbol	m_result_msg		5559491						
ANR	5560077	Symbol	m_vm_name		5559491						
ANR	5560078	Symbol	m_workingpath . Value		5559491						
ANR	5560079	Symbol	m_vm_mem		5559491						
ANR	5560080	Symbol	m_vm_job_mac		5559491						
ANR	5560081	Symbol	vmgahp -> m_gahp_config -> m_vm_default_networking_type		5559491						
ANR	5560082	Symbol	* vmgahp		5559491						
ANR	5560083	Symbol	ATTR_JOB_VM_MACADDR		5559491						
ANR	5560084	Symbol	vmgahp -> m_gahp_config -> m_vm_networking		5559491						
ANR	5560085	Symbol	VMGAHP_ERR_JOBCLASSAD_TOO_MUCH_MEMORY_REQUEST		5559491						
ANR	5560086	Symbol	VMPARAM_NO_OUTPUT_VM		5559491						
ANR	5560087	Symbol	vmgahp		5559491						
ANR	5560088	Symbol	ATTR_JOB_VM_CHECKPOINT		5559491						
ANR	5560089	Symbol	m_vm_checkpoint		5559491						
ANR	5560090	Symbol	vmgahp -> m_gahp_config		5559491						
ANR	5560091	Symbol	& error_msg		5559491						
ANR	5560092	Symbol	VMGAHP_ERR_CANNOT_CREATE_ARG_FILE		5559491						
ANR	5560093	Symbol	VMGAHP_ERR_JOBCLASSAD_MISMATCHED_HARDWARE_VT		5559491						
ANR	5560094	Symbol	VMGAHP_ERR_JOBCLASSAD_NO_VM_MEMORY_PARAM		5559491						
ANR	5560095	Symbol	ATTR_JOB_VM_NETWORKING		5559491						
ANR	5560096	Symbol	errno		5559491						
ANR	5560097	Symbol	m_classAd . LookupInteger		5559491						
ANR	5560098	Symbol	VMGAHP_ERR_JOBCLASSAD_MISMATCHED_NETWORKING_TYPE		5559491						
ANR	5560099	Symbol	m_classAd . LookupString		5559491						
ANR	5560100	Symbol	argfile_fp		5559491						
ANR	5560101	Symbol	vmgahp -> m_gahp_config -> m_vm_networking_types		5559491						
ANR	5560102	Symbol	m_vm_networking_type		5559491						
ANR	5560103	Symbol	D_FULLDEBUG		5559491						
ANR	5560104	Symbol	strerror		5559491						
ANR	5560105	Symbol	m_vm_networking		5559491						
ANR	5560106	Symbol	ATTR_JOB_VM_NETWORKING_TYPE		5559491						
ANR	5560107	Symbol	m_classad_arg		5559491						
ANR	5560108	Symbol	true		5559491						
ANR	5560109	Symbol	ATTR_JOB_VM_MEMORY		5559491						
ANR	5560110	Symbol	vmgahp -> m_gahp_config -> m_vm_networking_types . contains		5559491						
ANR	5560111	Symbol	vmgahp -> m_gahp_config -> m_vm_default_networking_type . IsEmpty		5559491						
ANR	5560112	Symbol	m_classad_arg . Value		5559491						
ANR	5560113	Symbol	m_vcpus		5559491						
ANR	5560114	Symbol	VMType :: createVMName		5559491						
ANR	5560115	Symbol	& m_classad_arg		5559491						
ANR	5560116	Symbol	VMGAHP_ERR_CRITICAL		5559491						
ANR	5560117	Symbol	is_root		5559491						
ANR	5560118	Symbol	ATTR_JOB_VM_VCPUS		5559491						
ANR	5560119	Symbol	m_classad_arg . IsEmpty		5559491						
ANR	5560120	Symbol	vmgahp -> m_gahp_config -> m_vm_max_memory		5559491						
ANR	5560121	Symbol	arglist		5559491						
ANR	5560122	Symbol	* * vmgahp		5559491						
ANR	5560123	Symbol	m_vm_hardware_vt		5559491						
ANR	5560124	Symbol	& m_classAd		5559491						
ANR	5560125	Symbol	safe_fopen_wrapper_follow		5559491						
ANR	5560126	Symbol	VMGAHP_ERR_JOBCLASSAD_MISMATCHED_NETWORKING		5559491						
ANR	5560127	Symbol	error_msg		5559491						
ANR	5560128	Symbol	DIR_DELIM_CHAR		5559491						
ANR	5560129	Symbol	m_arg_file		5559491						
ANR	5560130	Symbol	D_ALWAYS		5559491						
ANR	5560131	Symbol	false		5559491						
ANR	5560132	Symbol	arglist . GetArgsStringV1or2Raw		5559491						
ANR	5560133	Symbol	ATTR_JOB_VM_HARDWARE_VT		5559491						
ANR	5560134	Symbol	fprintf		5559491						
ANR	5560135	Symbol	* vmgahp -> m_gahp_config		5559491						
ANR	5560136	Symbol	m_workingpath		5559491						
ANR	5560137	Symbol	vmgahp -> m_gahp_config -> m_vm_hardware_vt		5559491						
ANR	5560138	Symbol	m_vm_networking_type . Value		5559491						
ANR	5560139	Symbol	m_classAd		5559491						
ANR	5560140	Symbol	m_vm_no_output_vm		5559491						
ANR	5560141	Symbol	VM_UNIV_ARGUMENT_FILE		5559491						
ANR	5560142	Function	VMType :: getVMStatus	240:0:7606:7663							
ANR	5560143	FunctionDef	VMType :: getVMStatus ()		5560142	0					
ANR	5560144	CompoundStatement		242:0:7643:7663	5560142	0					
ANR	5560145	ReturnStatement	return m_status ;	243:1:7646:7661	5560142	0	True				
ANR	5560146	Identifier	m_status		5560142	0					
ANR	5560147	ReturnType	vm_status		5560142	1					
ANR	5560148	Identifier	VMType :: getVMStatus		5560142	2					
ANR	5560149	ParameterList			5560142	3					
ANR	5560150	CFGEntryNode	ENTRY		5560142		True				
ANR	5560151	CFGExitNode	EXIT		5560142		True				
ANR	5560152	Symbol	m_status		5560142						
ANR	5560153	Function	VMType :: setVMStatus	246:0:7666:7732							
ANR	5560154	FunctionDef	VMType :: setVMStatus (vm_status status)		5560153	0					
ANR	5560155	CompoundStatement		248:0:7710:7732	5560153	0					
ANR	5560156	ExpressionStatement	m_status = status	249:1:7713:7730	5560153	0	True				
ANR	5560157	AssignmentExpression	m_status = status		5560153	0		=			
ANR	5560158	Identifier	m_status		5560153	0					
ANR	5560159	Identifier	status		5560153	1					
ANR	5560160	ReturnType	void		5560153	1					
ANR	5560161	Identifier	VMType :: setVMStatus		5560153	2					
ANR	5560162	ParameterList	vm_status status		5560153	3					
ANR	5560163	Parameter	vm_status status	247:20:7692:7707	5560153	0	True				
ANR	5560164	ParameterType	vm_status		5560153	0					
ANR	5560165	Identifier	status		5560153	1					
ANR	5560166	CFGEntryNode	ENTRY		5560153		True				
ANR	5560167	CFGExitNode	EXIT		5560153		True				
ANR	5560168	Symbol	m_status		5560153						
ANR	5560169	Symbol	status		5560153						
ANR	5560170	Function	VMType :: setLastStatus	252:0:7735:7856							
ANR	5560171	FunctionDef	VMType :: setLastStatus (const char * result_msg)		5560170	0					
ANR	5560172	CompoundStatement		254:0:7787:7856	5560170	0					
ANR	5560173	ExpressionStatement	m_last_status_time . getTime ( )	255:1:7790:7818	5560170	0	True				
ANR	5560174	CallExpression	m_last_status_time . getTime ( )		5560170	0					
ANR	5560175	Callee	m_last_status_time . getTime		5560170	0					
ANR	5560176	MemberAccess	m_last_status_time . getTime		5560170	0					
ANR	5560177	Identifier	m_last_status_time		5560170	0					
ANR	5560178	Identifier	getTime		5560170	1					
ANR	5560179	ArgumentList			5560170	1					
ANR	5560180	ExpressionStatement	m_last_status_result = result_msg	256:1:7821:7854	5560170	1	True				
ANR	5560181	AssignmentExpression	m_last_status_result = result_msg		5560170	0		=			
ANR	5560182	Identifier	m_last_status_result		5560170	0					
ANR	5560183	Identifier	result_msg		5560170	1					
ANR	5560184	ReturnType	void		5560170	1					
ANR	5560185	Identifier	VMType :: setLastStatus		5560170	2					
ANR	5560186	ParameterList	const char * result_msg		5560170	3					
ANR	5560187	Parameter	const char * result_msg	253:22:7763:7784	5560170	0	True				
ANR	5560188	ParameterType	const char *		5560170	0					
ANR	5560189	Identifier	result_msg		5560170	1					
ANR	5560190	CFGEntryNode	ENTRY		5560170		True				
ANR	5560191	CFGExitNode	EXIT		5560170		True				
ANR	5560192	Symbol	result_msg		5560170						
ANR	5560193	Symbol	m_last_status_time		5560170						
ANR	5560194	Symbol	m_last_status_result		5560170						
ANR	5560195	Function	VMType :: createInitialFileList	259:0:7859:9281							
ANR	5560196	FunctionDef	VMType :: createInitialFileList ()		5560195	0					
ANR	5560197	CompoundStatement		261:0:7896:9281	5560195	0					
ANR	5560198	IdentifierDeclStatement	MyString intermediate_files ;	262:1:7899:7926	5560195	0	True				
ANR	5560199	IdentifierDecl	intermediate_files		5560195	0					
ANR	5560200	IdentifierDeclType	MyString		5560195	0					
ANR	5560201	Identifier	intermediate_files		5560195	1					
ANR	5560202	IdentifierDeclStatement	"StringList intermediate_file_list ( NULL , "","" ) ;"	263:1:7929:7973	5560195	1	True				
ANR	5560203	IdentifierDecl	"intermediate_file_list ( NULL , "","" )"		5560195	0					
ANR	5560204	IdentifierDeclType	StringList		5560195	0					
ANR	5560205	Identifier	intermediate_file_list		5560195	1					
ANR	5560206	Expression	"NULL , "","""		5560195	2					
ANR	5560207	Identifier	NULL		5560195	0					
ANR	5560208	PrimaryExpression	""","""		5560195	1					
ANR	5560209	IdentifierDeclStatement	MyString input_files ;	264:1:7976:7996	5560195	2	True				
ANR	5560210	IdentifierDecl	input_files		5560195	0					
ANR	5560211	IdentifierDeclType	MyString		5560195	0					
ANR	5560212	Identifier	input_files		5560195	1					
ANR	5560213	IdentifierDeclStatement	"StringList input_file_list ( NULL , "","" ) ;"	265:1:7999:8036	5560195	3	True				
ANR	5560214	IdentifierDecl	"input_file_list ( NULL , "","" )"		5560195	0					
ANR	5560215	IdentifierDeclType	StringList		5560195	0					
ANR	5560216	Identifier	input_file_list		5560195	1					
ANR	5560217	Expression	"NULL , "","""		5560195	2					
ANR	5560218	Identifier	NULL		5560195	0					
ANR	5560219	PrimaryExpression	""","""		5560195	1					
ANR	5560220	ExpressionStatement	m_initial_working_files . clearAll ( )	267:1:8040:8074	5560195	4	True				
ANR	5560221	CallExpression	m_initial_working_files . clearAll ( )		5560195	0					
ANR	5560222	Callee	m_initial_working_files . clearAll		5560195	0					
ANR	5560223	MemberAccess	m_initial_working_files . clearAll		5560195	0					
ANR	5560224	Identifier	m_initial_working_files		5560195	0					
ANR	5560225	Identifier	clearAll		5560195	1					
ANR	5560226	ArgumentList			5560195	1					
ANR	5560227	ExpressionStatement	m_transfer_intermediate_files . clearAll ( )	268:1:8077:8117	5560195	5	True				
ANR	5560228	CallExpression	m_transfer_intermediate_files . clearAll ( )		5560195	0					
ANR	5560229	Callee	m_transfer_intermediate_files . clearAll		5560195	0					
ANR	5560230	MemberAccess	m_transfer_intermediate_files . clearAll		5560195	0					
ANR	5560231	Identifier	m_transfer_intermediate_files		5560195	0					
ANR	5560232	Identifier	clearAll		5560195	1					
ANR	5560233	ArgumentList			5560195	1					
ANR	5560234	ExpressionStatement	m_transfer_input_files . clearAll ( )	269:1:8120:8153	5560195	6	True				
ANR	5560235	CallExpression	m_transfer_input_files . clearAll ( )		5560195	0					
ANR	5560236	Callee	m_transfer_input_files . clearAll		5560195	0					
ANR	5560237	MemberAccess	m_transfer_input_files . clearAll		5560195	0					
ANR	5560238	Identifier	m_transfer_input_files		5560195	0					
ANR	5560239	Identifier	clearAll		5560195	1					
ANR	5560240	ArgumentList			5560195	1					
ANR	5560241	ExpressionStatement	"find_all_files_in_dir ( m_workingpath . Value ( ) , m_initial_working_files , true )"	272:1:8192:8267	5560195	7	True				
ANR	5560242	CallExpression	"find_all_files_in_dir ( m_workingpath . Value ( ) , m_initial_working_files , true )"		5560195	0					
ANR	5560243	Callee	find_all_files_in_dir		5560195	0					
ANR	5560244	Identifier	find_all_files_in_dir		5560195	0					
ANR	5560245	ArgumentList	m_workingpath . Value ( )		5560195	1					
ANR	5560246	Argument	m_workingpath . Value ( )		5560195	0					
ANR	5560247	CallExpression	m_workingpath . Value ( )		5560195	0					
ANR	5560248	Callee	m_workingpath . Value		5560195	0					
ANR	5560249	MemberAccess	m_workingpath . Value		5560195	0					
ANR	5560250	Identifier	m_workingpath		5560195	0					
ANR	5560251	Identifier	Value		5560195	1					
ANR	5560252	ArgumentList			5560195	1					
ANR	5560253	Argument	m_initial_working_files		5560195	1					
ANR	5560254	Identifier	m_initial_working_files		5560195	0					
ANR	5560255	Argument	true		5560195	2					
ANR	5560256	Identifier	true		5560195	0					
ANR	5560257	ExpressionStatement	"m_classAd . LookupString ( ATTR_TRANSFER_INTERMEDIATE_FILES , intermediate_files )"	275:1:8316:8393	5560195	8	True				
ANR	5560258	CallExpression	"m_classAd . LookupString ( ATTR_TRANSFER_INTERMEDIATE_FILES , intermediate_files )"		5560195	0					
ANR	5560259	Callee	m_classAd . LookupString		5560195	0					
ANR	5560260	MemberAccess	m_classAd . LookupString		5560195	0					
ANR	5560261	Identifier	m_classAd		5560195	0					
ANR	5560262	Identifier	LookupString		5560195	1					
ANR	5560263	ArgumentList	ATTR_TRANSFER_INTERMEDIATE_FILES		5560195	1					
ANR	5560264	Argument	ATTR_TRANSFER_INTERMEDIATE_FILES		5560195	0					
ANR	5560265	Identifier	ATTR_TRANSFER_INTERMEDIATE_FILES		5560195	0					
ANR	5560266	Argument	intermediate_files		5560195	1					
ANR	5560267	Identifier	intermediate_files		5560195	0					
ANR	5560268	IfStatement	if ( intermediate_files . IsEmpty ( ) == false )		5560195	9					
ANR	5560269	Condition	intermediate_files . IsEmpty ( ) == false	276:5:8400:8436	5560195	0	True				
ANR	5560270	EqualityExpression	intermediate_files . IsEmpty ( ) == false		5560195	0		==			
ANR	5560271	CallExpression	intermediate_files . IsEmpty ( )		5560195	0					
ANR	5560272	Callee	intermediate_files . IsEmpty		5560195	0					
ANR	5560273	MemberAccess	intermediate_files . IsEmpty		5560195	0					
ANR	5560274	Identifier	intermediate_files		5560195	0					
ANR	5560275	Identifier	IsEmpty		5560195	1					
ANR	5560276	ArgumentList			5560195	1					
ANR	5560277	Identifier	false		5560195	1					
ANR	5560278	CompoundStatement		16:45:543:543	5560195	1					
ANR	5560279	ExpressionStatement	intermediate_file_list . initializeFromString ( intermediate_files . Value ( ) )	277:2:8444:8515	5560195	0	True				
ANR	5560280	CallExpression	intermediate_file_list . initializeFromString ( intermediate_files . Value ( ) )		5560195	0					
ANR	5560281	Callee	intermediate_file_list . initializeFromString		5560195	0					
ANR	5560282	MemberAccess	intermediate_file_list . initializeFromString		5560195	0					
ANR	5560283	Identifier	intermediate_file_list		5560195	0					
ANR	5560284	Identifier	initializeFromString		5560195	1					
ANR	5560285	ArgumentList	intermediate_files . Value ( )		5560195	1					
ANR	5560286	Argument	intermediate_files . Value ( )		5560195	0					
ANR	5560287	CallExpression	intermediate_files . Value ( )		5560195	0					
ANR	5560288	Callee	intermediate_files . Value		5560195	0					
ANR	5560289	MemberAccess	intermediate_files . Value		5560195	0					
ANR	5560290	Identifier	intermediate_files		5560195	0					
ANR	5560291	Identifier	Value		5560195	1					
ANR	5560292	ArgumentList			5560195	1					
ANR	5560293	ExpressionStatement	"m_classAd . LookupString ( ATTR_TRANSFER_INPUT_FILES , input_files )"	281:1:8560:8623	5560195	10	True				
ANR	5560294	CallExpression	"m_classAd . LookupString ( ATTR_TRANSFER_INPUT_FILES , input_files )"		5560195	0					
ANR	5560295	Callee	m_classAd . LookupString		5560195	0					
ANR	5560296	MemberAccess	m_classAd . LookupString		5560195	0					
ANR	5560297	Identifier	m_classAd		5560195	0					
ANR	5560298	Identifier	LookupString		5560195	1					
ANR	5560299	ArgumentList	ATTR_TRANSFER_INPUT_FILES		5560195	1					
ANR	5560300	Argument	ATTR_TRANSFER_INPUT_FILES		5560195	0					
ANR	5560301	Identifier	ATTR_TRANSFER_INPUT_FILES		5560195	0					
ANR	5560302	Argument	input_files		5560195	1					
ANR	5560303	Identifier	input_files		5560195	0					
ANR	5560304	IfStatement	if ( input_files . IsEmpty ( ) == false )		5560195	11					
ANR	5560305	Condition	input_files . IsEmpty ( ) == false	282:5:8630:8659	5560195	0	True				
ANR	5560306	EqualityExpression	input_files . IsEmpty ( ) == false		5560195	0		==			
ANR	5560307	CallExpression	input_files . IsEmpty ( )		5560195	0					
ANR	5560308	Callee	input_files . IsEmpty		5560195	0					
ANR	5560309	MemberAccess	input_files . IsEmpty		5560195	0					
ANR	5560310	Identifier	input_files		5560195	0					
ANR	5560311	Identifier	IsEmpty		5560195	1					
ANR	5560312	ArgumentList			5560195	1					
ANR	5560313	Identifier	false		5560195	1					
ANR	5560314	CompoundStatement		22:38:766:766	5560195	1					
ANR	5560315	ExpressionStatement	input_file_list . initializeFromString ( input_files . Value ( ) )	283:2:8667:8724	5560195	0	True				
ANR	5560316	CallExpression	input_file_list . initializeFromString ( input_files . Value ( ) )		5560195	0					
ANR	5560317	Callee	input_file_list . initializeFromString		5560195	0					
ANR	5560318	MemberAccess	input_file_list . initializeFromString		5560195	0					
ANR	5560319	Identifier	input_file_list		5560195	0					
ANR	5560320	Identifier	initializeFromString		5560195	1					
ANR	5560321	ArgumentList	input_files . Value ( )		5560195	1					
ANR	5560322	Argument	input_files . Value ( )		5560195	0					
ANR	5560323	CallExpression	input_files . Value ( )		5560195	0					
ANR	5560324	Callee	input_files . Value		5560195	0					
ANR	5560325	MemberAccess	input_files . Value		5560195	0					
ANR	5560326	Identifier	input_files		5560195	0					
ANR	5560327	Identifier	Value		5560195	1					
ANR	5560328	ArgumentList			5560195	1					
ANR	5560329	IdentifierDeclStatement	const char * tmp_file = NULL ;	288:1:8815:8842	5560195	12	True				
ANR	5560330	IdentifierDecl	* tmp_file = NULL		5560195	0					
ANR	5560331	IdentifierDeclType	const char *		5560195	0					
ANR	5560332	Identifier	tmp_file		5560195	1					
ANR	5560333	AssignmentExpression	* tmp_file = NULL		5560195	2		=			
ANR	5560334	Identifier	NULL		5560195	0					
ANR	5560335	Identifier	NULL		5560195	1					
ANR	5560336	ExpressionStatement	m_initial_working_files . rewind ( )	289:1:8845:8877	5560195	13	True				
ANR	5560337	CallExpression	m_initial_working_files . rewind ( )		5560195	0					
ANR	5560338	Callee	m_initial_working_files . rewind		5560195	0					
ANR	5560339	MemberAccess	m_initial_working_files . rewind		5560195	0					
ANR	5560340	Identifier	m_initial_working_files		5560195	0					
ANR	5560341	Identifier	rewind		5560195	1					
ANR	5560342	ArgumentList			5560195	1					
ANR	5560343	WhileStatement	while ( ( tmp_file = m_initial_working_files . next ( ) ) != NULL )		5560195	14					
ANR	5560344	Condition	( tmp_file = m_initial_working_files . next ( ) ) != NULL	290:8:8887:8937	5560195	0	True				
ANR	5560345	EqualityExpression	( tmp_file = m_initial_working_files . next ( ) ) != NULL		5560195	0		!=			
ANR	5560346	AssignmentExpression	tmp_file = m_initial_working_files . next ( )		5560195	0		=			
ANR	5560347	Identifier	tmp_file		5560195	0					
ANR	5560348	CallExpression	m_initial_working_files . next ( )		5560195	1					
ANR	5560349	Callee	m_initial_working_files . next		5560195	0					
ANR	5560350	MemberAccess	m_initial_working_files . next		5560195	0					
ANR	5560351	Identifier	m_initial_working_files		5560195	0					
ANR	5560352	Identifier	next		5560195	1					
ANR	5560353	ArgumentList			5560195	1					
ANR	5560354	Identifier	NULL		5560195	1					
ANR	5560355	CompoundStatement		30:62:1044:1044	5560195	1					
ANR	5560356	IfStatement	"if ( filelist_contains_file ( tmp_file , & intermediate_file_list , true ) )"		5560195	0					
ANR	5560357	Condition	"filelist_contains_file ( tmp_file , & intermediate_file_list , true )"	292:6:8991:9059	5560195	0	True				
ANR	5560358	CallExpression	"filelist_contains_file ( tmp_file , & intermediate_file_list , true )"		5560195	0					
ANR	5560359	Callee	filelist_contains_file		5560195	0					
ANR	5560360	Identifier	filelist_contains_file		5560195	0					
ANR	5560361	ArgumentList	tmp_file		5560195	1					
ANR	5560362	Argument	tmp_file		5560195	0					
ANR	5560363	Identifier	tmp_file		5560195	0					
ANR	5560364	Argument	& intermediate_file_list		5560195	1					
ANR	5560365	UnaryOperationExpression	& intermediate_file_list		5560195	0					
ANR	5560366	UnaryOperator	&		5560195	0					
ANR	5560367	Identifier	intermediate_file_list		5560195	1					
ANR	5560368	Argument	true		5560195	2					
ANR	5560369	Identifier	true		5560195	0					
ANR	5560370	CompoundStatement		33:38:1166:1166	5560195	1					
ANR	5560371	ExpressionStatement	m_transfer_intermediate_files . append ( tmp_file )	294:3:9068:9114	5560195	0	True				
ANR	5560372	CallExpression	m_transfer_intermediate_files . append ( tmp_file )		5560195	0					
ANR	5560373	Callee	m_transfer_intermediate_files . append		5560195	0					
ANR	5560374	MemberAccess	m_transfer_intermediate_files . append		5560195	0					
ANR	5560375	Identifier	m_transfer_intermediate_files		5560195	0					
ANR	5560376	Identifier	append		5560195	1					
ANR	5560377	ArgumentList	tmp_file		5560195	1					
ANR	5560378	Argument	tmp_file		5560195	0					
ANR	5560379	Identifier	tmp_file		5560195	0					
ANR	5560380	IfStatement	"if ( filelist_contains_file ( tmp_file , & input_file_list , true ) )"		5560195	1					
ANR	5560381	Condition	"filelist_contains_file ( tmp_file , & input_file_list , true )"	297:6:9161:9224	5560195	0	True				
ANR	5560382	CallExpression	"filelist_contains_file ( tmp_file , & input_file_list , true )"		5560195	0					
ANR	5560383	Callee	filelist_contains_file		5560195	0					
ANR	5560384	Identifier	filelist_contains_file		5560195	0					
ANR	5560385	ArgumentList	tmp_file		5560195	1					
ANR	5560386	Argument	tmp_file		5560195	0					
ANR	5560387	Identifier	tmp_file		5560195	0					
ANR	5560388	Argument	& input_file_list		5560195	1					
ANR	5560389	UnaryOperationExpression	& input_file_list		5560195	0					
ANR	5560390	UnaryOperator	&		5560195	0					
ANR	5560391	Identifier	input_file_list		5560195	1					
ANR	5560392	Argument	true		5560195	2					
ANR	5560393	Identifier	true		5560195	0					
ANR	5560394	CompoundStatement		38:33:1331:1331	5560195	1					
ANR	5560395	ExpressionStatement	m_transfer_input_files . append ( tmp_file )	299:3:9233:9272	5560195	0	True				
ANR	5560396	CallExpression	m_transfer_input_files . append ( tmp_file )		5560195	0					
ANR	5560397	Callee	m_transfer_input_files . append		5560195	0					
ANR	5560398	MemberAccess	m_transfer_input_files . append		5560195	0					
ANR	5560399	Identifier	m_transfer_input_files		5560195	0					
ANR	5560400	Identifier	append		5560195	1					
ANR	5560401	ArgumentList	tmp_file		5560195	1					
ANR	5560402	Argument	tmp_file		5560195	0					
ANR	5560403	Identifier	tmp_file		5560195	0					
ANR	5560404	ReturnType	void		5560195	1					
ANR	5560405	Identifier	VMType :: createInitialFileList		5560195	2					
ANR	5560406	ParameterList			5560195	3					
ANR	5560407	CFGEntryNode	ENTRY		5560195		True				
ANR	5560408	CFGExitNode	EXIT		5560195		True				
ANR	5560409	Symbol	m_transfer_intermediate_files		5560195						
ANR	5560410	Symbol	m_workingpath . Value		5560195						
ANR	5560411	Symbol	NULL		5560195						
ANR	5560412	Symbol	intermediate_files . Value		5560195						
ANR	5560413	Symbol	false		5560195						
ANR	5560414	Symbol	ATTR_TRANSFER_INPUT_FILES		5560195						
ANR	5560415	Symbol	input_files . IsEmpty		5560195						
ANR	5560416	Symbol	filelist_contains_file		5560195						
ANR	5560417	Symbol	& intermediate_file_list		5560195						
ANR	5560418	Symbol	input_files		5560195						
ANR	5560419	Symbol	m_initial_working_files . next		5560195						
ANR	5560420	Symbol	m_workingpath		5560195						
ANR	5560421	Symbol	input_file_list		5560195						
ANR	5560422	Symbol	ATTR_TRANSFER_INTERMEDIATE_FILES		5560195						
ANR	5560423	Symbol	input_files . Value		5560195						
ANR	5560424	Symbol	m_initial_working_files		5560195						
ANR	5560425	Symbol	intermediate_file_list		5560195						
ANR	5560426	Symbol	true		5560195						
ANR	5560427	Symbol	& input_file_list		5560195						
ANR	5560428	Symbol	m_transfer_input_files		5560195						
ANR	5560429	Symbol	intermediate_files		5560195						
ANR	5560430	Symbol	m_classAd		5560195						
ANR	5560431	Symbol	tmp_file		5560195						
ANR	5560432	Symbol	intermediate_files . IsEmpty		5560195						
ANR	5560433	Function	VMType :: deleteNonTransferredFiles	304:0:9284:9874							
ANR	5560434	FunctionDef	VMType :: deleteNonTransferredFiles ()		5560433	0					
ANR	5560435	CompoundStatement		306:0:9325:9874	5560433	0					
ANR	5560436	ExpressionStatement	m_initial_working_files . clearAll ( )	308:1:9364:9398	5560433	0	True				
ANR	5560437	CallExpression	m_initial_working_files . clearAll ( )		5560433	0					
ANR	5560438	Callee	m_initial_working_files . clearAll		5560433	0					
ANR	5560439	MemberAccess	m_initial_working_files . clearAll		5560433	0					
ANR	5560440	Identifier	m_initial_working_files		5560433	0					
ANR	5560441	Identifier	clearAll		5560433	1					
ANR	5560442	ArgumentList			5560433	1					
ANR	5560443	ExpressionStatement	"find_all_files_in_dir ( m_workingpath . Value ( ) , m_initial_working_files , true )"	311:1:9442:9517	5560433	1	True				
ANR	5560444	CallExpression	"find_all_files_in_dir ( m_workingpath . Value ( ) , m_initial_working_files , true )"		5560433	0					
ANR	5560445	Callee	find_all_files_in_dir		5560433	0					
ANR	5560446	Identifier	find_all_files_in_dir		5560433	0					
ANR	5560447	ArgumentList	m_workingpath . Value ( )		5560433	1					
ANR	5560448	Argument	m_workingpath . Value ( )		5560433	0					
ANR	5560449	CallExpression	m_workingpath . Value ( )		5560433	0					
ANR	5560450	Callee	m_workingpath . Value		5560433	0					
ANR	5560451	MemberAccess	m_workingpath . Value		5560433	0					
ANR	5560452	Identifier	m_workingpath		5560433	0					
ANR	5560453	Identifier	Value		5560433	1					
ANR	5560454	ArgumentList			5560433	1					
ANR	5560455	Argument	m_initial_working_files		5560433	1					
ANR	5560456	Identifier	m_initial_working_files		5560433	0					
ANR	5560457	Argument	true		5560433	2					
ANR	5560458	Identifier	true		5560433	0					
ANR	5560459	IdentifierDeclStatement	const char * tmp_file = NULL ;	313:1:9521:9548	5560433	2	True				
ANR	5560460	IdentifierDecl	* tmp_file = NULL		5560433	0					
ANR	5560461	IdentifierDeclType	const char *		5560433	0					
ANR	5560462	Identifier	tmp_file		5560433	1					
ANR	5560463	AssignmentExpression	* tmp_file = NULL		5560433	2		=			
ANR	5560464	Identifier	NULL		5560433	0					
ANR	5560465	Identifier	NULL		5560433	1					
ANR	5560466	ExpressionStatement	m_initial_working_files . rewind ( )	314:1:9551:9583	5560433	3	True				
ANR	5560467	CallExpression	m_initial_working_files . rewind ( )		5560433	0					
ANR	5560468	Callee	m_initial_working_files . rewind		5560433	0					
ANR	5560469	MemberAccess	m_initial_working_files . rewind		5560433	0					
ANR	5560470	Identifier	m_initial_working_files		5560433	0					
ANR	5560471	Identifier	rewind		5560433	1					
ANR	5560472	ArgumentList			5560433	1					
ANR	5560473	WhileStatement	while ( ( tmp_file = m_initial_working_files . next ( ) ) != NULL )		5560433	4					
ANR	5560474	Condition	( tmp_file = m_initial_working_files . next ( ) ) != NULL	315:8:9593:9643	5560433	0	True				
ANR	5560475	EqualityExpression	( tmp_file = m_initial_working_files . next ( ) ) != NULL		5560433	0		!=			
ANR	5560476	AssignmentExpression	tmp_file = m_initial_working_files . next ( )		5560433	0		=			
ANR	5560477	Identifier	tmp_file		5560433	0					
ANR	5560478	CallExpression	m_initial_working_files . next ( )		5560433	1					
ANR	5560479	Callee	m_initial_working_files . next		5560433	0					
ANR	5560480	MemberAccess	m_initial_working_files . next		5560433	0					
ANR	5560481	Identifier	m_initial_working_files		5560433	0					
ANR	5560482	Identifier	next		5560433	1					
ANR	5560483	ArgumentList			5560433	1					
ANR	5560484	Identifier	NULL		5560433	1					
ANR	5560485	CompoundStatement		10:62:321:321	5560433	1					
ANR	5560486	IfStatement	if ( m_transfer_input_files . contains ( tmp_file ) == false )		5560433	0					
ANR	5560487	Condition	m_transfer_input_files . contains ( tmp_file ) == false	316:6:9655:9704	5560433	0	True				
ANR	5560488	EqualityExpression	m_transfer_input_files . contains ( tmp_file ) == false		5560433	0		==			
ANR	5560489	CallExpression	m_transfer_input_files . contains ( tmp_file )		5560433	0					
ANR	5560490	Callee	m_transfer_input_files . contains		5560433	0					
ANR	5560491	MemberAccess	m_transfer_input_files . contains		5560433	0					
ANR	5560492	Identifier	m_transfer_input_files		5560433	0					
ANR	5560493	Identifier	contains		5560433	1					
ANR	5560494	ArgumentList	tmp_file		5560433	1					
ANR	5560495	Argument	tmp_file		5560433	0					
ANR	5560496	Identifier	tmp_file		5560433	0					
ANR	5560497	Identifier	false		5560433	1					
ANR	5560498	CompoundStatement		11:59:382:382	5560433	1					
ANR	5560499	ExpressionStatement	unlink ( tmp_file )	318:3:9762:9778	5560433	0	True				
ANR	5560500	CallExpression	unlink ( tmp_file )		5560433	0					
ANR	5560501	Callee	unlink		5560433	0					
ANR	5560502	Identifier	unlink		5560433	0					
ANR	5560503	ArgumentList	tmp_file		5560433	1					
ANR	5560504	Argument	tmp_file		5560433	0					
ANR	5560505	Identifier	tmp_file		5560433	0					
ANR	5560506	ExpressionStatement	m_initial_working_files . deleteCurrent ( )	319:3:9783:9822	5560433	1	True				
ANR	5560507	CallExpression	m_initial_working_files . deleteCurrent ( )		5560433	0					
ANR	5560508	Callee	m_initial_working_files . deleteCurrent		5560433	0					
ANR	5560509	MemberAccess	m_initial_working_files . deleteCurrent		5560433	0					
ANR	5560510	Identifier	m_initial_working_files		5560433	0					
ANR	5560511	Identifier	deleteCurrent		5560433	1					
ANR	5560512	ArgumentList			5560433	1					
ANR	5560513	ExpressionStatement	m_transfer_intermediate_files . clearAll ( )	322:1:9832:9872	5560433	5	True				
ANR	5560514	CallExpression	m_transfer_intermediate_files . clearAll ( )		5560433	0					
ANR	5560515	Callee	m_transfer_intermediate_files . clearAll		5560433	0					
ANR	5560516	MemberAccess	m_transfer_intermediate_files . clearAll		5560433	0					
ANR	5560517	Identifier	m_transfer_intermediate_files		5560433	0					
ANR	5560518	Identifier	clearAll		5560433	1					
ANR	5560519	ArgumentList			5560433	1					
ANR	5560520	ReturnType	void		5560433	1					
ANR	5560521	Identifier	VMType :: deleteNonTransferredFiles		5560433	2					
ANR	5560522	ParameterList			5560433	3					
ANR	5560523	CFGEntryNode	ENTRY		5560433		True				
ANR	5560524	CFGExitNode	EXIT		5560433		True				
ANR	5560525	Symbol	m_transfer_intermediate_files		5560433						
ANR	5560526	Symbol	m_initial_working_files . next		5560433						
ANR	5560527	Symbol	m_workingpath		5560433						
ANR	5560528	Symbol	m_workingpath . Value		5560433						
ANR	5560529	Symbol	NULL		5560433						
ANR	5560530	Symbol	m_initial_working_files		5560433						
ANR	5560531	Symbol	m_transfer_input_files . contains		5560433						
ANR	5560532	Symbol	true		5560433						
ANR	5560533	Symbol	false		5560433						
ANR	5560534	Symbol	m_transfer_input_files		5560433						
ANR	5560535	Symbol	tmp_file		5560433						
ANR	5560536	Function	VMType :: createVMName	327:0:9972:10201							
ANR	5560537	FunctionDef	"VMType :: createVMName (ClassAd * ad , MyString & vmname)"		5560536	0					
ANR	5560538	CompoundStatement		329:0:10030:10201	5560536	0					
ANR	5560539	IfStatement	if ( ! ad )		5560536	0					
ANR	5560540	Condition	! ad	330:5:10037:10039	5560536	0	True				
ANR	5560541	UnaryOperationExpression	! ad		5560536	0					
ANR	5560542	UnaryOperator	!		5560536	0					
ANR	5560543	Identifier	ad		5560536	1					
ANR	5560544	CompoundStatement		2:11:12:12	5560536	1					
ANR	5560545	ReturnStatement	return false ;	331:2:10047:10059	5560536	0	True				
ANR	5560546	Identifier	false		5560536	0					
ANR	5560547	IfStatement	"if ( create_name_for_VM ( ad , vmname ) == false )"		5560536	1					
ANR	5560548	Condition	"create_name_for_VM ( ad , vmname ) == false"	334:5:10070:10108	5560536	0	True				
ANR	5560549	EqualityExpression	"create_name_for_VM ( ad , vmname ) == false"		5560536	0		==			
ANR	5560550	CallExpression	"create_name_for_VM ( ad , vmname )"		5560536	0					
ANR	5560551	Callee	create_name_for_VM		5560536	0					
ANR	5560552	Identifier	create_name_for_VM		5560536	0					
ANR	5560553	ArgumentList	ad		5560536	1					
ANR	5560554	Argument	ad		5560536	0					
ANR	5560555	Identifier	ad		5560536	0					
ANR	5560556	Argument	vmname		5560536	1					
ANR	5560557	Identifier	vmname		5560536	0					
ANR	5560558	Identifier	false		5560536	1					
ANR	5560559	CompoundStatement		6:47:81:81	5560536	1					
ANR	5560560	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Cannot make the name of VM\\n"" )"	335:2:10116:10166	5560536	0	True				
ANR	5560561	CallExpression	"vmprintf ( D_ALWAYS , ""Cannot make the name of VM\\n"" )"		5560536	0					
ANR	5560562	Callee	vmprintf		5560536	0					
ANR	5560563	Identifier	vmprintf		5560536	0					
ANR	5560564	ArgumentList	D_ALWAYS		5560536	1					
ANR	5560565	Argument	D_ALWAYS		5560536	0					
ANR	5560566	Identifier	D_ALWAYS		5560536	0					
ANR	5560567	Argument	"""Cannot make the name of VM\\n"""		5560536	1					
ANR	5560568	PrimaryExpression	"""Cannot make the name of VM\\n"""		5560536	0					
ANR	5560569	ReturnStatement	return false ;	336:2:10170:10182	5560536	1	True				
ANR	5560570	Identifier	false		5560536	0					
ANR	5560571	ReturnStatement	return true ;	338:1:10188:10199	5560536	2	True				
ANR	5560572	Identifier	true		5560536	0					
ANR	5560573	ReturnType	bool		5560536	1					
ANR	5560574	Identifier	VMType :: createVMName		5560536	2					
ANR	5560575	ParameterList	"ClassAd * ad , MyString & vmname"		5560536	3					
ANR	5560576	Parameter	ClassAd * ad	328:21:9999:10009	5560536	0	True				
ANR	5560577	ParameterType	ClassAd *		5560536	0					
ANR	5560578	Identifier	ad		5560536	1					
ANR	5560579	Parameter	MyString & vmname	328:34:10012:10027	5560536	1	True				
ANR	5560580	ParameterType	MyString &		5560536	0					
ANR	5560581	Identifier	vmname		5560536	1					
ANR	5560582	CFGEntryNode	ENTRY		5560536		True				
ANR	5560583	CFGExitNode	EXIT		5560536		True				
ANR	5560584	Symbol	create_name_for_VM		5560536						
ANR	5560585	Symbol	ad		5560536						
ANR	5560586	Symbol	false		5560536						
ANR	5560587	Symbol	D_ALWAYS		5560536						
ANR	5560588	Symbol	true		5560536						
ANR	5560589	Symbol	vmname		5560536						
ANR	5560590	Function	VMType :: createTempFile	345:0:10429:11485							
ANR	5560591	FunctionDef	"VMType :: createTempFile (const char * template_string , const char * suffix , MyString & outname)"		5560590	0					
ANR	5560592	CompoundStatement		347:0:10525:11485	5560590	0					
ANR	5560593	IdentifierDeclStatement	MyString tmp_config_name ;	348:1:10528:10552	5560590	0	True				
ANR	5560594	IdentifierDecl	tmp_config_name		5560590	0					
ANR	5560595	IdentifierDeclType	MyString		5560590	0					
ANR	5560596	Identifier	tmp_config_name		5560590	1					
ANR	5560597	ExpressionStatement	"tmp_config_name . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , template_string )"	349:1:10555:10647	5560590	1	True				
ANR	5560598	CallExpression	"tmp_config_name . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , template_string )"		5560590	0					
ANR	5560599	Callee	tmp_config_name . sprintf		5560590	0					
ANR	5560600	MemberAccess	tmp_config_name . sprintf		5560590	0					
ANR	5560601	Identifier	tmp_config_name		5560590	0					
ANR	5560602	Identifier	sprintf		5560590	1					
ANR	5560603	ArgumentList	"""%s%c%s"""		5560590	1					
ANR	5560604	Argument	"""%s%c%s"""		5560590	0					
ANR	5560605	PrimaryExpression	"""%s%c%s"""		5560590	0					
ANR	5560606	Argument	m_workingpath . Value ( )		5560590	1					
ANR	5560607	CallExpression	m_workingpath . Value ( )		5560590	0					
ANR	5560608	Callee	m_workingpath . Value		5560590	0					
ANR	5560609	MemberAccess	m_workingpath . Value		5560590	0					
ANR	5560610	Identifier	m_workingpath		5560590	0					
ANR	5560611	Identifier	Value		5560590	1					
ANR	5560612	ArgumentList			5560590	1					
ANR	5560613	Argument	DIR_DELIM_CHAR		5560590	2					
ANR	5560614	Identifier	DIR_DELIM_CHAR		5560590	0					
ANR	5560615	Argument	template_string		5560590	3					
ANR	5560616	Identifier	template_string		5560590	0					
ANR	5560617	IdentifierDeclStatement	char * config_name = strdup ( tmp_config_name . Value ( ) ) ;	352:1:10651:10703	5560590	2	True				
ANR	5560618	IdentifierDecl	* config_name = strdup ( tmp_config_name . Value ( ) )		5560590	0					
ANR	5560619	IdentifierDeclType	char *		5560590	0					
ANR	5560620	Identifier	config_name		5560590	1					
ANR	5560621	AssignmentExpression	* config_name = strdup ( tmp_config_name . Value ( ) )		5560590	2		=			
ANR	5560622	Identifier	config_name		5560590	0					
ANR	5560623	CallExpression	strdup ( tmp_config_name . Value ( ) )		5560590	1					
ANR	5560624	Callee	strdup		5560590	0					
ANR	5560625	Identifier	strdup		5560590	0					
ANR	5560626	ArgumentList	tmp_config_name . Value ( )		5560590	1					
ANR	5560627	Argument	tmp_config_name . Value ( )		5560590	0					
ANR	5560628	CallExpression	tmp_config_name . Value ( )		5560590	0					
ANR	5560629	Callee	tmp_config_name . Value		5560590	0					
ANR	5560630	MemberAccess	tmp_config_name . Value		5560590	0					
ANR	5560631	Identifier	tmp_config_name		5560590	0					
ANR	5560632	Identifier	Value		5560590	1					
ANR	5560633	ArgumentList			5560590	1					
ANR	5560634	ExpressionStatement	ASSERT ( config_name )	353:1:10706:10725	5560590	3	True				
ANR	5560635	CallExpression	ASSERT ( config_name )		5560590	0					
ANR	5560636	Callee	ASSERT		5560590	0					
ANR	5560637	Identifier	ASSERT		5560590	0					
ANR	5560638	ArgumentList	config_name		5560590	1					
ANR	5560639	Argument	config_name		5560590	0					
ANR	5560640	Identifier	config_name		5560590	0					
ANR	5560641	IdentifierDeclStatement	int config_fd = - 1 ;	355:1:10729:10747	5560590	4	True				
ANR	5560642	IdentifierDecl	config_fd = - 1		5560590	0					
ANR	5560643	IdentifierDeclType	int		5560590	0					
ANR	5560644	Identifier	config_fd		5560590	1					
ANR	5560645	AssignmentExpression	config_fd = - 1		5560590	2		=			
ANR	5560646	Identifier	config_fd		5560590	0					
ANR	5560647	UnaryOperationExpression	- 1		5560590	1					
ANR	5560648	UnaryOperator	-		5560590	0					
ANR	5560649	PrimaryExpression	1		5560590	1					
ANR	5560650	ExpressionStatement	config_fd = condor_mkstemp ( config_name )	356:1:10750:10791	5560590	5	True				
ANR	5560651	AssignmentExpression	config_fd = condor_mkstemp ( config_name )		5560590	0		=			
ANR	5560652	Identifier	config_fd		5560590	0					
ANR	5560653	CallExpression	condor_mkstemp ( config_name )		5560590	1					
ANR	5560654	Callee	condor_mkstemp		5560590	0					
ANR	5560655	Identifier	condor_mkstemp		5560590	0					
ANR	5560656	ArgumentList	config_name		5560590	1					
ANR	5560657	Argument	config_name		5560590	0					
ANR	5560658	Identifier	config_name		5560590	0					
ANR	5560659	IfStatement	if ( config_fd < 0 )		5560590	6					
ANR	5560660	Condition	config_fd < 0	357:5:10798:10810	5560590	0	True				
ANR	5560661	RelationalExpression	config_fd < 0		5560590	0		<			
ANR	5560662	Identifier	config_fd		5560590	0					
ANR	5560663	PrimaryExpression	0		5560590	1					
ANR	5560664	CompoundStatement		11:21:288:288	5560590	1					
ANR	5560665	Statement	vmprintf	358:2:10818:10825	5560590	0	True				
ANR	5560666	Statement	(	358:10:10826:10826	5560590	1	True				
ANR	5560667	Statement	D_ALWAYS	358:11:10827:10834	5560590	2	True				
ANR	5560668	Statement	","	358:19:10835:10835	5560590	3	True				
ANR	5560669	Statement	"""condor_mkstemp(%s) returned %d, '%s' (errno %d) """	358:21:10837:10886	5560590	4	True				
ANR	5560670	Statement	"""in VMType::createTempFile()\\n"""	359:4:10892:10922	5560590	5	True				
ANR	5560671	Statement	","	359:35:10923:10923	5560590	6	True				
ANR	5560672	Statement	config_name	359:37:10925:10935	5560590	7	True				
ANR	5560673	Statement	","	359:48:10936:10936	5560590	8	True				
ANR	5560674	Statement	config_fd	359:50:10938:10946	5560590	9	True				
ANR	5560675	Statement	","	359:59:10947:10947	5560590	10	True				
ANR	5560676	Statement	strerror	360:4:10953:10960	5560590	11	True				
ANR	5560677	Statement	(	360:12:10961:10961	5560590	12	True				
ANR	5560678	Statement	errno	360:13:10962:10966	5560590	13	True				
ANR	5560679	Statement	)	360:18:10967:10967	5560590	14	True				
ANR	5560680	Statement	","	360:19:10968:10968	5560590	15	True				
ANR	5560681	Statement	errno	360:21:10970:10974	5560590	16	True				
ANR	5560682	Statement	)	360:27:10976:10976	5560590	17	True				
ANR	5560683	ExpressionStatement		360:28:10977:10977	5560590	18	True				
ANR	5560684	ExpressionStatement	free ( config_name )	361:2:10981:10998	5560590	19	True				
ANR	5560685	CallExpression	free ( config_name )		5560590	0					
ANR	5560686	Callee	free		5560590	0					
ANR	5560687	Identifier	free		5560590	0					
ANR	5560688	ArgumentList	config_name		5560590	1					
ANR	5560689	Argument	config_name		5560590	0					
ANR	5560690	Identifier	config_name		5560590	0					
ANR	5560691	ReturnStatement	return false ;	362:2:11002:11014	5560590	20	True				
ANR	5560692	Identifier	false		5560590	0					
ANR	5560693	ExpressionStatement	close ( config_fd )	364:1:11020:11036	5560590	7	True				
ANR	5560694	CallExpression	close ( config_fd )		5560590	0					
ANR	5560695	Callee	close		5560590	0					
ANR	5560696	Identifier	close		5560590	0					
ANR	5560697	ArgumentList	config_fd		5560590	1					
ANR	5560698	Argument	config_fd		5560590	0					
ANR	5560699	Identifier	config_fd		5560590	0					
ANR	5560700	ExpressionStatement	outname = config_name	366:1:11040:11061	5560590	8	True				
ANR	5560701	AssignmentExpression	outname = config_name		5560590	0		=			
ANR	5560702	Identifier	outname		5560590	0					
ANR	5560703	Identifier	config_name		5560590	1					
ANR	5560704	IfStatement	if ( suffix )		5560590	9					
ANR	5560705	Condition	suffix	368:5:11069:11074	5560590	0	True				
ANR	5560706	Identifier	suffix		5560590	0					
ANR	5560707	CompoundStatement		22:14:552:552	5560590	1					
ANR	5560708	ExpressionStatement	"tmp_config_name . sprintf ( ""%s%s"" , config_name , suffix )"	369:2:11082:11133	5560590	0	True				
ANR	5560709	CallExpression	"tmp_config_name . sprintf ( ""%s%s"" , config_name , suffix )"		5560590	0					
ANR	5560710	Callee	tmp_config_name . sprintf		5560590	0					
ANR	5560711	MemberAccess	tmp_config_name . sprintf		5560590	0					
ANR	5560712	Identifier	tmp_config_name		5560590	0					
ANR	5560713	Identifier	sprintf		5560590	1					
ANR	5560714	ArgumentList	"""%s%s"""		5560590	1					
ANR	5560715	Argument	"""%s%s"""		5560590	0					
ANR	5560716	PrimaryExpression	"""%s%s"""		5560590	0					
ANR	5560717	Argument	config_name		5560590	1					
ANR	5560718	Identifier	config_name		5560590	0					
ANR	5560719	Argument	suffix		5560590	2					
ANR	5560720	Identifier	suffix		5560590	0					
ANR	5560721	IfStatement	"if ( rename ( config_name , tmp_config_name . Value ( ) ) < 0 )"		5560590	1					
ANR	5560722	Condition	"rename ( config_name , tmp_config_name . Value ( ) ) < 0"	371:6:11142:11189	5560590	0	True				
ANR	5560723	RelationalExpression	"rename ( config_name , tmp_config_name . Value ( ) ) < 0"		5560590	0		<			
ANR	5560724	CallExpression	"rename ( config_name , tmp_config_name . Value ( ) )"		5560590	0					
ANR	5560725	Callee	rename		5560590	0					
ANR	5560726	Identifier	rename		5560590	0					
ANR	5560727	ArgumentList	config_name		5560590	1					
ANR	5560728	Argument	config_name		5560590	0					
ANR	5560729	Identifier	config_name		5560590	0					
ANR	5560730	Argument	tmp_config_name . Value ( )		5560590	1					
ANR	5560731	CallExpression	tmp_config_name . Value ( )		5560590	0					
ANR	5560732	Callee	tmp_config_name . Value		5560590	0					
ANR	5560733	MemberAccess	tmp_config_name . Value		5560590	0					
ANR	5560734	Identifier	tmp_config_name		5560590	0					
ANR	5560735	Identifier	Value		5560590	1					
ANR	5560736	ArgumentList			5560590	1					
ANR	5560737	PrimaryExpression	0		5560590	1					
ANR	5560738	CompoundStatement		25:57:667:667	5560590	1					
ANR	5560739	Statement	vmprintf	372:3:11198:11205	5560590	0	True				
ANR	5560740	Statement	(	372:11:11206:11206	5560590	1	True				
ANR	5560741	Statement	D_ALWAYS	372:12:11207:11214	5560590	2	True				
ANR	5560742	Statement	","	372:20:11215:11215	5560590	3	True				
ANR	5560743	Statement	"""Cannot rename the temporary config file(%s), '%s' (errno %d) in """	372:22:11217:11282	5560590	4	True				
ANR	5560744	Statement	"""VMType::createTempFile()\\n"""	373:5:11289:11316	5560590	5	True				
ANR	5560745	Statement	","	373:33:11317:11317	5560590	6	True				
ANR	5560746	Statement	tmp_config_name	373:35:11319:11333	5560590	7	True				
ANR	5560747	Statement	.	373:50:11334:11334	5560590	8	True				
ANR	5560748	Statement	Value	373:51:11335:11339	5560590	9	True				
ANR	5560749	Statement	(	373:56:11340:11340	5560590	10	True				
ANR	5560750	Statement	)	373:57:11341:11341	5560590	11	True				
ANR	5560751	Statement	","	373:58:11342:11342	5560590	12	True				
ANR	5560752	Statement	strerror	374:5:11350:11357	5560590	13	True				
ANR	5560753	Statement	(	374:13:11358:11358	5560590	14	True				
ANR	5560754	Statement	errno	374:14:11359:11363	5560590	15	True				
ANR	5560755	Statement	)	374:19:11364:11364	5560590	16	True				
ANR	5560756	Statement	","	374:20:11365:11365	5560590	17	True				
ANR	5560757	Statement	errno	374:22:11367:11371	5560590	18	True				
ANR	5560758	Statement	)	374:28:11373:11373	5560590	19	True				
ANR	5560759	ExpressionStatement		374:29:11374:11374	5560590	20	True				
ANR	5560760	ExpressionStatement	free ( config_name )	375:3:11379:11396	5560590	21	True				
ANR	5560761	CallExpression	free ( config_name )		5560590	0					
ANR	5560762	Callee	free		5560590	0					
ANR	5560763	Identifier	free		5560590	0					
ANR	5560764	ArgumentList	config_name		5560590	1					
ANR	5560765	Argument	config_name		5560590	0					
ANR	5560766	Identifier	config_name		5560590	0					
ANR	5560767	ReturnStatement	return false ;	376:3:11401:11413	5560590	22	True				
ANR	5560768	Identifier	false		5560590	0					
ANR	5560769	ExpressionStatement	outname = tmp_config_name	378:2:11421:11446	5560590	2	True				
ANR	5560770	AssignmentExpression	outname = tmp_config_name		5560590	0		=			
ANR	5560771	Identifier	outname		5560590	0					
ANR	5560772	Identifier	tmp_config_name		5560590	1					
ANR	5560773	ExpressionStatement	free ( config_name )	380:1:11452:11469	5560590	10	True				
ANR	5560774	CallExpression	free ( config_name )		5560590	0					
ANR	5560775	Callee	free		5560590	0					
ANR	5560776	Identifier	free		5560590	0					
ANR	5560777	ArgumentList	config_name		5560590	1					
ANR	5560778	Argument	config_name		5560590	0					
ANR	5560779	Identifier	config_name		5560590	0					
ANR	5560780	ReturnStatement	return true ;	381:1:11472:11483	5560590	11	True				
ANR	5560781	Identifier	true		5560590	0					
ANR	5560782	ReturnType	bool		5560590	1					
ANR	5560783	Identifier	VMType :: createTempFile		5560590	2					
ANR	5560784	ParameterList	"const char * template_string , const char * suffix , MyString & outname"		5560590	3					
ANR	5560785	Parameter	const char * template_string	346:23:10457:10483	5560590	0	True				
ANR	5560786	ParameterType	const char *		5560590	0					
ANR	5560787	Identifier	template_string		5560590	1					
ANR	5560788	Parameter	const char * suffix	346:52:10486:10503	5560590	1	True				
ANR	5560789	ParameterType	const char *		5560590	0					
ANR	5560790	Identifier	suffix		5560590	1					
ANR	5560791	Parameter	MyString & outname	346:72:10506:10522	5560590	2	True				
ANR	5560792	ParameterType	MyString &		5560590	0					
ANR	5560793	Identifier	outname		5560590	1					
ANR	5560794	CFGEntryNode	ENTRY		5560590		True				
ANR	5560795	CFGExitNode	EXIT		5560590		True				
ANR	5560796	Symbol	config_name		5560590						
ANR	5560797	Symbol	tmp_config_name		5560590						
ANR	5560798	Symbol	m_workingpath . Value		5560590						
ANR	5560799	Symbol	condor_mkstemp		5560590						
ANR	5560800	Symbol	DIR_DELIM_CHAR		5560590						
ANR	5560801	Symbol	false		5560590						
ANR	5560802	Symbol	outname		5560590						
ANR	5560803	Symbol	template_string		5560590						
ANR	5560804	Symbol	suffix		5560590						
ANR	5560805	Symbol	m_workingpath		5560590						
ANR	5560806	Symbol	rename		5560590						
ANR	5560807	Symbol	tmp_config_name . Value		5560590						
ANR	5560808	Symbol	config_fd		5560590						
ANR	5560809	Symbol	true		5560590						
ANR	5560810	Symbol	strdup		5560590						
ANR	5560811	Function	VMType :: isTransferedFile	387:0:11634:12425							
ANR	5560812	FunctionDef	"VMType :: isTransferedFile (const char * file_name , MyString & fullname)"		5560811	0					
ANR	5560813	CompoundStatement		389:0:11709:12425	5560811	0					
ANR	5560814	IfStatement	if ( ! file_name || m_initial_working_files . isEmpty ( ) )		5560811	0					
ANR	5560815	Condition	! file_name || m_initial_working_files . isEmpty ( )	390:5:11716:11762	5560811	0	True				
ANR	5560816	OrExpression	! file_name || m_initial_working_files . isEmpty ( )		5560811	0		||			
ANR	5560817	UnaryOperationExpression	! file_name		5560811	0					
ANR	5560818	UnaryOperator	!		5560811	0					
ANR	5560819	Identifier	file_name		5560811	1					
ANR	5560820	CallExpression	m_initial_working_files . isEmpty ( )		5560811	1					
ANR	5560821	Callee	m_initial_working_files . isEmpty		5560811	0					
ANR	5560822	MemberAccess	m_initial_working_files . isEmpty		5560811	0					
ANR	5560823	Identifier	m_initial_working_files		5560811	0					
ANR	5560824	Identifier	isEmpty		5560811	1					
ANR	5560825	ArgumentList			5560811	1					
ANR	5560826	CompoundStatement		2:55:56:56	5560811	1					
ANR	5560827	ReturnStatement	return false ;	391:2:11770:11782	5560811	0	True				
ANR	5560828	Identifier	false		5560811	0					
ANR	5560829	IdentifierDeclStatement	MyString tmp_fullname ;	395:1:11829:11850	5560811	1	True				
ANR	5560830	IdentifierDecl	tmp_fullname		5560811	0					
ANR	5560831	IdentifierDeclType	MyString		5560811	0					
ANR	5560832	Identifier	tmp_fullname		5560811	1					
ANR	5560833	IfStatement	"if ( filelist_contains_file ( file_name , & m_initial_working_files , true ) )"		5560811	2					
ANR	5560834	Condition	"filelist_contains_file ( file_name , & m_initial_working_files , true )"	396:5:11857:11925	5560811	0	True				
ANR	5560835	CallExpression	"filelist_contains_file ( file_name , & m_initial_working_files , true )"		5560811	0					
ANR	5560836	Callee	filelist_contains_file		5560811	0					
ANR	5560837	Identifier	filelist_contains_file		5560811	0					
ANR	5560838	ArgumentList	file_name		5560811	1					
ANR	5560839	Argument	file_name		5560811	0					
ANR	5560840	Identifier	file_name		5560811	0					
ANR	5560841	Argument	& m_initial_working_files		5560811	1					
ANR	5560842	UnaryOperationExpression	& m_initial_working_files		5560811	0					
ANR	5560843	UnaryOperator	&		5560811	0					
ANR	5560844	Identifier	m_initial_working_files		5560811	1					
ANR	5560845	Argument	true		5560811	2					
ANR	5560846	Identifier	true		5560811	0					
ANR	5560847	CompoundStatement		9:38:219:219	5560811	1					
ANR	5560848	ExpressionStatement	"tmp_fullname . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , condor_basename ( file_name ) )"	400:2:12001:12103	5560811	0	True				
ANR	5560849	CallExpression	"tmp_fullname . sprintf ( ""%s%c%s"" , m_workingpath . Value ( ) , DIR_DELIM_CHAR , condor_basename ( file_name ) )"		5560811	0					
ANR	5560850	Callee	tmp_fullname . sprintf		5560811	0					
ANR	5560851	MemberAccess	tmp_fullname . sprintf		5560811	0					
ANR	5560852	Identifier	tmp_fullname		5560811	0					
ANR	5560853	Identifier	sprintf		5560811	1					
ANR	5560854	ArgumentList	"""%s%c%s"""		5560811	1					
ANR	5560855	Argument	"""%s%c%s"""		5560811	0					
ANR	5560856	PrimaryExpression	"""%s%c%s"""		5560811	0					
ANR	5560857	Argument	m_workingpath . Value ( )		5560811	1					
ANR	5560858	CallExpression	m_workingpath . Value ( )		5560811	0					
ANR	5560859	Callee	m_workingpath . Value		5560811	0					
ANR	5560860	MemberAccess	m_workingpath . Value		5560811	0					
ANR	5560861	Identifier	m_workingpath		5560811	0					
ANR	5560862	Identifier	Value		5560811	1					
ANR	5560863	ArgumentList			5560811	1					
ANR	5560864	Argument	DIR_DELIM_CHAR		5560811	2					
ANR	5560865	Identifier	DIR_DELIM_CHAR		5560811	0					
ANR	5560866	Argument	condor_basename ( file_name )		5560811	3					
ANR	5560867	CallExpression	condor_basename ( file_name )		5560811	0					
ANR	5560868	Callee	condor_basename		5560811	0					
ANR	5560869	Identifier	condor_basename		5560811	0					
ANR	5560870	ArgumentList	file_name		5560811	1					
ANR	5560871	Argument	file_name		5560811	0					
ANR	5560872	Identifier	file_name		5560811	0					
ANR	5560873	ExpressionStatement	fullname = tmp_fullname	402:2:12107:12130	5560811	1	True				
ANR	5560874	AssignmentExpression	fullname = tmp_fullname		5560811	0		=			
ANR	5560875	Identifier	fullname		5560811	0					
ANR	5560876	Identifier	tmp_fullname		5560811	1					
ANR	5560877	ReturnStatement	return true ;	403:2:12134:12145	5560811	2	True				
ANR	5560878	Identifier	true		5560811	0					
ANR	5560879	ElseStatement	else		5560811	0					
ANR	5560880	CompoundStatement		16:7:444:444	5560811	0					
ANR	5560881	IfStatement	if ( fullpath ( file_name ) == false )		5560811	0					
ANR	5560882	Condition	fullpath ( file_name ) == false	406:6:12196:12223	5560811	0	True				
ANR	5560883	EqualityExpression	fullpath ( file_name ) == false		5560811	0		==			
ANR	5560884	CallExpression	fullpath ( file_name )		5560811	0					
ANR	5560885	Callee	fullpath		5560811	0					
ANR	5560886	Identifier	fullpath		5560811	0					
ANR	5560887	ArgumentList	file_name		5560811	1					
ANR	5560888	Argument	file_name		5560811	0					
ANR	5560889	Identifier	file_name		5560811	0					
ANR	5560890	Identifier	false		5560811	1					
ANR	5560891	CompoundStatement		18:37:517:517	5560811	1					
ANR	5560892	Statement	vmprintf	407:3:12232:12239	5560811	0	True				
ANR	5560893	Statement	(	407:11:12240:12240	5560811	1	True				
ANR	5560894	Statement	D_ALWAYS	407:12:12241:12248	5560811	2	True				
ANR	5560895	Statement	","	407:20:12249:12249	5560811	3	True				
ANR	5560896	Statement	"""Warning: The file(%s) doesn't have """	407:22:12251:12287	5560811	4	True				
ANR	5560897	Statement	"""full path even though it is not """	408:5:12294:12327	5560811	5	True				
ANR	5560898	Statement	"""transferred\\n"""	409:5:12334:12348	5560811	6	True				
ANR	5560899	Statement	","	409:20:12349:12349	5560811	7	True				
ANR	5560900	Statement	file_name	409:22:12351:12359	5560811	8	True				
ANR	5560901	Statement	)	409:31:12360:12360	5560811	9	True				
ANR	5560902	ExpressionStatement		409:32:12361:12361	5560811	10	True				
ANR	5560903	ExpressionStatement	fullname = file_name	411:2:12369:12389	5560811	1	True				
ANR	5560904	AssignmentExpression	fullname = file_name		5560811	0		=			
ANR	5560905	Identifier	fullname		5560811	0					
ANR	5560906	Identifier	file_name		5560811	1					
ANR	5560907	ReturnStatement	return false ;	412:2:12393:12405	5560811	2	True				
ANR	5560908	Identifier	false		5560811	0					
ANR	5560909	ReturnStatement	return false ;	414:1:12411:12423	5560811	3	True				
ANR	5560910	Identifier	false		5560811	0					
ANR	5560911	ReturnType	bool		5560811	1					
ANR	5560912	Identifier	VMType :: isTransferedFile		5560811	2					
ANR	5560913	ParameterList	"const char * file_name , MyString & fullname"		5560811	3					
ANR	5560914	Parameter	const char * file_name	388:25:11665:11685	5560811	0	True				
ANR	5560915	ParameterType	const char *		5560811	0					
ANR	5560916	Identifier	file_name		5560811	1					
ANR	5560917	Parameter	MyString & fullname	388:48:11688:11705	5560811	1	True				
ANR	5560918	ParameterType	MyString &		5560811	0					
ANR	5560919	Identifier	fullname		5560811	1					
ANR	5560920	CFGEntryNode	ENTRY		5560811		True				
ANR	5560921	CFGExitNode	EXIT		5560811		True				
ANR	5560922	Symbol	m_workingpath . Value		5560811						
ANR	5560923	Symbol	tmp_fullname		5560811						
ANR	5560924	Symbol	& m_initial_working_files		5560811						
ANR	5560925	Symbol	file_name		5560811						
ANR	5560926	Symbol	DIR_DELIM_CHAR		5560811						
ANR	5560927	Symbol	false		5560811						
ANR	5560928	Symbol	filelist_contains_file		5560811						
ANR	5560929	Symbol	m_workingpath		5560811						
ANR	5560930	Symbol	m_initial_working_files		5560811						
ANR	5560931	Symbol	fullpath		5560811						
ANR	5560932	Symbol	true		5560811						
ANR	5560933	Symbol	fullname		5560811						
ANR	5560934	Symbol	m_initial_working_files . isEmpty		5560811						
ANR	5560935	Symbol	condor_basename		5560811						
ANR	5560936	Function	VMType :: createConfigUsingScript	417:0:12428:13652							
ANR	5560937	FunctionDef	VMType :: createConfigUsingScript (const char * configfile)		5560936	0					
ANR	5560938	CompoundStatement		419:0:12489:13652	5560936	0					
ANR	5560939	ExpressionStatement	"vmprintf ( D_FULLDEBUG , ""Inside VMType::createConfigUsingScript\\n"" )"	420:1:12492:12557	5560936	0	True				
ANR	5560940	CallExpression	"vmprintf ( D_FULLDEBUG , ""Inside VMType::createConfigUsingScript\\n"" )"		5560936	0					
ANR	5560941	Callee	vmprintf		5560936	0					
ANR	5560942	Identifier	vmprintf		5560936	0					
ANR	5560943	ArgumentList	D_FULLDEBUG		5560936	1					
ANR	5560944	Argument	D_FULLDEBUG		5560936	0					
ANR	5560945	Identifier	D_FULLDEBUG		5560936	0					
ANR	5560946	Argument	"""Inside VMType::createConfigUsingScript\\n"""		5560936	1					
ANR	5560947	PrimaryExpression	"""Inside VMType::createConfigUsingScript\\n"""		5560936	0					
ANR	5560948	IfStatement	if ( ! configfile || m_scriptname . IsEmpty ( ) )		5560936	1					
ANR	5560949	Condition	! configfile || m_scriptname . IsEmpty ( )	422:5:12565:12601	5560936	0	True				
ANR	5560950	OrExpression	! configfile || m_scriptname . IsEmpty ( )		5560936	0		||			
ANR	5560951	UnaryOperationExpression	! configfile		5560936	0					
ANR	5560952	UnaryOperator	!		5560936	0					
ANR	5560953	Identifier	configfile		5560936	1					
ANR	5560954	CallExpression	m_scriptname . IsEmpty ( )		5560936	1					
ANR	5560955	Callee	m_scriptname . IsEmpty		5560936	0					
ANR	5560956	MemberAccess	m_scriptname . IsEmpty		5560936	0					
ANR	5560957	Identifier	m_scriptname		5560936	0					
ANR	5560958	Identifier	IsEmpty		5560936	1					
ANR	5560959	ArgumentList			5560936	1					
ANR	5560960	CompoundStatement		4:45:115:115	5560936	1					
ANR	5560961	ReturnStatement	return false ;	423:2:12609:12621	5560936	0	True				
ANR	5560962	Identifier	false		5560936	0					
ANR	5560963	IdentifierDeclStatement	StringList name_list ;	427:1:12678:12698	5560936	2	True				
ANR	5560964	IdentifierDecl	name_list		5560936	0					
ANR	5560965	IdentifierDeclType	StringList		5560936	0					
ANR	5560966	Identifier	name_list		5560936	1					
ANR	5560967	IdentifierDeclStatement	const char * name ;	429:1:12702:12718	5560936	3	True				
ANR	5560968	IdentifierDecl	* name		5560936	0					
ANR	5560969	IdentifierDeclType	const char *		5560936	0					
ANR	5560970	Identifier	name		5560936	1					
ANR	5560971	IdentifierDeclStatement	ExprTree * expr = NULL ;	430:1:12721:12742	5560936	4	True				
ANR	5560972	IdentifierDecl	* expr = NULL		5560936	0					
ANR	5560973	IdentifierDeclType	ExprTree *		5560936	0					
ANR	5560974	Identifier	expr		5560936	1					
ANR	5560975	AssignmentExpression	* expr = NULL		5560936	2		=			
ANR	5560976	Identifier	NULL		5560936	0					
ANR	5560977	Identifier	NULL		5560936	1					
ANR	5560978	ExpressionStatement	m_classAd . ResetExpr ( )	432:1:12746:12767	5560936	5	True				
ANR	5560979	CallExpression	m_classAd . ResetExpr ( )		5560936	0					
ANR	5560980	Callee	m_classAd . ResetExpr		5560936	0					
ANR	5560981	MemberAccess	m_classAd . ResetExpr		5560936	0					
ANR	5560982	Identifier	m_classAd		5560936	0					
ANR	5560983	Identifier	ResetExpr		5560936	1					
ANR	5560984	ArgumentList			5560936	1					
ANR	5560985	WhileStatement	"while ( m_classAd . NextExpr ( name , expr ) )"		5560936	6					
ANR	5560986	Condition	"m_classAd . NextExpr ( name , expr )"	433:8:12777:12806	5560936	0	True				
ANR	5560987	CallExpression	"m_classAd . NextExpr ( name , expr )"		5560936	0					
ANR	5560988	Callee	m_classAd . NextExpr		5560936	0					
ANR	5560989	MemberAccess	m_classAd . NextExpr		5560936	0					
ANR	5560990	Identifier	m_classAd		5560936	0					
ANR	5560991	Identifier	NextExpr		5560936	1					
ANR	5560992	ArgumentList	name		5560936	1					
ANR	5560993	Argument	name		5560936	0					
ANR	5560994	Identifier	name		5560936	0					
ANR	5560995	Argument	expr		5560936	1					
ANR	5560996	Identifier	expr		5560936	0					
ANR	5560997	CompoundStatement		15:41:320:320	5560936	1					
ANR	5560998	IfStatement	"if ( ! strncasecmp ( name , ""JobVM"" , strlen ( ""JobVM"" ) ) || ! strncasecmp ( name , ""VMPARAM"" , strlen ( ""VMPARAM"" ) ) )"		5560936	0					
ANR	5560999	Condition	"! strncasecmp ( name , ""JobVM"" , strlen ( ""JobVM"" ) ) || ! strncasecmp ( name , ""VMPARAM"" , strlen ( ""VMPARAM"" ) )"	434:6:12818:12920	5560936	0	True				
ANR	5561000	OrExpression	"! strncasecmp ( name , ""JobVM"" , strlen ( ""JobVM"" ) ) || ! strncasecmp ( name , ""VMPARAM"" , strlen ( ""VMPARAM"" ) )"		5560936	0		||			
ANR	5561001	UnaryOperationExpression	"! strncasecmp ( name , ""JobVM"" , strlen ( ""JobVM"" ) )"		5560936	0					
ANR	5561002	UnaryOperator	!		5560936	0					
ANR	5561003	CallExpression	"strncasecmp ( name , ""JobVM"" , strlen ( ""JobVM"" ) )"		5560936	1					
ANR	5561004	Callee	strncasecmp		5560936	0					
ANR	5561005	Identifier	strncasecmp		5560936	0					
ANR	5561006	ArgumentList	name		5560936	1					
ANR	5561007	Argument	name		5560936	0					
ANR	5561008	Identifier	name		5560936	0					
ANR	5561009	Argument	"""JobVM"""		5560936	1					
ANR	5561010	PrimaryExpression	"""JobVM"""		5560936	0					
ANR	5561011	Argument	"strlen ( ""JobVM"" )"		5560936	2					
ANR	5561012	CallExpression	"strlen ( ""JobVM"" )"		5560936	0					
ANR	5561013	Callee	strlen		5560936	0					
ANR	5561014	Identifier	strlen		5560936	0					
ANR	5561015	ArgumentList	"""JobVM"""		5560936	1					
ANR	5561016	Argument	"""JobVM"""		5560936	0					
ANR	5561017	PrimaryExpression	"""JobVM"""		5560936	0					
ANR	5561018	UnaryOperationExpression	"! strncasecmp ( name , ""VMPARAM"" , strlen ( ""VMPARAM"" ) )"		5560936	1					
ANR	5561019	UnaryOperator	!		5560936	0					
ANR	5561020	CallExpression	"strncasecmp ( name , ""VMPARAM"" , strlen ( ""VMPARAM"" ) )"		5560936	1					
ANR	5561021	Callee	strncasecmp		5560936	0					
ANR	5561022	Identifier	strncasecmp		5560936	0					
ANR	5561023	ArgumentList	name		5560936	1					
ANR	5561024	Argument	name		5560936	0					
ANR	5561025	Identifier	name		5560936	0					
ANR	5561026	Argument	"""VMPARAM"""		5560936	1					
ANR	5561027	PrimaryExpression	"""VMPARAM"""		5560936	0					
ANR	5561028	Argument	"strlen ( ""VMPARAM"" )"		5560936	2					
ANR	5561029	CallExpression	"strlen ( ""VMPARAM"" )"		5560936	0					
ANR	5561030	Callee	strlen		5560936	0					
ANR	5561031	Identifier	strlen		5560936	0					
ANR	5561032	ArgumentList	"""VMPARAM"""		5560936	1					
ANR	5561033	Argument	"""VMPARAM"""		5560936	0					
ANR	5561034	PrimaryExpression	"""VMPARAM"""		5560936	0					
ANR	5561035	CompoundStatement		17:55:433:433	5560936	1					
ANR	5561036	ExpressionStatement	name_list . append ( name )	437:3:12929:12951	5560936	0	True				
ANR	5561037	CallExpression	name_list . append ( name )		5560936	0					
ANR	5561038	Callee	name_list . append		5560936	0					
ANR	5561039	MemberAccess	name_list . append		5560936	0					
ANR	5561040	Identifier	name_list		5560936	0					
ANR	5561041	Identifier	append		5560936	1					
ANR	5561042	ArgumentList	name		5560936	1					
ANR	5561043	Argument	name		5560936	0					
ANR	5561044	Identifier	name		5560936	0					
ANR	5561045	ExpressionStatement	"SetEnv ( name , ExprTreeToString ( expr ) )"	438:3:12956:12992	5560936	1	True				
ANR	5561046	CallExpression	"SetEnv ( name , ExprTreeToString ( expr ) )"		5560936	0					
ANR	5561047	Callee	SetEnv		5560936	0					
ANR	5561048	Identifier	SetEnv		5560936	0					
ANR	5561049	ArgumentList	name		5560936	1					
ANR	5561050	Argument	name		5560936	0					
ANR	5561051	Identifier	name		5560936	0					
ANR	5561052	Argument	ExprTreeToString ( expr )		5560936	1					
ANR	5561053	CallExpression	ExprTreeToString ( expr )		5560936	0					
ANR	5561054	Callee	ExprTreeToString		5560936	0					
ANR	5561055	Identifier	ExprTreeToString		5560936	0					
ANR	5561056	ArgumentList	expr		5560936	1					
ANR	5561057	Argument	expr		5560936	0					
ANR	5561058	Identifier	expr		5560936	0					
ANR	5561059	IdentifierDeclStatement	ArgList systemcmd ;	442:1:13003:13020	5560936	7	True				
ANR	5561060	IdentifierDecl	systemcmd		5560936	0					
ANR	5561061	IdentifierDeclType	ArgList		5560936	0					
ANR	5561062	Identifier	systemcmd		5560936	1					
ANR	5561063	IfStatement	if ( m_prog_for_script . IsEmpty ( ) == false )		5560936	8					
ANR	5561064	Condition	m_prog_for_script . IsEmpty ( ) == false	443:5:13027:13062	5560936	0	True				
ANR	5561065	EqualityExpression	m_prog_for_script . IsEmpty ( ) == false		5560936	0		==			
ANR	5561066	CallExpression	m_prog_for_script . IsEmpty ( )		5560936	0					
ANR	5561067	Callee	m_prog_for_script . IsEmpty		5560936	0					
ANR	5561068	MemberAccess	m_prog_for_script . IsEmpty		5560936	0					
ANR	5561069	Identifier	m_prog_for_script		5560936	0					
ANR	5561070	Identifier	IsEmpty		5560936	1					
ANR	5561071	ArgumentList			5560936	1					
ANR	5561072	Identifier	false		5560936	1					
ANR	5561073	CompoundStatement		25:44:576:576	5560936	1					
ANR	5561074	ExpressionStatement	systemcmd . AppendArg ( m_prog_for_script )	444:2:13070:13108	5560936	0	True				
ANR	5561075	CallExpression	systemcmd . AppendArg ( m_prog_for_script )		5560936	0					
ANR	5561076	Callee	systemcmd . AppendArg		5560936	0					
ANR	5561077	MemberAccess	systemcmd . AppendArg		5560936	0					
ANR	5561078	Identifier	systemcmd		5560936	0					
ANR	5561079	Identifier	AppendArg		5560936	1					
ANR	5561080	ArgumentList	m_prog_for_script		5560936	1					
ANR	5561081	Argument	m_prog_for_script		5560936	0					
ANR	5561082	Identifier	m_prog_for_script		5560936	0					
ANR	5561083	ExpressionStatement	systemcmd . AppendArg ( m_scriptname )	446:1:13114:13147	5560936	9	True				
ANR	5561084	CallExpression	systemcmd . AppendArg ( m_scriptname )		5560936	0					
ANR	5561085	Callee	systemcmd . AppendArg		5560936	0					
ANR	5561086	MemberAccess	systemcmd . AppendArg		5560936	0					
ANR	5561087	Identifier	systemcmd		5560936	0					
ANR	5561088	Identifier	AppendArg		5560936	1					
ANR	5561089	ArgumentList	m_scriptname		5560936	1					
ANR	5561090	Argument	m_scriptname		5560936	0					
ANR	5561091	Identifier	m_scriptname		5560936	0					
ANR	5561092	ExpressionStatement	"systemcmd . AppendArg ( ""createconfig"" )"	447:1:13150:13185	5560936	10	True				
ANR	5561093	CallExpression	"systemcmd . AppendArg ( ""createconfig"" )"		5560936	0					
ANR	5561094	Callee	systemcmd . AppendArg		5560936	0					
ANR	5561095	MemberAccess	systemcmd . AppendArg		5560936	0					
ANR	5561096	Identifier	systemcmd		5560936	0					
ANR	5561097	Identifier	AppendArg		5560936	1					
ANR	5561098	ArgumentList	"""createconfig"""		5560936	1					
ANR	5561099	Argument	"""createconfig"""		5560936	0					
ANR	5561100	PrimaryExpression	"""createconfig"""		5560936	0					
ANR	5561101	ExpressionStatement	systemcmd . AppendArg ( configfile )	448:1:13188:13219	5560936	11	True				
ANR	5561102	CallExpression	systemcmd . AppendArg ( configfile )		5560936	0					
ANR	5561103	Callee	systemcmd . AppendArg		5560936	0					
ANR	5561104	MemberAccess	systemcmd . AppendArg		5560936	0					
ANR	5561105	Identifier	systemcmd		5560936	0					
ANR	5561106	Identifier	AppendArg		5560936	1					
ANR	5561107	ArgumentList	configfile		5560936	1					
ANR	5561108	Argument	configfile		5560936	0					
ANR	5561109	Identifier	configfile		5560936	0					
ANR	5561110	IdentifierDeclStatement	"int result = systemCommand ( systemcmd , m_file_owner ) ;"	450:1:13223:13274	5560936	12	True				
ANR	5561111	IdentifierDecl	"result = systemCommand ( systemcmd , m_file_owner )"		5560936	0					
ANR	5561112	IdentifierDeclType	int		5560936	0					
ANR	5561113	Identifier	result		5560936	1					
ANR	5561114	AssignmentExpression	"result = systemCommand ( systemcmd , m_file_owner )"		5560936	2		=			
ANR	5561115	Identifier	result		5560936	0					
ANR	5561116	CallExpression	"systemCommand ( systemcmd , m_file_owner )"		5560936	1					
ANR	5561117	Callee	systemCommand		5560936	0					
ANR	5561118	Identifier	systemCommand		5560936	0					
ANR	5561119	ArgumentList	systemcmd		5560936	1					
ANR	5561120	Argument	systemcmd		5560936	0					
ANR	5561121	Identifier	systemcmd		5560936	0					
ANR	5561122	Argument	m_file_owner		5560936	1					
ANR	5561123	Identifier	m_file_owner		5560936	0					
ANR	5561124	IdentifierDeclStatement	const char * tmp_name = NULL ;	453:1:13330:13357	5560936	13	True				
ANR	5561125	IdentifierDecl	* tmp_name = NULL		5560936	0					
ANR	5561126	IdentifierDeclType	const char *		5560936	0					
ANR	5561127	Identifier	tmp_name		5560936	1					
ANR	5561128	AssignmentExpression	* tmp_name = NULL		5560936	2		=			
ANR	5561129	Identifier	NULL		5560936	0					
ANR	5561130	Identifier	NULL		5560936	1					
ANR	5561131	ExpressionStatement	name_list . rewind ( )	454:1:13360:13378	5560936	14	True				
ANR	5561132	CallExpression	name_list . rewind ( )		5560936	0					
ANR	5561133	Callee	name_list . rewind		5560936	0					
ANR	5561134	MemberAccess	name_list . rewind		5560936	0					
ANR	5561135	Identifier	name_list		5560936	0					
ANR	5561136	Identifier	rewind		5560936	1					
ANR	5561137	ArgumentList			5560936	1					
ANR	5561138	WhileStatement	while ( ( tmp_name = name_list . next ( ) ) != NULL )		5560936	15					
ANR	5561139	Condition	( tmp_name = name_list . next ( ) ) != NULL	455:8:13388:13424	5560936	0	True				
ANR	5561140	EqualityExpression	( tmp_name = name_list . next ( ) ) != NULL		5560936	0		!=			
ANR	5561141	AssignmentExpression	tmp_name = name_list . next ( )		5560936	0		=			
ANR	5561142	Identifier	tmp_name		5560936	0					
ANR	5561143	CallExpression	name_list . next ( )		5560936	1					
ANR	5561144	Callee	name_list . next		5560936	0					
ANR	5561145	MemberAccess	name_list . next		5560936	0					
ANR	5561146	Identifier	name_list		5560936	0					
ANR	5561147	Identifier	next		5560936	1					
ANR	5561148	ArgumentList			5560936	1					
ANR	5561149	Identifier	NULL		5560936	1					
ANR	5561150	CompoundStatement		37:48:938:938	5560936	1					
ANR	5561151	ExpressionStatement	UnsetEnv ( tmp_name )	456:2:13432:13450	5560936	0	True				
ANR	5561152	CallExpression	UnsetEnv ( tmp_name )		5560936	0					
ANR	5561153	Callee	UnsetEnv		5560936	0					
ANR	5561154	Identifier	UnsetEnv		5560936	0					
ANR	5561155	ArgumentList	tmp_name		5560936	1					
ANR	5561156	Argument	tmp_name		5560936	0					
ANR	5561157	Identifier	tmp_name		5560936	0					
ANR	5561158	IfStatement	if ( result != 0 )		5560936	16					
ANR	5561159	Condition	result != 0	459:5:13461:13471	5560936	0	True				
ANR	5561160	EqualityExpression	result != 0		5560936	0		!=			
ANR	5561161	Identifier	result		5560936	0					
ANR	5561162	PrimaryExpression	0		5560936	1					
ANR	5561163	CompoundStatement		41:19:985:985	5560936	1					
ANR	5561164	Statement	vmprintf	460:2:13479:13486	5560936	0	True				
ANR	5561165	Statement	(	460:10:13487:13487	5560936	1	True				
ANR	5561166	Statement	D_ALWAYS	460:11:13488:13495	5560936	2	True				
ANR	5561167	Statement	","	460:19:13496:13496	5560936	3	True				
ANR	5561168	Statement	"""Failed to create Configuration file('%s') using """	460:21:13498:13547	5560936	4	True				
ANR	5561169	Statement	"""script program('%s')\\n"""	461:4:13553:13576	5560936	5	True				
ANR	5561170	Statement	","	461:28:13577:13577	5560936	6	True				
ANR	5561171	Statement	configfile	461:30:13579:13588	5560936	7	True				
ANR	5561172	Statement	","	461:40:13589:13589	5560936	8	True				
ANR	5561173	Statement	m_scriptname	462:4:13596:13607	5560936	9	True				
ANR	5561174	Statement	.	462:16:13608:13608	5560936	10	True				
ANR	5561175	Statement	Value	462:17:13609:13613	5560936	11	True				
ANR	5561176	Statement	(	462:22:13614:13614	5560936	12	True				
ANR	5561177	Statement	)	462:23:13615:13615	5560936	13	True				
ANR	5561178	Statement	)	462:24:13616:13616	5560936	14	True				
ANR	5561179	ExpressionStatement		462:25:13617:13617	5560936	15	True				
ANR	5561180	ReturnStatement	return false ;	463:2:13621:13633	5560936	16	True				
ANR	5561181	Identifier	false		5560936	0					
ANR	5561182	ReturnStatement	return true ;	465:1:13639:13650	5560936	17	True				
ANR	5561183	Identifier	true		5560936	0					
ANR	5561184	ReturnType	bool		5560936	1					
ANR	5561185	Identifier	VMType :: createConfigUsingScript		5560936	2					
ANR	5561186	ParameterList	const char * configfile		5560936	3					
ANR	5561187	Parameter	const char * configfile	418:32:12465:12486	5560936	0	True				
ANR	5561188	ParameterType	const char *		5560936	0					
ANR	5561189	Identifier	configfile		5560936	1					
ANR	5561190	CFGEntryNode	ENTRY		5560936		True				
ANR	5561191	CFGExitNode	EXIT		5560936		True				
ANR	5561192	Symbol	NULL		5560936						
ANR	5561193	Symbol	configfile		5560936						
ANR	5561194	Symbol	systemcmd		5560936						
ANR	5561195	Symbol	m_scriptname . IsEmpty		5560936						
ANR	5561196	Symbol	false		5560936						
ANR	5561197	Symbol	strncasecmp		5560936						
ANR	5561198	Symbol	ExprTreeToString		5560936						
ANR	5561199	Symbol	name_list . next		5560936						
ANR	5561200	Symbol	systemCommand		5560936						
ANR	5561201	Symbol	D_FULLDEBUG		5560936						
ANR	5561202	Symbol	m_prog_for_script . IsEmpty		5560936						
ANR	5561203	Symbol	tmp_name		5560936						
ANR	5561204	Symbol	result		5560936						
ANR	5561205	Symbol	strlen		5560936						
ANR	5561206	Symbol	name_list		5560936						
ANR	5561207	Symbol	m_scriptname		5560936						
ANR	5561208	Symbol	name		5560936						
ANR	5561209	Symbol	m_file_owner		5560936						
ANR	5561210	Symbol	true		5560936						
ANR	5561211	Symbol	m_classAd . NextExpr		5560936						
ANR	5561212	Symbol	expr		5560936						
ANR	5561213	Symbol	m_classAd		5560936						
ANR	5561214	Symbol	m_prog_for_script		5560936						
