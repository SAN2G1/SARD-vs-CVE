command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	670989	File	data/converged/CVE-2011-4930_htcondor/baseshadow.cpp								
ANR	670990	DeclStmt									
ANR	670991	Decl							WriteUserLog	WriteUserLog	BaseShadow :: uLog
ANR	670992	DeclStmt									
ANR	670993	Decl							BaseShadow	BaseShadow *	BaseShadow :: myshadow_ptr
ANR	670994	DeclStmt									
ANR	670995	Decl							int	"int ( char * * buf , int * bufpos , int * buflen )"	display_dprintf_header
ANR	670996	DeclStmt									
ANR	670997	Decl							extern bool	extern bool	sendUpdatesToSchedd
ANR	670998	DeclStmt									
ANR	670999	Decl							int	"int ( ClassAd * jad , int & exit_code )"	getJobAdExitCode
ANR	671000	DeclStmt									
ANR	671001	Decl							int	"int ( ClassAd * jad , int & exited_by_signal )"	getJobAdExitedBySignal
ANR	671002	DeclStmt									
ANR	671003	Decl							int	"int ( ClassAd * jad , int & exit_signal )"	getJobAdExitSignal
ANR	671004	Function	BaseShadow :: BaseShadow	53:0:1867:2510							
ANR	671005	FunctionDef	BaseShadow :: BaseShadow ()		671004	0					
ANR	671006	CompoundStatement		53:25:1892:2510	671004	0					
ANR	671007	ExpressionStatement	spool = NULL	54:1:1895:1907	671004	0	True				
ANR	671008	AssignmentExpression	spool = NULL		671004	0		=			
ANR	671009	Identifier	spool		671004	0					
ANR	671010	Identifier	NULL		671004	1					
ANR	671011	ExpressionStatement	fsDomain = uidDomain = NULL	55:1:1910:1937	671004	1	True				
ANR	671012	AssignmentExpression	fsDomain = uidDomain = NULL		671004	0		=			
ANR	671013	Identifier	fsDomain		671004	0					
ANR	671014	AssignmentExpression	uidDomain = NULL		671004	1		=			
ANR	671015	Identifier	uidDomain		671004	0					
ANR	671016	Identifier	NULL		671004	1					
ANR	671017	ExpressionStatement	jobAd = NULL	56:1:1940:1952	671004	2	True				
ANR	671018	AssignmentExpression	jobAd = NULL		671004	0		=			
ANR	671019	Identifier	jobAd		671004	0					
ANR	671020	Identifier	NULL		671004	1					
ANR	671021	ExpressionStatement	remove_requested = false	57:1:1955:1979	671004	3	True				
ANR	671022	AssignmentExpression	remove_requested = false		671004	0		=			
ANR	671023	Identifier	remove_requested		671004	0					
ANR	671024	Identifier	false		671004	1					
ANR	671025	ExpressionStatement	cluster = proc = - 1	58:1:1982:2001	671004	4	True				
ANR	671026	AssignmentExpression	cluster = proc = - 1		671004	0		=			
ANR	671027	Identifier	cluster		671004	0					
ANR	671028	AssignmentExpression	proc = - 1		671004	1		=			
ANR	671029	Identifier	proc		671004	0					
ANR	671030	UnaryOperationExpression	- 1		671004	1					
ANR	671031	UnaryOperator	-		671004	0					
ANR	671032	PrimaryExpression	1		671004	1					
ANR	671033	ExpressionStatement	gjid = NULL	59:1:2004:2015	671004	5	True				
ANR	671034	AssignmentExpression	gjid = NULL		671004	0		=			
ANR	671035	Identifier	gjid		671004	0					
ANR	671036	Identifier	NULL		671004	1					
ANR	671037	ExpressionStatement	core_file_name = NULL	60:1:2018:2039	671004	6	True				
ANR	671038	AssignmentExpression	core_file_name = NULL		671004	0		=			
ANR	671039	Identifier	core_file_name		671004	0					
ANR	671040	Identifier	NULL		671004	1					
ANR	671041	ExpressionStatement	scheddAddr = NULL	61:1:2042:2059	671004	7	True				
ANR	671042	AssignmentExpression	scheddAddr = NULL		671004	0		=			
ANR	671043	Identifier	scheddAddr		671004	0					
ANR	671044	Identifier	NULL		671004	1					
ANR	671045	ExpressionStatement	job_updater = NULL	62:1:2062:2080	671004	8	True				
ANR	671046	AssignmentExpression	job_updater = NULL		671004	0		=			
ANR	671047	Identifier	job_updater		671004	0					
ANR	671048	Identifier	NULL		671004	1					
ANR	671049	ExpressionStatement	ASSERT ( ! myshadow_ptr )	63:1:2083:2106	671004	9	True				
ANR	671050	CallExpression	ASSERT ( ! myshadow_ptr )		671004	0					
ANR	671051	Callee	ASSERT		671004	0					
ANR	671052	Identifier	ASSERT		671004	0					
ANR	671053	ArgumentList	! myshadow_ptr		671004	1					
ANR	671054	Argument	! myshadow_ptr		671004	0					
ANR	671055	UnaryOperationExpression	! myshadow_ptr		671004	0					
ANR	671056	UnaryOperator	!		671004	0					
ANR	671057	Identifier	myshadow_ptr		671004	1					
ANR	671058	ExpressionStatement	myshadow_ptr = this	64:1:2153:2172	671004	10	True				
ANR	671059	AssignmentExpression	myshadow_ptr = this		671004	0		=			
ANR	671060	Identifier	myshadow_ptr		671004	0					
ANR	671061	Identifier	this		671004	1					
ANR	671062	ExpressionStatement	exception_already_logged = false	65:1:2175:2207	671004	11	True				
ANR	671063	AssignmentExpression	exception_already_logged = false		671004	0		=			
ANR	671064	Identifier	exception_already_logged		671004	0					
ANR	671065	Identifier	false		671004	1					
ANR	671066	ExpressionStatement	began_execution = FALSE	66:1:2210:2233	671004	12	True				
ANR	671067	AssignmentExpression	began_execution = FALSE		671004	0		=			
ANR	671068	Identifier	began_execution		671004	0					
ANR	671069	Identifier	FALSE		671004	1					
ANR	671070	ExpressionStatement	reconnect_e_factor = 0.0	67:1:2236:2260	671004	13	True				
ANR	671071	AssignmentExpression	reconnect_e_factor = 0.0		671004	0		=			
ANR	671072	Identifier	reconnect_e_factor		671004	0					
ANR	671073	PrimaryExpression	0.0		671004	1					
ANR	671074	ExpressionStatement	reconnect_ceiling = 300	68:1:2263:2286	671004	14	True				
ANR	671075	AssignmentExpression	reconnect_ceiling = 300		671004	0		=			
ANR	671076	Identifier	reconnect_ceiling		671004	0					
ANR	671077	PrimaryExpression	300		671004	1					
ANR	671078	ExpressionStatement	prev_run_bytes_sent = 0.0	69:1:2289:2314	671004	15	True				
ANR	671079	AssignmentExpression	prev_run_bytes_sent = 0.0		671004	0		=			
ANR	671080	Identifier	prev_run_bytes_sent		671004	0					
ANR	671081	PrimaryExpression	0.0		671004	1					
ANR	671082	ExpressionStatement	prev_run_bytes_recvd = 0.0	70:1:2317:2343	671004	16	True				
ANR	671083	AssignmentExpression	prev_run_bytes_recvd = 0.0		671004	0		=			
ANR	671084	Identifier	prev_run_bytes_recvd		671004	0					
ANR	671085	PrimaryExpression	0.0		671004	1					
ANR	671086	ExpressionStatement	m_num_cleanup_retries = 0	71:1:2346:2371	671004	17	True				
ANR	671087	AssignmentExpression	m_num_cleanup_retries = 0		671004	0		=			
ANR	671088	Identifier	m_num_cleanup_retries		671004	0					
ANR	671089	PrimaryExpression	0		671004	1					
ANR	671090	ExpressionStatement	m_max_cleanup_retries = 5	72:1:2374:2399	671004	18	True				
ANR	671091	AssignmentExpression	m_max_cleanup_retries = 5		671004	0		=			
ANR	671092	Identifier	m_max_cleanup_retries		671004	0					
ANR	671093	PrimaryExpression	5		671004	1					
ANR	671094	ExpressionStatement	m_lazy_queue_update = true	73:1:2402:2428	671004	19	True				
ANR	671095	AssignmentExpression	m_lazy_queue_update = true		671004	0		=			
ANR	671096	Identifier	m_lazy_queue_update		671004	0					
ANR	671097	Identifier	true		671004	1					
ANR	671098	ExpressionStatement	m_cleanup_retry_tid = - 1	74:1:2431:2455	671004	20	True				
ANR	671099	AssignmentExpression	m_cleanup_retry_tid = - 1		671004	0		=			
ANR	671100	Identifier	m_cleanup_retry_tid		671004	0					
ANR	671101	UnaryOperationExpression	- 1		671004	1					
ANR	671102	UnaryOperator	-		671004	0					
ANR	671103	PrimaryExpression	1		671004	1					
ANR	671104	ExpressionStatement	m_cleanup_retry_delay = 30	75:1:2458:2484	671004	21	True				
ANR	671105	AssignmentExpression	m_cleanup_retry_delay = 30		671004	0		=			
ANR	671106	Identifier	m_cleanup_retry_delay		671004	0					
ANR	671107	PrimaryExpression	30		671004	1					
ANR	671108	ExpressionStatement	m_RunAsNobody = false	76:1:2487:2508	671004	22	True				
ANR	671109	AssignmentExpression	m_RunAsNobody = false		671004	0		=			
ANR	671110	Identifier	m_RunAsNobody		671004	0					
ANR	671111	Identifier	false		671004	1					
ANR	671112	Identifier	BaseShadow :: BaseShadow		671004	1					
ANR	671113	ParameterList			671004	2					
ANR	671114	CFGEntryNode	ENTRY		671004		True				
ANR	671115	CFGExitNode	EXIT		671004		True				
ANR	671116	Symbol	cluster		671004						
ANR	671117	Symbol	m_max_cleanup_retries		671004						
ANR	671118	Symbol	m_RunAsNobody		671004						
ANR	671119	Symbol	spool		671004						
ANR	671120	Symbol	exception_already_logged		671004						
ANR	671121	Symbol	m_lazy_queue_update		671004						
ANR	671122	Symbol	jobAd		671004						
ANR	671123	Symbol	fsDomain		671004						
ANR	671124	Symbol	remove_requested		671004						
ANR	671125	Symbol	gjid		671004						
ANR	671126	Symbol	began_execution		671004						
ANR	671127	Symbol	myshadow_ptr		671004						
ANR	671128	Symbol	job_updater		671004						
ANR	671129	Symbol	scheddAddr		671004						
ANR	671130	Symbol	m_cleanup_retry_tid		671004						
ANR	671131	Symbol	uidDomain		671004						
ANR	671132	Symbol	m_num_cleanup_retries		671004						
ANR	671133	Symbol	proc		671004						
ANR	671134	Symbol	NULL		671004						
ANR	671135	Symbol	prev_run_bytes_sent		671004						
ANR	671136	Symbol	prev_run_bytes_recvd		671004						
ANR	671137	Symbol	false		671004						
ANR	671138	Symbol	this		671004						
ANR	671139	Symbol	reconnect_ceiling		671004						
ANR	671140	Symbol	true		671004						
ANR	671141	Symbol	core_file_name		671004						
ANR	671142	Symbol	FALSE		671004						
ANR	671143	Symbol	m_cleanup_retry_delay		671004						
ANR	671144	Symbol	reconnect_e_factor		671004						
ANR	671145	Function	BaseShadow :: ~BaseShadow	79:0:2513:2725							
ANR	671146	FunctionDef	BaseShadow :: ~BaseShadow ()		671145	0					
ANR	671147	CompoundStatement		79:26:2539:2725	671145	0					
ANR	671148	IfStatement	if ( spool )		671145	0					
ANR	671149	Condition	spool	80:5:2546:2550	671145	0	True				
ANR	671150	Identifier	spool		671145	0					
ANR	671151	ExpressionStatement	free ( spool )	80:12:2553:2564	671145	1	True				
ANR	671152	CallExpression	free ( spool )		671145	0					
ANR	671153	Callee	free		671145	0					
ANR	671154	Identifier	free		671145	0					
ANR	671155	ArgumentList	spool		671145	1					
ANR	671156	Argument	spool		671145	0					
ANR	671157	Identifier	spool		671145	0					
ANR	671158	IfStatement	if ( fsDomain )		671145	1					
ANR	671159	Condition	fsDomain	81:5:2571:2578	671145	0	True				
ANR	671160	Identifier	fsDomain		671145	0					
ANR	671161	ExpressionStatement	free ( fsDomain )	81:15:2581:2595	671145	1	True				
ANR	671162	CallExpression	free ( fsDomain )		671145	0					
ANR	671163	Callee	free		671145	0					
ANR	671164	Identifier	free		671145	0					
ANR	671165	ArgumentList	fsDomain		671145	1					
ANR	671166	Argument	fsDomain		671145	0					
ANR	671167	Identifier	fsDomain		671145	0					
ANR	671168	IfStatement	if ( jobAd )		671145	2					
ANR	671169	Condition	jobAd	82:5:2602:2606	671145	0	True				
ANR	671170	Identifier	jobAd		671145	0					
ANR	671171	ExpressionStatement	FreeJobAd ( jobAd )	82:12:2609:2625	671145	1	True				
ANR	671172	CallExpression	FreeJobAd ( jobAd )		671145	0					
ANR	671173	Callee	FreeJobAd		671145	0					
ANR	671174	Identifier	FreeJobAd		671145	0					
ANR	671175	ArgumentList	jobAd		671145	1					
ANR	671176	Argument	jobAd		671145	0					
ANR	671177	Identifier	jobAd		671145	0					
ANR	671178	IfStatement	if ( gjid )		671145	3					
ANR	671179	Condition	gjid	83:5:2632:2635	671145	0	True				
ANR	671180	Identifier	gjid		671145	0					
ANR	671181	ExpressionStatement	free ( gjid )	83:11:2638:2648	671145	1	True				
ANR	671182	CallExpression	free ( gjid )		671145	0					
ANR	671183	Callee	free		671145	0					
ANR	671184	Identifier	free		671145	0					
ANR	671185	ArgumentList	gjid		671145	1					
ANR	671186	Argument	gjid		671145	0					
ANR	671187	Identifier	gjid		671145	0					
ANR	671188	IfStatement	if ( scheddAddr )		671145	4					
ANR	671189	Condition	scheddAddr	84:5:2656:2665	671145	0	True				
ANR	671190	Identifier	scheddAddr		671145	0					
ANR	671191	ExpressionStatement	free ( scheddAddr )	84:17:2668:2684	671145	1	True				
ANR	671192	CallExpression	free ( scheddAddr )		671145	0					
ANR	671193	Callee	free		671145	0					
ANR	671194	Identifier	free		671145	0					
ANR	671195	ArgumentList	scheddAddr		671145	1					
ANR	671196	Argument	scheddAddr		671145	0					
ANR	671197	Identifier	scheddAddr		671145	0					
ANR	671198	IfStatement	if ( job_updater )		671145	5					
ANR	671199	Condition	job_updater	85:5:2691:2701	671145	0	True				
ANR	671200	Identifier	job_updater		671145	0					
ANR	671201	Statement	delete	85:19:2705:2710	671145	1	True				
ANR	671202	ExpressionStatement	job_updater	85:26:2712:2723	671145	6	True				
ANR	671203	Identifier	job_updater		671145	0					
ANR	671204	Identifier	BaseShadow :: ~BaseShadow		671145	1					
ANR	671205	ParameterList			671145	2					
ANR	671206	CFGEntryNode	ENTRY		671145		True				
ANR	671207	CFGExitNode	EXIT		671145		True				
ANR	671208	Symbol	job_updater		671145						
ANR	671209	Symbol	spool		671145						
ANR	671210	Symbol	scheddAddr		671145						
ANR	671211	Symbol	jobAd		671145						
ANR	671212	Symbol	fsDomain		671145						
ANR	671213	Symbol	gjid		671145						
ANR	671214	Function	BaseShadow :: baseInit	88:0:2728:8326							
ANR	671215	FunctionDef	"BaseShadow :: baseInit (ClassAd * job_ad , const char * schedd_addr , const char * xfer_queue_contact_info)"		671214	0					
ANR	671216	CompoundStatement		90:0:2835:8326	671214	0					
ANR	671217	IdentifierDeclStatement	int pending = FALSE ;	91:1:2838:2857	671214	0	True				
ANR	671218	IdentifierDecl	pending = FALSE		671214	0					
ANR	671219	IdentifierDeclType	int		671214	0					
ANR	671220	Identifier	pending		671214	1					
ANR	671221	AssignmentExpression	pending = FALSE		671214	2		=			
ANR	671222	Identifier	FALSE		671214	0					
ANR	671223	Identifier	FALSE		671214	1					
ANR	671224	IfStatement	if ( ! job_ad )		671214	1					
ANR	671225	Condition	! job_ad	93:5:2865:2872	671214	0	True				
ANR	671226	UnaryOperationExpression	! job_ad		671214	0					
ANR	671227	UnaryOperator	!		671214	0					
ANR	671228	Identifier	job_ad		671214	1					
ANR	671229	CompoundStatement		4:16:40:40	671214	1					
ANR	671230	ExpressionStatement	"EXCEPT ( ""baseInit() called with NULL job_ad!"" )"	94:2:2880:2925	671214	0	True				
ANR	671231	CallExpression	"EXCEPT ( ""baseInit() called with NULL job_ad!"" )"		671214	0					
ANR	671232	Callee	EXCEPT		671214	0					
ANR	671233	Identifier	EXCEPT		671214	0					
ANR	671234	ArgumentList	"""baseInit() called with NULL job_ad!"""		671214	1					
ANR	671235	Argument	"""baseInit() called with NULL job_ad!"""		671214	0					
ANR	671236	PrimaryExpression	"""baseInit() called with NULL job_ad!"""		671214	0					
ANR	671237	ExpressionStatement	jobAd = job_ad	96:1:2931:2945	671214	2	True				
ANR	671238	AssignmentExpression	jobAd = job_ad		671214	0		=			
ANR	671239	Identifier	jobAd		671214	0					
ANR	671240	Identifier	job_ad		671214	1					
ANR	671241	IfStatement	if ( sendUpdatesToSchedd && ! is_valid_sinful ( schedd_addr ) )		671214	3					
ANR	671242	Condition	sendUpdatesToSchedd && ! is_valid_sinful ( schedd_addr )	98:5:2953:3005	671214	0	True				
ANR	671243	AndExpression	sendUpdatesToSchedd && ! is_valid_sinful ( schedd_addr )		671214	0		&&			
ANR	671244	Identifier	sendUpdatesToSchedd		671214	0					
ANR	671245	UnaryOperationExpression	! is_valid_sinful ( schedd_addr )		671214	1					
ANR	671246	UnaryOperator	!		671214	0					
ANR	671247	CallExpression	is_valid_sinful ( schedd_addr )		671214	1					
ANR	671248	Callee	is_valid_sinful		671214	0					
ANR	671249	Identifier	is_valid_sinful		671214	0					
ANR	671250	ArgumentList	schedd_addr		671214	1					
ANR	671251	Argument	schedd_addr		671214	0					
ANR	671252	Identifier	schedd_addr		671214	0					
ANR	671253	CompoundStatement		9:60:172:172	671214	1					
ANR	671254	ExpressionStatement	"EXCEPT ( ""schedd_addr not specified with valid address"" )"	99:2:3012:3066	671214	0	True				
ANR	671255	CallExpression	"EXCEPT ( ""schedd_addr not specified with valid address"" )"		671214	0					
ANR	671256	Callee	EXCEPT		671214	0					
ANR	671257	Identifier	EXCEPT		671214	0					
ANR	671258	ArgumentList	"""schedd_addr not specified with valid address"""		671214	1					
ANR	671259	Argument	"""schedd_addr not specified with valid address"""		671214	0					
ANR	671260	PrimaryExpression	"""schedd_addr not specified with valid address"""		671214	0					
ANR	671261	ExpressionStatement	"scheddAddr = sendUpdatesToSchedd ? strdup ( schedd_addr ) : strdup ( ""noschedd"" )"	101:1:3072:3149	671214	4	True				
ANR	671262	AssignmentExpression	"scheddAddr = sendUpdatesToSchedd ? strdup ( schedd_addr ) : strdup ( ""noschedd"" )"		671214	0		=			
ANR	671263	Identifier	scheddAddr		671214	0					
ANR	671264	ConditionalExpression	"sendUpdatesToSchedd ? strdup ( schedd_addr ) : strdup ( ""noschedd"" )"		671214	1					
ANR	671265	Condition	sendUpdatesToSchedd		671214	0					
ANR	671266	Identifier	sendUpdatesToSchedd		671214	0					
ANR	671267	CallExpression	strdup ( schedd_addr )		671214	1					
ANR	671268	Callee	strdup		671214	0					
ANR	671269	Identifier	strdup		671214	0					
ANR	671270	ArgumentList	schedd_addr		671214	1					
ANR	671271	Argument	schedd_addr		671214	0					
ANR	671272	Identifier	schedd_addr		671214	0					
ANR	671273	CallExpression	"strdup ( ""noschedd"" )"		671214	2					
ANR	671274	Callee	strdup		671214	0					
ANR	671275	Identifier	strdup		671214	0					
ANR	671276	ArgumentList	"""noschedd"""		671214	1					
ANR	671277	Argument	"""noschedd"""		671214	0					
ANR	671278	PrimaryExpression	"""noschedd"""		671214	0					
ANR	671279	ExpressionStatement	m_xfer_queue_contact_info = xfer_queue_contact_info	103:1:3153:3204	671214	5	True				
ANR	671280	AssignmentExpression	m_xfer_queue_contact_info = xfer_queue_contact_info		671214	0		=			
ANR	671281	Identifier	m_xfer_queue_contact_info		671214	0					
ANR	671282	Identifier	xfer_queue_contact_info		671214	1					
ANR	671283	IfStatement	"if ( ! jobAd -> LookupString ( ATTR_OWNER , owner ) )"		671214	6					
ANR	671284	Condition	"! jobAd -> LookupString ( ATTR_OWNER , owner )"	105:6:3213:3251	671214	0	True				
ANR	671285	UnaryOperationExpression	"! jobAd -> LookupString ( ATTR_OWNER , owner )"		671214	0					
ANR	671286	UnaryOperator	!		671214	0					
ANR	671287	CallExpression	"jobAd -> LookupString ( ATTR_OWNER , owner )"		671214	1					
ANR	671288	Callee	jobAd -> LookupString		671214	0					
ANR	671289	PtrMemberAccess	jobAd -> LookupString		671214	0					
ANR	671290	Identifier	jobAd		671214	0					
ANR	671291	Identifier	LookupString		671214	1					
ANR	671292	ArgumentList	ATTR_OWNER		671214	1					
ANR	671293	Argument	ATTR_OWNER		671214	0					
ANR	671294	Identifier	ATTR_OWNER		671214	0					
ANR	671295	Argument	owner		671214	1					
ANR	671296	Identifier	owner		671214	0					
ANR	671297	CompoundStatement		16:47:418:418	671214	1					
ANR	671298	ExpressionStatement	"EXCEPT ( ""Job ad doesn't contain an %s attribute."" , ATTR_OWNER )"	106:2:3258:3319	671214	0	True				
ANR	671299	CallExpression	"EXCEPT ( ""Job ad doesn't contain an %s attribute."" , ATTR_OWNER )"		671214	0					
ANR	671300	Callee	EXCEPT		671214	0					
ANR	671301	Identifier	EXCEPT		671214	0					
ANR	671302	ArgumentList	"""Job ad doesn't contain an %s attribute."""		671214	1					
ANR	671303	Argument	"""Job ad doesn't contain an %s attribute."""		671214	0					
ANR	671304	PrimaryExpression	"""Job ad doesn't contain an %s attribute."""		671214	0					
ANR	671305	Argument	ATTR_OWNER		671214	1					
ANR	671306	Identifier	ATTR_OWNER		671214	0					
ANR	671307	IfStatement	"if ( ! jobAd -> LookupInteger ( ATTR_CLUSTER_ID , cluster ) )"		671214	7					
ANR	671308	Condition	"! jobAd -> LookupInteger ( ATTR_CLUSTER_ID , cluster )"	109:5:3330:3376	671214	0	True				
ANR	671309	UnaryOperationExpression	"! jobAd -> LookupInteger ( ATTR_CLUSTER_ID , cluster )"		671214	0					
ANR	671310	UnaryOperator	!		671214	0					
ANR	671311	CallExpression	"jobAd -> LookupInteger ( ATTR_CLUSTER_ID , cluster )"		671214	1					
ANR	671312	Callee	jobAd -> LookupInteger		671214	0					
ANR	671313	PtrMemberAccess	jobAd -> LookupInteger		671214	0					
ANR	671314	Identifier	jobAd		671214	0					
ANR	671315	Identifier	LookupInteger		671214	1					
ANR	671316	ArgumentList	ATTR_CLUSTER_ID		671214	1					
ANR	671317	Argument	ATTR_CLUSTER_ID		671214	0					
ANR	671318	Identifier	ATTR_CLUSTER_ID		671214	0					
ANR	671319	Argument	cluster		671214	1					
ANR	671320	Identifier	cluster		671214	0					
ANR	671321	CompoundStatement		20:54:543:543	671214	1					
ANR	671322	ExpressionStatement	"EXCEPT ( ""Job ad doesn't contain an %s attribute."" , ATTR_CLUSTER_ID )"	110:2:3383:3449	671214	0	True				
ANR	671323	CallExpression	"EXCEPT ( ""Job ad doesn't contain an %s attribute."" , ATTR_CLUSTER_ID )"		671214	0					
ANR	671324	Callee	EXCEPT		671214	0					
ANR	671325	Identifier	EXCEPT		671214	0					
ANR	671326	ArgumentList	"""Job ad doesn't contain an %s attribute."""		671214	1					
ANR	671327	Argument	"""Job ad doesn't contain an %s attribute."""		671214	0					
ANR	671328	PrimaryExpression	"""Job ad doesn't contain an %s attribute."""		671214	0					
ANR	671329	Argument	ATTR_CLUSTER_ID		671214	1					
ANR	671330	Identifier	ATTR_CLUSTER_ID		671214	0					
ANR	671331	IfStatement	"if ( ! jobAd -> LookupInteger ( ATTR_PROC_ID , proc ) )"		671214	8					
ANR	671332	Condition	"! jobAd -> LookupInteger ( ATTR_PROC_ID , proc )"	113:5:3460:3500	671214	0	True				
ANR	671333	UnaryOperationExpression	"! jobAd -> LookupInteger ( ATTR_PROC_ID , proc )"		671214	0					
ANR	671334	UnaryOperator	!		671214	0					
ANR	671335	CallExpression	"jobAd -> LookupInteger ( ATTR_PROC_ID , proc )"		671214	1					
ANR	671336	Callee	jobAd -> LookupInteger		671214	0					
ANR	671337	PtrMemberAccess	jobAd -> LookupInteger		671214	0					
ANR	671338	Identifier	jobAd		671214	0					
ANR	671339	Identifier	LookupInteger		671214	1					
ANR	671340	ArgumentList	ATTR_PROC_ID		671214	1					
ANR	671341	Argument	ATTR_PROC_ID		671214	0					
ANR	671342	Identifier	ATTR_PROC_ID		671214	0					
ANR	671343	Argument	proc		671214	1					
ANR	671344	Identifier	proc		671214	0					
ANR	671345	CompoundStatement		24:48:667:667	671214	1					
ANR	671346	ExpressionStatement	"EXCEPT ( ""Job ad doesn't contain an %s attribute."" , ATTR_PROC_ID )"	114:2:3507:3570	671214	0	True				
ANR	671347	CallExpression	"EXCEPT ( ""Job ad doesn't contain an %s attribute."" , ATTR_PROC_ID )"		671214	0					
ANR	671348	Callee	EXCEPT		671214	0					
ANR	671349	Identifier	EXCEPT		671214	0					
ANR	671350	ArgumentList	"""Job ad doesn't contain an %s attribute."""		671214	1					
ANR	671351	Argument	"""Job ad doesn't contain an %s attribute."""		671214	0					
ANR	671352	PrimaryExpression	"""Job ad doesn't contain an %s attribute."""		671214	0					
ANR	671353	Argument	ATTR_PROC_ID		671214	1					
ANR	671354	Identifier	ATTR_PROC_ID		671214	0					
ANR	671355	IfStatement	"if ( ! jobAd -> LookupString ( ATTR_GLOBAL_JOB_ID , & gjid ) )"		671214	9					
ANR	671356	Condition	"! jobAd -> LookupString ( ATTR_GLOBAL_JOB_ID , & gjid )"	119:5:3625:3672	671214	0	True				
ANR	671357	UnaryOperationExpression	"! jobAd -> LookupString ( ATTR_GLOBAL_JOB_ID , & gjid )"		671214	0					
ANR	671358	UnaryOperator	!		671214	0					
ANR	671359	CallExpression	"jobAd -> LookupString ( ATTR_GLOBAL_JOB_ID , & gjid )"		671214	1					
ANR	671360	Callee	jobAd -> LookupString		671214	0					
ANR	671361	PtrMemberAccess	jobAd -> LookupString		671214	0					
ANR	671362	Identifier	jobAd		671214	0					
ANR	671363	Identifier	LookupString		671214	1					
ANR	671364	ArgumentList	ATTR_GLOBAL_JOB_ID		671214	1					
ANR	671365	Argument	ATTR_GLOBAL_JOB_ID		671214	0					
ANR	671366	Identifier	ATTR_GLOBAL_JOB_ID		671214	0					
ANR	671367	Argument	& gjid		671214	1					
ANR	671368	UnaryOperationExpression	& gjid		671214	0					
ANR	671369	UnaryOperator	&		671214	0					
ANR	671370	Identifier	gjid		671214	1					
ANR	671371	CompoundStatement		30:56:840:840	671214	1					
ANR	671372	ExpressionStatement	gjid = NULL	120:2:3680:3691	671214	0	True				
ANR	671373	AssignmentExpression	gjid = NULL		671214	0		=			
ANR	671374	Identifier	gjid		671214	0					
ANR	671375	Identifier	NULL		671214	1					
ANR	671376	ExpressionStatement	"jobAd -> LookupString ( ATTR_NT_DOMAIN , domain )"	124:1:3737:3780	671214	10	True				
ANR	671377	CallExpression	"jobAd -> LookupString ( ATTR_NT_DOMAIN , domain )"		671214	0					
ANR	671378	Callee	jobAd -> LookupString		671214	0					
ANR	671379	PtrMemberAccess	jobAd -> LookupString		671214	0					
ANR	671380	Identifier	jobAd		671214	0					
ANR	671381	Identifier	LookupString		671214	1					
ANR	671382	ArgumentList	ATTR_NT_DOMAIN		671214	1					
ANR	671383	Argument	ATTR_NT_DOMAIN		671214	0					
ANR	671384	Identifier	ATTR_NT_DOMAIN		671214	0					
ANR	671385	Argument	domain		671214	1					
ANR	671386	Identifier	domain		671214	0					
ANR	671387	IfStatement	"if ( ! jobAd -> LookupString ( ATTR_JOB_IWD , iwd ) )"		671214	11					
ANR	671388	Condition	"! jobAd -> LookupString ( ATTR_JOB_IWD , iwd )"	125:6:3788:3826	671214	0	True				
ANR	671389	UnaryOperationExpression	"! jobAd -> LookupString ( ATTR_JOB_IWD , iwd )"		671214	0					
ANR	671390	UnaryOperator	!		671214	0					
ANR	671391	CallExpression	"jobAd -> LookupString ( ATTR_JOB_IWD , iwd )"		671214	1					
ANR	671392	Callee	jobAd -> LookupString		671214	0					
ANR	671393	PtrMemberAccess	jobAd -> LookupString		671214	0					
ANR	671394	Identifier	jobAd		671214	0					
ANR	671395	Identifier	LookupString		671214	1					
ANR	671396	ArgumentList	ATTR_JOB_IWD		671214	1					
ANR	671397	Argument	ATTR_JOB_IWD		671214	0					
ANR	671398	Identifier	ATTR_JOB_IWD		671214	0					
ANR	671399	Argument	iwd		671214	1					
ANR	671400	Identifier	iwd		671214	0					
ANR	671401	CompoundStatement		36:47:993:993	671214	1					
ANR	671402	ExpressionStatement	"EXCEPT ( ""Job ad doesn't contain an %s attribute."" , ATTR_JOB_IWD )"	126:2:3833:3896	671214	0	True				
ANR	671403	CallExpression	"EXCEPT ( ""Job ad doesn't contain an %s attribute."" , ATTR_JOB_IWD )"		671214	0					
ANR	671404	Callee	EXCEPT		671214	0					
ANR	671405	Identifier	EXCEPT		671214	0					
ANR	671406	ArgumentList	"""Job ad doesn't contain an %s attribute."""		671214	1					
ANR	671407	Argument	"""Job ad doesn't contain an %s attribute."""		671214	0					
ANR	671408	PrimaryExpression	"""Job ad doesn't contain an %s attribute."""		671214	0					
ANR	671409	Argument	ATTR_JOB_IWD		671214	1					
ANR	671410	Identifier	ATTR_JOB_IWD		671214	0					
ANR	671411	IfStatement	"if ( ! jobAd -> LookupFloat ( ATTR_BYTES_SENT , prev_run_bytes_sent ) )"		671214	12					
ANR	671412	Condition	"! jobAd -> LookupFloat ( ATTR_BYTES_SENT , prev_run_bytes_sent )"	129:5:3907:3963	671214	0	True				
ANR	671413	UnaryOperationExpression	"! jobAd -> LookupFloat ( ATTR_BYTES_SENT , prev_run_bytes_sent )"		671214	0					
ANR	671414	UnaryOperator	!		671214	0					
ANR	671415	CallExpression	"jobAd -> LookupFloat ( ATTR_BYTES_SENT , prev_run_bytes_sent )"		671214	1					
ANR	671416	Callee	jobAd -> LookupFloat		671214	0					
ANR	671417	PtrMemberAccess	jobAd -> LookupFloat		671214	0					
ANR	671418	Identifier	jobAd		671214	0					
ANR	671419	Identifier	LookupFloat		671214	1					
ANR	671420	ArgumentList	ATTR_BYTES_SENT		671214	1					
ANR	671421	Argument	ATTR_BYTES_SENT		671214	0					
ANR	671422	Identifier	ATTR_BYTES_SENT		671214	0					
ANR	671423	Argument	prev_run_bytes_sent		671214	1					
ANR	671424	Identifier	prev_run_bytes_sent		671214	0					
ANR	671425	CompoundStatement		40:65:1131:1131	671214	1					
ANR	671426	ExpressionStatement	prev_run_bytes_sent = 0	130:2:3971:3994	671214	0	True				
ANR	671427	AssignmentExpression	prev_run_bytes_sent = 0		671214	0		=			
ANR	671428	Identifier	prev_run_bytes_sent		671214	0					
ANR	671429	PrimaryExpression	0		671214	1					
ANR	671430	IfStatement	"if ( ! jobAd -> LookupFloat ( ATTR_BYTES_RECVD , prev_run_bytes_recvd ) )"		671214	13					
ANR	671431	Condition	"! jobAd -> LookupFloat ( ATTR_BYTES_RECVD , prev_run_bytes_recvd )"	132:5:4004:4062	671214	0	True				
ANR	671432	UnaryOperationExpression	"! jobAd -> LookupFloat ( ATTR_BYTES_RECVD , prev_run_bytes_recvd )"		671214	0					
ANR	671433	UnaryOperator	!		671214	0					
ANR	671434	CallExpression	"jobAd -> LookupFloat ( ATTR_BYTES_RECVD , prev_run_bytes_recvd )"		671214	1					
ANR	671435	Callee	jobAd -> LookupFloat		671214	0					
ANR	671436	PtrMemberAccess	jobAd -> LookupFloat		671214	0					
ANR	671437	Identifier	jobAd		671214	0					
ANR	671438	Identifier	LookupFloat		671214	1					
ANR	671439	ArgumentList	ATTR_BYTES_RECVD		671214	1					
ANR	671440	Argument	ATTR_BYTES_RECVD		671214	0					
ANR	671441	Identifier	ATTR_BYTES_RECVD		671214	0					
ANR	671442	Argument	prev_run_bytes_recvd		671214	1					
ANR	671443	Identifier	prev_run_bytes_recvd		671214	0					
ANR	671444	CompoundStatement		43:67:1230:1230	671214	1					
ANR	671445	ExpressionStatement	prev_run_bytes_recvd = 0	133:2:4070:4094	671214	0	True				
ANR	671446	AssignmentExpression	prev_run_bytes_recvd = 0		671214	0		=			
ANR	671447	Identifier	prev_run_bytes_recvd		671214	0					
ANR	671448	PrimaryExpression	0		671214	1					
ANR	671449	IdentifierDeclStatement	MyString tmp_name = iwd ;	137:1:4159:4182	671214	14	True				
ANR	671450	IdentifierDecl	tmp_name = iwd		671214	0					
ANR	671451	IdentifierDeclType	MyString		671214	0					
ANR	671452	Identifier	tmp_name		671214	1					
ANR	671453	AssignmentExpression	tmp_name = iwd		671214	2		=			
ANR	671454	Identifier	iwd		671214	0					
ANR	671455	Identifier	iwd		671214	1					
ANR	671456	ExpressionStatement	tmp_name += DIR_DELIM_CHAR	138:1:4185:4211	671214	15	True				
ANR	671457	AssignmentExpression	tmp_name += DIR_DELIM_CHAR		671214	0		+=			
ANR	671458	Identifier	tmp_name		671214	0					
ANR	671459	Identifier	DIR_DELIM_CHAR		671214	1					
ANR	671460	ExpressionStatement	"tmp_name += ""core."""	139:1:4214:4233	671214	16	True				
ANR	671461	AssignmentExpression	"tmp_name += ""core."""		671214	0		+=			
ANR	671462	Identifier	tmp_name		671214	0					
ANR	671463	PrimaryExpression	"""core."""		671214	1					
ANR	671464	ExpressionStatement	tmp_name += cluster	140:1:4236:4255	671214	17	True				
ANR	671465	AssignmentExpression	tmp_name += cluster		671214	0		+=			
ANR	671466	Identifier	tmp_name		671214	0					
ANR	671467	Identifier	cluster		671214	1					
ANR	671468	ExpressionStatement	tmp_name += '.'	141:1:4258:4273	671214	18	True				
ANR	671469	AssignmentExpression	tmp_name += '.'		671214	0		+=			
ANR	671470	Identifier	tmp_name		671214	0					
ANR	671471	PrimaryExpression	'.'		671214	1					
ANR	671472	ExpressionStatement	tmp_name += proc	142:1:4276:4292	671214	19	True				
ANR	671473	AssignmentExpression	tmp_name += proc		671214	0		+=			
ANR	671474	Identifier	tmp_name		671214	0					
ANR	671475	Identifier	proc		671214	1					
ANR	671476	ExpressionStatement	core_file_name = strdup ( tmp_name . Value ( ) )	143:1:4295:4338	671214	20	True				
ANR	671477	AssignmentExpression	core_file_name = strdup ( tmp_name . Value ( ) )		671214	0		=			
ANR	671478	Identifier	core_file_name		671214	0					
ANR	671479	CallExpression	strdup ( tmp_name . Value ( ) )		671214	1					
ANR	671480	Callee	strdup		671214	0					
ANR	671481	Identifier	strdup		671214	0					
ANR	671482	ArgumentList	tmp_name . Value ( )		671214	1					
ANR	671483	Argument	tmp_name . Value ( )		671214	0					
ANR	671484	CallExpression	tmp_name . Value ( )		671214	0					
ANR	671485	Callee	tmp_name . Value		671214	0					
ANR	671486	MemberAccess	tmp_name . Value		671214	0					
ANR	671487	Identifier	tmp_name		671214	0					
ANR	671488	Identifier	Value		671214	1					
ANR	671489	ArgumentList			671214	1					
ANR	671490	IdentifierDeclStatement	MyString tmp_addr = ATTR_MY_ADDRESS ;	147:1:4479:4514	671214	21	True				
ANR	671491	IdentifierDecl	tmp_addr = ATTR_MY_ADDRESS		671214	0					
ANR	671492	IdentifierDeclType	MyString		671214	0					
ANR	671493	Identifier	tmp_addr		671214	1					
ANR	671494	AssignmentExpression	tmp_addr = ATTR_MY_ADDRESS		671214	2		=			
ANR	671495	Identifier	ATTR_MY_ADDRESS		671214	0					
ANR	671496	Identifier	ATTR_MY_ADDRESS		671214	1					
ANR	671497	ExpressionStatement	"tmp_addr += ""=\\"""""	148:1:4517:4534	671214	22	True				
ANR	671498	AssignmentExpression	"tmp_addr += ""=\\"""""		671214	0		+=			
ANR	671499	Identifier	tmp_addr		671214	0					
ANR	671500	PrimaryExpression	"""=\\"""""		671214	1					
ANR	671501	ExpressionStatement	tmp_addr += daemonCore -> InfoCommandSinfulString ( )	149:1:4537:4586	671214	23	True				
ANR	671502	AssignmentExpression	tmp_addr += daemonCore -> InfoCommandSinfulString ( )		671214	0		+=			
ANR	671503	Identifier	tmp_addr		671214	0					
ANR	671504	CallExpression	daemonCore -> InfoCommandSinfulString ( )		671214	1					
ANR	671505	Callee	daemonCore -> InfoCommandSinfulString		671214	0					
ANR	671506	PtrMemberAccess	daemonCore -> InfoCommandSinfulString		671214	0					
ANR	671507	Identifier	daemonCore		671214	0					
ANR	671508	Identifier	InfoCommandSinfulString		671214	1					
ANR	671509	ArgumentList			671214	1					
ANR	671510	ExpressionStatement	"tmp_addr += '""'"	150:1:4589:4604	671214	24	True				
ANR	671511	AssignmentExpression	"tmp_addr += '""'"		671214	0		+=			
ANR	671512	Identifier	tmp_addr		671214	0					
ANR	671513	PrimaryExpression	"'""'"		671214	1					
ANR	671514	IfStatement	if ( ! jobAd -> Insert ( tmp_addr . Value ( ) ) )		671214	25					
ANR	671515	Condition	! jobAd -> Insert ( tmp_addr . Value ( ) )	151:9:4615:4648	671214	0	True				
ANR	671516	UnaryOperationExpression	! jobAd -> Insert ( tmp_addr . Value ( ) )		671214	0					
ANR	671517	UnaryOperator	!		671214	0					
ANR	671518	CallExpression	jobAd -> Insert ( tmp_addr . Value ( ) )		671214	1					
ANR	671519	Callee	jobAd -> Insert		671214	0					
ANR	671520	PtrMemberAccess	jobAd -> Insert		671214	0					
ANR	671521	Identifier	jobAd		671214	0					
ANR	671522	Identifier	Insert		671214	1					
ANR	671523	ArgumentList	tmp_addr . Value ( )		671214	1					
ANR	671524	Argument	tmp_addr . Value ( )		671214	0					
ANR	671525	CallExpression	tmp_addr . Value ( )		671214	0					
ANR	671526	Callee	tmp_addr . Value		671214	0					
ANR	671527	MemberAccess	tmp_addr . Value		671214	0					
ANR	671528	Identifier	tmp_addr		671214	0					
ANR	671529	Identifier	Value		671214	1					
ANR	671530	ArgumentList			671214	1					
ANR	671531	CompoundStatement		62:45:1815:1815	671214	1					
ANR	671532	ExpressionStatement	"EXCEPT ( ""Failed to insert %s!"" , ATTR_MY_ADDRESS )"	152:8:4661:4710	671214	0	True				
ANR	671533	CallExpression	"EXCEPT ( ""Failed to insert %s!"" , ATTR_MY_ADDRESS )"		671214	0					
ANR	671534	Callee	EXCEPT		671214	0					
ANR	671535	Identifier	EXCEPT		671214	0					
ANR	671536	ArgumentList	"""Failed to insert %s!"""		671214	1					
ANR	671537	Argument	"""Failed to insert %s!"""		671214	0					
ANR	671538	PrimaryExpression	"""Failed to insert %s!"""		671214	0					
ANR	671539	Argument	ATTR_MY_ADDRESS		671214	1					
ANR	671540	Identifier	ATTR_MY_ADDRESS		671214	0					
ANR	671541	ExpressionStatement	DebugId = display_dprintf_header	155:1:4720:4752	671214	26	True				
ANR	671542	AssignmentExpression	DebugId = display_dprintf_header		671214	0		=			
ANR	671543	Identifier	DebugId		671214	0					
ANR	671544	Identifier	display_dprintf_header		671214	1					
ANR	671545	ExpressionStatement	config ( )	157:1:4757:4765	671214	27	True				
ANR	671546	CallExpression	config ( )		671214	0					
ANR	671547	Callee	config		671214	0					
ANR	671548	Identifier	config		671214	0					
ANR	671549	ArgumentList			671214	1					
ANR	671550	ExpressionStatement	checkSwap ( )	160:1:4819:4830	671214	28	True				
ANR	671551	CallExpression	checkSwap ( )		671214	0					
ANR	671552	Callee	checkSwap		671214	0					
ANR	671553	Identifier	checkSwap		671214	0					
ANR	671554	ArgumentList			671214	1					
ANR	671555	IfStatement	"if ( ! init_user_ids ( owner . Value ( ) , domain . Value ( ) ) )"		671214	29					
ANR	671556	Condition	"! init_user_ids ( owner . Value ( ) , domain . Value ( ) )"	164:6:4925:4969	671214	0	True				
ANR	671557	UnaryOperationExpression	"! init_user_ids ( owner . Value ( ) , domain . Value ( ) )"		671214	0					
ANR	671558	UnaryOperator	!		671214	0					
ANR	671559	CallExpression	"init_user_ids ( owner . Value ( ) , domain . Value ( ) )"		671214	1					
ANR	671560	Callee	init_user_ids		671214	0					
ANR	671561	Identifier	init_user_ids		671214	0					
ANR	671562	ArgumentList	owner . Value ( )		671214	1					
ANR	671563	Argument	owner . Value ( )		671214	0					
ANR	671564	CallExpression	owner . Value ( )		671214	0					
ANR	671565	Callee	owner . Value		671214	0					
ANR	671566	MemberAccess	owner . Value		671214	0					
ANR	671567	Identifier	owner		671214	0					
ANR	671568	Identifier	Value		671214	1					
ANR	671569	ArgumentList			671214	1					
ANR	671570	Argument	domain . Value ( )		671214	1					
ANR	671571	CallExpression	domain . Value ( )		671214	0					
ANR	671572	Callee	domain . Value		671214	0					
ANR	671573	MemberAccess	domain . Value		671214	0					
ANR	671574	Identifier	domain		671214	0					
ANR	671575	Identifier	Value		671214	1					
ANR	671576	ArgumentList			671214	1					
ANR	671577	CompoundStatement		75:53:2136:2136	671214	1					
ANR	671578	ExpressionStatement	"dprintf ( D_ALWAYS , ""init_user_ids() failed as user %s\\n"" , owner . Value ( ) )"	165:2:4976:5047	671214	0	True				
ANR	671579	CallExpression	"dprintf ( D_ALWAYS , ""init_user_ids() failed as user %s\\n"" , owner . Value ( ) )"		671214	0					
ANR	671580	Callee	dprintf		671214	0					
ANR	671581	Identifier	dprintf		671214	0					
ANR	671582	ArgumentList	D_ALWAYS		671214	1					
ANR	671583	Argument	D_ALWAYS		671214	0					
ANR	671584	Identifier	D_ALWAYS		671214	0					
ANR	671585	Argument	"""init_user_ids() failed as user %s\\n"""		671214	1					
ANR	671586	PrimaryExpression	"""init_user_ids() failed as user %s\\n"""		671214	0					
ANR	671587	Argument	owner . Value ( )		671214	2					
ANR	671588	CallExpression	owner . Value ( )		671214	0					
ANR	671589	Callee	owner . Value		671214	0					
ANR	671590	MemberAccess	owner . Value		671214	0					
ANR	671591	Identifier	owner		671214	0					
ANR	671592	Identifier	Value		671214	1					
ANR	671593	ArgumentList			671214	1					
ANR	671594	IfStatement	"if ( param_boolean ( ""SHADOW_RUN_UNKNOWN_USER_JOBS"" , false ) )"		671214	1					
ANR	671595	Condition	"param_boolean ( ""SHADOW_RUN_UNKNOWN_USER_JOBS"" , false )"	170:7:5181:5234	671214	0	True				
ANR	671596	CallExpression	"param_boolean ( ""SHADOW_RUN_UNKNOWN_USER_JOBS"" , false )"		671214	0					
ANR	671597	Callee	param_boolean		671214	0					
ANR	671598	Identifier	param_boolean		671214	0					
ANR	671599	ArgumentList	"""SHADOW_RUN_UNKNOWN_USER_JOBS"""		671214	1					
ANR	671600	Argument	"""SHADOW_RUN_UNKNOWN_USER_JOBS"""		671214	0					
ANR	671601	PrimaryExpression	"""SHADOW_RUN_UNKNOWN_USER_JOBS"""		671214	0					
ANR	671602	Argument	false		671214	1					
ANR	671603	Identifier	false		671214	0					
ANR	671604	CompoundStatement		82:2:2404:2404	671214	1					
ANR	671605	ExpressionStatement	"dprintf ( D_ALWAYS , ""trying init_user_ids() as user nobody\\n"" )"	172:3:5245:5306	671214	0	True				
ANR	671606	CallExpression	"dprintf ( D_ALWAYS , ""trying init_user_ids() as user nobody\\n"" )"		671214	0					
ANR	671607	Callee	dprintf		671214	0					
ANR	671608	Identifier	dprintf		671214	0					
ANR	671609	ArgumentList	D_ALWAYS		671214	1					
ANR	671610	Argument	D_ALWAYS		671214	0					
ANR	671611	Identifier	D_ALWAYS		671214	0					
ANR	671612	Argument	"""trying init_user_ids() as user nobody\\n"""		671214	1					
ANR	671613	PrimaryExpression	"""trying init_user_ids() as user nobody\\n"""		671214	0					
ANR	671614	ExpressionStatement	"owner = ""nobody"""	174:3:5315:5329	671214	1	True				
ANR	671615	AssignmentExpression	"owner = ""nobody"""		671214	0		=			
ANR	671616	Identifier	owner		671214	0					
ANR	671617	PrimaryExpression	"""nobody"""		671214	1					
ANR	671618	ExpressionStatement	domain = NULL	175:3:5334:5345	671214	2	True				
ANR	671619	AssignmentExpression	domain = NULL		671214	0		=			
ANR	671620	Identifier	domain		671214	0					
ANR	671621	Identifier	NULL		671214	1					
ANR	671622	IfStatement	"if ( ! init_user_ids ( owner . Value ( ) , domain . Value ( ) ) )"		671214	3					
ANR	671623	Condition	"! init_user_ids ( owner . Value ( ) , domain . Value ( ) )"	176:7:5354:5398	671214	0	True				
ANR	671624	UnaryOperationExpression	"! init_user_ids ( owner . Value ( ) , domain . Value ( ) )"		671214	0					
ANR	671625	UnaryOperator	!		671214	0					
ANR	671626	CallExpression	"init_user_ids ( owner . Value ( ) , domain . Value ( ) )"		671214	1					
ANR	671627	Callee	init_user_ids		671214	0					
ANR	671628	Identifier	init_user_ids		671214	0					
ANR	671629	ArgumentList	owner . Value ( )		671214	1					
ANR	671630	Argument	owner . Value ( )		671214	0					
ANR	671631	CallExpression	owner . Value ( )		671214	0					
ANR	671632	Callee	owner . Value		671214	0					
ANR	671633	MemberAccess	owner . Value		671214	0					
ANR	671634	Identifier	owner		671214	0					
ANR	671635	Identifier	Value		671214	1					
ANR	671636	ArgumentList			671214	1					
ANR	671637	Argument	domain . Value ( )		671214	1					
ANR	671638	CallExpression	domain . Value ( )		671214	0					
ANR	671639	Callee	domain . Value		671214	0					
ANR	671640	MemberAccess	domain . Value		671214	0					
ANR	671641	Identifier	domain		671214	0					
ANR	671642	Identifier	Value		671214	1					
ANR	671643	ArgumentList			671214	1					
ANR	671644	CompoundStatement		88:3:2568:2568	671214	1					
ANR	671645	ExpressionStatement	"dprintf ( D_ALWAYS , ""init_user_ids() failed!\\n"" )"	178:4:5410:5456	671214	0	True				
ANR	671646	CallExpression	"dprintf ( D_ALWAYS , ""init_user_ids() failed!\\n"" )"		671214	0					
ANR	671647	Callee	dprintf		671214	0					
ANR	671648	Identifier	dprintf		671214	0					
ANR	671649	ArgumentList	D_ALWAYS		671214	1					
ANR	671650	Argument	D_ALWAYS		671214	0					
ANR	671651	Identifier	D_ALWAYS		671214	0					
ANR	671652	Argument	"""init_user_ids() failed!\\n"""		671214	1					
ANR	671653	PrimaryExpression	"""init_user_ids() failed!\\n"""		671214	0					
ANR	671654	ElseStatement	else		671214	0					
ANR	671655	CompoundStatement		92:3:2638:2638	671214	0					
ANR	671656	ExpressionStatement	"jobAd -> Assign ( ATTR_JOB_RUNAS_OWNER , ""FALSE"" )"	182:4:5480:5526	671214	0	True				
ANR	671657	CallExpression	"jobAd -> Assign ( ATTR_JOB_RUNAS_OWNER , ""FALSE"" )"		671214	0					
ANR	671658	Callee	jobAd -> Assign		671214	0					
ANR	671659	PtrMemberAccess	jobAd -> Assign		671214	0					
ANR	671660	Identifier	jobAd		671214	0					
ANR	671661	Identifier	Assign		671214	1					
ANR	671662	ArgumentList	ATTR_JOB_RUNAS_OWNER		671214	1					
ANR	671663	Argument	ATTR_JOB_RUNAS_OWNER		671214	0					
ANR	671664	Identifier	ATTR_JOB_RUNAS_OWNER		671214	0					
ANR	671665	Argument	"""FALSE"""		671214	1					
ANR	671666	PrimaryExpression	"""FALSE"""		671214	0					
ANR	671667	ExpressionStatement	m_RunAsNobody = true	183:4:5532:5550	671214	1	True				
ANR	671668	AssignmentExpression	m_RunAsNobody = true		671214	0		=			
ANR	671669	Identifier	m_RunAsNobody		671214	0					
ANR	671670	Identifier	true		671214	1					
ANR	671671	ExpressionStatement	"dprintf ( D_ALWAYS , ""init_user_ids() now running as user nobody\\n"" )"	184:4:5556:5621	671214	2	True				
ANR	671672	CallExpression	"dprintf ( D_ALWAYS , ""init_user_ids() now running as user nobody\\n"" )"		671214	0					
ANR	671673	Callee	dprintf		671214	0					
ANR	671674	Identifier	dprintf		671214	0					
ANR	671675	ArgumentList	D_ALWAYS		671214	1					
ANR	671676	Argument	D_ALWAYS		671214	0					
ANR	671677	Identifier	D_ALWAYS		671214	0					
ANR	671678	Argument	"""init_user_ids() now running as user nobody\\n"""		671214	1					
ANR	671679	PrimaryExpression	"""init_user_ids() now running as user nobody\\n"""		671214	0					
ANR	671680	ExpressionStatement	set_user_priv ( )	190:1:5644:5659	671214	30	True				
ANR	671681	CallExpression	set_user_priv ( )		671214	0					
ANR	671682	Callee	set_user_priv		671214	0					
ANR	671683	Identifier	set_user_priv		671214	0					
ANR	671684	ArgumentList			671214	1					
ANR	671685	ExpressionStatement	daemonCore -> Register_Priv_State ( PRIV_USER )	191:1:5662:5706	671214	31	True				
ANR	671686	CallExpression	daemonCore -> Register_Priv_State ( PRIV_USER )		671214	0					
ANR	671687	Callee	daemonCore -> Register_Priv_State		671214	0					
ANR	671688	PtrMemberAccess	daemonCore -> Register_Priv_State		671214	0					
ANR	671689	Identifier	daemonCore		671214	0					
ANR	671690	Identifier	Register_Priv_State		671214	1					
ANR	671691	ArgumentList	PRIV_USER		671214	1					
ANR	671692	Argument	PRIV_USER		671214	0					
ANR	671693	Identifier	PRIV_USER		671214	0					
ANR	671694	ExpressionStatement	"dumpClassad ( ""BaseShadow::baseInit()"" , this -> jobAd , D_JOB )"	193:1:5710:5769	671214	32	True				
ANR	671695	CallExpression	"dumpClassad ( ""BaseShadow::baseInit()"" , this -> jobAd , D_JOB )"		671214	0					
ANR	671696	Callee	dumpClassad		671214	0					
ANR	671697	Identifier	dumpClassad		671214	0					
ANR	671698	ArgumentList	"""BaseShadow::baseInit()"""		671214	1					
ANR	671699	Argument	"""BaseShadow::baseInit()"""		671214	0					
ANR	671700	PrimaryExpression	"""BaseShadow::baseInit()"""		671214	0					
ANR	671701	Argument	this -> jobAd		671214	1					
ANR	671702	PtrMemberAccess	this -> jobAd		671214	0					
ANR	671703	Identifier	this		671214	0					
ANR	671704	Identifier	jobAd		671214	1					
ANR	671705	Argument	D_JOB		671214	2					
ANR	671706	Identifier	D_JOB		671214	0					
ANR	671707	ExpressionStatement	"shadow_user_policy . init ( jobAd , this )"	196:1:5811:5849	671214	33	True				
ANR	671708	CallExpression	"shadow_user_policy . init ( jobAd , this )"		671214	0					
ANR	671709	Callee	shadow_user_policy . init		671214	0					
ANR	671710	MemberAccess	shadow_user_policy . init		671214	0					
ANR	671711	Identifier	shadow_user_policy		671214	0					
ANR	671712	Identifier	init		671214	1					
ANR	671713	ArgumentList	jobAd		671214	1					
ANR	671714	Argument	jobAd		671214	0					
ANR	671715	Identifier	jobAd		671214	0					
ANR	671716	Argument	this		671214	1					
ANR	671717	Identifier	this		671214	0					
ANR	671718	IfStatement	if ( sendUpdatesToSchedd )		671214	34					
ANR	671719	Condition	sendUpdatesToSchedd	204:5:6153:6171	671214	0	True				
ANR	671720	Identifier	sendUpdatesToSchedd		671214	0					
ANR	671721	CompoundStatement		115:26:3338:3338	671214	1					
ANR	671722	ExpressionStatement	"job_updater = new QmgrJobUpdater ( jobAd , scheddAddr , CondorVersion ( ) )"	206:2:6198:6268	671214	0	True				
ANR	671723	AssignmentExpression	"job_updater = new QmgrJobUpdater ( jobAd , scheddAddr , CondorVersion ( ) )"		671214	0		=			
ANR	671724	Identifier	job_updater		671214	0					
ANR	671725	Expression	"jobAd , scheddAddr , CondorVersion ( )"		671214	1					
ANR	671726	Identifier	jobAd		671214	0					
ANR	671727	Expression	"scheddAddr , CondorVersion ( )"		671214	1					
ANR	671728	Identifier	scheddAddr		671214	0					
ANR	671729	CallExpression	CondorVersion ( )		671214	1					
ANR	671730	Callee	CondorVersion		671214	0					
ANR	671731	Identifier	CondorVersion		671214	0					
ANR	671732	ArgumentList			671214	1					
ANR	671733	ElseStatement	else		671214	0					
ANR	671734	CompoundStatement		118:8:3442:3442	671214	0					
ANR	671735	ExpressionStatement	"job_updater = new NullQmgrJobUpdater ( jobAd , scheddAddr , CondorVersion ( ) )"	208:2:6282:6356	671214	0	True				
ANR	671736	AssignmentExpression	"job_updater = new NullQmgrJobUpdater ( jobAd , scheddAddr , CondorVersion ( ) )"		671214	0		=			
ANR	671737	Identifier	job_updater		671214	0					
ANR	671738	Expression	"jobAd , scheddAddr , CondorVersion ( )"		671214	1					
ANR	671739	Identifier	jobAd		671214	0					
ANR	671740	Expression	"scheddAddr , CondorVersion ( )"		671214	1					
ANR	671741	Identifier	scheddAddr		671214	0					
ANR	671742	CallExpression	CondorVersion ( )		671214	1					
ANR	671743	Callee	CondorVersion		671214	0					
ANR	671744	Identifier	CondorVersion		671214	0					
ANR	671745	ArgumentList			671214	1					
ANR	671746	ExpressionStatement	initUserLog ( )	215:1:6570:6583	671214	35	True				
ANR	671747	CallExpression	initUserLog ( )		671214	0					
ANR	671748	Callee	initUserLog		671214	0					
ANR	671749	Identifier	initUserLog		671214	0					
ANR	671750	ArgumentList			671214	1					
ANR	671751	IfStatement	if ( cdToIwd ( ) == - 1 )		671214	36					
ANR	671752	Condition	cdToIwd ( ) == - 1	218:6:6631:6645	671214	0	True				
ANR	671753	EqualityExpression	cdToIwd ( ) == - 1		671214	0		==			
ANR	671754	CallExpression	cdToIwd ( )		671214	0					
ANR	671755	Callee	cdToIwd		671214	0					
ANR	671756	Identifier	cdToIwd		671214	0					
ANR	671757	ArgumentList			671214	1					
ANR	671758	UnaryOperationExpression	- 1		671214	1					
ANR	671759	UnaryOperator	-		671214	0					
ANR	671760	PrimaryExpression	1		671214	1					
ANR	671761	CompoundStatement		129:24:3813:3813	671214	1					
ANR	671762	ExpressionStatement	"EXCEPT ( ""Could not cd to initial working directory"" )"	219:2:6653:6704	671214	0	True				
ANR	671763	CallExpression	"EXCEPT ( ""Could not cd to initial working directory"" )"		671214	0					
ANR	671764	Callee	EXCEPT		671214	0					
ANR	671765	Identifier	EXCEPT		671214	0					
ANR	671766	ArgumentList	"""Could not cd to initial working directory"""		671214	1					
ANR	671767	Argument	"""Could not cd to initial working directory"""		671214	0					
ANR	671768	PrimaryExpression	"""Could not cd to initial working directory"""		671214	0					
ANR	671769	IfStatement	"if ( jobAd -> LookupInteger ( ATTR_TERMINATION_PENDING , pending ) )"		671214	37					
ANR	671770	Condition	"jobAd -> LookupInteger ( ATTR_TERMINATION_PENDING , pending )"	226:5:6972:7026	671214	0	True				
ANR	671771	CallExpression	"jobAd -> LookupInteger ( ATTR_TERMINATION_PENDING , pending )"		671214	0					
ANR	671772	Callee	jobAd -> LookupInteger		671214	0					
ANR	671773	PtrMemberAccess	jobAd -> LookupInteger		671214	0					
ANR	671774	Identifier	jobAd		671214	0					
ANR	671775	Identifier	LookupInteger		671214	1					
ANR	671776	ArgumentList	ATTR_TERMINATION_PENDING		671214	1					
ANR	671777	Argument	ATTR_TERMINATION_PENDING		671214	0					
ANR	671778	Identifier	ATTR_TERMINATION_PENDING		671214	0					
ANR	671779	Argument	pending		671214	1					
ANR	671780	Identifier	pending		671214	0					
ANR	671781	CompoundStatement		137:62:4193:4193	671214	1					
ANR	671782	IfStatement	if ( pending == TRUE )		671214	0					
ANR	671783	Condition	pending == TRUE	227:6:7037:7051	671214	0	True				
ANR	671784	EqualityExpression	pending == TRUE		671214	0		==			
ANR	671785	Identifier	pending		671214	0					
ANR	671786	Identifier	TRUE		671214	1					
ANR	671787	CompoundStatement		138:23:4218:4218	671214	1					
ANR	671788	ExpressionStatement	this -> terminateJob ( US_TERMINATE_PENDING )	231:3:7211:7251	671214	0	True				
ANR	671789	CallExpression	this -> terminateJob ( US_TERMINATE_PENDING )		671214	0					
ANR	671790	Callee	this -> terminateJob		671214	0					
ANR	671791	PtrMemberAccess	this -> terminateJob		671214	0					
ANR	671792	Identifier	this		671214	0					
ANR	671793	Identifier	terminateJob		671214	1					
ANR	671794	ArgumentList	US_TERMINATE_PENDING		671214	1					
ANR	671795	Argument	US_TERMINATE_PENDING		671214	0					
ANR	671796	Identifier	US_TERMINATE_PENDING		671214	0					
ANR	671797	IdentifierDeclStatement	int wantClaiming = 0 ;	236:1:7326:7346	671214	38	True				
ANR	671798	IdentifierDecl	wantClaiming = 0		671214	0					
ANR	671799	IdentifierDeclType	int		671214	0					
ANR	671800	Identifier	wantClaiming		671214	1					
ANR	671801	AssignmentExpression	wantClaiming = 0		671214	2		=			
ANR	671802	Identifier	wantClaiming		671214	0					
ANR	671803	PrimaryExpression	0		671214	1					
ANR	671804	ExpressionStatement	"jobAd -> LookupBool ( ATTR_CLAIM_STARTD , wantClaiming )"	237:1:7349:7399	671214	39	True				
ANR	671805	CallExpression	"jobAd -> LookupBool ( ATTR_CLAIM_STARTD , wantClaiming )"		671214	0					
ANR	671806	Callee	jobAd -> LookupBool		671214	0					
ANR	671807	PtrMemberAccess	jobAd -> LookupBool		671214	0					
ANR	671808	Identifier	jobAd		671214	0					
ANR	671809	Identifier	LookupBool		671214	1					
ANR	671810	ArgumentList	ATTR_CLAIM_STARTD		671214	1					
ANR	671811	Argument	ATTR_CLAIM_STARTD		671214	0					
ANR	671812	Identifier	ATTR_CLAIM_STARTD		671214	0					
ANR	671813	Argument	wantClaiming		671214	1					
ANR	671814	Identifier	wantClaiming		671214	0					
ANR	671815	IfStatement	if ( wantClaiming )		671214	40					
ANR	671816	Condition	wantClaiming	238:5:7406:7417	671214	0	True				
ANR	671817	Identifier	wantClaiming		671214	0					
ANR	671818	CompoundStatement		161:2:5014:5148	671214	1					
ANR	671819	IdentifierDeclStatement	MyString startdSinful ;	239:2:7424:7445	671214	0	True				
ANR	671820	IdentifierDecl	startdSinful		671214	0					
ANR	671821	IdentifierDeclType	MyString		671214	0					
ANR	671822	Identifier	startdSinful		671214	1					
ANR	671823	IdentifierDeclStatement	MyString claimid ;	240:2:7449:7465	671214	1	True				
ANR	671824	IdentifierDecl	claimid		671214	0					
ANR	671825	IdentifierDeclType	MyString		671214	0					
ANR	671826	Identifier	claimid		671214	1					
ANR	671827	ExpressionStatement	"jobAd -> LookupString ( ATTR_STARTD_IP_ADDR , startdSinful )"	243:2:7522:7576	671214	2	True				
ANR	671828	CallExpression	"jobAd -> LookupString ( ATTR_STARTD_IP_ADDR , startdSinful )"		671214	0					
ANR	671829	Callee	jobAd -> LookupString		671214	0					
ANR	671830	PtrMemberAccess	jobAd -> LookupString		671214	0					
ANR	671831	Identifier	jobAd		671214	0					
ANR	671832	Identifier	LookupString		671214	1					
ANR	671833	ArgumentList	ATTR_STARTD_IP_ADDR		671214	1					
ANR	671834	Argument	ATTR_STARTD_IP_ADDR		671214	0					
ANR	671835	Identifier	ATTR_STARTD_IP_ADDR		671214	0					
ANR	671836	Argument	startdSinful		671214	1					
ANR	671837	Identifier	startdSinful		671214	0					
ANR	671838	ExpressionStatement	"jobAd -> LookupString ( ATTR_CLAIM_ID , claimid )"	244:2:7580:7623	671214	3	True				
ANR	671839	CallExpression	"jobAd -> LookupString ( ATTR_CLAIM_ID , claimid )"		671214	0					
ANR	671840	Callee	jobAd -> LookupString		671214	0					
ANR	671841	PtrMemberAccess	jobAd -> LookupString		671214	0					
ANR	671842	Identifier	jobAd		671214	0					
ANR	671843	Identifier	LookupString		671214	1					
ANR	671844	ArgumentList	ATTR_CLAIM_ID		671214	1					
ANR	671845	Argument	ATTR_CLAIM_ID		671214	0					
ANR	671846	Identifier	ATTR_CLAIM_ID		671214	0					
ANR	671847	Argument	claimid		671214	1					
ANR	671848	Identifier	claimid		671214	0					
ANR	671849	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s is true, trying to claim startd %s\\n"" , ATTR_CLAIM_STARTD , startdSinful . Value ( ) )"	246:2:7628:7729	671214	4	True				
ANR	671850	CallExpression	"dprintf ( D_ALWAYS , ""%s is true, trying to claim startd %s\\n"" , ATTR_CLAIM_STARTD , startdSinful . Value ( ) )"		671214	0					
ANR	671851	Callee	dprintf		671214	0					
ANR	671852	Identifier	dprintf		671214	0					
ANR	671853	ArgumentList	D_ALWAYS		671214	1					
ANR	671854	Argument	D_ALWAYS		671214	0					
ANR	671855	Identifier	D_ALWAYS		671214	0					
ANR	671856	Argument	"""%s is true, trying to claim startd %s\\n"""		671214	1					
ANR	671857	PrimaryExpression	"""%s is true, trying to claim startd %s\\n"""		671214	0					
ANR	671858	Argument	ATTR_CLAIM_STARTD		671214	2					
ANR	671859	Identifier	ATTR_CLAIM_STARTD		671214	0					
ANR	671860	Argument	startdSinful . Value ( )		671214	3					
ANR	671861	CallExpression	startdSinful . Value ( )		671214	0					
ANR	671862	Callee	startdSinful . Value		671214	0					
ANR	671863	MemberAccess	startdSinful . Value		671214	0					
ANR	671864	Identifier	startdSinful		671214	0					
ANR	671865	Identifier	Value		671214	1					
ANR	671866	ArgumentList			671214	1					
ANR	671867	IdentifierDeclStatement	"classy_counted_ptr < DCStartd > startd = new DCStartd ( ""description"" , NULL , startdSinful . Value ( ) , claimid . Value ( ) ) ;"	248:2:7734:7844	671214	5	True				
ANR	671868	IdentifierDecl	"startd = new DCStartd ( ""description"" , NULL , startdSinful . Value ( ) , claimid . Value ( ) )"		671214	0					
ANR	671869	IdentifierDeclType	classy_counted_ptr < DCStartd >		671214	0					
ANR	671870	Identifier	startd		671214	1					
ANR	671871	AssignmentExpression	"startd = new DCStartd ( ""description"" , NULL , startdSinful . Value ( ) , claimid . Value ( ) )"		671214	2		=			
ANR	671872	Identifier	startd		671214	0					
ANR	671873	Expression	"""description"" , NULL , startdSinful . Value ( ) , claimid . Value ( )"		671214	1					
ANR	671874	PrimaryExpression	"""description"""		671214	0					
ANR	671875	Expression	"NULL , startdSinful . Value ( ) , claimid . Value ( )"		671214	1					
ANR	671876	Identifier	NULL		671214	0					
ANR	671877	Expression	"startdSinful . Value ( ) , claimid . Value ( )"		671214	1					
ANR	671878	CallExpression	startdSinful . Value ( )		671214	0					
ANR	671879	Callee	startdSinful . Value		671214	0					
ANR	671880	MemberAccess	startdSinful . Value		671214	0					
ANR	671881	Identifier	startdSinful		671214	0					
ANR	671882	Identifier	Value		671214	1					
ANR	671883	ArgumentList			671214	1					
ANR	671884	CallExpression	claimid . Value ( )		671214	1					
ANR	671885	Callee	claimid . Value		671214	0					
ANR	671886	MemberAccess	claimid . Value		671214	0					
ANR	671887	Identifier	claimid		671214	0					
ANR	671888	Identifier	Value		671214	1					
ANR	671889	ArgumentList			671214	1					
ANR	671890	IdentifierDeclStatement	"classy_counted_ptr < DCMsgCallback > cb = new DCMsgCallback ( ( DCMsgCallback :: CppFunction ) & BaseShadow :: startdClaimedCB , this , jobAd ) ;"	250:2:7850:7984	671214	6	True				
ANR	671891	IdentifierDecl	"cb = new DCMsgCallback ( ( DCMsgCallback :: CppFunction ) & BaseShadow :: startdClaimedCB , this , jobAd )"		671214	0					
ANR	671892	IdentifierDeclType	classy_counted_ptr < DCMsgCallback >		671214	0					
ANR	671893	Identifier	cb		671214	1					
ANR	671894	AssignmentExpression	"cb = new DCMsgCallback ( ( DCMsgCallback :: CppFunction ) & BaseShadow :: startdClaimedCB , this , jobAd )"		671214	2		=			
ANR	671895	Identifier	cb		671214	0					
ANR	671896	Expression	"( DCMsgCallback :: CppFunction ) & BaseShadow :: startdClaimedCB , this , jobAd"		671214	1					
ANR	671897	CastExpression	( DCMsgCallback :: CppFunction ) & BaseShadow :: startdClaimedCB		671214	0					
ANR	671898	CastTarget	DCMsgCallback :: CppFunction		671214	0					
ANR	671899	UnaryOperationExpression	& BaseShadow :: startdClaimedCB		671214	1					
ANR	671900	UnaryOperator	&		671214	0					
ANR	671901	Identifier	BaseShadow :: startdClaimedCB		671214	1					
ANR	671902	Expression	"this , jobAd"		671214	1					
ANR	671903	Identifier	this		671214	0					
ANR	671904	Identifier	jobAd		671214	1					
ANR	671905	ExpressionStatement	"startd -> asyncRequestOpportunisticClaim ( jobAd , ""description"" , daemonCore -> InfoCommandSinfulString ( ) , 1200 , 20 , 100 , cb )"	255:2:8059:8321	671214	7	True				
ANR	671906	CallExpression	"startd -> asyncRequestOpportunisticClaim ( jobAd , ""description"" , daemonCore -> InfoCommandSinfulString ( ) , 1200 , 20 , 100 , cb )"		671214	0					
ANR	671907	Callee	startd -> asyncRequestOpportunisticClaim		671214	0					
ANR	671908	PtrMemberAccess	startd -> asyncRequestOpportunisticClaim		671214	0					
ANR	671909	Identifier	startd		671214	0					
ANR	671910	Identifier	asyncRequestOpportunisticClaim		671214	1					
ANR	671911	ArgumentList	jobAd		671214	1					
ANR	671912	Argument	jobAd		671214	0					
ANR	671913	Identifier	jobAd		671214	0					
ANR	671914	Argument	"""description"""		671214	1					
ANR	671915	PrimaryExpression	"""description"""		671214	0					
ANR	671916	Argument	daemonCore -> InfoCommandSinfulString ( )		671214	2					
ANR	671917	CallExpression	daemonCore -> InfoCommandSinfulString ( )		671214	0					
ANR	671918	Callee	daemonCore -> InfoCommandSinfulString		671214	0					
ANR	671919	PtrMemberAccess	daemonCore -> InfoCommandSinfulString		671214	0					
ANR	671920	Identifier	daemonCore		671214	0					
ANR	671921	Identifier	InfoCommandSinfulString		671214	1					
ANR	671922	ArgumentList			671214	1					
ANR	671923	Argument	1200		671214	3					
ANR	671924	PrimaryExpression	1200		671214	0					
ANR	671925	Argument	20		671214	4					
ANR	671926	PrimaryExpression	20		671214	0					
ANR	671927	Argument	100		671214	5					
ANR	671928	PrimaryExpression	100		671214	0					
ANR	671929	Argument	cb		671214	6					
ANR	671930	Identifier	cb		671214	0					
ANR	671931	ReturnType	void		671214	1					
ANR	671932	Identifier	BaseShadow :: baseInit		671214	2					
ANR	671933	ParameterList	"ClassAd * job_ad , const char * schedd_addr , const char * xfer_queue_contact_info"		671214	3					
ANR	671934	Parameter	ClassAd * job_ad	89:22:2755:2769	671214	0	True				
ANR	671935	ParameterType	ClassAd *		671214	0					
ANR	671936	Identifier	job_ad		671214	1					
ANR	671937	Parameter	const char * schedd_addr	89:39:2772:2794	671214	1	True				
ANR	671938	ParameterType	const char *		671214	0					
ANR	671939	Identifier	schedd_addr		671214	1					
ANR	671940	Parameter	const char * xfer_queue_contact_info	89:64:2797:2831	671214	2	True				
ANR	671941	ParameterType	const char *		671214	0					
ANR	671942	Identifier	xfer_queue_contact_info		671214	1					
ANR	671943	CFGEntryNode	ENTRY		671214		True				
ANR	671944	CFGExitNode	EXIT		671214		True				
ANR	671945	Symbol	cluster		671214						
ANR	671946	Symbol	ATTR_JOB_IWD		671214						
ANR	671947	Symbol	m_RunAsNobody		671214						
ANR	671948	Symbol	tmp_name . Value		671214						
ANR	671949	Symbol	wantClaiming		671214						
ANR	671950	Symbol	claimid		671214						
ANR	671951	Symbol	this -> jobAd		671214						
ANR	671952	Symbol	gjid		671214						
ANR	671953	Symbol	tmp_addr		671214						
ANR	671954	Symbol	startd		671214						
ANR	671955	Symbol	job_updater		671214						
ANR	671956	Symbol	CondorVersion		671214						
ANR	671957	Symbol	PRIV_USER		671214						
ANR	671958	Symbol	scheddAddr		671214						
ANR	671959	Symbol	cdToIwd		671214						
ANR	671960	Symbol	ATTR_OWNER		671214						
ANR	671961	Symbol	* jobAd		671214						
ANR	671962	Symbol	schedd_addr		671214						
ANR	671963	Symbol	& BaseShadow :: startdClaimedCB		671214						
ANR	671964	Symbol	NULL		671214						
ANR	671965	Symbol	prev_run_bytes_sent		671214						
ANR	671966	Symbol	prev_run_bytes_recvd		671214						
ANR	671967	Symbol	display_dprintf_header		671214						
ANR	671968	Symbol	ATTR_JOB_RUNAS_OWNER		671214						
ANR	671969	Symbol	claimid . Value		671214						
ANR	671970	Symbol	this		671214						
ANR	671971	Symbol	TRUE		671214						
ANR	671972	Symbol	param_boolean		671214						
ANR	671973	Symbol	shadow_user_policy		671214						
ANR	671974	Symbol	tmp_name		671214						
ANR	671975	Symbol	xfer_queue_contact_info		671214						
ANR	671976	Symbol	jobAd -> Insert		671214						
ANR	671977	Symbol	DebugId		671214						
ANR	671978	Symbol	& gjid		671214						
ANR	671979	Symbol	* daemonCore		671214						
ANR	671980	Symbol	domain		671214						
ANR	671981	Symbol	true		671214						
ANR	671982	Symbol	ATTR_STARTD_IP_ADDR		671214						
ANR	671983	Symbol	init_user_ids		671214						
ANR	671984	Symbol	jobAd -> LookupString		671214						
ANR	671985	Symbol	ATTR_NT_DOMAIN		671214						
ANR	671986	Symbol	ATTR_PROC_ID		671214						
ANR	671987	Symbol	pending		671214						
ANR	671988	Symbol	D_JOB		671214						
ANR	671989	Symbol	jobAd		671214						
ANR	671990	Symbol	is_valid_sinful		671214						
ANR	671991	Symbol	ATTR_CLAIM_ID		671214						
ANR	671992	Symbol	job_ad		671214						
ANR	671993	Symbol	jobAd -> LookupFloat		671214						
ANR	671994	Symbol	domain . Value		671214						
ANR	671995	Symbol	ATTR_CLUSTER_ID		671214						
ANR	671996	Symbol	owner . Value		671214						
ANR	671997	Symbol	jobAd -> LookupInteger		671214						
ANR	671998	Symbol	daemonCore		671214						
ANR	671999	Symbol	startdSinful		671214						
ANR	672000	Symbol	ATTR_MY_ADDRESS		671214						
ANR	672001	Symbol	tmp_addr . Value		671214						
ANR	672002	Symbol	m_xfer_queue_contact_info		671214						
ANR	672003	Symbol	cb		671214						
ANR	672004	Symbol	owner		671214						
ANR	672005	Symbol	ATTR_BYTES_RECVD		671214						
ANR	672006	Symbol	daemonCore -> InfoCommandSinfulString		671214						
ANR	672007	Symbol	proc		671214						
ANR	672008	Symbol	DIR_DELIM_CHAR		671214						
ANR	672009	Symbol	D_ALWAYS		671214						
ANR	672010	Symbol	false		671214						
ANR	672011	Symbol	ATTR_CLAIM_STARTD		671214						
ANR	672012	Symbol	sendUpdatesToSchedd		671214						
ANR	672013	Symbol	* this		671214						
ANR	672014	Symbol	ATTR_GLOBAL_JOB_ID		671214						
ANR	672015	Symbol	US_TERMINATE_PENDING		671214						
ANR	672016	Symbol	startdSinful . Value		671214						
ANR	672017	Symbol	iwd		671214						
ANR	672018	Symbol	ATTR_BYTES_SENT		671214						
ANR	672019	Symbol	ATTR_TERMINATION_PENDING		671214						
ANR	672020	Symbol	FALSE		671214						
ANR	672021	Symbol	core_file_name		671214						
ANR	672022	Symbol	strdup		671214						
ANR	672023	Function	BaseShadow :: config	275:0:8637:9810							
ANR	672024	FunctionDef	BaseShadow :: config ()		672023	0					
ANR	672025	CompoundStatement		276:0:8663:9810	672023	0					
ANR	672026	IfStatement	if ( spool )		672023	0					
ANR	672027	Condition	spool	277:5:8670:8674	672023	0	True				
ANR	672028	Identifier	spool		672023	0					
ANR	672029	ExpressionStatement	free ( spool )	277:12:8677:8688	672023	1	True				
ANR	672030	CallExpression	free ( spool )		672023	0					
ANR	672031	Callee	free		672023	0					
ANR	672032	Identifier	free		672023	0					
ANR	672033	ArgumentList	spool		672023	1					
ANR	672034	Argument	spool		672023	0					
ANR	672035	Identifier	spool		672023	0					
ANR	672036	ExpressionStatement	"spool = param ( ""SPOOL"" )"	278:1:8691:8713	672023	1	True				
ANR	672037	AssignmentExpression	"spool = param ( ""SPOOL"" )"		672023	0		=			
ANR	672038	Identifier	spool		672023	0					
ANR	672039	CallExpression	"param ( ""SPOOL"" )"		672023	1					
ANR	672040	Callee	param		672023	0					
ANR	672041	Identifier	param		672023	0					
ANR	672042	ArgumentList	"""SPOOL"""		672023	1					
ANR	672043	Argument	"""SPOOL"""		672023	0					
ANR	672044	PrimaryExpression	"""SPOOL"""		672023	0					
ANR	672045	IfStatement	if ( ! spool )		672023	2					
ANR	672046	Condition	! spool	279:5:8720:8725	672023	0	True				
ANR	672047	UnaryOperationExpression	! spool		672023	0					
ANR	672048	UnaryOperator	!		672023	0					
ANR	672049	Identifier	spool		672023	1					
ANR	672050	CompoundStatement		4:13:64:64	672023	1					
ANR	672051	ExpressionStatement	"EXCEPT ( ""SPOOL not specified in config file."" )"	280:2:8732:8777	672023	0	True				
ANR	672052	CallExpression	"EXCEPT ( ""SPOOL not specified in config file."" )"		672023	0					
ANR	672053	Callee	EXCEPT		672023	0					
ANR	672054	Identifier	EXCEPT		672023	0					
ANR	672055	ArgumentList	"""SPOOL not specified in config file."""		672023	1					
ANR	672056	Argument	"""SPOOL not specified in config file."""		672023	0					
ANR	672057	PrimaryExpression	"""SPOOL not specified in config file."""		672023	0					
ANR	672058	IfStatement	if ( fsDomain )		672023	3					
ANR	672059	Condition	fsDomain	283:5:8788:8795	672023	0	True				
ANR	672060	Identifier	fsDomain		672023	0					
ANR	672061	ExpressionStatement	free ( fsDomain )	283:15:8798:8812	672023	1	True				
ANR	672062	CallExpression	free ( fsDomain )		672023	0					
ANR	672063	Callee	free		672023	0					
ANR	672064	Identifier	free		672023	0					
ANR	672065	ArgumentList	fsDomain		672023	1					
ANR	672066	Argument	fsDomain		672023	0					
ANR	672067	Identifier	fsDomain		672023	0					
ANR	672068	ExpressionStatement	"fsDomain = param ( ""FILESYSTEM_DOMAIN"" )"	284:1:8815:8854	672023	4	True				
ANR	672069	AssignmentExpression	"fsDomain = param ( ""FILESYSTEM_DOMAIN"" )"		672023	0		=			
ANR	672070	Identifier	fsDomain		672023	0					
ANR	672071	CallExpression	"param ( ""FILESYSTEM_DOMAIN"" )"		672023	1					
ANR	672072	Callee	param		672023	0					
ANR	672073	Identifier	param		672023	0					
ANR	672074	ArgumentList	"""FILESYSTEM_DOMAIN"""		672023	1					
ANR	672075	Argument	"""FILESYSTEM_DOMAIN"""		672023	0					
ANR	672076	PrimaryExpression	"""FILESYSTEM_DOMAIN"""		672023	0					
ANR	672077	IfStatement	if ( ! fsDomain )		672023	5					
ANR	672078	Condition	! fsDomain	285:5:8861:8869	672023	0	True				
ANR	672079	UnaryOperationExpression	! fsDomain		672023	0					
ANR	672080	UnaryOperator	!		672023	0					
ANR	672081	Identifier	fsDomain		672023	1					
ANR	672082	CompoundStatement		10:16:208:208	672023	1					
ANR	672083	ExpressionStatement	"EXCEPT ( ""FILESYSTEM_DOMAIN not specified in config file."" )"	286:2:8876:8933	672023	0	True				
ANR	672084	CallExpression	"EXCEPT ( ""FILESYSTEM_DOMAIN not specified in config file."" )"		672023	0					
ANR	672085	Callee	EXCEPT		672023	0					
ANR	672086	Identifier	EXCEPT		672023	0					
ANR	672087	ArgumentList	"""FILESYSTEM_DOMAIN not specified in config file."""		672023	1					
ANR	672088	Argument	"""FILESYSTEM_DOMAIN not specified in config file."""		672023	0					
ANR	672089	PrimaryExpression	"""FILESYSTEM_DOMAIN not specified in config file."""		672023	0					
ANR	672090	IfStatement	if ( uidDomain )		672023	6					
ANR	672091	Condition	uidDomain	289:5:8944:8952	672023	0	True				
ANR	672092	Identifier	uidDomain		672023	0					
ANR	672093	ExpressionStatement	free ( uidDomain )	289:16:8955:8970	672023	1	True				
ANR	672094	CallExpression	free ( uidDomain )		672023	0					
ANR	672095	Callee	free		672023	0					
ANR	672096	Identifier	free		672023	0					
ANR	672097	ArgumentList	uidDomain		672023	1					
ANR	672098	Argument	uidDomain		672023	0					
ANR	672099	Identifier	uidDomain		672023	0					
ANR	672100	ExpressionStatement	"uidDomain = param ( ""UID_DOMAIN"" )"	290:1:8973:9006	672023	7	True				
ANR	672101	AssignmentExpression	"uidDomain = param ( ""UID_DOMAIN"" )"		672023	0		=			
ANR	672102	Identifier	uidDomain		672023	0					
ANR	672103	CallExpression	"param ( ""UID_DOMAIN"" )"		672023	1					
ANR	672104	Callee	param		672023	0					
ANR	672105	Identifier	param		672023	0					
ANR	672106	ArgumentList	"""UID_DOMAIN"""		672023	1					
ANR	672107	Argument	"""UID_DOMAIN"""		672023	0					
ANR	672108	PrimaryExpression	"""UID_DOMAIN"""		672023	0					
ANR	672109	IfStatement	if ( ! uidDomain )		672023	8					
ANR	672110	Condition	! uidDomain	291:5:9013:9022	672023	0	True				
ANR	672111	UnaryOperationExpression	! uidDomain		672023	0					
ANR	672112	UnaryOperator	!		672023	0					
ANR	672113	Identifier	uidDomain		672023	1					
ANR	672114	CompoundStatement		16:17:361:361	672023	1					
ANR	672115	ExpressionStatement	"EXCEPT ( ""UID_DOMAIN not specified in config file."" )"	292:2:9029:9079	672023	0	True				
ANR	672116	CallExpression	"EXCEPT ( ""UID_DOMAIN not specified in config file."" )"		672023	0					
ANR	672117	Callee	EXCEPT		672023	0					
ANR	672118	Identifier	EXCEPT		672023	0					
ANR	672119	ArgumentList	"""UID_DOMAIN not specified in config file."""		672023	1					
ANR	672120	Argument	"""UID_DOMAIN not specified in config file."""		672023	0					
ANR	672121	PrimaryExpression	"""UID_DOMAIN not specified in config file."""		672023	0					
ANR	672122	ExpressionStatement	"reconnect_ceiling = param_integer ( ""RECONNECT_BACKOFF_CEILING"" , 300 )"	295:1:9086:9155	672023	9	True				
ANR	672123	AssignmentExpression	"reconnect_ceiling = param_integer ( ""RECONNECT_BACKOFF_CEILING"" , 300 )"		672023	0		=			
ANR	672124	Identifier	reconnect_ceiling		672023	0					
ANR	672125	CallExpression	"param_integer ( ""RECONNECT_BACKOFF_CEILING"" , 300 )"		672023	1					
ANR	672126	Callee	param_integer		672023	0					
ANR	672127	Identifier	param_integer		672023	0					
ANR	672128	ArgumentList	"""RECONNECT_BACKOFF_CEILING"""		672023	1					
ANR	672129	Argument	"""RECONNECT_BACKOFF_CEILING"""		672023	0					
ANR	672130	PrimaryExpression	"""RECONNECT_BACKOFF_CEILING"""		672023	0					
ANR	672131	Argument	300		672023	1					
ANR	672132	PrimaryExpression	300		672023	0					
ANR	672133	ExpressionStatement	reconnect_e_factor = 0.0	297:1:9159:9183	672023	10	True				
ANR	672134	AssignmentExpression	reconnect_e_factor = 0.0		672023	0		=			
ANR	672135	Identifier	reconnect_e_factor		672023	0					
ANR	672136	PrimaryExpression	0.0		672023	1					
ANR	672137	ExpressionStatement	"reconnect_e_factor = param_double ( ""RECONNECT_BACKOFF_FACTOR"" , 2.0 , 0.0 )"	298:1:9186:9259	672023	11	True				
ANR	672138	AssignmentExpression	"reconnect_e_factor = param_double ( ""RECONNECT_BACKOFF_FACTOR"" , 2.0 , 0.0 )"		672023	0		=			
ANR	672139	Identifier	reconnect_e_factor		672023	0					
ANR	672140	CallExpression	"param_double ( ""RECONNECT_BACKOFF_FACTOR"" , 2.0 , 0.0 )"		672023	1					
ANR	672141	Callee	param_double		672023	0					
ANR	672142	Identifier	param_double		672023	0					
ANR	672143	ArgumentList	"""RECONNECT_BACKOFF_FACTOR"""		672023	1					
ANR	672144	Argument	"""RECONNECT_BACKOFF_FACTOR"""		672023	0					
ANR	672145	PrimaryExpression	"""RECONNECT_BACKOFF_FACTOR"""		672023	0					
ANR	672146	Argument	2.0		672023	1					
ANR	672147	PrimaryExpression	2.0		672023	0					
ANR	672148	Argument	0.0		672023	2					
ANR	672149	PrimaryExpression	0.0		672023	0					
ANR	672150	IfStatement	if ( reconnect_e_factor < - 1e-4 || reconnect_e_factor > 1e-4 )		672023	12					
ANR	672151	Condition	reconnect_e_factor < - 1e-4 || reconnect_e_factor > 1e-4	299:5:9266:9320	672023	0	True				
ANR	672152	OrExpression	reconnect_e_factor < - 1e-4 || reconnect_e_factor > 1e-4		672023	0		||			
ANR	672153	RelationalExpression	reconnect_e_factor < - 1e-4		672023	0		<			
ANR	672154	Identifier	reconnect_e_factor		672023	0					
ANR	672155	UnaryOperationExpression	- 1e-4		672023	1					
ANR	672156	UnaryOperator	-		672023	0					
ANR	672157	PrimaryExpression	1e-4		672023	1					
ANR	672158	RelationalExpression	reconnect_e_factor > 1e-4		672023	1		>			
ANR	672159	Identifier	reconnect_e_factor		672023	0					
ANR	672160	PrimaryExpression	1e-4		672023	1					
ANR	672161	CompoundStatement		24:62:659:659	672023	1					
ANR	672162	ExpressionStatement	reconnect_e_factor = 2.0	300:5:9330:9354	672023	0	True				
ANR	672163	AssignmentExpression	reconnect_e_factor = 2.0		672023	0		=			
ANR	672164	Identifier	reconnect_e_factor		672023	0					
ANR	672165	PrimaryExpression	2.0		672023	1					
ANR	672166	ExpressionStatement	m_cleanup_retry_tid = - 1	303:1:9364:9388	672023	13	True				
ANR	672167	AssignmentExpression	m_cleanup_retry_tid = - 1		672023	0		=			
ANR	672168	Identifier	m_cleanup_retry_tid		672023	0					
ANR	672169	UnaryOperationExpression	- 1		672023	1					
ANR	672170	UnaryOperator	-		672023	0					
ANR	672171	PrimaryExpression	1		672023	1					
ANR	672172	ExpressionStatement	m_num_cleanup_retries = 0	304:1:9391:9416	672023	14	True				
ANR	672173	AssignmentExpression	m_num_cleanup_retries = 0		672023	0		=			
ANR	672174	Identifier	m_num_cleanup_retries		672023	0					
ANR	672175	PrimaryExpression	0		672023	1					
ANR	672176	ExpressionStatement	"m_max_cleanup_retries = param_integer ( ""SHADOW_MAX_JOB_CLEANUP_RETRIES"" , 5 )"	308:1:9583:9657	672023	15	True				
ANR	672177	AssignmentExpression	"m_max_cleanup_retries = param_integer ( ""SHADOW_MAX_JOB_CLEANUP_RETRIES"" , 5 )"		672023	0		=			
ANR	672178	Identifier	m_max_cleanup_retries		672023	0					
ANR	672179	CallExpression	"param_integer ( ""SHADOW_MAX_JOB_CLEANUP_RETRIES"" , 5 )"		672023	1					
ANR	672180	Callee	param_integer		672023	0					
ANR	672181	Identifier	param_integer		672023	0					
ANR	672182	ArgumentList	"""SHADOW_MAX_JOB_CLEANUP_RETRIES"""		672023	1					
ANR	672183	Argument	"""SHADOW_MAX_JOB_CLEANUP_RETRIES"""		672023	0					
ANR	672184	PrimaryExpression	"""SHADOW_MAX_JOB_CLEANUP_RETRIES"""		672023	0					
ANR	672185	Argument	5		672023	1					
ANR	672186	PrimaryExpression	5		672023	0					
ANR	672187	ExpressionStatement	"m_cleanup_retry_delay = param_integer ( ""SHADOW_JOB_CLEANUP_RETRY_DELAY"" , 30 )"	309:1:9660:9735	672023	16	True				
ANR	672188	AssignmentExpression	"m_cleanup_retry_delay = param_integer ( ""SHADOW_JOB_CLEANUP_RETRY_DELAY"" , 30 )"		672023	0		=			
ANR	672189	Identifier	m_cleanup_retry_delay		672023	0					
ANR	672190	CallExpression	"param_integer ( ""SHADOW_JOB_CLEANUP_RETRY_DELAY"" , 30 )"		672023	1					
ANR	672191	Callee	param_integer		672023	0					
ANR	672192	Identifier	param_integer		672023	0					
ANR	672193	ArgumentList	"""SHADOW_JOB_CLEANUP_RETRY_DELAY"""		672023	1					
ANR	672194	Argument	"""SHADOW_JOB_CLEANUP_RETRY_DELAY"""		672023	0					
ANR	672195	PrimaryExpression	"""SHADOW_JOB_CLEANUP_RETRY_DELAY"""		672023	0					
ANR	672196	Argument	30		672023	1					
ANR	672197	PrimaryExpression	30		672023	0					
ANR	672198	ExpressionStatement	"m_lazy_queue_update = param_boolean ( ""SHADOW_LAZY_QUEUE_UPDATE"" , true )"	311:1:9739:9808	672023	17	True				
ANR	672199	AssignmentExpression	"m_lazy_queue_update = param_boolean ( ""SHADOW_LAZY_QUEUE_UPDATE"" , true )"		672023	0		=			
ANR	672200	Identifier	m_lazy_queue_update		672023	0					
ANR	672201	CallExpression	"param_boolean ( ""SHADOW_LAZY_QUEUE_UPDATE"" , true )"		672023	1					
ANR	672202	Callee	param_boolean		672023	0					
ANR	672203	Identifier	param_boolean		672023	0					
ANR	672204	ArgumentList	"""SHADOW_LAZY_QUEUE_UPDATE"""		672023	1					
ANR	672205	Argument	"""SHADOW_LAZY_QUEUE_UPDATE"""		672023	0					
ANR	672206	PrimaryExpression	"""SHADOW_LAZY_QUEUE_UPDATE"""		672023	0					
ANR	672207	Argument	true		672023	1					
ANR	672208	Identifier	true		672023	0					
ANR	672209	ReturnType	void		672023	1					
ANR	672210	Identifier	BaseShadow :: config		672023	2					
ANR	672211	ParameterList			672023	3					
ANR	672212	CFGEntryNode	ENTRY		672023		True				
ANR	672213	CFGExitNode	EXIT		672023		True				
ANR	672214	Symbol	m_num_cleanup_retries		672023						
ANR	672215	Symbol	m_max_cleanup_retries		672023						
ANR	672216	Symbol	spool		672023						
ANR	672217	Symbol	m_lazy_queue_update		672023						
ANR	672218	Symbol	param_double		672023						
ANR	672219	Symbol	param_boolean		672023						
ANR	672220	Symbol	fsDomain		672023						
ANR	672221	Symbol	reconnect_ceiling		672023						
ANR	672222	Symbol	param		672023						
ANR	672223	Symbol	true		672023						
ANR	672224	Symbol	param_integer		672023						
ANR	672225	Symbol	m_cleanup_retry_tid		672023						
ANR	672226	Symbol	m_cleanup_retry_delay		672023						
ANR	672227	Symbol	uidDomain		672023						
ANR	672228	Symbol	reconnect_e_factor		672023						
ANR	672229	Function	BaseShadow :: cdToIwd	315:0:9814:10521							
ANR	672230	FunctionDef	BaseShadow :: cdToIwd ()		672229	0					
ANR	672231	CompoundStatement		315:26:9840:10521	672229	0					
ANR	672232	IdentifierDeclStatement	int iRet = 0 ;	316:1:9843:9854	672229	0	True				
ANR	672233	IdentifierDecl	iRet = 0		672229	0					
ANR	672234	IdentifierDeclType	int		672229	0					
ANR	672235	Identifier	iRet		672229	1					
ANR	672236	AssignmentExpression	iRet = 0		672229	2		=			
ANR	672237	Identifier	iRet		672229	0					
ANR	672238	PrimaryExpression	0		672229	1					
ANR	672239	IdentifierDeclStatement	priv_state p = PRIV_UNKNOWN ;	319:1:9880:9907	672229	1	True				
ANR	672240	IdentifierDecl	p = PRIV_UNKNOWN		672229	0					
ANR	672241	IdentifierDeclType	priv_state		672229	0					
ANR	672242	Identifier	p		672229	1					
ANR	672243	AssignmentExpression	p = PRIV_UNKNOWN		672229	2		=			
ANR	672244	Identifier	PRIV_UNKNOWN		672229	0					
ANR	672245	Identifier	PRIV_UNKNOWN		672229	1					
ANR	672246	IfStatement	if ( m_RunAsNobody )		672229	2					
ANR	672247	Condition	m_RunAsNobody	321:5:9916:9928	672229	0	True				
ANR	672248	Identifier	m_RunAsNobody		672229	0					
ANR	672249	ExpressionStatement	p = set_root_priv ( )	322:2:9933:9952	672229	1	True				
ANR	672250	AssignmentExpression	p = set_root_priv ( )		672229	0		=			
ANR	672251	Identifier	p		672229	0					
ANR	672252	CallExpression	set_root_priv ( )		672229	1					
ANR	672253	Callee	set_root_priv		672229	0					
ANR	672254	Identifier	set_root_priv		672229	0					
ANR	672255	ArgumentList			672229	1					
ANR	672256	IfStatement	if ( chdir ( iwd . Value ( ) ) < 0 )		672229	3					
ANR	672257	Condition	chdir ( iwd . Value ( ) ) < 0	325:5:9968:9989	672229	0	True				
ANR	672258	RelationalExpression	chdir ( iwd . Value ( ) ) < 0		672229	0		<			
ANR	672259	CallExpression	chdir ( iwd . Value ( ) )		672229	0					
ANR	672260	Callee	chdir		672229	0					
ANR	672261	Identifier	chdir		672229	0					
ANR	672262	ArgumentList	iwd . Value ( )		672229	1					
ANR	672263	Argument	iwd . Value ( )		672229	0					
ANR	672264	CallExpression	iwd . Value ( )		672229	0					
ANR	672265	Callee	iwd . Value		672229	0					
ANR	672266	MemberAccess	iwd . Value		672229	0					
ANR	672267	Identifier	iwd		672229	0					
ANR	672268	Identifier	Value		672229	1					
ANR	672269	ArgumentList			672229	1					
ANR	672270	PrimaryExpression	0		672229	1					
ANR	672271	CompoundStatement		16:2:301:321	672229	1					
ANR	672272	IdentifierDeclStatement	int chdir_errno = errno ;	326:2:9996:10019	672229	0	True				
ANR	672273	IdentifierDecl	chdir_errno = errno		672229	0					
ANR	672274	IdentifierDeclType	int		672229	0					
ANR	672275	Identifier	chdir_errno		672229	1					
ANR	672276	AssignmentExpression	chdir_errno = errno		672229	2		=			
ANR	672277	Identifier	errno		672229	0					
ANR	672278	Identifier	errno		672229	1					
ANR	672279	Statement	dprintf	327:2:10023:10029	672229	1	True				
ANR	672280	Statement	(	327:9:10030:10030	672229	2	True				
ANR	672281	Statement	D_ALWAYS	327:10:10031:10038	672229	3	True				
ANR	672282	Statement	","	327:18:10039:10039	672229	4	True				
ANR	672283	Statement	"""\\n\\nPath does not exist.\\n"""	327:20:10041:10068	672229	5	True				
ANR	672284	Statement	"""He who travels without bounds\\n"""	328:4:10074:10106	672229	6	True				
ANR	672285	Statement	"""Can't locate data.\\n\\n"""	329:4:10112:10135	672229	7	True				
ANR	672286	Statement	)	329:29:10137:10137	672229	8	True				
ANR	672287	ExpressionStatement		329:30:10138:10138	672229	9	True				
ANR	672288	IdentifierDeclStatement	MyString hold_reason ;	330:2:10142:10162	672229	10	True				
ANR	672289	IdentifierDecl	hold_reason		672229	0					
ANR	672290	IdentifierDeclType	MyString		672229	0					
ANR	672291	Identifier	hold_reason		672229	1					
ANR	672292	ExpressionStatement	"hold_reason . sprintf ( ""Cannot access initial working directory %s: %s"" , iwd . Value ( ) , strerror ( chdir_errno ) )"	331:2:10166:10293	672229	11	True				
ANR	672293	CallExpression	"hold_reason . sprintf ( ""Cannot access initial working directory %s: %s"" , iwd . Value ( ) , strerror ( chdir_errno ) )"		672229	0					
ANR	672294	Callee	hold_reason . sprintf		672229	0					
ANR	672295	MemberAccess	hold_reason . sprintf		672229	0					
ANR	672296	Identifier	hold_reason		672229	0					
ANR	672297	Identifier	sprintf		672229	1					
ANR	672298	ArgumentList	"""Cannot access initial working directory %s: %s"""		672229	1					
ANR	672299	Argument	"""Cannot access initial working directory %s: %s"""		672229	0					
ANR	672300	PrimaryExpression	"""Cannot access initial working directory %s: %s"""		672229	0					
ANR	672301	Argument	iwd . Value ( )		672229	1					
ANR	672302	CallExpression	iwd . Value ( )		672229	0					
ANR	672303	Callee	iwd . Value		672229	0					
ANR	672304	MemberAccess	iwd . Value		672229	0					
ANR	672305	Identifier	iwd		672229	0					
ANR	672306	Identifier	Value		672229	1					
ANR	672307	ArgumentList			672229	1					
ANR	672308	Argument	strerror ( chdir_errno )		672229	2					
ANR	672309	CallExpression	strerror ( chdir_errno )		672229	0					
ANR	672310	Callee	strerror		672229	0					
ANR	672311	Identifier	strerror		672229	0					
ANR	672312	ArgumentList	chdir_errno		672229	1					
ANR	672313	Argument	chdir_errno		672229	0					
ANR	672314	Identifier	chdir_errno		672229	0					
ANR	672315	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , hold_reason . Value ( ) )"	333:2:10297:10343	672229	12	True				
ANR	672316	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , hold_reason . Value ( ) )"		672229	0					
ANR	672317	Callee	dprintf		672229	0					
ANR	672318	Identifier	dprintf		672229	0					
ANR	672319	ArgumentList	D_ALWAYS		672229	1					
ANR	672320	Argument	D_ALWAYS		672229	0					
ANR	672321	Identifier	D_ALWAYS		672229	0					
ANR	672322	Argument	"""%s\\n"""		672229	1					
ANR	672323	PrimaryExpression	"""%s\\n"""		672229	0					
ANR	672324	Argument	hold_reason . Value ( )		672229	2					
ANR	672325	CallExpression	hold_reason . Value ( )		672229	0					
ANR	672326	Callee	hold_reason . Value		672229	0					
ANR	672327	MemberAccess	hold_reason . Value		672229	0					
ANR	672328	Identifier	hold_reason		672229	0					
ANR	672329	Identifier	Value		672229	1					
ANR	672330	ArgumentList			672229	1					
ANR	672331	ExpressionStatement	"holdJobAndExit ( hold_reason . Value ( ) , CONDOR_HOLD_CODE_IwdError , chdir_errno )"	334:2:10347:10420	672229	13	True				
ANR	672332	CallExpression	"holdJobAndExit ( hold_reason . Value ( ) , CONDOR_HOLD_CODE_IwdError , chdir_errno )"		672229	0					
ANR	672333	Callee	holdJobAndExit		672229	0					
ANR	672334	Identifier	holdJobAndExit		672229	0					
ANR	672335	ArgumentList	hold_reason . Value ( )		672229	1					
ANR	672336	Argument	hold_reason . Value ( )		672229	0					
ANR	672337	CallExpression	hold_reason . Value ( )		672229	0					
ANR	672338	Callee	hold_reason . Value		672229	0					
ANR	672339	MemberAccess	hold_reason . Value		672229	0					
ANR	672340	Identifier	hold_reason		672229	0					
ANR	672341	Identifier	Value		672229	1					
ANR	672342	ArgumentList			672229	1					
ANR	672343	Argument	CONDOR_HOLD_CODE_IwdError		672229	1					
ANR	672344	Identifier	CONDOR_HOLD_CODE_IwdError		672229	0					
ANR	672345	Argument	chdir_errno		672229	2					
ANR	672346	Identifier	chdir_errno		672229	0					
ANR	672347	ExpressionStatement	iRet = - 1	335:2:10424:10433	672229	14	True				
ANR	672348	AssignmentExpression	iRet = - 1		672229	0		=			
ANR	672349	Identifier	iRet		672229	0					
ANR	672350	UnaryOperationExpression	- 1		672229	1					
ANR	672351	UnaryOperator	-		672229	0					
ANR	672352	PrimaryExpression	1		672229	1					
ANR	672353	IfStatement	if ( m_RunAsNobody )		672229	4					
ANR	672354	Condition	m_RunAsNobody	339:6:10467:10479	672229	0	True				
ANR	672355	Identifier	m_RunAsNobody		672229	0					
ANR	672356	ExpressionStatement	set_priv ( p )	340:2:10485:10496	672229	1	True				
ANR	672357	CallExpression	set_priv ( p )		672229	0					
ANR	672358	Callee	set_priv		672229	0					
ANR	672359	Identifier	set_priv		672229	0					
ANR	672360	ArgumentList	p		672229	1					
ANR	672361	Argument	p		672229	0					
ANR	672362	Identifier	p		672229	0					
ANR	672363	ReturnStatement	return iRet ;	343:1:10508:10519	672229	5	True				
ANR	672364	Identifier	iRet		672229	0					
ANR	672365	ReturnType	int		672229	1					
ANR	672366	Identifier	BaseShadow :: cdToIwd		672229	2					
ANR	672367	ParameterList			672229	3					
ANR	672368	CFGEntryNode	ENTRY		672229		True				
ANR	672369	CFGExitNode	EXIT		672229		True				
ANR	672370	Symbol	iwd . Value		672229						
ANR	672371	Symbol	errno		672229						
ANR	672372	Symbol	m_RunAsNobody		672229						
ANR	672373	Symbol	iRet		672229						
ANR	672374	Symbol	D_ALWAYS		672229						
ANR	672375	Symbol	set_root_priv		672229						
ANR	672376	Symbol	chdir_errno		672229						
ANR	672377	Symbol	chdir		672229						
ANR	672378	Symbol	PRIV_UNKNOWN		672229						
ANR	672379	Symbol	hold_reason		672229						
ANR	672380	Symbol	p		672229						
ANR	672381	Symbol	strerror		672229						
ANR	672382	Symbol	hold_reason . Value		672229						
ANR	672383	Symbol	CONDOR_HOLD_CODE_IwdError		672229						
ANR	672384	Symbol	iwd		672229						
ANR	672385	Function	BaseShadow :: shutDown	347:0:10525:11218							
ANR	672386	FunctionDef	BaseShadow :: shutDown (int reason)		672385	0					
ANR	672387	CompoundStatement		349:0:10566:11218	672385	0					
ANR	672388	IfStatement	if ( ! getJobAd ( ) )		672385	0					
ANR	672389	Condition	! getJobAd ( )	351:6:10610:10620	672385	0	True				
ANR	672390	UnaryOperationExpression	! getJobAd ( )		672385	0					
ANR	672391	UnaryOperator	!		672385	0					
ANR	672392	CallExpression	getJobAd ( )		672385	1					
ANR	672393	Callee	getJobAd		672385	0					
ANR	672394	Identifier	getJobAd		672385	0					
ANR	672395	ArgumentList			672385	1					
ANR	672396	CompoundStatement		3:20:57:57	672385	1					
ANR	672397	ExpressionStatement	DC_Exit ( reason )	352:2:10628:10645	672385	0	True				
ANR	672398	CallExpression	DC_Exit ( reason )		672385	0					
ANR	672399	Callee	DC_Exit		672385	0					
ANR	672400	Identifier	DC_Exit		672385	0					
ANR	672401	ArgumentList	reason		672385	1					
ANR	672402	Argument	reason		672385	0					
ANR	672403	Identifier	reason		672385	0					
ANR	672404	IfStatement	if ( reason == JOB_EXCEPTION )		672385	1					
ANR	672405	Condition	reason == JOB_EXCEPTION	357:6:10785:10807	672385	0	True				
ANR	672406	EqualityExpression	reason == JOB_EXCEPTION		672385	0		==			
ANR	672407	Identifier	reason		672385	0					
ANR	672408	Identifier	JOB_EXCEPTION		672385	1					
ANR	672409	CompoundStatement		9:32:244:244	672385	1					
ANR	672410	ReturnStatement	return ;	358:2:10815:10821	672385	0	True				
ANR	672411	IfStatement	if ( reason == JOB_EXITED || reason == JOB_COREDUMPED )		672385	2					
ANR	672412	Condition	reason == JOB_EXITED || reason == JOB_COREDUMPED	363:5:10929:10976	672385	0	True				
ANR	672413	OrExpression	reason == JOB_EXITED || reason == JOB_COREDUMPED		672385	0		||			
ANR	672414	EqualityExpression	reason == JOB_EXITED		672385	0		==			
ANR	672415	Identifier	reason		672385	0					
ANR	672416	Identifier	JOB_EXITED		672385	1					
ANR	672417	EqualityExpression	reason == JOB_COREDUMPED		672385	1		==			
ANR	672418	Identifier	reason		672385	0					
ANR	672419	Identifier	JOB_COREDUMPED		672385	1					
ANR	672420	CompoundStatement		15:56:413:413	672385	1					
ANR	672421	ExpressionStatement	shadow_user_policy . checkAtExit ( )	364:2:10984:11016	672385	0	True				
ANR	672422	CallExpression	shadow_user_policy . checkAtExit ( )		672385	0					
ANR	672423	Callee	shadow_user_policy . checkAtExit		672385	0					
ANR	672424	MemberAccess	shadow_user_policy . checkAtExit		672385	0					
ANR	672425	Identifier	shadow_user_policy		672385	0					
ANR	672426	Identifier	checkAtExit		672385	1					
ANR	672427	ArgumentList			672385	1					
ANR	672428	ElseStatement	else		672385	0					
ANR	672429	CompoundStatement		19:6:531:531	672385	0					
ANR	672430	ExpressionStatement	evictJob ( reason )	370:2:11195:11213	672385	0	True				
ANR	672431	CallExpression	evictJob ( reason )		672385	0					
ANR	672432	Callee	evictJob		672385	0					
ANR	672433	Identifier	evictJob		672385	0					
ANR	672434	ArgumentList	reason		672385	1					
ANR	672435	Argument	reason		672385	0					
ANR	672436	Identifier	reason		672385	0					
ANR	672437	ReturnType	void		672385	1					
ANR	672438	Identifier	BaseShadow :: shutDown		672385	2					
ANR	672439	ParameterList	int reason		672385	3					
ANR	672440	Parameter	int reason	348:22:10552:10561	672385	0	True				
ANR	672441	ParameterType	int		672385	0					
ANR	672442	Identifier	reason		672385	1					
ANR	672443	CFGEntryNode	ENTRY		672385		True				
ANR	672444	CFGExitNode	EXIT		672385		True				
ANR	672445	Symbol	JOB_EXITED		672385						
ANR	672446	Symbol	reason		672385						
ANR	672447	Symbol	JOB_COREDUMPED		672385						
ANR	672448	Symbol	shadow_user_policy		672385						
ANR	672449	Symbol	getJobAd		672385						
ANR	672450	Symbol	JOB_EXCEPTION		672385						
ANR	672451	Function	BaseShadow :: nextReconnectDelay	375:0:11222:11485							
ANR	672452	FunctionDef	BaseShadow :: nextReconnectDelay (int attempts)		672451	0					
ANR	672453	CompoundStatement		377:0:11273:11485	672451	0					
ANR	672454	IfStatement	if ( ! attempts )		672451	0					
ANR	672455	Condition	! attempts	378:5:11280:11289	672451	0	True				
ANR	672456	UnaryOperationExpression	! attempts		672451	0					
ANR	672457	UnaryOperator	!		672451	0					
ANR	672458	Identifier	attempts		672451	1					
ANR	672459	CompoundStatement		2:18:19:19	672451	1					
ANR	672460	ReturnStatement	return 0 ;	380:2:11332:11340	672451	0	True				
ANR	672461	PrimaryExpression	0		672451	0					
ANR	672462	Statement	int	382:1:11346:11348	672451	1	True				
ANR	672463	Statement	n	382:5:11350:11350	672451	2	True				
ANR	672464	Statement	=	382:7:11352:11352	672451	3	True				
ANR	672465	Statement	(	382:9:11354:11354	672451	4	True				
ANR	672466	Statement	int	382:10:11355:11357	672451	5	True				
ANR	672467	Statement	)	382:13:11358:11358	672451	6	True				
ANR	672468	Statement	ceil	382:14:11359:11362	672451	7	True				
ANR	672469	Statement	(	382:18:11363:11363	672451	8	True				
ANR	672470	Statement	::	382:19:11364:11365	672451	9	True				
ANR	672471	Statement	pow	382:21:11366:11368	672451	10	True				
ANR	672472	Statement	(	382:24:11369:11369	672451	11	True				
ANR	672473	Statement	reconnect_e_factor	382:25:11370:11387	672451	12	True				
ANR	672474	Statement	","	382:43:11388:11388	672451	13	True				
ANR	672475	Statement	(	382:45:11390:11390	672451	14	True				
ANR	672476	Statement	attempts	382:46:11391:11398	672451	15	True				
ANR	672477	Statement	+	382:54:11399:11399	672451	16	True				
ANR	672478	Statement	2	382:55:11400:11400	672451	17	True				
ANR	672479	Statement	)	382:56:11401:11401	672451	18	True				
ANR	672480	Statement	)	382:57:11402:11402	672451	19	True				
ANR	672481	Statement	)	382:58:11403:11403	672451	20	True				
ANR	672482	ExpressionStatement		382:59:11404:11404	672451	21	True				
ANR	672483	IfStatement	if ( n > reconnect_ceiling || n < 0 )		672451	22					
ANR	672484	Condition	n > reconnect_ceiling || n < 0	383:5:11411:11440	672451	0	True				
ANR	672485	OrExpression	n > reconnect_ceiling || n < 0		672451	0		||			
ANR	672486	RelationalExpression	n > reconnect_ceiling		672451	0		>			
ANR	672487	Identifier	n		672451	0					
ANR	672488	Identifier	reconnect_ceiling		672451	1					
ANR	672489	RelationalExpression	n < 0		672451	1		<			
ANR	672490	Identifier	n		672451	0					
ANR	672491	PrimaryExpression	0		672451	1					
ANR	672492	CompoundStatement		7:38:170:170	672451	1					
ANR	672493	ExpressionStatement	n = reconnect_ceiling	384:2:11448:11469	672451	0	True				
ANR	672494	AssignmentExpression	n = reconnect_ceiling		672451	0		=			
ANR	672495	Identifier	n		672451	0					
ANR	672496	Identifier	reconnect_ceiling		672451	1					
ANR	672497	ReturnStatement	return n ;	386:1:11475:11483	672451	23	True				
ANR	672498	Identifier	n		672451	0					
ANR	672499	ReturnType	int		672451	1					
ANR	672500	Identifier	BaseShadow :: nextReconnectDelay		672451	2					
ANR	672501	ParameterList	int attempts		672451	3					
ANR	672502	Parameter	int attempts	376:32:11258:11269	672451	0	True				
ANR	672503	ParameterType	int		672451	0					
ANR	672504	Identifier	attempts		672451	1					
ANR	672505	CFGEntryNode	ENTRY		672451		True				
ANR	672506	CFGExitNode	EXIT		672451		True				
ANR	672507	Symbol	reconnect_ceiling		672451						
ANR	672508	Symbol	n		672451						
ANR	672509	Symbol	attempts		672451						
ANR	672510	Function	BaseShadow :: reconnectFailed	390:0:11489:11809							
ANR	672511	FunctionDef	BaseShadow :: reconnectFailed (const char * reason)		672510	0					
ANR	672512	CompoundStatement		392:0:11544:11809	672510	0					
ANR	672513	ExpressionStatement	"dprintf ( D_ALWAYS , ""Reconnect FAILED: %s\\n"" , reason )"	395:1:11662:11715	672510	0	True				
ANR	672514	CallExpression	"dprintf ( D_ALWAYS , ""Reconnect FAILED: %s\\n"" , reason )"		672510	0					
ANR	672515	Callee	dprintf		672510	0					
ANR	672516	Identifier	dprintf		672510	0					
ANR	672517	ArgumentList	D_ALWAYS		672510	1					
ANR	672518	Argument	D_ALWAYS		672510	0					
ANR	672519	Identifier	D_ALWAYS		672510	0					
ANR	672520	Argument	"""Reconnect FAILED: %s\\n"""		672510	1					
ANR	672521	PrimaryExpression	"""Reconnect FAILED: %s\\n"""		672510	0					
ANR	672522	Argument	reason		672510	2					
ANR	672523	Identifier	reason		672510	0					
ANR	672524	ExpressionStatement	logReconnectFailedEvent ( reason )	397:1:11720:11753	672510	1	True				
ANR	672525	CallExpression	logReconnectFailedEvent ( reason )		672510	0					
ANR	672526	Callee	logReconnectFailedEvent		672510	0					
ANR	672527	Identifier	logReconnectFailedEvent		672510	0					
ANR	672528	ArgumentList	reason		672510	1					
ANR	672529	Argument	reason		672510	0					
ANR	672530	Identifier	reason		672510	0					
ANR	672531	ExpressionStatement	DC_Exit ( JOB_SHOULD_REQUEUE )	400:1:11778:11807	672510	2	True				
ANR	672532	CallExpression	DC_Exit ( JOB_SHOULD_REQUEUE )		672510	0					
ANR	672533	Callee	DC_Exit		672510	0					
ANR	672534	Identifier	DC_Exit		672510	0					
ANR	672535	ArgumentList	JOB_SHOULD_REQUEUE		672510	1					
ANR	672536	Argument	JOB_SHOULD_REQUEUE		672510	0					
ANR	672537	Identifier	JOB_SHOULD_REQUEUE		672510	0					
ANR	672538	ReturnType	void		672510	1					
ANR	672539	Identifier	BaseShadow :: reconnectFailed		672510	2					
ANR	672540	ParameterList	const char * reason		672510	3					
ANR	672541	Parameter	const char * reason	391:29:11523:11540	672510	0	True				
ANR	672542	ParameterType	const char *		672510	0					
ANR	672543	Identifier	reason		672510	1					
ANR	672544	CFGEntryNode	ENTRY		672510		True				
ANR	672545	CFGExitNode	EXIT		672510		True				
ANR	672546	Symbol	reason		672510						
ANR	672547	Symbol	JOB_SHOULD_REQUEUE		672510						
ANR	672548	Symbol	D_ALWAYS		672510						
ANR	672549	Function	BaseShadow :: holdJob	404:0:11813:12708							
ANR	672550	FunctionDef	"BaseShadow :: holdJob (const char * reason , int hold_reason_code , int hold_reason_subcode)"		672549	0					
ANR	672551	CompoundStatement		406:0:11907:12708	672549	0					
ANR	672552	ExpressionStatement	"dprintf ( D_ALWAYS , ""Job %d.%d going into Hold state (code %d,%d): %s\\n"" , getCluster ( ) , getProc ( ) , hold_reason_code , hold_reason_subcode , reason )"	407:1:11910:12059	672549	0	True				
ANR	672553	CallExpression	"dprintf ( D_ALWAYS , ""Job %d.%d going into Hold state (code %d,%d): %s\\n"" , getCluster ( ) , getProc ( ) , hold_reason_code , hold_reason_subcode , reason )"		672549	0					
ANR	672554	Callee	dprintf		672549	0					
ANR	672555	Identifier	dprintf		672549	0					
ANR	672556	ArgumentList	D_ALWAYS		672549	1					
ANR	672557	Argument	D_ALWAYS		672549	0					
ANR	672558	Identifier	D_ALWAYS		672549	0					
ANR	672559	Argument	"""Job %d.%d going into Hold state (code %d,%d): %s\\n"""		672549	1					
ANR	672560	PrimaryExpression	"""Job %d.%d going into Hold state (code %d,%d): %s\\n"""		672549	0					
ANR	672561	Argument	getCluster ( )		672549	2					
ANR	672562	CallExpression	getCluster ( )		672549	0					
ANR	672563	Callee	getCluster		672549	0					
ANR	672564	Identifier	getCluster		672549	0					
ANR	672565	ArgumentList			672549	1					
ANR	672566	Argument	getProc ( )		672549	3					
ANR	672567	CallExpression	getProc ( )		672549	0					
ANR	672568	Callee	getProc		672549	0					
ANR	672569	Identifier	getProc		672549	0					
ANR	672570	ArgumentList			672549	1					
ANR	672571	Argument	hold_reason_code		672549	4					
ANR	672572	Identifier	hold_reason_code		672549	0					
ANR	672573	Argument	hold_reason_subcode		672549	5					
ANR	672574	Identifier	hold_reason_subcode		672549	0					
ANR	672575	Argument	reason		672549	6					
ANR	672576	Identifier	reason		672549	0					
ANR	672577	IfStatement	if ( ! jobAd )		672549	1					
ANR	672578	Condition	! jobAd	410:5:12067:12073	672549	0	True				
ANR	672579	UnaryOperationExpression	! jobAd		672549	0					
ANR	672580	UnaryOperator	!		672549	0					
ANR	672581	Identifier	jobAd		672549	1					
ANR	672582	CompoundStatement		5:15:169:169	672549	1					
ANR	672583	ExpressionStatement	"dprintf ( D_ALWAYS , ""In HoldJob() w/ NULL JobAd!"" )"	411:2:12081:12131	672549	0	True				
ANR	672584	CallExpression	"dprintf ( D_ALWAYS , ""In HoldJob() w/ NULL JobAd!"" )"		672549	0					
ANR	672585	Callee	dprintf		672549	0					
ANR	672586	Identifier	dprintf		672549	0					
ANR	672587	ArgumentList	D_ALWAYS		672549	1					
ANR	672588	Argument	D_ALWAYS		672549	0					
ANR	672589	Identifier	D_ALWAYS		672549	0					
ANR	672590	Argument	"""In HoldJob() w/ NULL JobAd!"""		672549	1					
ANR	672591	PrimaryExpression	"""In HoldJob() w/ NULL JobAd!"""		672549	0					
ANR	672592	ExpressionStatement	DC_Exit ( JOB_SHOULD_HOLD )	412:2:12135:12161	672549	1	True				
ANR	672593	CallExpression	DC_Exit ( JOB_SHOULD_HOLD )		672549	0					
ANR	672594	Callee	DC_Exit		672549	0					
ANR	672595	Identifier	DC_Exit		672549	0					
ANR	672596	ArgumentList	JOB_SHOULD_HOLD		672549	1					
ANR	672597	Argument	JOB_SHOULD_HOLD		672549	0					
ANR	672598	Identifier	JOB_SHOULD_HOLD		672549	0					
ANR	672599	ExpressionStatement	cleanUp ( )	416:1:12214:12223	672549	2	True				
ANR	672600	CallExpression	cleanUp ( )		672549	0					
ANR	672601	Callee	cleanUp		672549	0					
ANR	672602	Identifier	cleanUp		672549	0					
ANR	672603	ArgumentList			672549	1					
ANR	672604	ExpressionStatement	"jobAd -> Assign ( ATTR_HOLD_REASON , reason )"	419:1:12262:12303	672549	3	True				
ANR	672605	CallExpression	"jobAd -> Assign ( ATTR_HOLD_REASON , reason )"		672549	0					
ANR	672606	Callee	jobAd -> Assign		672549	0					
ANR	672607	PtrMemberAccess	jobAd -> Assign		672549	0					
ANR	672608	Identifier	jobAd		672549	0					
ANR	672609	Identifier	Assign		672549	1					
ANR	672610	ArgumentList	ATTR_HOLD_REASON		672549	1					
ANR	672611	Argument	ATTR_HOLD_REASON		672549	0					
ANR	672612	Identifier	ATTR_HOLD_REASON		672549	0					
ANR	672613	Argument	reason		672549	1					
ANR	672614	Identifier	reason		672549	0					
ANR	672615	ExpressionStatement	"jobAd -> Assign ( ATTR_HOLD_REASON_CODE , hold_reason_code )"	420:1:12306:12362	672549	4	True				
ANR	672616	CallExpression	"jobAd -> Assign ( ATTR_HOLD_REASON_CODE , hold_reason_code )"		672549	0					
ANR	672617	Callee	jobAd -> Assign		672549	0					
ANR	672618	PtrMemberAccess	jobAd -> Assign		672549	0					
ANR	672619	Identifier	jobAd		672549	0					
ANR	672620	Identifier	Assign		672549	1					
ANR	672621	ArgumentList	ATTR_HOLD_REASON_CODE		672549	1					
ANR	672622	Argument	ATTR_HOLD_REASON_CODE		672549	0					
ANR	672623	Identifier	ATTR_HOLD_REASON_CODE		672549	0					
ANR	672624	Argument	hold_reason_code		672549	1					
ANR	672625	Identifier	hold_reason_code		672549	0					
ANR	672626	ExpressionStatement	"jobAd -> Assign ( ATTR_HOLD_REASON_SUBCODE , hold_reason_subcode )"	421:1:12365:12427	672549	5	True				
ANR	672627	CallExpression	"jobAd -> Assign ( ATTR_HOLD_REASON_SUBCODE , hold_reason_subcode )"		672549	0					
ANR	672628	Callee	jobAd -> Assign		672549	0					
ANR	672629	PtrMemberAccess	jobAd -> Assign		672549	0					
ANR	672630	Identifier	jobAd		672549	0					
ANR	672631	Identifier	Assign		672549	1					
ANR	672632	ArgumentList	ATTR_HOLD_REASON_SUBCODE		672549	1					
ANR	672633	Argument	ATTR_HOLD_REASON_SUBCODE		672549	0					
ANR	672634	Identifier	ATTR_HOLD_REASON_SUBCODE		672549	0					
ANR	672635	Argument	hold_reason_subcode		672549	1					
ANR	672636	Identifier	hold_reason_subcode		672549	0					
ANR	672637	ExpressionStatement	emailHoldEvent ( reason )	424:1:12477:12501	672549	6	True				
ANR	672638	CallExpression	emailHoldEvent ( reason )		672549	0					
ANR	672639	Callee	emailHoldEvent		672549	0					
ANR	672640	Identifier	emailHoldEvent		672549	0					
ANR	672641	ArgumentList	reason		672549	1					
ANR	672642	Argument	reason		672549	0					
ANR	672643	Identifier	reason		672549	0					
ANR	672644	IfStatement	if ( ! updateJobInQueue ( U_HOLD ) )		672549	7					
ANR	672645	Condition	! updateJobInQueue ( U_HOLD )	427:5:12568:12592	672549	0	True				
ANR	672646	UnaryOperationExpression	! updateJobInQueue ( U_HOLD )		672549	0					
ANR	672647	UnaryOperator	!		672549	0					
ANR	672648	CallExpression	updateJobInQueue ( U_HOLD )		672549	1					
ANR	672649	Callee	updateJobInQueue		672549	0					
ANR	672650	Identifier	updateJobInQueue		672549	0					
ANR	672651	ArgumentList	U_HOLD		672549	1					
ANR	672652	Argument	U_HOLD		672549	0					
ANR	672653	Identifier	U_HOLD		672549	0					
ANR	672654	CompoundStatement		22:33:688:688	672549	1					
ANR	672655	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to update job queue!\\n"" )"	429:2:12650:12702	672549	0	True				
ANR	672656	CallExpression	"dprintf ( D_ALWAYS , ""Failed to update job queue!\\n"" )"		672549	0					
ANR	672657	Callee	dprintf		672549	0					
ANR	672658	Identifier	dprintf		672549	0					
ANR	672659	ArgumentList	D_ALWAYS		672549	1					
ANR	672660	Argument	D_ALWAYS		672549	0					
ANR	672661	Identifier	D_ALWAYS		672549	0					
ANR	672662	Argument	"""Failed to update job queue!\\n"""		672549	1					
ANR	672663	PrimaryExpression	"""Failed to update job queue!\\n"""		672549	0					
ANR	672664	ReturnType	void		672549	1					
ANR	672665	Identifier	BaseShadow :: holdJob		672549	2					
ANR	672666	ParameterList	"const char * reason , int hold_reason_code , int hold_reason_subcode"		672549	3					
ANR	672667	Parameter	const char * reason	405:21:11839:11856	672549	0	True				
ANR	672668	ParameterType	const char *		672549	0					
ANR	672669	Identifier	reason		672549	1					
ANR	672670	Parameter	int hold_reason_code	405:41:11859:11878	672549	1	True				
ANR	672671	ParameterType	int		672549	0					
ANR	672672	Identifier	hold_reason_code		672549	1					
ANR	672673	Parameter	int hold_reason_subcode	405:63:11881:11903	672549	2	True				
ANR	672674	ParameterType	int		672549	0					
ANR	672675	Identifier	hold_reason_subcode		672549	1					
ANR	672676	CFGEntryNode	ENTRY		672549		True				
ANR	672677	CFGExitNode	EXIT		672549		True				
ANR	672678	Symbol	reason		672549						
ANR	672679	Symbol	hold_reason_code		672549						
ANR	672680	Symbol	U_HOLD		672549						
ANR	672681	Symbol	ATTR_HOLD_REASON_SUBCODE		672549						
ANR	672682	Symbol	D_ALWAYS		672549						
ANR	672683	Symbol	getProc		672549						
ANR	672684	Symbol	JOB_SHOULD_HOLD		672549						
ANR	672685	Symbol	jobAd		672549						
ANR	672686	Symbol	getCluster		672549						
ANR	672687	Symbol	ATTR_HOLD_REASON		672549						
ANR	672688	Symbol	ATTR_HOLD_REASON_CODE		672549						
ANR	672689	Symbol	hold_reason_subcode		672549						
ANR	672690	Symbol	updateJobInQueue		672549						
ANR	672691	Function	BaseShadow :: holdJobAndExit	434:0:12711:12948							
ANR	672692	FunctionDef	"BaseShadow :: holdJobAndExit (const char * reason , int hold_reason_code , int hold_reason_subcode)"		672691	0					
ANR	672693	CompoundStatement		436:0:12812:12948	672691	0					
ANR	672694	ExpressionStatement	"holdJob ( reason , hold_reason_code , hold_reason_subcode )"	437:1:12815:12867	672691	0	True				
ANR	672695	CallExpression	"holdJob ( reason , hold_reason_code , hold_reason_subcode )"		672691	0					
ANR	672696	Callee	holdJob		672691	0					
ANR	672697	Identifier	holdJob		672691	0					
ANR	672698	ArgumentList	reason		672691	1					
ANR	672699	Argument	reason		672691	0					
ANR	672700	Identifier	reason		672691	0					
ANR	672701	Argument	hold_reason_code		672691	1					
ANR	672702	Identifier	hold_reason_code		672691	0					
ANR	672703	Argument	hold_reason_subcode		672691	2					
ANR	672704	Identifier	hold_reason_subcode		672691	0					
ANR	672705	ExpressionStatement	DC_Exit ( JOB_SHOULD_HOLD )	440:1:12920:12946	672691	1	True				
ANR	672706	CallExpression	DC_Exit ( JOB_SHOULD_HOLD )		672691	0					
ANR	672707	Callee	DC_Exit		672691	0					
ANR	672708	Identifier	DC_Exit		672691	0					
ANR	672709	ArgumentList	JOB_SHOULD_HOLD		672691	1					
ANR	672710	Argument	JOB_SHOULD_HOLD		672691	0					
ANR	672711	Identifier	JOB_SHOULD_HOLD		672691	0					
ANR	672712	ReturnType	void		672691	1					
ANR	672713	Identifier	BaseShadow :: holdJobAndExit		672691	2					
ANR	672714	ParameterList	"const char * reason , int hold_reason_code , int hold_reason_subcode"		672691	3					
ANR	672715	Parameter	const char * reason	435:28:12744:12761	672691	0	True				
ANR	672716	ParameterType	const char *		672691	0					
ANR	672717	Identifier	reason		672691	1					
ANR	672718	Parameter	int hold_reason_code	435:48:12764:12783	672691	1	True				
ANR	672719	ParameterType	int		672691	0					
ANR	672720	Identifier	hold_reason_code		672691	1					
ANR	672721	Parameter	int hold_reason_subcode	435:70:12786:12808	672691	2	True				
ANR	672722	ParameterType	int		672691	0					
ANR	672723	Identifier	hold_reason_subcode		672691	1					
ANR	672724	CFGEntryNode	ENTRY		672691		True				
ANR	672725	CFGExitNode	EXIT		672691		True				
ANR	672726	Symbol	reason		672691						
ANR	672727	Symbol	hold_reason_code		672691						
ANR	672728	Symbol	hold_reason_subcode		672691						
ANR	672729	Symbol	JOB_SHOULD_HOLD		672691						
ANR	672730	Function	BaseShadow :: mockTerminateJob	443:0:12951:14187							
ANR	672731	FunctionDef	"BaseShadow :: mockTerminateJob (MyString exit_reason , bool exited_by_signal , int exit_code , int exit_signal , bool core_dumped)"		672730	0					
ANR	672732	CompoundStatement		447:0:13088:14187	672730	0					
ANR	672733	IfStatement	"if ( exit_reason == """" )"		672730	0					
ANR	672734	Condition	"exit_reason == """""	448:5:13095:13111	672730	0	True				
ANR	672735	EqualityExpression	"exit_reason == """""		672730	0		==			
ANR	672736	Identifier	exit_reason		672730	0					
ANR	672737	PrimaryExpression	""""""		672730	1					
ANR	672738	CompoundStatement		2:24:25:25	672730	1					
ANR	672739	ExpressionStatement	"exit_reason = ""Exited normally"""	449:2:13118:13149	672730	0	True				
ANR	672740	AssignmentExpression	"exit_reason = ""Exited normally"""		672730	0		=			
ANR	672741	Identifier	exit_reason		672730	0					
ANR	672742	PrimaryExpression	"""Exited normally"""		672730	1					
ANR	672743	Statement	dprintf	452:1:13157:13163	672730	1	True				
ANR	672744	Statement	(	452:8:13164:13164	672730	2	True				
ANR	672745	Statement	D_ALWAYS	452:10:13166:13173	672730	3	True				
ANR	672746	Statement	","	452:18:13174:13174	672730	4	True				
ANR	672747	Statement	"""Mock terminating job %d.%d: """	452:20:13176:13205	672730	5	True				
ANR	672748	Statement	"""exited_by_signal=%s, exit_code=%d OR exit_signal=%d, """	453:3:13210:13264	672730	6	True				
ANR	672749	Statement	"""core_dumped=%s, exit_reason=\\""%s\\""\\n"""	454:3:13269:13306	672730	7	True				
ANR	672750	Statement	","	454:41:13307:13307	672730	8	True				
ANR	672751	Statement	getCluster	455:4:13314:13323	672730	9	True				
ANR	672752	Statement	(	455:14:13324:13324	672730	10	True				
ANR	672753	Statement	)	455:15:13325:13325	672730	11	True				
ANR	672754	Statement	","	455:16:13326:13326	672730	12	True				
ANR	672755	Statement	getProc	456:4:13332:13338	672730	13	True				
ANR	672756	Statement	(	456:11:13339:13339	672730	14	True				
ANR	672757	Statement	)	456:12:13340:13340	672730	15	True				
ANR	672758	Statement	","	456:13:13341:13341	672730	16	True				
ANR	672759	Statement	exited_by_signal	457:4:13348:13363	672730	17	True				
ANR	672760	Statement	?	457:21:13365:13365	672730	18	True				
ANR	672761	Statement	"""TRUE"""	457:23:13367:13372	672730	19	True				
ANR	672762	Statement	:	457:30:13374:13374	672730	20	True				
ANR	672763	Statement	"""FALSE"""	457:32:13376:13382	672730	21	True				
ANR	672764	Statement	","	457:39:13383:13383	672730	22	True				
ANR	672765	Statement	exit_code	458:4:13389:13397	672730	23	True				
ANR	672766	Statement	","	458:13:13398:13398	672730	24	True				
ANR	672767	Statement	exit_signal	459:4:13404:13414	672730	25	True				
ANR	672768	Statement	","	459:15:13415:13415	672730	26	True				
ANR	672769	Statement	core_dumped	460:4:13421:13431	672730	27	True				
ANR	672770	Statement	?	460:16:13433:13433	672730	28	True				
ANR	672771	Statement	"""TRUE"""	460:18:13435:13440	672730	29	True				
ANR	672772	Statement	:	460:25:13442:13442	672730	30	True				
ANR	672773	Statement	"""FALSE"""	460:27:13444:13450	672730	31	True				
ANR	672774	Statement	","	460:34:13451:13451	672730	32	True				
ANR	672775	Statement	exit_reason	461:4:13457:13467	672730	33	True				
ANR	672776	Statement	.	461:15:13468:13468	672730	34	True				
ANR	672777	Statement	Value	461:16:13469:13473	672730	35	True				
ANR	672778	Statement	(	461:21:13474:13474	672730	36	True				
ANR	672779	Statement	)	461:22:13475:13475	672730	37	True				
ANR	672780	Statement	)	461:23:13476:13476	672730	38	True				
ANR	672781	ExpressionStatement		461:24:13477:13477	672730	39	True				
ANR	672782	IfStatement	if ( ! jobAd )		672730	40					
ANR	672783	Condition	! jobAd	463:5:13485:13491	672730	0	True				
ANR	672784	UnaryOperationExpression	! jobAd		672730	0					
ANR	672785	UnaryOperator	!		672730	0					
ANR	672786	Identifier	jobAd		672730	1					
ANR	672787	CompoundStatement		17:15:406:406	672730	1					
ANR	672788	Statement	dprintf	464:2:13499:13505	672730	0	True				
ANR	672789	Statement	(	464:9:13506:13506	672730	1	True				
ANR	672790	Statement	D_ALWAYS	464:10:13507:13514	672730	2	True				
ANR	672791	Statement	","	464:18:13515:13515	672730	3	True				
ANR	672792	Statement	"""BaseShadow::mockTerminateJob(): NULL JobAd! """	464:20:13517:13562	672730	4	True				
ANR	672793	Statement	"""Holding Job!"""	465:3:13567:13580	672730	5	True				
ANR	672794	Statement	)	465:17:13581:13581	672730	6	True				
ANR	672795	ExpressionStatement		465:18:13582:13582	672730	7	True				
ANR	672796	ExpressionStatement	DC_Exit ( JOB_SHOULD_HOLD )	466:2:13586:13612	672730	8	True				
ANR	672797	CallExpression	DC_Exit ( JOB_SHOULD_HOLD )		672730	0					
ANR	672798	Callee	DC_Exit		672730	0					
ANR	672799	Identifier	DC_Exit		672730	0					
ANR	672800	ArgumentList	JOB_SHOULD_HOLD		672730	1					
ANR	672801	Argument	JOB_SHOULD_HOLD		672730	0					
ANR	672802	Identifier	JOB_SHOULD_HOLD		672730	0					
ANR	672803	ExpressionStatement	"jobAd -> Assign ( ATTR_JOB_CORE_DUMPED , core_dumped )"	470:1:13675:13725	672730	41	True				
ANR	672804	CallExpression	"jobAd -> Assign ( ATTR_JOB_CORE_DUMPED , core_dumped )"		672730	0					
ANR	672805	Callee	jobAd -> Assign		672730	0					
ANR	672806	PtrMemberAccess	jobAd -> Assign		672730	0					
ANR	672807	Identifier	jobAd		672730	0					
ANR	672808	Identifier	Assign		672730	1					
ANR	672809	ArgumentList	ATTR_JOB_CORE_DUMPED		672730	1					
ANR	672810	Argument	ATTR_JOB_CORE_DUMPED		672730	0					
ANR	672811	Identifier	ATTR_JOB_CORE_DUMPED		672730	0					
ANR	672812	Argument	core_dumped		672730	1					
ANR	672813	Identifier	core_dumped		672730	0					
ANR	672814	ExpressionStatement	"jobAd -> Assign ( ATTR_ON_EXIT_BY_SIGNAL , exited_by_signal )"	471:1:13728:13785	672730	42	True				
ANR	672815	CallExpression	"jobAd -> Assign ( ATTR_ON_EXIT_BY_SIGNAL , exited_by_signal )"		672730	0					
ANR	672816	Callee	jobAd -> Assign		672730	0					
ANR	672817	PtrMemberAccess	jobAd -> Assign		672730	0					
ANR	672818	Identifier	jobAd		672730	0					
ANR	672819	Identifier	Assign		672730	1					
ANR	672820	ArgumentList	ATTR_ON_EXIT_BY_SIGNAL		672730	1					
ANR	672821	Argument	ATTR_ON_EXIT_BY_SIGNAL		672730	0					
ANR	672822	Identifier	ATTR_ON_EXIT_BY_SIGNAL		672730	0					
ANR	672823	Argument	exited_by_signal		672730	1					
ANR	672824	Identifier	exited_by_signal		672730	0					
ANR	672825	IfStatement	if ( exited_by_signal )		672730	43					
ANR	672826	Condition	exited_by_signal	473:5:13793:13808	672730	0	True				
ANR	672827	Identifier	exited_by_signal		672730	0					
ANR	672828	CompoundStatement		27:23:722:722	672730	1					
ANR	672829	ExpressionStatement	"jobAd -> Assign ( ATTR_ON_EXIT_SIGNAL , exit_signal )"	474:2:13815:13864	672730	0	True				
ANR	672830	CallExpression	"jobAd -> Assign ( ATTR_ON_EXIT_SIGNAL , exit_signal )"		672730	0					
ANR	672831	Callee	jobAd -> Assign		672730	0					
ANR	672832	PtrMemberAccess	jobAd -> Assign		672730	0					
ANR	672833	Identifier	jobAd		672730	0					
ANR	672834	Identifier	Assign		672730	1					
ANR	672835	ArgumentList	ATTR_ON_EXIT_SIGNAL		672730	1					
ANR	672836	Argument	ATTR_ON_EXIT_SIGNAL		672730	0					
ANR	672837	Identifier	ATTR_ON_EXIT_SIGNAL		672730	0					
ANR	672838	Argument	exit_signal		672730	1					
ANR	672839	Identifier	exit_signal		672730	0					
ANR	672840	ElseStatement	else		672730	0					
ANR	672841	CompoundStatement		29:8:785:785	672730	0					
ANR	672842	ExpressionStatement	"jobAd -> Assign ( ATTR_ON_EXIT_CODE , exit_code )"	476:2:13878:13923	672730	0	True				
ANR	672843	CallExpression	"jobAd -> Assign ( ATTR_ON_EXIT_CODE , exit_code )"		672730	0					
ANR	672844	Callee	jobAd -> Assign		672730	0					
ANR	672845	PtrMemberAccess	jobAd -> Assign		672730	0					
ANR	672846	Identifier	jobAd		672730	0					
ANR	672847	Identifier	Assign		672730	1					
ANR	672848	ArgumentList	ATTR_ON_EXIT_CODE		672730	1					
ANR	672849	Argument	ATTR_ON_EXIT_CODE		672730	0					
ANR	672850	Identifier	ATTR_ON_EXIT_CODE		672730	0					
ANR	672851	Argument	exit_code		672730	1					
ANR	672852	Identifier	exit_code		672730	0					
ANR	672853	ExpressionStatement	"jobAd -> Assign ( ATTR_EXIT_REASON , exit_reason )"	479:1:13930:13976	672730	44	True				
ANR	672854	CallExpression	"jobAd -> Assign ( ATTR_EXIT_REASON , exit_reason )"		672730	0					
ANR	672855	Callee	jobAd -> Assign		672730	0					
ANR	672856	PtrMemberAccess	jobAd -> Assign		672730	0					
ANR	672857	Identifier	jobAd		672730	0					
ANR	672858	Identifier	Assign		672730	1					
ANR	672859	ArgumentList	ATTR_EXIT_REASON		672730	1					
ANR	672860	Argument	ATTR_EXIT_REASON		672730	0					
ANR	672861	Identifier	ATTR_EXIT_REASON		672730	0					
ANR	672862	Argument	exit_reason		672730	1					
ANR	672863	Identifier	exit_reason		672730	0					
ANR	672864	IfStatement	if ( ! updateJobInQueue ( U_TERMINATE ) )		672730	45					
ANR	672865	Condition	! updateJobInQueue ( U_TERMINATE )	482:5:14043:14072	672730	0	True				
ANR	672866	UnaryOperationExpression	! updateJobInQueue ( U_TERMINATE )		672730	0					
ANR	672867	UnaryOperator	!		672730	0					
ANR	672868	CallExpression	updateJobInQueue ( U_TERMINATE )		672730	1					
ANR	672869	Callee	updateJobInQueue		672730	0					
ANR	672870	Identifier	updateJobInQueue		672730	0					
ANR	672871	ArgumentList	U_TERMINATE		672730	1					
ANR	672872	Argument	U_TERMINATE		672730	0					
ANR	672873	Identifier	U_TERMINATE		672730	0					
ANR	672874	CompoundStatement		36:38:987:987	672730	1					
ANR	672875	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to update job queue!\\n"" )"	484:2:14130:14182	672730	0	True				
ANR	672876	CallExpression	"dprintf ( D_ALWAYS , ""Failed to update job queue!\\n"" )"		672730	0					
ANR	672877	Callee	dprintf		672730	0					
ANR	672878	Identifier	dprintf		672730	0					
ANR	672879	ArgumentList	D_ALWAYS		672730	1					
ANR	672880	Argument	D_ALWAYS		672730	0					
ANR	672881	Identifier	D_ALWAYS		672730	0					
ANR	672882	Argument	"""Failed to update job queue!\\n"""		672730	1					
ANR	672883	PrimaryExpression	"""Failed to update job queue!\\n"""		672730	0					
ANR	672884	ReturnType	void		672730	1					
ANR	672885	Identifier	BaseShadow :: mockTerminateJob		672730	2					
ANR	672886	ParameterList	"MyString exit_reason , bool exited_by_signal , int exit_code , int exit_signal , bool core_dumped"		672730	3					
ANR	672887	Parameter	MyString exit_reason	444:30:12986:13005	672730	0	True				
ANR	672888	ParameterType	MyString		672730	0					
ANR	672889	Identifier	exit_reason		672730	1					
ANR	672890	Parameter	bool exited_by_signal	445:2:13011:13031	672730	1	True				
ANR	672891	ParameterType	bool		672730	0					
ANR	672892	Identifier	exited_by_signal		672730	1					
ANR	672893	Parameter	int exit_code	445:25:13034:13046	672730	2	True				
ANR	672894	ParameterType	int		672730	0					
ANR	672895	Identifier	exit_code		672730	1					
ANR	672896	Parameter	int exit_signal	445:40:13049:13063	672730	3	True				
ANR	672897	ParameterType	int		672730	0					
ANR	672898	Identifier	exit_signal		672730	1					
ANR	672899	Parameter	bool core_dumped	446:2:13069:13084	672730	4	True				
ANR	672900	ParameterType	bool		672730	0					
ANR	672901	Identifier	core_dumped		672730	1					
ANR	672902	CFGEntryNode	ENTRY		672730		True				
ANR	672903	CFGExitNode	EXIT		672730		True				
ANR	672904	Symbol	core_dumped		672730						
ANR	672905	Symbol	ATTR_JOB_CORE_DUMPED		672730						
ANR	672906	Symbol	ATTR_ON_EXIT_CODE		672730						
ANR	672907	Symbol	JOB_SHOULD_HOLD		672730						
ANR	672908	Symbol	D_ALWAYS		672730						
ANR	672909	Symbol	jobAd		672730						
ANR	672910	Symbol	ATTR_ON_EXIT_BY_SIGNAL		672730						
ANR	672911	Symbol	exit_signal		672730						
ANR	672912	Symbol	exit_reason		672730						
ANR	672913	Symbol	ATTR_EXIT_REASON		672730						
ANR	672914	Symbol	U_TERMINATE		672730						
ANR	672915	Symbol	updateJobInQueue		672730						
ANR	672916	Symbol	exit_code		672730						
ANR	672917	Symbol	ATTR_ON_EXIT_SIGNAL		672730						
ANR	672918	Symbol	exited_by_signal		672730						
ANR	672919	Function	BaseShadow :: removeJobPre	489:0:14191:15091							
ANR	672920	FunctionDef	BaseShadow :: removeJobPre (const char * reason)		672919	0					
ANR	672921	CompoundStatement		490:0:14243:15091	672919	0					
ANR	672922	IfStatement	if ( ! jobAd )		672919	0					
ANR	672923	Condition	! jobAd	491:5:14250:14256	672919	0	True				
ANR	672924	UnaryOperationExpression	! jobAd		672919	0					
ANR	672925	UnaryOperator	!		672919	0					
ANR	672926	Identifier	jobAd		672919	1					
ANR	672927	CompoundStatement		2:15:16:16	672919	1					
ANR	672928	ExpressionStatement	"dprintf ( D_ALWAYS , ""In removeJob() w/ NULL JobAd!"" )"	492:2:14264:14316	672919	0	True				
ANR	672929	CallExpression	"dprintf ( D_ALWAYS , ""In removeJob() w/ NULL JobAd!"" )"		672919	0					
ANR	672930	Callee	dprintf		672919	0					
ANR	672931	Identifier	dprintf		672919	0					
ANR	672932	ArgumentList	D_ALWAYS		672919	1					
ANR	672933	Argument	D_ALWAYS		672919	0					
ANR	672934	Identifier	D_ALWAYS		672919	0					
ANR	672935	Argument	"""In removeJob() w/ NULL JobAd!"""		672919	1					
ANR	672936	PrimaryExpression	"""In removeJob() w/ NULL JobAd!"""		672919	0					
ANR	672937	ExpressionStatement	"dprintf ( D_ALWAYS , ""Job %d.%d is being removed: %s\\n"" , getCluster ( ) , getProc ( ) , reason )"	494:1:14322:14415	672919	1	True				
ANR	672938	CallExpression	"dprintf ( D_ALWAYS , ""Job %d.%d is being removed: %s\\n"" , getCluster ( ) , getProc ( ) , reason )"		672919	0					
ANR	672939	Callee	dprintf		672919	0					
ANR	672940	Identifier	dprintf		672919	0					
ANR	672941	ArgumentList	D_ALWAYS		672919	1					
ANR	672942	Argument	D_ALWAYS		672919	0					
ANR	672943	Identifier	D_ALWAYS		672919	0					
ANR	672944	Argument	"""Job %d.%d is being removed: %s\\n"""		672919	1					
ANR	672945	PrimaryExpression	"""Job %d.%d is being removed: %s\\n"""		672919	0					
ANR	672946	Argument	getCluster ( )		672919	2					
ANR	672947	CallExpression	getCluster ( )		672919	0					
ANR	672948	Callee	getCluster		672919	0					
ANR	672949	Identifier	getCluster		672919	0					
ANR	672950	ArgumentList			672919	1					
ANR	672951	Argument	getProc ( )		672919	3					
ANR	672952	CallExpression	getProc ( )		672919	0					
ANR	672953	Callee	getProc		672919	0					
ANR	672954	Identifier	getProc		672919	0					
ANR	672955	ArgumentList			672919	1					
ANR	672956	Argument	reason		672919	4					
ANR	672957	Identifier	reason		672919	0					
ANR	672958	ExpressionStatement	cleanUp ( )	498:1:14464:14473	672919	2	True				
ANR	672959	CallExpression	cleanUp ( )		672919	0					
ANR	672960	Callee	cleanUp		672919	0					
ANR	672961	Identifier	cleanUp		672919	0					
ANR	672962	ArgumentList			672919	1					
ANR	672963	IdentifierDeclStatement	int size = strlen ( reason ) + strlen ( ATTR_REMOVE_REASON ) + 4 ;	501:1:14511:14573	672919	3	True				
ANR	672964	IdentifierDecl	size = strlen ( reason ) + strlen ( ATTR_REMOVE_REASON ) + 4		672919	0					
ANR	672965	IdentifierDeclType	int		672919	0					
ANR	672966	Identifier	size		672919	1					
ANR	672967	AssignmentExpression	size = strlen ( reason ) + strlen ( ATTR_REMOVE_REASON ) + 4		672919	2		=			
ANR	672968	Identifier	size		672919	0					
ANR	672969	AdditiveExpression	strlen ( reason ) + strlen ( ATTR_REMOVE_REASON ) + 4		672919	1		+			
ANR	672970	CallExpression	strlen ( reason )		672919	0					
ANR	672971	Callee	strlen		672919	0					
ANR	672972	Identifier	strlen		672919	0					
ANR	672973	ArgumentList	reason		672919	1					
ANR	672974	Argument	reason		672919	0					
ANR	672975	Identifier	reason		672919	0					
ANR	672976	AdditiveExpression	strlen ( ATTR_REMOVE_REASON ) + 4		672919	1		+			
ANR	672977	CallExpression	strlen ( ATTR_REMOVE_REASON )		672919	0					
ANR	672978	Callee	strlen		672919	0					
ANR	672979	Identifier	strlen		672919	0					
ANR	672980	ArgumentList	ATTR_REMOVE_REASON		672919	1					
ANR	672981	Argument	ATTR_REMOVE_REASON		672919	0					
ANR	672982	Identifier	ATTR_REMOVE_REASON		672919	0					
ANR	672983	PrimaryExpression	4		672919	1					
ANR	672984	IdentifierDeclStatement	char * buf = ( char * ) malloc ( size * sizeof ( char ) ) ;	502:1:14576:14624	672919	4	True				
ANR	672985	IdentifierDecl	* buf = ( char * ) malloc ( size * sizeof ( char ) )		672919	0					
ANR	672986	IdentifierDeclType	char *		672919	0					
ANR	672987	Identifier	buf		672919	1					
ANR	672988	AssignmentExpression	* buf = ( char * ) malloc ( size * sizeof ( char ) )		672919	2		=			
ANR	672989	Identifier	buf		672919	0					
ANR	672990	CastExpression	( char * ) malloc ( size * sizeof ( char ) )		672919	1					
ANR	672991	CastTarget	char *		672919	0					
ANR	672992	CallExpression	malloc ( size * sizeof ( char ) )		672919	1					
ANR	672993	Callee	malloc		672919	0					
ANR	672994	Identifier	malloc		672919	0					
ANR	672995	ArgumentList	size * sizeof ( char )		672919	1					
ANR	672996	Argument	size * sizeof ( char )		672919	0					
ANR	672997	MultiplicativeExpression	size * sizeof ( char )		672919	0		*			
ANR	672998	Identifier	size		672919	0					
ANR	672999	SizeofExpression	sizeof ( char )		672919	1					
ANR	673000	Sizeof	sizeof		672919	0					
ANR	673001	SizeofOperand	char		672919	1					
ANR	673002	IfStatement	if ( ! buf )		672919	5					
ANR	673003	Condition	! buf	503:5:14631:14635	672919	0	True				
ANR	673004	UnaryOperationExpression	! buf		672919	0					
ANR	673005	UnaryOperator	!		672919	0					
ANR	673006	Identifier	buf		672919	1					
ANR	673007	CompoundStatement		14:13:395:395	672919	1					
ANR	673008	ExpressionStatement	"EXCEPT ( ""Out of memory!"" )"	504:2:14643:14669	672919	0	True				
ANR	673009	CallExpression	"EXCEPT ( ""Out of memory!"" )"		672919	0					
ANR	673010	Callee	EXCEPT		672919	0					
ANR	673011	Identifier	EXCEPT		672919	0					
ANR	673012	ArgumentList	"""Out of memory!"""		672919	1					
ANR	673013	Argument	"""Out of memory!"""		672919	0					
ANR	673014	PrimaryExpression	"""Out of memory!"""		672919	0					
ANR	673015	ExpressionStatement	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_REMOVE_REASON , reason )"	506:1:14675:14730	672919	6	True				
ANR	673016	CallExpression	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_REMOVE_REASON , reason )"		672919	0					
ANR	673017	Callee	sprintf		672919	0					
ANR	673018	Identifier	sprintf		672919	0					
ANR	673019	ArgumentList	buf		672919	1					
ANR	673020	Argument	buf		672919	0					
ANR	673021	Identifier	buf		672919	0					
ANR	673022	Argument	"""%s=\\""%s\\"""""		672919	1					
ANR	673023	PrimaryExpression	"""%s=\\""%s\\"""""		672919	0					
ANR	673024	Argument	ATTR_REMOVE_REASON		672919	2					
ANR	673025	Identifier	ATTR_REMOVE_REASON		672919	0					
ANR	673026	Argument	reason		672919	3					
ANR	673027	Identifier	reason		672919	0					
ANR	673028	ExpressionStatement	jobAd -> Insert ( buf )	507:1:14733:14753	672919	7	True				
ANR	673029	CallExpression	jobAd -> Insert ( buf )		672919	0					
ANR	673030	Callee	jobAd -> Insert		672919	0					
ANR	673031	PtrMemberAccess	jobAd -> Insert		672919	0					
ANR	673032	Identifier	jobAd		672919	0					
ANR	673033	Identifier	Insert		672919	1					
ANR	673034	ArgumentList	buf		672919	1					
ANR	673035	Argument	buf		672919	0					
ANR	673036	Identifier	buf		672919	0					
ANR	673037	ExpressionStatement	free ( buf )	508:1:14756:14767	672919	8	True				
ANR	673038	CallExpression	free ( buf )		672919	0					
ANR	673039	Callee	free		672919	0					
ANR	673040	Identifier	free		672919	0					
ANR	673041	ArgumentList	buf		672919	1					
ANR	673042	Argument	buf		672919	0					
ANR	673043	Identifier	buf		672919	0					
ANR	673044	ExpressionStatement	emailRemoveEvent ( reason )	510:1:14771:14797	672919	9	True				
ANR	673045	CallExpression	emailRemoveEvent ( reason )		672919	0					
ANR	673046	Callee	emailRemoveEvent		672919	0					
ANR	673047	Identifier	emailRemoveEvent		672919	0					
ANR	673048	ArgumentList	reason		672919	1					
ANR	673049	Argument	reason		672919	0					
ANR	673050	Identifier	reason		672919	0					
ANR	673051	IfStatement	if ( ! updateJobInQueue ( U_REMOVE ) )		672919	10					
ANR	673052	Condition	! updateJobInQueue ( U_REMOVE )	515:5:14950:14976	672919	0	True				
ANR	673053	UnaryOperationExpression	! updateJobInQueue ( U_REMOVE )		672919	0					
ANR	673054	UnaryOperator	!		672919	0					
ANR	673055	CallExpression	updateJobInQueue ( U_REMOVE )		672919	1					
ANR	673056	Callee	updateJobInQueue		672919	0					
ANR	673057	Identifier	updateJobInQueue		672919	0					
ANR	673058	ArgumentList	U_REMOVE		672919	1					
ANR	673059	Argument	U_REMOVE		672919	0					
ANR	673060	Identifier	U_REMOVE		672919	0					
ANR	673061	CompoundStatement		26:35:736:736	672919	1					
ANR	673062	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to update job queue!\\n"" )"	517:2:15034:15086	672919	0	True				
ANR	673063	CallExpression	"dprintf ( D_ALWAYS , ""Failed to update job queue!\\n"" )"		672919	0					
ANR	673064	Callee	dprintf		672919	0					
ANR	673065	Identifier	dprintf		672919	0					
ANR	673066	ArgumentList	D_ALWAYS		672919	1					
ANR	673067	Argument	D_ALWAYS		672919	0					
ANR	673068	Identifier	D_ALWAYS		672919	0					
ANR	673069	Argument	"""Failed to update job queue!\\n"""		672919	1					
ANR	673070	PrimaryExpression	"""Failed to update job queue!\\n"""		672919	0					
ANR	673071	ReturnType	void		672919	1					
ANR	673072	Identifier	BaseShadow :: removeJobPre		672919	2					
ANR	673073	ParameterList	const char * reason		672919	3					
ANR	673074	Parameter	const char * reason	489:31:14222:14239	672919	0	True				
ANR	673075	ParameterType	const char *		672919	0					
ANR	673076	Identifier	reason		672919	1					
ANR	673077	CFGEntryNode	ENTRY		672919		True				
ANR	673078	CFGExitNode	EXIT		672919		True				
ANR	673079	Symbol	reason		672919						
ANR	673080	Symbol	strlen		672919						
ANR	673081	Symbol	malloc		672919						
ANR	673082	Symbol	buf		672919						
ANR	673083	Symbol	size		672919						
ANR	673084	Symbol	updateJobInQueue		672919						
ANR	673085	Symbol	D_ALWAYS		672919						
ANR	673086	Symbol	getProc		672919						
ANR	673087	Symbol	jobAd		672919						
ANR	673088	Symbol	getCluster		672919						
ANR	673089	Symbol	ATTR_REMOVE_REASON		672919						
ANR	673090	Symbol	U_REMOVE		672919						
ANR	673091	Function	BaseShadow :: removeJob	521:0:15094:15228							
ANR	673092	FunctionDef	BaseShadow :: removeJob (const char * reason)		673091	0					
ANR	673093	CompoundStatement		522:0:15143:15228	673091	0					
ANR	673094	ExpressionStatement	this -> removeJobPre ( reason )	523:1:15146:15172	673091	0	True				
ANR	673095	CallExpression	this -> removeJobPre ( reason )		673091	0					
ANR	673096	Callee	this -> removeJobPre		673091	0					
ANR	673097	PtrMemberAccess	this -> removeJobPre		673091	0					
ANR	673098	Identifier	this		673091	0					
ANR	673099	Identifier	removeJobPre		673091	1					
ANR	673100	ArgumentList	reason		673091	1					
ANR	673101	Argument	reason		673091	0					
ANR	673102	Identifier	reason		673091	0					
ANR	673103	ExpressionStatement	DC_Exit ( JOB_SHOULD_REMOVE )	526:1:15198:15226	673091	1	True				
ANR	673104	CallExpression	DC_Exit ( JOB_SHOULD_REMOVE )		673091	0					
ANR	673105	Callee	DC_Exit		673091	0					
ANR	673106	Identifier	DC_Exit		673091	0					
ANR	673107	ArgumentList	JOB_SHOULD_REMOVE		673091	1					
ANR	673108	Argument	JOB_SHOULD_REMOVE		673091	0					
ANR	673109	Identifier	JOB_SHOULD_REMOVE		673091	0					
ANR	673110	ReturnType	void		673091	1					
ANR	673111	Identifier	BaseShadow :: removeJob		673091	2					
ANR	673112	ParameterList	const char * reason		673091	3					
ANR	673113	Parameter	const char * reason	521:28:15122:15139	673091	0	True				
ANR	673114	ParameterType	const char *		673091	0					
ANR	673115	Identifier	reason		673091	1					
ANR	673116	CFGEntryNode	ENTRY		673091		True				
ANR	673117	CFGExitNode	EXIT		673091		True				
ANR	673118	Symbol	reason		673091						
ANR	673119	Symbol	this		673091						
ANR	673120	Symbol	JOB_SHOULD_REMOVE		673091						
ANR	673121	Function	BaseShadow :: retryJobCleanup	529:0:15231:15938							
ANR	673122	FunctionDef	BaseShadow :: retryJobCleanup ()		673121	0					
ANR	673123	CompoundStatement		531:0:15272:15938	673121	0					
ANR	673124	ExpressionStatement	m_num_cleanup_retries ++	532:1:15275:15298	673121	0	True				
ANR	673125	PostIncDecOperationExpression	m_num_cleanup_retries ++		673121	0					
ANR	673126	Identifier	m_num_cleanup_retries		673121	0					
ANR	673127	IncDec	++		673121	1					
ANR	673128	IfStatement	if ( m_num_cleanup_retries > m_max_cleanup_retries )		673121	1					
ANR	673129	Condition	m_num_cleanup_retries > m_max_cleanup_retries	533:5:15305:15349	673121	0	True				
ANR	673130	RelationalExpression	m_num_cleanup_retries > m_max_cleanup_retries		673121	0		>			
ANR	673131	Identifier	m_num_cleanup_retries		673121	0					
ANR	673132	Identifier	m_max_cleanup_retries		673121	1					
ANR	673133	CompoundStatement		3:52:79:79	673121	1					
ANR	673134	Statement	dprintf	534:2:15356:15362	673121	0	True				
ANR	673135	Statement	(	534:9:15363:15363	673121	1	True				
ANR	673136	Statement	D_ALWAYS	534:10:15364:15371	673121	2	True				
ANR	673137	Statement	","	534:18:15372:15372	673121	3	True				
ANR	673138	Statement	"""Maximum number of job cleanup retry attempts """	535:10:15384:15430	673121	4	True				
ANR	673139	Statement	"""(SHADOW_MAX_JOB_CLEANUP_RETRIES=%d) reached"""	536:10:15442:15486	673121	5	True				
ANR	673140	Statement	"""; Forcing job requeue!\\n"""	537:10:15498:15523	673121	6	True				
ANR	673141	Statement	","	537:36:15524:15524	673121	7	True				
ANR	673142	Statement	m_max_cleanup_retries	538:10:15536:15556	673121	8	True				
ANR	673143	Statement	)	538:31:15557:15557	673121	9	True				
ANR	673144	ExpressionStatement		538:32:15558:15558	673121	10	True				
ANR	673145	ExpressionStatement	DC_Exit ( JOB_SHOULD_REQUEUE )	539:2:15562:15589	673121	11	True				
ANR	673146	CallExpression	DC_Exit ( JOB_SHOULD_REQUEUE )		673121	0					
ANR	673147	Callee	DC_Exit		673121	0					
ANR	673148	Identifier	DC_Exit		673121	0					
ANR	673149	ArgumentList	JOB_SHOULD_REQUEUE		673121	1					
ANR	673150	Argument	JOB_SHOULD_REQUEUE		673121	0					
ANR	673151	Identifier	JOB_SHOULD_REQUEUE		673121	0					
ANR	673152	ExpressionStatement	ASSERT ( m_cleanup_retry_tid == - 1 )	541:1:15595:15628	673121	2	True				
ANR	673153	CallExpression	ASSERT ( m_cleanup_retry_tid == - 1 )		673121	0					
ANR	673154	Callee	ASSERT		673121	0					
ANR	673155	Identifier	ASSERT		673121	0					
ANR	673156	ArgumentList	m_cleanup_retry_tid == - 1		673121	1					
ANR	673157	Argument	m_cleanup_retry_tid == - 1		673121	0					
ANR	673158	EqualityExpression	m_cleanup_retry_tid == - 1		673121	0		==			
ANR	673159	Identifier	m_cleanup_retry_tid		673121	0					
ANR	673160	UnaryOperationExpression	- 1		673121	1					
ANR	673161	UnaryOperator	-		673121	0					
ANR	673162	PrimaryExpression	1		673121	1					
ANR	673163	ExpressionStatement	"m_cleanup_retry_tid = daemonCore -> Register_Timer ( m_cleanup_retry_delay , 0 , ( TimerHandlercpp ) & BaseShadow :: retryJobCleanupHandler , ""retry job cleanup"" , this )"	542:1:15631:15796	673121	3	True				
ANR	673164	AssignmentExpression	"m_cleanup_retry_tid = daemonCore -> Register_Timer ( m_cleanup_retry_delay , 0 , ( TimerHandlercpp ) & BaseShadow :: retryJobCleanupHandler , ""retry job cleanup"" , this )"		673121	0		=			
ANR	673165	Identifier	m_cleanup_retry_tid		673121	0					
ANR	673166	CallExpression	"daemonCore -> Register_Timer ( m_cleanup_retry_delay , 0 , ( TimerHandlercpp ) & BaseShadow :: retryJobCleanupHandler , ""retry job cleanup"" , this )"		673121	1					
ANR	673167	Callee	daemonCore -> Register_Timer		673121	0					
ANR	673168	PtrMemberAccess	daemonCore -> Register_Timer		673121	0					
ANR	673169	Identifier	daemonCore		673121	0					
ANR	673170	Identifier	Register_Timer		673121	1					
ANR	673171	ArgumentList	m_cleanup_retry_delay		673121	1					
ANR	673172	Argument	m_cleanup_retry_delay		673121	0					
ANR	673173	Identifier	m_cleanup_retry_delay		673121	0					
ANR	673174	Argument	0		673121	1					
ANR	673175	PrimaryExpression	0		673121	0					
ANR	673176	Argument	( TimerHandlercpp ) & BaseShadow :: retryJobCleanupHandler		673121	2					
ANR	673177	CastExpression	( TimerHandlercpp ) & BaseShadow :: retryJobCleanupHandler		673121	0					
ANR	673178	CastTarget	TimerHandlercpp		673121	0					
ANR	673179	UnaryOperationExpression	& BaseShadow :: retryJobCleanupHandler		673121	1					
ANR	673180	UnaryOperator	&		673121	0					
ANR	673181	Identifier	BaseShadow :: retryJobCleanupHandler		673121	1					
ANR	673182	Argument	"""retry job cleanup"""		673121	3					
ANR	673183	PrimaryExpression	"""retry job cleanup"""		673121	0					
ANR	673184	Argument	this		673121	4					
ANR	673185	Identifier	this		673121	0					
ANR	673186	Statement	dprintf	545:1:15799:15805	673121	4	True				
ANR	673187	Statement	(	545:8:15806:15806	673121	5	True				
ANR	673188	Statement	D_FULLDEBUG	545:9:15807:15817	673121	6	True				
ANR	673189	Statement	","	545:20:15818:15818	673121	7	True				
ANR	673190	Statement	"""Will retry job cleanup in """	545:22:15820:15847	673121	8	True				
ANR	673191	Statement	"""SHADOW_JOB_CLEANUP_RETRY_DELAY=%d seconds\\n"""	546:9:15858:15902	673121	9	True				
ANR	673192	Statement	","	546:54:15903:15903	673121	10	True				
ANR	673193	Statement	m_cleanup_retry_delay	547:9:15914:15934	673121	11	True				
ANR	673194	Statement	)	547:30:15935:15935	673121	12	True				
ANR	673195	ExpressionStatement		547:31:15936:15936	673121	13	True				
ANR	673196	ReturnType	void		673121	1					
ANR	673197	Identifier	BaseShadow :: retryJobCleanup		673121	2					
ANR	673198	ParameterList			673121	3					
ANR	673199	CFGEntryNode	ENTRY		673121		True				
ANR	673200	CFGExitNode	EXIT		673121		True				
ANR	673201	Symbol	m_num_cleanup_retries		673121						
ANR	673202	Symbol	m_max_cleanup_retries		673121						
ANR	673203	Symbol	JOB_SHOULD_REQUEUE		673121						
ANR	673204	Symbol	& BaseShadow :: retryJobCleanupHandler		673121						
ANR	673205	Symbol	* daemonCore		673121						
ANR	673206	Symbol	daemonCore		673121						
ANR	673207	Symbol	daemonCore -> Register_Timer		673121						
ANR	673208	Symbol	this		673121						
ANR	673209	Symbol	m_cleanup_retry_tid		673121						
ANR	673210	Symbol	m_cleanup_retry_delay		673121						
ANR	673211	Function	BaseShadow :: retryJobCleanupHandler	551:0:15942:16119							
ANR	673212	FunctionDef	BaseShadow :: retryJobCleanupHandler ()		673211	0					
ANR	673213	CompoundStatement		553:0:15989:16119	673211	0					
ANR	673214	ExpressionStatement	m_cleanup_retry_tid = - 1	554:1:15992:16016	673211	0	True				
ANR	673215	AssignmentExpression	m_cleanup_retry_tid = - 1		673211	0		=			
ANR	673216	Identifier	m_cleanup_retry_tid		673211	0					
ANR	673217	UnaryOperationExpression	- 1		673211	1					
ANR	673218	UnaryOperator	-		673211	0					
ANR	673219	PrimaryExpression	1		673211	1					
ANR	673220	ExpressionStatement	"dprintf ( D_ALWAYS , ""Retrying job cleanup, calling terminateJob()\\n"" )"	555:1:16019:16086	673211	1	True				
ANR	673221	CallExpression	"dprintf ( D_ALWAYS , ""Retrying job cleanup, calling terminateJob()\\n"" )"		673211	0					
ANR	673222	Callee	dprintf		673211	0					
ANR	673223	Identifier	dprintf		673211	0					
ANR	673224	ArgumentList	D_ALWAYS		673211	1					
ANR	673225	Argument	D_ALWAYS		673211	0					
ANR	673226	Identifier	D_ALWAYS		673211	0					
ANR	673227	Argument	"""Retrying job cleanup, calling terminateJob()\\n"""		673211	1					
ANR	673228	PrimaryExpression	"""Retrying job cleanup, calling terminateJob()\\n"""		673211	0					
ANR	673229	ExpressionStatement	terminateJob ( )	556:1:16089:16103	673211	2	True				
ANR	673230	CallExpression	terminateJob ( )		673211	0					
ANR	673231	Callee	terminateJob		673211	0					
ANR	673232	Identifier	terminateJob		673211	0					
ANR	673233	ArgumentList			673211	1					
ANR	673234	ReturnStatement	return TRUE ;	557:1:16106:16117	673211	3	True				
ANR	673235	Identifier	TRUE		673211	0					
ANR	673236	ReturnType	int		673211	1					
ANR	673237	Identifier	BaseShadow :: retryJobCleanupHandler		673211	2					
ANR	673238	ParameterList			673211	3					
ANR	673239	CFGEntryNode	ENTRY		673211		True				
ANR	673240	CFGExitNode	EXIT		673211		True				
ANR	673241	Symbol	D_ALWAYS		673211						
ANR	673242	Symbol	TRUE		673211						
ANR	673243	Symbol	m_cleanup_retry_tid		673211						
ANR	673244	Function	BaseShadow :: terminateJob	560:0:16122:21364							
ANR	673245	FunctionDef	BaseShadow :: terminateJob (update_style_t kind)		673244	0					
ANR	673246	CompoundStatement		562:0:16214:21364	673244	0					
ANR	673247	IdentifierDeclStatement	int reason ;	563:1:16217:16227	673244	0	True				
ANR	673248	IdentifierDecl	reason		673244	0					
ANR	673249	IdentifierDeclType	int		673244	0					
ANR	673250	Identifier	reason		673244	1					
ANR	673251	IdentifierDeclStatement	bool signaled ;	564:1:16230:16243	673244	1	True				
ANR	673252	IdentifierDecl	signaled		673244	0					
ANR	673253	IdentifierDeclType	bool		673244	0					
ANR	673254	Identifier	signaled		673244	1					
ANR	673255	IdentifierDeclStatement	MyString str ;	565:1:16246:16258	673244	2	True				
ANR	673256	IdentifierDecl	str		673244	0					
ANR	673257	IdentifierDeclType	MyString		673244	0					
ANR	673258	Identifier	str		673244	1					
ANR	673259	IfStatement	if ( ! jobAd )		673244	3					
ANR	673260	Condition	! jobAd	567:5:16266:16272	673244	0	True				
ANR	673261	UnaryOperationExpression	! jobAd		673244	0					
ANR	673262	UnaryOperator	!		673244	0					
ANR	673263	Identifier	jobAd		673244	1					
ANR	673264	CompoundStatement		6:15:61:61	673244	1					
ANR	673265	ExpressionStatement	"dprintf ( D_ALWAYS , ""In terminateJob() w/ NULL JobAd!"" )"	568:2:16280:16335	673244	0	True				
ANR	673266	CallExpression	"dprintf ( D_ALWAYS , ""In terminateJob() w/ NULL JobAd!"" )"		673244	0					
ANR	673267	Callee	dprintf		673244	0					
ANR	673268	Identifier	dprintf		673244	0					
ANR	673269	ArgumentList	D_ALWAYS		673244	1					
ANR	673270	Argument	D_ALWAYS		673244	0					
ANR	673271	Identifier	D_ALWAYS		673244	0					
ANR	673272	Argument	"""In terminateJob() w/ NULL JobAd!"""		673244	1					
ANR	673273	PrimaryExpression	"""In terminateJob() w/ NULL JobAd!"""		673244	0					
ANR	673274	IfStatement	if ( kind == US_NORMAL )		673244	4					
ANR	673275	Condition	kind == US_NORMAL	573:5:16431:16447	673244	0	True				
ANR	673276	EqualityExpression	kind == US_NORMAL		673244	0		==			
ANR	673277	Identifier	kind		673244	0					
ANR	673278	Identifier	US_NORMAL		673244	1					
ANR	673279	CompoundStatement		12:24:235:235	673244	1					
ANR	673280	ExpressionStatement	"str . sprintf ( ""%s = TRUE"" , ATTR_TERMINATION_PENDING )"	574:2:16454:16504	673244	0	True				
ANR	673281	CallExpression	"str . sprintf ( ""%s = TRUE"" , ATTR_TERMINATION_PENDING )"		673244	0					
ANR	673282	Callee	str . sprintf		673244	0					
ANR	673283	MemberAccess	str . sprintf		673244	0					
ANR	673284	Identifier	str		673244	0					
ANR	673285	Identifier	sprintf		673244	1					
ANR	673286	ArgumentList	"""%s = TRUE"""		673244	1					
ANR	673287	Argument	"""%s = TRUE"""		673244	0					
ANR	673288	PrimaryExpression	"""%s = TRUE"""		673244	0					
ANR	673289	Argument	ATTR_TERMINATION_PENDING		673244	1					
ANR	673290	Identifier	ATTR_TERMINATION_PENDING		673244	0					
ANR	673291	ExpressionStatement	jobAd -> Insert ( str . Value ( ) )	575:2:16508:16534	673244	1	True				
ANR	673292	CallExpression	jobAd -> Insert ( str . Value ( ) )		673244	0					
ANR	673293	Callee	jobAd -> Insert		673244	0					
ANR	673294	PtrMemberAccess	jobAd -> Insert		673244	0					
ANR	673295	Identifier	jobAd		673244	0					
ANR	673296	Identifier	Insert		673244	1					
ANR	673297	ArgumentList	str . Value ( )		673244	1					
ANR	673298	Argument	str . Value ( )		673244	0					
ANR	673299	CallExpression	str . Value ( )		673244	0					
ANR	673300	Callee	str . Value		673244	0					
ANR	673301	MemberAccess	str . Value		673244	0					
ANR	673302	Identifier	str		673244	0					
ANR	673303	Identifier	Value		673244	1					
ANR	673304	ArgumentList			673244	1					
ANR	673305	IfStatement	if ( kind == US_TERMINATE_PENDING )		673244	5					
ANR	673306	Condition	kind == US_TERMINATE_PENDING	578:5:16545:16572	673244	0	True				
ANR	673307	EqualityExpression	kind == US_TERMINATE_PENDING		673244	0		==			
ANR	673308	Identifier	kind		673244	0					
ANR	673309	Identifier	US_TERMINATE_PENDING		673244	1					
ANR	673310	CompoundStatement		35:2:1217:1234	673244	1					
ANR	673311	IdentifierDeclStatement	int exited_by_signal = FALSE ;	594:2:17377:17405	673244	0	True				
ANR	673312	IdentifierDecl	exited_by_signal = FALSE		673244	0					
ANR	673313	IdentifierDeclType	int		673244	0					
ANR	673314	Identifier	exited_by_signal		673244	1					
ANR	673315	AssignmentExpression	exited_by_signal = FALSE		673244	2		=			
ANR	673316	Identifier	FALSE		673244	0					
ANR	673317	Identifier	FALSE		673244	1					
ANR	673318	IdentifierDeclStatement	int exit_signal = 0 ;	595:2:17409:17428	673244	1	True				
ANR	673319	IdentifierDecl	exit_signal = 0		673244	0					
ANR	673320	IdentifierDeclType	int		673244	0					
ANR	673321	Identifier	exit_signal		673244	1					
ANR	673322	AssignmentExpression	exit_signal = 0		673244	2		=			
ANR	673323	Identifier	exit_signal		673244	0					
ANR	673324	PrimaryExpression	0		673244	1					
ANR	673325	IdentifierDeclStatement	int exit_code = 0 ;	596:2:17432:17449	673244	2	True				
ANR	673326	IdentifierDecl	exit_code = 0		673244	0					
ANR	673327	IdentifierDeclType	int		673244	0					
ANR	673328	Identifier	exit_code		673244	1					
ANR	673329	AssignmentExpression	exit_code = 0		673244	2		=			
ANR	673330	Identifier	exit_code		673244	0					
ANR	673331	PrimaryExpression	0		673244	1					
ANR	673332	ExpressionStatement	"getJobAdExitedBySignal ( jobAd , exited_by_signal )"	598:2:17454:17501	673244	3	True				
ANR	673333	CallExpression	"getJobAdExitedBySignal ( jobAd , exited_by_signal )"		673244	0					
ANR	673334	Callee	getJobAdExitedBySignal		673244	0					
ANR	673335	Identifier	getJobAdExitedBySignal		673244	0					
ANR	673336	ArgumentList	jobAd		673244	1					
ANR	673337	Argument	jobAd		673244	0					
ANR	673338	Identifier	jobAd		673244	0					
ANR	673339	Argument	exited_by_signal		673244	1					
ANR	673340	Identifier	exited_by_signal		673244	0					
ANR	673341	IfStatement	if ( exited_by_signal == TRUE )		673244	4					
ANR	673342	Condition	exited_by_signal == TRUE	599:6:17509:17532	673244	0	True				
ANR	673343	EqualityExpression	exited_by_signal == TRUE		673244	0		==			
ANR	673344	Identifier	exited_by_signal		673244	0					
ANR	673345	Identifier	TRUE		673244	1					
ANR	673346	CompoundStatement		38:32:1320:1320	673244	1					
ANR	673347	ExpressionStatement	"getJobAdExitSignal ( jobAd , exit_signal )"	600:3:17540:17578	673244	0	True				
ANR	673348	CallExpression	"getJobAdExitSignal ( jobAd , exit_signal )"		673244	0					
ANR	673349	Callee	getJobAdExitSignal		673244	0					
ANR	673350	Identifier	getJobAdExitSignal		673244	0					
ANR	673351	ArgumentList	jobAd		673244	1					
ANR	673352	Argument	jobAd		673244	0					
ANR	673353	Identifier	jobAd		673244	0					
ANR	673354	Argument	exit_signal		673244	1					
ANR	673355	Identifier	exit_signal		673244	0					
ANR	673356	ElseStatement	else		673244	0					
ANR	673357	CompoundStatement		40:9:1374:1374	673244	0					
ANR	673358	ExpressionStatement	"getJobAdExitCode ( jobAd , exit_code )"	602:3:17594:17628	673244	0	True				
ANR	673359	CallExpression	"getJobAdExitCode ( jobAd , exit_code )"		673244	0					
ANR	673360	Callee	getJobAdExitCode		673244	0					
ANR	673361	Identifier	getJobAdExitCode		673244	0					
ANR	673362	ArgumentList	jobAd		673244	1					
ANR	673363	Argument	jobAd		673244	0					
ANR	673364	Identifier	jobAd		673244	0					
ANR	673365	Argument	exit_code		673244	1					
ANR	673366	Identifier	exit_code		673244	0					
ANR	673367	IfStatement	if ( exited_by_signal == TRUE )		673244	5					
ANR	673368	Condition	exited_by_signal == TRUE	605:6:17641:17664	673244	0	True				
ANR	673369	EqualityExpression	exited_by_signal == TRUE		673244	0		==			
ANR	673370	Identifier	exited_by_signal		673244	0					
ANR	673371	Identifier	TRUE		673244	1					
ANR	673372	CompoundStatement		44:32:1452:1452	673244	1					
ANR	673373	ExpressionStatement	reason = JOB_COREDUMPED	606:3:17672:17695	673244	0	True				
ANR	673374	AssignmentExpression	reason = JOB_COREDUMPED		673244	0		=			
ANR	673375	Identifier	reason		673244	0					
ANR	673376	Identifier	JOB_COREDUMPED		673244	1					
ANR	673377	ExpressionStatement	"str . sprintf ( ""%s = \\""%s\\"""" , ATTR_JOB_CORE_FILENAME , core_file_name )"	607:3:17700:17766	673244	1	True				
ANR	673378	CallExpression	"str . sprintf ( ""%s = \\""%s\\"""" , ATTR_JOB_CORE_FILENAME , core_file_name )"		673244	0					
ANR	673379	Callee	str . sprintf		673244	0					
ANR	673380	MemberAccess	str . sprintf		673244	0					
ANR	673381	Identifier	str		673244	0					
ANR	673382	Identifier	sprintf		673244	1					
ANR	673383	ArgumentList	"""%s = \\""%s\\"""""		673244	1					
ANR	673384	Argument	"""%s = \\""%s\\"""""		673244	0					
ANR	673385	PrimaryExpression	"""%s = \\""%s\\"""""		673244	0					
ANR	673386	Argument	ATTR_JOB_CORE_FILENAME		673244	1					
ANR	673387	Identifier	ATTR_JOB_CORE_FILENAME		673244	0					
ANR	673388	Argument	core_file_name		673244	2					
ANR	673389	Identifier	core_file_name		673244	0					
ANR	673390	ExpressionStatement	jobAd -> Insert ( str . Value ( ) )	608:3:17771:17797	673244	2	True				
ANR	673391	CallExpression	jobAd -> Insert ( str . Value ( ) )		673244	0					
ANR	673392	Callee	jobAd -> Insert		673244	0					
ANR	673393	PtrMemberAccess	jobAd -> Insert		673244	0					
ANR	673394	Identifier	jobAd		673244	0					
ANR	673395	Identifier	Insert		673244	1					
ANR	673396	ArgumentList	str . Value ( )		673244	1					
ANR	673397	Argument	str . Value ( )		673244	0					
ANR	673398	CallExpression	str . Value ( )		673244	0					
ANR	673399	Callee	str . Value		673244	0					
ANR	673400	MemberAccess	str . Value		673244	0					
ANR	673401	Identifier	str		673244	0					
ANR	673402	Identifier	Value		673244	1					
ANR	673403	ArgumentList			673244	1					
ANR	673404	ElseStatement	else		673244	0					
ANR	673405	CompoundStatement		48:9:1593:1593	673244	0					
ANR	673406	ExpressionStatement	reason = JOB_EXITED	610:3:17813:17832	673244	0	True				
ANR	673407	AssignmentExpression	reason = JOB_EXITED		673244	0		=			
ANR	673408	Identifier	reason		673244	0					
ANR	673409	Identifier	JOB_EXITED		673244	1					
ANR	673410	ExpressionStatement	"dprintf ( D_ALWAYS , ""Job %d.%d terminated: %s %d\\n"" , getCluster ( ) , getProc ( ) , exited_by_signal ? ""killed by signal"" : ""exited with status"" , exited_by_signal ? exit_signal : exit_code )"	613:2:17841:18036	673244	6	True				
ANR	673411	CallExpression	"dprintf ( D_ALWAYS , ""Job %d.%d terminated: %s %d\\n"" , getCluster ( ) , getProc ( ) , exited_by_signal ? ""killed by signal"" : ""exited with status"" , exited_by_signal ? exit_signal : exit_code )"		673244	0					
ANR	673412	Callee	dprintf		673244	0					
ANR	673413	Identifier	dprintf		673244	0					
ANR	673414	ArgumentList	D_ALWAYS		673244	1					
ANR	673415	Argument	D_ALWAYS		673244	0					
ANR	673416	Identifier	D_ALWAYS		673244	0					
ANR	673417	Argument	"""Job %d.%d terminated: %s %d\\n"""		673244	1					
ANR	673418	PrimaryExpression	"""Job %d.%d terminated: %s %d\\n"""		673244	0					
ANR	673419	Argument	getCluster ( )		673244	2					
ANR	673420	CallExpression	getCluster ( )		673244	0					
ANR	673421	Callee	getCluster		673244	0					
ANR	673422	Identifier	getCluster		673244	0					
ANR	673423	ArgumentList			673244	1					
ANR	673424	Argument	getProc ( )		673244	3					
ANR	673425	CallExpression	getProc ( )		673244	0					
ANR	673426	Callee	getProc		673244	0					
ANR	673427	Identifier	getProc		673244	0					
ANR	673428	ArgumentList			673244	1					
ANR	673429	Argument	"exited_by_signal ? ""killed by signal"" : ""exited with status"""		673244	4					
ANR	673430	ConditionalExpression	"exited_by_signal ? ""killed by signal"" : ""exited with status"""		673244	0					
ANR	673431	Condition	exited_by_signal		673244	0					
ANR	673432	Identifier	exited_by_signal		673244	0					
ANR	673433	PrimaryExpression	"""killed by signal"""		673244	1					
ANR	673434	PrimaryExpression	"""exited with status"""		673244	2					
ANR	673435	Argument	exited_by_signal ? exit_signal : exit_code		673244	5					
ANR	673436	ConditionalExpression	exited_by_signal ? exit_signal : exit_code		673244	0					
ANR	673437	Condition	exited_by_signal		673244	0					
ANR	673438	Identifier	exited_by_signal		673244	0					
ANR	673439	Identifier	exit_signal		673244	1					
ANR	673440	Identifier	exit_code		673244	2					
ANR	673441	ExpressionStatement	"logTerminateEvent ( reason , kind )"	619:2:18100:18133	673244	7	True				
ANR	673442	CallExpression	"logTerminateEvent ( reason , kind )"		673244	0					
ANR	673443	Callee	logTerminateEvent		673244	0					
ANR	673444	Identifier	logTerminateEvent		673244	0					
ANR	673445	ArgumentList	reason		673244	1					
ANR	673446	Argument	reason		673244	0					
ANR	673447	Identifier	reason		673244	0					
ANR	673448	Argument	kind		673244	1					
ANR	673449	Identifier	kind		673244	0					
ANR	673450	ExpressionStatement	"emailTerminateEvent ( reason , kind )"	622:2:18186:18221	673244	8	True				
ANR	673451	CallExpression	"emailTerminateEvent ( reason , kind )"		673244	0					
ANR	673452	Callee	emailTerminateEvent		673244	0					
ANR	673453	Identifier	emailTerminateEvent		673244	0					
ANR	673454	ArgumentList	reason		673244	1					
ANR	673455	Argument	reason		673244	0					
ANR	673456	Identifier	reason		673244	0					
ANR	673457	Argument	kind		673244	1					
ANR	673458	Identifier	kind		673244	0					
ANR	673459	ExpressionStatement	DC_Exit ( reason )	624:2:18226:18243	673244	9	True				
ANR	673460	CallExpression	DC_Exit ( reason )		673244	0					
ANR	673461	Callee	DC_Exit		673244	0					
ANR	673462	Identifier	DC_Exit		673244	0					
ANR	673463	ArgumentList	reason		673244	1					
ANR	673464	Argument	reason		673244	0					
ANR	673465	Identifier	reason		673244	0					
ANR	673466	ExpressionStatement	cleanUp ( )	630:1:18340:18349	673244	6	True				
ANR	673467	CallExpression	cleanUp ( )		673244	0					
ANR	673468	Callee	cleanUp		673244	0					
ANR	673469	Identifier	cleanUp		673244	0					
ANR	673470	ArgumentList			673244	1					
ANR	673471	ExpressionStatement	reason = getExitReason ( )	632:1:18353:18377	673244	7	True				
ANR	673472	AssignmentExpression	reason = getExitReason ( )		673244	0		=			
ANR	673473	Identifier	reason		673244	0					
ANR	673474	CallExpression	getExitReason ( )		673244	1					
ANR	673475	Callee	getExitReason		673244	0					
ANR	673476	Identifier	getExitReason		673244	0					
ANR	673477	ArgumentList			673244	1					
ANR	673478	ExpressionStatement	signaled = exitedBySignal ( )	633:1:18380:18407	673244	8	True				
ANR	673479	AssignmentExpression	signaled = exitedBySignal ( )		673244	0		=			
ANR	673480	Identifier	signaled		673244	0					
ANR	673481	CallExpression	exitedBySignal ( )		673244	1					
ANR	673482	Callee	exitedBySignal		673244	0					
ANR	673483	Identifier	exitedBySignal		673244	0					
ANR	673484	ArgumentList			673244	1					
ANR	673485	IfStatement	if ( reason == JOB_COREDUMPED )		673244	9					
ANR	673486	Condition	reason == JOB_COREDUMPED	637:5:18530:18553	673244	0	True				
ANR	673487	EqualityExpression	reason == JOB_COREDUMPED		673244	0		==			
ANR	673488	Identifier	reason		673244	0					
ANR	673489	Identifier	JOB_COREDUMPED		673244	1					
ANR	673490	CompoundStatement		76:32:2342:2342	673244	1					
ANR	673491	ExpressionStatement	"str . sprintf ( ""%s = \\""%s\\"""" , ATTR_JOB_CORE_FILENAME , getCoreName ( ) )"	638:2:18561:18626	673244	0	True				
ANR	673492	CallExpression	"str . sprintf ( ""%s = \\""%s\\"""" , ATTR_JOB_CORE_FILENAME , getCoreName ( ) )"		673244	0					
ANR	673493	Callee	str . sprintf		673244	0					
ANR	673494	MemberAccess	str . sprintf		673244	0					
ANR	673495	Identifier	str		673244	0					
ANR	673496	Identifier	sprintf		673244	1					
ANR	673497	ArgumentList	"""%s = \\""%s\\"""""		673244	1					
ANR	673498	Argument	"""%s = \\""%s\\"""""		673244	0					
ANR	673499	PrimaryExpression	"""%s = \\""%s\\"""""		673244	0					
ANR	673500	Argument	ATTR_JOB_CORE_FILENAME		673244	1					
ANR	673501	Identifier	ATTR_JOB_CORE_FILENAME		673244	0					
ANR	673502	Argument	getCoreName ( )		673244	2					
ANR	673503	CallExpression	getCoreName ( )		673244	0					
ANR	673504	Callee	getCoreName		673244	0					
ANR	673505	Identifier	getCoreName		673244	0					
ANR	673506	ArgumentList			673244	1					
ANR	673507	ExpressionStatement	jobAd -> Insert ( str . Value ( ) )	639:2:18630:18656	673244	1	True				
ANR	673508	CallExpression	jobAd -> Insert ( str . Value ( ) )		673244	0					
ANR	673509	Callee	jobAd -> Insert		673244	0					
ANR	673510	PtrMemberAccess	jobAd -> Insert		673244	0					
ANR	673511	Identifier	jobAd		673244	0					
ANR	673512	Identifier	Insert		673244	1					
ANR	673513	ArgumentList	str . Value ( )		673244	1					
ANR	673514	Argument	str . Value ( )		673244	0					
ANR	673515	CallExpression	str . Value ( )		673244	0					
ANR	673516	Callee	str . Value		673244	0					
ANR	673517	MemberAccess	str . Value		673244	0					
ANR	673518	Identifier	str		673244	0					
ANR	673519	Identifier	Value		673244	1					
ANR	673520	ArgumentList			673244	1					
ANR	673521	IdentifierDeclStatement	int last_ckpt_time = 0 ;	643:4:18705:18727	673244	10	True				
ANR	673522	IdentifierDecl	last_ckpt_time = 0		673244	0					
ANR	673523	IdentifierDeclType	int		673244	0					
ANR	673524	Identifier	last_ckpt_time		673244	1					
ANR	673525	AssignmentExpression	last_ckpt_time = 0		673244	2		=			
ANR	673526	Identifier	last_ckpt_time		673244	0					
ANR	673527	PrimaryExpression	0		673244	1					
ANR	673528	ExpressionStatement	"jobAd -> LookupInteger ( ATTR_LAST_CKPT_TIME , last_ckpt_time )"	644:4:18733:18790	673244	11	True				
ANR	673529	CallExpression	"jobAd -> LookupInteger ( ATTR_LAST_CKPT_TIME , last_ckpt_time )"		673244	0					
ANR	673530	Callee	jobAd -> LookupInteger		673244	0					
ANR	673531	PtrMemberAccess	jobAd -> LookupInteger		673244	0					
ANR	673532	Identifier	jobAd		673244	0					
ANR	673533	Identifier	LookupInteger		673244	1					
ANR	673534	ArgumentList	ATTR_LAST_CKPT_TIME		673244	1					
ANR	673535	Argument	ATTR_LAST_CKPT_TIME		673244	0					
ANR	673536	Identifier	ATTR_LAST_CKPT_TIME		673244	0					
ANR	673537	Argument	last_ckpt_time		673244	1					
ANR	673538	Identifier	last_ckpt_time		673244	0					
ANR	673539	IdentifierDeclStatement	int current_start_time = 0 ;	645:4:18796:18822	673244	12	True				
ANR	673540	IdentifierDecl	current_start_time = 0		673244	0					
ANR	673541	IdentifierDeclType	int		673244	0					
ANR	673542	Identifier	current_start_time		673244	1					
ANR	673543	AssignmentExpression	current_start_time = 0		673244	2		=			
ANR	673544	Identifier	current_start_time		673244	0					
ANR	673545	PrimaryExpression	0		673244	1					
ANR	673546	ExpressionStatement	"jobAd -> LookupInteger ( ATTR_JOB_CURRENT_START_DATE , current_start_time )"	646:4:18828:18897	673244	13	True				
ANR	673547	CallExpression	"jobAd -> LookupInteger ( ATTR_JOB_CURRENT_START_DATE , current_start_time )"		673244	0					
ANR	673548	Callee	jobAd -> LookupInteger		673244	0					
ANR	673549	PtrMemberAccess	jobAd -> LookupInteger		673244	0					
ANR	673550	Identifier	jobAd		673244	0					
ANR	673551	Identifier	LookupInteger		673244	1					
ANR	673552	ArgumentList	ATTR_JOB_CURRENT_START_DATE		673244	1					
ANR	673553	Argument	ATTR_JOB_CURRENT_START_DATE		673244	0					
ANR	673554	Identifier	ATTR_JOB_CURRENT_START_DATE		673244	0					
ANR	673555	Argument	current_start_time		673244	1					
ANR	673556	Identifier	current_start_time		673244	0					
ANR	673557	IdentifierDeclStatement	int int_value = ( last_ckpt_time > current_start_time ) ? last_ckpt_time : current_start_time ;	647:4:18903:19018	673244	14	True				
ANR	673558	IdentifierDecl	int_value = ( last_ckpt_time > current_start_time ) ? last_ckpt_time : current_start_time		673244	0					
ANR	673559	IdentifierDeclType	int		673244	0					
ANR	673560	Identifier	int_value		673244	1					
ANR	673561	AssignmentExpression	int_value = ( last_ckpt_time > current_start_time ) ? last_ckpt_time : current_start_time		673244	2		=			
ANR	673562	Identifier	int_value		673244	0					
ANR	673563	ConditionalExpression	( last_ckpt_time > current_start_time ) ? last_ckpt_time : current_start_time		673244	1					
ANR	673564	Condition	last_ckpt_time > current_start_time		673244	0					
ANR	673565	RelationalExpression	last_ckpt_time > current_start_time		673244	0		>			
ANR	673566	Identifier	last_ckpt_time		673244	0					
ANR	673567	Identifier	current_start_time		673244	1					
ANR	673568	Identifier	last_ckpt_time		673244	1					
ANR	673569	Identifier	current_start_time		673244	2					
ANR	673570	IfStatement	if ( int_value > 0 )		673244	15					
ANR	673571	Condition	int_value > 0	650:8:19029:19041	673244	0	True				
ANR	673572	RelationalExpression	int_value > 0		673244	0		>			
ANR	673573	Identifier	int_value		673244	0					
ANR	673574	PrimaryExpression	0		673244	1					
ANR	673575	CompoundStatement		98:2:3190:3209	673244	1					
ANR	673576	IdentifierDeclStatement	int job_committed_time = 0 ;	651:8:19055:19081	673244	0	True				
ANR	673577	IdentifierDecl	job_committed_time = 0		673244	0					
ANR	673578	IdentifierDeclType	int		673244	0					
ANR	673579	Identifier	job_committed_time		673244	1					
ANR	673580	AssignmentExpression	job_committed_time = 0		673244	2		=			
ANR	673581	Identifier	job_committed_time		673244	0					
ANR	673582	PrimaryExpression	0		673244	1					
ANR	673583	ExpressionStatement	"jobAd -> LookupInteger ( ATTR_JOB_COMMITTED_TIME , job_committed_time )"	652:8:19091:19156	673244	1	True				
ANR	673584	CallExpression	"jobAd -> LookupInteger ( ATTR_JOB_COMMITTED_TIME , job_committed_time )"		673244	0					
ANR	673585	Callee	jobAd -> LookupInteger		673244	0					
ANR	673586	PtrMemberAccess	jobAd -> LookupInteger		673244	0					
ANR	673587	Identifier	jobAd		673244	0					
ANR	673588	Identifier	LookupInteger		673244	1					
ANR	673589	ArgumentList	ATTR_JOB_COMMITTED_TIME		673244	1					
ANR	673590	Argument	ATTR_JOB_COMMITTED_TIME		673244	0					
ANR	673591	Identifier	ATTR_JOB_COMMITTED_TIME		673244	0					
ANR	673592	Argument	job_committed_time		673244	1					
ANR	673593	Identifier	job_committed_time		673244	0					
ANR	673594	IdentifierDeclStatement	int delta = ( int ) time ( NULL ) - int_value ;	653:2:19160:19199	673244	2	True				
ANR	673595	IdentifierDecl	delta = ( int ) time ( NULL ) - int_value		673244	0					
ANR	673596	IdentifierDeclType	int		673244	0					
ANR	673597	Identifier	delta		673244	1					
ANR	673598	AssignmentExpression	delta = ( int ) time ( NULL ) - int_value		673244	2		=			
ANR	673599	Identifier	delta		673244	0					
ANR	673600	AdditiveExpression	( int ) time ( NULL ) - int_value		673244	1		-			
ANR	673601	CastExpression	( int ) time ( NULL )		673244	0					
ANR	673602	CastTarget	int		673244	0					
ANR	673603	CallExpression	time ( NULL )		673244	1					
ANR	673604	Callee	time		673244	0					
ANR	673605	Identifier	time		673244	0					
ANR	673606	ArgumentList	NULL		673244	1					
ANR	673607	Argument	NULL		673244	0					
ANR	673608	Identifier	NULL		673244	0					
ANR	673609	Identifier	int_value		673244	1					
ANR	673610	ExpressionStatement	job_committed_time += delta	654:8:19209:19236	673244	3	True				
ANR	673611	AssignmentExpression	job_committed_time += delta		673244	0		+=			
ANR	673612	Identifier	job_committed_time		673244	0					
ANR	673613	Identifier	delta		673244	1					
ANR	673614	ExpressionStatement	"jobAd -> Assign ( ATTR_JOB_COMMITTED_TIME , job_committed_time )"	655:8:19246:19304	673244	4	True				
ANR	673615	CallExpression	"jobAd -> Assign ( ATTR_JOB_COMMITTED_TIME , job_committed_time )"		673244	0					
ANR	673616	Callee	jobAd -> Assign		673244	0					
ANR	673617	PtrMemberAccess	jobAd -> Assign		673244	0					
ANR	673618	Identifier	jobAd		673244	0					
ANR	673619	Identifier	Assign		673244	1					
ANR	673620	ArgumentList	ATTR_JOB_COMMITTED_TIME		673244	1					
ANR	673621	Argument	ATTR_JOB_COMMITTED_TIME		673244	0					
ANR	673622	Identifier	ATTR_JOB_COMMITTED_TIME		673244	0					
ANR	673623	Argument	job_committed_time		673244	1					
ANR	673624	Identifier	job_committed_time		673244	0					
ANR	673625	IdentifierDeclStatement	float slot_weight = 1 ;	657:2:19309:19330	673244	5	True				
ANR	673626	IdentifierDecl	slot_weight = 1		673244	0					
ANR	673627	IdentifierDeclType	float		673244	0					
ANR	673628	Identifier	slot_weight		673244	1					
ANR	673629	AssignmentExpression	slot_weight = 1		673244	2		=			
ANR	673630	Identifier	slot_weight		673244	0					
ANR	673631	PrimaryExpression	1		673244	1					
ANR	673632	ExpressionStatement	"jobAd -> LookupFloat ( ATTR_JOB_MACHINE_ATTR_SLOT_WEIGHT0 , slot_weight )"	658:2:19334:19401	673244	6	True				
ANR	673633	CallExpression	"jobAd -> LookupFloat ( ATTR_JOB_MACHINE_ATTR_SLOT_WEIGHT0 , slot_weight )"		673244	0					
ANR	673634	Callee	jobAd -> LookupFloat		673244	0					
ANR	673635	PtrMemberAccess	jobAd -> LookupFloat		673244	0					
ANR	673636	Identifier	jobAd		673244	0					
ANR	673637	Identifier	LookupFloat		673244	1					
ANR	673638	ArgumentList	ATTR_JOB_MACHINE_ATTR_SLOT_WEIGHT0		673244	1					
ANR	673639	Argument	ATTR_JOB_MACHINE_ATTR_SLOT_WEIGHT0		673244	0					
ANR	673640	Identifier	ATTR_JOB_MACHINE_ATTR_SLOT_WEIGHT0		673244	0					
ANR	673641	Argument	slot_weight		673244	1					
ANR	673642	Identifier	slot_weight		673244	0					
ANR	673643	IdentifierDeclStatement	float slot_time = 0 ;	659:2:19405:19424	673244	7	True				
ANR	673644	IdentifierDecl	slot_time = 0		673244	0					
ANR	673645	IdentifierDeclType	float		673244	0					
ANR	673646	Identifier	slot_time		673244	1					
ANR	673647	AssignmentExpression	slot_time = 0		673244	2		=			
ANR	673648	Identifier	slot_time		673244	0					
ANR	673649	PrimaryExpression	0		673244	1					
ANR	673650	ExpressionStatement	"jobAd -> LookupFloat ( ATTR_COMMITTED_SLOT_TIME , slot_time )"	660:2:19428:19483	673244	8	True				
ANR	673651	CallExpression	"jobAd -> LookupFloat ( ATTR_COMMITTED_SLOT_TIME , slot_time )"		673244	0					
ANR	673652	Callee	jobAd -> LookupFloat		673244	0					
ANR	673653	PtrMemberAccess	jobAd -> LookupFloat		673244	0					
ANR	673654	Identifier	jobAd		673244	0					
ANR	673655	Identifier	LookupFloat		673244	1					
ANR	673656	ArgumentList	ATTR_COMMITTED_SLOT_TIME		673244	1					
ANR	673657	Argument	ATTR_COMMITTED_SLOT_TIME		673244	0					
ANR	673658	Identifier	ATTR_COMMITTED_SLOT_TIME		673244	0					
ANR	673659	Argument	slot_time		673244	1					
ANR	673660	Identifier	slot_time		673244	0					
ANR	673661	ExpressionStatement	slot_time += slot_weight * delta	661:2:19487:19519	673244	9	True				
ANR	673662	AssignmentExpression	slot_time += slot_weight * delta		673244	0		+=			
ANR	673663	Identifier	slot_time		673244	0					
ANR	673664	MultiplicativeExpression	slot_weight * delta		673244	1		*			
ANR	673665	Identifier	slot_weight		673244	0					
ANR	673666	Identifier	delta		673244	1					
ANR	673667	ExpressionStatement	"jobAd -> Assign ( ATTR_COMMITTED_SLOT_TIME , slot_time )"	662:2:19523:19573	673244	10	True				
ANR	673668	CallExpression	"jobAd -> Assign ( ATTR_COMMITTED_SLOT_TIME , slot_time )"		673244	0					
ANR	673669	Callee	jobAd -> Assign		673244	0					
ANR	673670	PtrMemberAccess	jobAd -> Assign		673244	0					
ANR	673671	Identifier	jobAd		673244	0					
ANR	673672	Identifier	Assign		673244	1					
ANR	673673	ArgumentList	ATTR_COMMITTED_SLOT_TIME		673244	1					
ANR	673674	Argument	ATTR_COMMITTED_SLOT_TIME		673244	0					
ANR	673675	Identifier	ATTR_COMMITTED_SLOT_TIME		673244	0					
ANR	673676	Argument	slot_time		673244	1					
ANR	673677	Identifier	slot_time		673244	0					
ANR	673678	ExpressionStatement	CommitSuspensionTime ( jobAd )	665:1:19583:19610	673244	16	True				
ANR	673679	CallExpression	CommitSuspensionTime ( jobAd )		673244	0					
ANR	673680	Callee	CommitSuspensionTime		673244	0					
ANR	673681	Identifier	CommitSuspensionTime		673244	0					
ANR	673682	ArgumentList	jobAd		673244	1					
ANR	673683	Argument	jobAd		673244	0					
ANR	673684	Identifier	jobAd		673244	0					
ANR	673685	IfStatement	"if ( m_num_cleanup_retries < 1 && param_boolean ( ""SHADOW_TEST_JOB_CLEANUP_RETRY"" , false ) )"		673244	17					
ANR	673686	Condition	"m_num_cleanup_retries < 1 && param_boolean ( ""SHADOW_TEST_JOB_CLEANUP_RETRY"" , false )"	670:8:19766:19855	673244	0	True				
ANR	673687	AndExpression	"m_num_cleanup_retries < 1 && param_boolean ( ""SHADOW_TEST_JOB_CLEANUP_RETRY"" , false )"		673244	0		&&			
ANR	673688	RelationalExpression	m_num_cleanup_retries < 1		673244	0		<			
ANR	673689	Identifier	m_num_cleanup_retries		673244	0					
ANR	673690	PrimaryExpression	1		673244	1					
ANR	673691	CallExpression	"param_boolean ( ""SHADOW_TEST_JOB_CLEANUP_RETRY"" , false )"		673244	1					
ANR	673692	Callee	param_boolean		673244	0					
ANR	673693	Identifier	param_boolean		673244	0					
ANR	673694	ArgumentList	"""SHADOW_TEST_JOB_CLEANUP_RETRY"""		673244	1					
ANR	673695	Argument	"""SHADOW_TEST_JOB_CLEANUP_RETRY"""		673244	0					
ANR	673696	PrimaryExpression	"""SHADOW_TEST_JOB_CLEANUP_RETRY"""		673244	0					
ANR	673697	Argument	false		673244	1					
ANR	673698	Identifier	false		673244	0					
ANR	673699	CompoundStatement		110:63:3643:3643	673244	1					
ANR	673700	ExpressionStatement	"dprintf ( D_ALWAYS , ""Testing Failure to perform final update to job queue!\\n"" )"	672:2:19862:19944	673244	0	True				
ANR	673701	CallExpression	"dprintf ( D_ALWAYS , ""Testing Failure to perform final update to job queue!\\n"" )"		673244	0					
ANR	673702	Callee	dprintf		673244	0					
ANR	673703	Identifier	dprintf		673244	0					
ANR	673704	ArgumentList	D_ALWAYS		673244	1					
ANR	673705	Argument	D_ALWAYS		673244	0					
ANR	673706	Identifier	D_ALWAYS		673244	0					
ANR	673707	Argument	"""Testing Failure to perform final update to job queue!\\n"""		673244	1					
ANR	673708	PrimaryExpression	"""Testing Failure to perform final update to job queue!\\n"""		673244	0					
ANR	673709	ExpressionStatement	retryJobCleanup ( )	674:2:19948:19965	673244	1	True				
ANR	673710	CallExpression	retryJobCleanup ( )		673244	0					
ANR	673711	Callee	retryJobCleanup		673244	0					
ANR	673712	Identifier	retryJobCleanup		673244	0					
ANR	673713	ArgumentList			673244	1					
ANR	673714	ReturnStatement	return ;	675:2:19969:19975	673244	2	True				
ANR	673715	IfStatement	if ( ! updateJobInQueue ( U_TERMINATE ) )		673244	18					
ANR	673716	Condition	! updateJobInQueue ( U_TERMINATE )	677:5:19988:20017	673244	0	True				
ANR	673717	UnaryOperationExpression	! updateJobInQueue ( U_TERMINATE )		673244	0					
ANR	673718	UnaryOperator	!		673244	0					
ANR	673719	CallExpression	updateJobInQueue ( U_TERMINATE )		673244	1					
ANR	673720	Callee	updateJobInQueue		673244	0					
ANR	673721	Identifier	updateJobInQueue		673244	0					
ANR	673722	ArgumentList	U_TERMINATE		673244	1					
ANR	673723	Argument	U_TERMINATE		673244	0					
ANR	673724	Identifier	U_TERMINATE		673244	0					
ANR	673725	CompoundStatement		116:38:3806:3806	673244	1					
ANR	673726	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to perform final update to job queue!\\n"" )"	678:2:20025:20099	673244	0	True				
ANR	673727	CallExpression	"dprintf ( D_ALWAYS , ""Failed to perform final update to job queue!\\n"" )"		673244	0					
ANR	673728	Callee	dprintf		673244	0					
ANR	673729	Identifier	dprintf		673244	0					
ANR	673730	ArgumentList	D_ALWAYS		673244	1					
ANR	673731	Argument	D_ALWAYS		673244	0					
ANR	673732	Identifier	D_ALWAYS		673244	0					
ANR	673733	Argument	"""Failed to perform final update to job queue!\\n"""		673244	1					
ANR	673734	PrimaryExpression	"""Failed to perform final update to job queue!\\n"""		673244	0					
ANR	673735	ExpressionStatement	retryJobCleanup ( )	680:2:20103:20120	673244	1	True				
ANR	673736	CallExpression	retryJobCleanup ( )		673244	0					
ANR	673737	Callee	retryJobCleanup		673244	0					
ANR	673738	Identifier	retryJobCleanup		673244	0					
ANR	673739	ArgumentList			673244	1					
ANR	673740	ReturnStatement	return ;	681:2:20124:20130	673244	2	True				
ANR	673741	ExpressionStatement	"dprintf ( D_ALWAYS , ""Job %d.%d terminated: %s %d\\n"" , getCluster ( ) , getProc ( ) , signaled ? ""killed by signal"" : ""exited with status"" , signaled ? exitSignal ( ) : exitCode ( ) )"	691:1:20508:20687	673244	19	True				
ANR	673742	CallExpression	"dprintf ( D_ALWAYS , ""Job %d.%d terminated: %s %d\\n"" , getCluster ( ) , getProc ( ) , signaled ? ""killed by signal"" : ""exited with status"" , signaled ? exitSignal ( ) : exitCode ( ) )"		673244	0					
ANR	673743	Callee	dprintf		673244	0					
ANR	673744	Identifier	dprintf		673244	0					
ANR	673745	ArgumentList	D_ALWAYS		673244	1					
ANR	673746	Argument	D_ALWAYS		673244	0					
ANR	673747	Identifier	D_ALWAYS		673244	0					
ANR	673748	Argument	"""Job %d.%d terminated: %s %d\\n"""		673244	1					
ANR	673749	PrimaryExpression	"""Job %d.%d terminated: %s %d\\n"""		673244	0					
ANR	673750	Argument	getCluster ( )		673244	2					
ANR	673751	CallExpression	getCluster ( )		673244	0					
ANR	673752	Callee	getCluster		673244	0					
ANR	673753	Identifier	getCluster		673244	0					
ANR	673754	ArgumentList			673244	1					
ANR	673755	Argument	getProc ( )		673244	3					
ANR	673756	CallExpression	getProc ( )		673244	0					
ANR	673757	Callee	getProc		673244	0					
ANR	673758	Identifier	getProc		673244	0					
ANR	673759	ArgumentList			673244	1					
ANR	673760	Argument	"signaled ? ""killed by signal"" : ""exited with status"""		673244	4					
ANR	673761	ConditionalExpression	"signaled ? ""killed by signal"" : ""exited with status"""		673244	0					
ANR	673762	Condition	signaled		673244	0					
ANR	673763	Identifier	signaled		673244	0					
ANR	673764	PrimaryExpression	"""killed by signal"""		673244	1					
ANR	673765	PrimaryExpression	"""exited with status"""		673244	2					
ANR	673766	Argument	signaled ? exitSignal ( ) : exitCode ( )		673244	5					
ANR	673767	ConditionalExpression	signaled ? exitSignal ( ) : exitCode ( )		673244	0					
ANR	673768	Condition	signaled		673244	0					
ANR	673769	Identifier	signaled		673244	0					
ANR	673770	CallExpression	exitSignal ( )		673244	1					
ANR	673771	Callee	exitSignal		673244	0					
ANR	673772	Identifier	exitSignal		673244	0					
ANR	673773	ArgumentList			673244	1					
ANR	673774	CallExpression	exitCode ( )		673244	2					
ANR	673775	Callee	exitCode		673244	0					
ANR	673776	Identifier	exitCode		673244	0					
ANR	673777	ArgumentList			673244	1					
ANR	673778	ExpressionStatement	logTerminateEvent ( reason )	697:1:20720:20747	673244	20	True				
ANR	673779	CallExpression	logTerminateEvent ( reason )		673244	0					
ANR	673780	Callee	logTerminateEvent		673244	0					
ANR	673781	Identifier	logTerminateEvent		673244	0					
ANR	673782	ArgumentList	reason		673244	1					
ANR	673783	Argument	reason		673244	0					
ANR	673784	Identifier	reason		673244	0					
ANR	673785	ExpressionStatement	emailTerminateEvent ( reason )	700:1:20770:20799	673244	21	True				
ANR	673786	CallExpression	emailTerminateEvent ( reason )		673244	0					
ANR	673787	Callee	emailTerminateEvent		673244	0					
ANR	673788	Identifier	emailTerminateEvent		673244	0					
ANR	673789	ArgumentList	reason		673244	1					
ANR	673790	Argument	reason		673244	0					
ANR	673791	Identifier	reason		673244	0					
ANR	673792	IfStatement	if ( reason == JOB_EXITED && claimIsClosing ( ) )		673244	22					
ANR	673793	Condition	reason == JOB_EXITED && claimIsClosing ( )	702:5:20807:20846	673244	0	True				
ANR	673794	AndExpression	reason == JOB_EXITED && claimIsClosing ( )		673244	0		&&			
ANR	673795	EqualityExpression	reason == JOB_EXITED		673244	0		==			
ANR	673796	Identifier	reason		673244	0					
ANR	673797	Identifier	JOB_EXITED		673244	1					
ANR	673798	CallExpression	claimIsClosing ( )		673244	1					
ANR	673799	Callee	claimIsClosing		673244	0					
ANR	673800	Identifier	claimIsClosing		673244	0					
ANR	673801	ArgumentList			673244	1					
ANR	673802	CompoundStatement		141:48:4635:4635	673244	1					
ANR	673803	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Startd is closing claim, so no more jobs can be run on it.\\n"" )"	707:2:21043:21126	673244	0	True				
ANR	673804	CallExpression	"dprintf ( D_FULLDEBUG , ""Startd is closing claim, so no more jobs can be run on it.\\n"" )"		673244	0					
ANR	673805	Callee	dprintf		673244	0					
ANR	673806	Identifier	dprintf		673244	0					
ANR	673807	ArgumentList	D_FULLDEBUG		673244	1					
ANR	673808	Argument	D_FULLDEBUG		673244	0					
ANR	673809	Identifier	D_FULLDEBUG		673244	0					
ANR	673810	Argument	"""Startd is closing claim, so no more jobs can be run on it.\\n"""		673244	1					
ANR	673811	PrimaryExpression	"""Startd is closing claim, so no more jobs can be run on it.\\n"""		673244	0					
ANR	673812	ExpressionStatement	reason = JOB_EXITED_AND_CLAIM_CLOSING	708:2:21130:21167	673244	1	True				
ANR	673813	AssignmentExpression	reason = JOB_EXITED_AND_CLAIM_CLOSING		673244	0		=			
ANR	673814	Identifier	reason		673244	0					
ANR	673815	Identifier	JOB_EXITED_AND_CLAIM_CLOSING		673244	1					
ANR	673816	IfStatement	if ( recycleShadow ( reason ) )		673244	23					
ANR	673817	Condition	recycleShadow ( reason )	712:5:21219:21239	673244	0	True				
ANR	673818	CallExpression	recycleShadow ( reason )		673244	0					
ANR	673819	Callee	recycleShadow		673244	0					
ANR	673820	Identifier	recycleShadow		673244	0					
ANR	673821	ArgumentList	reason		673244	1					
ANR	673822	Argument	reason		673244	0					
ANR	673823	Identifier	reason		673244	0					
ANR	673824	CompoundStatement		151:29:5028:5028	673244	1					
ANR	673825	ReturnStatement	return ;	714:2:21311:21317	673244	0	True				
ANR	673826	ExpressionStatement	DC_Exit ( reason )	718:1:21345:21362	673244	24	True				
ANR	673827	CallExpression	DC_Exit ( reason )		673244	0					
ANR	673828	Callee	DC_Exit		673244	0					
ANR	673829	Identifier	DC_Exit		673244	0					
ANR	673830	ArgumentList	reason		673244	1					
ANR	673831	Argument	reason		673244	0					
ANR	673832	Identifier	reason		673244	0					
ANR	673833	ReturnType	void		673244	1					
ANR	673834	Identifier	BaseShadow :: terminateJob		673244	2					
ANR	673835	ParameterList	update_style_t kind		673244	3					
ANR	673836	Parameter	update_style_t kind	561:26:16153:16171	673244	0	True				
ANR	673837	ParameterType	update_style_t		673244	0					
ANR	673838	Identifier	kind		673244	1					
ANR	673839	CFGEntryNode	ENTRY		673244		True				
ANR	673840	CFGExitNode	EXIT		673244		True				
ANR	673841	Symbol	reason		673244						
ANR	673842	Symbol	delta		673244						
ANR	673843	Symbol	getCluster		673244						
ANR	673844	Symbol	current_start_time		673244						
ANR	673845	Symbol	job_committed_time		673244						
ANR	673846	Symbol	ATTR_JOB_COMMITTED_TIME		673244						
ANR	673847	Symbol	exit_signal		673244						
ANR	673848	Symbol	JOB_EXITED		673244						
ANR	673849	Symbol	ATTR_JOB_MACHINE_ATTR_SLOT_WEIGHT0		673244						
ANR	673850	Symbol	slot_time		673244						
ANR	673851	Symbol	NULL		673244						
ANR	673852	Symbol	exitedBySignal		673244						
ANR	673853	Symbol	kind		673244						
ANR	673854	Symbol	TRUE		673244						
ANR	673855	Symbol	param_boolean		673244						
ANR	673856	Symbol	D_FULLDEBUG		673244						
ANR	673857	Symbol	str		673244						
ANR	673858	Symbol	exitSignal		673244						
ANR	673859	Symbol	JOB_EXITED_AND_CLAIM_CLOSING		673244						
ANR	673860	Symbol	exit_code		673244						
ANR	673861	Symbol	claimIsClosing		673244						
ANR	673862	Symbol	exited_by_signal		673244						
ANR	673863	Symbol	getCoreName		673244						
ANR	673864	Symbol	last_ckpt_time		673244						
ANR	673865	Symbol	JOB_COREDUMPED		673244						
ANR	673866	Symbol	getProc		673244						
ANR	673867	Symbol	jobAd		673244						
ANR	673868	Symbol	ATTR_COMMITTED_SLOT_TIME		673244						
ANR	673869	Symbol	int_value		673244						
ANR	673870	Symbol	signaled		673244						
ANR	673871	Symbol	updateJobInQueue		673244						
ANR	673872	Symbol	exitCode		673244						
ANR	673873	Symbol	getExitReason		673244						
ANR	673874	Symbol	m_num_cleanup_retries		673244						
ANR	673875	Symbol	ATTR_JOB_CURRENT_START_DATE		673244						
ANR	673876	Symbol	D_ALWAYS		673244						
ANR	673877	Symbol	false		673244						
ANR	673878	Symbol	US_NORMAL		673244						
ANR	673879	Symbol	ATTR_JOB_CORE_FILENAME		673244						
ANR	673880	Symbol	slot_weight		673244						
ANR	673881	Symbol	U_TERMINATE		673244						
ANR	673882	Symbol	str . Value		673244						
ANR	673883	Symbol	US_TERMINATE_PENDING		673244						
ANR	673884	Symbol	ATTR_LAST_CKPT_TIME		673244						
ANR	673885	Symbol	ATTR_TERMINATION_PENDING		673244						
ANR	673886	Symbol	recycleShadow		673244						
ANR	673887	Symbol	FALSE		673244						
ANR	673888	Symbol	core_file_name		673244						
ANR	673889	Symbol	time		673244						
ANR	673890	Function	BaseShadow :: evictJob	722:0:21368:22351							
ANR	673891	FunctionDef	BaseShadow :: evictJob (int reason)		673890	0					
ANR	673892	CompoundStatement		724:0:21408:22351	673890	0					
ANR	673893	IdentifierDeclStatement	MyString from_where ;	725:1:21411:21430	673890	0	True				
ANR	673894	IdentifierDecl	from_where		673890	0					
ANR	673895	IdentifierDeclType	MyString		673890	0					
ANR	673896	Identifier	from_where		673890	1					
ANR	673897	IdentifierDeclStatement	MyString machine ;	726:1:21433:21449	673890	1	True				
ANR	673898	IdentifierDecl	machine		673890	0					
ANR	673899	IdentifierDeclType	MyString		673890	0					
ANR	673900	Identifier	machine		673890	1					
ANR	673901	IfStatement	if ( getMachineName ( machine ) )		673890	2					
ANR	673902	Condition	getMachineName ( machine )	727:5:21456:21478	673890	0	True				
ANR	673903	CallExpression	getMachineName ( machine )		673890	0					
ANR	673904	Callee	getMachineName		673890	0					
ANR	673905	Identifier	getMachineName		673890	0					
ANR	673906	ArgumentList	machine		673890	1					
ANR	673907	Argument	machine		673890	0					
ANR	673908	Identifier	machine		673890	0					
ANR	673909	CompoundStatement		4:31:73:73	673890	1					
ANR	673910	ExpressionStatement	"from_where . sprintf ( "" from %s"" , machine . Value ( ) )"	728:2:21486:21532	673890	0	True				
ANR	673911	CallExpression	"from_where . sprintf ( "" from %s"" , machine . Value ( ) )"		673890	0					
ANR	673912	Callee	from_where . sprintf		673890	0					
ANR	673913	MemberAccess	from_where . sprintf		673890	0					
ANR	673914	Identifier	from_where		673890	0					
ANR	673915	Identifier	sprintf		673890	1					
ANR	673916	ArgumentList	""" from %s"""		673890	1					
ANR	673917	Argument	""" from %s"""		673890	0					
ANR	673918	PrimaryExpression	""" from %s"""		673890	0					
ANR	673919	Argument	machine . Value ( )		673890	1					
ANR	673920	CallExpression	machine . Value ( )		673890	0					
ANR	673921	Callee	machine . Value		673890	0					
ANR	673922	MemberAccess	machine . Value		673890	0					
ANR	673923	Identifier	machine		673890	0					
ANR	673924	Identifier	Value		673890	1					
ANR	673925	ArgumentList			673890	1					
ANR	673926	ExpressionStatement	"dprintf ( D_ALWAYS , ""Job %d.%d is being evicted%s\\n"" , getCluster ( ) , getProc ( ) , from_where . Value ( ) )"	730:1:21538:21640	673890	3	True				
ANR	673927	CallExpression	"dprintf ( D_ALWAYS , ""Job %d.%d is being evicted%s\\n"" , getCluster ( ) , getProc ( ) , from_where . Value ( ) )"		673890	0					
ANR	673928	Callee	dprintf		673890	0					
ANR	673929	Identifier	dprintf		673890	0					
ANR	673930	ArgumentList	D_ALWAYS		673890	1					
ANR	673931	Argument	D_ALWAYS		673890	0					
ANR	673932	Identifier	D_ALWAYS		673890	0					
ANR	673933	Argument	"""Job %d.%d is being evicted%s\\n"""		673890	1					
ANR	673934	PrimaryExpression	"""Job %d.%d is being evicted%s\\n"""		673890	0					
ANR	673935	Argument	getCluster ( )		673890	2					
ANR	673936	CallExpression	getCluster ( )		673890	0					
ANR	673937	Callee	getCluster		673890	0					
ANR	673938	Identifier	getCluster		673890	0					
ANR	673939	ArgumentList			673890	1					
ANR	673940	Argument	getProc ( )		673890	3					
ANR	673941	CallExpression	getProc ( )		673890	0					
ANR	673942	Callee	getProc		673890	0					
ANR	673943	Identifier	getProc		673890	0					
ANR	673944	ArgumentList			673890	1					
ANR	673945	Argument	from_where . Value ( )		673890	4					
ANR	673946	CallExpression	from_where . Value ( )		673890	0					
ANR	673947	Callee	from_where . Value		673890	0					
ANR	673948	MemberAccess	from_where . Value		673890	0					
ANR	673949	Identifier	from_where		673890	0					
ANR	673950	Identifier	Value		673890	1					
ANR	673951	ArgumentList			673890	1					
ANR	673952	IfStatement	if ( ! jobAd )		673890	4					
ANR	673953	Condition	! jobAd	733:5:21648:21654	673890	0	True				
ANR	673954	UnaryOperationExpression	! jobAd		673890	0					
ANR	673955	UnaryOperator	!		673890	0					
ANR	673956	Identifier	jobAd		673890	1					
ANR	673957	CompoundStatement		10:15:249:249	673890	1					
ANR	673958	ExpressionStatement	"dprintf ( D_ALWAYS , ""In evictJob() w/ NULL JobAd!"" )"	734:2:21662:21713	673890	0	True				
ANR	673959	CallExpression	"dprintf ( D_ALWAYS , ""In evictJob() w/ NULL JobAd!"" )"		673890	0					
ANR	673960	Callee	dprintf		673890	0					
ANR	673961	Identifier	dprintf		673890	0					
ANR	673962	ArgumentList	D_ALWAYS		673890	1					
ANR	673963	Argument	D_ALWAYS		673890	0					
ANR	673964	Identifier	D_ALWAYS		673890	0					
ANR	673965	Argument	"""In evictJob() w/ NULL JobAd!"""		673890	1					
ANR	673966	PrimaryExpression	"""In evictJob() w/ NULL JobAd!"""		673890	0					
ANR	673967	ExpressionStatement	DC_Exit ( reason )	735:2:21717:21734	673890	1	True				
ANR	673968	CallExpression	DC_Exit ( reason )		673890	0					
ANR	673969	Callee	DC_Exit		673890	0					
ANR	673970	Identifier	DC_Exit		673890	0					
ANR	673971	ArgumentList	reason		673890	1					
ANR	673972	Argument	reason		673890	0					
ANR	673973	Identifier	reason		673890	0					
ANR	673974	ExpressionStatement	cleanUp ( )	739:1:21787:21796	673890	5	True				
ANR	673975	CallExpression	cleanUp ( )		673890	0					
ANR	673976	Callee	cleanUp		673890	0					
ANR	673977	Identifier	cleanUp		673890	0					
ANR	673978	ArgumentList			673890	1					
ANR	673979	ExpressionStatement	logEvictEvent ( reason )	742:1:21830:21853	673890	6	True				
ANR	673980	CallExpression	logEvictEvent ( reason )		673890	0					
ANR	673981	Callee	logEvictEvent		673890	0					
ANR	673982	Identifier	logEvictEvent		673890	0					
ANR	673983	ArgumentList	reason		673890	1					
ANR	673984	Argument	reason		673890	0					
ANR	673985	Identifier	reason		673890	0					
ANR	673986	IdentifierDeclStatement	char buf [ 64 ] ;	745:1:21911:21923	673890	7	True				
ANR	673987	IdentifierDecl	buf [ 64 ]		673890	0					
ANR	673988	IdentifierDeclType	char [ 64 ]		673890	0					
ANR	673989	Identifier	buf		673890	1					
ANR	673990	PrimaryExpression	64		673890	2					
ANR	673991	ExpressionStatement	"sprintf ( buf , ""%s = %d"" , ATTR_LAST_VACATE_TIME , ( int ) time ( 0 ) )"	746:1:21926:21988	673890	8	True				
ANR	673992	CallExpression	"sprintf ( buf , ""%s = %d"" , ATTR_LAST_VACATE_TIME , ( int ) time ( 0 ) )"		673890	0					
ANR	673993	Callee	sprintf		673890	0					
ANR	673994	Identifier	sprintf		673890	0					
ANR	673995	ArgumentList	buf		673890	1					
ANR	673996	Argument	buf		673890	0					
ANR	673997	Identifier	buf		673890	0					
ANR	673998	Argument	"""%s = %d"""		673890	1					
ANR	673999	PrimaryExpression	"""%s = %d"""		673890	0					
ANR	674000	Argument	ATTR_LAST_VACATE_TIME		673890	2					
ANR	674001	Identifier	ATTR_LAST_VACATE_TIME		673890	0					
ANR	674002	Argument	( int ) time ( 0 )		673890	3					
ANR	674003	CastExpression	( int ) time ( 0 )		673890	0					
ANR	674004	CastTarget	int		673890	0					
ANR	674005	CallExpression	time ( 0 )		673890	1					
ANR	674006	Callee	time		673890	0					
ANR	674007	Identifier	time		673890	0					
ANR	674008	ArgumentList	0		673890	1					
ANR	674009	Argument	0		673890	0					
ANR	674010	PrimaryExpression	0		673890	0					
ANR	674011	ExpressionStatement	jobAd -> Insert ( buf )	747:1:21992:22012	673890	9	True				
ANR	674012	CallExpression	jobAd -> Insert ( buf )		673890	0					
ANR	674013	Callee	jobAd -> Insert		673890	0					
ANR	674014	PtrMemberAccess	jobAd -> Insert		673890	0					
ANR	674015	Identifier	jobAd		673890	0					
ANR	674016	Identifier	Insert		673890	1					
ANR	674017	ArgumentList	buf		673890	1					
ANR	674018	Argument	buf		673890	0					
ANR	674019	Identifier	buf		673890	0					
ANR	674020	IfStatement	if ( ! updateJobInQueue ( U_EVICT ) )		673890	10					
ANR	674021	Condition	! updateJobInQueue ( U_EVICT )	752:5:22168:22193	673890	0	True				
ANR	674022	UnaryOperationExpression	! updateJobInQueue ( U_EVICT )		673890	0					
ANR	674023	UnaryOperator	!		673890	0					
ANR	674024	CallExpression	updateJobInQueue ( U_EVICT )		673890	1					
ANR	674025	Callee	updateJobInQueue		673890	0					
ANR	674026	Identifier	updateJobInQueue		673890	0					
ANR	674027	ArgumentList	U_EVICT		673890	1					
ANR	674028	Argument	U_EVICT		673890	0					
ANR	674029	Identifier	U_EVICT		673890	0					
ANR	674030	CompoundStatement		29:34:788:788	673890	1					
ANR	674031	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to update job queue!\\n"" )"	754:2:22251:22303	673890	0	True				
ANR	674032	CallExpression	"dprintf ( D_ALWAYS , ""Failed to update job queue!\\n"" )"		673890	0					
ANR	674033	Callee	dprintf		673890	0					
ANR	674034	Identifier	dprintf		673890	0					
ANR	674035	ArgumentList	D_ALWAYS		673890	1					
ANR	674036	Argument	D_ALWAYS		673890	0					
ANR	674037	Identifier	D_ALWAYS		673890	0					
ANR	674038	Argument	"""Failed to update job queue!\\n"""		673890	1					
ANR	674039	PrimaryExpression	"""Failed to update job queue!\\n"""		673890	0					
ANR	674040	ExpressionStatement	DC_Exit ( reason )	758:1:22332:22349	673890	11	True				
ANR	674041	CallExpression	DC_Exit ( reason )		673890	0					
ANR	674042	Callee	DC_Exit		673890	0					
ANR	674043	Identifier	DC_Exit		673890	0					
ANR	674044	ArgumentList	reason		673890	1					
ANR	674045	Argument	reason		673890	0					
ANR	674046	Identifier	reason		673890	0					
ANR	674047	ReturnType	void		673890	1					
ANR	674048	Identifier	BaseShadow :: evictJob		673890	2					
ANR	674049	ParameterList	int reason		673890	3					
ANR	674050	Parameter	int reason	723:22:21395:21404	673890	0	True				
ANR	674051	ParameterType	int		673890	0					
ANR	674052	Identifier	reason		673890	1					
ANR	674053	CFGEntryNode	ENTRY		673890		True				
ANR	674054	CFGExitNode	EXIT		673890		True				
ANR	674055	Symbol	reason		673890						
ANR	674056	Symbol	getProc		673890						
ANR	674057	Symbol	D_ALWAYS		673890						
ANR	674058	Symbol	jobAd		673890						
ANR	674059	Symbol	getCluster		673890						
ANR	674060	Symbol	getMachineName		673890						
ANR	674061	Symbol	from_where		673890						
ANR	674062	Symbol	buf		673890						
ANR	674063	Symbol	updateJobInQueue		673890						
ANR	674064	Symbol	machine		673890						
ANR	674065	Symbol	machine . Value		673890						
ANR	674066	Symbol	from_where . Value		673890						
ANR	674067	Symbol	ATTR_LAST_VACATE_TIME		673890						
ANR	674068	Symbol	time		673890						
ANR	674069	Symbol	U_EVICT		673890						
ANR	674070	Function	BaseShadow :: requeueJob	762:0:22355:23369							
ANR	674071	FunctionDef	BaseShadow :: requeueJob (const char * reason)		674070	0					
ANR	674072	CompoundStatement		764:0:22405:23369	674070	0					
ANR	674073	IfStatement	if ( ! jobAd )		674070	0					
ANR	674074	Condition	! jobAd	765:5:22412:22418	674070	0	True				
ANR	674075	UnaryOperationExpression	! jobAd		674070	0					
ANR	674076	UnaryOperator	!		674070	0					
ANR	674077	Identifier	jobAd		674070	1					
ANR	674078	CompoundStatement		2:15:16:16	674070	1					
ANR	674079	ExpressionStatement	"dprintf ( D_ALWAYS , ""In requeueJob() w/ NULL JobAd!"" )"	766:2:22426:22479	674070	0	True				
ANR	674080	CallExpression	"dprintf ( D_ALWAYS , ""In requeueJob() w/ NULL JobAd!"" )"		674070	0					
ANR	674081	Callee	dprintf		674070	0					
ANR	674082	Identifier	dprintf		674070	0					
ANR	674083	ArgumentList	D_ALWAYS		674070	1					
ANR	674084	Argument	D_ALWAYS		674070	0					
ANR	674085	Identifier	D_ALWAYS		674070	0					
ANR	674086	Argument	"""In requeueJob() w/ NULL JobAd!"""		674070	1					
ANR	674087	PrimaryExpression	"""In requeueJob() w/ NULL JobAd!"""		674070	0					
ANR	674088	ExpressionStatement	"dprintf ( D_ALWAYS , ""Job %d.%d is being put back in the job queue: %s\\n"" , getCluster ( ) , getProc ( ) , reason )"	768:1:22485:22601	674070	1	True				
ANR	674089	CallExpression	"dprintf ( D_ALWAYS , ""Job %d.%d is being put back in the job queue: %s\\n"" , getCluster ( ) , getProc ( ) , reason )"		674070	0					
ANR	674090	Callee	dprintf		674070	0					
ANR	674091	Identifier	dprintf		674070	0					
ANR	674092	ArgumentList	D_ALWAYS		674070	1					
ANR	674093	Argument	D_ALWAYS		674070	0					
ANR	674094	Identifier	D_ALWAYS		674070	0					
ANR	674095	Argument	"""Job %d.%d is being put back in the job queue: %s\\n"""		674070	1					
ANR	674096	PrimaryExpression	"""Job %d.%d is being put back in the job queue: %s\\n"""		674070	0					
ANR	674097	Argument	getCluster ( )		674070	2					
ANR	674098	CallExpression	getCluster ( )		674070	0					
ANR	674099	Callee	getCluster		674070	0					
ANR	674100	Identifier	getCluster		674070	0					
ANR	674101	ArgumentList			674070	1					
ANR	674102	Argument	getProc ( )		674070	3					
ANR	674103	CallExpression	getProc ( )		674070	0					
ANR	674104	Callee	getProc		674070	0					
ANR	674105	Identifier	getProc		674070	0					
ANR	674106	ArgumentList			674070	1					
ANR	674107	Argument	reason		674070	4					
ANR	674108	Identifier	reason		674070	0					
ANR	674109	ExpressionStatement	cleanUp ( )	773:1:22651:22660	674070	2	True				
ANR	674110	CallExpression	cleanUp ( )		674070	0					
ANR	674111	Callee	cleanUp		674070	0					
ANR	674112	Identifier	cleanUp		674070	0					
ANR	674113	ArgumentList			674070	1					
ANR	674114	IdentifierDeclStatement	int size = strlen ( reason ) + strlen ( ATTR_REQUEUE_REASON ) + 4 ;	776:1:22699:22762	674070	3	True				
ANR	674115	IdentifierDecl	size = strlen ( reason ) + strlen ( ATTR_REQUEUE_REASON ) + 4		674070	0					
ANR	674116	IdentifierDeclType	int		674070	0					
ANR	674117	Identifier	size		674070	1					
ANR	674118	AssignmentExpression	size = strlen ( reason ) + strlen ( ATTR_REQUEUE_REASON ) + 4		674070	2		=			
ANR	674119	Identifier	size		674070	0					
ANR	674120	AdditiveExpression	strlen ( reason ) + strlen ( ATTR_REQUEUE_REASON ) + 4		674070	1		+			
ANR	674121	CallExpression	strlen ( reason )		674070	0					
ANR	674122	Callee	strlen		674070	0					
ANR	674123	Identifier	strlen		674070	0					
ANR	674124	ArgumentList	reason		674070	1					
ANR	674125	Argument	reason		674070	0					
ANR	674126	Identifier	reason		674070	0					
ANR	674127	AdditiveExpression	strlen ( ATTR_REQUEUE_REASON ) + 4		674070	1		+			
ANR	674128	CallExpression	strlen ( ATTR_REQUEUE_REASON )		674070	0					
ANR	674129	Callee	strlen		674070	0					
ANR	674130	Identifier	strlen		674070	0					
ANR	674131	ArgumentList	ATTR_REQUEUE_REASON		674070	1					
ANR	674132	Argument	ATTR_REQUEUE_REASON		674070	0					
ANR	674133	Identifier	ATTR_REQUEUE_REASON		674070	0					
ANR	674134	PrimaryExpression	4		674070	1					
ANR	674135	IdentifierDeclStatement	char * buf = ( char * ) malloc ( size * sizeof ( char ) ) ;	777:1:22765:22813	674070	4	True				
ANR	674136	IdentifierDecl	* buf = ( char * ) malloc ( size * sizeof ( char ) )		674070	0					
ANR	674137	IdentifierDeclType	char *		674070	0					
ANR	674138	Identifier	buf		674070	1					
ANR	674139	AssignmentExpression	* buf = ( char * ) malloc ( size * sizeof ( char ) )		674070	2		=			
ANR	674140	Identifier	buf		674070	0					
ANR	674141	CastExpression	( char * ) malloc ( size * sizeof ( char ) )		674070	1					
ANR	674142	CastTarget	char *		674070	0					
ANR	674143	CallExpression	malloc ( size * sizeof ( char ) )		674070	1					
ANR	674144	Callee	malloc		674070	0					
ANR	674145	Identifier	malloc		674070	0					
ANR	674146	ArgumentList	size * sizeof ( char )		674070	1					
ANR	674147	Argument	size * sizeof ( char )		674070	0					
ANR	674148	MultiplicativeExpression	size * sizeof ( char )		674070	0		*			
ANR	674149	Identifier	size		674070	0					
ANR	674150	SizeofExpression	sizeof ( char )		674070	1					
ANR	674151	Sizeof	sizeof		674070	0					
ANR	674152	SizeofOperand	char		674070	1					
ANR	674153	IfStatement	if ( ! buf )		674070	5					
ANR	674154	Condition	! buf	778:5:22820:22824	674070	0	True				
ANR	674155	UnaryOperationExpression	! buf		674070	0					
ANR	674156	UnaryOperator	!		674070	0					
ANR	674157	Identifier	buf		674070	1					
ANR	674158	CompoundStatement		15:13:422:422	674070	1					
ANR	674159	ExpressionStatement	"EXCEPT ( ""Out of memory!"" )"	779:2:22832:22858	674070	0	True				
ANR	674160	CallExpression	"EXCEPT ( ""Out of memory!"" )"		674070	0					
ANR	674161	Callee	EXCEPT		674070	0					
ANR	674162	Identifier	EXCEPT		674070	0					
ANR	674163	ArgumentList	"""Out of memory!"""		674070	1					
ANR	674164	Argument	"""Out of memory!"""		674070	0					
ANR	674165	PrimaryExpression	"""Out of memory!"""		674070	0					
ANR	674166	ExpressionStatement	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_REQUEUE_REASON , reason )"	781:1:22864:22920	674070	6	True				
ANR	674167	CallExpression	"sprintf ( buf , ""%s=\\""%s\\"""" , ATTR_REQUEUE_REASON , reason )"		674070	0					
ANR	674168	Callee	sprintf		674070	0					
ANR	674169	Identifier	sprintf		674070	0					
ANR	674170	ArgumentList	buf		674070	1					
ANR	674171	Argument	buf		674070	0					
ANR	674172	Identifier	buf		674070	0					
ANR	674173	Argument	"""%s=\\""%s\\"""""		674070	1					
ANR	674174	PrimaryExpression	"""%s=\\""%s\\"""""		674070	0					
ANR	674175	Argument	ATTR_REQUEUE_REASON		674070	2					
ANR	674176	Identifier	ATTR_REQUEUE_REASON		674070	0					
ANR	674177	Argument	reason		674070	3					
ANR	674178	Identifier	reason		674070	0					
ANR	674179	ExpressionStatement	jobAd -> Insert ( buf )	782:1:22923:22943	674070	7	True				
ANR	674180	CallExpression	jobAd -> Insert ( buf )		674070	0					
ANR	674181	Callee	jobAd -> Insert		674070	0					
ANR	674182	PtrMemberAccess	jobAd -> Insert		674070	0					
ANR	674183	Identifier	jobAd		674070	0					
ANR	674184	Identifier	Insert		674070	1					
ANR	674185	ArgumentList	buf		674070	1					
ANR	674186	Argument	buf		674070	0					
ANR	674187	Identifier	buf		674070	0					
ANR	674188	ExpressionStatement	free ( buf )	783:1:22946:22957	674070	8	True				
ANR	674189	CallExpression	free ( buf )		674070	0					
ANR	674190	Callee	free		674070	0					
ANR	674191	Identifier	free		674070	0					
ANR	674192	ArgumentList	buf		674070	1					
ANR	674193	Argument	buf		674070	0					
ANR	674194	Identifier	buf		674070	0					
ANR	674195	ExpressionStatement	logRequeueEvent ( reason )	786:1:22991:23016	674070	9	True				
ANR	674196	CallExpression	logRequeueEvent ( reason )		674070	0					
ANR	674197	Callee	logRequeueEvent		674070	0					
ANR	674198	Identifier	logRequeueEvent		674070	0					
ANR	674199	ArgumentList	reason		674070	1					
ANR	674200	Argument	reason		674070	0					
ANR	674201	Identifier	reason		674070	0					
ANR	674202	IfStatement	if ( ! updateJobInQueue ( U_REQUEUE ) )		674070	10					
ANR	674203	Condition	! updateJobInQueue ( U_REQUEUE )	791:5:23172:23199	674070	0	True				
ANR	674204	UnaryOperationExpression	! updateJobInQueue ( U_REQUEUE )		674070	0					
ANR	674205	UnaryOperator	!		674070	0					
ANR	674206	CallExpression	updateJobInQueue ( U_REQUEUE )		674070	1					
ANR	674207	Callee	updateJobInQueue		674070	0					
ANR	674208	Identifier	updateJobInQueue		674070	0					
ANR	674209	ArgumentList	U_REQUEUE		674070	1					
ANR	674210	Argument	U_REQUEUE		674070	0					
ANR	674211	Identifier	U_REQUEUE		674070	0					
ANR	674212	CompoundStatement		28:36:797:797	674070	1					
ANR	674213	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to update job queue!\\n"" )"	793:2:23257:23309	674070	0	True				
ANR	674214	CallExpression	"dprintf ( D_ALWAYS , ""Failed to update job queue!\\n"" )"		674070	0					
ANR	674215	Callee	dprintf		674070	0					
ANR	674216	Identifier	dprintf		674070	0					
ANR	674217	ArgumentList	D_ALWAYS		674070	1					
ANR	674218	Argument	D_ALWAYS		674070	0					
ANR	674219	Identifier	D_ALWAYS		674070	0					
ANR	674220	Argument	"""Failed to update job queue!\\n"""		674070	1					
ANR	674221	PrimaryExpression	"""Failed to update job queue!\\n"""		674070	0					
ANR	674222	ExpressionStatement	DC_Exit ( JOB_SHOULD_REQUEUE )	797:1:23338:23367	674070	11	True				
ANR	674223	CallExpression	DC_Exit ( JOB_SHOULD_REQUEUE )		674070	0					
ANR	674224	Callee	DC_Exit		674070	0					
ANR	674225	Identifier	DC_Exit		674070	0					
ANR	674226	ArgumentList	JOB_SHOULD_REQUEUE		674070	1					
ANR	674227	Argument	JOB_SHOULD_REQUEUE		674070	0					
ANR	674228	Identifier	JOB_SHOULD_REQUEUE		674070	0					
ANR	674229	ReturnType	void		674070	1					
ANR	674230	Identifier	BaseShadow :: requeueJob		674070	2					
ANR	674231	ParameterList	const char * reason		674070	3					
ANR	674232	Parameter	const char * reason	763:24:22384:22401	674070	0	True				
ANR	674233	ParameterType	const char *		674070	0					
ANR	674234	Identifier	reason		674070	1					
ANR	674235	CFGEntryNode	ENTRY		674070		True				
ANR	674236	CFGExitNode	EXIT		674070		True				
ANR	674237	Symbol	reason		674070						
ANR	674238	Symbol	malloc		674070						
ANR	674239	Symbol	D_ALWAYS		674070						
ANR	674240	Symbol	getProc		674070						
ANR	674241	Symbol	jobAd		674070						
ANR	674242	Symbol	getCluster		674070						
ANR	674243	Symbol	strlen		674070						
ANR	674244	Symbol	ATTR_REQUEUE_REASON		674070						
ANR	674245	Symbol	buf		674070						
ANR	674246	Symbol	JOB_SHOULD_REQUEUE		674070						
ANR	674247	Symbol	size		674070						
ANR	674248	Symbol	updateJobInQueue		674070						
ANR	674249	Symbol	U_REQUEUE		674070						
ANR	674250	Function	BaseShadow :: emailHoldEvent	801:0:23373:23480							
ANR	674251	FunctionDef	BaseShadow :: emailHoldEvent (const char * reason)		674250	0					
ANR	674252	CompoundStatement		803:0:23428:23480	674250	0					
ANR	674253	IdentifierDeclStatement	Email mailer ;	804:1:23431:23443	674250	0	True				
ANR	674254	IdentifierDecl	mailer		674250	0					
ANR	674255	IdentifierDeclType	Email		674250	0					
ANR	674256	Identifier	mailer		674250	1					
ANR	674257	ExpressionStatement	"mailer . sendHold ( jobAd , reason )"	805:1:23446:23478	674250	1	True				
ANR	674258	CallExpression	"mailer . sendHold ( jobAd , reason )"		674250	0					
ANR	674259	Callee	mailer . sendHold		674250	0					
ANR	674260	MemberAccess	mailer . sendHold		674250	0					
ANR	674261	Identifier	mailer		674250	0					
ANR	674262	Identifier	sendHold		674250	1					
ANR	674263	ArgumentList	jobAd		674250	1					
ANR	674264	Argument	jobAd		674250	0					
ANR	674265	Identifier	jobAd		674250	0					
ANR	674266	Argument	reason		674250	1					
ANR	674267	Identifier	reason		674250	0					
ANR	674268	ReturnType	void		674250	1					
ANR	674269	Identifier	BaseShadow :: emailHoldEvent		674250	2					
ANR	674270	ParameterList	const char * reason		674250	3					
ANR	674271	Parameter	const char * reason	802:28:23406:23423	674250	0	True				
ANR	674272	ParameterType	const char *		674250	0					
ANR	674273	Identifier	reason		674250	1					
ANR	674274	CFGEntryNode	ENTRY		674250		True				
ANR	674275	CFGExitNode	EXIT		674250		True				
ANR	674276	Symbol	reason		674250						
ANR	674277	Symbol	jobAd		674250						
ANR	674278	Symbol	mailer		674250						
ANR	674279	Function	BaseShadow :: emailRemoveEvent	809:0:23484:23595							
ANR	674280	FunctionDef	BaseShadow :: emailRemoveEvent (const char * reason)		674279	0					
ANR	674281	CompoundStatement		811:0:23541:23595	674279	0					
ANR	674282	IdentifierDeclStatement	Email mailer ;	812:1:23544:23556	674279	0	True				
ANR	674283	IdentifierDecl	mailer		674279	0					
ANR	674284	IdentifierDeclType	Email		674279	0					
ANR	674285	Identifier	mailer		674279	1					
ANR	674286	ExpressionStatement	"mailer . sendRemove ( jobAd , reason )"	813:1:23559:23593	674279	1	True				
ANR	674287	CallExpression	"mailer . sendRemove ( jobAd , reason )"		674279	0					
ANR	674288	Callee	mailer . sendRemove		674279	0					
ANR	674289	MemberAccess	mailer . sendRemove		674279	0					
ANR	674290	Identifier	mailer		674279	0					
ANR	674291	Identifier	sendRemove		674279	1					
ANR	674292	ArgumentList	jobAd		674279	1					
ANR	674293	Argument	jobAd		674279	0					
ANR	674294	Identifier	jobAd		674279	0					
ANR	674295	Argument	reason		674279	1					
ANR	674296	Identifier	reason		674279	0					
ANR	674297	ReturnType	void		674279	1					
ANR	674298	Identifier	BaseShadow :: emailRemoveEvent		674279	2					
ANR	674299	ParameterList	const char * reason		674279	3					
ANR	674300	Parameter	const char * reason	810:30:23519:23536	674279	0	True				
ANR	674301	ParameterType	const char *		674279	0					
ANR	674302	Identifier	reason		674279	1					
ANR	674303	CFGEntryNode	ENTRY		674279		True				
ANR	674304	CFGExitNode	EXIT		674279		True				
ANR	674305	Symbol	reason		674279						
ANR	674306	Symbol	jobAd		674279						
ANR	674307	Symbol	mailer		674279						
ANR	674308	Function	BaseShadow :: emailUser	817:0:23599:23797							
ANR	674309	FunctionDef	BaseShadow :: emailUser (const char * subjectline)		674308	0					
ANR	674310	CompoundStatement		819:0:23654:23797	674308	0					
ANR	674311	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""BaseShadow::emailUser() called.\\n"" )"	820:1:23657:23714	674308	0	True				
ANR	674312	CallExpression	"dprintf ( D_FULLDEBUG , ""BaseShadow::emailUser() called.\\n"" )"		674308	0					
ANR	674313	Callee	dprintf		674308	0					
ANR	674314	Identifier	dprintf		674308	0					
ANR	674315	ArgumentList	D_FULLDEBUG		674308	1					
ANR	674316	Argument	D_FULLDEBUG		674308	0					
ANR	674317	Identifier	D_FULLDEBUG		674308	0					
ANR	674318	Argument	"""BaseShadow::emailUser() called.\\n"""		674308	1					
ANR	674319	PrimaryExpression	"""BaseShadow::emailUser() called.\\n"""		674308	0					
ANR	674320	IfStatement	if ( ! jobAd )		674308	1					
ANR	674321	Condition	! jobAd	821:5:23721:23726	674308	0	True				
ANR	674322	UnaryOperationExpression	! jobAd		674308	0					
ANR	674323	UnaryOperator	!		674308	0					
ANR	674324	Identifier	jobAd		674308	1					
ANR	674325	CompoundStatement		3:14:75:75	674308	1					
ANR	674326	ReturnStatement	return NULL ;	822:2:23734:23745	674308	0	True				
ANR	674327	Identifier	NULL		674308	0					
ANR	674328	ReturnStatement	"return email_user_open ( jobAd , subjectline ) ;"	824:1:23751:23795	674308	2	True				
ANR	674329	CallExpression	"email_user_open ( jobAd , subjectline )"		674308	0					
ANR	674330	Callee	email_user_open		674308	0					
ANR	674331	Identifier	email_user_open		674308	0					
ANR	674332	ArgumentList	jobAd		674308	1					
ANR	674333	Argument	jobAd		674308	0					
ANR	674334	Identifier	jobAd		674308	0					
ANR	674335	Argument	subjectline		674308	1					
ANR	674336	Identifier	subjectline		674308	0					
ANR	674337	ReturnType	FILE *		674308	1					
ANR	674338	Identifier	BaseShadow :: emailUser		674308	2					
ANR	674339	ParameterList	const char * subjectline		674308	3					
ANR	674340	Parameter	const char * subjectline	818:23:23628:23650	674308	0	True				
ANR	674341	ParameterType	const char *		674308	0					
ANR	674342	Identifier	subjectline		674308	1					
ANR	674343	CFGEntryNode	ENTRY		674308		True				
ANR	674344	CFGExitNode	EXIT		674308		True				
ANR	674345	Symbol	email_user_open		674308						
ANR	674346	Symbol	NULL		674308						
ANR	674347	Symbol	subjectline		674308						
ANR	674348	Symbol	jobAd		674308						
ANR	674349	Symbol	D_FULLDEBUG		674308						
ANR	674350	Function	BaseShadow :: initUserLog	828:0:23801:25408							
ANR	674351	FunctionDef	BaseShadow :: initUserLog ()		674350	0					
ANR	674352	CompoundStatement		829:0:23832:25408	674350	0					
ANR	674353	IdentifierDeclStatement	MyString logfilename ;	830:1:23835:23855	674350	0	True				
ANR	674354	IdentifierDecl	logfilename		674350	0					
ANR	674355	IdentifierDeclType	MyString		674350	0					
ANR	674356	Identifier	logfilename		674350	1					
ANR	674357	IdentifierDeclStatement	int use_xml ;	831:1:23858:23870	674350	1	True				
ANR	674358	IdentifierDecl	use_xml		674350	0					
ANR	674359	IdentifierDeclType	int		674350	0					
ANR	674360	Identifier	use_xml		674350	1					
ANR	674361	IdentifierDeclStatement	bool result ;	832:1:23873:23884	674350	2	True				
ANR	674362	IdentifierDecl	result		674350	0					
ANR	674363	IdentifierDeclType	bool		674350	0					
ANR	674364	Identifier	result		674350	1					
ANR	674365	ExpressionStatement	ASSERT ( job_updater )	837:1:24030:24051	674350	3	True				
ANR	674366	CallExpression	ASSERT ( job_updater )		674350	0					
ANR	674367	Callee	ASSERT		674350	0					
ANR	674368	Identifier	ASSERT		674350	0					
ANR	674369	ArgumentList	job_updater		674350	1					
ANR	674370	Argument	job_updater		674350	0					
ANR	674371	Identifier	job_updater		674350	0					
ANR	674372	IfStatement	"if ( getPathToUserLog ( jobAd , logfilename ) )"		674350	4					
ANR	674373	Condition	"getPathToUserLog ( jobAd , logfilename )"	839:6:24060:24095	674350	0	True				
ANR	674374	CallExpression	"getPathToUserLog ( jobAd , logfilename )"		674350	0					
ANR	674375	Callee	getPathToUserLog		674350	0					
ANR	674376	Identifier	getPathToUserLog		674350	0					
ANR	674377	ArgumentList	jobAd		674350	1					
ANR	674378	Argument	jobAd		674350	0					
ANR	674379	Identifier	jobAd		674350	0					
ANR	674380	Argument	logfilename		674350	1					
ANR	674381	Identifier	logfilename		674350	0					
ANR	674382	CompoundStatement		11:45:266:266	674350	1					
ANR	674383	ExpressionStatement	"result = uLog . initialize ( owner . Value ( ) , domain . Value ( ) , logfilename . Value ( ) , cluster , proc , 0 , gjid )"	840:2:24103:24204	674350	0	True				
ANR	674384	AssignmentExpression	"result = uLog . initialize ( owner . Value ( ) , domain . Value ( ) , logfilename . Value ( ) , cluster , proc , 0 , gjid )"		674350	0		=			
ANR	674385	Identifier	result		674350	0					
ANR	674386	CallExpression	"uLog . initialize ( owner . Value ( ) , domain . Value ( ) , logfilename . Value ( ) , cluster , proc , 0 , gjid )"		674350	1					
ANR	674387	Callee	uLog . initialize		674350	0					
ANR	674388	MemberAccess	uLog . initialize		674350	0					
ANR	674389	Identifier	uLog		674350	0					
ANR	674390	Identifier	initialize		674350	1					
ANR	674391	ArgumentList	owner . Value ( )		674350	1					
ANR	674392	Argument	owner . Value ( )		674350	0					
ANR	674393	CallExpression	owner . Value ( )		674350	0					
ANR	674394	Callee	owner . Value		674350	0					
ANR	674395	MemberAccess	owner . Value		674350	0					
ANR	674396	Identifier	owner		674350	0					
ANR	674397	Identifier	Value		674350	1					
ANR	674398	ArgumentList			674350	1					
ANR	674399	Argument	domain . Value ( )		674350	1					
ANR	674400	CallExpression	domain . Value ( )		674350	0					
ANR	674401	Callee	domain . Value		674350	0					
ANR	674402	MemberAccess	domain . Value		674350	0					
ANR	674403	Identifier	domain		674350	0					
ANR	674404	Identifier	Value		674350	1					
ANR	674405	ArgumentList			674350	1					
ANR	674406	Argument	logfilename . Value ( )		674350	2					
ANR	674407	CallExpression	logfilename . Value ( )		674350	0					
ANR	674408	Callee	logfilename . Value		674350	0					
ANR	674409	MemberAccess	logfilename . Value		674350	0					
ANR	674410	Identifier	logfilename		674350	0					
ANR	674411	Identifier	Value		674350	1					
ANR	674412	ArgumentList			674350	1					
ANR	674413	Argument	cluster		674350	3					
ANR	674414	Identifier	cluster		674350	0					
ANR	674415	Argument	proc		674350	4					
ANR	674416	Identifier	proc		674350	0					
ANR	674417	Argument	0		674350	5					
ANR	674418	PrimaryExpression	0		674350	0					
ANR	674419	Argument	gjid		674350	6					
ANR	674420	Identifier	gjid		674350	0					
ANR	674421	IfStatement	if ( result == false )		674350	1					
ANR	674422	Condition	result == false	849:7:24717:24731	674350	0	True				
ANR	674423	EqualityExpression	result == false		674350	0		==			
ANR	674424	Identifier	result		674350	0					
ANR	674425	Identifier	false		674350	1					
ANR	674426	CompoundStatement		22:3:907:927	674350	1					
ANR	674427	IdentifierDeclStatement	MyString hold_reason ;	850:3:24740:24760	674350	0	True				
ANR	674428	IdentifierDecl	hold_reason		674350	0					
ANR	674429	IdentifierDeclType	MyString		674350	0					
ANR	674430	Identifier	hold_reason		674350	1					
ANR	674431	ExpressionStatement	"hold_reason . sprintf ( ""Failed to initialize user log to %s"" , logfilename . Value ( ) )"	851:3:24765:24849	674350	1	True				
ANR	674432	CallExpression	"hold_reason . sprintf ( ""Failed to initialize user log to %s"" , logfilename . Value ( ) )"		674350	0					
ANR	674433	Callee	hold_reason . sprintf		674350	0					
ANR	674434	MemberAccess	hold_reason . sprintf		674350	0					
ANR	674435	Identifier	hold_reason		674350	0					
ANR	674436	Identifier	sprintf		674350	1					
ANR	674437	ArgumentList	"""Failed to initialize user log to %s"""		674350	1					
ANR	674438	Argument	"""Failed to initialize user log to %s"""		674350	0					
ANR	674439	PrimaryExpression	"""Failed to initialize user log to %s"""		674350	0					
ANR	674440	Argument	logfilename . Value ( )		674350	1					
ANR	674441	CallExpression	logfilename . Value ( )		674350	0					
ANR	674442	Callee	logfilename . Value		674350	0					
ANR	674443	MemberAccess	logfilename . Value		674350	0					
ANR	674444	Identifier	logfilename		674350	0					
ANR	674445	Identifier	Value		674350	1					
ANR	674446	ArgumentList			674350	1					
ANR	674447	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , hold_reason . Value ( ) )"	853:3:24854:24900	674350	2	True				
ANR	674448	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , hold_reason . Value ( ) )"		674350	0					
ANR	674449	Callee	dprintf		674350	0					
ANR	674450	Identifier	dprintf		674350	0					
ANR	674451	ArgumentList	D_ALWAYS		674350	1					
ANR	674452	Argument	D_ALWAYS		674350	0					
ANR	674453	Identifier	D_ALWAYS		674350	0					
ANR	674454	Argument	"""%s\\n"""		674350	1					
ANR	674455	PrimaryExpression	"""%s\\n"""		674350	0					
ANR	674456	Argument	hold_reason . Value ( )		674350	2					
ANR	674457	CallExpression	hold_reason . Value ( )		674350	0					
ANR	674458	Callee	hold_reason . Value		674350	0					
ANR	674459	MemberAccess	hold_reason . Value		674350	0					
ANR	674460	Identifier	hold_reason		674350	0					
ANR	674461	Identifier	Value		674350	1					
ANR	674462	ArgumentList			674350	1					
ANR	674463	ExpressionStatement	"holdJobAndExit ( hold_reason . Value ( ) , CONDOR_HOLD_CODE_UnableToInitUserLog , 0 )"	854:3:24905:24979	674350	3	True				
ANR	674464	CallExpression	"holdJobAndExit ( hold_reason . Value ( ) , CONDOR_HOLD_CODE_UnableToInitUserLog , 0 )"		674350	0					
ANR	674465	Callee	holdJobAndExit		674350	0					
ANR	674466	Identifier	holdJobAndExit		674350	0					
ANR	674467	ArgumentList	hold_reason . Value ( )		674350	1					
ANR	674468	Argument	hold_reason . Value ( )		674350	0					
ANR	674469	CallExpression	hold_reason . Value ( )		674350	0					
ANR	674470	Callee	hold_reason . Value		674350	0					
ANR	674471	MemberAccess	hold_reason . Value		674350	0					
ANR	674472	Identifier	hold_reason		674350	0					
ANR	674473	Identifier	Value		674350	1					
ANR	674474	ArgumentList			674350	1					
ANR	674475	Argument	CONDOR_HOLD_CODE_UnableToInitUserLog		674350	1					
ANR	674476	Identifier	CONDOR_HOLD_CODE_UnableToInitUserLog		674350	0					
ANR	674477	Argument	0		674350	2					
ANR	674478	PrimaryExpression	0		674350	0					
ANR	674479	ExpressionStatement	"EXCEPT ( ""Failed to initialize user log to %s"" , logfilename . Value ( ) )"	856:3:25058:25123	674350	4	True				
ANR	674480	CallExpression	"EXCEPT ( ""Failed to initialize user log to %s"" , logfilename . Value ( ) )"		674350	0					
ANR	674481	Callee	EXCEPT		674350	0					
ANR	674482	Identifier	EXCEPT		674350	0					
ANR	674483	ArgumentList	"""Failed to initialize user log to %s"""		674350	1					
ANR	674484	Argument	"""Failed to initialize user log to %s"""		674350	0					
ANR	674485	PrimaryExpression	"""Failed to initialize user log to %s"""		674350	0					
ANR	674486	Argument	logfilename . Value ( )		674350	1					
ANR	674487	CallExpression	logfilename . Value ( )		674350	0					
ANR	674488	Callee	logfilename . Value		674350	0					
ANR	674489	MemberAccess	logfilename . Value		674350	0					
ANR	674490	Identifier	logfilename		674350	0					
ANR	674491	Identifier	Value		674350	1					
ANR	674492	ArgumentList			674350	1					
ANR	674493	IfStatement	"if ( jobAd -> LookupBool ( ATTR_ULOG_USE_XML , use_xml ) && use_xml )"		674350	2					
ANR	674494	Condition	"jobAd -> LookupBool ( ATTR_ULOG_USE_XML , use_xml ) && use_xml"	858:6:25135:25193	674350	0	True				
ANR	674495	AndExpression	"jobAd -> LookupBool ( ATTR_ULOG_USE_XML , use_xml ) && use_xml"		674350	0		&&			
ANR	674496	CallExpression	"jobAd -> LookupBool ( ATTR_ULOG_USE_XML , use_xml )"		674350	0					
ANR	674497	Callee	jobAd -> LookupBool		674350	0					
ANR	674498	PtrMemberAccess	jobAd -> LookupBool		674350	0					
ANR	674499	Identifier	jobAd		674350	0					
ANR	674500	Identifier	LookupBool		674350	1					
ANR	674501	ArgumentList	ATTR_ULOG_USE_XML		674350	1					
ANR	674502	Argument	ATTR_ULOG_USE_XML		674350	0					
ANR	674503	Identifier	ATTR_ULOG_USE_XML		674350	0					
ANR	674504	Argument	use_xml		674350	1					
ANR	674505	Identifier	use_xml		674350	0					
ANR	674506	Identifier	use_xml		674350	1					
ANR	674507	CompoundStatement		31:15:1363:1363	674350	1					
ANR	674508	ExpressionStatement	uLog . setUseXML ( true )	860:3:25201:25221	674350	0	True				
ANR	674509	CallExpression	uLog . setUseXML ( true )		674350	0					
ANR	674510	Callee	uLog . setUseXML		674350	0					
ANR	674511	MemberAccess	uLog . setUseXML		674350	0					
ANR	674512	Identifier	uLog		674350	0					
ANR	674513	Identifier	setUseXML		674350	1					
ANR	674514	ArgumentList	true		674350	1					
ANR	674515	Argument	true		674350	0					
ANR	674516	Identifier	true		674350	0					
ANR	674517	ElseStatement	else		674350	0					
ANR	674518	CompoundStatement		33:9:1399:1399	674350	0					
ANR	674519	ExpressionStatement	uLog . setUseXML ( false )	862:3:25237:25258	674350	0	True				
ANR	674520	CallExpression	uLog . setUseXML ( false )		674350	0					
ANR	674521	Callee	uLog . setUseXML		674350	0					
ANR	674522	MemberAccess	uLog . setUseXML		674350	0					
ANR	674523	Identifier	uLog		674350	0					
ANR	674524	Identifier	setUseXML		674350	1					
ANR	674525	ArgumentList	false		674350	1					
ANR	674526	Argument	false		674350	0					
ANR	674527	Identifier	false		674350	0					
ANR	674528	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s = %s\\n"" , ATTR_ULOG_FILE , logfilename . Value ( ) )"	864:2:25266:25336	674350	3	True				
ANR	674529	CallExpression	"dprintf ( D_FULLDEBUG , ""%s = %s\\n"" , ATTR_ULOG_FILE , logfilename . Value ( ) )"		674350	0					
ANR	674530	Callee	dprintf		674350	0					
ANR	674531	Identifier	dprintf		674350	0					
ANR	674532	ArgumentList	D_FULLDEBUG		674350	1					
ANR	674533	Argument	D_FULLDEBUG		674350	0					
ANR	674534	Identifier	D_FULLDEBUG		674350	0					
ANR	674535	Argument	"""%s = %s\\n"""		674350	1					
ANR	674536	PrimaryExpression	"""%s = %s\\n"""		674350	0					
ANR	674537	Argument	ATTR_ULOG_FILE		674350	2					
ANR	674538	Identifier	ATTR_ULOG_FILE		674350	0					
ANR	674539	Argument	logfilename . Value ( )		674350	3					
ANR	674540	CallExpression	logfilename . Value ( )		674350	0					
ANR	674541	Callee	logfilename . Value		674350	0					
ANR	674542	MemberAccess	logfilename . Value		674350	0					
ANR	674543	Identifier	logfilename		674350	0					
ANR	674544	Identifier	Value		674350	1					
ANR	674545	ArgumentList			674350	1					
ANR	674546	ElseStatement	else		674350	0					
ANR	674547	CompoundStatement		37:8:1513:1513	674350	0					
ANR	674548	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""no %s found\\n"" , ATTR_ULOG_FILE )"	866:2:25350:25403	674350	0	True				
ANR	674549	CallExpression	"dprintf ( D_FULLDEBUG , ""no %s found\\n"" , ATTR_ULOG_FILE )"		674350	0					
ANR	674550	Callee	dprintf		674350	0					
ANR	674551	Identifier	dprintf		674350	0					
ANR	674552	ArgumentList	D_FULLDEBUG		674350	1					
ANR	674553	Argument	D_FULLDEBUG		674350	0					
ANR	674554	Identifier	D_FULLDEBUG		674350	0					
ANR	674555	Argument	"""no %s found\\n"""		674350	1					
ANR	674556	PrimaryExpression	"""no %s found\\n"""		674350	0					
ANR	674557	Argument	ATTR_ULOG_FILE		674350	2					
ANR	674558	Identifier	ATTR_ULOG_FILE		674350	0					
ANR	674559	ReturnType	void		674350	1					
ANR	674560	Identifier	BaseShadow :: initUserLog		674350	2					
ANR	674561	ParameterList			674350	3					
ANR	674562	CFGEntryNode	ENTRY		674350		True				
ANR	674563	CFGExitNode	EXIT		674350		True				
ANR	674564	Symbol	cluster		674350						
ANR	674565	Symbol	ATTR_ULOG_FILE		674350						
ANR	674566	Symbol	jobAd		674350						
ANR	674567	Symbol	domain . Value		674350						
ANR	674568	Symbol	gjid		674350						
ANR	674569	Symbol	hold_reason		674350						
ANR	674570	Symbol	result		674350						
ANR	674571	Symbol	hold_reason . Value		674350						
ANR	674572	Symbol	job_updater		674350						
ANR	674573	Symbol	ATTR_ULOG_USE_XML		674350						
ANR	674574	Symbol	owner . Value		674350						
ANR	674575	Symbol	logfilename		674350						
ANR	674576	Symbol	getPathToUserLog		674350						
ANR	674577	Symbol	owner		674350						
ANR	674578	Symbol	* jobAd		674350						
ANR	674579	Symbol	proc		674350						
ANR	674580	Symbol	false		674350						
ANR	674581	Symbol	D_ALWAYS		674350						
ANR	674582	Symbol	CONDOR_HOLD_CODE_UnableToInitUserLog		674350						
ANR	674583	Symbol	D_FULLDEBUG		674350						
ANR	674584	Symbol	jobAd -> LookupBool		674350						
ANR	674585	Symbol	use_xml		674350						
ANR	674586	Symbol	uLog . initialize		674350						
ANR	674587	Symbol	logfilename . Value		674350						
ANR	674588	Symbol	domain		674350						
ANR	674589	Symbol	true		674350						
ANR	674590	Symbol	uLog		674350						
ANR	674591	Function	getJobAdExitCode	872:0:25448:25595							
ANR	674592	FunctionDef	"getJobAdExitCode (ClassAd * jad , int & exit_code)"		674591	0					
ANR	674593	CompoundStatement		873:0:25499:25595	674591	0					
ANR	674594	IfStatement	"if ( ! jad -> LookupInteger ( ATTR_ON_EXIT_CODE , exit_code ) )"		674591	0					
ANR	674595	Condition	"! jad -> LookupInteger ( ATTR_ON_EXIT_CODE , exit_code )"	874:5:25506:25555	674591	0	True				
ANR	674596	UnaryOperationExpression	"! jad -> LookupInteger ( ATTR_ON_EXIT_CODE , exit_code )"		674591	0					
ANR	674597	UnaryOperator	!		674591	0					
ANR	674598	CallExpression	"jad -> LookupInteger ( ATTR_ON_EXIT_CODE , exit_code )"		674591	1					
ANR	674599	Callee	jad -> LookupInteger		674591	0					
ANR	674600	PtrMemberAccess	jad -> LookupInteger		674591	0					
ANR	674601	Identifier	jad		674591	0					
ANR	674602	Identifier	LookupInteger		674591	1					
ANR	674603	ArgumentList	ATTR_ON_EXIT_CODE		674591	1					
ANR	674604	Argument	ATTR_ON_EXIT_CODE		674591	0					
ANR	674605	Identifier	ATTR_ON_EXIT_CODE		674591	0					
ANR	674606	Argument	exit_code		674591	1					
ANR	674607	Identifier	exit_code		674591	0					
ANR	674608	CompoundStatement		2:58:59:59	674591	1					
ANR	674609	ReturnStatement	return FALSE ;	875:2:25563:25575	674591	0	True				
ANR	674610	Identifier	FALSE		674591	0					
ANR	674611	ReturnStatement	return TRUE ;	878:1:25582:25593	674591	1	True				
ANR	674612	Identifier	TRUE		674591	0					
ANR	674613	ReturnType	int		674591	1					
ANR	674614	Identifier	getJobAdExitCode		674591	2					
ANR	674615	ParameterList	"ClassAd * jad , int & exit_code"		674591	3					
ANR	674616	Parameter	ClassAd * jad	872:21:25469:25480	674591	0	True				
ANR	674617	ParameterType	ClassAd *		674591	0					
ANR	674618	Identifier	jad		674591	1					
ANR	674619	Parameter	int & exit_code	872:35:25483:25496	674591	1	True				
ANR	674620	ParameterType	int &		674591	0					
ANR	674621	Identifier	exit_code		674591	1					
ANR	674622	CFGEntryNode	ENTRY		674591		True				
ANR	674623	CFGExitNode	EXIT		674591		True				
ANR	674624	Symbol	jad -> LookupInteger		674591						
ANR	674625	Symbol	ATTR_ON_EXIT_CODE		674591						
ANR	674626	Symbol	* jad		674591						
ANR	674627	Symbol	exit_code		674591						
ANR	674628	Symbol	TRUE		674591						
ANR	674629	Symbol	FALSE		674591						
ANR	674630	Symbol	jad		674591						
ANR	674631	Function	getJobAdExitedBySignal	882:0:25634:25806							
ANR	674632	FunctionDef	"getJobAdExitedBySignal (ClassAd * jad , int & exited_by_signal)"		674631	0					
ANR	674633	CompoundStatement		883:0:25698:25806	674631	0					
ANR	674634	IfStatement	"if ( ! jad -> LookupInteger ( ATTR_ON_EXIT_BY_SIGNAL , exited_by_signal ) )"		674631	0					
ANR	674635	Condition	"! jad -> LookupInteger ( ATTR_ON_EXIT_BY_SIGNAL , exited_by_signal )"	884:5:25705:25766	674631	0	True				
ANR	674636	UnaryOperationExpression	"! jad -> LookupInteger ( ATTR_ON_EXIT_BY_SIGNAL , exited_by_signal )"		674631	0					
ANR	674637	UnaryOperator	!		674631	0					
ANR	674638	CallExpression	"jad -> LookupInteger ( ATTR_ON_EXIT_BY_SIGNAL , exited_by_signal )"		674631	1					
ANR	674639	Callee	jad -> LookupInteger		674631	0					
ANR	674640	PtrMemberAccess	jad -> LookupInteger		674631	0					
ANR	674641	Identifier	jad		674631	0					
ANR	674642	Identifier	LookupInteger		674631	1					
ANR	674643	ArgumentList	ATTR_ON_EXIT_BY_SIGNAL		674631	1					
ANR	674644	Argument	ATTR_ON_EXIT_BY_SIGNAL		674631	0					
ANR	674645	Identifier	ATTR_ON_EXIT_BY_SIGNAL		674631	0					
ANR	674646	Argument	exited_by_signal		674631	1					
ANR	674647	Identifier	exited_by_signal		674631	0					
ANR	674648	CompoundStatement		2:70:71:71	674631	1					
ANR	674649	ReturnStatement	return FALSE ;	885:2:25774:25786	674631	0	True				
ANR	674650	Identifier	FALSE		674631	0					
ANR	674651	ReturnStatement	return TRUE ;	888:1:25793:25804	674631	1	True				
ANR	674652	Identifier	TRUE		674631	0					
ANR	674653	ReturnType	int		674631	1					
ANR	674654	Identifier	getJobAdExitedBySignal		674631	2					
ANR	674655	ParameterList	"ClassAd * jad , int & exited_by_signal"		674631	3					
ANR	674656	Parameter	ClassAd * jad	882:27:25661:25672	674631	0	True				
ANR	674657	ParameterType	ClassAd *		674631	0					
ANR	674658	Identifier	jad		674631	1					
ANR	674659	Parameter	int & exited_by_signal	882:41:25675:25695	674631	1	True				
ANR	674660	ParameterType	int &		674631	0					
ANR	674661	Identifier	exited_by_signal		674631	1					
ANR	674662	CFGEntryNode	ENTRY		674631		True				
ANR	674663	CFGExitNode	EXIT		674631		True				
ANR	674664	Symbol	jad -> LookupInteger		674631						
ANR	674665	Symbol	* jad		674631						
ANR	674666	Symbol	TRUE		674631						
ANR	674667	Symbol	FALSE		674631						
ANR	674668	Symbol	ATTR_ON_EXIT_BY_SIGNAL		674631						
ANR	674669	Symbol	jad		674631						
ANR	674670	Symbol	exited_by_signal		674631						
ANR	674671	Function	getJobAdExitSignal	892:0:25845:26000							
ANR	674672	FunctionDef	"getJobAdExitSignal (ClassAd * jad , int & exit_signal)"		674671	0					
ANR	674673	CompoundStatement		893:0:25900:26000	674671	0					
ANR	674674	IfStatement	"if ( ! jad -> LookupInteger ( ATTR_ON_EXIT_SIGNAL , exit_signal ) )"		674671	0					
ANR	674675	Condition	"! jad -> LookupInteger ( ATTR_ON_EXIT_SIGNAL , exit_signal )"	894:5:25907:25960	674671	0	True				
ANR	674676	UnaryOperationExpression	"! jad -> LookupInteger ( ATTR_ON_EXIT_SIGNAL , exit_signal )"		674671	0					
ANR	674677	UnaryOperator	!		674671	0					
ANR	674678	CallExpression	"jad -> LookupInteger ( ATTR_ON_EXIT_SIGNAL , exit_signal )"		674671	1					
ANR	674679	Callee	jad -> LookupInteger		674671	0					
ANR	674680	PtrMemberAccess	jad -> LookupInteger		674671	0					
ANR	674681	Identifier	jad		674671	0					
ANR	674682	Identifier	LookupInteger		674671	1					
ANR	674683	ArgumentList	ATTR_ON_EXIT_SIGNAL		674671	1					
ANR	674684	Argument	ATTR_ON_EXIT_SIGNAL		674671	0					
ANR	674685	Identifier	ATTR_ON_EXIT_SIGNAL		674671	0					
ANR	674686	Argument	exit_signal		674671	1					
ANR	674687	Identifier	exit_signal		674671	0					
ANR	674688	CompoundStatement		2:62:63:63	674671	1					
ANR	674689	ReturnStatement	return FALSE ;	895:2:25968:25980	674671	0	True				
ANR	674690	Identifier	FALSE		674671	0					
ANR	674691	ReturnStatement	return TRUE ;	898:1:25987:25998	674671	1	True				
ANR	674692	Identifier	TRUE		674671	0					
ANR	674693	ReturnType	int		674671	1					
ANR	674694	Identifier	getJobAdExitSignal		674671	2					
ANR	674695	ParameterList	"ClassAd * jad , int & exit_signal"		674671	3					
ANR	674696	Parameter	ClassAd * jad	892:23:25868:25879	674671	0	True				
ANR	674697	ParameterType	ClassAd *		674671	0					
ANR	674698	Identifier	jad		674671	1					
ANR	674699	Parameter	int & exit_signal	892:37:25882:25897	674671	1	True				
ANR	674700	ParameterType	int &		674671	0					
ANR	674701	Identifier	exit_signal		674671	1					
ANR	674702	CFGEntryNode	ENTRY		674671		True				
ANR	674703	CFGExitNode	EXIT		674671		True				
ANR	674704	Symbol	jad -> LookupInteger		674671						
ANR	674705	Symbol	* jad		674671						
ANR	674706	Symbol	ATTR_ON_EXIT_SIGNAL		674671						
ANR	674707	Symbol	TRUE		674671						
ANR	674708	Symbol	FALSE		674671						
ANR	674709	Symbol	jad		674671						
ANR	674710	Symbol	exit_signal		674671						
ANR	674711	Function	BaseShadow :: logTerminateEvent	902:0:26034:29092							
ANR	674712	FunctionDef	"BaseShadow :: logTerminateEvent (int exitReason , update_style_t kind)"		674711	0					
ANR	674713	CompoundStatement		904:0:26108:29092	674711	0					
ANR	674714	IdentifierDeclStatement	struct rusage run_remote_rusage ;	905:1:26111:26142	674711	0	True				
ANR	674715	IdentifierDecl	run_remote_rusage		674711	0					
ANR	674716	IdentifierDeclType	struct rusage		674711	0					
ANR	674717	Identifier	run_remote_rusage		674711	1					
ANR	674718	IdentifierDeclStatement	JobTerminatedEvent event ;	906:1:26145:26169	674711	1	True				
ANR	674719	IdentifierDecl	event		674711	0					
ANR	674720	IdentifierDeclType	JobTerminatedEvent		674711	0					
ANR	674721	Identifier	event		674711	1					
ANR	674722	IdentifierDeclStatement	MyString corefile ;	907:1:26172:26189	674711	2	True				
ANR	674723	IdentifierDecl	corefile		674711	0					
ANR	674724	IdentifierDeclType	MyString		674711	0					
ANR	674725	Identifier	corefile		674711	1					
ANR	674726	ExpressionStatement	"memset ( & run_remote_rusage , 0 , sizeof ( struct rusage ) )"	909:1:26193:26247	674711	3	True				
ANR	674727	CallExpression	"memset ( & run_remote_rusage , 0 , sizeof ( struct rusage ) )"		674711	0					
ANR	674728	Callee	memset		674711	0					
ANR	674729	Identifier	memset		674711	0					
ANR	674730	ArgumentList	& run_remote_rusage		674711	1					
ANR	674731	Argument	& run_remote_rusage		674711	0					
ANR	674732	UnaryOperationExpression	& run_remote_rusage		674711	0					
ANR	674733	UnaryOperator	&		674711	0					
ANR	674734	Identifier	run_remote_rusage		674711	1					
ANR	674735	Argument	0		674711	1					
ANR	674736	PrimaryExpression	0		674711	0					
ANR	674737	Argument	sizeof ( struct rusage )		674711	2					
ANR	674738	SizeofExpression	sizeof ( struct rusage )		674711	0					
ANR	674739	Sizeof	sizeof		674711	0					
ANR	674740	SizeofOperand	struct rusage		674711	1					
ANR	674741	SwitchStatement	switch ( exitReason )		674711	4					
ANR	674742	Condition	exitReason	911:9:26259:26268	674711	0	True				
ANR	674743	Identifier	exitReason		674711	0					
ANR	674744	CompoundStatement		8:22:163:163	674711	1					
ANR	674745	Label	case JOB_EXITED :	912:1:26275:26290	674711	0	True				
ANR	674746	Identifier	JOB_EXITED		674711	0					
ANR	674747	Label	case JOB_COREDUMPED :	913:1:26293:26312	674711	1	True				
ANR	674748	Identifier	JOB_COREDUMPED		674711	0					
ANR	674749	BreakStatement	break ;	914:2:26316:26321	674711	2	True				
ANR	674750	Label	default :	915:1:26324:26331	674711	3	True				
ANR	674751	Identifier	default		674711	0					
ANR	674752	ExpressionStatement	"dprintf ( D_ALWAYS , ""UserLog logTerminateEvent with unknown reason (%d), aborting\\n"" , exitReason )"	916:2:26335:26443	674711	4	True				
ANR	674753	CallExpression	"dprintf ( D_ALWAYS , ""UserLog logTerminateEvent with unknown reason (%d), aborting\\n"" , exitReason )"		674711	0					
ANR	674754	Callee	dprintf		674711	0					
ANR	674755	Identifier	dprintf		674711	0					
ANR	674756	ArgumentList	D_ALWAYS		674711	1					
ANR	674757	Argument	D_ALWAYS		674711	0					
ANR	674758	Identifier	D_ALWAYS		674711	0					
ANR	674759	Argument	"""UserLog logTerminateEvent with unknown reason (%d), aborting\\n"""		674711	1					
ANR	674760	PrimaryExpression	"""UserLog logTerminateEvent with unknown reason (%d), aborting\\n"""		674711	0					
ANR	674761	Argument	exitReason		674711	2					
ANR	674762	Identifier	exitReason		674711	0					
ANR	674763	ReturnStatement	return ;	919:2:26448:26454	674711	5	True				
ANR	674764	IfStatement	if ( kind == US_TERMINATE_PENDING )		674711	5					
ANR	674765	Condition	kind == US_TERMINATE_PENDING	922:5:26465:26492	674711	0	True				
ANR	674766	EqualityExpression	kind == US_TERMINATE_PENDING		674711	0		==			
ANR	674767	Identifier	kind		674711	0					
ANR	674768	Identifier	US_TERMINATE_PENDING		674711	1					
ANR	674769	CompoundStatement		24:2:467:484	674711	1					
ANR	674770	IdentifierDeclStatement	float float_value ;	924:2:26500:26517	674711	0	True				
ANR	674771	IdentifierDecl	float_value		674711	0					
ANR	674772	IdentifierDeclType	float		674711	0					
ANR	674773	Identifier	float_value		674711	1					
ANR	674774	IdentifierDeclStatement	int exited_by_signal = FALSE ;	925:2:26521:26549	674711	1	True				
ANR	674775	IdentifierDecl	exited_by_signal = FALSE		674711	0					
ANR	674776	IdentifierDeclType	int		674711	0					
ANR	674777	Identifier	exited_by_signal		674711	1					
ANR	674778	AssignmentExpression	exited_by_signal = FALSE		674711	2		=			
ANR	674779	Identifier	FALSE		674711	0					
ANR	674780	Identifier	FALSE		674711	1					
ANR	674781	IdentifierDeclStatement	int exit_signal = 0 ;	926:2:26553:26572	674711	2	True				
ANR	674782	IdentifierDecl	exit_signal = 0		674711	0					
ANR	674783	IdentifierDeclType	int		674711	0					
ANR	674784	Identifier	exit_signal		674711	1					
ANR	674785	AssignmentExpression	exit_signal = 0		674711	2		=			
ANR	674786	Identifier	exit_signal		674711	0					
ANR	674787	PrimaryExpression	0		674711	1					
ANR	674788	IdentifierDeclStatement	int exit_code = 0 ;	927:2:26576:26593	674711	3	True				
ANR	674789	IdentifierDecl	exit_code = 0		674711	0					
ANR	674790	IdentifierDeclType	int		674711	0					
ANR	674791	Identifier	exit_code		674711	1					
ANR	674792	AssignmentExpression	exit_code = 0		674711	2		=			
ANR	674793	Identifier	exit_code		674711	0					
ANR	674794	PrimaryExpression	0		674711	1					
ANR	674795	ExpressionStatement	"getJobAdExitedBySignal ( jobAd , exited_by_signal )"	929:2:26598:26645	674711	4	True				
ANR	674796	CallExpression	"getJobAdExitedBySignal ( jobAd , exited_by_signal )"		674711	0					
ANR	674797	Callee	getJobAdExitedBySignal		674711	0					
ANR	674798	Identifier	getJobAdExitedBySignal		674711	0					
ANR	674799	ArgumentList	jobAd		674711	1					
ANR	674800	Argument	jobAd		674711	0					
ANR	674801	Identifier	jobAd		674711	0					
ANR	674802	Argument	exited_by_signal		674711	1					
ANR	674803	Identifier	exited_by_signal		674711	0					
ANR	674804	IfStatement	if ( exited_by_signal == TRUE )		674711	5					
ANR	674805	Condition	exited_by_signal == TRUE	930:6:26653:26676	674711	0	True				
ANR	674806	EqualityExpression	exited_by_signal == TRUE		674711	0		==			
ANR	674807	Identifier	exited_by_signal		674711	0					
ANR	674808	Identifier	TRUE		674711	1					
ANR	674809	CompoundStatement		27:32:570:570	674711	1					
ANR	674810	ExpressionStatement	"getJobAdExitSignal ( jobAd , exit_signal )"	931:3:26684:26722	674711	0	True				
ANR	674811	CallExpression	"getJobAdExitSignal ( jobAd , exit_signal )"		674711	0					
ANR	674812	Callee	getJobAdExitSignal		674711	0					
ANR	674813	Identifier	getJobAdExitSignal		674711	0					
ANR	674814	ArgumentList	jobAd		674711	1					
ANR	674815	Argument	jobAd		674711	0					
ANR	674816	Identifier	jobAd		674711	0					
ANR	674817	Argument	exit_signal		674711	1					
ANR	674818	Identifier	exit_signal		674711	0					
ANR	674819	ExpressionStatement	event . normal = false	932:3:26727:26747	674711	1	True				
ANR	674820	AssignmentExpression	event . normal = false		674711	0		=			
ANR	674821	MemberAccess	event . normal		674711	0					
ANR	674822	Identifier	event		674711	0					
ANR	674823	Identifier	normal		674711	1					
ANR	674824	Identifier	false		674711	1					
ANR	674825	ExpressionStatement	event . signalNumber = exit_signal	933:3:26752:26784	674711	2	True				
ANR	674826	AssignmentExpression	event . signalNumber = exit_signal		674711	0		=			
ANR	674827	MemberAccess	event . signalNumber		674711	0					
ANR	674828	Identifier	event		674711	0					
ANR	674829	Identifier	signalNumber		674711	1					
ANR	674830	Identifier	exit_signal		674711	1					
ANR	674831	ElseStatement	else		674711	0					
ANR	674832	CompoundStatement		31:9:686:686	674711	0					
ANR	674833	ExpressionStatement	"getJobAdExitCode ( jobAd , exit_code )"	935:3:26800:26834	674711	0	True				
ANR	674834	CallExpression	"getJobAdExitCode ( jobAd , exit_code )"		674711	0					
ANR	674835	Callee	getJobAdExitCode		674711	0					
ANR	674836	Identifier	getJobAdExitCode		674711	0					
ANR	674837	ArgumentList	jobAd		674711	1					
ANR	674838	Argument	jobAd		674711	0					
ANR	674839	Identifier	jobAd		674711	0					
ANR	674840	Argument	exit_code		674711	1					
ANR	674841	Identifier	exit_code		674711	0					
ANR	674842	ExpressionStatement	event . normal = true	936:3:26839:26858	674711	1	True				
ANR	674843	AssignmentExpression	event . normal = true		674711	0		=			
ANR	674844	MemberAccess	event . normal		674711	0					
ANR	674845	Identifier	event		674711	0					
ANR	674846	Identifier	normal		674711	1					
ANR	674847	Identifier	true		674711	1					
ANR	674848	ExpressionStatement	event . returnValue = exit_code	937:3:26863:26892	674711	2	True				
ANR	674849	AssignmentExpression	event . returnValue = exit_code		674711	0		=			
ANR	674850	MemberAccess	event . returnValue		674711	0					
ANR	674851	Identifier	event		674711	0					
ANR	674852	Identifier	returnValue		674711	1					
ANR	674853	Identifier	exit_code		674711	1					
ANR	674854	IfStatement	"if ( jobAd -> LookupFloat ( ATTR_JOB_REMOTE_SYS_CPU , float_value ) )"		674711	6					
ANR	674855	Condition	"jobAd -> LookupFloat ( ATTR_JOB_REMOTE_SYS_CPU , float_value )"	941:6:26950:27005	674711	0	True				
ANR	674856	CallExpression	"jobAd -> LookupFloat ( ATTR_JOB_REMOTE_SYS_CPU , float_value )"		674711	0					
ANR	674857	Callee	jobAd -> LookupFloat		674711	0					
ANR	674858	PtrMemberAccess	jobAd -> LookupFloat		674711	0					
ANR	674859	Identifier	jobAd		674711	0					
ANR	674860	Identifier	LookupFloat		674711	1					
ANR	674861	ArgumentList	ATTR_JOB_REMOTE_SYS_CPU		674711	1					
ANR	674862	Argument	ATTR_JOB_REMOTE_SYS_CPU		674711	0					
ANR	674863	Identifier	ATTR_JOB_REMOTE_SYS_CPU		674711	0					
ANR	674864	Argument	float_value		674711	1					
ANR	674865	Identifier	float_value		674711	0					
ANR	674866	CompoundStatement		38:65:900:900	674711	1					
ANR	674867	ExpressionStatement	run_remote_rusage . ru_stime . tv_sec = ( int ) float_value	942:3:27014:27067	674711	0	True				
ANR	674868	AssignmentExpression	run_remote_rusage . ru_stime . tv_sec = ( int ) float_value		674711	0		=			
ANR	674869	MemberAccess	run_remote_rusage . ru_stime . tv_sec		674711	0					
ANR	674870	MemberAccess	run_remote_rusage . ru_stime		674711	0					
ANR	674871	Identifier	run_remote_rusage		674711	0					
ANR	674872	Identifier	ru_stime		674711	1					
ANR	674873	Identifier	tv_sec		674711	1					
ANR	674874	CastExpression	( int ) float_value		674711	1					
ANR	674875	CastTarget	int		674711	0					
ANR	674876	Identifier	float_value		674711	1					
ANR	674877	IfStatement	"if ( jobAd -> LookupFloat ( ATTR_JOB_REMOTE_USER_CPU , float_value ) )"		674711	7					
ANR	674878	Condition	"jobAd -> LookupFloat ( ATTR_JOB_REMOTE_USER_CPU , float_value )"	945:6:27080:27136	674711	0	True				
ANR	674879	CallExpression	"jobAd -> LookupFloat ( ATTR_JOB_REMOTE_USER_CPU , float_value )"		674711	0					
ANR	674880	Callee	jobAd -> LookupFloat		674711	0					
ANR	674881	PtrMemberAccess	jobAd -> LookupFloat		674711	0					
ANR	674882	Identifier	jobAd		674711	0					
ANR	674883	Identifier	LookupFloat		674711	1					
ANR	674884	ArgumentList	ATTR_JOB_REMOTE_USER_CPU		674711	1					
ANR	674885	Argument	ATTR_JOB_REMOTE_USER_CPU		674711	0					
ANR	674886	Identifier	ATTR_JOB_REMOTE_USER_CPU		674711	0					
ANR	674887	Argument	float_value		674711	1					
ANR	674888	Identifier	float_value		674711	0					
ANR	674889	CompoundStatement		42:66:1031:1031	674711	1					
ANR	674890	ExpressionStatement	run_remote_rusage . ru_utime . tv_sec = ( int ) float_value	946:3:27145:27198	674711	0	True				
ANR	674891	AssignmentExpression	run_remote_rusage . ru_utime . tv_sec = ( int ) float_value		674711	0		=			
ANR	674892	MemberAccess	run_remote_rusage . ru_utime . tv_sec		674711	0					
ANR	674893	MemberAccess	run_remote_rusage . ru_utime		674711	0					
ANR	674894	Identifier	run_remote_rusage		674711	0					
ANR	674895	Identifier	ru_utime		674711	1					
ANR	674896	Identifier	tv_sec		674711	1					
ANR	674897	CastExpression	( int ) float_value		674711	1					
ANR	674898	CastTarget	int		674711	0					
ANR	674899	Identifier	float_value		674711	1					
ANR	674900	ExpressionStatement	event . run_remote_rusage = run_remote_rusage	949:2:27207:27250	674711	8	True				
ANR	674901	AssignmentExpression	event . run_remote_rusage = run_remote_rusage		674711	0		=			
ANR	674902	MemberAccess	event . run_remote_rusage		674711	0					
ANR	674903	Identifier	event		674711	0					
ANR	674904	Identifier	run_remote_rusage		674711	1					
ANR	674905	Identifier	run_remote_rusage		674711	1					
ANR	674906	ExpressionStatement	event . total_remote_rusage = run_remote_rusage	950:2:27254:27299	674711	9	True				
ANR	674907	AssignmentExpression	event . total_remote_rusage = run_remote_rusage		674711	0		=			
ANR	674908	MemberAccess	event . total_remote_rusage		674711	0					
ANR	674909	Identifier	event		674711	0					
ANR	674910	Identifier	total_remote_rusage		674711	1					
ANR	674911	Identifier	run_remote_rusage		674711	1					
ANR	674912	ExpressionStatement	"jobAd -> LookupFloat ( ATTR_BYTES_SENT , event . recvd_bytes )"	957:2:27476:27530	674711	10	True				
ANR	674913	CallExpression	"jobAd -> LookupFloat ( ATTR_BYTES_SENT , event . recvd_bytes )"		674711	0					
ANR	674914	Callee	jobAd -> LookupFloat		674711	0					
ANR	674915	PtrMemberAccess	jobAd -> LookupFloat		674711	0					
ANR	674916	Identifier	jobAd		674711	0					
ANR	674917	Identifier	LookupFloat		674711	1					
ANR	674918	ArgumentList	ATTR_BYTES_SENT		674711	1					
ANR	674919	Argument	ATTR_BYTES_SENT		674711	0					
ANR	674920	Identifier	ATTR_BYTES_SENT		674711	0					
ANR	674921	Argument	event . recvd_bytes		674711	1					
ANR	674922	MemberAccess	event . recvd_bytes		674711	0					
ANR	674923	Identifier	event		674711	0					
ANR	674924	Identifier	recvd_bytes		674711	1					
ANR	674925	ExpressionStatement	"jobAd -> LookupFloat ( ATTR_BYTES_RECVD , event . sent_bytes )"	958:2:27534:27588	674711	11	True				
ANR	674926	CallExpression	"jobAd -> LookupFloat ( ATTR_BYTES_RECVD , event . sent_bytes )"		674711	0					
ANR	674927	Callee	jobAd -> LookupFloat		674711	0					
ANR	674928	PtrMemberAccess	jobAd -> LookupFloat		674711	0					
ANR	674929	Identifier	jobAd		674711	0					
ANR	674930	Identifier	LookupFloat		674711	1					
ANR	674931	ArgumentList	ATTR_BYTES_RECVD		674711	1					
ANR	674932	Argument	ATTR_BYTES_RECVD		674711	0					
ANR	674933	Identifier	ATTR_BYTES_RECVD		674711	0					
ANR	674934	Argument	event . sent_bytes		674711	1					
ANR	674935	MemberAccess	event . sent_bytes		674711	0					
ANR	674936	Identifier	event		674711	0					
ANR	674937	Identifier	sent_bytes		674711	1					
ANR	674938	ExpressionStatement	event . total_recvd_bytes = event . recvd_bytes	960:2:27593:27636	674711	12	True				
ANR	674939	AssignmentExpression	event . total_recvd_bytes = event . recvd_bytes		674711	0		=			
ANR	674940	MemberAccess	event . total_recvd_bytes		674711	0					
ANR	674941	Identifier	event		674711	0					
ANR	674942	Identifier	total_recvd_bytes		674711	1					
ANR	674943	MemberAccess	event . recvd_bytes		674711	1					
ANR	674944	Identifier	event		674711	0					
ANR	674945	Identifier	recvd_bytes		674711	1					
ANR	674946	ExpressionStatement	event . total_sent_bytes = event . sent_bytes	961:2:27640:27681	674711	13	True				
ANR	674947	AssignmentExpression	event . total_sent_bytes = event . sent_bytes		674711	0		=			
ANR	674948	MemberAccess	event . total_sent_bytes		674711	0					
ANR	674949	Identifier	event		674711	0					
ANR	674950	Identifier	total_sent_bytes		674711	1					
ANR	674951	MemberAccess	event . sent_bytes		674711	1					
ANR	674952	Identifier	event		674711	0					
ANR	674953	Identifier	sent_bytes		674711	1					
ANR	674954	IfStatement	if ( exited_by_signal == TRUE )		674711	14					
ANR	674955	Condition	exited_by_signal == TRUE	963:6:27691:27714	674711	0	True				
ANR	674956	EqualityExpression	exited_by_signal == TRUE		674711	0		==			
ANR	674957	Identifier	exited_by_signal		674711	0					
ANR	674958	Identifier	TRUE		674711	1					
ANR	674959	CompoundStatement		60:33:1609:1609	674711	1					
ANR	674960	ExpressionStatement	"jobAd -> LookupString ( ATTR_JOB_CORE_FILENAME , corefile )"	964:3:27723:27776	674711	0	True				
ANR	674961	CallExpression	"jobAd -> LookupString ( ATTR_JOB_CORE_FILENAME , corefile )"		674711	0					
ANR	674962	Callee	jobAd -> LookupString		674711	0					
ANR	674963	PtrMemberAccess	jobAd -> LookupString		674711	0					
ANR	674964	Identifier	jobAd		674711	0					
ANR	674965	Identifier	LookupString		674711	1					
ANR	674966	ArgumentList	ATTR_JOB_CORE_FILENAME		674711	1					
ANR	674967	Argument	ATTR_JOB_CORE_FILENAME		674711	0					
ANR	674968	Identifier	ATTR_JOB_CORE_FILENAME		674711	0					
ANR	674969	Argument	corefile		674711	1					
ANR	674970	Identifier	corefile		674711	0					
ANR	674971	ExpressionStatement	event . setCoreFile ( corefile . Value ( ) )	965:3:27781:27818	674711	1	True				
ANR	674972	CallExpression	event . setCoreFile ( corefile . Value ( ) )		674711	0					
ANR	674973	Callee	event . setCoreFile		674711	0					
ANR	674974	MemberAccess	event . setCoreFile		674711	0					
ANR	674975	Identifier	event		674711	0					
ANR	674976	Identifier	setCoreFile		674711	1					
ANR	674977	ArgumentList	corefile . Value ( )		674711	1					
ANR	674978	Argument	corefile . Value ( )		674711	0					
ANR	674979	CallExpression	corefile . Value ( )		674711	0					
ANR	674980	Callee	corefile . Value		674711	0					
ANR	674981	MemberAccess	corefile . Value		674711	0					
ANR	674982	Identifier	corefile		674711	0					
ANR	674983	Identifier	Value		674711	1					
ANR	674984	ArgumentList			674711	1					
ANR	674985	IfStatement	"if ( ! uLog . writeEvent ( & event , jobAd ) )"		674711	15					
ANR	674986	Condition	"! uLog . writeEvent ( & event , jobAd )"	968:6:27831:27861	674711	0	True				
ANR	674987	UnaryOperationExpression	"! uLog . writeEvent ( & event , jobAd )"		674711	0					
ANR	674988	UnaryOperator	!		674711	0					
ANR	674989	CallExpression	"uLog . writeEvent ( & event , jobAd )"		674711	1					
ANR	674990	Callee	uLog . writeEvent		674711	0					
ANR	674991	MemberAccess	uLog . writeEvent		674711	0					
ANR	674992	Identifier	uLog		674711	0					
ANR	674993	Identifier	writeEvent		674711	1					
ANR	674994	ArgumentList	& event		674711	1					
ANR	674995	Argument	& event		674711	0					
ANR	674996	UnaryOperationExpression	& event		674711	0					
ANR	674997	UnaryOperator	&		674711	0					
ANR	674998	Identifier	event		674711	1					
ANR	674999	Argument	jobAd		674711	1					
ANR	675000	Identifier	jobAd		674711	0					
ANR	675001	CompoundStatement		65:39:1755:1755	674711	1					
ANR	675002	Statement	dprintf	969:3:27869:27875	674711	0	True				
ANR	675003	Statement	(	969:11:27877:27877	674711	1	True				
ANR	675004	Statement	D_ALWAYS	969:12:27878:27885	674711	2	True				
ANR	675005	Statement	","	969:20:27886:27886	674711	3	True				
ANR	675006	Statement	"""Unable to log """	969:21:27887:27902	674711	4	True				
ANR	675007	Statement	"""ULOG_JOB_TERMINATED event\\n"""	970:6:27910:27938	674711	5	True				
ANR	675008	Statement	)	970:35:27939:27939	674711	6	True				
ANR	675009	ExpressionStatement		970:36:27940:27940	674711	7	True				
ANR	675010	ExpressionStatement	"EXCEPT ( ""UserLog Unable to log ULOG_JOB_TERMINATED event"" )"	971:3:27945:28002	674711	8	True				
ANR	675011	CallExpression	"EXCEPT ( ""UserLog Unable to log ULOG_JOB_TERMINATED event"" )"		674711	0					
ANR	675012	Callee	EXCEPT		674711	0					
ANR	675013	Identifier	EXCEPT		674711	0					
ANR	675014	ArgumentList	"""UserLog Unable to log ULOG_JOB_TERMINATED event"""		674711	1					
ANR	675015	Argument	"""UserLog Unable to log ULOG_JOB_TERMINATED event"""		674711	0					
ANR	675016	PrimaryExpression	"""UserLog Unable to log ULOG_JOB_TERMINATED event"""		674711	0					
ANR	675017	ReturnStatement	return ;	974:2:28011:28017	674711	16	True				
ANR	675018	ExpressionStatement	run_remote_rusage = getRUsage ( )	979:1:28064:28095	674711	6	True				
ANR	675019	AssignmentExpression	run_remote_rusage = getRUsage ( )		674711	0		=			
ANR	675020	Identifier	run_remote_rusage		674711	0					
ANR	675021	CallExpression	getRUsage ( )		674711	1					
ANR	675022	Callee	getRUsage		674711	0					
ANR	675023	Identifier	getRUsage		674711	0					
ANR	675024	ArgumentList			674711	1					
ANR	675025	IfStatement	if ( exitedBySignal ( ) )		674711	7					
ANR	675026	Condition	exitedBySignal ( )	981:5:28104:28119	674711	0	True				
ANR	675027	CallExpression	exitedBySignal ( )		674711	0					
ANR	675028	Callee	exitedBySignal		674711	0					
ANR	675029	Identifier	exitedBySignal		674711	0					
ANR	675030	ArgumentList			674711	1					
ANR	675031	CompoundStatement		78:24:2014:2014	674711	1					
ANR	675032	ExpressionStatement	event . normal = false	982:2:28127:28147	674711	0	True				
ANR	675033	AssignmentExpression	event . normal = false		674711	0		=			
ANR	675034	MemberAccess	event . normal		674711	0					
ANR	675035	Identifier	event		674711	0					
ANR	675036	Identifier	normal		674711	1					
ANR	675037	Identifier	false		674711	1					
ANR	675038	ExpressionStatement	event . signalNumber = exitSignal ( )	983:2:28151:28184	674711	1	True				
ANR	675039	AssignmentExpression	event . signalNumber = exitSignal ( )		674711	0		=			
ANR	675040	MemberAccess	event . signalNumber		674711	0					
ANR	675041	Identifier	event		674711	0					
ANR	675042	Identifier	signalNumber		674711	1					
ANR	675043	CallExpression	exitSignal ( )		674711	1					
ANR	675044	Callee	exitSignal		674711	0					
ANR	675045	Identifier	exitSignal		674711	0					
ANR	675046	ArgumentList			674711	1					
ANR	675047	ElseStatement	else		674711	0					
ANR	675048	CompoundStatement		81:8:2085:2085	674711	0					
ANR	675049	ExpressionStatement	event . normal = true	985:2:28198:28217	674711	0	True				
ANR	675050	AssignmentExpression	event . normal = true		674711	0		=			
ANR	675051	MemberAccess	event . normal		674711	0					
ANR	675052	Identifier	event		674711	0					
ANR	675053	Identifier	normal		674711	1					
ANR	675054	Identifier	true		674711	1					
ANR	675055	ExpressionStatement	event . returnValue = exitCode ( )	986:2:28221:28251	674711	1	True				
ANR	675056	AssignmentExpression	event . returnValue = exitCode ( )		674711	0		=			
ANR	675057	MemberAccess	event . returnValue		674711	0					
ANR	675058	Identifier	event		674711	0					
ANR	675059	Identifier	returnValue		674711	1					
ANR	675060	CallExpression	exitCode ( )		674711	1					
ANR	675061	Callee	exitCode		674711	0					
ANR	675062	Identifier	exitCode		674711	0					
ANR	675063	ArgumentList			674711	1					
ANR	675064	ExpressionStatement	event . run_remote_rusage = run_remote_rusage	991:1:28329:28372	674711	8	True				
ANR	675065	AssignmentExpression	event . run_remote_rusage = run_remote_rusage		674711	0		=			
ANR	675066	MemberAccess	event . run_remote_rusage		674711	0					
ANR	675067	Identifier	event		674711	0					
ANR	675068	Identifier	run_remote_rusage		674711	1					
ANR	675069	Identifier	run_remote_rusage		674711	1					
ANR	675070	ExpressionStatement	event . total_remote_rusage = run_remote_rusage	993:1:28410:28455	674711	9	True				
ANR	675071	AssignmentExpression	event . total_remote_rusage = run_remote_rusage		674711	0		=			
ANR	675072	MemberAccess	event . total_remote_rusage		674711	0					
ANR	675073	Identifier	event		674711	0					
ANR	675074	Identifier	total_remote_rusage		674711	1					
ANR	675075	Identifier	run_remote_rusage		674711	1					
ANR	675076	ExpressionStatement	event . recvd_bytes = bytesSent ( )	1000:1:28631:28662	674711	10	True				
ANR	675077	AssignmentExpression	event . recvd_bytes = bytesSent ( )		674711	0		=			
ANR	675078	MemberAccess	event . recvd_bytes		674711	0					
ANR	675079	Identifier	event		674711	0					
ANR	675080	Identifier	recvd_bytes		674711	1					
ANR	675081	CallExpression	bytesSent ( )		674711	1					
ANR	675082	Callee	bytesSent		674711	0					
ANR	675083	Identifier	bytesSent		674711	0					
ANR	675084	ArgumentList			674711	1					
ANR	675085	ExpressionStatement	event . sent_bytes = bytesReceived ( )	1001:1:28665:28699	674711	11	True				
ANR	675086	AssignmentExpression	event . sent_bytes = bytesReceived ( )		674711	0		=			
ANR	675087	MemberAccess	event . sent_bytes		674711	0					
ANR	675088	Identifier	event		674711	0					
ANR	675089	Identifier	sent_bytes		674711	1					
ANR	675090	CallExpression	bytesReceived ( )		674711	1					
ANR	675091	Callee	bytesReceived		674711	0					
ANR	675092	Identifier	bytesReceived		674711	0					
ANR	675093	ArgumentList			674711	1					
ANR	675094	ExpressionStatement	event . total_recvd_bytes = prev_run_bytes_recvd + bytesSent ( )	1003:1:28703:28763	674711	12	True				
ANR	675095	AssignmentExpression	event . total_recvd_bytes = prev_run_bytes_recvd + bytesSent ( )		674711	0		=			
ANR	675096	MemberAccess	event . total_recvd_bytes		674711	0					
ANR	675097	Identifier	event		674711	0					
ANR	675098	Identifier	total_recvd_bytes		674711	1					
ANR	675099	AdditiveExpression	prev_run_bytes_recvd + bytesSent ( )		674711	1		+			
ANR	675100	Identifier	prev_run_bytes_recvd		674711	0					
ANR	675101	CallExpression	bytesSent ( )		674711	1					
ANR	675102	Callee	bytesSent		674711	0					
ANR	675103	Identifier	bytesSent		674711	0					
ANR	675104	ArgumentList			674711	1					
ANR	675105	ExpressionStatement	event . total_sent_bytes = prev_run_bytes_sent + bytesReceived ( )	1004:1:28766:28828	674711	13	True				
ANR	675106	AssignmentExpression	event . total_sent_bytes = prev_run_bytes_sent + bytesReceived ( )		674711	0		=			
ANR	675107	MemberAccess	event . total_sent_bytes		674711	0					
ANR	675108	Identifier	event		674711	0					
ANR	675109	Identifier	total_sent_bytes		674711	1					
ANR	675110	AdditiveExpression	prev_run_bytes_sent + bytesReceived ( )		674711	1		+			
ANR	675111	Identifier	prev_run_bytes_sent		674711	0					
ANR	675112	CallExpression	bytesReceived ( )		674711	1					
ANR	675113	Callee	bytesReceived		674711	0					
ANR	675114	Identifier	bytesReceived		674711	0					
ANR	675115	ArgumentList			674711	1					
ANR	675116	IfStatement	if ( exitReason == JOB_COREDUMPED )		674711	14					
ANR	675117	Condition	exitReason == JOB_COREDUMPED	1006:5:28837:28864	674711	0	True				
ANR	675118	EqualityExpression	exitReason == JOB_COREDUMPED		674711	0		==			
ANR	675119	Identifier	exitReason		674711	0					
ANR	675120	Identifier	JOB_COREDUMPED		674711	1					
ANR	675121	CompoundStatement		103:36:2759:2759	674711	1					
ANR	675122	ExpressionStatement	event . setCoreFile ( core_file_name )	1007:2:28872:28907	674711	0	True				
ANR	675123	CallExpression	event . setCoreFile ( core_file_name )		674711	0					
ANR	675124	Callee	event . setCoreFile		674711	0					
ANR	675125	MemberAccess	event . setCoreFile		674711	0					
ANR	675126	Identifier	event		674711	0					
ANR	675127	Identifier	setCoreFile		674711	1					
ANR	675128	ArgumentList	core_file_name		674711	1					
ANR	675129	Argument	core_file_name		674711	0					
ANR	675130	Identifier	core_file_name		674711	0					
ANR	675131	IfStatement	"if ( ! uLog . writeEvent ( & event , jobAd ) )"		674711	15					
ANR	675132	Condition	"! uLog . writeEvent ( & event , jobAd )"	1010:5:28919:28949	674711	0	True				
ANR	675133	UnaryOperationExpression	"! uLog . writeEvent ( & event , jobAd )"		674711	0					
ANR	675134	UnaryOperator	!		674711	0					
ANR	675135	CallExpression	"uLog . writeEvent ( & event , jobAd )"		674711	1					
ANR	675136	Callee	uLog . writeEvent		674711	0					
ANR	675137	MemberAccess	uLog . writeEvent		674711	0					
ANR	675138	Identifier	uLog		674711	0					
ANR	675139	Identifier	writeEvent		674711	1					
ANR	675140	ArgumentList	& event		674711	1					
ANR	675141	Argument	& event		674711	0					
ANR	675142	UnaryOperationExpression	& event		674711	0					
ANR	675143	UnaryOperator	&		674711	0					
ANR	675144	Identifier	event		674711	1					
ANR	675145	Argument	jobAd		674711	1					
ANR	675146	Identifier	jobAd		674711	0					
ANR	675147	CompoundStatement		107:38:2843:2843	674711	1					
ANR	675148	Statement	dprintf	1011:2:28956:28962	674711	0	True				
ANR	675149	Statement	(	1011:10:28964:28964	674711	1	True				
ANR	675150	Statement	D_ALWAYS	1011:11:28965:28972	674711	2	True				
ANR	675151	Statement	","	1011:19:28973:28973	674711	3	True				
ANR	675152	Statement	"""Unable to log """	1011:20:28974:28989	674711	4	True				
ANR	675153	Statement	"""ULOG_JOB_TERMINATED event\\n"""	1012:5:28996:29024	674711	5	True				
ANR	675154	Statement	)	1012:34:29025:29025	674711	6	True				
ANR	675155	ExpressionStatement		1012:35:29026:29026	674711	7	True				
ANR	675156	ExpressionStatement	"EXCEPT ( ""UserLog Unable to log ULOG_JOB_TERMINATED event"" )"	1013:2:29030:29087	674711	8	True				
ANR	675157	CallExpression	"EXCEPT ( ""UserLog Unable to log ULOG_JOB_TERMINATED event"" )"		674711	0					
ANR	675158	Callee	EXCEPT		674711	0					
ANR	675159	Identifier	EXCEPT		674711	0					
ANR	675160	ArgumentList	"""UserLog Unable to log ULOG_JOB_TERMINATED event"""		674711	1					
ANR	675161	Argument	"""UserLog Unable to log ULOG_JOB_TERMINATED event"""		674711	0					
ANR	675162	PrimaryExpression	"""UserLog Unable to log ULOG_JOB_TERMINATED event"""		674711	0					
ANR	675163	ReturnType	void		674711	1					
ANR	675164	Identifier	BaseShadow :: logTerminateEvent		674711	2					
ANR	675165	ParameterList	"int exitReason , update_style_t kind"		674711	3					
ANR	675166	Parameter	int exitReason	903:31:26070:26083	674711	0	True				
ANR	675167	ParameterType	int		674711	0					
ANR	675168	Identifier	exitReason		674711	1					
ANR	675169	Parameter	update_style_t kind	903:47:26086:26104	674711	1	True				
ANR	675170	ParameterType	update_style_t		674711	0					
ANR	675171	Identifier	kind		674711	1					
ANR	675172	CFGEntryNode	ENTRY		674711		True				
ANR	675173	CFGExitNode	EXIT		674711		True				
ANR	675174	Symbol	event . normal		674711						
ANR	675175	Symbol	exit_signal		674711						
ANR	675176	Symbol	run_remote_rusage . ru_stime		674711						
ANR	675177	Symbol	* jobAd		674711						
ANR	675178	Symbol	event . sent_bytes		674711						
ANR	675179	Symbol	exitedBySignal		674711						
ANR	675180	Symbol	prev_run_bytes_recvd		674711						
ANR	675181	Symbol	prev_run_bytes_sent		674711						
ANR	675182	Symbol	kind		674711						
ANR	675183	Symbol	TRUE		674711						
ANR	675184	Symbol	& event		674711						
ANR	675185	Symbol	event . total_remote_rusage		674711						
ANR	675186	Symbol	run_remote_rusage . ru_stime . tv_sec		674711						
ANR	675187	Symbol	exitSignal		674711						
ANR	675188	Symbol	run_remote_rusage . ru_utime . tv_sec		674711						
ANR	675189	Symbol	run_remote_rusage . ru_utime		674711						
ANR	675190	Symbol	corefile		674711						
ANR	675191	Symbol	exit_code		674711						
ANR	675192	Symbol	true		674711						
ANR	675193	Symbol	uLog		674711						
ANR	675194	Symbol	exited_by_signal		674711						
ANR	675195	Symbol	corefile . Value		674711						
ANR	675196	Symbol	JOB_COREDUMPED		674711						
ANR	675197	Symbol	uLog . writeEvent		674711						
ANR	675198	Symbol	getRUsage		674711						
ANR	675199	Symbol	jobAd		674711						
ANR	675200	Symbol	jobAd -> LookupFloat		674711						
ANR	675201	Symbol	& run_remote_rusage		674711						
ANR	675202	Symbol	event . total_sent_bytes		674711						
ANR	675203	Symbol	ATTR_JOB_REMOTE_USER_CPU		674711						
ANR	675204	Symbol	run_remote_rusage		674711						
ANR	675205	Symbol	event . returnValue		674711						
ANR	675206	Symbol	exitCode		674711						
ANR	675207	Symbol	event		674711						
ANR	675208	Symbol	ATTR_BYTES_RECVD		674711						
ANR	675209	Symbol	exitReason		674711						
ANR	675210	Symbol	event . signalNumber		674711						
ANR	675211	Symbol	D_ALWAYS		674711						
ANR	675212	Symbol	false		674711						
ANR	675213	Symbol	event . run_remote_rusage		674711						
ANR	675214	Symbol	bytesSent		674711						
ANR	675215	Symbol	ATTR_JOB_CORE_FILENAME		674711						
ANR	675216	Symbol	bytesReceived		674711						
ANR	675217	Symbol	US_TERMINATE_PENDING		674711						
ANR	675218	Symbol	ATTR_BYTES_SENT		674711						
ANR	675219	Symbol	event . recvd_bytes		674711						
ANR	675220	Symbol	event . total_recvd_bytes		674711						
ANR	675221	Symbol	float_value		674711						
ANR	675222	Symbol	FALSE		674711						
ANR	675223	Symbol	core_file_name		674711						
ANR	675224	Symbol	ATTR_JOB_REMOTE_SYS_CPU		674711						
ANR	675225	Function	BaseShadow :: logEvictEvent	1018:0:29096:30054							
ANR	675226	FunctionDef	BaseShadow :: logEvictEvent (int exitReason)		675225	0					
ANR	675227	CompoundStatement		1020:0:29145:30054	675225	0					
ANR	675228	IdentifierDeclStatement	struct rusage run_remote_rusage ;	1021:1:29148:29179	675225	0	True				
ANR	675229	IdentifierDecl	run_remote_rusage		675225	0					
ANR	675230	IdentifierDeclType	struct rusage		675225	0					
ANR	675231	Identifier	run_remote_rusage		675225	1					
ANR	675232	ExpressionStatement	"memset ( & run_remote_rusage , 0 , sizeof ( struct rusage ) )"	1022:1:29182:29236	675225	1	True				
ANR	675233	CallExpression	"memset ( & run_remote_rusage , 0 , sizeof ( struct rusage ) )"		675225	0					
ANR	675234	Callee	memset		675225	0					
ANR	675235	Identifier	memset		675225	0					
ANR	675236	ArgumentList	& run_remote_rusage		675225	1					
ANR	675237	Argument	& run_remote_rusage		675225	0					
ANR	675238	UnaryOperationExpression	& run_remote_rusage		675225	0					
ANR	675239	UnaryOperator	&		675225	0					
ANR	675240	Identifier	run_remote_rusage		675225	1					
ANR	675241	Argument	0		675225	1					
ANR	675242	PrimaryExpression	0		675225	0					
ANR	675243	Argument	sizeof ( struct rusage )		675225	2					
ANR	675244	SizeofExpression	sizeof ( struct rusage )		675225	0					
ANR	675245	Sizeof	sizeof		675225	0					
ANR	675246	SizeofOperand	struct rusage		675225	1					
ANR	675247	ExpressionStatement	run_remote_rusage = getRUsage ( )	1024:1:29240:29271	675225	2	True				
ANR	675248	AssignmentExpression	run_remote_rusage = getRUsage ( )		675225	0		=			
ANR	675249	Identifier	run_remote_rusage		675225	0					
ANR	675250	CallExpression	getRUsage ( )		675225	1					
ANR	675251	Callee	getRUsage		675225	0					
ANR	675252	Identifier	getRUsage		675225	0					
ANR	675253	ArgumentList			675225	1					
ANR	675254	SwitchStatement	switch ( exitReason )		675225	3					
ANR	675255	Condition	exitReason	1026:9:29283:29292	675225	0	True				
ANR	675256	Identifier	exitReason		675225	0					
ANR	675257	CompoundStatement		7:22:150:150	675225	1					
ANR	675258	Label	case JOB_CKPTED :	1027:1:29299:29314	675225	0	True				
ANR	675259	Identifier	JOB_CKPTED		675225	0					
ANR	675260	Label	case JOB_NOT_CKPTED :	1028:1:29317:29336	675225	1	True				
ANR	675261	Identifier	JOB_NOT_CKPTED		675225	0					
ANR	675262	Label	case JOB_KILLED :	1029:1:29339:29354	675225	2	True				
ANR	675263	Identifier	JOB_KILLED		675225	0					
ANR	675264	BreakStatement	break ;	1030:2:29358:29363	675225	3	True				
ANR	675265	Label	default :	1031:1:29366:29373	675225	4	True				
ANR	675266	Identifier	default		675225	0					
ANR	675267	ExpressionStatement	"dprintf ( D_ALWAYS , ""logEvictEvent with unknown reason (%d), aborting\\n"" , exitReason )"	1032:2:29377:29473	675225	5	True				
ANR	675268	CallExpression	"dprintf ( D_ALWAYS , ""logEvictEvent with unknown reason (%d), aborting\\n"" , exitReason )"		675225	0					
ANR	675269	Callee	dprintf		675225	0					
ANR	675270	Identifier	dprintf		675225	0					
ANR	675271	ArgumentList	D_ALWAYS		675225	1					
ANR	675272	Argument	D_ALWAYS		675225	0					
ANR	675273	Identifier	D_ALWAYS		675225	0					
ANR	675274	Argument	"""logEvictEvent with unknown reason (%d), aborting\\n"""		675225	1					
ANR	675275	PrimaryExpression	"""logEvictEvent with unknown reason (%d), aborting\\n"""		675225	0					
ANR	675276	Argument	exitReason		675225	2					
ANR	675277	Identifier	exitReason		675225	0					
ANR	675278	ReturnStatement	return ;	1035:2:29478:29484	675225	6	True				
ANR	675279	IdentifierDeclStatement	JobEvictedEvent event ;	1038:1:29491:29512	675225	4	True				
ANR	675280	IdentifierDecl	event		675225	0					
ANR	675281	IdentifierDeclType	JobEvictedEvent		675225	0					
ANR	675282	Identifier	event		675225	1					
ANR	675283	ExpressionStatement	event . checkpointed = ( exitReason == JOB_CKPTED )	1039:1:29515:29562	675225	5	True				
ANR	675284	AssignmentExpression	event . checkpointed = ( exitReason == JOB_CKPTED )		675225	0		=			
ANR	675285	MemberAccess	event . checkpointed		675225	0					
ANR	675286	Identifier	event		675225	0					
ANR	675287	Identifier	checkpointed		675225	1					
ANR	675288	EqualityExpression	exitReason == JOB_CKPTED		675225	1		==			
ANR	675289	Identifier	exitReason		675225	0					
ANR	675290	Identifier	JOB_CKPTED		675225	1					
ANR	675291	ExpressionStatement	event . run_remote_rusage = run_remote_rusage	1045:1:29656:29699	675225	6	True				
ANR	675292	AssignmentExpression	event . run_remote_rusage = run_remote_rusage		675225	0		=			
ANR	675293	MemberAccess	event . run_remote_rusage		675225	0					
ANR	675294	Identifier	event		675225	0					
ANR	675295	Identifier	run_remote_rusage		675225	1					
ANR	675296	Identifier	run_remote_rusage		675225	1					
ANR	675297	ExpressionStatement	event . recvd_bytes = bytesSent ( )	1052:1:29875:29906	675225	7	True				
ANR	675298	AssignmentExpression	event . recvd_bytes = bytesSent ( )		675225	0		=			
ANR	675299	MemberAccess	event . recvd_bytes		675225	0					
ANR	675300	Identifier	event		675225	0					
ANR	675301	Identifier	recvd_bytes		675225	1					
ANR	675302	CallExpression	bytesSent ( )		675225	1					
ANR	675303	Callee	bytesSent		675225	0					
ANR	675304	Identifier	bytesSent		675225	0					
ANR	675305	ArgumentList			675225	1					
ANR	675306	ExpressionStatement	event . sent_bytes = bytesReceived ( )	1053:1:29909:29943	675225	8	True				
ANR	675307	AssignmentExpression	event . sent_bytes = bytesReceived ( )		675225	0		=			
ANR	675308	MemberAccess	event . sent_bytes		675225	0					
ANR	675309	Identifier	event		675225	0					
ANR	675310	Identifier	sent_bytes		675225	1					
ANR	675311	CallExpression	bytesReceived ( )		675225	1					
ANR	675312	Callee	bytesReceived		675225	0					
ANR	675313	Identifier	bytesReceived		675225	0					
ANR	675314	ArgumentList			675225	1					
ANR	675315	IfStatement	"if ( ! uLog . writeEvent ( & event , jobAd ) )"		675225	9					
ANR	675316	Condition	"! uLog . writeEvent ( & event , jobAd )"	1055:5:29952:29982	675225	0	True				
ANR	675317	UnaryOperationExpression	"! uLog . writeEvent ( & event , jobAd )"		675225	0					
ANR	675318	UnaryOperator	!		675225	0					
ANR	675319	CallExpression	"uLog . writeEvent ( & event , jobAd )"		675225	1					
ANR	675320	Callee	uLog . writeEvent		675225	0					
ANR	675321	MemberAccess	uLog . writeEvent		675225	0					
ANR	675322	Identifier	uLog		675225	0					
ANR	675323	Identifier	writeEvent		675225	1					
ANR	675324	ArgumentList	& event		675225	1					
ANR	675325	Argument	& event		675225	0					
ANR	675326	UnaryOperationExpression	& event		675225	0					
ANR	675327	UnaryOperator	&		675225	0					
ANR	675328	Identifier	event		675225	1					
ANR	675329	Argument	jobAd		675225	1					
ANR	675330	Identifier	jobAd		675225	0					
ANR	675331	CompoundStatement		36:38:839:839	675225	1					
ANR	675332	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to log ULOG_JOB_EVICTED event\\n"" )"	1056:2:29989:30049	675225	0	True				
ANR	675333	CallExpression	"dprintf ( D_ALWAYS , ""Unable to log ULOG_JOB_EVICTED event\\n"" )"		675225	0					
ANR	675334	Callee	dprintf		675225	0					
ANR	675335	Identifier	dprintf		675225	0					
ANR	675336	ArgumentList	D_ALWAYS		675225	1					
ANR	675337	Argument	D_ALWAYS		675225	0					
ANR	675338	Identifier	D_ALWAYS		675225	0					
ANR	675339	Argument	"""Unable to log ULOG_JOB_EVICTED event\\n"""		675225	1					
ANR	675340	PrimaryExpression	"""Unable to log ULOG_JOB_EVICTED event\\n"""		675225	0					
ANR	675341	ReturnType	void		675225	1					
ANR	675342	Identifier	BaseShadow :: logEvictEvent		675225	2					
ANR	675343	ParameterList	int exitReason		675225	3					
ANR	675344	Parameter	int exitReason	1019:27:29128:29141	675225	0	True				
ANR	675345	ParameterType	int		675225	0					
ANR	675346	Identifier	exitReason		675225	1					
ANR	675347	CFGEntryNode	ENTRY		675225		True				
ANR	675348	CFGExitNode	EXIT		675225		True				
ANR	675349	Symbol	event . sent_bytes		675225						
ANR	675350	Symbol	exitReason		675225						
ANR	675351	Symbol	uLog . writeEvent		675225						
ANR	675352	Symbol	getRUsage		675225						
ANR	675353	Symbol	event . checkpointed		675225						
ANR	675354	Symbol	D_ALWAYS		675225						
ANR	675355	Symbol	event . run_remote_rusage		675225						
ANR	675356	Symbol	jobAd		675225						
ANR	675357	Symbol	bytesSent		675225						
ANR	675358	Symbol	& event		675225						
ANR	675359	Symbol	& run_remote_rusage		675225						
ANR	675360	Symbol	bytesReceived		675225						
ANR	675361	Symbol	run_remote_rusage		675225						
ANR	675362	Symbol	event . recvd_bytes		675225						
ANR	675363	Symbol	uLog		675225						
ANR	675364	Symbol	event		675225						
ANR	675365	Symbol	JOB_CKPTED		675225						
ANR	675366	Function	BaseShadow :: logRequeueEvent	1061:0:30058:31128							
ANR	675367	FunctionDef	BaseShadow :: logRequeueEvent (const char * reason)		675366	0					
ANR	675368	CompoundStatement		1063:0:30113:31128	675366	0					
ANR	675369	IdentifierDeclStatement	struct rusage run_remote_rusage ;	1064:1:30116:30147	675366	0	True				
ANR	675370	IdentifierDecl	run_remote_rusage		675366	0					
ANR	675371	IdentifierDeclType	struct rusage		675366	0					
ANR	675372	Identifier	run_remote_rusage		675366	1					
ANR	675373	ExpressionStatement	"memset ( & run_remote_rusage , 0 , sizeof ( struct rusage ) )"	1065:1:30150:30204	675366	1	True				
ANR	675374	CallExpression	"memset ( & run_remote_rusage , 0 , sizeof ( struct rusage ) )"		675366	0					
ANR	675375	Callee	memset		675366	0					
ANR	675376	Identifier	memset		675366	0					
ANR	675377	ArgumentList	& run_remote_rusage		675366	1					
ANR	675378	Argument	& run_remote_rusage		675366	0					
ANR	675379	UnaryOperationExpression	& run_remote_rusage		675366	0					
ANR	675380	UnaryOperator	&		675366	0					
ANR	675381	Identifier	run_remote_rusage		675366	1					
ANR	675382	Argument	0		675366	1					
ANR	675383	PrimaryExpression	0		675366	0					
ANR	675384	Argument	sizeof ( struct rusage )		675366	2					
ANR	675385	SizeofExpression	sizeof ( struct rusage )		675366	0					
ANR	675386	Sizeof	sizeof		675366	0					
ANR	675387	SizeofOperand	struct rusage		675366	1					
ANR	675388	ExpressionStatement	run_remote_rusage = getRUsage ( )	1067:1:30208:30239	675366	2	True				
ANR	675389	AssignmentExpression	run_remote_rusage = getRUsage ( )		675366	0		=			
ANR	675390	Identifier	run_remote_rusage		675366	0					
ANR	675391	CallExpression	getRUsage ( )		675366	1					
ANR	675392	Callee	getRUsage		675366	0					
ANR	675393	Identifier	getRUsage		675366	0					
ANR	675394	ArgumentList			675366	1					
ANR	675395	IdentifierDeclStatement	int exit_reason = getExitReason ( ) ;	1069:1:30243:30276	675366	3	True				
ANR	675396	IdentifierDecl	exit_reason = getExitReason ( )		675366	0					
ANR	675397	IdentifierDeclType	int		675366	0					
ANR	675398	Identifier	exit_reason		675366	1					
ANR	675399	AssignmentExpression	exit_reason = getExitReason ( )		675366	2		=			
ANR	675400	Identifier	exit_reason		675366	0					
ANR	675401	CallExpression	getExitReason ( )		675366	1					
ANR	675402	Callee	getExitReason		675366	0					
ANR	675403	Identifier	getExitReason		675366	0					
ANR	675404	ArgumentList			675366	1					
ANR	675405	IdentifierDeclStatement	JobEvictedEvent event ;	1071:1:30280:30301	675366	4	True				
ANR	675406	IdentifierDecl	event		675366	0					
ANR	675407	IdentifierDeclType	JobEvictedEvent		675366	0					
ANR	675408	Identifier	event		675366	1					
ANR	675409	ExpressionStatement	event . terminate_and_requeued = true	1073:1:30305:30340	675366	5	True				
ANR	675410	AssignmentExpression	event . terminate_and_requeued = true		675366	0		=			
ANR	675411	MemberAccess	event . terminate_and_requeued		675366	0					
ANR	675412	Identifier	event		675366	0					
ANR	675413	Identifier	terminate_and_requeued		675366	1					
ANR	675414	Identifier	true		675366	1					
ANR	675415	IfStatement	if ( exitedBySignal ( ) )		675366	6					
ANR	675416	Condition	exitedBySignal ( )	1075:5:30348:30363	675366	0	True				
ANR	675417	CallExpression	exitedBySignal ( )		675366	0					
ANR	675418	Callee	exitedBySignal		675366	0					
ANR	675419	Identifier	exitedBySignal		675366	0					
ANR	675420	ArgumentList			675366	1					
ANR	675421	CompoundStatement		13:24:253:253	675366	1					
ANR	675422	ExpressionStatement	event . normal = false	1076:2:30371:30391	675366	0	True				
ANR	675423	AssignmentExpression	event . normal = false		675366	0		=			
ANR	675424	MemberAccess	event . normal		675366	0					
ANR	675425	Identifier	event		675366	0					
ANR	675426	Identifier	normal		675366	1					
ANR	675427	Identifier	false		675366	1					
ANR	675428	ExpressionStatement	event . signal_number = exitSignal ( )	1077:2:30395:30429	675366	1	True				
ANR	675429	AssignmentExpression	event . signal_number = exitSignal ( )		675366	0		=			
ANR	675430	MemberAccess	event . signal_number		675366	0					
ANR	675431	Identifier	event		675366	0					
ANR	675432	Identifier	signal_number		675366	1					
ANR	675433	CallExpression	exitSignal ( )		675366	1					
ANR	675434	Callee	exitSignal		675366	0					
ANR	675435	Identifier	exitSignal		675366	0					
ANR	675436	ArgumentList			675366	1					
ANR	675437	ElseStatement	else		675366	0					
ANR	675438	CompoundStatement		16:8:325:325	675366	0					
ANR	675439	ExpressionStatement	event . normal = true	1079:2:30443:30462	675366	0	True				
ANR	675440	AssignmentExpression	event . normal = true		675366	0		=			
ANR	675441	MemberAccess	event . normal		675366	0					
ANR	675442	Identifier	event		675366	0					
ANR	675443	Identifier	normal		675366	1					
ANR	675444	Identifier	true		675366	1					
ANR	675445	ExpressionStatement	event . return_value = exitCode ( )	1080:2:30466:30497	675366	1	True				
ANR	675446	AssignmentExpression	event . return_value = exitCode ( )		675366	0		=			
ANR	675447	MemberAccess	event . return_value		675366	0					
ANR	675448	Identifier	event		675366	0					
ANR	675449	Identifier	return_value		675366	1					
ANR	675450	CallExpression	exitCode ( )		675366	1					
ANR	675451	Callee	exitCode		675366	0					
ANR	675452	Identifier	exitCode		675366	0					
ANR	675453	ArgumentList			675366	1					
ANR	675454	IfStatement	if ( exit_reason == JOB_COREDUMPED )		675366	7					
ANR	675455	Condition	exit_reason == JOB_COREDUMPED	1083:5:30511:30539	675366	0	True				
ANR	675456	EqualityExpression	exit_reason == JOB_COREDUMPED		675366	0		==			
ANR	675457	Identifier	exit_reason		675366	0					
ANR	675458	Identifier	JOB_COREDUMPED		675366	1					
ANR	675459	CompoundStatement		21:37:429:429	675366	1					
ANR	675460	ExpressionStatement	event . setCoreFile ( core_file_name )	1084:2:30547:30582	675366	0	True				
ANR	675461	CallExpression	event . setCoreFile ( core_file_name )		675366	0					
ANR	675462	Callee	event . setCoreFile		675366	0					
ANR	675463	MemberAccess	event . setCoreFile		675366	0					
ANR	675464	Identifier	event		675366	0					
ANR	675465	Identifier	setCoreFile		675366	1					
ANR	675466	ArgumentList	core_file_name		675366	1					
ANR	675467	Argument	core_file_name		675366	0					
ANR	675468	Identifier	core_file_name		675366	0					
ANR	675469	IfStatement	if ( reason )		675366	8					
ANR	675470	Condition	reason	1087:5:30593:30598	675366	0	True				
ANR	675471	Identifier	reason		675366	0					
ANR	675472	CompoundStatement		25:14:488:488	675366	1					
ANR	675473	ExpressionStatement	event . setReason ( reason )	1088:2:30606:30631	675366	0	True				
ANR	675474	CallExpression	event . setReason ( reason )		675366	0					
ANR	675475	Callee	event . setReason		675366	0					
ANR	675476	MemberAccess	event . setReason		675366	0					
ANR	675477	Identifier	event		675366	0					
ANR	675478	Identifier	setReason		675366	1					
ANR	675479	ArgumentList	reason		675366	1					
ANR	675480	Argument	reason		675366	0					
ANR	675481	Identifier	reason		675366	0					
ANR	675482	ExpressionStatement	event . run_remote_rusage = run_remote_rusage	1093:1:30703:30746	675366	9	True				
ANR	675483	AssignmentExpression	event . run_remote_rusage = run_remote_rusage		675366	0		=			
ANR	675484	MemberAccess	event . run_remote_rusage		675366	0					
ANR	675485	Identifier	event		675366	0					
ANR	675486	Identifier	run_remote_rusage		675366	1					
ANR	675487	Identifier	run_remote_rusage		675366	1					
ANR	675488	ExpressionStatement	event . recvd_bytes = bytesSent ( )	1099:1:30925:30956	675366	10	True				
ANR	675489	AssignmentExpression	event . recvd_bytes = bytesSent ( )		675366	0		=			
ANR	675490	MemberAccess	event . recvd_bytes		675366	0					
ANR	675491	Identifier	event		675366	0					
ANR	675492	Identifier	recvd_bytes		675366	1					
ANR	675493	CallExpression	bytesSent ( )		675366	1					
ANR	675494	Callee	bytesSent		675366	0					
ANR	675495	Identifier	bytesSent		675366	0					
ANR	675496	ArgumentList			675366	1					
ANR	675497	ExpressionStatement	event . sent_bytes = bytesReceived ( )	1100:1:30959:30993	675366	11	True				
ANR	675498	AssignmentExpression	event . sent_bytes = bytesReceived ( )		675366	0		=			
ANR	675499	MemberAccess	event . sent_bytes		675366	0					
ANR	675500	Identifier	event		675366	0					
ANR	675501	Identifier	sent_bytes		675366	1					
ANR	675502	CallExpression	bytesReceived ( )		675366	1					
ANR	675503	Callee	bytesReceived		675366	0					
ANR	675504	Identifier	bytesReceived		675366	0					
ANR	675505	ArgumentList			675366	1					
ANR	675506	IfStatement	"if ( ! uLog . writeEvent ( & event , jobAd ) )"		675366	12					
ANR	675507	Condition	"! uLog . writeEvent ( & event , jobAd )"	1102:5:31002:31032	675366	0	True				
ANR	675508	UnaryOperationExpression	"! uLog . writeEvent ( & event , jobAd )"		675366	0					
ANR	675509	UnaryOperator	!		675366	0					
ANR	675510	CallExpression	"uLog . writeEvent ( & event , jobAd )"		675366	1					
ANR	675511	Callee	uLog . writeEvent		675366	0					
ANR	675512	MemberAccess	uLog . writeEvent		675366	0					
ANR	675513	Identifier	uLog		675366	0					
ANR	675514	Identifier	writeEvent		675366	1					
ANR	675515	ArgumentList	& event		675366	1					
ANR	675516	Argument	& event		675366	0					
ANR	675517	UnaryOperationExpression	& event		675366	0					
ANR	675518	UnaryOperator	&		675366	0					
ANR	675519	Identifier	event		675366	1					
ANR	675520	Argument	jobAd		675366	1					
ANR	675521	Identifier	jobAd		675366	0					
ANR	675522	CompoundStatement		40:38:921:921	675366	1					
ANR	675523	Statement	dprintf	1103:2:31039:31045	675366	0	True				
ANR	675524	Statement	(	1103:9:31046:31046	675366	1	True				
ANR	675525	Statement	D_ALWAYS	1103:11:31048:31055	675366	2	True				
ANR	675526	Statement	","	1103:19:31056:31056	675366	3	True				
ANR	675527	Statement	"""Unable to log ULOG_JOB_EVICTED """	1103:21:31058:31090	675366	4	True				
ANR	675528	Statement	"""(and requeued) event\\n"""	1104:5:31097:31120	675366	5	True				
ANR	675529	Statement	)	1104:30:31122:31122	675366	6	True				
ANR	675530	ExpressionStatement		1104:31:31123:31123	675366	7	True				
ANR	675531	ReturnType	void		675366	1					
ANR	675532	Identifier	BaseShadow :: logRequeueEvent		675366	2					
ANR	675533	ParameterList	const char * reason		675366	3					
ANR	675534	Parameter	const char * reason	1062:29:30092:30109	675366	0	True				
ANR	675535	ParameterType	const char *		675366	0					
ANR	675536	Identifier	reason		675366	1					
ANR	675537	CFGEntryNode	ENTRY		675366		True				
ANR	675538	CFGExitNode	EXIT		675366		True				
ANR	675539	Symbol	reason		675366						
ANR	675540	Symbol	JOB_COREDUMPED		675366						
ANR	675541	Symbol	uLog . writeEvent		675366						
ANR	675542	Symbol	getRUsage		675366						
ANR	675543	Symbol	event . normal		675366						
ANR	675544	Symbol	jobAd		675366						
ANR	675545	Symbol	event . terminate_and_requeued		675366						
ANR	675546	Symbol	& run_remote_rusage		675366						
ANR	675547	Symbol	event . return_value		675366						
ANR	675548	Symbol	run_remote_rusage		675366						
ANR	675549	Symbol	exitCode		675366						
ANR	675550	Symbol	event		675366						
ANR	675551	Symbol	getExitReason		675366						
ANR	675552	Symbol	event . sent_bytes		675366						
ANR	675553	Symbol	exitedBySignal		675366						
ANR	675554	Symbol	false		675366						
ANR	675555	Symbol	event . run_remote_rusage		675366						
ANR	675556	Symbol	bytesSent		675366						
ANR	675557	Symbol	& event		675366						
ANR	675558	Symbol	exitSignal		675366						
ANR	675559	Symbol	bytesReceived		675366						
ANR	675560	Symbol	exit_reason		675366						
ANR	675561	Symbol	true		675366						
ANR	675562	Symbol	event . recvd_bytes		675366						
ANR	675563	Symbol	uLog		675366						
ANR	675564	Symbol	core_file_name		675366						
ANR	675565	Symbol	event . signal_number		675366						
ANR	675566	Function	BaseShadow :: checkSwap	1109:0:31132:31765							
ANR	675567	FunctionDef	BaseShadow :: checkSwap ()		675566	0					
ANR	675568	CompoundStatement		1111:0:31167:31765	675566	0					
ANR	675569	IdentifierDeclStatement	"int reserved_swap , free_swap ;"	1112:1:31170:31198	675566	0	True				
ANR	675570	IdentifierDecl	reserved_swap		675566	0					
ANR	675571	IdentifierDeclType	int		675566	0					
ANR	675572	Identifier	reserved_swap		675566	1					
ANR	675573	IdentifierDecl	free_swap		675566	1					
ANR	675574	IdentifierDeclType	int		675566	0					
ANR	675575	Identifier	free_swap		675566	1					
ANR	675576	ExpressionStatement	"reserved_swap = param_integer ( ""RESERVED_SWAP"" , 0 )"	1114:1:31246:31297	675566	1	True				
ANR	675577	AssignmentExpression	"reserved_swap = param_integer ( ""RESERVED_SWAP"" , 0 )"		675566	0		=			
ANR	675578	Identifier	reserved_swap		675566	0					
ANR	675579	CallExpression	"param_integer ( ""RESERVED_SWAP"" , 0 )"		675566	1					
ANR	675580	Callee	param_integer		675566	0					
ANR	675581	Identifier	param_integer		675566	0					
ANR	675582	ArgumentList	"""RESERVED_SWAP"""		675566	1					
ANR	675583	Argument	"""RESERVED_SWAP"""		675566	0					
ANR	675584	PrimaryExpression	"""RESERVED_SWAP"""		675566	0					
ANR	675585	Argument	0		675566	1					
ANR	675586	PrimaryExpression	0		675566	0					
ANR	675587	ExpressionStatement	reserved_swap *= 1024	1115:1:31300:31321	675566	2	True				
ANR	675588	AssignmentExpression	reserved_swap *= 1024		675566	0		*=			
ANR	675589	Identifier	reserved_swap		675566	0					
ANR	675590	PrimaryExpression	1024		675566	1					
ANR	675591	IfStatement	if ( reserved_swap == 0 )		675566	3					
ANR	675592	Condition	reserved_swap == 0	1117:5:31329:31346	675566	0	True				
ANR	675593	EqualityExpression	reserved_swap == 0		675566	0		==			
ANR	675594	Identifier	reserved_swap		675566	0					
ANR	675595	PrimaryExpression	0		675566	1					
ANR	675596	CompoundStatement		7:26:182:182	675566	1					
ANR	675597	ReturnStatement	return ;	1120:2:31467:31473	675566	0	True				
ANR	675598	ExpressionStatement	free_swap = sysapi_swap_space ( )	1123:1:31480:31511	675566	4	True				
ANR	675599	AssignmentExpression	free_swap = sysapi_swap_space ( )		675566	0		=			
ANR	675600	Identifier	free_swap		675566	0					
ANR	675601	CallExpression	sysapi_swap_space ( )		675566	1					
ANR	675602	Callee	sysapi_swap_space		675566	0					
ANR	675603	Identifier	sysapi_swap_space		675566	0					
ANR	675604	ArgumentList			675566	1					
ANR	675605	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""*** Reserved Swap = %d\\n"" , reserved_swap )"	1125:1:31515:31580	675566	5	True				
ANR	675606	CallExpression	"dprintf ( D_FULLDEBUG , ""*** Reserved Swap = %d\\n"" , reserved_swap )"		675566	0					
ANR	675607	Callee	dprintf		675566	0					
ANR	675608	Identifier	dprintf		675566	0					
ANR	675609	ArgumentList	D_FULLDEBUG		675566	1					
ANR	675610	Argument	D_FULLDEBUG		675566	0					
ANR	675611	Identifier	D_FULLDEBUG		675566	0					
ANR	675612	Argument	"""*** Reserved Swap = %d\\n"""		675566	1					
ANR	675613	PrimaryExpression	"""*** Reserved Swap = %d\\n"""		675566	0					
ANR	675614	Argument	reserved_swap		675566	2					
ANR	675615	Identifier	reserved_swap		675566	0					
ANR	675616	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""*** Free Swap = %d\\n"" , free_swap )"	1126:1:31583:31640	675566	6	True				
ANR	675617	CallExpression	"dprintf ( D_FULLDEBUG , ""*** Free Swap = %d\\n"" , free_swap )"		675566	0					
ANR	675618	Callee	dprintf		675566	0					
ANR	675619	Identifier	dprintf		675566	0					
ANR	675620	ArgumentList	D_FULLDEBUG		675566	1					
ANR	675621	Argument	D_FULLDEBUG		675566	0					
ANR	675622	Identifier	D_FULLDEBUG		675566	0					
ANR	675623	Argument	"""*** Free Swap = %d\\n"""		675566	1					
ANR	675624	PrimaryExpression	"""*** Free Swap = %d\\n"""		675566	0					
ANR	675625	Argument	free_swap		675566	2					
ANR	675626	Identifier	free_swap		675566	0					
ANR	675627	IfStatement	if ( free_swap < reserved_swap )		675566	7					
ANR	675628	Condition	free_swap < reserved_swap	1128:5:31648:31672	675566	0	True				
ANR	675629	RelationalExpression	free_swap < reserved_swap		675566	0		<			
ANR	675630	Identifier	free_swap		675566	0					
ANR	675631	Identifier	reserved_swap		675566	1					
ANR	675632	CompoundStatement		18:33:508:508	675566	1					
ANR	675633	ExpressionStatement	"dprintf ( D_ALWAYS , ""Not enough reserved swap space\\n"" )"	1129:2:31680:31735	675566	0	True				
ANR	675634	CallExpression	"dprintf ( D_ALWAYS , ""Not enough reserved swap space\\n"" )"		675566	0					
ANR	675635	Callee	dprintf		675566	0					
ANR	675636	Identifier	dprintf		675566	0					
ANR	675637	ArgumentList	D_ALWAYS		675566	1					
ANR	675638	Argument	D_ALWAYS		675566	0					
ANR	675639	Identifier	D_ALWAYS		675566	0					
ANR	675640	Argument	"""Not enough reserved swap space\\n"""		675566	1					
ANR	675641	PrimaryExpression	"""Not enough reserved swap space\\n"""		675566	0					
ANR	675642	ExpressionStatement	DC_Exit ( JOB_NO_MEM )	1130:2:31739:31760	675566	1	True				
ANR	675643	CallExpression	DC_Exit ( JOB_NO_MEM )		675566	0					
ANR	675644	Callee	DC_Exit		675566	0					
ANR	675645	Identifier	DC_Exit		675566	0					
ANR	675646	ArgumentList	JOB_NO_MEM		675566	1					
ANR	675647	Argument	JOB_NO_MEM		675566	0					
ANR	675648	Identifier	JOB_NO_MEM		675566	0					
ANR	675649	ReturnType	void		675566	1					
ANR	675650	Identifier	BaseShadow :: checkSwap		675566	2					
ANR	675651	ParameterList			675566	3					
ANR	675652	CFGEntryNode	ENTRY		675566		True				
ANR	675653	CFGExitNode	EXIT		675566		True				
ANR	675654	Symbol	D_ALWAYS		675566						
ANR	675655	Symbol	reserved_swap		675566						
ANR	675656	Symbol	param_integer		675566						
ANR	675657	Symbol	D_FULLDEBUG		675566						
ANR	675658	Symbol	sysapi_swap_space		675566						
ANR	675659	Symbol	free_swap		675566						
ANR	675660	Symbol	JOB_NO_MEM		675566						
ANR	675661	Function	BaseShadow :: log_except	1136:0:31800:32689							
ANR	675662	FunctionDef	BaseShadow :: log_except (const char * msg)		675661	0					
ANR	675663	CompoundStatement		1138:0:31845:32689	675661	0					
ANR	675664	IdentifierDeclStatement	ShadowExceptionEvent event ;	1140:1:31879:31905	675661	0	True				
ANR	675665	IdentifierDecl	event		675661	0					
ANR	675666	IdentifierDeclType	ShadowExceptionEvent		675661	0					
ANR	675667	Identifier	event		675661	1					
ANR	675668	IdentifierDeclStatement	bool exception_already_logged = false ;	1141:1:31908:31945	675661	1	True				
ANR	675669	IdentifierDecl	exception_already_logged = false		675661	0					
ANR	675670	IdentifierDeclType	bool		675661	0					
ANR	675671	Identifier	exception_already_logged		675661	1					
ANR	675672	AssignmentExpression	exception_already_logged = false		675661	2		=			
ANR	675673	Identifier	false		675661	0					
ANR	675674	Identifier	false		675661	1					
ANR	675675	IfStatement	if ( ! msg )		675661	2					
ANR	675676	Condition	! msg	1143:4:31952:31955	675661	0	True				
ANR	675677	UnaryOperationExpression	! msg		675661	0					
ANR	675678	UnaryOperator	!		675661	0					
ANR	675679	Identifier	msg		675661	1					
ANR	675680	ExpressionStatement	"msg = """""	1143:10:31958:31966	675661	1	True				
ANR	675681	AssignmentExpression	"msg = """""		675661	0		=			
ANR	675682	Identifier	msg		675661	0					
ANR	675683	PrimaryExpression	""""""		675661	1					
ANR	675684	ExpressionStatement	"sprintf ( event . message , msg )"	1144:1:31969:31996	675661	3	True				
ANR	675685	CallExpression	"sprintf ( event . message , msg )"		675661	0					
ANR	675686	Callee	sprintf		675661	0					
ANR	675687	Identifier	sprintf		675661	0					
ANR	675688	ArgumentList	event . message		675661	1					
ANR	675689	Argument	event . message		675661	0					
ANR	675690	MemberAccess	event . message		675661	0					
ANR	675691	Identifier	event		675661	0					
ANR	675692	Identifier	message		675661	1					
ANR	675693	Argument	msg		675661	1					
ANR	675694	Identifier	msg		675661	0					
ANR	675695	IfStatement	if ( BaseShadow :: myshadow_ptr )		675661	4					
ANR	675696	Condition	BaseShadow :: myshadow_ptr	1146:6:32005:32028	675661	0	True				
ANR	675697	Identifier	BaseShadow :: myshadow_ptr		675661	0					
ANR	675698	CompoundStatement		10:2:190:235	675661	1					
ANR	675699	IdentifierDeclStatement	BaseShadow * shadow = BaseShadow :: myshadow_ptr ;	1147:2:32036:32081	675661	0	True				
ANR	675700	IdentifierDecl	* shadow = BaseShadow :: myshadow_ptr		675661	0					
ANR	675701	IdentifierDeclType	BaseShadow *		675661	0					
ANR	675702	Identifier	shadow		675661	1					
ANR	675703	AssignmentExpression	* shadow = BaseShadow :: myshadow_ptr		675661	2		=			
ANR	675704	Identifier	BaseShadow :: myshadow_ptr		675661	0					
ANR	675705	Identifier	BaseShadow :: myshadow_ptr		675661	1					
ANR	675706	ExpressionStatement	event . recvd_bytes = shadow -> bytesSent ( )	1152:2:32250:32289	675661	1	True				
ANR	675707	AssignmentExpression	event . recvd_bytes = shadow -> bytesSent ( )		675661	0		=			
ANR	675708	MemberAccess	event . recvd_bytes		675661	0					
ANR	675709	Identifier	event		675661	0					
ANR	675710	Identifier	recvd_bytes		675661	1					
ANR	675711	CallExpression	shadow -> bytesSent ( )		675661	1					
ANR	675712	Callee	shadow -> bytesSent		675661	0					
ANR	675713	PtrMemberAccess	shadow -> bytesSent		675661	0					
ANR	675714	Identifier	shadow		675661	0					
ANR	675715	Identifier	bytesSent		675661	1					
ANR	675716	ArgumentList			675661	1					
ANR	675717	ExpressionStatement	event . sent_bytes = shadow -> bytesReceived ( )	1153:2:32293:32335	675661	2	True				
ANR	675718	AssignmentExpression	event . sent_bytes = shadow -> bytesReceived ( )		675661	0		=			
ANR	675719	MemberAccess	event . sent_bytes		675661	0					
ANR	675720	Identifier	event		675661	0					
ANR	675721	Identifier	sent_bytes		675661	1					
ANR	675722	CallExpression	shadow -> bytesReceived ( )		675661	1					
ANR	675723	Callee	shadow -> bytesReceived		675661	0					
ANR	675724	PtrMemberAccess	shadow -> bytesReceived		675661	0					
ANR	675725	Identifier	shadow		675661	0					
ANR	675726	Identifier	bytesReceived		675661	1					
ANR	675727	ArgumentList			675661	1					
ANR	675728	ExpressionStatement	exception_already_logged = shadow -> exception_already_logged	1154:2:32339:32398	675661	3	True				
ANR	675729	AssignmentExpression	exception_already_logged = shadow -> exception_already_logged		675661	0		=			
ANR	675730	Identifier	exception_already_logged		675661	0					
ANR	675731	PtrMemberAccess	shadow -> exception_already_logged		675661	1					
ANR	675732	Identifier	shadow		675661	0					
ANR	675733	Identifier	exception_already_logged		675661	1					
ANR	675734	IfStatement	if ( shadow -> began_execution )		675661	4					
ANR	675735	Condition	shadow -> began_execution	1156:6:32407:32429	675661	0	True				
ANR	675736	PtrMemberAccess	shadow -> began_execution		675661	0					
ANR	675737	Identifier	shadow		675661	0					
ANR	675738	Identifier	began_execution		675661	1					
ANR	675739	CompoundStatement		19:31:586:586	675661	1					
ANR	675740	ExpressionStatement	event . began_execution = TRUE	1157:3:32437:32465	675661	0	True				
ANR	675741	AssignmentExpression	event . began_execution = TRUE		675661	0		=			
ANR	675742	MemberAccess	event . began_execution		675661	0					
ANR	675743	Identifier	event		675661	0					
ANR	675744	Identifier	began_execution		675661	1					
ANR	675745	Identifier	TRUE		675661	1					
ANR	675746	ElseStatement	else		675661	0					
ANR	675747	CompoundStatement		23:8:634:634	675661	0					
ANR	675748	ExpressionStatement	event . recvd_bytes = 0.0	1161:2:32484:32507	675661	0	True				
ANR	675749	AssignmentExpression	event . recvd_bytes = 0.0		675661	0		=			
ANR	675750	MemberAccess	event . recvd_bytes		675661	0					
ANR	675751	Identifier	event		675661	0					
ANR	675752	Identifier	recvd_bytes		675661	1					
ANR	675753	PrimaryExpression	0.0		675661	1					
ANR	675754	ExpressionStatement	event . sent_bytes = 0.0	1162:2:32511:32533	675661	1	True				
ANR	675755	AssignmentExpression	event . sent_bytes = 0.0		675661	0		=			
ANR	675756	MemberAccess	event . sent_bytes		675661	0					
ANR	675757	Identifier	event		675661	0					
ANR	675758	Identifier	sent_bytes		675661	1					
ANR	675759	PrimaryExpression	0.0		675661	1					
ANR	675760	IfStatement	"if ( ! exception_already_logged && ! uLog . writeEventNoFsync ( & event , NULL ) )"		675661	5					
ANR	675761	Condition	"! exception_already_logged && ! uLog . writeEventNoFsync ( & event , NULL )"	1165:5:32544:32609	675661	0	True				
ANR	675762	AndExpression	"! exception_already_logged && ! uLog . writeEventNoFsync ( & event , NULL )"		675661	0		&&			
ANR	675763	UnaryOperationExpression	! exception_already_logged		675661	0					
ANR	675764	UnaryOperator	!		675661	0					
ANR	675765	Identifier	exception_already_logged		675661	1					
ANR	675766	UnaryOperationExpression	"! uLog . writeEventNoFsync ( & event , NULL )"		675661	1					
ANR	675767	UnaryOperator	!		675661	0					
ANR	675768	CallExpression	"uLog . writeEventNoFsync ( & event , NULL )"		675661	1					
ANR	675769	Callee	uLog . writeEventNoFsync		675661	0					
ANR	675770	MemberAccess	uLog . writeEventNoFsync		675661	0					
ANR	675771	Identifier	uLog		675661	0					
ANR	675772	Identifier	writeEventNoFsync		675661	1					
ANR	675773	ArgumentList	& event		675661	1					
ANR	675774	Argument	& event		675661	0					
ANR	675775	UnaryOperationExpression	& event		675661	0					
ANR	675776	UnaryOperator	&		675661	0					
ANR	675777	Identifier	event		675661	1					
ANR	675778	Argument	NULL		675661	1					
ANR	675779	Identifier	NULL		675661	0					
ANR	675780	CompoundStatement		29:1:767:767	675661	1					
ANR	675781	Statement	::	1167:2:32617:32618	675661	0	True				
ANR	675782	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to log ULOG_SHADOW_EXCEPTION event\\n"" )"	1167:4:32619:32684	675661	1	True				
ANR	675783	CallExpression	"dprintf ( D_ALWAYS , ""Unable to log ULOG_SHADOW_EXCEPTION event\\n"" )"		675661	0					
ANR	675784	Callee	dprintf		675661	0					
ANR	675785	Identifier	dprintf		675661	0					
ANR	675786	ArgumentList	D_ALWAYS		675661	1					
ANR	675787	Argument	D_ALWAYS		675661	0					
ANR	675788	Identifier	D_ALWAYS		675661	0					
ANR	675789	Argument	"""Unable to log ULOG_SHADOW_EXCEPTION event\\n"""		675661	1					
ANR	675790	PrimaryExpression	"""Unable to log ULOG_SHADOW_EXCEPTION event\\n"""		675661	0					
ANR	675791	ReturnType	void		675661	1					
ANR	675792	Identifier	BaseShadow :: log_except		675661	2					
ANR	675793	ParameterList	const char * msg		675661	3					
ANR	675794	Parameter	const char * msg	1137:23:31828:31842	675661	0	True				
ANR	675795	ParameterType	const char *		675661	0					
ANR	675796	Identifier	msg		675661	1					
ANR	675797	CFGEntryNode	ENTRY		675661		True				
ANR	675798	CFGExitNode	EXIT		675661		True				
ANR	675799	Symbol	msg		675661						
ANR	675800	Symbol	event . sent_bytes		675661						
ANR	675801	Symbol	BaseShadow :: myshadow_ptr		675661						
ANR	675802	Symbol	shadow -> bytesSent		675661						
ANR	675803	Symbol	NULL		675661						
ANR	675804	Symbol	shadow		675661						
ANR	675805	Symbol	shadow -> began_execution		675661						
ANR	675806	Symbol	exception_already_logged		675661						
ANR	675807	Symbol	false		675661						
ANR	675808	Symbol	D_ALWAYS		675661						
ANR	675809	Symbol	shadow -> bytesReceived		675661						
ANR	675810	Symbol	TRUE		675661						
ANR	675811	Symbol	* shadow		675661						
ANR	675812	Symbol	& event		675661						
ANR	675813	Symbol	event . message		675661						
ANR	675814	Symbol	shadow -> exception_already_logged		675661						
ANR	675815	Symbol	event . recvd_bytes		675661						
ANR	675816	Symbol	uLog		675661						
ANR	675817	Symbol	uLog . writeEventNoFsync		675661						
ANR	675818	Symbol	event		675661						
ANR	675819	Symbol	event . began_execution		675661						
ANR	675820	Function	BaseShadow :: updateJobAttr	1172:0:32693:32833							
ANR	675821	FunctionDef	"BaseShadow :: updateJobAttr (const char * name , const char * expr , bool log)"		675820	0					
ANR	675822	CompoundStatement		1174:0:32772:32833	675820	0					
ANR	675823	ReturnStatement	"return job_updater -> updateAttr ( name , expr , false , log ) ;"	1175:1:32775:32831	675820	0	True				
ANR	675824	CallExpression	"job_updater -> updateAttr ( name , expr , false , log )"		675820	0					
ANR	675825	Callee	job_updater -> updateAttr		675820	0					
ANR	675826	PtrMemberAccess	job_updater -> updateAttr		675820	0					
ANR	675827	Identifier	job_updater		675820	0					
ANR	675828	Identifier	updateAttr		675820	1					
ANR	675829	ArgumentList	name		675820	1					
ANR	675830	Argument	name		675820	0					
ANR	675831	Identifier	name		675820	0					
ANR	675832	Argument	expr		675820	1					
ANR	675833	Identifier	expr		675820	0					
ANR	675834	Argument	false		675820	2					
ANR	675835	Identifier	false		675820	0					
ANR	675836	Argument	log		675820	3					
ANR	675837	Identifier	log		675820	0					
ANR	675838	ReturnType	bool		675820	1					
ANR	675839	Identifier	BaseShadow :: updateJobAttr		675820	2					
ANR	675840	ParameterList	"const char * name , const char * expr , bool log"		675820	3					
ANR	675841	Parameter	const char * name	1173:27:32725:32740	675820	0	True				
ANR	675842	ParameterType	const char *		675820	0					
ANR	675843	Identifier	name		675820	1					
ANR	675844	Parameter	const char * expr	1173:45:32743:32758	675820	1	True				
ANR	675845	ParameterType	const char *		675820	0					
ANR	675846	Identifier	expr		675820	1					
ANR	675847	Parameter	bool log	1173:63:32761:32768	675820	2	True				
ANR	675848	ParameterType	bool		675820	0					
ANR	675849	Identifier	log		675820	1					
ANR	675850	CFGEntryNode	ENTRY		675820		True				
ANR	675851	CFGExitNode	EXIT		675820		True				
ANR	675852	Symbol	job_updater -> updateAttr		675820						
ANR	675853	Symbol	job_updater		675820						
ANR	675854	Symbol	log		675820						
ANR	675855	Symbol	* job_updater		675820						
ANR	675856	Symbol	name		675820						
ANR	675857	Symbol	false		675820						
ANR	675858	Symbol	expr		675820						
ANR	675859	Function	BaseShadow :: updateJobAttr	1179:0:32837:32971							
ANR	675860	FunctionDef	"BaseShadow :: updateJobAttr (const char * name , int value , bool log)"		675859	0					
ANR	675861	CompoundStatement		1181:0:32909:32971	675859	0					
ANR	675862	ReturnStatement	"return job_updater -> updateAttr ( name , value , false , log ) ;"	1182:1:32912:32969	675859	0	True				
ANR	675863	CallExpression	"job_updater -> updateAttr ( name , value , false , log )"		675859	0					
ANR	675864	Callee	job_updater -> updateAttr		675859	0					
ANR	675865	PtrMemberAccess	job_updater -> updateAttr		675859	0					
ANR	675866	Identifier	job_updater		675859	0					
ANR	675867	Identifier	updateAttr		675859	1					
ANR	675868	ArgumentList	name		675859	1					
ANR	675869	Argument	name		675859	0					
ANR	675870	Identifier	name		675859	0					
ANR	675871	Argument	value		675859	1					
ANR	675872	Identifier	value		675859	0					
ANR	675873	Argument	false		675859	2					
ANR	675874	Identifier	false		675859	0					
ANR	675875	Argument	log		675859	3					
ANR	675876	Identifier	log		675859	0					
ANR	675877	ReturnType	bool		675859	1					
ANR	675878	Identifier	BaseShadow :: updateJobAttr		675859	2					
ANR	675879	ParameterList	"const char * name , int value , bool log"		675859	3					
ANR	675880	Parameter	const char * name	1180:27:32869:32884	675859	0	True				
ANR	675881	ParameterType	const char *		675859	0					
ANR	675882	Identifier	name		675859	1					
ANR	675883	Parameter	int value	1180:45:32887:32895	675859	1	True				
ANR	675884	ParameterType	int		675859	0					
ANR	675885	Identifier	value		675859	1					
ANR	675886	Parameter	bool log	1180:56:32898:32905	675859	2	True				
ANR	675887	ParameterType	bool		675859	0					
ANR	675888	Identifier	log		675859	1					
ANR	675889	CFGEntryNode	ENTRY		675859		True				
ANR	675890	CFGExitNode	EXIT		675859		True				
ANR	675891	Symbol	job_updater -> updateAttr		675859						
ANR	675892	Symbol	job_updater		675859						
ANR	675893	Symbol	log		675859						
ANR	675894	Symbol	* job_updater		675859						
ANR	675895	Symbol	name		675859						
ANR	675896	Symbol	false		675859						
ANR	675897	Symbol	value		675859						
ANR	675898	Function	BaseShadow :: updateJobInQueue	1186:0:32975:33827							
ANR	675899	FunctionDef	BaseShadow :: updateJobInQueue (update_t type)		675898	0					
ANR	675900	CompoundStatement		1188:0:33026:33827	675898	0					
ANR	675901	IdentifierDeclStatement	MyString buf ;	1195:1:33392:33404	675898	0	True				
ANR	675902	IdentifierDecl	buf		675898	0					
ANR	675903	IdentifierDeclType	MyString		675898	0					
ANR	675904	Identifier	buf		675898	1					
ANR	675905	ExpressionStatement	"buf . sprintf ( ""%s = %f"" , ATTR_BYTES_SENT , ( prev_run_bytes_sent + bytesReceived ( ) ) )"	1196:1:33407:33502	675898	1	True				
ANR	675906	CallExpression	"buf . sprintf ( ""%s = %f"" , ATTR_BYTES_SENT , ( prev_run_bytes_sent + bytesReceived ( ) ) )"		675898	0					
ANR	675907	Callee	buf . sprintf		675898	0					
ANR	675908	MemberAccess	buf . sprintf		675898	0					
ANR	675909	Identifier	buf		675898	0					
ANR	675910	Identifier	sprintf		675898	1					
ANR	675911	ArgumentList	"""%s = %f"""		675898	1					
ANR	675912	Argument	"""%s = %f"""		675898	0					
ANR	675913	PrimaryExpression	"""%s = %f"""		675898	0					
ANR	675914	Argument	ATTR_BYTES_SENT		675898	1					
ANR	675915	Identifier	ATTR_BYTES_SENT		675898	0					
ANR	675916	Argument	prev_run_bytes_sent + bytesReceived ( )		675898	2					
ANR	675917	AdditiveExpression	prev_run_bytes_sent + bytesReceived ( )		675898	0		+			
ANR	675918	Identifier	prev_run_bytes_sent		675898	0					
ANR	675919	CallExpression	bytesReceived ( )		675898	1					
ANR	675920	Callee	bytesReceived		675898	0					
ANR	675921	Identifier	bytesReceived		675898	0					
ANR	675922	ArgumentList			675898	1					
ANR	675923	ExpressionStatement	jobAd -> Insert ( buf . Value ( ) )	1198:1:33505:33533	675898	2	True				
ANR	675924	CallExpression	jobAd -> Insert ( buf . Value ( ) )		675898	0					
ANR	675925	Callee	jobAd -> Insert		675898	0					
ANR	675926	PtrMemberAccess	jobAd -> Insert		675898	0					
ANR	675927	Identifier	jobAd		675898	0					
ANR	675928	Identifier	Insert		675898	1					
ANR	675929	ArgumentList	buf . Value ( )		675898	1					
ANR	675930	Argument	buf . Value ( )		675898	0					
ANR	675931	CallExpression	buf . Value ( )		675898	0					
ANR	675932	Callee	buf . Value		675898	0					
ANR	675933	MemberAccess	buf . Value		675898	0					
ANR	675934	Identifier	buf		675898	0					
ANR	675935	Identifier	Value		675898	1					
ANR	675936	ArgumentList			675898	1					
ANR	675937	ExpressionStatement	"buf . sprintf ( ""%s = %f"" , ATTR_BYTES_RECVD , ( prev_run_bytes_recvd + bytesSent ( ) ) )"	1199:1:33536:33630	675898	3	True				
ANR	675938	CallExpression	"buf . sprintf ( ""%s = %f"" , ATTR_BYTES_RECVD , ( prev_run_bytes_recvd + bytesSent ( ) ) )"		675898	0					
ANR	675939	Callee	buf . sprintf		675898	0					
ANR	675940	MemberAccess	buf . sprintf		675898	0					
ANR	675941	Identifier	buf		675898	0					
ANR	675942	Identifier	sprintf		675898	1					
ANR	675943	ArgumentList	"""%s = %f"""		675898	1					
ANR	675944	Argument	"""%s = %f"""		675898	0					
ANR	675945	PrimaryExpression	"""%s = %f"""		675898	0					
ANR	675946	Argument	ATTR_BYTES_RECVD		675898	1					
ANR	675947	Identifier	ATTR_BYTES_RECVD		675898	0					
ANR	675948	Argument	prev_run_bytes_recvd + bytesSent ( )		675898	2					
ANR	675949	AdditiveExpression	prev_run_bytes_recvd + bytesSent ( )		675898	0		+			
ANR	675950	Identifier	prev_run_bytes_recvd		675898	0					
ANR	675951	CallExpression	bytesSent ( )		675898	1					
ANR	675952	Callee	bytesSent		675898	0					
ANR	675953	Identifier	bytesSent		675898	0					
ANR	675954	ArgumentList			675898	1					
ANR	675955	ExpressionStatement	jobAd -> Insert ( buf . Value ( ) )	1201:1:33633:33661	675898	4	True				
ANR	675956	CallExpression	jobAd -> Insert ( buf . Value ( ) )		675898	0					
ANR	675957	Callee	jobAd -> Insert		675898	0					
ANR	675958	PtrMemberAccess	jobAd -> Insert		675898	0					
ANR	675959	Identifier	jobAd		675898	0					
ANR	675960	Identifier	Insert		675898	1					
ANR	675961	ArgumentList	buf . Value ( )		675898	1					
ANR	675962	Argument	buf . Value ( )		675898	0					
ANR	675963	CallExpression	buf . Value ( )		675898	0					
ANR	675964	Callee	buf . Value		675898	0					
ANR	675965	MemberAccess	buf . Value		675898	0					
ANR	675966	Identifier	buf		675898	0					
ANR	675967	Identifier	Value		675898	1					
ANR	675968	ArgumentList			675898	1					
ANR	675969	ExpressionStatement	ASSERT ( job_updater )	1203:1:33665:33686	675898	5	True				
ANR	675970	CallExpression	ASSERT ( job_updater )		675898	0					
ANR	675971	Callee	ASSERT		675898	0					
ANR	675972	Identifier	ASSERT		675898	0					
ANR	675973	ArgumentList	job_updater		675898	1					
ANR	675974	Argument	job_updater		675898	0					
ANR	675975	Identifier	job_updater		675898	0					
ANR	675976	ReturnStatement	return job_updater -> updateJob ( type ) ;	1207:1:33788:33825	675898	6	True				
ANR	675977	CallExpression	job_updater -> updateJob ( type )		675898	0					
ANR	675978	Callee	job_updater -> updateJob		675898	0					
ANR	675979	PtrMemberAccess	job_updater -> updateJob		675898	0					
ANR	675980	Identifier	job_updater		675898	0					
ANR	675981	Identifier	updateJob		675898	1					
ANR	675982	ArgumentList	type		675898	1					
ANR	675983	Argument	type		675898	0					
ANR	675984	Identifier	type		675898	0					
ANR	675985	ReturnType	bool		675898	1					
ANR	675986	Identifier	BaseShadow :: updateJobInQueue		675898	2					
ANR	675987	ParameterList	update_t type		675898	3					
ANR	675988	Parameter	update_t type	1187:30:33010:33022	675898	0	True				
ANR	675989	ParameterType	update_t		675898	0					
ANR	675990	Identifier	type		675898	1					
ANR	675991	CFGEntryNode	ENTRY		675898		True				
ANR	675992	CFGExitNode	EXIT		675898		True				
ANR	675993	Symbol	ATTR_BYTES_RECVD		675898						
ANR	675994	Symbol	prev_run_bytes_sent		675898						
ANR	675995	Symbol	prev_run_bytes_recvd		675898						
ANR	675996	Symbol	jobAd		675898						
ANR	675997	Symbol	bytesSent		675898						
ANR	675998	Symbol	type		675898						
ANR	675999	Symbol	buf		675898						
ANR	676000	Symbol	bytesReceived		675898						
ANR	676001	Symbol	job_updater		675898						
ANR	676002	Symbol	ATTR_BYTES_SENT		675898						
ANR	676003	Symbol	* job_updater		675898						
ANR	676004	Symbol	buf . Value		675898						
ANR	676005	Symbol	job_updater -> updateJob		675898						
ANR	676006	Function	BaseShadow :: evalPeriodicUserPolicy	1211:0:33831:33918							
ANR	676007	FunctionDef	BaseShadow :: evalPeriodicUserPolicy ()		676006	0					
ANR	676008	CompoundStatement		1213:0:33879:33918	676006	0					
ANR	676009	ExpressionStatement	shadow_user_policy . checkPeriodic ( )	1214:1:33882:33916	676006	0	True				
ANR	676010	CallExpression	shadow_user_policy . checkPeriodic ( )		676006	0					
ANR	676011	Callee	shadow_user_policy . checkPeriodic		676006	0					
ANR	676012	MemberAccess	shadow_user_policy . checkPeriodic		676006	0					
ANR	676013	Identifier	shadow_user_policy		676006	0					
ANR	676014	Identifier	checkPeriodic		676006	1					
ANR	676015	ArgumentList			676006	1					
ANR	676016	ReturnType	void		676006	1					
ANR	676017	Identifier	BaseShadow :: evalPeriodicUserPolicy		676006	2					
ANR	676018	ParameterList			676006	3					
ANR	676019	CFGEntryNode	ENTRY		676006		True				
ANR	676020	CFGExitNode	EXIT		676006		True				
ANR	676021	Symbol	shadow_user_policy		676006						
ANR	676022	DeclStmt									
ANR	676023	Decl							int	int	job_start_cnt
ANR	676024	Function	BaseShadow :: getCoreName	1272:0:36130:36248							
ANR	676025	FunctionDef	BaseShadow :: getCoreName ()		676024	0					
ANR	676026	CompoundStatement		1274:0:36174:36248	676024	0					
ANR	676027	IfStatement	if ( core_file_name )		676024	0					
ANR	676028	Condition	core_file_name	1275:5:36181:36194	676024	0	True				
ANR	676029	Identifier	core_file_name		676024	0					
ANR	676030	CompoundStatement		2:22:23:23	676024	1					
ANR	676031	ReturnStatement	return core_file_name ;	1276:2:36202:36223	676024	0	True				
ANR	676032	Identifier	core_file_name		676024	0					
ANR	676033	ReturnStatement	"return ""unknown"" ;"	1278:1:36230:36246	676024	1	True				
ANR	676034	PrimaryExpression	"""unknown"""		676024	0					
ANR	676035	ReturnType	const char *		676024	1					
ANR	676036	Identifier	BaseShadow :: getCoreName		676024	2					
ANR	676037	ParameterList			676024	3					
ANR	676038	CFGEntryNode	ENTRY		676024		True				
ANR	676039	CFGExitNode	EXIT		676024		True				
ANR	676040	Symbol	core_file_name		676024						
ANR	676041	Function	BaseShadow :: startQueueUpdateTimer	1282:0:36252:36335							
ANR	676042	FunctionDef	BaseShadow :: startQueueUpdateTimer ()		676041	0					
ANR	676043	CompoundStatement		1284:0:36299:36335	676041	0					
ANR	676044	ExpressionStatement	job_updater -> startUpdateTimer ( )	1285:1:36302:36333	676041	0	True				
ANR	676045	CallExpression	job_updater -> startUpdateTimer ( )		676041	0					
ANR	676046	Callee	job_updater -> startUpdateTimer		676041	0					
ANR	676047	PtrMemberAccess	job_updater -> startUpdateTimer		676041	0					
ANR	676048	Identifier	job_updater		676041	0					
ANR	676049	Identifier	startUpdateTimer		676041	1					
ANR	676050	ArgumentList			676041	1					
ANR	676051	ReturnType	void		676041	1					
ANR	676052	Identifier	BaseShadow :: startQueueUpdateTimer		676041	2					
ANR	676053	ParameterList			676041	3					
ANR	676054	CFGEntryNode	ENTRY		676041		True				
ANR	676055	CFGExitNode	EXIT		676041		True				
ANR	676056	Symbol	job_updater		676041						
ANR	676057	Function	BaseShadow :: publishShadowAttrs	1289:0:36339:36860							
ANR	676058	FunctionDef	BaseShadow :: publishShadowAttrs (ClassAd * ad)		676057	0					
ANR	676059	CompoundStatement		1291:0:36390:36860	676057	0					
ANR	676060	IdentifierDeclStatement	MyString tmp ;	1292:1:36393:36405	676057	0	True				
ANR	676061	IdentifierDecl	tmp		676057	0					
ANR	676062	IdentifierDeclType	MyString		676057	0					
ANR	676063	Identifier	tmp		676057	1					
ANR	676064	ExpressionStatement	tmp = ATTR_SHADOW_IP_ADDR	1293:1:36408:36433	676057	1	True				
ANR	676065	AssignmentExpression	tmp = ATTR_SHADOW_IP_ADDR		676057	0		=			
ANR	676066	Identifier	tmp		676057	0					
ANR	676067	Identifier	ATTR_SHADOW_IP_ADDR		676057	1					
ANR	676068	ExpressionStatement	"tmp += ""=\\"""""	1294:1:36436:36448	676057	2	True				
ANR	676069	AssignmentExpression	"tmp += ""=\\"""""		676057	0		+=			
ANR	676070	Identifier	tmp		676057	0					
ANR	676071	PrimaryExpression	"""=\\"""""		676057	1					
ANR	676072	ExpressionStatement	tmp += daemonCore -> InfoCommandSinfulString ( )	1295:1:36451:36495	676057	3	True				
ANR	676073	AssignmentExpression	tmp += daemonCore -> InfoCommandSinfulString ( )		676057	0		+=			
ANR	676074	Identifier	tmp		676057	0					
ANR	676075	CallExpression	daemonCore -> InfoCommandSinfulString ( )		676057	1					
ANR	676076	Callee	daemonCore -> InfoCommandSinfulString		676057	0					
ANR	676077	PtrMemberAccess	daemonCore -> InfoCommandSinfulString		676057	0					
ANR	676078	Identifier	daemonCore		676057	0					
ANR	676079	Identifier	InfoCommandSinfulString		676057	1					
ANR	676080	ArgumentList			676057	1					
ANR	676081	ExpressionStatement	"tmp += '""'"	1296:4:36501:36511	676057	4	True				
ANR	676082	AssignmentExpression	"tmp += '""'"		676057	0		+=			
ANR	676083	Identifier	tmp		676057	0					
ANR	676084	PrimaryExpression	"'""'"		676057	1					
ANR	676085	ExpressionStatement	ad -> Insert ( tmp . Value ( ) )	1297:1:36514:36539	676057	5	True				
ANR	676086	CallExpression	ad -> Insert ( tmp . Value ( ) )		676057	0					
ANR	676087	Callee	ad -> Insert		676057	0					
ANR	676088	PtrMemberAccess	ad -> Insert		676057	0					
ANR	676089	Identifier	ad		676057	0					
ANR	676090	Identifier	Insert		676057	1					
ANR	676091	ArgumentList	tmp . Value ( )		676057	1					
ANR	676092	Argument	tmp . Value ( )		676057	0					
ANR	676093	CallExpression	tmp . Value ( )		676057	0					
ANR	676094	Callee	tmp . Value		676057	0					
ANR	676095	MemberAccess	tmp . Value		676057	0					
ANR	676096	Identifier	tmp		676057	0					
ANR	676097	Identifier	Value		676057	1					
ANR	676098	ArgumentList			676057	1					
ANR	676099	ExpressionStatement	tmp = ATTR_SHADOW_VERSION	1299:1:36543:36568	676057	6	True				
ANR	676100	AssignmentExpression	tmp = ATTR_SHADOW_VERSION		676057	0		=			
ANR	676101	Identifier	tmp		676057	0					
ANR	676102	Identifier	ATTR_SHADOW_VERSION		676057	1					
ANR	676103	ExpressionStatement	"tmp += ""=\\"""""	1300:1:36571:36583	676057	7	True				
ANR	676104	AssignmentExpression	"tmp += ""=\\"""""		676057	0		+=			
ANR	676105	Identifier	tmp		676057	0					
ANR	676106	PrimaryExpression	"""=\\"""""		676057	1					
ANR	676107	ExpressionStatement	tmp += CondorVersion ( )	1301:1:36586:36608	676057	8	True				
ANR	676108	AssignmentExpression	tmp += CondorVersion ( )		676057	0		+=			
ANR	676109	Identifier	tmp		676057	0					
ANR	676110	CallExpression	CondorVersion ( )		676057	1					
ANR	676111	Callee	CondorVersion		676057	0					
ANR	676112	Identifier	CondorVersion		676057	0					
ANR	676113	ArgumentList			676057	1					
ANR	676114	ExpressionStatement	"tmp += '""'"	1302:4:36614:36624	676057	9	True				
ANR	676115	AssignmentExpression	"tmp += '""'"		676057	0		+=			
ANR	676116	Identifier	tmp		676057	0					
ANR	676117	PrimaryExpression	"'""'"		676057	1					
ANR	676118	ExpressionStatement	ad -> Insert ( tmp . Value ( ) )	1303:1:36627:36652	676057	10	True				
ANR	676119	CallExpression	ad -> Insert ( tmp . Value ( ) )		676057	0					
ANR	676120	Callee	ad -> Insert		676057	0					
ANR	676121	PtrMemberAccess	ad -> Insert		676057	0					
ANR	676122	Identifier	ad		676057	0					
ANR	676123	Identifier	Insert		676057	1					
ANR	676124	ArgumentList	tmp . Value ( )		676057	1					
ANR	676125	Argument	tmp . Value ( )		676057	0					
ANR	676126	CallExpression	tmp . Value ( )		676057	0					
ANR	676127	Callee	tmp . Value		676057	0					
ANR	676128	MemberAccess	tmp . Value		676057	0					
ANR	676129	Identifier	tmp		676057	0					
ANR	676130	Identifier	Value		676057	1					
ANR	676131	ArgumentList			676057	1					
ANR	676132	IdentifierDeclStatement	"char * my_uid_domain = param ( ""UID_DOMAIN"" ) ;"	1305:1:36656:36699	676057	11	True				
ANR	676133	IdentifierDecl	"* my_uid_domain = param ( ""UID_DOMAIN"" )"		676057	0					
ANR	676134	IdentifierDeclType	char *		676057	0					
ANR	676135	Identifier	my_uid_domain		676057	1					
ANR	676136	AssignmentExpression	"* my_uid_domain = param ( ""UID_DOMAIN"" )"		676057	2		=			
ANR	676137	Identifier	my_uid_domain		676057	0					
ANR	676138	CallExpression	"param ( ""UID_DOMAIN"" )"		676057	1					
ANR	676139	Callee	param		676057	0					
ANR	676140	Identifier	param		676057	0					
ANR	676141	ArgumentList	"""UID_DOMAIN"""		676057	1					
ANR	676142	Argument	"""UID_DOMAIN"""		676057	0					
ANR	676143	PrimaryExpression	"""UID_DOMAIN"""		676057	0					
ANR	676144	IfStatement	if ( my_uid_domain )		676057	12					
ANR	676145	Condition	my_uid_domain	1306:5:36706:36718	676057	0	True				
ANR	676146	Identifier	my_uid_domain		676057	0					
ANR	676147	CompoundStatement		16:21:331:331	676057	1					
ANR	676148	ExpressionStatement	tmp = ATTR_UID_DOMAIN	1307:2:36726:36747	676057	0	True				
ANR	676149	AssignmentExpression	tmp = ATTR_UID_DOMAIN		676057	0		=			
ANR	676150	Identifier	tmp		676057	0					
ANR	676151	Identifier	ATTR_UID_DOMAIN		676057	1					
ANR	676152	ExpressionStatement	"tmp += ""=\\"""""	1308:2:36751:36763	676057	1	True				
ANR	676153	AssignmentExpression	"tmp += ""=\\"""""		676057	0		+=			
ANR	676154	Identifier	tmp		676057	0					
ANR	676155	PrimaryExpression	"""=\\"""""		676057	1					
ANR	676156	ExpressionStatement	tmp += my_uid_domain	1309:2:36767:36787	676057	2	True				
ANR	676157	AssignmentExpression	tmp += my_uid_domain		676057	0		+=			
ANR	676158	Identifier	tmp		676057	0					
ANR	676159	Identifier	my_uid_domain		676057	1					
ANR	676160	ExpressionStatement	"tmp += '""'"	1310:2:36791:36801	676057	3	True				
ANR	676161	AssignmentExpression	"tmp += '""'"		676057	0		+=			
ANR	676162	Identifier	tmp		676057	0					
ANR	676163	PrimaryExpression	"'""'"		676057	1					
ANR	676164	ExpressionStatement	ad -> Insert ( tmp . Value ( ) )	1311:2:36805:36830	676057	4	True				
ANR	676165	CallExpression	ad -> Insert ( tmp . Value ( ) )		676057	0					
ANR	676166	Callee	ad -> Insert		676057	0					
ANR	676167	PtrMemberAccess	ad -> Insert		676057	0					
ANR	676168	Identifier	ad		676057	0					
ANR	676169	Identifier	Insert		676057	1					
ANR	676170	ArgumentList	tmp . Value ( )		676057	1					
ANR	676171	Argument	tmp . Value ( )		676057	0					
ANR	676172	CallExpression	tmp . Value ( )		676057	0					
ANR	676173	Callee	tmp . Value		676057	0					
ANR	676174	MemberAccess	tmp . Value		676057	0					
ANR	676175	Identifier	tmp		676057	0					
ANR	676176	Identifier	Value		676057	1					
ANR	676177	ArgumentList			676057	1					
ANR	676178	ExpressionStatement	free ( my_uid_domain )	1312:2:36834:36855	676057	5	True				
ANR	676179	CallExpression	free ( my_uid_domain )		676057	0					
ANR	676180	Callee	free		676057	0					
ANR	676181	Identifier	free		676057	0					
ANR	676182	ArgumentList	my_uid_domain		676057	1					
ANR	676183	Argument	my_uid_domain		676057	0					
ANR	676184	Identifier	my_uid_domain		676057	0					
ANR	676185	ReturnType	void		676057	1					
ANR	676186	Identifier	BaseShadow :: publishShadowAttrs		676057	2					
ANR	676187	ParameterList	ClassAd * ad		676057	3					
ANR	676188	Parameter	ClassAd * ad	1290:32:36376:36386	676057	0	True				
ANR	676189	ParameterType	ClassAd *		676057	0					
ANR	676190	Identifier	ad		676057	1					
ANR	676191	CFGEntryNode	ENTRY		676057		True				
ANR	676192	CFGExitNode	EXIT		676057		True				
ANR	676193	Symbol	daemonCore -> InfoCommandSinfulString		676057						
ANR	676194	Symbol	ad		676057						
ANR	676195	Symbol	CondorVersion		676057						
ANR	676196	Symbol	param		676057						
ANR	676197	Symbol	tmp		676057						
ANR	676198	Symbol	* daemonCore		676057						
ANR	676199	Symbol	ATTR_SHADOW_IP_ADDR		676057						
ANR	676200	Symbol	daemonCore		676057						
ANR	676201	Symbol	tmp . Value		676057						
ANR	676202	Symbol	ATTR_SHADOW_VERSION		676057						
ANR	676203	Symbol	my_uid_domain		676057						
ANR	676204	Symbol	ATTR_UID_DOMAIN		676057						
ANR	676205	Function	BaseShadow :: dprintf_va	1317:0:36864:37096							
ANR	676206	FunctionDef	"BaseShadow :: dprintf_va (int flags , const char * fmt , va_list args)"		676205	0					
ANR	676207	CompoundStatement		1318:0:36936:37096	676205	0					
ANR	676208	Statement	::	1321:1:37054:37055	676205	0	True				
ANR	676209	ExpressionStatement	"_condor_dprintf_va ( flags , fmt , args )"	1321:3:37056:37094	676205	1	True				
ANR	676210	CallExpression	"_condor_dprintf_va ( flags , fmt , args )"		676205	0					
ANR	676211	Callee	_condor_dprintf_va		676205	0					
ANR	676212	Identifier	_condor_dprintf_va		676205	0					
ANR	676213	ArgumentList	flags		676205	1					
ANR	676214	Argument	flags		676205	0					
ANR	676215	Identifier	flags		676205	0					
ANR	676216	Argument	fmt		676205	1					
ANR	676217	Identifier	fmt		676205	0					
ANR	676218	Argument	args		676205	2					
ANR	676219	Identifier	args		676205	0					
ANR	676220	ReturnType	void		676205	1					
ANR	676221	Identifier	BaseShadow :: dprintf_va		676205	2					
ANR	676222	ParameterList	"int flags , const char * fmt , va_list args"		676205	3					
ANR	676223	Parameter	int flags	1317:29:36893:36901	676205	0	True				
ANR	676224	ParameterType	int		676205	0					
ANR	676225	Identifier	flags		676205	1					
ANR	676226	Parameter	const char * fmt	1317:40:36904:36918	676205	1	True				
ANR	676227	ParameterType	const char *		676205	0					
ANR	676228	Identifier	fmt		676205	1					
ANR	676229	Parameter	va_list args	1317:57:36921:36932	676205	2	True				
ANR	676230	ParameterType	va_list		676205	0					
ANR	676231	Identifier	args		676205	1					
ANR	676232	CFGEntryNode	ENTRY		676205		True				
ANR	676233	CFGExitNode	EXIT		676205		True				
ANR	676234	Symbol	args		676205						
ANR	676235	Symbol	flags		676205						
ANR	676236	Symbol	fmt		676205						
ANR	676237	Function	BaseShadow :: dprintf	1324:0:37099:37256							
ANR	676238	FunctionDef	"BaseShadow :: dprintf (int flags , const char * fmt)"		676237	0					
ANR	676239	CompoundStatement		1325:0:37159:37256	676237	0					
ANR	676240	IdentifierDeclStatement	va_list args ;	1326:1:37162:37174	676237	0	True				
ANR	676241	IdentifierDecl	args		676237	0					
ANR	676242	IdentifierDeclType	va_list		676237	0					
ANR	676243	Identifier	args		676237	1					
ANR	676244	ExpressionStatement	"va_start ( args , fmt )"	1327:1:37177:37198	676237	1	True				
ANR	676245	CallExpression	"va_start ( args , fmt )"		676237	0					
ANR	676246	Callee	va_start		676237	0					
ANR	676247	Identifier	va_start		676237	0					
ANR	676248	ArgumentList	args		676237	1					
ANR	676249	Argument	args		676237	0					
ANR	676250	Identifier	args		676237	0					
ANR	676251	Argument	fmt		676237	1					
ANR	676252	Identifier	fmt		676237	0					
ANR	676253	ExpressionStatement	"this -> dprintf_va ( flags , fmt , args )"	1328:1:37201:37237	676237	2	True				
ANR	676254	CallExpression	"this -> dprintf_va ( flags , fmt , args )"		676237	0					
ANR	676255	Callee	this -> dprintf_va		676237	0					
ANR	676256	PtrMemberAccess	this -> dprintf_va		676237	0					
ANR	676257	Identifier	this		676237	0					
ANR	676258	Identifier	dprintf_va		676237	1					
ANR	676259	ArgumentList	flags		676237	1					
ANR	676260	Argument	flags		676237	0					
ANR	676261	Identifier	flags		676237	0					
ANR	676262	Argument	fmt		676237	1					
ANR	676263	Identifier	fmt		676237	0					
ANR	676264	Argument	args		676237	2					
ANR	676265	Identifier	args		676237	0					
ANR	676266	ExpressionStatement	va_end ( args )	1329:1:37240:37254	676237	3	True				
ANR	676267	CallExpression	va_end ( args )		676237	0					
ANR	676268	Callee	va_end		676237	0					
ANR	676269	Identifier	va_end		676237	0					
ANR	676270	ArgumentList	args		676237	1					
ANR	676271	Argument	args		676237	0					
ANR	676272	Identifier	args		676237	0					
ANR	676273	ReturnType	void		676237	1					
ANR	676274	Identifier	BaseShadow :: dprintf		676237	2					
ANR	676275	ParameterList	"int flags , const char * fmt"		676237	3					
ANR	676276	Parameter	int flags	1324:26:37125:37133	676237	0	True				
ANR	676277	ParameterType	int		676237	0					
ANR	676278	Identifier	flags		676237	1					
ANR	676279	Parameter	const char * fmt	1324:37:37136:37150	676237	1	True				
ANR	676280	ParameterType	const char *		676237	0					
ANR	676281	Identifier	fmt		676237	1					
ANR	676282	CFGEntryNode	ENTRY		676237		True				
ANR	676283	CFGExitNode	EXIT		676237		True				
ANR	676284	Symbol	args		676237						
ANR	676285	Symbol	flags		676237						
ANR	676286	Symbol	this		676237						
ANR	676287	Symbol	fmt		676237						
ANR	676288	DeclStmt									
ANR	676289	Decl							extern BaseShadow	extern BaseShadow *	Shadow
ANR	676290	Function	display_dprintf_header	1340:0:37564:38061							
ANR	676291	FunctionDef	"display_dprintf_header (char * * buf , int * bufpos , int * buflen)"		676290	0					
ANR	676292	CompoundStatement		1342:0:37627:38061	676290	0					
ANR	676293	Statement	static	1343:1:37630:37635	676290	0	True				
ANR	676294	IdentifierDeclStatement	pid_t mypid = 0 ;	1343:8:37637:37652	676290	1	True				
ANR	676295	IdentifierDecl	mypid = 0		676290	0					
ANR	676296	IdentifierDeclType	pid_t		676290	0					
ANR	676297	Identifier	mypid		676290	1					
ANR	676298	AssignmentExpression	mypid = 0		676290	2		=			
ANR	676299	Identifier	mypid		676290	0					
ANR	676300	PrimaryExpression	0		676290	1					
ANR	676301	IdentifierDeclStatement	int mycluster = - 1 ;	1344:1:37655:37673	676290	2	True				
ANR	676302	IdentifierDecl	mycluster = - 1		676290	0					
ANR	676303	IdentifierDeclType	int		676290	0					
ANR	676304	Identifier	mycluster		676290	1					
ANR	676305	AssignmentExpression	mycluster = - 1		676290	2		=			
ANR	676306	Identifier	mycluster		676290	0					
ANR	676307	UnaryOperationExpression	- 1		676290	1					
ANR	676308	UnaryOperator	-		676290	0					
ANR	676309	PrimaryExpression	1		676290	1					
ANR	676310	IdentifierDeclStatement	int myproc = - 1 ;	1345:1:37676:37691	676290	3	True				
ANR	676311	IdentifierDecl	myproc = - 1		676290	0					
ANR	676312	IdentifierDeclType	int		676290	0					
ANR	676313	Identifier	myproc		676290	1					
ANR	676314	AssignmentExpression	myproc = - 1		676290	2		=			
ANR	676315	Identifier	myproc		676290	0					
ANR	676316	UnaryOperationExpression	- 1		676290	1					
ANR	676317	UnaryOperator	-		676290	0					
ANR	676318	PrimaryExpression	1		676290	1					
ANR	676319	IfStatement	if ( ! mypid )		676290	4					
ANR	676320	Condition	! mypid	1347:5:37699:37704	676290	0	True				
ANR	676321	UnaryOperationExpression	! mypid		676290	0					
ANR	676322	UnaryOperator	!		676290	0					
ANR	676323	Identifier	mypid		676290	1					
ANR	676324	CompoundStatement		6:13:79:79	676290	1					
ANR	676325	ExpressionStatement	mypid = daemonCore -> getpid ( )	1348:2:37711:37739	676290	0	True				
ANR	676326	AssignmentExpression	mypid = daemonCore -> getpid ( )		676290	0		=			
ANR	676327	Identifier	mypid		676290	0					
ANR	676328	CallExpression	daemonCore -> getpid ( )		676290	1					
ANR	676329	Callee	daemonCore -> getpid		676290	0					
ANR	676330	PtrMemberAccess	daemonCore -> getpid		676290	0					
ANR	676331	Identifier	daemonCore		676290	0					
ANR	676332	Identifier	getpid		676290	1					
ANR	676333	ArgumentList			676290	1					
ANR	676334	IfStatement	if ( Shadow )		676290	5					
ANR	676335	Condition	Shadow	1351:5:37750:37755	676290	0	True				
ANR	676336	Identifier	Shadow		676290	0					
ANR	676337	CompoundStatement		10:13:130:130	676290	1					
ANR	676338	ExpressionStatement	mycluster = Shadow -> getCluster ( )	1352:2:37762:37794	676290	0	True				
ANR	676339	AssignmentExpression	mycluster = Shadow -> getCluster ( )		676290	0		=			
ANR	676340	Identifier	mycluster		676290	0					
ANR	676341	CallExpression	Shadow -> getCluster ( )		676290	1					
ANR	676342	Callee	Shadow -> getCluster		676290	0					
ANR	676343	PtrMemberAccess	Shadow -> getCluster		676290	0					
ANR	676344	Identifier	Shadow		676290	0					
ANR	676345	Identifier	getCluster		676290	1					
ANR	676346	ArgumentList			676290	1					
ANR	676347	ExpressionStatement	myproc = Shadow -> getProc ( )	1353:2:37798:37824	676290	1	True				
ANR	676348	AssignmentExpression	myproc = Shadow -> getProc ( )		676290	0		=			
ANR	676349	Identifier	myproc		676290	0					
ANR	676350	CallExpression	Shadow -> getProc ( )		676290	1					
ANR	676351	Callee	Shadow -> getProc		676290	0					
ANR	676352	PtrMemberAccess	Shadow -> getProc		676290	0					
ANR	676353	Identifier	Shadow		676290	0					
ANR	676354	Identifier	getProc		676290	1					
ANR	676355	ArgumentList			676290	1					
ANR	676356	IfStatement	if ( mycluster != - 1 )		676290	6					
ANR	676357	Condition	mycluster != - 1	1356:6:37836:37850	676290	0	True				
ANR	676358	EqualityExpression	mycluster != - 1		676290	0		!=			
ANR	676359	Identifier	mycluster		676290	0					
ANR	676360	UnaryOperationExpression	- 1		676290	1					
ANR	676361	UnaryOperator	-		676290	0					
ANR	676362	PrimaryExpression	1		676290	1					
ANR	676363	CompoundStatement		15:24:226:226	676290	1					
ANR	676364	ReturnStatement	"return sprintf_realloc ( buf , bufpos , buflen , ""(%d.%d) (%ld): "" , mycluster , myproc , ( long ) mypid ) ;"	1357:2:37858:37954	676290	0	True				
ANR	676365	CallExpression	"sprintf_realloc ( buf , bufpos , buflen , ""(%d.%d) (%ld): "" , mycluster , myproc , ( long ) mypid )"		676290	0					
ANR	676366	Callee	sprintf_realloc		676290	0					
ANR	676367	Identifier	sprintf_realloc		676290	0					
ANR	676368	ArgumentList	buf		676290	1					
ANR	676369	Argument	buf		676290	0					
ANR	676370	Identifier	buf		676290	0					
ANR	676371	Argument	bufpos		676290	1					
ANR	676372	Identifier	bufpos		676290	0					
ANR	676373	Argument	buflen		676290	2					
ANR	676374	Identifier	buflen		676290	0					
ANR	676375	Argument	"""(%d.%d) (%ld): """		676290	3					
ANR	676376	PrimaryExpression	"""(%d.%d) (%ld): """		676290	0					
ANR	676377	Argument	mycluster		676290	4					
ANR	676378	Identifier	mycluster		676290	0					
ANR	676379	Argument	myproc		676290	5					
ANR	676380	Identifier	myproc		676290	0					
ANR	676381	Argument	( long ) mypid		676290	6					
ANR	676382	CastExpression	( long ) mypid		676290	0					
ANR	676383	CastTarget	long		676290	0					
ANR	676384	Identifier	mypid		676290	1					
ANR	676385	ElseStatement	else		676290	0					
ANR	676386	CompoundStatement		17:8:336:336	676290	0					
ANR	676387	ReturnStatement	"return sprintf_realloc ( buf , bufpos , buflen , ""(?.?) (%ld): "" , ( long ) mypid ) ;"	1359:2:37968:38043	676290	0	True				
ANR	676388	CallExpression	"sprintf_realloc ( buf , bufpos , buflen , ""(?.?) (%ld): "" , ( long ) mypid )"		676290	0					
ANR	676389	Callee	sprintf_realloc		676290	0					
ANR	676390	Identifier	sprintf_realloc		676290	0					
ANR	676391	ArgumentList	buf		676290	1					
ANR	676392	Argument	buf		676290	0					
ANR	676393	Identifier	buf		676290	0					
ANR	676394	Argument	bufpos		676290	1					
ANR	676395	Identifier	bufpos		676290	0					
ANR	676396	Argument	buflen		676290	2					
ANR	676397	Identifier	buflen		676290	0					
ANR	676398	Argument	"""(?.?) (%ld): """		676290	3					
ANR	676399	PrimaryExpression	"""(?.?) (%ld): """		676290	0					
ANR	676400	Argument	( long ) mypid		676290	4					
ANR	676401	CastExpression	( long ) mypid		676290	0					
ANR	676402	CastTarget	long		676290	0					
ANR	676403	Identifier	mypid		676290	1					
ANR	676404	ReturnStatement	return 0 ;	1362:1:38051:38059	676290	7	True				
ANR	676405	PrimaryExpression	0		676290	0					
ANR	676406	ReturnType	int		676290	1					
ANR	676407	Identifier	display_dprintf_header		676290	2					
ANR	676408	ParameterList	"char * * buf , int * bufpos , int * buflen"		676290	3					
ANR	676409	Parameter	char * * buf	1341:23:37591:37600	676290	0	True				
ANR	676410	ParameterType	char * *		676290	0					
ANR	676411	Identifier	buf		676290	1					
ANR	676412	Parameter	int * bufpos	1341:34:37602:37612	676290	1	True				
ANR	676413	ParameterType	int *		676290	0					
ANR	676414	Identifier	bufpos		676290	1					
ANR	676415	Parameter	int * buflen	1341:46:37614:37624	676290	2	True				
ANR	676416	ParameterType	int *		676290	0					
ANR	676417	Identifier	buflen		676290	1					
ANR	676418	CFGEntryNode	ENTRY		676290		True				
ANR	676419	CFGExitNode	EXIT		676290		True				
ANR	676420	Symbol	mycluster		676290						
ANR	676421	Symbol	Shadow -> getCluster		676290						
ANR	676422	Symbol	mypid		676290						
ANR	676423	Symbol	Shadow -> getProc		676290						
ANR	676424	Symbol	daemonCore -> getpid		676290						
ANR	676425	Symbol	Shadow		676290						
ANR	676426	Symbol	buf		676290						
ANR	676427	Symbol	* Shadow		676290						
ANR	676428	Symbol	* daemonCore		676290						
ANR	676429	Symbol	daemonCore		676290						
ANR	676430	Symbol	sprintf_realloc		676290						
ANR	676431	Symbol	buflen		676290						
ANR	676432	Symbol	bufpos		676290						
ANR	676433	Symbol	myproc		676290						
ANR	676434	Function	BaseShadow :: CommitSuspensionTime	1371:0:38146:38694							
ANR	676435	FunctionDef	BaseShadow :: CommitSuspensionTime (ClassAd * jobAd)		676434	0					
ANR	676436	CompoundStatement		1373:0:38200:38694	676434	0					
ANR	676437	IdentifierDeclStatement	int uncommitted_suspension_time = 0 ;	1374:1:38203:38238	676434	0	True				
ANR	676438	IdentifierDecl	uncommitted_suspension_time = 0		676434	0					
ANR	676439	IdentifierDeclType	int		676434	0					
ANR	676440	Identifier	uncommitted_suspension_time		676434	1					
ANR	676441	AssignmentExpression	uncommitted_suspension_time = 0		676434	2		=			
ANR	676442	Identifier	uncommitted_suspension_time		676434	0					
ANR	676443	PrimaryExpression	0		676434	1					
ANR	676444	ExpressionStatement	"jobAd -> LookupInteger ( ATTR_UNCOMMITTED_SUSPENSION_TIME , uncommitted_suspension_time )"	1375:1:38241:38323	676434	1	True				
ANR	676445	CallExpression	"jobAd -> LookupInteger ( ATTR_UNCOMMITTED_SUSPENSION_TIME , uncommitted_suspension_time )"		676434	0					
ANR	676446	Callee	jobAd -> LookupInteger		676434	0					
ANR	676447	PtrMemberAccess	jobAd -> LookupInteger		676434	0					
ANR	676448	Identifier	jobAd		676434	0					
ANR	676449	Identifier	LookupInteger		676434	1					
ANR	676450	ArgumentList	ATTR_UNCOMMITTED_SUSPENSION_TIME		676434	1					
ANR	676451	Argument	ATTR_UNCOMMITTED_SUSPENSION_TIME		676434	0					
ANR	676452	Identifier	ATTR_UNCOMMITTED_SUSPENSION_TIME		676434	0					
ANR	676453	Argument	uncommitted_suspension_time		676434	1					
ANR	676454	Identifier	uncommitted_suspension_time		676434	0					
ANR	676455	IfStatement	if ( uncommitted_suspension_time > 0 )		676434	2					
ANR	676456	Condition	uncommitted_suspension_time > 0	1376:5:38330:38360	676434	0	True				
ANR	676457	RelationalExpression	uncommitted_suspension_time > 0		676434	0		>			
ANR	676458	Identifier	uncommitted_suspension_time		676434	0					
ANR	676459	PrimaryExpression	0		676434	1					
ANR	676460	CompoundStatement		5:2:167:200	676434	1					
ANR	676461	IdentifierDeclStatement	int committed_suspension_time = 0 ;	1377:2:38368:38401	676434	0	True				
ANR	676462	IdentifierDecl	committed_suspension_time = 0		676434	0					
ANR	676463	IdentifierDeclType	int		676434	0					
ANR	676464	Identifier	committed_suspension_time		676434	1					
ANR	676465	AssignmentExpression	committed_suspension_time = 0		676434	2		=			
ANR	676466	Identifier	committed_suspension_time		676434	0					
ANR	676467	PrimaryExpression	0		676434	1					
ANR	676468	ExpressionStatement	"jobAd -> LookupInteger ( ATTR_COMMITTED_SUSPENSION_TIME , committed_suspension_time )"	1378:2:38405:38495	676434	1	True				
ANR	676469	CallExpression	"jobAd -> LookupInteger ( ATTR_COMMITTED_SUSPENSION_TIME , committed_suspension_time )"		676434	0					
ANR	676470	Callee	jobAd -> LookupInteger		676434	0					
ANR	676471	PtrMemberAccess	jobAd -> LookupInteger		676434	0					
ANR	676472	Identifier	jobAd		676434	0					
ANR	676473	Identifier	LookupInteger		676434	1					
ANR	676474	ArgumentList	ATTR_COMMITTED_SUSPENSION_TIME		676434	1					
ANR	676475	Argument	ATTR_COMMITTED_SUSPENSION_TIME		676434	0					
ANR	676476	Identifier	ATTR_COMMITTED_SUSPENSION_TIME		676434	0					
ANR	676477	Argument	committed_suspension_time		676434	1					
ANR	676478	Identifier	committed_suspension_time		676434	0					
ANR	676479	ExpressionStatement	committed_suspension_time += uncommitted_suspension_time	1380:2:38499:38555	676434	2	True				
ANR	676480	AssignmentExpression	committed_suspension_time += uncommitted_suspension_time		676434	0		+=			
ANR	676481	Identifier	committed_suspension_time		676434	0					
ANR	676482	Identifier	uncommitted_suspension_time		676434	1					
ANR	676483	ExpressionStatement	"jobAd -> Assign ( ATTR_COMMITTED_SUSPENSION_TIME , committed_suspension_time )"	1381:2:38559:38633	676434	3	True				
ANR	676484	CallExpression	"jobAd -> Assign ( ATTR_COMMITTED_SUSPENSION_TIME , committed_suspension_time )"		676434	0					
ANR	676485	Callee	jobAd -> Assign		676434	0					
ANR	676486	PtrMemberAccess	jobAd -> Assign		676434	0					
ANR	676487	Identifier	jobAd		676434	0					
ANR	676488	Identifier	Assign		676434	1					
ANR	676489	ArgumentList	ATTR_COMMITTED_SUSPENSION_TIME		676434	1					
ANR	676490	Argument	ATTR_COMMITTED_SUSPENSION_TIME		676434	0					
ANR	676491	Identifier	ATTR_COMMITTED_SUSPENSION_TIME		676434	0					
ANR	676492	Argument	committed_suspension_time		676434	1					
ANR	676493	Identifier	committed_suspension_time		676434	0					
ANR	676494	ExpressionStatement	"jobAd -> Assign ( ATTR_UNCOMMITTED_SUSPENSION_TIME , 0 )"	1382:2:38637:38689	676434	4	True				
ANR	676495	CallExpression	"jobAd -> Assign ( ATTR_UNCOMMITTED_SUSPENSION_TIME , 0 )"		676434	0					
ANR	676496	Callee	jobAd -> Assign		676434	0					
ANR	676497	PtrMemberAccess	jobAd -> Assign		676434	0					
ANR	676498	Identifier	jobAd		676434	0					
ANR	676499	Identifier	Assign		676434	1					
ANR	676500	ArgumentList	ATTR_UNCOMMITTED_SUSPENSION_TIME		676434	1					
ANR	676501	Argument	ATTR_UNCOMMITTED_SUSPENSION_TIME		676434	0					
ANR	676502	Identifier	ATTR_UNCOMMITTED_SUSPENSION_TIME		676434	0					
ANR	676503	Argument	0		676434	1					
ANR	676504	PrimaryExpression	0		676434	0					
ANR	676505	ReturnType	void		676434	1					
ANR	676506	Identifier	BaseShadow :: CommitSuspensionTime		676434	2					
ANR	676507	ParameterList	ClassAd * jobAd		676434	3					
ANR	676508	Parameter	ClassAd * jobAd	1372:33:38184:38197	676434	0	True				
ANR	676509	ParameterType	ClassAd *		676434	0					
ANR	676510	Identifier	jobAd		676434	1					
ANR	676511	CFGEntryNode	ENTRY		676434		True				
ANR	676512	CFGExitNode	EXIT		676434		True				
ANR	676513	Symbol	ATTR_UNCOMMITTED_SUSPENSION_TIME		676434						
ANR	676514	Symbol	committed_suspension_time		676434						
ANR	676515	Symbol	uncommitted_suspension_time		676434						
ANR	676516	Symbol	jobAd		676434						
ANR	676517	Symbol	ATTR_COMMITTED_SUSPENSION_TIME		676434						
ANR	676518	Function	BaseShadow :: handleUpdateJobAd	1386:0:38697:39085							
ANR	676519	FunctionDef	BaseShadow :: handleUpdateJobAd (int sig)		676518	0					
ANR	676520	CompoundStatement		1388:0:38742:39085	676518	0					
ANR	676521	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""In handleUpdateJobAd, sig %d\\n"" , sig )"	1389:1:38745:38807	676518	0	True				
ANR	676522	CallExpression	"dprintf ( D_FULLDEBUG , ""In handleUpdateJobAd, sig %d\\n"" , sig )"		676518	0					
ANR	676523	Callee	dprintf		676518	0					
ANR	676524	Identifier	dprintf		676518	0					
ANR	676525	ArgumentList	D_FULLDEBUG		676518	1					
ANR	676526	Argument	D_FULLDEBUG		676518	0					
ANR	676527	Identifier	D_FULLDEBUG		676518	0					
ANR	676528	Argument	"""In handleUpdateJobAd, sig %d\\n"""		676518	1					
ANR	676529	PrimaryExpression	"""In handleUpdateJobAd, sig %d\\n"""		676518	0					
ANR	676530	Argument	sig		676518	2					
ANR	676531	Identifier	sig		676518	0					
ANR	676532	IfStatement	if ( ! job_updater -> retrieveJobUpdates ( ) )		676518	1					
ANR	676533	Condition	! job_updater -> retrieveJobUpdates ( )	1390:5:38814:38847	676518	0	True				
ANR	676534	UnaryOperationExpression	! job_updater -> retrieveJobUpdates ( )		676518	0					
ANR	676535	UnaryOperator	!		676518	0					
ANR	676536	CallExpression	job_updater -> retrieveJobUpdates ( )		676518	1					
ANR	676537	Callee	job_updater -> retrieveJobUpdates		676518	0					
ANR	676538	PtrMemberAccess	job_updater -> retrieveJobUpdates		676518	0					
ANR	676539	Identifier	job_updater		676518	0					
ANR	676540	Identifier	retrieveJobUpdates		676518	1					
ANR	676541	ArgumentList			676518	1					
ANR	676542	CompoundStatement		3:41:107:107	676518	1					
ANR	676543	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error: Failed to update JobAd\\n"" )"	1391:2:38854:38906	676518	0	True				
ANR	676544	CallExpression	"dprintf ( D_ALWAYS , ""Error: Failed to update JobAd\\n"" )"		676518	0					
ANR	676545	Callee	dprintf		676518	0					
ANR	676546	Identifier	dprintf		676518	0					
ANR	676547	ArgumentList	D_ALWAYS		676518	1					
ANR	676548	Argument	D_ALWAYS		676518	0					
ANR	676549	Identifier	D_ALWAYS		676518	0					
ANR	676550	Argument	"""Error: Failed to update JobAd\\n"""		676518	1					
ANR	676551	PrimaryExpression	"""Error: Failed to update JobAd\\n"""		676518	0					
ANR	676552	ReturnStatement	return - 1 ;	1392:2:38910:38919	676518	1	True				
ANR	676553	UnaryOperationExpression	- 1		676518	0					
ANR	676554	UnaryOperator	-		676518	0					
ANR	676555	PrimaryExpression	1		676518	1					
ANR	676556	ExpressionStatement	shadow_user_policy . checkPeriodic ( )	1397:1:39038:39072	676518	2	True				
ANR	676557	CallExpression	shadow_user_policy . checkPeriodic ( )		676518	0					
ANR	676558	Callee	shadow_user_policy . checkPeriodic		676518	0					
ANR	676559	MemberAccess	shadow_user_policy . checkPeriodic		676518	0					
ANR	676560	Identifier	shadow_user_policy		676518	0					
ANR	676561	Identifier	checkPeriodic		676518	1					
ANR	676562	ArgumentList			676518	1					
ANR	676563	ReturnStatement	return 0 ;	1398:1:39075:39083	676518	3	True				
ANR	676564	PrimaryExpression	0		676518	0					
ANR	676565	ReturnType	int		676518	1					
ANR	676566	Identifier	BaseShadow :: handleUpdateJobAd		676518	2					
ANR	676567	ParameterList	int sig		676518	3					
ANR	676568	Parameter	int sig	1387:31:38732:38738	676518	0	True				
ANR	676569	ParameterType	int		676518	0					
ANR	676570	Identifier	sig		676518	1					
ANR	676571	CFGEntryNode	ENTRY		676518		True				
ANR	676572	CFGExitNode	EXIT		676518		True				
ANR	676573	Symbol	sig		676518						
ANR	676574	Symbol	job_updater		676518						
ANR	676575	Symbol	* job_updater		676518						
ANR	676576	Symbol	D_ALWAYS		676518						
ANR	676577	Symbol	D_FULLDEBUG		676518						
ANR	676578	Symbol	shadow_user_policy		676518						
ANR	676579	Symbol	job_updater -> retrieveJobUpdates		676518						
ANR	676580	Function	BaseShadow :: jobWantsGracefulRemoval	1401:0:39088:39347							
ANR	676581	FunctionDef	BaseShadow :: jobWantsGracefulRemoval ()		676580	0					
ANR	676582	CompoundStatement		1403:0:39131:39347	676580	0					
ANR	676583	IdentifierDeclStatement	bool job_wants_graceful_removal = false ;	1404:1:39134:39173	676580	0	True				
ANR	676584	IdentifierDecl	job_wants_graceful_removal = false		676580	0					
ANR	676585	IdentifierDeclType	bool		676580	0					
ANR	676586	Identifier	job_wants_graceful_removal		676580	1					
ANR	676587	AssignmentExpression	job_wants_graceful_removal = false		676580	2		=			
ANR	676588	Identifier	false		676580	0					
ANR	676589	Identifier	false		676580	1					
ANR	676590	IdentifierDeclStatement	ClassAd * thejobAd = getJobAd ( ) ;	1405:1:39176:39206	676580	1	True				
ANR	676591	IdentifierDecl	* thejobAd = getJobAd ( )		676580	0					
ANR	676592	IdentifierDeclType	ClassAd *		676580	0					
ANR	676593	Identifier	thejobAd		676580	1					
ANR	676594	AssignmentExpression	* thejobAd = getJobAd ( )		676580	2		=			
ANR	676595	Identifier	thejobAd		676580	0					
ANR	676596	CallExpression	getJobAd ( )		676580	1					
ANR	676597	Callee	getJobAd		676580	0					
ANR	676598	Identifier	getJobAd		676580	0					
ANR	676599	ArgumentList			676580	1					
ANR	676600	IfStatement	if ( thejobAd )		676580	2					
ANR	676601	Condition	thejobAd	1406:5:39213:39220	676580	0	True				
ANR	676602	Identifier	thejobAd		676580	0					
ANR	676603	CompoundStatement		4:16:92:92	676580	1					
ANR	676604	ExpressionStatement	"thejobAd -> LookupBool ( ATTR_WANT_GRACEFUL_REMOVAL , job_wants_graceful_removal )"	1407:2:39228:39306	676580	0	True				
ANR	676605	CallExpression	"thejobAd -> LookupBool ( ATTR_WANT_GRACEFUL_REMOVAL , job_wants_graceful_removal )"		676580	0					
ANR	676606	Callee	thejobAd -> LookupBool		676580	0					
ANR	676607	PtrMemberAccess	thejobAd -> LookupBool		676580	0					
ANR	676608	Identifier	thejobAd		676580	0					
ANR	676609	Identifier	LookupBool		676580	1					
ANR	676610	ArgumentList	ATTR_WANT_GRACEFUL_REMOVAL		676580	1					
ANR	676611	Argument	ATTR_WANT_GRACEFUL_REMOVAL		676580	0					
ANR	676612	Identifier	ATTR_WANT_GRACEFUL_REMOVAL		676580	0					
ANR	676613	Argument	job_wants_graceful_removal		676580	1					
ANR	676614	Identifier	job_wants_graceful_removal		676580	0					
ANR	676615	ReturnStatement	return job_wants_graceful_removal ;	1409:1:39312:39345	676580	3	True				
ANR	676616	Identifier	job_wants_graceful_removal		676580	0					
ANR	676617	ReturnType	bool		676580	1					
ANR	676618	Identifier	BaseShadow :: jobWantsGracefulRemoval		676580	2					
ANR	676619	ParameterList			676580	3					
ANR	676620	CFGEntryNode	ENTRY		676580		True				
ANR	676621	CFGExitNode	EXIT		676580		True				
ANR	676622	Symbol	job_wants_graceful_removal		676580						
ANR	676623	Symbol	ATTR_WANT_GRACEFUL_REMOVAL		676580						
ANR	676624	Symbol	false		676580						
ANR	676625	Symbol	thejobAd		676580						
ANR	676626	Symbol	getJobAd		676580						
