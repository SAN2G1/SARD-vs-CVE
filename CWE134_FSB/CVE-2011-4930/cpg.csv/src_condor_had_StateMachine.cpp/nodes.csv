command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3355010	File	data/converged/CVE-2011-4930_htcondor/src_condor_had_StateMachine.cpp								
ANR	3355011	Function	HADStateMachine :: HADStateMachine	49:0:1412:1465							
ANR	3355012	FunctionDef	HADStateMachine :: HADStateMachine ()		3355011	0					
ANR	3355013	CompoundStatement		50:0:1451:1465	3355011	0					
ANR	3355014	ExpressionStatement	init ( )	51:4:1457:1463	3355011	0	True				
ANR	3355015	CallExpression	init ( )		3355011	0					
ANR	3355016	Callee	init		3355011	0					
ANR	3355017	Identifier	init		3355011	0					
ANR	3355018	ArgumentList			3355011	1					
ANR	3355019	Identifier	HADStateMachine :: HADStateMachine		3355011	1					
ANR	3355020	ParameterList			3355011	2					
ANR	3355021	CFGEntryNode	ENTRY		3355011		True				
ANR	3355022	CFGExitNode	EXIT		3355011		True				
ANR	3355023	Function	HADStateMachine :: init	57:0:1545:2167							
ANR	3355024	FunctionDef	HADStateMachine :: init ()		3355023	0					
ANR	3355025	CompoundStatement		59:0:1578:2167	3355023	0					
ANR	3355026	ExpressionStatement	m_state = PRE_STATE	60:4:1584:1603	3355023	0	True				
ANR	3355027	AssignmentExpression	m_state = PRE_STATE		3355023	0		=			
ANR	3355028	Identifier	m_state		3355023	0					
ANR	3355029	Identifier	PRE_STATE		3355023	1					
ANR	3355030	ExpressionStatement	m_masterDaemon = NULL	61:4:1609:1630	3355023	1	True				
ANR	3355031	AssignmentExpression	m_masterDaemon = NULL		3355023	0		=			
ANR	3355032	Identifier	m_masterDaemon		3355023	0					
ANR	3355033	Identifier	NULL		3355023	1					
ANR	3355034	ExpressionStatement	m_controlleeName = NULL	62:1:1633:1656	3355023	2	True				
ANR	3355035	AssignmentExpression	m_controlleeName = NULL		3355023	0		=			
ANR	3355036	Identifier	m_controlleeName		3355023	0					
ANR	3355037	Identifier	NULL		3355023	1					
ANR	3355038	ExpressionStatement	m_isPrimary = false	63:4:1662:1681	3355023	3	True				
ANR	3355039	AssignmentExpression	m_isPrimary = false		3355023	0		=			
ANR	3355040	Identifier	m_isPrimary		3355023	0					
ANR	3355041	Identifier	false		3355023	1					
ANR	3355042	ExpressionStatement	m_usePrimary = false	64:4:1687:1707	3355023	4	True				
ANR	3355043	AssignmentExpression	m_usePrimary = false		3355023	0		=			
ANR	3355044	Identifier	m_usePrimary		3355023	0					
ANR	3355045	Identifier	false		3355023	1					
ANR	3355046	ExpressionStatement	m_standAloneMode = false	65:4:1713:1737	3355023	5	True				
ANR	3355047	AssignmentExpression	m_standAloneMode = false		3355023	0		=			
ANR	3355048	Identifier	m_standAloneMode		3355023	0					
ANR	3355049	Identifier	false		3355023	1					
ANR	3355050	ExpressionStatement	m_callsCounter = 0	66:4:1743:1761	3355023	6	True				
ANR	3355051	AssignmentExpression	m_callsCounter = 0		3355023	0		=			
ANR	3355052	Identifier	m_callsCounter		3355023	0					
ANR	3355053	PrimaryExpression	0		3355023	1					
ANR	3355054	ExpressionStatement	m_stateMachineTimerID = - 1	67:4:1767:1793	3355023	7	True				
ANR	3355055	AssignmentExpression	m_stateMachineTimerID = - 1		3355023	0		=			
ANR	3355056	Identifier	m_stateMachineTimerID		3355023	0					
ANR	3355057	UnaryOperationExpression	- 1		3355023	1					
ANR	3355058	UnaryOperator	-		3355023	0					
ANR	3355059	PrimaryExpression	1		3355023	1					
ANR	3355060	ExpressionStatement	m_hadInterval = - 1	68:4:1799:1817	3355023	8	True				
ANR	3355061	AssignmentExpression	m_hadInterval = - 1		3355023	0		=			
ANR	3355062	Identifier	m_hadInterval		3355023	0					
ANR	3355063	UnaryOperationExpression	- 1		3355023	1					
ANR	3355064	UnaryOperator	-		3355023	0					
ANR	3355065	PrimaryExpression	1		3355023	1					
ANR	3355066	ExpressionStatement	m_connectionTimeout = DEFAULT_SEND_COMMAND_TIMEOUT	70:4:1869:1919	3355023	9	True				
ANR	3355067	AssignmentExpression	m_connectionTimeout = DEFAULT_SEND_COMMAND_TIMEOUT		3355023	0		=			
ANR	3355068	Identifier	m_connectionTimeout		3355023	0					
ANR	3355069	Identifier	DEFAULT_SEND_COMMAND_TIMEOUT		3355023	1					
ANR	3355070	ExpressionStatement	m_selfId = - 1	71:4:1925:1938	3355023	10	True				
ANR	3355071	AssignmentExpression	m_selfId = - 1		3355023	0		=			
ANR	3355072	Identifier	m_selfId		3355023	0					
ANR	3355073	UnaryOperationExpression	- 1		3355023	1					
ANR	3355074	UnaryOperator	-		3355023	0					
ANR	3355075	PrimaryExpression	1		3355023	1					
ANR	3355076	ExpressionStatement	m_useReplication = false	74:4:1986:2010	3355023	11	True				
ANR	3355077	AssignmentExpression	m_useReplication = false		3355023	0		=			
ANR	3355078	Identifier	m_useReplication		3355023	0					
ANR	3355079	Identifier	false		3355023	1					
ANR	3355080	ExpressionStatement	m_replicationDaemonSinfulString = NULL	75:4:2016:2054	3355023	12	True				
ANR	3355081	AssignmentExpression	m_replicationDaemonSinfulString = NULL		3355023	0		=			
ANR	3355082	Identifier	m_replicationDaemonSinfulString		3355023	0					
ANR	3355083	Identifier	NULL		3355023	1					
ANR	3355084	ExpressionStatement	m_updateCollectorTimerId = - 1	77:4:2100:2129	3355023	13	True				
ANR	3355085	AssignmentExpression	m_updateCollectorTimerId = - 1		3355023	0		=			
ANR	3355086	Identifier	m_updateCollectorTimerId		3355023	0					
ANR	3355087	UnaryOperationExpression	- 1		3355023	1					
ANR	3355088	UnaryOperator	-		3355023	0					
ANR	3355089	PrimaryExpression	1		3355023	1					
ANR	3355090	ExpressionStatement	m_updateCollectorInterval = - 1	78:4:2135:2165	3355023	14	True				
ANR	3355091	AssignmentExpression	m_updateCollectorInterval = - 1		3355023	0		=			
ANR	3355092	Identifier	m_updateCollectorInterval		3355023	0					
ANR	3355093	UnaryOperationExpression	- 1		3355023	1					
ANR	3355094	UnaryOperator	-		3355023	0					
ANR	3355095	PrimaryExpression	1		3355023	1					
ANR	3355096	ReturnType	void		3355023	1					
ANR	3355097	Identifier	HADStateMachine :: init		3355023	2					
ANR	3355098	ParameterList			3355023	3					
ANR	3355099	CFGEntryNode	ENTRY		3355023		True				
ANR	3355100	CFGExitNode	EXIT		3355023		True				
ANR	3355101	Symbol	NULL		3355023						
ANR	3355102	Symbol	m_callsCounter		3355023						
ANR	3355103	Symbol	false		3355023						
ANR	3355104	Symbol	m_isPrimary		3355023						
ANR	3355105	Symbol	m_controlleeName		3355023						
ANR	3355106	Symbol	m_replicationDaemonSinfulString		3355023						
ANR	3355107	Symbol	m_stateMachineTimerID		3355023						
ANR	3355108	Symbol	m_state		3355023						
ANR	3355109	Symbol	m_usePrimary		3355023						
ANR	3355110	Symbol	m_standAloneMode		3355023						
ANR	3355111	Symbol	PRE_STATE		3355023						
ANR	3355112	Symbol	m_hadInterval		3355023						
ANR	3355113	Symbol	m_selfId		3355023						
ANR	3355114	Symbol	m_updateCollectorInterval		3355023						
ANR	3355115	Symbol	m_useReplication		3355023						
ANR	3355116	Symbol	m_connectionTimeout		3355023						
ANR	3355117	Symbol	DEFAULT_SEND_COMMAND_TIMEOUT		3355023						
ANR	3355118	Symbol	m_masterDaemon		3355023						
ANR	3355119	Symbol	m_updateCollectorTimerId		3355023						
ANR	3355120	Function	HADStateMachine :: freeResources	84:0:2285:3267							
ANR	3355121	FunctionDef	HADStateMachine :: freeResources ()		3355120	0					
ANR	3355122	CompoundStatement		86:0:2327:3267	3355120	0					
ANR	3355123	ExpressionStatement	m_state = PRE_STATE	87:4:2333:2352	3355120	0	True				
ANR	3355124	AssignmentExpression	m_state = PRE_STATE		3355120	0		=			
ANR	3355125	Identifier	m_state		3355120	0					
ANR	3355126	Identifier	PRE_STATE		3355120	1					
ANR	3355127	ExpressionStatement	m_connectionTimeout = DEFAULT_SEND_COMMAND_TIMEOUT	88:4:2358:2408	3355120	1	True				
ANR	3355128	AssignmentExpression	m_connectionTimeout = DEFAULT_SEND_COMMAND_TIMEOUT		3355120	0		=			
ANR	3355129	Identifier	m_connectionTimeout		3355120	0					
ANR	3355130	Identifier	DEFAULT_SEND_COMMAND_TIMEOUT		3355120	1					
ANR	3355131	IfStatement	if ( m_masterDaemon != NULL )		3355120	2					
ANR	3355132	Condition	m_masterDaemon != NULL	90:8:2419:2440	3355120	0	True				
ANR	3355133	EqualityExpression	m_masterDaemon != NULL		3355120	0		!=			
ANR	3355134	Identifier	m_masterDaemon		3355120	0					
ANR	3355135	Identifier	NULL		3355120	1					
ANR	3355136	CompoundStatement		5:32:115:115	3355120	1					
ANR	3355137	ExpressionStatement	sendControlCmdToMaster ( CHILD_OFF_FAST )	94:8:2630:2670	3355120	0	True				
ANR	3355138	CallExpression	sendControlCmdToMaster ( CHILD_OFF_FAST )		3355120	0					
ANR	3355139	Callee	sendControlCmdToMaster		3355120	0					
ANR	3355140	Identifier	sendControlCmdToMaster		3355120	0					
ANR	3355141	ArgumentList	CHILD_OFF_FAST		3355120	1					
ANR	3355142	Argument	CHILD_OFF_FAST		3355120	0					
ANR	3355143	Identifier	CHILD_OFF_FAST		3355120	0					
ANR	3355144	Statement	delete	95:8:2680:2685	3355120	1	True				
ANR	3355145	ExpressionStatement	m_masterDaemon	95:15:2687:2701	3355120	2	True				
ANR	3355146	Identifier	m_masterDaemon		3355120	0					
ANR	3355147	ExpressionStatement	m_masterDaemon = NULL	96:8:2711:2732	3355120	3	True				
ANR	3355148	AssignmentExpression	m_masterDaemon = NULL		3355120	0		=			
ANR	3355149	Identifier	m_masterDaemon		3355120	0					
ANR	3355150	Identifier	NULL		3355120	1					
ANR	3355151	ExpressionStatement	m_isPrimary = false	98:4:2744:2763	3355120	3	True				
ANR	3355152	AssignmentExpression	m_isPrimary = false		3355120	0		=			
ANR	3355153	Identifier	m_isPrimary		3355120	0					
ANR	3355154	Identifier	false		3355120	1					
ANR	3355155	ExpressionStatement	m_usePrimary = false	99:4:2769:2789	3355120	4	True				
ANR	3355156	AssignmentExpression	m_usePrimary = false		3355120	0		=			
ANR	3355157	Identifier	m_usePrimary		3355120	0					
ANR	3355158	Identifier	false		3355120	1					
ANR	3355159	ExpressionStatement	m_standAloneMode = false	100:4:2795:2819	3355120	5	True				
ANR	3355160	AssignmentExpression	m_standAloneMode = false		3355120	0		=			
ANR	3355161	Identifier	m_standAloneMode		3355120	0					
ANR	3355162	Identifier	false		3355120	1					
ANR	3355163	ExpressionStatement	m_callsCounter = 0	101:4:2825:2843	3355120	6	True				
ANR	3355164	AssignmentExpression	m_callsCounter = 0		3355120	0		=			
ANR	3355165	Identifier	m_callsCounter		3355120	0					
ANR	3355166	PrimaryExpression	0		3355120	1					
ANR	3355167	ExpressionStatement	m_hadInterval = - 1	102:1:2846:2864	3355120	7	True				
ANR	3355168	AssignmentExpression	m_hadInterval = - 1		3355120	0		=			
ANR	3355169	Identifier	m_hadInterval		3355120	0					
ANR	3355170	UnaryOperationExpression	- 1		3355120	1					
ANR	3355171	UnaryOperator	-		3355120	0					
ANR	3355172	PrimaryExpression	1		3355120	1					
ANR	3355173	ExpressionStatement	utilCancelTimer ( m_stateMachineTimerID )	103:4:2870:2910	3355120	8	True				
ANR	3355174	CallExpression	utilCancelTimer ( m_stateMachineTimerID )		3355120	0					
ANR	3355175	Callee	utilCancelTimer		3355120	0					
ANR	3355176	Identifier	utilCancelTimer		3355120	0					
ANR	3355177	ArgumentList	m_stateMachineTimerID		3355120	1					
ANR	3355178	Argument	m_stateMachineTimerID		3355120	0					
ANR	3355179	Identifier	m_stateMachineTimerID		3355120	0					
ANR	3355180	ExpressionStatement	m_selfId = - 1	105:4:2917:2930	3355120	9	True				
ANR	3355181	AssignmentExpression	m_selfId = - 1		3355120	0		=			
ANR	3355182	Identifier	m_selfId		3355120	0					
ANR	3355183	UnaryOperationExpression	- 1		3355120	1					
ANR	3355184	UnaryOperator	-		3355120	0					
ANR	3355185	PrimaryExpression	1		3355120	1					
ANR	3355186	ExpressionStatement	clearBuffers ( )	107:4:2937:2951	3355120	10	True				
ANR	3355187	CallExpression	clearBuffers ( )		3355120	0					
ANR	3355188	Callee	clearBuffers		3355120	0					
ANR	3355189	Identifier	clearBuffers		3355120	0					
ANR	3355190	ArgumentList			3355120	1					
ANR	3355191	ExpressionStatement	m_useReplication = false	110:4:2995:3019	3355120	11	True				
ANR	3355192	AssignmentExpression	m_useReplication = false		3355120	0		=			
ANR	3355193	Identifier	m_useReplication		3355120	0					
ANR	3355194	Identifier	false		3355120	1					
ANR	3355195	IfStatement	if ( m_replicationDaemonSinfulString != NULL )		3355120	12					
ANR	3355196	Condition	m_replicationDaemonSinfulString != NULL	112:5:3027:3065	3355120	0	True				
ANR	3355197	EqualityExpression	m_replicationDaemonSinfulString != NULL		3355120	0		!=			
ANR	3355198	Identifier	m_replicationDaemonSinfulString		3355120	0					
ANR	3355199	Identifier	NULL		3355120	1					
ANR	3355200	CompoundStatement		27:47:741:741	3355120	1					
ANR	3355201	ExpressionStatement	free ( m_replicationDaemonSinfulString )	113:2:3073:3110	3355120	0	True				
ANR	3355202	CallExpression	free ( m_replicationDaemonSinfulString )		3355120	0					
ANR	3355203	Callee	free		3355120	0					
ANR	3355204	Identifier	free		3355120	0					
ANR	3355205	ArgumentList	m_replicationDaemonSinfulString		3355120	1					
ANR	3355206	Argument	m_replicationDaemonSinfulString		3355120	0					
ANR	3355207	Identifier	m_replicationDaemonSinfulString		3355120	0					
ANR	3355208	ExpressionStatement	m_replicationDaemonSinfulString = NULL	114:2:3114:3152	3355120	1	True				
ANR	3355209	AssignmentExpression	m_replicationDaemonSinfulString = NULL		3355120	0		=			
ANR	3355210	Identifier	m_replicationDaemonSinfulString		3355120	0					
ANR	3355211	Identifier	NULL		3355120	1					
ANR	3355212	ExpressionStatement	utilCancelTimer ( m_updateCollectorTimerId )	118:1:3186:3229	3355120	13	True				
ANR	3355213	CallExpression	utilCancelTimer ( m_updateCollectorTimerId )		3355120	0					
ANR	3355214	Callee	utilCancelTimer		3355120	0					
ANR	3355215	Identifier	utilCancelTimer		3355120	0					
ANR	3355216	ArgumentList	m_updateCollectorTimerId		3355120	1					
ANR	3355217	Argument	m_updateCollectorTimerId		3355120	0					
ANR	3355218	Identifier	m_updateCollectorTimerId		3355120	0					
ANR	3355219	ExpressionStatement	m_updateCollectorInterval = - 1	119:4:3235:3265	3355120	14	True				
ANR	3355220	AssignmentExpression	m_updateCollectorInterval = - 1		3355120	0		=			
ANR	3355221	Identifier	m_updateCollectorInterval		3355120	0					
ANR	3355222	UnaryOperationExpression	- 1		3355120	1					
ANR	3355223	UnaryOperator	-		3355120	0					
ANR	3355224	PrimaryExpression	1		3355120	1					
ANR	3355225	ReturnType	void		3355120	1					
ANR	3355226	Identifier	HADStateMachine :: freeResources		3355120	2					
ANR	3355227	ParameterList			3355120	3					
ANR	3355228	CFGEntryNode	ENTRY		3355120		True				
ANR	3355229	CFGExitNode	EXIT		3355120		True				
ANR	3355230	Symbol	NULL		3355120						
ANR	3355231	Symbol	m_callsCounter		3355120						
ANR	3355232	Symbol	false		3355120						
ANR	3355233	Symbol	m_isPrimary		3355120						
ANR	3355234	Symbol	m_replicationDaemonSinfulString		3355120						
ANR	3355235	Symbol	m_stateMachineTimerID		3355120						
ANR	3355236	Symbol	m_state		3355120						
ANR	3355237	Symbol	m_usePrimary		3355120						
ANR	3355238	Symbol	m_standAloneMode		3355120						
ANR	3355239	Symbol	PRE_STATE		3355120						
ANR	3355240	Symbol	CHILD_OFF_FAST		3355120						
ANR	3355241	Symbol	m_hadInterval		3355120						
ANR	3355242	Symbol	m_selfId		3355120						
ANR	3355243	Symbol	m_updateCollectorInterval		3355120						
ANR	3355244	Symbol	m_useReplication		3355120						
ANR	3355245	Symbol	m_connectionTimeout		3355120						
ANR	3355246	Symbol	DEFAULT_SEND_COMMAND_TIMEOUT		3355120						
ANR	3355247	Symbol	m_masterDaemon		3355120						
ANR	3355248	Symbol	m_updateCollectorTimerId		3355120						
ANR	3355249	Function	HADStateMachine :: ~HADStateMachine	125:0:3347:3828							
ANR	3355250	FunctionDef	HADStateMachine :: ~HADStateMachine ()		3355249	0					
ANR	3355251	CompoundStatement		126:0:3387:3828	3355249	0					
ANR	3355252	IdentifierDeclStatement	ClassAd invalidate_ad ;	128:4:3394:3415	3355249	0	True				
ANR	3355253	IdentifierDecl	invalidate_ad		3355249	0					
ANR	3355254	IdentifierDeclType	ClassAd		3355249	0					
ANR	3355255	Identifier	invalidate_ad		3355249	1					
ANR	3355256	IdentifierDeclStatement	MyString line ;	129:4:3421:3434	3355249	1	True				
ANR	3355257	IdentifierDecl	line		3355249	0					
ANR	3355258	IdentifierDeclType	MyString		3355249	0					
ANR	3355259	Identifier	line		3355249	1					
ANR	3355260	ExpressionStatement	freeResources ( )	131:4:3441:3456	3355249	2	True				
ANR	3355261	CallExpression	freeResources ( )		3355249	0					
ANR	3355262	Callee	freeResources		3355249	0					
ANR	3355263	Identifier	freeResources		3355249	0					
ANR	3355264	ArgumentList			3355249	1					
ANR	3355265	ExpressionStatement	invalidate_ad . SetMyTypeName ( QUERY_ADTYPE )	133:4:3463:3506	3355249	3	True				
ANR	3355266	CallExpression	invalidate_ad . SetMyTypeName ( QUERY_ADTYPE )		3355249	0					
ANR	3355267	Callee	invalidate_ad . SetMyTypeName		3355249	0					
ANR	3355268	MemberAccess	invalidate_ad . SetMyTypeName		3355249	0					
ANR	3355269	Identifier	invalidate_ad		3355249	0					
ANR	3355270	Identifier	SetMyTypeName		3355249	1					
ANR	3355271	ArgumentList	QUERY_ADTYPE		3355249	1					
ANR	3355272	Argument	QUERY_ADTYPE		3355249	0					
ANR	3355273	Identifier	QUERY_ADTYPE		3355249	0					
ANR	3355274	ExpressionStatement	invalidate_ad . SetTargetTypeName ( HAD_ADTYPE )	134:4:3512:3557	3355249	4	True				
ANR	3355275	CallExpression	invalidate_ad . SetTargetTypeName ( HAD_ADTYPE )		3355249	0					
ANR	3355276	Callee	invalidate_ad . SetTargetTypeName		3355249	0					
ANR	3355277	MemberAccess	invalidate_ad . SetTargetTypeName		3355249	0					
ANR	3355278	Identifier	invalidate_ad		3355249	0					
ANR	3355279	Identifier	SetTargetTypeName		3355249	1					
ANR	3355280	ArgumentList	HAD_ADTYPE		3355249	1					
ANR	3355281	Argument	HAD_ADTYPE		3355249	0					
ANR	3355282	Identifier	HAD_ADTYPE		3355249	0					
ANR	3355283	ExpressionStatement	"line . sprintf ( ""TARGET.%s == \\""%s\\"""" , ATTR_NAME , m_name . Value ( ) )"	135:4:3563:3628	3355249	5	True				
ANR	3355284	CallExpression	"line . sprintf ( ""TARGET.%s == \\""%s\\"""" , ATTR_NAME , m_name . Value ( ) )"		3355249	0					
ANR	3355285	Callee	line . sprintf		3355249	0					
ANR	3355286	MemberAccess	line . sprintf		3355249	0					
ANR	3355287	Identifier	line		3355249	0					
ANR	3355288	Identifier	sprintf		3355249	1					
ANR	3355289	ArgumentList	"""TARGET.%s == \\""%s\\"""""		3355249	1					
ANR	3355290	Argument	"""TARGET.%s == \\""%s\\"""""		3355249	0					
ANR	3355291	PrimaryExpression	"""TARGET.%s == \\""%s\\"""""		3355249	0					
ANR	3355292	Argument	ATTR_NAME		3355249	1					
ANR	3355293	Identifier	ATTR_NAME		3355249	0					
ANR	3355294	Argument	m_name . Value ( )		3355249	2					
ANR	3355295	CallExpression	m_name . Value ( )		3355249	0					
ANR	3355296	Callee	m_name . Value		3355249	0					
ANR	3355297	MemberAccess	m_name . Value		3355249	0					
ANR	3355298	Identifier	m_name		3355249	0					
ANR	3355299	Identifier	Value		3355249	1					
ANR	3355300	ArgumentList			3355249	1					
ANR	3355301	ExpressionStatement	"invalidate_ad . AssignExpr ( ATTR_REQUIREMENTS , line . Value ( ) )"	136:4:3634:3694	3355249	6	True				
ANR	3355302	CallExpression	"invalidate_ad . AssignExpr ( ATTR_REQUIREMENTS , line . Value ( ) )"		3355249	0					
ANR	3355303	Callee	invalidate_ad . AssignExpr		3355249	0					
ANR	3355304	MemberAccess	invalidate_ad . AssignExpr		3355249	0					
ANR	3355305	Identifier	invalidate_ad		3355249	0					
ANR	3355306	Identifier	AssignExpr		3355249	1					
ANR	3355307	ArgumentList	ATTR_REQUIREMENTS		3355249	1					
ANR	3355308	Argument	ATTR_REQUIREMENTS		3355249	0					
ANR	3355309	Identifier	ATTR_REQUIREMENTS		3355249	0					
ANR	3355310	Argument	line . Value ( )		3355249	1					
ANR	3355311	CallExpression	line . Value ( )		3355249	0					
ANR	3355312	Callee	line . Value		3355249	0					
ANR	3355313	MemberAccess	line . Value		3355249	0					
ANR	3355314	Identifier	line		3355249	0					
ANR	3355315	Identifier	Value		3355249	1					
ANR	3355316	ArgumentList			3355249	1					
ANR	3355317	ExpressionStatement	"invalidate_ad . Assign ( ATTR_NAME , m_name . Value ( ) )"	137:1:3697:3746	3355249	7	True				
ANR	3355318	CallExpression	"invalidate_ad . Assign ( ATTR_NAME , m_name . Value ( ) )"		3355249	0					
ANR	3355319	Callee	invalidate_ad . Assign		3355249	0					
ANR	3355320	MemberAccess	invalidate_ad . Assign		3355249	0					
ANR	3355321	Identifier	invalidate_ad		3355249	0					
ANR	3355322	Identifier	Assign		3355249	1					
ANR	3355323	ArgumentList	ATTR_NAME		3355249	1					
ANR	3355324	Argument	ATTR_NAME		3355249	0					
ANR	3355325	Identifier	ATTR_NAME		3355249	0					
ANR	3355326	Argument	m_name . Value ( )		3355249	1					
ANR	3355327	CallExpression	m_name . Value ( )		3355249	0					
ANR	3355328	Callee	m_name . Value		3355249	0					
ANR	3355329	MemberAccess	m_name . Value		3355249	0					
ANR	3355330	Identifier	m_name		3355249	0					
ANR	3355331	Identifier	Value		3355249	1					
ANR	3355332	ArgumentList			3355249	1					
ANR	3355333	ExpressionStatement	"daemonCore -> sendUpdates ( INVALIDATE_HAD_ADS , & invalidate_ad , NULL , false )"	138:4:3752:3826	3355249	8	True				
ANR	3355334	CallExpression	"daemonCore -> sendUpdates ( INVALIDATE_HAD_ADS , & invalidate_ad , NULL , false )"		3355249	0					
ANR	3355335	Callee	daemonCore -> sendUpdates		3355249	0					
ANR	3355336	PtrMemberAccess	daemonCore -> sendUpdates		3355249	0					
ANR	3355337	Identifier	daemonCore		3355249	0					
ANR	3355338	Identifier	sendUpdates		3355249	1					
ANR	3355339	ArgumentList	INVALIDATE_HAD_ADS		3355249	1					
ANR	3355340	Argument	INVALIDATE_HAD_ADS		3355249	0					
ANR	3355341	Identifier	INVALIDATE_HAD_ADS		3355249	0					
ANR	3355342	Argument	& invalidate_ad		3355249	1					
ANR	3355343	UnaryOperationExpression	& invalidate_ad		3355249	0					
ANR	3355344	UnaryOperator	&		3355249	0					
ANR	3355345	Identifier	invalidate_ad		3355249	1					
ANR	3355346	Argument	NULL		3355249	2					
ANR	3355347	Identifier	NULL		3355249	0					
ANR	3355348	Argument	false		3355249	3					
ANR	3355349	Identifier	false		3355249	0					
ANR	3355350	Identifier	HADStateMachine :: ~HADStateMachine		3355249	1					
ANR	3355351	ParameterList			3355249	2					
ANR	3355352	CFGEntryNode	ENTRY		3355249		True				
ANR	3355353	CFGExitNode	EXIT		3355249		True				
ANR	3355354	Symbol	INVALIDATE_HAD_ADS		3355249						
ANR	3355355	Symbol	ATTR_NAME		3355249						
ANR	3355356	Symbol	NULL		3355249						
ANR	3355357	Symbol	m_name . Value		3355249						
ANR	3355358	Symbol	line . Value		3355249						
ANR	3355359	Symbol	line		3355249						
ANR	3355360	Symbol	ATTR_REQUIREMENTS		3355249						
ANR	3355361	Symbol	false		3355249						
ANR	3355362	Symbol	HAD_ADTYPE		3355249						
ANR	3355363	Symbol	& invalidate_ad		3355249						
ANR	3355364	Symbol	QUERY_ADTYPE		3355249						
ANR	3355365	Symbol	m_name		3355249						
ANR	3355366	Symbol	invalidate_ad		3355249						
ANR	3355367	Symbol	daemonCore		3355249						
ANR	3355368	Function	HADStateMachine :: isHardConfigurationNeeded	142:0:3832:5102							
ANR	3355369	FunctionDef	HADStateMachine :: isHardConfigurationNeeded ()		3355368	0					
ANR	3355370	CompoundStatement		144:0:3886:5102	3355368	0					
ANR	3355371	IdentifierDeclStatement	char * tmp = NULL ;	145:1:3889:3911	3355368	0	True				
ANR	3355372	IdentifierDecl	* tmp = NULL		3355368	0					
ANR	3355373	IdentifierDeclType	char *		3355368	0					
ANR	3355374	Identifier	tmp		3355368	1					
ANR	3355375	AssignmentExpression	* tmp = NULL		3355368	2		=			
ANR	3355376	Identifier	NULL		3355368	0					
ANR	3355377	Identifier	NULL		3355368	1					
ANR	3355378	IdentifierDeclStatement	char controllee [ 128 ] ;	146:1:3914:3936	3355368	1	True				
ANR	3355379	IdentifierDecl	controllee [ 128 ]		3355368	0					
ANR	3355380	IdentifierDeclType	char [ 128 ]		3355368	0					
ANR	3355381	Identifier	controllee		3355368	1					
ANR	3355382	PrimaryExpression	128		3355368	2					
ANR	3355383	IdentifierDeclStatement	int selfId = - 1 ;	147:1:3939:3960	3355368	2	True				
ANR	3355384	IdentifierDecl	selfId = - 1		3355368	0					
ANR	3355385	IdentifierDeclType	int		3355368	0					
ANR	3355386	Identifier	selfId		3355368	1					
ANR	3355387	AssignmentExpression	selfId = - 1		3355368	2		=			
ANR	3355388	Identifier	selfId		3355368	0					
ANR	3355389	UnaryOperationExpression	- 1		3355368	1					
ANR	3355390	UnaryOperator	-		3355368	0					
ANR	3355391	PrimaryExpression	1		3355368	1					
ANR	3355392	IdentifierDeclStatement	StringList allHadIps ;	148:1:3963:3984	3355368	3	True				
ANR	3355393	IdentifierDecl	allHadIps		3355368	0					
ANR	3355394	IdentifierDeclType	StringList		3355368	0					
ANR	3355395	Identifier	allHadIps		3355368	1					
ANR	3355396	ExpressionStatement	"tmp = param ( ""HAD_CONTROLLEE"" )"	150:1:3988:4019	3355368	4	True				
ANR	3355397	AssignmentExpression	"tmp = param ( ""HAD_CONTROLLEE"" )"		3355368	0		=			
ANR	3355398	Identifier	tmp		3355368	0					
ANR	3355399	CallExpression	"param ( ""HAD_CONTROLLEE"" )"		3355368	1					
ANR	3355400	Callee	param		3355368	0					
ANR	3355401	Identifier	param		3355368	0					
ANR	3355402	ArgumentList	"""HAD_CONTROLLEE"""		3355368	1					
ANR	3355403	Argument	"""HAD_CONTROLLEE"""		3355368	0					
ANR	3355404	PrimaryExpression	"""HAD_CONTROLLEE"""		3355368	0					
ANR	3355405	IfStatement	if ( tmp )		3355368	5					
ANR	3355406	Condition	tmp	151:6:4027:4029	3355368	0	True				
ANR	3355407	Identifier	tmp		3355368	0					
ANR	3355408	CompoundStatement		8:12:146:146	3355368	1					
ANR	3355409	ExpressionStatement	"strncpy ( controllee , tmp , sizeof ( controllee ) - 1 )"	152:2:4037:4087	3355368	0	True				
ANR	3355410	CallExpression	"strncpy ( controllee , tmp , sizeof ( controllee ) - 1 )"		3355368	0					
ANR	3355411	Callee	strncpy		3355368	0					
ANR	3355412	Identifier	strncpy		3355368	0					
ANR	3355413	ArgumentList	controllee		3355368	1					
ANR	3355414	Argument	controllee		3355368	0					
ANR	3355415	Identifier	controllee		3355368	0					
ANR	3355416	Argument	tmp		3355368	1					
ANR	3355417	Identifier	tmp		3355368	0					
ANR	3355418	Argument	sizeof ( controllee ) - 1		3355368	2					
ANR	3355419	AdditiveExpression	sizeof ( controllee ) - 1		3355368	0		-			
ANR	3355420	SizeofExpression	sizeof ( controllee )		3355368	0					
ANR	3355421	Sizeof	sizeof		3355368	0					
ANR	3355422	SizeofOperand	controllee		3355368	1					
ANR	3355423	PrimaryExpression	1		3355368	1					
ANR	3355424	ExpressionStatement	free ( tmp )	153:8:4097:4108	3355368	1	True				
ANR	3355425	CallExpression	free ( tmp )		3355368	0					
ANR	3355426	Callee	free		3355368	0					
ANR	3355427	Identifier	free		3355368	0					
ANR	3355428	ArgumentList	tmp		3355368	1					
ANR	3355429	Argument	tmp		3355368	0					
ANR	3355430	Identifier	tmp		3355368	0					
ANR	3355431	ElseStatement	else		3355368	0					
ANR	3355432	CompoundStatement		12:6:232:232	3355368	0					
ANR	3355433	ExpressionStatement	"strncpy ( controllee , daemonString ( DT_NEGOTIATOR ) , sizeof ( controllee ) - 1 )"	156:2:4123:4197	3355368	0	True				
ANR	3355434	CallExpression	"strncpy ( controllee , daemonString ( DT_NEGOTIATOR ) , sizeof ( controllee ) - 1 )"		3355368	0					
ANR	3355435	Callee	strncpy		3355368	0					
ANR	3355436	Identifier	strncpy		3355368	0					
ANR	3355437	ArgumentList	controllee		3355368	1					
ANR	3355438	Argument	controllee		3355368	0					
ANR	3355439	Identifier	controllee		3355368	0					
ANR	3355440	Argument	daemonString ( DT_NEGOTIATOR )		3355368	1					
ANR	3355441	CallExpression	daemonString ( DT_NEGOTIATOR )		3355368	0					
ANR	3355442	Callee	daemonString		3355368	0					
ANR	3355443	Identifier	daemonString		3355368	0					
ANR	3355444	ArgumentList	DT_NEGOTIATOR		3355368	1					
ANR	3355445	Argument	DT_NEGOTIATOR		3355368	0					
ANR	3355446	Identifier	DT_NEGOTIATOR		3355368	0					
ANR	3355447	Argument	sizeof ( controllee ) - 1		3355368	2					
ANR	3355448	AdditiveExpression	sizeof ( controllee ) - 1		3355368	0		-			
ANR	3355449	SizeofExpression	sizeof ( controllee )		3355368	0					
ANR	3355450	Sizeof	sizeof		3355368	0					
ANR	3355451	SizeofOperand	controllee		3355368	1					
ANR	3355452	PrimaryExpression	1		3355368	1					
ANR	3355453	IfStatement	"if ( strcasecmp ( controllee , m_controlleeName ) )"		3355368	6					
ANR	3355454	Condition	"strcasecmp ( controllee , m_controlleeName )"	158:6:4208:4247	3355368	0	True				
ANR	3355455	CallExpression	"strcasecmp ( controllee , m_controlleeName )"		3355368	0					
ANR	3355456	Callee	strcasecmp		3355368	0					
ANR	3355457	Identifier	strcasecmp		3355368	0					
ANR	3355458	ArgumentList	controllee		3355368	1					
ANR	3355459	Argument	controllee		3355368	0					
ANR	3355460	Identifier	controllee		3355368	0					
ANR	3355461	Argument	m_controlleeName		3355368	1					
ANR	3355462	Identifier	m_controlleeName		3355368	0					
ANR	3355463	CompoundStatement		15:49:364:364	3355368	1					
ANR	3355464	ReturnStatement	return true ;	159:2:4255:4266	3355368	0	True				
ANR	3355465	Identifier	true		3355368	0					
ANR	3355466	IfStatement	"if ( param_boolean ( ""HAD_USE_PRIMARY"" , false ) != m_usePrimary )"		3355368	7					
ANR	3355467	Condition	"param_boolean ( ""HAD_USE_PRIMARY"" , false ) != m_usePrimary"	162:6:4278:4332	3355368	0	True				
ANR	3355468	EqualityExpression	"param_boolean ( ""HAD_USE_PRIMARY"" , false ) != m_usePrimary"		3355368	0		!=			
ANR	3355469	CallExpression	"param_boolean ( ""HAD_USE_PRIMARY"" , false )"		3355368	0					
ANR	3355470	Callee	param_boolean		3355368	0					
ANR	3355471	Identifier	param_boolean		3355368	0					
ANR	3355472	ArgumentList	"""HAD_USE_PRIMARY"""		3355368	1					
ANR	3355473	Argument	"""HAD_USE_PRIMARY"""		3355368	0					
ANR	3355474	PrimaryExpression	"""HAD_USE_PRIMARY"""		3355368	0					
ANR	3355475	Argument	false		3355368	1					
ANR	3355476	Identifier	false		3355368	0					
ANR	3355477	Identifier	m_usePrimary		3355368	1					
ANR	3355478	CompoundStatement		19:64:449:449	3355368	1					
ANR	3355479	ReturnStatement	return true ;	163:2:4340:4351	3355368	0	True				
ANR	3355480	Identifier	true		3355368	0					
ANR	3355481	ExpressionStatement	"tmp = param ( ""HAD_LIST"" )"	166:4:4361:4386	3355368	8	True				
ANR	3355482	AssignmentExpression	"tmp = param ( ""HAD_LIST"" )"		3355368	0		=			
ANR	3355483	Identifier	tmp		3355368	0					
ANR	3355484	CallExpression	"param ( ""HAD_LIST"" )"		3355368	1					
ANR	3355485	Callee	param		3355368	0					
ANR	3355486	Identifier	param		3355368	0					
ANR	3355487	ArgumentList	"""HAD_LIST"""		3355368	1					
ANR	3355488	Argument	"""HAD_LIST"""		3355368	0					
ANR	3355489	PrimaryExpression	"""HAD_LIST"""		3355368	0					
ANR	3355490	IfStatement	if ( tmp )		3355368	9					
ANR	3355491	Condition	tmp	167:9:4397:4399	3355368	0	True				
ANR	3355492	Identifier	tmp		3355368	0					
ANR	3355493	CompoundStatement		25:2:520:542	3355368	1					
ANR	3355494	IdentifierDeclStatement	StringList otherHadIps ;	168:2:4407:4429	3355368	0	True				
ANR	3355495	IdentifierDecl	otherHadIps		3355368	0					
ANR	3355496	IdentifierDeclType	StringList		3355368	0					
ANR	3355497	Identifier	otherHadIps		3355368	1					
ANR	3355498	ExpressionStatement	"getHadList ( tmp , m_usePrimary , otherHadIps , allHadIps , selfId )"	171:2:4571:4634	3355368	1	True				
ANR	3355499	CallExpression	"getHadList ( tmp , m_usePrimary , otherHadIps , allHadIps , selfId )"		3355368	0					
ANR	3355500	Callee	getHadList		3355368	0					
ANR	3355501	Identifier	getHadList		3355368	0					
ANR	3355502	ArgumentList	tmp		3355368	1					
ANR	3355503	Argument	tmp		3355368	0					
ANR	3355504	Identifier	tmp		3355368	0					
ANR	3355505	Argument	m_usePrimary		3355368	1					
ANR	3355506	Identifier	m_usePrimary		3355368	0					
ANR	3355507	Argument	otherHadIps		3355368	2					
ANR	3355508	Identifier	otherHadIps		3355368	0					
ANR	3355509	Argument	allHadIps		3355368	3					
ANR	3355510	Identifier	allHadIps		3355368	0					
ANR	3355511	Argument	selfId		3355368	4					
ANR	3355512	Identifier	selfId		3355368	0					
ANR	3355513	ExpressionStatement	free ( tmp )	172:8:4644:4655	3355368	2	True				
ANR	3355514	CallExpression	free ( tmp )		3355368	0					
ANR	3355515	Callee	free		3355368	0					
ANR	3355516	Identifier	free		3355368	0					
ANR	3355517	ArgumentList	tmp		3355368	1					
ANR	3355518	Argument	tmp		3355368	0					
ANR	3355519	Identifier	tmp		3355368	0					
ANR	3355520	ElseStatement	else		3355368	0					
ANR	3355521	CompoundStatement		30:11:781:781	3355368	0					
ANR	3355522	ExpressionStatement	"utilCrucialError ( utilNoParameterError ( ""HAD_LIST"" , ""HAD"" ) . Value ( ) )"	174:2:4672:4741	3355368	0	True				
ANR	3355523	CallExpression	"utilCrucialError ( utilNoParameterError ( ""HAD_LIST"" , ""HAD"" ) . Value ( ) )"		3355368	0					
ANR	3355524	Callee	utilCrucialError		3355368	0					
ANR	3355525	Identifier	utilCrucialError		3355368	0					
ANR	3355526	ArgumentList	"utilNoParameterError ( ""HAD_LIST"" , ""HAD"" ) . Value ( )"		3355368	1					
ANR	3355527	Argument	"utilNoParameterError ( ""HAD_LIST"" , ""HAD"" ) . Value ( )"		3355368	0					
ANR	3355528	CallExpression	"utilNoParameterError ( ""HAD_LIST"" , ""HAD"" ) . Value ( )"		3355368	0					
ANR	3355529	Callee	"utilNoParameterError ( ""HAD_LIST"" , ""HAD"" ) . Value"		3355368	0					
ANR	3355530	MemberAccess	"utilNoParameterError ( ""HAD_LIST"" , ""HAD"" ) . Value"		3355368	0					
ANR	3355531	CallExpression	"utilNoParameterError ( ""HAD_LIST"" , ""HAD"" )"		3355368	0					
ANR	3355532	Callee	utilNoParameterError		3355368	0					
ANR	3355533	Identifier	utilNoParameterError		3355368	0					
ANR	3355534	ArgumentList	"""HAD_LIST"""		3355368	1					
ANR	3355535	Argument	"""HAD_LIST"""		3355368	0					
ANR	3355536	PrimaryExpression	"""HAD_LIST"""		3355368	0					
ANR	3355537	Argument	"""HAD"""		3355368	1					
ANR	3355538	PrimaryExpression	"""HAD"""		3355368	0					
ANR	3355539	Identifier	Value		3355368	1					
ANR	3355540	ArgumentList			3355368	1					
ANR	3355541	IfStatement	if ( ( m_selfId != selfId ) || ( ! m_allHadIps . identical ( m_allHadIps ) ) )		3355368	10					
ANR	3355542	Condition	( m_selfId != selfId ) || ( ! m_allHadIps . identical ( m_allHadIps ) )	180:6:4975:5060	3355368	0	True				
ANR	3355543	OrExpression	( m_selfId != selfId ) || ( ! m_allHadIps . identical ( m_allHadIps ) )		3355368	0		||			
ANR	3355544	EqualityExpression	m_selfId != selfId		3355368	0		!=			
ANR	3355545	Identifier	m_selfId		3355368	0					
ANR	3355546	Identifier	selfId		3355368	1					
ANR	3355547	UnaryOperationExpression	! m_allHadIps . identical ( m_allHadIps )		3355368	1					
ANR	3355548	UnaryOperator	!		3355368	0					
ANR	3355549	CallExpression	m_allHadIps . identical ( m_allHadIps )		3355368	1					
ANR	3355550	Callee	m_allHadIps . identical		3355368	0					
ANR	3355551	MemberAccess	m_allHadIps . identical		3355368	0					
ANR	3355552	Identifier	m_allHadIps		3355368	0					
ANR	3355553	Identifier	identical		3355368	1					
ANR	3355554	ArgumentList	m_allHadIps		3355368	1					
ANR	3355555	Argument	m_allHadIps		3355368	0					
ANR	3355556	Identifier	m_allHadIps		3355368	0					
ANR	3355557	CompoundStatement		38:47:1179:1179	3355368	1					
ANR	3355558	ReturnStatement	return true ;	182:2:5070:5081	3355368	0	True				
ANR	3355559	Identifier	true		3355368	0					
ANR	3355560	ReturnStatement	return false ;	185:1:5088:5100	3355368	11	True				
ANR	3355561	Identifier	false		3355368	0					
ANR	3355562	ReturnType	bool		3355368	1					
ANR	3355563	Identifier	HADStateMachine :: isHardConfigurationNeeded		3355368	2					
ANR	3355564	ParameterList			3355368	3					
ANR	3355565	CFGEntryNode	ENTRY		3355368		True				
ANR	3355566	CFGExitNode	EXIT		3355368		True				
ANR	3355567	Symbol	m_allHadIps		3355368						
ANR	3355568	Symbol	"utilNoParameterError ( ""HAD_LIST"" , ""HAD"" ) . Value"		3355368						
ANR	3355569	Symbol	NULL		3355368						
ANR	3355570	Symbol	m_allHadIps . identical		3355368						
ANR	3355571	Symbol	daemonString		3355368						
ANR	3355572	Symbol	utilNoParameterError		3355368						
ANR	3355573	Symbol	false		3355368						
ANR	3355574	Symbol	param_boolean		3355368						
ANR	3355575	Symbol	m_controlleeName		3355368						
ANR	3355576	Symbol	otherHadIps		3355368						
ANR	3355577	Symbol	controllee		3355368						
ANR	3355578	Symbol	m_usePrimary		3355368						
ANR	3355579	Symbol	allHadIps		3355368						
ANR	3355580	Symbol	param		3355368						
ANR	3355581	Symbol	tmp		3355368						
ANR	3355582	Symbol	m_selfId		3355368						
ANR	3355583	Symbol	selfId		3355368						
ANR	3355584	Symbol	true		3355368						
ANR	3355585	Symbol	DT_NEGOTIATOR		3355368						
ANR	3355586	Symbol	strcasecmp		3355368						
ANR	3355587	Function	HADStateMachine :: softReconfigure	188:0:5105:7142							
ANR	3355588	FunctionDef	HADStateMachine :: softReconfigure ()		3355587	0					
ANR	3355589	CompoundStatement		190:0:5148:7142	3355587	0					
ANR	3355590	ExpressionStatement	m_standAloneMode = false	192:1:5226:5259	3355587	0	True				
ANR	3355591	AssignmentExpression	m_standAloneMode = false		3355587	0		=			
ANR	3355592	Identifier	m_standAloneMode		3355587	0					
ANR	3355593	Identifier	false		3355587	1					
ANR	3355594	ExpressionStatement	m_connectionTimeout = DEFAULT_SEND_COMMAND_TIMEOUT	193:1:5262:5318	3355587	1	True				
ANR	3355595	AssignmentExpression	m_connectionTimeout = DEFAULT_SEND_COMMAND_TIMEOUT		3355587	0		=			
ANR	3355596	Identifier	m_connectionTimeout		3355587	0					
ANR	3355597	Identifier	DEFAULT_SEND_COMMAND_TIMEOUT		3355587	1					
ANR	3355598	ExpressionStatement	m_hadInterval = - 1	194:1:5321:5351	3355587	2	True				
ANR	3355599	AssignmentExpression	m_hadInterval = - 1		3355587	0		=			
ANR	3355600	Identifier	m_hadInterval		3355587	0					
ANR	3355601	UnaryOperationExpression	- 1		3355587	1					
ANR	3355602	UnaryOperator	-		3355587	0					
ANR	3355603	PrimaryExpression	1		3355587	1					
ANR	3355604	ExpressionStatement	m_useReplication = false	195:1:5354:5387	3355587	3	True				
ANR	3355605	AssignmentExpression	m_useReplication = false		3355587	0		=			
ANR	3355606	Identifier	m_useReplication		3355587	0					
ANR	3355607	Identifier	false		3355587	1					
ANR	3355608	ExpressionStatement	m_updateCollectorInterval = - 1	196:1:5390:5420	3355587	4	True				
ANR	3355609	AssignmentExpression	m_updateCollectorInterval = - 1		3355587	0		=			
ANR	3355610	Identifier	m_updateCollectorInterval		3355587	0					
ANR	3355611	UnaryOperationExpression	- 1		3355587	1					
ANR	3355612	UnaryOperator	-		3355587	0					
ANR	3355613	PrimaryExpression	1		3355587	1					
ANR	3355614	IfStatement	if ( m_replicationDaemonSinfulString != NULL )		3355587	5					
ANR	3355615	Condition	m_replicationDaemonSinfulString != NULL	198:5:5428:5466	3355587	0	True				
ANR	3355616	EqualityExpression	m_replicationDaemonSinfulString != NULL		3355587	0		!=			
ANR	3355617	Identifier	m_replicationDaemonSinfulString		3355587	0					
ANR	3355618	Identifier	NULL		3355587	1					
ANR	3355619	CompoundStatement		9:47:321:321	3355587	1					
ANR	3355620	ExpressionStatement	free ( m_replicationDaemonSinfulString )	199:2:5474:5513	3355587	0	True				
ANR	3355621	CallExpression	free ( m_replicationDaemonSinfulString )		3355587	0					
ANR	3355622	Callee	free		3355587	0					
ANR	3355623	Identifier	free		3355587	0					
ANR	3355624	ArgumentList	m_replicationDaemonSinfulString		3355587	1					
ANR	3355625	Argument	m_replicationDaemonSinfulString		3355587	0					
ANR	3355626	Identifier	m_replicationDaemonSinfulString		3355587	0					
ANR	3355627	ExpressionStatement	m_replicationDaemonSinfulString = NULL	200:2:5517:5555	3355587	1	True				
ANR	3355628	AssignmentExpression	m_replicationDaemonSinfulString = NULL		3355587	0		=			
ANR	3355629	Identifier	m_replicationDaemonSinfulString		3355587	0					
ANR	3355630	Identifier	NULL		3355587	1					
ANR	3355631	IdentifierDeclStatement	char * buffer = NULL ;	204:1:5582:5602	3355587	6	True				
ANR	3355632	IdentifierDecl	* buffer = NULL		3355587	0					
ANR	3355633	IdentifierDeclType	char *		3355587	0					
ANR	3355634	Identifier	buffer		3355587	1					
ANR	3355635	AssignmentExpression	* buffer = NULL		3355587	2		=			
ANR	3355636	Identifier	NULL		3355587	0					
ANR	3355637	Identifier	NULL		3355587	1					
ANR	3355638	IdentifierDeclStatement	const char * tmp ;	205:1:5605:5620	3355587	7	True				
ANR	3355639	IdentifierDecl	* tmp		3355587	0					
ANR	3355640	IdentifierDeclType	const char *		3355587	0					
ANR	3355641	Identifier	tmp		3355587	1					
ANR	3355642	ExpressionStatement	buffer = my_username ( )	208:8:5681:5703	3355587	8	True				
ANR	3355643	AssignmentExpression	buffer = my_username ( )		3355587	0		=			
ANR	3355644	Identifier	buffer		3355587	0					
ANR	3355645	CallExpression	my_username ( )		3355587	1					
ANR	3355646	Callee	my_username		3355587	0					
ANR	3355647	Identifier	my_username		3355587	0					
ANR	3355648	ArgumentList			3355587	1					
ANR	3355649	ExpressionStatement	"tmp = buffer ? buffer : ""UNKNOWN"""	209:8:5713:5746	3355587	9	True				
ANR	3355650	AssignmentExpression	"tmp = buffer ? buffer : ""UNKNOWN"""		3355587	0		=			
ANR	3355651	Identifier	tmp		3355587	0					
ANR	3355652	ConditionalExpression	"buffer ? buffer : ""UNKNOWN"""		3355587	1					
ANR	3355653	Condition	buffer		3355587	0					
ANR	3355654	Identifier	buffer		3355587	0					
ANR	3355655	Identifier	buffer		3355587	1					
ANR	3355656	PrimaryExpression	"""UNKNOWN"""		3355587	2					
ANR	3355657	ExpressionStatement	"m_name . sprintf ( ""%s@%s"" , tmp , my_full_hostname ( ) )"	210:8:5756:5807	3355587	10	True				
ANR	3355658	CallExpression	"m_name . sprintf ( ""%s@%s"" , tmp , my_full_hostname ( ) )"		3355587	0					
ANR	3355659	Callee	m_name . sprintf		3355587	0					
ANR	3355660	MemberAccess	m_name . sprintf		3355587	0					
ANR	3355661	Identifier	m_name		3355587	0					
ANR	3355662	Identifier	sprintf		3355587	1					
ANR	3355663	ArgumentList	"""%s@%s"""		3355587	1					
ANR	3355664	Argument	"""%s@%s"""		3355587	0					
ANR	3355665	PrimaryExpression	"""%s@%s"""		3355587	0					
ANR	3355666	Argument	tmp		3355587	1					
ANR	3355667	Identifier	tmp		3355587	0					
ANR	3355668	Argument	my_full_hostname ( )		3355587	2					
ANR	3355669	CallExpression	my_full_hostname ( )		3355587	0					
ANR	3355670	Callee	my_full_hostname		3355587	0					
ANR	3355671	Identifier	my_full_hostname		3355587	0					
ANR	3355672	ArgumentList			3355587	1					
ANR	3355673	IfStatement	if ( buffer )		3355587	11					
ANR	3355674	Condition	buffer	211:6:5815:5820	3355587	0	True				
ANR	3355675	Identifier	buffer		3355587	0					
ANR	3355676	CompoundStatement		22:15:675:675	3355587	1					
ANR	3355677	ExpressionStatement	free ( buffer )	212:2:5828:5842	3355587	0	True				
ANR	3355678	CallExpression	free ( buffer )		3355587	0					
ANR	3355679	Callee	free		3355587	0					
ANR	3355680	Identifier	free		3355587	0					
ANR	3355681	ArgumentList	buffer		3355587	1					
ANR	3355682	Argument	buffer		3355587	0					
ANR	3355683	Identifier	buffer		3355587	0					
ANR	3355684	ExpressionStatement	"buffer = param ( ""HAD_STAND_ALONE_DEBUG"" )"	215:1:5849:5890	3355587	12	True				
ANR	3355685	AssignmentExpression	"buffer = param ( ""HAD_STAND_ALONE_DEBUG"" )"		3355587	0		=			
ANR	3355686	Identifier	buffer		3355587	0					
ANR	3355687	CallExpression	"param ( ""HAD_STAND_ALONE_DEBUG"" )"		3355587	1					
ANR	3355688	Callee	param		3355587	0					
ANR	3355689	Identifier	param		3355587	0					
ANR	3355690	ArgumentList	"""HAD_STAND_ALONE_DEBUG"""		3355587	1					
ANR	3355691	Argument	"""HAD_STAND_ALONE_DEBUG"""		3355587	0					
ANR	3355692	PrimaryExpression	"""HAD_STAND_ALONE_DEBUG"""		3355587	0					
ANR	3355693	IfStatement	if ( buffer )		3355587	13					
ANR	3355694	Condition	buffer	217:8:5901:5906	3355587	0	True				
ANR	3355695	Identifier	buffer		3355587	0					
ANR	3355696	CompoundStatement		28:16:760:760	3355587	1					
ANR	3355697	ExpressionStatement	m_standAloneMode = false	220:2:6017:6041	3355587	0	True				
ANR	3355698	AssignmentExpression	m_standAloneMode = false		3355587	0		=			
ANR	3355699	Identifier	m_standAloneMode		3355587	0					
ANR	3355700	Identifier	false		3355587	1					
ANR	3355701	ExpressionStatement	free ( buffer )	222:8:6087:6101	3355587	1	True				
ANR	3355702	CallExpression	free ( buffer )		3355587	0					
ANR	3355703	Callee	free		3355587	0					
ANR	3355704	Identifier	free		3355587	0					
ANR	3355705	ArgumentList	buffer		3355587	1					
ANR	3355706	Argument	buffer		3355587	0					
ANR	3355707	Identifier	buffer		3355587	0					
ANR	3355708	ExpressionStatement	"m_connectionTimeout = param_integer ( ""HAD_CONNECTION_TIMEOUT"" , DEFAULT_SEND_COMMAND_TIMEOUT , 0 )"	225:1:6111:6225	3355587	14	True				
ANR	3355709	AssignmentExpression	"m_connectionTimeout = param_integer ( ""HAD_CONNECTION_TIMEOUT"" , DEFAULT_SEND_COMMAND_TIMEOUT , 0 )"		3355587	0		=			
ANR	3355710	Identifier	m_connectionTimeout		3355587	0					
ANR	3355711	CallExpression	"param_integer ( ""HAD_CONNECTION_TIMEOUT"" , DEFAULT_SEND_COMMAND_TIMEOUT , 0 )"		3355587	1					
ANR	3355712	Callee	param_integer		3355587	0					
ANR	3355713	Identifier	param_integer		3355587	0					
ANR	3355714	ArgumentList	"""HAD_CONNECTION_TIMEOUT"""		3355587	1					
ANR	3355715	Argument	"""HAD_CONNECTION_TIMEOUT"""		3355587	0					
ANR	3355716	PrimaryExpression	"""HAD_CONNECTION_TIMEOUT"""		3355587	0					
ANR	3355717	Argument	DEFAULT_SEND_COMMAND_TIMEOUT		3355587	1					
ANR	3355718	Identifier	DEFAULT_SEND_COMMAND_TIMEOUT		3355587	0					
ANR	3355719	Argument	0		3355587	2					
ANR	3355720	PrimaryExpression	0		3355587	0					
ANR	3355721	IdentifierDeclStatement	int safetyFactor = 1 ;	230:4:6276:6296	3355587	15	True				
ANR	3355722	IdentifierDecl	safetyFactor = 1		3355587	0					
ANR	3355723	IdentifierDeclType	int		3355587	0					
ANR	3355724	Identifier	safetyFactor		3355587	1					
ANR	3355725	AssignmentExpression	safetyFactor = 1		3355587	2		=			
ANR	3355726	Identifier	safetyFactor		3355587	0					
ANR	3355727	PrimaryExpression	1		3355587	1					
ANR	3355728	IdentifierDeclStatement	int timeoutNumber = 2 ;	235:4:6413:6434	3355587	16	True				
ANR	3355729	IdentifierDecl	timeoutNumber = 2		3355587	0					
ANR	3355730	IdentifierDeclType	int		3355587	0					
ANR	3355731	Identifier	timeoutNumber		3355587	1					
ANR	3355732	AssignmentExpression	timeoutNumber = 2		3355587	2		=			
ANR	3355733	Identifier	timeoutNumber		3355587	0					
ANR	3355734	PrimaryExpression	2		3355587	1					
ANR	3355735	IdentifierDeclStatement	int time_to_send_all = ( m_connectionTimeout * timeoutNumber ) ;	237:4:6441:6499	3355587	17	True				
ANR	3355736	IdentifierDecl	time_to_send_all = ( m_connectionTimeout * timeoutNumber )		3355587	0					
ANR	3355737	IdentifierDeclType	int		3355587	0					
ANR	3355738	Identifier	time_to_send_all		3355587	1					
ANR	3355739	AssignmentExpression	time_to_send_all = ( m_connectionTimeout * timeoutNumber )		3355587	2		=			
ANR	3355740	Identifier	time_to_send_all		3355587	0					
ANR	3355741	MultiplicativeExpression	m_connectionTimeout * timeoutNumber		3355587	1		*			
ANR	3355742	Identifier	m_connectionTimeout		3355587	0					
ANR	3355743	Identifier	timeoutNumber		3355587	1					
ANR	3355744	ExpressionStatement	time_to_send_all *= ( m_otherHadIps . number ( ) + 1 )	238:4:6505:6553	3355587	18	True				
ANR	3355745	AssignmentExpression	time_to_send_all *= ( m_otherHadIps . number ( ) + 1 )		3355587	0		*=			
ANR	3355746	Identifier	time_to_send_all		3355587	0					
ANR	3355747	AdditiveExpression	m_otherHadIps . number ( ) + 1		3355587	1		+			
ANR	3355748	CallExpression	m_otherHadIps . number ( )		3355587	0					
ANR	3355749	Callee	m_otherHadIps . number		3355587	0					
ANR	3355750	MemberAccess	m_otherHadIps . number		3355587	0					
ANR	3355751	Identifier	m_otherHadIps		3355587	0					
ANR	3355752	Identifier	number		3355587	1					
ANR	3355753	ArgumentList			3355587	1					
ANR	3355754	PrimaryExpression	1		3355587	1					
ANR	3355755	ExpressionStatement	m_hadInterval = ( time_to_send_all + safetyFactor ) * ( MESSAGES_PER_INTERVAL_FACTOR )	240:1:6578:6677	3355587	19	True				
ANR	3355756	AssignmentExpression	m_hadInterval = ( time_to_send_all + safetyFactor ) * ( MESSAGES_PER_INTERVAL_FACTOR )		3355587	0		=			
ANR	3355757	Identifier	m_hadInterval		3355587	0					
ANR	3355758	MultiplicativeExpression	( time_to_send_all + safetyFactor ) * ( MESSAGES_PER_INTERVAL_FACTOR )		3355587	1		*			
ANR	3355759	AdditiveExpression	time_to_send_all + safetyFactor		3355587	0		+			
ANR	3355760	Identifier	time_to_send_all		3355587	0					
ANR	3355761	Identifier	safetyFactor		3355587	1					
ANR	3355762	Identifier	MESSAGES_PER_INTERVAL_FACTOR		3355587	1					
ANR	3355763	ExpressionStatement	"m_useReplication = param_boolean ( ""HAD_USE_REPLICATION"" , m_useReplication )"	244:1:6730:6803	3355587	20	True				
ANR	3355764	AssignmentExpression	"m_useReplication = param_boolean ( ""HAD_USE_REPLICATION"" , m_useReplication )"		3355587	0		=			
ANR	3355765	Identifier	m_useReplication		3355587	0					
ANR	3355766	CallExpression	"param_boolean ( ""HAD_USE_REPLICATION"" , m_useReplication )"		3355587	1					
ANR	3355767	Callee	param_boolean		3355587	0					
ANR	3355768	Identifier	param_boolean		3355587	0					
ANR	3355769	ArgumentList	"""HAD_USE_REPLICATION"""		3355587	1					
ANR	3355770	Argument	"""HAD_USE_REPLICATION"""		3355587	0					
ANR	3355771	PrimaryExpression	"""HAD_USE_REPLICATION"""		3355587	0					
ANR	3355772	Argument	m_useReplication		3355587	1					
ANR	3355773	Identifier	m_useReplication		3355587	0					
ANR	3355774	ExpressionStatement	setReplicationDaemonSinfulString ( )	245:4:6809:6844	3355587	21	True				
ANR	3355775	CallExpression	setReplicationDaemonSinfulString ( )		3355587	0					
ANR	3355776	Callee	setReplicationDaemonSinfulString		3355587	0					
ANR	3355777	Identifier	setReplicationDaemonSinfulString		3355587	0					
ANR	3355778	ArgumentList			3355587	1					
ANR	3355779	ExpressionStatement	"dprintf ( D_ALWAYS , ""HADStateMachine::softReconfigure classad information\\n"" )"	247:1:6848:6926	3355587	22	True				
ANR	3355780	CallExpression	"dprintf ( D_ALWAYS , ""HADStateMachine::softReconfigure classad information\\n"" )"		3355587	0					
ANR	3355781	Callee	dprintf		3355587	0					
ANR	3355782	Identifier	dprintf		3355587	0					
ANR	3355783	ArgumentList	D_ALWAYS		3355587	1					
ANR	3355784	Argument	D_ALWAYS		3355587	0					
ANR	3355785	Identifier	D_ALWAYS		3355587	0					
ANR	3355786	Argument	"""HADStateMachine::softReconfigure classad information\\n"""		3355587	1					
ANR	3355787	PrimaryExpression	"""HADStateMachine::softReconfigure classad information\\n"""		3355587	0					
ANR	3355788	ExpressionStatement	initializeClassAd ( )	249:4:6932:6952	3355587	23	True				
ANR	3355789	CallExpression	initializeClassAd ( )		3355587	0					
ANR	3355790	Callee	initializeClassAd		3355587	0					
ANR	3355791	Identifier	initializeClassAd		3355587	0					
ANR	3355792	ArgumentList			3355587	1					
ANR	3355793	ExpressionStatement	"m_updateCollectorInterval = param_integer ( ""HAD_UPDATE_INTERVAL"" , DEFAULT_HAD_UPDATE_INTERVAL )"	250:4:6958:7098	3355587	24	True				
ANR	3355794	AssignmentExpression	"m_updateCollectorInterval = param_integer ( ""HAD_UPDATE_INTERVAL"" , DEFAULT_HAD_UPDATE_INTERVAL )"		3355587	0		=			
ANR	3355795	Identifier	m_updateCollectorInterval		3355587	0					
ANR	3355796	CallExpression	"param_integer ( ""HAD_UPDATE_INTERVAL"" , DEFAULT_HAD_UPDATE_INTERVAL )"		3355587	1					
ANR	3355797	Callee	param_integer		3355587	0					
ANR	3355798	Identifier	param_integer		3355587	0					
ANR	3355799	ArgumentList	"""HAD_UPDATE_INTERVAL"""		3355587	1					
ANR	3355800	Argument	"""HAD_UPDATE_INTERVAL"""		3355587	0					
ANR	3355801	PrimaryExpression	"""HAD_UPDATE_INTERVAL"""		3355587	0					
ANR	3355802	Argument	DEFAULT_HAD_UPDATE_INTERVAL		3355587	1					
ANR	3355803	Identifier	DEFAULT_HAD_UPDATE_INTERVAL		3355587	0					
ANR	3355804	ExpressionStatement	printParamsInformation ( )	252:1:7101:7125	3355587	25	True				
ANR	3355805	CallExpression	printParamsInformation ( )		3355587	0					
ANR	3355806	Callee	printParamsInformation		3355587	0					
ANR	3355807	Identifier	printParamsInformation		3355587	0					
ANR	3355808	ArgumentList			3355587	1					
ANR	3355809	ReturnStatement	return TRUE ;	254:1:7129:7140	3355587	26	True				
ANR	3355810	Identifier	TRUE		3355587	0					
ANR	3355811	ReturnType	int		3355587	1					
ANR	3355812	Identifier	HADStateMachine :: softReconfigure		3355587	2					
ANR	3355813	ParameterList			3355587	3					
ANR	3355814	CFGEntryNode	ENTRY		3355587		True				
ANR	3355815	CFGExitNode	EXIT		3355587		True				
ANR	3355816	Symbol	DEFAULT_HAD_UPDATE_INTERVAL		3355587						
ANR	3355817	Symbol	safetyFactor		3355587						
ANR	3355818	Symbol	m_otherHadIps		3355587						
ANR	3355819	Symbol	m_replicationDaemonSinfulString		3355587						
ANR	3355820	Symbol	my_full_hostname		3355587						
ANR	3355821	Symbol	m_standAloneMode		3355587						
ANR	3355822	Symbol	param		3355587						
ANR	3355823	Symbol	m_hadInterval		3355587						
ANR	3355824	Symbol	tmp		3355587						
ANR	3355825	Symbol	MESSAGES_PER_INTERVAL_FACTOR		3355587						
ANR	3355826	Symbol	buffer		3355587						
ANR	3355827	Symbol	time_to_send_all		3355587						
ANR	3355828	Symbol	NULL		3355587						
ANR	3355829	Symbol	false		3355587						
ANR	3355830	Symbol	D_ALWAYS		3355587						
ANR	3355831	Symbol	TRUE		3355587						
ANR	3355832	Symbol	param_boolean		3355587						
ANR	3355833	Symbol	m_otherHadIps . number		3355587						
ANR	3355834	Symbol	my_username		3355587						
ANR	3355835	Symbol	timeoutNumber		3355587						
ANR	3355836	Symbol	m_name		3355587						
ANR	3355837	Symbol	m_updateCollectorInterval		3355587						
ANR	3355838	Symbol	param_integer		3355587						
ANR	3355839	Symbol	m_useReplication		3355587						
ANR	3355840	Symbol	m_connectionTimeout		3355587						
ANR	3355841	Symbol	DEFAULT_SEND_COMMAND_TIMEOUT		3355587						
ANR	3355842	Function	HADStateMachine :: initialize	260:0:7222:7639							
ANR	3355843	FunctionDef	HADStateMachine :: initialize ()		3355842	0					
ANR	3355844	CompoundStatement		262:0:7261:7639	3355842	0					
ANR	3355845	ExpressionStatement	reinitialize ( )	263:4:7267:7282	3355842	0	True				
ANR	3355846	CallExpression	reinitialize ( )		3355842	0					
ANR	3355847	Callee	reinitialize		3355842	0					
ANR	3355848	Identifier	reinitialize		3355842	0					
ANR	3355849	ArgumentList			3355842	1					
ANR	3355850	ExpressionStatement	"daemonCore -> Register_Command ( HAD_ALIVE_CMD , ""ALIVE command"" , ( CommandHandlercpp ) & HADStateMachine :: commandHandlerHad , ""commandHandler"" , ( Service * ) this , DAEMON )"	264:4:7288:7457	3355842	1	True				
ANR	3355851	CallExpression	"daemonCore -> Register_Command ( HAD_ALIVE_CMD , ""ALIVE command"" , ( CommandHandlercpp ) & HADStateMachine :: commandHandlerHad , ""commandHandler"" , ( Service * ) this , DAEMON )"		3355842	0					
ANR	3355852	Callee	daemonCore -> Register_Command		3355842	0					
ANR	3355853	PtrMemberAccess	daemonCore -> Register_Command		3355842	0					
ANR	3355854	Identifier	daemonCore		3355842	0					
ANR	3355855	Identifier	Register_Command		3355842	1					
ANR	3355856	ArgumentList	HAD_ALIVE_CMD		3355842	1					
ANR	3355857	Argument	HAD_ALIVE_CMD		3355842	0					
ANR	3355858	Identifier	HAD_ALIVE_CMD		3355842	0					
ANR	3355859	Argument	"""ALIVE command"""		3355842	1					
ANR	3355860	PrimaryExpression	"""ALIVE command"""		3355842	0					
ANR	3355861	Argument	( CommandHandlercpp ) & HADStateMachine :: commandHandlerHad		3355842	2					
ANR	3355862	CastExpression	( CommandHandlercpp ) & HADStateMachine :: commandHandlerHad		3355842	0					
ANR	3355863	CastTarget	CommandHandlercpp		3355842	0					
ANR	3355864	UnaryOperationExpression	& HADStateMachine :: commandHandlerHad		3355842	1					
ANR	3355865	UnaryOperator	&		3355842	0					
ANR	3355866	Identifier	HADStateMachine :: commandHandlerHad		3355842	1					
ANR	3355867	Argument	"""commandHandler"""		3355842	3					
ANR	3355868	PrimaryExpression	"""commandHandler"""		3355842	0					
ANR	3355869	Argument	( Service * ) this		3355842	4					
ANR	3355870	CastExpression	( Service * ) this		3355842	0					
ANR	3355871	CastTarget	Service *		3355842	0					
ANR	3355872	Identifier	this		3355842	1					
ANR	3355873	Argument	DAEMON		3355842	5					
ANR	3355874	Identifier	DAEMON		3355842	0					
ANR	3355875	ExpressionStatement	"daemonCore -> Register_Command ( HAD_SEND_ID_CMD , ""SEND ID command"" , ( CommandHandlercpp ) & HADStateMachine :: commandHandlerHad , ""commandHandler"" , ( Service * ) this , DAEMON )"	269:4:7464:7637	3355842	2	True				
ANR	3355876	CallExpression	"daemonCore -> Register_Command ( HAD_SEND_ID_CMD , ""SEND ID command"" , ( CommandHandlercpp ) & HADStateMachine :: commandHandlerHad , ""commandHandler"" , ( Service * ) this , DAEMON )"		3355842	0					
ANR	3355877	Callee	daemonCore -> Register_Command		3355842	0					
ANR	3355878	PtrMemberAccess	daemonCore -> Register_Command		3355842	0					
ANR	3355879	Identifier	daemonCore		3355842	0					
ANR	3355880	Identifier	Register_Command		3355842	1					
ANR	3355881	ArgumentList	HAD_SEND_ID_CMD		3355842	1					
ANR	3355882	Argument	HAD_SEND_ID_CMD		3355842	0					
ANR	3355883	Identifier	HAD_SEND_ID_CMD		3355842	0					
ANR	3355884	Argument	"""SEND ID command"""		3355842	1					
ANR	3355885	PrimaryExpression	"""SEND ID command"""		3355842	0					
ANR	3355886	Argument	( CommandHandlercpp ) & HADStateMachine :: commandHandlerHad		3355842	2					
ANR	3355887	CastExpression	( CommandHandlercpp ) & HADStateMachine :: commandHandlerHad		3355842	0					
ANR	3355888	CastTarget	CommandHandlercpp		3355842	0					
ANR	3355889	UnaryOperationExpression	& HADStateMachine :: commandHandlerHad		3355842	1					
ANR	3355890	UnaryOperator	&		3355842	0					
ANR	3355891	Identifier	HADStateMachine :: commandHandlerHad		3355842	1					
ANR	3355892	Argument	"""commandHandler"""		3355842	3					
ANR	3355893	PrimaryExpression	"""commandHandler"""		3355842	0					
ANR	3355894	Argument	( Service * ) this		3355842	4					
ANR	3355895	CastExpression	( Service * ) this		3355842	0					
ANR	3355896	CastTarget	Service *		3355842	0					
ANR	3355897	Identifier	this		3355842	1					
ANR	3355898	Argument	DAEMON		3355842	5					
ANR	3355899	Identifier	DAEMON		3355842	0					
ANR	3355900	ReturnType	void		3355842	1					
ANR	3355901	Identifier	HADStateMachine :: initialize		3355842	2					
ANR	3355902	ParameterList			3355842	3					
ANR	3355903	CFGEntryNode	ENTRY		3355842		True				
ANR	3355904	CFGExitNode	EXIT		3355842		True				
ANR	3355905	Symbol	daemonCore		3355842						
ANR	3355906	Symbol	this		3355842						
ANR	3355907	Symbol	& HADStateMachine :: commandHandlerHad		3355842						
ANR	3355908	Symbol	DAEMON		3355842						
ANR	3355909	Symbol	HAD_ALIVE_CMD		3355842						
ANR	3355910	Symbol	HAD_SEND_ID_CMD		3355842						
ANR	3355911	Function	HADStateMachine :: initializeClassAd	275:0:7642:8767							
ANR	3355912	FunctionDef	HADStateMachine :: initializeClassAd ()		3355911	0					
ANR	3355913	CompoundStatement		277:0:7688:8767	3355911	0					
ANR	3355914	IdentifierDeclStatement	char * buffer ;	278:1:7691:7703	3355911	0	True				
ANR	3355915	IdentifierDecl	* buffer		3355911	0					
ANR	3355916	IdentifierDeclType	char *		3355911	0					
ANR	3355917	Identifier	buffer		3355911	1					
ANR	3355918	ExpressionStatement	m_classAd . Clear ( )	280:1:7707:7724	3355911	1	True				
ANR	3355919	CallExpression	m_classAd . Clear ( )		3355911	0					
ANR	3355920	Callee	m_classAd . Clear		3355911	0					
ANR	3355921	MemberAccess	m_classAd . Clear		3355911	0					
ANR	3355922	Identifier	m_classAd		3355911	0					
ANR	3355923	Identifier	Clear		3355911	1					
ANR	3355924	ArgumentList			3355911	1					
ANR	3355925	ExpressionStatement	m_classAd . SetMyTypeName ( HAD_ADTYPE )	282:4:7731:7766	3355911	2	True				
ANR	3355926	CallExpression	m_classAd . SetMyTypeName ( HAD_ADTYPE )		3355911	0					
ANR	3355927	Callee	m_classAd . SetMyTypeName		3355911	0					
ANR	3355928	MemberAccess	m_classAd . SetMyTypeName		3355911	0					
ANR	3355929	Identifier	m_classAd		3355911	0					
ANR	3355930	Identifier	SetMyTypeName		3355911	1					
ANR	3355931	ArgumentList	HAD_ADTYPE		3355911	1					
ANR	3355932	Argument	HAD_ADTYPE		3355911	0					
ANR	3355933	Identifier	HAD_ADTYPE		3355911	0					
ANR	3355934	ExpressionStatement	"m_classAd . SetTargetTypeName ( """" )"	283:4:7772:7803	3355911	3	True				
ANR	3355935	CallExpression	"m_classAd . SetTargetTypeName ( """" )"		3355911	0					
ANR	3355936	Callee	m_classAd . SetTargetTypeName		3355911	0					
ANR	3355937	MemberAccess	m_classAd . SetTargetTypeName		3355911	0					
ANR	3355938	Identifier	m_classAd		3355911	0					
ANR	3355939	Identifier	SetTargetTypeName		3355911	1					
ANR	3355940	ArgumentList	""""""		3355911	1					
ANR	3355941	Argument	""""""		3355911	0					
ANR	3355942	PrimaryExpression	""""""		3355911	0					
ANR	3355943	IdentifierDeclStatement	MyString line ;	285:4:7810:7823	3355911	4	True				
ANR	3355944	IdentifierDecl	line		3355911	0					
ANR	3355945	IdentifierDeclType	MyString		3355911	0					
ANR	3355946	Identifier	line		3355911	1					
ANR	3355947	ExpressionStatement	"m_classAd . Assign ( ATTR_NAME , m_name )"	288:4:7897:7934	3355911	5	True				
ANR	3355948	CallExpression	"m_classAd . Assign ( ATTR_NAME , m_name )"		3355911	0					
ANR	3355949	Callee	m_classAd . Assign		3355911	0					
ANR	3355950	MemberAccess	m_classAd . Assign		3355911	0					
ANR	3355951	Identifier	m_classAd		3355911	0					
ANR	3355952	Identifier	Assign		3355911	1					
ANR	3355953	ArgumentList	ATTR_NAME		3355911	1					
ANR	3355954	Argument	ATTR_NAME		3355911	0					
ANR	3355955	Identifier	ATTR_NAME		3355911	0					
ANR	3355956	Argument	m_name		3355911	1					
ANR	3355957	Identifier	m_name		3355911	0					
ANR	3355958	ExpressionStatement	"m_classAd . Assign ( ATTR_MY_ADDRESS , daemonCore -> InfoCommandSinfulString ( ) )"	289:4:7940:8021	3355911	6	True				
ANR	3355959	CallExpression	"m_classAd . Assign ( ATTR_MY_ADDRESS , daemonCore -> InfoCommandSinfulString ( ) )"		3355911	0					
ANR	3355960	Callee	m_classAd . Assign		3355911	0					
ANR	3355961	MemberAccess	m_classAd . Assign		3355911	0					
ANR	3355962	Identifier	m_classAd		3355911	0					
ANR	3355963	Identifier	Assign		3355911	1					
ANR	3355964	ArgumentList	ATTR_MY_ADDRESS		3355911	1					
ANR	3355965	Argument	ATTR_MY_ADDRESS		3355911	0					
ANR	3355966	Identifier	ATTR_MY_ADDRESS		3355911	0					
ANR	3355967	Argument	daemonCore -> InfoCommandSinfulString ( )		3355911	1					
ANR	3355968	CallExpression	daemonCore -> InfoCommandSinfulString ( )		3355911	0					
ANR	3355969	Callee	daemonCore -> InfoCommandSinfulString		3355911	0					
ANR	3355970	PtrMemberAccess	daemonCore -> InfoCommandSinfulString		3355911	0					
ANR	3355971	Identifier	daemonCore		3355911	0					
ANR	3355972	Identifier	InfoCommandSinfulString		3355911	1					
ANR	3355973	ArgumentList			3355911	1					
ANR	3355974	ExpressionStatement	"m_classAd . Assign ( ATTR_HAD_IS_ACTIVE , false )"	293:4:8093:8138	3355911	7	True				
ANR	3355975	CallExpression	"m_classAd . Assign ( ATTR_HAD_IS_ACTIVE , false )"		3355911	0					
ANR	3355976	Callee	m_classAd . Assign		3355911	0					
ANR	3355977	MemberAccess	m_classAd . Assign		3355911	0					
ANR	3355978	Identifier	m_classAd		3355911	0					
ANR	3355979	Identifier	Assign		3355911	1					
ANR	3355980	ArgumentList	ATTR_HAD_IS_ACTIVE		3355911	1					
ANR	3355981	Argument	ATTR_HAD_IS_ACTIVE		3355911	0					
ANR	3355982	Identifier	ATTR_HAD_IS_ACTIVE		3355911	0					
ANR	3355983	Argument	false		3355911	1					
ANR	3355984	Identifier	false		3355911	0					
ANR	3355985	ExpressionStatement	buffer = m_allHadIps . print_to_string ( )	296:1:8181:8220	3355911	8	True				
ANR	3355986	AssignmentExpression	buffer = m_allHadIps . print_to_string ( )		3355911	0		=			
ANR	3355987	Identifier	buffer		3355911	0					
ANR	3355988	CallExpression	m_allHadIps . print_to_string ( )		3355911	1					
ANR	3355989	Callee	m_allHadIps . print_to_string		3355911	0					
ANR	3355990	MemberAccess	m_allHadIps . print_to_string		3355911	0					
ANR	3355991	Identifier	m_allHadIps		3355911	0					
ANR	3355992	Identifier	print_to_string		3355911	1					
ANR	3355993	ArgumentList			3355911	1					
ANR	3355994	IfStatement	if ( ! buffer )		3355911	9					
ANR	3355995	Condition	! buffer	297:6:8228:8234	3355911	0	True				
ANR	3355996	UnaryOperationExpression	! buffer		3355911	0					
ANR	3355997	UnaryOperator	!		3355911	0					
ANR	3355998	Identifier	buffer		3355911	1					
ANR	3355999	CompoundStatement		21:16:549:549	3355911	1					
ANR	3356000	ExpressionStatement	"m_classAd . Assign ( ATTR_HAD_LIST , ""UNKNOWN"" )"	298:2:8242:8286	3355911	0	True				
ANR	3356001	CallExpression	"m_classAd . Assign ( ATTR_HAD_LIST , ""UNKNOWN"" )"		3355911	0					
ANR	3356002	Callee	m_classAd . Assign		3355911	0					
ANR	3356003	MemberAccess	m_classAd . Assign		3355911	0					
ANR	3356004	Identifier	m_classAd		3355911	0					
ANR	3356005	Identifier	Assign		3355911	1					
ANR	3356006	ArgumentList	ATTR_HAD_LIST		3355911	1					
ANR	3356007	Argument	ATTR_HAD_LIST		3355911	0					
ANR	3356008	Identifier	ATTR_HAD_LIST		3355911	0					
ANR	3356009	Argument	"""UNKNOWN"""		3355911	1					
ANR	3356010	PrimaryExpression	"""UNKNOWN"""		3355911	0					
ANR	3356011	ElseStatement	else		3355911	0					
ANR	3356012	CompoundStatement		24:6:608:608	3355911	0					
ANR	3356013	ExpressionStatement	"m_classAd . Assign ( ATTR_HAD_LIST , buffer )"	301:2:8301:8342	3355911	0	True				
ANR	3356014	CallExpression	"m_classAd . Assign ( ATTR_HAD_LIST , buffer )"		3355911	0					
ANR	3356015	Callee	m_classAd . Assign		3355911	0					
ANR	3356016	MemberAccess	m_classAd . Assign		3355911	0					
ANR	3356017	Identifier	m_classAd		3355911	0					
ANR	3356018	Identifier	Assign		3355911	1					
ANR	3356019	ArgumentList	ATTR_HAD_LIST		3355911	1					
ANR	3356020	Argument	ATTR_HAD_LIST		3355911	0					
ANR	3356021	Identifier	ATTR_HAD_LIST		3355911	0					
ANR	3356022	Argument	buffer		3355911	1					
ANR	3356023	Identifier	buffer		3355911	0					
ANR	3356024	ExpressionStatement	free ( buffer )	302:2:8346:8360	3355911	1	True				
ANR	3356025	CallExpression	free ( buffer )		3355911	0					
ANR	3356026	Callee	free		3355911	0					
ANR	3356027	Identifier	free		3355911	0					
ANR	3356028	ArgumentList	buffer		3355911	1					
ANR	3356029	Argument	buffer		3355911	0					
ANR	3356030	Identifier	buffer		3355911	0					
ANR	3356031	ExpressionStatement	"m_classAd . Assign ( ATTR_HAD_CONTROLLEE_NAME , m_controlleeName )"	306:1:8401:8463	3355911	10	True				
ANR	3356032	CallExpression	"m_classAd . Assign ( ATTR_HAD_CONTROLLEE_NAME , m_controlleeName )"		3355911	0					
ANR	3356033	Callee	m_classAd . Assign		3355911	0					
ANR	3356034	MemberAccess	m_classAd . Assign		3355911	0					
ANR	3356035	Identifier	m_classAd		3355911	0					
ANR	3356036	Identifier	Assign		3355911	1					
ANR	3356037	ArgumentList	ATTR_HAD_CONTROLLEE_NAME		3355911	1					
ANR	3356038	Argument	ATTR_HAD_CONTROLLEE_NAME		3355911	0					
ANR	3356039	Identifier	ATTR_HAD_CONTROLLEE_NAME		3355911	0					
ANR	3356040	Argument	m_controlleeName		3355911	1					
ANR	3356041	Identifier	m_controlleeName		3355911	0					
ANR	3356042	ExpressionStatement	"m_classAd . Assign ( ATTR_HAD_INDEX , m_allHadIps . number ( ) - 1 - m_selfId )"	309:1:8515:8586	3355911	11	True				
ANR	3356043	CallExpression	"m_classAd . Assign ( ATTR_HAD_INDEX , m_allHadIps . number ( ) - 1 - m_selfId )"		3355911	0					
ANR	3356044	Callee	m_classAd . Assign		3355911	0					
ANR	3356045	MemberAccess	m_classAd . Assign		3355911	0					
ANR	3356046	Identifier	m_classAd		3355911	0					
ANR	3356047	Identifier	Assign		3355911	1					
ANR	3356048	ArgumentList	ATTR_HAD_INDEX		3355911	1					
ANR	3356049	Argument	ATTR_HAD_INDEX		3355911	0					
ANR	3356050	Identifier	ATTR_HAD_INDEX		3355911	0					
ANR	3356051	Argument	m_allHadIps . number ( ) - 1 - m_selfId		3355911	1					
ANR	3356052	AdditiveExpression	m_allHadIps . number ( ) - 1 - m_selfId		3355911	0		-			
ANR	3356053	CallExpression	m_allHadIps . number ( )		3355911	0					
ANR	3356054	Callee	m_allHadIps . number		3355911	0					
ANR	3356055	MemberAccess	m_allHadIps . number		3355911	0					
ANR	3356056	Identifier	m_allHadIps		3355911	0					
ANR	3356057	Identifier	number		3355911	1					
ANR	3356058	ArgumentList			3355911	1					
ANR	3356059	AdditiveExpression	1 - m_selfId		3355911	1		-			
ANR	3356060	PrimaryExpression	1		3355911	0					
ANR	3356061	Identifier	m_selfId		3355911	1					
ANR	3356062	ExpressionStatement	"m_classAd . Assign ( ATTR_HAD_SELF_ID , m_selfId )"	312:1:8616:8662	3355911	12	True				
ANR	3356063	CallExpression	"m_classAd . Assign ( ATTR_HAD_SELF_ID , m_selfId )"		3355911	0					
ANR	3356064	Callee	m_classAd . Assign		3355911	0					
ANR	3356065	MemberAccess	m_classAd . Assign		3355911	0					
ANR	3356066	Identifier	m_classAd		3355911	0					
ANR	3356067	Identifier	Assign		3355911	1					
ANR	3356068	ArgumentList	ATTR_HAD_SELF_ID		3355911	1					
ANR	3356069	Argument	ATTR_HAD_SELF_ID		3355911	0					
ANR	3356070	Identifier	ATTR_HAD_SELF_ID		3355911	0					
ANR	3356071	Argument	m_selfId		3355911	1					
ANR	3356072	Identifier	m_selfId		3355911	0					
ANR	3356073	ExpressionStatement	daemonCore -> publish ( & m_classAd )	315:1:8732:8765	3355911	13	True				
ANR	3356074	CallExpression	daemonCore -> publish ( & m_classAd )		3355911	0					
ANR	3356075	Callee	daemonCore -> publish		3355911	0					
ANR	3356076	PtrMemberAccess	daemonCore -> publish		3355911	0					
ANR	3356077	Identifier	daemonCore		3355911	0					
ANR	3356078	Identifier	publish		3355911	1					
ANR	3356079	ArgumentList	& m_classAd		3355911	1					
ANR	3356080	Argument	& m_classAd		3355911	0					
ANR	3356081	UnaryOperationExpression	& m_classAd		3355911	0					
ANR	3356082	UnaryOperator	&		3355911	0					
ANR	3356083	Identifier	m_classAd		3355911	1					
ANR	3356084	ReturnType	void		3355911	1					
ANR	3356085	Identifier	HADStateMachine :: initializeClassAd		3355911	2					
ANR	3356086	ParameterList			3355911	3					
ANR	3356087	CFGEntryNode	ENTRY		3355911		True				
ANR	3356088	CFGExitNode	EXIT		3355911		True				
ANR	3356089	Symbol	daemonCore -> InfoCommandSinfulString		3355911						
ANR	3356090	Symbol	m_allHadIps		3355911						
ANR	3356091	Symbol	ATTR_NAME		3355911						
ANR	3356092	Symbol	ATTR_HAD_INDEX		3355911						
ANR	3356093	Symbol	line		3355911						
ANR	3356094	Symbol	false		3355911						
ANR	3356095	Symbol	m_allHadIps . print_to_string		3355911						
ANR	3356096	Symbol	HAD_ADTYPE		3355911						
ANR	3356097	Symbol	m_allHadIps . number		3355911						
ANR	3356098	Symbol	m_controlleeName		3355911						
ANR	3356099	Symbol	m_name		3355911						
ANR	3356100	Symbol	* daemonCore		3355911						
ANR	3356101	Symbol	ATTR_HAD_LIST		3355911						
ANR	3356102	Symbol	m_selfId		3355911						
ANR	3356103	Symbol	daemonCore		3355911						
ANR	3356104	Symbol	ATTR_HAD_SELF_ID		3355911						
ANR	3356105	Symbol	buffer		3355911						
ANR	3356106	Symbol	& m_classAd		3355911						
ANR	3356107	Symbol	ATTR_MY_ADDRESS		3355911						
ANR	3356108	Symbol	ATTR_HAD_CONTROLLEE_NAME		3355911						
ANR	3356109	Symbol	m_classAd		3355911						
ANR	3356110	Symbol	ATTR_HAD_IS_ACTIVE		3355911						
ANR	3356111	Function	HADStateMachine :: reinitialize	336:0:9400:11188							
ANR	3356112	FunctionDef	HADStateMachine :: reinitialize ()		3356111	0					
ANR	3356113	CompoundStatement		338:0:9440:11188	3356111	0					
ANR	3356114	IdentifierDeclStatement	char * tmp ;	339:4:9446:9455	3356111	0	True				
ANR	3356115	IdentifierDecl	* tmp		3356111	0					
ANR	3356116	IdentifierDeclType	char *		3356111	0					
ANR	3356117	Identifier	tmp		3356111	1					
ANR	3356118	ExpressionStatement	freeResources ( )	340:4:9461:9476	3356111	1	True				
ANR	3356119	CallExpression	freeResources ( )		3356111	0					
ANR	3356120	Callee	freeResources		3356111	0					
ANR	3356121	Identifier	freeResources		3356111	0					
ANR	3356122	ArgumentList			3356111	1					
ANR	3356123	ExpressionStatement	m_masterDaemon = new Daemon ( DT_MASTER )	341:4:9539:9579	3356111	2	True				
ANR	3356124	AssignmentExpression	m_masterDaemon = new Daemon ( DT_MASTER )		3356111	0		=			
ANR	3356125	Identifier	m_masterDaemon		3356111	0					
ANR	3356126	Identifier	DT_MASTER		3356111	1					
ANR	3356127	ExpressionStatement	"tmp = param ( ""HAD_CONTROLLEE"" )"	344:1:9642:9673	3356111	3	True				
ANR	3356128	AssignmentExpression	"tmp = param ( ""HAD_CONTROLLEE"" )"		3356111	0		=			
ANR	3356129	Identifier	tmp		3356111	0					
ANR	3356130	CallExpression	"param ( ""HAD_CONTROLLEE"" )"		3356111	1					
ANR	3356131	Callee	param		3356111	0					
ANR	3356132	Identifier	param		3356111	0					
ANR	3356133	ArgumentList	"""HAD_CONTROLLEE"""		3356111	1					
ANR	3356134	Argument	"""HAD_CONTROLLEE"""		3356111	0					
ANR	3356135	PrimaryExpression	"""HAD_CONTROLLEE"""		3356111	0					
ANR	3356136	IfStatement	if ( tmp )		3356111	4					
ANR	3356137	Condition	tmp	345:6:9681:9683	3356111	0	True				
ANR	3356138	Identifier	tmp		3356111	0					
ANR	3356139	CompoundStatement		8:12:246:246	3356111	1					
ANR	3356140	ExpressionStatement	m_controlleeName = tmp	346:2:9691:9713	3356111	0	True				
ANR	3356141	AssignmentExpression	m_controlleeName = tmp		3356111	0		=			
ANR	3356142	Identifier	m_controlleeName		3356111	0					
ANR	3356143	Identifier	tmp		3356111	1					
ANR	3356144	ElseStatement	else		3356111	0					
ANR	3356145	CompoundStatement		11:6:283:283	3356111	0					
ANR	3356146	ExpressionStatement	m_controlleeName = strdup ( daemonString ( DT_NEGOTIATOR ) )	349:2:9728:9784	3356111	0	True				
ANR	3356147	AssignmentExpression	m_controlleeName = strdup ( daemonString ( DT_NEGOTIATOR ) )		3356111	0		=			
ANR	3356148	Identifier	m_controlleeName		3356111	0					
ANR	3356149	CallExpression	strdup ( daemonString ( DT_NEGOTIATOR ) )		3356111	1					
ANR	3356150	Callee	strdup		3356111	0					
ANR	3356151	Identifier	strdup		3356111	0					
ANR	3356152	ArgumentList	daemonString ( DT_NEGOTIATOR )		3356111	1					
ANR	3356153	Argument	daemonString ( DT_NEGOTIATOR )		3356111	0					
ANR	3356154	CallExpression	daemonString ( DT_NEGOTIATOR )		3356111	0					
ANR	3356155	Callee	daemonString		3356111	0					
ANR	3356156	Identifier	daemonString		3356111	0					
ANR	3356157	ArgumentList	DT_NEGOTIATOR		3356111	1					
ANR	3356158	Argument	DT_NEGOTIATOR		3356111	0					
ANR	3356159	Identifier	DT_NEGOTIATOR		3356111	0					
ANR	3356160	ExpressionStatement	"m_usePrimary = param_boolean ( ""HAD_USE_PRIMARY"" , m_usePrimary )"	354:1:9884:9945	3356111	5	True				
ANR	3356161	AssignmentExpression	"m_usePrimary = param_boolean ( ""HAD_USE_PRIMARY"" , m_usePrimary )"		3356111	0		=			
ANR	3356162	Identifier	m_usePrimary		3356111	0					
ANR	3356163	CallExpression	"param_boolean ( ""HAD_USE_PRIMARY"" , m_usePrimary )"		3356111	1					
ANR	3356164	Callee	param_boolean		3356111	0					
ANR	3356165	Identifier	param_boolean		3356111	0					
ANR	3356166	ArgumentList	"""HAD_USE_PRIMARY"""		3356111	1					
ANR	3356167	Argument	"""HAD_USE_PRIMARY"""		3356111	0					
ANR	3356168	PrimaryExpression	"""HAD_USE_PRIMARY"""		3356111	0					
ANR	3356169	Argument	m_usePrimary		3356111	1					
ANR	3356170	Identifier	m_usePrimary		3356111	0					
ANR	3356171	ExpressionStatement	"tmp = param ( ""HAD_LIST"" )"	356:4:9952:9977	3356111	6	True				
ANR	3356172	AssignmentExpression	"tmp = param ( ""HAD_LIST"" )"		3356111	0		=			
ANR	3356173	Identifier	tmp		3356111	0					
ANR	3356174	CallExpression	"param ( ""HAD_LIST"" )"		3356111	1					
ANR	3356175	Callee	param		3356111	0					
ANR	3356176	Identifier	param		3356111	0					
ANR	3356177	ArgumentList	"""HAD_LIST"""		3356111	1					
ANR	3356178	Argument	"""HAD_LIST"""		3356111	0					
ANR	3356179	PrimaryExpression	"""HAD_LIST"""		3356111	0					
ANR	3356180	IfStatement	if ( tmp )		3356111	7					
ANR	3356181	Condition	tmp	357:9:9988:9990	3356111	0	True				
ANR	3356182	Identifier	tmp		3356111	0					
ANR	3356183	CompoundStatement		20:15:553:553	3356111	1					
ANR	3356184	ExpressionStatement	"m_isPrimary = getHadList ( tmp , m_usePrimary , m_otherHadIps , m_allHadIps , m_selfId )"	358:8:10004:10107	3356111	0	True				
ANR	3356185	AssignmentExpression	"m_isPrimary = getHadList ( tmp , m_usePrimary , m_otherHadIps , m_allHadIps , m_selfId )"		3356111	0		=			
ANR	3356186	Identifier	m_isPrimary		3356111	0					
ANR	3356187	CallExpression	"getHadList ( tmp , m_usePrimary , m_otherHadIps , m_allHadIps , m_selfId )"		3356111	1					
ANR	3356188	Callee	getHadList		3356111	0					
ANR	3356189	Identifier	getHadList		3356111	0					
ANR	3356190	ArgumentList	tmp		3356111	1					
ANR	3356191	Argument	tmp		3356111	0					
ANR	3356192	Identifier	tmp		3356111	0					
ANR	3356193	Argument	m_usePrimary		3356111	1					
ANR	3356194	Identifier	m_usePrimary		3356111	0					
ANR	3356195	Argument	m_otherHadIps		3356111	2					
ANR	3356196	Identifier	m_otherHadIps		3356111	0					
ANR	3356197	Argument	m_allHadIps		3356111	3					
ANR	3356198	Identifier	m_allHadIps		3356111	0					
ANR	3356199	Argument	m_selfId		3356111	4					
ANR	3356200	Identifier	m_selfId		3356111	0					
ANR	3356201	ExpressionStatement	free ( tmp )	361:8:10117:10128	3356111	1	True				
ANR	3356202	CallExpression	free ( tmp )		3356111	0					
ANR	3356203	Callee	free		3356111	0					
ANR	3356204	Identifier	free		3356111	0					
ANR	3356205	ArgumentList	tmp		3356111	1					
ANR	3356206	Argument	tmp		3356111	0					
ANR	3356207	Identifier	tmp		3356111	0					
ANR	3356208	ElseStatement	else		3356111	0					
ANR	3356209	CompoundStatement		25:11:700:700	3356111	0					
ANR	3356210	Statement	utilCrucialError	363:8:10151:10166	3356111	0	True				
ANR	3356211	Statement	(	363:24:10167:10167	3356111	1	True				
ANR	3356212	Statement	"""HAD CONFIGURATION ERROR:"""	363:25:10168:10193	3356111	2	True				
ANR	3356213	Statement	""" no HAD_LIST in config file"""	364:7:10202:10230	3356111	3	True				
ANR	3356214	Statement	)	364:36:10231:10231	3356111	4	True				
ANR	3356215	ExpressionStatement		364:37:10232:10232	3356111	5	True				
ANR	3356216	ExpressionStatement	softReconfigure ( )	368:1:10346:10364	3356111	8	True				
ANR	3356217	CallExpression	softReconfigure ( )		3356111	0					
ANR	3356218	Callee	softReconfigure		3356111	0					
ANR	3356219	Identifier	softReconfigure		3356111	0					
ANR	3356220	ArgumentList			3356111	1					
ANR	3356221	ExpressionStatement	"m_stateMachineTimerID = daemonCore -> Register_Timer ( 0 , ( TimerHandlercpp ) & HADStateMachine :: cycle , ""Time to check HAD"" , this )"	371:4:10399:10530	3356111	9	True				
ANR	3356222	AssignmentExpression	"m_stateMachineTimerID = daemonCore -> Register_Timer ( 0 , ( TimerHandlercpp ) & HADStateMachine :: cycle , ""Time to check HAD"" , this )"		3356111	0		=			
ANR	3356223	Identifier	m_stateMachineTimerID		3356111	0					
ANR	3356224	CallExpression	"daemonCore -> Register_Timer ( 0 , ( TimerHandlercpp ) & HADStateMachine :: cycle , ""Time to check HAD"" , this )"		3356111	1					
ANR	3356225	Callee	daemonCore -> Register_Timer		3356111	0					
ANR	3356226	PtrMemberAccess	daemonCore -> Register_Timer		3356111	0					
ANR	3356227	Identifier	daemonCore		3356111	0					
ANR	3356228	Identifier	Register_Timer		3356111	1					
ANR	3356229	ArgumentList	0		3356111	1					
ANR	3356230	Argument	0		3356111	0					
ANR	3356231	PrimaryExpression	0		3356111	0					
ANR	3356232	Argument	( TimerHandlercpp ) & HADStateMachine :: cycle		3356111	1					
ANR	3356233	CastExpression	( TimerHandlercpp ) & HADStateMachine :: cycle		3356111	0					
ANR	3356234	CastTarget	TimerHandlercpp		3356111	0					
ANR	3356235	UnaryOperationExpression	& HADStateMachine :: cycle		3356111	1					
ANR	3356236	UnaryOperator	&		3356111	0					
ANR	3356237	Identifier	HADStateMachine :: cycle		3356111	1					
ANR	3356238	Argument	"""Time to check HAD"""		3356111	2					
ANR	3356239	PrimaryExpression	"""Time to check HAD"""		3356111	0					
ANR	3356240	Argument	this		3356111	3					
ANR	3356241	Identifier	this		3356111	0					
ANR	3356242	ExpressionStatement	"dprintf ( D_ALWAYS , ""** Register on m_stateMachineTimerID, interval = %d\\n"" , m_hadInterval / ( MESSAGES_PER_INTERVAL_FACTOR ) )"	375:4:10536:10668	3356111	10	True				
ANR	3356243	CallExpression	"dprintf ( D_ALWAYS , ""** Register on m_stateMachineTimerID, interval = %d\\n"" , m_hadInterval / ( MESSAGES_PER_INTERVAL_FACTOR ) )"		3356111	0					
ANR	3356244	Callee	dprintf		3356111	0					
ANR	3356245	Identifier	dprintf		3356111	0					
ANR	3356246	ArgumentList	D_ALWAYS		3356111	1					
ANR	3356247	Argument	D_ALWAYS		3356111	0					
ANR	3356248	Identifier	D_ALWAYS		3356111	0					
ANR	3356249	Argument	"""** Register on m_stateMachineTimerID, interval = %d\\n"""		3356111	1					
ANR	3356250	PrimaryExpression	"""** Register on m_stateMachineTimerID, interval = %d\\n"""		3356111	0					
ANR	3356251	Argument	m_hadInterval / ( MESSAGES_PER_INTERVAL_FACTOR )		3356111	2					
ANR	3356252	MultiplicativeExpression	m_hadInterval / ( MESSAGES_PER_INTERVAL_FACTOR )		3356111	0		/			
ANR	3356253	Identifier	m_hadInterval		3356111	0					
ANR	3356254	Identifier	MESSAGES_PER_INTERVAL_FACTOR		3356111	1					
ANR	3356255	ExpressionStatement	"m_updateCollectorTimerId = daemonCore -> Register_Timer ( 0 , m_updateCollectorInterval , ( TimerHandlercpp ) & HADStateMachine :: updateCollectors , ""Update collector"" , this )"	377:1:10671:10861	3356111	11	True				
ANR	3356256	AssignmentExpression	"m_updateCollectorTimerId = daemonCore -> Register_Timer ( 0 , m_updateCollectorInterval , ( TimerHandlercpp ) & HADStateMachine :: updateCollectors , ""Update collector"" , this )"		3356111	0		=			
ANR	3356257	Identifier	m_updateCollectorTimerId		3356111	0					
ANR	3356258	CallExpression	"daemonCore -> Register_Timer ( 0 , m_updateCollectorInterval , ( TimerHandlercpp ) & HADStateMachine :: updateCollectors , ""Update collector"" , this )"		3356111	1					
ANR	3356259	Callee	daemonCore -> Register_Timer		3356111	0					
ANR	3356260	PtrMemberAccess	daemonCore -> Register_Timer		3356111	0					
ANR	3356261	Identifier	daemonCore		3356111	0					
ANR	3356262	Identifier	Register_Timer		3356111	1					
ANR	3356263	ArgumentList	0		3356111	1					
ANR	3356264	Argument	0		3356111	0					
ANR	3356265	PrimaryExpression	0		3356111	0					
ANR	3356266	Argument	m_updateCollectorInterval		3356111	1					
ANR	3356267	Identifier	m_updateCollectorInterval		3356111	0					
ANR	3356268	Argument	( TimerHandlercpp ) & HADStateMachine :: updateCollectors		3356111	2					
ANR	3356269	CastExpression	( TimerHandlercpp ) & HADStateMachine :: updateCollectors		3356111	0					
ANR	3356270	CastTarget	TimerHandlercpp		3356111	0					
ANR	3356271	UnaryOperationExpression	& HADStateMachine :: updateCollectors		3356111	1					
ANR	3356272	UnaryOperator	&		3356111	0					
ANR	3356273	Identifier	HADStateMachine :: updateCollectors		3356111	1					
ANR	3356274	Argument	"""Update collector"""		3356111	3					
ANR	3356275	PrimaryExpression	"""Update collector"""		3356111	0					
ANR	3356276	Argument	this		3356111	4					
ANR	3356277	Identifier	this		3356111	0					
ANR	3356278	IfStatement	if ( m_standAloneMode )		3356111	12					
ANR	3356279	Condition	m_standAloneMode	382:8:10872:10887	3356111	0	True				
ANR	3356280	Identifier	m_standAloneMode		3356111	0					
ANR	3356281	CompoundStatement		45:27:1450:1450	3356111	1					
ANR	3356282	ReturnStatement	return TRUE ;	384:9:10939:10950	3356111	0	True				
ANR	3356283	Identifier	TRUE		3356111	0					
ANR	3356284	IfStatement	if ( m_masterDaemon == NULL || sendControlCmdToMaster ( CHILD_OFF_FAST ) == false )		3356111	13					
ANR	3356285	Condition	m_masterDaemon == NULL || sendControlCmdToMaster ( CHILD_OFF_FAST ) == false	387:8:10967:11047	3356111	0	True				
ANR	3356286	OrExpression	m_masterDaemon == NULL || sendControlCmdToMaster ( CHILD_OFF_FAST ) == false		3356111	0		||			
ANR	3356287	EqualityExpression	m_masterDaemon == NULL		3356111	0		==			
ANR	3356288	Identifier	m_masterDaemon		3356111	0					
ANR	3356289	Identifier	NULL		3356111	1					
ANR	3356290	EqualityExpression	sendControlCmdToMaster ( CHILD_OFF_FAST ) == false		3356111	1		==			
ANR	3356291	CallExpression	sendControlCmdToMaster ( CHILD_OFF_FAST )		3356111	0					
ANR	3356292	Callee	sendControlCmdToMaster		3356111	0					
ANR	3356293	Identifier	sendControlCmdToMaster		3356111	0					
ANR	3356294	ArgumentList	CHILD_OFF_FAST		3356111	1					
ANR	3356295	Argument	CHILD_OFF_FAST		3356111	0					
ANR	3356296	Identifier	CHILD_OFF_FAST		3356111	0					
ANR	3356297	Identifier	false		3356111	1					
ANR	3356298	CompoundStatement		51:58:1610:1610	3356111	1					
ANR	3356299	ExpressionStatement	"utilCrucialError ( ""HAD ERROR: unable to send CHILD_OFF_FAST command"" )"	389:9:11062:11130	3356111	0	True				
ANR	3356300	CallExpression	"utilCrucialError ( ""HAD ERROR: unable to send CHILD_OFF_FAST command"" )"		3356111	0					
ANR	3356301	Callee	utilCrucialError		3356111	0					
ANR	3356302	Identifier	utilCrucialError		3356111	0					
ANR	3356303	ArgumentList	"""HAD ERROR: unable to send CHILD_OFF_FAST command"""		3356111	1					
ANR	3356304	Argument	"""HAD ERROR: unable to send CHILD_OFF_FAST command"""		3356111	0					
ANR	3356305	PrimaryExpression	"""HAD ERROR: unable to send CHILD_OFF_FAST command"""		3356111	0					
ANR	3356306	ReturnStatement	return TRUE ;	393:4:11175:11186	3356111	14	True				
ANR	3356307	Identifier	TRUE		3356111	0					
ANR	3356308	ReturnType	int		3356111	1					
ANR	3356309	Identifier	HADStateMachine :: reinitialize		3356111	2					
ANR	3356310	ParameterList			3356111	3					
ANR	3356311	CFGEntryNode	ENTRY		3356111		True				
ANR	3356312	CFGExitNode	EXIT		3356111		True				
ANR	3356313	Symbol	m_allHadIps		3356111						
ANR	3356314	Symbol	daemonString		3356111						
ANR	3356315	Symbol	m_otherHadIps		3356111						
ANR	3356316	Symbol	DT_MASTER		3356111						
ANR	3356317	Symbol	m_usePrimary		3356111						
ANR	3356318	Symbol	m_standAloneMode		3356111						
ANR	3356319	Symbol	getHadList		3356111						
ANR	3356320	Symbol	param		3356111						
ANR	3356321	Symbol	tmp		3356111						
ANR	3356322	Symbol	m_selfId		3356111						
ANR	3356323	Symbol	m_hadInterval		3356111						
ANR	3356324	Symbol	daemonCore		3356111						
ANR	3356325	Symbol	MESSAGES_PER_INTERVAL_FACTOR		3356111						
ANR	3356326	Symbol	m_masterDaemon		3356111						
ANR	3356327	Symbol	sendControlCmdToMaster		3356111						
ANR	3356328	Symbol	NULL		3356111						
ANR	3356329	Symbol	this		3356111						
ANR	3356330	Symbol	D_ALWAYS		3356111						
ANR	3356331	Symbol	& HADStateMachine :: updateCollectors		3356111						
ANR	3356332	Symbol	false		3356111						
ANR	3356333	Symbol	m_isPrimary		3356111						
ANR	3356334	Symbol	TRUE		3356111						
ANR	3356335	Symbol	param_boolean		3356111						
ANR	3356336	Symbol	& HADStateMachine :: cycle		3356111						
ANR	3356337	Symbol	m_controlleeName		3356111						
ANR	3356338	Symbol	m_stateMachineTimerID		3356111						
ANR	3356339	Symbol	* daemonCore		3356111						
ANR	3356340	Symbol	CHILD_OFF_FAST		3356111						
ANR	3356341	Symbol	daemonCore -> Register_Timer		3356111						
ANR	3356342	Symbol	DT_NEGOTIATOR		3356111						
ANR	3356343	Symbol	m_updateCollectorInterval		3356111						
ANR	3356344	Symbol	strdup		3356111						
ANR	3356345	Symbol	m_updateCollectorTimerId		3356111						
ANR	3356346	Function	HADStateMachine :: cycle	402:0:11458:12045							
ANR	3356347	FunctionDef	HADStateMachine :: cycle ()		3356346	0					
ANR	3356348	CompoundStatement		404:0:11492:12045	3356346	0					
ANR	3356349	Statement	dprintf	405:4:11498:11504	3356346	0	True				
ANR	3356350	Statement	(	405:11:11505:11505	3356346	1	True				
ANR	3356351	Statement	D_FULLDEBUG	405:13:11507:11517	3356346	2	True				
ANR	3356352	Statement	","	405:24:11518:11518	3356346	3	True				
ANR	3356353	Statement	"""-------------- > Timer m_stateMachineTimerID"""	405:26:11520:11565	3356346	4	True				
ANR	3356354	Statement	""" is called\\n"""	406:8:11575:11588	3356346	5	True				
ANR	3356355	Statement	)	406:22:11589:11589	3356346	6	True				
ANR	3356356	ExpressionStatement		406:23:11590:11590	3356346	7	True				
ANR	3356357	ExpressionStatement	utilCancelTimer ( m_stateMachineTimerID )	408:4:11597:11637	3356346	8	True				
ANR	3356358	CallExpression	utilCancelTimer ( m_stateMachineTimerID )		3356346	0					
ANR	3356359	Callee	utilCancelTimer		3356346	0					
ANR	3356360	Identifier	utilCancelTimer		3356346	0					
ANR	3356361	ArgumentList	m_stateMachineTimerID		3356346	1					
ANR	3356362	Argument	m_stateMachineTimerID		3356346	0					
ANR	3356363	Identifier	m_stateMachineTimerID		3356346	0					
ANR	3356364	ExpressionStatement	"m_stateMachineTimerID = daemonCore -> Register_Timer ( m_hadInterval / ( MESSAGES_PER_INTERVAL_FACTOR ) , ( TimerHandlercpp ) & HADStateMachine :: cycle , ""Time to check HAD"" , this )"	409:1:11640:11816	3356346	9	True				
ANR	3356365	AssignmentExpression	"m_stateMachineTimerID = daemonCore -> Register_Timer ( m_hadInterval / ( MESSAGES_PER_INTERVAL_FACTOR ) , ( TimerHandlercpp ) & HADStateMachine :: cycle , ""Time to check HAD"" , this )"		3356346	0		=			
ANR	3356366	Identifier	m_stateMachineTimerID		3356346	0					
ANR	3356367	CallExpression	"daemonCore -> Register_Timer ( m_hadInterval / ( MESSAGES_PER_INTERVAL_FACTOR ) , ( TimerHandlercpp ) & HADStateMachine :: cycle , ""Time to check HAD"" , this )"		3356346	1					
ANR	3356368	Callee	daemonCore -> Register_Timer		3356346	0					
ANR	3356369	PtrMemberAccess	daemonCore -> Register_Timer		3356346	0					
ANR	3356370	Identifier	daemonCore		3356346	0					
ANR	3356371	Identifier	Register_Timer		3356346	1					
ANR	3356372	ArgumentList	m_hadInterval / ( MESSAGES_PER_INTERVAL_FACTOR )		3356346	1					
ANR	3356373	Argument	m_hadInterval / ( MESSAGES_PER_INTERVAL_FACTOR )		3356346	0					
ANR	3356374	MultiplicativeExpression	m_hadInterval / ( MESSAGES_PER_INTERVAL_FACTOR )		3356346	0		/			
ANR	3356375	Identifier	m_hadInterval		3356346	0					
ANR	3356376	Identifier	MESSAGES_PER_INTERVAL_FACTOR		3356346	1					
ANR	3356377	Argument	( TimerHandlercpp ) & HADStateMachine :: cycle		3356346	1					
ANR	3356378	CastExpression	( TimerHandlercpp ) & HADStateMachine :: cycle		3356346	0					
ANR	3356379	CastTarget	TimerHandlercpp		3356346	0					
ANR	3356380	UnaryOperationExpression	& HADStateMachine :: cycle		3356346	1					
ANR	3356381	UnaryOperator	&		3356346	0					
ANR	3356382	Identifier	HADStateMachine :: cycle		3356346	1					
ANR	3356383	Argument	"""Time to check HAD"""		3356346	2					
ANR	3356384	PrimaryExpression	"""Time to check HAD"""		3356346	0					
ANR	3356385	Argument	this		3356346	3					
ANR	3356386	Identifier	this		3356346	0					
ANR	3356387	IfStatement	if ( m_callsCounter == 0 )		3356346	10					
ANR	3356388	Condition	m_callsCounter == 0	415:7:11826:11844	3356346	0	True				
ANR	3356389	EqualityExpression	m_callsCounter == 0		3356346	0		==			
ANR	3356390	Identifier	m_callsCounter		3356346	0					
ANR	3356391	PrimaryExpression	0		3356346	1					
ANR	3356392	CompoundStatement		12:27:353:353	3356346	1					
ANR	3356393	ExpressionStatement	step ( )	417:8:11919:11925	3356346	0	True				
ANR	3356394	CallExpression	step ( )		3356346	0					
ANR	3356395	Callee	step		3356346	0					
ANR	3356396	Identifier	step		3356346	0					
ANR	3356397	ArgumentList			3356346	1					
ANR	3356398	ExpressionStatement	sendMessages ( )	419:4:11937:11951	3356346	11	True				
ANR	3356399	CallExpression	sendMessages ( )		3356346	0					
ANR	3356400	Callee	sendMessages		3356346	0					
ANR	3356401	Identifier	sendMessages		3356346	0					
ANR	3356402	ArgumentList			3356346	1					
ANR	3356403	ExpressionStatement	m_callsCounter ++	420:4:11957:11974	3356346	12	True				
ANR	3356404	PostIncDecOperationExpression	m_callsCounter ++		3356346	0					
ANR	3356405	Identifier	m_callsCounter		3356346	0					
ANR	3356406	IncDec	++		3356346	1					
ANR	3356407	ExpressionStatement	m_callsCounter = m_callsCounter % MESSAGES_PER_INTERVAL_FACTOR	421:4:11980:12042	3356346	13	True				
ANR	3356408	AssignmentExpression	m_callsCounter = m_callsCounter % MESSAGES_PER_INTERVAL_FACTOR		3356346	0		=			
ANR	3356409	Identifier	m_callsCounter		3356346	0					
ANR	3356410	MultiplicativeExpression	m_callsCounter % MESSAGES_PER_INTERVAL_FACTOR		3356346	1		%			
ANR	3356411	Identifier	m_callsCounter		3356346	0					
ANR	3356412	Identifier	MESSAGES_PER_INTERVAL_FACTOR		3356346	1					
ANR	3356413	ReturnType	void		3356346	1					
ANR	3356414	Identifier	HADStateMachine :: cycle		3356346	2					
ANR	3356415	ParameterList			3356346	3					
ANR	3356416	CFGEntryNode	ENTRY		3356346		True				
ANR	3356417	CFGExitNode	EXIT		3356346		True				
ANR	3356418	Symbol	m_callsCounter		3356346						
ANR	3356419	Symbol	m_hadInterval		3356346						
ANR	3356420	Symbol	* daemonCore		3356346						
ANR	3356421	Symbol	daemonCore		3356346						
ANR	3356422	Symbol	daemonCore -> Register_Timer		3356346						
ANR	3356423	Symbol	MESSAGES_PER_INTERVAL_FACTOR		3356346						
ANR	3356424	Symbol	this		3356346						
ANR	3356425	Symbol	& HADStateMachine :: cycle		3356346						
ANR	3356426	Symbol	m_stateMachineTimerID		3356346						
ANR	3356427	Function	HADStateMachine :: step	430:0:12211:15548							
ANR	3356428	FunctionDef	HADStateMachine :: step ()		3356427	0					
ANR	3356429	CompoundStatement		432:0:12244:15548	3356427	0					
ANR	3356430	ExpressionStatement	my_debug_print_buffers ( )	434:4:12251:12275	3356427	0	True				
ANR	3356431	CallExpression	my_debug_print_buffers ( )		3356427	0					
ANR	3356432	Callee	my_debug_print_buffers		3356427	0					
ANR	3356433	Identifier	my_debug_print_buffers		3356427	0					
ANR	3356434	ArgumentList			3356427	1					
ANR	3356435	SwitchStatement	switch ( m_state )		3356427	1					
ANR	3356436	Condition	m_state	435:12:12289:12295	3356427	0	True				
ANR	3356437	Identifier	m_state		3356427	0					
ANR	3356438	CompoundStatement		4:22:54:54	3356427	1					
ANR	3356439	Label	case PRE_STATE :	436:8:12309:12323	3356427	0	True				
ANR	3356440	Identifier	PRE_STATE		3356427	0					
ANR	3356441	ExpressionStatement	m_state = PASSIVE_STATE	438:12:12394:12417	3356427	1	True				
ANR	3356442	AssignmentExpression	m_state = PASSIVE_STATE		3356427	0		=			
ANR	3356443	Identifier	m_state		3356427	0					
ANR	3356444	Identifier	PASSIVE_STATE		3356427	1					
ANR	3356445	ExpressionStatement	"printStep ( ""PRE_STATE"" , ""PASSIVE_STATE"" )"	439:12:12431:12469	3356427	2	True				
ANR	3356446	CallExpression	"printStep ( ""PRE_STATE"" , ""PASSIVE_STATE"" )"		3356427	0					
ANR	3356447	Callee	printStep		3356427	0					
ANR	3356448	Identifier	printStep		3356427	0					
ANR	3356449	ArgumentList	"""PRE_STATE"""		3356427	1					
ANR	3356450	Argument	"""PRE_STATE"""		3356427	0					
ANR	3356451	PrimaryExpression	"""PRE_STATE"""		3356427	0					
ANR	3356452	Argument	"""PASSIVE_STATE"""		3356427	1					
ANR	3356453	PrimaryExpression	"""PASSIVE_STATE"""		3356427	0					
ANR	3356454	BreakStatement	break ;	440:12:12483:12488	3356427	3	True				
ANR	3356455	Label	case PASSIVE_STATE :	442:8:12499:12517	3356427	4	True				
ANR	3356456	Identifier	PASSIVE_STATE		3356427	0					
ANR	3356457	IfStatement	if ( receivedAliveList . IsEmpty ( ) || m_isPrimary )		3356427	5					
ANR	3356458	Condition	receivedAliveList . IsEmpty ( ) || m_isPrimary	443:16:12535:12576	3356427	0	True				
ANR	3356459	OrExpression	receivedAliveList . IsEmpty ( ) || m_isPrimary		3356427	0		||			
ANR	3356460	CallExpression	receivedAliveList . IsEmpty ( )		3356427	0					
ANR	3356461	Callee	receivedAliveList . IsEmpty		3356427	0					
ANR	3356462	MemberAccess	receivedAliveList . IsEmpty		3356427	0					
ANR	3356463	Identifier	receivedAliveList		3356427	0					
ANR	3356464	Identifier	IsEmpty		3356427	1					
ANR	3356465	ArgumentList			3356427	1					
ANR	3356466	Identifier	m_isPrimary		3356427	1					
ANR	3356467	CompoundStatement		12:61:335:335	3356427	1					
ANR	3356468	ExpressionStatement	m_state = ELECTION_STATE	444:16:12598:12622	3356427	0	True				
ANR	3356469	AssignmentExpression	m_state = ELECTION_STATE		3356427	0		=			
ANR	3356470	Identifier	m_state		3356427	0					
ANR	3356471	Identifier	ELECTION_STATE		3356427	1					
ANR	3356472	ExpressionStatement	"printStep ( ""PASSIVE_STATE"" , ""ELECTION_STATE"" )"	445:16:12640:12685	3356427	1	True				
ANR	3356473	CallExpression	"printStep ( ""PASSIVE_STATE"" , ""ELECTION_STATE"" )"		3356427	0					
ANR	3356474	Callee	printStep		3356427	0					
ANR	3356475	Identifier	printStep		3356427	0					
ANR	3356476	ArgumentList	"""PASSIVE_STATE"""		3356427	1					
ANR	3356477	Argument	"""PASSIVE_STATE"""		3356427	0					
ANR	3356478	PrimaryExpression	"""PASSIVE_STATE"""		3356427	0					
ANR	3356479	Argument	"""ELECTION_STATE"""		3356427	1					
ANR	3356480	PrimaryExpression	"""ELECTION_STATE"""		3356427	0					
ANR	3356481	ReturnStatement	return ;	447:16:12764:12770	3356427	2	True				
ANR	3356482	ElseStatement	else		3356427	0					
ANR	3356483	CompoundStatement		17:19:546:546	3356427	0					
ANR	3356484	ExpressionStatement	"printStep ( ""PASSIVE_STATE"" , ""PASSIVE_STATE"" )"	449:16:12809:12853	3356427	0	True				
ANR	3356485	CallExpression	"printStep ( ""PASSIVE_STATE"" , ""PASSIVE_STATE"" )"		3356427	0					
ANR	3356486	Callee	printStep		3356427	0					
ANR	3356487	Identifier	printStep		3356427	0					
ANR	3356488	ArgumentList	"""PASSIVE_STATE"""		3356427	1					
ANR	3356489	Argument	"""PASSIVE_STATE"""		3356427	0					
ANR	3356490	PrimaryExpression	"""PASSIVE_STATE"""		3356427	0					
ANR	3356491	Argument	"""PASSIVE_STATE"""		3356427	1					
ANR	3356492	PrimaryExpression	"""PASSIVE_STATE"""		3356427	0					
ANR	3356493	BreakStatement	break ;	452:12:12882:12887	3356427	6	True				
ANR	3356494	Label	case ELECTION_STATE :	453:8:12897:12916	3356427	7	True				
ANR	3356495	Identifier	ELECTION_STATE		3356427	0					
ANR	3356496	CompoundStatement		50:12:1623:1673	3356427	8					
ANR	3356497	IfStatement	if ( ! receivedAliveList . IsEmpty ( ) && ! m_isPrimary )		3356427	0					
ANR	3356498	Condition	! receivedAliveList . IsEmpty ( ) && ! m_isPrimary	455:7:12935:12978	3356427	0	True				
ANR	3356499	AndExpression	! receivedAliveList . IsEmpty ( ) && ! m_isPrimary		3356427	0		&&			
ANR	3356500	UnaryOperationExpression	! receivedAliveList . IsEmpty ( )		3356427	0					
ANR	3356501	UnaryOperator	!		3356427	0					
ANR	3356502	CallExpression	receivedAliveList . IsEmpty ( )		3356427	1					
ANR	3356503	Callee	receivedAliveList . IsEmpty		3356427	0					
ANR	3356504	MemberAccess	receivedAliveList . IsEmpty		3356427	0					
ANR	3356505	Identifier	receivedAliveList		3356427	0					
ANR	3356506	Identifier	IsEmpty		3356427	1					
ANR	3356507	ArgumentList			3356427	1					
ANR	3356508	UnaryOperationExpression	! m_isPrimary		3356427	1					
ANR	3356509	UnaryOperator	!		3356427	0					
ANR	3356510	Identifier	m_isPrimary		3356427	1					
ANR	3356511	CompoundStatement		24:54:737:737	3356427	1					
ANR	3356512	ExpressionStatement	m_state = PASSIVE_STATE	456:16:13000:13023	3356427	0	True				
ANR	3356513	AssignmentExpression	m_state = PASSIVE_STATE		3356427	0		=			
ANR	3356514	Identifier	m_state		3356427	0					
ANR	3356515	Identifier	PASSIVE_STATE		3356427	1					
ANR	3356516	ExpressionStatement	"printStep ( ""ELECTION_STATE"" , ""PASSIVE_STATE"" )"	457:16:13041:13084	3356427	1	True				
ANR	3356517	CallExpression	"printStep ( ""ELECTION_STATE"" , ""PASSIVE_STATE"" )"		3356427	0					
ANR	3356518	Callee	printStep		3356427	0					
ANR	3356519	Identifier	printStep		3356427	0					
ANR	3356520	ArgumentList	"""ELECTION_STATE"""		3356427	1					
ANR	3356521	Argument	"""ELECTION_STATE"""		3356427	0					
ANR	3356522	PrimaryExpression	"""ELECTION_STATE"""		3356427	0					
ANR	3356523	Argument	"""PASSIVE_STATE"""		3356427	1					
ANR	3356524	PrimaryExpression	"""PASSIVE_STATE"""		3356427	0					
ANR	3356525	BreakStatement	break ;	458:16:13102:13107	3356427	2	True				
ANR	3356526	IfStatement	if ( checkList ( & receivedIdList ) == false )		3356427	1					
ANR	3356527	Condition	checkList ( & receivedIdList ) == false	462:16:13184:13218	3356427	0	True				
ANR	3356528	EqualityExpression	checkList ( & receivedIdList ) == false		3356427	0		==			
ANR	3356529	CallExpression	checkList ( & receivedIdList )		3356427	0					
ANR	3356530	Callee	checkList		3356427	0					
ANR	3356531	Identifier	checkList		3356427	0					
ANR	3356532	ArgumentList	& receivedIdList		3356427	1					
ANR	3356533	Argument	& receivedIdList		3356427	0					
ANR	3356534	UnaryOperationExpression	& receivedIdList		3356427	0					
ANR	3356535	UnaryOperator	&		3356427	0					
ANR	3356536	Identifier	receivedIdList		3356427	1					
ANR	3356537	Identifier	false		3356427	1					
ANR	3356538	CompoundStatement		31:54:977:977	3356427	1					
ANR	3356539	ExpressionStatement	m_state = PASSIVE_STATE	464:16:13295:13318	3356427	0	True				
ANR	3356540	AssignmentExpression	m_state = PASSIVE_STATE		3356427	0		=			
ANR	3356541	Identifier	m_state		3356427	0					
ANR	3356542	Identifier	PASSIVE_STATE		3356427	1					
ANR	3356543	ExpressionStatement	"printStep ( ""ELECTION_STATE"" , ""PASSIVE_STATE"" )"	465:16:13336:13379	3356427	1	True				
ANR	3356544	CallExpression	"printStep ( ""ELECTION_STATE"" , ""PASSIVE_STATE"" )"		3356427	0					
ANR	3356545	Callee	printStep		3356427	0					
ANR	3356546	Identifier	printStep		3356427	0					
ANR	3356547	ArgumentList	"""ELECTION_STATE"""		3356427	1					
ANR	3356548	Argument	"""ELECTION_STATE"""		3356427	0					
ANR	3356549	PrimaryExpression	"""ELECTION_STATE"""		3356427	0					
ANR	3356550	Argument	"""PASSIVE_STATE"""		3356427	1					
ANR	3356551	PrimaryExpression	"""PASSIVE_STATE"""		3356427	0					
ANR	3356552	BreakStatement	break ;	466:16:13397:13402	3356427	2	True				
ANR	3356553	IfStatement	if ( m_standAloneMode && m_useReplication )		3356427	2					
ANR	3356554	Condition	m_standAloneMode && m_useReplication	469:7:13426:13461	3356427	0	True				
ANR	3356555	AndExpression	m_standAloneMode && m_useReplication		3356427	0		&&			
ANR	3356556	Identifier	m_standAloneMode		3356427	0					
ANR	3356557	Identifier	m_useReplication		3356427	1					
ANR	3356558	CompoundStatement		38:46:1220:1220	3356427	1					
ANR	3356559	ExpressionStatement	sendReplicationCommand ( HAD_AFTER_ELECTION_STATE )	470:16:13483:13533	3356427	0	True				
ANR	3356560	CallExpression	sendReplicationCommand ( HAD_AFTER_ELECTION_STATE )		3356427	0					
ANR	3356561	Callee	sendReplicationCommand		3356427	0					
ANR	3356562	Identifier	sendReplicationCommand		3356427	0					
ANR	3356563	ArgumentList	HAD_AFTER_ELECTION_STATE		3356427	1					
ANR	3356564	Argument	HAD_AFTER_ELECTION_STATE		3356427	0					
ANR	3356565	Identifier	HAD_AFTER_ELECTION_STATE		3356427	0					
ANR	3356566	IfStatement	if ( m_standAloneMode )		3356427	3					
ANR	3356567	Condition	m_standAloneMode	473:16:13600:13615	3356427	0	True				
ANR	3356568	Identifier	m_standAloneMode		3356427	0					
ANR	3356569	CompoundStatement		42:35:1374:1374	3356427	1					
ANR	3356570	ExpressionStatement	m_state = LEADER_STATE	474:16:13637:13659	3356427	0	True				
ANR	3356571	AssignmentExpression	m_state = LEADER_STATE		3356427	0		=			
ANR	3356572	Identifier	m_state		3356427	0					
ANR	3356573	Identifier	LEADER_STATE		3356427	1					
ANR	3356574	ExpressionStatement	"updateCollectorsClassAd ( ""True"" )"	475:16:13677:13710	3356427	1	True				
ANR	3356575	CallExpression	"updateCollectorsClassAd ( ""True"" )"		3356427	0					
ANR	3356576	Callee	updateCollectorsClassAd		3356427	0					
ANR	3356577	Identifier	updateCollectorsClassAd		3356427	0					
ANR	3356578	ArgumentList	"""True"""		3356427	1					
ANR	3356579	Argument	"""True"""		3356427	0					
ANR	3356580	PrimaryExpression	"""True"""		3356427	0					
ANR	3356581	ExpressionStatement	"printStep ( ""ELECTION_STATE"" , ""LEADER_STATE"" )"	476:4:13716:13758	3356427	2	True				
ANR	3356582	CallExpression	"printStep ( ""ELECTION_STATE"" , ""LEADER_STATE"" )"		3356427	0					
ANR	3356583	Callee	printStep		3356427	0					
ANR	3356584	Identifier	printStep		3356427	0					
ANR	3356585	ArgumentList	"""ELECTION_STATE"""		3356427	1					
ANR	3356586	Argument	"""ELECTION_STATE"""		3356427	0					
ANR	3356587	PrimaryExpression	"""ELECTION_STATE"""		3356427	0					
ANR	3356588	Argument	"""LEADER_STATE"""		3356427	1					
ANR	3356589	PrimaryExpression	"""LEADER_STATE"""		3356427	0					
ANR	3356590	BreakStatement	break ;	477:16:13776:13781	3356427	3	True				
ANR	3356591	IdentifierDeclStatement	int returnValue = sendControlCmdToMaster ( CHILD_ON ) ;	481:12:13868:13918	3356427	4	True				
ANR	3356592	IdentifierDecl	returnValue = sendControlCmdToMaster ( CHILD_ON )		3356427	0					
ANR	3356593	IdentifierDeclType	int		3356427	0					
ANR	3356594	Identifier	returnValue		3356427	1					
ANR	3356595	AssignmentExpression	returnValue = sendControlCmdToMaster ( CHILD_ON )		3356427	2		=			
ANR	3356596	Identifier	returnValue		3356427	0					
ANR	3356597	CallExpression	sendControlCmdToMaster ( CHILD_ON )		3356427	1					
ANR	3356598	Callee	sendControlCmdToMaster		3356427	0					
ANR	3356599	Identifier	sendControlCmdToMaster		3356427	0					
ANR	3356600	ArgumentList	CHILD_ON		3356427	1					
ANR	3356601	Argument	CHILD_ON		3356427	0					
ANR	3356602	Identifier	CHILD_ON		3356427	0					
ANR	3356603	IfStatement	if ( returnValue == TRUE && m_useReplication )		3356427	5					
ANR	3356604	Condition	returnValue == TRUE && m_useReplication	483:16:13937:13975	3356427	0	True				
ANR	3356605	AndExpression	returnValue == TRUE && m_useReplication		3356427	0		&&			
ANR	3356606	EqualityExpression	returnValue == TRUE		3356427	0		==			
ANR	3356607	Identifier	returnValue		3356427	0					
ANR	3356608	Identifier	TRUE		3356427	1					
ANR	3356609	Identifier	m_useReplication		3356427	1					
ANR	3356610	CompoundStatement		52:57:1733:1733	3356427	1					
ANR	3356611	ExpressionStatement	sendReplicationCommand ( HAD_AFTER_ELECTION_STATE )	484:16:13996:14046	3356427	0	True				
ANR	3356612	CallExpression	sendReplicationCommand ( HAD_AFTER_ELECTION_STATE )		3356427	0					
ANR	3356613	Callee	sendReplicationCommand		3356427	0					
ANR	3356614	Identifier	sendReplicationCommand		3356427	0					
ANR	3356615	ArgumentList	HAD_AFTER_ELECTION_STATE		3356427	1					
ANR	3356616	Argument	HAD_AFTER_ELECTION_STATE		3356427	0					
ANR	3356617	Identifier	HAD_AFTER_ELECTION_STATE		3356427	0					
ANR	3356618	IfStatement	if ( returnValue == TRUE )		3356427	6					
ANR	3356619	Condition	returnValue == TRUE	486:16:14078:14096	3356427	0	True				
ANR	3356620	EqualityExpression	returnValue == TRUE		3356427	0		==			
ANR	3356621	Identifier	returnValue		3356427	0					
ANR	3356622	Identifier	TRUE		3356427	1					
ANR	3356623	CompoundStatement		55:38:1855:1855	3356427	1					
ANR	3356624	ExpressionStatement	m_state = LEADER_STATE	487:16:14118:14140	3356427	0	True				
ANR	3356625	AssignmentExpression	m_state = LEADER_STATE		3356427	0		=			
ANR	3356626	Identifier	m_state		3356427	0					
ANR	3356627	Identifier	LEADER_STATE		3356427	1					
ANR	3356628	ExpressionStatement	"updateCollectorsClassAd ( ""True"" )"	488:16:14158:14191	3356427	1	True				
ANR	3356629	CallExpression	"updateCollectorsClassAd ( ""True"" )"		3356427	0					
ANR	3356630	Callee	updateCollectorsClassAd		3356427	0					
ANR	3356631	Identifier	updateCollectorsClassAd		3356427	0					
ANR	3356632	ArgumentList	"""True"""		3356427	1					
ANR	3356633	Argument	"""True"""		3356427	0					
ANR	3356634	PrimaryExpression	"""True"""		3356427	0					
ANR	3356635	ExpressionStatement	"printStep ( ""ELECTION_STATE"" , ""LEADER_STATE"" )"	489:16:14209:14254	3356427	2	True				
ANR	3356636	CallExpression	"printStep ( ""ELECTION_STATE"" , ""LEADER_STATE"" )"		3356427	0					
ANR	3356637	Callee	printStep		3356427	0					
ANR	3356638	Identifier	printStep		3356427	0					
ANR	3356639	ArgumentList	"""ELECTION_STATE"""		3356427	1					
ANR	3356640	Argument	"""ELECTION_STATE"""		3356427	0					
ANR	3356641	PrimaryExpression	"""ELECTION_STATE"""		3356427	0					
ANR	3356642	Argument	"""LEADER_STATE"""		3356427	1					
ANR	3356643	PrimaryExpression	"""LEADER_STATE"""		3356427	0					
ANR	3356644	ElseStatement	else		3356427	0					
ANR	3356645	CompoundStatement		59:19:2030:2030	3356427	0					
ANR	3356646	Statement	dprintf	494:16:14479:14485	3356427	0	True				
ANR	3356647	Statement	(	494:23:14486:14486	3356427	1	True				
ANR	3356648	Statement	D_FULLDEBUG	494:25:14488:14498	3356427	2	True				
ANR	3356649	Statement	","	494:36:14499:14499	3356427	3	True				
ANR	3356650	Statement	"""id %d, cannot send CHILD_ON cmd,"""	495:7:14508:14541	3356427	4	True				
ANR	3356651	Statement	""" stay in ELECTION state\\n"""	496:7:14550:14576	3356427	5	True				
ANR	3356652	Statement	","	496:34:14577:14577	3356427	6	True				
ANR	3356653	Statement	daemonCore	497:20:14599:14608	3356427	7	True				
ANR	3356654	Statement	->	497:30:14609:14610	3356427	8	True				
ANR	3356655	Statement	getpid	497:32:14611:14616	3356427	9	True				
ANR	3356656	Statement	(	497:38:14617:14617	3356427	10	True				
ANR	3356657	Statement	)	497:39:14618:14618	3356427	11	True				
ANR	3356658	Statement	)	497:41:14620:14620	3356427	12	True				
ANR	3356659	ExpressionStatement		497:42:14621:14621	3356427	13	True				
ANR	3356660	ExpressionStatement	"utilCrucialError ( """" )"	498:16:14639:14659	3356427	14	True				
ANR	3356661	CallExpression	"utilCrucialError ( """" )"		3356427	0					
ANR	3356662	Callee	utilCrucialError		3356427	0					
ANR	3356663	Identifier	utilCrucialError		3356427	0					
ANR	3356664	ArgumentList	""""""		3356427	1					
ANR	3356665	Argument	""""""		3356427	0					
ANR	3356666	PrimaryExpression	""""""		3356427	0					
ANR	3356667	BreakStatement	break ;	501:12:14688:14693	3356427	7	True				
ANR	3356668	Label	case LEADER_STATE :	503:8:14707:14724	3356427	9	True				
ANR	3356669	Identifier	LEADER_STATE		3356427	0					
ANR	3356670	IfStatement	if ( ! receivedAliveList . IsEmpty ( ) && checkList ( & receivedAliveList ) == false )		3356427	10					
ANR	3356671	Condition	! receivedAliveList . IsEmpty ( ) && checkList ( & receivedAliveList ) == false	504:10:14736:14824	3356427	0	True				
ANR	3356672	AndExpression	! receivedAliveList . IsEmpty ( ) && checkList ( & receivedAliveList ) == false		3356427	0		&&			
ANR	3356673	UnaryOperationExpression	! receivedAliveList . IsEmpty ( )		3356427	0					
ANR	3356674	UnaryOperator	!		3356427	0					
ANR	3356675	CallExpression	receivedAliveList . IsEmpty ( )		3356427	1					
ANR	3356676	Callee	receivedAliveList . IsEmpty		3356427	0					
ANR	3356677	MemberAccess	receivedAliveList . IsEmpty		3356427	0					
ANR	3356678	Identifier	receivedAliveList		3356427	0					
ANR	3356679	Identifier	IsEmpty		3356427	1					
ANR	3356680	ArgumentList			3356427	1					
ANR	3356681	EqualityExpression	checkList ( & receivedAliveList ) == false		3356427	1		==			
ANR	3356682	CallExpression	checkList ( & receivedAliveList )		3356427	0					
ANR	3356683	Callee	checkList		3356427	0					
ANR	3356684	Identifier	checkList		3356427	0					
ANR	3356685	ArgumentList	& receivedAliveList		3356427	1					
ANR	3356686	Argument	& receivedAliveList		3356427	0					
ANR	3356687	UnaryOperationExpression	& receivedAliveList		3356427	0					
ANR	3356688	UnaryOperator	&		3356427	0					
ANR	3356689	Identifier	receivedAliveList		3356427	1					
ANR	3356690	Identifier	false		3356427	1					
ANR	3356691	CompoundStatement		74:59:2583:2583	3356427	1					
ANR	3356692	ExpressionStatement	"printStep ( ""LEADER_STATE"" , ""PASSIVE_STATE"" )"	507:16:14892:14935	3356427	0	True				
ANR	3356693	CallExpression	"printStep ( ""LEADER_STATE"" , ""PASSIVE_STATE"" )"		3356427	0					
ANR	3356694	Callee	printStep		3356427	0					
ANR	3356695	Identifier	printStep		3356427	0					
ANR	3356696	ArgumentList	"""LEADER_STATE"""		3356427	1					
ANR	3356697	Argument	"""LEADER_STATE"""		3356427	0					
ANR	3356698	PrimaryExpression	"""LEADER_STATE"""		3356427	0					
ANR	3356699	Argument	"""PASSIVE_STATE"""		3356427	1					
ANR	3356700	PrimaryExpression	"""PASSIVE_STATE"""		3356427	0					
ANR	3356701	ExpressionStatement	m_state = PASSIVE_STATE	508:16:14953:14976	3356427	1	True				
ANR	3356702	AssignmentExpression	m_state = PASSIVE_STATE		3356427	0		=			
ANR	3356703	Identifier	m_state		3356427	0					
ANR	3356704	Identifier	PASSIVE_STATE		3356427	1					
ANR	3356705	ExpressionStatement	"updateCollectorsClassAd ( ""False"" )"	509:16:14994:15028	3356427	2	True				
ANR	3356706	CallExpression	"updateCollectorsClassAd ( ""False"" )"		3356427	0					
ANR	3356707	Callee	updateCollectorsClassAd		3356427	0					
ANR	3356708	Identifier	updateCollectorsClassAd		3356427	0					
ANR	3356709	ArgumentList	"""False"""		3356427	1					
ANR	3356710	Argument	"""False"""		3356427	0					
ANR	3356711	PrimaryExpression	"""False"""		3356427	0					
ANR	3356712	IfStatement	if ( m_useReplication )		3356427	3					
ANR	3356713	Condition	m_useReplication	511:20:15051:15066	3356427	0	True				
ANR	3356714	Identifier	m_useReplication		3356427	0					
ANR	3356715	CompoundStatement		80:39:2825:2825	3356427	1					
ANR	3356716	ExpressionStatement	sendReplicationCommand ( HAD_AFTER_LEADER_STATE )	512:20:15092:15140	3356427	0	True				
ANR	3356717	CallExpression	sendReplicationCommand ( HAD_AFTER_LEADER_STATE )		3356427	0					
ANR	3356718	Callee	sendReplicationCommand		3356427	0					
ANR	3356719	Identifier	sendReplicationCommand		3356427	0					
ANR	3356720	ArgumentList	HAD_AFTER_LEADER_STATE		3356427	1					
ANR	3356721	Argument	HAD_AFTER_LEADER_STATE		3356427	0					
ANR	3356722	Identifier	HAD_AFTER_LEADER_STATE		3356427	0					
ANR	3356723	IfStatement	if ( ! m_standAloneMode )		3356427	4					
ANR	3356724	Condition	! m_standAloneMode	514:20:15180:15197	3356427	0	True				
ANR	3356725	UnaryOperationExpression	! m_standAloneMode		3356427	0					
ANR	3356726	UnaryOperator	!		3356427	0					
ANR	3356727	Identifier	m_standAloneMode		3356427	1					
ANR	3356728	CompoundStatement		83:41:2956:2956	3356427	1					
ANR	3356729	ExpressionStatement	sendControlCmdToMaster ( CHILD_OFF_FAST )	515:20:15223:15263	3356427	0	True				
ANR	3356730	CallExpression	sendControlCmdToMaster ( CHILD_OFF_FAST )		3356427	0					
ANR	3356731	Callee	sendControlCmdToMaster		3356427	0					
ANR	3356732	Identifier	sendControlCmdToMaster		3356427	0					
ANR	3356733	ArgumentList	CHILD_OFF_FAST		3356427	1					
ANR	3356734	Argument	CHILD_OFF_FAST		3356427	0					
ANR	3356735	Identifier	CHILD_OFF_FAST		3356427	0					
ANR	3356736	BreakStatement	break ;	518:16:15300:15305	3356427	5	True				
ANR	3356737	IfStatement	if ( m_useReplication )		3356427	11					
ANR	3356738	Condition	m_useReplication	520:16:15337:15352	3356427	0	True				
ANR	3356739	Identifier	m_useReplication		3356427	0					
ANR	3356740	CompoundStatement		89:35:3111:3111	3356427	1					
ANR	3356741	ExpressionStatement	sendReplicationCommand ( HAD_IN_LEADER_STATE )	521:16:15374:15419	3356427	0	True				
ANR	3356742	CallExpression	sendReplicationCommand ( HAD_IN_LEADER_STATE )		3356427	0					
ANR	3356743	Callee	sendReplicationCommand		3356427	0					
ANR	3356744	Identifier	sendReplicationCommand		3356427	0					
ANR	3356745	ArgumentList	HAD_IN_LEADER_STATE		3356427	1					
ANR	3356746	Argument	HAD_IN_LEADER_STATE		3356427	0					
ANR	3356747	Identifier	HAD_IN_LEADER_STATE		3356427	0					
ANR	3356748	ExpressionStatement	"printStep ( ""LEADER_STATE"" , ""LEADER_STATE"" )"	523:12:15447:15489	3356427	12	True				
ANR	3356749	CallExpression	"printStep ( ""LEADER_STATE"" , ""LEADER_STATE"" )"		3356427	0					
ANR	3356750	Callee	printStep		3356427	0					
ANR	3356751	Identifier	printStep		3356427	0					
ANR	3356752	ArgumentList	"""LEADER_STATE"""		3356427	1					
ANR	3356753	Argument	"""LEADER_STATE"""		3356427	0					
ANR	3356754	PrimaryExpression	"""LEADER_STATE"""		3356427	0					
ANR	3356755	Argument	"""LEADER_STATE"""		3356427	1					
ANR	3356756	PrimaryExpression	"""LEADER_STATE"""		3356427	0					
ANR	3356757	BreakStatement	break ;	525:12:15504:15509	3356427	13	True				
ANR	3356758	ExpressionStatement	clearBuffers ( )	527:4:15532:15546	3356427	2	True				
ANR	3356759	CallExpression	clearBuffers ( )		3356427	0					
ANR	3356760	Callee	clearBuffers		3356427	0					
ANR	3356761	Identifier	clearBuffers		3356427	0					
ANR	3356762	ArgumentList			3356427	1					
ANR	3356763	ReturnType	void		3356427	1					
ANR	3356764	Identifier	HADStateMachine :: step		3356427	2					
ANR	3356765	ParameterList			3356427	3					
ANR	3356766	CFGEntryNode	ENTRY		3356427		True				
ANR	3356767	CFGExitNode	EXIT		3356427		True				
ANR	3356768	Symbol	LEADER_STATE		3356427						
ANR	3356769	Symbol	returnValue		3356427						
ANR	3356770	Symbol	receivedAliveList . IsEmpty		3356427						
ANR	3356771	Symbol	false		3356427						
ANR	3356772	Symbol	m_isPrimary		3356427						
ANR	3356773	Symbol	TRUE		3356427						
ANR	3356774	Symbol	& receivedIdList		3356427						
ANR	3356775	Symbol	& receivedAliveList		3356427						
ANR	3356776	Symbol	HAD_AFTER_ELECTION_STATE		3356427						
ANR	3356777	Symbol	m_state		3356427						
ANR	3356778	Symbol	m_standAloneMode		3356427						
ANR	3356779	Symbol	CHILD_ON		3356427						
ANR	3356780	Symbol	ELECTION_STATE		3356427						
ANR	3356781	Symbol	HAD_IN_LEADER_STATE		3356427						
ANR	3356782	Symbol	CHILD_OFF_FAST		3356427						
ANR	3356783	Symbol	PASSIVE_STATE		3356427						
ANR	3356784	Symbol	checkList		3356427						
ANR	3356785	Symbol	receivedAliveList		3356427						
ANR	3356786	Symbol	HAD_AFTER_LEADER_STATE		3356427						
ANR	3356787	Symbol	m_useReplication		3356427						
ANR	3356788	Symbol	sendControlCmdToMaster		3356427						
ANR	3356789	Function	HADStateMachine :: sendMessages	533:0:15628:15878							
ANR	3356790	FunctionDef	HADStateMachine :: sendMessages ()		3356789	0					
ANR	3356791	CompoundStatement		535:0:15669:15878	3356789	0					
ANR	3356792	SwitchStatement	switch ( m_state )		3356789	0					
ANR	3356793	Condition	m_state	536:11:15682:15688	3356789	0	True				
ANR	3356794	Identifier	m_state		3356789	0					
ANR	3356795	CompoundStatement		2:21:22:22	3356789	1					
ANR	3356796	Label	case ELECTION_STATE :	537:3:15697:15716	3356789	0	True				
ANR	3356797	Identifier	ELECTION_STATE		3356789	0					
ANR	3356798	ReturnStatement	return sendCommandToOthers ( HAD_SEND_ID_CMD ) ;	538:4:15722:15767	3356789	1	True				
ANR	3356799	CallExpression	sendCommandToOthers ( HAD_SEND_ID_CMD )		3356789	0					
ANR	3356800	Callee	sendCommandToOthers		3356789	0					
ANR	3356801	Identifier	sendCommandToOthers		3356789	0					
ANR	3356802	ArgumentList	HAD_SEND_ID_CMD		3356789	1					
ANR	3356803	Argument	HAD_SEND_ID_CMD		3356789	0					
ANR	3356804	Identifier	HAD_SEND_ID_CMD		3356789	0					
ANR	3356805	Label	case LEADER_STATE :	539:3:15772:15789	3356789	2	True				
ANR	3356806	Identifier	LEADER_STATE		3356789	0					
ANR	3356807	ReturnStatement	return sendCommandToOthers ( HAD_ALIVE_CMD ) ;	540:4:15795:15839	3356789	3	True				
ANR	3356808	CallExpression	sendCommandToOthers ( HAD_ALIVE_CMD )		3356789	0					
ANR	3356809	Callee	sendCommandToOthers		3356789	0					
ANR	3356810	Identifier	sendCommandToOthers		3356789	0					
ANR	3356811	ArgumentList	HAD_ALIVE_CMD		3356789	1					
ANR	3356812	Argument	HAD_ALIVE_CMD		3356789	0					
ANR	3356813	Identifier	HAD_ALIVE_CMD		3356789	0					
ANR	3356814	Label	default :	541:3:15844:15852	3356789	4	True				
ANR	3356815	Identifier	default		3356789	0					
ANR	3356816	ReturnStatement	return false ;	542:4:15858:15870	3356789	5	True				
ANR	3356817	Identifier	false		3356789	0					
ANR	3356818	ReturnType	bool		3356789	1					
ANR	3356819	Identifier	HADStateMachine :: sendMessages		3356789	2					
ANR	3356820	ParameterList			3356789	3					
ANR	3356821	CFGEntryNode	ENTRY		3356789		True				
ANR	3356822	CFGExitNode	EXIT		3356789		True				
ANR	3356823	Symbol	m_state		3356789						
ANR	3356824	Symbol	false		3356789						
ANR	3356825	Symbol	HAD_ALIVE_CMD		3356789						
ANR	3356826	Symbol	HAD_SEND_ID_CMD		3356789						
ANR	3356827	Symbol	sendCommandToOthers		3356789						
ANR	3356828	Function	HADStateMachine :: sendCommandToOthers	551:0:16039:17255							
ANR	3356829	FunctionDef	HADStateMachine :: sendCommandToOthers (int comm)		3356828	0					
ANR	3356830	CompoundStatement		553:0:16093:17255	3356828	0					
ANR	3356831	IdentifierDeclStatement	char * addr ;	555:4:16100:16110	3356828	0	True				
ANR	3356832	IdentifierDecl	* addr		3356828	0					
ANR	3356833	IdentifierDeclType	char *		3356828	0					
ANR	3356834	Identifier	addr		3356828	1					
ANR	3356835	ExpressionStatement	m_otherHadIps . rewind ( )	556:4:16116:16138	3356828	1	True				
ANR	3356836	CallExpression	m_otherHadIps . rewind ( )		3356828	0					
ANR	3356837	Callee	m_otherHadIps . rewind		3356828	0					
ANR	3356838	MemberAccess	m_otherHadIps . rewind		3356828	0					
ANR	3356839	Identifier	m_otherHadIps		3356828	0					
ANR	3356840	Identifier	rewind		3356828	1					
ANR	3356841	ArgumentList			3356828	1					
ANR	3356842	WhileStatement	while ( ( addr = m_otherHadIps . next ( ) ) )		3356828	2					
ANR	3356843	Condition	addr = m_otherHadIps . next ( )	557:11:16151:16179	3356828	0	True				
ANR	3356844	AssignmentExpression	addr = m_otherHadIps . next ( )		3356828	0		=			
ANR	3356845	Identifier	addr		3356828	0					
ANR	3356846	CallExpression	m_otherHadIps . next ( )		3356828	1					
ANR	3356847	Callee	m_otherHadIps . next		3356828	0					
ANR	3356848	MemberAccess	m_otherHadIps . next		3356828	0					
ANR	3356849	Identifier	m_otherHadIps		3356828	0					
ANR	3356850	Identifier	next		3356828	1					
ANR	3356851	ArgumentList			3356828	1					
ANR	3356852	CompoundStatement		23:8:580:594	3356828	1					
ANR	3356853	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""send command %s(%d) to %s\\n"" , utilToString ( comm ) , comm , addr )"	559:8:16194:16281	3356828	0	True				
ANR	3356854	CallExpression	"dprintf ( D_FULLDEBUG , ""send command %s(%d) to %s\\n"" , utilToString ( comm ) , comm , addr )"		3356828	0					
ANR	3356855	Callee	dprintf		3356828	0					
ANR	3356856	Identifier	dprintf		3356828	0					
ANR	3356857	ArgumentList	D_FULLDEBUG		3356828	1					
ANR	3356858	Argument	D_FULLDEBUG		3356828	0					
ANR	3356859	Identifier	D_FULLDEBUG		3356828	0					
ANR	3356860	Argument	"""send command %s(%d) to %s\\n"""		3356828	1					
ANR	3356861	PrimaryExpression	"""send command %s(%d) to %s\\n"""		3356828	0					
ANR	3356862	Argument	utilToString ( comm )		3356828	2					
ANR	3356863	CallExpression	utilToString ( comm )		3356828	0					
ANR	3356864	Callee	utilToString		3356828	0					
ANR	3356865	Identifier	utilToString		3356828	0					
ANR	3356866	ArgumentList	comm		3356828	1					
ANR	3356867	Argument	comm		3356828	0					
ANR	3356868	Identifier	comm		3356828	0					
ANR	3356869	Argument	comm		3356828	3					
ANR	3356870	Identifier	comm		3356828	0					
ANR	3356871	Argument	addr		3356828	4					
ANR	3356872	Identifier	addr		3356828	0					
ANR	3356873	IdentifierDeclStatement	"Daemon d ( DT_ANY , addr ) ;"	562:8:16292:16316	3356828	1	True				
ANR	3356874	IdentifierDecl	"d ( DT_ANY , addr )"		3356828	0					
ANR	3356875	IdentifierDeclType	Daemon		3356828	0					
ANR	3356876	Identifier	d		3356828	1					
ANR	3356877	Expression	"DT_ANY , addr"		3356828	2					
ANR	3356878	Identifier	DT_ANY		3356828	0					
ANR	3356879	Identifier	addr		3356828	1					
ANR	3356880	IdentifierDeclStatement	ReliSock sock ;	563:8:16326:16339	3356828	2	True				
ANR	3356881	IdentifierDecl	sock		3356828	0					
ANR	3356882	IdentifierDeclType	ReliSock		3356828	0					
ANR	3356883	Identifier	sock		3356828	1					
ANR	3356884	ExpressionStatement	sock . timeout ( m_connectionTimeout )	565:8:16350:16385	3356828	3	True				
ANR	3356885	CallExpression	sock . timeout ( m_connectionTimeout )		3356828	0					
ANR	3356886	Callee	sock . timeout		3356828	0					
ANR	3356887	MemberAccess	sock . timeout		3356828	0					
ANR	3356888	Identifier	sock		3356828	0					
ANR	3356889	Identifier	timeout		3356828	1					
ANR	3356890	ArgumentList	m_connectionTimeout		3356828	1					
ANR	3356891	Argument	m_connectionTimeout		3356828	0					
ANR	3356892	Identifier	m_connectionTimeout		3356828	0					
ANR	3356893	ExpressionStatement	sock . doNotEnforceMinimalCONNECT_TIMEOUT ( )	566:8:16395:16436	3356828	4	True				
ANR	3356894	CallExpression	sock . doNotEnforceMinimalCONNECT_TIMEOUT ( )		3356828	0					
ANR	3356895	Callee	sock . doNotEnforceMinimalCONNECT_TIMEOUT		3356828	0					
ANR	3356896	MemberAccess	sock . doNotEnforceMinimalCONNECT_TIMEOUT		3356828	0					
ANR	3356897	Identifier	sock		3356828	0					
ANR	3356898	Identifier	doNotEnforceMinimalCONNECT_TIMEOUT		3356828	1					
ANR	3356899	ArgumentList			3356828	1					
ANR	3356900	IfStatement	"if ( ! sock . connect ( addr , 0 , false ) )"		3356828	5					
ANR	3356901	Condition	"! sock . connect ( addr , 0 , false )"	569:11:16503:16533	3356828	0	True				
ANR	3356902	UnaryOperationExpression	"! sock . connect ( addr , 0 , false )"		3356828	0					
ANR	3356903	UnaryOperator	!		3356828	0					
ANR	3356904	CallExpression	"sock . connect ( addr , 0 , false )"		3356828	1					
ANR	3356905	Callee	sock . connect		3356828	0					
ANR	3356906	MemberAccess	sock . connect		3356828	0					
ANR	3356907	Identifier	sock		3356828	0					
ANR	3356908	Identifier	connect		3356828	1					
ANR	3356909	ArgumentList	addr		3356828	1					
ANR	3356910	Argument	addr		3356828	0					
ANR	3356911	Identifier	addr		3356828	0					
ANR	3356912	Argument	0		3356828	1					
ANR	3356913	PrimaryExpression	0		3356828	0					
ANR	3356914	Argument	false		3356828	2					
ANR	3356915	Identifier	false		3356828	0					
ANR	3356916	CompoundStatement		17:44:442:442	3356828	1					
ANR	3356917	ExpressionStatement	"dprintf ( D_ALWAYS , ""cannot connect to addr %s\\n"" , addr )"	570:12:16550:16605	3356828	0	True				
ANR	3356918	CallExpression	"dprintf ( D_ALWAYS , ""cannot connect to addr %s\\n"" , addr )"		3356828	0					
ANR	3356919	Callee	dprintf		3356828	0					
ANR	3356920	Identifier	dprintf		3356828	0					
ANR	3356921	ArgumentList	D_ALWAYS		3356828	1					
ANR	3356922	Argument	D_ALWAYS		3356828	0					
ANR	3356923	Identifier	D_ALWAYS		3356828	0					
ANR	3356924	Argument	"""cannot connect to addr %s\\n"""		3356828	1					
ANR	3356925	PrimaryExpression	"""cannot connect to addr %s\\n"""		3356828	0					
ANR	3356926	Argument	addr		3356828	2					
ANR	3356927	Identifier	addr		3356828	0					
ANR	3356928	ExpressionStatement	sock . close ( )	571:12:16619:16631	3356828	1	True				
ANR	3356929	CallExpression	sock . close ( )		3356828	0					
ANR	3356930	Callee	sock . close		3356828	0					
ANR	3356931	MemberAccess	sock . close		3356828	0					
ANR	3356932	Identifier	sock		3356828	0					
ANR	3356933	Identifier	close		3356828	1					
ANR	3356934	ArgumentList			3356828	1					
ANR	3356935	ContinueStatement	continue ;	572:12:16645:16653	3356828	2	True				
ANR	3356936	IdentifierDeclStatement	int cmd = comm ;	575:8:16674:16688	3356828	6	True				
ANR	3356937	IdentifierDecl	cmd = comm		3356828	0					
ANR	3356938	IdentifierDeclType	int		3356828	0					
ANR	3356939	Identifier	cmd		3356828	1					
ANR	3356940	AssignmentExpression	cmd = comm		3356828	2		=			
ANR	3356941	Identifier	comm		3356828	0					
ANR	3356942	Identifier	comm		3356828	1					
ANR	3356943	IfStatement	"if ( ! d . startCommand ( cmd , & sock , m_connectionTimeout ) )"		3356828	7					
ANR	3356944	Condition	"! d . startCommand ( cmd , & sock , m_connectionTimeout )"	577:12:16767:16816	3356828	0	True				
ANR	3356945	UnaryOperationExpression	"! d . startCommand ( cmd , & sock , m_connectionTimeout )"		3356828	0					
ANR	3356946	UnaryOperator	!		3356828	0					
ANR	3356947	CallExpression	"d . startCommand ( cmd , & sock , m_connectionTimeout )"		3356828	1					
ANR	3356948	Callee	d . startCommand		3356828	0					
ANR	3356949	MemberAccess	d . startCommand		3356828	0					
ANR	3356950	Identifier	d		3356828	0					
ANR	3356951	Identifier	startCommand		3356828	1					
ANR	3356952	ArgumentList	cmd		3356828	1					
ANR	3356953	Argument	cmd		3356828	0					
ANR	3356954	Identifier	cmd		3356828	0					
ANR	3356955	Argument	& sock		3356828	1					
ANR	3356956	UnaryOperationExpression	& sock		3356828	0					
ANR	3356957	UnaryOperator	&		3356828	0					
ANR	3356958	Identifier	sock		3356828	1					
ANR	3356959	Argument	m_connectionTimeout		3356828	2					
ANR	3356960	Identifier	m_connectionTimeout		3356828	0					
ANR	3356961	CompoundStatement		25:65:726:726	3356828	1					
ANR	3356962	ExpressionStatement	"dprintf ( D_ALWAYS , ""cannot start command %s(%d) to addr %s\\n"" , utilToString ( comm ) , cmd , addr )"	578:12:16834:16930	3356828	0	True				
ANR	3356963	CallExpression	"dprintf ( D_ALWAYS , ""cannot start command %s(%d) to addr %s\\n"" , utilToString ( comm ) , cmd , addr )"		3356828	0					
ANR	3356964	Callee	dprintf		3356828	0					
ANR	3356965	Identifier	dprintf		3356828	0					
ANR	3356966	ArgumentList	D_ALWAYS		3356828	1					
ANR	3356967	Argument	D_ALWAYS		3356828	0					
ANR	3356968	Identifier	D_ALWAYS		3356828	0					
ANR	3356969	Argument	"""cannot start command %s(%d) to addr %s\\n"""		3356828	1					
ANR	3356970	PrimaryExpression	"""cannot start command %s(%d) to addr %s\\n"""		3356828	0					
ANR	3356971	Argument	utilToString ( comm )		3356828	2					
ANR	3356972	CallExpression	utilToString ( comm )		3356828	0					
ANR	3356973	Callee	utilToString		3356828	0					
ANR	3356974	Identifier	utilToString		3356828	0					
ANR	3356975	ArgumentList	comm		3356828	1					
ANR	3356976	Argument	comm		3356828	0					
ANR	3356977	Identifier	comm		3356828	0					
ANR	3356978	Argument	cmd		3356828	3					
ANR	3356979	Identifier	cmd		3356828	0					
ANR	3356980	Argument	addr		3356828	4					
ANR	3356981	Identifier	addr		3356828	0					
ANR	3356982	ExpressionStatement	sock . close ( )	580:12:16944:16956	3356828	1	True				
ANR	3356983	CallExpression	sock . close ( )		3356828	0					
ANR	3356984	Callee	sock . close		3356828	0					
ANR	3356985	MemberAccess	sock . close		3356828	0					
ANR	3356986	Identifier	sock		3356828	0					
ANR	3356987	Identifier	close		3356828	1					
ANR	3356988	ArgumentList			3356828	1					
ANR	3356989	ContinueStatement	continue ;	581:12:16970:16978	3356828	2	True				
ANR	3356990	IfStatement	if ( ! m_classAd . put ( sock ) || ! sock . end_of_message ( ) )		3356828	8					
ANR	3356991	Condition	! m_classAd . put ( sock ) || ! sock . end_of_message ( )	584:11:17002:17048	3356828	0	True				
ANR	3356992	OrExpression	! m_classAd . put ( sock ) || ! sock . end_of_message ( )		3356828	0		||			
ANR	3356993	UnaryOperationExpression	! m_classAd . put ( sock )		3356828	0					
ANR	3356994	UnaryOperator	!		3356828	0					
ANR	3356995	CallExpression	m_classAd . put ( sock )		3356828	1					
ANR	3356996	Callee	m_classAd . put		3356828	0					
ANR	3356997	MemberAccess	m_classAd . put		3356828	0					
ANR	3356998	Identifier	m_classAd		3356828	0					
ANR	3356999	Identifier	put		3356828	1					
ANR	3357000	ArgumentList	sock		3356828	1					
ANR	3357001	Argument	sock		3356828	0					
ANR	3357002	Identifier	sock		3356828	0					
ANR	3357003	UnaryOperationExpression	! sock . end_of_message ( )		3356828	1					
ANR	3357004	UnaryOperator	!		3356828	0					
ANR	3357005	CallExpression	sock . end_of_message ( )		3356828	1					
ANR	3357006	Callee	sock . end_of_message		3356828	0					
ANR	3357007	MemberAccess	sock . end_of_message		3356828	0					
ANR	3357008	Identifier	sock		3356828	0					
ANR	3357009	Identifier	end_of_message		3356828	1					
ANR	3357010	ArgumentList			3356828	1					
ANR	3357011	CompoundStatement		32:60:957:957	3356828	1					
ANR	3357012	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to send classad to peer\\n"" )"	585:12:17065:17119	3356828	0	True				
ANR	3357013	CallExpression	"dprintf ( D_ALWAYS , ""Failed to send classad to peer\\n"" )"		3356828	0					
ANR	3357014	Callee	dprintf		3356828	0					
ANR	3357015	Identifier	dprintf		3356828	0					
ANR	3357016	ArgumentList	D_ALWAYS		3356828	1					
ANR	3357017	Argument	D_ALWAYS		3356828	0					
ANR	3357018	Identifier	D_ALWAYS		3356828	0					
ANR	3357019	Argument	"""Failed to send classad to peer\\n"""		3356828	1					
ANR	3357020	PrimaryExpression	"""Failed to send classad to peer\\n"""		3356828	0					
ANR	3357021	ElseStatement	else		3356828	0					
ANR	3357022	CompoundStatement		34:15:1042:1042	3356828	0					
ANR	3357023	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Sent classad to peer\\n"" )"	587:12:17150:17197	3356828	0	True				
ANR	3357024	CallExpression	"dprintf ( D_FULLDEBUG , ""Sent classad to peer\\n"" )"		3356828	0					
ANR	3357025	Callee	dprintf		3356828	0					
ANR	3357026	Identifier	dprintf		3356828	0					
ANR	3357027	ArgumentList	D_FULLDEBUG		3356828	1					
ANR	3357028	Argument	D_FULLDEBUG		3356828	0					
ANR	3357029	Identifier	D_FULLDEBUG		3356828	0					
ANR	3357030	Argument	"""Sent classad to peer\\n"""		3356828	1					
ANR	3357031	PrimaryExpression	"""Sent classad to peer\\n"""		3356828	0					
ANR	3357032	ExpressionStatement	sock . close ( )	589:8:17217:17229	3356828	9	True				
ANR	3357033	CallExpression	sock . close ( )		3356828	0					
ANR	3357034	Callee	sock . close		3356828	0					
ANR	3357035	MemberAccess	sock . close		3356828	0					
ANR	3357036	Identifier	sock		3356828	0					
ANR	3357037	Identifier	close		3356828	1					
ANR	3357038	ArgumentList			3356828	1					
ANR	3357039	ReturnStatement	return true ;	592:4:17242:17253	3356828	3	True				
ANR	3357040	Identifier	true		3356828	0					
ANR	3357041	ReturnType	bool		3356828	1					
ANR	3357042	Identifier	HADStateMachine :: sendCommandToOthers		3356828	2					
ANR	3357043	ParameterList	int comm		3356828	3					
ANR	3357044	Parameter	int comm	552:38:16082:16089	3356828	0	True				
ANR	3357045	ParameterType	int		3356828	0					
ANR	3357046	Identifier	comm		3356828	1					
ANR	3357047	CFGEntryNode	ENTRY		3356828		True				
ANR	3357048	CFGExitNode	EXIT		3356828		True				
ANR	3357049	Symbol	comm		3356828						
ANR	3357050	Symbol	d		3356828						
ANR	3357051	Symbol	false		3356828						
ANR	3357052	Symbol	D_ALWAYS		3356828						
ANR	3357053	Symbol	D_FULLDEBUG		3356828						
ANR	3357054	Symbol	m_otherHadIps		3356828						
ANR	3357055	Symbol	utilToString		3356828						
ANR	3357056	Symbol	& sock		3356828						
ANR	3357057	Symbol	m_classAd . put		3356828						
ANR	3357058	Symbol	sock		3356828						
ANR	3357059	Symbol	d . startCommand		3356828						
ANR	3357060	Symbol	sock . connect		3356828						
ANR	3357061	Symbol	sock . end_of_message		3356828						
ANR	3357062	Symbol	true		3356828						
ANR	3357063	Symbol	cmd		3356828						
ANR	3357064	Symbol	addr		3356828						
ANR	3357065	Symbol	m_connectionTimeout		3356828						
ANR	3357066	Symbol	m_classAd		3356828						
ANR	3357067	Symbol	m_otherHadIps . next		3356828						
ANR	3357068	Function	HADStateMachine :: sendReplicationCommand	600:0:17440:18893							
ANR	3357069	FunctionDef	HADStateMachine :: sendReplicationCommand (int command)		3357068	0					
ANR	3357070	CompoundStatement		602:0:17500:18893	3357068	0					
ANR	3357071	IdentifierDeclStatement	ReliSock sock ;	603:4:17506:17519	3357068	0	True				
ANR	3357072	IdentifierDecl	sock		3357068	0					
ANR	3357073	IdentifierDeclType	ReliSock		3357068	0					
ANR	3357074	Identifier	sock		3357068	1					
ANR	3357075	ExpressionStatement	sock . timeout ( m_connectionTimeout )	605:4:17526:17561	3357068	1	True				
ANR	3357076	CallExpression	sock . timeout ( m_connectionTimeout )		3357068	0					
ANR	3357077	Callee	sock . timeout		3357068	0					
ANR	3357078	MemberAccess	sock . timeout		3357068	0					
ANR	3357079	Identifier	sock		3357068	0					
ANR	3357080	Identifier	timeout		3357068	1					
ANR	3357081	ArgumentList	m_connectionTimeout		3357068	1					
ANR	3357082	Argument	m_connectionTimeout		3357068	0					
ANR	3357083	Identifier	m_connectionTimeout		3357068	0					
ANR	3357084	ExpressionStatement	sock . doNotEnforceMinimalCONNECT_TIMEOUT ( )	606:4:17567:17608	3357068	2	True				
ANR	3357085	CallExpression	sock . doNotEnforceMinimalCONNECT_TIMEOUT ( )		3357068	0					
ANR	3357086	Callee	sock . doNotEnforceMinimalCONNECT_TIMEOUT		3357068	0					
ANR	3357087	MemberAccess	sock . doNotEnforceMinimalCONNECT_TIMEOUT		3357068	0					
ANR	3357088	Identifier	sock		3357068	0					
ANR	3357089	Identifier	doNotEnforceMinimalCONNECT_TIMEOUT		3357068	1					
ANR	3357090	ArgumentList			3357068	1					
ANR	3357091	IfStatement	if ( ! m_replicationDaemonSinfulString )		3357068	3					
ANR	3357092	Condition	! m_replicationDaemonSinfulString	609:6:17666:17697	3357068	0	True				
ANR	3357093	UnaryOperationExpression	! m_replicationDaemonSinfulString		3357068	0					
ANR	3357094	UnaryOperator	!		3357068	0					
ANR	3357095	Identifier	m_replicationDaemonSinfulString		3357068	1					
ANR	3357096	CompoundStatement		8:41:200:200	3357068	1					
ANR	3357097	ExpressionStatement	"EXCEPT ( ""HAD: Replication sinful string invalid!"" )"	610:2:17705:17756	3357068	0	True				
ANR	3357098	CallExpression	"EXCEPT ( ""HAD: Replication sinful string invalid!"" )"		3357068	0					
ANR	3357099	Callee	EXCEPT		3357068	0					
ANR	3357100	Identifier	EXCEPT		3357068	0					
ANR	3357101	ArgumentList	"""HAD: Replication sinful string invalid!"""		3357068	1					
ANR	3357102	Argument	"""HAD: Replication sinful string invalid!"""		3357068	0					
ANR	3357103	PrimaryExpression	"""HAD: Replication sinful string invalid!"""		3357068	0					
ANR	3357104	IfStatement	"if ( ! sock . connect ( m_replicationDaemonSinfulString , 0 , false ) )"		3357068	4					
ANR	3357105	Condition	"! sock . connect ( m_replicationDaemonSinfulString , 0 , false )"	612:7:17768:17824	3357068	0	True				
ANR	3357106	UnaryOperationExpression	"! sock . connect ( m_replicationDaemonSinfulString , 0 , false )"		3357068	0					
ANR	3357107	UnaryOperator	!		3357068	0					
ANR	3357108	CallExpression	"sock . connect ( m_replicationDaemonSinfulString , 0 , false )"		3357068	1					
ANR	3357109	Callee	sock . connect		3357068	0					
ANR	3357110	MemberAccess	sock . connect		3357068	0					
ANR	3357111	Identifier	sock		3357068	0					
ANR	3357112	Identifier	connect		3357068	1					
ANR	3357113	ArgumentList	m_replicationDaemonSinfulString		3357068	1					
ANR	3357114	Argument	m_replicationDaemonSinfulString		3357068	0					
ANR	3357115	Identifier	m_replicationDaemonSinfulString		3357068	0					
ANR	3357116	Argument	0		3357068	1					
ANR	3357117	PrimaryExpression	0		3357068	0					
ANR	3357118	Argument	false		3357068	2					
ANR	3357119	Identifier	false		3357068	0					
ANR	3357120	CompoundStatement		11:67:327:327	3357068	1					
ANR	3357121	ExpressionStatement	"dprintf ( D_ALWAYS , ""cannot connect to replication daemon, addr %s\\n"" , m_replicationDaemonSinfulString )"	613:8:17838:17951	3357068	0	True				
ANR	3357122	CallExpression	"dprintf ( D_ALWAYS , ""cannot connect to replication daemon, addr %s\\n"" , m_replicationDaemonSinfulString )"		3357068	0					
ANR	3357123	Callee	dprintf		3357068	0					
ANR	3357124	Identifier	dprintf		3357068	0					
ANR	3357125	ArgumentList	D_ALWAYS		3357068	1					
ANR	3357126	Argument	D_ALWAYS		3357068	0					
ANR	3357127	Identifier	D_ALWAYS		3357068	0					
ANR	3357128	Argument	"""cannot connect to replication daemon, addr %s\\n"""		3357068	1					
ANR	3357129	PrimaryExpression	"""cannot connect to replication daemon, addr %s\\n"""		3357068	0					
ANR	3357130	Argument	m_replicationDaemonSinfulString		3357068	2					
ANR	3357131	Identifier	m_replicationDaemonSinfulString		3357068	0					
ANR	3357132	ExpressionStatement	sock . close ( )	616:8:17961:17973	3357068	1	True				
ANR	3357133	CallExpression	sock . close ( )		3357068	0					
ANR	3357134	Callee	sock . close		3357068	0					
ANR	3357135	MemberAccess	sock . close		3357068	0					
ANR	3357136	Identifier	sock		3357068	0					
ANR	3357137	Identifier	close		3357068	1					
ANR	3357138	ArgumentList			3357068	1					
ANR	3357139	ReturnStatement	return false ;	618:8:17984:17996	3357068	2	True				
ANR	3357140	Identifier	false		3357068	0					
ANR	3357141	IdentifierDeclStatement	int cmd = command ;	621:4:18009:18026	3357068	5	True				
ANR	3357142	IdentifierDecl	cmd = command		3357068	0					
ANR	3357143	IdentifierDeclType	int		3357068	0					
ANR	3357144	Identifier	cmd		3357068	1					
ANR	3357145	AssignmentExpression	cmd = command		3357068	2		=			
ANR	3357146	Identifier	command		3357068	0					
ANR	3357147	Identifier	command		3357068	1					
ANR	3357148	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""send command %s(%d) to replication daemon %s\\n"" , utilToString ( cmd ) , cmd , m_replicationDaemonSinfulString )"	622:4:18032:18169	3357068	6	True				
ANR	3357149	CallExpression	"dprintf ( D_FULLDEBUG , ""send command %s(%d) to replication daemon %s\\n"" , utilToString ( cmd ) , cmd , m_replicationDaemonSinfulString )"		3357068	0					
ANR	3357150	Callee	dprintf		3357068	0					
ANR	3357151	Identifier	dprintf		3357068	0					
ANR	3357152	ArgumentList	D_FULLDEBUG		3357068	1					
ANR	3357153	Argument	D_FULLDEBUG		3357068	0					
ANR	3357154	Identifier	D_FULLDEBUG		3357068	0					
ANR	3357155	Argument	"""send command %s(%d) to replication daemon %s\\n"""		3357068	1					
ANR	3357156	PrimaryExpression	"""send command %s(%d) to replication daemon %s\\n"""		3357068	0					
ANR	3357157	Argument	utilToString ( cmd )		3357068	2					
ANR	3357158	CallExpression	utilToString ( cmd )		3357068	0					
ANR	3357159	Callee	utilToString		3357068	0					
ANR	3357160	Identifier	utilToString		3357068	0					
ANR	3357161	ArgumentList	cmd		3357068	1					
ANR	3357162	Argument	cmd		3357068	0					
ANR	3357163	Identifier	cmd		3357068	0					
ANR	3357164	Argument	cmd		3357068	3					
ANR	3357165	Identifier	cmd		3357068	0					
ANR	3357166	Argument	m_replicationDaemonSinfulString		3357068	4					
ANR	3357167	Identifier	m_replicationDaemonSinfulString		3357068	0					
ANR	3357168	IfStatement	"if ( ! ( m_masterDaemon -> startCommand ( cmd , & sock , m_connectionTimeout ) ) )"		3357068	7					
ANR	3357169	Condition	"! ( m_masterDaemon -> startCommand ( cmd , & sock , m_connectionTimeout ) )"	627:7:18240:18303	3357068	0	True				
ANR	3357170	UnaryOperationExpression	"! ( m_masterDaemon -> startCommand ( cmd , & sock , m_connectionTimeout ) )"		3357068	0					
ANR	3357171	UnaryOperator	!		3357068	0					
ANR	3357172	CallExpression	"m_masterDaemon -> startCommand ( cmd , & sock , m_connectionTimeout )"		3357068	1					
ANR	3357173	Callee	m_masterDaemon -> startCommand		3357068	0					
ANR	3357174	PtrMemberAccess	m_masterDaemon -> startCommand		3357068	0					
ANR	3357175	Identifier	m_masterDaemon		3357068	0					
ANR	3357176	Identifier	startCommand		3357068	1					
ANR	3357177	ArgumentList	cmd		3357068	1					
ANR	3357178	Argument	cmd		3357068	0					
ANR	3357179	Identifier	cmd		3357068	0					
ANR	3357180	Argument	& sock		3357068	1					
ANR	3357181	UnaryOperationExpression	& sock		3357068	0					
ANR	3357182	UnaryOperator	&		3357068	0					
ANR	3357183	Identifier	sock		3357068	1					
ANR	3357184	Argument	m_connectionTimeout		3357068	2					
ANR	3357185	Identifier	m_connectionTimeout		3357068	0					
ANR	3357186	CompoundStatement		26:74:806:806	3357068	1					
ANR	3357187	ExpressionStatement	"dprintf ( D_ALWAYS , ""cannot start command %s, addr %s\\n"" , utilToString ( cmd ) , m_replicationDaemonSinfulString )"	628:8:18317:18436	3357068	0	True				
ANR	3357188	CallExpression	"dprintf ( D_ALWAYS , ""cannot start command %s, addr %s\\n"" , utilToString ( cmd ) , m_replicationDaemonSinfulString )"		3357068	0					
ANR	3357189	Callee	dprintf		3357068	0					
ANR	3357190	Identifier	dprintf		3357068	0					
ANR	3357191	ArgumentList	D_ALWAYS		3357068	1					
ANR	3357192	Argument	D_ALWAYS		3357068	0					
ANR	3357193	Identifier	D_ALWAYS		3357068	0					
ANR	3357194	Argument	"""cannot start command %s, addr %s\\n"""		3357068	1					
ANR	3357195	PrimaryExpression	"""cannot start command %s, addr %s\\n"""		3357068	0					
ANR	3357196	Argument	utilToString ( cmd )		3357068	2					
ANR	3357197	CallExpression	utilToString ( cmd )		3357068	0					
ANR	3357198	Callee	utilToString		3357068	0					
ANR	3357199	Identifier	utilToString		3357068	0					
ANR	3357200	ArgumentList	cmd		3357068	1					
ANR	3357201	Argument	cmd		3357068	0					
ANR	3357202	Identifier	cmd		3357068	0					
ANR	3357203	Argument	m_replicationDaemonSinfulString		3357068	3					
ANR	3357204	Identifier	m_replicationDaemonSinfulString		3357068	0					
ANR	3357205	ExpressionStatement	sock . close ( )	631:8:18446:18458	3357068	1	True				
ANR	3357206	CallExpression	sock . close ( )		3357068	0					
ANR	3357207	Callee	sock . close		3357068	0					
ANR	3357208	MemberAccess	sock . close		3357068	0					
ANR	3357209	Identifier	sock		3357068	0					
ANR	3357210	Identifier	close		3357068	1					
ANR	3357211	ArgumentList			3357068	1					
ANR	3357212	ReturnStatement	return false ;	633:8:18469:18481	3357068	2	True				
ANR	3357213	Identifier	false		3357068	0					
ANR	3357214	Statement	char	636:4:18494:18497	3357068	8	True				
ANR	3357215	Statement	*	636:8:18498:18498	3357068	9	True				
ANR	3357216	Statement	subsys	636:10:18500:18505	3357068	10	True				
ANR	3357217	Statement	=	636:17:18507:18507	3357068	11	True				
ANR	3357218	Statement	const_cast	636:19:18509:18518	3357068	12	True				
ANR	3357219	Statement	<	636:29:18519:18519	3357068	13	True				
ANR	3357220	Statement	char	636:30:18520:18523	3357068	14	True				
ANR	3357221	Statement	*	636:34:18524:18524	3357068	15	True				
ANR	3357222	Statement	>	636:35:18525:18525	3357068	16	True				
ANR	3357223	ExpressionStatement	daemonCore -> InfoCommandSinfulString ( )	636:36:18526:18568	3357068	17	True				
ANR	3357224	CallExpression	daemonCore -> InfoCommandSinfulString ( )		3357068	0					
ANR	3357225	Callee	daemonCore -> InfoCommandSinfulString		3357068	0					
ANR	3357226	PtrMemberAccess	daemonCore -> InfoCommandSinfulString		3357068	0					
ANR	3357227	Identifier	daemonCore		3357068	0					
ANR	3357228	Identifier	InfoCommandSinfulString		3357068	1					
ANR	3357229	ArgumentList			3357068	1					
ANR	3357230	IfStatement	if ( ! sock . code ( subsys ) || ! sock . end_of_message ( ) )		3357068	18					
ANR	3357231	Condition	! sock . code ( subsys ) || ! sock . end_of_message ( )	638:8:18579:18622	3357068	0	True				
ANR	3357232	OrExpression	! sock . code ( subsys ) || ! sock . end_of_message ( )		3357068	0		||			
ANR	3357233	UnaryOperationExpression	! sock . code ( subsys )		3357068	0					
ANR	3357234	UnaryOperator	!		3357068	0					
ANR	3357235	CallExpression	sock . code ( subsys )		3357068	1					
ANR	3357236	Callee	sock . code		3357068	0					
ANR	3357237	MemberAccess	sock . code		3357068	0					
ANR	3357238	Identifier	sock		3357068	0					
ANR	3357239	Identifier	code		3357068	1					
ANR	3357240	ArgumentList	subsys		3357068	1					
ANR	3357241	Argument	subsys		3357068	0					
ANR	3357242	Identifier	subsys		3357068	0					
ANR	3357243	UnaryOperationExpression	! sock . end_of_message ( )		3357068	1					
ANR	3357244	UnaryOperator	!		3357068	0					
ANR	3357245	CallExpression	sock . end_of_message ( )		3357068	1					
ANR	3357246	Callee	sock . end_of_message		3357068	0					
ANR	3357247	MemberAccess	sock . end_of_message		3357068	0					
ANR	3357248	Identifier	sock		3357068	0					
ANR	3357249	Identifier	end_of_message		3357068	1					
ANR	3357250	ArgumentList			3357068	1					
ANR	3357251	CompoundStatement		37:55:1125:1125	3357068	1					
ANR	3357252	ExpressionStatement	"dprintf ( D_ALWAYS , ""send to replication daemon, !sock.code false \\n"" )"	639:8:18636:18705	3357068	0	True				
ANR	3357253	CallExpression	"dprintf ( D_ALWAYS , ""send to replication daemon, !sock.code false \\n"" )"		3357068	0					
ANR	3357254	Callee	dprintf		3357068	0					
ANR	3357255	Identifier	dprintf		3357068	0					
ANR	3357256	ArgumentList	D_ALWAYS		3357068	1					
ANR	3357257	Argument	D_ALWAYS		3357068	0					
ANR	3357258	Identifier	D_ALWAYS		3357068	0					
ANR	3357259	Argument	"""send to replication daemon, !sock.code false \\n"""		3357068	1					
ANR	3357260	PrimaryExpression	"""send to replication daemon, !sock.code false \\n"""		3357068	0					
ANR	3357261	ExpressionStatement	sock . close ( )	640:8:18715:18727	3357068	1	True				
ANR	3357262	CallExpression	sock . close ( )		3357068	0					
ANR	3357263	Callee	sock . close		3357068	0					
ANR	3357264	MemberAccess	sock . close		3357068	0					
ANR	3357265	Identifier	sock		3357068	0					
ANR	3357266	Identifier	close		3357068	1					
ANR	3357267	ArgumentList			3357068	1					
ANR	3357268	ReturnStatement	return false ;	642:8:18738:18750	3357068	2	True				
ANR	3357269	Identifier	false		3357068	0					
ANR	3357270	ElseStatement	else		3357068	0					
ANR	3357271	CompoundStatement		42:11:1262:1262	3357068	0					
ANR	3357272	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""send to replication daemon, !sock.code true \\n"" )"	644:8:18773:18849	3357068	0	True				
ANR	3357273	CallExpression	"dprintf ( D_FULLDEBUG , ""send to replication daemon, !sock.code true \\n"" )"		3357068	0					
ANR	3357274	Callee	dprintf		3357068	0					
ANR	3357275	Identifier	dprintf		3357068	0					
ANR	3357276	ArgumentList	D_FULLDEBUG		3357068	1					
ANR	3357277	Argument	D_FULLDEBUG		3357068	0					
ANR	3357278	Identifier	D_FULLDEBUG		3357068	0					
ANR	3357279	Argument	"""send to replication daemon, !sock.code true \\n"""		3357068	1					
ANR	3357280	PrimaryExpression	"""send to replication daemon, !sock.code true \\n"""		3357068	0					
ANR	3357281	ExpressionStatement	sock . close ( )	647:4:18861:18873	3357068	19	True				
ANR	3357282	CallExpression	sock . close ( )		3357068	0					
ANR	3357283	Callee	sock . close		3357068	0					
ANR	3357284	MemberAccess	sock . close		3357068	0					
ANR	3357285	Identifier	sock		3357068	0					
ANR	3357286	Identifier	close		3357068	1					
ANR	3357287	ArgumentList			3357068	1					
ANR	3357288	ReturnStatement	return true ;	649:4:18880:18891	3357068	20	True				
ANR	3357289	Identifier	true		3357068	0					
ANR	3357290	ReturnType	bool		3357068	1					
ANR	3357291	Identifier	HADStateMachine :: sendReplicationCommand		3357068	2					
ANR	3357292	ParameterList	int command		3357068	3					
ANR	3357293	Parameter	int command	601:41:17486:17496	3357068	0	True				
ANR	3357294	ParameterType	int		3357068	0					
ANR	3357295	Identifier	command		3357068	1					
ANR	3357296	CFGEntryNode	ENTRY		3357068		True				
ANR	3357297	CFGExitNode	EXIT		3357068		True				
ANR	3357298	Symbol	false		3357068						
ANR	3357299	Symbol	D_ALWAYS		3357068						
ANR	3357300	Symbol	D_FULLDEBUG		3357068						
ANR	3357301	Symbol	* m_masterDaemon		3357068						
ANR	3357302	Symbol	m_replicationDaemonSinfulString		3357068						
ANR	3357303	Symbol	command		3357068						
ANR	3357304	Symbol	utilToString		3357068						
ANR	3357305	Symbol	m_masterDaemon -> startCommand		3357068						
ANR	3357306	Symbol	& sock		3357068						
ANR	3357307	Symbol	sock		3357068						
ANR	3357308	Symbol	subsys		3357068						
ANR	3357309	Symbol	sock . connect		3357068						
ANR	3357310	Symbol	sock . end_of_message		3357068						
ANR	3357311	Symbol	daemonCore		3357068						
ANR	3357312	Symbol	true		3357068						
ANR	3357313	Symbol	cmd		3357068						
ANR	3357314	Symbol	sock . code		3357068						
ANR	3357315	Symbol	m_connectionTimeout		3357068						
ANR	3357316	Symbol	m_masterDaemon		3357068						
ANR	3357317	Function	HADStateMachine :: setReplicationDaemonSinfulString	652:0:18896:21381							
ANR	3357318	FunctionDef	HADStateMachine :: setReplicationDaemonSinfulString ()		3357317	0					
ANR	3357319	CompoundStatement		654:0:18959:21381	3357317	0					
ANR	3357320	IfStatement	if ( ! m_useReplication )		3357317	0					
ANR	3357321	Condition	! m_useReplication	655:8:18969:18986	3357317	0	True				
ANR	3357322	UnaryOperationExpression	! m_useReplication		3357317	0					
ANR	3357323	UnaryOperator	!		3357317	0					
ANR	3357324	Identifier	m_useReplication		3357317	1					
ANR	3357325	CompoundStatement		2:29:30:30	3357317	1					
ANR	3357326	ReturnStatement	return ;	656:8:19000:19007	3357317	0	True				
ANR	3357327	IdentifierDeclStatement	"char * tmp = param ( ""REPLICATION_LIST"" ) ;"	658:4:19019:19058	3357317	1	True				
ANR	3357328	IdentifierDecl	"* tmp = param ( ""REPLICATION_LIST"" )"		3357317	0					
ANR	3357329	IdentifierDeclType	char *		3357317	0					
ANR	3357330	Identifier	tmp		3357317	1					
ANR	3357331	AssignmentExpression	"* tmp = param ( ""REPLICATION_LIST"" )"		3357317	2		=			
ANR	3357332	Identifier	tmp		3357317	0					
ANR	3357333	CallExpression	"param ( ""REPLICATION_LIST"" )"		3357317	1					
ANR	3357334	Callee	param		3357317	0					
ANR	3357335	Identifier	param		3357317	0					
ANR	3357336	ArgumentList	"""REPLICATION_LIST"""		3357317	1					
ANR	3357337	Argument	"""REPLICATION_LIST"""		3357317	0					
ANR	3357338	PrimaryExpression	"""REPLICATION_LIST"""		3357317	0					
ANR	3357339	IfStatement	if ( ! tmp )		3357317	2					
ANR	3357340	Condition	! tmp	660:9:19070:19074	3357317	0	True				
ANR	3357341	UnaryOperationExpression	! tmp		3357317	0					
ANR	3357342	UnaryOperator	!		3357317	0					
ANR	3357343	Identifier	tmp		3357317	1					
ANR	3357344	CompoundStatement		7:17:118:118	3357317	1					
ANR	3357345	ExpressionStatement	"utilCrucialError ( utilNoParameterError ( ""REPLICATION_LIST"" , ""REPLICATION"" ) . Value ( ) )"	661:8:19088:19219	3357317	0	True				
ANR	3357346	CallExpression	"utilCrucialError ( utilNoParameterError ( ""REPLICATION_LIST"" , ""REPLICATION"" ) . Value ( ) )"		3357317	0					
ANR	3357347	Callee	utilCrucialError		3357317	0					
ANR	3357348	Identifier	utilCrucialError		3357317	0					
ANR	3357349	ArgumentList	"utilNoParameterError ( ""REPLICATION_LIST"" , ""REPLICATION"" ) . Value ( )"		3357317	1					
ANR	3357350	Argument	"utilNoParameterError ( ""REPLICATION_LIST"" , ""REPLICATION"" ) . Value ( )"		3357317	0					
ANR	3357351	CallExpression	"utilNoParameterError ( ""REPLICATION_LIST"" , ""REPLICATION"" ) . Value ( )"		3357317	0					
ANR	3357352	Callee	"utilNoParameterError ( ""REPLICATION_LIST"" , ""REPLICATION"" ) . Value"		3357317	0					
ANR	3357353	MemberAccess	"utilNoParameterError ( ""REPLICATION_LIST"" , ""REPLICATION"" ) . Value"		3357317	0					
ANR	3357354	CallExpression	"utilNoParameterError ( ""REPLICATION_LIST"" , ""REPLICATION"" )"		3357317	0					
ANR	3357355	Callee	utilNoParameterError		3357317	0					
ANR	3357356	Identifier	utilNoParameterError		3357317	0					
ANR	3357357	ArgumentList	"""REPLICATION_LIST"""		3357317	1					
ANR	3357358	Argument	"""REPLICATION_LIST"""		3357317	0					
ANR	3357359	PrimaryExpression	"""REPLICATION_LIST"""		3357317	0					
ANR	3357360	Argument	"""REPLICATION"""		3357317	1					
ANR	3357361	PrimaryExpression	"""REPLICATION"""		3357317	0					
ANR	3357362	Identifier	Value		3357317	1					
ANR	3357363	ArgumentList			3357317	1					
ANR	3357364	IdentifierDeclStatement	StringList replicationAddressList ;	665:4:19232:19265	3357317	3	True				
ANR	3357365	IdentifierDecl	replicationAddressList		3357317	0					
ANR	3357366	IdentifierDeclType	StringList		3357317	0					
ANR	3357367	Identifier	replicationAddressList		3357317	1					
ANR	3357368	IdentifierDeclStatement	char * replicationAddress = NULL ;	666:4:19271:19310	3357317	4	True				
ANR	3357369	IdentifierDecl	* replicationAddress = NULL		3357317	0					
ANR	3357370	IdentifierDeclType	char *		3357317	0					
ANR	3357371	Identifier	replicationAddress		3357317	1					
ANR	3357372	AssignmentExpression	* replicationAddress = NULL		3357317	2		=			
ANR	3357373	Identifier	NULL		3357317	0					
ANR	3357374	Identifier	NULL		3357317	1					
ANR	3357375	IdentifierDeclStatement	char buffer [ BUFSIZ ] ;	667:1:19313:19338	3357317	5	True				
ANR	3357376	IdentifierDecl	buffer [ BUFSIZ ]		3357317	0					
ANR	3357377	IdentifierDeclType	char [ BUFSIZ ]		3357317	0					
ANR	3357378	Identifier	buffer		3357317	1					
ANR	3357379	Identifier	BUFSIZ		3357317	2					
ANR	3357380	ExpressionStatement	replicationAddressList . initializeFromString ( tmp )	669:4:19345:19395	3357317	6	True				
ANR	3357381	CallExpression	replicationAddressList . initializeFromString ( tmp )		3357317	0					
ANR	3357382	Callee	replicationAddressList . initializeFromString		3357317	0					
ANR	3357383	MemberAccess	replicationAddressList . initializeFromString		3357317	0					
ANR	3357384	Identifier	replicationAddressList		3357317	0					
ANR	3357385	Identifier	initializeFromString		3357317	1					
ANR	3357386	ArgumentList	tmp		3357317	1					
ANR	3357387	Argument	tmp		3357317	0					
ANR	3357388	Identifier	tmp		3357317	0					
ANR	3357389	ExpressionStatement	replicationAddressList . rewind ( )	670:4:19401:19433	3357317	7	True				
ANR	3357390	CallExpression	replicationAddressList . rewind ( )		3357317	0					
ANR	3357391	Callee	replicationAddressList . rewind		3357317	0					
ANR	3357392	MemberAccess	replicationAddressList . rewind		3357317	0					
ANR	3357393	Identifier	replicationAddressList		3357317	0					
ANR	3357394	Identifier	rewind		3357317	1					
ANR	3357395	ArgumentList			3357317	1					
ANR	3357396	ExpressionStatement	free ( tmp )	672:4:19440:19451	3357317	8	True				
ANR	3357397	CallExpression	free ( tmp )		3357317	0					
ANR	3357398	Callee	free		3357317	0					
ANR	3357399	Identifier	free		3357317	0					
ANR	3357400	ArgumentList	tmp		3357317	1					
ANR	3357401	Argument	tmp		3357317	0					
ANR	3357402	Identifier	tmp		3357317	0					
ANR	3357403	IdentifierDeclStatement	char * host = getHostFromAddr ( daemonCore -> InfoCommandSinfulString ( ) ) ;	673:4:19457:19527	3357317	9	True				
ANR	3357404	IdentifierDecl	* host = getHostFromAddr ( daemonCore -> InfoCommandSinfulString ( ) )		3357317	0					
ANR	3357405	IdentifierDeclType	char *		3357317	0					
ANR	3357406	Identifier	host		3357317	1					
ANR	3357407	AssignmentExpression	* host = getHostFromAddr ( daemonCore -> InfoCommandSinfulString ( ) )		3357317	2		=			
ANR	3357408	Identifier	host		3357317	0					
ANR	3357409	CallExpression	getHostFromAddr ( daemonCore -> InfoCommandSinfulString ( ) )		3357317	1					
ANR	3357410	Callee	getHostFromAddr		3357317	0					
ANR	3357411	Identifier	getHostFromAddr		3357317	0					
ANR	3357412	ArgumentList	daemonCore -> InfoCommandSinfulString ( )		3357317	1					
ANR	3357413	Argument	daemonCore -> InfoCommandSinfulString ( )		3357317	0					
ANR	3357414	CallExpression	daemonCore -> InfoCommandSinfulString ( )		3357317	0					
ANR	3357415	Callee	daemonCore -> InfoCommandSinfulString		3357317	0					
ANR	3357416	PtrMemberAccess	daemonCore -> InfoCommandSinfulString		3357317	0					
ANR	3357417	Identifier	daemonCore		3357317	0					
ANR	3357418	Identifier	InfoCommandSinfulString		3357317	1					
ANR	3357419	ArgumentList			3357317	1					
ANR	3357420	IdentifierDeclStatement	int replicationDaemonIndex = replicationAddressList . number ( ) - 1 ;	675:1:19531:19595	3357317	10	True				
ANR	3357421	IdentifierDecl	replicationDaemonIndex = replicationAddressList . number ( ) - 1		3357317	0					
ANR	3357422	IdentifierDeclType	int		3357317	0					
ANR	3357423	Identifier	replicationDaemonIndex		3357317	1					
ANR	3357424	AssignmentExpression	replicationDaemonIndex = replicationAddressList . number ( ) - 1		3357317	2		=			
ANR	3357425	Identifier	replicationDaemonIndex		3357317	0					
ANR	3357426	AdditiveExpression	replicationAddressList . number ( ) - 1		3357317	1		-			
ANR	3357427	CallExpression	replicationAddressList . number ( )		3357317	0					
ANR	3357428	Callee	replicationAddressList . number		3357317	0					
ANR	3357429	MemberAccess	replicationAddressList . number		3357317	0					
ANR	3357430	Identifier	replicationAddressList		3357317	0					
ANR	3357431	Identifier	number		3357317	1					
ANR	3357432	ArgumentList			3357317	1					
ANR	3357433	PrimaryExpression	1		3357317	1					
ANR	3357434	WhileStatement	while ( ( replicationAddress = replicationAddressList . next ( ) ) )		3357317	11					
ANR	3357435	Condition	replicationAddress = replicationAddressList . next ( )	677:11:19609:19663	3357317	0	True				
ANR	3357436	AssignmentExpression	replicationAddress = replicationAddressList . next ( )		3357317	0		=			
ANR	3357437	Identifier	replicationAddress		3357317	0					
ANR	3357438	CallExpression	replicationAddressList . next ( )		3357317	1					
ANR	3357439	Callee	replicationAddressList . next		3357317	0					
ANR	3357440	MemberAccess	replicationAddressList . next		3357317	0					
ANR	3357441	Identifier	replicationAddressList		3357317	0					
ANR	3357442	Identifier	next		3357317	1					
ANR	3357443	ArgumentList			3357317	1					
ANR	3357444	CompoundStatement		36:8:1044:1102	3357317	1					
ANR	3357445	IdentifierDeclStatement	char * sinfulAddress = utilToSinful ( replicationAddress ) ;	678:8:19677:19737	3357317	0	True				
ANR	3357446	IdentifierDecl	* sinfulAddress = utilToSinful ( replicationAddress )		3357317	0					
ANR	3357447	IdentifierDeclType	char *		3357317	0					
ANR	3357448	Identifier	sinfulAddress		3357317	1					
ANR	3357449	AssignmentExpression	* sinfulAddress = utilToSinful ( replicationAddress )		3357317	2		=			
ANR	3357450	Identifier	sinfulAddress		3357317	0					
ANR	3357451	CallExpression	utilToSinful ( replicationAddress )		3357317	1					
ANR	3357452	Callee	utilToSinful		3357317	0					
ANR	3357453	Identifier	utilToSinful		3357317	0					
ANR	3357454	ArgumentList	replicationAddress		3357317	1					
ANR	3357455	Argument	replicationAddress		3357317	0					
ANR	3357456	Identifier	replicationAddress		3357317	0					
ANR	3357457	IfStatement	if ( sinfulAddress == 0 )		3357317	1					
ANR	3357458	Condition	sinfulAddress == 0	680:12:19752:19769	3357317	0	True				
ANR	3357459	EqualityExpression	sinfulAddress == 0		3357317	0		==			
ANR	3357460	Identifier	sinfulAddress		3357317	0					
ANR	3357461	PrimaryExpression	0		3357317	1					
ANR	3357462	CompoundStatement		27:33:813:813	3357317	1					
ANR	3357463	Statement	sprintf	681:12:19787:19793	3357317	0	True				
ANR	3357464	Statement	(	681:19:19794:19794	3357317	1	True				
ANR	3357465	Statement	buffer	681:21:19796:19801	3357317	2	True				
ANR	3357466	Statement	","	681:27:19802:19802	3357317	3	True				
ANR	3357467	Statement	"""HADStateMachine::setReplicationDaemonSinfulString"""	682:6:19810:19860	3357317	4	True				
ANR	3357468	Statement	""" invalid address %s\\n"""	683:6:19868:19890	3357317	5	True				
ANR	3357469	Statement	","	683:29:19891:19891	3357317	6	True				
ANR	3357470	Statement	replicationAddress	684:6:19899:19916	3357317	7	True				
ANR	3357471	Statement	)	684:25:19918:19918	3357317	8	True				
ANR	3357472	ExpressionStatement		684:26:19919:19919	3357317	9	True				
ANR	3357473	ExpressionStatement	utilCrucialError ( buffer )	685:12:19933:19959	3357317	10	True				
ANR	3357474	CallExpression	utilCrucialError ( buffer )		3357317	0					
ANR	3357475	Callee	utilCrucialError		3357317	0					
ANR	3357476	Identifier	utilCrucialError		3357317	0					
ANR	3357477	ArgumentList	buffer		3357317	1					
ANR	3357478	Argument	buffer		3357317	0					
ANR	3357479	Identifier	buffer		3357317	0					
ANR	3357480	IdentifierDeclStatement	char * sinfulAddressHost = getHostFromAddr ( sinfulAddress ) ;	689:8:20004:20062	3357317	2	True				
ANR	3357481	IdentifierDecl	* sinfulAddressHost = getHostFromAddr ( sinfulAddress )		3357317	0					
ANR	3357482	IdentifierDeclType	char *		3357317	0					
ANR	3357483	Identifier	sinfulAddressHost		3357317	1					
ANR	3357484	AssignmentExpression	* sinfulAddressHost = getHostFromAddr ( sinfulAddress )		3357317	2		=			
ANR	3357485	Identifier	sinfulAddressHost		3357317	0					
ANR	3357486	CallExpression	getHostFromAddr ( sinfulAddress )		3357317	1					
ANR	3357487	Callee	getHostFromAddr		3357317	0					
ANR	3357488	Identifier	getHostFromAddr		3357317	0					
ANR	3357489	ArgumentList	sinfulAddress		3357317	1					
ANR	3357490	Argument	sinfulAddress		3357317	0					
ANR	3357491	Identifier	sinfulAddress		3357317	0					
ANR	3357492	IfStatement	"if ( ( replicationDaemonIndex == m_selfId ) && ( strcmp ( sinfulAddressHost , host ) == 0 ) )"		3357317	3					
ANR	3357493	Condition	"( replicationDaemonIndex == m_selfId ) && ( strcmp ( sinfulAddressHost , host ) == 0 )"	691:13:20078:20165	3357317	0	True				
ANR	3357494	AndExpression	"( replicationDaemonIndex == m_selfId ) && ( strcmp ( sinfulAddressHost , host ) == 0 )"		3357317	0		&&			
ANR	3357495	EqualityExpression	replicationDaemonIndex == m_selfId		3357317	0		==			
ANR	3357496	Identifier	replicationDaemonIndex		3357317	0					
ANR	3357497	Identifier	m_selfId		3357317	1					
ANR	3357498	EqualityExpression	"strcmp ( sinfulAddressHost , host ) == 0"		3357317	1		==			
ANR	3357499	CallExpression	"strcmp ( sinfulAddressHost , host )"		3357317	0					
ANR	3357500	Callee	strcmp		3357317	0					
ANR	3357501	Identifier	strcmp		3357317	0					
ANR	3357502	ArgumentList	sinfulAddressHost		3357317	1					
ANR	3357503	Argument	sinfulAddressHost		3357317	0					
ANR	3357504	Identifier	sinfulAddressHost		3357317	0					
ANR	3357505	Argument	host		3357317	1					
ANR	3357506	Identifier	host		3357317	0					
ANR	3357507	PrimaryExpression	0		3357317	1					
ANR	3357508	CompoundStatement		39:48:1210:1210	3357317	1					
ANR	3357509	ExpressionStatement	m_replicationDaemonSinfulString = sinfulAddress	693:12:20184:20231	3357317	0	True				
ANR	3357510	AssignmentExpression	m_replicationDaemonSinfulString = sinfulAddress		3357317	0		=			
ANR	3357511	Identifier	m_replicationDaemonSinfulString		3357317	0					
ANR	3357512	Identifier	sinfulAddress		3357317	1					
ANR	3357513	ExpressionStatement	free ( sinfulAddressHost )	694:12:20245:20270	3357317	1	True				
ANR	3357514	CallExpression	free ( sinfulAddressHost )		3357317	0					
ANR	3357515	Callee	free		3357317	0					
ANR	3357516	Identifier	free		3357317	0					
ANR	3357517	ArgumentList	sinfulAddressHost		3357317	1					
ANR	3357518	Argument	sinfulAddressHost		3357317	0					
ANR	3357519	Identifier	sinfulAddressHost		3357317	0					
ANR	3357520	Statement	dprintf	695:3:20275:20281	3357317	2	True				
ANR	3357521	Statement	(	695:10:20282:20282	3357317	3	True				
ANR	3357522	Statement	D_ALWAYS	695:12:20284:20291	3357317	4	True				
ANR	3357523	Statement	","	695:20:20292:20292	3357317	5	True				
ANR	3357524	Statement	"""HADStateMachine::setReplicationDaemonSinfulString """	696:5:20299:20350	3357317	6	True				
ANR	3357525	Statement	"""corresponding replication daemon - %s\\n"""	697:5:20357:20397	3357317	7	True				
ANR	3357526	Statement	","	697:46:20398:20398	3357317	8	True				
ANR	3357527	Statement	sinfulAddress	698:6:20406:20418	3357317	9	True				
ANR	3357528	Statement	)	698:20:20420:20420	3357317	10	True				
ANR	3357529	ExpressionStatement		698:21:20421:20421	3357317	11	True				
ANR	3357530	BreakStatement	break ;	701:12:20563:20568	3357317	12	True				
ANR	3357531	ElseStatement	else		3357317	0					
ANR	3357532	IfStatement	if ( replicationDaemonIndex == m_selfId )		3357317	0					
ANR	3357533	Condition	replicationDaemonIndex == m_selfId	702:19:20589:20622	3357317	0	True				
ANR	3357534	EqualityExpression	replicationDaemonIndex == m_selfId		3357317	0		==			
ANR	3357535	Identifier	replicationDaemonIndex		3357317	0					
ANR	3357536	Identifier	m_selfId		3357317	1					
ANR	3357537	CompoundStatement		49:56:1666:1666	3357317	1					
ANR	3357538	Statement	sprintf	703:3:20631:20637	3357317	0	True				
ANR	3357539	Statement	(	703:10:20638:20638	3357317	1	True				
ANR	3357540	Statement	buffer	703:12:20640:20645	3357317	2	True				
ANR	3357541	Statement	","	703:18:20646:20646	3357317	3	True				
ANR	3357542	Statement	"""HADStateMachine::setReplicationDaemonSinfulString"""	704:6:20654:20704	3357317	4	True				
ANR	3357543	Statement	"""host names of machine and replication daemon do """	705:6:20712:20761	3357317	5	True				
ANR	3357544	Statement	"""not match: %s vs. %s\\n"""	706:6:20769:20792	3357317	6	True				
ANR	3357545	Statement	","	706:30:20793:20793	3357317	7	True				
ANR	3357546	Statement	host	706:32:20795:20798	3357317	8	True				
ANR	3357547	Statement	","	706:36:20799:20799	3357317	9	True				
ANR	3357548	Statement	sinfulAddressHost	706:38:20801:20817	3357317	10	True				
ANR	3357549	Statement	)	706:55:20818:20818	3357317	11	True				
ANR	3357550	ExpressionStatement		706:56:20819:20819	3357317	12	True				
ANR	3357551	ExpressionStatement	utilCrucialError ( buffer )	707:3:20824:20850	3357317	13	True				
ANR	3357552	CallExpression	utilCrucialError ( buffer )		3357317	0					
ANR	3357553	Callee	utilCrucialError		3357317	0					
ANR	3357554	Identifier	utilCrucialError		3357317	0					
ANR	3357555	ArgumentList	buffer		3357317	1					
ANR	3357556	Argument	buffer		3357317	0					
ANR	3357557	Identifier	buffer		3357317	0					
ANR	3357558	ExpressionStatement	replicationDaemonIndex --	710:2:20859:20884	3357317	4	True				
ANR	3357559	PostIncDecOperationExpression	replicationDaemonIndex --		3357317	0					
ANR	3357560	Identifier	replicationDaemonIndex		3357317	0					
ANR	3357561	IncDec	--		3357317	1					
ANR	3357562	ExpressionStatement	free ( sinfulAddressHost )	711:8:20894:20919	3357317	5	True				
ANR	3357563	CallExpression	free ( sinfulAddressHost )		3357317	0					
ANR	3357564	Callee	free		3357317	0					
ANR	3357565	Identifier	free		3357317	0					
ANR	3357566	ArgumentList	sinfulAddressHost		3357317	1					
ANR	3357567	Argument	sinfulAddressHost		3357317	0					
ANR	3357568	Identifier	sinfulAddressHost		3357317	0					
ANR	3357569	ExpressionStatement	free ( sinfulAddress )	712:8:20929:20950	3357317	6	True				
ANR	3357570	CallExpression	free ( sinfulAddress )		3357317	0					
ANR	3357571	Callee	free		3357317	0					
ANR	3357572	Identifier	free		3357317	0					
ANR	3357573	ArgumentList	sinfulAddress		3357317	1					
ANR	3357574	Argument	sinfulAddress		3357317	0					
ANR	3357575	Identifier	sinfulAddress		3357317	0					
ANR	3357576	ExpressionStatement	free ( host )	714:4:20962:20974	3357317	12	True				
ANR	3357577	CallExpression	free ( host )		3357317	0					
ANR	3357578	Callee	free		3357317	0					
ANR	3357579	Identifier	free		3357317	0					
ANR	3357580	ArgumentList	host		3357317	1					
ANR	3357581	Argument	host		3357317	0					
ANR	3357582	Identifier	host		3357317	0					
ANR	3357583	IfStatement	if ( NULL == m_replicationDaemonSinfulString )		3357317	13					
ANR	3357584	Condition	NULL == m_replicationDaemonSinfulString	718:8:21102:21140	3357317	0	True				
ANR	3357585	EqualityExpression	NULL == m_replicationDaemonSinfulString		3357317	0		==			
ANR	3357586	Identifier	NULL		3357317	0					
ANR	3357587	Identifier	m_replicationDaemonSinfulString		3357317	1					
ANR	3357588	CompoundStatement		66:4:2188:2188	3357317	1					
ANR	3357589	Statement	dprintf	720:8:21158:21164	3357317	0	True				
ANR	3357590	Statement	(	720:15:21165:21165	3357317	1	True				
ANR	3357591	Statement	D_ALWAYS	720:17:21167:21174	3357317	2	True				
ANR	3357592	Statement	","	720:25:21175:21175	3357317	3	True				
ANR	3357593	Statement	"""HADStateMachine::setReplicationDaemonSinfulString """	721:5:21182:21233	3357317	4	True				
ANR	3357594	Statement	"""local replication daemon not found in REPLICATION_LIST, """	722:5:21240:21297	3357317	5	True				
ANR	3357595	Statement	"""switching the replication off\\n"""	723:5:21304:21336	3357317	6	True				
ANR	3357596	Statement	)	723:39:21338:21338	3357317	7	True				
ANR	3357597	ExpressionStatement		723:40:21339:21339	3357317	8	True				
ANR	3357598	ExpressionStatement	m_useReplication = false	724:8:21349:21373	3357317	9	True				
ANR	3357599	AssignmentExpression	m_useReplication = false		3357317	0		=			
ANR	3357600	Identifier	m_useReplication		3357317	0					
ANR	3357601	Identifier	false		3357317	1					
ANR	3357602	ReturnType	void		3357317	1					
ANR	3357603	Identifier	HADStateMachine :: setReplicationDaemonSinfulString		3357317	2					
ANR	3357604	ParameterList			3357317	3					
ANR	3357605	CFGEntryNode	ENTRY		3357317		True				
ANR	3357606	CFGExitNode	EXIT		3357317		True				
ANR	3357607	Symbol	strcmp		3357317						
ANR	3357608	Symbol	daemonCore -> InfoCommandSinfulString		3357317						
ANR	3357609	Symbol	utilToSinful		3357317						
ANR	3357610	Symbol	NULL		3357317						
ANR	3357611	Symbol	replicationAddressList . number		3357317						
ANR	3357612	Symbol	utilNoParameterError		3357317						
ANR	3357613	Symbol	replicationAddress		3357317						
ANR	3357614	Symbol	false		3357317						
ANR	3357615	Symbol	m_replicationDaemonSinfulString		3357317						
ANR	3357616	Symbol	getHostFromAddr		3357317						
ANR	3357617	Symbol	replicationAddressList		3357317						
ANR	3357618	Symbol	param		3357317						
ANR	3357619	Symbol	tmp		3357317						
ANR	3357620	Symbol	* daemonCore		3357317						
ANR	3357621	Symbol	m_selfId		3357317						
ANR	3357622	Symbol	daemonCore		3357317						
ANR	3357623	Symbol	host		3357317						
ANR	3357624	Symbol	"utilNoParameterError ( ""REPLICATION_LIST"" , ""REPLICATION"" ) . Value"		3357317						
ANR	3357625	Symbol	sinfulAddress		3357317						
ANR	3357626	Symbol	m_useReplication		3357317						
ANR	3357627	Symbol	buffer		3357317						
ANR	3357628	Symbol	replicationAddressList . next		3357317						
ANR	3357629	Symbol	sinfulAddressHost		3357317						
ANR	3357630	Symbol	replicationDaemonIndex		3357317						
ANR	3357631	Function	HADStateMachine :: sendControlCmdToMaster	732:0:21530:22742							
ANR	3357632	FunctionDef	HADStateMachine :: sendControlCmdToMaster (int comm)		3357631	0					
ANR	3357633	CompoundStatement		734:0:21587:22742	3357631	0					
ANR	3357634	IdentifierDeclStatement	ReliSock sock ;	736:4:21594:21607	3357631	0	True				
ANR	3357635	IdentifierDecl	sock		3357631	0					
ANR	3357636	IdentifierDeclType	ReliSock		3357631	0					
ANR	3357637	Identifier	sock		3357631	1					
ANR	3357638	ExpressionStatement	sock . timeout ( m_connectionTimeout )	738:4:21614:21649	3357631	1	True				
ANR	3357639	CallExpression	sock . timeout ( m_connectionTimeout )		3357631	0					
ANR	3357640	Callee	sock . timeout		3357631	0					
ANR	3357641	MemberAccess	sock . timeout		3357631	0					
ANR	3357642	Identifier	sock		3357631	0					
ANR	3357643	Identifier	timeout		3357631	1					
ANR	3357644	ArgumentList	m_connectionTimeout		3357631	1					
ANR	3357645	Argument	m_connectionTimeout		3357631	0					
ANR	3357646	Identifier	m_connectionTimeout		3357631	0					
ANR	3357647	ExpressionStatement	sock . doNotEnforceMinimalCONNECT_TIMEOUT ( )	739:4:21655:21696	3357631	2	True				
ANR	3357648	CallExpression	sock . doNotEnforceMinimalCONNECT_TIMEOUT ( )		3357631	0					
ANR	3357649	Callee	sock . doNotEnforceMinimalCONNECT_TIMEOUT		3357631	0					
ANR	3357650	MemberAccess	sock . doNotEnforceMinimalCONNECT_TIMEOUT		3357631	0					
ANR	3357651	Identifier	sock		3357631	0					
ANR	3357652	Identifier	doNotEnforceMinimalCONNECT_TIMEOUT		3357631	1					
ANR	3357653	ArgumentList			3357631	1					
ANR	3357654	IfStatement	"if ( ! sock . connect ( m_masterDaemon -> addr ( ) , 0 , false ) )"		3357631	3					
ANR	3357655	Condition	"! sock . connect ( m_masterDaemon -> addr ( ) , 0 , false )"	742:7:21755:21803	3357631	0	True				
ANR	3357656	UnaryOperationExpression	"! sock . connect ( m_masterDaemon -> addr ( ) , 0 , false )"		3357631	0					
ANR	3357657	UnaryOperator	!		3357631	0					
ANR	3357658	CallExpression	"sock . connect ( m_masterDaemon -> addr ( ) , 0 , false )"		3357631	1					
ANR	3357659	Callee	sock . connect		3357631	0					
ANR	3357660	MemberAccess	sock . connect		3357631	0					
ANR	3357661	Identifier	sock		3357631	0					
ANR	3357662	Identifier	connect		3357631	1					
ANR	3357663	ArgumentList	m_masterDaemon -> addr ( )		3357631	1					
ANR	3357664	Argument	m_masterDaemon -> addr ( )		3357631	0					
ANR	3357665	CallExpression	m_masterDaemon -> addr ( )		3357631	0					
ANR	3357666	Callee	m_masterDaemon -> addr		3357631	0					
ANR	3357667	PtrMemberAccess	m_masterDaemon -> addr		3357631	0					
ANR	3357668	Identifier	m_masterDaemon		3357631	0					
ANR	3357669	Identifier	addr		3357631	1					
ANR	3357670	ArgumentList			3357631	1					
ANR	3357671	Argument	0		3357631	1					
ANR	3357672	PrimaryExpression	0		3357631	0					
ANR	3357673	Argument	false		3357631	2					
ANR	3357674	Identifier	false		3357631	0					
ANR	3357675	CompoundStatement		9:59:219:219	3357631	1					
ANR	3357676	ExpressionStatement	"dprintf ( D_ALWAYS , ""cannot connect to master, addr %s\\n"" , m_masterDaemon -> addr ( ) )"	743:8:21817:21909	3357631	0	True				
ANR	3357677	CallExpression	"dprintf ( D_ALWAYS , ""cannot connect to master, addr %s\\n"" , m_masterDaemon -> addr ( ) )"		3357631	0					
ANR	3357678	Callee	dprintf		3357631	0					
ANR	3357679	Identifier	dprintf		3357631	0					
ANR	3357680	ArgumentList	D_ALWAYS		3357631	1					
ANR	3357681	Argument	D_ALWAYS		3357631	0					
ANR	3357682	Identifier	D_ALWAYS		3357631	0					
ANR	3357683	Argument	"""cannot connect to master, addr %s\\n"""		3357631	1					
ANR	3357684	PrimaryExpression	"""cannot connect to master, addr %s\\n"""		3357631	0					
ANR	3357685	Argument	m_masterDaemon -> addr ( )		3357631	2					
ANR	3357686	CallExpression	m_masterDaemon -> addr ( )		3357631	0					
ANR	3357687	Callee	m_masterDaemon -> addr		3357631	0					
ANR	3357688	PtrMemberAccess	m_masterDaemon -> addr		3357631	0					
ANR	3357689	Identifier	m_masterDaemon		3357631	0					
ANR	3357690	Identifier	addr		3357631	1					
ANR	3357691	ArgumentList			3357631	1					
ANR	3357692	ExpressionStatement	sock . close ( )	746:8:21919:21931	3357631	1	True				
ANR	3357693	CallExpression	sock . close ( )		3357631	0					
ANR	3357694	Callee	sock . close		3357631	0					
ANR	3357695	MemberAccess	sock . close		3357631	0					
ANR	3357696	Identifier	sock		3357631	0					
ANR	3357697	Identifier	close		3357631	1					
ANR	3357698	ArgumentList			3357631	1					
ANR	3357699	ReturnStatement	return false ;	747:8:21941:21953	3357631	2	True				
ANR	3357700	Identifier	false		3357631	0					
ANR	3357701	IdentifierDeclStatement	int cmd = comm ;	750:4:21966:21980	3357631	4	True				
ANR	3357702	IdentifierDecl	cmd = comm		3357631	0					
ANR	3357703	IdentifierDeclType	int		3357631	0					
ANR	3357704	Identifier	cmd		3357631	1					
ANR	3357705	AssignmentExpression	cmd = comm		3357631	2		=			
ANR	3357706	Identifier	comm		3357631	0					
ANR	3357707	Identifier	comm		3357631	1					
ANR	3357708	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""send command %s(%d) [%s] to master %s\\n"" , utilToString ( cmd ) , cmd , m_controlleeName , m_masterDaemon -> addr ( ) )"	751:4:21986:22129	3357631	5	True				
ANR	3357709	CallExpression	"dprintf ( D_FULLDEBUG , ""send command %s(%d) [%s] to master %s\\n"" , utilToString ( cmd ) , cmd , m_controlleeName , m_masterDaemon -> addr ( ) )"		3357631	0					
ANR	3357710	Callee	dprintf		3357631	0					
ANR	3357711	Identifier	dprintf		3357631	0					
ANR	3357712	ArgumentList	D_FULLDEBUG		3357631	1					
ANR	3357713	Argument	D_FULLDEBUG		3357631	0					
ANR	3357714	Identifier	D_FULLDEBUG		3357631	0					
ANR	3357715	Argument	"""send command %s(%d) [%s] to master %s\\n"""		3357631	1					
ANR	3357716	PrimaryExpression	"""send command %s(%d) [%s] to master %s\\n"""		3357631	0					
ANR	3357717	Argument	utilToString ( cmd )		3357631	2					
ANR	3357718	CallExpression	utilToString ( cmd )		3357631	0					
ANR	3357719	Callee	utilToString		3357631	0					
ANR	3357720	Identifier	utilToString		3357631	0					
ANR	3357721	ArgumentList	cmd		3357631	1					
ANR	3357722	Argument	cmd		3357631	0					
ANR	3357723	Identifier	cmd		3357631	0					
ANR	3357724	Argument	cmd		3357631	3					
ANR	3357725	Identifier	cmd		3357631	0					
ANR	3357726	Argument	m_controlleeName		3357631	4					
ANR	3357727	Identifier	m_controlleeName		3357631	0					
ANR	3357728	Argument	m_masterDaemon -> addr ( )		3357631	5					
ANR	3357729	CallExpression	m_masterDaemon -> addr ( )		3357631	0					
ANR	3357730	Callee	m_masterDaemon -> addr		3357631	0					
ANR	3357731	PtrMemberAccess	m_masterDaemon -> addr		3357631	0					
ANR	3357732	Identifier	m_masterDaemon		3357631	0					
ANR	3357733	Identifier	addr		3357631	1					
ANR	3357734	ArgumentList			3357631	1					
ANR	3357735	IfStatement	"if ( ! m_masterDaemon -> startCommand ( cmd , & sock , m_connectionTimeout ) )"		3357631	6					
ANR	3357736	Condition	"! m_masterDaemon -> startCommand ( cmd , & sock , m_connectionTimeout )"	757:7:22200:22264	3357631	0	True				
ANR	3357737	UnaryOperationExpression	"! m_masterDaemon -> startCommand ( cmd , & sock , m_connectionTimeout )"		3357631	0					
ANR	3357738	UnaryOperator	!		3357631	0					
ANR	3357739	CallExpression	"m_masterDaemon -> startCommand ( cmd , & sock , m_connectionTimeout )"		3357631	1					
ANR	3357740	Callee	m_masterDaemon -> startCommand		3357631	0					
ANR	3357741	PtrMemberAccess	m_masterDaemon -> startCommand		3357631	0					
ANR	3357742	Identifier	m_masterDaemon		3357631	0					
ANR	3357743	Identifier	startCommand		3357631	1					
ANR	3357744	ArgumentList	cmd		3357631	1					
ANR	3357745	Argument	cmd		3357631	0					
ANR	3357746	Identifier	cmd		3357631	0					
ANR	3357747	Argument	& sock		3357631	1					
ANR	3357748	UnaryOperationExpression	& sock		3357631	0					
ANR	3357749	UnaryOperator	&		3357631	0					
ANR	3357750	Identifier	sock		3357631	1					
ANR	3357751	Argument	m_connectionTimeout		3357631	2					
ANR	3357752	Identifier	m_connectionTimeout		3357631	0					
ANR	3357753	CompoundStatement		24:76:681:681	3357631	1					
ANR	3357754	ExpressionStatement	"dprintf ( D_ALWAYS , ""cannot start command %s, addr %s\\n"" , utilToString ( cmd ) , m_masterDaemon -> addr ( ) )"	758:8:22279:22383	3357631	0	True				
ANR	3357755	CallExpression	"dprintf ( D_ALWAYS , ""cannot start command %s, addr %s\\n"" , utilToString ( cmd ) , m_masterDaemon -> addr ( ) )"		3357631	0					
ANR	3357756	Callee	dprintf		3357631	0					
ANR	3357757	Identifier	dprintf		3357631	0					
ANR	3357758	ArgumentList	D_ALWAYS		3357631	1					
ANR	3357759	Argument	D_ALWAYS		3357631	0					
ANR	3357760	Identifier	D_ALWAYS		3357631	0					
ANR	3357761	Argument	"""cannot start command %s, addr %s\\n"""		3357631	1					
ANR	3357762	PrimaryExpression	"""cannot start command %s, addr %s\\n"""		3357631	0					
ANR	3357763	Argument	utilToString ( cmd )		3357631	2					
ANR	3357764	CallExpression	utilToString ( cmd )		3357631	0					
ANR	3357765	Callee	utilToString		3357631	0					
ANR	3357766	Identifier	utilToString		3357631	0					
ANR	3357767	ArgumentList	cmd		3357631	1					
ANR	3357768	Argument	cmd		3357631	0					
ANR	3357769	Identifier	cmd		3357631	0					
ANR	3357770	Argument	m_masterDaemon -> addr ( )		3357631	3					
ANR	3357771	CallExpression	m_masterDaemon -> addr ( )		3357631	0					
ANR	3357772	Callee	m_masterDaemon -> addr		3357631	0					
ANR	3357773	PtrMemberAccess	m_masterDaemon -> addr		3357631	0					
ANR	3357774	Identifier	m_masterDaemon		3357631	0					
ANR	3357775	Identifier	addr		3357631	1					
ANR	3357776	ArgumentList			3357631	1					
ANR	3357777	ExpressionStatement	sock . close ( )	760:8:22393:22405	3357631	1	True				
ANR	3357778	CallExpression	sock . close ( )		3357631	0					
ANR	3357779	Callee	sock . close		3357631	0					
ANR	3357780	MemberAccess	sock . close		3357631	0					
ANR	3357781	Identifier	sock		3357631	0					
ANR	3357782	Identifier	close		3357631	1					
ANR	3357783	ArgumentList			3357631	1					
ANR	3357784	ReturnStatement	return false ;	761:8:22415:22427	3357631	2	True				
ANR	3357785	Identifier	false		3357631	0					
ANR	3357786	IfStatement	if ( ! sock . code ( m_controlleeName ) || ! sock . end_of_message ( ) )		3357631	7					
ANR	3357787	Condition	! sock . code ( m_controlleeName ) || ! sock . end_of_message ( )	764:8:22444:22497	3357631	0	True				
ANR	3357788	OrExpression	! sock . code ( m_controlleeName ) || ! sock . end_of_message ( )		3357631	0		||			
ANR	3357789	UnaryOperationExpression	! sock . code ( m_controlleeName )		3357631	0					
ANR	3357790	UnaryOperator	!		3357631	0					
ANR	3357791	CallExpression	sock . code ( m_controlleeName )		3357631	1					
ANR	3357792	Callee	sock . code		3357631	0					
ANR	3357793	MemberAccess	sock . code		3357631	0					
ANR	3357794	Identifier	sock		3357631	0					
ANR	3357795	Identifier	code		3357631	1					
ANR	3357796	ArgumentList	m_controlleeName		3357631	1					
ANR	3357797	Argument	m_controlleeName		3357631	0					
ANR	3357798	Identifier	m_controlleeName		3357631	0					
ANR	3357799	UnaryOperationExpression	! sock . end_of_message ( )		3357631	1					
ANR	3357800	UnaryOperator	!		3357631	0					
ANR	3357801	CallExpression	sock . end_of_message ( )		3357631	1					
ANR	3357802	Callee	sock . end_of_message		3357631	0					
ANR	3357803	MemberAccess	sock . end_of_message		3357631	0					
ANR	3357804	Identifier	sock		3357631	0					
ANR	3357805	Identifier	end_of_message		3357631	1					
ANR	3357806	ArgumentList			3357631	1					
ANR	3357807	CompoundStatement		31:65:913:913	3357631	1					
ANR	3357808	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to send controllee name to master\\n"" )"	765:8:22511:22575	3357631	0	True				
ANR	3357809	CallExpression	"dprintf ( D_ALWAYS , ""Failed to send controllee name to master\\n"" )"		3357631	0					
ANR	3357810	Callee	dprintf		3357631	0					
ANR	3357811	Identifier	dprintf		3357631	0					
ANR	3357812	ArgumentList	D_ALWAYS		3357631	1					
ANR	3357813	Argument	D_ALWAYS		3357631	0					
ANR	3357814	Identifier	D_ALWAYS		3357631	0					
ANR	3357815	Argument	"""Failed to send controllee name to master\\n"""		3357631	1					
ANR	3357816	PrimaryExpression	"""Failed to send controllee name to master\\n"""		3357631	0					
ANR	3357817	ExpressionStatement	sock . close ( )	766:8:22585:22597	3357631	1	True				
ANR	3357818	CallExpression	sock . close ( )		3357631	0					
ANR	3357819	Callee	sock . close		3357631	0					
ANR	3357820	MemberAccess	sock . close		3357631	0					
ANR	3357821	Identifier	sock		3357631	0					
ANR	3357822	Identifier	close		3357631	1					
ANR	3357823	ArgumentList			3357631	1					
ANR	3357824	ReturnStatement	return false ;	767:8:22607:22619	3357631	2	True				
ANR	3357825	Identifier	false		3357631	0					
ANR	3357826	ElseStatement	else		3357631	0					
ANR	3357827	CompoundStatement		35:11:1044:1044	3357631	0					
ANR	3357828	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Controllee name sent to master\\n"" )"	769:8:22642:22699	3357631	0	True				
ANR	3357829	CallExpression	"dprintf ( D_FULLDEBUG , ""Controllee name sent to master\\n"" )"		3357631	0					
ANR	3357830	Callee	dprintf		3357631	0					
ANR	3357831	Identifier	dprintf		3357631	0					
ANR	3357832	ArgumentList	D_FULLDEBUG		3357631	1					
ANR	3357833	Argument	D_FULLDEBUG		3357631	0					
ANR	3357834	Identifier	D_FULLDEBUG		3357631	0					
ANR	3357835	Argument	"""Controllee name sent to master\\n"""		3357631	1					
ANR	3357836	PrimaryExpression	"""Controllee name sent to master\\n"""		3357631	0					
ANR	3357837	ExpressionStatement	sock . close ( )	771:4:22711:22723	3357631	8	True				
ANR	3357838	CallExpression	sock . close ( )		3357631	0					
ANR	3357839	Callee	sock . close		3357631	0					
ANR	3357840	MemberAccess	sock . close		3357631	0					
ANR	3357841	Identifier	sock		3357631	0					
ANR	3357842	Identifier	close		3357631	1					
ANR	3357843	ArgumentList			3357631	1					
ANR	3357844	ReturnStatement	return true ;	772:4:22729:22740	3357631	9	True				
ANR	3357845	Identifier	true		3357631	0					
ANR	3357846	ReturnType	bool		3357631	1					
ANR	3357847	Identifier	HADStateMachine :: sendControlCmdToMaster		3357631	2					
ANR	3357848	ParameterList	int comm		3357631	3					
ANR	3357849	Parameter	int comm	733:41:21576:21583	3357631	0	True				
ANR	3357850	ParameterType	int		3357631	0					
ANR	3357851	Identifier	comm		3357631	1					
ANR	3357852	CFGEntryNode	ENTRY		3357631		True				
ANR	3357853	CFGExitNode	EXIT		3357631		True				
ANR	3357854	Symbol	comm		3357631						
ANR	3357855	Symbol	false		3357631						
ANR	3357856	Symbol	D_ALWAYS		3357631						
ANR	3357857	Symbol	D_FULLDEBUG		3357631						
ANR	3357858	Symbol	* m_masterDaemon		3357631						
ANR	3357859	Symbol	m_controlleeName		3357631						
ANR	3357860	Symbol	utilToString		3357631						
ANR	3357861	Symbol	m_masterDaemon -> startCommand		3357631						
ANR	3357862	Symbol	& sock		3357631						
ANR	3357863	Symbol	sock		3357631						
ANR	3357864	Symbol	sock . connect		3357631						
ANR	3357865	Symbol	sock . end_of_message		3357631						
ANR	3357866	Symbol	m_masterDaemon -> addr		3357631						
ANR	3357867	Symbol	true		3357631						
ANR	3357868	Symbol	cmd		3357631						
ANR	3357869	Symbol	sock . code		3357631						
ANR	3357870	Symbol	m_connectionTimeout		3357631						
ANR	3357871	Symbol	m_masterDaemon		3357631						
ANR	3357872	Function	HADStateMachine :: pushReceivedAlive	778:0:22822:22976							
ANR	3357873	FunctionDef	HADStateMachine :: pushReceivedAlive (int id)		3357872	0					
ANR	3357874	CompoundStatement		780:0:22871:22976	3357872	0					
ANR	3357875	IdentifierDeclStatement	int * alloc_id = new int [ 1 ] ;	781:4:22877:22903	3357872	0	True				
ANR	3357876	IdentifierDecl	* alloc_id = new int [ 1 ]		3357872	0					
ANR	3357877	IdentifierDeclType	int *		3357872	0					
ANR	3357878	Identifier	alloc_id		3357872	1					
ANR	3357879	AssignmentExpression	* alloc_id = new int [ 1 ]		3357872	2		=			
ANR	3357880	Identifier	alloc_id		3357872	0					
ANR	3357881	PrimaryExpression	1		3357872	1					
ANR	3357882	ExpressionStatement	* alloc_id = id	782:4:22909:22923	3357872	1	True				
ANR	3357883	AssignmentExpression	* alloc_id = id		3357872	0		=			
ANR	3357884	UnaryOperationExpression	* alloc_id		3357872	0					
ANR	3357885	UnaryOperator	*		3357872	0					
ANR	3357886	Identifier	alloc_id		3357872	1					
ANR	3357887	Identifier	id		3357872	1					
ANR	3357888	ReturnStatement	return ( receivedAliveList . Append ( alloc_id ) ) ;	783:4:22929:22974	3357872	2	True				
ANR	3357889	CallExpression	receivedAliveList . Append ( alloc_id )		3357872	0					
ANR	3357890	Callee	receivedAliveList . Append		3357872	0					
ANR	3357891	MemberAccess	receivedAliveList . Append		3357872	0					
ANR	3357892	Identifier	receivedAliveList		3357872	0					
ANR	3357893	Identifier	Append		3357872	1					
ANR	3357894	ArgumentList	alloc_id		3357872	1					
ANR	3357895	Argument	alloc_id		3357872	0					
ANR	3357896	Identifier	alloc_id		3357872	0					
ANR	3357897	ReturnType	int		3357872	1					
ANR	3357898	Identifier	HADStateMachine :: pushReceivedAlive		3357872	2					
ANR	3357899	ParameterList	int id		3357872	3					
ANR	3357900	Parameter	int id	779:36:22862:22867	3357872	0	True				
ANR	3357901	ParameterType	int		3357872	0					
ANR	3357902	Identifier	id		3357872	1					
ANR	3357903	CFGEntryNode	ENTRY		3357872		True				
ANR	3357904	CFGExitNode	EXIT		3357872		True				
ANR	3357905	Symbol	* alloc_id		3357872						
ANR	3357906	Symbol	receivedAliveList . Append		3357872						
ANR	3357907	Symbol	receivedAliveList		3357872						
ANR	3357908	Symbol	id		3357872						
ANR	3357909	Symbol	alloc_id		3357872						
ANR	3357910	Function	HADStateMachine :: pushReceivedId	789:0:23056:23195							
ANR	3357911	FunctionDef	HADStateMachine :: pushReceivedId (int id)		3357910	0					
ANR	3357912	CompoundStatement		791:0:23102:23195	3357910	0					
ANR	3357913	IdentifierDeclStatement	int * alloc_id = new int [ 1 ] ;	792:1:23105:23131	3357910	0	True				
ANR	3357914	IdentifierDecl	* alloc_id = new int [ 1 ]		3357910	0					
ANR	3357915	IdentifierDeclType	int *		3357910	0					
ANR	3357916	Identifier	alloc_id		3357910	1					
ANR	3357917	AssignmentExpression	* alloc_id = new int [ 1 ]		3357910	2		=			
ANR	3357918	Identifier	alloc_id		3357910	0					
ANR	3357919	PrimaryExpression	1		3357910	1					
ANR	3357920	ExpressionStatement	* alloc_id = id	793:1:23134:23148	3357910	1	True				
ANR	3357921	AssignmentExpression	* alloc_id = id		3357910	0		=			
ANR	3357922	UnaryOperationExpression	* alloc_id		3357910	0					
ANR	3357923	UnaryOperator	*		3357910	0					
ANR	3357924	Identifier	alloc_id		3357910	1					
ANR	3357925	Identifier	id		3357910	1					
ANR	3357926	ReturnStatement	return ( receivedIdList . Append ( alloc_id ) ) ;	794:1:23151:23193	3357910	2	True				
ANR	3357927	CallExpression	receivedIdList . Append ( alloc_id )		3357910	0					
ANR	3357928	Callee	receivedIdList . Append		3357910	0					
ANR	3357929	MemberAccess	receivedIdList . Append		3357910	0					
ANR	3357930	Identifier	receivedIdList		3357910	0					
ANR	3357931	Identifier	Append		3357910	1					
ANR	3357932	ArgumentList	alloc_id		3357910	1					
ANR	3357933	Argument	alloc_id		3357910	0					
ANR	3357934	Identifier	alloc_id		3357910	0					
ANR	3357935	ReturnType	int		3357910	1					
ANR	3357936	Identifier	HADStateMachine :: pushReceivedId		3357910	2					
ANR	3357937	ParameterList	int id		3357910	3					
ANR	3357938	Parameter	int id	790:33:23093:23098	3357910	0	True				
ANR	3357939	ParameterType	int		3357910	0					
ANR	3357940	Identifier	id		3357910	1					
ANR	3357941	CFGEntryNode	ENTRY		3357910		True				
ANR	3357942	CFGExitNode	EXIT		3357910		True				
ANR	3357943	Symbol	receivedIdList		3357910						
ANR	3357944	Symbol	* alloc_id		3357910						
ANR	3357945	Symbol	receivedIdList . Append		3357910						
ANR	3357946	Symbol	id		3357910						
ANR	3357947	Symbol	alloc_id		3357910						
ANR	3357948	Function	HADStateMachine :: getHadList	807:0:23620:25827							
ANR	3357949	FunctionDef	"HADStateMachine :: getHadList (const char * str , bool usePrimary , StringList & otherIps , StringList & allIps , int & selfId)"		3357948	0					
ANR	3357950	CompoundStatement		813:0:23776:25827	3357948	0					
ANR	3357951	IdentifierDeclStatement	StringList had_list ;	814:4:23782:23801	3357948	0	True				
ANR	3357952	IdentifierDecl	had_list		3357948	0					
ANR	3357953	IdentifierDeclType	StringList		3357948	0					
ANR	3357954	Identifier	had_list		3357948	1					
ANR	3357955	IdentifierDeclStatement	int counter = 0 ;	815:4:23807:23829	3357948	1	True				
ANR	3357956	IdentifierDecl	counter = 0		3357948	0					
ANR	3357957	IdentifierDeclType	int		3357948	0					
ANR	3357958	Identifier	counter		3357948	1					
ANR	3357959	AssignmentExpression	counter = 0		3357948	2		=			
ANR	3357960	Identifier	counter		3357948	0					
ANR	3357961	PrimaryExpression	0		3357948	1					
ANR	3357962	IdentifierDeclStatement	bool isPrimaryCopy = false ;	816:4:23856:23882	3357948	2	True				
ANR	3357963	IdentifierDecl	isPrimaryCopy = false		3357948	0					
ANR	3357964	IdentifierDeclType	bool		3357948	0					
ANR	3357965	Identifier	isPrimaryCopy		3357948	1					
ANR	3357966	AssignmentExpression	isPrimaryCopy = false		3357948	2		=			
ANR	3357967	Identifier	false		3357948	0					
ANR	3357968	Identifier	false		3357948	1					
ANR	3357969	ExpressionStatement	had_list . initializeFromString ( str )	819:4:23946:23982	3357948	3	True				
ANR	3357970	CallExpression	had_list . initializeFromString ( str )		3357948	0					
ANR	3357971	Callee	had_list . initializeFromString		3357948	0					
ANR	3357972	MemberAccess	had_list . initializeFromString		3357948	0					
ANR	3357973	Identifier	had_list		3357948	0					
ANR	3357974	Identifier	initializeFromString		3357948	1					
ANR	3357975	ArgumentList	str		3357948	1					
ANR	3357976	Argument	str		3357948	0					
ANR	3357977	Identifier	str		3357948	0					
ANR	3357978	ExpressionStatement	counter = had_list . number ( ) - 1	820:4:23988:24019	3357948	4	True				
ANR	3357979	AssignmentExpression	counter = had_list . number ( ) - 1		3357948	0		=			
ANR	3357980	Identifier	counter		3357948	0					
ANR	3357981	AdditiveExpression	had_list . number ( ) - 1		3357948	1		-			
ANR	3357982	CallExpression	had_list . number ( )		3357948	0					
ANR	3357983	Callee	had_list . number		3357948	0					
ANR	3357984	MemberAccess	had_list . number		3357948	0					
ANR	3357985	Identifier	had_list		3357948	0					
ANR	3357986	Identifier	number		3357948	1					
ANR	3357987	ArgumentList			3357948	1					
ANR	3357988	PrimaryExpression	1		3357948	1					
ANR	3357989	IdentifierDeclStatement	char * try_address ;	822:4:24026:24043	3357948	5	True				
ANR	3357990	IdentifierDecl	* try_address		3357948	0					
ANR	3357991	IdentifierDeclType	char *		3357948	0					
ANR	3357992	Identifier	try_address		3357948	1					
ANR	3357993	ExpressionStatement	had_list . rewind ( )	823:4:24049:24066	3357948	6	True				
ANR	3357994	CallExpression	had_list . rewind ( )		3357948	0					
ANR	3357995	Callee	had_list . rewind		3357948	0					
ANR	3357996	MemberAccess	had_list . rewind		3357948	0					
ANR	3357997	Identifier	had_list		3357948	0					
ANR	3357998	Identifier	rewind		3357948	1					
ANR	3357999	ArgumentList			3357948	1					
ANR	3358000	IdentifierDeclStatement	Sinful my_addr ( daemonCore -> InfoCommandSinfulString ( ) ) ;	825:1:24070:24125	3357948	7	True				
ANR	3358001	IdentifierDecl	my_addr ( daemonCore -> InfoCommandSinfulString ( ) )		3357948	0					
ANR	3358002	IdentifierDeclType	Sinful		3357948	0					
ANR	3358003	Identifier	my_addr		3357948	1					
ANR	3358004	CallExpression	daemonCore -> InfoCommandSinfulString ( )		3357948	2					
ANR	3358005	Callee	daemonCore -> InfoCommandSinfulString		3357948	0					
ANR	3358006	PtrMemberAccess	daemonCore -> InfoCommandSinfulString		3357948	0					
ANR	3358007	Identifier	daemonCore		3357948	0					
ANR	3358008	Identifier	InfoCommandSinfulString		3357948	1					
ANR	3358009	ArgumentList			3357948	1					
ANR	3358010	ExpressionStatement	ASSERT ( daemonCore -> InfoCommandSinfulString ( ) && my_addr . valid ( ) )	826:1:24128:24194	3357948	8	True				
ANR	3358011	CallExpression	ASSERT ( daemonCore -> InfoCommandSinfulString ( ) && my_addr . valid ( ) )		3357948	0					
ANR	3358012	Callee	ASSERT		3357948	0					
ANR	3358013	Identifier	ASSERT		3357948	0					
ANR	3358014	ArgumentList	daemonCore -> InfoCommandSinfulString ( ) && my_addr . valid ( )		3357948	1					
ANR	3358015	Argument	daemonCore -> InfoCommandSinfulString ( ) && my_addr . valid ( )		3357948	0					
ANR	3358016	AndExpression	daemonCore -> InfoCommandSinfulString ( ) && my_addr . valid ( )		3357948	0		&&			
ANR	3358017	CallExpression	daemonCore -> InfoCommandSinfulString ( )		3357948	0					
ANR	3358018	Callee	daemonCore -> InfoCommandSinfulString		3357948	0					
ANR	3358019	PtrMemberAccess	daemonCore -> InfoCommandSinfulString		3357948	0					
ANR	3358020	Identifier	daemonCore		3357948	0					
ANR	3358021	Identifier	InfoCommandSinfulString		3357948	1					
ANR	3358022	ArgumentList			3357948	1					
ANR	3358023	CallExpression	my_addr . valid ( )		3357948	1					
ANR	3358024	Callee	my_addr . valid		3357948	0					
ANR	3358025	MemberAccess	my_addr . valid		3357948	0					
ANR	3358026	Identifier	my_addr		3357948	0					
ANR	3358027	Identifier	valid		3357948	1					
ANR	3358028	ArgumentList			3357948	1					
ANR	3358029	IdentifierDeclStatement	bool iAmPresent = false ;	828:4:24201:24224	3357948	9	True				
ANR	3358030	IdentifierDecl	iAmPresent = false		3357948	0					
ANR	3358031	IdentifierDeclType	bool		3357948	0					
ANR	3358032	Identifier	iAmPresent		3357948	1					
ANR	3358033	AssignmentExpression	iAmPresent = false		3357948	2		=			
ANR	3358034	Identifier	false		3357948	0					
ANR	3358035	Identifier	false		3357948	1					
ANR	3358036	WhileStatement	while ( ( try_address = had_list . next ( ) ) )		3357948	10					
ANR	3358037	Condition	try_address = had_list . next ( )	829:11:24237:24267	3357948	0	True				
ANR	3358038	AssignmentExpression	try_address = had_list . next ( )		3357948	0		=			
ANR	3358039	Identifier	try_address		3357948	0					
ANR	3358040	CallExpression	had_list . next ( )		3357948	1					
ANR	3358041	Callee	had_list . next		3357948	0					
ANR	3358042	MemberAccess	had_list . next		3357948	0					
ANR	3358043	Identifier	had_list		3357948	0					
ANR	3358044	Identifier	next		3357948	1					
ANR	3358045	ArgumentList			3357948	1					
ANR	3358046	CompoundStatement		18:8:504:551	3357948	1					
ANR	3358047	IdentifierDeclStatement	char * sinful_addr = utilToSinful ( try_address ) ;	830:8:24281:24328	3357948	0	True				
ANR	3358048	IdentifierDecl	* sinful_addr = utilToSinful ( try_address )		3357948	0					
ANR	3358049	IdentifierDeclType	char *		3357948	0					
ANR	3358050	Identifier	sinful_addr		3357948	1					
ANR	3358051	AssignmentExpression	* sinful_addr = utilToSinful ( try_address )		3357948	2		=			
ANR	3358052	Identifier	sinful_addr		3357948	0					
ANR	3358053	CallExpression	utilToSinful ( try_address )		3357948	1					
ANR	3358054	Callee	utilToSinful		3357948	0					
ANR	3358055	Identifier	utilToSinful		3357948	0					
ANR	3358056	ArgumentList	try_address		3357948	1					
ANR	3358057	Argument	try_address		3357948	0					
ANR	3358058	Identifier	try_address		3357948	0					
ANR	3358059	Statement	dprintf	831:2:24332:24338	3357948	1	True				
ANR	3358060	Statement	(	831:9:24339:24339	3357948	2	True				
ANR	3358061	Statement	D_ALWAYS	831:10:24340:24347	3357948	3	True				
ANR	3358062	Statement	","	831:18:24348:24348	3357948	4	True				
ANR	3358063	Statement	"""HADStateMachine::initializeHADList my address %s """	832:4:24354:24404	3357948	5	True				
ANR	3358064	Statement	"""vs. next address in the list%s\\n"""	833:4:24410:24443	3357948	6	True				
ANR	3358065	Statement	","	833:38:24444:24444	3357948	7	True				
ANR	3358066	Statement	my_addr	834:4:24450:24456	3357948	8	True				
ANR	3358067	Statement	.	834:11:24457:24457	3357948	9	True				
ANR	3358068	Statement	getSinful	834:12:24458:24466	3357948	10	True				
ANR	3358069	Statement	(	834:21:24467:24467	3357948	11	True				
ANR	3358070	Statement	)	834:22:24468:24468	3357948	12	True				
ANR	3358071	Statement	","	834:23:24469:24469	3357948	13	True				
ANR	3358072	Statement	sinful_addr	834:25:24471:24481	3357948	14	True				
ANR	3358073	Statement	)	834:37:24483:24483	3357948	15	True				
ANR	3358074	ExpressionStatement		834:38:24484:24484	3357948	16	True				
ANR	3358075	IfStatement	if ( sinful_addr == NULL )		3357948	17					
ANR	3358076	Condition	sinful_addr == NULL	835:12:24498:24516	3357948	0	True				
ANR	3358077	EqualityExpression	sinful_addr == NULL		3357948	0		==			
ANR	3358078	Identifier	sinful_addr		3357948	0					
ANR	3358079	Identifier	NULL		3357948	1					
ANR	3358080	CompoundStatement		23:34:743:743	3357948	1					
ANR	3358081	ExpressionStatement	"dprintf ( D_ALWAYS , ""HAD CONFIGURATION ERROR: pid %d"" , daemonCore -> getpid ( ) )"	836:12:24534:24616	3357948	0	True				
ANR	3358082	CallExpression	"dprintf ( D_ALWAYS , ""HAD CONFIGURATION ERROR: pid %d"" , daemonCore -> getpid ( ) )"		3357948	0					
ANR	3358083	Callee	dprintf		3357948	0					
ANR	3358084	Identifier	dprintf		3357948	0					
ANR	3358085	ArgumentList	D_ALWAYS		3357948	1					
ANR	3358086	Argument	D_ALWAYS		3357948	0					
ANR	3358087	Identifier	D_ALWAYS		3357948	0					
ANR	3358088	Argument	"""HAD CONFIGURATION ERROR: pid %d"""		3357948	1					
ANR	3358089	PrimaryExpression	"""HAD CONFIGURATION ERROR: pid %d"""		3357948	0					
ANR	3358090	Argument	daemonCore -> getpid ( )		3357948	2					
ANR	3358091	CallExpression	daemonCore -> getpid ( )		3357948	0					
ANR	3358092	Callee	daemonCore -> getpid		3357948	0					
ANR	3358093	PtrMemberAccess	daemonCore -> getpid		3357948	0					
ANR	3358094	Identifier	daemonCore		3357948	0					
ANR	3358095	Identifier	getpid		3357948	1					
ANR	3358096	ArgumentList			3357948	1					
ANR	3358097	ExpressionStatement	"dprintf ( D_ALWAYS , ""not valid address %s\\n"" , try_address )"	838:12:24630:24687	3357948	1	True				
ANR	3358098	CallExpression	"dprintf ( D_ALWAYS , ""not valid address %s\\n"" , try_address )"		3357948	0					
ANR	3358099	Callee	dprintf		3357948	0					
ANR	3358100	Identifier	dprintf		3357948	0					
ANR	3358101	ArgumentList	D_ALWAYS		3357948	1					
ANR	3358102	Argument	D_ALWAYS		3357948	0					
ANR	3358103	Identifier	D_ALWAYS		3357948	0					
ANR	3358104	Argument	"""not valid address %s\\n"""		3357948	1					
ANR	3358105	PrimaryExpression	"""not valid address %s\\n"""		3357948	0					
ANR	3358106	Argument	try_address		3357948	2					
ANR	3358107	Identifier	try_address		3357948	0					
ANR	3358108	ExpressionStatement	"utilCrucialError ( """" )"	840:12:24702:24724	3357948	2	True				
ANR	3358109	CallExpression	"utilCrucialError ( """" )"		3357948	0					
ANR	3358110	Callee	utilCrucialError		3357948	0					
ANR	3358111	Identifier	utilCrucialError		3357948	0					
ANR	3358112	ArgumentList	""""""		3357948	1					
ANR	3358113	Argument	""""""		3357948	0					
ANR	3358114	PrimaryExpression	""""""		3357948	0					
ANR	3358115	ContinueStatement	continue ;	841:12:24738:24746	3357948	3	True				
ANR	3358116	ExpressionStatement	allIps . insert ( sinful_addr )	843:2:24760:24788	3357948	18	True				
ANR	3358117	CallExpression	allIps . insert ( sinful_addr )		3357948	0					
ANR	3358118	Callee	allIps . insert		3357948	0					
ANR	3358119	MemberAccess	allIps . insert		3357948	0					
ANR	3358120	Identifier	allIps		3357948	0					
ANR	3358121	Identifier	insert		3357948	1					
ANR	3358122	ArgumentList	sinful_addr		3357948	1					
ANR	3358123	Argument	sinful_addr		3357948	0					
ANR	3358124	Identifier	sinful_addr		3357948	0					
ANR	3358125	IfStatement	if ( my_addr . addressPointsToMe ( Sinful ( sinful_addr ) ) )		3357948	19					
ANR	3358126	Condition	my_addr . addressPointsToMe ( Sinful ( sinful_addr ) )	844:12:24802:24849	3357948	0	True				
ANR	3358127	CallExpression	my_addr . addressPointsToMe ( Sinful ( sinful_addr ) )		3357948	0					
ANR	3358128	Callee	my_addr . addressPointsToMe		3357948	0					
ANR	3358129	MemberAccess	my_addr . addressPointsToMe		3357948	0					
ANR	3358130	Identifier	my_addr		3357948	0					
ANR	3358131	Identifier	addressPointsToMe		3357948	1					
ANR	3358132	ArgumentList	Sinful ( sinful_addr )		3357948	1					
ANR	3358133	Argument	Sinful ( sinful_addr )		3357948	0					
ANR	3358134	CallExpression	Sinful ( sinful_addr )		3357948	0					
ANR	3358135	Callee	Sinful		3357948	0					
ANR	3358136	Identifier	Sinful		3357948	0					
ANR	3358137	ArgumentList	sinful_addr		3357948	1					
ANR	3358138	Argument	sinful_addr		3357948	0					
ANR	3358139	Identifier	sinful_addr		3357948	0					
ANR	3358140	CompoundStatement		32:63:1076:1076	3357948	1					
ANR	3358141	ExpressionStatement	iAmPresent = true	845:12:24867:24884	3357948	0	True				
ANR	3358142	AssignmentExpression	iAmPresent = true		3357948	0		=			
ANR	3358143	Identifier	iAmPresent		3357948	0					
ANR	3358144	Identifier	true		3357948	1					
ANR	3358145	ExpressionStatement	selfId = counter	848:12:25011:25027	3357948	1	True				
ANR	3358146	AssignmentExpression	selfId = counter		3357948	0		=			
ANR	3358147	Identifier	selfId		3357948	0					
ANR	3358148	Identifier	counter		3357948	1					
ANR	3358149	IfStatement	if ( usePrimary && counter == ( had_list . number ( ) - 1 ) )		3357948	2					
ANR	3358150	Condition	usePrimary && counter == ( had_list . number ( ) - 1 )	850:15:25045:25092	3357948	0	True				
ANR	3358151	AndExpression	usePrimary && counter == ( had_list . number ( ) - 1 )		3357948	0		&&			
ANR	3358152	Identifier	usePrimary		3357948	0					
ANR	3358153	EqualityExpression	counter == ( had_list . number ( ) - 1 )		3357948	1		==			
ANR	3358154	Identifier	counter		3357948	0					
ANR	3358155	AdditiveExpression	had_list . number ( ) - 1		3357948	1		-			
ANR	3358156	CallExpression	had_list . number ( )		3357948	0					
ANR	3358157	Callee	had_list . number		3357948	0					
ANR	3358158	MemberAccess	had_list . number		3357948	0					
ANR	3358159	Identifier	had_list		3357948	0					
ANR	3358160	Identifier	number		3357948	1					
ANR	3358161	ArgumentList			3357948	1					
ANR	3358162	PrimaryExpression	1		3357948	1					
ANR	3358163	CompoundStatement		38:64:1317:1317	3357948	1					
ANR	3358164	ExpressionStatement	isPrimaryCopy = true	854:4:25219:25239	3357948	0	True				
ANR	3358165	AssignmentExpression	isPrimaryCopy = true		3357948	0		=			
ANR	3358166	Identifier	isPrimaryCopy		3357948	0					
ANR	3358167	Identifier	true		3357948	1					
ANR	3358168	ElseStatement	else		3357948	0					
ANR	3358169	CompoundStatement		44:15:1493:1493	3357948	0					
ANR	3358170	ExpressionStatement	otherIps . insert ( sinful_addr )	857:12:25284:25314	3357948	0	True				
ANR	3358171	CallExpression	otherIps . insert ( sinful_addr )		3357948	0					
ANR	3358172	Callee	otherIps . insert		3357948	0					
ANR	3358173	MemberAccess	otherIps . insert		3357948	0					
ANR	3358174	Identifier	otherIps		3357948	0					
ANR	3358175	Identifier	insert		3357948	1					
ANR	3358176	ArgumentList	sinful_addr		3357948	1					
ANR	3358177	Argument	sinful_addr		3357948	0					
ANR	3358178	Identifier	sinful_addr		3357948	0					
ANR	3358179	ExpressionStatement	free ( sinful_addr )	863:8:25488:25507	3357948	20	True				
ANR	3358180	CallExpression	free ( sinful_addr )		3357948	0					
ANR	3358181	Callee	free		3357948	0					
ANR	3358182	Identifier	free		3357948	0					
ANR	3358183	ArgumentList	sinful_addr		3357948	1					
ANR	3358184	Argument	sinful_addr		3357948	0					
ANR	3358185	Identifier	sinful_addr		3357948	0					
ANR	3358186	ExpressionStatement	counter --	864:8:25517:25527	3357948	21	True				
ANR	3358187	PostIncDecOperationExpression	counter --		3357948	0					
ANR	3358188	Identifier	counter		3357948	0					
ANR	3358189	IncDec	--		3357948	1					
ANR	3358190	IfStatement	if ( ! iAmPresent )		3357948	11					
ANR	3358191	Condition	! iAmPresent	867:8:25557:25567	3357948	0	True				
ANR	3358192	UnaryOperationExpression	! iAmPresent		3357948	0					
ANR	3358193	UnaryOperator	!		3357948	0					
ANR	3358194	Identifier	iAmPresent		3357948	1					
ANR	3358195	CompoundStatement		56:2:1798:1812	3357948	1					
ANR	3358196	IdentifierDeclStatement	char buf [ 1024 ] ;	868:2:25575:25589	3357948	0	True				
ANR	3358197	IdentifierDecl	buf [ 1024 ]		3357948	0					
ANR	3358198	IdentifierDeclType	char [ 1024 ]		3357948	0					
ANR	3358199	Identifier	buf		3357948	1					
ANR	3358200	PrimaryExpression	1024		3357948	2					
ANR	3358201	Statement	snprintf	869:2:25593:25600	3357948	1	True				
ANR	3358202	Statement	(	869:10:25601:25601	3357948	2	True				
ANR	3358203	Statement	buf	869:12:25603:25605	3357948	3	True				
ANR	3358204	Statement	","	869:15:25606:25606	3357948	4	True				
ANR	3358205	Statement	sizeof	869:17:25608:25613	3357948	5	True				
ANR	3358206	Statement	(	869:23:25614:25614	3357948	6	True				
ANR	3358207	Statement	buf	869:24:25615:25617	3357948	7	True				
ANR	3358208	Statement	)	869:27:25618:25618	3357948	8	True				
ANR	3358209	Statement	","	869:28:25619:25619	3357948	9	True				
ANR	3358210	Statement	"""HAD CONFIGURATION ERROR:  my address '%s'"""	870:6:25627:25669	3357948	10	True				
ANR	3358211	Statement	"""is not present in HAD_LIST '%s'"""	871:6:25677:25709	3357948	11	True				
ANR	3358212	Statement	","	871:39:25710:25710	3357948	12	True				
ANR	3358213	Statement	daemonCore	872:6:25718:25727	3357948	13	True				
ANR	3358214	Statement	->	872:16:25728:25729	3357948	14	True				
ANR	3358215	Statement	InfoCommandSinfulString	872:18:25730:25752	3357948	15	True				
ANR	3358216	Statement	(	872:41:25753:25753	3357948	16	True				
ANR	3358217	Statement	)	872:42:25754:25754	3357948	17	True				
ANR	3358218	Statement	","	872:43:25755:25755	3357948	18	True				
ANR	3358219	Statement	str	872:45:25757:25759	3357948	19	True				
ANR	3358220	Statement	)	872:49:25761:25761	3357948	20	True				
ANR	3358221	ExpressionStatement		872:50:25762:25762	3357948	21	True				
ANR	3358222	ExpressionStatement	utilCrucialError ( buf )	873:8:25772:25795	3357948	22	True				
ANR	3358223	CallExpression	utilCrucialError ( buf )		3357948	0					
ANR	3358224	Callee	utilCrucialError		3357948	0					
ANR	3358225	Identifier	utilCrucialError		3357948	0					
ANR	3358226	ArgumentList	buf		3357948	1					
ANR	3358227	Argument	buf		3357948	0					
ANR	3358228	Identifier	buf		3357948	0					
ANR	3358229	ReturnStatement	return isPrimaryCopy ;	876:1:25805:25825	3357948	12	True				
ANR	3358230	Identifier	isPrimaryCopy		3357948	0					
ANR	3358231	ReturnType	bool		3357948	1					
ANR	3358232	Identifier	HADStateMachine :: getHadList		3357948	2					
ANR	3358233	ParameterList	"const char * str , bool usePrimary , StringList & otherIps , StringList & allIps , int & selfId"		3357948	3					
ANR	3358234	Parameter	const char * str	808:29:23654:23668	3357948	0	True				
ANR	3358235	ParameterType	const char *		3357948	0					
ANR	3358236	Identifier	str		3357948	1					
ANR	3358237	Parameter	bool usePrimary	809:8:23679:23693	3357948	1	True				
ANR	3358238	ParameterType	bool		3357948	0					
ANR	3358239	Identifier	usePrimary		3357948	1					
ANR	3358240	Parameter	StringList & otherIps	810:8:23704:23723	3357948	2	True				
ANR	3358241	ParameterType	StringList &		3357948	0					
ANR	3358242	Identifier	otherIps		3357948	1					
ANR	3358243	Parameter	StringList & allIps	811:8:23734:23751	3357948	3	True				
ANR	3358244	ParameterType	StringList &		3357948	0					
ANR	3358245	Identifier	allIps		3357948	1					
ANR	3358246	Parameter	int & selfId	812:8:23762:23772	3357948	4	True				
ANR	3358247	ParameterType	int &		3357948	0					
ANR	3358248	Identifier	selfId		3357948	1					
ANR	3358249	CFGEntryNode	ENTRY		3357948		True				
ANR	3358250	CFGExitNode	EXIT		3357948		True				
ANR	3358251	Symbol	utilToSinful		3357948						
ANR	3358252	Symbol	daemonCore -> getpid		3357948						
ANR	3358253	Symbol	otherIps		3357948						
ANR	3358254	Symbol	my_addr		3357948						
ANR	3358255	Symbol	had_list . next		3357948						
ANR	3358256	Symbol	daemonCore		3357948						
ANR	3358257	Symbol	Sinful		3357948						
ANR	3358258	Symbol	iAmPresent		3357948						
ANR	3358259	Symbol	had_list		3357948						
ANR	3358260	Symbol	had_list . number		3357948						
ANR	3358261	Symbol	usePrimary		3357948						
ANR	3358262	Symbol	allIps		3357948						
ANR	3358263	Symbol	daemonCore -> InfoCommandSinfulString		3357948						
ANR	3358264	Symbol	sinful_addr		3357948						
ANR	3358265	Symbol	NULL		3357948						
ANR	3358266	Symbol	try_address		3357948						
ANR	3358267	Symbol	false		3357948						
ANR	3358268	Symbol	D_ALWAYS		3357948						
ANR	3358269	Symbol	counter		3357948						
ANR	3358270	Symbol	my_addr . addressPointsToMe		3357948						
ANR	3358271	Symbol	str		3357948						
ANR	3358272	Symbol	buf		3357948						
ANR	3358273	Symbol	my_addr . valid		3357948						
ANR	3358274	Symbol	* daemonCore		3357948						
ANR	3358275	Symbol	selfId		3357948						
ANR	3358276	Symbol	true		3357948						
ANR	3358277	Symbol	isPrimaryCopy		3357948						
ANR	3358278	Function	HADStateMachine :: checkList	887:0:26134:26337							
ANR	3358279	FunctionDef	HADStateMachine :: checkList (List < int > * list)		3358278	0					
ANR	3358280	CompoundStatement		889:0:26185:26337	3358278	0					
ANR	3358281	IdentifierDeclStatement	int id ;	890:4:26191:26197	3358278	0	True				
ANR	3358282	IdentifierDecl	id		3358278	0					
ANR	3358283	IdentifierDeclType	int		3358278	0					
ANR	3358284	Identifier	id		3358278	1					
ANR	3358285	ExpressionStatement	list -> Rewind ( )	892:4:26204:26218	3358278	1	True				
ANR	3358286	CallExpression	list -> Rewind ( )		3358278	0					
ANR	3358287	Callee	list -> Rewind		3358278	0					
ANR	3358288	PtrMemberAccess	list -> Rewind		3358278	0					
ANR	3358289	Identifier	list		3358278	0					
ANR	3358290	Identifier	Rewind		3358278	1					
ANR	3358291	ArgumentList			3358278	1					
ANR	3358292	WhileStatement	while ( list -> Next ( id ) )		3358278	2					
ANR	3358293	Condition	list -> Next ( id )	893:10:26230:26245	3358278	0	True				
ANR	3358294	CallExpression	list -> Next ( id )		3358278	0					
ANR	3358295	Callee	list -> Next		3358278	0					
ANR	3358296	PtrMemberAccess	list -> Next		3358278	0					
ANR	3358297	Identifier	list		3358278	0					
ANR	3358298	Identifier	Next		3358278	1					
ANR	3358299	ArgumentList	id		3358278	1					
ANR	3358300	Argument	id		3358278	0					
ANR	3358301	Identifier	id		3358278	0					
ANR	3358302	CompoundStatement		5:29:63:63	3358278	1					
ANR	3358303	IfStatement	if ( id > m_selfId )		3358278	0					
ANR	3358304	Condition	id > m_selfId	894:11:26262:26274	3358278	0	True				
ANR	3358305	RelationalExpression	id > m_selfId		3358278	0		>			
ANR	3358306	Identifier	id		3358278	0					
ANR	3358307	Identifier	m_selfId		3358278	1					
ANR	3358308	CompoundStatement		6:25:90:90	3358278	1					
ANR	3358309	ReturnStatement	return false ;	895:12:26290:26302	3358278	0	True				
ANR	3358310	Identifier	false		3358278	0					
ANR	3358311	ReturnStatement	return true ;	898:4:26324:26335	3358278	3	True				
ANR	3358312	Identifier	true		3358278	0					
ANR	3358313	ReturnType	bool		3358278	1					
ANR	3358314	Identifier	HADStateMachine :: checkList		3358278	2					
ANR	3358315	ParameterList	List < int > * list		3358278	3					
ANR	3358316	Parameter	List < int > * list	888:28:26167:26181	3358278	0	True				
ANR	3358317	ParameterType	List < int > *		3358278	0					
ANR	3358318	Identifier	list		3358278	1					
ANR	3358319	CFGEntryNode	ENTRY		3358278		True				
ANR	3358320	CFGExitNode	EXIT		3358278		True				
ANR	3358321	Symbol	list -> Next		3358278						
ANR	3358322	Symbol	* list		3358278						
ANR	3358323	Symbol	m_selfId		3358278						
ANR	3358324	Symbol	false		3358278						
ANR	3358325	Symbol	true		3358278						
ANR	3358326	Symbol	id		3358278						
ANR	3358327	Symbol	list		3358278						
ANR	3358328	Function	HADStateMachine :: removeAllFromList	904:0:26417:26639							
ANR	3358329	FunctionDef	HADStateMachine :: removeAllFromList (List < int > * list)		3358328	0					
ANR	3358330	CompoundStatement		906:0:26476:26639	3358328	0					
ANR	3358331	IdentifierDeclStatement	int * elem ;	907:4:26482:26491	3358328	0	True				
ANR	3358332	IdentifierDecl	* elem		3358328	0					
ANR	3358333	IdentifierDeclType	int *		3358328	0					
ANR	3358334	Identifier	elem		3358328	1					
ANR	3358335	ExpressionStatement	list -> Rewind ( )	908:4:26497:26511	3358328	1	True				
ANR	3358336	CallExpression	list -> Rewind ( )		3358328	0					
ANR	3358337	Callee	list -> Rewind		3358328	0					
ANR	3358338	PtrMemberAccess	list -> Rewind		3358328	0					
ANR	3358339	Identifier	list		3358328	0					
ANR	3358340	Identifier	Rewind		3358328	1					
ANR	3358341	ArgumentList			3358328	1					
ANR	3358342	WhileStatement	while ( ( elem = list -> Next ( ) ) )		3358328	2					
ANR	3358343	Condition	elem = list -> Next ( )	909:10:26523:26543	3358328	0	True				
ANR	3358344	AssignmentExpression	elem = list -> Next ( )		3358328	0		=			
ANR	3358345	Identifier	elem		3358328	0					
ANR	3358346	CallExpression	list -> Next ( )		3358328	1					
ANR	3358347	Callee	list -> Next		3358328	0					
ANR	3358348	PtrMemberAccess	list -> Next		3358328	0					
ANR	3358349	Identifier	list		3358328	0					
ANR	3358350	Identifier	Next		3358328	1					
ANR	3358351	ArgumentList			3358328	1					
ANR	3358352	CompoundStatement		4:34:70:70	3358328	1					
ANR	3358353	Statement	delete	910:8:26557:26562	3358328	0	True				
ANR	3358354	ExpressionStatement	elem	910:15:26564:26568	3358328	1	True				
ANR	3358355	Identifier	elem		3358328	0					
ANR	3358356	ExpressionStatement	list -> DeleteCurrent ( )	911:8:26578:26599	3358328	2	True				
ANR	3358357	CallExpression	list -> DeleteCurrent ( )		3358328	0					
ANR	3358358	Callee	list -> DeleteCurrent		3358328	0					
ANR	3358359	PtrMemberAccess	list -> DeleteCurrent		3358328	0					
ANR	3358360	Identifier	list		3358328	0					
ANR	3358361	Identifier	DeleteCurrent		3358328	1					
ANR	3358362	ArgumentList			3358328	1					
ANR	3358363	ReturnType	void		3358328	1					
ANR	3358364	Identifier	HADStateMachine :: removeAllFromList		3358328	2					
ANR	3358365	ParameterList	List < int > * list		3358328	3					
ANR	3358366	Parameter	List < int > * list	905:36:26458:26472	3358328	0	True				
ANR	3358367	ParameterType	List < int > *		3358328	0					
ANR	3358368	Identifier	list		3358328	1					
ANR	3358369	CFGEntryNode	ENTRY		3358328		True				
ANR	3358370	CFGExitNode	EXIT		3358328		True				
ANR	3358371	Symbol	elem		3358328						
ANR	3358372	Symbol	list -> Next		3358328						
ANR	3358373	Symbol	* list		3358328						
ANR	3358374	Symbol	list		3358328						
ANR	3358375	Function	HADStateMachine :: clearBuffers	920:0:26721:26851							
ANR	3358376	FunctionDef	HADStateMachine :: clearBuffers ()		3358375	0					
ANR	3358377	CompoundStatement		922:0:26762:26851	3358375	0					
ANR	3358378	ExpressionStatement	removeAllFromList ( & receivedAliveList )	923:4:26768:26807	3358375	0	True				
ANR	3358379	CallExpression	removeAllFromList ( & receivedAliveList )		3358375	0					
ANR	3358380	Callee	removeAllFromList		3358375	0					
ANR	3358381	Identifier	removeAllFromList		3358375	0					
ANR	3358382	ArgumentList	& receivedAliveList		3358375	1					
ANR	3358383	Argument	& receivedAliveList		3358375	0					
ANR	3358384	UnaryOperationExpression	& receivedAliveList		3358375	0					
ANR	3358385	UnaryOperator	&		3358375	0					
ANR	3358386	Identifier	receivedAliveList		3358375	1					
ANR	3358387	ExpressionStatement	removeAllFromList ( & receivedIdList )	924:4:26813:26849	3358375	1	True				
ANR	3358388	CallExpression	removeAllFromList ( & receivedIdList )		3358375	0					
ANR	3358389	Callee	removeAllFromList		3358375	0					
ANR	3358390	Identifier	removeAllFromList		3358375	0					
ANR	3358391	ArgumentList	& receivedIdList		3358375	1					
ANR	3358392	Argument	& receivedIdList		3358375	0					
ANR	3358393	UnaryOperationExpression	& receivedIdList		3358375	0					
ANR	3358394	UnaryOperator	&		3358375	0					
ANR	3358395	Identifier	receivedIdList		3358375	1					
ANR	3358396	ReturnType	void		3358375	1					
ANR	3358397	Identifier	HADStateMachine :: clearBuffers		3358375	2					
ANR	3358398	ParameterList			3358375	3					
ANR	3358399	CFGEntryNode	ENTRY		3358375		True				
ANR	3358400	CFGExitNode	EXIT		3358375		True				
ANR	3358401	Symbol	& receivedAliveList		3358375						
ANR	3358402	Symbol	& receivedIdList		3358375						
ANR	3358403	Function	HADStateMachine :: commandHandlerHad	931:0:27018:28936							
ANR	3358404	FunctionDef	"HADStateMachine :: commandHandlerHad (int cmd , Stream * strm)"		3358403	0					
ANR	3358405	CompoundStatement		933:0:27080:28936	3358403	0					
ANR	3358406	IdentifierDeclStatement	char buf [ 1024 ] ;	934:1:27083:27097	3358403	0	True				
ANR	3358407	IdentifierDecl	buf [ 1024 ]		3358403	0					
ANR	3358408	IdentifierDeclType	char [ 1024 ]		3358403	0					
ANR	3358409	Identifier	buf		3358403	1					
ANR	3358410	PrimaryExpression	1024		3358403	2					
ANR	3358411	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""commandHandler command %s(%d) is received\\n"" , utilToString ( cmd ) , cmd )"	936:4:27104:27200	3358403	1	True				
ANR	3358412	CallExpression	"dprintf ( D_FULLDEBUG , ""commandHandler command %s(%d) is received\\n"" , utilToString ( cmd ) , cmd )"		3358403	0					
ANR	3358413	Callee	dprintf		3358403	0					
ANR	3358414	Identifier	dprintf		3358403	0					
ANR	3358415	ArgumentList	D_FULLDEBUG		3358403	1					
ANR	3358416	Argument	D_FULLDEBUG		3358403	0					
ANR	3358417	Identifier	D_FULLDEBUG		3358403	0					
ANR	3358418	Argument	"""commandHandler command %s(%d) is received\\n"""		3358403	1					
ANR	3358419	PrimaryExpression	"""commandHandler command %s(%d) is received\\n"""		3358403	0					
ANR	3358420	Argument	utilToString ( cmd )		3358403	2					
ANR	3358421	CallExpression	utilToString ( cmd )		3358403	0					
ANR	3358422	Callee	utilToString		3358403	0					
ANR	3358423	Identifier	utilToString		3358403	0					
ANR	3358424	ArgumentList	cmd		3358403	1					
ANR	3358425	Argument	cmd		3358403	0					
ANR	3358426	Identifier	cmd		3358403	0					
ANR	3358427	Argument	cmd		3358403	3					
ANR	3358428	Identifier	cmd		3358403	0					
ANR	3358429	ExpressionStatement	strm -> timeout ( m_connectionTimeout )	939:4:27207:27243	3358403	2	True				
ANR	3358430	CallExpression	strm -> timeout ( m_connectionTimeout )		3358403	0					
ANR	3358431	Callee	strm -> timeout		3358403	0					
ANR	3358432	PtrMemberAccess	strm -> timeout		3358403	0					
ANR	3358433	Identifier	strm		3358403	0					
ANR	3358434	Identifier	timeout		3358403	1					
ANR	3358435	ArgumentList	m_connectionTimeout		3358403	1					
ANR	3358436	Argument	m_connectionTimeout		3358403	0					
ANR	3358437	Identifier	m_connectionTimeout		3358403	0					
ANR	3358438	IdentifierDeclStatement	ClassAd ad ;	941:4:27250:27260	3358403	3	True				
ANR	3358439	IdentifierDecl	ad		3358403	0					
ANR	3358440	IdentifierDeclType	ClassAd		3358403	0					
ANR	3358441	Identifier	ad		3358403	1					
ANR	3358442	ExpressionStatement	strm -> decode ( )	942:4:27266:27280	3358403	4	True				
ANR	3358443	CallExpression	strm -> decode ( )		3358403	0					
ANR	3358444	Callee	strm -> decode		3358403	0					
ANR	3358445	PtrMemberAccess	strm -> decode		3358403	0					
ANR	3358446	Identifier	strm		3358403	0					
ANR	3358447	Identifier	decode		3358403	1					
ANR	3358448	ArgumentList			3358403	1					
ANR	3358449	IfStatement	if ( ! ad . initFromStream ( * strm ) )		3358403	5					
ANR	3358450	Condition	! ad . initFromStream ( * strm )	943:8:27290:27315	3358403	0	True				
ANR	3358451	UnaryOperationExpression	! ad . initFromStream ( * strm )		3358403	0					
ANR	3358452	UnaryOperator	!		3358403	0					
ANR	3358453	CallExpression	ad . initFromStream ( * strm )		3358403	1					
ANR	3358454	Callee	ad . initFromStream		3358403	0					
ANR	3358455	MemberAccess	ad . initFromStream		3358403	0					
ANR	3358456	Identifier	ad		3358403	0					
ANR	3358457	Identifier	initFromStream		3358403	1					
ANR	3358458	ArgumentList	* strm		3358403	1					
ANR	3358459	Argument	* strm		3358403	0					
ANR	3358460	UnaryOperationExpression	* strm		3358403	0					
ANR	3358461	UnaryOperator	*		3358403	0					
ANR	3358462	Identifier	strm		3358403	1					
ANR	3358463	CompoundStatement		11:37:238:238	3358403	1					
ANR	3358464	ExpressionStatement	"dprintf ( D_ALWAYS , ""commandHandler ERROR -  can't read classad\\n"" )"	944:8:27329:27396	3358403	0	True				
ANR	3358465	CallExpression	"dprintf ( D_ALWAYS , ""commandHandler ERROR -  can't read classad\\n"" )"		3358403	0					
ANR	3358466	Callee	dprintf		3358403	0					
ANR	3358467	Identifier	dprintf		3358403	0					
ANR	3358468	ArgumentList	D_ALWAYS		3358403	1					
ANR	3358469	Argument	D_ALWAYS		3358403	0					
ANR	3358470	Identifier	D_ALWAYS		3358403	0					
ANR	3358471	Argument	"""commandHandler ERROR -  can't read classad\\n"""		3358403	1					
ANR	3358472	PrimaryExpression	"""commandHandler ERROR -  can't read classad\\n"""		3358403	0					
ANR	3358473	ReturnStatement	return FALSE ;	945:8:27406:27418	3358403	1	True				
ANR	3358474	Identifier	FALSE		3358403	0					
ANR	3358475	IfStatement	if ( ! strm -> end_of_message ( ) )		3358403	6					
ANR	3358476	Condition	! strm -> end_of_message ( )	947:8:27434:27457	3358403	0	True				
ANR	3358477	UnaryOperationExpression	! strm -> end_of_message ( )		3358403	0					
ANR	3358478	UnaryOperator	!		3358403	0					
ANR	3358479	CallExpression	strm -> end_of_message ( )		3358403	1					
ANR	3358480	Callee	strm -> end_of_message		3358403	0					
ANR	3358481	PtrMemberAccess	strm -> end_of_message		3358403	0					
ANR	3358482	Identifier	strm		3358403	0					
ANR	3358483	Identifier	end_of_message		3358403	1					
ANR	3358484	ArgumentList			3358403	1					
ANR	3358485	CompoundStatement		15:35:380:380	3358403	1					
ANR	3358486	ExpressionStatement	"dprintf ( D_ALWAYS , ""commandHandlerHad ERROR -  can't read EOM\\n"" )"	948:8:27471:27537	3358403	0	True				
ANR	3358487	CallExpression	"dprintf ( D_ALWAYS , ""commandHandlerHad ERROR -  can't read EOM\\n"" )"		3358403	0					
ANR	3358488	Callee	dprintf		3358403	0					
ANR	3358489	Identifier	dprintf		3358403	0					
ANR	3358490	ArgumentList	D_ALWAYS		3358403	1					
ANR	3358491	Argument	D_ALWAYS		3358403	0					
ANR	3358492	Identifier	D_ALWAYS		3358403	0					
ANR	3358493	Argument	"""commandHandlerHad ERROR -  can't read EOM\\n"""		3358403	1					
ANR	3358494	PrimaryExpression	"""commandHandlerHad ERROR -  can't read EOM\\n"""		3358403	0					
ANR	3358495	ReturnStatement	return FALSE ;	949:8:27547:27559	3358403	1	True				
ANR	3358496	Identifier	FALSE		3358403	0					
ANR	3358497	IdentifierDeclStatement	int new_id ;	952:4:27572:27582	3358403	7	True				
ANR	3358498	IdentifierDecl	new_id		3358403	0					
ANR	3358499	IdentifierDeclType	int		3358403	0					
ANR	3358500	Identifier	new_id		3358403	1					
ANR	3358501	IfStatement	"if ( ! ad . LookupInteger ( ATTR_HAD_SELF_ID , new_id ) )"		3358403	8					
ANR	3358502	Condition	"! ad . LookupInteger ( ATTR_HAD_SELF_ID , new_id )"	953:6:27590:27634	3358403	0	True				
ANR	3358503	UnaryOperationExpression	"! ad . LookupInteger ( ATTR_HAD_SELF_ID , new_id )"		3358403	0					
ANR	3358504	UnaryOperator	!		3358403	0					
ANR	3358505	CallExpression	"ad . LookupInteger ( ATTR_HAD_SELF_ID , new_id )"		3358403	1					
ANR	3358506	Callee	ad . LookupInteger		3358403	0					
ANR	3358507	MemberAccess	ad . LookupInteger		3358403	0					
ANR	3358508	Identifier	ad		3358403	0					
ANR	3358509	Identifier	LookupInteger		3358403	1					
ANR	3358510	ArgumentList	ATTR_HAD_SELF_ID		3358403	1					
ANR	3358511	Argument	ATTR_HAD_SELF_ID		3358403	0					
ANR	3358512	Identifier	ATTR_HAD_SELF_ID		3358403	0					
ANR	3358513	Argument	new_id		3358403	1					
ANR	3358514	Identifier	new_id		3358403	0					
ANR	3358515	CompoundStatement		21:54:557:557	3358403	1					
ANR	3358516	ExpressionStatement	"dprintf ( D_ALWAYS , ""commandHandler ERROR: ID not in ad received\\n"" )"	954:2:27642:27710	3358403	0	True				
ANR	3358517	CallExpression	"dprintf ( D_ALWAYS , ""commandHandler ERROR: ID not in ad received\\n"" )"		3358403	0					
ANR	3358518	Callee	dprintf		3358403	0					
ANR	3358519	Identifier	dprintf		3358403	0					
ANR	3358520	ArgumentList	D_ALWAYS		3358403	1					
ANR	3358521	Argument	D_ALWAYS		3358403	0					
ANR	3358522	Identifier	D_ALWAYS		3358403	0					
ANR	3358523	Argument	"""commandHandler ERROR: ID not in ad received\\n"""		3358403	1					
ANR	3358524	PrimaryExpression	"""commandHandler ERROR: ID not in ad received\\n"""		3358403	0					
ANR	3358525	ReturnStatement	return FALSE ;	955:2:27714:27726	3358403	1	True				
ANR	3358526	Identifier	FALSE		3358403	0					
ANR	3358527	IfStatement	"if ( ! ad . LookupString ( ATTR_HAD_CONTROLLEE_NAME , buf , sizeof ( buf ) ) )"		3358403	9					
ANR	3358528	Condition	"! ad . LookupString ( ATTR_HAD_CONTROLLEE_NAME , buf , sizeof ( buf ) )"	958:6:27741:27802	3358403	0	True				
ANR	3358529	UnaryOperationExpression	"! ad . LookupString ( ATTR_HAD_CONTROLLEE_NAME , buf , sizeof ( buf ) )"		3358403	0					
ANR	3358530	UnaryOperator	!		3358403	0					
ANR	3358531	CallExpression	"ad . LookupString ( ATTR_HAD_CONTROLLEE_NAME , buf , sizeof ( buf ) )"		3358403	1					
ANR	3358532	Callee	ad . LookupString		3358403	0					
ANR	3358533	MemberAccess	ad . LookupString		3358403	0					
ANR	3358534	Identifier	ad		3358403	0					
ANR	3358535	Identifier	LookupString		3358403	1					
ANR	3358536	ArgumentList	ATTR_HAD_CONTROLLEE_NAME		3358403	1					
ANR	3358537	Argument	ATTR_HAD_CONTROLLEE_NAME		3358403	0					
ANR	3358538	Identifier	ATTR_HAD_CONTROLLEE_NAME		3358403	0					
ANR	3358539	Argument	buf		3358403	1					
ANR	3358540	Identifier	buf		3358403	0					
ANR	3358541	Argument	sizeof ( buf )		3358403	2					
ANR	3358542	SizeofExpression	sizeof ( buf )		3358403	0					
ANR	3358543	Sizeof	sizeof		3358403	0					
ANR	3358544	SizeofOperand	buf		3358403	1					
ANR	3358545	CompoundStatement		26:71:725:725	3358403	1					
ANR	3358546	Statement	dprintf	959:2:27810:27816	3358403	0	True				
ANR	3358547	Statement	(	959:9:27817:27817	3358403	1	True				
ANR	3358548	Statement	D_ALWAYS	959:11:27819:27826	3358403	2	True				
ANR	3358549	Statement	","	959:19:27827:27827	3358403	3	True				
ANR	3358550	Statement	"""commandHandler ERROR:"""	959:21:27829:27851	3358403	4	True				
ANR	3358551	Statement	""" controllee not in ad received\\n"""	960:5:27858:27891	3358403	5	True				
ANR	3358552	Statement	)	960:40:27893:27893	3358403	6	True				
ANR	3358553	ExpressionStatement		960:41:27894:27894	3358403	7	True				
ANR	3358554	ReturnStatement	return FALSE ;	961:2:27898:27910	3358403	8	True				
ANR	3358555	Identifier	FALSE		3358403	0					
ANR	3358556	IfStatement	"if ( strcasecmp ( buf , m_controlleeName ) )"		3358403	10					
ANR	3358557	Condition	"strcasecmp ( buf , m_controlleeName )"	963:6:27921:27953	3358403	0	True				
ANR	3358558	CallExpression	"strcasecmp ( buf , m_controlleeName )"		3358403	0					
ANR	3358559	Callee	strcasecmp		3358403	0					
ANR	3358560	Identifier	strcasecmp		3358403	0					
ANR	3358561	ArgumentList	buf		3358403	1					
ANR	3358562	Argument	buf		3358403	0					
ANR	3358563	Identifier	buf		3358403	0					
ANR	3358564	Argument	m_controlleeName		3358403	1					
ANR	3358565	Identifier	m_controlleeName		3358403	0					
ANR	3358566	CompoundStatement		31:42:876:876	3358403	1					
ANR	3358567	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: controllee different me='%s' other='%s'\\n"" , m_controlleeName , buf )"	964:2:27961:28064	3358403	0	True				
ANR	3358568	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: controllee different me='%s' other='%s'\\n"" , m_controlleeName , buf )"		3358403	0					
ANR	3358569	Callee	dprintf		3358403	0					
ANR	3358570	Identifier	dprintf		3358403	0					
ANR	3358571	ArgumentList	D_ALWAYS		3358403	1					
ANR	3358572	Argument	D_ALWAYS		3358403	0					
ANR	3358573	Identifier	D_ALWAYS		3358403	0					
ANR	3358574	Argument	"""ERROR: controllee different me='%s' other='%s'\\n"""		3358403	1					
ANR	3358575	PrimaryExpression	"""ERROR: controllee different me='%s' other='%s'\\n"""		3358403	0					
ANR	3358576	Argument	m_controlleeName		3358403	2					
ANR	3358577	Identifier	m_controlleeName		3358403	0					
ANR	3358578	Argument	buf		3358403	3					
ANR	3358579	Identifier	buf		3358403	0					
ANR	3358580	ReturnStatement	return FALSE ;	967:2:28068:28080	3358403	1	True				
ANR	3358581	Identifier	FALSE		3358403	0					
ANR	3358582	IfStatement	"if ( ! ad . LookupString ( ATTR_HAD_LIST , buf , sizeof ( buf ) ) )"		3358403	11					
ANR	3358583	Condition	"! ad . LookupString ( ATTR_HAD_LIST , buf , sizeof ( buf ) )"	970:6:28092:28142	3358403	0	True				
ANR	3358584	UnaryOperationExpression	"! ad . LookupString ( ATTR_HAD_LIST , buf , sizeof ( buf ) )"		3358403	0					
ANR	3358585	UnaryOperator	!		3358403	0					
ANR	3358586	CallExpression	"ad . LookupString ( ATTR_HAD_LIST , buf , sizeof ( buf ) )"		3358403	1					
ANR	3358587	Callee	ad . LookupString		3358403	0					
ANR	3358588	MemberAccess	ad . LookupString		3358403	0					
ANR	3358589	Identifier	ad		3358403	0					
ANR	3358590	Identifier	LookupString		3358403	1					
ANR	3358591	ArgumentList	ATTR_HAD_LIST		3358403	1					
ANR	3358592	Argument	ATTR_HAD_LIST		3358403	0					
ANR	3358593	Identifier	ATTR_HAD_LIST		3358403	0					
ANR	3358594	Argument	buf		3358403	1					
ANR	3358595	Identifier	buf		3358403	0					
ANR	3358596	Argument	sizeof ( buf )		3358403	2					
ANR	3358597	SizeofExpression	sizeof ( buf )		3358403	0					
ANR	3358598	Sizeof	sizeof		3358403	0					
ANR	3358599	SizeofOperand	buf		3358403	1					
ANR	3358600	CompoundStatement		38:60:1065:1065	3358403	1					
ANR	3358601	ExpressionStatement	"dprintf ( D_ALWAYS , ""commandHandler ERROR: HADLlist not in ad received\\n"" )"	971:2:28150:28229	3358403	0	True				
ANR	3358602	CallExpression	"dprintf ( D_ALWAYS , ""commandHandler ERROR: HADLlist not in ad received\\n"" )"		3358403	0					
ANR	3358603	Callee	dprintf		3358403	0					
ANR	3358604	Identifier	dprintf		3358403	0					
ANR	3358605	ArgumentList	D_ALWAYS		3358403	1					
ANR	3358606	Argument	D_ALWAYS		3358403	0					
ANR	3358607	Identifier	D_ALWAYS		3358403	0					
ANR	3358608	Argument	"""commandHandler ERROR: HADLlist not in ad received\\n"""		3358403	1					
ANR	3358609	PrimaryExpression	"""commandHandler ERROR: HADLlist not in ad received\\n"""		3358403	0					
ANR	3358610	ReturnStatement	return FALSE ;	973:2:28233:28245	3358403	1	True				
ANR	3358611	Identifier	FALSE		3358403	0					
ANR	3358612	IdentifierDeclStatement	StringList had_ips ( buf ) ;	975:1:28251:28276	3358403	12	True				
ANR	3358613	IdentifierDecl	had_ips ( buf )		3358403	0					
ANR	3358614	IdentifierDeclType	StringList		3358403	0					
ANR	3358615	Identifier	had_ips		3358403	1					
ANR	3358616	Identifier	buf		3358403	2					
ANR	3358617	IfStatement	if ( ! m_allHadIps . identical ( had_ips ) )		3358403	13					
ANR	3358618	Condition	! m_allHadIps . identical ( had_ips )	976:6:28284:28317	3358403	0	True				
ANR	3358619	UnaryOperationExpression	! m_allHadIps . identical ( had_ips )		3358403	0					
ANR	3358620	UnaryOperator	!		3358403	0					
ANR	3358621	CallExpression	m_allHadIps . identical ( had_ips )		3358403	1					
ANR	3358622	Callee	m_allHadIps . identical		3358403	0					
ANR	3358623	MemberAccess	m_allHadIps . identical		3358403	0					
ANR	3358624	Identifier	m_allHadIps		3358403	0					
ANR	3358625	Identifier	identical		3358403	1					
ANR	3358626	ArgumentList	had_ips		3358403	1					
ANR	3358627	Argument	had_ips		3358403	0					
ANR	3358628	Identifier	had_ips		3358403	0					
ANR	3358629	CompoundStatement		45:2:1244:1290	3358403	1					
ANR	3358630	IdentifierDeclStatement	char * cur_str = m_allHadIps . print_to_string ( ) ;	977:2:28325:28371	3358403	0	True				
ANR	3358631	IdentifierDecl	* cur_str = m_allHadIps . print_to_string ( )		3358403	0					
ANR	3358632	IdentifierDeclType	char *		3358403	0					
ANR	3358633	Identifier	cur_str		3358403	1					
ANR	3358634	AssignmentExpression	* cur_str = m_allHadIps . print_to_string ( )		3358403	2		=			
ANR	3358635	Identifier	cur_str		3358403	0					
ANR	3358636	CallExpression	m_allHadIps . print_to_string ( )		3358403	1					
ANR	3358637	Callee	m_allHadIps . print_to_string		3358403	0					
ANR	3358638	MemberAccess	m_allHadIps . print_to_string		3358403	0					
ANR	3358639	Identifier	m_allHadIps		3358403	0					
ANR	3358640	Identifier	print_to_string		3358403	1					
ANR	3358641	ArgumentList			3358403	1					
ANR	3358642	Statement	dprintf	978:2:28375:28381	3358403	1	True				
ANR	3358643	Statement	(	978:9:28382:28382	3358403	2	True				
ANR	3358644	Statement	D_ALWAYS	978:11:28384:28391	3358403	3	True				
ANR	3358645	Statement	","	978:19:28392:28392	3358403	4	True				
ANR	3358646	Statement	"""commandHandler: WARNING: HAD IP list different!\\n"""	979:5:28399:28449	3358403	5	True				
ANR	3358647	Statement	"""\\tme='%s'\\n"""	980:5:28456:28468	3358403	6	True				
ANR	3358648	Statement	"""\\tother='%s'\\n"""	981:5:28475:28490	3358403	7	True				
ANR	3358649	Statement	","	981:21:28491:28491	3358403	8	True				
ANR	3358650	Statement	cur_str	982:5:28498:28504	3358403	9	True				
ANR	3358651	Statement	?	982:13:28506:28506	3358403	10	True				
ANR	3358652	Label	cur_str :	982:15:28508:28516	3358403	11	True				
ANR	3358653	Identifier	cur_str		3358403	0					
ANR	3358654	Statement	"""NULL"""	982:25:28518:28523	3358403	12	True				
ANR	3358655	Statement	","	982:31:28524:28524	3358403	13	True				
ANR	3358656	Statement	buf	982:33:28526:28528	3358403	14	True				
ANR	3358657	Statement	)	982:37:28530:28530	3358403	15	True				
ANR	3358658	ExpressionStatement		982:38:28531:28531	3358403	16	True				
ANR	3358659	IfStatement	if ( cur_str )		3358403	17					
ANR	3358660	Condition	cur_str	983:7:28540:28546	3358403	0	True				
ANR	3358661	Identifier	cur_str		3358403	0					
ANR	3358662	CompoundStatement		51:17:1469:1469	3358403	1					
ANR	3358663	ExpressionStatement	free ( cur_str )	984:3:28555:28570	3358403	0	True				
ANR	3358664	CallExpression	free ( cur_str )		3358403	0					
ANR	3358665	Callee	free		3358403	0					
ANR	3358666	Identifier	free		3358403	0					
ANR	3358667	ArgumentList	cur_str		3358403	1					
ANR	3358668	Argument	cur_str		3358403	0					
ANR	3358669	Identifier	cur_str		3358403	0					
ANR	3358670	SwitchStatement	switch ( cmd )		3358403	14					
ANR	3358671	Condition	cmd	988:11:28591:28593	3358403	0	True				
ANR	3358672	Identifier	cmd		3358403	0					
ANR	3358673	CompoundStatement		56:15:1514:1514	3358403	1					
ANR	3358674	Label	case HAD_ALIVE_CMD :	989:1:28598:28616	3358403	0	True				
ANR	3358675	Identifier	HAD_ALIVE_CMD		3358403	0					
ANR	3358676	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""commandHandler received HAD_ALIVE_CMD with id %d\\n"" , new_id )"	990:2:28620:28713	3358403	1	True				
ANR	3358677	CallExpression	"dprintf ( D_FULLDEBUG , ""commandHandler received HAD_ALIVE_CMD with id %d\\n"" , new_id )"		3358403	0					
ANR	3358678	Callee	dprintf		3358403	0					
ANR	3358679	Identifier	dprintf		3358403	0					
ANR	3358680	ArgumentList	D_FULLDEBUG		3358403	1					
ANR	3358681	Argument	D_FULLDEBUG		3358403	0					
ANR	3358682	Identifier	D_FULLDEBUG		3358403	0					
ANR	3358683	Argument	"""commandHandler received HAD_ALIVE_CMD with id %d\\n"""		3358403	1					
ANR	3358684	PrimaryExpression	"""commandHandler received HAD_ALIVE_CMD with id %d\\n"""		3358403	0					
ANR	3358685	Argument	new_id		3358403	2					
ANR	3358686	Identifier	new_id		3358403	0					
ANR	3358687	ExpressionStatement	pushReceivedAlive ( new_id )	993:2:28717:28744	3358403	2	True				
ANR	3358688	CallExpression	pushReceivedAlive ( new_id )		3358403	0					
ANR	3358689	Callee	pushReceivedAlive		3358403	0					
ANR	3358690	Identifier	pushReceivedAlive		3358403	0					
ANR	3358691	ArgumentList	new_id		3358403	1					
ANR	3358692	Argument	new_id		3358403	0					
ANR	3358693	Identifier	new_id		3358403	0					
ANR	3358694	BreakStatement	break ;	994:2:28748:28753	3358403	3	True				
ANR	3358695	Label	case HAD_SEND_ID_CMD :	996:1:28757:28777	3358403	4	True				
ANR	3358696	Identifier	HAD_SEND_ID_CMD		3358403	0					
ANR	3358697	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""commandHandler received HAD_SEND_ID_CMD with id %d\\n"" , new_id )"	997:2:28781:28876	3358403	5	True				
ANR	3358698	CallExpression	"dprintf ( D_FULLDEBUG , ""commandHandler received HAD_SEND_ID_CMD with id %d\\n"" , new_id )"		3358403	0					
ANR	3358699	Callee	dprintf		3358403	0					
ANR	3358700	Identifier	dprintf		3358403	0					
ANR	3358701	ArgumentList	D_FULLDEBUG		3358403	1					
ANR	3358702	Argument	D_FULLDEBUG		3358403	0					
ANR	3358703	Identifier	D_FULLDEBUG		3358403	0					
ANR	3358704	Argument	"""commandHandler received HAD_SEND_ID_CMD with id %d\\n"""		3358403	1					
ANR	3358705	PrimaryExpression	"""commandHandler received HAD_SEND_ID_CMD with id %d\\n"""		3358403	0					
ANR	3358706	Argument	new_id		3358403	2					
ANR	3358707	Identifier	new_id		3358403	0					
ANR	3358708	ExpressionStatement	pushReceivedId ( new_id )	1000:2:28880:28904	3358403	6	True				
ANR	3358709	CallExpression	pushReceivedId ( new_id )		3358403	0					
ANR	3358710	Callee	pushReceivedId		3358403	0					
ANR	3358711	Identifier	pushReceivedId		3358403	0					
ANR	3358712	ArgumentList	new_id		3358403	1					
ANR	3358713	Argument	new_id		3358403	0					
ANR	3358714	Identifier	new_id		3358403	0					
ANR	3358715	BreakStatement	break ;	1001:2:28908:28913	3358403	7	True				
ANR	3358716	ReturnStatement	return TRUE ;	1003:1:28922:28933	3358403	15	True				
ANR	3358717	Identifier	TRUE		3358403	0					
ANR	3358718	ReturnType	int		3358403	1					
ANR	3358719	Identifier	HADStateMachine :: commandHandlerHad		3358403	2					
ANR	3358720	ParameterList	"int cmd , Stream * strm"		3358403	3					
ANR	3358721	Parameter	int cmd	932:35:27057:27063	3358403	0	True				
ANR	3358722	ParameterType	int		3358403	0					
ANR	3358723	Identifier	cmd		3358403	1					
ANR	3358724	Parameter	Stream * strm	932:44:27066:27077	3358403	1	True				
ANR	3358725	ParameterType	Stream *		3358403	0					
ANR	3358726	Identifier	strm		3358403	1					
ANR	3358727	CFGEntryNode	ENTRY		3358403		True				
ANR	3358728	CFGExitNode	EXIT		3358403		True				
ANR	3358729	Symbol	m_allHadIps		3358403						
ANR	3358730	Symbol	had_ips		3358403						
ANR	3358731	Symbol	utilToString		3358403						
ANR	3358732	Symbol	ad . LookupInteger		3358403						
ANR	3358733	Symbol	cur_str		3358403						
ANR	3358734	Symbol	ad . initFromStream		3358403						
ANR	3358735	Symbol	ATTR_HAD_SELF_ID		3358403						
ANR	3358736	Symbol	strcasecmp		3358403						
ANR	3358737	Symbol	new_id		3358403						
ANR	3358738	Symbol	ad		3358403						
ANR	3358739	Symbol	m_allHadIps . identical		3358403						
ANR	3358740	Symbol	D_ALWAYS		3358403						
ANR	3358741	Symbol	m_allHadIps . print_to_string		3358403						
ANR	3358742	Symbol	TRUE		3358403						
ANR	3358743	Symbol	strm		3358403						
ANR	3358744	Symbol	D_FULLDEBUG		3358403						
ANR	3358745	Symbol	ad . LookupString		3358403						
ANR	3358746	Symbol	m_controlleeName		3358403						
ANR	3358747	Symbol	strm -> end_of_message		3358403						
ANR	3358748	Symbol	buf		3358403						
ANR	3358749	Symbol	* strm		3358403						
ANR	3358750	Symbol	ATTR_HAD_LIST		3358403						
ANR	3358751	Symbol	FALSE		3358403						
ANR	3358752	Symbol	cmd		3358403						
ANR	3358753	Symbol	m_connectionTimeout		3358403						
ANR	3358754	Symbol	ATTR_HAD_CONTROLLEE_NAME		3358403						
ANR	3358755	Function	HADStateMachine :: printStep	1010:0:29016:29388							
ANR	3358756	FunctionDef	"HADStateMachine :: printStep (const char * curState , const char * nextState)"		3358755	0					
ANR	3358757	CompoundStatement		1012:0:29095:29388	3358755	0					
ANR	3358758	Statement	dprintf	1013:6:29103:29109	3358755	0	True				
ANR	3358759	Statement	(	1013:13:29110:29110	3358755	1	True				
ANR	3358760	Statement	D_FULLDEBUG	1013:15:29112:29122	3358755	2	True				
ANR	3358761	Statement	","	1013:26:29123:29123	3358755	3	True				
ANR	3358762	Statement	"""State machine step : pid <%d> port <%d> """	1014:16:29141:29182	3358755	4	True				
ANR	3358763	Statement	"""priority <%d> was <%s> go to <%s>\\n"""	1015:16:29200:29236	3358755	5	True				
ANR	3358764	Statement	","	1015:53:29237:29237	3358755	6	True				
ANR	3358765	Statement	daemonCore	1016:16:29255:29264	3358755	7	True				
ANR	3358766	Statement	->	1016:26:29265:29266	3358755	8	True				
ANR	3358767	Statement	getpid	1016:28:29267:29272	3358755	9	True				
ANR	3358768	Statement	(	1016:34:29273:29273	3358755	10	True				
ANR	3358769	Statement	)	1016:35:29274:29274	3358755	11	True				
ANR	3358770	Statement	","	1016:36:29275:29275	3358755	12	True				
ANR	3358771	Statement	daemonCore	1017:16:29293:29302	3358755	13	True				
ANR	3358772	Statement	->	1017:26:29303:29304	3358755	14	True				
ANR	3358773	Statement	InfoCommandPort	1017:28:29305:29319	3358755	15	True				
ANR	3358774	Statement	(	1017:43:29320:29320	3358755	16	True				
ANR	3358775	Statement	)	1017:44:29321:29321	3358755	17	True				
ANR	3358776	Statement	","	1017:45:29322:29322	3358755	18	True				
ANR	3358777	Statement	m_selfId	1018:16:29340:29347	3358755	19	True				
ANR	3358778	Statement	","	1018:24:29348:29348	3358755	20	True				
ANR	3358779	Statement	curState	1019:16:29366:29373	3358755	21	True				
ANR	3358780	Statement	","	1019:24:29374:29374	3358755	22	True				
ANR	3358781	Statement	nextState	1019:25:29375:29383	3358755	23	True				
ANR	3358782	Statement	)	1019:35:29385:29385	3358755	24	True				
ANR	3358783	ExpressionStatement		1019:36:29386:29386	3358755	25	True				
ANR	3358784	ReturnType	void		3358755	1					
ANR	3358785	Identifier	HADStateMachine :: printStep		3358755	2					
ANR	3358786	ParameterList	"const char * curState , const char * nextState"		3358755	3					
ANR	3358787	Parameter	const char * curState	1011:28:29049:29068	3358755	0	True				
ANR	3358788	ParameterType	const char *		3358755	0					
ANR	3358789	Identifier	curState		3358755	1					
ANR	3358790	Parameter	const char * nextState	1011:50:29071:29091	3358755	1	True				
ANR	3358791	ParameterType	const char *		3358755	0					
ANR	3358792	Identifier	nextState		3358755	1					
ANR	3358793	CFGEntryNode	ENTRY		3358755		True				
ANR	3358794	CFGExitNode	EXIT		3358755		True				
ANR	3358795	Symbol	nextState		3358755						
ANR	3358796	Symbol	curState		3358755						
ANR	3358797	Function	HADStateMachine :: my_debug_print_list	1025:0:29468:29815							
ANR	3358798	FunctionDef	HADStateMachine :: my_debug_print_list (StringList * str)		3358797	0					
ANR	3358799	CompoundStatement		1027:0:29529:29815	3358797	0					
ANR	3358800	ExpressionStatement	str -> rewind ( )	1028:4:29535:29548	3358797	0	True				
ANR	3358801	CallExpression	str -> rewind ( )		3358797	0					
ANR	3358802	Callee	str -> rewind		3358797	0					
ANR	3358803	PtrMemberAccess	str -> rewind		3358797	0					
ANR	3358804	Identifier	str		3358797	0					
ANR	3358805	Identifier	rewind		3358797	1					
ANR	3358806	ArgumentList			3358797	1					
ANR	3358807	IdentifierDeclStatement	char * elem ;	1029:4:29554:29564	3358797	1	True				
ANR	3358808	IdentifierDecl	* elem		3358797	0					
ANR	3358809	IdentifierDeclType	char *		3358797	0					
ANR	3358810	Identifier	elem		3358797	1					
ANR	3358811	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""----> begin print list, id %d\\n"" , daemonCore -> getpid ( ) )"	1030:4:29570:29665	3358797	2	True				
ANR	3358812	CallExpression	"dprintf ( D_FULLDEBUG , ""----> begin print list, id %d\\n"" , daemonCore -> getpid ( ) )"		3358797	0					
ANR	3358813	Callee	dprintf		3358797	0					
ANR	3358814	Identifier	dprintf		3358797	0					
ANR	3358815	ArgumentList	D_FULLDEBUG		3358797	1					
ANR	3358816	Argument	D_FULLDEBUG		3358797	0					
ANR	3358817	Identifier	D_FULLDEBUG		3358797	0					
ANR	3358818	Argument	"""----> begin print list, id %d\\n"""		3358797	1					
ANR	3358819	PrimaryExpression	"""----> begin print list, id %d\\n"""		3358797	0					
ANR	3358820	Argument	daemonCore -> getpid ( )		3358797	2					
ANR	3358821	CallExpression	daemonCore -> getpid ( )		3358797	0					
ANR	3358822	Callee	daemonCore -> getpid		3358797	0					
ANR	3358823	PtrMemberAccess	daemonCore -> getpid		3358797	0					
ANR	3358824	Identifier	daemonCore		3358797	0					
ANR	3358825	Identifier	getpid		3358797	1					
ANR	3358826	ArgumentList			3358797	1					
ANR	3358827	WhileStatement	while ( ( elem = str -> next ( ) ) )		3358797	3					
ANR	3358828	Condition	elem = str -> next ( )	1032:11:29678:29697	3358797	0	True				
ANR	3358829	AssignmentExpression	elem = str -> next ( )		3358797	0		=			
ANR	3358830	Identifier	elem		3358797	0					
ANR	3358831	CallExpression	str -> next ( )		3358797	1					
ANR	3358832	Callee	str -> next		3358797	0					
ANR	3358833	PtrMemberAccess	str -> next		3358797	0					
ANR	3358834	Identifier	str		3358797	0					
ANR	3358835	Identifier	next		3358797	1					
ANR	3358836	ArgumentList			3358797	1					
ANR	3358837	CompoundStatement		6:34:171:171	3358797	1					
ANR	3358838	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""----> %s\\n"" , elem )"	1033:8:29711:29752	3358797	0	True				
ANR	3358839	CallExpression	"dprintf ( D_FULLDEBUG , ""----> %s\\n"" , elem )"		3358797	0					
ANR	3358840	Callee	dprintf		3358797	0					
ANR	3358841	Identifier	dprintf		3358797	0					
ANR	3358842	ArgumentList	D_FULLDEBUG		3358797	1					
ANR	3358843	Argument	D_FULLDEBUG		3358797	0					
ANR	3358844	Identifier	D_FULLDEBUG		3358797	0					
ANR	3358845	Argument	"""----> %s\\n"""		3358797	1					
ANR	3358846	PrimaryExpression	"""----> %s\\n"""		3358797	0					
ANR	3358847	Argument	elem		3358797	2					
ANR	3358848	Identifier	elem		3358797	0					
ANR	3358849	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""----> end print list \\n"" )"	1035:4:29764:29813	3358797	4	True				
ANR	3358850	CallExpression	"dprintf ( D_FULLDEBUG , ""----> end print list \\n"" )"		3358797	0					
ANR	3358851	Callee	dprintf		3358797	0					
ANR	3358852	Identifier	dprintf		3358797	0					
ANR	3358853	ArgumentList	D_FULLDEBUG		3358797	1					
ANR	3358854	Argument	D_FULLDEBUG		3358797	0					
ANR	3358855	Identifier	D_FULLDEBUG		3358797	0					
ANR	3358856	Argument	"""----> end print list \\n"""		3358797	1					
ANR	3358857	PrimaryExpression	"""----> end print list \\n"""		3358797	0					
ANR	3358858	ReturnType	void		3358797	1					
ANR	3358859	Identifier	HADStateMachine :: my_debug_print_list		3358797	2					
ANR	3358860	ParameterList	StringList * str		3358797	3					
ANR	3358861	Parameter	StringList * str	1026:38:29511:29525	3358797	0	True				
ANR	3358862	ParameterType	StringList *		3358797	0					
ANR	3358863	Identifier	str		3358797	1					
ANR	3358864	CFGEntryNode	ENTRY		3358797		True				
ANR	3358865	CFGExitNode	EXIT		3358797		True				
ANR	3358866	Symbol	str		3358797						
ANR	3358867	Symbol	elem		3358797						
ANR	3358868	Symbol	* daemonCore		3358797						
ANR	3358869	Symbol	daemonCore		3358797						
ANR	3358870	Symbol	daemonCore -> getpid		3358797						
ANR	3358871	Symbol	D_FULLDEBUG		3358797						
ANR	3358872	Symbol	* str		3358797						
ANR	3358873	Symbol	str -> next		3358797						
ANR	3358874	Function	HADStateMachine :: my_debug_print_buffers	1041:0:29895:30325							
ANR	3358875	FunctionDef	HADStateMachine :: my_debug_print_buffers ()		3358874	0					
ANR	3358876	CompoundStatement		1043:0:29942:30325	3358874	0					
ANR	3358877	IdentifierDeclStatement	int id ;	1044:4:29948:29954	3358874	0	True				
ANR	3358878	IdentifierDecl	id		3358874	0					
ANR	3358879	IdentifierDeclType	int		3358874	0					
ANR	3358880	Identifier	id		3358874	1					
ANR	3358881	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ALIVE IDs list : \\n"" )"	1045:4:29960:30005	3358874	1	True				
ANR	3358882	CallExpression	"dprintf ( D_FULLDEBUG , ""ALIVE IDs list : \\n"" )"		3358874	0					
ANR	3358883	Callee	dprintf		3358874	0					
ANR	3358884	Identifier	dprintf		3358874	0					
ANR	3358885	ArgumentList	D_FULLDEBUG		3358874	1					
ANR	3358886	Argument	D_FULLDEBUG		3358874	0					
ANR	3358887	Identifier	D_FULLDEBUG		3358874	0					
ANR	3358888	Argument	"""ALIVE IDs list : \\n"""		3358874	1					
ANR	3358889	PrimaryExpression	"""ALIVE IDs list : \\n"""		3358874	0					
ANR	3358890	ExpressionStatement	receivedAliveList . Rewind ( )	1046:4:30011:30037	3358874	2	True				
ANR	3358891	CallExpression	receivedAliveList . Rewind ( )		3358874	0					
ANR	3358892	Callee	receivedAliveList . Rewind		3358874	0					
ANR	3358893	MemberAccess	receivedAliveList . Rewind		3358874	0					
ANR	3358894	Identifier	receivedAliveList		3358874	0					
ANR	3358895	Identifier	Rewind		3358874	1					
ANR	3358896	ArgumentList			3358874	1					
ANR	3358897	WhileStatement	while ( receivedAliveList . Next ( id ) )		3358874	3					
ANR	3358898	Condition	receivedAliveList . Next ( id )	1047:11:30050:30077	3358874	0	True				
ANR	3358899	CallExpression	receivedAliveList . Next ( id )		3358874	0					
ANR	3358900	Callee	receivedAliveList . Next		3358874	0					
ANR	3358901	MemberAccess	receivedAliveList . Next		3358874	0					
ANR	3358902	Identifier	receivedAliveList		3358874	0					
ANR	3358903	Identifier	Next		3358874	1					
ANR	3358904	ArgumentList	id		3358874	1					
ANR	3358905	Argument	id		3358874	0					
ANR	3358906	Identifier	id		3358874	0					
ANR	3358907	CompoundStatement		5:42:138:138	3358874	1					
ANR	3358908	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""<%d>\\n"" , id )"	1048:8:30091:30126	3358874	0	True				
ANR	3358909	CallExpression	"dprintf ( D_FULLDEBUG , ""<%d>\\n"" , id )"		3358874	0					
ANR	3358910	Callee	dprintf		3358874	0					
ANR	3358911	Identifier	dprintf		3358874	0					
ANR	3358912	ArgumentList	D_FULLDEBUG		3358874	1					
ANR	3358913	Argument	D_FULLDEBUG		3358874	0					
ANR	3358914	Identifier	D_FULLDEBUG		3358874	0					
ANR	3358915	Argument	"""<%d>\\n"""		3358874	1					
ANR	3358916	PrimaryExpression	"""<%d>\\n"""		3358874	0					
ANR	3358917	Argument	id		3358874	2					
ANR	3358918	Identifier	id		3358874	0					
ANR	3358919	IdentifierDeclStatement	int id2 ;	1051:4:30139:30146	3358874	4	True				
ANR	3358920	IdentifierDecl	id2		3358874	0					
ANR	3358921	IdentifierDeclType	int		3358874	0					
ANR	3358922	Identifier	id2		3358874	1					
ANR	3358923	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ELECTION IDs list : \\n"" )"	1052:4:30152:30200	3358874	5	True				
ANR	3358924	CallExpression	"dprintf ( D_FULLDEBUG , ""ELECTION IDs list : \\n"" )"		3358874	0					
ANR	3358925	Callee	dprintf		3358874	0					
ANR	3358926	Identifier	dprintf		3358874	0					
ANR	3358927	ArgumentList	D_FULLDEBUG		3358874	1					
ANR	3358928	Argument	D_FULLDEBUG		3358874	0					
ANR	3358929	Identifier	D_FULLDEBUG		3358874	0					
ANR	3358930	Argument	"""ELECTION IDs list : \\n"""		3358874	1					
ANR	3358931	PrimaryExpression	"""ELECTION IDs list : \\n"""		3358874	0					
ANR	3358932	ExpressionStatement	receivedIdList . Rewind ( )	1053:4:30206:30229	3358874	6	True				
ANR	3358933	CallExpression	receivedIdList . Rewind ( )		3358874	0					
ANR	3358934	Callee	receivedIdList . Rewind		3358874	0					
ANR	3358935	MemberAccess	receivedIdList . Rewind		3358874	0					
ANR	3358936	Identifier	receivedIdList		3358874	0					
ANR	3358937	Identifier	Rewind		3358874	1					
ANR	3358938	ArgumentList			3358874	1					
ANR	3358939	WhileStatement	while ( receivedIdList . Next ( id2 ) )		3358874	7					
ANR	3358940	Condition	receivedIdList . Next ( id2 )	1054:11:30242:30267	3358874	0	True				
ANR	3358941	CallExpression	receivedIdList . Next ( id2 )		3358874	0					
ANR	3358942	Callee	receivedIdList . Next		3358874	0					
ANR	3358943	MemberAccess	receivedIdList . Next		3358874	0					
ANR	3358944	Identifier	receivedIdList		3358874	0					
ANR	3358945	Identifier	Next		3358874	1					
ANR	3358946	ArgumentList	id2		3358874	1					
ANR	3358947	Argument	id2		3358874	0					
ANR	3358948	Identifier	id2		3358874	0					
ANR	3358949	CompoundStatement		12:40:328:328	3358874	1					
ANR	3358950	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""<%d>\\n"" , id2 )"	1055:8:30281:30317	3358874	0	True				
ANR	3358951	CallExpression	"dprintf ( D_FULLDEBUG , ""<%d>\\n"" , id2 )"		3358874	0					
ANR	3358952	Callee	dprintf		3358874	0					
ANR	3358953	Identifier	dprintf		3358874	0					
ANR	3358954	ArgumentList	D_FULLDEBUG		3358874	1					
ANR	3358955	Argument	D_FULLDEBUG		3358874	0					
ANR	3358956	Identifier	D_FULLDEBUG		3358874	0					
ANR	3358957	Argument	"""<%d>\\n"""		3358874	1					
ANR	3358958	PrimaryExpression	"""<%d>\\n"""		3358874	0					
ANR	3358959	Argument	id2		3358874	2					
ANR	3358960	Identifier	id2		3358874	0					
ANR	3358961	ReturnType	void		3358874	1					
ANR	3358962	Identifier	HADStateMachine :: my_debug_print_buffers		3358874	2					
ANR	3358963	ParameterList			3358874	3					
ANR	3358964	CFGEntryNode	ENTRY		3358874		True				
ANR	3358965	CFGExitNode	EXIT		3358874		True				
ANR	3358966	Symbol	receivedIdList		3358874						
ANR	3358967	Symbol	receivedIdList . Next		3358874						
ANR	3358968	Symbol	id2		3358874						
ANR	3358969	Symbol	receivedAliveList . Next		3358874						
ANR	3358970	Symbol	receivedAliveList		3358874						
ANR	3358971	Symbol	D_FULLDEBUG		3358874						
ANR	3358972	Symbol	id		3358874						
ANR	3358973	Function	HADStateMachine :: printParamsInformation	1062:0:30405:31588							
ANR	3358974	FunctionDef	HADStateMachine :: printParamsInformation ()		3358973	0					
ANR	3358975	CompoundStatement		1064:0:30456:31588	3358973	0					
ANR	3358976	ExpressionStatement	"dprintf ( D_ALWAYS , ""** HAD_ID:                 %d\\n"" , m_selfId )"	1065:5:30463:30531	3358973	0	True				
ANR	3358977	CallExpression	"dprintf ( D_ALWAYS , ""** HAD_ID:                 %d\\n"" , m_selfId )"		3358973	0					
ANR	3358978	Callee	dprintf		3358973	0					
ANR	3358979	Identifier	dprintf		3358973	0					
ANR	3358980	ArgumentList	D_ALWAYS		3358973	1					
ANR	3358981	Argument	D_ALWAYS		3358973	0					
ANR	3358982	Identifier	D_ALWAYS		3358973	0					
ANR	3358983	Argument	"""** HAD_ID:                 %d\\n"""		3358973	1					
ANR	3358984	PrimaryExpression	"""** HAD_ID:                 %d\\n"""		3358973	0					
ANR	3358985	Argument	m_selfId		3358973	2					
ANR	3358986	Identifier	m_selfId		3358973	0					
ANR	3358987	ExpressionStatement	"dprintf ( D_ALWAYS , ""** HAD_CONTROLLEE:         %s\\n"" , m_controlleeName )"	1067:5:30538:30614	3358973	1	True				
ANR	3358988	CallExpression	"dprintf ( D_ALWAYS , ""** HAD_CONTROLLEE:         %s\\n"" , m_controlleeName )"		3358973	0					
ANR	3358989	Callee	dprintf		3358973	0					
ANR	3358990	Identifier	dprintf		3358973	0					
ANR	3358991	ArgumentList	D_ALWAYS		3358973	1					
ANR	3358992	Argument	D_ALWAYS		3358973	0					
ANR	3358993	Identifier	D_ALWAYS		3358973	0					
ANR	3358994	Argument	"""** HAD_CONTROLLEE:         %s\\n"""		3358973	1					
ANR	3358995	PrimaryExpression	"""** HAD_CONTROLLEE:         %s\\n"""		3358973	0					
ANR	3358996	Argument	m_controlleeName		3358973	2					
ANR	3358997	Identifier	m_controlleeName		3358973	0					
ANR	3358998	ExpressionStatement	"dprintf ( D_ALWAYS , ""** HAD_CYCLE_INTERVAL:     %d\\n"" , m_hadInterval )"	1069:5:30621:30694	3358973	2	True				
ANR	3358999	CallExpression	"dprintf ( D_ALWAYS , ""** HAD_CYCLE_INTERVAL:     %d\\n"" , m_hadInterval )"		3358973	0					
ANR	3359000	Callee	dprintf		3358973	0					
ANR	3359001	Identifier	dprintf		3358973	0					
ANR	3359002	ArgumentList	D_ALWAYS		3358973	1					
ANR	3359003	Argument	D_ALWAYS		3358973	0					
ANR	3359004	Identifier	D_ALWAYS		3358973	0					
ANR	3359005	Argument	"""** HAD_CYCLE_INTERVAL:     %d\\n"""		3358973	1					
ANR	3359006	PrimaryExpression	"""** HAD_CYCLE_INTERVAL:     %d\\n"""		3358973	0					
ANR	3359007	Argument	m_hadInterval		3358973	2					
ANR	3359008	Identifier	m_hadInterval		3358973	0					
ANR	3359009	ExpressionStatement	"dprintf ( D_ALWAYS , ""** HAD_CONNECTION_TIMEOUT: %d\\n"" , m_connectionTimeout )"	1071:5:30701:30780	3358973	3	True				
ANR	3359010	CallExpression	"dprintf ( D_ALWAYS , ""** HAD_CONNECTION_TIMEOUT: %d\\n"" , m_connectionTimeout )"		3358973	0					
ANR	3359011	Callee	dprintf		3358973	0					
ANR	3359012	Identifier	dprintf		3358973	0					
ANR	3359013	ArgumentList	D_ALWAYS		3358973	1					
ANR	3359014	Argument	D_ALWAYS		3358973	0					
ANR	3359015	Identifier	D_ALWAYS		3358973	0					
ANR	3359016	Argument	"""** HAD_CONNECTION_TIMEOUT: %d\\n"""		3358973	1					
ANR	3359017	PrimaryExpression	"""** HAD_CONNECTION_TIMEOUT: %d\\n"""		3358973	0					
ANR	3359018	Argument	m_connectionTimeout		3358973	2					
ANR	3359019	Identifier	m_connectionTimeout		3358973	0					
ANR	3359020	ExpressionStatement	"dprintf ( D_ALWAYS , ""** HAD_USE_PRIMARY:        %s\\n"" , m_usePrimary ? ""True"" : ""False"" )"	1073:5:30787:30876	3358973	4	True				
ANR	3359021	CallExpression	"dprintf ( D_ALWAYS , ""** HAD_USE_PRIMARY:        %s\\n"" , m_usePrimary ? ""True"" : ""False"" )"		3358973	0					
ANR	3359022	Callee	dprintf		3358973	0					
ANR	3359023	Identifier	dprintf		3358973	0					
ANR	3359024	ArgumentList	D_ALWAYS		3358973	1					
ANR	3359025	Argument	D_ALWAYS		3358973	0					
ANR	3359026	Identifier	D_ALWAYS		3358973	0					
ANR	3359027	Argument	"""** HAD_USE_PRIMARY:        %s\\n"""		3358973	1					
ANR	3359028	PrimaryExpression	"""** HAD_USE_PRIMARY:        %s\\n"""		3358973	0					
ANR	3359029	Argument	"m_usePrimary ? ""True"" : ""False"""		3358973	2					
ANR	3359030	ConditionalExpression	"m_usePrimary ? ""True"" : ""False"""		3358973	0					
ANR	3359031	Condition	m_usePrimary		3358973	0					
ANR	3359032	Identifier	m_usePrimary		3358973	0					
ANR	3359033	PrimaryExpression	"""True"""		3358973	1					
ANR	3359034	PrimaryExpression	"""False"""		3358973	2					
ANR	3359035	ExpressionStatement	"dprintf ( D_ALWAYS , ""** AM I PRIMARY:           %s\\n"" , m_isPrimary ? ""True"" : ""False"" )"	1075:5:30883:30971	3358973	5	True				
ANR	3359036	CallExpression	"dprintf ( D_ALWAYS , ""** AM I PRIMARY:           %s\\n"" , m_isPrimary ? ""True"" : ""False"" )"		3358973	0					
ANR	3359037	Callee	dprintf		3358973	0					
ANR	3359038	Identifier	dprintf		3358973	0					
ANR	3359039	ArgumentList	D_ALWAYS		3358973	1					
ANR	3359040	Argument	D_ALWAYS		3358973	0					
ANR	3359041	Identifier	D_ALWAYS		3358973	0					
ANR	3359042	Argument	"""** AM I PRIMARY:           %s\\n"""		3358973	1					
ANR	3359043	PrimaryExpression	"""** AM I PRIMARY:           %s\\n"""		3358973	0					
ANR	3359044	Argument	"m_isPrimary ? ""True"" : ""False"""		3358973	2					
ANR	3359045	ConditionalExpression	"m_isPrimary ? ""True"" : ""False"""		3358973	0					
ANR	3359046	Condition	m_isPrimary		3358973	0					
ANR	3359047	Identifier	m_isPrimary		3358973	0					
ANR	3359048	PrimaryExpression	"""True"""		3358973	1					
ANR	3359049	PrimaryExpression	"""False"""		3358973	2					
ANR	3359050	ExpressionStatement	"dprintf ( D_ALWAYS , ""** HAD_LIST(others only)\\n"" )"	1077:5:30978:31025	3358973	6	True				
ANR	3359051	CallExpression	"dprintf ( D_ALWAYS , ""** HAD_LIST(others only)\\n"" )"		3358973	0					
ANR	3359052	Callee	dprintf		3358973	0					
ANR	3359053	Identifier	dprintf		3358973	0					
ANR	3359054	ArgumentList	D_ALWAYS		3358973	1					
ANR	3359055	Argument	D_ALWAYS		3358973	0					
ANR	3359056	Identifier	D_ALWAYS		3358973	0					
ANR	3359057	Argument	"""** HAD_LIST(others only)\\n"""		3358973	1					
ANR	3359058	PrimaryExpression	"""** HAD_LIST(others only)\\n"""		3358973	0					
ANR	3359059	ExpressionStatement	"dprintf ( D_ALWAYS , ""** HAD_UPDATE_INTERVAL:    %d\\n"" , m_updateCollectorInterval )"	1078:2:31029:31114	3358973	7	True				
ANR	3359060	CallExpression	"dprintf ( D_ALWAYS , ""** HAD_UPDATE_INTERVAL:    %d\\n"" , m_updateCollectorInterval )"		3358973	0					
ANR	3359061	Callee	dprintf		3358973	0					
ANR	3359062	Identifier	dprintf		3358973	0					
ANR	3359063	ArgumentList	D_ALWAYS		3358973	1					
ANR	3359064	Argument	D_ALWAYS		3358973	0					
ANR	3359065	Identifier	D_ALWAYS		3358973	0					
ANR	3359066	Argument	"""** HAD_UPDATE_INTERVAL:    %d\\n"""		3358973	1					
ANR	3359067	PrimaryExpression	"""** HAD_UPDATE_INTERVAL:    %d\\n"""		3358973	0					
ANR	3359068	Argument	m_updateCollectorInterval		3358973	2					
ANR	3359069	Identifier	m_updateCollectorInterval		3358973	0					
ANR	3359070	ExpressionStatement	"dprintf ( D_ALWAYS , ""** Is replication used:    %s\\n"" , m_useReplication ? ""True"" : ""False"" )"	1080:2:31118:31211	3358973	8	True				
ANR	3359071	CallExpression	"dprintf ( D_ALWAYS , ""** Is replication used:    %s\\n"" , m_useReplication ? ""True"" : ""False"" )"		3358973	0					
ANR	3359072	Callee	dprintf		3358973	0					
ANR	3359073	Identifier	dprintf		3358973	0					
ANR	3359074	ArgumentList	D_ALWAYS		3358973	1					
ANR	3359075	Argument	D_ALWAYS		3358973	0					
ANR	3359076	Identifier	D_ALWAYS		3358973	0					
ANR	3359077	Argument	"""** Is replication used:    %s\\n"""		3358973	1					
ANR	3359078	PrimaryExpression	"""** Is replication used:    %s\\n"""		3358973	0					
ANR	3359079	Argument	"m_useReplication ? ""True"" : ""False"""		3358973	2					
ANR	3359080	ConditionalExpression	"m_useReplication ? ""True"" : ""False"""		3358973	0					
ANR	3359081	Condition	m_useReplication		3358973	0					
ANR	3359082	Identifier	m_useReplication		3358973	0					
ANR	3359083	PrimaryExpression	"""True"""		3358973	1					
ANR	3359084	PrimaryExpression	"""False"""		3358973	2					
ANR	3359085	IfStatement	if ( m_useReplication )		3358973	9					
ANR	3359086	Condition	m_useReplication	1082:7:31220:31235	3358973	0	True				
ANR	3359087	Identifier	m_useReplication		3358973	0					
ANR	3359088	CompoundStatement		19:26:782:782	3358973	1					
ANR	3359089	ExpressionStatement	"dprintf ( D_ALWAYS , ""** Replication sinful:     %s\\n"" , m_replicationDaemonSinfulString )"	1083:3:31244:31336	3358973	0	True				
ANR	3359090	CallExpression	"dprintf ( D_ALWAYS , ""** Replication sinful:     %s\\n"" , m_replicationDaemonSinfulString )"		3358973	0					
ANR	3359091	Callee	dprintf		3358973	0					
ANR	3359092	Identifier	dprintf		3358973	0					
ANR	3359093	ArgumentList	D_ALWAYS		3358973	1					
ANR	3359094	Argument	D_ALWAYS		3358973	0					
ANR	3359095	Identifier	D_ALWAYS		3358973	0					
ANR	3359096	Argument	"""** Replication sinful:     %s\\n"""		3358973	1					
ANR	3359097	PrimaryExpression	"""** Replication sinful:     %s\\n"""		3358973	0					
ANR	3359098	Argument	m_replicationDaemonSinfulString		3358973	2					
ANR	3359099	Identifier	m_replicationDaemonSinfulString		3358973	0					
ANR	3359100	IdentifierDeclStatement	char * addr = NULL ;	1087:2:31345:31362	3358973	10	True				
ANR	3359101	IdentifierDecl	* addr = NULL		3358973	0					
ANR	3359102	IdentifierDeclType	char *		3358973	0					
ANR	3359103	Identifier	addr		3358973	1					
ANR	3359104	AssignmentExpression	* addr = NULL		3358973	2		=			
ANR	3359105	Identifier	NULL		3358973	0					
ANR	3359106	Identifier	NULL		3358973	1					
ANR	3359107	ExpressionStatement	m_otherHadIps . rewind ( )	1088:5:31369:31391	3358973	11	True				
ANR	3359108	CallExpression	m_otherHadIps . rewind ( )		3358973	0					
ANR	3359109	Callee	m_otherHadIps . rewind		3358973	0					
ANR	3359110	MemberAccess	m_otherHadIps . rewind		3358973	0					
ANR	3359111	Identifier	m_otherHadIps		3358973	0					
ANR	3359112	Identifier	rewind		3358973	1					
ANR	3359113	ArgumentList			3358973	1					
ANR	3359114	WhileStatement	while ( ( addr = m_otherHadIps . next ( ) ) )		3358973	12					
ANR	3359115	Condition	addr = m_otherHadIps . next ( )	1089:12:31405:31433	3358973	0	True				
ANR	3359116	AssignmentExpression	addr = m_otherHadIps . next ( )		3358973	0		=			
ANR	3359117	Identifier	addr		3358973	0					
ANR	3359118	CallExpression	m_otherHadIps . next ( )		3358973	1					
ANR	3359119	Callee	m_otherHadIps . next		3358973	0					
ANR	3359120	MemberAccess	m_otherHadIps . next		3358973	0					
ANR	3359121	Identifier	m_otherHadIps		3358973	0					
ANR	3359122	Identifier	next		3358973	1					
ANR	3359123	ArgumentList			3358973	1					
ANR	3359124	CompoundStatement		26:44:980:980	3358973	1					
ANR	3359125	ExpressionStatement	"dprintf ( D_ALWAYS , ""**    %s\\n"" , addr )"	1090:3:31442:31478	3358973	0	True				
ANR	3359126	CallExpression	"dprintf ( D_ALWAYS , ""**    %s\\n"" , addr )"		3358973	0					
ANR	3359127	Callee	dprintf		3358973	0					
ANR	3359128	Identifier	dprintf		3358973	0					
ANR	3359129	ArgumentList	D_ALWAYS		3358973	1					
ANR	3359130	Argument	D_ALWAYS		3358973	0					
ANR	3359131	Identifier	D_ALWAYS		3358973	0					
ANR	3359132	Argument	"""**    %s\\n"""		3358973	1					
ANR	3359133	PrimaryExpression	"""**    %s\\n"""		3358973	0					
ANR	3359134	Argument	addr		3358973	2					
ANR	3359135	Identifier	addr		3358973	0					
ANR	3359136	ExpressionStatement	"dprintf ( D_ALWAYS , ""** HAD_STAND_ALONE_DEBUG   %s\\n"" , m_standAloneMode ? ""True"" : ""False"" )"	1092:5:31492:31585	3358973	13	True				
ANR	3359137	CallExpression	"dprintf ( D_ALWAYS , ""** HAD_STAND_ALONE_DEBUG   %s\\n"" , m_standAloneMode ? ""True"" : ""False"" )"		3358973	0					
ANR	3359138	Callee	dprintf		3358973	0					
ANR	3359139	Identifier	dprintf		3358973	0					
ANR	3359140	ArgumentList	D_ALWAYS		3358973	1					
ANR	3359141	Argument	D_ALWAYS		3358973	0					
ANR	3359142	Identifier	D_ALWAYS		3358973	0					
ANR	3359143	Argument	"""** HAD_STAND_ALONE_DEBUG   %s\\n"""		3358973	1					
ANR	3359144	PrimaryExpression	"""** HAD_STAND_ALONE_DEBUG   %s\\n"""		3358973	0					
ANR	3359145	Argument	"m_standAloneMode ? ""True"" : ""False"""		3358973	2					
ANR	3359146	ConditionalExpression	"m_standAloneMode ? ""True"" : ""False"""		3358973	0					
ANR	3359147	Condition	m_standAloneMode		3358973	0					
ANR	3359148	Identifier	m_standAloneMode		3358973	0					
ANR	3359149	PrimaryExpression	"""True"""		3358973	1					
ANR	3359150	PrimaryExpression	"""False"""		3358973	2					
ANR	3359151	ReturnType	void		3358973	1					
ANR	3359152	Identifier	HADStateMachine :: printParamsInformation		3358973	2					
ANR	3359153	ParameterList			3358973	3					
ANR	3359154	CFGEntryNode	ENTRY		3358973		True				
ANR	3359155	CFGExitNode	EXIT		3358973		True				
ANR	3359156	Symbol	NULL		3358973						
ANR	3359157	Symbol	D_ALWAYS		3358973						
ANR	3359158	Symbol	m_isPrimary		3358973						
ANR	3359159	Symbol	m_controlleeName		3358973						
ANR	3359160	Symbol	m_otherHadIps		3358973						
ANR	3359161	Symbol	m_replicationDaemonSinfulString		3358973						
ANR	3359162	Symbol	m_usePrimary		3358973						
ANR	3359163	Symbol	m_standAloneMode		3358973						
ANR	3359164	Symbol	m_selfId		3358973						
ANR	3359165	Symbol	m_hadInterval		3358973						
ANR	3359166	Symbol	m_updateCollectorInterval		3358973						
ANR	3359167	Symbol	m_useReplication		3358973						
ANR	3359168	Symbol	m_connectionTimeout		3358973						
ANR	3359169	Symbol	addr		3358973						
ANR	3359170	Symbol	m_otherHadIps . next		3358973						
ANR	3359171	Function	HADStateMachine :: updateCollectors	1100:0:31746:32523							
ANR	3359172	FunctionDef	HADStateMachine :: updateCollectors ()		3359171	0					
ANR	3359173	CompoundStatement		1102:0:31791:32523	3359171	0					
ANR	3359174	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""HADStateMachine::updateCollectors started\\n"" )"	1103:4:31797:31864	3359171	0	True				
ANR	3359175	CallExpression	"dprintf ( D_FULLDEBUG , ""HADStateMachine::updateCollectors started\\n"" )"		3359171	0					
ANR	3359176	Callee	dprintf		3359171	0					
ANR	3359177	Identifier	dprintf		3359171	0					
ANR	3359178	ArgumentList	D_FULLDEBUG		3359171	1					
ANR	3359179	Argument	D_FULLDEBUG		3359171	0					
ANR	3359180	Identifier	D_FULLDEBUG		3359171	0					
ANR	3359181	Argument	"""HADStateMachine::updateCollectors started\\n"""		3359171	1					
ANR	3359182	PrimaryExpression	"""HADStateMachine::updateCollectors started\\n"""		3359171	0					
ANR	3359183	IdentifierDeclStatement	int index ;	1106:1:31903:31913	3359171	1	True				
ANR	3359184	IdentifierDecl	index		3359171	0					
ANR	3359185	IdentifierDeclType	int		3359171	0					
ANR	3359186	Identifier	index		3359171	1					
ANR	3359187	IfStatement	"if ( m_classAd . LookupInteger ( ATTR_HAD_INDEX , index ) )"		3359171	2					
ANR	3359188	Condition	"m_classAd . LookupInteger ( ATTR_HAD_INDEX , index )"	1107:9:31924:31969	3359171	0	True				
ANR	3359189	CallExpression	"m_classAd . LookupInteger ( ATTR_HAD_INDEX , index )"		3359171	0					
ANR	3359190	Callee	m_classAd . LookupInteger		3359171	0					
ANR	3359191	MemberAccess	m_classAd . LookupInteger		3359171	0					
ANR	3359192	Identifier	m_classAd		3359171	0					
ANR	3359193	Identifier	LookupInteger		3359171	1					
ANR	3359194	ArgumentList	ATTR_HAD_INDEX		3359171	1					
ANR	3359195	Argument	ATTR_HAD_INDEX		3359171	0					
ANR	3359196	Identifier	ATTR_HAD_INDEX		3359171	0					
ANR	3359197	Argument	index		3359171	1					
ANR	3359198	Identifier	index		3359171	0					
ANR	3359199	CompoundStatement		7:8:191:296	3359171	1					
ANR	3359200	IdentifierDeclStatement	"int successfulUpdatesNumber = daemonCore -> sendUpdates ( UPDATE_HAD_AD , & m_classAd , NULL , true ) ;"	1108:8:31983:32088	3359171	0	True				
ANR	3359201	IdentifierDecl	"successfulUpdatesNumber = daemonCore -> sendUpdates ( UPDATE_HAD_AD , & m_classAd , NULL , true )"		3359171	0					
ANR	3359202	IdentifierDeclType	int		3359171	0					
ANR	3359203	Identifier	successfulUpdatesNumber		3359171	1					
ANR	3359204	AssignmentExpression	"successfulUpdatesNumber = daemonCore -> sendUpdates ( UPDATE_HAD_AD , & m_classAd , NULL , true )"		3359171	2		=			
ANR	3359205	Identifier	successfulUpdatesNumber		3359171	0					
ANR	3359206	CallExpression	"daemonCore -> sendUpdates ( UPDATE_HAD_AD , & m_classAd , NULL , true )"		3359171	1					
ANR	3359207	Callee	daemonCore -> sendUpdates		3359171	0					
ANR	3359208	PtrMemberAccess	daemonCore -> sendUpdates		3359171	0					
ANR	3359209	Identifier	daemonCore		3359171	0					
ANR	3359210	Identifier	sendUpdates		3359171	1					
ANR	3359211	ArgumentList	UPDATE_HAD_AD		3359171	1					
ANR	3359212	Argument	UPDATE_HAD_AD		3359171	0					
ANR	3359213	Identifier	UPDATE_HAD_AD		3359171	0					
ANR	3359214	Argument	& m_classAd		3359171	1					
ANR	3359215	UnaryOperationExpression	& m_classAd		3359171	0					
ANR	3359216	UnaryOperator	&		3359171	0					
ANR	3359217	Identifier	m_classAd		3359171	1					
ANR	3359218	Argument	NULL		3359171	2					
ANR	3359219	Identifier	NULL		3359171	0					
ANR	3359220	Argument	true		3359171	3					
ANR	3359221	Identifier	true		3359171	0					
ANR	3359222	Statement	dprintf	1110:8:32098:32104	3359171	1	True				
ANR	3359223	Statement	(	1110:15:32105:32105	3359171	2	True				
ANR	3359224	Statement	D_ALWAYS	1110:17:32107:32114	3359171	3	True				
ANR	3359225	Statement	","	1110:25:32115:32115	3359171	4	True				
ANR	3359226	Statement	"""HADStateMachine::updateCollectors %d """	1110:27:32117:32155	3359171	5	True				
ANR	3359227	Statement	"""successful updates\\n"""	1111:20:32177:32198	3359171	6	True				
ANR	3359228	Statement	","	1111:42:32199:32199	3359171	7	True				
ANR	3359229	Statement	successfulUpdatesNumber	1111:44:32201:32223	3359171	8	True				
ANR	3359230	Statement	)	1111:67:32224:32224	3359171	9	True				
ANR	3359231	ExpressionStatement		1111:68:32225:32225	3359171	10	True				
ANR	3359232	ExpressionStatement	utilCancelTimer ( m_updateCollectorTimerId )	1115:4:32304:32347	3359171	3	True				
ANR	3359233	CallExpression	utilCancelTimer ( m_updateCollectorTimerId )		3359171	0					
ANR	3359234	Callee	utilCancelTimer		3359171	0					
ANR	3359235	Identifier	utilCancelTimer		3359171	0					
ANR	3359236	ArgumentList	m_updateCollectorTimerId		3359171	1					
ANR	3359237	Argument	m_updateCollectorTimerId		3359171	0					
ANR	3359238	Identifier	m_updateCollectorTimerId		3359171	0					
ANR	3359239	ExpressionStatement	"m_updateCollectorTimerId = daemonCore -> Register_Timer ( m_updateCollectorInterval , ( TimerHandlercpp ) & HADStateMachine :: updateCollectors , ""Update collector"" , this )"	1116:4:32353:32521	3359171	4	True				
ANR	3359240	AssignmentExpression	"m_updateCollectorTimerId = daemonCore -> Register_Timer ( m_updateCollectorInterval , ( TimerHandlercpp ) & HADStateMachine :: updateCollectors , ""Update collector"" , this )"		3359171	0		=			
ANR	3359241	Identifier	m_updateCollectorTimerId		3359171	0					
ANR	3359242	CallExpression	"daemonCore -> Register_Timer ( m_updateCollectorInterval , ( TimerHandlercpp ) & HADStateMachine :: updateCollectors , ""Update collector"" , this )"		3359171	1					
ANR	3359243	Callee	daemonCore -> Register_Timer		3359171	0					
ANR	3359244	PtrMemberAccess	daemonCore -> Register_Timer		3359171	0					
ANR	3359245	Identifier	daemonCore		3359171	0					
ANR	3359246	Identifier	Register_Timer		3359171	1					
ANR	3359247	ArgumentList	m_updateCollectorInterval		3359171	1					
ANR	3359248	Argument	m_updateCollectorInterval		3359171	0					
ANR	3359249	Identifier	m_updateCollectorInterval		3359171	0					
ANR	3359250	Argument	( TimerHandlercpp ) & HADStateMachine :: updateCollectors		3359171	1					
ANR	3359251	CastExpression	( TimerHandlercpp ) & HADStateMachine :: updateCollectors		3359171	0					
ANR	3359252	CastTarget	TimerHandlercpp		3359171	0					
ANR	3359253	UnaryOperationExpression	& HADStateMachine :: updateCollectors		3359171	1					
ANR	3359254	UnaryOperator	&		3359171	0					
ANR	3359255	Identifier	HADStateMachine :: updateCollectors		3359171	1					
ANR	3359256	Argument	"""Update collector"""		3359171	2					
ANR	3359257	PrimaryExpression	"""Update collector"""		3359171	0					
ANR	3359258	Argument	this		3359171	3					
ANR	3359259	Identifier	this		3359171	0					
ANR	3359260	ReturnType	void		3359171	1					
ANR	3359261	Identifier	HADStateMachine :: updateCollectors		3359171	2					
ANR	3359262	ParameterList			3359171	3					
ANR	3359263	CFGEntryNode	ENTRY		3359171		True				
ANR	3359264	CFGExitNode	EXIT		3359171		True				
ANR	3359265	Symbol	m_classAd . LookupInteger		3359171						
ANR	3359266	Symbol	ATTR_HAD_INDEX		3359171						
ANR	3359267	Symbol	NULL		3359171						
ANR	3359268	Symbol	& HADStateMachine :: updateCollectors		3359171						
ANR	3359269	Symbol	this		3359171						
ANR	3359270	Symbol	index		3359171						
ANR	3359271	Symbol	successfulUpdatesNumber		3359171						
ANR	3359272	Symbol	D_FULLDEBUG		3359171						
ANR	3359273	Symbol	* daemonCore		3359171						
ANR	3359274	Symbol	daemonCore		3359171						
ANR	3359275	Symbol	daemonCore -> Register_Timer		3359171						
ANR	3359276	Symbol	true		3359171						
ANR	3359277	Symbol	daemonCore -> sendUpdates		3359171						
ANR	3359278	Symbol	m_updateCollectorInterval		3359171						
ANR	3359279	Symbol	& m_classAd		3359171						
ANR	3359280	Symbol	m_classAd		3359171						
ANR	3359281	Symbol	UPDATE_HAD_AD		3359171						
ANR	3359282	Symbol	m_updateCollectorTimerId		3359171						
ANR	3359283	Function	HADStateMachine :: updateCollectorsClassAd	1127:0:32851:33255							
ANR	3359284	FunctionDef	HADStateMachine :: updateCollectorsClassAd (const MyString & isHadActive)		3359283	0					
ANR	3359285	CompoundStatement		1129:0:32926:33255	3359283	0					
ANR	3359286	IdentifierDeclStatement	MyString line ;	1130:4:32932:32945	3359283	0	True				
ANR	3359287	IdentifierDecl	line		3359283	0					
ANR	3359288	IdentifierDeclType	MyString		3359283	0					
ANR	3359289	Identifier	line		3359283	1					
ANR	3359290	ExpressionStatement	"m_classAd . Assign ( ATTR_HAD_IS_ACTIVE , isHadActive )"	1132:4:32952:33003	3359283	1	True				
ANR	3359291	CallExpression	"m_classAd . Assign ( ATTR_HAD_IS_ACTIVE , isHadActive )"		3359283	0					
ANR	3359292	Callee	m_classAd . Assign		3359283	0					
ANR	3359293	MemberAccess	m_classAd . Assign		3359283	0					
ANR	3359294	Identifier	m_classAd		3359283	0					
ANR	3359295	Identifier	Assign		3359283	1					
ANR	3359296	ArgumentList	ATTR_HAD_IS_ACTIVE		3359283	1					
ANR	3359297	Argument	ATTR_HAD_IS_ACTIVE		3359283	0					
ANR	3359298	Identifier	ATTR_HAD_IS_ACTIVE		3359283	0					
ANR	3359299	Argument	isHadActive		3359283	1					
ANR	3359300	Identifier	isHadActive		3359283	0					
ANR	3359301	IdentifierDeclStatement	"int successfulUpdatesNumber = daemonCore -> sendUpdates ( UPDATE_HAD_AD , & m_classAd , NULL , true ) ;"	1134:4:33010:33113	3359283	2	True				
ANR	3359302	IdentifierDecl	"successfulUpdatesNumber = daemonCore -> sendUpdates ( UPDATE_HAD_AD , & m_classAd , NULL , true )"		3359283	0					
ANR	3359303	IdentifierDeclType	int		3359283	0					
ANR	3359304	Identifier	successfulUpdatesNumber		3359283	1					
ANR	3359305	AssignmentExpression	"successfulUpdatesNumber = daemonCore -> sendUpdates ( UPDATE_HAD_AD , & m_classAd , NULL , true )"		3359283	2		=			
ANR	3359306	Identifier	successfulUpdatesNumber		3359283	0					
ANR	3359307	CallExpression	"daemonCore -> sendUpdates ( UPDATE_HAD_AD , & m_classAd , NULL , true )"		3359283	1					
ANR	3359308	Callee	daemonCore -> sendUpdates		3359283	0					
ANR	3359309	PtrMemberAccess	daemonCore -> sendUpdates		3359283	0					
ANR	3359310	Identifier	daemonCore		3359283	0					
ANR	3359311	Identifier	sendUpdates		3359283	1					
ANR	3359312	ArgumentList	UPDATE_HAD_AD		3359283	1					
ANR	3359313	Argument	UPDATE_HAD_AD		3359283	0					
ANR	3359314	Identifier	UPDATE_HAD_AD		3359283	0					
ANR	3359315	Argument	& m_classAd		3359283	1					
ANR	3359316	UnaryOperationExpression	& m_classAd		3359283	0					
ANR	3359317	UnaryOperator	&		3359283	0					
ANR	3359318	Identifier	m_classAd		3359283	1					
ANR	3359319	Argument	NULL		3359283	2					
ANR	3359320	Identifier	NULL		3359283	0					
ANR	3359321	Argument	true		3359283	3					
ANR	3359322	Identifier	true		3359283	0					
ANR	3359323	Statement	dprintf	1136:4:33119:33125	3359283	3	True				
ANR	3359324	Statement	(	1136:11:33126:33126	3359283	4	True				
ANR	3359325	Statement	D_ALWAYS	1136:13:33128:33135	3359283	5	True				
ANR	3359326	Statement	","	1136:21:33136:33136	3359283	6	True				
ANR	3359327	Statement	"""HADStateMachine::updateCollectorsClassAd %d """	1136:23:33138:33183	3359283	7	True				
ANR	3359328	Statement	"""successful updates\\n"""	1137:20:33205:33226	3359283	8	True				
ANR	3359329	Statement	","	1137:42:33227:33227	3359283	9	True				
ANR	3359330	Statement	successfulUpdatesNumber	1137:44:33229:33251	3359283	10	True				
ANR	3359331	Statement	)	1137:67:33252:33252	3359283	11	True				
ANR	3359332	ExpressionStatement		1137:68:33253:33253	3359283	12	True				
ANR	3359333	ReturnType	void		3359283	1					
ANR	3359334	Identifier	HADStateMachine :: updateCollectorsClassAd		3359283	2					
ANR	3359335	ParameterList	const MyString & isHadActive		3359283	3					
ANR	3359336	Parameter	const MyString & isHadActive	1128:41:32897:32923	3359283	0	True				
ANR	3359337	ParameterType	const MyString &		3359283	0					
ANR	3359338	Identifier	isHadActive		3359283	1					
ANR	3359339	CFGEntryNode	ENTRY		3359283		True				
ANR	3359340	CFGExitNode	EXIT		3359283		True				
ANR	3359341	Symbol	NULL		3359283						
ANR	3359342	Symbol	line		3359283						
ANR	3359343	Symbol	* daemonCore		3359283						
ANR	3359344	Symbol	daemonCore		3359283						
ANR	3359345	Symbol	isHadActive		3359283						
ANR	3359346	Symbol	true		3359283						
ANR	3359347	Symbol	successfulUpdatesNumber		3359283						
ANR	3359348	Symbol	daemonCore -> sendUpdates		3359283						
ANR	3359349	Symbol	& m_classAd		3359283						
ANR	3359350	Symbol	m_classAd		3359283						
ANR	3359351	Symbol	UPDATE_HAD_AD		3359283						
ANR	3359352	Symbol	ATTR_HAD_IS_ACTIVE		3359283						
