command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5510629	File	data/converged/CVE-2011-4930_htcondor/user_log_header.cpp								
ANR	5510630	Function	UserLogHeader :: UserLogHeader	35:0:1129:1334							
ANR	5510631	FunctionDef	UserLogHeader :: UserLogHeader ()		5510630	0					
ANR	5510632	CompoundStatement		36:0:1166:1334	5510630	0					
ANR	5510633	ExpressionStatement	m_sequence = 0	37:1:1169:1183	5510630	0	True				
ANR	5510634	AssignmentExpression	m_sequence = 0		5510630	0		=			
ANR	5510635	Identifier	m_sequence		5510630	0					
ANR	5510636	PrimaryExpression	0		5510630	1					
ANR	5510637	ExpressionStatement	m_ctime = 0	38:1:1186:1197	5510630	1	True				
ANR	5510638	AssignmentExpression	m_ctime = 0		5510630	0		=			
ANR	5510639	Identifier	m_ctime		5510630	0					
ANR	5510640	PrimaryExpression	0		5510630	1					
ANR	5510641	ExpressionStatement	m_size = 0	39:1:1200:1210	5510630	2	True				
ANR	5510642	AssignmentExpression	m_size = 0		5510630	0		=			
ANR	5510643	Identifier	m_size		5510630	0					
ANR	5510644	PrimaryExpression	0		5510630	1					
ANR	5510645	ExpressionStatement	m_num_events = 0	40:1:1213:1229	5510630	3	True				
ANR	5510646	AssignmentExpression	m_num_events = 0		5510630	0		=			
ANR	5510647	Identifier	m_num_events		5510630	0					
ANR	5510648	PrimaryExpression	0		5510630	1					
ANR	5510649	ExpressionStatement	m_file_offset = 0	41:1:1232:1249	5510630	4	True				
ANR	5510650	AssignmentExpression	m_file_offset = 0		5510630	0		=			
ANR	5510651	Identifier	m_file_offset		5510630	0					
ANR	5510652	PrimaryExpression	0		5510630	1					
ANR	5510653	ExpressionStatement	m_event_offset = 0	42:1:1252:1270	5510630	5	True				
ANR	5510654	AssignmentExpression	m_event_offset = 0		5510630	0		=			
ANR	5510655	Identifier	m_event_offset		5510630	0					
ANR	5510656	PrimaryExpression	0		5510630	1					
ANR	5510657	ExpressionStatement	m_max_rotation = - 1	43:1:1273:1292	5510630	6	True				
ANR	5510658	AssignmentExpression	m_max_rotation = - 1		5510630	0		=			
ANR	5510659	Identifier	m_max_rotation		5510630	0					
ANR	5510660	UnaryOperationExpression	- 1		5510630	1					
ANR	5510661	UnaryOperator	-		5510630	0					
ANR	5510662	PrimaryExpression	1		5510630	1					
ANR	5510663	ExpressionStatement	"m_creator_name = """""	44:1:1295:1314	5510630	7	True				
ANR	5510664	AssignmentExpression	"m_creator_name = """""		5510630	0		=			
ANR	5510665	Identifier	m_creator_name		5510630	0					
ANR	5510666	PrimaryExpression	""""""		5510630	1					
ANR	5510667	ExpressionStatement	m_valid = false	45:1:1317:1332	5510630	8	True				
ANR	5510668	AssignmentExpression	m_valid = false		5510630	0		=			
ANR	5510669	Identifier	m_valid		5510630	0					
ANR	5510670	Identifier	false		5510630	1					
ANR	5510671	Identifier	UserLogHeader :: UserLogHeader		5510630	1					
ANR	5510672	ParameterList			5510630	2					
ANR	5510673	CFGEntryNode	ENTRY		5510630		True				
ANR	5510674	CFGExitNode	EXIT		5510630		True				
ANR	5510675	Symbol	m_ctime		5510630						
ANR	5510676	Symbol	m_size		5510630						
ANR	5510677	Symbol	m_creator_name		5510630						
ANR	5510678	Symbol	m_file_offset		5510630						
ANR	5510679	Symbol	m_event_offset		5510630						
ANR	5510680	Symbol	false		5510630						
ANR	5510681	Symbol	m_sequence		5510630						
ANR	5510682	Symbol	m_valid		5510630						
ANR	5510683	Symbol	m_num_events		5510630						
ANR	5510684	Symbol	m_max_rotation		5510630						
ANR	5510685	Function	UserLogHeader :: UserLogHeader	49:0:1381:1831							
ANR	5510686	FunctionDef	UserLogHeader :: UserLogHeader (const UserLogHeader & other)		5510685	0					
ANR	5510687	CompoundStatement		50:0:1440:1831	5510685	0					
ANR	5510688	ExpressionStatement	setId ( other . getId ( ) )	51:1:1443:1474	5510685	0	True				
ANR	5510689	CallExpression	setId ( other . getId ( ) )		5510685	0					
ANR	5510690	Callee	setId		5510685	0					
ANR	5510691	Identifier	setId		5510685	0					
ANR	5510692	ArgumentList	other . getId ( )		5510685	1					
ANR	5510693	Argument	other . getId ( )		5510685	0					
ANR	5510694	CallExpression	other . getId ( )		5510685	0					
ANR	5510695	Callee	other . getId		5510685	0					
ANR	5510696	MemberAccess	other . getId		5510685	0					
ANR	5510697	Identifier	other		5510685	0					
ANR	5510698	Identifier	getId		5510685	1					
ANR	5510699	ArgumentList			5510685	1					
ANR	5510700	ExpressionStatement	setSequence ( other . getSequence ( ) )	52:1:1477:1514	5510685	1	True				
ANR	5510701	CallExpression	setSequence ( other . getSequence ( ) )		5510685	0					
ANR	5510702	Callee	setSequence		5510685	0					
ANR	5510703	Identifier	setSequence		5510685	0					
ANR	5510704	ArgumentList	other . getSequence ( )		5510685	1					
ANR	5510705	Argument	other . getSequence ( )		5510685	0					
ANR	5510706	CallExpression	other . getSequence ( )		5510685	0					
ANR	5510707	Callee	other . getSequence		5510685	0					
ANR	5510708	MemberAccess	other . getSequence		5510685	0					
ANR	5510709	Identifier	other		5510685	0					
ANR	5510710	Identifier	getSequence		5510685	1					
ANR	5510711	ArgumentList			5510685	1					
ANR	5510712	ExpressionStatement	setCtime ( other . getCtime ( ) )	53:1:1517:1551	5510685	2	True				
ANR	5510713	CallExpression	setCtime ( other . getCtime ( ) )		5510685	0					
ANR	5510714	Callee	setCtime		5510685	0					
ANR	5510715	Identifier	setCtime		5510685	0					
ANR	5510716	ArgumentList	other . getCtime ( )		5510685	1					
ANR	5510717	Argument	other . getCtime ( )		5510685	0					
ANR	5510718	CallExpression	other . getCtime ( )		5510685	0					
ANR	5510719	Callee	other . getCtime		5510685	0					
ANR	5510720	MemberAccess	other . getCtime		5510685	0					
ANR	5510721	Identifier	other		5510685	0					
ANR	5510722	Identifier	getCtime		5510685	1					
ANR	5510723	ArgumentList			5510685	1					
ANR	5510724	ExpressionStatement	setSize ( other . getSize ( ) )	54:1:1554:1587	5510685	3	True				
ANR	5510725	CallExpression	setSize ( other . getSize ( ) )		5510685	0					
ANR	5510726	Callee	setSize		5510685	0					
ANR	5510727	Identifier	setSize		5510685	0					
ANR	5510728	ArgumentList	other . getSize ( )		5510685	1					
ANR	5510729	Argument	other . getSize ( )		5510685	0					
ANR	5510730	CallExpression	other . getSize ( )		5510685	0					
ANR	5510731	Callee	other . getSize		5510685	0					
ANR	5510732	MemberAccess	other . getSize		5510685	0					
ANR	5510733	Identifier	other		5510685	0					
ANR	5510734	Identifier	getSize		5510685	1					
ANR	5510735	ArgumentList			5510685	1					
ANR	5510736	ExpressionStatement	setNumEvents ( other . getNumEvents ( ) )	55:1:1590:1628	5510685	4	True				
ANR	5510737	CallExpression	setNumEvents ( other . getNumEvents ( ) )		5510685	0					
ANR	5510738	Callee	setNumEvents		5510685	0					
ANR	5510739	Identifier	setNumEvents		5510685	0					
ANR	5510740	ArgumentList	other . getNumEvents ( )		5510685	1					
ANR	5510741	Argument	other . getNumEvents ( )		5510685	0					
ANR	5510742	CallExpression	other . getNumEvents ( )		5510685	0					
ANR	5510743	Callee	other . getNumEvents		5510685	0					
ANR	5510744	MemberAccess	other . getNumEvents		5510685	0					
ANR	5510745	Identifier	other		5510685	0					
ANR	5510746	Identifier	getNumEvents		5510685	1					
ANR	5510747	ArgumentList			5510685	1					
ANR	5510748	ExpressionStatement	setFileOffset ( other . getFileOffset ( ) )	56:1:1631:1670	5510685	5	True				
ANR	5510749	CallExpression	setFileOffset ( other . getFileOffset ( ) )		5510685	0					
ANR	5510750	Callee	setFileOffset		5510685	0					
ANR	5510751	Identifier	setFileOffset		5510685	0					
ANR	5510752	ArgumentList	other . getFileOffset ( )		5510685	1					
ANR	5510753	Argument	other . getFileOffset ( )		5510685	0					
ANR	5510754	CallExpression	other . getFileOffset ( )		5510685	0					
ANR	5510755	Callee	other . getFileOffset		5510685	0					
ANR	5510756	MemberAccess	other . getFileOffset		5510685	0					
ANR	5510757	Identifier	other		5510685	0					
ANR	5510758	Identifier	getFileOffset		5510685	1					
ANR	5510759	ArgumentList			5510685	1					
ANR	5510760	ExpressionStatement	setEventOffset ( other . getEventOffset ( ) )	57:1:1673:1713	5510685	6	True				
ANR	5510761	CallExpression	setEventOffset ( other . getEventOffset ( ) )		5510685	0					
ANR	5510762	Callee	setEventOffset		5510685	0					
ANR	5510763	Identifier	setEventOffset		5510685	0					
ANR	5510764	ArgumentList	other . getEventOffset ( )		5510685	1					
ANR	5510765	Argument	other . getEventOffset ( )		5510685	0					
ANR	5510766	CallExpression	other . getEventOffset ( )		5510685	0					
ANR	5510767	Callee	other . getEventOffset		5510685	0					
ANR	5510768	MemberAccess	other . getEventOffset		5510685	0					
ANR	5510769	Identifier	other		5510685	0					
ANR	5510770	Identifier	getEventOffset		5510685	1					
ANR	5510771	ArgumentList			5510685	1					
ANR	5510772	ExpressionStatement	setMaxRotation ( other . getMaxRotation ( ) )	58:1:1716:1756	5510685	7	True				
ANR	5510773	CallExpression	setMaxRotation ( other . getMaxRotation ( ) )		5510685	0					
ANR	5510774	Callee	setMaxRotation		5510685	0					
ANR	5510775	Identifier	setMaxRotation		5510685	0					
ANR	5510776	ArgumentList	other . getMaxRotation ( )		5510685	1					
ANR	5510777	Argument	other . getMaxRotation ( )		5510685	0					
ANR	5510778	CallExpression	other . getMaxRotation ( )		5510685	0					
ANR	5510779	Callee	other . getMaxRotation		5510685	0					
ANR	5510780	MemberAccess	other . getMaxRotation		5510685	0					
ANR	5510781	Identifier	other		5510685	0					
ANR	5510782	Identifier	getMaxRotation		5510685	1					
ANR	5510783	ArgumentList			5510685	1					
ANR	5510784	ExpressionStatement	setCreatorName ( other . getCreatorName ( ) )	59:1:1759:1799	5510685	8	True				
ANR	5510785	CallExpression	setCreatorName ( other . getCreatorName ( ) )		5510685	0					
ANR	5510786	Callee	setCreatorName		5510685	0					
ANR	5510787	Identifier	setCreatorName		5510685	0					
ANR	5510788	ArgumentList	other . getCreatorName ( )		5510685	1					
ANR	5510789	Argument	other . getCreatorName ( )		5510685	0					
ANR	5510790	CallExpression	other . getCreatorName ( )		5510685	0					
ANR	5510791	Callee	other . getCreatorName		5510685	0					
ANR	5510792	MemberAccess	other . getCreatorName		5510685	0					
ANR	5510793	Identifier	other		5510685	0					
ANR	5510794	Identifier	getCreatorName		5510685	1					
ANR	5510795	ArgumentList			5510685	1					
ANR	5510796	ExpressionStatement	m_valid = other . IsValid ( )	61:1:1803:1829	5510685	9	True				
ANR	5510797	AssignmentExpression	m_valid = other . IsValid ( )		5510685	0		=			
ANR	5510798	Identifier	m_valid		5510685	0					
ANR	5510799	CallExpression	other . IsValid ( )		5510685	1					
ANR	5510800	Callee	other . IsValid		5510685	0					
ANR	5510801	MemberAccess	other . IsValid		5510685	0					
ANR	5510802	Identifier	other		5510685	0					
ANR	5510803	Identifier	IsValid		5510685	1					
ANR	5510804	ArgumentList			5510685	1					
ANR	5510805	Identifier	UserLogHeader :: UserLogHeader		5510685	1					
ANR	5510806	ParameterList	const UserLogHeader & other		5510685	2					
ANR	5510807	Parameter	const UserLogHeader & other	49:30:1411:1436	5510685	0	True				
ANR	5510808	ParameterType	const UserLogHeader &		5510685	0					
ANR	5510809	Identifier	other		5510685	1					
ANR	5510810	CFGEntryNode	ENTRY		5510685		True				
ANR	5510811	CFGExitNode	EXIT		5510685		True				
ANR	5510812	Symbol	other		5510685						
ANR	5510813	Symbol	other . getNumEvents		5510685						
ANR	5510814	Symbol	other . getMaxRotation		5510685						
ANR	5510815	Symbol	other . getSequence		5510685						
ANR	5510816	Symbol	other . IsValid		5510685						
ANR	5510817	Symbol	other . getFileOffset		5510685						
ANR	5510818	Symbol	other . getSize		5510685						
ANR	5510819	Symbol	other . getEventOffset		5510685						
ANR	5510820	Symbol	m_valid		5510685						
ANR	5510821	Symbol	other . getId		5510685						
ANR	5510822	Symbol	other . getCtime		5510685						
ANR	5510823	Symbol	other . getCreatorName		5510685						
ANR	5510824	Function	UserLogHeader :: ExtractEvent	65:0:1864:3495							
ANR	5510825	FunctionDef	UserLogHeader :: ExtractEvent (const ULogEvent * event)		5510824	0					
ANR	5510826	CompoundStatement		67:0:1922:3495	5510824	0					
ANR	5510827	IfStatement	if ( ULOG_GENERIC != event -> eventNumber )		5510824	0					
ANR	5510828	Condition	ULOG_GENERIC != event -> eventNumber	69:6:1967:2000	5510824	0	True				
ANR	5510829	EqualityExpression	ULOG_GENERIC != event -> eventNumber		5510824	0		!=			
ANR	5510830	Identifier	ULOG_GENERIC		5510824	0					
ANR	5510831	PtrMemberAccess	event -> eventNumber		5510824	1					
ANR	5510832	Identifier	event		5510824	0					
ANR	5510833	Identifier	eventNumber		5510824	1					
ANR	5510834	CompoundStatement		3:43:81:81	5510824	1					
ANR	5510835	ReturnStatement	return ULOG_NO_EVENT ;	70:2:2008:2028	5510824	0	True				
ANR	5510836	Identifier	ULOG_NO_EVENT		5510824	0					
ANR	5510837	Statement	const	73:1:2035:2039	5510824	1	True				
ANR	5510838	Statement	GenericEvent	73:7:2041:2052	5510824	2	True				
ANR	5510839	Statement	*	73:20:2054:2054	5510824	3	True				
ANR	5510840	Statement	generic	73:21:2055:2061	5510824	4	True				
ANR	5510841	Statement	=	73:29:2063:2063	5510824	5	True				
ANR	5510842	Statement	dynamic_cast	73:31:2065:2076	5510824	6	True				
ANR	5510843	Statement	<	73:44:2078:2078	5510824	7	True				
ANR	5510844	Statement	const	73:45:2079:2083	5510824	8	True				
ANR	5510845	Statement	GenericEvent	73:51:2085:2096	5510824	9	True				
ANR	5510846	Statement	*	73:63:2097:2097	5510824	10	True				
ANR	5510847	Statement	>	73:64:2098:2098	5510824	11	True				
ANR	5510848	ExpressionStatement	event	73:65:2099:2108	5510824	12	True				
ANR	5510849	Identifier	event		5510824	0					
ANR	5510850	IfStatement	if ( ! generic )		5510824	13					
ANR	5510851	Condition	! generic	74:6:2116:2124	5510824	0	True				
ANR	5510852	UnaryOperationExpression	! generic		5510824	0					
ANR	5510853	UnaryOperator	!		5510824	0					
ANR	5510854	Identifier	generic		5510824	1					
ANR	5510855	CompoundStatement		8:18:205:205	5510824	1					
ANR	5510856	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't pointer cast generic event!\\n"" )"	75:2:2132:2190	5510824	0	True				
ANR	5510857	CallExpression	"dprintf ( D_ALWAYS , ""Can't pointer cast generic event!\\n"" )"		5510824	0					
ANR	5510858	Callee	dprintf		5510824	0					
ANR	5510859	Identifier	dprintf		5510824	0					
ANR	5510860	ArgumentList	D_ALWAYS		5510824	1					
ANR	5510861	Argument	D_ALWAYS		5510824	0					
ANR	5510862	Identifier	D_ALWAYS		5510824	0					
ANR	5510863	Argument	"""Can't pointer cast generic event!\\n"""		5510824	1					
ANR	5510864	PrimaryExpression	"""Can't pointer cast generic event!\\n"""		5510824	0					
ANR	5510865	ReturnStatement	return ULOG_UNK_ERROR ;	76:2:2194:2215	5510824	1	True				
ANR	5510866	Identifier	ULOG_UNK_ERROR		5510824	0					
ANR	5510867	CompoundStatement		16:2:401:425	5510824	14					
ANR	5510868	IdentifierDeclStatement	char buf [ 1024 ] ;	79:2:2225:2239	5510824	0	True				
ANR	5510869	IdentifierDecl	buf [ 1024 ]		5510824	0					
ANR	5510870	IdentifierDeclType	char [ 1024 ]		5510824	0					
ANR	5510871	Identifier	buf		5510824	1					
ANR	5510872	PrimaryExpression	1024		5510824	2					
ANR	5510873	ExpressionStatement	"memset ( buf , 0 , sizeof ( buf ) )"	80:2:2243:2272	5510824	1	True				
ANR	5510874	CallExpression	"memset ( buf , 0 , sizeof ( buf ) )"		5510824	0					
ANR	5510875	Callee	memset		5510824	0					
ANR	5510876	Identifier	memset		5510824	0					
ANR	5510877	ArgumentList	buf		5510824	1					
ANR	5510878	Argument	buf		5510824	0					
ANR	5510879	Identifier	buf		5510824	0					
ANR	5510880	Argument	0		5510824	1					
ANR	5510881	PrimaryExpression	0		5510824	0					
ANR	5510882	Argument	sizeof ( buf )		5510824	2					
ANR	5510883	SizeofExpression	sizeof ( buf )		5510824	0					
ANR	5510884	Sizeof	sizeof		5510824	0					
ANR	5510885	SizeofOperand	buf		5510824	1					
ANR	5510886	ExpressionStatement	"strncpy ( buf , generic -> info , sizeof ( buf ) - 1 )"	81:2:2276:2320	5510824	2	True				
ANR	5510887	CallExpression	"strncpy ( buf , generic -> info , sizeof ( buf ) - 1 )"		5510824	0					
ANR	5510888	Callee	strncpy		5510824	0					
ANR	5510889	Identifier	strncpy		5510824	0					
ANR	5510890	ArgumentList	buf		5510824	1					
ANR	5510891	Argument	buf		5510824	0					
ANR	5510892	Identifier	buf		5510824	0					
ANR	5510893	Argument	generic -> info		5510824	1					
ANR	5510894	PtrMemberAccess	generic -> info		5510824	0					
ANR	5510895	Identifier	generic		5510824	0					
ANR	5510896	Identifier	info		5510824	1					
ANR	5510897	Argument	sizeof ( buf ) - 1		5510824	2					
ANR	5510898	AdditiveExpression	sizeof ( buf ) - 1		5510824	0		-			
ANR	5510899	SizeofExpression	sizeof ( buf )		5510824	0					
ANR	5510900	Sizeof	sizeof		5510824	0					
ANR	5510901	SizeofOperand	buf		5510824	1					
ANR	5510902	PrimaryExpression	1		5510824	1					
ANR	5510903	IdentifierDeclStatement	int size = strlen ( buf ) ;	82:2:2324:2348	5510824	3	True				
ANR	5510904	IdentifierDecl	size = strlen ( buf )		5510824	0					
ANR	5510905	IdentifierDeclType	int		5510824	0					
ANR	5510906	Identifier	size		5510824	1					
ANR	5510907	AssignmentExpression	size = strlen ( buf )		5510824	2		=			
ANR	5510908	Identifier	size		5510824	0					
ANR	5510909	CallExpression	strlen ( buf )		5510824	1					
ANR	5510910	Callee	strlen		5510824	0					
ANR	5510911	Identifier	strlen		5510824	0					
ANR	5510912	ArgumentList	buf		5510824	1					
ANR	5510913	Argument	buf		5510824	0					
ANR	5510914	Identifier	buf		5510824	0					
ANR	5510915	WhileStatement	while ( isspace ( buf [ size - 1 ] ) )		5510824	4					
ANR	5510916	Condition	isspace ( buf [ size - 1 ] )	83:9:2359:2378	5510824	0	True				
ANR	5510917	CallExpression	isspace ( buf [ size - 1 ] )		5510824	0					
ANR	5510918	Callee	isspace		5510824	0					
ANR	5510919	Identifier	isspace		5510824	0					
ANR	5510920	ArgumentList	buf [ size - 1 ]		5510824	1					
ANR	5510921	Argument	buf [ size - 1 ]		5510824	0					
ANR	5510922	ArrayIndexing	buf [ size - 1 ]		5510824	0					
ANR	5510923	Identifier	buf		5510824	0					
ANR	5510924	AdditiveExpression	size - 1		5510824	1		-			
ANR	5510925	Identifier	size		5510824	0					
ANR	5510926	PrimaryExpression	1		5510824	1					
ANR	5510927	ExpressionStatement	buf [ -- size ] = '\\0'	84:3:2385:2403	5510824	1	True				
ANR	5510928	AssignmentExpression	buf [ -- size ] = '\\0'		5510824	0		=			
ANR	5510929	ArrayIndexing	buf [ -- size ]		5510824	0					
ANR	5510930	Identifier	buf		5510824	0					
ANR	5510931	UnaryExpression	-- size		5510824	1					
ANR	5510932	IncDec	--		5510824	0					
ANR	5510933	Identifier	size		5510824	1					
ANR	5510934	PrimaryExpression	'\\0'		5510824	1					
ANR	5510935	Statement	::	85:2:2407:2408	5510824	5	True				
ANR	5510936	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""UserLogHeader::ExtractEvent(): parsing '%s'\\n"" , buf )"	85:4:2409:2499	5510824	6	True				
ANR	5510937	CallExpression	"dprintf ( D_FULLDEBUG , ""UserLogHeader::ExtractEvent(): parsing '%s'\\n"" , buf )"		5510824	0					
ANR	5510938	Callee	dprintf		5510824	0					
ANR	5510939	Identifier	dprintf		5510824	0					
ANR	5510940	ArgumentList	D_FULLDEBUG		5510824	1					
ANR	5510941	Argument	D_FULLDEBUG		5510824	0					
ANR	5510942	Identifier	D_FULLDEBUG		5510824	0					
ANR	5510943	Argument	"""UserLogHeader::ExtractEvent(): parsing '%s'\\n"""		5510824	1					
ANR	5510944	PrimaryExpression	"""UserLogHeader::ExtractEvent(): parsing '%s'\\n"""		5510824	0					
ANR	5510945	Argument	buf		5510824	2					
ANR	5510946	Identifier	buf		5510824	0					
ANR	5510947	IdentifierDeclStatement	char id [ 256 ] ;	90:1:2506:2520	5510824	15	True				
ANR	5510948	IdentifierDecl	id [ 256 ]		5510824	0					
ANR	5510949	IdentifierDeclType	char [ 256 ]		5510824	0					
ANR	5510950	Identifier	id		5510824	1					
ANR	5510951	PrimaryExpression	256		5510824	2					
ANR	5510952	IdentifierDeclStatement	char name [ 256 ] ;	91:1:2523:2539	5510824	16	True				
ANR	5510953	IdentifierDecl	name [ 256 ]		5510824	0					
ANR	5510954	IdentifierDeclType	char [ 256 ]		5510824	0					
ANR	5510955	Identifier	name		5510824	1					
ANR	5510956	PrimaryExpression	256		5510824	2					
ANR	5510957	IdentifierDeclStatement	int ctime ;	92:1:2542:2554	5510824	17	True				
ANR	5510958	IdentifierDecl	ctime		5510824	0					
ANR	5510959	IdentifierDeclType	int		5510824	0					
ANR	5510960	Identifier	ctime		5510824	1					
ANR	5510961	ExpressionStatement	id [ 0 ] = '\\0'	94:1:2558:2570	5510824	18	True				
ANR	5510962	AssignmentExpression	id [ 0 ] = '\\0'		5510824	0		=			
ANR	5510963	ArrayIndexing	id [ 0 ]		5510824	0					
ANR	5510964	Identifier	id		5510824	0					
ANR	5510965	PrimaryExpression	0		5510824	1					
ANR	5510966	PrimaryExpression	'\\0'		5510824	1					
ANR	5510967	ExpressionStatement	name [ 0 ] = '\\0'	95:1:2573:2587	5510824	19	True				
ANR	5510968	AssignmentExpression	name [ 0 ] = '\\0'		5510824	0		=			
ANR	5510969	ArrayIndexing	name [ 0 ]		5510824	0					
ANR	5510970	Identifier	name		5510824	0					
ANR	5510971	PrimaryExpression	0		5510824	1					
ANR	5510972	PrimaryExpression	'\\0'		5510824	1					
ANR	5510973	Statement	int	96:1:2590:2592	5510824	20	True				
ANR	5510974	Statement	n	96:5:2594:2594	5510824	21	True				
ANR	5510975	Statement	=	96:7:2596:2596	5510824	22	True				
ANR	5510976	Statement	sscanf	96:9:2598:2603	5510824	23	True				
ANR	5510977	Statement	(	96:15:2604:2604	5510824	24	True				
ANR	5510978	Statement	generic	96:17:2606:2612	5510824	25	True				
ANR	5510979	Statement	->	96:24:2613:2614	5510824	26	True				
ANR	5510980	Statement	info	96:26:2615:2618	5510824	27	True				
ANR	5510981	Statement	","	96:30:2619:2619	5510824	28	True				
ANR	5510982	Statement	"""Global JobLog:"""	97:5:2626:2641	5510824	29	True				
ANR	5510983	Statement	""" ctime=%d"""	98:5:2648:2658	5510824	30	True				
ANR	5510984	Statement	""" id=%255s"""	99:5:2665:2675	5510824	31	True				
ANR	5510985	Statement	""" sequence=%d"""	100:5:2682:2695	5510824	32	True				
ANR	5510986	Statement	""" size="""	101:5:2702:2709	5510824	33	True				
ANR	5510987	Statement	FILESIZE_T_FORMAT	101:13:2710:2726	5510824	34	True				
ANR	5510988	Statement	""""""	101:30:2727:2728	5510824	35	True				
ANR	5510989	Statement	""" events=%"""	102:5:2735:2745	5510824	36	True				
ANR	5510990	Statement	PRId64	102:16:2746:2751	5510824	37	True				
ANR	5510991	Statement	""""""	102:22:2752:2753	5510824	38	True				
ANR	5510992	Statement	""" offset="""	103:5:2760:2769	5510824	39	True				
ANR	5510993	Statement	FILESIZE_T_FORMAT	103:15:2770:2786	5510824	40	True				
ANR	5510994	Statement	""""""	103:32:2787:2788	5510824	41	True				
ANR	5510995	Statement	""" event_off=%"""	104:5:2795:2808	5510824	42	True				
ANR	5510996	Statement	PRId64	104:19:2809:2814	5510824	43	True				
ANR	5510997	Statement	""""""	104:25:2815:2816	5510824	44	True				
ANR	5510998	Statement	""" max_rotation=%d"""	105:5:2823:2840	5510824	45	True				
ANR	5510999	Statement	""" creator_name=<%255[^>]>"""	106:5:2847:2872	5510824	46	True				
ANR	5511000	Statement	","	106:31:2873:2873	5510824	47	True				
ANR	5511001	Statement	&	107:5:2880:2880	5510824	48	True				
ANR	5511002	Statement	ctime	107:6:2881:2885	5510824	49	True				
ANR	5511003	Statement	","	107:11:2886:2886	5510824	50	True				
ANR	5511004	Statement	id	108:5:2893:2894	5510824	51	True				
ANR	5511005	Statement	","	108:7:2895:2895	5510824	52	True				
ANR	5511006	Statement	&	109:5:2902:2902	5510824	53	True				
ANR	5511007	Statement	m_sequence	109:6:2903:2912	5510824	54	True				
ANR	5511008	Statement	","	109:16:2913:2913	5510824	55	True				
ANR	5511009	Statement	&	110:5:2920:2920	5510824	56	True				
ANR	5511010	Statement	m_size	110:6:2921:2926	5510824	57	True				
ANR	5511011	Statement	","	110:12:2927:2927	5510824	58	True				
ANR	5511012	Statement	&	111:5:2934:2934	5510824	59	True				
ANR	5511013	Statement	m_num_events	111:6:2935:2946	5510824	60	True				
ANR	5511014	Statement	","	111:18:2947:2947	5510824	61	True				
ANR	5511015	Statement	&	112:5:2954:2954	5510824	62	True				
ANR	5511016	Statement	m_file_offset	112:6:2955:2967	5510824	63	True				
ANR	5511017	Statement	","	112:19:2968:2968	5510824	64	True				
ANR	5511018	Statement	&	113:5:2975:2975	5510824	65	True				
ANR	5511019	Statement	m_event_offset	113:6:2976:2989	5510824	66	True				
ANR	5511020	Statement	","	113:20:2990:2990	5510824	67	True				
ANR	5511021	Statement	&	114:5:2997:2997	5510824	68	True				
ANR	5511022	Statement	m_max_rotation	114:6:2998:3011	5510824	69	True				
ANR	5511023	Statement	","	114:20:3012:3012	5510824	70	True				
ANR	5511024	Statement	name	115:5:3019:3022	5510824	71	True				
ANR	5511025	Statement	)	116:5:3029:3029	5510824	72	True				
ANR	5511026	ExpressionStatement		116:6:3030:3030	5510824	73	True				
ANR	5511027	IfStatement	if ( n >= 3 )		5510824	74					
ANR	5511028	Condition	n >= 3	117:6:3038:3043	5510824	0	True				
ANR	5511029	RelationalExpression	n >= 3		5510824	0		>=			
ANR	5511030	Identifier	n		5510824	0					
ANR	5511031	PrimaryExpression	3		5510824	1					
ANR	5511032	CompoundStatement		51:15:1124:1124	5510824	1					
ANR	5511033	ExpressionStatement	m_ctime = ctime	118:2:3051:3066	5510824	0	True				
ANR	5511034	AssignmentExpression	m_ctime = ctime		5510824	0		=			
ANR	5511035	Identifier	m_ctime		5510824	0					
ANR	5511036	Identifier	ctime		5510824	1					
ANR	5511037	ExpressionStatement	m_id = id	119:2:3070:3079	5510824	1	True				
ANR	5511038	AssignmentExpression	m_id = id		5510824	0		=			
ANR	5511039	Identifier	m_id		5510824	0					
ANR	5511040	Identifier	id		5510824	1					
ANR	5511041	ExpressionStatement	m_valid = true	120:2:3083:3097	5510824	2	True				
ANR	5511042	AssignmentExpression	m_valid = true		5510824	0		=			
ANR	5511043	Identifier	m_valid		5510824	0					
ANR	5511044	Identifier	true		5510824	1					
ANR	5511045	IfStatement	if ( n >= 8 )		5510824	3					
ANR	5511046	Condition	n >= 8	122:7:3107:3112	5510824	0	True				
ANR	5511047	RelationalExpression	n >= 8		5510824	0		>=			
ANR	5511048	Identifier	n		5510824	0					
ANR	5511049	PrimaryExpression	8		5510824	1					
ANR	5511050	CompoundStatement		56:16:1193:1193	5510824	1					
ANR	5511051	ExpressionStatement	m_creator_name = name	123:3:3121:3142	5510824	0	True				
ANR	5511052	AssignmentExpression	m_creator_name = name		5510824	0		=			
ANR	5511053	Identifier	m_creator_name		5510824	0					
ANR	5511054	Identifier	name		5510824	1					
ANR	5511055	ElseStatement	else		5510824	0					
ANR	5511056	CompoundStatement		59:7:1232:1232	5510824	0					
ANR	5511057	ExpressionStatement	"m_creator_name = """""	126:3:3160:3179	5510824	0	True				
ANR	5511058	AssignmentExpression	"m_creator_name = """""		5510824	0		=			
ANR	5511059	Identifier	m_creator_name		5510824	0					
ANR	5511060	PrimaryExpression	""""""		5510824	1					
ANR	5511061	ExpressionStatement	m_max_rotation = - 1	127:3:3184:3203	5510824	1	True				
ANR	5511062	AssignmentExpression	m_max_rotation = - 1		5510824	0		=			
ANR	5511063	Identifier	m_max_rotation		5510824	0					
ANR	5511064	UnaryOperationExpression	- 1		5510824	1					
ANR	5511065	UnaryOperator	-		5510824	0					
ANR	5511066	PrimaryExpression	1		5510824	1					
ANR	5511067	IfStatement	if ( DebugFlags & D_FULLDEBUG )		5510824	4					
ANR	5511068	Condition	DebugFlags & D_FULLDEBUG	130:7:3217:3240	5510824	0	True				
ANR	5511069	BitAndExpression	DebugFlags & D_FULLDEBUG		5510824	0		&			
ANR	5511070	Identifier	DebugFlags		5510824	0					
ANR	5511071	Identifier	D_FULLDEBUG		5510824	1					
ANR	5511072	CompoundStatement		64:34:1321:1321	5510824	1					
ANR	5511073	ExpressionStatement	"dprint ( D_FULLDEBUG , ""UserLogHeader::ExtractEvent(): parsed ->"" )"	131:3:3249:3314	5510824	0	True				
ANR	5511074	CallExpression	"dprint ( D_FULLDEBUG , ""UserLogHeader::ExtractEvent(): parsed ->"" )"		5510824	0					
ANR	5511075	Callee	dprint		5510824	0					
ANR	5511076	Identifier	dprint		5510824	0					
ANR	5511077	ArgumentList	D_FULLDEBUG		5510824	1					
ANR	5511078	Argument	D_FULLDEBUG		5510824	0					
ANR	5511079	Identifier	D_FULLDEBUG		5510824	0					
ANR	5511080	Argument	"""UserLogHeader::ExtractEvent(): parsed ->"""		5510824	1					
ANR	5511081	PrimaryExpression	"""UserLogHeader::ExtractEvent(): parsed ->"""		5510824	0					
ANR	5511082	ReturnStatement	return ULOG_OK ;	133:2:3322:3336	5510824	5	True				
ANR	5511083	Identifier	ULOG_OK		5510824	0					
ANR	5511084	ElseStatement	else		5510824	0					
ANR	5511085	CompoundStatement		69:6:1424:1424	5510824	0					
ANR	5511086	Statement	::	136:2:3351:3352	5510824	0	True				
ANR	5511087	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""UserLogHeader::ExtractEvent(): can't parse '%s' => %d\\n"" , generic -> info , n )"	136:4:3353:3466	5510824	1	True				
ANR	5511088	CallExpression	"dprintf ( D_FULLDEBUG , ""UserLogHeader::ExtractEvent(): can't parse '%s' => %d\\n"" , generic -> info , n )"		5510824	0					
ANR	5511089	Callee	dprintf		5510824	0					
ANR	5511090	Identifier	dprintf		5510824	0					
ANR	5511091	ArgumentList	D_FULLDEBUG		5510824	1					
ANR	5511092	Argument	D_FULLDEBUG		5510824	0					
ANR	5511093	Identifier	D_FULLDEBUG		5510824	0					
ANR	5511094	Argument	"""UserLogHeader::ExtractEvent(): can't parse '%s' => %d\\n"""		5510824	1					
ANR	5511095	PrimaryExpression	"""UserLogHeader::ExtractEvent(): can't parse '%s' => %d\\n"""		5510824	0					
ANR	5511096	Argument	generic -> info		5510824	2					
ANR	5511097	PtrMemberAccess	generic -> info		5510824	0					
ANR	5511098	Identifier	generic		5510824	0					
ANR	5511099	Identifier	info		5510824	1					
ANR	5511100	Argument	n		5510824	3					
ANR	5511101	Identifier	n		5510824	0					
ANR	5511102	ReturnStatement	return ULOG_NO_EVENT ;	139:2:3470:3490	5510824	2	True				
ANR	5511103	Identifier	ULOG_NO_EVENT		5510824	0					
ANR	5511104	ReturnType	int		5510824	1					
ANR	5511105	Identifier	UserLogHeader :: ExtractEvent		5510824	2					
ANR	5511106	ParameterList	const ULogEvent * event		5510824	3					
ANR	5511107	Parameter	const ULogEvent * event	66:29:1897:1918	5510824	0	True				
ANR	5511108	ParameterType	const ULogEvent *		5510824	0					
ANR	5511109	Identifier	event		5510824	1					
ANR	5511110	CFGEntryNode	ENTRY		5510824		True				
ANR	5511111	CFGExitNode	EXIT		5510824		True				
ANR	5511112	Symbol	ULOG_NO_EVENT		5510824						
ANR	5511113	Symbol	* id		5510824						
ANR	5511114	Symbol	* event		5510824						
ANR	5511115	Symbol	m_creator_name		5510824						
ANR	5511116	Symbol	ULOG_UNK_ERROR		5510824						
ANR	5511117	Symbol	generic -> info		5510824						
ANR	5511118	Symbol	m_max_rotation		5510824						
ANR	5511119	Symbol	strlen		5510824						
ANR	5511120	Symbol	* size		5510824						
ANR	5511121	Symbol	m_ctime		5510824						
ANR	5511122	Symbol	ctime		5510824						
ANR	5511123	Symbol	id		5510824						
ANR	5511124	Symbol	event		5510824						
ANR	5511125	Symbol	event -> eventNumber		5510824						
ANR	5511126	Symbol	m_id		5510824						
ANR	5511127	Symbol	* name		5510824						
ANR	5511128	Symbol	* buf		5510824						
ANR	5511129	Symbol	D_ALWAYS		5510824						
ANR	5511130	Symbol	isspace		5510824						
ANR	5511131	Symbol	D_FULLDEBUG		5510824						
ANR	5511132	Symbol	DebugFlags		5510824						
ANR	5511133	Symbol	generic		5510824						
ANR	5511134	Symbol	n		5510824						
ANR	5511135	Symbol	ULOG_OK		5510824						
ANR	5511136	Symbol	buf		5510824						
ANR	5511137	Symbol	size		5510824						
ANR	5511138	Symbol	name		5510824						
ANR	5511139	Symbol	true		5510824						
ANR	5511140	Symbol	* generic		5510824						
ANR	5511141	Symbol	m_valid		5510824						
ANR	5511142	Symbol	ULOG_GENERIC		5510824						
ANR	5511143	Function	UserLogHeader :: sprint_cat	144:0:3518:4087							
ANR	5511144	FunctionDef	UserLogHeader :: sprint_cat (MyString & buf)		5511143	0					
ANR	5511145	CompoundStatement		146:0:3572:4087	5511143	0					
ANR	5511146	IfStatement	if ( m_valid )		5511143	0					
ANR	5511147	Condition	m_valid	147:6:3580:3586	5511143	0	True				
ANR	5511148	Identifier	m_valid		5511143	0					
ANR	5511149	CompoundStatement		2:16:17:17	5511143	1					
ANR	5511150	Statement	buf	148:2:3594:3596	5511143	0	True				
ANR	5511151	Statement	.	148:5:3597:3597	5511143	1	True				
ANR	5511152	Statement	sprintf_cat	148:6:3598:3608	5511143	2	True				
ANR	5511153	Statement	(	148:17:3609:3609	5511143	3	True				
ANR	5511154	Statement	"""id=%s"""	148:19:3611:3617	5511143	4	True				
ANR	5511155	Statement	""" seq=%d"""	149:7:3626:3634	5511143	5	True				
ANR	5511156	Statement	""" ctime=%lu"""	150:7:3643:3654	5511143	6	True				
ANR	5511157	Statement	""" size="""	151:7:3663:3670	5511143	7	True				
ANR	5511158	Statement	FILESIZE_T_FORMAT	151:15:3671:3687	5511143	8	True				
ANR	5511159	Statement	""" num=%"""	152:7:3696:3703	5511143	9	True				
ANR	5511160	Statement	PRIi64	152:15:3704:3709	5511143	10	True				
ANR	5511161	Statement	""" file_offset="""	153:7:3718:3732	5511143	11	True				
ANR	5511162	Statement	FILESIZE_T_FORMAT	153:22:3733:3749	5511143	12	True				
ANR	5511163	Statement	""" event_offset=%"""	154:7:3758:3774	5511143	13	True				
ANR	5511164	Statement	PRIi64	154:24:3775:3780	5511143	14	True				
ANR	5511165	Statement	""" max_rotation=%d"""	155:7:3789:3806	5511143	15	True				
ANR	5511166	Statement	""" creator_name=<%s>"""	156:7:3815:3834	5511143	16	True				
ANR	5511167	Statement	","	156:27:3835:3835	5511143	17	True				
ANR	5511168	Statement	m_id	157:7:3844:3847	5511143	18	True				
ANR	5511169	Statement	.	157:11:3848:3848	5511143	19	True				
ANR	5511170	Statement	Value	157:12:3849:3853	5511143	20	True				
ANR	5511171	Statement	(	157:17:3854:3854	5511143	21	True				
ANR	5511172	Statement	)	157:18:3855:3855	5511143	22	True				
ANR	5511173	Statement	","	157:19:3856:3856	5511143	23	True				
ANR	5511174	Statement	m_sequence	158:7:3865:3874	5511143	24	True				
ANR	5511175	Statement	","	158:17:3875:3875	5511143	25	True				
ANR	5511176	Statement	(	159:7:3884:3884	5511143	26	True				
ANR	5511177	Statement	unsigned	159:8:3885:3892	5511143	27	True				
ANR	5511178	Statement	long	159:17:3894:3897	5511143	28	True				
ANR	5511179	Statement	)	159:21:3898:3898	5511143	29	True				
ANR	5511180	Statement	m_ctime	159:23:3900:3906	5511143	30	True				
ANR	5511181	Statement	","	159:30:3907:3907	5511143	31	True				
ANR	5511182	Statement	m_size	160:7:3916:3921	5511143	32	True				
ANR	5511183	Statement	","	160:13:3922:3922	5511143	33	True				
ANR	5511184	Statement	m_num_events	161:7:3931:3942	5511143	34	True				
ANR	5511185	Statement	","	161:19:3943:3943	5511143	35	True				
ANR	5511186	Statement	m_file_offset	162:7:3952:3964	5511143	36	True				
ANR	5511187	Statement	","	162:20:3965:3965	5511143	37	True				
ANR	5511188	Statement	m_event_offset	163:7:3974:3987	5511143	38	True				
ANR	5511189	Statement	","	163:21:3988:3988	5511143	39	True				
ANR	5511190	Statement	m_max_rotation	164:7:3997:4010	5511143	40	True				
ANR	5511191	Statement	","	164:21:4011:4011	5511143	41	True				
ANR	5511192	Statement	m_creator_name	165:7:4020:4033	5511143	42	True				
ANR	5511193	Statement	.	165:21:4034:4034	5511143	43	True				
ANR	5511194	Statement	Value	165:22:4035:4039	5511143	44	True				
ANR	5511195	Statement	(	165:27:4040:4040	5511143	45	True				
ANR	5511196	Statement	)	165:28:4041:4041	5511143	46	True				
ANR	5511197	Statement	)	166:7:4050:4050	5511143	47	True				
ANR	5511198	ExpressionStatement		166:8:4051:4051	5511143	48	True				
ANR	5511199	ElseStatement	else		5511143	0					
ANR	5511200	CompoundStatement		23:6:489:489	5511143	0					
ANR	5511201	ExpressionStatement	"buf += ""invalid"""	169:2:4066:4082	5511143	0	True				
ANR	5511202	AssignmentExpression	"buf += ""invalid"""		5511143	0		+=			
ANR	5511203	Identifier	buf		5511143	0					
ANR	5511204	PrimaryExpression	"""invalid"""		5511143	1					
ANR	5511205	ReturnType	void		5511143	1					
ANR	5511206	Identifier	UserLogHeader :: sprint_cat		5511143	2					
ANR	5511207	ParameterList	MyString & buf		5511143	3					
ANR	5511208	Parameter	MyString & buf	145:27:3550:3562	5511143	0	True				
ANR	5511209	ParameterType	MyString &		5511143	0					
ANR	5511210	Identifier	buf		5511143	1					
ANR	5511211	CFGEntryNode	ENTRY		5511143		True				
ANR	5511212	CFGExitNode	EXIT		5511143		True				
ANR	5511213	Symbol	buf		5511143						
ANR	5511214	Symbol	m_valid		5511143						
ANR	5511215	Function	UserLogHeader :: dprint	174:0:4109:4286							
ANR	5511216	FunctionDef	"UserLogHeader :: dprint (int level , MyString & buf)"		5511215	0					
ANR	5511217	CompoundStatement		176:0:4170:4286	5511215	0					
ANR	5511218	IfStatement	if ( 0 == ( level & DebugFlags ) )		5511215	0					
ANR	5511219	Condition	0 == ( level & DebugFlags )	177:6:4178:4204	5511215	0	True				
ANR	5511220	EqualityExpression	0 == ( level & DebugFlags )		5511215	0		==			
ANR	5511221	PrimaryExpression	0		5511215	0					
ANR	5511222	BitAndExpression	level & DebugFlags		5511215	1		&			
ANR	5511223	Identifier	level		5511215	0					
ANR	5511224	Identifier	DebugFlags		5511215	1					
ANR	5511225	CompoundStatement		2:36:37:37	5511215	1					
ANR	5511226	ReturnStatement	return ;	178:2:4212:4218	5511215	0	True				
ANR	5511227	ExpressionStatement	sprint_cat ( buf )	181:1:4225:4242	5511215	1	True				
ANR	5511228	CallExpression	sprint_cat ( buf )		5511215	0					
ANR	5511229	Callee	sprint_cat		5511215	0					
ANR	5511230	Identifier	sprint_cat		5511215	0					
ANR	5511231	ArgumentList	buf		5511215	1					
ANR	5511232	Argument	buf		5511215	0					
ANR	5511233	Identifier	buf		5511215	0					
ANR	5511234	Statement	::	182:1:4245:4246	5511215	2	True				
ANR	5511235	ExpressionStatement	"dprintf ( level , ""%s\\n"" , buf . Value ( ) )"	182:3:4247:4284	5511215	3	True				
ANR	5511236	CallExpression	"dprintf ( level , ""%s\\n"" , buf . Value ( ) )"		5511215	0					
ANR	5511237	Callee	dprintf		5511215	0					
ANR	5511238	Identifier	dprintf		5511215	0					
ANR	5511239	ArgumentList	level		5511215	1					
ANR	5511240	Argument	level		5511215	0					
ANR	5511241	Identifier	level		5511215	0					
ANR	5511242	Argument	"""%s\\n"""		5511215	1					
ANR	5511243	PrimaryExpression	"""%s\\n"""		5511215	0					
ANR	5511244	Argument	buf . Value ( )		5511215	2					
ANR	5511245	CallExpression	buf . Value ( )		5511215	0					
ANR	5511246	Callee	buf . Value		5511215	0					
ANR	5511247	MemberAccess	buf . Value		5511215	0					
ANR	5511248	Identifier	buf		5511215	0					
ANR	5511249	Identifier	Value		5511215	1					
ANR	5511250	ArgumentList			5511215	1					
ANR	5511251	ReturnType	void		5511215	1					
ANR	5511252	Identifier	UserLogHeader :: dprint		5511215	2					
ANR	5511253	ParameterList	"int level , MyString & buf"		5511215	3					
ANR	5511254	Parameter	int level	175:23:4137:4145	5511215	0	True				
ANR	5511255	ParameterType	int		5511215	0					
ANR	5511256	Identifier	level		5511215	1					
ANR	5511257	Parameter	MyString & buf	175:34:4148:4160	5511215	1	True				
ANR	5511258	ParameterType	MyString &		5511215	0					
ANR	5511259	Identifier	buf		5511215	1					
ANR	5511260	CFGEntryNode	ENTRY		5511215		True				
ANR	5511261	CFGExitNode	EXIT		5511215		True				
ANR	5511262	Symbol	buf		5511215						
ANR	5511263	Symbol	level		5511215						
ANR	5511264	Symbol	buf . Value		5511215						
ANR	5511265	Symbol	DebugFlags		5511215						
ANR	5511266	Function	UserLogHeader :: dprint	186:0:4308:4550							
ANR	5511267	FunctionDef	"UserLogHeader :: dprint (int level , const char * label)"		5511266	0					
ANR	5511268	CompoundStatement		188:0:4373:4550	5511266	0					
ANR	5511269	IfStatement	if ( 0 == ( level & DebugFlags ) )		5511266	0					
ANR	5511270	Condition	0 == ( level & DebugFlags )	189:6:4381:4407	5511266	0	True				
ANR	5511271	EqualityExpression	0 == ( level & DebugFlags )		5511266	0		==			
ANR	5511272	PrimaryExpression	0		5511266	0					
ANR	5511273	BitAndExpression	level & DebugFlags		5511266	1		&			
ANR	5511274	Identifier	level		5511266	0					
ANR	5511275	Identifier	DebugFlags		5511266	1					
ANR	5511276	CompoundStatement		2:36:37:37	5511266	1					
ANR	5511277	ReturnStatement	return ;	190:2:4415:4421	5511266	0	True				
ANR	5511278	IfStatement	if ( NULL == label )		5511266	1					
ANR	5511279	Condition	NULL == label	193:6:4433:4445	5511266	0	True				
ANR	5511280	EqualityExpression	NULL == label		5511266	0		==			
ANR	5511281	Identifier	NULL		5511266	0					
ANR	5511282	Identifier	label		5511266	1					
ANR	5511283	CompoundStatement		6:22:75:75	5511266	1					
ANR	5511284	ExpressionStatement	"label = """""	194:2:4453:4463	5511266	0	True				
ANR	5511285	AssignmentExpression	"label = """""		5511266	0		=			
ANR	5511286	Identifier	label		5511266	0					
ANR	5511287	PrimaryExpression	""""""		5511266	1					
ANR	5511288	IdentifierDeclStatement	MyString buf ;	197:1:4470:4482	5511266	2	True				
ANR	5511289	IdentifierDecl	buf		5511266	0					
ANR	5511290	IdentifierDeclType	MyString		5511266	0					
ANR	5511291	Identifier	buf		5511266	1					
ANR	5511292	ExpressionStatement	"buf . sprintf ( ""%s header:"" , label )"	198:1:4485:4519	5511266	3	True				
ANR	5511293	CallExpression	"buf . sprintf ( ""%s header:"" , label )"		5511266	0					
ANR	5511294	Callee	buf . sprintf		5511266	0					
ANR	5511295	MemberAccess	buf . sprintf		5511266	0					
ANR	5511296	Identifier	buf		5511266	0					
ANR	5511297	Identifier	sprintf		5511266	1					
ANR	5511298	ArgumentList	"""%s header:"""		5511266	1					
ANR	5511299	Argument	"""%s header:"""		5511266	0					
ANR	5511300	PrimaryExpression	"""%s header:"""		5511266	0					
ANR	5511301	Argument	label		5511266	1					
ANR	5511302	Identifier	label		5511266	0					
ANR	5511303	ExpressionStatement	"this -> dprint ( level , buf )"	199:1:4522:4548	5511266	4	True				
ANR	5511304	CallExpression	"this -> dprint ( level , buf )"		5511266	0					
ANR	5511305	Callee	this -> dprint		5511266	0					
ANR	5511306	PtrMemberAccess	this -> dprint		5511266	0					
ANR	5511307	Identifier	this		5511266	0					
ANR	5511308	Identifier	dprint		5511266	1					
ANR	5511309	ArgumentList	level		5511266	1					
ANR	5511310	Argument	level		5511266	0					
ANR	5511311	Identifier	level		5511266	0					
ANR	5511312	Argument	buf		5511266	1					
ANR	5511313	Identifier	buf		5511266	0					
ANR	5511314	ReturnType	void		5511266	1					
ANR	5511315	Identifier	UserLogHeader :: dprint		5511266	2					
ANR	5511316	ParameterList	"int level , const char * label"		5511266	3					
ANR	5511317	Parameter	int level	187:23:4336:4344	5511266	0	True				
ANR	5511318	ParameterType	int		5511266	0					
ANR	5511319	Identifier	level		5511266	1					
ANR	5511320	Parameter	const char * label	187:34:4347:4363	5511266	1	True				
ANR	5511321	ParameterType	const char *		5511266	0					
ANR	5511322	Identifier	label		5511266	1					
ANR	5511323	CFGEntryNode	ENTRY		5511266		True				
ANR	5511324	CFGExitNode	EXIT		5511266		True				
ANR	5511325	Symbol	buf		5511266						
ANR	5511326	Symbol	NULL		5511266						
ANR	5511327	Symbol	level		5511266						
ANR	5511328	Symbol	this		5511266						
ANR	5511329	Symbol	DebugFlags		5511266						
ANR	5511330	Symbol	label		5511266						
ANR	5511331	Function	ReadUserLogHeader :: Read	206:0:4589:5315							
ANR	5511332	FunctionDef	ReadUserLogHeader :: Read (ReadUserLog & reader)		5511331	0					
ANR	5511333	CompoundStatement		209:0:4641:5315	5511331	0					
ANR	5511334	IdentifierDeclStatement	ULogEvent * event = NULL ;	212:1:4676:4701	5511331	0	True				
ANR	5511335	IdentifierDecl	* event = NULL		5511331	0					
ANR	5511336	IdentifierDeclType	ULogEvent *		5511331	0					
ANR	5511337	Identifier	event		5511331	1					
ANR	5511338	AssignmentExpression	* event = NULL		5511331	2		=			
ANR	5511339	Identifier	NULL		5511331	0					
ANR	5511340	Identifier	NULL		5511331	1					
ANR	5511341	IdentifierDeclStatement	ULogEventOutcome outcome = reader . readEvent ( event ) ;	213:1:4704:4756	5511331	1	True				
ANR	5511342	IdentifierDecl	outcome = reader . readEvent ( event )		5511331	0					
ANR	5511343	IdentifierDeclType	ULogEventOutcome		5511331	0					
ANR	5511344	Identifier	outcome		5511331	1					
ANR	5511345	AssignmentExpression	outcome = reader . readEvent ( event )		5511331	2		=			
ANR	5511346	Identifier	outcome		5511331	0					
ANR	5511347	CallExpression	reader . readEvent ( event )		5511331	1					
ANR	5511348	Callee	reader . readEvent		5511331	0					
ANR	5511349	MemberAccess	reader . readEvent		5511331	0					
ANR	5511350	Identifier	reader		5511331	0					
ANR	5511351	Identifier	readEvent		5511331	1					
ANR	5511352	ArgumentList	event		5511331	1					
ANR	5511353	Argument	event		5511331	0					
ANR	5511354	Identifier	event		5511331	0					
ANR	5511355	IfStatement	if ( ULOG_OK != outcome )		5511331	2					
ANR	5511356	Condition	ULOG_OK != outcome	215:6:4765:4782	5511331	0	True				
ANR	5511357	EqualityExpression	ULOG_OK != outcome		5511331	0		!=			
ANR	5511358	Identifier	ULOG_OK		5511331	0					
ANR	5511359	Identifier	outcome		5511331	1					
ANR	5511360	CompoundStatement		7:27:144:144	5511331	1					
ANR	5511361	Statement	::	216:2:4790:4791	5511331	0	True				
ANR	5511362	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ReadUserLogHeader::Read(): readEvent() failed\\n"" )"	216:4:4792:4872	5511331	1	True				
ANR	5511363	CallExpression	"dprintf ( D_FULLDEBUG , ""ReadUserLogHeader::Read(): readEvent() failed\\n"" )"		5511331	0					
ANR	5511364	Callee	dprintf		5511331	0					
ANR	5511365	Identifier	dprintf		5511331	0					
ANR	5511366	ArgumentList	D_FULLDEBUG		5511331	1					
ANR	5511367	Argument	D_FULLDEBUG		5511331	0					
ANR	5511368	Identifier	D_FULLDEBUG		5511331	0					
ANR	5511369	Argument	"""ReadUserLogHeader::Read(): readEvent() failed\\n"""		5511331	1					
ANR	5511370	PrimaryExpression	"""ReadUserLogHeader::Read(): readEvent() failed\\n"""		5511331	0					
ANR	5511371	Statement	delete	218:2:4876:4881	5511331	2	True				
ANR	5511372	ExpressionStatement	event	218:9:4883:4888	5511331	3	True				
ANR	5511373	Identifier	event		5511331	0					
ANR	5511374	ReturnStatement	return outcome ;	219:2:4892:4906	5511331	4	True				
ANR	5511375	Identifier	outcome		5511331	0					
ANR	5511376	IfStatement	if ( ULOG_GENERIC != event -> eventNumber )		5511331	3					
ANR	5511377	Condition	ULOG_GENERIC != event -> eventNumber	221:6:4917:4950	5511331	0	True				
ANR	5511378	EqualityExpression	ULOG_GENERIC != event -> eventNumber		5511331	0		!=			
ANR	5511379	Identifier	ULOG_GENERIC		5511331	0					
ANR	5511380	PtrMemberAccess	event -> eventNumber		5511331	1					
ANR	5511381	Identifier	event		5511331	0					
ANR	5511382	Identifier	eventNumber		5511331	1					
ANR	5511383	CompoundStatement		13:43:312:312	5511331	1					
ANR	5511384	Statement	::	222:2:4958:4959	5511331	0	True				
ANR	5511385	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ReadUserLogHeader::Read(): event #%d should be %d\\n"" , event -> eventNumber , ULOG_GENERIC )"	222:4:4960:5085	5511331	1	True				
ANR	5511386	CallExpression	"dprintf ( D_FULLDEBUG , ""ReadUserLogHeader::Read(): event #%d should be %d\\n"" , event -> eventNumber , ULOG_GENERIC )"		5511331	0					
ANR	5511387	Callee	dprintf		5511331	0					
ANR	5511388	Identifier	dprintf		5511331	0					
ANR	5511389	ArgumentList	D_FULLDEBUG		5511331	1					
ANR	5511390	Argument	D_FULLDEBUG		5511331	0					
ANR	5511391	Identifier	D_FULLDEBUG		5511331	0					
ANR	5511392	Argument	"""ReadUserLogHeader::Read(): event #%d should be %d\\n"""		5511331	1					
ANR	5511393	PrimaryExpression	"""ReadUserLogHeader::Read(): event #%d should be %d\\n"""		5511331	0					
ANR	5511394	Argument	event -> eventNumber		5511331	2					
ANR	5511395	PtrMemberAccess	event -> eventNumber		5511331	0					
ANR	5511396	Identifier	event		5511331	0					
ANR	5511397	Identifier	eventNumber		5511331	1					
ANR	5511398	Argument	ULOG_GENERIC		5511331	3					
ANR	5511399	Identifier	ULOG_GENERIC		5511331	0					
ANR	5511400	Statement	delete	225:2:5089:5094	5511331	2	True				
ANR	5511401	ExpressionStatement	event	225:9:5096:5101	5511331	3	True				
ANR	5511402	Identifier	event		5511331	0					
ANR	5511403	ReturnStatement	return ULOG_NO_EVENT ;	226:2:5105:5125	5511331	4	True				
ANR	5511404	Identifier	ULOG_NO_EVENT		5511331	0					
ANR	5511405	IdentifierDeclStatement	int rval = ExtractEvent ( event ) ;	229:1:5132:5164	5511331	4	True				
ANR	5511406	IdentifierDecl	rval = ExtractEvent ( event )		5511331	0					
ANR	5511407	IdentifierDeclType	int		5511331	0					
ANR	5511408	Identifier	rval		5511331	1					
ANR	5511409	AssignmentExpression	rval = ExtractEvent ( event )		5511331	2		=			
ANR	5511410	Identifier	rval		5511331	0					
ANR	5511411	CallExpression	ExtractEvent ( event )		5511331	1					
ANR	5511412	Callee	ExtractEvent		5511331	0					
ANR	5511413	Identifier	ExtractEvent		5511331	0					
ANR	5511414	ArgumentList	event		5511331	1					
ANR	5511415	Argument	event		5511331	0					
ANR	5511416	Identifier	event		5511331	0					
ANR	5511417	Statement	delete	230:1:5167:5172	5511331	5	True				
ANR	5511418	ExpressionStatement	event	230:8:5174:5179	5511331	6	True				
ANR	5511419	Identifier	event		5511331	0					
ANR	5511420	IfStatement	if ( rval != ULOG_OK )		5511331	7					
ANR	5511421	Condition	rval != ULOG_OK	232:6:5188:5202	5511331	0	True				
ANR	5511422	EqualityExpression	rval != ULOG_OK		5511331	0		!=			
ANR	5511423	Identifier	rval		5511331	0					
ANR	5511424	Identifier	ULOG_OK		5511331	1					
ANR	5511425	CompoundStatement		24:23:563:563	5511331	1					
ANR	5511426	Statement	::	233:2:5209:5210	5511331	0	True				
ANR	5511427	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ReadUserLogHeader::Read(): failed to extract event\\n"" )"	233:4:5211:5296	5511331	1	True				
ANR	5511428	CallExpression	"dprintf ( D_FULLDEBUG , ""ReadUserLogHeader::Read(): failed to extract event\\n"" )"		5511331	0					
ANR	5511429	Callee	dprintf		5511331	0					
ANR	5511430	Identifier	dprintf		5511331	0					
ANR	5511431	ArgumentList	D_FULLDEBUG		5511331	1					
ANR	5511432	Argument	D_FULLDEBUG		5511331	0					
ANR	5511433	Identifier	D_FULLDEBUG		5511331	0					
ANR	5511434	Argument	"""ReadUserLogHeader::Read(): failed to extract event\\n"""		5511331	1					
ANR	5511435	PrimaryExpression	"""ReadUserLogHeader::Read(): failed to extract event\\n"""		5511331	0					
ANR	5511436	ReturnStatement	return rval ;	236:1:5302:5313	5511331	8	True				
ANR	5511437	Identifier	rval		5511331	0					
ANR	5511438	ReturnType	int		5511331	1					
ANR	5511439	Identifier	ReadUserLogHeader :: Read		5511331	2					
ANR	5511440	ParameterList	ReadUserLog & reader		5511331	3					
ANR	5511441	Parameter	ReadUserLog & reader	208:1:4619:4637	5511331	0	True				
ANR	5511442	ParameterType	ReadUserLog &		5511331	0					
ANR	5511443	Identifier	reader		5511331	1					
ANR	5511444	CFGEntryNode	ENTRY		5511331		True				
ANR	5511445	CFGExitNode	EXIT		5511331		True				
ANR	5511446	Symbol	ULOG_NO_EVENT		5511331						
ANR	5511447	Symbol	NULL		5511331						
ANR	5511448	Symbol	* event		5511331						
ANR	5511449	Symbol	reader		5511331						
ANR	5511450	Symbol	D_FULLDEBUG		5511331						
ANR	5511451	Symbol	reader . readEvent		5511331						
ANR	5511452	Symbol	ULOG_OK		5511331						
ANR	5511453	Symbol	rval		5511331						
ANR	5511454	Symbol	event		5511331						
ANR	5511455	Symbol	event -> eventNumber		5511331						
ANR	5511456	Symbol	outcome		5511331						
ANR	5511457	Symbol	ULOG_GENERIC		5511331						
ANR	5511458	Symbol	ExtractEvent		5511331						
ANR	5511459	Function	WriteUserLogHeader :: Write	245:0:5380:5634							
ANR	5511460	FunctionDef	"WriteUserLogHeader :: Write (WriteUserLog & writer , FILE * fp)"		5511459	0					
ANR	5511461	CompoundStatement		247:0:5444:5634	5511459	0					
ANR	5511462	IdentifierDeclStatement	GenericEvent event ;	248:1:5447:5465	5511459	0	True				
ANR	5511463	IdentifierDecl	event		5511459	0					
ANR	5511464	IdentifierDeclType	GenericEvent		5511459	0					
ANR	5511465	Identifier	event		5511459	1					
ANR	5511466	IfStatement	if ( 0 == m_ctime )		5511459	1					
ANR	5511467	Condition	0 == m_ctime	250:6:5474:5485	5511459	0	True				
ANR	5511468	EqualityExpression	0 == m_ctime		5511459	0		==			
ANR	5511469	PrimaryExpression	0		5511459	0					
ANR	5511470	Identifier	m_ctime		5511459	1					
ANR	5511471	CompoundStatement		4:21:44:44	5511459	1					
ANR	5511472	ExpressionStatement	m_ctime = time ( NULL )	251:2:5493:5515	5511459	0	True				
ANR	5511473	AssignmentExpression	m_ctime = time ( NULL )		5511459	0		=			
ANR	5511474	Identifier	m_ctime		5511459	0					
ANR	5511475	CallExpression	time ( NULL )		5511459	1					
ANR	5511476	Callee	time		5511459	0					
ANR	5511477	Identifier	time		5511459	0					
ANR	5511478	ArgumentList	NULL		5511459	1					
ANR	5511479	Argument	NULL		5511459	0					
ANR	5511480	Identifier	NULL		5511459	0					
ANR	5511481	IfStatement	if ( ! GenerateEvent ( event ) )		5511459	2					
ANR	5511482	Condition	! GenerateEvent ( event )	253:6:5526:5548	5511459	0	True				
ANR	5511483	UnaryOperationExpression	! GenerateEvent ( event )		5511459	0					
ANR	5511484	UnaryOperator	!		5511459	0					
ANR	5511485	CallExpression	GenerateEvent ( event )		5511459	1					
ANR	5511486	Callee	GenerateEvent		5511459	0					
ANR	5511487	Identifier	GenerateEvent		5511459	0					
ANR	5511488	ArgumentList	event		5511459	1					
ANR	5511489	Argument	event		5511459	0					
ANR	5511490	Identifier	event		5511459	0					
ANR	5511491	CompoundStatement		7:32:107:107	5511459	1					
ANR	5511492	ReturnStatement	return ULOG_UNK_ERROR ;	254:2:5556:5577	5511459	0	True				
ANR	5511493	Identifier	ULOG_UNK_ERROR		5511459	0					
ANR	5511494	ReturnStatement	"return writer . writeGlobalEvent ( event , fp , true ) ;"	256:1:5583:5632	5511459	3	True				
ANR	5511495	CallExpression	"writer . writeGlobalEvent ( event , fp , true )"		5511459	0					
ANR	5511496	Callee	writer . writeGlobalEvent		5511459	0					
ANR	5511497	MemberAccess	writer . writeGlobalEvent		5511459	0					
ANR	5511498	Identifier	writer		5511459	0					
ANR	5511499	Identifier	writeGlobalEvent		5511459	1					
ANR	5511500	ArgumentList	event		5511459	1					
ANR	5511501	Argument	event		5511459	0					
ANR	5511502	Identifier	event		5511459	0					
ANR	5511503	Argument	fp		5511459	1					
ANR	5511504	Identifier	fp		5511459	0					
ANR	5511505	Argument	true		5511459	2					
ANR	5511506	Identifier	true		5511459	0					
ANR	5511507	ReturnType	int		5511459	1					
ANR	5511508	Identifier	WriteUserLogHeader :: Write		5511459	2					
ANR	5511509	ParameterList	"WriteUserLog & writer , FILE * fp"		5511459	3					
ANR	5511510	Parameter	WriteUserLog & writer	246:27:5411:5430	5511459	0	True				
ANR	5511511	ParameterType	WriteUserLog &		5511459	0					
ANR	5511512	Identifier	writer		5511459	1					
ANR	5511513	Parameter	FILE * fp	246:49:5433:5440	5511459	1	True				
ANR	5511514	ParameterType	FILE *		5511459	0					
ANR	5511515	Identifier	fp		5511459	1					
ANR	5511516	CFGEntryNode	ENTRY		5511459		True				
ANR	5511517	CFGExitNode	EXIT		5511459		True				
ANR	5511518	Symbol	m_ctime		5511459						
ANR	5511519	Symbol	NULL		5511459						
ANR	5511520	Symbol	GenerateEvent		5511459						
ANR	5511521	Symbol	writer . writeGlobalEvent		5511459						
ANR	5511522	Symbol	true		5511459						
ANR	5511523	Symbol	fp		5511459						
ANR	5511524	Symbol	ULOG_UNK_ERROR		5511459						
ANR	5511525	Symbol	writer		5511459						
ANR	5511526	Symbol	time		5511459						
ANR	5511527	Symbol	event		5511459						
ANR	5511528	Function	WriteUserLogHeader :: GenerateEvent	260:0:5664:6407							
ANR	5511529	FunctionDef	WriteUserLogHeader :: GenerateEvent (GenericEvent & event)		5511528	0					
ANR	5511530	CompoundStatement		262:0:5726:6407	5511528	0					
ANR	5511531	Statement	snprintf	263:1:5729:5736	5511528	0	True				
ANR	5511532	Statement	(	263:9:5737:5737	5511528	1	True				
ANR	5511533	Statement	event	263:11:5739:5743	5511528	2	True				
ANR	5511534	Statement	.	263:16:5744:5744	5511528	3	True				
ANR	5511535	Statement	info	263:17:5745:5748	5511528	4	True				
ANR	5511536	Statement	","	263:21:5749:5749	5511528	5	True				
ANR	5511537	Statement	sizeof	263:23:5751:5756	5511528	6	True				
ANR	5511538	Statement	(	263:29:5757:5757	5511528	7	True				
ANR	5511539	Statement	event	263:30:5758:5762	5511528	8	True				
ANR	5511540	Statement	.	263:35:5763:5763	5511528	9	True				
ANR	5511541	Statement	info	263:36:5764:5767	5511528	10	True				
ANR	5511542	Statement	)	263:40:5768:5768	5511528	11	True				
ANR	5511543	Statement	","	263:41:5769:5769	5511528	12	True				
ANR	5511544	Statement	"""Global JobLog:"""	264:5:5776:5791	5511528	13	True				
ANR	5511545	Statement	""" ctime=%d"""	265:5:5798:5808	5511528	14	True				
ANR	5511546	Statement	""" id=%s"""	266:5:5815:5822	5511528	15	True				
ANR	5511547	Statement	""" sequence=%d"""	267:5:5829:5842	5511528	16	True				
ANR	5511548	Statement	""" size="""	268:5:5849:5856	5511528	17	True				
ANR	5511549	Statement	FILESIZE_T_FORMAT	268:13:5857:5873	5511528	18	True				
ANR	5511550	Statement	""""""	268:30:5874:5875	5511528	19	True				
ANR	5511551	Statement	""" events=%"""	269:5:5882:5892	5511528	20	True				
ANR	5511552	Statement	PRId64	269:16:5893:5898	5511528	21	True				
ANR	5511553	Statement	""""""	269:22:5899:5900	5511528	22	True				
ANR	5511554	Statement	""" offset="""	270:5:5907:5916	5511528	23	True				
ANR	5511555	Statement	FILESIZE_T_FORMAT	270:15:5917:5933	5511528	24	True				
ANR	5511556	Statement	""""""	270:32:5934:5935	5511528	25	True				
ANR	5511557	Statement	""" event_off=%"""	271:5:5942:5955	5511528	26	True				
ANR	5511558	Statement	PRId64	271:19:5956:5961	5511528	27	True				
ANR	5511559	Statement	""""""	271:25:5962:5963	5511528	28	True				
ANR	5511560	Statement	""" max_rotation=%d"""	272:5:5970:5987	5511528	29	True				
ANR	5511561	Statement	""" creator_name=<%s>"""	273:5:5994:6013	5511528	30	True				
ANR	5511562	Statement	","	273:25:6014:6014	5511528	31	True				
ANR	5511563	Statement	(	274:5:6021:6021	5511528	32	True				
ANR	5511564	Statement	int	274:6:6022:6024	5511528	33	True				
ANR	5511565	Statement	)	274:9:6025:6025	5511528	34	True				
ANR	5511566	Statement	getCtime	274:11:6027:6034	5511528	35	True				
ANR	5511567	Statement	(	274:19:6035:6035	5511528	36	True				
ANR	5511568	Statement	)	274:20:6036:6036	5511528	37	True				
ANR	5511569	Statement	","	274:21:6037:6037	5511528	38	True				
ANR	5511570	Statement	getId	275:5:6044:6048	5511528	39	True				
ANR	5511571	Statement	(	275:10:6049:6049	5511528	40	True				
ANR	5511572	Statement	)	275:11:6050:6050	5511528	41	True				
ANR	5511573	Statement	.	275:12:6051:6051	5511528	42	True				
ANR	5511574	Statement	Value	275:13:6052:6056	5511528	43	True				
ANR	5511575	Statement	(	275:18:6057:6057	5511528	44	True				
ANR	5511576	Statement	)	275:19:6058:6058	5511528	45	True				
ANR	5511577	Statement	","	275:20:6059:6059	5511528	46	True				
ANR	5511578	Statement	getSequence	276:5:6066:6076	5511528	47	True				
ANR	5511579	Statement	(	276:16:6077:6077	5511528	48	True				
ANR	5511580	Statement	)	276:17:6078:6078	5511528	49	True				
ANR	5511581	Statement	","	276:18:6079:6079	5511528	50	True				
ANR	5511582	Statement	getSize	277:5:6086:6092	5511528	51	True				
ANR	5511583	Statement	(	277:12:6093:6093	5511528	52	True				
ANR	5511584	Statement	)	277:13:6094:6094	5511528	53	True				
ANR	5511585	Statement	","	277:14:6095:6095	5511528	54	True				
ANR	5511586	Statement	getNumEvents	278:5:6102:6113	5511528	55	True				
ANR	5511587	Statement	(	278:17:6114:6114	5511528	56	True				
ANR	5511588	Statement	)	278:18:6115:6115	5511528	57	True				
ANR	5511589	Statement	","	278:19:6116:6116	5511528	58	True				
ANR	5511590	Statement	getFileOffset	279:5:6123:6135	5511528	59	True				
ANR	5511591	Statement	(	279:18:6136:6136	5511528	60	True				
ANR	5511592	Statement	)	279:19:6137:6137	5511528	61	True				
ANR	5511593	Statement	","	279:20:6138:6138	5511528	62	True				
ANR	5511594	Statement	getEventOffset	280:5:6145:6158	5511528	63	True				
ANR	5511595	Statement	(	280:19:6159:6159	5511528	64	True				
ANR	5511596	Statement	)	280:20:6160:6160	5511528	65	True				
ANR	5511597	Statement	","	280:21:6161:6161	5511528	66	True				
ANR	5511598	Statement	getMaxRotation	281:5:6168:6181	5511528	67	True				
ANR	5511599	Statement	(	281:19:6182:6182	5511528	68	True				
ANR	5511600	Statement	)	281:20:6183:6183	5511528	69	True				
ANR	5511601	Statement	","	281:21:6184:6184	5511528	70	True				
ANR	5511602	Statement	getCreatorName	282:5:6191:6204	5511528	71	True				
ANR	5511603	Statement	(	282:19:6205:6205	5511528	72	True				
ANR	5511604	Statement	)	282:20:6206:6206	5511528	73	True				
ANR	5511605	Statement	.	282:21:6207:6207	5511528	74	True				
ANR	5511606	Statement	Value	282:22:6208:6212	5511528	75	True				
ANR	5511607	Statement	(	282:27:6213:6213	5511528	76	True				
ANR	5511608	Statement	)	282:28:6214:6214	5511528	77	True				
ANR	5511609	Statement	)	283:5:6221:6221	5511528	78	True				
ANR	5511610	ExpressionStatement		283:6:6222:6222	5511528	79	True				
ANR	5511611	Statement	::	284:1:6225:6226	5511528	80	True				
ANR	5511612	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Generated log header: '%s'\\n"" , event . info )"	284:3:6227:6293	5511528	81	True				
ANR	5511613	CallExpression	"dprintf ( D_FULLDEBUG , ""Generated log header: '%s'\\n"" , event . info )"		5511528	0					
ANR	5511614	Callee	dprintf		5511528	0					
ANR	5511615	Identifier	dprintf		5511528	0					
ANR	5511616	ArgumentList	D_FULLDEBUG		5511528	1					
ANR	5511617	Argument	D_FULLDEBUG		5511528	0					
ANR	5511618	Identifier	D_FULLDEBUG		5511528	0					
ANR	5511619	Argument	"""Generated log header: '%s'\\n"""		5511528	1					
ANR	5511620	PrimaryExpression	"""Generated log header: '%s'\\n"""		5511528	0					
ANR	5511621	Argument	event . info		5511528	2					
ANR	5511622	MemberAccess	event . info		5511528	0					
ANR	5511623	Identifier	event		5511528	0					
ANR	5511624	Identifier	info		5511528	1					
ANR	5511625	IdentifierDeclStatement	int len = strlen ( event . info ) ;	285:1:6296:6327	5511528	82	True				
ANR	5511626	IdentifierDecl	len = strlen ( event . info )		5511528	0					
ANR	5511627	IdentifierDeclType	int		5511528	0					
ANR	5511628	Identifier	len		5511528	1					
ANR	5511629	AssignmentExpression	len = strlen ( event . info )		5511528	2		=			
ANR	5511630	Identifier	len		5511528	0					
ANR	5511631	CallExpression	strlen ( event . info )		5511528	1					
ANR	5511632	Callee	strlen		5511528	0					
ANR	5511633	Identifier	strlen		5511528	0					
ANR	5511634	ArgumentList	event . info		5511528	1					
ANR	5511635	Argument	event . info		5511528	0					
ANR	5511636	MemberAccess	event . info		5511528	0					
ANR	5511637	Identifier	event		5511528	0					
ANR	5511638	Identifier	info		5511528	1					
ANR	5511639	WhileStatement	while ( len < 256 )		5511528	83					
ANR	5511640	Condition	len < 256	286:8:6337:6345	5511528	0	True				
ANR	5511641	RelationalExpression	len < 256		5511528	0		<			
ANR	5511642	Identifier	len		5511528	0					
ANR	5511643	PrimaryExpression	256		5511528	1					
ANR	5511644	CompoundStatement		25:20:622:622	5511528	1					
ANR	5511645	ExpressionStatement	"strcat ( event . info , "" "" )"	287:2:6353:6378	5511528	0	True				
ANR	5511646	CallExpression	"strcat ( event . info , "" "" )"		5511528	0					
ANR	5511647	Callee	strcat		5511528	0					
ANR	5511648	Identifier	strcat		5511528	0					
ANR	5511649	ArgumentList	event . info		5511528	1					
ANR	5511650	Argument	event . info		5511528	0					
ANR	5511651	MemberAccess	event . info		5511528	0					
ANR	5511652	Identifier	event		5511528	0					
ANR	5511653	Identifier	info		5511528	1					
ANR	5511654	Argument	""" """		5511528	1					
ANR	5511655	PrimaryExpression	""" """		5511528	0					
ANR	5511656	ExpressionStatement	len ++	288:2:6382:6387	5511528	1	True				
ANR	5511657	PostIncDecOperationExpression	len ++		5511528	0					
ANR	5511658	Identifier	len		5511528	0					
ANR	5511659	IncDec	++		5511528	1					
ANR	5511660	ReturnStatement	return true ;	291:1:6394:6405	5511528	84	True				
ANR	5511661	Identifier	true		5511528	0					
ANR	5511662	ReturnType	bool		5511528	1					
ANR	5511663	Identifier	WriteUserLogHeader :: GenerateEvent		5511528	2					
ANR	5511664	ParameterList	GenericEvent & event		5511528	3					
ANR	5511665	Parameter	GenericEvent & event	261:35:5704:5722	5511528	0	True				
ANR	5511666	ParameterType	GenericEvent &		5511528	0					
ANR	5511667	Identifier	event		5511528	1					
ANR	5511668	CFGEntryNode	ENTRY		5511528		True				
ANR	5511669	CFGExitNode	EXIT		5511528		True				
ANR	5511670	Symbol	strlen		5511528						
ANR	5511671	Symbol	event . info		5511528						
ANR	5511672	Symbol	len		5511528						
ANR	5511673	Symbol	true		5511528						
ANR	5511674	Symbol	D_FULLDEBUG		5511528						
ANR	5511675	Symbol	event		5511528						
