command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3600032	File	data/converged/CVE-2011-4930_htcondor/src_condor_procapi_procapi_faminfo_t.cpp								
ANR	3600033	Function	getFamilyInfo_test	26:0:1048:6126							
ANR	3600034	FunctionDef	getFamilyInfo_test (bool verbose)		3600033	0					
ANR	3600035	CompoundStatement		26:37:1085:6126	3600033	0					
ANR	3600036	IdentifierDeclStatement	int success = 1 ;	28:2:1090:1105	3600033	0	True				
ANR	3600037	IdentifierDecl	success = 1		3600033	0					
ANR	3600038	IdentifierDeclType	int		3600033	0					
ANR	3600039	Identifier	success		3600033	1					
ANR	3600040	AssignmentExpression	success = 1		3600033	2		=			
ANR	3600041	Identifier	success		3600033	0					
ANR	3600042	PrimaryExpression	1		3600033	1					
ANR	3600043	IdentifierDeclStatement	piPTR pi = NULL ;	29:2:1109:1124	3600033	1	True				
ANR	3600044	IdentifierDecl	pi = NULL		3600033	0					
ANR	3600045	IdentifierDeclType	piPTR		3600033	0					
ANR	3600046	Identifier	pi		3600033	1					
ANR	3600047	AssignmentExpression	pi = NULL		3600033	2		=			
ANR	3600048	Identifier	NULL		3600033	0					
ANR	3600049	Identifier	NULL		3600033	1					
ANR	3600050	IdentifierDeclStatement	pid_t child ;	30:2:1128:1139	3600033	2	True				
ANR	3600051	IdentifierDecl	child		3600033	0					
ANR	3600052	IdentifierDeclType	pid_t		3600033	0					
ANR	3600053	Identifier	child		3600033	1					
ANR	3600054	IdentifierDeclStatement	int status ;	31:2:1143:1153	3600033	3	True				
ANR	3600055	IdentifierDecl	status		3600033	0					
ANR	3600056	IdentifierDeclType	int		3600033	0					
ANR	3600057	Identifier	status		3600033	1					
ANR	3600058	IdentifierDeclStatement	PidEnvID penvid ;	33:2:1158:1173	3600033	4	True				
ANR	3600059	IdentifierDecl	penvid		3600033	0					
ANR	3600060	IdentifierDeclType	PidEnvID		3600033	0					
ANR	3600061	Identifier	penvid		3600033	1					
ANR	3600062	ExpressionStatement	pidenvid_init ( & penvid )	35:2:1178:1200	3600033	5	True				
ANR	3600063	CallExpression	pidenvid_init ( & penvid )		3600033	0					
ANR	3600064	Callee	pidenvid_init		3600033	0					
ANR	3600065	Identifier	pidenvid_init		3600033	0					
ANR	3600066	ArgumentList	& penvid		3600033	1					
ANR	3600067	Argument	& penvid		3600033	0					
ANR	3600068	UnaryOperationExpression	& penvid		3600033	0					
ANR	3600069	UnaryOperator	&		3600033	0					
ANR	3600070	Identifier	penvid		3600033	1					
ANR	3600071	IfStatement	if ( verbose )		3600033	6					
ANR	3600072	Condition	verbose	37:5:1208:1214	3600033	0	True				
ANR	3600073	Identifier	verbose		3600033	0					
ANR	3600074	CompoundStatement		12:13:130:130	3600033	1					
ANR	3600075	ExpressionStatement	"printf ( ""\\n....................................\\n"" )"	38:2:1220:1273	3600033	0	True				
ANR	3600076	CallExpression	"printf ( ""\\n....................................\\n"" )"		3600033	0					
ANR	3600077	Callee	printf		3600033	0					
ANR	3600078	Identifier	printf		3600033	0					
ANR	3600079	ArgumentList	"""\\n....................................\\n"""		3600033	1					
ANR	3600080	Argument	"""\\n....................................\\n"""		3600033	0					
ANR	3600081	PrimaryExpression	"""\\n....................................\\n"""		3600033	0					
ANR	3600082	ExpressionStatement	"printf ( ""This test forks off a tree of processess and then uses\\n"" )"	39:2:1277:1345	3600033	1	True				
ANR	3600083	CallExpression	"printf ( ""This test forks off a tree of processess and then uses\\n"" )"		3600033	0					
ANR	3600084	Callee	printf		3600033	0					
ANR	3600085	Identifier	printf		3600033	0					
ANR	3600086	ArgumentList	"""This test forks off a tree of processess and then uses\\n"""		3600033	1					
ANR	3600087	Argument	"""This test forks off a tree of processess and then uses\\n"""		3600033	0					
ANR	3600088	PrimaryExpression	"""This test forks off a tree of processess and then uses\\n"""		3600033	0					
ANR	3600089	ExpressionStatement	"printf ( ""getFamilyInfo to get information on each process in the\\n"" )"	40:2:1349:1418	3600033	2	True				
ANR	3600090	CallExpression	"printf ( ""getFamilyInfo to get information on each process in the\\n"" )"		3600033	0					
ANR	3600091	Callee	printf		3600033	0					
ANR	3600092	Identifier	printf		3600033	0					
ANR	3600093	ArgumentList	"""getFamilyInfo to get information on each process in the\\n"""		3600033	1					
ANR	3600094	Argument	"""getFamilyInfo to get information on each process in the\\n"""		3600033	0					
ANR	3600095	PrimaryExpression	"""getFamilyInfo to get information on each process in the\\n"""		3600033	0					
ANR	3600096	ExpressionStatement	"printf ( ""tree.  It then checks the family data against what is\\n"" )"	41:2:1422:1489	3600033	3	True				
ANR	3600097	CallExpression	"printf ( ""tree.  It then checks the family data against what is\\n"" )"		3600033	0					
ANR	3600098	Callee	printf		3600033	0					
ANR	3600099	Identifier	printf		3600033	0					
ANR	3600100	ArgumentList	"""tree.  It then checks the family data against what is\\n"""		3600033	1					
ANR	3600101	Argument	"""tree.  It then checks the family data against what is\\n"""		3600033	0					
ANR	3600102	PrimaryExpression	"""tree.  It then checks the family data against what is\\n"""		3600033	0					
ANR	3600103	ExpressionStatement	"printf ( ""expected and against its parents family\\n"" )"	42:2:1493:1546	3600033	4	True				
ANR	3600104	CallExpression	"printf ( ""expected and against its parents family\\n"" )"		3600033	0					
ANR	3600105	Callee	printf		3600033	0					
ANR	3600106	Identifier	printf		3600033	0					
ANR	3600107	ArgumentList	"""expected and against its parents family\\n"""		3600033	1					
ANR	3600108	Argument	"""expected and against its parents family\\n"""		3600033	0					
ANR	3600109	PrimaryExpression	"""expected and against its parents family\\n"""		3600033	0					
ANR	3600110	IdentifierDeclStatement	"PID_ENTRY * pids = fork_tree ( FAMILY_INFO_DEPTH , FAMILY_INFO_BREADTH , 0 , verbose ) ;"	48:2:1680:1759	3600033	7	True				
ANR	3600111	IdentifierDecl	"* pids = fork_tree ( FAMILY_INFO_DEPTH , FAMILY_INFO_BREADTH , 0 , verbose )"		3600033	0					
ANR	3600112	IdentifierDeclType	PID_ENTRY *		3600033	0					
ANR	3600113	Identifier	pids		3600033	1					
ANR	3600114	AssignmentExpression	"* pids = fork_tree ( FAMILY_INFO_DEPTH , FAMILY_INFO_BREADTH , 0 , verbose )"		3600033	2		=			
ANR	3600115	Identifier	pids		3600033	0					
ANR	3600116	CallExpression	"fork_tree ( FAMILY_INFO_DEPTH , FAMILY_INFO_BREADTH , 0 , verbose )"		3600033	1					
ANR	3600117	Callee	fork_tree		3600033	0					
ANR	3600118	Identifier	fork_tree		3600033	0					
ANR	3600119	ArgumentList	FAMILY_INFO_DEPTH		3600033	1					
ANR	3600120	Argument	FAMILY_INFO_DEPTH		3600033	0					
ANR	3600121	Identifier	FAMILY_INFO_DEPTH		3600033	0					
ANR	3600122	Argument	FAMILY_INFO_BREADTH		3600033	1					
ANR	3600123	Identifier	FAMILY_INFO_BREADTH		3600033	0					
ANR	3600124	Argument	0		3600033	2					
ANR	3600125	PrimaryExpression	0		3600033	0					
ANR	3600126	Argument	verbose		3600033	3					
ANR	3600127	Identifier	verbose		3600033	0					
ANR	3600128	IdentifierDeclStatement	"int num_nodes = get_num_nodes ( FAMILY_INFO_DEPTH , FAMILY_INFO_BREADTH ) ;"	50:2:1764:1833	3600033	8	True				
ANR	3600129	IdentifierDecl	"num_nodes = get_num_nodes ( FAMILY_INFO_DEPTH , FAMILY_INFO_BREADTH )"		3600033	0					
ANR	3600130	IdentifierDeclType	int		3600033	0					
ANR	3600131	Identifier	num_nodes		3600033	1					
ANR	3600132	AssignmentExpression	"num_nodes = get_num_nodes ( FAMILY_INFO_DEPTH , FAMILY_INFO_BREADTH )"		3600033	2		=			
ANR	3600133	Identifier	num_nodes		3600033	0					
ANR	3600134	CallExpression	"get_num_nodes ( FAMILY_INFO_DEPTH , FAMILY_INFO_BREADTH )"		3600033	1					
ANR	3600135	Callee	get_num_nodes		3600033	0					
ANR	3600136	Identifier	get_num_nodes		3600033	0					
ANR	3600137	ArgumentList	FAMILY_INFO_DEPTH		3600033	1					
ANR	3600138	Argument	FAMILY_INFO_DEPTH		3600033	0					
ANR	3600139	Identifier	FAMILY_INFO_DEPTH		3600033	0					
ANR	3600140	Argument	FAMILY_INFO_BREADTH		3600033	1					
ANR	3600141	Identifier	FAMILY_INFO_BREADTH		3600033	0					
ANR	3600142	ForStatement	for ( int i = 0 ; i < num_nodes ; i ++ )		3600033	9					
ANR	3600143	ForInit	int i = 0 ;	53:6:1893:1902	3600033	0	True				
ANR	3600144	IdentifierDeclStatement	int i = 0 ;		3600033	0					
ANR	3600145	IdentifierDecl	i = 0		3600033	0					
ANR	3600146	IdentifierDeclType	int		3600033	0					
ANR	3600147	Identifier	i		3600033	1					
ANR	3600148	AssignmentExpression	i = 0		3600033	2		=			
ANR	3600149	Identifier	i		3600033	0					
ANR	3600150	PrimaryExpression	0		3600033	1					
ANR	3600151	Condition	i < num_nodes	53:17:1904:1916	3600033	1	True				
ANR	3600152	RelationalExpression	i < num_nodes		3600033	0		<			
ANR	3600153	Identifier	i		3600033	0					
ANR	3600154	Identifier	num_nodes		3600033	1					
ANR	3600155	PostIncDecOperationExpression	i ++	53:32:1919:1921	3600033	2	True				
ANR	3600156	Identifier	i		3600033	0					
ANR	3600157	IncDec	++		3600033	1					
ANR	3600158	CompoundStatement		60:4:1794:1869	3600033	3					
ANR	3600159	IdentifierDeclStatement	int pid = pids [ i ] . pid ;	54:4:1929:1950	3600033	0	True				
ANR	3600160	IdentifierDecl	pid = pids [ i ] . pid		3600033	0					
ANR	3600161	IdentifierDeclType	int		3600033	0					
ANR	3600162	Identifier	pid		3600033	1					
ANR	3600163	AssignmentExpression	pid = pids [ i ] . pid		3600033	2		=			
ANR	3600164	Identifier	pid		3600033	0					
ANR	3600165	MemberAccess	pids [ i ] . pid		3600033	1					
ANR	3600166	ArrayIndexing	pids [ i ]		3600033	0					
ANR	3600167	Identifier	pids		3600033	0					
ANR	3600168	Identifier	i		3600033	1					
ANR	3600169	Identifier	pid		3600033	1					
ANR	3600170	IdentifierDeclStatement	int ppid = pids [ i ] . ppid ;	55:4:1956:1979	3600033	1	True				
ANR	3600171	IdentifierDecl	ppid = pids [ i ] . ppid		3600033	0					
ANR	3600172	IdentifierDeclType	int		3600033	0					
ANR	3600173	Identifier	ppid		3600033	1					
ANR	3600174	AssignmentExpression	ppid = pids [ i ] . ppid		3600033	2		=			
ANR	3600175	Identifier	ppid		3600033	0					
ANR	3600176	MemberAccess	pids [ i ] . ppid		3600033	1					
ANR	3600177	ArrayIndexing	pids [ i ]		3600033	0					
ANR	3600178	Identifier	pids		3600033	0					
ANR	3600179	Identifier	i		3600033	1					
ANR	3600180	Identifier	ppid		3600033	1					
ANR	3600181	IdentifierDeclStatement	piPTR pi = NULL ;	56:4:1985:2000	3600033	2	True				
ANR	3600182	IdentifierDecl	pi = NULL		3600033	0					
ANR	3600183	IdentifierDeclType	piPTR		3600033	0					
ANR	3600184	Identifier	pi		3600033	1					
ANR	3600185	AssignmentExpression	pi = NULL		3600033	2		=			
ANR	3600186	Identifier	NULL		3600033	0					
ANR	3600187	Identifier	NULL		3600033	1					
ANR	3600188	IdentifierDeclStatement	piPTR ppi = NULL ;	57:4:2006:2022	3600033	3	True				
ANR	3600189	IdentifierDecl	ppi = NULL		3600033	0					
ANR	3600190	IdentifierDeclType	piPTR		3600033	0					
ANR	3600191	Identifier	ppi		3600033	1					
ANR	3600192	AssignmentExpression	ppi = NULL		3600033	2		=			
ANR	3600193	Identifier	NULL		3600033	0					
ANR	3600194	Identifier	NULL		3600033	1					
ANR	3600195	IfStatement	"if ( ProcAPI :: getFamilyInfo ( pid , pi , & penvid , status ) == PROCAPI_FAILURE )"		3600033	4					
ANR	3600196	Condition	"ProcAPI :: getFamilyInfo ( pid , pi , & penvid , status ) == PROCAPI_FAILURE"	59:7:2032:2099	3600033	0	True				
ANR	3600197	EqualityExpression	"ProcAPI :: getFamilyInfo ( pid , pi , & penvid , status ) == PROCAPI_FAILURE"		3600033	0		==			
ANR	3600198	CallExpression	"ProcAPI :: getFamilyInfo ( pid , pi , & penvid , status )"		3600033	0					
ANR	3600199	Callee	ProcAPI :: getFamilyInfo		3600033	0					
ANR	3600200	Identifier	ProcAPI :: getFamilyInfo		3600033	0					
ANR	3600201	ArgumentList	pid		3600033	1					
ANR	3600202	Argument	pid		3600033	0					
ANR	3600203	Identifier	pid		3600033	0					
ANR	3600204	Argument	pi		3600033	1					
ANR	3600205	Identifier	pi		3600033	0					
ANR	3600206	Argument	& penvid		3600033	2					
ANR	3600207	UnaryOperationExpression	& penvid		3600033	0					
ANR	3600208	UnaryOperator	&		3600033	0					
ANR	3600209	Identifier	penvid		3600033	1					
ANR	3600210	Argument	status		3600033	3					
ANR	3600211	Identifier	status		3600033	0					
ANR	3600212	Identifier	PROCAPI_FAILURE		3600033	1					
ANR	3600213	CompoundStatement		34:77:1016:1016	3600033	1					
ANR	3600214	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	60:6:2110:2144	3600033	0	True				
ANR	3600215	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600216	Callee	printf		3600033	0					
ANR	3600217	Identifier	printf		3600033	0					
ANR	3600218	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600219	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600220	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600221	Argument	pid		3600033	1					
ANR	3600222	Identifier	pid		3600033	0					
ANR	3600223	ExpressionStatement	"printf ( ""unable to retrieve process %d information with getFamilyInfo\\n"" , pid )"	61:6:2152:2229	3600033	1	True				
ANR	3600224	CallExpression	"printf ( ""unable to retrieve process %d information with getFamilyInfo\\n"" , pid )"		3600033	0					
ANR	3600225	Callee	printf		3600033	0					
ANR	3600226	Identifier	printf		3600033	0					
ANR	3600227	ArgumentList	"""unable to retrieve process %d information with getFamilyInfo\\n"""		3600033	1					
ANR	3600228	Argument	"""unable to retrieve process %d information with getFamilyInfo\\n"""		3600033	0					
ANR	3600229	PrimaryExpression	"""unable to retrieve process %d information with getFamilyInfo\\n"""		3600033	0					
ANR	3600230	Argument	pid		3600033	1					
ANR	3600231	Identifier	pid		3600033	0					
ANR	3600232	ExpressionStatement	success = - 1	62:6:2237:2249	3600033	2	True				
ANR	3600233	AssignmentExpression	success = - 1		3600033	0		=			
ANR	3600234	Identifier	success		3600033	0					
ANR	3600235	UnaryOperationExpression	- 1		3600033	1					
ANR	3600236	UnaryOperator	-		3600033	0					
ANR	3600237	PrimaryExpression	1		3600033	1					
ANR	3600238	IfStatement	if ( verbose )		3600033	5					
ANR	3600239	Condition	verbose	65:7:2269:2275	3600033	0	True				
ANR	3600240	Identifier	verbose		3600033	0					
ANR	3600241	CompoundStatement		40:15:1191:1191	3600033	1					
ANR	3600242	ExpressionStatement	"printf ( ""Family Info for process %d, child of %d of depth %d:\\n\\n"" , pid , ppid , pids [ i ] . depth )"	66:6:2285:2377	3600033	0	True				
ANR	3600243	CallExpression	"printf ( ""Family Info for process %d, child of %d of depth %d:\\n\\n"" , pid , ppid , pids [ i ] . depth )"		3600033	0					
ANR	3600244	Callee	printf		3600033	0					
ANR	3600245	Identifier	printf		3600033	0					
ANR	3600246	ArgumentList	"""Family Info for process %d, child of %d of depth %d:\\n\\n"""		3600033	1					
ANR	3600247	Argument	"""Family Info for process %d, child of %d of depth %d:\\n\\n"""		3600033	0					
ANR	3600248	PrimaryExpression	"""Family Info for process %d, child of %d of depth %d:\\n\\n"""		3600033	0					
ANR	3600249	Argument	pid		3600033	1					
ANR	3600250	Identifier	pid		3600033	0					
ANR	3600251	Argument	ppid		3600033	2					
ANR	3600252	Identifier	ppid		3600033	0					
ANR	3600253	Argument	pids [ i ] . depth		3600033	3					
ANR	3600254	MemberAccess	pids [ i ] . depth		3600033	0					
ANR	3600255	ArrayIndexing	pids [ i ]		3600033	0					
ANR	3600256	Identifier	pids		3600033	0					
ANR	3600257	Identifier	i		3600033	1					
ANR	3600258	Identifier	depth		3600033	1					
ANR	3600259	ExpressionStatement	ProcAPI :: printProcInfo ( pi )	67:6:2385:2411	3600033	1	True				
ANR	3600260	CallExpression	ProcAPI :: printProcInfo ( pi )		3600033	0					
ANR	3600261	Callee	ProcAPI :: printProcInfo		3600033	0					
ANR	3600262	Identifier	ProcAPI :: printProcInfo		3600033	0					
ANR	3600263	ArgumentList	pi		3600033	1					
ANR	3600264	Argument	pi		3600033	0					
ANR	3600265	Identifier	pi		3600033	0					
ANR	3600266	IfStatement	if ( pi -> pid != pid )		3600033	6					
ANR	3600267	Condition	pi -> pid != pid	72:7:2449:2462	3600033	0	True				
ANR	3600268	EqualityExpression	pi -> pid != pid		3600033	0		!=			
ANR	3600269	PtrMemberAccess	pi -> pid		3600033	0					
ANR	3600270	Identifier	pi		3600033	0					
ANR	3600271	Identifier	pid		3600033	1					
ANR	3600272	Identifier	pid		3600033	1					
ANR	3600273	CompoundStatement		47:22:1378:1378	3600033	1					
ANR	3600274	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	73:6:2472:2506	3600033	0	True				
ANR	3600275	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600276	Callee	printf		3600033	0					
ANR	3600277	Identifier	printf		3600033	0					
ANR	3600278	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600279	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600280	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600281	Argument	pid		3600033	1					
ANR	3600282	Identifier	pid		3600033	0					
ANR	3600283	ExpressionStatement	"printf ( ""node pid %d, incorrect as returned in procInfo %d\\n"" , pid , pi -> pid )"	74:6:2514:2589	3600033	1	True				
ANR	3600284	CallExpression	"printf ( ""node pid %d, incorrect as returned in procInfo %d\\n"" , pid , pi -> pid )"		3600033	0					
ANR	3600285	Callee	printf		3600033	0					
ANR	3600286	Identifier	printf		3600033	0					
ANR	3600287	ArgumentList	"""node pid %d, incorrect as returned in procInfo %d\\n"""		3600033	1					
ANR	3600288	Argument	"""node pid %d, incorrect as returned in procInfo %d\\n"""		3600033	0					
ANR	3600289	PrimaryExpression	"""node pid %d, incorrect as returned in procInfo %d\\n"""		3600033	0					
ANR	3600290	Argument	pid		3600033	1					
ANR	3600291	Identifier	pid		3600033	0					
ANR	3600292	Argument	pi -> pid		3600033	2					
ANR	3600293	PtrMemberAccess	pi -> pid		3600033	0					
ANR	3600294	Identifier	pi		3600033	0					
ANR	3600295	Identifier	pid		3600033	1					
ANR	3600296	ExpressionStatement	success = - 1	75:6:2597:2609	3600033	2	True				
ANR	3600297	AssignmentExpression	success = - 1		3600033	0		=			
ANR	3600298	Identifier	success		3600033	0					
ANR	3600299	UnaryOperationExpression	- 1		3600033	1					
ANR	3600300	UnaryOperator	-		3600033	0					
ANR	3600301	PrimaryExpression	1		3600033	1					
ANR	3600302	IfStatement	if ( pi -> ppid != ppid )		3600033	7					
ANR	3600303	Condition	pi -> ppid != ppid	77:7:2627:2642	3600033	0	True				
ANR	3600304	EqualityExpression	pi -> ppid != ppid		3600033	0		!=			
ANR	3600305	PtrMemberAccess	pi -> ppid		3600033	0					
ANR	3600306	Identifier	pi		3600033	0					
ANR	3600307	Identifier	ppid		3600033	1					
ANR	3600308	Identifier	ppid		3600033	1					
ANR	3600309	CompoundStatement		52:24:1558:1558	3600033	1					
ANR	3600310	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	78:6:2652:2686	3600033	0	True				
ANR	3600311	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600312	Callee	printf		3600033	0					
ANR	3600313	Identifier	printf		3600033	0					
ANR	3600314	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600315	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600316	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600317	Argument	pid		3600033	1					
ANR	3600318	Identifier	pid		3600033	0					
ANR	3600319	ExpressionStatement	"printf ( ""node ppid %d, incorrect as returned in procInfo %d\\n"" , ppid , pi -> ppid )"	79:6:2694:2772	3600033	1	True				
ANR	3600320	CallExpression	"printf ( ""node ppid %d, incorrect as returned in procInfo %d\\n"" , ppid , pi -> ppid )"		3600033	0					
ANR	3600321	Callee	printf		3600033	0					
ANR	3600322	Identifier	printf		3600033	0					
ANR	3600323	ArgumentList	"""node ppid %d, incorrect as returned in procInfo %d\\n"""		3600033	1					
ANR	3600324	Argument	"""node ppid %d, incorrect as returned in procInfo %d\\n"""		3600033	0					
ANR	3600325	PrimaryExpression	"""node ppid %d, incorrect as returned in procInfo %d\\n"""		3600033	0					
ANR	3600326	Argument	ppid		3600033	1					
ANR	3600327	Identifier	ppid		3600033	0					
ANR	3600328	Argument	pi -> ppid		3600033	2					
ANR	3600329	PtrMemberAccess	pi -> ppid		3600033	0					
ANR	3600330	Identifier	pi		3600033	0					
ANR	3600331	Identifier	ppid		3600033	1					
ANR	3600332	ExpressionStatement	success = - 1	80:6:2780:2792	3600033	2	True				
ANR	3600333	AssignmentExpression	success = - 1		3600033	0		=			
ANR	3600334	Identifier	success		3600033	0					
ANR	3600335	UnaryOperationExpression	- 1		3600033	1					
ANR	3600336	UnaryOperator	-		3600033	0					
ANR	3600337	PrimaryExpression	1		3600033	1					
ANR	3600338	ExpressionStatement	"printf ( ""subtree depth%d\\n"" , pids [ i ] . subtree_depth )"	83:4:2805:2855	3600033	8	True				
ANR	3600339	CallExpression	"printf ( ""subtree depth%d\\n"" , pids [ i ] . subtree_depth )"		3600033	0					
ANR	3600340	Callee	printf		3600033	0					
ANR	3600341	Identifier	printf		3600033	0					
ANR	3600342	ArgumentList	"""subtree depth%d\\n"""		3600033	1					
ANR	3600343	Argument	"""subtree depth%d\\n"""		3600033	0					
ANR	3600344	PrimaryExpression	"""subtree depth%d\\n"""		3600033	0					
ANR	3600345	Argument	pids [ i ] . subtree_depth		3600033	1					
ANR	3600346	MemberAccess	pids [ i ] . subtree_depth		3600033	0					
ANR	3600347	ArrayIndexing	pids [ i ]		3600033	0					
ANR	3600348	Identifier	pids		3600033	0					
ANR	3600349	Identifier	i		3600033	1					
ANR	3600350	Identifier	subtree_depth		3600033	1					
ANR	3600351	IdentifierDeclStatement	"int rss = 1024 * get_approx_mem ( pids [ i ] . subtree_depth , FAMILY_INFO_BREADTH ) ;"	85:4:2880:2955	3600033	9	True				
ANR	3600352	IdentifierDecl	"rss = 1024 * get_approx_mem ( pids [ i ] . subtree_depth , FAMILY_INFO_BREADTH )"		3600033	0					
ANR	3600353	IdentifierDeclType	int		3600033	0					
ANR	3600354	Identifier	rss		3600033	1					
ANR	3600355	AssignmentExpression	"rss = 1024 * get_approx_mem ( pids [ i ] . subtree_depth , FAMILY_INFO_BREADTH )"		3600033	2		=			
ANR	3600356	Identifier	rss		3600033	0					
ANR	3600357	MultiplicativeExpression	"1024 * get_approx_mem ( pids [ i ] . subtree_depth , FAMILY_INFO_BREADTH )"		3600033	1		*			
ANR	3600358	PrimaryExpression	1024		3600033	0					
ANR	3600359	CallExpression	"get_approx_mem ( pids [ i ] . subtree_depth , FAMILY_INFO_BREADTH )"		3600033	1					
ANR	3600360	Callee	get_approx_mem		3600033	0					
ANR	3600361	Identifier	get_approx_mem		3600033	0					
ANR	3600362	ArgumentList	pids [ i ] . subtree_depth		3600033	1					
ANR	3600363	Argument	pids [ i ] . subtree_depth		3600033	0					
ANR	3600364	MemberAccess	pids [ i ] . subtree_depth		3600033	0					
ANR	3600365	ArrayIndexing	pids [ i ]		3600033	0					
ANR	3600366	Identifier	pids		3600033	0					
ANR	3600367	Identifier	i		3600033	1					
ANR	3600368	Identifier	subtree_depth		3600033	1					
ANR	3600369	Argument	FAMILY_INFO_BREADTH		3600033	1					
ANR	3600370	Identifier	FAMILY_INFO_BREADTH		3600033	0					
ANR	3600371	IfStatement	if ( pi -> rssize != 0 && pi -> rssize < rss )		3600033	10					
ANR	3600372	Condition	pi -> rssize != 0 && pi -> rssize < rss	86:7:2964:3052	3600033	0	True				
ANR	3600373	AndExpression	pi -> rssize != 0 && pi -> rssize < rss		3600033	0		&&			
ANR	3600374	EqualityExpression	pi -> rssize != 0		3600033	0		!=			
ANR	3600375	PtrMemberAccess	pi -> rssize		3600033	0					
ANR	3600376	Identifier	pi		3600033	0					
ANR	3600377	Identifier	rssize		3600033	1					
ANR	3600378	PrimaryExpression	0		3600033	1					
ANR	3600379	RelationalExpression	pi -> rssize < rss		3600033	1		<			
ANR	3600380	PtrMemberAccess	pi -> rssize		3600033	0					
ANR	3600381	Identifier	pi		3600033	0					
ANR	3600382	Identifier	rssize		3600033	1					
ANR	3600383	Identifier	rss		3600033	1					
ANR	3600384	CompoundStatement		62:24:1968:1968	3600033	1					
ANR	3600385	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	88:6:3062:3096	3600033	0	True				
ANR	3600386	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600387	Callee	printf		3600033	0					
ANR	3600388	Identifier	printf		3600033	0					
ANR	3600389	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600390	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600391	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600392	Argument	pid		3600033	1					
ANR	3600393	Identifier	pid		3600033	0					
ANR	3600394	ExpressionStatement	"printf ( ""rssize as returned by getFamilyInfo %d is less than was allocated %d\\n"" , pi -> rssize , rss )"	89:6:3104:3201	3600033	1	True				
ANR	3600395	CallExpression	"printf ( ""rssize as returned by getFamilyInfo %d is less than was allocated %d\\n"" , pi -> rssize , rss )"		3600033	0					
ANR	3600396	Callee	printf		3600033	0					
ANR	3600397	Identifier	printf		3600033	0					
ANR	3600398	ArgumentList	"""rssize as returned by getFamilyInfo %d is less than was allocated %d\\n"""		3600033	1					
ANR	3600399	Argument	"""rssize as returned by getFamilyInfo %d is less than was allocated %d\\n"""		3600033	0					
ANR	3600400	PrimaryExpression	"""rssize as returned by getFamilyInfo %d is less than was allocated %d\\n"""		3600033	0					
ANR	3600401	Argument	pi -> rssize		3600033	1					
ANR	3600402	PtrMemberAccess	pi -> rssize		3600033	0					
ANR	3600403	Identifier	pi		3600033	0					
ANR	3600404	Identifier	rssize		3600033	1					
ANR	3600405	Argument	rss		3600033	2					
ANR	3600406	Identifier	rss		3600033	0					
ANR	3600407	ExpressionStatement	success = - 1	90:6:3209:3221	3600033	2	True				
ANR	3600408	AssignmentExpression	success = - 1		3600033	0		=			
ANR	3600409	Identifier	success		3600033	0					
ANR	3600410	UnaryOperationExpression	- 1		3600033	1					
ANR	3600411	UnaryOperator	-		3600033	0					
ANR	3600412	PrimaryExpression	1		3600033	1					
ANR	3600413	IfStatement	if ( pi -> rssize > rss + rss * FAMILY_INFO_RSS_MARGIN )		3600033	11					
ANR	3600414	Condition	pi -> rssize > rss + rss * FAMILY_INFO_RSS_MARGIN	92:7:3236:3280	3600033	0	True				
ANR	3600415	RelationalExpression	pi -> rssize > rss + rss * FAMILY_INFO_RSS_MARGIN		3600033	0		>			
ANR	3600416	PtrMemberAccess	pi -> rssize		3600033	0					
ANR	3600417	Identifier	pi		3600033	0					
ANR	3600418	Identifier	rssize		3600033	1					
ANR	3600419	AdditiveExpression	rss + rss * FAMILY_INFO_RSS_MARGIN		3600033	1		+			
ANR	3600420	Identifier	rss		3600033	0					
ANR	3600421	MultiplicativeExpression	rss * FAMILY_INFO_RSS_MARGIN		3600033	1		*			
ANR	3600422	Identifier	rss		3600033	0					
ANR	3600423	Identifier	FAMILY_INFO_RSS_MARGIN		3600033	1					
ANR	3600424	CompoundStatement		67:53:2196:2196	3600033	1					
ANR	3600425	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	93:6:3290:3324	3600033	0	True				
ANR	3600426	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600427	Callee	printf		3600033	0					
ANR	3600428	Identifier	printf		3600033	0					
ANR	3600429	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600430	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600431	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600432	Argument	pid		3600033	1					
ANR	3600433	Identifier	pid		3600033	0					
ANR	3600434	ExpressionStatement	"printf ( ""rssize as returned by getFamilyInfo %d is much larger than was allocated %d\\n"" , pi -> rssize , rss )"	94:6:3332:3436	3600033	1	True				
ANR	3600435	CallExpression	"printf ( ""rssize as returned by getFamilyInfo %d is much larger than was allocated %d\\n"" , pi -> rssize , rss )"		3600033	0					
ANR	3600436	Callee	printf		3600033	0					
ANR	3600437	Identifier	printf		3600033	0					
ANR	3600438	ArgumentList	"""rssize as returned by getFamilyInfo %d is much larger than was allocated %d\\n"""		3600033	1					
ANR	3600439	Argument	"""rssize as returned by getFamilyInfo %d is much larger than was allocated %d\\n"""		3600033	0					
ANR	3600440	PrimaryExpression	"""rssize as returned by getFamilyInfo %d is much larger than was allocated %d\\n"""		3600033	0					
ANR	3600441	Argument	pi -> rssize		3600033	1					
ANR	3600442	PtrMemberAccess	pi -> rssize		3600033	0					
ANR	3600443	Identifier	pi		3600033	0					
ANR	3600444	Identifier	rssize		3600033	1					
ANR	3600445	Argument	rss		3600033	2					
ANR	3600446	Identifier	rss		3600033	0					
ANR	3600447	ExpressionStatement	success = - 1	95:6:3444:3456	3600033	2	True				
ANR	3600448	AssignmentExpression	success = - 1		3600033	0		=			
ANR	3600449	Identifier	success		3600033	0					
ANR	3600450	UnaryOperationExpression	- 1		3600033	1					
ANR	3600451	UnaryOperator	-		3600033	0					
ANR	3600452	PrimaryExpression	1		3600033	1					
ANR	3600453	IfStatement	if ( pi -> rssize > pi -> imgsize )		3600033	12					
ANR	3600454	Condition	pi -> rssize > pi -> imgsize	99:7:3539:3562	3600033	0	True				
ANR	3600455	RelationalExpression	pi -> rssize > pi -> imgsize		3600033	0		>			
ANR	3600456	PtrMemberAccess	pi -> rssize		3600033	0					
ANR	3600457	Identifier	pi		3600033	0					
ANR	3600458	Identifier	rssize		3600033	1					
ANR	3600459	PtrMemberAccess	pi -> imgsize		3600033	1					
ANR	3600460	Identifier	pi		3600033	0					
ANR	3600461	Identifier	imgsize		3600033	1					
ANR	3600462	CompoundStatement		74:32:2478:2478	3600033	1					
ANR	3600463	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	100:6:3572:3606	3600033	0	True				
ANR	3600464	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600465	Callee	printf		3600033	0					
ANR	3600466	Identifier	printf		3600033	0					
ANR	3600467	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600468	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600469	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600470	Argument	pid		3600033	1					
ANR	3600471	Identifier	pid		3600033	0					
ANR	3600472	ExpressionStatement	"printf ( ""imgsize %d as returned by getFamilyInfo is less than rssize %d\\n"" , pi -> imgsize , pi -> rssize )"	101:6:3614:3713	3600033	1	True				
ANR	3600473	CallExpression	"printf ( ""imgsize %d as returned by getFamilyInfo is less than rssize %d\\n"" , pi -> imgsize , pi -> rssize )"		3600033	0					
ANR	3600474	Callee	printf		3600033	0					
ANR	3600475	Identifier	printf		3600033	0					
ANR	3600476	ArgumentList	"""imgsize %d as returned by getFamilyInfo is less than rssize %d\\n"""		3600033	1					
ANR	3600477	Argument	"""imgsize %d as returned by getFamilyInfo is less than rssize %d\\n"""		3600033	0					
ANR	3600478	PrimaryExpression	"""imgsize %d as returned by getFamilyInfo is less than rssize %d\\n"""		3600033	0					
ANR	3600479	Argument	pi -> imgsize		3600033	1					
ANR	3600480	PtrMemberAccess	pi -> imgsize		3600033	0					
ANR	3600481	Identifier	pi		3600033	0					
ANR	3600482	Identifier	imgsize		3600033	1					
ANR	3600483	Argument	pi -> rssize		3600033	2					
ANR	3600484	PtrMemberAccess	pi -> rssize		3600033	0					
ANR	3600485	Identifier	pi		3600033	0					
ANR	3600486	Identifier	rssize		3600033	1					
ANR	3600487	ExpressionStatement	success = - 1	102:6:3721:3733	3600033	2	True				
ANR	3600488	AssignmentExpression	success = - 1		3600033	0		=			
ANR	3600489	Identifier	success		3600033	0					
ANR	3600490	UnaryOperationExpression	- 1		3600033	1					
ANR	3600491	UnaryOperator	-		3600033	0					
ANR	3600492	PrimaryExpression	1		3600033	1					
ANR	3600493	IfStatement	if ( pi -> pssize_available && pi -> pssize > pi -> imgsize )		3600033	13					
ANR	3600494	Condition	pi -> pssize_available && pi -> pssize > pi -> imgsize	107:5:3819:3866	3600033	0	True				
ANR	3600495	AndExpression	pi -> pssize_available && pi -> pssize > pi -> imgsize		3600033	0		&&			
ANR	3600496	PtrMemberAccess	pi -> pssize_available		3600033	0					
ANR	3600497	Identifier	pi		3600033	0					
ANR	3600498	Identifier	pssize_available		3600033	1					
ANR	3600499	RelationalExpression	pi -> pssize > pi -> imgsize		3600033	1		>			
ANR	3600500	PtrMemberAccess	pi -> pssize		3600033	0					
ANR	3600501	Identifier	pi		3600033	0					
ANR	3600502	Identifier	pssize		3600033	1					
ANR	3600503	PtrMemberAccess	pi -> imgsize		3600033	1					
ANR	3600504	Identifier	pi		3600033	0					
ANR	3600505	Identifier	imgsize		3600033	1					
ANR	3600506	CompoundStatement		82:56:2784:2784	3600033	1					
ANR	3600507	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	108:6:3878:3912	3600033	0	True				
ANR	3600508	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600509	Callee	printf		3600033	0					
ANR	3600510	Identifier	printf		3600033	0					
ANR	3600511	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600512	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600513	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600514	Argument	pid		3600033	1					
ANR	3600515	Identifier	pid		3600033	0					
ANR	3600516	ExpressionStatement	"printf ( ""imgsize %d as returned by getFamilyInfo is less than pssize %d\\n"" , pi -> imgsize , pi -> pssize )"	109:6:3920:4019	3600033	1	True				
ANR	3600517	CallExpression	"printf ( ""imgsize %d as returned by getFamilyInfo is less than pssize %d\\n"" , pi -> imgsize , pi -> pssize )"		3600033	0					
ANR	3600518	Callee	printf		3600033	0					
ANR	3600519	Identifier	printf		3600033	0					
ANR	3600520	ArgumentList	"""imgsize %d as returned by getFamilyInfo is less than pssize %d\\n"""		3600033	1					
ANR	3600521	Argument	"""imgsize %d as returned by getFamilyInfo is less than pssize %d\\n"""		3600033	0					
ANR	3600522	PrimaryExpression	"""imgsize %d as returned by getFamilyInfo is less than pssize %d\\n"""		3600033	0					
ANR	3600523	Argument	pi -> imgsize		3600033	1					
ANR	3600524	PtrMemberAccess	pi -> imgsize		3600033	0					
ANR	3600525	Identifier	pi		3600033	0					
ANR	3600526	Identifier	imgsize		3600033	1					
ANR	3600527	Argument	pi -> pssize		3600033	2					
ANR	3600528	PtrMemberAccess	pi -> pssize		3600033	0					
ANR	3600529	Identifier	pi		3600033	0					
ANR	3600530	Identifier	pssize		3600033	1					
ANR	3600531	ExpressionStatement	success = - 1	110:6:4027:4039	3600033	2	True				
ANR	3600532	AssignmentExpression	success = - 1		3600033	0		=			
ANR	3600533	Identifier	success		3600033	0					
ANR	3600534	UnaryOperationExpression	- 1		3600033	1					
ANR	3600535	UnaryOperator	-		3600033	0					
ANR	3600536	PrimaryExpression	1		3600033	1					
ANR	3600537	IfStatement	"if ( ProcAPI :: getFamilyInfo ( ppid , ppi , & penvid , status ) == PROCAPI_FAILURE )"		3600033	14					
ANR	3600538	Condition	"ProcAPI :: getFamilyInfo ( ppid , ppi , & penvid , status ) == PROCAPI_FAILURE"	115:7:4115:4183	3600033	0	True				
ANR	3600539	EqualityExpression	"ProcAPI :: getFamilyInfo ( ppid , ppi , & penvid , status ) == PROCAPI_FAILURE"		3600033	0		==			
ANR	3600540	CallExpression	"ProcAPI :: getFamilyInfo ( ppid , ppi , & penvid , status )"		3600033	0					
ANR	3600541	Callee	ProcAPI :: getFamilyInfo		3600033	0					
ANR	3600542	Identifier	ProcAPI :: getFamilyInfo		3600033	0					
ANR	3600543	ArgumentList	ppid		3600033	1					
ANR	3600544	Argument	ppid		3600033	0					
ANR	3600545	Identifier	ppid		3600033	0					
ANR	3600546	Argument	ppi		3600033	1					
ANR	3600547	Identifier	ppi		3600033	0					
ANR	3600548	Argument	& penvid		3600033	2					
ANR	3600549	UnaryOperationExpression	& penvid		3600033	0					
ANR	3600550	UnaryOperator	&		3600033	0					
ANR	3600551	Identifier	penvid		3600033	1					
ANR	3600552	Argument	status		3600033	3					
ANR	3600553	Identifier	status		3600033	0					
ANR	3600554	Identifier	PROCAPI_FAILURE		3600033	1					
ANR	3600555	CompoundStatement		90:78:3100:3100	3600033	1					
ANR	3600556	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	116:6:4194:4228	3600033	0	True				
ANR	3600557	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600558	Callee	printf		3600033	0					
ANR	3600559	Identifier	printf		3600033	0					
ANR	3600560	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600561	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600562	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600563	Argument	pid		3600033	1					
ANR	3600564	Identifier	pid		3600033	0					
ANR	3600565	ExpressionStatement	"printf ( ""Unable to retrieve parent process %d information with getFamilyInfo\\n"" , ppid )"	117:6:4236:4321	3600033	1	True				
ANR	3600566	CallExpression	"printf ( ""Unable to retrieve parent process %d information with getFamilyInfo\\n"" , ppid )"		3600033	0					
ANR	3600567	Callee	printf		3600033	0					
ANR	3600568	Identifier	printf		3600033	0					
ANR	3600569	ArgumentList	"""Unable to retrieve parent process %d information with getFamilyInfo\\n"""		3600033	1					
ANR	3600570	Argument	"""Unable to retrieve parent process %d information with getFamilyInfo\\n"""		3600033	0					
ANR	3600571	PrimaryExpression	"""Unable to retrieve parent process %d information with getFamilyInfo\\n"""		3600033	0					
ANR	3600572	Argument	ppid		3600033	1					
ANR	3600573	Identifier	ppid		3600033	0					
ANR	3600574	ExpressionStatement	success = - 1	118:6:4329:4341	3600033	2	True				
ANR	3600575	AssignmentExpression	success = - 1		3600033	0		=			
ANR	3600576	Identifier	success		3600033	0					
ANR	3600577	UnaryOperationExpression	- 1		3600033	1					
ANR	3600578	UnaryOperator	-		3600033	0					
ANR	3600579	PrimaryExpression	1		3600033	1					
ANR	3600580	IfStatement	if ( pi -> rssize > ppi -> rssize )		3600033	15					
ANR	3600581	Condition	pi -> rssize > ppi -> rssize	122:7:4436:4459	3600033	0	True				
ANR	3600582	RelationalExpression	pi -> rssize > ppi -> rssize		3600033	0		>			
ANR	3600583	PtrMemberAccess	pi -> rssize		3600033	0					
ANR	3600584	Identifier	pi		3600033	0					
ANR	3600585	Identifier	rssize		3600033	1					
ANR	3600586	PtrMemberAccess	ppi -> rssize		3600033	1					
ANR	3600587	Identifier	ppi		3600033	0					
ANR	3600588	Identifier	rssize		3600033	1					
ANR	3600589	CompoundStatement		97:32:3375:3375	3600033	1					
ANR	3600590	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	123:6:4469:4503	3600033	0	True				
ANR	3600591	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600592	Callee	printf		3600033	0					
ANR	3600593	Identifier	printf		3600033	0					
ANR	3600594	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600595	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600596	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600597	Argument	pid		3600033	1					
ANR	3600598	Identifier	pid		3600033	0					
ANR	3600599	ExpressionStatement	"printf ( ""parent family rssize %d is smaller than childs %d\\n"" , ppi -> rssize , pi -> rssize )"	124:6:4511:4597	3600033	1	True				
ANR	3600600	CallExpression	"printf ( ""parent family rssize %d is smaller than childs %d\\n"" , ppi -> rssize , pi -> rssize )"		3600033	0					
ANR	3600601	Callee	printf		3600033	0					
ANR	3600602	Identifier	printf		3600033	0					
ANR	3600603	ArgumentList	"""parent family rssize %d is smaller than childs %d\\n"""		3600033	1					
ANR	3600604	Argument	"""parent family rssize %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600605	PrimaryExpression	"""parent family rssize %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600606	Argument	ppi -> rssize		3600033	1					
ANR	3600607	PtrMemberAccess	ppi -> rssize		3600033	0					
ANR	3600608	Identifier	ppi		3600033	0					
ANR	3600609	Identifier	rssize		3600033	1					
ANR	3600610	Argument	pi -> rssize		3600033	2					
ANR	3600611	PtrMemberAccess	pi -> rssize		3600033	0					
ANR	3600612	Identifier	pi		3600033	0					
ANR	3600613	Identifier	rssize		3600033	1					
ANR	3600614	IfStatement	if ( pi -> imgsize > ppi -> imgsize )		3600033	16					
ANR	3600615	Condition	pi -> imgsize > ppi -> imgsize	127:7:4634:4659	3600033	0	True				
ANR	3600616	RelationalExpression	pi -> imgsize > ppi -> imgsize		3600033	0		>			
ANR	3600617	PtrMemberAccess	pi -> imgsize		3600033	0					
ANR	3600618	Identifier	pi		3600033	0					
ANR	3600619	Identifier	imgsize		3600033	1					
ANR	3600620	PtrMemberAccess	ppi -> imgsize		3600033	1					
ANR	3600621	Identifier	ppi		3600033	0					
ANR	3600622	Identifier	imgsize		3600033	1					
ANR	3600623	CompoundStatement		102:34:3575:3575	3600033	1					
ANR	3600624	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	128:6:4669:4703	3600033	0	True				
ANR	3600625	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600626	Callee	printf		3600033	0					
ANR	3600627	Identifier	printf		3600033	0					
ANR	3600628	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600629	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600630	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600631	Argument	pid		3600033	1					
ANR	3600632	Identifier	pid		3600033	0					
ANR	3600633	ExpressionStatement	"printf ( ""parent family imgsize %d is smaller than childs %d\\n"" , ppi -> imgsize , pi -> imgsize )"	129:6:4711:4800	3600033	1	True				
ANR	3600634	CallExpression	"printf ( ""parent family imgsize %d is smaller than childs %d\\n"" , ppi -> imgsize , pi -> imgsize )"		3600033	0					
ANR	3600635	Callee	printf		3600033	0					
ANR	3600636	Identifier	printf		3600033	0					
ANR	3600637	ArgumentList	"""parent family imgsize %d is smaller than childs %d\\n"""		3600033	1					
ANR	3600638	Argument	"""parent family imgsize %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600639	PrimaryExpression	"""parent family imgsize %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600640	Argument	ppi -> imgsize		3600033	1					
ANR	3600641	PtrMemberAccess	ppi -> imgsize		3600033	0					
ANR	3600642	Identifier	ppi		3600033	0					
ANR	3600643	Identifier	imgsize		3600033	1					
ANR	3600644	Argument	pi -> imgsize		3600033	2					
ANR	3600645	PtrMemberAccess	pi -> imgsize		3600033	0					
ANR	3600646	Identifier	pi		3600033	0					
ANR	3600647	Identifier	imgsize		3600033	1					
ANR	3600648	IfStatement	if ( pi -> pssize_available && ppi -> pssize_available && pi -> pssize > ppi -> pssize )		3600033	17					
ANR	3600649	Condition	pi -> pssize_available && ppi -> pssize_available && pi -> pssize > ppi -> pssize	133:7:4851:4923	3600033	0	True				
ANR	3600650	AndExpression	pi -> pssize_available && ppi -> pssize_available && pi -> pssize > ppi -> pssize		3600033	0		&&			
ANR	3600651	PtrMemberAccess	pi -> pssize_available		3600033	0					
ANR	3600652	Identifier	pi		3600033	0					
ANR	3600653	Identifier	pssize_available		3600033	1					
ANR	3600654	AndExpression	ppi -> pssize_available && pi -> pssize > ppi -> pssize		3600033	1		&&			
ANR	3600655	PtrMemberAccess	ppi -> pssize_available		3600033	0					
ANR	3600656	Identifier	ppi		3600033	0					
ANR	3600657	Identifier	pssize_available		3600033	1					
ANR	3600658	RelationalExpression	pi -> pssize > ppi -> pssize		3600033	1		>			
ANR	3600659	PtrMemberAccess	pi -> pssize		3600033	0					
ANR	3600660	Identifier	pi		3600033	0					
ANR	3600661	Identifier	pssize		3600033	1					
ANR	3600662	PtrMemberAccess	ppi -> pssize		3600033	1					
ANR	3600663	Identifier	ppi		3600033	0					
ANR	3600664	Identifier	pssize		3600033	1					
ANR	3600665	CompoundStatement		108:81:3839:3839	3600033	1					
ANR	3600666	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	134:6:4933:4967	3600033	0	True				
ANR	3600667	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600668	Callee	printf		3600033	0					
ANR	3600669	Identifier	printf		3600033	0					
ANR	3600670	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600671	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600672	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600673	Argument	pid		3600033	1					
ANR	3600674	Identifier	pid		3600033	0					
ANR	3600675	ExpressionStatement	"printf ( ""parent family pssize %d is smaller than childs %d\\n"" , ppi -> pssize , pi -> pssize )"	135:6:4975:5061	3600033	1	True				
ANR	3600676	CallExpression	"printf ( ""parent family pssize %d is smaller than childs %d\\n"" , ppi -> pssize , pi -> pssize )"		3600033	0					
ANR	3600677	Callee	printf		3600033	0					
ANR	3600678	Identifier	printf		3600033	0					
ANR	3600679	ArgumentList	"""parent family pssize %d is smaller than childs %d\\n"""		3600033	1					
ANR	3600680	Argument	"""parent family pssize %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600681	PrimaryExpression	"""parent family pssize %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600682	Argument	ppi -> pssize		3600033	1					
ANR	3600683	PtrMemberAccess	ppi -> pssize		3600033	0					
ANR	3600684	Identifier	ppi		3600033	0					
ANR	3600685	Identifier	pssize		3600033	1					
ANR	3600686	Argument	pi -> pssize		3600033	2					
ANR	3600687	PtrMemberAccess	pi -> pssize		3600033	0					
ANR	3600688	Identifier	pi		3600033	0					
ANR	3600689	Identifier	pssize		3600033	1					
ANR	3600690	IfStatement	if ( pi -> age > ppi -> age )		3600033	18					
ANR	3600691	Condition	pi -> age > ppi -> age	139:7:5098:5115	3600033	0	True				
ANR	3600692	RelationalExpression	pi -> age > ppi -> age		3600033	0		>			
ANR	3600693	PtrMemberAccess	pi -> age		3600033	0					
ANR	3600694	Identifier	pi		3600033	0					
ANR	3600695	Identifier	age		3600033	1					
ANR	3600696	PtrMemberAccess	ppi -> age		3600033	1					
ANR	3600697	Identifier	ppi		3600033	0					
ANR	3600698	Identifier	age		3600033	1					
ANR	3600699	CompoundStatement		114:26:4031:4031	3600033	1					
ANR	3600700	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	140:6:5125:5159	3600033	0	True				
ANR	3600701	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600702	Callee	printf		3600033	0					
ANR	3600703	Identifier	printf		3600033	0					
ANR	3600704	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600705	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600706	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600707	Argument	pid		3600033	1					
ANR	3600708	Identifier	pid		3600033	0					
ANR	3600709	ExpressionStatement	"printf ( ""parent family age %d is smaller than childs %d\\n"" , ppi -> age , pi -> age )"	141:6:5167:5244	3600033	1	True				
ANR	3600710	CallExpression	"printf ( ""parent family age %d is smaller than childs %d\\n"" , ppi -> age , pi -> age )"		3600033	0					
ANR	3600711	Callee	printf		3600033	0					
ANR	3600712	Identifier	printf		3600033	0					
ANR	3600713	ArgumentList	"""parent family age %d is smaller than childs %d\\n"""		3600033	1					
ANR	3600714	Argument	"""parent family age %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600715	PrimaryExpression	"""parent family age %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600716	Argument	ppi -> age		3600033	1					
ANR	3600717	PtrMemberAccess	ppi -> age		3600033	0					
ANR	3600718	Identifier	ppi		3600033	0					
ANR	3600719	Identifier	age		3600033	1					
ANR	3600720	Argument	pi -> age		3600033	2					
ANR	3600721	PtrMemberAccess	pi -> age		3600033	0					
ANR	3600722	Identifier	pi		3600033	0					
ANR	3600723	Identifier	age		3600033	1					
ANR	3600724	IfStatement	if ( pi -> user_time > ppi -> user_time )		3600033	19					
ANR	3600725	Condition	pi -> user_time > ppi -> user_time	144:7:5292:5321	3600033	0	True				
ANR	3600726	RelationalExpression	pi -> user_time > ppi -> user_time		3600033	0		>			
ANR	3600727	PtrMemberAccess	pi -> user_time		3600033	0					
ANR	3600728	Identifier	pi		3600033	0					
ANR	3600729	Identifier	user_time		3600033	1					
ANR	3600730	PtrMemberAccess	ppi -> user_time		3600033	1					
ANR	3600731	Identifier	ppi		3600033	0					
ANR	3600732	Identifier	user_time		3600033	1					
ANR	3600733	CompoundStatement		119:38:4237:4237	3600033	1					
ANR	3600734	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	145:6:5331:5365	3600033	0	True				
ANR	3600735	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600736	Callee	printf		3600033	0					
ANR	3600737	Identifier	printf		3600033	0					
ANR	3600738	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600739	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600740	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600741	Argument	pid		3600033	1					
ANR	3600742	Identifier	pid		3600033	0					
ANR	3600743	ExpressionStatement	"printf ( ""parent user time %d is smaller than childs %d\\n"" , ppi -> user_time , pi -> user_time )"	146:6:5373:5461	3600033	1	True				
ANR	3600744	CallExpression	"printf ( ""parent user time %d is smaller than childs %d\\n"" , ppi -> user_time , pi -> user_time )"		3600033	0					
ANR	3600745	Callee	printf		3600033	0					
ANR	3600746	Identifier	printf		3600033	0					
ANR	3600747	ArgumentList	"""parent user time %d is smaller than childs %d\\n"""		3600033	1					
ANR	3600748	Argument	"""parent user time %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600749	PrimaryExpression	"""parent user time %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600750	Argument	ppi -> user_time		3600033	1					
ANR	3600751	PtrMemberAccess	ppi -> user_time		3600033	0					
ANR	3600752	Identifier	ppi		3600033	0					
ANR	3600753	Identifier	user_time		3600033	1					
ANR	3600754	Argument	pi -> user_time		3600033	2					
ANR	3600755	PtrMemberAccess	pi -> user_time		3600033	0					
ANR	3600756	Identifier	pi		3600033	0					
ANR	3600757	Identifier	user_time		3600033	1					
ANR	3600758	IfStatement	if ( pi -> sys_time > ppi -> sys_time )		3600033	20					
ANR	3600759	Condition	pi -> sys_time > ppi -> sys_time	148:7:5477:5504	3600033	0	True				
ANR	3600760	RelationalExpression	pi -> sys_time > ppi -> sys_time		3600033	0		>			
ANR	3600761	PtrMemberAccess	pi -> sys_time		3600033	0					
ANR	3600762	Identifier	pi		3600033	0					
ANR	3600763	Identifier	sys_time		3600033	1					
ANR	3600764	PtrMemberAccess	ppi -> sys_time		3600033	1					
ANR	3600765	Identifier	ppi		3600033	0					
ANR	3600766	Identifier	sys_time		3600033	1					
ANR	3600767	CompoundStatement		123:36:4420:4420	3600033	1					
ANR	3600768	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	149:6:5514:5548	3600033	0	True				
ANR	3600769	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600770	Callee	printf		3600033	0					
ANR	3600771	Identifier	printf		3600033	0					
ANR	3600772	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600773	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600774	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600775	Argument	pid		3600033	1					
ANR	3600776	Identifier	pid		3600033	0					
ANR	3600777	ExpressionStatement	"printf ( ""parent sys time %d is smaller than childs %d\\n"" , ppi -> sys_time , pi -> sys_time )"	150:6:5556:5641	3600033	1	True				
ANR	3600778	CallExpression	"printf ( ""parent sys time %d is smaller than childs %d\\n"" , ppi -> sys_time , pi -> sys_time )"		3600033	0					
ANR	3600779	Callee	printf		3600033	0					
ANR	3600780	Identifier	printf		3600033	0					
ANR	3600781	ArgumentList	"""parent sys time %d is smaller than childs %d\\n"""		3600033	1					
ANR	3600782	Argument	"""parent sys time %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600783	PrimaryExpression	"""parent sys time %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600784	Argument	ppi -> sys_time		3600033	1					
ANR	3600785	PtrMemberAccess	ppi -> sys_time		3600033	0					
ANR	3600786	Identifier	ppi		3600033	0					
ANR	3600787	Identifier	sys_time		3600033	1					
ANR	3600788	Argument	pi -> sys_time		3600033	2					
ANR	3600789	PtrMemberAccess	pi -> sys_time		3600033	0					
ANR	3600790	Identifier	pi		3600033	0					
ANR	3600791	Identifier	sys_time		3600033	1					
ANR	3600792	IfStatement	if ( pi -> minfault > ppi -> minfault )		3600033	21					
ANR	3600793	Condition	pi -> minfault > ppi -> minfault	153:7:5675:5702	3600033	0	True				
ANR	3600794	RelationalExpression	pi -> minfault > ppi -> minfault		3600033	0		>			
ANR	3600795	PtrMemberAccess	pi -> minfault		3600033	0					
ANR	3600796	Identifier	pi		3600033	0					
ANR	3600797	Identifier	minfault		3600033	1					
ANR	3600798	PtrMemberAccess	ppi -> minfault		3600033	1					
ANR	3600799	Identifier	ppi		3600033	0					
ANR	3600800	Identifier	minfault		3600033	1					
ANR	3600801	CompoundStatement		128:36:4618:4618	3600033	1					
ANR	3600802	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	154:6:5712:5746	3600033	0	True				
ANR	3600803	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600804	Callee	printf		3600033	0					
ANR	3600805	Identifier	printf		3600033	0					
ANR	3600806	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600807	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600808	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600809	Argument	pid		3600033	1					
ANR	3600810	Identifier	pid		3600033	0					
ANR	3600811	ExpressionStatement	"printf ( ""parent min faults %d is smaller than childs %d\\n"" , ppi -> minfault , pi -> minfault )"	155:6:5754:5840	3600033	1	True				
ANR	3600812	CallExpression	"printf ( ""parent min faults %d is smaller than childs %d\\n"" , ppi -> minfault , pi -> minfault )"		3600033	0					
ANR	3600813	Callee	printf		3600033	0					
ANR	3600814	Identifier	printf		3600033	0					
ANR	3600815	ArgumentList	"""parent min faults %d is smaller than childs %d\\n"""		3600033	1					
ANR	3600816	Argument	"""parent min faults %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600817	PrimaryExpression	"""parent min faults %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600818	Argument	ppi -> minfault		3600033	1					
ANR	3600819	PtrMemberAccess	ppi -> minfault		3600033	0					
ANR	3600820	Identifier	ppi		3600033	0					
ANR	3600821	Identifier	minfault		3600033	1					
ANR	3600822	Argument	pi -> minfault		3600033	2					
ANR	3600823	PtrMemberAccess	pi -> minfault		3600033	0					
ANR	3600824	Identifier	pi		3600033	0					
ANR	3600825	Identifier	minfault		3600033	1					
ANR	3600826	IfStatement	if ( pi -> majfault > ppi -> minfault )		3600033	22					
ANR	3600827	Condition	pi -> majfault > ppi -> minfault	157:7:5856:5883	3600033	0	True				
ANR	3600828	RelationalExpression	pi -> majfault > ppi -> minfault		3600033	0		>			
ANR	3600829	PtrMemberAccess	pi -> majfault		3600033	0					
ANR	3600830	Identifier	pi		3600033	0					
ANR	3600831	Identifier	majfault		3600033	1					
ANR	3600832	PtrMemberAccess	ppi -> minfault		3600033	1					
ANR	3600833	Identifier	ppi		3600033	0					
ANR	3600834	Identifier	minfault		3600033	1					
ANR	3600835	CompoundStatement		132:36:4799:4799	3600033	1					
ANR	3600836	ExpressionStatement	"printf ( ""Error process %d:\\n"" , pid )"	158:6:5893:5927	3600033	0	True				
ANR	3600837	CallExpression	"printf ( ""Error process %d:\\n"" , pid )"		3600033	0					
ANR	3600838	Callee	printf		3600033	0					
ANR	3600839	Identifier	printf		3600033	0					
ANR	3600840	ArgumentList	"""Error process %d:\\n"""		3600033	1					
ANR	3600841	Argument	"""Error process %d:\\n"""		3600033	0					
ANR	3600842	PrimaryExpression	"""Error process %d:\\n"""		3600033	0					
ANR	3600843	Argument	pid		3600033	1					
ANR	3600844	Identifier	pid		3600033	0					
ANR	3600845	ExpressionStatement	"printf ( ""parent maj faults %d is smaller than childs %d\\n"" , ppi -> majfault , pi -> majfault )"	159:6:5935:6021	3600033	1	True				
ANR	3600846	CallExpression	"printf ( ""parent maj faults %d is smaller than childs %d\\n"" , ppi -> majfault , pi -> majfault )"		3600033	0					
ANR	3600847	Callee	printf		3600033	0					
ANR	3600848	Identifier	printf		3600033	0					
ANR	3600849	ArgumentList	"""parent maj faults %d is smaller than childs %d\\n"""		3600033	1					
ANR	3600850	Argument	"""parent maj faults %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600851	PrimaryExpression	"""parent maj faults %d is smaller than childs %d\\n"""		3600033	0					
ANR	3600852	Argument	ppi -> majfault		3600033	1					
ANR	3600853	PtrMemberAccess	ppi -> majfault		3600033	0					
ANR	3600854	Identifier	ppi		3600033	0					
ANR	3600855	Identifier	majfault		3600033	1					
ANR	3600856	Argument	pi -> majfault		3600033	2					
ANR	3600857	PtrMemberAccess	pi -> majfault		3600033	0					
ANR	3600858	Identifier	pi		3600033	0					
ANR	3600859	Identifier	majfault		3600033	1					
ANR	3600860	Statement	delete	162:4:6035:6040	3600033	23	True				
ANR	3600861	ExpressionStatement	pi	162:11:6042:6044	3600033	24	True				
ANR	3600862	Identifier	pi		3600033	0					
ANR	3600863	Statement	delete	163:4:6050:6055	3600033	25	True				
ANR	3600864	ExpressionStatement	ppi	163:11:6057:6060	3600033	26	True				
ANR	3600865	Identifier	ppi		3600033	0					
ANR	3600866	ExpressionStatement	"end_tree ( pids , num_nodes )"	167:2:6071:6096	3600033	10	True				
ANR	3600867	CallExpression	"end_tree ( pids , num_nodes )"		3600033	0					
ANR	3600868	Callee	end_tree		3600033	0					
ANR	3600869	Identifier	end_tree		3600033	0					
ANR	3600870	ArgumentList	pids		3600033	1					
ANR	3600871	Argument	pids		3600033	0					
ANR	3600872	Identifier	pids		3600033	0					
ANR	3600873	Argument	num_nodes		3600033	1					
ANR	3600874	Identifier	num_nodes		3600033	0					
ANR	3600875	ReturnStatement	return success ;	169:2:6105:6119	3600033	11	True				
ANR	3600876	Identifier	success		3600033	0					
ANR	3600877	ReturnType	int		3600033	1					
ANR	3600878	Identifier	getFamilyInfo_test		3600033	2					
ANR	3600879	ParameterList	bool verbose		3600033	3					
ANR	3600880	Parameter	bool verbose	26:23:1071:1082	3600033	0	True				
ANR	3600881	ParameterType	bool		3600033	0					
ANR	3600882	Identifier	verbose		3600033	1					
ANR	3600883	CFGEntryNode	ENTRY		3600033		True				
ANR	3600884	CFGExitNode	EXIT		3600033		True				
ANR	3600885	Symbol	pi -> user_time		3600033						
ANR	3600886	Symbol	& penvid		3600033						
ANR	3600887	Symbol	pids [ i ] . pid		3600033						
ANR	3600888	Symbol	pid		3600033						
ANR	3600889	Symbol	num_nodes		3600033						
ANR	3600890	Symbol	fork_tree		3600033						
ANR	3600891	Symbol	ProcAPI :: getFamilyInfo		3600033						
ANR	3600892	Symbol	* ppi		3600033						
ANR	3600893	Symbol	pi -> pssize_available		3600033						
ANR	3600894	Symbol	pi -> ppid		3600033						
ANR	3600895	Symbol	NULL		3600033						
ANR	3600896	Symbol	PROCAPI_FAILURE		3600033						
ANR	3600897	Symbol	FAMILY_INFO_DEPTH		3600033						
ANR	3600898	Symbol	FAMILY_INFO_RSS_MARGIN		3600033						
ANR	3600899	Symbol	ppi -> majfault		3600033						
ANR	3600900	Symbol	pi -> minfault		3600033						
ANR	3600901	Symbol	ppid		3600033						
ANR	3600902	Symbol	pi -> rssize		3600033						
ANR	3600903	Symbol	success		3600033						
ANR	3600904	Symbol	penvid		3600033						
ANR	3600905	Symbol	ppi -> minfault		3600033						
ANR	3600906	Symbol	pi -> majfault		3600033						
ANR	3600907	Symbol	* pi		3600033						
ANR	3600908	Symbol	child		3600033						
ANR	3600909	Symbol	status		3600033						
ANR	3600910	Symbol	pi -> age		3600033						
ANR	3600911	Symbol	pids [ i ] . depth		3600033						
ANR	3600912	Symbol	FAMILY_INFO_BREADTH		3600033						
ANR	3600913	Symbol	pi -> sys_time		3600033						
ANR	3600914	Symbol	rss		3600033						
ANR	3600915	Symbol	ppi -> imgsize		3600033						
ANR	3600916	Symbol	pids [ i ] . ppid		3600033						
ANR	3600917	Symbol	pi -> pssize		3600033						
ANR	3600918	Symbol	ppi -> user_time		3600033						
ANR	3600919	Symbol	ppi -> pssize		3600033						
ANR	3600920	Symbol	* pids		3600033						
ANR	3600921	Symbol	ppi -> age		3600033						
ANR	3600922	Symbol	ppi		3600033						
ANR	3600923	Symbol	get_num_nodes		3600033						
ANR	3600924	Symbol	i		3600033						
ANR	3600925	Symbol	pi -> imgsize		3600033						
ANR	3600926	Symbol	ppi -> rssize		3600033						
ANR	3600927	Symbol	verbose		3600033						
ANR	3600928	Symbol	ppi -> pssize_available		3600033						
ANR	3600929	Symbol	get_approx_mem		3600033						
ANR	3600930	Symbol	* i		3600033						
ANR	3600931	Symbol	pi -> pid		3600033						
ANR	3600932	Symbol	pids [ i ] . subtree_depth		3600033						
ANR	3600933	Symbol	pi		3600033						
ANR	3600934	Symbol	pids		3600033						
ANR	3600935	Symbol	ppi -> sys_time		3600033						
