command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2721301	File	data/converged/CVE-2011-4930_htcondor/src_condor_ckpt_shared_utils.c								
ANR	2721302	DeclStmt									
ANR	2721303	Decl							int	"int ( long quantity , char * out , int base )"	_condor_itoa
ANR	2721304	Function	_condor_vfprintf_va	43:32:1468:5646							
ANR	2721305	FunctionDef	"_condor_vfprintf_va (int fd , const char * fmt , va_list args)"		2721304	0					
ANR	2721306	CompoundStatement		51:0:1641:5646	2721304	0					
ANR	2721307	IdentifierDeclStatement	char out [ VFPRINTF_LEN + 1 ] ;	52:1:1644:1670	2721304	0	True				
ANR	2721308	IdentifierDecl	out [ VFPRINTF_LEN + 1 ]		2721304	0					
ANR	2721309	IdentifierDeclType	char [ VFPRINTF_LEN + 1 ]		2721304	0					
ANR	2721310	Identifier	out		2721304	1					
ANR	2721311	AdditiveExpression	VFPRINTF_LEN + 1		2721304	2		+			
ANR	2721312	Identifier	VFPRINTF_LEN		2721304	0					
ANR	2721313	PrimaryExpression	1		2721304	1					
ANR	2721314	IdentifierDeclStatement	const char * i ;	53:1:1717:1730	2721304	1	True				
ANR	2721315	IdentifierDecl	* i		2721304	0					
ANR	2721316	IdentifierDeclType	const char *		2721304	0					
ANR	2721317	Identifier	i		2721304	1					
ANR	2721318	IdentifierDeclStatement	"char * o , * p ;"	54:1:1760:1771	2721304	2	True				
ANR	2721319	IdentifierDecl	* o		2721304	0					
ANR	2721320	IdentifierDeclType	char *		2721304	0					
ANR	2721321	Identifier	o		2721304	1					
ANR	2721322	IdentifierDecl	* p		2721304	1					
ANR	2721323	IdentifierDeclType	char *		2721304	0					
ANR	2721324	Identifier	p		2721304	1					
ANR	2721325	IdentifierDeclStatement	int c = 0 ;	55:1:1817:1826	2721304	3	True				
ANR	2721326	IdentifierDecl	c = 0		2721304	0					
ANR	2721327	IdentifierDeclType	int		2721304	0					
ANR	2721328	Identifier	c		2721304	1					
ANR	2721329	AssignmentExpression	c = 0		2721304	2		=			
ANR	2721330	Identifier	c		2721304	0					
ANR	2721331	PrimaryExpression	0		2721304	1					
ANR	2721332	IdentifierDeclStatement	double f ;	56:1:1887:1895	2721304	4	True				
ANR	2721333	IdentifierDecl	f		2721304	0					
ANR	2721334	IdentifierDeclType	double		2721304	0					
ANR	2721335	Identifier	f		2721304	1					
ANR	2721336	IdentifierDeclStatement	long d ;	57:1:1942:1948	2721304	5	True				
ANR	2721337	IdentifierDecl	d		2721304	0					
ANR	2721338	IdentifierDeclType	long		2721304	0					
ANR	2721339	Identifier	d		2721304	1					
ANR	2721340	IdentifierDeclStatement	int loopIndex ;	58:1:1994:2007	2721304	6	True				
ANR	2721341	IdentifierDecl	loopIndex		2721304	0					
ANR	2721342	IdentifierDeclType	int		2721304	0					
ANR	2721343	Identifier	loopIndex		2721304	1					
ANR	2721344	IdentifierDeclStatement	char d64 [ ASCII64DECIMAL ] ;	66:1:2384:2408	2721304	7	True				
ANR	2721345	IdentifierDecl	d64 [ ASCII64DECIMAL ]		2721304	0					
ANR	2721346	IdentifierDeclType	char [ ASCII64DECIMAL ]		2721304	0					
ANR	2721347	Identifier	d64		2721304	1					
ANR	2721348	Identifier	ASCII64DECIMAL		2721304	2					
ANR	2721349	IdentifierDeclStatement	char x64 [ ASCII64HEXADECIMAL ] ;	70:1:2492:2520	2721304	8	True				
ANR	2721350	IdentifierDecl	x64 [ ASCII64HEXADECIMAL ]		2721304	0					
ANR	2721351	IdentifierDeclType	char [ ASCII64HEXADECIMAL ]		2721304	0					
ANR	2721352	Identifier	x64		2721304	1					
ANR	2721353	Identifier	ASCII64HEXADECIMAL		2721304	2					
ANR	2721354	IdentifierDeclStatement	char o64 [ ASCII64OCTAL ] ;	74:1:2603:2625	2721304	9	True				
ANR	2721355	IdentifierDecl	o64 [ ASCII64OCTAL ]		2721304	0					
ANR	2721356	IdentifierDeclType	char [ ASCII64OCTAL ]		2721304	0					
ANR	2721357	Identifier	o64		2721304	1					
ANR	2721358	Identifier	ASCII64OCTAL		2721304	2					
ANR	2721359	ForStatement	for ( loopIndex = 0 ; loopIndex < VFPRINTF_LEN + 1 ; loopIndex ++ )		2721304	10					
ANR	2721360	ForInit	loopIndex = 0 ;	82:5:2857:2870	2721304	0	True				
ANR	2721361	AssignmentExpression	loopIndex = 0		2721304	0		=			
ANR	2721362	Identifier	loopIndex		2721304	0					
ANR	2721363	PrimaryExpression	0		2721304	1					
ANR	2721364	Condition	loopIndex < VFPRINTF_LEN + 1	82:20:2872:2897	2721304	1	True				
ANR	2721365	RelationalExpression	loopIndex < VFPRINTF_LEN + 1		2721304	0		<			
ANR	2721366	Identifier	loopIndex		2721304	0					
ANR	2721367	AdditiveExpression	VFPRINTF_LEN + 1		2721304	1		+			
ANR	2721368	Identifier	VFPRINTF_LEN		2721304	0					
ANR	2721369	PrimaryExpression	1		2721304	1					
ANR	2721370	PostIncDecOperationExpression	loopIndex ++	82:48:2900:2910	2721304	2	True				
ANR	2721371	Identifier	loopIndex		2721304	0					
ANR	2721372	IncDec	++		2721304	1					
ANR	2721373	CompoundStatement		33:1:1272:1272	2721304	3					
ANR	2721374	ExpressionStatement	out [ loopIndex ] = 0	84:2:2918:2936	2721304	0	True				
ANR	2721375	AssignmentExpression	out [ loopIndex ] = 0		2721304	0		=			
ANR	2721376	ArrayIndexing	out [ loopIndex ]		2721304	0					
ANR	2721377	Identifier	out		2721304	0					
ANR	2721378	Identifier	loopIndex		2721304	1					
ANR	2721379	PrimaryExpression	0		2721304	1					
ANR	2721380	ExpressionStatement	i = fmt	87:1:2943:2950	2721304	11	True				
ANR	2721381	AssignmentExpression	i = fmt		2721304	0		=			
ANR	2721382	Identifier	i		2721304	0					
ANR	2721383	Identifier	fmt		2721304	1					
ANR	2721384	ExpressionStatement	o = out	88:1:2953:2960	2721304	12	True				
ANR	2721385	AssignmentExpression	o = out		2721304	0		=			
ANR	2721386	Identifier	o		2721304	0					
ANR	2721387	Identifier	out		2721304	1					
ANR	2721388	WhileStatement	while ( * i != '\\0' && c < VFPRINTF_LEN )		2721304	13					
ANR	2721389	Condition	* i != '\\0' && c < VFPRINTF_LEN	90:7:2970:2999	2721304	0	True				
ANR	2721390	AndExpression	* i != '\\0' && c < VFPRINTF_LEN		2721304	0		&&			
ANR	2721391	EqualityExpression	* i != '\\0'		2721304	0		!=			
ANR	2721392	UnaryOperationExpression	* i		2721304	0					
ANR	2721393	UnaryOperator	*		2721304	0					
ANR	2721394	Identifier	i		2721304	1					
ANR	2721395	PrimaryExpression	'\\0'		2721304	1					
ANR	2721396	RelationalExpression	c < VFPRINTF_LEN		2721304	1		<			
ANR	2721397	Identifier	c		2721304	0					
ANR	2721398	Identifier	VFPRINTF_LEN		2721304	1					
ANR	2721399	CompoundStatement		41:1:1390:1390	2721304	1					
ANR	2721400	IfStatement	if ( * i != '%' && * i != '\\\\' )		2721304	0					
ANR	2721401	Condition	* i != '%' && * i != '\\\\'	93:6:3107:3129	2721304	0	True				
ANR	2721402	AndExpression	* i != '%' && * i != '\\\\'		2721304	0		&&			
ANR	2721403	EqualityExpression	* i != '%'		2721304	0		!=			
ANR	2721404	UnaryOperationExpression	* i		2721304	0					
ANR	2721405	UnaryOperator	*		2721304	0					
ANR	2721406	Identifier	i		2721304	1					
ANR	2721407	PrimaryExpression	'%'		2721304	1					
ANR	2721408	EqualityExpression	* i != '\\\\'		2721304	1		!=			
ANR	2721409	UnaryOperationExpression	* i		2721304	0					
ANR	2721410	UnaryOperator	*		2721304	0					
ANR	2721411	Identifier	i		2721304	1					
ANR	2721412	PrimaryExpression	'\\\\'		2721304	1					
ANR	2721413	CompoundStatement		44:2:1492:1492	2721304	1					
ANR	2721414	ExpressionStatement	* o ++ = * i ++	95:3:3139:3150	2721304	0	True				
ANR	2721415	AssignmentExpression	* o ++ = * i ++		2721304	0		=			
ANR	2721416	UnaryOperationExpression	* o ++		2721304	0					
ANR	2721417	UnaryOperator	*		2721304	0					
ANR	2721418	PostIncDecOperationExpression	o ++		2721304	1					
ANR	2721419	Identifier	o		2721304	0					
ANR	2721420	IncDec	++		2721304	1					
ANR	2721421	UnaryOperationExpression	* i ++		2721304	1					
ANR	2721422	UnaryOperator	*		2721304	0					
ANR	2721423	PostIncDecOperationExpression	i ++		2721304	1					
ANR	2721424	Identifier	i		2721304	0					
ANR	2721425	IncDec	++		2721304	1					
ANR	2721426	ExpressionStatement	c ++	96:3:3155:3158	2721304	1	True				
ANR	2721427	PostIncDecOperationExpression	c ++		2721304	0					
ANR	2721428	Identifier	c		2721304	0					
ANR	2721429	IncDec	++		2721304	1					
ANR	2721430	ContinueStatement	continue ;	97:3:3163:3171	2721304	2	True				
ANR	2721431	ElseStatement	else		2721304	0					
ANR	2721432	IfStatement	if ( * i == '\\\\' )		2721304	0					
ANR	2721433	Condition	* i == '\\\\'	99:11:3188:3197	2721304	0	True				
ANR	2721434	EqualityExpression	* i == '\\\\'		2721304	0		==			
ANR	2721435	UnaryOperationExpression	* i		2721304	0					
ANR	2721436	UnaryOperator	*		2721304	0					
ANR	2721437	Identifier	i		2721304	1					
ANR	2721438	PrimaryExpression	'\\\\'		2721304	1					
ANR	2721439	CompoundStatement		50:2:1593:1593	2721304	1					
ANR	2721440	SwitchStatement	switch ( * ++ i )		2721304	0					
ANR	2721441	Condition	* ++ i	101:10:3247:3250	2721304	0	True				
ANR	2721442	UnaryOperationExpression	* ++ i		2721304	0					
ANR	2721443	UnaryOperator	*		2721304	0					
ANR	2721444	UnaryExpression	++ i		2721304	1					
ANR	2721445	IncDec	++		2721304	0					
ANR	2721446	Identifier	i		2721304	1					
ANR	2721447	CompoundStatement		52:3:1614:1614	2721304	1					
ANR	2721448	Label	case 'a' :	103:4:3262:3270	2721304	0	True				
ANR	2721449	ExpressionStatement	* o = '\\a'	104:5:3277:3286	2721304	1	True				
ANR	2721450	AssignmentExpression	* o = '\\a'		2721304	0		=			
ANR	2721451	UnaryOperationExpression	* o		2721304	0					
ANR	2721452	UnaryOperator	*		2721304	0					
ANR	2721453	Identifier	o		2721304	1					
ANR	2721454	PrimaryExpression	'\\a'		2721304	1					
ANR	2721455	BreakStatement	break ;	105:5:3293:3298	2721304	2	True				
ANR	2721456	Label	case 'b' :	106:4:3304:3312	2721304	3	True				
ANR	2721457	ExpressionStatement	* o = '\\b'	107:5:3319:3328	2721304	4	True				
ANR	2721458	AssignmentExpression	* o = '\\b'		2721304	0		=			
ANR	2721459	UnaryOperationExpression	* o		2721304	0					
ANR	2721460	UnaryOperator	*		2721304	0					
ANR	2721461	Identifier	o		2721304	1					
ANR	2721462	PrimaryExpression	'\\b'		2721304	1					
ANR	2721463	BreakStatement	break ;	108:5:3335:3340	2721304	5	True				
ANR	2721464	Label	case 'f' :	109:4:3346:3354	2721304	6	True				
ANR	2721465	ExpressionStatement	* o = '\\f'	110:5:3361:3370	2721304	7	True				
ANR	2721466	AssignmentExpression	* o = '\\f'		2721304	0		=			
ANR	2721467	UnaryOperationExpression	* o		2721304	0					
ANR	2721468	UnaryOperator	*		2721304	0					
ANR	2721469	Identifier	o		2721304	1					
ANR	2721470	PrimaryExpression	'\\f'		2721304	1					
ANR	2721471	BreakStatement	break ;	111:5:3377:3382	2721304	8	True				
ANR	2721472	Label	case 'n' :	112:4:3388:3396	2721304	9	True				
ANR	2721473	ExpressionStatement	* o = '\\n'	113:5:3403:3412	2721304	10	True				
ANR	2721474	AssignmentExpression	* o = '\\n'		2721304	0		=			
ANR	2721475	UnaryOperationExpression	* o		2721304	0					
ANR	2721476	UnaryOperator	*		2721304	0					
ANR	2721477	Identifier	o		2721304	1					
ANR	2721478	PrimaryExpression	'\\n'		2721304	1					
ANR	2721479	BreakStatement	break ;	114:5:3419:3424	2721304	11	True				
ANR	2721480	Label	case 'r' :	115:4:3430:3438	2721304	12	True				
ANR	2721481	ExpressionStatement	* o = '\\r'	116:5:3445:3454	2721304	13	True				
ANR	2721482	AssignmentExpression	* o = '\\r'		2721304	0		=			
ANR	2721483	UnaryOperationExpression	* o		2721304	0					
ANR	2721484	UnaryOperator	*		2721304	0					
ANR	2721485	Identifier	o		2721304	1					
ANR	2721486	PrimaryExpression	'\\r'		2721304	1					
ANR	2721487	BreakStatement	break ;	117:5:3461:3466	2721304	14	True				
ANR	2721488	Label	case 't' :	118:4:3472:3480	2721304	15	True				
ANR	2721489	ExpressionStatement	* o = '\\t'	119:5:3487:3496	2721304	16	True				
ANR	2721490	AssignmentExpression	* o = '\\t'		2721304	0		=			
ANR	2721491	UnaryOperationExpression	* o		2721304	0					
ANR	2721492	UnaryOperator	*		2721304	0					
ANR	2721493	Identifier	o		2721304	1					
ANR	2721494	PrimaryExpression	'\\t'		2721304	1					
ANR	2721495	BreakStatement	break ;	120:5:3503:3508	2721304	17	True				
ANR	2721496	Label	case 'v' :	121:4:3514:3522	2721304	18	True				
ANR	2721497	ExpressionStatement	* o = '\\v'	122:5:3529:3538	2721304	19	True				
ANR	2721498	AssignmentExpression	* o = '\\v'		2721304	0		=			
ANR	2721499	UnaryOperationExpression	* o		2721304	0					
ANR	2721500	UnaryOperator	*		2721304	0					
ANR	2721501	Identifier	o		2721304	1					
ANR	2721502	PrimaryExpression	'\\v'		2721304	1					
ANR	2721503	BreakStatement	break ;	123:5:3545:3550	2721304	20	True				
ANR	2721504	Label	case '\\\\' :	124:4:3556:3565	2721304	21	True				
ANR	2721505	ExpressionStatement	* o = '\\\\'	125:5:3572:3581	2721304	22	True				
ANR	2721506	AssignmentExpression	* o = '\\\\'		2721304	0		=			
ANR	2721507	UnaryOperationExpression	* o		2721304	0					
ANR	2721508	UnaryOperator	*		2721304	0					
ANR	2721509	Identifier	o		2721304	1					
ANR	2721510	PrimaryExpression	'\\\\'		2721304	1					
ANR	2721511	BreakStatement	break ;	126:5:3588:3593	2721304	23	True				
ANR	2721512	Label	case '?' :	127:4:3599:3607	2721304	24	True				
ANR	2721513	ExpressionStatement	* o = '?'	128:5:3614:3622	2721304	25	True				
ANR	2721514	AssignmentExpression	* o = '?'		2721304	0		=			
ANR	2721515	UnaryOperationExpression	* o		2721304	0					
ANR	2721516	UnaryOperator	*		2721304	0					
ANR	2721517	Identifier	o		2721304	1					
ANR	2721518	PrimaryExpression	'?'		2721304	1					
ANR	2721519	BreakStatement	break ;	129:5:3629:3634	2721304	26	True				
ANR	2721520	Label	case '\\'' :	130:4:3640:3649	2721304	27	True				
ANR	2721521	ExpressionStatement	* o = '\\''	131:5:3656:3665	2721304	28	True				
ANR	2721522	AssignmentExpression	* o = '\\''		2721304	0		=			
ANR	2721523	UnaryOperationExpression	* o		2721304	0					
ANR	2721524	UnaryOperator	*		2721304	0					
ANR	2721525	Identifier	o		2721304	1					
ANR	2721526	PrimaryExpression	'\\''		2721304	1					
ANR	2721527	BreakStatement	break ;	132:5:3672:3677	2721304	29	True				
ANR	2721528	Label	"case '\\""' :"	133:4:3683:3692	2721304	30	True				
ANR	2721529	ExpressionStatement	"* o = '\\""'"	134:5:3699:3708	2721304	31	True				
ANR	2721530	AssignmentExpression	"* o = '\\""'"		2721304	0		=			
ANR	2721531	UnaryOperationExpression	* o		2721304	0					
ANR	2721532	UnaryOperator	*		2721304	0					
ANR	2721533	Identifier	o		2721304	1					
ANR	2721534	PrimaryExpression	"'\\""'"		2721304	1					
ANR	2721535	BreakStatement	break ;	135:5:3715:3720	2721304	32	True				
ANR	2721536	Label	default :	139:4:3779:3786	2721304	33	True				
ANR	2721537	Identifier	default		2721304	0					
ANR	2721538	ExpressionStatement	* o = * i	141:5:3851:3858	2721304	34	True				
ANR	2721539	AssignmentExpression	* o = * i		2721304	0		=			
ANR	2721540	UnaryOperationExpression	* o		2721304	0					
ANR	2721541	UnaryOperator	*		2721304	0					
ANR	2721542	Identifier	o		2721304	1					
ANR	2721543	UnaryOperationExpression	* i		2721304	1					
ANR	2721544	UnaryOperator	*		2721304	0					
ANR	2721545	Identifier	i		2721304	1					
ANR	2721546	BreakStatement	break ;	142:5:3865:3870	2721304	35	True				
ANR	2721547	ExpressionStatement	i ++	144:3:3880:3883	2721304	1	True				
ANR	2721548	PostIncDecOperationExpression	i ++		2721304	0					
ANR	2721549	Identifier	i		2721304	0					
ANR	2721550	IncDec	++		2721304	1					
ANR	2721551	ExpressionStatement	o ++	145:3:3888:3891	2721304	2	True				
ANR	2721552	PostIncDecOperationExpression	o ++		2721304	0					
ANR	2721553	Identifier	o		2721304	0					
ANR	2721554	IncDec	++		2721304	1					
ANR	2721555	ExpressionStatement	c ++	146:3:3896:3899	2721304	3	True				
ANR	2721556	PostIncDecOperationExpression	c ++		2721304	0					
ANR	2721557	Identifier	c		2721304	0					
ANR	2721558	IncDec	++		2721304	1					
ANR	2721559	ContinueStatement	continue ;	147:3:3904:3912	2721304	4	True				
ANR	2721560	SwitchStatement	switch ( * ++ i )		2721304	1					
ANR	2721561	Condition	* ++ i	156:9:4152:4155	2721304	0	True				
ANR	2721562	UnaryOperationExpression	* ++ i		2721304	0					
ANR	2721563	UnaryOperator	*		2721304	0					
ANR	2721564	UnaryExpression	++ i		2721304	1					
ANR	2721565	IncDec	++		2721304	0					
ANR	2721566	Identifier	i		2721304	1					
ANR	2721567	CompoundStatement		107:2:2518:2518	2721304	1					
ANR	2721568	Label	case 'c' :	158:3:4165:4173	2721304	0	True				
ANR	2721569	ExpressionStatement	"d = va_arg ( args , int )"	159:4:4179:4200	2721304	1	True				
ANR	2721570	AssignmentExpression	"d = va_arg ( args , int )"		2721304	0		=			
ANR	2721571	Identifier	d		2721304	0					
ANR	2721572	CallExpression	"va_arg ( args , int )"		2721304	1					
ANR	2721573	Callee	va_arg		2721304	0					
ANR	2721574	Identifier	va_arg		2721304	0					
ANR	2721575	ArgumentList	args		2721304	1					
ANR	2721576	Argument	args		2721304	0					
ANR	2721577	Identifier	args		2721304	0					
ANR	2721578	Argument	int		2721304	1					
ANR	2721579	Identifier	int		2721304	0					
ANR	2721580	IfStatement	if ( c < VFPRINTF_LEN )		2721304	2					
ANR	2721581	Condition	c < VFPRINTF_LEN	160:8:4210:4225	2721304	0	True				
ANR	2721582	RelationalExpression	c < VFPRINTF_LEN		2721304	0		<			
ANR	2721583	Identifier	c		2721304	0					
ANR	2721584	Identifier	VFPRINTF_LEN		2721304	1					
ANR	2721585	CompoundStatement		111:4:2590:2590	2721304	1					
ANR	2721586	ExpressionStatement	* o ++ = ( char ) d	162:5:4239:4253	2721304	0	True				
ANR	2721587	AssignmentExpression	* o ++ = ( char ) d		2721304	0		=			
ANR	2721588	UnaryOperationExpression	* o ++		2721304	0					
ANR	2721589	UnaryOperator	*		2721304	0					
ANR	2721590	PostIncDecOperationExpression	o ++		2721304	1					
ANR	2721591	Identifier	o		2721304	0					
ANR	2721592	IncDec	++		2721304	1					
ANR	2721593	CastExpression	( char ) d		2721304	1					
ANR	2721594	CastTarget	char		2721304	0					
ANR	2721595	Identifier	d		2721304	1					
ANR	2721596	ExpressionStatement	c ++	163:5:4260:4263	2721304	1	True				
ANR	2721597	PostIncDecOperationExpression	c ++		2721304	0					
ANR	2721598	Identifier	c		2721304	0					
ANR	2721599	IncDec	++		2721304	1					
ANR	2721600	ExpressionStatement	i ++	165:4:4275:4278	2721304	3	True				
ANR	2721601	PostIncDecOperationExpression	i ++		2721304	0					
ANR	2721602	Identifier	i		2721304	0					
ANR	2721603	IncDec	++		2721304	1					
ANR	2721604	BreakStatement	break ;	166:4:4284:4289	2721304	4	True				
ANR	2721605	Label	case 's' :	167:3:4294:4302	2721304	5	True				
ANR	2721606	Statement	p	168:4:4308:4308	2721304	6	True				
ANR	2721607	Statement	=	168:6:4310:4310	2721304	7	True				
ANR	2721608	Statement	va_arg	168:8:4312:4317	2721304	8	True				
ANR	2721609	Statement	(	168:14:4318:4318	2721304	9	True				
ANR	2721610	Statement	args	168:15:4319:4322	2721304	10	True				
ANR	2721611	Statement	","	168:19:4323:4323	2721304	11	True				
ANR	2721612	Statement	char	168:21:4325:4328	2721304	12	True				
ANR	2721613	Statement	*	168:26:4330:4330	2721304	13	True				
ANR	2721614	Statement	)	168:27:4331:4331	2721304	14	True				
ANR	2721615	ExpressionStatement		168:28:4332:4332	2721304	15	True				
ANR	2721616	WhileStatement	while ( * p != '\\0' && c < VFPRINTF_LEN )		2721304	16					
ANR	2721617	Condition	* p != '\\0' && c < VFPRINTF_LEN	169:10:4344:4373	2721304	0	True				
ANR	2721618	AndExpression	* p != '\\0' && c < VFPRINTF_LEN		2721304	0		&&			
ANR	2721619	EqualityExpression	* p != '\\0'		2721304	0		!=			
ANR	2721620	UnaryOperationExpression	* p		2721304	0					
ANR	2721621	UnaryOperator	*		2721304	0					
ANR	2721622	Identifier	p		2721304	1					
ANR	2721623	PrimaryExpression	'\\0'		2721304	1					
ANR	2721624	RelationalExpression	c < VFPRINTF_LEN		2721304	1		<			
ANR	2721625	Identifier	c		2721304	0					
ANR	2721626	Identifier	VFPRINTF_LEN		2721304	1					
ANR	2721627	CompoundStatement		120:4:2738:2738	2721304	1					
ANR	2721628	ExpressionStatement	* o ++ = * p ++	171:5:4387:4398	2721304	0	True				
ANR	2721629	AssignmentExpression	* o ++ = * p ++		2721304	0		=			
ANR	2721630	UnaryOperationExpression	* o ++		2721304	0					
ANR	2721631	UnaryOperator	*		2721304	0					
ANR	2721632	PostIncDecOperationExpression	o ++		2721304	1					
ANR	2721633	Identifier	o		2721304	0					
ANR	2721634	IncDec	++		2721304	1					
ANR	2721635	UnaryOperationExpression	* p ++		2721304	1					
ANR	2721636	UnaryOperator	*		2721304	0					
ANR	2721637	PostIncDecOperationExpression	p ++		2721304	1					
ANR	2721638	Identifier	p		2721304	0					
ANR	2721639	IncDec	++		2721304	1					
ANR	2721640	ExpressionStatement	c ++	172:5:4405:4408	2721304	1	True				
ANR	2721641	PostIncDecOperationExpression	c ++		2721304	0					
ANR	2721642	Identifier	c		2721304	0					
ANR	2721643	IncDec	++		2721304	1					
ANR	2721644	ExpressionStatement	i ++	174:4:4420:4423	2721304	17	True				
ANR	2721645	PostIncDecOperationExpression	i ++		2721304	0					
ANR	2721646	Identifier	i		2721304	0					
ANR	2721647	IncDec	++		2721304	1					
ANR	2721648	BreakStatement	break ;	175:4:4429:4434	2721304	18	True				
ANR	2721649	Label	case 'f' :	176:3:4439:4447	2721304	19	True				
ANR	2721650	ExpressionStatement	"f = va_arg ( args , double )"	177:4:4453:4477	2721304	20	True				
ANR	2721651	AssignmentExpression	"f = va_arg ( args , double )"		2721304	0		=			
ANR	2721652	Identifier	f		2721304	0					
ANR	2721653	CallExpression	"va_arg ( args , double )"		2721304	1					
ANR	2721654	Callee	va_arg		2721304	0					
ANR	2721655	Identifier	va_arg		2721304	0					
ANR	2721656	ArgumentList	args		2721304	1					
ANR	2721657	Argument	args		2721304	0					
ANR	2721658	Identifier	args		2721304	0					
ANR	2721659	Argument	double		2721304	1					
ANR	2721660	Identifier	double		2721304	0					
ANR	2721661	ExpressionStatement	i ++	178:4:4483:4486	2721304	21	True				
ANR	2721662	PostIncDecOperationExpression	i ++		2721304	0					
ANR	2721663	Identifier	i		2721304	0					
ANR	2721664	IncDec	++		2721304	1					
ANR	2721665	BreakStatement	break ;	179:4:4492:4497	2721304	22	True				
ANR	2721666	Label	case 'p' :	180:3:4502:4510	2721304	23	True				
ANR	2721667	Label	case 'x' :	181:3:4515:4523	2721304	24	True				
ANR	2721668	Statement	d	182:4:4529:4529	2721304	25	True				
ANR	2721669	Statement	=	182:6:4531:4531	2721304	26	True				
ANR	2721670	Statement	va_arg	182:8:4533:4538	2721304	27	True				
ANR	2721671	Statement	(	182:14:4539:4539	2721304	28	True				
ANR	2721672	Statement	args	182:15:4540:4543	2721304	29	True				
ANR	2721673	Statement	","	182:19:4544:4544	2721304	30	True				
ANR	2721674	Statement	unsigned	182:21:4546:4553	2721304	31	True				
ANR	2721675	Statement	long	182:30:4555:4558	2721304	32	True				
ANR	2721676	Statement	)	182:34:4559:4559	2721304	33	True				
ANR	2721677	ExpressionStatement		182:35:4560:4560	2721304	34	True				
ANR	2721678	ExpressionStatement	"_condor_itoa ( d , x64 , HEXADECIMAL )"	183:4:4566:4599	2721304	35	True				
ANR	2721679	CallExpression	"_condor_itoa ( d , x64 , HEXADECIMAL )"		2721304	0					
ANR	2721680	Callee	_condor_itoa		2721304	0					
ANR	2721681	Identifier	_condor_itoa		2721304	0					
ANR	2721682	ArgumentList	d		2721304	1					
ANR	2721683	Argument	d		2721304	0					
ANR	2721684	Identifier	d		2721304	0					
ANR	2721685	Argument	x64		2721304	1					
ANR	2721686	Identifier	x64		2721304	0					
ANR	2721687	Argument	HEXADECIMAL		2721304	2					
ANR	2721688	Identifier	HEXADECIMAL		2721304	0					
ANR	2721689	ExpressionStatement	p = x64	184:4:4605:4612	2721304	36	True				
ANR	2721690	AssignmentExpression	p = x64		2721304	0		=			
ANR	2721691	Identifier	p		2721304	0					
ANR	2721692	Identifier	x64		2721304	1					
ANR	2721693	WhileStatement	while ( * p != '\\0' && c < VFPRINTF_LEN )		2721304	37					
ANR	2721694	Condition	* p != '\\0' && c < VFPRINTF_LEN	185:10:4624:4653	2721304	0	True				
ANR	2721695	AndExpression	* p != '\\0' && c < VFPRINTF_LEN		2721304	0		&&			
ANR	2721696	EqualityExpression	* p != '\\0'		2721304	0		!=			
ANR	2721697	UnaryOperationExpression	* p		2721304	0					
ANR	2721698	UnaryOperator	*		2721304	0					
ANR	2721699	Identifier	p		2721304	1					
ANR	2721700	PrimaryExpression	'\\0'		2721304	1					
ANR	2721701	RelationalExpression	c < VFPRINTF_LEN		2721304	1		<			
ANR	2721702	Identifier	c		2721304	0					
ANR	2721703	Identifier	VFPRINTF_LEN		2721304	1					
ANR	2721704	CompoundStatement		136:4:3018:3018	2721304	1					
ANR	2721705	ExpressionStatement	* o ++ = * p ++	187:5:4667:4678	2721304	0	True				
ANR	2721706	AssignmentExpression	* o ++ = * p ++		2721304	0		=			
ANR	2721707	UnaryOperationExpression	* o ++		2721304	0					
ANR	2721708	UnaryOperator	*		2721304	0					
ANR	2721709	PostIncDecOperationExpression	o ++		2721304	1					
ANR	2721710	Identifier	o		2721304	0					
ANR	2721711	IncDec	++		2721304	1					
ANR	2721712	UnaryOperationExpression	* p ++		2721304	1					
ANR	2721713	UnaryOperator	*		2721304	0					
ANR	2721714	PostIncDecOperationExpression	p ++		2721304	1					
ANR	2721715	Identifier	p		2721304	0					
ANR	2721716	IncDec	++		2721304	1					
ANR	2721717	ExpressionStatement	c ++	188:5:4685:4688	2721304	1	True				
ANR	2721718	PostIncDecOperationExpression	c ++		2721304	0					
ANR	2721719	Identifier	c		2721304	0					
ANR	2721720	IncDec	++		2721304	1					
ANR	2721721	ExpressionStatement	i ++	190:4:4700:4703	2721304	38	True				
ANR	2721722	PostIncDecOperationExpression	i ++		2721304	0					
ANR	2721723	Identifier	i		2721304	0					
ANR	2721724	IncDec	++		2721304	1					
ANR	2721725	BreakStatement	break ;	191:4:4709:4714	2721304	39	True				
ANR	2721726	Label	case 'o' :	192:3:4719:4727	2721304	40	True				
ANR	2721727	ExpressionStatement	"d = va_arg ( args , int )"	193:4:4733:4754	2721304	41	True				
ANR	2721728	AssignmentExpression	"d = va_arg ( args , int )"		2721304	0		=			
ANR	2721729	Identifier	d		2721304	0					
ANR	2721730	CallExpression	"va_arg ( args , int )"		2721304	1					
ANR	2721731	Callee	va_arg		2721304	0					
ANR	2721732	Identifier	va_arg		2721304	0					
ANR	2721733	ArgumentList	args		2721304	1					
ANR	2721734	Argument	args		2721304	0					
ANR	2721735	Identifier	args		2721304	0					
ANR	2721736	Argument	int		2721304	1					
ANR	2721737	Identifier	int		2721304	0					
ANR	2721738	ExpressionStatement	"_condor_itoa ( d , o64 , OCTAL )"	194:4:4760:4787	2721304	42	True				
ANR	2721739	CallExpression	"_condor_itoa ( d , o64 , OCTAL )"		2721304	0					
ANR	2721740	Callee	_condor_itoa		2721304	0					
ANR	2721741	Identifier	_condor_itoa		2721304	0					
ANR	2721742	ArgumentList	d		2721304	1					
ANR	2721743	Argument	d		2721304	0					
ANR	2721744	Identifier	d		2721304	0					
ANR	2721745	Argument	o64		2721304	1					
ANR	2721746	Identifier	o64		2721304	0					
ANR	2721747	Argument	OCTAL		2721304	2					
ANR	2721748	Identifier	OCTAL		2721304	0					
ANR	2721749	ExpressionStatement	p = o64	195:4:4793:4800	2721304	43	True				
ANR	2721750	AssignmentExpression	p = o64		2721304	0		=			
ANR	2721751	Identifier	p		2721304	0					
ANR	2721752	Identifier	o64		2721304	1					
ANR	2721753	WhileStatement	while ( * p != '\\0' && c < VFPRINTF_LEN )		2721304	44					
ANR	2721754	Condition	* p != '\\0' && c < VFPRINTF_LEN	196:10:4812:4841	2721304	0	True				
ANR	2721755	AndExpression	* p != '\\0' && c < VFPRINTF_LEN		2721304	0		&&			
ANR	2721756	EqualityExpression	* p != '\\0'		2721304	0		!=			
ANR	2721757	UnaryOperationExpression	* p		2721304	0					
ANR	2721758	UnaryOperator	*		2721304	0					
ANR	2721759	Identifier	p		2721304	1					
ANR	2721760	PrimaryExpression	'\\0'		2721304	1					
ANR	2721761	RelationalExpression	c < VFPRINTF_LEN		2721304	1		<			
ANR	2721762	Identifier	c		2721304	0					
ANR	2721763	Identifier	VFPRINTF_LEN		2721304	1					
ANR	2721764	CompoundStatement		147:4:3206:3206	2721304	1					
ANR	2721765	ExpressionStatement	* o ++ = * p ++	198:5:4855:4866	2721304	0	True				
ANR	2721766	AssignmentExpression	* o ++ = * p ++		2721304	0		=			
ANR	2721767	UnaryOperationExpression	* o ++		2721304	0					
ANR	2721768	UnaryOperator	*		2721304	0					
ANR	2721769	PostIncDecOperationExpression	o ++		2721304	1					
ANR	2721770	Identifier	o		2721304	0					
ANR	2721771	IncDec	++		2721304	1					
ANR	2721772	UnaryOperationExpression	* p ++		2721304	1					
ANR	2721773	UnaryOperator	*		2721304	0					
ANR	2721774	PostIncDecOperationExpression	p ++		2721304	1					
ANR	2721775	Identifier	p		2721304	0					
ANR	2721776	IncDec	++		2721304	1					
ANR	2721777	ExpressionStatement	c ++	199:5:4873:4876	2721304	1	True				
ANR	2721778	PostIncDecOperationExpression	c ++		2721304	0					
ANR	2721779	Identifier	c		2721304	0					
ANR	2721780	IncDec	++		2721304	1					
ANR	2721781	ExpressionStatement	i ++	201:4:4888:4891	2721304	45	True				
ANR	2721782	PostIncDecOperationExpression	i ++		2721304	0					
ANR	2721783	Identifier	i		2721304	0					
ANR	2721784	IncDec	++		2721304	1					
ANR	2721785	BreakStatement	break ;	202:4:4897:4902	2721304	46	True				
ANR	2721786	Label	case 'i' :	203:3:4907:4915	2721304	47	True				
ANR	2721787	Label	case 'd' :	204:3:4920:4928	2721304	48	True				
ANR	2721788	ExpressionStatement	"d = va_arg ( args , int )"	205:4:4934:4955	2721304	49	True				
ANR	2721789	AssignmentExpression	"d = va_arg ( args , int )"		2721304	0		=			
ANR	2721790	Identifier	d		2721304	0					
ANR	2721791	CallExpression	"va_arg ( args , int )"		2721304	1					
ANR	2721792	Callee	va_arg		2721304	0					
ANR	2721793	Identifier	va_arg		2721304	0					
ANR	2721794	ArgumentList	args		2721304	1					
ANR	2721795	Argument	args		2721304	0					
ANR	2721796	Identifier	args		2721304	0					
ANR	2721797	Argument	int		2721304	1					
ANR	2721798	Identifier	int		2721304	0					
ANR	2721799	ExpressionStatement	"_condor_itoa ( d , d64 , DECIMAL )"	206:4:4961:4990	2721304	50	True				
ANR	2721800	CallExpression	"_condor_itoa ( d , d64 , DECIMAL )"		2721304	0					
ANR	2721801	Callee	_condor_itoa		2721304	0					
ANR	2721802	Identifier	_condor_itoa		2721304	0					
ANR	2721803	ArgumentList	d		2721304	1					
ANR	2721804	Argument	d		2721304	0					
ANR	2721805	Identifier	d		2721304	0					
ANR	2721806	Argument	d64		2721304	1					
ANR	2721807	Identifier	d64		2721304	0					
ANR	2721808	Argument	DECIMAL		2721304	2					
ANR	2721809	Identifier	DECIMAL		2721304	0					
ANR	2721810	ExpressionStatement	p = d64	207:4:4996:5003	2721304	51	True				
ANR	2721811	AssignmentExpression	p = d64		2721304	0		=			
ANR	2721812	Identifier	p		2721304	0					
ANR	2721813	Identifier	d64		2721304	1					
ANR	2721814	WhileStatement	while ( * p != '\\0' && c < VFPRINTF_LEN )		2721304	52					
ANR	2721815	Condition	* p != '\\0' && c < VFPRINTF_LEN	208:10:5015:5044	2721304	0	True				
ANR	2721816	AndExpression	* p != '\\0' && c < VFPRINTF_LEN		2721304	0		&&			
ANR	2721817	EqualityExpression	* p != '\\0'		2721304	0		!=			
ANR	2721818	UnaryOperationExpression	* p		2721304	0					
ANR	2721819	UnaryOperator	*		2721304	0					
ANR	2721820	Identifier	p		2721304	1					
ANR	2721821	PrimaryExpression	'\\0'		2721304	1					
ANR	2721822	RelationalExpression	c < VFPRINTF_LEN		2721304	1		<			
ANR	2721823	Identifier	c		2721304	0					
ANR	2721824	Identifier	VFPRINTF_LEN		2721304	1					
ANR	2721825	CompoundStatement		159:4:3409:3409	2721304	1					
ANR	2721826	ExpressionStatement	* o ++ = * p ++	210:5:5058:5069	2721304	0	True				
ANR	2721827	AssignmentExpression	* o ++ = * p ++		2721304	0		=			
ANR	2721828	UnaryOperationExpression	* o ++		2721304	0					
ANR	2721829	UnaryOperator	*		2721304	0					
ANR	2721830	PostIncDecOperationExpression	o ++		2721304	1					
ANR	2721831	Identifier	o		2721304	0					
ANR	2721832	IncDec	++		2721304	1					
ANR	2721833	UnaryOperationExpression	* p ++		2721304	1					
ANR	2721834	UnaryOperator	*		2721304	0					
ANR	2721835	PostIncDecOperationExpression	p ++		2721304	1					
ANR	2721836	Identifier	p		2721304	0					
ANR	2721837	IncDec	++		2721304	1					
ANR	2721838	ExpressionStatement	c ++	211:5:5076:5079	2721304	1	True				
ANR	2721839	PostIncDecOperationExpression	c ++		2721304	0					
ANR	2721840	Identifier	c		2721304	0					
ANR	2721841	IncDec	++		2721304	1					
ANR	2721842	ExpressionStatement	i ++	213:4:5091:5094	2721304	53	True				
ANR	2721843	PostIncDecOperationExpression	i ++		2721304	0					
ANR	2721844	Identifier	i		2721304	0					
ANR	2721845	IncDec	++		2721304	1					
ANR	2721846	BreakStatement	break ;	214:4:5100:5105	2721304	54	True				
ANR	2721847	Label	case 'u' :	215:3:5110:5118	2721304	55	True				
ANR	2721848	ExpressionStatement	"d = va_arg ( args , int )"	216:4:5124:5145	2721304	56	True				
ANR	2721849	AssignmentExpression	"d = va_arg ( args , int )"		2721304	0		=			
ANR	2721850	Identifier	d		2721304	0					
ANR	2721851	CallExpression	"va_arg ( args , int )"		2721304	1					
ANR	2721852	Callee	va_arg		2721304	0					
ANR	2721853	Identifier	va_arg		2721304	0					
ANR	2721854	ArgumentList	args		2721304	1					
ANR	2721855	Argument	args		2721304	0					
ANR	2721856	Identifier	args		2721304	0					
ANR	2721857	Argument	int		2721304	1					
ANR	2721858	Identifier	int		2721304	0					
ANR	2721859	ExpressionStatement	"_condor_itoa ( d , d64 , DECIMAL )"	217:4:5151:5180	2721304	57	True				
ANR	2721860	CallExpression	"_condor_itoa ( d , d64 , DECIMAL )"		2721304	0					
ANR	2721861	Callee	_condor_itoa		2721304	0					
ANR	2721862	Identifier	_condor_itoa		2721304	0					
ANR	2721863	ArgumentList	d		2721304	1					
ANR	2721864	Argument	d		2721304	0					
ANR	2721865	Identifier	d		2721304	0					
ANR	2721866	Argument	d64		2721304	1					
ANR	2721867	Identifier	d64		2721304	0					
ANR	2721868	Argument	DECIMAL		2721304	2					
ANR	2721869	Identifier	DECIMAL		2721304	0					
ANR	2721870	ExpressionStatement	p = d64	218:4:5186:5193	2721304	58	True				
ANR	2721871	AssignmentExpression	p = d64		2721304	0		=			
ANR	2721872	Identifier	p		2721304	0					
ANR	2721873	Identifier	d64		2721304	1					
ANR	2721874	WhileStatement	while ( * p != '\\0' && c < VFPRINTF_LEN )		2721304	59					
ANR	2721875	Condition	* p != '\\0' && c < VFPRINTF_LEN	219:10:5205:5234	2721304	0	True				
ANR	2721876	AndExpression	* p != '\\0' && c < VFPRINTF_LEN		2721304	0		&&			
ANR	2721877	EqualityExpression	* p != '\\0'		2721304	0		!=			
ANR	2721878	UnaryOperationExpression	* p		2721304	0					
ANR	2721879	UnaryOperator	*		2721304	0					
ANR	2721880	Identifier	p		2721304	1					
ANR	2721881	PrimaryExpression	'\\0'		2721304	1					
ANR	2721882	RelationalExpression	c < VFPRINTF_LEN		2721304	1		<			
ANR	2721883	Identifier	c		2721304	0					
ANR	2721884	Identifier	VFPRINTF_LEN		2721304	1					
ANR	2721885	CompoundStatement		170:4:3599:3599	2721304	1					
ANR	2721886	ExpressionStatement	* o ++ = * p ++	221:5:5248:5259	2721304	0	True				
ANR	2721887	AssignmentExpression	* o ++ = * p ++		2721304	0		=			
ANR	2721888	UnaryOperationExpression	* o ++		2721304	0					
ANR	2721889	UnaryOperator	*		2721304	0					
ANR	2721890	PostIncDecOperationExpression	o ++		2721304	1					
ANR	2721891	Identifier	o		2721304	0					
ANR	2721892	IncDec	++		2721304	1					
ANR	2721893	UnaryOperationExpression	* p ++		2721304	1					
ANR	2721894	UnaryOperator	*		2721304	0					
ANR	2721895	PostIncDecOperationExpression	p ++		2721304	1					
ANR	2721896	Identifier	p		2721304	0					
ANR	2721897	IncDec	++		2721304	1					
ANR	2721898	ExpressionStatement	c ++	222:5:5266:5269	2721304	1	True				
ANR	2721899	PostIncDecOperationExpression	c ++		2721304	0					
ANR	2721900	Identifier	c		2721304	0					
ANR	2721901	IncDec	++		2721304	1					
ANR	2721902	ExpressionStatement	i ++	224:4:5281:5284	2721304	60	True				
ANR	2721903	PostIncDecOperationExpression	i ++		2721304	0					
ANR	2721904	Identifier	i		2721304	0					
ANR	2721905	IncDec	++		2721304	1					
ANR	2721906	BreakStatement	break ;	225:4:5290:5295	2721304	61	True				
ANR	2721907	Label	case '%' :	226:3:5300:5308	2721304	62	True				
ANR	2721908	ExpressionStatement	* o ++ = * i ++	227:4:5314:5325	2721304	63	True				
ANR	2721909	AssignmentExpression	* o ++ = * i ++		2721304	0		=			
ANR	2721910	UnaryOperationExpression	* o ++		2721304	0					
ANR	2721911	UnaryOperator	*		2721304	0					
ANR	2721912	PostIncDecOperationExpression	o ++		2721304	1					
ANR	2721913	Identifier	o		2721304	0					
ANR	2721914	IncDec	++		2721304	1					
ANR	2721915	UnaryOperationExpression	* i ++		2721304	1					
ANR	2721916	UnaryOperator	*		2721304	0					
ANR	2721917	PostIncDecOperationExpression	i ++		2721304	1					
ANR	2721918	Identifier	i		2721304	0					
ANR	2721919	IncDec	++		2721304	1					
ANR	2721920	ExpressionStatement	c ++	228:4:5331:5334	2721304	64	True				
ANR	2721921	PostIncDecOperationExpression	c ++		2721304	0					
ANR	2721922	Identifier	c		2721304	0					
ANR	2721923	IncDec	++		2721304	1					
ANR	2721924	BreakStatement	break ;	229:4:5340:5345	2721304	65	True				
ANR	2721925	Label	default :	230:3:5350:5357	2721304	66	True				
ANR	2721926	Identifier	default		2721304	0					
ANR	2721927	ExpressionStatement	* o ++ = * i ++	231:4:5415:5426	2721304	67	True				
ANR	2721928	AssignmentExpression	* o ++ = * i ++		2721304	0		=			
ANR	2721929	UnaryOperationExpression	* o ++		2721304	0					
ANR	2721930	UnaryOperator	*		2721304	0					
ANR	2721931	PostIncDecOperationExpression	o ++		2721304	1					
ANR	2721932	Identifier	o		2721304	0					
ANR	2721933	IncDec	++		2721304	1					
ANR	2721934	UnaryOperationExpression	* i ++		2721304	1					
ANR	2721935	UnaryOperator	*		2721304	0					
ANR	2721936	PostIncDecOperationExpression	i ++		2721304	1					
ANR	2721937	Identifier	i		2721304	0					
ANR	2721938	IncDec	++		2721304	1					
ANR	2721939	ExpressionStatement	c ++	232:4:5432:5435	2721304	68	True				
ANR	2721940	PostIncDecOperationExpression	c ++		2721304	0					
ANR	2721941	Identifier	c		2721304	0					
ANR	2721942	IncDec	++		2721304	1					
ANR	2721943	BreakStatement	break ;	233:4:5441:5446	2721304	69	True				
ANR	2721944	Statement	define	240:1:5573:5578	2721304	14	True				
ANR	2721945	Statement	SYS_write	240:8:5580:5588	2721304	15	True				
ANR	2721946	Statement	4	240:18:5590:5590	2721304	16	True				
ANR	2721947	ReturnStatement	"return SYSCALL ( SYS_write , fd , out , c ) ;"	243:1:5607:5644	2721304	17	True				
ANR	2721948	CallExpression	"SYSCALL ( SYS_write , fd , out , c )"		2721304	0					
ANR	2721949	Callee	SYSCALL		2721304	0					
ANR	2721950	Identifier	SYSCALL		2721304	0					
ANR	2721951	ArgumentList	SYS_write		2721304	1					
ANR	2721952	Argument	SYS_write		2721304	0					
ANR	2721953	Identifier	SYS_write		2721304	0					
ANR	2721954	Argument	fd		2721304	1					
ANR	2721955	Identifier	fd		2721304	0					
ANR	2721956	Argument	out		2721304	2					
ANR	2721957	Identifier	out		2721304	0					
ANR	2721958	Argument	c		2721304	3					
ANR	2721959	Identifier	c		2721304	0					
ANR	2721960	ReturnType	x int		2721304	1					
ANR	2721961	Identifier	_condor_vfprintf_va		2721304	2					
ANR	2721962	ParameterList	"int fd , const char * fmt , va_list args"		2721304	3					
ANR	2721963	Parameter	int fd	50:21:1601:1606	2721304	0	True				
ANR	2721964	ParameterType	int		2721304	0					
ANR	2721965	Identifier	fd		2721304	1					
ANR	2721966	Parameter	const char * fmt	50:29:1609:1623	2721304	1	True				
ANR	2721967	ParameterType	const char *		2721304	0					
ANR	2721968	Identifier	fmt		2721304	1					
ANR	2721969	Parameter	va_list args	50:46:1626:1637	2721304	2	True				
ANR	2721970	ParameterType	va_list		2721304	0					
ANR	2721971	Identifier	args		2721304	1					
ANR	2721972	CFGEntryNode	ENTRY		2721304		True				
ANR	2721973	CFGExitNode	EXIT		2721304		True				
ANR	2721974	Symbol	HEXADECIMAL		2721304						
ANR	2721975	Symbol	* o ++		2721304						
ANR	2721976	Symbol	* loopIndex		2721304						
ANR	2721977	Symbol	DECIMAL		2721304						
ANR	2721978	Symbol	fmt		2721304						
ANR	2721979	Symbol	out		2721304						
ANR	2721980	Symbol	OCTAL		2721304						
ANR	2721981	Symbol	* ++ i		2721304						
ANR	2721982	Symbol	va_arg		2721304						
ANR	2721983	Symbol	c		2721304						
ANR	2721984	Symbol	d64		2721304						
ANR	2721985	Symbol	d		2721304						
ANR	2721986	Symbol	loopIndex		2721304						
ANR	2721987	Symbol	f		2721304						
ANR	2721988	Symbol	double		2721304						
ANR	2721989	Symbol	* p ++		2721304						
ANR	2721990	Symbol	i		2721304						
ANR	2721991	Symbol	o64		2721304						
ANR	2721992	Symbol	int		2721304						
ANR	2721993	Symbol	o		2721304						
ANR	2721994	Symbol	args		2721304						
ANR	2721995	Symbol	p		2721304						
ANR	2721996	Symbol	VFPRINTF_LEN		2721304						
ANR	2721997	Symbol	SYS_write		2721304						
ANR	2721998	Symbol	* i		2721304						
ANR	2721999	Symbol	* i ++		2721304						
ANR	2722000	Symbol	x64		2721304						
ANR	2722001	Symbol	* out		2721304						
ANR	2722002	Symbol	* o		2721304						
ANR	2722003	Symbol	* p		2721304						
ANR	2722004	Symbol	fd		2721304						
ANR	2722005	Symbol	SYSCALL		2721304						
ANR	2722006	Function	_condor_itoa	253:0:5903:9940							
ANR	2722007	FunctionDef	"_condor_itoa (long quantity , char * out , int base)"		2722006	0					
ANR	2722008	CompoundStatement		255:0:5956:9940	2722006	0					
ANR	2722009	IdentifierDeclStatement	int i ;	256:1:5959:5964	2722006	0	True				
ANR	2722010	IdentifierDecl	i		2722006	0					
ANR	2722011	IdentifierDeclType	int		2722006	0					
ANR	2722012	Identifier	i		2722006	1					
ANR	2722013	IdentifierDeclStatement	unsigned long mask ;	257:1:5967:5985	2722006	1	True				
ANR	2722014	IdentifierDecl	mask		2722006	0					
ANR	2722015	IdentifierDeclType	unsigned long		2722006	0					
ANR	2722016	Identifier	mask		2722006	1					
ANR	2722017	IdentifierDeclStatement	unsigned char byte ;	258:1:5988:6006	2722006	2	True				
ANR	2722018	IdentifierDecl	byte		2722006	0					
ANR	2722019	IdentifierDeclType	unsigned char		2722006	0					
ANR	2722020	Identifier	byte		2722006	1					
ANR	2722021	IdentifierDeclStatement	unsigned long hexquant ;	259:1:6009:6031	2722006	3	True				
ANR	2722022	IdentifierDecl	hexquant		2722006	0					
ANR	2722023	IdentifierDeclType	unsigned long		2722006	0					
ANR	2722024	Identifier	hexquant		2722006	1					
ANR	2722025	IdentifierDeclStatement	unsigned int octquant ;	260:1:6034:6055	2722006	4	True				
ANR	2722026	IdentifierDecl	octquant		2722006	0					
ANR	2722027	IdentifierDeclType	unsigned int		2722006	0					
ANR	2722028	Identifier	octquant		2722006	1					
ANR	2722029	IdentifierDeclStatement	"int numchars , maxchars ;"	261:1:6058:6080	2722006	5	True				
ANR	2722030	IdentifierDecl	numchars		2722006	0					
ANR	2722031	IdentifierDeclType	int		2722006	0					
ANR	2722032	Identifier	numchars		2722006	1					
ANR	2722033	IdentifierDecl	maxchars		2722006	1					
ANR	2722034	IdentifierDeclType	int		2722006	0					
ANR	2722035	Identifier	maxchars		2722006	1					
ANR	2722036	IdentifierDeclStatement	"char * p , * q ;"	262:1:6083:6094	2722006	6	True				
ANR	2722037	IdentifierDecl	* p		2722006	0					
ANR	2722038	IdentifierDeclType	char *		2722006	0					
ANR	2722039	Identifier	p		2722006	1					
ANR	2722040	IdentifierDecl	* q		2722006	1					
ANR	2722041	IdentifierDeclType	char *		2722006	0					
ANR	2722042	Identifier	q		2722006	1					
ANR	2722043	IdentifierDeclStatement	"int divi , sum , mod ;"	263:1:6097:6115	2722006	7	True				
ANR	2722044	IdentifierDecl	divi		2722006	0					
ANR	2722045	IdentifierDeclType	int		2722006	0					
ANR	2722046	Identifier	divi		2722006	1					
ANR	2722047	IdentifierDecl	sum		2722006	1					
ANR	2722048	IdentifierDeclType	int		2722006	0					
ANR	2722049	Identifier	sum		2722006	1					
ANR	2722050	IdentifierDecl	mod		2722006	2					
ANR	2722051	IdentifierDeclType	int		2722006	0					
ANR	2722052	Identifier	mod		2722006	1					
ANR	2722053	IdentifierDeclStatement	unsigned char basemap [ 16 ] ;	264:1:6118:6143	2722006	8	True				
ANR	2722054	IdentifierDecl	basemap [ 16 ]		2722006	0					
ANR	2722055	IdentifierDeclType	unsigned char [ 16 ]		2722006	0					
ANR	2722056	Identifier	basemap		2722006	1					
ANR	2722057	PrimaryExpression	16		2722006	2					
ANR	2722058	IfStatement	if ( quantity == 0 )		2722006	9					
ANR	2722059	Condition	quantity == 0	267:5:6188:6200	2722006	0	True				
ANR	2722060	EqualityExpression	quantity == 0		2722006	0		==			
ANR	2722061	Identifier	quantity		2722006	0					
ANR	2722062	PrimaryExpression	0		2722006	1					
ANR	2722063	CompoundStatement		13:21:247:247	2722006	1					
ANR	2722064	ExpressionStatement	out [ 0 ] = '0'	268:2:6208:6220	2722006	0	True				
ANR	2722065	AssignmentExpression	out [ 0 ] = '0'		2722006	0		=			
ANR	2722066	ArrayIndexing	out [ 0 ]		2722006	0					
ANR	2722067	Identifier	out		2722006	0					
ANR	2722068	PrimaryExpression	0		2722006	1					
ANR	2722069	PrimaryExpression	'0'		2722006	1					
ANR	2722070	ExpressionStatement	out [ 1 ] = 0	269:2:6225:6235	2722006	1	True				
ANR	2722071	AssignmentExpression	out [ 1 ] = 0		2722006	0		=			
ANR	2722072	ArrayIndexing	out [ 1 ]		2722006	0					
ANR	2722073	Identifier	out		2722006	0					
ANR	2722074	PrimaryExpression	1		2722006	1					
ANR	2722075	PrimaryExpression	0		2722006	1					
ANR	2722076	ExpressionStatement	numchars = 1	270:2:6239:6251	2722006	2	True				
ANR	2722077	AssignmentExpression	numchars = 1		2722006	0		=			
ANR	2722078	Identifier	numchars		2722006	0					
ANR	2722079	PrimaryExpression	1		2722006	1					
ANR	2722080	ReturnStatement	return numchars ;	271:2:6255:6270	2722006	3	True				
ANR	2722081	Identifier	numchars		2722006	0					
ANR	2722082	ExpressionStatement	basemap [ 0 ] = '0'	279:1:6600:6616	2722006	10	True				
ANR	2722083	AssignmentExpression	basemap [ 0 ] = '0'		2722006	0		=			
ANR	2722084	ArrayIndexing	basemap [ 0 ]		2722006	0					
ANR	2722085	Identifier	basemap		2722006	0					
ANR	2722086	PrimaryExpression	0		2722006	1					
ANR	2722087	PrimaryExpression	'0'		2722006	1					
ANR	2722088	ExpressionStatement	basemap [ 1 ] = '1'	280:1:6619:6635	2722006	11	True				
ANR	2722089	AssignmentExpression	basemap [ 1 ] = '1'		2722006	0		=			
ANR	2722090	ArrayIndexing	basemap [ 1 ]		2722006	0					
ANR	2722091	Identifier	basemap		2722006	0					
ANR	2722092	PrimaryExpression	1		2722006	1					
ANR	2722093	PrimaryExpression	'1'		2722006	1					
ANR	2722094	ExpressionStatement	basemap [ 2 ] = '2'	281:1:6638:6654	2722006	12	True				
ANR	2722095	AssignmentExpression	basemap [ 2 ] = '2'		2722006	0		=			
ANR	2722096	ArrayIndexing	basemap [ 2 ]		2722006	0					
ANR	2722097	Identifier	basemap		2722006	0					
ANR	2722098	PrimaryExpression	2		2722006	1					
ANR	2722099	PrimaryExpression	'2'		2722006	1					
ANR	2722100	ExpressionStatement	basemap [ 3 ] = '3'	282:1:6657:6673	2722006	13	True				
ANR	2722101	AssignmentExpression	basemap [ 3 ] = '3'		2722006	0		=			
ANR	2722102	ArrayIndexing	basemap [ 3 ]		2722006	0					
ANR	2722103	Identifier	basemap		2722006	0					
ANR	2722104	PrimaryExpression	3		2722006	1					
ANR	2722105	PrimaryExpression	'3'		2722006	1					
ANR	2722106	ExpressionStatement	basemap [ 4 ] = '4'	283:1:6676:6692	2722006	14	True				
ANR	2722107	AssignmentExpression	basemap [ 4 ] = '4'		2722006	0		=			
ANR	2722108	ArrayIndexing	basemap [ 4 ]		2722006	0					
ANR	2722109	Identifier	basemap		2722006	0					
ANR	2722110	PrimaryExpression	4		2722006	1					
ANR	2722111	PrimaryExpression	'4'		2722006	1					
ANR	2722112	ExpressionStatement	basemap [ 5 ] = '5'	284:1:6695:6711	2722006	15	True				
ANR	2722113	AssignmentExpression	basemap [ 5 ] = '5'		2722006	0		=			
ANR	2722114	ArrayIndexing	basemap [ 5 ]		2722006	0					
ANR	2722115	Identifier	basemap		2722006	0					
ANR	2722116	PrimaryExpression	5		2722006	1					
ANR	2722117	PrimaryExpression	'5'		2722006	1					
ANR	2722118	ExpressionStatement	basemap [ 6 ] = '6'	285:1:6714:6730	2722006	16	True				
ANR	2722119	AssignmentExpression	basemap [ 6 ] = '6'		2722006	0		=			
ANR	2722120	ArrayIndexing	basemap [ 6 ]		2722006	0					
ANR	2722121	Identifier	basemap		2722006	0					
ANR	2722122	PrimaryExpression	6		2722006	1					
ANR	2722123	PrimaryExpression	'6'		2722006	1					
ANR	2722124	ExpressionStatement	basemap [ 7 ] = '7'	286:1:6733:6749	2722006	17	True				
ANR	2722125	AssignmentExpression	basemap [ 7 ] = '7'		2722006	0		=			
ANR	2722126	ArrayIndexing	basemap [ 7 ]		2722006	0					
ANR	2722127	Identifier	basemap		2722006	0					
ANR	2722128	PrimaryExpression	7		2722006	1					
ANR	2722129	PrimaryExpression	'7'		2722006	1					
ANR	2722130	ExpressionStatement	basemap [ 8 ] = '8'	287:1:6752:6768	2722006	18	True				
ANR	2722131	AssignmentExpression	basemap [ 8 ] = '8'		2722006	0		=			
ANR	2722132	ArrayIndexing	basemap [ 8 ]		2722006	0					
ANR	2722133	Identifier	basemap		2722006	0					
ANR	2722134	PrimaryExpression	8		2722006	1					
ANR	2722135	PrimaryExpression	'8'		2722006	1					
ANR	2722136	ExpressionStatement	basemap [ 9 ] = '9'	288:1:6771:6787	2722006	19	True				
ANR	2722137	AssignmentExpression	basemap [ 9 ] = '9'		2722006	0		=			
ANR	2722138	ArrayIndexing	basemap [ 9 ]		2722006	0					
ANR	2722139	Identifier	basemap		2722006	0					
ANR	2722140	PrimaryExpression	9		2722006	1					
ANR	2722141	PrimaryExpression	'9'		2722006	1					
ANR	2722142	ExpressionStatement	basemap [ 10 ] = 'a'	289:1:6790:6807	2722006	20	True				
ANR	2722143	AssignmentExpression	basemap [ 10 ] = 'a'		2722006	0		=			
ANR	2722144	ArrayIndexing	basemap [ 10 ]		2722006	0					
ANR	2722145	Identifier	basemap		2722006	0					
ANR	2722146	PrimaryExpression	10		2722006	1					
ANR	2722147	PrimaryExpression	'a'		2722006	1					
ANR	2722148	ExpressionStatement	basemap [ 11 ] = 'b'	290:1:6810:6827	2722006	21	True				
ANR	2722149	AssignmentExpression	basemap [ 11 ] = 'b'		2722006	0		=			
ANR	2722150	ArrayIndexing	basemap [ 11 ]		2722006	0					
ANR	2722151	Identifier	basemap		2722006	0					
ANR	2722152	PrimaryExpression	11		2722006	1					
ANR	2722153	PrimaryExpression	'b'		2722006	1					
ANR	2722154	ExpressionStatement	basemap [ 12 ] = 'c'	291:1:6830:6847	2722006	22	True				
ANR	2722155	AssignmentExpression	basemap [ 12 ] = 'c'		2722006	0		=			
ANR	2722156	ArrayIndexing	basemap [ 12 ]		2722006	0					
ANR	2722157	Identifier	basemap		2722006	0					
ANR	2722158	PrimaryExpression	12		2722006	1					
ANR	2722159	PrimaryExpression	'c'		2722006	1					
ANR	2722160	ExpressionStatement	basemap [ 13 ] = 'd'	292:1:6850:6867	2722006	23	True				
ANR	2722161	AssignmentExpression	basemap [ 13 ] = 'd'		2722006	0		=			
ANR	2722162	ArrayIndexing	basemap [ 13 ]		2722006	0					
ANR	2722163	Identifier	basemap		2722006	0					
ANR	2722164	PrimaryExpression	13		2722006	1					
ANR	2722165	PrimaryExpression	'd'		2722006	1					
ANR	2722166	ExpressionStatement	basemap [ 14 ] = 'e'	293:1:6870:6887	2722006	24	True				
ANR	2722167	AssignmentExpression	basemap [ 14 ] = 'e'		2722006	0		=			
ANR	2722168	ArrayIndexing	basemap [ 14 ]		2722006	0					
ANR	2722169	Identifier	basemap		2722006	0					
ANR	2722170	PrimaryExpression	14		2722006	1					
ANR	2722171	PrimaryExpression	'e'		2722006	1					
ANR	2722172	ExpressionStatement	basemap [ 15 ] = 'f'	294:1:6890:6907	2722006	25	True				
ANR	2722173	AssignmentExpression	basemap [ 15 ] = 'f'		2722006	0		=			
ANR	2722174	ArrayIndexing	basemap [ 15 ]		2722006	0					
ANR	2722175	Identifier	basemap		2722006	0					
ANR	2722176	PrimaryExpression	15		2722006	1					
ANR	2722177	PrimaryExpression	'f'		2722006	1					
ANR	2722178	SwitchStatement	switch ( base )		2722006	26					
ANR	2722179	Condition	base	297:9:6921:6924	2722006	0	True				
ANR	2722180	Identifier	base		2722006	0					
ANR	2722181	CompoundStatement		43:16:971:971	2722006	1					
ANR	2722182	Label	case HEXADECIMAL :	298:1:6931:6947	2722006	0	True				
ANR	2722183	Identifier	HEXADECIMAL		2722006	0					
ANR	2722184	ExpressionStatement	numchars = 0	299:2:6993:7005	2722006	1	True				
ANR	2722185	AssignmentExpression	numchars = 0		2722006	0		=			
ANR	2722186	Identifier	numchars		2722006	0					
ANR	2722187	PrimaryExpression	0		2722006	1					
ANR	2722188	ExpressionStatement	hexquant = ( unsigned long ) quantity	300:2:7009:7043	2722006	2	True				
ANR	2722189	AssignmentExpression	hexquant = ( unsigned long ) quantity		2722006	0		=			
ANR	2722190	Identifier	hexquant		2722006	0					
ANR	2722191	CastExpression	( unsigned long ) quantity		2722006	1					
ANR	2722192	CastTarget	unsigned long		2722006	0					
ANR	2722193	Identifier	quantity		2722006	1					
ANR	2722194	ExpressionStatement	mask = 0xffUL << ( ( sizeof ( unsigned long ) - 1 ) * 8 )	302:2:7050:7100	2722006	3	True				
ANR	2722195	AssignmentExpression	mask = 0xffUL << ( ( sizeof ( unsigned long ) - 1 ) * 8 )		2722006	0		=			
ANR	2722196	Identifier	mask		2722006	0					
ANR	2722197	ShiftExpression	0xffUL << ( ( sizeof ( unsigned long ) - 1 ) * 8 )		2722006	1		<<			
ANR	2722198	PrimaryExpression	0xffUL		2722006	0					
ANR	2722199	MultiplicativeExpression	( sizeof ( unsigned long ) - 1 ) * 8		2722006	1		*			
ANR	2722200	AdditiveExpression	sizeof ( unsigned long ) - 1		2722006	0		-			
ANR	2722201	SizeofExpression	sizeof ( unsigned long )		2722006	0					
ANR	2722202	Sizeof	sizeof		2722006	0					
ANR	2722203	SizeofOperand	unsigned long		2722006	1					
ANR	2722204	PrimaryExpression	1		2722006	1					
ANR	2722205	PrimaryExpression	8		2722006	1					
ANR	2722206	ForStatement	for ( i = 0 ; i < sizeof ( unsigned long ) ; i ++ )		2722006	4					
ANR	2722207	ForInit	i = 0 ;	305:7:7180:7183	2722006	0	True				
ANR	2722208	AssignmentExpression	i = 0		2722006	0		=			
ANR	2722209	Identifier	i		2722006	0					
ANR	2722210	PrimaryExpression	0		2722006	1					
ANR	2722211	Condition	i < sizeof ( unsigned long )	305:12:7185:7207	2722006	1	True				
ANR	2722212	RelationalExpression	i < sizeof ( unsigned long )		2722006	0		<			
ANR	2722213	Identifier	i		2722006	0					
ANR	2722214	SizeofExpression	sizeof ( unsigned long )		2722006	1					
ANR	2722215	Sizeof	sizeof		2722006	0					
ANR	2722216	SizeofOperand	unsigned long		2722006	1					
ANR	2722217	PostIncDecOperationExpression	i ++	305:37:7210:7212	2722006	2	True				
ANR	2722218	Identifier	i		2722006	0					
ANR	2722219	IncDec	++		2722006	1					
ANR	2722220	CompoundStatement		51:43:1259:1259	2722006	3					
ANR	2722221	ExpressionStatement	byte = ( unsigned char ) ( ( mask & hexquant ) >> ( sizeof ( unsigned long ) - i - 1 ) * 8 )	306:3:7221:7301	2722006	0	True				
ANR	2722222	AssignmentExpression	byte = ( unsigned char ) ( ( mask & hexquant ) >> ( sizeof ( unsigned long ) - i - 1 ) * 8 )		2722006	0		=			
ANR	2722223	Identifier	byte		2722006	0					
ANR	2722224	CastExpression	( unsigned char ) ( ( mask & hexquant ) >> ( sizeof ( unsigned long ) - i - 1 ) * 8 )		2722006	1					
ANR	2722225	CastTarget	unsigned char		2722006	0					
ANR	2722226	ShiftExpression	( mask & hexquant ) >> ( sizeof ( unsigned long ) - i - 1 ) * 8		2722006	1		>>			
ANR	2722227	BitAndExpression	mask & hexquant		2722006	0		&			
ANR	2722228	Identifier	mask		2722006	0					
ANR	2722229	Identifier	hexquant		2722006	1					
ANR	2722230	MultiplicativeExpression	( sizeof ( unsigned long ) - i - 1 ) * 8		2722006	1		*			
ANR	2722231	AdditiveExpression	sizeof ( unsigned long ) - i - 1		2722006	0		-			
ANR	2722232	SizeofExpression	sizeof ( unsigned long )		2722006	0					
ANR	2722233	Sizeof	sizeof		2722006	0					
ANR	2722234	SizeofOperand	unsigned long		2722006	1					
ANR	2722235	AdditiveExpression	i - 1		2722006	1		-			
ANR	2722236	Identifier	i		2722006	0					
ANR	2722237	PrimaryExpression	1		2722006	1					
ANR	2722238	PrimaryExpression	8		2722006	1					
ANR	2722239	ExpressionStatement	out [ i * 2 ] = basemap [ ( byte & 0xf0 ) >> 4 ]	308:3:7306:7340	2722006	1	True				
ANR	2722240	AssignmentExpression	out [ i * 2 ] = basemap [ ( byte & 0xf0 ) >> 4 ]		2722006	0		=			
ANR	2722241	ArrayIndexing	out [ i * 2 ]		2722006	0					
ANR	2722242	Identifier	out		2722006	0					
ANR	2722243	MultiplicativeExpression	i * 2		2722006	1		*			
ANR	2722244	Identifier	i		2722006	0					
ANR	2722245	PrimaryExpression	2		2722006	1					
ANR	2722246	ArrayIndexing	basemap [ ( byte & 0xf0 ) >> 4 ]		2722006	1					
ANR	2722247	Identifier	basemap		2722006	0					
ANR	2722248	ShiftExpression	( byte & 0xf0 ) >> 4		2722006	1		>>			
ANR	2722249	BitAndExpression	byte & 0xf0		2722006	0		&			
ANR	2722250	Identifier	byte		2722006	0					
ANR	2722251	PrimaryExpression	0xf0		2722006	1					
ANR	2722252	PrimaryExpression	4		2722006	1					
ANR	2722253	ExpressionStatement	out [ i * 2 + 1 ] = basemap [ byte & 0x0f ]	309:3:7345:7376	2722006	2	True				
ANR	2722254	AssignmentExpression	out [ i * 2 + 1 ] = basemap [ byte & 0x0f ]		2722006	0		=			
ANR	2722255	ArrayIndexing	out [ i * 2 + 1 ]		2722006	0					
ANR	2722256	Identifier	out		2722006	0					
ANR	2722257	AdditiveExpression	i * 2 + 1		2722006	1		+			
ANR	2722258	MultiplicativeExpression	i * 2		2722006	0		*			
ANR	2722259	Identifier	i		2722006	0					
ANR	2722260	PrimaryExpression	2		2722006	1					
ANR	2722261	PrimaryExpression	1		2722006	1					
ANR	2722262	ArrayIndexing	basemap [ byte & 0x0f ]		2722006	1					
ANR	2722263	Identifier	basemap		2722006	0					
ANR	2722264	BitAndExpression	byte & 0x0f		2722006	1		&			
ANR	2722265	Identifier	byte		2722006	0					
ANR	2722266	PrimaryExpression	0x0f		2722006	1					
ANR	2722267	ExpressionStatement	mask >>= 8	310:3:7381:7391	2722006	3	True				
ANR	2722268	AssignmentExpression	mask >>= 8		2722006	0		>>=			
ANR	2722269	Identifier	mask		2722006	0					
ANR	2722270	PrimaryExpression	8		2722006	1					
ANR	2722271	ExpressionStatement	out [ sizeof ( unsigned long ) * 2 ] = 0	312:2:7399:7431	2722006	5	True				
ANR	2722272	AssignmentExpression	out [ sizeof ( unsigned long ) * 2 ] = 0		2722006	0		=			
ANR	2722273	ArrayIndexing	out [ sizeof ( unsigned long ) * 2 ]		2722006	0					
ANR	2722274	Identifier	out		2722006	0					
ANR	2722275	MultiplicativeExpression	sizeof ( unsigned long ) * 2		2722006	1		*			
ANR	2722276	SizeofExpression	sizeof ( unsigned long )		2722006	0					
ANR	2722277	Sizeof	sizeof		2722006	0					
ANR	2722278	SizeofOperand	unsigned long		2722006	1					
ANR	2722279	PrimaryExpression	2		2722006	1					
ANR	2722280	PrimaryExpression	0		2722006	1					
ANR	2722281	ExpressionStatement	p = out	315:2:7476:7483	2722006	6	True				
ANR	2722282	AssignmentExpression	p = out		2722006	0		=			
ANR	2722283	Identifier	p		2722006	0					
ANR	2722284	Identifier	out		2722006	1					
ANR	2722285	WhileStatement	while ( * p == '0' )		2722006	7					
ANR	2722286	Condition	* p == '0'	316:9:7494:7502	2722006	0	True				
ANR	2722287	EqualityExpression	* p == '0'		2722006	0		==			
ANR	2722288	UnaryOperationExpression	* p		2722006	0					
ANR	2722289	UnaryOperator	*		2722006	0					
ANR	2722290	Identifier	p		2722006	1					
ANR	2722291	PrimaryExpression	'0'		2722006	1					
ANR	2722292	ExpressionStatement	p ++	316:21:7506:7509	2722006	1	True				
ANR	2722293	PostIncDecOperationExpression	p ++		2722006	0					
ANR	2722294	Identifier	p		2722006	0					
ANR	2722295	IncDec	++		2722006	1					
ANR	2722296	IfStatement	if ( p == out )		2722006	8					
ANR	2722297	Condition	p == out	320:6:7619:7626	2722006	0	True				
ANR	2722298	EqualityExpression	p == out		2722006	0		==			
ANR	2722299	Identifier	p		2722006	0					
ANR	2722300	Identifier	out		2722006	1					
ANR	2722301	CompoundStatement		66:17:1673:1673	2722006	1					
ANR	2722302	ReturnStatement	return sizeof ( unsigned long ) * 2 ;	321:3:7635:7665	2722006	0	True				
ANR	2722303	MultiplicativeExpression	sizeof ( unsigned long ) * 2		2722006	0		*			
ANR	2722304	SizeofExpression	sizeof ( unsigned long )		2722006	0					
ANR	2722305	Sizeof	sizeof		2722006	0					
ANR	2722306	SizeofOperand	unsigned long		2722006	1					
ANR	2722307	PrimaryExpression	2		2722006	1					
ANR	2722308	ExpressionStatement	numchars = ( sizeof ( unsigned long ) * 2 ) - ( p - out )	326:2:7841:7889	2722006	9	True				
ANR	2722309	AssignmentExpression	numchars = ( sizeof ( unsigned long ) * 2 ) - ( p - out )		2722006	0		=			
ANR	2722310	Identifier	numchars		2722006	0					
ANR	2722311	AdditiveExpression	( sizeof ( unsigned long ) * 2 ) - ( p - out )		2722006	1		-			
ANR	2722312	MultiplicativeExpression	sizeof ( unsigned long ) * 2		2722006	0		*			
ANR	2722313	SizeofExpression	sizeof ( unsigned long )		2722006	0					
ANR	2722314	Sizeof	sizeof		2722006	0					
ANR	2722315	SizeofOperand	unsigned long		2722006	1					
ANR	2722316	PrimaryExpression	2		2722006	1					
ANR	2722317	AdditiveExpression	p - out		2722006	1		-			
ANR	2722318	Identifier	p		2722006	0					
ANR	2722319	Identifier	out		2722006	1					
ANR	2722320	ExpressionStatement	q = out	329:2:7933:7940	2722006	10	True				
ANR	2722321	AssignmentExpression	q = out		2722006	0		=			
ANR	2722322	Identifier	q		2722006	0					
ANR	2722323	Identifier	out		2722006	1					
ANR	2722324	WhileStatement	while ( * p != '\\0' )		2722006	11					
ANR	2722325	Condition	* p != '\\0'	330:9:7951:7960	2722006	0	True				
ANR	2722326	EqualityExpression	* p != '\\0'		2722006	0		!=			
ANR	2722327	UnaryOperationExpression	* p		2722006	0					
ANR	2722328	UnaryOperator	*		2722006	0					
ANR	2722329	Identifier	p		2722006	1					
ANR	2722330	PrimaryExpression	'\\0'		2722006	1					
ANR	2722331	CompoundStatement		76:22:2007:2007	2722006	1					
ANR	2722332	ExpressionStatement	* q ++ = * p ++	331:3:7969:7980	2722006	0	True				
ANR	2722333	AssignmentExpression	* q ++ = * p ++		2722006	0		=			
ANR	2722334	UnaryOperationExpression	* q ++		2722006	0					
ANR	2722335	UnaryOperator	*		2722006	0					
ANR	2722336	PostIncDecOperationExpression	q ++		2722006	1					
ANR	2722337	Identifier	q		2722006	0					
ANR	2722338	IncDec	++		2722006	1					
ANR	2722339	UnaryOperationExpression	* p ++		2722006	1					
ANR	2722340	UnaryOperator	*		2722006	0					
ANR	2722341	PostIncDecOperationExpression	p ++		2722006	1					
ANR	2722342	Identifier	p		2722006	0					
ANR	2722343	IncDec	++		2722006	1					
ANR	2722344	ExpressionStatement	* q = 0	333:2:7988:7994	2722006	12	True				
ANR	2722345	AssignmentExpression	* q = 0		2722006	0		=			
ANR	2722346	UnaryOperationExpression	* q		2722006	0					
ANR	2722347	UnaryOperator	*		2722006	0					
ANR	2722348	Identifier	q		2722006	1					
ANR	2722349	PrimaryExpression	0		2722006	1					
ANR	2722350	ReturnStatement	return numchars ;	335:2:7999:8014	2722006	13	True				
ANR	2722351	Identifier	numchars		2722006	0					
ANR	2722352	BreakStatement	break ;	336:2:8018:8023	2722006	14	True				
ANR	2722353	Label	case OCTAL :	338:1:8029:8039	2722006	15	True				
ANR	2722354	Identifier	OCTAL		2722006	0					
ANR	2722355	ExpressionStatement	octquant = ( unsigned int ) quantity	339:2:8093:8126	2722006	16	True				
ANR	2722356	AssignmentExpression	octquant = ( unsigned int ) quantity		2722006	0		=			
ANR	2722357	Identifier	octquant		2722006	0					
ANR	2722358	CastExpression	( unsigned int ) quantity		2722006	1					
ANR	2722359	CastTarget	unsigned int		2722006	0					
ANR	2722360	Identifier	quantity		2722006	1					
ANR	2722361	ExpressionStatement	mask = 0xc0000000	340:2:8130:8147	2722006	17	True				
ANR	2722362	AssignmentExpression	mask = 0xc0000000		2722006	0		=			
ANR	2722363	Identifier	mask		2722006	0					
ANR	2722364	PrimaryExpression	0xc0000000		2722006	1					
ANR	2722365	ExpressionStatement	byte = ( mask & octquant ) >> 30	341:2:8151:8181	2722006	18	True				
ANR	2722366	AssignmentExpression	byte = ( mask & octquant ) >> 30		2722006	0		=			
ANR	2722367	Identifier	byte		2722006	0					
ANR	2722368	ShiftExpression	( mask & octquant ) >> 30		2722006	1		>>			
ANR	2722369	BitAndExpression	mask & octquant		2722006	0		&			
ANR	2722370	Identifier	mask		2722006	0					
ANR	2722371	Identifier	octquant		2722006	1					
ANR	2722372	PrimaryExpression	30		2722006	1					
ANR	2722373	ExpressionStatement	out [ 0 ] = basemap [ byte ]	342:2:8185:8207	2722006	19	True				
ANR	2722374	AssignmentExpression	out [ 0 ] = basemap [ byte ]		2722006	0		=			
ANR	2722375	ArrayIndexing	out [ 0 ]		2722006	0					
ANR	2722376	Identifier	out		2722006	0					
ANR	2722377	PrimaryExpression	0		2722006	1					
ANR	2722378	ArrayIndexing	basemap [ byte ]		2722006	1					
ANR	2722379	Identifier	basemap		2722006	0					
ANR	2722380	Identifier	byte		2722006	1					
ANR	2722381	ExpressionStatement	numchars = 1	343:2:8211:8223	2722006	20	True				
ANR	2722382	AssignmentExpression	numchars = 1		2722006	0		=			
ANR	2722383	Identifier	numchars		2722006	0					
ANR	2722384	PrimaryExpression	1		2722006	1					
ANR	2722385	ExpressionStatement	mask = 0x38000000	345:2:8230:8247	2722006	21	True				
ANR	2722386	AssignmentExpression	mask = 0x38000000		2722006	0		=			
ANR	2722387	Identifier	mask		2722006	0					
ANR	2722388	PrimaryExpression	0x38000000		2722006	1					
ANR	2722389	ForStatement	for ( i = 27 ; i >= 0 ; i -= 3 )		2722006	22					
ANR	2722390	ForInit	i = 27 ;	347:7:8257:8263	2722006	0	True				
ANR	2722391	AssignmentExpression	i = 27		2722006	0		=			
ANR	2722392	Identifier	i		2722006	0					
ANR	2722393	PrimaryExpression	27		2722006	1					
ANR	2722394	Condition	i >= 0	347:15:8265:8270	2722006	1	True				
ANR	2722395	RelationalExpression	i >= 0		2722006	0		>=			
ANR	2722396	Identifier	i		2722006	0					
ANR	2722397	PrimaryExpression	0		2722006	1					
ANR	2722398	AssignmentExpression	i -= 3	347:23:8273:8276	2722006	2	True	-=			
ANR	2722399	Identifier	i		2722006	0					
ANR	2722400	PrimaryExpression	3		2722006	1					
ANR	2722401	CompoundStatement		93:30:2323:2323	2722006	3					
ANR	2722402	ExpressionStatement	byte = ( mask & octquant ) >> i	348:3:8285:8314	2722006	0	True				
ANR	2722403	AssignmentExpression	byte = ( mask & octquant ) >> i		2722006	0		=			
ANR	2722404	Identifier	byte		2722006	0					
ANR	2722405	ShiftExpression	( mask & octquant ) >> i		2722006	1		>>			
ANR	2722406	BitAndExpression	mask & octquant		2722006	0		&			
ANR	2722407	Identifier	mask		2722006	0					
ANR	2722408	Identifier	octquant		2722006	1					
ANR	2722409	Identifier	i		2722006	1					
ANR	2722410	ExpressionStatement	out [ numchars ++ ] = basemap [ byte ]	349:3:8319:8350	2722006	1	True				
ANR	2722411	AssignmentExpression	out [ numchars ++ ] = basemap [ byte ]		2722006	0		=			
ANR	2722412	ArrayIndexing	out [ numchars ++ ]		2722006	0					
ANR	2722413	Identifier	out		2722006	0					
ANR	2722414	PostIncDecOperationExpression	numchars ++		2722006	1					
ANR	2722415	Identifier	numchars		2722006	0					
ANR	2722416	IncDec	++		2722006	1					
ANR	2722417	ArrayIndexing	basemap [ byte ]		2722006	1					
ANR	2722418	Identifier	basemap		2722006	0					
ANR	2722419	Identifier	byte		2722006	1					
ANR	2722420	ExpressionStatement	mask >>= 3	350:3:8355:8365	2722006	2	True				
ANR	2722421	AssignmentExpression	mask >>= 3		2722006	0		>>=			
ANR	2722422	Identifier	mask		2722006	0					
ANR	2722423	PrimaryExpression	3		2722006	1					
ANR	2722424	ExpressionStatement	out [ numchars ] = 0	352:2:8373:8390	2722006	23	True				
ANR	2722425	AssignmentExpression	out [ numchars ] = 0		2722006	0		=			
ANR	2722426	ArrayIndexing	out [ numchars ]		2722006	0					
ANR	2722427	Identifier	out		2722006	0					
ANR	2722428	Identifier	numchars		2722006	1					
ANR	2722429	PrimaryExpression	0		2722006	1					
ANR	2722430	ExpressionStatement	p = out	355:2:8435:8442	2722006	24	True				
ANR	2722431	AssignmentExpression	p = out		2722006	0		=			
ANR	2722432	Identifier	p		2722006	0					
ANR	2722433	Identifier	out		2722006	1					
ANR	2722434	WhileStatement	while ( * p == '0' )		2722006	25					
ANR	2722435	Condition	* p == '0'	356:9:8453:8461	2722006	0	True				
ANR	2722436	EqualityExpression	* p == '0'		2722006	0		==			
ANR	2722437	UnaryOperationExpression	* p		2722006	0					
ANR	2722438	UnaryOperator	*		2722006	0					
ANR	2722439	Identifier	p		2722006	1					
ANR	2722440	PrimaryExpression	'0'		2722006	1					
ANR	2722441	ExpressionStatement	p ++	356:21:8465:8468	2722006	1	True				
ANR	2722442	PostIncDecOperationExpression	p ++		2722006	0					
ANR	2722443	Identifier	p		2722006	0					
ANR	2722444	IncDec	++		2722006	1					
ANR	2722445	IfStatement	if ( p == out )		2722006	26					
ANR	2722446	Condition	p == out	359:6:8505:8512	2722006	0	True				
ANR	2722447	EqualityExpression	p == out		2722006	0		==			
ANR	2722448	Identifier	p		2722006	0					
ANR	2722449	Identifier	out		2722006	1					
ANR	2722450	CompoundStatement		105:17:2559:2559	2722006	1					
ANR	2722451	ReturnStatement	return 8 ;	360:3:8521:8529	2722006	0	True				
ANR	2722452	PrimaryExpression	8		2722006	0					
ANR	2722453	ExpressionStatement	numchars = 8 - ( p - out )	362:2:8537:8561	2722006	27	True				
ANR	2722454	AssignmentExpression	numchars = 8 - ( p - out )		2722006	0		=			
ANR	2722455	Identifier	numchars		2722006	0					
ANR	2722456	AdditiveExpression	8 - ( p - out )		2722006	1		-			
ANR	2722457	PrimaryExpression	8		2722006	0					
ANR	2722458	AdditiveExpression	p - out		2722006	1		-			
ANR	2722459	Identifier	p		2722006	0					
ANR	2722460	Identifier	out		2722006	1					
ANR	2722461	ExpressionStatement	q = out	365:2:8603:8610	2722006	28	True				
ANR	2722462	AssignmentExpression	q = out		2722006	0		=			
ANR	2722463	Identifier	q		2722006	0					
ANR	2722464	Identifier	out		2722006	1					
ANR	2722465	WhileStatement	while ( * p != '\\0' )		2722006	29					
ANR	2722466	Condition	* p != '\\0'	366:9:8621:8630	2722006	0	True				
ANR	2722467	EqualityExpression	* p != '\\0'		2722006	0		!=			
ANR	2722468	UnaryOperationExpression	* p		2722006	0					
ANR	2722469	UnaryOperator	*		2722006	0					
ANR	2722470	Identifier	p		2722006	1					
ANR	2722471	PrimaryExpression	'\\0'		2722006	1					
ANR	2722472	CompoundStatement		112:22:2677:2677	2722006	1					
ANR	2722473	ExpressionStatement	* q ++ = * p ++	367:3:8639:8650	2722006	0	True				
ANR	2722474	AssignmentExpression	* q ++ = * p ++		2722006	0		=			
ANR	2722475	UnaryOperationExpression	* q ++		2722006	0					
ANR	2722476	UnaryOperator	*		2722006	0					
ANR	2722477	PostIncDecOperationExpression	q ++		2722006	1					
ANR	2722478	Identifier	q		2722006	0					
ANR	2722479	IncDec	++		2722006	1					
ANR	2722480	UnaryOperationExpression	* p ++		2722006	1					
ANR	2722481	UnaryOperator	*		2722006	0					
ANR	2722482	PostIncDecOperationExpression	p ++		2722006	1					
ANR	2722483	Identifier	p		2722006	0					
ANR	2722484	IncDec	++		2722006	1					
ANR	2722485	ExpressionStatement	* q = 0	369:2:8658:8664	2722006	30	True				
ANR	2722486	AssignmentExpression	* q = 0		2722006	0		=			
ANR	2722487	UnaryOperationExpression	* q		2722006	0					
ANR	2722488	UnaryOperator	*		2722006	0					
ANR	2722489	Identifier	q		2722006	1					
ANR	2722490	PrimaryExpression	0		2722006	1					
ANR	2722491	ReturnStatement	return numchars ;	371:2:8669:8684	2722006	31	True				
ANR	2722492	Identifier	numchars		2722006	0					
ANR	2722493	BreakStatement	break ;	372:2:8688:8693	2722006	32	True				
ANR	2722494	Label	case DECIMAL :	374:1:8697:8709	2722006	33	True				
ANR	2722495	Identifier	DECIMAL		2722006	0					
ANR	2722496	ExpressionStatement	sum = 1	375:2:8759:8766	2722006	34	True				
ANR	2722497	AssignmentExpression	sum = 1		2722006	0		=			
ANR	2722498	Identifier	sum		2722006	0					
ANR	2722499	PrimaryExpression	1		2722006	1					
ANR	2722500	ExpressionStatement	numchars = 0	376:2:8770:8782	2722006	35	True				
ANR	2722501	AssignmentExpression	numchars = 0		2722006	0		=			
ANR	2722502	Identifier	numchars		2722006	0					
ANR	2722503	PrimaryExpression	0		2722006	1					
ANR	2722504	IfStatement	if ( quantity == 0 )		2722006	36					
ANR	2722505	Condition	quantity == 0	379:6:8818:8830	2722006	0	True				
ANR	2722506	EqualityExpression	quantity == 0		2722006	0		==			
ANR	2722507	Identifier	quantity		2722006	0					
ANR	2722508	PrimaryExpression	0		2722006	1					
ANR	2722509	CompoundStatement		125:22:2877:2877	2722006	1					
ANR	2722510	ExpressionStatement	out [ 0 ] = '0'	380:3:8839:8851	2722006	0	True				
ANR	2722511	AssignmentExpression	out [ 0 ] = '0'		2722006	0		=			
ANR	2722512	ArrayIndexing	out [ 0 ]		2722006	0					
ANR	2722513	Identifier	out		2722006	0					
ANR	2722514	PrimaryExpression	0		2722006	1					
ANR	2722515	PrimaryExpression	'0'		2722006	1					
ANR	2722516	ExpressionStatement	out [ 1 ] = 0	381:3:8856:8866	2722006	1	True				
ANR	2722517	AssignmentExpression	out [ 1 ] = 0		2722006	0		=			
ANR	2722518	ArrayIndexing	out [ 1 ]		2722006	0					
ANR	2722519	Identifier	out		2722006	0					
ANR	2722520	PrimaryExpression	1		2722006	1					
ANR	2722521	PrimaryExpression	0		2722006	1					
ANR	2722522	ReturnStatement	return 1 ;	382:3:8871:8879	2722006	2	True				
ANR	2722523	PrimaryExpression	1		2722006	0					
ANR	2722524	IfStatement	if ( sizeof ( int ) == 4 )		2722006	37					
ANR	2722525	Condition	sizeof ( int ) == 4	386:6:8945:8960	2722006	0	True				
ANR	2722526	EqualityExpression	sizeof ( int ) == 4		2722006	0		==			
ANR	2722527	SizeofExpression	sizeof ( int )		2722006	0					
ANR	2722528	Sizeof	sizeof		2722006	0					
ANR	2722529	SizeofOperand	int		2722006	1					
ANR	2722530	PrimaryExpression	4		2722006	1					
ANR	2722531	CompoundStatement		132:24:3006:3006	2722006	1					
ANR	2722532	ExpressionStatement	maxchars = 10	387:3:8968:8981	2722006	0	True				
ANR	2722533	AssignmentExpression	maxchars = 10		2722006	0		=			
ANR	2722534	Identifier	maxchars		2722006	0					
ANR	2722535	PrimaryExpression	10		2722006	1					
ANR	2722536	ElseStatement	else		2722006	0					
ANR	2722537	IfStatement	if ( sizeof ( int ) == 8 )		2722006	0					
ANR	2722538	Condition	sizeof ( int ) == 8	388:13:8996:9011	2722006	0	True				
ANR	2722539	EqualityExpression	sizeof ( int ) == 8		2722006	0		==			
ANR	2722540	SizeofExpression	sizeof ( int )		2722006	0					
ANR	2722541	Sizeof	sizeof		2722006	0					
ANR	2722542	SizeofOperand	int		2722006	1					
ANR	2722543	PrimaryExpression	8		2722006	1					
ANR	2722544	CompoundStatement		134:31:3057:3057	2722006	1					
ANR	2722545	ExpressionStatement	maxchars = 20	389:3:9019:9032	2722006	0	True				
ANR	2722546	AssignmentExpression	maxchars = 20		2722006	0		=			
ANR	2722547	Identifier	maxchars		2722006	0					
ANR	2722548	PrimaryExpression	20		2722006	1					
ANR	2722549	ElseStatement	else		2722006	0					
ANR	2722550	CompoundStatement		136:9:3086:3086	2722006	0					
ANR	2722551	ExpressionStatement	maxchars = 10	391:3:9048:9061	2722006	0	True				
ANR	2722552	AssignmentExpression	maxchars = 10		2722006	0		=			
ANR	2722553	Identifier	maxchars		2722006	0					
ANR	2722554	PrimaryExpression	10		2722006	1					
ANR	2722555	ForStatement	for ( i = 1 ; i <= maxchars ; i ++ )		2722006	38					
ANR	2722556	ForInit	i = 1 ;	393:7:9101:9106	2722006	0	True				
ANR	2722557	AssignmentExpression	i = 1		2722006	0		=			
ANR	2722558	Identifier	i		2722006	0					
ANR	2722559	PrimaryExpression	1		2722006	1					
ANR	2722560	Condition	i <= maxchars	393:14:9108:9120	2722006	1	True				
ANR	2722561	RelationalExpression	i <= maxchars		2722006	0		<=			
ANR	2722562	Identifier	i		2722006	0					
ANR	2722563	Identifier	maxchars		2722006	1					
ANR	2722564	PostIncDecOperationExpression	i ++	393:29:9123:9125	2722006	2	True				
ANR	2722565	Identifier	i		2722006	0					
ANR	2722566	IncDec	++		2722006	1					
ANR	2722567	CompoundStatement		139:35:3172:3172	2722006	3					
ANR	2722568	ExpressionStatement	out [ numchars ] = 0	394:3:9134:9151	2722006	0	True				
ANR	2722569	AssignmentExpression	out [ numchars ] = 0		2722006	0		=			
ANR	2722570	ArrayIndexing	out [ numchars ]		2722006	0					
ANR	2722571	Identifier	out		2722006	0					
ANR	2722572	Identifier	numchars		2722006	1					
ANR	2722573	PrimaryExpression	0		2722006	1					
ANR	2722574	ExpressionStatement	divi = quantity / sum	395:3:9156:9177	2722006	1	True				
ANR	2722575	AssignmentExpression	divi = quantity / sum		2722006	0		=			
ANR	2722576	Identifier	divi		2722006	0					
ANR	2722577	MultiplicativeExpression	quantity / sum		2722006	1		/			
ANR	2722578	Identifier	quantity		2722006	0					
ANR	2722579	Identifier	sum		2722006	1					
ANR	2722580	ExpressionStatement	sum *= 10	396:3:9182:9191	2722006	2	True				
ANR	2722581	AssignmentExpression	sum *= 10		2722006	0		*=			
ANR	2722582	Identifier	sum		2722006	0					
ANR	2722583	PrimaryExpression	10		2722006	1					
ANR	2722584	ExpressionStatement	mod = divi % 10	397:3:9196:9211	2722006	3	True				
ANR	2722585	AssignmentExpression	mod = divi % 10		2722006	0		=			
ANR	2722586	Identifier	mod		2722006	0					
ANR	2722587	MultiplicativeExpression	divi % 10		2722006	1		%			
ANR	2722588	Identifier	divi		2722006	0					
ANR	2722589	PrimaryExpression	10		2722006	1					
ANR	2722590	IfStatement	if ( divi == 0 )		2722006	4					
ANR	2722591	Condition	divi == 0	398:7:9220:9228	2722006	0	True				
ANR	2722592	EqualityExpression	divi == 0		2722006	0		==			
ANR	2722593	Identifier	divi		2722006	0					
ANR	2722594	PrimaryExpression	0		2722006	1					
ANR	2722595	BreakStatement	break ;	398:18:9231:9236	2722006	1	True				
ANR	2722596	ExpressionStatement	out [ numchars ] = basemap [ ABS ( mod ) ]	399:3:9241:9274	2722006	5	True				
ANR	2722597	AssignmentExpression	out [ numchars ] = basemap [ ABS ( mod ) ]		2722006	0		=			
ANR	2722598	ArrayIndexing	out [ numchars ]		2722006	0					
ANR	2722599	Identifier	out		2722006	0					
ANR	2722600	Identifier	numchars		2722006	1					
ANR	2722601	ArrayIndexing	basemap [ ABS ( mod ) ]		2722006	1					
ANR	2722602	Identifier	basemap		2722006	0					
ANR	2722603	CallExpression	ABS ( mod )		2722006	1					
ANR	2722604	Callee	ABS		2722006	0					
ANR	2722605	Identifier	ABS		2722006	0					
ANR	2722606	ArgumentList	mod		2722006	1					
ANR	2722607	Argument	mod		2722006	0					
ANR	2722608	Identifier	mod		2722006	0					
ANR	2722609	ExpressionStatement	numchars ++	400:3:9279:9289	2722006	6	True				
ANR	2722610	PostIncDecOperationExpression	numchars ++		2722006	0					
ANR	2722611	Identifier	numchars		2722006	0					
ANR	2722612	IncDec	++		2722006	1					
ANR	2722613	IfStatement	if ( quantity < 0 )		2722006	39					
ANR	2722614	Condition	quantity < 0	402:6:9301:9312	2722006	0	True				
ANR	2722615	RelationalExpression	quantity < 0		2722006	0		<			
ANR	2722616	Identifier	quantity		2722006	0					
ANR	2722617	PrimaryExpression	0		2722006	1					
ANR	2722618	CompoundStatement		148:21:3359:3359	2722006	1					
ANR	2722619	ExpressionStatement	out [ numchars ++ ] = '-'	403:3:9321:9342	2722006	0	True				
ANR	2722620	AssignmentExpression	out [ numchars ++ ] = '-'		2722006	0		=			
ANR	2722621	ArrayIndexing	out [ numchars ++ ]		2722006	0					
ANR	2722622	Identifier	out		2722006	0					
ANR	2722623	PostIncDecOperationExpression	numchars ++		2722006	1					
ANR	2722624	Identifier	numchars		2722006	0					
ANR	2722625	IncDec	++		2722006	1					
ANR	2722626	PrimaryExpression	'-'		2722006	1					
ANR	2722627	ExpressionStatement	out [ numchars ] = 0	405:2:9350:9367	2722006	40	True				
ANR	2722628	AssignmentExpression	out [ numchars ] = 0		2722006	0		=			
ANR	2722629	ArrayIndexing	out [ numchars ]		2722006	0					
ANR	2722630	Identifier	out		2722006	0					
ANR	2722631	Identifier	numchars		2722006	1					
ANR	2722632	PrimaryExpression	0		2722006	1					
ANR	2722633	ExpressionStatement	p = q = out	410:2:9462:9473	2722006	41	True				
ANR	2722634	AssignmentExpression	p = q = out		2722006	0		=			
ANR	2722635	Identifier	p		2722006	0					
ANR	2722636	AssignmentExpression	q = out		2722006	1		=			
ANR	2722637	Identifier	q		2722006	0					
ANR	2722638	Identifier	out		2722006	1					
ANR	2722639	WhileStatement	while ( * q != '\\0' )		2722006	42					
ANR	2722640	Condition	* q != '\\0'	411:9:9484:9493	2722006	0	True				
ANR	2722641	EqualityExpression	* q != '\\0'		2722006	0		!=			
ANR	2722642	UnaryOperationExpression	* q		2722006	0					
ANR	2722643	UnaryOperator	*		2722006	0					
ANR	2722644	Identifier	q		2722006	1					
ANR	2722645	PrimaryExpression	'\\0'		2722006	1					
ANR	2722646	ExpressionStatement	q ++	411:22:9497:9500	2722006	1	True				
ANR	2722647	PostIncDecOperationExpression	q ++		2722006	0					
ANR	2722648	Identifier	q		2722006	0					
ANR	2722649	IncDec	++		2722006	1					
ANR	2722650	ExpressionStatement	q --	412:2:9504:9507	2722006	43	True				
ANR	2722651	PostIncDecOperationExpression	q --		2722006	0					
ANR	2722652	Identifier	q		2722006	0					
ANR	2722653	IncDec	--		2722006	1					
ANR	2722654	WhileStatement	while ( p != q && q > p )		2722006	44					
ANR	2722655	Condition	p != q && q > p	415:9:9568:9582	2722006	0	True				
ANR	2722656	AndExpression	p != q && q > p		2722006	0		&&			
ANR	2722657	EqualityExpression	p != q		2722006	0		!=			
ANR	2722658	Identifier	p		2722006	0					
ANR	2722659	Identifier	q		2722006	1					
ANR	2722660	RelationalExpression	q > p		2722006	1		>			
ANR	2722661	Identifier	q		2722006	0					
ANR	2722662	Identifier	p		2722006	1					
ANR	2722663	CompoundStatement		161:27:3629:3629	2722006	1					
ANR	2722664	ExpressionStatement	* p ^= * q	417:3:9630:9638	2722006	0	True				
ANR	2722665	AssignmentExpression	* p ^= * q		2722006	0		^=			
ANR	2722666	UnaryOperationExpression	* p		2722006	0					
ANR	2722667	UnaryOperator	*		2722006	0					
ANR	2722668	Identifier	p		2722006	1					
ANR	2722669	UnaryOperationExpression	* q		2722006	1					
ANR	2722670	UnaryOperator	*		2722006	0					
ANR	2722671	Identifier	q		2722006	1					
ANR	2722672	ExpressionStatement	* q ^= * p	418:3:9643:9651	2722006	1	True				
ANR	2722673	AssignmentExpression	* q ^= * p		2722006	0		^=			
ANR	2722674	UnaryOperationExpression	* q		2722006	0					
ANR	2722675	UnaryOperator	*		2722006	0					
ANR	2722676	Identifier	q		2722006	1					
ANR	2722677	UnaryOperationExpression	* p		2722006	1					
ANR	2722678	UnaryOperator	*		2722006	0					
ANR	2722679	Identifier	p		2722006	1					
ANR	2722680	ExpressionStatement	* p ^= * q	419:3:9656:9664	2722006	2	True				
ANR	2722681	AssignmentExpression	* p ^= * q		2722006	0		^=			
ANR	2722682	UnaryOperationExpression	* p		2722006	0					
ANR	2722683	UnaryOperator	*		2722006	0					
ANR	2722684	Identifier	p		2722006	1					
ANR	2722685	UnaryOperationExpression	* q		2722006	1					
ANR	2722686	UnaryOperator	*		2722006	0					
ANR	2722687	Identifier	q		2722006	1					
ANR	2722688	ExpressionStatement	* p ++	420:3:9669:9673	2722006	3	True				
ANR	2722689	UnaryOperationExpression	* p ++		2722006	0					
ANR	2722690	UnaryOperator	*		2722006	0					
ANR	2722691	PostIncDecOperationExpression	p ++		2722006	1					
ANR	2722692	Identifier	p		2722006	0					
ANR	2722693	IncDec	++		2722006	1					
ANR	2722694	ExpressionStatement	* q --	420:9:9675:9679	2722006	4	True				
ANR	2722695	UnaryOperationExpression	* q --		2722006	0					
ANR	2722696	UnaryOperator	*		2722006	0					
ANR	2722697	PostIncDecOperationExpression	q --		2722006	1					
ANR	2722698	Identifier	q		2722006	0					
ANR	2722699	IncDec	--		2722006	1					
ANR	2722700	ReturnStatement	return numchars ;	422:2:9687:9702	2722006	45	True				
ANR	2722701	Identifier	numchars		2722006	0					
ANR	2722702	BreakStatement	break ;	423:2:9706:9711	2722006	46	True				
ANR	2722703	Label	default :	425:1:9715:9722	2722006	47	True				
ANR	2722704	Identifier	default		2722006	0					
ANR	2722705	ExpressionStatement	out [ 0 ] = 'N'	426:2:9726:9738	2722006	48	True				
ANR	2722706	AssignmentExpression	out [ 0 ] = 'N'		2722006	0		=			
ANR	2722707	ArrayIndexing	out [ 0 ]		2722006	0					
ANR	2722708	Identifier	out		2722006	0					
ANR	2722709	PrimaryExpression	0		2722006	1					
ANR	2722710	PrimaryExpression	'N'		2722006	1					
ANR	2722711	ExpressionStatement	out [ 1 ] = '/'	427:2:9742:9754	2722006	49	True				
ANR	2722712	AssignmentExpression	out [ 1 ] = '/'		2722006	0		=			
ANR	2722713	ArrayIndexing	out [ 1 ]		2722006	0					
ANR	2722714	Identifier	out		2722006	0					
ANR	2722715	PrimaryExpression	1		2722006	1					
ANR	2722716	PrimaryExpression	'/'		2722006	1					
ANR	2722717	ExpressionStatement	out [ 2 ] = 'A'	428:2:9758:9770	2722006	50	True				
ANR	2722718	AssignmentExpression	out [ 2 ] = 'A'		2722006	0		=			
ANR	2722719	ArrayIndexing	out [ 2 ]		2722006	0					
ANR	2722720	Identifier	out		2722006	0					
ANR	2722721	PrimaryExpression	2		2722006	1					
ANR	2722722	PrimaryExpression	'A'		2722006	1					
ANR	2722723	ExpressionStatement	out [ 3 ] = 0	429:2:9774:9784	2722006	51	True				
ANR	2722724	AssignmentExpression	out [ 3 ] = 0		2722006	0		=			
ANR	2722725	ArrayIndexing	out [ 3 ]		2722006	0					
ANR	2722726	Identifier	out		2722006	0					
ANR	2722727	PrimaryExpression	3		2722006	1					
ANR	2722728	PrimaryExpression	0		2722006	1					
ANR	2722729	ReturnStatement	return 3 ;	430:2:9788:9796	2722006	52	True				
ANR	2722730	PrimaryExpression	3		2722006	0					
ANR	2722731	BreakStatement	break ;	431:2:9800:9805	2722006	53	True				
ANR	2722732	ExpressionStatement	out [ 0 ] = 'N'	435:1:9872:9884	2722006	27	True				
ANR	2722733	AssignmentExpression	out [ 0 ] = 'N'		2722006	0		=			
ANR	2722734	ArrayIndexing	out [ 0 ]		2722006	0					
ANR	2722735	Identifier	out		2722006	0					
ANR	2722736	PrimaryExpression	0		2722006	1					
ANR	2722737	PrimaryExpression	'N'		2722006	1					
ANR	2722738	ExpressionStatement	out [ 1 ] = '/'	436:1:9887:9899	2722006	28	True				
ANR	2722739	AssignmentExpression	out [ 1 ] = '/'		2722006	0		=			
ANR	2722740	ArrayIndexing	out [ 1 ]		2722006	0					
ANR	2722741	Identifier	out		2722006	0					
ANR	2722742	PrimaryExpression	1		2722006	1					
ANR	2722743	PrimaryExpression	'/'		2722006	1					
ANR	2722744	ExpressionStatement	out [ 2 ] = 'A'	437:1:9902:9914	2722006	29	True				
ANR	2722745	AssignmentExpression	out [ 2 ] = 'A'		2722006	0		=			
ANR	2722746	ArrayIndexing	out [ 2 ]		2722006	0					
ANR	2722747	Identifier	out		2722006	0					
ANR	2722748	PrimaryExpression	2		2722006	1					
ANR	2722749	PrimaryExpression	'A'		2722006	1					
ANR	2722750	ExpressionStatement	out [ 3 ] = 0	438:1:9917:9927	2722006	30	True				
ANR	2722751	AssignmentExpression	out [ 3 ] = 0		2722006	0		=			
ANR	2722752	ArrayIndexing	out [ 3 ]		2722006	0					
ANR	2722753	Identifier	out		2722006	0					
ANR	2722754	PrimaryExpression	3		2722006	1					
ANR	2722755	PrimaryExpression	0		2722006	1					
ANR	2722756	ReturnStatement	return 3 ;	439:1:9930:9938	2722006	31	True				
ANR	2722757	PrimaryExpression	3		2722006	0					
ANR	2722758	ReturnType	int		2722006	1					
ANR	2722759	Identifier	_condor_itoa		2722006	2					
ANR	2722760	ParameterList	"long quantity , char * out , int base"		2722006	3					
ANR	2722761	Parameter	long quantity	254:13:5920:5932	2722006	0	True				
ANR	2722762	ParameterType	long		2722006	0					
ANR	2722763	Identifier	quantity		2722006	1					
ANR	2722764	Parameter	char * out	254:28:5935:5943	2722006	1	True				
ANR	2722765	ParameterType	char *		2722006	0					
ANR	2722766	Identifier	out		2722006	1					
ANR	2722767	Parameter	int base	254:39:5946:5953	2722006	2	True				
ANR	2722768	ParameterType	int		2722006	0					
ANR	2722769	Identifier	base		2722006	1					
ANR	2722770	CFGEntryNode	ENTRY		2722006		True				
ANR	2722771	CFGExitNode	EXIT		2722006		True				
ANR	2722772	Symbol	mod		2722006						
ANR	2722773	Symbol	* ABS		2722006						
ANR	2722774	Symbol	basemap		2722006						
ANR	2722775	Symbol	* q ++		2722006						
ANR	2722776	Symbol	numchars		2722006						
ANR	2722777	Symbol	sum		2722006						
ANR	2722778	Symbol	hexquant		2722006						
ANR	2722779	Symbol	out		2722006						
ANR	2722780	Symbol	ABS		2722006						
ANR	2722781	Symbol	divi		2722006						
ANR	2722782	Symbol	mask		2722006						
ANR	2722783	Symbol	* byte		2722006						
ANR	2722784	Symbol	quantity		2722006						
ANR	2722785	Symbol	byte		2722006						
ANR	2722786	Symbol	* p ++		2722006						
ANR	2722787	Symbol	i		2722006						
ANR	2722788	Symbol	octquant		2722006						
ANR	2722789	Symbol	p		2722006						
ANR	2722790	Symbol	q		2722006						
ANR	2722791	Symbol	* i		2722006						
ANR	2722792	Symbol	* numchars		2722006						
ANR	2722793	Symbol	* out		2722006						
ANR	2722794	Symbol	* basemap		2722006						
ANR	2722795	Symbol	* p		2722006						
ANR	2722796	Symbol	* q		2722006						
ANR	2722797	Symbol	maxchars		2722006						
ANR	2722798	Symbol	base		2722006						
