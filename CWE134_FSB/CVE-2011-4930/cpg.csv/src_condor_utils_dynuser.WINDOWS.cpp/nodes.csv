command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4718978	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_dynuser.WINDOWS.cpp								
ANR	4718979	Function	getSystemAccountName	36:0:1165:1249							
ANR	4718980	FunctionDef	getSystemAccountName ()		4718979	0					
ANR	4718981	CompoundStatement		36:29:1194:1249	4718979	0					
ANR	4718982	ReturnStatement	return getWellKnownName ( SECURITY_LOCAL_SYSTEM_RID ) ;	37:1:1197:1247	4718979	0	True				
ANR	4718983	CallExpression	getWellKnownName ( SECURITY_LOCAL_SYSTEM_RID )		4718979	0					
ANR	4718984	Callee	getWellKnownName		4718979	0					
ANR	4718985	Identifier	getWellKnownName		4718979	0					
ANR	4718986	ArgumentList	SECURITY_LOCAL_SYSTEM_RID		4718979	1					
ANR	4718987	Argument	SECURITY_LOCAL_SYSTEM_RID		4718979	0					
ANR	4718988	Identifier	SECURITY_LOCAL_SYSTEM_RID		4718979	0					
ANR	4718989	ReturnType	char *		4718979	1					
ANR	4718990	Identifier	getSystemAccountName		4718979	2					
ANR	4718991	ParameterList			4718979	3					
ANR	4718992	CFGEntryNode	ENTRY		4718979		True				
ANR	4718993	CFGExitNode	EXIT		4718979		True				
ANR	4718994	Symbol	getWellKnownName		4718979						
ANR	4718995	Symbol	SECURITY_LOCAL_SYSTEM_RID		4718979						
ANR	4718996	Function	getUserGroupName	42:0:1343:1452							
ANR	4718997	FunctionDef	getUserGroupName ()		4718996	0					
ANR	4718998	CompoundStatement		42:25:1368:1452	4718996	0					
ANR	4718999	ReturnStatement	"return getWellKnownName ( SECURITY_BUILTIN_DOMAIN_RID , DOMAIN_ALIAS_RID_USERS ) ;"	43:1:1371:1450	4718996	0	True				
ANR	4719000	CallExpression	"getWellKnownName ( SECURITY_BUILTIN_DOMAIN_RID , DOMAIN_ALIAS_RID_USERS )"		4718996	0					
ANR	4719001	Callee	getWellKnownName		4718996	0					
ANR	4719002	Identifier	getWellKnownName		4718996	0					
ANR	4719003	ArgumentList	SECURITY_BUILTIN_DOMAIN_RID		4718996	1					
ANR	4719004	Argument	SECURITY_BUILTIN_DOMAIN_RID		4718996	0					
ANR	4719005	Identifier	SECURITY_BUILTIN_DOMAIN_RID		4718996	0					
ANR	4719006	Argument	DOMAIN_ALIAS_RID_USERS		4718996	1					
ANR	4719007	Identifier	DOMAIN_ALIAS_RID_USERS		4718996	0					
ANR	4719008	ReturnType	char *		4718996	1					
ANR	4719009	Identifier	getUserGroupName		4718996	2					
ANR	4719010	ParameterList			4718996	3					
ANR	4719011	CFGEntryNode	ENTRY		4718996		True				
ANR	4719012	CFGExitNode	EXIT		4718996		True				
ANR	4719013	Symbol	DOMAIN_ALIAS_RID_USERS		4718996						
ANR	4719014	Symbol	getWellKnownName		4718996						
ANR	4719015	Symbol	SECURITY_BUILTIN_DOMAIN_RID		4718996						
ANR	4719016	Function	getBuiltinDomainName	49:0:1565:1684							
ANR	4719017	FunctionDef	getBuiltinDomainName ()		4719016	0					
ANR	4719018	CompoundStatement		50:23:1594:1684	4719016	0					
ANR	4719019	ReturnStatement	"return getWellKnownName ( SECURITY_BUILTIN_DOMAIN_RID , DOMAIN_ALIAS_RID_USERS , true ) ;"	51:1:1597:1682	4719016	0	True				
ANR	4719020	CallExpression	"getWellKnownName ( SECURITY_BUILTIN_DOMAIN_RID , DOMAIN_ALIAS_RID_USERS , true )"		4719016	0					
ANR	4719021	Callee	getWellKnownName		4719016	0					
ANR	4719022	Identifier	getWellKnownName		4719016	0					
ANR	4719023	ArgumentList	SECURITY_BUILTIN_DOMAIN_RID		4719016	1					
ANR	4719024	Argument	SECURITY_BUILTIN_DOMAIN_RID		4719016	0					
ANR	4719025	Identifier	SECURITY_BUILTIN_DOMAIN_RID		4719016	0					
ANR	4719026	Argument	DOMAIN_ALIAS_RID_USERS		4719016	1					
ANR	4719027	Identifier	DOMAIN_ALIAS_RID_USERS		4719016	0					
ANR	4719028	Argument	true		4719016	2					
ANR	4719029	Identifier	true		4719016	0					
ANR	4719030	ReturnType	char *		4719016	1					
ANR	4719031	Identifier	getBuiltinDomainName		4719016	2					
ANR	4719032	ParameterList			4719016	3					
ANR	4719033	CFGEntryNode	ENTRY		4719016		True				
ANR	4719034	CFGExitNode	EXIT		4719016		True				
ANR	4719035	Symbol	getWellKnownName		4719016						
ANR	4719036	Symbol	DOMAIN_ALIAS_RID_USERS		4719016						
ANR	4719037	Symbol	true		4719016						
ANR	4719038	Symbol	SECURITY_BUILTIN_DOMAIN_RID		4719016						
ANR	4719039	Function	getNTAuthorityDomainName	57:0:1808:1905							
ANR	4719040	FunctionDef	getNTAuthorityDomainName ()		4719039	0					
ANR	4719041	CompoundStatement		58:27:1841:1905	4719039	0					
ANR	4719042	ReturnStatement	"return getWellKnownName ( SECURITY_LOCAL_SYSTEM_RID , 0 , true ) ;"	59:1:1844:1903	4719039	0	True				
ANR	4719043	CallExpression	"getWellKnownName ( SECURITY_LOCAL_SYSTEM_RID , 0 , true )"		4719039	0					
ANR	4719044	Callee	getWellKnownName		4719039	0					
ANR	4719045	Identifier	getWellKnownName		4719039	0					
ANR	4719046	ArgumentList	SECURITY_LOCAL_SYSTEM_RID		4719039	1					
ANR	4719047	Argument	SECURITY_LOCAL_SYSTEM_RID		4719039	0					
ANR	4719048	Identifier	SECURITY_LOCAL_SYSTEM_RID		4719039	0					
ANR	4719049	Argument	0		4719039	1					
ANR	4719050	PrimaryExpression	0		4719039	0					
ANR	4719051	Argument	true		4719039	2					
ANR	4719052	Identifier	true		4719039	0					
ANR	4719053	ReturnType	char *		4719039	1					
ANR	4719054	Identifier	getNTAuthorityDomainName		4719039	2					
ANR	4719055	ParameterList			4719039	3					
ANR	4719056	CFGEntryNode	ENTRY		4719039		True				
ANR	4719057	CFGExitNode	EXIT		4719039		True				
ANR	4719058	Symbol	getWellKnownName		4719039						
ANR	4719059	Symbol	SECURITY_LOCAL_SYSTEM_RID		4719039						
ANR	4719060	Symbol	true		4719039						
ANR	4719061	Function	getWellKnownName	67:0:2157:3391							
ANR	4719062	FunctionDef	"getWellKnownName (DWORD subAuth1 , DWORD subAuth2 , bool domainname)"		4719061	0					
ANR	4719063	CompoundStatement		68:68:2232:3391	4719061	0					
ANR	4719064	IdentifierDeclStatement	PSID pSystemSID ;	70:1:2237:2252	4719061	0	True				
ANR	4719065	IdentifierDecl	pSystemSID		4719061	0					
ANR	4719066	IdentifierDeclType	PSID		4719061	0					
ANR	4719067	Identifier	pSystemSID		4719061	1					
ANR	4719068	IdentifierDeclStatement	SID_IDENTIFIER_AUTHORITY auth = SECURITY_NT_AUTHORITY ;	71:1:2255:2308	4719061	1	True				
ANR	4719069	IdentifierDecl	auth = SECURITY_NT_AUTHORITY		4719061	0					
ANR	4719070	IdentifierDeclType	SID_IDENTIFIER_AUTHORITY		4719061	0					
ANR	4719071	Identifier	auth		4719061	1					
ANR	4719072	AssignmentExpression	auth = SECURITY_NT_AUTHORITY		4719061	2		=			
ANR	4719073	Identifier	SECURITY_NT_AUTHORITY		4719061	0					
ANR	4719074	Identifier	SECURITY_NT_AUTHORITY		4719061	1					
ANR	4719075	IdentifierDeclStatement	char * systemName ;	72:1:2311:2327	4719061	2	True				
ANR	4719076	IdentifierDecl	* systemName		4719061	0					
ANR	4719077	IdentifierDeclType	char *		4719061	0					
ANR	4719078	Identifier	systemName		4719061	1					
ANR	4719079	IdentifierDeclStatement	char * systemDomain ;	73:1:2330:2348	4719061	3	True				
ANR	4719080	IdentifierDecl	* systemDomain		4719061	0					
ANR	4719081	IdentifierDeclType	char *		4719061	0					
ANR	4719082	Identifier	systemDomain		4719061	1					
ANR	4719083	IdentifierDeclStatement	"DWORD name_size , domain_size ;"	74:1:2351:2379	4719061	4	True				
ANR	4719084	IdentifierDecl	name_size		4719061	0					
ANR	4719085	IdentifierDeclType	DWORD		4719061	0					
ANR	4719086	Identifier	name_size		4719061	1					
ANR	4719087	IdentifierDecl	domain_size		4719061	1					
ANR	4719088	IdentifierDeclType	DWORD		4719061	0					
ANR	4719089	Identifier	domain_size		4719061	1					
ANR	4719090	IdentifierDeclStatement	SID_NAME_USE sidUse ;	75:1:2382:2401	4719061	5	True				
ANR	4719091	IdentifierDecl	sidUse		4719061	0					
ANR	4719092	IdentifierDeclType	SID_NAME_USE		4719061	0					
ANR	4719093	Identifier	sidUse		4719061	1					
ANR	4719094	IdentifierDeclStatement	bool result ;	76:1:2404:2415	4719061	6	True				
ANR	4719095	IdentifierDecl	result		4719061	0					
ANR	4719096	IdentifierDeclType	bool		4719061	0					
ANR	4719097	Identifier	result		4719061	1					
ANR	4719098	ExpressionStatement	name_size = domain_size = 255	78:1:2420:2449	4719061	7	True				
ANR	4719099	AssignmentExpression	name_size = domain_size = 255		4719061	0		=			
ANR	4719100	Identifier	name_size		4719061	0					
ANR	4719101	AssignmentExpression	domain_size = 255		4719061	1		=			
ANR	4719102	Identifier	domain_size		4719061	0					
ANR	4719103	PrimaryExpression	255		4719061	1					
ANR	4719104	ExpressionStatement	systemName = new char [ name_size ]	79:1:2452:2484	4719061	8	True				
ANR	4719105	AssignmentExpression	systemName = new char [ name_size ]		4719061	0		=			
ANR	4719106	Identifier	systemName		4719061	0					
ANR	4719107	Identifier	name_size		4719061	1					
ANR	4719108	ExpressionStatement	systemDomain = new char [ domain_size ]	80:1:2487:2523	4719061	9	True				
ANR	4719109	AssignmentExpression	systemDomain = new char [ domain_size ]		4719061	0		=			
ANR	4719110	Identifier	systemDomain		4719061	0					
ANR	4719111	Identifier	domain_size		4719061	1					
ANR	4719112	IfStatement	"if ( ! AllocateAndInitializeSid ( & auth , ( ( subAuth2 ) ? 2 : 1 ) , subAuth1 , subAuth2 , 0 , 0 , 0 , 0 , 0 , 0 , & pSystemSID ) )"		4719061	10					
ANR	4719113	Condition	"! AllocateAndInitializeSid ( & auth , ( ( subAuth2 ) ? 2 : 1 ) , subAuth1 , subAuth2 , 0 , 0 , 0 , 0 , 0 , 0 , & pSystemSID )"	84:4:2581:2694	4719061	0	True				
ANR	4719114	UnaryOperationExpression	"! AllocateAndInitializeSid ( & auth , ( ( subAuth2 ) ? 2 : 1 ) , subAuth1 , subAuth2 , 0 , 0 , 0 , 0 , 0 , 0 , & pSystemSID )"		4719061	0					
ANR	4719115	UnaryOperator	!		4719061	0					
ANR	4719116	CallExpression	"AllocateAndInitializeSid ( & auth , ( ( subAuth2 ) ? 2 : 1 ) , subAuth1 , subAuth2 , 0 , 0 , 0 , 0 , 0 , 0 , & pSystemSID )"		4719061	1					
ANR	4719117	Callee	AllocateAndInitializeSid		4719061	0					
ANR	4719118	Identifier	AllocateAndInitializeSid		4719061	0					
ANR	4719119	ArgumentList	& auth		4719061	1					
ANR	4719120	Argument	& auth		4719061	0					
ANR	4719121	UnaryOperationExpression	& auth		4719061	0					
ANR	4719122	UnaryOperator	&		4719061	0					
ANR	4719123	Identifier	auth		4719061	1					
ANR	4719124	Argument	( subAuth2 ) ? 2 : 1		4719061	1					
ANR	4719125	ConditionalExpression	( subAuth2 ) ? 2 : 1		4719061	0					
ANR	4719126	Condition	subAuth2		4719061	0					
ANR	4719127	Identifier	subAuth2		4719061	0					
ANR	4719128	PrimaryExpression	2		4719061	1					
ANR	4719129	PrimaryExpression	1		4719061	2					
ANR	4719130	Argument	subAuth1		4719061	2					
ANR	4719131	Identifier	subAuth1		4719061	0					
ANR	4719132	Argument	subAuth2		4719061	3					
ANR	4719133	Identifier	subAuth2		4719061	0					
ANR	4719134	Argument	0		4719061	4					
ANR	4719135	PrimaryExpression	0		4719061	0					
ANR	4719136	Argument	0		4719061	5					
ANR	4719137	PrimaryExpression	0		4719061	0					
ANR	4719138	Argument	0		4719061	6					
ANR	4719139	PrimaryExpression	0		4719061	0					
ANR	4719140	Argument	0		4719061	7					
ANR	4719141	PrimaryExpression	0		4719061	0					
ANR	4719142	Argument	0		4719061	8					
ANR	4719143	PrimaryExpression	0		4719061	0					
ANR	4719144	Argument	0		4719061	9					
ANR	4719145	PrimaryExpression	0		4719061	0					
ANR	4719146	Argument	& pSystemSID		4719061	10					
ANR	4719147	UnaryOperationExpression	& pSystemSID		4719061	0					
ANR	4719148	UnaryOperator	&		4719061	0					
ANR	4719149	Identifier	pSystemSID		4719061	1					
ANR	4719150	CompoundStatement		21:17:465:465	4719061	1					
ANR	4719151	ExpressionStatement	"printf ( ""AllocateAndInitializeSid Error %u\\n"" , GetLastError ( ) )"	89:2:2702:2765	4719061	0	True				
ANR	4719152	CallExpression	"printf ( ""AllocateAndInitializeSid Error %u\\n"" , GetLastError ( ) )"		4719061	0					
ANR	4719153	Callee	printf		4719061	0					
ANR	4719154	Identifier	printf		4719061	0					
ANR	4719155	ArgumentList	"""AllocateAndInitializeSid Error %u\\n"""		4719061	1					
ANR	4719156	Argument	"""AllocateAndInitializeSid Error %u\\n"""		4719061	0					
ANR	4719157	PrimaryExpression	"""AllocateAndInitializeSid Error %u\\n"""		4719061	0					
ANR	4719158	Argument	GetLastError ( )		4719061	1					
ANR	4719159	CallExpression	GetLastError ( )		4719061	0					
ANR	4719160	Callee	GetLastError		4719061	0					
ANR	4719161	Identifier	GetLastError		4719061	0					
ANR	4719162	ArgumentList			4719061	1					
ANR	4719163	ReturnStatement	return NULL ;	90:2:2769:2780	4719061	1	True				
ANR	4719164	Identifier	NULL		4719061	0					
ANR	4719165	ExpressionStatement	"result = LookupAccountSid ( NULL , pSystemSID , systemName , & name_size , systemDomain , & domain_size , & sidUse )"	95:1:2847:3138	4719061	11	True				
ANR	4719166	AssignmentExpression	"result = LookupAccountSid ( NULL , pSystemSID , systemName , & name_size , systemDomain , & domain_size , & sidUse )"		4719061	0		=			
ANR	4719167	Identifier	result		4719061	0					
ANR	4719168	CallExpression	"LookupAccountSid ( NULL , pSystemSID , systemName , & name_size , systemDomain , & domain_size , & sidUse )"		4719061	1					
ANR	4719169	Callee	LookupAccountSid		4719061	0					
ANR	4719170	Identifier	LookupAccountSid		4719061	0					
ANR	4719171	ArgumentList	NULL		4719061	1					
ANR	4719172	Argument	NULL		4719061	0					
ANR	4719173	Identifier	NULL		4719061	0					
ANR	4719174	Argument	pSystemSID		4719061	1					
ANR	4719175	Identifier	pSystemSID		4719061	0					
ANR	4719176	Argument	systemName		4719061	2					
ANR	4719177	Identifier	systemName		4719061	0					
ANR	4719178	Argument	& name_size		4719061	3					
ANR	4719179	UnaryOperationExpression	& name_size		4719061	0					
ANR	4719180	UnaryOperator	&		4719061	0					
ANR	4719181	Identifier	name_size		4719061	1					
ANR	4719182	Argument	systemDomain		4719061	4					
ANR	4719183	Identifier	systemDomain		4719061	0					
ANR	4719184	Argument	& domain_size		4719061	5					
ANR	4719185	UnaryOperationExpression	& domain_size		4719061	0					
ANR	4719186	UnaryOperator	&		4719061	0					
ANR	4719187	Identifier	domain_size		4719061	1					
ANR	4719188	Argument	& sidUse		4719061	6					
ANR	4719189	UnaryOperationExpression	& sidUse		4719061	0					
ANR	4719190	UnaryOperator	&		4719061	0					
ANR	4719191	Identifier	sidUse		4719061	1					
ANR	4719192	ExpressionStatement	FreeSid ( pSystemSID )	104:1:3141:3160	4719061	12	True				
ANR	4719193	CallExpression	FreeSid ( pSystemSID )		4719061	0					
ANR	4719194	Callee	FreeSid		4719061	0					
ANR	4719195	Identifier	FreeSid		4719061	0					
ANR	4719196	ArgumentList	pSystemSID		4719061	1					
ANR	4719197	Argument	pSystemSID		4719061	0					
ANR	4719198	Identifier	pSystemSID		4719061	0					
ANR	4719199	IfStatement	if ( ! result )		4719061	13					
ANR	4719200	Condition	! result	106:6:3170:3177	4719061	0	True				
ANR	4719201	UnaryOperationExpression	! result		4719061	0					
ANR	4719202	UnaryOperator	!		4719061	0					
ANR	4719203	Identifier	result		4719061	1					
ANR	4719204	CompoundStatement		39:17:948:948	4719061	1					
ANR	4719205	ExpressionStatement	"printf ( ""LookupAccountSid Error %u\\n"" , GetLastError ( ) )"	107:2:3185:3240	4719061	0	True				
ANR	4719206	CallExpression	"printf ( ""LookupAccountSid Error %u\\n"" , GetLastError ( ) )"		4719061	0					
ANR	4719207	Callee	printf		4719061	0					
ANR	4719208	Identifier	printf		4719061	0					
ANR	4719209	ArgumentList	"""LookupAccountSid Error %u\\n"""		4719061	1					
ANR	4719210	Argument	"""LookupAccountSid Error %u\\n"""		4719061	0					
ANR	4719211	PrimaryExpression	"""LookupAccountSid Error %u\\n"""		4719061	0					
ANR	4719212	Argument	GetLastError ( )		4719061	1					
ANR	4719213	CallExpression	GetLastError ( )		4719061	0					
ANR	4719214	Callee	GetLastError		4719061	0					
ANR	4719215	Identifier	GetLastError		4719061	0					
ANR	4719216	ArgumentList			4719061	1					
ANR	4719217	ReturnStatement	return NULL ;	108:2:3244:3255	4719061	1	True				
ANR	4719218	Identifier	NULL		4719061	0					
ANR	4719219	ElseStatement	else		4719061	0					
ANR	4719220	IfStatement	if ( domainname )		4719061	0					
ANR	4719221	Condition	domainname	109:13:3270:3279	4719061	0	True				
ANR	4719222	Identifier	domainname		4719061	0					
ANR	4719223	CompoundStatement		42:26:1050:1050	4719061	1					
ANR	4719224	Statement	delete	110:2:3287:3292	4719061	0	True				
ANR	4719225	Statement	[	110:8:3293:3293	4719061	1	True				
ANR	4719226	Statement	]	110:9:3294:3294	4719061	2	True				
ANR	4719227	ExpressionStatement	systemName	110:11:3296:3306	4719061	3	True				
ANR	4719228	Identifier	systemName		4719061	0					
ANR	4719229	ReturnStatement	return systemDomain ;	111:2:3310:3329	4719061	4	True				
ANR	4719230	Identifier	systemDomain		4719061	0					
ANR	4719231	ElseStatement	else		4719061	0					
ANR	4719232	CompoundStatement		45:8:1107:1107	4719061	0					
ANR	4719233	Statement	delete	113:2:3344:3349	4719061	0	True				
ANR	4719234	Statement	[	113:8:3350:3350	4719061	1	True				
ANR	4719235	Statement	]	113:9:3351:3351	4719061	2	True				
ANR	4719236	ExpressionStatement	systemDomain	113:11:3353:3365	4719061	3	True				
ANR	4719237	Identifier	systemDomain		4719061	0					
ANR	4719238	ReturnStatement	return systemName ;	114:2:3369:3386	4719061	4	True				
ANR	4719239	Identifier	systemName		4719061	0					
ANR	4719240	ReturnType	char *		4719061	1					
ANR	4719241	Identifier	getWellKnownName		4719061	2					
ANR	4719242	ParameterList	"DWORD subAuth1 , DWORD subAuth2 , bool domainname"		4719061	3					
ANR	4719243	Parameter	DWORD subAuth1	68:18:2182:2195	4719061	0	True				
ANR	4719244	ParameterType	DWORD		4719061	0					
ANR	4719245	Identifier	subAuth1		4719061	1					
ANR	4719246	Parameter	DWORD subAuth2	68:34:2198:2211	4719061	1	True				
ANR	4719247	ParameterType	DWORD		4719061	0					
ANR	4719248	Identifier	subAuth2		4719061	1					
ANR	4719249	Parameter	bool domainname	68:50:2214:2228	4719061	2	True				
ANR	4719250	ParameterType	bool		4719061	0					
ANR	4719251	Identifier	domainname		4719061	1					
ANR	4719252	CFGEntryNode	ENTRY		4719061		True				
ANR	4719253	CFGExitNode	EXIT		4719061		True				
ANR	4719254	Symbol	AllocateAndInitializeSid		4719061						
ANR	4719255	Symbol	NULL		4719061						
ANR	4719256	Symbol	auth		4719061						
ANR	4719257	Symbol	domainname		4719061						
ANR	4719258	Symbol	sidUse		4719061						
ANR	4719259	Symbol	& auth		4719061						
ANR	4719260	Symbol	domain_size		4719061						
ANR	4719261	Symbol	subAuth2		4719061						
ANR	4719262	Symbol	subAuth1		4719061						
ANR	4719263	Symbol	pSystemSID		4719061						
ANR	4719264	Symbol	systemDomain		4719061						
ANR	4719265	Symbol	result		4719061						
ANR	4719266	Symbol	& name_size		4719061						
ANR	4719267	Symbol	systemName		4719061						
ANR	4719268	Symbol	& sidUse		4719061						
ANR	4719269	Symbol	GetLastError		4719061						
ANR	4719270	Symbol	LookupAccountSid		4719061						
ANR	4719271	Symbol	SECURITY_NT_AUTHORITY		4719061						
ANR	4719272	Symbol	& pSystemSID		4719061						
ANR	4719273	Symbol	& domain_size		4719061						
ANR	4719274	Symbol	name_size		4719061						
ANR	4719275	Function	dynuser :: dynuser	124:0:3451:3742							
ANR	4719276	FunctionDef	dynuser :: dynuser ()		4719275	0					
ANR	4719277	CompoundStatement		124:19:3470:3742	4719275	0					
ANR	4719278	ExpressionStatement	psid = ( PSID ) & sidBuffer	125:1:3473:3496	4719275	0	True				
ANR	4719279	AssignmentExpression	psid = ( PSID ) & sidBuffer		4719275	0		=			
ANR	4719280	Identifier	psid		4719275	0					
ANR	4719281	CastExpression	( PSID ) & sidBuffer		4719275	1					
ANR	4719282	CastTarget	PSID		4719275	0					
ANR	4719283	UnaryOperationExpression	& sidBuffer		4719275	1					
ANR	4719284	UnaryOperator	&		4719275	0					
ANR	4719285	Identifier	sidBuffer		4719275	1					
ANR	4719286	ExpressionStatement	sidBufferSize = max_sid_length	126:1:3499:3529	4719275	1	True				
ANR	4719287	AssignmentExpression	sidBufferSize = max_sid_length		4719275	0		=			
ANR	4719288	Identifier	sidBufferSize		4719275	0					
ANR	4719289	Identifier	max_sid_length		4719275	1					
ANR	4719290	ExpressionStatement	domainBufferSize = max_domain_length	127:1:3532:3568	4719275	2	True				
ANR	4719291	AssignmentExpression	domainBufferSize = max_domain_length		4719275	0		=			
ANR	4719292	Identifier	domainBufferSize		4719275	0					
ANR	4719293	Identifier	max_domain_length		4719275	1					
ANR	4719294	ExpressionStatement	logon_token = NULL	128:1:3571:3589	4719275	3	True				
ANR	4719295	AssignmentExpression	logon_token = NULL		4719275	0		=			
ANR	4719296	Identifier	logon_token		4719275	0					
ANR	4719297	Identifier	NULL		4719275	1					
ANR	4719298	ExpressionStatement	accountname = NULL	129:1:3592:3610	4719275	4	True				
ANR	4719299	AssignmentExpression	accountname = NULL		4719275	0		=			
ANR	4719300	Identifier	accountname		4719275	0					
ANR	4719301	Identifier	NULL		4719275	1					
ANR	4719302	ExpressionStatement	password = NULL	130:1:3613:3628	4719275	5	True				
ANR	4719303	AssignmentExpression	password = NULL		4719275	0		=			
ANR	4719304	Identifier	password		4719275	0					
ANR	4719305	Identifier	NULL		4719275	1					
ANR	4719306	ExpressionStatement	accountname_t = NULL	131:1:3631:3651	4719275	6	True				
ANR	4719307	AssignmentExpression	accountname_t = NULL		4719275	0		=			
ANR	4719308	Identifier	accountname_t		4719275	0					
ANR	4719309	Identifier	NULL		4719275	1					
ANR	4719310	ExpressionStatement	password_t = NULL	132:1:3654:3671	4719275	7	True				
ANR	4719311	AssignmentExpression	password_t = NULL		4719275	0		=			
ANR	4719312	Identifier	password_t		4719275	0					
ANR	4719313	Identifier	NULL		4719275	1					
ANR	4719314	ExpressionStatement	reuse_account = true	133:1:3674:3694	4719275	8	True				
ANR	4719315	AssignmentExpression	reuse_account = true		4719275	0		=			
ANR	4719316	Identifier	reuse_account		4719275	0					
ANR	4719317	Identifier	true		4719275	1					
ANR	4719318	Identifier	dynuser :: dynuser		4719275	1					
ANR	4719319	ParameterList			4719275	2					
ANR	4719320	CFGEntryNode	ENTRY		4719275		True				
ANR	4719321	CFGExitNode	EXIT		4719275		True				
ANR	4719322	Symbol	domainBufferSize		4719275						
ANR	4719323	Symbol	logon_token		4719275						
ANR	4719324	Symbol	NULL		4719275						
ANR	4719325	Symbol	max_sid_length		4719275						
ANR	4719326	Symbol	psid		4719275						
ANR	4719327	Symbol	sidBufferSize		4719275						
ANR	4719328	Symbol	password		4719275						
ANR	4719329	Symbol	accountname		4719275						
ANR	4719330	Symbol	password_t		4719275						
ANR	4719331	Symbol	accountname_t		4719275						
ANR	4719332	Symbol	reuse_account		4719275						
ANR	4719333	Symbol	true		4719275						
ANR	4719334	Symbol	max_domain_length		4719275						
ANR	4719335	Symbol	& sidBuffer		4719275						
ANR	4719336	Function	dynuser :: init_user	143:0:3903:6191							
ANR	4719337	FunctionDef	dynuser :: init_user ()		4719336	0					
ANR	4719338	CompoundStatement		143:26:3929:6191	4719336	0					
ANR	4719339	IfStatement	if ( ! accountname )		4719336	0					
ANR	4719340	Condition	! accountname	147:7:4021:4032	4719336	0	True				
ANR	4719341	UnaryOperationExpression	! accountname		4719336	0					
ANR	4719342	UnaryOperator	!		4719336	0					
ANR	4719343	Identifier	accountname		4719336	1					
ANR	4719344	CompoundStatement		16:2:377:394	4719336	1					
ANR	4719345	ExpressionStatement	accountname = new char [ 100 ]	148:3:4041:4068	4719336	0	True				
ANR	4719346	AssignmentExpression	accountname = new char [ 100 ]		4719336	0		=			
ANR	4719347	Identifier	accountname		4719336	0					
ANR	4719348	PrimaryExpression	100		4719336	1					
ANR	4719349	IdentifierDeclStatement	char * logappend = NULL ;	156:2:4261:4283	4719336	1	True				
ANR	4719350	IdentifierDecl	* logappend = NULL		4719336	0					
ANR	4719351	IdentifierDeclType	char *		4719336	0					
ANR	4719352	Identifier	logappend		4719336	1					
ANR	4719353	AssignmentExpression	* logappend = NULL		4719336	2		=			
ANR	4719354	Identifier	NULL		4719336	0					
ANR	4719355	Identifier	NULL		4719336	1					
ANR	4719356	IdentifierDeclStatement	char * tmp = NULL ;	157:2:4287:4303	4719336	2	True				
ANR	4719357	IdentifierDecl	* tmp = NULL		4719336	0					
ANR	4719358	IdentifierDeclType	char *		4719336	0					
ANR	4719359	Identifier	tmp		4719336	1					
ANR	4719360	AssignmentExpression	* tmp = NULL		4719336	2		=			
ANR	4719361	Identifier	NULL		4719336	0					
ANR	4719362	Identifier	NULL		4719336	1					
ANR	4719363	IdentifierDeclStatement	char slot_num [ 10 ] ;	158:2:4307:4324	4719336	3	True				
ANR	4719364	IdentifierDecl	slot_num [ 10 ]		4719336	0					
ANR	4719365	IdentifierDeclType	char [ 10 ]		4719336	0					
ANR	4719366	Identifier	slot_num		4719336	1					
ANR	4719367	PrimaryExpression	10		4719336	2					
ANR	4719368	ExpressionStatement	"reuse_account = param_boolean_crufty ( ""REUSE_CONDOR_RUN_ACCOUNT"" , true )"	160:2:4329:4399	4719336	4	True				
ANR	4719369	AssignmentExpression	"reuse_account = param_boolean_crufty ( ""REUSE_CONDOR_RUN_ACCOUNT"" , true )"		4719336	0		=			
ANR	4719370	Identifier	reuse_account		4719336	0					
ANR	4719371	CallExpression	"param_boolean_crufty ( ""REUSE_CONDOR_RUN_ACCOUNT"" , true )"		4719336	1					
ANR	4719372	Callee	param_boolean_crufty		4719336	0					
ANR	4719373	Identifier	param_boolean_crufty		4719336	0					
ANR	4719374	ArgumentList	"""REUSE_CONDOR_RUN_ACCOUNT"""		4719336	1					
ANR	4719375	Argument	"""REUSE_CONDOR_RUN_ACCOUNT"""		4719336	0					
ANR	4719376	PrimaryExpression	"""REUSE_CONDOR_RUN_ACCOUNT"""		4719336	0					
ANR	4719377	Argument	true		4719336	1					
ANR	4719378	Identifier	true		4719336	0					
ANR	4719379	IfStatement	if ( reuse_account )		4719336	5					
ANR	4719380	Condition	reuse_account	162:7:4411:4423	4719336	0	True				
ANR	4719381	Identifier	reuse_account		4719336	0					
ANR	4719382	CompoundStatement		23:3:524:579	4719336	1					
ANR	4719383	IdentifierDeclStatement	MyString prefix ;	164:3:4434:4449	4719336	0	True				
ANR	4719384	IdentifierDecl	prefix		4719336	0					
ANR	4719385	IdentifierDeclType	MyString		4719336	0					
ANR	4719386	Identifier	prefix		4719336	1					
ANR	4719387	IdentifierDeclStatement	"char * resource_prefix = param ( ""STARTD_RESOURCE_PREFIX"" ) ;"	165:3:4454:4509	4719336	1	True				
ANR	4719388	IdentifierDecl	"* resource_prefix = param ( ""STARTD_RESOURCE_PREFIX"" )"		4719336	0					
ANR	4719389	IdentifierDeclType	char *		4719336	0					
ANR	4719390	Identifier	resource_prefix		4719336	1					
ANR	4719391	AssignmentExpression	"* resource_prefix = param ( ""STARTD_RESOURCE_PREFIX"" )"		4719336	2		=			
ANR	4719392	Identifier	resource_prefix		4719336	0					
ANR	4719393	CallExpression	"param ( ""STARTD_RESOURCE_PREFIX"" )"		4719336	1					
ANR	4719394	Callee	param		4719336	0					
ANR	4719395	Identifier	param		4719336	0					
ANR	4719396	ArgumentList	"""STARTD_RESOURCE_PREFIX"""		4719336	1					
ANR	4719397	Argument	"""STARTD_RESOURCE_PREFIX"""		4719336	0					
ANR	4719398	PrimaryExpression	"""STARTD_RESOURCE_PREFIX"""		4719336	0					
ANR	4719399	IfStatement	if ( resource_prefix != NULL )		4719336	2					
ANR	4719400	Condition	resource_prefix != NULL	166:7:4518:4540	4719336	0	True				
ANR	4719401	EqualityExpression	resource_prefix != NULL		4719336	0		!=			
ANR	4719402	Identifier	resource_prefix		4719336	0					
ANR	4719403	Identifier	NULL		4719336	1					
ANR	4719404	CompoundStatement		24:32:613:613	4719336	1					
ANR	4719405	ExpressionStatement	"prefix . sprintf ( "".%s"" , resource_prefix )"	167:4:4549:4587	4719336	0	True				
ANR	4719406	CallExpression	"prefix . sprintf ( "".%s"" , resource_prefix )"		4719336	0					
ANR	4719407	Callee	prefix . sprintf		4719336	0					
ANR	4719408	MemberAccess	prefix . sprintf		4719336	0					
ANR	4719409	Identifier	prefix		4719336	0					
ANR	4719410	Identifier	sprintf		4719336	1					
ANR	4719411	ArgumentList	""".%s"""		4719336	1					
ANR	4719412	Argument	""".%s"""		4719336	0					
ANR	4719413	PrimaryExpression	""".%s"""		4719336	0					
ANR	4719414	Argument	resource_prefix		4719336	1					
ANR	4719415	Identifier	resource_prefix		4719336	0					
ANR	4719416	ExpressionStatement	free ( resource_prefix )	168:4:4593:4614	4719336	1	True				
ANR	4719417	CallExpression	free ( resource_prefix )		4719336	0					
ANR	4719418	Callee	free		4719336	0					
ANR	4719419	Identifier	free		4719336	0					
ANR	4719420	ArgumentList	resource_prefix		4719336	1					
ANR	4719421	Argument	resource_prefix		4719336	0					
ANR	4719422	Identifier	resource_prefix		4719336	0					
ANR	4719423	ElseStatement	else		4719336	0					
ANR	4719424	CompoundStatement		28:8:699:699	4719336	0					
ANR	4719425	ExpressionStatement	"prefix = "".slot"""	171:4:4635:4651	4719336	0	True				
ANR	4719426	AssignmentExpression	"prefix = "".slot"""		4719336	0		=			
ANR	4719427	Identifier	prefix		4719336	0					
ANR	4719428	PrimaryExpression	""".slot"""		4719336	1					
ANR	4719429	ExpressionStatement	"logappend = param ( ""STARTER_LOG"" )"	174:3:4666:4698	4719336	3	True				
ANR	4719430	AssignmentExpression	"logappend = param ( ""STARTER_LOG"" )"		4719336	0		=			
ANR	4719431	Identifier	logappend		4719336	0					
ANR	4719432	CallExpression	"param ( ""STARTER_LOG"" )"		4719336	1					
ANR	4719433	Callee	param		4719336	0					
ANR	4719434	Identifier	param		4719336	0					
ANR	4719435	ArgumentList	"""STARTER_LOG"""		4719336	1					
ANR	4719436	Argument	"""STARTER_LOG"""		4719336	0					
ANR	4719437	PrimaryExpression	"""STARTER_LOG"""		4719336	0					
ANR	4719438	ExpressionStatement	"tmp = strstr ( logappend , prefix . Value ( ) )"	175:3:4703:4742	4719336	4	True				
ANR	4719439	AssignmentExpression	"tmp = strstr ( logappend , prefix . Value ( ) )"		4719336	0		=			
ANR	4719440	Identifier	tmp		4719336	0					
ANR	4719441	CallExpression	"strstr ( logappend , prefix . Value ( ) )"		4719336	1					
ANR	4719442	Callee	strstr		4719336	0					
ANR	4719443	Identifier	strstr		4719336	0					
ANR	4719444	ArgumentList	logappend		4719336	1					
ANR	4719445	Argument	logappend		4719336	0					
ANR	4719446	Identifier	logappend		4719336	0					
ANR	4719447	Argument	prefix . Value ( )		4719336	1					
ANR	4719448	CallExpression	prefix . Value ( )		4719336	0					
ANR	4719449	Callee	prefix . Value		4719336	0					
ANR	4719450	MemberAccess	prefix . Value		4719336	0					
ANR	4719451	Identifier	prefix		4719336	0					
ANR	4719452	Identifier	Value		4719336	1					
ANR	4719453	ArgumentList			4719336	1					
ANR	4719454	IfStatement	if ( tmp )		4719336	5					
ANR	4719455	Condition	tmp	177:8:4756:4758	4719336	0	True				
ANR	4719456	Identifier	tmp		4719336	0					
ANR	4719457	CompoundStatement		35:14:832:832	4719336	1					
ANR	4719458	ExpressionStatement	"strncpy ( slot_num , tmp + 1 , 10 )"	181:4:4820:4848	4719336	0	True				
ANR	4719459	CallExpression	"strncpy ( slot_num , tmp + 1 , 10 )"		4719336	0					
ANR	4719460	Callee	strncpy		4719336	0					
ANR	4719461	Identifier	strncpy		4719336	0					
ANR	4719462	ArgumentList	slot_num		4719336	1					
ANR	4719463	Argument	slot_num		4719336	0					
ANR	4719464	Identifier	slot_num		4719336	0					
ANR	4719465	Argument	tmp + 1		4719336	1					
ANR	4719466	AdditiveExpression	tmp + 1		4719336	0		+			
ANR	4719467	Identifier	tmp		4719336	0					
ANR	4719468	PrimaryExpression	1		4719336	1					
ANR	4719469	Argument	10		4719336	2					
ANR	4719470	PrimaryExpression	10		4719336	0					
ANR	4719471	ExpressionStatement	slot_num [ 9 ] = '\\0'	182:4:4854:4872	4719336	1	True				
ANR	4719472	AssignmentExpression	slot_num [ 9 ] = '\\0'		4719336	0		=			
ANR	4719473	ArrayIndexing	slot_num [ 9 ]		4719336	0					
ANR	4719474	Identifier	slot_num		4719336	0					
ANR	4719475	PrimaryExpression	9		4719336	1					
ANR	4719476	PrimaryExpression	'\\0'		4719336	1					
ANR	4719477	ElseStatement	else		4719336	0					
ANR	4719478	CompoundStatement		42:10:984:984	4719336	0					
ANR	4719479	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Dynuser: Couldn't param slot# - using 1 by default\\n"" )"	188:4:4983:5059	4719336	0	True				
ANR	4719480	CallExpression	"dprintf ( D_FULLDEBUG , ""Dynuser: Couldn't param slot# - using 1 by default\\n"" )"		4719336	0					
ANR	4719481	Callee	dprintf		4719336	0					
ANR	4719482	Identifier	dprintf		4719336	0					
ANR	4719483	ArgumentList	D_FULLDEBUG		4719336	1					
ANR	4719484	Argument	D_FULLDEBUG		4719336	0					
ANR	4719485	Identifier	D_FULLDEBUG		4719336	0					
ANR	4719486	Argument	"""Dynuser: Couldn't param slot# - using 1 by default\\n"""		4719336	1					
ANR	4719487	PrimaryExpression	"""Dynuser: Couldn't param slot# - using 1 by default\\n"""		4719336	0					
ANR	4719488	ExpressionStatement	"snprintf ( slot_num , 10 , ""slot1"" )"	189:4:5065:5094	4719336	1	True				
ANR	4719489	CallExpression	"snprintf ( slot_num , 10 , ""slot1"" )"		4719336	0					
ANR	4719490	Callee	snprintf		4719336	0					
ANR	4719491	Identifier	snprintf		4719336	0					
ANR	4719492	ArgumentList	slot_num		4719336	1					
ANR	4719493	Argument	slot_num		4719336	0					
ANR	4719494	Identifier	slot_num		4719336	0					
ANR	4719495	Argument	10		4719336	1					
ANR	4719496	PrimaryExpression	10		4719336	0					
ANR	4719497	Argument	"""slot1"""		4719336	2					
ANR	4719498	PrimaryExpression	"""slot1"""		4719336	0					
ANR	4719499	Statement	int	191:3:5105:5107	4719336	6	True				
ANR	4719500	Statement	ret	191:7:5109:5111	4719336	7	True				
ANR	4719501	Statement	=	191:10:5112:5112	4719336	8	True				
ANR	4719502	Statement	_snprintf	191:11:5113:5121	4719336	9	True				
ANR	4719503	Statement	(	191:20:5122:5122	4719336	10	True				
ANR	4719504	Statement	accountname	191:21:5123:5133	4719336	11	True				
ANR	4719505	Statement	","	191:32:5134:5134	4719336	12	True				
ANR	4719506	Statement	100	191:34:5136:5138	4719336	13	True				
ANR	4719507	Statement	","	191:37:5139:5139	4719336	14	True				
ANR	4719508	Statement	ACCOUNT_PREFIX_REUSE	192:4:5146:5165	4719336	15	True				
ANR	4719509	Statement	"""%s"""	192:25:5167:5170	4719336	16	True				
ANR	4719510	Statement	","	192:29:5171:5171	4719336	17	True				
ANR	4719511	Statement	slot_num	192:31:5173:5180	4719336	18	True				
ANR	4719512	Statement	)	192:39:5181:5181	4719336	19	True				
ANR	4719513	ExpressionStatement		192:40:5182:5182	4719336	20	True				
ANR	4719514	IfStatement	if ( ret < 0 )		4719336	21					
ANR	4719515	Condition	ret < 0	193:9:5193:5199	4719336	0	True				
ANR	4719516	RelationalExpression	ret < 0		4719336	0		<			
ANR	4719517	Identifier	ret		4719336	0					
ANR	4719518	PrimaryExpression	0		4719336	1					
ANR	4719519	CompoundStatement		51:19:1273:1273	4719336	1					
ANR	4719520	ExpressionStatement	"EXCEPT ( ""account name to create too long"" )"	194:5:5210:5251	4719336	0	True				
ANR	4719521	CallExpression	"EXCEPT ( ""account name to create too long"" )"		4719336	0					
ANR	4719522	Callee	EXCEPT		4719336	0					
ANR	4719523	Identifier	EXCEPT		4719336	0					
ANR	4719524	ArgumentList	"""account name to create too long"""		4719336	1					
ANR	4719525	Argument	"""account name to create too long"""		4719336	0					
ANR	4719526	PrimaryExpression	"""account name to create too long"""		4719336	0					
ANR	4719527	ElseStatement	else		4719336	0					
ANR	4719528	CompoundStatement		62:3:1619:1658	4719336	0					
ANR	4719529	IdentifierDeclStatement	int current_pid = GetCurrentProcessId ( ) ;	204:3:5549:5588	4719336	0	True				
ANR	4719530	IdentifierDecl	current_pid = GetCurrentProcessId ( )		4719336	0					
ANR	4719531	IdentifierDeclType	int		4719336	0					
ANR	4719532	Identifier	current_pid		4719336	1					
ANR	4719533	AssignmentExpression	current_pid = GetCurrentProcessId ( )		4719336	2		=			
ANR	4719534	Identifier	current_pid		4719336	0					
ANR	4719535	CallExpression	GetCurrentProcessId ( )		4719336	1					
ANR	4719536	Callee	GetCurrentProcessId		4719336	0					
ANR	4719537	Identifier	GetCurrentProcessId		4719336	0					
ANR	4719538	ArgumentList			4719336	1					
ANR	4719539	Statement	int	205:3:5593:5595	4719336	1	True				
ANR	4719540	Statement	ret	205:7:5597:5599	4719336	2	True				
ANR	4719541	Statement	=	205:10:5600:5600	4719336	3	True				
ANR	4719542	Statement	_snprintf	205:11:5601:5609	4719336	4	True				
ANR	4719543	Statement	(	205:20:5610:5610	4719336	5	True				
ANR	4719544	Statement	accountname	205:21:5611:5621	4719336	6	True				
ANR	4719545	Statement	","	205:32:5622:5622	4719336	7	True				
ANR	4719546	Statement	100	205:34:5624:5626	4719336	8	True				
ANR	4719547	Statement	","	205:37:5627:5627	4719336	9	True				
ANR	4719548	Statement	ACCOUNT_PREFIX	206:4:5634:5647	4719336	10	True				
ANR	4719549	Statement	"""%d"""	206:19:5649:5652	4719336	11	True				
ANR	4719550	Statement	","	206:23:5653:5653	4719336	12	True				
ANR	4719551	Statement	current_pid	206:25:5655:5665	4719336	13	True				
ANR	4719552	Statement	)	206:36:5666:5666	4719336	14	True				
ANR	4719553	ExpressionStatement		206:37:5667:5667	4719336	15	True				
ANR	4719554	IfStatement	if ( ret < 0 )		4719336	16					
ANR	4719555	Condition	ret < 0	207:9:5678:5684	4719336	0	True				
ANR	4719556	RelationalExpression	ret < 0		4719336	0		<			
ANR	4719557	Identifier	ret		4719336	0					
ANR	4719558	PrimaryExpression	0		4719336	1					
ANR	4719559	CompoundStatement		65:19:1758:1758	4719336	1					
ANR	4719560	ExpressionStatement	"EXCEPT ( ""account name to create too long"" )"	208:5:5695:5736	4719336	0	True				
ANR	4719561	CallExpression	"EXCEPT ( ""account name to create too long"" )"		4719336	0					
ANR	4719562	Callee	EXCEPT		4719336	0					
ANR	4719563	Identifier	EXCEPT		4719336	0					
ANR	4719564	ArgumentList	"""account name to create too long"""		4719336	1					
ANR	4719565	Argument	"""account name to create too long"""		4719336	0					
ANR	4719566	PrimaryExpression	"""account name to create too long"""		4719336	0					
ANR	4719567	IfStatement	if ( logappend )		4719336	6					
ANR	4719568	Condition	logappend	212:7:5756:5764	4719336	0	True				
ANR	4719569	Identifier	logappend		4719336	0					
ANR	4719570	CompoundStatement		70:19:1838:1838	4719336	1					
ANR	4719571	ExpressionStatement	free ( logappend )	212:21:5770:5785	4719336	0	True				
ANR	4719572	CallExpression	free ( logappend )		4719336	0					
ANR	4719573	Callee	free		4719336	0					
ANR	4719574	Identifier	free		4719336	0					
ANR	4719575	ArgumentList	logappend		4719336	1					
ANR	4719576	Argument	logappend		4719336	0					
ANR	4719577	Identifier	logappend		4719336	0					
ANR	4719578	ExpressionStatement	logappend = NULL	212:38:5787:5803	4719336	1	True				
ANR	4719579	AssignmentExpression	logappend = NULL		4719336	0		=			
ANR	4719580	Identifier	logappend		4719336	0					
ANR	4719581	Identifier	NULL		4719336	1					
ANR	4719582	ExpressionStatement	tmp = NULL	212:56:5805:5815	4719336	2	True				
ANR	4719583	AssignmentExpression	tmp = NULL		4719336	0		=			
ANR	4719584	Identifier	tmp		4719336	0					
ANR	4719585	Identifier	NULL		4719336	1					
ANR	4719586	ElseStatement	else		4719336	0					
ANR	4719587	IfStatement	if ( logon_token && accountname )		4719336	0					
ANR	4719588	Condition	logon_token && accountname	215:13:5836:5861	4719336	0	True				
ANR	4719589	AndExpression	logon_token && accountname		4719336	0		&&			
ANR	4719590	Identifier	logon_token		4719336	0					
ANR	4719591	Identifier	accountname		4719336	1					
ANR	4719592	CompoundStatement		73:42:1935:1935	4719336	1					
ANR	4719593	ReturnStatement	return true ;	217:2:5920:5931	4719336	0	True				
ANR	4719594	Identifier	true		4719336	0					
ANR	4719595	IfStatement	if ( ! password )		4719336	1					
ANR	4719596	Condition	! password	224:5:6062:6071	4719336	0	True				
ANR	4719597	UnaryOperationExpression	! password		4719336	0					
ANR	4719598	UnaryOperator	!		4719336	0					
ANR	4719599	Identifier	password		4719336	1					
ANR	4719600	CompoundStatement		82:18:2145:2145	4719336	1					
ANR	4719601	ExpressionStatement	password = new char [ 100 ]	225:3:6080:6104	4719336	0	True				
ANR	4719602	AssignmentExpression	password = new char [ 100 ]		4719336	0		=			
ANR	4719603	Identifier	password		4719336	0					
ANR	4719604	PrimaryExpression	100		4719336	1					
ANR	4719605	ExpressionStatement	createpass ( )	227:1:6110:6122	4719336	2	True				
ANR	4719606	CallExpression	createpass ( )		4719336	0					
ANR	4719607	Callee	createpass		4719336	0					
ANR	4719608	Identifier	createpass		4719336	0					
ANR	4719609	ArgumentList			4719336	1					
ANR	4719610	ReturnStatement	return logon_user ( ) ;	231:1:6170:6189	4719336	3	True				
ANR	4719611	CallExpression	logon_user ( )		4719336	0					
ANR	4719612	Callee	logon_user		4719336	0					
ANR	4719613	Identifier	logon_user		4719336	0					
ANR	4719614	ArgumentList			4719336	1					
ANR	4719615	ReturnType	bool		4719336	1					
ANR	4719616	Identifier	dynuser :: init_user		4719336	2					
ANR	4719617	ParameterList			4719336	3					
ANR	4719618	CFGEntryNode	ENTRY		4719336		True				
ANR	4719619	CFGExitNode	EXIT		4719336		True				
ANR	4719620	Symbol	ret		4719336						
ANR	4719621	Symbol	logon_token		4719336						
ANR	4719622	Symbol	NULL		4719336						
ANR	4719623	Symbol	prefix . Value		4719336						
ANR	4719624	Symbol	slot_num		4719336						
ANR	4719625	Symbol	prefix		4719336						
ANR	4719626	Symbol	resource_prefix		4719336						
ANR	4719627	Symbol	* slot_num		4719336						
ANR	4719628	Symbol	D_FULLDEBUG		4719336						
ANR	4719629	Symbol	GetCurrentProcessId		4719336						
ANR	4719630	Symbol	password		4719336						
ANR	4719631	Symbol	accountname		4719336						
ANR	4719632	Symbol	param		4719336						
ANR	4719633	Symbol	strstr		4719336						
ANR	4719634	Symbol	tmp		4719336						
ANR	4719635	Symbol	reuse_account		4719336						
ANR	4719636	Symbol	true		4719336						
ANR	4719637	Symbol	logappend		4719336						
ANR	4719638	Symbol	param_boolean_crufty		4719336						
ANR	4719639	Symbol	logon_user		4719336						
ANR	4719640	Symbol	current_pid		4719336						
ANR	4719641	Function	dynuser :: logon_user	240:0:6397:8683							
ANR	4719642	FunctionDef	dynuser :: logon_user ()		4719641	0					
ANR	4719643	CompoundStatement		240:26:6423:8683	4719641	0					
ANR	4719644	IfStatement	if ( ! accountname_t )		4719641	0					
ANR	4719645	Condition	! accountname_t	241:5:6431:6444	4719641	0	True				
ANR	4719646	UnaryOperationExpression	! accountname_t		4719641	0					
ANR	4719647	UnaryOperator	!		4719641	0					
ANR	4719648	Identifier	accountname_t		4719641	1					
ANR	4719649	ExpressionStatement	accountname_t = new wchar_t [ 100 ]	242:2:6449:6481	4719641	1	True				
ANR	4719650	AssignmentExpression	accountname_t = new wchar_t [ 100 ]		4719641	0		=			
ANR	4719651	Identifier	accountname_t		4719641	0					
ANR	4719652	PrimaryExpression	100		4719641	1					
ANR	4719653	IfStatement	if ( ! password_t )		4719641	1					
ANR	4719654	Condition	! password_t	243:5:6488:6498	4719641	0	True				
ANR	4719655	UnaryOperationExpression	! password_t		4719641	0					
ANR	4719656	UnaryOperator	!		4719641	0					
ANR	4719657	Identifier	password_t		4719641	1					
ANR	4719658	ExpressionStatement	password_t = new wchar_t [ 100 ]	244:2:6503:6532	4719641	1	True				
ANR	4719659	AssignmentExpression	password_t = new wchar_t [ 100 ]		4719641	0		=			
ANR	4719660	Identifier	password_t		4719641	0					
ANR	4719661	PrimaryExpression	100		4719641	1					
ANR	4719662	ExpressionStatement	this -> update_t ( )	246:1:6536:6552	4719641	2	True				
ANR	4719663	CallExpression	this -> update_t ( )		4719641	0					
ANR	4719664	Callee	this -> update_t		4719641	0					
ANR	4719665	PtrMemberAccess	this -> update_t		4719641	0					
ANR	4719666	Identifier	this		4719641	0					
ANR	4719667	Identifier	update_t		4719641	1					
ANR	4719668	ArgumentList			4719641	1					
ANR	4719669	IfStatement	if ( ! this -> update_psid ( ) )		4719641	3					
ANR	4719670	Condition	! this -> update_psid ( )	250:5:6653:6673	4719641	0	True				
ANR	4719671	UnaryOperationExpression	! this -> update_psid ( )		4719641	0					
ANR	4719672	UnaryOperator	!		4719641	0					
ANR	4719673	CallExpression	this -> update_psid ( )		4719641	1					
ANR	4719674	Callee	this -> update_psid		4719641	0					
ANR	4719675	PtrMemberAccess	this -> update_psid		4719641	0					
ANR	4719676	Identifier	this		4719641	0					
ANR	4719677	Identifier	update_psid		4719641	1					
ANR	4719678	ArgumentList			4719641	1					
ANR	4719679	CompoundStatement		11:29:253:253	4719641	1					
ANR	4719680	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""update_psid() failed, so creating a new account\\n"" )"	253:2:6771:6844	4719641	0	True				
ANR	4719681	CallExpression	"dprintf ( D_FULLDEBUG , ""update_psid() failed, so creating a new account\\n"" )"		4719641	0					
ANR	4719682	Callee	dprintf		4719641	0					
ANR	4719683	Identifier	dprintf		4719641	0					
ANR	4719684	ArgumentList	D_FULLDEBUG		4719641	1					
ANR	4719685	Argument	D_FULLDEBUG		4719641	0					
ANR	4719686	Identifier	D_FULLDEBUG		4719641	0					
ANR	4719687	Argument	"""update_psid() failed, so creating a new account\\n"""		4719641	1					
ANR	4719688	PrimaryExpression	"""update_psid() failed, so creating a new account\\n"""		4719641	0					
ANR	4719689	ExpressionStatement	this -> createaccount ( )	256:2:6907:6928	4719641	1	True				
ANR	4719690	CallExpression	this -> createaccount ( )		4719641	0					
ANR	4719691	Callee	this -> createaccount		4719641	0					
ANR	4719692	PtrMemberAccess	this -> createaccount		4719641	0					
ANR	4719693	Identifier	this		4719641	0					
ANR	4719694	Identifier	createaccount		4719641	1					
ANR	4719695	ArgumentList			4719641	1					
ANR	4719696	IfStatement	if ( ! this -> update_psid ( ) )		4719641	2					
ANR	4719697	Condition	! this -> update_psid ( )	259:6:7050:7070	4719641	0	True				
ANR	4719698	UnaryOperationExpression	! this -> update_psid ( )		4719641	0					
ANR	4719699	UnaryOperator	!		4719641	0					
ANR	4719700	CallExpression	this -> update_psid ( )		4719641	1					
ANR	4719701	Callee	this -> update_psid		4719641	0					
ANR	4719702	PtrMemberAccess	this -> update_psid		4719641	0					
ANR	4719703	Identifier	this		4719641	0					
ANR	4719704	Identifier	update_psid		4719641	1					
ANR	4719705	ArgumentList			4719641	1					
ANR	4719706	CompoundStatement		20:30:650:650	4719641	1					
ANR	4719707	ExpressionStatement	"dprintf ( D_ALWAYS , ""update_psid() failed after account creation!\\n"" )"	260:3:7098:7165	4719641	0	True				
ANR	4719708	CallExpression	"dprintf ( D_ALWAYS , ""update_psid() failed after account creation!\\n"" )"		4719641	0					
ANR	4719709	Callee	dprintf		4719641	0					
ANR	4719710	Identifier	dprintf		4719641	0					
ANR	4719711	ArgumentList	D_ALWAYS		4719641	1					
ANR	4719712	Argument	D_ALWAYS		4719641	0					
ANR	4719713	Identifier	D_ALWAYS		4719641	0					
ANR	4719714	Argument	"""update_psid() failed after account creation!\\n"""		4719641	1					
ANR	4719715	PrimaryExpression	"""update_psid() failed after account creation!\\n"""		4719641	0					
ANR	4719716	ReturnStatement	return false ;	261:3:7170:7182	4719641	1	True				
ANR	4719717	Identifier	false		4719641	0					
ANR	4719718	IfStatement	if ( ! this -> add_users_group ( ) )		4719641	3					
ANR	4719719	Condition	! this -> add_users_group ( )	264:6:7195:7218	4719641	0	True				
ANR	4719720	UnaryOperationExpression	! this -> add_users_group ( )		4719641	0					
ANR	4719721	UnaryOperator	!		4719641	0					
ANR	4719722	CallExpression	this -> add_users_group ( )		4719641	1					
ANR	4719723	Callee	this -> add_users_group		4719641	0					
ANR	4719724	PtrMemberAccess	this -> add_users_group		4719641	0					
ANR	4719725	Identifier	this		4719641	0					
ANR	4719726	Identifier	add_users_group		4719641	1					
ANR	4719727	ArgumentList			4719641	1					
ANR	4719728	CompoundStatement		25:32:797:797	4719641	1					
ANR	4719729	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser::logon_user() - Failed to add account to users group!\\n"" )"	265:3:7262:7346	4719641	0	True				
ANR	4719730	CallExpression	"dprintf ( D_ALWAYS , ""dynuser::logon_user() - Failed to add account to users group!\\n"" )"		4719641	0					
ANR	4719731	Callee	dprintf		4719641	0					
ANR	4719732	Identifier	dprintf		4719641	0					
ANR	4719733	ArgumentList	D_ALWAYS		4719641	1					
ANR	4719734	Argument	D_ALWAYS		4719641	0					
ANR	4719735	Identifier	D_ALWAYS		4719641	0					
ANR	4719736	Argument	"""dynuser::logon_user() - Failed to add account to users group!\\n"""		4719641	1					
ANR	4719737	PrimaryExpression	"""dynuser::logon_user() - Failed to add account to users group!\\n"""		4719641	0					
ANR	4719738	IfStatement	if ( ! this -> hide_user ( ) )		4719641	4					
ANR	4719739	Condition	! this -> hide_user ( )	268:6:7359:7376	4719641	0	True				
ANR	4719740	UnaryOperationExpression	! this -> hide_user ( )		4719641	0					
ANR	4719741	UnaryOperator	!		4719641	0					
ANR	4719742	CallExpression	this -> hide_user ( )		4719641	1					
ANR	4719743	Callee	this -> hide_user		4719641	0					
ANR	4719744	PtrMemberAccess	this -> hide_user		4719641	0					
ANR	4719745	Identifier	this		4719641	0					
ANR	4719746	Identifier	hide_user		4719641	1					
ANR	4719747	ArgumentList			4719641	1					
ANR	4719748	CompoundStatement		29:26:955:955	4719641	1					
ANR	4719749	Statement	dprintf	269:3:7402:7408	4719641	0	True				
ANR	4719750	Statement	(	269:10:7409:7409	4719641	1	True				
ANR	4719751	Statement	D_ALWAYS	269:11:7410:7417	4719641	2	True				
ANR	4719752	Statement	","	269:19:7418:7418	4719641	3	True				
ANR	4719753	Statement	"""dynuser::logon_user() - Failed to """	269:21:7420:7455	4719641	4	True				
ANR	4719754	Statement	"""hide the user from the welcome screen!\\n"""	270:4:7461:7502	4719641	5	True				
ANR	4719755	Statement	)	270:46:7503:7503	4719641	6	True				
ANR	4719756	ExpressionStatement		270:47:7504:7504	4719641	7	True				
ANR	4719757	ElseStatement	else		4719641	0					
ANR	4719758	CompoundStatement		43:2:1375:1414	4719641	0					
ANR	4719759	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""dynuser: Re-enabling account (%s)\\n"" , accountname )"	278:2:7641:7713	4719641	0	True				
ANR	4719760	CallExpression	"dprintf ( D_FULLDEBUG , ""dynuser: Re-enabling account (%s)\\n"" , accountname )"		4719641	0					
ANR	4719761	Callee	dprintf		4719641	0					
ANR	4719762	Identifier	dprintf		4719641	0					
ANR	4719763	ArgumentList	D_FULLDEBUG		4719641	1					
ANR	4719764	Argument	D_FULLDEBUG		4719641	0					
ANR	4719765	Identifier	D_FULLDEBUG		4719641	0					
ANR	4719766	Argument	"""dynuser: Re-enabling account (%s)\\n"""		4719641	1					
ANR	4719767	PrimaryExpression	"""dynuser: Re-enabling account (%s)\\n"""		4719641	0					
ANR	4719768	Argument	accountname		4719641	2					
ANR	4719769	Identifier	accountname		4719641	0					
ANR	4719770	ExpressionStatement	enable_account ( )	279:2:7717:7733	4719641	1	True				
ANR	4719771	CallExpression	enable_account ( )		4719641	0					
ANR	4719772	Callee	enable_account		4719641	0					
ANR	4719773	Identifier	enable_account		4719641	0					
ANR	4719774	ArgumentList			4719641	1					
ANR	4719775	IdentifierDeclStatement	USER_INFO_1003 ui = { password_t } ;	282:2:7799:7838	4719641	2	True				
ANR	4719776	IdentifierDecl	ui = { password_t }		4719641	0					
ANR	4719777	IdentifierDeclType	USER_INFO_1003		4719641	0					
ANR	4719778	Identifier	ui		4719641	1					
ANR	4719779	AssignmentExpression	ui = { password_t }		4719641	2		=			
ANR	4719780	Identifier	ui		4719641	0					
ANR	4719781	InitializerList	password_t		4719641	1					
ANR	4719782	Identifier	password_t		4719641	0					
ANR	4719783	IfStatement	"if ( NERR_Success != NetUserSetInfo ( NULL , accountname_t , 1003 , ( LPBYTE ) & ui , NULL ) )"		4719641	3					
ANR	4719784	Condition	"NERR_Success != NetUserSetInfo ( NULL , accountname_t , 1003 , ( LPBYTE ) & ui , NULL )"	286:7:7849:8074	4719641	0	True				
ANR	4719785	EqualityExpression	"NERR_Success != NetUserSetInfo ( NULL , accountname_t , 1003 , ( LPBYTE ) & ui , NULL )"		4719641	0		!=			
ANR	4719786	Identifier	NERR_Success		4719641	0					
ANR	4719787	CallExpression	"NetUserSetInfo ( NULL , accountname_t , 1003 , ( LPBYTE ) & ui , NULL )"		4719641	1					
ANR	4719788	Callee	NetUserSetInfo		4719641	0					
ANR	4719789	Identifier	NetUserSetInfo		4719641	0					
ANR	4719790	ArgumentList	NULL		4719641	1					
ANR	4719791	Argument	NULL		4719641	0					
ANR	4719792	Identifier	NULL		4719641	0					
ANR	4719793	Argument	accountname_t		4719641	1					
ANR	4719794	Identifier	accountname_t		4719641	0					
ANR	4719795	Argument	1003		4719641	2					
ANR	4719796	PrimaryExpression	1003		4719641	0					
ANR	4719797	Argument	( LPBYTE ) & ui		4719641	3					
ANR	4719798	CastExpression	( LPBYTE ) & ui		4719641	0					
ANR	4719799	CastTarget	LPBYTE		4719641	0					
ANR	4719800	UnaryOperationExpression	& ui		4719641	1					
ANR	4719801	UnaryOperator	&		4719641	0					
ANR	4719802	Identifier	ui		4719641	1					
ANR	4719803	Argument	NULL		4719641	4					
ANR	4719804	Identifier	NULL		4719641	0					
ANR	4719805	CompoundStatement		53:6:1653:1653	4719641	1					
ANR	4719806	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error setting password on account %s\\n"" , accountname )"	293:6:8085:8165	4719641	0	True				
ANR	4719807	CallExpression	"dprintf ( D_ALWAYS , ""Error setting password on account %s\\n"" , accountname )"		4719641	0					
ANR	4719808	Callee	dprintf		4719641	0					
ANR	4719809	Identifier	dprintf		4719641	0					
ANR	4719810	ArgumentList	D_ALWAYS		4719641	1					
ANR	4719811	Argument	D_ALWAYS		4719641	0					
ANR	4719812	Identifier	D_ALWAYS		4719641	0					
ANR	4719813	Argument	"""Error setting password on account %s\\n"""		4719641	1					
ANR	4719814	PrimaryExpression	"""Error setting password on account %s\\n"""		4719641	0					
ANR	4719815	Argument	accountname		4719641	2					
ANR	4719816	Identifier	accountname		4719641	0					
ANR	4719817	IfStatement	"if ( ! LogonUser ( accountname , ""."" , password , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & logon_token ) )"		4719641	4					
ANR	4719818	Condition	"! LogonUser ( accountname , ""."" , password , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & logon_token )"	300:5:8233:8426	4719641	0	True				
ANR	4719819	UnaryOperationExpression	"! LogonUser ( accountname , ""."" , password , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & logon_token )"		4719641	0					
ANR	4719820	UnaryOperator	!		4719641	0					
ANR	4719821	CallExpression	"LogonUser ( accountname , ""."" , password , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & logon_token )"		4719641	1					
ANR	4719822	Callee	LogonUser		4719641	0					
ANR	4719823	Identifier	LogonUser		4719641	0					
ANR	4719824	ArgumentList	accountname		4719641	1					
ANR	4719825	Argument	accountname		4719641	0					
ANR	4719826	Identifier	accountname		4719641	0					
ANR	4719827	Argument	"""."""		4719641	1					
ANR	4719828	PrimaryExpression	"""."""		4719641	0					
ANR	4719829	Argument	password		4719641	2					
ANR	4719830	Identifier	password		4719641	0					
ANR	4719831	Argument	LOGON32_LOGON_INTERACTIVE		4719641	3					
ANR	4719832	Identifier	LOGON32_LOGON_INTERACTIVE		4719641	0					
ANR	4719833	Argument	LOGON32_PROVIDER_DEFAULT		4719641	4					
ANR	4719834	Identifier	LOGON32_PROVIDER_DEFAULT		4719641	0					
ANR	4719835	Argument	& logon_token		4719641	5					
ANR	4719836	UnaryOperationExpression	& logon_token		4719641	0					
ANR	4719837	UnaryOperator	&		4719641	0					
ANR	4719838	Identifier	logon_token		4719641	1					
ANR	4719839	CompoundStatement		67:4:2044:2044	4719641	1					
ANR	4719840	ExpressionStatement	"dprintf ( D_ALWAYS , ""LogonUser(%s, ... ) failed with status %d\\n"" , accountname , GetLastError ( ) )"	307:3:8473:8568	4719641	0	True				
ANR	4719841	CallExpression	"dprintf ( D_ALWAYS , ""LogonUser(%s, ... ) failed with status %d\\n"" , accountname , GetLastError ( ) )"		4719641	0					
ANR	4719842	Callee	dprintf		4719641	0					
ANR	4719843	Identifier	dprintf		4719641	0					
ANR	4719844	ArgumentList	D_ALWAYS		4719641	1					
ANR	4719845	Argument	D_ALWAYS		4719641	0					
ANR	4719846	Identifier	D_ALWAYS		4719641	0					
ANR	4719847	Argument	"""LogonUser(%s, ... ) failed with status %d\\n"""		4719641	1					
ANR	4719848	PrimaryExpression	"""LogonUser(%s, ... ) failed with status %d\\n"""		4719641	0					
ANR	4719849	Argument	accountname		4719641	2					
ANR	4719850	Identifier	accountname		4719641	0					
ANR	4719851	Argument	GetLastError ( )		4719641	3					
ANR	4719852	CallExpression	GetLastError ( )		4719641	0					
ANR	4719853	Callee	GetLastError		4719641	0					
ANR	4719854	Identifier	GetLastError		4719641	0					
ANR	4719855	ArgumentList			4719641	1					
ANR	4719856	ReturnStatement	return false ;	309:3:8573:8585	4719641	1	True				
ANR	4719857	Identifier	false		4719641	0					
ANR	4719858	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""dynuser::createuser(%s) successful\\n"" , accountname )"	312:1:8593:8664	4719641	5	True				
ANR	4719859	CallExpression	"dprintf ( D_FULLDEBUG , ""dynuser::createuser(%s) successful\\n"" , accountname )"		4719641	0					
ANR	4719860	Callee	dprintf		4719641	0					
ANR	4719861	Identifier	dprintf		4719641	0					
ANR	4719862	ArgumentList	D_FULLDEBUG		4719641	1					
ANR	4719863	Argument	D_FULLDEBUG		4719641	0					
ANR	4719864	Identifier	D_FULLDEBUG		4719641	0					
ANR	4719865	Argument	"""dynuser::createuser(%s) successful\\n"""		4719641	1					
ANR	4719866	PrimaryExpression	"""dynuser::createuser(%s) successful\\n"""		4719641	0					
ANR	4719867	Argument	accountname		4719641	2					
ANR	4719868	Identifier	accountname		4719641	0					
ANR	4719869	ReturnStatement	return true ;	314:1:8669:8680	4719641	6	True				
ANR	4719870	Identifier	true		4719641	0					
ANR	4719871	ReturnType	bool		4719641	1					
ANR	4719872	Identifier	dynuser :: logon_user		4719641	2					
ANR	4719873	ParameterList			4719641	3					
ANR	4719874	CFGEntryNode	ENTRY		4719641		True				
ANR	4719875	CFGExitNode	EXIT		4719641		True				
ANR	4719876	Symbol	NULL		4719641						
ANR	4719877	Symbol	& logon_token		4719641						
ANR	4719878	Symbol	LOGON32_LOGON_INTERACTIVE		4719641						
ANR	4719879	Symbol	this		4719641						
ANR	4719880	Symbol	D_ALWAYS		4719641						
ANR	4719881	Symbol	false		4719641						
ANR	4719882	Symbol	NERR_Success		4719641						
ANR	4719883	Symbol	LOGON32_PROVIDER_DEFAULT		4719641						
ANR	4719884	Symbol	D_FULLDEBUG		4719641						
ANR	4719885	Symbol	* this		4719641						
ANR	4719886	Symbol	this -> update_psid		4719641						
ANR	4719887	Symbol	this -> hide_user		4719641						
ANR	4719888	Symbol	password		4719641						
ANR	4719889	Symbol	NetUserSetInfo		4719641						
ANR	4719890	Symbol	accountname		4719641						
ANR	4719891	Symbol	ui		4719641						
ANR	4719892	Symbol	password_t		4719641						
ANR	4719893	Symbol	accountname_t		4719641						
ANR	4719894	Symbol	GetLastError		4719641						
ANR	4719895	Symbol	true		4719641						
ANR	4719896	Symbol	LogonUser		4719641						
ANR	4719897	Symbol	this -> add_users_group		4719641						
ANR	4719898	Symbol	& ui		4719641						
ANR	4719899	Function	dynuser :: reset	324:0:8792:9202							
ANR	4719900	FunctionDef	dynuser :: reset ()		4719899	0					
ANR	4719901	CompoundStatement		325:17:8814:9202	4719899	0					
ANR	4719902	ExpressionStatement	reuse_account = true	327:1:8818:8838	4719899	0	True				
ANR	4719903	AssignmentExpression	reuse_account = true		4719899	0		=			
ANR	4719904	Identifier	reuse_account		4719899	0					
ANR	4719905	Identifier	true		4719899	1					
ANR	4719906	IfStatement	if ( accountname )		4719899	1					
ANR	4719907	Condition	accountname	329:6:8847:8857	4719899	0	True				
ANR	4719908	Identifier	accountname		4719899	0					
ANR	4719909	CompoundStatement		5:20:46:46	4719899	1					
ANR	4719910	Statement	delete	330:2:8865:8870	4719899	0	True				
ANR	4719911	Statement	[	330:9:8872:8872	4719899	1	True				
ANR	4719912	Statement	]	330:10:8873:8873	4719899	2	True				
ANR	4719913	ExpressionStatement	accountname	330:12:8875:8886	4719899	3	True				
ANR	4719914	Identifier	accountname		4719899	0					
ANR	4719915	ExpressionStatement	accountname = NULL	331:2:8890:8908	4719899	4	True				
ANR	4719916	AssignmentExpression	accountname = NULL		4719899	0		=			
ANR	4719917	Identifier	accountname		4719899	0					
ANR	4719918	Identifier	NULL		4719899	1					
ANR	4719919	IfStatement	if ( accountname_t )		4719899	2					
ANR	4719920	Condition	accountname_t	333:6:8919:8931	4719899	0	True				
ANR	4719921	Identifier	accountname_t		4719899	0					
ANR	4719922	CompoundStatement		9:22:120:120	4719899	1					
ANR	4719923	Statement	delete	334:2:8939:8944	4719899	0	True				
ANR	4719924	Statement	[	334:9:8946:8946	4719899	1	True				
ANR	4719925	Statement	]	334:10:8947:8947	4719899	2	True				
ANR	4719926	ExpressionStatement	accountname_t	334:12:8949:8962	4719899	3	True				
ANR	4719927	Identifier	accountname_t		4719899	0					
ANR	4719928	ExpressionStatement	accountname_t = NULL	335:2:8966:8986	4719899	4	True				
ANR	4719929	AssignmentExpression	accountname_t = NULL		4719899	0		=			
ANR	4719930	Identifier	accountname_t		4719899	0					
ANR	4719931	Identifier	NULL		4719899	1					
ANR	4719932	IfStatement	if ( password )		4719899	3					
ANR	4719933	Condition	password	337:6:8997:9004	4719899	0	True				
ANR	4719934	Identifier	password		4719899	0					
ANR	4719935	CompoundStatement		13:17:193:193	4719899	1					
ANR	4719936	Statement	delete	338:2:9012:9017	4719899	0	True				
ANR	4719937	Statement	[	338:9:9019:9019	4719899	1	True				
ANR	4719938	Statement	]	338:10:9020:9020	4719899	2	True				
ANR	4719939	ExpressionStatement	password	338:12:9022:9030	4719899	3	True				
ANR	4719940	Identifier	password		4719899	0					
ANR	4719941	ExpressionStatement	password = NULL	339:2:9034:9049	4719899	4	True				
ANR	4719942	AssignmentExpression	password = NULL		4719899	0		=			
ANR	4719943	Identifier	password		4719899	0					
ANR	4719944	Identifier	NULL		4719899	1					
ANR	4719945	IfStatement	if ( password_t )		4719899	4					
ANR	4719946	Condition	password_t	341:6:9060:9069	4719899	0	True				
ANR	4719947	Identifier	password_t		4719899	0					
ANR	4719948	CompoundStatement		17:19:258:258	4719899	1					
ANR	4719949	Statement	delete	342:2:9077:9082	4719899	0	True				
ANR	4719950	Statement	[	342:9:9084:9084	4719899	1	True				
ANR	4719951	Statement	]	342:10:9085:9085	4719899	2	True				
ANR	4719952	ExpressionStatement	password_t	342:12:9087:9097	4719899	3	True				
ANR	4719953	Identifier	password_t		4719899	0					
ANR	4719954	ExpressionStatement	password_t = NULL	343:2:9101:9118	4719899	4	True				
ANR	4719955	AssignmentExpression	password_t = NULL		4719899	0		=			
ANR	4719956	Identifier	password_t		4719899	0					
ANR	4719957	Identifier	NULL		4719899	1					
ANR	4719958	IfStatement	if ( logon_token )		4719899	5					
ANR	4719959	Condition	logon_token	345:6:9130:9140	4719899	0	True				
ANR	4719960	Identifier	logon_token		4719899	0					
ANR	4719961	CompoundStatement		21:20:329:329	4719899	1					
ANR	4719962	ExpressionStatement	CloseHandle ( logon_token )	346:2:9148:9175	4719899	0	True				
ANR	4719963	CallExpression	CloseHandle ( logon_token )		4719899	0					
ANR	4719964	Callee	CloseHandle		4719899	0					
ANR	4719965	Identifier	CloseHandle		4719899	0					
ANR	4719966	ArgumentList	logon_token		4719899	1					
ANR	4719967	Argument	logon_token		4719899	0					
ANR	4719968	Identifier	logon_token		4719899	0					
ANR	4719969	ExpressionStatement	logon_token = NULL	347:2:9179:9197	4719899	1	True				
ANR	4719970	AssignmentExpression	logon_token = NULL		4719899	0		=			
ANR	4719971	Identifier	logon_token		4719899	0					
ANR	4719972	Identifier	NULL		4719899	1					
ANR	4719973	ReturnType	void		4719899	1					
ANR	4719974	Identifier	dynuser :: reset		4719899	2					
ANR	4719975	ParameterList			4719899	3					
ANR	4719976	CFGEntryNode	ENTRY		4719899		True				
ANR	4719977	CFGExitNode	EXIT		4719899		True				
ANR	4719978	Symbol	password		4719899						
ANR	4719979	Symbol	logon_token		4719899						
ANR	4719980	Symbol	NULL		4719899						
ANR	4719981	Symbol	accountname		4719899						
ANR	4719982	Symbol	password_t		4719899						
ANR	4719983	Symbol	accountname_t		4719899						
ANR	4719984	Symbol	reuse_account		4719899						
ANR	4719985	Symbol	true		4719899						
ANR	4719986	Function	dynuser :: ~dynuser	358:0:9293:9479							
ANR	4719987	FunctionDef	dynuser :: ~dynuser ()		4719986	0					
ANR	4719988	CompoundStatement		358:20:9313:9479	4719986	0					
ANR	4719989	IfStatement	if ( ! reuse_account )		4719986	0					
ANR	4719990	Condition	! reuse_account	360:5:9321:9334	4719986	0	True				
ANR	4719991	UnaryOperationExpression	! reuse_account		4719986	0					
ANR	4719992	UnaryOperator	!		4719986	0					
ANR	4719993	Identifier	reuse_account		4719986	1					
ANR	4719994	CompoundStatement		3:21:23:23	4719986	1					
ANR	4719995	ExpressionStatement	deleteuser ( accountname )	361:5:9344:9367	4719986	0	True				
ANR	4719996	CallExpression	deleteuser ( accountname )		4719986	0					
ANR	4719997	Callee	deleteuser		4719986	0					
ANR	4719998	Identifier	deleteuser		4719986	0					
ANR	4719999	ArgumentList	accountname		4719986	1					
ANR	4720000	Argument	accountname		4719986	0					
ANR	4720001	Identifier	accountname		4719986	0					
ANR	4720002	ElseStatement	else		4719986	0					
ANR	4720003	CompoundStatement		5:11:66:66	4719986	0					
ANR	4720004	ExpressionStatement	disable_account ( )	365:2:9417:9434	4719986	0	True				
ANR	4720005	CallExpression	disable_account ( )		4719986	0					
ANR	4720006	Callee	disable_account		4719986	0					
ANR	4720007	Identifier	disable_account		4719986	0					
ANR	4720008	ArgumentList			4719986	1					
ANR	4720009	ExpressionStatement	reset ( )	369:1:9470:9477	4719986	1	True				
ANR	4720010	CallExpression	reset ( )		4719986	0					
ANR	4720011	Callee	reset		4719986	0					
ANR	4720012	Identifier	reset		4719986	0					
ANR	4720013	ArgumentList			4719986	1					
ANR	4720014	Identifier	dynuser :: ~dynuser		4719986	1					
ANR	4720015	ParameterList			4719986	2					
ANR	4720016	CFGEntryNode	ENTRY		4719986		True				
ANR	4720017	CFGExitNode	EXIT		4719986		True				
ANR	4720018	Symbol	accountname		4719986						
ANR	4720019	Symbol	reuse_account		4719986						
ANR	4720020	Function	dynuser :: enable_account	373:0:9531:9987							
ANR	4720021	FunctionDef	dynuser :: enable_account ()		4720020	0					
ANR	4720022	CompoundStatement		373:31:9562:9987	4720020	0					
ANR	4720023	IfStatement	if ( ! accountname_t )		4720020	0					
ANR	4720024	Condition	! accountname_t	375:5:9571:9585	4720020	0	True				
ANR	4720025	UnaryOperationExpression	! accountname_t		4720020	0					
ANR	4720026	UnaryOperator	!		4720020	0					
ANR	4720027	Identifier	accountname_t		4720020	1					
ANR	4720028	CompoundStatement		3:23:26:26	4720020	1					
ANR	4720029	ReturnStatement	return ;	375:25:9591:9597	4720020	0	True				
ANR	4720030	IdentifierDeclStatement	USER_INFO_1008 ui = { UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD } ;	377:1:9603:9675	4720020	1	True				
ANR	4720031	IdentifierDecl	ui = { UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD }		4720020	0					
ANR	4720032	IdentifierDeclType	USER_INFO_1008		4720020	0					
ANR	4720033	Identifier	ui		4720020	1					
ANR	4720034	AssignmentExpression	ui = { UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD }		4720020	2		=			
ANR	4720035	Identifier	ui		4720020	0					
ANR	4720036	InitializerList	UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD		4720020	1					
ANR	4720037	InclusiveOrExpression	UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD		4720020	0		|			
ANR	4720038	Identifier	UF_PASSWD_CANT_CHANGE		4720020	0					
ANR	4720039	Identifier	UF_DONT_EXPIRE_PASSWD		4720020	1					
ANR	4720040	IfStatement	"if ( NERR_Success != NetUserSetInfo ( NULL , accountname_t , 1008 , ( LPBYTE ) & ui , NULL ) )"		4720020	2					
ANR	4720041	Condition	"NERR_Success != NetUserSetInfo ( NULL , accountname_t , 1008 , ( LPBYTE ) & ui , NULL )"	381:6:9685:9904	4720020	0	True				
ANR	4720042	EqualityExpression	"NERR_Success != NetUserSetInfo ( NULL , accountname_t , 1008 , ( LPBYTE ) & ui , NULL )"		4720020	0		!=			
ANR	4720043	Identifier	NERR_Success		4720020	0					
ANR	4720044	CallExpression	"NetUserSetInfo ( NULL , accountname_t , 1008 , ( LPBYTE ) & ui , NULL )"		4720020	1					
ANR	4720045	Callee	NetUserSetInfo		4720020	0					
ANR	4720046	Identifier	NetUserSetInfo		4720020	0					
ANR	4720047	ArgumentList	NULL		4720020	1					
ANR	4720048	Argument	NULL		4720020	0					
ANR	4720049	Identifier	NULL		4720020	0					
ANR	4720050	Argument	accountname_t		4720020	1					
ANR	4720051	Identifier	accountname_t		4720020	0					
ANR	4720052	Argument	1008		4720020	2					
ANR	4720053	PrimaryExpression	1008		4720020	0					
ANR	4720054	Argument	( LPBYTE ) & ui		4720020	3					
ANR	4720055	CastExpression	( LPBYTE ) & ui		4720020	0					
ANR	4720056	CastTarget	LPBYTE		4720020	0					
ANR	4720057	UnaryOperationExpression	& ui		4720020	1					
ANR	4720058	UnaryOperator	&		4720020	0					
ANR	4720059	Identifier	ui		4720020	1					
ANR	4720060	Argument	NULL		4720020	4					
ANR	4720061	Identifier	NULL		4720020	0					
ANR	4720062	CompoundStatement		15:5:344:344	4720020	1					
ANR	4720063	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error enabling account %s\\n"" , accountname )"	388:5:9914:9982	4720020	0	True				
ANR	4720064	CallExpression	"dprintf ( D_ALWAYS , ""Error enabling account %s\\n"" , accountname )"		4720020	0					
ANR	4720065	Callee	dprintf		4720020	0					
ANR	4720066	Identifier	dprintf		4720020	0					
ANR	4720067	ArgumentList	D_ALWAYS		4720020	1					
ANR	4720068	Argument	D_ALWAYS		4720020	0					
ANR	4720069	Identifier	D_ALWAYS		4720020	0					
ANR	4720070	Argument	"""Error enabling account %s\\n"""		4720020	1					
ANR	4720071	PrimaryExpression	"""Error enabling account %s\\n"""		4720020	0					
ANR	4720072	Argument	accountname		4720020	2					
ANR	4720073	Identifier	accountname		4720020	0					
ANR	4720074	ReturnType	void		4720020	1					
ANR	4720075	Identifier	dynuser :: enable_account		4720020	2					
ANR	4720076	ParameterList			4720020	3					
ANR	4720077	CFGEntryNode	ENTRY		4720020		True				
ANR	4720078	CFGExitNode	EXIT		4720020		True				
ANR	4720079	Symbol	UF_PASSWD_CANT_CHANGE		4720020						
ANR	4720080	Symbol	NULL		4720020						
ANR	4720081	Symbol	NetUserSetInfo		4720020						
ANR	4720082	Symbol	ui		4720020						
ANR	4720083	Symbol	accountname		4720020						
ANR	4720084	Symbol	accountname_t		4720020						
ANR	4720085	Symbol	NERR_Success		4720020						
ANR	4720086	Symbol	D_ALWAYS		4720020						
ANR	4720087	Symbol	UF_DONT_EXPIRE_PASSWD		4720020						
ANR	4720088	Symbol	& ui		4720020						
ANR	4720089	Function	dynuser :: disable_account	394:0:10041:10987							
ANR	4720090	FunctionDef	dynuser :: disable_account ()		4720089	0					
ANR	4720091	CompoundStatement		394:32:10073:10987	4720089	0					
ANR	4720092	IdentifierDeclStatement	NET_API_STATUS rval ;	396:1:10077:10096	4720089	0	True				
ANR	4720093	IdentifierDecl	rval		4720089	0					
ANR	4720094	IdentifierDeclType	NET_API_STATUS		4720089	0					
ANR	4720095	Identifier	rval		4720089	1					
ANR	4720096	IfStatement	if ( ! accountname_t )		4720089	1					
ANR	4720097	Condition	! accountname_t	398:5:10104:10118	4720089	0	True				
ANR	4720098	UnaryOperationExpression	! accountname_t		4720089	0					
ANR	4720099	UnaryOperator	!		4720089	0					
ANR	4720100	Identifier	accountname_t		4720089	1					
ANR	4720101	CompoundStatement		5:23:48:48	4720089	1					
ANR	4720102	ReturnStatement	return ;	398:25:10124:10130	4720089	0	True				
ANR	4720103	IdentifierDeclStatement	USER_INFO_1008 ui = { UF_ACCOUNTDISABLE | UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD } ;	400:1:10136:10228	4720089	2	True				
ANR	4720104	IdentifierDecl	ui = { UF_ACCOUNTDISABLE | UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD }		4720089	0					
ANR	4720105	IdentifierDeclType	USER_INFO_1008		4720089	0					
ANR	4720106	Identifier	ui		4720089	1					
ANR	4720107	AssignmentExpression	ui = { UF_ACCOUNTDISABLE | UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD }		4720089	2		=			
ANR	4720108	Identifier	ui		4720089	0					
ANR	4720109	InitializerList	UF_ACCOUNTDISABLE | UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD		4720089	1					
ANR	4720110	InclusiveOrExpression	UF_ACCOUNTDISABLE | UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD		4720089	0		|			
ANR	4720111	Identifier	UF_ACCOUNTDISABLE		4720089	0					
ANR	4720112	InclusiveOrExpression	UF_PASSWD_CANT_CHANGE | UF_DONT_EXPIRE_PASSWD		4720089	1		|			
ANR	4720113	Identifier	UF_PASSWD_CANT_CHANGE		4720089	0					
ANR	4720114	Identifier	UF_DONT_EXPIRE_PASSWD		4720089	1					
ANR	4720115	ExpressionStatement	"rval = NetUserSetInfo ( NULL , accountname_t , 1008 , ( LPBYTE ) & ui , NULL )"	404:1:10233:10443	4720089	3	True				
ANR	4720116	AssignmentExpression	"rval = NetUserSetInfo ( NULL , accountname_t , 1008 , ( LPBYTE ) & ui , NULL )"		4720089	0		=			
ANR	4720117	Identifier	rval		4720089	0					
ANR	4720118	CallExpression	"NetUserSetInfo ( NULL , accountname_t , 1008 , ( LPBYTE ) & ui , NULL )"		4720089	1					
ANR	4720119	Callee	NetUserSetInfo		4720089	0					
ANR	4720120	Identifier	NetUserSetInfo		4720089	0					
ANR	4720121	ArgumentList	NULL		4720089	1					
ANR	4720122	Argument	NULL		4720089	0					
ANR	4720123	Identifier	NULL		4720089	0					
ANR	4720124	Argument	accountname_t		4720089	1					
ANR	4720125	Identifier	accountname_t		4720089	0					
ANR	4720126	Argument	1008		4720089	2					
ANR	4720127	PrimaryExpression	1008		4720089	0					
ANR	4720128	Argument	( LPBYTE ) & ui		4720089	3					
ANR	4720129	CastExpression	( LPBYTE ) & ui		4720089	0					
ANR	4720130	CastTarget	LPBYTE		4720089	0					
ANR	4720131	UnaryOperationExpression	& ui		4720089	1					
ANR	4720132	UnaryOperator	&		4720089	0					
ANR	4720133	Identifier	ui		4720089	1					
ANR	4720134	Argument	NULL		4720089	4					
ANR	4720135	Identifier	NULL		4720089	0					
ANR	4720136	IfStatement	if ( NERR_Success == rval )		4720089	4					
ANR	4720137	Condition	NERR_Success == rval	411:6:10451:10470	4720089	0	True				
ANR	4720138	EqualityExpression	NERR_Success == rval		4720089	0		==			
ANR	4720139	Identifier	NERR_Success		4720089	0					
ANR	4720140	Identifier	rval		4720089	1					
ANR	4720141	CompoundStatement		18:29:400:400	4720089	1					
ANR	4720142	ReturnStatement	return ;	412:5:10481:10487	4720089	0	True				
ANR	4720143	ElseStatement	else		4720089	0					
ANR	4720144	IfStatement	if ( ERROR_ACCESS_DENIED == rval )		4720089	0					
ANR	4720145	Condition	ERROR_ACCESS_DENIED == rval	413:13:10502:10528	4720089	0	True				
ANR	4720146	EqualityExpression	ERROR_ACCESS_DENIED == rval		4720089	0		==			
ANR	4720147	Identifier	ERROR_ACCESS_DENIED		4720089	0					
ANR	4720148	Identifier	rval		4720089	1					
ANR	4720149	CompoundStatement		20:43:458:458	4720089	1					
ANR	4720150	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error disabling account %s (ACCESS DENIED)\\n"" , accountname )"	414:2:10536:10621	4720089	0	True				
ANR	4720151	CallExpression	"dprintf ( D_ALWAYS , ""Error disabling account %s (ACCESS DENIED)\\n"" , accountname )"		4720089	0					
ANR	4720152	Callee	dprintf		4720089	0					
ANR	4720153	Identifier	dprintf		4720089	0					
ANR	4720154	ArgumentList	D_ALWAYS		4720089	1					
ANR	4720155	Argument	D_ALWAYS		4720089	0					
ANR	4720156	Identifier	D_ALWAYS		4720089	0					
ANR	4720157	Argument	"""Error disabling account %s (ACCESS DENIED)\\n"""		4720089	1					
ANR	4720158	PrimaryExpression	"""Error disabling account %s (ACCESS DENIED)\\n"""		4720089	0					
ANR	4720159	Argument	accountname		4720089	2					
ANR	4720160	Identifier	accountname		4720089	0					
ANR	4720161	ElseStatement	else		4720089	0					
ANR	4720162	IfStatement	if ( ERROR_INVALID_PARAMETER )		4720089	0					
ANR	4720163	Condition	ERROR_INVALID_PARAMETER	416:13:10636:10658	4720089	0	True				
ANR	4720164	Identifier	ERROR_INVALID_PARAMETER		4720089	0					
ANR	4720165	CompoundStatement		23:39:588:588	4720089	1					
ANR	4720166	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error disabling account %s (INVALID PARAMETER)\\n"" , accountname )"	417:3:10667:10756	4720089	0	True				
ANR	4720167	CallExpression	"dprintf ( D_ALWAYS , ""Error disabling account %s (INVALID PARAMETER)\\n"" , accountname )"		4720089	0					
ANR	4720168	Callee	dprintf		4720089	0					
ANR	4720169	Identifier	dprintf		4720089	0					
ANR	4720170	ArgumentList	D_ALWAYS		4720089	1					
ANR	4720171	Argument	D_ALWAYS		4720089	0					
ANR	4720172	Identifier	D_ALWAYS		4720089	0					
ANR	4720173	Argument	"""Error disabling account %s (INVALID PARAMETER)\\n"""		4720089	1					
ANR	4720174	PrimaryExpression	"""Error disabling account %s (INVALID PARAMETER)\\n"""		4720089	0					
ANR	4720175	Argument	accountname		4720089	2					
ANR	4720176	Identifier	accountname		4720089	0					
ANR	4720177	ElseStatement	else		4720089	0					
ANR	4720178	IfStatement	if ( NERR_UserNotFound )		4720089	0					
ANR	4720179	Condition	NERR_UserNotFound	419:13:10771:10787	4720089	0	True				
ANR	4720180	Identifier	NERR_UserNotFound		4720089	0					
ANR	4720181	CompoundStatement		26:33:717:717	4720089	1					
ANR	4720182	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error disabling account %s (User Not Found)\\n"" , accountname )"	420:3:10796:10882	4720089	0	True				
ANR	4720183	CallExpression	"dprintf ( D_ALWAYS , ""Error disabling account %s (User Not Found)\\n"" , accountname )"		4720089	0					
ANR	4720184	Callee	dprintf		4720089	0					
ANR	4720185	Identifier	dprintf		4720089	0					
ANR	4720186	ArgumentList	D_ALWAYS		4720089	1					
ANR	4720187	Argument	D_ALWAYS		4720089	0					
ANR	4720188	Identifier	D_ALWAYS		4720089	0					
ANR	4720189	Argument	"""Error disabling account %s (User Not Found)\\n"""		4720089	1					
ANR	4720190	PrimaryExpression	"""Error disabling account %s (User Not Found)\\n"""		4720089	0					
ANR	4720191	Argument	accountname		4720089	2					
ANR	4720192	Identifier	accountname		4720089	0					
ANR	4720193	ElseStatement	else		4720089	0					
ANR	4720194	CompoundStatement		29:8:818:818	4720089	0					
ANR	4720195	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error disabling account %s (Unknown error)\\n"" , accountname )"	423:3:10897:10982	4720089	0	True				
ANR	4720196	CallExpression	"dprintf ( D_ALWAYS , ""Error disabling account %s (Unknown error)\\n"" , accountname )"		4720089	0					
ANR	4720197	Callee	dprintf		4720089	0					
ANR	4720198	Identifier	dprintf		4720089	0					
ANR	4720199	ArgumentList	D_ALWAYS		4720089	1					
ANR	4720200	Argument	D_ALWAYS		4720089	0					
ANR	4720201	Identifier	D_ALWAYS		4720089	0					
ANR	4720202	Argument	"""Error disabling account %s (Unknown error)\\n"""		4720089	1					
ANR	4720203	PrimaryExpression	"""Error disabling account %s (Unknown error)\\n"""		4720089	0					
ANR	4720204	Argument	accountname		4720089	2					
ANR	4720205	Identifier	accountname		4720089	0					
ANR	4720206	ReturnType	void		4720089	1					
ANR	4720207	Identifier	dynuser :: disable_account		4720089	2					
ANR	4720208	ParameterList			4720089	3					
ANR	4720209	CFGEntryNode	ENTRY		4720089		True				
ANR	4720210	CFGExitNode	EXIT		4720089		True				
ANR	4720211	Symbol	UF_ACCOUNTDISABLE		4720089						
ANR	4720212	Symbol	UF_PASSWD_CANT_CHANGE		4720089						
ANR	4720213	Symbol	NULL		4720089						
ANR	4720214	Symbol	NERR_Success		4720089						
ANR	4720215	Symbol	D_ALWAYS		4720089						
ANR	4720216	Symbol	ERROR_INVALID_PARAMETER		4720089						
ANR	4720217	Symbol	ERROR_ACCESS_DENIED		4720089						
ANR	4720218	Symbol	NetUserSetInfo		4720089						
ANR	4720219	Symbol	ui		4720089						
ANR	4720220	Symbol	accountname		4720089						
ANR	4720221	Symbol	accountname_t		4720089						
ANR	4720222	Symbol	rval		4720089						
ANR	4720223	Symbol	UF_DONT_EXPIRE_PASSWD		4720089						
ANR	4720224	Symbol	NERR_UserNotFound		4720089						
ANR	4720225	Symbol	& ui		4720089						
ANR	4720226	Function	dynuser :: createpass	430:0:10992:11352							
ANR	4720227	FunctionDef	dynuser :: createpass ()		4720226	0					
ANR	4720228	CompoundStatement		430:27:11019:11352	4720226	0					
ANR	4720229	ExpressionStatement	ASSERT ( password != NULL )	432:1:11024:11050	4720226	0	True				
ANR	4720230	CallExpression	ASSERT ( password != NULL )		4720226	0					
ANR	4720231	Callee	ASSERT		4720226	0					
ANR	4720232	Identifier	ASSERT		4720226	0					
ANR	4720233	ArgumentList	password != NULL		4720226	1					
ANR	4720234	Argument	password != NULL		4720226	0					
ANR	4720235	EqualityExpression	password != NULL		4720226	0		!=			
ANR	4720236	Identifier	password		4720226	0					
ANR	4720237	Identifier	NULL		4720226	1					
ANR	4720238	ForStatement	for ( int i = 0 ; i < 14 ; i ++ )		4720226	1					
ANR	4720239	ForInit	int i = 0 ;	434:7:11062:11071	4720226	0	True				
ANR	4720240	IdentifierDeclStatement	int i = 0 ;		4720226	0					
ANR	4720241	IdentifierDecl	i = 0		4720226	0					
ANR	4720242	IdentifierDeclType	int		4720226	0					
ANR	4720243	Identifier	i		4720226	1					
ANR	4720244	AssignmentExpression	i = 0		4720226	2		=			
ANR	4720245	Identifier	i		4720226	0					
ANR	4720246	PrimaryExpression	0		4720226	1					
ANR	4720247	Condition	i < 14	434:18:11073:11078	4720226	1	True				
ANR	4720248	RelationalExpression	i < 14		4720226	0		<			
ANR	4720249	Identifier	i		4720226	0					
ANR	4720250	PrimaryExpression	14		4720226	1					
ANR	4720251	PostIncDecOperationExpression	i ++	434:26:11081:11083	4720226	2	True				
ANR	4720252	Identifier	i		4720226	0					
ANR	4720253	IncDec	++		4720226	1					
ANR	4720254	CompoundStatement		6:2:71:103	4720226	3					
ANR	4720255	IdentifierDeclStatement	char c = ( char ) ( rand ( ) % 128 ) ;	435:2:11091:11123	4720226	0	True				
ANR	4720256	IdentifierDecl	c = ( char ) ( rand ( ) % 128 )		4720226	0					
ANR	4720257	IdentifierDeclType	char		4720226	0					
ANR	4720258	Identifier	c		4720226	1					
ANR	4720259	AssignmentExpression	c = ( char ) ( rand ( ) % 128 )		4720226	2		=			
ANR	4720260	Identifier	c		4720226	0					
ANR	4720261	CastExpression	( char ) ( rand ( ) % 128 )		4720226	1					
ANR	4720262	CastTarget	char		4720226	0					
ANR	4720263	MultiplicativeExpression	rand ( ) % 128		4720226	1		%			
ANR	4720264	CallExpression	rand ( )		4720226	0					
ANR	4720265	Callee	rand		4720226	0					
ANR	4720266	Identifier	rand		4720226	0					
ANR	4720267	ArgumentList			4720226	1					
ANR	4720268	PrimaryExpression	128		4720226	1					
ANR	4720269	IfStatement	if ( ! isprint ( c ) )		4720226	1					
ANR	4720270	Condition	! isprint ( c )	437:7:11133:11145	4720226	0	True				
ANR	4720271	UnaryOperationExpression	! isprint ( c )		4720226	0					
ANR	4720272	UnaryOperator	!		4720226	0					
ANR	4720273	CallExpression	isprint ( c )		4720226	1					
ANR	4720274	Callee	isprint		4720226	0					
ANR	4720275	Identifier	isprint		4720226	0					
ANR	4720276	ArgumentList	c		4720226	1					
ANR	4720277	Argument	c		4720226	0					
ANR	4720278	Identifier	c		4720226	0					
ANR	4720279	CompoundStatement		8:23:129:129	4720226	1					
ANR	4720280	ExpressionStatement	i --	439:3:11227:11230	4720226	0	True				
ANR	4720281	PostIncDecOperationExpression	i --		4720226	0					
ANR	4720282	Identifier	i		4720226	0					
ANR	4720283	IncDec	--		4720226	1					
ANR	4720284	ElseStatement	else		4720226	0					
ANR	4720285	CompoundStatement		11:9:221:221	4720226	0					
ANR	4720286	ExpressionStatement	password [ i ] = c	441:3:11246:11261	4720226	0	True				
ANR	4720287	AssignmentExpression	password [ i ] = c		4720226	0		=			
ANR	4720288	ArrayIndexing	password [ i ]		4720226	0					
ANR	4720289	Identifier	password		4720226	0					
ANR	4720290	Identifier	i		4720226	1					
ANR	4720291	Identifier	c		4720226	1					
ANR	4720292	ExpressionStatement	password [ 14 ] = '\\0'	445:1:11272:11291	4720226	2	True				
ANR	4720293	AssignmentExpression	password [ 14 ] = '\\0'		4720226	0		=			
ANR	4720294	ArrayIndexing	password [ 14 ]		4720226	0					
ANR	4720295	Identifier	password		4720226	0					
ANR	4720296	PrimaryExpression	14		4720226	1					
ANR	4720297	PrimaryExpression	'\\0'		4720226	1					
ANR	4720298	ReturnType	void		4720226	1					
ANR	4720299	Identifier	dynuser :: createpass		4720226	2					
ANR	4720300	ParameterList			4720226	3					
ANR	4720301	CFGEntryNode	ENTRY		4720226		True				
ANR	4720302	CFGExitNode	EXIT		4720226		True				
ANR	4720303	Symbol	rand		4720226						
ANR	4720304	Symbol	password		4720226						
ANR	4720305	Symbol	NULL		4720226						
ANR	4720306	Symbol	c		4720226						
ANR	4720307	Symbol	* i		4720226						
ANR	4720308	Symbol	* password		4720226						
ANR	4720309	Symbol	isprint		4720226						
ANR	4720310	Symbol	i		4720226						
ANR	4720311	Function	dynuser :: update_t	451:0:11356:12580							
ANR	4720312	FunctionDef	dynuser :: update_t ()		4720311	0					
ANR	4720313	CompoundStatement		451:25:11381:12580	4720311	0					
ANR	4720314	IfStatement	if ( accountname && accountname_t )		4720311	0					
ANR	4720315	Condition	accountname && accountname_t	452:6:11389:11416	4720311	0	True				
ANR	4720316	AndExpression	accountname && accountname_t		4720311	0		&&			
ANR	4720317	Identifier	accountname		4720311	0					
ANR	4720318	Identifier	accountname_t		4720311	1					
ANR	4720319	CompoundStatement		2:37:38:38	4720311	1					
ANR	4720320	IfStatement	"if ( ! MultiByteToWideChar ( CP_ACP , MB_ERR_INVALID_CHARS , accountname , - 1 , accountname_t , 100 ) )"		4720311	0					
ANR	4720321	Condition	"! MultiByteToWideChar ( CP_ACP , MB_ERR_INVALID_CHARS , accountname , - 1 , accountname_t , 100 )"	453:6:11428:11521	4720311	0	True				
ANR	4720322	UnaryOperationExpression	"! MultiByteToWideChar ( CP_ACP , MB_ERR_INVALID_CHARS , accountname , - 1 , accountname_t , 100 )"		4720311	0					
ANR	4720323	UnaryOperator	!		4720311	0					
ANR	4720324	CallExpression	"MultiByteToWideChar ( CP_ACP , MB_ERR_INVALID_CHARS , accountname , - 1 , accountname_t , 100 )"		4720311	1					
ANR	4720325	Callee	MultiByteToWideChar		4720311	0					
ANR	4720326	Identifier	MultiByteToWideChar		4720311	0					
ANR	4720327	ArgumentList	CP_ACP		4720311	1					
ANR	4720328	Argument	CP_ACP		4720311	0					
ANR	4720329	Identifier	CP_ACP		4720311	0					
ANR	4720330	Argument	MB_ERR_INVALID_CHARS		4720311	1					
ANR	4720331	Identifier	MB_ERR_INVALID_CHARS		4720311	0					
ANR	4720332	Argument	accountname		4720311	2					
ANR	4720333	Identifier	accountname		4720311	0					
ANR	4720334	Argument	- 1		4720311	3					
ANR	4720335	UnaryOperationExpression	- 1		4720311	0					
ANR	4720336	UnaryOperator	-		4720311	0					
ANR	4720337	PrimaryExpression	1		4720311	1					
ANR	4720338	Argument	accountname_t		4720311	4					
ANR	4720339	Identifier	accountname_t		4720311	0					
ANR	4720340	Argument	100		4720311	5					
ANR	4720341	PrimaryExpression	100		4720311	0					
ANR	4720342	CompoundStatement		4:43:142:142	4720311	1					
ANR	4720343	Statement	dprintf	455:3:11529:11535	4720311	0	True				
ANR	4720344	Statement	(	455:10:11536:11536	4720311	1	True				
ANR	4720345	Statement	D_ALWAYS	455:11:11537:11544	4720311	2	True				
ANR	4720346	Statement	","	455:19:11545:11545	4720311	3	True				
ANR	4720347	Statement	"""DynUser: MultiByteToWideChar() failed """	455:21:11547:11586	4720311	4	True				
ANR	4720348	Statement	"""error=%li\\n"""	456:5:11593:11605	4720311	5	True				
ANR	4720349	Statement	","	456:18:11606:11606	4720311	6	True				
ANR	4720350	Statement	GetLastError	456:20:11608:11619	4720311	7	True				
ANR	4720351	Statement	(	456:32:11620:11620	4720311	8	True				
ANR	4720352	Statement	)	456:33:11621:11621	4720311	9	True				
ANR	4720353	Statement	)	456:34:11622:11622	4720311	10	True				
ANR	4720354	ExpressionStatement		456:35:11623:11623	4720311	11	True				
ANR	4720355	ExpressionStatement	"EXCEPT ( ""Unexpected failure in dynuser:update_t\\n"" )"	457:3:11628:11678	4720311	12	True				
ANR	4720356	CallExpression	"EXCEPT ( ""Unexpected failure in dynuser:update_t\\n"" )"		4720311	0					
ANR	4720357	Callee	EXCEPT		4720311	0					
ANR	4720358	Identifier	EXCEPT		4720311	0					
ANR	4720359	ArgumentList	"""Unexpected failure in dynuser:update_t\\n"""		4720311	1					
ANR	4720360	Argument	"""Unexpected failure in dynuser:update_t\\n"""		4720311	0					
ANR	4720361	PrimaryExpression	"""Unexpected failure in dynuser:update_t\\n"""		4720311	0					
ANR	4720362	IfStatement	if ( password && password_t )		4720311	1					
ANR	4720363	Condition	password && password_t	460:6:11693:11714	4720311	0	True				
ANR	4720364	AndExpression	password && password_t		4720311	0		&&			
ANR	4720365	Identifier	password		4720311	0					
ANR	4720366	Identifier	password_t		4720311	1					
ANR	4720367	CompoundStatement		10:31:336:336	4720311	1					
ANR	4720368	IfStatement	"if ( MultiByteToWideChar ( CP_ACP , MB_ERR_INVALID_CHARS , password , - 1 , password_t , 100 ) )"		4720311	0					
ANR	4720369	Condition	"MultiByteToWideChar ( CP_ACP , MB_ERR_INVALID_CHARS , password , - 1 , password_t , 100 )"	471:6:12167:12251	4720311	0	True				
ANR	4720370	CallExpression	"MultiByteToWideChar ( CP_ACP , MB_ERR_INVALID_CHARS , password , - 1 , password_t , 100 )"		4720311	0					
ANR	4720371	Callee	MultiByteToWideChar		4720311	0					
ANR	4720372	Identifier	MultiByteToWideChar		4720311	0					
ANR	4720373	ArgumentList	CP_ACP		4720311	1					
ANR	4720374	Argument	CP_ACP		4720311	0					
ANR	4720375	Identifier	CP_ACP		4720311	0					
ANR	4720376	Argument	MB_ERR_INVALID_CHARS		4720311	1					
ANR	4720377	Identifier	MB_ERR_INVALID_CHARS		4720311	0					
ANR	4720378	Argument	password		4720311	2					
ANR	4720379	Identifier	password		4720311	0					
ANR	4720380	Argument	- 1		4720311	3					
ANR	4720381	UnaryOperationExpression	- 1		4720311	0					
ANR	4720382	UnaryOperator	-		4720311	0					
ANR	4720383	PrimaryExpression	1		4720311	1					
ANR	4720384	Argument	password_t		4720311	4					
ANR	4720385	Identifier	password_t		4720311	0					
ANR	4720386	Argument	100		4720311	5					
ANR	4720387	PrimaryExpression	100		4720311	0					
ANR	4720388	CompoundStatement		22:35:872:872	4720311	1					
ANR	4720389	ReturnStatement	return ;	474:4:12275:12281	4720311	0	True				
ANR	4720390	ElseStatement	else		4720311	0					
ANR	4720391	IfStatement	"if ( MultiByteToWideChar ( CP_THREAD_ACP , MB_ERR_INVALID_CHARS , password , - 1 , password_t , 100 ) )"		4720311	0					
ANR	4720392	Condition	"MultiByteToWideChar ( CP_THREAD_ACP , MB_ERR_INVALID_CHARS , password , - 1 , password_t , 100 )"	475:13:12296:12387	4720311	0	True				
ANR	4720393	CallExpression	"MultiByteToWideChar ( CP_THREAD_ACP , MB_ERR_INVALID_CHARS , password , - 1 , password_t , 100 )"		4720311	0					
ANR	4720394	Callee	MultiByteToWideChar		4720311	0					
ANR	4720395	Identifier	MultiByteToWideChar		4720311	0					
ANR	4720396	ArgumentList	CP_THREAD_ACP		4720311	1					
ANR	4720397	Argument	CP_THREAD_ACP		4720311	0					
ANR	4720398	Identifier	CP_THREAD_ACP		4720311	0					
ANR	4720399	Argument	MB_ERR_INVALID_CHARS		4720311	1					
ANR	4720400	Identifier	MB_ERR_INVALID_CHARS		4720311	0					
ANR	4720401	Argument	password		4720311	2					
ANR	4720402	Identifier	password		4720311	0					
ANR	4720403	Argument	- 1		4720311	3					
ANR	4720404	UnaryOperationExpression	- 1		4720311	0					
ANR	4720405	UnaryOperator	-		4720311	0					
ANR	4720406	PrimaryExpression	1		4720311	1					
ANR	4720407	Argument	password_t		4720311	4					
ANR	4720408	Identifier	password_t		4720311	0					
ANR	4720409	Argument	100		4720311	5					
ANR	4720410	PrimaryExpression	100		4720311	0					
ANR	4720411	CompoundStatement		26:35:1008:1008	4720311	1					
ANR	4720412	ReturnStatement	return ;	478:4:12412:12418	4720311	0	True				
ANR	4720413	Statement	dprintf	481:2:12428:12434	4720311	1	True				
ANR	4720414	Statement	(	481:9:12435:12435	4720311	2	True				
ANR	4720415	Statement	D_ALWAYS	481:10:12436:12443	4720311	3	True				
ANR	4720416	Statement	","	481:18:12444:12444	4720311	4	True				
ANR	4720417	Statement	"""DynUser: MultiByteToWideChar() failed """	481:20:12446:12485	4720311	5	True				
ANR	4720418	Statement	"""error=%li\\n"""	482:4:12491:12503	4720311	6	True				
ANR	4720419	Statement	","	482:17:12504:12504	4720311	7	True				
ANR	4720420	Statement	GetLastError	482:19:12506:12517	4720311	8	True				
ANR	4720421	Statement	(	482:31:12518:12518	4720311	9	True				
ANR	4720422	Statement	)	482:32:12519:12519	4720311	10	True				
ANR	4720423	Statement	)	482:33:12520:12520	4720311	11	True				
ANR	4720424	ExpressionStatement		482:34:12521:12521	4720311	12	True				
ANR	4720425	ExpressionStatement	"EXCEPT ( ""Unexpected failure in dynuser:update_t\\n"" )"	483:2:12525:12575	4720311	13	True				
ANR	4720426	CallExpression	"EXCEPT ( ""Unexpected failure in dynuser:update_t\\n"" )"		4720311	0					
ANR	4720427	Callee	EXCEPT		4720311	0					
ANR	4720428	Identifier	EXCEPT		4720311	0					
ANR	4720429	ArgumentList	"""Unexpected failure in dynuser:update_t\\n"""		4720311	1					
ANR	4720430	Argument	"""Unexpected failure in dynuser:update_t\\n"""		4720311	0					
ANR	4720431	PrimaryExpression	"""Unexpected failure in dynuser:update_t\\n"""		4720311	0					
ANR	4720432	ReturnType	void		4720311	1					
ANR	4720433	Identifier	dynuser :: update_t		4720311	2					
ANR	4720434	ParameterList			4720311	3					
ANR	4720435	CFGEntryNode	ENTRY		4720311		True				
ANR	4720436	CFGExitNode	EXIT		4720311		True				
ANR	4720437	Symbol	password		4720311						
ANR	4720438	Symbol	CP_THREAD_ACP		4720311						
ANR	4720439	Symbol	accountname		4720311						
ANR	4720440	Symbol	CP_ACP		4720311						
ANR	4720441	Symbol	password_t		4720311						
ANR	4720442	Symbol	accountname_t		4720311						
ANR	4720443	Symbol	MB_ERR_INVALID_CHARS		4720311						
ANR	4720444	Symbol	MultiByteToWideChar		4720311						
ANR	4720445	Function	dynuser :: get_token	488:0:12584:12641							
ANR	4720446	FunctionDef	dynuser :: get_token ()		4720445	0					
ANR	4720447	CompoundStatement		488:28:12612:12641	4720445	0					
ANR	4720448	ReturnStatement	return this -> logon_token ;	489:1:12615:12639	4720445	0	True				
ANR	4720449	PtrMemberAccess	this -> logon_token		4720445	0					
ANR	4720450	Identifier	this		4720445	0					
ANR	4720451	Identifier	logon_token		4720445	1					
ANR	4720452	ReturnType	HANDLE		4720445	1					
ANR	4720453	Identifier	dynuser :: get_token		4720445	2					
ANR	4720454	ParameterList			4720445	3					
ANR	4720455	CFGEntryNode	ENTRY		4720445		True				
ANR	4720456	CFGExitNode	EXIT		4720445		True				
ANR	4720457	Symbol	* this		4720445						
ANR	4720458	Symbol	this -> logon_token		4720445						
ANR	4720459	Symbol	this		4720445						
ANR	4720460	Function	dynuser :: get_accountname	492:0:12644:12762							
ANR	4720461	FunctionDef	dynuser :: get_accountname ()		4720460	0					
ANR	4720462	CompoundStatement		493:27:12683:12762	4720460	0					
ANR	4720463	IfStatement	if ( logon_token && accountname )		4720460	0					
ANR	4720464	Condition	logon_token && accountname	494:5:12690:12715	4720460	0	True				
ANR	4720465	AndExpression	logon_token && accountname		4720460	0		&&			
ANR	4720466	Identifier	logon_token		4720460	0					
ANR	4720467	Identifier	accountname		4720460	1					
ANR	4720468	ReturnStatement	return accountname ;	495:2:12721:12739	4720460	1	True				
ANR	4720469	Identifier	accountname		4720460	0					
ANR	4720470	ElseStatement	else		4720460	0					
ANR	4720471	ReturnStatement	return NULL ;	497:2:12749:12760	4720460	0	True				
ANR	4720472	Identifier	NULL		4720460	0					
ANR	4720473	ReturnType	const char *		4720460	1					
ANR	4720474	Identifier	dynuser :: get_accountname		4720460	2					
ANR	4720475	ParameterList			4720460	3					
ANR	4720476	CFGEntryNode	ENTRY		4720460		True				
ANR	4720477	CFGExitNode	EXIT		4720460		True				
ANR	4720478	Symbol	logon_token		4720460						
ANR	4720479	Symbol	NULL		4720460						
ANR	4720480	Symbol	accountname		4720460						
ANR	4720481	Function	InitString	500:0:12765:12952							
ANR	4720482	FunctionDef	"InitString (UNICODE_STRING & us , wchar_t * psz)"		4720481	0					
ANR	4720483	CompoundStatement		500:52:12817:12952	4720481	0					
ANR	4720484	IdentifierDeclStatement	USHORT cch = wcslen ( psz ) ;	501:1:12820:12846	4720481	0	True				
ANR	4720485	IdentifierDecl	cch = wcslen ( psz )		4720481	0					
ANR	4720486	IdentifierDeclType	USHORT		4720481	0					
ANR	4720487	Identifier	cch		4720481	1					
ANR	4720488	AssignmentExpression	cch = wcslen ( psz )		4720481	2		=			
ANR	4720489	Identifier	cch		4720481	0					
ANR	4720490	CallExpression	wcslen ( psz )		4720481	1					
ANR	4720491	Callee	wcslen		4720481	0					
ANR	4720492	Identifier	wcslen		4720481	0					
ANR	4720493	ArgumentList	psz		4720481	1					
ANR	4720494	Argument	psz		4720481	0					
ANR	4720495	Identifier	psz		4720481	0					
ANR	4720496	ExpressionStatement	us . Length = cch * sizeof ( wchar_t )	502:1:12849:12882	4720481	1	True				
ANR	4720497	AssignmentExpression	us . Length = cch * sizeof ( wchar_t )		4720481	0		=			
ANR	4720498	MemberAccess	us . Length		4720481	0					
ANR	4720499	Identifier	us		4720481	0					
ANR	4720500	Identifier	Length		4720481	1					
ANR	4720501	MultiplicativeExpression	cch * sizeof ( wchar_t )		4720481	1		*			
ANR	4720502	Identifier	cch		4720481	0					
ANR	4720503	SizeofExpression	sizeof ( wchar_t )		4720481	1					
ANR	4720504	Sizeof	sizeof		4720481	0					
ANR	4720505	SizeofOperand	wchar_t		4720481	1					
ANR	4720506	ExpressionStatement	us . MaximumLength = ( cch + 1 ) * sizeof ( wchar_t )	503:1:12885:12932	4720481	2	True				
ANR	4720507	AssignmentExpression	us . MaximumLength = ( cch + 1 ) * sizeof ( wchar_t )		4720481	0		=			
ANR	4720508	MemberAccess	us . MaximumLength		4720481	0					
ANR	4720509	Identifier	us		4720481	0					
ANR	4720510	Identifier	MaximumLength		4720481	1					
ANR	4720511	MultiplicativeExpression	( cch + 1 ) * sizeof ( wchar_t )		4720481	1		*			
ANR	4720512	AdditiveExpression	cch + 1		4720481	0		+			
ANR	4720513	Identifier	cch		4720481	0					
ANR	4720514	PrimaryExpression	1		4720481	1					
ANR	4720515	SizeofExpression	sizeof ( wchar_t )		4720481	1					
ANR	4720516	Sizeof	sizeof		4720481	0					
ANR	4720517	SizeofOperand	wchar_t		4720481	1					
ANR	4720518	ExpressionStatement	us . Buffer = psz	504:1:12935:12950	4720481	3	True				
ANR	4720519	AssignmentExpression	us . Buffer = psz		4720481	0		=			
ANR	4720520	MemberAccess	us . Buffer		4720481	0					
ANR	4720521	Identifier	us		4720481	0					
ANR	4720522	Identifier	Buffer		4720481	1					
ANR	4720523	Identifier	psz		4720481	1					
ANR	4720524	ReturnType	void		4720481	1					
ANR	4720525	Identifier	InitString		4720481	2					
ANR	4720526	ParameterList	"UNICODE_STRING & us , wchar_t * psz"		4720481	3					
ANR	4720527	Parameter	UNICODE_STRING & us	500:17:12782:12799	4720481	0	True				
ANR	4720528	ParameterType	UNICODE_STRING &		4720481	0					
ANR	4720529	Identifier	us		4720481	1					
ANR	4720530	Parameter	wchar_t * psz	500:37:12802:12813	4720481	1	True				
ANR	4720531	ParameterType	wchar_t *		4720481	0					
ANR	4720532	Identifier	psz		4720481	1					
ANR	4720533	CFGEntryNode	ENTRY		4720481		True				
ANR	4720534	CFGExitNode	EXIT		4720481		True				
ANR	4720535	Symbol	us . MaximumLength		4720481						
ANR	4720536	Symbol	psz		4720481						
ANR	4720537	Symbol	wcslen		4720481						
ANR	4720538	Symbol	us . Length		4720481						
ANR	4720539	Symbol	cch		4720481						
ANR	4720540	Symbol	us . Buffer		4720481						
ANR	4720541	Symbol	us		4720481						
ANR	4720542	Function	dynuser :: createaccount	513:0:13020:14048							
ANR	4720543	FunctionDef	dynuser :: createaccount ()		4720542	0					
ANR	4720544	CompoundStatement		513:30:13050:14048	4720542	0					
ANR	4720545	Statement	USER_INFO_1	514:1:13053:13063	4720542	0	True				
ANR	4720546	Statement	userInfo	514:13:13065:13072	4720542	1	True				
ANR	4720547	Statement	=	514:22:13074:13074	4720542	2	True				
ANR	4720548	CompoundStatement		2:24:25:25	4720542	3					
ANR	4720549	Statement	accountname_t	514:26:13078:13090	4720542	0	True				
ANR	4720550	Statement	","	514:39:13091:13091	4720542	1	True				
ANR	4720551	Statement	password_t	514:41:13093:13102	4720542	2	True				
ANR	4720552	Statement	","	514:51:13103:13103	4720542	3	True				
ANR	4720553	Statement	0	514:53:13105:13105	4720542	4	True				
ANR	4720554	Statement	","	514:54:13106:13106	4720542	5	True				
ANR	4720555	Statement	USER_PRIV_USER	515:8:13138:13151	4720542	6	True				
ANR	4720556	Statement	","	515:22:13152:13152	4720542	7	True				
ANR	4720557	Statement	L	516:8:13183:13183	4720542	8	True				
ANR	4720558	Statement	""""""	516:9:13184:13185	4720542	9	True				
ANR	4720559	Statement	","	516:11:13186:13186	4720542	10	True				
ANR	4720560	Statement	L	517:8:13217:13217	4720542	11	True				
ANR	4720561	Statement	"""Dynamically created Condor account."""	517:9:13218:13254	4720542	12	True				
ANR	4720562	Statement	","	517:46:13255:13255	4720542	13	True				
ANR	4720563	Statement	UF_SCRIPT	518:8:13276:13284	4720542	14	True				
ANR	4720564	Statement	","	518:17:13285:13285	4720542	15	True				
ANR	4720565	Statement	L	519:8:13320:13320	4720542	16	True				
ANR	4720566	Statement	""""""	519:9:13321:13322	4720542	17	True				
ANR	4720567	ExpressionStatement		519:13:13325:13325	4720542	4	True				
ANR	4720568	IdentifierDeclStatement	DWORD nParam = 0 ;	520:1:13352:13368	4720542	5	True				
ANR	4720569	IdentifierDecl	nParam = 0		4720542	0					
ANR	4720570	IdentifierDeclType	DWORD		4720542	0					
ANR	4720571	Identifier	nParam		4720542	1					
ANR	4720572	AssignmentExpression	nParam = 0		4720542	2		=			
ANR	4720573	Identifier	nParam		4720542	0					
ANR	4720574	PrimaryExpression	0		4720542	1					
ANR	4720575	IdentifierDeclStatement	"NET_API_STATUS nerr = NetUserAdd ( 0 , 1 , ( BYTE * ) & userInfo , & nParam ) ;"	529:1:13553:13676	4720542	6	True				
ANR	4720576	IdentifierDecl	"nerr = NetUserAdd ( 0 , 1 , ( BYTE * ) & userInfo , & nParam )"		4720542	0					
ANR	4720577	IdentifierDeclType	NET_API_STATUS		4720542	0					
ANR	4720578	Identifier	nerr		4720542	1					
ANR	4720579	AssignmentExpression	"nerr = NetUserAdd ( 0 , 1 , ( BYTE * ) & userInfo , & nParam )"		4720542	2		=			
ANR	4720580	Identifier	nerr		4720542	0					
ANR	4720581	CallExpression	"NetUserAdd ( 0 , 1 , ( BYTE * ) & userInfo , & nParam )"		4720542	1					
ANR	4720582	Callee	NetUserAdd		4720542	0					
ANR	4720583	Identifier	NetUserAdd		4720542	0					
ANR	4720584	ArgumentList	0		4720542	1					
ANR	4720585	Argument	0		4720542	0					
ANR	4720586	PrimaryExpression	0		4720542	0					
ANR	4720587	Argument	1		4720542	1					
ANR	4720588	PrimaryExpression	1		4720542	0					
ANR	4720589	Argument	( BYTE * ) & userInfo		4720542	2					
ANR	4720590	CastExpression	( BYTE * ) & userInfo		4720542	0					
ANR	4720591	CastTarget	BYTE *		4720542	0					
ANR	4720592	UnaryOperationExpression	& userInfo		4720542	1					
ANR	4720593	UnaryOperator	&		4720542	0					
ANR	4720594	Identifier	userInfo		4720542	1					
ANR	4720595	Argument	& nParam		4720542	3					
ANR	4720596	UnaryOperationExpression	& nParam		4720542	0					
ANR	4720597	UnaryOperator	&		4720542	0					
ANR	4720598	Identifier	nParam		4720542	1					
ANR	4720599	IfStatement	if ( NERR_Success == nerr )		4720542	7					
ANR	4720600	Condition	NERR_Success == nerr	534:6:13685:13704	4720542	0	True				
ANR	4720601	EqualityExpression	NERR_Success == nerr		4720542	0		==			
ANR	4720602	Identifier	NERR_Success		4720542	0					
ANR	4720603	Identifier	nerr		4720542	1					
ANR	4720604	CompoundStatement		22:29:657:657	4720542	1					
ANR	4720605	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Account %s created successfully\\n"" , accountname )"	535:2:13712:13781	4720542	0	True				
ANR	4720606	CallExpression	"dprintf ( D_FULLDEBUG , ""Account %s created successfully\\n"" , accountname )"		4720542	0					
ANR	4720607	Callee	dprintf		4720542	0					
ANR	4720608	Identifier	dprintf		4720542	0					
ANR	4720609	ArgumentList	D_FULLDEBUG		4720542	1					
ANR	4720610	Argument	D_FULLDEBUG		4720542	0					
ANR	4720611	Identifier	D_FULLDEBUG		4720542	0					
ANR	4720612	Argument	"""Account %s created successfully\\n"""		4720542	1					
ANR	4720613	PrimaryExpression	"""Account %s created successfully\\n"""		4720542	0					
ANR	4720614	Argument	accountname		4720542	2					
ANR	4720615	Identifier	accountname		4720542	0					
ANR	4720616	ElseStatement	else		4720542	0					
ANR	4720617	IfStatement	if ( NERR_UserExists == nerr )		4720542	0					
ANR	4720618	Condition	NERR_UserExists == nerr	536:13:13796:13818	4720542	0	True				
ANR	4720619	EqualityExpression	NERR_UserExists == nerr		4720542	0		==			
ANR	4720620	Identifier	NERR_UserExists		4720542	0					
ANR	4720621	Identifier	nerr		4720542	1					
ANR	4720622	CompoundStatement		24:39:771:771	4720542	1					
ANR	4720623	ExpressionStatement	"dprintf ( D_ALWAYS , ""Account %s already exists!\\n"" , accountname )"	537:2:13826:13887	4720542	0	True				
ANR	4720624	CallExpression	"dprintf ( D_ALWAYS , ""Account %s already exists!\\n"" , accountname )"		4720542	0					
ANR	4720625	Callee	dprintf		4720542	0					
ANR	4720626	Identifier	dprintf		4720542	0					
ANR	4720627	ArgumentList	D_ALWAYS		4720542	1					
ANR	4720628	Argument	D_ALWAYS		4720542	0					
ANR	4720629	Identifier	D_ALWAYS		4720542	0					
ANR	4720630	Argument	"""Account %s already exists!\\n"""		4720542	1					
ANR	4720631	PrimaryExpression	"""Account %s already exists!\\n"""		4720542	0					
ANR	4720632	Argument	accountname		4720542	2					
ANR	4720633	Identifier	accountname		4720542	0					
ANR	4720634	ElseStatement	else		4720542	0					
ANR	4720635	CompoundStatement		27:8:911:911	4720542	0					
ANR	4720636	ExpressionStatement	"dprintf ( D_ALWAYS , ""Account %s creation failed! (err=%d)\\n"" , accountname , nerr )"	540:2:13966:14042	4720542	0	True				
ANR	4720637	CallExpression	"dprintf ( D_ALWAYS , ""Account %s creation failed! (err=%d)\\n"" , accountname , nerr )"		4720542	0					
ANR	4720638	Callee	dprintf		4720542	0					
ANR	4720639	Identifier	dprintf		4720542	0					
ANR	4720640	ArgumentList	D_ALWAYS		4720542	1					
ANR	4720641	Argument	D_ALWAYS		4720542	0					
ANR	4720642	Identifier	D_ALWAYS		4720542	0					
ANR	4720643	Argument	"""Account %s creation failed! (err=%d)\\n"""		4720542	1					
ANR	4720644	PrimaryExpression	"""Account %s creation failed! (err=%d)\\n"""		4720542	0					
ANR	4720645	Argument	accountname		4720542	2					
ANR	4720646	Identifier	accountname		4720542	0					
ANR	4720647	Argument	nerr		4720542	3					
ANR	4720648	Identifier	nerr		4720542	0					
ANR	4720649	ReturnType	void		4720542	1					
ANR	4720650	Identifier	dynuser :: createaccount		4720542	2					
ANR	4720651	ParameterList			4720542	3					
ANR	4720652	CFGEntryNode	ENTRY		4720542		True				
ANR	4720653	CFGExitNode	EXIT		4720542		True				
ANR	4720654	Symbol	NetUserAdd		4720542						
ANR	4720655	Symbol	nerr		4720542						
ANR	4720656	Symbol	accountname		4720542						
ANR	4720657	Symbol	nParam		4720542						
ANR	4720658	Symbol	& nParam		4720542						
ANR	4720659	Symbol	NERR_Success		4720542						
ANR	4720660	Symbol	NERR_UserExists		4720542						
ANR	4720661	Symbol	D_ALWAYS		4720542						
ANR	4720662	Symbol	D_FULLDEBUG		4720542						
ANR	4720663	Symbol	& userInfo		4720542						
ANR	4720664	Function	dynuser :: hide_user	558:0:14390:16058							
ANR	4720665	FunctionDef	dynuser :: hide_user ()		4720664	0					
ANR	4720666	CompoundStatement		558:26:14416:16058	4720664	0					
ANR	4720667	IdentifierDeclStatement	HKEY subkey = NULL ;	560:1:14420:14439	4720664	0	True				
ANR	4720668	IdentifierDecl	subkey = NULL		4720664	0					
ANR	4720669	IdentifierDeclType	HKEY		4720664	0					
ANR	4720670	Identifier	subkey		4720664	1					
ANR	4720671	AssignmentExpression	subkey = NULL		4720664	2		=			
ANR	4720672	Identifier	NULL		4720664	0					
ANR	4720673	Identifier	NULL		4720664	1					
ANR	4720674	Statement	LPCTSTR	561:1:14442:14448	4720664	1	True				
ANR	4720675	Statement	subkey_name	561:9:14450:14460	4720664	2	True				
ANR	4720676	Statement	=	561:21:14462:14462	4720664	3	True				
ANR	4720677	Statement	"""SOFTWARE\\\\Microsoft\\\\Windows NT\\\\"""	561:23:14464:14498	4720664	4	True				
ANR	4720678	ExpressionStatement	"""CurrentVersion\\\\Winlogon\\\\SpecialAccounts\\\\UserList"""	562:2:14502:14555	4720664	5	True				
ANR	4720679	PrimaryExpression	"""CurrentVersion\\\\Winlogon\\\\SpecialAccounts\\\\UserList"""		4720664	0					
ANR	4720680	IdentifierDeclStatement	DWORD hide_user = 0 ;	563:1:14558:14577	4720664	6	True				
ANR	4720681	IdentifierDecl	hide_user = 0		4720664	0					
ANR	4720682	IdentifierDeclType	DWORD		4720664	0					
ANR	4720683	Identifier	hide_user		4720664	1					
ANR	4720684	AssignmentExpression	hide_user = 0		4720664	2		=			
ANR	4720685	Identifier	hide_user		4720664	0					
ANR	4720686	PrimaryExpression	0		4720664	1					
ANR	4720687	IdentifierDeclStatement	LONG ok = ERROR_SUCCESS ;	564:1:14580:14605	4720664	7	True				
ANR	4720688	IdentifierDecl	ok = ERROR_SUCCESS		4720664	0					
ANR	4720689	IdentifierDeclType	LONG		4720664	0					
ANR	4720690	Identifier	ok		4720664	1					
ANR	4720691	AssignmentExpression	ok = ERROR_SUCCESS		4720664	2		=			
ANR	4720692	Identifier	ERROR_SUCCESS		4720664	0					
ANR	4720693	Identifier	ERROR_SUCCESS		4720664	1					
ANR	4720694	IdentifierDeclStatement	REGSAM rsAccessMask = 0 ;	565:1:14608:14629	4720664	8	True				
ANR	4720695	IdentifierDecl	rsAccessMask = 0		4720664	0					
ANR	4720696	IdentifierDeclType	REGSAM		4720664	0					
ANR	4720697	Identifier	rsAccessMask		4720664	1					
ANR	4720698	AssignmentExpression	rsAccessMask = 0		4720664	2		=			
ANR	4720699	Identifier	rsAccessMask		4720664	0					
ANR	4720700	PrimaryExpression	0		4720664	1					
ANR	4720701	IdentifierDeclStatement	DWORD dwDisposition = 0 ;	566:1:14632:14653	4720664	9	True				
ANR	4720702	IdentifierDecl	dwDisposition = 0		4720664	0					
ANR	4720703	IdentifierDeclType	DWORD		4720664	0					
ANR	4720704	Identifier	dwDisposition		4720664	1					
ANR	4720705	AssignmentExpression	dwDisposition = 0		4720664	2		=			
ANR	4720706	Identifier	dwDisposition		4720664	0					
ANR	4720707	PrimaryExpression	0		4720664	1					
ANR	4720708	ExpressionStatement	rsAccessMask = KEY_WOW64_64KEY	569:2:14700:14730	4720664	10	True				
ANR	4720709	AssignmentExpression	rsAccessMask = KEY_WOW64_64KEY		4720664	0		=			
ANR	4720710	Identifier	rsAccessMask		4720664	0					
ANR	4720711	Identifier	KEY_WOW64_64KEY		4720664	1					
ANR	4720712	Statement	__try	571:1:14735:14739	4720664	11	True				
ANR	4720713	CompoundStatement		14:7:324:324	4720664	12					
ANR	4720714	ExpressionStatement	"ok = RegCreateKeyEx ( HKEY_LOCAL_MACHINE , subkey_name , 0 , NULL , REG_OPTION_NON_VOLATILE , KEY_READ | KEY_WRITE | rsAccessMask , NULL , & subkey , & dwDisposition )"	576:2:14830:15028	4720664	0	True				
ANR	4720715	AssignmentExpression	"ok = RegCreateKeyEx ( HKEY_LOCAL_MACHINE , subkey_name , 0 , NULL , REG_OPTION_NON_VOLATILE , KEY_READ | KEY_WRITE | rsAccessMask , NULL , & subkey , & dwDisposition )"		4720664	0		=			
ANR	4720716	Identifier	ok		4720664	0					
ANR	4720717	CallExpression	"RegCreateKeyEx ( HKEY_LOCAL_MACHINE , subkey_name , 0 , NULL , REG_OPTION_NON_VOLATILE , KEY_READ | KEY_WRITE | rsAccessMask , NULL , & subkey , & dwDisposition )"		4720664	1					
ANR	4720718	Callee	RegCreateKeyEx		4720664	0					
ANR	4720719	Identifier	RegCreateKeyEx		4720664	0					
ANR	4720720	ArgumentList	HKEY_LOCAL_MACHINE		4720664	1					
ANR	4720721	Argument	HKEY_LOCAL_MACHINE		4720664	0					
ANR	4720722	Identifier	HKEY_LOCAL_MACHINE		4720664	0					
ANR	4720723	Argument	subkey_name		4720664	1					
ANR	4720724	Identifier	subkey_name		4720664	0					
ANR	4720725	Argument	0		4720664	2					
ANR	4720726	PrimaryExpression	0		4720664	0					
ANR	4720727	Argument	NULL		4720664	3					
ANR	4720728	Identifier	NULL		4720664	0					
ANR	4720729	Argument	REG_OPTION_NON_VOLATILE		4720664	4					
ANR	4720730	Identifier	REG_OPTION_NON_VOLATILE		4720664	0					
ANR	4720731	Argument	KEY_READ | KEY_WRITE | rsAccessMask		4720664	5					
ANR	4720732	InclusiveOrExpression	KEY_READ | KEY_WRITE | rsAccessMask		4720664	0		|			
ANR	4720733	Identifier	KEY_READ		4720664	0					
ANR	4720734	InclusiveOrExpression	KEY_WRITE | rsAccessMask		4720664	1		|			
ANR	4720735	Identifier	KEY_WRITE		4720664	0					
ANR	4720736	Identifier	rsAccessMask		4720664	1					
ANR	4720737	Argument	NULL		4720664	6					
ANR	4720738	Identifier	NULL		4720664	0					
ANR	4720739	Argument	& subkey		4720664	7					
ANR	4720740	UnaryOperationExpression	& subkey		4720664	0					
ANR	4720741	UnaryOperator	&		4720664	0					
ANR	4720742	Identifier	subkey		4720664	1					
ANR	4720743	Argument	& dwDisposition		4720664	8					
ANR	4720744	UnaryOperationExpression	& dwDisposition		4720664	0					
ANR	4720745	UnaryOperator	&		4720664	0					
ANR	4720746	Identifier	dwDisposition		4720664	1					
ANR	4720747	IfStatement	if ( ERROR_SUCCESS != ok || NULL == subkey )		4720664	1					
ANR	4720748	Condition	ERROR_SUCCESS != ok || NULL == subkey	587:7:15038:15074	4720664	0	True				
ANR	4720749	OrExpression	ERROR_SUCCESS != ok || NULL == subkey		4720664	0		||			
ANR	4720750	EqualityExpression	ERROR_SUCCESS != ok		4720664	0		!=			
ANR	4720751	Identifier	ERROR_SUCCESS		4720664	0					
ANR	4720752	Identifier	ok		4720664	1					
ANR	4720753	EqualityExpression	NULL == subkey		4720664	1		==			
ANR	4720754	Identifier	NULL		4720664	0					
ANR	4720755	Identifier	subkey		4720664	1					
ANR	4720756	CompoundStatement		30:47:661:661	4720664	1					
ANR	4720757	Statement	dprintf	588:3:15083:15089	4720664	0	True				
ANR	4720758	Statement	(	588:11:15091:15091	4720664	1	True				
ANR	4720759	Statement	D_FULLDEBUG	588:13:15093:15103	4720664	2	True				
ANR	4720760	Statement	","	588:24:15104:15104	4720664	3	True				
ANR	4720761	Statement	"""dynuser::hide_user() """	588:25:15105:15127	4720664	4	True				
ANR	4720762	Statement	"""RegCreateKey(HKEY_LOCAL_MACHINE, %s) failed """	589:4:15133:15178	4720664	5	True				
ANR	4720763	Statement	"""(error=%d)\\n"""	590:4:15184:15197	4720664	6	True				
ANR	4720764	Statement	","	590:18:15198:15198	4720664	7	True				
ANR	4720765	Statement	subkey_name	590:20:15200:15210	4720664	8	True				
ANR	4720766	Statement	","	590:31:15211:15211	4720664	9	True				
ANR	4720767	Statement	GetLastError	590:33:15213:15224	4720664	10	True				
ANR	4720768	Statement	(	590:46:15226:15226	4720664	11	True				
ANR	4720769	Statement	)	590:47:15227:15227	4720664	12	True				
ANR	4720770	Statement	)	590:49:15229:15229	4720664	13	True				
ANR	4720771	ExpressionStatement		590:50:15230:15230	4720664	14	True				
ANR	4720772	ExpressionStatement	__leave	591:3:15235:15242	4720664	15	True				
ANR	4720773	Identifier	__leave		4720664	0					
ANR	4720774	ExpressionStatement	"ok = RegSetValueEx ( subkey , accountname , 0 , REG_DWORD , ( LPBYTE ) & hide_user , sizeof ( DWORD ) )"	595:2:15316:15441	4720664	2	True				
ANR	4720775	AssignmentExpression	"ok = RegSetValueEx ( subkey , accountname , 0 , REG_DWORD , ( LPBYTE ) & hide_user , sizeof ( DWORD ) )"		4720664	0		=			
ANR	4720776	Identifier	ok		4720664	0					
ANR	4720777	CallExpression	"RegSetValueEx ( subkey , accountname , 0 , REG_DWORD , ( LPBYTE ) & hide_user , sizeof ( DWORD ) )"		4720664	1					
ANR	4720778	Callee	RegSetValueEx		4720664	0					
ANR	4720779	Identifier	RegSetValueEx		4720664	0					
ANR	4720780	ArgumentList	subkey		4720664	1					
ANR	4720781	Argument	subkey		4720664	0					
ANR	4720782	Identifier	subkey		4720664	0					
ANR	4720783	Argument	accountname		4720664	1					
ANR	4720784	Identifier	accountname		4720664	0					
ANR	4720785	Argument	0		4720664	2					
ANR	4720786	PrimaryExpression	0		4720664	0					
ANR	4720787	Argument	REG_DWORD		4720664	3					
ANR	4720788	Identifier	REG_DWORD		4720664	0					
ANR	4720789	Argument	( LPBYTE ) & hide_user		4720664	4					
ANR	4720790	CastExpression	( LPBYTE ) & hide_user		4720664	0					
ANR	4720791	CastTarget	LPBYTE		4720664	0					
ANR	4720792	UnaryOperationExpression	& hide_user		4720664	1					
ANR	4720793	UnaryOperator	&		4720664	0					
ANR	4720794	Identifier	hide_user		4720664	1					
ANR	4720795	Argument	sizeof ( DWORD )		4720664	5					
ANR	4720796	SizeofExpression	sizeof ( DWORD )		4720664	0					
ANR	4720797	Sizeof	sizeof		4720664	0					
ANR	4720798	SizeofOperand	DWORD		4720664	1					
ANR	4720799	IfStatement	if ( ERROR_SUCCESS != ok )		4720664	3					
ANR	4720800	Condition	ERROR_SUCCESS != ok	603:7:15451:15469	4720664	0	True				
ANR	4720801	EqualityExpression	ERROR_SUCCESS != ok		4720664	0		!=			
ANR	4720802	Identifier	ERROR_SUCCESS		4720664	0					
ANR	4720803	Identifier	ok		4720664	1					
ANR	4720804	CompoundStatement		46:29:1056:1056	4720664	1					
ANR	4720805	Statement	dprintf	604:3:15478:15484	4720664	0	True				
ANR	4720806	Statement	(	604:11:15486:15486	4720664	1	True				
ANR	4720807	Statement	D_FULLDEBUG	604:13:15488:15498	4720664	2	True				
ANR	4720808	Statement	","	604:24:15499:15499	4720664	3	True				
ANR	4720809	Statement	"""dynuser::hide_user() """	604:25:15500:15522	4720664	4	True				
ANR	4720810	Statement	"""RegSetValueEx(%s, hide_user=0)) failed """	605:4:15528:15568	4720664	5	True				
ANR	4720811	Statement	"""(error=%d)\\n"""	606:4:15574:15587	4720664	6	True				
ANR	4720812	Statement	","	606:18:15588:15588	4720664	7	True				
ANR	4720813	Statement	accountname	606:20:15590:15600	4720664	8	True				
ANR	4720814	Statement	","	606:31:15601:15601	4720664	9	True				
ANR	4720815	Statement	GetLastError	606:33:15603:15614	4720664	10	True				
ANR	4720816	Statement	(	606:46:15616:15616	4720664	11	True				
ANR	4720817	Statement	)	606:47:15617:15617	4720664	12	True				
ANR	4720818	Statement	)	606:49:15619:15619	4720664	13	True				
ANR	4720819	ExpressionStatement		606:50:15620:15620	4720664	14	True				
ANR	4720820	ExpressionStatement	__leave	607:3:15625:15632	4720664	15	True				
ANR	4720821	Identifier	__leave		4720664	0					
ANR	4720822	Statement	__finally	614:1:15751:15759	4720664	13	True				
ANR	4720823	CompoundStatement		57:11:1344:1344	4720664	14					
ANR	4720824	IfStatement	if ( NULL != subkey )		4720664	0					
ANR	4720825	Condition	NULL != subkey	616:7:15773:15786	4720664	0	True				
ANR	4720826	EqualityExpression	NULL != subkey		4720664	0		!=			
ANR	4720827	Identifier	NULL		4720664	0					
ANR	4720828	Identifier	subkey		4720664	1					
ANR	4720829	CompoundStatement		59:24:1373:1373	4720664	1					
ANR	4720830	ExpressionStatement	RegCloseKey ( subkey )	617:3:15795:15817	4720664	0	True				
ANR	4720831	CallExpression	RegCloseKey ( subkey )		4720664	0					
ANR	4720832	Callee	RegCloseKey		4720664	0					
ANR	4720833	Identifier	RegCloseKey		4720664	0					
ANR	4720834	ArgumentList	subkey		4720664	1					
ANR	4720835	Argument	subkey		4720664	0					
ANR	4720836	Identifier	subkey		4720664	0					
ANR	4720837	IfStatement	if ( ERROR_SUCCESS != ok )		4720664	15					
ANR	4720838	Condition	ERROR_SUCCESS != ok	622:6:15836:15854	4720664	0	True				
ANR	4720839	EqualityExpression	ERROR_SUCCESS != ok		4720664	0		!=			
ANR	4720840	Identifier	ERROR_SUCCESS		4720664	0					
ANR	4720841	Identifier	ok		4720664	1					
ANR	4720842	CompoundStatement		65:28:1441:1441	4720664	1					
ANR	4720843	Statement	dprintf	623:2:15862:15868	4720664	0	True				
ANR	4720844	Statement	(	623:10:15870:15870	4720664	1	True				
ANR	4720845	Statement	D_FULLDEBUG	623:12:15872:15882	4720664	2	True				
ANR	4720846	Statement	","	623:23:15883:15883	4720664	3	True				
ANR	4720847	Statement	"""dynuser::hide_user() failed """	623:24:15884:15913	4720664	4	True				
ANR	4720848	Statement	"""to hide user \\""%s\\"" from the Windows Welcom Screen """	624:3:15918:15970	4720664	5	True				
ANR	4720849	Statement	"""(error=%d)\\n"""	625:3:15975:15988	4720664	6	True				
ANR	4720850	Statement	","	625:17:15989:15989	4720664	7	True				
ANR	4720851	Statement	accountname	625:19:15991:16001	4720664	8	True				
ANR	4720852	Statement	","	625:30:16002:16002	4720664	9	True				
ANR	4720853	Statement	GetLastError	625:32:16004:16015	4720664	10	True				
ANR	4720854	Statement	(	625:45:16017:16017	4720664	11	True				
ANR	4720855	Statement	)	625:46:16018:16018	4720664	12	True				
ANR	4720856	Statement	)	625:48:16020:16020	4720664	13	True				
ANR	4720857	ExpressionStatement		625:49:16021:16021	4720664	14	True				
ANR	4720858	ReturnStatement	return false ;	626:2:16025:16037	4720664	15	True				
ANR	4720859	Identifier	false		4720664	0					
ANR	4720860	ReturnStatement	return true ;	629:1:16044:16055	4720664	16	True				
ANR	4720861	Identifier	true		4720664	0					
ANR	4720862	ReturnType	bool		4720664	1					
ANR	4720863	Identifier	dynuser :: hide_user		4720664	2					
ANR	4720864	ParameterList			4720664	3					
ANR	4720865	CFGEntryNode	ENTRY		4720664		True				
ANR	4720866	CFGExitNode	EXIT		4720664		True				
ANR	4720867	Symbol	KEY_WOW64_64KEY		4720664						
ANR	4720868	Symbol	NULL		4720664						
ANR	4720869	Symbol	subkey		4720664						
ANR	4720870	Symbol	HKEY_LOCAL_MACHINE		4720664						
ANR	4720871	Symbol	rsAccessMask		4720664						
ANR	4720872	Symbol	RegSetValueEx		4720664						
ANR	4720873	Symbol	false		4720664						
ANR	4720874	Symbol	& subkey		4720664						
ANR	4720875	Symbol	hide_user		4720664						
ANR	4720876	Symbol	REG_OPTION_NON_VOLATILE		4720664						
ANR	4720877	Symbol	KEY_WRITE		4720664						
ANR	4720878	Symbol	& hide_user		4720664						
ANR	4720879	Symbol	subkey_name		4720664						
ANR	4720880	Symbol	KEY_READ		4720664						
ANR	4720881	Symbol	RegCreateKeyEx		4720664						
ANR	4720882	Symbol	ERROR_SUCCESS		4720664						
ANR	4720883	Symbol	accountname		4720664						
ANR	4720884	Symbol	dwDisposition		4720664						
ANR	4720885	Symbol	& dwDisposition		4720664						
ANR	4720886	Symbol	true		4720664						
ANR	4720887	Symbol	REG_DWORD		4720664						
ANR	4720888	Symbol	ok		4720664						
ANR	4720889	Function	dynuser :: add_users_group	639:0:16142:16971							
ANR	4720890	FunctionDef	dynuser :: add_users_group ()		4720889	0					
ANR	4720891	CompoundStatement		639:32:16174:16971	4720889	0					
ANR	4720892	IdentifierDeclStatement	LOCALGROUP_MEMBERS_INFO_0 lmi ;	641:1:16212:16241	4720889	0	True				
ANR	4720893	IdentifierDecl	lmi		4720889	0					
ANR	4720894	IdentifierDeclType	LOCALGROUP_MEMBERS_INFO_0		4720889	0					
ANR	4720895	Identifier	lmi		4720889	1					
ANR	4720896	IdentifierDeclStatement	wchar_t UserGroupName [ 255 ] ;	642:1:16244:16270	4720889	1	True				
ANR	4720897	IdentifierDecl	UserGroupName [ 255 ]		4720889	0					
ANR	4720898	IdentifierDeclType	wchar_t [ 255 ]		4720889	0					
ANR	4720899	Identifier	UserGroupName		4720889	1					
ANR	4720900	PrimaryExpression	255		4720889	2					
ANR	4720901	IdentifierDeclStatement	char * tmp ;	643:1:16273:16282	4720889	2	True				
ANR	4720902	IdentifierDecl	* tmp		4720889	0					
ANR	4720903	IdentifierDeclType	char *		4720889	0					
ANR	4720904	Identifier	tmp		4720889	1					
ANR	4720905	ExpressionStatement	tmp = getUserGroupName ( )	645:1:16286:16310	4720889	3	True				
ANR	4720906	AssignmentExpression	tmp = getUserGroupName ( )		4720889	0		=			
ANR	4720907	Identifier	tmp		4720889	0					
ANR	4720908	CallExpression	getUserGroupName ( )		4720889	1					
ANR	4720909	Callee	getUserGroupName		4720889	0					
ANR	4720910	Identifier	getUserGroupName		4720889	0					
ANR	4720911	ArgumentList			4720889	1					
ANR	4720912	Statement	swprintf	646:1:16313:16320	4720889	4	True				
ANR	4720913	Statement	(	646:9:16321:16321	4720889	5	True				
ANR	4720914	Statement	UserGroupName	646:10:16322:16334	4720889	6	True				
ANR	4720915	Statement	","	646:23:16335:16335	4720889	7	True				
ANR	4720916	Statement	L	646:25:16337:16337	4720889	8	True				
ANR	4720917	Statement	"""%S"""	646:26:16338:16341	4720889	9	True				
ANR	4720918	Statement	","	646:30:16342:16342	4720889	10	True				
ANR	4720919	Statement	tmp	646:32:16344:16346	4720889	11	True				
ANR	4720920	Statement	)	646:35:16347:16347	4720889	12	True				
ANR	4720921	ExpressionStatement		646:36:16348:16348	4720889	13	True				
ANR	4720922	Statement	delete	647:1:16351:16356	4720889	14	True				
ANR	4720923	Statement	[	647:7:16357:16357	4720889	15	True				
ANR	4720924	Statement	]	647:8:16358:16358	4720889	16	True				
ANR	4720925	ExpressionStatement	tmp	647:10:16360:16363	4720889	17	True				
ANR	4720926	Identifier	tmp		4720889	0					
ANR	4720927	ExpressionStatement	tmp = NULL	648:1:16366:16376	4720889	18	True				
ANR	4720928	AssignmentExpression	tmp = NULL		4720889	0		=			
ANR	4720929	Identifier	tmp		4720889	0					
ANR	4720930	Identifier	NULL		4720889	1					
ANR	4720931	ExpressionStatement	lmi . lgrmi0_sid = this -> psid	650:1:16380:16407	4720889	19	True				
ANR	4720932	AssignmentExpression	lmi . lgrmi0_sid = this -> psid		4720889	0		=			
ANR	4720933	MemberAccess	lmi . lgrmi0_sid		4720889	0					
ANR	4720934	Identifier	lmi		4720889	0					
ANR	4720935	Identifier	lgrmi0_sid		4720889	1					
ANR	4720936	PtrMemberAccess	this -> psid		4720889	1					
ANR	4720937	Identifier	this		4720889	0					
ANR	4720938	Identifier	psid		4720889	1					
ANR	4720939	IdentifierDeclStatement	"NET_API_STATUS nerr = NetLocalGroupAddMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 ) ;"	652:1:16411:16667	4720889	20	True				
ANR	4720940	IdentifierDecl	"nerr = NetLocalGroupAddMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 )"		4720889	0					
ANR	4720941	IdentifierDeclType	NET_API_STATUS		4720889	0					
ANR	4720942	Identifier	nerr		4720889	1					
ANR	4720943	AssignmentExpression	"nerr = NetLocalGroupAddMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 )"		4720889	2		=			
ANR	4720944	Identifier	nerr		4720889	0					
ANR	4720945	CallExpression	"NetLocalGroupAddMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 )"		4720889	1					
ANR	4720946	Callee	NetLocalGroupAddMembers		4720889	0					
ANR	4720947	Identifier	NetLocalGroupAddMembers		4720889	0					
ANR	4720948	ArgumentList	NULL		4720889	1					
ANR	4720949	Argument	NULL		4720889	0					
ANR	4720950	Identifier	NULL		4720889	0					
ANR	4720951	Argument	UserGroupName		4720889	1					
ANR	4720952	Identifier	UserGroupName		4720889	0					
ANR	4720953	Argument	0		4720889	2					
ANR	4720954	PrimaryExpression	0		4720889	0					
ANR	4720955	Argument	( LPBYTE ) & lmi		4720889	3					
ANR	4720956	CastExpression	( LPBYTE ) & lmi		4720889	0					
ANR	4720957	CastTarget	LPBYTE		4720889	0					
ANR	4720958	UnaryOperationExpression	& lmi		4720889	1					
ANR	4720959	UnaryOperator	&		4720889	0					
ANR	4720960	Identifier	lmi		4720889	1					
ANR	4720961	Argument	1		4720889	4					
ANR	4720962	PrimaryExpression	1		4720889	0					
ANR	4720963	IfStatement	if ( NERR_Success == nerr )		4720889	21					
ANR	4720964	Condition	NERR_Success == nerr	660:6:16676:16695	4720889	0	True				
ANR	4720965	EqualityExpression	NERR_Success == nerr		4720889	0		==			
ANR	4720966	Identifier	NERR_Success		4720889	0					
ANR	4720967	Identifier	nerr		4720889	1					
ANR	4720968	CompoundStatement		22:29:524:524	4720889	1					
ANR	4720969	ReturnStatement	return true ;	661:2:16703:16714	4720889	0	True				
ANR	4720970	Identifier	true		4720889	0					
ANR	4720971	ElseStatement	else		4720889	0					
ANR	4720972	IfStatement	if ( nerr == ERROR_ACCESS_DENIED )		4720889	0					
ANR	4720973	Condition	nerr == ERROR_ACCESS_DENIED	663:11:16730:16756	4720889	0	True				
ANR	4720974	EqualityExpression	nerr == ERROR_ACCESS_DENIED		4720889	0		==			
ANR	4720975	Identifier	nerr		4720889	0					
ANR	4720976	Identifier	ERROR_ACCESS_DENIED		4720889	1					
ANR	4720977	CompoundStatement		25:41:585:585	4720889	1					
ANR	4720978	ExpressionStatement	"EXCEPT ( ""User %s not added to \\""Users\\"" group, access denied."" , accountname )"	664:2:16764:16838	4720889	0	True				
ANR	4720979	CallExpression	"EXCEPT ( ""User %s not added to \\""Users\\"" group, access denied."" , accountname )"		4720889	0					
ANR	4720980	Callee	EXCEPT		4720889	0					
ANR	4720981	Identifier	EXCEPT		4720889	0					
ANR	4720982	ArgumentList	"""User %s not added to \\""Users\\"" group, access denied."""		4720889	1					
ANR	4720983	Argument	"""User %s not added to \\""Users\\"" group, access denied."""		4720889	0					
ANR	4720984	PrimaryExpression	"""User %s not added to \\""Users\\"" group, access denied."""		4720889	0					
ANR	4720985	Argument	accountname		4720889	1					
ANR	4720986	Identifier	accountname		4720889	0					
ANR	4720987	ExpressionStatement	"EXCEPT ( ""Cannot add %s to \\""Users\\"" group, unknown error (err=%d)."" , accountname , nerr )"	668:1:16868:16952	4720889	22	True				
ANR	4720988	CallExpression	"EXCEPT ( ""Cannot add %s to \\""Users\\"" group, unknown error (err=%d)."" , accountname , nerr )"		4720889	0					
ANR	4720989	Callee	EXCEPT		4720889	0					
ANR	4720990	Identifier	EXCEPT		4720889	0					
ANR	4720991	ArgumentList	"""Cannot add %s to \\""Users\\"" group, unknown error (err=%d)."""		4720889	1					
ANR	4720992	Argument	"""Cannot add %s to \\""Users\\"" group, unknown error (err=%d)."""		4720889	0					
ANR	4720993	PrimaryExpression	"""Cannot add %s to \\""Users\\"" group, unknown error (err=%d)."""		4720889	0					
ANR	4720994	Argument	accountname		4720889	1					
ANR	4720995	Identifier	accountname		4720889	0					
ANR	4720996	Argument	nerr		4720889	2					
ANR	4720997	Identifier	nerr		4720889	0					
ANR	4720998	ReturnStatement	return false ;	670:1:16957:16969	4720889	23	True				
ANR	4720999	Identifier	false		4720889	0					
ANR	4721000	ReturnType	bool		4720889	1					
ANR	4721001	Identifier	dynuser :: add_users_group		4720889	2					
ANR	4721002	ParameterList			4720889	3					
ANR	4721003	CFGEntryNode	ENTRY		4720889		True				
ANR	4721004	CFGExitNode	EXIT		4720889		True				
ANR	4721005	Symbol	getUserGroupName		4720889						
ANR	4721006	Symbol	NULL		4720889						
ANR	4721007	Symbol	nerr		4720889						
ANR	4721008	Symbol	this		4720889						
ANR	4721009	Symbol	NERR_Success		4720889						
ANR	4721010	Symbol	false		4720889						
ANR	4721011	Symbol	lmi		4720889						
ANR	4721012	Symbol	& lmi		4720889						
ANR	4721013	Symbol	this -> psid		4720889						
ANR	4721014	Symbol	* this		4720889						
ANR	4721015	Symbol	ERROR_ACCESS_DENIED		4720889						
ANR	4721016	Symbol	accountname		4720889						
ANR	4721017	Symbol	tmp		4720889						
ANR	4721018	Symbol	lmi . lgrmi0_sid		4720889						
ANR	4721019	Symbol	UserGroupName		4720889						
ANR	4721020	Symbol	true		4720889						
ANR	4721021	Symbol	NetLocalGroupAddMembers		4720889						
ANR	4721022	Function	dynuser :: del_users_group	680:0:17061:17735							
ANR	4721023	FunctionDef	dynuser :: del_users_group ()		4721022	0					
ANR	4721024	CompoundStatement		680:32:17093:17735	4721022	0					
ANR	4721025	IdentifierDeclStatement	LOCALGROUP_MEMBERS_INFO_0 lmi ;	682:1:17131:17160	4721022	0	True				
ANR	4721026	IdentifierDecl	lmi		4721022	0					
ANR	4721027	IdentifierDeclType	LOCALGROUP_MEMBERS_INFO_0		4721022	0					
ANR	4721028	Identifier	lmi		4721022	1					
ANR	4721029	IdentifierDeclStatement	wchar_t UserGroupName [ 255 ] ;	683:1:17163:17189	4721022	1	True				
ANR	4721030	IdentifierDecl	UserGroupName [ 255 ]		4721022	0					
ANR	4721031	IdentifierDeclType	wchar_t [ 255 ]		4721022	0					
ANR	4721032	Identifier	UserGroupName		4721022	1					
ANR	4721033	PrimaryExpression	255		4721022	2					
ANR	4721034	IdentifierDeclStatement	char * tmp ;	684:1:17192:17201	4721022	2	True				
ANR	4721035	IdentifierDecl	* tmp		4721022	0					
ANR	4721036	IdentifierDeclType	char *		4721022	0					
ANR	4721037	Identifier	tmp		4721022	1					
ANR	4721038	ExpressionStatement	tmp = getUserGroupName ( )	686:1:17205:17229	4721022	3	True				
ANR	4721039	AssignmentExpression	tmp = getUserGroupName ( )		4721022	0		=			
ANR	4721040	Identifier	tmp		4721022	0					
ANR	4721041	CallExpression	getUserGroupName ( )		4721022	1					
ANR	4721042	Callee	getUserGroupName		4721022	0					
ANR	4721043	Identifier	getUserGroupName		4721022	0					
ANR	4721044	ArgumentList			4721022	1					
ANR	4721045	Statement	swprintf	687:1:17232:17239	4721022	4	True				
ANR	4721046	Statement	(	687:9:17240:17240	4721022	5	True				
ANR	4721047	Statement	UserGroupName	687:10:17241:17253	4721022	6	True				
ANR	4721048	Statement	","	687:23:17254:17254	4721022	7	True				
ANR	4721049	Statement	L	687:25:17256:17256	4721022	8	True				
ANR	4721050	Statement	"""%S"""	687:26:17257:17260	4721022	9	True				
ANR	4721051	Statement	","	687:30:17261:17261	4721022	10	True				
ANR	4721052	Statement	tmp	687:32:17263:17265	4721022	11	True				
ANR	4721053	Statement	)	687:35:17266:17266	4721022	12	True				
ANR	4721054	ExpressionStatement		687:36:17267:17267	4721022	13	True				
ANR	4721055	Statement	delete	688:1:17270:17275	4721022	14	True				
ANR	4721056	Statement	[	688:7:17276:17276	4721022	15	True				
ANR	4721057	Statement	]	688:8:17277:17277	4721022	16	True				
ANR	4721058	ExpressionStatement	tmp	688:10:17279:17282	4721022	17	True				
ANR	4721059	Identifier	tmp		4721022	0					
ANR	4721060	ExpressionStatement	tmp = NULL	689:1:17285:17295	4721022	18	True				
ANR	4721061	AssignmentExpression	tmp = NULL		4721022	0		=			
ANR	4721062	Identifier	tmp		4721022	0					
ANR	4721063	Identifier	NULL		4721022	1					
ANR	4721064	ExpressionStatement	lmi . lgrmi0_sid = this -> psid	691:1:17299:17326	4721022	19	True				
ANR	4721065	AssignmentExpression	lmi . lgrmi0_sid = this -> psid		4721022	0		=			
ANR	4721066	MemberAccess	lmi . lgrmi0_sid		4721022	0					
ANR	4721067	Identifier	lmi		4721022	0					
ANR	4721068	Identifier	lgrmi0_sid		4721022	1					
ANR	4721069	PtrMemberAccess	this -> psid		4721022	1					
ANR	4721070	Identifier	this		4721022	0					
ANR	4721071	Identifier	psid		4721022	1					
ANR	4721072	IdentifierDeclStatement	"NET_API_STATUS nerr = NetLocalGroupDelMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 ) ;"	693:1:17330:17584	4721022	20	True				
ANR	4721073	IdentifierDecl	"nerr = NetLocalGroupDelMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 )"		4721022	0					
ANR	4721074	IdentifierDeclType	NET_API_STATUS		4721022	0					
ANR	4721075	Identifier	nerr		4721022	1					
ANR	4721076	AssignmentExpression	"nerr = NetLocalGroupDelMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 )"		4721022	2		=			
ANR	4721077	Identifier	nerr		4721022	0					
ANR	4721078	CallExpression	"NetLocalGroupDelMembers ( NULL , UserGroupName , 0 , ( LPBYTE ) & lmi , 1 )"		4721022	1					
ANR	4721079	Callee	NetLocalGroupDelMembers		4721022	0					
ANR	4721080	Identifier	NetLocalGroupDelMembers		4721022	0					
ANR	4721081	ArgumentList	NULL		4721022	1					
ANR	4721082	Argument	NULL		4721022	0					
ANR	4721083	Identifier	NULL		4721022	0					
ANR	4721084	Argument	UserGroupName		4721022	1					
ANR	4721085	Identifier	UserGroupName		4721022	0					
ANR	4721086	Argument	0		4721022	2					
ANR	4721087	PrimaryExpression	0		4721022	0					
ANR	4721088	Argument	( LPBYTE ) & lmi		4721022	3					
ANR	4721089	CastExpression	( LPBYTE ) & lmi		4721022	0					
ANR	4721090	CastTarget	LPBYTE		4721022	0					
ANR	4721091	UnaryOperationExpression	& lmi		4721022	1					
ANR	4721092	UnaryOperator	&		4721022	0					
ANR	4721093	Identifier	lmi		4721022	1					
ANR	4721094	Argument	1		4721022	4					
ANR	4721095	PrimaryExpression	1		4721022	0					
ANR	4721096	IfStatement	if ( NERR_Success == nerr )		4721022	21					
ANR	4721097	Condition	NERR_Success == nerr	701:6:17593:17612	4721022	0	True				
ANR	4721098	EqualityExpression	NERR_Success == nerr		4721022	0		==			
ANR	4721099	Identifier	NERR_Success		4721022	0					
ANR	4721100	Identifier	nerr		4721022	1					
ANR	4721101	CompoundStatement		22:29:522:522	4721022	1					
ANR	4721102	ReturnStatement	return true ;	702:2:17620:17631	4721022	0	True				
ANR	4721103	Identifier	true		4721022	0					
ANR	4721104	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser::del_users_group() NetLocalGroupDelMembers failed\\n"" )"	705:1:17638:17717	4721022	22	True				
ANR	4721105	CallExpression	"dprintf ( D_ALWAYS , ""dynuser::del_users_group() NetLocalGroupDelMembers failed\\n"" )"		4721022	0					
ANR	4721106	Callee	dprintf		4721022	0					
ANR	4721107	Identifier	dprintf		4721022	0					
ANR	4721108	ArgumentList	D_ALWAYS		4721022	1					
ANR	4721109	Argument	D_ALWAYS		4721022	0					
ANR	4721110	Identifier	D_ALWAYS		4721022	0					
ANR	4721111	Argument	"""dynuser::del_users_group() NetLocalGroupDelMembers failed\\n"""		4721022	1					
ANR	4721112	PrimaryExpression	"""dynuser::del_users_group() NetLocalGroupDelMembers failed\\n"""		4721022	0					
ANR	4721113	ReturnStatement	return false ;	706:1:17721:17733	4721022	23	True				
ANR	4721114	Identifier	false		4721022	0					
ANR	4721115	ReturnType	bool		4721022	1					
ANR	4721116	Identifier	dynuser :: del_users_group		4721022	2					
ANR	4721117	ParameterList			4721022	3					
ANR	4721118	CFGEntryNode	ENTRY		4721022		True				
ANR	4721119	CFGExitNode	EXIT		4721022		True				
ANR	4721120	Symbol	getUserGroupName		4721022						
ANR	4721121	Symbol	NULL		4721022						
ANR	4721122	Symbol	nerr		4721022						
ANR	4721123	Symbol	this		4721022						
ANR	4721124	Symbol	NERR_Success		4721022						
ANR	4721125	Symbol	D_ALWAYS		4721022						
ANR	4721126	Symbol	false		4721022						
ANR	4721127	Symbol	lmi		4721022						
ANR	4721128	Symbol	& lmi		4721022						
ANR	4721129	Symbol	this -> psid		4721022						
ANR	4721130	Symbol	* this		4721022						
ANR	4721131	Symbol	tmp		4721022						
ANR	4721132	Symbol	lmi . lgrmi0_sid		4721022						
ANR	4721133	Symbol	UserGroupName		4721022						
ANR	4721134	Symbol	true		4721022						
ANR	4721135	Symbol	NetLocalGroupDelMembers		4721022						
ANR	4721136	Function	dynuser :: dump_groups	711:0:17766:18638							
ANR	4721137	FunctionDef	dynuser :: dump_groups ()		4721136	0					
ANR	4721138	CompoundStatement		711:28:17794:18638	4721136	0					
ANR	4721139	IdentifierDeclStatement	LOCALGROUP_INFO_0 * lgz ;	713:1:17798:17820	4721136	0	True				
ANR	4721140	IdentifierDecl	* lgz		4721136	0					
ANR	4721141	IdentifierDeclType	LOCALGROUP_INFO_0 *		4721136	0					
ANR	4721142	Identifier	lgz		4721136	1					
ANR	4721143	IdentifierDeclStatement	unsigned long numentries ;	714:1:17823:17847	4721136	1	True				
ANR	4721144	IdentifierDecl	numentries		4721136	0					
ANR	4721145	IdentifierDeclType	unsigned long		4721136	0					
ANR	4721146	Identifier	numentries		4721136	1					
ANR	4721147	IdentifierDeclStatement	unsigned long totalentries ;	715:1:17850:17876	4721136	2	True				
ANR	4721148	IdentifierDecl	totalentries		4721136	0					
ANR	4721149	IdentifierDeclType	unsigned long		4721136	0					
ANR	4721150	Identifier	totalentries		4721136	1					
ANR	4721151	IdentifierDeclStatement	"NET_API_STATUS nerr = NetLocalGroupEnum ( NULL , ( DWORD ) 0 , ( BYTE * * ) & lgz , 100 * sizeof ( LOCALGROUP_INFO_0 ) , & numentries , & totalentries , NULL ) ;"	717:1:17880:18246	4721136	3	True				
ANR	4721152	IdentifierDecl	"nerr = NetLocalGroupEnum ( NULL , ( DWORD ) 0 , ( BYTE * * ) & lgz , 100 * sizeof ( LOCALGROUP_INFO_0 ) , & numentries , & totalentries , NULL )"		4721136	0					
ANR	4721153	IdentifierDeclType	NET_API_STATUS		4721136	0					
ANR	4721154	Identifier	nerr		4721136	1					
ANR	4721155	AssignmentExpression	"nerr = NetLocalGroupEnum ( NULL , ( DWORD ) 0 , ( BYTE * * ) & lgz , 100 * sizeof ( LOCALGROUP_INFO_0 ) , & numentries , & totalentries , NULL )"		4721136	2		=			
ANR	4721156	Identifier	nerr		4721136	0					
ANR	4721157	CallExpression	"NetLocalGroupEnum ( NULL , ( DWORD ) 0 , ( BYTE * * ) & lgz , 100 * sizeof ( LOCALGROUP_INFO_0 ) , & numentries , & totalentries , NULL )"		4721136	1					
ANR	4721158	Callee	NetLocalGroupEnum		4721136	0					
ANR	4721159	Identifier	NetLocalGroupEnum		4721136	0					
ANR	4721160	ArgumentList	NULL		4721136	1					
ANR	4721161	Argument	NULL		4721136	0					
ANR	4721162	Identifier	NULL		4721136	0					
ANR	4721163	Argument	( DWORD ) 0		4721136	1					
ANR	4721164	CastExpression	( DWORD ) 0		4721136	0					
ANR	4721165	CastTarget	DWORD		4721136	0					
ANR	4721166	PrimaryExpression	0		4721136	1					
ANR	4721167	Argument	( BYTE * * ) & lgz		4721136	2					
ANR	4721168	CastExpression	( BYTE * * ) & lgz		4721136	0					
ANR	4721169	CastTarget	BYTE * *		4721136	0					
ANR	4721170	UnaryOperationExpression	& lgz		4721136	1					
ANR	4721171	UnaryOperator	&		4721136	0					
ANR	4721172	Identifier	lgz		4721136	1					
ANR	4721173	Argument	100 * sizeof ( LOCALGROUP_INFO_0 )		4721136	3					
ANR	4721174	MultiplicativeExpression	100 * sizeof ( LOCALGROUP_INFO_0 )		4721136	0		*			
ANR	4721175	PrimaryExpression	100		4721136	0					
ANR	4721176	SizeofExpression	sizeof ( LOCALGROUP_INFO_0 )		4721136	1					
ANR	4721177	Sizeof	sizeof		4721136	0					
ANR	4721178	SizeofOperand	LOCALGROUP_INFO_0		4721136	1					
ANR	4721179	Argument	& numentries		4721136	4					
ANR	4721180	UnaryOperationExpression	& numentries		4721136	0					
ANR	4721181	UnaryOperator	&		4721136	0					
ANR	4721182	Identifier	numentries		4721136	1					
ANR	4721183	Argument	& totalentries		4721136	5					
ANR	4721184	UnaryOperationExpression	& totalentries		4721136	0					
ANR	4721185	UnaryOperator	&		4721136	0					
ANR	4721186	Identifier	totalentries		4721136	1					
ANR	4721187	Argument	NULL		4721136	6					
ANR	4721188	Identifier	NULL		4721136	0					
ANR	4721189	IfStatement	if ( nerr == NERR_Success )		4721136	4					
ANR	4721190	Condition	nerr == NERR_Success	727:6:18255:18274	4721136	0	True				
ANR	4721191	EqualityExpression	nerr == NERR_Success		4721136	0		==			
ANR	4721192	Identifier	nerr		4721136	0					
ANR	4721193	Identifier	NERR_Success		4721136	1					
ANR	4721194	CompoundStatement		17:29:483:483	4721136	1					
ANR	4721195	ExpressionStatement	"cout << ""Got the dump of "" << numentries << "" things!"" << endl"	728:2:18282:18338	4721136	0	True				
ANR	4721196	ShiftExpression	"cout << ""Got the dump of "" << numentries << "" things!"" << endl"		4721136	0		<<			
ANR	4721197	Identifier	cout		4721136	0					
ANR	4721198	ShiftExpression	"""Got the dump of "" << numentries << "" things!"" << endl"		4721136	1		<<			
ANR	4721199	PrimaryExpression	"""Got the dump of """		4721136	0					
ANR	4721200	ShiftExpression	"numentries << "" things!"" << endl"		4721136	1		<<			
ANR	4721201	Identifier	numentries		4721136	0					
ANR	4721202	ShiftExpression	""" things!"" << endl"		4721136	1		<<			
ANR	4721203	PrimaryExpression	""" things!"""		4721136	0					
ANR	4721204	Identifier	endl		4721136	1					
ANR	4721205	ForStatement	for ( int i = 0 ; i < numentries ; i ++ )		4721136	1					
ANR	4721206	ForInit	int i = 0 ;	729:7:18347:18356	4721136	0	True				
ANR	4721207	IdentifierDeclStatement	int i = 0 ;		4721136	0					
ANR	4721208	IdentifierDecl	i = 0		4721136	0					
ANR	4721209	IdentifierDeclType	int		4721136	0					
ANR	4721210	Identifier	i		4721136	1					
ANR	4721211	AssignmentExpression	i = 0		4721136	2		=			
ANR	4721212	Identifier	i		4721136	0					
ANR	4721213	PrimaryExpression	0		4721136	1					
ANR	4721214	Condition	i < numentries	729:18:18358:18371	4721136	1	True				
ANR	4721215	RelationalExpression	i < numentries		4721136	0		<			
ANR	4721216	Identifier	i		4721136	0					
ANR	4721217	Identifier	numentries		4721136	1					
ANR	4721218	PostIncDecOperationExpression	i ++	729:34:18374:18376	4721136	2	True				
ANR	4721219	Identifier	i		4721136	0					
ANR	4721220	IncDec	++		4721136	1					
ANR	4721221	CompoundStatement		19:39:584:584	4721136	3					
ANR	4721222	ExpressionStatement	"cout << ""Group "" << i << "":\\t"""	730:3:18384:18410	4721136	0	True				
ANR	4721223	ShiftExpression	"cout << ""Group "" << i << "":\\t"""		4721136	0		<<			
ANR	4721224	Identifier	cout		4721136	0					
ANR	4721225	ShiftExpression	"""Group "" << i << "":\\t"""		4721136	1		<<			
ANR	4721226	PrimaryExpression	"""Group """		4721136	0					
ANR	4721227	ShiftExpression	"i << "":\\t"""		4721136	1		<<			
ANR	4721228	Identifier	i		4721136	0					
ANR	4721229	PrimaryExpression	""":\\t"""		4721136	1					
ANR	4721230	ExpressionStatement	wcout << lgz [ i ] . lgrpi0_name	731:3:18415:18442	4721136	1	True				
ANR	4721231	ShiftExpression	wcout << lgz [ i ] . lgrpi0_name		4721136	0		<<			
ANR	4721232	Identifier	wcout		4721136	0					
ANR	4721233	MemberAccess	lgz [ i ] . lgrpi0_name		4721136	1					
ANR	4721234	ArrayIndexing	lgz [ i ]		4721136	0					
ANR	4721235	Identifier	lgz		4721136	0					
ANR	4721236	Identifier	i		4721136	1					
ANR	4721237	Identifier	lgrpi0_name		4721136	1					
ANR	4721238	ExpressionStatement	"cout << ""\\t"""	732:3:18447:18459	4721136	2	True				
ANR	4721239	ShiftExpression	"cout << ""\\t"""		4721136	0		<<			
ANR	4721240	Identifier	cout		4721136	0					
ANR	4721241	PrimaryExpression	"""\\t"""		4721136	1					
ANR	4721242	ExpressionStatement	cout << lgz [ i ] . lgrpi0_name << endl	734:3:18465:18499	4721136	3	True				
ANR	4721243	ShiftExpression	cout << lgz [ i ] . lgrpi0_name << endl		4721136	0		<<			
ANR	4721244	Identifier	cout		4721136	0					
ANR	4721245	ShiftExpression	lgz [ i ] . lgrpi0_name << endl		4721136	1		<<			
ANR	4721246	MemberAccess	lgz [ i ] . lgrpi0_name		4721136	0					
ANR	4721247	ArrayIndexing	lgz [ i ]		4721136	0					
ANR	4721248	Identifier	lgz		4721136	0					
ANR	4721249	Identifier	i		4721136	1					
ANR	4721250	Identifier	lgrpi0_name		4721136	1					
ANR	4721251	Identifier	endl		4721136	1					
ANR	4721252	ReturnStatement	return true ;	737:2:18508:18519	4721136	2	True				
ANR	4721253	Identifier	true		4721136	0					
ANR	4721254	ExpressionStatement	"cout << ""Didn't get the dump!"" << endl"	740:1:18526:18562	4721136	5	True				
ANR	4721255	ShiftExpression	"cout << ""Didn't get the dump!"" << endl"		4721136	0		<<			
ANR	4721256	Identifier	cout		4721136	0					
ANR	4721257	ShiftExpression	"""Didn't get the dump!"" << endl"		4721136	1		<<			
ANR	4721258	PrimaryExpression	"""Didn't get the dump!"""		4721136	0					
ANR	4721259	Identifier	endl		4721136	1					
ANR	4721260	ReturnStatement	return false ;	744:1:18623:18635	4721136	6	True				
ANR	4721261	Identifier	false		4721136	0					
ANR	4721262	ReturnType	bool		4721136	1					
ANR	4721263	Identifier	dynuser :: dump_groups		4721136	2					
ANR	4721264	ParameterList			4721136	3					
ANR	4721265	CFGEntryNode	ENTRY		4721136		True				
ANR	4721266	CFGExitNode	EXIT		4721136		True				
ANR	4721267	Symbol	& lgz		4721136						
ANR	4721268	Symbol	NULL		4721136						
ANR	4721269	Symbol	nerr		4721136						
ANR	4721270	Symbol	& numentries		4721136						
ANR	4721271	Symbol	NERR_Success		4721136						
ANR	4721272	Symbol	false		4721136						
ANR	4721273	Symbol	i		4721136						
ANR	4721274	Symbol	* lgz		4721136						
ANR	4721275	Symbol	& totalentries		4721136						
ANR	4721276	Symbol	NetLocalGroupEnum		4721136						
ANR	4721277	Symbol	totalentries		4721136						
ANR	4721278	Symbol	* i		4721136						
ANR	4721279	Symbol	true		4721136						
ANR	4721280	Symbol	numentries		4721136						
ANR	4721281	Symbol	lgz		4721136						
ANR	4721282	Function	dynuser :: update_psid	749:0:18649:19273							
ANR	4721283	FunctionDef	dynuser :: update_psid ()		4721282	0					
ANR	4721284	CompoundStatement		749:28:18677:19273	4721282	0					
ANR	4721285	IdentifierDeclStatement	SID_NAME_USE snu ;	750:1:18680:18696	4721282	0	True				
ANR	4721286	IdentifierDecl	snu		4721282	0					
ANR	4721287	IdentifierDeclType	SID_NAME_USE		4721282	0					
ANR	4721288	Identifier	snu		4721282	1					
ANR	4721289	IdentifierDeclStatement	bool result ;	751:1:18699:18710	4721282	1	True				
ANR	4721290	IdentifierDecl	result		4721282	0					
ANR	4721291	IdentifierDeclType	bool		4721282	0					
ANR	4721292	Identifier	result		4721282	1					
ANR	4721293	ExpressionStatement	result = TRUE	753:1:18715:18728	4721282	2	True				
ANR	4721294	AssignmentExpression	result = TRUE		4721282	0		=			
ANR	4721295	Identifier	result		4721282	0					
ANR	4721296	Identifier	TRUE		4721282	1					
ANR	4721297	ExpressionStatement	sidBufferSize = max_sid_length	755:1:18733:18763	4721282	3	True				
ANR	4721298	AssignmentExpression	sidBufferSize = max_sid_length		4721282	0		=			
ANR	4721299	Identifier	sidBufferSize		4721282	0					
ANR	4721300	Identifier	max_sid_length		4721282	1					
ANR	4721301	ExpressionStatement	domainBufferSize = max_domain_length	756:1:18766:18802	4721282	4	True				
ANR	4721302	AssignmentExpression	domainBufferSize = max_domain_length		4721282	0		=			
ANR	4721303	Identifier	domainBufferSize		4721282	0					
ANR	4721304	Identifier	max_domain_length		4721282	1					
ANR	4721305	IfStatement	"if ( ! LookupAccountName ( 0 , accountname , psid , & sidBufferSize , domainBuffer , & domainBufferSize , & snu ) )"		4721282	5					
ANR	4721306	Condition	"! LookupAccountName ( 0 , accountname , psid , & sidBufferSize , domainBuffer , & domainBufferSize , & snu )"	758:6:18811:18969	4721282	0	True				
ANR	4721307	UnaryOperationExpression	"! LookupAccountName ( 0 , accountname , psid , & sidBufferSize , domainBuffer , & domainBufferSize , & snu )"		4721282	0					
ANR	4721308	UnaryOperator	!		4721282	0					
ANR	4721309	CallExpression	"LookupAccountName ( 0 , accountname , psid , & sidBufferSize , domainBuffer , & domainBufferSize , & snu )"		4721282	1					
ANR	4721310	Callee	LookupAccountName		4721282	0					
ANR	4721311	Identifier	LookupAccountName		4721282	0					
ANR	4721312	ArgumentList	0		4721282	1					
ANR	4721313	Argument	0		4721282	0					
ANR	4721314	PrimaryExpression	0		4721282	0					
ANR	4721315	Argument	accountname		4721282	1					
ANR	4721316	Identifier	accountname		4721282	0					
ANR	4721317	Argument	psid		4721282	2					
ANR	4721318	Identifier	psid		4721282	0					
ANR	4721319	Argument	& sidBufferSize		4721282	3					
ANR	4721320	UnaryOperationExpression	& sidBufferSize		4721282	0					
ANR	4721321	UnaryOperator	&		4721282	0					
ANR	4721322	Identifier	sidBufferSize		4721282	1					
ANR	4721323	Argument	domainBuffer		4721282	4					
ANR	4721324	Identifier	domainBuffer		4721282	0					
ANR	4721325	Argument	& domainBufferSize		4721282	5					
ANR	4721326	UnaryOperationExpression	& domainBufferSize		4721282	0					
ANR	4721327	UnaryOperator	&		4721282	0					
ANR	4721328	Identifier	domainBufferSize		4721282	1					
ANR	4721329	Argument	& snu		4721282	6					
ANR	4721330	UnaryOperationExpression	& snu		4721282	0					
ANR	4721331	UnaryOperator	&		4721282	0					
ANR	4721332	Identifier	snu		4721282	1					
ANR	4721333	CompoundStatement		15:1:314:314	4721282	1					
ANR	4721334	Statement	dprintf	766:2:19108:19114	4721282	0	True				
ANR	4721335	Statement	(	766:9:19115:19115	4721282	1	True				
ANR	4721336	Statement	D_FULLDEBUG	766:10:19116:19126	4721282	2	True				
ANR	4721337	Statement	","	766:21:19127:19127	4721282	3	True				
ANR	4721338	Statement	"""dynuser::update_psid() LookupAccountName(%s)"""	766:23:19129:19174	4721282	4	True				
ANR	4721339	Statement	""" failed!\\n"""	767:3:19179:19190	4721282	5	True				
ANR	4721340	Statement	","	767:15:19191:19191	4721282	6	True				
ANR	4721341	Statement	accountname	767:17:19193:19203	4721282	7	True				
ANR	4721342	Statement	)	767:28:19204:19204	4721282	8	True				
ANR	4721343	ExpressionStatement		767:29:19205:19205	4721282	9	True				
ANR	4721344	ExpressionStatement	result = FALSE	769:2:19210:19224	4721282	10	True				
ANR	4721345	AssignmentExpression	result = FALSE		4721282	0		=			
ANR	4721346	Identifier	result		4721282	0					
ANR	4721347	Identifier	FALSE		4721282	1					
ANR	4721348	ElseStatement	else		4721282	0					
ANR	4721349	CompoundStatement		22:8:556:556	4721282	0					
ANR	4721350	ExpressionStatement	result = TRUE	771:2:19238:19251	4721282	0	True				
ANR	4721351	AssignmentExpression	result = TRUE		4721282	0		=			
ANR	4721352	Identifier	result		4721282	0					
ANR	4721353	Identifier	TRUE		4721282	1					
ANR	4721354	ReturnStatement	return result ;	774:1:19258:19271	4721282	6	True				
ANR	4721355	Identifier	result		4721282	0					
ANR	4721356	ReturnType	bool		4721282	1					
ANR	4721357	Identifier	dynuser :: update_psid		4721282	2					
ANR	4721358	ParameterList			4721282	3					
ANR	4721359	CFGEntryNode	ENTRY		4721282		True				
ANR	4721360	CFGExitNode	EXIT		4721282		True				
ANR	4721361	Symbol	domainBufferSize		4721282						
ANR	4721362	Symbol	& snu		4721282						
ANR	4721363	Symbol	TRUE		4721282						
ANR	4721364	Symbol	max_sid_length		4721282						
ANR	4721365	Symbol	psid		4721282						
ANR	4721366	Symbol	domainBuffer		4721282						
ANR	4721367	Symbol	result		4721282						
ANR	4721368	Symbol	sidBufferSize		4721282						
ANR	4721369	Symbol	accountname		4721282						
ANR	4721370	Symbol	& domainBufferSize		4721282						
ANR	4721371	Symbol	FALSE		4721282						
ANR	4721372	Symbol	snu		4721282						
ANR	4721373	Symbol	LookupAccountName		4721282						
ANR	4721374	Symbol	max_domain_length		4721282						
ANR	4721375	Symbol	& sidBufferSize		4721282						
ANR	4721376	Function	dynuser :: deleteuser	778:0:19277:22488							
ANR	4721377	FunctionDef	dynuser :: deleteuser (char const * username)		4721376	0					
ANR	4721378	CompoundStatement		778:49:19326:22488	4721376	0					
ANR	4721379	IdentifierDeclStatement	bool retval = true ;	780:1:19330:19348	4721376	0	True				
ANR	4721380	IdentifierDecl	retval = true		4721376	0					
ANR	4721381	IdentifierDeclType	bool		4721376	0					
ANR	4721382	Identifier	retval		4721376	1					
ANR	4721383	AssignmentExpression	retval = true		4721376	2		=			
ANR	4721384	Identifier	true		4721376	0					
ANR	4721385	Identifier	true		4721376	1					
ANR	4721386	IfStatement	if ( ! username )		4721376	1					
ANR	4721387	Condition	! username	782:5:19356:19364	4721376	0	True				
ANR	4721388	UnaryOperationExpression	! username		4721376	0					
ANR	4721389	UnaryOperator	!		4721376	0					
ANR	4721390	Identifier	username		4721376	1					
ANR	4721391	CompoundStatement		5:16:40:40	4721376	1					
ANR	4721392	ReturnStatement	return false ;	783:2:19371:19383	4721376	0	True				
ANR	4721393	Identifier	false		4721376	0					
ANR	4721394	IdentifierDeclStatement	const char * prefix = ACCOUNT_PREFIX ;	789:1:19593:19628	4721376	2	True				
ANR	4721395	IdentifierDecl	* prefix = ACCOUNT_PREFIX		4721376	0					
ANR	4721396	IdentifierDeclType	const char *		4721376	0					
ANR	4721397	Identifier	prefix		4721376	1					
ANR	4721398	AssignmentExpression	* prefix = ACCOUNT_PREFIX		4721376	2		=			
ANR	4721399	Identifier	ACCOUNT_PREFIX		4721376	0					
ANR	4721400	Identifier	ACCOUNT_PREFIX		4721376	1					
ANR	4721401	IfStatement	"if ( strncmp ( prefix , username , strlen ( prefix ) ) != 0 )"		4721376	3					
ANR	4721402	Condition	"strncmp ( prefix , username , strlen ( prefix ) ) != 0"	790:6:19636:19679	4721376	0	True				
ANR	4721403	EqualityExpression	"strncmp ( prefix , username , strlen ( prefix ) ) != 0"		4721376	0		!=			
ANR	4721404	CallExpression	"strncmp ( prefix , username , strlen ( prefix ) )"		4721376	0					
ANR	4721405	Callee	strncmp		4721376	0					
ANR	4721406	Identifier	strncmp		4721376	0					
ANR	4721407	ArgumentList	prefix		4721376	1					
ANR	4721408	Argument	prefix		4721376	0					
ANR	4721409	Identifier	prefix		4721376	0					
ANR	4721410	Argument	username		4721376	1					
ANR	4721411	Identifier	username		4721376	0					
ANR	4721412	Argument	strlen ( prefix )		4721376	2					
ANR	4721413	CallExpression	strlen ( prefix )		4721376	0					
ANR	4721414	Callee	strlen		4721376	0					
ANR	4721415	Identifier	strlen		4721376	0					
ANR	4721416	ArgumentList	prefix		4721376	1					
ANR	4721417	Argument	prefix		4721376	0					
ANR	4721418	Identifier	prefix		4721376	0					
ANR	4721419	PrimaryExpression	0		4721376	1					
ANR	4721420	CompoundStatement		13:53:356:356	4721376	1					
ANR	4721421	ExpressionStatement	"dprintf ( D_ALWAYS , ""Yikes! Asked to delete account %s - ig!\\n"" , username )"	791:2:19687:19765	4721376	0	True				
ANR	4721422	CallExpression	"dprintf ( D_ALWAYS , ""Yikes! Asked to delete account %s - ig!\\n"" , username )"		4721376	0					
ANR	4721423	Callee	dprintf		4721376	0					
ANR	4721424	Identifier	dprintf		4721376	0					
ANR	4721425	ArgumentList	D_ALWAYS		4721376	1					
ANR	4721426	Argument	D_ALWAYS		4721376	0					
ANR	4721427	Identifier	D_ALWAYS		4721376	0					
ANR	4721428	Argument	"""Yikes! Asked to delete account %s - ig!\\n"""		4721376	1					
ANR	4721429	PrimaryExpression	"""Yikes! Asked to delete account %s - ig!\\n"""		4721376	0					
ANR	4721430	Argument	username		4721376	2					
ANR	4721431	Identifier	username		4721376	0					
ANR	4721432	ReturnStatement	return false ;	794:2:19769:19781	4721376	1	True				
ANR	4721433	Identifier	false		4721376	0					
ANR	4721434	IfStatement	if ( ! accountname )		4721376	4					
ANR	4721435	Condition	! accountname	798:5:19833:19844	4721376	0	True				
ANR	4721436	UnaryOperationExpression	! accountname		4721376	0					
ANR	4721437	UnaryOperator	!		4721376	0					
ANR	4721438	Identifier	accountname		4721376	1					
ANR	4721439	ExpressionStatement	accountname = new char [ 100 ]	799:2:19850:19877	4721376	1	True				
ANR	4721440	AssignmentExpression	accountname = new char [ 100 ]		4721376	0		=			
ANR	4721441	Identifier	accountname		4721376	0					
ANR	4721442	PrimaryExpression	100		4721376	1					
ANR	4721443	IfStatement	if ( ! accountname_t )		4721376	5					
ANR	4721444	Condition	! accountname_t	800:5:19884:19897	4721376	0	True				
ANR	4721445	UnaryOperationExpression	! accountname_t		4721376	0					
ANR	4721446	UnaryOperator	!		4721376	0					
ANR	4721447	Identifier	accountname_t		4721376	1					
ANR	4721448	ExpressionStatement	accountname_t = new wchar_t [ 100 ]	801:2:19902:19934	4721376	1	True				
ANR	4721449	AssignmentExpression	accountname_t = new wchar_t [ 100 ]		4721376	0		=			
ANR	4721450	Identifier	accountname_t		4721376	0					
ANR	4721451	PrimaryExpression	100		4721376	1					
ANR	4721452	ExpressionStatement	"strcpy ( accountname , username )"	803:1:19938:19968	4721376	6	True				
ANR	4721453	CallExpression	"strcpy ( accountname , username )"		4721376	0					
ANR	4721454	Callee	strcpy		4721376	0					
ANR	4721455	Identifier	strcpy		4721376	0					
ANR	4721456	ArgumentList	accountname		4721376	1					
ANR	4721457	Argument	accountname		4721376	0					
ANR	4721458	Identifier	accountname		4721376	0					
ANR	4721459	Argument	username		4721376	1					
ANR	4721460	Identifier	username		4721376	0					
ANR	4721461	ExpressionStatement	this -> update_t ( )	805:1:20018:20035	4721376	7	True				
ANR	4721462	CallExpression	this -> update_t ( )		4721376	0					
ANR	4721463	Callee	this -> update_t		4721376	0					
ANR	4721464	PtrMemberAccess	this -> update_t		4721376	0					
ANR	4721465	Identifier	this		4721376	0					
ANR	4721466	Identifier	update_t		4721376	1					
ANR	4721467	ArgumentList			4721376	1					
ANR	4721468	ExpressionStatement	this -> update_psid ( )	806:1:20091:20110	4721376	8	True				
ANR	4721469	CallExpression	this -> update_psid ( )		4721376	0					
ANR	4721470	Callee	this -> update_psid		4721376	0					
ANR	4721471	PtrMemberAccess	this -> update_psid		4721376	0					
ANR	4721472	Identifier	this		4721376	0					
ANR	4721473	Identifier	update_psid		4721376	1					
ANR	4721474	ArgumentList			4721376	1					
ANR	4721475	IdentifierDeclStatement	UNICODE_STRING machine ;	811:1:20161:20183	4721376	9	True				
ANR	4721476	IdentifierDecl	machine		4721376	0					
ANR	4721477	IdentifierDeclType	UNICODE_STRING		4721376	0					
ANR	4721478	Identifier	machine		4721376	1					
ANR	4721479	CompoundStatement		37:2:902:980	4721376	10					
ANR	4721480	IdentifierDeclStatement	PWKSTA_INFO_100 pwkiWorkstationInfo ;	813:2:20190:20225	4721376	0	True				
ANR	4721481	IdentifierDecl	pwkiWorkstationInfo		4721376	0					
ANR	4721482	IdentifierDeclType	PWKSTA_INFO_100		4721376	0					
ANR	4721483	Identifier	pwkiWorkstationInfo		4721376	1					
ANR	4721484	IdentifierDeclStatement	"DWORD netret = NetWkstaGetInfo ( NULL , 100 , ( LPBYTE * ) & pwkiWorkstationInfo ) ;"	814:2:20229:20307	4721376	1	True				
ANR	4721485	IdentifierDecl	"netret = NetWkstaGetInfo ( NULL , 100 , ( LPBYTE * ) & pwkiWorkstationInfo )"		4721376	0					
ANR	4721486	IdentifierDeclType	DWORD		4721376	0					
ANR	4721487	Identifier	netret		4721376	1					
ANR	4721488	AssignmentExpression	"netret = NetWkstaGetInfo ( NULL , 100 , ( LPBYTE * ) & pwkiWorkstationInfo )"		4721376	2		=			
ANR	4721489	Identifier	netret		4721376	0					
ANR	4721490	CallExpression	"NetWkstaGetInfo ( NULL , 100 , ( LPBYTE * ) & pwkiWorkstationInfo )"		4721376	1					
ANR	4721491	Callee	NetWkstaGetInfo		4721376	0					
ANR	4721492	Identifier	NetWkstaGetInfo		4721376	0					
ANR	4721493	ArgumentList	NULL		4721376	1					
ANR	4721494	Argument	NULL		4721376	0					
ANR	4721495	Identifier	NULL		4721376	0					
ANR	4721496	Argument	100		4721376	1					
ANR	4721497	PrimaryExpression	100		4721376	0					
ANR	4721498	Argument	( LPBYTE * ) & pwkiWorkstationInfo		4721376	2					
ANR	4721499	CastExpression	( LPBYTE * ) & pwkiWorkstationInfo		4721376	0					
ANR	4721500	CastTarget	LPBYTE *		4721376	0					
ANR	4721501	UnaryOperationExpression	& pwkiWorkstationInfo		4721376	1					
ANR	4721502	UnaryOperator	&		4721376	0					
ANR	4721503	Identifier	pwkiWorkstationInfo		4721376	1					
ANR	4721504	IfStatement	if ( netret != NERR_Success )		4721376	2					
ANR	4721505	Condition	netret != NERR_Success	816:7:20316:20337	4721376	0	True				
ANR	4721506	EqualityExpression	netret != NERR_Success		4721376	0		!=			
ANR	4721507	Identifier	netret		4721376	0					
ANR	4721508	Identifier	NERR_Success		4721376	1					
ANR	4721509	CompoundStatement		39:32:1014:1014	4721376	1					
ANR	4721510	ExpressionStatement	"EXCEPT ( ""dynuser::deleteuser(): Cannot determine workstation name\\n"" )"	817:3:20346:20414	4721376	0	True				
ANR	4721511	CallExpression	"EXCEPT ( ""dynuser::deleteuser(): Cannot determine workstation name\\n"" )"		4721376	0					
ANR	4721512	Callee	EXCEPT		4721376	0					
ANR	4721513	Identifier	EXCEPT		4721376	0					
ANR	4721514	ArgumentList	"""dynuser::deleteuser(): Cannot determine workstation name\\n"""		4721376	1					
ANR	4721515	Argument	"""dynuser::deleteuser(): Cannot determine workstation name\\n"""		4721376	0					
ANR	4721516	PrimaryExpression	"""dynuser::deleteuser(): Cannot determine workstation name\\n"""		4721376	0					
ANR	4721517	ExpressionStatement	"InitString ( machine , ( wchar_t * ) pwkiWorkstationInfo -> wki100_computername )"	819:2:20422:20499	4721376	3	True				
ANR	4721518	CallExpression	"InitString ( machine , ( wchar_t * ) pwkiWorkstationInfo -> wki100_computername )"		4721376	0					
ANR	4721519	Callee	InitString		4721376	0					
ANR	4721520	Identifier	InitString		4721376	0					
ANR	4721521	ArgumentList	machine		4721376	1					
ANR	4721522	Argument	machine		4721376	0					
ANR	4721523	Identifier	machine		4721376	0					
ANR	4721524	Argument	( wchar_t * ) pwkiWorkstationInfo -> wki100_computername		4721376	1					
ANR	4721525	CastExpression	( wchar_t * ) pwkiWorkstationInfo -> wki100_computername		4721376	0					
ANR	4721526	CastTarget	wchar_t *		4721376	0					
ANR	4721527	PtrMemberAccess	pwkiWorkstationInfo -> wki100_computername		4721376	1					
ANR	4721528	Identifier	pwkiWorkstationInfo		4721376	0					
ANR	4721529	Identifier	wki100_computername		4721376	1					
ANR	4721530	IdentifierDeclStatement	LSA_HANDLE hPolicy = 0 ;	824:1:20524:20546	4721376	11	True				
ANR	4721531	IdentifierDecl	hPolicy = 0		4721376	0					
ANR	4721532	IdentifierDeclType	LSA_HANDLE		4721376	0					
ANR	4721533	Identifier	hPolicy		4721376	1					
ANR	4721534	AssignmentExpression	hPolicy = 0		4721376	2		=			
ANR	4721535	Identifier	hPolicy		4721376	0					
ANR	4721536	PrimaryExpression	0		4721376	1					
ANR	4721537	IdentifierDeclStatement	LSA_OBJECT_ATTRIBUTES oa ;	825:1:20549:20573	4721376	12	True				
ANR	4721538	IdentifierDecl	oa		4721376	0					
ANR	4721539	IdentifierDeclType	LSA_OBJECT_ATTRIBUTES		4721376	0					
ANR	4721540	Identifier	oa		4721376	1					
ANR	4721541	ExpressionStatement	"ZeroMemory ( & oa , sizeof ( oa ) )"	826:1:20595:20622	4721376	13	True				
ANR	4721542	CallExpression	"ZeroMemory ( & oa , sizeof ( oa ) )"		4721376	0					
ANR	4721543	Callee	ZeroMemory		4721376	0					
ANR	4721544	Identifier	ZeroMemory		4721376	0					
ANR	4721545	ArgumentList	& oa		4721376	1					
ANR	4721546	Argument	& oa		4721376	0					
ANR	4721547	UnaryOperationExpression	& oa		4721376	0					
ANR	4721548	UnaryOperator	&		4721376	0					
ANR	4721549	Identifier	oa		4721376	1					
ANR	4721550	Argument	sizeof ( oa )		4721376	1					
ANR	4721551	SizeofExpression	sizeof ( oa )		4721376	0					
ANR	4721552	Sizeof	sizeof		4721376	0					
ANR	4721553	SizeofOperand	oa		4721376	1					
ANR	4721554	IfStatement	"if ( LsaOpenPolicy ( NULL , & oa , POLICY_LOOKUP_NAMES | POLICY_CREATE_ACCOUNT | POLICY_ALL_ACCESS , & hPolicy ) != STATUS_SUCCESS )"		4721376	14					
ANR	4721555	Condition	"LsaOpenPolicy ( NULL , & oa , POLICY_LOOKUP_NAMES | POLICY_CREATE_ACCOUNT | POLICY_ALL_ACCESS , & hPolicy ) != STATUS_SUCCESS"	827:5:20629:20847	4721376	0	True				
ANR	4721556	EqualityExpression	"LsaOpenPolicy ( NULL , & oa , POLICY_LOOKUP_NAMES | POLICY_CREATE_ACCOUNT | POLICY_ALL_ACCESS , & hPolicy ) != STATUS_SUCCESS"		4721376	0		!=			
ANR	4721557	CallExpression	"LsaOpenPolicy ( NULL , & oa , POLICY_LOOKUP_NAMES | POLICY_CREATE_ACCOUNT | POLICY_ALL_ACCESS , & hPolicy )"		4721376	0					
ANR	4721558	Callee	LsaOpenPolicy		4721376	0					
ANR	4721559	Identifier	LsaOpenPolicy		4721376	0					
ANR	4721560	ArgumentList	NULL		4721376	1					
ANR	4721561	Argument	NULL		4721376	0					
ANR	4721562	Identifier	NULL		4721376	0					
ANR	4721563	Argument	& oa		4721376	1					
ANR	4721564	UnaryOperationExpression	& oa		4721376	0					
ANR	4721565	UnaryOperator	&		4721376	0					
ANR	4721566	Identifier	oa		4721376	1					
ANR	4721567	Argument	POLICY_LOOKUP_NAMES | POLICY_CREATE_ACCOUNT | POLICY_ALL_ACCESS		4721376	2					
ANR	4721568	InclusiveOrExpression	POLICY_LOOKUP_NAMES | POLICY_CREATE_ACCOUNT | POLICY_ALL_ACCESS		4721376	0		|			
ANR	4721569	Identifier	POLICY_LOOKUP_NAMES		4721376	0					
ANR	4721570	InclusiveOrExpression	POLICY_CREATE_ACCOUNT | POLICY_ALL_ACCESS		4721376	1		|			
ANR	4721571	Identifier	POLICY_CREATE_ACCOUNT		4721376	0					
ANR	4721572	Identifier	POLICY_ALL_ACCESS		4721376	1					
ANR	4721573	Argument	& hPolicy		4721376	3					
ANR	4721574	UnaryOperationExpression	& hPolicy		4721376	0					
ANR	4721575	UnaryOperator	&		4721376	0					
ANR	4721576	Identifier	hPolicy		4721376	1					
ANR	4721577	Identifier	STATUS_SUCCESS		4721376	1					
ANR	4721578	CompoundStatement		54:1:1561:1561	4721376	1					
ANR	4721579	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser::deleteuser() LsaOpenPolicy failed\\n"" )"	832:2:20892:20956	4721376	0	True				
ANR	4721580	CallExpression	"dprintf ( D_ALWAYS , ""dynuser::deleteuser() LsaOpenPolicy failed\\n"" )"		4721376	0					
ANR	4721581	Callee	dprintf		4721376	0					
ANR	4721582	Identifier	dprintf		4721376	0					
ANR	4721583	ArgumentList	D_ALWAYS		4721376	1					
ANR	4721584	Argument	D_ALWAYS		4721376	0					
ANR	4721585	Identifier	D_ALWAYS		4721376	0					
ANR	4721586	Argument	"""dynuser::deleteuser() LsaOpenPolicy failed\\n"""		4721376	1					
ANR	4721587	PrimaryExpression	"""dynuser::deleteuser() LsaOpenPolicy failed\\n"""		4721376	0					
ANR	4721588	ExpressionStatement	retval = false	833:2:20960:20974	4721376	1	True				
ANR	4721589	AssignmentExpression	retval = false		4721376	0		=			
ANR	4721590	Identifier	retval		4721376	0					
ANR	4721591	Identifier	false		4721376	1					
ANR	4721592	ExpressionStatement	SetLastError ( 0 )	836:1:20981:20996	4721376	15	True				
ANR	4721593	CallExpression	SetLastError ( 0 )		4721376	0					
ANR	4721594	Callee	SetLastError		4721376	0					
ANR	4721595	Identifier	SetLastError		4721376	0					
ANR	4721596	ArgumentList	0		4721376	1					
ANR	4721597	Argument	0		4721376	0					
ANR	4721598	PrimaryExpression	0		4721376	0					
ANR	4721599	IdentifierDeclStatement	NTSTATUS result ;	843:1:21378:21393	4721376	16	True				
ANR	4721600	IdentifierDecl	result		4721376	0					
ANR	4721601	IdentifierDeclType	NTSTATUS		4721376	0					
ANR	4721602	Identifier	result		4721376	1					
ANR	4721603	ExpressionStatement	"result = LsaRemoveAccountRights ( hPolicy , psid , 1 , 0 , 0 )"	844:1:21396:21453	4721376	17	True				
ANR	4721604	AssignmentExpression	"result = LsaRemoveAccountRights ( hPolicy , psid , 1 , 0 , 0 )"		4721376	0		=			
ANR	4721605	Identifier	result		4721376	0					
ANR	4721606	CallExpression	"LsaRemoveAccountRights ( hPolicy , psid , 1 , 0 , 0 )"		4721376	1					
ANR	4721607	Callee	LsaRemoveAccountRights		4721376	0					
ANR	4721608	Identifier	LsaRemoveAccountRights		4721376	0					
ANR	4721609	ArgumentList	hPolicy		4721376	1					
ANR	4721610	Argument	hPolicy		4721376	0					
ANR	4721611	Identifier	hPolicy		4721376	0					
ANR	4721612	Argument	psid		4721376	1					
ANR	4721613	Identifier	psid		4721376	0					
ANR	4721614	Argument	1		4721376	2					
ANR	4721615	PrimaryExpression	1		4721376	0					
ANR	4721616	Argument	0		4721376	3					
ANR	4721617	PrimaryExpression	0		4721376	0					
ANR	4721618	Argument	0		4721376	4					
ANR	4721619	PrimaryExpression	0		4721376	0					
ANR	4721620	IfStatement	if ( ! retval || result != STATUS_SUCCESS )		4721376	18					
ANR	4721621	Condition	! retval || result != STATUS_SUCCESS	845:5:21460:21494	4721376	0	True				
ANR	4721622	OrExpression	! retval || result != STATUS_SUCCESS		4721376	0		||			
ANR	4721623	UnaryOperationExpression	! retval		4721376	0					
ANR	4721624	UnaryOperator	!		4721376	0					
ANR	4721625	Identifier	retval		4721376	1					
ANR	4721626	EqualityExpression	result != STATUS_SUCCESS		4721376	1		!=			
ANR	4721627	Identifier	result		4721376	0					
ANR	4721628	Identifier	STATUS_SUCCESS		4721376	1					
ANR	4721629	CompoundStatement		68:42:2170:2170	4721376	1					
ANR	4721630	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser: LsaRemoveAccountRights Failed winerr=%ul\\n"" , LsaNtStatusToWinError ( result ) )"	848:2:21543:21648	4721376	0	True				
ANR	4721631	CallExpression	"dprintf ( D_ALWAYS , ""dynuser: LsaRemoveAccountRights Failed winerr=%ul\\n"" , LsaNtStatusToWinError ( result ) )"		4721376	0					
ANR	4721632	Callee	dprintf		4721376	0					
ANR	4721633	Identifier	dprintf		4721376	0					
ANR	4721634	ArgumentList	D_ALWAYS		4721376	1					
ANR	4721635	Argument	D_ALWAYS		4721376	0					
ANR	4721636	Identifier	D_ALWAYS		4721376	0					
ANR	4721637	Argument	"""dynuser: LsaRemoveAccountRights Failed winerr=%ul\\n"""		4721376	1					
ANR	4721638	PrimaryExpression	"""dynuser: LsaRemoveAccountRights Failed winerr=%ul\\n"""		4721376	0					
ANR	4721639	Argument	LsaNtStatusToWinError ( result )		4721376	2					
ANR	4721640	CallExpression	LsaNtStatusToWinError ( result )		4721376	0					
ANR	4721641	Callee	LsaNtStatusToWinError		4721376	0					
ANR	4721642	Identifier	LsaNtStatusToWinError		4721376	0					
ANR	4721643	ArgumentList	result		4721376	1					
ANR	4721644	Argument	result		4721376	0					
ANR	4721645	Identifier	result		4721376	0					
ANR	4721646	ElseStatement	else		4721376	0					
ANR	4721647	CompoundStatement		83:8:2651:2706	4721376	0					
ANR	4721648	IdentifierDeclStatement	"NET_API_STATUS nerr = NetUserDel ( NULL , accountname_t ) ;"	860:8:21978:22033	4721376	0	True				
ANR	4721649	IdentifierDecl	"nerr = NetUserDel ( NULL , accountname_t )"		4721376	0					
ANR	4721650	IdentifierDeclType	NET_API_STATUS		4721376	0					
ANR	4721651	Identifier	nerr		4721376	1					
ANR	4721652	AssignmentExpression	"nerr = NetUserDel ( NULL , accountname_t )"		4721376	2		=			
ANR	4721653	Identifier	nerr		4721376	0					
ANR	4721654	CallExpression	"NetUserDel ( NULL , accountname_t )"		4721376	1					
ANR	4721655	Callee	NetUserDel		4721376	0					
ANR	4721656	Identifier	NetUserDel		4721376	0					
ANR	4721657	ArgumentList	NULL		4721376	1					
ANR	4721658	Argument	NULL		4721376	0					
ANR	4721659	Identifier	NULL		4721376	0					
ANR	4721660	Argument	accountname_t		4721376	1					
ANR	4721661	Identifier	accountname_t		4721376	0					
ANR	4721662	IfStatement	if ( nerr != NERR_Success && nerr != NERR_UserNotFound )		4721376	1					
ANR	4721663	Condition	nerr != NERR_Success && nerr != NERR_UserNotFound	861:13:22048:22096	4721376	0	True				
ANR	4721664	AndExpression	nerr != NERR_Success && nerr != NERR_UserNotFound		4721376	0		&&			
ANR	4721665	EqualityExpression	nerr != NERR_Success		4721376	0		!=			
ANR	4721666	Identifier	nerr		4721376	0					
ANR	4721667	Identifier	NERR_Success		4721376	1					
ANR	4721668	EqualityExpression	nerr != NERR_UserNotFound		4721376	1		!=			
ANR	4721669	Identifier	nerr		4721376	0					
ANR	4721670	Identifier	NERR_UserNotFound		4721376	1					
ANR	4721671	CompoundStatement		84:65:2773:2773	4721376	1					
ANR	4721672	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser::deleteuser() failed! nerr=%d\\n"" , nerr )"	862:3:22108:22173	4721376	0	True				
ANR	4721673	CallExpression	"dprintf ( D_ALWAYS , ""dynuser::deleteuser() failed! nerr=%d\\n"" , nerr )"		4721376	0					
ANR	4721674	Callee	dprintf		4721376	0					
ANR	4721675	Identifier	dprintf		4721376	0					
ANR	4721676	ArgumentList	D_ALWAYS		4721376	1					
ANR	4721677	Argument	D_ALWAYS		4721376	0					
ANR	4721678	Identifier	D_ALWAYS		4721376	0					
ANR	4721679	Argument	"""dynuser::deleteuser() failed! nerr=%d\\n"""		4721376	1					
ANR	4721680	PrimaryExpression	"""dynuser::deleteuser() failed! nerr=%d\\n"""		4721376	0					
ANR	4721681	Argument	nerr		4721376	2					
ANR	4721682	Identifier	nerr		4721376	0					
ANR	4721683	ExpressionStatement	retval = false	863:3:22178:22192	4721376	1	True				
ANR	4721684	AssignmentExpression	retval = false		4721376	0		=			
ANR	4721685	Identifier	retval		4721376	0					
ANR	4721686	Identifier	false		4721376	1					
ANR	4721687	ElseStatement	else		4721376	0					
ANR	4721688	CompoundStatement		87:9:2876:2876	4721376	0					
ANR	4721689	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""dynuser::deleteuser() Successfully deleted user %s\\n"" , username )"	865:3:22208:22304	4721376	0	True				
ANR	4721690	CallExpression	"dprintf ( D_FULLDEBUG , ""dynuser::deleteuser() Successfully deleted user %s\\n"" , username )"		4721376	0					
ANR	4721691	Callee	dprintf		4721376	0					
ANR	4721692	Identifier	dprintf		4721376	0					
ANR	4721693	ArgumentList	D_FULLDEBUG		4721376	1					
ANR	4721694	Argument	D_FULLDEBUG		4721376	0					
ANR	4721695	Identifier	D_FULLDEBUG		4721376	0					
ANR	4721696	Argument	"""dynuser::deleteuser() Successfully deleted user %s\\n"""		4721376	1					
ANR	4721697	PrimaryExpression	"""dynuser::deleteuser() Successfully deleted user %s\\n"""		4721376	0					
ANR	4721698	Argument	username		4721376	2					
ANR	4721699	Identifier	username		4721376	0					
ANR	4721700	ExpressionStatement	LsaClose ( hPolicy )	873:1:22317:22336	4721376	19	True				
ANR	4721701	CallExpression	LsaClose ( hPolicy )		4721376	0					
ANR	4721702	Callee	LsaClose		4721376	0					
ANR	4721703	Identifier	LsaClose		4721376	0					
ANR	4721704	ArgumentList	hPolicy		4721376	1					
ANR	4721705	Argument	hPolicy		4721376	0					
ANR	4721706	Identifier	hPolicy		4721376	0					
ANR	4721707	Statement	delete	877:1:22421:22426	4721376	20	True				
ANR	4721708	Statement	[	877:8:22428:22428	4721376	21	True				
ANR	4721709	Statement	]	877:9:22429:22429	4721376	22	True				
ANR	4721710	ExpressionStatement	accountname_t	877:11:22431:22444	4721376	23	True				
ANR	4721711	Identifier	accountname_t		4721376	0					
ANR	4721712	ExpressionStatement	accountname_t = NULL	878:1:22447:22467	4721376	24	True				
ANR	4721713	AssignmentExpression	accountname_t = NULL		4721376	0		=			
ANR	4721714	Identifier	accountname_t		4721376	0					
ANR	4721715	Identifier	NULL		4721376	1					
ANR	4721716	ReturnStatement	return retval ;	880:1:22472:22485	4721376	25	True				
ANR	4721717	Identifier	retval		4721376	0					
ANR	4721718	ReturnType	bool		4721376	1					
ANR	4721719	Identifier	dynuser :: deleteuser		4721376	2					
ANR	4721720	ParameterList	char const * username		4721376	3					
ANR	4721721	Parameter	char const * username	778:25:19302:19322	4721376	0	True				
ANR	4721722	ParameterType	char const *		4721376	0					
ANR	4721723	Identifier	username		4721376	1					
ANR	4721724	CFGEntryNode	ENTRY		4721376		True				
ANR	4721725	CFGExitNode	EXIT		4721376		True				
ANR	4721726	Symbol	POLICY_CREATE_ACCOUNT		4721376						
ANR	4721727	Symbol	nerr		4721376						
ANR	4721728	Symbol	prefix		4721376						
ANR	4721729	Symbol	& pwkiWorkstationInfo		4721376						
ANR	4721730	Symbol	LsaNtStatusToWinError		4721376						
ANR	4721731	Symbol	result		4721376						
ANR	4721732	Symbol	strlen		4721376						
ANR	4721733	Symbol	strncmp		4721376						
ANR	4721734	Symbol	oa		4721376						
ANR	4721735	Symbol	LsaRemoveAccountRights		4721376						
ANR	4721736	Symbol	accountname		4721376						
ANR	4721737	Symbol	accountname_t		4721376						
ANR	4721738	Symbol	NetUserDel		4721376						
ANR	4721739	Symbol	LsaOpenPolicy		4721376						
ANR	4721740	Symbol	& oa		4721376						
ANR	4721741	Symbol	NERR_UserNotFound		4721376						
ANR	4721742	Symbol	netret		4721376						
ANR	4721743	Symbol	hPolicy		4721376						
ANR	4721744	Symbol	NULL		4721376						
ANR	4721745	Symbol	POLICY_LOOKUP_NAMES		4721376						
ANR	4721746	Symbol	ACCOUNT_PREFIX		4721376						
ANR	4721747	Symbol	false		4721376						
ANR	4721748	Symbol	D_ALWAYS		4721376						
ANR	4721749	Symbol	this		4721376						
ANR	4721750	Symbol	NERR_Success		4721376						
ANR	4721751	Symbol	& hPolicy		4721376						
ANR	4721752	Symbol	pwkiWorkstationInfo		4721376						
ANR	4721753	Symbol	psid		4721376						
ANR	4721754	Symbol	D_FULLDEBUG		4721376						
ANR	4721755	Symbol	retval		4721376						
ANR	4721756	Symbol	NetWkstaGetInfo		4721376						
ANR	4721757	Symbol	POLICY_ALL_ACCESS		4721376						
ANR	4721758	Symbol	* pwkiWorkstationInfo		4721376						
ANR	4721759	Symbol	machine		4721376						
ANR	4721760	Symbol	true		4721376						
ANR	4721761	Symbol	STATUS_SUCCESS		4721376						
ANR	4721762	Symbol	pwkiWorkstationInfo -> wki100_computername		4721376						
ANR	4721763	Symbol	username		4721376						
ANR	4721764	Function	dynuser :: cleanup_condor_users	887:0:22561:24612							
ANR	4721765	FunctionDef	dynuser :: cleanup_condor_users (char * user_prefix)		4721764	0					
ANR	4721766	CompoundStatement		887:54:22615:24612	4721764	0					
ANR	4721767	IdentifierDeclStatement	LPUSER_INFO_10 pBuf = NULL ;	889:1:22619:22645	4721764	0	True				
ANR	4721768	IdentifierDecl	pBuf = NULL		4721764	0					
ANR	4721769	IdentifierDeclType	LPUSER_INFO_10		4721764	0					
ANR	4721770	Identifier	pBuf		4721764	1					
ANR	4721771	AssignmentExpression	pBuf = NULL		4721764	2		=			
ANR	4721772	Identifier	NULL		4721764	0					
ANR	4721773	Identifier	NULL		4721764	1					
ANR	4721774	IdentifierDeclStatement	LPUSER_INFO_10 pTmpBuf ;	890:1:22648:22670	4721764	1	True				
ANR	4721775	IdentifierDecl	pTmpBuf		4721764	0					
ANR	4721776	IdentifierDeclType	LPUSER_INFO_10		4721764	0					
ANR	4721777	Identifier	pTmpBuf		4721764	1					
ANR	4721778	IdentifierDeclStatement	DWORD dwEntriesRead = 0 ;	891:1:22673:22696	4721764	2	True				
ANR	4721779	IdentifierDecl	dwEntriesRead = 0		4721764	0					
ANR	4721780	IdentifierDeclType	DWORD		4721764	0					
ANR	4721781	Identifier	dwEntriesRead		4721764	1					
ANR	4721782	AssignmentExpression	dwEntriesRead = 0		4721764	2		=			
ANR	4721783	Identifier	dwEntriesRead		4721764	0					
ANR	4721784	PrimaryExpression	0		4721764	1					
ANR	4721785	IdentifierDeclStatement	DWORD dwTotalEntries = 0 ;	892:1:22699:22723	4721764	3	True				
ANR	4721786	IdentifierDecl	dwTotalEntries = 0		4721764	0					
ANR	4721787	IdentifierDeclType	DWORD		4721764	0					
ANR	4721788	Identifier	dwTotalEntries		4721764	1					
ANR	4721789	AssignmentExpression	dwTotalEntries = 0		4721764	2		=			
ANR	4721790	Identifier	dwTotalEntries		4721764	0					
ANR	4721791	PrimaryExpression	0		4721764	1					
ANR	4721792	IdentifierDeclStatement	DWORD dwResumeHandle = 0 ;	893:1:22726:22750	4721764	4	True				
ANR	4721793	IdentifierDecl	dwResumeHandle = 0		4721764	0					
ANR	4721794	IdentifierDeclType	DWORD		4721764	0					
ANR	4721795	Identifier	dwResumeHandle		4721764	1					
ANR	4721796	AssignmentExpression	dwResumeHandle = 0		4721764	2		=			
ANR	4721797	Identifier	dwResumeHandle		4721764	0					
ANR	4721798	PrimaryExpression	0		4721764	1					
ANR	4721799	IdentifierDeclStatement	DWORD dwTotalCount = 0 ;	894:1:22753:22775	4721764	5	True				
ANR	4721800	IdentifierDecl	dwTotalCount = 0		4721764	0					
ANR	4721801	IdentifierDeclType	DWORD		4721764	0					
ANR	4721802	Identifier	dwTotalCount		4721764	1					
ANR	4721803	AssignmentExpression	dwTotalCount = 0		4721764	2		=			
ANR	4721804	Identifier	dwTotalCount		4721764	0					
ANR	4721805	PrimaryExpression	0		4721764	1					
ANR	4721806	IdentifierDeclStatement	NET_API_STATUS nStatus ;	895:1:22778:22800	4721764	6	True				
ANR	4721807	IdentifierDecl	nStatus		4721764	0					
ANR	4721808	IdentifierDeclType	NET_API_STATUS		4721764	0					
ANR	4721809	Identifier	nStatus		4721764	1					
ANR	4721810	IdentifierDeclStatement	bool retval = true ;	897:1:22804:22822	4721764	7	True				
ANR	4721811	IdentifierDecl	retval = true		4721764	0					
ANR	4721812	IdentifierDeclType	bool		4721764	0					
ANR	4721813	Identifier	retval		4721764	1					
ANR	4721814	AssignmentExpression	retval = true		4721764	2		=			
ANR	4721815	Identifier	true		4721764	0					
ANR	4721816	Identifier	true		4721764	1					
ANR	4721817	IfStatement	if ( ! user_prefix || ! * user_prefix )		4721764	8					
ANR	4721818	Condition	! user_prefix || ! * user_prefix	901:5:22866:22894	4721764	0	True				
ANR	4721819	OrExpression	! user_prefix || ! * user_prefix		4721764	0		||			
ANR	4721820	UnaryOperationExpression	! user_prefix		4721764	0					
ANR	4721821	UnaryOperator	!		4721764	0					
ANR	4721822	Identifier	user_prefix		4721764	1					
ANR	4721823	UnaryOperationExpression	! * user_prefix		4721764	1					
ANR	4721824	UnaryOperator	!		4721764	0					
ANR	4721825	UnaryOperationExpression	* user_prefix		4721764	1					
ANR	4721826	UnaryOperator	*		4721764	0					
ANR	4721827	Identifier	user_prefix		4721764	1					
ANR	4721828	CompoundStatement		15:36:281:281	4721764	1					
ANR	4721829	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser::cleanup_condor_users() called with no user_prefix\\n"" )"	902:2:22901:22981	4721764	0	True				
ANR	4721830	CallExpression	"dprintf ( D_ALWAYS , ""dynuser::cleanup_condor_users() called with no user_prefix\\n"" )"		4721764	0					
ANR	4721831	Callee	dprintf		4721764	0					
ANR	4721832	Identifier	dprintf		4721764	0					
ANR	4721833	ArgumentList	D_ALWAYS		4721764	1					
ANR	4721834	Argument	D_ALWAYS		4721764	0					
ANR	4721835	Identifier	D_ALWAYS		4721764	0					
ANR	4721836	Argument	"""dynuser::cleanup_condor_users() called with no user_prefix\\n"""		4721764	1					
ANR	4721837	PrimaryExpression	"""dynuser::cleanup_condor_users() called with no user_prefix\\n"""		4721764	0					
ANR	4721838	ReturnStatement	return false ;	903:2:22985:22997	4721764	1	True				
ANR	4721839	Identifier	false		4721764	0					
ANR	4721840	DoStatement	do		4721764	9					
ANR	4721841	CompoundStatement		20:4:391:391	4721764	0					
ANR	4721842	ExpressionStatement	"nStatus = NetUserEnum ( NULL , 10 , FILTER_NORMAL_ACCOUNT , ( LPBYTE * ) & pBuf , MAX_PREFERRED_LENGTH , & dwEntriesRead , & dwTotalEntries , & dwResumeHandle )"	907:2:23011:23343	4721764	0	True				
ANR	4721843	AssignmentExpression	"nStatus = NetUserEnum ( NULL , 10 , FILTER_NORMAL_ACCOUNT , ( LPBYTE * ) & pBuf , MAX_PREFERRED_LENGTH , & dwEntriesRead , & dwTotalEntries , & dwResumeHandle )"		4721764	0		=			
ANR	4721844	Identifier	nStatus		4721764	0					
ANR	4721845	CallExpression	"NetUserEnum ( NULL , 10 , FILTER_NORMAL_ACCOUNT , ( LPBYTE * ) & pBuf , MAX_PREFERRED_LENGTH , & dwEntriesRead , & dwTotalEntries , & dwResumeHandle )"		4721764	1					
ANR	4721846	Callee	NetUserEnum		4721764	0					
ANR	4721847	Identifier	NetUserEnum		4721764	0					
ANR	4721848	ArgumentList	NULL		4721764	1					
ANR	4721849	Argument	NULL		4721764	0					
ANR	4721850	Identifier	NULL		4721764	0					
ANR	4721851	Argument	10		4721764	1					
ANR	4721852	PrimaryExpression	10		4721764	0					
ANR	4721853	Argument	FILTER_NORMAL_ACCOUNT		4721764	2					
ANR	4721854	Identifier	FILTER_NORMAL_ACCOUNT		4721764	0					
ANR	4721855	Argument	( LPBYTE * ) & pBuf		4721764	3					
ANR	4721856	CastExpression	( LPBYTE * ) & pBuf		4721764	0					
ANR	4721857	CastTarget	LPBYTE *		4721764	0					
ANR	4721858	UnaryOperationExpression	& pBuf		4721764	1					
ANR	4721859	UnaryOperator	&		4721764	0					
ANR	4721860	Identifier	pBuf		4721764	1					
ANR	4721861	Argument	MAX_PREFERRED_LENGTH		4721764	4					
ANR	4721862	Identifier	MAX_PREFERRED_LENGTH		4721764	0					
ANR	4721863	Argument	& dwEntriesRead		4721764	5					
ANR	4721864	UnaryOperationExpression	& dwEntriesRead		4721764	0					
ANR	4721865	UnaryOperator	&		4721764	0					
ANR	4721866	Identifier	dwEntriesRead		4721764	1					
ANR	4721867	Argument	& dwTotalEntries		4721764	6					
ANR	4721868	UnaryOperationExpression	& dwTotalEntries		4721764	0					
ANR	4721869	UnaryOperator	&		4721764	0					
ANR	4721870	Identifier	dwTotalEntries		4721764	1					
ANR	4721871	Argument	& dwResumeHandle		4721764	7					
ANR	4721872	UnaryOperationExpression	& dwResumeHandle		4721764	0					
ANR	4721873	UnaryOperator	&		4721764	0					
ANR	4721874	Identifier	dwResumeHandle		4721764	1					
ANR	4721875	IfStatement	if ( ( nStatus == NERR_Success ) || ( nStatus == ERROR_MORE_DATA ) )		4721764	1					
ANR	4721876	Condition	( nStatus == NERR_Success ) || ( nStatus == ERROR_MORE_DATA )	917:6:23379:23435	4721764	0	True				
ANR	4721877	OrExpression	( nStatus == NERR_Success ) || ( nStatus == ERROR_MORE_DATA )		4721764	0		||			
ANR	4721878	EqualityExpression	nStatus == NERR_Success		4721764	0		==			
ANR	4721879	Identifier	nStatus		4721764	0					
ANR	4721880	Identifier	NERR_Success		4721764	1					
ANR	4721881	EqualityExpression	nStatus == ERROR_MORE_DATA		4721764	1		==			
ANR	4721882	Identifier	nStatus		4721764	0					
ANR	4721883	Identifier	ERROR_MORE_DATA		4721764	1					
ANR	4721884	CompoundStatement		31:65:822:822	4721764	1					
ANR	4721885	IfStatement	if ( ( pTmpBuf = pBuf ) != NULL )		4721764	0					
ANR	4721886	Condition	( pTmpBuf = pBuf ) != NULL	918:7:23447:23470	4721764	0	True				
ANR	4721887	EqualityExpression	( pTmpBuf = pBuf ) != NULL		4721764	0		!=			
ANR	4721888	AssignmentExpression	pTmpBuf = pBuf		4721764	0		=			
ANR	4721889	Identifier	pTmpBuf		4721764	0					
ANR	4721890	Identifier	pBuf		4721764	1					
ANR	4721891	Identifier	NULL		4721764	1					
ANR	4721892	CompoundStatement		32:33:857:857	4721764	1					
ANR	4721893	ForStatement	for ( DWORD i = 0 ; ( i < dwEntriesRead ) ; i ++ )		4721764	0					
ANR	4721894	ForInit	DWORD i = 0 ;	921:9:23520:23531	4721764	0	True				
ANR	4721895	IdentifierDeclStatement	DWORD i = 0 ;		4721764	0					
ANR	4721896	IdentifierDecl	i = 0		4721764	0					
ANR	4721897	IdentifierDeclType	DWORD		4721764	0					
ANR	4721898	Identifier	i		4721764	1					
ANR	4721899	AssignmentExpression	i = 0		4721764	2		=			
ANR	4721900	Identifier	i		4721764	0					
ANR	4721901	PrimaryExpression	0		4721764	1					
ANR	4721902	Condition	i < dwEntriesRead	921:22:23533:23551	4721764	1	True				
ANR	4721903	RelationalExpression	i < dwEntriesRead		4721764	0		<			
ANR	4721904	Identifier	i		4721764	0					
ANR	4721905	Identifier	dwEntriesRead		4721764	1					
ANR	4721906	PostIncDecOperationExpression	i ++	921:43:23554:23556	4721764	2	True				
ANR	4721907	Identifier	i		4721764	0					
ANR	4721908	IncDec	++		4721764	1					
ANR	4721909	CompoundStatement		45:5:1168:1182	4721764	3					
ANR	4721910	ExpressionStatement	assert ( pTmpBuf != NULL )	922:5:23566:23589	4721764	0	True				
ANR	4721911	CallExpression	assert ( pTmpBuf != NULL )		4721764	0					
ANR	4721912	Callee	assert		4721764	0					
ANR	4721913	Identifier	assert		4721764	0					
ANR	4721914	ArgumentList	pTmpBuf != NULL		4721764	1					
ANR	4721915	Argument	pTmpBuf != NULL		4721764	0					
ANR	4721916	EqualityExpression	pTmpBuf != NULL		4721764	0		!=			
ANR	4721917	Identifier	pTmpBuf		4721764	0					
ANR	4721918	Identifier	NULL		4721764	1					
ANR	4721919	IfStatement	if ( pTmpBuf == NULL )		4721764	1					
ANR	4721920	Condition	pTmpBuf == NULL	924:9:23601:23615	4721764	0	True				
ANR	4721921	EqualityExpression	pTmpBuf == NULL		4721764	0		==			
ANR	4721922	Identifier	pTmpBuf		4721764	0					
ANR	4721923	Identifier	NULL		4721764	1					
ANR	4721924	CompoundStatement		38:26:1002:1002	4721764	1					
ANR	4721925	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser::cleanup_condor_users() Access violation\\n"" )"	925:6:23626:23696	4721764	0	True				
ANR	4721926	CallExpression	"dprintf ( D_ALWAYS , ""dynuser::cleanup_condor_users() Access violation\\n"" )"		4721764	0					
ANR	4721927	Callee	dprintf		4721764	0					
ANR	4721928	Identifier	dprintf		4721764	0					
ANR	4721929	ArgumentList	D_ALWAYS		4721764	1					
ANR	4721930	Argument	D_ALWAYS		4721764	0					
ANR	4721931	Identifier	D_ALWAYS		4721764	0					
ANR	4721932	Argument	"""dynuser::cleanup_condor_users() Access violation\\n"""		4721764	1					
ANR	4721933	PrimaryExpression	"""dynuser::cleanup_condor_users() Access violation\\n"""		4721764	0					
ANR	4721934	ExpressionStatement	retval = false	926:6:23704:23718	4721764	1	True				
ANR	4721935	AssignmentExpression	retval = false		4721764	0		=			
ANR	4721936	Identifier	retval		4721764	0					
ANR	4721937	Identifier	false		4721764	1					
ANR	4721938	BreakStatement	break ;	927:6:23726:23731	4721764	2	True				
ANR	4721939	IdentifierDeclStatement	char buf [ 1024 ] ;	931:5:23784:23798	4721764	2	True				
ANR	4721940	IdentifierDecl	buf [ 1024 ]		4721764	0					
ANR	4721941	IdentifierDeclType	char [ 1024 ]		4721764	0					
ANR	4721942	Identifier	buf		4721764	1					
ANR	4721943	PrimaryExpression	1024		4721764	2					
ANR	4721944	ExpressionStatement	"wsprintf ( buf , ""%ws"" , pTmpBuf -> usri10_name )"	932:5:23861:23903	4721764	3	True				
ANR	4721945	CallExpression	"wsprintf ( buf , ""%ws"" , pTmpBuf -> usri10_name )"		4721764	0					
ANR	4721946	Callee	wsprintf		4721764	0					
ANR	4721947	Identifier	wsprintf		4721764	0					
ANR	4721948	ArgumentList	buf		4721764	1					
ANR	4721949	Argument	buf		4721764	0					
ANR	4721950	Identifier	buf		4721764	0					
ANR	4721951	Argument	"""%ws"""		4721764	1					
ANR	4721952	PrimaryExpression	"""%ws"""		4721764	0					
ANR	4721953	Argument	pTmpBuf -> usri10_name		4721764	2					
ANR	4721954	PtrMemberAccess	pTmpBuf -> usri10_name		4721764	0					
ANR	4721955	Identifier	pTmpBuf		4721764	0					
ANR	4721956	Identifier	usri10_name		4721764	1					
ANR	4721957	IfStatement	"if ( strnicmp ( buf , user_prefix , strlen ( user_prefix ) ) == 0 )"		4721764	4					
ANR	4721958	Condition	"strnicmp ( buf , user_prefix , strlen ( user_prefix ) ) == 0"	935:9:23921:23973	4721764	0	True				
ANR	4721959	EqualityExpression	"strnicmp ( buf , user_prefix , strlen ( user_prefix ) ) == 0"		4721764	0		==			
ANR	4721960	CallExpression	"strnicmp ( buf , user_prefix , strlen ( user_prefix ) )"		4721764	0					
ANR	4721961	Callee	strnicmp		4721764	0					
ANR	4721962	Identifier	strnicmp		4721764	0					
ANR	4721963	ArgumentList	buf		4721764	1					
ANR	4721964	Argument	buf		4721764	0					
ANR	4721965	Identifier	buf		4721764	0					
ANR	4721966	Argument	user_prefix		4721764	1					
ANR	4721967	Identifier	user_prefix		4721764	0					
ANR	4721968	Argument	strlen ( user_prefix )		4721764	2					
ANR	4721969	CallExpression	strlen ( user_prefix )		4721764	0					
ANR	4721970	Callee	strlen		4721764	0					
ANR	4721971	Identifier	strlen		4721764	0					
ANR	4721972	ArgumentList	user_prefix		4721764	1					
ANR	4721973	Argument	user_prefix		4721764	0					
ANR	4721974	Identifier	user_prefix		4721764	0					
ANR	4721975	PrimaryExpression	0		4721764	1					
ANR	4721976	CompoundStatement		49:64:1360:1360	4721764	1					
ANR	4721977	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""dynuser::cleanup_condor_users() Found orphaned account: %s\\n"" , buf )"	936:6:23984:24072	4721764	0	True				
ANR	4721978	CallExpression	"dprintf ( D_FULLDEBUG , ""dynuser::cleanup_condor_users() Found orphaned account: %s\\n"" , buf )"		4721764	0					
ANR	4721979	Callee	dprintf		4721764	0					
ANR	4721980	Identifier	dprintf		4721764	0					
ANR	4721981	ArgumentList	D_FULLDEBUG		4721764	1					
ANR	4721982	Argument	D_FULLDEBUG		4721764	0					
ANR	4721983	Identifier	D_FULLDEBUG		4721764	0					
ANR	4721984	Argument	"""dynuser::cleanup_condor_users() Found orphaned account: %s\\n"""		4721764	1					
ANR	4721985	PrimaryExpression	"""dynuser::cleanup_condor_users() Found orphaned account: %s\\n"""		4721764	0					
ANR	4721986	Argument	buf		4721764	2					
ANR	4721987	Identifier	buf		4721764	0					
ANR	4721988	CompoundStatement		52:7:1473:1483	4721764	1					
ANR	4721989	IdentifierDeclStatement	dynuser du ;	938:7:24089:24099	4721764	0	True				
ANR	4721990	IdentifierDecl	du		4721764	0					
ANR	4721991	IdentifierDeclType	dynuser		4721764	0					
ANR	4721992	Identifier	du		4721764	1					
ANR	4721993	ExpressionStatement	retval = retval && du . deleteuser ( buf )	939:7:24108:24145	4721764	1	True				
ANR	4721994	AssignmentExpression	retval = retval && du . deleteuser ( buf )		4721764	0		=			
ANR	4721995	Identifier	retval		4721764	0					
ANR	4721996	AndExpression	retval && du . deleteuser ( buf )		4721764	1		&&			
ANR	4721997	Identifier	retval		4721764	0					
ANR	4721998	CallExpression	du . deleteuser ( buf )		4721764	1					
ANR	4721999	Callee	du . deleteuser		4721764	0					
ANR	4722000	MemberAccess	du . deleteuser		4721764	0					
ANR	4722001	Identifier	du		4721764	0					
ANR	4722002	Identifier	deleteuser		4721764	1					
ANR	4722003	ArgumentList	buf		4721764	1					
ANR	4722004	Argument	buf		4721764	0					
ANR	4722005	Identifier	buf		4721764	0					
ANR	4722006	ExpressionStatement	pTmpBuf ++	943:5:24168:24177	4721764	5	True				
ANR	4722007	PostIncDecOperationExpression	pTmpBuf ++		4721764	0					
ANR	4722008	Identifier	pTmpBuf		4721764	0					
ANR	4722009	IncDec	++		4721764	1					
ANR	4722010	ExpressionStatement	dwTotalCount ++	944:5:24184:24198	4721764	6	True				
ANR	4722011	PostIncDecOperationExpression	dwTotalCount ++		4721764	0					
ANR	4722012	Identifier	dwTotalCount		4721764	0					
ANR	4722013	IncDec	++		4721764	1					
ANR	4722014	ElseStatement	else		4721764	0					
ANR	4722015	CompoundStatement		61:9:1604:1604	4721764	0					
ANR	4722016	ExpressionStatement	"dprintf ( D_ALWAYS , ""dynuser::cleanup_condor_users() Got bad status (%d) from NetUserEnum\\n"" , nStatus )"	948:3:24225:24324	4721764	0	True				
ANR	4722017	CallExpression	"dprintf ( D_ALWAYS , ""dynuser::cleanup_condor_users() Got bad status (%d) from NetUserEnum\\n"" , nStatus )"		4721764	0					
ANR	4722018	Callee	dprintf		4721764	0					
ANR	4722019	Identifier	dprintf		4721764	0					
ANR	4722020	ArgumentList	D_ALWAYS		4721764	1					
ANR	4722021	Argument	D_ALWAYS		4721764	0					
ANR	4722022	Identifier	D_ALWAYS		4721764	0					
ANR	4722023	Argument	"""dynuser::cleanup_condor_users() Got bad status (%d) from NetUserEnum\\n"""		4721764	1					
ANR	4722024	PrimaryExpression	"""dynuser::cleanup_condor_users() Got bad status (%d) from NetUserEnum\\n"""		4721764	0					
ANR	4722025	Argument	nStatus		4721764	2					
ANR	4722026	Identifier	nStatus		4721764	0					
ANR	4722027	ExpressionStatement	retval = false	949:3:24329:24343	4721764	1	True				
ANR	4722028	AssignmentExpression	retval = false		4721764	0		=			
ANR	4722029	Identifier	retval		4721764	0					
ANR	4722030	Identifier	false		4721764	1					
ANR	4722031	IfStatement	if ( pBuf != NULL )		4721764	2					
ANR	4722032	Condition	pBuf != NULL	953:6:24388:24399	4721764	0	True				
ANR	4722033	EqualityExpression	pBuf != NULL		4721764	0		!=			
ANR	4722034	Identifier	pBuf		4721764	0					
ANR	4722035	Identifier	NULL		4721764	1					
ANR	4722036	CompoundStatement		67:20:1786:1786	4721764	1					
ANR	4722037	ExpressionStatement	NetApiBufferFree ( pBuf )	954:3:24407:24429	4721764	0	True				
ANR	4722038	CallExpression	NetApiBufferFree ( pBuf )		4721764	0					
ANR	4722039	Callee	NetApiBufferFree		4721764	0					
ANR	4722040	Identifier	NetApiBufferFree		4721764	0					
ANR	4722041	ArgumentList	pBuf		4721764	1					
ANR	4722042	Argument	pBuf		4721764	0					
ANR	4722043	Identifier	pBuf		4721764	0					
ANR	4722044	ExpressionStatement	pBuf = NULL	955:3:24434:24445	4721764	1	True				
ANR	4722045	AssignmentExpression	pBuf = NULL		4721764	0		=			
ANR	4722046	Identifier	pBuf		4721764	0					
ANR	4722047	Identifier	NULL		4721764	1					
ANR	4722048	Condition	nStatus == ERROR_MORE_DATA	957:10:24461:24486	4721764	1	True				
ANR	4722049	EqualityExpression	nStatus == ERROR_MORE_DATA		4721764	0		==			
ANR	4722050	Identifier	nStatus		4721764	0					
ANR	4722051	Identifier	ERROR_MORE_DATA		4721764	1					
ANR	4722052	IfStatement	if ( pBuf != NULL )		4721764	10					
ANR	4722053	Condition	pBuf != NULL	961:5:24535:24546	4721764	0	True				
ANR	4722054	EqualityExpression	pBuf != NULL		4721764	0		!=			
ANR	4722055	Identifier	pBuf		4721764	0					
ANR	4722056	Identifier	NULL		4721764	1					
ANR	4722057	CompoundStatement		75:19:1933:1933	4721764	1					
ANR	4722058	ExpressionStatement	NetApiBufferFree ( pBuf )	962:2:24553:24575	4721764	0	True				
ANR	4722059	CallExpression	NetApiBufferFree ( pBuf )		4721764	0					
ANR	4722060	Callee	NetApiBufferFree		4721764	0					
ANR	4722061	Identifier	NetApiBufferFree		4721764	0					
ANR	4722062	ArgumentList	pBuf		4721764	1					
ANR	4722063	Argument	pBuf		4721764	0					
ANR	4722064	Identifier	pBuf		4721764	0					
ANR	4722065	ExpressionStatement	pBuf = NULL	963:2:24579:24590	4721764	1	True				
ANR	4722066	AssignmentExpression	pBuf = NULL		4721764	0		=			
ANR	4722067	Identifier	pBuf		4721764	0					
ANR	4722068	Identifier	NULL		4721764	1					
ANR	4722069	ReturnStatement	return retval ;	966:1:24597:24610	4721764	11	True				
ANR	4722070	Identifier	retval		4721764	0					
ANR	4722071	ReturnType	bool		4721764	1					
ANR	4722072	Identifier	dynuser :: cleanup_condor_users		4721764	2					
ANR	4722073	ParameterList	char * user_prefix		4721764	3					
ANR	4722074	Parameter	char * user_prefix	887:35:22596:22612	4721764	0	True				
ANR	4722075	ParameterType	char *		4721764	0					
ANR	4722076	Identifier	user_prefix		4721764	1					
ANR	4722077	CFGEntryNode	ENTRY		4721764		True				
ANR	4722078	CFGExitNode	EXIT		4721764		True				
ANR	4722079	Symbol	& dwResumeHandle		4721764						
ANR	4722080	Symbol	user_prefix		4721764						
ANR	4722081	Symbol	MAX_PREFERRED_LENGTH		4721764						
ANR	4722082	Symbol	pBuf		4721764						
ANR	4722083	Symbol	* user_prefix		4721764						
ANR	4722084	Symbol	strlen		4721764						
ANR	4722085	Symbol	du		4721764						
ANR	4722086	Symbol	dwTotalEntries		4721764						
ANR	4722087	Symbol	NetUserEnum		4721764						
ANR	4722088	Symbol	& pBuf		4721764						
ANR	4722089	Symbol	* pTmpBuf		4721764						
ANR	4722090	Symbol	ERROR_MORE_DATA		4721764						
ANR	4722091	Symbol	strnicmp		4721764						
ANR	4722092	Symbol	nStatus		4721764						
ANR	4722093	Symbol	NULL		4721764						
ANR	4722094	Symbol	dwResumeHandle		4721764						
ANR	4722095	Symbol	du . deleteuser		4721764						
ANR	4722096	Symbol	pTmpBuf -> usri10_name		4721764						
ANR	4722097	Symbol	pTmpBuf		4721764						
ANR	4722098	Symbol	D_ALWAYS		4721764						
ANR	4722099	Symbol	false		4721764						
ANR	4722100	Symbol	NERR_Success		4721764						
ANR	4722101	Symbol	i		4721764						
ANR	4722102	Symbol	D_FULLDEBUG		4721764						
ANR	4722103	Symbol	retval		4721764						
ANR	4722104	Symbol	FILTER_NORMAL_ACCOUNT		4721764						
ANR	4722105	Symbol	& dwEntriesRead		4721764						
ANR	4722106	Symbol	buf		4721764						
ANR	4722107	Symbol	dwEntriesRead		4721764						
ANR	4722108	Symbol	dwTotalCount		4721764						
ANR	4722109	Symbol	true		4721764						
ANR	4722110	Symbol	& dwTotalEntries		4721764						
