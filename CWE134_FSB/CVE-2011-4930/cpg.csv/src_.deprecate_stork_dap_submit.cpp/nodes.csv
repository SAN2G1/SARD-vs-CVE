command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2414548	File	data/converged/CVE-2011-4930_htcondor/src_.deprecate_stork_dap_submit.cpp								
ANR	2414549	DeclStmt									
ANR	2414550	Decl							struct stork_global_opts	struct stork_global_opts	global_opts
ANR	2414551	Function	check_dap_format	46:0:1542:2735							
ANR	2414552	FunctionDef	check_dap_format (classad :: ClassAd * currentAd)		2414551	0					
ANR	2414553	CompoundStatement		47:0:1592:2735	2414551	0					
ANR	2414554	IdentifierDeclStatement	char dap_type [ MAXSTR ] ;	48:2:1596:1617	2414551	0	True				
ANR	2414555	IdentifierDecl	dap_type [ MAXSTR ]		2414551	0					
ANR	2414556	IdentifierDeclType	char [ MAXSTR ]		2414551	0					
ANR	2414557	Identifier	dap_type		2414551	1					
ANR	2414558	Identifier	MAXSTR		2414551	2					
ANR	2414559	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	49:2:1621:1646	2414551	1	True				
ANR	2414560	IdentifierDecl	"adbuffer = """""		2414551	0					
ANR	2414561	IdentifierDeclType	std :: string		2414551	0					
ANR	2414562	Identifier	adbuffer		2414551	1					
ANR	2414563	AssignmentExpression	"adbuffer = """""		2414551	2		=			
ANR	2414564	Identifier	adbuffer		2414551	0					
ANR	2414565	PrimaryExpression	""""""		2414551	1					
ANR	2414566	IdentifierDeclStatement	classad :: ExprTree * attrexpr = NULL ;	50:2:1650:1684	2414551	2	True				
ANR	2414567	IdentifierDecl	* attrexpr = NULL		2414551	0					
ANR	2414568	IdentifierDeclType	classad :: ExprTree *		2414551	0					
ANR	2414569	Identifier	attrexpr		2414551	1					
ANR	2414570	AssignmentExpression	* attrexpr = NULL		2414551	2		=			
ANR	2414571	Identifier	NULL		2414551	0					
ANR	2414572	Identifier	NULL		2414551	1					
ANR	2414573	IdentifierDeclStatement	classad :: ClassAdUnParser unparser ;	51:2:1688:1721	2414551	3	True				
ANR	2414574	IdentifierDecl	unparser		2414551	0					
ANR	2414575	IdentifierDeclType	classad :: ClassAdUnParser		2414551	0					
ANR	2414576	Identifier	unparser		2414551	1					
ANR	2414577	IfStatement	"if ( ! ( attrexpr = currentAd -> Lookup ( ""dap_type"" ) ) )"		2414551	4					
ANR	2414578	Condition	"! ( attrexpr = currentAd -> Lookup ( ""dap_type"" ) )"	57:7:1837:1879	2414551	0	True				
ANR	2414579	UnaryOperationExpression	"! ( attrexpr = currentAd -> Lookup ( ""dap_type"" ) )"		2414551	0					
ANR	2414580	UnaryOperator	!		2414551	0					
ANR	2414581	AssignmentExpression	"attrexpr = currentAd -> Lookup ( ""dap_type"" )"		2414551	1		=			
ANR	2414582	Identifier	attrexpr		2414551	0					
ANR	2414583	CallExpression	"currentAd -> Lookup ( ""dap_type"" )"		2414551	1					
ANR	2414584	Callee	currentAd -> Lookup		2414551	0					
ANR	2414585	PtrMemberAccess	currentAd -> Lookup		2414551	0					
ANR	2414586	Identifier	currentAd		2414551	0					
ANR	2414587	Identifier	Lookup		2414551	1					
ANR	2414588	ArgumentList	"""dap_type"""		2414551	1					
ANR	2414589	Argument	"""dap_type"""		2414551	0					
ANR	2414590	PrimaryExpression	"""dap_type"""		2414551	0					
ANR	2414591	ReturnStatement	return 0 ;	57:53:1883:1891	2414551	1	True				
ANR	2414592	PrimaryExpression	0		2414551	0					
ANR	2414593	ElseStatement	else		2414551	0					
ANR	2414594	CompoundStatement		15:4:354:379	2414551	0					
ANR	2414595	ExpressionStatement	"unparser . Unparse ( adbuffer , attrexpr )"	59:4:1905:1940	2414551	0	True				
ANR	2414596	CallExpression	"unparser . Unparse ( adbuffer , attrexpr )"		2414551	0					
ANR	2414597	Callee	unparser . Unparse		2414551	0					
ANR	2414598	MemberAccess	unparser . Unparse		2414551	0					
ANR	2414599	Identifier	unparser		2414551	0					
ANR	2414600	Identifier	Unparse		2414551	1					
ANR	2414601	ArgumentList	adbuffer		2414551	1					
ANR	2414602	Argument	adbuffer		2414551	0					
ANR	2414603	Identifier	adbuffer		2414551	0					
ANR	2414604	Argument	attrexpr		2414551	1					
ANR	2414605	Identifier	attrexpr		2414551	0					
ANR	2414606	IdentifierDeclStatement	char tmp_adbuffer [ MAXSTR ] ;	61:4:1947:1972	2414551	1	True				
ANR	2414607	IdentifierDecl	tmp_adbuffer [ MAXSTR ]		2414551	0					
ANR	2414608	IdentifierDeclType	char [ MAXSTR ]		2414551	0					
ANR	2414609	Identifier	tmp_adbuffer		2414551	1					
ANR	2414610	Identifier	MAXSTR		2414551	2					
ANR	2414611	ExpressionStatement	"strncpy ( tmp_adbuffer , adbuffer . c_str ( ) , MAXSTR )"	62:4:1978:2025	2414551	2	True				
ANR	2414612	CallExpression	"strncpy ( tmp_adbuffer , adbuffer . c_str ( ) , MAXSTR )"		2414551	0					
ANR	2414613	Callee	strncpy		2414551	0					
ANR	2414614	Identifier	strncpy		2414551	0					
ANR	2414615	ArgumentList	tmp_adbuffer		2414551	1					
ANR	2414616	Argument	tmp_adbuffer		2414551	0					
ANR	2414617	Identifier	tmp_adbuffer		2414551	0					
ANR	2414618	Argument	adbuffer . c_str ( )		2414551	1					
ANR	2414619	CallExpression	adbuffer . c_str ( )		2414551	0					
ANR	2414620	Callee	adbuffer . c_str		2414551	0					
ANR	2414621	MemberAccess	adbuffer . c_str		2414551	0					
ANR	2414622	Identifier	adbuffer		2414551	0					
ANR	2414623	Identifier	c_str		2414551	1					
ANR	2414624	ArgumentList			2414551	1					
ANR	2414625	Argument	MAXSTR		2414551	2					
ANR	2414626	Identifier	MAXSTR		2414551	0					
ANR	2414627	ExpressionStatement	"strcpy ( dap_type , strip_str ( tmp_adbuffer ) )"	63:4:2031:2071	2414551	3	True				
ANR	2414628	CallExpression	"strcpy ( dap_type , strip_str ( tmp_adbuffer ) )"		2414551	0					
ANR	2414629	Callee	strcpy		2414551	0					
ANR	2414630	Identifier	strcpy		2414551	0					
ANR	2414631	ArgumentList	dap_type		2414551	1					
ANR	2414632	Argument	dap_type		2414551	0					
ANR	2414633	Identifier	dap_type		2414551	0					
ANR	2414634	Argument	strip_str ( tmp_adbuffer )		2414551	1					
ANR	2414635	CallExpression	strip_str ( tmp_adbuffer )		2414551	0					
ANR	2414636	Callee	strip_str		2414551	0					
ANR	2414637	Identifier	strip_str		2414551	0					
ANR	2414638	ArgumentList	tmp_adbuffer		2414551	1					
ANR	2414639	Argument	tmp_adbuffer		2414551	0					
ANR	2414640	Identifier	tmp_adbuffer		2414551	0					
ANR	2414641	IfStatement	"if ( ! strcmp ( dap_type , ""transfer"" ) )"		2414551	4					
ANR	2414642	Condition	"! strcmp ( dap_type , ""transfer"" )"	65:9:2083:2111	2414551	0	True				
ANR	2414643	UnaryOperationExpression	"! strcmp ( dap_type , ""transfer"" )"		2414551	0					
ANR	2414644	UnaryOperator	!		2414551	0					
ANR	2414645	CallExpression	"strcmp ( dap_type , ""transfer"" )"		2414551	1					
ANR	2414646	Callee	strcmp		2414551	0					
ANR	2414647	Identifier	strcmp		2414551	0					
ANR	2414648	ArgumentList	dap_type		2414551	1					
ANR	2414649	Argument	dap_type		2414551	0					
ANR	2414650	Identifier	dap_type		2414551	0					
ANR	2414651	Argument	"""transfer"""		2414551	1					
ANR	2414652	PrimaryExpression	"""transfer"""		2414551	0					
ANR	2414653	CompoundStatement		19:40:521:521	2414551	1					
ANR	2414654	IfStatement	"if ( ! currentAd -> Lookup ( ""src_url"" ) )"		2414551	0					
ANR	2414655	Condition	"! currentAd -> Lookup ( ""src_url"" )"	66:11:2127:2155	2414551	0	True				
ANR	2414656	UnaryOperationExpression	"! currentAd -> Lookup ( ""src_url"" )"		2414551	0					
ANR	2414657	UnaryOperator	!		2414551	0					
ANR	2414658	CallExpression	"currentAd -> Lookup ( ""src_url"" )"		2414551	1					
ANR	2414659	Callee	currentAd -> Lookup		2414551	0					
ANR	2414660	PtrMemberAccess	currentAd -> Lookup		2414551	0					
ANR	2414661	Identifier	currentAd		2414551	0					
ANR	2414662	Identifier	Lookup		2414551	1					
ANR	2414663	ArgumentList	"""src_url"""		2414551	1					
ANR	2414664	Argument	"""src_url"""		2414551	0					
ANR	2414665	PrimaryExpression	"""src_url"""		2414551	0					
ANR	2414666	ReturnStatement	return 0 ;	66:44:2160:2168	2414551	1	True				
ANR	2414667	PrimaryExpression	0		2414551	0					
ANR	2414668	IfStatement	"if ( ! currentAd -> Lookup ( ""dest_url"" ) )"		2414551	1					
ANR	2414669	Condition	"! currentAd -> Lookup ( ""dest_url"" )"	67:11:2181:2210	2414551	0	True				
ANR	2414670	UnaryOperationExpression	"! currentAd -> Lookup ( ""dest_url"" )"		2414551	0					
ANR	2414671	UnaryOperator	!		2414551	0					
ANR	2414672	CallExpression	"currentAd -> Lookup ( ""dest_url"" )"		2414551	1					
ANR	2414673	Callee	currentAd -> Lookup		2414551	0					
ANR	2414674	PtrMemberAccess	currentAd -> Lookup		2414551	0					
ANR	2414675	Identifier	currentAd		2414551	0					
ANR	2414676	Identifier	Lookup		2414551	1					
ANR	2414677	ArgumentList	"""dest_url"""		2414551	1					
ANR	2414678	Argument	"""dest_url"""		2414551	0					
ANR	2414679	PrimaryExpression	"""dest_url"""		2414551	0					
ANR	2414680	ReturnStatement	return 0 ;	67:44:2214:2222	2414551	1	True				
ANR	2414681	PrimaryExpression	0		2414551	0					
ANR	2414682	ElseStatement	else		2414551	0					
ANR	2414683	IfStatement	"if ( ! strcmp ( dap_type , ""reserve"" ) )"		2414551	0					
ANR	2414684	Condition	"! strcmp ( dap_type , ""reserve"" )"	70:14:2249:2276	2414551	0	True				
ANR	2414685	UnaryOperationExpression	"! strcmp ( dap_type , ""reserve"" )"		2414551	0					
ANR	2414686	UnaryOperator	!		2414551	0					
ANR	2414687	CallExpression	"strcmp ( dap_type , ""reserve"" )"		2414551	1					
ANR	2414688	Callee	strcmp		2414551	0					
ANR	2414689	Identifier	strcmp		2414551	0					
ANR	2414690	ArgumentList	dap_type		2414551	1					
ANR	2414691	Argument	dap_type		2414551	0					
ANR	2414692	Identifier	dap_type		2414551	0					
ANR	2414693	Argument	"""reserve"""		2414551	1					
ANR	2414694	PrimaryExpression	"""reserve"""		2414551	0					
ANR	2414695	CompoundStatement		24:44:686:686	2414551	1					
ANR	2414696	IfStatement	"if ( ! currentAd -> Lookup ( ""dest_host"" ) )"		2414551	0					
ANR	2414697	Condition	"! currentAd -> Lookup ( ""dest_host"" )"	71:11:2292:2322	2414551	0	True				
ANR	2414698	UnaryOperationExpression	"! currentAd -> Lookup ( ""dest_host"" )"		2414551	0					
ANR	2414699	UnaryOperator	!		2414551	0					
ANR	2414700	CallExpression	"currentAd -> Lookup ( ""dest_host"" )"		2414551	1					
ANR	2414701	Callee	currentAd -> Lookup		2414551	0					
ANR	2414702	PtrMemberAccess	currentAd -> Lookup		2414551	0					
ANR	2414703	Identifier	currentAd		2414551	0					
ANR	2414704	Identifier	Lookup		2414551	1					
ANR	2414705	ArgumentList	"""dest_host"""		2414551	1					
ANR	2414706	Argument	"""dest_host"""		2414551	0					
ANR	2414707	PrimaryExpression	"""dest_host"""		2414551	0					
ANR	2414708	ReturnStatement	return 0 ;	71:48:2329:2337	2414551	1	True				
ANR	2414709	PrimaryExpression	0		2414551	0					
ANR	2414710	ElseStatement	else		2414551	0					
ANR	2414711	IfStatement	"if ( ! strcmp ( dap_type , ""release"" ) )"		2414551	0					
ANR	2414712	Condition	"! strcmp ( dap_type , ""release"" )"	77:14:2540:2567	2414551	0	True				
ANR	2414713	UnaryOperationExpression	"! strcmp ( dap_type , ""release"" )"		2414551	0					
ANR	2414714	UnaryOperator	!		2414551	0					
ANR	2414715	CallExpression	"strcmp ( dap_type , ""release"" )"		2414551	1					
ANR	2414716	Callee	strcmp		2414551	0					
ANR	2414717	Identifier	strcmp		2414551	0					
ANR	2414718	ArgumentList	dap_type		2414551	1					
ANR	2414719	Argument	dap_type		2414551	0					
ANR	2414720	Identifier	dap_type		2414551	0					
ANR	2414721	Argument	"""release"""		2414551	1					
ANR	2414722	PrimaryExpression	"""release"""		2414551	0					
ANR	2414723	CompoundStatement		31:44:977:977	2414551	1					
ANR	2414724	IfStatement	"if ( ! currentAd -> Lookup ( ""dest_host"" ) )"		2414551	0					
ANR	2414725	Condition	"! currentAd -> Lookup ( ""dest_host"" )"	78:11:2583:2613	2414551	0	True				
ANR	2414726	UnaryOperationExpression	"! currentAd -> Lookup ( ""dest_host"" )"		2414551	0					
ANR	2414727	UnaryOperator	!		2414551	0					
ANR	2414728	CallExpression	"currentAd -> Lookup ( ""dest_host"" )"		2414551	1					
ANR	2414729	Callee	currentAd -> Lookup		2414551	0					
ANR	2414730	PtrMemberAccess	currentAd -> Lookup		2414551	0					
ANR	2414731	Identifier	currentAd		2414551	0					
ANR	2414732	Identifier	Lookup		2414551	1					
ANR	2414733	ArgumentList	"""dest_host"""		2414551	1					
ANR	2414734	Argument	"""dest_host"""		2414551	0					
ANR	2414735	PrimaryExpression	"""dest_host"""		2414551	0					
ANR	2414736	ReturnStatement	return 0 ;	78:45:2617:2625	2414551	1	True				
ANR	2414737	PrimaryExpression	0		2414551	0					
ANR	2414738	IfStatement	"if ( ! currentAd -> Lookup ( ""reserve_id"" ) )"		2414551	1					
ANR	2414739	Condition	"! currentAd -> Lookup ( ""reserve_id"" )"	79:11:2638:2669	2414551	0	True				
ANR	2414740	UnaryOperationExpression	"! currentAd -> Lookup ( ""reserve_id"" )"		2414551	0					
ANR	2414741	UnaryOperator	!		2414551	0					
ANR	2414742	CallExpression	"currentAd -> Lookup ( ""reserve_id"" )"		2414551	1					
ANR	2414743	Callee	currentAd -> Lookup		2414551	0					
ANR	2414744	PtrMemberAccess	currentAd -> Lookup		2414551	0					
ANR	2414745	Identifier	currentAd		2414551	0					
ANR	2414746	Identifier	Lookup		2414551	1					
ANR	2414747	ArgumentList	"""reserve_id"""		2414551	1					
ANR	2414748	Argument	"""reserve_id"""		2414551	0					
ANR	2414749	PrimaryExpression	"""reserve_id"""		2414551	0					
ANR	2414750	ReturnStatement	return 0 ;	79:46:2673:2681	2414551	1	True				
ANR	2414751	PrimaryExpression	0		2414551	0					
ANR	2414752	ElseStatement	else		2414551	0					
ANR	2414753	ReturnStatement	return 0 ;	82:9:2703:2711	2414551	0	True				
ANR	2414754	PrimaryExpression	0		2414551	0					
ANR	2414755	ReturnStatement	return 1 ;	86:2:2725:2733	2414551	5	True				
ANR	2414756	PrimaryExpression	1		2414551	0					
ANR	2414757	ReturnType	int		2414551	1					
ANR	2414758	Identifier	check_dap_format		2414551	2					
ANR	2414759	ParameterList	classad :: ClassAd * currentAd		2414551	3					
ANR	2414760	Parameter	classad :: ClassAd * currentAd	46:21:1563:1589	2414551	0	True				
ANR	2414761	ParameterType	classad :: ClassAd *		2414551	0					
ANR	2414762	Identifier	currentAd		2414551	1					
ANR	2414763	CFGEntryNode	ENTRY		2414551		True				
ANR	2414764	CFGExitNode	EXIT		2414551		True				
ANR	2414765	Symbol	strcmp		2414551						
ANR	2414766	Symbol	NULL		2414551						
ANR	2414767	Symbol	* currentAd		2414551						
ANR	2414768	Symbol	dap_type		2414551						
ANR	2414769	Symbol	tmp_adbuffer		2414551						
ANR	2414770	Symbol	attrexpr		2414551						
ANR	2414771	Symbol	currentAd		2414551						
ANR	2414772	Symbol	MAXSTR		2414551						
ANR	2414773	Symbol	currentAd -> Lookup		2414551						
ANR	2414774	Symbol	unparser		2414551						
ANR	2414775	Symbol	strip_str		2414551						
ANR	2414776	Symbol	adbuffer . c_str		2414551						
ANR	2414777	Symbol	adbuffer		2414551						
ANR	2414778	Function	MissingArgument	89:0:2816:2970							
ANR	2414779	FunctionDef	"MissingArgument (char * argv0 , char * arg)"		2414778	0					
ANR	2414780	CompoundStatement		90:0:2860:2970	2414778	0					
ANR	2414781	ExpressionStatement	"fprintf ( stderr , ""Missing argument: %s\\n"" , arg )"	91:2:2864:2908	2414778	0	True				
ANR	2414782	CallExpression	"fprintf ( stderr , ""Missing argument: %s\\n"" , arg )"		2414778	0					
ANR	2414783	Callee	fprintf		2414778	0					
ANR	2414784	Identifier	fprintf		2414778	0					
ANR	2414785	ArgumentList	stderr		2414778	1					
ANR	2414786	Argument	stderr		2414778	0					
ANR	2414787	Identifier	stderr		2414778	0					
ANR	2414788	Argument	"""Missing argument: %s\\n"""		2414778	1					
ANR	2414789	PrimaryExpression	"""Missing argument: %s\\n"""		2414778	0					
ANR	2414790	Argument	arg		2414778	2					
ANR	2414791	Identifier	arg		2414778	0					
ANR	2414792	ExpressionStatement	"stork_print_usage ( stderr , argv0 , USAGE , true )"	92:2:2912:2957	2414778	1	True				
ANR	2414793	CallExpression	"stork_print_usage ( stderr , argv0 , USAGE , true )"		2414778	0					
ANR	2414794	Callee	stork_print_usage		2414778	0					
ANR	2414795	Identifier	stork_print_usage		2414778	0					
ANR	2414796	ArgumentList	stderr		2414778	1					
ANR	2414797	Argument	stderr		2414778	0					
ANR	2414798	Identifier	stderr		2414778	0					
ANR	2414799	Argument	argv0		2414778	1					
ANR	2414800	Identifier	argv0		2414778	0					
ANR	2414801	Argument	USAGE		2414778	2					
ANR	2414802	Identifier	USAGE		2414778	0					
ANR	2414803	Argument	true		2414778	3					
ANR	2414804	Identifier	true		2414778	0					
ANR	2414805	ExpressionStatement	exit ( 1 )	93:2:2961:2968	2414778	2	True				
ANR	2414806	CallExpression	exit ( 1 )		2414778	0					
ANR	2414807	Callee	exit		2414778	0					
ANR	2414808	Identifier	exit		2414778	0					
ANR	2414809	ArgumentList	1		2414778	1					
ANR	2414810	Argument	1		2414778	0					
ANR	2414811	PrimaryExpression	1		2414778	0					
ANR	2414812	ReturnType	void		2414778	1					
ANR	2414813	Identifier	MissingArgument		2414778	2					
ANR	2414814	ParameterList	"char * argv0 , char * arg"		2414778	3					
ANR	2414815	Parameter	char * argv0	89:21:2837:2847	2414778	0	True				
ANR	2414816	ParameterType	char *		2414778	0					
ANR	2414817	Identifier	argv0		2414778	1					
ANR	2414818	Parameter	char * arg	89:33:2849:2857	2414778	1	True				
ANR	2414819	ParameterType	char *		2414778	0					
ANR	2414820	Identifier	arg		2414778	1					
ANR	2414821	CFGEntryNode	ENTRY		2414778		True				
ANR	2414822	CFGExitNode	EXIT		2414778		True				
ANR	2414823	Symbol	USAGE		2414778						
ANR	2414824	Symbol	arg		2414778						
ANR	2414825	Symbol	true		2414778						
ANR	2414826	Symbol	argv0		2414778						
ANR	2414827	Symbol	stderr		2414778						
ANR	2414828	Function	IllegalOption	96:0:2973:3123							
ANR	2414829	FunctionDef	"IllegalOption (char * argv0 , char * arg)"		2414828	0					
ANR	2414830	CompoundStatement		97:0:3015:3123	2414828	0					
ANR	2414831	ExpressionStatement	"fprintf ( stderr , ""Illegal option: %s\\n"" , arg )"	98:2:3019:3061	2414828	0	True				
ANR	2414832	CallExpression	"fprintf ( stderr , ""Illegal option: %s\\n"" , arg )"		2414828	0					
ANR	2414833	Callee	fprintf		2414828	0					
ANR	2414834	Identifier	fprintf		2414828	0					
ANR	2414835	ArgumentList	stderr		2414828	1					
ANR	2414836	Argument	stderr		2414828	0					
ANR	2414837	Identifier	stderr		2414828	0					
ANR	2414838	Argument	"""Illegal option: %s\\n"""		2414828	1					
ANR	2414839	PrimaryExpression	"""Illegal option: %s\\n"""		2414828	0					
ANR	2414840	Argument	arg		2414828	2					
ANR	2414841	Identifier	arg		2414828	0					
ANR	2414842	ExpressionStatement	"stork_print_usage ( stderr , argv0 , USAGE , true )"	99:2:3065:3110	2414828	1	True				
ANR	2414843	CallExpression	"stork_print_usage ( stderr , argv0 , USAGE , true )"		2414828	0					
ANR	2414844	Callee	stork_print_usage		2414828	0					
ANR	2414845	Identifier	stork_print_usage		2414828	0					
ANR	2414846	ArgumentList	stderr		2414828	1					
ANR	2414847	Argument	stderr		2414828	0					
ANR	2414848	Identifier	stderr		2414828	0					
ANR	2414849	Argument	argv0		2414828	1					
ANR	2414850	Identifier	argv0		2414828	0					
ANR	2414851	Argument	USAGE		2414828	2					
ANR	2414852	Identifier	USAGE		2414828	0					
ANR	2414853	Argument	true		2414828	3					
ANR	2414854	Identifier	true		2414828	0					
ANR	2414855	ExpressionStatement	exit ( 1 )	100:2:3114:3121	2414828	2	True				
ANR	2414856	CallExpression	exit ( 1 )		2414828	0					
ANR	2414857	Callee	exit		2414828	0					
ANR	2414858	Identifier	exit		2414828	0					
ANR	2414859	ArgumentList	1		2414828	1					
ANR	2414860	Argument	1		2414828	0					
ANR	2414861	PrimaryExpression	1		2414828	0					
ANR	2414862	ReturnType	void		2414828	1					
ANR	2414863	Identifier	IllegalOption		2414828	2					
ANR	2414864	ParameterList	"char * argv0 , char * arg"		2414828	3					
ANR	2414865	Parameter	char * argv0	96:19:2992:3002	2414828	0	True				
ANR	2414866	ParameterType	char *		2414828	0					
ANR	2414867	Identifier	argv0		2414828	1					
ANR	2414868	Parameter	char * arg	96:31:3004:3012	2414828	1	True				
ANR	2414869	ParameterType	char *		2414828	0					
ANR	2414870	Identifier	arg		2414828	1					
ANR	2414871	CFGEntryNode	ENTRY		2414828		True				
ANR	2414872	CFGExitNode	EXIT		2414828		True				
ANR	2414873	Symbol	USAGE		2414828						
ANR	2414874	Symbol	arg		2414828						
ANR	2414875	Symbol	true		2414828						
ANR	2414876	Symbol	argv0		2414828						
ANR	2414877	Symbol	stderr		2414828						
ANR	2414878	Function	readFile	104:0:3185:3544							
ANR	2414879	FunctionDef	"readFile (int fd , char const * filename , std :: string * buf)"		2414878	0					
ANR	2414880	CompoundStatement		106:0:3252:3544	2414878	0					
ANR	2414881	IdentifierDeclStatement	char chunk [ 4 * 1024 ] ;	107:4:3258:3276	2414878	0	True				
ANR	2414882	IdentifierDecl	chunk [ 4 * 1024 ]		2414878	0					
ANR	2414883	IdentifierDeclType	char [ 4 * 1024 ]		2414878	0					
ANR	2414884	Identifier	chunk		2414878	1					
ANR	2414885	MultiplicativeExpression	4 * 1024		2414878	2		*			
ANR	2414886	PrimaryExpression	4		2414878	0					
ANR	2414887	PrimaryExpression	1024		2414878	1					
ANR	2414888	WhileStatement	while ( 1 )		2414878	1					
ANR	2414889	Condition	1	109:7:3286:3286	2414878	0	True				
ANR	2414890	PrimaryExpression	1		2414878	0					
ANR	2414891	CompoundStatement		5:2:40:82	2414878	1					
ANR	2414892	IdentifierDeclStatement	"ssize_t n = read ( fd , chunk , sizeof ( chunk ) - 1 ) ;"	110:2:3293:3335	2414878	0	True				
ANR	2414893	IdentifierDecl	"n = read ( fd , chunk , sizeof ( chunk ) - 1 )"		2414878	0					
ANR	2414894	IdentifierDeclType	ssize_t		2414878	0					
ANR	2414895	Identifier	n		2414878	1					
ANR	2414896	AssignmentExpression	"n = read ( fd , chunk , sizeof ( chunk ) - 1 )"		2414878	2		=			
ANR	2414897	Identifier	n		2414878	0					
ANR	2414898	CallExpression	"read ( fd , chunk , sizeof ( chunk ) - 1 )"		2414878	1					
ANR	2414899	Callee	read		2414878	0					
ANR	2414900	Identifier	read		2414878	0					
ANR	2414901	ArgumentList	fd		2414878	1					
ANR	2414902	Argument	fd		2414878	0					
ANR	2414903	Identifier	fd		2414878	0					
ANR	2414904	Argument	chunk		2414878	1					
ANR	2414905	Identifier	chunk		2414878	0					
ANR	2414906	Argument	sizeof ( chunk ) - 1		2414878	2					
ANR	2414907	AdditiveExpression	sizeof ( chunk ) - 1		2414878	0		-			
ANR	2414908	SizeofExpression	sizeof ( chunk )		2414878	0					
ANR	2414909	Sizeof	sizeof		2414878	0					
ANR	2414910	SizeofOperand	chunk		2414878	1					
ANR	2414911	PrimaryExpression	1		2414878	1					
ANR	2414912	IfStatement	if ( n > 0 )		2414878	1					
ANR	2414913	Condition	n > 0	111:5:3342:3344	2414878	0	True				
ANR	2414914	RelationalExpression	n > 0		2414878	0		>			
ANR	2414915	Identifier	n		2414878	0					
ANR	2414916	PrimaryExpression	0		2414878	1					
ANR	2414917	CompoundStatement		6:10:94:94	2414878	1					
ANR	2414918	ExpressionStatement	chunk [ n ] = '\\0'	112:3:3352:3367	2414878	0	True				
ANR	2414919	AssignmentExpression	chunk [ n ] = '\\0'		2414878	0		=			
ANR	2414920	ArrayIndexing	chunk [ n ]		2414878	0					
ANR	2414921	Identifier	chunk		2414878	0					
ANR	2414922	Identifier	n		2414878	1					
ANR	2414923	PrimaryExpression	'\\0'		2414878	1					
ANR	2414924	ExpressionStatement	( * buf ) += chunk	113:3:3372:3387	2414878	1	True				
ANR	2414925	AssignmentExpression	( * buf ) += chunk		2414878	0		+=			
ANR	2414926	UnaryOperationExpression	* buf		2414878	0					
ANR	2414927	UnaryOperator	*		2414878	0					
ANR	2414928	Identifier	buf		2414878	1					
ANR	2414929	Identifier	chunk		2414878	1					
ANR	2414930	ElseStatement	else		2414878	0					
ANR	2414931	IfStatement	if ( n == 0 )		2414878	0					
ANR	2414932	Condition	n == 0	115:10:3403:3406	2414878	0	True				
ANR	2414933	EqualityExpression	n == 0		2414878	0		==			
ANR	2414934	Identifier	n		2414878	0					
ANR	2414935	PrimaryExpression	0		2414878	1					
ANR	2414936	CompoundStatement		10:16:156:156	2414878	1					
ANR	2414937	BreakStatement	break ;	116:3:3414:3419	2414878	0	True				
ANR	2414938	ElseStatement	else		2414878	0					
ANR	2414939	CompoundStatement		13:7:179:179	2414878	0					
ANR	2414940	ExpressionStatement	"fprintf ( stderr , ""failed to read %s: %s\\n"" , filename , strerror ( errno ) )"	119:3:3437:3503	2414878	0	True				
ANR	2414941	CallExpression	"fprintf ( stderr , ""failed to read %s: %s\\n"" , filename , strerror ( errno ) )"		2414878	0					
ANR	2414942	Callee	fprintf		2414878	0					
ANR	2414943	Identifier	fprintf		2414878	0					
ANR	2414944	ArgumentList	stderr		2414878	1					
ANR	2414945	Argument	stderr		2414878	0					
ANR	2414946	Identifier	stderr		2414878	0					
ANR	2414947	Argument	"""failed to read %s: %s\\n"""		2414878	1					
ANR	2414948	PrimaryExpression	"""failed to read %s: %s\\n"""		2414878	0					
ANR	2414949	Argument	filename		2414878	2					
ANR	2414950	Identifier	filename		2414878	0					
ANR	2414951	Argument	strerror ( errno )		2414878	3					
ANR	2414952	CallExpression	strerror ( errno )		2414878	0					
ANR	2414953	Callee	strerror		2414878	0					
ANR	2414954	Identifier	strerror		2414878	0					
ANR	2414955	ArgumentList	errno		2414878	1					
ANR	2414956	Argument	errno		2414878	0					
ANR	2414957	Identifier	errno		2414878	0					
ANR	2414958	ReturnStatement	return false ;	120:3:3508:3520	2414878	1	True				
ANR	2414959	Identifier	false		2414878	0					
ANR	2414960	ReturnStatement	return true ;	124:1:3531:3542	2414878	2	True				
ANR	2414961	Identifier	true		2414878	0					
ANR	2414962	ReturnType	static bool		2414878	1					
ANR	2414963	Identifier	readFile		2414878	2					
ANR	2414964	ParameterList	"int fd , char const * filename , std :: string * buf"		2414878	3					
ANR	2414965	Parameter	int fd	105:9:3206:3211	2414878	0	True				
ANR	2414966	ParameterType	int		2414878	0					
ANR	2414967	Identifier	fd		2414878	1					
ANR	2414968	Parameter	char const * filename	105:16:3213:3232	2414878	1	True				
ANR	2414969	ParameterType	char const *		2414878	0					
ANR	2414970	Identifier	filename		2414878	1					
ANR	2414971	Parameter	std :: string * buf	105:37:3234:3249	2414878	2	True				
ANR	2414972	ParameterType	std :: string *		2414878	0					
ANR	2414973	Identifier	buf		2414878	1					
ANR	2414974	CFGEntryNode	ENTRY		2414878		True				
ANR	2414975	CFGExitNode	EXIT		2414878		True				
ANR	2414976	Symbol	* buf		2414878						
ANR	2414977	Symbol	errno		2414878						
ANR	2414978	Symbol	read		2414878						
ANR	2414979	Symbol	false		2414878						
ANR	2414980	Symbol	chunk		2414878						
ANR	2414981	Symbol	stderr		2414878						
ANR	2414982	Symbol	n		2414878						
ANR	2414983	Symbol	strerror		2414878						
ANR	2414984	Symbol	buf		2414878						
ANR	2414985	Symbol	filename		2414878						
ANR	2414986	Symbol	* chunk		2414878						
ANR	2414987	Symbol	* n		2414878						
ANR	2414988	Symbol	true		2414878						
ANR	2414989	Symbol	fd		2414878						
ANR	2414990	Function	skip_whitespace	129:0:3640:3789							
ANR	2414991	FunctionDef	"skip_whitespace (std :: string const & s , int & offset)"		2414990	0					
ANR	2414992	CompoundStatement		130:50:3701:3789	2414990	0					
ANR	2414993	WhileStatement	while ( ( int ) s . size ( ) > offset && isspace ( s [ offset ] ) )		2414990	0					
ANR	2414994	Condition	( int ) s . size ( ) > offset && isspace ( s [ offset ] )	131:7:3710:3753	2414990	0	True				
ANR	2414995	AndExpression	( int ) s . size ( ) > offset && isspace ( s [ offset ] )		2414990	0		&&			
ANR	2414996	RelationalExpression	( int ) s . size ( ) > offset		2414990	0		>			
ANR	2414997	CastExpression	( int ) s . size ( )		2414990	0					
ANR	2414998	CastTarget	int		2414990	0					
ANR	2414999	CallExpression	s . size ( )		2414990	1					
ANR	2415000	Callee	s . size		2414990	0					
ANR	2415001	MemberAccess	s . size		2414990	0					
ANR	2415002	Identifier	s		2414990	0					
ANR	2415003	Identifier	size		2414990	1					
ANR	2415004	ArgumentList			2414990	1					
ANR	2415005	Identifier	offset		2414990	1					
ANR	2415006	CallExpression	isspace ( s [ offset ] )		2414990	1					
ANR	2415007	Callee	isspace		2414990	0					
ANR	2415008	Identifier	isspace		2414990	0					
ANR	2415009	ArgumentList	s [ offset ]		2414990	1					
ANR	2415010	Argument	s [ offset ]		2414990	0					
ANR	2415011	ArrayIndexing	s [ offset ]		2414990	0					
ANR	2415012	Identifier	s		2414990	0					
ANR	2415013	Identifier	offset		2414990	1					
ANR	2415014	CompoundStatement		2:53:54:54	2414990	1					
ANR	2415015	ExpressionStatement	offset ++	132:2:3760:3768	2414990	0	True				
ANR	2415016	PostIncDecOperationExpression	offset ++		2414990	0					
ANR	2415017	Identifier	offset		2414990	0					
ANR	2415018	IncDec	++		2414990	1					
ANR	2415019	ReturnStatement	return offset ;	134:1:3774:3787	2414990	1	True				
ANR	2415020	Identifier	offset		2414990	0					
ANR	2415021	ReturnType	static int		2414990	1					
ANR	2415022	Identifier	skip_whitespace		2414990	2					
ANR	2415023	ParameterList	"std :: string const & s , int & offset"		2414990	3					
ANR	2415024	Parameter	std :: string const & s	130:16:3667:3686	2414990	0	True				
ANR	2415025	ParameterType	std :: string const &		2414990	0					
ANR	2415026	Identifier	s		2414990	1					
ANR	2415027	Parameter	int & offset	130:37:3688:3698	2414990	1	True				
ANR	2415028	ParameterType	int &		2414990	0					
ANR	2415029	Identifier	offset		2414990	1					
ANR	2415030	CFGEntryNode	ENTRY		2414990		True				
ANR	2415031	CFGExitNode	EXIT		2414990		True				
ANR	2415032	Symbol	s		2414990						
ANR	2415033	Symbol	offset		2414990						
ANR	2415034	Symbol	s . size		2414990						
ANR	2415035	Symbol	isspace		2414990						
ANR	2415036	Symbol	* offset		2414990						
ANR	2415037	Symbol	* s		2414990						
ANR	2415038	Function	submit_ad	138:0:3833:7818							
ANR	2415039	FunctionDef	"submit_ad (Sock * sock , classad :: ClassAd * currentAd , char * lognotes , bool spool_proxy)"		2415038	0					
ANR	2415040	CompoundStatement		144:0:3929:7818	2415038	0					
ANR	2415041	IfStatement	if ( currentAd == NULL )		2415038	0					
ANR	2415042	Condition	currentAd == NULL	147:8:3980:3996	2415038	0	True				
ANR	2415043	EqualityExpression	currentAd == NULL		2415038	0		==			
ANR	2415044	Identifier	currentAd		2415038	0					
ANR	2415045	Identifier	NULL		2415038	1					
ANR	2415046	CompoundStatement		4:27:69:69	2415038	1					
ANR	2415047	ExpressionStatement	"fprintf ( stderr , ""Invalid input format! Not a valid classad!\\n"" )"	148:6:4007:4070	2415038	0	True				
ANR	2415048	CallExpression	"fprintf ( stderr , ""Invalid input format! Not a valid classad!\\n"" )"		2415038	0					
ANR	2415049	Callee	fprintf		2415038	0					
ANR	2415050	Identifier	fprintf		2415038	0					
ANR	2415051	ArgumentList	stderr		2415038	1					
ANR	2415052	Argument	stderr		2415038	0					
ANR	2415053	Identifier	stderr		2415038	0					
ANR	2415054	Argument	"""Invalid input format! Not a valid classad!\\n"""		2415038	1					
ANR	2415055	PrimaryExpression	"""Invalid input format! Not a valid classad!\\n"""		2415038	0					
ANR	2415056	ReturnStatement	return 1 ;	149:6:4078:4086	2415038	1	True				
ANR	2415057	PrimaryExpression	1		2415038	0					
ANR	2415058	IfStatement	if ( lognotes )		2415038	1					
ANR	2415059	Condition	lognotes	155:8:4240:4247	2415038	0	True				
ANR	2415060	Identifier	lognotes		2415038	0					
ANR	2415061	CompoundStatement		12:17:319:319	2415038	1					
ANR	2415062	IfStatement	"if ( ! currentAd -> InsertAttr ( ""LogNotes"" , lognotes ) )"		2415038	0					
ANR	2415063	Condition	"! currentAd -> InsertAttr ( ""LogNotes"" , lognotes )"	156:12:4263:4307	2415038	0	True				
ANR	2415064	UnaryOperationExpression	"! currentAd -> InsertAttr ( ""LogNotes"" , lognotes )"		2415038	0					
ANR	2415065	UnaryOperator	!		2415038	0					
ANR	2415066	CallExpression	"currentAd -> InsertAttr ( ""LogNotes"" , lognotes )"		2415038	1					
ANR	2415067	Callee	currentAd -> InsertAttr		2415038	0					
ANR	2415068	PtrMemberAccess	currentAd -> InsertAttr		2415038	0					
ANR	2415069	Identifier	currentAd		2415038	0					
ANR	2415070	Identifier	InsertAttr		2415038	1					
ANR	2415071	ArgumentList	"""LogNotes"""		2415038	1					
ANR	2415072	Argument	"""LogNotes"""		2415038	0					
ANR	2415073	PrimaryExpression	"""LogNotes"""		2415038	0					
ANR	2415074	Argument	lognotes		2415038	1					
ANR	2415075	Identifier	lognotes		2415038	0					
ANR	2415076	CompoundStatement		13:60:381:381	2415038	1					
ANR	2415077	ExpressionStatement	"fprintf ( stderr , ""error inserting lognotes '%s' into job ad\\n"" , lognotes )"	157:12:4325:4417	2415038	0	True				
ANR	2415078	CallExpression	"fprintf ( stderr , ""error inserting lognotes '%s' into job ad\\n"" , lognotes )"		2415038	0					
ANR	2415079	Callee	fprintf		2415038	0					
ANR	2415080	Identifier	fprintf		2415038	0					
ANR	2415081	ArgumentList	stderr		2415038	1					
ANR	2415082	Argument	stderr		2415038	0					
ANR	2415083	Identifier	stderr		2415038	0					
ANR	2415084	Argument	"""error inserting lognotes '%s' into job ad\\n"""		2415038	1					
ANR	2415085	PrimaryExpression	"""error inserting lognotes '%s' into job ad\\n"""		2415038	0					
ANR	2415086	Argument	lognotes		2415038	2					
ANR	2415087	Identifier	lognotes		2415038	0					
ANR	2415088	IfStatement	if ( ! check_dap_format ( currentAd ) )		2415038	2					
ANR	2415089	Condition	! check_dap_format ( currentAd )	163:9:4490:4517	2415038	0	True				
ANR	2415090	UnaryOperationExpression	! check_dap_format ( currentAd )		2415038	0					
ANR	2415091	UnaryOperator	!		2415038	0					
ANR	2415092	CallExpression	check_dap_format ( currentAd )		2415038	1					
ANR	2415093	Callee	check_dap_format		2415038	0					
ANR	2415094	Identifier	check_dap_format		2415038	0					
ANR	2415095	ArgumentList	currentAd		2415038	1					
ANR	2415096	Argument	currentAd		2415038	0					
ANR	2415097	Identifier	currentAd		2415038	0					
ANR	2415098	CompoundStatement		20:38:589:589	2415038	1					
ANR	2415099	ExpressionStatement	"fprintf ( stderr , ""========================\\n"" )"	164:6:4527:4572	2415038	0	True				
ANR	2415100	CallExpression	"fprintf ( stderr , ""========================\\n"" )"		2415038	0					
ANR	2415101	Callee	fprintf		2415038	0					
ANR	2415102	Identifier	fprintf		2415038	0					
ANR	2415103	ArgumentList	stderr		2415038	1					
ANR	2415104	Argument	stderr		2415038	0					
ANR	2415105	Identifier	stderr		2415038	0					
ANR	2415106	Argument	"""========================\\n"""		2415038	1					
ANR	2415107	PrimaryExpression	"""========================\\n"""		2415038	0					
ANR	2415108	ExpressionStatement	"fprintf ( stderr , ""Not a valid DaP request!\\nPlease check your submit file and then resubmit...\\n"" )"	165:6:4580:4677	2415038	1	True				
ANR	2415109	CallExpression	"fprintf ( stderr , ""Not a valid DaP request!\\nPlease check your submit file and then resubmit...\\n"" )"		2415038	0					
ANR	2415110	Callee	fprintf		2415038	0					
ANR	2415111	Identifier	fprintf		2415038	0					
ANR	2415112	ArgumentList	stderr		2415038	1					
ANR	2415113	Argument	stderr		2415038	0					
ANR	2415114	Identifier	stderr		2415038	0					
ANR	2415115	Argument	"""Not a valid DaP request!\\nPlease check your submit file and then resubmit...\\n"""		2415038	1					
ANR	2415116	PrimaryExpression	"""Not a valid DaP request!\\nPlease check your submit file and then resubmit...\\n"""		2415038	0					
ANR	2415117	ExpressionStatement	"fprintf ( stderr , ""========================\\n"" )"	166:6:4685:4730	2415038	2	True				
ANR	2415118	CallExpression	"fprintf ( stderr , ""========================\\n"" )"		2415038	0					
ANR	2415119	Callee	fprintf		2415038	0					
ANR	2415120	Identifier	fprintf		2415038	0					
ANR	2415121	ArgumentList	stderr		2415038	1					
ANR	2415122	Argument	stderr		2415038	0					
ANR	2415123	Identifier	stderr		2415038	0					
ANR	2415124	Argument	"""========================\\n"""		2415038	1					
ANR	2415125	PrimaryExpression	"""========================\\n"""		2415038	0					
ANR	2415126	ReturnStatement	return 1 ;	167:6:4738:4746	2415038	3	True				
ANR	2415127	PrimaryExpression	1		2415038	0					
ANR	2415128	IdentifierDeclStatement	bool this_job_spool_proxy = spool_proxy ;	170:1:4756:4795	2415038	3	True				
ANR	2415129	IdentifierDecl	this_job_spool_proxy = spool_proxy		2415038	0					
ANR	2415130	IdentifierDeclType	bool		2415038	0					
ANR	2415131	Identifier	this_job_spool_proxy		2415038	1					
ANR	2415132	AssignmentExpression	this_job_spool_proxy = spool_proxy		2415038	2		=			
ANR	2415133	Identifier	spool_proxy		2415038	0					
ANR	2415134	Identifier	spool_proxy		2415038	1					
ANR	2415135	IfStatement	"if ( ! currentAd -> EvaluateAttrBool ( ""spool_proxy"" , this_job_spool_proxy ) )"		2415038	4					
ANR	2415136	Condition	"! currentAd -> EvaluateAttrBool ( ""spool_proxy"" , this_job_spool_proxy )"	171:5:4802:4865	2415038	0	True				
ANR	2415137	UnaryOperationExpression	"! currentAd -> EvaluateAttrBool ( ""spool_proxy"" , this_job_spool_proxy )"		2415038	0					
ANR	2415138	UnaryOperator	!		2415038	0					
ANR	2415139	CallExpression	"currentAd -> EvaluateAttrBool ( ""spool_proxy"" , this_job_spool_proxy )"		2415038	1					
ANR	2415140	Callee	currentAd -> EvaluateAttrBool		2415038	0					
ANR	2415141	PtrMemberAccess	currentAd -> EvaluateAttrBool		2415038	0					
ANR	2415142	Identifier	currentAd		2415038	0					
ANR	2415143	Identifier	EvaluateAttrBool		2415038	1					
ANR	2415144	ArgumentList	"""spool_proxy"""		2415038	1					
ANR	2415145	Argument	"""spool_proxy"""		2415038	0					
ANR	2415146	PrimaryExpression	"""spool_proxy"""		2415038	0					
ANR	2415147	Argument	this_job_spool_proxy		2415038	1					
ANR	2415148	Identifier	this_job_spool_proxy		2415038	0					
ANR	2415149	CompoundStatement		28:72:939:939	2415038	1					
ANR	2415150	ExpressionStatement	this_job_spool_proxy = spool_proxy	172:2:4873:4907	2415038	0	True				
ANR	2415151	AssignmentExpression	this_job_spool_proxy = spool_proxy		2415038	0		=			
ANR	2415152	Identifier	this_job_spool_proxy		2415038	0					
ANR	2415153	Identifier	spool_proxy		2415038	1					
ANR	2415154	IdentifierDeclStatement	std :: string proxy_file_name ;	175:4:4917:4944	2415038	5	True				
ANR	2415155	IdentifierDecl	proxy_file_name		2415038	0					
ANR	2415156	IdentifierDeclType	std :: string		2415038	0					
ANR	2415157	Identifier	proxy_file_name		2415038	1					
ANR	2415158	IdentifierDeclStatement	char * proxy = NULL ;	176:4:4950:4969	2415038	6	True				
ANR	2415159	IdentifierDecl	* proxy = NULL		2415038	0					
ANR	2415160	IdentifierDeclType	char *		2415038	0					
ANR	2415161	Identifier	proxy		2415038	1					
ANR	2415162	AssignmentExpression	* proxy = NULL		2415038	2		=			
ANR	2415163	Identifier	NULL		2415038	0					
ANR	2415164	Identifier	NULL		2415038	1					
ANR	2415165	IdentifierDeclStatement	int proxy_size = 0 ;	177:4:4975:4993	2415038	7	True				
ANR	2415166	IdentifierDecl	proxy_size = 0		2415038	0					
ANR	2415167	IdentifierDeclType	int		2415038	0					
ANR	2415168	Identifier	proxy_size		2415038	1					
ANR	2415169	AssignmentExpression	proxy_size = 0		2415038	2		=			
ANR	2415170	Identifier	proxy_size		2415038	0					
ANR	2415171	PrimaryExpression	0		2415038	1					
ANR	2415172	IfStatement	"if ( currentAd -> EvaluateAttrString ( ""x509proxy"" , proxy_file_name ) )"		2415038	8					
ANR	2415173	Condition	"currentAd -> EvaluateAttrString ( ""x509proxy"" , proxy_file_name )"	178:8:5003:5062	2415038	0	True				
ANR	2415174	CallExpression	"currentAd -> EvaluateAttrString ( ""x509proxy"" , proxy_file_name )"		2415038	0					
ANR	2415175	Callee	currentAd -> EvaluateAttrString		2415038	0					
ANR	2415176	PtrMemberAccess	currentAd -> EvaluateAttrString		2415038	0					
ANR	2415177	Identifier	currentAd		2415038	0					
ANR	2415178	Identifier	EvaluateAttrString		2415038	1					
ANR	2415179	ArgumentList	"""x509proxy"""		2415038	1					
ANR	2415180	Argument	"""x509proxy"""		2415038	0					
ANR	2415181	PrimaryExpression	"""x509proxy"""		2415038	0					
ANR	2415182	Argument	proxy_file_name		2415038	1					
ANR	2415183	Identifier	proxy_file_name		2415038	0					
ANR	2415184	CompoundStatement		35:70:1135:1135	2415038	1					
ANR	2415185	IfStatement	"if ( proxy_file_name == ""default"" )"		2415038	0					
ANR	2415186	Condition	"proxy_file_name == ""default"""	180:13:5081:5108	2415038	0	True				
ANR	2415187	EqualityExpression	"proxy_file_name == ""default"""		2415038	0		==			
ANR	2415188	Identifier	proxy_file_name		2415038	0					
ANR	2415189	PrimaryExpression	"""default"""		2415038	1					
ANR	2415190	CompoundStatement		38:12:1196:1238	2415038	1					
ANR	2415191	IdentifierDeclStatement	char * defproxy = get_x509_proxy_filename ( ) ;	181:12:5126:5168	2415038	0	True				
ANR	2415192	IdentifierDecl	* defproxy = get_x509_proxy_filename ( )		2415038	0					
ANR	2415193	IdentifierDeclType	char *		2415038	0					
ANR	2415194	Identifier	defproxy		2415038	1					
ANR	2415195	AssignmentExpression	* defproxy = get_x509_proxy_filename ( )		2415038	2		=			
ANR	2415196	Identifier	defproxy		2415038	0					
ANR	2415197	CallExpression	get_x509_proxy_filename ( )		2415038	1					
ANR	2415198	Callee	get_x509_proxy_filename		2415038	0					
ANR	2415199	Identifier	get_x509_proxy_filename		2415038	0					
ANR	2415200	ArgumentList			2415038	1					
ANR	2415201	IfStatement	if ( defproxy )		2415038	1					
ANR	2415202	Condition	defproxy	182:16:5186:5193	2415038	0	True				
ANR	2415203	Identifier	defproxy		2415038	0					
ANR	2415204	CompoundStatement		39:26:1266:1266	2415038	1					
ANR	2415205	ExpressionStatement	"printf ( ""using default proxy: %s\\n"" , defproxy )"	183:16:5214:5259	2415038	0	True				
ANR	2415206	CallExpression	"printf ( ""using default proxy: %s\\n"" , defproxy )"		2415038	0					
ANR	2415207	Callee	printf		2415038	0					
ANR	2415208	Identifier	printf		2415038	0					
ANR	2415209	ArgumentList	"""using default proxy: %s\\n"""		2415038	1					
ANR	2415210	Argument	"""using default proxy: %s\\n"""		2415038	0					
ANR	2415211	PrimaryExpression	"""using default proxy: %s\\n"""		2415038	0					
ANR	2415212	Argument	defproxy		2415038	1					
ANR	2415213	Identifier	defproxy		2415038	0					
ANR	2415214	ExpressionStatement	proxy_file_name = defproxy	184:16:5277:5303	2415038	1	True				
ANR	2415215	AssignmentExpression	proxy_file_name = defproxy		2415038	0		=			
ANR	2415216	Identifier	proxy_file_name		2415038	0					
ANR	2415217	Identifier	defproxy		2415038	1					
ANR	2415218	ExpressionStatement	"currentAd -> InsertAttr ( ""x509proxy"" , proxy_file_name )"	185:4:5309:5360	2415038	2	True				
ANR	2415219	CallExpression	"currentAd -> InsertAttr ( ""x509proxy"" , proxy_file_name )"		2415038	0					
ANR	2415220	Callee	currentAd -> InsertAttr		2415038	0					
ANR	2415221	PtrMemberAccess	currentAd -> InsertAttr		2415038	0					
ANR	2415222	Identifier	currentAd		2415038	0					
ANR	2415223	Identifier	InsertAttr		2415038	1					
ANR	2415224	ArgumentList	"""x509proxy"""		2415038	1					
ANR	2415225	Argument	"""x509proxy"""		2415038	0					
ANR	2415226	PrimaryExpression	"""x509proxy"""		2415038	0					
ANR	2415227	Argument	proxy_file_name		2415038	1					
ANR	2415228	Identifier	proxy_file_name		2415038	0					
ANR	2415229	ExpressionStatement	free ( defproxy )	186:16:5378:5392	2415038	3	True				
ANR	2415230	CallExpression	free ( defproxy )		2415038	0					
ANR	2415231	Callee	free		2415038	0					
ANR	2415232	Identifier	free		2415038	0					
ANR	2415233	ArgumentList	defproxy		2415038	1					
ANR	2415234	Argument	defproxy		2415038	0					
ANR	2415235	Identifier	defproxy		2415038	0					
ANR	2415236	ElseStatement	else		2415038	0					
ANR	2415237	CompoundStatement		44:19:1483:1483	2415038	0					
ANR	2415238	ExpressionStatement	"fprintf ( stderr , ""ERROR: %s\\n"" , x509_error_string ( ) )"	188:16:5431:5483	2415038	0	True				
ANR	2415239	CallExpression	"fprintf ( stderr , ""ERROR: %s\\n"" , x509_error_string ( ) )"		2415038	0					
ANR	2415240	Callee	fprintf		2415038	0					
ANR	2415241	Identifier	fprintf		2415038	0					
ANR	2415242	ArgumentList	stderr		2415038	1					
ANR	2415243	Argument	stderr		2415038	0					
ANR	2415244	Identifier	stderr		2415038	0					
ANR	2415245	Argument	"""ERROR: %s\\n"""		2415038	1					
ANR	2415246	PrimaryExpression	"""ERROR: %s\\n"""		2415038	0					
ANR	2415247	Argument	x509_error_string ( )		2415038	2					
ANR	2415248	CallExpression	x509_error_string ( )		2415038	0					
ANR	2415249	Callee	x509_error_string		2415038	0					
ANR	2415250	Identifier	x509_error_string		2415038	0					
ANR	2415251	ArgumentList			2415038	1					
ANR	2415252	ReturnStatement	return 1 ;	189:16:5501:5509	2415038	1	True				
ANR	2415253	PrimaryExpression	1		2415038	0					
ANR	2415254	IfStatement	if ( this_job_spool_proxy )		2415038	1					
ANR	2415255	Condition	this_job_spool_proxy	193:6:5542:5561	2415038	0	True				
ANR	2415256	Identifier	this_job_spool_proxy		2415038	0					
ANR	2415257	CompoundStatement		83:3:2581:2629	2415038	1					
ANR	2415258	IdentifierDeclStatement	struct stat stat_buff ;	195:3:5571:5592	2415038	0	True				
ANR	2415259	IdentifierDecl	stat_buff		2415038	0					
ANR	2415260	IdentifierDeclType	struct stat		2415038	0					
ANR	2415261	Identifier	stat_buff		2415038	1					
ANR	2415262	IfStatement	"if ( stat ( proxy_file_name . c_str ( ) , & stat_buff ) == 0 )"		2415038	1					
ANR	2415263	Condition	"stat ( proxy_file_name . c_str ( ) , & stat_buff ) == 0"	196:7:5601:5647	2415038	0	True				
ANR	2415264	EqualityExpression	"stat ( proxy_file_name . c_str ( ) , & stat_buff ) == 0"		2415038	0		==			
ANR	2415265	CallExpression	"stat ( proxy_file_name . c_str ( ) , & stat_buff )"		2415038	0					
ANR	2415266	Callee	stat		2415038	0					
ANR	2415267	Identifier	stat		2415038	0					
ANR	2415268	ArgumentList	proxy_file_name . c_str ( )		2415038	1					
ANR	2415269	Argument	proxy_file_name . c_str ( )		2415038	0					
ANR	2415270	CallExpression	proxy_file_name . c_str ( )		2415038	0					
ANR	2415271	Callee	proxy_file_name . c_str		2415038	0					
ANR	2415272	MemberAccess	proxy_file_name . c_str		2415038	0					
ANR	2415273	Identifier	proxy_file_name		2415038	0					
ANR	2415274	Identifier	c_str		2415038	1					
ANR	2415275	ArgumentList			2415038	1					
ANR	2415276	Argument	& stat_buff		2415038	1					
ANR	2415277	UnaryOperationExpression	& stat_buff		2415038	0					
ANR	2415278	UnaryOperator	&		2415038	0					
ANR	2415279	Identifier	stat_buff		2415038	1					
ANR	2415280	PrimaryExpression	0		2415038	1					
ANR	2415281	CompoundStatement		53:56:1720:1720	2415038	1					
ANR	2415282	ExpressionStatement	proxy_size = stat_buff . st_size	197:4:5656:5686	2415038	0	True				
ANR	2415283	AssignmentExpression	proxy_size = stat_buff . st_size		2415038	0		=			
ANR	2415284	Identifier	proxy_size		2415038	0					
ANR	2415285	MemberAccess	stat_buff . st_size		2415038	1					
ANR	2415286	Identifier	stat_buff		2415038	0					
ANR	2415287	Identifier	st_size		2415038	1					
ANR	2415288	ElseStatement	else		2415038	0					
ANR	2415289	CompoundStatement		55:10:1768:1768	2415038	0					
ANR	2415290	ExpressionStatement	"fprintf ( stderr , ""ERROR: proxy %s: %s\\n"" , proxy_file_name . c_str ( ) , strerror ( errno ) )"	199:16:5716:5847	2415038	0	True				
ANR	2415291	CallExpression	"fprintf ( stderr , ""ERROR: proxy %s: %s\\n"" , proxy_file_name . c_str ( ) , strerror ( errno ) )"		2415038	0					
ANR	2415292	Callee	fprintf		2415038	0					
ANR	2415293	Identifier	fprintf		2415038	0					
ANR	2415294	ArgumentList	stderr		2415038	1					
ANR	2415295	Argument	stderr		2415038	0					
ANR	2415296	Identifier	stderr		2415038	0					
ANR	2415297	Argument	"""ERROR: proxy %s: %s\\n"""		2415038	1					
ANR	2415298	PrimaryExpression	"""ERROR: proxy %s: %s\\n"""		2415038	0					
ANR	2415299	Argument	proxy_file_name . c_str ( )		2415038	2					
ANR	2415300	CallExpression	proxy_file_name . c_str ( )		2415038	0					
ANR	2415301	Callee	proxy_file_name . c_str		2415038	0					
ANR	2415302	MemberAccess	proxy_file_name . c_str		2415038	0					
ANR	2415303	Identifier	proxy_file_name		2415038	0					
ANR	2415304	Identifier	c_str		2415038	1					
ANR	2415305	ArgumentList			2415038	1					
ANR	2415306	Argument	strerror ( errno )		2415038	3					
ANR	2415307	CallExpression	strerror ( errno )		2415038	0					
ANR	2415308	Callee	strerror		2415038	0					
ANR	2415309	Identifier	strerror		2415038	0					
ANR	2415310	ArgumentList	errno		2415038	1					
ANR	2415311	Argument	errno		2415038	0					
ANR	2415312	Identifier	errno		2415038	0					
ANR	2415313	ReturnStatement	return 1 ;	202:16:5865:5873	2415038	1	True				
ANR	2415314	PrimaryExpression	1		2415038	0					
ANR	2415315	IfStatement	if ( x509_proxy_try_import ( proxy_file_name . c_str ( ) ) != 0 )		2415038	2					
ANR	2415316	Condition	x509_proxy_try_import ( proxy_file_name . c_str ( ) ) != 0	206:8:5926:5978	2415038	0	True				
ANR	2415317	EqualityExpression	x509_proxy_try_import ( proxy_file_name . c_str ( ) ) != 0		2415038	0		!=			
ANR	2415318	CallExpression	x509_proxy_try_import ( proxy_file_name . c_str ( ) )		2415038	0					
ANR	2415319	Callee	x509_proxy_try_import		2415038	0					
ANR	2415320	Identifier	x509_proxy_try_import		2415038	0					
ANR	2415321	ArgumentList	proxy_file_name . c_str ( )		2415038	1					
ANR	2415322	Argument	proxy_file_name . c_str ( )		2415038	0					
ANR	2415323	CallExpression	proxy_file_name . c_str ( )		2415038	0					
ANR	2415324	Callee	proxy_file_name . c_str		2415038	0					
ANR	2415325	MemberAccess	proxy_file_name . c_str		2415038	0					
ANR	2415326	Identifier	proxy_file_name		2415038	0					
ANR	2415327	Identifier	c_str		2415038	1					
ANR	2415328	ArgumentList			2415038	1					
ANR	2415329	PrimaryExpression	0		2415038	1					
ANR	2415330	CompoundStatement		63:64:2052:2052	2415038	1					
ANR	2415331	ExpressionStatement	"fprintf ( stderr , ""ERROR: check credential %s: %s\\n"" , proxy_file_name . c_str ( ) , x509_error_string ( ) )"	207:4:5988:6098	2415038	0	True				
ANR	2415332	CallExpression	"fprintf ( stderr , ""ERROR: check credential %s: %s\\n"" , proxy_file_name . c_str ( ) , x509_error_string ( ) )"		2415038	0					
ANR	2415333	Callee	fprintf		2415038	0					
ANR	2415334	Identifier	fprintf		2415038	0					
ANR	2415335	ArgumentList	stderr		2415038	1					
ANR	2415336	Argument	stderr		2415038	0					
ANR	2415337	Identifier	stderr		2415038	0					
ANR	2415338	Argument	"""ERROR: check credential %s: %s\\n"""		2415038	1					
ANR	2415339	PrimaryExpression	"""ERROR: check credential %s: %s\\n"""		2415038	0					
ANR	2415340	Argument	proxy_file_name . c_str ( )		2415038	2					
ANR	2415341	CallExpression	proxy_file_name . c_str ( )		2415038	0					
ANR	2415342	Callee	proxy_file_name . c_str		2415038	0					
ANR	2415343	MemberAccess	proxy_file_name . c_str		2415038	0					
ANR	2415344	Identifier	proxy_file_name		2415038	0					
ANR	2415345	Identifier	c_str		2415038	1					
ANR	2415346	ArgumentList			2415038	1					
ANR	2415347	Argument	x509_error_string ( )		2415038	3					
ANR	2415348	CallExpression	x509_error_string ( )		2415038	0					
ANR	2415349	Callee	x509_error_string		2415038	0					
ANR	2415350	Identifier	x509_error_string		2415038	0					
ANR	2415351	ArgumentList			2415038	1					
ANR	2415352	ReturnStatement	return 1 ;	210:4:6104:6112	2415038	1	True				
ANR	2415353	PrimaryExpression	1		2415038	0					
ANR	2415354	IdentifierDeclStatement	int remaining = x509_proxy_seconds_until_expire ( proxy_file_name . c_str ( ) ) ;	212:3:6122:6200	2415038	3	True				
ANR	2415355	IdentifierDecl	remaining = x509_proxy_seconds_until_expire ( proxy_file_name . c_str ( ) )		2415038	0					
ANR	2415356	IdentifierDeclType	int		2415038	0					
ANR	2415357	Identifier	remaining		2415038	1					
ANR	2415358	AssignmentExpression	remaining = x509_proxy_seconds_until_expire ( proxy_file_name . c_str ( ) )		2415038	2		=			
ANR	2415359	Identifier	remaining		2415038	0					
ANR	2415360	CallExpression	x509_proxy_seconds_until_expire ( proxy_file_name . c_str ( ) )		2415038	1					
ANR	2415361	Callee	x509_proxy_seconds_until_expire		2415038	0					
ANR	2415362	Identifier	x509_proxy_seconds_until_expire		2415038	0					
ANR	2415363	ArgumentList	proxy_file_name . c_str ( )		2415038	1					
ANR	2415364	Argument	proxy_file_name . c_str ( )		2415038	0					
ANR	2415365	CallExpression	proxy_file_name . c_str ( )		2415038	0					
ANR	2415366	Callee	proxy_file_name . c_str		2415038	0					
ANR	2415367	MemberAccess	proxy_file_name . c_str		2415038	0					
ANR	2415368	Identifier	proxy_file_name		2415038	0					
ANR	2415369	Identifier	c_str		2415038	1					
ANR	2415370	ArgumentList			2415038	1					
ANR	2415371	IfStatement	if ( remaining < 0 )		2415038	4					
ANR	2415372	Condition	remaining < 0	214:7:6209:6221	2415038	0	True				
ANR	2415373	RelationalExpression	remaining < 0		2415038	0		<			
ANR	2415374	Identifier	remaining		2415038	0					
ANR	2415375	PrimaryExpression	0		2415038	1					
ANR	2415376	CompoundStatement		71:22:2294:2294	2415038	1					
ANR	2415377	ExpressionStatement	"fprintf ( stderr , ""ERROR: check credential %s expiration: %s\\n"" , proxy_file_name . c_str ( ) , x509_error_string ( ) )"	215:4:6230:6351	2415038	0	True				
ANR	2415378	CallExpression	"fprintf ( stderr , ""ERROR: check credential %s expiration: %s\\n"" , proxy_file_name . c_str ( ) , x509_error_string ( ) )"		2415038	0					
ANR	2415379	Callee	fprintf		2415038	0					
ANR	2415380	Identifier	fprintf		2415038	0					
ANR	2415381	ArgumentList	stderr		2415038	1					
ANR	2415382	Argument	stderr		2415038	0					
ANR	2415383	Identifier	stderr		2415038	0					
ANR	2415384	Argument	"""ERROR: check credential %s expiration: %s\\n"""		2415038	1					
ANR	2415385	PrimaryExpression	"""ERROR: check credential %s expiration: %s\\n"""		2415038	0					
ANR	2415386	Argument	proxy_file_name . c_str ( )		2415038	2					
ANR	2415387	CallExpression	proxy_file_name . c_str ( )		2415038	0					
ANR	2415388	Callee	proxy_file_name . c_str		2415038	0					
ANR	2415389	MemberAccess	proxy_file_name . c_str		2415038	0					
ANR	2415390	Identifier	proxy_file_name		2415038	0					
ANR	2415391	Identifier	c_str		2415038	1					
ANR	2415392	ArgumentList			2415038	1					
ANR	2415393	Argument	x509_error_string ( )		2415038	3					
ANR	2415394	CallExpression	x509_error_string ( )		2415038	0					
ANR	2415395	Callee	x509_error_string		2415038	0					
ANR	2415396	Identifier	x509_error_string		2415038	0					
ANR	2415397	ArgumentList			2415038	1					
ANR	2415398	ReturnStatement	return 1 ;	218:4:6357:6365	2415038	1	True				
ANR	2415399	PrimaryExpression	1		2415038	0					
ANR	2415400	IfStatement	if ( remaining == 0 )		2415038	5					
ANR	2415401	Condition	remaining == 0	220:7:6379:6392	2415038	0	True				
ANR	2415402	EqualityExpression	remaining == 0		2415038	0		==			
ANR	2415403	Identifier	remaining		2415038	0					
ANR	2415404	PrimaryExpression	0		2415038	1					
ANR	2415405	CompoundStatement		77:23:2465:2465	2415038	1					
ANR	2415406	ExpressionStatement	"fprintf ( stderr , ""ERROR: credential %s has expired\\n"" , proxy_file_name . c_str ( ) )"	221:4:6401:6486	2415038	0	True				
ANR	2415407	CallExpression	"fprintf ( stderr , ""ERROR: credential %s has expired\\n"" , proxy_file_name . c_str ( ) )"		2415038	0					
ANR	2415408	Callee	fprintf		2415038	0					
ANR	2415409	Identifier	fprintf		2415038	0					
ANR	2415410	ArgumentList	stderr		2415038	1					
ANR	2415411	Argument	stderr		2415038	0					
ANR	2415412	Identifier	stderr		2415038	0					
ANR	2415413	Argument	"""ERROR: credential %s has expired\\n"""		2415038	1					
ANR	2415414	PrimaryExpression	"""ERROR: credential %s has expired\\n"""		2415038	0					
ANR	2415415	Argument	proxy_file_name . c_str ( )		2415038	2					
ANR	2415416	CallExpression	proxy_file_name . c_str ( )		2415038	0					
ANR	2415417	Callee	proxy_file_name . c_str		2415038	0					
ANR	2415418	MemberAccess	proxy_file_name . c_str		2415038	0					
ANR	2415419	Identifier	proxy_file_name		2415038	0					
ANR	2415420	Identifier	c_str		2415038	1					
ANR	2415421	ArgumentList			2415038	1					
ANR	2415422	ReturnStatement	return 1 ;	223:4:6492:6500	2415038	1	True				
ANR	2415423	PrimaryExpression	1		2415038	0					
ANR	2415424	IdentifierDeclStatement	"FILE * fp = fopen ( proxy_file_name . c_str ( ) , ""r"" ) ;"	226:3:6511:6559	2415038	6	True				
ANR	2415425	IdentifierDecl	"* fp = fopen ( proxy_file_name . c_str ( ) , ""r"" )"		2415038	0					
ANR	2415426	IdentifierDeclType	FILE *		2415038	0					
ANR	2415427	Identifier	fp		2415038	1					
ANR	2415428	AssignmentExpression	"* fp = fopen ( proxy_file_name . c_str ( ) , ""r"" )"		2415038	2		=			
ANR	2415429	Identifier	fp		2415038	0					
ANR	2415430	CallExpression	"fopen ( proxy_file_name . c_str ( ) , ""r"" )"		2415038	1					
ANR	2415431	Callee	fopen		2415038	0					
ANR	2415432	Identifier	fopen		2415038	0					
ANR	2415433	ArgumentList	proxy_file_name . c_str ( )		2415038	1					
ANR	2415434	Argument	proxy_file_name . c_str ( )		2415038	0					
ANR	2415435	CallExpression	proxy_file_name . c_str ( )		2415038	0					
ANR	2415436	Callee	proxy_file_name . c_str		2415038	0					
ANR	2415437	MemberAccess	proxy_file_name . c_str		2415038	0					
ANR	2415438	Identifier	proxy_file_name		2415038	0					
ANR	2415439	Identifier	c_str		2415038	1					
ANR	2415440	ArgumentList			2415038	1					
ANR	2415441	Argument	"""r"""		2415038	1					
ANR	2415442	PrimaryExpression	"""r"""		2415038	0					
ANR	2415443	IfStatement	if ( fp )		2415038	7					
ANR	2415444	Condition	fp	227:7:6568:6569	2415038	0	True				
ANR	2415445	Identifier	fp		2415038	0					
ANR	2415446	CompoundStatement		84:11:2642:2642	2415038	1					
ANR	2415447	ExpressionStatement	proxy = ( char * ) malloc ( ( proxy_size + 1 ) * sizeof ( char ) )	228:4:6578:6629	2415038	0	True				
ANR	2415448	AssignmentExpression	proxy = ( char * ) malloc ( ( proxy_size + 1 ) * sizeof ( char ) )		2415038	0		=			
ANR	2415449	Identifier	proxy		2415038	0					
ANR	2415450	CastExpression	( char * ) malloc ( ( proxy_size + 1 ) * sizeof ( char ) )		2415038	1					
ANR	2415451	CastTarget	char *		2415038	0					
ANR	2415452	CallExpression	malloc ( ( proxy_size + 1 ) * sizeof ( char ) )		2415038	1					
ANR	2415453	Callee	malloc		2415038	0					
ANR	2415454	Identifier	malloc		2415038	0					
ANR	2415455	ArgumentList	( proxy_size + 1 ) * sizeof ( char )		2415038	1					
ANR	2415456	Argument	( proxy_size + 1 ) * sizeof ( char )		2415038	0					
ANR	2415457	MultiplicativeExpression	( proxy_size + 1 ) * sizeof ( char )		2415038	0		*			
ANR	2415458	AdditiveExpression	proxy_size + 1		2415038	0		+			
ANR	2415459	Identifier	proxy_size		2415038	0					
ANR	2415460	PrimaryExpression	1		2415038	1					
ANR	2415461	SizeofExpression	sizeof ( char )		2415038	1					
ANR	2415462	Sizeof	sizeof		2415038	0					
ANR	2415463	SizeofOperand	char		2415038	1					
ANR	2415464	ExpressionStatement	ASSERT ( proxy )	229:4:6635:6648	2415038	1	True				
ANR	2415465	CallExpression	ASSERT ( proxy )		2415038	0					
ANR	2415466	Callee	ASSERT		2415038	0					
ANR	2415467	Identifier	ASSERT		2415038	0					
ANR	2415468	ArgumentList	proxy		2415038	1					
ANR	2415469	Argument	proxy		2415038	0					
ANR	2415470	Identifier	proxy		2415038	0					
ANR	2415471	IfStatement	"if ( fread ( proxy , proxy_size , 1 , fp ) != 1 )"		2415038	2					
ANR	2415472	Condition	"fread ( proxy , proxy_size , 1 , fp ) != 1"	230:8:6658:6694	2415038	0	True				
ANR	2415473	EqualityExpression	"fread ( proxy , proxy_size , 1 , fp ) != 1"		2415038	0		!=			
ANR	2415474	CallExpression	"fread ( proxy , proxy_size , 1 , fp )"		2415038	0					
ANR	2415475	Callee	fread		2415038	0					
ANR	2415476	Identifier	fread		2415038	0					
ANR	2415477	ArgumentList	proxy		2415038	1					
ANR	2415478	Argument	proxy		2415038	0					
ANR	2415479	Identifier	proxy		2415038	0					
ANR	2415480	Argument	proxy_size		2415038	1					
ANR	2415481	Identifier	proxy_size		2415038	0					
ANR	2415482	Argument	1		2415038	2					
ANR	2415483	PrimaryExpression	1		2415038	0					
ANR	2415484	Argument	fp		2415038	3					
ANR	2415485	Identifier	fp		2415038	0					
ANR	2415486	PrimaryExpression	1		2415038	1					
ANR	2415487	CompoundStatement		87:47:2767:2767	2415038	1					
ANR	2415488	ExpressionStatement	"fprintf ( stderr , ""ERROR: Unable to read proxy %s: %s\\n"" , proxy_file_name . c_str ( ) , strerror ( errno ) )"	231:5:6704:6816	2415038	0	True				
ANR	2415489	CallExpression	"fprintf ( stderr , ""ERROR: Unable to read proxy %s: %s\\n"" , proxy_file_name . c_str ( ) , strerror ( errno ) )"		2415038	0					
ANR	2415490	Callee	fprintf		2415038	0					
ANR	2415491	Identifier	fprintf		2415038	0					
ANR	2415492	ArgumentList	stderr		2415038	1					
ANR	2415493	Argument	stderr		2415038	0					
ANR	2415494	Identifier	stderr		2415038	0					
ANR	2415495	Argument	"""ERROR: Unable to read proxy %s: %s\\n"""		2415038	1					
ANR	2415496	PrimaryExpression	"""ERROR: Unable to read proxy %s: %s\\n"""		2415038	0					
ANR	2415497	Argument	proxy_file_name . c_str ( )		2415038	2					
ANR	2415498	CallExpression	proxy_file_name . c_str ( )		2415038	0					
ANR	2415499	Callee	proxy_file_name . c_str		2415038	0					
ANR	2415500	MemberAccess	proxy_file_name . c_str		2415038	0					
ANR	2415501	Identifier	proxy_file_name		2415038	0					
ANR	2415502	Identifier	c_str		2415038	1					
ANR	2415503	ArgumentList			2415038	1					
ANR	2415504	Argument	strerror ( errno )		2415038	3					
ANR	2415505	CallExpression	strerror ( errno )		2415038	0					
ANR	2415506	Callee	strerror		2415038	0					
ANR	2415507	Identifier	strerror		2415038	0					
ANR	2415508	ArgumentList	errno		2415038	1					
ANR	2415509	Argument	errno		2415038	0					
ANR	2415510	Identifier	errno		2415038	0					
ANR	2415511	IfStatement	if ( proxy )		2415038	1					
ANR	2415512	Condition	proxy	234:9:6827:6831	2415038	0	True				
ANR	2415513	Identifier	proxy		2415038	0					
ANR	2415514	ExpressionStatement	free ( proxy )	234:16:6834:6845	2415038	1	True				
ANR	2415515	CallExpression	free ( proxy )		2415038	0					
ANR	2415516	Callee	free		2415038	0					
ANR	2415517	Identifier	free		2415038	0					
ANR	2415518	ArgumentList	proxy		2415038	1					
ANR	2415519	Argument	proxy		2415038	0					
ANR	2415520	Identifier	proxy		2415038	0					
ANR	2415521	ReturnStatement	return 1 ;	235:5:6852:6860	2415038	2	True				
ANR	2415522	PrimaryExpression	1		2415038	0					
ANR	2415523	ExpressionStatement	fclose ( fp )	237:4:6872:6883	2415038	3	True				
ANR	2415524	CallExpression	fclose ( fp )		2415038	0					
ANR	2415525	Callee	fclose		2415038	0					
ANR	2415526	Identifier	fclose		2415038	0					
ANR	2415527	ArgumentList	fp		2415038	1					
ANR	2415528	Argument	fp		2415038	0					
ANR	2415529	Identifier	fp		2415038	0					
ANR	2415530	ElseStatement	else		2415038	0					
ANR	2415531	CompoundStatement		95:10:2965:2965	2415038	0					
ANR	2415532	ExpressionStatement	"fprintf ( stderr , ""ERROR: Unable to open proxy %s: %s\\n"" , proxy_file_name . c_str ( ) , strerror ( errno ) )"	239:4:6901:7011	2415038	0	True				
ANR	2415533	CallExpression	"fprintf ( stderr , ""ERROR: Unable to open proxy %s: %s\\n"" , proxy_file_name . c_str ( ) , strerror ( errno ) )"		2415038	0					
ANR	2415534	Callee	fprintf		2415038	0					
ANR	2415535	Identifier	fprintf		2415038	0					
ANR	2415536	ArgumentList	stderr		2415038	1					
ANR	2415537	Argument	stderr		2415038	0					
ANR	2415538	Identifier	stderr		2415038	0					
ANR	2415539	Argument	"""ERROR: Unable to open proxy %s: %s\\n"""		2415038	1					
ANR	2415540	PrimaryExpression	"""ERROR: Unable to open proxy %s: %s\\n"""		2415038	0					
ANR	2415541	Argument	proxy_file_name . c_str ( )		2415038	2					
ANR	2415542	CallExpression	proxy_file_name . c_str ( )		2415038	0					
ANR	2415543	Callee	proxy_file_name . c_str		2415038	0					
ANR	2415544	MemberAccess	proxy_file_name . c_str		2415038	0					
ANR	2415545	Identifier	proxy_file_name		2415038	0					
ANR	2415546	Identifier	c_str		2415038	1					
ANR	2415547	ArgumentList			2415038	1					
ANR	2415548	Argument	strerror ( errno )		2415038	3					
ANR	2415549	CallExpression	strerror ( errno )		2415038	0					
ANR	2415550	Callee	strerror		2415038	0					
ANR	2415551	Identifier	strerror		2415038	0					
ANR	2415552	ArgumentList	errno		2415038	1					
ANR	2415553	Argument	errno		2415038	0					
ANR	2415554	Identifier	errno		2415038	0					
ANR	2415555	IfStatement	if ( proxy )		2415038	1					
ANR	2415556	Condition	proxy	242:8:7021:7025	2415038	0	True				
ANR	2415557	Identifier	proxy		2415038	0					
ANR	2415558	ExpressionStatement	free ( proxy )	242:15:7028:7039	2415038	1	True				
ANR	2415559	CallExpression	free ( proxy )		2415038	0					
ANR	2415560	Callee	free		2415038	0					
ANR	2415561	Identifier	free		2415038	0					
ANR	2415562	ArgumentList	proxy		2415038	1					
ANR	2415563	Argument	proxy		2415038	0					
ANR	2415564	Identifier	proxy		2415038	0					
ANR	2415565	ReturnStatement	return 1 ;	243:4:7045:7053	2415038	2	True				
ANR	2415566	PrimaryExpression	1		2415038	0					
ANR	2415567	IdentifierDeclStatement	classad :: PrettyPrint unparser ;	249:4:7123:7152	2415038	9	True				
ANR	2415568	IdentifierDecl	unparser		2415038	0					
ANR	2415569	IdentifierDeclType	classad :: PrettyPrint		2415038	0					
ANR	2415570	Identifier	unparser		2415038	1					
ANR	2415571	IdentifierDeclStatement	"std :: string adbuffer = """" ;"	250:1:7155:7180	2415038	10	True				
ANR	2415572	IdentifierDecl	"adbuffer = """""		2415038	0					
ANR	2415573	IdentifierDeclType	std :: string		2415038	0					
ANR	2415574	Identifier	adbuffer		2415038	1					
ANR	2415575	AssignmentExpression	"adbuffer = """""		2415038	2		=			
ANR	2415576	Identifier	adbuffer		2415038	0					
ANR	2415577	PrimaryExpression	""""""		2415038	1					
ANR	2415578	ExpressionStatement	"unparser . Unparse ( adbuffer , currentAd )"	251:4:7186:7223	2415038	11	True				
ANR	2415579	CallExpression	"unparser . Unparse ( adbuffer , currentAd )"		2415038	0					
ANR	2415580	Callee	unparser . Unparse		2415038	0					
ANR	2415581	MemberAccess	unparser . Unparse		2415038	0					
ANR	2415582	Identifier	unparser		2415038	0					
ANR	2415583	Identifier	Unparse		2415038	1					
ANR	2415584	ArgumentList	adbuffer		2415038	1					
ANR	2415585	Argument	adbuffer		2415038	0					
ANR	2415586	Identifier	adbuffer		2415038	0					
ANR	2415587	Argument	currentAd		2415038	1					
ANR	2415588	Identifier	currentAd		2415038	0					
ANR	2415589	ExpressionStatement	"fprintf ( stdout , ""================\\n"" )"	252:4:7229:7266	2415038	12	True				
ANR	2415590	CallExpression	"fprintf ( stdout , ""================\\n"" )"		2415038	0					
ANR	2415591	Callee	fprintf		2415038	0					
ANR	2415592	Identifier	fprintf		2415038	0					
ANR	2415593	ArgumentList	stdout		2415038	1					
ANR	2415594	Argument	stdout		2415038	0					
ANR	2415595	Identifier	stdout		2415038	0					
ANR	2415596	Argument	"""================\\n"""		2415038	1					
ANR	2415597	PrimaryExpression	"""================\\n"""		2415038	0					
ANR	2415598	ExpressionStatement	"fprintf ( stdout , ""Sending request:"" )"	253:4:7272:7307	2415038	13	True				
ANR	2415599	CallExpression	"fprintf ( stdout , ""Sending request:"" )"		2415038	0					
ANR	2415600	Callee	fprintf		2415038	0					
ANR	2415601	Identifier	fprintf		2415038	0					
ANR	2415602	ArgumentList	stdout		2415038	1					
ANR	2415603	Argument	stdout		2415038	0					
ANR	2415604	Identifier	stdout		2415038	0					
ANR	2415605	Argument	"""Sending request:"""		2415038	1					
ANR	2415606	PrimaryExpression	"""Sending request:"""		2415038	0					
ANR	2415607	ExpressionStatement	"fprintf ( stdout , ""%s\\n"" , adbuffer . c_str ( ) )"	254:4:7313:7354	2415038	14	True				
ANR	2415608	CallExpression	"fprintf ( stdout , ""%s\\n"" , adbuffer . c_str ( ) )"		2415038	0					
ANR	2415609	Callee	fprintf		2415038	0					
ANR	2415610	Identifier	fprintf		2415038	0					
ANR	2415611	ArgumentList	stdout		2415038	1					
ANR	2415612	Argument	stdout		2415038	0					
ANR	2415613	Identifier	stdout		2415038	0					
ANR	2415614	Argument	"""%s\\n"""		2415038	1					
ANR	2415615	PrimaryExpression	"""%s\\n"""		2415038	0					
ANR	2415616	Argument	adbuffer . c_str ( )		2415038	2					
ANR	2415617	CallExpression	adbuffer . c_str ( )		2415038	0					
ANR	2415618	Callee	adbuffer . c_str		2415038	0					
ANR	2415619	MemberAccess	adbuffer . c_str		2415038	0					
ANR	2415620	Identifier	adbuffer		2415038	0					
ANR	2415621	Identifier	c_str		2415038	1					
ANR	2415622	ArgumentList			2415038	1					
ANR	2415623	IdentifierDeclStatement	char * submit_error_reason = NULL ;	257:1:7359:7391	2415038	15	True				
ANR	2415624	IdentifierDecl	* submit_error_reason = NULL		2415038	0					
ANR	2415625	IdentifierDeclType	char *		2415038	0					
ANR	2415626	Identifier	submit_error_reason		2415038	1					
ANR	2415627	AssignmentExpression	* submit_error_reason = NULL		2415038	2		=			
ANR	2415628	Identifier	NULL		2415038	0					
ANR	2415629	Identifier	NULL		2415038	1					
ANR	2415630	IdentifierDeclStatement	char * job_id = NULL ;	258:1:7394:7414	2415038	16	True				
ANR	2415631	IdentifierDecl	* job_id = NULL		2415038	0					
ANR	2415632	IdentifierDeclType	char *		2415038	0					
ANR	2415633	Identifier	job_id		2415038	1					
ANR	2415634	AssignmentExpression	* job_id = NULL		2415038	2		=			
ANR	2415635	Identifier	NULL		2415038	0					
ANR	2415636	Identifier	NULL		2415038	1					
ANR	2415637	IdentifierDeclStatement	"int rc = stork_submit ( sock , currentAd , global_opts . server , proxy , proxy_size , job_id , submit_error_reason ) ;"	259:1:7417:7567	2415038	17	True				
ANR	2415638	IdentifierDecl	"rc = stork_submit ( sock , currentAd , global_opts . server , proxy , proxy_size , job_id , submit_error_reason )"		2415038	0					
ANR	2415639	IdentifierDeclType	int		2415038	0					
ANR	2415640	Identifier	rc		2415038	1					
ANR	2415641	AssignmentExpression	"rc = stork_submit ( sock , currentAd , global_opts . server , proxy , proxy_size , job_id , submit_error_reason )"		2415038	2		=			
ANR	2415642	Identifier	rc		2415038	0					
ANR	2415643	CallExpression	"stork_submit ( sock , currentAd , global_opts . server , proxy , proxy_size , job_id , submit_error_reason )"		2415038	1					
ANR	2415644	Callee	stork_submit		2415038	0					
ANR	2415645	Identifier	stork_submit		2415038	0					
ANR	2415646	ArgumentList	sock		2415038	1					
ANR	2415647	Argument	sock		2415038	0					
ANR	2415648	Identifier	sock		2415038	0					
ANR	2415649	Argument	currentAd		2415038	1					
ANR	2415650	Identifier	currentAd		2415038	0					
ANR	2415651	Argument	global_opts . server		2415038	2					
ANR	2415652	MemberAccess	global_opts . server		2415038	0					
ANR	2415653	Identifier	global_opts		2415038	0					
ANR	2415654	Identifier	server		2415038	1					
ANR	2415655	Argument	proxy		2415038	3					
ANR	2415656	Identifier	proxy		2415038	0					
ANR	2415657	Argument	proxy_size		2415038	4					
ANR	2415658	Identifier	proxy_size		2415038	0					
ANR	2415659	Argument	job_id		2415038	5					
ANR	2415660	Identifier	job_id		2415038	0					
ANR	2415661	Argument	submit_error_reason		2415038	6					
ANR	2415662	Identifier	submit_error_reason		2415038	0					
ANR	2415663	ExpressionStatement	"fprintf ( stdout , ""================\\n"" )"	266:4:7573:7610	2415038	18	True				
ANR	2415664	CallExpression	"fprintf ( stdout , ""================\\n"" )"		2415038	0					
ANR	2415665	Callee	fprintf		2415038	0					
ANR	2415666	Identifier	fprintf		2415038	0					
ANR	2415667	ArgumentList	stdout		2415038	1					
ANR	2415668	Argument	stdout		2415038	0					
ANR	2415669	Identifier	stdout		2415038	0					
ANR	2415670	Argument	"""================\\n"""		2415038	1					
ANR	2415671	PrimaryExpression	"""================\\n"""		2415038	0					
ANR	2415672	IfStatement	if ( rc )		2415038	19					
ANR	2415673	Condition	rc	268:5:7618:7619	2415038	0	True				
ANR	2415674	Identifier	rc		2415038	0					
ANR	2415675	CompoundStatement		125:9:3692:3692	2415038	1					
ANR	2415676	ExpressionStatement	"fprintf ( stdout , ""\\nRequest assigned id: %s\\n"" , job_id )"	269:3:7627:7682	2415038	0	True				
ANR	2415677	CallExpression	"fprintf ( stdout , ""\\nRequest assigned id: %s\\n"" , job_id )"		2415038	0					
ANR	2415678	Callee	fprintf		2415038	0					
ANR	2415679	Identifier	fprintf		2415038	0					
ANR	2415680	ArgumentList	stdout		2415038	1					
ANR	2415681	Argument	stdout		2415038	0					
ANR	2415682	Identifier	stdout		2415038	0					
ANR	2415683	Argument	"""\\nRequest assigned id: %s\\n"""		2415038	1					
ANR	2415684	PrimaryExpression	"""\\nRequest assigned id: %s\\n"""		2415038	0					
ANR	2415685	Argument	job_id		2415038	2					
ANR	2415686	Identifier	job_id		2415038	0					
ANR	2415687	ElseStatement	else		2415038	0					
ANR	2415688	CompoundStatement		127:8:3763:3763	2415038	0					
ANR	2415689	ExpressionStatement	"fprintf ( stderr , ""\\nERROR submitting request (%s)!\\n"" , submit_error_reason )"	271:2:7697:7776	2415038	0	True				
ANR	2415690	CallExpression	"fprintf ( stderr , ""\\nERROR submitting request (%s)!\\n"" , submit_error_reason )"		2415038	0					
ANR	2415691	Callee	fprintf		2415038	0					
ANR	2415692	Identifier	fprintf		2415038	0					
ANR	2415693	ArgumentList	stderr		2415038	1					
ANR	2415694	Argument	stderr		2415038	0					
ANR	2415695	Identifier	stderr		2415038	0					
ANR	2415696	Argument	"""\\nERROR submitting request (%s)!\\n"""		2415038	1					
ANR	2415697	PrimaryExpression	"""\\nERROR submitting request (%s)!\\n"""		2415038	0					
ANR	2415698	Argument	submit_error_reason		2415038	2					
ANR	2415699	Identifier	submit_error_reason		2415038	0					
ANR	2415700	IfStatement	if ( proxy )		2415038	20					
ANR	2415701	Condition	proxy	274:5:7786:7790	2415038	0	True				
ANR	2415702	Identifier	proxy		2415038	0					
ANR	2415703	ExpressionStatement	free ( proxy )	274:12:7793:7804	2415038	1	True				
ANR	2415704	CallExpression	free ( proxy )		2415038	0					
ANR	2415705	Callee	free		2415038	0					
ANR	2415706	Identifier	free		2415038	0					
ANR	2415707	ArgumentList	proxy		2415038	1					
ANR	2415708	Argument	proxy		2415038	0					
ANR	2415709	Identifier	proxy		2415038	0					
ANR	2415710	ReturnStatement	return 0 ;	276:1:7808:7816	2415038	21	True				
ANR	2415711	PrimaryExpression	0		2415038	0					
ANR	2415712	ReturnType	int		2415038	1					
ANR	2415713	Identifier	submit_ad		2415038	2					
ANR	2415714	ParameterList	"Sock * sock , classad :: ClassAd * currentAd , char * lognotes , bool spool_proxy"		2415038	3					
ANR	2415715	Parameter	Sock * sock	140:1:3849:3859	2415038	0	True				
ANR	2415716	ParameterType	Sock *		2415038	0					
ANR	2415717	Identifier	sock		2415038	1					
ANR	2415718	Parameter	classad :: ClassAd * currentAd	141:1:3863:3889	2415038	1	True				
ANR	2415719	ParameterType	classad :: ClassAd *		2415038	0					
ANR	2415720	Identifier	currentAd		2415038	1					
ANR	2415721	Parameter	char * lognotes	142:1:3893:3906	2415038	2	True				
ANR	2415722	ParameterType	char *		2415038	0					
ANR	2415723	Identifier	lognotes		2415038	1					
ANR	2415724	Parameter	bool spool_proxy	143:1:3910:3925	2415038	3	True				
ANR	2415725	ParameterType	bool		2415038	0					
ANR	2415726	Identifier	spool_proxy		2415038	1					
ANR	2415727	CFGEntryNode	ENTRY		2415038		True				
ANR	2415728	CFGExitNode	EXIT		2415038		True				
ANR	2415729	Symbol	stat_buff		2415038						
ANR	2415730	Symbol	stdout		2415038						
ANR	2415731	Symbol	global_opts . server		2415038						
ANR	2415732	Symbol	fp		2415038						
ANR	2415733	Symbol	currentAd -> InsertAttr		2415038						
ANR	2415734	Symbol	currentAd		2415038						
ANR	2415735	Symbol	stat_buff . st_size		2415038						
ANR	2415736	Symbol	currentAd -> EvaluateAttrBool		2415038						
ANR	2415737	Symbol	x509_error_string		2415038						
ANR	2415738	Symbol	x509_proxy_seconds_until_expire		2415038						
ANR	2415739	Symbol	stork_submit		2415038						
ANR	2415740	Symbol	& stat_buff		2415038						
ANR	2415741	Symbol	submit_error_reason		2415038						
ANR	2415742	Symbol	fopen		2415038						
ANR	2415743	Symbol	malloc		2415038						
ANR	2415744	Symbol	stat		2415038						
ANR	2415745	Symbol	errno		2415038						
ANR	2415746	Symbol	NULL		2415038						
ANR	2415747	Symbol	* currentAd		2415038						
ANR	2415748	Symbol	proxy_file_name		2415038						
ANR	2415749	Symbol	lognotes		2415038						
ANR	2415750	Symbol	proxy_size		2415038						
ANR	2415751	Symbol	global_opts		2415038						
ANR	2415752	Symbol	stderr		2415038						
ANR	2415753	Symbol	this_job_spool_proxy		2415038						
ANR	2415754	Symbol	proxy_file_name . c_str		2415038						
ANR	2415755	Symbol	x509_proxy_try_import		2415038						
ANR	2415756	Symbol	remaining		2415038						
ANR	2415757	Symbol	fread		2415038						
ANR	2415758	Symbol	defproxy		2415038						
ANR	2415759	Symbol	strerror		2415038						
ANR	2415760	Symbol	sock		2415038						
ANR	2415761	Symbol	proxy		2415038						
ANR	2415762	Symbol	rc		2415038						
ANR	2415763	Symbol	check_dap_format		2415038						
ANR	2415764	Symbol	job_id		2415038						
ANR	2415765	Symbol	spool_proxy		2415038						
ANR	2415766	Symbol	get_x509_proxy_filename		2415038						
ANR	2415767	Symbol	unparser		2415038						
ANR	2415768	Symbol	adbuffer . c_str		2415038						
ANR	2415769	Symbol	currentAd -> EvaluateAttrString		2415038						
ANR	2415770	Symbol	adbuffer		2415038						
ANR	2415771	Function	main	282:0:8008:11737							
ANR	2415772	FunctionDef	"main (int argc , char * * argv)"		2415771	0					
ANR	2415773	CompoundStatement		283:0:8040:11737	2415771	0					
ANR	2415774	IdentifierDeclStatement	int i ;	284:1:8043:8048	2415771	0	True				
ANR	2415775	IdentifierDecl	i		2415771	0					
ANR	2415776	IdentifierDeclType	int		2415771	0					
ANR	2415777	Identifier	i		2415771	1					
ANR	2415778	IdentifierDeclStatement	"std :: string adstr = """" ;"	285:1:8051:8071	2415771	1	True				
ANR	2415779	IdentifierDecl	"adstr = """""		2415771	0					
ANR	2415780	IdentifierDeclType	std :: string		2415771	0					
ANR	2415781	Identifier	adstr		2415771	1					
ANR	2415782	AssignmentExpression	"adstr = """""		2415771	2		=			
ANR	2415783	Identifier	adstr		2415771	0					
ANR	2415784	PrimaryExpression	""""""		2415771	1					
ANR	2415785	IdentifierDeclStatement	classad :: ClassAdParser parser ;	286:1:8074:8103	2415771	2	True				
ANR	2415786	IdentifierDecl	parser		2415771	0					
ANR	2415787	IdentifierDeclType	classad :: ClassAdParser		2415771	0					
ANR	2415788	Identifier	parser		2415771	1					
ANR	2415789	Statement	if	287:2:8107:8108	2415771	3	True				
ANR	2415790	Statement	0	287:5:8110:8110	2415771	4	True				
ANR	2415791	IdentifierDeclStatement	classad :: ClassAd * currentAd = NULL ;	288:1:8113:8147	2415771	5	True				
ANR	2415792	IdentifierDecl	* currentAd = NULL		2415771	0					
ANR	2415793	IdentifierDeclType	classad :: ClassAd *		2415771	0					
ANR	2415794	Identifier	currentAd		2415771	1					
ANR	2415795	AssignmentExpression	* currentAd = NULL		2415771	2		=			
ANR	2415796	Identifier	NULL		2415771	0					
ANR	2415797	Identifier	NULL		2415771	1					
ANR	2415798	IdentifierDeclStatement	int leftparan = 0 ;	289:1:8150:8167	2415771	6	True				
ANR	2415799	IdentifierDecl	leftparan = 0		2415771	0					
ANR	2415800	IdentifierDeclType	int		2415771	0					
ANR	2415801	Identifier	leftparan		2415771	1					
ANR	2415802	AssignmentExpression	leftparan = 0		2415771	2		=			
ANR	2415803	Identifier	leftparan		2415771	0					
ANR	2415804	PrimaryExpression	0		2415771	1					
ANR	2415805	IdentifierDeclStatement	endif std :: string fname ;	290:2:8171:8195	2415771	7	True				
ANR	2415806	IdentifierDecl	fname		2415771	0					
ANR	2415807	IdentifierDeclType	endif std :: string		2415771	0					
ANR	2415808	Identifier	fname		2415771	1					
ANR	2415809	IdentifierDeclStatement	char * lognotes = NULL ;	292:1:8198:8219	2415771	8	True				
ANR	2415810	IdentifierDecl	* lognotes = NULL		2415771	0					
ANR	2415811	IdentifierDeclType	char *		2415771	0					
ANR	2415812	Identifier	lognotes		2415771	1					
ANR	2415813	AssignmentExpression	* lognotes = NULL		2415771	2		=			
ANR	2415814	Identifier	NULL		2415771	0					
ANR	2415815	Identifier	NULL		2415771	1					
ANR	2415816	IdentifierDeclStatement	int read_from_stdin = 0 ;	293:1:8222:8245	2415771	9	True				
ANR	2415817	IdentifierDecl	read_from_stdin = 0		2415771	0					
ANR	2415818	IdentifierDeclType	int		2415771	0					
ANR	2415819	Identifier	read_from_stdin		2415771	1					
ANR	2415820	AssignmentExpression	read_from_stdin = 0		2415771	2		=			
ANR	2415821	Identifier	read_from_stdin		2415771	0					
ANR	2415822	PrimaryExpression	0		2415771	1					
ANR	2415823	ExpressionStatement	config ( )	295:1:8249:8257	2415771	10	True				
ANR	2415824	CallExpression	config ( )		2415771	0					
ANR	2415825	Callee	config		2415771	0					
ANR	2415826	Identifier	config		2415771	0					
ANR	2415827	ArgumentList			2415771	1					
ANR	2415828	IdentifierDeclStatement	"bool spool_proxy = param_boolean ( ""STORK_SPOOL_PROXY"" , true ) ;"	297:1:8281:8339	2415771	11	True				
ANR	2415829	IdentifierDecl	"spool_proxy = param_boolean ( ""STORK_SPOOL_PROXY"" , true )"		2415771	0					
ANR	2415830	IdentifierDeclType	bool		2415771	0					
ANR	2415831	Identifier	spool_proxy		2415771	1					
ANR	2415832	AssignmentExpression	"spool_proxy = param_boolean ( ""STORK_SPOOL_PROXY"" , true )"		2415771	2		=			
ANR	2415833	Identifier	spool_proxy		2415771	0					
ANR	2415834	CallExpression	"param_boolean ( ""STORK_SPOOL_PROXY"" , true )"		2415771	1					
ANR	2415835	Callee	param_boolean		2415771	0					
ANR	2415836	Identifier	param_boolean		2415771	0					
ANR	2415837	ArgumentList	"""STORK_SPOOL_PROXY"""		2415771	1					
ANR	2415838	Argument	"""STORK_SPOOL_PROXY"""		2415771	0					
ANR	2415839	PrimaryExpression	"""STORK_SPOOL_PROXY"""		2415771	0					
ANR	2415840	Argument	true		2415771	1					
ANR	2415841	Identifier	true		2415771	0					
ANR	2415842	ExpressionStatement	"stork_parse_global_opts ( argc , argv , USAGE , & global_opts , true )"	300:1:8379:8441	2415771	12	True				
ANR	2415843	CallExpression	"stork_parse_global_opts ( argc , argv , USAGE , & global_opts , true )"		2415771	0					
ANR	2415844	Callee	stork_parse_global_opts		2415771	0					
ANR	2415845	Identifier	stork_parse_global_opts		2415771	0					
ANR	2415846	ArgumentList	argc		2415771	1					
ANR	2415847	Argument	argc		2415771	0					
ANR	2415848	Identifier	argc		2415771	0					
ANR	2415849	Argument	argv		2415771	1					
ANR	2415850	Identifier	argv		2415771	0					
ANR	2415851	Argument	USAGE		2415771	2					
ANR	2415852	Identifier	USAGE		2415771	0					
ANR	2415853	Argument	& global_opts		2415771	3					
ANR	2415854	UnaryOperationExpression	& global_opts		2415771	0					
ANR	2415855	UnaryOperator	&		2415771	0					
ANR	2415856	Identifier	global_opts		2415771	1					
ANR	2415857	Argument	true		2415771	4					
ANR	2415858	Identifier	true		2415771	0					
ANR	2415859	ForStatement	for ( i = 1 ; i < argc ; i ++ )		2415771	13					
ANR	2415860	ForInit	i = 1 ;	302:5:8449:8452	2415771	0	True				
ANR	2415861	AssignmentExpression	i = 1		2415771	0		=			
ANR	2415862	Identifier	i		2415771	0					
ANR	2415863	PrimaryExpression	1		2415771	1					
ANR	2415864	Condition	i < argc	302:9:8453:8458	2415771	1	True				
ANR	2415865	RelationalExpression	i < argc		2415771	0		<			
ANR	2415866	Identifier	i		2415771	0					
ANR	2415867	Identifier	argc		2415771	1					
ANR	2415868	PostIncDecOperationExpression	i ++	302:16:8460:8462	2415771	2	True				
ANR	2415869	Identifier	i		2415771	0					
ANR	2415870	IncDec	++		2415771	1					
ANR	2415871	CompoundStatement		21:2:428:447	2415771	3					
ANR	2415872	IdentifierDeclStatement	char * arg = argv [ i ] ;	303:2:8469:8488	2415771	0	True				
ANR	2415873	IdentifierDecl	* arg = argv [ i ]		2415771	0					
ANR	2415874	IdentifierDeclType	char *		2415771	0					
ANR	2415875	Identifier	arg		2415771	1					
ANR	2415876	AssignmentExpression	* arg = argv [ i ]		2415771	2		=			
ANR	2415877	Identifier	arg		2415771	0					
ANR	2415878	ArrayIndexing	argv [ i ]		2415771	1					
ANR	2415879	Identifier	argv		2415771	0					
ANR	2415880	Identifier	i		2415771	1					
ANR	2415881	IfStatement	if ( arg [ 0 ] != '-' )		2415771	1					
ANR	2415882	Condition	arg [ 0 ] != '-'	304:5:8495:8507	2415771	0	True				
ANR	2415883	EqualityExpression	arg [ 0 ] != '-'		2415771	0		!=			
ANR	2415884	ArrayIndexing	arg [ 0 ]		2415771	0					
ANR	2415885	Identifier	arg		2415771	0					
ANR	2415886	PrimaryExpression	0		2415771	1					
ANR	2415887	PrimaryExpression	'-'		2415771	1					
ANR	2415888	CompoundStatement		22:20:469:469	2415771	1					
ANR	2415889	BreakStatement	break ;	305:3:8515:8520	2415771	0	True				
ANR	2415890	ElseStatement	else		2415771	0					
ANR	2415891	IfStatement	"if ( ! strncmp ( arg , OPT_LOGNOTES , strlen ( OPT_LOGNOTES ) ) )"		2415771	0					
ANR	2415892	Condition	"! strncmp ( arg , OPT_LOGNOTES , strlen ( OPT_LOGNOTES ) )"	308:10:8612:8659	2415771	0	True				
ANR	2415893	UnaryOperationExpression	"! strncmp ( arg , OPT_LOGNOTES , strlen ( OPT_LOGNOTES ) )"		2415771	0					
ANR	2415894	UnaryOperator	!		2415771	0					
ANR	2415895	CallExpression	"strncmp ( arg , OPT_LOGNOTES , strlen ( OPT_LOGNOTES ) )"		2415771	1					
ANR	2415896	Callee	strncmp		2415771	0					
ANR	2415897	Identifier	strncmp		2415771	0					
ANR	2415898	ArgumentList	arg		2415771	1					
ANR	2415899	Argument	arg		2415771	0					
ANR	2415900	Identifier	arg		2415771	0					
ANR	2415901	Argument	OPT_LOGNOTES		2415771	1					
ANR	2415902	Identifier	OPT_LOGNOTES		2415771	0					
ANR	2415903	Argument	strlen ( OPT_LOGNOTES )		2415771	2					
ANR	2415904	CallExpression	strlen ( OPT_LOGNOTES )		2415771	0					
ANR	2415905	Callee	strlen		2415771	0					
ANR	2415906	Identifier	strlen		2415771	0					
ANR	2415907	ArgumentList	OPT_LOGNOTES		2415771	1					
ANR	2415908	Argument	OPT_LOGNOTES		2415771	0					
ANR	2415909	Identifier	OPT_LOGNOTES		2415771	0					
ANR	2415910	CompoundStatement		26:61:622:622	2415771	1					
ANR	2415911	IfStatement	if ( i + 1 >= argc )		2415771	0					
ANR	2415912	Condition	i + 1 >= argc	309:6:8671:8681	2415771	0	True				
ANR	2415913	RelationalExpression	i + 1 >= argc		2415771	0		>=			
ANR	2415914	AdditiveExpression	i + 1		2415771	0		+			
ANR	2415915	Identifier	i		2415771	0					
ANR	2415916	PrimaryExpression	1		2415771	1					
ANR	2415917	Identifier	argc		2415771	1					
ANR	2415918	ExpressionStatement	"MissingArgument ( argv [ 0 ] , arg )"	309:19:8684:8712	2415771	1	True				
ANR	2415919	CallExpression	"MissingArgument ( argv [ 0 ] , arg )"		2415771	0					
ANR	2415920	Callee	MissingArgument		2415771	0					
ANR	2415921	Identifier	MissingArgument		2415771	0					
ANR	2415922	ArgumentList	argv [ 0 ]		2415771	1					
ANR	2415923	Argument	argv [ 0 ]		2415771	0					
ANR	2415924	ArrayIndexing	argv [ 0 ]		2415771	0					
ANR	2415925	Identifier	argv		2415771	0					
ANR	2415926	PrimaryExpression	0		2415771	1					
ANR	2415927	Argument	arg		2415771	1					
ANR	2415928	Identifier	arg		2415771	0					
ANR	2415929	ExpressionStatement	lognotes = argv [ ++ i ]	310:3:8717:8737	2415771	1	True				
ANR	2415930	AssignmentExpression	lognotes = argv [ ++ i ]		2415771	0		=			
ANR	2415931	Identifier	lognotes		2415771	0					
ANR	2415932	ArrayIndexing	argv [ ++ i ]		2415771	1					
ANR	2415933	Identifier	argv		2415771	0					
ANR	2415934	UnaryExpression	++ i		2415771	1					
ANR	2415935	IncDec	++		2415771	0					
ANR	2415936	Identifier	i		2415771	1					
ANR	2415937	ElseStatement	else		2415771	0					
ANR	2415938	IfStatement	"if ( ! strncmp ( arg , OPT_STDIN , strlen ( OPT_STDIN ) ) )"		2415771	0					
ANR	2415939	Condition	"! strncmp ( arg , OPT_STDIN , strlen ( OPT_STDIN ) )"	313:10:8786:8827	2415771	0	True				
ANR	2415940	UnaryOperationExpression	"! strncmp ( arg , OPT_STDIN , strlen ( OPT_STDIN ) )"		2415771	0					
ANR	2415941	UnaryOperator	!		2415771	0					
ANR	2415942	CallExpression	"strncmp ( arg , OPT_STDIN , strlen ( OPT_STDIN ) )"		2415771	1					
ANR	2415943	Callee	strncmp		2415771	0					
ANR	2415944	Identifier	strncmp		2415771	0					
ANR	2415945	ArgumentList	arg		2415771	1					
ANR	2415946	Argument	arg		2415771	0					
ANR	2415947	Identifier	arg		2415771	0					
ANR	2415948	Argument	OPT_STDIN		2415771	1					
ANR	2415949	Identifier	OPT_STDIN		2415771	0					
ANR	2415950	Argument	strlen ( OPT_STDIN )		2415771	2					
ANR	2415951	CallExpression	strlen ( OPT_STDIN )		2415771	0					
ANR	2415952	Callee	strlen		2415771	0					
ANR	2415953	Identifier	strlen		2415771	0					
ANR	2415954	ArgumentList	OPT_STDIN		2415771	1					
ANR	2415955	Argument	OPT_STDIN		2415771	0					
ANR	2415956	Identifier	OPT_STDIN		2415771	0					
ANR	2415957	CompoundStatement		31:55:790:790	2415771	1					
ANR	2415958	ExpressionStatement	read_from_stdin = 1	314:3:8836:8855	2415771	0	True				
ANR	2415959	AssignmentExpression	read_from_stdin = 1		2415771	0		=			
ANR	2415960	Identifier	read_from_stdin		2415771	0					
ANR	2415961	PrimaryExpression	1		2415771	1					
ANR	2415962	ElseStatement	else		2415771	0					
ANR	2415963	IfStatement	"if ( ! strcmp ( arg , ""--"" ) )"		2415771	0					
ANR	2415964	Condition	"! strcmp ( arg , ""--"" )"	316:10:8871:8887	2415771	0	True				
ANR	2415965	UnaryOperationExpression	"! strcmp ( arg , ""--"" )"		2415771	0					
ANR	2415966	UnaryOperator	!		2415771	0					
ANR	2415967	CallExpression	"strcmp ( arg , ""--"" )"		2415771	1					
ANR	2415968	Callee	strcmp		2415771	0					
ANR	2415969	Identifier	strcmp		2415771	0					
ANR	2415970	ArgumentList	arg		2415771	1					
ANR	2415971	Argument	arg		2415771	0					
ANR	2415972	Identifier	arg		2415771	0					
ANR	2415973	Argument	"""--"""		2415771	1					
ANR	2415974	PrimaryExpression	"""--"""		2415771	0					
ANR	2415975	CompoundStatement		34:29:849:849	2415771	1					
ANR	2415976	ExpressionStatement	i ++	321:3:9142:9145	2415771	0	True				
ANR	2415977	PostIncDecOperationExpression	i ++		2415771	0					
ANR	2415978	Identifier	i		2415771	0					
ANR	2415979	IncDec	++		2415771	1					
ANR	2415980	BreakStatement	break ;	322:3:9150:9155	2415771	1	True				
ANR	2415981	ElseStatement	else		2415771	0					
ANR	2415982	CompoundStatement		42:7:1127:1127	2415771	0					
ANR	2415983	ExpressionStatement	"IllegalOption ( argv [ 0 ] , arg )"	325:3:9173:9199	2415771	0	True				
ANR	2415984	CallExpression	"IllegalOption ( argv [ 0 ] , arg )"		2415771	0					
ANR	2415985	Callee	IllegalOption		2415771	0					
ANR	2415986	Identifier	IllegalOption		2415771	0					
ANR	2415987	ArgumentList	argv [ 0 ]		2415771	1					
ANR	2415988	Argument	argv [ 0 ]		2415771	0					
ANR	2415989	ArrayIndexing	argv [ 0 ]		2415771	0					
ANR	2415990	Identifier	argv		2415771	0					
ANR	2415991	PrimaryExpression	0		2415771	1					
ANR	2415992	Argument	arg		2415771	1					
ANR	2415993	Identifier	arg		2415771	0					
ANR	2415994	Statement	define	307:1:8564:8569	2415771	2	True				
ANR	2415995	Statement	OPT_LOGNOTES	307:8:8571:8582	2415771	3	True				
ANR	2415996	Statement	"""-l"""	307:21:8584:8587	2415771	4	True				
ANR	2415997	Statement	define	312:1:8744:8749	2415771	5	True				
ANR	2415998	Statement	OPT_STDIN	312:8:8751:8759	2415771	6	True				
ANR	2415999	Statement	"""-s"""	312:18:8761:8764	2415771	7	True				
ANR	2416000	IdentifierDeclStatement	int num_positional_args = argc - i ;	330:1:9211:9245	2415771	14	True				
ANR	2416001	IdentifierDecl	num_positional_args = argc - i		2415771	0					
ANR	2416002	IdentifierDeclType	int		2415771	0					
ANR	2416003	Identifier	num_positional_args		2415771	1					
ANR	2416004	AssignmentExpression	num_positional_args = argc - i		2415771	2		=			
ANR	2416005	Identifier	num_positional_args		2415771	0					
ANR	2416006	AdditiveExpression	argc - i		2415771	1		-			
ANR	2416007	Identifier	argc		2415771	0					
ANR	2416008	Identifier	i		2415771	1					
ANR	2416009	SwitchStatement	switch ( num_positional_args )		2415771	15					
ANR	2416010	Condition	num_positional_args	331:9:9256:9274	2415771	0	True				
ANR	2416011	Identifier	num_positional_args		2415771	0					
ANR	2416012	CompoundStatement		49:30:1236:1236	2415771	1					
ANR	2416013	Label	case 0 :	332:2:9281:9287	2415771	0	True				
ANR	2416014	IfStatement	if ( ! read_from_stdin )		2415771	1					
ANR	2416015	Condition	! read_from_stdin	333:6:9295:9311	2415771	0	True				
ANR	2416016	UnaryOperationExpression	! read_from_stdin		2415771	0					
ANR	2416017	UnaryOperator	!		2415771	0					
ANR	2416018	Identifier	read_from_stdin		2415771	1					
ANR	2416019	CompoundStatement		51:25:1273:1273	2415771	1					
ANR	2416020	ExpressionStatement	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"	334:5:9321:9368	2415771	0	True				
ANR	2416021	CallExpression	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"		2415771	0					
ANR	2416022	Callee	stork_print_usage		2415771	0					
ANR	2416023	Identifier	stork_print_usage		2415771	0					
ANR	2416024	ArgumentList	stderr		2415771	1					
ANR	2416025	Argument	stderr		2415771	0					
ANR	2416026	Identifier	stderr		2415771	0					
ANR	2416027	Argument	argv [ 0 ]		2415771	1					
ANR	2416028	ArrayIndexing	argv [ 0 ]		2415771	0					
ANR	2416029	Identifier	argv		2415771	0					
ANR	2416030	PrimaryExpression	0		2415771	1					
ANR	2416031	Argument	USAGE		2415771	2					
ANR	2416032	Identifier	USAGE		2415771	0					
ANR	2416033	Argument	true		2415771	3					
ANR	2416034	Identifier	true		2415771	0					
ANR	2416035	ExpressionStatement	exit ( 1 )	335:5:9375:9382	2415771	1	True				
ANR	2416036	CallExpression	exit ( 1 )		2415771	0					
ANR	2416037	Callee	exit		2415771	0					
ANR	2416038	Identifier	exit		2415771	0					
ANR	2416039	ArgumentList	1		2415771	1					
ANR	2416040	Argument	1		2415771	0					
ANR	2416041	PrimaryExpression	1		2415771	0					
ANR	2416042	BreakStatement	break ;	337:3:9392:9397	2415771	2	True				
ANR	2416043	Label	case 1 :	338:2:9401:9407	2415771	3	True				
ANR	2416044	IfStatement	if ( read_from_stdin )		2415771	4					
ANR	2416045	Condition	read_from_stdin	339:6:9415:9429	2415771	0	True				
ANR	2416046	Identifier	read_from_stdin		2415771	0					
ANR	2416047	CompoundStatement		57:23:1391:1391	2415771	1					
ANR	2416048	ExpressionStatement	global_opts . server = argv [ i ]	340:4:9438:9466	2415771	0	True				
ANR	2416049	AssignmentExpression	global_opts . server = argv [ i ]		2415771	0		=			
ANR	2416050	MemberAccess	global_opts . server		2415771	0					
ANR	2416051	Identifier	global_opts		2415771	0					
ANR	2416052	Identifier	server		2415771	1					
ANR	2416053	ArrayIndexing	argv [ i ]		2415771	1					
ANR	2416054	Identifier	argv		2415771	0					
ANR	2416055	Identifier	i		2415771	1					
ANR	2416056	ElseStatement	else		2415771	0					
ANR	2416057	CompoundStatement		59:10:1437:1437	2415771	0					
ANR	2416058	ExpressionStatement	fname = argv [ i ]	342:4:9484:9499	2415771	0	True				
ANR	2416059	AssignmentExpression	fname = argv [ i ]		2415771	0		=			
ANR	2416060	Identifier	fname		2415771	0					
ANR	2416061	ArrayIndexing	argv [ i ]		2415771	1					
ANR	2416062	Identifier	argv		2415771	0					
ANR	2416063	Identifier	i		2415771	1					
ANR	2416064	BreakStatement	break ;	344:4:9510:9515	2415771	5	True				
ANR	2416065	Label	case 2 :	345:3:9520:9526	2415771	6	True				
ANR	2416066	ExpressionStatement	global_opts . server = argv [ i ++ ]	346:3:9531:9561	2415771	7	True				
ANR	2416067	AssignmentExpression	global_opts . server = argv [ i ++ ]		2415771	0		=			
ANR	2416068	MemberAccess	global_opts . server		2415771	0					
ANR	2416069	Identifier	global_opts		2415771	0					
ANR	2416070	Identifier	server		2415771	1					
ANR	2416071	ArrayIndexing	argv [ i ++ ]		2415771	1					
ANR	2416072	Identifier	argv		2415771	0					
ANR	2416073	PostIncDecOperationExpression	i ++		2415771	1					
ANR	2416074	Identifier	i		2415771	0					
ANR	2416075	IncDec	++		2415771	1					
ANR	2416076	ExpressionStatement	fname = argv [ i ]	347:3:9566:9581	2415771	8	True				
ANR	2416077	AssignmentExpression	fname = argv [ i ]		2415771	0		=			
ANR	2416078	Identifier	fname		2415771	0					
ANR	2416079	ArrayIndexing	argv [ i ]		2415771	1					
ANR	2416080	Identifier	argv		2415771	0					
ANR	2416081	Identifier	i		2415771	1					
ANR	2416082	BreakStatement	break ;	348:4:9587:9592	2415771	9	True				
ANR	2416083	Label	default :	349:3:9597:9604	2415771	10	True				
ANR	2416084	Identifier	default		2415771	0					
ANR	2416085	ExpressionStatement	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"	350:4:9610:9657	2415771	11	True				
ANR	2416086	CallExpression	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"		2415771	0					
ANR	2416087	Callee	stork_print_usage		2415771	0					
ANR	2416088	Identifier	stork_print_usage		2415771	0					
ANR	2416089	ArgumentList	stderr		2415771	1					
ANR	2416090	Argument	stderr		2415771	0					
ANR	2416091	Identifier	stderr		2415771	0					
ANR	2416092	Argument	argv [ 0 ]		2415771	1					
ANR	2416093	ArrayIndexing	argv [ 0 ]		2415771	0					
ANR	2416094	Identifier	argv		2415771	0					
ANR	2416095	PrimaryExpression	0		2415771	1					
ANR	2416096	Argument	USAGE		2415771	2					
ANR	2416097	Identifier	USAGE		2415771	0					
ANR	2416098	Argument	true		2415771	3					
ANR	2416099	Identifier	true		2415771	0					
ANR	2416100	ExpressionStatement	exit ( 1 )	351:4:9663:9670	2415771	12	True				
ANR	2416101	CallExpression	exit ( 1 )		2415771	0					
ANR	2416102	Callee	exit		2415771	0					
ANR	2416103	Identifier	exit		2415771	0					
ANR	2416104	ArgumentList	1		2415771	1					
ANR	2416105	Argument	1		2415771	0					
ANR	2416106	PrimaryExpression	1		2415771	0					
ANR	2416107	IdentifierDeclStatement	int submit_file_fd = - 1 ;	355:1:9701:9724	2415771	16	True				
ANR	2416108	IdentifierDecl	submit_file_fd = - 1		2415771	0					
ANR	2416109	IdentifierDeclType	int		2415771	0					
ANR	2416110	Identifier	submit_file_fd		2415771	1					
ANR	2416111	AssignmentExpression	submit_file_fd = - 1		2415771	2		=			
ANR	2416112	Identifier	submit_file_fd		2415771	0					
ANR	2416113	UnaryOperationExpression	- 1		2415771	1					
ANR	2416114	UnaryOperator	-		2415771	0					
ANR	2416115	PrimaryExpression	1		2415771	1					
ANR	2416116	IfStatement	if ( read_from_stdin )		2415771	17					
ANR	2416117	Condition	read_from_stdin	356:4:9730:9744	2415771	0	True				
ANR	2416118	Identifier	read_from_stdin		2415771	0					
ANR	2416119	CompoundStatement		74:21:1706:1706	2415771	1					
ANR	2416120	ExpressionStatement	submit_file_fd = 0	357:2:9751:9769	2415771	0	True				
ANR	2416121	AssignmentExpression	submit_file_fd = 0		2415771	0		=			
ANR	2416122	Identifier	submit_file_fd		2415771	0					
ANR	2416123	PrimaryExpression	0		2415771	1					
ANR	2416124	ExpressionStatement	"fname = ""stdin"""	358:2:9773:9788	2415771	1	True				
ANR	2416125	AssignmentExpression	"fname = ""stdin"""		2415771	0		=			
ANR	2416126	Identifier	fname		2415771	0					
ANR	2416127	PrimaryExpression	"""stdin"""		2415771	1					
ANR	2416128	ElseStatement	else		2415771	0					
ANR	2416129	CompoundStatement		78:6:1758:1758	2415771	0					
ANR	2416130	ExpressionStatement	"submit_file_fd = safe_open_wrapper ( fname . c_str ( ) , O_RDONLY , 0 )"	361:2:9803:9867	2415771	0	True				
ANR	2416131	AssignmentExpression	"submit_file_fd = safe_open_wrapper ( fname . c_str ( ) , O_RDONLY , 0 )"		2415771	0		=			
ANR	2416132	Identifier	submit_file_fd		2415771	0					
ANR	2416133	CallExpression	"safe_open_wrapper ( fname . c_str ( ) , O_RDONLY , 0 )"		2415771	1					
ANR	2416134	Callee	safe_open_wrapper		2415771	0					
ANR	2416135	Identifier	safe_open_wrapper		2415771	0					
ANR	2416136	ArgumentList	fname . c_str ( )		2415771	1					
ANR	2416137	Argument	fname . c_str ( )		2415771	0					
ANR	2416138	CallExpression	fname . c_str ( )		2415771	0					
ANR	2416139	Callee	fname . c_str		2415771	0					
ANR	2416140	MemberAccess	fname . c_str		2415771	0					
ANR	2416141	Identifier	fname		2415771	0					
ANR	2416142	Identifier	c_str		2415771	1					
ANR	2416143	ArgumentList			2415771	1					
ANR	2416144	Argument	O_RDONLY		2415771	1					
ANR	2416145	Identifier	O_RDONLY		2415771	0					
ANR	2416146	Argument	0		2415771	2					
ANR	2416147	PrimaryExpression	0		2415771	0					
ANR	2416148	IfStatement	if ( submit_file_fd < 0 )		2415771	1					
ANR	2416149	Condition	submit_file_fd < 0	362:6:9875:9892	2415771	0	True				
ANR	2416150	RelationalExpression	submit_file_fd < 0		2415771	0		<			
ANR	2416151	Identifier	submit_file_fd		2415771	0					
ANR	2416152	PrimaryExpression	0		2415771	1					
ANR	2416153	CompoundStatement		80:27:1855:1855	2415771	1					
ANR	2416154	ExpressionStatement	"fprintf ( stderr , ""Cannot open submit file %s: %s\\n"" , fname . c_str ( ) , strerror ( errno ) )"	363:3:9901:9990	2415771	0	True				
ANR	2416155	CallExpression	"fprintf ( stderr , ""Cannot open submit file %s: %s\\n"" , fname . c_str ( ) , strerror ( errno ) )"		2415771	0					
ANR	2416156	Callee	fprintf		2415771	0					
ANR	2416157	Identifier	fprintf		2415771	0					
ANR	2416158	ArgumentList	stderr		2415771	1					
ANR	2416159	Argument	stderr		2415771	0					
ANR	2416160	Identifier	stderr		2415771	0					
ANR	2416161	Argument	"""Cannot open submit file %s: %s\\n"""		2415771	1					
ANR	2416162	PrimaryExpression	"""Cannot open submit file %s: %s\\n"""		2415771	0					
ANR	2416163	Argument	fname . c_str ( )		2415771	2					
ANR	2416164	CallExpression	fname . c_str ( )		2415771	0					
ANR	2416165	Callee	fname . c_str		2415771	0					
ANR	2416166	MemberAccess	fname . c_str		2415771	0					
ANR	2416167	Identifier	fname		2415771	0					
ANR	2416168	Identifier	c_str		2415771	1					
ANR	2416169	ArgumentList			2415771	1					
ANR	2416170	Argument	strerror ( errno )		2415771	3					
ANR	2416171	CallExpression	strerror ( errno )		2415771	0					
ANR	2416172	Callee	strerror		2415771	0					
ANR	2416173	Identifier	strerror		2415771	0					
ANR	2416174	ArgumentList	errno		2415771	1					
ANR	2416175	Argument	errno		2415771	0					
ANR	2416176	Identifier	errno		2415771	0					
ANR	2416177	ExpressionStatement	exit ( 1 )	365:3:9995:10002	2415771	1	True				
ANR	2416178	CallExpression	exit ( 1 )		2415771	0					
ANR	2416179	Callee	exit		2415771	0					
ANR	2416180	Identifier	exit		2415771	0					
ANR	2416181	ArgumentList	1		2415771	1					
ANR	2416182	Argument	1		2415771	0					
ANR	2416183	PrimaryExpression	1		2415771	0					
ANR	2416184	IdentifierDeclStatement	std :: string adBuf ;	369:1:10013:10030	2415771	18	True				
ANR	2416185	IdentifierDecl	adBuf		2415771	0					
ANR	2416186	IdentifierDeclType	std :: string		2415771	0					
ANR	2416187	Identifier	adBuf		2415771	1					
ANR	2416188	IfStatement	"if ( ! readFile ( submit_file_fd , fname . c_str ( ) , & adBuf ) )"		2415771	19					
ANR	2416189	Condition	"! readFile ( submit_file_fd , fname . c_str ( ) , & adBuf )"	370:4:10036:10083	2415771	0	True				
ANR	2416190	UnaryOperationExpression	"! readFile ( submit_file_fd , fname . c_str ( ) , & adBuf )"		2415771	0					
ANR	2416191	UnaryOperator	!		2415771	0					
ANR	2416192	CallExpression	"readFile ( submit_file_fd , fname . c_str ( ) , & adBuf )"		2415771	1					
ANR	2416193	Callee	readFile		2415771	0					
ANR	2416194	Identifier	readFile		2415771	0					
ANR	2416195	ArgumentList	submit_file_fd		2415771	1					
ANR	2416196	Argument	submit_file_fd		2415771	0					
ANR	2416197	Identifier	submit_file_fd		2415771	0					
ANR	2416198	Argument	fname . c_str ( )		2415771	1					
ANR	2416199	CallExpression	fname . c_str ( )		2415771	0					
ANR	2416200	Callee	fname . c_str		2415771	0					
ANR	2416201	MemberAccess	fname . c_str		2415771	0					
ANR	2416202	Identifier	fname		2415771	0					
ANR	2416203	Identifier	c_str		2415771	1					
ANR	2416204	ArgumentList			2415771	1					
ANR	2416205	Argument	& adBuf		2415771	2					
ANR	2416206	UnaryOperationExpression	& adBuf		2415771	0					
ANR	2416207	UnaryOperator	&		2415771	0					
ANR	2416208	Identifier	adBuf		2415771	1					
ANR	2416209	CompoundStatement		88:54:2045:2045	2415771	1					
ANR	2416210	ReturnStatement	return 1 ;	371:2:10090:10098	2415771	0	True				
ANR	2416211	PrimaryExpression	1		2415771	0					
ANR	2416212	IfStatement	if ( ! read_from_stdin )		2415771	20					
ANR	2416213	Condition	! read_from_stdin	374:4:10108:10123	2415771	0	True				
ANR	2416214	UnaryOperationExpression	! read_from_stdin		2415771	0					
ANR	2416215	UnaryOperator	!		2415771	0					
ANR	2416216	Identifier	read_from_stdin		2415771	1					
ANR	2416217	CompoundStatement		92:22:2085:2085	2415771	1					
ANR	2416218	ExpressionStatement	close ( submit_file_fd )	375:2:10130:10153	2415771	0	True				
ANR	2416219	CallExpression	close ( submit_file_fd )		2415771	0					
ANR	2416220	Callee	close		2415771	0					
ANR	2416221	Identifier	close		2415771	0					
ANR	2416222	ArgumentList	submit_file_fd		2415771	1					
ANR	2416223	Argument	submit_file_fd		2415771	0					
ANR	2416224	Identifier	submit_file_fd		2415771	0					
ANR	2416225	IdentifierDeclStatement	MyString sock_error_reason ;	379:1:10176:10202	2415771	21	True				
ANR	2416226	IdentifierDecl	sock_error_reason		2415771	0					
ANR	2416227	IdentifierDeclType	MyString		2415771	0					
ANR	2416228	Identifier	sock_error_reason		2415771	1					
ANR	2416229	IdentifierDeclStatement	"Sock * sock = start_stork_command_and_authenticate ( global_opts . server , STORK_SUBMIT , sock_error_reason ) ;"	381:1:10206:10317	2415771	22	True				
ANR	2416230	IdentifierDecl	"* sock = start_stork_command_and_authenticate ( global_opts . server , STORK_SUBMIT , sock_error_reason )"		2415771	0					
ANR	2416231	IdentifierDeclType	Sock *		2415771	0					
ANR	2416232	Identifier	sock		2415771	1					
ANR	2416233	AssignmentExpression	"* sock = start_stork_command_and_authenticate ( global_opts . server , STORK_SUBMIT , sock_error_reason )"		2415771	2		=			
ANR	2416234	Identifier	sock		2415771	0					
ANR	2416235	CallExpression	"start_stork_command_and_authenticate ( global_opts . server , STORK_SUBMIT , sock_error_reason )"		2415771	1					
ANR	2416236	Callee	start_stork_command_and_authenticate		2415771	0					
ANR	2416237	Identifier	start_stork_command_and_authenticate		2415771	0					
ANR	2416238	ArgumentList	global_opts . server		2415771	1					
ANR	2416239	Argument	global_opts . server		2415771	0					
ANR	2416240	MemberAccess	global_opts . server		2415771	0					
ANR	2416241	Identifier	global_opts		2415771	0					
ANR	2416242	Identifier	server		2415771	1					
ANR	2416243	Argument	STORK_SUBMIT		2415771	1					
ANR	2416244	Identifier	STORK_SUBMIT		2415771	0					
ANR	2416245	Argument	sock_error_reason		2415771	2					
ANR	2416246	Identifier	sock_error_reason		2415771	0					
ANR	2416247	IdentifierDeclStatement	"const char * host = global_opts . server ? global_opts . server : ""unknown"" ;"	386:1:10321:10391	2415771	23	True				
ANR	2416248	IdentifierDecl	"* host = global_opts . server ? global_opts . server : ""unknown"""		2415771	0					
ANR	2416249	IdentifierDeclType	const char *		2415771	0					
ANR	2416250	Identifier	host		2415771	1					
ANR	2416251	AssignmentExpression	"* host = global_opts . server ? global_opts . server : ""unknown"""		2415771	2		=			
ANR	2416252	Identifier	host		2415771	0					
ANR	2416253	ConditionalExpression	"global_opts . server ? global_opts . server : ""unknown"""		2415771	1					
ANR	2416254	Condition	global_opts . server		2415771	0					
ANR	2416255	MemberAccess	global_opts . server		2415771	0					
ANR	2416256	Identifier	global_opts		2415771	0					
ANR	2416257	Identifier	server		2415771	1					
ANR	2416258	MemberAccess	global_opts . server		2415771	1					
ANR	2416259	Identifier	global_opts		2415771	0					
ANR	2416260	Identifier	server		2415771	1					
ANR	2416261	PrimaryExpression	"""unknown"""		2415771	2					
ANR	2416262	IfStatement	if ( ! sock )		2415771	24					
ANR	2416263	Condition	! sock	387:5:10398:10402	2415771	0	True				
ANR	2416264	UnaryOperationExpression	! sock		2415771	0					
ANR	2416265	UnaryOperator	!		2415771	0					
ANR	2416266	Identifier	sock		2415771	1					
ANR	2416267	CompoundStatement		105:12:2364:2364	2415771	1					
ANR	2416268	ExpressionStatement	"fprintf ( stderr , ""ERROR: connect to server %s: %s\\n"" , host , sock_error_reason . Value ( ) )"	388:2:10409:10499	2415771	0	True				
ANR	2416269	CallExpression	"fprintf ( stderr , ""ERROR: connect to server %s: %s\\n"" , host , sock_error_reason . Value ( ) )"		2415771	0					
ANR	2416270	Callee	fprintf		2415771	0					
ANR	2416271	Identifier	fprintf		2415771	0					
ANR	2416272	ArgumentList	stderr		2415771	1					
ANR	2416273	Argument	stderr		2415771	0					
ANR	2416274	Identifier	stderr		2415771	0					
ANR	2416275	Argument	"""ERROR: connect to server %s: %s\\n"""		2415771	1					
ANR	2416276	PrimaryExpression	"""ERROR: connect to server %s: %s\\n"""		2415771	0					
ANR	2416277	Argument	host		2415771	2					
ANR	2416278	Identifier	host		2415771	0					
ANR	2416279	Argument	sock_error_reason . Value ( )		2415771	3					
ANR	2416280	CallExpression	sock_error_reason . Value ( )		2415771	0					
ANR	2416281	Callee	sock_error_reason . Value		2415771	0					
ANR	2416282	MemberAccess	sock_error_reason . Value		2415771	0					
ANR	2416283	Identifier	sock_error_reason		2415771	0					
ANR	2416284	Identifier	Value		2415771	1					
ANR	2416285	ArgumentList			2415771	1					
ANR	2416286	ReturnStatement	return 1 ;	390:2:10503:10511	2415771	1	True				
ANR	2416287	PrimaryExpression	1		2415771	0					
ANR	2416288	IdentifierDeclStatement	int offset = 0 ;	394:1:10562:10576	2415771	25	True				
ANR	2416289	IdentifierDecl	offset = 0		2415771	0					
ANR	2416290	IdentifierDeclType	int		2415771	0					
ANR	2416291	Identifier	offset		2415771	1					
ANR	2416292	AssignmentExpression	offset = 0		2415771	2		=			
ANR	2416293	Identifier	offset		2415771	0					
ANR	2416294	PrimaryExpression	0		2415771	1					
ANR	2416295	IdentifierDeclStatement	int last_offset = 0 ;	395:1:10579:10598	2415771	26	True				
ANR	2416296	IdentifierDecl	last_offset = 0		2415771	0					
ANR	2416297	IdentifierDeclType	int		2415771	0					
ANR	2416298	Identifier	last_offset		2415771	1					
ANR	2416299	AssignmentExpression	last_offset = 0		2415771	2		=			
ANR	2416300	Identifier	last_offset		2415771	0					
ANR	2416301	PrimaryExpression	0		2415771	1					
ANR	2416302	IdentifierDeclStatement	classad :: ClassAd ad ;	396:1:10653:10672	2415771	27	True				
ANR	2416303	IdentifierDecl	ad		2415771	0					
ANR	2416304	IdentifierDeclType	classad :: ClassAd		2415771	0					
ANR	2416305	Identifier	ad		2415771	1					
ANR	2416306	ExpressionStatement	"skip_whitespace ( adBuf , offset )"	398:1:10676:10705	2415771	28	True				
ANR	2416307	CallExpression	"skip_whitespace ( adBuf , offset )"		2415771	0					
ANR	2416308	Callee	skip_whitespace		2415771	0					
ANR	2416309	Identifier	skip_whitespace		2415771	0					
ANR	2416310	ArgumentList	adBuf		2415771	1					
ANR	2416311	Argument	adBuf		2415771	0					
ANR	2416312	Identifier	adBuf		2415771	0					
ANR	2416313	Argument	offset		2415771	1					
ANR	2416314	Identifier	offset		2415771	0					
ANR	2416315	IdentifierDeclStatement	bool submit_failed = false ;	399:1:10708:10734	2415771	29	True				
ANR	2416316	IdentifierDecl	submit_failed = false		2415771	0					
ANR	2416317	IdentifierDeclType	bool		2415771	0					
ANR	2416318	Identifier	submit_failed		2415771	1					
ANR	2416319	AssignmentExpression	submit_failed = false		2415771	2		=			
ANR	2416320	Identifier	false		2415771	0					
ANR	2416321	Identifier	false		2415771	1					
ANR	2416322	WhileStatement	"while ( parser . ParseClassAd ( adBuf , ad , offset ) )"		2415771	30					
ANR	2416323	Condition	"parser . ParseClassAd ( adBuf , ad , offset )"	400:8:10744:10781	2415771	0	True				
ANR	2416324	CallExpression	"parser . ParseClassAd ( adBuf , ad , offset )"		2415771	0					
ANR	2416325	Callee	parser . ParseClassAd		2415771	0					
ANR	2416326	MemberAccess	parser . ParseClassAd		2415771	0					
ANR	2416327	Identifier	parser		2415771	0					
ANR	2416328	Identifier	ParseClassAd		2415771	1					
ANR	2416329	ArgumentList	adBuf		2415771	1					
ANR	2416330	Argument	adBuf		2415771	0					
ANR	2416331	Identifier	adBuf		2415771	0					
ANR	2416332	Argument	ad		2415771	1					
ANR	2416333	Identifier	ad		2415771	0					
ANR	2416334	Argument	offset		2415771	2					
ANR	2416335	Identifier	offset		2415771	0					
ANR	2416336	CompoundStatement		118:49:2744:2744	2415771	1					
ANR	2416337	ExpressionStatement	last_offset = offset	401:2:10789:10809	2415771	0	True				
ANR	2416338	AssignmentExpression	last_offset = offset		2415771	0		=			
ANR	2416339	Identifier	last_offset		2415771	0					
ANR	2416340	Identifier	offset		2415771	1					
ANR	2416341	IfStatement	"if ( submit_ad ( sock , & ad , lognotes , spool_proxy ) != 0 )"		2415771	1					
ANR	2416342	Condition	"submit_ad ( sock , & ad , lognotes , spool_proxy ) != 0"	408:12:11042:11089	2415771	0	True				
ANR	2416343	EqualityExpression	"submit_ad ( sock , & ad , lognotes , spool_proxy ) != 0"		2415771	0		!=			
ANR	2416344	CallExpression	"submit_ad ( sock , & ad , lognotes , spool_proxy )"		2415771	0					
ANR	2416345	Callee	submit_ad		2415771	0					
ANR	2416346	Identifier	submit_ad		2415771	0					
ANR	2416347	ArgumentList	sock		2415771	1					
ANR	2416348	Argument	sock		2415771	0					
ANR	2416349	Identifier	sock		2415771	0					
ANR	2416350	Argument	& ad		2415771	1					
ANR	2416351	UnaryOperationExpression	& ad		2415771	0					
ANR	2416352	UnaryOperator	&		2415771	0					
ANR	2416353	Identifier	ad		2415771	1					
ANR	2416354	Argument	lognotes		2415771	2					
ANR	2416355	Identifier	lognotes		2415771	0					
ANR	2416356	Argument	spool_proxy		2415771	3					
ANR	2416357	Identifier	spool_proxy		2415771	0					
ANR	2416358	PrimaryExpression	0		2415771	1					
ANR	2416359	CompoundStatement		126:62:3051:3051	2415771	1					
ANR	2416360	ExpressionStatement	submit_failed = true	409:3:11097:11117	2415771	0	True				
ANR	2416361	AssignmentExpression	submit_failed = true		2415771	0		=			
ANR	2416362	Identifier	submit_failed		2415771	0					
ANR	2416363	Identifier	true		2415771	1					
ANR	2416364	BreakStatement	break ;	410:3:11122:11127	2415771	1	True				
ANR	2416365	ExpressionStatement	"skip_whitespace ( adBuf , offset )"	412:2:11135:11164	2415771	2	True				
ANR	2416366	CallExpression	"skip_whitespace ( adBuf , offset )"		2415771	0					
ANR	2416367	Callee	skip_whitespace		2415771	0					
ANR	2416368	Identifier	skip_whitespace		2415771	0					
ANR	2416369	ArgumentList	adBuf		2415771	1					
ANR	2416370	Argument	adBuf		2415771	0					
ANR	2416371	Identifier	adBuf		2415771	0					
ANR	2416372	Argument	offset		2415771	1					
ANR	2416373	Identifier	offset		2415771	0					
ANR	2416374	ExpressionStatement	last_offset = offset	413:2:11168:11188	2415771	3	True				
ANR	2416375	AssignmentExpression	last_offset = offset		2415771	0		=			
ANR	2416376	Identifier	last_offset		2415771	0					
ANR	2416377	Identifier	offset		2415771	1					
ANR	2416378	ExpressionStatement	offset = last_offset	416:1:11198:11218	2415771	31	True				
ANR	2416379	AssignmentExpression	offset = last_offset		2415771	0		=			
ANR	2416380	Identifier	offset		2415771	0					
ANR	2416381	Identifier	last_offset		2415771	1					
ANR	2416382	IfStatement	if ( ! submit_failed )		2415771	32					
ANR	2416383	Condition	! submit_failed	418:4:11225:11238	2415771	0	True				
ANR	2416384	UnaryOperationExpression	! submit_failed		2415771	0					
ANR	2416385	UnaryOperator	!		2415771	0					
ANR	2416386	Identifier	submit_failed		2415771	1					
ANR	2416387	CompoundStatement		136:20:3200:3200	2415771	1					
ANR	2416388	ExpressionStatement	"skip_whitespace ( adBuf , offset )"	419:2:11245:11274	2415771	0	True				
ANR	2416389	CallExpression	"skip_whitespace ( adBuf , offset )"		2415771	0					
ANR	2416390	Callee	skip_whitespace		2415771	0					
ANR	2416391	Identifier	skip_whitespace		2415771	0					
ANR	2416392	ArgumentList	adBuf		2415771	1					
ANR	2416393	Argument	adBuf		2415771	0					
ANR	2416394	Identifier	adBuf		2415771	0					
ANR	2416395	Argument	offset		2415771	1					
ANR	2416396	Identifier	offset		2415771	0					
ANR	2416397	IfStatement	if ( ( int ) adBuf . size ( ) > offset )		2415771	1					
ANR	2416398	Condition	( int ) adBuf . size ( ) > offset	420:6:11282:11307	2415771	0	True				
ANR	2416399	RelationalExpression	( int ) adBuf . size ( ) > offset		2415771	0		>			
ANR	2416400	CastExpression	( int ) adBuf . size ( )		2415771	0					
ANR	2416401	CastTarget	int		2415771	0					
ANR	2416402	CallExpression	adBuf . size ( )		2415771	1					
ANR	2416403	Callee	adBuf . size		2415771	0					
ANR	2416404	MemberAccess	adBuf . size		2415771	0					
ANR	2416405	Identifier	adBuf		2415771	0					
ANR	2416406	Identifier	size		2415771	1					
ANR	2416407	ArgumentList			2415771	1					
ANR	2416408	Identifier	offset		2415771	1					
ANR	2416409	CompoundStatement		138:35:3270:3270	2415771	1					
ANR	2416410	Statement	fprintf	421:3:11316:11322	2415771	0	True				
ANR	2416411	Statement	(	421:10:11323:11323	2415771	1	True				
ANR	2416412	Statement	stderr	421:11:11324:11329	2415771	2	True				
ANR	2416413	Statement	","	421:17:11330:11330	2415771	3	True				
ANR	2416414	Statement	"""stork_submit: failed to read a ClassAd in the"""	421:19:11332:11378	2415771	4	True				
ANR	2416415	Statement	""" submit file (%s) beginning with the following text:"""	422:5:11385:11438	2415771	5	True				
ANR	2416416	Statement	""" %.200s\\n"""	423:5:11445:11455	2415771	6	True				
ANR	2416417	Statement	","	423:16:11456:11456	2415771	7	True				
ANR	2416418	Statement	fname	423:17:11457:11461	2415771	8	True				
ANR	2416419	Statement	.	423:22:11462:11462	2415771	9	True				
ANR	2416420	Statement	c_str	423:23:11463:11467	2415771	10	True				
ANR	2416421	Statement	(	423:28:11468:11468	2415771	11	True				
ANR	2416422	Statement	)	423:29:11469:11469	2415771	12	True				
ANR	2416423	Statement	","	423:30:11470:11470	2415771	13	True				
ANR	2416424	Statement	adBuf	423:31:11471:11475	2415771	14	True				
ANR	2416425	Statement	.	423:36:11476:11476	2415771	15	True				
ANR	2416426	Statement	c_str	423:37:11477:11481	2415771	16	True				
ANR	2416427	Statement	(	423:42:11482:11482	2415771	17	True				
ANR	2416428	Statement	)	423:43:11483:11483	2415771	18	True				
ANR	2416429	Statement	+	423:44:11484:11484	2415771	19	True				
ANR	2416430	Statement	offset	423:45:11485:11490	2415771	20	True				
ANR	2416431	Statement	)	423:51:11491:11491	2415771	21	True				
ANR	2416432	ExpressionStatement		423:52:11492:11492	2415771	22	True				
ANR	2416433	ExpressionStatement	submit_failed = true	424:3:11497:11517	2415771	23	True				
ANR	2416434	AssignmentExpression	submit_failed = true		2415771	0		=			
ANR	2416435	Identifier	submit_failed		2415771	0					
ANR	2416436	Identifier	true		2415771	1					
ANR	2416437	IfStatement	if ( submit_failed )		2415771	33					
ANR	2416438	Condition	submit_failed	428:4:11531:11543	2415771	0	True				
ANR	2416439	Identifier	submit_failed		2415771	0					
ANR	2416440	CompoundStatement		146:19:3505:3505	2415771	1					
ANR	2416441	ReturnStatement	return 1 ;	429:2:11550:11558	2415771	0	True				
ANR	2416442	PrimaryExpression	1		2415771	0					
ANR	2416443	ExpressionStatement	sock -> encode ( )	433:1:11610:11624	2415771	34	True				
ANR	2416444	CallExpression	sock -> encode ( )		2415771	0					
ANR	2416445	Callee	sock -> encode		2415771	0					
ANR	2416446	PtrMemberAccess	sock -> encode		2415771	0					
ANR	2416447	Identifier	sock		2415771	0					
ANR	2416448	Identifier	encode		2415771	1					
ANR	2416449	ArgumentList			2415771	1					
ANR	2416450	IdentifierDeclStatement	"char * goodbye = """" ;"	434:1:11627:11645	2415771	35	True				
ANR	2416451	IdentifierDecl	"* goodbye = """""		2415771	0					
ANR	2416452	IdentifierDeclType	char *		2415771	0					
ANR	2416453	Identifier	goodbye		2415771	1					
ANR	2416454	AssignmentExpression	"* goodbye = """""		2415771	2		=			
ANR	2416455	Identifier	goodbye		2415771	0					
ANR	2416456	PrimaryExpression	""""""		2415771	1					
ANR	2416457	ExpressionStatement	sock -> code ( goodbye )	435:1:11648:11667	2415771	36	True				
ANR	2416458	CallExpression	sock -> code ( goodbye )		2415771	0					
ANR	2416459	Callee	sock -> code		2415771	0					
ANR	2416460	PtrMemberAccess	sock -> code		2415771	0					
ANR	2416461	Identifier	sock		2415771	0					
ANR	2416462	Identifier	code		2415771	1					
ANR	2416463	ArgumentList	goodbye		2415771	1					
ANR	2416464	Argument	goodbye		2415771	0					
ANR	2416465	Identifier	goodbye		2415771	0					
ANR	2416466	ExpressionStatement	sock -> end_of_message ( )	436:1:11670:11692	2415771	37	True				
ANR	2416467	CallExpression	sock -> end_of_message ( )		2415771	0					
ANR	2416468	Callee	sock -> end_of_message		2415771	0					
ANR	2416469	PtrMemberAccess	sock -> end_of_message		2415771	0					
ANR	2416470	Identifier	sock		2415771	0					
ANR	2416471	Identifier	end_of_message		2415771	1					
ANR	2416472	ArgumentList			2415771	1					
ANR	2416473	ExpressionStatement	sock -> close ( )	438:1:11696:11709	2415771	38	True				
ANR	2416474	CallExpression	sock -> close ( )		2415771	0					
ANR	2416475	Callee	sock -> close		2415771	0					
ANR	2416476	PtrMemberAccess	sock -> close		2415771	0					
ANR	2416477	Identifier	sock		2415771	0					
ANR	2416478	Identifier	close		2415771	1					
ANR	2416479	ArgumentList			2415771	1					
ANR	2416480	Statement	delete	439:1:11712:11717	2415771	39	True				
ANR	2416481	ExpressionStatement	sock	439:8:11719:11723	2415771	40	True				
ANR	2416482	Identifier	sock		2415771	0					
ANR	2416483	ReturnStatement	return 0 ;	441:1:11727:11735	2415771	41	True				
ANR	2416484	PrimaryExpression	0		2415771	0					
ANR	2416485	ReturnType	int		2415771	1					
ANR	2416486	Identifier	main		2415771	2					
ANR	2416487	ParameterList	"int argc , char * * argv"		2415771	3					
ANR	2416488	Parameter	int argc	282:9:8017:8024	2415771	0	True				
ANR	2416489	ParameterType	int		2415771	0					
ANR	2416490	Identifier	argc		2415771	1					
ANR	2416491	Parameter	char * * argv	282:19:8027:8037	2415771	1	True				
ANR	2416492	ParameterType	char * *		2415771	0					
ANR	2416493	Identifier	argv		2415771	1					
ANR	2416494	CFGEntryNode	ENTRY		2415771		True				
ANR	2416495	CFGExitNode	EXIT		2415771		True				
ANR	2416496	Symbol	STORK_SUBMIT		2415771						
ANR	2416497	Symbol	fname . c_str		2415771						
ANR	2416498	Symbol	global_opts . server		2415771						
ANR	2416499	Symbol	* argv		2415771						
ANR	2416500	Symbol	sock_error_reason . Value		2415771						
ANR	2416501	Symbol	strlen		2415771						
ANR	2416502	Symbol	strncmp		2415771						
ANR	2416503	Symbol	host		2415771						
ANR	2416504	Symbol	submit_file_fd		2415771						
ANR	2416505	Symbol	& adBuf		2415771						
ANR	2416506	Symbol	strcmp		2415771						
ANR	2416507	Symbol	fname		2415771						
ANR	2416508	Symbol	errno		2415771						
ANR	2416509	Symbol	NULL		2415771						
ANR	2416510	Symbol	ad		2415771						
ANR	2416511	Symbol	offset		2415771						
ANR	2416512	Symbol	lognotes		2415771						
ANR	2416513	Symbol	adstr		2415771						
ANR	2416514	Symbol	param_boolean		2415771						
ANR	2416515	Symbol	stderr		2415771						
ANR	2416516	Symbol	parser . ParseClassAd		2415771						
ANR	2416517	Symbol	safe_open_wrapper		2415771						
ANR	2416518	Symbol	strerror		2415771						
ANR	2416519	Symbol	parser		2415771						
ANR	2416520	Symbol	true		2415771						
ANR	2416521	Symbol	num_positional_args		2415771						
ANR	2416522	Symbol	submit_failed		2415771						
ANR	2416523	Symbol	& global_opts		2415771						
ANR	2416524	Symbol	* arg		2415771						
ANR	2416525	Symbol	goodbye		2415771						
ANR	2416526	Symbol	& ad		2415771						
ANR	2416527	Symbol	argv		2415771						
ANR	2416528	Symbol	currentAd		2415771						
ANR	2416529	Symbol	adBuf . size		2415771						
ANR	2416530	Symbol	USAGE		2415771						
ANR	2416531	Symbol	adBuf		2415771						
ANR	2416532	Symbol	read_from_stdin		2415771						
ANR	2416533	Symbol	arg		2415771						
ANR	2416534	Symbol	leftparan		2415771						
ANR	2416535	Symbol	start_stork_command_and_authenticate		2415771						
ANR	2416536	Symbol	argc		2415771						
ANR	2416537	Symbol	OPT_STDIN		2415771						
ANR	2416538	Symbol	last_offset		2415771						
ANR	2416539	Symbol	submit_ad		2415771						
ANR	2416540	Symbol	false		2415771						
ANR	2416541	Symbol	i		2415771						
ANR	2416542	Symbol	global_opts		2415771						
ANR	2416543	Symbol	OPT_LOGNOTES		2415771						
ANR	2416544	Symbol	sock		2415771						
ANR	2416545	Symbol	sock_error_reason		2415771						
ANR	2416546	Symbol	* i		2415771						
ANR	2416547	Symbol	O_RDONLY		2415771						
ANR	2416548	Symbol	readFile		2415771						
ANR	2416549	Symbol	spool_proxy		2415771						
