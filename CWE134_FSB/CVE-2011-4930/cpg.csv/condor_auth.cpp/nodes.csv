command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	832871	File	data/converged/CVE-2011-4930_htcondor/condor_auth.cpp								
ANR	832872	DeclStmt									
ANR	832873	Decl							const char	const char [ ]	root
ANR	832874	Function	Condor_Auth_Base :: Condor_Auth_Base	27:0:927:2594							
ANR	832875	FunctionDef	"Condor_Auth_Base :: Condor_Auth_Base (ReliSock * sock , int mode)"		832874	0					
ANR	832876	CompoundStatement		38:0:1272:2594	832874	0					
ANR	832877	IfStatement	if ( get_my_uid ( ) == 0 )		832874	0					
ANR	832878	Condition	get_my_uid ( ) == 0	59:12:2198:2214	832874	0	True				
ANR	832879	EqualityExpression	get_my_uid ( ) == 0		832874	0		==			
ANR	832880	CallExpression	get_my_uid ( )		832874	0					
ANR	832881	Callee	get_my_uid		832874	0					
ANR	832882	Identifier	get_my_uid		832874	0					
ANR	832883	ArgumentList			832874	1					
ANR	832884	PrimaryExpression	0		832874	1					
ANR	832885	CompoundStatement		22:31:944:944	832874	1					
ANR	832886	ExpressionStatement	isDaemon_ = true	60:12:2231:2247	832874	0	True				
ANR	832887	AssignmentExpression	isDaemon_ = true		832874	0		=			
ANR	832888	Identifier	isDaemon_		832874	0					
ANR	832889	Identifier	true		832874	1					
ANR	832890	ExpressionStatement	"localDomain_ = param ( ""UID_DOMAIN"" )"	65:1:2305:2341	832874	1	True				
ANR	832891	AssignmentExpression	"localDomain_ = param ( ""UID_DOMAIN"" )"		832874	0		=			
ANR	832892	Identifier	localDomain_		832874	0					
ANR	832893	CallExpression	"param ( ""UID_DOMAIN"" )"		832874	1					
ANR	832894	Callee	param		832874	0					
ANR	832895	Identifier	param		832874	0					
ANR	832896	ArgumentList	"""UID_DOMAIN"""		832874	1					
ANR	832897	Argument	"""UID_DOMAIN"""		832874	0					
ANR	832898	PrimaryExpression	"""UID_DOMAIN"""		832874	0					
ANR	832899	ExpressionStatement	setRemoteHost ( mySock_ -> peer_addr ( ) . to_ip_string ( ) . Value ( ) )	67:1:2345:2403	832874	2	True				
ANR	832900	CallExpression	setRemoteHost ( mySock_ -> peer_addr ( ) . to_ip_string ( ) . Value ( ) )		832874	0					
ANR	832901	Callee	setRemoteHost		832874	0					
ANR	832902	Identifier	setRemoteHost		832874	0					
ANR	832903	ArgumentList	mySock_ -> peer_addr ( ) . to_ip_string ( ) . Value ( )		832874	1					
ANR	832904	Argument	mySock_ -> peer_addr ( ) . to_ip_string ( ) . Value ( )		832874	0					
ANR	832905	CallExpression	mySock_ -> peer_addr ( ) . to_ip_string ( ) . Value ( )		832874	0					
ANR	832906	Callee	mySock_ -> peer_addr ( ) . to_ip_string ( ) . Value		832874	0					
ANR	832907	MemberAccess	mySock_ -> peer_addr ( ) . to_ip_string ( ) . Value		832874	0					
ANR	832908	CallExpression	mySock_ -> peer_addr ( ) . to_ip_string ( )		832874	0					
ANR	832909	Callee	mySock_ -> peer_addr ( ) . to_ip_string		832874	0					
ANR	832910	MemberAccess	mySock_ -> peer_addr ( ) . to_ip_string		832874	0					
ANR	832911	CallExpression	mySock_ -> peer_addr ( )		832874	0					
ANR	832912	Callee	mySock_ -> peer_addr		832874	0					
ANR	832913	PtrMemberAccess	mySock_ -> peer_addr		832874	0					
ANR	832914	Identifier	mySock_		832874	0					
ANR	832915	Identifier	peer_addr		832874	1					
ANR	832916	ArgumentList			832874	1					
ANR	832917	Identifier	to_ip_string		832874	1					
ANR	832918	ArgumentList			832874	1					
ANR	832919	Identifier	Value		832874	1					
ANR	832920	ArgumentList			832874	1					
ANR	832921	Identifier	Condor_Auth_Base :: Condor_Auth_Base		832874	1					
ANR	832922	ParameterList	"ReliSock * sock , int mode"		832874	2					
ANR	832923	Parameter	ReliSock * sock	27:37:964:978	832874	0	True				
ANR	832924	ParameterType	ReliSock *		832874	0					
ANR	832925	Identifier	sock		832874	1					
ANR	832926	Parameter	int mode	27:54:981:988	832874	1	True				
ANR	832927	ParameterType	int		832874	0					
ANR	832928	Identifier	mode		832874	1					
ANR	832929	CFGEntryNode	ENTRY		832874		True				
ANR	832930	CFGExitNode	EXIT		832874		True				
ANR	832931	Symbol	mode		832874						
ANR	832932	Symbol	sock		832874						
ANR	832933	Symbol	param		832874						
ANR	832934	Symbol	true		832874						
ANR	832935	Symbol	isDaemon_		832874						
ANR	832936	Symbol	mySock_		832874						
ANR	832937	Symbol	mySock_ -> peer_addr		832874						
ANR	832938	Symbol	mySock_ -> peer_addr ( ) . to_ip_string ( ) . Value		832874						
ANR	832939	Symbol	get_my_uid		832874						
ANR	832940	Symbol	localDomain_		832874						
ANR	832941	Symbol	* mySock_		832874						
ANR	832942	Symbol	mySock_ -> peer_addr ( ) . to_ip_string		832874						
ANR	832943	Function	Condor_Auth_Base :: ~Condor_Auth_Base	73:0:2597:2979							
ANR	832944	FunctionDef	Condor_Auth_Base :: ~Condor_Auth_Base ()		832943	0					
ANR	832945	CompoundStatement		74:0:2637:2979	832943	0					
ANR	832946	IfStatement	if ( remoteUser_ )		832943	0					
ANR	832947	Condition	remoteUser_	75:8:2647:2657	832943	0	True				
ANR	832948	Identifier	remoteUser_		832943	0					
ANR	832949	CompoundStatement		2:21:22:22	832943	1					
ANR	832950	ExpressionStatement	free ( remoteUser_ )	76:8:2670:2687	832943	0	True				
ANR	832951	CallExpression	free ( remoteUser_ )		832943	0					
ANR	832952	Callee	free		832943	0					
ANR	832953	Identifier	free		832943	0					
ANR	832954	ArgumentList	remoteUser_		832943	1					
ANR	832955	Argument	remoteUser_		832943	0					
ANR	832956	Identifier	remoteUser_		832943	0					
ANR	832957	IfStatement	if ( remoteDomain_ )		832943	1					
ANR	832958	Condition	remoteDomain_	79:8:2704:2716	832943	0	True				
ANR	832959	Identifier	remoteDomain_		832943	0					
ANR	832960	CompoundStatement		6:23:81:81	832943	1					
ANR	832961	ExpressionStatement	free ( remoteDomain_ )	80:8:2729:2748	832943	0	True				
ANR	832962	CallExpression	free ( remoteDomain_ )		832943	0					
ANR	832963	Callee	free		832943	0					
ANR	832964	Identifier	free		832943	0					
ANR	832965	ArgumentList	remoteDomain_		832943	1					
ANR	832966	Argument	remoteDomain_		832943	0					
ANR	832967	Identifier	remoteDomain_		832943	0					
ANR	832968	IfStatement	if ( remoteHost_ )		832943	2					
ANR	832969	Condition	remoteHost_	83:8:2765:2775	832943	0	True				
ANR	832970	Identifier	remoteHost_		832943	0					
ANR	832971	CompoundStatement		10:21:140:140	832943	1					
ANR	832972	ExpressionStatement	free ( remoteHost_ )	84:8:2788:2805	832943	0	True				
ANR	832973	CallExpression	free ( remoteHost_ )		832943	0					
ANR	832974	Callee	free		832943	0					
ANR	832975	Identifier	free		832943	0					
ANR	832976	ArgumentList	remoteHost_		832943	1					
ANR	832977	Argument	remoteHost_		832943	0					
ANR	832978	Identifier	remoteHost_		832943	0					
ANR	832979	IfStatement	if ( localDomain_ )		832943	3					
ANR	832980	Condition	localDomain_	87:8:2822:2833	832943	0	True				
ANR	832981	Identifier	localDomain_		832943	0					
ANR	832982	CompoundStatement		14:22:198:198	832943	1					
ANR	832983	ExpressionStatement	free ( localDomain_ )	88:8:2846:2864	832943	0	True				
ANR	832984	CallExpression	free ( localDomain_ )		832943	0					
ANR	832985	Callee	free		832943	0					
ANR	832986	Identifier	free		832943	0					
ANR	832987	ArgumentList	localDomain_		832943	1					
ANR	832988	Argument	localDomain_		832943	0					
ANR	832989	Identifier	localDomain_		832943	0					
ANR	832990	IfStatement	if ( fqu_ )		832943	4					
ANR	832991	Condition	fqu_	91:8:2885:2888	832943	0	True				
ANR	832992	Identifier	fqu_		832943	0					
ANR	832993	CompoundStatement		18:14:253:253	832943	1					
ANR	832994	ExpressionStatement	free ( fqu_ )	92:8:2901:2911	832943	0	True				
ANR	832995	CallExpression	free ( fqu_ )		832943	0					
ANR	832996	Callee	free		832943	0					
ANR	832997	Identifier	free		832943	0					
ANR	832998	ArgumentList	fqu_		832943	1					
ANR	832999	Argument	fqu_		832943	0					
ANR	833000	Identifier	fqu_		832943	0					
ANR	833001	IfStatement	if ( authenticatedName_ )		832943	5					
ANR	833002	Condition	authenticatedName_	95:5:2925:2942	832943	0	True				
ANR	833003	Identifier	authenticatedName_		832943	0					
ANR	833004	CompoundStatement		22:25:307:307	832943	1					
ANR	833005	ExpressionStatement	free ( authenticatedName_ )	96:2:2949:2974	832943	0	True				
ANR	833006	CallExpression	free ( authenticatedName_ )		832943	0					
ANR	833007	Callee	free		832943	0					
ANR	833008	Identifier	free		832943	0					
ANR	833009	ArgumentList	authenticatedName_		832943	1					
ANR	833010	Argument	authenticatedName_		832943	0					
ANR	833011	Identifier	authenticatedName_		832943	0					
ANR	833012	Identifier	Condor_Auth_Base :: ~Condor_Auth_Base		832943	1					
ANR	833013	ParameterList			832943	2					
ANR	833014	CFGEntryNode	ENTRY		832943		True				
ANR	833015	CFGExitNode	EXIT		832943		True				
ANR	833016	Symbol	fqu_		832943						
ANR	833017	Symbol	remoteUser_		832943						
ANR	833018	Symbol	remoteDomain_		832943						
ANR	833019	Symbol	authenticatedName_		832943						
ANR	833020	Symbol	localDomain_		832943						
ANR	833021	Symbol	remoteHost_		832943						
ANR	833022	Function	Condor_Auth_Base :: wrap	100:0:2982:3520							
ANR	833023	FunctionDef	"Condor_Auth_Base :: wrap (char * input , int input_len , char * & output , int & output_len)"		833022	0					
ANR	833024	CompoundStatement		104:0:3175:3520	833022	0					
ANR	833025	ExpressionStatement	output_len = input_len	109:4:3399:3421	833022	0	True				
ANR	833026	AssignmentExpression	output_len = input_len		833022	0		=			
ANR	833027	Identifier	output_len		833022	0					
ANR	833028	Identifier	input_len		833022	1					
ANR	833029	ExpressionStatement	output = ( char * ) malloc ( output_len )	110:4:3427:3463	833022	1	True				
ANR	833030	AssignmentExpression	output = ( char * ) malloc ( output_len )		833022	0		=			
ANR	833031	Identifier	output		833022	0					
ANR	833032	CastExpression	( char * ) malloc ( output_len )		833022	1					
ANR	833033	CastTarget	char *		833022	0					
ANR	833034	CallExpression	malloc ( output_len )		833022	1					
ANR	833035	Callee	malloc		833022	0					
ANR	833036	Identifier	malloc		833022	0					
ANR	833037	ArgumentList	output_len		833022	1					
ANR	833038	Argument	output_len		833022	0					
ANR	833039	Identifier	output_len		833022	0					
ANR	833040	ExpressionStatement	"memcpy ( output , input , output_len )"	112:4:3470:3503	833022	2	True				
ANR	833041	CallExpression	"memcpy ( output , input , output_len )"		833022	0					
ANR	833042	Callee	memcpy		833022	0					
ANR	833043	Identifier	memcpy		833022	0					
ANR	833044	ArgumentList	output		833022	1					
ANR	833045	Argument	output		833022	0					
ANR	833046	Identifier	output		833022	0					
ANR	833047	Argument	input		833022	1					
ANR	833048	Identifier	input		833022	0					
ANR	833049	Argument	output_len		833022	2					
ANR	833050	Identifier	output_len		833022	0					
ANR	833051	ReturnStatement	return 1 ;	114:4:3510:3518	833022	3	True				
ANR	833052	PrimaryExpression	1		833022	0					
ANR	833053	ReturnType	int		833022	1					
ANR	833054	Identifier	Condor_Auth_Base :: wrap		833022	2					
ANR	833055	ParameterList	"char * input , int input_len , char * & output , int & output_len"		833022	3					
ANR	833056	Parameter	char * input	100:29:3011:3024	833022	0	True				
ANR	833057	ParameterType	char *		833022	0					
ANR	833058	Identifier	input		833022	1					
ANR	833059	Parameter	int input_len	101:29:3057:3074	833022	1	True				
ANR	833060	ParameterType	int		833022	0					
ANR	833061	Identifier	input_len		833022	1					
ANR	833062	Parameter	char * & output	102:29:3107:3121	833022	2	True				
ANR	833063	ParameterType	char * &		833022	0					
ANR	833064	Identifier	output		833022	1					
ANR	833065	Parameter	int & output_len	103:29:3154:3172	833022	3	True				
ANR	833066	ParameterType	int &		833022	0					
ANR	833067	Identifier	output_len		833022	1					
ANR	833068	CFGEntryNode	ENTRY		833022		True				
ANR	833069	CFGExitNode	EXIT		833022		True				
ANR	833070	Symbol	output		833022						
ANR	833071	Symbol	output_len		833022						
ANR	833072	Symbol	input		833022						
ANR	833073	Symbol	malloc		833022						
ANR	833074	Symbol	input_len		833022						
ANR	833075	Function	Condor_Auth_Base :: unwrap	117:0:3527:4071							
ANR	833076	FunctionDef	"Condor_Auth_Base :: unwrap (char * input , int input_len , char * & output , int & output_len)"		833075	0					
ANR	833077	CompoundStatement		121:0:3724:4071	833075	0					
ANR	833078	ExpressionStatement	output_len = input_len	126:4:3950:3972	833075	0	True				
ANR	833079	AssignmentExpression	output_len = input_len		833075	0		=			
ANR	833080	Identifier	output_len		833075	0					
ANR	833081	Identifier	input_len		833075	1					
ANR	833082	ExpressionStatement	output = ( char * ) malloc ( output_len )	127:4:3978:4014	833075	1	True				
ANR	833083	AssignmentExpression	output = ( char * ) malloc ( output_len )		833075	0		=			
ANR	833084	Identifier	output		833075	0					
ANR	833085	CastExpression	( char * ) malloc ( output_len )		833075	1					
ANR	833086	CastTarget	char *		833075	0					
ANR	833087	CallExpression	malloc ( output_len )		833075	1					
ANR	833088	Callee	malloc		833075	0					
ANR	833089	Identifier	malloc		833075	0					
ANR	833090	ArgumentList	output_len		833075	1					
ANR	833091	Argument	output_len		833075	0					
ANR	833092	Identifier	output_len		833075	0					
ANR	833093	ExpressionStatement	"memcpy ( output , input , output_len )"	129:4:4021:4054	833075	2	True				
ANR	833094	CallExpression	"memcpy ( output , input , output_len )"		833075	0					
ANR	833095	Callee	memcpy		833075	0					
ANR	833096	Identifier	memcpy		833075	0					
ANR	833097	ArgumentList	output		833075	1					
ANR	833098	Argument	output		833075	0					
ANR	833099	Identifier	output		833075	0					
ANR	833100	Argument	input		833075	1					
ANR	833101	Identifier	input		833075	0					
ANR	833102	Argument	output_len		833075	2					
ANR	833103	Identifier	output_len		833075	0					
ANR	833104	ReturnStatement	return 1 ;	131:4:4061:4069	833075	3	True				
ANR	833105	PrimaryExpression	1		833075	0					
ANR	833106	ReturnType	int		833075	1					
ANR	833107	Identifier	Condor_Auth_Base :: unwrap		833075	2					
ANR	833108	ParameterList	"char * input , int input_len , char * & output , int & output_len"		833075	3					
ANR	833109	Parameter	char * input	117:31:3558:3570	833075	0	True				
ANR	833110	ParameterType	char *		833075	0					
ANR	833111	Identifier	input		833075	1					
ANR	833112	Parameter	int input_len	118:31:3605:3621	833075	1	True				
ANR	833113	ParameterType	int		833075	0					
ANR	833114	Identifier	input_len		833075	1					
ANR	833115	Parameter	char * & output	119:31:3656:3669	833075	2	True				
ANR	833116	ParameterType	char * &		833075	0					
ANR	833117	Identifier	output		833075	1					
ANR	833118	Parameter	int & output_len	120:31:3704:3721	833075	3	True				
ANR	833119	ParameterType	int &		833075	0					
ANR	833120	Identifier	output_len		833075	1					
ANR	833121	CFGEntryNode	ENTRY		833075		True				
ANR	833122	CFGExitNode	EXIT		833075		True				
ANR	833123	Symbol	output		833075						
ANR	833124	Symbol	output_len		833075						
ANR	833125	Symbol	input		833075						
ANR	833126	Symbol	malloc		833075						
ANR	833127	Symbol	input_len		833075						
ANR	833128	Function	Condor_Auth_Base :: getRemoteHost	134:0:4074:4155							
ANR	833129	FunctionDef	Condor_Auth_Base :: getRemoteHost ()		833128	0					
ANR	833130	CompoundStatement		135:0:4129:4155	833128	0					
ANR	833131	ReturnStatement	return remoteHost_ ;	136:4:4135:4153	833128	0	True				
ANR	833132	Identifier	remoteHost_		833128	0					
ANR	833133	ReturnType	const char *		833128	1					
ANR	833134	Identifier	Condor_Auth_Base :: getRemoteHost		833128	2					
ANR	833135	ParameterList			833128	3					
ANR	833136	CFGEntryNode	ENTRY		833128		True				
ANR	833137	CFGExitNode	EXIT		833128		True				
ANR	833138	Symbol	remoteHost_		833128						
ANR	833139	Function	Condor_Auth_Base :: getMode	139:0:4158:4218							
ANR	833140	FunctionDef	Condor_Auth_Base :: getMode ()		833139	0					
ANR	833141	CompoundStatement		140:0:4198:4218	833139	0					
ANR	833142	ReturnStatement	return mode_ ;	141:4:4204:4216	833139	0	True				
ANR	833143	Identifier	mode_		833139	0					
ANR	833144	ReturnType	int		833139	1					
ANR	833145	Identifier	Condor_Auth_Base :: getMode		833139	2					
ANR	833146	ParameterList			833139	3					
ANR	833147	CFGEntryNode	ENTRY		833139		True				
ANR	833148	CFGExitNode	EXIT		833139		True				
ANR	833149	Symbol	mode_		833139						
ANR	833150	Function	Condor_Auth_Base :: isAuthenticated	144:0:4225:4302							
ANR	833151	FunctionDef	Condor_Auth_Base :: isAuthenticated ()		833150	0					
ANR	833152	CompoundStatement		145:0:4273:4302	833150	0					
ANR	833153	ReturnStatement	return authenticated_ ;	146:4:4279:4300	833150	0	True				
ANR	833154	Identifier	authenticated_		833150	0					
ANR	833155	ReturnType	int		833150	1					
ANR	833156	Identifier	Condor_Auth_Base :: isAuthenticated		833150	2					
ANR	833157	ParameterList			833150	3					
ANR	833158	CFGEntryNode	ENTRY		833150		True				
ANR	833159	CFGExitNode	EXIT		833150		True				
ANR	833160	Symbol	authenticated_		833150						
ANR	833161	Function	Condor_Auth_Base :: getRemoteUser	149:0:4305:4386							
ANR	833162	FunctionDef	Condor_Auth_Base :: getRemoteUser ()		833161	0					
ANR	833163	CompoundStatement		150:0:4360:4386	833161	0					
ANR	833164	ReturnStatement	return remoteUser_ ;	151:4:4366:4384	833161	0	True				
ANR	833165	Identifier	remoteUser_		833161	0					
ANR	833166	ReturnType	const char *		833161	1					
ANR	833167	Identifier	Condor_Auth_Base :: getRemoteUser		833161	2					
ANR	833168	ParameterList			833161	3					
ANR	833169	CFGEntryNode	ENTRY		833161		True				
ANR	833170	CFGExitNode	EXIT		833161		True				
ANR	833171	Symbol	remoteUser_		833161						
ANR	833172	Function	Condor_Auth_Base :: getRemoteDomain	154:0:4389:4474							
ANR	833173	FunctionDef	Condor_Auth_Base :: getRemoteDomain ()		833172	0					
ANR	833174	CompoundStatement		155:0:4446:4474	833172	0					
ANR	833175	ReturnStatement	return remoteDomain_ ;	156:4:4452:4472	833172	0	True				
ANR	833176	Identifier	remoteDomain_		833172	0					
ANR	833177	ReturnType	const char *		833172	1					
ANR	833178	Identifier	Condor_Auth_Base :: getRemoteDomain		833172	2					
ANR	833179	ParameterList			833172	3					
ANR	833180	CFGEntryNode	ENTRY		833172		True				
ANR	833181	CFGExitNode	EXIT		833172		True				
ANR	833182	Symbol	remoteDomain_		833172						
ANR	833183	Function	Condor_Auth_Base :: getRemoteFQU	159:0:4477:5201							
ANR	833184	FunctionDef	Condor_Auth_Base :: getRemoteFQU ()		833183	0					
ANR	833185	CompoundStatement		160:0:4525:5201	833183	0					
ANR	833186	IfStatement	if ( fqu_ == NULL )		833183	0					
ANR	833187	Condition	fqu_ == NULL	161:8:4535:4546	833183	0	True				
ANR	833188	EqualityExpression	fqu_ == NULL		833183	0		==			
ANR	833189	Identifier	fqu_		833183	0					
ANR	833190	Identifier	NULL		833183	1					
ANR	833191	CompoundStatement		3:8:33:69	833183	1					
ANR	833192	IdentifierDeclStatement	"int len = 0 , userlen = 0 , domlen = 0 ;"	162:8:4559:4595	833183	0	True				
ANR	833193	IdentifierDecl	len = 0		833183	0					
ANR	833194	IdentifierDeclType	int		833183	0					
ANR	833195	Identifier	len		833183	1					
ANR	833196	AssignmentExpression	len = 0		833183	2		=			
ANR	833197	Identifier	len		833183	0					
ANR	833198	PrimaryExpression	0		833183	1					
ANR	833199	IdentifierDecl	userlen = 0		833183	1					
ANR	833200	IdentifierDeclType	int		833183	0					
ANR	833201	Identifier	userlen		833183	1					
ANR	833202	AssignmentExpression	userlen = 0		833183	2		=			
ANR	833203	Identifier	userlen		833183	0					
ANR	833204	PrimaryExpression	0		833183	1					
ANR	833205	IdentifierDecl	domlen = 0		833183	2					
ANR	833206	IdentifierDeclType	int		833183	0					
ANR	833207	Identifier	domlen		833183	1					
ANR	833208	AssignmentExpression	domlen = 0		833183	2		=			
ANR	833209	Identifier	domlen		833183	0					
ANR	833210	PrimaryExpression	0		833183	1					
ANR	833211	IfStatement	if ( remoteUser_ )		833183	1					
ANR	833212	Condition	remoteUser_	163:12:4609:4619	833183	0	True				
ANR	833213	Identifier	remoteUser_		833183	0					
ANR	833214	CompoundStatement		4:25:96:96	833183	1					
ANR	833215	ExpressionStatement	userlen = strlen ( remoteUser_ )	164:12:4636:4665	833183	0	True				
ANR	833216	AssignmentExpression	userlen = strlen ( remoteUser_ )		833183	0		=			
ANR	833217	Identifier	userlen		833183	0					
ANR	833218	CallExpression	strlen ( remoteUser_ )		833183	1					
ANR	833219	Callee	strlen		833183	0					
ANR	833220	Identifier	strlen		833183	0					
ANR	833221	ArgumentList	remoteUser_		833183	1					
ANR	833222	Argument	remoteUser_		833183	0					
ANR	833223	Identifier	remoteUser_		833183	0					
ANR	833224	ExpressionStatement	len += userlen	165:12:4679:4693	833183	1	True				
ANR	833225	AssignmentExpression	len += userlen		833183	0		+=			
ANR	833226	Identifier	len		833183	0					
ANR	833227	Identifier	userlen		833183	1					
ANR	833228	IfStatement	if ( remoteDomain_ )		833183	2					
ANR	833229	Condition	remoteDomain_	167:12:4717:4729	833183	0	True				
ANR	833230	Identifier	remoteDomain_		833183	0					
ANR	833231	CompoundStatement		8:27:206:206	833183	1					
ANR	833232	ExpressionStatement	domlen = strlen ( remoteDomain_ )	168:12:4746:4777	833183	0	True				
ANR	833233	AssignmentExpression	domlen = strlen ( remoteDomain_ )		833183	0		=			
ANR	833234	Identifier	domlen		833183	0					
ANR	833235	CallExpression	strlen ( remoteDomain_ )		833183	1					
ANR	833236	Callee	strlen		833183	0					
ANR	833237	Identifier	strlen		833183	0					
ANR	833238	ArgumentList	remoteDomain_		833183	1					
ANR	833239	Argument	remoteDomain_		833183	0					
ANR	833240	Identifier	remoteDomain_		833183	0					
ANR	833241	ExpressionStatement	len += domlen	169:12:4791:4804	833183	1	True				
ANR	833242	AssignmentExpression	len += domlen		833183	0		+=			
ANR	833243	Identifier	len		833183	0					
ANR	833244	Identifier	domlen		833183	1					
ANR	833245	IfStatement	if ( ( len > 0 ) && remoteUser_ )		833183	3					
ANR	833246	Condition	( len > 0 ) && remoteUser_	171:12:4828:4851	833183	0	True				
ANR	833247	AndExpression	( len > 0 ) && remoteUser_		833183	0		&&			
ANR	833248	RelationalExpression	len > 0		833183	0		>			
ANR	833249	Identifier	len		833183	0					
ANR	833250	PrimaryExpression	0		833183	1					
ANR	833251	Identifier	remoteUser_		833183	1					
ANR	833252	CompoundStatement		12:38:328:328	833183	1					
ANR	833253	ExpressionStatement	fqu_ = ( char * ) malloc ( len + 2 )	172:12:4868:4899	833183	0	True				
ANR	833254	AssignmentExpression	fqu_ = ( char * ) malloc ( len + 2 )		833183	0		=			
ANR	833255	Identifier	fqu_		833183	0					
ANR	833256	CastExpression	( char * ) malloc ( len + 2 )		833183	1					
ANR	833257	CastTarget	char *		833183	0					
ANR	833258	CallExpression	malloc ( len + 2 )		833183	1					
ANR	833259	Callee	malloc		833183	0					
ANR	833260	Identifier	malloc		833183	0					
ANR	833261	ArgumentList	len + 2		833183	1					
ANR	833262	Argument	len + 2		833183	0					
ANR	833263	AdditiveExpression	len + 2		833183	0		+			
ANR	833264	Identifier	len		833183	0					
ANR	833265	PrimaryExpression	2		833183	1					
ANR	833266	ExpressionStatement	"memset ( fqu_ , 0 , len + 2 )"	173:12:4913:4937	833183	1	True				
ANR	833267	CallExpression	"memset ( fqu_ , 0 , len + 2 )"		833183	0					
ANR	833268	Callee	memset		833183	0					
ANR	833269	Identifier	memset		833183	0					
ANR	833270	ArgumentList	fqu_		833183	1					
ANR	833271	Argument	fqu_		833183	0					
ANR	833272	Identifier	fqu_		833183	0					
ANR	833273	Argument	0		833183	1					
ANR	833274	PrimaryExpression	0		833183	0					
ANR	833275	Argument	len + 2		833183	2					
ANR	833276	AdditiveExpression	len + 2		833183	0		+			
ANR	833277	Identifier	len		833183	0					
ANR	833278	PrimaryExpression	2		833183	1					
ANR	833279	ExpressionStatement	"memcpy ( fqu_ , remoteUser_ , userlen )"	174:12:4951:4985	833183	2	True				
ANR	833280	CallExpression	"memcpy ( fqu_ , remoteUser_ , userlen )"		833183	0					
ANR	833281	Callee	memcpy		833183	0					
ANR	833282	Identifier	memcpy		833183	0					
ANR	833283	ArgumentList	fqu_		833183	1					
ANR	833284	Argument	fqu_		833183	0					
ANR	833285	Identifier	fqu_		833183	0					
ANR	833286	Argument	remoteUser_		833183	1					
ANR	833287	Identifier	remoteUser_		833183	0					
ANR	833288	Argument	userlen		833183	2					
ANR	833289	Identifier	userlen		833183	0					
ANR	833290	IfStatement	if ( remoteDomain_ )		833183	3					
ANR	833291	Condition	remoteDomain_	175:16:5003:5015	833183	0	True				
ANR	833292	Identifier	remoteDomain_		833183	0					
ANR	833293	CompoundStatement		16:31:492:492	833183	1					
ANR	833294	ExpressionStatement	fqu_ [ userlen ] = '@'	176:16:5036:5055	833183	0	True				
ANR	833295	AssignmentExpression	fqu_ [ userlen ] = '@'		833183	0		=			
ANR	833296	ArrayIndexing	fqu_ [ userlen ]		833183	0					
ANR	833297	Identifier	fqu_		833183	0					
ANR	833298	Identifier	userlen		833183	1					
ANR	833299	PrimaryExpression	'@'		833183	1					
ANR	833300	ExpressionStatement	"memcpy ( fqu_ + userlen + 1 , remoteDomain_ , domlen )"	177:16:5073:5118	833183	1	True				
ANR	833301	CallExpression	"memcpy ( fqu_ + userlen + 1 , remoteDomain_ , domlen )"		833183	0					
ANR	833302	Callee	memcpy		833183	0					
ANR	833303	Identifier	memcpy		833183	0					
ANR	833304	ArgumentList	fqu_ + userlen + 1		833183	1					
ANR	833305	Argument	fqu_ + userlen + 1		833183	0					
ANR	833306	AdditiveExpression	fqu_ + userlen + 1		833183	0		+			
ANR	833307	Identifier	fqu_		833183	0					
ANR	833308	AdditiveExpression	userlen + 1		833183	1		+			
ANR	833309	Identifier	userlen		833183	0					
ANR	833310	PrimaryExpression	1		833183	1					
ANR	833311	Argument	remoteDomain_		833183	1					
ANR	833312	Identifier	remoteDomain_		833183	0					
ANR	833313	Argument	domlen		833183	2					
ANR	833314	Identifier	domlen		833183	0					
ANR	833315	ExpressionStatement	fqu_ [ len + 1 ] = 0	178:16:5136:5151	833183	2	True				
ANR	833316	AssignmentExpression	fqu_ [ len + 1 ] = 0		833183	0		=			
ANR	833317	ArrayIndexing	fqu_ [ len + 1 ]		833183	0					
ANR	833318	Identifier	fqu_		833183	0					
ANR	833319	AdditiveExpression	len + 1		833183	1		+			
ANR	833320	Identifier	len		833183	0					
ANR	833321	PrimaryExpression	1		833183	1					
ANR	833322	PrimaryExpression	0		833183	1					
ANR	833323	ReturnStatement	return fqu_ ;	183:4:5188:5199	833183	1	True				
ANR	833324	Identifier	fqu_		833183	0					
ANR	833325	ReturnType	const char *		833183	1					
ANR	833326	Identifier	Condor_Auth_Base :: getRemoteFQU		833183	2					
ANR	833327	ParameterList			833183	3					
ANR	833328	CFGEntryNode	ENTRY		833183		True				
ANR	833329	CFGExitNode	EXIT		833183		True				
ANR	833330	Symbol	domlen		833183						
ANR	833331	Symbol	userlen		833183						
ANR	833332	Symbol	strlen		833183						
ANR	833333	Symbol	malloc		833183						
ANR	833334	Symbol	NULL		833183						
ANR	833335	Symbol	len		833183						
ANR	833336	Symbol	fqu_		833183						
ANR	833337	Symbol	* fqu_		833183						
ANR	833338	Symbol	remoteUser_		833183						
ANR	833339	Symbol	remoteDomain_		833183						
ANR	833340	Symbol	* userlen		833183						
ANR	833341	Symbol	* len		833183						
ANR	833342	Function	Condor_Auth_Base :: getAuthenticatedName	186:0:5204:5299							
ANR	833343	FunctionDef	Condor_Auth_Base :: getAuthenticatedName ()		833342	0					
ANR	833344	CompoundStatement		187:0:5266:5299	833342	0					
ANR	833345	ReturnStatement	return authenticatedName_ ;	188:4:5272:5297	833342	0	True				
ANR	833346	Identifier	authenticatedName_		833342	0					
ANR	833347	ReturnType	const char *		833342	1					
ANR	833348	Identifier	Condor_Auth_Base :: getAuthenticatedName		833342	2					
ANR	833349	ParameterList			833342	3					
ANR	833350	CFGEntryNode	ENTRY		833342		True				
ANR	833351	CFGExitNode	EXIT		833342		True				
ANR	833352	Symbol	authenticatedName_		833342						
ANR	833353	Function	Condor_Auth_Base :: getLocalDomain	191:0:5302:5385							
ANR	833354	FunctionDef	Condor_Auth_Base :: getLocalDomain ()		833353	0					
ANR	833355	CompoundStatement		192:0:5358:5385	833353	0					
ANR	833356	ReturnStatement	return localDomain_ ;	193:4:5364:5383	833353	0	True				
ANR	833357	Identifier	localDomain_		833353	0					
ANR	833358	ReturnType	const char *		833353	1					
ANR	833359	Identifier	Condor_Auth_Base :: getLocalDomain		833353	2					
ANR	833360	ParameterList			833353	3					
ANR	833361	CFGEntryNode	ENTRY		833353		True				
ANR	833362	CFGExitNode	EXIT		833353		True				
ANR	833363	Symbol	localDomain_		833353						
ANR	833364	Function	Condor_Auth_Base :: setRemoteDomain	196:0:5392:5964							
ANR	833365	FunctionDef	Condor_Auth_Base :: setRemoteDomain (const char * domain)		833364	0					
ANR	833366	CompoundStatement		197:0:5467:5964	833364	0					
ANR	833367	IfStatement	if ( remoteDomain_ )		833364	0					
ANR	833368	Condition	remoteDomain_	198:8:5477:5489	833364	0	True				
ANR	833369	Identifier	remoteDomain_		833364	0					
ANR	833370	CompoundStatement		2:23:24:24	833364	1					
ANR	833371	ExpressionStatement	free ( remoteDomain_ )	199:8:5502:5521	833364	0	True				
ANR	833372	CallExpression	free ( remoteDomain_ )		833364	0					
ANR	833373	Callee	free		833364	0					
ANR	833374	Identifier	free		833364	0					
ANR	833375	ArgumentList	remoteDomain_		833364	1					
ANR	833376	Argument	remoteDomain_		833364	0					
ANR	833377	Identifier	remoteDomain_		833364	0					
ANR	833378	ExpressionStatement	remoteDomain_ = NULL	200:8:5531:5551	833364	1	True				
ANR	833379	AssignmentExpression	remoteDomain_ = NULL		833364	0		=			
ANR	833380	Identifier	remoteDomain_		833364	0					
ANR	833381	Identifier	NULL		833364	1					
ANR	833382	IfStatement	if ( domain )		833364	1					
ANR	833383	Condition	domain	203:8:5568:5573	833364	0	True				
ANR	833384	Identifier	domain		833364	0					
ANR	833385	CompoundStatement		11:8:300:325	833364	1					
ANR	833386	ExpressionStatement	remoteDomain_ = strdup ( domain )	206:8:5728:5758	833364	0	True				
ANR	833387	AssignmentExpression	remoteDomain_ = strdup ( domain )		833364	0		=			
ANR	833388	Identifier	remoteDomain_		833364	0					
ANR	833389	CallExpression	strdup ( domain )		833364	1					
ANR	833390	Callee	strdup		833364	0					
ANR	833391	Identifier	strdup		833364	0					
ANR	833392	ArgumentList	domain		833364	1					
ANR	833393	Argument	domain		833364	0					
ANR	833394	Identifier	domain		833364	0					
ANR	833395	IdentifierDeclStatement	char * at = remoteDomain_ ;	207:8:5768:5793	833364	1	True				
ANR	833396	IdentifierDecl	* at = remoteDomain_		833364	0					
ANR	833397	IdentifierDeclType	char *		833364	0					
ANR	833398	Identifier	at		833364	1					
ANR	833399	AssignmentExpression	* at = remoteDomain_		833364	2		=			
ANR	833400	Identifier	remoteDomain_		833364	0					
ANR	833401	Identifier	remoteDomain_		833364	1					
ANR	833402	WhileStatement	while ( * at != '\\0' )		833364	2					
ANR	833403	Condition	* at != '\\0'	208:15:5810:5820	833364	0	True				
ANR	833404	EqualityExpression	* at != '\\0'		833364	0		!=			
ANR	833405	UnaryOperationExpression	* at		833364	0					
ANR	833406	UnaryOperator	*		833364	0					
ANR	833407	Identifier	at		833364	1					
ANR	833408	PrimaryExpression	'\\0'		833364	1					
ANR	833409	CompoundStatement		12:28:355:355	833364	1					
ANR	833410	ExpressionStatement	* at = tolower ( ( int ) * at )	209:12:5837:5861	833364	0	True				
ANR	833411	AssignmentExpression	* at = tolower ( ( int ) * at )		833364	0		=			
ANR	833412	UnaryOperationExpression	* at		833364	0					
ANR	833413	UnaryOperator	*		833364	0					
ANR	833414	Identifier	at		833364	1					
ANR	833415	CallExpression	tolower ( ( int ) * at )		833364	1					
ANR	833416	Callee	tolower		833364	0					
ANR	833417	Identifier	tolower		833364	0					
ANR	833418	ArgumentList	( int ) * at		833364	1					
ANR	833419	Argument	( int ) * at		833364	0					
ANR	833420	CastExpression	( int ) * at		833364	0					
ANR	833421	CastTarget	int		833364	0					
ANR	833422	UnaryOperationExpression	* at		833364	1					
ANR	833423	UnaryOperator	*		833364	0					
ANR	833424	Identifier	at		833364	1					
ANR	833425	ExpressionStatement	at ++	210:12:5875:5879	833364	1	True				
ANR	833426	PostIncDecOperationExpression	at ++		833364	0					
ANR	833427	Identifier	at		833364	0					
ANR	833428	IncDec	++		833364	1					
ANR	833429	IfStatement	if ( fqu_ )		833364	2					
ANR	833430	Condition	fqu_	214:4:5902:5905	833364	0	True				
ANR	833431	Identifier	fqu_		833364	0					
ANR	833432	CompoundStatement		18:10:440:440	833364	1					
ANR	833433	ExpressionStatement	free ( fqu_ )	215:2:5912:5922	833364	0	True				
ANR	833434	CallExpression	free ( fqu_ )		833364	0					
ANR	833435	Callee	free		833364	0					
ANR	833436	Identifier	free		833364	0					
ANR	833437	ArgumentList	fqu_		833364	1					
ANR	833438	Argument	fqu_		833364	0					
ANR	833439	Identifier	fqu_		833364	0					
ANR	833440	ExpressionStatement	fqu_ = NULL	216:2:5926:5937	833364	1	True				
ANR	833441	AssignmentExpression	fqu_ = NULL		833364	0		=			
ANR	833442	Identifier	fqu_		833364	0					
ANR	833443	Identifier	NULL		833364	1					
ANR	833444	ReturnStatement	return * this ;	220:4:5950:5962	833364	3	True				
ANR	833445	UnaryOperationExpression	* this		833364	0					
ANR	833446	UnaryOperator	*		833364	0					
ANR	833447	Identifier	this		833364	1					
ANR	833448	ReturnType	Condor_Auth_Base &		833364	1					
ANR	833449	Identifier	Condor_Auth_Base :: setRemoteDomain		833364	2					
ANR	833450	ParameterList	const char * domain		833364	3					
ANR	833451	Parameter	const char * domain	196:54:5446:5464	833364	0	True				
ANR	833452	ParameterType	const char *		833364	0					
ANR	833453	Identifier	domain		833364	1					
ANR	833454	CFGEntryNode	ENTRY		833364		True				
ANR	833455	CFGExitNode	EXIT		833364		True				
ANR	833456	Symbol	* this		833364						
ANR	833457	Symbol	NULL		833364						
ANR	833458	Symbol	at		833364						
ANR	833459	Symbol	tolower		833364						
ANR	833460	Symbol	fqu_		833364						
ANR	833461	Symbol	domain		833364						
ANR	833462	Symbol	this		833364						
ANR	833463	Symbol	remoteDomain_		833364						
ANR	833464	Symbol	* at		833364						
ANR	833465	Symbol	strdup		833364						
ANR	833466	Function	Condor_Auth_Base :: setRemoteHost	223:0:5967:6218							
ANR	833467	FunctionDef	Condor_Auth_Base :: setRemoteHost (const char * hostAddr)		833466	0					
ANR	833468	CompoundStatement		224:0:6042:6218	833466	0					
ANR	833469	IfStatement	if ( remoteHost_ )		833466	0					
ANR	833470	Condition	remoteHost_	225:8:6052:6062	833466	0	True				
ANR	833471	Identifier	remoteHost_		833466	0					
ANR	833472	CompoundStatement		2:21:22:22	833466	1					
ANR	833473	ExpressionStatement	free ( remoteHost_ )	226:8:6075:6092	833466	0	True				
ANR	833474	CallExpression	free ( remoteHost_ )		833466	0					
ANR	833475	Callee	free		833466	0					
ANR	833476	Identifier	free		833466	0					
ANR	833477	ArgumentList	remoteHost_		833466	1					
ANR	833478	Argument	remoteHost_		833466	0					
ANR	833479	Identifier	remoteHost_		833466	0					
ANR	833480	ExpressionStatement	remoteHost_ = NULL	227:8:6102:6120	833466	1	True				
ANR	833481	AssignmentExpression	remoteHost_ = NULL		833466	0		=			
ANR	833482	Identifier	remoteHost_		833466	0					
ANR	833483	Identifier	NULL		833466	1					
ANR	833484	IfStatement	if ( hostAddr )		833466	1					
ANR	833485	Condition	hostAddr	230:8:6141:6148	833466	0	True				
ANR	833486	Identifier	hostAddr		833466	0					
ANR	833487	CompoundStatement		7:18:108:108	833466	1					
ANR	833488	ExpressionStatement	remoteHost_ = strdup ( hostAddr )	231:8:6161:6191	833466	0	True				
ANR	833489	AssignmentExpression	remoteHost_ = strdup ( hostAddr )		833466	0		=			
ANR	833490	Identifier	remoteHost_		833466	0					
ANR	833491	CallExpression	strdup ( hostAddr )		833466	1					
ANR	833492	Callee	strdup		833466	0					
ANR	833493	Identifier	strdup		833466	0					
ANR	833494	ArgumentList	hostAddr		833466	1					
ANR	833495	Argument	hostAddr		833466	0					
ANR	833496	Identifier	hostAddr		833466	0					
ANR	833497	ReturnStatement	return * this ;	234:4:6204:6216	833466	2	True				
ANR	833498	UnaryOperationExpression	* this		833466	0					
ANR	833499	UnaryOperator	*		833466	0					
ANR	833500	Identifier	this		833466	1					
ANR	833501	ReturnType	Condor_Auth_Base &		833466	1					
ANR	833502	Identifier	Condor_Auth_Base :: setRemoteHost		833466	2					
ANR	833503	ParameterList	const char * hostAddr		833466	3					
ANR	833504	Parameter	const char * hostAddr	223:52:6019:6039	833466	0	True				
ANR	833505	ParameterType	const char *		833466	0					
ANR	833506	Identifier	hostAddr		833466	1					
ANR	833507	CFGEntryNode	ENTRY		833466		True				
ANR	833508	CFGExitNode	EXIT		833466		True				
ANR	833509	Symbol	* this		833466						
ANR	833510	Symbol	NULL		833466						
ANR	833511	Symbol	hostAddr		833466						
ANR	833512	Symbol	this		833466						
ANR	833513	Symbol	strdup		833466						
ANR	833514	Symbol	remoteHost_		833466						
ANR	833515	Function	Condor_Auth_Base :: setAuthenticated	237:0:6221:6351							
ANR	833516	FunctionDef	Condor_Auth_Base :: setAuthenticated (int authenticated)		833515	0					
ANR	833517	CompoundStatement		238:0:6295:6351	833515	0					
ANR	833518	ExpressionStatement	authenticated_ = authenticated	239:4:6301:6331	833515	0	True				
ANR	833519	AssignmentExpression	authenticated_ = authenticated		833515	0		=			
ANR	833520	Identifier	authenticated_		833515	0					
ANR	833521	Identifier	authenticated		833515	1					
ANR	833522	ReturnStatement	return * this ;	240:4:6337:6349	833515	1	True				
ANR	833523	UnaryOperationExpression	* this		833515	0					
ANR	833524	UnaryOperator	*		833515	0					
ANR	833525	Identifier	this		833515	1					
ANR	833526	ReturnType	Condor_Auth_Base &		833515	1					
ANR	833527	Identifier	Condor_Auth_Base :: setAuthenticated		833515	2					
ANR	833528	ParameterList	int authenticated		833515	3					
ANR	833529	Parameter	int authenticated	237:55:6276:6292	833515	0	True				
ANR	833530	ParameterType	int		833515	0					
ANR	833531	Identifier	authenticated		833515	1					
ANR	833532	CFGEntryNode	ENTRY		833515		True				
ANR	833533	CFGExitNode	EXIT		833515		True				
ANR	833534	Symbol	* this		833515						
ANR	833535	Symbol	authenticated		833515						
ANR	833536	Symbol	authenticated_		833515						
ANR	833537	Symbol	this		833515						
ANR	833538	Function	Condor_Auth_Base :: setRemoteUser	243:0:6354:6664							
ANR	833539	FunctionDef	Condor_Auth_Base :: setRemoteUser (const char * owner)		833538	0					
ANR	833540	CompoundStatement		244:0:6428:6664	833538	0					
ANR	833541	IfStatement	if ( remoteUser_ )		833538	0					
ANR	833542	Condition	remoteUser_	245:9:6439:6449	833538	0	True				
ANR	833543	Identifier	remoteUser_		833538	0					
ANR	833544	CompoundStatement		2:23:24:24	833538	1					
ANR	833545	ExpressionStatement	free ( remoteUser_ )	246:8:6463:6480	833538	0	True				
ANR	833546	CallExpression	free ( remoteUser_ )		833538	0					
ANR	833547	Callee	free		833538	0					
ANR	833548	Identifier	free		833538	0					
ANR	833549	ArgumentList	remoteUser_		833538	1					
ANR	833550	Argument	remoteUser_		833538	0					
ANR	833551	Identifier	remoteUser_		833538	0					
ANR	833552	ExpressionStatement	remoteUser_ = NULL	247:8:6490:6508	833538	1	True				
ANR	833553	AssignmentExpression	remoteUser_ = NULL		833538	0		=			
ANR	833554	Identifier	remoteUser_		833538	0					
ANR	833555	Identifier	NULL		833538	1					
ANR	833556	IfStatement	if ( fqu_ )		833538	1					
ANR	833557	Condition	fqu_	249:4:6520:6523	833538	0	True				
ANR	833558	Identifier	fqu_		833538	0					
ANR	833559	CompoundStatement		6:10:97:97	833538	1					
ANR	833560	ExpressionStatement	free ( fqu_ )	250:2:6530:6540	833538	0	True				
ANR	833561	CallExpression	free ( fqu_ )		833538	0					
ANR	833562	Callee	free		833538	0					
ANR	833563	Identifier	free		833538	0					
ANR	833564	ArgumentList	fqu_		833538	1					
ANR	833565	Argument	fqu_		833538	0					
ANR	833566	Identifier	fqu_		833538	0					
ANR	833567	ExpressionStatement	fqu_ = NULL	251:2:6544:6555	833538	1	True				
ANR	833568	AssignmentExpression	fqu_ = NULL		833538	0		=			
ANR	833569	Identifier	fqu_		833538	0					
ANR	833570	Identifier	NULL		833538	1					
ANR	833571	IfStatement	if ( owner )		833538	2					
ANR	833572	Condition	owner	254:9:6570:6574	833538	0	True				
ANR	833573	Identifier	owner		833538	0					
ANR	833574	CompoundStatement		11:17:149:149	833538	1					
ANR	833575	ExpressionStatement	remoteUser_ = strdup ( owner )	255:8:6588:6617	833538	0	True				
ANR	833576	AssignmentExpression	remoteUser_ = strdup ( owner )		833538	0		=			
ANR	833577	Identifier	remoteUser_		833538	0					
ANR	833578	CallExpression	strdup ( owner )		833538	1					
ANR	833579	Callee	strdup		833538	0					
ANR	833580	Identifier	strdup		833538	0					
ANR	833581	ArgumentList	owner		833538	1					
ANR	833582	Argument	owner		833538	0					
ANR	833583	Identifier	owner		833538	0					
ANR	833584	ReturnStatement	return * this ;	257:4:6650:6662	833538	3	True				
ANR	833585	UnaryOperationExpression	* this		833538	0					
ANR	833586	UnaryOperator	*		833538	0					
ANR	833587	Identifier	this		833538	1					
ANR	833588	ReturnType	Condor_Auth_Base &		833538	1					
ANR	833589	Identifier	Condor_Auth_Base :: setRemoteUser		833538	2					
ANR	833590	ParameterList	const char * owner		833538	3					
ANR	833591	Parameter	const char * owner	243:53:6407:6423	833538	0	True				
ANR	833592	ParameterType	const char *		833538	0					
ANR	833593	Identifier	owner		833538	1					
ANR	833594	CFGEntryNode	ENTRY		833538		True				
ANR	833595	CFGExitNode	EXIT		833538		True				
ANR	833596	Symbol	owner		833538						
ANR	833597	Symbol	* this		833538						
ANR	833598	Symbol	NULL		833538						
ANR	833599	Symbol	fqu_		833538						
ANR	833600	Symbol	remoteUser_		833538						
ANR	833601	Symbol	this		833538						
ANR	833602	Symbol	strdup		833538						
ANR	833603	Function	Condor_Auth_Base :: setAuthenticatedName	264:0:6900:7189							
ANR	833604	FunctionDef	Condor_Auth_Base :: setAuthenticatedName (const char * auth_name)		833603	0					
ANR	833605	CompoundStatement		265:0:6983:7189	833603	0					
ANR	833606	IfStatement	if ( authenticatedName_ )		833603	0					
ANR	833607	Condition	authenticatedName_	266:8:6993:7010	833603	0	True				
ANR	833608	Identifier	authenticatedName_		833603	0					
ANR	833609	CompoundStatement		2:28:29:29	833603	1					
ANR	833610	ExpressionStatement	free ( authenticatedName_ )	267:8:7023:7047	833603	0	True				
ANR	833611	CallExpression	free ( authenticatedName_ )		833603	0					
ANR	833612	Callee	free		833603	0					
ANR	833613	Identifier	free		833603	0					
ANR	833614	ArgumentList	authenticatedName_		833603	1					
ANR	833615	Argument	authenticatedName_		833603	0					
ANR	833616	Identifier	authenticatedName_		833603	0					
ANR	833617	ExpressionStatement	authenticatedName_ = NULL	268:8:7057:7082	833603	1	True				
ANR	833618	AssignmentExpression	authenticatedName_ = NULL		833603	0		=			
ANR	833619	Identifier	authenticatedName_		833603	0					
ANR	833620	Identifier	NULL		833603	1					
ANR	833621	IfStatement	if ( auth_name )		833603	1					
ANR	833622	Condition	auth_name	271:8:7103:7111	833603	0	True				
ANR	833623	Identifier	auth_name		833603	0					
ANR	833624	CompoundStatement		7:19:130:130	833603	1					
ANR	833625	ExpressionStatement	authenticatedName_ = strdup ( auth_name )	272:8:7124:7162	833603	0	True				
ANR	833626	AssignmentExpression	authenticatedName_ = strdup ( auth_name )		833603	0		=			
ANR	833627	Identifier	authenticatedName_		833603	0					
ANR	833628	CallExpression	strdup ( auth_name )		833603	1					
ANR	833629	Callee	strdup		833603	0					
ANR	833630	Identifier	strdup		833603	0					
ANR	833631	ArgumentList	auth_name		833603	1					
ANR	833632	Argument	auth_name		833603	0					
ANR	833633	Identifier	auth_name		833603	0					
ANR	833634	ReturnStatement	return * this ;	275:4:7175:7187	833603	2	True				
ANR	833635	UnaryOperationExpression	* this		833603	0					
ANR	833636	UnaryOperator	*		833603	0					
ANR	833637	Identifier	this		833603	1					
ANR	833638	ReturnType	Condor_Auth_Base &		833603	1					
ANR	833639	Identifier	Condor_Auth_Base :: setAuthenticatedName		833603	2					
ANR	833640	ParameterList	const char * auth_name		833603	3					
ANR	833641	Parameter	const char * auth_name	264:59:6959:6980	833603	0	True				
ANR	833642	ParameterType	const char *		833603	0					
ANR	833643	Identifier	auth_name		833603	1					
ANR	833644	CFGEntryNode	ENTRY		833603		True				
ANR	833645	CFGExitNode	EXIT		833603		True				
ANR	833646	Symbol	* this		833603						
ANR	833647	Symbol	auth_name		833603						
ANR	833648	Symbol	NULL		833603						
ANR	833649	Symbol	this		833603						
ANR	833650	Symbol	authenticatedName_		833603						
ANR	833651	Symbol	strdup		833603						
ANR	833652	Function	Condor_Auth_Base :: isDaemon	279:0:7193:7259							
ANR	833653	FunctionDef	Condor_Auth_Base :: isDaemon ()		833652	0					
ANR	833654	CompoundStatement		280:0:7235:7259	833652	0					
ANR	833655	ReturnStatement	return isDaemon_ ;	281:4:7241:7257	833652	0	True				
ANR	833656	Identifier	isDaemon_		833652	0					
ANR	833657	ReturnType	bool		833652	1					
ANR	833658	Identifier	Condor_Auth_Base :: isDaemon		833652	2					
ANR	833659	ParameterList			833652	3					
ANR	833660	CFGEntryNode	ENTRY		833652		True				
ANR	833661	CFGExitNode	EXIT		833652		True				
ANR	833662	Symbol	isDaemon_		833652						
ANR	833663	Function	Condor_Auth_Base :: endTime	284:0:7262:7319							
ANR	833664	FunctionDef	Condor_Auth_Base :: endTime ()		833663	0					
ANR	833665	CompoundStatement		285:0:7302:7319	833663	0					
ANR	833666	ReturnStatement	return - 1 ;	286:4:7308:7317	833663	0	True				
ANR	833667	UnaryOperationExpression	- 1		833663	0					
ANR	833668	UnaryOperator	-		833663	0					
ANR	833669	PrimaryExpression	1		833663	1					
ANR	833670	ReturnType	int		833663	1					
ANR	833671	Identifier	Condor_Auth_Base :: endTime		833663	2					
ANR	833672	ParameterList			833663	3					
ANR	833673	CFGEntryNode	ENTRY		833663		True				
ANR	833674	CFGExitNode	EXIT		833663		True				
