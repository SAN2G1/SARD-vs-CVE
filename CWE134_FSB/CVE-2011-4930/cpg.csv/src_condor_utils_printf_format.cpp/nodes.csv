command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4844215	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_printf_format.cpp								
ANR	4844216	Function	isFlagChar	29:0:969:1111							
ANR	4844217	FunctionDef	isFlagChar (char c)		4844216	0					
ANR	4844218	CompoundStatement		31:0:1001:1111	4844216	0					
ANR	4844219	SwitchStatement	switch ( c )		4844216	0					
ANR	4844220	Condition	c	32:9:1012:1012	4844216	0	True				
ANR	4844221	Identifier	c		4844216	0					
ANR	4844222	CompoundStatement		2:13:14:14	4844216	1					
ANR	4844223	Label	case '#' :	33:1:1019:1027	4844216	0	True				
ANR	4844224	Label	case '0' :	34:1:1030:1038	4844216	1	True				
ANR	4844225	Label	case '-' :	35:1:1041:1049	4844216	2	True				
ANR	4844226	Label	case ' ' :	36:1:1052:1060	4844216	3	True				
ANR	4844227	Label	case '+' :	37:1:1063:1071	4844216	4	True				
ANR	4844228	Label	case '\\'' :	38:1:1074:1083	4844216	5	True				
ANR	4844229	ReturnStatement	return 1 ;	39:2:1087:1095	4844216	6	True				
ANR	4844230	PrimaryExpression	1		4844216	0					
ANR	4844231	ReturnStatement	return 0 ;	41:1:1101:1109	4844216	1	True				
ANR	4844232	PrimaryExpression	0		4844216	0					
ANR	4844233	ReturnType	static int		4844216	1					
ANR	4844234	Identifier	isFlagChar		4844216	2					
ANR	4844235	ParameterList	char c		4844216	3					
ANR	4844236	Parameter	char c	30:12:992:997	4844216	0	True				
ANR	4844237	ParameterType	char		4844216	0					
ANR	4844238	Identifier	c		4844216	1					
ANR	4844239	CFGEntryNode	ENTRY		4844216		True				
ANR	4844240	CFGExitNode	EXIT		4844216		True				
ANR	4844241	Symbol	c		4844216						
ANR	4844242	Function	isLengthChar	45:0:1117:1271							
ANR	4844243	FunctionDef	isLengthChar (char c)		4844242	0					
ANR	4844244	CompoundStatement		47:0:1151:1271	4844242	0					
ANR	4844245	SwitchStatement	switch ( c )		4844242	0					
ANR	4844246	Condition	c	48:9:1162:1162	4844242	0	True				
ANR	4844247	Identifier	c		4844242	0					
ANR	4844248	CompoundStatement		2:13:14:14	4844242	1					
ANR	4844249	Label	case 'h' :	49:1:1169:1177	4844242	0	True				
ANR	4844250	Label	case 'l' :	50:1:1180:1188	4844242	1	True				
ANR	4844251	Label	case 'L' :	51:1:1191:1199	4844242	2	True				
ANR	4844252	Label	case 'q' :	52:1:1202:1210	4844242	3	True				
ANR	4844253	Label	case 'j' :	53:1:1213:1221	4844242	4	True				
ANR	4844254	Label	case 'z' :	54:1:1224:1232	4844242	5	True				
ANR	4844255	Label	case 't' :	55:1:1235:1243	4844242	6	True				
ANR	4844256	ReturnStatement	return 1 ;	56:2:1247:1255	4844242	7	True				
ANR	4844257	PrimaryExpression	1		4844242	0					
ANR	4844258	ReturnStatement	return 0 ;	58:1:1261:1269	4844242	1	True				
ANR	4844259	PrimaryExpression	0		4844242	0					
ANR	4844260	ReturnType	static int		4844242	1					
ANR	4844261	Identifier	isLengthChar		4844242	2					
ANR	4844262	ParameterList	char c		4844242	3					
ANR	4844263	Parameter	char c	46:14:1142:1147	4844242	0	True				
ANR	4844264	ParameterType	char		4844242	0					
ANR	4844265	Identifier	c		4844242	1					
ANR	4844266	CFGEntryNode	ENTRY		4844242		True				
ANR	4844267	CFGExitNode	EXIT		4844242		True				
ANR	4844268	Symbol	c		4844242						
ANR	4844269	Function	consumeInt	70:0:1656:2107							
ANR	4844270	FunctionDef	consumeInt (const char * * str)		4844269	0					
ANR	4844271	CompoundStatement		72:0:1698:2107	4844269	0					
ANR	4844272	IdentifierDeclStatement	int rval = 0 ;	73:1:1701:1713	4844269	0	True				
ANR	4844273	IdentifierDecl	rval = 0		4844269	0					
ANR	4844274	IdentifierDeclType	int		4844269	0					
ANR	4844275	Identifier	rval		4844269	1					
ANR	4844276	AssignmentExpression	rval = 0		4844269	2		=			
ANR	4844277	Identifier	rval		4844269	0					
ANR	4844278	PrimaryExpression	0		4844269	1					
ANR	4844279	IdentifierDeclStatement	int digit_val ;	74:1:1716:1729	4844269	1	True				
ANR	4844280	IdentifierDecl	digit_val		4844269	0					
ANR	4844281	IdentifierDeclType	int		4844269	0					
ANR	4844282	Identifier	digit_val		4844269	1					
ANR	4844283	IfStatement	if ( ! str || ! * str )		4844269	2					
ANR	4844284	Condition	! str || ! * str	76:5:1737:1750	4844269	0	True				
ANR	4844285	OrExpression	! str || ! * str		4844269	0		||			
ANR	4844286	UnaryOperationExpression	! str		4844269	0					
ANR	4844287	UnaryOperator	!		4844269	0					
ANR	4844288	Identifier	str		4844269	1					
ANR	4844289	UnaryOperationExpression	! * str		4844269	1					
ANR	4844290	UnaryOperator	!		4844269	0					
ANR	4844291	UnaryOperationExpression	* str		4844269	1					
ANR	4844292	UnaryOperator	*		4844269	0					
ANR	4844293	Identifier	str		4844269	1					
ANR	4844294	CompoundStatement		5:22:55:55	4844269	1					
ANR	4844295	ReturnStatement	return - 1 ;	77:2:1758:1767	4844269	0	True				
ANR	4844296	UnaryOperationExpression	- 1		4844269	0					
ANR	4844297	UnaryOperator	-		4844269	0					
ANR	4844298	PrimaryExpression	1		4844269	1					
ANR	4844299	WhileStatement	while ( isdigit ( * * str ) )		4844269	3					
ANR	4844300	Condition	isdigit ( * * str )	80:8:1781:1794	4844269	0	True				
ANR	4844301	CallExpression	isdigit ( * * str )		4844269	0					
ANR	4844302	Callee	isdigit		4844269	0					
ANR	4844303	Identifier	isdigit		4844269	0					
ANR	4844304	ArgumentList	* * str		4844269	1					
ANR	4844305	Argument	* * str		4844269	0					
ANR	4844306	UnaryOperationExpression	* * str		4844269	0					
ANR	4844307	UnaryOperator	*		4844269	0					
ANR	4844308	UnaryOperationExpression	* str		4844269	1					
ANR	4844309	UnaryOperator	*		4844269	0					
ANR	4844310	Identifier	str		4844269	1					
ANR	4844311	CompoundStatement		9:25:99:99	4844269	1					
ANR	4844312	ExpressionStatement	digit_val = * * str - '0'	84:2:1970:1993	4844269	0	True				
ANR	4844313	AssignmentExpression	digit_val = * * str - '0'		4844269	0		=			
ANR	4844314	Identifier	digit_val		4844269	0					
ANR	4844315	AdditiveExpression	* * str - '0'		4844269	1		-			
ANR	4844316	UnaryOperationExpression	* * str		4844269	0					
ANR	4844317	UnaryOperator	*		4844269	0					
ANR	4844318	UnaryOperationExpression	* str		4844269	1					
ANR	4844319	UnaryOperator	*		4844269	0					
ANR	4844320	Identifier	str		4844269	1					
ANR	4844321	PrimaryExpression	'0'		4844269	1					
ANR	4844322	ExpressionStatement	rval *= 10	85:2:1997:2007	4844269	1	True				
ANR	4844323	AssignmentExpression	rval *= 10		4844269	0		*=			
ANR	4844324	Identifier	rval		4844269	0					
ANR	4844325	PrimaryExpression	10		4844269	1					
ANR	4844326	ExpressionStatement	rval += digit_val	86:2:2011:2028	4844269	2	True				
ANR	4844327	AssignmentExpression	rval += digit_val		4844269	0		+=			
ANR	4844328	Identifier	rval		4844269	0					
ANR	4844329	Identifier	digit_val		4844269	1					
ANR	4844330	ExpressionStatement	( * str ) ++	88:2:2080:2088	4844269	3	True				
ANR	4844331	PostIncDecOperationExpression	( * str ) ++		4844269	0					
ANR	4844332	UnaryOperationExpression	* str		4844269	0					
ANR	4844333	UnaryOperator	*		4844269	0					
ANR	4844334	Identifier	str		4844269	1					
ANR	4844335	IncDec	++		4844269	1					
ANR	4844336	ReturnStatement	return rval ;	90:1:2094:2105	4844269	4	True				
ANR	4844337	Identifier	rval		4844269	0					
ANR	4844338	ReturnType	static int		4844269	1					
ANR	4844339	Identifier	consumeInt		4844269	2					
ANR	4844340	ParameterList	const char * * str		4844269	3					
ANR	4844341	Parameter	const char * * str	71:12:1679:1694	4844269	0	True				
ANR	4844342	ParameterType	const char * *		4844269	0					
ANR	4844343	Identifier	str		4844269	1					
ANR	4844344	CFGEntryNode	ENTRY		4844269		True				
ANR	4844345	CFGExitNode	EXIT		4844269		True				
ANR	4844346	Symbol	str		4844269						
ANR	4844347	Symbol	* * str		4844269						
ANR	4844348	Symbol	rval		4844269						
ANR	4844349	Symbol	digit_val		4844269						
ANR	4844350	Symbol	* str		4844269						
ANR	4844351	Symbol	isdigit		4844269						
ANR	4844352	Function	parsePrintfFormat	120:0:3553:7813							
ANR	4844353	FunctionDef	"parsePrintfFormat (const char * * fmt_p , struct printf_fmt_info * info)"		4844352	0					
ANR	4844354	CompoundStatement		122:0:3627:7813	4844352	0					
ANR	4844355	IfStatement	if ( ! * * fmt_p )		4844352	0					
ANR	4844356	Condition	! * * fmt_p	123:5:3634:3642	4844352	0	True				
ANR	4844357	UnaryOperationExpression	! * * fmt_p		4844352	0					
ANR	4844358	UnaryOperator	!		4844352	0					
ANR	4844359	UnaryOperationExpression	* * fmt_p		4844352	1					
ANR	4844360	UnaryOperator	*		4844352	0					
ANR	4844361	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844362	UnaryOperator	*		4844352	0					
ANR	4844363	Identifier	fmt_p		4844352	1					
ANR	4844364	CompoundStatement		2:17:18:18	4844352	1					
ANR	4844365	ReturnStatement	return FALSE ;	124:2:3650:3662	4844352	0	True				
ANR	4844366	Identifier	FALSE		4844352	0					
ANR	4844367	WhileStatement	while ( * * fmt_p && * * fmt_p != '%' )		4844352	1					
ANR	4844368	Condition	* * fmt_p && * * fmt_p != '%'	128:8:3713:3737	4844352	0	True				
ANR	4844369	AndExpression	* * fmt_p && * * fmt_p != '%'		4844352	0		&&			
ANR	4844370	UnaryOperationExpression	* * fmt_p		4844352	0					
ANR	4844371	UnaryOperator	*		4844352	0					
ANR	4844372	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844373	UnaryOperator	*		4844352	0					
ANR	4844374	Identifier	fmt_p		4844352	1					
ANR	4844375	EqualityExpression	* * fmt_p != '%'		4844352	1		!=			
ANR	4844376	UnaryOperationExpression	* * fmt_p		4844352	0					
ANR	4844377	UnaryOperator	*		4844352	0					
ANR	4844378	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844379	UnaryOperator	*		4844352	0					
ANR	4844380	Identifier	fmt_p		4844352	1					
ANR	4844381	PrimaryExpression	'%'		4844352	1					
ANR	4844382	CompoundStatement		7:36:113:113	4844352	1					
ANR	4844383	ExpressionStatement	( * fmt_p ) ++	129:2:3745:3755	4844352	0	True				
ANR	4844384	PostIncDecOperationExpression	( * fmt_p ) ++		4844352	0					
ANR	4844385	UnaryOperationExpression	* fmt_p		4844352	0					
ANR	4844386	UnaryOperator	*		4844352	0					
ANR	4844387	Identifier	fmt_p		4844352	1					
ANR	4844388	IncDec	++		4844352	1					
ANR	4844389	IfStatement	if ( ! * * fmt_p )		4844352	2					
ANR	4844390	Condition	! * * fmt_p	132:5:3787:3795	4844352	0	True				
ANR	4844391	UnaryOperationExpression	! * * fmt_p		4844352	0					
ANR	4844392	UnaryOperator	!		4844352	0					
ANR	4844393	UnaryOperationExpression	* * fmt_p		4844352	1					
ANR	4844394	UnaryOperator	*		4844352	0					
ANR	4844395	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844396	UnaryOperator	*		4844352	0					
ANR	4844397	Identifier	fmt_p		4844352	1					
ANR	4844398	CompoundStatement		11:16:170:170	4844352	1					
ANR	4844399	ReturnStatement	return FALSE ;	133:2:3802:3814	4844352	0	True				
ANR	4844400	Identifier	FALSE		4844352	0					
ANR	4844401	ExpressionStatement	( * fmt_p ) ++	136:1:3852:3862	4844352	3	True				
ANR	4844402	PostIncDecOperationExpression	( * fmt_p ) ++		4844352	0					
ANR	4844403	UnaryOperationExpression	* fmt_p		4844352	0					
ANR	4844404	UnaryOperator	*		4844352	0					
ANR	4844405	Identifier	fmt_p		4844352	1					
ANR	4844406	IncDec	++		4844352	1					
ANR	4844407	IfStatement	if ( ! * * fmt_p )		4844352	4					
ANR	4844408	Condition	! * * fmt_p	137:5:3869:3877	4844352	0	True				
ANR	4844409	UnaryOperationExpression	! * * fmt_p		4844352	0					
ANR	4844410	UnaryOperator	!		4844352	0					
ANR	4844411	UnaryOperationExpression	* * fmt_p		4844352	1					
ANR	4844412	UnaryOperator	*		4844352	0					
ANR	4844413	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844414	UnaryOperator	*		4844352	0					
ANR	4844415	Identifier	fmt_p		4844352	1					
ANR	4844416	CompoundStatement		16:17:253:253	4844352	1					
ANR	4844417	ReturnStatement	return FALSE ;	138:2:3885:3897	4844352	0	True				
ANR	4844418	Identifier	FALSE		4844352	0					
ANR	4844419	IfStatement	if ( ! info )		4844352	5					
ANR	4844420	Condition	! info	142:5:3952:3957	4844352	0	True				
ANR	4844421	UnaryOperationExpression	! info		4844352	0					
ANR	4844422	UnaryOperator	!		4844352	0					
ANR	4844423	Identifier	info		4844352	1					
ANR	4844424	CompoundStatement		21:14:333:333	4844352	1					
ANR	4844425	ReturnStatement	return FALSE ;	143:2:3965:3977	4844352	0	True				
ANR	4844426	Identifier	FALSE		4844352	0					
ANR	4844427	ExpressionStatement	"memset ( info , '\\0' , sizeof ( struct printf_fmt_info ) )"	145:1:3983:4035	4844352	6	True				
ANR	4844428	CallExpression	"memset ( info , '\\0' , sizeof ( struct printf_fmt_info ) )"		4844352	0					
ANR	4844429	Callee	memset		4844352	0					
ANR	4844430	Identifier	memset		4844352	0					
ANR	4844431	ArgumentList	info		4844352	1					
ANR	4844432	Argument	info		4844352	0					
ANR	4844433	Identifier	info		4844352	0					
ANR	4844434	Argument	'\\0'		4844352	1					
ANR	4844435	PrimaryExpression	'\\0'		4844352	0					
ANR	4844436	Argument	sizeof ( struct printf_fmt_info )		4844352	2					
ANR	4844437	SizeofExpression	sizeof ( struct printf_fmt_info )		4844352	0					
ANR	4844438	Sizeof	sizeof		4844352	0					
ANR	4844439	SizeofOperand	struct printf_fmt_info		4844352	1					
ANR	4844440	WhileStatement	while ( * * fmt_p && isFlagChar ( * * fmt_p ) )		4844352	7					
ANR	4844441	Condition	* * fmt_p && isFlagChar ( * * fmt_p )	148:8:4086:4115	4844352	0	True				
ANR	4844442	AndExpression	* * fmt_p && isFlagChar ( * * fmt_p )		4844352	0		&&			
ANR	4844443	UnaryOperationExpression	* * fmt_p		4844352	0					
ANR	4844444	UnaryOperator	*		4844352	0					
ANR	4844445	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844446	UnaryOperator	*		4844352	0					
ANR	4844447	Identifier	fmt_p		4844352	1					
ANR	4844448	CallExpression	isFlagChar ( * * fmt_p )		4844352	1					
ANR	4844449	Callee	isFlagChar		4844352	0					
ANR	4844450	Identifier	isFlagChar		4844352	0					
ANR	4844451	ArgumentList	* * fmt_p		4844352	1					
ANR	4844452	Argument	* * fmt_p		4844352	0					
ANR	4844453	UnaryOperationExpression	* * fmt_p		4844352	0					
ANR	4844454	UnaryOperator	*		4844352	0					
ANR	4844455	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844456	UnaryOperator	*		4844352	0					
ANR	4844457	Identifier	fmt_p		4844352	1					
ANR	4844458	CompoundStatement		27:41:491:491	4844352	1					
ANR	4844459	SwitchStatement	switch ( * * fmt_p )		4844352	0					
ANR	4844460	Condition	* * fmt_p	149:10:4131:4137	4844352	0	True				
ANR	4844461	UnaryOperationExpression	* * fmt_p		4844352	0					
ANR	4844462	UnaryOperator	*		4844352	0					
ANR	4844463	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844464	UnaryOperator	*		4844352	0					
ANR	4844465	Identifier	fmt_p		4844352	1					
ANR	4844466	CompoundStatement		28:20:513:513	4844352	1					
ANR	4844467	Label	case '#' :	150:2:4145:4153	4844352	0	True				
ANR	4844468	ExpressionStatement	info -> is_alt = 1	152:3:4221:4237	4844352	1	True				
ANR	4844469	AssignmentExpression	info -> is_alt = 1		4844352	0		=			
ANR	4844470	PtrMemberAccess	info -> is_alt		4844352	0					
ANR	4844471	Identifier	info		4844352	0					
ANR	4844472	Identifier	is_alt		4844352	1					
ANR	4844473	PrimaryExpression	1		4844352	1					
ANR	4844474	BreakStatement	break ;	153:3:4242:4247	4844352	2	True				
ANR	4844475	Label	case '0' :	155:2:4252:4260	4844352	3	True				
ANR	4844476	ExpressionStatement	info -> is_pad = 1	157:3:4307:4323	4844352	4	True				
ANR	4844477	AssignmentExpression	info -> is_pad = 1		4844352	0		=			
ANR	4844478	PtrMemberAccess	info -> is_pad		4844352	0					
ANR	4844479	Identifier	info		4844352	0					
ANR	4844480	Identifier	is_pad		4844352	1					
ANR	4844481	PrimaryExpression	1		4844352	1					
ANR	4844482	BreakStatement	break ;	158:3:4328:4333	4844352	5	True				
ANR	4844483	Label	case '-' :	160:2:4338:4346	4844352	6	True				
ANR	4844484	ExpressionStatement	info -> is_left = 1	162:3:4404:4421	4844352	7	True				
ANR	4844485	AssignmentExpression	info -> is_left = 1		4844352	0		=			
ANR	4844486	PtrMemberAccess	info -> is_left		4844352	0					
ANR	4844487	Identifier	info		4844352	0					
ANR	4844488	Identifier	is_left		4844352	1					
ANR	4844489	PrimaryExpression	1		4844352	1					
ANR	4844490	BreakStatement	break ;	163:3:4426:4431	4844352	8	True				
ANR	4844491	Label	case ' ' :	165:2:4436:4444	4844352	9	True				
ANR	4844492	ExpressionStatement	info -> is_space = 1	167:3:4507:4525	4844352	10	True				
ANR	4844493	AssignmentExpression	info -> is_space = 1		4844352	0		=			
ANR	4844494	PtrMemberAccess	info -> is_space		4844352	0					
ANR	4844495	Identifier	info		4844352	0					
ANR	4844496	Identifier	is_space		4844352	1					
ANR	4844497	PrimaryExpression	1		4844352	1					
ANR	4844498	BreakStatement	break ;	168:3:4530:4535	4844352	11	True				
ANR	4844499	Label	case '+' :	170:2:4540:4548	4844352	12	True				
ANR	4844500	ExpressionStatement	info -> is_signed = 1	172:3:4609:4628	4844352	13	True				
ANR	4844501	AssignmentExpression	info -> is_signed = 1		4844352	0		=			
ANR	4844502	PtrMemberAccess	info -> is_signed		4844352	0					
ANR	4844503	Identifier	info		4844352	0					
ANR	4844504	Identifier	is_signed		4844352	1					
ANR	4844505	PrimaryExpression	1		4844352	1					
ANR	4844506	BreakStatement	break ;	173:3:4633:4638	4844352	14	True				
ANR	4844507	Label	case '\\'' :	175:2:4643:4652	4844352	15	True				
ANR	4844508	ExpressionStatement	info -> is_grouped = 1	178:3:4741:4761	4844352	16	True				
ANR	4844509	AssignmentExpression	info -> is_grouped = 1		4844352	0		=			
ANR	4844510	PtrMemberAccess	info -> is_grouped		4844352	0					
ANR	4844511	Identifier	info		4844352	0					
ANR	4844512	Identifier	is_grouped		4844352	1					
ANR	4844513	PrimaryExpression	1		4844352	1					
ANR	4844514	BreakStatement	break ;	179:3:4766:4771	4844352	17	True				
ANR	4844515	ExpressionStatement	( * fmt_p ) ++	181:2:4779:4789	4844352	1	True				
ANR	4844516	PostIncDecOperationExpression	( * fmt_p ) ++		4844352	0					
ANR	4844517	UnaryOperationExpression	* fmt_p		4844352	0					
ANR	4844518	UnaryOperator	*		4844352	0					
ANR	4844519	Identifier	fmt_p		4844352	1					
ANR	4844520	IncDec	++		4844352	1					
ANR	4844521	IfStatement	if ( * * fmt_p == '*' )		4844352	8					
ANR	4844522	Condition	* * fmt_p == '*'	186:5:4839:4852	4844352	0	True				
ANR	4844523	EqualityExpression	* * fmt_p == '*'		4844352	0		==			
ANR	4844524	UnaryOperationExpression	* * fmt_p		4844352	0					
ANR	4844525	UnaryOperator	*		4844352	0					
ANR	4844526	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844527	UnaryOperator	*		4844352	0					
ANR	4844528	Identifier	fmt_p		4844352	1					
ANR	4844529	PrimaryExpression	'*'		4844352	1					
ANR	4844530	CompoundStatement		65:22:1228:1228	4844352	1					
ANR	4844531	ElseStatement	else		4844352	0					
ANR	4844532	IfStatement	if ( isdigit ( * * fmt_p ) )		4844352	0					
ANR	4844533	Condition	isdigit ( * * fmt_p )	188:15:4939:4954	4844352	0	True				
ANR	4844534	CallExpression	isdigit ( * * fmt_p )		4844352	0					
ANR	4844535	Callee	isdigit		4844352	0					
ANR	4844536	Identifier	isdigit		4844352	0					
ANR	4844537	ArgumentList	* * fmt_p		4844352	1					
ANR	4844538	Argument	* * fmt_p		4844352	0					
ANR	4844539	UnaryOperationExpression	* * fmt_p		4844352	0					
ANR	4844540	UnaryOperator	*		4844352	0					
ANR	4844541	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844542	UnaryOperator	*		4844352	0					
ANR	4844543	Identifier	fmt_p		4844352	1					
ANR	4844544	CompoundStatement		67:34:1330:1330	4844352	1					
ANR	4844545	ExpressionStatement	info -> width = consumeInt ( fmt_p )	190:2:4991:5024	4844352	0	True				
ANR	4844546	AssignmentExpression	info -> width = consumeInt ( fmt_p )		4844352	0		=			
ANR	4844547	PtrMemberAccess	info -> width		4844352	0					
ANR	4844548	Identifier	info		4844352	0					
ANR	4844549	Identifier	width		4844352	1					
ANR	4844550	CallExpression	consumeInt ( fmt_p )		4844352	1					
ANR	4844551	Callee	consumeInt		4844352	0					
ANR	4844552	Identifier	consumeInt		4844352	0					
ANR	4844553	ArgumentList	fmt_p		4844352	1					
ANR	4844554	Argument	fmt_p		4844352	0					
ANR	4844555	Identifier	fmt_p		4844352	0					
ANR	4844556	IfStatement	if ( ! * * fmt_p )		4844352	9					
ANR	4844557	Condition	! * * fmt_p	192:5:5034:5042	4844352	0	True				
ANR	4844558	UnaryOperationExpression	! * * fmt_p		4844352	0					
ANR	4844559	UnaryOperator	!		4844352	0					
ANR	4844560	UnaryOperationExpression	* * fmt_p		4844352	1					
ANR	4844561	UnaryOperator	*		4844352	0					
ANR	4844562	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844563	UnaryOperator	*		4844352	0					
ANR	4844564	Identifier	fmt_p		4844352	1					
ANR	4844565	CompoundStatement		71:17:1418:1418	4844352	1					
ANR	4844566	ReturnStatement	return FALSE ;	193:2:5050:5062	4844352	0	True				
ANR	4844567	Identifier	FALSE		4844352	0					
ANR	4844568	ExpressionStatement	info -> precision = - 1	199:1:5211:5231	4844352	10	True				
ANR	4844569	AssignmentExpression	info -> precision = - 1		4844352	0		=			
ANR	4844570	PtrMemberAccess	info -> precision		4844352	0					
ANR	4844571	Identifier	info		4844352	0					
ANR	4844572	Identifier	precision		4844352	1					
ANR	4844573	UnaryOperationExpression	- 1		4844352	1					
ANR	4844574	UnaryOperator	-		4844352	0					
ANR	4844575	PrimaryExpression	1		4844352	1					
ANR	4844576	IfStatement	if ( * * fmt_p == '.' )		4844352	11					
ANR	4844577	Condition	* * fmt_p == '.'	200:5:5238:5251	4844352	0	True				
ANR	4844578	EqualityExpression	* * fmt_p == '.'		4844352	0		==			
ANR	4844579	UnaryOperationExpression	* * fmt_p		4844352	0					
ANR	4844580	UnaryOperator	*		4844352	0					
ANR	4844581	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844582	UnaryOperator	*		4844352	0					
ANR	4844583	Identifier	fmt_p		4844352	1					
ANR	4844584	PrimaryExpression	'.'		4844352	1					
ANR	4844585	CompoundStatement		79:21:1626:1626	4844352	1					
ANR	4844586	ExpressionStatement	( * fmt_p ) ++	202:2:5312:5322	4844352	0	True				
ANR	4844587	PostIncDecOperationExpression	( * fmt_p ) ++		4844352	0					
ANR	4844588	UnaryOperationExpression	* fmt_p		4844352	0					
ANR	4844589	UnaryOperator	*		4844352	0					
ANR	4844590	Identifier	fmt_p		4844352	1					
ANR	4844591	IncDec	++		4844352	1					
ANR	4844592	IfStatement	if ( ! * * fmt_p )		4844352	1					
ANR	4844593	Condition	! * * fmt_p	203:6:5330:5338	4844352	0	True				
ANR	4844594	UnaryOperationExpression	! * * fmt_p		4844352	0					
ANR	4844595	UnaryOperator	!		4844352	0					
ANR	4844596	UnaryOperationExpression	* * fmt_p		4844352	1					
ANR	4844597	UnaryOperator	*		4844352	0					
ANR	4844598	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844599	UnaryOperator	*		4844352	0					
ANR	4844600	Identifier	fmt_p		4844352	1					
ANR	4844601	CompoundStatement		82:18:1714:1714	4844352	1					
ANR	4844602	ReturnStatement	return FALSE ;	204:3:5347:5359	4844352	0	True				
ANR	4844603	Identifier	FALSE		4844352	0					
ANR	4844604	IfStatement	if ( * * fmt_p == '*' )		4844352	2					
ANR	4844605	Condition	* * fmt_p == '*'	206:6:5371:5384	4844352	0	True				
ANR	4844606	EqualityExpression	* * fmt_p == '*'		4844352	0		==			
ANR	4844607	UnaryOperationExpression	* * fmt_p		4844352	0					
ANR	4844608	UnaryOperator	*		4844352	0					
ANR	4844609	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844610	UnaryOperator	*		4844352	0					
ANR	4844611	Identifier	fmt_p		4844352	1					
ANR	4844612	PrimaryExpression	'*'		4844352	1					
ANR	4844613	CompoundStatement		85:22:1759:1759	4844352	1					
ANR	4844614	ElseStatement	else		4844352	0					
ANR	4844615	IfStatement	if ( isdigit ( * * fmt_p ) )		4844352	0					
ANR	4844616	Condition	isdigit ( * * fmt_p )	209:13:5491:5506	4844352	0	True				
ANR	4844617	CallExpression	isdigit ( * * fmt_p )		4844352	0					
ANR	4844618	Callee	isdigit		4844352	0					
ANR	4844619	Identifier	isdigit		4844352	0					
ANR	4844620	ArgumentList	* * fmt_p		4844352	1					
ANR	4844621	Argument	* * fmt_p		4844352	0					
ANR	4844622	UnaryOperationExpression	* * fmt_p		4844352	0					
ANR	4844623	UnaryOperator	*		4844352	0					
ANR	4844624	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844625	UnaryOperator	*		4844352	0					
ANR	4844626	Identifier	fmt_p		4844352	1					
ANR	4844627	CompoundStatement		88:32:1882:1882	4844352	1					
ANR	4844628	ExpressionStatement	info -> precision = consumeInt ( fmt_p )	210:3:5515:5552	4844352	0	True				
ANR	4844629	AssignmentExpression	info -> precision = consumeInt ( fmt_p )		4844352	0		=			
ANR	4844630	PtrMemberAccess	info -> precision		4844352	0					
ANR	4844631	Identifier	info		4844352	0					
ANR	4844632	Identifier	precision		4844352	1					
ANR	4844633	CallExpression	consumeInt ( fmt_p )		4844352	1					
ANR	4844634	Callee	consumeInt		4844352	0					
ANR	4844635	Identifier	consumeInt		4844352	0					
ANR	4844636	ArgumentList	fmt_p		4844352	1					
ANR	4844637	Argument	fmt_p		4844352	0					
ANR	4844638	Identifier	fmt_p		4844352	0					
ANR	4844639	IfStatement	if ( ! * * fmt_p )		4844352	12					
ANR	4844640	Condition	! * * fmt_p	213:5:5569:5577	4844352	0	True				
ANR	4844641	UnaryOperationExpression	! * * fmt_p		4844352	0					
ANR	4844642	UnaryOperator	!		4844352	0					
ANR	4844643	UnaryOperationExpression	* * fmt_p		4844352	1					
ANR	4844644	UnaryOperator	*		4844352	0					
ANR	4844645	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844646	UnaryOperator	*		4844352	0					
ANR	4844647	Identifier	fmt_p		4844352	1					
ANR	4844648	CompoundStatement		92:17:1953:1953	4844352	1					
ANR	4844649	ReturnStatement	return FALSE ;	214:2:5585:5597	4844352	0	True				
ANR	4844650	Identifier	FALSE		4844352	0					
ANR	4844651	WhileStatement	while ( * * fmt_p && isLengthChar ( * * fmt_p ) )		4844352	13					
ANR	4844652	Condition	* * fmt_p && isLengthChar ( * * fmt_p )	218:8:5660:5691	4844352	0	True				
ANR	4844653	AndExpression	* * fmt_p && isLengthChar ( * * fmt_p )		4844352	0		&&			
ANR	4844654	UnaryOperationExpression	* * fmt_p		4844352	0					
ANR	4844655	UnaryOperator	*		4844352	0					
ANR	4844656	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844657	UnaryOperator	*		4844352	0					
ANR	4844658	Identifier	fmt_p		4844352	1					
ANR	4844659	CallExpression	isLengthChar ( * * fmt_p )		4844352	1					
ANR	4844660	Callee	isLengthChar		4844352	0					
ANR	4844661	Identifier	isLengthChar		4844352	0					
ANR	4844662	ArgumentList	* * fmt_p		4844352	1					
ANR	4844663	Argument	* * fmt_p		4844352	0					
ANR	4844664	UnaryOperationExpression	* * fmt_p		4844352	0					
ANR	4844665	UnaryOperator	*		4844352	0					
ANR	4844666	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844667	UnaryOperator	*		4844352	0					
ANR	4844668	Identifier	fmt_p		4844352	1					
ANR	4844669	CompoundStatement		97:43:2067:2067	4844352	1					
ANR	4844670	SwitchStatement	switch ( * * fmt_p )		4844352	0					
ANR	4844671	Condition	* * fmt_p	219:10:5707:5713	4844352	0	True				
ANR	4844672	UnaryOperationExpression	* * fmt_p		4844352	0					
ANR	4844673	UnaryOperator	*		4844352	0					
ANR	4844674	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844675	UnaryOperator	*		4844352	0					
ANR	4844676	Identifier	fmt_p		4844352	1					
ANR	4844677	CompoundStatement		98:20:2089:2089	4844352	1					
ANR	4844678	Label	case 'h' :	220:2:5721:5729	4844352	0	True				
ANR	4844679	ExpressionStatement	info -> is_short = 1	222:3:5780:5798	4844352	1	True				
ANR	4844680	AssignmentExpression	info -> is_short = 1		4844352	0		=			
ANR	4844681	PtrMemberAccess	info -> is_short		4844352	0					
ANR	4844682	Identifier	info		4844352	0					
ANR	4844683	Identifier	is_short		4844352	1					
ANR	4844684	PrimaryExpression	1		4844352	1					
ANR	4844685	BreakStatement	break ;	223:3:5803:5808	4844352	2	True				
ANR	4844686	Label	case 'l' :	225:2:5813:5821	4844352	3	True				
ANR	4844687	IfStatement	if ( info -> is_long )		4844352	4					
ANR	4844688	Condition	info -> is_long	226:7:5830:5842	4844352	0	True				
ANR	4844689	PtrMemberAccess	info -> is_long		4844352	0					
ANR	4844690	Identifier	info		4844352	0					
ANR	4844691	Identifier	is_long		4844352	1					
ANR	4844692	CompoundStatement		105:23:2218:2218	4844352	1					
ANR	4844693	ExpressionStatement	info -> is_long_long = 1	228:4:5884:5906	4844352	0	True				
ANR	4844694	AssignmentExpression	info -> is_long_long = 1		4844352	0		=			
ANR	4844695	PtrMemberAccess	info -> is_long_long		4844352	0					
ANR	4844696	Identifier	info		4844352	0					
ANR	4844697	Identifier	is_long_long		4844352	1					
ANR	4844698	PrimaryExpression	1		4844352	1					
ANR	4844699	ElseStatement	else		4844352	0					
ANR	4844700	CompoundStatement		108:10:2290:2290	4844352	0					
ANR	4844701	ExpressionStatement	info -> is_long = 1	231:4:5959:5976	4844352	0	True				
ANR	4844702	AssignmentExpression	info -> is_long = 1		4844352	0		=			
ANR	4844703	PtrMemberAccess	info -> is_long		4844352	0					
ANR	4844704	Identifier	info		4844352	0					
ANR	4844705	Identifier	is_long		4844352	1					
ANR	4844706	PrimaryExpression	1		4844352	1					
ANR	4844707	BreakStatement	break ;	233:3:5986:5991	4844352	5	True				
ANR	4844708	Label	case 'L' :	235:2:5996:6004	4844352	6	True				
ANR	4844709	ExpressionStatement	info -> is_long_double = 1	237:3:6053:6077	4844352	7	True				
ANR	4844710	AssignmentExpression	info -> is_long_double = 1		4844352	0		=			
ANR	4844711	PtrMemberAccess	info -> is_long_double		4844352	0					
ANR	4844712	Identifier	info		4844352	0					
ANR	4844713	Identifier	is_long_double		4844352	1					
ANR	4844714	PrimaryExpression	1		4844352	1					
ANR	4844715	BreakStatement	break ;	238:3:6082:6087	4844352	8	True				
ANR	4844716	Label	case 'q' :	240:2:6092:6100	4844352	9	True				
ANR	4844717	ExpressionStatement	info -> is_long_long = 1	242:3:6152:6174	4844352	10	True				
ANR	4844718	AssignmentExpression	info -> is_long_long = 1		4844352	0		=			
ANR	4844719	PtrMemberAccess	info -> is_long_long		4844352	0					
ANR	4844720	Identifier	info		4844352	0					
ANR	4844721	Identifier	is_long_long		4844352	1					
ANR	4844722	PrimaryExpression	1		4844352	1					
ANR	4844723	BreakStatement	break ;	243:3:6179:6184	4844352	11	True				
ANR	4844724	Label	case 'j' :	245:2:6189:6197	4844352	12	True				
ANR	4844725	Label	case 'z' :	246:2:6201:6209	4844352	13	True				
ANR	4844726	Label	case 't' :	247:2:6213:6221	4844352	14	True				
ANR	4844727	BreakStatement	break ;	250:3:6306:6311	4844352	15	True				
ANR	4844728	ExpressionStatement	( * fmt_p ) ++	252:2:6319:6329	4844352	1	True				
ANR	4844729	PostIncDecOperationExpression	( * fmt_p ) ++		4844352	0					
ANR	4844730	UnaryOperationExpression	* fmt_p		4844352	0					
ANR	4844731	UnaryOperator	*		4844352	0					
ANR	4844732	Identifier	fmt_p		4844352	1					
ANR	4844733	IncDec	++		4844352	1					
ANR	4844734	IfStatement	if ( ! * * fmt_p )		4844352	14					
ANR	4844735	Condition	! * * fmt_p	254:5:6339:6347	4844352	0	True				
ANR	4844736	UnaryOperationExpression	! * * fmt_p		4844352	0					
ANR	4844737	UnaryOperator	!		4844352	0					
ANR	4844738	UnaryOperationExpression	* * fmt_p		4844352	1					
ANR	4844739	UnaryOperator	*		4844352	0					
ANR	4844740	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844741	UnaryOperator	*		4844352	0					
ANR	4844742	Identifier	fmt_p		4844352	1					
ANR	4844743	CompoundStatement		133:17:2723:2723	4844352	1					
ANR	4844744	ReturnStatement	return FALSE ;	255:2:6355:6367	4844352	0	True				
ANR	4844745	Identifier	FALSE		4844352	0					
ANR	4844746	ExpressionStatement	info -> fmt_letter = * * fmt_p	259:1:6442:6468	4844352	15	True				
ANR	4844747	AssignmentExpression	info -> fmt_letter = * * fmt_p		4844352	0		=			
ANR	4844748	PtrMemberAccess	info -> fmt_letter		4844352	0					
ANR	4844749	Identifier	info		4844352	0					
ANR	4844750	Identifier	fmt_letter		4844352	1					
ANR	4844751	UnaryOperationExpression	* * fmt_p		4844352	1					
ANR	4844752	UnaryOperator	*		4844352	0					
ANR	4844753	UnaryOperationExpression	* fmt_p		4844352	1					
ANR	4844754	UnaryOperator	*		4844352	0					
ANR	4844755	Identifier	fmt_p		4844352	1					
ANR	4844756	ExpressionStatement	( * fmt_p ) ++	262:1:6532:6542	4844352	16	True				
ANR	4844757	PostIncDecOperationExpression	( * fmt_p ) ++		4844352	0					
ANR	4844758	UnaryOperationExpression	* fmt_p		4844352	0					
ANR	4844759	UnaryOperator	*		4844352	0					
ANR	4844760	Identifier	fmt_p		4844352	1					
ANR	4844761	IncDec	++		4844352	1					
ANR	4844762	SwitchStatement	switch ( info -> fmt_letter )		4844352	17					
ANR	4844763	Condition	info -> fmt_letter	265:9:6619:6634	4844352	0	True				
ANR	4844764	PtrMemberAccess	info -> fmt_letter		4844352	0					
ANR	4844765	Identifier	info		4844352	0					
ANR	4844766	Identifier	fmt_letter		4844352	1					
ANR	4844767	CompoundStatement		144:28:3010:3010	4844352	1					
ANR	4844768	Label	case 'd' :	268:1:6666:6674	4844352	0	True				
ANR	4844769	Label	case 'i' :	269:1:6677:6685	4844352	1	True				
ANR	4844770	Label	case 'o' :	270:1:6688:6696	4844352	2	True				
ANR	4844771	Label	case 'u' :	271:1:6699:6707	4844352	3	True				
ANR	4844772	Label	case 'x' :	272:1:6710:6718	4844352	4	True				
ANR	4844773	Label	case 'X' :	273:1:6721:6729	4844352	5	True				
ANR	4844774	ExpressionStatement	info -> type = PFT_INT	274:2:6733:6753	4844352	6	True				
ANR	4844775	AssignmentExpression	info -> type = PFT_INT		4844352	0		=			
ANR	4844776	PtrMemberAccess	info -> type		4844352	0					
ANR	4844777	Identifier	info		4844352	0					
ANR	4844778	Identifier	type		4844352	1					
ANR	4844779	Identifier	PFT_INT		4844352	1					
ANR	4844780	BreakStatement	break ;	275:2:6757:6762	4844352	7	True				
ANR	4844781	Label	case 'e' :	277:1:6766:6774	4844352	8	True				
ANR	4844782	Label	case 'E' :	278:1:6777:6785	4844352	9	True				
ANR	4844783	Label	case 'f' :	279:1:6788:6796	4844352	10	True				
ANR	4844784	Label	case 'F' :	280:1:6799:6807	4844352	11	True				
ANR	4844785	Label	case 'g' :	281:1:6810:6818	4844352	12	True				
ANR	4844786	Label	case 'G' :	282:1:6821:6829	4844352	13	True				
ANR	4844787	Label	case 'a' :	283:1:6832:6840	4844352	14	True				
ANR	4844788	Label	case 'A' :	284:1:6843:6851	4844352	15	True				
ANR	4844789	ExpressionStatement	info -> type = PFT_FLOAT	285:2:6855:6877	4844352	16	True				
ANR	4844790	AssignmentExpression	info -> type = PFT_FLOAT		4844352	0		=			
ANR	4844791	PtrMemberAccess	info -> type		4844352	0					
ANR	4844792	Identifier	info		4844352	0					
ANR	4844793	Identifier	type		4844352	1					
ANR	4844794	Identifier	PFT_FLOAT		4844352	1					
ANR	4844795	BreakStatement	break ;	286:2:6881:6886	4844352	17	True				
ANR	4844796	Label	case 'c' :	288:1:6890:6898	4844352	18	True				
ANR	4844797	ExpressionStatement	info -> type = PFT_CHAR	289:2:6902:6923	4844352	19	True				
ANR	4844798	AssignmentExpression	info -> type = PFT_CHAR		4844352	0		=			
ANR	4844799	PtrMemberAccess	info -> type		4844352	0					
ANR	4844800	Identifier	info		4844352	0					
ANR	4844801	Identifier	type		4844352	1					
ANR	4844802	Identifier	PFT_CHAR		4844352	1					
ANR	4844803	BreakStatement	break ;	290:2:6927:6932	4844352	20	True				
ANR	4844804	Label	case 's' :	292:1:6936:6944	4844352	21	True				
ANR	4844805	ExpressionStatement	info -> type = PFT_STRING	293:2:6948:6971	4844352	22	True				
ANR	4844806	AssignmentExpression	info -> type = PFT_STRING		4844352	0		=			
ANR	4844807	PtrMemberAccess	info -> type		4844352	0					
ANR	4844808	Identifier	info		4844352	0					
ANR	4844809	Identifier	type		4844352	1					
ANR	4844810	Identifier	PFT_STRING		4844352	1					
ANR	4844811	BreakStatement	break ;	294:2:6975:6980	4844352	23	True				
ANR	4844812	Label	case 'p' :	298:4:7048:7056	4844352	24	True				
ANR	4844813	ExpressionStatement	info -> type = PFT_POINTER	299:2:7060:7084	4844352	25	True				
ANR	4844814	AssignmentExpression	info -> type = PFT_POINTER		4844352	0		=			
ANR	4844815	PtrMemberAccess	info -> type		4844352	0					
ANR	4844816	Identifier	info		4844352	0					
ANR	4844817	Identifier	type		4844352	1					
ANR	4844818	Identifier	PFT_POINTER		4844352	1					
ANR	4844819	BreakStatement	break ;	300:2:7088:7093	4844352	26	True				
ANR	4844820	Label	case 'n' :	302:4:7100:7108	4844352	27	True				
ANR	4844821	ExpressionStatement	info -> type = PFT_INT	304:2:7170:7190	4844352	28	True				
ANR	4844822	AssignmentExpression	info -> type = PFT_INT		4844352	0		=			
ANR	4844823	PtrMemberAccess	info -> type		4844352	0					
ANR	4844824	Identifier	info		4844352	0					
ANR	4844825	Identifier	type		4844352	1					
ANR	4844826	Identifier	PFT_INT		4844352	1					
ANR	4844827	BreakStatement	break ;	305:2:7194:7199	4844352	29	True				
ANR	4844828	Label	case 'C' :	307:4:7206:7214	4844352	30	True				
ANR	4844829	ExpressionStatement	info -> type = PFT_CHAR	308:2:7218:7239	4844352	31	True				
ANR	4844830	AssignmentExpression	info -> type = PFT_CHAR		4844352	0		=			
ANR	4844831	PtrMemberAccess	info -> type		4844352	0					
ANR	4844832	Identifier	info		4844352	0					
ANR	4844833	Identifier	type		4844352	1					
ANR	4844834	Identifier	PFT_CHAR		4844352	1					
ANR	4844835	ExpressionStatement	info -> is_long = 1	309:2:7243:7260	4844352	32	True				
ANR	4844836	AssignmentExpression	info -> is_long = 1		4844352	0		=			
ANR	4844837	PtrMemberAccess	info -> is_long		4844352	0					
ANR	4844838	Identifier	info		4844352	0					
ANR	4844839	Identifier	is_long		4844352	1					
ANR	4844840	PrimaryExpression	1		4844352	1					
ANR	4844841	BreakStatement	break ;	310:2:7264:7269	4844352	33	True				
ANR	4844842	Label	case 'S' :	312:4:7276:7284	4844352	34	True				
ANR	4844843	ExpressionStatement	info -> type = PFT_STRING	313:2:7288:7311	4844352	35	True				
ANR	4844844	AssignmentExpression	info -> type = PFT_STRING		4844352	0		=			
ANR	4844845	PtrMemberAccess	info -> type		4844352	0					
ANR	4844846	Identifier	info		4844352	0					
ANR	4844847	Identifier	type		4844352	1					
ANR	4844848	Identifier	PFT_STRING		4844352	1					
ANR	4844849	ExpressionStatement	info -> is_long = 1	314:2:7315:7332	4844352	36	True				
ANR	4844850	AssignmentExpression	info -> is_long = 1		4844352	0		=			
ANR	4844851	PtrMemberAccess	info -> is_long		4844352	0					
ANR	4844852	Identifier	info		4844352	0					
ANR	4844853	Identifier	is_long		4844352	1					
ANR	4844854	PrimaryExpression	1		4844352	1					
ANR	4844855	BreakStatement	break ;	315:2:7336:7341	4844352	37	True				
ANR	4844856	Label	case '%' :	317:4:7350:7358	4844352	38	True				
ANR	4844857	ReturnStatement	"return parsePrintfFormat ( fmt_p , info ) ;"	323:2:7638:7677	4844352	39	True				
ANR	4844858	CallExpression	"parsePrintfFormat ( fmt_p , info )"		4844352	0					
ANR	4844859	Callee	parsePrintfFormat		4844352	0					
ANR	4844860	Identifier	parsePrintfFormat		4844352	0					
ANR	4844861	ArgumentList	fmt_p		4844352	1					
ANR	4844862	Argument	fmt_p		4844352	0					
ANR	4844863	Identifier	fmt_p		4844352	0					
ANR	4844864	Argument	info		4844352	1					
ANR	4844865	Identifier	info		4844352	0					
ANR	4844866	BreakStatement	break ;	324:2:7681:7686	4844352	40	True				
ANR	4844867	Label	default :	326:4:7693:7700	4844352	41	True				
ANR	4844868	Identifier	default		4844352	0					
ANR	4844869	ExpressionStatement	info -> type = PFT_NONE	328:2:7745:7766	4844352	42	True				
ANR	4844870	AssignmentExpression	info -> type = PFT_NONE		4844352	0		=			
ANR	4844871	PtrMemberAccess	info -> type		4844352	0					
ANR	4844872	Identifier	info		4844352	0					
ANR	4844873	Identifier	type		4844352	1					
ANR	4844874	Identifier	PFT_NONE		4844352	1					
ANR	4844875	ReturnStatement	return FALSE ;	329:2:7770:7782	4844352	43	True				
ANR	4844876	Identifier	FALSE		4844352	0					
ANR	4844877	BreakStatement	break ;	330:2:7786:7791	4844352	44	True				
ANR	4844878	ReturnStatement	return TRUE ;	332:1:7800:7811	4844352	18	True				
ANR	4844879	Identifier	TRUE		4844352	0					
ANR	4844880	ReturnType	int		4844352	1					
ANR	4844881	Identifier	parsePrintfFormat		4844352	2					
ANR	4844882	ParameterList	"const char * * fmt_p , struct printf_fmt_info * info"		4844352	3					
ANR	4844883	Parameter	const char * * fmt_p	121:19:3576:3593	4844352	0	True				
ANR	4844884	ParameterType	const char * *		4844352	0					
ANR	4844885	Identifier	fmt_p		4844352	1					
ANR	4844886	Parameter	struct printf_fmt_info * info	121:39:3596:3623	4844352	1	True				
ANR	4844887	ParameterType	struct printf_fmt_info *		4844352	0					
ANR	4844888	Identifier	info		4844352	1					
ANR	4844889	CFGEntryNode	ENTRY		4844352		True				
ANR	4844890	CFGExitNode	EXIT		4844352		True				
ANR	4844891	Symbol	info -> width		4844352						
ANR	4844892	Symbol	PFT_FLOAT		4844352						
ANR	4844893	Symbol	* * fmt_p		4844352						
ANR	4844894	Symbol	consumeInt		4844352						
ANR	4844895	Symbol	PFT_POINTER		4844352						
ANR	4844896	Symbol	parsePrintfFormat		4844352						
ANR	4844897	Symbol	isFlagChar		4844352						
ANR	4844898	Symbol	info -> precision		4844352						
ANR	4844899	Symbol	PFT_CHAR		4844352						
ANR	4844900	Symbol	info -> fmt_letter		4844352						
ANR	4844901	Symbol	info -> is_alt		4844352						
ANR	4844902	Symbol	info -> is_long_long		4844352						
ANR	4844903	Symbol	isdigit		4844352						
ANR	4844904	Symbol	info		4844352						
ANR	4844905	Symbol	PFT_INT		4844352						
ANR	4844906	Symbol	info -> is_long		4844352						
ANR	4844907	Symbol	info -> type		4844352						
ANR	4844908	Symbol	info -> is_left		4844352						
ANR	4844909	Symbol	TRUE		4844352						
ANR	4844910	Symbol	fmt_p		4844352						
ANR	4844911	Symbol	info -> is_signed		4844352						
ANR	4844912	Symbol	info -> is_pad		4844352						
ANR	4844913	Symbol	PFT_NONE		4844352						
ANR	4844914	Symbol	isLengthChar		4844352						
ANR	4844915	Symbol	PFT_STRING		4844352						
ANR	4844916	Symbol	info -> is_short		4844352						
ANR	4844917	Symbol	info -> is_space		4844352						
ANR	4844918	Symbol	* fmt_p		4844352						
ANR	4844919	Symbol	FALSE		4844352						
ANR	4844920	Symbol	info -> is_grouped		4844352						
ANR	4844921	Symbol	* info		4844352						
ANR	4844922	Symbol	info -> is_long_double		4844352						
