command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1306585	File	data/converged/CVE-2011-4930_htcondor/exponential_backoff.cpp								
ANR	1306586	DeclStmt									
ANR	1306587	Decl							int	int	ExponentialBackoff :: NEXT_SEED
ANR	1306588	Function	ExponentialBackoff :: ExponentialBackoff	33:0:1275:1428							
ANR	1306589	FunctionDef	"ExponentialBackoff :: ExponentialBackoff (int minimum , int maximum , double b)"		1306588	0					
ANR	1306590	CompoundStatement		33:74:1349:1428	1306588	0					
ANR	1306591	IdentifierDeclStatement	int theSeed = NEXT_SEED ;	34:1:1352:1375	1306588	0	True				
ANR	1306592	IdentifierDecl	theSeed = NEXT_SEED		1306588	0					
ANR	1306593	IdentifierDeclType	int		1306588	0					
ANR	1306594	Identifier	theSeed		1306588	1					
ANR	1306595	AssignmentExpression	theSeed = NEXT_SEED		1306588	2		=			
ANR	1306596	Identifier	NEXT_SEED		1306588	0					
ANR	1306597	Identifier	NEXT_SEED		1306588	1					
ANR	1306598	ExpressionStatement	NEXT_SEED ++	35:1:1378:1389	1306588	1	True				
ANR	1306599	PostIncDecOperationExpression	NEXT_SEED ++		1306588	0					
ANR	1306600	Identifier	NEXT_SEED		1306588	0					
ANR	1306601	IncDec	++		1306588	1					
ANR	1306602	ExpressionStatement	"init ( minimum , maximum , b , theSeed )"	36:1:1392:1426	1306588	2	True				
ANR	1306603	CallExpression	"init ( minimum , maximum , b , theSeed )"		1306588	0					
ANR	1306604	Callee	init		1306588	0					
ANR	1306605	Identifier	init		1306588	0					
ANR	1306606	ArgumentList	minimum		1306588	1					
ANR	1306607	Argument	minimum		1306588	0					
ANR	1306608	Identifier	minimum		1306588	0					
ANR	1306609	Argument	maximum		1306588	1					
ANR	1306610	Identifier	maximum		1306588	0					
ANR	1306611	Argument	b		1306588	2					
ANR	1306612	Identifier	b		1306588	0					
ANR	1306613	Argument	theSeed		1306588	3					
ANR	1306614	Identifier	theSeed		1306588	0					
ANR	1306615	Identifier	ExponentialBackoff :: ExponentialBackoff		1306588	1					
ANR	1306616	ParameterList	"int minimum , int maximum , double b"		1306588	2					
ANR	1306617	Parameter	int minimum	33:39:1314:1324	1306588	0	True				
ANR	1306618	ParameterType	int		1306588	0					
ANR	1306619	Identifier	minimum		1306588	1					
ANR	1306620	Parameter	int maximum	33:52:1327:1337	1306588	1	True				
ANR	1306621	ParameterType	int		1306588	0					
ANR	1306622	Identifier	maximum		1306588	1					
ANR	1306623	Parameter	double b	33:65:1340:1347	1306588	2	True				
ANR	1306624	ParameterType	double		1306588	0					
ANR	1306625	Identifier	b		1306588	1					
ANR	1306626	CFGEntryNode	ENTRY		1306588		True				
ANR	1306627	CFGExitNode	EXIT		1306588		True				
ANR	1306628	Symbol	b		1306588						
ANR	1306629	Symbol	theSeed		1306588						
ANR	1306630	Symbol	maximum		1306588						
ANR	1306631	Symbol	NEXT_SEED		1306588						
ANR	1306632	Symbol	minimum		1306588						
ANR	1306633	Function	ExponentialBackoff :: ExponentialBackoff	39:0:1431:1542							
ANR	1306634	FunctionDef	"ExponentialBackoff :: ExponentialBackoff (int minimum , int maximum , double b , int s)"		1306633	0					
ANR	1306635	CompoundStatement		39:81:1512:1542	1306633	0					
ANR	1306636	ExpressionStatement	"init ( minimum , maximum , b , s )"	40:1:1515:1540	1306633	0	True				
ANR	1306637	CallExpression	"init ( minimum , maximum , b , s )"		1306633	0					
ANR	1306638	Callee	init		1306633	0					
ANR	1306639	Identifier	init		1306633	0					
ANR	1306640	ArgumentList	minimum		1306633	1					
ANR	1306641	Argument	minimum		1306633	0					
ANR	1306642	Identifier	minimum		1306633	0					
ANR	1306643	Argument	maximum		1306633	1					
ANR	1306644	Identifier	maximum		1306633	0					
ANR	1306645	Argument	b		1306633	2					
ANR	1306646	Identifier	b		1306633	0					
ANR	1306647	Argument	s		1306633	3					
ANR	1306648	Identifier	s		1306633	0					
ANR	1306649	Identifier	ExponentialBackoff :: ExponentialBackoff		1306633	1					
ANR	1306650	ParameterList	"int minimum , int maximum , double b , int s"		1306633	2					
ANR	1306651	Parameter	int minimum	39:39:1470:1480	1306633	0	True				
ANR	1306652	ParameterType	int		1306633	0					
ANR	1306653	Identifier	minimum		1306633	1					
ANR	1306654	Parameter	int maximum	39:52:1483:1493	1306633	1	True				
ANR	1306655	ParameterType	int		1306633	0					
ANR	1306656	Identifier	maximum		1306633	1					
ANR	1306657	Parameter	double b	39:65:1496:1503	1306633	2	True				
ANR	1306658	ParameterType	double		1306633	0					
ANR	1306659	Identifier	b		1306633	1					
ANR	1306660	Parameter	int s	39:75:1506:1510	1306633	3	True				
ANR	1306661	ParameterType	int		1306633	0					
ANR	1306662	Identifier	s		1306633	1					
ANR	1306663	CFGEntryNode	ENTRY		1306633		True				
ANR	1306664	CFGExitNode	EXIT		1306633		True				
ANR	1306665	Symbol	b		1306633						
ANR	1306666	Symbol	s		1306633						
ANR	1306667	Symbol	maximum		1306633						
ANR	1306668	Symbol	minimum		1306633						
ANR	1306669	Function	ExponentialBackoff :: ExponentialBackoff	43:0:1545:1634							
ANR	1306670	FunctionDef	ExponentialBackoff :: ExponentialBackoff (const ExponentialBackoff & orig)		1306669	0					
ANR	1306671	CompoundStatement		43:70:1615:1634	1306669	0					
ANR	1306672	ExpressionStatement	deepCopy ( orig )	44:1:1618:1632	1306669	0	True				
ANR	1306673	CallExpression	deepCopy ( orig )		1306669	0					
ANR	1306674	Callee	deepCopy		1306669	0					
ANR	1306675	Identifier	deepCopy		1306669	0					
ANR	1306676	ArgumentList	orig		1306669	1					
ANR	1306677	Argument	orig		1306669	0					
ANR	1306678	Identifier	orig		1306669	0					
ANR	1306679	Identifier	ExponentialBackoff :: ExponentialBackoff		1306669	1					
ANR	1306680	ParameterList	const ExponentialBackoff & orig		1306669	2					
ANR	1306681	Parameter	const ExponentialBackoff & orig	43:39:1584:1613	1306669	0	True				
ANR	1306682	ParameterType	const ExponentialBackoff &		1306669	0					
ANR	1306683	Identifier	orig		1306669	1					
ANR	1306684	CFGEntryNode	ENTRY		1306669		True				
ANR	1306685	CFGExitNode	EXIT		1306669		True				
ANR	1306686	Symbol	orig		1306669						
ANR	1306687	Function	operator =	48:20:1677:1793							
ANR	1306688	FunctionDef	operator = (const ExponentialBackoff & rhs)		1306687	0					
ANR	1306689	CompoundStatement		48:61:1718:1793	1306687	0					
ANR	1306690	IfStatement	if ( this != & rhs )		1306687	0					
ANR	1306691	Condition	this != & rhs	49:5:1725:1736	1306687	0	True				
ANR	1306692	EqualityExpression	this != & rhs		1306687	0		!=			
ANR	1306693	Identifier	this		1306687	0					
ANR	1306694	UnaryOperationExpression	& rhs		1306687	1					
ANR	1306695	UnaryOperator	&		1306687	0					
ANR	1306696	Identifier	rhs		1306687	1					
ANR	1306697	CompoundStatement		2:19:20:20	1306687	1					
ANR	1306698	ExpressionStatement	noLeak ( )	50:2:1743:1751	1306687	0	True				
ANR	1306699	CallExpression	noLeak ( )		1306687	0					
ANR	1306700	Callee	noLeak		1306687	0					
ANR	1306701	Identifier	noLeak		1306687	0					
ANR	1306702	ArgumentList			1306687	1					
ANR	1306703	ExpressionStatement	deepCopy ( rhs )	51:2:1755:1768	1306687	1	True				
ANR	1306704	CallExpression	deepCopy ( rhs )		1306687	0					
ANR	1306705	Callee	deepCopy		1306687	0					
ANR	1306706	Identifier	deepCopy		1306687	0					
ANR	1306707	ArgumentList	rhs		1306687	1					
ANR	1306708	Argument	rhs		1306687	0					
ANR	1306709	Identifier	rhs		1306687	0					
ANR	1306710	ReturnStatement	return ( * this ) ;	54:1:1776:1791	1306687	1	True				
ANR	1306711	UnaryOperationExpression	* this		1306687	0					
ANR	1306712	UnaryOperator	*		1306687	0					
ANR	1306713	Identifier	this		1306687	1					
ANR	1306714	Identifier	operator =		1306687	1					
ANR	1306715	ParameterList	const ExponentialBackoff & rhs		1306687	2					
ANR	1306716	Parameter	const ExponentialBackoff & rhs	48:31:1688:1716	1306687	0	True				
ANR	1306717	ParameterType	const ExponentialBackoff &		1306687	0					
ANR	1306718	Identifier	rhs		1306687	1					
ANR	1306719	CFGEntryNode	ENTRY		1306687		True				
ANR	1306720	CFGExitNode	EXIT		1306687		True				
ANR	1306721	Symbol	* this		1306687						
ANR	1306722	Symbol	& rhs		1306687						
ANR	1306723	Symbol	this		1306687						
ANR	1306724	Symbol	rhs		1306687						
ANR	1306725	Function	ExponentialBackoff :: ~ExponentialBackoff	57:0:1796:1850							
ANR	1306726	FunctionDef	ExponentialBackoff :: ~ExponentialBackoff ()		1306725	0					
ANR	1306727	CompoundStatement		57:41:1837:1850	1306725	0					
ANR	1306728	ExpressionStatement	noLeak ( )	58:1:1840:1848	1306725	0	True				
ANR	1306729	CallExpression	noLeak ( )		1306725	0					
ANR	1306730	Callee	noLeak		1306725	0					
ANR	1306731	Identifier	noLeak		1306725	0					
ANR	1306732	ArgumentList			1306725	1					
ANR	1306733	Identifier	ExponentialBackoff :: ~ExponentialBackoff		1306725	1					
ANR	1306734	ParameterList			1306725	2					
ANR	1306735	CFGEntryNode	ENTRY		1306725		True				
ANR	1306736	CFGExitNode	EXIT		1306725		True				
ANR	1306737	Function	ExponentialBackoff :: init	61:0:1853:2112							
ANR	1306738	FunctionDef	"ExponentialBackoff :: init (int minimum , int maximum , double b , int s)"		1306737	0					
ANR	1306739	CompoundStatement		62:67:1925:2112	1306737	0					
ANR	1306740	ExpressionStatement	this -> min = minimum	63:1:1928:1947	1306737	0	True				
ANR	1306741	AssignmentExpression	this -> min = minimum		1306737	0		=			
ANR	1306742	PtrMemberAccess	this -> min		1306737	0					
ANR	1306743	Identifier	this		1306737	0					
ANR	1306744	Identifier	min		1306737	1					
ANR	1306745	Identifier	minimum		1306737	1					
ANR	1306746	ExpressionStatement	this -> max = maximum	64:1:1950:1969	1306737	1	True				
ANR	1306747	AssignmentExpression	this -> max = maximum		1306737	0		=			
ANR	1306748	PtrMemberAccess	this -> max		1306737	0					
ANR	1306749	Identifier	this		1306737	0					
ANR	1306750	Identifier	max		1306737	1					
ANR	1306751	Identifier	maximum		1306737	1					
ANR	1306752	ExpressionStatement	this -> base = b	65:1:1972:1986	1306737	2	True				
ANR	1306753	AssignmentExpression	this -> base = b		1306737	0		=			
ANR	1306754	PtrMemberAccess	this -> base		1306737	0					
ANR	1306755	Identifier	this		1306737	0					
ANR	1306756	Identifier	base		1306737	1					
ANR	1306757	Identifier	b		1306737	1					
ANR	1306758	ExpressionStatement	this -> seed = s	66:1:1989:2003	1306737	3	True				
ANR	1306759	AssignmentExpression	this -> seed = s		1306737	0		=			
ANR	1306760	PtrMemberAccess	this -> seed		1306737	0					
ANR	1306761	Identifier	this		1306737	0					
ANR	1306762	Identifier	seed		1306737	1					
ANR	1306763	Identifier	s		1306737	1					
ANR	1306764	ExpressionStatement	this -> tries = 0	69:1:2031:2046	1306737	4	True				
ANR	1306765	AssignmentExpression	this -> tries = 0		1306737	0		=			
ANR	1306766	PtrMemberAccess	this -> tries		1306737	0					
ANR	1306767	Identifier	this		1306737	0					
ANR	1306768	Identifier	tries		1306737	1					
ANR	1306769	PrimaryExpression	0		1306737	1					
ANR	1306770	ExpressionStatement	this -> prevBackoff = minimum	70:1:2049:2076	1306737	5	True				
ANR	1306771	AssignmentExpression	this -> prevBackoff = minimum		1306737	0		=			
ANR	1306772	PtrMemberAccess	this -> prevBackoff		1306737	0					
ANR	1306773	Identifier	this		1306737	0					
ANR	1306774	Identifier	prevBackoff		1306737	1					
ANR	1306775	Identifier	minimum		1306737	1					
ANR	1306776	ExpressionStatement	set_seed ( s )	73:1:2099:2110	1306737	6	True				
ANR	1306777	CallExpression	set_seed ( s )		1306737	0					
ANR	1306778	Callee	set_seed		1306737	0					
ANR	1306779	Identifier	set_seed		1306737	0					
ANR	1306780	ArgumentList	s		1306737	1					
ANR	1306781	Argument	s		1306737	0					
ANR	1306782	Identifier	s		1306737	0					
ANR	1306783	ReturnType	void		1306737	1					
ANR	1306784	Identifier	ExponentialBackoff :: init		1306737	2					
ANR	1306785	ParameterList	"int minimum , int maximum , double b , int s"		1306737	3					
ANR	1306786	Parameter	int minimum	62:25:1883:1893	1306737	0	True				
ANR	1306787	ParameterType	int		1306737	0					
ANR	1306788	Identifier	minimum		1306737	1					
ANR	1306789	Parameter	int maximum	62:38:1896:1906	1306737	1	True				
ANR	1306790	ParameterType	int		1306737	0					
ANR	1306791	Identifier	maximum		1306737	1					
ANR	1306792	Parameter	double b	62:51:1909:1916	1306737	2	True				
ANR	1306793	ParameterType	double		1306737	0					
ANR	1306794	Identifier	b		1306737	1					
ANR	1306795	Parameter	int s	62:61:1919:1923	1306737	3	True				
ANR	1306796	ParameterType	int		1306737	0					
ANR	1306797	Identifier	s		1306737	1					
ANR	1306798	CFGEntryNode	ENTRY		1306737		True				
ANR	1306799	CFGExitNode	EXIT		1306737		True				
ANR	1306800	Symbol	* this		1306737						
ANR	1306801	Symbol	this -> prevBackoff		1306737						
ANR	1306802	Symbol	this -> tries		1306737						
ANR	1306803	Symbol	b		1306737						
ANR	1306804	Symbol	s		1306737						
ANR	1306805	Symbol	this -> seed		1306737						
ANR	1306806	Symbol	this		1306737						
ANR	1306807	Symbol	maximum		1306737						
ANR	1306808	Symbol	this -> max		1306737						
ANR	1306809	Symbol	minimum		1306737						
ANR	1306810	Symbol	this -> min		1306737						
ANR	1306811	Symbol	this -> base		1306737						
ANR	1306812	Function	ExponentialBackoff :: deepCopy	76:0:2115:2344							
ANR	1306813	FunctionDef	ExponentialBackoff :: deepCopy (const ExponentialBackoff & orig)		1306812	0					
ANR	1306814	CompoundStatement		77:60:2180:2344	1306812	0					
ANR	1306815	ExpressionStatement	this -> min = orig . min	78:1:2183:2203	1306812	0	True				
ANR	1306816	AssignmentExpression	this -> min = orig . min		1306812	0		=			
ANR	1306817	PtrMemberAccess	this -> min		1306812	0					
ANR	1306818	Identifier	this		1306812	0					
ANR	1306819	Identifier	min		1306812	1					
ANR	1306820	MemberAccess	orig . min		1306812	1					
ANR	1306821	Identifier	orig		1306812	0					
ANR	1306822	Identifier	min		1306812	1					
ANR	1306823	ExpressionStatement	this -> max = orig . max	79:1:2206:2226	1306812	1	True				
ANR	1306824	AssignmentExpression	this -> max = orig . max		1306812	0		=			
ANR	1306825	PtrMemberAccess	this -> max		1306812	0					
ANR	1306826	Identifier	this		1306812	0					
ANR	1306827	Identifier	max		1306812	1					
ANR	1306828	MemberAccess	orig . max		1306812	1					
ANR	1306829	Identifier	orig		1306812	0					
ANR	1306830	Identifier	max		1306812	1					
ANR	1306831	ExpressionStatement	this -> base = orig . base	80:1:2229:2251	1306812	2	True				
ANR	1306832	AssignmentExpression	this -> base = orig . base		1306812	0		=			
ANR	1306833	PtrMemberAccess	this -> base		1306812	0					
ANR	1306834	Identifier	this		1306812	0					
ANR	1306835	Identifier	base		1306812	1					
ANR	1306836	MemberAccess	orig . base		1306812	1					
ANR	1306837	Identifier	orig		1306812	0					
ANR	1306838	Identifier	base		1306812	1					
ANR	1306839	ExpressionStatement	this -> seed = orig . seed	81:1:2254:2276	1306812	3	True				
ANR	1306840	AssignmentExpression	this -> seed = orig . seed		1306812	0		=			
ANR	1306841	PtrMemberAccess	this -> seed		1306812	0					
ANR	1306842	Identifier	this		1306812	0					
ANR	1306843	Identifier	seed		1306812	1					
ANR	1306844	MemberAccess	orig . seed		1306812	1					
ANR	1306845	Identifier	orig		1306812	0					
ANR	1306846	Identifier	seed		1306812	1					
ANR	1306847	ExpressionStatement	this -> tries = orig . tries	82:1:2279:2303	1306812	4	True				
ANR	1306848	AssignmentExpression	this -> tries = orig . tries		1306812	0		=			
ANR	1306849	PtrMemberAccess	this -> tries		1306812	0					
ANR	1306850	Identifier	this		1306812	0					
ANR	1306851	Identifier	tries		1306812	1					
ANR	1306852	MemberAccess	orig . tries		1306812	1					
ANR	1306853	Identifier	orig		1306812	0					
ANR	1306854	Identifier	tries		1306812	1					
ANR	1306855	ExpressionStatement	this -> prevBackoff = orig . prevBackoff	83:1:2306:2342	1306812	5	True				
ANR	1306856	AssignmentExpression	this -> prevBackoff = orig . prevBackoff		1306812	0		=			
ANR	1306857	PtrMemberAccess	this -> prevBackoff		1306812	0					
ANR	1306858	Identifier	this		1306812	0					
ANR	1306859	Identifier	prevBackoff		1306812	1					
ANR	1306860	MemberAccess	orig . prevBackoff		1306812	1					
ANR	1306861	Identifier	orig		1306812	0					
ANR	1306862	Identifier	prevBackoff		1306812	1					
ANR	1306863	ReturnType	void		1306812	1					
ANR	1306864	Identifier	ExponentialBackoff :: deepCopy		1306812	2					
ANR	1306865	ParameterList	const ExponentialBackoff & orig		1306812	3					
ANR	1306866	Parameter	const ExponentialBackoff & orig	77:29:2149:2178	1306812	0	True				
ANR	1306867	ParameterType	const ExponentialBackoff &		1306812	0					
ANR	1306868	Identifier	orig		1306812	1					
ANR	1306869	CFGEntryNode	ENTRY		1306812		True				
ANR	1306870	CFGExitNode	EXIT		1306812		True				
ANR	1306871	Symbol	this -> tries		1306812						
ANR	1306872	Symbol	orig . min		1306812						
ANR	1306873	Symbol	orig . seed		1306812						
ANR	1306874	Symbol	this		1306812						
ANR	1306875	Symbol	orig . prevBackoff		1306812						
ANR	1306876	Symbol	this -> max		1306812						
ANR	1306877	Symbol	* this		1306812						
ANR	1306878	Symbol	this -> prevBackoff		1306812						
ANR	1306879	Symbol	orig . max		1306812						
ANR	1306880	Symbol	orig		1306812						
ANR	1306881	Symbol	orig . tries		1306812						
ANR	1306882	Symbol	this -> seed		1306812						
ANR	1306883	Symbol	orig . base		1306812						
ANR	1306884	Symbol	this -> min		1306812						
ANR	1306885	Symbol	this -> base		1306812						
ANR	1306886	Function	ExponentialBackoff :: noLeak	86:0:2347:2409							
ANR	1306887	FunctionDef	ExponentialBackoff :: noLeak ()		1306886	0					
ANR	1306888	CompoundStatement		87:28:2380:2409	1306886	0					
ANR	1306889	ReturnType	void		1306886	1					
ANR	1306890	Identifier	ExponentialBackoff :: noLeak		1306886	2					
ANR	1306891	ParameterList			1306886	3					
ANR	1306892	CFGEntryNode	ENTRY		1306886		True				
ANR	1306893	CFGExitNode	EXIT		1306886		True				
ANR	1306894	Function	ExponentialBackoff :: freshStart	94:0:2577:2628							
ANR	1306895	FunctionDef	ExponentialBackoff :: freshStart ()		1306894	0					
ANR	1306896	CompoundStatement		95:32:2614:2628	1306894	0					
ANR	1306897	ExpressionStatement	tries = 0	96:1:2617:2626	1306894	0	True				
ANR	1306898	AssignmentExpression	tries = 0		1306894	0		=			
ANR	1306899	Identifier	tries		1306894	0					
ANR	1306900	PrimaryExpression	0		1306894	1					
ANR	1306901	ReturnType	void		1306894	1					
ANR	1306902	Identifier	ExponentialBackoff :: freshStart		1306894	2					
ANR	1306903	ParameterList			1306894	3					
ANR	1306904	CFGEntryNode	ENTRY		1306894		True				
ANR	1306905	CFGExitNode	EXIT		1306894		True				
ANR	1306906	Symbol	tries		1306894						
ANR	1306907	Function	ExponentialBackoff :: nextBackoff	99:0:2631:3082							
ANR	1306908	FunctionDef	ExponentialBackoff :: nextBackoff ()		1306907	0					
ANR	1306909	CompoundStatement		100:33:2668:3082	1306907	0					
ANR	1306910	IfStatement	if ( tries < 1 )		1306907	0					
ANR	1306911	Condition	tries < 1	103:5:2690:2698	1306907	0	True				
ANR	1306912	RelationalExpression	tries < 1		1306907	0		<			
ANR	1306913	Identifier	tries		1306907	0					
ANR	1306914	PrimaryExpression	1		1306907	1					
ANR	1306915	CompoundStatement		4:16:32:32	1306907	1					
ANR	1306916	ReturnStatement	return min ;	104:2:2705:2715	1306907	0	True				
ANR	1306917	Identifier	min		1306907	0					
ANR	1306918	IdentifierDeclStatement	unsigned int backoff_mult = 2 << ( tries - 1 ) ;	108:1:2758:2802	1306907	1	True				
ANR	1306919	IdentifierDecl	backoff_mult = 2 << ( tries - 1 )		1306907	0					
ANR	1306920	IdentifierDeclType	unsigned int		1306907	0					
ANR	1306921	Identifier	backoff_mult		1306907	1					
ANR	1306922	AssignmentExpression	backoff_mult = 2 << ( tries - 1 )		1306907	2		=			
ANR	1306923	Identifier	backoff_mult		1306907	0					
ANR	1306924	ShiftExpression	2 << ( tries - 1 )		1306907	1		<<			
ANR	1306925	PrimaryExpression	2		1306907	0					
ANR	1306926	AdditiveExpression	tries - 1		1306907	1		-			
ANR	1306927	Identifier	tries		1306907	0					
ANR	1306928	PrimaryExpression	1		1306907	1					
ANR	1306929	IdentifierDeclStatement	int result = ( int ) ( base * backoff_mult ) ;	111:1:2808:2847	1306907	2	True				
ANR	1306930	IdentifierDecl	result = ( int ) ( base * backoff_mult )		1306907	0					
ANR	1306931	IdentifierDeclType	int		1306907	0					
ANR	1306932	Identifier	result		1306907	1					
ANR	1306933	AssignmentExpression	result = ( int ) ( base * backoff_mult )		1306907	2		=			
ANR	1306934	Identifier	result		1306907	0					
ANR	1306935	CastExpression	( int ) ( base * backoff_mult )		1306907	1					
ANR	1306936	CastTarget	int		1306907	0					
ANR	1306937	MultiplicativeExpression	base * backoff_mult		1306907	1		*			
ANR	1306938	Identifier	base		1306907	0					
ANR	1306939	Identifier	backoff_mult		1306907	1					
ANR	1306940	ExpressionStatement	result += min	114:1:2876:2889	1306907	3	True				
ANR	1306941	AssignmentExpression	result += min		1306907	0		+=			
ANR	1306942	Identifier	result		1306907	0					
ANR	1306943	Identifier	min		1306907	1					
ANR	1306944	IfStatement	if ( result > max || result < 0 )		1306907	4					
ANR	1306945	Condition	result > max || result < 0	118:5:2934:2959	1306907	0	True				
ANR	1306946	OrExpression	result > max || result < 0		1306907	0		||			
ANR	1306947	RelationalExpression	result > max		1306907	0		>			
ANR	1306948	Identifier	result		1306907	0					
ANR	1306949	Identifier	max		1306907	1					
ANR	1306950	RelationalExpression	result < 0		1306907	1		<			
ANR	1306951	Identifier	result		1306907	0					
ANR	1306952	PrimaryExpression	0		1306907	1					
ANR	1306953	CompoundStatement		19:33:293:293	1306907	1					
ANR	1306954	ExpressionStatement	result = max	119:2:2966:2978	1306907	0	True				
ANR	1306955	AssignmentExpression	result = max		1306907	0		=			
ANR	1306956	Identifier	result		1306907	0					
ANR	1306957	Identifier	max		1306907	1					
ANR	1306958	ExpressionStatement	tries ++	123:1:3006:3013	1306907	5	True				
ANR	1306959	PostIncDecOperationExpression	tries ++		1306907	0					
ANR	1306960	Identifier	tries		1306907	0					
ANR	1306961	IncDec	++		1306907	1					
ANR	1306962	ExpressionStatement	prevBackoff = result	126:1:3039:3059	1306907	6	True				
ANR	1306963	AssignmentExpression	prevBackoff = result		1306907	0		=			
ANR	1306964	Identifier	prevBackoff		1306907	0					
ANR	1306965	Identifier	result		1306907	1					
ANR	1306966	ReturnStatement	return ( result ) ;	128:1:3064:3080	1306907	7	True				
ANR	1306967	Identifier	result		1306907	0					
ANR	1306968	ReturnType	int		1306907	1					
ANR	1306969	Identifier	ExponentialBackoff :: nextBackoff		1306907	2					
ANR	1306970	ParameterList			1306907	3					
ANR	1306971	CFGEntryNode	ENTRY		1306907		True				
ANR	1306972	CFGExitNode	EXIT		1306907		True				
ANR	1306973	Symbol	result		1306907						
ANR	1306974	Symbol	tries		1306907						
ANR	1306975	Symbol	min		1306907						
ANR	1306976	Symbol	backoff_mult		1306907						
ANR	1306977	Symbol	max		1306907						
ANR	1306978	Symbol	prevBackoff		1306907						
ANR	1306979	Symbol	base		1306907						
ANR	1306980	Function	ExponentialBackoff :: nextRandomBackoff	131:0:3085:3645							
ANR	1306981	FunctionDef	ExponentialBackoff :: nextRandomBackoff ()		1306980	0					
ANR	1306982	CompoundStatement		132:39:3128:3645	1306980	0					
ANR	1306983	IfStatement	if ( tries < 1 )		1306980	0					
ANR	1306984	Condition	tries < 1	135:5:3150:3158	1306980	0	True				
ANR	1306985	RelationalExpression	tries < 1		1306980	0		<			
ANR	1306986	Identifier	tries		1306980	0					
ANR	1306987	PrimaryExpression	1		1306980	1					
ANR	1306988	CompoundStatement		4:16:32:32	1306980	1					
ANR	1306989	ReturnStatement	return min ;	136:2:3165:3175	1306980	0	True				
ANR	1306990	Identifier	min		1306980	0					
ANR	1306991	IdentifierDeclStatement	unsigned int max_mult = 2 << ( tries - 1 ) ;	140:1:3218:3258	1306980	1	True				
ANR	1306992	IdentifierDecl	max_mult = 2 << ( tries - 1 )		1306980	0					
ANR	1306993	IdentifierDeclType	unsigned int		1306980	0					
ANR	1306994	Identifier	max_mult		1306980	1					
ANR	1306995	AssignmentExpression	max_mult = 2 << ( tries - 1 )		1306980	2		=			
ANR	1306996	Identifier	max_mult		1306980	0					
ANR	1306997	ShiftExpression	2 << ( tries - 1 )		1306980	1		<<			
ANR	1306998	PrimaryExpression	2		1306980	0					
ANR	1306999	AdditiveExpression	tries - 1		1306980	1		-			
ANR	1307000	Identifier	tries		1306980	0					
ANR	1307001	PrimaryExpression	1		1306980	1					
ANR	1307002	IdentifierDeclStatement	unsigned int backoff_mult = get_random_int ( ) % max_mult ;	143:1:3311:3366	1306980	2	True				
ANR	1307003	IdentifierDecl	backoff_mult = get_random_int ( ) % max_mult		1306980	0					
ANR	1307004	IdentifierDeclType	unsigned int		1306980	0					
ANR	1307005	Identifier	backoff_mult		1306980	1					
ANR	1307006	AssignmentExpression	backoff_mult = get_random_int ( ) % max_mult		1306980	2		=			
ANR	1307007	Identifier	backoff_mult		1306980	0					
ANR	1307008	MultiplicativeExpression	get_random_int ( ) % max_mult		1306980	1		%			
ANR	1307009	CallExpression	get_random_int ( )		1306980	0					
ANR	1307010	Callee	get_random_int		1306980	0					
ANR	1307011	Identifier	get_random_int		1306980	0					
ANR	1307012	ArgumentList			1306980	1					
ANR	1307013	Identifier	max_mult		1306980	1					
ANR	1307014	IdentifierDeclStatement	int result = ( int ) ( base * backoff_mult ) ;	145:1:3371:3410	1306980	3	True				
ANR	1307015	IdentifierDecl	result = ( int ) ( base * backoff_mult )		1306980	0					
ANR	1307016	IdentifierDeclType	int		1306980	0					
ANR	1307017	Identifier	result		1306980	1					
ANR	1307018	AssignmentExpression	result = ( int ) ( base * backoff_mult )		1306980	2		=			
ANR	1307019	Identifier	result		1306980	0					
ANR	1307020	CastExpression	( int ) ( base * backoff_mult )		1306980	1					
ANR	1307021	CastTarget	int		1306980	0					
ANR	1307022	MultiplicativeExpression	base * backoff_mult		1306980	1		*			
ANR	1307023	Identifier	base		1306980	0					
ANR	1307024	Identifier	backoff_mult		1306980	1					
ANR	1307025	ExpressionStatement	result += min	148:1:3439:3452	1306980	4	True				
ANR	1307026	AssignmentExpression	result += min		1306980	0		+=			
ANR	1307027	Identifier	result		1306980	0					
ANR	1307028	Identifier	min		1306980	1					
ANR	1307029	IfStatement	if ( result > max || result < 0 )		1306980	5					
ANR	1307030	Condition	result > max || result < 0	152:5:3497:3522	1306980	0	True				
ANR	1307031	OrExpression	result > max || result < 0		1306980	0		||			
ANR	1307032	RelationalExpression	result > max		1306980	0		>			
ANR	1307033	Identifier	result		1306980	0					
ANR	1307034	Identifier	max		1306980	1					
ANR	1307035	RelationalExpression	result < 0		1306980	1		<			
ANR	1307036	Identifier	result		1306980	0					
ANR	1307037	PrimaryExpression	0		1306980	1					
ANR	1307038	CompoundStatement		21:33:396:396	1306980	1					
ANR	1307039	ExpressionStatement	result = max	153:2:3529:3541	1306980	0	True				
ANR	1307040	AssignmentExpression	result = max		1306980	0		=			
ANR	1307041	Identifier	result		1306980	0					
ANR	1307042	Identifier	max		1306980	1					
ANR	1307043	ExpressionStatement	tries ++	157:1:3569:3576	1306980	6	True				
ANR	1307044	PostIncDecOperationExpression	tries ++		1306980	0					
ANR	1307045	Identifier	tries		1306980	0					
ANR	1307046	IncDec	++		1306980	1					
ANR	1307047	ExpressionStatement	prevBackoff = result	160:1:3602:3622	1306980	7	True				
ANR	1307048	AssignmentExpression	prevBackoff = result		1306980	0		=			
ANR	1307049	Identifier	prevBackoff		1306980	0					
ANR	1307050	Identifier	result		1306980	1					
ANR	1307051	ReturnStatement	return ( result ) ;	162:1:3627:3643	1306980	8	True				
ANR	1307052	Identifier	result		1306980	0					
ANR	1307053	ReturnType	int		1306980	1					
ANR	1307054	Identifier	ExponentialBackoff :: nextRandomBackoff		1306980	2					
ANR	1307055	ParameterList			1306980	3					
ANR	1307056	CFGEntryNode	ENTRY		1306980		True				
ANR	1307057	CFGExitNode	EXIT		1306980		True				
ANR	1307058	Symbol	result		1306980						
ANR	1307059	Symbol	tries		1306980						
ANR	1307060	Symbol	min		1306980						
ANR	1307061	Symbol	backoff_mult		1306980						
ANR	1307062	Symbol	max		1306980						
ANR	1307063	Symbol	prevBackoff		1306980						
ANR	1307064	Symbol	get_random_int		1306980						
ANR	1307065	Symbol	max_mult		1306980						
ANR	1307066	Symbol	base		1306980						
ANR	1307067	Function	ExponentialBackoff :: numberOfTries	165:0:3648:3705							
ANR	1307068	FunctionDef	ExponentialBackoff :: numberOfTries ()		1307067	0					
ANR	1307069	CompoundStatement		166:35:3687:3705	1307067	0					
ANR	1307070	ReturnStatement	return ( tries ) ;	167:1:3690:3703	1307067	0	True				
ANR	1307071	Identifier	tries		1307067	0					
ANR	1307072	ReturnType	int		1307067	1					
ANR	1307073	Identifier	ExponentialBackoff :: numberOfTries		1307067	2					
ANR	1307074	ParameterList			1307067	3					
ANR	1307075	CFGEntryNode	ENTRY		1307067		True				
ANR	1307076	CFGExitNode	EXIT		1307067		True				
ANR	1307077	Symbol	tries		1307067						
