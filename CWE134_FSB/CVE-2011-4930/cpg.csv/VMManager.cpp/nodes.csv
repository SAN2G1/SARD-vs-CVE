command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	592895	File	data/converged/CVE-2011-4930_htcondor/VMManager.cpp								
ANR	592896	DeclStmt									
ANR	592897	Decl							vm_register_interval extern ResMgr	vm_register_interval extern ResMgr *	resmgr
ANR	592898	DeclStmt									
ANR	592899	Decl							VMManager	VMManager *	vmmanager
ANR	592900	Function	VMManager :: VMManager	34:0:1099:1214							
ANR	592901	FunctionDef	VMManager :: VMManager ()		592900	0					
ANR	592902	CompoundStatement		35:0:1122:1214	592900	0					
ANR	592903	ExpressionStatement	m_vm_unrg_tid = - 1	36:1:1125:1143	592900	0	True				
ANR	592904	AssignmentExpression	m_vm_unrg_tid = - 1		592900	0		=			
ANR	592905	Identifier	m_vm_unrg_tid		592900	0					
ANR	592906	UnaryOperationExpression	- 1		592900	1					
ANR	592907	UnaryOperator	-		592900	0					
ANR	592908	PrimaryExpression	1		592900	1					
ANR	592909	ExpressionStatement	host_usable = 1	37:1:1146:1161	592900	1	True				
ANR	592910	AssignmentExpression	host_usable = 1		592900	0		=			
ANR	592911	Identifier	host_usable		592900	0					
ANR	592912	PrimaryExpression	1		592900	1					
ANR	592913	ExpressionStatement	m_vm_registered_num = 0	38:1:1164:1187	592900	2	True				
ANR	592914	AssignmentExpression	m_vm_registered_num = 0		592900	0		=			
ANR	592915	Identifier	m_vm_registered_num		592900	0					
ANR	592916	PrimaryExpression	0		592900	1					
ANR	592917	ExpressionStatement	allowed_vm_list = NULL	39:1:1190:1212	592900	3	True				
ANR	592918	AssignmentExpression	allowed_vm_list = NULL		592900	0		=			
ANR	592919	Identifier	allowed_vm_list		592900	0					
ANR	592920	Identifier	NULL		592900	1					
ANR	592921	Identifier	VMManager :: VMManager		592900	1					
ANR	592922	ParameterList			592900	2					
ANR	592923	CFGEntryNode	ENTRY		592900		True				
ANR	592924	CFGExitNode	EXIT		592900		True				
ANR	592925	Symbol	host_usable		592900						
ANR	592926	Symbol	NULL		592900						
ANR	592927	Symbol	m_vm_unrg_tid		592900						
ANR	592928	Symbol	m_vm_registered_num		592900						
ANR	592929	Symbol	allowed_vm_list		592900						
ANR	592930	Function	VMManager :: ~VMManager	42:0:1217:1671							
ANR	592931	FunctionDef	VMManager :: ~VMManager ()		592930	0					
ANR	592932	CompoundStatement		43:0:1241:1671	592930	0					
ANR	592933	ExpressionStatement	cancelUnRegisterTimer ( )	44:1:1244:1267	592930	0	True				
ANR	592934	CallExpression	cancelUnRegisterTimer ( )		592930	0					
ANR	592935	Callee	cancelUnRegisterTimer		592930	0					
ANR	592936	Identifier	cancelUnRegisterTimer		592930	0					
ANR	592937	ArgumentList			592930	1					
ANR	592938	ExpressionStatement	m_virtualmachines . Rewind ( )	47:1:1304:1330	592930	1	True				
ANR	592939	CallExpression	m_virtualmachines . Rewind ( )		592930	0					
ANR	592940	Callee	m_virtualmachines . Rewind		592930	0					
ANR	592941	MemberAccess	m_virtualmachines . Rewind		592930	0					
ANR	592942	Identifier	m_virtualmachines		592930	0					
ANR	592943	Identifier	Rewind		592930	1					
ANR	592944	ArgumentList			592930	1					
ANR	592945	IdentifierDeclStatement	VMMachine * i ;	49:1:1334:1346	592930	2	True				
ANR	592946	IdentifierDecl	* i		592930	0					
ANR	592947	IdentifierDeclType	VMMachine *		592930	0					
ANR	592948	Identifier	i		592930	1					
ANR	592949	WhileStatement	while ( m_virtualmachines . Next ( i ) )		592930	3					
ANR	592950	Condition	m_virtualmachines . Next ( i )	50:8:1356:1380	592930	0	True				
ANR	592951	CallExpression	m_virtualmachines . Next ( i )		592930	0					
ANR	592952	Callee	m_virtualmachines . Next		592930	0					
ANR	592953	MemberAccess	m_virtualmachines . Next		592930	0					
ANR	592954	Identifier	m_virtualmachines		592930	0					
ANR	592955	Identifier	Next		592930	1					
ANR	592956	ArgumentList	i		592930	1					
ANR	592957	Argument	i		592930	0					
ANR	592958	Identifier	i		592930	0					
ANR	592959	CompoundStatement		8:36:142:142	592930	1					
ANR	592960	Statement	delete	52:2:1452:1457	592930	0	True				
ANR	592961	ExpressionStatement	i	52:8:1458:1461	592930	1	True				
ANR	592962	Identifier	i		592930	0					
ANR	592963	IfStatement	if ( m_vm_registered_num == 0 )		592930	2					
ANR	592964	Condition	m_vm_registered_num == 0	53:6:1469:1492	592930	0	True				
ANR	592965	EqualityExpression	m_vm_registered_num == 0		592930	0		==			
ANR	592966	Identifier	m_vm_registered_num		592930	0					
ANR	592967	PrimaryExpression	0		592930	1					
ANR	592968	CompoundStatement		11:33:254:254	592930	1					
ANR	592969	IfStatement	if ( host_usable == 0 )		592930	0					
ANR	592970	Condition	host_usable == 0	54:7:1505:1520	592930	0	True				
ANR	592971	EqualityExpression	host_usable == 0		592930	0		==			
ANR	592972	Identifier	host_usable		592930	0					
ANR	592973	PrimaryExpression	0		592930	1					
ANR	592974	CompoundStatement		12:26:282:282	592930	1					
ANR	592975	ExpressionStatement	host_usable = 1	55:4:1530:1545	592930	0	True				
ANR	592976	AssignmentExpression	host_usable = 1		592930	0		=			
ANR	592977	Identifier	host_usable		592930	0					
ANR	592978	PrimaryExpression	1		592930	1					
ANR	592979	IfStatement	if ( resmgr )		592930	1					
ANR	592980	Condition	resmgr	56:8:1555:1560	592930	0	True				
ANR	592981	Identifier	resmgr		592930	0					
ANR	592982	CompoundStatement		14:17:322:322	592930	1					
ANR	592983	ExpressionStatement	resmgr -> eval_and_update_all ( )	57:5:1571:1600	592930	0	True				
ANR	592984	CallExpression	resmgr -> eval_and_update_all ( )		592930	0					
ANR	592985	Callee	resmgr -> eval_and_update_all		592930	0					
ANR	592986	PtrMemberAccess	resmgr -> eval_and_update_all		592930	0					
ANR	592987	Identifier	resmgr		592930	0					
ANR	592988	Identifier	eval_and_update_all		592930	1					
ANR	592989	ArgumentList			592930	1					
ANR	592990	IfStatement	if ( allowed_vm_list )		592930	4					
ANR	592991	Condition	allowed_vm_list	63:5:1626:1640	592930	0	True				
ANR	592992	Identifier	allowed_vm_list		592930	0					
ANR	592993	Statement	delete	64:2:1646:1651	592930	1	True				
ANR	592994	ExpressionStatement	allowed_vm_list	64:8:1652:1669	592930	5	True				
ANR	592995	Identifier	allowed_vm_list		592930	0					
ANR	592996	Identifier	VMManager :: ~VMManager		592930	1					
ANR	592997	ParameterList			592930	2					
ANR	592998	CFGEntryNode	ENTRY		592930		True				
ANR	592999	CFGExitNode	EXIT		592930		True				
ANR	593000	Symbol	host_usable		592930						
ANR	593001	Symbol	m_virtualmachines		592930						
ANR	593002	Symbol	resmgr		592930						
ANR	593003	Symbol	m_virtualmachines . Next		592930						
ANR	593004	Symbol	i		592930						
ANR	593005	Symbol	m_vm_registered_num		592930						
ANR	593006	Symbol	allowed_vm_list		592930						
ANR	593007	Function	VMManager :: numOfVM	67:0:1674:1734							
ANR	593008	FunctionDef	VMManager :: numOfVM ()		593007	0					
ANR	593009	CompoundStatement		69:0:1703:1734	593007	0					
ANR	593010	ReturnStatement	return m_vm_registered_num ;	70:1:1706:1732	593007	0	True				
ANR	593011	Identifier	m_vm_registered_num		593007	0					
ANR	593012	ReturnType	int		593007	1					
ANR	593013	Identifier	VMManager :: numOfVM		593007	2					
ANR	593014	ParameterList			593007	3					
ANR	593015	CFGEntryNode	ENTRY		593007		True				
ANR	593016	CFGExitNode	EXIT		593007		True				
ANR	593017	Symbol	m_vm_registered_num		593007						
ANR	593018	Function	VMManager :: isRegistered	73:0:1737:2036							
ANR	593019	FunctionDef	"VMManager :: isRegistered (char * addr , int update_time)"		593018	0					
ANR	593020	CompoundStatement		75:0:1797:2036	593018	0					
ANR	593021	ExpressionStatement	m_virtualmachines . Rewind ( )	76:1:1800:1826	593018	0	True				
ANR	593022	CallExpression	m_virtualmachines . Rewind ( )		593018	0					
ANR	593023	Callee	m_virtualmachines . Rewind		593018	0					
ANR	593024	MemberAccess	m_virtualmachines . Rewind		593018	0					
ANR	593025	Identifier	m_virtualmachines		593018	0					
ANR	593026	Identifier	Rewind		593018	1					
ANR	593027	ArgumentList			593018	1					
ANR	593028	IdentifierDeclStatement	VMMachine * i ;	78:1:1830:1842	593018	1	True				
ANR	593029	IdentifierDecl	* i		593018	0					
ANR	593030	IdentifierDeclType	VMMachine *		593018	0					
ANR	593031	Identifier	i		593018	1					
ANR	593032	IdentifierDeclStatement	bool result = FALSE ;	79:1:1845:1864	593018	2	True				
ANR	593033	IdentifierDecl	result = FALSE		593018	0					
ANR	593034	IdentifierDeclType	bool		593018	0					
ANR	593035	Identifier	result		593018	1					
ANR	593036	AssignmentExpression	result = FALSE		593018	2		=			
ANR	593037	Identifier	FALSE		593018	0					
ANR	593038	Identifier	FALSE		593018	1					
ANR	593039	WhileStatement	while ( m_virtualmachines . Next ( i ) )		593018	3					
ANR	593040	Condition	m_virtualmachines . Next ( i )	80:8:1874:1898	593018	0	True				
ANR	593041	CallExpression	m_virtualmachines . Next ( i )		593018	0					
ANR	593042	Callee	m_virtualmachines . Next		593018	0					
ANR	593043	MemberAccess	m_virtualmachines . Next		593018	0					
ANR	593044	Identifier	m_virtualmachines		593018	0					
ANR	593045	Identifier	Next		593018	1					
ANR	593046	ArgumentList	i		593018	1					
ANR	593047	Argument	i		593018	0					
ANR	593048	Identifier	i		593018	0					
ANR	593049	CompoundStatement		6:36:104:104	593018	1					
ANR	593050	ExpressionStatement	result = i -> match ( addr )	81:2:1906:1929	593018	0	True				
ANR	593051	AssignmentExpression	result = i -> match ( addr )		593018	0		=			
ANR	593052	Identifier	result		593018	0					
ANR	593053	CallExpression	i -> match ( addr )		593018	1					
ANR	593054	Callee	i -> match		593018	0					
ANR	593055	PtrMemberAccess	i -> match		593018	0					
ANR	593056	Identifier	i		593018	0					
ANR	593057	Identifier	match		593018	1					
ANR	593058	ArgumentList	addr		593018	1					
ANR	593059	Argument	addr		593018	0					
ANR	593060	Identifier	addr		593018	0					
ANR	593061	IfStatement	if ( result )		593018	1					
ANR	593062	Condition	result	83:6:1938:1943	593018	0	True				
ANR	593063	Identifier	result		593018	0					
ANR	593064	CompoundStatement		9:15:149:149	593018	1					
ANR	593065	IfStatement	if ( update_time )		593018	0					
ANR	593066	Condition	update_time	84:7:1956:1966	593018	0	True				
ANR	593067	Identifier	update_time		593018	0					
ANR	593068	ExpressionStatement	i -> updateTimeStamp ( )	85:4:1974:1994	593018	1	True				
ANR	593069	CallExpression	i -> updateTimeStamp ( )		593018	0					
ANR	593070	Callee	i -> updateTimeStamp		593018	0					
ANR	593071	PtrMemberAccess	i -> updateTimeStamp		593018	0					
ANR	593072	Identifier	i		593018	0					
ANR	593073	Identifier	updateTimeStamp		593018	1					
ANR	593074	ArgumentList			593018	1					
ANR	593075	ReturnStatement	return TRUE ;	87:3:2000:2011	593018	1	True				
ANR	593076	Identifier	TRUE		593018	0					
ANR	593077	ReturnStatement	return FALSE ;	91:1:2022:2034	593018	4	True				
ANR	593078	Identifier	FALSE		593018	0					
ANR	593079	ReturnType	bool		593018	1					
ANR	593080	Identifier	VMManager :: isRegistered		593018	2					
ANR	593081	ParameterList	"char * addr , int update_time"		593018	3					
ANR	593082	Parameter	char * addr	74:24:1767:1776	593018	0	True				
ANR	593083	ParameterType	char *		593018	0					
ANR	593084	Identifier	addr		593018	1					
ANR	593085	Parameter	int update_time	74:36:1779:1793	593018	1	True				
ANR	593086	ParameterType	int		593018	0					
ANR	593087	Identifier	update_time		593018	1					
ANR	593088	CFGEntryNode	ENTRY		593018		True				
ANR	593089	CFGExitNode	EXIT		593018		True				
ANR	593090	Symbol	result		593018						
ANR	593091	Symbol	i -> match		593018						
ANR	593092	Symbol	update_time		593018						
ANR	593093	Symbol	m_virtualmachines		593018						
ANR	593094	Symbol	* i		593018						
ANR	593095	Symbol	m_virtualmachines . Next		593018						
ANR	593096	Symbol	i		593018						
ANR	593097	Symbol	TRUE		593018						
ANR	593098	Symbol	FALSE		593018						
ANR	593099	Symbol	addr		593018						
ANR	593100	Function	VMManager :: attach	94:0:2039:2234							
ANR	593101	FunctionDef	VMManager :: attach (VMMachine * o)		593100	0					
ANR	593102	CompoundStatement		96:0:2078:2234	593100	0					
ANR	593103	ExpressionStatement	m_virtualmachines . Append ( o )	97:1:2081:2108	593100	0	True				
ANR	593104	CallExpression	m_virtualmachines . Append ( o )		593100	0					
ANR	593105	Callee	m_virtualmachines . Append		593100	0					
ANR	593106	MemberAccess	m_virtualmachines . Append		593100	0					
ANR	593107	Identifier	m_virtualmachines		593100	0					
ANR	593108	Identifier	Append		593100	1					
ANR	593109	ArgumentList	o		593100	1					
ANR	593110	Argument	o		593100	0					
ANR	593111	Identifier	o		593100	0					
ANR	593112	ExpressionStatement	m_vm_registered_num ++	98:1:2111:2132	593100	1	True				
ANR	593113	PostIncDecOperationExpression	m_vm_registered_num ++		593100	0					
ANR	593114	Identifier	m_vm_registered_num		593100	0					
ANR	593115	IncDec	++		593100	1					
ANR	593116	ExpressionStatement	startUnRegisterTimer ( )	99:1:2135:2157	593100	2	True				
ANR	593117	CallExpression	startUnRegisterTimer ( )		593100	0					
ANR	593118	Callee	startUnRegisterTimer		593100	0					
ANR	593119	Identifier	startUnRegisterTimer		593100	0					
ANR	593120	ArgumentList			593100	1					
ANR	593121	ExpressionStatement	"dprintf ( D_ALWAYS , ""Virtual machine(%s) is attached\\n"" , o -> getVMSinful ( ) )"	100:1:2160:2232	593100	3	True				
ANR	593122	CallExpression	"dprintf ( D_ALWAYS , ""Virtual machine(%s) is attached\\n"" , o -> getVMSinful ( ) )"		593100	0					
ANR	593123	Callee	dprintf		593100	0					
ANR	593124	Identifier	dprintf		593100	0					
ANR	593125	ArgumentList	D_ALWAYS		593100	1					
ANR	593126	Argument	D_ALWAYS		593100	0					
ANR	593127	Identifier	D_ALWAYS		593100	0					
ANR	593128	Argument	"""Virtual machine(%s) is attached\\n"""		593100	1					
ANR	593129	PrimaryExpression	"""Virtual machine(%s) is attached\\n"""		593100	0					
ANR	593130	Argument	o -> getVMSinful ( )		593100	2					
ANR	593131	CallExpression	o -> getVMSinful ( )		593100	0					
ANR	593132	Callee	o -> getVMSinful		593100	0					
ANR	593133	PtrMemberAccess	o -> getVMSinful		593100	0					
ANR	593134	Identifier	o		593100	0					
ANR	593135	Identifier	getVMSinful		593100	1					
ANR	593136	ArgumentList			593100	1					
ANR	593137	ReturnType	void		593100	1					
ANR	593138	Identifier	VMManager :: attach		593100	2					
ANR	593139	ParameterList	VMMachine * o		593100	3					
ANR	593140	Parameter	VMMachine * o	95:18:2063:2074	593100	0	True				
ANR	593141	ParameterType	VMMachine *		593100	0					
ANR	593142	Identifier	o		593100	1					
ANR	593143	CFGEntryNode	ENTRY		593100		True				
ANR	593144	CFGExitNode	EXIT		593100		True				
ANR	593145	Symbol	m_virtualmachines		593100						
ANR	593146	Symbol	D_ALWAYS		593100						
ANR	593147	Symbol	* o		593100						
ANR	593148	Symbol	m_vm_registered_num		593100						
ANR	593149	Symbol	o		593100						
ANR	593150	Symbol	o -> getVMSinful		593100						
ANR	593151	Function	VMManager :: detach	103:0:2237:2467							
ANR	593152	FunctionDef	VMManager :: detach (VMMachine * o)		593151	0					
ANR	593153	CompoundStatement		105:0:2276:2467	593151	0					
ANR	593154	ExpressionStatement	m_virtualmachines . Delete ( o )	106:1:2279:2306	593151	0	True				
ANR	593155	CallExpression	m_virtualmachines . Delete ( o )		593151	0					
ANR	593156	Callee	m_virtualmachines . Delete		593151	0					
ANR	593157	MemberAccess	m_virtualmachines . Delete		593151	0					
ANR	593158	Identifier	m_virtualmachines		593151	0					
ANR	593159	Identifier	Delete		593151	1					
ANR	593160	ArgumentList	o		593151	1					
ANR	593161	Argument	o		593151	0					
ANR	593162	Identifier	o		593151	0					
ANR	593163	ExpressionStatement	m_vm_registered_num --	107:1:2309:2330	593151	1	True				
ANR	593164	PostIncDecOperationExpression	m_vm_registered_num --		593151	0					
ANR	593165	Identifier	m_vm_registered_num		593151	0					
ANR	593166	IncDec	--		593151	1					
ANR	593167	IfStatement	if ( m_vm_registered_num == 0 )		593151	2					
ANR	593168	Condition	m_vm_registered_num == 0	109:5:2338:2361	593151	0	True				
ANR	593169	EqualityExpression	m_vm_registered_num == 0		593151	0		==			
ANR	593170	Identifier	m_vm_registered_num		593151	0					
ANR	593171	PrimaryExpression	0		593151	1					
ANR	593172	ExpressionStatement	cancelUnRegisterTimer ( )	110:2:2367:2390	593151	1	True				
ANR	593173	CallExpression	cancelUnRegisterTimer ( )		593151	0					
ANR	593174	Callee	cancelUnRegisterTimer		593151	0					
ANR	593175	Identifier	cancelUnRegisterTimer		593151	0					
ANR	593176	ArgumentList			593151	1					
ANR	593177	ExpressionStatement	"dprintf ( D_ALWAYS , ""Virtual machine(%s) is detached\\n"" , o -> getVMSinful ( ) )"	112:1:2394:2465	593151	3	True				
ANR	593178	CallExpression	"dprintf ( D_ALWAYS , ""Virtual machine(%s) is detached\\n"" , o -> getVMSinful ( ) )"		593151	0					
ANR	593179	Callee	dprintf		593151	0					
ANR	593180	Identifier	dprintf		593151	0					
ANR	593181	ArgumentList	D_ALWAYS		593151	1					
ANR	593182	Argument	D_ALWAYS		593151	0					
ANR	593183	Identifier	D_ALWAYS		593151	0					
ANR	593184	Argument	"""Virtual machine(%s) is detached\\n"""		593151	1					
ANR	593185	PrimaryExpression	"""Virtual machine(%s) is detached\\n"""		593151	0					
ANR	593186	Argument	o -> getVMSinful ( )		593151	2					
ANR	593187	CallExpression	o -> getVMSinful ( )		593151	0					
ANR	593188	Callee	o -> getVMSinful		593151	0					
ANR	593189	PtrMemberAccess	o -> getVMSinful		593151	0					
ANR	593190	Identifier	o		593151	0					
ANR	593191	Identifier	getVMSinful		593151	1					
ANR	593192	ArgumentList			593151	1					
ANR	593193	ReturnType	void		593151	1					
ANR	593194	Identifier	VMManager :: detach		593151	2					
ANR	593195	ParameterList	VMMachine * o		593151	3					
ANR	593196	Parameter	VMMachine * o	104:18:2261:2272	593151	0	True				
ANR	593197	ParameterType	VMMachine *		593151	0					
ANR	593198	Identifier	o		593151	1					
ANR	593199	CFGEntryNode	ENTRY		593151		True				
ANR	593200	CFGExitNode	EXIT		593151		True				
ANR	593201	Symbol	m_virtualmachines		593151						
ANR	593202	Symbol	D_ALWAYS		593151						
ANR	593203	Symbol	* o		593151						
ANR	593204	Symbol	m_vm_registered_num		593151						
ANR	593205	Symbol	o		593151						
ANR	593206	Symbol	o -> getVMSinful		593151						
ANR	593207	Function	VMManager :: allNotify	115:0:2470:2743							
ANR	593208	FunctionDef	"VMManager :: allNotify (char * except_ip , int cmd , void * data)"		593207	0					
ANR	593209	CompoundStatement		117:0:2538:2743	593207	0					
ANR	593210	ExpressionStatement	m_virtualmachines . Rewind ( )	118:1:2541:2567	593207	0	True				
ANR	593211	CallExpression	m_virtualmachines . Rewind ( )		593207	0					
ANR	593212	Callee	m_virtualmachines . Rewind		593207	0					
ANR	593213	MemberAccess	m_virtualmachines . Rewind		593207	0					
ANR	593214	Identifier	m_virtualmachines		593207	0					
ANR	593215	Identifier	Rewind		593207	1					
ANR	593216	ArgumentList			593207	1					
ANR	593217	IdentifierDeclStatement	VMMachine * i ;	120:1:2571:2583	593207	1	True				
ANR	593218	IdentifierDecl	* i		593207	0					
ANR	593219	IdentifierDeclType	VMMachine *		593207	0					
ANR	593220	Identifier	i		593207	1					
ANR	593221	WhileStatement	while ( m_virtualmachines . Next ( i ) )		593207	2					
ANR	593222	Condition	m_virtualmachines . Next ( i )	121:8:2593:2617	593207	0	True				
ANR	593223	CallExpression	m_virtualmachines . Next ( i )		593207	0					
ANR	593224	Callee	m_virtualmachines . Next		593207	0					
ANR	593225	MemberAccess	m_virtualmachines . Next		593207	0					
ANR	593226	Identifier	m_virtualmachines		593207	0					
ANR	593227	Identifier	Next		593207	1					
ANR	593228	ArgumentList	i		593207	1					
ANR	593229	Argument	i		593207	0					
ANR	593230	Identifier	i		593207	0					
ANR	593231	CompoundStatement		5:36:82:82	593207	1					
ANR	593232	IfStatement	if ( except_ip && i -> match ( except_ip ) )		593207	0					
ANR	593233	Condition	except_ip && i -> match ( except_ip )	122:6:2629:2660	593207	0	True				
ANR	593234	AndExpression	except_ip && i -> match ( except_ip )		593207	0		&&			
ANR	593235	Identifier	except_ip		593207	0					
ANR	593236	CallExpression	i -> match ( except_ip )		593207	1					
ANR	593237	Callee	i -> match		593207	0					
ANR	593238	PtrMemberAccess	i -> match		593207	0					
ANR	593239	Identifier	i		593207	0					
ANR	593240	Identifier	match		593207	1					
ANR	593241	ArgumentList	except_ip		593207	1					
ANR	593242	Argument	except_ip		593207	0					
ANR	593243	Identifier	except_ip		593207	0					
ANR	593244	CompoundStatement		6:41:125:125	593207	1					
ANR	593245	ExpressionStatement	i -> updateTimeStamp ( )	123:3:2669:2689	593207	0	True				
ANR	593246	CallExpression	i -> updateTimeStamp ( )		593207	0					
ANR	593247	Callee	i -> updateTimeStamp		593207	0					
ANR	593248	PtrMemberAccess	i -> updateTimeStamp		593207	0					
ANR	593249	Identifier	i		593207	0					
ANR	593250	Identifier	updateTimeStamp		593207	1					
ANR	593251	ArgumentList			593207	1					
ANR	593252	ContinueStatement	continue ;	124:3:2694:2702	593207	1	True				
ANR	593253	ExpressionStatement	"i -> sendEventToVM ( cmd , data )"	127:2:2711:2738	593207	1	True				
ANR	593254	CallExpression	"i -> sendEventToVM ( cmd , data )"		593207	0					
ANR	593255	Callee	i -> sendEventToVM		593207	0					
ANR	593256	PtrMemberAccess	i -> sendEventToVM		593207	0					
ANR	593257	Identifier	i		593207	0					
ANR	593258	Identifier	sendEventToVM		593207	1					
ANR	593259	ArgumentList	cmd		593207	1					
ANR	593260	Argument	cmd		593207	0					
ANR	593261	Identifier	cmd		593207	0					
ANR	593262	Argument	data		593207	1					
ANR	593263	Identifier	data		593207	0					
ANR	593264	ReturnType	void		593207	1					
ANR	593265	Identifier	VMManager :: allNotify		593207	2					
ANR	593266	ParameterList	"char * except_ip , int cmd , void * data"		593207	3					
ANR	593267	Parameter	char * except_ip	116:22:2498:2512	593207	0	True				
ANR	593268	ParameterType	char *		593207	0					
ANR	593269	Identifier	except_ip		593207	1					
ANR	593270	Parameter	int cmd	116:39:2515:2521	593207	1	True				
ANR	593271	ParameterType	int		593207	0					
ANR	593272	Identifier	cmd		593207	1					
ANR	593273	Parameter	void * data	116:48:2524:2533	593207	2	True				
ANR	593274	ParameterType	void *		593207	0					
ANR	593275	Identifier	data		593207	1					
ANR	593276	CFGEntryNode	ENTRY		593207		True				
ANR	593277	CFGExitNode	EXIT		593207		True				
ANR	593278	Symbol	i -> match		593207						
ANR	593279	Symbol	except_ip		593207						
ANR	593280	Symbol	m_virtualmachines		593207						
ANR	593281	Symbol	* i		593207						
ANR	593282	Symbol	data		593207						
ANR	593283	Symbol	m_virtualmachines . Next		593207						
ANR	593284	Symbol	i		593207						
ANR	593285	Symbol	cmd		593207						
ANR	593286	Function	VMManager :: checkRegisterTimeout	131:0:2746:3244							
ANR	593287	FunctionDef	VMManager :: checkRegisterTimeout ()		593286	0					
ANR	593288	CompoundStatement		133:0:2790:3244	593286	0					
ANR	593289	IdentifierDeclStatement	int timeout = VM_UNREGISTER_TIMEOUT ;	134:1:2793:2828	593286	0	True				
ANR	593290	IdentifierDecl	timeout = VM_UNREGISTER_TIMEOUT		593286	0					
ANR	593291	IdentifierDeclType	int		593286	0					
ANR	593292	Identifier	timeout		593286	1					
ANR	593293	AssignmentExpression	timeout = VM_UNREGISTER_TIMEOUT		593286	2		=			
ANR	593294	Identifier	VM_UNREGISTER_TIMEOUT		593286	0					
ANR	593295	Identifier	VM_UNREGISTER_TIMEOUT		593286	1					
ANR	593296	ExpressionStatement	m_virtualmachines . Rewind ( )	135:1:2831:2857	593286	1	True				
ANR	593297	CallExpression	m_virtualmachines . Rewind ( )		593286	0					
ANR	593298	Callee	m_virtualmachines . Rewind		593286	0					
ANR	593299	MemberAccess	m_virtualmachines . Rewind		593286	0					
ANR	593300	Identifier	m_virtualmachines		593286	0					
ANR	593301	Identifier	Rewind		593286	1					
ANR	593302	ArgumentList			593286	1					
ANR	593303	IdentifierDeclStatement	VMMachine * i ;	137:1:2861:2873	593286	2	True				
ANR	593304	IdentifierDecl	* i		593286	0					
ANR	593305	IdentifierDeclType	VMMachine *		593286	0					
ANR	593306	Identifier	i		593286	1					
ANR	593307	IdentifierDeclStatement	time_t now ;	138:1:2876:2886	593286	3	True				
ANR	593308	IdentifierDecl	now		593286	0					
ANR	593309	IdentifierDeclType	time_t		593286	0					
ANR	593310	Identifier	now		593286	1					
ANR	593311	ExpressionStatement	now = time ( NULL )	139:1:2889:2905	593286	4	True				
ANR	593312	AssignmentExpression	now = time ( NULL )		593286	0		=			
ANR	593313	Identifier	now		593286	0					
ANR	593314	CallExpression	time ( NULL )		593286	1					
ANR	593315	Callee	time		593286	0					
ANR	593316	Identifier	time		593286	0					
ANR	593317	ArgumentList	NULL		593286	1					
ANR	593318	Argument	NULL		593286	0					
ANR	593319	Identifier	NULL		593286	0					
ANR	593320	WhileStatement	while ( m_virtualmachines . Next ( i ) )		593286	5					
ANR	593321	Condition	m_virtualmachines . Next ( i )	141:8:2916:2940	593286	0	True				
ANR	593322	CallExpression	m_virtualmachines . Next ( i )		593286	0					
ANR	593323	Callee	m_virtualmachines . Next		593286	0					
ANR	593324	MemberAccess	m_virtualmachines . Next		593286	0					
ANR	593325	Identifier	m_virtualmachines		593286	0					
ANR	593326	Identifier	Next		593286	1					
ANR	593327	ArgumentList	i		593286	1					
ANR	593328	Argument	i		593286	0					
ANR	593329	Identifier	i		593286	0					
ANR	593330	CompoundStatement		9:36:153:153	593286	1					
ANR	593331	IfStatement	if ( ( now - i -> getTimeStamp ( ) ) > timeout )		593286	0					
ANR	593332	Condition	( now - i -> getTimeStamp ( ) ) > timeout	142:6:2952:2988	593286	0	True				
ANR	593333	RelationalExpression	( now - i -> getTimeStamp ( ) ) > timeout		593286	0		>			
ANR	593334	AdditiveExpression	now - i -> getTimeStamp ( )		593286	0		-			
ANR	593335	Identifier	now		593286	0					
ANR	593336	CallExpression	i -> getTimeStamp ( )		593286	1					
ANR	593337	Callee	i -> getTimeStamp		593286	0					
ANR	593338	PtrMemberAccess	i -> getTimeStamp		593286	0					
ANR	593339	Identifier	i		593286	0					
ANR	593340	Identifier	getTimeStamp		593286	1					
ANR	593341	ArgumentList			593286	1					
ANR	593342	Identifier	timeout		593286	1					
ANR	593343	CompoundStatement		10:46:201:201	593286	1					
ANR	593344	Statement	delete	144:3:3064:3069	593286	0	True				
ANR	593345	ExpressionStatement	i	144:9:3070:3073	593286	1	True				
ANR	593346	Identifier	i		593286	0					
ANR	593347	IfStatement	if ( m_vm_registered_num == 0 )		593286	2					
ANR	593348	Condition	m_vm_registered_num == 0	145:7:3082:3105	593286	0	True				
ANR	593349	EqualityExpression	m_vm_registered_num == 0		593286	0		==			
ANR	593350	Identifier	m_vm_registered_num		593286	0					
ANR	593351	PrimaryExpression	0		593286	1					
ANR	593352	CompoundStatement		13:34:318:318	593286	1					
ANR	593353	IfStatement	if ( host_usable == 0 )		593286	0					
ANR	593354	Condition	host_usable == 0	146:8:3119:3134	593286	0	True				
ANR	593355	EqualityExpression	host_usable == 0		593286	0		==			
ANR	593356	Identifier	host_usable		593286	0					
ANR	593357	PrimaryExpression	0		593286	1					
ANR	593358	CompoundStatement		14:27:347:347	593286	1					
ANR	593359	ExpressionStatement	host_usable = 1	147:5:3145:3160	593286	0	True				
ANR	593360	AssignmentExpression	host_usable = 1		593286	0		=			
ANR	593361	Identifier	host_usable		593286	0					
ANR	593362	PrimaryExpression	1		593286	1					
ANR	593363	IfStatement	if ( resmgr )		593286	1					
ANR	593364	Condition	resmgr	148:9:3171:3176	593286	0	True				
ANR	593365	Identifier	resmgr		593286	0					
ANR	593366	CompoundStatement		16:18:389:389	593286	1					
ANR	593367	ExpressionStatement	resmgr -> eval_and_update_all ( )	149:6:3188:3217	593286	0	True				
ANR	593368	CallExpression	resmgr -> eval_and_update_all ( )		593286	0					
ANR	593369	Callee	resmgr -> eval_and_update_all		593286	0					
ANR	593370	PtrMemberAccess	resmgr -> eval_and_update_all		593286	0					
ANR	593371	Identifier	resmgr		593286	0					
ANR	593372	Identifier	eval_and_update_all		593286	1					
ANR	593373	ArgumentList			593286	1					
ANR	593374	ReturnType	void		593286	1					
ANR	593375	Identifier	VMManager :: checkRegisterTimeout		593286	2					
ANR	593376	ParameterList			593286	3					
ANR	593377	CFGEntryNode	ENTRY		593286		True				
ANR	593378	CFGExitNode	EXIT		593286		True				
ANR	593379	Symbol	NULL		593286						
ANR	593380	Symbol	m_virtualmachines . Next		593286						
ANR	593381	Symbol	i		593286						
ANR	593382	Symbol	timeout		593286						
ANR	593383	Symbol	host_usable		593286						
ANR	593384	Symbol	m_virtualmachines		593286						
ANR	593385	Symbol	* i		593286						
ANR	593386	Symbol	resmgr		593286						
ANR	593387	Symbol	now		593286						
ANR	593388	Symbol	VM_UNREGISTER_TIMEOUT		593286						
ANR	593389	Symbol	time		593286						
ANR	593390	Symbol	i -> getTimeStamp		593286						
ANR	593391	Symbol	m_vm_registered_num		593286						
ANR	593392	Function	VMManager :: printAllElements	157:0:3247:3390							
ANR	593393	FunctionDef	VMManager :: printAllElements ()		593392	0					
ANR	593394	CompoundStatement		159:0:3288:3390	593392	0					
ANR	593395	ExpressionStatement	m_virtualmachines . Rewind ( )	160:1:3291:3317	593392	0	True				
ANR	593396	CallExpression	m_virtualmachines . Rewind ( )		593392	0					
ANR	593397	Callee	m_virtualmachines . Rewind		593392	0					
ANR	593398	MemberAccess	m_virtualmachines . Rewind		593392	0					
ANR	593399	Identifier	m_virtualmachines		593392	0					
ANR	593400	Identifier	Rewind		593392	1					
ANR	593401	ArgumentList			593392	1					
ANR	593402	IdentifierDeclStatement	VMMachine * i ;	162:1:3321:3333	593392	1	True				
ANR	593403	IdentifierDecl	* i		593392	0					
ANR	593404	IdentifierDeclType	VMMachine *		593392	0					
ANR	593405	Identifier	i		593392	1					
ANR	593406	WhileStatement	while ( m_virtualmachines . Next ( i ) )		593392	2					
ANR	593407	Condition	m_virtualmachines . Next ( i )	163:8:3343:3367	593392	0	True				
ANR	593408	CallExpression	m_virtualmachines . Next ( i )		593392	0					
ANR	593409	Callee	m_virtualmachines . Next		593392	0					
ANR	593410	MemberAccess	m_virtualmachines . Next		593392	0					
ANR	593411	Identifier	m_virtualmachines		593392	0					
ANR	593412	Identifier	Next		593392	1					
ANR	593413	ArgumentList	i		593392	1					
ANR	593414	Argument	i		593392	0					
ANR	593415	Identifier	i		593392	0					
ANR	593416	CompoundStatement		5:36:82:82	593392	1					
ANR	593417	ExpressionStatement	i -> print ( )	164:2:3375:3385	593392	0	True				
ANR	593418	CallExpression	i -> print ( )		593392	0					
ANR	593419	Callee	i -> print		593392	0					
ANR	593420	PtrMemberAccess	i -> print		593392	0					
ANR	593421	Identifier	i		593392	0					
ANR	593422	Identifier	print		593392	1					
ANR	593423	ArgumentList			593392	1					
ANR	593424	ReturnType	void		593392	1					
ANR	593425	Identifier	VMManager :: printAllElements		593392	2					
ANR	593426	ParameterList			593392	3					
ANR	593427	CFGEntryNode	ENTRY		593392		True				
ANR	593428	CFGExitNode	EXIT		593392		True				
ANR	593429	Symbol	m_virtualmachines		593392						
ANR	593430	Symbol	m_virtualmachines . Next		593392						
ANR	593431	Symbol	i		593392						
ANR	593432	Function	VMManager :: startUnRegisterTimer	168:0:3393:3833							
ANR	593433	FunctionDef	VMManager :: startUnRegisterTimer ()		593432	0					
ANR	593434	CompoundStatement		170:0:3437:3833	593432	0					
ANR	593435	IfStatement	if ( m_vm_unrg_tid >= 0 )		593432	0					
ANR	593436	Condition	m_vm_unrg_tid >= 0	171:5:3444:3461	593432	0	True				
ANR	593437	RelationalExpression	m_vm_unrg_tid >= 0		593432	0		>=			
ANR	593438	Identifier	m_vm_unrg_tid		593432	0					
ANR	593439	PrimaryExpression	0		593432	1					
ANR	593440	CompoundStatement		2:26:27:27	593432	1					
ANR	593441	ReturnStatement	return ;	173:2:3506:3512	593432	0	True				
ANR	593442	ExpressionStatement	"m_vm_unrg_tid = daemonCore -> Register_Timer ( VM_UNREGISTER_TIMEOUT , VM_UNREGISTER_TIMEOUT , ( TimerHandlercpp ) & VMManager :: checkRegisterTimeout , ""poll_registered_vm"" , this )"	176:1:3519:3695	593432	1	True				
ANR	593443	AssignmentExpression	"m_vm_unrg_tid = daemonCore -> Register_Timer ( VM_UNREGISTER_TIMEOUT , VM_UNREGISTER_TIMEOUT , ( TimerHandlercpp ) & VMManager :: checkRegisterTimeout , ""poll_registered_vm"" , this )"		593432	0		=			
ANR	593444	Identifier	m_vm_unrg_tid		593432	0					
ANR	593445	CallExpression	"daemonCore -> Register_Timer ( VM_UNREGISTER_TIMEOUT , VM_UNREGISTER_TIMEOUT , ( TimerHandlercpp ) & VMManager :: checkRegisterTimeout , ""poll_registered_vm"" , this )"		593432	1					
ANR	593446	Callee	daemonCore -> Register_Timer		593432	0					
ANR	593447	PtrMemberAccess	daemonCore -> Register_Timer		593432	0					
ANR	593448	Identifier	daemonCore		593432	0					
ANR	593449	Identifier	Register_Timer		593432	1					
ANR	593450	ArgumentList	VM_UNREGISTER_TIMEOUT		593432	1					
ANR	593451	Argument	VM_UNREGISTER_TIMEOUT		593432	0					
ANR	593452	Identifier	VM_UNREGISTER_TIMEOUT		593432	0					
ANR	593453	Argument	VM_UNREGISTER_TIMEOUT		593432	1					
ANR	593454	Identifier	VM_UNREGISTER_TIMEOUT		593432	0					
ANR	593455	Argument	( TimerHandlercpp ) & VMManager :: checkRegisterTimeout		593432	2					
ANR	593456	CastExpression	( TimerHandlercpp ) & VMManager :: checkRegisterTimeout		593432	0					
ANR	593457	CastTarget	TimerHandlercpp		593432	0					
ANR	593458	UnaryOperationExpression	& VMManager :: checkRegisterTimeout		593432	1					
ANR	593459	UnaryOperator	&		593432	0					
ANR	593460	Identifier	VMManager :: checkRegisterTimeout		593432	1					
ANR	593461	Argument	"""poll_registered_vm"""		593432	3					
ANR	593462	PrimaryExpression	"""poll_registered_vm"""		593432	0					
ANR	593463	Argument	this		593432	4					
ANR	593464	Identifier	this		593432	0					
ANR	593465	IfStatement	if ( m_vm_unrg_tid < 0 )		593432	2					
ANR	593466	Condition	m_vm_unrg_tid < 0	181:5:3703:3719	593432	0	True				
ANR	593467	RelationalExpression	m_vm_unrg_tid < 0		593432	0		<			
ANR	593468	Identifier	m_vm_unrg_tid		593432	0					
ANR	593469	PrimaryExpression	0		593432	1					
ANR	593470	CompoundStatement		12:25:285:285	593432	1					
ANR	593471	ExpressionStatement	"EXCEPT ( ""Can't register DaemonCore Timer"" )"	182:2:3727:3768	593432	0	True				
ANR	593472	CallExpression	"EXCEPT ( ""Can't register DaemonCore Timer"" )"		593432	0					
ANR	593473	Callee	EXCEPT		593432	0					
ANR	593474	Identifier	EXCEPT		593432	0					
ANR	593475	ArgumentList	"""Can't register DaemonCore Timer"""		593432	1					
ANR	593476	Argument	"""Can't register DaemonCore Timer"""		593432	0					
ANR	593477	PrimaryExpression	"""Can't register DaemonCore Timer"""		593432	0					
ANR	593478	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Starting vm unregister timer.\\n"" )"	185:1:3775:3831	593432	3	True				
ANR	593479	CallExpression	"dprintf ( D_FULLDEBUG , ""Starting vm unregister timer.\\n"" )"		593432	0					
ANR	593480	Callee	dprintf		593432	0					
ANR	593481	Identifier	dprintf		593432	0					
ANR	593482	ArgumentList	D_FULLDEBUG		593432	1					
ANR	593483	Argument	D_FULLDEBUG		593432	0					
ANR	593484	Identifier	D_FULLDEBUG		593432	0					
ANR	593485	Argument	"""Starting vm unregister timer.\\n"""		593432	1					
ANR	593486	PrimaryExpression	"""Starting vm unregister timer.\\n"""		593432	0					
ANR	593487	ReturnType	void		593432	1					
ANR	593488	Identifier	VMManager :: startUnRegisterTimer		593432	2					
ANR	593489	ParameterList			593432	3					
ANR	593490	CFGEntryNode	ENTRY		593432		True				
ANR	593491	CFGExitNode	EXIT		593432		True				
ANR	593492	Symbol	m_vm_unrg_tid		593432						
ANR	593493	Symbol	& VMManager :: checkRegisterTimeout		593432						
ANR	593494	Symbol	* daemonCore		593432						
ANR	593495	Symbol	daemonCore		593432						
ANR	593496	Symbol	daemonCore -> Register_Timer		593432						
ANR	593497	Symbol	this		593432						
ANR	593498	Symbol	D_FULLDEBUG		593432						
ANR	593499	Symbol	VM_UNREGISTER_TIMEOUT		593432						
ANR	593500	Function	VMManager :: cancelUnRegisterTimer	188:0:3836:4209							
ANR	593501	FunctionDef	VMManager :: cancelUnRegisterTimer ()		593500	0					
ANR	593502	CompoundStatement		190:0:3881:4209	593500	0					
ANR	593503	IdentifierDeclStatement	int rval ;	191:1:3884:3892	593500	0	True				
ANR	593504	IdentifierDecl	rval		593500	0					
ANR	593505	IdentifierDeclType	int		593500	0					
ANR	593506	Identifier	rval		593500	1					
ANR	593507	IfStatement	if ( m_vm_unrg_tid != - 1 )		593500	1					
ANR	593508	Condition	m_vm_unrg_tid != - 1	192:5:3899:3917	593500	0	True				
ANR	593509	EqualityExpression	m_vm_unrg_tid != - 1		593500	0		!=			
ANR	593510	Identifier	m_vm_unrg_tid		593500	0					
ANR	593511	UnaryOperationExpression	- 1		593500	1					
ANR	593512	UnaryOperator	-		593500	0					
ANR	593513	PrimaryExpression	1		593500	1					
ANR	593514	CompoundStatement		3:27:39:39	593500	1					
ANR	593515	ExpressionStatement	rval = daemonCore -> Cancel_Timer ( m_vm_unrg_tid )	193:2:3925:3971	593500	0	True				
ANR	593516	AssignmentExpression	rval = daemonCore -> Cancel_Timer ( m_vm_unrg_tid )		593500	0		=			
ANR	593517	Identifier	rval		593500	0					
ANR	593518	CallExpression	daemonCore -> Cancel_Timer ( m_vm_unrg_tid )		593500	1					
ANR	593519	Callee	daemonCore -> Cancel_Timer		593500	0					
ANR	593520	PtrMemberAccess	daemonCore -> Cancel_Timer		593500	0					
ANR	593521	Identifier	daemonCore		593500	0					
ANR	593522	Identifier	Cancel_Timer		593500	1					
ANR	593523	ArgumentList	m_vm_unrg_tid		593500	1					
ANR	593524	Argument	m_vm_unrg_tid		593500	0					
ANR	593525	Identifier	m_vm_unrg_tid		593500	0					
ANR	593526	IfStatement	if ( rval < 0 )		593500	1					
ANR	593527	Condition	rval < 0	195:6:3980:3987	593500	0	True				
ANR	593528	RelationalExpression	rval < 0		593500	0		<			
ANR	593529	Identifier	rval		593500	0					
ANR	593530	PrimaryExpression	0		593500	1					
ANR	593531	CompoundStatement		6:17:109:109	593500	1					
ANR	593532	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to cancel vm unregister timer (%d): daemonCore error\\n"" , m_vm_unrg_tid )"	196:3:3996:4094	593500	0	True				
ANR	593533	CallExpression	"dprintf ( D_ALWAYS , ""Failed to cancel vm unregister timer (%d): daemonCore error\\n"" , m_vm_unrg_tid )"		593500	0					
ANR	593534	Callee	dprintf		593500	0					
ANR	593535	Identifier	dprintf		593500	0					
ANR	593536	ArgumentList	D_ALWAYS		593500	1					
ANR	593537	Argument	D_ALWAYS		593500	0					
ANR	593538	Identifier	D_ALWAYS		593500	0					
ANR	593539	Argument	"""Failed to cancel vm unregister timer (%d): daemonCore error\\n"""		593500	1					
ANR	593540	PrimaryExpression	"""Failed to cancel vm unregister timer (%d): daemonCore error\\n"""		593500	0					
ANR	593541	Argument	m_vm_unrg_tid		593500	2					
ANR	593542	Identifier	m_vm_unrg_tid		593500	0					
ANR	593543	ElseStatement	else		593500	0					
ANR	593544	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Canceled vm unregister timer (%d)\\n"" , m_vm_unrg_tid )"	198:3:4107:4182	593500	0	True				
ANR	593545	CallExpression	"dprintf ( D_FULLDEBUG , ""Canceled vm unregister timer (%d)\\n"" , m_vm_unrg_tid )"		593500	0					
ANR	593546	Callee	dprintf		593500	0					
ANR	593547	Identifier	dprintf		593500	0					
ANR	593548	ArgumentList	D_FULLDEBUG		593500	1					
ANR	593549	Argument	D_FULLDEBUG		593500	0					
ANR	593550	Identifier	D_FULLDEBUG		593500	0					
ANR	593551	Argument	"""Canceled vm unregister timer (%d)\\n"""		593500	1					
ANR	593552	PrimaryExpression	"""Canceled vm unregister timer (%d)\\n"""		593500	0					
ANR	593553	Argument	m_vm_unrg_tid		593500	2					
ANR	593554	Identifier	m_vm_unrg_tid		593500	0					
ANR	593555	ExpressionStatement	m_vm_unrg_tid = - 1	201:1:4189:4207	593500	2	True				
ANR	593556	AssignmentExpression	m_vm_unrg_tid = - 1		593500	0		=			
ANR	593557	Identifier	m_vm_unrg_tid		593500	0					
ANR	593558	UnaryOperationExpression	- 1		593500	1					
ANR	593559	UnaryOperator	-		593500	0					
ANR	593560	PrimaryExpression	1		593500	1					
ANR	593561	ReturnType	void		593500	1					
ANR	593562	Identifier	VMManager :: cancelUnRegisterTimer		593500	2					
ANR	593563	ParameterList			593500	3					
ANR	593564	CFGEntryNode	ENTRY		593500		True				
ANR	593565	CFGExitNode	EXIT		593500		True				
ANR	593566	Symbol	m_vm_unrg_tid		593500						
ANR	593567	Symbol	* daemonCore		593500						
ANR	593568	Symbol	daemonCore		593500						
ANR	593569	Symbol	D_ALWAYS		593500						
ANR	593570	Symbol	rval		593500						
ANR	593571	Symbol	D_FULLDEBUG		593500						
ANR	593572	Symbol	daemonCore -> Cancel_Timer		593500						
ANR	593573	Function	vmapi_create_vmmanager	204:0:4212:5021							
ANR	593574	FunctionDef	vmapi_create_vmmanager (char * list)		593573	0					
ANR	593575	CompoundStatement		206:0:4252:5021	593573	0					
ANR	593576	IdentifierDeclStatement	StringList tmplist ;	207:1:4255:4273	593573	0	True				
ANR	593577	IdentifierDecl	tmplist		593573	0					
ANR	593578	IdentifierDeclType	StringList		593573	0					
ANR	593579	Identifier	tmplist		593573	1					
ANR	593580	IfStatement	if ( ! list )		593573	1					
ANR	593581	Condition	! list	209:5:4281:4285	593573	0	True				
ANR	593582	UnaryOperationExpression	! list		593573	0					
ANR	593583	UnaryOperator	!		593573	0					
ANR	593584	Identifier	list		593573	1					
ANR	593585	ReturnStatement	return ;	210:2:4291:4297	593573	1	True				
ANR	593586	IfStatement	if ( vmmanager )		593573	2					
ANR	593587	Condition	vmmanager	212:5:4305:4313	593573	0	True				
ANR	593588	Identifier	vmmanager		593573	0					
ANR	593589	Statement	delete	212:17:4317:4322	593573	1	True				
ANR	593590	ExpressionStatement	vmmanager	212:23:4323:4334	593573	3	True				
ANR	593591	Identifier	vmmanager		593573	0					
ANR	593592	ExpressionStatement	tmplist . initializeFromString ( list )	214:1:4338:4372	593573	4	True				
ANR	593593	CallExpression	tmplist . initializeFromString ( list )		593573	0					
ANR	593594	Callee	tmplist . initializeFromString		593573	0					
ANR	593595	MemberAccess	tmplist . initializeFromString		593573	0					
ANR	593596	Identifier	tmplist		593573	0					
ANR	593597	Identifier	initializeFromString		593573	1					
ANR	593598	ArgumentList	list		593573	1					
ANR	593599	Argument	list		593573	0					
ANR	593600	Identifier	list		593573	0					
ANR	593601	IfStatement	if ( tmplist . number ( ) == 0 )		593573	5					
ANR	593602	Condition	tmplist . number ( ) == 0	215:5:4379:4399	593573	0	True				
ANR	593603	EqualityExpression	tmplist . number ( ) == 0		593573	0		==			
ANR	593604	CallExpression	tmplist . number ( )		593573	0					
ANR	593605	Callee	tmplist . number		593573	0					
ANR	593606	MemberAccess	tmplist . number		593573	0					
ANR	593607	Identifier	tmplist		593573	0					
ANR	593608	Identifier	number		593573	1					
ANR	593609	ArgumentList			593573	1					
ANR	593610	PrimaryExpression	0		593573	1					
ANR	593611	ReturnStatement	return ;	216:2:4405:4411	593573	1	True				
ANR	593612	IdentifierDeclStatement	char * vm_name ;	218:1:4415:4428	593573	6	True				
ANR	593613	IdentifierDecl	* vm_name		593573	0					
ANR	593614	IdentifierDeclType	char *		593573	0					
ANR	593615	Identifier	vm_name		593573	1					
ANR	593616	IdentifierDeclStatement	StringList * vm_list ;	220:1:4432:4451	593573	7	True				
ANR	593617	IdentifierDecl	* vm_list		593573	0					
ANR	593618	IdentifierDeclType	StringList *		593573	0					
ANR	593619	Identifier	vm_list		593573	1					
ANR	593620	ExpressionStatement	vm_list = new StringList ( )	221:1:4454:4480	593573	8	True				
ANR	593621	AssignmentExpression	vm_list = new StringList ( )		593573	0		=			
ANR	593622	Identifier	vm_list		593573	0					
ANR	593623	UnaryExpression	new StringList ( )		593573	1					
ANR	593624	ExpressionStatement	tmplist . rewind ( )	222:1:4483:4499	593573	9	True				
ANR	593625	CallExpression	tmplist . rewind ( )		593573	0					
ANR	593626	Callee	tmplist . rewind		593573	0					
ANR	593627	MemberAccess	tmplist . rewind		593573	0					
ANR	593628	Identifier	tmplist		593573	0					
ANR	593629	Identifier	rewind		593573	1					
ANR	593630	ArgumentList			593573	1					
ANR	593631	WhileStatement	while ( ( vm_name = tmplist . next ( ) ) )		593573	10					
ANR	593632	Condition	vm_name = tmplist . next ( )	223:8:4509:4534	593573	0	True				
ANR	593633	AssignmentExpression	vm_name = tmplist . next ( )		593573	0		=			
ANR	593634	Identifier	vm_name		593573	0					
ANR	593635	CallExpression	tmplist . next ( )		593573	1					
ANR	593636	Callee	tmplist . next		593573	0					
ANR	593637	MemberAccess	tmplist . next		593573	0					
ANR	593638	Identifier	tmplist		593573	0					
ANR	593639	Identifier	next		593573	1					
ANR	593640	ArgumentList			593573	1					
ANR	593641	CompoundStatement		25:2:423:449	593573	1					
ANR	593642	IdentifierDeclStatement	addrinfo_iterator iter ;	225:2:4565:4587	593573	0	True				
ANR	593643	IdentifierDecl	iter		593573	0					
ANR	593644	IdentifierDeclType	addrinfo_iterator		593573	0					
ANR	593645	Identifier	iter		593573	1					
ANR	593646	IdentifierDeclStatement	int ret ;	226:2:4591:4598	593573	1	True				
ANR	593647	IdentifierDecl	ret		593573	0					
ANR	593648	IdentifierDeclType	int		593573	0					
ANR	593649	Identifier	ret		593573	1					
ANR	593650	ExpressionStatement	"ret = ipv6_getaddrinfo ( vm_name , NULL , iter )"	227:2:4602:4645	593573	2	True				
ANR	593651	AssignmentExpression	"ret = ipv6_getaddrinfo ( vm_name , NULL , iter )"		593573	0		=			
ANR	593652	Identifier	ret		593573	0					
ANR	593653	CallExpression	"ipv6_getaddrinfo ( vm_name , NULL , iter )"		593573	1					
ANR	593654	Callee	ipv6_getaddrinfo		593573	0					
ANR	593655	Identifier	ipv6_getaddrinfo		593573	0					
ANR	593656	ArgumentList	vm_name		593573	1					
ANR	593657	Argument	vm_name		593573	0					
ANR	593658	Identifier	vm_name		593573	0					
ANR	593659	Argument	NULL		593573	1					
ANR	593660	Identifier	NULL		593573	0					
ANR	593661	Argument	iter		593573	2					
ANR	593662	Identifier	iter		593573	0					
ANR	593663	IfStatement	if ( ret != 0 )		593573	3					
ANR	593664	Condition	ret != 0	228:6:4653:4660	593573	0	True				
ANR	593665	EqualityExpression	ret != 0		593573	0		!=			
ANR	593666	Identifier	ret		593573	0					
ANR	593667	PrimaryExpression	0		593573	1					
ANR	593668	ContinueStatement	continue ;	228:16:4663:4671	593573	1	True				
ANR	593669	IdentifierDeclStatement	addrinfo * ai = iter . next ( ) ;	230:2:4676:4702	593573	4	True				
ANR	593670	IdentifierDecl	* ai = iter . next ( )		593573	0					
ANR	593671	IdentifierDeclType	addrinfo *		593573	0					
ANR	593672	Identifier	ai		593573	1					
ANR	593673	AssignmentExpression	* ai = iter . next ( )		593573	2		=			
ANR	593674	Identifier	ai		593573	0					
ANR	593675	CallExpression	iter . next ( )		593573	1					
ANR	593676	Callee	iter . next		593573	0					
ANR	593677	MemberAccess	iter . next		593573	0					
ANR	593678	Identifier	iter		593573	0					
ANR	593679	Identifier	next		593573	1					
ANR	593680	ArgumentList			593573	1					
ANR	593681	IfStatement	if ( ai )		593573	5					
ANR	593682	Condition	ai	231:6:4710:4711	593573	0	True				
ANR	593683	Identifier	ai		593573	0					
ANR	593684	CompoundStatement		27:3:466:499	593573	1					
ANR	593685	IdentifierDeclStatement	condor_sockaddr addr ( ai -> ai_addr ) ;	232:3:4719:4752	593573	0	True				
ANR	593686	IdentifierDecl	addr ( ai -> ai_addr )		593573	0					
ANR	593687	IdentifierDeclType	condor_sockaddr		593573	0					
ANR	593688	Identifier	addr		593573	1					
ANR	593689	PtrMemberAccess	ai -> ai_addr		593573	2					
ANR	593690	Identifier	ai		593573	0					
ANR	593691	Identifier	ai_addr		593573	1					
ANR	593692	ExpressionStatement	vm_list -> append ( strdup ( addr . to_ip_string ( ) . Value ( ) ) )	233:3:4757:4809	593573	1	True				
ANR	593693	CallExpression	vm_list -> append ( strdup ( addr . to_ip_string ( ) . Value ( ) ) )		593573	0					
ANR	593694	Callee	vm_list -> append		593573	0					
ANR	593695	PtrMemberAccess	vm_list -> append		593573	0					
ANR	593696	Identifier	vm_list		593573	0					
ANR	593697	Identifier	append		593573	1					
ANR	593698	ArgumentList	strdup ( addr . to_ip_string ( ) . Value ( ) )		593573	1					
ANR	593699	Argument	strdup ( addr . to_ip_string ( ) . Value ( ) )		593573	0					
ANR	593700	CallExpression	strdup ( addr . to_ip_string ( ) . Value ( ) )		593573	0					
ANR	593701	Callee	strdup		593573	0					
ANR	593702	Identifier	strdup		593573	0					
ANR	593703	ArgumentList	addr . to_ip_string ( ) . Value ( )		593573	1					
ANR	593704	Argument	addr . to_ip_string ( ) . Value ( )		593573	0					
ANR	593705	CallExpression	addr . to_ip_string ( ) . Value ( )		593573	0					
ANR	593706	Callee	addr . to_ip_string ( ) . Value		593573	0					
ANR	593707	MemberAccess	addr . to_ip_string ( ) . Value		593573	0					
ANR	593708	CallExpression	addr . to_ip_string ( )		593573	0					
ANR	593709	Callee	addr . to_ip_string		593573	0					
ANR	593710	MemberAccess	addr . to_ip_string		593573	0					
ANR	593711	Identifier	addr		593573	0					
ANR	593712	Identifier	to_ip_string		593573	1					
ANR	593713	ArgumentList			593573	1					
ANR	593714	Identifier	Value		593573	1					
ANR	593715	ArgumentList			593573	1					
ANR	593716	IfStatement	if ( vm_list -> number ( ) > 0 )		593573	11					
ANR	593717	Condition	vm_list -> number ( ) > 0	237:5:4824:4844	593573	0	True				
ANR	593718	RelationalExpression	vm_list -> number ( ) > 0		593573	0		>			
ANR	593719	CallExpression	vm_list -> number ( )		593573	0					
ANR	593720	Callee	vm_list -> number		593573	0					
ANR	593721	PtrMemberAccess	vm_list -> number		593573	0					
ANR	593722	Identifier	vm_list		593573	0					
ANR	593723	Identifier	number		593573	1					
ANR	593724	ArgumentList			593573	1					
ANR	593725	PrimaryExpression	0		593573	1					
ANR	593726	CompoundStatement		32:29:595:595	593573	1					
ANR	593727	ExpressionStatement	vmmanager = new VMManager ( )	238:2:4852:4879	593573	0	True				
ANR	593728	AssignmentExpression	vmmanager = new VMManager ( )		593573	0		=			
ANR	593729	Identifier	vmmanager		593573	0					
ANR	593730	UnaryExpression	new VMManager ( )		593573	1					
ANR	593731	ExpressionStatement	vmmanager -> allowed_vm_list = vm_list	239:2:4883:4919	593573	1	True				
ANR	593732	AssignmentExpression	vmmanager -> allowed_vm_list = vm_list		593573	0		=			
ANR	593733	PtrMemberAccess	vmmanager -> allowed_vm_list		593573	0					
ANR	593734	Identifier	vmmanager		593573	0					
ANR	593735	Identifier	allowed_vm_list		593573	1					
ANR	593736	Identifier	vm_list		593573	1					
ANR	593737	ElseStatement	else		593573	0					
ANR	593738	CompoundStatement		35:7:675:675	593573	0					
ANR	593739	ExpressionStatement	"dprintf ( D_ALWAYS , ""There is no valid name of virtual machine\\n"" )"	241:2:4932:4997	593573	0	True				
ANR	593740	CallExpression	"dprintf ( D_ALWAYS , ""There is no valid name of virtual machine\\n"" )"		593573	0					
ANR	593741	Callee	dprintf		593573	0					
ANR	593742	Identifier	dprintf		593573	0					
ANR	593743	ArgumentList	D_ALWAYS		593573	1					
ANR	593744	Argument	D_ALWAYS		593573	0					
ANR	593745	Identifier	D_ALWAYS		593573	0					
ANR	593746	Argument	"""There is no valid name of virtual machine\\n"""		593573	1					
ANR	593747	PrimaryExpression	"""There is no valid name of virtual machine\\n"""		593573	0					
ANR	593748	Statement	delete	242:2:5001:5006	593573	1	True				
ANR	593749	ExpressionStatement	vm_list	242:8:5007:5016	593573	2	True				
ANR	593750	Identifier	vm_list		593573	0					
ANR	593751	ReturnType	void		593573	1					
ANR	593752	Identifier	vmapi_create_vmmanager		593573	2					
ANR	593753	ParameterList	char * list		593573	3					
ANR	593754	Parameter	char * list	205:23:4240:4249	593573	0	True				
ANR	593755	ParameterType	char *		593573	0					
ANR	593756	Identifier	list		593573	1					
ANR	593757	CFGEntryNode	ENTRY		593573		True				
ANR	593758	CFGExitNode	EXIT		593573		True				
ANR	593759	Symbol	ret		593573						
ANR	593760	Symbol	addr . to_ip_string		593573						
ANR	593761	Symbol	vmmanager		593573						
ANR	593762	Symbol	NULL		593573						
ANR	593763	Symbol	tmplist		593573						
ANR	593764	Symbol	ipv6_getaddrinfo		593573						
ANR	593765	Symbol	* vmmanager		593573						
ANR	593766	Symbol	ai		593573						
ANR	593767	Symbol	D_ALWAYS		593573						
ANR	593768	Symbol	iter		593573						
ANR	593769	Symbol	vm_list		593573						
ANR	593770	Symbol	list		593573						
ANR	593771	Symbol	addr . to_ip_string ( ) . Value		593573						
ANR	593772	Symbol	vm_list -> number		593573						
ANR	593773	Symbol	tmplist . next		593573						
ANR	593774	Symbol	iter . next		593573						
ANR	593775	Symbol	strdup		593573						
ANR	593776	Symbol	addr		593573						
ANR	593777	Symbol	* vm_list		593573						
ANR	593778	Symbol	tmplist . number		593573						
ANR	593779	Symbol	vm_name		593573						
ANR	593780	Symbol	vmmanager -> allowed_vm_list		593573						
ANR	593781	Function	vmapi_destroy_vmmanager	246:0:5024:5125							
ANR	593782	FunctionDef	vmapi_destroy_vmmanager ()		593781	0					
ANR	593783	CompoundStatement		248:0:5059:5125	593781	0					
ANR	593784	IfStatement	if ( vmmanager )		593781	0					
ANR	593785	Condition	vmmanager	249:5:5066:5074	593781	0	True				
ANR	593786	Identifier	vmmanager		593781	0					
ANR	593787	CompoundStatement		2:17:18:18	593781	1					
ANR	593788	Statement	delete	250:2:5082:5087	593781	0	True				
ANR	593789	ExpressionStatement	vmmanager	250:8:5088:5099	593781	1	True				
ANR	593790	Identifier	vmmanager		593781	0					
ANR	593791	ExpressionStatement	vmmanager = NULL	251:2:5103:5119	593781	2	True				
ANR	593792	AssignmentExpression	vmmanager = NULL		593781	0		=			
ANR	593793	Identifier	vmmanager		593781	0					
ANR	593794	Identifier	NULL		593781	1					
ANR	593795	ReturnType	void		593781	1					
ANR	593796	Identifier	vmapi_destroy_vmmanager		593781	2					
ANR	593797	ParameterList			593781	3					
ANR	593798	CFGEntryNode	ENTRY		593781		True				
ANR	593799	CFGExitNode	EXIT		593781		True				
ANR	593800	Symbol	vmmanager		593781						
ANR	593801	Symbol	NULL		593781						
ANR	593802	Function	vmapi_is_host_machine	257:0:5129:5218							
ANR	593803	FunctionDef	vmapi_is_host_machine ()		593802	0					
ANR	593804	CompoundStatement		259:0:5162:5218	593802	0					
ANR	593805	IfStatement	if ( vmmanager )		593802	0					
ANR	593806	Condition	vmmanager	260:5:5169:5177	593802	0	True				
ANR	593807	Identifier	vmmanager		593802	0					
ANR	593808	ReturnStatement	return TRUE ;	261:2:5183:5194	593802	1	True				
ANR	593809	Identifier	TRUE		593802	0					
ANR	593810	ElseStatement	else		593802	0					
ANR	593811	ReturnStatement	return FALSE ;	263:2:5204:5216	593802	0	True				
ANR	593812	Identifier	FALSE		593802	0					
ANR	593813	ReturnType	bool		593802	1					
ANR	593814	Identifier	vmapi_is_host_machine		593802	2					
ANR	593815	ParameterList			593802	3					
ANR	593816	CFGEntryNode	ENTRY		593802		True				
ANR	593817	CFGExitNode	EXIT		593802		True				
ANR	593818	Symbol	vmmanager		593802						
ANR	593819	Symbol	TRUE		593802						
ANR	593820	Symbol	FALSE		593802						
