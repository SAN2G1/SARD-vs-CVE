command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5492491	File	data/converged/CVE-2011-4930_htcondor/uids.cpp								
ANR	5492492	DeclStmt									
ANR	5492493	Decl							char	char *	CondorUserName
ANR	5492494	DeclStmt									
ANR	5492495	Decl							const char	const char *	RealUserName
ANR	5492496	DeclStmt									
ANR	5492497	Decl							int	int	SwitchIds
ANR	5492498	DeclStmt									
ANR	5492499	Decl							int	int	UserIdsInited
ANR	5492500	DeclStmt									
ANR	5492501	Decl							int	int	OwnerIdsInited
ANR	5492502	DeclStmt									
ANR	5492503	Decl							priv_state	priv_state	CurrentPrivState
ANR	5492504	DeclStmt									
ANR	5492505	Decl							priv_state	priv_state	CurrentPrivState
ANR	5492506	DeclStmt									
ANR	5492507	Decl							gid_t	gid_t	TrackingGid
ANR	5492508	DeclStmt									
ANR	5492509	Decl							const char	const char * [ ]	priv_state_name
ANR	5492510	ClassDef	<unnamed>	72:7:2101:2210							
ANR	5492511	DeclStmt									
ANR	5492512	Decl							time_t	time_t	timestamp
ANR	5492513	DeclStmt									
ANR	5492514	Decl							priv_state	priv_state	priv
ANR	5492515	DeclStmt									
ANR	5492516	Decl							const char	const char *	file
ANR	5492517	DeclStmt									
ANR	5492518	Decl							int	int	line
ANR	5492519	DeclStmt									
ANR	5492520	Decl								 [ HISTORY_LENGTH ]	priv_history
ANR	5492521	DeclStmt									
ANR	5492522	Decl							int	int	ph_head
ANR	5492523	Decl							int	int	ph_count
ANR	5492524	Function	priv_to_string	80:0:2247:2383							
ANR	5492525	FunctionDef	priv_to_string (priv_state p)		5492524	0					
ANR	5492526	CompoundStatement		82:0:2290:2383	5492524	0					
ANR	5492527	IfStatement	if ( p < _priv_state_threshold )		5492524	0					
ANR	5492528	Condition	p < _priv_state_threshold	83:5:2297:2321	5492524	0	True				
ANR	5492529	RelationalExpression	p < _priv_state_threshold		5492524	0		<			
ANR	5492530	Identifier	p		5492524	0					
ANR	5492531	Identifier	_priv_state_threshold		5492524	1					
ANR	5492532	CompoundStatement		2:33:34:34	5492524	1					
ANR	5492533	ReturnStatement	return priv_state_name [ p ] ;	84:2:2329:2354	5492524	0	True				
ANR	5492534	ArrayIndexing	priv_state_name [ p ]		5492524	0					
ANR	5492535	Identifier	priv_state_name		5492524	0					
ANR	5492536	Identifier	p		5492524	1					
ANR	5492537	ReturnStatement	"return ""PRIV_INVALID"" ;"	86:1:2360:2381	5492524	1	True				
ANR	5492538	PrimaryExpression	"""PRIV_INVALID"""		5492524	0					
ANR	5492539	ReturnType	const char *		5492524	1					
ANR	5492540	Identifier	priv_to_string		5492524	2					
ANR	5492541	ParameterList	priv_state p		5492524	3					
ANR	5492542	Parameter	priv_state p	81:16:2275:2286	5492524	0	True				
ANR	5492543	ParameterType	priv_state		5492524	0					
ANR	5492544	Identifier	p		5492524	1					
ANR	5492545	CFGEntryNode	ENTRY		5492524		True				
ANR	5492546	CFGExitNode	EXIT		5492524		True				
ANR	5492547	Symbol	p		5492524						
ANR	5492548	Symbol	priv_state_name		5492524						
ANR	5492549	Symbol	* priv_state_name		5492524						
ANR	5492550	Symbol	_priv_state_threshold		5492524						
ANR	5492551	Symbol	* p		5492524						
ANR	5492552	Function	log_priv	89:0:2386:2859							
ANR	5492553	FunctionDef	"log_priv (priv_state prev , priv_state new_priv , const char * file , int line)"		5492552	0					
ANR	5492554	CompoundStatement		91:0:2466:2859	5492552	0					
ANR	5492555	ExpressionStatement	"dprintf ( D_PRIV , ""%s --> %s at %s:%d\\n"" , priv_state_name [ prev ] , priv_state_name [ new_priv ] , file , line )"	92:1:2469:2573	5492552	0	True				
ANR	5492556	CallExpression	"dprintf ( D_PRIV , ""%s --> %s at %s:%d\\n"" , priv_state_name [ prev ] , priv_state_name [ new_priv ] , file , line )"		5492552	0					
ANR	5492557	Callee	dprintf		5492552	0					
ANR	5492558	Identifier	dprintf		5492552	0					
ANR	5492559	ArgumentList	D_PRIV		5492552	1					
ANR	5492560	Argument	D_PRIV		5492552	0					
ANR	5492561	Identifier	D_PRIV		5492552	0					
ANR	5492562	Argument	"""%s --> %s at %s:%d\\n"""		5492552	1					
ANR	5492563	PrimaryExpression	"""%s --> %s at %s:%d\\n"""		5492552	0					
ANR	5492564	Argument	priv_state_name [ prev ]		5492552	2					
ANR	5492565	ArrayIndexing	priv_state_name [ prev ]		5492552	0					
ANR	5492566	Identifier	priv_state_name		5492552	0					
ANR	5492567	Identifier	prev		5492552	1					
ANR	5492568	Argument	priv_state_name [ new_priv ]		5492552	3					
ANR	5492569	ArrayIndexing	priv_state_name [ new_priv ]		5492552	0					
ANR	5492570	Identifier	priv_state_name		5492552	0					
ANR	5492571	Identifier	new_priv		5492552	1					
ANR	5492572	Argument	file		5492552	4					
ANR	5492573	Identifier	file		5492552	0					
ANR	5492574	Argument	line		5492552	5					
ANR	5492575	Identifier	line		5492552	0					
ANR	5492576	ExpressionStatement	priv_history [ ph_head ] . timestamp = time ( NULL )	94:1:2576:2620	5492552	1	True				
ANR	5492577	AssignmentExpression	priv_history [ ph_head ] . timestamp = time ( NULL )		5492552	0		=			
ANR	5492578	MemberAccess	priv_history [ ph_head ] . timestamp		5492552	0					
ANR	5492579	ArrayIndexing	priv_history [ ph_head ]		5492552	0					
ANR	5492580	Identifier	priv_history		5492552	0					
ANR	5492581	Identifier	ph_head		5492552	1					
ANR	5492582	Identifier	timestamp		5492552	1					
ANR	5492583	CallExpression	time ( NULL )		5492552	1					
ANR	5492584	Callee	time		5492552	0					
ANR	5492585	Identifier	time		5492552	0					
ANR	5492586	ArgumentList	NULL		5492552	1					
ANR	5492587	Argument	NULL		5492552	0					
ANR	5492588	Identifier	NULL		5492552	0					
ANR	5492589	ExpressionStatement	priv_history [ ph_head ] . priv = new_priv	95:1:2623:2660	5492552	2	True				
ANR	5492590	AssignmentExpression	priv_history [ ph_head ] . priv = new_priv		5492552	0		=			
ANR	5492591	MemberAccess	priv_history [ ph_head ] . priv		5492552	0					
ANR	5492592	ArrayIndexing	priv_history [ ph_head ]		5492552	0					
ANR	5492593	Identifier	priv_history		5492552	0					
ANR	5492594	Identifier	ph_head		5492552	1					
ANR	5492595	Identifier	priv		5492552	1					
ANR	5492596	Identifier	new_priv		5492552	1					
ANR	5492597	ExpressionStatement	priv_history [ ph_head ] . file = file	96:1:2663:2696	5492552	3	True				
ANR	5492598	AssignmentExpression	priv_history [ ph_head ] . file = file		5492552	0		=			
ANR	5492599	MemberAccess	priv_history [ ph_head ] . file		5492552	0					
ANR	5492600	ArrayIndexing	priv_history [ ph_head ]		5492552	0					
ANR	5492601	Identifier	priv_history		5492552	0					
ANR	5492602	Identifier	ph_head		5492552	1					
ANR	5492603	Identifier	file		5492552	1					
ANR	5492604	Identifier	file		5492552	1					
ANR	5492605	ExpressionStatement	priv_history [ ph_head ] . line = line	97:1:2737:2770	5492552	4	True				
ANR	5492606	AssignmentExpression	priv_history [ ph_head ] . line = line		5492552	0		=			
ANR	5492607	MemberAccess	priv_history [ ph_head ] . line		5492552	0					
ANR	5492608	ArrayIndexing	priv_history [ ph_head ]		5492552	0					
ANR	5492609	Identifier	priv_history		5492552	0					
ANR	5492610	Identifier	ph_head		5492552	1					
ANR	5492611	Identifier	line		5492552	1					
ANR	5492612	Identifier	line		5492552	1					
ANR	5492613	ExpressionStatement	ph_head = ( ph_head + 1 ) % HISTORY_LENGTH	98:1:2773:2813	5492552	5	True				
ANR	5492614	AssignmentExpression	ph_head = ( ph_head + 1 ) % HISTORY_LENGTH		5492552	0		=			
ANR	5492615	Identifier	ph_head		5492552	0					
ANR	5492616	MultiplicativeExpression	( ph_head + 1 ) % HISTORY_LENGTH		5492552	1		%			
ANR	5492617	AdditiveExpression	ph_head + 1		5492552	0		+			
ANR	5492618	Identifier	ph_head		5492552	0					
ANR	5492619	PrimaryExpression	1		5492552	1					
ANR	5492620	Identifier	HISTORY_LENGTH		5492552	1					
ANR	5492621	IfStatement	if ( ph_count < HISTORY_LENGTH )		5492552	6					
ANR	5492622	Condition	ph_count < HISTORY_LENGTH	99:5:2820:2844	5492552	0	True				
ANR	5492623	RelationalExpression	ph_count < HISTORY_LENGTH		5492552	0		<			
ANR	5492624	Identifier	ph_count		5492552	0					
ANR	5492625	Identifier	HISTORY_LENGTH		5492552	1					
ANR	5492626	ExpressionStatement	ph_count ++	99:32:2847:2857	5492552	1	True				
ANR	5492627	PostIncDecOperationExpression	ph_count ++		5492552	0					
ANR	5492628	Identifier	ph_count		5492552	0					
ANR	5492629	IncDec	++		5492552	1					
ANR	5492630	ReturnType	void		5492552	1					
ANR	5492631	Identifier	log_priv		5492552	2					
ANR	5492632	ParameterList	"priv_state prev , priv_state new_priv , const char * file , int line"		5492552	3					
ANR	5492633	Parameter	priv_state prev	90:9:2400:2414	5492552	0	True				
ANR	5492634	ParameterType	priv_state		5492552	0					
ANR	5492635	Identifier	prev		5492552	1					
ANR	5492636	Parameter	priv_state new_priv	90:26:2417:2435	5492552	1	True				
ANR	5492637	ParameterType	priv_state		5492552	0					
ANR	5492638	Identifier	new_priv		5492552	1					
ANR	5492639	Parameter	const char * file	90:47:2438:2453	5492552	2	True				
ANR	5492640	ParameterType	const char *		5492552	0					
ANR	5492641	Identifier	file		5492552	1					
ANR	5492642	Parameter	int line	90:65:2456:2463	5492552	3	True				
ANR	5492643	ParameterType	int		5492552	0					
ANR	5492644	Identifier	line		5492552	1					
ANR	5492645	CFGEntryNode	ENTRY		5492552		True				
ANR	5492646	CFGExitNode	EXIT		5492552		True				
ANR	5492647	Symbol	HISTORY_LENGTH		5492552						
ANR	5492648	Symbol	D_PRIV		5492552						
ANR	5492649	Symbol	NULL		5492552						
ANR	5492650	Symbol	priv_state_name		5492552						
ANR	5492651	Symbol	priv_history [ ph_head ] . file		5492552						
ANR	5492652	Symbol	line		5492552						
ANR	5492653	Symbol	prev		5492552						
ANR	5492654	Symbol	ph_count		5492552						
ANR	5492655	Symbol	* prev		5492552						
ANR	5492656	Symbol	priv_history [ ph_head ] . priv		5492552						
ANR	5492657	Symbol	* ph_head		5492552						
ANR	5492658	Symbol	priv_history		5492552						
ANR	5492659	Symbol	priv_history [ ph_head ] . timestamp		5492552						
ANR	5492660	Symbol	priv_history [ ph_head ] . line		5492552						
ANR	5492661	Symbol	file		5492552						
ANR	5492662	Symbol	* priv_state_name		5492552						
ANR	5492663	Symbol	* new_priv		5492552						
ANR	5492664	Symbol	* priv_history		5492552						
ANR	5492665	Symbol	new_priv		5492552						
ANR	5492666	Symbol	ph_head		5492552						
ANR	5492667	Symbol	time		5492552						
ANR	5492668	Function	display_priv_log	103:0:2863:3380							
ANR	5492669	FunctionDef	display_priv_log ()		5492668	0					
ANR	5492670	CompoundStatement		105:0:2891:3380	5492668	0					
ANR	5492671	IdentifierDeclStatement	"int i , idx ;"	106:1:2894:2904	5492668	0	True				
ANR	5492672	IdentifierDecl	i		5492668	0					
ANR	5492673	IdentifierDeclType	int		5492668	0					
ANR	5492674	Identifier	i		5492668	1					
ANR	5492675	IdentifierDecl	idx		5492668	1					
ANR	5492676	IdentifierDeclType	int		5492668	0					
ANR	5492677	Identifier	idx		5492668	1					
ANR	5492678	IfStatement	if ( can_switch_ids ( ) )		5492668	1					
ANR	5492679	Condition	can_switch_ids ( )	107:5:2911:2926	5492668	0	True				
ANR	5492680	CallExpression	can_switch_ids ( )		5492668	0					
ANR	5492681	Callee	can_switch_ids		5492668	0					
ANR	5492682	Identifier	can_switch_ids		5492668	0					
ANR	5492683	ArgumentList			5492668	1					
ANR	5492684	CompoundStatement		3:23:37:37	5492668	1					
ANR	5492685	ExpressionStatement	"dprintf ( D_ALWAYS , ""running as root; privilege switching in effect\\n"" )"	108:2:2933:3002	5492668	0	True				
ANR	5492686	CallExpression	"dprintf ( D_ALWAYS , ""running as root; privilege switching in effect\\n"" )"		5492668	0					
ANR	5492687	Callee	dprintf		5492668	0					
ANR	5492688	Identifier	dprintf		5492668	0					
ANR	5492689	ArgumentList	D_ALWAYS		5492668	1					
ANR	5492690	Argument	D_ALWAYS		5492668	0					
ANR	5492691	Identifier	D_ALWAYS		5492668	0					
ANR	5492692	Argument	"""running as root; privilege switching in effect\\n"""		5492668	1					
ANR	5492693	PrimaryExpression	"""running as root; privilege switching in effect\\n"""		5492668	0					
ANR	5492694	ElseStatement	else		5492668	0					
ANR	5492695	CompoundStatement		5:8:120:120	5492668	0					
ANR	5492696	ExpressionStatement	"dprintf ( D_ALWAYS , ""running as non-root; no privilege switching\\n"" )"	110:2:3016:3082	5492668	0	True				
ANR	5492697	CallExpression	"dprintf ( D_ALWAYS , ""running as non-root; no privilege switching\\n"" )"		5492668	0					
ANR	5492698	Callee	dprintf		5492668	0					
ANR	5492699	Identifier	dprintf		5492668	0					
ANR	5492700	ArgumentList	D_ALWAYS		5492668	1					
ANR	5492701	Argument	D_ALWAYS		5492668	0					
ANR	5492702	Identifier	D_ALWAYS		5492668	0					
ANR	5492703	Argument	"""running as non-root; no privilege switching\\n"""		5492668	1					
ANR	5492704	PrimaryExpression	"""running as non-root; no privilege switching\\n"""		5492668	0					
ANR	5492705	ForStatement	for ( i = 0 ; i < ph_count && i < HISTORY_LENGTH ; i ++ )		5492668	2					
ANR	5492706	ForInit	i = 0 ;	112:6:3095:3098	5492668	0	True				
ANR	5492707	AssignmentExpression	i = 0		5492668	0		=			
ANR	5492708	Identifier	i		5492668	0					
ANR	5492709	PrimaryExpression	0		5492668	1					
ANR	5492710	Condition	i < ph_count && i < HISTORY_LENGTH	112:11:3100:3133	5492668	1	True				
ANR	5492711	AndExpression	i < ph_count && i < HISTORY_LENGTH		5492668	0		&&			
ANR	5492712	RelationalExpression	i < ph_count		5492668	0		<			
ANR	5492713	Identifier	i		5492668	0					
ANR	5492714	Identifier	ph_count		5492668	1					
ANR	5492715	RelationalExpression	i < HISTORY_LENGTH		5492668	1		<			
ANR	5492716	Identifier	i		5492668	0					
ANR	5492717	Identifier	HISTORY_LENGTH		5492668	1					
ANR	5492718	PostIncDecOperationExpression	i ++	112:47:3136:3138	5492668	2	True				
ANR	5492719	Identifier	i		5492668	0					
ANR	5492720	IncDec	++		5492668	1					
ANR	5492721	CompoundStatement		8:52:249:249	5492668	3					
ANR	5492722	ExpressionStatement	idx = ( ph_head - i - 1 + HISTORY_LENGTH ) % HISTORY_LENGTH	113:2:3145:3194	5492668	0	True				
ANR	5492723	AssignmentExpression	idx = ( ph_head - i - 1 + HISTORY_LENGTH ) % HISTORY_LENGTH		5492668	0		=			
ANR	5492724	Identifier	idx		5492668	0					
ANR	5492725	MultiplicativeExpression	( ph_head - i - 1 + HISTORY_LENGTH ) % HISTORY_LENGTH		5492668	1		%			
ANR	5492726	AdditiveExpression	ph_head - i - 1 + HISTORY_LENGTH		5492668	0		-			
ANR	5492727	Identifier	ph_head		5492668	0					
ANR	5492728	AdditiveExpression	i - 1 + HISTORY_LENGTH		5492668	1		-			
ANR	5492729	Identifier	i		5492668	0					
ANR	5492730	AdditiveExpression	1 + HISTORY_LENGTH		5492668	1		+			
ANR	5492731	PrimaryExpression	1		5492668	0					
ANR	5492732	Identifier	HISTORY_LENGTH		5492668	1					
ANR	5492733	Identifier	HISTORY_LENGTH		5492668	1					
ANR	5492734	ExpressionStatement	"dprintf ( D_ALWAYS , ""--> %s at %s:%d %s"" , priv_state_name [ priv_history [ idx ] . priv ] , priv_history [ idx ] . file , priv_history [ idx ] . line , ctime ( & priv_history [ idx ] . timestamp ) )"	114:2:3198:3375	5492668	1	True				
ANR	5492735	CallExpression	"dprintf ( D_ALWAYS , ""--> %s at %s:%d %s"" , priv_state_name [ priv_history [ idx ] . priv ] , priv_history [ idx ] . file , priv_history [ idx ] . line , ctime ( & priv_history [ idx ] . timestamp ) )"		5492668	0					
ANR	5492736	Callee	dprintf		5492668	0					
ANR	5492737	Identifier	dprintf		5492668	0					
ANR	5492738	ArgumentList	D_ALWAYS		5492668	1					
ANR	5492739	Argument	D_ALWAYS		5492668	0					
ANR	5492740	Identifier	D_ALWAYS		5492668	0					
ANR	5492741	Argument	"""--> %s at %s:%d %s"""		5492668	1					
ANR	5492742	PrimaryExpression	"""--> %s at %s:%d %s"""		5492668	0					
ANR	5492743	Argument	priv_state_name [ priv_history [ idx ] . priv ]		5492668	2					
ANR	5492744	ArrayIndexing	priv_state_name [ priv_history [ idx ] . priv ]		5492668	0					
ANR	5492745	Identifier	priv_state_name		5492668	0					
ANR	5492746	MemberAccess	priv_history [ idx ] . priv		5492668	1					
ANR	5492747	ArrayIndexing	priv_history [ idx ]		5492668	0					
ANR	5492748	Identifier	priv_history		5492668	0					
ANR	5492749	Identifier	idx		5492668	1					
ANR	5492750	Identifier	priv		5492668	1					
ANR	5492751	Argument	priv_history [ idx ] . file		5492668	3					
ANR	5492752	MemberAccess	priv_history [ idx ] . file		5492668	0					
ANR	5492753	ArrayIndexing	priv_history [ idx ]		5492668	0					
ANR	5492754	Identifier	priv_history		5492668	0					
ANR	5492755	Identifier	idx		5492668	1					
ANR	5492756	Identifier	file		5492668	1					
ANR	5492757	Argument	priv_history [ idx ] . line		5492668	4					
ANR	5492758	MemberAccess	priv_history [ idx ] . line		5492668	0					
ANR	5492759	ArrayIndexing	priv_history [ idx ]		5492668	0					
ANR	5492760	Identifier	priv_history		5492668	0					
ANR	5492761	Identifier	idx		5492668	1					
ANR	5492762	Identifier	line		5492668	1					
ANR	5492763	Argument	ctime ( & priv_history [ idx ] . timestamp )		5492668	5					
ANR	5492764	CallExpression	ctime ( & priv_history [ idx ] . timestamp )		5492668	0					
ANR	5492765	Callee	ctime		5492668	0					
ANR	5492766	Identifier	ctime		5492668	0					
ANR	5492767	ArgumentList	& priv_history [ idx ] . timestamp		5492668	1					
ANR	5492768	Argument	& priv_history [ idx ] . timestamp		5492668	0					
ANR	5492769	UnaryOperationExpression	& priv_history [ idx ] . timestamp		5492668	0					
ANR	5492770	UnaryOperator	&		5492668	0					
ANR	5492771	MemberAccess	priv_history [ idx ] . timestamp		5492668	1					
ANR	5492772	ArrayIndexing	priv_history [ idx ]		5492668	0					
ANR	5492773	Identifier	priv_history		5492668	0					
ANR	5492774	Identifier	idx		5492668	1					
ANR	5492775	Identifier	timestamp		5492668	1					
ANR	5492776	ReturnType	void		5492668	1					
ANR	5492777	Identifier	display_priv_log		5492668	2					
ANR	5492778	ParameterList			5492668	3					
ANR	5492779	CFGEntryNode	ENTRY		5492668		True				
ANR	5492780	CFGExitNode	EXIT		5492668		True				
ANR	5492781	Symbol	HISTORY_LENGTH		5492668						
ANR	5492782	Symbol	priv_history [ idx ] . file		5492668						
ANR	5492783	Symbol	priv_state_name		5492668						
ANR	5492784	Symbol	* priv_history [ idx ] . priv		5492668						
ANR	5492785	Symbol	ph_count		5492668						
ANR	5492786	Symbol	D_ALWAYS		5492668						
ANR	5492787	Symbol	i		5492668						
ANR	5492788	Symbol	& priv_history [ idx ] . timestamp		5492668						
ANR	5492789	Symbol	priv_history		5492668						
ANR	5492790	Symbol	* * idx		5492668						
ANR	5492791	Symbol	can_switch_ids		5492668						
ANR	5492792	Symbol	priv_history [ idx ] . priv		5492668						
ANR	5492793	Symbol	* priv_state_name		5492668						
ANR	5492794	Symbol	priv_history [ idx ] . line		5492668						
ANR	5492795	Symbol	* priv_history		5492668						
ANR	5492796	Symbol	* idx		5492668						
ANR	5492797	Symbol	ctime		5492668						
ANR	5492798	Symbol	* * priv_history		5492668						
ANR	5492799	Symbol	ph_head		5492668						
ANR	5492800	Symbol	idx		5492668						
ANR	5492801	Function	get_priv	122:0:3384:3434							
ANR	5492802	FunctionDef	get_priv ()		5492801	0					
ANR	5492803	CompoundStatement		124:0:3406:3434	5492801	0					
ANR	5492804	ReturnStatement	return CurrentPrivState ;	125:1:3409:3432	5492801	0	True				
ANR	5492805	Identifier	CurrentPrivState		5492801	0					
ANR	5492806	ReturnType	priv_state		5492801	1					
ANR	5492807	Identifier	get_priv		5492801	2					
ANR	5492808	ParameterList			5492801	3					
ANR	5492809	CFGEntryNode	ENTRY		5492801		True				
ANR	5492810	CFGExitNode	EXIT		5492801		True				
ANR	5492811	Symbol	CurrentPrivState		5492801						
ANR	5492812	Function	can_switch_ids	129:0:3438:3677							
ANR	5492813	FunctionDef	can_switch_ids ()		5492812	0					
ANR	5492814	CompoundStatement		131:0:3465:3677	5492812	0					
ANR	5492815	Statement	static	132:1:3468:3473	5492812	0	True				
ANR	5492816	IdentifierDeclStatement	bool HasCheckedIfRoot = false ;	132:8:3475:3504	5492812	1	True				
ANR	5492817	IdentifierDecl	HasCheckedIfRoot = false		5492812	0					
ANR	5492818	IdentifierDeclType	bool		5492812	0					
ANR	5492819	Identifier	HasCheckedIfRoot		5492812	1					
ANR	5492820	AssignmentExpression	HasCheckedIfRoot = false		5492812	2		=			
ANR	5492821	Identifier	false		5492812	0					
ANR	5492822	Identifier	false		5492812	1					
ANR	5492823	IfStatement	if ( ! HasCheckedIfRoot )		5492812	2					
ANR	5492824	Condition	! HasCheckedIfRoot	135:5:3560:3576	5492812	0	True				
ANR	5492825	UnaryOperationExpression	! HasCheckedIfRoot		5492812	0					
ANR	5492826	UnaryOperator	!		5492812	0					
ANR	5492827	Identifier	HasCheckedIfRoot		5492812	1					
ANR	5492828	CompoundStatement		5:24:113:113	5492812	1					
ANR	5492829	IfStatement	if ( ! is_root ( ) )		5492812	0					
ANR	5492830	Condition	! is_root ( )	136:6:3587:3596	5492812	0	True				
ANR	5492831	UnaryOperationExpression	! is_root ( )		5492812	0					
ANR	5492832	UnaryOperator	!		5492812	0					
ANR	5492833	CallExpression	is_root ( )		5492812	1					
ANR	5492834	Callee	is_root		5492812	0					
ANR	5492835	Identifier	is_root		5492812	0					
ANR	5492836	ArgumentList			5492812	1					
ANR	5492837	CompoundStatement		6:18:133:133	5492812	1					
ANR	5492838	ExpressionStatement	SwitchIds = FALSE	137:3:3604:3621	5492812	0	True				
ANR	5492839	AssignmentExpression	SwitchIds = FALSE		5492812	0		=			
ANR	5492840	Identifier	SwitchIds		5492812	0					
ANR	5492841	Identifier	FALSE		5492812	1					
ANR	5492842	ExpressionStatement	HasCheckedIfRoot = true	139:2:3629:3652	5492812	1	True				
ANR	5492843	AssignmentExpression	HasCheckedIfRoot = true		5492812	0		=			
ANR	5492844	Identifier	HasCheckedIfRoot		5492812	0					
ANR	5492845	Identifier	true		5492812	1					
ANR	5492846	ReturnStatement	return SwitchIds ;	142:1:3659:3675	5492812	3	True				
ANR	5492847	Identifier	SwitchIds		5492812	0					
ANR	5492848	ReturnType	int		5492812	1					
ANR	5492849	Identifier	can_switch_ids		5492812	2					
ANR	5492850	ParameterList			5492812	3					
ANR	5492851	CFGEntryNode	ENTRY		5492812		True				
ANR	5492852	CFGExitNode	EXIT		5492812		True				
ANR	5492853	Symbol	HasCheckedIfRoot		5492812						
ANR	5492854	Symbol	false		5492812						
ANR	5492855	Symbol	true		5492812						
ANR	5492856	Symbol	FALSE		5492812						
ANR	5492857	Symbol	SwitchIds		5492812						
ANR	5492858	Symbol	is_root		5492812						
ANR	5492859	Function	init_condor_ids	157:0:3848:3872							
ANR	5492860	FunctionDef	init_condor_ids ()		5492859	0					
ANR	5492861	CompoundStatement		157:23:3871:3872	5492859	0					
ANR	5492862	ReturnType	void		5492859	1					
ANR	5492863	Identifier	init_condor_ids		5492859	2					
ANR	5492864	ParameterList			5492859	3					
ANR	5492865	CFGEntryNode	ENTRY		5492859		True				
ANR	5492866	CFGExitNode	EXIT		5492859		True				
ANR	5492867	Function	set_user_ids	158:0:3874:3929							
ANR	5492868	FunctionDef	"set_user_ids (uid_t uid , gid_t gid)"		5492867	0					
ANR	5492869	CompoundStatement		158:39:3913:3929	5492867	0					
ANR	5492870	ReturnStatement	return FALSE ;	158:1:3915:3927	5492867	0	True				
ANR	5492871	Identifier	FALSE		5492867	0					
ANR	5492872	ReturnType	int		5492867	1					
ANR	5492873	Identifier	set_user_ids		5492867	2					
ANR	5492874	ParameterList	"uid_t uid , gid_t gid"		5492867	3					
ANR	5492875	Parameter	uid_t uid	158:17:3891:3899	5492867	0	True				
ANR	5492876	ParameterType	uid_t		5492867	0					
ANR	5492877	Identifier	uid		5492867	1					
ANR	5492878	Parameter	gid_t gid	158:28:3902:3910	5492867	1	True				
ANR	5492879	ParameterType	gid_t		5492867	0					
ANR	5492880	Identifier	gid		5492867	1					
ANR	5492881	CFGEntryNode	ENTRY		5492867		True				
ANR	5492882	CFGExitNode	EXIT		5492867		True				
ANR	5492883	Symbol	uid		5492867						
ANR	5492884	Symbol	gid		5492867						
ANR	5492885	Symbol	FALSE		5492867						
ANR	5492886	Function	get_my_uid	159:0:3931:3967							
ANR	5492887	FunctionDef	get_my_uid ()		5492886	0					
ANR	5492888	CompoundStatement		159:19:3950:3967	5492886	0					
ANR	5492889	ReturnStatement	return 999999 ;	159:1:3952:3965	5492886	0	True				
ANR	5492890	PrimaryExpression	999999		5492886	0					
ANR	5492891	ReturnType	uid_t		5492886	1					
ANR	5492892	Identifier	get_my_uid		5492886	2					
ANR	5492893	ParameterList			5492886	3					
ANR	5492894	CFGEntryNode	ENTRY		5492886		True				
ANR	5492895	CFGExitNode	EXIT		5492886		True				
ANR	5492896	Function	get_my_gid	160:0:3969:4005							
ANR	5492897	FunctionDef	get_my_gid ()		5492896	0					
ANR	5492898	CompoundStatement		160:19:3988:4005	5492896	0					
ANR	5492899	ReturnStatement	return 999999 ;	160:1:3990:4003	5492896	0	True				
ANR	5492900	PrimaryExpression	999999		5492896	0					
ANR	5492901	ReturnType	gid_t		5492896	1					
ANR	5492902	Identifier	get_my_gid		5492896	2					
ANR	5492903	ParameterList			5492896	3					
ANR	5492904	CFGEntryNode	ENTRY		5492896		True				
ANR	5492905	CFGExitNode	EXIT		5492896		True				
ANR	5492906	Function	set_file_owner_ids	161:0:4007:4070							
ANR	5492907	FunctionDef	"set_file_owner_ids (uid_t uid , gid_t gid)"		5492906	0					
ANR	5492908	CompoundStatement		161:47:4054:4070	5492906	0					
ANR	5492909	ReturnStatement	return FALSE ;	161:1:4056:4068	5492906	0	True				
ANR	5492910	Identifier	FALSE		5492906	0					
ANR	5492911	ReturnType	int		5492906	1					
ANR	5492912	Identifier	set_file_owner_ids		5492906	2					
ANR	5492913	ParameterList	"uid_t uid , gid_t gid"		5492906	3					
ANR	5492914	Parameter	uid_t uid	161:24:4031:4039	5492906	0	True				
ANR	5492915	ParameterType	uid_t		5492906	0					
ANR	5492916	Identifier	uid		5492906	1					
ANR	5492917	Parameter	gid_t gid	161:35:4042:4050	5492906	1	True				
ANR	5492918	ParameterType	gid_t		5492906	0					
ANR	5492919	Identifier	gid		5492906	1					
ANR	5492920	CFGEntryNode	ENTRY		5492906		True				
ANR	5492921	CFGExitNode	EXIT		5492906		True				
ANR	5492922	Symbol	uid		5492906						
ANR	5492923	Symbol	gid		5492906						
ANR	5492924	Symbol	FALSE		5492906						
ANR	5492925	Function	uninit_file_owner_ids	162:0:4072:4102							
ANR	5492926	FunctionDef	uninit_file_owner_ids ()		5492925	0					
ANR	5492927	CompoundStatement		162:29:4101:4102	5492925	0					
ANR	5492928	ReturnType	void		5492925	1					
ANR	5492929	Identifier	uninit_file_owner_ids		5492925	2					
ANR	5492930	ParameterList			5492925	3					
ANR	5492931	CFGEntryNode	ENTRY		5492925		True				
ANR	5492932	CFGExitNode	EXIT		5492925		True				
ANR	5492933	Function	getuid	166:0:4129:4167							
ANR	5492934	FunctionDef	getuid ()		5492933	0					
ANR	5492935	CompoundStatement		166:15:4144:4167	5492933	0					
ANR	5492936	ReturnStatement	return get_my_uid ( ) ;	166:1:4146:4165	5492933	0	True				
ANR	5492937	CallExpression	get_my_uid ( )		5492933	0					
ANR	5492938	Callee	get_my_uid		5492933	0					
ANR	5492939	Identifier	get_my_uid		5492933	0					
ANR	5492940	ArgumentList			5492933	1					
ANR	5492941	ReturnType	uid_t		5492933	1					
ANR	5492942	Identifier	getuid		5492933	2					
ANR	5492943	ParameterList			5492933	3					
ANR	5492944	CFGEntryNode	ENTRY		5492933		True				
ANR	5492945	CFGExitNode	EXIT		5492933		True				
ANR	5492946	Symbol	get_my_uid		5492933						
ANR	5492947	DeclStmt									
ANR	5492948	Decl							extern dynuser	extern dynuser *	myDynuser
ANR	5492949	DeclStmt									
ANR	5492950	Decl							HANDLE	HANDLE	CurrUserHandle
ANR	5492951	DeclStmt									
ANR	5492952	Decl							char	char *	UserLoginName
ANR	5492953	DeclStmt									
ANR	5492954	Decl							char	char *	UserDomainName
ANR	5492955	DeclStmt									
ANR	5492956	Decl							token_cache	token_cache	cached_tokens
ANR	5492957	Function	uninit_user_ids	177:0:4505:4883							
ANR	5492958	FunctionDef	uninit_user_ids ()		5492957	0					
ANR	5492959	CompoundStatement		178:0:4529:4883	5492957	0					
ANR	5492960	IfStatement	if ( UserLoginName )		5492957	0					
ANR	5492961	Condition	UserLoginName	183:6:4690:4702	5492957	0	True				
ANR	5492962	Identifier	UserLoginName		5492957	0					
ANR	5492963	CompoundStatement		6:22:176:176	5492957	1					
ANR	5492964	ExpressionStatement	free ( UserLoginName )	184:5:4713:4732	5492957	0	True				
ANR	5492965	CallExpression	free ( UserLoginName )		5492957	0					
ANR	5492966	Callee	free		5492957	0					
ANR	5492967	Identifier	free		5492957	0					
ANR	5492968	ArgumentList	UserLoginName		5492957	1					
ANR	5492969	Argument	UserLoginName		5492957	0					
ANR	5492970	Identifier	UserLoginName		5492957	0					
ANR	5492971	IfStatement	if ( UserDomainName )		5492957	1					
ANR	5492972	Condition	UserDomainName	186:6:4743:4756	5492957	0	True				
ANR	5492973	Identifier	UserDomainName		5492957	0					
ANR	5492974	CompoundStatement		9:23:230:230	5492957	1					
ANR	5492975	ExpressionStatement	free ( UserDomainName )	187:2:4764:4784	5492957	0	True				
ANR	5492976	CallExpression	free ( UserDomainName )		5492957	0					
ANR	5492977	Callee	free		5492957	0					
ANR	5492978	Identifier	free		5492957	0					
ANR	5492979	ArgumentList	UserDomainName		5492957	1					
ANR	5492980	Argument	UserDomainName		5492957	0					
ANR	5492981	Identifier	UserDomainName		5492957	0					
ANR	5492982	ExpressionStatement	UserLoginName = NULL	189:1:4790:4810	5492957	2	True				
ANR	5492983	AssignmentExpression	UserLoginName = NULL		5492957	0		=			
ANR	5492984	Identifier	UserLoginName		5492957	0					
ANR	5492985	Identifier	NULL		5492957	1					
ANR	5492986	ExpressionStatement	UserDomainName = NULL	190:1:4813:4833	5492957	3	True				
ANR	5492987	AssignmentExpression	UserDomainName = NULL		5492957	0		=			
ANR	5492988	Identifier	UserDomainName		5492957	0					
ANR	5492989	Identifier	NULL		5492957	1					
ANR	5492990	ExpressionStatement	CurrUserHandle = NULL	191:1:4836:4857	5492957	4	True				
ANR	5492991	AssignmentExpression	CurrUserHandle = NULL		5492957	0		=			
ANR	5492992	Identifier	CurrUserHandle		5492957	0					
ANR	5492993	Identifier	NULL		5492957	1					
ANR	5492994	ExpressionStatement	UserIdsInited = false	192:1:4860:4881	5492957	5	True				
ANR	5492995	AssignmentExpression	UserIdsInited = false		5492957	0		=			
ANR	5492996	Identifier	UserIdsInited		5492957	0					
ANR	5492997	Identifier	false		5492957	1					
ANR	5492998	ReturnType	void		5492957	1					
ANR	5492999	Identifier	uninit_user_ids		5492957	2					
ANR	5493000	ParameterList			5492957	3					
ANR	5493001	CFGEntryNode	ENTRY		5492957		True				
ANR	5493002	CFGExitNode	EXIT		5492957		True				
ANR	5493003	Symbol	CurrUserHandle		5492957						
ANR	5493004	Symbol	UserDomainName		5492957						
ANR	5493005	Symbol	NULL		5492957						
ANR	5493006	Symbol	false		5492957						
ANR	5493007	Symbol	UserIdsInited		5492957						
ANR	5493008	Symbol	UserLoginName		5492957						
ANR	5493009	Function	priv_state_get_handle	195:0:4886:4943							
ANR	5493010	FunctionDef	priv_state_get_handle ()		5493009	0					
ANR	5493011	CompoundStatement		196:0:4917:4943	5493009	0					
ANR	5493012	ReturnStatement	return CurrUserHandle ;	197:1:4920:4941	5493009	0	True				
ANR	5493013	Identifier	CurrUserHandle		5493009	0					
ANR	5493014	ReturnType	HANDLE		5493009	1					
ANR	5493015	Identifier	priv_state_get_handle		5493009	2					
ANR	5493016	ParameterList			5493009	3					
ANR	5493017	CFGEntryNode	ENTRY		5493009		True				
ANR	5493018	CFGExitNode	EXIT		5493009		True				
ANR	5493019	Symbol	CurrUserHandle		5493009						
ANR	5493020	Function	get_user_loginname	200:0:4946:5007							
ANR	5493021	FunctionDef	get_user_loginname ()		5493020	0					
ANR	5493022	CompoundStatement		200:33:4979:5007	5493020	0					
ANR	5493023	ReturnStatement	return UserLoginName ;	201:4:4985:5005	5493020	0	True				
ANR	5493024	Identifier	UserLoginName		5493020	0					
ANR	5493025	ReturnType	const char *		5493020	1					
ANR	5493026	Identifier	get_user_loginname		5493020	2					
ANR	5493027	ParameterList			5493020	3					
ANR	5493028	CFGEntryNode	ENTRY		5493020		True				
ANR	5493029	CFGExitNode	EXIT		5493020		True				
ANR	5493030	Symbol	UserLoginName		5493020						
ANR	5493031	Function	get_user_domainname	204:0:5010:5073							
ANR	5493032	FunctionDef	get_user_domainname ()		5493031	0					
ANR	5493033	CompoundStatement		204:34:5044:5073	5493031	0					
ANR	5493034	ReturnStatement	return UserDomainName ;	205:4:5050:5071	5493031	0	True				
ANR	5493035	Identifier	UserDomainName		5493031	0					
ANR	5493036	ReturnType	const char *		5493031	1					
ANR	5493037	Identifier	get_user_domainname		5493031	2					
ANR	5493038	ParameterList			5493031	3					
ANR	5493039	CFGEntryNode	ENTRY		5493031		True				
ANR	5493040	CFGExitNode	EXIT		5493031		True				
ANR	5493041	Symbol	UserDomainName		5493031						
ANR	5493042	DeclStmt									
ANR	5493043	Decl							extern bool	"extern bool ( const char * credd_host , const char username [ ] , const char domain [ ] , char * pw , int cb )"	get_password_from_credd
ANR	5493044	DeclStmt									
ANR	5493045	Decl							bool	"bool ( const char username [ ] , const char domain [ ] , const char * pw )"	cache_credd_locally
ANR	5493046	Function	init_user_ids	223:0:5389:14212							
ANR	5493047	FunctionDef	"init_user_ids (const char username [ ] , const char domain [ ])"		5493046	0					
ANR	5493048	CompoundStatement		225:0:5452:14212	5493046	0					
ANR	5493049	IdentifierDeclStatement	int retval = 0 ;	226:1:5455:5469	5493046	0	True				
ANR	5493050	IdentifierDecl	retval = 0		5493046	0					
ANR	5493051	IdentifierDeclType	int		5493046	0					
ANR	5493052	Identifier	retval		5493046	1					
ANR	5493053	AssignmentExpression	retval = 0		5493046	2		=			
ANR	5493054	Identifier	retval		5493046	0					
ANR	5493055	PrimaryExpression	0		5493046	1					
ANR	5493056	IfStatement	if ( ! username || ! domain )		5493046	1					
ANR	5493057	Condition	! username || ! domain	228:5:5477:5496	5493046	0	True				
ANR	5493058	OrExpression	! username || ! domain		5493046	0		||			
ANR	5493059	UnaryOperationExpression	! username		5493046	0					
ANR	5493060	UnaryOperator	!		5493046	0					
ANR	5493061	Identifier	username		5493046	1					
ANR	5493062	UnaryOperationExpression	! domain		5493046	1					
ANR	5493063	UnaryOperator	!		5493046	0					
ANR	5493064	Identifier	domain		5493046	1					
ANR	5493065	CompoundStatement		4:27:46:46	5493046	1					
ANR	5493066	Statement	dprintf	229:2:5503:5509	5493046	0	True				
ANR	5493067	Statement	(	229:9:5510:5510	5493046	1	True				
ANR	5493068	Statement	D_ALWAYS	229:10:5511:5518	5493046	2	True				
ANR	5493069	Statement	","	229:18:5519:5519	5493046	3	True				
ANR	5493070	Statement	"""WARNING: init_user_ids() called with"""	229:20:5521:5558	5493046	4	True				
ANR	5493071	Statement	""" NULL arguments!\\n"""	230:6:5566:5585	5493046	5	True				
ANR	5493072	Statement	)	230:26:5586:5586	5493046	6	True				
ANR	5493073	ExpressionStatement		230:27:5587:5587	5493046	7	True				
ANR	5493074	ReturnStatement	return 0 ;	231:5:5594:5602	5493046	8	True				
ANR	5493075	PrimaryExpression	0		5493046	0					
ANR	5493076	Statement	dprintf	247:1:6164:6170	5493046	2	True				
ANR	5493077	Statement	(	247:8:6171:6171	5493046	3	True				
ANR	5493078	Statement	D_FULLDEBUG	247:9:6172:6182	5493046	4	True				
ANR	5493079	Statement	","	247:20:6183:6183	5493046	5	True				
ANR	5493080	Statement	"""init_user_ids: want user '%s@%s', """	247:22:6185:6220	5493046	6	True				
ANR	5493081	Statement	"""current is '%s@%s'\\n"""	248:3:6225:6246	5493046	7	True				
ANR	5493082	Statement	","	248:25:6247:6247	5493046	8	True				
ANR	5493083	Statement	username	249:2:6251:6258	5493046	9	True				
ANR	5493084	Statement	","	249:10:6259:6259	5493046	10	True				
ANR	5493085	Statement	domain	249:12:6261:6266	5493046	11	True				
ANR	5493086	Statement	","	249:18:6267:6267	5493046	12	True				
ANR	5493087	Statement	UserLoginName	249:20:6269:6281	5493046	13	True				
ANR	5493088	Statement	","	249:33:6282:6282	5493046	14	True				
ANR	5493089	Statement	UserDomainName	249:35:6284:6297	5493046	15	True				
ANR	5493090	Statement	)	249:49:6298:6298	5493046	16	True				
ANR	5493091	ExpressionStatement		249:50:6299:6299	5493046	17	True				
ANR	5493092	IfStatement	"if ( CurrUserHandle = cached_tokens . getToken ( username , domain ) )"		5493046	18					
ANR	5493093	Condition	"CurrUserHandle = cached_tokens . getToken ( username , domain )"	251:6:6309:6365	5493046	0	True				
ANR	5493094	AssignmentExpression	"CurrUserHandle = cached_tokens . getToken ( username , domain )"		5493046	0		=			
ANR	5493095	Identifier	CurrUserHandle		5493046	0					
ANR	5493096	CallExpression	"cached_tokens . getToken ( username , domain )"		5493046	1					
ANR	5493097	Callee	cached_tokens . getToken		5493046	0					
ANR	5493098	MemberAccess	cached_tokens . getToken		5493046	0					
ANR	5493099	Identifier	cached_tokens		5493046	0					
ANR	5493100	Identifier	getToken		5493046	1					
ANR	5493101	ArgumentList	username		5493046	1					
ANR	5493102	Argument	username		5493046	0					
ANR	5493103	Identifier	username		5493046	0					
ANR	5493104	Argument	domain		5493046	1					
ANR	5493105	Identifier	domain		5493046	0					
ANR	5493106	CompoundStatement		27:65:915:915	5493046	1					
ANR	5493107	ExpressionStatement	UserIdsInited = true	252:2:6372:6392	5493046	0	True				
ANR	5493108	AssignmentExpression	UserIdsInited = true		5493046	0		=			
ANR	5493109	Identifier	UserIdsInited		5493046	0					
ANR	5493110	Identifier	true		5493046	1					
ANR	5493111	IfStatement	if ( ! UserLoginName )		5493046	1					
ANR	5493112	Condition	! UserLoginName	256:7:6604:6618	5493046	0	True				
ANR	5493113	UnaryOperationExpression	! UserLoginName		5493046	0					
ANR	5493114	UnaryOperator	!		5493046	0					
ANR	5493115	Identifier	UserLoginName		5493046	1					
ANR	5493116	ExpressionStatement	UserLoginName = strdup ( username )	256:24:6621:6653	5493046	1	True				
ANR	5493117	AssignmentExpression	UserLoginName = strdup ( username )		5493046	0		=			
ANR	5493118	Identifier	UserLoginName		5493046	0					
ANR	5493119	CallExpression	strdup ( username )		5493046	1					
ANR	5493120	Callee	strdup		5493046	0					
ANR	5493121	Identifier	strdup		5493046	0					
ANR	5493122	ArgumentList	username		5493046	1					
ANR	5493123	Argument	username		5493046	0					
ANR	5493124	Identifier	username		5493046	0					
ANR	5493125	IfStatement	if ( ! UserDomainName )		5493046	2					
ANR	5493126	Condition	! UserDomainName	257:7:6662:6677	5493046	0	True				
ANR	5493127	UnaryOperationExpression	! UserDomainName		5493046	0					
ANR	5493128	UnaryOperator	!		5493046	0					
ANR	5493129	Identifier	UserDomainName		5493046	1					
ANR	5493130	ExpressionStatement	UserDomainName = strdup ( domain )	257:25:6680:6711	5493046	1	True				
ANR	5493131	AssignmentExpression	UserDomainName = strdup ( domain )		5493046	0		=			
ANR	5493132	Identifier	UserDomainName		5493046	0					
ANR	5493133	CallExpression	strdup ( domain )		5493046	1					
ANR	5493134	Callee	strdup		5493046	0					
ANR	5493135	Identifier	strdup		5493046	0					
ANR	5493136	ArgumentList	domain		5493046	1					
ANR	5493137	Argument	domain		5493046	0					
ANR	5493138	Identifier	domain		5493046	0					
ANR	5493139	Statement	dprintf	258:2:6715:6721	5493046	3	True				
ANR	5493140	Statement	(	258:9:6722:6722	5493046	4	True				
ANR	5493141	Statement	D_FULLDEBUG	258:10:6723:6733	5493046	5	True				
ANR	5493142	Statement	","	258:21:6734:6734	5493046	6	True				
ANR	5493143	Statement	"""init_user_ids: Already have handle for %s@%s,"""	258:23:6736:6782	5493046	7	True				
ANR	5493144	Statement	""" so returning.\\n"""	259:3:6787:6804	5493046	8	True				
ANR	5493145	Statement	","	259:21:6805:6805	5493046	9	True				
ANR	5493146	Statement	username	259:23:6807:6814	5493046	10	True				
ANR	5493147	Statement	","	259:31:6815:6815	5493046	11	True				
ANR	5493148	Statement	domain	259:33:6817:6822	5493046	12	True				
ANR	5493149	Statement	)	259:39:6823:6823	5493046	13	True				
ANR	5493150	ExpressionStatement		259:40:6824:6824	5493046	14	True				
ANR	5493151	ReturnStatement	return 1 ;	260:2:6828:6836	5493046	15	True				
ANR	5493152	PrimaryExpression	1		5493046	0					
ANR	5493153	ElseStatement	else		5493046	0					
ANR	5493154	CompoundStatement		39:2:1428:1457	5493046	0					
ANR	5493155	IdentifierDeclStatement	char * myusr = my_username ( ) ;	262:2:6850:6877	5493046	0	True				
ANR	5493156	IdentifierDecl	* myusr = my_username ( )		5493046	0					
ANR	5493157	IdentifierDeclType	char *		5493046	0					
ANR	5493158	Identifier	myusr		5493046	1					
ANR	5493159	AssignmentExpression	* myusr = my_username ( )		5493046	2		=			
ANR	5493160	Identifier	myusr		5493046	0					
ANR	5493161	CallExpression	my_username ( )		5493046	1					
ANR	5493162	Callee	my_username		5493046	0					
ANR	5493163	Identifier	my_username		5493046	0					
ANR	5493164	ArgumentList			5493046	1					
ANR	5493165	IdentifierDeclStatement	char * mydom = my_domainname ( ) ;	263:2:6881:6910	5493046	1	True				
ANR	5493166	IdentifierDecl	* mydom = my_domainname ( )		5493046	0					
ANR	5493167	IdentifierDeclType	char *		5493046	0					
ANR	5493168	Identifier	mydom		5493046	1					
ANR	5493169	AssignmentExpression	* mydom = my_domainname ( )		5493046	2		=			
ANR	5493170	Identifier	mydom		5493046	0					
ANR	5493171	CallExpression	my_domainname ( )		5493046	1					
ANR	5493172	Callee	my_domainname		5493046	0					
ANR	5493173	Identifier	my_domainname		5493046	0					
ANR	5493174	ArgumentList			5493046	1					
ANR	5493175	ExpressionStatement	UserIdsInited = false	266:2:6968:6989	5493046	2	True				
ANR	5493176	AssignmentExpression	UserIdsInited = false		5493046	0		=			
ANR	5493177	Identifier	UserIdsInited		5493046	0					
ANR	5493178	Identifier	false		5493046	1					
ANR	5493179	IfStatement	"if ( strcmp ( myusr , username ) == 0 && strcasecmp ( mydom , domain ) == 0 )"		5493046	3					
ANR	5493180	Condition	"strcmp ( myusr , username ) == 0 && strcasecmp ( mydom , domain ) == 0"	270:7:7126:7195	5493046	0	True				
ANR	5493181	AndExpression	"strcmp ( myusr , username ) == 0 && strcasecmp ( mydom , domain ) == 0"		5493046	0		&&			
ANR	5493182	EqualityExpression	"strcmp ( myusr , username ) == 0"		5493046	0		==			
ANR	5493183	CallExpression	"strcmp ( myusr , username )"		5493046	0					
ANR	5493184	Callee	strcmp		5493046	0					
ANR	5493185	Identifier	strcmp		5493046	0					
ANR	5493186	ArgumentList	myusr		5493046	1					
ANR	5493187	Argument	myusr		5493046	0					
ANR	5493188	Identifier	myusr		5493046	0					
ANR	5493189	Argument	username		5493046	1					
ANR	5493190	Identifier	username		5493046	0					
ANR	5493191	PrimaryExpression	0		5493046	1					
ANR	5493192	EqualityExpression	"strcasecmp ( mydom , domain ) == 0"		5493046	1		==			
ANR	5493193	CallExpression	"strcasecmp ( mydom , domain )"		5493046	0					
ANR	5493194	Callee	strcasecmp		5493046	0					
ANR	5493195	Identifier	strcasecmp		5493046	0					
ANR	5493196	ArgumentList	mydom		5493046	1					
ANR	5493197	Argument	mydom		5493046	0					
ANR	5493198	Identifier	mydom		5493046	0					
ANR	5493199	Argument	domain		5493046	1					
ANR	5493200	Identifier	domain		5493046	0					
ANR	5493201	PrimaryExpression	0		5493046	1					
ANR	5493202	CompoundStatement		47:39:1746:1746	5493046	1					
ANR	5493203	Statement	dprintf	273:3:7235:7241	5493046	0	True				
ANR	5493204	Statement	(	273:10:7242:7242	5493046	1	True				
ANR	5493205	Statement	D_FULLDEBUG	273:11:7243:7253	5493046	2	True				
ANR	5493206	Statement	","	273:22:7254:7254	5493046	3	True				
ANR	5493207	Statement	"""init_user_ids: Calling thread has token """	273:24:7256:7297	5493046	4	True				
ANR	5493208	Statement	"""we want, so returning.\\n"""	274:5:7304:7329	5493046	5	True				
ANR	5493209	Statement	)	274:31:7330:7330	5493046	6	True				
ANR	5493210	ExpressionStatement		274:32:7331:7331	5493046	7	True				
ANR	5493211	ExpressionStatement	CurrUserHandle = my_usertoken ( )	275:3:7336:7367	5493046	8	True				
ANR	5493212	AssignmentExpression	CurrUserHandle = my_usertoken ( )		5493046	0		=			
ANR	5493213	Identifier	CurrUserHandle		5493046	0					
ANR	5493214	CallExpression	my_usertoken ( )		5493046	1					
ANR	5493215	Callee	my_usertoken		5493046	0					
ANR	5493216	Identifier	my_usertoken		5493046	0					
ANR	5493217	ArgumentList			5493046	1					
ANR	5493218	IfStatement	if ( CurrUserHandle )		5493046	9					
ANR	5493219	Condition	CurrUserHandle	276:7:7376:7389	5493046	0	True				
ANR	5493220	Identifier	CurrUserHandle		5493046	0					
ANR	5493221	CompoundStatement		52:23:1939:1939	5493046	1					
ANR	5493222	ExpressionStatement	UserIdsInited = true	277:4:7398:7418	5493046	0	True				
ANR	5493223	AssignmentExpression	UserIdsInited = true		5493046	0		=			
ANR	5493224	Identifier	UserIdsInited		5493046	0					
ANR	5493225	Identifier	true		5493046	1					
ANR	5493226	ElseStatement	else		5493046	0					
ANR	5493227	CompoundStatement		54:10:1977:1977	5493046	0					
ANR	5493228	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""init_user_ids: handle is null!\\n"" )"	279:4:7436:7492	5493046	0	True				
ANR	5493229	CallExpression	"dprintf ( D_FULLDEBUG , ""init_user_ids: handle is null!\\n"" )"		5493046	0					
ANR	5493230	Callee	dprintf		5493046	0					
ANR	5493231	Identifier	dprintf		5493046	0					
ANR	5493232	ArgumentList	D_FULLDEBUG		5493046	1					
ANR	5493233	Argument	D_FULLDEBUG		5493046	0					
ANR	5493234	Identifier	D_FULLDEBUG		5493046	0					
ANR	5493235	Argument	"""init_user_ids: handle is null!\\n"""		5493046	1					
ANR	5493236	PrimaryExpression	"""init_user_ids: handle is null!\\n"""		5493046	0					
ANR	5493237	IfStatement	if ( UserLoginName )		5493046	10					
ANR	5493238	Condition	UserLoginName	282:7:7510:7522	5493046	0	True				
ANR	5493239	Identifier	UserLoginName		5493046	0					
ANR	5493240	CompoundStatement		58:22:2072:2072	5493046	1					
ANR	5493241	ExpressionStatement	free ( UserLoginName )	283:4:7531:7550	5493046	0	True				
ANR	5493242	CallExpression	free ( UserLoginName )		5493046	0					
ANR	5493243	Callee	free		5493046	0					
ANR	5493244	Identifier	free		5493046	0					
ANR	5493245	ArgumentList	UserLoginName		5493046	1					
ANR	5493246	Argument	UserLoginName		5493046	0					
ANR	5493247	Identifier	UserLoginName		5493046	0					
ANR	5493248	ExpressionStatement	UserLoginName = NULL	284:4:7556:7576	5493046	1	True				
ANR	5493249	AssignmentExpression	UserLoginName = NULL		5493046	0		=			
ANR	5493250	Identifier	UserLoginName		5493046	0					
ANR	5493251	Identifier	NULL		5493046	1					
ANR	5493252	IfStatement	if ( UserDomainName )		5493046	11					
ANR	5493253	Condition	UserDomainName	286:7:7590:7603	5493046	0	True				
ANR	5493254	Identifier	UserDomainName		5493046	0					
ANR	5493255	CompoundStatement		62:23:2153:2153	5493046	1					
ANR	5493256	ExpressionStatement	free ( UserDomainName )	287:4:7612:7632	5493046	0	True				
ANR	5493257	CallExpression	free ( UserDomainName )		5493046	0					
ANR	5493258	Callee	free		5493046	0					
ANR	5493259	Identifier	free		5493046	0					
ANR	5493260	ArgumentList	UserDomainName		5493046	1					
ANR	5493261	Argument	UserDomainName		5493046	0					
ANR	5493262	Identifier	UserDomainName		5493046	0					
ANR	5493263	ExpressionStatement	UserDomainName = NULL	288:4:7638:7659	5493046	1	True				
ANR	5493264	AssignmentExpression	UserDomainName = NULL		5493046	0		=			
ANR	5493265	Identifier	UserDomainName		5493046	0					
ANR	5493266	Identifier	NULL		5493046	1					
ANR	5493267	ExpressionStatement	UserLoginName = myusr	292:3:7736:7757	5493046	12	True				
ANR	5493268	AssignmentExpression	UserLoginName = myusr		5493046	0		=			
ANR	5493269	Identifier	UserLoginName		5493046	0					
ANR	5493270	Identifier	myusr		5493046	1					
ANR	5493271	ExpressionStatement	UserDomainName = mydom	293:3:7762:7784	5493046	13	True				
ANR	5493272	AssignmentExpression	UserDomainName = mydom		5493046	0		=			
ANR	5493273	Identifier	UserDomainName		5493046	0					
ANR	5493274	Identifier	mydom		5493046	1					
ANR	5493275	ExpressionStatement	"cached_tokens . storeToken ( UserLoginName , UserDomainName , CurrUserHandle )"	296:3:7837:7917	5493046	14	True				
ANR	5493276	CallExpression	"cached_tokens . storeToken ( UserLoginName , UserDomainName , CurrUserHandle )"		5493046	0					
ANR	5493277	Callee	cached_tokens . storeToken		5493046	0					
ANR	5493278	MemberAccess	cached_tokens . storeToken		5493046	0					
ANR	5493279	Identifier	cached_tokens		5493046	0					
ANR	5493280	Identifier	storeToken		5493046	1					
ANR	5493281	ArgumentList	UserLoginName		5493046	1					
ANR	5493282	Argument	UserLoginName		5493046	0					
ANR	5493283	Identifier	UserLoginName		5493046	0					
ANR	5493284	Argument	UserDomainName		5493046	1					
ANR	5493285	Identifier	UserDomainName		5493046	0					
ANR	5493286	Argument	CurrUserHandle		5493046	2					
ANR	5493287	Identifier	CurrUserHandle		5493046	0					
ANR	5493288	ReturnStatement	return 1 ;	298:3:7922:7930	5493046	15	True				
ANR	5493289	PrimaryExpression	1		5493046	0					
ANR	5493290	ExpressionStatement	ASSERT ( ! UserIdsInited )	303:1:7990:8014	5493046	19	True				
ANR	5493291	CallExpression	ASSERT ( ! UserIdsInited )		5493046	0					
ANR	5493292	Callee	ASSERT		5493046	0					
ANR	5493293	Identifier	ASSERT		5493046	0					
ANR	5493294	ArgumentList	! UserIdsInited		5493046	1					
ANR	5493295	Argument	! UserIdsInited		5493046	0					
ANR	5493296	UnaryOperationExpression	! UserIdsInited		5493046	0					
ANR	5493297	UnaryOperator	!		5493046	0					
ANR	5493298	Identifier	UserIdsInited		5493046	1					
ANR	5493299	IfStatement	if ( ! can_switch_ids ( ) )		5493046	20					
ANR	5493300	Condition	! can_switch_ids ( )	306:5:8071:8087	5493046	0	True				
ANR	5493301	UnaryOperationExpression	! can_switch_ids ( )		5493046	0					
ANR	5493302	UnaryOperator	!		5493046	0					
ANR	5493303	CallExpression	can_switch_ids ( )		5493046	1					
ANR	5493304	Callee	can_switch_ids		5493046	0					
ANR	5493305	Identifier	can_switch_ids		5493046	0					
ANR	5493306	ArgumentList			5493046	1					
ANR	5493307	CompoundStatement		82:24:2637:2637	5493046	1					
ANR	5493308	ExpressionStatement	"dprintf ( D_ALWAYS , ""init_user_ids: failed because user switching is disabled\\n"" )"	307:2:8094:8173	5493046	0	True				
ANR	5493309	CallExpression	"dprintf ( D_ALWAYS , ""init_user_ids: failed because user switching is disabled\\n"" )"		5493046	0					
ANR	5493310	Callee	dprintf		5493046	0					
ANR	5493311	Identifier	dprintf		5493046	0					
ANR	5493312	ArgumentList	D_ALWAYS		5493046	1					
ANR	5493313	Argument	D_ALWAYS		5493046	0					
ANR	5493314	Identifier	D_ALWAYS		5493046	0					
ANR	5493315	Argument	"""init_user_ids: failed because user switching is disabled\\n"""		5493046	1					
ANR	5493316	PrimaryExpression	"""init_user_ids: failed because user switching is disabled\\n"""		5493046	0					
ANR	5493317	ReturnStatement	return 0 ;	308:2:8177:8185	5493046	1	True				
ANR	5493318	PrimaryExpression	0		5493046	0					
ANR	5493319	IfStatement	"if ( strcmp ( username , ""nobody"" ) != 0 )"		5493046	21					
ANR	5493320	Condition	"strcmp ( username , ""nobody"" ) != 0"	311:6:8197:8226	5493046	0	True				
ANR	5493321	EqualityExpression	"strcmp ( username , ""nobody"" ) != 0"		5493046	0		!=			
ANR	5493322	CallExpression	"strcmp ( username , ""nobody"" )"		5493046	0					
ANR	5493323	Callee	strcmp		5493046	0					
ANR	5493324	Identifier	strcmp		5493046	0					
ANR	5493325	ArgumentList	username		5493046	1					
ANR	5493326	Argument	username		5493046	0					
ANR	5493327	Identifier	username		5493046	0					
ANR	5493328	Argument	"""nobody"""		5493046	1					
ANR	5493329	PrimaryExpression	"""nobody"""		5493046	0					
ANR	5493330	PrimaryExpression	0		5493046	1					
ANR	5493331	CompoundStatement		140:2:4521:4559	5493046	1					
ANR	5493332	IdentifierDeclStatement	lsa_mgr lsaMan ;	315:2:8387:8401	5493046	0	True				
ANR	5493333	IdentifierDecl	lsaMan		5493046	0					
ANR	5493334	IdentifierDeclType	lsa_mgr		5493046	0					
ANR	5493335	Identifier	lsaMan		5493046	1					
ANR	5493336	IdentifierDeclStatement	char pw [ 255 ] ;	316:2:8405:8417	5493046	1	True				
ANR	5493337	IdentifierDecl	pw [ 255 ]		5493046	0					
ANR	5493338	IdentifierDeclType	char [ 255 ]		5493046	0					
ANR	5493339	Identifier	pw		5493046	1					
ANR	5493340	PrimaryExpression	255		5493046	2					
ANR	5493341	IdentifierDeclStatement	char user [ 255 ] ;	317:2:8421:8435	5493046	2	True				
ANR	5493342	IdentifierDecl	user [ 255 ]		5493046	0					
ANR	5493343	IdentifierDeclType	char [ 255 ]		5493046	0					
ANR	5493344	Identifier	user		5493046	1					
ANR	5493345	PrimaryExpression	255		5493046	2					
ANR	5493346	IdentifierDeclStatement	char dom [ 255 ] ;	318:2:8439:8452	5493046	3	True				
ANR	5493347	IdentifierDecl	dom [ 255 ]		5493046	0					
ANR	5493348	IdentifierDeclType	char [ 255 ]		5493046	0					
ANR	5493349	Identifier	dom		5493046	1					
ANR	5493350	PrimaryExpression	255		5493046	2					
ANR	5493351	IdentifierDeclStatement	wchar_t w_fullname [ 255 ] ;	319:2:8456:8479	5493046	4	True				
ANR	5493352	IdentifierDecl	w_fullname [ 255 ]		5493046	0					
ANR	5493353	IdentifierDeclType	wchar_t [ 255 ]		5493046	0					
ANR	5493354	Identifier	w_fullname		5493046	1					
ANR	5493355	PrimaryExpression	255		5493046	2					
ANR	5493356	IdentifierDeclStatement	wchar_t * w_pw ;	320:2:8483:8496	5493046	5	True				
ANR	5493357	IdentifierDecl	* w_pw		5493046	0					
ANR	5493358	IdentifierDeclType	wchar_t *		5493046	0					
ANR	5493359	Identifier	w_pw		5493046	1					
ANR	5493360	IdentifierDeclStatement	bool got_password = false ;	321:2:8500:8525	5493046	6	True				
ANR	5493361	IdentifierDecl	got_password = false		5493046	0					
ANR	5493362	IdentifierDeclType	bool		5493046	0					
ANR	5493363	Identifier	got_password		5493046	1					
ANR	5493364	AssignmentExpression	got_password = false		5493046	2		=			
ANR	5493365	Identifier	false		5493046	0					
ANR	5493366	Identifier	false		5493046	1					
ANR	5493367	IdentifierDeclStatement	bool got_password_from_credd = false ;	322:2:8529:8565	5493046	7	True				
ANR	5493368	IdentifierDecl	got_password_from_credd = false		5493046	0					
ANR	5493369	IdentifierDeclType	bool		5493046	0					
ANR	5493370	Identifier	got_password_from_credd		5493046	1					
ANR	5493371	AssignmentExpression	got_password_from_credd = false		5493046	2		=			
ANR	5493372	Identifier	false		5493046	0					
ANR	5493373	Identifier	false		5493046	1					
ANR	5493374	Statement	swprintf	325:2:8610:8617	5493046	8	True				
ANR	5493375	Statement	(	325:10:8618:8618	5493046	9	True				
ANR	5493376	Statement	w_fullname	325:11:8619:8628	5493046	10	True				
ANR	5493377	Statement	","	325:21:8629:8629	5493046	11	True				
ANR	5493378	Statement	L	325:23:8631:8631	5493046	12	True				
ANR	5493379	Statement	"""%S@%S"""	325:24:8632:8638	5493046	13	True				
ANR	5493380	Statement	","	325:31:8639:8639	5493046	14	True				
ANR	5493381	Statement	username	325:33:8641:8648	5493046	15	True				
ANR	5493382	Statement	","	325:41:8649:8649	5493046	16	True				
ANR	5493383	Statement	domain	325:43:8651:8656	5493046	17	True				
ANR	5493384	Statement	)	325:49:8657:8657	5493046	18	True				
ANR	5493385	ExpressionStatement		325:50:8658:8658	5493046	19	True				
ANR	5493386	ExpressionStatement	"sprintf ( user , ""%s"" , username )"	326:2:8662:8691	5493046	20	True				
ANR	5493387	CallExpression	"sprintf ( user , ""%s"" , username )"		5493046	0					
ANR	5493388	Callee	sprintf		5493046	0					
ANR	5493389	Identifier	sprintf		5493046	0					
ANR	5493390	ArgumentList	user		5493046	1					
ANR	5493391	Argument	user		5493046	0					
ANR	5493392	Identifier	user		5493046	0					
ANR	5493393	Argument	"""%s"""		5493046	1					
ANR	5493394	PrimaryExpression	"""%s"""		5493046	0					
ANR	5493395	Argument	username		5493046	2					
ANR	5493396	Identifier	username		5493046	0					
ANR	5493397	ExpressionStatement	"sprintf ( dom , ""%s"" , domain )"	327:2:8695:8721	5493046	21	True				
ANR	5493398	CallExpression	"sprintf ( dom , ""%s"" , domain )"		5493046	0					
ANR	5493399	Callee	sprintf		5493046	0					
ANR	5493400	Identifier	sprintf		5493046	0					
ANR	5493401	ArgumentList	dom		5493046	1					
ANR	5493402	Argument	dom		5493046	0					
ANR	5493403	Identifier	dom		5493046	0					
ANR	5493404	Argument	"""%s"""		5493046	1					
ANR	5493405	PrimaryExpression	"""%s"""		5493046	0					
ANR	5493406	Argument	domain		5493046	2					
ANR	5493407	Identifier	domain		5493046	0					
ANR	5493408	ExpressionStatement	w_pw = lsaMan . query ( w_fullname )	330:2:8772:8803	5493046	22	True				
ANR	5493409	AssignmentExpression	w_pw = lsaMan . query ( w_fullname )		5493046	0		=			
ANR	5493410	Identifier	w_pw		5493046	0					
ANR	5493411	CallExpression	lsaMan . query ( w_fullname )		5493046	1					
ANR	5493412	Callee	lsaMan . query		5493046	0					
ANR	5493413	MemberAccess	lsaMan . query		5493046	0					
ANR	5493414	Identifier	lsaMan		5493046	0					
ANR	5493415	Identifier	query		5493046	1					
ANR	5493416	ArgumentList	w_fullname		5493046	1					
ANR	5493417	Argument	w_fullname		5493046	0					
ANR	5493418	Identifier	w_fullname		5493046	0					
ANR	5493419	IfStatement	if ( w_pw )		5493046	23					
ANR	5493420	Condition	w_pw	331:7:8812:8815	5493046	0	True				
ANR	5493421	Identifier	w_pw		5493046	0					
ANR	5493422	CompoundStatement		107:14:3366:3366	5493046	1					
ANR	5493423	ExpressionStatement	"sprintf ( pw , ""%S"" , w_pw )"	333:3:8863:8886	5493046	0	True				
ANR	5493424	CallExpression	"sprintf ( pw , ""%S"" , w_pw )"		5493046	0					
ANR	5493425	Callee	sprintf		5493046	0					
ANR	5493426	Identifier	sprintf		5493046	0					
ANR	5493427	ArgumentList	pw		5493046	1					
ANR	5493428	Argument	pw		5493046	0					
ANR	5493429	Identifier	pw		5493046	0					
ANR	5493430	Argument	"""%S"""		5493046	1					
ANR	5493431	PrimaryExpression	"""%S"""		5493046	0					
ANR	5493432	Argument	w_pw		5493046	2					
ANR	5493433	Identifier	w_pw		5493046	0					
ANR	5493434	ExpressionStatement	"SecureZeroMemory ( w_pw , wcslen ( w_pw ) * sizeof ( wchar_t ) )"	335:3:8955:9007	5493046	1	True				
ANR	5493435	CallExpression	"SecureZeroMemory ( w_pw , wcslen ( w_pw ) * sizeof ( wchar_t ) )"		5493046	0					
ANR	5493436	Callee	SecureZeroMemory		5493046	0					
ANR	5493437	Identifier	SecureZeroMemory		5493046	0					
ANR	5493438	ArgumentList	w_pw		5493046	1					
ANR	5493439	Argument	w_pw		5493046	0					
ANR	5493440	Identifier	w_pw		5493046	0					
ANR	5493441	Argument	wcslen ( w_pw ) * sizeof ( wchar_t )		5493046	1					
ANR	5493442	MultiplicativeExpression	wcslen ( w_pw ) * sizeof ( wchar_t )		5493046	0		*			
ANR	5493443	CallExpression	wcslen ( w_pw )		5493046	0					
ANR	5493444	Callee	wcslen		5493046	0					
ANR	5493445	Identifier	wcslen		5493046	0					
ANR	5493446	ArgumentList	w_pw		5493046	1					
ANR	5493447	Argument	w_pw		5493046	0					
ANR	5493448	Identifier	w_pw		5493046	0					
ANR	5493449	SizeofExpression	sizeof ( wchar_t )		5493046	1					
ANR	5493450	Sizeof	sizeof		5493046	0					
ANR	5493451	SizeofOperand	wchar_t		5493046	1					
ANR	5493452	Statement	delete	336:3:9012:9017	5493046	2	True				
ANR	5493453	Statement	[	336:9:9018:9018	5493046	3	True				
ANR	5493454	Statement	]	336:10:9019:9019	5493046	4	True				
ANR	5493455	ExpressionStatement	w_pw	336:11:9020:9026	5493046	5	True				
ANR	5493456	Identifier	w_pw		5493046	0					
ANR	5493457	ExpressionStatement	w_pw = NULL	337:3:9031:9042	5493046	6	True				
ANR	5493458	AssignmentExpression	w_pw = NULL		5493046	0		=			
ANR	5493459	Identifier	w_pw		5493046	0					
ANR	5493460	Identifier	NULL		5493046	1					
ANR	5493461	ExpressionStatement	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & CurrUserHandle )"	340:3:9101:9444	5493046	7	True				
ANR	5493462	AssignmentExpression	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & CurrUserHandle )"		5493046	0		=			
ANR	5493463	Identifier	retval		5493046	0					
ANR	5493464	CallExpression	"LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & CurrUserHandle )"		5493046	1					
ANR	5493465	Callee	LogonUser		5493046	0					
ANR	5493466	Identifier	LogonUser		5493046	0					
ANR	5493467	ArgumentList	user		5493046	1					
ANR	5493468	Argument	user		5493046	0					
ANR	5493469	Identifier	user		5493046	0					
ANR	5493470	Argument	dom		5493046	1					
ANR	5493471	Identifier	dom		5493046	0					
ANR	5493472	Argument	pw		5493046	2					
ANR	5493473	Identifier	pw		5493046	0					
ANR	5493474	Argument	LOGON32_LOGON_INTERACTIVE		5493046	3					
ANR	5493475	Identifier	LOGON32_LOGON_INTERACTIVE		5493046	0					
ANR	5493476	Argument	LOGON32_PROVIDER_DEFAULT		5493046	4					
ANR	5493477	Identifier	LOGON32_PROVIDER_DEFAULT		5493046	0					
ANR	5493478	Argument	& CurrUserHandle		5493046	5					
ANR	5493479	UnaryOperationExpression	& CurrUserHandle		5493046	0					
ANR	5493480	UnaryOperator	&		5493046	0					
ANR	5493481	Identifier	CurrUserHandle		5493046	1					
ANR	5493482	IfStatement	if ( ! retval )		5493046	8					
ANR	5493483	Condition	! retval	350:8:9458:9464	5493046	0	True				
ANR	5493484	UnaryOperationExpression	! retval		5493046	0					
ANR	5493485	UnaryOperator	!		5493046	0					
ANR	5493486	Identifier	retval		5493046	1					
ANR	5493487	CompoundStatement		126:18:4015:4015	5493046	1					
ANR	5493488	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Locally stored credential for %s@%s is stale\\n"" , user , dom )"	351:4:9474:9558	5493046	0	True				
ANR	5493489	CallExpression	"dprintf ( D_FULLDEBUG , ""Locally stored credential for %s@%s is stale\\n"" , user , dom )"		5493046	0					
ANR	5493490	Callee	dprintf		5493046	0					
ANR	5493491	Identifier	dprintf		5493046	0					
ANR	5493492	ArgumentList	D_FULLDEBUG		5493046	1					
ANR	5493493	Argument	D_FULLDEBUG		5493046	0					
ANR	5493494	Identifier	D_FULLDEBUG		5493046	0					
ANR	5493495	Argument	"""Locally stored credential for %s@%s is stale\\n"""		5493046	1					
ANR	5493496	PrimaryExpression	"""Locally stored credential for %s@%s is stale\\n"""		5493046	0					
ANR	5493497	Argument	user		5493046	2					
ANR	5493498	Identifier	user		5493046	0					
ANR	5493499	Argument	dom		5493046	3					
ANR	5493500	Identifier	dom		5493046	0					
ANR	5493501	ExpressionStatement	CurrUserHandle = NULL	354:4:9638:9659	5493046	1	True				
ANR	5493502	AssignmentExpression	CurrUserHandle = NULL		5493046	0		=			
ANR	5493503	Identifier	CurrUserHandle		5493046	0					
ANR	5493504	Identifier	NULL		5493046	1					
ANR	5493505	ElseStatement	else		5493046	0					
ANR	5493506	CompoundStatement		131:10:4219:4219	5493046	0					
ANR	5493507	ExpressionStatement	got_password = true	356:4:9678:9697	5493046	0	True				
ANR	5493508	AssignmentExpression	got_password = true		5493046	0		=			
ANR	5493509	Identifier	got_password		5493046	0					
ANR	5493510	Identifier	true		5493046	1					
ANR	5493511	IdentifierDeclStatement	"char * credd_host = param ( ""CREDD_HOST"" ) ;"	364:2:9974:10012	5493046	24	True				
ANR	5493512	IdentifierDecl	"* credd_host = param ( ""CREDD_HOST"" )"		5493046	0					
ANR	5493513	IdentifierDeclType	char *		5493046	0					
ANR	5493514	Identifier	credd_host		5493046	1					
ANR	5493515	AssignmentExpression	"* credd_host = param ( ""CREDD_HOST"" )"		5493046	2		=			
ANR	5493516	Identifier	credd_host		5493046	0					
ANR	5493517	CallExpression	"param ( ""CREDD_HOST"" )"		5493046	1					
ANR	5493518	Callee	param		5493046	0					
ANR	5493519	Identifier	param		5493046	0					
ANR	5493520	ArgumentList	"""CREDD_HOST"""		5493046	1					
ANR	5493521	Argument	"""CREDD_HOST"""		5493046	0					
ANR	5493522	PrimaryExpression	"""CREDD_HOST"""		5493046	0					
ANR	5493523	IfStatement	if ( credd_host && got_password == false )		5493046	25					
ANR	5493524	Condition	credd_host && got_password == false	365:6:10020:10052	5493046	0	True				
ANR	5493525	AndExpression	credd_host && got_password == false		5493046	0		&&			
ANR	5493526	Identifier	credd_host		5493046	0					
ANR	5493527	EqualityExpression	got_password == false		5493046	1		==			
ANR	5493528	Identifier	got_password		5493046	0					
ANR	5493529	Identifier	false		5493046	1					
ANR	5493530	CompoundStatement		141:41:4602:4602	5493046	1					
ANR	5493531	ExpressionStatement	"got_password = get_password_from_credd ( credd_host , username , domain , pw , sizeof ( pw ) )"	367:11:10074:10229	5493046	0	True				
ANR	5493532	AssignmentExpression	"got_password = get_password_from_credd ( credd_host , username , domain , pw , sizeof ( pw ) )"		5493046	0		=			
ANR	5493533	Identifier	got_password		5493046	0					
ANR	5493534	CallExpression	"get_password_from_credd ( credd_host , username , domain , pw , sizeof ( pw ) )"		5493046	1					
ANR	5493535	Callee	get_password_from_credd		5493046	0					
ANR	5493536	Identifier	get_password_from_credd		5493046	0					
ANR	5493537	ArgumentList	credd_host		5493046	1					
ANR	5493538	Argument	credd_host		5493046	0					
ANR	5493539	Identifier	credd_host		5493046	0					
ANR	5493540	Argument	username		5493046	1					
ANR	5493541	Identifier	username		5493046	0					
ANR	5493542	Argument	domain		5493046	2					
ANR	5493543	Identifier	domain		5493046	0					
ANR	5493544	Argument	pw		5493046	3					
ANR	5493545	Identifier	pw		5493046	0					
ANR	5493546	Argument	sizeof ( pw )		5493046	4					
ANR	5493547	SizeofExpression	sizeof ( pw )		5493046	0					
ANR	5493548	Sizeof	sizeof		5493046	0					
ANR	5493549	SizeofOperand	pw		5493046	1					
ANR	5493550	ExpressionStatement	got_password_from_credd = got_password	373:11:10242:10280	5493046	1	True				
ANR	5493551	AssignmentExpression	got_password_from_credd = got_password		5493046	0		=			
ANR	5493552	Identifier	got_password_from_credd		5493046	0					
ANR	5493553	Identifier	got_password		5493046	1					
ANR	5493554	IfStatement	if ( credd_host )		5493046	26					
ANR	5493555	Condition	credd_host	402:6:11242:11251	5493046	0	True				
ANR	5493556	Identifier	credd_host		5493046	0					
ANR	5493557	ExpressionStatement	free ( credd_host )	402:18:11254:11270	5493046	1	True				
ANR	5493558	CallExpression	free ( credd_host )		5493046	0					
ANR	5493559	Callee	free		5493046	0					
ANR	5493560	Identifier	free		5493046	0					
ANR	5493561	ArgumentList	credd_host		5493046	1					
ANR	5493562	Argument	credd_host		5493046	0					
ANR	5493563	Identifier	credd_host		5493046	0					
ANR	5493564	IfStatement	if ( ! got_password )		5493046	27					
ANR	5493565	Condition	! got_password	404:7:11280:11293	5493046	0	True				
ANR	5493566	UnaryOperationExpression	! got_password		5493046	0					
ANR	5493567	UnaryOperator	!		5493046	0					
ANR	5493568	Identifier	got_password		5493046	1					
ANR	5493569	CompoundStatement		180:24:5844:5844	5493046	1					
ANR	5493570	Statement	dprintf	405:3:11302:11308	5493046	0	True				
ANR	5493571	Statement	(	405:10:11309:11309	5493046	1	True				
ANR	5493572	Statement	D_ALWAYS	405:11:11310:11317	5493046	2	True				
ANR	5493573	Statement	","	405:19:11318:11318	5493046	3	True				
ANR	5493574	Statement	"""ERROR: Could not locate valid credential for user """	405:21:11320:11371	5493046	4	True				
ANR	5493575	Statement	"""'%s@%s'\\n"""	406:4:11377:11387	5493046	5	True				
ANR	5493576	Statement	","	406:15:11388:11388	5493046	6	True				
ANR	5493577	Statement	username	406:17:11390:11397	5493046	7	True				
ANR	5493578	Statement	","	406:25:11398:11398	5493046	8	True				
ANR	5493579	Statement	domain	406:27:11400:11405	5493046	9	True				
ANR	5493580	Statement	)	406:33:11406:11406	5493046	10	True				
ANR	5493581	ExpressionStatement		406:34:11407:11407	5493046	11	True				
ANR	5493582	ReturnStatement	return 0 ;	407:3:11412:11420	5493046	12	True				
ANR	5493583	PrimaryExpression	0		5493046	0					
ANR	5493584	ElseStatement	else		5493046	0					
ANR	5493585	CompoundStatement		184:9:5978:5978	5493046	0					
ANR	5493586	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Found credential for user '%s'\\n"" , username )"	409:3:11436:11502	5493046	0	True				
ANR	5493587	CallExpression	"dprintf ( D_FULLDEBUG , ""Found credential for user '%s'\\n"" , username )"		5493046	0					
ANR	5493588	Callee	dprintf		5493046	0					
ANR	5493589	Identifier	dprintf		5493046	0					
ANR	5493590	ArgumentList	D_FULLDEBUG		5493046	1					
ANR	5493591	Argument	D_FULLDEBUG		5493046	0					
ANR	5493592	Identifier	D_FULLDEBUG		5493046	0					
ANR	5493593	Argument	"""Found credential for user '%s'\\n"""		5493046	1					
ANR	5493594	PrimaryExpression	"""Found credential for user '%s'\\n"""		5493046	0					
ANR	5493595	Argument	username		5493046	2					
ANR	5493596	Identifier	username		5493046	0					
ANR	5493597	IfStatement	if ( CurrUserHandle == NULL )		5493046	1					
ANR	5493598	Condition	CurrUserHandle == NULL	413:8:11620:11641	5493046	0	True				
ANR	5493599	EqualityExpression	CurrUserHandle == NULL		5493046	0		==			
ANR	5493600	Identifier	CurrUserHandle		5493046	0					
ANR	5493601	Identifier	NULL		5493046	1					
ANR	5493602	CompoundStatement		189:33:6192:6192	5493046	1					
ANR	5493603	ExpressionStatement	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & CurrUserHandle )"	414:4:11651:12002	5493046	0	True				
ANR	5493604	AssignmentExpression	"retval = LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & CurrUserHandle )"		5493046	0		=			
ANR	5493605	Identifier	retval		5493046	0					
ANR	5493606	CallExpression	"LogonUser ( user , dom , pw , LOGON32_LOGON_INTERACTIVE , LOGON32_PROVIDER_DEFAULT , & CurrUserHandle )"		5493046	1					
ANR	5493607	Callee	LogonUser		5493046	0					
ANR	5493608	Identifier	LogonUser		5493046	0					
ANR	5493609	ArgumentList	user		5493046	1					
ANR	5493610	Argument	user		5493046	0					
ANR	5493611	Identifier	user		5493046	0					
ANR	5493612	Argument	dom		5493046	1					
ANR	5493613	Identifier	dom		5493046	0					
ANR	5493614	Argument	pw		5493046	2					
ANR	5493615	Identifier	pw		5493046	0					
ANR	5493616	Argument	LOGON32_LOGON_INTERACTIVE		5493046	3					
ANR	5493617	Identifier	LOGON32_LOGON_INTERACTIVE		5493046	0					
ANR	5493618	Argument	LOGON32_PROVIDER_DEFAULT		5493046	4					
ANR	5493619	Identifier	LOGON32_PROVIDER_DEFAULT		5493046	0					
ANR	5493620	Argument	& CurrUserHandle		5493046	5					
ANR	5493621	UnaryOperationExpression	& CurrUserHandle		5493046	0					
ANR	5493622	UnaryOperator	&		5493046	0					
ANR	5493623	Identifier	CurrUserHandle		5493046	1					
ANR	5493624	ElseStatement	else		5493046	0					
ANR	5493625	CompoundStatement		199:10:6561:6561	5493046	0					
ANR	5493626	ExpressionStatement	retval = 1	426:4:12177:12187	5493046	0	True				
ANR	5493627	AssignmentExpression	retval = 1		5493046	0		=			
ANR	5493628	Identifier	retval		5493046	0					
ANR	5493629	PrimaryExpression	1		5493046	1					
ANR	5493630	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""LogonUser completed.\\n"" )"	429:3:12244:12290	5493046	2	True				
ANR	5493631	CallExpression	"dprintf ( D_FULLDEBUG , ""LogonUser completed.\\n"" )"		5493046	0					
ANR	5493632	Callee	dprintf		5493046	0					
ANR	5493633	Identifier	dprintf		5493046	0					
ANR	5493634	ArgumentList	D_FULLDEBUG		5493046	1					
ANR	5493635	Argument	D_FULLDEBUG		5493046	0					
ANR	5493636	Identifier	D_FULLDEBUG		5493046	0					
ANR	5493637	Argument	"""LogonUser completed.\\n"""		5493046	1					
ANR	5493638	PrimaryExpression	"""LogonUser completed.\\n"""		5493046	0					
ANR	5493639	IfStatement	if ( UserLoginName )		5493046	3					
ANR	5493640	Condition	UserLoginName	431:7:12300:12312	5493046	0	True				
ANR	5493641	Identifier	UserLoginName		5493046	0					
ANR	5493642	CompoundStatement		207:22:6862:6862	5493046	1					
ANR	5493643	ExpressionStatement	free ( UserLoginName )	432:4:12321:12340	5493046	0	True				
ANR	5493644	CallExpression	free ( UserLoginName )		5493046	0					
ANR	5493645	Callee	free		5493046	0					
ANR	5493646	Identifier	free		5493046	0					
ANR	5493647	ArgumentList	UserLoginName		5493046	1					
ANR	5493648	Argument	UserLoginName		5493046	0					
ANR	5493649	Identifier	UserLoginName		5493046	0					
ANR	5493650	ExpressionStatement	UserDomainName = NULL	433:4:12346:12367	5493046	1	True				
ANR	5493651	AssignmentExpression	UserDomainName = NULL		5493046	0		=			
ANR	5493652	Identifier	UserDomainName		5493046	0					
ANR	5493653	Identifier	NULL		5493046	1					
ANR	5493654	IfStatement	if ( UserDomainName )		5493046	4					
ANR	5493655	Condition	UserDomainName	435:7:12381:12394	5493046	0	True				
ANR	5493656	Identifier	UserDomainName		5493046	0					
ANR	5493657	CompoundStatement		211:23:6944:6944	5493046	1					
ANR	5493658	ExpressionStatement	free ( UserDomainName )	436:4:12403:12423	5493046	0	True				
ANR	5493659	CallExpression	free ( UserDomainName )		5493046	0					
ANR	5493660	Callee	free		5493046	0					
ANR	5493661	Identifier	free		5493046	0					
ANR	5493662	ArgumentList	UserDomainName		5493046	1					
ANR	5493663	Argument	UserDomainName		5493046	0					
ANR	5493664	Identifier	UserDomainName		5493046	0					
ANR	5493665	ExpressionStatement	UserDomainName = NULL	437:4:12429:12450	5493046	1	True				
ANR	5493666	AssignmentExpression	UserDomainName = NULL		5493046	0		=			
ANR	5493667	Identifier	UserDomainName		5493046	0					
ANR	5493668	Identifier	NULL		5493046	1					
ANR	5493669	ExpressionStatement	UserLoginName = strdup ( username )	439:3:12460:12492	5493046	5	True				
ANR	5493670	AssignmentExpression	UserLoginName = strdup ( username )		5493046	0		=			
ANR	5493671	Identifier	UserLoginName		5493046	0					
ANR	5493672	CallExpression	strdup ( username )		5493046	1					
ANR	5493673	Callee	strdup		5493046	0					
ANR	5493674	Identifier	strdup		5493046	0					
ANR	5493675	ArgumentList	username		5493046	1					
ANR	5493676	Argument	username		5493046	0					
ANR	5493677	Identifier	username		5493046	0					
ANR	5493678	ExpressionStatement	UserDomainName = strdup ( domain )	440:3:12497:12528	5493046	6	True				
ANR	5493679	AssignmentExpression	UserDomainName = strdup ( domain )		5493046	0		=			
ANR	5493680	Identifier	UserDomainName		5493046	0					
ANR	5493681	CallExpression	strdup ( domain )		5493046	1					
ANR	5493682	Callee	strdup		5493046	0					
ANR	5493683	Identifier	strdup		5493046	0					
ANR	5493684	ArgumentList	domain		5493046	1					
ANR	5493685	Argument	domain		5493046	0					
ANR	5493686	Identifier	domain		5493046	0					
ANR	5493687	IfStatement	if ( ! retval )		5493046	7					
ANR	5493688	Condition	! retval	442:8:12539:12545	5493046	0	True				
ANR	5493689	UnaryOperationExpression	! retval		5493046	0					
ANR	5493690	UnaryOperator	!		5493046	0					
ANR	5493691	Identifier	retval		5493046	1					
ANR	5493692	CompoundStatement		218:18:7096:7096	5493046	1					
ANR	5493693	ExpressionStatement	"dprintf ( D_ALWAYS , ""init_user_ids: LogonUser failed with NT Status %ld\\n"" , GetLastError ( ) )"	443:4:12555:12650	5493046	0	True				
ANR	5493694	CallExpression	"dprintf ( D_ALWAYS , ""init_user_ids: LogonUser failed with NT Status %ld\\n"" , GetLastError ( ) )"		5493046	0					
ANR	5493695	Callee	dprintf		5493046	0					
ANR	5493696	Identifier	dprintf		5493046	0					
ANR	5493697	ArgumentList	D_ALWAYS		5493046	1					
ANR	5493698	Argument	D_ALWAYS		5493046	0					
ANR	5493699	Identifier	D_ALWAYS		5493046	0					
ANR	5493700	Argument	"""init_user_ids: LogonUser failed with NT Status %ld\\n"""		5493046	1					
ANR	5493701	PrimaryExpression	"""init_user_ids: LogonUser failed with NT Status %ld\\n"""		5493046	0					
ANR	5493702	Argument	GetLastError ( )		5493046	2					
ANR	5493703	CallExpression	GetLastError ( )		5493046	0					
ANR	5493704	Callee	GetLastError		5493046	0					
ANR	5493705	Identifier	GetLastError		5493046	0					
ANR	5493706	ArgumentList			5493046	1					
ANR	5493707	ExpressionStatement	retval = 0	445:4:12656:12667	5493046	1	True				
ANR	5493708	AssignmentExpression	retval = 0		5493046	0		=			
ANR	5493709	Identifier	retval		5493046	0					
ANR	5493710	PrimaryExpression	0		5493046	1					
ANR	5493711	ElseStatement	else		5493046	0					
ANR	5493712	CompoundStatement		222:10:7255:7255	5493046	0					
ANR	5493713	ExpressionStatement	"cached_tokens . storeToken ( UserLoginName , UserDomainName , CurrUserHandle )"	448:4:12754:12834	5493046	0	True				
ANR	5493714	CallExpression	"cached_tokens . storeToken ( UserLoginName , UserDomainName , CurrUserHandle )"		5493046	0					
ANR	5493715	Callee	cached_tokens . storeToken		5493046	0					
ANR	5493716	MemberAccess	cached_tokens . storeToken		5493046	0					
ANR	5493717	Identifier	cached_tokens		5493046	0					
ANR	5493718	Identifier	storeToken		5493046	1					
ANR	5493719	ArgumentList	UserLoginName		5493046	1					
ANR	5493720	Argument	UserLoginName		5493046	0					
ANR	5493721	Identifier	UserLoginName		5493046	0					
ANR	5493722	Argument	UserDomainName		5493046	1					
ANR	5493723	Identifier	UserDomainName		5493046	0					
ANR	5493724	Argument	CurrUserHandle		5493046	2					
ANR	5493725	Identifier	CurrUserHandle		5493046	0					
ANR	5493726	ExpressionStatement	UserIdsInited = true	450:4:12840:12860	5493046	1	True				
ANR	5493727	AssignmentExpression	UserIdsInited = true		5493046	0		=			
ANR	5493728	Identifier	UserIdsInited		5493046	0					
ANR	5493729	Identifier	true		5493046	1					
ANR	5493730	IfStatement	"if ( got_password_from_credd && param_boolean ( ""CREDD_CACHE_LOCALLY"" , false ) )"		5493046	2					
ANR	5493731	Condition	"got_password_from_credd && param_boolean ( ""CREDD_CACHE_LOCALLY"" , false )"	454:9:13000:13089	5493046	0	True				
ANR	5493732	AndExpression	"got_password_from_credd && param_boolean ( ""CREDD_CACHE_LOCALLY"" , false )"		5493046	0		&&			
ANR	5493733	Identifier	got_password_from_credd		5493046	0					
ANR	5493734	CallExpression	"param_boolean ( ""CREDD_CACHE_LOCALLY"" , false )"		5493046	1					
ANR	5493735	Callee	param_boolean		5493046	0					
ANR	5493736	Identifier	param_boolean		5493046	0					
ANR	5493737	ArgumentList	"""CREDD_CACHE_LOCALLY"""		5493046	1					
ANR	5493738	Argument	"""CREDD_CACHE_LOCALLY"""		5493046	0					
ANR	5493739	PrimaryExpression	"""CREDD_CACHE_LOCALLY"""		5493046	0					
ANR	5493740	Argument	false		5493046	1					
ANR	5493741	Identifier	false		5493046	0					
ANR	5493742	CompoundStatement		231:66:7640:7640	5493046	1					
ANR	5493743	ExpressionStatement	"cache_credd_locally ( username , domain , pw )"	456:20:13115:13156	5493046	0	True				
ANR	5493744	CallExpression	"cache_credd_locally ( username , domain , pw )"		5493046	0					
ANR	5493745	Callee	cache_credd_locally		5493046	0					
ANR	5493746	Identifier	cache_credd_locally		5493046	0					
ANR	5493747	ArgumentList	username		5493046	1					
ANR	5493748	Argument	username		5493046	0					
ANR	5493749	Identifier	username		5493046	0					
ANR	5493750	Argument	domain		5493046	1					
ANR	5493751	Identifier	domain		5493046	0					
ANR	5493752	Argument	pw		5493046	2					
ANR	5493753	Identifier	pw		5493046	0					
ANR	5493754	ExpressionStatement	retval = 1	459:4:13185:13195	5493046	3	True				
ANR	5493755	AssignmentExpression	retval = 1		5493046	0		=			
ANR	5493756	Identifier	retval		5493046	0					
ANR	5493757	PrimaryExpression	1		5493046	1					
ANR	5493758	ExpressionStatement	"SecureZeroMemory ( pw , 255 )"	463:3:13262:13287	5493046	8	True				
ANR	5493759	CallExpression	"SecureZeroMemory ( pw , 255 )"		5493046	0					
ANR	5493760	Callee	SecureZeroMemory		5493046	0					
ANR	5493761	Identifier	SecureZeroMemory		5493046	0					
ANR	5493762	ArgumentList	pw		5493046	1					
ANR	5493763	Argument	pw		5493046	0					
ANR	5493764	Identifier	pw		5493046	0					
ANR	5493765	Argument	255		5493046	1					
ANR	5493766	PrimaryExpression	255		5493046	0					
ANR	5493767	ReturnStatement	return retval ;	465:3:13293:13306	5493046	9	True				
ANR	5493768	Identifier	retval		5493046	0					
ANR	5493769	ElseStatement	else		5493046	0					
ANR	5493770	CompoundStatement		244:8:7870:7870	5493046	0					
ANR	5493771	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Using dynamic user account.\\n"" )"	473:2:13383:13436	5493046	0	True				
ANR	5493772	CallExpression	"dprintf ( D_FULLDEBUG , ""Using dynamic user account.\\n"" )"		5493046	0					
ANR	5493773	Callee	dprintf		5493046	0					
ANR	5493774	Identifier	dprintf		5493046	0					
ANR	5493775	ArgumentList	D_FULLDEBUG		5493046	1					
ANR	5493776	Argument	D_FULLDEBUG		5493046	0					
ANR	5493777	Identifier	D_FULLDEBUG		5493046	0					
ANR	5493778	Argument	"""Using dynamic user account.\\n"""		5493046	1					
ANR	5493779	PrimaryExpression	"""Using dynamic user account.\\n"""		5493046	0					
ANR	5493780	ExpressionStatement	myDynuser -> reset ( )	475:2:13441:13459	5493046	1	True				
ANR	5493781	CallExpression	myDynuser -> reset ( )		5493046	0					
ANR	5493782	Callee	myDynuser -> reset		5493046	0					
ANR	5493783	PtrMemberAccess	myDynuser -> reset		5493046	0					
ANR	5493784	Identifier	myDynuser		5493046	0					
ANR	5493785	Identifier	reset		5493046	1					
ANR	5493786	ArgumentList			5493046	1					
ANR	5493787	IfStatement	if ( ! myDynuser -> init_user ( ) )		5493046	2					
ANR	5493788	Condition	! myDynuser -> init_user ( )	480:7:13578:13600	5493046	0	True				
ANR	5493789	UnaryOperationExpression	! myDynuser -> init_user ( )		5493046	0					
ANR	5493790	UnaryOperator	!		5493046	0					
ANR	5493791	CallExpression	myDynuser -> init_user ( )		5493046	1					
ANR	5493792	Callee	myDynuser -> init_user		5493046	0					
ANR	5493793	PtrMemberAccess	myDynuser -> init_user		5493046	0					
ANR	5493794	Identifier	myDynuser		5493046	0					
ANR	5493795	Identifier	init_user		5493046	1					
ANR	5493796	ArgumentList			5493046	1					
ANR	5493797	CompoundStatement		256:33:8151:8151	5493046	1					
ANR	5493798	ExpressionStatement	"EXCEPT ( ""Failed to create a user nobody"" )"	482:3:13656:13696	5493046	0	True				
ANR	5493799	CallExpression	"EXCEPT ( ""Failed to create a user nobody"" )"		5493046	0					
ANR	5493800	Callee	EXCEPT		5493046	0					
ANR	5493801	Identifier	EXCEPT		5493046	0					
ANR	5493802	ArgumentList	"""Failed to create a user nobody"""		5493046	1					
ANR	5493803	Argument	"""Failed to create a user nobody"""		5493046	0					
ANR	5493804	PrimaryExpression	"""Failed to create a user nobody"""		5493046	0					
ANR	5493805	IfStatement	if ( UserLoginName )		5493046	3					
ANR	5493806	Condition	UserLoginName	485:6:13711:13723	5493046	0	True				
ANR	5493807	Identifier	UserLoginName		5493046	0					
ANR	5493808	CompoundStatement		261:21:8273:8273	5493046	1					
ANR	5493809	ExpressionStatement	free ( UserLoginName )	486:3:13731:13750	5493046	0	True				
ANR	5493810	CallExpression	free ( UserLoginName )		5493046	0					
ANR	5493811	Callee	free		5493046	0					
ANR	5493812	Identifier	free		5493046	0					
ANR	5493813	ArgumentList	UserLoginName		5493046	1					
ANR	5493814	Argument	UserLoginName		5493046	0					
ANR	5493815	Identifier	UserLoginName		5493046	0					
ANR	5493816	ExpressionStatement	UserDomainName = NULL	487:3:13755:13776	5493046	1	True				
ANR	5493817	AssignmentExpression	UserDomainName = NULL		5493046	0		=			
ANR	5493818	Identifier	UserDomainName		5493046	0					
ANR	5493819	Identifier	NULL		5493046	1					
ANR	5493820	IfStatement	if ( UserDomainName )		5493046	4					
ANR	5493821	Condition	UserDomainName	489:6:13788:13801	5493046	0	True				
ANR	5493822	Identifier	UserDomainName		5493046	0					
ANR	5493823	CompoundStatement		265:22:8351:8351	5493046	1					
ANR	5493824	ExpressionStatement	free ( UserDomainName )	490:3:13809:13829	5493046	0	True				
ANR	5493825	CallExpression	free ( UserDomainName )		5493046	0					
ANR	5493826	Callee	free		5493046	0					
ANR	5493827	Identifier	free		5493046	0					
ANR	5493828	ArgumentList	UserDomainName		5493046	1					
ANR	5493829	Argument	UserDomainName		5493046	0					
ANR	5493830	Identifier	UserDomainName		5493046	0					
ANR	5493831	ExpressionStatement	UserDomainName = NULL	491:3:13834:13855	5493046	1	True				
ANR	5493832	AssignmentExpression	UserDomainName = NULL		5493046	0		=			
ANR	5493833	Identifier	UserDomainName		5493046	0					
ANR	5493834	Identifier	NULL		5493046	1					
ANR	5493835	ExpressionStatement	UserLoginName = strdup ( myDynuser -> get_accountname ( ) )	494:2:13864:13918	5493046	5	True				
ANR	5493836	AssignmentExpression	UserLoginName = strdup ( myDynuser -> get_accountname ( ) )		5493046	0		=			
ANR	5493837	Identifier	UserLoginName		5493046	0					
ANR	5493838	CallExpression	strdup ( myDynuser -> get_accountname ( ) )		5493046	1					
ANR	5493839	Callee	strdup		5493046	0					
ANR	5493840	Identifier	strdup		5493046	0					
ANR	5493841	ArgumentList	myDynuser -> get_accountname ( )		5493046	1					
ANR	5493842	Argument	myDynuser -> get_accountname ( )		5493046	0					
ANR	5493843	CallExpression	myDynuser -> get_accountname ( )		5493046	0					
ANR	5493844	Callee	myDynuser -> get_accountname		5493046	0					
ANR	5493845	PtrMemberAccess	myDynuser -> get_accountname		5493046	0					
ANR	5493846	Identifier	myDynuser		5493046	0					
ANR	5493847	Identifier	get_accountname		5493046	1					
ANR	5493848	ArgumentList			5493046	1					
ANR	5493849	ExpressionStatement	"UserDomainName = strdup ( ""."" )"	495:2:13922:13952	5493046	6	True				
ANR	5493850	AssignmentExpression	"UserDomainName = strdup ( ""."" )"		5493046	0		=			
ANR	5493851	Identifier	UserDomainName		5493046	0					
ANR	5493852	CallExpression	"strdup ( ""."" )"		5493046	1					
ANR	5493853	Callee	strdup		5493046	0					
ANR	5493854	Identifier	strdup		5493046	0					
ANR	5493855	ArgumentList	"""."""		5493046	1					
ANR	5493856	Argument	"""."""		5493046	0					
ANR	5493857	PrimaryExpression	"""."""		5493046	0					
ANR	5493858	ExpressionStatement	CurrUserHandle = myDynuser -> get_token ( )	498:2:14010:14049	5493046	7	True				
ANR	5493859	AssignmentExpression	CurrUserHandle = myDynuser -> get_token ( )		5493046	0		=			
ANR	5493860	Identifier	CurrUserHandle		5493046	0					
ANR	5493861	CallExpression	myDynuser -> get_token ( )		5493046	1					
ANR	5493862	Callee	myDynuser -> get_token		5493046	0					
ANR	5493863	PtrMemberAccess	myDynuser -> get_token		5493046	0					
ANR	5493864	Identifier	myDynuser		5493046	0					
ANR	5493865	Identifier	get_token		5493046	1					
ANR	5493866	ArgumentList			5493046	1					
ANR	5493867	ExpressionStatement	"cached_tokens . storeToken ( UserLoginName , UserDomainName , CurrUserHandle )"	501:2:14092:14171	5493046	8	True				
ANR	5493868	CallExpression	"cached_tokens . storeToken ( UserLoginName , UserDomainName , CurrUserHandle )"		5493046	0					
ANR	5493869	Callee	cached_tokens . storeToken		5493046	0					
ANR	5493870	MemberAccess	cached_tokens . storeToken		5493046	0					
ANR	5493871	Identifier	cached_tokens		5493046	0					
ANR	5493872	Identifier	storeToken		5493046	1					
ANR	5493873	ArgumentList	UserLoginName		5493046	1					
ANR	5493874	Argument	UserLoginName		5493046	0					
ANR	5493875	Identifier	UserLoginName		5493046	0					
ANR	5493876	Argument	UserDomainName		5493046	1					
ANR	5493877	Identifier	UserDomainName		5493046	0					
ANR	5493878	Argument	CurrUserHandle		5493046	2					
ANR	5493879	Identifier	CurrUserHandle		5493046	0					
ANR	5493880	ExpressionStatement	UserIdsInited = true	503:2:14175:14195	5493046	9	True				
ANR	5493881	AssignmentExpression	UserIdsInited = true		5493046	0		=			
ANR	5493882	Identifier	UserIdsInited		5493046	0					
ANR	5493883	Identifier	true		5493046	1					
ANR	5493884	ReturnStatement	return 1 ;	504:2:14199:14207	5493046	10	True				
ANR	5493885	PrimaryExpression	1		5493046	0					
ANR	5493886	ReturnType	int		5493046	1					
ANR	5493887	Identifier	init_user_ids		5493046	2					
ANR	5493888	ParameterList	"const char username [ ] , const char domain [ ]"		5493046	3					
ANR	5493889	Parameter	const char username [ ]	224:14:5407:5427	5493046	0	True				
ANR	5493890	ParameterType	const char [ ]		5493046	0					
ANR	5493891	Identifier	username		5493046	1					
ANR	5493892	Parameter	const char domain [ ]	224:37:5430:5448	5493046	1	True				
ANR	5493893	ParameterType	const char [ ]		5493046	0					
ANR	5493894	Identifier	domain		5493046	1					
ANR	5493895	CFGEntryNode	ENTRY		5493046		True				
ANR	5493896	CFGExitNode	EXIT		5493046		True				
ANR	5493897	Symbol	CurrUserHandle		5493046						
ANR	5493898	Symbol	myDynuser		5493046						
ANR	5493899	Symbol	cached_tokens . getToken		5493046						
ANR	5493900	Symbol	dom		5493046						
ANR	5493901	Symbol	my_domainname		5493046						
ANR	5493902	Symbol	pw		5493046						
ANR	5493903	Symbol	LOGON32_LOGON_INTERACTIVE		5493046						
ANR	5493904	Symbol	credd_host		5493046						
ANR	5493905	Symbol	w_fullname		5493046						
ANR	5493906	Symbol	myDynuser -> get_token		5493046						
ANR	5493907	Symbol	myDynuser -> get_accountname		5493046						
ANR	5493908	Symbol	lsaMan		5493046						
ANR	5493909	Symbol	myusr		5493046						
ANR	5493910	Symbol	can_switch_ids		5493046						
ANR	5493911	Symbol	param		5493046						
ANR	5493912	Symbol	got_password_from_credd		5493046						
ANR	5493913	Symbol	get_password_from_credd		5493046						
ANR	5493914	Symbol	UserLoginName		5493046						
ANR	5493915	Symbol	LogonUser		5493046						
ANR	5493916	Symbol	strcasecmp		5493046						
ANR	5493917	Symbol	strcmp		5493046						
ANR	5493918	Symbol	UserDomainName		5493046						
ANR	5493919	Symbol	NULL		5493046						
ANR	5493920	Symbol	my_usertoken		5493046						
ANR	5493921	Symbol	& CurrUserHandle		5493046						
ANR	5493922	Symbol	lsaMan . query		5493046						
ANR	5493923	Symbol	UserIdsInited		5493046						
ANR	5493924	Symbol	false		5493046						
ANR	5493925	Symbol	D_ALWAYS		5493046						
ANR	5493926	Symbol	LOGON32_PROVIDER_DEFAULT		5493046						
ANR	5493927	Symbol	D_FULLDEBUG		5493046						
ANR	5493928	Symbol	param_boolean		5493046						
ANR	5493929	Symbol	my_username		5493046						
ANR	5493930	Symbol	myDynuser -> init_user		5493046						
ANR	5493931	Symbol	retval		5493046						
ANR	5493932	Symbol	mydom		5493046						
ANR	5493933	Symbol	* myDynuser		5493046						
ANR	5493934	Symbol	GetLastError		5493046						
ANR	5493935	Symbol	domain		5493046						
ANR	5493936	Symbol	got_password		5493046						
ANR	5493937	Symbol	wcslen		5493046						
ANR	5493938	Symbol	true		5493046						
ANR	5493939	Symbol	w_pw		5493046						
ANR	5493940	Symbol	strdup		5493046						
ANR	5493941	Symbol	user		5493046						
ANR	5493942	Symbol	username		5493046						
ANR	5493943	Symbol	cached_tokens		5493046						
ANR	5493944	Function	_set_priv	508:0:14215:16586							
ANR	5493945	FunctionDef	"_set_priv (priv_state s , const char * file , int line , int dologging)"		5493944	0					
ANR	5493946	CompoundStatement		510:0:14293:16586	5493944	0					
ANR	5493947	IdentifierDeclStatement	priv_state PrevPrivState = CurrentPrivState ;	511:1:14296:14339	5493944	0	True				
ANR	5493948	IdentifierDecl	PrevPrivState = CurrentPrivState		5493944	0					
ANR	5493949	IdentifierDeclType	priv_state		5493944	0					
ANR	5493950	Identifier	PrevPrivState		5493944	1					
ANR	5493951	AssignmentExpression	PrevPrivState = CurrentPrivState		5493944	2		=			
ANR	5493952	Identifier	CurrentPrivState		5493944	0					
ANR	5493953	Identifier	CurrentPrivState		5493944	1					
ANR	5493954	IfStatement	if ( ( s == PRIV_CONDOR || s == PRIV_ROOT ) && ( CurrentPrivState == PRIV_CONDOR || CurrentPrivState == PRIV_ROOT ) )		5493944	1					
ANR	5493955	Condition	( s == PRIV_CONDOR || s == PRIV_ROOT ) && ( CurrentPrivState == PRIV_CONDOR || CurrentPrivState == PRIV_ROOT )	522:6:14715:14828	5493944	0	True				
ANR	5493956	AndExpression	( s == PRIV_CONDOR || s == PRIV_ROOT ) && ( CurrentPrivState == PRIV_CONDOR || CurrentPrivState == PRIV_ROOT )		5493944	0		&&			
ANR	5493957	OrExpression	s == PRIV_CONDOR || s == PRIV_ROOT		5493944	0		||			
ANR	5493958	EqualityExpression	s == PRIV_CONDOR		5493944	0		==			
ANR	5493959	Identifier	s		5493944	0					
ANR	5493960	Identifier	PRIV_CONDOR		5493944	1					
ANR	5493961	EqualityExpression	s == PRIV_ROOT		5493944	1		==			
ANR	5493962	Identifier	s		5493944	0					
ANR	5493963	Identifier	PRIV_ROOT		5493944	1					
ANR	5493964	OrExpression	CurrentPrivState == PRIV_CONDOR || CurrentPrivState == PRIV_ROOT		5493944	1		||			
ANR	5493965	EqualityExpression	CurrentPrivState == PRIV_CONDOR		5493944	0		==			
ANR	5493966	Identifier	CurrentPrivState		5493944	0					
ANR	5493967	Identifier	PRIV_CONDOR		5493944	1					
ANR	5493968	EqualityExpression	CurrentPrivState == PRIV_ROOT		5493944	1		==			
ANR	5493969	Identifier	CurrentPrivState		5493944	0					
ANR	5493970	Identifier	PRIV_ROOT		5493944	1					
ANR	5493971	CompoundStatement		15:1:539:539	5493944	1					
ANR	5493972	GotoStatement	goto logandreturn ;	525:2:14837:14854	5493944	0	True				
ANR	5493973	Identifier	logandreturn		5493944	0					
ANR	5493974	IfStatement	if ( s == CurrentPrivState )		5493944	2					
ANR	5493975	Condition	s == CurrentPrivState	529:5:14931:14951	5493944	0	True				
ANR	5493976	EqualityExpression	s == CurrentPrivState		5493944	0		==			
ANR	5493977	Identifier	s		5493944	0					
ANR	5493978	Identifier	CurrentPrivState		5493944	1					
ANR	5493979	CompoundStatement		20:28:660:660	5493944	1					
ANR	5493980	GotoStatement	goto logandreturn ;	530:2:14958:14975	5493944	0	True				
ANR	5493981	Identifier	logandreturn		5493944	0					
ANR	5493982	IfStatement	if ( CurrentPrivState == PRIV_USER_FINAL )		5493944	3					
ANR	5493983	Condition	CurrentPrivState == PRIV_USER_FINAL	533:5:14986:15020	5493944	0	True				
ANR	5493984	EqualityExpression	CurrentPrivState == PRIV_USER_FINAL		5493944	0		==			
ANR	5493985	Identifier	CurrentPrivState		5493944	0					
ANR	5493986	Identifier	PRIV_USER_FINAL		5493944	1					
ANR	5493987	CompoundStatement		24:42:729:729	5493944	1					
ANR	5493988	IfStatement	if ( dologging )		5493944	0					
ANR	5493989	Condition	dologging	534:7:15032:15040	5493944	0	True				
ANR	5493990	Identifier	dologging		5493944	0					
ANR	5493991	CompoundStatement		25:19:750:750	5493944	1					
ANR	5493992	ExpressionStatement	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_USER_FINAL\\n"" )"	535:3:15049:15124	5493944	0	True				
ANR	5493993	CallExpression	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_USER_FINAL\\n"" )"		5493944	0					
ANR	5493994	Callee	dprintf		5493944	0					
ANR	5493995	Identifier	dprintf		5493944	0					
ANR	5493996	ArgumentList	D_ALWAYS		5493944	1					
ANR	5493997	Argument	D_ALWAYS		5493944	0					
ANR	5493998	Identifier	D_ALWAYS		5493944	0					
ANR	5493999	Argument	"""warning: attempted switch out of PRIV_USER_FINAL\\n"""		5493944	1					
ANR	5494000	PrimaryExpression	"""warning: attempted switch out of PRIV_USER_FINAL\\n"""		5493944	0					
ANR	5494001	ReturnStatement	return PRIV_USER_FINAL ;	538:2:15132:15154	5493944	1	True				
ANR	5494002	Identifier	PRIV_USER_FINAL		5493944	0					
ANR	5494003	IfStatement	if ( CurrentPrivState == PRIV_CONDOR_FINAL )		5493944	4					
ANR	5494004	Condition	CurrentPrivState == PRIV_CONDOR_FINAL	541:5:15165:15201	5493944	0	True				
ANR	5494005	EqualityExpression	CurrentPrivState == PRIV_CONDOR_FINAL		5493944	0		==			
ANR	5494006	Identifier	CurrentPrivState		5493944	0					
ANR	5494007	Identifier	PRIV_CONDOR_FINAL		5493944	1					
ANR	5494008	CompoundStatement		32:44:910:910	5493944	1					
ANR	5494009	IfStatement	if ( dologging )		5493944	0					
ANR	5494010	Condition	dologging	542:7:15213:15221	5493944	0	True				
ANR	5494011	Identifier	dologging		5493944	0					
ANR	5494012	CompoundStatement		33:19:931:931	5493944	1					
ANR	5494013	ExpressionStatement	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"" )"	543:3:15230:15307	5493944	0	True				
ANR	5494014	CallExpression	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"" )"		5493944	0					
ANR	5494015	Callee	dprintf		5493944	0					
ANR	5494016	Identifier	dprintf		5493944	0					
ANR	5494017	ArgumentList	D_ALWAYS		5493944	1					
ANR	5494018	Argument	D_ALWAYS		5493944	0					
ANR	5494019	Identifier	D_ALWAYS		5493944	0					
ANR	5494020	Argument	"""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"""		5493944	1					
ANR	5494021	PrimaryExpression	"""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"""		5493944	0					
ANR	5494022	ReturnStatement	return PRIV_CONDOR_FINAL ;	546:2:15315:15339	5493944	1	True				
ANR	5494023	Identifier	PRIV_CONDOR_FINAL		5493944	0					
ANR	5494024	ExpressionStatement	CurrentPrivState = s	548:1:15345:15365	5493944	5	True				
ANR	5494025	AssignmentExpression	CurrentPrivState = s		5493944	0		=			
ANR	5494026	Identifier	CurrentPrivState		5493944	0					
ANR	5494027	Identifier	s		5493944	1					
ANR	5494028	IfStatement	if ( can_switch_ids ( ) )		5493944	6					
ANR	5494029	Condition	can_switch_ids ( )	549:5:15372:15387	5493944	0	True				
ANR	5494030	CallExpression	can_switch_ids ( )		5493944	0					
ANR	5494031	Callee	can_switch_ids		5493944	0					
ANR	5494032	Identifier	can_switch_ids		5493944	0					
ANR	5494033	ArgumentList			5493944	1					
ANR	5494034	CompoundStatement		40:23:1096:1096	5493944	1					
ANR	5494035	SwitchStatement	switch ( s )		5493944	0					
ANR	5494036	Condition	s	550:10:15402:15402	5493944	0	True				
ANR	5494037	Identifier	s		5493944	0					
ANR	5494038	CompoundStatement		41:13:1111:1111	5493944	1					
ANR	5494039	Label	case PRIV_ROOT :	551:2:15409:15423	5493944	0	True				
ANR	5494040	Identifier	PRIV_ROOT		5493944	0					
ANR	5494041	Label	case PRIV_CONDOR :	552:2:15427:15443	5493944	1	True				
ANR	5494042	Identifier	PRIV_CONDOR		5493944	0					
ANR	5494043	Label	case PRIV_CONDOR_FINAL :	553:2:15447:15469	5493944	2	True				
ANR	5494044	Identifier	PRIV_CONDOR_FINAL		5493944	0					
ANR	5494045	ExpressionStatement	RevertToSelf ( )	554:3:15474:15488	5493944	3	True				
ANR	5494046	CallExpression	RevertToSelf ( )		5493944	0					
ANR	5494047	Callee	RevertToSelf		5493944	0					
ANR	5494048	Identifier	RevertToSelf		5493944	0					
ANR	5494049	ArgumentList			5493944	1					
ANR	5494050	BreakStatement	break ;	555:3:15493:15498	5493944	4	True				
ANR	5494051	Label	case PRIV_USER :	556:2:15502:15516	5493944	5	True				
ANR	5494052	Identifier	PRIV_USER		5493944	0					
ANR	5494053	Label	case PRIV_USER_FINAL :	557:2:15520:15540	5493944	6	True				
ANR	5494054	Identifier	PRIV_USER_FINAL		5493944	0					
ANR	5494055	IfStatement	if ( dologging )		5493944	7					
ANR	5494056	Condition	dologging	558:8:15550:15558	5493944	0	True				
ANR	5494057	Identifier	dologging		5493944	0					
ANR	5494058	CompoundStatement		49:20:1268:1268	5493944	1					
ANR	5494059	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""TokenCache contents: \\n%s"" , cached_tokens . cacheToString ( ) . Value ( ) )"	559:4:15568:15670	5493944	0	True				
ANR	5494060	CallExpression	"dprintf ( D_FULLDEBUG , ""TokenCache contents: \\n%s"" , cached_tokens . cacheToString ( ) . Value ( ) )"		5493944	0					
ANR	5494061	Callee	dprintf		5493944	0					
ANR	5494062	Identifier	dprintf		5493944	0					
ANR	5494063	ArgumentList	D_FULLDEBUG		5493944	1					
ANR	5494064	Argument	D_FULLDEBUG		5493944	0					
ANR	5494065	Identifier	D_FULLDEBUG		5493944	0					
ANR	5494066	Argument	"""TokenCache contents: \\n%s"""		5493944	1					
ANR	5494067	PrimaryExpression	"""TokenCache contents: \\n%s"""		5493944	0					
ANR	5494068	Argument	cached_tokens . cacheToString ( ) . Value ( )		5493944	2					
ANR	5494069	CallExpression	cached_tokens . cacheToString ( ) . Value ( )		5493944	0					
ANR	5494070	Callee	cached_tokens . cacheToString ( ) . Value		5493944	0					
ANR	5494071	MemberAccess	cached_tokens . cacheToString ( ) . Value		5493944	0					
ANR	5494072	CallExpression	cached_tokens . cacheToString ( )		5493944	0					
ANR	5494073	Callee	cached_tokens . cacheToString		5493944	0					
ANR	5494074	MemberAccess	cached_tokens . cacheToString		5493944	0					
ANR	5494075	Identifier	cached_tokens		5493944	0					
ANR	5494076	Identifier	cacheToString		5493944	1					
ANR	5494077	ArgumentList			5493944	1					
ANR	5494078	Identifier	Value		5493944	1					
ANR	5494079	ArgumentList			5493944	1					
ANR	5494080	IfStatement	if ( CurrUserHandle )		5493944	8					
ANR	5494081	Condition	CurrUserHandle	563:8:15685:15698	5493944	0	True				
ANR	5494082	Identifier	CurrUserHandle		5493944	0					
ANR	5494083	CompoundStatement		54:25:1408:1408	5493944	1					
ANR	5494084	IfStatement	if ( PrevPrivState == PRIV_UNKNOWN )		5493944	0					
ANR	5494085	Condition	PrevPrivState == PRIV_UNKNOWN	564:9:15713:15741	5493944	0	True				
ANR	5494086	EqualityExpression	PrevPrivState == PRIV_UNKNOWN		5493944	0		==			
ANR	5494087	Identifier	PrevPrivState		5493944	0					
ANR	5494088	Identifier	PRIV_UNKNOWN		5493944	1					
ANR	5494089	CompoundStatement		55:41:1451:1451	5493944	1					
ANR	5494090	ExpressionStatement	RevertToSelf ( )	566:5:15817:15831	5493944	0	True				
ANR	5494091	CallExpression	RevertToSelf ( )		5493944	0					
ANR	5494092	Callee	RevertToSelf		5493944	0					
ANR	5494093	Identifier	RevertToSelf		5493944	0					
ANR	5494094	ArgumentList			5493944	1					
ANR	5494095	ExpressionStatement	ImpersonateLoggedOnUser ( CurrUserHandle )	568:4:15843:15882	5493944	1	True				
ANR	5494096	CallExpression	ImpersonateLoggedOnUser ( CurrUserHandle )		5493944	0					
ANR	5494097	Callee	ImpersonateLoggedOnUser		5493944	0					
ANR	5494098	Identifier	ImpersonateLoggedOnUser		5493944	0					
ANR	5494099	ArgumentList	CurrUserHandle		5493944	1					
ANR	5494100	Argument	CurrUserHandle		5493944	0					
ANR	5494101	Identifier	CurrUserHandle		5493944	0					
ANR	5494102	ElseStatement	else		5493944	0					
ANR	5494103	CompoundStatement		60:10:1600:1600	5493944	0					
ANR	5494104	IfStatement	if ( ! UserIdsInited )		5493944	0					
ANR	5494105	Condition	! UserIdsInited	572:9:16039:16053	5493944	0	True				
ANR	5494106	UnaryOperationExpression	! UserIdsInited		5493944	0					
ANR	5494107	UnaryOperator	!		5493944	0					
ANR	5494108	Identifier	UserIdsInited		5493944	1					
ANR	5494109	CompoundStatement		63:26:1762:1762	5493944	1					
ANR	5494110	IfStatement	if ( dologging )		5493944	0					
ANR	5494111	Condition	dologging	573:9:16067:16075	5493944	0	True				
ANR	5494112	Identifier	dologging		5493944	0					
ANR	5494113	CompoundStatement		64:20:1784:1784	5493944	1					
ANR	5494114	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_user_priv() called when UserIds not inited!\\n"" )"	574:6:16086:16156	5493944	0	True				
ANR	5494115	CallExpression	"dprintf ( D_ALWAYS , ""set_user_priv() called when UserIds not inited!\\n"" )"		5493944	0					
ANR	5494116	Callee	dprintf		5493944	0					
ANR	5494117	Identifier	dprintf		5493944	0					
ANR	5494118	ArgumentList	D_ALWAYS		5493944	1					
ANR	5494119	Argument	D_ALWAYS		5493944	0					
ANR	5494120	Identifier	D_ALWAYS		5493944	0					
ANR	5494121	Argument	"""set_user_priv() called when UserIds not inited!\\n"""		5493944	1					
ANR	5494122	PrimaryExpression	"""set_user_priv() called when UserIds not inited!\\n"""		5493944	0					
ANR	5494123	ElseStatement	else		5493944	0					
ANR	5494124	CompoundStatement		67:12:1883:1883	5493944	0					
ANR	5494125	ExpressionStatement	"EXCEPT ( ""set_user_priv() failed!"" )"	578:5:16246:16279	5493944	0	True				
ANR	5494126	CallExpression	"EXCEPT ( ""set_user_priv() failed!"" )"		5493944	0					
ANR	5494127	Callee	EXCEPT		5493944	0					
ANR	5494128	Identifier	EXCEPT		5493944	0					
ANR	5494129	ArgumentList	"""set_user_priv() failed!"""		5493944	1					
ANR	5494130	Argument	"""set_user_priv() failed!"""		5493944	0					
ANR	5494131	PrimaryExpression	"""set_user_priv() failed!"""		5493944	0					
ANR	5494132	BreakStatement	break ;	581:3:16295:16300	5493944	9	True				
ANR	5494133	Label	case PRIV_UNKNOWN :	582:2:16304:16321	5493944	10	True				
ANR	5494134	Identifier	PRIV_UNKNOWN		5493944	0					
ANR	5494135	BreakStatement	break ;	583:3:16349:16354	5493944	11	True				
ANR	5494136	Label	default :	584:2:16358:16365	5493944	12	True				
ANR	5494137	Identifier	default		5493944	0					
ANR	5494138	IfStatement	if ( dologging )		5493944	13					
ANR	5494139	Condition	dologging	585:8:16375:16383	5493944	0	True				
ANR	5494140	Identifier	dologging		5493944	0					
ANR	5494141	CompoundStatement		76:20:2093:2093	5493944	1					
ANR	5494142	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_priv: Unknown priv state %d\\n"" , ( int ) s )"	586:4:16393:16456	5493944	0	True				
ANR	5494143	CallExpression	"dprintf ( D_ALWAYS , ""set_priv: Unknown priv state %d\\n"" , ( int ) s )"		5493944	0					
ANR	5494144	Callee	dprintf		5493944	0					
ANR	5494145	Identifier	dprintf		5493944	0					
ANR	5494146	ArgumentList	D_ALWAYS		5493944	1					
ANR	5494147	Argument	D_ALWAYS		5493944	0					
ANR	5494148	Identifier	D_ALWAYS		5493944	0					
ANR	5494149	Argument	"""set_priv: Unknown priv state %d\\n"""		5493944	1					
ANR	5494150	PrimaryExpression	"""set_priv: Unknown priv state %d\\n"""		5493944	0					
ANR	5494151	Argument	( int ) s		5493944	2					
ANR	5494152	CastExpression	( int ) s		5493944	0					
ANR	5494153	CastTarget	int		5493944	0					
ANR	5494154	Identifier	s		5493944	1					
ANR	5494155	Label	logandreturn :	591:0:16471:16483	5493944	7	True				
ANR	5494156	Identifier	logandreturn		5493944	0					
ANR	5494157	IfStatement	if ( dologging )		5493944	8					
ANR	5494158	Condition	dologging	592:5:16490:16498	5493944	0	True				
ANR	5494159	Identifier	dologging		5493944	0					
ANR	5494160	CompoundStatement		83:16:2207:2207	5493944	1					
ANR	5494161	ExpressionStatement	"log_priv ( PrevPrivState , CurrentPrivState , file , line )"	593:2:16505:16558	5493944	0	True				
ANR	5494162	CallExpression	"log_priv ( PrevPrivState , CurrentPrivState , file , line )"		5493944	0					
ANR	5494163	Callee	log_priv		5493944	0					
ANR	5494164	Identifier	log_priv		5493944	0					
ANR	5494165	ArgumentList	PrevPrivState		5493944	1					
ANR	5494166	Argument	PrevPrivState		5493944	0					
ANR	5494167	Identifier	PrevPrivState		5493944	0					
ANR	5494168	Argument	CurrentPrivState		5493944	1					
ANR	5494169	Identifier	CurrentPrivState		5493944	0					
ANR	5494170	Argument	file		5493944	2					
ANR	5494171	Identifier	file		5493944	0					
ANR	5494172	Argument	line		5493944	3					
ANR	5494173	Identifier	line		5493944	0					
ANR	5494174	ReturnStatement	return PrevPrivState ;	595:1:16564:16584	5493944	9	True				
ANR	5494175	Identifier	PrevPrivState		5493944	0					
ANR	5494176	ReturnType	priv_state		5493944	1					
ANR	5494177	Identifier	_set_priv		5493944	2					
ANR	5494178	ParameterList	"priv_state s , const char * file , int line , int dologging"		5493944	3					
ANR	5494179	Parameter	priv_state s	509:10:14236:14247	5493944	0	True				
ANR	5494180	ParameterType	priv_state		5493944	0					
ANR	5494181	Identifier	s		5493944	1					
ANR	5494182	Parameter	const char * file	509:24:14250:14265	5493944	1	True				
ANR	5494183	ParameterType	const char *		5493944	0					
ANR	5494184	Identifier	file		5493944	1					
ANR	5494185	Parameter	int line	509:42:14268:14275	5493944	2	True				
ANR	5494186	ParameterType	int		5493944	0					
ANR	5494187	Identifier	line		5493944	1					
ANR	5494188	Parameter	int dologging	509:52:14278:14290	5493944	3	True				
ANR	5494189	ParameterType	int		5493944	0					
ANR	5494190	Identifier	dologging		5493944	1					
ANR	5494191	CFGEntryNode	ENTRY		5493944		True				
ANR	5494192	CFGExitNode	EXIT		5493944		True				
ANR	5494193	Symbol	CurrUserHandle		5493944						
ANR	5494194	Symbol	cached_tokens . cacheToString ( ) . Value		5493944						
ANR	5494195	Symbol	line		5493944						
ANR	5494196	Symbol	CurrentPrivState		5493944						
ANR	5494197	Symbol	D_ALWAYS		5493944						
ANR	5494198	Symbol	UserIdsInited		5493944						
ANR	5494199	Symbol	D_FULLDEBUG		5493944						
ANR	5494200	Symbol	PRIV_UNKNOWN		5493944						
ANR	5494201	Symbol	dologging		5493944						
ANR	5494202	Symbol	PRIV_USER_FINAL		5493944						
ANR	5494203	Symbol	s		5493944						
ANR	5494204	Symbol	file		5493944						
ANR	5494205	Symbol	PrevPrivState		5493944						
ANR	5494206	Symbol	can_switch_ids		5493944						
ANR	5494207	Symbol	PRIV_ROOT		5493944						
ANR	5494208	Symbol	PRIV_CONDOR_FINAL		5493944						
ANR	5494209	Symbol	cached_tokens . cacheToString		5493944						
ANR	5494210	Symbol	PRIV_CONDOR		5493944						
ANR	5494211	Symbol	cached_tokens		5493944						
ANR	5494212	Function	get_condor_username	603:0:16845:17899							
ANR	5494213	FunctionDef	get_condor_username ()		5494212	0					
ANR	5494214	CompoundStatement		604:0:16880:17899	5494212	0					
ANR	5494215	IdentifierDeclStatement	HANDLE hProcess = NULL ;	605:1:16883:16905	5494212	0	True				
ANR	5494216	IdentifierDecl	hProcess = NULL		5494212	0					
ANR	5494217	IdentifierDeclType	HANDLE		5494212	0					
ANR	5494218	Identifier	hProcess		5494212	1					
ANR	5494219	AssignmentExpression	hProcess = NULL		5494212	2		=			
ANR	5494220	Identifier	NULL		5494212	0					
ANR	5494221	Identifier	NULL		5494212	1					
ANR	5494222	IdentifierDeclStatement	HANDLE hAccessToken = NULL ;	606:1:16908:16934	5494212	1	True				
ANR	5494223	IdentifierDecl	hAccessToken = NULL		5494212	0					
ANR	5494224	IdentifierDeclType	HANDLE		5494212	0					
ANR	5494225	Identifier	hAccessToken		5494212	1					
ANR	5494226	AssignmentExpression	hAccessToken = NULL		5494212	2		=			
ANR	5494227	Identifier	NULL		5494212	0					
ANR	5494228	Identifier	NULL		5494212	1					
ANR	5494229	IdentifierDeclStatement	UCHAR InfoBuffer [ 1000 ] ;	607:1:16937:16959	5494212	2	True				
ANR	5494230	IdentifierDecl	InfoBuffer [ 1000 ]		5494212	0					
ANR	5494231	IdentifierDeclType	UCHAR [ 1000 ]		5494212	0					
ANR	5494232	Identifier	InfoBuffer		5494212	1					
ANR	5494233	PrimaryExpression	1000		5494212	2					
ANR	5494234	IdentifierDeclStatement	"char szAccountName [ 200 ] , szDomainName [ 200 ] ;"	608:1:16962:17004	5494212	3	True				
ANR	5494235	IdentifierDecl	szAccountName [ 200 ]		5494212	0					
ANR	5494236	IdentifierDeclType	char [ 200 ]		5494212	0					
ANR	5494237	Identifier	szAccountName		5494212	1					
ANR	5494238	PrimaryExpression	200		5494212	2					
ANR	5494239	IdentifierDecl	szDomainName [ 200 ]		5494212	1					
ANR	5494240	IdentifierDeclType	char [ 200 ]		5494212	0					
ANR	5494241	Identifier	szDomainName		5494212	1					
ANR	5494242	PrimaryExpression	200		5494212	2					
ANR	5494243	IdentifierDeclStatement	PTOKEN_USER pTokenUser = ( PTOKEN_USER ) InfoBuffer ;	609:1:17007:17055	5494212	4	True				
ANR	5494244	IdentifierDecl	pTokenUser = ( PTOKEN_USER ) InfoBuffer		5494212	0					
ANR	5494245	IdentifierDeclType	PTOKEN_USER		5494212	0					
ANR	5494246	Identifier	pTokenUser		5494212	1					
ANR	5494247	AssignmentExpression	pTokenUser = ( PTOKEN_USER ) InfoBuffer		5494212	2		=			
ANR	5494248	Identifier	pTokenUser		5494212	0					
ANR	5494249	CastExpression	( PTOKEN_USER ) InfoBuffer		5494212	1					
ANR	5494250	CastTarget	PTOKEN_USER		5494212	0					
ANR	5494251	Identifier	InfoBuffer		5494212	1					
ANR	5494252	IdentifierDeclStatement	"DWORD dwInfoBufferSize , dwAccountSize = 200 , dwDomainSize = 200 ;"	610:1:17058:17120	5494212	5	True				
ANR	5494253	IdentifierDecl	dwInfoBufferSize		5494212	0					
ANR	5494254	IdentifierDeclType	DWORD		5494212	0					
ANR	5494255	Identifier	dwInfoBufferSize		5494212	1					
ANR	5494256	IdentifierDecl	dwAccountSize = 200		5494212	1					
ANR	5494257	IdentifierDeclType	DWORD		5494212	0					
ANR	5494258	Identifier	dwAccountSize		5494212	1					
ANR	5494259	AssignmentExpression	dwAccountSize = 200		5494212	2		=			
ANR	5494260	Identifier	dwAccountSize		5494212	0					
ANR	5494261	PrimaryExpression	200		5494212	1					
ANR	5494262	IdentifierDecl	dwDomainSize = 200		5494212	2					
ANR	5494263	IdentifierDeclType	DWORD		5494212	0					
ANR	5494264	Identifier	dwDomainSize		5494212	1					
ANR	5494265	AssignmentExpression	dwDomainSize = 200		5494212	2		=			
ANR	5494266	Identifier	dwDomainSize		5494212	0					
ANR	5494267	PrimaryExpression	200		5494212	1					
ANR	5494268	IdentifierDeclStatement	SID_NAME_USE snu ;	611:1:17123:17139	5494212	6	True				
ANR	5494269	IdentifierDecl	snu		5494212	0					
ANR	5494270	IdentifierDeclType	SID_NAME_USE		5494212	0					
ANR	5494271	Identifier	snu		5494212	1					
ANR	5494272	IdentifierDeclStatement	int length ;	612:1:17142:17152	5494212	7	True				
ANR	5494273	IdentifierDecl	length		5494212	0					
ANR	5494274	IdentifierDeclType	int		5494212	0					
ANR	5494275	Identifier	length		5494212	1					
ANR	5494276	IfStatement	if ( CondorUserName )		5494212	8					
ANR	5494277	Condition	CondorUserName	614:6:17161:17174	5494212	0	True				
ANR	5494278	Identifier	CondorUserName		5494212	0					
ANR	5494279	ReturnStatement	return CondorUserName ;	615:2:17180:17201	5494212	1	True				
ANR	5494280	Identifier	CondorUserName		5494212	0					
ANR	5494281	ExpressionStatement	hProcess = GetCurrentProcess ( )	617:1:17205:17235	5494212	9	True				
ANR	5494282	AssignmentExpression	hProcess = GetCurrentProcess ( )		5494212	0		=			
ANR	5494283	Identifier	hProcess		5494212	0					
ANR	5494284	CallExpression	GetCurrentProcess ( )		5494212	1					
ANR	5494285	Callee	GetCurrentProcess		5494212	0					
ANR	5494286	Identifier	GetCurrentProcess		5494212	0					
ANR	5494287	ArgumentList			5494212	1					
ANR	5494288	ExpressionStatement	"OpenProcessToken ( hProcess , TOKEN_READ , & hAccessToken )"	619:1:17239:17290	5494212	10	True				
ANR	5494289	CallExpression	"OpenProcessToken ( hProcess , TOKEN_READ , & hAccessToken )"		5494212	0					
ANR	5494290	Callee	OpenProcessToken		5494212	0					
ANR	5494291	Identifier	OpenProcessToken		5494212	0					
ANR	5494292	ArgumentList	hProcess		5494212	1					
ANR	5494293	Argument	hProcess		5494212	0					
ANR	5494294	Identifier	hProcess		5494212	0					
ANR	5494295	Argument	TOKEN_READ		5494212	1					
ANR	5494296	Identifier	TOKEN_READ		5494212	0					
ANR	5494297	Argument	& hAccessToken		5494212	2					
ANR	5494298	UnaryOperationExpression	& hAccessToken		5494212	0					
ANR	5494299	UnaryOperator	&		5494212	0					
ANR	5494300	Identifier	hAccessToken		5494212	1					
ANR	5494301	ExpressionStatement	"GetTokenInformation ( hAccessToken , TokenUser , InfoBuffer , 1000 , & dwInfoBufferSize )"	621:1:17294:17375	5494212	11	True				
ANR	5494302	CallExpression	"GetTokenInformation ( hAccessToken , TokenUser , InfoBuffer , 1000 , & dwInfoBufferSize )"		5494212	0					
ANR	5494303	Callee	GetTokenInformation		5494212	0					
ANR	5494304	Identifier	GetTokenInformation		5494212	0					
ANR	5494305	ArgumentList	hAccessToken		5494212	1					
ANR	5494306	Argument	hAccessToken		5494212	0					
ANR	5494307	Identifier	hAccessToken		5494212	0					
ANR	5494308	Argument	TokenUser		5494212	1					
ANR	5494309	Identifier	TokenUser		5494212	0					
ANR	5494310	Argument	InfoBuffer		5494212	2					
ANR	5494311	Identifier	InfoBuffer		5494212	0					
ANR	5494312	Argument	1000		5494212	3					
ANR	5494313	PrimaryExpression	1000		5494212	0					
ANR	5494314	Argument	& dwInfoBufferSize		5494212	4					
ANR	5494315	UnaryOperationExpression	& dwInfoBufferSize		5494212	0					
ANR	5494316	UnaryOperator	&		5494212	0					
ANR	5494317	Identifier	dwInfoBufferSize		5494212	1					
ANR	5494318	ExpressionStatement	szAccountName [ 0 ] = '\\0'	624:1:17379:17402	5494212	12	True				
ANR	5494319	AssignmentExpression	szAccountName [ 0 ] = '\\0'		5494212	0		=			
ANR	5494320	ArrayIndexing	szAccountName [ 0 ]		5494212	0					
ANR	5494321	Identifier	szAccountName		5494212	0					
ANR	5494322	PrimaryExpression	0		5494212	1					
ANR	5494323	PrimaryExpression	'\\0'		5494212	1					
ANR	5494324	ExpressionStatement	szDomainName [ 0 ] = '\\0'	625:1:17405:17427	5494212	13	True				
ANR	5494325	AssignmentExpression	szDomainName [ 0 ] = '\\0'		5494212	0		=			
ANR	5494326	ArrayIndexing	szDomainName [ 0 ]		5494212	0					
ANR	5494327	Identifier	szDomainName		5494212	0					
ANR	5494328	PrimaryExpression	0		5494212	1					
ANR	5494329	PrimaryExpression	'\\0'		5494212	1					
ANR	5494330	ExpressionStatement	"LookupAccountSid ( NULL , pTokenUser -> User . Sid , szAccountName , & dwAccountSize , szDomainName , & dwDomainSize , & snu )"	626:1:17430:17541	5494212	14	True				
ANR	5494331	CallExpression	"LookupAccountSid ( NULL , pTokenUser -> User . Sid , szAccountName , & dwAccountSize , szDomainName , & dwDomainSize , & snu )"		5494212	0					
ANR	5494332	Callee	LookupAccountSid		5494212	0					
ANR	5494333	Identifier	LookupAccountSid		5494212	0					
ANR	5494334	ArgumentList	NULL		5494212	1					
ANR	5494335	Argument	NULL		5494212	0					
ANR	5494336	Identifier	NULL		5494212	0					
ANR	5494337	Argument	pTokenUser -> User . Sid		5494212	1					
ANR	5494338	MemberAccess	pTokenUser -> User . Sid		5494212	0					
ANR	5494339	PtrMemberAccess	pTokenUser -> User		5494212	0					
ANR	5494340	Identifier	pTokenUser		5494212	0					
ANR	5494341	Identifier	User		5494212	1					
ANR	5494342	Identifier	Sid		5494212	1					
ANR	5494343	Argument	szAccountName		5494212	2					
ANR	5494344	Identifier	szAccountName		5494212	0					
ANR	5494345	Argument	& dwAccountSize		5494212	3					
ANR	5494346	UnaryOperationExpression	& dwAccountSize		5494212	0					
ANR	5494347	UnaryOperator	&		5494212	0					
ANR	5494348	Identifier	dwAccountSize		5494212	1					
ANR	5494349	Argument	szDomainName		5494212	4					
ANR	5494350	Identifier	szDomainName		5494212	0					
ANR	5494351	Argument	& dwDomainSize		5494212	5					
ANR	5494352	UnaryOperationExpression	& dwDomainSize		5494212	0					
ANR	5494353	UnaryOperator	&		5494212	0					
ANR	5494354	Identifier	dwDomainSize		5494212	1					
ANR	5494355	Argument	& snu		5494212	6					
ANR	5494356	UnaryOperationExpression	& snu		5494212	0					
ANR	5494357	UnaryOperator	&		5494212	0					
ANR	5494358	Identifier	snu		5494212	1					
ANR	5494359	ExpressionStatement	length = strlen ( szAccountName ) + strlen ( szDomainName ) + 4	629:1:17545:17602	5494212	15	True				
ANR	5494360	AssignmentExpression	length = strlen ( szAccountName ) + strlen ( szDomainName ) + 4		5494212	0		=			
ANR	5494361	Identifier	length		5494212	0					
ANR	5494362	AdditiveExpression	strlen ( szAccountName ) + strlen ( szDomainName ) + 4		5494212	1		+			
ANR	5494363	CallExpression	strlen ( szAccountName )		5494212	0					
ANR	5494364	Callee	strlen		5494212	0					
ANR	5494365	Identifier	strlen		5494212	0					
ANR	5494366	ArgumentList	szAccountName		5494212	1					
ANR	5494367	Argument	szAccountName		5494212	0					
ANR	5494368	Identifier	szAccountName		5494212	0					
ANR	5494369	AdditiveExpression	strlen ( szDomainName ) + 4		5494212	1		+			
ANR	5494370	CallExpression	strlen ( szDomainName )		5494212	0					
ANR	5494371	Callee	strlen		5494212	0					
ANR	5494372	Identifier	strlen		5494212	0					
ANR	5494373	ArgumentList	szDomainName		5494212	1					
ANR	5494374	Argument	szDomainName		5494212	0					
ANR	5494375	Identifier	szDomainName		5494212	0					
ANR	5494376	PrimaryExpression	4		5494212	1					
ANR	5494377	ExpressionStatement	CondorUserName = ( char * ) malloc ( length )	630:1:17605:17645	5494212	16	True				
ANR	5494378	AssignmentExpression	CondorUserName = ( char * ) malloc ( length )		5494212	0		=			
ANR	5494379	Identifier	CondorUserName		5494212	0					
ANR	5494380	CastExpression	( char * ) malloc ( length )		5494212	1					
ANR	5494381	CastTarget	char *		5494212	0					
ANR	5494382	CallExpression	malloc ( length )		5494212	1					
ANR	5494383	Callee	malloc		5494212	0					
ANR	5494384	Identifier	malloc		5494212	0					
ANR	5494385	ArgumentList	length		5494212	1					
ANR	5494386	Argument	length		5494212	0					
ANR	5494387	Identifier	length		5494212	0					
ANR	5494388	IfStatement	if ( CondorUserName == NULL )		5494212	17					
ANR	5494389	Condition	CondorUserName == NULL	631:5:17652:17673	5494212	0	True				
ANR	5494390	EqualityExpression	CondorUserName == NULL		5494212	0		==			
ANR	5494391	Identifier	CondorUserName		5494212	0					
ANR	5494392	Identifier	NULL		5494212	1					
ANR	5494393	CompoundStatement		28:29:795:795	5494212	1					
ANR	5494394	ExpressionStatement	"EXCEPT ( ""Out of memory. Aborting."" )"	632:2:17680:17714	5494212	0	True				
ANR	5494395	CallExpression	"EXCEPT ( ""Out of memory. Aborting."" )"		5494212	0					
ANR	5494396	Callee	EXCEPT		5494212	0					
ANR	5494397	Identifier	EXCEPT		5494212	0					
ANR	5494398	ArgumentList	"""Out of memory. Aborting."""		5494212	1					
ANR	5494399	Argument	"""Out of memory. Aborting."""		5494212	0					
ANR	5494400	PrimaryExpression	"""Out of memory. Aborting."""		5494212	0					
ANR	5494401	ExpressionStatement	"sprintf ( CondorUserName , ""%s/%s"" , szDomainName , szAccountName )"	634:1:17720:17779	5494212	18	True				
ANR	5494402	CallExpression	"sprintf ( CondorUserName , ""%s/%s"" , szDomainName , szAccountName )"		5494212	0					
ANR	5494403	Callee	sprintf		5494212	0					
ANR	5494404	Identifier	sprintf		5494212	0					
ANR	5494405	ArgumentList	CondorUserName		5494212	1					
ANR	5494406	Argument	CondorUserName		5494212	0					
ANR	5494407	Identifier	CondorUserName		5494212	0					
ANR	5494408	Argument	"""%s/%s"""		5494212	1					
ANR	5494409	PrimaryExpression	"""%s/%s"""		5494212	0					
ANR	5494410	Argument	szDomainName		5494212	2					
ANR	5494411	Identifier	szDomainName		5494212	0					
ANR	5494412	Argument	szAccountName		5494212	3					
ANR	5494413	Identifier	szAccountName		5494212	0					
ANR	5494414	IfStatement	if ( hProcess )		5494212	19					
ANR	5494415	Condition	hProcess	636:6:17788:17795	5494212	0	True				
ANR	5494416	Identifier	hProcess		5494212	0					
ANR	5494417	ExpressionStatement	CloseHandle ( hProcess )	637:2:17801:17822	5494212	1	True				
ANR	5494418	CallExpression	CloseHandle ( hProcess )		5494212	0					
ANR	5494419	Callee	CloseHandle		5494212	0					
ANR	5494420	Identifier	CloseHandle		5494212	0					
ANR	5494421	ArgumentList	hProcess		5494212	1					
ANR	5494422	Argument	hProcess		5494212	0					
ANR	5494423	Identifier	hProcess		5494212	0					
ANR	5494424	IfStatement	if ( hAccessToken )		5494212	20					
ANR	5494425	Condition	hAccessToken	638:6:17830:17841	5494212	0	True				
ANR	5494426	Identifier	hAccessToken		5494212	0					
ANR	5494427	ExpressionStatement	CloseHandle ( hAccessToken )	639:2:17847:17872	5494212	1	True				
ANR	5494428	CallExpression	CloseHandle ( hAccessToken )		5494212	0					
ANR	5494429	Callee	CloseHandle		5494212	0					
ANR	5494430	Identifier	CloseHandle		5494212	0					
ANR	5494431	ArgumentList	hAccessToken		5494212	1					
ANR	5494432	Argument	hAccessToken		5494212	0					
ANR	5494433	Identifier	hAccessToken		5494212	0					
ANR	5494434	ReturnStatement	return CondorUserName ;	641:1:17876:17897	5494212	21	True				
ANR	5494435	Identifier	CondorUserName		5494212	0					
ANR	5494436	ReturnType	const char *		5494212	1					
ANR	5494437	Identifier	get_condor_username		5494212	2					
ANR	5494438	ParameterList			5494212	3					
ANR	5494439	CFGEntryNode	ENTRY		5494212		True				
ANR	5494440	CFGExitNode	EXIT		5494212		True				
ANR	5494441	Symbol	hAccessToken		5494212						
ANR	5494442	Symbol	szDomainName		5494212						
ANR	5494443	Symbol	dwInfoBufferSize		5494212						
ANR	5494444	Symbol	TOKEN_READ		5494212						
ANR	5494445	Symbol	InfoBuffer		5494212						
ANR	5494446	Symbol	strlen		5494212						
ANR	5494447	Symbol	* szDomainName		5494212						
ANR	5494448	Symbol	& dwInfoBufferSize		5494212						
ANR	5494449	Symbol	& dwAccountSize		5494212						
ANR	5494450	Symbol	pTokenUser		5494212						
ANR	5494451	Symbol	hProcess		5494212						
ANR	5494452	Symbol	& hAccessToken		5494212						
ANR	5494453	Symbol	malloc		5494212						
ANR	5494454	Symbol	NULL		5494212						
ANR	5494455	Symbol	TokenUser		5494212						
ANR	5494456	Symbol	& snu		5494212						
ANR	5494457	Symbol	length		5494212						
ANR	5494458	Symbol	GetCurrentProcess		5494212						
ANR	5494459	Symbol	* pTokenUser		5494212						
ANR	5494460	Symbol	CondorUserName		5494212						
ANR	5494461	Symbol	dwAccountSize		5494212						
ANR	5494462	Symbol	pTokenUser -> User . Sid		5494212						
ANR	5494463	Symbol	dwDomainSize		5494212						
ANR	5494464	Symbol	szAccountName		5494212						
ANR	5494465	Symbol	snu		5494212						
ANR	5494466	Symbol	pTokenUser -> User		5494212						
ANR	5494467	Symbol	* szAccountName		5494212						
ANR	5494468	Symbol	& dwDomainSize		5494212						
ANR	5494469	Function	is_root	646:0:17929:18193							
ANR	5494470	FunctionDef	is_root ()		5494469	0					
ANR	5494471	CompoundStatement		648:0:17950:18193	5494469	0					
ANR	5494472	IdentifierDeclStatement	int root = 0 ;	649:1:17953:17965	5494469	0	True				
ANR	5494473	IdentifierDecl	root = 0		5494469	0					
ANR	5494474	IdentifierDeclType	int		5494469	0					
ANR	5494475	Identifier	root		5494469	1					
ANR	5494476	AssignmentExpression	root = 0		5494469	2		=			
ANR	5494477	Identifier	root		5494469	0					
ANR	5494478	PrimaryExpression	0		5494469	1					
ANR	5494479	IdentifierDeclStatement	char * user = my_username ( 0 ) ;	650:1:17968:17997	5494469	1	True				
ANR	5494480	IdentifierDecl	* user = my_username ( 0 )		5494469	0					
ANR	5494481	IdentifierDeclType	char *		5494469	0					
ANR	5494482	Identifier	user		5494469	1					
ANR	5494483	AssignmentExpression	* user = my_username ( 0 )		5494469	2		=			
ANR	5494484	Identifier	user		5494469	0					
ANR	5494485	CallExpression	my_username ( 0 )		5494469	1					
ANR	5494486	Callee	my_username		5494469	0					
ANR	5494487	Identifier	my_username		5494469	0					
ANR	5494488	ArgumentList	0		5494469	1					
ANR	5494489	Argument	0		5494469	0					
ANR	5494490	PrimaryExpression	0		5494469	0					
ANR	5494491	IfStatement	if ( ! user )		5494469	2					
ANR	5494492	Condition	! user	651:5:18004:18009	5494469	0	True				
ANR	5494493	UnaryOperationExpression	! user		5494469	0					
ANR	5494494	UnaryOperator	!		5494469	0					
ANR	5494495	Identifier	user		5494469	1					
ANR	5494496	CompoundStatement		4:14:62:62	5494469	1					
ANR	5494497	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR in is_root(): my_username() returned NULL\\n"" )"	652:2:18017:18095	5494469	0	True				
ANR	5494498	CallExpression	"dprintf ( D_ALWAYS , ""ERROR in is_root(): my_username() returned NULL\\n"" )"		5494469	0					
ANR	5494499	Callee	dprintf		5494469	0					
ANR	5494500	Identifier	dprintf		5494469	0					
ANR	5494501	ArgumentList	D_ALWAYS		5494469	1					
ANR	5494502	Argument	D_ALWAYS		5494469	0					
ANR	5494503	Identifier	D_ALWAYS		5494469	0					
ANR	5494504	Argument	"""ERROR in is_root(): my_username() returned NULL\\n"""		5494469	1					
ANR	5494505	PrimaryExpression	"""ERROR in is_root(): my_username() returned NULL\\n"""		5494469	0					
ANR	5494506	ReturnStatement	return 0 ;	654:2:18099:18107	5494469	1	True				
ANR	5494507	PrimaryExpression	0		5494469	0					
ANR	5494508	IfStatement	"if ( ! strcasecmp ( user , ""SYSTEM"" ) )"		5494469	3					
ANR	5494509	Condition	"! strcasecmp ( user , ""SYSTEM"" )"	656:5:18117:18143	5494469	0	True				
ANR	5494510	UnaryOperationExpression	"! strcasecmp ( user , ""SYSTEM"" )"		5494469	0					
ANR	5494511	UnaryOperator	!		5494469	0					
ANR	5494512	CallExpression	"strcasecmp ( user , ""SYSTEM"" )"		5494469	1					
ANR	5494513	Callee	strcasecmp		5494469	0					
ANR	5494514	Identifier	strcasecmp		5494469	0					
ANR	5494515	ArgumentList	user		5494469	1					
ANR	5494516	Argument	user		5494469	0					
ANR	5494517	Identifier	user		5494469	0					
ANR	5494518	Argument	"""SYSTEM"""		5494469	1					
ANR	5494519	PrimaryExpression	"""SYSTEM"""		5494469	0					
ANR	5494520	CompoundStatement		9:35:196:196	5494469	1					
ANR	5494521	ExpressionStatement	root = 1	657:2:18151:18159	5494469	0	True				
ANR	5494522	AssignmentExpression	root = 1		5494469	0		=			
ANR	5494523	Identifier	root		5494469	0					
ANR	5494524	PrimaryExpression	1		5494469	1					
ANR	5494525	ExpressionStatement	free ( user )	659:1:18165:18177	5494469	4	True				
ANR	5494526	CallExpression	free ( user )		5494469	0					
ANR	5494527	Callee	free		5494469	0					
ANR	5494528	Identifier	free		5494469	0					
ANR	5494529	ArgumentList	user		5494469	1					
ANR	5494530	Argument	user		5494469	0					
ANR	5494531	Identifier	user		5494469	0					
ANR	5494532	ReturnStatement	return root ;	660:1:18180:18191	5494469	5	True				
ANR	5494533	Identifier	root		5494469	0					
ANR	5494534	ReturnType	int		5494469	1					
ANR	5494535	Identifier	is_root		5494469	2					
ANR	5494536	ParameterList			5494469	3					
ANR	5494537	CFGEntryNode	ENTRY		5494469		True				
ANR	5494538	CFGExitNode	EXIT		5494469		True				
ANR	5494539	Symbol	root		5494469						
ANR	5494540	Symbol	D_ALWAYS		5494469						
ANR	5494541	Symbol	my_username		5494469						
ANR	5494542	Symbol	strcasecmp		5494469						
ANR	5494543	Symbol	user		5494469						
ANR	5494544	Function	get_real_username	664:0:18197:18323							
ANR	5494545	FunctionDef	get_real_username ()		5494544	0					
ANR	5494546	CompoundStatement		666:0:18235:18323	5494544	0					
ANR	5494547	IfStatement	if ( ! RealUserName )		5494544	0					
ANR	5494548	Condition	! RealUserName	667:5:18242:18255	5494544	0	True				
ANR	5494549	UnaryOperationExpression	! RealUserName		5494544	0					
ANR	5494550	UnaryOperator	!		5494544	0					
ANR	5494551	Identifier	RealUserName		5494544	1					
ANR	5494552	CompoundStatement		2:22:23:23	5494544	1					
ANR	5494553	ExpressionStatement	"RealUserName = strdup ( ""system"" )"	668:2:18263:18296	5494544	0	True				
ANR	5494554	AssignmentExpression	"RealUserName = strdup ( ""system"" )"		5494544	0		=			
ANR	5494555	Identifier	RealUserName		5494544	0					
ANR	5494556	CallExpression	"strdup ( ""system"" )"		5494544	1					
ANR	5494557	Callee	strdup		5494544	0					
ANR	5494558	Identifier	strdup		5494544	0					
ANR	5494559	ArgumentList	"""system"""		5494544	1					
ANR	5494560	Argument	"""system"""		5494544	0					
ANR	5494561	PrimaryExpression	"""system"""		5494544	0					
ANR	5494562	ReturnStatement	return RealUserName ;	670:1:18302:18321	5494544	1	True				
ANR	5494563	Identifier	RealUserName		5494544	0					
ANR	5494564	ReturnType	const char *		5494544	1					
ANR	5494565	Identifier	get_real_username		5494544	2					
ANR	5494566	ParameterList			5494544	3					
ANR	5494567	CFGEntryNode	ENTRY		5494544		True				
ANR	5494568	CFGExitNode	EXIT		5494544		True				
ANR	5494569	Symbol	strdup		5494544						
ANR	5494570	Symbol	RealUserName		5494544						
ANR	5494571	Function	clear_passwd_cache	673:0:18326:18375							
ANR	5494572	FunctionDef	clear_passwd_cache ()		5494571	0					
ANR	5494573	CompoundStatement		674:21:18352:18375	5494571	0					
ANR	5494574	ReturnType	void		5494571	1					
ANR	5494575	Identifier	clear_passwd_cache		5494571	2					
ANR	5494576	ParameterList			5494571	3					
ANR	5494577	CFGEntryNode	ENTRY		5494571		True				
ANR	5494578	CFGExitNode	EXIT		5494571		True				
ANR	5494579	Function	delete_passwd_cache	678:0:18378:18428							
ANR	5494580	FunctionDef	delete_passwd_cache ()		5494579	0					
ANR	5494581	CompoundStatement		679:22:18405:18428	5494579	0					
ANR	5494582	ReturnType	void		5494579	1					
ANR	5494583	Identifier	delete_passwd_cache		5494579	2					
ANR	5494584	ParameterList			5494579	3					
ANR	5494585	CFGEntryNode	ENTRY		5494579		True				
ANR	5494586	CFGExitNode	EXIT		5494579		True				
ANR	5494587	DeclStmt									
ANR	5494588	Decl							uid_t	uid_t	CondorUid
ANR	5494589	Decl							uid_t	uid_t	UserUid
ANR	5494590	Decl							uid_t	uid_t	RealCondorUid
ANR	5494591	Decl							uid_t	uid_t	OwnerUid
ANR	5494592	DeclStmt									
ANR	5494593	Decl							gid_t	gid_t	CondorGid
ANR	5494594	Decl							gid_t	gid_t	UserGid
ANR	5494595	Decl							gid_t	gid_t	RealCondorGid
ANR	5494596	Decl							gid_t	gid_t	OwnerGid
ANR	5494597	DeclStmt									
ANR	5494598	Decl							int	int	CondorIdsInited
ANR	5494599	DeclStmt									
ANR	5494600	Decl							char	char *	UserName
ANR	5494601	DeclStmt									
ANR	5494602	Decl							char	char *	OwnerName
ANR	5494603	DeclStmt									
ANR	5494604	Decl							int	int ( )	set_condor_euid
ANR	5494605	DeclStmt									
ANR	5494606	Decl							int	int ( )	set_condor_egid
ANR	5494607	DeclStmt									
ANR	5494608	Decl							int	int ( )	set_user_euid
ANR	5494609	DeclStmt									
ANR	5494610	Decl							int	int ( )	set_user_egid
ANR	5494611	DeclStmt									
ANR	5494612	Decl							int	int ( )	set_owner_euid
ANR	5494613	DeclStmt									
ANR	5494614	Decl							int	int ( )	set_owner_egid
ANR	5494615	DeclStmt									
ANR	5494616	Decl							int	int ( )	set_user_ruid
ANR	5494617	DeclStmt									
ANR	5494618	Decl							int	int ( )	set_user_rgid
ANR	5494619	DeclStmt									
ANR	5494620	Decl							int	int ( )	set_root_euid
ANR	5494621	DeclStmt									
ANR	5494622	Decl							int	int ( )	set_root_egid
ANR	5494623	DeclStmt									
ANR	5494624	Decl							int	int ( )	set_condor_ruid
ANR	5494625	DeclStmt									
ANR	5494626	Decl							int	int ( )	set_condor_rgid
ANR	5494627	DeclStmt									
ANR	5494628	Decl							passwd_cache	passwd_cache *	pcache_ptr
ANR	5494629	Function	pcache	746:0:20194:20311							
ANR	5494630	FunctionDef	pcache ()		5494629	0					
ANR	5494631	CompoundStatement		747:13:20222:20311	5494629	0					
ANR	5494632	IfStatement	if ( pcache_ptr == NULL )		5494629	0					
ANR	5494633	Condition	pcache_ptr == NULL	748:6:20230:20247	5494629	0	True				
ANR	5494634	EqualityExpression	pcache_ptr == NULL		5494629	0		==			
ANR	5494635	Identifier	pcache_ptr		5494629	0					
ANR	5494636	Identifier	NULL		5494629	1					
ANR	5494637	CompoundStatement		2:27:28:28	5494629	1					
ANR	5494638	ExpressionStatement	pcache_ptr = new passwd_cache ( )	749:2:20255:20286	5494629	0	True				
ANR	5494639	AssignmentExpression	pcache_ptr = new passwd_cache ( )		5494629	0		=			
ANR	5494640	Identifier	pcache_ptr		5494629	0					
ANR	5494641	UnaryExpression	new passwd_cache ( )		5494629	1					
ANR	5494642	ReturnStatement	return pcache_ptr ;	751:1:20292:20309	5494629	1	True				
ANR	5494643	Identifier	pcache_ptr		5494629	0					
ANR	5494644	ReturnType	passwd_cache *		5494629	1					
ANR	5494645	Identifier	pcache		5494629	2					
ANR	5494646	ParameterList			5494629	3					
ANR	5494647	CFGEntryNode	ENTRY		5494629		True				
ANR	5494648	CFGExitNode	EXIT		5494629		True				
ANR	5494649	Symbol	NULL		5494629						
ANR	5494650	Symbol	pcache_ptr		5494629						
ANR	5494651	Function	clear_passwd_cache	754:0:20314:20362							
ANR	5494652	FunctionDef	clear_passwd_cache ()		5494651	0					
ANR	5494653	CompoundStatement		755:21:20340:20362	5494651	0					
ANR	5494654	ExpressionStatement	pcache ( ) -> reset ( )	756:1:20343:20360	5494651	0	True				
ANR	5494655	CallExpression	pcache ( ) -> reset ( )		5494651	0					
ANR	5494656	Callee	pcache ( ) -> reset		5494651	0					
ANR	5494657	PtrMemberAccess	pcache ( ) -> reset		5494651	0					
ANR	5494658	CallExpression	pcache ( )		5494651	0					
ANR	5494659	Callee	pcache		5494651	0					
ANR	5494660	Identifier	pcache		5494651	0					
ANR	5494661	ArgumentList			5494651	1					
ANR	5494662	Identifier	reset		5494651	1					
ANR	5494663	ArgumentList			5494651	1					
ANR	5494664	ReturnType	void		5494651	1					
ANR	5494665	Identifier	clear_passwd_cache		5494651	2					
ANR	5494666	ParameterList			5494651	3					
ANR	5494667	CFGEntryNode	ENTRY		5494651		True				
ANR	5494668	CFGExitNode	EXIT		5494651		True				
ANR	5494669	Symbol	pcache		5494651						
ANR	5494670	Function	delete_passwd_cache	759:0:20365:20434							
ANR	5494671	FunctionDef	delete_passwd_cache ()		5494670	0					
ANR	5494672	CompoundStatement		760:22:20392:20434	5494670	0					
ANR	5494673	Statement	delete	761:1:20395:20400	5494670	0	True				
ANR	5494674	ExpressionStatement	pcache_ptr	761:8:20402:20412	5494670	1	True				
ANR	5494675	Identifier	pcache_ptr		5494670	0					
ANR	5494676	ExpressionStatement	pcache_ptr = NULL	762:1:20415:20432	5494670	2	True				
ANR	5494677	AssignmentExpression	pcache_ptr = NULL		5494670	0		=			
ANR	5494678	Identifier	pcache_ptr		5494670	0					
ANR	5494679	Identifier	NULL		5494670	1					
ANR	5494680	ReturnType	void		5494670	1					
ANR	5494681	Identifier	delete_passwd_cache		5494670	2					
ANR	5494682	ParameterList			5494670	3					
ANR	5494683	CFGEntryNode	ENTRY		5494670		True				
ANR	5494684	CFGExitNode	EXIT		5494670		True				
ANR	5494685	Symbol	NULL		5494670						
ANR	5494686	Symbol	pcache_ptr		5494670						
ANR	5494687	Function	init_condor_ids	765:0:20437:25139							
ANR	5494688	FunctionDef	init_condor_ids ()		5494687	0					
ANR	5494689	CompoundStatement		767:0:20460:25139	5494687	0					
ANR	5494690	IdentifierDeclStatement	int scm ;	768:1:20463:20470	5494687	0	True				
ANR	5494691	IdentifierDecl	scm		5494687	0					
ANR	5494692	IdentifierDeclType	int		5494687	0					
ANR	5494693	Identifier	scm		5494687	1					
ANR	5494694	IdentifierDeclStatement	bool result ;	769:1:20473:20484	5494687	1	True				
ANR	5494695	IdentifierDecl	result		5494687	0					
ANR	5494696	IdentifierDeclType	bool		5494687	0					
ANR	5494697	Identifier	result		5494687	1					
ANR	5494698	IdentifierDeclStatement	char * env_val = NULL ;	770:1:20487:20507	5494687	2	True				
ANR	5494699	IdentifierDecl	* env_val = NULL		5494687	0					
ANR	5494700	IdentifierDeclType	char *		5494687	0					
ANR	5494701	Identifier	env_val		5494687	1					
ANR	5494702	AssignmentExpression	* env_val = NULL		5494687	2		=			
ANR	5494703	Identifier	NULL		5494687	0					
ANR	5494704	Identifier	NULL		5494687	1					
ANR	5494705	IdentifierDeclStatement	char * config_val = NULL ;	771:1:20510:20533	5494687	3	True				
ANR	5494706	IdentifierDecl	* config_val = NULL		5494687	0					
ANR	5494707	IdentifierDeclType	char *		5494687	0					
ANR	5494708	Identifier	config_val		5494687	1					
ANR	5494709	AssignmentExpression	* config_val = NULL		5494687	2		=			
ANR	5494710	Identifier	NULL		5494687	0					
ANR	5494711	Identifier	NULL		5494687	1					
ANR	5494712	IdentifierDeclStatement	char * val = NULL ;	772:1:20536:20552	5494687	4	True				
ANR	5494713	IdentifierDecl	* val = NULL		5494687	0					
ANR	5494714	IdentifierDeclType	char *		5494687	0					
ANR	5494715	Identifier	val		5494687	1					
ANR	5494716	AssignmentExpression	* val = NULL		5494687	2		=			
ANR	5494717	Identifier	NULL		5494687	0					
ANR	5494718	Identifier	NULL		5494687	1					
ANR	5494719	IdentifierDeclStatement	uid_t envCondorUid = INT_MAX ;	773:1:20555:20583	5494687	5	True				
ANR	5494720	IdentifierDecl	envCondorUid = INT_MAX		5494687	0					
ANR	5494721	IdentifierDeclType	uid_t		5494687	0					
ANR	5494722	Identifier	envCondorUid		5494687	1					
ANR	5494723	AssignmentExpression	envCondorUid = INT_MAX		5494687	2		=			
ANR	5494724	Identifier	INT_MAX		5494687	0					
ANR	5494725	Identifier	INT_MAX		5494687	1					
ANR	5494726	IdentifierDeclStatement	gid_t envCondorGid = INT_MAX ;	774:1:20586:20614	5494687	6	True				
ANR	5494727	IdentifierDecl	envCondorGid = INT_MAX		5494687	0					
ANR	5494728	IdentifierDeclType	gid_t		5494687	0					
ANR	5494729	Identifier	envCondorGid		5494687	1					
ANR	5494730	AssignmentExpression	envCondorGid = INT_MAX		5494687	2		=			
ANR	5494731	Identifier	INT_MAX		5494687	0					
ANR	5494732	Identifier	INT_MAX		5494687	1					
ANR	5494733	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )	781:1:20866:20913	5494687	7	True				
ANR	5494734	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )		5494687	0		=			
ANR	5494735	Identifier	scm		5494687	0					
ANR	5494736	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )		5494687	1					
ANR	5494737	Callee	SetSyscalls		5494687	0					
ANR	5494738	Identifier	SetSyscalls		5494687	0					
ANR	5494739	ArgumentList	SYS_LOCAL | SYS_UNRECORDED		5494687	1					
ANR	5494740	Argument	SYS_LOCAL | SYS_UNRECORDED		5494687	0					
ANR	5494741	InclusiveOrExpression	SYS_LOCAL | SYS_UNRECORDED		5494687	0		|			
ANR	5494742	Identifier	SYS_LOCAL		5494687	0					
ANR	5494743	Identifier	SYS_UNRECORDED		5494687	1					
ANR	5494744	IdentifierDeclStatement	uid_t MyUid = get_my_uid ( ) ;	783:1:20917:20943	5494687	8	True				
ANR	5494745	IdentifierDecl	MyUid = get_my_uid ( )		5494687	0					
ANR	5494746	IdentifierDeclType	uid_t		5494687	0					
ANR	5494747	Identifier	MyUid		5494687	1					
ANR	5494748	AssignmentExpression	MyUid = get_my_uid ( )		5494687	2		=			
ANR	5494749	Identifier	MyUid		5494687	0					
ANR	5494750	CallExpression	get_my_uid ( )		5494687	1					
ANR	5494751	Callee	get_my_uid		5494687	0					
ANR	5494752	Identifier	get_my_uid		5494687	0					
ANR	5494753	ArgumentList			5494687	1					
ANR	5494754	IdentifierDeclStatement	gid_t MyGid = get_my_gid ( ) ;	784:1:20946:20972	5494687	9	True				
ANR	5494755	IdentifierDecl	MyGid = get_my_gid ( )		5494687	0					
ANR	5494756	IdentifierDeclType	gid_t		5494687	0					
ANR	5494757	Identifier	MyGid		5494687	1					
ANR	5494758	AssignmentExpression	MyGid = get_my_gid ( )		5494687	2		=			
ANR	5494759	Identifier	MyGid		5494687	0					
ANR	5494760	CallExpression	get_my_gid ( )		5494687	1					
ANR	5494761	Callee	get_my_gid		5494687	0					
ANR	5494762	Identifier	get_my_gid		5494687	0					
ANR	5494763	ArgumentList			5494687	1					
ANR	5494764	ExpressionStatement	RealCondorUid = INT_MAX	788:1:21069:21092	5494687	10	True				
ANR	5494765	AssignmentExpression	RealCondorUid = INT_MAX		5494687	0		=			
ANR	5494766	Identifier	RealCondorUid		5494687	0					
ANR	5494767	Identifier	INT_MAX		5494687	1					
ANR	5494768	ExpressionStatement	RealCondorGid = INT_MAX	789:1:21095:21118	5494687	11	True				
ANR	5494769	AssignmentExpression	RealCondorGid = INT_MAX		5494687	0		=			
ANR	5494770	Identifier	RealCondorGid		5494687	0					
ANR	5494771	Identifier	INT_MAX		5494687	1					
ANR	5494772	ExpressionStatement	"pcache ( ) -> get_user_uid ( myDistro -> Get ( ) , RealCondorUid )"	790:1:21121:21177	5494687	12	True				
ANR	5494773	CallExpression	"pcache ( ) -> get_user_uid ( myDistro -> Get ( ) , RealCondorUid )"		5494687	0					
ANR	5494774	Callee	pcache ( ) -> get_user_uid		5494687	0					
ANR	5494775	PtrMemberAccess	pcache ( ) -> get_user_uid		5494687	0					
ANR	5494776	CallExpression	pcache ( )		5494687	0					
ANR	5494777	Callee	pcache		5494687	0					
ANR	5494778	Identifier	pcache		5494687	0					
ANR	5494779	ArgumentList			5494687	1					
ANR	5494780	Identifier	get_user_uid		5494687	1					
ANR	5494781	ArgumentList	myDistro -> Get ( )		5494687	1					
ANR	5494782	Argument	myDistro -> Get ( )		5494687	0					
ANR	5494783	CallExpression	myDistro -> Get ( )		5494687	0					
ANR	5494784	Callee	myDistro -> Get		5494687	0					
ANR	5494785	PtrMemberAccess	myDistro -> Get		5494687	0					
ANR	5494786	Identifier	myDistro		5494687	0					
ANR	5494787	Identifier	Get		5494687	1					
ANR	5494788	ArgumentList			5494687	1					
ANR	5494789	Argument	RealCondorUid		5494687	1					
ANR	5494790	Identifier	RealCondorUid		5494687	0					
ANR	5494791	ExpressionStatement	"pcache ( ) -> get_user_gid ( myDistro -> Get ( ) , RealCondorGid )"	791:1:21180:21236	5494687	13	True				
ANR	5494792	CallExpression	"pcache ( ) -> get_user_gid ( myDistro -> Get ( ) , RealCondorGid )"		5494687	0					
ANR	5494793	Callee	pcache ( ) -> get_user_gid		5494687	0					
ANR	5494794	PtrMemberAccess	pcache ( ) -> get_user_gid		5494687	0					
ANR	5494795	CallExpression	pcache ( )		5494687	0					
ANR	5494796	Callee	pcache		5494687	0					
ANR	5494797	Identifier	pcache		5494687	0					
ANR	5494798	ArgumentList			5494687	1					
ANR	5494799	Identifier	get_user_gid		5494687	1					
ANR	5494800	ArgumentList	myDistro -> Get ( )		5494687	1					
ANR	5494801	Argument	myDistro -> Get ( )		5494687	0					
ANR	5494802	CallExpression	myDistro -> Get ( )		5494687	0					
ANR	5494803	Callee	myDistro -> Get		5494687	0					
ANR	5494804	PtrMemberAccess	myDistro -> Get		5494687	0					
ANR	5494805	Identifier	myDistro		5494687	0					
ANR	5494806	Identifier	Get		5494687	1					
ANR	5494807	ArgumentList			5494687	1					
ANR	5494808	Argument	RealCondorGid		5494687	1					
ANR	5494809	Identifier	RealCondorGid		5494687	0					
ANR	5494810	IdentifierDeclStatement	const char * envName = EnvGetName ( ENV_UG_IDS ) ;	793:1:21240:21286	5494687	14	True				
ANR	5494811	IdentifierDecl	* envName = EnvGetName ( ENV_UG_IDS )		5494687	0					
ANR	5494812	IdentifierDeclType	const char *		5494687	0					
ANR	5494813	Identifier	envName		5494687	1					
ANR	5494814	AssignmentExpression	* envName = EnvGetName ( ENV_UG_IDS )		5494687	2		=			
ANR	5494815	Identifier	envName		5494687	0					
ANR	5494816	CallExpression	EnvGetName ( ENV_UG_IDS )		5494687	1					
ANR	5494817	Callee	EnvGetName		5494687	0					
ANR	5494818	Identifier	EnvGetName		5494687	0					
ANR	5494819	ArgumentList	ENV_UG_IDS		5494687	1					
ANR	5494820	Argument	ENV_UG_IDS		5494687	0					
ANR	5494821	Identifier	ENV_UG_IDS		5494687	0					
ANR	5494822	IfStatement	if ( ( env_val = getenv ( envName ) ) )		5494687	15					
ANR	5494823	Condition	env_val = getenv ( envName )	794:5:21294:21320	5494687	0	True				
ANR	5494824	AssignmentExpression	env_val = getenv ( envName )		5494687	0		=			
ANR	5494825	Identifier	env_val		5494687	0					
ANR	5494826	CallExpression	getenv ( envName )		5494687	1					
ANR	5494827	Callee	getenv		5494687	0					
ANR	5494828	Identifier	getenv		5494687	0					
ANR	5494829	ArgumentList	envName		5494687	1					
ANR	5494830	Argument	envName		5494687	0					
ANR	5494831	Identifier	envName		5494687	0					
ANR	5494832	CompoundStatement		28:35:863:863	5494687	1					
ANR	5494833	ExpressionStatement	val = env_val	795:2:21328:21341	5494687	0	True				
ANR	5494834	AssignmentExpression	val = env_val		5494687	0		=			
ANR	5494835	Identifier	val		5494687	0					
ANR	5494836	Identifier	env_val		5494687	1					
ANR	5494837	ElseStatement	else		5494687	0					
ANR	5494838	IfStatement	if ( ( config_val = param_without_default ( envName ) ) )		5494687	0					
ANR	5494839	Condition	config_val = param_without_default ( envName )	796:12:21355:21399	5494687	0	True				
ANR	5494840	AssignmentExpression	config_val = param_without_default ( envName )		5494687	0		=			
ANR	5494841	Identifier	config_val		5494687	0					
ANR	5494842	CallExpression	param_without_default ( envName )		5494687	1					
ANR	5494843	Callee	param_without_default		5494687	0					
ANR	5494844	Identifier	param_without_default		5494687	0					
ANR	5494845	ArgumentList	envName		5494687	1					
ANR	5494846	Argument	envName		5494687	0					
ANR	5494847	Identifier	envName		5494687	0					
ANR	5494848	CompoundStatement		30:60:942:942	5494687	1					
ANR	5494849	ExpressionStatement	val = config_val	801:2:21697:21713	5494687	0	True				
ANR	5494850	AssignmentExpression	val = config_val		5494687	0		=			
ANR	5494851	Identifier	val		5494687	0					
ANR	5494852	Identifier	config_val		5494687	1					
ANR	5494853	IfStatement	if ( val )		5494687	16					
ANR	5494854	Condition	val	803:5:21723:21725	5494687	0	True				
ANR	5494855	Identifier	val		5494687	0					
ANR	5494856	CompoundStatement		37:11:1268:1268	5494687	1					
ANR	5494857	IfStatement	"if ( sscanf ( val , ""%d.%d"" , & envCondorUid , & envCondorGid ) != 2 )"		5494687	0					
ANR	5494858	Condition	"sscanf ( val , ""%d.%d"" , & envCondorUid , & envCondorGid ) != 2"	804:6:21739:21793	5494687	0	True				
ANR	5494859	EqualityExpression	"sscanf ( val , ""%d.%d"" , & envCondorUid , & envCondorGid ) != 2"		5494687	0		!=			
ANR	5494860	CallExpression	"sscanf ( val , ""%d.%d"" , & envCondorUid , & envCondorGid )"		5494687	0					
ANR	5494861	Callee	sscanf		5494687	0					
ANR	5494862	Identifier	sscanf		5494687	0					
ANR	5494863	ArgumentList	val		5494687	1					
ANR	5494864	Argument	val		5494687	0					
ANR	5494865	Identifier	val		5494687	0					
ANR	5494866	Argument	"""%d.%d"""		5494687	1					
ANR	5494867	PrimaryExpression	"""%d.%d"""		5494687	0					
ANR	5494868	Argument	& envCondorUid		5494687	2					
ANR	5494869	UnaryOperationExpression	& envCondorUid		5494687	0					
ANR	5494870	UnaryOperator	&		5494687	0					
ANR	5494871	Identifier	envCondorUid		5494687	1					
ANR	5494872	Argument	& envCondorGid		5494687	3					
ANR	5494873	UnaryOperationExpression	& envCondorGid		5494687	0					
ANR	5494874	UnaryOperator	&		5494687	0					
ANR	5494875	Identifier	envCondorGid		5494687	1					
ANR	5494876	PrimaryExpression	2		5494687	1					
ANR	5494877	CompoundStatement		38:64:1336:1336	5494687	1					
ANR	5494878	ExpressionStatement	"fprintf ( stderr , ""ERROR: badly formed value in %s "" , envName )"	805:3:21802:21864	5494687	0	True				
ANR	5494879	CallExpression	"fprintf ( stderr , ""ERROR: badly formed value in %s "" , envName )"		5494687	0					
ANR	5494880	Callee	fprintf		5494687	0					
ANR	5494881	Identifier	fprintf		5494687	0					
ANR	5494882	ArgumentList	stderr		5494687	1					
ANR	5494883	Argument	stderr		5494687	0					
ANR	5494884	Identifier	stderr		5494687	0					
ANR	5494885	Argument	"""ERROR: badly formed value in %s """		5494687	1					
ANR	5494886	PrimaryExpression	"""ERROR: badly formed value in %s """		5494687	0					
ANR	5494887	Argument	envName		5494687	2					
ANR	5494888	Identifier	envName		5494687	0					
ANR	5494889	ExpressionStatement	"fprintf ( stderr , ""%s variable (%s).\\n"" , env_val ? ""environment"" : ""config file"" , val )"	806:3:21869:21961	5494687	1	True				
ANR	5494890	CallExpression	"fprintf ( stderr , ""%s variable (%s).\\n"" , env_val ? ""environment"" : ""config file"" , val )"		5494687	0					
ANR	5494891	Callee	fprintf		5494687	0					
ANR	5494892	Identifier	fprintf		5494687	0					
ANR	5494893	ArgumentList	stderr		5494687	1					
ANR	5494894	Argument	stderr		5494687	0					
ANR	5494895	Identifier	stderr		5494687	0					
ANR	5494896	Argument	"""%s variable (%s).\\n"""		5494687	1					
ANR	5494897	PrimaryExpression	"""%s variable (%s).\\n"""		5494687	0					
ANR	5494898	Argument	"env_val ? ""environment"" : ""config file"""		5494687	2					
ANR	5494899	ConditionalExpression	"env_val ? ""environment"" : ""config file"""		5494687	0					
ANR	5494900	Condition	env_val		5494687	0					
ANR	5494901	Identifier	env_val		5494687	0					
ANR	5494902	PrimaryExpression	"""environment"""		5494687	1					
ANR	5494903	PrimaryExpression	"""config file"""		5494687	2					
ANR	5494904	Argument	val		5494687	3					
ANR	5494905	Identifier	val		5494687	0					
ANR	5494906	ExpressionStatement	"fprintf ( stderr , ""Please set %s to "" , envName )"	808:3:21966:22013	5494687	2	True				
ANR	5494907	CallExpression	"fprintf ( stderr , ""Please set %s to "" , envName )"		5494687	0					
ANR	5494908	Callee	fprintf		5494687	0					
ANR	5494909	Identifier	fprintf		5494687	0					
ANR	5494910	ArgumentList	stderr		5494687	1					
ANR	5494911	Argument	stderr		5494687	0					
ANR	5494912	Identifier	stderr		5494687	0					
ANR	5494913	Argument	"""Please set %s to """		5494687	1					
ANR	5494914	PrimaryExpression	"""Please set %s to """		5494687	0					
ANR	5494915	Argument	envName		5494687	2					
ANR	5494916	Identifier	envName		5494687	0					
ANR	5494917	ExpressionStatement	"fprintf ( stderr , ""the '.' seperated uid, gid pair that\\n"" )"	809:3:22018:22077	5494687	3	True				
ANR	5494918	CallExpression	"fprintf ( stderr , ""the '.' seperated uid, gid pair that\\n"" )"		5494687	0					
ANR	5494919	Callee	fprintf		5494687	0					
ANR	5494920	Identifier	fprintf		5494687	0					
ANR	5494921	ArgumentList	stderr		5494687	1					
ANR	5494922	Argument	stderr		5494687	0					
ANR	5494923	Identifier	stderr		5494687	0					
ANR	5494924	Argument	"""the '.' seperated uid, gid pair that\\n"""		5494687	1					
ANR	5494925	PrimaryExpression	"""the '.' seperated uid, gid pair that\\n"""		5494687	0					
ANR	5494926	ExpressionStatement	"fprintf ( stderr , ""should be used by %s.\\n"" , myDistro -> Get ( ) )"	810:3:22082:22143	5494687	4	True				
ANR	5494927	CallExpression	"fprintf ( stderr , ""should be used by %s.\\n"" , myDistro -> Get ( ) )"		5494687	0					
ANR	5494928	Callee	fprintf		5494687	0					
ANR	5494929	Identifier	fprintf		5494687	0					
ANR	5494930	ArgumentList	stderr		5494687	1					
ANR	5494931	Argument	stderr		5494687	0					
ANR	5494932	Identifier	stderr		5494687	0					
ANR	5494933	Argument	"""should be used by %s.\\n"""		5494687	1					
ANR	5494934	PrimaryExpression	"""should be used by %s.\\n"""		5494687	0					
ANR	5494935	Argument	myDistro -> Get ( )		5494687	2					
ANR	5494936	CallExpression	myDistro -> Get ( )		5494687	0					
ANR	5494937	Callee	myDistro -> Get		5494687	0					
ANR	5494938	PtrMemberAccess	myDistro -> Get		5494687	0					
ANR	5494939	Identifier	myDistro		5494687	0					
ANR	5494940	Identifier	Get		5494687	1					
ANR	5494941	ArgumentList			5494687	1					
ANR	5494942	ExpressionStatement	exit ( 1 )	811:3:22148:22155	5494687	5	True				
ANR	5494943	CallExpression	exit ( 1 )		5494687	0					
ANR	5494944	Callee	exit		5494687	0					
ANR	5494945	Identifier	exit		5494687	0					
ANR	5494946	ArgumentList	1		5494687	1					
ANR	5494947	Argument	1		5494687	0					
ANR	5494948	PrimaryExpression	1		5494687	0					
ANR	5494949	IfStatement	if ( CondorUserName != NULL )		5494687	1					
ANR	5494950	Condition	CondorUserName != NULL	813:6:22167:22188	5494687	0	True				
ANR	5494951	EqualityExpression	CondorUserName != NULL		5494687	0		!=			
ANR	5494952	Identifier	CondorUserName		5494687	0					
ANR	5494953	Identifier	NULL		5494687	1					
ANR	5494954	CompoundStatement		47:31:1731:1731	5494687	1					
ANR	5494955	ExpressionStatement	free ( CondorUserName )	814:3:22197:22219	5494687	0	True				
ANR	5494956	CallExpression	free ( CondorUserName )		5494687	0					
ANR	5494957	Callee	free		5494687	0					
ANR	5494958	Identifier	free		5494687	0					
ANR	5494959	ArgumentList	CondorUserName		5494687	1					
ANR	5494960	Argument	CondorUserName		5494687	0					
ANR	5494961	Identifier	CondorUserName		5494687	0					
ANR	5494962	ExpressionStatement	CondorUserName = NULL	815:3:22224:22245	5494687	1	True				
ANR	5494963	AssignmentExpression	CondorUserName = NULL		5494687	0		=			
ANR	5494964	Identifier	CondorUserName		5494687	0					
ANR	5494965	Identifier	NULL		5494687	1					
ANR	5494966	ExpressionStatement	"result = pcache ( ) -> get_user_name ( envCondorUid , CondorUserName )"	817:2:22253:22317	5494687	2	True				
ANR	5494967	AssignmentExpression	"result = pcache ( ) -> get_user_name ( envCondorUid , CondorUserName )"		5494687	0		=			
ANR	5494968	Identifier	result		5494687	0					
ANR	5494969	CallExpression	"pcache ( ) -> get_user_name ( envCondorUid , CondorUserName )"		5494687	1					
ANR	5494970	Callee	pcache ( ) -> get_user_name		5494687	0					
ANR	5494971	PtrMemberAccess	pcache ( ) -> get_user_name		5494687	0					
ANR	5494972	CallExpression	pcache ( )		5494687	0					
ANR	5494973	Callee	pcache		5494687	0					
ANR	5494974	Identifier	pcache		5494687	0					
ANR	5494975	ArgumentList			5494687	1					
ANR	5494976	Identifier	get_user_name		5494687	1					
ANR	5494977	ArgumentList	envCondorUid		5494687	1					
ANR	5494978	Argument	envCondorUid		5494687	0					
ANR	5494979	Identifier	envCondorUid		5494687	0					
ANR	5494980	Argument	CondorUserName		5494687	1					
ANR	5494981	Identifier	CondorUserName		5494687	0					
ANR	5494982	IfStatement	if ( ! result )		5494687	3					
ANR	5494983	Condition	! result	819:6:22326:22333	5494687	0	True				
ANR	5494984	UnaryOperationExpression	! result		5494687	0					
ANR	5494985	UnaryOperator	!		5494687	0					
ANR	5494986	Identifier	result		5494687	1					
ANR	5494987	CompoundStatement		53:17:1876:1876	5494687	1					
ANR	5494988	ExpressionStatement	"fprintf ( stderr , ""ERROR: the uid specified in %s "" , envName )"	823:3:22378:22439	5494687	0	True				
ANR	5494989	CallExpression	"fprintf ( stderr , ""ERROR: the uid specified in %s "" , envName )"		5494687	0					
ANR	5494990	Callee	fprintf		5494687	0					
ANR	5494991	Identifier	fprintf		5494687	0					
ANR	5494992	ArgumentList	stderr		5494687	1					
ANR	5494993	Argument	stderr		5494687	0					
ANR	5494994	Identifier	stderr		5494687	0					
ANR	5494995	Argument	"""ERROR: the uid specified in %s """		5494687	1					
ANR	5494996	PrimaryExpression	"""ERROR: the uid specified in %s """		5494687	0					
ANR	5494997	Argument	envName		5494687	2					
ANR	5494998	Identifier	envName		5494687	0					
ANR	5494999	ExpressionStatement	"fprintf ( stderr , ""%s variable (%d)\\n"" , env_val ? ""environment"" : ""config file"" , envCondorUid )"	824:3:22444:22545	5494687	1	True				
ANR	5495000	CallExpression	"fprintf ( stderr , ""%s variable (%d)\\n"" , env_val ? ""environment"" : ""config file"" , envCondorUid )"		5494687	0					
ANR	5495001	Callee	fprintf		5494687	0					
ANR	5495002	Identifier	fprintf		5494687	0					
ANR	5495003	ArgumentList	stderr		5494687	1					
ANR	5495004	Argument	stderr		5494687	0					
ANR	5495005	Identifier	stderr		5494687	0					
ANR	5495006	Argument	"""%s variable (%d)\\n"""		5494687	1					
ANR	5495007	PrimaryExpression	"""%s variable (%d)\\n"""		5494687	0					
ANR	5495008	Argument	"env_val ? ""environment"" : ""config file"""		5494687	2					
ANR	5495009	ConditionalExpression	"env_val ? ""environment"" : ""config file"""		5494687	0					
ANR	5495010	Condition	env_val		5494687	0					
ANR	5495011	Identifier	env_val		5494687	0					
ANR	5495012	PrimaryExpression	"""environment"""		5494687	1					
ANR	5495013	PrimaryExpression	"""config file"""		5494687	2					
ANR	5495014	Argument	envCondorUid		5494687	3					
ANR	5495015	Identifier	envCondorUid		5494687	0					
ANR	5495016	ExpressionStatement	"fprintf ( stderr , ""does not exist in your password information.\\n"" )"	826:3:22550:22616	5494687	2	True				
ANR	5495017	CallExpression	"fprintf ( stderr , ""does not exist in your password information.\\n"" )"		5494687	0					
ANR	5495018	Callee	fprintf		5494687	0					
ANR	5495019	Identifier	fprintf		5494687	0					
ANR	5495020	ArgumentList	stderr		5494687	1					
ANR	5495021	Argument	stderr		5494687	0					
ANR	5495022	Identifier	stderr		5494687	0					
ANR	5495023	Argument	"""does not exist in your password information.\\n"""		5494687	1					
ANR	5495024	PrimaryExpression	"""does not exist in your password information.\\n"""		5494687	0					
ANR	5495025	ExpressionStatement	"fprintf ( stderr , ""Please set %s to "" , envName )"	827:3:22621:22666	5494687	3	True				
ANR	5495026	CallExpression	"fprintf ( stderr , ""Please set %s to "" , envName )"		5494687	0					
ANR	5495027	Callee	fprintf		5494687	0					
ANR	5495028	Identifier	fprintf		5494687	0					
ANR	5495029	ArgumentList	stderr		5494687	1					
ANR	5495030	Argument	stderr		5494687	0					
ANR	5495031	Identifier	stderr		5494687	0					
ANR	5495032	Argument	"""Please set %s to """		5494687	1					
ANR	5495033	PrimaryExpression	"""Please set %s to """		5494687	0					
ANR	5495034	Argument	envName		5494687	2					
ANR	5495035	Identifier	envName		5494687	0					
ANR	5495036	ExpressionStatement	"fprintf ( stderr , ""the '.' seperated uid, gid pair that\\n"" )"	828:3:22671:22728	5494687	4	True				
ANR	5495037	CallExpression	"fprintf ( stderr , ""the '.' seperated uid, gid pair that\\n"" )"		5494687	0					
ANR	5495038	Callee	fprintf		5494687	0					
ANR	5495039	Identifier	fprintf		5494687	0					
ANR	5495040	ArgumentList	stderr		5494687	1					
ANR	5495041	Argument	stderr		5494687	0					
ANR	5495042	Identifier	stderr		5494687	0					
ANR	5495043	Argument	"""the '.' seperated uid, gid pair that\\n"""		5494687	1					
ANR	5495044	PrimaryExpression	"""the '.' seperated uid, gid pair that\\n"""		5494687	0					
ANR	5495045	ExpressionStatement	"fprintf ( stderr , ""should be used by %s.\\n"" , myDistro -> Get ( ) )"	829:3:22733:22793	5494687	5	True				
ANR	5495046	CallExpression	"fprintf ( stderr , ""should be used by %s.\\n"" , myDistro -> Get ( ) )"		5494687	0					
ANR	5495047	Callee	fprintf		5494687	0					
ANR	5495048	Identifier	fprintf		5494687	0					
ANR	5495049	ArgumentList	stderr		5494687	1					
ANR	5495050	Argument	stderr		5494687	0					
ANR	5495051	Identifier	stderr		5494687	0					
ANR	5495052	Argument	"""should be used by %s.\\n"""		5494687	1					
ANR	5495053	PrimaryExpression	"""should be used by %s.\\n"""		5494687	0					
ANR	5495054	Argument	myDistro -> Get ( )		5494687	2					
ANR	5495055	CallExpression	myDistro -> Get ( )		5494687	0					
ANR	5495056	Callee	myDistro -> Get		5494687	0					
ANR	5495057	PtrMemberAccess	myDistro -> Get		5494687	0					
ANR	5495058	Identifier	myDistro		5494687	0					
ANR	5495059	Identifier	Get		5494687	1					
ANR	5495060	ArgumentList			5494687	1					
ANR	5495061	ExpressionStatement	exit ( 1 )	830:3:22798:22805	5494687	6	True				
ANR	5495062	CallExpression	exit ( 1 )		5494687	0					
ANR	5495063	Callee	exit		5494687	0					
ANR	5495064	Identifier	exit		5494687	0					
ANR	5495065	ArgumentList	1		5494687	1					
ANR	5495066	Argument	1		5494687	0					
ANR	5495067	PrimaryExpression	1		5494687	0					
ANR	5495068	IfStatement	if ( config_val )		5494687	17					
ANR	5495069	Condition	config_val	833:5:22819:22828	5494687	0	True				
ANR	5495070	Identifier	config_val		5494687	0					
ANR	5495071	CompoundStatement		67:18:2371:2371	5494687	1					
ANR	5495072	ExpressionStatement	free ( config_val )	834:2:22836:22854	5494687	0	True				
ANR	5495073	CallExpression	free ( config_val )		5494687	0					
ANR	5495074	Callee	free		5494687	0					
ANR	5495075	Identifier	free		5494687	0					
ANR	5495076	ArgumentList	config_val		5494687	1					
ANR	5495077	Argument	config_val		5494687	0					
ANR	5495078	Identifier	config_val		5494687	0					
ANR	5495079	ExpressionStatement	config_val = NULL	835:2:22858:22875	5494687	1	True				
ANR	5495080	AssignmentExpression	config_val = NULL		5494687	0		=			
ANR	5495081	Identifier	config_val		5494687	0					
ANR	5495082	Identifier	NULL		5494687	1					
ANR	5495083	ExpressionStatement	val = NULL	836:2:22879:22889	5494687	2	True				
ANR	5495084	AssignmentExpression	val = NULL		5494687	0		=			
ANR	5495085	Identifier	val		5494687	0					
ANR	5495086	Identifier	NULL		5494687	1					
ANR	5495087	IfStatement	if ( can_switch_ids ( ) )		5494687	18					
ANR	5495088	Condition	can_switch_ids ( )	841:5:23017:23032	5494687	0	True				
ANR	5495089	CallExpression	can_switch_ids ( )		5494687	0					
ANR	5495090	Callee	can_switch_ids		5494687	0					
ANR	5495091	Identifier	can_switch_ids		5494687	0					
ANR	5495092	ArgumentList			5494687	1					
ANR	5495093	CompoundStatement		76:2:2579:2626	5494687	1					
ANR	5495094	IdentifierDeclStatement	const char * enviName = EnvGetName ( ENV_UG_IDS ) ;	842:2:23040:23087	5494687	0	True				
ANR	5495095	IdentifierDecl	* enviName = EnvGetName ( ENV_UG_IDS )		5494687	0					
ANR	5495096	IdentifierDeclType	const char *		5494687	0					
ANR	5495097	Identifier	enviName		5494687	1					
ANR	5495098	AssignmentExpression	* enviName = EnvGetName ( ENV_UG_IDS )		5494687	2		=			
ANR	5495099	Identifier	enviName		5494687	0					
ANR	5495100	CallExpression	EnvGetName ( ENV_UG_IDS )		5494687	1					
ANR	5495101	Callee	EnvGetName		5494687	0					
ANR	5495102	Identifier	EnvGetName		5494687	0					
ANR	5495103	ArgumentList	ENV_UG_IDS		5494687	1					
ANR	5495104	Argument	ENV_UG_IDS		5494687	0					
ANR	5495105	Identifier	ENV_UG_IDS		5494687	0					
ANR	5495106	IfStatement	if ( envCondorUid != INT_MAX )		5494687	1					
ANR	5495107	Condition	envCondorUid != INT_MAX	843:6:23096:23118	5494687	0	True				
ANR	5495108	EqualityExpression	envCondorUid != INT_MAX		5494687	0		!=			
ANR	5495109	Identifier	envCondorUid		5494687	0					
ANR	5495110	Identifier	INT_MAX		5494687	1					
ANR	5495111	CompoundStatement		77:32:2661:2661	5494687	1					
ANR	5495112	ExpressionStatement	CondorUid = envCondorUid	845:4:23175:23199	5494687	0	True				
ANR	5495113	AssignmentExpression	CondorUid = envCondorUid		5494687	0		=			
ANR	5495114	Identifier	CondorUid		5494687	0					
ANR	5495115	Identifier	envCondorUid		5494687	1					
ANR	5495116	ExpressionStatement	CondorGid = envCondorGid	846:4:23205:23229	5494687	1	True				
ANR	5495117	AssignmentExpression	CondorGid = envCondorGid		5494687	0		=			
ANR	5495118	Identifier	CondorGid		5494687	0					
ANR	5495119	Identifier	envCondorGid		5494687	1					
ANR	5495120	ElseStatement	else		5494687	0					
ANR	5495121	CompoundStatement		81:9:2779:2779	5494687	0					
ANR	5495122	IfStatement	if ( RealCondorUid != INT_MAX )		5494687	0					
ANR	5495123	Condition	RealCondorUid != INT_MAX	849:7:23295:23318	5494687	0	True				
ANR	5495124	EqualityExpression	RealCondorUid != INT_MAX		5494687	0		!=			
ANR	5495125	Identifier	RealCondorUid		5494687	0					
ANR	5495126	Identifier	INT_MAX		5494687	1					
ANR	5495127	CompoundStatement		83:34:2861:2861	5494687	1					
ANR	5495128	ExpressionStatement	CondorUid = RealCondorUid	850:4:23328:23353	5494687	0	True				
ANR	5495129	AssignmentExpression	CondorUid = RealCondorUid		5494687	0		=			
ANR	5495130	Identifier	CondorUid		5494687	0					
ANR	5495131	Identifier	RealCondorUid		5494687	1					
ANR	5495132	ExpressionStatement	CondorGid = RealCondorGid	851:4:23359:23384	5494687	1	True				
ANR	5495133	AssignmentExpression	CondorGid = RealCondorGid		5494687	0		=			
ANR	5495134	Identifier	CondorGid		5494687	0					
ANR	5495135	Identifier	RealCondorGid		5494687	1					
ANR	5495136	IfStatement	if ( CondorUserName != NULL )		5494687	2					
ANR	5495137	Condition	CondorUserName != NULL	852:8:23394:23415	5494687	0	True				
ANR	5495138	EqualityExpression	CondorUserName != NULL		5494687	0		!=			
ANR	5495139	Identifier	CondorUserName		5494687	0					
ANR	5495140	Identifier	NULL		5494687	1					
ANR	5495141	CompoundStatement		86:33:2958:2958	5494687	1					
ANR	5495142	ExpressionStatement	free ( CondorUserName )	853:5:23426:23448	5494687	0	True				
ANR	5495143	CallExpression	free ( CondorUserName )		5494687	0					
ANR	5495144	Callee	free		5494687	0					
ANR	5495145	Identifier	free		5494687	0					
ANR	5495146	ArgumentList	CondorUserName		5494687	1					
ANR	5495147	Argument	CondorUserName		5494687	0					
ANR	5495148	Identifier	CondorUserName		5494687	0					
ANR	5495149	ExpressionStatement	CondorUserName = NULL	854:5:23455:23476	5494687	1	True				
ANR	5495150	AssignmentExpression	CondorUserName = NULL		5494687	0		=			
ANR	5495151	Identifier	CondorUserName		5494687	0					
ANR	5495152	Identifier	NULL		5494687	1					
ANR	5495153	ExpressionStatement	CondorUserName = strdup ( myDistro -> Get ( ) )	856:4:23488:23530	5494687	3	True				
ANR	5495154	AssignmentExpression	CondorUserName = strdup ( myDistro -> Get ( ) )		5494687	0		=			
ANR	5495155	Identifier	CondorUserName		5494687	0					
ANR	5495156	CallExpression	strdup ( myDistro -> Get ( ) )		5494687	1					
ANR	5495157	Callee	strdup		5494687	0					
ANR	5495158	Identifier	strdup		5494687	0					
ANR	5495159	ArgumentList	myDistro -> Get ( )		5494687	1					
ANR	5495160	Argument	myDistro -> Get ( )		5494687	0					
ANR	5495161	CallExpression	myDistro -> Get ( )		5494687	0					
ANR	5495162	Callee	myDistro -> Get		5494687	0					
ANR	5495163	PtrMemberAccess	myDistro -> Get		5494687	0					
ANR	5495164	Identifier	myDistro		5494687	0					
ANR	5495165	Identifier	Get		5494687	1					
ANR	5495166	ArgumentList			5494687	1					
ANR	5495167	IfStatement	if ( CondorUserName == NULL )		5494687	4					
ANR	5495168	Condition	CondorUserName == NULL	857:8:23540:23561	5494687	0	True				
ANR	5495169	EqualityExpression	CondorUserName == NULL		5494687	0		==			
ANR	5495170	Identifier	CondorUserName		5494687	0					
ANR	5495171	Identifier	NULL		5494687	1					
ANR	5495172	CompoundStatement		91:32:3103:3103	5494687	1					
ANR	5495173	ExpressionStatement	"EXCEPT ( ""Out of memory. Aborting."" )"	858:5:23571:23605	5494687	0	True				
ANR	5495174	CallExpression	"EXCEPT ( ""Out of memory. Aborting."" )"		5494687	0					
ANR	5495175	Callee	EXCEPT		5494687	0					
ANR	5495176	Identifier	EXCEPT		5494687	0					
ANR	5495177	ArgumentList	"""Out of memory. Aborting."""		5494687	1					
ANR	5495178	Argument	"""Out of memory. Aborting."""		5494687	0					
ANR	5495179	PrimaryExpression	"""Out of memory. Aborting."""		5494687	0					
ANR	5495180	ElseStatement	else		5494687	0					
ANR	5495181	CompoundStatement		94:10:3162:3162	5494687	0					
ANR	5495182	Statement	fprintf	861:4:23629:23635	5494687	0	True				
ANR	5495183	Statement	(	861:11:23636:23636	5494687	1	True				
ANR	5495184	Statement	stderr	861:13:23638:23643	5494687	2	True				
ANR	5495185	Statement	","	861:19:23644:23644	5494687	3	True				
ANR	5495186	Statement	"""Can't find \\""%s\\"" in the password file and """	862:7:23653:23697	5494687	4	True				
ANR	5495187	Statement	"""%s not defined in %s_config or as an """	863:7:23706:23744	5494687	5	True				
ANR	5495188	Statement	"""environment variable.\\n"""	864:7:23753:23777	5494687	6	True				
ANR	5495189	Statement	","	864:32:23778:23778	5494687	7	True				
ANR	5495190	Statement	myDistro	864:34:23780:23787	5494687	8	True				
ANR	5495191	Statement	->	864:42:23788:23789	5494687	9	True				
ANR	5495192	Statement	Get	864:44:23790:23792	5494687	10	True				
ANR	5495193	Statement	(	864:47:23793:23793	5494687	11	True				
ANR	5495194	Statement	)	864:48:23794:23794	5494687	12	True				
ANR	5495195	Statement	","	864:49:23795:23795	5494687	13	True				
ANR	5495196	Statement	enviName	865:7:23804:23811	5494687	14	True				
ANR	5495197	Statement	","	865:15:23812:23812	5494687	15	True				
ANR	5495198	Statement	myDistro	865:17:23814:23821	5494687	16	True				
ANR	5495199	Statement	->	865:25:23822:23823	5494687	17	True				
ANR	5495200	Statement	Get	865:27:23824:23826	5494687	18	True				
ANR	5495201	Statement	(	865:30:23827:23827	5494687	19	True				
ANR	5495202	Statement	)	865:31:23828:23828	5494687	20	True				
ANR	5495203	Statement	)	865:33:23830:23830	5494687	21	True				
ANR	5495204	ExpressionStatement		865:34:23831:23831	5494687	22	True				
ANR	5495205	ExpressionStatement	exit ( 1 )	866:4:23837:23844	5494687	23	True				
ANR	5495206	CallExpression	exit ( 1 )		5494687	0					
ANR	5495207	Callee	exit		5494687	0					
ANR	5495208	Identifier	exit		5494687	0					
ANR	5495209	ArgumentList	1		5494687	1					
ANR	5495210	Argument	1		5494687	0					
ANR	5495211	PrimaryExpression	1		5494687	0					
ANR	5495212	ElseStatement	else		5494687	0					
ANR	5495213	CompoundStatement		109:8:3776:3776	5494687	0					
ANR	5495214	ExpressionStatement	CondorUid = MyUid	877:2:24305:24322	5494687	0	True				
ANR	5495215	AssignmentExpression	CondorUid = MyUid		5494687	0		=			
ANR	5495216	Identifier	CondorUid		5494687	0					
ANR	5495217	Identifier	MyUid		5494687	1					
ANR	5495218	ExpressionStatement	CondorGid = MyGid	878:2:24326:24343	5494687	1	True				
ANR	5495219	AssignmentExpression	CondorGid = MyGid		5494687	0		=			
ANR	5495220	Identifier	CondorGid		5494687	0					
ANR	5495221	Identifier	MyGid		5494687	1					
ANR	5495222	IfStatement	if ( CondorUserName != NULL )		5494687	2					
ANR	5495223	Condition	CondorUserName != NULL	879:6:24351:24372	5494687	0	True				
ANR	5495224	EqualityExpression	CondorUserName != NULL		5494687	0		!=			
ANR	5495225	Identifier	CondorUserName		5494687	0					
ANR	5495226	Identifier	NULL		5494687	1					
ANR	5495227	CompoundStatement		113:31:3915:3915	5494687	1					
ANR	5495228	ExpressionStatement	free ( CondorUserName )	880:3:24381:24403	5494687	0	True				
ANR	5495229	CallExpression	free ( CondorUserName )		5494687	0					
ANR	5495230	Callee	free		5494687	0					
ANR	5495231	Identifier	free		5494687	0					
ANR	5495232	ArgumentList	CondorUserName		5494687	1					
ANR	5495233	Argument	CondorUserName		5494687	0					
ANR	5495234	Identifier	CondorUserName		5494687	0					
ANR	5495235	ExpressionStatement	CondorUserName = NULL	881:3:24408:24429	5494687	1	True				
ANR	5495236	AssignmentExpression	CondorUserName = NULL		5494687	0		=			
ANR	5495237	Identifier	CondorUserName		5494687	0					
ANR	5495238	Identifier	NULL		5494687	1					
ANR	5495239	ExpressionStatement	"result = pcache ( ) -> get_user_name ( CondorUid , CondorUserName )"	883:2:24437:24498	5494687	3	True				
ANR	5495240	AssignmentExpression	"result = pcache ( ) -> get_user_name ( CondorUid , CondorUserName )"		5494687	0		=			
ANR	5495241	Identifier	result		5494687	0					
ANR	5495242	CallExpression	"pcache ( ) -> get_user_name ( CondorUid , CondorUserName )"		5494687	1					
ANR	5495243	Callee	pcache ( ) -> get_user_name		5494687	0					
ANR	5495244	PtrMemberAccess	pcache ( ) -> get_user_name		5494687	0					
ANR	5495245	CallExpression	pcache ( )		5494687	0					
ANR	5495246	Callee	pcache		5494687	0					
ANR	5495247	Identifier	pcache		5494687	0					
ANR	5495248	ArgumentList			5494687	1					
ANR	5495249	Identifier	get_user_name		5494687	1					
ANR	5495250	ArgumentList	CondorUid		5494687	1					
ANR	5495251	Argument	CondorUid		5494687	0					
ANR	5495252	Identifier	CondorUid		5494687	0					
ANR	5495253	Argument	CondorUserName		5494687	1					
ANR	5495254	Identifier	CondorUserName		5494687	0					
ANR	5495255	IfStatement	if ( ! result )		5494687	4					
ANR	5495256	Condition	! result	884:6:24506:24512	5494687	0	True				
ANR	5495257	UnaryOperationExpression	! result		5494687	0					
ANR	5495258	UnaryOperator	!		5494687	0					
ANR	5495259	Identifier	result		5494687	1					
ANR	5495260	CompoundStatement		118:16:4055:4055	5494687	1					
ANR	5495261	ExpressionStatement	"CondorUserName = strdup ( ""Unknown"" )"	886:3:24583:24617	5494687	0	True				
ANR	5495262	AssignmentExpression	"CondorUserName = strdup ( ""Unknown"" )"		5494687	0		=			
ANR	5495263	Identifier	CondorUserName		5494687	0					
ANR	5495264	CallExpression	"strdup ( ""Unknown"" )"		5494687	1					
ANR	5495265	Callee	strdup		5494687	0					
ANR	5495266	Identifier	strdup		5494687	0					
ANR	5495267	ArgumentList	"""Unknown"""		5494687	1					
ANR	5495268	Argument	"""Unknown"""		5494687	0					
ANR	5495269	PrimaryExpression	"""Unknown"""		5494687	0					
ANR	5495270	IfStatement	if ( CondorUserName == NULL )		5494687	1					
ANR	5495271	Condition	CondorUserName == NULL	887:7:24626:24647	5494687	0	True				
ANR	5495272	EqualityExpression	CondorUserName == NULL		5494687	0		==			
ANR	5495273	Identifier	CondorUserName		5494687	0					
ANR	5495274	Identifier	NULL		5494687	1					
ANR	5495275	CompoundStatement		121:31:4189:4189	5494687	1					
ANR	5495276	ExpressionStatement	"EXCEPT ( ""Out of memory. Aborting."" )"	888:4:24656:24690	5494687	0	True				
ANR	5495277	CallExpression	"EXCEPT ( ""Out of memory. Aborting."" )"		5494687	0					
ANR	5495278	Callee	EXCEPT		5494687	0					
ANR	5495279	Identifier	EXCEPT		5494687	0					
ANR	5495280	ArgumentList	"""Out of memory. Aborting."""		5494687	1					
ANR	5495281	Argument	"""Out of memory. Aborting."""		5494687	0					
ANR	5495282	PrimaryExpression	"""Out of memory. Aborting."""		5494687	0					
ANR	5495283	IfStatement	if ( MyUid == envCondorUid )		5494687	5					
ANR	5495284	Condition	MyUid == envCondorUid	897:7:24979:24999	5494687	0	True				
ANR	5495285	EqualityExpression	MyUid == envCondorUid		5494687	0		==			
ANR	5495286	Identifier	MyUid		5494687	0					
ANR	5495287	Identifier	envCondorUid		5494687	1					
ANR	5495288	CompoundStatement		131:31:4542:4542	5494687	1					
ANR	5495289	ExpressionStatement	RealCondorUid = MyUid	898:3:25008:25029	5494687	0	True				
ANR	5495290	AssignmentExpression	RealCondorUid = MyUid		5494687	0		=			
ANR	5495291	Identifier	RealCondorUid		5494687	0					
ANR	5495292	Identifier	MyUid		5494687	1					
ANR	5495293	ExpressionStatement	RealCondorGid = MyGid	899:3:25034:25055	5494687	1	True				
ANR	5495294	AssignmentExpression	RealCondorGid = MyGid		5494687	0		=			
ANR	5495295	Identifier	RealCondorGid		5494687	0					
ANR	5495296	Identifier	MyGid		5494687	1					
ANR	5495297	ExpressionStatement	( void ) endpwent ( )	903:1:25067:25083	5494687	19	True				
ANR	5495298	CastExpression	( void ) endpwent ( )		5494687	0					
ANR	5495299	CastTarget	void		5494687	0					
ANR	5495300	CallExpression	endpwent ( )		5494687	1					
ANR	5495301	Callee	endpwent		5494687	0					
ANR	5495302	Identifier	endpwent		5494687	0					
ANR	5495303	ArgumentList			5494687	1					
ANR	5495304	ExpressionStatement	( void ) SetSyscalls ( scm )	904:1:25086:25110	5494687	20	True				
ANR	5495305	CastExpression	( void ) SetSyscalls ( scm )		5494687	0					
ANR	5495306	CastTarget	void		5494687	0					
ANR	5495307	CallExpression	SetSyscalls ( scm )		5494687	1					
ANR	5495308	Callee	SetSyscalls		5494687	0					
ANR	5495309	Identifier	SetSyscalls		5494687	0					
ANR	5495310	ArgumentList	scm		5494687	1					
ANR	5495311	Argument	scm		5494687	0					
ANR	5495312	Identifier	scm		5494687	0					
ANR	5495313	ExpressionStatement	CondorIdsInited = TRUE	906:1:25115:25137	5494687	21	True				
ANR	5495314	AssignmentExpression	CondorIdsInited = TRUE		5494687	0		=			
ANR	5495315	Identifier	CondorIdsInited		5494687	0					
ANR	5495316	Identifier	TRUE		5494687	1					
ANR	5495317	ReturnType	void		5494687	1					
ANR	5495318	Identifier	init_condor_ids		5494687	2					
ANR	5495319	ParameterList			5494687	3					
ANR	5495320	CFGEntryNode	ENTRY		5494687		True				
ANR	5495321	CFGExitNode	EXIT		5494687		True				
ANR	5495322	Symbol	CondorUid		5494687						
ANR	5495323	Symbol	ENV_UG_IDS		5494687						
ANR	5495324	Symbol	enviName		5494687						
ANR	5495325	Symbol	RealCondorUid		5494687						
ANR	5495326	Symbol	myDistro -> Get		5494687						
ANR	5495327	Symbol	EnvGetName		5494687						
ANR	5495328	Symbol	pcache ( ) -> get_user_name		5494687						
ANR	5495329	Symbol	result		5494687						
ANR	5495330	Symbol	MyUid		5494687						
ANR	5495331	Symbol	can_switch_ids		5494687						
ANR	5495332	Symbol	myDistro		5494687						
ANR	5495333	Symbol	INT_MAX		5494687						
ANR	5495334	Symbol	SetSyscalls		5494687						
ANR	5495335	Symbol	scm		5494687						
ANR	5495336	Symbol	get_my_uid		5494687						
ANR	5495337	Symbol	getenv		5494687						
ANR	5495338	Symbol	val		5494687						
ANR	5495339	Symbol	param_without_default		5494687						
ANR	5495340	Symbol	get_my_gid		5494687						
ANR	5495341	Symbol	NULL		5494687						
ANR	5495342	Symbol	MyGid		5494687						
ANR	5495343	Symbol	& envCondorUid		5494687						
ANR	5495344	Symbol	TRUE		5494687						
ANR	5495345	Symbol	stderr		5494687						
ANR	5495346	Symbol	pcache		5494687						
ANR	5495347	Symbol	SYS_UNRECORDED		5494687						
ANR	5495348	Symbol	* pcache		5494687						
ANR	5495349	Symbol	config_val		5494687						
ANR	5495350	Symbol	envCondorGid		5494687						
ANR	5495351	Symbol	CondorGid		5494687						
ANR	5495352	Symbol	* myDistro		5494687						
ANR	5495353	Symbol	envName		5494687						
ANR	5495354	Symbol	sscanf		5494687						
ANR	5495355	Symbol	CondorUserName		5494687						
ANR	5495356	Symbol	SYS_LOCAL		5494687						
ANR	5495357	Symbol	env_val		5494687						
ANR	5495358	Symbol	envCondorUid		5494687						
ANR	5495359	Symbol	& envCondorGid		5494687						
ANR	5495360	Symbol	strdup		5494687						
ANR	5495361	Symbol	RealCondorGid		5494687						
ANR	5495362	Symbol	CondorIdsInited		5494687						
ANR	5495363	Function	set_user_ids_implementation	910:0:25143:26486							
ANR	5495364	FunctionDef	"set_user_ids_implementation (uid_t uid , gid_t gid , const char * username , int is_quiet)"		5495363	0					
ANR	5495365	CompoundStatement		913:0:25252:26486	5495363	0					
ANR	5495366	IfStatement	if ( uid == 0 || gid == 0 )		5495363	0					
ANR	5495367	Condition	uid == 0 || gid == 0	914:5:25259:25278	5495363	0	True				
ANR	5495368	OrExpression	uid == 0 || gid == 0		5495363	0		||			
ANR	5495369	EqualityExpression	uid == 0		5495363	0		==			
ANR	5495370	Identifier	uid		5495363	0					
ANR	5495371	PrimaryExpression	0		5495363	1					
ANR	5495372	EqualityExpression	gid == 0		5495363	1		==			
ANR	5495373	Identifier	gid		5495363	0					
ANR	5495374	PrimaryExpression	0		5495363	1					
ANR	5495375	CompoundStatement		2:28:29:29	5495363	1					
ANR	5495376	Statement	dprintf	917:2:25398:25404	5495363	0	True				
ANR	5495377	Statement	(	917:9:25405:25405	5495363	1	True				
ANR	5495378	Statement	D_ALWAYS	917:11:25407:25414	5495363	2	True				
ANR	5495379	Statement	","	917:19:25415:25415	5495363	3	True				
ANR	5495380	Statement	"""ERROR: Attempt to initialize user_priv """	917:21:25417:25457	5495363	4	True				
ANR	5495381	Statement	"""with root privileges rejected\\n"""	918:5:25465:25497	5495363	5	True				
ANR	5495382	Statement	)	918:39:25499:25499	5495363	6	True				
ANR	5495383	ExpressionStatement		918:40:25500:25500	5495363	7	True				
ANR	5495384	ReturnStatement	return FALSE ;	919:2:25504:25516	5495363	8	True				
ANR	5495385	Identifier	FALSE		5495363	0					
ANR	5495386	IfStatement	if ( ! can_switch_ids ( ) )		5495363	1					
ANR	5495387	Condition	! can_switch_ids ( )	927:6:25794:25810	5495363	0	True				
ANR	5495388	UnaryOperationExpression	! can_switch_ids ( )		5495363	0					
ANR	5495389	UnaryOperator	!		5495363	0					
ANR	5495390	CallExpression	can_switch_ids ( )		5495363	1					
ANR	5495391	Callee	can_switch_ids		5495363	0					
ANR	5495392	Identifier	can_switch_ids		5495363	0					
ANR	5495393	ArgumentList			5495363	1					
ANR	5495394	CompoundStatement		15:26:561:561	5495363	1					
ANR	5495395	ExpressionStatement	uid = get_my_uid ( )	928:2:25818:25836	5495363	0	True				
ANR	5495396	AssignmentExpression	uid = get_my_uid ( )		5495363	0		=			
ANR	5495397	Identifier	uid		5495363	0					
ANR	5495398	CallExpression	get_my_uid ( )		5495363	1					
ANR	5495399	Callee	get_my_uid		5495363	0					
ANR	5495400	Identifier	get_my_uid		5495363	0					
ANR	5495401	ArgumentList			5495363	1					
ANR	5495402	ExpressionStatement	gid = get_my_gid ( )	929:2:25840:25858	5495363	1	True				
ANR	5495403	AssignmentExpression	gid = get_my_gid ( )		5495363	0		=			
ANR	5495404	Identifier	gid		5495363	0					
ANR	5495405	CallExpression	get_my_gid ( )		5495363	1					
ANR	5495406	Callee	get_my_gid		5495363	0					
ANR	5495407	Identifier	get_my_gid		5495363	0					
ANR	5495408	ArgumentList			5495363	1					
ANR	5495409	IfStatement	if ( UserIdsInited && UserUid != uid && ! is_quiet )		5495363	2					
ANR	5495410	Condition	UserIdsInited && UserUid != uid && ! is_quiet	932:5:25869:25912	5495363	0	True				
ANR	5495411	AndExpression	UserIdsInited && UserUid != uid && ! is_quiet		5495363	0		&&			
ANR	5495412	Identifier	UserIdsInited		5495363	0					
ANR	5495413	AndExpression	UserUid != uid && ! is_quiet		5495363	1		&&			
ANR	5495414	EqualityExpression	UserUid != uid		5495363	0		!=			
ANR	5495415	Identifier	UserUid		5495363	0					
ANR	5495416	Identifier	uid		5495363	1					
ANR	5495417	UnaryOperationExpression	! is_quiet		5495363	1					
ANR	5495418	UnaryOperator	!		5495363	0					
ANR	5495419	Identifier	is_quiet		5495363	1					
ANR	5495420	CompoundStatement		20:52:663:663	5495363	1					
ANR	5495421	ExpressionStatement	"dprintf ( D_ALWAYS , ""warning: setting UserUid to %d, was %d previously\\n"" , uid , UserUid )"	933:2:25920:26019	5495363	0	True				
ANR	5495422	CallExpression	"dprintf ( D_ALWAYS , ""warning: setting UserUid to %d, was %d previously\\n"" , uid , UserUid )"		5495363	0					
ANR	5495423	Callee	dprintf		5495363	0					
ANR	5495424	Identifier	dprintf		5495363	0					
ANR	5495425	ArgumentList	D_ALWAYS		5495363	1					
ANR	5495426	Argument	D_ALWAYS		5495363	0					
ANR	5495427	Identifier	D_ALWAYS		5495363	0					
ANR	5495428	Argument	"""warning: setting UserUid to %d, was %d previously\\n"""		5495363	1					
ANR	5495429	PrimaryExpression	"""warning: setting UserUid to %d, was %d previously\\n"""		5495363	0					
ANR	5495430	Argument	uid		5495363	2					
ANR	5495431	Identifier	uid		5495363	0					
ANR	5495432	Argument	UserUid		5495363	3					
ANR	5495433	Identifier	UserUid		5495363	0					
ANR	5495434	ExpressionStatement	UserUid = uid	937:1:26025:26038	5495363	3	True				
ANR	5495435	AssignmentExpression	UserUid = uid		5495363	0		=			
ANR	5495436	Identifier	UserUid		5495363	0					
ANR	5495437	Identifier	uid		5495363	1					
ANR	5495438	ExpressionStatement	UserGid = gid	938:1:26041:26054	5495363	4	True				
ANR	5495439	AssignmentExpression	UserGid = gid		5495363	0		=			
ANR	5495440	Identifier	UserGid		5495363	0					
ANR	5495441	Identifier	gid		5495363	1					
ANR	5495442	ExpressionStatement	UserIdsInited = TRUE	939:1:26057:26077	5495363	5	True				
ANR	5495443	AssignmentExpression	UserIdsInited = TRUE		5495363	0		=			
ANR	5495444	Identifier	UserIdsInited		5495363	0					
ANR	5495445	Identifier	TRUE		5495363	1					
ANR	5495446	IfStatement	if ( UserName )		5495363	6					
ANR	5495447	Condition	UserName	944:5:26285:26292	5495363	0	True				
ANR	5495448	Identifier	UserName		5495363	0					
ANR	5495449	CompoundStatement		32:16:1043:1043	5495363	1					
ANR	5495450	ExpressionStatement	free ( UserName )	945:2:26300:26316	5495363	0	True				
ANR	5495451	CallExpression	free ( UserName )		5495363	0					
ANR	5495452	Callee	free		5495363	0					
ANR	5495453	Identifier	free		5495363	0					
ANR	5495454	ArgumentList	UserName		5495363	1					
ANR	5495455	Argument	UserName		5495363	0					
ANR	5495456	Identifier	UserName		5495363	0					
ANR	5495457	IfStatement	if ( ! username )		5495363	7					
ANR	5495458	Condition	! username	948:6:26328:26336	5495363	0	True				
ANR	5495459	UnaryOperationExpression	! username		5495363	0					
ANR	5495460	UnaryOperator	!		5495363	0					
ANR	5495461	Identifier	username		5495363	1					
ANR	5495462	CompoundStatement		36:18:1087:1087	5495363	1					
ANR	5495463	IfStatement	"if ( ! ( pcache ( ) -> get_user_name ( UserUid , UserName ) ) )"		5495363	0					
ANR	5495464	Condition	"! ( pcache ( ) -> get_user_name ( UserUid , UserName ) )"	950:7:26350:26396	5495363	0	True				
ANR	5495465	UnaryOperationExpression	"! ( pcache ( ) -> get_user_name ( UserUid , UserName ) )"		5495363	0					
ANR	5495466	UnaryOperator	!		5495363	0					
ANR	5495467	CallExpression	"pcache ( ) -> get_user_name ( UserUid , UserName )"		5495363	1					
ANR	5495468	Callee	pcache ( ) -> get_user_name		5495363	0					
ANR	5495469	PtrMemberAccess	pcache ( ) -> get_user_name		5495363	0					
ANR	5495470	CallExpression	pcache ( )		5495363	0					
ANR	5495471	Callee	pcache		5495363	0					
ANR	5495472	Identifier	pcache		5495363	0					
ANR	5495473	ArgumentList			5495363	1					
ANR	5495474	Identifier	get_user_name		5495363	1					
ANR	5495475	ArgumentList	UserUid		5495363	1					
ANR	5495476	Argument	UserUid		5495363	0					
ANR	5495477	Identifier	UserUid		5495363	0					
ANR	5495478	Argument	UserName		5495363	1					
ANR	5495479	Identifier	UserName		5495363	0					
ANR	5495480	CompoundStatement		38:57:1147:1147	5495363	1					
ANR	5495481	ExpressionStatement	UserName = NULL	951:3:26405:26420	5495363	0	True				
ANR	5495482	AssignmentExpression	UserName = NULL		5495363	0		=			
ANR	5495483	Identifier	UserName		5495363	0					
ANR	5495484	Identifier	NULL		5495363	1					
ANR	5495485	ElseStatement	else		5495363	0					
ANR	5495486	CompoundStatement		41:8:1181:1181	5495363	0					
ANR	5495487	ExpressionStatement	UserName = strdup ( username )	954:2:26438:26467	5495363	0	True				
ANR	5495488	AssignmentExpression	UserName = strdup ( username )		5495363	0		=			
ANR	5495489	Identifier	UserName		5495363	0					
ANR	5495490	CallExpression	strdup ( username )		5495363	1					
ANR	5495491	Callee	strdup		5495363	0					
ANR	5495492	Identifier	strdup		5495363	0					
ANR	5495493	ArgumentList	username		5495363	1					
ANR	5495494	Argument	username		5495363	0					
ANR	5495495	Identifier	username		5495363	0					
ANR	5495496	ReturnStatement	return TRUE ;	956:1:26473:26484	5495363	8	True				
ANR	5495497	Identifier	TRUE		5495363	0					
ANR	5495498	ReturnType	static int		5495363	1					
ANR	5495499	Identifier	set_user_ids_implementation		5495363	2					
ANR	5495500	ParameterList	"uid_t uid , gid_t gid , const char * username , int is_quiet"		5495363	3					
ANR	5495501	Parameter	uid_t uid	911:29:25183:25191	5495363	0	True				
ANR	5495502	ParameterType	uid_t		5495363	0					
ANR	5495503	Identifier	uid		5495363	1					
ANR	5495504	Parameter	gid_t gid	911:40:25194:25202	5495363	1	True				
ANR	5495505	ParameterType	gid_t		5495363	0					
ANR	5495506	Identifier	gid		5495363	1					
ANR	5495507	Parameter	const char * username	911:51:25205:25224	5495363	2	True				
ANR	5495508	ParameterType	const char *		5495363	0					
ANR	5495509	Identifier	username		5495363	1					
ANR	5495510	Parameter	int is_quiet	912:8:25236:25247	5495363	3	True				
ANR	5495511	ParameterType	int		5495363	0					
ANR	5495512	Identifier	is_quiet		5495363	1					
ANR	5495513	CFGEntryNode	ENTRY		5495363		True				
ANR	5495514	CFGExitNode	EXIT		5495363		True				
ANR	5495515	Symbol	get_my_gid		5495363						
ANR	5495516	Symbol	gid		5495363						
ANR	5495517	Symbol	UserName		5495363						
ANR	5495518	Symbol	NULL		5495363						
ANR	5495519	Symbol	UserGid		5495363						
ANR	5495520	Symbol	UserIdsInited		5495363						
ANR	5495521	Symbol	D_ALWAYS		5495363						
ANR	5495522	Symbol	TRUE		5495363						
ANR	5495523	Symbol	is_quiet		5495363						
ANR	5495524	Symbol	pcache		5495363						
ANR	5495525	Symbol	pcache ( ) -> get_user_name		5495363						
ANR	5495526	Symbol	* pcache		5495363						
ANR	5495527	Symbol	uid		5495363						
ANR	5495528	Symbol	can_switch_ids		5495363						
ANR	5495529	Symbol	UserUid		5495363						
ANR	5495530	Symbol	FALSE		5495363						
ANR	5495531	Symbol	strdup		5495363						
ANR	5495532	Symbol	get_my_uid		5495363						
ANR	5495533	Symbol	username		5495363						
ANR	5495534	Function	init_nobody_ids	965:0:26665:28714							
ANR	5495535	FunctionDef	init_nobody_ids (int is_quiet)		5495534	0					
ANR	5495536	CompoundStatement		967:0:26701:28714	5495534	0					
ANR	5495537	IdentifierDeclStatement	bool result ;	968:1:26704:26715	5495534	0	True				
ANR	5495538	IdentifierDecl	result		5495534	0					
ANR	5495539	IdentifierDeclType	bool		5495534	0					
ANR	5495540	Identifier	result		5495534	1					
ANR	5495541	IdentifierDeclStatement	uid_t nobody_uid = 0 ;	982:1:27212:27232	5495534	1	True				
ANR	5495542	IdentifierDecl	nobody_uid = 0		5495534	0					
ANR	5495543	IdentifierDeclType	uid_t		5495534	0					
ANR	5495544	Identifier	nobody_uid		5495534	1					
ANR	5495545	AssignmentExpression	nobody_uid = 0		5495534	2		=			
ANR	5495546	Identifier	nobody_uid		5495534	0					
ANR	5495547	PrimaryExpression	0		5495534	1					
ANR	5495548	IdentifierDeclStatement	gid_t nobody_gid = 0 ;	983:1:27235:27255	5495534	2	True				
ANR	5495549	IdentifierDecl	nobody_gid = 0		5495534	0					
ANR	5495550	IdentifierDeclType	gid_t		5495534	0					
ANR	5495551	Identifier	nobody_gid		5495534	1					
ANR	5495552	AssignmentExpression	nobody_gid = 0		5495534	2		=			
ANR	5495553	Identifier	nobody_gid		5495534	0					
ANR	5495554	PrimaryExpression	0		5495534	1					
ANR	5495555	ExpressionStatement	"result = ( ( pcache ( ) -> get_user_uid ( ""nobody"" , nobody_uid ) ) && ( pcache ( ) -> get_user_gid ( ""nobody"" , nobody_gid ) ) )"	985:1:27259:27376	5495534	3	True				
ANR	5495556	AssignmentExpression	"result = ( ( pcache ( ) -> get_user_uid ( ""nobody"" , nobody_uid ) ) && ( pcache ( ) -> get_user_gid ( ""nobody"" , nobody_gid ) ) )"		5495534	0		=			
ANR	5495557	Identifier	result		5495534	0					
ANR	5495558	AndExpression	"( pcache ( ) -> get_user_uid ( ""nobody"" , nobody_uid ) ) && ( pcache ( ) -> get_user_gid ( ""nobody"" , nobody_gid ) )"		5495534	1		&&			
ANR	5495559	CallExpression	"pcache ( ) -> get_user_uid ( ""nobody"" , nobody_uid )"		5495534	0					
ANR	5495560	Callee	pcache ( ) -> get_user_uid		5495534	0					
ANR	5495561	PtrMemberAccess	pcache ( ) -> get_user_uid		5495534	0					
ANR	5495562	CallExpression	pcache ( )		5495534	0					
ANR	5495563	Callee	pcache		5495534	0					
ANR	5495564	Identifier	pcache		5495534	0					
ANR	5495565	ArgumentList			5495534	1					
ANR	5495566	Identifier	get_user_uid		5495534	1					
ANR	5495567	ArgumentList	"""nobody"""		5495534	1					
ANR	5495568	Argument	"""nobody"""		5495534	0					
ANR	5495569	PrimaryExpression	"""nobody"""		5495534	0					
ANR	5495570	Argument	nobody_uid		5495534	1					
ANR	5495571	Identifier	nobody_uid		5495534	0					
ANR	5495572	CallExpression	"pcache ( ) -> get_user_gid ( ""nobody"" , nobody_gid )"		5495534	1					
ANR	5495573	Callee	pcache ( ) -> get_user_gid		5495534	0					
ANR	5495574	PtrMemberAccess	pcache ( ) -> get_user_gid		5495534	0					
ANR	5495575	CallExpression	pcache ( )		5495534	0					
ANR	5495576	Callee	pcache		5495534	0					
ANR	5495577	Identifier	pcache		5495534	0					
ANR	5495578	ArgumentList			5495534	1					
ANR	5495579	Identifier	get_user_gid		5495534	1					
ANR	5495580	ArgumentList	"""nobody"""		5495534	1					
ANR	5495581	Argument	"""nobody"""		5495534	0					
ANR	5495582	PrimaryExpression	"""nobody"""		5495534	0					
ANR	5495583	Argument	nobody_gid		5495534	1					
ANR	5495584	Identifier	nobody_gid		5495534	0					
ANR	5495585	IfStatement	if ( ! result )		5495534	4					
ANR	5495586	Condition	! result	988:5:27384:27391	5495534	0	True				
ANR	5495587	UnaryOperationExpression	! result		5495534	0					
ANR	5495588	UnaryOperator	!		5495534	0					
ANR	5495589	Identifier	result		5495534	1					
ANR	5495590	CompoundStatement		22:16:693:693	5495534	1					
ANR	5495591	ExpressionStatement	nobody_uid = 59999	994:2:27529:27547	5495534	0	True				
ANR	5495592	AssignmentExpression	nobody_uid = 59999		5495534	0		=			
ANR	5495593	Identifier	nobody_uid		5495534	0					
ANR	5495594	PrimaryExpression	59999		5495534	1					
ANR	5495595	ExpressionStatement	nobody_gid = 59999	995:2:27551:27569	5495534	1	True				
ANR	5495596	AssignmentExpression	nobody_gid = 59999		5495534	0		=			
ANR	5495597	Identifier	nobody_gid		5495534	0					
ANR	5495598	PrimaryExpression	59999		5495534	1					
ANR	5495599	IfStatement	if ( ( nobody_uid > 59999 ) || ( nobody_uid <= 0 ) )		5495534	5					
ANR	5495600	Condition	( nobody_uid > 59999 ) || ( nobody_uid <= 0 )	1011:5:28024:28064	5495534	0	True				
ANR	5495601	OrExpression	( nobody_uid > 59999 ) || ( nobody_uid <= 0 )		5495534	0		||			
ANR	5495602	RelationalExpression	nobody_uid > 59999		5495534	0		>			
ANR	5495603	Identifier	nobody_uid		5495534	0					
ANR	5495604	PrimaryExpression	59999		5495534	1					
ANR	5495605	RelationalExpression	nobody_uid <= 0		5495534	1		<=			
ANR	5495606	Identifier	nobody_uid		5495534	0					
ANR	5495607	PrimaryExpression	0		5495534	1					
ANR	5495608	CompoundStatement		45:49:1366:1366	5495534	1					
ANR	5495609	ExpressionStatement	nobody_uid = 59999	1012:2:28072:28090	5495534	0	True				
ANR	5495610	AssignmentExpression	nobody_uid = 59999		5495534	0		=			
ANR	5495611	Identifier	nobody_uid		5495534	0					
ANR	5495612	PrimaryExpression	59999		5495534	1					
ANR	5495613	IfStatement	if ( ( nobody_gid > 59999 ) || ( nobody_gid <= 0 ) )		5495534	6					
ANR	5495614	Condition	( nobody_gid > 59999 ) || ( nobody_gid <= 0 )	1014:5:28100:28140	5495534	0	True				
ANR	5495615	OrExpression	( nobody_gid > 59999 ) || ( nobody_gid <= 0 )		5495534	0		||			
ANR	5495616	RelationalExpression	nobody_gid > 59999		5495534	0		>			
ANR	5495617	Identifier	nobody_gid		5495534	0					
ANR	5495618	PrimaryExpression	59999		5495534	1					
ANR	5495619	RelationalExpression	nobody_gid <= 0		5495534	1		<=			
ANR	5495620	Identifier	nobody_gid		5495534	0					
ANR	5495621	PrimaryExpression	0		5495534	1					
ANR	5495622	CompoundStatement		48:49:1442:1442	5495534	1					
ANR	5495623	ExpressionStatement	nobody_gid = 59999	1015:2:28148:28166	5495534	0	True				
ANR	5495624	AssignmentExpression	nobody_gid = 59999		5495534	0		=			
ANR	5495625	Identifier	nobody_gid		5495534	0					
ANR	5495626	PrimaryExpression	59999		5495534	1					
ANR	5495627	IfStatement	if ( nobody_uid == 0 || nobody_gid == 0 )		5495534	7					
ANR	5495628	Condition	nobody_uid == 0 || nobody_gid == 0	1024:6:28413:28446	5495534	0	True				
ANR	5495629	OrExpression	nobody_uid == 0 || nobody_gid == 0		5495534	0		||			
ANR	5495630	EqualityExpression	nobody_uid == 0		5495534	0		==			
ANR	5495631	Identifier	nobody_uid		5495534	0					
ANR	5495632	PrimaryExpression	0		5495534	1					
ANR	5495633	EqualityExpression	nobody_gid == 0		5495534	1		==			
ANR	5495634	Identifier	nobody_gid		5495534	0					
ANR	5495635	PrimaryExpression	0		5495534	1					
ANR	5495636	CompoundStatement		58:43:1748:1748	5495534	1					
ANR	5495637	ReturnStatement	return FALSE ;	1025:2:28454:28466	5495534	0	True				
ANR	5495638	Identifier	FALSE		5495534	0					
ANR	5495639	ReturnStatement	"return set_user_ids_implementation ( ( uid_t ) nobody_uid , ( gid_t ) nobody_gid , ""nobody"" , is_quiet ) ;"	1030:1:28598:28712	5495534	8	True				
ANR	5495640	CallExpression	"set_user_ids_implementation ( ( uid_t ) nobody_uid , ( gid_t ) nobody_gid , ""nobody"" , is_quiet )"		5495534	0					
ANR	5495641	Callee	set_user_ids_implementation		5495534	0					
ANR	5495642	Identifier	set_user_ids_implementation		5495534	0					
ANR	5495643	ArgumentList	( uid_t ) nobody_uid		5495534	1					
ANR	5495644	Argument	( uid_t ) nobody_uid		5495534	0					
ANR	5495645	CastExpression	( uid_t ) nobody_uid		5495534	0					
ANR	5495646	CastTarget	uid_t		5495534	0					
ANR	5495647	Identifier	nobody_uid		5495534	1					
ANR	5495648	Argument	( gid_t ) nobody_gid		5495534	1					
ANR	5495649	CastExpression	( gid_t ) nobody_gid		5495534	0					
ANR	5495650	CastTarget	gid_t		5495534	0					
ANR	5495651	Identifier	nobody_gid		5495534	1					
ANR	5495652	Argument	"""nobody"""		5495534	2					
ANR	5495653	PrimaryExpression	"""nobody"""		5495534	0					
ANR	5495654	Argument	is_quiet		5495534	3					
ANR	5495655	Identifier	is_quiet		5495534	0					
ANR	5495656	ReturnType	int		5495534	1					
ANR	5495657	Identifier	init_nobody_ids		5495534	2					
ANR	5495658	ParameterList	int is_quiet		5495534	3					
ANR	5495659	Parameter	int is_quiet	966:17:26686:26697	5495534	0	True				
ANR	5495660	ParameterType	int		5495534	0					
ANR	5495661	Identifier	is_quiet		5495534	1					
ANR	5495662	CFGEntryNode	ENTRY		5495534		True				
ANR	5495663	CFGExitNode	EXIT		5495534		True				
ANR	5495664	Symbol	result		5495534						
ANR	5495665	Symbol	* pcache		5495534						
ANR	5495666	Symbol	pcache ( ) -> get_user_uid		5495534						
ANR	5495667	Symbol	nobody_uid		5495534						
ANR	5495668	Symbol	nobody_gid		5495534						
ANR	5495669	Symbol	FALSE		5495534						
ANR	5495670	Symbol	set_user_ids_implementation		5495534						
ANR	5495671	Symbol	is_quiet		5495534						
ANR	5495672	Symbol	pcache		5495534						
ANR	5495673	Symbol	pcache ( ) -> get_user_gid		5495534						
ANR	5495674	Function	init_user_ids_implementation	1036:0:28718:30072							
ANR	5495675	FunctionDef	"init_user_ids_implementation (const char username [ ] , int is_quiet)"		5495674	0					
ANR	5495676	CompoundStatement		1038:0:28790:30072	5495674	0					
ANR	5495677	IdentifierDeclStatement	int scm ;	1039:1:28793:28804	5495674	0	True				
ANR	5495678	IdentifierDecl	scm		5495674	0					
ANR	5495679	IdentifierDeclType	int		5495674	0					
ANR	5495680	Identifier	scm		5495674	1					
ANR	5495681	IdentifierDeclStatement	uid_t usr_uid ;	1040:1:28807:28824	5495674	1	True				
ANR	5495682	IdentifierDecl	usr_uid		5495674	0					
ANR	5495683	IdentifierDeclType	uid_t		5495674	0					
ANR	5495684	Identifier	usr_uid		5495674	1					
ANR	5495685	IdentifierDeclStatement	gid_t usr_gid ;	1041:1:28827:28843	5495674	2	True				
ANR	5495686	IdentifierDecl	usr_gid		5495674	0					
ANR	5495687	IdentifierDeclType	gid_t		5495674	0					
ANR	5495688	Identifier	usr_gid		5495674	1					
ANR	5495689	IfStatement	if ( ! can_switch_ids ( ) )		5495674	3					
ANR	5495690	Condition	! can_switch_ids ( )	1050:6:29121:29137	5495674	0	True				
ANR	5495691	UnaryOperationExpression	! can_switch_ids ( )		5495674	0					
ANR	5495692	UnaryOperator	!		5495674	0					
ANR	5495693	CallExpression	can_switch_ids ( )		5495674	1					
ANR	5495694	Callee	can_switch_ids		5495674	0					
ANR	5495695	Identifier	can_switch_ids		5495674	0					
ANR	5495696	ArgumentList			5495674	1					
ANR	5495697	CompoundStatement		13:26:350:350	5495674	1					
ANR	5495698	ReturnStatement	"return set_user_ids_implementation ( get_my_uid ( ) , get_my_gid ( ) , NULL , is_quiet ) ;"	1051:2:29145:29235	5495674	0	True				
ANR	5495699	CallExpression	"set_user_ids_implementation ( get_my_uid ( ) , get_my_gid ( ) , NULL , is_quiet )"		5495674	0					
ANR	5495700	Callee	set_user_ids_implementation		5495674	0					
ANR	5495701	Identifier	set_user_ids_implementation		5495674	0					
ANR	5495702	ArgumentList	get_my_uid ( )		5495674	1					
ANR	5495703	Argument	get_my_uid ( )		5495674	0					
ANR	5495704	CallExpression	get_my_uid ( )		5495674	0					
ANR	5495705	Callee	get_my_uid		5495674	0					
ANR	5495706	Identifier	get_my_uid		5495674	0					
ANR	5495707	ArgumentList			5495674	1					
ANR	5495708	Argument	get_my_gid ( )		5495674	1					
ANR	5495709	CallExpression	get_my_gid ( )		5495674	0					
ANR	5495710	Callee	get_my_gid		5495674	0					
ANR	5495711	Identifier	get_my_gid		5495674	0					
ANR	5495712	ArgumentList			5495674	1					
ANR	5495713	Argument	NULL		5495674	2					
ANR	5495714	Identifier	NULL		5495674	0					
ANR	5495715	Argument	is_quiet		5495674	3					
ANR	5495716	Identifier	is_quiet		5495674	0					
ANR	5495717	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )	1060:1:29456:29503	5495674	4	True				
ANR	5495718	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )		5495674	0		=			
ANR	5495719	Identifier	scm		5495674	0					
ANR	5495720	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNRECORDED )		5495674	1					
ANR	5495721	Callee	SetSyscalls		5495674	0					
ANR	5495722	Identifier	SetSyscalls		5495674	0					
ANR	5495723	ArgumentList	SYS_LOCAL | SYS_UNRECORDED		5495674	1					
ANR	5495724	Argument	SYS_LOCAL | SYS_UNRECORDED		5495674	0					
ANR	5495725	InclusiveOrExpression	SYS_LOCAL | SYS_UNRECORDED		5495674	0		|			
ANR	5495726	Identifier	SYS_LOCAL		5495674	0					
ANR	5495727	Identifier	SYS_UNRECORDED		5495674	1					
ANR	5495728	IfStatement	"if ( ! strcasecmp ( username , ""nobody"" ) )"		5495674	5					
ANR	5495729	Condition	"! strcasecmp ( username , ""nobody"" )"	1062:5:29511:29542	5495674	0	True				
ANR	5495730	UnaryOperationExpression	"! strcasecmp ( username , ""nobody"" )"		5495674	0					
ANR	5495731	UnaryOperator	!		5495674	0					
ANR	5495732	CallExpression	"strcasecmp ( username , ""nobody"" )"		5495674	1					
ANR	5495733	Callee	strcasecmp		5495674	0					
ANR	5495734	Identifier	strcasecmp		5495674	0					
ANR	5495735	ArgumentList	username		5495674	1					
ANR	5495736	Argument	username		5495674	0					
ANR	5495737	Identifier	username		5495674	0					
ANR	5495738	Argument	"""nobody"""		5495674	1					
ANR	5495739	PrimaryExpression	"""nobody"""		5495674	0					
ANR	5495740	CompoundStatement		25:40:755:755	5495674	1					
ANR	5495741	ReturnStatement	return init_nobody_ids ( is_quiet ) ;	1065:2:29650:29684	5495674	0	True				
ANR	5495742	CallExpression	init_nobody_ids ( is_quiet )		5495674	0					
ANR	5495743	Callee	init_nobody_ids		5495674	0					
ANR	5495744	Identifier	init_nobody_ids		5495674	0					
ANR	5495745	ArgumentList	is_quiet		5495674	1					
ANR	5495746	Argument	is_quiet		5495674	0					
ANR	5495747	Identifier	is_quiet		5495674	0					
ANR	5495748	IfStatement	"if ( ! ( pcache ( ) -> get_user_uid ( username , usr_uid ) ) || ! ( pcache ( ) -> get_user_gid ( username , usr_gid ) ) )"		5495674	6					
ANR	5495749	Condition	"! ( pcache ( ) -> get_user_uid ( username , usr_uid ) ) || ! ( pcache ( ) -> get_user_gid ( username , usr_gid ) )"	1068:5:29695:29789	5495674	0	True				
ANR	5495750	OrExpression	"! ( pcache ( ) -> get_user_uid ( username , usr_uid ) ) || ! ( pcache ( ) -> get_user_gid ( username , usr_gid ) )"		5495674	0		||			
ANR	5495751	UnaryOperationExpression	"! ( pcache ( ) -> get_user_uid ( username , usr_uid ) )"		5495674	0					
ANR	5495752	UnaryOperator	!		5495674	0					
ANR	5495753	CallExpression	"pcache ( ) -> get_user_uid ( username , usr_uid )"		5495674	1					
ANR	5495754	Callee	pcache ( ) -> get_user_uid		5495674	0					
ANR	5495755	PtrMemberAccess	pcache ( ) -> get_user_uid		5495674	0					
ANR	5495756	CallExpression	pcache ( )		5495674	0					
ANR	5495757	Callee	pcache		5495674	0					
ANR	5495758	Identifier	pcache		5495674	0					
ANR	5495759	ArgumentList			5495674	1					
ANR	5495760	Identifier	get_user_uid		5495674	1					
ANR	5495761	ArgumentList	username		5495674	1					
ANR	5495762	Argument	username		5495674	0					
ANR	5495763	Identifier	username		5495674	0					
ANR	5495764	Argument	usr_uid		5495674	1					
ANR	5495765	Identifier	usr_uid		5495674	0					
ANR	5495766	UnaryOperationExpression	"! ( pcache ( ) -> get_user_gid ( username , usr_gid ) )"		5495674	1					
ANR	5495767	UnaryOperator	!		5495674	0					
ANR	5495768	CallExpression	"pcache ( ) -> get_user_gid ( username , usr_gid )"		5495674	1					
ANR	5495769	Callee	pcache ( ) -> get_user_gid		5495674	0					
ANR	5495770	PtrMemberAccess	pcache ( ) -> get_user_gid		5495674	0					
ANR	5495771	CallExpression	pcache ( )		5495674	0					
ANR	5495772	Callee	pcache		5495674	0					
ANR	5495773	Identifier	pcache		5495674	0					
ANR	5495774	ArgumentList			5495674	1					
ANR	5495775	Identifier	get_user_gid		5495674	1					
ANR	5495776	ArgumentList	username		5495674	1					
ANR	5495777	Argument	username		5495674	0					
ANR	5495778	Identifier	username		5495674	0					
ANR	5495779	Argument	usr_gid		5495674	1					
ANR	5495780	Identifier	usr_gid		5495674	0					
ANR	5495781	CompoundStatement		32:50:1002:1002	5495674	1					
ANR	5495782	IfStatement	if ( ! is_quiet )		5495674	0					
ANR	5495783	Condition	! is_quiet	1070:6:29801:29810	5495674	0	True				
ANR	5495784	UnaryOperationExpression	! is_quiet		5495674	0					
ANR	5495785	UnaryOperator	!		5495674	0					
ANR	5495786	Identifier	is_quiet		5495674	1					
ANR	5495787	CompoundStatement		33:19:1023:1023	5495674	1					
ANR	5495788	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s not in passwd file\\n"" , username )"	1071:3:29819:29875	5495674	0	True				
ANR	5495789	CallExpression	"dprintf ( D_ALWAYS , ""%s not in passwd file\\n"" , username )"		5495674	0					
ANR	5495790	Callee	dprintf		5495674	0					
ANR	5495791	Identifier	dprintf		5495674	0					
ANR	5495792	ArgumentList	D_ALWAYS		5495674	1					
ANR	5495793	Argument	D_ALWAYS		5495674	0					
ANR	5495794	Identifier	D_ALWAYS		5495674	0					
ANR	5495795	Argument	"""%s not in passwd file\\n"""		5495674	1					
ANR	5495796	PrimaryExpression	"""%s not in passwd file\\n"""		5495674	0					
ANR	5495797	Argument	username		5495674	2					
ANR	5495798	Identifier	username		5495674	0					
ANR	5495799	ExpressionStatement	( void ) endpwent ( )	1073:2:29883:29899	5495674	1	True				
ANR	5495800	CastExpression	( void ) endpwent ( )		5495674	0					
ANR	5495801	CastTarget	void		5495674	0					
ANR	5495802	CallExpression	endpwent ( )		5495674	1					
ANR	5495803	Callee	endpwent		5495674	0					
ANR	5495804	Identifier	endpwent		5495674	0					
ANR	5495805	ArgumentList			5495674	1					
ANR	5495806	ExpressionStatement	( void ) SetSyscalls ( scm )	1074:2:29903:29927	5495674	2	True				
ANR	5495807	CastExpression	( void ) SetSyscalls ( scm )		5495674	0					
ANR	5495808	CastTarget	void		5495674	0					
ANR	5495809	CallExpression	SetSyscalls ( scm )		5495674	1					
ANR	5495810	Callee	SetSyscalls		5495674	0					
ANR	5495811	Identifier	SetSyscalls		5495674	0					
ANR	5495812	ArgumentList	scm		5495674	1					
ANR	5495813	Argument	scm		5495674	0					
ANR	5495814	Identifier	scm		5495674	0					
ANR	5495815	ReturnStatement	return FALSE ;	1075:2:29931:29943	5495674	3	True				
ANR	5495816	Identifier	FALSE		5495674	0					
ANR	5495817	ExpressionStatement	( void ) endpwent ( )	1077:1:29949:29965	5495674	7	True				
ANR	5495818	CastExpression	( void ) endpwent ( )		5495674	0					
ANR	5495819	CastTarget	void		5495674	0					
ANR	5495820	CallExpression	endpwent ( )		5495674	1					
ANR	5495821	Callee	endpwent		5495674	0					
ANR	5495822	Identifier	endpwent		5495674	0					
ANR	5495823	ArgumentList			5495674	1					
ANR	5495824	ExpressionStatement	( void ) SetSyscalls ( scm )	1078:1:29968:29992	5495674	8	True				
ANR	5495825	CastExpression	( void ) SetSyscalls ( scm )		5495674	0					
ANR	5495826	CastTarget	void		5495674	0					
ANR	5495827	CallExpression	SetSyscalls ( scm )		5495674	1					
ANR	5495828	Callee	SetSyscalls		5495674	0					
ANR	5495829	Identifier	SetSyscalls		5495674	0					
ANR	5495830	ArgumentList	scm		5495674	1					
ANR	5495831	Argument	scm		5495674	0					
ANR	5495832	Identifier	scm		5495674	0					
ANR	5495833	ReturnStatement	"return set_user_ids_implementation ( usr_uid , usr_gid , username , is_quiet ) ;"	1079:1:29995:30069	5495674	9	True				
ANR	5495834	CallExpression	"set_user_ids_implementation ( usr_uid , usr_gid , username , is_quiet )"		5495674	0					
ANR	5495835	Callee	set_user_ids_implementation		5495674	0					
ANR	5495836	Identifier	set_user_ids_implementation		5495674	0					
ANR	5495837	ArgumentList	usr_uid		5495674	1					
ANR	5495838	Argument	usr_uid		5495674	0					
ANR	5495839	Identifier	usr_uid		5495674	0					
ANR	5495840	Argument	usr_gid		5495674	1					
ANR	5495841	Identifier	usr_gid		5495674	0					
ANR	5495842	Argument	username		5495674	2					
ANR	5495843	Identifier	username		5495674	0					
ANR	5495844	Argument	is_quiet		5495674	3					
ANR	5495845	Identifier	is_quiet		5495674	0					
ANR	5495846	ReturnType	int		5495674	1					
ANR	5495847	Identifier	init_user_ids_implementation		5495674	2					
ANR	5495848	ParameterList	"const char username [ ] , int is_quiet"		5495674	3					
ANR	5495849	Parameter	const char username [ ]	1037:30:28752:28772	5495674	0	True				
ANR	5495850	ParameterType	const char [ ]		5495674	0					
ANR	5495851	Identifier	username		5495674	1					
ANR	5495852	Parameter	int is_quiet	1037:53:28775:28786	5495674	1	True				
ANR	5495853	ParameterType	int		5495674	0					
ANR	5495854	Identifier	is_quiet		5495674	1					
ANR	5495855	CFGEntryNode	ENTRY		5495674		True				
ANR	5495856	CFGExitNode	EXIT		5495674		True				
ANR	5495857	Symbol	get_my_gid		5495674						
ANR	5495858	Symbol	NULL		5495674						
ANR	5495859	Symbol	D_ALWAYS		5495674						
ANR	5495860	Symbol	init_nobody_ids		5495674						
ANR	5495861	Symbol	set_user_ids_implementation		5495674						
ANR	5495862	Symbol	is_quiet		5495674						
ANR	5495863	Symbol	usr_uid		5495674						
ANR	5495864	Symbol	pcache		5495674						
ANR	5495865	Symbol	pcache ( ) -> get_user_gid		5495674						
ANR	5495866	Symbol	SYS_UNRECORDED		5495674						
ANR	5495867	Symbol	pcache ( ) -> get_user_uid		5495674						
ANR	5495868	Symbol	* pcache		5495674						
ANR	5495869	Symbol	can_switch_ids		5495674						
ANR	5495870	Symbol	SYS_LOCAL		5495674						
ANR	5495871	Symbol	SetSyscalls		5495674						
ANR	5495872	Symbol	FALSE		5495674						
ANR	5495873	Symbol	scm		5495674						
ANR	5495874	Symbol	get_my_uid		5495674						
ANR	5495875	Symbol	strcasecmp		5495674						
ANR	5495876	Symbol	usr_gid		5495674						
ANR	5495877	Symbol	username		5495674						
ANR	5495878	Function	init_user_ids_quiet	1090:0:30246:30350							
ANR	5495879	FunctionDef	init_user_ids_quiet (const char username [ ])		5495878	0					
ANR	5495880	CompoundStatement		1091:45:30295:30350	5495878	0					
ANR	5495881	ReturnStatement	"return init_user_ids_implementation ( username , 1 ) ;"	1092:1:30298:30348	5495878	0	True				
ANR	5495882	CallExpression	"init_user_ids_implementation ( username , 1 )"		5495878	0					
ANR	5495883	Callee	init_user_ids_implementation		5495878	0					
ANR	5495884	Identifier	init_user_ids_implementation		5495878	0					
ANR	5495885	ArgumentList	username		5495878	1					
ANR	5495886	Argument	username		5495878	0					
ANR	5495887	Identifier	username		5495878	0					
ANR	5495888	Argument	1		5495878	1					
ANR	5495889	PrimaryExpression	1		5495878	0					
ANR	5495890	ReturnType	int		5495878	1					
ANR	5495891	Identifier	init_user_ids_quiet		5495878	2					
ANR	5495892	ParameterList	const char username [ ]		5495878	3					
ANR	5495893	Parameter	const char username [ ]	1091:21:30271:30291	5495878	0	True				
ANR	5495894	ParameterType	const char [ ]		5495878	0					
ANR	5495895	Identifier	username		5495878	1					
ANR	5495896	CFGEntryNode	ENTRY		5495878		True				
ANR	5495897	CFGExitNode	EXIT		5495878		True				
ANR	5495898	Symbol	init_user_ids_implementation		5495878						
ANR	5495899	Symbol	username		5495878						
ANR	5495900	Function	set_user_ids	1096:0:30354:30453							
ANR	5495901	FunctionDef	"set_user_ids (uid_t uid , gid_t gid)"		5495900	0					
ANR	5495902	CompoundStatement		1098:0:30393:30453	5495900	0					
ANR	5495903	ReturnStatement	"return set_user_ids_implementation ( uid , gid , NULL , 0 ) ;"	1099:1:30396:30451	5495900	0	True				
ANR	5495904	CallExpression	"set_user_ids_implementation ( uid , gid , NULL , 0 )"		5495900	0					
ANR	5495905	Callee	set_user_ids_implementation		5495900	0					
ANR	5495906	Identifier	set_user_ids_implementation		5495900	0					
ANR	5495907	ArgumentList	uid		5495900	1					
ANR	5495908	Argument	uid		5495900	0					
ANR	5495909	Identifier	uid		5495900	0					
ANR	5495910	Argument	gid		5495900	1					
ANR	5495911	Identifier	gid		5495900	0					
ANR	5495912	Argument	NULL		5495900	2					
ANR	5495913	Identifier	NULL		5495900	0					
ANR	5495914	Argument	0		5495900	3					
ANR	5495915	PrimaryExpression	0		5495900	0					
ANR	5495916	ReturnType	int		5495900	1					
ANR	5495917	Identifier	set_user_ids		5495900	2					
ANR	5495918	ParameterList	"uid_t uid , gid_t gid"		5495900	3					
ANR	5495919	Parameter	uid_t uid	1097:13:30371:30379	5495900	0	True				
ANR	5495920	ParameterType	uid_t		5495900	0					
ANR	5495921	Identifier	uid		5495900	1					
ANR	5495922	Parameter	gid_t gid	1097:24:30382:30390	5495900	1	True				
ANR	5495923	ParameterType	gid_t		5495900	0					
ANR	5495924	Identifier	gid		5495900	1					
ANR	5495925	CFGEntryNode	ENTRY		5495900		True				
ANR	5495926	CFGExitNode	EXIT		5495900		True				
ANR	5495927	Symbol	uid		5495900						
ANR	5495928	Symbol	gid		5495900						
ANR	5495929	Symbol	NULL		5495900						
ANR	5495930	Symbol	set_user_ids_implementation		5495900						
ANR	5495931	Function	set_user_ids_quiet	1103:0:30457:30562							
ANR	5495932	FunctionDef	"set_user_ids_quiet (uid_t uid , gid_t gid)"		5495931	0					
ANR	5495933	CompoundStatement		1105:0:30502:30562	5495931	0					
ANR	5495934	ReturnStatement	"return set_user_ids_implementation ( uid , gid , NULL , 1 ) ;"	1106:1:30505:30560	5495931	0	True				
ANR	5495935	CallExpression	"set_user_ids_implementation ( uid , gid , NULL , 1 )"		5495931	0					
ANR	5495936	Callee	set_user_ids_implementation		5495931	0					
ANR	5495937	Identifier	set_user_ids_implementation		5495931	0					
ANR	5495938	ArgumentList	uid		5495931	1					
ANR	5495939	Argument	uid		5495931	0					
ANR	5495940	Identifier	uid		5495931	0					
ANR	5495941	Argument	gid		5495931	1					
ANR	5495942	Identifier	gid		5495931	0					
ANR	5495943	Argument	NULL		5495931	2					
ANR	5495944	Identifier	NULL		5495931	0					
ANR	5495945	Argument	1		5495931	3					
ANR	5495946	PrimaryExpression	1		5495931	0					
ANR	5495947	ReturnType	int		5495931	1					
ANR	5495948	Identifier	set_user_ids_quiet		5495931	2					
ANR	5495949	ParameterList	"uid_t uid , gid_t gid"		5495931	3					
ANR	5495950	Parameter	uid_t uid	1104:19:30480:30488	5495931	0	True				
ANR	5495951	ParameterType	uid_t		5495931	0					
ANR	5495952	Identifier	uid		5495931	1					
ANR	5495953	Parameter	gid_t gid	1104:30:30491:30499	5495931	1	True				
ANR	5495954	ParameterType	gid_t		5495931	0					
ANR	5495955	Identifier	gid		5495931	1					
ANR	5495956	CFGEntryNode	ENTRY		5495931		True				
ANR	5495957	CFGExitNode	EXIT		5495931		True				
ANR	5495958	Symbol	uid		5495931						
ANR	5495959	Symbol	gid		5495931						
ANR	5495960	Symbol	NULL		5495931						
ANR	5495961	Symbol	set_user_ids_implementation		5495931						
ANR	5495962	Function	set_user_tracking_gid	1109:0:30565:30643							
ANR	5495963	FunctionDef	set_user_tracking_gid (gid_t tracking_gid)		5495962	0					
ANR	5495964	CompoundStatement		1111:0:30612:30643	5495962	0					
ANR	5495965	ExpressionStatement	TrackingGid = tracking_gid	1112:1:30615:30641	5495962	0	True				
ANR	5495966	AssignmentExpression	TrackingGid = tracking_gid		5495962	0		=			
ANR	5495967	Identifier	TrackingGid		5495962	0					
ANR	5495968	Identifier	tracking_gid		5495962	1					
ANR	5495969	ReturnType	void		5495962	1					
ANR	5495970	Identifier	set_user_tracking_gid		5495962	2					
ANR	5495971	ParameterList	gid_t tracking_gid		5495962	3					
ANR	5495972	Parameter	gid_t tracking_gid	1110:22:30592:30609	5495962	0	True				
ANR	5495973	ParameterType	gid_t		5495962	0					
ANR	5495974	Identifier	tracking_gid		5495962	1					
ANR	5495975	CFGEntryNode	ENTRY		5495962		True				
ANR	5495976	CFGExitNode	EXIT		5495962		True				
ANR	5495977	Symbol	tracking_gid		5495962						
ANR	5495978	Symbol	TrackingGid		5495962						
ANR	5495979	Function	unset_user_tracking_gid	1115:0:30646:30697							
ANR	5495980	FunctionDef	unset_user_tracking_gid ()		5495979	0					
ANR	5495981	CompoundStatement		1117:0:30677:30697	5495979	0					
ANR	5495982	ExpressionStatement	TrackingGid = 0	1118:1:30680:30695	5495979	0	True				
ANR	5495983	AssignmentExpression	TrackingGid = 0		5495979	0		=			
ANR	5495984	Identifier	TrackingGid		5495979	0					
ANR	5495985	PrimaryExpression	0		5495979	1					
ANR	5495986	ReturnType	void		5495979	1					
ANR	5495987	Identifier	unset_user_tracking_gid		5495979	2					
ANR	5495988	ParameterList			5495979	3					
ANR	5495989	CFGEntryNode	ENTRY		5495979		True				
ANR	5495990	CFGExitNode	EXIT		5495979		True				
ANR	5495991	Symbol	TrackingGid		5495979						
ANR	5495992	Function	uninit_user_ids	1121:0:30700:30749							
ANR	5495993	FunctionDef	uninit_user_ids ()		5495992	0					
ANR	5495994	CompoundStatement		1123:0:30723:30749	5495992	0					
ANR	5495995	ExpressionStatement	UserIdsInited = FALSE	1124:1:30726:30747	5495992	0	True				
ANR	5495996	AssignmentExpression	UserIdsInited = FALSE		5495992	0		=			
ANR	5495997	Identifier	UserIdsInited		5495992	0					
ANR	5495998	Identifier	FALSE		5495992	1					
ANR	5495999	ReturnType	void		5495992	1					
ANR	5496000	Identifier	uninit_user_ids		5495992	2					
ANR	5496001	ParameterList			5495992	3					
ANR	5496002	CFGEntryNode	ENTRY		5495992		True				
ANR	5496003	CFGExitNode	EXIT		5495992		True				
ANR	5496004	Symbol	UserIdsInited		5495992						
ANR	5496005	Symbol	FALSE		5495992						
ANR	5496006	Function	uninit_file_owner_ids	1128:0:30753:30810							
ANR	5496007	FunctionDef	uninit_file_owner_ids ()		5496006	0					
ANR	5496008	CompoundStatement		1130:0:30783:30810	5496006	0					
ANR	5496009	ExpressionStatement	OwnerIdsInited = FALSE	1131:1:30786:30808	5496006	0	True				
ANR	5496010	AssignmentExpression	OwnerIdsInited = FALSE		5496006	0		=			
ANR	5496011	Identifier	OwnerIdsInited		5496006	0					
ANR	5496012	Identifier	FALSE		5496006	1					
ANR	5496013	ReturnType	void		5496006	1					
ANR	5496014	Identifier	uninit_file_owner_ids		5496006	2					
ANR	5496015	ParameterList			5496006	3					
ANR	5496016	CFGEntryNode	ENTRY		5496006		True				
ANR	5496017	CFGExitNode	EXIT		5496006		True				
ANR	5496018	Symbol	OwnerIdsInited		5496006						
ANR	5496019	Symbol	FALSE		5496006						
ANR	5496020	Function	set_file_owner_ids	1135:0:30814:31393							
ANR	5496021	FunctionDef	"set_file_owner_ids (uid_t uid , gid_t gid)"		5496020	0					
ANR	5496022	CompoundStatement		1137:0:30861:31393	5496020	0					
ANR	5496023	IfStatement	if ( OwnerIdsInited && OwnerUid != uid )		5496020	0					
ANR	5496024	Condition	OwnerIdsInited && OwnerUid != uid	1138:5:30868:30900	5496020	0	True				
ANR	5496025	AndExpression	OwnerIdsInited && OwnerUid != uid		5496020	0		&&			
ANR	5496026	Identifier	OwnerIdsInited		5496020	0					
ANR	5496027	EqualityExpression	OwnerUid != uid		5496020	1		!=			
ANR	5496028	Identifier	OwnerUid		5496020	0					
ANR	5496029	Identifier	uid		5496020	1					
ANR	5496030	CompoundStatement		2:42:43:43	5496020	1					
ANR	5496031	ExpressionStatement	"dprintf ( D_ALWAYS , ""warning: setting OwnerUid to %d, was %d previosly\\n"" , ( int ) uid , ( int ) OwnerUid )"	1139:2:30909:31019	5496020	0	True				
ANR	5496032	CallExpression	"dprintf ( D_ALWAYS , ""warning: setting OwnerUid to %d, was %d previosly\\n"" , ( int ) uid , ( int ) OwnerUid )"		5496020	0					
ANR	5496033	Callee	dprintf		5496020	0					
ANR	5496034	Identifier	dprintf		5496020	0					
ANR	5496035	ArgumentList	D_ALWAYS		5496020	1					
ANR	5496036	Argument	D_ALWAYS		5496020	0					
ANR	5496037	Identifier	D_ALWAYS		5496020	0					
ANR	5496038	Argument	"""warning: setting OwnerUid to %d, was %d previosly\\n"""		5496020	1					
ANR	5496039	PrimaryExpression	"""warning: setting OwnerUid to %d, was %d previosly\\n"""		5496020	0					
ANR	5496040	Argument	( int ) uid		5496020	2					
ANR	5496041	CastExpression	( int ) uid		5496020	0					
ANR	5496042	CastTarget	int		5496020	0					
ANR	5496043	Identifier	uid		5496020	1					
ANR	5496044	Argument	( int ) OwnerUid		5496020	3					
ANR	5496045	CastExpression	( int ) OwnerUid		5496020	0					
ANR	5496046	CastTarget	int		5496020	0					
ANR	5496047	Identifier	OwnerUid		5496020	1					
ANR	5496048	ExpressionStatement	OwnerUid = uid	1143:1:31025:31039	5496020	1	True				
ANR	5496049	AssignmentExpression	OwnerUid = uid		5496020	0		=			
ANR	5496050	Identifier	OwnerUid		5496020	0					
ANR	5496051	Identifier	uid		5496020	1					
ANR	5496052	ExpressionStatement	OwnerGid = gid	1144:1:31042:31056	5496020	2	True				
ANR	5496053	AssignmentExpression	OwnerGid = gid		5496020	0		=			
ANR	5496054	Identifier	OwnerGid		5496020	0					
ANR	5496055	Identifier	gid		5496020	1					
ANR	5496056	ExpressionStatement	OwnerIdsInited = TRUE	1145:1:31059:31080	5496020	3	True				
ANR	5496057	AssignmentExpression	OwnerIdsInited = TRUE		5496020	0		=			
ANR	5496058	Identifier	OwnerIdsInited		5496020	0					
ANR	5496059	Identifier	TRUE		5496020	1					
ANR	5496060	IfStatement	if ( OwnerName )		5496020	4					
ANR	5496061	Condition	OwnerName	1150:5:31258:31266	5496020	0	True				
ANR	5496062	Identifier	OwnerName		5496020	0					
ANR	5496063	CompoundStatement		14:17:408:408	5496020	1					
ANR	5496064	ExpressionStatement	free ( OwnerName )	1151:2:31274:31291	5496020	0	True				
ANR	5496065	CallExpression	free ( OwnerName )		5496020	0					
ANR	5496066	Callee	free		5496020	0					
ANR	5496067	Identifier	free		5496020	0					
ANR	5496068	ArgumentList	OwnerName		5496020	1					
ANR	5496069	Argument	OwnerName		5496020	0					
ANR	5496070	Identifier	OwnerName		5496020	0					
ANR	5496071	IfStatement	"if ( ! ( pcache ( ) -> get_user_name ( OwnerUid , OwnerName ) ) )"		5496020	5					
ANR	5496072	Condition	"! ( pcache ( ) -> get_user_name ( OwnerUid , OwnerName ) )"	1153:6:31302:31350	5496020	0	True				
ANR	5496073	UnaryOperationExpression	"! ( pcache ( ) -> get_user_name ( OwnerUid , OwnerName ) )"		5496020	0					
ANR	5496074	UnaryOperator	!		5496020	0					
ANR	5496075	CallExpression	"pcache ( ) -> get_user_name ( OwnerUid , OwnerName )"		5496020	1					
ANR	5496076	Callee	pcache ( ) -> get_user_name		5496020	0					
ANR	5496077	PtrMemberAccess	pcache ( ) -> get_user_name		5496020	0					
ANR	5496078	CallExpression	pcache ( )		5496020	0					
ANR	5496079	Callee	pcache		5496020	0					
ANR	5496080	Identifier	pcache		5496020	0					
ANR	5496081	ArgumentList			5496020	1					
ANR	5496082	Identifier	get_user_name		5496020	1					
ANR	5496083	ArgumentList	OwnerUid		5496020	1					
ANR	5496084	Argument	OwnerUid		5496020	0					
ANR	5496085	Identifier	OwnerUid		5496020	0					
ANR	5496086	Argument	OwnerName		5496020	1					
ANR	5496087	Identifier	OwnerName		5496020	0					
ANR	5496088	CompoundStatement		17:58:492:492	5496020	1					
ANR	5496089	ExpressionStatement	OwnerName = NULL	1154:2:31358:31374	5496020	0	True				
ANR	5496090	AssignmentExpression	OwnerName = NULL		5496020	0		=			
ANR	5496091	Identifier	OwnerName		5496020	0					
ANR	5496092	Identifier	NULL		5496020	1					
ANR	5496093	ReturnStatement	return TRUE ;	1156:1:31380:31391	5496020	6	True				
ANR	5496094	Identifier	TRUE		5496020	0					
ANR	5496095	ReturnType	int		5496020	1					
ANR	5496096	Identifier	set_file_owner_ids		5496020	2					
ANR	5496097	ParameterList	"uid_t uid , gid_t gid"		5496020	3					
ANR	5496098	Parameter	uid_t uid	1136:20:30838:30846	5496020	0	True				
ANR	5496099	ParameterType	uid_t		5496020	0					
ANR	5496100	Identifier	uid		5496020	1					
ANR	5496101	Parameter	gid_t gid	1136:31:30849:30857	5496020	1	True				
ANR	5496102	ParameterType	gid_t		5496020	0					
ANR	5496103	Identifier	gid		5496020	1					
ANR	5496104	CFGEntryNode	ENTRY		5496020		True				
ANR	5496105	CFGExitNode	EXIT		5496020		True				
ANR	5496106	Symbol	OwnerIdsInited		5496020						
ANR	5496107	Symbol	* pcache		5496020						
ANR	5496108	Symbol	uid		5496020						
ANR	5496109	Symbol	OwnerName		5496020						
ANR	5496110	Symbol	gid		5496020						
ANR	5496111	Symbol	NULL		5496020						
ANR	5496112	Symbol	OwnerGid		5496020						
ANR	5496113	Symbol	OwnerUid		5496020						
ANR	5496114	Symbol	D_ALWAYS		5496020						
ANR	5496115	Symbol	TRUE		5496020						
ANR	5496116	Symbol	pcache		5496020						
ANR	5496117	Symbol	pcache ( ) -> get_user_name		5496020						
ANR	5496118	Function	get_priv_state	1160:0:31397:31457							
ANR	5496119	FunctionDef	get_priv_state ()		5496118	0					
ANR	5496120	CompoundStatement		1162:0:31429:31457	5496118	0					
ANR	5496121	ReturnStatement	return CurrentPrivState ;	1163:1:31432:31455	5496118	0	True				
ANR	5496122	Identifier	CurrentPrivState		5496118	0					
ANR	5496123	ReturnType	priv_state		5496118	1					
ANR	5496124	Identifier	get_priv_state		5496118	2					
ANR	5496125	ParameterList			5496118	3					
ANR	5496126	CFGEntryNode	ENTRY		5496118		True				
ANR	5496127	CFGExitNode	EXIT		5496118		True				
ANR	5496128	Symbol	CurrentPrivState		5496118						
ANR	5496129	Function	_set_priv	1166:0:31460:33590							
ANR	5496130	FunctionDef	"_set_priv (priv_state s , const char * file , int line , int dologging)"		5496129	0					
ANR	5496131	CompoundStatement		1168:0:31538:33590	5496129	0					
ANR	5496132	IdentifierDeclStatement	priv_state PrevPrivState = CurrentPrivState ;	1169:1:31541:31584	5496129	0	True				
ANR	5496133	IdentifierDecl	PrevPrivState = CurrentPrivState		5496129	0					
ANR	5496134	IdentifierDeclType	priv_state		5496129	0					
ANR	5496135	Identifier	PrevPrivState		5496129	1					
ANR	5496136	AssignmentExpression	PrevPrivState = CurrentPrivState		5496129	2		=			
ANR	5496137	Identifier	CurrentPrivState		5496129	0					
ANR	5496138	Identifier	CurrentPrivState		5496129	1					
ANR	5496139	IfStatement	if ( s == CurrentPrivState )		5496129	1					
ANR	5496140	Condition	s == CurrentPrivState	1170:5:31591:31611	5496129	0	True				
ANR	5496141	EqualityExpression	s == CurrentPrivState		5496129	0		==			
ANR	5496142	Identifier	s		5496129	0					
ANR	5496143	Identifier	CurrentPrivState		5496129	1					
ANR	5496144	ReturnStatement	return s ;	1170:28:31614:31622	5496129	1	True				
ANR	5496145	Identifier	s		5496129	0					
ANR	5496146	IfStatement	if ( CurrentPrivState == PRIV_USER_FINAL )		5496129	2					
ANR	5496147	Condition	CurrentPrivState == PRIV_USER_FINAL	1171:5:31629:31663	5496129	0	True				
ANR	5496148	EqualityExpression	CurrentPrivState == PRIV_USER_FINAL		5496129	0		==			
ANR	5496149	Identifier	CurrentPrivState		5496129	0					
ANR	5496150	Identifier	PRIV_USER_FINAL		5496129	1					
ANR	5496151	CompoundStatement		4:42:127:127	5496129	1					
ANR	5496152	ExpressionStatement	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_USER_FINAL\\n"" )"	1172:2:31670:31745	5496129	0	True				
ANR	5496153	CallExpression	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_USER_FINAL\\n"" )"		5496129	0					
ANR	5496154	Callee	dprintf		5496129	0					
ANR	5496155	Identifier	dprintf		5496129	0					
ANR	5496156	ArgumentList	D_ALWAYS		5496129	1					
ANR	5496157	Argument	D_ALWAYS		5496129	0					
ANR	5496158	Identifier	D_ALWAYS		5496129	0					
ANR	5496159	Argument	"""warning: attempted switch out of PRIV_USER_FINAL\\n"""		5496129	1					
ANR	5496160	PrimaryExpression	"""warning: attempted switch out of PRIV_USER_FINAL\\n"""		5496129	0					
ANR	5496161	ReturnStatement	return PRIV_USER_FINAL ;	1174:2:31749:31771	5496129	1	True				
ANR	5496162	Identifier	PRIV_USER_FINAL		5496129	0					
ANR	5496163	IfStatement	if ( CurrentPrivState == PRIV_CONDOR_FINAL )		5496129	3					
ANR	5496164	Condition	CurrentPrivState == PRIV_CONDOR_FINAL	1176:5:31781:31817	5496129	0	True				
ANR	5496165	EqualityExpression	CurrentPrivState == PRIV_CONDOR_FINAL		5496129	0		==			
ANR	5496166	Identifier	CurrentPrivState		5496129	0					
ANR	5496167	Identifier	PRIV_CONDOR_FINAL		5496129	1					
ANR	5496168	CompoundStatement		9:44:281:281	5496129	1					
ANR	5496169	ExpressionStatement	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"" )"	1177:2:31824:31901	5496129	0	True				
ANR	5496170	CallExpression	"dprintf ( D_ALWAYS , ""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"" )"		5496129	0					
ANR	5496171	Callee	dprintf		5496129	0					
ANR	5496172	Identifier	dprintf		5496129	0					
ANR	5496173	ArgumentList	D_ALWAYS		5496129	1					
ANR	5496174	Argument	D_ALWAYS		5496129	0					
ANR	5496175	Identifier	D_ALWAYS		5496129	0					
ANR	5496176	Argument	"""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"""		5496129	1					
ANR	5496177	PrimaryExpression	"""warning: attempted switch out of PRIV_CONDOR_FINAL\\n"""		5496129	0					
ANR	5496178	ReturnStatement	return PRIV_CONDOR_FINAL ;	1179:2:31905:31929	5496129	1	True				
ANR	5496179	Identifier	PRIV_CONDOR_FINAL		5496129	0					
ANR	5496180	ExpressionStatement	CurrentPrivState = s	1181:1:31935:31955	5496129	4	True				
ANR	5496181	AssignmentExpression	CurrentPrivState = s		5496129	0		=			
ANR	5496182	Identifier	CurrentPrivState		5496129	0					
ANR	5496183	Identifier	s		5496129	1					
ANR	5496184	IfStatement	if ( can_switch_ids ( ) )		5496129	5					
ANR	5496185	Condition	can_switch_ids ( )	1183:5:31963:31978	5496129	0	True				
ANR	5496186	CallExpression	can_switch_ids ( )		5496129	0					
ANR	5496187	Callee	can_switch_ids		5496129	0					
ANR	5496188	Identifier	can_switch_ids		5496129	0					
ANR	5496189	ArgumentList			5496129	1					
ANR	5496190	CompoundStatement		16:23:442:442	5496129	1					
ANR	5496191	SwitchStatement	switch ( s )		5496129	0					
ANR	5496192	Condition	s	1184:10:31993:31993	5496129	0	True				
ANR	5496193	Identifier	s		5496129	0					
ANR	5496194	CompoundStatement		17:13:457:457	5496129	1					
ANR	5496195	Label	case PRIV_ROOT :	1185:2:32000:32014	5496129	0	True				
ANR	5496196	Identifier	PRIV_ROOT		5496129	0					
ANR	5496197	ExpressionStatement	set_root_euid ( )	1186:3:32019:32034	5496129	1	True				
ANR	5496198	CallExpression	set_root_euid ( )		5496129	0					
ANR	5496199	Callee	set_root_euid		5496129	0					
ANR	5496200	Identifier	set_root_euid		5496129	0					
ANR	5496201	ArgumentList			5496129	1					
ANR	5496202	ExpressionStatement	set_root_egid ( )	1187:3:32039:32054	5496129	2	True				
ANR	5496203	CallExpression	set_root_egid ( )		5496129	0					
ANR	5496204	Callee	set_root_egid		5496129	0					
ANR	5496205	Identifier	set_root_egid		5496129	0					
ANR	5496206	ArgumentList			5496129	1					
ANR	5496207	BreakStatement	break ;	1188:3:32059:32064	5496129	3	True				
ANR	5496208	Label	case PRIV_CONDOR :	1189:2:32068:32084	5496129	4	True				
ANR	5496209	Identifier	PRIV_CONDOR		5496129	0					
ANR	5496210	ExpressionStatement	set_root_euid ( )	1190:3:32089:32104	5496129	5	True				
ANR	5496211	CallExpression	set_root_euid ( )		5496129	0					
ANR	5496212	Callee	set_root_euid		5496129	0					
ANR	5496213	Identifier	set_root_euid		5496129	0					
ANR	5496214	ArgumentList			5496129	1					
ANR	5496215	ExpressionStatement	set_condor_egid ( )	1191:3:32138:32155	5496129	6	True				
ANR	5496216	CallExpression	set_condor_egid ( )		5496129	0					
ANR	5496217	Callee	set_condor_egid		5496129	0					
ANR	5496218	Identifier	set_condor_egid		5496129	0					
ANR	5496219	ArgumentList			5496129	1					
ANR	5496220	ExpressionStatement	set_condor_euid ( )	1192:3:32160:32177	5496129	7	True				
ANR	5496221	CallExpression	set_condor_euid ( )		5496129	0					
ANR	5496222	Callee	set_condor_euid		5496129	0					
ANR	5496223	Identifier	set_condor_euid		5496129	0					
ANR	5496224	ArgumentList			5496129	1					
ANR	5496225	BreakStatement	break ;	1193:3:32182:32187	5496129	8	True				
ANR	5496226	Label	case PRIV_USER :	1194:2:32191:32205	5496129	9	True				
ANR	5496227	Identifier	PRIV_USER		5496129	0					
ANR	5496228	ExpressionStatement	set_root_euid ( )	1195:3:32210:32225	5496129	10	True				
ANR	5496229	CallExpression	set_root_euid ( )		5496129	0					
ANR	5496230	Callee	set_root_euid		5496129	0					
ANR	5496231	Identifier	set_root_euid		5496129	0					
ANR	5496232	ArgumentList			5496129	1					
ANR	5496233	ExpressionStatement	set_user_egid ( )	1196:3:32259:32274	5496129	11	True				
ANR	5496234	CallExpression	set_user_egid ( )		5496129	0					
ANR	5496235	Callee	set_user_egid		5496129	0					
ANR	5496236	Identifier	set_user_egid		5496129	0					
ANR	5496237	ArgumentList			5496129	1					
ANR	5496238	ExpressionStatement	set_user_euid ( )	1197:3:32279:32294	5496129	12	True				
ANR	5496239	CallExpression	set_user_euid ( )		5496129	0					
ANR	5496240	Callee	set_user_euid		5496129	0					
ANR	5496241	Identifier	set_user_euid		5496129	0					
ANR	5496242	ArgumentList			5496129	1					
ANR	5496243	BreakStatement	break ;	1198:3:32299:32304	5496129	13	True				
ANR	5496244	Label	case PRIV_FILE_OWNER :	1199:2:32308:32328	5496129	14	True				
ANR	5496245	Identifier	PRIV_FILE_OWNER		5496129	0					
ANR	5496246	ExpressionStatement	set_root_euid ( )	1200:3:32333:32348	5496129	15	True				
ANR	5496247	CallExpression	set_root_euid ( )		5496129	0					
ANR	5496248	Callee	set_root_euid		5496129	0					
ANR	5496249	Identifier	set_root_euid		5496129	0					
ANR	5496250	ArgumentList			5496129	1					
ANR	5496251	ExpressionStatement	set_owner_egid ( )	1201:3:32382:32398	5496129	16	True				
ANR	5496252	CallExpression	set_owner_egid ( )		5496129	0					
ANR	5496253	Callee	set_owner_egid		5496129	0					
ANR	5496254	Identifier	set_owner_egid		5496129	0					
ANR	5496255	ArgumentList			5496129	1					
ANR	5496256	ExpressionStatement	set_owner_euid ( )	1202:3:32403:32419	5496129	17	True				
ANR	5496257	CallExpression	set_owner_euid ( )		5496129	0					
ANR	5496258	Callee	set_owner_euid		5496129	0					
ANR	5496259	Identifier	set_owner_euid		5496129	0					
ANR	5496260	ArgumentList			5496129	1					
ANR	5496261	BreakStatement	break ;	1203:3:32424:32429	5496129	18	True				
ANR	5496262	Label	case PRIV_USER_FINAL :	1204:2:32433:32453	5496129	19	True				
ANR	5496263	Identifier	PRIV_USER_FINAL		5496129	0					
ANR	5496264	ExpressionStatement	set_root_euid ( )	1205:3:32458:32473	5496129	20	True				
ANR	5496265	CallExpression	set_root_euid ( )		5496129	0					
ANR	5496266	Callee	set_root_euid		5496129	0					
ANR	5496267	Identifier	set_root_euid		5496129	0					
ANR	5496268	ArgumentList			5496129	1					
ANR	5496269	ExpressionStatement	set_user_rgid ( )	1206:3:32507:32522	5496129	21	True				
ANR	5496270	CallExpression	set_user_rgid ( )		5496129	0					
ANR	5496271	Callee	set_user_rgid		5496129	0					
ANR	5496272	Identifier	set_user_rgid		5496129	0					
ANR	5496273	ArgumentList			5496129	1					
ANR	5496274	ExpressionStatement	set_user_ruid ( )	1207:3:32527:32542	5496129	22	True				
ANR	5496275	CallExpression	set_user_ruid ( )		5496129	0					
ANR	5496276	Callee	set_user_ruid		5496129	0					
ANR	5496277	Identifier	set_user_ruid		5496129	0					
ANR	5496278	ArgumentList			5496129	1					
ANR	5496279	BreakStatement	break ;	1208:3:32547:32552	5496129	23	True				
ANR	5496280	Label	case PRIV_CONDOR_FINAL :	1209:2:32556:32578	5496129	24	True				
ANR	5496281	Identifier	PRIV_CONDOR_FINAL		5496129	0					
ANR	5496282	ExpressionStatement	set_root_euid ( )	1210:3:32583:32598	5496129	25	True				
ANR	5496283	CallExpression	set_root_euid ( )		5496129	0					
ANR	5496284	Callee	set_root_euid		5496129	0					
ANR	5496285	Identifier	set_root_euid		5496129	0					
ANR	5496286	ArgumentList			5496129	1					
ANR	5496287	ExpressionStatement	set_condor_rgid ( )	1211:3:32632:32649	5496129	26	True				
ANR	5496288	CallExpression	set_condor_rgid ( )		5496129	0					
ANR	5496289	Callee	set_condor_rgid		5496129	0					
ANR	5496290	Identifier	set_condor_rgid		5496129	0					
ANR	5496291	ArgumentList			5496129	1					
ANR	5496292	ExpressionStatement	set_condor_ruid ( )	1212:3:32654:32671	5496129	27	True				
ANR	5496293	CallExpression	set_condor_ruid ( )		5496129	0					
ANR	5496294	Callee	set_condor_ruid		5496129	0					
ANR	5496295	Identifier	set_condor_ruid		5496129	0					
ANR	5496296	ArgumentList			5496129	1					
ANR	5496297	Label	case PRIV_UNKNOWN :	1213:2:32675:32692	5496129	28	True				
ANR	5496298	Identifier	PRIV_UNKNOWN		5496129	0					
ANR	5496299	BreakStatement	break ;	1214:3:32720:32725	5496129	29	True				
ANR	5496300	Label	default :	1215:2:32729:32736	5496129	30	True				
ANR	5496301	Identifier	default		5496129	0					
ANR	5496302	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_priv: Unknown priv state %d\\n"" , ( int ) s )"	1216:3:32741:32804	5496129	31	True				
ANR	5496303	CallExpression	"dprintf ( D_ALWAYS , ""set_priv: Unknown priv state %d\\n"" , ( int ) s )"		5496129	0					
ANR	5496304	Callee	dprintf		5496129	0					
ANR	5496305	Identifier	dprintf		5496129	0					
ANR	5496306	ArgumentList	D_ALWAYS		5496129	1					
ANR	5496307	Argument	D_ALWAYS		5496129	0					
ANR	5496308	Identifier	D_ALWAYS		5496129	0					
ANR	5496309	Argument	"""set_priv: Unknown priv state %d\\n"""		5496129	1					
ANR	5496310	PrimaryExpression	"""set_priv: Unknown priv state %d\\n"""		5496129	0					
ANR	5496311	Argument	( int ) s		5496129	2					
ANR	5496312	CastExpression	( int ) s		5496129	0					
ANR	5496313	CastTarget	int		5496129	0					
ANR	5496314	Identifier	s		5496129	1					
ANR	5496315	IfStatement	if ( dologging == NO_PRIV_MEMORY_CHANGES )		5496129	6					
ANR	5496316	Condition	dologging == NO_PRIV_MEMORY_CHANGES	1219:5:32818:32852	5496129	0	True				
ANR	5496317	EqualityExpression	dologging == NO_PRIV_MEMORY_CHANGES		5496129	0		==			
ANR	5496318	Identifier	dologging		5496129	0					
ANR	5496319	Identifier	NO_PRIV_MEMORY_CHANGES		5496129	1					
ANR	5496320	CompoundStatement		52:43:1317:1317	5496129	1					
ANR	5496321	ExpressionStatement	CurrentPrivState = PrevPrivState	1231:2:33445:33477	5496129	0	True				
ANR	5496322	AssignmentExpression	CurrentPrivState = PrevPrivState		5496129	0		=			
ANR	5496323	Identifier	CurrentPrivState		5496129	0					
ANR	5496324	Identifier	PrevPrivState		5496129	1					
ANR	5496325	ElseStatement	else		5496129	0					
ANR	5496326	IfStatement	if ( dologging )		5496129	0					
ANR	5496327	Condition	dologging	1233:10:33492:33500	5496129	0	True				
ANR	5496328	Identifier	dologging		5496129	0					
ANR	5496329	CompoundStatement		66:22:1965:1965	5496129	1					
ANR	5496330	ExpressionStatement	"log_priv ( PrevPrivState , CurrentPrivState , file , line )"	1234:2:33508:33561	5496129	0	True				
ANR	5496331	CallExpression	"log_priv ( PrevPrivState , CurrentPrivState , file , line )"		5496129	0					
ANR	5496332	Callee	log_priv		5496129	0					
ANR	5496333	Identifier	log_priv		5496129	0					
ANR	5496334	ArgumentList	PrevPrivState		5496129	1					
ANR	5496335	Argument	PrevPrivState		5496129	0					
ANR	5496336	Identifier	PrevPrivState		5496129	0					
ANR	5496337	Argument	CurrentPrivState		5496129	1					
ANR	5496338	Identifier	CurrentPrivState		5496129	0					
ANR	5496339	Argument	file		5496129	2					
ANR	5496340	Identifier	file		5496129	0					
ANR	5496341	Argument	line		5496129	3					
ANR	5496342	Identifier	line		5496129	0					
ANR	5496343	ReturnStatement	return PrevPrivState ;	1237:1:33568:33588	5496129	7	True				
ANR	5496344	Identifier	PrevPrivState		5496129	0					
ANR	5496345	ReturnType	priv_state		5496129	1					
ANR	5496346	Identifier	_set_priv		5496129	2					
ANR	5496347	ParameterList	"priv_state s , const char * file , int line , int dologging"		5496129	3					
ANR	5496348	Parameter	priv_state s	1167:10:31481:31492	5496129	0	True				
ANR	5496349	ParameterType	priv_state		5496129	0					
ANR	5496350	Identifier	s		5496129	1					
ANR	5496351	Parameter	const char * file	1167:24:31495:31510	5496129	1	True				
ANR	5496352	ParameterType	const char *		5496129	0					
ANR	5496353	Identifier	file		5496129	1					
ANR	5496354	Parameter	int line	1167:42:31513:31520	5496129	2	True				
ANR	5496355	ParameterType	int		5496129	0					
ANR	5496356	Identifier	line		5496129	1					
ANR	5496357	Parameter	int dologging	1167:52:31523:31535	5496129	3	True				
ANR	5496358	ParameterType	int		5496129	0					
ANR	5496359	Identifier	dologging		5496129	1					
ANR	5496360	CFGEntryNode	ENTRY		5496129		True				
ANR	5496361	CFGExitNode	EXIT		5496129		True				
ANR	5496362	Symbol	dologging		5496129						
ANR	5496363	Symbol	NO_PRIV_MEMORY_CHANGES		5496129						
ANR	5496364	Symbol	PRIV_USER_FINAL		5496129						
ANR	5496365	Symbol	s		5496129						
ANR	5496366	Symbol	file		5496129						
ANR	5496367	Symbol	PrevPrivState		5496129						
ANR	5496368	Symbol	can_switch_ids		5496129						
ANR	5496369	Symbol	line		5496129						
ANR	5496370	Symbol	CurrentPrivState		5496129						
ANR	5496371	Symbol	D_ALWAYS		5496129						
ANR	5496372	Symbol	PRIV_CONDOR_FINAL		5496129						
ANR	5496373	Function	get_condor_uid	1241:0:33595:33690							
ANR	5496374	FunctionDef	get_condor_uid ()		5496373	0					
ANR	5496375	CompoundStatement		1243:0:33618:33690	5496373	0					
ANR	5496376	IfStatement	if ( ! CondorIdsInited )		5496373	0					
ANR	5496377	Condition	! CondorIdsInited	1244:5:33625:33640	5496373	0	True				
ANR	5496378	UnaryOperationExpression	! CondorIdsInited		5496373	0					
ANR	5496379	UnaryOperator	!		5496373	0					
ANR	5496380	Identifier	CondorIdsInited		5496373	1					
ANR	5496381	CompoundStatement		2:24:25:25	5496373	1					
ANR	5496382	ExpressionStatement	init_condor_ids ( )	1245:2:33648:33665	5496373	0	True				
ANR	5496383	CallExpression	init_condor_ids ( )		5496373	0					
ANR	5496384	Callee	init_condor_ids		5496373	0					
ANR	5496385	Identifier	init_condor_ids		5496373	0					
ANR	5496386	ArgumentList			5496373	1					
ANR	5496387	ReturnStatement	return CondorUid ;	1248:1:33672:33688	5496373	1	True				
ANR	5496388	Identifier	CondorUid		5496373	0					
ANR	5496389	ReturnType	uid_t		5496373	1					
ANR	5496390	Identifier	get_condor_uid		5496373	2					
ANR	5496391	ParameterList			5496373	3					
ANR	5496392	CFGEntryNode	ENTRY		5496373		True				
ANR	5496393	CFGExitNode	EXIT		5496373		True				
ANR	5496394	Symbol	CondorUid		5496373						
ANR	5496395	Symbol	CondorIdsInited		5496373						
ANR	5496396	Function	get_condor_gid	1252:0:33694:33789							
ANR	5496397	FunctionDef	get_condor_gid ()		5496396	0					
ANR	5496398	CompoundStatement		1254:0:33717:33789	5496396	0					
ANR	5496399	IfStatement	if ( ! CondorIdsInited )		5496396	0					
ANR	5496400	Condition	! CondorIdsInited	1255:5:33724:33739	5496396	0	True				
ANR	5496401	UnaryOperationExpression	! CondorIdsInited		5496396	0					
ANR	5496402	UnaryOperator	!		5496396	0					
ANR	5496403	Identifier	CondorIdsInited		5496396	1					
ANR	5496404	CompoundStatement		2:24:25:25	5496396	1					
ANR	5496405	ExpressionStatement	init_condor_ids ( )	1256:2:33747:33764	5496396	0	True				
ANR	5496406	CallExpression	init_condor_ids ( )		5496396	0					
ANR	5496407	Callee	init_condor_ids		5496396	0					
ANR	5496408	Identifier	init_condor_ids		5496396	0					
ANR	5496409	ArgumentList			5496396	1					
ANR	5496410	ReturnStatement	return CondorGid ;	1259:1:33771:33787	5496396	1	True				
ANR	5496411	Identifier	CondorGid		5496396	0					
ANR	5496412	ReturnType	gid_t		5496396	1					
ANR	5496413	Identifier	get_condor_gid		5496396	2					
ANR	5496414	ParameterList			5496396	3					
ANR	5496415	CFGEntryNode	ENTRY		5496396		True				
ANR	5496416	CFGExitNode	EXIT		5496396		True				
ANR	5496417	Symbol	CondorGid		5496396						
ANR	5496418	Symbol	CondorIdsInited		5496396						
ANR	5496419	Function	get_condor_username	1265:0:33895:34006							
ANR	5496420	FunctionDef	get_condor_username ()		5496419	0					
ANR	5496421	CompoundStatement		1267:0:33929:34006	5496419	0					
ANR	5496422	IfStatement	if ( ! CondorIdsInited )		5496419	0					
ANR	5496423	Condition	! CondorIdsInited	1268:5:33936:33951	5496419	0	True				
ANR	5496424	UnaryOperationExpression	! CondorIdsInited		5496419	0					
ANR	5496425	UnaryOperator	!		5496419	0					
ANR	5496426	Identifier	CondorIdsInited		5496419	1					
ANR	5496427	CompoundStatement		2:24:25:25	5496419	1					
ANR	5496428	ExpressionStatement	init_condor_ids ( )	1269:2:33959:33976	5496419	0	True				
ANR	5496429	CallExpression	init_condor_ids ( )		5496419	0					
ANR	5496430	Callee	init_condor_ids		5496419	0					
ANR	5496431	Identifier	init_condor_ids		5496419	0					
ANR	5496432	ArgumentList			5496419	1					
ANR	5496433	ReturnStatement	return CondorUserName ;	1272:1:33983:34004	5496419	1	True				
ANR	5496434	Identifier	CondorUserName		5496419	0					
ANR	5496435	ReturnType	const char *		5496419	1					
ANR	5496436	Identifier	get_condor_username		5496419	2					
ANR	5496437	ParameterList			5496419	3					
ANR	5496438	CFGEntryNode	ENTRY		5496419		True				
ANR	5496439	CFGExitNode	EXIT		5496419		True				
ANR	5496440	Symbol	CondorUserName		5496419						
ANR	5496441	Symbol	CondorIdsInited		5496419						
ANR	5496442	Function	get_user_uid	1276:0:34012:34173							
ANR	5496443	FunctionDef	get_user_uid ()		5496442	0					
ANR	5496444	CompoundStatement		1278:0:34033:34173	5496442	0					
ANR	5496445	IfStatement	if ( ! UserIdsInited )		5496442	0					
ANR	5496446	Condition	! UserIdsInited	1279:5:34040:34053	5496442	0	True				
ANR	5496447	UnaryOperationExpression	! UserIdsInited		5496442	0					
ANR	5496448	UnaryOperator	!		5496442	0					
ANR	5496449	Identifier	UserIdsInited		5496442	1					
ANR	5496450	CompoundStatement		2:22:23:23	5496442	1					
ANR	5496451	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_user_uid() called when UserIds not inited!\\n"" )"	1280:2:34061:34130	5496442	0	True				
ANR	5496452	CallExpression	"dprintf ( D_ALWAYS , ""get_user_uid() called when UserIds not inited!\\n"" )"		5496442	0					
ANR	5496453	Callee	dprintf		5496442	0					
ANR	5496454	Identifier	dprintf		5496442	0					
ANR	5496455	ArgumentList	D_ALWAYS		5496442	1					
ANR	5496456	Argument	D_ALWAYS		5496442	0					
ANR	5496457	Identifier	D_ALWAYS		5496442	0					
ANR	5496458	Argument	"""get_user_uid() called when UserIds not inited!\\n"""		5496442	1					
ANR	5496459	PrimaryExpression	"""get_user_uid() called when UserIds not inited!\\n"""		5496442	0					
ANR	5496460	ReturnStatement	return ( uid_t ) - 1 ;	1281:2:34134:34150	5496442	1	True				
ANR	5496461	CastExpression	( uid_t ) - 1		5496442	0					
ANR	5496462	CastTarget	uid_t		5496442	0					
ANR	5496463	UnaryOperationExpression	- 1		5496442	1					
ANR	5496464	UnaryOperator	-		5496442	0					
ANR	5496465	PrimaryExpression	1		5496442	1					
ANR	5496466	ReturnStatement	return UserUid ;	1284:1:34157:34171	5496442	1	True				
ANR	5496467	Identifier	UserUid		5496442	0					
ANR	5496468	ReturnType	uid_t		5496442	1					
ANR	5496469	Identifier	get_user_uid		5496442	2					
ANR	5496470	ParameterList			5496442	3					
ANR	5496471	CFGEntryNode	ENTRY		5496442		True				
ANR	5496472	CFGExitNode	EXIT		5496442		True				
ANR	5496473	Symbol	UserUid		5496442						
ANR	5496474	Symbol	UserIdsInited		5496442						
ANR	5496475	Symbol	D_ALWAYS		5496442						
ANR	5496476	Function	get_user_gid	1288:0:34177:34338							
ANR	5496477	FunctionDef	get_user_gid ()		5496476	0					
ANR	5496478	CompoundStatement		1290:0:34198:34338	5496476	0					
ANR	5496479	IfStatement	if ( ! UserIdsInited )		5496476	0					
ANR	5496480	Condition	! UserIdsInited	1291:5:34205:34218	5496476	0	True				
ANR	5496481	UnaryOperationExpression	! UserIdsInited		5496476	0					
ANR	5496482	UnaryOperator	!		5496476	0					
ANR	5496483	Identifier	UserIdsInited		5496476	1					
ANR	5496484	CompoundStatement		2:22:23:23	5496476	1					
ANR	5496485	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_user_gid() called when UserIds not inited!\\n"" )"	1292:2:34226:34295	5496476	0	True				
ANR	5496486	CallExpression	"dprintf ( D_ALWAYS , ""get_user_gid() called when UserIds not inited!\\n"" )"		5496476	0					
ANR	5496487	Callee	dprintf		5496476	0					
ANR	5496488	Identifier	dprintf		5496476	0					
ANR	5496489	ArgumentList	D_ALWAYS		5496476	1					
ANR	5496490	Argument	D_ALWAYS		5496476	0					
ANR	5496491	Identifier	D_ALWAYS		5496476	0					
ANR	5496492	Argument	"""get_user_gid() called when UserIds not inited!\\n"""		5496476	1					
ANR	5496493	PrimaryExpression	"""get_user_gid() called when UserIds not inited!\\n"""		5496476	0					
ANR	5496494	ReturnStatement	return ( gid_t ) - 1 ;	1293:2:34299:34315	5496476	1	True				
ANR	5496495	CastExpression	( gid_t ) - 1		5496476	0					
ANR	5496496	CastTarget	gid_t		5496476	0					
ANR	5496497	UnaryOperationExpression	- 1		5496476	1					
ANR	5496498	UnaryOperator	-		5496476	0					
ANR	5496499	PrimaryExpression	1		5496476	1					
ANR	5496500	ReturnStatement	return UserGid ;	1296:1:34322:34336	5496476	1	True				
ANR	5496501	Identifier	UserGid		5496476	0					
ANR	5496502	ReturnType	gid_t		5496476	1					
ANR	5496503	Identifier	get_user_gid		5496476	2					
ANR	5496504	ParameterList			5496476	3					
ANR	5496505	CFGEntryNode	ENTRY		5496476		True				
ANR	5496506	CFGExitNode	EXIT		5496476		True				
ANR	5496507	Symbol	UserGid		5496476						
ANR	5496508	Symbol	UserIdsInited		5496476						
ANR	5496509	Symbol	D_ALWAYS		5496476						
ANR	5496510	Function	get_file_owner_uid	1300:0:34342:34524							
ANR	5496511	FunctionDef	get_file_owner_uid ()		5496510	0					
ANR	5496512	CompoundStatement		1302:0:34369:34524	5496510	0					
ANR	5496513	IfStatement	if ( ! OwnerIdsInited )		5496510	0					
ANR	5496514	Condition	! OwnerIdsInited	1303:5:34376:34390	5496510	0	True				
ANR	5496515	UnaryOperationExpression	! OwnerIdsInited		5496510	0					
ANR	5496516	UnaryOperator	!		5496510	0					
ANR	5496517	Identifier	OwnerIdsInited		5496510	1					
ANR	5496518	CompoundStatement		2:23:24:24	5496510	1					
ANR	5496519	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_file_owner_uid() called when OwnerIds not inited!\\n"" )"	1304:2:34398:34481	5496510	0	True				
ANR	5496520	CallExpression	"dprintf ( D_ALWAYS , ""get_file_owner_uid() called when OwnerIds not inited!\\n"" )"		5496510	0					
ANR	5496521	Callee	dprintf		5496510	0					
ANR	5496522	Identifier	dprintf		5496510	0					
ANR	5496523	ArgumentList	D_ALWAYS		5496510	1					
ANR	5496524	Argument	D_ALWAYS		5496510	0					
ANR	5496525	Identifier	D_ALWAYS		5496510	0					
ANR	5496526	Argument	"""get_file_owner_uid() called when OwnerIds not inited!\\n"""		5496510	1					
ANR	5496527	PrimaryExpression	"""get_file_owner_uid() called when OwnerIds not inited!\\n"""		5496510	0					
ANR	5496528	ReturnStatement	return ( uid_t ) - 1 ;	1306:2:34485:34501	5496510	1	True				
ANR	5496529	CastExpression	( uid_t ) - 1		5496510	0					
ANR	5496530	CastTarget	uid_t		5496510	0					
ANR	5496531	UnaryOperationExpression	- 1		5496510	1					
ANR	5496532	UnaryOperator	-		5496510	0					
ANR	5496533	PrimaryExpression	1		5496510	1					
ANR	5496534	ReturnStatement	return OwnerUid ;	1308:1:34507:34522	5496510	1	True				
ANR	5496535	Identifier	OwnerUid		5496510	0					
ANR	5496536	ReturnType	uid_t		5496510	1					
ANR	5496537	Identifier	get_file_owner_uid		5496510	2					
ANR	5496538	ParameterList			5496510	3					
ANR	5496539	CFGEntryNode	ENTRY		5496510		True				
ANR	5496540	CFGExitNode	EXIT		5496510		True				
ANR	5496541	Symbol	OwnerIdsInited		5496510						
ANR	5496542	Symbol	OwnerUid		5496510						
ANR	5496543	Symbol	D_ALWAYS		5496510						
ANR	5496544	Function	get_file_owner_gid	1312:0:34528:34710							
ANR	5496545	FunctionDef	get_file_owner_gid ()		5496544	0					
ANR	5496546	CompoundStatement		1314:0:34555:34710	5496544	0					
ANR	5496547	IfStatement	if ( ! OwnerIdsInited )		5496544	0					
ANR	5496548	Condition	! OwnerIdsInited	1315:5:34562:34576	5496544	0	True				
ANR	5496549	UnaryOperationExpression	! OwnerIdsInited		5496544	0					
ANR	5496550	UnaryOperator	!		5496544	0					
ANR	5496551	Identifier	OwnerIdsInited		5496544	1					
ANR	5496552	CompoundStatement		2:23:24:24	5496544	1					
ANR	5496553	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_file_owner_gid() called when OwnerIds not inited!\\n"" )"	1316:2:34584:34667	5496544	0	True				
ANR	5496554	CallExpression	"dprintf ( D_ALWAYS , ""get_file_owner_gid() called when OwnerIds not inited!\\n"" )"		5496544	0					
ANR	5496555	Callee	dprintf		5496544	0					
ANR	5496556	Identifier	dprintf		5496544	0					
ANR	5496557	ArgumentList	D_ALWAYS		5496544	1					
ANR	5496558	Argument	D_ALWAYS		5496544	0					
ANR	5496559	Identifier	D_ALWAYS		5496544	0					
ANR	5496560	Argument	"""get_file_owner_gid() called when OwnerIds not inited!\\n"""		5496544	1					
ANR	5496561	PrimaryExpression	"""get_file_owner_gid() called when OwnerIds not inited!\\n"""		5496544	0					
ANR	5496562	ReturnStatement	return ( gid_t ) - 1 ;	1318:2:34671:34687	5496544	1	True				
ANR	5496563	CastExpression	( gid_t ) - 1		5496544	0					
ANR	5496564	CastTarget	gid_t		5496544	0					
ANR	5496565	UnaryOperationExpression	- 1		5496544	1					
ANR	5496566	UnaryOperator	-		5496544	0					
ANR	5496567	PrimaryExpression	1		5496544	1					
ANR	5496568	ReturnStatement	return OwnerGid ;	1320:1:34693:34708	5496544	1	True				
ANR	5496569	Identifier	OwnerGid		5496544	0					
ANR	5496570	ReturnType	gid_t		5496544	1					
ANR	5496571	Identifier	get_file_owner_gid		5496544	2					
ANR	5496572	ParameterList			5496544	3					
ANR	5496573	CFGEntryNode	ENTRY		5496544		True				
ANR	5496574	CFGExitNode	EXIT		5496544		True				
ANR	5496575	Symbol	OwnerIdsInited		5496544						
ANR	5496576	Symbol	OwnerGid		5496544						
ANR	5496577	Symbol	D_ALWAYS		5496544						
ANR	5496578	Function	get_my_uid	1324:0:34714:34753							
ANR	5496579	FunctionDef	get_my_uid ()		5496578	0					
ANR	5496580	CompoundStatement		1326:0:34733:34753	5496578	0					
ANR	5496581	ReturnStatement	return getuid ( ) ;	1327:1:34736:34751	5496578	0	True				
ANR	5496582	CallExpression	getuid ( )		5496578	0					
ANR	5496583	Callee	getuid		5496578	0					
ANR	5496584	Identifier	getuid		5496578	0					
ANR	5496585	ArgumentList			5496578	1					
ANR	5496586	ReturnType	uid_t		5496578	1					
ANR	5496587	Identifier	get_my_uid		5496578	2					
ANR	5496588	ParameterList			5496578	3					
ANR	5496589	CFGEntryNode	ENTRY		5496578		True				
ANR	5496590	CFGExitNode	EXIT		5496578		True				
ANR	5496591	Symbol	getuid		5496578						
ANR	5496592	Function	get_my_gid	1331:0:34757:34796							
ANR	5496593	FunctionDef	get_my_gid ()		5496592	0					
ANR	5496594	CompoundStatement		1333:0:34776:34796	5496592	0					
ANR	5496595	ReturnStatement	return getgid ( ) ;	1334:1:34779:34794	5496592	0	True				
ANR	5496596	CallExpression	getgid ( )		5496592	0					
ANR	5496597	Callee	getgid		5496592	0					
ANR	5496598	Identifier	getgid		5496592	0					
ANR	5496599	ArgumentList			5496592	1					
ANR	5496600	ReturnType	gid_t		5496592	1					
ANR	5496601	Identifier	get_my_gid		5496592	2					
ANR	5496602	ParameterList			5496592	3					
ANR	5496603	CFGEntryNode	ENTRY		5496592		True				
ANR	5496604	CFGExitNode	EXIT		5496592		True				
ANR	5496605	Symbol	getgid		5496592						
ANR	5496606	Function	get_real_condor_uid	1338:0:34800:34904							
ANR	5496607	FunctionDef	get_real_condor_uid ()		5496606	0					
ANR	5496608	CompoundStatement		1340:0:34828:34904	5496606	0					
ANR	5496609	IfStatement	if ( ! CondorIdsInited )		5496606	0					
ANR	5496610	Condition	! CondorIdsInited	1341:5:34835:34850	5496606	0	True				
ANR	5496611	UnaryOperationExpression	! CondorIdsInited		5496606	0					
ANR	5496612	UnaryOperator	!		5496606	0					
ANR	5496613	Identifier	CondorIdsInited		5496606	1					
ANR	5496614	CompoundStatement		2:24:25:25	5496606	1					
ANR	5496615	ExpressionStatement	init_condor_ids ( )	1342:2:34858:34875	5496606	0	True				
ANR	5496616	CallExpression	init_condor_ids ( )		5496606	0					
ANR	5496617	Callee	init_condor_ids		5496606	0					
ANR	5496618	Identifier	init_condor_ids		5496606	0					
ANR	5496619	ArgumentList			5496606	1					
ANR	5496620	ReturnStatement	return RealCondorUid ;	1345:1:34882:34902	5496606	1	True				
ANR	5496621	Identifier	RealCondorUid		5496606	0					
ANR	5496622	ReturnType	uid_t		5496606	1					
ANR	5496623	Identifier	get_real_condor_uid		5496606	2					
ANR	5496624	ParameterList			5496606	3					
ANR	5496625	CFGEntryNode	ENTRY		5496606		True				
ANR	5496626	CFGExitNode	EXIT		5496606		True				
ANR	5496627	Symbol	RealCondorUid		5496606						
ANR	5496628	Symbol	CondorIdsInited		5496606						
ANR	5496629	Function	get_real_condor_gid	1349:0:34908:35012							
ANR	5496630	FunctionDef	get_real_condor_gid ()		5496629	0					
ANR	5496631	CompoundStatement		1351:0:34936:35012	5496629	0					
ANR	5496632	IfStatement	if ( ! CondorIdsInited )		5496629	0					
ANR	5496633	Condition	! CondorIdsInited	1352:5:34943:34958	5496629	0	True				
ANR	5496634	UnaryOperationExpression	! CondorIdsInited		5496629	0					
ANR	5496635	UnaryOperator	!		5496629	0					
ANR	5496636	Identifier	CondorIdsInited		5496629	1					
ANR	5496637	CompoundStatement		2:24:25:25	5496629	1					
ANR	5496638	ExpressionStatement	init_condor_ids ( )	1353:2:34966:34983	5496629	0	True				
ANR	5496639	CallExpression	init_condor_ids ( )		5496629	0					
ANR	5496640	Callee	init_condor_ids		5496629	0					
ANR	5496641	Identifier	init_condor_ids		5496629	0					
ANR	5496642	ArgumentList			5496629	1					
ANR	5496643	ReturnStatement	return RealCondorGid ;	1356:1:34990:35010	5496629	1	True				
ANR	5496644	Identifier	RealCondorGid		5496629	0					
ANR	5496645	ReturnType	gid_t		5496629	1					
ANR	5496646	Identifier	get_real_condor_gid		5496629	2					
ANR	5496647	ParameterList			5496629	3					
ANR	5496648	CFGEntryNode	ENTRY		5496629		True				
ANR	5496649	CFGExitNode	EXIT		5496629		True				
ANR	5496650	Symbol	CondorIdsInited		5496629						
ANR	5496651	Symbol	RealCondorGid		5496629						
ANR	5496652	Function	set_condor_euid	1360:0:35016:35129							
ANR	5496653	FunctionDef	set_condor_euid ()		5496652	0					
ANR	5496654	CompoundStatement		1362:0:35038:35129	5496652	0					
ANR	5496655	IfStatement	if ( ! CondorIdsInited )		5496652	0					
ANR	5496656	Condition	! CondorIdsInited	1363:5:35045:35060	5496652	0	True				
ANR	5496657	UnaryOperationExpression	! CondorIdsInited		5496652	0					
ANR	5496658	UnaryOperator	!		5496652	0					
ANR	5496659	Identifier	CondorIdsInited		5496652	1					
ANR	5496660	CompoundStatement		2:24:25:25	5496652	1					
ANR	5496661	ExpressionStatement	init_condor_ids ( )	1364:2:35068:35085	5496652	0	True				
ANR	5496662	CallExpression	init_condor_ids ( )		5496652	0					
ANR	5496663	Callee	init_condor_ids		5496652	0					
ANR	5496664	Identifier	init_condor_ids		5496652	0					
ANR	5496665	ArgumentList			5496652	1					
ANR	5496666	ReturnStatement	return SET_EFFECTIVE_UID ( CondorUid ) ;	1367:1:35092:35127	5496652	1	True				
ANR	5496667	CallExpression	SET_EFFECTIVE_UID ( CondorUid )		5496652	0					
ANR	5496668	Callee	SET_EFFECTIVE_UID		5496652	0					
ANR	5496669	Identifier	SET_EFFECTIVE_UID		5496652	0					
ANR	5496670	ArgumentList	CondorUid		5496652	1					
ANR	5496671	Argument	CondorUid		5496652	0					
ANR	5496672	Identifier	CondorUid		5496652	0					
ANR	5496673	ReturnType	int		5496652	1					
ANR	5496674	Identifier	set_condor_euid		5496652	2					
ANR	5496675	ParameterList			5496652	3					
ANR	5496676	CFGEntryNode	ENTRY		5496652		True				
ANR	5496677	CFGExitNode	EXIT		5496652		True				
ANR	5496678	Symbol	CondorUid		5496652						
ANR	5496679	Symbol	SET_EFFECTIVE_UID		5496652						
ANR	5496680	Symbol	CondorIdsInited		5496652						
ANR	5496681	Function	set_condor_egid	1371:0:35133:35246							
ANR	5496682	FunctionDef	set_condor_egid ()		5496681	0					
ANR	5496683	CompoundStatement		1373:0:35155:35246	5496681	0					
ANR	5496684	IfStatement	if ( ! CondorIdsInited )		5496681	0					
ANR	5496685	Condition	! CondorIdsInited	1374:5:35162:35177	5496681	0	True				
ANR	5496686	UnaryOperationExpression	! CondorIdsInited		5496681	0					
ANR	5496687	UnaryOperator	!		5496681	0					
ANR	5496688	Identifier	CondorIdsInited		5496681	1					
ANR	5496689	CompoundStatement		2:24:25:25	5496681	1					
ANR	5496690	ExpressionStatement	init_condor_ids ( )	1375:2:35185:35202	5496681	0	True				
ANR	5496691	CallExpression	init_condor_ids ( )		5496681	0					
ANR	5496692	Callee	init_condor_ids		5496681	0					
ANR	5496693	Identifier	init_condor_ids		5496681	0					
ANR	5496694	ArgumentList			5496681	1					
ANR	5496695	ReturnStatement	return SET_EFFECTIVE_GID ( CondorGid ) ;	1378:1:35209:35244	5496681	1	True				
ANR	5496696	CallExpression	SET_EFFECTIVE_GID ( CondorGid )		5496681	0					
ANR	5496697	Callee	SET_EFFECTIVE_GID		5496681	0					
ANR	5496698	Identifier	SET_EFFECTIVE_GID		5496681	0					
ANR	5496699	ArgumentList	CondorGid		5496681	1					
ANR	5496700	Argument	CondorGid		5496681	0					
ANR	5496701	Identifier	CondorGid		5496681	0					
ANR	5496702	ReturnType	int		5496681	1					
ANR	5496703	Identifier	set_condor_egid		5496681	2					
ANR	5496704	ParameterList			5496681	3					
ANR	5496705	CFGEntryNode	ENTRY		5496681		True				
ANR	5496706	CFGExitNode	EXIT		5496681		True				
ANR	5496707	Symbol	CondorGid		5496681						
ANR	5496708	Symbol	SET_EFFECTIVE_GID		5496681						
ANR	5496709	Symbol	CondorIdsInited		5496681						
ANR	5496710	Function	set_user_euid	1382:0:35250:35423							
ANR	5496711	FunctionDef	set_user_euid ()		5496710	0					
ANR	5496712	CompoundStatement		1384:0:35270:35423	5496710	0					
ANR	5496713	IfStatement	if ( ! UserIdsInited )		5496710	0					
ANR	5496714	Condition	! UserIdsInited	1385:5:35277:35290	5496710	0	True				
ANR	5496715	UnaryOperationExpression	! UserIdsInited		5496710	0					
ANR	5496716	UnaryOperator	!		5496710	0					
ANR	5496717	Identifier	UserIdsInited		5496710	1					
ANR	5496718	CompoundStatement		2:22:23:23	5496710	1					
ANR	5496719	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_user_euid() called when UserIds not inited!\\n"" )"	1386:2:35298:35368	5496710	0	True				
ANR	5496720	CallExpression	"dprintf ( D_ALWAYS , ""set_user_euid() called when UserIds not inited!\\n"" )"		5496710	0					
ANR	5496721	Callee	dprintf		5496710	0					
ANR	5496722	Identifier	dprintf		5496710	0					
ANR	5496723	ArgumentList	D_ALWAYS		5496710	1					
ANR	5496724	Argument	D_ALWAYS		5496710	0					
ANR	5496725	Identifier	D_ALWAYS		5496710	0					
ANR	5496726	Argument	"""set_user_euid() called when UserIds not inited!\\n"""		5496710	1					
ANR	5496727	PrimaryExpression	"""set_user_euid() called when UserIds not inited!\\n"""		5496710	0					
ANR	5496728	ReturnStatement	return - 1 ;	1387:2:35372:35381	5496710	1	True				
ANR	5496729	UnaryOperationExpression	- 1		5496710	0					
ANR	5496730	UnaryOperator	-		5496710	0					
ANR	5496731	PrimaryExpression	1		5496710	1					
ANR	5496732	ReturnStatement	return SET_EFFECTIVE_UID ( UserUid ) ;	1390:1:35388:35421	5496710	1	True				
ANR	5496733	CallExpression	SET_EFFECTIVE_UID ( UserUid )		5496710	0					
ANR	5496734	Callee	SET_EFFECTIVE_UID		5496710	0					
ANR	5496735	Identifier	SET_EFFECTIVE_UID		5496710	0					
ANR	5496736	ArgumentList	UserUid		5496710	1					
ANR	5496737	Argument	UserUid		5496710	0					
ANR	5496738	Identifier	UserUid		5496710	0					
ANR	5496739	ReturnType	int		5496710	1					
ANR	5496740	Identifier	set_user_euid		5496710	2					
ANR	5496741	ParameterList			5496710	3					
ANR	5496742	CFGEntryNode	ENTRY		5496710		True				
ANR	5496743	CFGExitNode	EXIT		5496710		True				
ANR	5496744	Symbol	UserUid		5496710						
ANR	5496745	Symbol	UserIdsInited		5496710						
ANR	5496746	Symbol	D_ALWAYS		5496710						
ANR	5496747	Symbol	SET_EFFECTIVE_UID		5496710						
ANR	5496748	Function	set_user_egid	1394:0:35427:36218							
ANR	5496749	FunctionDef	set_user_egid ()		5496748	0					
ANR	5496750	CompoundStatement		1396:0:35447:36218	5496748	0					
ANR	5496751	IfStatement	if ( ! UserIdsInited )		5496748	0					
ANR	5496752	Condition	! UserIdsInited	1397:5:35454:35467	5496748	0	True				
ANR	5496753	UnaryOperationExpression	! UserIdsInited		5496748	0					
ANR	5496754	UnaryOperator	!		5496748	0					
ANR	5496755	Identifier	UserIdsInited		5496748	1					
ANR	5496756	CompoundStatement		2:22:23:23	5496748	1					
ANR	5496757	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_user_egid() called when UserIds not inited!\\n"" )"	1398:2:35475:35545	5496748	0	True				
ANR	5496758	CallExpression	"dprintf ( D_ALWAYS , ""set_user_egid() called when UserIds not inited!\\n"" )"		5496748	0					
ANR	5496759	Callee	dprintf		5496748	0					
ANR	5496760	Identifier	dprintf		5496748	0					
ANR	5496761	ArgumentList	D_ALWAYS		5496748	1					
ANR	5496762	Argument	D_ALWAYS		5496748	0					
ANR	5496763	Identifier	D_ALWAYS		5496748	0					
ANR	5496764	Argument	"""set_user_egid() called when UserIds not inited!\\n"""		5496748	1					
ANR	5496765	PrimaryExpression	"""set_user_egid() called when UserIds not inited!\\n"""		5496748	0					
ANR	5496766	ReturnStatement	return - 1 ;	1399:2:35549:35558	5496748	1	True				
ANR	5496767	UnaryOperationExpression	- 1		5496748	0					
ANR	5496768	UnaryOperator	-		5496748	0					
ANR	5496769	PrimaryExpression	1		5496748	1					
ANR	5496770	IfStatement	if ( UserName )		5496748	1					
ANR	5496771	Condition	UserName	1410:5:35961:35968	5496748	0	True				
ANR	5496772	Identifier	UserName		5496748	0					
ANR	5496773	CompoundStatement		15:16:524:524	5496748	1					
ANR	5496774	ExpressionStatement	errno = 0	1411:2:35976:35985	5496748	0	True				
ANR	5496775	AssignmentExpression	errno = 0		5496748	0		=			
ANR	5496776	Identifier	errno		5496748	0					
ANR	5496777	PrimaryExpression	0		5496748	1					
ANR	5496778	IfStatement	if ( ! ( pcache ( ) -> init_groups ( UserName ) ) )		5496748	1					
ANR	5496779	Condition	! ( pcache ( ) -> init_groups ( UserName ) )	1412:5:35992:36025	5496748	0	True				
ANR	5496780	UnaryOperationExpression	! ( pcache ( ) -> init_groups ( UserName ) )		5496748	0					
ANR	5496781	UnaryOperator	!		5496748	0					
ANR	5496782	CallExpression	pcache ( ) -> init_groups ( UserName )		5496748	1					
ANR	5496783	Callee	pcache ( ) -> init_groups		5496748	0					
ANR	5496784	PtrMemberAccess	pcache ( ) -> init_groups		5496748	0					
ANR	5496785	CallExpression	pcache ( )		5496748	0					
ANR	5496786	Callee	pcache		5496748	0					
ANR	5496787	Identifier	pcache		5496748	0					
ANR	5496788	ArgumentList			5496748	1					
ANR	5496789	Identifier	init_groups		5496748	1					
ANR	5496790	ArgumentList	UserName		5496748	1					
ANR	5496791	Argument	UserName		5496748	0					
ANR	5496792	Identifier	UserName		5496748	0					
ANR	5496793	CompoundStatement		17:42:581:581	5496748	1					
ANR	5496794	Statement	dprintf	1413:3:36034:36040	5496748	0	True				
ANR	5496795	Statement	(	1413:10:36041:36041	5496748	1	True				
ANR	5496796	Statement	D_ALWAYS	1413:12:36043:36050	5496748	2	True				
ANR	5496797	Statement	","	1413:20:36051:36051	5496748	3	True				
ANR	5496798	Statement	"""set_user_egid - ERROR: initgroups(%s, %d) failed, """	1414:6:36060:36111	5496748	4	True				
ANR	5496799	Statement	"""errno: %s\\n"""	1415:6:36119:36131	5496748	5	True				
ANR	5496800	Statement	","	1415:19:36132:36132	5496748	6	True				
ANR	5496801	Statement	UserName	1415:21:36134:36141	5496748	7	True				
ANR	5496802	Statement	","	1415:29:36142:36142	5496748	8	True				
ANR	5496803	Statement	UserGid	1415:31:36144:36150	5496748	9	True				
ANR	5496804	Statement	","	1415:38:36151:36151	5496748	10	True				
ANR	5496805	Statement	strerror	1415:40:36153:36160	5496748	11	True				
ANR	5496806	Statement	(	1415:48:36161:36161	5496748	12	True				
ANR	5496807	Statement	errno	1415:49:36162:36166	5496748	13	True				
ANR	5496808	Statement	)	1415:54:36167:36167	5496748	14	True				
ANR	5496809	Statement	)	1415:56:36169:36169	5496748	15	True				
ANR	5496810	ExpressionStatement		1415:57:36170:36170	5496748	16	True				
ANR	5496811	ReturnStatement	return SET_EFFECTIVE_GID ( UserGid ) ;	1418:1:36183:36216	5496748	2	True				
ANR	5496812	CallExpression	SET_EFFECTIVE_GID ( UserGid )		5496748	0					
ANR	5496813	Callee	SET_EFFECTIVE_GID		5496748	0					
ANR	5496814	Identifier	SET_EFFECTIVE_GID		5496748	0					
ANR	5496815	ArgumentList	UserGid		5496748	1					
ANR	5496816	Argument	UserGid		5496748	0					
ANR	5496817	Identifier	UserGid		5496748	0					
ANR	5496818	ReturnType	int		5496748	1					
ANR	5496819	Identifier	set_user_egid		5496748	2					
ANR	5496820	ParameterList			5496748	3					
ANR	5496821	CFGEntryNode	ENTRY		5496748		True				
ANR	5496822	CFGExitNode	EXIT		5496748		True				
ANR	5496823	Symbol	* pcache		5496748						
ANR	5496824	Symbol	errno		5496748						
ANR	5496825	Symbol	UserName		5496748						
ANR	5496826	Symbol	UserGid		5496748						
ANR	5496827	Symbol	UserIdsInited		5496748						
ANR	5496828	Symbol	D_ALWAYS		5496748						
ANR	5496829	Symbol	pcache ( ) -> init_groups		5496748						
ANR	5496830	Symbol	SET_EFFECTIVE_GID		5496748						
ANR	5496831	Symbol	pcache		5496748						
ANR	5496832	Function	set_user_ruid	1422:0:36222:36390							
ANR	5496833	FunctionDef	set_user_ruid ()		5496832	0					
ANR	5496834	CompoundStatement		1424:0:36242:36390	5496832	0					
ANR	5496835	IfStatement	if ( ! UserIdsInited )		5496832	0					
ANR	5496836	Condition	! UserIdsInited	1425:5:36249:36262	5496832	0	True				
ANR	5496837	UnaryOperationExpression	! UserIdsInited		5496832	0					
ANR	5496838	UnaryOperator	!		5496832	0					
ANR	5496839	Identifier	UserIdsInited		5496832	1					
ANR	5496840	CompoundStatement		2:22:23:23	5496832	1					
ANR	5496841	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_user_ruid() called when UserIds not inited!\\n"" )"	1426:2:36270:36340	5496832	0	True				
ANR	5496842	CallExpression	"dprintf ( D_ALWAYS , ""set_user_ruid() called when UserIds not inited!\\n"" )"		5496832	0					
ANR	5496843	Callee	dprintf		5496832	0					
ANR	5496844	Identifier	dprintf		5496832	0					
ANR	5496845	ArgumentList	D_ALWAYS		5496832	1					
ANR	5496846	Argument	D_ALWAYS		5496832	0					
ANR	5496847	Identifier	D_ALWAYS		5496832	0					
ANR	5496848	Argument	"""set_user_ruid() called when UserIds not inited!\\n"""		5496832	1					
ANR	5496849	PrimaryExpression	"""set_user_ruid() called when UserIds not inited!\\n"""		5496832	0					
ANR	5496850	ReturnStatement	return - 1 ;	1427:2:36344:36353	5496832	1	True				
ANR	5496851	UnaryOperationExpression	- 1		5496832	0					
ANR	5496852	UnaryOperator	-		5496832	0					
ANR	5496853	PrimaryExpression	1		5496832	1					
ANR	5496854	ReturnStatement	return SET_REAL_UID ( UserUid ) ;	1430:1:36360:36388	5496832	1	True				
ANR	5496855	CallExpression	SET_REAL_UID ( UserUid )		5496832	0					
ANR	5496856	Callee	SET_REAL_UID		5496832	0					
ANR	5496857	Identifier	SET_REAL_UID		5496832	0					
ANR	5496858	ArgumentList	UserUid		5496832	1					
ANR	5496859	Argument	UserUid		5496832	0					
ANR	5496860	Identifier	UserUid		5496832	0					
ANR	5496861	ReturnType	int		5496832	1					
ANR	5496862	Identifier	set_user_ruid		5496832	2					
ANR	5496863	ParameterList			5496832	3					
ANR	5496864	CFGEntryNode	ENTRY		5496832		True				
ANR	5496865	CFGExitNode	EXIT		5496832		True				
ANR	5496866	Symbol	SET_REAL_UID		5496832						
ANR	5496867	Symbol	UserUid		5496832						
ANR	5496868	Symbol	UserIdsInited		5496832						
ANR	5496869	Symbol	D_ALWAYS		5496832						
ANR	5496870	Function	set_user_rgid	1434:0:36394:37183							
ANR	5496871	FunctionDef	set_user_rgid ()		5496870	0					
ANR	5496872	CompoundStatement		1436:0:36414:37183	5496870	0					
ANR	5496873	IfStatement	if ( ! UserIdsInited )		5496870	0					
ANR	5496874	Condition	! UserIdsInited	1437:5:36421:36434	5496870	0	True				
ANR	5496875	UnaryOperationExpression	! UserIdsInited		5496870	0					
ANR	5496876	UnaryOperator	!		5496870	0					
ANR	5496877	Identifier	UserIdsInited		5496870	1					
ANR	5496878	CompoundStatement		2:22:23:23	5496870	1					
ANR	5496879	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_user_rgid() called when UserIds not inited!\\n"" )"	1438:2:36442:36512	5496870	0	True				
ANR	5496880	CallExpression	"dprintf ( D_ALWAYS , ""set_user_rgid() called when UserIds not inited!\\n"" )"		5496870	0					
ANR	5496881	Callee	dprintf		5496870	0					
ANR	5496882	Identifier	dprintf		5496870	0					
ANR	5496883	ArgumentList	D_ALWAYS		5496870	1					
ANR	5496884	Argument	D_ALWAYS		5496870	0					
ANR	5496885	Identifier	D_ALWAYS		5496870	0					
ANR	5496886	Argument	"""set_user_rgid() called when UserIds not inited!\\n"""		5496870	1					
ANR	5496887	PrimaryExpression	"""set_user_rgid() called when UserIds not inited!\\n"""		5496870	0					
ANR	5496888	ReturnStatement	return - 1 ;	1439:2:36516:36525	5496870	1	True				
ANR	5496889	UnaryOperationExpression	- 1		5496870	0					
ANR	5496890	UnaryOperator	-		5496870	0					
ANR	5496891	PrimaryExpression	1		5496870	1					
ANR	5496892	IfStatement	if ( UserName )		5496870	1					
ANR	5496893	Condition	UserName	1450:5:36927:36934	5496870	0	True				
ANR	5496894	Identifier	UserName		5496870	0					
ANR	5496895	CompoundStatement		15:16:523:523	5496870	1					
ANR	5496896	ExpressionStatement	errno = 0	1451:2:36942:36951	5496870	0	True				
ANR	5496897	AssignmentExpression	errno = 0		5496870	0		=			
ANR	5496898	Identifier	errno		5496870	0					
ANR	5496899	PrimaryExpression	0		5496870	1					
ANR	5496900	IfStatement	"if ( ! ( pcache ( ) -> init_groups ( UserName , TrackingGid ) ) )"		5496870	1					
ANR	5496901	Condition	"! ( pcache ( ) -> init_groups ( UserName , TrackingGid ) )"	1452:6:36959:37005	5496870	0	True				
ANR	5496902	UnaryOperationExpression	"! ( pcache ( ) -> init_groups ( UserName , TrackingGid ) )"		5496870	0					
ANR	5496903	UnaryOperator	!		5496870	0					
ANR	5496904	CallExpression	"pcache ( ) -> init_groups ( UserName , TrackingGid )"		5496870	1					
ANR	5496905	Callee	pcache ( ) -> init_groups		5496870	0					
ANR	5496906	PtrMemberAccess	pcache ( ) -> init_groups		5496870	0					
ANR	5496907	CallExpression	pcache ( )		5496870	0					
ANR	5496908	Callee	pcache		5496870	0					
ANR	5496909	Identifier	pcache		5496870	0					
ANR	5496910	ArgumentList			5496870	1					
ANR	5496911	Identifier	init_groups		5496870	1					
ANR	5496912	ArgumentList	UserName		5496870	1					
ANR	5496913	Argument	UserName		5496870	0					
ANR	5496914	Identifier	UserName		5496870	0					
ANR	5496915	Argument	TrackingGid		5496870	1					
ANR	5496916	Identifier	TrackingGid		5496870	0					
ANR	5496917	CompoundStatement		17:56:594:594	5496870	1					
ANR	5496918	Statement	dprintf	1453:3:37014:37020	5496870	0	True				
ANR	5496919	Statement	(	1453:10:37021:37021	5496870	1	True				
ANR	5496920	Statement	D_ALWAYS	1453:12:37023:37030	5496870	2	True				
ANR	5496921	Statement	","	1453:20:37031:37031	5496870	3	True				
ANR	5496922	Statement	"""set_user_rgid - ERROR: initgroups(%s, %d) failed, """	1454:6:37040:37091	5496870	4	True				
ANR	5496923	Statement	"""errno: %d\\n"""	1455:6:37099:37111	5496870	5	True				
ANR	5496924	Statement	","	1455:19:37112:37112	5496870	6	True				
ANR	5496925	Statement	UserName	1455:21:37114:37121	5496870	7	True				
ANR	5496926	Statement	","	1455:29:37122:37122	5496870	8	True				
ANR	5496927	Statement	UserGid	1455:31:37124:37130	5496870	9	True				
ANR	5496928	Statement	","	1455:38:37131:37131	5496870	10	True				
ANR	5496929	Statement	errno	1455:40:37133:37137	5496870	11	True				
ANR	5496930	Statement	)	1455:46:37139:37139	5496870	12	True				
ANR	5496931	ExpressionStatement		1455:47:37140:37140	5496870	13	True				
ANR	5496932	ReturnStatement	return SET_REAL_GID ( UserGid ) ;	1458:1:37153:37181	5496870	2	True				
ANR	5496933	CallExpression	SET_REAL_GID ( UserGid )		5496870	0					
ANR	5496934	Callee	SET_REAL_GID		5496870	0					
ANR	5496935	Identifier	SET_REAL_GID		5496870	0					
ANR	5496936	ArgumentList	UserGid		5496870	1					
ANR	5496937	Argument	UserGid		5496870	0					
ANR	5496938	Identifier	UserGid		5496870	0					
ANR	5496939	ReturnType	int		5496870	1					
ANR	5496940	Identifier	set_user_rgid		5496870	2					
ANR	5496941	ParameterList			5496870	3					
ANR	5496942	CFGEntryNode	ENTRY		5496870		True				
ANR	5496943	CFGExitNode	EXIT		5496870		True				
ANR	5496944	Symbol	* pcache		5496870						
ANR	5496945	Symbol	SET_REAL_GID		5496870						
ANR	5496946	Symbol	errno		5496870						
ANR	5496947	Symbol	UserName		5496870						
ANR	5496948	Symbol	UserGid		5496870						
ANR	5496949	Symbol	UserIdsInited		5496870						
ANR	5496950	Symbol	D_ALWAYS		5496870						
ANR	5496951	Symbol	pcache ( ) -> init_groups		5496870						
ANR	5496952	Symbol	TrackingGid		5496870						
ANR	5496953	Symbol	pcache		5496870						
ANR	5496954	Function	set_root_euid	1462:0:37187:37242							
ANR	5496955	FunctionDef	set_root_euid ()		5496954	0					
ANR	5496956	CompoundStatement		1464:0:37207:37242	5496954	0					
ANR	5496957	ReturnStatement	return SET_EFFECTIVE_UID ( ROOT ) ;	1465:1:37210:37240	5496954	0	True				
ANR	5496958	CallExpression	SET_EFFECTIVE_UID ( ROOT )		5496954	0					
ANR	5496959	Callee	SET_EFFECTIVE_UID		5496954	0					
ANR	5496960	Identifier	SET_EFFECTIVE_UID		5496954	0					
ANR	5496961	ArgumentList	ROOT		5496954	1					
ANR	5496962	Argument	ROOT		5496954	0					
ANR	5496963	Identifier	ROOT		5496954	0					
ANR	5496964	ReturnType	int		5496954	1					
ANR	5496965	Identifier	set_root_euid		5496954	2					
ANR	5496966	ParameterList			5496954	3					
ANR	5496967	CFGEntryNode	ENTRY		5496954		True				
ANR	5496968	CFGExitNode	EXIT		5496954		True				
ANR	5496969	Symbol	ROOT		5496954						
ANR	5496970	Symbol	SET_EFFECTIVE_UID		5496954						
ANR	5496971	Function	set_root_egid	1468:0:37245:37300							
ANR	5496972	FunctionDef	set_root_egid ()		5496971	0					
ANR	5496973	CompoundStatement		1470:0:37265:37300	5496971	0					
ANR	5496974	ReturnStatement	return SET_EFFECTIVE_GID ( ROOT ) ;	1471:1:37268:37298	5496971	0	True				
ANR	5496975	CallExpression	SET_EFFECTIVE_GID ( ROOT )		5496971	0					
ANR	5496976	Callee	SET_EFFECTIVE_GID		5496971	0					
ANR	5496977	Identifier	SET_EFFECTIVE_GID		5496971	0					
ANR	5496978	ArgumentList	ROOT		5496971	1					
ANR	5496979	Argument	ROOT		5496971	0					
ANR	5496980	Identifier	ROOT		5496971	0					
ANR	5496981	ReturnType	int		5496971	1					
ANR	5496982	Identifier	set_root_egid		5496971	2					
ANR	5496983	ParameterList			5496971	3					
ANR	5496984	CFGEntryNode	ENTRY		5496971		True				
ANR	5496985	CFGExitNode	EXIT		5496971		True				
ANR	5496986	Symbol	ROOT		5496971						
ANR	5496987	Symbol	SET_EFFECTIVE_GID		5496971						
ANR	5496988	Function	set_owner_euid	1475:0:37304:37488							
ANR	5496989	FunctionDef	set_owner_euid ()		5496988	0					
ANR	5496990	CompoundStatement		1477:0:37325:37488	5496988	0					
ANR	5496991	IfStatement	if ( ! OwnerIdsInited )		5496988	0					
ANR	5496992	Condition	! OwnerIdsInited	1478:5:37332:37346	5496988	0	True				
ANR	5496993	UnaryOperationExpression	! OwnerIdsInited		5496988	0					
ANR	5496994	UnaryOperator	!		5496988	0					
ANR	5496995	Identifier	OwnerIdsInited		5496988	1					
ANR	5496996	CompoundStatement		2:23:24:24	5496988	1					
ANR	5496997	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_owner_euid() called when OwnerIds not inited!\\n"" )"	1479:2:37354:37433	5496988	0	True				
ANR	5496998	CallExpression	"dprintf ( D_ALWAYS , ""set_owner_euid() called when OwnerIds not inited!\\n"" )"		5496988	0					
ANR	5496999	Callee	dprintf		5496988	0					
ANR	5497000	Identifier	dprintf		5496988	0					
ANR	5497001	ArgumentList	D_ALWAYS		5496988	1					
ANR	5497002	Argument	D_ALWAYS		5496988	0					
ANR	5497003	Identifier	D_ALWAYS		5496988	0					
ANR	5497004	Argument	"""set_owner_euid() called when OwnerIds not inited!\\n"""		5496988	1					
ANR	5497005	PrimaryExpression	"""set_owner_euid() called when OwnerIds not inited!\\n"""		5496988	0					
ANR	5497006	ReturnStatement	return - 1 ;	1481:2:37437:37446	5496988	1	True				
ANR	5497007	UnaryOperationExpression	- 1		5496988	0					
ANR	5497008	UnaryOperator	-		5496988	0					
ANR	5497009	PrimaryExpression	1		5496988	1					
ANR	5497010	ReturnStatement	return SET_EFFECTIVE_UID ( OwnerUid ) ;	1483:1:37452:37486	5496988	1	True				
ANR	5497011	CallExpression	SET_EFFECTIVE_UID ( OwnerUid )		5496988	0					
ANR	5497012	Callee	SET_EFFECTIVE_UID		5496988	0					
ANR	5497013	Identifier	SET_EFFECTIVE_UID		5496988	0					
ANR	5497014	ArgumentList	OwnerUid		5496988	1					
ANR	5497015	Argument	OwnerUid		5496988	0					
ANR	5497016	Identifier	OwnerUid		5496988	0					
ANR	5497017	ReturnType	int		5496988	1					
ANR	5497018	Identifier	set_owner_euid		5496988	2					
ANR	5497019	ParameterList			5496988	3					
ANR	5497020	CFGEntryNode	ENTRY		5496988		True				
ANR	5497021	CFGExitNode	EXIT		5496988		True				
ANR	5497022	Symbol	OwnerIdsInited		5496988						
ANR	5497023	Symbol	OwnerUid		5496988						
ANR	5497024	Symbol	D_ALWAYS		5496988						
ANR	5497025	Symbol	SET_EFFECTIVE_UID		5496988						
ANR	5497026	Function	set_owner_egid	1487:0:37492:38296							
ANR	5497027	FunctionDef	set_owner_egid ()		5497026	0					
ANR	5497028	CompoundStatement		1489:0:37513:38296	5497026	0					
ANR	5497029	IfStatement	if ( ! OwnerIdsInited )		5497026	0					
ANR	5497030	Condition	! OwnerIdsInited	1490:5:37520:37534	5497026	0	True				
ANR	5497031	UnaryOperationExpression	! OwnerIdsInited		5497026	0					
ANR	5497032	UnaryOperator	!		5497026	0					
ANR	5497033	Identifier	OwnerIdsInited		5497026	1					
ANR	5497034	CompoundStatement		2:23:24:24	5497026	1					
ANR	5497035	ExpressionStatement	"dprintf ( D_ALWAYS , ""set_owner_egid() called when OwnerIds not inited!\\n"" )"	1491:2:37542:37621	5497026	0	True				
ANR	5497036	CallExpression	"dprintf ( D_ALWAYS , ""set_owner_egid() called when OwnerIds not inited!\\n"" )"		5497026	0					
ANR	5497037	Callee	dprintf		5497026	0					
ANR	5497038	Identifier	dprintf		5497026	0					
ANR	5497039	ArgumentList	D_ALWAYS		5497026	1					
ANR	5497040	Argument	D_ALWAYS		5497026	0					
ANR	5497041	Identifier	D_ALWAYS		5497026	0					
ANR	5497042	Argument	"""set_owner_egid() called when OwnerIds not inited!\\n"""		5497026	1					
ANR	5497043	PrimaryExpression	"""set_owner_egid() called when OwnerIds not inited!\\n"""		5497026	0					
ANR	5497044	ReturnStatement	return - 1 ;	1493:2:37625:37634	5497026	1	True				
ANR	5497045	UnaryOperationExpression	- 1		5497026	0					
ANR	5497046	UnaryOperator	-		5497026	0					
ANR	5497047	PrimaryExpression	1		5497026	1					
ANR	5497048	IfStatement	if ( OwnerName )		5497026	1					
ANR	5497049	Condition	OwnerName	1503:5:38034:38042	5497026	0	True				
ANR	5497050	Identifier	OwnerName		5497026	0					
ANR	5497051	CompoundStatement		15:17:532:532	5497026	1					
ANR	5497052	ExpressionStatement	errno = 0	1504:2:38050:38059	5497026	0	True				
ANR	5497053	AssignmentExpression	errno = 0		5497026	0		=			
ANR	5497054	Identifier	errno		5497026	0					
ANR	5497055	PrimaryExpression	0		5497026	1					
ANR	5497056	IfStatement	if ( ! ( pcache ( ) -> init_groups ( OwnerName ) ) )		5497026	1					
ANR	5497057	Condition	! ( pcache ( ) -> init_groups ( OwnerName ) )	1505:5:38066:38100	5497026	0	True				
ANR	5497058	UnaryOperationExpression	! ( pcache ( ) -> init_groups ( OwnerName ) )		5497026	0					
ANR	5497059	UnaryOperator	!		5497026	0					
ANR	5497060	CallExpression	pcache ( ) -> init_groups ( OwnerName )		5497026	1					
ANR	5497061	Callee	pcache ( ) -> init_groups		5497026	0					
ANR	5497062	PtrMemberAccess	pcache ( ) -> init_groups		5497026	0					
ANR	5497063	CallExpression	pcache ( )		5497026	0					
ANR	5497064	Callee	pcache		5497026	0					
ANR	5497065	Identifier	pcache		5497026	0					
ANR	5497066	ArgumentList			5497026	1					
ANR	5497067	Identifier	init_groups		5497026	1					
ANR	5497068	ArgumentList	OwnerName		5497026	1					
ANR	5497069	Argument	OwnerName		5497026	0					
ANR	5497070	Identifier	OwnerName		5497026	0					
ANR	5497071	CompoundStatement		17:43:590:590	5497026	1					
ANR	5497072	Statement	dprintf	1506:3:38109:38115	5497026	0	True				
ANR	5497073	Statement	(	1506:10:38116:38116	5497026	1	True				
ANR	5497074	Statement	D_ALWAYS	1506:12:38118:38125	5497026	2	True				
ANR	5497075	Statement	","	1506:20:38126:38126	5497026	3	True				
ANR	5497076	Statement	"""set_owner_egid - ERROR: initgroups(%s, %d) failed, """	1507:6:38135:38187	5497026	4	True				
ANR	5497077	Statement	"""errno: %s\\n"""	1508:6:38195:38207	5497026	5	True				
ANR	5497078	Statement	","	1508:19:38208:38208	5497026	6	True				
ANR	5497079	Statement	OwnerName	1508:21:38210:38218	5497026	7	True				
ANR	5497080	Statement	","	1508:30:38219:38219	5497026	8	True				
ANR	5497081	Statement	OwnerGid	1508:32:38221:38228	5497026	9	True				
ANR	5497082	Statement	","	1508:40:38229:38229	5497026	10	True				
ANR	5497083	Statement	strerror	1508:42:38231:38238	5497026	11	True				
ANR	5497084	Statement	(	1508:50:38239:38239	5497026	12	True				
ANR	5497085	Statement	errno	1508:51:38240:38244	5497026	13	True				
ANR	5497086	Statement	)	1508:56:38245:38245	5497026	14	True				
ANR	5497087	Statement	)	1508:58:38247:38247	5497026	15	True				
ANR	5497088	ExpressionStatement		1508:59:38248:38248	5497026	16	True				
ANR	5497089	ReturnStatement	return SET_EFFECTIVE_GID ( UserGid ) ;	1511:1:38261:38294	5497026	2	True				
ANR	5497090	CallExpression	SET_EFFECTIVE_GID ( UserGid )		5497026	0					
ANR	5497091	Callee	SET_EFFECTIVE_GID		5497026	0					
ANR	5497092	Identifier	SET_EFFECTIVE_GID		5497026	0					
ANR	5497093	ArgumentList	UserGid		5497026	1					
ANR	5497094	Argument	UserGid		5497026	0					
ANR	5497095	Identifier	UserGid		5497026	0					
ANR	5497096	ReturnType	int		5497026	1					
ANR	5497097	Identifier	set_owner_egid		5497026	2					
ANR	5497098	ParameterList			5497026	3					
ANR	5497099	CFGEntryNode	ENTRY		5497026		True				
ANR	5497100	CFGExitNode	EXIT		5497026		True				
ANR	5497101	Symbol	OwnerIdsInited		5497026						
ANR	5497102	Symbol	* pcache		5497026						
ANR	5497103	Symbol	OwnerName		5497026						
ANR	5497104	Symbol	errno		5497026						
ANR	5497105	Symbol	UserGid		5497026						
ANR	5497106	Symbol	D_ALWAYS		5497026						
ANR	5497107	Symbol	pcache ( ) -> init_groups		5497026						
ANR	5497108	Symbol	SET_EFFECTIVE_GID		5497026						
ANR	5497109	Symbol	pcache		5497026						
ANR	5497110	Function	set_condor_ruid	1515:0:38300:38408							
ANR	5497111	FunctionDef	set_condor_ruid ()		5497110	0					
ANR	5497112	CompoundStatement		1517:0:38322:38408	5497110	0					
ANR	5497113	IfStatement	if ( ! CondorIdsInited )		5497110	0					
ANR	5497114	Condition	! CondorIdsInited	1518:5:38329:38344	5497110	0	True				
ANR	5497115	UnaryOperationExpression	! CondorIdsInited		5497110	0					
ANR	5497116	UnaryOperator	!		5497110	0					
ANR	5497117	Identifier	CondorIdsInited		5497110	1					
ANR	5497118	CompoundStatement		2:24:25:25	5497110	1					
ANR	5497119	ExpressionStatement	init_condor_ids ( )	1519:2:38352:38369	5497110	0	True				
ANR	5497120	CallExpression	init_condor_ids ( )		5497110	0					
ANR	5497121	Callee	init_condor_ids		5497110	0					
ANR	5497122	Identifier	init_condor_ids		5497110	0					
ANR	5497123	ArgumentList			5497110	1					
ANR	5497124	ReturnStatement	return SET_REAL_UID ( CondorUid ) ;	1522:1:38376:38406	5497110	1	True				
ANR	5497125	CallExpression	SET_REAL_UID ( CondorUid )		5497110	0					
ANR	5497126	Callee	SET_REAL_UID		5497110	0					
ANR	5497127	Identifier	SET_REAL_UID		5497110	0					
ANR	5497128	ArgumentList	CondorUid		5497110	1					
ANR	5497129	Argument	CondorUid		5497110	0					
ANR	5497130	Identifier	CondorUid		5497110	0					
ANR	5497131	ReturnType	int		5497110	1					
ANR	5497132	Identifier	set_condor_ruid		5497110	2					
ANR	5497133	ParameterList			5497110	3					
ANR	5497134	CFGEntryNode	ENTRY		5497110		True				
ANR	5497135	CFGExitNode	EXIT		5497110		True				
ANR	5497136	Symbol	SET_REAL_UID		5497110						
ANR	5497137	Symbol	CondorUid		5497110						
ANR	5497138	Symbol	CondorIdsInited		5497110						
ANR	5497139	Function	set_condor_rgid	1526:0:38412:38774							
ANR	5497140	FunctionDef	set_condor_rgid ()		5497139	0					
ANR	5497141	CompoundStatement		1528:0:38434:38774	5497139	0					
ANR	5497142	IfStatement	if ( ! CondorIdsInited )		5497139	0					
ANR	5497143	Condition	! CondorIdsInited	1529:5:38441:38456	5497139	0	True				
ANR	5497144	UnaryOperationExpression	! CondorIdsInited		5497139	0					
ANR	5497145	UnaryOperator	!		5497139	0					
ANR	5497146	Identifier	CondorIdsInited		5497139	1					
ANR	5497147	CompoundStatement		2:24:25:25	5497139	1					
ANR	5497148	ExpressionStatement	init_condor_ids ( )	1530:2:38464:38481	5497139	0	True				
ANR	5497149	CallExpression	init_condor_ids ( )		5497139	0					
ANR	5497150	Callee	init_condor_ids		5497139	0					
ANR	5497151	Identifier	init_condor_ids		5497139	0					
ANR	5497152	ArgumentList			5497139	1					
ANR	5497153	IfStatement	if ( CondorUserName )		5497139	1					
ANR	5497154	Condition	CondorUserName	1533:5:38492:38505	5497139	0	True				
ANR	5497155	Identifier	CondorUserName		5497139	0					
ANR	5497156	CompoundStatement		6:22:74:74	5497139	1					
ANR	5497157	ExpressionStatement	errno = 0	1534:2:38513:38522	5497139	0	True				
ANR	5497158	AssignmentExpression	errno = 0		5497139	0		=			
ANR	5497159	Identifier	errno		5497139	0					
ANR	5497160	PrimaryExpression	0		5497139	1					
ANR	5497161	IfStatement	if ( ! ( pcache ( ) -> init_groups ( CondorUserName ) ) )		5497139	1					
ANR	5497162	Condition	! ( pcache ( ) -> init_groups ( CondorUserName ) )	1535:5:38529:38568	5497139	0	True				
ANR	5497163	UnaryOperationExpression	! ( pcache ( ) -> init_groups ( CondorUserName ) )		5497139	0					
ANR	5497164	UnaryOperator	!		5497139	0					
ANR	5497165	CallExpression	pcache ( ) -> init_groups ( CondorUserName )		5497139	1					
ANR	5497166	Callee	pcache ( ) -> init_groups		5497139	0					
ANR	5497167	PtrMemberAccess	pcache ( ) -> init_groups		5497139	0					
ANR	5497168	CallExpression	pcache ( )		5497139	0					
ANR	5497169	Callee	pcache		5497139	0					
ANR	5497170	Identifier	pcache		5497139	0					
ANR	5497171	ArgumentList			5497139	1					
ANR	5497172	Identifier	init_groups		5497139	1					
ANR	5497173	ArgumentList	CondorUserName		5497139	1					
ANR	5497174	Argument	CondorUserName		5497139	0					
ANR	5497175	Identifier	CondorUserName		5497139	0					
ANR	5497176	CompoundStatement		8:48:137:137	5497139	1					
ANR	5497177	Statement	dprintf	1536:3:38577:38583	5497139	0	True				
ANR	5497178	Statement	(	1536:10:38584:38584	5497139	1	True				
ANR	5497179	Statement	D_ALWAYS	1536:12:38586:38593	5497139	2	True				
ANR	5497180	Statement	","	1536:20:38594:38594	5497139	3	True				
ANR	5497181	Statement	"""set_condor_rgid - ERROR: initgroups(%s) failed, """	1537:6:38603:38652	5497139	4	True				
ANR	5497182	Statement	"""errno: %s\\n"""	1538:6:38660:38672	5497139	5	True				
ANR	5497183	Statement	","	1538:19:38673:38673	5497139	6	True				
ANR	5497184	Statement	CondorUserName	1538:21:38675:38688	5497139	7	True				
ANR	5497185	Statement	","	1538:35:38689:38689	5497139	8	True				
ANR	5497186	Statement	strerror	1538:37:38691:38698	5497139	9	True				
ANR	5497187	Statement	(	1538:45:38699:38699	5497139	10	True				
ANR	5497188	Statement	errno	1538:46:38700:38704	5497139	11	True				
ANR	5497189	Statement	)	1538:51:38705:38705	5497139	12	True				
ANR	5497190	Statement	)	1538:53:38707:38707	5497139	13	True				
ANR	5497191	ExpressionStatement		1538:54:38708:38708	5497139	14	True				
ANR	5497192	ReturnStatement	return SET_REAL_GID ( CondorGid ) ;	1542:1:38742:38772	5497139	2	True				
ANR	5497193	CallExpression	SET_REAL_GID ( CondorGid )		5497139	0					
ANR	5497194	Callee	SET_REAL_GID		5497139	0					
ANR	5497195	Identifier	SET_REAL_GID		5497139	0					
ANR	5497196	ArgumentList	CondorGid		5497139	1					
ANR	5497197	Argument	CondorGid		5497139	0					
ANR	5497198	Identifier	CondorGid		5497139	0					
ANR	5497199	ReturnType	int		5497139	1					
ANR	5497200	Identifier	set_condor_rgid		5497139	2					
ANR	5497201	ParameterList			5497139	3					
ANR	5497202	CFGEntryNode	ENTRY		5497139		True				
ANR	5497203	CFGExitNode	EXIT		5497139		True				
ANR	5497204	Symbol	* pcache		5497139						
ANR	5497205	Symbol	SET_REAL_GID		5497139						
ANR	5497206	Symbol	errno		5497139						
ANR	5497207	Symbol	CondorGid		5497139						
ANR	5497208	Symbol	CondorUserName		5497139						
ANR	5497209	Symbol	pcache ( ) -> init_groups		5497139						
ANR	5497210	Symbol	pcache		5497139						
ANR	5497211	Symbol	CondorIdsInited		5497139						
ANR	5497212	Function	is_root	1545:0:38777:39047							
ANR	5497213	FunctionDef	is_root ()		5497212	0					
ANR	5497214	CompoundStatement		1547:0:38798:39047	5497212	0					
ANR	5497215	ReturnStatement	return ( ! getuid ( ) || ! geteuid ( ) ) ;	1553:1:39011:39045	5497212	0	True				
ANR	5497216	OrExpression	! getuid ( ) || ! geteuid ( )		5497212	0		||			
ANR	5497217	UnaryOperationExpression	! getuid ( )		5497212	0					
ANR	5497218	UnaryOperator	!		5497212	0					
ANR	5497219	CallExpression	getuid ( )		5497212	1					
ANR	5497220	Callee	getuid		5497212	0					
ANR	5497221	Identifier	getuid		5497212	0					
ANR	5497222	ArgumentList			5497212	1					
ANR	5497223	UnaryOperationExpression	! geteuid ( )		5497212	1					
ANR	5497224	UnaryOperator	!		5497212	0					
ANR	5497225	CallExpression	geteuid ( )		5497212	1					
ANR	5497226	Callee	geteuid		5497212	0					
ANR	5497227	Identifier	geteuid		5497212	0					
ANR	5497228	ArgumentList			5497212	1					
ANR	5497229	ReturnType	int		5497212	1					
ANR	5497230	Identifier	is_root		5497212	2					
ANR	5497231	ParameterList			5497212	3					
ANR	5497232	CFGEntryNode	ENTRY		5497212		True				
ANR	5497233	CFGExitNode	EXIT		5497212		True				
ANR	5497234	Symbol	getuid		5497212						
ANR	5497235	Symbol	geteuid		5497212						
ANR	5497236	Function	get_real_username	1557:0:39051:39333							
ANR	5497237	FunctionDef	get_real_username ()		5497236	0					
ANR	5497238	CompoundStatement		1559:0:39089:39333	5497236	0					
ANR	5497239	IfStatement	if ( ! RealUserName )		5497236	0					
ANR	5497240	Condition	! RealUserName	1560:5:39096:39109	5497236	0	True				
ANR	5497241	UnaryOperationExpression	! RealUserName		5497236	0					
ANR	5497242	UnaryOperator	!		5497236	0					
ANR	5497243	Identifier	RealUserName		5497236	1					
ANR	5497244	CompoundStatement		3:2:27:50	5497236	1					
ANR	5497245	IdentifierDeclStatement	uid_t my_uid = getuid ( ) ;	1561:2:39117:39140	5497236	0	True				
ANR	5497246	IdentifierDecl	my_uid = getuid ( )		5497236	0					
ANR	5497247	IdentifierDeclType	uid_t		5497236	0					
ANR	5497248	Identifier	my_uid		5497236	1					
ANR	5497249	AssignmentExpression	my_uid = getuid ( )		5497236	2		=			
ANR	5497250	Identifier	my_uid		5497236	0					
ANR	5497251	CallExpression	getuid ( )		5497236	1					
ANR	5497252	Callee	getuid		5497236	0					
ANR	5497253	Identifier	getuid		5497236	0					
ANR	5497254	ArgumentList			5497236	1					
ANR	5497255	IfStatement	"if ( ! ( pcache ( ) -> get_user_name ( my_uid , ( char * & ) RealUserName ) ) )"		5497236	1					
ANR	5497256	Condition	"! ( pcache ( ) -> get_user_name ( my_uid , ( char * & ) RealUserName ) )"	1562:7:39149:39206	5497236	0	True				
ANR	5497257	UnaryOperationExpression	"! ( pcache ( ) -> get_user_name ( my_uid , ( char * & ) RealUserName ) )"		5497236	0					
ANR	5497258	UnaryOperator	!		5497236	0					
ANR	5497259	CallExpression	"pcache ( ) -> get_user_name ( my_uid , ( char * & ) RealUserName )"		5497236	1					
ANR	5497260	Callee	pcache ( ) -> get_user_name		5497236	0					
ANR	5497261	PtrMemberAccess	pcache ( ) -> get_user_name		5497236	0					
ANR	5497262	CallExpression	pcache ( )		5497236	0					
ANR	5497263	Callee	pcache		5497236	0					
ANR	5497264	Identifier	pcache		5497236	0					
ANR	5497265	ArgumentList			5497236	1					
ANR	5497266	Identifier	get_user_name		5497236	1					
ANR	5497267	ArgumentList	my_uid		5497236	1					
ANR	5497268	Argument	my_uid		5497236	0					
ANR	5497269	Identifier	my_uid		5497236	0					
ANR	5497270	Argument	( char * & ) RealUserName		5497236	1					
ANR	5497271	CastExpression	( char * & ) RealUserName		5497236	0					
ANR	5497272	CastTarget	char * &		5497236	0					
ANR	5497273	Identifier	RealUserName		5497236	1					
ANR	5497274	CompoundStatement		5:3:125:137	5497236	1					
ANR	5497275	IdentifierDeclStatement	char buf [ 64 ] ;	1563:3:39215:39227	5497236	0	True				
ANR	5497276	IdentifierDecl	buf [ 64 ]		5497236	0					
ANR	5497277	IdentifierDeclType	char [ 64 ]		5497236	0					
ANR	5497278	Identifier	buf		5497236	1					
ANR	5497279	PrimaryExpression	64		5497236	2					
ANR	5497280	ExpressionStatement	"sprintf ( buf , ""uid %d"" , ( int ) my_uid )"	1564:3:39232:39269	5497236	1	True				
ANR	5497281	CallExpression	"sprintf ( buf , ""uid %d"" , ( int ) my_uid )"		5497236	0					
ANR	5497282	Callee	sprintf		5497236	0					
ANR	5497283	Identifier	sprintf		5497236	0					
ANR	5497284	ArgumentList	buf		5497236	1					
ANR	5497285	Argument	buf		5497236	0					
ANR	5497286	Identifier	buf		5497236	0					
ANR	5497287	Argument	"""uid %d"""		5497236	1					
ANR	5497288	PrimaryExpression	"""uid %d"""		5497236	0					
ANR	5497289	Argument	( int ) my_uid		5497236	2					
ANR	5497290	CastExpression	( int ) my_uid		5497236	0					
ANR	5497291	CastTarget	int		5497236	0					
ANR	5497292	Identifier	my_uid		5497236	1					
ANR	5497293	ExpressionStatement	RealUserName = strdup ( buf )	1565:3:39274:39302	5497236	2	True				
ANR	5497294	AssignmentExpression	RealUserName = strdup ( buf )		5497236	0		=			
ANR	5497295	Identifier	RealUserName		5497236	0					
ANR	5497296	CallExpression	strdup ( buf )		5497236	1					
ANR	5497297	Callee	strdup		5497236	0					
ANR	5497298	Identifier	strdup		5497236	0					
ANR	5497299	ArgumentList	buf		5497236	1					
ANR	5497300	Argument	buf		5497236	0					
ANR	5497301	Identifier	buf		5497236	0					
ANR	5497302	ReturnStatement	return RealUserName ;	1568:1:39312:39331	5497236	1	True				
ANR	5497303	Identifier	RealUserName		5497236	0					
ANR	5497304	ReturnType	const char *		5497236	1					
ANR	5497305	Identifier	get_real_username		5497236	2					
ANR	5497306	ParameterList			5497236	3					
ANR	5497307	CFGEntryNode	ENTRY		5497236		True				
ANR	5497308	CFGExitNode	EXIT		5497236		True				
ANR	5497309	Symbol	* pcache		5497236						
ANR	5497310	Symbol	getuid		5497236						
ANR	5497311	Symbol	buf		5497236						
ANR	5497312	Symbol	my_uid		5497236						
ANR	5497313	Symbol	strdup		5497236						
ANR	5497314	Symbol	RealUserName		5497236						
ANR	5497315	Symbol	pcache		5497236						
ANR	5497316	Symbol	pcache ( ) -> get_user_name		5497236						
ANR	5497317	Function	get_user_loginname	1572:0:39409:39462							
ANR	5497318	FunctionDef	get_user_loginname ()		5497317	0					
ANR	5497319	CompoundStatement		1573:21:39442:39462	5497317	0					
ANR	5497320	ReturnStatement	return UserName ;	1574:1:39445:39460	5497317	0	True				
ANR	5497321	Identifier	UserName		5497317	0					
ANR	5497322	ReturnType	const char *		5497317	1					
ANR	5497323	Identifier	get_user_loginname		5497317	2					
ANR	5497324	ParameterList			5497317	3					
ANR	5497325	CFGEntryNode	ENTRY		5497317		True				
ANR	5497326	CFGExitNode	EXIT		5497317		True				
ANR	5497327	Symbol	UserName		5497317						
ANR	5497328	Function	priv_identifier	1579:0:39499:41216							
ANR	5497329	FunctionDef	priv_identifier (priv_state s)		5497328	0					
ANR	5497330	CompoundStatement		1581:0:39543:41216	5497328	0					
ANR	5497331	Statement	static	1582:1:39546:39551	5497328	0	True				
ANR	5497332	IdentifierDeclStatement	char id [ 256 ] ;	1582:8:39553:39565	5497328	1	True				
ANR	5497333	IdentifierDecl	id [ 256 ]		5497328	0					
ANR	5497334	IdentifierDeclType	char [ 256 ]		5497328	0					
ANR	5497335	Identifier	id		5497328	1					
ANR	5497336	PrimaryExpression	256		5497328	2					
ANR	5497337	IdentifierDeclStatement	int id_sz = 256 ;	1583:1:39568:39583	5497328	2	True				
ANR	5497338	IdentifierDecl	id_sz = 256		5497328	0					
ANR	5497339	IdentifierDeclType	int		5497328	0					
ANR	5497340	Identifier	id_sz		5497328	1					
ANR	5497341	AssignmentExpression	id_sz = 256		5497328	2		=			
ANR	5497342	Identifier	id_sz		5497328	0					
ANR	5497343	PrimaryExpression	256		5497328	1					
ANR	5497344	SwitchStatement	switch ( s )		5497328	3					
ANR	5497345	Condition	s	1585:9:39620:39620	5497328	0	True				
ANR	5497346	Identifier	s		5497328	0					
ANR	5497347	CompoundStatement		5:13:80:80	5497328	1					
ANR	5497348	Label	case PRIV_UNKNOWN :	1587:1:39628:39645	5497328	0	True				
ANR	5497349	Identifier	PRIV_UNKNOWN		5497328	0					
ANR	5497350	ExpressionStatement	"snprintf ( id , id_sz , ""unknown user"" )"	1588:2:39649:39686	5497328	1	True				
ANR	5497351	CallExpression	"snprintf ( id , id_sz , ""unknown user"" )"		5497328	0					
ANR	5497352	Callee	snprintf		5497328	0					
ANR	5497353	Identifier	snprintf		5497328	0					
ANR	5497354	ArgumentList	id		5497328	1					
ANR	5497355	Argument	id		5497328	0					
ANR	5497356	Identifier	id		5497328	0					
ANR	5497357	Argument	id_sz		5497328	1					
ANR	5497358	Identifier	id_sz		5497328	0					
ANR	5497359	Argument	"""unknown user"""		5497328	2					
ANR	5497360	PrimaryExpression	"""unknown user"""		5497328	0					
ANR	5497361	BreakStatement	break ;	1589:2:39690:39695	5497328	2	True				
ANR	5497362	Label	case PRIV_FILE_OWNER :	1591:1:39699:39719	5497328	3	True				
ANR	5497363	Identifier	PRIV_FILE_OWNER		5497328	0					
ANR	5497364	IfStatement	if ( ! OwnerIdsInited )		5497328	4					
ANR	5497365	Condition	! OwnerIdsInited	1592:6:39727:39742	5497328	0	True				
ANR	5497366	UnaryOperationExpression	! OwnerIdsInited		5497328	0					
ANR	5497367	UnaryOperator	!		5497328	0					
ANR	5497368	Identifier	OwnerIdsInited		5497328	1					
ANR	5497369	CompoundStatement		12:25:202:202	5497328	1					
ANR	5497370	IfStatement	if ( ! can_switch_ids ( ) )		5497328	0					
ANR	5497371	Condition	! can_switch_ids ( )	1593:7:39755:39771	5497328	0	True				
ANR	5497372	UnaryOperationExpression	! can_switch_ids ( )		5497328	0					
ANR	5497373	UnaryOperator	!		5497328	0					
ANR	5497374	CallExpression	can_switch_ids ( )		5497328	1					
ANR	5497375	Callee	can_switch_ids		5497328	0					
ANR	5497376	Identifier	can_switch_ids		5497328	0					
ANR	5497377	ArgumentList			5497328	1					
ANR	5497378	CompoundStatement		13:27:231:231	5497328	1					
ANR	5497379	ReturnStatement	return priv_identifier ( PRIV_CONDOR ) ;	1594:4:39781:39818	5497328	0	True				
ANR	5497380	CallExpression	priv_identifier ( PRIV_CONDOR )		5497328	0					
ANR	5497381	Callee	priv_identifier		5497328	0					
ANR	5497382	Identifier	priv_identifier		5497328	0					
ANR	5497383	ArgumentList	PRIV_CONDOR		5497328	1					
ANR	5497384	Argument	PRIV_CONDOR		5497328	0					
ANR	5497385	Identifier	PRIV_CONDOR		5497328	0					
ANR	5497386	Statement	EXCEPT	1596:3:39828:39833	5497328	1	True				
ANR	5497387	Statement	(	1596:9:39834:39834	5497328	2	True				
ANR	5497388	Statement	"""Programmer Error: priv_identifier() called for """	1596:11:39836:39884	5497328	3	True				
ANR	5497389	Statement	"""PRIV_FILE_OWNER, but owner ids are not initialized"""	1597:5:39891:39942	5497328	4	True				
ANR	5497390	Statement	)	1597:58:39944:39944	5497328	5	True				
ANR	5497391	ExpressionStatement		1597:59:39945:39945	5497328	6	True				
ANR	5497392	Statement	EXCEPT	1600:2:39966:39971	5497328	5	True				
ANR	5497393	Statement	(	1600:8:39972:39972	5497328	6	True				
ANR	5497394	Statement	"""Programmer Error: priv_identifier() called for """	1600:10:39974:40022	5497328	7	True				
ANR	5497395	Statement	"""PRIV_FILE_OWNER, on WIN32"""	1601:4:40028:40054	5497328	8	True				
ANR	5497396	Statement	)	1601:32:40056:40056	5497328	9	True				
ANR	5497397	ExpressionStatement		1601:33:40057:40057	5497328	10	True				
ANR	5497398	BreakStatement	break ;	1606:2:40187:40192	5497328	11	True				
ANR	5497399	Label	case PRIV_USER :	1608:1:40196:40210	5497328	12	True				
ANR	5497400	Identifier	PRIV_USER		5497328	0					
ANR	5497401	Label	case PRIV_USER_FINAL :	1609:1:40213:40233	5497328	13	True				
ANR	5497402	Identifier	PRIV_USER_FINAL		5497328	0					
ANR	5497403	IfStatement	if ( ! UserIdsInited )		5497328	14					
ANR	5497404	Condition	! UserIdsInited	1610:6:40241:40255	5497328	0	True				
ANR	5497405	UnaryOperationExpression	! UserIdsInited		5497328	0					
ANR	5497406	UnaryOperator	!		5497328	0					
ANR	5497407	Identifier	UserIdsInited		5497328	1					
ANR	5497408	CompoundStatement		30:24:715:715	5497328	1					
ANR	5497409	IfStatement	if ( ! can_switch_ids ( ) )		5497328	0					
ANR	5497410	Condition	! can_switch_ids ( )	1611:7:40268:40284	5497328	0	True				
ANR	5497411	UnaryOperationExpression	! can_switch_ids ( )		5497328	0					
ANR	5497412	UnaryOperator	!		5497328	0					
ANR	5497413	CallExpression	can_switch_ids ( )		5497328	1					
ANR	5497414	Callee	can_switch_ids		5497328	0					
ANR	5497415	Identifier	can_switch_ids		5497328	0					
ANR	5497416	ArgumentList			5497328	1					
ANR	5497417	CompoundStatement		31:27:744:744	5497328	1					
ANR	5497418	ReturnStatement	return priv_identifier ( PRIV_CONDOR ) ;	1612:4:40294:40331	5497328	0	True				
ANR	5497419	CallExpression	priv_identifier ( PRIV_CONDOR )		5497328	0					
ANR	5497420	Callee	priv_identifier		5497328	0					
ANR	5497421	Identifier	priv_identifier		5497328	0					
ANR	5497422	ArgumentList	PRIV_CONDOR		5497328	1					
ANR	5497423	Argument	PRIV_CONDOR		5497328	0					
ANR	5497424	Identifier	PRIV_CONDOR		5497328	0					
ANR	5497425	Statement	EXCEPT	1614:3:40341:40346	5497328	1	True				
ANR	5497426	Statement	(	1614:9:40347:40347	5497328	2	True				
ANR	5497427	Statement	"""Programmer Error: priv_identifier() called for """	1614:11:40349:40397	5497328	3	True				
ANR	5497428	Statement	"""%s, but user ids are not initialized"""	1615:5:40404:40441	5497328	4	True				
ANR	5497429	Statement	","	1615:43:40442:40442	5497328	5	True				
ANR	5497430	Statement	priv_to_string	1616:5:40449:40462	5497328	6	True				
ANR	5497431	Statement	(	1616:19:40463:40463	5497328	7	True				
ANR	5497432	Statement	s	1616:20:40464:40464	5497328	8	True				
ANR	5497433	Statement	)	1616:21:40465:40465	5497328	9	True				
ANR	5497434	Statement	)	1616:23:40467:40467	5497328	10	True				
ANR	5497435	ExpressionStatement		1616:24:40468:40468	5497328	11	True				
ANR	5497436	ExpressionStatement	"snprintf ( id , id_sz , ""%s@%s"" , UserLoginName , UserDomainName )"	1619:2:40489:40550	5497328	15	True				
ANR	5497437	CallExpression	"snprintf ( id , id_sz , ""%s@%s"" , UserLoginName , UserDomainName )"		5497328	0					
ANR	5497438	Callee	snprintf		5497328	0					
ANR	5497439	Identifier	snprintf		5497328	0					
ANR	5497440	ArgumentList	id		5497328	1					
ANR	5497441	Argument	id		5497328	0					
ANR	5497442	Identifier	id		5497328	0					
ANR	5497443	Argument	id_sz		5497328	1					
ANR	5497444	Identifier	id_sz		5497328	0					
ANR	5497445	Argument	"""%s@%s"""		5497328	2					
ANR	5497446	PrimaryExpression	"""%s@%s"""		5497328	0					
ANR	5497447	Argument	UserLoginName		5497328	3					
ANR	5497448	Identifier	UserLoginName		5497328	0					
ANR	5497449	Argument	UserDomainName		5497328	4					
ANR	5497450	Identifier	UserDomainName		5497328	0					
ANR	5497451	BreakStatement	break ;	1624:2:40671:40676	5497328	16	True				
ANR	5497452	Label	case PRIV_ROOT :	1627:1:40693:40707	5497328	17	True				
ANR	5497453	Identifier	PRIV_ROOT		5497328	0					
ANR	5497454	Label	case PRIV_CONDOR :	1628:1:40710:40726	5497328	18	True				
ANR	5497455	Identifier	PRIV_CONDOR		5497328	0					
ANR	5497456	ExpressionStatement	"snprintf ( id , id_sz , ""SuperUser (system)"" )"	1629:2:40730:40773	5497328	19	True				
ANR	5497457	CallExpression	"snprintf ( id , id_sz , ""SuperUser (system)"" )"		5497328	0					
ANR	5497458	Callee	snprintf		5497328	0					
ANR	5497459	Identifier	snprintf		5497328	0					
ANR	5497460	ArgumentList	id		5497328	1					
ANR	5497461	Argument	id		5497328	0					
ANR	5497462	Identifier	id		5497328	0					
ANR	5497463	Argument	id_sz		5497328	1					
ANR	5497464	Identifier	id_sz		5497328	0					
ANR	5497465	Argument	"""SuperUser (system)"""		5497328	2					
ANR	5497466	PrimaryExpression	"""SuperUser (system)"""		5497328	0					
ANR	5497467	BreakStatement	break ;	1630:2:40777:40782	5497328	20	True				
ANR	5497468	Label	default :	1643:1:41072:41079	5497328	21	True				
ANR	5497469	Identifier	default		5497328	0					
ANR	5497470	ExpressionStatement	"EXCEPT ( ""Programmer error: unknown state (%d) in priv_identifier"" , ( int ) s )"	1644:2:41083:41163	5497328	22	True				
ANR	5497471	CallExpression	"EXCEPT ( ""Programmer error: unknown state (%d) in priv_identifier"" , ( int ) s )"		5497328	0					
ANR	5497472	Callee	EXCEPT		5497328	0					
ANR	5497473	Identifier	EXCEPT		5497328	0					
ANR	5497474	ArgumentList	"""Programmer error: unknown state (%d) in priv_identifier"""		5497328	1					
ANR	5497475	Argument	"""Programmer error: unknown state (%d) in priv_identifier"""		5497328	0					
ANR	5497476	PrimaryExpression	"""Programmer error: unknown state (%d) in priv_identifier"""		5497328	0					
ANR	5497477	Argument	( int ) s		5497328	1					
ANR	5497478	CastExpression	( int ) s		5497328	0					
ANR	5497479	CastTarget	int		5497328	0					
ANR	5497480	Identifier	s		5497328	1					
ANR	5497481	ReturnStatement	return ( const char * ) id ;	1649:1:41191:41214	5497328	4	True				
ANR	5497482	CastExpression	( const char * ) id		5497328	0					
ANR	5497483	CastTarget	const char *		5497328	0					
ANR	5497484	Identifier	id		5497328	1					
ANR	5497485	ReturnType	const char *		5497328	1					
ANR	5497486	Identifier	priv_identifier		5497328	2					
ANR	5497487	ParameterList	priv_state s		5497328	3					
ANR	5497488	Parameter	priv_state s	1580:17:39528:39539	5497328	0	True				
ANR	5497489	ParameterType	priv_state		5497328	0					
ANR	5497490	Identifier	s		5497328	1					
ANR	5497491	CFGEntryNode	ENTRY		5497328		True				
ANR	5497492	CFGExitNode	EXIT		5497328		True				
ANR	5497493	Symbol	OwnerIdsInited		5497328						
ANR	5497494	Symbol	priv_identifier		5497328						
ANR	5497495	Symbol	UserDomainName		5497328						
ANR	5497496	Symbol	s		5497328						
ANR	5497497	Symbol	can_switch_ids		5497328						
ANR	5497498	Symbol	UserIdsInited		5497328						
ANR	5497499	Symbol	id		5497328						
ANR	5497500	Symbol	UserLoginName		5497328						
ANR	5497501	Symbol	PRIV_CONDOR		5497328						
ANR	5497502	Symbol	id_sz		5497328						
