command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4946863	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_test_multi_log.cpp								
ANR	4946864	DeclStmt									
ANR	4946865	Decl							const char	const char *	VERSION
ANR	4946866	ClassDef	Status	36:0:1145:1198							
ANR	4946867	DeclStmt									
ANR	4946868	Decl							int	int	verbosity
ANR	4946869	DeclStmt									
ANR	4946870	Decl							Status	"Status ( int argc , char * * argv )"	CheckArgs
ANR	4946871	DeclStmt									
ANR	4946872	Decl							bool	"bool ( StringList & reference , StringList & test )"	CompareStringLists
ANR	4946873	DeclStmt									
ANR	4946874	Decl							bool	bool ( StringList & logFiles )	GetGoodLogFiles
ANR	4946875	DeclStmt									
ANR	4946876	Decl							bool	bool ( )	GetBadLogFiles
ANR	4946877	DeclStmt									
ANR	4946878	Decl							bool	bool ( StringList & logFiles )	ReadEvents
ANR	4946879	DeclStmt									
ANR	4946880	Decl							bool	bool ( )	ReadEventsLazy
ANR	4946881	DeclStmt									
ANR	4946882	Decl							bool	"bool ( ReadMultipleUserLogs & reader , const char * logfile , bool truncateIfFirst )"	monitorLogFile
ANR	4946883	DeclStmt									
ANR	4946884	Decl							bool	"bool ( ReadMultipleUserLogs & reader , const char * logfile )"	unmonitorLogFile
ANR	4946885	DeclStmt									
ANR	4946886	Decl							bool	"bool ( ReadMultipleUserLogs & reader , ULogEvent * expectedEvent )"	ReadAndTestEvent
ANR	4946887	DeclStmt									
ANR	4946888	Decl							void	void ( ULogEvent * event )	PrintEvent
ANR	4946889	Function	main	52:0:1756:2357							
ANR	4946890	FunctionDef	"main (int argc , char * * argv)"		4946889	0					
ANR	4946891	CompoundStatement		53:0:1788:2357	4946889	0					
ANR	4946892	ExpressionStatement	Termlog = true	55:1:1824:1838	4946889	0	True				
ANR	4946893	AssignmentExpression	Termlog = true		4946889	0		=			
ANR	4946894	Identifier	Termlog		4946889	0					
ANR	4946895	Identifier	true		4946889	1					
ANR	4946896	ExpressionStatement	"dprintf_config ( ""test_multi_log"" , get_param_functions ( ) )"	56:1:1841:1896	4946889	1	True				
ANR	4946897	CallExpression	"dprintf_config ( ""test_multi_log"" , get_param_functions ( ) )"		4946889	0					
ANR	4946898	Callee	dprintf_config		4946889	0					
ANR	4946899	Identifier	dprintf_config		4946889	0					
ANR	4946900	ArgumentList	"""test_multi_log"""		4946889	1					
ANR	4946901	Argument	"""test_multi_log"""		4946889	0					
ANR	4946902	PrimaryExpression	"""test_multi_log"""		4946889	0					
ANR	4946903	Argument	get_param_functions ( )		4946889	1					
ANR	4946904	CallExpression	get_param_functions ( )		4946889	0					
ANR	4946905	Callee	get_param_functions		4946889	0					
ANR	4946906	Identifier	get_param_functions		4946889	0					
ANR	4946907	ArgumentList			4946889	1					
ANR	4946908	ExpressionStatement	DebugFlags = D_ALWAYS	57:1:1899:1920	4946889	2	True				
ANR	4946909	AssignmentExpression	DebugFlags = D_ALWAYS		4946889	0		=			
ANR	4946910	Identifier	DebugFlags		4946889	0					
ANR	4946911	Identifier	D_ALWAYS		4946889	1					
ANR	4946912	IdentifierDeclStatement	int result = 0 ;	59:1:1924:1939	4946889	3	True				
ANR	4946913	IdentifierDecl	result = 0		4946889	0					
ANR	4946914	IdentifierDeclType	int		4946889	0					
ANR	4946915	Identifier	result		4946889	1					
ANR	4946916	AssignmentExpression	result = 0		4946889	2		=			
ANR	4946917	Identifier	result		4946889	0					
ANR	4946918	PrimaryExpression	0		4946889	1					
ANR	4946919	IdentifierDeclStatement	"Status tmpStatus = CheckArgs ( argc , argv ) ;"	61:1:1943:1983	4946889	4	True				
ANR	4946920	IdentifierDecl	"tmpStatus = CheckArgs ( argc , argv )"		4946889	0					
ANR	4946921	IdentifierDeclType	Status		4946889	0					
ANR	4946922	Identifier	tmpStatus		4946889	1					
ANR	4946923	AssignmentExpression	"tmpStatus = CheckArgs ( argc , argv )"		4946889	2		=			
ANR	4946924	Identifier	tmpStatus		4946889	0					
ANR	4946925	CallExpression	"CheckArgs ( argc , argv )"		4946889	1					
ANR	4946926	Callee	CheckArgs		4946889	0					
ANR	4946927	Identifier	CheckArgs		4946889	0					
ANR	4946928	ArgumentList	argc		4946889	1					
ANR	4946929	Argument	argc		4946889	0					
ANR	4946930	Identifier	argc		4946889	0					
ANR	4946931	Argument	argv		4946889	1					
ANR	4946932	Identifier	argv		4946889	0					
ANR	4946933	IfStatement	if ( tmpStatus == STATUS_CANCEL )		4946889	5					
ANR	4946934	Condition	tmpStatus == STATUS_CANCEL	62:6:1991:2016	4946889	0	True				
ANR	4946935	EqualityExpression	tmpStatus == STATUS_CANCEL		4946889	0		==			
ANR	4946936	Identifier	tmpStatus		4946889	0					
ANR	4946937	Identifier	STATUS_CANCEL		4946889	1					
ANR	4946938	CompoundStatement		10:35:231:231	4946889	1					
ANR	4946939	ReturnStatement	return 0 ;	63:2:2024:2032	4946889	0	True				
ANR	4946940	PrimaryExpression	0		4946889	0					
ANR	4946941	ElseStatement	else		4946889	0					
ANR	4946942	IfStatement	if ( tmpStatus == STATUS_ERROR )		4946889	0					
ANR	4946943	Condition	tmpStatus == STATUS_ERROR	64:13:2047:2071	4946889	0	True				
ANR	4946944	EqualityExpression	tmpStatus == STATUS_ERROR		4946889	0		==			
ANR	4946945	Identifier	tmpStatus		4946889	0					
ANR	4946946	Identifier	STATUS_ERROR		4946889	1					
ANR	4946947	CompoundStatement		12:41:286:286	4946889	1					
ANR	4946948	ReturnStatement	return 1 ;	65:2:2079:2087	4946889	0	True				
ANR	4946949	PrimaryExpression	1		4946889	0					
ANR	4946950	ExpressionStatement	"printf ( ""Testing multi-log reading code\\n"" )"	68:1:2094:2136	4946889	6	True				
ANR	4946951	CallExpression	"printf ( ""Testing multi-log reading code\\n"" )"		4946889	0					
ANR	4946952	Callee	printf		4946889	0					
ANR	4946953	Identifier	printf		4946889	0					
ANR	4946954	ArgumentList	"""Testing multi-log reading code\\n"""		4946889	1					
ANR	4946955	Argument	"""Testing multi-log reading code\\n"""		4946889	0					
ANR	4946956	PrimaryExpression	"""Testing multi-log reading code\\n"""		4946889	0					
ANR	4946957	ExpressionStatement	fflush ( stdout )	69:1:2139:2153	4946889	7	True				
ANR	4946958	CallExpression	fflush ( stdout )		4946889	0					
ANR	4946959	Callee	fflush		4946889	0					
ANR	4946960	Identifier	fflush		4946889	0					
ANR	4946961	ArgumentList	stdout		4946889	1					
ANR	4946962	Argument	stdout		4946889	0					
ANR	4946963	Identifier	stdout		4946889	0					
ANR	4946964	IfStatement	if ( ! ReadEventsLazy ( ) )		4946889	8					
ANR	4946965	Condition	! ReadEventsLazy ( )	71:6:2162:2178	4946889	0	True				
ANR	4946966	UnaryOperationExpression	! ReadEventsLazy ( )		4946889	0					
ANR	4946967	UnaryOperator	!		4946889	0					
ANR	4946968	CallExpression	ReadEventsLazy ( )		4946889	1					
ANR	4946969	Callee	ReadEventsLazy		4946889	0					
ANR	4946970	Identifier	ReadEventsLazy		4946889	0					
ANR	4946971	ArgumentList			4946889	1					
ANR	4946972	CompoundStatement		19:26:393:393	4946889	1					
ANR	4946973	ExpressionStatement	result = 1	72:2:2186:2196	4946889	0	True				
ANR	4946974	AssignmentExpression	result = 1		4946889	0		=			
ANR	4946975	Identifier	result		4946889	0					
ANR	4946976	PrimaryExpression	1		4946889	1					
ANR	4946977	IfStatement	if ( result == 0 )		4946889	9					
ANR	4946978	Condition	result == 0	75:6:2208:2218	4946889	0	True				
ANR	4946979	EqualityExpression	result == 0		4946889	0		==			
ANR	4946980	Identifier	result		4946889	0					
ANR	4946981	PrimaryExpression	0		4946889	1					
ANR	4946982	CompoundStatement		23:20:433:433	4946889	1					
ANR	4946983	ExpressionStatement	"printf ( ""\\nTest succeeded\\n"" )"	76:2:2226:2254	4946889	0	True				
ANR	4946984	CallExpression	"printf ( ""\\nTest succeeded\\n"" )"		4946889	0					
ANR	4946985	Callee	printf		4946889	0					
ANR	4946986	Identifier	printf		4946889	0					
ANR	4946987	ArgumentList	"""\\nTest succeeded\\n"""		4946889	1					
ANR	4946988	Argument	"""\\nTest succeeded\\n"""		4946889	0					
ANR	4946989	PrimaryExpression	"""\\nTest succeeded\\n"""		4946889	0					
ANR	4946990	ElseStatement	else		4946889	0					
ANR	4946991	CompoundStatement		25:8:475:475	4946889	0					
ANR	4946992	ExpressionStatement	"printf ( ""\\nTest FAILED !!!!!!!!!!!!!!!!!!!!!!!!\\n"" )"	78:2:2268:2318	4946889	0	True				
ANR	4946993	CallExpression	"printf ( ""\\nTest FAILED !!!!!!!!!!!!!!!!!!!!!!!!\\n"" )"		4946889	0					
ANR	4946994	Callee	printf		4946889	0					
ANR	4946995	Identifier	printf		4946889	0					
ANR	4946996	ArgumentList	"""\\nTest FAILED !!!!!!!!!!!!!!!!!!!!!!!!\\n"""		4946889	1					
ANR	4946997	Argument	"""\\nTest FAILED !!!!!!!!!!!!!!!!!!!!!!!!\\n"""		4946889	0					
ANR	4946998	PrimaryExpression	"""\\nTest FAILED !!!!!!!!!!!!!!!!!!!!!!!!\\n"""		4946889	0					
ANR	4946999	ExpressionStatement	fflush ( stdout )	80:1:2324:2338	4946889	10	True				
ANR	4947000	CallExpression	fflush ( stdout )		4946889	0					
ANR	4947001	Callee	fflush		4946889	0					
ANR	4947002	Identifier	fflush		4946889	0					
ANR	4947003	ArgumentList	stdout		4946889	1					
ANR	4947004	Argument	stdout		4946889	0					
ANR	4947005	Identifier	stdout		4946889	0					
ANR	4947006	ReturnStatement	return result ;	82:1:2342:2355	4946889	11	True				
ANR	4947007	Identifier	result		4946889	0					
ANR	4947008	ReturnType	int		4946889	1					
ANR	4947009	Identifier	main		4946889	2					
ANR	4947010	ParameterList	"int argc , char * * argv"		4946889	3					
ANR	4947011	Parameter	int argc	52:9:1765:1772	4946889	0	True				
ANR	4947012	ParameterType	int		4946889	0					
ANR	4947013	Identifier	argc		4946889	1					
ANR	4947014	Parameter	char * * argv	52:19:1775:1785	4946889	1	True				
ANR	4947015	ParameterType	char * *		4946889	0					
ANR	4947016	Identifier	argv		4946889	1					
ANR	4947017	CFGEntryNode	ENTRY		4946889		True				
ANR	4947018	CFGExitNode	EXIT		4946889		True				
ANR	4947019	Symbol	argc		4946889						
ANR	4947020	Symbol	STATUS_CANCEL		4946889						
ANR	4947021	Symbol	stdout		4946889						
ANR	4947022	Symbol	ReadEventsLazy		4946889						
ANR	4947023	Symbol	Termlog		4946889						
ANR	4947024	Symbol	get_param_functions		4946889						
ANR	4947025	Symbol	tmpStatus		4946889						
ANR	4947026	Symbol	D_ALWAYS		4946889						
ANR	4947027	Symbol	DebugFlags		4946889						
ANR	4947028	Symbol	argv		4946889						
ANR	4947029	Symbol	CheckArgs		4946889						
ANR	4947030	Symbol	STATUS_ERROR		4946889						
ANR	4947031	Symbol	result		4946889						
ANR	4947032	Symbol	true		4946889						
ANR	4947033	Function	CheckArgs	87:0:2362:3641							
ANR	4947034	FunctionDef	"CheckArgs (int argc , char * * argv)"		4947033	0					
ANR	4947035	CompoundStatement		89:0:2402:3641	4947033	0					
ANR	4947036	IdentifierDeclStatement	Status status = STATUS_OK ;	90:1:2405:2430	4947033	0	True				
ANR	4947037	IdentifierDecl	status = STATUS_OK		4947033	0					
ANR	4947038	IdentifierDeclType	Status		4947033	0					
ANR	4947039	Identifier	status		4947033	1					
ANR	4947040	AssignmentExpression	status = STATUS_OK		4947033	2		=			
ANR	4947041	Identifier	STATUS_OK		4947033	0					
ANR	4947042	Identifier	STATUS_OK		4947033	1					
ANR	4947043	Statement	const	92:1:2434:2438	4947033	1	True				
ANR	4947044	Statement	char	92:7:2440:2443	4947033	2	True				
ANR	4947045	Statement	*	92:12:2445:2445	4947033	3	True				
ANR	4947046	Statement	usage	92:14:2447:2451	4947033	4	True				
ANR	4947047	Statement	=	92:20:2453:2453	4947033	5	True				
ANR	4947048	Statement	"""Usage: test_multi_log [options]\\n"""	92:22:2455:2489	4947033	6	True				
ANR	4947049	Statement	"""  -debug <level>: debug level (e.g., D_FULLDEBUG)\\n"""	93:3:2494:2546	4947033	7	True				
ANR	4947050	Statement	"""  -usage: print this message and exit\\n"""	94:3:2551:2591	4947033	8	True				
ANR	4947051	Statement	"""  -verbosity <number>: set verbosity level (default is 0)\\n"""	95:3:2596:2656	4947033	9	True				
ANR	4947052	ExpressionStatement	"""  -version: print the version number and compile date\\n"""	96:3:2661:2718	4947033	10	True				
ANR	4947053	PrimaryExpression	"""  -version: print the version number and compile date\\n"""		4947033	0					
ANR	4947054	ForStatement	for ( int index = 1 ; index < argc ; ++ index )		4947033	11					
ANR	4947055	ForInit	int index = 1 ;	98:7:2728:2741	4947033	0	True				
ANR	4947056	IdentifierDeclStatement	int index = 1 ;		4947033	0					
ANR	4947057	IdentifierDecl	index = 1		4947033	0					
ANR	4947058	IdentifierDeclType	int		4947033	0					
ANR	4947059	Identifier	index		4947033	1					
ANR	4947060	AssignmentExpression	index = 1		4947033	2		=			
ANR	4947061	Identifier	index		4947033	0					
ANR	4947062	PrimaryExpression	1		4947033	1					
ANR	4947063	Condition	index < argc	98:22:2743:2754	4947033	1	True				
ANR	4947064	RelationalExpression	index < argc		4947033	0		<			
ANR	4947065	Identifier	index		4947033	0					
ANR	4947066	Identifier	argc		4947033	1					
ANR	4947067	UnaryExpression	++ index	98:36:2757:2763	4947033	2	True				
ANR	4947068	IncDec	++		4947033	0					
ANR	4947069	Identifier	index		4947033	1					
ANR	4947070	CompoundStatement		10:46:364:364	4947033	3					
ANR	4947071	IfStatement	"if ( ! strcmp ( argv [ index ] , ""-debug"" ) )"		4947033	0					
ANR	4947072	Condition	"! strcmp ( argv [ index ] , ""-debug"" )"	99:7:2776:2805	4947033	0	True				
ANR	4947073	UnaryOperationExpression	"! strcmp ( argv [ index ] , ""-debug"" )"		4947033	0					
ANR	4947074	UnaryOperator	!		4947033	0					
ANR	4947075	CallExpression	"strcmp ( argv [ index ] , ""-debug"" )"		4947033	1					
ANR	4947076	Callee	strcmp		4947033	0					
ANR	4947077	Identifier	strcmp		4947033	0					
ANR	4947078	ArgumentList	argv [ index ]		4947033	1					
ANR	4947079	Argument	argv [ index ]		4947033	0					
ANR	4947080	ArrayIndexing	argv [ index ]		4947033	0					
ANR	4947081	Identifier	argv		4947033	0					
ANR	4947082	Identifier	index		4947033	1					
ANR	4947083	Argument	"""-debug"""		4947033	1					
ANR	4947084	PrimaryExpression	"""-debug"""		4947033	0					
ANR	4947085	CompoundStatement		11:40:406:406	4947033	1					
ANR	4947086	IfStatement	if ( ++ index >= argc )		4947033	0					
ANR	4947087	Condition	++ index >= argc	100:8:2819:2833	4947033	0	True				
ANR	4947088	RelationalExpression	++ index >= argc		4947033	0		>=			
ANR	4947089	UnaryExpression	++ index		4947033	0					
ANR	4947090	IncDec	++		4947033	0					
ANR	4947091	Identifier	index		4947033	1					
ANR	4947092	Identifier	argc		4947033	1					
ANR	4947093	CompoundStatement		12:26:434:434	4947033	1					
ANR	4947094	ExpressionStatement	"fprintf ( stderr , ""Value needed for -debug argument\\n"" )"	101:4:2843:2896	4947033	0	True				
ANR	4947095	CallExpression	"fprintf ( stderr , ""Value needed for -debug argument\\n"" )"		4947033	0					
ANR	4947096	Callee	fprintf		4947033	0					
ANR	4947097	Identifier	fprintf		4947033	0					
ANR	4947098	ArgumentList	stderr		4947033	1					
ANR	4947099	Argument	stderr		4947033	0					
ANR	4947100	Identifier	stderr		4947033	0					
ANR	4947101	Argument	"""Value needed for -debug argument\\n"""		4947033	1					
ANR	4947102	PrimaryExpression	"""Value needed for -debug argument\\n"""		4947033	0					
ANR	4947103	ExpressionStatement	"printf ( ""%s"" , usage )"	102:4:2902:2921	4947033	1	True				
ANR	4947104	CallExpression	"printf ( ""%s"" , usage )"		4947033	0					
ANR	4947105	Callee	printf		4947033	0					
ANR	4947106	Identifier	printf		4947033	0					
ANR	4947107	ArgumentList	"""%s"""		4947033	1					
ANR	4947108	Argument	"""%s"""		4947033	0					
ANR	4947109	PrimaryExpression	"""%s"""		4947033	0					
ANR	4947110	Argument	usage		4947033	1					
ANR	4947111	Identifier	usage		4947033	0					
ANR	4947112	ExpressionStatement	status = STATUS_ERROR	103:4:2927:2948	4947033	2	True				
ANR	4947113	AssignmentExpression	status = STATUS_ERROR		4947033	0		=			
ANR	4947114	Identifier	status		4947033	0					
ANR	4947115	Identifier	STATUS_ERROR		4947033	1					
ANR	4947116	ElseStatement	else		4947033	0					
ANR	4947117	CompoundStatement		16:10:557:557	4947033	0					
ANR	4947118	ExpressionStatement	set_debug_flags ( argv [ index ] )	105:4:2966:2996	4947033	0	True				
ANR	4947119	CallExpression	set_debug_flags ( argv [ index ] )		4947033	0					
ANR	4947120	Callee	set_debug_flags		4947033	0					
ANR	4947121	Identifier	set_debug_flags		4947033	0					
ANR	4947122	ArgumentList	argv [ index ]		4947033	1					
ANR	4947123	Argument	argv [ index ]		4947033	0					
ANR	4947124	ArrayIndexing	argv [ index ]		4947033	0					
ANR	4947125	Identifier	argv		4947033	0					
ANR	4947126	Identifier	index		4947033	1					
ANR	4947127	ElseStatement	else		4947033	0					
ANR	4947128	IfStatement	"if ( ! strcmp ( argv [ index ] , ""-usage"" ) )"		4947033	0					
ANR	4947129	Condition	"! strcmp ( argv [ index ] , ""-usage"" )"	108:14:3018:3047	4947033	0	True				
ANR	4947130	UnaryOperationExpression	"! strcmp ( argv [ index ] , ""-usage"" )"		4947033	0					
ANR	4947131	UnaryOperator	!		4947033	0					
ANR	4947132	CallExpression	"strcmp ( argv [ index ] , ""-usage"" )"		4947033	1					
ANR	4947133	Callee	strcmp		4947033	0					
ANR	4947134	Identifier	strcmp		4947033	0					
ANR	4947135	ArgumentList	argv [ index ]		4947033	1					
ANR	4947136	Argument	argv [ index ]		4947033	0					
ANR	4947137	ArrayIndexing	argv [ index ]		4947033	0					
ANR	4947138	Identifier	argv		4947033	0					
ANR	4947139	Identifier	index		4947033	1					
ANR	4947140	Argument	"""-usage"""		4947033	1					
ANR	4947141	PrimaryExpression	"""-usage"""		4947033	0					
ANR	4947142	CompoundStatement		20:47:648:648	4947033	1					
ANR	4947143	ExpressionStatement	"printf ( ""%s"" , usage )"	109:3:3056:3075	4947033	0	True				
ANR	4947144	CallExpression	"printf ( ""%s"" , usage )"		4947033	0					
ANR	4947145	Callee	printf		4947033	0					
ANR	4947146	Identifier	printf		4947033	0					
ANR	4947147	ArgumentList	"""%s"""		4947033	1					
ANR	4947148	Argument	"""%s"""		4947033	0					
ANR	4947149	PrimaryExpression	"""%s"""		4947033	0					
ANR	4947150	Argument	usage		4947033	1					
ANR	4947151	Identifier	usage		4947033	0					
ANR	4947152	ExpressionStatement	status = STATUS_CANCEL	110:3:3080:3102	4947033	1	True				
ANR	4947153	AssignmentExpression	status = STATUS_CANCEL		4947033	0		=			
ANR	4947154	Identifier	status		4947033	0					
ANR	4947155	Identifier	STATUS_CANCEL		4947033	1					
ANR	4947156	ElseStatement	else		4947033	0					
ANR	4947157	IfStatement	"if ( ! strcmp ( argv [ index ] , ""-verbosity"" ) )"		4947033	0					
ANR	4947158	Condition	"! strcmp ( argv [ index ] , ""-verbosity"" )"	112:14:3119:3152	4947033	0	True				
ANR	4947159	UnaryOperationExpression	"! strcmp ( argv [ index ] , ""-verbosity"" )"		4947033	0					
ANR	4947160	UnaryOperator	!		4947033	0					
ANR	4947161	CallExpression	"strcmp ( argv [ index ] , ""-verbosity"" )"		4947033	1					
ANR	4947162	Callee	strcmp		4947033	0					
ANR	4947163	Identifier	strcmp		4947033	0					
ANR	4947164	ArgumentList	argv [ index ]		4947033	1					
ANR	4947165	Argument	argv [ index ]		4947033	0					
ANR	4947166	ArrayIndexing	argv [ index ]		4947033	0					
ANR	4947167	Identifier	argv		4947033	0					
ANR	4947168	Identifier	index		4947033	1					
ANR	4947169	Argument	"""-verbosity"""		4947033	1					
ANR	4947170	PrimaryExpression	"""-verbosity"""		4947033	0					
ANR	4947171	CompoundStatement		24:51:753:753	4947033	1					
ANR	4947172	IfStatement	if ( ++ index >= argc )		4947033	0					
ANR	4947173	Condition	++ index >= argc	113:8:3166:3180	4947033	0	True				
ANR	4947174	RelationalExpression	++ index >= argc		4947033	0		>=			
ANR	4947175	UnaryExpression	++ index		4947033	0					
ANR	4947176	IncDec	++		4947033	0					
ANR	4947177	Identifier	index		4947033	1					
ANR	4947178	Identifier	argc		4947033	1					
ANR	4947179	CompoundStatement		25:26:781:781	4947033	1					
ANR	4947180	ExpressionStatement	"fprintf ( stderr , ""Value needed for -verbosity argument\\n"" )"	114:4:3190:3247	4947033	0	True				
ANR	4947181	CallExpression	"fprintf ( stderr , ""Value needed for -verbosity argument\\n"" )"		4947033	0					
ANR	4947182	Callee	fprintf		4947033	0					
ANR	4947183	Identifier	fprintf		4947033	0					
ANR	4947184	ArgumentList	stderr		4947033	1					
ANR	4947185	Argument	stderr		4947033	0					
ANR	4947186	Identifier	stderr		4947033	0					
ANR	4947187	Argument	"""Value needed for -verbosity argument\\n"""		4947033	1					
ANR	4947188	PrimaryExpression	"""Value needed for -verbosity argument\\n"""		4947033	0					
ANR	4947189	ExpressionStatement	"printf ( ""%s"" , usage )"	115:4:3253:3272	4947033	1	True				
ANR	4947190	CallExpression	"printf ( ""%s"" , usage )"		4947033	0					
ANR	4947191	Callee	printf		4947033	0					
ANR	4947192	Identifier	printf		4947033	0					
ANR	4947193	ArgumentList	"""%s"""		4947033	1					
ANR	4947194	Argument	"""%s"""		4947033	0					
ANR	4947195	PrimaryExpression	"""%s"""		4947033	0					
ANR	4947196	Argument	usage		4947033	1					
ANR	4947197	Identifier	usage		4947033	0					
ANR	4947198	ExpressionStatement	status = STATUS_ERROR	116:4:3278:3299	4947033	2	True				
ANR	4947199	AssignmentExpression	status = STATUS_ERROR		4947033	0		=			
ANR	4947200	Identifier	status		4947033	0					
ANR	4947201	Identifier	STATUS_ERROR		4947033	1					
ANR	4947202	ElseStatement	else		4947033	0					
ANR	4947203	CompoundStatement		29:10:908:908	4947033	0					
ANR	4947204	ExpressionStatement	verbosity = atoi ( argv [ index ] )	118:4:3317:3346	4947033	0	True				
ANR	4947205	AssignmentExpression	verbosity = atoi ( argv [ index ] )		4947033	0		=			
ANR	4947206	Identifier	verbosity		4947033	0					
ANR	4947207	CallExpression	atoi ( argv [ index ] )		4947033	1					
ANR	4947208	Callee	atoi		4947033	0					
ANR	4947209	Identifier	atoi		4947033	0					
ANR	4947210	ArgumentList	argv [ index ]		4947033	1					
ANR	4947211	Argument	argv [ index ]		4947033	0					
ANR	4947212	ArrayIndexing	argv [ index ]		4947033	0					
ANR	4947213	Identifier	argv		4947033	0					
ANR	4947214	Identifier	index		4947033	1					
ANR	4947215	ElseStatement	else		4947033	0					
ANR	4947216	IfStatement	"if ( ! strcmp ( argv [ index ] , ""-version"" ) )"		4947033	0					
ANR	4947217	Condition	"! strcmp ( argv [ index ] , ""-version"" )"	120:14:3367:3398	4947033	0	True				
ANR	4947218	UnaryOperationExpression	"! strcmp ( argv [ index ] , ""-version"" )"		4947033	0					
ANR	4947219	UnaryOperator	!		4947033	0					
ANR	4947220	CallExpression	"strcmp ( argv [ index ] , ""-version"" )"		4947033	1					
ANR	4947221	Callee	strcmp		4947033	0					
ANR	4947222	Identifier	strcmp		4947033	0					
ANR	4947223	ArgumentList	argv [ index ]		4947033	1					
ANR	4947224	Argument	argv [ index ]		4947033	0					
ANR	4947225	ArrayIndexing	argv [ index ]		4947033	0					
ANR	4947226	Identifier	argv		4947033	0					
ANR	4947227	Identifier	index		4947033	1					
ANR	4947228	Argument	"""-version"""		4947033	1					
ANR	4947229	PrimaryExpression	"""-version"""		4947033	0					
ANR	4947230	CompoundStatement		32:49:999:999	4947033	1					
ANR	4947231	ExpressionStatement	"printf ( ""test_multi_log: %s, %s\\n"" , VERSION , __DATE__ )"	121:3:3407:3460	4947033	0	True				
ANR	4947232	CallExpression	"printf ( ""test_multi_log: %s, %s\\n"" , VERSION , __DATE__ )"		4947033	0					
ANR	4947233	Callee	printf		4947033	0					
ANR	4947234	Identifier	printf		4947033	0					
ANR	4947235	ArgumentList	"""test_multi_log: %s, %s\\n"""		4947033	1					
ANR	4947236	Argument	"""test_multi_log: %s, %s\\n"""		4947033	0					
ANR	4947237	PrimaryExpression	"""test_multi_log: %s, %s\\n"""		4947033	0					
ANR	4947238	Argument	VERSION		4947033	1					
ANR	4947239	Identifier	VERSION		4947033	0					
ANR	4947240	Argument	__DATE__		4947033	2					
ANR	4947241	Identifier	__DATE__		4947033	0					
ANR	4947242	ExpressionStatement	status = STATUS_CANCEL	122:3:3465:3487	4947033	1	True				
ANR	4947243	AssignmentExpression	status = STATUS_CANCEL		4947033	0		=			
ANR	4947244	Identifier	status		4947033	0					
ANR	4947245	Identifier	STATUS_CANCEL		4947033	1					
ANR	4947246	ElseStatement	else		4947033	0					
ANR	4947247	CompoundStatement		36:9:1096:1096	4947033	0					
ANR	4947248	ExpressionStatement	"fprintf ( stderr , ""Unrecognized argument: <%s>\\n"" , argv [ index ] )"	125:3:3504:3565	4947033	0	True				
ANR	4947249	CallExpression	"fprintf ( stderr , ""Unrecognized argument: <%s>\\n"" , argv [ index ] )"		4947033	0					
ANR	4947250	Callee	fprintf		4947033	0					
ANR	4947251	Identifier	fprintf		4947033	0					
ANR	4947252	ArgumentList	stderr		4947033	1					
ANR	4947253	Argument	stderr		4947033	0					
ANR	4947254	Identifier	stderr		4947033	0					
ANR	4947255	Argument	"""Unrecognized argument: <%s>\\n"""		4947033	1					
ANR	4947256	PrimaryExpression	"""Unrecognized argument: <%s>\\n"""		4947033	0					
ANR	4947257	Argument	argv [ index ]		4947033	2					
ANR	4947258	ArrayIndexing	argv [ index ]		4947033	0					
ANR	4947259	Identifier	argv		4947033	0					
ANR	4947260	Identifier	index		4947033	1					
ANR	4947261	ExpressionStatement	"printf ( ""%s"" , usage )"	126:3:3570:3589	4947033	1	True				
ANR	4947262	CallExpression	"printf ( ""%s"" , usage )"		4947033	0					
ANR	4947263	Callee	printf		4947033	0					
ANR	4947264	Identifier	printf		4947033	0					
ANR	4947265	ArgumentList	"""%s"""		4947033	1					
ANR	4947266	Argument	"""%s"""		4947033	0					
ANR	4947267	PrimaryExpression	"""%s"""		4947033	0					
ANR	4947268	Argument	usage		4947033	1					
ANR	4947269	Identifier	usage		4947033	0					
ANR	4947270	ExpressionStatement	status = STATUS_ERROR	127:3:3594:3615	4947033	2	True				
ANR	4947271	AssignmentExpression	status = STATUS_ERROR		4947033	0		=			
ANR	4947272	Identifier	status		4947033	0					
ANR	4947273	Identifier	STATUS_ERROR		4947033	1					
ANR	4947274	ReturnStatement	return status ;	131:1:3626:3639	4947033	12	True				
ANR	4947275	Identifier	status		4947033	0					
ANR	4947276	ReturnType	Status		4947033	1					
ANR	4947277	Identifier	CheckArgs		4947033	2					
ANR	4947278	ParameterList	"int argc , char * * argv"		4947033	3					
ANR	4947279	Parameter	int argc	88:10:2379:2386	4947033	0	True				
ANR	4947280	ParameterType	int		4947033	0					
ANR	4947281	Identifier	argc		4947033	1					
ANR	4947282	Parameter	char * * argv	88:20:2389:2399	4947033	1	True				
ANR	4947283	ParameterType	char * *		4947033	0					
ANR	4947284	Identifier	argv		4947033	1					
ANR	4947285	CFGEntryNode	ENTRY		4947033		True				
ANR	4947286	CFGExitNode	EXIT		4947033		True				
ANR	4947287	Symbol	argc		4947033						
ANR	4947288	Symbol	strcmp		4947033						
ANR	4947289	Symbol	STATUS_CANCEL		4947033						
ANR	4947290	Symbol	atoi		4947033						
ANR	4947291	Symbol	* index		4947033						
ANR	4947292	Symbol	usage		4947033						
ANR	4947293	Symbol	index		4947033						
ANR	4947294	Symbol	* argv		4947033						
ANR	4947295	Symbol	__DATE__		4947033						
ANR	4947296	Symbol	stderr		4947033						
ANR	4947297	Symbol	argv		4947033						
ANR	4947298	Symbol	STATUS_ERROR		4947033						
ANR	4947299	Symbol	VERSION		4947033						
ANR	4947300	Symbol	STATUS_OK		4947033						
ANR	4947301	Symbol	verbosity		4947033						
ANR	4947302	Symbol	status		4947033						
ANR	4947303	Function	ReadEventsLazy	138:0:3810:18203							
ANR	4947304	FunctionDef	ReadEventsLazy ()		4947303	0					
ANR	4947305	CompoundStatement		140:0:3832:18203	4947303	0					
ANR	4947306	IdentifierDeclStatement	bool isOkay = true ;	141:1:3835:3853	4947303	0	True				
ANR	4947307	IdentifierDecl	isOkay = true		4947303	0					
ANR	4947308	IdentifierDeclType	bool		4947303	0					
ANR	4947309	Identifier	isOkay		4947303	1					
ANR	4947310	AssignmentExpression	isOkay = true		4947303	2		=			
ANR	4947311	Identifier	true		4947303	0					
ANR	4947312	Identifier	true		4947303	1					
ANR	4947313	ExpressionStatement	"printf ( ""\\nReading events with lazy log file evaluation\\n"" )"	143:1:3857:3915	4947303	1	True				
ANR	4947314	CallExpression	"printf ( ""\\nReading events with lazy log file evaluation\\n"" )"		4947303	0					
ANR	4947315	Callee	printf		4947303	0					
ANR	4947316	Identifier	printf		4947303	0					
ANR	4947317	ArgumentList	"""\\nReading events with lazy log file evaluation\\n"""		4947303	1					
ANR	4947318	Argument	"""\\nReading events with lazy log file evaluation\\n"""		4947303	0					
ANR	4947319	PrimaryExpression	"""\\nReading events with lazy log file evaluation\\n"""		4947303	0					
ANR	4947320	ExpressionStatement	fflush ( stdout )	144:1:3918:3932	4947303	2	True				
ANR	4947321	CallExpression	fflush ( stdout )		4947303	0					
ANR	4947322	Callee	fflush		4947303	0					
ANR	4947323	Identifier	fflush		4947303	0					
ANR	4947324	ArgumentList	stdout		4947303	1					
ANR	4947325	Argument	stdout		4947303	0					
ANR	4947326	Identifier	stdout		4947303	0					
ANR	4947327	IdentifierDeclStatement	"const char * file1 = ""test_multi_log.log1"" ;"	146:1:3936:3977	4947303	3	True				
ANR	4947328	IdentifierDecl	"* file1 = ""test_multi_log.log1"""		4947303	0					
ANR	4947329	IdentifierDeclType	const char *		4947303	0					
ANR	4947330	Identifier	file1		4947303	1					
ANR	4947331	AssignmentExpression	"* file1 = ""test_multi_log.log1"""		4947303	2		=			
ANR	4947332	Identifier	file1		4947303	0					
ANR	4947333	PrimaryExpression	"""test_multi_log.log1"""		4947303	1					
ANR	4947334	ExpressionStatement	unlink ( file1 )	147:1:3980:3995	4947303	4	True				
ANR	4947335	CallExpression	unlink ( file1 )		4947303	0					
ANR	4947336	Callee	unlink		4947303	0					
ANR	4947337	Identifier	unlink		4947303	0					
ANR	4947338	ArgumentList	file1		4947303	1					
ANR	4947339	Argument	file1		4947303	0					
ANR	4947340	Identifier	file1		4947303	0					
ANR	4947341	IdentifierDeclStatement	"const char * file2 = ""test_multi_log.log2"" ;"	148:1:3998:4039	4947303	5	True				
ANR	4947342	IdentifierDecl	"* file2 = ""test_multi_log.log2"""		4947303	0					
ANR	4947343	IdentifierDeclType	const char *		4947303	0					
ANR	4947344	Identifier	file2		4947303	1					
ANR	4947345	AssignmentExpression	"* file2 = ""test_multi_log.log2"""		4947303	2		=			
ANR	4947346	Identifier	file2		4947303	0					
ANR	4947347	PrimaryExpression	"""test_multi_log.log2"""		4947303	1					
ANR	4947348	ExpressionStatement	unlink ( file2 )	149:1:4042:4057	4947303	6	True				
ANR	4947349	CallExpression	unlink ( file2 )		4947303	0					
ANR	4947350	Callee	unlink		4947303	0					
ANR	4947351	Identifier	unlink		4947303	0					
ANR	4947352	ArgumentList	file2		4947303	1					
ANR	4947353	Argument	file2		4947303	0					
ANR	4947354	Identifier	file2		4947303	0					
ANR	4947355	IdentifierDeclStatement	"const char * file3 = ""test_multi_log.log3"" ;"	150:1:4060:4101	4947303	7	True				
ANR	4947356	IdentifierDecl	"* file3 = ""test_multi_log.log3"""		4947303	0					
ANR	4947357	IdentifierDeclType	const char *		4947303	0					
ANR	4947358	Identifier	file3		4947303	1					
ANR	4947359	AssignmentExpression	"* file3 = ""test_multi_log.log3"""		4947303	2		=			
ANR	4947360	Identifier	file3		4947303	0					
ANR	4947361	PrimaryExpression	"""test_multi_log.log3"""		4947303	1					
ANR	4947362	ExpressionStatement	unlink ( file3 )	151:1:4104:4119	4947303	8	True				
ANR	4947363	CallExpression	unlink ( file3 )		4947303	0					
ANR	4947364	Callee	unlink		4947303	0					
ANR	4947365	Identifier	unlink		4947303	0					
ANR	4947366	ArgumentList	file3		4947303	1					
ANR	4947367	Argument	file3		4947303	0					
ANR	4947368	Identifier	file3		4947303	0					
ANR	4947369	IdentifierDeclStatement	const char * file4 = file3 ;	152:1:4122:4147	4947303	9	True				
ANR	4947370	IdentifierDecl	* file4 = file3		4947303	0					
ANR	4947371	IdentifierDeclType	const char *		4947303	0					
ANR	4947372	Identifier	file4		4947303	1					
ANR	4947373	AssignmentExpression	* file4 = file3		4947303	2		=			
ANR	4947374	Identifier	file3		4947303	0					
ANR	4947375	Identifier	file3		4947303	1					
ANR	4947376	ExpressionStatement	unlink ( file4 )	153:1:4150:4165	4947303	10	True				
ANR	4947377	CallExpression	unlink ( file4 )		4947303	0					
ANR	4947378	Callee	unlink		4947303	0					
ANR	4947379	Identifier	unlink		4947303	0					
ANR	4947380	ArgumentList	file4		4947303	1					
ANR	4947381	Argument	file4		4947303	0					
ANR	4947382	Identifier	file4		4947303	0					
ANR	4947383	IdentifierDeclStatement	"const char * file5 = ""test_multi_log.log5"" ;"	154:1:4168:4209	4947303	11	True				
ANR	4947384	IdentifierDecl	"* file5 = ""test_multi_log.log5"""		4947303	0					
ANR	4947385	IdentifierDeclType	const char *		4947303	0					
ANR	4947386	Identifier	file5		4947303	1					
ANR	4947387	AssignmentExpression	"* file5 = ""test_multi_log.log5"""		4947303	2		=			
ANR	4947388	Identifier	file5		4947303	0					
ANR	4947389	PrimaryExpression	"""test_multi_log.log5"""		4947303	1					
ANR	4947390	ExpressionStatement	unlink ( file5 )	155:1:4212:4227	4947303	12	True				
ANR	4947391	CallExpression	unlink ( file5 )		4947303	0					
ANR	4947392	Callee	unlink		4947303	0					
ANR	4947393	Identifier	unlink		4947303	0					
ANR	4947394	ArgumentList	file5		4947303	1					
ANR	4947395	Argument	file5		4947303	0					
ANR	4947396	Identifier	file5		4947303	0					
ANR	4947397	IdentifierDeclStatement	"const char * file5a = ""./test_multi_log.log5"" ;"	158:1:4310:4354	4947303	13	True				
ANR	4947398	IdentifierDecl	"* file5a = ""./test_multi_log.log5"""		4947303	0					
ANR	4947399	IdentifierDeclType	const char *		4947303	0					
ANR	4947400	Identifier	file5a		4947303	1					
ANR	4947401	AssignmentExpression	"* file5a = ""./test_multi_log.log5"""		4947303	2		=			
ANR	4947402	Identifier	file5a		4947303	0					
ANR	4947403	PrimaryExpression	"""./test_multi_log.log5"""		4947303	1					
ANR	4947404	ExpressionStatement	unlink ( file5a )	159:1:4357:4373	4947303	14	True				
ANR	4947405	CallExpression	unlink ( file5a )		4947303	0					
ANR	4947406	Callee	unlink		4947303	0					
ANR	4947407	Identifier	unlink		4947303	0					
ANR	4947408	ArgumentList	file5a		4947303	1					
ANR	4947409	Argument	file5a		4947303	0					
ANR	4947410	Identifier	file5a		4947303	0					
ANR	4947411	IdentifierDeclStatement	"const char * file5b = ""test_multi_log.log5b"" ;"	161:1:4406:4449	4947303	15	True				
ANR	4947412	IdentifierDecl	"* file5b = ""test_multi_log.log5b"""		4947303	0					
ANR	4947413	IdentifierDeclType	const char *		4947303	0					
ANR	4947414	Identifier	file5b		4947303	1					
ANR	4947415	AssignmentExpression	"* file5b = ""test_multi_log.log5b"""		4947303	2		=			
ANR	4947416	Identifier	file5b		4947303	0					
ANR	4947417	PrimaryExpression	"""test_multi_log.log5b"""		4947303	1					
ANR	4947418	ExpressionStatement	unlink ( file5b )	162:1:4452:4468	4947303	16	True				
ANR	4947419	CallExpression	unlink ( file5b )		4947303	0					
ANR	4947420	Callee	unlink		4947303	0					
ANR	4947421	Identifier	unlink		4947303	0					
ANR	4947422	ArgumentList	file5b		4947303	1					
ANR	4947423	Argument	file5b		4947303	0					
ANR	4947424	Identifier	file5b		4947303	0					
ANR	4947425	IdentifierDeclStatement	"const char * file5c = ""test_multi_log.log5c"" ;"	164:1:4501:4544	4947303	17	True				
ANR	4947426	IdentifierDecl	"* file5c = ""test_multi_log.log5c"""		4947303	0					
ANR	4947427	IdentifierDeclType	const char *		4947303	0					
ANR	4947428	Identifier	file5c		4947303	1					
ANR	4947429	AssignmentExpression	"* file5c = ""test_multi_log.log5c"""		4947303	2		=			
ANR	4947430	Identifier	file5c		4947303	0					
ANR	4947431	PrimaryExpression	"""test_multi_log.log5c"""		4947303	1					
ANR	4947432	ExpressionStatement	unlink ( file5c )	165:1:4547:4563	4947303	18	True				
ANR	4947433	CallExpression	unlink ( file5c )		4947303	0					
ANR	4947434	Callee	unlink		4947303	0					
ANR	4947435	Identifier	unlink		4947303	0					
ANR	4947436	ArgumentList	file5c		4947303	1					
ANR	4947437	Argument	file5c		4947303	0					
ANR	4947438	Identifier	file5c		4947303	0					
ANR	4947439	IdentifierDeclStatement	"const char * file5d = ""test_multi_log.log5d"" ;"	167:1:4598:4641	4947303	19	True				
ANR	4947440	IdentifierDecl	"* file5d = ""test_multi_log.log5d"""		4947303	0					
ANR	4947441	IdentifierDeclType	const char *		4947303	0					
ANR	4947442	Identifier	file5d		4947303	1					
ANR	4947443	AssignmentExpression	"* file5d = ""test_multi_log.log5d"""		4947303	2		=			
ANR	4947444	Identifier	file5d		4947303	0					
ANR	4947445	PrimaryExpression	"""test_multi_log.log5d"""		4947303	1					
ANR	4947446	ExpressionStatement	unlink ( file5d )	168:1:4644:4660	4947303	20	True				
ANR	4947447	CallExpression	unlink ( file5d )		4947303	0					
ANR	4947448	Callee	unlink		4947303	0					
ANR	4947449	Identifier	unlink		4947303	0					
ANR	4947450	ArgumentList	file5d		4947303	1					
ANR	4947451	Argument	file5d		4947303	0					
ANR	4947452	Identifier	file5d		4947303	0					
ANR	4947453	IdentifierDeclStatement	ReadMultipleUserLogs lazyReader ;	170:1:4664:4695	4947303	21	True				
ANR	4947454	IdentifierDecl	lazyReader		4947303	0					
ANR	4947455	IdentifierDeclType	ReadMultipleUserLogs		4947303	0					
ANR	4947456	Identifier	lazyReader		4947303	1					
ANR	4947457	IdentifierDeclStatement	int totalLogCount ;	171:1:4698:4715	4947303	22	True				
ANR	4947458	IdentifierDecl	totalLogCount		4947303	0					
ANR	4947459	IdentifierDeclType	int		4947303	0					
ANR	4947460	Identifier	totalLogCount		4947303	1					
ANR	4947461	IfStatement	if ( ( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 0 )		4947303	23					
ANR	4947462	Condition	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 0	172:6:4723:4775	4947303	0	True				
ANR	4947463	EqualityExpression	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 0		4947303	0		!=			
ANR	4947464	AssignmentExpression	totalLogCount = lazyReader . totalLogFileCount ( )		4947303	0		=			
ANR	4947465	Identifier	totalLogCount		4947303	0					
ANR	4947466	CallExpression	lazyReader . totalLogFileCount ( )		4947303	1					
ANR	4947467	Callee	lazyReader . totalLogFileCount		4947303	0					
ANR	4947468	MemberAccess	lazyReader . totalLogFileCount		4947303	0					
ANR	4947469	Identifier	lazyReader		4947303	0					
ANR	4947470	Identifier	totalLogFileCount		4947303	1					
ANR	4947471	ArgumentList			4947303	1					
ANR	4947472	PrimaryExpression	0		4947303	1					
ANR	4947473	CompoundStatement		33:62:946:946	4947303	1					
ANR	4947474	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	173:2:4783:4834	4947303	0	True				
ANR	4947475	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4947476	Callee	printf		4947303	0					
ANR	4947477	Identifier	printf		4947303	0					
ANR	4947478	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4947479	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4947480	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4947481	Argument	__FILE__		4947303	1					
ANR	4947482	Identifier	__FILE__		4947303	0					
ANR	4947483	Argument	__LINE__		4947303	2					
ANR	4947484	Identifier	__LINE__		4947303	0					
ANR	4947485	Statement	printf	174:2:4838:4843	4947303	1	True				
ANR	4947486	Statement	(	174:8:4844:4844	4947303	2	True				
ANR	4947487	Statement	"""lazyReader.totalLogFileCount() was %d; should """	174:10:4846:4893	4947303	3	True				
ANR	4947488	Statement	"""have been 0\\n"""	175:5:4900:4914	4947303	4	True				
ANR	4947489	Statement	","	175:20:4915:4915	4947303	5	True				
ANR	4947490	Statement	totalLogCount	175:22:4917:4929	4947303	6	True				
ANR	4947491	Statement	)	175:36:4931:4931	4947303	7	True				
ANR	4947492	ExpressionStatement		175:37:4932:4932	4947303	8	True				
ANR	4947493	ExpressionStatement	isOkay = false	176:2:4936:4950	4947303	9	True				
ANR	4947494	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4947495	Identifier	isOkay		4947303	0					
ANR	4947496	Identifier	false		4947303	1					
ANR	4947497	IfStatement	"if ( ! monitorLogFile ( lazyReader , file1 , true ) )"		4947303	24					
ANR	4947498	Condition	"! monitorLogFile ( lazyReader , file1 , true )"	179:6:4962:5003	4947303	0	True				
ANR	4947499	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file1 , true )"		4947303	0					
ANR	4947500	UnaryOperator	!		4947303	0					
ANR	4947501	CallExpression	"monitorLogFile ( lazyReader , file1 , true )"		4947303	1					
ANR	4947502	Callee	monitorLogFile		4947303	0					
ANR	4947503	Identifier	monitorLogFile		4947303	0					
ANR	4947504	ArgumentList	lazyReader		4947303	1					
ANR	4947505	Argument	lazyReader		4947303	0					
ANR	4947506	Identifier	lazyReader		4947303	0					
ANR	4947507	Argument	file1		4947303	1					
ANR	4947508	Identifier	file1		4947303	0					
ANR	4947509	Argument	true		4947303	2					
ANR	4947510	Identifier	true		4947303	0					
ANR	4947511	CompoundStatement		40:51:1174:1174	4947303	1					
ANR	4947512	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	180:2:5011:5062	4947303	0	True				
ANR	4947513	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4947514	Callee	printf		4947303	0					
ANR	4947515	Identifier	printf		4947303	0					
ANR	4947516	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4947517	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4947518	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4947519	Argument	__FILE__		4947303	1					
ANR	4947520	Identifier	__FILE__		4947303	0					
ANR	4947521	Argument	__LINE__		4947303	2					
ANR	4947522	Identifier	__LINE__		4947303	0					
ANR	4947523	ExpressionStatement	"printf ( ""error monitoring log file %s\\n"" , file1 )"	181:2:5066:5115	4947303	1	True				
ANR	4947524	CallExpression	"printf ( ""error monitoring log file %s\\n"" , file1 )"		4947303	0					
ANR	4947525	Callee	printf		4947303	0					
ANR	4947526	Identifier	printf		4947303	0					
ANR	4947527	ArgumentList	"""error monitoring log file %s\\n"""		4947303	1					
ANR	4947528	Argument	"""error monitoring log file %s\\n"""		4947303	0					
ANR	4947529	PrimaryExpression	"""error monitoring log file %s\\n"""		4947303	0					
ANR	4947530	Argument	file1		4947303	1					
ANR	4947531	Identifier	file1		4947303	0					
ANR	4947532	ExpressionStatement	isOkay = false	182:2:5119:5133	4947303	2	True				
ANR	4947533	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4947534	Identifier	isOkay		4947303	0					
ANR	4947535	Identifier	false		4947303	1					
ANR	4947536	IfStatement	if ( ( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 1 )		4947303	25					
ANR	4947537	Condition	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 1	184:6:5144:5196	4947303	0	True				
ANR	4947538	EqualityExpression	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 1		4947303	0		!=			
ANR	4947539	AssignmentExpression	totalLogCount = lazyReader . totalLogFileCount ( )		4947303	0		=			
ANR	4947540	Identifier	totalLogCount		4947303	0					
ANR	4947541	CallExpression	lazyReader . totalLogFileCount ( )		4947303	1					
ANR	4947542	Callee	lazyReader . totalLogFileCount		4947303	0					
ANR	4947543	MemberAccess	lazyReader . totalLogFileCount		4947303	0					
ANR	4947544	Identifier	lazyReader		4947303	0					
ANR	4947545	Identifier	totalLogFileCount		4947303	1					
ANR	4947546	ArgumentList			4947303	1					
ANR	4947547	PrimaryExpression	1		4947303	1					
ANR	4947548	CompoundStatement		45:62:1367:1367	4947303	1					
ANR	4947549	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	185:2:5204:5255	4947303	0	True				
ANR	4947550	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4947551	Callee	printf		4947303	0					
ANR	4947552	Identifier	printf		4947303	0					
ANR	4947553	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4947554	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4947555	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4947556	Argument	__FILE__		4947303	1					
ANR	4947557	Identifier	__FILE__		4947303	0					
ANR	4947558	Argument	__LINE__		4947303	2					
ANR	4947559	Identifier	__LINE__		4947303	0					
ANR	4947560	Statement	printf	186:2:5259:5264	4947303	1	True				
ANR	4947561	Statement	(	186:8:5265:5265	4947303	2	True				
ANR	4947562	Statement	"""lazyReader.totalLogFileCount() was %d; should """	186:10:5267:5314	4947303	3	True				
ANR	4947563	Statement	"""have been 1\\n"""	187:5:5321:5335	4947303	4	True				
ANR	4947564	Statement	","	187:20:5336:5336	4947303	5	True				
ANR	4947565	Statement	totalLogCount	187:22:5338:5350	4947303	6	True				
ANR	4947566	Statement	)	187:36:5352:5352	4947303	7	True				
ANR	4947567	ExpressionStatement		187:37:5353:5353	4947303	8	True				
ANR	4947568	ExpressionStatement	isOkay = false	188:2:5357:5371	4947303	9	True				
ANR	4947569	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4947570	Identifier	isOkay		4947303	0					
ANR	4947571	Identifier	false		4947303	1					
ANR	4947572	ExpressionStatement	"printf ( ""Testing detectLogGrowth() on empty files...\\n"" )"	194:1:5520:5575	4947303	26	True				
ANR	4947573	CallExpression	"printf ( ""Testing detectLogGrowth() on empty files...\\n"" )"		4947303	0					
ANR	4947574	Callee	printf		4947303	0					
ANR	4947575	Identifier	printf		4947303	0					
ANR	4947576	ArgumentList	"""Testing detectLogGrowth() on empty files...\\n"""		4947303	1					
ANR	4947577	Argument	"""Testing detectLogGrowth() on empty files...\\n"""		4947303	0					
ANR	4947578	PrimaryExpression	"""Testing detectLogGrowth() on empty files...\\n"""		4947303	0					
ANR	4947579	IfStatement	if ( ! lazyReader . detectLogGrowth ( ) )		4947303	27					
ANR	4947580	Condition	! lazyReader . detectLogGrowth ( )	195:6:5583:5611	4947303	0	True				
ANR	4947581	UnaryOperationExpression	! lazyReader . detectLogGrowth ( )		4947303	0					
ANR	4947582	UnaryOperator	!		4947303	0					
ANR	4947583	CallExpression	lazyReader . detectLogGrowth ( )		4947303	1					
ANR	4947584	Callee	lazyReader . detectLogGrowth		4947303	0					
ANR	4947585	MemberAccess	lazyReader . detectLogGrowth		4947303	0					
ANR	4947586	Identifier	lazyReader		4947303	0					
ANR	4947587	Identifier	detectLogGrowth		4947303	1					
ANR	4947588	ArgumentList			4947303	1					
ANR	4947589	CompoundStatement		56:38:1782:1782	4947303	1					
ANR	4947590	ExpressionStatement	"printf ( ""...succeeded\\n"" )"	196:2:5619:5643	4947303	0	True				
ANR	4947591	CallExpression	"printf ( ""...succeeded\\n"" )"		4947303	0					
ANR	4947592	Callee	printf		4947303	0					
ANR	4947593	Identifier	printf		4947303	0					
ANR	4947594	ArgumentList	"""...succeeded\\n"""		4947303	1					
ANR	4947595	Argument	"""...succeeded\\n"""		4947303	0					
ANR	4947596	PrimaryExpression	"""...succeeded\\n"""		4947303	0					
ANR	4947597	ExpressionStatement	fflush ( stdout )	197:2:5647:5661	4947303	1	True				
ANR	4947598	CallExpression	fflush ( stdout )		4947303	0					
ANR	4947599	Callee	fflush		4947303	0					
ANR	4947600	Identifier	fflush		4947303	0					
ANR	4947601	ArgumentList	stdout		4947303	1					
ANR	4947602	Argument	stdout		4947303	0					
ANR	4947603	Identifier	stdout		4947303	0					
ANR	4947604	ElseStatement	else		4947303	0					
ANR	4947605	CompoundStatement		59:8:1838:1838	4947303	0					
ANR	4947606	ExpressionStatement	"printf ( ""...FAILURE at %s, %d\\n"" , __FILE__ , __LINE__ )"	199:2:5675:5729	4947303	0	True				
ANR	4947607	CallExpression	"printf ( ""...FAILURE at %s, %d\\n"" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4947608	Callee	printf		4947303	0					
ANR	4947609	Identifier	printf		4947303	0					
ANR	4947610	ArgumentList	"""...FAILURE at %s, %d\\n"""		4947303	1					
ANR	4947611	Argument	"""...FAILURE at %s, %d\\n"""		4947303	0					
ANR	4947612	PrimaryExpression	"""...FAILURE at %s, %d\\n"""		4947303	0					
ANR	4947613	Argument	__FILE__		4947303	1					
ANR	4947614	Identifier	__FILE__		4947303	0					
ANR	4947615	Argument	__LINE__		4947303	2					
ANR	4947616	Identifier	__LINE__		4947303	0					
ANR	4947617	ExpressionStatement	fflush ( stdout )	200:2:5733:5747	4947303	1	True				
ANR	4947618	CallExpression	fflush ( stdout )		4947303	0					
ANR	4947619	Callee	fflush		4947303	0					
ANR	4947620	Identifier	fflush		4947303	0					
ANR	4947621	ArgumentList	stdout		4947303	1					
ANR	4947622	Argument	stdout		4947303	0					
ANR	4947623	Identifier	stdout		4947303	0					
ANR	4947624	ExpressionStatement	isOkay = false	201:2:5751:5765	4947303	2	True				
ANR	4947625	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4947626	Identifier	isOkay		4947303	0					
ANR	4947627	Identifier	false		4947303	1					
ANR	4947628	IdentifierDeclStatement	ULogEvent * event ;	204:1:5772:5788	4947303	28	True				
ANR	4947629	IdentifierDecl	* event		4947303	0					
ANR	4947630	IdentifierDeclType	ULogEvent *		4947303	0					
ANR	4947631	Identifier	event		4947303	1					
ANR	4947632	ExpressionStatement	"printf ( ""Testing readEvent() on empty files...\\n"" )"	205:1:5791:5840	4947303	29	True				
ANR	4947633	CallExpression	"printf ( ""Testing readEvent() on empty files...\\n"" )"		4947303	0					
ANR	4947634	Callee	printf		4947303	0					
ANR	4947635	Identifier	printf		4947303	0					
ANR	4947636	ArgumentList	"""Testing readEvent() on empty files...\\n"""		4947303	1					
ANR	4947637	Argument	"""Testing readEvent() on empty files...\\n"""		4947303	0					
ANR	4947638	PrimaryExpression	"""Testing readEvent() on empty files...\\n"""		4947303	0					
ANR	4947639	IfStatement	if ( lazyReader . readEvent ( event ) != ULOG_NO_EVENT )		4947303	30					
ANR	4947640	Condition	lazyReader . readEvent ( event ) != ULOG_NO_EVENT	206:6:5848:5891	4947303	0	True				
ANR	4947641	EqualityExpression	lazyReader . readEvent ( event ) != ULOG_NO_EVENT		4947303	0		!=			
ANR	4947642	CallExpression	lazyReader . readEvent ( event )		4947303	0					
ANR	4947643	Callee	lazyReader . readEvent		4947303	0					
ANR	4947644	MemberAccess	lazyReader . readEvent		4947303	0					
ANR	4947645	Identifier	lazyReader		4947303	0					
ANR	4947646	Identifier	readEvent		4947303	1					
ANR	4947647	ArgumentList	event		4947303	1					
ANR	4947648	Argument	event		4947303	0					
ANR	4947649	Identifier	event		4947303	0					
ANR	4947650	Identifier	ULOG_NO_EVENT		4947303	1					
ANR	4947651	CompoundStatement		67:53:2062:2062	4947303	1					
ANR	4947652	ExpressionStatement	"printf ( ""...FAILURE at %s, %d\\n"" , __FILE__ , __LINE__ )"	207:2:5899:5953	4947303	0	True				
ANR	4947653	CallExpression	"printf ( ""...FAILURE at %s, %d\\n"" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4947654	Callee	printf		4947303	0					
ANR	4947655	Identifier	printf		4947303	0					
ANR	4947656	ArgumentList	"""...FAILURE at %s, %d\\n"""		4947303	1					
ANR	4947657	Argument	"""...FAILURE at %s, %d\\n"""		4947303	0					
ANR	4947658	PrimaryExpression	"""...FAILURE at %s, %d\\n"""		4947303	0					
ANR	4947659	Argument	__FILE__		4947303	1					
ANR	4947660	Identifier	__FILE__		4947303	0					
ANR	4947661	Argument	__LINE__		4947303	2					
ANR	4947662	Identifier	__LINE__		4947303	0					
ANR	4947663	ExpressionStatement	fflush ( stdout )	208:2:5957:5971	4947303	1	True				
ANR	4947664	CallExpression	fflush ( stdout )		4947303	0					
ANR	4947665	Callee	fflush		4947303	0					
ANR	4947666	Identifier	fflush		4947303	0					
ANR	4947667	ArgumentList	stdout		4947303	1					
ANR	4947668	Argument	stdout		4947303	0					
ANR	4947669	Identifier	stdout		4947303	0					
ANR	4947670	ExpressionStatement	isOkay = false	209:2:5975:5989	4947303	2	True				
ANR	4947671	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4947672	Identifier	isOkay		4947303	0					
ANR	4947673	Identifier	false		4947303	1					
ANR	4947674	ElseStatement	else		4947303	0					
ANR	4947675	CompoundStatement		71:8:2166:2166	4947303	0					
ANR	4947676	ExpressionStatement	"printf ( ""...succeeded\\n"" )"	211:2:6003:6027	4947303	0	True				
ANR	4947677	CallExpression	"printf ( ""...succeeded\\n"" )"		4947303	0					
ANR	4947678	Callee	printf		4947303	0					
ANR	4947679	Identifier	printf		4947303	0					
ANR	4947680	ArgumentList	"""...succeeded\\n"""		4947303	1					
ANR	4947681	Argument	"""...succeeded\\n"""		4947303	0					
ANR	4947682	PrimaryExpression	"""...succeeded\\n"""		4947303	0					
ANR	4947683	ExpressionStatement	fflush ( stdout )	212:2:6031:6045	4947303	1	True				
ANR	4947684	CallExpression	fflush ( stdout )		4947303	0					
ANR	4947685	Callee	fflush		4947303	0					
ANR	4947686	Identifier	fflush		4947303	0					
ANR	4947687	ArgumentList	stdout		4947303	1					
ANR	4947688	Argument	stdout		4947303	0					
ANR	4947689	Identifier	stdout		4947303	0					
ANR	4947690	ExpressionStatement	"printf ( ""Testing writing and reading events...\\n"" )"	215:1:6052:6101	4947303	31	True				
ANR	4947691	CallExpression	"printf ( ""Testing writing and reading events...\\n"" )"		4947303	0					
ANR	4947692	Callee	printf		4947303	0					
ANR	4947693	Identifier	printf		4947303	0					
ANR	4947694	ArgumentList	"""Testing writing and reading events...\\n"""		4947303	1					
ANR	4947695	Argument	"""Testing writing and reading events...\\n"""		4947303	0					
ANR	4947696	PrimaryExpression	"""Testing writing and reading events...\\n"""		4947303	0					
ANR	4947697	ExpressionStatement	fflush ( stdout )	216:1:6104:6118	4947303	32	True				
ANR	4947698	CallExpression	fflush ( stdout )		4947303	0					
ANR	4947699	Callee	fflush		4947303	0					
ANR	4947700	Identifier	fflush		4947303	0					
ANR	4947701	ArgumentList	stdout		4947303	1					
ANR	4947702	Argument	stdout		4947303	0					
ANR	4947703	Identifier	stdout		4947303	0					
ANR	4947704	IdentifierDeclStatement	"WriteUserLog log1 ( ""test"" , file1 , 1 , 0 , 0 , false ) ;"	218:1:6122:6171	4947303	33	True				
ANR	4947705	IdentifierDecl	"log1 ( ""test"" , file1 , 1 , 0 , 0 , false )"		4947303	0					
ANR	4947706	IdentifierDeclType	WriteUserLog		4947303	0					
ANR	4947707	Identifier	log1		4947303	1					
ANR	4947708	Expression	"""test"" , file1 , 1 , 0 , 0 , false"		4947303	2					
ANR	4947709	PrimaryExpression	"""test"""		4947303	0					
ANR	4947710	Expression	"file1 , 1 , 0 , 0 , false"		4947303	1					
ANR	4947711	Identifier	file1		4947303	0					
ANR	4947712	Expression	"1 , 0 , 0 , false"		4947303	1					
ANR	4947713	PrimaryExpression	1		4947303	0					
ANR	4947714	Expression	"0 , 0 , false"		4947303	1					
ANR	4947715	PrimaryExpression	0		4947303	0					
ANR	4947716	Expression	"0 , false"		4947303	1					
ANR	4947717	PrimaryExpression	0		4947303	0					
ANR	4947718	Identifier	false		4947303	1					
ANR	4947719	IdentifierDeclStatement	"WriteUserLog log2 ( ""test"" , file2 , 2 , 0 , 0 , true ) ;"	219:1:6174:6222	4947303	34	True				
ANR	4947720	IdentifierDecl	"log2 ( ""test"" , file2 , 2 , 0 , 0 , true )"		4947303	0					
ANR	4947721	IdentifierDeclType	WriteUserLog		4947303	0					
ANR	4947722	Identifier	log2		4947303	1					
ANR	4947723	Expression	"""test"" , file2 , 2 , 0 , 0 , true"		4947303	2					
ANR	4947724	PrimaryExpression	"""test"""		4947303	0					
ANR	4947725	Expression	"file2 , 2 , 0 , 0 , true"		4947303	1					
ANR	4947726	Identifier	file2		4947303	0					
ANR	4947727	Expression	"2 , 0 , 0 , true"		4947303	1					
ANR	4947728	PrimaryExpression	2		4947303	0					
ANR	4947729	Expression	"0 , 0 , true"		4947303	1					
ANR	4947730	PrimaryExpression	0		4947303	0					
ANR	4947731	Expression	"0 , true"		4947303	1					
ANR	4947732	PrimaryExpression	0		4947303	0					
ANR	4947733	Identifier	true		4947303	1					
ANR	4947734	IdentifierDeclStatement	"WriteUserLog log3 ( ""test"" , file3 , 3 , 0 , 0 , false ) ;"	220:1:6225:6274	4947303	35	True				
ANR	4947735	IdentifierDecl	"log3 ( ""test"" , file3 , 3 , 0 , 0 , false )"		4947303	0					
ANR	4947736	IdentifierDeclType	WriteUserLog		4947303	0					
ANR	4947737	Identifier	log3		4947303	1					
ANR	4947738	Expression	"""test"" , file3 , 3 , 0 , 0 , false"		4947303	2					
ANR	4947739	PrimaryExpression	"""test"""		4947303	0					
ANR	4947740	Expression	"file3 , 3 , 0 , 0 , false"		4947303	1					
ANR	4947741	Identifier	file3		4947303	0					
ANR	4947742	Expression	"3 , 0 , 0 , false"		4947303	1					
ANR	4947743	PrimaryExpression	3		4947303	0					
ANR	4947744	Expression	"0 , 0 , false"		4947303	1					
ANR	4947745	PrimaryExpression	0		4947303	0					
ANR	4947746	Expression	"0 , false"		4947303	1					
ANR	4947747	PrimaryExpression	0		4947303	0					
ANR	4947748	Identifier	false		4947303	1					
ANR	4947749	IdentifierDeclStatement	"WriteUserLog log4 ( ""test"" , file4 , 4 , 0 , 0 , false ) ;"	221:1:6277:6326	4947303	36	True				
ANR	4947750	IdentifierDecl	"log4 ( ""test"" , file4 , 4 , 0 , 0 , false )"		4947303	0					
ANR	4947751	IdentifierDeclType	WriteUserLog		4947303	0					
ANR	4947752	Identifier	log4		4947303	1					
ANR	4947753	Expression	"""test"" , file4 , 4 , 0 , 0 , false"		4947303	2					
ANR	4947754	PrimaryExpression	"""test"""		4947303	0					
ANR	4947755	Expression	"file4 , 4 , 0 , 0 , false"		4947303	1					
ANR	4947756	Identifier	file4		4947303	0					
ANR	4947757	Expression	"4 , 0 , 0 , false"		4947303	1					
ANR	4947758	PrimaryExpression	4		4947303	0					
ANR	4947759	Expression	"0 , 0 , false"		4947303	1					
ANR	4947760	PrimaryExpression	0		4947303	0					
ANR	4947761	Expression	"0 , false"		4947303	1					
ANR	4947762	PrimaryExpression	0		4947303	0					
ANR	4947763	Identifier	false		4947303	1					
ANR	4947764	IdentifierDeclStatement	SubmitEvent subE ;	223:1:6330:6346	4947303	37	True				
ANR	4947765	IdentifierDecl	subE		4947303	0					
ANR	4947766	IdentifierDeclType	SubmitEvent		4947303	0					
ANR	4947767	Identifier	subE		4947303	1					
ANR	4947768	ExpressionStatement	"strcpy ( subE . submitHost , ""<128.105.165.12:32779>"" )"	224:1:6349:6398	4947303	38	True				
ANR	4947769	CallExpression	"strcpy ( subE . submitHost , ""<128.105.165.12:32779>"" )"		4947303	0					
ANR	4947770	Callee	strcpy		4947303	0					
ANR	4947771	Identifier	strcpy		4947303	0					
ANR	4947772	ArgumentList	subE . submitHost		4947303	1					
ANR	4947773	Argument	subE . submitHost		4947303	0					
ANR	4947774	MemberAccess	subE . submitHost		4947303	0					
ANR	4947775	Identifier	subE		4947303	0					
ANR	4947776	Identifier	submitHost		4947303	1					
ANR	4947777	Argument	"""<128.105.165.12:32779>"""		4947303	1					
ANR	4947778	PrimaryExpression	"""<128.105.165.12:32779>"""		4947303	0					
ANR	4947779	IfStatement	if ( ! log1 . writeEvent ( & subE ) )		4947303	39					
ANR	4947780	Condition	! log1 . writeEvent ( & subE )	225:6:6406:6428	4947303	0	True				
ANR	4947781	UnaryOperationExpression	! log1 . writeEvent ( & subE )		4947303	0					
ANR	4947782	UnaryOperator	!		4947303	0					
ANR	4947783	CallExpression	log1 . writeEvent ( & subE )		4947303	1					
ANR	4947784	Callee	log1 . writeEvent		4947303	0					
ANR	4947785	MemberAccess	log1 . writeEvent		4947303	0					
ANR	4947786	Identifier	log1		4947303	0					
ANR	4947787	Identifier	writeEvent		4947303	1					
ANR	4947788	ArgumentList	& subE		4947303	1					
ANR	4947789	Argument	& subE		4947303	0					
ANR	4947790	UnaryOperationExpression	& subE		4947303	0					
ANR	4947791	UnaryOperator	&		4947303	0					
ANR	4947792	Identifier	subE		4947303	1					
ANR	4947793	CompoundStatement		86:32:2599:2599	4947303	1					
ANR	4947794	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	226:2:6436:6487	4947303	0	True				
ANR	4947795	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4947796	Callee	printf		4947303	0					
ANR	4947797	Identifier	printf		4947303	0					
ANR	4947798	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4947799	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4947800	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4947801	Argument	__FILE__		4947303	1					
ANR	4947802	Identifier	__FILE__		4947303	0					
ANR	4947803	Argument	__LINE__		4947303	2					
ANR	4947804	Identifier	__LINE__		4947303	0					
ANR	4947805	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	227:2:6491:6522	4947303	1	True				
ANR	4947806	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4947807	Callee	printf		4947303	0					
ANR	4947808	Identifier	printf		4947303	0					
ANR	4947809	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4947810	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4947811	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4947812	ExpressionStatement	fflush ( stdout )	228:2:6526:6542	4947303	2	True				
ANR	4947813	CallExpression	fflush ( stdout )		4947303	0					
ANR	4947814	Callee	fflush		4947303	0					
ANR	4947815	Identifier	fflush		4947303	0					
ANR	4947816	ArgumentList	stdout		4947303	1					
ANR	4947817	Argument	stdout		4947303	0					
ANR	4947818	Identifier	stdout		4947303	0					
ANR	4947819	ExpressionStatement	isOkay = false	229:2:6546:6560	4947303	3	True				
ANR	4947820	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4947821	Identifier	isOkay		4947303	0					
ANR	4947822	Identifier	false		4947303	1					
ANR	4947823	IfStatement	if ( ! lazyReader . detectLogGrowth ( ) )		4947303	40					
ANR	4947824	Condition	! lazyReader . detectLogGrowth ( )	232:6:6572:6600	4947303	0	True				
ANR	4947825	UnaryOperationExpression	! lazyReader . detectLogGrowth ( )		4947303	0					
ANR	4947826	UnaryOperator	!		4947303	0					
ANR	4947827	CallExpression	lazyReader . detectLogGrowth ( )		4947303	1					
ANR	4947828	Callee	lazyReader . detectLogGrowth		4947303	0					
ANR	4947829	MemberAccess	lazyReader . detectLogGrowth		4947303	0					
ANR	4947830	Identifier	lazyReader		4947303	0					
ANR	4947831	Identifier	detectLogGrowth		4947303	1					
ANR	4947832	ArgumentList			4947303	1					
ANR	4947833	CompoundStatement		93:38:2771:2771	4947303	1					
ANR	4947834	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	233:2:6608:6659	4947303	0	True				
ANR	4947835	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4947836	Callee	printf		4947303	0					
ANR	4947837	Identifier	printf		4947303	0					
ANR	4947838	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4947839	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4947840	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4947841	Argument	__FILE__		4947303	1					
ANR	4947842	Identifier	__FILE__		4947303	0					
ANR	4947843	Argument	__LINE__		4947303	2					
ANR	4947844	Identifier	__LINE__		4947303	0					
ANR	4947845	ExpressionStatement	"printf ( ""should have gotten log growth"" )"	234:2:6663:6704	4947303	1	True				
ANR	4947846	CallExpression	"printf ( ""should have gotten log growth"" )"		4947303	0					
ANR	4947847	Callee	printf		4947303	0					
ANR	4947848	Identifier	printf		4947303	0					
ANR	4947849	ArgumentList	"""should have gotten log growth"""		4947303	1					
ANR	4947850	Argument	"""should have gotten log growth"""		4947303	0					
ANR	4947851	PrimaryExpression	"""should have gotten log growth"""		4947303	0					
ANR	4947852	ExpressionStatement	fflush ( stdout )	235:2:6708:6724	4947303	2	True				
ANR	4947853	CallExpression	fflush ( stdout )		4947303	0					
ANR	4947854	Callee	fflush		4947303	0					
ANR	4947855	Identifier	fflush		4947303	0					
ANR	4947856	ArgumentList	stdout		4947303	1					
ANR	4947857	Argument	stdout		4947303	0					
ANR	4947858	Identifier	stdout		4947303	0					
ANR	4947859	ExpressionStatement	isOkay = false	236:2:6728:6742	4947303	3	True				
ANR	4947860	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4947861	Identifier	isOkay		4947303	0					
ANR	4947862	Identifier	false		4947303	1					
ANR	4947863	ExpressionStatement	subE . cluster = 1	239:1:6749:6765	4947303	41	True				
ANR	4947864	AssignmentExpression	subE . cluster = 1		4947303	0		=			
ANR	4947865	MemberAccess	subE . cluster		4947303	0					
ANR	4947866	Identifier	subE		4947303	0					
ANR	4947867	Identifier	cluster		4947303	1					
ANR	4947868	PrimaryExpression	1		4947303	1					
ANR	4947869	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & subE ) )"		4947303	42					
ANR	4947870	Condition	"! ReadAndTestEvent ( lazyReader , & subE )"	240:6:6773:6808	4947303	0	True				
ANR	4947871	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & subE )"		4947303	0					
ANR	4947872	UnaryOperator	!		4947303	0					
ANR	4947873	CallExpression	"ReadAndTestEvent ( lazyReader , & subE )"		4947303	1					
ANR	4947874	Callee	ReadAndTestEvent		4947303	0					
ANR	4947875	Identifier	ReadAndTestEvent		4947303	0					
ANR	4947876	ArgumentList	lazyReader		4947303	1					
ANR	4947877	Argument	lazyReader		4947303	0					
ANR	4947878	Identifier	lazyReader		4947303	0					
ANR	4947879	Argument	& subE		4947303	1					
ANR	4947880	UnaryOperationExpression	& subE		4947303	0					
ANR	4947881	UnaryOperator	&		4947303	0					
ANR	4947882	Identifier	subE		4947303	1					
ANR	4947883	CompoundStatement		101:45:2979:2979	4947303	1					
ANR	4947884	ExpressionStatement	isOkay = false	241:2:6816:6830	4947303	0	True				
ANR	4947885	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4947886	Identifier	isOkay		4947303	0					
ANR	4947887	Identifier	false		4947303	1					
ANR	4947888	IfStatement	if ( lazyReader . detectLogGrowth ( ) )		4947303	43					
ANR	4947889	Condition	lazyReader . detectLogGrowth ( )	244:6:6842:6869	4947303	0	True				
ANR	4947890	CallExpression	lazyReader . detectLogGrowth ( )		4947303	0					
ANR	4947891	Callee	lazyReader . detectLogGrowth		4947303	0					
ANR	4947892	MemberAccess	lazyReader . detectLogGrowth		4947303	0					
ANR	4947893	Identifier	lazyReader		4947303	0					
ANR	4947894	Identifier	detectLogGrowth		4947303	1					
ANR	4947895	ArgumentList			4947303	1					
ANR	4947896	CompoundStatement		105:37:3040:3040	4947303	1					
ANR	4947897	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	245:2:6877:6928	4947303	0	True				
ANR	4947898	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4947899	Callee	printf		4947303	0					
ANR	4947900	Identifier	printf		4947303	0					
ANR	4947901	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4947902	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4947903	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4947904	Argument	__FILE__		4947303	1					
ANR	4947905	Identifier	__FILE__		4947303	0					
ANR	4947906	Argument	__LINE__		4947303	2					
ANR	4947907	Identifier	__LINE__		4947303	0					
ANR	4947908	ExpressionStatement	"printf ( ""should NOT have gotten log growth"" )"	246:2:6932:6977	4947303	1	True				
ANR	4947909	CallExpression	"printf ( ""should NOT have gotten log growth"" )"		4947303	0					
ANR	4947910	Callee	printf		4947303	0					
ANR	4947911	Identifier	printf		4947303	0					
ANR	4947912	ArgumentList	"""should NOT have gotten log growth"""		4947303	1					
ANR	4947913	Argument	"""should NOT have gotten log growth"""		4947303	0					
ANR	4947914	PrimaryExpression	"""should NOT have gotten log growth"""		4947303	0					
ANR	4947915	ExpressionStatement	fflush ( stdout )	247:2:6981:6997	4947303	2	True				
ANR	4947916	CallExpression	fflush ( stdout )		4947303	0					
ANR	4947917	Callee	fflush		4947303	0					
ANR	4947918	Identifier	fflush		4947303	0					
ANR	4947919	ArgumentList	stdout		4947303	1					
ANR	4947920	Argument	stdout		4947303	0					
ANR	4947921	Identifier	stdout		4947303	0					
ANR	4947922	ExpressionStatement	isOkay = false	248:2:7001:7015	4947303	3	True				
ANR	4947923	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4947924	Identifier	isOkay		4947303	0					
ANR	4947925	Identifier	false		4947303	1					
ANR	4947926	IdentifierDeclStatement	JobTerminatedEvent termE ;	251:1:7022:7046	4947303	44	True				
ANR	4947927	IdentifierDecl	termE		4947303	0					
ANR	4947928	IdentifierDeclType	JobTerminatedEvent		4947303	0					
ANR	4947929	Identifier	termE		4947303	1					
ANR	4947930	ExpressionStatement	termE . normal = true	252:1:7049:7068	4947303	45	True				
ANR	4947931	AssignmentExpression	termE . normal = true		4947303	0		=			
ANR	4947932	MemberAccess	termE . normal		4947303	0					
ANR	4947933	Identifier	termE		4947303	0					
ANR	4947934	Identifier	normal		4947303	1					
ANR	4947935	Identifier	true		4947303	1					
ANR	4947936	ExpressionStatement	termE . returnValue = 0	253:1:7071:7092	4947303	46	True				
ANR	4947937	AssignmentExpression	termE . returnValue = 0		4947303	0		=			
ANR	4947938	MemberAccess	termE . returnValue		4947303	0					
ANR	4947939	Identifier	termE		4947303	0					
ANR	4947940	Identifier	returnValue		4947303	1					
ANR	4947941	PrimaryExpression	0		4947303	1					
ANR	4947942	IfStatement	if ( ! log1 . writeEvent ( & termE ) )		4947303	47					
ANR	4947943	Condition	! log1 . writeEvent ( & termE )	254:6:7100:7123	4947303	0	True				
ANR	4947944	UnaryOperationExpression	! log1 . writeEvent ( & termE )		4947303	0					
ANR	4947945	UnaryOperator	!		4947303	0					
ANR	4947946	CallExpression	log1 . writeEvent ( & termE )		4947303	1					
ANR	4947947	Callee	log1 . writeEvent		4947303	0					
ANR	4947948	MemberAccess	log1 . writeEvent		4947303	0					
ANR	4947949	Identifier	log1		4947303	0					
ANR	4947950	Identifier	writeEvent		4947303	1					
ANR	4947951	ArgumentList	& termE		4947303	1					
ANR	4947952	Argument	& termE		4947303	0					
ANR	4947953	UnaryOperationExpression	& termE		4947303	0					
ANR	4947954	UnaryOperator	&		4947303	0					
ANR	4947955	Identifier	termE		4947303	1					
ANR	4947956	CompoundStatement		115:33:3294:3294	4947303	1					
ANR	4947957	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	255:2:7131:7182	4947303	0	True				
ANR	4947958	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4947959	Callee	printf		4947303	0					
ANR	4947960	Identifier	printf		4947303	0					
ANR	4947961	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4947962	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4947963	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4947964	Argument	__FILE__		4947303	1					
ANR	4947965	Identifier	__FILE__		4947303	0					
ANR	4947966	Argument	__LINE__		4947303	2					
ANR	4947967	Identifier	__LINE__		4947303	0					
ANR	4947968	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	256:2:7186:7217	4947303	1	True				
ANR	4947969	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4947970	Callee	printf		4947303	0					
ANR	4947971	Identifier	printf		4947303	0					
ANR	4947972	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4947973	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4947974	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4947975	ExpressionStatement	fflush ( stdout )	257:2:7221:7237	4947303	2	True				
ANR	4947976	CallExpression	fflush ( stdout )		4947303	0					
ANR	4947977	Callee	fflush		4947303	0					
ANR	4947978	Identifier	fflush		4947303	0					
ANR	4947979	ArgumentList	stdout		4947303	1					
ANR	4947980	Argument	stdout		4947303	0					
ANR	4947981	Identifier	stdout		4947303	0					
ANR	4947982	ExpressionStatement	isOkay = false	258:2:7241:7255	4947303	3	True				
ANR	4947983	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4947984	Identifier	isOkay		4947303	0					
ANR	4947985	Identifier	false		4947303	1					
ANR	4947986	ExpressionStatement	termE . cluster = 1	261:1:7262:7279	4947303	48	True				
ANR	4947987	AssignmentExpression	termE . cluster = 1		4947303	0		=			
ANR	4947988	MemberAccess	termE . cluster		4947303	0					
ANR	4947989	Identifier	termE		4947303	0					
ANR	4947990	Identifier	cluster		4947303	1					
ANR	4947991	PrimaryExpression	1		4947303	1					
ANR	4947992	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & termE ) )"		4947303	49					
ANR	4947993	Condition	"! ReadAndTestEvent ( lazyReader , & termE )"	262:6:7287:7323	4947303	0	True				
ANR	4947994	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & termE )"		4947303	0					
ANR	4947995	UnaryOperator	!		4947303	0					
ANR	4947996	CallExpression	"ReadAndTestEvent ( lazyReader , & termE )"		4947303	1					
ANR	4947997	Callee	ReadAndTestEvent		4947303	0					
ANR	4947998	Identifier	ReadAndTestEvent		4947303	0					
ANR	4947999	ArgumentList	lazyReader		4947303	1					
ANR	4948000	Argument	lazyReader		4947303	0					
ANR	4948001	Identifier	lazyReader		4947303	0					
ANR	4948002	Argument	& termE		4947303	1					
ANR	4948003	UnaryOperationExpression	& termE		4947303	0					
ANR	4948004	UnaryOperator	&		4947303	0					
ANR	4948005	Identifier	termE		4947303	1					
ANR	4948006	CompoundStatement		123:46:3494:3494	4947303	1					
ANR	4948007	ExpressionStatement	isOkay = false	263:2:7331:7345	4947303	0	True				
ANR	4948008	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948009	Identifier	isOkay		4947303	0					
ANR	4948010	Identifier	false		4947303	1					
ANR	4948011	IfStatement	if ( ! log2 . writeEvent ( & subE ) )		4947303	50					
ANR	4948012	Condition	! log2 . writeEvent ( & subE )	269:6:7400:7422	4947303	0	True				
ANR	4948013	UnaryOperationExpression	! log2 . writeEvent ( & subE )		4947303	0					
ANR	4948014	UnaryOperator	!		4947303	0					
ANR	4948015	CallExpression	log2 . writeEvent ( & subE )		4947303	1					
ANR	4948016	Callee	log2 . writeEvent		4947303	0					
ANR	4948017	MemberAccess	log2 . writeEvent		4947303	0					
ANR	4948018	Identifier	log2		4947303	0					
ANR	4948019	Identifier	writeEvent		4947303	1					
ANR	4948020	ArgumentList	& subE		4947303	1					
ANR	4948021	Argument	& subE		4947303	0					
ANR	4948022	UnaryOperationExpression	& subE		4947303	0					
ANR	4948023	UnaryOperator	&		4947303	0					
ANR	4948024	Identifier	subE		4947303	1					
ANR	4948025	CompoundStatement		130:32:3593:3593	4947303	1					
ANR	4948026	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	270:2:7430:7481	4947303	0	True				
ANR	4948027	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4948028	Callee	printf		4947303	0					
ANR	4948029	Identifier	printf		4947303	0					
ANR	4948030	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4948031	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948032	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948033	Argument	__FILE__		4947303	1					
ANR	4948034	Identifier	__FILE__		4947303	0					
ANR	4948035	Argument	__LINE__		4947303	2					
ANR	4948036	Identifier	__LINE__		4947303	0					
ANR	4948037	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	271:2:7485:7516	4947303	1	True				
ANR	4948038	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4948039	Callee	printf		4947303	0					
ANR	4948040	Identifier	printf		4947303	0					
ANR	4948041	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4948042	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4948043	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4948044	ExpressionStatement	fflush ( stdout )	272:2:7520:7536	4947303	2	True				
ANR	4948045	CallExpression	fflush ( stdout )		4947303	0					
ANR	4948046	Callee	fflush		4947303	0					
ANR	4948047	Identifier	fflush		4947303	0					
ANR	4948048	ArgumentList	stdout		4947303	1					
ANR	4948049	Argument	stdout		4947303	0					
ANR	4948050	Identifier	stdout		4947303	0					
ANR	4948051	ExpressionStatement	isOkay = false	273:2:7540:7554	4947303	3	True				
ANR	4948052	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948053	Identifier	isOkay		4947303	0					
ANR	4948054	Identifier	false		4947303	1					
ANR	4948055	IfStatement	"if ( ! monitorLogFile ( lazyReader , file2 , true ) )"		4947303	51					
ANR	4948056	Condition	"! monitorLogFile ( lazyReader , file2 , true )"	276:5:7565:7606	4947303	0	True				
ANR	4948057	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file2 , true )"		4947303	0					
ANR	4948058	UnaryOperator	!		4947303	0					
ANR	4948059	CallExpression	"monitorLogFile ( lazyReader , file2 , true )"		4947303	1					
ANR	4948060	Callee	monitorLogFile		4947303	0					
ANR	4948061	Identifier	monitorLogFile		4947303	0					
ANR	4948062	ArgumentList	lazyReader		4947303	1					
ANR	4948063	Argument	lazyReader		4947303	0					
ANR	4948064	Identifier	lazyReader		4947303	0					
ANR	4948065	Argument	file2		4947303	1					
ANR	4948066	Identifier	file2		4947303	0					
ANR	4948067	Argument	true		4947303	2					
ANR	4948068	Identifier	true		4947303	0					
ANR	4948069	CompoundStatement		137:50:3777:3777	4947303	1					
ANR	4948070	ExpressionStatement	isOkay = false	277:2:7614:7628	4947303	0	True				
ANR	4948071	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948072	Identifier	isOkay		4947303	0					
ANR	4948073	Identifier	false		4947303	1					
ANR	4948074	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		4947303	52					
ANR	4948075	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	280:6:7640:7676	4947303	0	True				
ANR	4948076	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		4947303	0					
ANR	4948077	UnaryOperator	!		4947303	0					
ANR	4948078	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		4947303	1					
ANR	4948079	Callee	ReadAndTestEvent		4947303	0					
ANR	4948080	Identifier	ReadAndTestEvent		4947303	0					
ANR	4948081	ArgumentList	lazyReader		4947303	1					
ANR	4948082	Argument	lazyReader		4947303	0					
ANR	4948083	Identifier	lazyReader		4947303	0					
ANR	4948084	Argument	NULL		4947303	1					
ANR	4948085	Identifier	NULL		4947303	0					
ANR	4948086	CompoundStatement		141:46:3847:3847	4947303	1					
ANR	4948087	ExpressionStatement	isOkay = false	281:2:7684:7698	4947303	0	True				
ANR	4948088	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948089	Identifier	isOkay		4947303	0					
ANR	4948090	Identifier	false		4947303	1					
ANR	4948091	IfStatement	"if ( unmonitorLogFile ( lazyReader , file3 ) )"		4947303	53					
ANR	4948092	Condition	"unmonitorLogFile ( lazyReader , file3 )"	287:6:7783:7819	4947303	0	True				
ANR	4948093	CallExpression	"unmonitorLogFile ( lazyReader , file3 )"		4947303	0					
ANR	4948094	Callee	unmonitorLogFile		4947303	0					
ANR	4948095	Identifier	unmonitorLogFile		4947303	0					
ANR	4948096	ArgumentList	lazyReader		4947303	1					
ANR	4948097	Argument	lazyReader		4947303	0					
ANR	4948098	Identifier	lazyReader		4947303	0					
ANR	4948099	Argument	file3		4947303	1					
ANR	4948100	Identifier	file3		4947303	0					
ANR	4948101	CompoundStatement		148:46:3990:3990	4947303	1					
ANR	4948102	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	288:2:7827:7878	4947303	0	True				
ANR	4948103	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4948104	Callee	printf		4947303	0					
ANR	4948105	Identifier	printf		4947303	0					
ANR	4948106	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4948107	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948108	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948109	Argument	__FILE__		4947303	1					
ANR	4948110	Identifier	__FILE__		4947303	0					
ANR	4948111	Argument	__LINE__		4947303	2					
ANR	4948112	Identifier	__LINE__		4947303	0					
ANR	4948113	ExpressionStatement	"printf ( ""Unmonitoring file %s should have failed\\n"" , file3 )"	289:2:7882:7942	4947303	1	True				
ANR	4948114	CallExpression	"printf ( ""Unmonitoring file %s should have failed\\n"" , file3 )"		4947303	0					
ANR	4948115	Callee	printf		4947303	0					
ANR	4948116	Identifier	printf		4947303	0					
ANR	4948117	ArgumentList	"""Unmonitoring file %s should have failed\\n"""		4947303	1					
ANR	4948118	Argument	"""Unmonitoring file %s should have failed\\n"""		4947303	0					
ANR	4948119	PrimaryExpression	"""Unmonitoring file %s should have failed\\n"""		4947303	0					
ANR	4948120	Argument	file3		4947303	1					
ANR	4948121	Identifier	file3		4947303	0					
ANR	4948122	ExpressionStatement	fflush ( stdout )	290:2:7946:7962	4947303	2	True				
ANR	4948123	CallExpression	fflush ( stdout )		4947303	0					
ANR	4948124	Callee	fflush		4947303	0					
ANR	4948125	Identifier	fflush		4947303	0					
ANR	4948126	ArgumentList	stdout		4947303	1					
ANR	4948127	Argument	stdout		4947303	0					
ANR	4948128	Identifier	stdout		4947303	0					
ANR	4948129	ExpressionStatement	isOkay = false	291:2:7966:7980	4947303	3	True				
ANR	4948130	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948131	Identifier	isOkay		4947303	0					
ANR	4948132	Identifier	false		4947303	1					
ANR	4948133	IfStatement	"if ( ! monitorLogFile ( lazyReader , file3 , true ) )"		4947303	54					
ANR	4948134	Condition	"! monitorLogFile ( lazyReader , file3 , true )"	297:5:8067:8108	4947303	0	True				
ANR	4948135	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file3 , true )"		4947303	0					
ANR	4948136	UnaryOperator	!		4947303	0					
ANR	4948137	CallExpression	"monitorLogFile ( lazyReader , file3 , true )"		4947303	1					
ANR	4948138	Callee	monitorLogFile		4947303	0					
ANR	4948139	Identifier	monitorLogFile		4947303	0					
ANR	4948140	ArgumentList	lazyReader		4947303	1					
ANR	4948141	Argument	lazyReader		4947303	0					
ANR	4948142	Identifier	lazyReader		4947303	0					
ANR	4948143	Argument	file3		4947303	1					
ANR	4948144	Identifier	file3		4947303	0					
ANR	4948145	Argument	true		4947303	2					
ANR	4948146	Identifier	true		4947303	0					
ANR	4948147	CompoundStatement		158:50:4279:4279	4947303	1					
ANR	4948148	ExpressionStatement	isOkay = false	298:2:8116:8130	4947303	0	True				
ANR	4948149	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948150	Identifier	isOkay		4947303	0					
ANR	4948151	Identifier	false		4947303	1					
ANR	4948152	IfStatement	"if ( ! monitorLogFile ( lazyReader , file3 , true ) )"		4947303	55					
ANR	4948153	Condition	"! monitorLogFile ( lazyReader , file3 , true )"	300:5:8140:8181	4947303	0	True				
ANR	4948154	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file3 , true )"		4947303	0					
ANR	4948155	UnaryOperator	!		4947303	0					
ANR	4948156	CallExpression	"monitorLogFile ( lazyReader , file3 , true )"		4947303	1					
ANR	4948157	Callee	monitorLogFile		4947303	0					
ANR	4948158	Identifier	monitorLogFile		4947303	0					
ANR	4948159	ArgumentList	lazyReader		4947303	1					
ANR	4948160	Argument	lazyReader		4947303	0					
ANR	4948161	Identifier	lazyReader		4947303	0					
ANR	4948162	Argument	file3		4947303	1					
ANR	4948163	Identifier	file3		4947303	0					
ANR	4948164	Argument	true		4947303	2					
ANR	4948165	Identifier	true		4947303	0					
ANR	4948166	CompoundStatement		161:50:4352:4352	4947303	1					
ANR	4948167	ExpressionStatement	isOkay = false	301:2:8189:8203	4947303	0	True				
ANR	4948168	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948169	Identifier	isOkay		4947303	0					
ANR	4948170	Identifier	false		4947303	1					
ANR	4948171	IfStatement	"if ( ! monitorLogFile ( lazyReader , file3 , true ) )"		4947303	56					
ANR	4948172	Condition	"! monitorLogFile ( lazyReader , file3 , true )"	303:5:8213:8254	4947303	0	True				
ANR	4948173	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file3 , true )"		4947303	0					
ANR	4948174	UnaryOperator	!		4947303	0					
ANR	4948175	CallExpression	"monitorLogFile ( lazyReader , file3 , true )"		4947303	1					
ANR	4948176	Callee	monitorLogFile		4947303	0					
ANR	4948177	Identifier	monitorLogFile		4947303	0					
ANR	4948178	ArgumentList	lazyReader		4947303	1					
ANR	4948179	Argument	lazyReader		4947303	0					
ANR	4948180	Identifier	lazyReader		4947303	0					
ANR	4948181	Argument	file3		4947303	1					
ANR	4948182	Identifier	file3		4947303	0					
ANR	4948183	Argument	true		4947303	2					
ANR	4948184	Identifier	true		4947303	0					
ANR	4948185	CompoundStatement		164:50:4425:4425	4947303	1					
ANR	4948186	ExpressionStatement	isOkay = false	304:2:8262:8276	4947303	0	True				
ANR	4948187	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948188	Identifier	isOkay		4947303	0					
ANR	4948189	Identifier	false		4947303	1					
ANR	4948190	IfStatement	"if ( ! monitorLogFile ( lazyReader , file3 , true ) )"		4947303	57					
ANR	4948191	Condition	"! monitorLogFile ( lazyReader , file3 , true )"	306:5:8286:8327	4947303	0	True				
ANR	4948192	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file3 , true )"		4947303	0					
ANR	4948193	UnaryOperator	!		4947303	0					
ANR	4948194	CallExpression	"monitorLogFile ( lazyReader , file3 , true )"		4947303	1					
ANR	4948195	Callee	monitorLogFile		4947303	0					
ANR	4948196	Identifier	monitorLogFile		4947303	0					
ANR	4948197	ArgumentList	lazyReader		4947303	1					
ANR	4948198	Argument	lazyReader		4947303	0					
ANR	4948199	Identifier	lazyReader		4947303	0					
ANR	4948200	Argument	file3		4947303	1					
ANR	4948201	Identifier	file3		4947303	0					
ANR	4948202	Argument	true		4947303	2					
ANR	4948203	Identifier	true		4947303	0					
ANR	4948204	CompoundStatement		167:50:4498:4498	4947303	1					
ANR	4948205	ExpressionStatement	isOkay = false	307:2:8335:8349	4947303	0	True				
ANR	4948206	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948207	Identifier	isOkay		4947303	0					
ANR	4948208	Identifier	false		4947303	1					
ANR	4948209	IfStatement	if ( ( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 3 )		4947303	58					
ANR	4948210	Condition	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 3	309:6:8360:8412	4947303	0	True				
ANR	4948211	EqualityExpression	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 3		4947303	0		!=			
ANR	4948212	AssignmentExpression	totalLogCount = lazyReader . totalLogFileCount ( )		4947303	0		=			
ANR	4948213	Identifier	totalLogCount		4947303	0					
ANR	4948214	CallExpression	lazyReader . totalLogFileCount ( )		4947303	1					
ANR	4948215	Callee	lazyReader . totalLogFileCount		4947303	0					
ANR	4948216	MemberAccess	lazyReader . totalLogFileCount		4947303	0					
ANR	4948217	Identifier	lazyReader		4947303	0					
ANR	4948218	Identifier	totalLogFileCount		4947303	1					
ANR	4948219	ArgumentList			4947303	1					
ANR	4948220	PrimaryExpression	3		4947303	1					
ANR	4948221	CompoundStatement		170:62:4583:4583	4947303	1					
ANR	4948222	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	310:2:8420:8471	4947303	0	True				
ANR	4948223	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4948224	Callee	printf		4947303	0					
ANR	4948225	Identifier	printf		4947303	0					
ANR	4948226	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4948227	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948228	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948229	Argument	__FILE__		4947303	1					
ANR	4948230	Identifier	__FILE__		4947303	0					
ANR	4948231	Argument	__LINE__		4947303	2					
ANR	4948232	Identifier	__LINE__		4947303	0					
ANR	4948233	Statement	printf	311:2:8475:8480	4947303	1	True				
ANR	4948234	Statement	(	311:8:8481:8481	4947303	2	True				
ANR	4948235	Statement	"""lazyReader.totalLogFileCount() was %d; should """	311:10:8483:8530	4947303	3	True				
ANR	4948236	Statement	"""have been 3\\n"""	312:5:8537:8551	4947303	4	True				
ANR	4948237	Statement	","	312:20:8552:8552	4947303	5	True				
ANR	4948238	Statement	totalLogCount	312:22:8554:8566	4947303	6	True				
ANR	4948239	Statement	)	312:36:8568:8568	4947303	7	True				
ANR	4948240	ExpressionStatement		312:37:8569:8569	4947303	8	True				
ANR	4948241	ExpressionStatement	fflush ( stdout )	313:2:8573:8589	4947303	9	True				
ANR	4948242	CallExpression	fflush ( stdout )		4947303	0					
ANR	4948243	Callee	fflush		4947303	0					
ANR	4948244	Identifier	fflush		4947303	0					
ANR	4948245	ArgumentList	stdout		4947303	1					
ANR	4948246	Argument	stdout		4947303	0					
ANR	4948247	Identifier	stdout		4947303	0					
ANR	4948248	ExpressionStatement	isOkay = false	314:2:8593:8607	4947303	10	True				
ANR	4948249	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948250	Identifier	isOkay		4947303	0					
ANR	4948251	Identifier	false		4947303	1					
ANR	4948252	ExpressionStatement	lazyReader . printAllLogMonitors ( stdout )	317:1:8614:8654	4947303	59	True				
ANR	4948253	CallExpression	lazyReader . printAllLogMonitors ( stdout )		4947303	0					
ANR	4948254	Callee	lazyReader . printAllLogMonitors		4947303	0					
ANR	4948255	MemberAccess	lazyReader . printAllLogMonitors		4947303	0					
ANR	4948256	Identifier	lazyReader		4947303	0					
ANR	4948257	Identifier	printAllLogMonitors		4947303	1					
ANR	4948258	ArgumentList	stdout		4947303	1					
ANR	4948259	Argument	stdout		4947303	0					
ANR	4948260	Identifier	stdout		4947303	0					
ANR	4948261	IfStatement	if ( ! log2 . writeEvent ( & subE ) )		4947303	60					
ANR	4948262	Condition	! log2 . writeEvent ( & subE )	319:6:8663:8685	4947303	0	True				
ANR	4948263	UnaryOperationExpression	! log2 . writeEvent ( & subE )		4947303	0					
ANR	4948264	UnaryOperator	!		4947303	0					
ANR	4948265	CallExpression	log2 . writeEvent ( & subE )		4947303	1					
ANR	4948266	Callee	log2 . writeEvent		4947303	0					
ANR	4948267	MemberAccess	log2 . writeEvent		4947303	0					
ANR	4948268	Identifier	log2		4947303	0					
ANR	4948269	Identifier	writeEvent		4947303	1					
ANR	4948270	ArgumentList	& subE		4947303	1					
ANR	4948271	Argument	& subE		4947303	0					
ANR	4948272	UnaryOperationExpression	& subE		4947303	0					
ANR	4948273	UnaryOperator	&		4947303	0					
ANR	4948274	Identifier	subE		4947303	1					
ANR	4948275	CompoundStatement		180:32:4856:4856	4947303	1					
ANR	4948276	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	320:2:8693:8744	4947303	0	True				
ANR	4948277	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4948278	Callee	printf		4947303	0					
ANR	4948279	Identifier	printf		4947303	0					
ANR	4948280	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4948281	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948282	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948283	Argument	__FILE__		4947303	1					
ANR	4948284	Identifier	__FILE__		4947303	0					
ANR	4948285	Argument	__LINE__		4947303	2					
ANR	4948286	Identifier	__LINE__		4947303	0					
ANR	4948287	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	321:2:8748:8779	4947303	1	True				
ANR	4948288	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4948289	Callee	printf		4947303	0					
ANR	4948290	Identifier	printf		4947303	0					
ANR	4948291	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4948292	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4948293	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4948294	ExpressionStatement	fflush ( stdout )	322:2:8783:8799	4947303	2	True				
ANR	4948295	CallExpression	fflush ( stdout )		4947303	0					
ANR	4948296	Callee	fflush		4947303	0					
ANR	4948297	Identifier	fflush		4947303	0					
ANR	4948298	ArgumentList	stdout		4947303	1					
ANR	4948299	Argument	stdout		4947303	0					
ANR	4948300	Identifier	stdout		4947303	0					
ANR	4948301	ExpressionStatement	isOkay = false	323:2:8803:8817	4947303	3	True				
ANR	4948302	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948303	Identifier	isOkay		4947303	0					
ANR	4948304	Identifier	false		4947303	1					
ANR	4948305	ExpressionStatement	sleep ( 2 )	326:1:8891:8899	4947303	61	True				
ANR	4948306	CallExpression	sleep ( 2 )		4947303	0					
ANR	4948307	Callee	sleep		4947303	0					
ANR	4948308	Identifier	sleep		4947303	0					
ANR	4948309	ArgumentList	2		4947303	1					
ANR	4948310	Argument	2		4947303	0					
ANR	4948311	PrimaryExpression	2		4947303	0					
ANR	4948312	IfStatement	if ( ! log3 . writeEvent ( & subE ) )		4947303	62					
ANR	4948313	Condition	! log3 . writeEvent ( & subE )	327:6:8907:8929	4947303	0	True				
ANR	4948314	UnaryOperationExpression	! log3 . writeEvent ( & subE )		4947303	0					
ANR	4948315	UnaryOperator	!		4947303	0					
ANR	4948316	CallExpression	log3 . writeEvent ( & subE )		4947303	1					
ANR	4948317	Callee	log3 . writeEvent		4947303	0					
ANR	4948318	MemberAccess	log3 . writeEvent		4947303	0					
ANR	4948319	Identifier	log3		4947303	0					
ANR	4948320	Identifier	writeEvent		4947303	1					
ANR	4948321	ArgumentList	& subE		4947303	1					
ANR	4948322	Argument	& subE		4947303	0					
ANR	4948323	UnaryOperationExpression	& subE		4947303	0					
ANR	4948324	UnaryOperator	&		4947303	0					
ANR	4948325	Identifier	subE		4947303	1					
ANR	4948326	CompoundStatement		188:32:5100:5100	4947303	1					
ANR	4948327	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	328:2:8937:8988	4947303	0	True				
ANR	4948328	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4948329	Callee	printf		4947303	0					
ANR	4948330	Identifier	printf		4947303	0					
ANR	4948331	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4948332	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948333	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948334	Argument	__FILE__		4947303	1					
ANR	4948335	Identifier	__FILE__		4947303	0					
ANR	4948336	Argument	__LINE__		4947303	2					
ANR	4948337	Identifier	__LINE__		4947303	0					
ANR	4948338	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	329:2:8992:9023	4947303	1	True				
ANR	4948339	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4948340	Callee	printf		4947303	0					
ANR	4948341	Identifier	printf		4947303	0					
ANR	4948342	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4948343	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4948344	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4948345	ExpressionStatement	fflush ( stdout )	330:2:9027:9043	4947303	2	True				
ANR	4948346	CallExpression	fflush ( stdout )		4947303	0					
ANR	4948347	Callee	fflush		4947303	0					
ANR	4948348	Identifier	fflush		4947303	0					
ANR	4948349	ArgumentList	stdout		4947303	1					
ANR	4948350	Argument	stdout		4947303	0					
ANR	4948351	Identifier	stdout		4947303	0					
ANR	4948352	ExpressionStatement	isOkay = false	331:2:9047:9061	4947303	3	True				
ANR	4948353	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948354	Identifier	isOkay		4947303	0					
ANR	4948355	Identifier	false		4947303	1					
ANR	4948356	IfStatement	if ( ! lazyReader . detectLogGrowth ( ) )		4947303	63					
ANR	4948357	Condition	! lazyReader . detectLogGrowth ( )	334:6:9073:9101	4947303	0	True				
ANR	4948358	UnaryOperationExpression	! lazyReader . detectLogGrowth ( )		4947303	0					
ANR	4948359	UnaryOperator	!		4947303	0					
ANR	4948360	CallExpression	lazyReader . detectLogGrowth ( )		4947303	1					
ANR	4948361	Callee	lazyReader . detectLogGrowth		4947303	0					
ANR	4948362	MemberAccess	lazyReader . detectLogGrowth		4947303	0					
ANR	4948363	Identifier	lazyReader		4947303	0					
ANR	4948364	Identifier	detectLogGrowth		4947303	1					
ANR	4948365	ArgumentList			4947303	1					
ANR	4948366	CompoundStatement		195:38:5272:5272	4947303	1					
ANR	4948367	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	335:2:9109:9160	4947303	0	True				
ANR	4948368	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4948369	Callee	printf		4947303	0					
ANR	4948370	Identifier	printf		4947303	0					
ANR	4948371	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4948372	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948373	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948374	Argument	__FILE__		4947303	1					
ANR	4948375	Identifier	__FILE__		4947303	0					
ANR	4948376	Argument	__LINE__		4947303	2					
ANR	4948377	Identifier	__LINE__		4947303	0					
ANR	4948378	ExpressionStatement	"printf ( ""should have gotten log growth"" )"	336:2:9164:9205	4947303	1	True				
ANR	4948379	CallExpression	"printf ( ""should have gotten log growth"" )"		4947303	0					
ANR	4948380	Callee	printf		4947303	0					
ANR	4948381	Identifier	printf		4947303	0					
ANR	4948382	ArgumentList	"""should have gotten log growth"""		4947303	1					
ANR	4948383	Argument	"""should have gotten log growth"""		4947303	0					
ANR	4948384	PrimaryExpression	"""should have gotten log growth"""		4947303	0					
ANR	4948385	ExpressionStatement	fflush ( stdout )	337:2:9209:9225	4947303	2	True				
ANR	4948386	CallExpression	fflush ( stdout )		4947303	0					
ANR	4948387	Callee	fflush		4947303	0					
ANR	4948388	Identifier	fflush		4947303	0					
ANR	4948389	ArgumentList	stdout		4947303	1					
ANR	4948390	Argument	stdout		4947303	0					
ANR	4948391	Identifier	stdout		4947303	0					
ANR	4948392	ExpressionStatement	isOkay = false	338:2:9229:9243	4947303	3	True				
ANR	4948393	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948394	Identifier	isOkay		4947303	0					
ANR	4948395	Identifier	false		4947303	1					
ANR	4948396	ExpressionStatement	subE . cluster = 2	341:1:9250:9266	4947303	64	True				
ANR	4948397	AssignmentExpression	subE . cluster = 2		4947303	0		=			
ANR	4948398	MemberAccess	subE . cluster		4947303	0					
ANR	4948399	Identifier	subE		4947303	0					
ANR	4948400	Identifier	cluster		4947303	1					
ANR	4948401	PrimaryExpression	2		4947303	1					
ANR	4948402	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & subE ) )"		4947303	65					
ANR	4948403	Condition	"! ReadAndTestEvent ( lazyReader , & subE )"	342:6:9274:9309	4947303	0	True				
ANR	4948404	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & subE )"		4947303	0					
ANR	4948405	UnaryOperator	!		4947303	0					
ANR	4948406	CallExpression	"ReadAndTestEvent ( lazyReader , & subE )"		4947303	1					
ANR	4948407	Callee	ReadAndTestEvent		4947303	0					
ANR	4948408	Identifier	ReadAndTestEvent		4947303	0					
ANR	4948409	ArgumentList	lazyReader		4947303	1					
ANR	4948410	Argument	lazyReader		4947303	0					
ANR	4948411	Identifier	lazyReader		4947303	0					
ANR	4948412	Argument	& subE		4947303	1					
ANR	4948413	UnaryOperationExpression	& subE		4947303	0					
ANR	4948414	UnaryOperator	&		4947303	0					
ANR	4948415	Identifier	subE		4947303	1					
ANR	4948416	CompoundStatement		203:45:5480:5480	4947303	1					
ANR	4948417	ExpressionStatement	isOkay = false	343:2:9317:9331	4947303	0	True				
ANR	4948418	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948419	Identifier	isOkay		4947303	0					
ANR	4948420	Identifier	false		4947303	1					
ANR	4948421	ExpressionStatement	subE . cluster = 3	346:1:9338:9354	4947303	66	True				
ANR	4948422	AssignmentExpression	subE . cluster = 3		4947303	0		=			
ANR	4948423	MemberAccess	subE . cluster		4947303	0					
ANR	4948424	Identifier	subE		4947303	0					
ANR	4948425	Identifier	cluster		4947303	1					
ANR	4948426	PrimaryExpression	3		4947303	1					
ANR	4948427	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & subE ) )"		4947303	67					
ANR	4948428	Condition	"! ReadAndTestEvent ( lazyReader , & subE )"	347:6:9362:9397	4947303	0	True				
ANR	4948429	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & subE )"		4947303	0					
ANR	4948430	UnaryOperator	!		4947303	0					
ANR	4948431	CallExpression	"ReadAndTestEvent ( lazyReader , & subE )"		4947303	1					
ANR	4948432	Callee	ReadAndTestEvent		4947303	0					
ANR	4948433	Identifier	ReadAndTestEvent		4947303	0					
ANR	4948434	ArgumentList	lazyReader		4947303	1					
ANR	4948435	Argument	lazyReader		4947303	0					
ANR	4948436	Identifier	lazyReader		4947303	0					
ANR	4948437	Argument	& subE		4947303	1					
ANR	4948438	UnaryOperationExpression	& subE		4947303	0					
ANR	4948439	UnaryOperator	&		4947303	0					
ANR	4948440	Identifier	subE		4947303	1					
ANR	4948441	CompoundStatement		208:45:5568:5568	4947303	1					
ANR	4948442	ExpressionStatement	isOkay = false	348:2:9405:9419	4947303	0	True				
ANR	4948443	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948444	Identifier	isOkay		4947303	0					
ANR	4948445	Identifier	false		4947303	1					
ANR	4948446	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		4947303	68					
ANR	4948447	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	351:6:9431:9465	4947303	0	True				
ANR	4948448	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		4947303	0					
ANR	4948449	UnaryOperator	!		4947303	0					
ANR	4948450	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		4947303	1					
ANR	4948451	Callee	ReadAndTestEvent		4947303	0					
ANR	4948452	Identifier	ReadAndTestEvent		4947303	0					
ANR	4948453	ArgumentList	lazyReader		4947303	1					
ANR	4948454	Argument	lazyReader		4947303	0					
ANR	4948455	Identifier	lazyReader		4947303	0					
ANR	4948456	Argument	NULL		4947303	1					
ANR	4948457	Identifier	NULL		4947303	0					
ANR	4948458	CompoundStatement		212:44:5636:5636	4947303	1					
ANR	4948459	ExpressionStatement	isOkay = false	352:2:9473:9487	4947303	0	True				
ANR	4948460	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948461	Identifier	isOkay		4947303	0					
ANR	4948462	Identifier	false		4947303	1					
ANR	4948463	IfStatement	if ( ! log2 . writeEvent ( & termE ) )		4947303	69					
ANR	4948464	Condition	! log2 . writeEvent ( & termE )	355:6:9499:9522	4947303	0	True				
ANR	4948465	UnaryOperationExpression	! log2 . writeEvent ( & termE )		4947303	0					
ANR	4948466	UnaryOperator	!		4947303	0					
ANR	4948467	CallExpression	log2 . writeEvent ( & termE )		4947303	1					
ANR	4948468	Callee	log2 . writeEvent		4947303	0					
ANR	4948469	MemberAccess	log2 . writeEvent		4947303	0					
ANR	4948470	Identifier	log2		4947303	0					
ANR	4948471	Identifier	writeEvent		4947303	1					
ANR	4948472	ArgumentList	& termE		4947303	1					
ANR	4948473	Argument	& termE		4947303	0					
ANR	4948474	UnaryOperationExpression	& termE		4947303	0					
ANR	4948475	UnaryOperator	&		4947303	0					
ANR	4948476	Identifier	termE		4947303	1					
ANR	4948477	CompoundStatement		216:33:5693:5693	4947303	1					
ANR	4948478	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	356:2:9530:9581	4947303	0	True				
ANR	4948479	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4948480	Callee	printf		4947303	0					
ANR	4948481	Identifier	printf		4947303	0					
ANR	4948482	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4948483	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948484	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948485	Argument	__FILE__		4947303	1					
ANR	4948486	Identifier	__FILE__		4947303	0					
ANR	4948487	Argument	__LINE__		4947303	2					
ANR	4948488	Identifier	__LINE__		4947303	0					
ANR	4948489	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	357:2:9585:9616	4947303	1	True				
ANR	4948490	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4948491	Callee	printf		4947303	0					
ANR	4948492	Identifier	printf		4947303	0					
ANR	4948493	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4948494	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4948495	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4948496	ExpressionStatement	fflush ( stdout )	358:2:9620:9636	4947303	2	True				
ANR	4948497	CallExpression	fflush ( stdout )		4947303	0					
ANR	4948498	Callee	fflush		4947303	0					
ANR	4948499	Identifier	fflush		4947303	0					
ANR	4948500	ArgumentList	stdout		4947303	1					
ANR	4948501	Argument	stdout		4947303	0					
ANR	4948502	Identifier	stdout		4947303	0					
ANR	4948503	ExpressionStatement	isOkay = false	359:2:9640:9654	4947303	3	True				
ANR	4948504	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948505	Identifier	isOkay		4947303	0					
ANR	4948506	Identifier	false		4947303	1					
ANR	4948507	ExpressionStatement	sleep ( 2 )	362:1:9728:9736	4947303	70	True				
ANR	4948508	CallExpression	sleep ( 2 )		4947303	0					
ANR	4948509	Callee	sleep		4947303	0					
ANR	4948510	Identifier	sleep		4947303	0					
ANR	4948511	ArgumentList	2		4947303	1					
ANR	4948512	Argument	2		4947303	0					
ANR	4948513	PrimaryExpression	2		4947303	0					
ANR	4948514	IfStatement	if ( ! log3 . writeEvent ( & termE ) )		4947303	71					
ANR	4948515	Condition	! log3 . writeEvent ( & termE )	363:6:9744:9767	4947303	0	True				
ANR	4948516	UnaryOperationExpression	! log3 . writeEvent ( & termE )		4947303	0					
ANR	4948517	UnaryOperator	!		4947303	0					
ANR	4948518	CallExpression	log3 . writeEvent ( & termE )		4947303	1					
ANR	4948519	Callee	log3 . writeEvent		4947303	0					
ANR	4948520	MemberAccess	log3 . writeEvent		4947303	0					
ANR	4948521	Identifier	log3		4947303	0					
ANR	4948522	Identifier	writeEvent		4947303	1					
ANR	4948523	ArgumentList	& termE		4947303	1					
ANR	4948524	Argument	& termE		4947303	0					
ANR	4948525	UnaryOperationExpression	& termE		4947303	0					
ANR	4948526	UnaryOperator	&		4947303	0					
ANR	4948527	Identifier	termE		4947303	1					
ANR	4948528	CompoundStatement		224:33:5938:5938	4947303	1					
ANR	4948529	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	364:2:9775:9826	4947303	0	True				
ANR	4948530	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4948531	Callee	printf		4947303	0					
ANR	4948532	Identifier	printf		4947303	0					
ANR	4948533	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4948534	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948535	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948536	Argument	__FILE__		4947303	1					
ANR	4948537	Identifier	__FILE__		4947303	0					
ANR	4948538	Argument	__LINE__		4947303	2					
ANR	4948539	Identifier	__LINE__		4947303	0					
ANR	4948540	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	365:2:9830:9861	4947303	1	True				
ANR	4948541	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4948542	Callee	printf		4947303	0					
ANR	4948543	Identifier	printf		4947303	0					
ANR	4948544	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4948545	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4948546	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4948547	ExpressionStatement	fflush ( stdout )	366:2:9865:9881	4947303	2	True				
ANR	4948548	CallExpression	fflush ( stdout )		4947303	0					
ANR	4948549	Callee	fflush		4947303	0					
ANR	4948550	Identifier	fflush		4947303	0					
ANR	4948551	ArgumentList	stdout		4947303	1					
ANR	4948552	Argument	stdout		4947303	0					
ANR	4948553	Identifier	stdout		4947303	0					
ANR	4948554	ExpressionStatement	isOkay = false	367:2:9885:9899	4947303	3	True				
ANR	4948555	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948556	Identifier	isOkay		4947303	0					
ANR	4948557	Identifier	false		4947303	1					
ANR	4948558	ExpressionStatement	termE . cluster = 2	370:1:9906:9923	4947303	72	True				
ANR	4948559	AssignmentExpression	termE . cluster = 2		4947303	0		=			
ANR	4948560	MemberAccess	termE . cluster		4947303	0					
ANR	4948561	Identifier	termE		4947303	0					
ANR	4948562	Identifier	cluster		4947303	1					
ANR	4948563	PrimaryExpression	2		4947303	1					
ANR	4948564	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & termE ) )"		4947303	73					
ANR	4948565	Condition	"! ReadAndTestEvent ( lazyReader , & termE )"	371:6:9931:9967	4947303	0	True				
ANR	4948566	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & termE )"		4947303	0					
ANR	4948567	UnaryOperator	!		4947303	0					
ANR	4948568	CallExpression	"ReadAndTestEvent ( lazyReader , & termE )"		4947303	1					
ANR	4948569	Callee	ReadAndTestEvent		4947303	0					
ANR	4948570	Identifier	ReadAndTestEvent		4947303	0					
ANR	4948571	ArgumentList	lazyReader		4947303	1					
ANR	4948572	Argument	lazyReader		4947303	0					
ANR	4948573	Identifier	lazyReader		4947303	0					
ANR	4948574	Argument	& termE		4947303	1					
ANR	4948575	UnaryOperationExpression	& termE		4947303	0					
ANR	4948576	UnaryOperator	&		4947303	0					
ANR	4948577	Identifier	termE		4947303	1					
ANR	4948578	CompoundStatement		232:46:6138:6138	4947303	1					
ANR	4948579	ExpressionStatement	isOkay = false	372:2:9975:9989	4947303	0	True				
ANR	4948580	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948581	Identifier	isOkay		4947303	0					
ANR	4948582	Identifier	false		4947303	1					
ANR	4948583	ExpressionStatement	termE . cluster = 3	375:1:9996:10013	4947303	74	True				
ANR	4948584	AssignmentExpression	termE . cluster = 3		4947303	0		=			
ANR	4948585	MemberAccess	termE . cluster		4947303	0					
ANR	4948586	Identifier	termE		4947303	0					
ANR	4948587	Identifier	cluster		4947303	1					
ANR	4948588	PrimaryExpression	3		4947303	1					
ANR	4948589	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & termE ) )"		4947303	75					
ANR	4948590	Condition	"! ReadAndTestEvent ( lazyReader , & termE )"	376:6:10021:10057	4947303	0	True				
ANR	4948591	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & termE )"		4947303	0					
ANR	4948592	UnaryOperator	!		4947303	0					
ANR	4948593	CallExpression	"ReadAndTestEvent ( lazyReader , & termE )"		4947303	1					
ANR	4948594	Callee	ReadAndTestEvent		4947303	0					
ANR	4948595	Identifier	ReadAndTestEvent		4947303	0					
ANR	4948596	ArgumentList	lazyReader		4947303	1					
ANR	4948597	Argument	lazyReader		4947303	0					
ANR	4948598	Identifier	lazyReader		4947303	0					
ANR	4948599	Argument	& termE		4947303	1					
ANR	4948600	UnaryOperationExpression	& termE		4947303	0					
ANR	4948601	UnaryOperator	&		4947303	0					
ANR	4948602	Identifier	termE		4947303	1					
ANR	4948603	CompoundStatement		237:46:6228:6228	4947303	1					
ANR	4948604	ExpressionStatement	isOkay = false	377:2:10065:10079	4947303	0	True				
ANR	4948605	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948606	Identifier	isOkay		4947303	0					
ANR	4948607	Identifier	false		4947303	1					
ANR	4948608	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		4947303	76					
ANR	4948609	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	380:6:10091:10125	4947303	0	True				
ANR	4948610	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		4947303	0					
ANR	4948611	UnaryOperator	!		4947303	0					
ANR	4948612	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		4947303	1					
ANR	4948613	Callee	ReadAndTestEvent		4947303	0					
ANR	4948614	Identifier	ReadAndTestEvent		4947303	0					
ANR	4948615	ArgumentList	lazyReader		4947303	1					
ANR	4948616	Argument	lazyReader		4947303	0					
ANR	4948617	Identifier	lazyReader		4947303	0					
ANR	4948618	Argument	NULL		4947303	1					
ANR	4948619	Identifier	NULL		4947303	0					
ANR	4948620	CompoundStatement		241:44:6296:6296	4947303	1					
ANR	4948621	ExpressionStatement	isOkay = false	381:2:10133:10147	4947303	0	True				
ANR	4948622	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948623	Identifier	isOkay		4947303	0					
ANR	4948624	Identifier	false		4947303	1					
ANR	4948625	IfStatement	"if ( ! unmonitorLogFile ( lazyReader , file3 ) )"		4947303	77					
ANR	4948626	Condition	"! unmonitorLogFile ( lazyReader , file3 )"	384:5:10158:10195	4947303	0	True				
ANR	4948627	UnaryOperationExpression	"! unmonitorLogFile ( lazyReader , file3 )"		4947303	0					
ANR	4948628	UnaryOperator	!		4947303	0					
ANR	4948629	CallExpression	"unmonitorLogFile ( lazyReader , file3 )"		4947303	1					
ANR	4948630	Callee	unmonitorLogFile		4947303	0					
ANR	4948631	Identifier	unmonitorLogFile		4947303	0					
ANR	4948632	ArgumentList	lazyReader		4947303	1					
ANR	4948633	Argument	lazyReader		4947303	0					
ANR	4948634	Identifier	lazyReader		4947303	0					
ANR	4948635	Argument	file3		4947303	1					
ANR	4948636	Identifier	file3		4947303	0					
ANR	4948637	CompoundStatement		245:46:6366:6366	4947303	1					
ANR	4948638	ExpressionStatement	isOkay = false	385:2:10203:10217	4947303	0	True				
ANR	4948639	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948640	Identifier	isOkay		4947303	0					
ANR	4948641	Identifier	false		4947303	1					
ANR	4948642	IfStatement	"if ( ! unmonitorLogFile ( lazyReader , file3 ) )"		4947303	78					
ANR	4948643	Condition	"! unmonitorLogFile ( lazyReader , file3 )"	387:5:10227:10264	4947303	0	True				
ANR	4948644	UnaryOperationExpression	"! unmonitorLogFile ( lazyReader , file3 )"		4947303	0					
ANR	4948645	UnaryOperator	!		4947303	0					
ANR	4948646	CallExpression	"unmonitorLogFile ( lazyReader , file3 )"		4947303	1					
ANR	4948647	Callee	unmonitorLogFile		4947303	0					
ANR	4948648	Identifier	unmonitorLogFile		4947303	0					
ANR	4948649	ArgumentList	lazyReader		4947303	1					
ANR	4948650	Argument	lazyReader		4947303	0					
ANR	4948651	Identifier	lazyReader		4947303	0					
ANR	4948652	Argument	file3		4947303	1					
ANR	4948653	Identifier	file3		4947303	0					
ANR	4948654	CompoundStatement		248:46:6435:6435	4947303	1					
ANR	4948655	ExpressionStatement	isOkay = false	388:2:10272:10286	4947303	0	True				
ANR	4948656	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948657	Identifier	isOkay		4947303	0					
ANR	4948658	Identifier	false		4947303	1					
ANR	4948659	IfStatement	"if ( ! unmonitorLogFile ( lazyReader , file3 ) )"		4947303	79					
ANR	4948660	Condition	"! unmonitorLogFile ( lazyReader , file3 )"	390:5:10296:10333	4947303	0	True				
ANR	4948661	UnaryOperationExpression	"! unmonitorLogFile ( lazyReader , file3 )"		4947303	0					
ANR	4948662	UnaryOperator	!		4947303	0					
ANR	4948663	CallExpression	"unmonitorLogFile ( lazyReader , file3 )"		4947303	1					
ANR	4948664	Callee	unmonitorLogFile		4947303	0					
ANR	4948665	Identifier	unmonitorLogFile		4947303	0					
ANR	4948666	ArgumentList	lazyReader		4947303	1					
ANR	4948667	Argument	lazyReader		4947303	0					
ANR	4948668	Identifier	lazyReader		4947303	0					
ANR	4948669	Argument	file3		4947303	1					
ANR	4948670	Identifier	file3		4947303	0					
ANR	4948671	CompoundStatement		251:46:6504:6504	4947303	1					
ANR	4948672	ExpressionStatement	isOkay = false	391:2:10341:10355	4947303	0	True				
ANR	4948673	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948674	Identifier	isOkay		4947303	0					
ANR	4948675	Identifier	false		4947303	1					
ANR	4948676	IfStatement	"if ( ! unmonitorLogFile ( lazyReader , file3 ) )"		4947303	80					
ANR	4948677	Condition	"! unmonitorLogFile ( lazyReader , file3 )"	393:5:10365:10402	4947303	0	True				
ANR	4948678	UnaryOperationExpression	"! unmonitorLogFile ( lazyReader , file3 )"		4947303	0					
ANR	4948679	UnaryOperator	!		4947303	0					
ANR	4948680	CallExpression	"unmonitorLogFile ( lazyReader , file3 )"		4947303	1					
ANR	4948681	Callee	unmonitorLogFile		4947303	0					
ANR	4948682	Identifier	unmonitorLogFile		4947303	0					
ANR	4948683	ArgumentList	lazyReader		4947303	1					
ANR	4948684	Argument	lazyReader		4947303	0					
ANR	4948685	Identifier	lazyReader		4947303	0					
ANR	4948686	Argument	file3		4947303	1					
ANR	4948687	Identifier	file3		4947303	0					
ANR	4948688	CompoundStatement		254:46:6573:6573	4947303	1					
ANR	4948689	ExpressionStatement	isOkay = false	394:2:10410:10424	4947303	0	True				
ANR	4948690	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948691	Identifier	isOkay		4947303	0					
ANR	4948692	Identifier	false		4947303	1					
ANR	4948693	IfStatement	if ( ( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 3 )		4947303	81					
ANR	4948694	Condition	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 3	396:6:10435:10487	4947303	0	True				
ANR	4948695	EqualityExpression	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 3		4947303	0		!=			
ANR	4948696	AssignmentExpression	totalLogCount = lazyReader . totalLogFileCount ( )		4947303	0		=			
ANR	4948697	Identifier	totalLogCount		4947303	0					
ANR	4948698	CallExpression	lazyReader . totalLogFileCount ( )		4947303	1					
ANR	4948699	Callee	lazyReader . totalLogFileCount		4947303	0					
ANR	4948700	MemberAccess	lazyReader . totalLogFileCount		4947303	0					
ANR	4948701	Identifier	lazyReader		4947303	0					
ANR	4948702	Identifier	totalLogFileCount		4947303	1					
ANR	4948703	ArgumentList			4947303	1					
ANR	4948704	PrimaryExpression	3		4947303	1					
ANR	4948705	CompoundStatement		257:62:6658:6658	4947303	1					
ANR	4948706	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	397:2:10495:10546	4947303	0	True				
ANR	4948707	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4948708	Callee	printf		4947303	0					
ANR	4948709	Identifier	printf		4947303	0					
ANR	4948710	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4948711	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948712	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948713	Argument	__FILE__		4947303	1					
ANR	4948714	Identifier	__FILE__		4947303	0					
ANR	4948715	Argument	__LINE__		4947303	2					
ANR	4948716	Identifier	__LINE__		4947303	0					
ANR	4948717	Statement	printf	398:2:10550:10555	4947303	1	True				
ANR	4948718	Statement	(	398:8:10556:10556	4947303	2	True				
ANR	4948719	Statement	"""lazyReader.totalLogFileCount() was %d; should """	398:10:10558:10605	4947303	3	True				
ANR	4948720	Statement	"""have been 3\\n"""	399:5:10612:10626	4947303	4	True				
ANR	4948721	Statement	","	399:20:10627:10627	4947303	5	True				
ANR	4948722	Statement	totalLogCount	399:22:10629:10641	4947303	6	True				
ANR	4948723	Statement	)	399:36:10643:10643	4947303	7	True				
ANR	4948724	ExpressionStatement		399:37:10644:10644	4947303	8	True				
ANR	4948725	ExpressionStatement	fflush ( stdout )	400:2:10648:10664	4947303	9	True				
ANR	4948726	CallExpression	fflush ( stdout )		4947303	0					
ANR	4948727	Callee	fflush		4947303	0					
ANR	4948728	Identifier	fflush		4947303	0					
ANR	4948729	ArgumentList	stdout		4947303	1					
ANR	4948730	Argument	stdout		4947303	0					
ANR	4948731	Identifier	stdout		4947303	0					
ANR	4948732	ExpressionStatement	isOkay = false	401:2:10668:10682	4947303	10	True				
ANR	4948733	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948734	Identifier	isOkay		4947303	0					
ANR	4948735	Identifier	false		4947303	1					
ANR	4948736	ExpressionStatement	lazyReader . printActiveLogMonitors ( stdout )	404:1:10689:10732	4947303	82	True				
ANR	4948737	CallExpression	lazyReader . printActiveLogMonitors ( stdout )		4947303	0					
ANR	4948738	Callee	lazyReader . printActiveLogMonitors		4947303	0					
ANR	4948739	MemberAccess	lazyReader . printActiveLogMonitors		4947303	0					
ANR	4948740	Identifier	lazyReader		4947303	0					
ANR	4948741	Identifier	printActiveLogMonitors		4947303	1					
ANR	4948742	ArgumentList	stdout		4947303	1					
ANR	4948743	Argument	stdout		4947303	0					
ANR	4948744	Identifier	stdout		4947303	0					
ANR	4948745	IfStatement	"if ( ! monitorLogFile ( lazyReader , file4 , true ) )"		4947303	83					
ANR	4948746	Condition	"! monitorLogFile ( lazyReader , file4 , true )"	406:5:10740:10781	4947303	0	True				
ANR	4948747	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file4 , true )"		4947303	0					
ANR	4948748	UnaryOperator	!		4947303	0					
ANR	4948749	CallExpression	"monitorLogFile ( lazyReader , file4 , true )"		4947303	1					
ANR	4948750	Callee	monitorLogFile		4947303	0					
ANR	4948751	Identifier	monitorLogFile		4947303	0					
ANR	4948752	ArgumentList	lazyReader		4947303	1					
ANR	4948753	Argument	lazyReader		4947303	0					
ANR	4948754	Identifier	lazyReader		4947303	0					
ANR	4948755	Argument	file4		4947303	1					
ANR	4948756	Identifier	file4		4947303	0					
ANR	4948757	Argument	true		4947303	2					
ANR	4948758	Identifier	true		4947303	0					
ANR	4948759	CompoundStatement		267:50:6952:6952	4947303	1					
ANR	4948760	ExpressionStatement	isOkay = false	407:2:10789:10803	4947303	0	True				
ANR	4948761	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948762	Identifier	isOkay		4947303	0					
ANR	4948763	Identifier	false		4947303	1					
ANR	4948764	IfStatement	if ( ! log4 . writeEvent ( & subE ) )		4947303	84					
ANR	4948765	Condition	! log4 . writeEvent ( & subE )	409:6:10814:10836	4947303	0	True				
ANR	4948766	UnaryOperationExpression	! log4 . writeEvent ( & subE )		4947303	0					
ANR	4948767	UnaryOperator	!		4947303	0					
ANR	4948768	CallExpression	log4 . writeEvent ( & subE )		4947303	1					
ANR	4948769	Callee	log4 . writeEvent		4947303	0					
ANR	4948770	MemberAccess	log4 . writeEvent		4947303	0					
ANR	4948771	Identifier	log4		4947303	0					
ANR	4948772	Identifier	writeEvent		4947303	1					
ANR	4948773	ArgumentList	& subE		4947303	1					
ANR	4948774	Argument	& subE		4947303	0					
ANR	4948775	UnaryOperationExpression	& subE		4947303	0					
ANR	4948776	UnaryOperator	&		4947303	0					
ANR	4948777	Identifier	subE		4947303	1					
ANR	4948778	CompoundStatement		270:32:7007:7007	4947303	1					
ANR	4948779	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	410:2:10844:10895	4947303	0	True				
ANR	4948780	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4948781	Callee	printf		4947303	0					
ANR	4948782	Identifier	printf		4947303	0					
ANR	4948783	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4948784	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948785	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948786	Argument	__FILE__		4947303	1					
ANR	4948787	Identifier	__FILE__		4947303	0					
ANR	4948788	Argument	__LINE__		4947303	2					
ANR	4948789	Identifier	__LINE__		4947303	0					
ANR	4948790	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	411:2:10899:10930	4947303	1	True				
ANR	4948791	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4948792	Callee	printf		4947303	0					
ANR	4948793	Identifier	printf		4947303	0					
ANR	4948794	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4948795	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4948796	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4948797	ExpressionStatement	fflush ( stdout )	412:2:10934:10950	4947303	2	True				
ANR	4948798	CallExpression	fflush ( stdout )		4947303	0					
ANR	4948799	Callee	fflush		4947303	0					
ANR	4948800	Identifier	fflush		4947303	0					
ANR	4948801	ArgumentList	stdout		4947303	1					
ANR	4948802	Argument	stdout		4947303	0					
ANR	4948803	Identifier	stdout		4947303	0					
ANR	4948804	ExpressionStatement	isOkay = false	413:2:10954:10968	4947303	3	True				
ANR	4948805	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948806	Identifier	isOkay		4947303	0					
ANR	4948807	Identifier	false		4947303	1					
ANR	4948808	ExpressionStatement	subE . cluster = 4	416:1:10975:10991	4947303	85	True				
ANR	4948809	AssignmentExpression	subE . cluster = 4		4947303	0		=			
ANR	4948810	MemberAccess	subE . cluster		4947303	0					
ANR	4948811	Identifier	subE		4947303	0					
ANR	4948812	Identifier	cluster		4947303	1					
ANR	4948813	PrimaryExpression	4		4947303	1					
ANR	4948814	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & subE ) )"		4947303	86					
ANR	4948815	Condition	"! ReadAndTestEvent ( lazyReader , & subE )"	417:6:10999:11034	4947303	0	True				
ANR	4948816	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & subE )"		4947303	0					
ANR	4948817	UnaryOperator	!		4947303	0					
ANR	4948818	CallExpression	"ReadAndTestEvent ( lazyReader , & subE )"		4947303	1					
ANR	4948819	Callee	ReadAndTestEvent		4947303	0					
ANR	4948820	Identifier	ReadAndTestEvent		4947303	0					
ANR	4948821	ArgumentList	lazyReader		4947303	1					
ANR	4948822	Argument	lazyReader		4947303	0					
ANR	4948823	Identifier	lazyReader		4947303	0					
ANR	4948824	Argument	& subE		4947303	1					
ANR	4948825	UnaryOperationExpression	& subE		4947303	0					
ANR	4948826	UnaryOperator	&		4947303	0					
ANR	4948827	Identifier	subE		4947303	1					
ANR	4948828	CompoundStatement		278:45:7205:7205	4947303	1					
ANR	4948829	ExpressionStatement	isOkay = false	418:2:11042:11056	4947303	0	True				
ANR	4948830	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948831	Identifier	isOkay		4947303	0					
ANR	4948832	Identifier	false		4947303	1					
ANR	4948833	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		4947303	87					
ANR	4948834	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	421:6:11068:11102	4947303	0	True				
ANR	4948835	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		4947303	0					
ANR	4948836	UnaryOperator	!		4947303	0					
ANR	4948837	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		4947303	1					
ANR	4948838	Callee	ReadAndTestEvent		4947303	0					
ANR	4948839	Identifier	ReadAndTestEvent		4947303	0					
ANR	4948840	ArgumentList	lazyReader		4947303	1					
ANR	4948841	Argument	lazyReader		4947303	0					
ANR	4948842	Identifier	lazyReader		4947303	0					
ANR	4948843	Argument	NULL		4947303	1					
ANR	4948844	Identifier	NULL		4947303	0					
ANR	4948845	CompoundStatement		282:44:7273:7273	4947303	1					
ANR	4948846	ExpressionStatement	isOkay = false	422:2:11110:11124	4947303	0	True				
ANR	4948847	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948848	Identifier	isOkay		4947303	0					
ANR	4948849	Identifier	false		4947303	1					
ANR	4948850	IfStatement	if ( ! log4 . writeEvent ( & termE ) )		4947303	88					
ANR	4948851	Condition	! log4 . writeEvent ( & termE )	425:6:11136:11159	4947303	0	True				
ANR	4948852	UnaryOperationExpression	! log4 . writeEvent ( & termE )		4947303	0					
ANR	4948853	UnaryOperator	!		4947303	0					
ANR	4948854	CallExpression	log4 . writeEvent ( & termE )		4947303	1					
ANR	4948855	Callee	log4 . writeEvent		4947303	0					
ANR	4948856	MemberAccess	log4 . writeEvent		4947303	0					
ANR	4948857	Identifier	log4		4947303	0					
ANR	4948858	Identifier	writeEvent		4947303	1					
ANR	4948859	ArgumentList	& termE		4947303	1					
ANR	4948860	Argument	& termE		4947303	0					
ANR	4948861	UnaryOperationExpression	& termE		4947303	0					
ANR	4948862	UnaryOperator	&		4947303	0					
ANR	4948863	Identifier	termE		4947303	1					
ANR	4948864	CompoundStatement		286:33:7330:7330	4947303	1					
ANR	4948865	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	426:2:11167:11218	4947303	0	True				
ANR	4948866	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4948867	Callee	printf		4947303	0					
ANR	4948868	Identifier	printf		4947303	0					
ANR	4948869	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4948870	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948871	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948872	Argument	__FILE__		4947303	1					
ANR	4948873	Identifier	__FILE__		4947303	0					
ANR	4948874	Argument	__LINE__		4947303	2					
ANR	4948875	Identifier	__LINE__		4947303	0					
ANR	4948876	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	427:2:11222:11253	4947303	1	True				
ANR	4948877	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4948878	Callee	printf		4947303	0					
ANR	4948879	Identifier	printf		4947303	0					
ANR	4948880	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4948881	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4948882	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4948883	ExpressionStatement	fflush ( stdout )	428:2:11257:11273	4947303	2	True				
ANR	4948884	CallExpression	fflush ( stdout )		4947303	0					
ANR	4948885	Callee	fflush		4947303	0					
ANR	4948886	Identifier	fflush		4947303	0					
ANR	4948887	ArgumentList	stdout		4947303	1					
ANR	4948888	Argument	stdout		4947303	0					
ANR	4948889	Identifier	stdout		4947303	0					
ANR	4948890	ExpressionStatement	isOkay = false	429:2:11277:11291	4947303	3	True				
ANR	4948891	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948892	Identifier	isOkay		4947303	0					
ANR	4948893	Identifier	false		4947303	1					
ANR	4948894	ExpressionStatement	termE . cluster = 4	432:1:11298:11315	4947303	89	True				
ANR	4948895	AssignmentExpression	termE . cluster = 4		4947303	0		=			
ANR	4948896	MemberAccess	termE . cluster		4947303	0					
ANR	4948897	Identifier	termE		4947303	0					
ANR	4948898	Identifier	cluster		4947303	1					
ANR	4948899	PrimaryExpression	4		4947303	1					
ANR	4948900	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & termE ) )"		4947303	90					
ANR	4948901	Condition	"! ReadAndTestEvent ( lazyReader , & termE )"	433:6:11323:11359	4947303	0	True				
ANR	4948902	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & termE )"		4947303	0					
ANR	4948903	UnaryOperator	!		4947303	0					
ANR	4948904	CallExpression	"ReadAndTestEvent ( lazyReader , & termE )"		4947303	1					
ANR	4948905	Callee	ReadAndTestEvent		4947303	0					
ANR	4948906	Identifier	ReadAndTestEvent		4947303	0					
ANR	4948907	ArgumentList	lazyReader		4947303	1					
ANR	4948908	Argument	lazyReader		4947303	0					
ANR	4948909	Identifier	lazyReader		4947303	0					
ANR	4948910	Argument	& termE		4947303	1					
ANR	4948911	UnaryOperationExpression	& termE		4947303	0					
ANR	4948912	UnaryOperator	&		4947303	0					
ANR	4948913	Identifier	termE		4947303	1					
ANR	4948914	CompoundStatement		294:46:7530:7530	4947303	1					
ANR	4948915	ExpressionStatement	isOkay = false	434:2:11367:11381	4947303	0	True				
ANR	4948916	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948917	Identifier	isOkay		4947303	0					
ANR	4948918	Identifier	false		4947303	1					
ANR	4948919	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		4947303	91					
ANR	4948920	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	437:6:11393:11427	4947303	0	True				
ANR	4948921	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		4947303	0					
ANR	4948922	UnaryOperator	!		4947303	0					
ANR	4948923	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		4947303	1					
ANR	4948924	Callee	ReadAndTestEvent		4947303	0					
ANR	4948925	Identifier	ReadAndTestEvent		4947303	0					
ANR	4948926	ArgumentList	lazyReader		4947303	1					
ANR	4948927	Argument	lazyReader		4947303	0					
ANR	4948928	Identifier	lazyReader		4947303	0					
ANR	4948929	Argument	NULL		4947303	1					
ANR	4948930	Identifier	NULL		4947303	0					
ANR	4948931	CompoundStatement		298:44:7598:7598	4947303	1					
ANR	4948932	ExpressionStatement	isOkay = false	438:2:11435:11449	4947303	0	True				
ANR	4948933	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4948934	Identifier	isOkay		4947303	0					
ANR	4948935	Identifier	false		4947303	1					
ANR	4948936	ExpressionStatement	unlink ( file5 )	445:1:11585:11600	4947303	92	True				
ANR	4948937	CallExpression	unlink ( file5 )		4947303	0					
ANR	4948938	Callee	unlink		4947303	0					
ANR	4948939	Identifier	unlink		4947303	0					
ANR	4948940	ArgumentList	file5		4947303	1					
ANR	4948941	Argument	file5		4947303	0					
ANR	4948942	Identifier	file5		4947303	0					
ANR	4948943	IdentifierDeclStatement	"WriteUserLog log5 ( ""test"" , file5 , 5 , - 1 , - 1 , false ) ;"	446:1:11603:11654	4947303	93	True				
ANR	4948944	IdentifierDecl	"log5 ( ""test"" , file5 , 5 , - 1 , - 1 , false )"		4947303	0					
ANR	4948945	IdentifierDeclType	WriteUserLog		4947303	0					
ANR	4948946	Identifier	log5		4947303	1					
ANR	4948947	Expression	"""test"" , file5 , 5 , - 1 , - 1 , false"		4947303	2					
ANR	4948948	PrimaryExpression	"""test"""		4947303	0					
ANR	4948949	Expression	"file5 , 5 , - 1 , - 1 , false"		4947303	1					
ANR	4948950	Identifier	file5		4947303	0					
ANR	4948951	Expression	"5 , - 1 , - 1 , false"		4947303	1					
ANR	4948952	PrimaryExpression	5		4947303	0					
ANR	4948953	Expression	"- 1 , - 1 , false"		4947303	1					
ANR	4948954	UnaryOperationExpression	- 1		4947303	0					
ANR	4948955	UnaryOperator	-		4947303	0					
ANR	4948956	PrimaryExpression	1		4947303	1					
ANR	4948957	Expression	"- 1 , false"		4947303	1					
ANR	4948958	UnaryOperationExpression	- 1		4947303	0					
ANR	4948959	UnaryOperator	-		4947303	0					
ANR	4948960	PrimaryExpression	1		4947303	1					
ANR	4948961	Identifier	false		4947303	1					
ANR	4948962	IfStatement	"if ( ! monitorLogFile ( lazyReader , file5 , false ) )"		4947303	94					
ANR	4948963	Condition	"! monitorLogFile ( lazyReader , file5 , false )"	447:5:11661:11703	4947303	0	True				
ANR	4948964	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file5 , false )"		4947303	0					
ANR	4948965	UnaryOperator	!		4947303	0					
ANR	4948966	CallExpression	"monitorLogFile ( lazyReader , file5 , false )"		4947303	1					
ANR	4948967	Callee	monitorLogFile		4947303	0					
ANR	4948968	Identifier	monitorLogFile		4947303	0					
ANR	4948969	ArgumentList	lazyReader		4947303	1					
ANR	4948970	Argument	lazyReader		4947303	0					
ANR	4948971	Identifier	lazyReader		4947303	0					
ANR	4948972	Argument	file5		4947303	1					
ANR	4948973	Identifier	file5		4947303	0					
ANR	4948974	Argument	false		4947303	2					
ANR	4948975	Identifier	false		4947303	0					
ANR	4948976	CompoundStatement		308:51:7874:7874	4947303	1					
ANR	4948977	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	448:2:11711:11762	4947303	0	True				
ANR	4948978	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4948979	Callee	printf		4947303	0					
ANR	4948980	Identifier	printf		4947303	0					
ANR	4948981	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4948982	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948983	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4948984	Argument	__FILE__		4947303	1					
ANR	4948985	Identifier	__FILE__		4947303	0					
ANR	4948986	Argument	__LINE__		4947303	2					
ANR	4948987	Identifier	__LINE__		4947303	0					
ANR	4948988	ExpressionStatement	"printf ( ""error unmonitoring log file %s\\n"" , file5 )"	449:2:11766:11817	4947303	1	True				
ANR	4948989	CallExpression	"printf ( ""error unmonitoring log file %s\\n"" , file5 )"		4947303	0					
ANR	4948990	Callee	printf		4947303	0					
ANR	4948991	Identifier	printf		4947303	0					
ANR	4948992	ArgumentList	"""error unmonitoring log file %s\\n"""		4947303	1					
ANR	4948993	Argument	"""error unmonitoring log file %s\\n"""		4947303	0					
ANR	4948994	PrimaryExpression	"""error unmonitoring log file %s\\n"""		4947303	0					
ANR	4948995	Argument	file5		4947303	1					
ANR	4948996	Identifier	file5		4947303	0					
ANR	4948997	ExpressionStatement	fflush ( stdout )	450:2:11821:11837	4947303	2	True				
ANR	4948998	CallExpression	fflush ( stdout )		4947303	0					
ANR	4948999	Callee	fflush		4947303	0					
ANR	4949000	Identifier	fflush		4947303	0					
ANR	4949001	ArgumentList	stdout		4947303	1					
ANR	4949002	Argument	stdout		4947303	0					
ANR	4949003	Identifier	stdout		4947303	0					
ANR	4949004	ExpressionStatement	isOkay = false	451:2:11841:11855	4947303	3	True				
ANR	4949005	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949006	Identifier	isOkay		4947303	0					
ANR	4949007	Identifier	false		4947303	1					
ANR	4949008	IfStatement	"if ( ! monitorLogFile ( lazyReader , file5a , false ) )"		4947303	95					
ANR	4949009	Condition	"! monitorLogFile ( lazyReader , file5a , false )"	453:5:11865:11908	4947303	0	True				
ANR	4949010	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file5a , false )"		4947303	0					
ANR	4949011	UnaryOperator	!		4947303	0					
ANR	4949012	CallExpression	"monitorLogFile ( lazyReader , file5a , false )"		4947303	1					
ANR	4949013	Callee	monitorLogFile		4947303	0					
ANR	4949014	Identifier	monitorLogFile		4947303	0					
ANR	4949015	ArgumentList	lazyReader		4947303	1					
ANR	4949016	Argument	lazyReader		4947303	0					
ANR	4949017	Identifier	lazyReader		4947303	0					
ANR	4949018	Argument	file5a		4947303	1					
ANR	4949019	Identifier	file5a		4947303	0					
ANR	4949020	Argument	false		4947303	2					
ANR	4949021	Identifier	false		4947303	0					
ANR	4949022	CompoundStatement		314:52:8079:8079	4947303	1					
ANR	4949023	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	454:2:11916:11967	4947303	0	True				
ANR	4949024	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949025	Callee	printf		4947303	0					
ANR	4949026	Identifier	printf		4947303	0					
ANR	4949027	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949028	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949029	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949030	Argument	__FILE__		4947303	1					
ANR	4949031	Identifier	__FILE__		4947303	0					
ANR	4949032	Argument	__LINE__		4947303	2					
ANR	4949033	Identifier	__LINE__		4947303	0					
ANR	4949034	ExpressionStatement	"printf ( ""error monitoring log file %s\\n"" , file5a )"	455:2:11971:12021	4947303	1	True				
ANR	4949035	CallExpression	"printf ( ""error monitoring log file %s\\n"" , file5a )"		4947303	0					
ANR	4949036	Callee	printf		4947303	0					
ANR	4949037	Identifier	printf		4947303	0					
ANR	4949038	ArgumentList	"""error monitoring log file %s\\n"""		4947303	1					
ANR	4949039	Argument	"""error monitoring log file %s\\n"""		4947303	0					
ANR	4949040	PrimaryExpression	"""error monitoring log file %s\\n"""		4947303	0					
ANR	4949041	Argument	file5a		4947303	1					
ANR	4949042	Identifier	file5a		4947303	0					
ANR	4949043	ExpressionStatement	fflush ( stdout )	456:2:12025:12041	4947303	2	True				
ANR	4949044	CallExpression	fflush ( stdout )		4947303	0					
ANR	4949045	Callee	fflush		4947303	0					
ANR	4949046	Identifier	fflush		4947303	0					
ANR	4949047	ArgumentList	stdout		4947303	1					
ANR	4949048	Argument	stdout		4947303	0					
ANR	4949049	Identifier	stdout		4947303	0					
ANR	4949050	ExpressionStatement	isOkay = false	457:2:12045:12059	4947303	3	True				
ANR	4949051	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949052	Identifier	isOkay		4947303	0					
ANR	4949053	Identifier	false		4947303	1					
ANR	4949054	IfStatement	if ( ! log5 . writeEvent ( & subE ) )		4947303	96					
ANR	4949055	Condition	! log5 . writeEvent ( & subE )	460:6:12071:12093	4947303	0	True				
ANR	4949056	UnaryOperationExpression	! log5 . writeEvent ( & subE )		4947303	0					
ANR	4949057	UnaryOperator	!		4947303	0					
ANR	4949058	CallExpression	log5 . writeEvent ( & subE )		4947303	1					
ANR	4949059	Callee	log5 . writeEvent		4947303	0					
ANR	4949060	MemberAccess	log5 . writeEvent		4947303	0					
ANR	4949061	Identifier	log5		4947303	0					
ANR	4949062	Identifier	writeEvent		4947303	1					
ANR	4949063	ArgumentList	& subE		4947303	1					
ANR	4949064	Argument	& subE		4947303	0					
ANR	4949065	UnaryOperationExpression	& subE		4947303	0					
ANR	4949066	UnaryOperator	&		4947303	0					
ANR	4949067	Identifier	subE		4947303	1					
ANR	4949068	CompoundStatement		321:32:8264:8264	4947303	1					
ANR	4949069	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	461:2:12101:12152	4947303	0	True				
ANR	4949070	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949071	Callee	printf		4947303	0					
ANR	4949072	Identifier	printf		4947303	0					
ANR	4949073	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949074	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949075	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949076	Argument	__FILE__		4947303	1					
ANR	4949077	Identifier	__FILE__		4947303	0					
ANR	4949078	Argument	__LINE__		4947303	2					
ANR	4949079	Identifier	__LINE__		4947303	0					
ANR	4949080	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	462:2:12156:12187	4947303	1	True				
ANR	4949081	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4949082	Callee	printf		4947303	0					
ANR	4949083	Identifier	printf		4947303	0					
ANR	4949084	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4949085	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4949086	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4949087	ExpressionStatement	fflush ( stdout )	463:2:12191:12207	4947303	2	True				
ANR	4949088	CallExpression	fflush ( stdout )		4947303	0					
ANR	4949089	Callee	fflush		4947303	0					
ANR	4949090	Identifier	fflush		4947303	0					
ANR	4949091	ArgumentList	stdout		4947303	1					
ANR	4949092	Argument	stdout		4947303	0					
ANR	4949093	Identifier	stdout		4947303	0					
ANR	4949094	ExpressionStatement	isOkay = false	464:2:12211:12225	4947303	3	True				
ANR	4949095	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949096	Identifier	isOkay		4947303	0					
ANR	4949097	Identifier	false		4947303	1					
ANR	4949098	IdentifierDeclStatement	ExecuteEvent execE ;	467:1:12232:12250	4947303	97	True				
ANR	4949099	IdentifierDecl	execE		4947303	0					
ANR	4949100	IdentifierDeclType	ExecuteEvent		4947303	0					
ANR	4949101	Identifier	execE		4947303	1					
ANR	4949102	ExpressionStatement	"strcpy ( execE . executeHost , ""<128.105.666.99:12345>"" )"	468:1:12253:12304	4947303	98	True				
ANR	4949103	CallExpression	"strcpy ( execE . executeHost , ""<128.105.666.99:12345>"" )"		4947303	0					
ANR	4949104	Callee	strcpy		4947303	0					
ANR	4949105	Identifier	strcpy		4947303	0					
ANR	4949106	ArgumentList	execE . executeHost		4947303	1					
ANR	4949107	Argument	execE . executeHost		4947303	0					
ANR	4949108	MemberAccess	execE . executeHost		4947303	0					
ANR	4949109	Identifier	execE		4947303	0					
ANR	4949110	Identifier	executeHost		4947303	1					
ANR	4949111	Argument	"""<128.105.666.99:12345>"""		4947303	1					
ANR	4949112	PrimaryExpression	"""<128.105.666.99:12345>"""		4947303	0					
ANR	4949113	IfStatement	if ( ! log5 . writeEvent ( & execE ) )		4947303	99					
ANR	4949114	Condition	! log5 . writeEvent ( & execE )	469:6:12312:12335	4947303	0	True				
ANR	4949115	UnaryOperationExpression	! log5 . writeEvent ( & execE )		4947303	0					
ANR	4949116	UnaryOperator	!		4947303	0					
ANR	4949117	CallExpression	log5 . writeEvent ( & execE )		4947303	1					
ANR	4949118	Callee	log5 . writeEvent		4947303	0					
ANR	4949119	MemberAccess	log5 . writeEvent		4947303	0					
ANR	4949120	Identifier	log5		4947303	0					
ANR	4949121	Identifier	writeEvent		4947303	1					
ANR	4949122	ArgumentList	& execE		4947303	1					
ANR	4949123	Argument	& execE		4947303	0					
ANR	4949124	UnaryOperationExpression	& execE		4947303	0					
ANR	4949125	UnaryOperator	&		4947303	0					
ANR	4949126	Identifier	execE		4947303	1					
ANR	4949127	CompoundStatement		330:33:8506:8506	4947303	1					
ANR	4949128	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	470:2:12343:12394	4947303	0	True				
ANR	4949129	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949130	Callee	printf		4947303	0					
ANR	4949131	Identifier	printf		4947303	0					
ANR	4949132	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949133	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949134	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949135	Argument	__FILE__		4947303	1					
ANR	4949136	Identifier	__FILE__		4947303	0					
ANR	4949137	Argument	__LINE__		4947303	2					
ANR	4949138	Identifier	__LINE__		4947303	0					
ANR	4949139	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	471:2:12398:12429	4947303	1	True				
ANR	4949140	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4949141	Callee	printf		4947303	0					
ANR	4949142	Identifier	printf		4947303	0					
ANR	4949143	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4949144	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4949145	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4949146	ExpressionStatement	fflush ( stdout )	472:2:12433:12449	4947303	2	True				
ANR	4949147	CallExpression	fflush ( stdout )		4947303	0					
ANR	4949148	Callee	fflush		4947303	0					
ANR	4949149	Identifier	fflush		4947303	0					
ANR	4949150	ArgumentList	stdout		4947303	1					
ANR	4949151	Argument	stdout		4947303	0					
ANR	4949152	Identifier	stdout		4947303	0					
ANR	4949153	ExpressionStatement	isOkay = false	473:2:12453:12467	4947303	3	True				
ANR	4949154	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949155	Identifier	isOkay		4947303	0					
ANR	4949156	Identifier	false		4947303	1					
ANR	4949157	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & subE ) )"		4947303	100					
ANR	4949158	Condition	"! ReadAndTestEvent ( lazyReader , & subE )"	476:6:12479:12514	4947303	0	True				
ANR	4949159	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & subE )"		4947303	0					
ANR	4949160	UnaryOperator	!		4947303	0					
ANR	4949161	CallExpression	"ReadAndTestEvent ( lazyReader , & subE )"		4947303	1					
ANR	4949162	Callee	ReadAndTestEvent		4947303	0					
ANR	4949163	Identifier	ReadAndTestEvent		4947303	0					
ANR	4949164	ArgumentList	lazyReader		4947303	1					
ANR	4949165	Argument	lazyReader		4947303	0					
ANR	4949166	Identifier	lazyReader		4947303	0					
ANR	4949167	Argument	& subE		4947303	1					
ANR	4949168	UnaryOperationExpression	& subE		4947303	0					
ANR	4949169	UnaryOperator	&		4947303	0					
ANR	4949170	Identifier	subE		4947303	1					
ANR	4949171	CompoundStatement		337:45:8685:8685	4947303	1					
ANR	4949172	ExpressionStatement	isOkay = false	477:2:12522:12536	4947303	0	True				
ANR	4949173	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949174	Identifier	isOkay		4947303	0					
ANR	4949175	Identifier	false		4947303	1					
ANR	4949176	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & execE ) )"		4947303	101					
ANR	4949177	Condition	"! ReadAndTestEvent ( lazyReader , & execE )"	479:6:12547:12583	4947303	0	True				
ANR	4949178	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & execE )"		4947303	0					
ANR	4949179	UnaryOperator	!		4947303	0					
ANR	4949180	CallExpression	"ReadAndTestEvent ( lazyReader , & execE )"		4947303	1					
ANR	4949181	Callee	ReadAndTestEvent		4947303	0					
ANR	4949182	Identifier	ReadAndTestEvent		4947303	0					
ANR	4949183	ArgumentList	lazyReader		4947303	1					
ANR	4949184	Argument	lazyReader		4947303	0					
ANR	4949185	Identifier	lazyReader		4947303	0					
ANR	4949186	Argument	& execE		4947303	1					
ANR	4949187	UnaryOperationExpression	& execE		4947303	0					
ANR	4949188	UnaryOperator	&		4947303	0					
ANR	4949189	Identifier	execE		4947303	1					
ANR	4949190	CompoundStatement		340:46:8754:8754	4947303	1					
ANR	4949191	ExpressionStatement	isOkay = false	480:2:12591:12605	4947303	0	True				
ANR	4949192	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949193	Identifier	isOkay		4947303	0					
ANR	4949194	Identifier	false		4947303	1					
ANR	4949195	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		4947303	102					
ANR	4949196	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	482:6:12616:12650	4947303	0	True				
ANR	4949197	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		4947303	0					
ANR	4949198	UnaryOperator	!		4947303	0					
ANR	4949199	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		4947303	1					
ANR	4949200	Callee	ReadAndTestEvent		4947303	0					
ANR	4949201	Identifier	ReadAndTestEvent		4947303	0					
ANR	4949202	ArgumentList	lazyReader		4947303	1					
ANR	4949203	Argument	lazyReader		4947303	0					
ANR	4949204	Identifier	lazyReader		4947303	0					
ANR	4949205	Argument	NULL		4947303	1					
ANR	4949206	Identifier	NULL		4947303	0					
ANR	4949207	CompoundStatement		343:44:8821:8821	4947303	1					
ANR	4949208	ExpressionStatement	isOkay = false	483:2:12658:12672	4947303	0	True				
ANR	4949209	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949210	Identifier	isOkay		4947303	0					
ANR	4949211	Identifier	false		4947303	1					
ANR	4949212	IdentifierDeclStatement	GenericEvent genE ;	486:1:12679:12696	4947303	103	True				
ANR	4949213	IdentifierDecl	genE		4947303	0					
ANR	4949214	IdentifierDeclType	GenericEvent		4947303	0					
ANR	4949215	Identifier	genE		4947303	1					
ANR	4949216	ExpressionStatement	"strcpy ( genE . info , ""job type: transfer"" )"	487:1:12699:12738	4947303	104	True				
ANR	4949217	CallExpression	"strcpy ( genE . info , ""job type: transfer"" )"		4947303	0					
ANR	4949218	Callee	strcpy		4947303	0					
ANR	4949219	Identifier	strcpy		4947303	0					
ANR	4949220	ArgumentList	genE . info		4947303	1					
ANR	4949221	Argument	genE . info		4947303	0					
ANR	4949222	MemberAccess	genE . info		4947303	0					
ANR	4949223	Identifier	genE		4947303	0					
ANR	4949224	Identifier	info		4947303	1					
ANR	4949225	Argument	"""job type: transfer"""		4947303	1					
ANR	4949226	PrimaryExpression	"""job type: transfer"""		4947303	0					
ANR	4949227	IfStatement	if ( ! log5 . writeEvent ( & genE ) )		4947303	105					
ANR	4949228	Condition	! log5 . writeEvent ( & genE )	488:6:12746:12768	4947303	0	True				
ANR	4949229	UnaryOperationExpression	! log5 . writeEvent ( & genE )		4947303	0					
ANR	4949230	UnaryOperator	!		4947303	0					
ANR	4949231	CallExpression	log5 . writeEvent ( & genE )		4947303	1					
ANR	4949232	Callee	log5 . writeEvent		4947303	0					
ANR	4949233	MemberAccess	log5 . writeEvent		4947303	0					
ANR	4949234	Identifier	log5		4947303	0					
ANR	4949235	Identifier	writeEvent		4947303	1					
ANR	4949236	ArgumentList	& genE		4947303	1					
ANR	4949237	Argument	& genE		4947303	0					
ANR	4949238	UnaryOperationExpression	& genE		4947303	0					
ANR	4949239	UnaryOperator	&		4947303	0					
ANR	4949240	Identifier	genE		4947303	1					
ANR	4949241	CompoundStatement		349:32:8939:8939	4947303	1					
ANR	4949242	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	489:2:12776:12827	4947303	0	True				
ANR	4949243	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949244	Callee	printf		4947303	0					
ANR	4949245	Identifier	printf		4947303	0					
ANR	4949246	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949247	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949248	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949249	Argument	__FILE__		4947303	1					
ANR	4949250	Identifier	__FILE__		4947303	0					
ANR	4949251	Argument	__LINE__		4947303	2					
ANR	4949252	Identifier	__LINE__		4947303	0					
ANR	4949253	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	490:2:12831:12862	4947303	1	True				
ANR	4949254	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4949255	Callee	printf		4947303	0					
ANR	4949256	Identifier	printf		4947303	0					
ANR	4949257	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4949258	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4949259	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4949260	ExpressionStatement	fflush ( stdout )	491:2:12866:12882	4947303	2	True				
ANR	4949261	CallExpression	fflush ( stdout )		4947303	0					
ANR	4949262	Callee	fflush		4947303	0					
ANR	4949263	Identifier	fflush		4947303	0					
ANR	4949264	ArgumentList	stdout		4947303	1					
ANR	4949265	Argument	stdout		4947303	0					
ANR	4949266	Identifier	stdout		4947303	0					
ANR	4949267	ExpressionStatement	isOkay = false	492:2:12886:12900	4947303	3	True				
ANR	4949268	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949269	Identifier	isOkay		4947303	0					
ANR	4949270	Identifier	false		4947303	1					
ANR	4949271	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & genE ) )"		4947303	106					
ANR	4949272	Condition	"! ReadAndTestEvent ( lazyReader , & genE )"	494:6:12911:12946	4947303	0	True				
ANR	4949273	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & genE )"		4947303	0					
ANR	4949274	UnaryOperator	!		4947303	0					
ANR	4949275	CallExpression	"ReadAndTestEvent ( lazyReader , & genE )"		4947303	1					
ANR	4949276	Callee	ReadAndTestEvent		4947303	0					
ANR	4949277	Identifier	ReadAndTestEvent		4947303	0					
ANR	4949278	ArgumentList	lazyReader		4947303	1					
ANR	4949279	Argument	lazyReader		4947303	0					
ANR	4949280	Identifier	lazyReader		4947303	0					
ANR	4949281	Argument	& genE		4947303	1					
ANR	4949282	UnaryOperationExpression	& genE		4947303	0					
ANR	4949283	UnaryOperator	&		4947303	0					
ANR	4949284	Identifier	genE		4947303	1					
ANR	4949285	CompoundStatement		355:45:9117:9117	4947303	1					
ANR	4949286	ExpressionStatement	isOkay = false	495:2:12954:12968	4947303	0	True				
ANR	4949287	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949288	Identifier	isOkay		4947303	0					
ANR	4949289	Identifier	false		4947303	1					
ANR	4949290	ExpressionStatement	"strcpy ( genE . info , ""src_url: file:/dev/null"" )"	498:1:12975:13019	4947303	107	True				
ANR	4949291	CallExpression	"strcpy ( genE . info , ""src_url: file:/dev/null"" )"		4947303	0					
ANR	4949292	Callee	strcpy		4947303	0					
ANR	4949293	Identifier	strcpy		4947303	0					
ANR	4949294	ArgumentList	genE . info		4947303	1					
ANR	4949295	Argument	genE . info		4947303	0					
ANR	4949296	MemberAccess	genE . info		4947303	0					
ANR	4949297	Identifier	genE		4947303	0					
ANR	4949298	Identifier	info		4947303	1					
ANR	4949299	Argument	"""src_url: file:/dev/null"""		4947303	1					
ANR	4949300	PrimaryExpression	"""src_url: file:/dev/null"""		4947303	0					
ANR	4949301	IfStatement	if ( ! log5 . writeEvent ( & genE ) )		4947303	108					
ANR	4949302	Condition	! log5 . writeEvent ( & genE )	499:6:13027:13049	4947303	0	True				
ANR	4949303	UnaryOperationExpression	! log5 . writeEvent ( & genE )		4947303	0					
ANR	4949304	UnaryOperator	!		4947303	0					
ANR	4949305	CallExpression	log5 . writeEvent ( & genE )		4947303	1					
ANR	4949306	Callee	log5 . writeEvent		4947303	0					
ANR	4949307	MemberAccess	log5 . writeEvent		4947303	0					
ANR	4949308	Identifier	log5		4947303	0					
ANR	4949309	Identifier	writeEvent		4947303	1					
ANR	4949310	ArgumentList	& genE		4947303	1					
ANR	4949311	Argument	& genE		4947303	0					
ANR	4949312	UnaryOperationExpression	& genE		4947303	0					
ANR	4949313	UnaryOperator	&		4947303	0					
ANR	4949314	Identifier	genE		4947303	1					
ANR	4949315	CompoundStatement		360:32:9220:9220	4947303	1					
ANR	4949316	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	500:2:13057:13108	4947303	0	True				
ANR	4949317	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949318	Callee	printf		4947303	0					
ANR	4949319	Identifier	printf		4947303	0					
ANR	4949320	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949321	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949322	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949323	Argument	__FILE__		4947303	1					
ANR	4949324	Identifier	__FILE__		4947303	0					
ANR	4949325	Argument	__LINE__		4947303	2					
ANR	4949326	Identifier	__LINE__		4947303	0					
ANR	4949327	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	501:2:13112:13143	4947303	1	True				
ANR	4949328	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4949329	Callee	printf		4947303	0					
ANR	4949330	Identifier	printf		4947303	0					
ANR	4949331	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4949332	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4949333	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4949334	ExpressionStatement	fflush ( stdout )	502:2:13147:13163	4947303	2	True				
ANR	4949335	CallExpression	fflush ( stdout )		4947303	0					
ANR	4949336	Callee	fflush		4947303	0					
ANR	4949337	Identifier	fflush		4947303	0					
ANR	4949338	ArgumentList	stdout		4947303	1					
ANR	4949339	Argument	stdout		4947303	0					
ANR	4949340	Identifier	stdout		4947303	0					
ANR	4949341	ExpressionStatement	isOkay = false	503:2:13167:13181	4947303	3	True				
ANR	4949342	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949343	Identifier	isOkay		4947303	0					
ANR	4949344	Identifier	false		4947303	1					
ANR	4949345	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & genE ) )"		4947303	109					
ANR	4949346	Condition	"! ReadAndTestEvent ( lazyReader , & genE )"	505:6:13192:13227	4947303	0	True				
ANR	4949347	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & genE )"		4947303	0					
ANR	4949348	UnaryOperator	!		4947303	0					
ANR	4949349	CallExpression	"ReadAndTestEvent ( lazyReader , & genE )"		4947303	1					
ANR	4949350	Callee	ReadAndTestEvent		4947303	0					
ANR	4949351	Identifier	ReadAndTestEvent		4947303	0					
ANR	4949352	ArgumentList	lazyReader		4947303	1					
ANR	4949353	Argument	lazyReader		4947303	0					
ANR	4949354	Identifier	lazyReader		4947303	0					
ANR	4949355	Argument	& genE		4947303	1					
ANR	4949356	UnaryOperationExpression	& genE		4947303	0					
ANR	4949357	UnaryOperator	&		4947303	0					
ANR	4949358	Identifier	genE		4947303	1					
ANR	4949359	CompoundStatement		366:45:9398:9398	4947303	1					
ANR	4949360	ExpressionStatement	isOkay = false	506:2:13235:13249	4947303	0	True				
ANR	4949361	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949362	Identifier	isOkay		4947303	0					
ANR	4949363	Identifier	false		4947303	1					
ANR	4949364	ExpressionStatement	"strcpy ( genE . info , ""dest_url: file:/dev/null"" )"	509:1:13256:13301	4947303	110	True				
ANR	4949365	CallExpression	"strcpy ( genE . info , ""dest_url: file:/dev/null"" )"		4947303	0					
ANR	4949366	Callee	strcpy		4947303	0					
ANR	4949367	Identifier	strcpy		4947303	0					
ANR	4949368	ArgumentList	genE . info		4947303	1					
ANR	4949369	Argument	genE . info		4947303	0					
ANR	4949370	MemberAccess	genE . info		4947303	0					
ANR	4949371	Identifier	genE		4947303	0					
ANR	4949372	Identifier	info		4947303	1					
ANR	4949373	Argument	"""dest_url: file:/dev/null"""		4947303	1					
ANR	4949374	PrimaryExpression	"""dest_url: file:/dev/null"""		4947303	0					
ANR	4949375	IfStatement	if ( ! log5 . writeEvent ( & genE ) )		4947303	111					
ANR	4949376	Condition	! log5 . writeEvent ( & genE )	510:6:13309:13331	4947303	0	True				
ANR	4949377	UnaryOperationExpression	! log5 . writeEvent ( & genE )		4947303	0					
ANR	4949378	UnaryOperator	!		4947303	0					
ANR	4949379	CallExpression	log5 . writeEvent ( & genE )		4947303	1					
ANR	4949380	Callee	log5 . writeEvent		4947303	0					
ANR	4949381	MemberAccess	log5 . writeEvent		4947303	0					
ANR	4949382	Identifier	log5		4947303	0					
ANR	4949383	Identifier	writeEvent		4947303	1					
ANR	4949384	ArgumentList	& genE		4947303	1					
ANR	4949385	Argument	& genE		4947303	0					
ANR	4949386	UnaryOperationExpression	& genE		4947303	0					
ANR	4949387	UnaryOperator	&		4947303	0					
ANR	4949388	Identifier	genE		4947303	1					
ANR	4949389	CompoundStatement		371:32:9502:9502	4947303	1					
ANR	4949390	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	511:2:13339:13390	4947303	0	True				
ANR	4949391	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949392	Callee	printf		4947303	0					
ANR	4949393	Identifier	printf		4947303	0					
ANR	4949394	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949395	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949396	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949397	Argument	__FILE__		4947303	1					
ANR	4949398	Identifier	__FILE__		4947303	0					
ANR	4949399	Argument	__LINE__		4947303	2					
ANR	4949400	Identifier	__LINE__		4947303	0					
ANR	4949401	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	512:2:13394:13425	4947303	1	True				
ANR	4949402	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4949403	Callee	printf		4947303	0					
ANR	4949404	Identifier	printf		4947303	0					
ANR	4949405	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4949406	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4949407	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4949408	ExpressionStatement	fflush ( stdout )	513:2:13429:13445	4947303	2	True				
ANR	4949409	CallExpression	fflush ( stdout )		4947303	0					
ANR	4949410	Callee	fflush		4947303	0					
ANR	4949411	Identifier	fflush		4947303	0					
ANR	4949412	ArgumentList	stdout		4947303	1					
ANR	4949413	Argument	stdout		4947303	0					
ANR	4949414	Identifier	stdout		4947303	0					
ANR	4949415	ExpressionStatement	isOkay = false	514:2:13449:13463	4947303	3	True				
ANR	4949416	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949417	Identifier	isOkay		4947303	0					
ANR	4949418	Identifier	false		4947303	1					
ANR	4949419	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & genE ) )"		4947303	112					
ANR	4949420	Condition	"! ReadAndTestEvent ( lazyReader , & genE )"	516:6:13474:13509	4947303	0	True				
ANR	4949421	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & genE )"		4947303	0					
ANR	4949422	UnaryOperator	!		4947303	0					
ANR	4949423	CallExpression	"ReadAndTestEvent ( lazyReader , & genE )"		4947303	1					
ANR	4949424	Callee	ReadAndTestEvent		4947303	0					
ANR	4949425	Identifier	ReadAndTestEvent		4947303	0					
ANR	4949426	ArgumentList	lazyReader		4947303	1					
ANR	4949427	Argument	lazyReader		4947303	0					
ANR	4949428	Identifier	lazyReader		4947303	0					
ANR	4949429	Argument	& genE		4947303	1					
ANR	4949430	UnaryOperationExpression	& genE		4947303	0					
ANR	4949431	UnaryOperator	&		4947303	0					
ANR	4949432	Identifier	genE		4947303	1					
ANR	4949433	CompoundStatement		377:45:9680:9680	4947303	1					
ANR	4949434	ExpressionStatement	isOkay = false	517:2:13517:13531	4947303	0	True				
ANR	4949435	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949436	Identifier	isOkay		4947303	0					
ANR	4949437	Identifier	false		4947303	1					
ANR	4949438	IfStatement	if ( ! log5 . writeEvent ( & termE ) )		4947303	113					
ANR	4949439	Condition	! log5 . writeEvent ( & termE )	520:6:13543:13566	4947303	0	True				
ANR	4949440	UnaryOperationExpression	! log5 . writeEvent ( & termE )		4947303	0					
ANR	4949441	UnaryOperator	!		4947303	0					
ANR	4949442	CallExpression	log5 . writeEvent ( & termE )		4947303	1					
ANR	4949443	Callee	log5 . writeEvent		4947303	0					
ANR	4949444	MemberAccess	log5 . writeEvent		4947303	0					
ANR	4949445	Identifier	log5		4947303	0					
ANR	4949446	Identifier	writeEvent		4947303	1					
ANR	4949447	ArgumentList	& termE		4947303	1					
ANR	4949448	Argument	& termE		4947303	0					
ANR	4949449	UnaryOperationExpression	& termE		4947303	0					
ANR	4949450	UnaryOperator	&		4947303	0					
ANR	4949451	Identifier	termE		4947303	1					
ANR	4949452	CompoundStatement		381:33:9737:9737	4947303	1					
ANR	4949453	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	521:2:13574:13625	4947303	0	True				
ANR	4949454	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949455	Callee	printf		4947303	0					
ANR	4949456	Identifier	printf		4947303	0					
ANR	4949457	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949458	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949459	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949460	Argument	__FILE__		4947303	1					
ANR	4949461	Identifier	__FILE__		4947303	0					
ANR	4949462	Argument	__LINE__		4947303	2					
ANR	4949463	Identifier	__LINE__		4947303	0					
ANR	4949464	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	522:2:13629:13660	4947303	1	True				
ANR	4949465	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4949466	Callee	printf		4947303	0					
ANR	4949467	Identifier	printf		4947303	0					
ANR	4949468	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4949469	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4949470	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4949471	ExpressionStatement	fflush ( stdout )	523:2:13664:13680	4947303	2	True				
ANR	4949472	CallExpression	fflush ( stdout )		4947303	0					
ANR	4949473	Callee	fflush		4947303	0					
ANR	4949474	Identifier	fflush		4947303	0					
ANR	4949475	ArgumentList	stdout		4947303	1					
ANR	4949476	Argument	stdout		4947303	0					
ANR	4949477	Identifier	stdout		4947303	0					
ANR	4949478	ExpressionStatement	isOkay = false	524:2:13684:13698	4947303	3	True				
ANR	4949479	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949480	Identifier	isOkay		4947303	0					
ANR	4949481	Identifier	false		4947303	1					
ANR	4949482	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & termE ) )"		4947303	114					
ANR	4949483	Condition	"! ReadAndTestEvent ( lazyReader , & termE )"	526:6:13709:13745	4947303	0	True				
ANR	4949484	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & termE )"		4947303	0					
ANR	4949485	UnaryOperator	!		4947303	0					
ANR	4949486	CallExpression	"ReadAndTestEvent ( lazyReader , & termE )"		4947303	1					
ANR	4949487	Callee	ReadAndTestEvent		4947303	0					
ANR	4949488	Identifier	ReadAndTestEvent		4947303	0					
ANR	4949489	ArgumentList	lazyReader		4947303	1					
ANR	4949490	Argument	lazyReader		4947303	0					
ANR	4949491	Identifier	lazyReader		4947303	0					
ANR	4949492	Argument	& termE		4947303	1					
ANR	4949493	UnaryOperationExpression	& termE		4947303	0					
ANR	4949494	UnaryOperator	&		4947303	0					
ANR	4949495	Identifier	termE		4947303	1					
ANR	4949496	CompoundStatement		387:46:9916:9916	4947303	1					
ANR	4949497	ExpressionStatement	isOkay = false	527:2:13753:13767	4947303	0	True				
ANR	4949498	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949499	Identifier	isOkay		4947303	0					
ANR	4949500	Identifier	false		4947303	1					
ANR	4949501	IfStatement	"if ( ! unmonitorLogFile ( lazyReader , file5 ) )"		4947303	115					
ANR	4949502	Condition	"! unmonitorLogFile ( lazyReader , file5 )"	534:5:13976:14013	4947303	0	True				
ANR	4949503	UnaryOperationExpression	"! unmonitorLogFile ( lazyReader , file5 )"		4947303	0					
ANR	4949504	UnaryOperator	!		4947303	0					
ANR	4949505	CallExpression	"unmonitorLogFile ( lazyReader , file5 )"		4947303	1					
ANR	4949506	Callee	unmonitorLogFile		4947303	0					
ANR	4949507	Identifier	unmonitorLogFile		4947303	0					
ANR	4949508	ArgumentList	lazyReader		4947303	1					
ANR	4949509	Argument	lazyReader		4947303	0					
ANR	4949510	Identifier	lazyReader		4947303	0					
ANR	4949511	Argument	file5		4947303	1					
ANR	4949512	Identifier	file5		4947303	0					
ANR	4949513	CompoundStatement		395:46:10184:10184	4947303	1					
ANR	4949514	ExpressionStatement	isOkay = false	535:2:14021:14035	4947303	0	True				
ANR	4949515	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949516	Identifier	isOkay		4947303	0					
ANR	4949517	Identifier	false		4947303	1					
ANR	4949518	IfStatement	"if ( ! unmonitorLogFile ( lazyReader , file5a ) )"		4947303	116					
ANR	4949519	Condition	"! unmonitorLogFile ( lazyReader , file5a )"	538:5:14143:14181	4947303	0	True				
ANR	4949520	UnaryOperationExpression	"! unmonitorLogFile ( lazyReader , file5a )"		4947303	0					
ANR	4949521	UnaryOperator	!		4947303	0					
ANR	4949522	CallExpression	"unmonitorLogFile ( lazyReader , file5a )"		4947303	1					
ANR	4949523	Callee	unmonitorLogFile		4947303	0					
ANR	4949524	Identifier	unmonitorLogFile		4947303	0					
ANR	4949525	ArgumentList	lazyReader		4947303	1					
ANR	4949526	Argument	lazyReader		4947303	0					
ANR	4949527	Identifier	lazyReader		4947303	0					
ANR	4949528	Argument	file5a		4947303	1					
ANR	4949529	Identifier	file5a		4947303	0					
ANR	4949530	CompoundStatement		399:47:10352:10352	4947303	1					
ANR	4949531	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	539:2:14189:14240	4947303	0	True				
ANR	4949532	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949533	Callee	printf		4947303	0					
ANR	4949534	Identifier	printf		4947303	0					
ANR	4949535	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949536	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949537	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949538	Argument	__FILE__		4947303	1					
ANR	4949539	Identifier	__FILE__		4947303	0					
ANR	4949540	Argument	__LINE__		4947303	2					
ANR	4949541	Identifier	__LINE__		4947303	0					
ANR	4949542	ExpressionStatement	"printf ( ""error unmonitoring file %s\\n"" , file5a )"	540:2:14244:14292	4947303	1	True				
ANR	4949543	CallExpression	"printf ( ""error unmonitoring file %s\\n"" , file5a )"		4947303	0					
ANR	4949544	Callee	printf		4947303	0					
ANR	4949545	Identifier	printf		4947303	0					
ANR	4949546	ArgumentList	"""error unmonitoring file %s\\n"""		4947303	1					
ANR	4949547	Argument	"""error unmonitoring file %s\\n"""		4947303	0					
ANR	4949548	PrimaryExpression	"""error unmonitoring file %s\\n"""		4947303	0					
ANR	4949549	Argument	file5a		4947303	1					
ANR	4949550	Identifier	file5a		4947303	0					
ANR	4949551	ExpressionStatement	fflush ( stdout )	541:2:14296:14312	4947303	2	True				
ANR	4949552	CallExpression	fflush ( stdout )		4947303	0					
ANR	4949553	Callee	fflush		4947303	0					
ANR	4949554	Identifier	fflush		4947303	0					
ANR	4949555	ArgumentList	stdout		4947303	1					
ANR	4949556	Argument	stdout		4947303	0					
ANR	4949557	Identifier	stdout		4947303	0					
ANR	4949558	ExpressionStatement	isOkay = false	542:2:14316:14330	4947303	3	True				
ANR	4949559	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949560	Identifier	isOkay		4947303	0					
ANR	4949561	Identifier	false		4947303	1					
ANR	4949562	IfStatement	"if ( ! log5 . initialize ( 6 , 0 , 0 , NULL ) )"		4947303	117					
ANR	4949563	Condition	"! log5 . initialize ( 6 , 0 , 0 , NULL )"	545:6:14342:14374	4947303	0	True				
ANR	4949564	UnaryOperationExpression	"! log5 . initialize ( 6 , 0 , 0 , NULL )"		4947303	0					
ANR	4949565	UnaryOperator	!		4947303	0					
ANR	4949566	CallExpression	"log5 . initialize ( 6 , 0 , 0 , NULL )"		4947303	1					
ANR	4949567	Callee	log5 . initialize		4947303	0					
ANR	4949568	MemberAccess	log5 . initialize		4947303	0					
ANR	4949569	Identifier	log5		4947303	0					
ANR	4949570	Identifier	initialize		4947303	1					
ANR	4949571	ArgumentList	6		4947303	1					
ANR	4949572	Argument	6		4947303	0					
ANR	4949573	PrimaryExpression	6		4947303	0					
ANR	4949574	Argument	0		4947303	1					
ANR	4949575	PrimaryExpression	0		4947303	0					
ANR	4949576	Argument	0		4947303	2					
ANR	4949577	PrimaryExpression	0		4947303	0					
ANR	4949578	Argument	NULL		4947303	3					
ANR	4949579	Identifier	NULL		4947303	0					
ANR	4949580	CompoundStatement		406:41:10544:10544	4947303	1					
ANR	4949581	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	546:2:14381:14432	4947303	0	True				
ANR	4949582	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949583	Callee	printf		4947303	0					
ANR	4949584	Identifier	printf		4947303	0					
ANR	4949585	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949586	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949587	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949588	Argument	__FILE__		4947303	1					
ANR	4949589	Identifier	__FILE__		4947303	0					
ANR	4949590	Argument	__LINE__		4947303	2					
ANR	4949591	Identifier	__LINE__		4947303	0					
ANR	4949592	ExpressionStatement	"printf ( ""error re-initializing log5\\n"" )"	547:2:14436:14476	4947303	1	True				
ANR	4949593	CallExpression	"printf ( ""error re-initializing log5\\n"" )"		4947303	0					
ANR	4949594	Callee	printf		4947303	0					
ANR	4949595	Identifier	printf		4947303	0					
ANR	4949596	ArgumentList	"""error re-initializing log5\\n"""		4947303	1					
ANR	4949597	Argument	"""error re-initializing log5\\n"""		4947303	0					
ANR	4949598	PrimaryExpression	"""error re-initializing log5\\n"""		4947303	0					
ANR	4949599	ExpressionStatement	fflush ( stdout )	548:2:14480:14496	4947303	2	True				
ANR	4949600	CallExpression	fflush ( stdout )		4947303	0					
ANR	4949601	Callee	fflush		4947303	0					
ANR	4949602	Identifier	fflush		4947303	0					
ANR	4949603	ArgumentList	stdout		4947303	1					
ANR	4949604	Argument	stdout		4947303	0					
ANR	4949605	Identifier	stdout		4947303	0					
ANR	4949606	ExpressionStatement	isOkay = false	549:2:14500:14514	4947303	3	True				
ANR	4949607	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949608	Identifier	isOkay		4947303	0					
ANR	4949609	Identifier	false		4947303	1					
ANR	4949610	IfStatement	if ( ! log5 . writeEvent ( & subE ) )		4947303	118					
ANR	4949611	Condition	! log5 . writeEvent ( & subE )	552:6:14526:14548	4947303	0	True				
ANR	4949612	UnaryOperationExpression	! log5 . writeEvent ( & subE )		4947303	0					
ANR	4949613	UnaryOperator	!		4947303	0					
ANR	4949614	CallExpression	log5 . writeEvent ( & subE )		4947303	1					
ANR	4949615	Callee	log5 . writeEvent		4947303	0					
ANR	4949616	MemberAccess	log5 . writeEvent		4947303	0					
ANR	4949617	Identifier	log5		4947303	0					
ANR	4949618	Identifier	writeEvent		4947303	1					
ANR	4949619	ArgumentList	& subE		4947303	1					
ANR	4949620	Argument	& subE		4947303	0					
ANR	4949621	UnaryOperationExpression	& subE		4947303	0					
ANR	4949622	UnaryOperator	&		4947303	0					
ANR	4949623	Identifier	subE		4947303	1					
ANR	4949624	CompoundStatement		413:32:10719:10719	4947303	1					
ANR	4949625	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	553:2:14556:14607	4947303	0	True				
ANR	4949626	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949627	Callee	printf		4947303	0					
ANR	4949628	Identifier	printf		4947303	0					
ANR	4949629	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949630	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949631	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949632	Argument	__FILE__		4947303	1					
ANR	4949633	Identifier	__FILE__		4947303	0					
ANR	4949634	Argument	__LINE__		4947303	2					
ANR	4949635	Identifier	__LINE__		4947303	0					
ANR	4949636	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	554:2:14611:14642	4947303	1	True				
ANR	4949637	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4949638	Callee	printf		4947303	0					
ANR	4949639	Identifier	printf		4947303	0					
ANR	4949640	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4949641	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4949642	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4949643	ExpressionStatement	fflush ( stdout )	555:2:14646:14662	4947303	2	True				
ANR	4949644	CallExpression	fflush ( stdout )		4947303	0					
ANR	4949645	Callee	fflush		4947303	0					
ANR	4949646	Identifier	fflush		4947303	0					
ANR	4949647	ArgumentList	stdout		4947303	1					
ANR	4949648	Argument	stdout		4947303	0					
ANR	4949649	Identifier	stdout		4947303	0					
ANR	4949650	ExpressionStatement	isOkay = false	556:2:14666:14680	4947303	3	True				
ANR	4949651	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949652	Identifier	isOkay		4947303	0					
ANR	4949653	Identifier	false		4947303	1					
ANR	4949654	ExpressionStatement	"strcpy ( execE . executeHost , ""<128.105.777.99:12345>"" )"	559:1:14687:14738	4947303	119	True				
ANR	4949655	CallExpression	"strcpy ( execE . executeHost , ""<128.105.777.99:12345>"" )"		4947303	0					
ANR	4949656	Callee	strcpy		4947303	0					
ANR	4949657	Identifier	strcpy		4947303	0					
ANR	4949658	ArgumentList	execE . executeHost		4947303	1					
ANR	4949659	Argument	execE . executeHost		4947303	0					
ANR	4949660	MemberAccess	execE . executeHost		4947303	0					
ANR	4949661	Identifier	execE		4947303	0					
ANR	4949662	Identifier	executeHost		4947303	1					
ANR	4949663	Argument	"""<128.105.777.99:12345>"""		4947303	1					
ANR	4949664	PrimaryExpression	"""<128.105.777.99:12345>"""		4947303	0					
ANR	4949665	IfStatement	if ( ! log5 . writeEvent ( & execE ) )		4947303	120					
ANR	4949666	Condition	! log5 . writeEvent ( & execE )	560:6:14746:14769	4947303	0	True				
ANR	4949667	UnaryOperationExpression	! log5 . writeEvent ( & execE )		4947303	0					
ANR	4949668	UnaryOperator	!		4947303	0					
ANR	4949669	CallExpression	log5 . writeEvent ( & execE )		4947303	1					
ANR	4949670	Callee	log5 . writeEvent		4947303	0					
ANR	4949671	MemberAccess	log5 . writeEvent		4947303	0					
ANR	4949672	Identifier	log5		4947303	0					
ANR	4949673	Identifier	writeEvent		4947303	1					
ANR	4949674	ArgumentList	& execE		4947303	1					
ANR	4949675	Argument	& execE		4947303	0					
ANR	4949676	UnaryOperationExpression	& execE		4947303	0					
ANR	4949677	UnaryOperator	&		4947303	0					
ANR	4949678	Identifier	execE		4947303	1					
ANR	4949679	CompoundStatement		421:33:10940:10940	4947303	1					
ANR	4949680	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	561:2:14777:14828	4947303	0	True				
ANR	4949681	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949682	Callee	printf		4947303	0					
ANR	4949683	Identifier	printf		4947303	0					
ANR	4949684	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949685	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949686	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949687	Argument	__FILE__		4947303	1					
ANR	4949688	Identifier	__FILE__		4947303	0					
ANR	4949689	Argument	__LINE__		4947303	2					
ANR	4949690	Identifier	__LINE__		4947303	0					
ANR	4949691	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	562:2:14832:14863	4947303	1	True				
ANR	4949692	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4949693	Callee	printf		4947303	0					
ANR	4949694	Identifier	printf		4947303	0					
ANR	4949695	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4949696	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4949697	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4949698	ExpressionStatement	fflush ( stdout )	563:2:14867:14883	4947303	2	True				
ANR	4949699	CallExpression	fflush ( stdout )		4947303	0					
ANR	4949700	Callee	fflush		4947303	0					
ANR	4949701	Identifier	fflush		4947303	0					
ANR	4949702	ArgumentList	stdout		4947303	1					
ANR	4949703	Argument	stdout		4947303	0					
ANR	4949704	Identifier	stdout		4947303	0					
ANR	4949705	ExpressionStatement	isOkay = false	564:2:14887:14901	4947303	3	True				
ANR	4949706	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949707	Identifier	isOkay		4947303	0					
ANR	4949708	Identifier	false		4947303	1					
ANR	4949709	IfStatement	if ( ! log5 . writeEvent ( & termE ) )		4947303	121					
ANR	4949710	Condition	! log5 . writeEvent ( & termE )	567:6:14913:14936	4947303	0	True				
ANR	4949711	UnaryOperationExpression	! log5 . writeEvent ( & termE )		4947303	0					
ANR	4949712	UnaryOperator	!		4947303	0					
ANR	4949713	CallExpression	log5 . writeEvent ( & termE )		4947303	1					
ANR	4949714	Callee	log5 . writeEvent		4947303	0					
ANR	4949715	MemberAccess	log5 . writeEvent		4947303	0					
ANR	4949716	Identifier	log5		4947303	0					
ANR	4949717	Identifier	writeEvent		4947303	1					
ANR	4949718	ArgumentList	& termE		4947303	1					
ANR	4949719	Argument	& termE		4947303	0					
ANR	4949720	UnaryOperationExpression	& termE		4947303	0					
ANR	4949721	UnaryOperator	&		4947303	0					
ANR	4949722	Identifier	termE		4947303	1					
ANR	4949723	CompoundStatement		428:33:11107:11107	4947303	1					
ANR	4949724	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	568:2:14944:14995	4947303	0	True				
ANR	4949725	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949726	Callee	printf		4947303	0					
ANR	4949727	Identifier	printf		4947303	0					
ANR	4949728	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949729	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949730	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949731	Argument	__FILE__		4947303	1					
ANR	4949732	Identifier	__FILE__		4947303	0					
ANR	4949733	Argument	__LINE__		4947303	2					
ANR	4949734	Identifier	__LINE__		4947303	0					
ANR	4949735	ExpressionStatement	"printf ( ""writeEvent() failed"" )"	569:2:14999:15030	4947303	1	True				
ANR	4949736	CallExpression	"printf ( ""writeEvent() failed"" )"		4947303	0					
ANR	4949737	Callee	printf		4947303	0					
ANR	4949738	Identifier	printf		4947303	0					
ANR	4949739	ArgumentList	"""writeEvent() failed"""		4947303	1					
ANR	4949740	Argument	"""writeEvent() failed"""		4947303	0					
ANR	4949741	PrimaryExpression	"""writeEvent() failed"""		4947303	0					
ANR	4949742	ExpressionStatement	fflush ( stdout )	570:2:15034:15050	4947303	2	True				
ANR	4949743	CallExpression	fflush ( stdout )		4947303	0					
ANR	4949744	Callee	fflush		4947303	0					
ANR	4949745	Identifier	fflush		4947303	0					
ANR	4949746	ArgumentList	stdout		4947303	1					
ANR	4949747	Argument	stdout		4947303	0					
ANR	4949748	Identifier	stdout		4947303	0					
ANR	4949749	ExpressionStatement	isOkay = false	571:2:15054:15068	4947303	3	True				
ANR	4949750	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949751	Identifier	isOkay		4947303	0					
ANR	4949752	Identifier	false		4947303	1					
ANR	4949753	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		4947303	122					
ANR	4949754	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	574:6:15080:15116	4947303	0	True				
ANR	4949755	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		4947303	0					
ANR	4949756	UnaryOperator	!		4947303	0					
ANR	4949757	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		4947303	1					
ANR	4949758	Callee	ReadAndTestEvent		4947303	0					
ANR	4949759	Identifier	ReadAndTestEvent		4947303	0					
ANR	4949760	ArgumentList	lazyReader		4947303	1					
ANR	4949761	Argument	lazyReader		4947303	0					
ANR	4949762	Identifier	lazyReader		4947303	0					
ANR	4949763	Argument	NULL		4947303	1					
ANR	4949764	Identifier	NULL		4947303	0					
ANR	4949765	CompoundStatement		435:46:11287:11287	4947303	1					
ANR	4949766	ExpressionStatement	isOkay = false	575:2:15124:15138	4947303	0	True				
ANR	4949767	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949768	Identifier	isOkay		4947303	0					
ANR	4949769	Identifier	false		4947303	1					
ANR	4949770	IfStatement	"if ( ! monitorLogFile ( lazyReader , file5a , true ) )"		4947303	123					
ANR	4949771	Condition	"! monitorLogFile ( lazyReader , file5a , true )"	579:5:15205:15247	4947303	0	True				
ANR	4949772	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file5a , true )"		4947303	0					
ANR	4949773	UnaryOperator	!		4947303	0					
ANR	4949774	CallExpression	"monitorLogFile ( lazyReader , file5a , true )"		4947303	1					
ANR	4949775	Callee	monitorLogFile		4947303	0					
ANR	4949776	Identifier	monitorLogFile		4947303	0					
ANR	4949777	ArgumentList	lazyReader		4947303	1					
ANR	4949778	Argument	lazyReader		4947303	0					
ANR	4949779	Identifier	lazyReader		4947303	0					
ANR	4949780	Argument	file5a		4947303	1					
ANR	4949781	Identifier	file5a		4947303	0					
ANR	4949782	Argument	true		4947303	2					
ANR	4949783	Identifier	true		4947303	0					
ANR	4949784	CompoundStatement		440:51:11418:11418	4947303	1					
ANR	4949785	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	580:2:15255:15306	4947303	0	True				
ANR	4949786	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949787	Callee	printf		4947303	0					
ANR	4949788	Identifier	printf		4947303	0					
ANR	4949789	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949790	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949791	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949792	Argument	__FILE__		4947303	1					
ANR	4949793	Identifier	__FILE__		4947303	0					
ANR	4949794	Argument	__LINE__		4947303	2					
ANR	4949795	Identifier	__LINE__		4947303	0					
ANR	4949796	ExpressionStatement	"printf ( ""error monitoring file %s\\n"" , file5a )"	581:2:15310:15356	4947303	1	True				
ANR	4949797	CallExpression	"printf ( ""error monitoring file %s\\n"" , file5a )"		4947303	0					
ANR	4949798	Callee	printf		4947303	0					
ANR	4949799	Identifier	printf		4947303	0					
ANR	4949800	ArgumentList	"""error monitoring file %s\\n"""		4947303	1					
ANR	4949801	Argument	"""error monitoring file %s\\n"""		4947303	0					
ANR	4949802	PrimaryExpression	"""error monitoring file %s\\n"""		4947303	0					
ANR	4949803	Argument	file5a		4947303	1					
ANR	4949804	Identifier	file5a		4947303	0					
ANR	4949805	ExpressionStatement	fflush ( stdout )	582:2:15360:15376	4947303	2	True				
ANR	4949806	CallExpression	fflush ( stdout )		4947303	0					
ANR	4949807	Callee	fflush		4947303	0					
ANR	4949808	Identifier	fflush		4947303	0					
ANR	4949809	ArgumentList	stdout		4947303	1					
ANR	4949810	Argument	stdout		4947303	0					
ANR	4949811	Identifier	stdout		4947303	0					
ANR	4949812	ExpressionStatement	isOkay = false	583:2:15380:15394	4947303	3	True				
ANR	4949813	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949814	Identifier	isOkay		4947303	0					
ANR	4949815	Identifier	false		4947303	1					
ANR	4949816	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & subE ) )"		4947303	124					
ANR	4949817	Condition	"! ReadAndTestEvent ( lazyReader , & subE )"	586:6:15406:15443	4947303	0	True				
ANR	4949818	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & subE )"		4947303	0					
ANR	4949819	UnaryOperator	!		4947303	0					
ANR	4949820	CallExpression	"ReadAndTestEvent ( lazyReader , & subE )"		4947303	1					
ANR	4949821	Callee	ReadAndTestEvent		4947303	0					
ANR	4949822	Identifier	ReadAndTestEvent		4947303	0					
ANR	4949823	ArgumentList	lazyReader		4947303	1					
ANR	4949824	Argument	lazyReader		4947303	0					
ANR	4949825	Identifier	lazyReader		4947303	0					
ANR	4949826	Argument	& subE		4947303	1					
ANR	4949827	UnaryOperationExpression	& subE		4947303	0					
ANR	4949828	UnaryOperator	&		4947303	0					
ANR	4949829	Identifier	subE		4947303	1					
ANR	4949830	CompoundStatement		447:47:11614:11614	4947303	1					
ANR	4949831	ExpressionStatement	isOkay = false	587:2:15451:15465	4947303	0	True				
ANR	4949832	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949833	Identifier	isOkay		4947303	0					
ANR	4949834	Identifier	false		4947303	1					
ANR	4949835	IfStatement	"if ( symlink ( file5 , file5b ) != 0 )"		4947303	125					
ANR	4949836	Condition	"symlink ( file5 , file5b ) != 0"	591:6:15507:15535	4947303	0	True				
ANR	4949837	EqualityExpression	"symlink ( file5 , file5b ) != 0"		4947303	0		!=			
ANR	4949838	CallExpression	"symlink ( file5 , file5b )"		4947303	0					
ANR	4949839	Callee	symlink		4947303	0					
ANR	4949840	Identifier	symlink		4947303	0					
ANR	4949841	ArgumentList	file5		4947303	1					
ANR	4949842	Argument	file5		4947303	0					
ANR	4949843	Identifier	file5		4947303	0					
ANR	4949844	Argument	file5b		4947303	1					
ANR	4949845	Identifier	file5b		4947303	0					
ANR	4949846	PrimaryExpression	0		4947303	1					
ANR	4949847	CompoundStatement		452:38:11706:11706	4947303	1					
ANR	4949848	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	592:2:15543:15594	4947303	0	True				
ANR	4949849	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949850	Callee	printf		4947303	0					
ANR	4949851	Identifier	printf		4947303	0					
ANR	4949852	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949853	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949854	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949855	Argument	__FILE__		4947303	1					
ANR	4949856	Identifier	__FILE__		4947303	0					
ANR	4949857	Argument	__LINE__		4947303	2					
ANR	4949858	Identifier	__LINE__		4947303	0					
ANR	4949859	ExpressionStatement	"printf ( ""error (%d, %s) creating symlink %s %s\\n"" , errno , strerror ( errno ) , file5 , file5b )"	593:2:15598:15695	4947303	1	True				
ANR	4949860	CallExpression	"printf ( ""error (%d, %s) creating symlink %s %s\\n"" , errno , strerror ( errno ) , file5 , file5b )"		4947303	0					
ANR	4949861	Callee	printf		4947303	0					
ANR	4949862	Identifier	printf		4947303	0					
ANR	4949863	ArgumentList	"""error (%d, %s) creating symlink %s %s\\n"""		4947303	1					
ANR	4949864	Argument	"""error (%d, %s) creating symlink %s %s\\n"""		4947303	0					
ANR	4949865	PrimaryExpression	"""error (%d, %s) creating symlink %s %s\\n"""		4947303	0					
ANR	4949866	Argument	errno		4947303	1					
ANR	4949867	Identifier	errno		4947303	0					
ANR	4949868	Argument	strerror ( errno )		4947303	2					
ANR	4949869	CallExpression	strerror ( errno )		4947303	0					
ANR	4949870	Callee	strerror		4947303	0					
ANR	4949871	Identifier	strerror		4947303	0					
ANR	4949872	ArgumentList	errno		4947303	1					
ANR	4949873	Argument	errno		4947303	0					
ANR	4949874	Identifier	errno		4947303	0					
ANR	4949875	Argument	file5		4947303	3					
ANR	4949876	Identifier	file5		4947303	0					
ANR	4949877	Argument	file5b		4947303	4					
ANR	4949878	Identifier	file5b		4947303	0					
ANR	4949879	ExpressionStatement	isOkay = false	595:2:15699:15713	4947303	2	True				
ANR	4949880	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949881	Identifier	isOkay		4947303	0					
ANR	4949882	Identifier	false		4947303	1					
ANR	4949883	ElseStatement	else		4947303	0					
ANR	4949884	CompoundStatement		457:8:11890:11890	4947303	0					
ANR	4949885	ExpressionStatement	"printf ( ""Created link %s to %s\\n"" , file5b , file5 )"	597:2:15727:15777	4947303	0	True				
ANR	4949886	CallExpression	"printf ( ""Created link %s to %s\\n"" , file5b , file5 )"		4947303	0					
ANR	4949887	Callee	printf		4947303	0					
ANR	4949888	Identifier	printf		4947303	0					
ANR	4949889	ArgumentList	"""Created link %s to %s\\n"""		4947303	1					
ANR	4949890	Argument	"""Created link %s to %s\\n"""		4947303	0					
ANR	4949891	PrimaryExpression	"""Created link %s to %s\\n"""		4947303	0					
ANR	4949892	Argument	file5b		4947303	1					
ANR	4949893	Identifier	file5b		4947303	0					
ANR	4949894	Argument	file5		4947303	2					
ANR	4949895	Identifier	file5		4947303	0					
ANR	4949896	IfStatement	"if ( ! monitorLogFile ( lazyReader , file5b , true ) )"		4947303	126					
ANR	4949897	Condition	"! monitorLogFile ( lazyReader , file5b , true )"	600:5:15835:15877	4947303	0	True				
ANR	4949898	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file5b , true )"		4947303	0					
ANR	4949899	UnaryOperator	!		4947303	0					
ANR	4949900	CallExpression	"monitorLogFile ( lazyReader , file5b , true )"		4947303	1					
ANR	4949901	Callee	monitorLogFile		4947303	0					
ANR	4949902	Identifier	monitorLogFile		4947303	0					
ANR	4949903	ArgumentList	lazyReader		4947303	1					
ANR	4949904	Argument	lazyReader		4947303	0					
ANR	4949905	Identifier	lazyReader		4947303	0					
ANR	4949906	Argument	file5b		4947303	1					
ANR	4949907	Identifier	file5b		4947303	0					
ANR	4949908	Argument	true		4947303	2					
ANR	4949909	Identifier	true		4947303	0					
ANR	4949910	CompoundStatement		461:51:12048:12048	4947303	1					
ANR	4949911	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	601:2:15885:15936	4947303	0	True				
ANR	4949912	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949913	Callee	printf		4947303	0					
ANR	4949914	Identifier	printf		4947303	0					
ANR	4949915	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949916	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949917	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949918	Argument	__FILE__		4947303	1					
ANR	4949919	Identifier	__FILE__		4947303	0					
ANR	4949920	Argument	__LINE__		4947303	2					
ANR	4949921	Identifier	__LINE__		4947303	0					
ANR	4949922	ExpressionStatement	"printf ( ""error monitoring file %s\\n"" , file5b )"	602:2:15940:15986	4947303	1	True				
ANR	4949923	CallExpression	"printf ( ""error monitoring file %s\\n"" , file5b )"		4947303	0					
ANR	4949924	Callee	printf		4947303	0					
ANR	4949925	Identifier	printf		4947303	0					
ANR	4949926	ArgumentList	"""error monitoring file %s\\n"""		4947303	1					
ANR	4949927	Argument	"""error monitoring file %s\\n"""		4947303	0					
ANR	4949928	PrimaryExpression	"""error monitoring file %s\\n"""		4947303	0					
ANR	4949929	Argument	file5b		4947303	1					
ANR	4949930	Identifier	file5b		4947303	0					
ANR	4949931	ExpressionStatement	fflush ( stdout )	603:2:15990:16006	4947303	2	True				
ANR	4949932	CallExpression	fflush ( stdout )		4947303	0					
ANR	4949933	Callee	fflush		4947303	0					
ANR	4949934	Identifier	fflush		4947303	0					
ANR	4949935	ArgumentList	stdout		4947303	1					
ANR	4949936	Argument	stdout		4947303	0					
ANR	4949937	Identifier	stdout		4947303	0					
ANR	4949938	ExpressionStatement	isOkay = false	604:2:16010:16024	4947303	3	True				
ANR	4949939	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949940	Identifier	isOkay		4947303	0					
ANR	4949941	Identifier	false		4947303	1					
ANR	4949942	IfStatement	"if ( symlink ( file5 , file5c ) != 0 )"		4947303	127					
ANR	4949943	Condition	"symlink ( file5 , file5c ) != 0"	607:6:16036:16064	4947303	0	True				
ANR	4949944	EqualityExpression	"symlink ( file5 , file5c ) != 0"		4947303	0		!=			
ANR	4949945	CallExpression	"symlink ( file5 , file5c )"		4947303	0					
ANR	4949946	Callee	symlink		4947303	0					
ANR	4949947	Identifier	symlink		4947303	0					
ANR	4949948	ArgumentList	file5		4947303	1					
ANR	4949949	Argument	file5		4947303	0					
ANR	4949950	Identifier	file5		4947303	0					
ANR	4949951	Argument	file5c		4947303	1					
ANR	4949952	Identifier	file5c		4947303	0					
ANR	4949953	PrimaryExpression	0		4947303	1					
ANR	4949954	CompoundStatement		468:38:12235:12235	4947303	1					
ANR	4949955	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	608:2:16072:16123	4947303	0	True				
ANR	4949956	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4949957	Callee	printf		4947303	0					
ANR	4949958	Identifier	printf		4947303	0					
ANR	4949959	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4949960	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949961	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4949962	Argument	__FILE__		4947303	1					
ANR	4949963	Identifier	__FILE__		4947303	0					
ANR	4949964	Argument	__LINE__		4947303	2					
ANR	4949965	Identifier	__LINE__		4947303	0					
ANR	4949966	ExpressionStatement	"printf ( ""error (%d, %s) creating symlink %s %s\\n"" , errno , strerror ( errno ) , file5 , file5c )"	609:2:16127:16224	4947303	1	True				
ANR	4949967	CallExpression	"printf ( ""error (%d, %s) creating symlink %s %s\\n"" , errno , strerror ( errno ) , file5 , file5c )"		4947303	0					
ANR	4949968	Callee	printf		4947303	0					
ANR	4949969	Identifier	printf		4947303	0					
ANR	4949970	ArgumentList	"""error (%d, %s) creating symlink %s %s\\n"""		4947303	1					
ANR	4949971	Argument	"""error (%d, %s) creating symlink %s %s\\n"""		4947303	0					
ANR	4949972	PrimaryExpression	"""error (%d, %s) creating symlink %s %s\\n"""		4947303	0					
ANR	4949973	Argument	errno		4947303	1					
ANR	4949974	Identifier	errno		4947303	0					
ANR	4949975	Argument	strerror ( errno )		4947303	2					
ANR	4949976	CallExpression	strerror ( errno )		4947303	0					
ANR	4949977	Callee	strerror		4947303	0					
ANR	4949978	Identifier	strerror		4947303	0					
ANR	4949979	ArgumentList	errno		4947303	1					
ANR	4949980	Argument	errno		4947303	0					
ANR	4949981	Identifier	errno		4947303	0					
ANR	4949982	Argument	file5		4947303	3					
ANR	4949983	Identifier	file5		4947303	0					
ANR	4949984	Argument	file5c		4947303	4					
ANR	4949985	Identifier	file5c		4947303	0					
ANR	4949986	ExpressionStatement	isOkay = false	611:2:16228:16242	4947303	2	True				
ANR	4949987	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4949988	Identifier	isOkay		4947303	0					
ANR	4949989	Identifier	false		4947303	1					
ANR	4949990	ElseStatement	else		4947303	0					
ANR	4949991	CompoundStatement		473:8:12419:12419	4947303	0					
ANR	4949992	ExpressionStatement	"printf ( ""Created link %s to %s\\n"" , file5c , file5 )"	613:2:16256:16306	4947303	0	True				
ANR	4949993	CallExpression	"printf ( ""Created link %s to %s\\n"" , file5c , file5 )"		4947303	0					
ANR	4949994	Callee	printf		4947303	0					
ANR	4949995	Identifier	printf		4947303	0					
ANR	4949996	ArgumentList	"""Created link %s to %s\\n"""		4947303	1					
ANR	4949997	Argument	"""Created link %s to %s\\n"""		4947303	0					
ANR	4949998	PrimaryExpression	"""Created link %s to %s\\n"""		4947303	0					
ANR	4949999	Argument	file5c		4947303	1					
ANR	4950000	Identifier	file5c		4947303	0					
ANR	4950001	Argument	file5		4947303	2					
ANR	4950002	Identifier	file5		4947303	0					
ANR	4950003	IfStatement	"if ( ! monitorLogFile ( lazyReader , file5c , true ) )"		4947303	128					
ANR	4950004	Condition	"! monitorLogFile ( lazyReader , file5c , true )"	616:5:16364:16406	4947303	0	True				
ANR	4950005	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file5c , true )"		4947303	0					
ANR	4950006	UnaryOperator	!		4947303	0					
ANR	4950007	CallExpression	"monitorLogFile ( lazyReader , file5c , true )"		4947303	1					
ANR	4950008	Callee	monitorLogFile		4947303	0					
ANR	4950009	Identifier	monitorLogFile		4947303	0					
ANR	4950010	ArgumentList	lazyReader		4947303	1					
ANR	4950011	Argument	lazyReader		4947303	0					
ANR	4950012	Identifier	lazyReader		4947303	0					
ANR	4950013	Argument	file5c		4947303	1					
ANR	4950014	Identifier	file5c		4947303	0					
ANR	4950015	Argument	true		4947303	2					
ANR	4950016	Identifier	true		4947303	0					
ANR	4950017	CompoundStatement		477:51:12577:12577	4947303	1					
ANR	4950018	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	617:2:16414:16465	4947303	0	True				
ANR	4950019	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4950020	Callee	printf		4947303	0					
ANR	4950021	Identifier	printf		4947303	0					
ANR	4950022	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4950023	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4950024	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4950025	Argument	__FILE__		4947303	1					
ANR	4950026	Identifier	__FILE__		4947303	0					
ANR	4950027	Argument	__LINE__		4947303	2					
ANR	4950028	Identifier	__LINE__		4947303	0					
ANR	4950029	ExpressionStatement	"printf ( ""error monitoring file %s\\n"" , file5c )"	618:2:16469:16515	4947303	1	True				
ANR	4950030	CallExpression	"printf ( ""error monitoring file %s\\n"" , file5c )"		4947303	0					
ANR	4950031	Callee	printf		4947303	0					
ANR	4950032	Identifier	printf		4947303	0					
ANR	4950033	ArgumentList	"""error monitoring file %s\\n"""		4947303	1					
ANR	4950034	Argument	"""error monitoring file %s\\n"""		4947303	0					
ANR	4950035	PrimaryExpression	"""error monitoring file %s\\n"""		4947303	0					
ANR	4950036	Argument	file5c		4947303	1					
ANR	4950037	Identifier	file5c		4947303	0					
ANR	4950038	ExpressionStatement	fflush ( stdout )	619:2:16519:16535	4947303	2	True				
ANR	4950039	CallExpression	fflush ( stdout )		4947303	0					
ANR	4950040	Callee	fflush		4947303	0					
ANR	4950041	Identifier	fflush		4947303	0					
ANR	4950042	ArgumentList	stdout		4947303	1					
ANR	4950043	Argument	stdout		4947303	0					
ANR	4950044	Identifier	stdout		4947303	0					
ANR	4950045	ExpressionStatement	isOkay = false	620:2:16539:16553	4947303	3	True				
ANR	4950046	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4950047	Identifier	isOkay		4947303	0					
ANR	4950048	Identifier	false		4947303	1					
ANR	4950049	ExpressionStatement	"link ( file5 , file5d )"	625:1:16665:16686	4947303	129	True				
ANR	4950050	CallExpression	"link ( file5 , file5d )"		4947303	0					
ANR	4950051	Callee	link		4947303	0					
ANR	4950052	Identifier	link		4947303	0					
ANR	4950053	ArgumentList	file5		4947303	1					
ANR	4950054	Argument	file5		4947303	0					
ANR	4950055	Identifier	file5		4947303	0					
ANR	4950056	Argument	file5d		4947303	1					
ANR	4950057	Identifier	file5d		4947303	0					
ANR	4950058	IfStatement	"if ( ! monitorLogFile ( lazyReader , file5d , true ) )"		4947303	130					
ANR	4950059	Condition	"! monitorLogFile ( lazyReader , file5d , true )"	627:5:16742:16784	4947303	0	True				
ANR	4950060	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file5d , true )"		4947303	0					
ANR	4950061	UnaryOperator	!		4947303	0					
ANR	4950062	CallExpression	"monitorLogFile ( lazyReader , file5d , true )"		4947303	1					
ANR	4950063	Callee	monitorLogFile		4947303	0					
ANR	4950064	Identifier	monitorLogFile		4947303	0					
ANR	4950065	ArgumentList	lazyReader		4947303	1					
ANR	4950066	Argument	lazyReader		4947303	0					
ANR	4950067	Identifier	lazyReader		4947303	0					
ANR	4950068	Argument	file5d		4947303	1					
ANR	4950069	Identifier	file5d		4947303	0					
ANR	4950070	Argument	true		4947303	2					
ANR	4950071	Identifier	true		4947303	0					
ANR	4950072	CompoundStatement		488:51:12955:12955	4947303	1					
ANR	4950073	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	628:2:16792:16843	4947303	0	True				
ANR	4950074	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4950075	Callee	printf		4947303	0					
ANR	4950076	Identifier	printf		4947303	0					
ANR	4950077	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4950078	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4950079	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4950080	Argument	__FILE__		4947303	1					
ANR	4950081	Identifier	__FILE__		4947303	0					
ANR	4950082	Argument	__LINE__		4947303	2					
ANR	4950083	Identifier	__LINE__		4947303	0					
ANR	4950084	ExpressionStatement	"printf ( ""error monitoring file %s\\n"" , file5d )"	629:2:16847:16893	4947303	1	True				
ANR	4950085	CallExpression	"printf ( ""error monitoring file %s\\n"" , file5d )"		4947303	0					
ANR	4950086	Callee	printf		4947303	0					
ANR	4950087	Identifier	printf		4947303	0					
ANR	4950088	ArgumentList	"""error monitoring file %s\\n"""		4947303	1					
ANR	4950089	Argument	"""error monitoring file %s\\n"""		4947303	0					
ANR	4950090	PrimaryExpression	"""error monitoring file %s\\n"""		4947303	0					
ANR	4950091	Argument	file5d		4947303	1					
ANR	4950092	Identifier	file5d		4947303	0					
ANR	4950093	ExpressionStatement	fflush ( stdout )	630:2:16897:16913	4947303	2	True				
ANR	4950094	CallExpression	fflush ( stdout )		4947303	0					
ANR	4950095	Callee	fflush		4947303	0					
ANR	4950096	Identifier	fflush		4947303	0					
ANR	4950097	ArgumentList	stdout		4947303	1					
ANR	4950098	Argument	stdout		4947303	0					
ANR	4950099	Identifier	stdout		4947303	0					
ANR	4950100	ExpressionStatement	isOkay = false	631:2:16917:16931	4947303	3	True				
ANR	4950101	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4950102	Identifier	isOkay		4947303	0					
ANR	4950103	Identifier	false		4947303	1					
ANR	4950104	IfStatement	if ( ( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 4 )		4947303	131					
ANR	4950105	Condition	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 4	634:6:16943:16995	4947303	0	True				
ANR	4950106	EqualityExpression	( totalLogCount = lazyReader . totalLogFileCount ( ) ) != 4		4947303	0		!=			
ANR	4950107	AssignmentExpression	totalLogCount = lazyReader . totalLogFileCount ( )		4947303	0		=			
ANR	4950108	Identifier	totalLogCount		4947303	0					
ANR	4950109	CallExpression	lazyReader . totalLogFileCount ( )		4947303	1					
ANR	4950110	Callee	lazyReader . totalLogFileCount		4947303	0					
ANR	4950111	MemberAccess	lazyReader . totalLogFileCount		4947303	0					
ANR	4950112	Identifier	lazyReader		4947303	0					
ANR	4950113	Identifier	totalLogFileCount		4947303	1					
ANR	4950114	ArgumentList			4947303	1					
ANR	4950115	PrimaryExpression	4		4947303	1					
ANR	4950116	CompoundStatement		495:62:13166:13166	4947303	1					
ANR	4950117	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	635:2:17003:17054	4947303	0	True				
ANR	4950118	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4950119	Callee	printf		4947303	0					
ANR	4950120	Identifier	printf		4947303	0					
ANR	4950121	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4950122	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4950123	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4950124	Argument	__FILE__		4947303	1					
ANR	4950125	Identifier	__FILE__		4947303	0					
ANR	4950126	Argument	__LINE__		4947303	2					
ANR	4950127	Identifier	__LINE__		4947303	0					
ANR	4950128	Statement	printf	636:2:17058:17063	4947303	1	True				
ANR	4950129	Statement	(	636:8:17064:17064	4947303	2	True				
ANR	4950130	Statement	"""lazyReader.totalLogFileCount() was %d; should """	636:10:17066:17113	4947303	3	True				
ANR	4950131	Statement	"""have been 4\\n"""	637:5:17120:17134	4947303	4	True				
ANR	4950132	Statement	","	637:20:17135:17135	4947303	5	True				
ANR	4950133	Statement	totalLogCount	637:22:17137:17149	4947303	6	True				
ANR	4950134	Statement	)	637:36:17151:17151	4947303	7	True				
ANR	4950135	ExpressionStatement		637:37:17152:17152	4947303	8	True				
ANR	4950136	ExpressionStatement	fflush ( stdout )	638:2:17156:17172	4947303	9	True				
ANR	4950137	CallExpression	fflush ( stdout )		4947303	0					
ANR	4950138	Callee	fflush		4947303	0					
ANR	4950139	Identifier	fflush		4947303	0					
ANR	4950140	ArgumentList	stdout		4947303	1					
ANR	4950141	Argument	stdout		4947303	0					
ANR	4950142	Identifier	stdout		4947303	0					
ANR	4950143	ExpressionStatement	isOkay = false	639:2:17176:17190	4947303	10	True				
ANR	4950144	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4950145	Identifier	isOkay		4947303	0					
ANR	4950146	Identifier	false		4947303	1					
ANR	4950147	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & execE ) )"		4947303	132					
ANR	4950148	Condition	"! ReadAndTestEvent ( lazyReader , & execE )"	642:6:17202:17240	4947303	0	True				
ANR	4950149	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & execE )"		4947303	0					
ANR	4950150	UnaryOperator	!		4947303	0					
ANR	4950151	CallExpression	"ReadAndTestEvent ( lazyReader , & execE )"		4947303	1					
ANR	4950152	Callee	ReadAndTestEvent		4947303	0					
ANR	4950153	Identifier	ReadAndTestEvent		4947303	0					
ANR	4950154	ArgumentList	lazyReader		4947303	1					
ANR	4950155	Argument	lazyReader		4947303	0					
ANR	4950156	Identifier	lazyReader		4947303	0					
ANR	4950157	Argument	& execE		4947303	1					
ANR	4950158	UnaryOperationExpression	& execE		4947303	0					
ANR	4950159	UnaryOperator	&		4947303	0					
ANR	4950160	Identifier	execE		4947303	1					
ANR	4950161	CompoundStatement		503:48:13411:13411	4947303	1					
ANR	4950162	ExpressionStatement	isOkay = false	643:2:17248:17262	4947303	0	True				
ANR	4950163	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4950164	Identifier	isOkay		4947303	0					
ANR	4950165	Identifier	false		4947303	1					
ANR	4950166	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , & termE ) )"		4947303	133					
ANR	4950167	Condition	"! ReadAndTestEvent ( lazyReader , & termE )"	645:6:17273:17309	4947303	0	True				
ANR	4950168	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , & termE )"		4947303	0					
ANR	4950169	UnaryOperator	!		4947303	0					
ANR	4950170	CallExpression	"ReadAndTestEvent ( lazyReader , & termE )"		4947303	1					
ANR	4950171	Callee	ReadAndTestEvent		4947303	0					
ANR	4950172	Identifier	ReadAndTestEvent		4947303	0					
ANR	4950173	ArgumentList	lazyReader		4947303	1					
ANR	4950174	Argument	lazyReader		4947303	0					
ANR	4950175	Identifier	lazyReader		4947303	0					
ANR	4950176	Argument	& termE		4947303	1					
ANR	4950177	UnaryOperationExpression	& termE		4947303	0					
ANR	4950178	UnaryOperator	&		4947303	0					
ANR	4950179	Identifier	termE		4947303	1					
ANR	4950180	CompoundStatement		506:46:13480:13480	4947303	1					
ANR	4950181	ExpressionStatement	isOkay = false	646:2:17317:17331	4947303	0	True				
ANR	4950182	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4950183	Identifier	isOkay		4947303	0					
ANR	4950184	Identifier	false		4947303	1					
ANR	4950185	IfStatement	"if ( ! ReadAndTestEvent ( lazyReader , NULL ) )"		4947303	134					
ANR	4950186	Condition	"! ReadAndTestEvent ( lazyReader , NULL )"	648:6:17342:17376	4947303	0	True				
ANR	4950187	UnaryOperationExpression	"! ReadAndTestEvent ( lazyReader , NULL )"		4947303	0					
ANR	4950188	UnaryOperator	!		4947303	0					
ANR	4950189	CallExpression	"ReadAndTestEvent ( lazyReader , NULL )"		4947303	1					
ANR	4950190	Callee	ReadAndTestEvent		4947303	0					
ANR	4950191	Identifier	ReadAndTestEvent		4947303	0					
ANR	4950192	ArgumentList	lazyReader		4947303	1					
ANR	4950193	Argument	lazyReader		4947303	0					
ANR	4950194	Identifier	lazyReader		4947303	0					
ANR	4950195	Argument	NULL		4947303	1					
ANR	4950196	Identifier	NULL		4947303	0					
ANR	4950197	CompoundStatement		509:44:13547:13547	4947303	1					
ANR	4950198	ExpressionStatement	isOkay = false	649:2:17384:17398	4947303	0	True				
ANR	4950199	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4950200	Identifier	isOkay		4947303	0					
ANR	4950201	Identifier	false		4947303	1					
ANR	4950202	IdentifierDeclStatement	"const char * file6 = ""test_multi_log.log6"" ;"	656:1:17511:17552	4947303	135	True				
ANR	4950203	IdentifierDecl	"* file6 = ""test_multi_log.log6"""		4947303	0					
ANR	4950204	IdentifierDeclType	const char *		4947303	0					
ANR	4950205	Identifier	file6		4947303	1					
ANR	4950206	AssignmentExpression	"* file6 = ""test_multi_log.log6"""		4947303	2		=			
ANR	4950207	Identifier	file6		4947303	0					
ANR	4950208	PrimaryExpression	"""test_multi_log.log6"""		4947303	1					
ANR	4950209	ExpressionStatement	unlink ( file6 )	657:1:17555:17570	4947303	136	True				
ANR	4950210	CallExpression	unlink ( file6 )		4947303	0					
ANR	4950211	Callee	unlink		4947303	0					
ANR	4950212	Identifier	unlink		4947303	0					
ANR	4950213	ArgumentList	file6		4947303	1					
ANR	4950214	Argument	file6		4947303	0					
ANR	4950215	Identifier	file6		4947303	0					
ANR	4950216	IfStatement	"if ( ! monitorLogFile ( lazyReader , file6 , true ) )"		4947303	137					
ANR	4950217	Condition	"! monitorLogFile ( lazyReader , file6 , true )"	659:5:17578:17619	4947303	0	True				
ANR	4950218	UnaryOperationExpression	"! monitorLogFile ( lazyReader , file6 , true )"		4947303	0					
ANR	4950219	UnaryOperator	!		4947303	0					
ANR	4950220	CallExpression	"monitorLogFile ( lazyReader , file6 , true )"		4947303	1					
ANR	4950221	Callee	monitorLogFile		4947303	0					
ANR	4950222	Identifier	monitorLogFile		4947303	0					
ANR	4950223	ArgumentList	lazyReader		4947303	1					
ANR	4950224	Argument	lazyReader		4947303	0					
ANR	4950225	Identifier	lazyReader		4947303	0					
ANR	4950226	Argument	file6		4947303	1					
ANR	4950227	Identifier	file6		4947303	0					
ANR	4950228	Argument	true		4947303	2					
ANR	4950229	Identifier	true		4947303	0					
ANR	4950230	CompoundStatement		520:50:13790:13790	4947303	1					
ANR	4950231	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	660:2:17627:17678	4947303	0	True				
ANR	4950232	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4950233	Callee	printf		4947303	0					
ANR	4950234	Identifier	printf		4947303	0					
ANR	4950235	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4950236	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4950237	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4950238	Argument	__FILE__		4947303	1					
ANR	4950239	Identifier	__FILE__		4947303	0					
ANR	4950240	Argument	__LINE__		4947303	2					
ANR	4950241	Identifier	__LINE__		4947303	0					
ANR	4950242	ExpressionStatement	"printf ( ""error monitoring file %s\\n"" , file6 )"	661:2:17682:17727	4947303	1	True				
ANR	4950243	CallExpression	"printf ( ""error monitoring file %s\\n"" , file6 )"		4947303	0					
ANR	4950244	Callee	printf		4947303	0					
ANR	4950245	Identifier	printf		4947303	0					
ANR	4950246	ArgumentList	"""error monitoring file %s\\n"""		4947303	1					
ANR	4950247	Argument	"""error monitoring file %s\\n"""		4947303	0					
ANR	4950248	PrimaryExpression	"""error monitoring file %s\\n"""		4947303	0					
ANR	4950249	Argument	file6		4947303	1					
ANR	4950250	Identifier	file6		4947303	0					
ANR	4950251	ExpressionStatement	fflush ( stdout )	662:2:17731:17747	4947303	2	True				
ANR	4950252	CallExpression	fflush ( stdout )		4947303	0					
ANR	4950253	Callee	fflush		4947303	0					
ANR	4950254	Identifier	fflush		4947303	0					
ANR	4950255	ArgumentList	stdout		4947303	1					
ANR	4950256	Argument	stdout		4947303	0					
ANR	4950257	Identifier	stdout		4947303	0					
ANR	4950258	ExpressionStatement	isOkay = false	663:2:17751:17765	4947303	3	True				
ANR	4950259	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4950260	Identifier	isOkay		4947303	0					
ANR	4950261	Identifier	false		4947303	1					
ANR	4950262	IfStatement	"if ( ! unmonitorLogFile ( lazyReader , file6 ) )"		4947303	138					
ANR	4950263	Condition	"! unmonitorLogFile ( lazyReader , file6 )"	665:5:17775:17812	4947303	0	True				
ANR	4950264	UnaryOperationExpression	"! unmonitorLogFile ( lazyReader , file6 )"		4947303	0					
ANR	4950265	UnaryOperator	!		4947303	0					
ANR	4950266	CallExpression	"unmonitorLogFile ( lazyReader , file6 )"		4947303	1					
ANR	4950267	Callee	unmonitorLogFile		4947303	0					
ANR	4950268	Identifier	unmonitorLogFile		4947303	0					
ANR	4950269	ArgumentList	lazyReader		4947303	1					
ANR	4950270	Argument	lazyReader		4947303	0					
ANR	4950271	Identifier	lazyReader		4947303	0					
ANR	4950272	Argument	file6		4947303	1					
ANR	4950273	Identifier	file6		4947303	0					
ANR	4950274	CompoundStatement		526:46:13983:13983	4947303	1					
ANR	4950275	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	666:2:17820:17871	4947303	0	True				
ANR	4950276	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4947303	0					
ANR	4950277	Callee	printf		4947303	0					
ANR	4950278	Identifier	printf		4947303	0					
ANR	4950279	ArgumentList	"""FAILURE at %s, %d: """		4947303	1					
ANR	4950280	Argument	"""FAILURE at %s, %d: """		4947303	0					
ANR	4950281	PrimaryExpression	"""FAILURE at %s, %d: """		4947303	0					
ANR	4950282	Argument	__FILE__		4947303	1					
ANR	4950283	Identifier	__FILE__		4947303	0					
ANR	4950284	Argument	__LINE__		4947303	2					
ANR	4950285	Identifier	__LINE__		4947303	0					
ANR	4950286	ExpressionStatement	"printf ( ""error unmonitoring file %s\\n"" , file6 )"	667:2:17875:17922	4947303	1	True				
ANR	4950287	CallExpression	"printf ( ""error unmonitoring file %s\\n"" , file6 )"		4947303	0					
ANR	4950288	Callee	printf		4947303	0					
ANR	4950289	Identifier	printf		4947303	0					
ANR	4950290	ArgumentList	"""error unmonitoring file %s\\n"""		4947303	1					
ANR	4950291	Argument	"""error unmonitoring file %s\\n"""		4947303	0					
ANR	4950292	PrimaryExpression	"""error unmonitoring file %s\\n"""		4947303	0					
ANR	4950293	Argument	file6		4947303	1					
ANR	4950294	Identifier	file6		4947303	0					
ANR	4950295	ExpressionStatement	fflush ( stdout )	668:2:17926:17942	4947303	2	True				
ANR	4950296	CallExpression	fflush ( stdout )		4947303	0					
ANR	4950297	Callee	fflush		4947303	0					
ANR	4950298	Identifier	fflush		4947303	0					
ANR	4950299	ArgumentList	stdout		4947303	1					
ANR	4950300	Argument	stdout		4947303	0					
ANR	4950301	Identifier	stdout		4947303	0					
ANR	4950302	ExpressionStatement	isOkay = false	669:2:17946:17960	4947303	3	True				
ANR	4950303	AssignmentExpression	isOkay = false		4947303	0		=			
ANR	4950304	Identifier	isOkay		4947303	0					
ANR	4950305	Identifier	false		4947303	1					
ANR	4950306	IfStatement	if ( isOkay )		4947303	139					
ANR	4950307	Condition	isOkay	673:6:17973:17978	4947303	0	True				
ANR	4950308	Identifier	isOkay		4947303	0					
ANR	4950309	CompoundStatement		534:15:14149:14149	4947303	1					
ANR	4950310	ExpressionStatement	"printf ( ""...succeeded\\n"" )"	674:2:17986:18010	4947303	0	True				
ANR	4950311	CallExpression	"printf ( ""...succeeded\\n"" )"		4947303	0					
ANR	4950312	Callee	printf		4947303	0					
ANR	4950313	Identifier	printf		4947303	0					
ANR	4950314	ArgumentList	"""...succeeded\\n"""		4947303	1					
ANR	4950315	Argument	"""...succeeded\\n"""		4947303	0					
ANR	4950316	PrimaryExpression	"""...succeeded\\n"""		4947303	0					
ANR	4950317	ExpressionStatement	fflush ( stdout )	675:2:18014:18028	4947303	1	True				
ANR	4950318	CallExpression	fflush ( stdout )		4947303	0					
ANR	4950319	Callee	fflush		4947303	0					
ANR	4950320	Identifier	fflush		4947303	0					
ANR	4950321	ArgumentList	stdout		4947303	1					
ANR	4950322	Argument	stdout		4947303	0					
ANR	4950323	Identifier	stdout		4947303	0					
ANR	4950324	ElseStatement	else		4947303	0					
ANR	4950325	CompoundStatement		537:8:14205:14205	4947303	0					
ANR	4950326	ExpressionStatement	"printf ( ""...failed\\n"" )"	677:2:18042:18063	4947303	0	True				
ANR	4950327	CallExpression	"printf ( ""...failed\\n"" )"		4947303	0					
ANR	4950328	Callee	printf		4947303	0					
ANR	4950329	Identifier	printf		4947303	0					
ANR	4950330	ArgumentList	"""...failed\\n"""		4947303	1					
ANR	4950331	Argument	"""...failed\\n"""		4947303	0					
ANR	4950332	PrimaryExpression	"""...failed\\n"""		4947303	0					
ANR	4950333	ExpressionStatement	fflush ( stdout )	678:2:18067:18081	4947303	1	True				
ANR	4950334	CallExpression	fflush ( stdout )		4947303	0					
ANR	4950335	Callee	fflush		4947303	0					
ANR	4950336	Identifier	fflush		4947303	0					
ANR	4950337	ArgumentList	stdout		4947303	1					
ANR	4950338	Argument	stdout		4947303	0					
ANR	4950339	Identifier	stdout		4947303	0					
ANR	4950340	Statement	printf	681:1:18088:18093	4947303	140	True				
ANR	4950341	Statement	(	681:7:18094:18094	4947303	141	True				
ANR	4950342	Statement	"""\\nNote: we should get a warning here about log files still """	681:8:18095:18155	4947303	142	True				
ANR	4950343	Statement	"""being monitored...\\n"""	682:4:18161:18182	4947303	143	True				
ANR	4950344	Statement	)	682:26:18183:18183	4947303	144	True				
ANR	4950345	ExpressionStatement		682:27:18184:18184	4947303	145	True				
ANR	4950346	ReturnStatement	return isOkay ;	684:1:18188:18201	4947303	146	True				
ANR	4950347	Identifier	isOkay		4947303	0					
ANR	4950348	ReturnType	bool		4947303	1					
ANR	4950349	Identifier	ReadEventsLazy		4947303	2					
ANR	4950350	ParameterList			4947303	3					
ANR	4950351	CFGEntryNode	ENTRY		4947303		True				
ANR	4950352	CFGExitNode	EXIT		4947303		True				
ANR	4950353	Symbol	totalLogCount		4947303						
ANR	4950354	Symbol	stdout		4947303						
ANR	4950355	Symbol	& termE		4947303						
ANR	4950356	Symbol	monitorLogFile		4947303						
ANR	4950357	Symbol	log2 . writeEvent		4947303						
ANR	4950358	Symbol	execE		4947303						
ANR	4950359	Symbol	log4 . writeEvent		4947303						
ANR	4950360	Symbol	subE . submitHost		4947303						
ANR	4950361	Symbol	errno		4947303						
ANR	4950362	Symbol	lazyReader . readEvent		4947303						
ANR	4950363	Symbol	NULL		4947303						
ANR	4950364	Symbol	termE . cluster		4947303						
ANR	4950365	Symbol	__FILE__		4947303						
ANR	4950366	Symbol	termE . returnValue		4947303						
ANR	4950367	Symbol	log1 . writeEvent		4947303						
ANR	4950368	Symbol	strerror		4947303						
ANR	4950369	Symbol	subE		4947303						
ANR	4950370	Symbol	true		4947303						
ANR	4950371	Symbol	genE . info		4947303						
ANR	4950372	Symbol	file5a		4947303						
ANR	4950373	Symbol	file5b		4947303						
ANR	4950374	Symbol	ULOG_NO_EVENT		4947303						
ANR	4950375	Symbol	file5c		4947303						
ANR	4950376	Symbol	lazyReader . totalLogFileCount		4947303						
ANR	4950377	Symbol	log4		4947303						
ANR	4950378	Symbol	execE . executeHost		4947303						
ANR	4950379	Symbol	file5d		4947303						
ANR	4950380	Symbol	log5		4947303						
ANR	4950381	Symbol	genE		4947303						
ANR	4950382	Symbol	termE . normal		4947303						
ANR	4950383	Symbol	termE		4947303						
ANR	4950384	Symbol	log3 . writeEvent		4947303						
ANR	4950385	Symbol	& execE		4947303						
ANR	4950386	Symbol	lazyReader . detectLogGrowth		4947303						
ANR	4950387	Symbol	ReadAndTestEvent		4947303						
ANR	4950388	Symbol	symlink		4947303						
ANR	4950389	Symbol	log5 . writeEvent		4947303						
ANR	4950390	Symbol	event		4947303						
ANR	4950391	Symbol	log2		4947303						
ANR	4950392	Symbol	log3		4947303						
ANR	4950393	Symbol	log1		4947303						
ANR	4950394	Symbol	lazyReader		4947303						
ANR	4950395	Symbol	unmonitorLogFile		4947303						
ANR	4950396	Symbol	& genE		4947303						
ANR	4950397	Symbol	false		4947303						
ANR	4950398	Symbol	__LINE__		4947303						
ANR	4950399	Symbol	& subE		4947303						
ANR	4950400	Symbol	subE . cluster		4947303						
ANR	4950401	Symbol	file6		4947303						
ANR	4950402	Symbol	file4		4947303						
ANR	4950403	Symbol	file5		4947303						
ANR	4950404	Symbol	isOkay		4947303						
ANR	4950405	Symbol	file2		4947303						
ANR	4950406	Symbol	file3		4947303						
ANR	4950407	Symbol	file1		4947303						
ANR	4950408	Symbol	log5 . initialize		4947303						
ANR	4950409	Function	monitorLogFile	688:0:18238:18554							
ANR	4950410	FunctionDef	"monitorLogFile (ReadMultipleUserLogs & reader , const char * logfile , bool truncateIfFirst)"		4950409	0					
ANR	4950411	CompoundStatement		691:0:18336:18554	4950409	0					
ANR	4950412	IdentifierDeclStatement	CondorError errstack ;	692:1:18339:18359	4950409	0	True				
ANR	4950413	IdentifierDecl	errstack		4950409	0					
ANR	4950414	IdentifierDeclType	CondorError		4950409	0					
ANR	4950415	Identifier	errstack		4950409	1					
ANR	4950416	IfStatement	"if ( ! reader . monitorLogFile ( logfile , truncateIfFirst , errstack ) )"		4950409	1					
ANR	4950417	Condition	"! reader . monitorLogFile ( logfile , truncateIfFirst , errstack )"	693:6:18367:18426	4950409	0	True				
ANR	4950418	UnaryOperationExpression	"! reader . monitorLogFile ( logfile , truncateIfFirst , errstack )"		4950409	0					
ANR	4950419	UnaryOperator	!		4950409	0					
ANR	4950420	CallExpression	"reader . monitorLogFile ( logfile , truncateIfFirst , errstack )"		4950409	1					
ANR	4950421	Callee	reader . monitorLogFile		4950409	0					
ANR	4950422	MemberAccess	reader . monitorLogFile		4950409	0					
ANR	4950423	Identifier	reader		4950409	0					
ANR	4950424	Identifier	monitorLogFile		4950409	1					
ANR	4950425	ArgumentList	logfile		4950409	1					
ANR	4950426	Argument	logfile		4950409	0					
ANR	4950427	Identifier	logfile		4950409	0					
ANR	4950428	Argument	truncateIfFirst		4950409	1					
ANR	4950429	Identifier	truncateIfFirst		4950409	0					
ANR	4950430	Argument	errstack		4950409	2					
ANR	4950431	Identifier	errstack		4950409	0					
ANR	4950432	CompoundStatement		3:69:93:93	4950409	1					
ANR	4950433	ExpressionStatement	"printf ( ""Error monitoring log file %s: %s\\n"" , logfile , errstack . getFullText ( ) )"	694:2:18434:18518	4950409	0	True				
ANR	4950434	CallExpression	"printf ( ""Error monitoring log file %s: %s\\n"" , logfile , errstack . getFullText ( ) )"		4950409	0					
ANR	4950435	Callee	printf		4950409	0					
ANR	4950436	Identifier	printf		4950409	0					
ANR	4950437	ArgumentList	"""Error monitoring log file %s: %s\\n"""		4950409	1					
ANR	4950438	Argument	"""Error monitoring log file %s: %s\\n"""		4950409	0					
ANR	4950439	PrimaryExpression	"""Error monitoring log file %s: %s\\n"""		4950409	0					
ANR	4950440	Argument	logfile		4950409	1					
ANR	4950441	Identifier	logfile		4950409	0					
ANR	4950442	Argument	errstack . getFullText ( )		4950409	2					
ANR	4950443	CallExpression	errstack . getFullText ( )		4950409	0					
ANR	4950444	Callee	errstack . getFullText		4950409	0					
ANR	4950445	MemberAccess	errstack . getFullText		4950409	0					
ANR	4950446	Identifier	errstack		4950409	0					
ANR	4950447	Identifier	getFullText		4950409	1					
ANR	4950448	ArgumentList			4950409	1					
ANR	4950449	ReturnStatement	return false ;	696:2:18522:18534	4950409	1	True				
ANR	4950450	Identifier	false		4950409	0					
ANR	4950451	ReturnStatement	return true ;	699:1:18541:18552	4950409	2	True				
ANR	4950452	Identifier	true		4950409	0					
ANR	4950453	ReturnType	bool		4950409	1					
ANR	4950454	Identifier	monitorLogFile		4950409	2					
ANR	4950455	ParameterList	"ReadMultipleUserLogs & reader , const char * logfile , bool truncateIfFirst"		4950409	3					
ANR	4950456	Parameter	ReadMultipleUserLogs & reader	689:16:18259:18286	4950409	0	True				
ANR	4950457	ParameterType	ReadMultipleUserLogs &		4950409	0					
ANR	4950458	Identifier	reader		4950409	1					
ANR	4950459	Parameter	const char * logfile	689:46:18289:18307	4950409	1	True				
ANR	4950460	ParameterType	const char *		4950409	0					
ANR	4950461	Identifier	logfile		4950409	1					
ANR	4950462	Parameter	bool truncateIfFirst	690:3:18313:18332	4950409	2	True				
ANR	4950463	ParameterType	bool		4950409	0					
ANR	4950464	Identifier	truncateIfFirst		4950409	1					
ANR	4950465	CFGEntryNode	ENTRY		4950409		True				
ANR	4950466	CFGExitNode	EXIT		4950409		True				
ANR	4950467	Symbol	errstack		4950409						
ANR	4950468	Symbol	reader		4950409						
ANR	4950469	Symbol	logfile		4950409						
ANR	4950470	Symbol	false		4950409						
ANR	4950471	Symbol	true		4950409						
ANR	4950472	Symbol	errstack . getFullText		4950409						
ANR	4950473	Symbol	truncateIfFirst		4950409						
ANR	4950474	Symbol	reader . monitorLogFile		4950409						
ANR	4950475	Function	unmonitorLogFile	703:0:18589:18869							
ANR	4950476	FunctionDef	"unmonitorLogFile (ReadMultipleUserLogs & reader , const char * logfile)"		4950475	0					
ANR	4950477	CompoundStatement		705:0:18664:18869	4950475	0					
ANR	4950478	IdentifierDeclStatement	CondorError errstack ;	706:1:18667:18687	4950475	0	True				
ANR	4950479	IdentifierDecl	errstack		4950475	0					
ANR	4950480	IdentifierDeclType	CondorError		4950475	0					
ANR	4950481	Identifier	errstack		4950475	1					
ANR	4950482	IfStatement	"if ( ! reader . unmonitorLogFile ( logfile , errstack ) )"		4950475	1					
ANR	4950483	Condition	"! reader . unmonitorLogFile ( logfile , errstack )"	707:6:18695:18739	4950475	0	True				
ANR	4950484	UnaryOperationExpression	"! reader . unmonitorLogFile ( logfile , errstack )"		4950475	0					
ANR	4950485	UnaryOperator	!		4950475	0					
ANR	4950486	CallExpression	"reader . unmonitorLogFile ( logfile , errstack )"		4950475	1					
ANR	4950487	Callee	reader . unmonitorLogFile		4950475	0					
ANR	4950488	MemberAccess	reader . unmonitorLogFile		4950475	0					
ANR	4950489	Identifier	reader		4950475	0					
ANR	4950490	Identifier	unmonitorLogFile		4950475	1					
ANR	4950491	ArgumentList	logfile		4950475	1					
ANR	4950492	Argument	logfile		4950475	0					
ANR	4950493	Identifier	logfile		4950475	0					
ANR	4950494	Argument	errstack		4950475	1					
ANR	4950495	Identifier	errstack		4950475	0					
ANR	4950496	CompoundStatement		3:54:78:78	4950475	1					
ANR	4950497	ExpressionStatement	"printf ( ""Error unmonitoring log file %s: %s\\n"" , logfile , errstack . getFullText ( ) )"	708:2:18747:18833	4950475	0	True				
ANR	4950498	CallExpression	"printf ( ""Error unmonitoring log file %s: %s\\n"" , logfile , errstack . getFullText ( ) )"		4950475	0					
ANR	4950499	Callee	printf		4950475	0					
ANR	4950500	Identifier	printf		4950475	0					
ANR	4950501	ArgumentList	"""Error unmonitoring log file %s: %s\\n"""		4950475	1					
ANR	4950502	Argument	"""Error unmonitoring log file %s: %s\\n"""		4950475	0					
ANR	4950503	PrimaryExpression	"""Error unmonitoring log file %s: %s\\n"""		4950475	0					
ANR	4950504	Argument	logfile		4950475	1					
ANR	4950505	Identifier	logfile		4950475	0					
ANR	4950506	Argument	errstack . getFullText ( )		4950475	2					
ANR	4950507	CallExpression	errstack . getFullText ( )		4950475	0					
ANR	4950508	Callee	errstack . getFullText		4950475	0					
ANR	4950509	MemberAccess	errstack . getFullText		4950475	0					
ANR	4950510	Identifier	errstack		4950475	0					
ANR	4950511	Identifier	getFullText		4950475	1					
ANR	4950512	ArgumentList			4950475	1					
ANR	4950513	ReturnStatement	return false ;	710:2:18837:18849	4950475	1	True				
ANR	4950514	Identifier	false		4950475	0					
ANR	4950515	ReturnStatement	return true ;	713:1:18856:18867	4950475	2	True				
ANR	4950516	Identifier	true		4950475	0					
ANR	4950517	ReturnType	bool		4950475	1					
ANR	4950518	Identifier	unmonitorLogFile		4950475	2					
ANR	4950519	ParameterList	"ReadMultipleUserLogs & reader , const char * logfile"		4950475	3					
ANR	4950520	Parameter	ReadMultipleUserLogs & reader	704:18:18612:18639	4950475	0	True				
ANR	4950521	ParameterType	ReadMultipleUserLogs &		4950475	0					
ANR	4950522	Identifier	reader		4950475	1					
ANR	4950523	Parameter	const char * logfile	704:48:18642:18660	4950475	1	True				
ANR	4950524	ParameterType	const char *		4950475	0					
ANR	4950525	Identifier	logfile		4950475	1					
ANR	4950526	CFGEntryNode	ENTRY		4950475		True				
ANR	4950527	CFGExitNode	EXIT		4950475		True				
ANR	4950528	Symbol	errstack		4950475						
ANR	4950529	Symbol	reader . unmonitorLogFile		4950475						
ANR	4950530	Symbol	reader		4950475						
ANR	4950531	Symbol	logfile		4950475						
ANR	4950532	Symbol	false		4950475						
ANR	4950533	Symbol	true		4950475						
ANR	4950534	Symbol	errstack . getFullText		4950475						
ANR	4950535	Function	ReadAndTestEvent	717:0:18904:20296							
ANR	4950536	FunctionDef	"ReadAndTestEvent (ReadMultipleUserLogs & reader , ULogEvent * expectedEvent)"		4950535	0					
ANR	4950537	CompoundStatement		719:0:18982:20296	4950535	0					
ANR	4950538	IdentifierDeclStatement	bool isOkay = true ;	720:1:18985:19003	4950535	0	True				
ANR	4950539	IdentifierDecl	isOkay = true		4950535	0					
ANR	4950540	IdentifierDeclType	bool		4950535	0					
ANR	4950541	Identifier	isOkay		4950535	1					
ANR	4950542	AssignmentExpression	isOkay = true		4950535	2		=			
ANR	4950543	Identifier	true		4950535	0					
ANR	4950544	Identifier	true		4950535	1					
ANR	4950545	IdentifierDeclStatement	ULogEvent * event = NULL ;	722:1:19007:19030	4950535	1	True				
ANR	4950546	IdentifierDecl	* event = NULL		4950535	0					
ANR	4950547	IdentifierDeclType	ULogEvent *		4950535	0					
ANR	4950548	Identifier	event		4950535	1					
ANR	4950549	AssignmentExpression	* event = NULL		4950535	2		=			
ANR	4950550	Identifier	NULL		4950535	0					
ANR	4950551	Identifier	NULL		4950535	1					
ANR	4950552	IfStatement	if ( reader . readEvent ( event ) != ULOG_OK )		4950535	2					
ANR	4950553	Condition	reader . readEvent ( event ) != ULOG_OK	723:6:19038:19071	4950535	0	True				
ANR	4950554	EqualityExpression	reader . readEvent ( event ) != ULOG_OK		4950535	0		!=			
ANR	4950555	CallExpression	reader . readEvent ( event )		4950535	0					
ANR	4950556	Callee	reader . readEvent		4950535	0					
ANR	4950557	MemberAccess	reader . readEvent		4950535	0					
ANR	4950558	Identifier	reader		4950535	0					
ANR	4950559	Identifier	readEvent		4950535	1					
ANR	4950560	ArgumentList	event		4950535	1					
ANR	4950561	Argument	event		4950535	0					
ANR	4950562	Identifier	event		4950535	0					
ANR	4950563	Identifier	ULOG_OK		4950535	1					
ANR	4950564	CompoundStatement		5:43:92:92	4950535	1					
ANR	4950565	IfStatement	if ( expectedEvent )		4950535	0					
ANR	4950566	Condition	expectedEvent	724:7:19084:19096	4950535	0	True				
ANR	4950567	Identifier	expectedEvent		4950535	0					
ANR	4950568	CompoundStatement		6:23:117:117	4950535	1					
ANR	4950569	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	725:2:19104:19155	4950535	0	True				
ANR	4950570	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4950535	0					
ANR	4950571	Callee	printf		4950535	0					
ANR	4950572	Identifier	printf		4950535	0					
ANR	4950573	ArgumentList	"""FAILURE at %s, %d: """		4950535	1					
ANR	4950574	Argument	"""FAILURE at %s, %d: """		4950535	0					
ANR	4950575	PrimaryExpression	"""FAILURE at %s, %d: """		4950535	0					
ANR	4950576	Argument	__FILE__		4950535	1					
ANR	4950577	Identifier	__FILE__		4950535	0					
ANR	4950578	Argument	__LINE__		4950535	2					
ANR	4950579	Identifier	__LINE__		4950535	0					
ANR	4950580	ExpressionStatement	"printf ( ""FAIL: error reading event"" )"	726:3:19160:19195	4950535	1	True				
ANR	4950581	CallExpression	"printf ( ""FAIL: error reading event"" )"		4950535	0					
ANR	4950582	Callee	printf		4950535	0					
ANR	4950583	Identifier	printf		4950535	0					
ANR	4950584	ArgumentList	"""FAIL: error reading event"""		4950535	1					
ANR	4950585	Argument	"""FAIL: error reading event"""		4950535	0					
ANR	4950586	PrimaryExpression	"""FAIL: error reading event"""		4950535	0					
ANR	4950587	ExpressionStatement	"printf ( "" (at %s: %d)\\n"" , __FILE__ , __LINE__ )"	727:3:19200:19244	4950535	2	True				
ANR	4950588	CallExpression	"printf ( "" (at %s: %d)\\n"" , __FILE__ , __LINE__ )"		4950535	0					
ANR	4950589	Callee	printf		4950535	0					
ANR	4950590	Identifier	printf		4950535	0					
ANR	4950591	ArgumentList	""" (at %s: %d)\\n"""		4950535	1					
ANR	4950592	Argument	""" (at %s: %d)\\n"""		4950535	0					
ANR	4950593	PrimaryExpression	""" (at %s: %d)\\n"""		4950535	0					
ANR	4950594	Argument	__FILE__		4950535	1					
ANR	4950595	Identifier	__FILE__		4950535	0					
ANR	4950596	Argument	__LINE__		4950535	2					
ANR	4950597	Identifier	__LINE__		4950535	0					
ANR	4950598	ExpressionStatement	fflush ( stdout )	728:3:19249:19263	4950535	3	True				
ANR	4950599	CallExpression	fflush ( stdout )		4950535	0					
ANR	4950600	Callee	fflush		4950535	0					
ANR	4950601	Identifier	fflush		4950535	0					
ANR	4950602	ArgumentList	stdout		4950535	1					
ANR	4950603	Argument	stdout		4950535	0					
ANR	4950604	Identifier	stdout		4950535	0					
ANR	4950605	ExpressionStatement	isOkay = false	729:3:19268:19282	4950535	4	True				
ANR	4950606	AssignmentExpression	isOkay = false		4950535	0		=			
ANR	4950607	Identifier	isOkay		4950535	0					
ANR	4950608	Identifier	false		4950535	1					
ANR	4950609	ElseStatement	else		4950535	0					
ANR	4950610	CompoundStatement		13:8:313:313	4950535	0					
ANR	4950611	IfStatement	if ( verbosity >= 1 )		4950535	0					
ANR	4950612	Condition	verbosity >= 1	732:7:19305:19318	4950535	0	True				
ANR	4950613	RelationalExpression	verbosity >= 1		4950535	0		>=			
ANR	4950614	Identifier	verbosity		4950535	0					
ANR	4950615	PrimaryExpression	1		4950535	1					
ANR	4950616	ExpressionStatement	PrintEvent ( event )	732:24:19322:19339	4950535	1	True				
ANR	4950617	CallExpression	PrintEvent ( event )		4950535	0					
ANR	4950618	Callee	PrintEvent		4950535	0					
ANR	4950619	Identifier	PrintEvent		4950535	0					
ANR	4950620	ArgumentList	event		4950535	1					
ANR	4950621	Argument	event		4950535	0					
ANR	4950622	Identifier	event		4950535	0					
ANR	4950623	IfStatement	if ( expectedEvent )		4950535	1					
ANR	4950624	Condition	expectedEvent	734:7:19349:19361	4950535	0	True				
ANR	4950625	Identifier	expectedEvent		4950535	0					
ANR	4950626	CompoundStatement		16:23:382:382	4950535	1					
ANR	4950627	IfStatement	if ( expectedEvent -> eventNumber != event -> eventNumber || expectedEvent -> cluster != event -> cluster || expectedEvent -> proc != event -> proc || expectedEvent -> subproc != event -> subproc )		4950535	0					
ANR	4950628	Condition	expectedEvent -> eventNumber != event -> eventNumber || expectedEvent -> cluster != event -> cluster || expectedEvent -> proc != event -> proc || expectedEvent -> subproc != event -> subproc	735:8:19375:19563	4950535	0	True				
ANR	4950629	OrExpression	expectedEvent -> eventNumber != event -> eventNumber || expectedEvent -> cluster != event -> cluster || expectedEvent -> proc != event -> proc || expectedEvent -> subproc != event -> subproc		4950535	0		||			
ANR	4950630	EqualityExpression	expectedEvent -> eventNumber != event -> eventNumber		4950535	0		!=			
ANR	4950631	PtrMemberAccess	expectedEvent -> eventNumber		4950535	0					
ANR	4950632	Identifier	expectedEvent		4950535	0					
ANR	4950633	Identifier	eventNumber		4950535	1					
ANR	4950634	PtrMemberAccess	event -> eventNumber		4950535	1					
ANR	4950635	Identifier	event		4950535	0					
ANR	4950636	Identifier	eventNumber		4950535	1					
ANR	4950637	OrExpression	expectedEvent -> cluster != event -> cluster || expectedEvent -> proc != event -> proc || expectedEvent -> subproc != event -> subproc		4950535	1		||			
ANR	4950638	EqualityExpression	expectedEvent -> cluster != event -> cluster		4950535	0		!=			
ANR	4950639	PtrMemberAccess	expectedEvent -> cluster		4950535	0					
ANR	4950640	Identifier	expectedEvent		4950535	0					
ANR	4950641	Identifier	cluster		4950535	1					
ANR	4950642	PtrMemberAccess	event -> cluster		4950535	1					
ANR	4950643	Identifier	event		4950535	0					
ANR	4950644	Identifier	cluster		4950535	1					
ANR	4950645	OrExpression	expectedEvent -> proc != event -> proc || expectedEvent -> subproc != event -> subproc		4950535	1		||			
ANR	4950646	EqualityExpression	expectedEvent -> proc != event -> proc		4950535	0		!=			
ANR	4950647	PtrMemberAccess	expectedEvent -> proc		4950535	0					
ANR	4950648	Identifier	expectedEvent		4950535	0					
ANR	4950649	Identifier	proc		4950535	1					
ANR	4950650	PtrMemberAccess	event -> proc		4950535	1					
ANR	4950651	Identifier	event		4950535	0					
ANR	4950652	Identifier	proc		4950535	1					
ANR	4950653	EqualityExpression	expectedEvent -> subproc != event -> subproc		4950535	1		!=			
ANR	4950654	PtrMemberAccess	expectedEvent -> subproc		4950535	0					
ANR	4950655	Identifier	expectedEvent		4950535	0					
ANR	4950656	Identifier	subproc		4950535	1					
ANR	4950657	PtrMemberAccess	event -> subproc		4950535	1					
ANR	4950658	Identifier	event		4950535	0					
ANR	4950659	Identifier	subproc		4950535	1					
ANR	4950660	CompoundStatement		20:48:584:584	4950535	1					
ANR	4950661	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	739:2:19571:19622	4950535	0	True				
ANR	4950662	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4950535	0					
ANR	4950663	Callee	printf		4950535	0					
ANR	4950664	Identifier	printf		4950535	0					
ANR	4950665	ArgumentList	"""FAILURE at %s, %d: """		4950535	1					
ANR	4950666	Argument	"""FAILURE at %s, %d: """		4950535	0					
ANR	4950667	PrimaryExpression	"""FAILURE at %s, %d: """		4950535	0					
ANR	4950668	Argument	__FILE__		4950535	1					
ANR	4950669	Identifier	__FILE__		4950535	0					
ANR	4950670	Argument	__LINE__		4950535	2					
ANR	4950671	Identifier	__LINE__		4950535	0					
ANR	4950672	ExpressionStatement	"printf ( ""FAIL: event read does not match expected event"" )"	740:4:19628:19684	4950535	1	True				
ANR	4950673	CallExpression	"printf ( ""FAIL: event read does not match expected event"" )"		4950535	0					
ANR	4950674	Callee	printf		4950535	0					
ANR	4950675	Identifier	printf		4950535	0					
ANR	4950676	ArgumentList	"""FAIL: event read does not match expected event"""		4950535	1					
ANR	4950677	Argument	"""FAIL: event read does not match expected event"""		4950535	0					
ANR	4950678	PrimaryExpression	"""FAIL: event read does not match expected event"""		4950535	0					
ANR	4950679	ExpressionStatement	"printf ( "" (at %s: %d)\\n"" , __FILE__ , __LINE__ )"	741:4:19690:19734	4950535	2	True				
ANR	4950680	CallExpression	"printf ( "" (at %s: %d)\\n"" , __FILE__ , __LINE__ )"		4950535	0					
ANR	4950681	Callee	printf		4950535	0					
ANR	4950682	Identifier	printf		4950535	0					
ANR	4950683	ArgumentList	""" (at %s: %d)\\n"""		4950535	1					
ANR	4950684	Argument	""" (at %s: %d)\\n"""		4950535	0					
ANR	4950685	PrimaryExpression	""" (at %s: %d)\\n"""		4950535	0					
ANR	4950686	Argument	__FILE__		4950535	1					
ANR	4950687	Identifier	__FILE__		4950535	0					
ANR	4950688	Argument	__LINE__		4950535	2					
ANR	4950689	Identifier	__LINE__		4950535	0					
ANR	4950690	ExpressionStatement	"printf ( ""  Expected event: "" )"	742:4:19740:19768	4950535	3	True				
ANR	4950691	CallExpression	"printf ( ""  Expected event: "" )"		4950535	0					
ANR	4950692	Callee	printf		4950535	0					
ANR	4950693	Identifier	printf		4950535	0					
ANR	4950694	ArgumentList	"""  Expected event: """		4950535	1					
ANR	4950695	Argument	"""  Expected event: """		4950535	0					
ANR	4950696	PrimaryExpression	"""  Expected event: """		4950535	0					
ANR	4950697	ExpressionStatement	PrintEvent ( expectedEvent )	743:4:19774:19799	4950535	4	True				
ANR	4950698	CallExpression	PrintEvent ( expectedEvent )		4950535	0					
ANR	4950699	Callee	PrintEvent		4950535	0					
ANR	4950700	Identifier	PrintEvent		4950535	0					
ANR	4950701	ArgumentList	expectedEvent		4950535	1					
ANR	4950702	Argument	expectedEvent		4950535	0					
ANR	4950703	Identifier	expectedEvent		4950535	0					
ANR	4950704	ExpressionStatement	"printf ( ""  Event read: "" )"	744:4:19805:19829	4950535	5	True				
ANR	4950705	CallExpression	"printf ( ""  Event read: "" )"		4950535	0					
ANR	4950706	Callee	printf		4950535	0					
ANR	4950707	Identifier	printf		4950535	0					
ANR	4950708	ArgumentList	"""  Event read: """		4950535	1					
ANR	4950709	Argument	"""  Event read: """		4950535	0					
ANR	4950710	PrimaryExpression	"""  Event read: """		4950535	0					
ANR	4950711	ExpressionStatement	PrintEvent ( event )	745:4:19835:19852	4950535	6	True				
ANR	4950712	CallExpression	PrintEvent ( event )		4950535	0					
ANR	4950713	Callee	PrintEvent		4950535	0					
ANR	4950714	Identifier	PrintEvent		4950535	0					
ANR	4950715	ArgumentList	event		4950535	1					
ANR	4950716	Argument	event		4950535	0					
ANR	4950717	Identifier	event		4950535	0					
ANR	4950718	ExpressionStatement	fflush ( stdout )	746:4:19858:19872	4950535	7	True				
ANR	4950719	CallExpression	fflush ( stdout )		4950535	0					
ANR	4950720	Callee	fflush		4950535	0					
ANR	4950721	Identifier	fflush		4950535	0					
ANR	4950722	ArgumentList	stdout		4950535	1					
ANR	4950723	Argument	stdout		4950535	0					
ANR	4950724	Identifier	stdout		4950535	0					
ANR	4950725	ExpressionStatement	isOkay = false	747:4:19878:19892	4950535	8	True				
ANR	4950726	AssignmentExpression	isOkay = false		4950535	0		=			
ANR	4950727	Identifier	isOkay		4950535	0					
ANR	4950728	Identifier	false		4950535	1					
ANR	4950729	ElseStatement	else		4950535	0					
ANR	4950730	CompoundStatement		31:9:925:925	4950535	0					
ANR	4950731	ExpressionStatement	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"	750:2:19912:19963	4950535	0	True				
ANR	4950732	CallExpression	"printf ( ""FAILURE at %s, %d: "" , __FILE__ , __LINE__ )"		4950535	0					
ANR	4950733	Callee	printf		4950535	0					
ANR	4950734	Identifier	printf		4950535	0					
ANR	4950735	ArgumentList	"""FAILURE at %s, %d: """		4950535	1					
ANR	4950736	Argument	"""FAILURE at %s, %d: """		4950535	0					
ANR	4950737	PrimaryExpression	"""FAILURE at %s, %d: """		4950535	0					
ANR	4950738	Argument	__FILE__		4950535	1					
ANR	4950739	Identifier	__FILE__		4950535	0					
ANR	4950740	Argument	__LINE__		4950535	2					
ANR	4950741	Identifier	__LINE__		4950535	0					
ANR	4950742	ExpressionStatement	"printf ( ""FAIL: should NOT have gotten an event"" )"	751:3:19968:20015	4950535	1	True				
ANR	4950743	CallExpression	"printf ( ""FAIL: should NOT have gotten an event"" )"		4950535	0					
ANR	4950744	Callee	printf		4950535	0					
ANR	4950745	Identifier	printf		4950535	0					
ANR	4950746	ArgumentList	"""FAIL: should NOT have gotten an event"""		4950535	1					
ANR	4950747	Argument	"""FAIL: should NOT have gotten an event"""		4950535	0					
ANR	4950748	PrimaryExpression	"""FAIL: should NOT have gotten an event"""		4950535	0					
ANR	4950749	ExpressionStatement	"printf ( "" (at %s: %d)\\n"" , __FILE__ , __LINE__ )"	752:3:20020:20064	4950535	2	True				
ANR	4950750	CallExpression	"printf ( "" (at %s: %d)\\n"" , __FILE__ , __LINE__ )"		4950535	0					
ANR	4950751	Callee	printf		4950535	0					
ANR	4950752	Identifier	printf		4950535	0					
ANR	4950753	ArgumentList	""" (at %s: %d)\\n"""		4950535	1					
ANR	4950754	Argument	""" (at %s: %d)\\n"""		4950535	0					
ANR	4950755	PrimaryExpression	""" (at %s: %d)\\n"""		4950535	0					
ANR	4950756	Argument	__FILE__		4950535	1					
ANR	4950757	Identifier	__FILE__		4950535	0					
ANR	4950758	Argument	__LINE__		4950535	2					
ANR	4950759	Identifier	__LINE__		4950535	0					
ANR	4950760	ExpressionStatement	fflush ( stdout )	753:3:20069:20083	4950535	3	True				
ANR	4950761	CallExpression	fflush ( stdout )		4950535	0					
ANR	4950762	Callee	fflush		4950535	0					
ANR	4950763	Identifier	fflush		4950535	0					
ANR	4950764	ArgumentList	stdout		4950535	1					
ANR	4950765	Argument	stdout		4950535	0					
ANR	4950766	Identifier	stdout		4950535	0					
ANR	4950767	ExpressionStatement	isOkay = false	754:3:20088:20102	4950535	4	True				
ANR	4950768	AssignmentExpression	isOkay = false		4950535	0		=			
ANR	4950769	Identifier	isOkay		4950535	0					
ANR	4950770	Identifier	false		4950535	1					
ANR	4950771	IfStatement	if ( ! isOkay )		4950535	3					
ANR	4950772	Condition	! isOkay	758:6:20118:20124	4950535	0	True				
ANR	4950773	UnaryOperationExpression	! isOkay		4950535	0					
ANR	4950774	UnaryOperator	!		4950535	0					
ANR	4950775	Identifier	isOkay		4950535	1					
ANR	4950776	CompoundStatement		40:16:1145:1145	4950535	1					
ANR	4950777	ExpressionStatement	"printf ( ""  Expecting "" )"	759:2:20132:20154	4950535	0	True				
ANR	4950778	CallExpression	"printf ( ""  Expecting "" )"		4950535	0					
ANR	4950779	Callee	printf		4950535	0					
ANR	4950780	Identifier	printf		4950535	0					
ANR	4950781	ArgumentList	"""  Expecting """		4950535	1					
ANR	4950782	Argument	"""  Expecting """		4950535	0					
ANR	4950783	PrimaryExpression	"""  Expecting """		4950535	0					
ANR	4950784	ExpressionStatement	PrintEvent ( expectedEvent )	760:2:20158:20183	4950535	1	True				
ANR	4950785	CallExpression	PrintEvent ( expectedEvent )		4950535	0					
ANR	4950786	Callee	PrintEvent		4950535	0					
ANR	4950787	Identifier	PrintEvent		4950535	0					
ANR	4950788	ArgumentList	expectedEvent		4950535	1					
ANR	4950789	Argument	expectedEvent		4950535	0					
ANR	4950790	Identifier	expectedEvent		4950535	0					
ANR	4950791	ExpressionStatement	"printf ( ""; got "" )"	761:2:20187:20203	4950535	2	True				
ANR	4950792	CallExpression	"printf ( ""; got "" )"		4950535	0					
ANR	4950793	Callee	printf		4950535	0					
ANR	4950794	Identifier	printf		4950535	0					
ANR	4950795	ArgumentList	"""; got """		4950535	1					
ANR	4950796	Argument	"""; got """		4950535	0					
ANR	4950797	PrimaryExpression	"""; got """		4950535	0					
ANR	4950798	ExpressionStatement	PrintEvent ( event )	762:2:20207:20224	4950535	3	True				
ANR	4950799	CallExpression	PrintEvent ( event )		4950535	0					
ANR	4950800	Callee	PrintEvent		4950535	0					
ANR	4950801	Identifier	PrintEvent		4950535	0					
ANR	4950802	ArgumentList	event		4950535	1					
ANR	4950803	Argument	event		4950535	0					
ANR	4950804	Identifier	event		4950535	0					
ANR	4950805	ExpressionStatement	"printf ( ""\\n"" )"	763:2:20228:20240	4950535	4	True				
ANR	4950806	CallExpression	"printf ( ""\\n"" )"		4950535	0					
ANR	4950807	Callee	printf		4950535	0					
ANR	4950808	Identifier	printf		4950535	0					
ANR	4950809	ArgumentList	"""\\n"""		4950535	1					
ANR	4950810	Argument	"""\\n"""		4950535	0					
ANR	4950811	PrimaryExpression	"""\\n"""		4950535	0					
ANR	4950812	ExpressionStatement	fflush ( stdout )	764:2:20244:20258	4950535	5	True				
ANR	4950813	CallExpression	fflush ( stdout )		4950535	0					
ANR	4950814	Callee	fflush		4950535	0					
ANR	4950815	Identifier	fflush		4950535	0					
ANR	4950816	ArgumentList	stdout		4950535	1					
ANR	4950817	Argument	stdout		4950535	0					
ANR	4950818	Identifier	stdout		4950535	0					
ANR	4950819	Statement	delete	767:1:20265:20270	4950535	4	True				
ANR	4950820	ExpressionStatement	event	767:8:20272:20277	4950535	5	True				
ANR	4950821	Identifier	event		4950535	0					
ANR	4950822	ReturnStatement	return isOkay ;	769:1:20281:20294	4950535	6	True				
ANR	4950823	Identifier	isOkay		4950535	0					
ANR	4950824	ReturnType	bool		4950535	1					
ANR	4950825	Identifier	ReadAndTestEvent		4950535	2					
ANR	4950826	ParameterList	"ReadMultipleUserLogs & reader , ULogEvent * expectedEvent"		4950535	3					
ANR	4950827	Parameter	ReadMultipleUserLogs & reader	718:17:18926:18953	4950535	0	True				
ANR	4950828	ParameterType	ReadMultipleUserLogs &		4950535	0					
ANR	4950829	Identifier	reader		4950535	1					
ANR	4950830	Parameter	ULogEvent * expectedEvent	718:47:18956:18979	4950535	1	True				
ANR	4950831	ParameterType	ULogEvent *		4950535	0					
ANR	4950832	Identifier	expectedEvent		4950535	1					
ANR	4950833	CFGEntryNode	ENTRY		4950535		True				
ANR	4950834	CFGExitNode	EXIT		4950535		True				
ANR	4950835	Symbol	NULL		4950535						
ANR	4950836	Symbol	* event		4950535						
ANR	4950837	Symbol	stdout		4950535						
ANR	4950838	Symbol	reader		4950535						
ANR	4950839	Symbol	__FILE__		4950535						
ANR	4950840	Symbol	false		4950535						
ANR	4950841	Symbol	expectedEvent -> subproc		4950535						
ANR	4950842	Symbol	reader . readEvent		4950535						
ANR	4950843	Symbol	expectedEvent -> proc		4950535						
ANR	4950844	Symbol	__LINE__		4950535						
ANR	4950845	Symbol	event -> subproc		4950535						
ANR	4950846	Symbol	expectedEvent -> eventNumber		4950535						
ANR	4950847	Symbol	ULOG_OK		4950535						
ANR	4950848	Symbol	expectedEvent -> cluster		4950535						
ANR	4950849	Symbol	isOkay		4950535						
ANR	4950850	Symbol	true		4950535						
ANR	4950851	Symbol	* expectedEvent		4950535						
ANR	4950852	Symbol	expectedEvent		4950535						
ANR	4950853	Symbol	event		4950535						
ANR	4950854	Symbol	event -> eventNumber		4950535						
ANR	4950855	Symbol	verbosity		4950535						
ANR	4950856	Symbol	event -> proc		4950535						
ANR	4950857	Symbol	event -> cluster		4950535						
ANR	4950858	Function	PrintEvent	772:0:20299:20550							
ANR	4950859	FunctionDef	PrintEvent (ULogEvent * event)		4950858	0					
ANR	4950860	CompoundStatement		774:0:20333:20550	4950858	0					
ANR	4950861	IfStatement	if ( event )		4950858	0					
ANR	4950862	Condition	event	775:6:20341:20345	4950858	0	True				
ANR	4950863	Identifier	event		4950858	0					
ANR	4950864	CompoundStatement		2:14:15:15	4950858	1					
ANR	4950865	ExpressionStatement	"printf ( ""Event: %d.%d.%d: %s"" , event -> cluster , event -> proc , event -> subproc , ULogEventNumberNames [ event -> eventNumber ] )"	776:2:20353:20472	4950858	0	True				
ANR	4950866	CallExpression	"printf ( ""Event: %d.%d.%d: %s"" , event -> cluster , event -> proc , event -> subproc , ULogEventNumberNames [ event -> eventNumber ] )"		4950858	0					
ANR	4950867	Callee	printf		4950858	0					
ANR	4950868	Identifier	printf		4950858	0					
ANR	4950869	ArgumentList	"""Event: %d.%d.%d: %s"""		4950858	1					
ANR	4950870	Argument	"""Event: %d.%d.%d: %s"""		4950858	0					
ANR	4950871	PrimaryExpression	"""Event: %d.%d.%d: %s"""		4950858	0					
ANR	4950872	Argument	event -> cluster		4950858	1					
ANR	4950873	PtrMemberAccess	event -> cluster		4950858	0					
ANR	4950874	Identifier	event		4950858	0					
ANR	4950875	Identifier	cluster		4950858	1					
ANR	4950876	Argument	event -> proc		4950858	2					
ANR	4950877	PtrMemberAccess	event -> proc		4950858	0					
ANR	4950878	Identifier	event		4950858	0					
ANR	4950879	Identifier	proc		4950858	1					
ANR	4950880	Argument	event -> subproc		4950858	3					
ANR	4950881	PtrMemberAccess	event -> subproc		4950858	0					
ANR	4950882	Identifier	event		4950858	0					
ANR	4950883	Identifier	subproc		4950858	1					
ANR	4950884	Argument	ULogEventNumberNames [ event -> eventNumber ]		4950858	4					
ANR	4950885	ArrayIndexing	ULogEventNumberNames [ event -> eventNumber ]		4950858	0					
ANR	4950886	Identifier	ULogEventNumberNames		4950858	0					
ANR	4950887	PtrMemberAccess	event -> eventNumber		4950858	1					
ANR	4950888	Identifier	event		4950858	0					
ANR	4950889	Identifier	eventNumber		4950858	1					
ANR	4950890	ExpressionStatement	fflush ( stdout )	778:2:20476:20490	4950858	1	True				
ANR	4950891	CallExpression	fflush ( stdout )		4950858	0					
ANR	4950892	Callee	fflush		4950858	0					
ANR	4950893	Identifier	fflush		4950858	0					
ANR	4950894	ArgumentList	stdout		4950858	1					
ANR	4950895	Argument	stdout		4950858	0					
ANR	4950896	Identifier	stdout		4950858	0					
ANR	4950897	ElseStatement	else		4950858	0					
ANR	4950898	CompoundStatement		6:8:166:166	4950858	0					
ANR	4950899	ExpressionStatement	"printf ( ""Event: NULL\\n"" )"	780:2:20504:20527	4950858	0	True				
ANR	4950900	CallExpression	"printf ( ""Event: NULL\\n"" )"		4950858	0					
ANR	4950901	Callee	printf		4950858	0					
ANR	4950902	Identifier	printf		4950858	0					
ANR	4950903	ArgumentList	"""Event: NULL\\n"""		4950858	1					
ANR	4950904	Argument	"""Event: NULL\\n"""		4950858	0					
ANR	4950905	PrimaryExpression	"""Event: NULL\\n"""		4950858	0					
ANR	4950906	ExpressionStatement	fflush ( stdout )	781:2:20531:20545	4950858	1	True				
ANR	4950907	CallExpression	fflush ( stdout )		4950858	0					
ANR	4950908	Callee	fflush		4950858	0					
ANR	4950909	Identifier	fflush		4950858	0					
ANR	4950910	ArgumentList	stdout		4950858	1					
ANR	4950911	Argument	stdout		4950858	0					
ANR	4950912	Identifier	stdout		4950858	0					
ANR	4950913	ReturnType	void		4950858	1					
ANR	4950914	Identifier	PrintEvent		4950858	2					
ANR	4950915	ParameterList	ULogEvent * event		4950858	3					
ANR	4950916	Parameter	ULogEvent * event	773:11:20315:20330	4950858	0	True				
ANR	4950917	ParameterType	ULogEvent *		4950858	0					
ANR	4950918	Identifier	event		4950858	1					
ANR	4950919	CFGEntryNode	ENTRY		4950858		True				
ANR	4950920	CFGExitNode	EXIT		4950858		True				
ANR	4950921	Symbol	ULogEventNumberNames		4950858						
ANR	4950922	Symbol	* event		4950858						
ANR	4950923	Symbol	stdout		4950858						
ANR	4950924	Symbol	* event -> eventNumber		4950858						
ANR	4950925	Symbol	* * event		4950858						
ANR	4950926	Symbol	event		4950858						
ANR	4950927	Symbol	* ULogEventNumberNames		4950858						
ANR	4950928	Symbol	event -> eventNumber		4950858						
ANR	4950929	Symbol	event -> subproc		4950858						
ANR	4950930	Symbol	event -> proc		4950858						
ANR	4950931	Symbol	event -> cluster		4950858						
