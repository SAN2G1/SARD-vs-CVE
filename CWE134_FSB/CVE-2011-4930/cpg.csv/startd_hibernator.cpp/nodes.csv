command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5226635	File	data/converged/CVE-2011-4930_htcondor/startd_hibernator.cpp								
ANR	5226636	Function	StartdHibernator :: StartdHibernator	38:0:1250:1363							
ANR	5226637	FunctionDef	StartdHibernator :: StartdHibernator ()		5226636	0					
ANR	5226638	CompoundStatement		41:0:1349:1363	5226636	0					
ANR	5226639	ExpressionStatement	update ( )	42:1:1352:1361	5226636	0	True				
ANR	5226640	CallExpression	update ( )		5226636	0					
ANR	5226641	Callee	update		5226636	0					
ANR	5226642	Identifier	update		5226636	0					
ANR	5226643	ArgumentList			5226636	1					
ANR	5226644	Identifier	StartdHibernator :: StartdHibernator		5226636	1					
ANR	5226645	ParameterList			5226636	2					
ANR	5226646	CFGEntryNode	ENTRY		5226636		True				
ANR	5226647	CFGExitNode	EXIT		5226636		True				
ANR	5226648	Function	StartdHibernator :: ~StartdHibernator	45:0:1366:1471							
ANR	5226649	FunctionDef	StartdHibernator :: ~StartdHibernator ()		5226648	0					
ANR	5226650	CompoundStatement		46:0:1419:1471	5226648	0					
ANR	5226651	IfStatement	if ( m_plugin_args )		5226648	0					
ANR	5226652	Condition	m_plugin_args	47:5:1426:1438	5226648	0	True				
ANR	5226653	Identifier	m_plugin_args		5226648	0					
ANR	5226654	CompoundStatement		2:20:21:21	5226648	1					
ANR	5226655	Statement	delete	48:2:1445:1450	5226648	0	True				
ANR	5226656	ExpressionStatement	m_plugin_args	48:9:1452:1465	5226648	1	True				
ANR	5226657	Identifier	m_plugin_args		5226648	0					
ANR	5226658	Identifier	StartdHibernator :: ~StartdHibernator		5226648	1					
ANR	5226659	ParameterList			5226648	2					
ANR	5226660	CFGEntryNode	ENTRY		5226648		True				
ANR	5226661	CFGExitNode	EXIT		5226648		True				
ANR	5226662	Symbol	m_plugin_args		5226648						
ANR	5226663	Function	StartdHibernator :: update	52:0:1474:2145							
ANR	5226664	FunctionDef	StartdHibernator :: update ()		5226663	0					
ANR	5226665	CompoundStatement		54:0:1512:2145	5226663	0					
ANR	5226666	IdentifierDeclStatement	"char * tmp = param ( ""HIBERNATION_PLUGIN"" ) ;"	57:1:1548:1589	5226663	0	True				
ANR	5226667	IdentifierDecl	"* tmp = param ( ""HIBERNATION_PLUGIN"" )"		5226663	0					
ANR	5226668	IdentifierDeclType	char *		5226663	0					
ANR	5226669	Identifier	tmp		5226663	1					
ANR	5226670	AssignmentExpression	"* tmp = param ( ""HIBERNATION_PLUGIN"" )"		5226663	2		=			
ANR	5226671	Identifier	tmp		5226663	0					
ANR	5226672	CallExpression	"param ( ""HIBERNATION_PLUGIN"" )"		5226663	1					
ANR	5226673	Callee	param		5226663	0					
ANR	5226674	Identifier	param		5226663	0					
ANR	5226675	ArgumentList	"""HIBERNATION_PLUGIN"""		5226663	1					
ANR	5226676	Argument	"""HIBERNATION_PLUGIN"""		5226663	0					
ANR	5226677	PrimaryExpression	"""HIBERNATION_PLUGIN"""		5226663	0					
ANR	5226678	IfStatement	if ( NULL != tmp )		5226663	1					
ANR	5226679	Condition	NULL != tmp	58:5:1596:1606	5226663	0	True				
ANR	5226680	EqualityExpression	NULL != tmp		5226663	0		!=			
ANR	5226681	Identifier	NULL		5226663	0					
ANR	5226682	Identifier	tmp		5226663	1					
ANR	5226683	CompoundStatement		5:19:97:97	5226663	1					
ANR	5226684	ExpressionStatement	m_plugin_path = tmp	59:2:1614:1633	5226663	0	True				
ANR	5226685	AssignmentExpression	m_plugin_path = tmp		5226663	0		=			
ANR	5226686	Identifier	m_plugin_path		5226663	0					
ANR	5226687	Identifier	tmp		5226663	1					
ANR	5226688	ExpressionStatement	free ( tmp )	60:2:1637:1648	5226663	1	True				
ANR	5226689	CallExpression	free ( tmp )		5226663	0					
ANR	5226690	Callee	free		5226663	0					
ANR	5226691	Identifier	free		5226663	0					
ANR	5226692	ArgumentList	tmp		5226663	1					
ANR	5226693	Argument	tmp		5226663	0					
ANR	5226694	Identifier	tmp		5226663	0					
ANR	5226695	ElseStatement	else		5226663	0					
ANR	5226696	CompoundStatement		9:6:146:146	5226663	0					
ANR	5226697	ExpressionStatement	"tmp = param ( ""LIBEXEC"" )"	63:2:1663:1687	5226663	0	True				
ANR	5226698	AssignmentExpression	"tmp = param ( ""LIBEXEC"" )"		5226663	0		=			
ANR	5226699	Identifier	tmp		5226663	0					
ANR	5226700	CallExpression	"param ( ""LIBEXEC"" )"		5226663	1					
ANR	5226701	Callee	param		5226663	0					
ANR	5226702	Identifier	param		5226663	0					
ANR	5226703	ArgumentList	"""LIBEXEC"""		5226663	1					
ANR	5226704	Argument	"""LIBEXEC"""		5226663	0					
ANR	5226705	PrimaryExpression	"""LIBEXEC"""		5226663	0					
ANR	5226706	IfStatement	if ( NULL == tmp )		5226663	1					
ANR	5226707	Condition	NULL == tmp	64:6:1695:1705	5226663	0	True				
ANR	5226708	EqualityExpression	NULL == tmp		5226663	0		==			
ANR	5226709	Identifier	NULL		5226663	0					
ANR	5226710	Identifier	tmp		5226663	1					
ANR	5226711	CompoundStatement		11:20:196:196	5226663	1					
ANR	5226712	Statement	dprintf	65:3:1714:1720	5226663	0	True				
ANR	5226713	Statement	(	65:10:1721:1721	5226663	1	True				
ANR	5226714	Statement	D_ALWAYS	65:12:1723:1730	5226663	2	True				
ANR	5226715	Statement	","	65:20:1731:1731	5226663	3	True				
ANR	5226716	Statement	"""Hibernator: neither HIBERNATION_PLUGIN """	66:6:1739:1779	5226663	4	True				
ANR	5226717	Statement	"""nor LIBEXEC defined\\n"""	67:6:1787:1809	5226663	5	True				
ANR	5226718	Statement	)	67:30:1811:1811	5226663	6	True				
ANR	5226719	ExpressionStatement		67:31:1812:1812	5226663	7	True				
ANR	5226720	ReturnStatement	return false ;	68:3:1817:1829	5226663	8	True				
ANR	5226721	Identifier	false		5226663	0					
ANR	5226722	ExpressionStatement	m_plugin_path = tmp	70:2:1837:1857	5226663	2	True				
ANR	5226723	AssignmentExpression	m_plugin_path = tmp		5226663	0		=			
ANR	5226724	Identifier	m_plugin_path		5226663	0					
ANR	5226725	Identifier	tmp		5226663	1					
ANR	5226726	ExpressionStatement	"m_plugin_path += ""/"""	71:2:1861:1881	5226663	3	True				
ANR	5226727	AssignmentExpression	"m_plugin_path += ""/"""		5226663	0		+=			
ANR	5226728	Identifier	m_plugin_path		5226663	0					
ANR	5226729	PrimaryExpression	"""/"""		5226663	1					
ANR	5226730	ExpressionStatement	"m_plugin_path += ""condor_power_state"""	72:2:1885:1922	5226663	4	True				
ANR	5226731	AssignmentExpression	"m_plugin_path += ""condor_power_state"""		5226663	0		+=			
ANR	5226732	Identifier	m_plugin_path		5226663	0					
ANR	5226733	PrimaryExpression	"""condor_power_state"""		5226663	1					
ANR	5226734	ExpressionStatement	free ( tmp )	73:2:1926:1937	5226663	5	True				
ANR	5226735	CallExpression	free ( tmp )		5226663	0					
ANR	5226736	Callee	free		5226663	0					
ANR	5226737	Identifier	free		5226663	0					
ANR	5226738	ArgumentList	tmp		5226663	1					
ANR	5226739	Argument	tmp		5226663	0					
ANR	5226740	Identifier	tmp		5226663	0					
ANR	5226741	IfStatement	if ( m_plugin_args )		5226663	2					
ANR	5226742	Condition	m_plugin_args	76:5:1948:1960	5226663	0	True				
ANR	5226743	Identifier	m_plugin_args		5226663	0					
ANR	5226744	CompoundStatement		23:21:451:451	5226663	1					
ANR	5226745	Statement	delete	77:2:1968:1973	5226663	0	True				
ANR	5226746	ExpressionStatement	m_plugin_args	77:9:1975:1988	5226663	1	True				
ANR	5226747	Identifier	m_plugin_args		5226663	0					
ANR	5226748	ExpressionStatement	m_plugin_args = NULL	78:2:1992:2012	5226663	2	True				
ANR	5226749	AssignmentExpression	m_plugin_args = NULL		5226663	0		=			
ANR	5226750	Identifier	m_plugin_args		5226663	0					
ANR	5226751	Identifier	NULL		5226663	1					
ANR	5226752	ExpressionStatement	"tmp = param ( ""HIBERNATION_PLUGIN_ARGS"" )"	80:1:2018:2056	5226663	3	True				
ANR	5226753	AssignmentExpression	"tmp = param ( ""HIBERNATION_PLUGIN_ARGS"" )"		5226663	0		=			
ANR	5226754	Identifier	tmp		5226663	0					
ANR	5226755	CallExpression	"param ( ""HIBERNATION_PLUGIN_ARGS"" )"		5226663	1					
ANR	5226756	Callee	param		5226663	0					
ANR	5226757	Identifier	param		5226663	0					
ANR	5226758	ArgumentList	"""HIBERNATION_PLUGIN_ARGS"""		5226663	1					
ANR	5226759	Argument	"""HIBERNATION_PLUGIN_ARGS"""		5226663	0					
ANR	5226760	PrimaryExpression	"""HIBERNATION_PLUGIN_ARGS"""		5226663	0					
ANR	5226761	IfStatement	if ( tmp )		5226663	4					
ANR	5226762	Condition	tmp	81:6:2064:2066	5226663	0	True				
ANR	5226763	Identifier	tmp		5226663	0					
ANR	5226764	CompoundStatement		28:12:557:557	5226663	1					
ANR	5226765	ExpressionStatement	m_plugin_args = new StringList ( tmp )	82:2:2074:2111	5226663	0	True				
ANR	5226766	AssignmentExpression	m_plugin_args = new StringList ( tmp )		5226663	0		=			
ANR	5226767	Identifier	m_plugin_args		5226663	0					
ANR	5226768	Identifier	tmp		5226663	1					
ANR	5226769	ExpressionStatement	free ( tmp )	83:2:2115:2126	5226663	1	True				
ANR	5226770	CallExpression	free ( tmp )		5226663	0					
ANR	5226771	Callee	free		5226663	0					
ANR	5226772	Identifier	free		5226663	0					
ANR	5226773	ArgumentList	tmp		5226663	1					
ANR	5226774	Argument	tmp		5226663	0					
ANR	5226775	Identifier	tmp		5226663	0					
ANR	5226776	ReturnStatement	return true ;	85:1:2132:2143	5226663	5	True				
ANR	5226777	Identifier	true		5226663	0					
ANR	5226778	ReturnType	bool		5226663	1					
ANR	5226779	Identifier	StartdHibernator :: update		5226663	2					
ANR	5226780	ParameterList			5226663	3					
ANR	5226781	CFGEntryNode	ENTRY		5226663		True				
ANR	5226782	CFGExitNode	EXIT		5226663		True				
ANR	5226783	Symbol	NULL		5226663						
ANR	5226784	Symbol	param		5226663						
ANR	5226785	Symbol	tmp		5226663						
ANR	5226786	Symbol	false		5226663						
ANR	5226787	Symbol	true		5226663						
ANR	5226788	Symbol	m_plugin_args		5226663						
ANR	5226789	Symbol	m_plugin_path		5226663						
ANR	5226790	Function	StartdHibernator :: initialize	88:0:2148:3566							
ANR	5226791	FunctionDef	StartdHibernator :: initialize ()		5226790	0					
ANR	5226792	CompoundStatement		90:0:2190:3566	5226790	0					
ANR	5226793	IdentifierDeclStatement	"const char * args [ ] = { m_plugin_path . Value ( ) , ""ad"" , NULL } ;"	91:1:2193:2252	5226790	0	True				
ANR	5226794	IdentifierDecl	"* args [ ] = { m_plugin_path . Value ( ) , ""ad"" , NULL }"		5226790	0					
ANR	5226795	IdentifierDeclType	const char * [ ]		5226790	0					
ANR	5226796	Identifier	args		5226790	1					
ANR	5226797	AssignmentExpression	"* args [ ] = { m_plugin_path . Value ( ) , ""ad"" , NULL }"		5226790	2		=			
ANR	5226798	Identifier	args		5226790	0					
ANR	5226799	InitializerList	m_plugin_path . Value ( )		5226790	1					
ANR	5226800	CallExpression	m_plugin_path . Value ( )		5226790	0					
ANR	5226801	Callee	m_plugin_path . Value		5226790	0					
ANR	5226802	MemberAccess	m_plugin_path . Value		5226790	0					
ANR	5226803	Identifier	m_plugin_path		5226790	0					
ANR	5226804	Identifier	Value		5226790	1					
ANR	5226805	ArgumentList			5226790	1					
ANR	5226806	PrimaryExpression	"""ad"""		5226790	1					
ANR	5226807	Identifier	NULL		5226790	2					
ANR	5226808	ExpressionStatement	m_ad . Clear ( )	97:1:2337:2349	5226790	1	True				
ANR	5226809	CallExpression	m_ad . Clear ( )		5226790	0					
ANR	5226810	Callee	m_ad . Clear		5226790	0					
ANR	5226811	MemberAccess	m_ad . Clear		5226790	0					
ANR	5226812	Identifier	m_ad		5226790	0					
ANR	5226813	Identifier	Clear		5226790	1					
ANR	5226814	ArgumentList			5226790	1					
ANR	5226815	IdentifierDeclStatement	"FILE * fp = my_popenv ( args , ""r"" , FALSE ) ;"	98:1:2352:2392	5226790	2	True				
ANR	5226816	IdentifierDecl	"* fp = my_popenv ( args , ""r"" , FALSE )"		5226790	0					
ANR	5226817	IdentifierDeclType	FILE *		5226790	0					
ANR	5226818	Identifier	fp		5226790	1					
ANR	5226819	AssignmentExpression	"* fp = my_popenv ( args , ""r"" , FALSE )"		5226790	2		=			
ANR	5226820	Identifier	fp		5226790	0					
ANR	5226821	CallExpression	"my_popenv ( args , ""r"" , FALSE )"		5226790	1					
ANR	5226822	Callee	my_popenv		5226790	0					
ANR	5226823	Identifier	my_popenv		5226790	0					
ANR	5226824	ArgumentList	args		5226790	1					
ANR	5226825	Argument	args		5226790	0					
ANR	5226826	Identifier	args		5226790	0					
ANR	5226827	Argument	"""r"""		5226790	1					
ANR	5226828	PrimaryExpression	"""r"""		5226790	0					
ANR	5226829	Argument	FALSE		5226790	2					
ANR	5226830	Identifier	FALSE		5226790	0					
ANR	5226831	IfStatement	if ( ! fp )		5226790	3					
ANR	5226832	Condition	! fp	100:5:2400:2403	5226790	0	True				
ANR	5226833	UnaryOperationExpression	! fp		5226790	0					
ANR	5226834	UnaryOperator	!		5226790	0					
ANR	5226835	Identifier	fp		5226790	1					
ANR	5226836	CompoundStatement		11:12:216:216	5226790	1					
ANR	5226837	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to run hibernation plugin '%s ad'\\n"" , m_plugin_path . Value ( ) )"	101:2:2411:2504	5226790	0	True				
ANR	5226838	CallExpression	"dprintf ( D_ALWAYS , ""Failed to run hibernation plugin '%s ad'\\n"" , m_plugin_path . Value ( ) )"		5226790	0					
ANR	5226839	Callee	dprintf		5226790	0					
ANR	5226840	Identifier	dprintf		5226790	0					
ANR	5226841	ArgumentList	D_ALWAYS		5226790	1					
ANR	5226842	Argument	D_ALWAYS		5226790	0					
ANR	5226843	Identifier	D_ALWAYS		5226790	0					
ANR	5226844	Argument	"""Failed to run hibernation plugin '%s ad'\\n"""		5226790	1					
ANR	5226845	PrimaryExpression	"""Failed to run hibernation plugin '%s ad'\\n"""		5226790	0					
ANR	5226846	Argument	m_plugin_path . Value ( )		5226790	2					
ANR	5226847	CallExpression	m_plugin_path . Value ( )		5226790	0					
ANR	5226848	Callee	m_plugin_path . Value		5226790	0					
ANR	5226849	MemberAccess	m_plugin_path . Value		5226790	0					
ANR	5226850	Identifier	m_plugin_path		5226790	0					
ANR	5226851	Identifier	Value		5226790	1					
ANR	5226852	ArgumentList			5226790	1					
ANR	5226853	ReturnStatement	return false ;	103:2:2508:2520	5226790	1	True				
ANR	5226854	Identifier	false		5226790	0					
ANR	5226855	IdentifierDeclStatement	bool read_something = false ;	106:1:2527:2554	5226790	4	True				
ANR	5226856	IdentifierDecl	read_something = false		5226790	0					
ANR	5226857	IdentifierDeclType	bool		5226790	0					
ANR	5226858	Identifier	read_something		5226790	1					
ANR	5226859	AssignmentExpression	read_something = false		5226790	2		=			
ANR	5226860	Identifier	false		5226790	0					
ANR	5226861	Identifier	false		5226790	1					
ANR	5226862	IdentifierDeclStatement	char buf [ 1024 ] ;	107:1:2557:2571	5226790	5	True				
ANR	5226863	IdentifierDecl	buf [ 1024 ]		5226790	0					
ANR	5226864	IdentifierDeclType	char [ 1024 ]		5226790	0					
ANR	5226865	Identifier	buf		5226790	1					
ANR	5226866	PrimaryExpression	1024		5226790	2					
ANR	5226867	WhileStatement	"while ( fgets ( buf , sizeof ( buf ) , fp ) )"		5226790	6					
ANR	5226868	Condition	"fgets ( buf , sizeof ( buf ) , fp )"	108:8:2581:2607	5226790	0	True				
ANR	5226869	CallExpression	"fgets ( buf , sizeof ( buf ) , fp )"		5226790	0					
ANR	5226870	Callee	fgets		5226790	0					
ANR	5226871	Identifier	fgets		5226790	0					
ANR	5226872	ArgumentList	buf		5226790	1					
ANR	5226873	Argument	buf		5226790	0					
ANR	5226874	Identifier	buf		5226790	0					
ANR	5226875	Argument	sizeof ( buf )		5226790	1					
ANR	5226876	SizeofExpression	sizeof ( buf )		5226790	0					
ANR	5226877	Sizeof	sizeof		5226790	0					
ANR	5226878	SizeofOperand	buf		5226790	1					
ANR	5226879	Argument	fp		5226790	2					
ANR	5226880	Identifier	fp		5226790	0					
ANR	5226881	CompoundStatement		19:38:420:420	5226790	1					
ANR	5226882	ExpressionStatement	read_something = true	109:2:2615:2636	5226790	0	True				
ANR	5226883	AssignmentExpression	read_something = true		5226790	0		=			
ANR	5226884	Identifier	read_something		5226790	0					
ANR	5226885	Identifier	true		5226790	1					
ANR	5226886	IfStatement	if ( ! m_ad . Insert ( buf ) )		5226790	1					
ANR	5226887	Condition	! m_ad . Insert ( buf )	110:6:2644:2661	5226790	0	True				
ANR	5226888	UnaryOperationExpression	! m_ad . Insert ( buf )		5226790	0					
ANR	5226889	UnaryOperator	!		5226790	0					
ANR	5226890	CallExpression	m_ad . Insert ( buf )		5226790	1					
ANR	5226891	Callee	m_ad . Insert		5226790	0					
ANR	5226892	MemberAccess	m_ad . Insert		5226790	0					
ANR	5226893	Identifier	m_ad		5226790	0					
ANR	5226894	Identifier	Insert		5226790	1					
ANR	5226895	ArgumentList	buf		5226790	1					
ANR	5226896	Argument	buf		5226790	0					
ANR	5226897	Identifier	buf		5226790	0					
ANR	5226898	CompoundStatement		21:27:474:474	5226790	1					
ANR	5226899	Statement	dprintf	111:3:2670:2676	5226790	0	True				
ANR	5226900	Statement	(	111:10:2677:2677	5226790	1	True				
ANR	5226901	Statement	D_ALWAYS	111:12:2679:2686	5226790	2	True				
ANR	5226902	Statement	","	111:20:2687:2687	5226790	3	True				
ANR	5226903	Statement	"""Failed to insert \\""%s\\"" into ClassAd, """	111:22:2689:2728	5226790	4	True				
ANR	5226904	Statement	"""ignoring invalid starter\\n"""	112:6:2736:2763	5226790	5	True				
ANR	5226905	Statement	","	112:34:2764:2764	5226790	6	True				
ANR	5226906	Statement	buf	112:36:2766:2768	5226790	7	True				
ANR	5226907	Statement	)	112:40:2770:2770	5226790	8	True				
ANR	5226908	ExpressionStatement		112:41:2771:2771	5226790	9	True				
ANR	5226909	ExpressionStatement	my_pclose ( fp )	113:3:2776:2791	5226790	10	True				
ANR	5226910	CallExpression	my_pclose ( fp )		5226790	0					
ANR	5226911	Callee	my_pclose		5226790	0					
ANR	5226912	Identifier	my_pclose		5226790	0					
ANR	5226913	ArgumentList	fp		5226790	1					
ANR	5226914	Argument	fp		5226790	0					
ANR	5226915	Identifier	fp		5226790	0					
ANR	5226916	ReturnStatement	return false ;	114:3:2796:2808	5226790	11	True				
ANR	5226917	Identifier	false		5226790	0					
ANR	5226918	ExpressionStatement	my_pclose ( fp )	117:1:2818:2833	5226790	7	True				
ANR	5226919	CallExpression	my_pclose ( fp )		5226790	0					
ANR	5226920	Callee	my_pclose		5226790	0					
ANR	5226921	Identifier	my_pclose		5226790	0					
ANR	5226922	ArgumentList	fp		5226790	1					
ANR	5226923	Argument	fp		5226790	0					
ANR	5226924	Identifier	fp		5226790	0					
ANR	5226925	IfStatement	if ( ! read_something )		5226790	8					
ANR	5226926	Condition	! read_something	118:5:2840:2855	5226790	0	True				
ANR	5226927	UnaryOperationExpression	! read_something		5226790	0					
ANR	5226928	UnaryOperator	!		5226790	0					
ANR	5226929	Identifier	read_something		5226790	1					
ANR	5226930	CompoundStatement		29:24:668:668	5226790	1					
ANR	5226931	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\""%s ad\\"" did not produce any output, ignoring\\n"" , m_plugin_path . Value ( ) )"	119:2:2863:2967	5226790	0	True				
ANR	5226932	CallExpression	"dprintf ( D_ALWAYS , ""\\""%s ad\\"" did not produce any output, ignoring\\n"" , m_plugin_path . Value ( ) )"		5226790	0					
ANR	5226933	Callee	dprintf		5226790	0					
ANR	5226934	Identifier	dprintf		5226790	0					
ANR	5226935	ArgumentList	D_ALWAYS		5226790	1					
ANR	5226936	Argument	D_ALWAYS		5226790	0					
ANR	5226937	Identifier	D_ALWAYS		5226790	0					
ANR	5226938	Argument	"""\\""%s ad\\"" did not produce any output, ignoring\\n"""		5226790	1					
ANR	5226939	PrimaryExpression	"""\\""%s ad\\"" did not produce any output, ignoring\\n"""		5226790	0					
ANR	5226940	Argument	m_plugin_path . Value ( )		5226790	2					
ANR	5226941	CallExpression	m_plugin_path . Value ( )		5226790	0					
ANR	5226942	Callee	m_plugin_path . Value		5226790	0					
ANR	5226943	MemberAccess	m_plugin_path . Value		5226790	0					
ANR	5226944	Identifier	m_plugin_path		5226790	0					
ANR	5226945	Identifier	Value		5226790	1					
ANR	5226946	ArgumentList			5226790	1					
ANR	5226947	ReturnStatement	return false ;	122:2:2971:2983	5226790	1	True				
ANR	5226948	Identifier	false		5226790	0					
ANR	5226949	IdentifierDeclStatement	MyString tmp ;	126:1:3028:3040	5226790	9	True				
ANR	5226950	IdentifierDecl	tmp		5226790	0					
ANR	5226951	IdentifierDeclType	MyString		5226790	0					
ANR	5226952	Identifier	tmp		5226790	1					
ANR	5226953	IfStatement	"if ( ! m_ad . LookupString ( ATTR_HIBERNATION_SUPPORTED_STATES , tmp ) )"		5226790	10					
ANR	5226954	Condition	"! m_ad . LookupString ( ATTR_HIBERNATION_SUPPORTED_STATES , tmp )"	127:5:3047:3106	5226790	0	True				
ANR	5226955	UnaryOperationExpression	"! m_ad . LookupString ( ATTR_HIBERNATION_SUPPORTED_STATES , tmp )"		5226790	0					
ANR	5226956	UnaryOperator	!		5226790	0					
ANR	5226957	CallExpression	"m_ad . LookupString ( ATTR_HIBERNATION_SUPPORTED_STATES , tmp )"		5226790	1					
ANR	5226958	Callee	m_ad . LookupString		5226790	0					
ANR	5226959	MemberAccess	m_ad . LookupString		5226790	0					
ANR	5226960	Identifier	m_ad		5226790	0					
ANR	5226961	Identifier	LookupString		5226790	1					
ANR	5226962	ArgumentList	ATTR_HIBERNATION_SUPPORTED_STATES		5226790	1					
ANR	5226963	Argument	ATTR_HIBERNATION_SUPPORTED_STATES		5226790	0					
ANR	5226964	Identifier	ATTR_HIBERNATION_SUPPORTED_STATES		5226790	0					
ANR	5226965	Argument	tmp		5226790	1					
ANR	5226966	Identifier	tmp		5226790	0					
ANR	5226967	CompoundStatement		38:68:919:919	5226790	1					
ANR	5226968	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s missing in ad from hibernation plugin %s\\n"" , ATTR_HIBERNATION_SUPPORTED_STATES , m_plugin_path . Value ( ) )"	128:2:3114:3250	5226790	0	True				
ANR	5226969	CallExpression	"dprintf ( D_ALWAYS , ""%s missing in ad from hibernation plugin %s\\n"" , ATTR_HIBERNATION_SUPPORTED_STATES , m_plugin_path . Value ( ) )"		5226790	0					
ANR	5226970	Callee	dprintf		5226790	0					
ANR	5226971	Identifier	dprintf		5226790	0					
ANR	5226972	ArgumentList	D_ALWAYS		5226790	1					
ANR	5226973	Argument	D_ALWAYS		5226790	0					
ANR	5226974	Identifier	D_ALWAYS		5226790	0					
ANR	5226975	Argument	"""%s missing in ad from hibernation plugin %s\\n"""		5226790	1					
ANR	5226976	PrimaryExpression	"""%s missing in ad from hibernation plugin %s\\n"""		5226790	0					
ANR	5226977	Argument	ATTR_HIBERNATION_SUPPORTED_STATES		5226790	2					
ANR	5226978	Identifier	ATTR_HIBERNATION_SUPPORTED_STATES		5226790	0					
ANR	5226979	Argument	m_plugin_path . Value ( )		5226790	3					
ANR	5226980	CallExpression	m_plugin_path . Value ( )		5226790	0					
ANR	5226981	Callee	m_plugin_path . Value		5226790	0					
ANR	5226982	MemberAccess	m_plugin_path . Value		5226790	0					
ANR	5226983	Identifier	m_plugin_path		5226790	0					
ANR	5226984	Identifier	Value		5226790	1					
ANR	5226985	ArgumentList			5226790	1					
ANR	5226986	ReturnStatement	return false ;	131:2:3254:3266	5226790	1	True				
ANR	5226987	Identifier	false		5226790	0					
ANR	5226988	IdentifierDeclStatement	unsigned mask ;	133:1:3272:3285	5226790	11	True				
ANR	5226989	IdentifierDecl	mask		5226790	0					
ANR	5226990	IdentifierDeclType	unsigned		5226790	0					
ANR	5226991	Identifier	mask		5226790	1					
ANR	5226992	IfStatement	"if ( ! HibernatorBase :: stringToMask ( tmp . Value ( ) , mask ) )"		5226790	12					
ANR	5226993	Condition	"! HibernatorBase :: stringToMask ( tmp . Value ( ) , mask )"	134:6:3293:3340	5226790	0	True				
ANR	5226994	UnaryOperationExpression	"! HibernatorBase :: stringToMask ( tmp . Value ( ) , mask )"		5226790	0					
ANR	5226995	UnaryOperator	!		5226790	0					
ANR	5226996	CallExpression	"HibernatorBase :: stringToMask ( tmp . Value ( ) , mask )"		5226790	1					
ANR	5226997	Callee	HibernatorBase :: stringToMask		5226790	0					
ANR	5226998	Identifier	HibernatorBase :: stringToMask		5226790	0					
ANR	5226999	ArgumentList	tmp . Value ( )		5226790	1					
ANR	5227000	Argument	tmp . Value ( )		5226790	0					
ANR	5227001	CallExpression	tmp . Value ( )		5226790	0					
ANR	5227002	Callee	tmp . Value		5226790	0					
ANR	5227003	MemberAccess	tmp . Value		5226790	0					
ANR	5227004	Identifier	tmp		5226790	0					
ANR	5227005	Identifier	Value		5226790	1					
ANR	5227006	ArgumentList			5226790	1					
ANR	5227007	Argument	mask		5226790	1					
ANR	5227008	Identifier	mask		5226790	0					
ANR	5227009	CompoundStatement		45:57:1153:1153	5226790	1					
ANR	5227010	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s invalid '%s' in ad from hibernation plugin %s\\n"" , ATTR_HIBERNATION_SUPPORTED_STATES , tmp . Value ( ) , m_plugin_path . Value ( ) )"	135:2:3348:3507	5226790	0	True				
ANR	5227011	CallExpression	"dprintf ( D_ALWAYS , ""%s invalid '%s' in ad from hibernation plugin %s\\n"" , ATTR_HIBERNATION_SUPPORTED_STATES , tmp . Value ( ) , m_plugin_path . Value ( ) )"		5226790	0					
ANR	5227012	Callee	dprintf		5226790	0					
ANR	5227013	Identifier	dprintf		5226790	0					
ANR	5227014	ArgumentList	D_ALWAYS		5226790	1					
ANR	5227015	Argument	D_ALWAYS		5226790	0					
ANR	5227016	Identifier	D_ALWAYS		5226790	0					
ANR	5227017	Argument	"""%s invalid '%s' in ad from hibernation plugin %s\\n"""		5226790	1					
ANR	5227018	PrimaryExpression	"""%s invalid '%s' in ad from hibernation plugin %s\\n"""		5226790	0					
ANR	5227019	Argument	ATTR_HIBERNATION_SUPPORTED_STATES		5226790	2					
ANR	5227020	Identifier	ATTR_HIBERNATION_SUPPORTED_STATES		5226790	0					
ANR	5227021	Argument	tmp . Value ( )		5226790	3					
ANR	5227022	CallExpression	tmp . Value ( )		5226790	0					
ANR	5227023	Callee	tmp . Value		5226790	0					
ANR	5227024	MemberAccess	tmp . Value		5226790	0					
ANR	5227025	Identifier	tmp		5226790	0					
ANR	5227026	Identifier	Value		5226790	1					
ANR	5227027	ArgumentList			5226790	1					
ANR	5227028	Argument	m_plugin_path . Value ( )		5226790	4					
ANR	5227029	CallExpression	m_plugin_path . Value ( )		5226790	0					
ANR	5227030	Callee	m_plugin_path . Value		5226790	0					
ANR	5227031	MemberAccess	m_plugin_path . Value		5226790	0					
ANR	5227032	Identifier	m_plugin_path		5226790	0					
ANR	5227033	Identifier	Value		5226790	1					
ANR	5227034	ArgumentList			5226790	1					
ANR	5227035	ReturnStatement	return false ;	139:2:3511:3523	5226790	1	True				
ANR	5227036	Identifier	false		5226790	0					
ANR	5227037	ExpressionStatement	setStateMask ( mask )	141:1:3529:3549	5226790	13	True				
ANR	5227038	CallExpression	setStateMask ( mask )		5226790	0					
ANR	5227039	Callee	setStateMask		5226790	0					
ANR	5227040	Identifier	setStateMask		5226790	0					
ANR	5227041	ArgumentList	mask		5226790	1					
ANR	5227042	Argument	mask		5226790	0					
ANR	5227043	Identifier	mask		5226790	0					
ANR	5227044	ReturnStatement	return true ;	143:1:3553:3564	5226790	14	True				
ANR	5227045	Identifier	true		5226790	0					
ANR	5227046	ReturnType	bool		5226790	1					
ANR	5227047	Identifier	StartdHibernator :: initialize		5226790	2					
ANR	5227048	ParameterList			5226790	3					
ANR	5227049	CFGEntryNode	ENTRY		5226790		True				
ANR	5227050	CFGExitNode	EXIT		5226790		True				
ANR	5227051	Symbol	read_something		5226790						
ANR	5227052	Symbol	HibernatorBase :: stringToMask		5226790						
ANR	5227053	Symbol	NULL		5226790						
ANR	5227054	Symbol	m_ad		5226790						
ANR	5227055	Symbol	D_ALWAYS		5226790						
ANR	5227056	Symbol	false		5226790						
ANR	5227057	Symbol	ATTR_HIBERNATION_SUPPORTED_STATES		5226790						
ANR	5227058	Symbol	tmp . Value		5226790						
ANR	5227059	Symbol	fp		5226790						
ANR	5227060	Symbol	m_plugin_path		5226790						
ANR	5227061	Symbol	m_ad . LookupString		5226790						
ANR	5227062	Symbol	fgets		5226790						
ANR	5227063	Symbol	args		5226790						
ANR	5227064	Symbol	buf		5226790						
ANR	5227065	Symbol	tmp		5226790						
ANR	5227066	Symbol	true		5226790						
ANR	5227067	Symbol	m_ad . Insert		5226790						
ANR	5227068	Symbol	FALSE		5226790						
ANR	5227069	Symbol	m_plugin_path . Value		5226790						
ANR	5227070	Symbol	my_popenv		5226790						
ANR	5227071	Symbol	mask		5226790						
ANR	5227072	DeclStmt									
ANR	5227073	Decl							ArgList	ArgList	args
ANR	5227074	DeclStmt									
ANR	5227075	Decl							char	char *	tmp
ANR	5227076	DeclStmt									
ANR	5227077	Decl							MyString	MyString	cmd
ANR	5227078	DeclStmt									
ANR	5227079	Decl							priv_state	priv_state	priv
ANR	5227080	DeclStmt									
ANR	5227081	Decl							int	int	status
ANR	5227082	Function	StartdHibernator :: enterStateStandBy	181:0:4339:4458							
ANR	5227083	FunctionDef	StartdHibernator :: enterStateStandBy (bool force)		5227082	0					
ANR	5227084	CompoundStatement		183:0:4423:4458	5227082	0					
ANR	5227085	ReturnStatement	"return enterState ( S1 , force ) ;"	184:1:4426:4456	5227082	0	True				
ANR	5227086	CallExpression	"enterState ( S1 , force )"		5227082	0					
ANR	5227087	Callee	enterState		5227082	0					
ANR	5227088	Identifier	enterState		5227082	0					
ANR	5227089	ArgumentList	S1		5227082	1					
ANR	5227090	Argument	S1		5227082	0					
ANR	5227091	Identifier	S1		5227082	0					
ANR	5227092	Argument	force		5227082	1					
ANR	5227093	Identifier	force		5227082	0					
ANR	5227094	ReturnType	HibernatorBase :: SLEEP_STATE		5227082	1					
ANR	5227095	Identifier	StartdHibernator :: enterStateStandBy		5227082	2					
ANR	5227096	ParameterList	bool force		5227082	3					
ANR	5227097	Parameter	bool force	182:37:4404:4413	5227082	0	True				
ANR	5227098	ParameterType	bool		5227082	0					
ANR	5227099	Identifier	force		5227082	1					
ANR	5227100	CFGEntryNode	ENTRY		5227082		True				
ANR	5227101	CFGExitNode	EXIT		5227082		True				
ANR	5227102	Symbol	enterState		5227082						
ANR	5227103	Symbol	force		5227082						
ANR	5227104	Symbol	S1		5227082						
ANR	5227105	Function	StartdHibernator :: enterStateSuspend	187:0:4461:4580							
ANR	5227106	FunctionDef	StartdHibernator :: enterStateSuspend (bool force)		5227105	0					
ANR	5227107	CompoundStatement		189:0:4545:4580	5227105	0					
ANR	5227108	ReturnStatement	"return enterState ( S3 , force ) ;"	190:1:4548:4578	5227105	0	True				
ANR	5227109	CallExpression	"enterState ( S3 , force )"		5227105	0					
ANR	5227110	Callee	enterState		5227105	0					
ANR	5227111	Identifier	enterState		5227105	0					
ANR	5227112	ArgumentList	S3		5227105	1					
ANR	5227113	Argument	S3		5227105	0					
ANR	5227114	Identifier	S3		5227105	0					
ANR	5227115	Argument	force		5227105	1					
ANR	5227116	Identifier	force		5227105	0					
ANR	5227117	ReturnType	HibernatorBase :: SLEEP_STATE		5227105	1					
ANR	5227118	Identifier	StartdHibernator :: enterStateSuspend		5227105	2					
ANR	5227119	ParameterList	bool force		5227105	3					
ANR	5227120	Parameter	bool force	188:37:4526:4535	5227105	0	True				
ANR	5227121	ParameterType	bool		5227105	0					
ANR	5227122	Identifier	force		5227105	1					
ANR	5227123	CFGEntryNode	ENTRY		5227105		True				
ANR	5227124	CFGExitNode	EXIT		5227105		True				
ANR	5227125	Symbol	S3		5227105						
ANR	5227126	Symbol	enterState		5227105						
ANR	5227127	Symbol	force		5227105						
ANR	5227128	Function	StartdHibernator :: enterStateHibernate	193:0:4583:4704							
ANR	5227129	FunctionDef	StartdHibernator :: enterStateHibernate (bool force)		5227128	0					
ANR	5227130	CompoundStatement		195:0:4669:4704	5227128	0					
ANR	5227131	ReturnStatement	"return enterState ( S4 , force ) ;"	196:1:4672:4702	5227128	0	True				
ANR	5227132	CallExpression	"enterState ( S4 , force )"		5227128	0					
ANR	5227133	Callee	enterState		5227128	0					
ANR	5227134	Identifier	enterState		5227128	0					
ANR	5227135	ArgumentList	S4		5227128	1					
ANR	5227136	Argument	S4		5227128	0					
ANR	5227137	Identifier	S4		5227128	0					
ANR	5227138	Argument	force		5227128	1					
ANR	5227139	Identifier	force		5227128	0					
ANR	5227140	ReturnType	HibernatorBase :: SLEEP_STATE		5227128	1					
ANR	5227141	Identifier	StartdHibernator :: enterStateHibernate		5227128	2					
ANR	5227142	ParameterList	bool force		5227128	3					
ANR	5227143	Parameter	bool force	194:39:4650:4659	5227128	0	True				
ANR	5227144	ParameterType	bool		5227128	0					
ANR	5227145	Identifier	force		5227128	1					
ANR	5227146	CFGEntryNode	ENTRY		5227128		True				
ANR	5227147	CFGExitNode	EXIT		5227128		True				
ANR	5227148	Symbol	S4		5227128						
ANR	5227149	Symbol	enterState		5227128						
ANR	5227150	Symbol	force		5227128						
ANR	5227151	Function	StartdHibernator :: enterStatePowerOff	199:0:4707:4827							
ANR	5227152	FunctionDef	StartdHibernator :: enterStatePowerOff (bool force)		5227151	0					
ANR	5227153	CompoundStatement		201:0:4792:4827	5227151	0					
ANR	5227154	ReturnStatement	"return enterState ( S5 , force ) ;"	202:1:4795:4825	5227151	0	True				
ANR	5227155	CallExpression	"enterState ( S5 , force )"		5227151	0					
ANR	5227156	Callee	enterState		5227151	0					
ANR	5227157	Identifier	enterState		5227151	0					
ANR	5227158	ArgumentList	S5		5227151	1					
ANR	5227159	Argument	S5		5227151	0					
ANR	5227160	Identifier	S5		5227151	0					
ANR	5227161	Argument	force		5227151	1					
ANR	5227162	Identifier	force		5227151	0					
ANR	5227163	ReturnType	HibernatorBase :: SLEEP_STATE		5227151	1					
ANR	5227164	Identifier	StartdHibernator :: enterStatePowerOff		5227151	2					
ANR	5227165	ParameterList	bool force		5227151	3					
ANR	5227166	Parameter	bool force	200:38:4773:4782	5227151	0	True				
ANR	5227167	ParameterType	bool		5227151	0					
ANR	5227168	Identifier	force		5227151	1					
ANR	5227169	CFGEntryNode	ENTRY		5227151		True				
ANR	5227170	CFGExitNode	EXIT		5227151		True				
ANR	5227171	Symbol	S5		5227151						
ANR	5227172	Symbol	enterState		5227151						
ANR	5227173	Symbol	force		5227151						
