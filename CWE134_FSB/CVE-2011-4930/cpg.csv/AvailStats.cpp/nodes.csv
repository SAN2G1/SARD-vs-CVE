command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	12991	File	data/converged/CVE-2011-4930_htcondor/AvailStats.cpp								
ANR	12992	Function	AvailStats :: AvailStats	23:1:859:1176							
ANR	12993	FunctionDef	AvailStats :: AvailStats ()		12992	0					
ANR	12994	CompoundStatement		26:0:902:1176	12992	0					
ANR	12995	ExpressionStatement	as_start_avail = 0	27:1:905:923	12992	0	True				
ANR	12996	AssignmentExpression	as_start_avail = 0		12992	0		=			
ANR	12997	Identifier	as_start_avail		12992	0					
ANR	12998	PrimaryExpression	0		12992	1					
ANR	12999	ExpressionStatement	as_avail_estimate = 0	28:1:926:947	12992	1	True				
ANR	13000	AssignmentExpression	as_avail_estimate = 0		12992	0		=			
ANR	13001	Identifier	as_avail_estimate		12992	0					
ANR	13002	PrimaryExpression	0		12992	1					
ANR	13003	ExpressionStatement	as_avail_confidence = 0.8f	29:1:950:976	12992	2	True				
ANR	13004	AssignmentExpression	as_avail_confidence = 0.8f		12992	0		=			
ANR	13005	Identifier	as_avail_confidence		12992	0					
ANR	13006	PrimaryExpression	0.8f		12992	1					
ANR	13007	ExpressionStatement	as_last_avail_interval = 0	30:1:979:1005	12992	3	True				
ANR	13008	AssignmentExpression	as_last_avail_interval = 0		12992	0		=			
ANR	13009	Identifier	as_last_avail_interval		12992	0					
ANR	13010	PrimaryExpression	0		12992	1					
ANR	13011	ExpressionStatement	as_avail_time = 0.0	31:1:1008:1027	12992	4	True				
ANR	13012	AssignmentExpression	as_avail_time = 0.0		12992	0		=			
ANR	13013	Identifier	as_avail_time		12992	0					
ANR	13014	PrimaryExpression	0.0		12992	1					
ANR	13015	ExpressionStatement	as_num_avail_periods = 0	32:1:1030:1054	12992	5	True				
ANR	13016	AssignmentExpression	as_num_avail_periods = 0		12992	0		=			
ANR	13017	Identifier	as_num_avail_periods		12992	0					
ANR	13018	PrimaryExpression	0		12992	1					
ANR	13019	ExpressionStatement	as_max_avail_periods = 100	33:1:1057:1083	12992	6	True				
ANR	13020	AssignmentExpression	as_max_avail_periods = 100		12992	0		=			
ANR	13021	Identifier	as_max_avail_periods		12992	0					
ANR	13022	PrimaryExpression	100		12992	1					
ANR	13023	ExpressionStatement	as_tot_avail_time = 0	34:1:1086:1107	12992	7	True				
ANR	13024	AssignmentExpression	as_tot_avail_time = 0		12992	0		=			
ANR	13025	Identifier	as_tot_avail_time		12992	0					
ANR	13026	PrimaryExpression	0		12992	1					
ANR	13027	ExpressionStatement	as_birthdate = time ( 0 ) - 1	35:1:1110:1134	12992	8	True				
ANR	13028	AssignmentExpression	as_birthdate = time ( 0 ) - 1		12992	0		=			
ANR	13029	Identifier	as_birthdate		12992	0					
ANR	13030	AdditiveExpression	time ( 0 ) - 1		12992	1		-			
ANR	13031	CallExpression	time ( 0 )		12992	0					
ANR	13032	Callee	time		12992	0					
ANR	13033	Identifier	time		12992	0					
ANR	13034	ArgumentList	0		12992	1					
ANR	13035	Argument	0		12992	0					
ANR	13036	PrimaryExpression	0		12992	0					
ANR	13037	PrimaryExpression	1		12992	1					
ANR	13038	ReturnType	include < math . h >		12992	1					
ANR	13039	Identifier	AvailStats :: AvailStats		12992	2					
ANR	13040	ParameterList			12992	3					
ANR	13041	CFGEntryNode	ENTRY		12992		True				
ANR	13042	CFGExitNode	EXIT		12992		True				
ANR	13043	Symbol	as_start_avail		12992						
ANR	13044	Symbol	as_num_avail_periods		12992						
ANR	13045	Symbol	as_avail_time		12992						
ANR	13046	Symbol	as_tot_avail_time		12992						
ANR	13047	Symbol	as_avail_estimate		12992						
ANR	13048	Symbol	as_last_avail_interval		12992						
ANR	13049	Symbol	as_avail_confidence		12992						
ANR	13050	Symbol	time		12992						
ANR	13051	Symbol	as_birthdate		12992						
ANR	13052	Symbol	as_max_avail_periods		12992						
ANR	13053	Function	AvailStats :: ~AvailStats	38:0:1179:1444							
ANR	13054	FunctionDef	AvailStats :: ~AvailStats ()		13053	0					
ANR	13055	CompoundStatement		39:0:1205:1444	13053	0					
ANR	13056	IfStatement	if ( as_start_avail )		13053	0					
ANR	13057	Condition	as_start_avail	42:5:1336:1349	13053	0	True				
ANR	13058	Identifier	as_start_avail		13053	0					
ANR	13059	CompoundStatement		4:22:147:147	13053	1					
ANR	13060	ExpressionStatement	"update ( owner_state , idle_act )"	43:2:1357:1388	13053	0	True				
ANR	13061	CallExpression	"update ( owner_state , idle_act )"		13053	0					
ANR	13062	Callee	update		13053	0					
ANR	13063	Identifier	update		13053	0					
ANR	13064	ArgumentList	owner_state		13053	1					
ANR	13065	Argument	owner_state		13053	0					
ANR	13066	Identifier	owner_state		13053	0					
ANR	13067	Argument	idle_act		13053	1					
ANR	13068	Identifier	idle_act		13053	0					
ANR	13069	ElseStatement	else		13053	0					
ANR	13070	CompoundStatement		6:8:217:217	13053	0					
ANR	13071	ExpressionStatement	checkpoint ( )	45:2:1427:1439	13053	0	True				
ANR	13072	CallExpression	checkpoint ( )		13053	0					
ANR	13073	Callee	checkpoint		13053	0					
ANR	13074	Identifier	checkpoint		13053	0					
ANR	13075	ArgumentList			13053	1					
ANR	13076	Identifier	AvailStats :: ~AvailStats		13053	1					
ANR	13077	ParameterList			13053	2					
ANR	13078	CFGEntryNode	ENTRY		13053		True				
ANR	13079	CFGExitNode	EXIT		13053		True				
ANR	13080	Symbol	as_start_avail		13053						
ANR	13081	Symbol	idle_act		13053						
ANR	13082	Symbol	owner_state		13053						
ANR	13083	DeclStmt									
ANR	13084	Decl							int	int	item
ANR	13085	DeclStmt									
ANR	13086	Decl							bool	bool	inserted
ANR	13087	DeclStmt									
ANR	13088	Decl							int	int	item
ANR	13089	Function	AvailStats :: publish	102:0:3020:3562							
ANR	13090	FunctionDef	"AvailStats :: publish (ClassAd * cp , amask_t how_much)"		13089	0					
ANR	13091	CompoundStatement		104:0:3078:3562	13089	0					
ANR	13092	IdentifierDeclStatement	char line [ 100 ] ;	105:1:3081:3095	13089	0	True				
ANR	13093	IdentifierDecl	line [ 100 ]		13089	0					
ANR	13094	IdentifierDeclType	char [ 100 ]		13089	0					
ANR	13095	Identifier	line		13089	1					
ANR	13096	PrimaryExpression	100		13089	2					
ANR	13097	IfStatement	if ( ! compute_avail_stats )		13089	1					
ANR	13098	Condition	! compute_avail_stats	107:5:3103:3122	13089	0	True				
ANR	13099	UnaryOperationExpression	! compute_avail_stats		13089	0					
ANR	13100	UnaryOperator	!		13089	0					
ANR	13101	Identifier	compute_avail_stats		13089	1					
ANR	13102	ReturnStatement	return ;	107:28:3126:3132	13089	1	True				
ANR	13103	IfStatement	if ( IS_UPDATE ( how_much ) || IS_PUBLIC ( how_much ) )		13089	2					
ANR	13104	Condition	IS_UPDATE ( how_much ) || IS_PUBLIC ( how_much )	109:5:3140:3181	13089	0	True				
ANR	13105	OrExpression	IS_UPDATE ( how_much ) || IS_PUBLIC ( how_much )		13089	0		||			
ANR	13106	CallExpression	IS_UPDATE ( how_much )		13089	0					
ANR	13107	Callee	IS_UPDATE		13089	0					
ANR	13108	Identifier	IS_UPDATE		13089	0					
ANR	13109	ArgumentList	how_much		13089	1					
ANR	13110	Argument	how_much		13089	0					
ANR	13111	Identifier	how_much		13089	0					
ANR	13112	CallExpression	IS_PUBLIC ( how_much )		13089	1					
ANR	13113	Callee	IS_PUBLIC		13089	0					
ANR	13114	Identifier	IS_PUBLIC		13089	0					
ANR	13115	ArgumentList	how_much		13089	1					
ANR	13116	Argument	how_much		13089	0					
ANR	13117	Identifier	how_much		13089	0					
ANR	13118	CompoundStatement		6:50:106:106	13089	1					
ANR	13119	ExpressionStatement	"snprintf ( line , 100 , ""%s=%0.2f"" , ATTR_AVAIL_TIME , avail_time ( ) )"	111:2:3190:3254	13089	0	True				
ANR	13120	CallExpression	"snprintf ( line , 100 , ""%s=%0.2f"" , ATTR_AVAIL_TIME , avail_time ( ) )"		13089	0					
ANR	13121	Callee	snprintf		13089	0					
ANR	13122	Identifier	snprintf		13089	0					
ANR	13123	ArgumentList	line		13089	1					
ANR	13124	Argument	line		13089	0					
ANR	13125	Identifier	line		13089	0					
ANR	13126	Argument	100		13089	1					
ANR	13127	PrimaryExpression	100		13089	0					
ANR	13128	Argument	"""%s=%0.2f"""		13089	2					
ANR	13129	PrimaryExpression	"""%s=%0.2f"""		13089	0					
ANR	13130	Argument	ATTR_AVAIL_TIME		13089	3					
ANR	13131	Identifier	ATTR_AVAIL_TIME		13089	0					
ANR	13132	Argument	avail_time ( )		13089	4					
ANR	13133	CallExpression	avail_time ( )		13089	0					
ANR	13134	Callee	avail_time		13089	0					
ANR	13135	Identifier	avail_time		13089	0					
ANR	13136	ArgumentList			13089	1					
ANR	13137	ExpressionStatement	cp -> Insert ( line )	112:2:3258:3274	13089	1	True				
ANR	13138	CallExpression	cp -> Insert ( line )		13089	0					
ANR	13139	Callee	cp -> Insert		13089	0					
ANR	13140	PtrMemberAccess	cp -> Insert		13089	0					
ANR	13141	Identifier	cp		13089	0					
ANR	13142	Identifier	Insert		13089	1					
ANR	13143	ArgumentList	line		13089	1					
ANR	13144	Argument	line		13089	0					
ANR	13145	Identifier	line		13089	0					
ANR	13146	ExpressionStatement	"cp -> Assign ( ATTR_LAST_AVAIL_INTERVAL , last_avail_interval ( ) )"	114:2:3282:3343	13089	2	True				
ANR	13147	CallExpression	"cp -> Assign ( ATTR_LAST_AVAIL_INTERVAL , last_avail_interval ( ) )"		13089	0					
ANR	13148	Callee	cp -> Assign		13089	0					
ANR	13149	PtrMemberAccess	cp -> Assign		13089	0					
ANR	13150	Identifier	cp		13089	0					
ANR	13151	Identifier	Assign		13089	1					
ANR	13152	ArgumentList	ATTR_LAST_AVAIL_INTERVAL		13089	1					
ANR	13153	Argument	ATTR_LAST_AVAIL_INTERVAL		13089	0					
ANR	13154	Identifier	ATTR_LAST_AVAIL_INTERVAL		13089	0					
ANR	13155	Argument	last_avail_interval ( )		13089	1					
ANR	13156	CallExpression	last_avail_interval ( )		13089	0					
ANR	13157	Callee	last_avail_interval		13089	0					
ANR	13158	Identifier	last_avail_interval		13089	0					
ANR	13159	ArgumentList			13089	1					
ANR	13160	IfStatement	if ( as_start_avail )		13089	3					
ANR	13161	Condition	as_start_avail	116:6:3354:3367	13089	0	True				
ANR	13162	Identifier	as_start_avail		13089	0					
ANR	13163	CompoundStatement		13:23:292:292	13089	1					
ANR	13164	ExpressionStatement	"cp -> Assign ( ATTR_AVAIL_SINCE , ( int ) avail_since ( ) )"	119:3:3437:3487	13089	0	True				
ANR	13165	CallExpression	"cp -> Assign ( ATTR_AVAIL_SINCE , ( int ) avail_since ( ) )"		13089	0					
ANR	13166	Callee	cp -> Assign		13089	0					
ANR	13167	PtrMemberAccess	cp -> Assign		13089	0					
ANR	13168	Identifier	cp		13089	0					
ANR	13169	Identifier	Assign		13089	1					
ANR	13170	ArgumentList	ATTR_AVAIL_SINCE		13089	1					
ANR	13171	Argument	ATTR_AVAIL_SINCE		13089	0					
ANR	13172	Identifier	ATTR_AVAIL_SINCE		13089	0					
ANR	13173	Argument	( int ) avail_since ( )		13089	1					
ANR	13174	CastExpression	( int ) avail_since ( )		13089	0					
ANR	13175	CastTarget	int		13089	0					
ANR	13176	CallExpression	avail_since ( )		13089	1					
ANR	13177	Callee	avail_since		13089	0					
ANR	13178	Identifier	avail_since		13089	0					
ANR	13179	ArgumentList			13089	1					
ANR	13180	ExpressionStatement	"cp -> Assign ( ATTR_AVAIL_TIME_ESTIMATE , avail_estimate ( ) )"	121:3:3495:3551	13089	1	True				
ANR	13181	CallExpression	"cp -> Assign ( ATTR_AVAIL_TIME_ESTIMATE , avail_estimate ( ) )"		13089	0					
ANR	13182	Callee	cp -> Assign		13089	0					
ANR	13183	PtrMemberAccess	cp -> Assign		13089	0					
ANR	13184	Identifier	cp		13089	0					
ANR	13185	Identifier	Assign		13089	1					
ANR	13186	ArgumentList	ATTR_AVAIL_TIME_ESTIMATE		13089	1					
ANR	13187	Argument	ATTR_AVAIL_TIME_ESTIMATE		13089	0					
ANR	13188	Identifier	ATTR_AVAIL_TIME_ESTIMATE		13089	0					
ANR	13189	Argument	avail_estimate ( )		13089	1					
ANR	13190	CallExpression	avail_estimate ( )		13089	0					
ANR	13191	Callee	avail_estimate		13089	0					
ANR	13192	Identifier	avail_estimate		13089	0					
ANR	13193	ArgumentList			13089	1					
ANR	13194	ReturnType	void		13089	1					
ANR	13195	Identifier	AvailStats :: publish		13089	2					
ANR	13196	ParameterList	"ClassAd * cp , amask_t how_much"		13089	3					
ANR	13197	Parameter	ClassAd * cp	103:21:3046:3056	13089	0	True				
ANR	13198	ParameterType	ClassAd *		13089	0					
ANR	13199	Identifier	cp		13089	1					
ANR	13200	Parameter	amask_t how_much	103:34:3059:3074	13089	1	True				
ANR	13201	ParameterType	amask_t		13089	0					
ANR	13202	Identifier	how_much		13089	1					
ANR	13203	CFGEntryNode	ENTRY		13089		True				
ANR	13204	CFGExitNode	EXIT		13089		True				
ANR	13205	Symbol	ATTR_AVAIL_TIME		13089						
ANR	13206	Symbol	as_start_avail		13089						
ANR	13207	Symbol	ATTR_LAST_AVAIL_INTERVAL		13089						
ANR	13208	Symbol	avail_since		13089						
ANR	13209	Symbol	avail_estimate		13089						
ANR	13210	Symbol	line		13089						
ANR	13211	Symbol	compute_avail_stats		13089						
ANR	13212	Symbol	avail_time		13089						
ANR	13213	Symbol	ATTR_AVAIL_SINCE		13089						
ANR	13214	Symbol	cp		13089						
ANR	13215	Symbol	how_much		13089						
ANR	13216	Symbol	IS_UPDATE		13089						
ANR	13217	Symbol	last_avail_interval		13089						
ANR	13218	Symbol	IS_PUBLIC		13089						
ANR	13219	Symbol	ATTR_AVAIL_TIME_ESTIMATE		13089						
ANR	13220	Function	AvailStats :: compute	126:0:3565:5220							
ANR	13221	FunctionDef	AvailStats :: compute (amask_t how_much)		13220	0					
ANR	13222	CompoundStatement		128:0:3610:5220	13220	0					
ANR	13223	IfStatement	if ( ! compute_avail_stats )		13220	0					
ANR	13224	Condition	! compute_avail_stats	129:5:3617:3636	13220	0	True				
ANR	13225	UnaryOperationExpression	! compute_avail_stats		13220	0					
ANR	13226	UnaryOperator	!		13220	0					
ANR	13227	Identifier	compute_avail_stats		13220	1					
ANR	13228	ReturnStatement	return ;	129:28:3640:3646	13220	1	True				
ANR	13229	IfStatement	if ( IS_STATIC ( how_much ) && IS_SHARED ( how_much ) )		13220	1					
ANR	13230	Condition	IS_STATIC ( how_much ) && IS_SHARED ( how_much )	130:5:3653:3694	13220	0	True				
ANR	13231	AndExpression	IS_STATIC ( how_much ) && IS_SHARED ( how_much )		13220	0		&&			
ANR	13232	CallExpression	IS_STATIC ( how_much )		13220	0					
ANR	13233	Callee	IS_STATIC		13220	0					
ANR	13234	Identifier	IS_STATIC		13220	0					
ANR	13235	ArgumentList	how_much		13220	1					
ANR	13236	Argument	how_much		13220	0					
ANR	13237	Identifier	how_much		13220	0					
ANR	13238	CallExpression	IS_SHARED ( how_much )		13220	1					
ANR	13239	Callee	IS_SHARED		13220	0					
ANR	13240	Identifier	IS_SHARED		13220	0					
ANR	13241	ArgumentList	how_much		13220	1					
ANR	13242	Argument	how_much		13220	0					
ANR	13243	Identifier	how_much		13220	0					
ANR	13244	CompoundStatement		3:50:87:87	13220	1					
ANR	13245	ExpressionStatement	"as_avail_confidence = param_double ( ""STARTD_AVAIL_CONFIDENCE"" , as_avail_confidence , 0 , 1 )"	132:2:3703:3791	13220	0	True				
ANR	13246	AssignmentExpression	"as_avail_confidence = param_double ( ""STARTD_AVAIL_CONFIDENCE"" , as_avail_confidence , 0 , 1 )"		13220	0		=			
ANR	13247	Identifier	as_avail_confidence		13220	0					
ANR	13248	CallExpression	"param_double ( ""STARTD_AVAIL_CONFIDENCE"" , as_avail_confidence , 0 , 1 )"		13220	1					
ANR	13249	Callee	param_double		13220	0					
ANR	13250	Identifier	param_double		13220	0					
ANR	13251	ArgumentList	"""STARTD_AVAIL_CONFIDENCE"""		13220	1					
ANR	13252	Argument	"""STARTD_AVAIL_CONFIDENCE"""		13220	0					
ANR	13253	PrimaryExpression	"""STARTD_AVAIL_CONFIDENCE"""		13220	0					
ANR	13254	Argument	as_avail_confidence		13220	1					
ANR	13255	Identifier	as_avail_confidence		13220	0					
ANR	13256	Argument	0		13220	2					
ANR	13257	PrimaryExpression	0		13220	0					
ANR	13258	Argument	1		13220	3					
ANR	13259	PrimaryExpression	1		13220	0					
ANR	13260	ExpressionStatement	"as_max_avail_periods = param_integer ( ""STARTD_MAX_AVAIL_PERIOD_SAMPLES"" , as_max_avail_periods )"	134:2:3796:3889	13220	1	True				
ANR	13261	AssignmentExpression	"as_max_avail_periods = param_integer ( ""STARTD_MAX_AVAIL_PERIOD_SAMPLES"" , as_max_avail_periods )"		13220	0		=			
ANR	13262	Identifier	as_max_avail_periods		13220	0					
ANR	13263	CallExpression	"param_integer ( ""STARTD_MAX_AVAIL_PERIOD_SAMPLES"" , as_max_avail_periods )"		13220	1					
ANR	13264	Callee	param_integer		13220	0					
ANR	13265	Identifier	param_integer		13220	0					
ANR	13266	ArgumentList	"""STARTD_MAX_AVAIL_PERIOD_SAMPLES"""		13220	1					
ANR	13267	Argument	"""STARTD_MAX_AVAIL_PERIOD_SAMPLES"""		13220	0					
ANR	13268	PrimaryExpression	"""STARTD_MAX_AVAIL_PERIOD_SAMPLES"""		13220	0					
ANR	13269	Argument	as_max_avail_periods		13220	1					
ANR	13270	Identifier	as_max_avail_periods		13220	0					
ANR	13271	IfStatement	if ( IS_UPDATE ( how_much ) && IS_SHARED ( how_much ) )		13220	2					
ANR	13272	Condition	IS_UPDATE ( how_much ) && IS_SHARED ( how_much )	137:5:3900:3941	13220	0	True				
ANR	13273	AndExpression	IS_UPDATE ( how_much ) && IS_SHARED ( how_much )		13220	0		&&			
ANR	13274	CallExpression	IS_UPDATE ( how_much )		13220	0					
ANR	13275	Callee	IS_UPDATE		13220	0					
ANR	13276	Identifier	IS_UPDATE		13220	0					
ANR	13277	ArgumentList	how_much		13220	1					
ANR	13278	Argument	how_much		13220	0					
ANR	13279	Identifier	how_much		13220	0					
ANR	13280	CallExpression	IS_SHARED ( how_much )		13220	1					
ANR	13281	Callee	IS_SHARED		13220	0					
ANR	13282	Identifier	IS_SHARED		13220	0					
ANR	13283	ArgumentList	how_much		13220	1					
ANR	13284	Argument	how_much		13220	0					
ANR	13285	Identifier	how_much		13220	0					
ANR	13286	CompoundStatement		11:2:338:367	13220	1					
ANR	13287	IdentifierDeclStatement	time_t current_time = time ( 0 ) ;	138:2:3949:3978	13220	0	True				
ANR	13288	IdentifierDecl	current_time = time ( 0 )		13220	0					
ANR	13289	IdentifierDeclType	time_t		13220	0					
ANR	13290	Identifier	current_time		13220	1					
ANR	13291	AssignmentExpression	current_time = time ( 0 )		13220	2		=			
ANR	13292	Identifier	current_time		13220	0					
ANR	13293	CallExpression	time ( 0 )		13220	1					
ANR	13294	Callee	time		13220	0					
ANR	13295	Identifier	time		13220	0					
ANR	13296	ArgumentList	0		13220	1					
ANR	13297	Argument	0		13220	0					
ANR	13298	PrimaryExpression	0		13220	0					
ANR	13299	IfStatement	if ( as_start_avail )		13220	1					
ANR	13300	Condition	as_start_avail	141:6:4054:4067	13220	0	True				
ANR	13301	Identifier	as_start_avail		13220	0					
ANR	13302	CompoundStatement		20:3:664:676	13220	1					
ANR	13303	IdentifierDeclStatement	int current_idle_time = current_time - as_start_avail ;	144:3:4142:4195	13220	0	True				
ANR	13304	IdentifierDecl	current_idle_time = current_time - as_start_avail		13220	0					
ANR	13305	IdentifierDeclType	int		13220	0					
ANR	13306	Identifier	current_idle_time		13220	1					
ANR	13307	AssignmentExpression	current_idle_time = current_time - as_start_avail		13220	2		=			
ANR	13308	Identifier	current_idle_time		13220	0					
ANR	13309	AdditiveExpression	current_time - as_start_avail		13220	1		-			
ANR	13310	Identifier	current_time		13220	0					
ANR	13311	Identifier	as_start_avail		13220	1					
ANR	13312	IdentifierDeclStatement	int num_intervals = as_num_avail_periods ;	145:3:4200:4240	13220	1	True				
ANR	13313	IdentifierDecl	num_intervals = as_num_avail_periods		13220	0					
ANR	13314	IdentifierDeclType	int		13220	0					
ANR	13315	Identifier	num_intervals		13220	1					
ANR	13316	AssignmentExpression	num_intervals = as_num_avail_periods		13220	2		=			
ANR	13317	Identifier	as_num_avail_periods		13220	0					
ANR	13318	Identifier	as_num_avail_periods		13220	1					
ANR	13319	ExpressionStatement	as_avail_periods . Rewind ( )	146:3:4245:4270	13220	2	True				
ANR	13320	CallExpression	as_avail_periods . Rewind ( )		13220	0					
ANR	13321	Callee	as_avail_periods . Rewind		13220	0					
ANR	13322	MemberAccess	as_avail_periods . Rewind		13220	0					
ANR	13323	Identifier	as_avail_periods		13220	0					
ANR	13324	Identifier	Rewind		13220	1					
ANR	13325	ArgumentList			13220	1					
ANR	13326	IdentifierDeclStatement	int item = 0 ;	147:3:4275:4287	13220	3	True				
ANR	13327	IdentifierDecl	item = 0		13220	0					
ANR	13328	IdentifierDeclType	int		13220	0					
ANR	13329	Identifier	item		13220	1					
ANR	13330	AssignmentExpression	item = 0		13220	2		=			
ANR	13331	Identifier	item		13220	0					
ANR	13332	PrimaryExpression	0		13220	1					
ANR	13333	ExpressionStatement	as_avail_periods . Next ( item )	148:3:4292:4319	13220	4	True				
ANR	13334	CallExpression	as_avail_periods . Next ( item )		13220	0					
ANR	13335	Callee	as_avail_periods . Next		13220	0					
ANR	13336	MemberAccess	as_avail_periods . Next		13220	0					
ANR	13337	Identifier	as_avail_periods		13220	0					
ANR	13338	Identifier	Next		13220	1					
ANR	13339	ArgumentList	item		13220	1					
ANR	13340	Argument	item		13220	0					
ANR	13341	Identifier	item		13220	0					
ANR	13342	WhileStatement	while ( num_intervals && item < current_idle_time )		13220	5					
ANR	13343	Condition	num_intervals && item < current_idle_time	149:10:4331:4371	13220	0	True				
ANR	13344	AndExpression	num_intervals && item < current_idle_time		13220	0		&&			
ANR	13345	Identifier	num_intervals		13220	0					
ANR	13346	RelationalExpression	item < current_idle_time		13220	1		<			
ANR	13347	Identifier	item		13220	0					
ANR	13348	Identifier	current_idle_time		13220	1					
ANR	13349	CompoundStatement		22:54:764:764	13220	1					
ANR	13350	ExpressionStatement	as_avail_periods . Next ( item )	150:4:4382:4409	13220	0	True				
ANR	13351	CallExpression	as_avail_periods . Next ( item )		13220	0					
ANR	13352	Callee	as_avail_periods . Next		13220	0					
ANR	13353	MemberAccess	as_avail_periods . Next		13220	0					
ANR	13354	Identifier	as_avail_periods		13220	0					
ANR	13355	Identifier	Next		13220	1					
ANR	13356	ArgumentList	item		13220	1					
ANR	13357	Argument	item		13220	0					
ANR	13358	Identifier	item		13220	0					
ANR	13359	ExpressionStatement	num_intervals --	151:4:4415:4430	13220	1	True				
ANR	13360	PostIncDecOperationExpression	num_intervals --		13220	0					
ANR	13361	Identifier	num_intervals		13220	0					
ANR	13362	IncDec	--		13220	1					
ANR	13363	IfStatement	if ( ! num_intervals )		13220	6					
ANR	13364	Condition	! num_intervals	154:7:4445:4458	13220	0	True				
ANR	13365	UnaryOperationExpression	! num_intervals		13220	0					
ANR	13366	UnaryOperator	!		13220	0					
ANR	13367	Identifier	num_intervals		13220	1					
ANR	13368	CompoundStatement		27:24:851:851	13220	1					
ANR	13369	ExpressionStatement	as_avail_estimate = ( int ) floor ( current_idle_time * ( 2.0 - as_avail_confidence ) )	158:4:4643:4723	13220	0	True				
ANR	13370	AssignmentExpression	as_avail_estimate = ( int ) floor ( current_idle_time * ( 2.0 - as_avail_confidence ) )		13220	0		=			
ANR	13371	Identifier	as_avail_estimate		13220	0					
ANR	13372	CastExpression	( int ) floor ( current_idle_time * ( 2.0 - as_avail_confidence ) )		13220	1					
ANR	13373	CastTarget	int		13220	0					
ANR	13374	CallExpression	floor ( current_idle_time * ( 2.0 - as_avail_confidence ) )		13220	1					
ANR	13375	Callee	floor		13220	0					
ANR	13376	Identifier	floor		13220	0					
ANR	13377	ArgumentList	current_idle_time * ( 2.0 - as_avail_confidence )		13220	1					
ANR	13378	Argument	current_idle_time * ( 2.0 - as_avail_confidence )		13220	0					
ANR	13379	MultiplicativeExpression	current_idle_time * ( 2.0 - as_avail_confidence )		13220	0		*			
ANR	13380	Identifier	current_idle_time		13220	0					
ANR	13381	AdditiveExpression	2.0 - as_avail_confidence		13220	1		-			
ANR	13382	PrimaryExpression	2.0		13220	0					
ANR	13383	Identifier	as_avail_confidence		13220	1					
ANR	13384	ElseStatement	else		13220	0					
ANR	13385	CompoundStatement		36:4:1223:1284	13220	0					
ANR	13386	IdentifierDeclStatement	int idx = ( int ) floor ( num_intervals * ( 1.0 - as_avail_confidence ) ) ;	163:4:4834:4895	13220	0	True				
ANR	13387	IdentifierDecl	idx = ( int ) floor ( num_intervals * ( 1.0 - as_avail_confidence ) )		13220	0					
ANR	13388	IdentifierDeclType	int		13220	0					
ANR	13389	Identifier	idx		13220	1					
ANR	13390	AssignmentExpression	idx = ( int ) floor ( num_intervals * ( 1.0 - as_avail_confidence ) )		13220	2		=			
ANR	13391	Identifier	idx		13220	0					
ANR	13392	CastExpression	( int ) floor ( num_intervals * ( 1.0 - as_avail_confidence ) )		13220	1					
ANR	13393	CastTarget	int		13220	0					
ANR	13394	CallExpression	floor ( num_intervals * ( 1.0 - as_avail_confidence ) )		13220	1					
ANR	13395	Callee	floor		13220	0					
ANR	13396	Identifier	floor		13220	0					
ANR	13397	ArgumentList	num_intervals * ( 1.0 - as_avail_confidence )		13220	1					
ANR	13398	Argument	num_intervals * ( 1.0 - as_avail_confidence )		13220	0					
ANR	13399	MultiplicativeExpression	num_intervals * ( 1.0 - as_avail_confidence )		13220	0		*			
ANR	13400	Identifier	num_intervals		13220	0					
ANR	13401	AdditiveExpression	1.0 - as_avail_confidence		13220	1		-			
ANR	13402	PrimaryExpression	1.0		13220	0					
ANR	13403	Identifier	as_avail_confidence		13220	1					
ANR	13404	WhileStatement	while ( idx )		13220	1					
ANR	13405	Condition	idx	164:11:4908:4910	13220	0	True				
ANR	13406	Identifier	idx		13220	0					
ANR	13407	CompoundStatement		37:17:1303:1303	13220	1					
ANR	13408	ExpressionStatement	as_avail_periods . Next ( item )	165:5:4921:4948	13220	0	True				
ANR	13409	CallExpression	as_avail_periods . Next ( item )		13220	0					
ANR	13410	Callee	as_avail_periods . Next		13220	0					
ANR	13411	MemberAccess	as_avail_periods . Next		13220	0					
ANR	13412	Identifier	as_avail_periods		13220	0					
ANR	13413	Identifier	Next		13220	1					
ANR	13414	ArgumentList	item		13220	1					
ANR	13415	Argument	item		13220	0					
ANR	13416	Identifier	item		13220	0					
ANR	13417	ExpressionStatement	idx --	166:5:4955:4960	13220	1	True				
ANR	13418	PostIncDecOperationExpression	idx --		13220	0					
ANR	13419	Identifier	idx		13220	0					
ANR	13420	IncDec	--		13220	1					
ANR	13421	ExpressionStatement	as_avail_estimate = item	168:4:4972:4996	13220	2	True				
ANR	13422	AssignmentExpression	as_avail_estimate = item		13220	0		=			
ANR	13423	Identifier	as_avail_estimate		13220	0					
ANR	13424	Identifier	item		13220	1					
ANR	13425	ExpressionStatement	as_avail_time = float ( as_tot_avail_time + current_idle_time ) / float ( current_time - as_birthdate )	170:3:5006:5111	13220	7	True				
ANR	13426	AssignmentExpression	as_avail_time = float ( as_tot_avail_time + current_idle_time ) / float ( current_time - as_birthdate )		13220	0		=			
ANR	13427	Identifier	as_avail_time		13220	0					
ANR	13428	MultiplicativeExpression	float ( as_tot_avail_time + current_idle_time ) / float ( current_time - as_birthdate )		13220	1		/			
ANR	13429	CallExpression	float ( as_tot_avail_time + current_idle_time )		13220	0					
ANR	13430	Callee	float		13220	0					
ANR	13431	Identifier	float		13220	0					
ANR	13432	ArgumentList	as_tot_avail_time + current_idle_time		13220	1					
ANR	13433	Argument	as_tot_avail_time + current_idle_time		13220	0					
ANR	13434	AdditiveExpression	as_tot_avail_time + current_idle_time		13220	0		+			
ANR	13435	Identifier	as_tot_avail_time		13220	0					
ANR	13436	Identifier	current_idle_time		13220	1					
ANR	13437	CallExpression	float ( current_time - as_birthdate )		13220	1					
ANR	13438	Callee	float		13220	0					
ANR	13439	Identifier	float		13220	0					
ANR	13440	ArgumentList	current_time - as_birthdate		13220	1					
ANR	13441	Argument	current_time - as_birthdate		13220	0					
ANR	13442	AdditiveExpression	current_time - as_birthdate		13220	0		-			
ANR	13443	Identifier	current_time		13220	0					
ANR	13444	Identifier	as_birthdate		13220	1					
ANR	13445	ElseStatement	else		13220	0					
ANR	13446	CompoundStatement		46:9:1511:1511	13220	0					
ANR	13447	ExpressionStatement	as_avail_time = float ( as_tot_avail_time ) / float ( current_time - as_birthdate )	174:3:5127:5211	13220	0	True				
ANR	13448	AssignmentExpression	as_avail_time = float ( as_tot_avail_time ) / float ( current_time - as_birthdate )		13220	0		=			
ANR	13449	Identifier	as_avail_time		13220	0					
ANR	13450	MultiplicativeExpression	float ( as_tot_avail_time ) / float ( current_time - as_birthdate )		13220	1		/			
ANR	13451	CallExpression	float ( as_tot_avail_time )		13220	0					
ANR	13452	Callee	float		13220	0					
ANR	13453	Identifier	float		13220	0					
ANR	13454	ArgumentList	as_tot_avail_time		13220	1					
ANR	13455	Argument	as_tot_avail_time		13220	0					
ANR	13456	Identifier	as_tot_avail_time		13220	0					
ANR	13457	CallExpression	float ( current_time - as_birthdate )		13220	1					
ANR	13458	Callee	float		13220	0					
ANR	13459	Identifier	float		13220	0					
ANR	13460	ArgumentList	current_time - as_birthdate		13220	1					
ANR	13461	Argument	current_time - as_birthdate		13220	0					
ANR	13462	AdditiveExpression	current_time - as_birthdate		13220	0		-			
ANR	13463	Identifier	current_time		13220	0					
ANR	13464	Identifier	as_birthdate		13220	1					
ANR	13465	ReturnType	void		13220	1					
ANR	13466	Identifier	AvailStats :: compute		13220	2					
ANR	13467	ParameterList	amask_t how_much		13220	3					
ANR	13468	Parameter	amask_t how_much	127:21:3591:3606	13220	0	True				
ANR	13469	ParameterType	amask_t		13220	0					
ANR	13470	Identifier	how_much		13220	1					
ANR	13471	CFGEntryNode	ENTRY		13220		True				
ANR	13472	CFGExitNode	EXIT		13220		True				
ANR	13473	Symbol	item		13220						
ANR	13474	Symbol	as_start_avail		13220						
ANR	13475	Symbol	compute_avail_stats		13220						
ANR	13476	Symbol	as_avail_time		13220						
ANR	13477	Symbol	as_tot_avail_time		13220						
ANR	13478	Symbol	param_double		13220						
ANR	13479	Symbol	as_avail_estimate		13220						
ANR	13480	Symbol	as_avail_confidence		13220						
ANR	13481	Symbol	float		13220						
ANR	13482	Symbol	num_intervals		13220						
ANR	13483	Symbol	how_much		13220						
ANR	13484	Symbol	as_num_avail_periods		13220						
ANR	13485	Symbol	IS_STATIC		13220						
ANR	13486	Symbol	IS_SHARED		13220						
ANR	13487	Symbol	IS_UPDATE		13220						
ANR	13488	Symbol	as_avail_periods		13220						
ANR	13489	Symbol	param_integer		13220						
ANR	13490	Symbol	time		13220						
ANR	13491	Symbol	as_birthdate		13220						
ANR	13492	Symbol	floor		13220						
ANR	13493	Symbol	idx		13220						
ANR	13494	Symbol	as_max_avail_periods		13220						
ANR	13495	Symbol	current_idle_time		13220						
ANR	13496	Symbol	current_time		13220						
ANR	13497	Function	AvailStats :: serialize	180:0:5223:6012							
ANR	13498	FunctionDef	AvailStats :: serialize (MyString state)		13497	0					
ANR	13499	CompoundStatement		182:0:5268:6012	13497	0					
ANR	13500	IdentifierDeclStatement	const char * starts = state . Value ( ) ;	183:1:5271:5306	13497	0	True				
ANR	13501	IdentifierDecl	* starts = state . Value ( )		13497	0					
ANR	13502	IdentifierDeclType	const char *		13497	0					
ANR	13503	Identifier	starts		13497	1					
ANR	13504	AssignmentExpression	* starts = state . Value ( )		13497	2		=			
ANR	13505	Identifier	starts		13497	0					
ANR	13506	CallExpression	state . Value ( )		13497	1					
ANR	13507	Callee	state . Value		13497	0					
ANR	13508	MemberAccess	state . Value		13497	0					
ANR	13509	Identifier	state		13497	0					
ANR	13510	Identifier	Value		13497	1					
ANR	13511	ArgumentList			13497	1					
ANR	13512	IdentifierDeclStatement	char * s ;	184:1:5309:5316	13497	1	True				
ANR	13513	IdentifierDecl	* s		13497	0					
ANR	13514	IdentifierDeclType	char *		13497	0					
ANR	13515	Identifier	s		13497	1					
ANR	13516	IdentifierDeclStatement	"int prev_time = strtol ( starts , & s , 0 ) ;"	186:1:5320:5357	13497	2	True				
ANR	13517	IdentifierDecl	"prev_time = strtol ( starts , & s , 0 )"		13497	0					
ANR	13518	IdentifierDeclType	int		13497	0					
ANR	13519	Identifier	prev_time		13497	1					
ANR	13520	AssignmentExpression	"prev_time = strtol ( starts , & s , 0 )"		13497	2		=			
ANR	13521	Identifier	prev_time		13497	0					
ANR	13522	CallExpression	"strtol ( starts , & s , 0 )"		13497	1					
ANR	13523	Callee	strtol		13497	0					
ANR	13524	Identifier	strtol		13497	0					
ANR	13525	ArgumentList	starts		13497	1					
ANR	13526	Argument	starts		13497	0					
ANR	13527	Identifier	starts		13497	0					
ANR	13528	Argument	& s		13497	1					
ANR	13529	UnaryOperationExpression	& s		13497	0					
ANR	13530	UnaryOperator	&		13497	0					
ANR	13531	Identifier	s		13497	1					
ANR	13532	Argument	0		13497	2					
ANR	13533	PrimaryExpression	0		13497	0					
ANR	13534	ExpressionStatement	as_birthdate -= prev_time	187:1:5360:5385	13497	3	True				
ANR	13535	AssignmentExpression	as_birthdate -= prev_time		13497	0		-=			
ANR	13536	Identifier	as_birthdate		13497	0					
ANR	13537	Identifier	prev_time		13497	1					
ANR	13538	IdentifierDeclStatement	"int prev_avail_time = strtol ( s , & s , 0 ) ;"	188:1:5388:5426	13497	4	True				
ANR	13539	IdentifierDecl	"prev_avail_time = strtol ( s , & s , 0 )"		13497	0					
ANR	13540	IdentifierDeclType	int		13497	0					
ANR	13541	Identifier	prev_avail_time		13497	1					
ANR	13542	AssignmentExpression	"prev_avail_time = strtol ( s , & s , 0 )"		13497	2		=			
ANR	13543	Identifier	prev_avail_time		13497	0					
ANR	13544	CallExpression	"strtol ( s , & s , 0 )"		13497	1					
ANR	13545	Callee	strtol		13497	0					
ANR	13546	Identifier	strtol		13497	0					
ANR	13547	ArgumentList	s		13497	1					
ANR	13548	Argument	s		13497	0					
ANR	13549	Identifier	s		13497	0					
ANR	13550	Argument	& s		13497	1					
ANR	13551	UnaryOperationExpression	& s		13497	0					
ANR	13552	UnaryOperator	&		13497	0					
ANR	13553	Identifier	s		13497	1					
ANR	13554	Argument	0		13497	2					
ANR	13555	PrimaryExpression	0		13497	0					
ANR	13556	ExpressionStatement	as_tot_avail_time += prev_avail_time	189:1:5429:5465	13497	5	True				
ANR	13557	AssignmentExpression	as_tot_avail_time += prev_avail_time		13497	0		+=			
ANR	13558	Identifier	as_tot_avail_time		13497	0					
ANR	13559	Identifier	prev_avail_time		13497	1					
ANR	13560	IdentifierDeclStatement	"int last_available_interval = strtol ( s , & s , 0 ) ;"	190:1:5468:5514	13497	6	True				
ANR	13561	IdentifierDecl	"last_available_interval = strtol ( s , & s , 0 )"		13497	0					
ANR	13562	IdentifierDeclType	int		13497	0					
ANR	13563	Identifier	last_available_interval		13497	1					
ANR	13564	AssignmentExpression	"last_available_interval = strtol ( s , & s , 0 )"		13497	2		=			
ANR	13565	Identifier	last_available_interval		13497	0					
ANR	13566	CallExpression	"strtol ( s , & s , 0 )"		13497	1					
ANR	13567	Callee	strtol		13497	0					
ANR	13568	Identifier	strtol		13497	0					
ANR	13569	ArgumentList	s		13497	1					
ANR	13570	Argument	s		13497	0					
ANR	13571	Identifier	s		13497	0					
ANR	13572	Argument	& s		13497	1					
ANR	13573	UnaryOperationExpression	& s		13497	0					
ANR	13574	UnaryOperator	&		13497	0					
ANR	13575	Identifier	s		13497	1					
ANR	13576	Argument	0		13497	2					
ANR	13577	PrimaryExpression	0		13497	0					
ANR	13578	IfStatement	if ( ! as_last_avail_interval )		13497	7					
ANR	13579	Condition	! as_last_avail_interval	191:5:5521:5543	13497	0	True				
ANR	13580	UnaryOperationExpression	! as_last_avail_interval		13497	0					
ANR	13581	UnaryOperator	!		13497	0					
ANR	13582	Identifier	as_last_avail_interval		13497	1					
ANR	13583	CompoundStatement		10:31:278:278	13497	1					
ANR	13584	ExpressionStatement	as_last_avail_interval = last_available_interval	192:2:5551:5599	13497	0	True				
ANR	13585	AssignmentExpression	as_last_avail_interval = last_available_interval		13497	0		=			
ANR	13586	Identifier	as_last_avail_interval		13497	0					
ANR	13587	Identifier	last_available_interval		13497	1					
ANR	13588	WhileStatement	while ( 1 )		13497	8					
ANR	13589	Condition	1	194:8:5612:5612	13497	0	True				
ANR	13590	PrimaryExpression	1		13497	0					
ANR	13591	CompoundStatement		20:2:484:505	13497	1					
ANR	13592	IdentifierDeclStatement	char * new_s ;	195:2:5620:5631	13497	0	True				
ANR	13593	IdentifierDecl	* new_s		13497	0					
ANR	13594	IdentifierDeclType	char *		13497	0					
ANR	13595	Identifier	new_s		13497	1					
ANR	13596	IdentifierDeclStatement	"int interval = strtol ( s , & new_s , 0 ) ;"	196:2:5635:5670	13497	1	True				
ANR	13597	IdentifierDecl	"interval = strtol ( s , & new_s , 0 )"		13497	0					
ANR	13598	IdentifierDeclType	int		13497	0					
ANR	13599	Identifier	interval		13497	1					
ANR	13600	AssignmentExpression	"interval = strtol ( s , & new_s , 0 )"		13497	2		=			
ANR	13601	Identifier	interval		13497	0					
ANR	13602	CallExpression	"strtol ( s , & new_s , 0 )"		13497	1					
ANR	13603	Callee	strtol		13497	0					
ANR	13604	Identifier	strtol		13497	0					
ANR	13605	ArgumentList	s		13497	1					
ANR	13606	Argument	s		13497	0					
ANR	13607	Identifier	s		13497	0					
ANR	13608	Argument	& new_s		13497	1					
ANR	13609	UnaryOperationExpression	& new_s		13497	0					
ANR	13610	UnaryOperator	&		13497	0					
ANR	13611	Identifier	new_s		13497	1					
ANR	13612	Argument	0		13497	2					
ANR	13613	PrimaryExpression	0		13497	0					
ANR	13614	IfStatement	if ( s == new_s )		13497	2					
ANR	13615	Condition	s == new_s	197:6:5678:5687	13497	0	True				
ANR	13616	EqualityExpression	s == new_s		13497	0		==			
ANR	13617	Identifier	s		13497	0					
ANR	13618	Identifier	new_s		13497	1					
ANR	13619	BreakStatement	break ;	197:18:5690:5695	13497	1	True				
ANR	13620	ExpressionStatement	s = new_s	198:2:5699:5708	13497	3	True				
ANR	13621	AssignmentExpression	s = new_s		13497	0		=			
ANR	13622	Identifier	s		13497	0					
ANR	13623	Identifier	new_s		13497	1					
ANR	13624	ExpressionStatement	as_avail_periods . Rewind ( )	199:2:5712:5737	13497	4	True				
ANR	13625	CallExpression	as_avail_periods . Rewind ( )		13497	0					
ANR	13626	Callee	as_avail_periods . Rewind		13497	0					
ANR	13627	MemberAccess	as_avail_periods . Rewind		13497	0					
ANR	13628	Identifier	as_avail_periods		13497	0					
ANR	13629	Identifier	Rewind		13497	1					
ANR	13630	ArgumentList			13497	1					
ANR	13631	IdentifierDeclStatement	int item ;	200:2:5741:5749	13497	5	True				
ANR	13632	IdentifierDecl	item		13497	0					
ANR	13633	IdentifierDeclType	int		13497	0					
ANR	13634	Identifier	item		13497	1					
ANR	13635	IdentifierDeclStatement	bool inserted = false ;	201:2:5753:5774	13497	6	True				
ANR	13636	IdentifierDecl	inserted = false		13497	0					
ANR	13637	IdentifierDeclType	bool		13497	0					
ANR	13638	Identifier	inserted		13497	1					
ANR	13639	AssignmentExpression	inserted = false		13497	2		=			
ANR	13640	Identifier	false		13497	0					
ANR	13641	Identifier	false		13497	1					
ANR	13642	WhileStatement	while ( as_avail_periods . Next ( item ) )		13497	7					
ANR	13643	Condition	as_avail_periods . Next ( item )	202:9:5785:5811	13497	0	True				
ANR	13644	CallExpression	as_avail_periods . Next ( item )		13497	0					
ANR	13645	Callee	as_avail_periods . Next		13497	0					
ANR	13646	MemberAccess	as_avail_periods . Next		13497	0					
ANR	13647	Identifier	as_avail_periods		13497	0					
ANR	13648	Identifier	Next		13497	1					
ANR	13649	ArgumentList	item		13497	1					
ANR	13650	Argument	item		13497	0					
ANR	13651	Identifier	item		13497	0					
ANR	13652	CompoundStatement		21:38:545:545	13497	1					
ANR	13653	IfStatement	if ( interval < item )		13497	0					
ANR	13654	Condition	interval < item	203:7:5823:5837	13497	0	True				
ANR	13655	RelationalExpression	interval < item		13497	0		<			
ANR	13656	Identifier	interval		13497	0					
ANR	13657	Identifier	item		13497	1					
ANR	13658	CompoundStatement		22:24:571:571	13497	1					
ANR	13659	ExpressionStatement	as_avail_periods . Insert ( interval )	204:4:5846:5879	13497	0	True				
ANR	13660	CallExpression	as_avail_periods . Insert ( interval )		13497	0					
ANR	13661	Callee	as_avail_periods . Insert		13497	0					
ANR	13662	MemberAccess	as_avail_periods . Insert		13497	0					
ANR	13663	Identifier	as_avail_periods		13497	0					
ANR	13664	Identifier	Insert		13497	1					
ANR	13665	ArgumentList	interval		13497	1					
ANR	13666	Argument	interval		13497	0					
ANR	13667	Identifier	interval		13497	0					
ANR	13668	ExpressionStatement	inserted = true	205:4:5885:5900	13497	1	True				
ANR	13669	AssignmentExpression	inserted = true		13497	0		=			
ANR	13670	Identifier	inserted		13497	0					
ANR	13671	Identifier	true		13497	1					
ANR	13672	BreakStatement	break ;	206:4:5906:5911	13497	2	True				
ANR	13673	IfStatement	if ( ! inserted )		13497	8					
ANR	13674	Condition	! inserted	209:6:5928:5936	13497	0	True				
ANR	13675	UnaryOperationExpression	! inserted		13497	0					
ANR	13676	UnaryOperator	!		13497	0					
ANR	13677	Identifier	inserted		13497	1					
ANR	13678	CompoundStatement		28:17:670:670	13497	1					
ANR	13679	ExpressionStatement	as_avail_periods . Append ( interval )	210:3:5944:5977	13497	0	True				
ANR	13680	CallExpression	as_avail_periods . Append ( interval )		13497	0					
ANR	13681	Callee	as_avail_periods . Append		13497	0					
ANR	13682	MemberAccess	as_avail_periods . Append		13497	0					
ANR	13683	Identifier	as_avail_periods		13497	0					
ANR	13684	Identifier	Append		13497	1					
ANR	13685	ArgumentList	interval		13497	1					
ANR	13686	Argument	interval		13497	0					
ANR	13687	Identifier	interval		13497	0					
ANR	13688	ExpressionStatement	as_num_avail_periods ++	212:2:5985:6007	13497	9	True				
ANR	13689	PostIncDecOperationExpression	as_num_avail_periods ++		13497	0					
ANR	13690	Identifier	as_num_avail_periods		13497	0					
ANR	13691	IncDec	++		13497	1					
ANR	13692	ReturnType	void		13497	1					
ANR	13693	Identifier	AvailStats :: serialize		13497	2					
ANR	13694	ParameterList	MyString state		13497	3					
ANR	13695	Parameter	MyString state	181:23:5251:5264	13497	0	True				
ANR	13696	ParameterType	MyString		13497	0					
ANR	13697	Identifier	state		13497	1					
ANR	13698	CFGEntryNode	ENTRY		13497		True				
ANR	13699	CFGExitNode	EXIT		13497		True				
ANR	13700	Symbol	as_avail_periods . Next		13497						
ANR	13701	Symbol	prev_time		13497						
ANR	13702	Symbol	state . Value		13497						
ANR	13703	Symbol	last_available_interval		13497						
ANR	13704	Symbol	item		13497						
ANR	13705	Symbol	as_tot_avail_time		13497						
ANR	13706	Symbol	false		13497						
ANR	13707	Symbol	as_last_avail_interval		13497						
ANR	13708	Symbol	new_s		13497						
ANR	13709	Symbol	s		13497						
ANR	13710	Symbol	inserted		13497						
ANR	13711	Symbol	strtol		13497						
ANR	13712	Symbol	as_num_avail_periods		13497						
ANR	13713	Symbol	true		13497						
ANR	13714	Symbol	& s		13497						
ANR	13715	Symbol	prev_avail_time		13497						
ANR	13716	Symbol	as_avail_periods		13497						
ANR	13717	Symbol	interval		13497						
ANR	13718	Symbol	state		13497						
ANR	13719	Symbol	as_birthdate		13497						
ANR	13720	Symbol	starts		13497						
ANR	13721	Symbol	& new_s		13497						
ANR	13722	Function	AvailStats :: serialize	216:0:6015:6313							
ANR	13723	FunctionDef	AvailStats :: serialize ()		13722	0					
ANR	13724	CompoundStatement		218:0:6048:6313	13722	0					
ANR	13725	IdentifierDeclStatement	MyString state ;	219:1:6051:6065	13722	0	True				
ANR	13726	IdentifierDecl	state		13722	0					
ANR	13727	IdentifierDeclType	MyString		13722	0					
ANR	13728	Identifier	state		13722	1					
ANR	13729	ExpressionStatement	"state . sprintf ( ""%ld %d %d"" , ( long ) ( time ( 0 ) - as_birthdate ) , as_tot_avail_time , as_last_avail_interval )"	221:1:6069:6177	13722	1	True				
ANR	13730	CallExpression	"state . sprintf ( ""%ld %d %d"" , ( long ) ( time ( 0 ) - as_birthdate ) , as_tot_avail_time , as_last_avail_interval )"		13722	0					
ANR	13731	Callee	state . sprintf		13722	0					
ANR	13732	MemberAccess	state . sprintf		13722	0					
ANR	13733	Identifier	state		13722	0					
ANR	13734	Identifier	sprintf		13722	1					
ANR	13735	ArgumentList	"""%ld %d %d"""		13722	1					
ANR	13736	Argument	"""%ld %d %d"""		13722	0					
ANR	13737	PrimaryExpression	"""%ld %d %d"""		13722	0					
ANR	13738	Argument	( long ) ( time ( 0 ) - as_birthdate )		13722	1					
ANR	13739	CastExpression	( long ) ( time ( 0 ) - as_birthdate )		13722	0					
ANR	13740	CastTarget	long		13722	0					
ANR	13741	AdditiveExpression	time ( 0 ) - as_birthdate		13722	1		-			
ANR	13742	CallExpression	time ( 0 )		13722	0					
ANR	13743	Callee	time		13722	0					
ANR	13744	Identifier	time		13722	0					
ANR	13745	ArgumentList	0		13722	1					
ANR	13746	Argument	0		13722	0					
ANR	13747	PrimaryExpression	0		13722	0					
ANR	13748	Identifier	as_birthdate		13722	1					
ANR	13749	Argument	as_tot_avail_time		13722	2					
ANR	13750	Identifier	as_tot_avail_time		13722	0					
ANR	13751	Argument	as_last_avail_interval		13722	3					
ANR	13752	Identifier	as_last_avail_interval		13722	0					
ANR	13753	ExpressionStatement	as_avail_periods . Rewind ( )	223:1:6180:6205	13722	2	True				
ANR	13754	CallExpression	as_avail_periods . Rewind ( )		13722	0					
ANR	13755	Callee	as_avail_periods . Rewind		13722	0					
ANR	13756	MemberAccess	as_avail_periods . Rewind		13722	0					
ANR	13757	Identifier	as_avail_periods		13722	0					
ANR	13758	Identifier	Rewind		13722	1					
ANR	13759	ArgumentList			13722	1					
ANR	13760	IdentifierDeclStatement	int item ;	224:1:6208:6216	13722	3	True				
ANR	13761	IdentifierDecl	item		13722	0					
ANR	13762	IdentifierDeclType	int		13722	0					
ANR	13763	Identifier	item		13722	1					
ANR	13764	WhileStatement	while ( as_avail_periods . Next ( item ) )		13722	4					
ANR	13765	Condition	as_avail_periods . Next ( item )	225:8:6226:6252	13722	0	True				
ANR	13766	CallExpression	as_avail_periods . Next ( item )		13722	0					
ANR	13767	Callee	as_avail_periods . Next		13722	0					
ANR	13768	MemberAccess	as_avail_periods . Next		13722	0					
ANR	13769	Identifier	as_avail_periods		13722	0					
ANR	13770	Identifier	Next		13722	1					
ANR	13771	ArgumentList	item		13722	1					
ANR	13772	Argument	item		13722	0					
ANR	13773	Identifier	item		13722	0					
ANR	13774	CompoundStatement		8:38:207:207	13722	1					
ANR	13775	ExpressionStatement	"state . sprintf_cat ( "" %d"" , item )"	226:2:6260:6292	13722	0	True				
ANR	13776	CallExpression	"state . sprintf_cat ( "" %d"" , item )"		13722	0					
ANR	13777	Callee	state . sprintf_cat		13722	0					
ANR	13778	MemberAccess	state . sprintf_cat		13722	0					
ANR	13779	Identifier	state		13722	0					
ANR	13780	Identifier	sprintf_cat		13722	1					
ANR	13781	ArgumentList	""" %d"""		13722	1					
ANR	13782	Argument	""" %d"""		13722	0					
ANR	13783	PrimaryExpression	""" %d"""		13722	0					
ANR	13784	Argument	item		13722	1					
ANR	13785	Identifier	item		13722	0					
ANR	13786	ReturnStatement	return state ;	229:1:6299:6311	13722	5	True				
ANR	13787	Identifier	state		13722	0					
ANR	13788	ReturnType	MyString		13722	1					
ANR	13789	Identifier	AvailStats :: serialize		13722	2					
ANR	13790	ParameterList			13722	3					
ANR	13791	CFGEntryNode	ENTRY		13722		True				
ANR	13792	CFGExitNode	EXIT		13722		True				
ANR	13793	Symbol	as_avail_periods . Next		13722						
ANR	13794	Symbol	item		13722						
ANR	13795	Symbol	as_tot_avail_time		13722						
ANR	13796	Symbol	as_last_avail_interval		13722						
ANR	13797	Symbol	as_avail_periods		13722						
ANR	13798	Symbol	state		13722						
ANR	13799	Symbol	as_birthdate		13722						
ANR	13800	Symbol	time		13722						
ANR	13801	Function	AvailStats :: checkpoint_filename	232:0:6316:6693							
ANR	13802	FunctionDef	AvailStats :: checkpoint_filename (MyString filename)		13801	0					
ANR	13803	CompoundStatement		234:0:6374:6693	13801	0					
ANR	13804	ExpressionStatement	ckpt_filename = filename	235:1:6377:6401	13801	0	True				
ANR	13805	AssignmentExpression	ckpt_filename = filename		13801	0		=			
ANR	13806	Identifier	ckpt_filename		13801	0					
ANR	13807	Identifier	filename		13801	1					
ANR	13808	ExpressionStatement	"tmp_ckpt_filename = ckpt_filename + ""tmp"""	236:1:6404:6445	13801	1	True				
ANR	13809	AssignmentExpression	"tmp_ckpt_filename = ckpt_filename + ""tmp"""		13801	0		=			
ANR	13810	Identifier	tmp_ckpt_filename		13801	0					
ANR	13811	AdditiveExpression	"ckpt_filename + ""tmp"""		13801	1		+			
ANR	13812	Identifier	ckpt_filename		13801	0					
ANR	13813	PrimaryExpression	"""tmp"""		13801	1					
ANR	13814	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper_follow ( ckpt_filename . Value ( ) , ""r"" ) ;"	238:1:6449:6513	13801	2	True				
ANR	13815	IdentifierDecl	"* fp = safe_fopen_wrapper_follow ( ckpt_filename . Value ( ) , ""r"" )"		13801	0					
ANR	13816	IdentifierDeclType	FILE *		13801	0					
ANR	13817	Identifier	fp		13801	1					
ANR	13818	AssignmentExpression	"* fp = safe_fopen_wrapper_follow ( ckpt_filename . Value ( ) , ""r"" )"		13801	2		=			
ANR	13819	Identifier	fp		13801	0					
ANR	13820	CallExpression	"safe_fopen_wrapper_follow ( ckpt_filename . Value ( ) , ""r"" )"		13801	1					
ANR	13821	Callee	safe_fopen_wrapper_follow		13801	0					
ANR	13822	Identifier	safe_fopen_wrapper_follow		13801	0					
ANR	13823	ArgumentList	ckpt_filename . Value ( )		13801	1					
ANR	13824	Argument	ckpt_filename . Value ( )		13801	0					
ANR	13825	CallExpression	ckpt_filename . Value ( )		13801	0					
ANR	13826	Callee	ckpt_filename . Value		13801	0					
ANR	13827	MemberAccess	ckpt_filename . Value		13801	0					
ANR	13828	Identifier	ckpt_filename		13801	0					
ANR	13829	Identifier	Value		13801	1					
ANR	13830	ArgumentList			13801	1					
ANR	13831	Argument	"""r"""		13801	1					
ANR	13832	PrimaryExpression	"""r"""		13801	0					
ANR	13833	IfStatement	if ( fp )		13801	3					
ANR	13834	Condition	fp	239:5:6520:6521	13801	0	True				
ANR	13835	Identifier	fp		13801	0					
ANR	13836	CompoundStatement		8:2:172:186	13801	1					
ANR	13837	IdentifierDeclStatement	MyString state ;	240:2:6529:6543	13801	0	True				
ANR	13838	IdentifierDecl	state		13801	0					
ANR	13839	IdentifierDeclType	MyString		13801	0					
ANR	13840	Identifier	state		13801	1					
ANR	13841	IdentifierDeclStatement	char buf [ 1025 ] ;	241:2:6547:6561	13801	1	True				
ANR	13842	IdentifierDecl	buf [ 1025 ]		13801	0					
ANR	13843	IdentifierDeclType	char [ 1025 ]		13801	0					
ANR	13844	Identifier	buf		13801	1					
ANR	13845	PrimaryExpression	1025		13801	2					
ANR	13846	ExpressionStatement	"memset ( buf , 0 , 1025 )"	242:2:6565:6585	13801	2	True				
ANR	13847	CallExpression	"memset ( buf , 0 , 1025 )"		13801	0					
ANR	13848	Callee	memset		13801	0					
ANR	13849	Identifier	memset		13801	0					
ANR	13850	ArgumentList	buf		13801	1					
ANR	13851	Argument	buf		13801	0					
ANR	13852	Identifier	buf		13801	0					
ANR	13853	Argument	0		13801	1					
ANR	13854	PrimaryExpression	0		13801	0					
ANR	13855	Argument	1025		13801	2					
ANR	13856	PrimaryExpression	1025		13801	0					
ANR	13857	WhileStatement	"while ( fread ( buf , sizeof ( char ) , 1024 , fp ) )"		13801	3					
ANR	13858	Condition	"fread ( buf , sizeof ( char ) , 1024 , fp )"	243:9:6596:6629	13801	0	True				
ANR	13859	CallExpression	"fread ( buf , sizeof ( char ) , 1024 , fp )"		13801	0					
ANR	13860	Callee	fread		13801	0					
ANR	13861	Identifier	fread		13801	0					
ANR	13862	ArgumentList	buf		13801	1					
ANR	13863	Argument	buf		13801	0					
ANR	13864	Identifier	buf		13801	0					
ANR	13865	Argument	sizeof ( char )		13801	1					
ANR	13866	SizeofExpression	sizeof ( char )		13801	0					
ANR	13867	Sizeof	sizeof		13801	0					
ANR	13868	SizeofOperand	char		13801	1					
ANR	13869	Argument	1024		13801	2					
ANR	13870	PrimaryExpression	1024		13801	0					
ANR	13871	Argument	fp		13801	3					
ANR	13872	Identifier	fp		13801	0					
ANR	13873	CompoundStatement		10:46:258:258	13801	1					
ANR	13874	ExpressionStatement	state += buf	244:3:6638:6650	13801	0	True				
ANR	13875	AssignmentExpression	state += buf		13801	0		+=			
ANR	13876	Identifier	state		13801	0					
ANR	13877	Identifier	buf		13801	1					
ANR	13878	ExpressionStatement	fclose ( fp )	246:2:6658:6668	13801	4	True				
ANR	13879	CallExpression	fclose ( fp )		13801	0					
ANR	13880	Callee	fclose		13801	0					
ANR	13881	Identifier	fclose		13801	0					
ANR	13882	ArgumentList	fp		13801	1					
ANR	13883	Argument	fp		13801	0					
ANR	13884	Identifier	fp		13801	0					
ANR	13885	ExpressionStatement	serialize ( state )	247:2:6672:6688	13801	5	True				
ANR	13886	CallExpression	serialize ( state )		13801	0					
ANR	13887	Callee	serialize		13801	0					
ANR	13888	Identifier	serialize		13801	0					
ANR	13889	ArgumentList	state		13801	1					
ANR	13890	Argument	state		13801	0					
ANR	13891	Identifier	state		13801	0					
ANR	13892	ReturnType	void		13801	1					
ANR	13893	Identifier	AvailStats :: checkpoint_filename		13801	2					
ANR	13894	ParameterList	MyString filename		13801	3					
ANR	13895	Parameter	MyString filename	233:33:6354:6370	13801	0	True				
ANR	13896	ParameterType	MyString		13801	0					
ANR	13897	Identifier	filename		13801	1					
ANR	13898	CFGEntryNode	ENTRY		13801		True				
ANR	13899	CFGExitNode	EXIT		13801		True				
ANR	13900	Symbol	ckpt_filename		13801						
ANR	13901	Symbol	buf		13801						
ANR	13902	Symbol	filename		13801						
ANR	13903	Symbol	tmp_ckpt_filename		13801						
ANR	13904	Symbol	fp		13801						
ANR	13905	Symbol	state		13801						
ANR	13906	Symbol	safe_fopen_wrapper_follow		13801						
ANR	13907	Symbol	ckpt_filename . Value		13801						
ANR	13908	Symbol	fread		13801						
ANR	13909	Function	AvailStats :: checkpoint	251:0:6696:7568							
ANR	13910	FunctionDef	AvailStats :: checkpoint ()		13909	0					
ANR	13911	CompoundStatement		253:0:6726:7568	13909	0					
ANR	13912	IfStatement	if ( ckpt_filename . Length ( ) )		13909	0					
ANR	13913	Condition	ckpt_filename . Length ( )	259:5:7009:7030	13909	0	True				
ANR	13914	CallExpression	ckpt_filename . Length ( )		13909	0					
ANR	13915	Callee	ckpt_filename . Length		13909	0					
ANR	13916	MemberAccess	ckpt_filename . Length		13909	0					
ANR	13917	Identifier	ckpt_filename		13909	0					
ANR	13918	Identifier	Length		13909	1					
ANR	13919	ArgumentList			13909	1					
ANR	13920	CompoundStatement		8:2:311:379	13909	1					
ANR	13921	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper_follow ( tmp_ckpt_filename . Value ( ) , ""w"" ) ;"	260:2:7038:7106	13909	0	True				
ANR	13922	IdentifierDecl	"* fp = safe_fopen_wrapper_follow ( tmp_ckpt_filename . Value ( ) , ""w"" )"		13909	0					
ANR	13923	IdentifierDeclType	FILE *		13909	0					
ANR	13924	Identifier	fp		13909	1					
ANR	13925	AssignmentExpression	"* fp = safe_fopen_wrapper_follow ( tmp_ckpt_filename . Value ( ) , ""w"" )"		13909	2		=			
ANR	13926	Identifier	fp		13909	0					
ANR	13927	CallExpression	"safe_fopen_wrapper_follow ( tmp_ckpt_filename . Value ( ) , ""w"" )"		13909	1					
ANR	13928	Callee	safe_fopen_wrapper_follow		13909	0					
ANR	13929	Identifier	safe_fopen_wrapper_follow		13909	0					
ANR	13930	ArgumentList	tmp_ckpt_filename . Value ( )		13909	1					
ANR	13931	Argument	tmp_ckpt_filename . Value ( )		13909	0					
ANR	13932	CallExpression	tmp_ckpt_filename . Value ( )		13909	0					
ANR	13933	Callee	tmp_ckpt_filename . Value		13909	0					
ANR	13934	MemberAccess	tmp_ckpt_filename . Value		13909	0					
ANR	13935	Identifier	tmp_ckpt_filename		13909	0					
ANR	13936	Identifier	Value		13909	1					
ANR	13937	ArgumentList			13909	1					
ANR	13938	Argument	"""w"""		13909	1					
ANR	13939	PrimaryExpression	"""w"""		13909	0					
ANR	13940	IfStatement	if ( fp )		13909	1					
ANR	13941	Condition	fp	261:6:7114:7115	13909	0	True				
ANR	13942	Identifier	fp		13909	0					
ANR	13943	CompoundStatement		10:3:397:425	13909	1					
ANR	13944	IdentifierDeclStatement	MyString state = serialize ( ) ;	262:3:7124:7152	13909	0	True				
ANR	13945	IdentifierDecl	state = serialize ( )		13909	0					
ANR	13946	IdentifierDeclType	MyString		13909	0					
ANR	13947	Identifier	state		13909	1					
ANR	13948	AssignmentExpression	state = serialize ( )		13909	2		=			
ANR	13949	Identifier	state		13909	0					
ANR	13950	CallExpression	serialize ( )		13909	1					
ANR	13951	Callee	serialize		13909	0					
ANR	13952	Identifier	serialize		13909	0					
ANR	13953	ArgumentList			13909	1					
ANR	13954	IfStatement	"if ( ( int ) fwrite ( state . Value ( ) , sizeof ( char ) , state . Length ( ) , fp ) == state . Length ( ) )"		13909	1					
ANR	13955	Condition	"( int ) fwrite ( state . Value ( ) , sizeof ( char ) , state . Length ( ) , fp ) == state . Length ( )"	263:7:7161:7245	13909	0	True				
ANR	13956	EqualityExpression	"( int ) fwrite ( state . Value ( ) , sizeof ( char ) , state . Length ( ) , fp ) == state . Length ( )"		13909	0		==			
ANR	13957	CastExpression	"( int ) fwrite ( state . Value ( ) , sizeof ( char ) , state . Length ( ) , fp )"		13909	0					
ANR	13958	CastTarget	int		13909	0					
ANR	13959	CallExpression	"fwrite ( state . Value ( ) , sizeof ( char ) , state . Length ( ) , fp )"		13909	1					
ANR	13960	Callee	fwrite		13909	0					
ANR	13961	Identifier	fwrite		13909	0					
ANR	13962	ArgumentList	state . Value ( )		13909	1					
ANR	13963	Argument	state . Value ( )		13909	0					
ANR	13964	CallExpression	state . Value ( )		13909	0					
ANR	13965	Callee	state . Value		13909	0					
ANR	13966	MemberAccess	state . Value		13909	0					
ANR	13967	Identifier	state		13909	0					
ANR	13968	Identifier	Value		13909	1					
ANR	13969	ArgumentList			13909	1					
ANR	13970	Argument	sizeof ( char )		13909	1					
ANR	13971	SizeofExpression	sizeof ( char )		13909	0					
ANR	13972	Sizeof	sizeof		13909	0					
ANR	13973	SizeofOperand	char		13909	1					
ANR	13974	Argument	state . Length ( )		13909	2					
ANR	13975	CallExpression	state . Length ( )		13909	0					
ANR	13976	Callee	state . Length		13909	0					
ANR	13977	MemberAccess	state . Length		13909	0					
ANR	13978	Identifier	state		13909	0					
ANR	13979	Identifier	Length		13909	1					
ANR	13980	ArgumentList			13909	1					
ANR	13981	Argument	fp		13909	3					
ANR	13982	Identifier	fp		13909	0					
ANR	13983	CallExpression	state . Length ( )		13909	1					
ANR	13984	Callee	state . Length		13909	0					
ANR	13985	MemberAccess	state . Length		13909	0					
ANR	13986	Identifier	state		13909	0					
ANR	13987	Identifier	Length		13909	1					
ANR	13988	ArgumentList			13909	1					
ANR	13989	CompoundStatement		12:31:522:522	13909	1					
ANR	13990	ExpressionStatement	fclose ( fp )	265:4:7255:7265	13909	0	True				
ANR	13991	CallExpression	fclose ( fp )		13909	0					
ANR	13992	Callee	fclose		13909	0					
ANR	13993	Identifier	fclose		13909	0					
ANR	13994	ArgumentList	fp		13909	1					
ANR	13995	Argument	fp		13909	0					
ANR	13996	Identifier	fp		13909	0					
ANR	13997	IfStatement	"if ( rotate_file ( tmp_ckpt_filename . Value ( ) , ckpt_filename . Value ( ) ) < 0 )"		13909	1					
ANR	13998	Condition	"rotate_file ( tmp_ckpt_filename . Value ( ) , ckpt_filename . Value ( ) ) < 0"	266:9:7276:7349	13909	0	True				
ANR	13999	RelationalExpression	"rotate_file ( tmp_ckpt_filename . Value ( ) , ckpt_filename . Value ( ) ) < 0"		13909	0		<			
ANR	14000	CallExpression	"rotate_file ( tmp_ckpt_filename . Value ( ) , ckpt_filename . Value ( ) )"		13909	0					
ANR	14001	Callee	rotate_file		13909	0					
ANR	14002	Identifier	rotate_file		13909	0					
ANR	14003	ArgumentList	tmp_ckpt_filename . Value ( )		13909	1					
ANR	14004	Argument	tmp_ckpt_filename . Value ( )		13909	0					
ANR	14005	CallExpression	tmp_ckpt_filename . Value ( )		13909	0					
ANR	14006	Callee	tmp_ckpt_filename . Value		13909	0					
ANR	14007	MemberAccess	tmp_ckpt_filename . Value		13909	0					
ANR	14008	Identifier	tmp_ckpt_filename		13909	0					
ANR	14009	Identifier	Value		13909	1					
ANR	14010	ArgumentList			13909	1					
ANR	14011	Argument	ckpt_filename . Value ( )		13909	1					
ANR	14012	CallExpression	ckpt_filename . Value ( )		13909	0					
ANR	14013	Callee	ckpt_filename . Value		13909	0					
ANR	14014	MemberAccess	ckpt_filename . Value		13909	0					
ANR	14015	Identifier	ckpt_filename		13909	0					
ANR	14016	Identifier	Value		13909	1					
ANR	14017	ArgumentList			13909	1					
ANR	14018	PrimaryExpression	0		13909	1					
ANR	14019	CompoundStatement		15:38:626:626	13909	1					
ANR	14020	Statement	dprintf	268:5:7360:7366	13909	0	True				
ANR	14021	Statement	(	268:12:7367:7367	13909	1	True				
ANR	14022	Statement	D_ALWAYS	268:14:7369:7376	13909	2	True				
ANR	14023	Statement	","	268:22:7377:7377	13909	3	True				
ANR	14024	Statement	"""AvailStats::checkpoint() failed to rotate """	269:8:7387:7430	13909	4	True				
ANR	14025	Statement	"""%s to %s\\n"""	270:8:7440:7451	13909	5	True				
ANR	14026	Statement	","	270:20:7452:7452	13909	6	True				
ANR	14027	Statement	tmp_ckpt_filename	271:8:7462:7478	13909	7	True				
ANR	14028	Statement	.	271:25:7479:7479	13909	8	True				
ANR	14029	Statement	Value	271:26:7480:7484	13909	9	True				
ANR	14030	Statement	(	271:31:7485:7485	13909	10	True				
ANR	14031	Statement	)	271:32:7486:7486	13909	11	True				
ANR	14032	Statement	","	271:33:7487:7487	13909	12	True				
ANR	14033	Statement	ckpt_filename	272:8:7497:7509	13909	13	True				
ANR	14034	Statement	.	272:21:7510:7510	13909	14	True				
ANR	14035	Statement	Value	272:22:7511:7515	13909	15	True				
ANR	14036	Statement	(	272:27:7516:7516	13909	16	True				
ANR	14037	Statement	)	272:28:7517:7517	13909	17	True				
ANR	14038	Statement	)	272:30:7519:7519	13909	18	True				
ANR	14039	ExpressionStatement		272:31:7520:7520	13909	19	True				
ANR	14040	ElseStatement	else		13909	0					
ANR	14041	CompoundStatement		22:10:811:811	13909	0					
ANR	14042	ExpressionStatement	fclose ( fp )	275:4:7544:7554	13909	0	True				
ANR	14043	CallExpression	fclose ( fp )		13909	0					
ANR	14044	Callee	fclose		13909	0					
ANR	14045	Identifier	fclose		13909	0					
ANR	14046	ArgumentList	fp		13909	1					
ANR	14047	Argument	fp		13909	0					
ANR	14048	Identifier	fp		13909	0					
ANR	14049	ReturnType	void		13909	1					
ANR	14050	Identifier	AvailStats :: checkpoint		13909	2					
ANR	14051	ParameterList			13909	3					
ANR	14052	CFGEntryNode	ENTRY		13909		True				
ANR	14053	CFGExitNode	EXIT		13909		True				
ANR	14054	Symbol	ckpt_filename		13909						
ANR	14055	Symbol	state . Value		13909						
ANR	14056	Symbol	tmp_ckpt_filename		13909						
ANR	14057	Symbol	fwrite		13909						
ANR	14058	Symbol	fp		13909						
ANR	14059	Symbol	ckpt_filename . Length		13909						
ANR	14060	Symbol	state . Length		13909						
ANR	14061	Symbol	serialize		13909						
ANR	14062	Symbol	tmp_ckpt_filename . Value		13909						
ANR	14063	Symbol	rotate_file		13909						
ANR	14064	Symbol	state		13909						
ANR	14065	Symbol	safe_fopen_wrapper_follow		13909						
ANR	14066	Symbol	ckpt_filename . Value		13909						
