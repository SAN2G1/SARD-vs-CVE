command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4793747	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_internet.cpp								
ANR	4793748	DeclStmt									
ANR	4793749	Decl							int	"int ( const int fd , const int low_port , const int high_port )"	bindWithin
ANR	4793750	Function	split_sin	58:0:1769:3063							
ANR	4793751	FunctionDef	"split_sin (const char * addr , char * * host , char * * port , char * * params)"		4793750	0					
ANR	4793752	CompoundStatement		60:0:1844:3063	4793750	0					
ANR	4793753	IdentifierDeclStatement	int len ;	61:1:1847:1854	4793750	0	True				
ANR	4793754	IdentifierDecl	len		4793750	0					
ANR	4793755	IdentifierDeclType	int		4793750	0					
ANR	4793756	Identifier	len		4793750	1					
ANR	4793757	IfStatement	if ( host )		4793750	1					
ANR	4793758	Condition	host	63:5:1862:1865	4793750	0	True				
ANR	4793759	Identifier	host		4793750	0					
ANR	4793760	ExpressionStatement	* host = NULL	63:12:1869:1881	4793750	1	True				
ANR	4793761	AssignmentExpression	* host = NULL		4793750	0		=			
ANR	4793762	UnaryOperationExpression	* host		4793750	0					
ANR	4793763	UnaryOperator	*		4793750	0					
ANR	4793764	Identifier	host		4793750	1					
ANR	4793765	Identifier	NULL		4793750	1					
ANR	4793766	IfStatement	if ( port )		4793750	2					
ANR	4793767	Condition	port	64:5:1888:1891	4793750	0	True				
ANR	4793768	Identifier	port		4793750	0					
ANR	4793769	ExpressionStatement	* port = NULL	64:12:1895:1907	4793750	1	True				
ANR	4793770	AssignmentExpression	* port = NULL		4793750	0		=			
ANR	4793771	UnaryOperationExpression	* port		4793750	0					
ANR	4793772	UnaryOperator	*		4793750	0					
ANR	4793773	Identifier	port		4793750	1					
ANR	4793774	Identifier	NULL		4793750	1					
ANR	4793775	IfStatement	if ( params )		4793750	3					
ANR	4793776	Condition	params	65:5:1914:1919	4793750	0	True				
ANR	4793777	Identifier	params		4793750	0					
ANR	4793778	ExpressionStatement	* params = NULL	65:14:1923:1937	4793750	1	True				
ANR	4793779	AssignmentExpression	* params = NULL		4793750	0		=			
ANR	4793780	UnaryOperationExpression	* params		4793750	0					
ANR	4793781	UnaryOperator	*		4793750	0					
ANR	4793782	Identifier	params		4793750	1					
ANR	4793783	Identifier	NULL		4793750	1					
ANR	4793784	IfStatement	if ( ! addr || * addr != '<' )		4793750	4					
ANR	4793785	Condition	! addr || * addr != '<'	67:5:1945:1965	4793750	0	True				
ANR	4793786	OrExpression	! addr || * addr != '<'		4793750	0		||			
ANR	4793787	UnaryOperationExpression	! addr		4793750	0					
ANR	4793788	UnaryOperator	!		4793750	0					
ANR	4793789	Identifier	addr		4793750	1					
ANR	4793790	EqualityExpression	* addr != '<'		4793750	1		!=			
ANR	4793791	UnaryOperationExpression	* addr		4793750	0					
ANR	4793792	UnaryOperator	*		4793750	0					
ANR	4793793	Identifier	addr		4793750	1					
ANR	4793794	PrimaryExpression	'<'		4793750	1					
ANR	4793795	CompoundStatement		8:29:124:124	4793750	1					
ANR	4793796	ReturnStatement	return 0 ;	68:2:1973:1981	4793750	0	True				
ANR	4793797	PrimaryExpression	0		4793750	0					
ANR	4793798	ExpressionStatement	addr ++	70:1:1987:1993	4793750	5	True				
ANR	4793799	PostIncDecOperationExpression	addr ++		4793750	0					
ANR	4793800	Identifier	addr		4793750	0					
ANR	4793801	IncDec	++		4793750	1					
ANR	4793802	IfStatement	if ( * addr == '[' )		4793750	6					
ANR	4793803	Condition	* addr == '['	72:5:2001:2012	4793750	0	True				
ANR	4793804	EqualityExpression	* addr == '['		4793750	0		==			
ANR	4793805	UnaryOperationExpression	* addr		4793750	0					
ANR	4793806	UnaryOperator	*		4793750	0					
ANR	4793807	Identifier	addr		4793750	1					
ANR	4793808	PrimaryExpression	'['		4793750	1					
ANR	4793809	CompoundStatement		16:2:202:237	4793750	1					
ANR	4793810	ExpressionStatement	addr ++	73:2:2019:2025	4793750	0	True				
ANR	4793811	PostIncDecOperationExpression	addr ++		4793750	0					
ANR	4793812	Identifier	addr		4793750	0					
ANR	4793813	IncDec	++		4793750	1					
ANR	4793814	IdentifierDeclStatement	"const char * pos = strchr ( addr , ']' ) ;"	75:2:2047:2082	4793750	1	True				
ANR	4793815	IdentifierDecl	"* pos = strchr ( addr , ']' )"		4793750	0					
ANR	4793816	IdentifierDeclType	const char *		4793750	0					
ANR	4793817	Identifier	pos		4793750	1					
ANR	4793818	AssignmentExpression	"* pos = strchr ( addr , ']' )"		4793750	2		=			
ANR	4793819	Identifier	pos		4793750	0					
ANR	4793820	CallExpression	"strchr ( addr , ']' )"		4793750	1					
ANR	4793821	Callee	strchr		4793750	0					
ANR	4793822	Identifier	strchr		4793750	0					
ANR	4793823	ArgumentList	addr		4793750	1					
ANR	4793824	Argument	addr		4793750	0					
ANR	4793825	Identifier	addr		4793750	0					
ANR	4793826	Argument	']'		4793750	1					
ANR	4793827	PrimaryExpression	']'		4793750	0					
ANR	4793828	IfStatement	if ( ! pos )		4793750	2					
ANR	4793829	Condition	! pos	76:6:2090:2093	4793750	0	True				
ANR	4793830	UnaryOperationExpression	! pos		4793750	0					
ANR	4793831	UnaryOperator	!		4793750	0					
ANR	4793832	Identifier	pos		4793750	1					
ANR	4793833	CompoundStatement		17:12:251:251	4793750	1					
ANR	4793834	ReturnStatement	return 0 ;	78:3:2125:2133	4793750	0	True				
ANR	4793835	PrimaryExpression	0		4793750	0					
ANR	4793836	ExpressionStatement	* host = ( char * ) malloc ( pos - addr + 1 )	80:2:2141:2178	4793750	3	True				
ANR	4793837	AssignmentExpression	* host = ( char * ) malloc ( pos - addr + 1 )		4793750	0		=			
ANR	4793838	UnaryOperationExpression	* host		4793750	0					
ANR	4793839	UnaryOperator	*		4793750	0					
ANR	4793840	Identifier	host		4793750	1					
ANR	4793841	CastExpression	( char * ) malloc ( pos - addr + 1 )		4793750	1					
ANR	4793842	CastTarget	char *		4793750	0					
ANR	4793843	CallExpression	malloc ( pos - addr + 1 )		4793750	1					
ANR	4793844	Callee	malloc		4793750	0					
ANR	4793845	Identifier	malloc		4793750	0					
ANR	4793846	ArgumentList	pos - addr + 1		4793750	1					
ANR	4793847	Argument	pos - addr + 1		4793750	0					
ANR	4793848	AdditiveExpression	pos - addr + 1		4793750	0		-			
ANR	4793849	Identifier	pos		4793750	0					
ANR	4793850	AdditiveExpression	addr + 1		4793750	1		+			
ANR	4793851	Identifier	addr		4793750	0					
ANR	4793852	PrimaryExpression	1		4793750	1					
ANR	4793853	ExpressionStatement	( * host ) [ pos - addr ] = '\\0'	81:2:2182:2208	4793750	4	True				
ANR	4793854	AssignmentExpression	( * host ) [ pos - addr ] = '\\0'		4793750	0		=			
ANR	4793855	ArrayIndexing	( * host ) [ pos - addr ]		4793750	0					
ANR	4793856	UnaryOperationExpression	* host		4793750	0					
ANR	4793857	UnaryOperator	*		4793750	0					
ANR	4793858	Identifier	host		4793750	1					
ANR	4793859	AdditiveExpression	pos - addr		4793750	1		-			
ANR	4793860	Identifier	pos		4793750	0					
ANR	4793861	Identifier	addr		4793750	1					
ANR	4793862	PrimaryExpression	'\\0'		4793750	1					
ANR	4793863	ExpressionStatement	"memcpy ( * host , addr , pos - addr )"	82:2:2212:2243	4793750	5	True				
ANR	4793864	CallExpression	"memcpy ( * host , addr , pos - addr )"		4793750	0					
ANR	4793865	Callee	memcpy		4793750	0					
ANR	4793866	Identifier	memcpy		4793750	0					
ANR	4793867	ArgumentList	* host		4793750	1					
ANR	4793868	Argument	* host		4793750	0					
ANR	4793869	UnaryOperationExpression	* host		4793750	0					
ANR	4793870	UnaryOperator	*		4793750	0					
ANR	4793871	Identifier	host		4793750	1					
ANR	4793872	Argument	addr		4793750	1					
ANR	4793873	Identifier	addr		4793750	0					
ANR	4793874	Argument	pos - addr		4793750	2					
ANR	4793875	AdditiveExpression	pos - addr		4793750	0		-			
ANR	4793876	Identifier	pos		4793750	0					
ANR	4793877	Identifier	addr		4793750	1					
ANR	4793878	ExpressionStatement	addr = pos + 1	83:2:2247:2261	4793750	6	True				
ANR	4793879	AssignmentExpression	addr = pos + 1		4793750	0		=			
ANR	4793880	Identifier	addr		4793750	0					
ANR	4793881	AdditiveExpression	pos + 1		4793750	1		+			
ANR	4793882	Identifier	pos		4793750	0					
ANR	4793883	PrimaryExpression	1		4793750	1					
ANR	4793884	ElseStatement	else		4793750	0					
ANR	4793885	CompoundStatement		25:8:426:426	4793750	0					
ANR	4793886	ExpressionStatement	"len = strcspn ( addr , "":?>"" )"	86:2:2296:2321	4793750	0	True				
ANR	4793887	AssignmentExpression	"len = strcspn ( addr , "":?>"" )"		4793750	0		=			
ANR	4793888	Identifier	len		4793750	0					
ANR	4793889	CallExpression	"strcspn ( addr , "":?>"" )"		4793750	1					
ANR	4793890	Callee	strcspn		4793750	0					
ANR	4793891	Identifier	strcspn		4793750	0					
ANR	4793892	ArgumentList	addr		4793750	1					
ANR	4793893	Argument	addr		4793750	0					
ANR	4793894	Identifier	addr		4793750	0					
ANR	4793895	Argument	""":?>"""		4793750	1					
ANR	4793896	PrimaryExpression	""":?>"""		4793750	0					
ANR	4793897	IfStatement	if ( host )		4793750	1					
ANR	4793898	Condition	host	87:6:2329:2332	4793750	0	True				
ANR	4793899	Identifier	host		4793750	0					
ANR	4793900	CompoundStatement		28:13:491:491	4793750	1					
ANR	4793901	ExpressionStatement	* host = ( char * ) malloc ( len + 1 )	88:3:2341:2370	4793750	0	True				
ANR	4793902	AssignmentExpression	* host = ( char * ) malloc ( len + 1 )		4793750	0		=			
ANR	4793903	UnaryOperationExpression	* host		4793750	0					
ANR	4793904	UnaryOperator	*		4793750	0					
ANR	4793905	Identifier	host		4793750	1					
ANR	4793906	CastExpression	( char * ) malloc ( len + 1 )		4793750	1					
ANR	4793907	CastTarget	char *		4793750	0					
ANR	4793908	CallExpression	malloc ( len + 1 )		4793750	1					
ANR	4793909	Callee	malloc		4793750	0					
ANR	4793910	Identifier	malloc		4793750	0					
ANR	4793911	ArgumentList	len + 1		4793750	1					
ANR	4793912	Argument	len + 1		4793750	0					
ANR	4793913	AdditiveExpression	len + 1		4793750	0		+			
ANR	4793914	Identifier	len		4793750	0					
ANR	4793915	PrimaryExpression	1		4793750	1					
ANR	4793916	ExpressionStatement	"memcpy ( * host , addr , len )"	89:3:2375:2397	4793750	1	True				
ANR	4793917	CallExpression	"memcpy ( * host , addr , len )"		4793750	0					
ANR	4793918	Callee	memcpy		4793750	0					
ANR	4793919	Identifier	memcpy		4793750	0					
ANR	4793920	ArgumentList	* host		4793750	1					
ANR	4793921	Argument	* host		4793750	0					
ANR	4793922	UnaryOperationExpression	* host		4793750	0					
ANR	4793923	UnaryOperator	*		4793750	0					
ANR	4793924	Identifier	host		4793750	1					
ANR	4793925	Argument	addr		4793750	1					
ANR	4793926	Identifier	addr		4793750	0					
ANR	4793927	Argument	len		4793750	2					
ANR	4793928	Identifier	len		4793750	0					
ANR	4793929	ExpressionStatement	( * host ) [ len ] = '\\0'	90:3:2402:2421	4793750	2	True				
ANR	4793930	AssignmentExpression	( * host ) [ len ] = '\\0'		4793750	0		=			
ANR	4793931	ArrayIndexing	( * host ) [ len ]		4793750	0					
ANR	4793932	UnaryOperationExpression	* host		4793750	0					
ANR	4793933	UnaryOperator	*		4793750	0					
ANR	4793934	Identifier	host		4793750	1					
ANR	4793935	Identifier	len		4793750	1					
ANR	4793936	PrimaryExpression	'\\0'		4793750	1					
ANR	4793937	ExpressionStatement	addr += len	92:2:2429:2440	4793750	2	True				
ANR	4793938	AssignmentExpression	addr += len		4793750	0		+=			
ANR	4793939	Identifier	addr		4793750	0					
ANR	4793940	Identifier	len		4793750	1					
ANR	4793941	IfStatement	if ( * addr == ':' )		4793750	7					
ANR	4793942	Condition	* addr == ':'	95:5:2451:2462	4793750	0	True				
ANR	4793943	EqualityExpression	* addr == ':'		4793750	0		==			
ANR	4793944	UnaryOperationExpression	* addr		4793750	0					
ANR	4793945	UnaryOperator	*		4793750	0					
ANR	4793946	Identifier	addr		4793750	1					
ANR	4793947	PrimaryExpression	':'		4793750	1					
ANR	4793948	CompoundStatement		36:20:621:621	4793750	1					
ANR	4793949	ExpressionStatement	addr ++	96:2:2470:2476	4793750	0	True				
ANR	4793950	PostIncDecOperationExpression	addr ++		4793750	0					
ANR	4793951	Identifier	addr		4793750	0					
ANR	4793952	IncDec	++		4793750	1					
ANR	4793953	ExpressionStatement	"len = strspn ( addr , ""0123456789"" )"	97:2:2480:2511	4793750	1	True				
ANR	4793954	AssignmentExpression	"len = strspn ( addr , ""0123456789"" )"		4793750	0		=			
ANR	4793955	Identifier	len		4793750	0					
ANR	4793956	CallExpression	"strspn ( addr , ""0123456789"" )"		4793750	1					
ANR	4793957	Callee	strspn		4793750	0					
ANR	4793958	Identifier	strspn		4793750	0					
ANR	4793959	ArgumentList	addr		4793750	1					
ANR	4793960	Argument	addr		4793750	0					
ANR	4793961	Identifier	addr		4793750	0					
ANR	4793962	Argument	"""0123456789"""		4793750	1					
ANR	4793963	PrimaryExpression	"""0123456789"""		4793750	0					
ANR	4793964	IfStatement	if ( port )		4793750	2					
ANR	4793965	Condition	port	98:6:2519:2522	4793750	0	True				
ANR	4793966	Identifier	port		4793750	0					
ANR	4793967	CompoundStatement		39:13:681:681	4793750	1					
ANR	4793968	ExpressionStatement	* port = ( char * ) malloc ( len + 1 )	99:3:2531:2560	4793750	0	True				
ANR	4793969	AssignmentExpression	* port = ( char * ) malloc ( len + 1 )		4793750	0		=			
ANR	4793970	UnaryOperationExpression	* port		4793750	0					
ANR	4793971	UnaryOperator	*		4793750	0					
ANR	4793972	Identifier	port		4793750	1					
ANR	4793973	CastExpression	( char * ) malloc ( len + 1 )		4793750	1					
ANR	4793974	CastTarget	char *		4793750	0					
ANR	4793975	CallExpression	malloc ( len + 1 )		4793750	1					
ANR	4793976	Callee	malloc		4793750	0					
ANR	4793977	Identifier	malloc		4793750	0					
ANR	4793978	ArgumentList	len + 1		4793750	1					
ANR	4793979	Argument	len + 1		4793750	0					
ANR	4793980	AdditiveExpression	len + 1		4793750	0		+			
ANR	4793981	Identifier	len		4793750	0					
ANR	4793982	PrimaryExpression	1		4793750	1					
ANR	4793983	ExpressionStatement	"memcpy ( * port , addr , len )"	100:3:2565:2587	4793750	1	True				
ANR	4793984	CallExpression	"memcpy ( * port , addr , len )"		4793750	0					
ANR	4793985	Callee	memcpy		4793750	0					
ANR	4793986	Identifier	memcpy		4793750	0					
ANR	4793987	ArgumentList	* port		4793750	1					
ANR	4793988	Argument	* port		4793750	0					
ANR	4793989	UnaryOperationExpression	* port		4793750	0					
ANR	4793990	UnaryOperator	*		4793750	0					
ANR	4793991	Identifier	port		4793750	1					
ANR	4793992	Argument	addr		4793750	1					
ANR	4793993	Identifier	addr		4793750	0					
ANR	4793994	Argument	len		4793750	2					
ANR	4793995	Identifier	len		4793750	0					
ANR	4793996	ExpressionStatement	( * port ) [ len ] = '\\0'	101:3:2592:2611	4793750	2	True				
ANR	4793997	AssignmentExpression	( * port ) [ len ] = '\\0'		4793750	0		=			
ANR	4793998	ArrayIndexing	( * port ) [ len ]		4793750	0					
ANR	4793999	UnaryOperationExpression	* port		4793750	0					
ANR	4794000	UnaryOperator	*		4793750	0					
ANR	4794001	Identifier	port		4793750	1					
ANR	4794002	Identifier	len		4793750	1					
ANR	4794003	PrimaryExpression	'\\0'		4793750	1					
ANR	4794004	ExpressionStatement	addr += len	103:2:2619:2630	4793750	3	True				
ANR	4794005	AssignmentExpression	addr += len		4793750	0		+=			
ANR	4794006	Identifier	addr		4793750	0					
ANR	4794007	Identifier	len		4793750	1					
ANR	4794008	IfStatement	if ( * addr == '?' )		4793750	8					
ANR	4794009	Condition	* addr == '?'	106:5:2641:2652	4793750	0	True				
ANR	4794010	EqualityExpression	* addr == '?'		4793750	0		==			
ANR	4794011	UnaryOperationExpression	* addr		4793750	0					
ANR	4794012	UnaryOperator	*		4793750	0					
ANR	4794013	Identifier	addr		4793750	1					
ANR	4794014	PrimaryExpression	'?'		4793750	1					
ANR	4794015	CompoundStatement		47:20:811:811	4793750	1					
ANR	4794016	ExpressionStatement	addr ++	107:2:2660:2666	4793750	0	True				
ANR	4794017	PostIncDecOperationExpression	addr ++		4793750	0					
ANR	4794018	Identifier	addr		4793750	0					
ANR	4794019	IncDec	++		4793750	1					
ANR	4794020	ExpressionStatement	"len = strcspn ( addr , "">"" )"	108:2:2670:2693	4793750	1	True				
ANR	4794021	AssignmentExpression	"len = strcspn ( addr , "">"" )"		4793750	0		=			
ANR	4794022	Identifier	len		4793750	0					
ANR	4794023	CallExpression	"strcspn ( addr , "">"" )"		4793750	1					
ANR	4794024	Callee	strcspn		4793750	0					
ANR	4794025	Identifier	strcspn		4793750	0					
ANR	4794026	ArgumentList	addr		4793750	1					
ANR	4794027	Argument	addr		4793750	0					
ANR	4794028	Identifier	addr		4793750	0					
ANR	4794029	Argument	""">"""		4793750	1					
ANR	4794030	PrimaryExpression	""">"""		4793750	0					
ANR	4794031	IfStatement	if ( params )		4793750	2					
ANR	4794032	Condition	params	109:6:2701:2706	4793750	0	True				
ANR	4794033	Identifier	params		4793750	0					
ANR	4794034	CompoundStatement		50:15:865:865	4793750	1					
ANR	4794035	ExpressionStatement	* params = ( char * ) malloc ( len + 1 )	110:3:2715:2746	4793750	0	True				
ANR	4794036	AssignmentExpression	* params = ( char * ) malloc ( len + 1 )		4793750	0		=			
ANR	4794037	UnaryOperationExpression	* params		4793750	0					
ANR	4794038	UnaryOperator	*		4793750	0					
ANR	4794039	Identifier	params		4793750	1					
ANR	4794040	CastExpression	( char * ) malloc ( len + 1 )		4793750	1					
ANR	4794041	CastTarget	char *		4793750	0					
ANR	4794042	CallExpression	malloc ( len + 1 )		4793750	1					
ANR	4794043	Callee	malloc		4793750	0					
ANR	4794044	Identifier	malloc		4793750	0					
ANR	4794045	ArgumentList	len + 1		4793750	1					
ANR	4794046	Argument	len + 1		4793750	0					
ANR	4794047	AdditiveExpression	len + 1		4793750	0		+			
ANR	4794048	Identifier	len		4793750	0					
ANR	4794049	PrimaryExpression	1		4793750	1					
ANR	4794050	ExpressionStatement	"memcpy ( * params , addr , len )"	111:3:2751:2775	4793750	1	True				
ANR	4794051	CallExpression	"memcpy ( * params , addr , len )"		4793750	0					
ANR	4794052	Callee	memcpy		4793750	0					
ANR	4794053	Identifier	memcpy		4793750	0					
ANR	4794054	ArgumentList	* params		4793750	1					
ANR	4794055	Argument	* params		4793750	0					
ANR	4794056	UnaryOperationExpression	* params		4793750	0					
ANR	4794057	UnaryOperator	*		4793750	0					
ANR	4794058	Identifier	params		4793750	1					
ANR	4794059	Argument	addr		4793750	1					
ANR	4794060	Identifier	addr		4793750	0					
ANR	4794061	Argument	len		4793750	2					
ANR	4794062	Identifier	len		4793750	0					
ANR	4794063	ExpressionStatement	( * params ) [ len ] = '\\0'	112:3:2780:2801	4793750	2	True				
ANR	4794064	AssignmentExpression	( * params ) [ len ] = '\\0'		4793750	0		=			
ANR	4794065	ArrayIndexing	( * params ) [ len ]		4793750	0					
ANR	4794066	UnaryOperationExpression	* params		4793750	0					
ANR	4794067	UnaryOperator	*		4793750	0					
ANR	4794068	Identifier	params		4793750	1					
ANR	4794069	Identifier	len		4793750	1					
ANR	4794070	PrimaryExpression	'\\0'		4793750	1					
ANR	4794071	ExpressionStatement	addr += len	114:2:2809:2820	4793750	3	True				
ANR	4794072	AssignmentExpression	addr += len		4793750	0		+=			
ANR	4794073	Identifier	addr		4793750	0					
ANR	4794074	Identifier	len		4793750	1					
ANR	4794075	IfStatement	if ( addr [ 0 ] != '>' || addr [ 1 ] != '\\0' )		4793750	9					
ANR	4794076	Condition	addr [ 0 ] != '>' || addr [ 1 ] != '\\0'	117:5:2831:2863	4793750	0	True				
ANR	4794077	OrExpression	addr [ 0 ] != '>' || addr [ 1 ] != '\\0'		4793750	0		||			
ANR	4794078	EqualityExpression	addr [ 0 ] != '>'		4793750	0		!=			
ANR	4794079	ArrayIndexing	addr [ 0 ]		4793750	0					
ANR	4794080	Identifier	addr		4793750	0					
ANR	4794081	PrimaryExpression	0		4793750	1					
ANR	4794082	PrimaryExpression	'>'		4793750	1					
ANR	4794083	EqualityExpression	addr [ 1 ] != '\\0'		4793750	1		!=			
ANR	4794084	ArrayIndexing	addr [ 1 ]		4793750	0					
ANR	4794085	Identifier	addr		4793750	0					
ANR	4794086	PrimaryExpression	1		4793750	1					
ANR	4794087	PrimaryExpression	'\\0'		4793750	1					
ANR	4794088	CompoundStatement		58:41:1022:1022	4793750	1					
ANR	4794089	IfStatement	if ( host )		4793750	0					
ANR	4794090	Condition	host	118:6:2875:2878	4793750	0	True				
ANR	4794091	Identifier	host		4793750	0					
ANR	4794092	CompoundStatement		59:13:1037:1037	4793750	1					
ANR	4794093	ExpressionStatement	free ( * host )	119:3:2887:2900	4793750	0	True				
ANR	4794094	CallExpression	free ( * host )		4793750	0					
ANR	4794095	Callee	free		4793750	0					
ANR	4794096	Identifier	free		4793750	0					
ANR	4794097	ArgumentList	* host		4793750	1					
ANR	4794098	Argument	* host		4793750	0					
ANR	4794099	UnaryOperationExpression	* host		4793750	0					
ANR	4794100	UnaryOperator	*		4793750	0					
ANR	4794101	Identifier	host		4793750	1					
ANR	4794102	ExpressionStatement	* host = NULL	120:3:2905:2917	4793750	1	True				
ANR	4794103	AssignmentExpression	* host = NULL		4793750	0		=			
ANR	4794104	UnaryOperationExpression	* host		4793750	0					
ANR	4794105	UnaryOperator	*		4793750	0					
ANR	4794106	Identifier	host		4793750	1					
ANR	4794107	Identifier	NULL		4793750	1					
ANR	4794108	IfStatement	if ( port )		4793750	1					
ANR	4794109	Condition	port	122:6:2929:2932	4793750	0	True				
ANR	4794110	Identifier	port		4793750	0					
ANR	4794111	CompoundStatement		63:13:1091:1091	4793750	1					
ANR	4794112	ExpressionStatement	free ( * port )	123:3:2941:2954	4793750	0	True				
ANR	4794113	CallExpression	free ( * port )		4793750	0					
ANR	4794114	Callee	free		4793750	0					
ANR	4794115	Identifier	free		4793750	0					
ANR	4794116	ArgumentList	* port		4793750	1					
ANR	4794117	Argument	* port		4793750	0					
ANR	4794118	UnaryOperationExpression	* port		4793750	0					
ANR	4794119	UnaryOperator	*		4793750	0					
ANR	4794120	Identifier	port		4793750	1					
ANR	4794121	ExpressionStatement	* port = NULL	124:3:2959:2971	4793750	1	True				
ANR	4794122	AssignmentExpression	* port = NULL		4793750	0		=			
ANR	4794123	UnaryOperationExpression	* port		4793750	0					
ANR	4794124	UnaryOperator	*		4793750	0					
ANR	4794125	Identifier	port		4793750	1					
ANR	4794126	Identifier	NULL		4793750	1					
ANR	4794127	IfStatement	if ( params )		4793750	2					
ANR	4794128	Condition	params	126:6:2983:2988	4793750	0	True				
ANR	4794129	Identifier	params		4793750	0					
ANR	4794130	CompoundStatement		67:15:1147:1147	4793750	1					
ANR	4794131	ExpressionStatement	free ( * params )	127:3:2997:3012	4793750	0	True				
ANR	4794132	CallExpression	free ( * params )		4793750	0					
ANR	4794133	Callee	free		4793750	0					
ANR	4794134	Identifier	free		4793750	0					
ANR	4794135	ArgumentList	* params		4793750	1					
ANR	4794136	Argument	* params		4793750	0					
ANR	4794137	UnaryOperationExpression	* params		4793750	0					
ANR	4794138	UnaryOperator	*		4793750	0					
ANR	4794139	Identifier	params		4793750	1					
ANR	4794140	ExpressionStatement	* params = NULL	128:3:3017:3031	4793750	1	True				
ANR	4794141	AssignmentExpression	* params = NULL		4793750	0		=			
ANR	4794142	UnaryOperationExpression	* params		4793750	0					
ANR	4794143	UnaryOperator	*		4793750	0					
ANR	4794144	Identifier	params		4793750	1					
ANR	4794145	Identifier	NULL		4793750	1					
ANR	4794146	ReturnStatement	return 0 ;	130:2:3039:3047	4793750	3	True				
ANR	4794147	PrimaryExpression	0		4793750	0					
ANR	4794148	ReturnStatement	return 1 ;	132:1:3053:3061	4793750	10	True				
ANR	4794149	PrimaryExpression	1		4793750	0					
ANR	4794150	ReturnType	int		4793750	1					
ANR	4794151	Identifier	split_sin		4793750	2					
ANR	4794152	ParameterList	"const char * addr , char * * host , char * * port , char * * params"		4793750	3					
ANR	4794153	Parameter	const char * addr	59:11:1784:1799	4793750	0	True				
ANR	4794154	ParameterType	const char *		4793750	0					
ANR	4794155	Identifier	addr		4793750	1					
ANR	4794156	Parameter	char * * host	59:29:1802:1812	4793750	1	True				
ANR	4794157	ParameterType	char * *		4793750	0					
ANR	4794158	Identifier	host		4793750	1					
ANR	4794159	Parameter	char * * port	59:42:1815:1825	4793750	2	True				
ANR	4794160	ParameterType	char * *		4793750	0					
ANR	4794161	Identifier	port		4793750	1					
ANR	4794162	Parameter	char * * params	59:55:1828:1840	4793750	3	True				
ANR	4794163	ParameterType	char * *		4793750	0					
ANR	4794164	Identifier	params		4793750	1					
ANR	4794165	CFGEntryNode	ENTRY		4793750		True				
ANR	4794166	CFGExitNode	EXIT		4793750		True				
ANR	4794167	Symbol	* host		4793750						
ANR	4794168	Symbol	malloc		4793750						
ANR	4794169	Symbol	NULL		4793750						
ANR	4794170	Symbol	strchr		4793750						
ANR	4794171	Symbol	params		4793750						
ANR	4794172	Symbol	* * host		4793750						
ANR	4794173	Symbol	strcspn		4793750						
ANR	4794174	Symbol	* * params		4793750						
ANR	4794175	Symbol	len		4793750						
ANR	4794176	Symbol	* port		4793750						
ANR	4794177	Symbol	port		4793750						
ANR	4794178	Symbol	pos		4793750						
ANR	4794179	Symbol	strspn		4793750						
ANR	4794180	Symbol	* * port		4793750						
ANR	4794181	Symbol	host		4793750						
ANR	4794182	Symbol	* addr		4793750						
ANR	4794183	Symbol	addr		4793750						
ANR	4794184	Symbol	* pos		4793750						
ANR	4794185	Symbol	* params		4793750						
ANR	4794186	Symbol	* len		4793750						
ANR	4794187	Function	sock_to_string	219:0:4971:5218							
ANR	4794188	FunctionDef	sock_to_string (SOCKET sockd)		4794187	0					
ANR	4794189	CompoundStatement		221:0:5013:5218	4794187	0					
ANR	4794190	Statement	static	222:1:5016:5021	4794187	0	True				
ANR	4794191	IdentifierDeclStatement	char sinful [ SINFUL_STRING_BUF_SIZE ] ;	222:8:5023:5058	4794187	1	True				
ANR	4794192	IdentifierDecl	sinful [ SINFUL_STRING_BUF_SIZE ]		4794187	0					
ANR	4794193	IdentifierDeclType	char [ SINFUL_STRING_BUF_SIZE ]		4794187	0					
ANR	4794194	Identifier	sinful		4794187	1					
ANR	4794195	Identifier	SINFUL_STRING_BUF_SIZE		4794187	2					
ANR	4794196	ExpressionStatement	sinful [ 0 ] = '\\0'	223:1:5061:5077	4794187	2	True				
ANR	4794197	AssignmentExpression	sinful [ 0 ] = '\\0'		4794187	0		=			
ANR	4794198	ArrayIndexing	sinful [ 0 ]		4794187	0					
ANR	4794199	Identifier	sinful		4794187	0					
ANR	4794200	PrimaryExpression	0		4794187	1					
ANR	4794201	PrimaryExpression	'\\0'		4794187	1					
ANR	4794202	IdentifierDeclStatement	condor_sockaddr addr ;	224:1:5080:5100	4794187	3	True				
ANR	4794203	IdentifierDecl	addr		4794187	0					
ANR	4794204	IdentifierDeclType	condor_sockaddr		4794187	0					
ANR	4794205	Identifier	addr		4794187	1					
ANR	4794206	IfStatement	"if ( condor_getsockname ( sockd , addr ) < 0 )"		4794187	4					
ANR	4794207	Condition	"condor_getsockname ( sockd , addr ) < 0"	225:5:5107:5140	4794187	0	True				
ANR	4794208	RelationalExpression	"condor_getsockname ( sockd , addr ) < 0"		4794187	0		<			
ANR	4794209	CallExpression	"condor_getsockname ( sockd , addr )"		4794187	0					
ANR	4794210	Callee	condor_getsockname		4794187	0					
ANR	4794211	Identifier	condor_getsockname		4794187	0					
ANR	4794212	ArgumentList	sockd		4794187	1					
ANR	4794213	Argument	sockd		4794187	0					
ANR	4794214	Identifier	sockd		4794187	0					
ANR	4794215	Argument	addr		4794187	1					
ANR	4794216	Identifier	addr		4794187	0					
ANR	4794217	PrimaryExpression	0		4794187	1					
ANR	4794218	ReturnStatement	return sinful ;	226:2:5145:5158	4794187	1	True				
ANR	4794219	Identifier	sinful		4794187	0					
ANR	4794220	ExpressionStatement	"addr . to_sinful ( sinful , sizeof ( sinful ) )"	228:1:5162:5200	4794187	5	True				
ANR	4794221	CallExpression	"addr . to_sinful ( sinful , sizeof ( sinful ) )"		4794187	0					
ANR	4794222	Callee	addr . to_sinful		4794187	0					
ANR	4794223	MemberAccess	addr . to_sinful		4794187	0					
ANR	4794224	Identifier	addr		4794187	0					
ANR	4794225	Identifier	to_sinful		4794187	1					
ANR	4794226	ArgumentList	sinful		4794187	1					
ANR	4794227	Argument	sinful		4794187	0					
ANR	4794228	Identifier	sinful		4794187	0					
ANR	4794229	Argument	sizeof ( sinful )		4794187	1					
ANR	4794230	SizeofExpression	sizeof ( sinful )		4794187	0					
ANR	4794231	Sizeof	sizeof		4794187	0					
ANR	4794232	SizeofOperand	sinful		4794187	1					
ANR	4794233	ReturnStatement	return sinful ;	229:1:5203:5216	4794187	6	True				
ANR	4794234	Identifier	sinful		4794187	0					
ANR	4794235	ReturnType	const char *		4794187	1					
ANR	4794236	Identifier	sock_to_string		4794187	2					
ANR	4794237	ParameterList	SOCKET sockd		4794187	3					
ANR	4794238	Parameter	SOCKET sockd	220:15:4999:5010	4794187	0	True				
ANR	4794239	ParameterType	SOCKET		4794187	0					
ANR	4794240	Identifier	sockd		4794187	1					
ANR	4794241	CFGEntryNode	ENTRY		4794187		True				
ANR	4794242	CFGExitNode	EXIT		4794187		True				
ANR	4794243	Symbol	sockd		4794187						
ANR	4794244	Symbol	* sinful		4794187						
ANR	4794245	Symbol	addr		4794187						
ANR	4794246	Symbol	sinful		4794187						
ANR	4794247	Symbol	condor_getsockname		4794187						
ANR	4794248	Function	sock_peer_to_string	232:0:5221:6001							
ANR	4794249	FunctionDef	"sock_peer_to_string (SOCKET fd , char * buf , size_t buflen , char const * unknown)"		4794248	0					
ANR	4794250	CompoundStatement		234:0:5314:6001	4794248	0					
ANR	4794251	IdentifierDeclStatement	condor_sockaddr addr ;	235:1:5317:5337	4794248	0	True				
ANR	4794252	IdentifierDecl	addr		4794248	0					
ANR	4794253	IdentifierDeclType	condor_sockaddr		4794248	0					
ANR	4794254	Identifier	addr		4794248	1					
ANR	4794255	IfStatement	"if ( condor_getpeername ( fd , addr ) < 0 )"		4794248	1					
ANR	4794256	Condition	"condor_getpeername ( fd , addr ) < 0"	236:5:5344:5374	4794248	0	True				
ANR	4794257	RelationalExpression	"condor_getpeername ( fd , addr ) < 0"		4794248	0		<			
ANR	4794258	CallExpression	"condor_getpeername ( fd , addr )"		4794248	0					
ANR	4794259	Callee	condor_getpeername		4794248	0					
ANR	4794260	Identifier	condor_getpeername		4794248	0					
ANR	4794261	ArgumentList	fd		4794248	1					
ANR	4794262	Argument	fd		4794248	0					
ANR	4794263	Identifier	fd		4794248	0					
ANR	4794264	Argument	addr		4794248	1					
ANR	4794265	Identifier	addr		4794248	0					
ANR	4794266	PrimaryExpression	0		4794248	1					
ANR	4794267	ReturnStatement	return unknown ;	237:2:5379:5393	4794248	1	True				
ANR	4794268	Identifier	unknown		4794248	0					
ANR	4794269	ExpressionStatement	"addr . to_sinful ( buf , buflen )"	239:1:5397:5424	4794248	2	True				
ANR	4794270	CallExpression	"addr . to_sinful ( buf , buflen )"		4794248	0					
ANR	4794271	Callee	addr . to_sinful		4794248	0					
ANR	4794272	MemberAccess	addr . to_sinful		4794248	0					
ANR	4794273	Identifier	addr		4794248	0					
ANR	4794274	Identifier	to_sinful		4794248	1					
ANR	4794275	ArgumentList	buf		4794248	1					
ANR	4794276	Argument	buf		4794248	0					
ANR	4794277	Identifier	buf		4794248	0					
ANR	4794278	Argument	buflen		4794248	1					
ANR	4794279	Identifier	buflen		4794248	0					
ANR	4794280	ReturnStatement	return unknown ;	240:1:5427:5441	4794248	3	True				
ANR	4794281	Identifier	unknown		4794248	0					
ANR	4794282	ReturnType	char const *		4794248	1					
ANR	4794283	Identifier	sock_peer_to_string		4794248	2					
ANR	4794284	ParameterList	"SOCKET fd , char * buf , size_t buflen , char const * unknown"		4794248	3					
ANR	4794285	Parameter	SOCKET fd	233:21:5255:5263	4794248	0	True				
ANR	4794286	ParameterType	SOCKET		4794248	0					
ANR	4794287	Identifier	fd		4794248	1					
ANR	4794288	Parameter	char * buf	233:32:5266:5274	4794248	1	True				
ANR	4794289	ParameterType	char *		4794248	0					
ANR	4794290	Identifier	buf		4794248	1					
ANR	4794291	Parameter	size_t buflen	233:43:5277:5289	4794248	2	True				
ANR	4794292	ParameterType	size_t		4794248	0					
ANR	4794293	Identifier	buflen		4794248	1					
ANR	4794294	Parameter	char const * unknown	233:58:5292:5310	4794248	3	True				
ANR	4794295	ParameterType	char const *		4794248	0					
ANR	4794296	Identifier	unknown		4794248	1					
ANR	4794297	CFGEntryNode	ENTRY		4794248		True				
ANR	4794298	CFGExitNode	EXIT		4794248		True				
ANR	4794299	Symbol	buf		4794248						
ANR	4794300	Symbol	buflen		4794248						
ANR	4794301	Symbol	condor_getpeername		4794248						
ANR	4794302	Symbol	addr		4794248						
ANR	4794303	Symbol	fd		4794248						
ANR	4794304	Symbol	unknown		4794248						
ANR	4794305	Function	calc_subnet_name	329:0:7907:8747							
ANR	4794306	FunctionDef	calc_subnet_name ()		4794305	0					
ANR	4794307	CompoundStatement		331:0:7937:8747	4794305	0					
ANR	4794308	ReturnType	char *		4794305	1					
ANR	4794309	Identifier	calc_subnet_name		4794305	2					
ANR	4794310	ParameterList			4794305	3					
ANR	4794311	CFGEntryNode	ENTRY		4794305		True				
ANR	4794312	CFGExitNode	EXIT		4794305		True				
ANR	4794313	Function	same_host	361:0:8757:9482							
ANR	4794314	FunctionDef	"same_host (const char * h1 , const char * h2)"		4794313	0					
ANR	4794315	CompoundStatement		363:0:8803:9482	4794313	0					
ANR	4794316	IdentifierDeclStatement	"struct hostent * he1 , * he2 ;"	364:1:8806:8831	4794313	0	True				
ANR	4794317	IdentifierDecl	* he1		4794313	0					
ANR	4794318	IdentifierDeclType	struct hostent *		4794313	0					
ANR	4794319	Identifier	he1		4794313	1					
ANR	4794320	IdentifierDecl	* he2		4794313	1					
ANR	4794321	IdentifierDeclType	struct hostent *		4794313	0					
ANR	4794322	Identifier	he2		4794313	1					
ANR	4794323	IdentifierDeclStatement	char cn1 [ MAXHOSTNAMELEN ] ;	365:1:8834:8858	4794313	1	True				
ANR	4794324	IdentifierDecl	cn1 [ MAXHOSTNAMELEN ]		4794313	0					
ANR	4794325	IdentifierDeclType	char [ MAXHOSTNAMELEN ]		4794313	0					
ANR	4794326	Identifier	cn1		4794313	1					
ANR	4794327	Identifier	MAXHOSTNAMELEN		4794313	2					
ANR	4794328	IfStatement	if ( h1 == NULL || h2 == NULL )		4794313	2					
ANR	4794329	Condition	h1 == NULL || h2 == NULL	367:5:8866:8889	4794313	0	True				
ANR	4794330	OrExpression	h1 == NULL || h2 == NULL		4794313	0		||			
ANR	4794331	EqualityExpression	h1 == NULL		4794313	0		==			
ANR	4794332	Identifier	h1		4794313	0					
ANR	4794333	Identifier	NULL		4794313	1					
ANR	4794334	EqualityExpression	h2 == NULL		4794313	1		==			
ANR	4794335	Identifier	h2		4794313	0					
ANR	4794336	Identifier	NULL		4794313	1					
ANR	4794337	CompoundStatement		5:31:88:88	4794313	1					
ANR	4794338	ExpressionStatement	"dprintf ( D_ALWAYS , ""Warning: attempting to compare null hostnames in same_host.\\n"" )"	368:2:8896:8979	4794313	0	True				
ANR	4794339	CallExpression	"dprintf ( D_ALWAYS , ""Warning: attempting to compare null hostnames in same_host.\\n"" )"		4794313	0					
ANR	4794340	Callee	dprintf		4794313	0					
ANR	4794341	Identifier	dprintf		4794313	0					
ANR	4794342	ArgumentList	D_ALWAYS		4794313	1					
ANR	4794343	Argument	D_ALWAYS		4794313	0					
ANR	4794344	Identifier	D_ALWAYS		4794313	0					
ANR	4794345	Argument	"""Warning: attempting to compare null hostnames in same_host.\\n"""		4794313	1					
ANR	4794346	PrimaryExpression	"""Warning: attempting to compare null hostnames in same_host.\\n"""		4794313	0					
ANR	4794347	ReturnStatement	return FALSE ;	369:2:8983:8995	4794313	1	True				
ANR	4794348	Identifier	FALSE		4794313	0					
ANR	4794349	IfStatement	"if ( strcmp ( h1 , h2 ) == MATCH )"		4794313	3					
ANR	4794350	Condition	"strcmp ( h1 , h2 ) == MATCH"	373:5:9079:9101	4794313	0	True				
ANR	4794351	EqualityExpression	"strcmp ( h1 , h2 ) == MATCH"		4794313	0		==			
ANR	4794352	CallExpression	"strcmp ( h1 , h2 )"		4794313	0					
ANR	4794353	Callee	strcmp		4794313	0					
ANR	4794354	Identifier	strcmp		4794313	0					
ANR	4794355	ArgumentList	h1		4794313	1					
ANR	4794356	Argument	h1		4794313	0					
ANR	4794357	Identifier	h1		4794313	0					
ANR	4794358	Argument	h2		4794313	1					
ANR	4794359	Identifier	h2		4794313	0					
ANR	4794360	Identifier	MATCH		4794313	1					
ANR	4794361	CompoundStatement		11:30:300:300	4794313	1					
ANR	4794362	ReturnStatement	return TRUE ;	374:2:9108:9119	4794313	0	True				
ANR	4794363	Identifier	TRUE		4794313	0					
ANR	4794364	IfStatement	if ( ( he1 = gethostbyname ( h1 ) ) == NULL )		4794313	4					
ANR	4794365	Condition	( he1 = gethostbyname ( h1 ) ) == NULL	378:5:9193:9225	4794313	0	True				
ANR	4794366	EqualityExpression	( he1 = gethostbyname ( h1 ) ) == NULL		4794313	0		==			
ANR	4794367	AssignmentExpression	he1 = gethostbyname ( h1 )		4794313	0		=			
ANR	4794368	Identifier	he1		4794313	0					
ANR	4794369	CallExpression	gethostbyname ( h1 )		4794313	1					
ANR	4794370	Callee	gethostbyname		4794313	0					
ANR	4794371	Identifier	gethostbyname		4794313	0					
ANR	4794372	ArgumentList	h1		4794313	1					
ANR	4794373	Argument	h1		4794313	0					
ANR	4794374	Identifier	h1		4794313	0					
ANR	4794375	Identifier	NULL		4794313	1					
ANR	4794376	CompoundStatement		16:40:424:424	4794313	1					
ANR	4794377	ReturnStatement	return - 1 ;	379:2:9232:9241	4794313	0	True				
ANR	4794378	UnaryOperationExpression	- 1		4794313	0					
ANR	4794379	UnaryOperator	-		4794313	0					
ANR	4794380	PrimaryExpression	1		4794313	1					
ANR	4794381	ExpressionStatement	"strncpy ( cn1 , he1 -> h_name , MAXHOSTNAMELEN )"	383:1:9303:9344	4794313	5	True				
ANR	4794382	CallExpression	"strncpy ( cn1 , he1 -> h_name , MAXHOSTNAMELEN )"		4794313	0					
ANR	4794383	Callee	strncpy		4794313	0					
ANR	4794384	Identifier	strncpy		4794313	0					
ANR	4794385	ArgumentList	cn1		4794313	1					
ANR	4794386	Argument	cn1		4794313	0					
ANR	4794387	Identifier	cn1		4794313	0					
ANR	4794388	Argument	he1 -> h_name		4794313	1					
ANR	4794389	PtrMemberAccess	he1 -> h_name		4794313	0					
ANR	4794390	Identifier	he1		4794313	0					
ANR	4794391	Identifier	h_name		4794313	1					
ANR	4794392	Argument	MAXHOSTNAMELEN		4794313	2					
ANR	4794393	Identifier	MAXHOSTNAMELEN		4794313	0					
ANR	4794394	ExpressionStatement	cn1 [ MAXHOSTNAMELEN - 1 ] = '\\0'	384:1:9347:9375	4794313	6	True				
ANR	4794395	AssignmentExpression	cn1 [ MAXHOSTNAMELEN - 1 ] = '\\0'		4794313	0		=			
ANR	4794396	ArrayIndexing	cn1 [ MAXHOSTNAMELEN - 1 ]		4794313	0					
ANR	4794397	Identifier	cn1		4794313	0					
ANR	4794398	AdditiveExpression	MAXHOSTNAMELEN - 1		4794313	1		-			
ANR	4794399	Identifier	MAXHOSTNAMELEN		4794313	0					
ANR	4794400	PrimaryExpression	1		4794313	1					
ANR	4794401	PrimaryExpression	'\\0'		4794313	1					
ANR	4794402	IfStatement	if ( ( he2 = gethostbyname ( h2 ) ) == NULL )		4794313	7					
ANR	4794403	Condition	( he2 = gethostbyname ( h2 ) ) == NULL	386:5:9383:9415	4794313	0	True				
ANR	4794404	EqualityExpression	( he2 = gethostbyname ( h2 ) ) == NULL		4794313	0		==			
ANR	4794405	AssignmentExpression	he2 = gethostbyname ( h2 )		4794313	0		=			
ANR	4794406	Identifier	he2		4794313	0					
ANR	4794407	CallExpression	gethostbyname ( h2 )		4794313	1					
ANR	4794408	Callee	gethostbyname		4794313	0					
ANR	4794409	Identifier	gethostbyname		4794313	0					
ANR	4794410	ArgumentList	h2		4794313	1					
ANR	4794411	Argument	h2		4794313	0					
ANR	4794412	Identifier	h2		4794313	0					
ANR	4794413	Identifier	NULL		4794313	1					
ANR	4794414	CompoundStatement		24:40:614:614	4794313	1					
ANR	4794415	ReturnStatement	return - 1 ;	387:2:9422:9431	4794313	0	True				
ANR	4794416	UnaryOperationExpression	- 1		4794313	0					
ANR	4794417	UnaryOperator	-		4794313	0					
ANR	4794418	PrimaryExpression	1		4794313	1					
ANR	4794419	ReturnStatement	"return ( strcmp ( cn1 , he2 -> h_name ) == MATCH ) ;"	390:1:9438:9480	4794313	8	True				
ANR	4794420	EqualityExpression	"strcmp ( cn1 , he2 -> h_name ) == MATCH"		4794313	0		==			
ANR	4794421	CallExpression	"strcmp ( cn1 , he2 -> h_name )"		4794313	0					
ANR	4794422	Callee	strcmp		4794313	0					
ANR	4794423	Identifier	strcmp		4794313	0					
ANR	4794424	ArgumentList	cn1		4794313	1					
ANR	4794425	Argument	cn1		4794313	0					
ANR	4794426	Identifier	cn1		4794313	0					
ANR	4794427	Argument	he2 -> h_name		4794313	1					
ANR	4794428	PtrMemberAccess	he2 -> h_name		4794313	0					
ANR	4794429	Identifier	he2		4794313	0					
ANR	4794430	Identifier	h_name		4794313	1					
ANR	4794431	Identifier	MATCH		4794313	1					
ANR	4794432	ReturnType	int		4794313	1					
ANR	4794433	Identifier	same_host		4794313	2					
ANR	4794434	ParameterList	"const char * h1 , const char * h2"		4794313	3					
ANR	4794435	Parameter	const char * h1	362:10:8771:8784	4794313	0	True				
ANR	4794436	ParameterType	const char *		4794313	0					
ANR	4794437	Identifier	h1		4794313	1					
ANR	4794438	Parameter	const char * h2	362:26:8787:8800	4794313	1	True				
ANR	4794439	ParameterType	const char *		4794313	0					
ANR	4794440	Identifier	h2		4794313	1					
ANR	4794441	CFGEntryNode	ENTRY		4794313		True				
ANR	4794442	CFGExitNode	EXIT		4794313		True				
ANR	4794443	Symbol	strcmp		4794313						
ANR	4794444	Symbol	* he2		4794313						
ANR	4794445	Symbol	* he1		4794313						
ANR	4794446	Symbol	he2 -> h_name		4794313						
ANR	4794447	Symbol	gethostbyname		4794313						
ANR	4794448	Symbol	NULL		4794313						
ANR	4794449	Symbol	he1 -> h_name		4794313						
ANR	4794450	Symbol	cn1		4794313						
ANR	4794451	Symbol	D_ALWAYS		4794313						
ANR	4794452	Symbol	h1		4794313						
ANR	4794453	Symbol	TRUE		4794313						
ANR	4794454	Symbol	h2		4794313						
ANR	4794455	Symbol	* cn1		4794313						
ANR	4794456	Symbol	* MAXHOSTNAMELEN		4794313						
ANR	4794457	Symbol	he2		4794313						
ANR	4794458	Symbol	he1		4794313						
ANR	4794459	Symbol	MAXHOSTNAMELEN		4794313						
ANR	4794460	Symbol	FALSE		4794313						
ANR	4794461	Symbol	MATCH		4794313						
ANR	4794462	Function	host_in_domain	399:0:9672:10015							
ANR	4794463	FunctionDef	"host_in_domain (const char * host , const char * domain)"		4794462	0					
ANR	4794464	CompoundStatement		401:0:9731:10015	4794462	0					
ANR	4794465	IdentifierDeclStatement	int skip ;	402:4:9737:9745	4794462	0	True				
ANR	4794466	IdentifierDecl	skip		4794462	0					
ANR	4794467	IdentifierDeclType	int		4794462	0					
ANR	4794468	Identifier	skip		4794462	1					
ANR	4794469	ExpressionStatement	skip = strlen ( host ) - strlen ( domain )	404:4:9752:9788	4794462	1	True				
ANR	4794470	AssignmentExpression	skip = strlen ( host ) - strlen ( domain )		4794462	0		=			
ANR	4794471	Identifier	skip		4794462	0					
ANR	4794472	AdditiveExpression	strlen ( host ) - strlen ( domain )		4794462	1		-			
ANR	4794473	CallExpression	strlen ( host )		4794462	0					
ANR	4794474	Callee	strlen		4794462	0					
ANR	4794475	Identifier	strlen		4794462	0					
ANR	4794476	ArgumentList	host		4794462	1					
ANR	4794477	Argument	host		4794462	0					
ANR	4794478	Identifier	host		4794462	0					
ANR	4794479	CallExpression	strlen ( domain )		4794462	1					
ANR	4794480	Callee	strlen		4794462	0					
ANR	4794481	Identifier	strlen		4794462	0					
ANR	4794482	ArgumentList	domain		4794462	1					
ANR	4794483	Argument	domain		4794462	0					
ANR	4794484	Identifier	domain		4794462	0					
ANR	4794485	IfStatement	if ( skip < 0 )		4794462	2					
ANR	4794486	Condition	skip < 0	405:8:9798:9805	4794462	0	True				
ANR	4794487	RelationalExpression	skip < 0		4794462	0		<			
ANR	4794488	Identifier	skip		4794462	0					
ANR	4794489	PrimaryExpression	0		4794462	1					
ANR	4794490	CompoundStatement		5:19:77:77	4794462	1					
ANR	4794491	ReturnStatement	return FALSE ;	406:8:9819:9831	4794462	0	True				
ANR	4794492	Identifier	FALSE		4794462	0					
ANR	4794493	IfStatement	"if ( strcasecmp ( host + skip , domain ) == MATCH )"		4794462	3					
ANR	4794494	Condition	"strcasecmp ( host + skip , domain ) == MATCH"	409:8:9848:9884	4794462	0	True				
ANR	4794495	EqualityExpression	"strcasecmp ( host + skip , domain ) == MATCH"		4794462	0		==			
ANR	4794496	CallExpression	"strcasecmp ( host + skip , domain )"		4794462	0					
ANR	4794497	Callee	strcasecmp		4794462	0					
ANR	4794498	Identifier	strcasecmp		4794462	0					
ANR	4794499	ArgumentList	host + skip		4794462	1					
ANR	4794500	Argument	host + skip		4794462	0					
ANR	4794501	AdditiveExpression	host + skip		4794462	0		+			
ANR	4794502	Identifier	host		4794462	0					
ANR	4794503	Identifier	skip		4794462	1					
ANR	4794504	Argument	domain		4794462	1					
ANR	4794505	Identifier	domain		4794462	0					
ANR	4794506	Identifier	MATCH		4794462	1					
ANR	4794507	CompoundStatement		9:48:156:156	4794462	1					
ANR	4794508	IfStatement	if ( skip == 0 || host [ skip - 1 ] == '.' || domain [ 0 ] == '.' )		4794462	0					
ANR	4794509	Condition	skip == 0 || host [ skip - 1 ] == '.' || domain [ 0 ] == '.'	410:11:9901:9950	4794462	0	True				
ANR	4794510	OrExpression	skip == 0 || host [ skip - 1 ] == '.' || domain [ 0 ] == '.'		4794462	0		||			
ANR	4794511	EqualityExpression	skip == 0		4794462	0		==			
ANR	4794512	Identifier	skip		4794462	0					
ANR	4794513	PrimaryExpression	0		4794462	1					
ANR	4794514	OrExpression	host [ skip - 1 ] == '.' || domain [ 0 ] == '.'		4794462	1		||			
ANR	4794515	EqualityExpression	host [ skip - 1 ] == '.'		4794462	0		==			
ANR	4794516	ArrayIndexing	host [ skip - 1 ]		4794462	0					
ANR	4794517	Identifier	host		4794462	0					
ANR	4794518	AdditiveExpression	skip - 1		4794462	1		-			
ANR	4794519	Identifier	skip		4794462	0					
ANR	4794520	PrimaryExpression	1		4794462	1					
ANR	4794521	PrimaryExpression	'.'		4794462	1					
ANR	4794522	EqualityExpression	domain [ 0 ] == '.'		4794462	1		==			
ANR	4794523	ArrayIndexing	domain [ 0 ]		4794462	0					
ANR	4794524	Identifier	domain		4794462	0					
ANR	4794525	PrimaryExpression	0		4794462	1					
ANR	4794526	PrimaryExpression	'.'		4794462	1					
ANR	4794527	CompoundStatement		10:64:222:222	4794462	1					
ANR	4794528	ReturnStatement	return TRUE ;	411:12:9968:9979	4794462	0	True				
ANR	4794529	Identifier	TRUE		4794462	0					
ANR	4794530	ReturnStatement	return FALSE ;	414:4:10001:10013	4794462	4	True				
ANR	4794531	Identifier	FALSE		4794462	0					
ANR	4794532	ReturnType	int		4794462	1					
ANR	4794533	Identifier	host_in_domain		4794462	2					
ANR	4794534	ParameterList	"const char * host , const char * domain"		4794462	3					
ANR	4794535	Parameter	const char * host	400:16:9692:9707	4794462	0	True				
ANR	4794536	ParameterType	const char *		4794462	0					
ANR	4794537	Identifier	host		4794462	1					
ANR	4794538	Parameter	const char * domain	400:34:9710:9727	4794462	1	True				
ANR	4794539	ParameterType	const char *		4794462	0					
ANR	4794540	Identifier	domain		4794462	1					
ANR	4794541	CFGEntryNode	ENTRY		4794462		True				
ANR	4794542	CFGExitNode	EXIT		4794462		True				
ANR	4794543	Symbol	strlen		4794462						
ANR	4794544	Symbol	* skip		4794462						
ANR	4794545	Symbol	* host		4794462						
ANR	4794546	Symbol	* domain		4794462						
ANR	4794547	Symbol	domain		4794462						
ANR	4794548	Symbol	host		4794462						
ANR	4794549	Symbol	TRUE		4794462						
ANR	4794550	Symbol	skip		4794462						
ANR	4794551	Symbol	FALSE		4794462						
ANR	4794552	Symbol	strcasecmp		4794462						
ANR	4794553	Symbol	MATCH		4794462						
ANR	4794554	Function	is_ipv4_addr_implementation	419:0:10112:11923							
ANR	4794555	FunctionDef	"is_ipv4_addr_implementation (const char * inbuf , struct in_addr * sin_addr , struct in_addr * mask_addr , int allow_wildcard)"		4794554	0					
ANR	4794556	CompoundStatement		422:0:10237:11923	4794554	0					
ANR	4794557	IdentifierDeclStatement	int len ;	423:1:10240:10247	4794554	0	True				
ANR	4794558	IdentifierDecl	len		4794554	0					
ANR	4794559	IdentifierDeclType	int		4794554	0					
ANR	4794560	Identifier	len		4794554	1					
ANR	4794561	IdentifierDeclStatement	char buf [ 17 ] ;	424:1:10250:10262	4794554	1	True				
ANR	4794562	IdentifierDecl	buf [ 17 ]		4794554	0					
ANR	4794563	IdentifierDeclType	char [ 17 ]		4794554	0					
ANR	4794564	Identifier	buf		4794554	1					
ANR	4794565	PrimaryExpression	17		4794554	2					
ANR	4794566	IdentifierDeclStatement	int part = 0 ;	425:1:10265:10277	4794554	2	True				
ANR	4794567	IdentifierDecl	part = 0		4794554	0					
ANR	4794568	IdentifierDeclType	int		4794554	0					
ANR	4794569	Identifier	part		4794554	1					
ANR	4794570	AssignmentExpression	part = 0		4794554	2		=			
ANR	4794571	Identifier	part		4794554	0					
ANR	4794572	PrimaryExpression	0		4794554	1					
ANR	4794573	IdentifierDeclStatement	"int i , j , x ;"	426:1:10280:10289	4794554	3	True				
ANR	4794574	IdentifierDecl	i		4794554	0					
ANR	4794575	IdentifierDeclType	int		4794554	0					
ANR	4794576	Identifier	i		4794554	1					
ANR	4794577	IdentifierDecl	j		4794554	1					
ANR	4794578	IdentifierDeclType	int		4794554	0					
ANR	4794579	Identifier	j		4794554	1					
ANR	4794580	IdentifierDecl	x		4794554	2					
ANR	4794581	IdentifierDeclType	int		4794554	0					
ANR	4794582	Identifier	x		4794554	1					
ANR	4794583	IdentifierDeclStatement	char save_char ;	427:1:10292:10306	4794554	4	True				
ANR	4794584	IdentifierDecl	save_char		4794554	0					
ANR	4794585	IdentifierDeclType	char		4794554	0					
ANR	4794586	Identifier	save_char		4794554	1					
ANR	4794587	IdentifierDeclStatement	unsigned char * cur_byte = NULL ;	428:1:10309:10339	4794554	5	True				
ANR	4794588	IdentifierDecl	* cur_byte = NULL		4794554	0					
ANR	4794589	IdentifierDeclType	unsigned char *		4794554	0					
ANR	4794590	Identifier	cur_byte		4794554	1					
ANR	4794591	AssignmentExpression	* cur_byte = NULL		4794554	2		=			
ANR	4794592	Identifier	NULL		4794554	0					
ANR	4794593	Identifier	NULL		4794554	1					
ANR	4794594	IdentifierDeclStatement	unsigned char * cur_mask_byte = NULL ;	429:1:10342:10377	4794554	6	True				
ANR	4794595	IdentifierDecl	* cur_mask_byte = NULL		4794554	0					
ANR	4794596	IdentifierDeclType	unsigned char *		4794554	0					
ANR	4794597	Identifier	cur_mask_byte		4794554	1					
ANR	4794598	AssignmentExpression	* cur_mask_byte = NULL		4794554	2		=			
ANR	4794599	Identifier	NULL		4794554	0					
ANR	4794600	Identifier	NULL		4794554	1					
ANR	4794601	IfStatement	if ( sin_addr )		4794554	7					
ANR	4794602	Condition	sin_addr	430:5:10384:10391	4794554	0	True				
ANR	4794603	Identifier	sin_addr		4794554	0					
ANR	4794604	CompoundStatement		9:16:157:157	4794554	1					
ANR	4794605	ExpressionStatement	cur_byte = ( unsigned char * ) sin_addr	431:2:10399:10436	4794554	0	True				
ANR	4794606	AssignmentExpression	cur_byte = ( unsigned char * ) sin_addr		4794554	0		=			
ANR	4794607	Identifier	cur_byte		4794554	0					
ANR	4794608	CastExpression	( unsigned char * ) sin_addr		4794554	1					
ANR	4794609	CastTarget	unsigned char *		4794554	0					
ANR	4794610	Identifier	sin_addr		4794554	1					
ANR	4794611	IfStatement	if ( mask_addr )		4794554	8					
ANR	4794612	Condition	mask_addr	433:5:10446:10454	4794554	0	True				
ANR	4794613	Identifier	mask_addr		4794554	0					
ANR	4794614	CompoundStatement		12:17:220:220	4794554	1					
ANR	4794615	ExpressionStatement	cur_mask_byte = ( unsigned char * ) mask_addr	434:2:10462:10505	4794554	0	True				
ANR	4794616	AssignmentExpression	cur_mask_byte = ( unsigned char * ) mask_addr		4794554	0		=			
ANR	4794617	Identifier	cur_mask_byte		4794554	0					
ANR	4794618	CastExpression	( unsigned char * ) mask_addr		4794554	1					
ANR	4794619	CastTarget	unsigned char *		4794554	0					
ANR	4794620	Identifier	mask_addr		4794554	1					
ANR	4794621	ExpressionStatement	len = strlen ( inbuf )	437:1:10512:10531	4794554	9	True				
ANR	4794622	AssignmentExpression	len = strlen ( inbuf )		4794554	0		=			
ANR	4794623	Identifier	len		4794554	0					
ANR	4794624	CallExpression	strlen ( inbuf )		4794554	1					
ANR	4794625	Callee	strlen		4794554	0					
ANR	4794626	Identifier	strlen		4794554	0					
ANR	4794627	ArgumentList	inbuf		4794554	1					
ANR	4794628	Argument	inbuf		4794554	0					
ANR	4794629	Identifier	inbuf		4794554	0					
ANR	4794630	IfStatement	if ( len < 1 || len > 15 )		4794554	10					
ANR	4794631	Condition	len < 1 || len > 15	438:6:10539:10557	4794554	0	True				
ANR	4794632	OrExpression	len < 1 || len > 15		4794554	0		||			
ANR	4794633	RelationalExpression	len < 1		4794554	0		<			
ANR	4794634	Identifier	len		4794554	0					
ANR	4794635	PrimaryExpression	1		4794554	1					
ANR	4794636	RelationalExpression	len > 15		4794554	1		>			
ANR	4794637	Identifier	len		4794554	0					
ANR	4794638	PrimaryExpression	15		4794554	1					
ANR	4794639	ReturnStatement	return FALSE ;	439:2:10563:10575	4794554	1	True				
ANR	4794640	Identifier	FALSE		4794554	0					
ANR	4794641	ExpressionStatement	"strncpy ( buf , inbuf , 16 )"	444:1:10714:10739	4794554	11	True				
ANR	4794642	CallExpression	"strncpy ( buf , inbuf , 16 )"		4794554	0					
ANR	4794643	Callee	strncpy		4794554	0					
ANR	4794644	Identifier	strncpy		4794554	0					
ANR	4794645	ArgumentList	buf		4794554	1					
ANR	4794646	Argument	buf		4794554	0					
ANR	4794647	Identifier	buf		4794554	0					
ANR	4794648	Argument	inbuf		4794554	1					
ANR	4794649	Identifier	inbuf		4794554	0					
ANR	4794650	Argument	16		4794554	2					
ANR	4794651	PrimaryExpression	16		4794554	0					
ANR	4794652	IfStatement	if ( buf [ len - 1 ] == '*' || buf [ len - 1 ] == '.' )		4794554	12					
ANR	4794653	Condition	buf [ len - 1 ] == '*' || buf [ len - 1 ] == '.'	447:6:10792:10829	4794554	0	True				
ANR	4794654	OrExpression	buf [ len - 1 ] == '*' || buf [ len - 1 ] == '.'		4794554	0		||			
ANR	4794655	EqualityExpression	buf [ len - 1 ] == '*'		4794554	0		==			
ANR	4794656	ArrayIndexing	buf [ len - 1 ]		4794554	0					
ANR	4794657	Identifier	buf		4794554	0					
ANR	4794658	AdditiveExpression	len - 1		4794554	1		-			
ANR	4794659	Identifier	len		4794554	0					
ANR	4794660	PrimaryExpression	1		4794554	1					
ANR	4794661	PrimaryExpression	'*'		4794554	1					
ANR	4794662	EqualityExpression	buf [ len - 1 ] == '.'		4794554	1		==			
ANR	4794663	ArrayIndexing	buf [ len - 1 ]		4794554	0					
ANR	4794664	Identifier	buf		4794554	0					
ANR	4794665	AdditiveExpression	len - 1		4794554	1		-			
ANR	4794666	Identifier	len		4794554	0					
ANR	4794667	PrimaryExpression	1		4794554	1					
ANR	4794668	PrimaryExpression	'.'		4794554	1					
ANR	4794669	CompoundStatement		26:47:595:595	4794554	1					
ANR	4794670	IfStatement	if ( len > 1 && buf [ len - 2 ] == '.' )		4794554	0					
ANR	4794671	Condition	len > 1 && buf [ len - 2 ] == '.'	448:7:10842:10867	4794554	0	True				
ANR	4794672	AndExpression	len > 1 && buf [ len - 2 ] == '.'		4794554	0		&&			
ANR	4794673	RelationalExpression	len > 1		4794554	0		>			
ANR	4794674	Identifier	len		4794554	0					
ANR	4794675	PrimaryExpression	1		4794554	1					
ANR	4794676	EqualityExpression	buf [ len - 2 ] == '.'		4794554	1		==			
ANR	4794677	ArrayIndexing	buf [ len - 2 ]		4794554	0					
ANR	4794678	Identifier	buf		4794554	0					
ANR	4794679	AdditiveExpression	len - 2		4794554	1		-			
ANR	4794680	Identifier	len		4794554	0					
ANR	4794681	PrimaryExpression	2		4794554	1					
ANR	4794682	PrimaryExpression	'.'		4794554	1					
ANR	4794683	ExpressionStatement	buf [ len - 2 ] = '\\0'	449:3:10874:10891	4794554	1	True				
ANR	4794684	AssignmentExpression	buf [ len - 2 ] = '\\0'		4794554	0		=			
ANR	4794685	ArrayIndexing	buf [ len - 2 ]		4794554	0					
ANR	4794686	Identifier	buf		4794554	0					
ANR	4794687	AdditiveExpression	len - 2		4794554	1		-			
ANR	4794688	Identifier	len		4794554	0					
ANR	4794689	PrimaryExpression	2		4794554	1					
ANR	4794690	PrimaryExpression	'\\0'		4794554	1					
ANR	4794691	ElseStatement	else		4794554	0					
ANR	4794692	ExpressionStatement	buf [ len - 1 ] = '\\0'	451:3:10903:10920	4794554	0	True				
ANR	4794693	AssignmentExpression	buf [ len - 1 ] = '\\0'		4794554	0		=			
ANR	4794694	ArrayIndexing	buf [ len - 1 ]		4794554	0					
ANR	4794695	Identifier	buf		4794554	0					
ANR	4794696	AdditiveExpression	len - 1		4794554	1		-			
ANR	4794697	Identifier	len		4794554	0					
ANR	4794698	PrimaryExpression	1		4794554	1					
ANR	4794699	PrimaryExpression	'\\0'		4794554	1					
ANR	4794700	ExpressionStatement	i = 0	456:1:11018:11023	4794554	13	True				
ANR	4794701	AssignmentExpression	i = 0		4794554	0		=			
ANR	4794702	Identifier	i		4794554	0					
ANR	4794703	PrimaryExpression	0		4794554	1					
ANR	4794704	ForStatement	for ( ; buf [ i ] ; )		4794554	14					
ANR	4794705	Condition	buf [ i ]	457:6:11031:11036	4794554	0	True				
ANR	4794706	ArrayIndexing	buf [ i ]		4794554	0					
ANR	4794707	Identifier	buf		4794554	0					
ANR	4794708	Identifier	i		4794554	1					
ANR	4794709	CompoundStatement		36:15:802:802	4794554	1					
ANR	4794710	ExpressionStatement	j = i	459:2:11045:11050	4794554	0	True				
ANR	4794711	AssignmentExpression	j = i		4794554	0		=			
ANR	4794712	Identifier	j		4794554	0					
ANR	4794713	Identifier	i		4794554	1					
ANR	4794714	WhileStatement	while ( buf [ i ] >= '0' && buf [ i ] <= '9' )		4794554	1					
ANR	4794715	Condition	buf [ i ] >= '0' && buf [ i ] <= '9'	460:9:11061:11090	4794554	0	True				
ANR	4794716	AndExpression	buf [ i ] >= '0' && buf [ i ] <= '9'		4794554	0		&&			
ANR	4794717	RelationalExpression	buf [ i ] >= '0'		4794554	0		>=			
ANR	4794718	ArrayIndexing	buf [ i ]		4794554	0					
ANR	4794719	Identifier	buf		4794554	0					
ANR	4794720	Identifier	i		4794554	1					
ANR	4794721	PrimaryExpression	'0'		4794554	1					
ANR	4794722	RelationalExpression	buf [ i ] <= '9'		4794554	1		<=			
ANR	4794723	ArrayIndexing	buf [ i ]		4794554	0					
ANR	4794724	Identifier	buf		4794554	0					
ANR	4794725	Identifier	i		4794554	1					
ANR	4794726	PrimaryExpression	'9'		4794554	1					
ANR	4794727	ExpressionStatement	i ++	460:41:11093:11096	4794554	1	True				
ANR	4794728	PostIncDecOperationExpression	i ++		4794554	0					
ANR	4794729	Identifier	i		4794554	0					
ANR	4794730	IncDec	++		4794554	1					
ANR	4794731	IfStatement	if ( i == j )		4794554	2					
ANR	4794732	Condition	i == j	462:7:11141:11146	4794554	0	True				
ANR	4794733	EqualityExpression	i == j		4794554	0		==			
ANR	4794734	Identifier	i		4794554	0					
ANR	4794735	Identifier	j		4794554	1					
ANR	4794736	ReturnStatement	return FALSE ;	463:3:11153:11165	4794554	1	True				
ANR	4794737	Identifier	FALSE		4794554	0					
ANR	4794738	ExpressionStatement	save_char = buf [ i ]	465:2:11239:11257	4794554	3	True				
ANR	4794739	AssignmentExpression	save_char = buf [ i ]		4794554	0		=			
ANR	4794740	Identifier	save_char		4794554	0					
ANR	4794741	ArrayIndexing	buf [ i ]		4794554	1					
ANR	4794742	Identifier	buf		4794554	0					
ANR	4794743	Identifier	i		4794554	1					
ANR	4794744	ExpressionStatement	buf [ i ] = '\\0'	466:2:11261:11274	4794554	4	True				
ANR	4794745	AssignmentExpression	buf [ i ] = '\\0'		4794554	0		=			
ANR	4794746	ArrayIndexing	buf [ i ]		4794554	0					
ANR	4794747	Identifier	buf		4794554	0					
ANR	4794748	Identifier	i		4794554	1					
ANR	4794749	PrimaryExpression	'\\0'		4794554	1					
ANR	4794750	ExpressionStatement	x = atoi ( & ( buf [ j ] ) )	467:2:11278:11299	4794554	5	True				
ANR	4794751	AssignmentExpression	x = atoi ( & ( buf [ j ] ) )		4794554	0		=			
ANR	4794752	Identifier	x		4794554	0					
ANR	4794753	CallExpression	atoi ( & ( buf [ j ] ) )		4794554	1					
ANR	4794754	Callee	atoi		4794554	0					
ANR	4794755	Identifier	atoi		4794554	0					
ANR	4794756	ArgumentList	& ( buf [ j ] )		4794554	1					
ANR	4794757	Argument	& ( buf [ j ] )		4794554	0					
ANR	4794758	UnaryOperationExpression	& ( buf [ j ] )		4794554	0					
ANR	4794759	UnaryOperator	&		4794554	0					
ANR	4794760	ArrayIndexing	buf [ j ]		4794554	1					
ANR	4794761	Identifier	buf		4794554	0					
ANR	4794762	Identifier	j		4794554	1					
ANR	4794763	IfStatement	if ( x < 0 || x > 255 )		4794554	6					
ANR	4794764	Condition	x < 0 || x > 255	468:6:11307:11322	4794554	0	True				
ANR	4794765	OrExpression	x < 0 || x > 255		4794554	0		||			
ANR	4794766	RelationalExpression	x < 0		4794554	0		<			
ANR	4794767	Identifier	x		4794554	0					
ANR	4794768	PrimaryExpression	0		4794554	1					
ANR	4794769	RelationalExpression	x > 255		4794554	1		>			
ANR	4794770	Identifier	x		4794554	0					
ANR	4794771	PrimaryExpression	255		4794554	1					
ANR	4794772	CompoundStatement		47:25:1088:1088	4794554	1					
ANR	4794773	ReturnStatement	return FALSE ;	469:3:11331:11343	4794554	0	True				
ANR	4794774	Identifier	FALSE		4794554	0					
ANR	4794775	IfStatement	if ( cur_byte )		4794554	7					
ANR	4794776	Condition	cur_byte	471:6:11355:11362	4794554	0	True				
ANR	4794777	Identifier	cur_byte		4794554	0					
ANR	4794778	CompoundStatement		50:17:1128:1128	4794554	1					
ANR	4794779	ExpressionStatement	* cur_byte = x	472:3:11371:11384	4794554	0	True				
ANR	4794780	AssignmentExpression	* cur_byte = x		4794554	0		=			
ANR	4794781	UnaryOperationExpression	* cur_byte		4794554	0					
ANR	4794782	UnaryOperator	*		4794554	0					
ANR	4794783	Identifier	cur_byte		4794554	1					
ANR	4794784	Identifier	x		4794554	1					
ANR	4794785	ExpressionStatement	cur_byte ++	473:3:11414:11424	4794554	1	True				
ANR	4794786	PostIncDecOperationExpression	cur_byte ++		4794554	0					
ANR	4794787	Identifier	cur_byte		4794554	0					
ANR	4794788	IncDec	++		4794554	1					
ANR	4794789	IfStatement	if ( cur_mask_byte )		4794554	8					
ANR	4794790	Condition	cur_mask_byte	475:6:11436:11448	4794554	0	True				
ANR	4794791	Identifier	cur_mask_byte		4794554	0					
ANR	4794792	CompoundStatement		54:22:1214:1214	4794554	1					
ANR	4794793	ExpressionStatement	* ( cur_mask_byte ++ ) = 255	476:3:11457:11481	4794554	0	True				
ANR	4794794	AssignmentExpression	* ( cur_mask_byte ++ ) = 255		4794554	0		=			
ANR	4794795	UnaryOperationExpression	* ( cur_mask_byte ++ )		4794554	0					
ANR	4794796	UnaryOperator	*		4794554	0					
ANR	4794797	PostIncDecOperationExpression	cur_mask_byte ++		4794554	1					
ANR	4794798	Identifier	cur_mask_byte		4794554	0					
ANR	4794799	IncDec	++		4794554	1					
ANR	4794800	PrimaryExpression	255		4794554	1					
ANR	4794801	ExpressionStatement	buf [ i ] = save_char	478:2:11489:11507	4794554	9	True				
ANR	4794802	AssignmentExpression	buf [ i ] = save_char		4794554	0		=			
ANR	4794803	ArrayIndexing	buf [ i ]		4794554	0					
ANR	4794804	Identifier	buf		4794554	0					
ANR	4794805	Identifier	i		4794554	1					
ANR	4794806	Identifier	save_char		4794554	1					
ANR	4794807	ExpressionStatement	part ++	480:2:11512:11518	4794554	10	True				
ANR	4794808	PostIncDecOperationExpression	part ++		4794554	0					
ANR	4794809	Identifier	part		4794554	0					
ANR	4794810	IncDec	++		4794554	1					
ANR	4794811	IfStatement	if ( buf [ i ] == '\\0' )		4794554	11					
ANR	4794812	Condition	buf [ i ] == '\\0'	482:7:11528:11541	4794554	0	True				
ANR	4794813	EqualityExpression	buf [ i ] == '\\0'		4794554	0		==			
ANR	4794814	ArrayIndexing	buf [ i ]		4794554	0					
ANR	4794815	Identifier	buf		4794554	0					
ANR	4794816	Identifier	i		4794554	1					
ANR	4794817	PrimaryExpression	'\\0'		4794554	1					
ANR	4794818	BreakStatement	break ;	483:3:11548:11553	4794554	1	True				
ANR	4794819	IfStatement	if ( buf [ i ] == '.' )		4794554	12					
ANR	4794820	Condition	buf [ i ] == '.'	485:7:11563:11575	4794554	0	True				
ANR	4794821	EqualityExpression	buf [ i ] == '.'		4794554	0		==			
ANR	4794822	ArrayIndexing	buf [ i ]		4794554	0					
ANR	4794823	Identifier	buf		4794554	0					
ANR	4794824	Identifier	i		4794554	1					
ANR	4794825	PrimaryExpression	'.'		4794554	1					
ANR	4794826	ExpressionStatement	i ++	486:3:11582:11585	4794554	1	True				
ANR	4794827	PostIncDecOperationExpression	i ++		4794554	0					
ANR	4794828	Identifier	i		4794554	0					
ANR	4794829	IncDec	++		4794554	1					
ANR	4794830	ElseStatement	else		4794554	0					
ANR	4794831	ReturnStatement	return FALSE ;	488:3:11597:11609	4794554	0	True				
ANR	4794832	Identifier	FALSE		4794554	0					
ANR	4794833	IfStatement	if ( part >= 4 )		4794554	13					
ANR	4794834	Condition	part >= 4	490:7:11619:11627	4794554	0	True				
ANR	4794835	RelationalExpression	part >= 4		4794554	0		>=			
ANR	4794836	Identifier	part		4794554	0					
ANR	4794837	PrimaryExpression	4		4794554	1					
ANR	4794838	ReturnStatement	return FALSE ;	491:3:11634:11646	4794554	1	True				
ANR	4794839	Identifier	FALSE		4794554	0					
ANR	4794840	IfStatement	if ( ! allow_wildcard && part != 4 )		4794554	15					
ANR	4794841	Condition	! allow_wildcard && part != 4	494:5:11657:11684	4794554	0	True				
ANR	4794842	AndExpression	! allow_wildcard && part != 4		4794554	0		&&			
ANR	4794843	UnaryOperationExpression	! allow_wildcard		4794554	0					
ANR	4794844	UnaryOperator	!		4794554	0					
ANR	4794845	Identifier	allow_wildcard		4794554	1					
ANR	4794846	EqualityExpression	part != 4		4794554	1		!=			
ANR	4794847	Identifier	part		4794554	0					
ANR	4794848	PrimaryExpression	4		4794554	1					
ANR	4794849	CompoundStatement		73:36:1450:1450	4794554	1					
ANR	4794850	ReturnStatement	return FALSE ;	495:2:11692:11704	4794554	0	True				
ANR	4794851	Identifier	FALSE		4794554	0					
ANR	4794852	IfStatement	if ( cur_byte )		4794554	16					
ANR	4794853	Condition	cur_byte	498:5:11715:11722	4794554	0	True				
ANR	4794854	Identifier	cur_byte		4794554	0					
ANR	4794855	CompoundStatement		77:16:1488:1488	4794554	1					
ANR	4794856	ForStatement	for ( i = 0 ; i < 4 - part ; i ++ )		4794554	0					
ANR	4794857	ForInit	i = 0 ;	499:7:11735:11738	4794554	0	True				
ANR	4794858	AssignmentExpression	i = 0		4794554	0		=			
ANR	4794859	Identifier	i		4794554	0					
ANR	4794860	PrimaryExpression	0		4794554	1					
ANR	4794861	Condition	i < 4 - part	499:12:11740:11751	4794554	1	True				
ANR	4794862	RelationalExpression	i < 4 - part		4794554	0		<			
ANR	4794863	Identifier	i		4794554	0					
ANR	4794864	AdditiveExpression	4 - part		4794554	1		-			
ANR	4794865	PrimaryExpression	4		4794554	0					
ANR	4794866	Identifier	part		4794554	1					
ANR	4794867	PostIncDecOperationExpression	i ++	499:26:11754:11756	4794554	2	True				
ANR	4794868	Identifier	i		4794554	0					
ANR	4794869	IncDec	++		4794554	1					
ANR	4794870	CompoundStatement		78:31:1521:1521	4794554	3					
ANR	4794871	ExpressionStatement	* cur_byte = ( unsigned char ) 255	500:3:11764:11795	4794554	0	True				
ANR	4794872	AssignmentExpression	* cur_byte = ( unsigned char ) 255		4794554	0		=			
ANR	4794873	UnaryOperationExpression	* cur_byte		4794554	0					
ANR	4794874	UnaryOperator	*		4794554	0					
ANR	4794875	Identifier	cur_byte		4794554	1					
ANR	4794876	CastExpression	( unsigned char ) 255		4794554	1					
ANR	4794877	CastTarget	unsigned char		4794554	0					
ANR	4794878	PrimaryExpression	255		4794554	1					
ANR	4794879	ExpressionStatement	cur_byte ++	501:3:11800:11810	4794554	1	True				
ANR	4794880	PostIncDecOperationExpression	cur_byte ++		4794554	0					
ANR	4794881	Identifier	cur_byte		4794554	0					
ANR	4794882	IncDec	++		4794554	1					
ANR	4794883	IfStatement	if ( cur_mask_byte )		4794554	17					
ANR	4794884	Condition	cur_mask_byte	504:5:11824:11836	4794554	0	True				
ANR	4794885	Identifier	cur_mask_byte		4794554	0					
ANR	4794886	CompoundStatement		83:21:1602:1602	4794554	1					
ANR	4794887	ForStatement	for ( i = 0 ; i < 4 - part ; i ++ )		4794554	0					
ANR	4794888	ForInit	i = 0 ;	505:7:11849:11852	4794554	0	True				
ANR	4794889	AssignmentExpression	i = 0		4794554	0		=			
ANR	4794890	Identifier	i		4794554	0					
ANR	4794891	PrimaryExpression	0		4794554	1					
ANR	4794892	Condition	i < 4 - part	505:12:11854:11865	4794554	1	True				
ANR	4794893	RelationalExpression	i < 4 - part		4794554	0		<			
ANR	4794894	Identifier	i		4794554	0					
ANR	4794895	AdditiveExpression	4 - part		4794554	1		-			
ANR	4794896	PrimaryExpression	4		4794554	0					
ANR	4794897	Identifier	part		4794554	1					
ANR	4794898	PostIncDecOperationExpression	i ++	505:26:11868:11870	4794554	2	True				
ANR	4794899	Identifier	i		4794554	0					
ANR	4794900	IncDec	++		4794554	1					
ANR	4794901	CompoundStatement		84:31:1635:1635	4794554	3					
ANR	4794902	ExpressionStatement	* ( cur_mask_byte ++ ) = 0	506:3:11878:11900	4794554	0	True				
ANR	4794903	AssignmentExpression	* ( cur_mask_byte ++ ) = 0		4794554	0		=			
ANR	4794904	UnaryOperationExpression	* ( cur_mask_byte ++ )		4794554	0					
ANR	4794905	UnaryOperator	*		4794554	0					
ANR	4794906	PostIncDecOperationExpression	cur_mask_byte ++		4794554	1					
ANR	4794907	Identifier	cur_mask_byte		4794554	0					
ANR	4794908	IncDec	++		4794554	1					
ANR	4794909	PrimaryExpression	0		4794554	1					
ANR	4794910	ReturnStatement	return TRUE ;	509:1:11910:11921	4794554	18	True				
ANR	4794911	Identifier	TRUE		4794554	0					
ANR	4794912	ReturnType	int		4794554	1					
ANR	4794913	Identifier	is_ipv4_addr_implementation		4794554	2					
ANR	4794914	ParameterList	"const char * inbuf , struct in_addr * sin_addr , struct in_addr * mask_addr , int allow_wildcard"		4794554	3					
ANR	4794915	Parameter	const char * inbuf	420:28:10144:10160	4794554	0	True				
ANR	4794916	ParameterType	const char *		4794554	0					
ANR	4794917	Identifier	inbuf		4794554	1					
ANR	4794918	Parameter	struct in_addr * sin_addr	420:47:10163:10186	4794554	1	True				
ANR	4794919	ParameterType	struct in_addr *		4794554	0					
ANR	4794920	Identifier	sin_addr		4794554	1					
ANR	4794921	Parameter	struct in_addr * mask_addr	421:2:10191:10215	4794554	2	True				
ANR	4794922	ParameterType	struct in_addr *		4794554	0					
ANR	4794923	Identifier	mask_addr		4794554	1					
ANR	4794924	Parameter	int allow_wildcard	421:28:10217:10234	4794554	3	True				
ANR	4794925	ParameterType	int		4794554	0					
ANR	4794926	Identifier	allow_wildcard		4794554	1					
ANR	4794927	CFGEntryNode	ENTRY		4794554		True				
ANR	4794928	CFGExitNode	EXIT		4794554		True				
ANR	4794929	Symbol	atoi		4794554						
ANR	4794930	Symbol	* buf		4794554						
ANR	4794931	Symbol	NULL		4794554						
ANR	4794932	Symbol	mask_addr		4794554						
ANR	4794933	Symbol	* cur_byte		4794554						
ANR	4794934	Symbol	part		4794554						
ANR	4794935	Symbol	i		4794554						
ANR	4794936	Symbol	save_char		4794554						
ANR	4794937	Symbol	TRUE		4794554						
ANR	4794938	Symbol	sin_addr		4794554						
ANR	4794939	Symbol	j		4794554						
ANR	4794940	Symbol	cur_mask_byte		4794554						
ANR	4794941	Symbol	* ( cur_mask_byte ++ )		4794554						
ANR	4794942	Symbol	strlen		4794554						
ANR	4794943	Symbol	buf		4794554						
ANR	4794944	Symbol	* i		4794554						
ANR	4794945	Symbol	len		4794554						
ANR	4794946	Symbol	inbuf		4794554						
ANR	4794947	Symbol	x		4794554						
ANR	4794948	Symbol	allow_wildcard		4794554						
ANR	4794949	Symbol	cur_byte		4794554						
ANR	4794950	Symbol	FALSE		4794554						
ANR	4794951	Symbol	* len		4794554						
ANR	4794952	Function	is_valid_sinful	621:0:15556:17091							
ANR	4794953	FunctionDef	is_valid_sinful (const char * sinful)		4794952	0					
ANR	4794954	CompoundStatement		623:0:15598:17091	4794952	0					
ANR	4794955	ExpressionStatement	"dprintf ( D_HOSTNAME , ""validate %s\\n"" , sinful )"	624:1:15601:15645	4794952	0	True				
ANR	4794956	CallExpression	"dprintf ( D_HOSTNAME , ""validate %s\\n"" , sinful )"		4794952	0					
ANR	4794957	Callee	dprintf		4794952	0					
ANR	4794958	Identifier	dprintf		4794952	0					
ANR	4794959	ArgumentList	D_HOSTNAME		4794952	1					
ANR	4794960	Argument	D_HOSTNAME		4794952	0					
ANR	4794961	Identifier	D_HOSTNAME		4794952	0					
ANR	4794962	Argument	"""validate %s\\n"""		4794952	1					
ANR	4794963	PrimaryExpression	"""validate %s\\n"""		4794952	0					
ANR	4794964	Argument	sinful		4794952	2					
ANR	4794965	Identifier	sinful		4794952	0					
ANR	4794966	IdentifierDeclStatement	char addrbuf [ INET6_ADDRSTRLEN ] ;	625:1:15648:15678	4794952	1	True				
ANR	4794967	IdentifierDecl	addrbuf [ INET6_ADDRSTRLEN ]		4794952	0					
ANR	4794968	IdentifierDeclType	char [ INET6_ADDRSTRLEN ]		4794952	0					
ANR	4794969	Identifier	addrbuf		4794952	1					
ANR	4794970	Identifier	INET6_ADDRSTRLEN		4794952	2					
ANR	4794971	IdentifierDeclStatement	const char * acc = sinful ;	626:1:15681:15705	4794952	2	True				
ANR	4794972	IdentifierDecl	* acc = sinful		4794952	0					
ANR	4794973	IdentifierDeclType	const char *		4794952	0					
ANR	4794974	Identifier	acc		4794952	1					
ANR	4794975	AssignmentExpression	* acc = sinful		4794952	2		=			
ANR	4794976	Identifier	sinful		4794952	0					
ANR	4794977	Identifier	sinful		4794952	1					
ANR	4794978	IdentifierDeclStatement	const char * tmp ;	627:1:15708:15723	4794952	3	True				
ANR	4794979	IdentifierDecl	* tmp		4794952	0					
ANR	4794980	IdentifierDeclType	const char *		4794952	0					
ANR	4794981	Identifier	tmp		4794952	1					
ANR	4794982	IdentifierDeclStatement	const char * addr_begin ;	628:1:15726:15748	4794952	4	True				
ANR	4794983	IdentifierDecl	* addr_begin		4794952	0					
ANR	4794984	IdentifierDeclType	const char *		4794952	0					
ANR	4794985	Identifier	addr_begin		4794952	1					
ANR	4794986	IdentifierDeclStatement	const char * addr_end ;	629:1:15751:15771	4794952	5	True				
ANR	4794987	IdentifierDecl	* addr_end		4794952	0					
ANR	4794988	IdentifierDeclType	const char *		4794952	0					
ANR	4794989	Identifier	addr_end		4794952	1					
ANR	4794990	IfStatement	if ( ! acc )		4794952	6					
ANR	4794991	Condition	! acc	630:5:15778:15781	4794952	0	True				
ANR	4794992	UnaryOperationExpression	! acc		4794952	0					
ANR	4794993	UnaryOperator	!		4794952	0					
ANR	4794994	Identifier	acc		4794952	1					
ANR	4794995	ReturnStatement	return FALSE ;	631:2:15786:15798	4794952	1	True				
ANR	4794996	Identifier	FALSE		4794952	0					
ANR	4794997	IfStatement	if ( * acc != '<' )		4794952	7					
ANR	4794998	Condition	* acc != '<'	633:5:15806:15816	4794952	0	True				
ANR	4794999	EqualityExpression	* acc != '<'		4794952	0		!=			
ANR	4795000	UnaryOperationExpression	* acc		4794952	0					
ANR	4795001	UnaryOperator	*		4794952	0					
ANR	4795002	Identifier	acc		4794952	1					
ANR	4795003	PrimaryExpression	'<'		4794952	1					
ANR	4795004	CompoundStatement		11:18:220:220	4794952	1					
ANR	4795005	ExpressionStatement	"dprintf ( D_HOSTNAME , ""is not begin with <\\n"" )"	634:2:15823:15867	4794952	0	True				
ANR	4795006	CallExpression	"dprintf ( D_HOSTNAME , ""is not begin with <\\n"" )"		4794952	0					
ANR	4795007	Callee	dprintf		4794952	0					
ANR	4795008	Identifier	dprintf		4794952	0					
ANR	4795009	ArgumentList	D_HOSTNAME		4794952	1					
ANR	4795010	Argument	D_HOSTNAME		4794952	0					
ANR	4795011	Identifier	D_HOSTNAME		4794952	0					
ANR	4795012	Argument	"""is not begin with <\\n"""		4794952	1					
ANR	4795013	PrimaryExpression	"""is not begin with <\\n"""		4794952	0					
ANR	4795014	ReturnStatement	return FALSE ;	635:2:15871:15883	4794952	1	True				
ANR	4795015	Identifier	FALSE		4794952	0					
ANR	4795016	ExpressionStatement	acc ++	637:1:15889:15894	4794952	8	True				
ANR	4795017	PostIncDecOperationExpression	acc ++		4794952	0					
ANR	4795018	Identifier	acc		4794952	0					
ANR	4795019	IncDec	++		4794952	1					
ANR	4795020	IfStatement	if ( * acc == '[' )		4794952	9					
ANR	4795021	Condition	* acc == '['	638:5:15901:15911	4794952	0	True				
ANR	4795022	EqualityExpression	* acc == '['		4794952	0		==			
ANR	4795023	UnaryOperationExpression	* acc		4794952	0					
ANR	4795024	UnaryOperator	*		4794952	0					
ANR	4795025	Identifier	acc		4794952	1					
ANR	4795026	PrimaryExpression	'['		4794952	1					
ANR	4795027	CompoundStatement		34:2:839:856	4794952	1					
ANR	4795028	ExpressionStatement	"dprintf ( D_HOSTNAME , ""ipv6 address\\n"" )"	639:2:15918:15955	4794952	0	True				
ANR	4795029	CallExpression	"dprintf ( D_HOSTNAME , ""ipv6 address\\n"" )"		4794952	0					
ANR	4795030	Callee	dprintf		4794952	0					
ANR	4795031	Identifier	dprintf		4794952	0					
ANR	4795032	ArgumentList	D_HOSTNAME		4794952	1					
ANR	4795033	Argument	D_HOSTNAME		4794952	0					
ANR	4795034	Identifier	D_HOSTNAME		4794952	0					
ANR	4795035	Argument	"""ipv6 address\\n"""		4794952	1					
ANR	4795036	PrimaryExpression	"""ipv6 address\\n"""		4794952	0					
ANR	4795037	ExpressionStatement	"tmp = strchr ( acc , ']' )"	640:2:15959:15981	4794952	1	True				
ANR	4795038	AssignmentExpression	"tmp = strchr ( acc , ']' )"		4794952	0		=			
ANR	4795039	Identifier	tmp		4794952	0					
ANR	4795040	CallExpression	"strchr ( acc , ']' )"		4794952	1					
ANR	4795041	Callee	strchr		4794952	0					
ANR	4795042	Identifier	strchr		4794952	0					
ANR	4795043	ArgumentList	acc		4794952	1					
ANR	4795044	Argument	acc		4794952	0					
ANR	4795045	Identifier	acc		4794952	0					
ANR	4795046	Argument	']'		4794952	1					
ANR	4795047	PrimaryExpression	']'		4794952	0					
ANR	4795048	IfStatement	if ( ! tmp )		4794952	2					
ANR	4795049	Condition	! tmp	641:6:15989:15992	4794952	0	True				
ANR	4795050	UnaryOperationExpression	! tmp		4794952	0					
ANR	4795051	UnaryOperator	!		4794952	0					
ANR	4795052	Identifier	tmp		4794952	1					
ANR	4795053	CompoundStatement		19:12:396:396	4794952	1					
ANR	4795054	ExpressionStatement	"dprintf ( D_HOSTNAME , ""could not find ]\\n"" )"	642:3:16000:16041	4794952	0	True				
ANR	4795055	CallExpression	"dprintf ( D_HOSTNAME , ""could not find ]\\n"" )"		4794952	0					
ANR	4795056	Callee	dprintf		4794952	0					
ANR	4795057	Identifier	dprintf		4794952	0					
ANR	4795058	ArgumentList	D_HOSTNAME		4794952	1					
ANR	4795059	Argument	D_HOSTNAME		4794952	0					
ANR	4795060	Identifier	D_HOSTNAME		4794952	0					
ANR	4795061	Argument	"""could not find ]\\n"""		4794952	1					
ANR	4795062	PrimaryExpression	"""could not find ]\\n"""		4794952	0					
ANR	4795063	ReturnStatement	return FALSE ;	643:3:16046:16058	4794952	1	True				
ANR	4795064	Identifier	FALSE		4794952	0					
ANR	4795065	ExpressionStatement	addr_begin = acc + 1	645:2:16066:16086	4794952	3	True				
ANR	4795066	AssignmentExpression	addr_begin = acc + 1		4794952	0		=			
ANR	4795067	Identifier	addr_begin		4794952	0					
ANR	4795068	AdditiveExpression	acc + 1		4794952	1		+			
ANR	4795069	Identifier	acc		4794952	0					
ANR	4795070	PrimaryExpression	1		4794952	1					
ANR	4795071	ExpressionStatement	addr_end = tmp	646:2:16090:16104	4794952	4	True				
ANR	4795072	AssignmentExpression	addr_end = tmp		4794952	0		=			
ANR	4795073	Identifier	addr_end		4794952	0					
ANR	4795074	Identifier	tmp		4794952	1					
ANR	4795075	IfStatement	if ( addr_end - addr_begin > INET6_ADDRSTRLEN )		4794952	5					
ANR	4795076	Condition	addr_end - addr_begin > INET6_ADDRSTRLEN	648:6:16126:16165	4794952	0	True				
ANR	4795077	RelationalExpression	addr_end - addr_begin > INET6_ADDRSTRLEN		4794952	0		>			
ANR	4795078	AdditiveExpression	addr_end - addr_begin		4794952	0		-			
ANR	4795079	Identifier	addr_end		4794952	0					
ANR	4795080	Identifier	addr_begin		4794952	1					
ANR	4795081	Identifier	INET6_ADDRSTRLEN		4794952	1					
ANR	4795082	CompoundStatement		26:48:569:569	4794952	1					
ANR	4795083	ExpressionStatement	"dprintf ( D_HOSTNAME , ""addr too long %d\\n"" , ( int ) ( addr_end - addr_begin ) )"	649:3:16173:16244	4794952	0	True				
ANR	4795084	CallExpression	"dprintf ( D_HOSTNAME , ""addr too long %d\\n"" , ( int ) ( addr_end - addr_begin ) )"		4794952	0					
ANR	4795085	Callee	dprintf		4794952	0					
ANR	4795086	Identifier	dprintf		4794952	0					
ANR	4795087	ArgumentList	D_HOSTNAME		4794952	1					
ANR	4795088	Argument	D_HOSTNAME		4794952	0					
ANR	4795089	Identifier	D_HOSTNAME		4794952	0					
ANR	4795090	Argument	"""addr too long %d\\n"""		4794952	1					
ANR	4795091	PrimaryExpression	"""addr too long %d\\n"""		4794952	0					
ANR	4795092	Argument	( int ) ( addr_end - addr_begin )		4794952	2					
ANR	4795093	CastExpression	( int ) ( addr_end - addr_begin )		4794952	0					
ANR	4795094	CastTarget	int		4794952	0					
ANR	4795095	AdditiveExpression	addr_end - addr_begin		4794952	1		-			
ANR	4795096	Identifier	addr_end		4794952	0					
ANR	4795097	Identifier	addr_begin		4794952	1					
ANR	4795098	ReturnStatement	return FALSE ;	650:3:16249:16261	4794952	1	True				
ANR	4795099	Identifier	FALSE		4794952	0					
ANR	4795100	ExpressionStatement	"strncpy ( addrbuf , addr_begin , addr_end - addr_begin )"	653:2:16270:16321	4794952	6	True				
ANR	4795101	CallExpression	"strncpy ( addrbuf , addr_begin , addr_end - addr_begin )"		4794952	0					
ANR	4795102	Callee	strncpy		4794952	0					
ANR	4795103	Identifier	strncpy		4794952	0					
ANR	4795104	ArgumentList	addrbuf		4794952	1					
ANR	4795105	Argument	addrbuf		4794952	0					
ANR	4795106	Identifier	addrbuf		4794952	0					
ANR	4795107	Argument	addr_begin		4794952	1					
ANR	4795108	Identifier	addr_begin		4794952	0					
ANR	4795109	Argument	addr_end - addr_begin		4794952	2					
ANR	4795110	AdditiveExpression	addr_end - addr_begin		4794952	0		-			
ANR	4795111	Identifier	addr_end		4794952	0					
ANR	4795112	Identifier	addr_begin		4794952	1					
ANR	4795113	ExpressionStatement	addrbuf [ addr_end - addr_begin ] = '\\0'	654:2:16325:16362	4794952	7	True				
ANR	4795114	AssignmentExpression	addrbuf [ addr_end - addr_begin ] = '\\0'		4794952	0		=			
ANR	4795115	ArrayIndexing	addrbuf [ addr_end - addr_begin ]		4794952	0					
ANR	4795116	Identifier	addrbuf		4794952	0					
ANR	4795117	AdditiveExpression	addr_end - addr_begin		4794952	1		-			
ANR	4795118	Identifier	addr_end		4794952	0					
ANR	4795119	Identifier	addr_begin		4794952	1					
ANR	4795120	PrimaryExpression	'\\0'		4794952	1					
ANR	4795121	ExpressionStatement	"dprintf ( D_HOSTNAME , ""try to convert using inet_pton, %s\\n"" , addrbuf )"	655:2:16366:16434	4794952	8	True				
ANR	4795122	CallExpression	"dprintf ( D_HOSTNAME , ""try to convert using inet_pton, %s\\n"" , addrbuf )"		4794952	0					
ANR	4795123	Callee	dprintf		4794952	0					
ANR	4795124	Identifier	dprintf		4794952	0					
ANR	4795125	ArgumentList	D_HOSTNAME		4794952	1					
ANR	4795126	Argument	D_HOSTNAME		4794952	0					
ANR	4795127	Identifier	D_HOSTNAME		4794952	0					
ANR	4795128	Argument	"""try to convert using inet_pton, %s\\n"""		4794952	1					
ANR	4795129	PrimaryExpression	"""try to convert using inet_pton, %s\\n"""		4794952	0					
ANR	4795130	Argument	addrbuf		4794952	2					
ANR	4795131	Identifier	addrbuf		4794952	0					
ANR	4795132	IdentifierDeclStatement	in6_addr tmp_addr ;	656:2:16438:16455	4794952	9	True				
ANR	4795133	IdentifierDecl	tmp_addr		4794952	0					
ANR	4795134	IdentifierDeclType	in6_addr		4794952	0					
ANR	4795135	Identifier	tmp_addr		4794952	1					
ANR	4795136	IfStatement	"if ( inet_pton ( AF_INET6 , addrbuf , & tmp_addr ) <= 0 )"		4794952	10					
ANR	4795137	Condition	"inet_pton ( AF_INET6 , addrbuf , & tmp_addr ) <= 0"	657:6:16463:16506	4794952	0	True				
ANR	4795138	RelationalExpression	"inet_pton ( AF_INET6 , addrbuf , & tmp_addr ) <= 0"		4794952	0		<=			
ANR	4795139	CallExpression	"inet_pton ( AF_INET6 , addrbuf , & tmp_addr )"		4794952	0					
ANR	4795140	Callee	inet_pton		4794952	0					
ANR	4795141	Identifier	inet_pton		4794952	0					
ANR	4795142	ArgumentList	AF_INET6		4794952	1					
ANR	4795143	Argument	AF_INET6		4794952	0					
ANR	4795144	Identifier	AF_INET6		4794952	0					
ANR	4795145	Argument	addrbuf		4794952	1					
ANR	4795146	Identifier	addrbuf		4794952	0					
ANR	4795147	Argument	& tmp_addr		4794952	2					
ANR	4795148	UnaryOperationExpression	& tmp_addr		4794952	0					
ANR	4795149	UnaryOperator	&		4794952	0					
ANR	4795150	Identifier	tmp_addr		4794952	1					
ANR	4795151	PrimaryExpression	0		4794952	1					
ANR	4795152	CompoundStatement		35:52:910:910	4794952	1					
ANR	4795153	ExpressionStatement	"dprintf ( D_HOSTNAME , ""inet_pton failed\\n"" )"	658:3:16514:16555	4794952	0	True				
ANR	4795154	CallExpression	"dprintf ( D_HOSTNAME , ""inet_pton failed\\n"" )"		4794952	0					
ANR	4795155	Callee	dprintf		4794952	0					
ANR	4795156	Identifier	dprintf		4794952	0					
ANR	4795157	ArgumentList	D_HOSTNAME		4794952	1					
ANR	4795158	Argument	D_HOSTNAME		4794952	0					
ANR	4795159	Identifier	D_HOSTNAME		4794952	0					
ANR	4795160	Argument	"""inet_pton failed\\n"""		4794952	1					
ANR	4795161	PrimaryExpression	"""inet_pton failed\\n"""		4794952	0					
ANR	4795162	ReturnStatement	return FALSE ;	659:3:16560:16572	4794952	1	True				
ANR	4795163	Identifier	FALSE		4794952	0					
ANR	4795164	ExpressionStatement	acc = tmp + 1	661:2:16580:16593	4794952	11	True				
ANR	4795165	AssignmentExpression	acc = tmp + 1		4794952	0		=			
ANR	4795166	Identifier	acc		4794952	0					
ANR	4795167	AdditiveExpression	tmp + 1		4794952	1		+			
ANR	4795168	Identifier	tmp		4794952	0					
ANR	4795169	PrimaryExpression	1		4794952	1					
ANR	4795170	ElseStatement	else		4794952	0					
ANR	4795171	CompoundStatement		42:2:1033:1069	4794952	0					
ANR	4795172	IdentifierDeclStatement	MyString ipaddr = acc ;	663:2:16607:16628	4794952	0	True				
ANR	4795173	IdentifierDecl	ipaddr = acc		4794952	0					
ANR	4795174	IdentifierDeclType	MyString		4794952	0					
ANR	4795175	Identifier	ipaddr		4794952	1					
ANR	4795176	AssignmentExpression	ipaddr = acc		4794952	2		=			
ANR	4795177	Identifier	acc		4794952	0					
ANR	4795178	Identifier	acc		4794952	1					
ANR	4795179	IdentifierDeclStatement	int colon_pos = ipaddr . FindChar ( ':' ) ;	664:2:16632:16668	4794952	1	True				
ANR	4795180	IdentifierDecl	colon_pos = ipaddr . FindChar ( ':' )		4794952	0					
ANR	4795181	IdentifierDeclType	int		4794952	0					
ANR	4795182	Identifier	colon_pos		4794952	1					
ANR	4795183	AssignmentExpression	colon_pos = ipaddr . FindChar ( ':' )		4794952	2		=			
ANR	4795184	Identifier	colon_pos		4794952	0					
ANR	4795185	CallExpression	ipaddr . FindChar ( ':' )		4794952	1					
ANR	4795186	Callee	ipaddr . FindChar		4794952	0					
ANR	4795187	MemberAccess	ipaddr . FindChar		4794952	0					
ANR	4795188	Identifier	ipaddr		4794952	0					
ANR	4795189	Identifier	FindChar		4794952	1					
ANR	4795190	ArgumentList	':'		4794952	1					
ANR	4795191	Argument	':'		4794952	0					
ANR	4795192	PrimaryExpression	':'		4794952	0					
ANR	4795193	IfStatement	if ( colon_pos == - 1 )		4794952	2					
ANR	4795194	Condition	colon_pos == - 1	665:5:16675:16689	4794952	0	True				
ANR	4795195	EqualityExpression	colon_pos == - 1		4794952	0		==			
ANR	4795196	Identifier	colon_pos		4794952	0					
ANR	4795197	UnaryOperationExpression	- 1		4794952	1					
ANR	4795198	UnaryOperator	-		4794952	0					
ANR	4795199	PrimaryExpression	1		4794952	1					
ANR	4795200	CompoundStatement		43:22:1093:1093	4794952	1					
ANR	4795201	ReturnStatement	return false ;	665:24:16694:16706	4794952	0	True				
ANR	4795202	Identifier	false		4794952	0					
ANR	4795203	ExpressionStatement	"ipaddr . setChar ( colon_pos , 0 )"	666:2:16712:16740	4794952	3	True				
ANR	4795204	CallExpression	"ipaddr . setChar ( colon_pos , 0 )"		4794952	0					
ANR	4795205	Callee	ipaddr . setChar		4794952	0					
ANR	4795206	MemberAccess	ipaddr . setChar		4794952	0					
ANR	4795207	Identifier	ipaddr		4794952	0					
ANR	4795208	Identifier	setChar		4794952	1					
ANR	4795209	ArgumentList	colon_pos		4794952	1					
ANR	4795210	Argument	colon_pos		4794952	0					
ANR	4795211	Identifier	colon_pos		4794952	0					
ANR	4795212	Argument	0		4794952	1					
ANR	4795213	PrimaryExpression	0		4794952	0					
ANR	4795214	IfStatement	"if ( ! is_ipv4_addr_implementation ( ipaddr . Value ( ) , NULL , NULL , false ) )"		4794952	4					
ANR	4795215	Condition	"! is_ipv4_addr_implementation ( ipaddr . Value ( ) , NULL , NULL , false )"	667:6:16748:16808	4794952	0	True				
ANR	4795216	UnaryOperationExpression	"! is_ipv4_addr_implementation ( ipaddr . Value ( ) , NULL , NULL , false )"		4794952	0					
ANR	4795217	UnaryOperator	!		4794952	0					
ANR	4795218	CallExpression	"is_ipv4_addr_implementation ( ipaddr . Value ( ) , NULL , NULL , false )"		4794952	1					
ANR	4795219	Callee	is_ipv4_addr_implementation		4794952	0					
ANR	4795220	Identifier	is_ipv4_addr_implementation		4794952	0					
ANR	4795221	ArgumentList	ipaddr . Value ( )		4794952	1					
ANR	4795222	Argument	ipaddr . Value ( )		4794952	0					
ANR	4795223	CallExpression	ipaddr . Value ( )		4794952	0					
ANR	4795224	Callee	ipaddr . Value		4794952	0					
ANR	4795225	MemberAccess	ipaddr . Value		4794952	0					
ANR	4795226	Identifier	ipaddr		4794952	0					
ANR	4795227	Identifier	Value		4794952	1					
ANR	4795228	ArgumentList			4794952	1					
ANR	4795229	Argument	NULL		4794952	1					
ANR	4795230	Identifier	NULL		4794952	0					
ANR	4795231	Argument	NULL		4794952	2					
ANR	4795232	Identifier	NULL		4794952	0					
ANR	4795233	Argument	false		4794952	3					
ANR	4795234	Identifier	false		4794952	0					
ANR	4795235	CompoundStatement		45:70:1213:1213	4794952	1					
ANR	4795236	ReturnStatement	return FALSE ;	668:3:16817:16829	4794952	0	True				
ANR	4795237	Identifier	FALSE		4794952	0					
ANR	4795238	ExpressionStatement	acc = acc + colon_pos	670:2:16837:16858	4794952	5	True				
ANR	4795239	AssignmentExpression	acc = acc + colon_pos		4794952	0		=			
ANR	4795240	Identifier	acc		4794952	0					
ANR	4795241	AdditiveExpression	acc + colon_pos		4794952	1		+			
ANR	4795242	Identifier	acc		4794952	0					
ANR	4795243	Identifier	colon_pos		4794952	1					
ANR	4795244	IfStatement	if ( * acc != ':' )		4794952	10					
ANR	4795245	Condition	* acc != ':'	672:5:16868:16878	4794952	0	True				
ANR	4795246	EqualityExpression	* acc != ':'		4794952	0		!=			
ANR	4795247	UnaryOperationExpression	* acc		4794952	0					
ANR	4795248	UnaryOperator	*		4794952	0					
ANR	4795249	Identifier	acc		4794952	1					
ANR	4795250	PrimaryExpression	':'		4794952	1					
ANR	4795251	CompoundStatement		50:18:1282:1282	4794952	1					
ANR	4795252	ExpressionStatement	"dprintf ( D_HOSTNAME , ""no colon found\\n"" )"	673:2:16885:16924	4794952	0	True				
ANR	4795253	CallExpression	"dprintf ( D_HOSTNAME , ""no colon found\\n"" )"		4794952	0					
ANR	4795254	Callee	dprintf		4794952	0					
ANR	4795255	Identifier	dprintf		4794952	0					
ANR	4795256	ArgumentList	D_HOSTNAME		4794952	1					
ANR	4795257	Argument	D_HOSTNAME		4794952	0					
ANR	4795258	Identifier	D_HOSTNAME		4794952	0					
ANR	4795259	Argument	"""no colon found\\n"""		4794952	1					
ANR	4795260	PrimaryExpression	"""no colon found\\n"""		4794952	0					
ANR	4795261	ReturnStatement	return FALSE ;	674:2:16928:16940	4794952	1	True				
ANR	4795262	Identifier	FALSE		4794952	0					
ANR	4795263	ExpressionStatement	"tmp = strchr ( acc , '>' )"	677:1:16947:16969	4794952	11	True				
ANR	4795264	AssignmentExpression	"tmp = strchr ( acc , '>' )"		4794952	0		=			
ANR	4795265	Identifier	tmp		4794952	0					
ANR	4795266	CallExpression	"strchr ( acc , '>' )"		4794952	1					
ANR	4795267	Callee	strchr		4794952	0					
ANR	4795268	Identifier	strchr		4794952	0					
ANR	4795269	ArgumentList	acc		4794952	1					
ANR	4795270	Argument	acc		4794952	0					
ANR	4795271	Identifier	acc		4794952	0					
ANR	4795272	Argument	'>'		4794952	1					
ANR	4795273	PrimaryExpression	'>'		4794952	0					
ANR	4795274	IfStatement	if ( ! tmp )		4794952	12					
ANR	4795275	Condition	! tmp	678:5:16976:16979	4794952	0	True				
ANR	4795276	UnaryOperationExpression	! tmp		4794952	0					
ANR	4795277	UnaryOperator	!		4794952	0					
ANR	4795278	Identifier	tmp		4794952	1					
ANR	4795279	CompoundStatement		56:11:1383:1383	4794952	1					
ANR	4795280	ExpressionStatement	"dprintf ( D_HOSTNAME , ""no > found\\n"" )"	679:2:16986:17021	4794952	0	True				
ANR	4795281	CallExpression	"dprintf ( D_HOSTNAME , ""no > found\\n"" )"		4794952	0					
ANR	4795282	Callee	dprintf		4794952	0					
ANR	4795283	Identifier	dprintf		4794952	0					
ANR	4795284	ArgumentList	D_HOSTNAME		4794952	1					
ANR	4795285	Argument	D_HOSTNAME		4794952	0					
ANR	4795286	Identifier	D_HOSTNAME		4794952	0					
ANR	4795287	Argument	"""no > found\\n"""		4794952	1					
ANR	4795288	PrimaryExpression	"""no > found\\n"""		4794952	0					
ANR	4795289	ReturnStatement	return FALSE ;	680:2:17025:17037	4794952	1	True				
ANR	4795290	Identifier	FALSE		4794952	0					
ANR	4795291	ExpressionStatement	"dprintf ( D_HOSTNAME , ""success\\n"" )"	682:1:17043:17075	4794952	13	True				
ANR	4795292	CallExpression	"dprintf ( D_HOSTNAME , ""success\\n"" )"		4794952	0					
ANR	4795293	Callee	dprintf		4794952	0					
ANR	4795294	Identifier	dprintf		4794952	0					
ANR	4795295	ArgumentList	D_HOSTNAME		4794952	1					
ANR	4795296	Argument	D_HOSTNAME		4794952	0					
ANR	4795297	Identifier	D_HOSTNAME		4794952	0					
ANR	4795298	Argument	"""success\\n"""		4794952	1					
ANR	4795299	PrimaryExpression	"""success\\n"""		4794952	0					
ANR	4795300	ReturnStatement	return TRUE ;	683:1:17078:17089	4794952	14	True				
ANR	4795301	Identifier	TRUE		4794952	0					
ANR	4795302	ReturnType	int		4794952	1					
ANR	4795303	Identifier	is_valid_sinful		4794952	2					
ANR	4795304	ParameterList	const char * sinful		4794952	3					
ANR	4795305	Parameter	const char * sinful	622:17:15577:15594	4794952	0	True				
ANR	4795306	ParameterType	const char *		4794952	0					
ANR	4795307	Identifier	sinful		4794952	1					
ANR	4795308	CFGEntryNode	ENTRY		4794952		True				
ANR	4795309	CFGExitNode	EXIT		4794952		True				
ANR	4795310	Symbol	acc		4794952						
ANR	4795311	Symbol	strchr		4794952						
ANR	4795312	Symbol	tmp_addr		4794952						
ANR	4795313	Symbol	* acc		4794952						
ANR	4795314	Symbol	addr_end		4794952						
ANR	4795315	Symbol	tmp		4794952						
ANR	4795316	Symbol	& tmp_addr		4794952						
ANR	4795317	Symbol	* addrbuf		4794952						
ANR	4795318	Symbol	ipaddr		4794952						
ANR	4795319	Symbol	sinful		4794952						
ANR	4795320	Symbol	is_ipv4_addr_implementation		4794952						
ANR	4795321	Symbol	D_HOSTNAME		4794952						
ANR	4795322	Symbol	addr_begin		4794952						
ANR	4795323	Symbol	NULL		4794952						
ANR	4795324	Symbol	* addr_begin		4794952						
ANR	4795325	Symbol	inet_pton		4794952						
ANR	4795326	Symbol	false		4794952						
ANR	4795327	Symbol	TRUE		4794952						
ANR	4795328	Symbol	INET6_ADDRSTRLEN		4794952						
ANR	4795329	Symbol	colon_pos		4794952						
ANR	4795330	Symbol	AF_INET6		4794952						
ANR	4795331	Symbol	* addr_end		4794952						
ANR	4795332	Symbol	ipaddr . FindChar		4794952						
ANR	4795333	Symbol	addrbuf		4794952						
ANR	4795334	Symbol	ipaddr . Value		4794952						
ANR	4795335	Symbol	FALSE		4794952						
ANR	4795336	Function	string_to_port	694:0:17421:17801							
ANR	4795337	FunctionDef	string_to_port (const char * addr)		4795336	0					
ANR	4795338	CompoundStatement		696:0:17460:17801	4795336	0					
ANR	4795339	IdentifierDeclStatement	const char * acc = addr ;	697:1:17463:17485	4795336	0	True				
ANR	4795340	IdentifierDecl	* acc = addr		4795336	0					
ANR	4795341	IdentifierDeclType	const char *		4795336	0					
ANR	4795342	Identifier	acc		4795336	1					
ANR	4795343	AssignmentExpression	* acc = addr		4795336	2		=			
ANR	4795344	Identifier	addr		4795336	0					
ANR	4795345	Identifier	addr		4795336	1					
ANR	4795346	IdentifierDeclStatement	const char * tmp ;	698:1:17488:17503	4795336	1	True				
ANR	4795347	IdentifierDecl	* tmp		4795336	0					
ANR	4795348	IdentifierDeclType	const char *		4795336	0					
ANR	4795349	Identifier	tmp		4795336	1					
ANR	4795350	IdentifierDeclStatement	int port = 0 ;	699:1:17506:17518	4795336	2	True				
ANR	4795351	IdentifierDecl	port = 0		4795336	0					
ANR	4795352	IdentifierDeclType	int		4795336	0					
ANR	4795353	Identifier	port		4795336	1					
ANR	4795354	AssignmentExpression	port = 0		4795336	2		=			
ANR	4795355	Identifier	port		4795336	0					
ANR	4795356	PrimaryExpression	0		4795336	1					
ANR	4795357	IfStatement	if ( ! ( addr && is_valid_sinful ( addr ) ) )		4795336	3					
ANR	4795358	Condition	! ( addr && is_valid_sinful ( addr ) )	701:5:17526:17558	4795336	0	True				
ANR	4795359	UnaryOperationExpression	! ( addr && is_valid_sinful ( addr ) )		4795336	0					
ANR	4795360	UnaryOperator	!		4795336	0					
ANR	4795361	AndExpression	addr && is_valid_sinful ( addr )		4795336	1		&&			
ANR	4795362	Identifier	addr		4795336	0					
ANR	4795363	CallExpression	is_valid_sinful ( addr )		4795336	1					
ANR	4795364	Callee	is_valid_sinful		4795336	0					
ANR	4795365	Identifier	is_valid_sinful		4795336	0					
ANR	4795366	ArgumentList	addr		4795336	1					
ANR	4795367	Argument	addr		4795336	0					
ANR	4795368	Identifier	addr		4795336	0					
ANR	4795369	CompoundStatement		6:41:101:101	4795336	1					
ANR	4795370	ReturnStatement	return 0 ;	702:2:17566:17574	4795336	0	True				
ANR	4795371	PrimaryExpression	0		4795336	0					
ANR	4795372	IfStatement	if ( * acc != '<' )		4795336	4					
ANR	4795373	Condition	* acc != '<'	705:5:17585:17595	4795336	0	True				
ANR	4795374	EqualityExpression	* acc != '<'		4795336	0		!=			
ANR	4795375	UnaryOperationExpression	* acc		4795336	0					
ANR	4795376	UnaryOperator	*		4795336	0					
ANR	4795377	Identifier	acc		4795336	1					
ANR	4795378	PrimaryExpression	'<'		4795336	1					
ANR	4795379	ReturnStatement	return 0 ;	706:2:17600:17608	4795336	1	True				
ANR	4795380	PrimaryExpression	0		4795336	0					
ANR	4795381	ExpressionStatement	acc ++	708:1:17612:17617	4795336	5	True				
ANR	4795382	PostIncDecOperationExpression	acc ++		4795336	0					
ANR	4795383	Identifier	acc		4795336	0					
ANR	4795384	IncDec	++		4795336	1					
ANR	4795385	IfStatement	if ( * acc == '[' )		4795336	6					
ANR	4795386	Condition	* acc == '['	709:5:17624:17634	4795336	0	True				
ANR	4795387	EqualityExpression	* acc == '['		4795336	0		==			
ANR	4795388	UnaryOperationExpression	* acc		4795336	0					
ANR	4795389	UnaryOperator	*		4795336	0					
ANR	4795390	Identifier	acc		4795336	1					
ANR	4795391	PrimaryExpression	'['		4795336	1					
ANR	4795392	CompoundStatement		14:18:176:176	4795336	1					
ANR	4795393	ExpressionStatement	"tmp = strchr ( acc , ']' )"	710:2:17641:17663	4795336	0	True				
ANR	4795394	AssignmentExpression	"tmp = strchr ( acc , ']' )"		4795336	0		=			
ANR	4795395	Identifier	tmp		4795336	0					
ANR	4795396	CallExpression	"strchr ( acc , ']' )"		4795336	1					
ANR	4795397	Callee	strchr		4795336	0					
ANR	4795398	Identifier	strchr		4795336	0					
ANR	4795399	ArgumentList	acc		4795336	1					
ANR	4795400	Argument	acc		4795336	0					
ANR	4795401	Identifier	acc		4795336	0					
ANR	4795402	Argument	']'		4795336	1					
ANR	4795403	PrimaryExpression	']'		4795336	0					
ANR	4795404	IfStatement	if ( ! tmp )		4795336	1					
ANR	4795405	Condition	! tmp	711:6:17671:17674	4795336	0	True				
ANR	4795406	UnaryOperationExpression	! tmp		4795336	0					
ANR	4795407	UnaryOperator	!		4795336	0					
ANR	4795408	Identifier	tmp		4795336	1					
ANR	4795409	ReturnStatement	return 0 ;	712:3:17680:17688	4795336	1	True				
ANR	4795410	PrimaryExpression	0		4795336	0					
ANR	4795411	ExpressionStatement	acc = tmp + 1	713:2:17692:17705	4795336	2	True				
ANR	4795412	AssignmentExpression	acc = tmp + 1		4795336	0		=			
ANR	4795413	Identifier	acc		4795336	0					
ANR	4795414	AdditiveExpression	tmp + 1		4795336	1		+			
ANR	4795415	Identifier	tmp		4795336	0					
ANR	4795416	PrimaryExpression	1		4795336	1					
ANR	4795417	ExpressionStatement	"tmp = strchr ( acc , ':' )"	716:1:17712:17734	4795336	7	True				
ANR	4795418	AssignmentExpression	"tmp = strchr ( acc , ':' )"		4795336	0		=			
ANR	4795419	Identifier	tmp		4795336	0					
ANR	4795420	CallExpression	"strchr ( acc , ':' )"		4795336	1					
ANR	4795421	Callee	strchr		4795336	0					
ANR	4795422	Identifier	strchr		4795336	0					
ANR	4795423	ArgumentList	acc		4795336	1					
ANR	4795424	Argument	acc		4795336	0					
ANR	4795425	Identifier	acc		4795336	0					
ANR	4795426	Argument	':'		4795336	1					
ANR	4795427	PrimaryExpression	':'		4795336	0					
ANR	4795428	IfStatement	if ( ! tmp )		4795336	8					
ANR	4795429	Condition	! tmp	717:5:17741:17744	4795336	0	True				
ANR	4795430	UnaryOperationExpression	! tmp		4795336	0					
ANR	4795431	UnaryOperator	!		4795336	0					
ANR	4795432	Identifier	tmp		4795336	1					
ANR	4795433	ReturnStatement	return 0 ;	718:2:17749:17757	4795336	1	True				
ANR	4795434	PrimaryExpression	0		4795336	0					
ANR	4795435	ExpressionStatement	tmp ++	720:1:17761:17766	4795336	9	True				
ANR	4795436	PostIncDecOperationExpression	tmp ++		4795336	0					
ANR	4795437	Identifier	tmp		4795336	0					
ANR	4795438	IncDec	++		4795336	1					
ANR	4795439	ExpressionStatement	port = atoi ( tmp )	721:1:17769:17785	4795336	10	True				
ANR	4795440	AssignmentExpression	port = atoi ( tmp )		4795336	0		=			
ANR	4795441	Identifier	port		4795336	0					
ANR	4795442	CallExpression	atoi ( tmp )		4795336	1					
ANR	4795443	Callee	atoi		4795336	0					
ANR	4795444	Identifier	atoi		4795336	0					
ANR	4795445	ArgumentList	tmp		4795336	1					
ANR	4795446	Argument	tmp		4795336	0					
ANR	4795447	Identifier	tmp		4795336	0					
ANR	4795448	ReturnStatement	return port ;	722:1:17788:17799	4795336	11	True				
ANR	4795449	Identifier	port		4795336	0					
ANR	4795450	ReturnType	int		4795336	1					
ANR	4795451	Identifier	string_to_port		4795336	2					
ANR	4795452	ParameterList	const char * addr		4795336	3					
ANR	4795453	Parameter	const char * addr	695:16:17441:17456	4795336	0	True				
ANR	4795454	ParameterType	const char *		4795336	0					
ANR	4795455	Identifier	addr		4795336	1					
ANR	4795456	CFGEntryNode	ENTRY		4795336		True				
ANR	4795457	CFGExitNode	EXIT		4795336		True				
ANR	4795458	Symbol	acc		4795336						
ANR	4795459	Symbol	atoi		4795336						
ANR	4795460	Symbol	* acc		4795336						
ANR	4795461	Symbol	port		4795336						
ANR	4795462	Symbol	tmp		4795336						
ANR	4795463	Symbol	is_valid_sinful		4795336						
ANR	4795464	Symbol	strchr		4795336						
ANR	4795465	Symbol	addr		4795336						
ANR	4795466	Function	string_to_ipstr	755:0:18559:19037							
ANR	4795467	FunctionDef	string_to_ipstr (const char * addr)		4795466	0					
ANR	4795468	CompoundStatement		757:0:18601:19037	4795466	0					
ANR	4795469	ReturnType	char *		4795466	1					
ANR	4795470	Identifier	string_to_ipstr		4795466	2					
ANR	4795471	ParameterList	const char * addr		4795466	3					
ANR	4795472	Parameter	const char * addr	756:17:18582:18597	4795466	0	True				
ANR	4795473	ParameterType	const char *		4795466	0					
ANR	4795474	Identifier	addr		4795466	1					
ANR	4795475	CFGEntryNode	ENTRY		4795466		True				
ANR	4795476	CFGExitNode	EXIT		4795466		True				
ANR	4795477	Symbol	addr		4795466						
ANR	4795478	Function	_condor_local_bind	789:0:19281:21362							
ANR	4795479	FunctionDef	"_condor_local_bind (int is_outgoing , int fd)"		4795478	0					
ANR	4795480	CompoundStatement		791:0:19331:21362	4795478	0					
ANR	4795481	IdentifierDeclStatement	"int lowPort , highPort ;"	801:1:19716:19737	4795478	0	True				
ANR	4795482	IdentifierDecl	lowPort		4795478	0					
ANR	4795483	IdentifierDeclType	int		4795478	0					
ANR	4795484	Identifier	lowPort		4795478	1					
ANR	4795485	IdentifierDecl	highPort		4795478	1					
ANR	4795486	IdentifierDeclType	int		4795478	0					
ANR	4795487	Identifier	highPort		4795478	1					
ANR	4795488	IfStatement	"if ( get_port_range ( is_outgoing , & lowPort , & highPort ) == TRUE )"		4795478	1					
ANR	4795489	Condition	"get_port_range ( is_outgoing , & lowPort , & highPort ) == TRUE"	802:6:19745:19800	4795478	0	True				
ANR	4795490	EqualityExpression	"get_port_range ( is_outgoing , & lowPort , & highPort ) == TRUE"		4795478	0		==			
ANR	4795491	CallExpression	"get_port_range ( is_outgoing , & lowPort , & highPort )"		4795478	0					
ANR	4795492	Callee	get_port_range		4795478	0					
ANR	4795493	Identifier	get_port_range		4795478	0					
ANR	4795494	ArgumentList	is_outgoing		4795478	1					
ANR	4795495	Argument	is_outgoing		4795478	0					
ANR	4795496	Identifier	is_outgoing		4795478	0					
ANR	4795497	Argument	& lowPort		4795478	1					
ANR	4795498	UnaryOperationExpression	& lowPort		4795478	0					
ANR	4795499	UnaryOperator	&		4795478	0					
ANR	4795500	Identifier	lowPort		4795478	1					
ANR	4795501	Argument	& highPort		4795478	2					
ANR	4795502	UnaryOperationExpression	& highPort		4795478	0					
ANR	4795503	UnaryOperator	&		4795478	0					
ANR	4795504	Identifier	highPort		4795478	1					
ANR	4795505	Identifier	TRUE		4795478	1					
ANR	4795506	CompoundStatement		12:65:472:472	4795478	1					
ANR	4795507	IfStatement	"if ( bindWithin ( fd , lowPort , highPort ) == TRUE )"		4795478	0					
ANR	4795508	Condition	"bindWithin ( fd , lowPort , highPort ) == TRUE"	803:7:19813:19853	4795478	0	True				
ANR	4795509	EqualityExpression	"bindWithin ( fd , lowPort , highPort ) == TRUE"		4795478	0		==			
ANR	4795510	CallExpression	"bindWithin ( fd , lowPort , highPort )"		4795478	0					
ANR	4795511	Callee	bindWithin		4795478	0					
ANR	4795512	Identifier	bindWithin		4795478	0					
ANR	4795513	ArgumentList	fd		4795478	1					
ANR	4795514	Argument	fd		4795478	0					
ANR	4795515	Identifier	fd		4795478	0					
ANR	4795516	Argument	lowPort		4795478	1					
ANR	4795517	Identifier	lowPort		4795478	0					
ANR	4795518	Argument	highPort		4795478	2					
ANR	4795519	Identifier	highPort		4795478	0					
ANR	4795520	Identifier	TRUE		4795478	1					
ANR	4795521	ReturnStatement	return TRUE ;	804:12:19869:19880	4795478	1	True				
ANR	4795522	Identifier	TRUE		4795478	0					
ANR	4795523	ElseStatement	else		4795478	0					
ANR	4795524	ReturnStatement	return FALSE ;	806:3:19898:19910	4795478	0	True				
ANR	4795525	Identifier	FALSE		4795478	0					
ANR	4795526	ElseStatement	else		4795478	0					
ANR	4795527	CompoundStatement		20:2:652:704	4795478	0					
ANR	4795528	IdentifierDeclStatement	struct sockaddr_storage ss ;	808:2:19924:19950	4795478	0	True				
ANR	4795529	IdentifierDecl	ss		4795478	0					
ANR	4795530	IdentifierDeclType	struct sockaddr_storage		4795478	0					
ANR	4795531	Identifier	ss		4795478	1					
ANR	4795532	IdentifierDeclStatement	socklen_t len = sizeof ( ss ) ;	809:2:19954:19980	4795478	1	True				
ANR	4795533	IdentifierDecl	len = sizeof ( ss )		4795478	0					
ANR	4795534	IdentifierDeclType	socklen_t		4795478	0					
ANR	4795535	Identifier	len		4795478	1					
ANR	4795536	AssignmentExpression	len = sizeof ( ss )		4795478	2		=			
ANR	4795537	Identifier	len		4795478	0					
ANR	4795538	SizeofExpression	sizeof ( ss )		4795478	1					
ANR	4795539	Sizeof	sizeof		4795478	0					
ANR	4795540	SizeofOperand	ss		4795478	1					
ANR	4795541	IdentifierDeclStatement	"int r = getsockname ( fd , ( struct sockaddr * ) & ss , & len ) ;"	810:2:19984:20036	4795478	2	True				
ANR	4795542	IdentifierDecl	"r = getsockname ( fd , ( struct sockaddr * ) & ss , & len )"		4795478	0					
ANR	4795543	IdentifierDeclType	int		4795478	0					
ANR	4795544	Identifier	r		4795478	1					
ANR	4795545	AssignmentExpression	"r = getsockname ( fd , ( struct sockaddr * ) & ss , & len )"		4795478	2		=			
ANR	4795546	Identifier	r		4795478	0					
ANR	4795547	CallExpression	"getsockname ( fd , ( struct sockaddr * ) & ss , & len )"		4795478	1					
ANR	4795548	Callee	getsockname		4795478	0					
ANR	4795549	Identifier	getsockname		4795478	0					
ANR	4795550	ArgumentList	fd		4795478	1					
ANR	4795551	Argument	fd		4795478	0					
ANR	4795552	Identifier	fd		4795478	0					
ANR	4795553	Argument	( struct sockaddr * ) & ss		4795478	1					
ANR	4795554	CastExpression	( struct sockaddr * ) & ss		4795478	0					
ANR	4795555	CastTarget	struct sockaddr *		4795478	0					
ANR	4795556	UnaryOperationExpression	& ss		4795478	1					
ANR	4795557	UnaryOperator	&		4795478	0					
ANR	4795558	Identifier	ss		4795478	1					
ANR	4795559	Argument	& len		4795478	2					
ANR	4795560	UnaryOperationExpression	& len		4795478	0					
ANR	4795561	UnaryOperator	&		4795478	0					
ANR	4795562	Identifier	len		4795478	1					
ANR	4795563	IfStatement	if ( r != 0 )		4795478	3					
ANR	4795564	Condition	r != 0	811:6:20044:20049	4795478	0	True				
ANR	4795565	EqualityExpression	r != 0		4795478	0		!=			
ANR	4795566	Identifier	r		4795478	0					
ANR	4795567	PrimaryExpression	0		4795478	1					
ANR	4795568	CompoundStatement		21:14:720:720	4795478	1					
ANR	4795569	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: getsockname fialed, errno: %d\\n"" , errno )"	812:3:20057:20128	4795478	0	True				
ANR	4795570	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: getsockname fialed, errno: %d\\n"" , errno )"		4795478	0					
ANR	4795571	Callee	dprintf		4795478	0					
ANR	4795572	Identifier	dprintf		4795478	0					
ANR	4795573	ArgumentList	D_ALWAYS		4795478	1					
ANR	4795574	Argument	D_ALWAYS		4795478	0					
ANR	4795575	Identifier	D_ALWAYS		4795478	0					
ANR	4795576	Argument	"""ERROR: getsockname fialed, errno: %d\\n"""		4795478	1					
ANR	4795577	PrimaryExpression	"""ERROR: getsockname fialed, errno: %d\\n"""		4795478	0					
ANR	4795578	Argument	errno		4795478	2					
ANR	4795579	Identifier	errno		4795478	0					
ANR	4795580	ReturnStatement	return FALSE ;	814:3:20133:20145	4795478	1	True				
ANR	4795581	Identifier	FALSE		4795478	0					
ANR	4795582	IfStatement	if ( ss . ss_family == AF_INET )		4795478	4					
ANR	4795583	Condition	ss . ss_family == AF_INET	819:6:20247:20269	4795478	0	True				
ANR	4795584	EqualityExpression	ss . ss_family == AF_INET		4795478	0		==			
ANR	4795585	MemberAccess	ss . ss_family		4795478	0					
ANR	4795586	Identifier	ss		4795478	0					
ANR	4795587	Identifier	ss_family		4795478	1					
ANR	4795588	Identifier	AF_INET		4795478	1					
ANR	4795589	CompoundStatement		30:3:945:997	4795478	1					
ANR	4795590	IdentifierDeclStatement	struct sockaddr_in * sa_in = ( struct sockaddr_in * ) & ss ;	820:3:20277:20329	4795478	0	True				
ANR	4795591	IdentifierDecl	* sa_in = ( struct sockaddr_in * ) & ss		4795478	0					
ANR	4795592	IdentifierDeclType	struct sockaddr_in *		4795478	0					
ANR	4795593	Identifier	sa_in		4795478	1					
ANR	4795594	AssignmentExpression	* sa_in = ( struct sockaddr_in * ) & ss		4795478	2		=			
ANR	4795595	Identifier	sa_in		4795478	0					
ANR	4795596	CastExpression	( struct sockaddr_in * ) & ss		4795478	1					
ANR	4795597	CastTarget	struct sockaddr_in *		4795478	0					
ANR	4795598	UnaryOperationExpression	& ss		4795478	1					
ANR	4795599	UnaryOperator	&		4795478	0					
ANR	4795600	Identifier	ss		4795478	1					
ANR	4795601	ExpressionStatement	"memset ( ( char * ) sa_in , 0 , sizeof ( struct sockaddr_in ) )"	821:3:20334:20388	4795478	1	True				
ANR	4795602	CallExpression	"memset ( ( char * ) sa_in , 0 , sizeof ( struct sockaddr_in ) )"		4795478	0					
ANR	4795603	Callee	memset		4795478	0					
ANR	4795604	Identifier	memset		4795478	0					
ANR	4795605	ArgumentList	( char * ) sa_in		4795478	1					
ANR	4795606	Argument	( char * ) sa_in		4795478	0					
ANR	4795607	CastExpression	( char * ) sa_in		4795478	0					
ANR	4795608	CastTarget	char *		4795478	0					
ANR	4795609	Identifier	sa_in		4795478	1					
ANR	4795610	Argument	0		4795478	1					
ANR	4795611	PrimaryExpression	0		4795478	0					
ANR	4795612	Argument	sizeof ( struct sockaddr_in )		4795478	2					
ANR	4795613	SizeofExpression	sizeof ( struct sockaddr_in )		4795478	0					
ANR	4795614	Sizeof	sizeof		4795478	0					
ANR	4795615	SizeofOperand	struct sockaddr_in		4795478	1					
ANR	4795616	ExpressionStatement	sa_in -> sin_family = AF_INET	822:3:20393:20420	4795478	2	True				
ANR	4795617	AssignmentExpression	sa_in -> sin_family = AF_INET		4795478	0		=			
ANR	4795618	PtrMemberAccess	sa_in -> sin_family		4795478	0					
ANR	4795619	Identifier	sa_in		4795478	0					
ANR	4795620	Identifier	sin_family		4795478	1					
ANR	4795621	Identifier	AF_INET		4795478	1					
ANR	4795622	ExpressionStatement	sa_in -> sin_port = 0	823:3:20425:20444	4795478	3	True				
ANR	4795623	AssignmentExpression	sa_in -> sin_port = 0		4795478	0		=			
ANR	4795624	PtrMemberAccess	sa_in -> sin_port		4795478	0					
ANR	4795625	Identifier	sa_in		4795478	0					
ANR	4795626	Identifier	sin_port		4795478	1					
ANR	4795627	PrimaryExpression	0		4795478	1					
ANR	4795628	ExpressionStatement	sa_in -> sin_addr . s_addr = INADDR_ANY	833:3:20839:20874	4795478	4	True				
ANR	4795629	AssignmentExpression	sa_in -> sin_addr . s_addr = INADDR_ANY		4795478	0		=			
ANR	4795630	MemberAccess	sa_in -> sin_addr . s_addr		4795478	0					
ANR	4795631	PtrMemberAccess	sa_in -> sin_addr		4795478	0					
ANR	4795632	Identifier	sa_in		4795478	0					
ANR	4795633	Identifier	sin_addr		4795478	1					
ANR	4795634	Identifier	s_addr		4795478	1					
ANR	4795635	Identifier	INADDR_ANY		4795478	1					
ANR	4795636	ElseStatement	else		4795478	0					
ANR	4795637	IfStatement	if ( ss . ss_family == AF_INET6 )		4795478	0					
ANR	4795638	Condition	ss . ss_family == AF_INET6	834:13:20889:20912	4795478	0	True				
ANR	4795639	EqualityExpression	ss . ss_family == AF_INET6		4795478	0		==			
ANR	4795640	MemberAccess	ss . ss_family		4795478	0					
ANR	4795641	Identifier	ss		4795478	0					
ANR	4795642	Identifier	ss_family		4795478	1					
ANR	4795643	Identifier	AF_INET6		4795478	1					
ANR	4795644	CompoundStatement		45:3:1588:1641	4795478	1					
ANR	4795645	IdentifierDeclStatement	struct sockaddr_in6 * sin6 = ( struct sockaddr_in6 * ) & ss ;	835:3:20920:20973	4795478	0	True				
ANR	4795646	IdentifierDecl	* sin6 = ( struct sockaddr_in6 * ) & ss		4795478	0					
ANR	4795647	IdentifierDeclType	struct sockaddr_in6 *		4795478	0					
ANR	4795648	Identifier	sin6		4795478	1					
ANR	4795649	AssignmentExpression	* sin6 = ( struct sockaddr_in6 * ) & ss		4795478	2		=			
ANR	4795650	Identifier	sin6		4795478	0					
ANR	4795651	CastExpression	( struct sockaddr_in6 * ) & ss		4795478	1					
ANR	4795652	CastTarget	struct sockaddr_in6 *		4795478	0					
ANR	4795653	UnaryOperationExpression	& ss		4795478	1					
ANR	4795654	UnaryOperator	&		4795478	0					
ANR	4795655	Identifier	ss		4795478	1					
ANR	4795656	ExpressionStatement	sin6 -> sin6_addr = in6addr_any	836:3:20978:21007	4795478	1	True				
ANR	4795657	AssignmentExpression	sin6 -> sin6_addr = in6addr_any		4795478	0		=			
ANR	4795658	PtrMemberAccess	sin6 -> sin6_addr		4795478	0					
ANR	4795659	Identifier	sin6		4795478	0					
ANR	4795660	Identifier	sin6_addr		4795478	1					
ANR	4795661	Identifier	in6addr_any		4795478	1					
ANR	4795662	ExpressionStatement	sin6 -> sin6_port = 0	837:3:21012:21031	4795478	2	True				
ANR	4795663	AssignmentExpression	sin6 -> sin6_port = 0		4795478	0		=			
ANR	4795664	PtrMemberAccess	sin6 -> sin6_port		4795478	0					
ANR	4795665	Identifier	sin6		4795478	0					
ANR	4795666	Identifier	sin6_port		4795478	1					
ANR	4795667	PrimaryExpression	0		4795478	1					
ANR	4795668	ElseStatement	else		4795478	0					
ANR	4795669	CompoundStatement		48:9:1710:1710	4795478	0					
ANR	4795670	Statement	dprintf	839:3:21047:21053	4795478	0	True				
ANR	4795671	Statement	(	839:10:21054:21054	4795478	1	True				
ANR	4795672	Statement	D_ALWAYS	839:11:21055:21062	4795478	2	True				
ANR	4795673	Statement	","	839:19:21063:21063	4795478	3	True				
ANR	4795674	Statement	"""ERROR: getsockname returned with unknown """	839:21:21065:21107	4795478	4	True				
ANR	4795675	Statement	"""socket type %d\\n"""	840:5:21114:21131	4795478	5	True				
ANR	4795676	Statement	","	840:23:21132:21132	4795478	6	True				
ANR	4795677	Statement	ss	840:25:21134:21135	4795478	7	True				
ANR	4795678	Statement	.	840:27:21136:21136	4795478	8	True				
ANR	4795679	Statement	ss_family	840:28:21137:21145	4795478	9	True				
ANR	4795680	Statement	)	840:37:21146:21146	4795478	10	True				
ANR	4795681	ExpressionStatement		840:38:21147:21147	4795478	11	True				
ANR	4795682	ReturnStatement	return FALSE ;	841:3:21152:21164	4795478	12	True				
ANR	4795683	Identifier	FALSE		4795478	0					
ANR	4795684	IfStatement	"if ( bind ( fd , ( struct sockaddr * ) & ss , len ) < 0 )"		4795478	5					
ANR	4795685	Condition	"bind ( fd , ( struct sockaddr * ) & ss , len ) < 0"	844:6:21177:21216	4795478	0	True				
ANR	4795686	RelationalExpression	"bind ( fd , ( struct sockaddr * ) & ss , len ) < 0"		4795478	0		<			
ANR	4795687	CallExpression	"bind ( fd , ( struct sockaddr * ) & ss , len )"		4795478	0					
ANR	4795688	Callee	bind		4795478	0					
ANR	4795689	Identifier	bind		4795478	0					
ANR	4795690	ArgumentList	fd		4795478	1					
ANR	4795691	Argument	fd		4795478	0					
ANR	4795692	Identifier	fd		4795478	0					
ANR	4795693	Argument	( struct sockaddr * ) & ss		4795478	1					
ANR	4795694	CastExpression	( struct sockaddr * ) & ss		4795478	0					
ANR	4795695	CastTarget	struct sockaddr *		4795478	0					
ANR	4795696	UnaryOperationExpression	& ss		4795478	1					
ANR	4795697	UnaryOperator	&		4795478	0					
ANR	4795698	Identifier	ss		4795478	1					
ANR	4795699	Argument	len		4795478	2					
ANR	4795700	Identifier	len		4795478	0					
ANR	4795701	PrimaryExpression	0		4795478	1					
ANR	4795702	CompoundStatement		54:49:1888:1888	4795478	1					
ANR	4795703	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: bind failed, errno: %d\\n"" , errno )"	845:3:21225:21292	4795478	0	True				
ANR	4795704	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: bind failed, errno: %d\\n"" , errno )"		4795478	0					
ANR	4795705	Callee	dprintf		4795478	0					
ANR	4795706	Identifier	dprintf		4795478	0					
ANR	4795707	ArgumentList	D_ALWAYS		4795478	1					
ANR	4795708	Argument	D_ALWAYS		4795478	0					
ANR	4795709	Identifier	D_ALWAYS		4795478	0					
ANR	4795710	Argument	"""ERROR: bind failed, errno: %d\\n"""		4795478	1					
ANR	4795711	PrimaryExpression	"""ERROR: bind failed, errno: %d\\n"""		4795478	0					
ANR	4795712	Argument	errno		4795478	2					
ANR	4795713	Identifier	errno		4795478	0					
ANR	4795714	ReturnStatement	return FALSE ;	847:3:21297:21309	4795478	1	True				
ANR	4795715	Identifier	FALSE		4795478	0					
ANR	4795716	ReturnStatement	return TRUE ;	851:1:21349:21360	4795478	2	True				
ANR	4795717	Identifier	TRUE		4795478	0					
ANR	4795718	ReturnType	int		4795478	1					
ANR	4795719	Identifier	_condor_local_bind		4795478	2					
ANR	4795720	ParameterList	"int is_outgoing , int fd"		4795478	3					
ANR	4795721	Parameter	int is_outgoing	790:20:19305:19319	4795478	0	True				
ANR	4795722	ParameterType	int		4795478	0					
ANR	4795723	Identifier	is_outgoing		4795478	1					
ANR	4795724	Parameter	int fd	790:37:19322:19327	4795478	1	True				
ANR	4795725	ParameterType	int		4795478	0					
ANR	4795726	Identifier	fd		4795478	1					
ANR	4795727	CFGEntryNode	ENTRY		4795478		True				
ANR	4795728	CFGExitNode	EXIT		4795478		True				
ANR	4795729	Symbol	& highPort		4795478						
ANR	4795730	Symbol	highPort		4795478						
ANR	4795731	Symbol	lowPort		4795478						
ANR	4795732	Symbol	get_port_range		4795478						
ANR	4795733	Symbol	& ss		4795478						
ANR	4795734	Symbol	sa_in -> sin_addr . s_addr		4795478						
ANR	4795735	Symbol	sa_in -> sin_port		4795478						
ANR	4795736	Symbol	bind		4795478						
ANR	4795737	Symbol	len		4795478						
ANR	4795738	Symbol	ss . ss_family		4795478						
ANR	4795739	Symbol	bindWithin		4795478						
ANR	4795740	Symbol	ss		4795478						
ANR	4795741	Symbol	errno		4795478						
ANR	4795742	Symbol	* sa_in		4795478						
ANR	4795743	Symbol	getsockname		4795478						
ANR	4795744	Symbol	D_ALWAYS		4795478						
ANR	4795745	Symbol	TRUE		4795478						
ANR	4795746	Symbol	AF_INET		4795478						
ANR	4795747	Symbol	sa_in -> sin_addr		4795478						
ANR	4795748	Symbol	sin6		4795478						
ANR	4795749	Symbol	in6addr_any		4795478						
ANR	4795750	Symbol	AF_INET6		4795478						
ANR	4795751	Symbol	sin6 -> sin6_port		4795478						
ANR	4795752	Symbol	& lowPort		4795478						
ANR	4795753	Symbol	* sin6		4795478						
ANR	4795754	Symbol	r		4795478						
ANR	4795755	Symbol	sa_in		4795478						
ANR	4795756	Symbol	sin6 -> sin6_addr		4795478						
ANR	4795757	Symbol	FALSE		4795478						
ANR	4795758	Symbol	INADDR_ANY		4795478						
ANR	4795759	Symbol	is_outgoing		4795478						
ANR	4795760	Symbol	& len		4795478						
ANR	4795761	Symbol	sa_in -> sin_family		4795478						
ANR	4795762	Symbol	fd		4795478						
ANR	4795763	Function	bindWithin	855:0:21366:22889							
ANR	4795764	FunctionDef	"bindWithin (const int fd , const int low_port , const int high_port)"		4795763	0					
ANR	4795765	CompoundStatement		856:0:21436:22889	4795763	0					
ANR	4795766	IdentifierDeclStatement	"int start_trial , this_trial ;"	857:1:21439:21466	4795763	0	True				
ANR	4795767	IdentifierDecl	start_trial		4795763	0					
ANR	4795768	IdentifierDeclType	int		4795763	0					
ANR	4795769	Identifier	start_trial		4795763	1					
ANR	4795770	IdentifierDecl	this_trial		4795763	1					
ANR	4795771	IdentifierDeclType	int		4795763	0					
ANR	4795772	Identifier	this_trial		4795763	1					
ANR	4795773	IdentifierDeclStatement	"int pid , range ;"	858:1:21469:21483	4795763	1	True				
ANR	4795774	IdentifierDecl	pid		4795763	0					
ANR	4795775	IdentifierDeclType	int		4795763	0					
ANR	4795776	Identifier	pid		4795763	1					
ANR	4795777	IdentifierDecl	range		4795763	1					
ANR	4795778	IdentifierDeclType	int		4795763	0					
ANR	4795779	Identifier	range		4795763	1					
ANR	4795780	ExpressionStatement	pid = ( int ) getpid ( )	861:4:21547:21567	4795763	2	True				
ANR	4795781	AssignmentExpression	pid = ( int ) getpid ( )		4795763	0		=			
ANR	4795782	Identifier	pid		4795763	0					
ANR	4795783	CastExpression	( int ) getpid ( )		4795763	1					
ANR	4795784	CastTarget	int		4795763	0					
ANR	4795785	CallExpression	getpid ( )		4795763	1					
ANR	4795786	Callee	getpid		4795763	0					
ANR	4795787	Identifier	getpid		4795763	0					
ANR	4795788	ArgumentList			4795763	1					
ANR	4795789	ExpressionStatement	range = high_port - low_port + 1	862:4:21573:21605	4795763	3	True				
ANR	4795790	AssignmentExpression	range = high_port - low_port + 1		4795763	0		=			
ANR	4795791	Identifier	range		4795763	0					
ANR	4795792	AdditiveExpression	high_port - low_port + 1		4795763	1		-			
ANR	4795793	Identifier	high_port		4795763	0					
ANR	4795794	AdditiveExpression	low_port + 1		4795763	1		+			
ANR	4795795	Identifier	low_port		4795763	0					
ANR	4795796	PrimaryExpression	1		4795763	1					
ANR	4795797	ExpressionStatement	start_trial = low_port + ( pid * 173 % range )	864:4:21679:21744	4795763	4	True				
ANR	4795798	AssignmentExpression	start_trial = low_port + ( pid * 173 % range )		4795763	0		=			
ANR	4795799	Identifier	start_trial		4795763	0					
ANR	4795800	AdditiveExpression	low_port + ( pid * 173 % range )		4795763	1		+			
ANR	4795801	Identifier	low_port		4795763	0					
ANR	4795802	MultiplicativeExpression	pid * 173 % range		4795763	1		*			
ANR	4795803	Identifier	pid		4795763	0					
ANR	4795804	MultiplicativeExpression	173 % range		4795763	1		%			
ANR	4795805	PrimaryExpression	173		4795763	0					
ANR	4795806	Identifier	range		4795763	1					
ANR	4795807	ExpressionStatement	this_trial = start_trial	866:4:21751:21775	4795763	5	True				
ANR	4795808	AssignmentExpression	this_trial = start_trial		4795763	0		=			
ANR	4795809	Identifier	this_trial		4795763	0					
ANR	4795810	Identifier	start_trial		4795763	1					
ANR	4795811	DoStatement	do		4795763	6					
ANR	4795812	CompoundStatement		15:2:399:420	4795763	0					
ANR	4795813	IdentifierDeclStatement	struct sockaddr_in sa_in ;	868:2:21785:21809	4795763	0	True				
ANR	4795814	IdentifierDecl	sa_in		4795763	0					
ANR	4795815	IdentifierDeclType	struct sockaddr_in		4795763	0					
ANR	4795816	Identifier	sa_in		4795763	1					
ANR	4795817	IdentifierDeclStatement	priv_state old_priv ;	869:2:21813:21832	4795763	1	True				
ANR	4795818	IdentifierDecl	old_priv		4795763	0					
ANR	4795819	IdentifierDeclType	priv_state		4795763	0					
ANR	4795820	Identifier	old_priv		4795763	1					
ANR	4795821	IdentifierDeclStatement	int bind_return_value ;	870:2:21836:21857	4795763	2	True				
ANR	4795822	IdentifierDecl	bind_return_value		4795763	0					
ANR	4795823	IdentifierDeclType	int		4795763	0					
ANR	4795824	Identifier	bind_return_value		4795763	1					
ANR	4795825	ExpressionStatement	"memset ( & sa_in , 0 , sizeof ( sa_in ) )"	872:2:21862:21894	4795763	3	True				
ANR	4795826	CallExpression	"memset ( & sa_in , 0 , sizeof ( sa_in ) )"		4795763	0					
ANR	4795827	Callee	memset		4795763	0					
ANR	4795828	Identifier	memset		4795763	0					
ANR	4795829	ArgumentList	& sa_in		4795763	1					
ANR	4795830	Argument	& sa_in		4795763	0					
ANR	4795831	UnaryOperationExpression	& sa_in		4795763	0					
ANR	4795832	UnaryOperator	&		4795763	0					
ANR	4795833	Identifier	sa_in		4795763	1					
ANR	4795834	Argument	0		4795763	1					
ANR	4795835	PrimaryExpression	0		4795763	0					
ANR	4795836	Argument	sizeof ( sa_in )		4795763	2					
ANR	4795837	SizeofExpression	sizeof ( sa_in )		4795763	0					
ANR	4795838	Sizeof	sizeof		4795763	0					
ANR	4795839	SizeofOperand	sa_in		4795763	1					
ANR	4795840	ExpressionStatement	sa_in . sin_family = AF_INET	873:2:21898:21924	4795763	4	True				
ANR	4795841	AssignmentExpression	sa_in . sin_family = AF_INET		4795763	0		=			
ANR	4795842	MemberAccess	sa_in . sin_family		4795763	0					
ANR	4795843	Identifier	sa_in		4795763	0					
ANR	4795844	Identifier	sin_family		4795763	1					
ANR	4795845	Identifier	AF_INET		4795763	1					
ANR	4795846	ExpressionStatement	sa_in . sin_addr . s_addr = htonl ( INADDR_ANY )	874:2:21928:21969	4795763	5	True				
ANR	4795847	AssignmentExpression	sa_in . sin_addr . s_addr = htonl ( INADDR_ANY )		4795763	0		=			
ANR	4795848	MemberAccess	sa_in . sin_addr . s_addr		4795763	0					
ANR	4795849	MemberAccess	sa_in . sin_addr		4795763	0					
ANR	4795850	Identifier	sa_in		4795763	0					
ANR	4795851	Identifier	sin_addr		4795763	1					
ANR	4795852	Identifier	s_addr		4795763	1					
ANR	4795853	CallExpression	htonl ( INADDR_ANY )		4795763	1					
ANR	4795854	Callee	htonl		4795763	0					
ANR	4795855	Identifier	htonl		4795763	0					
ANR	4795856	ArgumentList	INADDR_ANY		4795763	1					
ANR	4795857	Argument	INADDR_ANY		4795763	0					
ANR	4795858	Identifier	INADDR_ANY		4795763	0					
ANR	4795859	ExpressionStatement	sa_in . sin_port = htons ( ( u_short ) this_trial ++ )	875:2:21973:22018	4795763	6	True				
ANR	4795860	AssignmentExpression	sa_in . sin_port = htons ( ( u_short ) this_trial ++ )		4795763	0		=			
ANR	4795861	MemberAccess	sa_in . sin_port		4795763	0					
ANR	4795862	Identifier	sa_in		4795763	0					
ANR	4795863	Identifier	sin_port		4795763	1					
ANR	4795864	CallExpression	htons ( ( u_short ) this_trial ++ )		4795763	1					
ANR	4795865	Callee	htons		4795763	0					
ANR	4795866	Identifier	htons		4795763	0					
ANR	4795867	ArgumentList	( u_short ) this_trial ++		4795763	1					
ANR	4795868	Argument	( u_short ) this_trial ++		4795763	0					
ANR	4795869	CastExpression	( u_short ) this_trial ++		4795763	0					
ANR	4795870	CastTarget	u_short		4795763	0					
ANR	4795871	PostIncDecOperationExpression	this_trial ++		4795763	1					
ANR	4795872	Identifier	this_trial		4795763	0					
ANR	4795873	IncDec	++		4795763	1					
ANR	4795874	IfStatement	if ( this_trial <= 1024 )		4795763	7					
ANR	4795875	Condition	this_trial <= 1024	879:6:22083:22100	4795763	0	True				
ANR	4795876	RelationalExpression	this_trial <= 1024		4795763	0		<=			
ANR	4795877	Identifier	this_trial		4795763	0					
ANR	4795878	PrimaryExpression	1024		4795763	1					
ANR	4795879	CompoundStatement		24:26:666:666	4795763	1					
ANR	4795880	ExpressionStatement	old_priv = PRIV_UNKNOWN	881:3:22175:22198	4795763	0	True				
ANR	4795881	AssignmentExpression	old_priv = PRIV_UNKNOWN		4795763	0		=			
ANR	4795882	Identifier	old_priv		4795763	0					
ANR	4795883	Identifier	PRIV_UNKNOWN		4795763	1					
ANR	4795884	ExpressionStatement	old_priv = set_root_priv ( )	882:3:22203:22229	4795763	1	True				
ANR	4795885	AssignmentExpression	old_priv = set_root_priv ( )		4795763	0		=			
ANR	4795886	Identifier	old_priv		4795763	0					
ANR	4795887	CallExpression	set_root_priv ( )		4795763	1					
ANR	4795888	Callee	set_root_priv		4795763	0					
ANR	4795889	Identifier	set_root_priv		4795763	0					
ANR	4795890	ArgumentList			4795763	1					
ANR	4795891	ExpressionStatement	"bind_return_value = bind ( fd , ( struct sockaddr * ) & sa_in , sizeof ( sa_in ) )"	885:2:22244:22314	4795763	8	True				
ANR	4795892	AssignmentExpression	"bind_return_value = bind ( fd , ( struct sockaddr * ) & sa_in , sizeof ( sa_in ) )"		4795763	0		=			
ANR	4795893	Identifier	bind_return_value		4795763	0					
ANR	4795894	CallExpression	"bind ( fd , ( struct sockaddr * ) & sa_in , sizeof ( sa_in ) )"		4795763	1					
ANR	4795895	Callee	bind		4795763	0					
ANR	4795896	Identifier	bind		4795763	0					
ANR	4795897	ArgumentList	fd		4795763	1					
ANR	4795898	Argument	fd		4795763	0					
ANR	4795899	Identifier	fd		4795763	0					
ANR	4795900	Argument	( struct sockaddr * ) & sa_in		4795763	1					
ANR	4795901	CastExpression	( struct sockaddr * ) & sa_in		4795763	0					
ANR	4795902	CastTarget	struct sockaddr *		4795763	0					
ANR	4795903	UnaryOperationExpression	& sa_in		4795763	1					
ANR	4795904	UnaryOperator	&		4795763	0					
ANR	4795905	Identifier	sa_in		4795763	1					
ANR	4795906	Argument	sizeof ( sa_in )		4795763	2					
ANR	4795907	SizeofExpression	sizeof ( sa_in )		4795763	0					
ANR	4795908	Sizeof	sizeof		4795763	0					
ANR	4795909	SizeofOperand	sa_in		4795763	1					
ANR	4795910	IfStatement	if ( this_trial <= 1024 )		4795763	9					
ANR	4795911	Condition	this_trial <= 1024	887:6:22336:22353	4795763	0	True				
ANR	4795912	RelationalExpression	this_trial <= 1024		4795763	0		<=			
ANR	4795913	Identifier	this_trial		4795763	0					
ANR	4795914	PrimaryExpression	1024		4795763	1					
ANR	4795915	CompoundStatement		32:26:919:919	4795763	1					
ANR	4795916	ExpressionStatement	set_priv ( old_priv )	888:3:22361:22380	4795763	0	True				
ANR	4795917	CallExpression	set_priv ( old_priv )		4795763	0					
ANR	4795918	Callee	set_priv		4795763	0					
ANR	4795919	Identifier	set_priv		4795763	0					
ANR	4795920	ArgumentList	old_priv		4795763	1					
ANR	4795921	Argument	old_priv		4795763	0					
ANR	4795922	Identifier	old_priv		4795763	0					
ANR	4795923	IfStatement	if ( bind_return_value == 0 )		4795763	10					
ANR	4795924	Condition	bind_return_value == 0	891:6:22399:22420	4795763	0	True				
ANR	4795925	EqualityExpression	bind_return_value == 0		4795763	0		==			
ANR	4795926	Identifier	bind_return_value		4795763	0					
ANR	4795927	PrimaryExpression	0		4795763	1					
ANR	4795928	CompoundStatement		36:30:986:986	4795763	1					
ANR	4795929	ExpressionStatement	"dprintf ( D_NETWORK , ""_condor_local_bind - bound to %d...\\n"" , this_trial - 1 )"	892:3:22439:22512	4795763	0	True				
ANR	4795930	CallExpression	"dprintf ( D_NETWORK , ""_condor_local_bind - bound to %d...\\n"" , this_trial - 1 )"		4795763	0					
ANR	4795931	Callee	dprintf		4795763	0					
ANR	4795932	Identifier	dprintf		4795763	0					
ANR	4795933	ArgumentList	D_NETWORK		4795763	1					
ANR	4795934	Argument	D_NETWORK		4795763	0					
ANR	4795935	Identifier	D_NETWORK		4795763	0					
ANR	4795936	Argument	"""_condor_local_bind - bound to %d...\\n"""		4795763	1					
ANR	4795937	PrimaryExpression	"""_condor_local_bind - bound to %d...\\n"""		4795763	0					
ANR	4795938	Argument	this_trial - 1		4795763	2					
ANR	4795939	AdditiveExpression	this_trial - 1		4795763	0		-			
ANR	4795940	Identifier	this_trial		4795763	0					
ANR	4795941	PrimaryExpression	1		4795763	1					
ANR	4795942	ReturnStatement	return TRUE ;	893:3:22517:22528	4795763	1	True				
ANR	4795943	Identifier	TRUE		4795763	0					
ANR	4795944	ElseStatement	else		4795763	0					
ANR	4795945	CompoundStatement		39:9:1102:1102	4795763	0					
ANR	4795946	ExpressionStatement	"dprintf ( D_NETWORK , ""_condor_local_bind - failed to bind: %s\\n"" , strerror ( errno ) )"	895:12:22553:22633	4795763	0	True				
ANR	4795947	CallExpression	"dprintf ( D_NETWORK , ""_condor_local_bind - failed to bind: %s\\n"" , strerror ( errno ) )"		4795763	0					
ANR	4795948	Callee	dprintf		4795763	0					
ANR	4795949	Identifier	dprintf		4795763	0					
ANR	4795950	ArgumentList	D_NETWORK		4795763	1					
ANR	4795951	Argument	D_NETWORK		4795763	0					
ANR	4795952	Identifier	D_NETWORK		4795763	0					
ANR	4795953	Argument	"""_condor_local_bind - failed to bind: %s\\n"""		4795763	1					
ANR	4795954	PrimaryExpression	"""_condor_local_bind - failed to bind: %s\\n"""		4795763	0					
ANR	4795955	Argument	strerror ( errno )		4795763	2					
ANR	4795956	CallExpression	strerror ( errno )		4795763	0					
ANR	4795957	Callee	strerror		4795763	0					
ANR	4795958	Identifier	strerror		4795763	0					
ANR	4795959	ArgumentList	errno		4795763	1					
ANR	4795960	Argument	errno		4795763	0					
ANR	4795961	Identifier	errno		4795763	0					
ANR	4795962	IfStatement	if ( this_trial > high_port )		4795763	11					
ANR	4795963	Condition	this_trial > high_port	897:7:22652:22673	4795763	0	True				
ANR	4795964	RelationalExpression	this_trial > high_port		4795763	0		>			
ANR	4795965	Identifier	this_trial		4795763	0					
ANR	4795966	Identifier	high_port		4795763	1					
ANR	4795967	ExpressionStatement	this_trial = low_port	898:3:22680:22701	4795763	1	True				
ANR	4795968	AssignmentExpression	this_trial = low_port		4795763	0		=			
ANR	4795969	Identifier	this_trial		4795763	0					
ANR	4795970	Identifier	low_port		4795763	1					
ANR	4795971	Condition	this_trial != start_trial	899:12:22715:22739	4795763	1	True				
ANR	4795972	EqualityExpression	this_trial != start_trial		4795763	0		!=			
ANR	4795973	Identifier	this_trial		4795763	0					
ANR	4795974	Identifier	start_trial		4795763	1					
ANR	4795975	ExpressionStatement	"dprintf ( D_ALWAYS , ""_condor_local_bind::bindWithin - failed to bind any port within (%d ~ %d)\\n"" , low_port , high_port )"	901:1:22745:22871	4795763	7	True				
ANR	4795976	CallExpression	"dprintf ( D_ALWAYS , ""_condor_local_bind::bindWithin - failed to bind any port within (%d ~ %d)\\n"" , low_port , high_port )"		4795763	0					
ANR	4795977	Callee	dprintf		4795763	0					
ANR	4795978	Identifier	dprintf		4795763	0					
ANR	4795979	ArgumentList	D_ALWAYS		4795763	1					
ANR	4795980	Argument	D_ALWAYS		4795763	0					
ANR	4795981	Identifier	D_ALWAYS		4795763	0					
ANR	4795982	Argument	"""_condor_local_bind::bindWithin - failed to bind any port within (%d ~ %d)\\n"""		4795763	1					
ANR	4795983	PrimaryExpression	"""_condor_local_bind::bindWithin - failed to bind any port within (%d ~ %d)\\n"""		4795763	0					
ANR	4795984	Argument	low_port		4795763	2					
ANR	4795985	Identifier	low_port		4795763	0					
ANR	4795986	Argument	high_port		4795763	3					
ANR	4795987	Identifier	high_port		4795763	0					
ANR	4795988	ReturnStatement	return FALSE ;	904:1:22875:22887	4795763	8	True				
ANR	4795989	Identifier	FALSE		4795763	0					
ANR	4795990	ReturnType	int		4795763	1					
ANR	4795991	Identifier	bindWithin		4795763	2					
ANR	4795992	ParameterList	"const int fd , const int low_port , const int high_port"		4795763	3					
ANR	4795993	Parameter	const int fd	855:15:21381:21392	4795763	0	True				
ANR	4795994	ParameterType	const int		4795763	0					
ANR	4795995	Identifier	fd		4795763	1					
ANR	4795996	Parameter	const int low_port	855:29:21395:21412	4795763	1	True				
ANR	4795997	ParameterType	const int		4795763	0					
ANR	4795998	Identifier	low_port		4795763	1					
ANR	4795999	Parameter	const int high_port	855:49:21415:21433	4795763	2	True				
ANR	4796000	ParameterType	const int		4795763	0					
ANR	4796001	Identifier	high_port		4795763	1					
ANR	4796002	CFGEntryNode	ENTRY		4795763		True				
ANR	4796003	CFGExitNode	EXIT		4795763		True				
ANR	4796004	Symbol	start_trial		4795763						
ANR	4796005	Symbol	sa_in . sin_addr		4795763						
ANR	4796006	Symbol	htons		4795763						
ANR	4796007	Symbol	range		4795763						
ANR	4796008	Symbol	sa_in . sin_family		4795763						
ANR	4796009	Symbol	pid		4795763						
ANR	4796010	Symbol	htonl		4795763						
ANR	4796011	Symbol	PRIV_UNKNOWN		4795763						
ANR	4796012	Symbol	high_port		4795763						
ANR	4796013	Symbol	old_priv		4795763						
ANR	4796014	Symbol	bind		4795763						
ANR	4796015	Symbol	low_port		4795763						
ANR	4796016	Symbol	bind_return_value		4795763						
ANR	4796017	Symbol	errno		4795763						
ANR	4796018	Symbol	this_trial		4795763						
ANR	4796019	Symbol	D_ALWAYS		4795763						
ANR	4796020	Symbol	TRUE		4795763						
ANR	4796021	Symbol	set_root_priv		4795763						
ANR	4796022	Symbol	AF_INET		4795763						
ANR	4796023	Symbol	sa_in . sin_addr . s_addr		4795763						
ANR	4796024	Symbol	strerror		4795763						
ANR	4796025	Symbol	sa_in		4795763						
ANR	4796026	Symbol	& sa_in		4795763						
ANR	4796027	Symbol	D_NETWORK		4795763						
ANR	4796028	Symbol	FALSE		4795763						
ANR	4796029	Symbol	INADDR_ANY		4795763						
ANR	4796030	Symbol	getpid		4795763						
ANR	4796031	Symbol	fd		4795763						
ANR	4796032	Symbol	sa_in . sin_port		4795763						
ANR	4796033	Function	is_priv_net	910:0:23011:23233							
ANR	4796034	FunctionDef	is_priv_net (uint32_t ip)		4796033	0					
ANR	4796035	CompoundStatement		912:0:23040:23233	4796033	0					
ANR	4796036	ReturnStatement	return ( ( ip & 0xFF000000 ) == 0x0A000000 || ( ip & 0xFFF00000 ) == 0xAC100000 || ( ip & 0xFFFF0000 ) == 0xC0A80000 ) ;	913:4:23046:23211	4796033	0	True				
ANR	4796037	OrExpression	( ip & 0xFF000000 ) == 0x0A000000 || ( ip & 0xFFF00000 ) == 0xAC100000 || ( ip & 0xFFFF0000 ) == 0xC0A80000		4796033	0		||			
ANR	4796038	EqualityExpression	( ip & 0xFF000000 ) == 0x0A000000		4796033	0		==			
ANR	4796039	BitAndExpression	ip & 0xFF000000		4796033	0		&			
ANR	4796040	Identifier	ip		4796033	0					
ANR	4796041	PrimaryExpression	0xFF000000		4796033	1					
ANR	4796042	PrimaryExpression	0x0A000000		4796033	1					
ANR	4796043	OrExpression	( ip & 0xFFF00000 ) == 0xAC100000 || ( ip & 0xFFFF0000 ) == 0xC0A80000		4796033	1		||			
ANR	4796044	EqualityExpression	( ip & 0xFFF00000 ) == 0xAC100000		4796033	0		==			
ANR	4796045	BitAndExpression	ip & 0xFFF00000		4796033	0		&			
ANR	4796046	Identifier	ip		4796033	0					
ANR	4796047	PrimaryExpression	0xFFF00000		4796033	1					
ANR	4796048	PrimaryExpression	0xAC100000		4796033	1					
ANR	4796049	EqualityExpression	( ip & 0xFFFF0000 ) == 0xC0A80000		4796033	1		==			
ANR	4796050	BitAndExpression	ip & 0xFFFF0000		4796033	0		&			
ANR	4796051	Identifier	ip		4796033	0					
ANR	4796052	PrimaryExpression	0xFFFF0000		4796033	1					
ANR	4796053	PrimaryExpression	0xC0A80000		4796033	1					
ANR	4796054	ReturnType	int		4796033	1					
ANR	4796055	Identifier	is_priv_net		4796033	2					
ANR	4796056	ParameterList	uint32_t ip		4796033	3					
ANR	4796057	Parameter	uint32_t ip	911:12:23027:23037	4796033	0	True				
ANR	4796058	ParameterType	uint32_t		4796033	0					
ANR	4796059	Identifier	ip		4796033	1					
ANR	4796060	CFGEntryNode	ENTRY		4796033		True				
ANR	4796061	CFGExitNode	EXIT		4796033		True				
ANR	4796062	Symbol	ip		4796033						
ANR	4796063	Function	is_loopback_net	918:0:23236:23326							
ANR	4796064	FunctionDef	is_loopback_net (uint32_t ip)		4796063	0					
ANR	4796065	CompoundStatement		920:0:23269:23326	4796063	0					
ANR	4796066	ReturnStatement	return ( ( ip & 0xFF000000 ) == 0x7F000000 ) ;	921:4:23275:23315	4796063	0	True				
ANR	4796067	EqualityExpression	( ip & 0xFF000000 ) == 0x7F000000		4796063	0		==			
ANR	4796068	BitAndExpression	ip & 0xFF000000		4796063	0		&			
ANR	4796069	Identifier	ip		4796063	0					
ANR	4796070	PrimaryExpression	0xFF000000		4796063	1					
ANR	4796071	PrimaryExpression	0x7F000000		4796063	1					
ANR	4796072	ReturnType	int		4796063	1					
ANR	4796073	Identifier	is_loopback_net		4796063	2					
ANR	4796074	ParameterList	uint32_t ip		4796063	3					
ANR	4796075	Parameter	uint32_t ip	919:16:23256:23266	4796063	0	True				
ANR	4796076	ParameterType	uint32_t		4796063	0					
ANR	4796077	Identifier	ip		4796063	1					
ANR	4796078	CFGEntryNode	ENTRY		4796063		True				
ANR	4796079	CFGExitNode	EXIT		4796063		True				
ANR	4796080	Symbol	ip		4796063						
ANR	4796081	Function	is_loopback_net_str	924:0:23329:23496							
ANR	4796082	FunctionDef	is_loopback_net_str (char const * ip)		4796081	0					
ANR	4796083	CompoundStatement		925:0:23369:23496	4796081	0					
ANR	4796084	ReturnStatement	return 0 ;	930:1:23486:23494	4796081	0	True				
ANR	4796085	PrimaryExpression	0		4796081	0					
ANR	4796086	ReturnType	int		4796081	1					
ANR	4796087	Identifier	is_loopback_net_str		4796081	2					
ANR	4796088	ParameterList	char const * ip		4796081	3					
ANR	4796089	Parameter	char const * ip	924:24:23353:23366	4796081	0	True				
ANR	4796090	ParameterType	char const *		4796081	0					
ANR	4796091	Identifier	ip		4796081	1					
ANR	4796092	CFGEntryNode	ENTRY		4796081		True				
ANR	4796093	CFGExitNode	EXIT		4796081		True				
ANR	4796094	Symbol	ip		4796081						
ANR	4796095	Function	in_same_net	934:0:23579:24088							
ANR	4796096	FunctionDef	"in_same_net (uint32_t ipA , uint32_t ipB)"		4796095	0					
ANR	4796097	CompoundStatement		936:0:23623:24088	4796095	0					
ANR	4796098	IdentifierDeclStatement	"unsigned char * byteA , * fA , * byteB ;"	937:4:23629:23662	4796095	0	True				
ANR	4796099	IdentifierDecl	* byteA		4796095	0					
ANR	4796100	IdentifierDeclType	unsigned char *		4796095	0					
ANR	4796101	Identifier	byteA		4796095	1					
ANR	4796102	IdentifierDecl	* fA		4796095	1					
ANR	4796103	IdentifierDeclType	unsigned char *		4796095	0					
ANR	4796104	Identifier	fA		4796095	1					
ANR	4796105	IdentifierDecl	* byteB		4796095	2					
ANR	4796106	IdentifierDeclType	unsigned char *		4796095	0					
ANR	4796107	Identifier	byteB		4796095	1					
ANR	4796108	IdentifierDeclStatement	"int i , index_to ;"	938:4:23668:23683	4796095	1	True				
ANR	4796109	IdentifierDecl	i		4796095	0					
ANR	4796110	IdentifierDeclType	int		4796095	0					
ANR	4796111	Identifier	i		4796095	1					
ANR	4796112	IdentifierDecl	index_to		4796095	1					
ANR	4796113	IdentifierDeclType	int		4796095	0					
ANR	4796114	Identifier	index_to		4796095	1					
ANR	4796115	ExpressionStatement	fA = byteA = ( unsigned char * ) & ipA	940:4:23690:23724	4796095	2	True				
ANR	4796116	AssignmentExpression	fA = byteA = ( unsigned char * ) & ipA		4796095	0		=			
ANR	4796117	Identifier	fA		4796095	0					
ANR	4796118	AssignmentExpression	byteA = ( unsigned char * ) & ipA		4796095	1		=			
ANR	4796119	Identifier	byteA		4796095	0					
ANR	4796120	CastExpression	( unsigned char * ) & ipA		4796095	1					
ANR	4796121	CastTarget	unsigned char *		4796095	0					
ANR	4796122	UnaryOperationExpression	& ipA		4796095	1					
ANR	4796123	UnaryOperator	&		4796095	0					
ANR	4796124	Identifier	ipA		4796095	1					
ANR	4796125	ExpressionStatement	byteB = ( unsigned char * ) & ipB	941:4:23730:23759	4796095	3	True				
ANR	4796126	AssignmentExpression	byteB = ( unsigned char * ) & ipB		4796095	0		=			
ANR	4796127	Identifier	byteB		4796095	0					
ANR	4796128	CastExpression	( unsigned char * ) & ipB		4796095	1					
ANR	4796129	CastTarget	unsigned char *		4796095	0					
ANR	4796130	UnaryOperationExpression	& ipB		4796095	1					
ANR	4796131	UnaryOperator	&		4796095	0					
ANR	4796132	Identifier	ipB		4796095	1					
ANR	4796133	IfStatement	if ( * fA < 128 )		4796095	4					
ANR	4796134	Condition	* fA < 128	943:8:23770:23778	4796095	0	True				
ANR	4796135	RelationalExpression	* fA < 128		4796095	0		<			
ANR	4796136	UnaryOperationExpression	* fA		4796095	0					
ANR	4796137	UnaryOperator	*		4796095	0					
ANR	4796138	Identifier	fA		4796095	1					
ANR	4796139	PrimaryExpression	128		4796095	1					
ANR	4796140	CompoundStatement		8:19:157:157	4796095	1					
ANR	4796141	ExpressionStatement	index_to = 1	944:8:23802:23814	4796095	0	True				
ANR	4796142	AssignmentExpression	index_to = 1		4796095	0		=			
ANR	4796143	Identifier	index_to		4796095	0					
ANR	4796144	PrimaryExpression	1		4796095	1					
ANR	4796145	ElseStatement	else		4796095	0					
ANR	4796146	IfStatement	if ( * fA < 192 )		4796095	0					
ANR	4796147	Condition	* fA < 192	945:14:23830:23838	4796095	0	True				
ANR	4796148	RelationalExpression	* fA < 192		4796095	0		<			
ANR	4796149	UnaryOperationExpression	* fA		4796095	0					
ANR	4796150	UnaryOperator	*		4796095	0					
ANR	4796151	Identifier	fA		4796095	1					
ANR	4796152	PrimaryExpression	192		4796095	1					
ANR	4796153	CompoundStatement		10:25:217:217	4796095	1					
ANR	4796154	ExpressionStatement	index_to = 2	946:8:23862:23874	4796095	0	True				
ANR	4796155	AssignmentExpression	index_to = 2		4796095	0		=			
ANR	4796156	Identifier	index_to		4796095	0					
ANR	4796157	PrimaryExpression	2		4796095	1					
ANR	4796158	ElseStatement	else		4796095	0					
ANR	4796159	CompoundStatement		12:11:263:263	4796095	0					
ANR	4796160	ExpressionStatement	index_to = 3	948:8:23911:23923	4796095	0	True				
ANR	4796161	AssignmentExpression	index_to = 3		4796095	0		=			
ANR	4796162	Identifier	index_to		4796095	0					
ANR	4796163	PrimaryExpression	3		4796095	1					
ANR	4796164	ForStatement	for ( i = 0 ; i < index_to ; i ++ )		4796095	5					
ANR	4796165	ForInit	i = 0 ;	951:9:23941:23946	4796095	0	True				
ANR	4796166	AssignmentExpression	i = 0		4796095	0		=			
ANR	4796167	Identifier	i		4796095	0					
ANR	4796168	PrimaryExpression	0		4796095	1					
ANR	4796169	Condition	i < index_to	951:16:23948:23959	4796095	1	True				
ANR	4796170	RelationalExpression	i < index_to		4796095	0		<			
ANR	4796171	Identifier	i		4796095	0					
ANR	4796172	Identifier	index_to		4796095	1					
ANR	4796173	PostIncDecOperationExpression	i ++	951:30:23962:23964	4796095	2	True				
ANR	4796174	Identifier	i		4796095	0					
ANR	4796175	IncDec	++		4796095	1					
ANR	4796176	CompoundStatement		16:35:343:343	4796095	3					
ANR	4796177	IfStatement	if ( * byteA != * byteB )		4796095	0					
ANR	4796178	Condition	* byteA != * byteB	952:12:23981:23996	4796095	0	True				
ANR	4796179	EqualityExpression	* byteA != * byteB		4796095	0		!=			
ANR	4796180	UnaryOperationExpression	* byteA		4796095	0					
ANR	4796181	UnaryOperator	*		4796095	0					
ANR	4796182	Identifier	byteA		4796095	1					
ANR	4796183	UnaryOperationExpression	* byteB		4796095	1					
ANR	4796184	UnaryOperator	*		4796095	0					
ANR	4796185	Identifier	byteB		4796095	1					
ANR	4796186	CompoundStatement		17:30:375:375	4796095	1					
ANR	4796187	ReturnStatement	return 0 ;	953:12:24013:24021	4796095	0	True				
ANR	4796188	PrimaryExpression	0		4796095	0					
ANR	4796189	ExpressionStatement	byteA ++	955:8:24041:24048	4796095	1	True				
ANR	4796190	PostIncDecOperationExpression	byteA ++		4796095	0					
ANR	4796191	Identifier	byteA		4796095	0					
ANR	4796192	IncDec	++		4796095	1					
ANR	4796193	ExpressionStatement	byteB ++	956:8:24058:24065	4796095	2	True				
ANR	4796194	PostIncDecOperationExpression	byteB ++		4796095	0					
ANR	4796195	Identifier	byteB		4796095	0					
ANR	4796196	IncDec	++		4796095	1					
ANR	4796197	ReturnStatement	return 1 ;	959:4:24078:24086	4796095	6	True				
ANR	4796198	PrimaryExpression	1		4796095	0					
ANR	4796199	ReturnType	int		4796095	1					
ANR	4796200	Identifier	in_same_net		4796095	2					
ANR	4796201	ParameterList	"uint32_t ipA , uint32_t ipB"		4796095	3					
ANR	4796202	Parameter	uint32_t ipA	935:12:23595:23606	4796095	0	True				
ANR	4796203	ParameterType	uint32_t		4796095	0					
ANR	4796204	Identifier	ipA		4796095	1					
ANR	4796205	Parameter	uint32_t ipB	935:26:23609:23620	4796095	1	True				
ANR	4796206	ParameterType	uint32_t		4796095	0					
ANR	4796207	Identifier	ipB		4796095	1					
ANR	4796208	CFGEntryNode	ENTRY		4796095		True				
ANR	4796209	CFGExitNode	EXIT		4796095		True				
ANR	4796210	Symbol	* fA		4796095						
ANR	4796211	Symbol	byteA		4796095						
ANR	4796212	Symbol	& ipB		4796095						
ANR	4796213	Symbol	byteB		4796095						
ANR	4796214	Symbol	& ipA		4796095						
ANR	4796215	Symbol	i		4796095						
ANR	4796216	Symbol	ipB		4796095						
ANR	4796217	Symbol	* byteB		4796095						
ANR	4796218	Symbol	ipA		4796095						
ANR	4796219	Symbol	fA		4796095						
ANR	4796220	Symbol	index_to		4796095						
ANR	4796221	Symbol	* byteA		4796095						
ANR	4796222	Function	ipport_to_string	964:0:24145:24536							
ANR	4796223	FunctionDef	"ipport_to_string (const unsigned int ip , const unsigned short port)"		4796222	0					
ANR	4796224	CompoundStatement		965:0:24219:24536	4796222	0					
ANR	4796225	Statement	static	966:4:24225:24230	4796222	0	True				
ANR	4796226	IdentifierDeclStatement	char buf [ 24 ] ;	966:12:24233:24248	4796222	1	True				
ANR	4796227	IdentifierDecl	buf [ 24 ]		4796222	0					
ANR	4796228	IdentifierDeclType	char [ 24 ]		4796222	0					
ANR	4796229	Identifier	buf		4796222	1					
ANR	4796230	PrimaryExpression	24		4796222	2					
ANR	4796231	IdentifierDeclStatement	struct in_addr inaddr ;	967:4:24254:24275	4796222	2	True				
ANR	4796232	IdentifierDecl	inaddr		4796222	0					
ANR	4796233	IdentifierDeclType	struct in_addr		4796222	0					
ANR	4796234	Identifier	inaddr		4796222	1					
ANR	4796235	ExpressionStatement	buf [ 0 ] = '<'	969:4:24282:24294	4796222	3	True				
ANR	4796236	AssignmentExpression	buf [ 0 ] = '<'		4796222	0		=			
ANR	4796237	ArrayIndexing	buf [ 0 ]		4796222	0					
ANR	4796238	Identifier	buf		4796222	0					
ANR	4796239	PrimaryExpression	0		4796222	1					
ANR	4796240	PrimaryExpression	'<'		4796222	1					
ANR	4796241	ExpressionStatement	buf [ 1 ] = '\\0'	970:4:24300:24313	4796222	4	True				
ANR	4796242	AssignmentExpression	buf [ 1 ] = '\\0'		4796222	0		=			
ANR	4796243	ArrayIndexing	buf [ 1 ]		4796222	0					
ANR	4796244	Identifier	buf		4796222	0					
ANR	4796245	PrimaryExpression	1		4796222	1					
ANR	4796246	PrimaryExpression	'\\0'		4796222	1					
ANR	4796247	IfStatement	if ( ip == INADDR_ANY )		4796222	5					
ANR	4796248	Condition	ip == INADDR_ANY	971:8:24323:24338	4796222	0	True				
ANR	4796249	EqualityExpression	ip == INADDR_ANY		4796222	0		==			
ANR	4796250	Identifier	ip		4796222	0					
ANR	4796251	Identifier	INADDR_ANY		4796222	1					
ANR	4796252	CompoundStatement		7:26:121:121	4796222	1					
ANR	4796253	ExpressionStatement	"strcat ( buf , my_ip_string ( ) )"	972:8:24351:24378	4796222	0	True				
ANR	4796254	CallExpression	"strcat ( buf , my_ip_string ( ) )"		4796222	0					
ANR	4796255	Callee	strcat		4796222	0					
ANR	4796256	Identifier	strcat		4796222	0					
ANR	4796257	ArgumentList	buf		4796222	1					
ANR	4796258	Argument	buf		4796222	0					
ANR	4796259	Identifier	buf		4796222	0					
ANR	4796260	Argument	my_ip_string ( )		4796222	1					
ANR	4796261	CallExpression	my_ip_string ( )		4796222	0					
ANR	4796262	Callee	my_ip_string		4796222	0					
ANR	4796263	Identifier	my_ip_string		4796222	0					
ANR	4796264	ArgumentList			4796222	1					
ANR	4796265	ElseStatement	else		4796222	0					
ANR	4796266	CompoundStatement		9:11:171:171	4796222	0					
ANR	4796267	ExpressionStatement	inaddr . s_addr = ip	974:8:24401:24419	4796222	0	True				
ANR	4796268	AssignmentExpression	inaddr . s_addr = ip		4796222	0		=			
ANR	4796269	MemberAccess	inaddr . s_addr		4796222	0					
ANR	4796270	Identifier	inaddr		4796222	0					
ANR	4796271	Identifier	s_addr		4796222	1					
ANR	4796272	Identifier	ip		4796222	1					
ANR	4796273	ExpressionStatement	"strcat ( buf , inet_ntoa ( inaddr ) )"	975:8:24429:24459	4796222	1	True				
ANR	4796274	CallExpression	"strcat ( buf , inet_ntoa ( inaddr ) )"		4796222	0					
ANR	4796275	Callee	strcat		4796222	0					
ANR	4796276	Identifier	strcat		4796222	0					
ANR	4796277	ArgumentList	buf		4796222	1					
ANR	4796278	Argument	buf		4796222	0					
ANR	4796279	Identifier	buf		4796222	0					
ANR	4796280	Argument	inet_ntoa ( inaddr )		4796222	1					
ANR	4796281	CallExpression	inet_ntoa ( inaddr )		4796222	0					
ANR	4796282	Callee	inet_ntoa		4796222	0					
ANR	4796283	Identifier	inet_ntoa		4796222	0					
ANR	4796284	ArgumentList	inaddr		4796222	1					
ANR	4796285	Argument	inaddr		4796222	0					
ANR	4796286	Identifier	inaddr		4796222	0					
ANR	4796287	ExpressionStatement	"sprintf ( & buf [ strlen ( buf ) ] , "":%d>"" , ntohs ( port ) )"	977:4:24471:24518	4796222	6	True				
ANR	4796288	CallExpression	"sprintf ( & buf [ strlen ( buf ) ] , "":%d>"" , ntohs ( port ) )"		4796222	0					
ANR	4796289	Callee	sprintf		4796222	0					
ANR	4796290	Identifier	sprintf		4796222	0					
ANR	4796291	ArgumentList	& buf [ strlen ( buf ) ]		4796222	1					
ANR	4796292	Argument	& buf [ strlen ( buf ) ]		4796222	0					
ANR	4796293	UnaryOperationExpression	& buf [ strlen ( buf ) ]		4796222	0					
ANR	4796294	UnaryOperator	&		4796222	0					
ANR	4796295	ArrayIndexing	buf [ strlen ( buf ) ]		4796222	1					
ANR	4796296	Identifier	buf		4796222	0					
ANR	4796297	CallExpression	strlen ( buf )		4796222	1					
ANR	4796298	Callee	strlen		4796222	0					
ANR	4796299	Identifier	strlen		4796222	0					
ANR	4796300	ArgumentList	buf		4796222	1					
ANR	4796301	Argument	buf		4796222	0					
ANR	4796302	Identifier	buf		4796222	0					
ANR	4796303	Argument	""":%d>"""		4796222	1					
ANR	4796304	PrimaryExpression	""":%d>"""		4796222	0					
ANR	4796305	Argument	ntohs ( port )		4796222	2					
ANR	4796306	CallExpression	ntohs ( port )		4796222	0					
ANR	4796307	Callee	ntohs		4796222	0					
ANR	4796308	Identifier	ntohs		4796222	0					
ANR	4796309	ArgumentList	port		4796222	1					
ANR	4796310	Argument	port		4796222	0					
ANR	4796311	Identifier	port		4796222	0					
ANR	4796312	ReturnStatement	return buf ;	978:4:24524:24534	4796222	7	True				
ANR	4796313	Identifier	buf		4796222	0					
ANR	4796314	ReturnType	char *		4796222	1					
ANR	4796315	Identifier	ipport_to_string		4796222	2					
ANR	4796316	ParameterList	"const unsigned int ip , const unsigned short port"		4796222	3					
ANR	4796317	Parameter	const unsigned int ip	964:24:24169:24189	4796222	0	True				
ANR	4796318	ParameterType	const unsigned int		4796222	0					
ANR	4796319	Identifier	ip		4796222	1					
ANR	4796320	Parameter	const unsigned short port	964:47:24192:24216	4796222	1	True				
ANR	4796321	ParameterType	const unsigned short		4796222	0					
ANR	4796322	Identifier	port		4796222	1					
ANR	4796323	CFGEntryNode	ENTRY		4796222		True				
ANR	4796324	CFGExitNode	EXIT		4796222		True				
ANR	4796325	Symbol	ntohs		4796222						
ANR	4796326	Symbol	my_ip_string		4796222						
ANR	4796327	Symbol	strlen		4796222						
ANR	4796328	Symbol	buf		4796222						
ANR	4796329	Symbol	* buf		4796222						
ANR	4796330	Symbol	port		4796222						
ANR	4796331	Symbol	ip		4796222						
ANR	4796332	Symbol	inaddr . s_addr		4796222						
ANR	4796333	Symbol	INADDR_ANY		4796222						
ANR	4796334	Symbol	inet_ntoa		4796222						
ANR	4796335	Symbol	inaddr		4796222						
ANR	4796336	Function	prt_fds	981:0:24539:24938							
ANR	4796337	FunctionDef	"prt_fds (int maxfd , fd_set * fds)"		4796336	0					
ANR	4796338	CompoundStatement		983:0:24578:24938	4796336	0					
ANR	4796339	Statement	static	984:4:24584:24589	4796336	0	True				
ANR	4796340	IdentifierDeclStatement	char buf [ 50 ] ;	984:11:24591:24603	4796336	1	True				
ANR	4796341	IdentifierDecl	buf [ 50 ]		4796336	0					
ANR	4796342	IdentifierDeclType	char [ 50 ]		4796336	0					
ANR	4796343	Identifier	buf		4796336	1					
ANR	4796344	PrimaryExpression	50		4796336	2					
ANR	4796345	IdentifierDeclStatement	"int i , size ;"	985:4:24609:24620	4796336	2	True				
ANR	4796346	IdentifierDecl	i		4796336	0					
ANR	4796347	IdentifierDeclType	int		4796336	0					
ANR	4796348	Identifier	i		4796336	1					
ANR	4796349	IdentifierDecl	size		4796336	1					
ANR	4796350	IdentifierDeclType	int		4796336	0					
ANR	4796351	Identifier	size		4796336	1					
ANR	4796352	ExpressionStatement	"sprintf ( buf , ""<"" )"	987:4:24627:24644	4796336	3	True				
ANR	4796353	CallExpression	"sprintf ( buf , ""<"" )"		4796336	0					
ANR	4796354	Callee	sprintf		4796336	0					
ANR	4796355	Identifier	sprintf		4796336	0					
ANR	4796356	ArgumentList	buf		4796336	1					
ANR	4796357	Argument	buf		4796336	0					
ANR	4796358	Identifier	buf		4796336	0					
ANR	4796359	Argument	"""<"""		4796336	1					
ANR	4796360	PrimaryExpression	"""<"""		4796336	0					
ANR	4796361	ForStatement	for ( i = 0 ; i < maxfd ; i ++ )		4796336	4					
ANR	4796362	ForInit	i = 0 ;	988:8:24654:24657	4796336	0	True				
ANR	4796363	AssignmentExpression	i = 0		4796336	0		=			
ANR	4796364	Identifier	i		4796336	0					
ANR	4796365	PrimaryExpression	0		4796336	1					
ANR	4796366	Condition	i < maxfd	988:13:24659:24665	4796336	1	True				
ANR	4796367	RelationalExpression	i < maxfd		4796336	0		<			
ANR	4796368	Identifier	i		4796336	0					
ANR	4796369	Identifier	maxfd		4796336	1					
ANR	4796370	PostIncDecOperationExpression	i ++	988:22:24668:24670	4796336	2	True				
ANR	4796371	Identifier	i		4796336	0					
ANR	4796372	IncDec	++		4796336	1					
ANR	4796373	CompoundStatement		6:27:94:94	4796336	3					
ANR	4796374	IfStatement	"if ( fds && FD_ISSET ( i , fds ) )"		4796336	0					
ANR	4796375	Condition	"fds && FD_ISSET ( i , fds )"	989:12:24687:24709	4796336	0	True				
ANR	4796376	AndExpression	"fds && FD_ISSET ( i , fds )"		4796336	0		&&			
ANR	4796377	Identifier	fds		4796336	0					
ANR	4796378	CallExpression	"FD_ISSET ( i , fds )"		4796336	1					
ANR	4796379	Callee	FD_ISSET		4796336	0					
ANR	4796380	Identifier	FD_ISSET		4796336	0					
ANR	4796381	ArgumentList	i		4796336	1					
ANR	4796382	Argument	i		4796336	0					
ANR	4796383	Identifier	i		4796336	0					
ANR	4796384	Argument	fds		4796336	1					
ANR	4796385	Identifier	fds		4796336	0					
ANR	4796386	CompoundStatement		7:37:133:133	4796336	1					
ANR	4796387	IfStatement	if ( ( size = strlen ( buf ) ) > 40 )		4796336	0					
ANR	4796388	Condition	( size = strlen ( buf ) ) > 40	990:16:24730:24754	4796336	0	True				
ANR	4796389	RelationalExpression	( size = strlen ( buf ) ) > 40		4796336	0		>			
ANR	4796390	AssignmentExpression	size = strlen ( buf )		4796336	0		=			
ANR	4796391	Identifier	size		4796336	0					
ANR	4796392	CallExpression	strlen ( buf )		4796336	1					
ANR	4796393	Callee	strlen		4796336	0					
ANR	4796394	Identifier	strlen		4796336	0					
ANR	4796395	ArgumentList	buf		4796336	1					
ANR	4796396	Argument	buf		4796336	0					
ANR	4796397	Identifier	buf		4796336	0					
ANR	4796398	PrimaryExpression	40		4796336	1					
ANR	4796399	CompoundStatement		8:43:178:178	4796336	1					
ANR	4796400	ExpressionStatement	"strcat ( buf , ""...>"" )"	991:16:24775:24794	4796336	0	True				
ANR	4796401	CallExpression	"strcat ( buf , ""...>"" )"		4796336	0					
ANR	4796402	Callee	strcat		4796336	0					
ANR	4796403	Identifier	strcat		4796336	0					
ANR	4796404	ArgumentList	buf		4796336	1					
ANR	4796405	Argument	buf		4796336	0					
ANR	4796406	Identifier	buf		4796336	0					
ANR	4796407	Argument	"""...>"""		4796336	1					
ANR	4796408	PrimaryExpression	"""...>"""		4796336	0					
ANR	4796409	ReturnStatement	return buf ;	992:16:24812:24822	4796336	1	True				
ANR	4796410	Identifier	buf		4796336	0					
ANR	4796411	ExpressionStatement	"sprintf ( & buf [ strlen ( buf ) ] , ""%d "" , i )"	994:8:24846:24882	4796336	1	True				
ANR	4796412	CallExpression	"sprintf ( & buf [ strlen ( buf ) ] , ""%d "" , i )"		4796336	0					
ANR	4796413	Callee	sprintf		4796336	0					
ANR	4796414	Identifier	sprintf		4796336	0					
ANR	4796415	ArgumentList	& buf [ strlen ( buf ) ]		4796336	1					
ANR	4796416	Argument	& buf [ strlen ( buf ) ]		4796336	0					
ANR	4796417	UnaryOperationExpression	& buf [ strlen ( buf ) ]		4796336	0					
ANR	4796418	UnaryOperator	&		4796336	0					
ANR	4796419	ArrayIndexing	buf [ strlen ( buf ) ]		4796336	1					
ANR	4796420	Identifier	buf		4796336	0					
ANR	4796421	CallExpression	strlen ( buf )		4796336	1					
ANR	4796422	Callee	strlen		4796336	0					
ANR	4796423	Identifier	strlen		4796336	0					
ANR	4796424	ArgumentList	buf		4796336	1					
ANR	4796425	Argument	buf		4796336	0					
ANR	4796426	Identifier	buf		4796336	0					
ANR	4796427	Argument	"""%d """		4796336	1					
ANR	4796428	PrimaryExpression	"""%d """		4796336	0					
ANR	4796429	Argument	i		4796336	2					
ANR	4796430	Identifier	i		4796336	0					
ANR	4796431	ExpressionStatement	"strcat ( buf , "">"" )"	997:4:24904:24920	4796336	5	True				
ANR	4796432	CallExpression	"strcat ( buf , "">"" )"		4796336	0					
ANR	4796433	Callee	strcat		4796336	0					
ANR	4796434	Identifier	strcat		4796336	0					
ANR	4796435	ArgumentList	buf		4796336	1					
ANR	4796436	Argument	buf		4796336	0					
ANR	4796437	Identifier	buf		4796336	0					
ANR	4796438	Argument	""">"""		4796336	1					
ANR	4796439	PrimaryExpression	""">"""		4796336	0					
ANR	4796440	ReturnStatement	return buf ;	998:4:24926:24936	4796336	6	True				
ANR	4796441	Identifier	buf		4796336	0					
ANR	4796442	ReturnType	char *		4796336	1					
ANR	4796443	Identifier	prt_fds		4796336	2					
ANR	4796444	ParameterList	"int maxfd , fd_set * fds"		4796336	3					
ANR	4796445	Parameter	int maxfd	982:8:24554:24562	4796336	0	True				
ANR	4796446	ParameterType	int		4796336	0					
ANR	4796447	Identifier	maxfd		4796336	1					
ANR	4796448	Parameter	fd_set * fds	982:19:24565:24575	4796336	1	True				
ANR	4796449	ParameterType	fd_set *		4796336	0					
ANR	4796450	Identifier	fds		4796336	1					
ANR	4796451	CFGEntryNode	ENTRY		4796336		True				
ANR	4796452	CFGExitNode	EXIT		4796336		True				
ANR	4796453	Symbol	strlen		4796336						
ANR	4796454	Symbol	buf		4796336						
ANR	4796455	Symbol	fds		4796336						
ANR	4796456	Symbol	size		4796336						
ANR	4796457	Symbol	FD_ISSET		4796336						
ANR	4796458	Symbol	i		4796336						
ANR	4796459	Symbol	maxfd		4796336						
ANR	4796460	Function	getPortFromAddr	1002:0:24978:25865							
ANR	4796461	FunctionDef	getPortFromAddr (const char * addr)		4796460	0					
ANR	4796462	CompoundStatement		1004:0:25018:25865	4796460	0					
ANR	4796463	IdentifierDeclStatement	const char * tmp ;	1005:1:25021:25036	4796460	0	True				
ANR	4796464	IdentifierDecl	* tmp		4796460	0					
ANR	4796465	IdentifierDeclType	const char *		4796460	0					
ANR	4796466	Identifier	tmp		4796460	1					
ANR	4796467	IdentifierDeclStatement	char * end ;	1006:1:25039:25048	4796460	1	True				
ANR	4796468	IdentifierDecl	* end		4796460	0					
ANR	4796469	IdentifierDeclType	char *		4796460	0					
ANR	4796470	Identifier	end		4796460	1					
ANR	4796471	IdentifierDeclStatement	long port = - 1 ;	1007:1:25051:25065	4796460	2	True				
ANR	4796472	IdentifierDecl	port = - 1		4796460	0					
ANR	4796473	IdentifierDeclType	long		4796460	0					
ANR	4796474	Identifier	port		4796460	1					
ANR	4796475	AssignmentExpression	port = - 1		4796460	2		=			
ANR	4796476	Identifier	port		4796460	0					
ANR	4796477	UnaryOperationExpression	- 1		4796460	1					
ANR	4796478	UnaryOperator	-		4796460	0					
ANR	4796479	PrimaryExpression	1		4796460	1					
ANR	4796480	IfStatement	if ( ! addr )		4796460	3					
ANR	4796481	Condition	! addr	1009:5:25073:25078	4796460	0	True				
ANR	4796482	UnaryOperationExpression	! addr		4796460	0					
ANR	4796483	UnaryOperator	!		4796460	0					
ANR	4796484	Identifier	addr		4796460	1					
ANR	4796485	CompoundStatement		6:14:63:63	4796460	1					
ANR	4796486	ReturnStatement	return - 1 ;	1010:2:25086:25095	4796460	0	True				
ANR	4796487	UnaryOperationExpression	- 1		4796460	0					
ANR	4796488	UnaryOperator	-		4796460	0					
ANR	4796489	PrimaryExpression	1		4796460	1					
ANR	4796490	IfStatement	if ( * addr == '<' )		4796460	4					
ANR	4796491	Condition	* addr == '<'	1014:5:25133:25144	4796460	0	True				
ANR	4796492	EqualityExpression	* addr == '<'		4796460	0		==			
ANR	4796493	UnaryOperationExpression	* addr		4796460	0					
ANR	4796494	UnaryOperator	*		4796460	0					
ANR	4796495	Identifier	addr		4796460	1					
ANR	4796496	PrimaryExpression	'<'		4796460	1					
ANR	4796497	ExpressionStatement	addr ++	1015:2:25149:25155	4796460	1	True				
ANR	4796498	PostIncDecOperationExpression	addr ++		4796460	0					
ANR	4796499	Identifier	addr		4796460	0					
ANR	4796500	IncDec	++		4796460	1					
ANR	4796501	IfStatement	if ( * addr == '[' )		4796460	5					
ANR	4796502	Condition	* addr == '['	1016:5:25162:25173	4796460	0	True				
ANR	4796503	EqualityExpression	* addr == '['		4796460	0		==			
ANR	4796504	UnaryOperationExpression	* addr		4796460	0					
ANR	4796505	UnaryOperator	*		4796460	0					
ANR	4796506	Identifier	addr		4796460	1					
ANR	4796507	PrimaryExpression	'['		4796460	1					
ANR	4796508	CompoundStatement		13:19:157:157	4796460	1					
ANR	4796509	ExpressionStatement	"addr = strchr ( addr , ']' )"	1017:2:25180:25204	4796460	0	True				
ANR	4796510	AssignmentExpression	"addr = strchr ( addr , ']' )"		4796460	0		=			
ANR	4796511	Identifier	addr		4796460	0					
ANR	4796512	CallExpression	"strchr ( addr , ']' )"		4796460	1					
ANR	4796513	Callee	strchr		4796460	0					
ANR	4796514	Identifier	strchr		4796460	0					
ANR	4796515	ArgumentList	addr		4796460	1					
ANR	4796516	Argument	addr		4796460	0					
ANR	4796517	Identifier	addr		4796460	0					
ANR	4796518	Argument	']'		4796460	1					
ANR	4796519	PrimaryExpression	']'		4796460	0					
ANR	4796520	IfStatement	if ( ! addr )		4796460	1					
ANR	4796521	Condition	! addr	1018:6:25212:25216	4796460	0	True				
ANR	4796522	UnaryOperationExpression	! addr		4796460	0					
ANR	4796523	UnaryOperator	!		4796460	0					
ANR	4796524	Identifier	addr		4796460	1					
ANR	4796525	ReturnStatement	return - 1 ;	1019:3:25222:25231	4796460	1	True				
ANR	4796526	UnaryOperationExpression	- 1		4796460	0					
ANR	4796527	UnaryOperator	-		4796460	0					
ANR	4796528	PrimaryExpression	1		4796460	1					
ANR	4796529	ExpressionStatement	addr ++	1020:2:25235:25241	4796460	2	True				
ANR	4796530	PostIncDecOperationExpression	addr ++		4796460	0					
ANR	4796531	Identifier	addr		4796460	0					
ANR	4796532	IncDec	++		4796460	1					
ANR	4796533	ExpressionStatement	"tmp = strchr ( addr , ':' )"	1023:1:25248:25273	4796460	6	True				
ANR	4796534	AssignmentExpression	"tmp = strchr ( addr , ':' )"		4796460	0		=			
ANR	4796535	Identifier	tmp		4796460	0					
ANR	4796536	CallExpression	"strchr ( addr , ':' )"		4796460	1					
ANR	4796537	Callee	strchr		4796460	0					
ANR	4796538	Identifier	strchr		4796460	0					
ANR	4796539	ArgumentList	addr		4796460	1					
ANR	4796540	Argument	addr		4796460	0					
ANR	4796541	Identifier	addr		4796460	0					
ANR	4796542	Argument	':'		4796460	1					
ANR	4796543	PrimaryExpression	':'		4796460	0					
ANR	4796544	IfStatement	if ( ! tmp || ! * ( tmp + 1 ) )		4796460	7					
ANR	4796545	Condition	! tmp || ! * ( tmp + 1 )	1024:5:25280:25297	4796460	0	True				
ANR	4796546	OrExpression	! tmp || ! * ( tmp + 1 )		4796460	0		||			
ANR	4796547	UnaryOperationExpression	! tmp		4796460	0					
ANR	4796548	UnaryOperator	!		4796460	0					
ANR	4796549	Identifier	tmp		4796460	1					
ANR	4796550	UnaryOperationExpression	! * ( tmp + 1 )		4796460	1					
ANR	4796551	UnaryOperator	!		4796460	0					
ANR	4796552	UnaryOperationExpression	* ( tmp + 1 )		4796460	1					
ANR	4796553	UnaryOperator	*		4796460	0					
ANR	4796554	AdditiveExpression	tmp + 1		4796460	1		+			
ANR	4796555	Identifier	tmp		4796460	0					
ANR	4796556	PrimaryExpression	1		4796460	1					
ANR	4796557	CompoundStatement		21:26:282:282	4796460	1					
ANR	4796558	ReturnStatement	return - 1 ;	1026:2:25352:25361	4796460	0	True				
ANR	4796559	UnaryOperationExpression	- 1		4796460	0					
ANR	4796560	UnaryOperator	-		4796460	0					
ANR	4796561	PrimaryExpression	1		4796460	1					
ANR	4796562	ExpressionStatement	errno = 0	1031:1:25471:25480	4796460	8	True				
ANR	4796563	AssignmentExpression	errno = 0		4796460	0		=			
ANR	4796564	Identifier	errno		4796460	0					
ANR	4796565	PrimaryExpression	0		4796460	1					
ANR	4796566	ExpressionStatement	"port = strtol ( tmp + 1 , & end , 10 )"	1032:1:25483:25515	4796460	9	True				
ANR	4796567	AssignmentExpression	"port = strtol ( tmp + 1 , & end , 10 )"		4796460	0		=			
ANR	4796568	Identifier	port		4796460	0					
ANR	4796569	CallExpression	"strtol ( tmp + 1 , & end , 10 )"		4796460	1					
ANR	4796570	Callee	strtol		4796460	0					
ANR	4796571	Identifier	strtol		4796460	0					
ANR	4796572	ArgumentList	tmp + 1		4796460	1					
ANR	4796573	Argument	tmp + 1		4796460	0					
ANR	4796574	AdditiveExpression	tmp + 1		4796460	0		+			
ANR	4796575	Identifier	tmp		4796460	0					
ANR	4796576	PrimaryExpression	1		4796460	1					
ANR	4796577	Argument	& end		4796460	1					
ANR	4796578	UnaryOperationExpression	& end		4796460	0					
ANR	4796579	UnaryOperator	&		4796460	0					
ANR	4796580	Identifier	end		4796460	1					
ANR	4796581	Argument	10		4796460	2					
ANR	4796582	PrimaryExpression	10		4796460	0					
ANR	4796583	IfStatement	if ( errno == ERANGE )		4796460	10					
ANR	4796584	Condition	errno == ERANGE	1033:5:25522:25536	4796460	0	True				
ANR	4796585	EqualityExpression	errno == ERANGE		4796460	0		==			
ANR	4796586	Identifier	errno		4796460	0					
ANR	4796587	Identifier	ERANGE		4796460	1					
ANR	4796588	CompoundStatement		30:23:521:521	4796460	1					
ANR	4796589	ReturnStatement	return - 1 ;	1035:2:25577:25586	4796460	0	True				
ANR	4796590	UnaryOperationExpression	- 1		4796460	0					
ANR	4796591	UnaryOperator	-		4796460	0					
ANR	4796592	PrimaryExpression	1		4796460	1					
ANR	4796593	IfStatement	if ( end == tmp + 1 )		4796460	11					
ANR	4796594	Condition	end == tmp + 1	1037:5:25596:25607	4796460	0	True				
ANR	4796595	EqualityExpression	end == tmp + 1		4796460	0		==			
ANR	4796596	Identifier	end		4796460	0					
ANR	4796597	AdditiveExpression	tmp + 1		4796460	1		+			
ANR	4796598	Identifier	tmp		4796460	0					
ANR	4796599	PrimaryExpression	1		4796460	1					
ANR	4796600	CompoundStatement		34:20:592:592	4796460	1					
ANR	4796601	ReturnStatement	return - 1 ;	1039:2:25668:25677	4796460	0	True				
ANR	4796602	UnaryOperationExpression	- 1		4796460	0					
ANR	4796603	UnaryOperator	-		4796460	0					
ANR	4796604	PrimaryExpression	1		4796460	1					
ANR	4796605	IfStatement	if ( port < 0 )		4796460	12					
ANR	4796606	Condition	port < 0	1041:5:25687:25694	4796460	0	True				
ANR	4796607	RelationalExpression	port < 0		4796460	0		<			
ANR	4796608	Identifier	port		4796460	0					
ANR	4796609	PrimaryExpression	0		4796460	1					
ANR	4796610	CompoundStatement		38:16:679:679	4796460	1					
ANR	4796611	ReturnStatement	return - 1 ;	1043:2:25742:25751	4796460	0	True				
ANR	4796612	UnaryOperationExpression	- 1		4796460	0					
ANR	4796613	UnaryOperator	-		4796460	0					
ANR	4796614	PrimaryExpression	1		4796460	1					
ANR	4796615	IfStatement	if ( port > INT_MAX )		4796460	13					
ANR	4796616	Condition	port > INT_MAX	1045:5:25761:25774	4796460	0	True				
ANR	4796617	RelationalExpression	port > INT_MAX		4796460	0		>			
ANR	4796618	Identifier	port		4796460	0					
ANR	4796619	Identifier	INT_MAX		4796460	1					
ANR	4796620	CompoundStatement		42:22:759:759	4796460	1					
ANR	4796621	ReturnStatement	return - 1 ;	1047:2:25832:25841	4796460	0	True				
ANR	4796622	UnaryOperationExpression	- 1		4796460	0					
ANR	4796623	UnaryOperator	-		4796460	0					
ANR	4796624	PrimaryExpression	1		4796460	1					
ANR	4796625	ReturnStatement	return ( int ) port ;	1049:1:25847:25863	4796460	14	True				
ANR	4796626	CastExpression	( int ) port		4796460	0					
ANR	4796627	CastTarget	int		4796460	0					
ANR	4796628	Identifier	port		4796460	1					
ANR	4796629	ReturnType	int		4796460	1					
ANR	4796630	Identifier	getPortFromAddr		4796460	2					
ANR	4796631	ParameterList	const char * addr		4796460	3					
ANR	4796632	Parameter	const char * addr	1003:17:24999:25014	4796460	0	True				
ANR	4796633	ParameterType	const char *		4796460	0					
ANR	4796634	Identifier	addr		4796460	1					
ANR	4796635	CFGEntryNode	ENTRY		4796460		True				
ANR	4796636	CFGExitNode	EXIT		4796460		True				
ANR	4796637	Symbol	* tmp		4796460						
ANR	4796638	Symbol	errno		4796460						
ANR	4796639	Symbol	& end		4796460						
ANR	4796640	Symbol	strchr		4796460						
ANR	4796641	Symbol	* ( tmp + 1 )		4796460						
ANR	4796642	Symbol	port		4796460						
ANR	4796643	Symbol	strtol		4796460						
ANR	4796644	Symbol	tmp		4796460						
ANR	4796645	Symbol	ERANGE		4796460						
ANR	4796646	Symbol	INT_MAX		4796460						
ANR	4796647	Symbol	end		4796460						
ANR	4796648	Symbol	* addr		4796460						
ANR	4796649	Symbol	addr		4796460						
ANR	4796650	Function	getHostFromAddr	1054:0:25906:27029							
ANR	4796651	FunctionDef	getHostFromAddr (const char * addr)		4796650	0					
ANR	4796652	CompoundStatement		1056:0:25948:27029	4796650	0					
ANR	4796653	IdentifierDeclStatement	"char * copy , * host = NULL , * tmp ;"	1057:1:25951:25981	4796650	0	True				
ANR	4796654	IdentifierDecl	* copy		4796650	0					
ANR	4796655	IdentifierDeclType	char *		4796650	0					
ANR	4796656	Identifier	copy		4796650	1					
ANR	4796657	IdentifierDecl	* host = NULL		4796650	1					
ANR	4796658	IdentifierDeclType	char *		4796650	0					
ANR	4796659	Identifier	host		4796650	1					
ANR	4796660	AssignmentExpression	* host = NULL		4796650	2		=			
ANR	4796661	Identifier	NULL		4796650	0					
ANR	4796662	Identifier	NULL		4796650	1					
ANR	4796663	IdentifierDecl	* tmp		4796650	2					
ANR	4796664	IdentifierDeclType	char *		4796650	0					
ANR	4796665	Identifier	tmp		4796650	1					
ANR	4796666	IfStatement	if ( ! ( addr && addr [ 0 ] ) )		4796650	1					
ANR	4796667	Condition	! ( addr && addr [ 0 ] )	1059:5:25989:26007	4796650	0	True				
ANR	4796668	UnaryOperationExpression	! ( addr && addr [ 0 ] )		4796650	0					
ANR	4796669	UnaryOperator	!		4796650	0					
ANR	4796670	AndExpression	addr && addr [ 0 ]		4796650	1		&&			
ANR	4796671	Identifier	addr		4796650	0					
ANR	4796672	ArrayIndexing	addr [ 0 ]		4796650	1					
ANR	4796673	Identifier	addr		4796650	0					
ANR	4796674	PrimaryExpression	0		4796650	1					
ANR	4796675	CompoundStatement		4:27:62:62	4796650	1					
ANR	4796676	ReturnStatement	return 0 ;	1060:2:26015:26023	4796650	0	True				
ANR	4796677	PrimaryExpression	0		4796650	0					
ANR	4796678	ExpressionStatement	copy = strdup ( addr )	1063:1:26030:26051	4796650	2	True				
ANR	4796679	AssignmentExpression	copy = strdup ( addr )		4796650	0		=			
ANR	4796680	Identifier	copy		4796650	0					
ANR	4796681	CallExpression	strdup ( addr )		4796650	1					
ANR	4796682	Callee	strdup		4796650	0					
ANR	4796683	Identifier	strdup		4796650	0					
ANR	4796684	ArgumentList	addr		4796650	1					
ANR	4796685	Argument	addr		4796650	0					
ANR	4796686	Identifier	addr		4796650	0					
ANR	4796687	IfStatement	"if ( ( tmp = strchr ( copy , ']' ) ) )"		4796650	3					
ANR	4796688	Condition	"tmp = strchr ( copy , ']' )"	1065:5:26059:26083	4796650	0	True				
ANR	4796689	AssignmentExpression	"tmp = strchr ( copy , ']' )"		4796650	0		=			
ANR	4796690	Identifier	tmp		4796650	0					
ANR	4796691	CallExpression	"strchr ( copy , ']' )"		4796650	1					
ANR	4796692	Callee	strchr		4796650	0					
ANR	4796693	Identifier	strchr		4796650	0					
ANR	4796694	ArgumentList	copy		4796650	1					
ANR	4796695	Argument	copy		4796650	0					
ANR	4796696	Identifier	copy		4796650	0					
ANR	4796697	Argument	']'		4796650	1					
ANR	4796698	PrimaryExpression	']'		4796650	0					
ANR	4796699	CompoundStatement		10:33:138:138	4796650	1					
ANR	4796700	ExpressionStatement	* tmp = '\\0'	1067:2:26158:26169	4796650	0	True				
ANR	4796701	AssignmentExpression	* tmp = '\\0'		4796650	0		=			
ANR	4796702	UnaryOperationExpression	* tmp		4796650	0					
ANR	4796703	UnaryOperator	*		4796650	0					
ANR	4796704	Identifier	tmp		4796650	1					
ANR	4796705	PrimaryExpression	'\\0'		4796650	1					
ANR	4796706	ElseStatement	else		4796650	0					
ANR	4796707	IfStatement	"if ( ( tmp = strchr ( copy , ':' ) ) )"		4796650	0					
ANR	4796708	Condition	"tmp = strchr ( copy , ':' )"	1069:12:26184:26208	4796650	0	True				
ANR	4796709	AssignmentExpression	"tmp = strchr ( copy , ':' )"		4796650	0		=			
ANR	4796710	Identifier	tmp		4796650	0					
ANR	4796711	CallExpression	"strchr ( copy , ':' )"		4796650	1					
ANR	4796712	Callee	strchr		4796650	0					
ANR	4796713	Identifier	strchr		4796650	0					
ANR	4796714	ArgumentList	copy		4796650	1					
ANR	4796715	Argument	copy		4796650	0					
ANR	4796716	Identifier	copy		4796650	0					
ANR	4796717	Argument	':'		4796650	1					
ANR	4796718	PrimaryExpression	':'		4796650	0					
ANR	4796719	CompoundStatement		14:40:263:263	4796650	1					
ANR	4796720	ExpressionStatement	* tmp = '\\0'	1071:2:26280:26291	4796650	0	True				
ANR	4796721	AssignmentExpression	* tmp = '\\0'		4796650	0		=			
ANR	4796722	UnaryOperationExpression	* tmp		4796650	0					
ANR	4796723	UnaryOperator	*		4796650	0					
ANR	4796724	Identifier	tmp		4796650	1					
ANR	4796725	PrimaryExpression	'\\0'		4796650	1					
ANR	4796726	IfStatement	"if ( ( tmp = strrchr ( copy , '>' ) ) )"		4796650	4					
ANR	4796727	Condition	"tmp = strrchr ( copy , '>' )"	1076:5:26380:26405	4796650	0	True				
ANR	4796728	AssignmentExpression	"tmp = strrchr ( copy , '>' )"		4796650	0		=			
ANR	4796729	Identifier	tmp		4796650	0					
ANR	4796730	CallExpression	"strrchr ( copy , '>' )"		4796650	1					
ANR	4796731	Callee	strrchr		4796650	0					
ANR	4796732	Identifier	strrchr		4796650	0					
ANR	4796733	ArgumentList	copy		4796650	1					
ANR	4796734	Argument	copy		4796650	0					
ANR	4796735	Identifier	copy		4796650	0					
ANR	4796736	Argument	'>'		4796650	1					
ANR	4796737	PrimaryExpression	'>'		4796650	0					
ANR	4796738	CompoundStatement		21:34:460:460	4796650	1					
ANR	4796739	ExpressionStatement	* tmp = '\\0'	1077:2:26413:26424	4796650	0	True				
ANR	4796740	AssignmentExpression	* tmp = '\\0'		4796650	0		=			
ANR	4796741	UnaryOperationExpression	* tmp		4796650	0					
ANR	4796742	UnaryOperator	*		4796650	0					
ANR	4796743	Identifier	tmp		4796650	1					
ANR	4796744	PrimaryExpression	'\\0'		4796650	1					
ANR	4796745	IfStatement	"if ( ( tmp = strchr ( copy , '@' ) ) )"		4796650	5					
ANR	4796746	Condition	"tmp = strchr ( copy , '@' )"	1081:5:26500:26524	4796650	0	True				
ANR	4796747	AssignmentExpression	"tmp = strchr ( copy , '@' )"		4796650	0		=			
ANR	4796748	Identifier	tmp		4796650	0					
ANR	4796749	CallExpression	"strchr ( copy , '@' )"		4796650	1					
ANR	4796750	Callee	strchr		4796650	0					
ANR	4796751	Identifier	strchr		4796650	0					
ANR	4796752	ArgumentList	copy		4796650	1					
ANR	4796753	Argument	copy		4796650	0					
ANR	4796754	Identifier	copy		4796650	0					
ANR	4796755	Argument	'@'		4796650	1					
ANR	4796756	PrimaryExpression	'@'		4796650	0					
ANR	4796757	CompoundStatement		26:33:579:579	4796650	1					
ANR	4796758	IfStatement	if ( tmp [ 1 ] )		4796650	0					
ANR	4796759	Condition	tmp [ 1 ]	1082:6:26536:26541	4796650	0	True				
ANR	4796760	ArrayIndexing	tmp [ 1 ]		4796650	0					
ANR	4796761	Identifier	tmp		4796650	0					
ANR	4796762	PrimaryExpression	1		4796650	1					
ANR	4796763	CompoundStatement		27:15:596:596	4796650	1					
ANR	4796764	ExpressionStatement	host = strdup ( & tmp [ 1 ] )	1083:3:26550:26574	4796650	0	True				
ANR	4796765	AssignmentExpression	host = strdup ( & tmp [ 1 ] )		4796650	0		=			
ANR	4796766	Identifier	host		4796650	0					
ANR	4796767	CallExpression	strdup ( & tmp [ 1 ] )		4796650	1					
ANR	4796768	Callee	strdup		4796650	0					
ANR	4796769	Identifier	strdup		4796650	0					
ANR	4796770	ArgumentList	& tmp [ 1 ]		4796650	1					
ANR	4796771	Argument	& tmp [ 1 ]		4796650	0					
ANR	4796772	UnaryOperationExpression	& tmp [ 1 ]		4796650	0					
ANR	4796773	UnaryOperator	&		4796650	0					
ANR	4796774	ArrayIndexing	tmp [ 1 ]		4796650	1					
ANR	4796775	Identifier	tmp		4796650	0					
ANR	4796776	PrimaryExpression	1		4796650	1					
ANR	4796777	ExpressionStatement	free ( copy )	1085:2:26582:26594	4796650	1	True				
ANR	4796778	CallExpression	free ( copy )		4796650	0					
ANR	4796779	Callee	free		4796650	0					
ANR	4796780	Identifier	free		4796650	0					
ANR	4796781	ArgumentList	copy		4796650	1					
ANR	4796782	Argument	copy		4796650	0					
ANR	4796783	Identifier	copy		4796650	0					
ANR	4796784	ReturnStatement	return host ;	1086:2:26598:26609	4796650	2	True				
ANR	4796785	Identifier	host		4796650	0					
ANR	4796786	IfStatement	if ( copy [ 0 ] == '<' )		4796650	6					
ANR	4796787	Condition	copy [ 0 ] == '<'	1093:5:26790:26803	4796650	0	True				
ANR	4796788	EqualityExpression	copy [ 0 ] == '<'		4796650	0		==			
ANR	4796789	ArrayIndexing	copy [ 0 ]		4796650	0					
ANR	4796790	Identifier	copy		4796650	0					
ANR	4796791	PrimaryExpression	0		4796650	1					
ANR	4796792	PrimaryExpression	'<'		4796650	1					
ANR	4796793	CompoundStatement		38:22:858:858	4796650	1					
ANR	4796794	IfStatement	if ( copy [ 1 ] )		4796650	0					
ANR	4796795	Condition	copy [ 1 ]	1094:6:26815:26821	4796650	0	True				
ANR	4796796	ArrayIndexing	copy [ 1 ]		4796650	0					
ANR	4796797	Identifier	copy		4796650	0					
ANR	4796798	PrimaryExpression	1		4796650	1					
ANR	4796799	CompoundStatement		39:16:876:876	4796650	1					
ANR	4796800	IfStatement	if ( copy [ 1 ] == '[' )		4796650	0					
ANR	4796801	Condition	copy [ 1 ] == '['	1095:7:26834:26847	4796650	0	True				
ANR	4796802	EqualityExpression	copy [ 1 ] == '['		4796650	0		==			
ANR	4796803	ArrayIndexing	copy [ 1 ]		4796650	0					
ANR	4796804	Identifier	copy		4796650	0					
ANR	4796805	PrimaryExpression	1		4796650	1					
ANR	4796806	PrimaryExpression	'['		4796650	1					
ANR	4796807	CompoundStatement		40:23:901:901	4796650	1					
ANR	4796808	IfStatement	if ( copy [ 2 ] )		4796650	0					
ANR	4796809	Condition	copy [ 2 ]	1096:9:26861:26867	4796650	0	True				
ANR	4796810	ArrayIndexing	copy [ 2 ]		4796650	0					
ANR	4796811	Identifier	copy		4796650	0					
ANR	4796812	PrimaryExpression	2		4796650	1					
ANR	4796813	ExpressionStatement	host = strdup ( & copy [ 2 ] )	1097:5:26876:26901	4796650	1	True				
ANR	4796814	AssignmentExpression	host = strdup ( & copy [ 2 ] )		4796650	0		=			
ANR	4796815	Identifier	host		4796650	0					
ANR	4796816	CallExpression	strdup ( & copy [ 2 ] )		4796650	1					
ANR	4796817	Callee	strdup		4796650	0					
ANR	4796818	Identifier	strdup		4796650	0					
ANR	4796819	ArgumentList	& copy [ 2 ]		4796650	1					
ANR	4796820	Argument	& copy [ 2 ]		4796650	0					
ANR	4796821	UnaryOperationExpression	& copy [ 2 ]		4796650	0					
ANR	4796822	UnaryOperator	&		4796650	0					
ANR	4796823	ArrayIndexing	copy [ 2 ]		4796650	1					
ANR	4796824	Identifier	copy		4796650	0					
ANR	4796825	PrimaryExpression	2		4796650	1					
ANR	4796826	ElseStatement	else		4796650	0					
ANR	4796827	ExpressionStatement	host = strdup ( & copy [ 1 ] )	1099:4:26917:26942	4796650	0	True				
ANR	4796828	AssignmentExpression	host = strdup ( & copy [ 1 ] )		4796650	0		=			
ANR	4796829	Identifier	host		4796650	0					
ANR	4796830	CallExpression	strdup ( & copy [ 1 ] )		4796650	1					
ANR	4796831	Callee	strdup		4796650	0					
ANR	4796832	Identifier	strdup		4796650	0					
ANR	4796833	ArgumentList	& copy [ 1 ]		4796650	1					
ANR	4796834	Argument	& copy [ 1 ]		4796650	0					
ANR	4796835	UnaryOperationExpression	& copy [ 1 ]		4796650	0					
ANR	4796836	UnaryOperator	&		4796650	0					
ANR	4796837	ArrayIndexing	copy [ 1 ]		4796650	1					
ANR	4796838	Identifier	copy		4796650	0					
ANR	4796839	PrimaryExpression	1		4796650	1					
ANR	4796840	ElseStatement	else		4796650	0					
ANR	4796841	IfStatement	if ( copy [ 0 ] )		4796650	0					
ANR	4796842	Condition	copy [ 0 ]	1101:12:26960:26966	4796650	0	True				
ANR	4796843	ArrayIndexing	copy [ 0 ]		4796650	0					
ANR	4796844	Identifier	copy		4796650	0					
ANR	4796845	PrimaryExpression	0		4796650	1					
ANR	4796846	CompoundStatement		46:22:1021:1021	4796650	1					
ANR	4796847	ExpressionStatement	host = strdup ( copy )	1102:2:26974:26995	4796650	0	True				
ANR	4796848	AssignmentExpression	host = strdup ( copy )		4796650	0		=			
ANR	4796849	Identifier	host		4796650	0					
ANR	4796850	CallExpression	strdup ( copy )		4796650	1					
ANR	4796851	Callee	strdup		4796650	0					
ANR	4796852	Identifier	strdup		4796650	0					
ANR	4796853	ArgumentList	copy		4796650	1					
ANR	4796854	Argument	copy		4796650	0					
ANR	4796855	Identifier	copy		4796650	0					
ANR	4796856	ExpressionStatement	free ( copy )	1104:1:27001:27013	4796650	7	True				
ANR	4796857	CallExpression	free ( copy )		4796650	0					
ANR	4796858	Callee	free		4796650	0					
ANR	4796859	Identifier	free		4796650	0					
ANR	4796860	ArgumentList	copy		4796650	1					
ANR	4796861	Argument	copy		4796650	0					
ANR	4796862	Identifier	copy		4796650	0					
ANR	4796863	ReturnStatement	return host ;	1105:1:27016:27027	4796650	8	True				
ANR	4796864	Identifier	host		4796650	0					
ANR	4796865	ReturnType	char *		4796650	1					
ANR	4796866	Identifier	getHostFromAddr		4796650	2					
ANR	4796867	ParameterList	const char * addr		4796650	3					
ANR	4796868	Parameter	const char * addr	1055:17:25929:25944	4796650	0	True				
ANR	4796869	ParameterType	const char *		4796650	0					
ANR	4796870	Identifier	addr		4796650	1					
ANR	4796871	CFGEntryNode	ENTRY		4796650		True				
ANR	4796872	CFGExitNode	EXIT		4796650		True				
ANR	4796873	Symbol	* tmp		4796650						
ANR	4796874	Symbol	NULL		4796650						
ANR	4796875	Symbol	tmp		4796650						
ANR	4796876	Symbol	strrchr		4796650						
ANR	4796877	Symbol	* copy		4796650						
ANR	4796878	Symbol	host		4796650						
ANR	4796879	Symbol	strchr		4796650						
ANR	4796880	Symbol	copy		4796650						
ANR	4796881	Symbol	* addr		4796650						
ANR	4796882	Symbol	strdup		4796650						
ANR	4796883	Symbol	addr		4796650						
ANR	4796884	Function	getAddrFromClaimId	1109:0:27033:27314							
ANR	4796885	FunctionDef	getAddrFromClaimId (const char * id)		4796884	0					
ANR	4796886	CompoundStatement		1111:0:27076:27314	4796884	0					
ANR	4796887	IdentifierDeclStatement	char * tmp ;	1112:1:27079:27088	4796884	0	True				
ANR	4796888	IdentifierDecl	* tmp		4796884	0					
ANR	4796889	IdentifierDeclType	char *		4796884	0					
ANR	4796890	Identifier	tmp		4796884	1					
ANR	4796891	IdentifierDeclStatement	char * addr ;	1113:1:27091:27101	4796884	1	True				
ANR	4796892	IdentifierDecl	* addr		4796884	0					
ANR	4796893	IdentifierDeclType	char *		4796884	0					
ANR	4796894	Identifier	addr		4796884	1					
ANR	4796895	IdentifierDeclStatement	char * copy = strdup ( id ) ;	1114:1:27104:27129	4796884	2	True				
ANR	4796896	IdentifierDecl	* copy = strdup ( id )		4796884	0					
ANR	4796897	IdentifierDeclType	char *		4796884	0					
ANR	4796898	Identifier	copy		4796884	1					
ANR	4796899	AssignmentExpression	* copy = strdup ( id )		4796884	2		=			
ANR	4796900	Identifier	copy		4796884	0					
ANR	4796901	CallExpression	strdup ( id )		4796884	1					
ANR	4796902	Callee	strdup		4796884	0					
ANR	4796903	Identifier	strdup		4796884	0					
ANR	4796904	ArgumentList	id		4796884	1					
ANR	4796905	Argument	id		4796884	0					
ANR	4796906	Identifier	id		4796884	0					
ANR	4796907	ExpressionStatement	"tmp = strchr ( copy , '#' )"	1115:1:27132:27157	4796884	3	True				
ANR	4796908	AssignmentExpression	"tmp = strchr ( copy , '#' )"		4796884	0		=			
ANR	4796909	Identifier	tmp		4796884	0					
ANR	4796910	CallExpression	"strchr ( copy , '#' )"		4796884	1					
ANR	4796911	Callee	strchr		4796884	0					
ANR	4796912	Identifier	strchr		4796884	0					
ANR	4796913	ArgumentList	copy		4796884	1					
ANR	4796914	Argument	copy		4796884	0					
ANR	4796915	Identifier	copy		4796884	0					
ANR	4796916	Argument	'#'		4796884	1					
ANR	4796917	PrimaryExpression	'#'		4796884	0					
ANR	4796918	IfStatement	if ( tmp )		4796884	4					
ANR	4796919	Condition	tmp	1116:5:27164:27166	4796884	0	True				
ANR	4796920	Identifier	tmp		4796884	0					
ANR	4796921	CompoundStatement		6:11:93:93	4796884	1					
ANR	4796922	ExpressionStatement	* tmp = '\\0'	1117:2:27174:27185	4796884	0	True				
ANR	4796923	AssignmentExpression	* tmp = '\\0'		4796884	0		=			
ANR	4796924	UnaryOperationExpression	* tmp		4796884	0					
ANR	4796925	UnaryOperator	*		4796884	0					
ANR	4796926	Identifier	tmp		4796884	1					
ANR	4796927	PrimaryExpression	'\\0'		4796884	1					
ANR	4796928	IfStatement	if ( is_valid_sinful ( copy ) )		4796884	1					
ANR	4796929	Condition	is_valid_sinful ( copy )	1118:6:27193:27213	4796884	0	True				
ANR	4796930	CallExpression	is_valid_sinful ( copy )		4796884	0					
ANR	4796931	Callee	is_valid_sinful		4796884	0					
ANR	4796932	Identifier	is_valid_sinful		4796884	0					
ANR	4796933	ArgumentList	copy		4796884	1					
ANR	4796934	Argument	copy		4796884	0					
ANR	4796935	Identifier	copy		4796884	0					
ANR	4796936	CompoundStatement		8:30:140:140	4796884	1					
ANR	4796937	ExpressionStatement	addr = strdup ( copy )	1119:3:27222:27243	4796884	0	True				
ANR	4796938	AssignmentExpression	addr = strdup ( copy )		4796884	0		=			
ANR	4796939	Identifier	addr		4796884	0					
ANR	4796940	CallExpression	strdup ( copy )		4796884	1					
ANR	4796941	Callee	strdup		4796884	0					
ANR	4796942	Identifier	strdup		4796884	0					
ANR	4796943	ArgumentList	copy		4796884	1					
ANR	4796944	Argument	copy		4796884	0					
ANR	4796945	Identifier	copy		4796884	0					
ANR	4796946	ExpressionStatement	free ( copy )	1120:3:27248:27260	4796884	1	True				
ANR	4796947	CallExpression	free ( copy )		4796884	0					
ANR	4796948	Callee	free		4796884	0					
ANR	4796949	Identifier	free		4796884	0					
ANR	4796950	ArgumentList	copy		4796884	1					
ANR	4796951	Argument	copy		4796884	0					
ANR	4796952	Identifier	copy		4796884	0					
ANR	4796953	ReturnStatement	return addr ;	1121:3:27265:27276	4796884	2	True				
ANR	4796954	Identifier	addr		4796884	0					
ANR	4796955	ExpressionStatement	free ( copy )	1124:1:27286:27298	4796884	5	True				
ANR	4796956	CallExpression	free ( copy )		4796884	0					
ANR	4796957	Callee	free		4796884	0					
ANR	4796958	Identifier	free		4796884	0					
ANR	4796959	ArgumentList	copy		4796884	1					
ANR	4796960	Argument	copy		4796884	0					
ANR	4796961	Identifier	copy		4796884	0					
ANR	4796962	ReturnStatement	return NULL ;	1125:1:27301:27312	4796884	6	True				
ANR	4796963	Identifier	NULL		4796884	0					
ANR	4796964	ReturnType	char *		4796884	1					
ANR	4796965	Identifier	getAddrFromClaimId		4796884	2					
ANR	4796966	ParameterList	const char * id		4796884	3					
ANR	4796967	Parameter	const char * id	1110:20:27059:27072	4796884	0	True				
ANR	4796968	ParameterType	const char *		4796884	0					
ANR	4796969	Identifier	id		4796884	1					
ANR	4796970	CFGEntryNode	ENTRY		4796884		True				
ANR	4796971	CFGExitNode	EXIT		4796884		True				
ANR	4796972	Symbol	* tmp		4796884						
ANR	4796973	Symbol	NULL		4796884						
ANR	4796974	Symbol	tmp		4796884						
ANR	4796975	Symbol	strchr		4796884						
ANR	4796976	Symbol	is_valid_sinful		4796884						
ANR	4796977	Symbol	id		4796884						
ANR	4796978	Symbol	copy		4796884						
ANR	4796979	Symbol	strdup		4796884						
ANR	4796980	Symbol	addr		4796884						
ANR	4796981	Function	getSockAddr	1129:0:27318:28018							
ANR	4796982	FunctionDef	getSockAddr (int sockfd)		4796981	0					
ANR	4796983	CompoundStatement		1131:0:27363:28018	4796981	0					
ANR	4796984	Statement	static	1133:4:27391:27396	4796981	0	True				
ANR	4796985	IdentifierDeclStatement	struct sockaddr_in sa_in ;	1133:11:27398:27422	4796981	1	True				
ANR	4796986	IdentifierDecl	sa_in		4796981	0					
ANR	4796987	IdentifierDeclType	struct sockaddr_in		4796981	0					
ANR	4796988	Identifier	sa_in		4796981	1					
ANR	4796989	IdentifierDeclStatement	SOCKET_LENGTH_TYPE namelen = sizeof ( sa_in ) ;	1134:4:27428:27470	4796981	2	True				
ANR	4796990	IdentifierDecl	namelen = sizeof ( sa_in )		4796981	0					
ANR	4796991	IdentifierDeclType	SOCKET_LENGTH_TYPE		4796981	0					
ANR	4796992	Identifier	namelen		4796981	1					
ANR	4796993	AssignmentExpression	namelen = sizeof ( sa_in )		4796981	2		=			
ANR	4796994	Identifier	namelen		4796981	0					
ANR	4796995	SizeofExpression	sizeof ( sa_in )		4796981	1					
ANR	4796996	Sizeof	sizeof		4796981	0					
ANR	4796997	SizeofOperand	sa_in		4796981	1					
ANR	4796998	IfStatement	"if ( getsockname ( sockfd , ( struct sockaddr * ) & sa_in , ( socklen_t * ) & namelen ) < 0 )"		4796981	3					
ANR	4796999	Condition	"getsockname ( sockfd , ( struct sockaddr * ) & sa_in , ( socklen_t * ) & namelen ) < 0"	1135:8:27480:27551	4796981	0	True				
ANR	4797000	RelationalExpression	"getsockname ( sockfd , ( struct sockaddr * ) & sa_in , ( socklen_t * ) & namelen ) < 0"		4796981	0		<			
ANR	4797001	CallExpression	"getsockname ( sockfd , ( struct sockaddr * ) & sa_in , ( socklen_t * ) & namelen )"		4796981	0					
ANR	4797002	Callee	getsockname		4796981	0					
ANR	4797003	Identifier	getsockname		4796981	0					
ANR	4797004	ArgumentList	sockfd		4796981	1					
ANR	4797005	Argument	sockfd		4796981	0					
ANR	4797006	Identifier	sockfd		4796981	0					
ANR	4797007	Argument	( struct sockaddr * ) & sa_in		4796981	1					
ANR	4797008	CastExpression	( struct sockaddr * ) & sa_in		4796981	0					
ANR	4797009	CastTarget	struct sockaddr *		4796981	0					
ANR	4797010	UnaryOperationExpression	& sa_in		4796981	1					
ANR	4797011	UnaryOperator	&		4796981	0					
ANR	4797012	Identifier	sa_in		4796981	1					
ANR	4797013	Argument	( socklen_t * ) & namelen		4796981	2					
ANR	4797014	CastExpression	( socklen_t * ) & namelen		4796981	0					
ANR	4797015	CastTarget	socklen_t *		4796981	0					
ANR	4797016	UnaryOperationExpression	& namelen		4796981	1					
ANR	4797017	UnaryOperator	&		4796981	0					
ANR	4797018	Identifier	namelen		4796981	1					
ANR	4797019	PrimaryExpression	0		4796981	1					
ANR	4797020	CompoundStatement		5:82:190:190	4796981	1					
ANR	4797021	ExpressionStatement	"dprintf ( D_ALWAYS , ""failed getsockname(%d): %s\\n"" , sockfd , strerror ( errno ) )"	1136:8:27564:27638	4796981	0	True				
ANR	4797022	CallExpression	"dprintf ( D_ALWAYS , ""failed getsockname(%d): %s\\n"" , sockfd , strerror ( errno ) )"		4796981	0					
ANR	4797023	Callee	dprintf		4796981	0					
ANR	4797024	Identifier	dprintf		4796981	0					
ANR	4797025	ArgumentList	D_ALWAYS		4796981	1					
ANR	4797026	Argument	D_ALWAYS		4796981	0					
ANR	4797027	Identifier	D_ALWAYS		4796981	0					
ANR	4797028	Argument	"""failed getsockname(%d): %s\\n"""		4796981	1					
ANR	4797029	PrimaryExpression	"""failed getsockname(%d): %s\\n"""		4796981	0					
ANR	4797030	Argument	sockfd		4796981	2					
ANR	4797031	Identifier	sockfd		4796981	0					
ANR	4797032	Argument	strerror ( errno )		4796981	3					
ANR	4797033	CallExpression	strerror ( errno )		4796981	0					
ANR	4797034	Callee	strerror		4796981	0					
ANR	4797035	Identifier	strerror		4796981	0					
ANR	4797036	ArgumentList	errno		4796981	1					
ANR	4797037	Argument	errno		4796981	0					
ANR	4797038	Identifier	errno		4796981	0					
ANR	4797039	ReturnStatement	return NULL ;	1137:8:27648:27659	4796981	1	True				
ANR	4797040	Identifier	NULL		4796981	0					
ANR	4797041	IfStatement	if ( sa_in . sin_addr . s_addr == ntohl ( INADDR_ANY ) )		4796981	4					
ANR	4797042	Condition	sa_in . sin_addr . s_addr == ntohl ( INADDR_ANY )	1141:8:27794:27835	4796981	0	True				
ANR	4797043	EqualityExpression	sa_in . sin_addr . s_addr == ntohl ( INADDR_ANY )		4796981	0		==			
ANR	4797044	MemberAccess	sa_in . sin_addr . s_addr		4796981	0					
ANR	4797045	MemberAccess	sa_in . sin_addr		4796981	0					
ANR	4797046	Identifier	sa_in		4796981	0					
ANR	4797047	Identifier	sin_addr		4796981	1					
ANR	4797048	Identifier	s_addr		4796981	1					
ANR	4797049	CallExpression	ntohl ( INADDR_ANY )		4796981	1					
ANR	4797050	Callee	ntohl		4796981	0					
ANR	4797051	Identifier	ntohl		4796981	0					
ANR	4797052	ArgumentList	INADDR_ANY		4796981	1					
ANR	4797053	Argument	INADDR_ANY		4796981	0					
ANR	4797054	Identifier	INADDR_ANY		4796981	0					
ANR	4797055	CompoundStatement		12:5:481:524	4796981	1					
ANR	4797056	IdentifierDeclStatement	condor_sockaddr myaddr = get_local_ipaddr ( ) ;	1142:5:27845:27888	4796981	0	True				
ANR	4797057	IdentifierDecl	myaddr = get_local_ipaddr ( )		4796981	0					
ANR	4797058	IdentifierDeclType	condor_sockaddr		4796981	0					
ANR	4797059	Identifier	myaddr		4796981	1					
ANR	4797060	AssignmentExpression	myaddr = get_local_ipaddr ( )		4796981	2		=			
ANR	4797061	Identifier	myaddr		4796981	0					
ANR	4797062	CallExpression	get_local_ipaddr ( )		4796981	1					
ANR	4797063	Callee	get_local_ipaddr		4796981	0					
ANR	4797064	Identifier	get_local_ipaddr		4796981	0					
ANR	4797065	ArgumentList			4796981	1					
ANR	4797066	ExpressionStatement	sa_in . sin_addr = myaddr . to_sin ( ) . sin_addr	1143:5:27895:27936	4796981	1	True				
ANR	4797067	AssignmentExpression	sa_in . sin_addr = myaddr . to_sin ( ) . sin_addr		4796981	0		=			
ANR	4797068	MemberAccess	sa_in . sin_addr		4796981	0					
ANR	4797069	Identifier	sa_in		4796981	0					
ANR	4797070	Identifier	sin_addr		4796981	1					
ANR	4797071	MemberAccess	myaddr . to_sin ( ) . sin_addr		4796981	1					
ANR	4797072	CallExpression	myaddr . to_sin ( )		4796981	0					
ANR	4797073	Callee	myaddr . to_sin		4796981	0					
ANR	4797074	MemberAccess	myaddr . to_sin		4796981	0					
ANR	4797075	Identifier	myaddr		4796981	0					
ANR	4797076	Identifier	to_sin		4796981	1					
ANR	4797077	ArgumentList			4796981	1					
ANR	4797078	Identifier	sin_addr		4796981	1					
ANR	4797079	ReturnStatement	return & sa_in ;	1146:4:28003:28016	4796981	5	True				
ANR	4797080	UnaryOperationExpression	& sa_in		4796981	0					
ANR	4797081	UnaryOperator	&		4796981	0					
ANR	4797082	Identifier	sa_in		4796981	1					
ANR	4797083	ReturnType	struct sockaddr_in *		4796981	1					
ANR	4797084	Identifier	getSockAddr		4796981	2					
ANR	4797085	ParameterList	int sockfd		4796981	3					
ANR	4797086	Parameter	int sockfd	1130:12:27351:27360	4796981	0	True				
ANR	4797087	ParameterType	int		4796981	0					
ANR	4797088	Identifier	sockfd		4796981	1					
ANR	4797089	CFGEntryNode	ENTRY		4796981		True				
ANR	4797090	CFGExitNode	EXIT		4796981		True				
ANR	4797091	Symbol	& namelen		4796981						
ANR	4797092	Symbol	errno		4796981						
ANR	4797093	Symbol	NULL		4796981						
ANR	4797094	Symbol	getsockname		4796981						
ANR	4797095	Symbol	sa_in . sin_addr		4796981						
ANR	4797096	Symbol	D_ALWAYS		4796981						
ANR	4797097	Symbol	namelen		4796981						
ANR	4797098	Symbol	ntohl		4796981						
ANR	4797099	Symbol	sockfd		4796981						
ANR	4797100	Symbol	myaddr		4796981						
ANR	4797101	Symbol	sa_in . sin_addr . s_addr		4796981						
ANR	4797102	Symbol	strerror		4796981						
ANR	4797103	Symbol	myaddr . to_sin		4796981						
ANR	4797104	Symbol	sa_in		4796981						
ANR	4797105	Symbol	& sa_in		4796981						
ANR	4797106	Symbol	get_local_ipaddr		4796981						
ANR	4797107	Symbol	myaddr . to_sin ( ) . sin_addr		4796981						
ANR	4797108	Symbol	INADDR_ANY		4796981						
ANR	4797109	Function	generate_sinful	1158:0:28166:28373							
ANR	4797110	FunctionDef	"generate_sinful (char * buf , int len , const char * ip , int port)"		4797109	0					
ANR	4797111	CompoundStatement		1158:66:28232:28373	4797109	0					
ANR	4797112	IfStatement	"if ( strchr ( ip , ':' ) )"		4797109	0					
ANR	4797113	Condition	"strchr ( ip , ':' )"	1159:5:28239:28253	4797109	0	True				
ANR	4797114	CallExpression	"strchr ( ip , ':' )"		4797109	0					
ANR	4797115	Callee	strchr		4797109	0					
ANR	4797116	Identifier	strchr		4797109	0					
ANR	4797117	ArgumentList	ip		4797109	1					
ANR	4797118	Argument	ip		4797109	0					
ANR	4797119	Identifier	ip		4797109	0					
ANR	4797120	Argument	':'		4797109	1					
ANR	4797121	PrimaryExpression	':'		4797109	0					
ANR	4797122	CompoundStatement		2:22:23:23	4797109	1					
ANR	4797123	ReturnStatement	"return snprintf ( buf , len , ""<[%s]:%d>"" , ip , port ) ;"	1160:2:28260:28308	4797109	0	True				
ANR	4797124	CallExpression	"snprintf ( buf , len , ""<[%s]:%d>"" , ip , port )"		4797109	0					
ANR	4797125	Callee	snprintf		4797109	0					
ANR	4797126	Identifier	snprintf		4797109	0					
ANR	4797127	ArgumentList	buf		4797109	1					
ANR	4797128	Argument	buf		4797109	0					
ANR	4797129	Identifier	buf		4797109	0					
ANR	4797130	Argument	len		4797109	1					
ANR	4797131	Identifier	len		4797109	0					
ANR	4797132	Argument	"""<[%s]:%d>"""		4797109	2					
ANR	4797133	PrimaryExpression	"""<[%s]:%d>"""		4797109	0					
ANR	4797134	Argument	ip		4797109	3					
ANR	4797135	Identifier	ip		4797109	0					
ANR	4797136	Argument	port		4797109	4					
ANR	4797137	Identifier	port		4797109	0					
ANR	4797138	ElseStatement	else		4797109	0					
ANR	4797139	CompoundStatement		4:8:85:85	4797109	0					
ANR	4797140	ReturnStatement	"return snprintf ( buf , len , ""<%s:%d>"" , ip , port ) ;"	1162:2:28322:28368	4797109	0	True				
ANR	4797141	CallExpression	"snprintf ( buf , len , ""<%s:%d>"" , ip , port )"		4797109	0					
ANR	4797142	Callee	snprintf		4797109	0					
ANR	4797143	Identifier	snprintf		4797109	0					
ANR	4797144	ArgumentList	buf		4797109	1					
ANR	4797145	Argument	buf		4797109	0					
ANR	4797146	Identifier	buf		4797109	0					
ANR	4797147	Argument	len		4797109	1					
ANR	4797148	Identifier	len		4797109	0					
ANR	4797149	Argument	"""<%s:%d>"""		4797109	2					
ANR	4797150	PrimaryExpression	"""<%s:%d>"""		4797109	0					
ANR	4797151	Argument	ip		4797109	3					
ANR	4797152	Identifier	ip		4797109	0					
ANR	4797153	Argument	port		4797109	4					
ANR	4797154	Identifier	port		4797109	0					
ANR	4797155	ReturnType	int		4797109	1					
ANR	4797156	Identifier	generate_sinful		4797109	2					
ANR	4797157	ParameterList	"char * buf , int len , const char * ip , int port"		4797109	3					
ANR	4797158	Parameter	char * buf	1158:20:28186:28194	4797109	0	True				
ANR	4797159	ParameterType	char *		4797109	0					
ANR	4797160	Identifier	buf		4797109	1					
ANR	4797161	Parameter	int len	1158:31:28197:28203	4797109	1	True				
ANR	4797162	ParameterType	int		4797109	0					
ANR	4797163	Identifier	len		4797109	1					
ANR	4797164	Parameter	const char * ip	1158:40:28206:28219	4797109	2	True				
ANR	4797165	ParameterType	const char *		4797109	0					
ANR	4797166	Identifier	ip		4797109	1					
ANR	4797167	Parameter	int port	1158:56:28222:28229	4797109	3	True				
ANR	4797168	ParameterType	int		4797109	0					
ANR	4797169	Identifier	port		4797109	1					
ANR	4797170	CFGEntryNode	ENTRY		4797109		True				
ANR	4797171	CFGExitNode	EXIT		4797109		True				
ANR	4797172	Symbol	buf		4797109						
ANR	4797173	Symbol	len		4797109						
ANR	4797174	Symbol	port		4797109						
ANR	4797175	Symbol	ip		4797109						
ANR	4797176	Symbol	strchr		4797109						
ANR	4797177	Symbol	snprintf		4797109						
ANR	4797178	Function	generate_sinful	1169:0:28404:28596							
ANR	4797179	FunctionDef	"generate_sinful (const char * ip , int port)"		4797178	0					
ANR	4797180	CompoundStatement		1169:51:28455:28596	4797178	0					
ANR	4797181	IdentifierDeclStatement	MyString buf ;	1170:1:28458:28470	4797178	0	True				
ANR	4797182	IdentifierDecl	buf		4797178	0					
ANR	4797183	IdentifierDeclType	MyString		4797178	0					
ANR	4797184	Identifier	buf		4797178	1					
ANR	4797185	IfStatement	"if ( strchr ( ip , ':' ) )"		4797178	1					
ANR	4797186	Condition	"strchr ( ip , ':' )"	1171:5:28477:28491	4797178	0	True				
ANR	4797187	CallExpression	"strchr ( ip , ':' )"		4797178	0					
ANR	4797188	Callee	strchr		4797178	0					
ANR	4797189	Identifier	strchr		4797178	0					
ANR	4797190	ArgumentList	ip		4797178	1					
ANR	4797191	Argument	ip		4797178	0					
ANR	4797192	Identifier	ip		4797178	0					
ANR	4797193	Argument	':'		4797178	1					
ANR	4797194	PrimaryExpression	':'		4797178	0					
ANR	4797195	CompoundStatement		3:22:38:38	4797178	1					
ANR	4797196	ExpressionStatement	"buf . sprintf ( ""<[%s]:%d>"" , ip , port )"	1172:2:28498:28532	4797178	0	True				
ANR	4797197	CallExpression	"buf . sprintf ( ""<[%s]:%d>"" , ip , port )"		4797178	0					
ANR	4797198	Callee	buf . sprintf		4797178	0					
ANR	4797199	MemberAccess	buf . sprintf		4797178	0					
ANR	4797200	Identifier	buf		4797178	0					
ANR	4797201	Identifier	sprintf		4797178	1					
ANR	4797202	ArgumentList	"""<[%s]:%d>"""		4797178	1					
ANR	4797203	Argument	"""<[%s]:%d>"""		4797178	0					
ANR	4797204	PrimaryExpression	"""<[%s]:%d>"""		4797178	0					
ANR	4797205	Argument	ip		4797178	1					
ANR	4797206	Identifier	ip		4797178	0					
ANR	4797207	Argument	port		4797178	2					
ANR	4797208	Identifier	port		4797178	0					
ANR	4797209	ElseStatement	else		4797178	0					
ANR	4797210	CompoundStatement		5:8:86:86	4797178	0					
ANR	4797211	ExpressionStatement	"buf . sprintf ( ""<%s:%d>"" , ip , port )"	1174:2:28546:28578	4797178	0	True				
ANR	4797212	CallExpression	"buf . sprintf ( ""<%s:%d>"" , ip , port )"		4797178	0					
ANR	4797213	Callee	buf . sprintf		4797178	0					
ANR	4797214	MemberAccess	buf . sprintf		4797178	0					
ANR	4797215	Identifier	buf		4797178	0					
ANR	4797216	Identifier	sprintf		4797178	1					
ANR	4797217	ArgumentList	"""<%s:%d>"""		4797178	1					
ANR	4797218	Argument	"""<%s:%d>"""		4797178	0					
ANR	4797219	PrimaryExpression	"""<%s:%d>"""		4797178	0					
ANR	4797220	Argument	ip		4797178	1					
ANR	4797221	Identifier	ip		4797178	0					
ANR	4797222	Argument	port		4797178	2					
ANR	4797223	Identifier	port		4797178	0					
ANR	4797224	ReturnStatement	return buf ;	1176:1:28584:28594	4797178	2	True				
ANR	4797225	Identifier	buf		4797178	0					
ANR	4797226	ReturnType	MyString		4797178	1					
ANR	4797227	Identifier	generate_sinful		4797178	2					
ANR	4797228	ParameterList	"const char * ip , int port"		4797178	3					
ANR	4797229	Parameter	const char * ip	1169:25:28429:28442	4797178	0	True				
ANR	4797230	ParameterType	const char *		4797178	0					
ANR	4797231	Identifier	ip		4797178	1					
ANR	4797232	Parameter	int port	1169:41:28445:28452	4797178	1	True				
ANR	4797233	ParameterType	int		4797178	0					
ANR	4797234	Identifier	port		4797178	1					
ANR	4797235	CFGEntryNode	ENTRY		4797178		True				
ANR	4797236	CFGExitNode	EXIT		4797178		True				
ANR	4797237	Symbol	buf		4797178						
ANR	4797238	Symbol	port		4797178						
ANR	4797239	Symbol	ip		4797178						
ANR	4797240	Symbol	strchr		4797178						
ANR	4797241	Function	sinful_to_ipstr	1180:0:28600:28768							
ANR	4797242	FunctionDef	"sinful_to_ipstr (const char * addr , MyString & ipout)"		4797241	0					
ANR	4797243	CompoundStatement		1181:0:28658:28768	4797241	0					
ANR	4797244	IdentifierDeclStatement	condor_sockaddr sa ;	1182:1:28661:28679	4797241	0	True				
ANR	4797245	IdentifierDecl	sa		4797241	0					
ANR	4797246	IdentifierDeclType	condor_sockaddr		4797241	0					
ANR	4797247	Identifier	sa		4797241	1					
ANR	4797248	IfStatement	if ( ! sa . from_sinful ( addr ) )		4797241	1					
ANR	4797249	Condition	! sa . from_sinful ( addr )	1183:4:28685:28705	4797241	0	True				
ANR	4797250	UnaryOperationExpression	! sa . from_sinful ( addr )		4797241	0					
ANR	4797251	UnaryOperator	!		4797241	0					
ANR	4797252	CallExpression	sa . from_sinful ( addr )		4797241	1					
ANR	4797253	Callee	sa . from_sinful		4797241	0					
ANR	4797254	MemberAccess	sa . from_sinful		4797241	0					
ANR	4797255	Identifier	sa		4797241	0					
ANR	4797256	Identifier	from_sinful		4797241	1					
ANR	4797257	ArgumentList	addr		4797241	1					
ANR	4797258	Argument	addr		4797241	0					
ANR	4797259	Identifier	addr		4797241	0					
ANR	4797260	CompoundStatement		3:27:49:49	4797241	1					
ANR	4797261	ReturnStatement	return false ;	1183:29:28710:28722	4797241	0	True				
ANR	4797262	Identifier	false		4797241	0					
ANR	4797263	ExpressionStatement	ipout = sa . to_ip_string ( )	1184:1:28727:28752	4797241	2	True				
ANR	4797264	AssignmentExpression	ipout = sa . to_ip_string ( )		4797241	0		=			
ANR	4797265	Identifier	ipout		4797241	0					
ANR	4797266	CallExpression	sa . to_ip_string ( )		4797241	1					
ANR	4797267	Callee	sa . to_ip_string		4797241	0					
ANR	4797268	MemberAccess	sa . to_ip_string		4797241	0					
ANR	4797269	Identifier	sa		4797241	0					
ANR	4797270	Identifier	to_ip_string		4797241	1					
ANR	4797271	ArgumentList			4797241	1					
ANR	4797272	ReturnStatement	return true ;	1185:1:28755:28766	4797241	3	True				
ANR	4797273	Identifier	true		4797241	0					
ANR	4797274	ReturnType	bool		4797241	1					
ANR	4797275	Identifier	sinful_to_ipstr		4797241	2					
ANR	4797276	ParameterList	"const char * addr , MyString & ipout"		4797241	3					
ANR	4797277	Parameter	const char * addr	1180:21:28621:28637	4797241	0	True				
ANR	4797278	ParameterType	const char *		4797241	0					
ANR	4797279	Identifier	addr		4797241	1					
ANR	4797280	Parameter	MyString & ipout	1180:40:28640:28655	4797241	1	True				
ANR	4797281	ParameterType	MyString &		4797241	0					
ANR	4797282	Identifier	ipout		4797241	1					
ANR	4797283	CFGEntryNode	ENTRY		4797241		True				
ANR	4797284	CFGExitNode	EXIT		4797241		True				
ANR	4797285	Symbol	false		4797241						
ANR	4797286	Symbol	true		4797241						
ANR	4797287	Symbol	sa . to_ip_string		4797241						
ANR	4797288	Symbol	ipout		4797241						
ANR	4797289	Symbol	addr		4797241						
ANR	4797290	Symbol	sa . from_sinful		4797241						
ANR	4797291	Symbol	sa		4797241						
