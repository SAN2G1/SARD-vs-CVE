command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4061883	File	data/converged/CVE-2011-4930_htcondor/src_condor_starter.std_test_it.cpp								
ANR	4061884	DeclStmt									
ANR	4061885	Decl							extern int	extern int	errno
ANR	4061886	DeclStmt									
ANR	4061887	Decl							pid_t	pid_t	StarterPid
ANR	4061888	ClassDef	<unnamed>	28:8:931:990							
ANR	4061889	DeclStmt									
ANR	4061890	Decl							EVENT	EVENT	ev
ANR	4061891	DeclStmt									
ANR	4061892	Decl							char	char *	str
ANR	4061893	DeclStmt									
ANR	4061894	Decl							char	char	response
ANR	4061895	DeclStmt									
ANR	4061896	Decl									MENU_ITEM
ANR	4061897	DeclStmt									
ANR	4061898	Decl							MENU_ITEM	MENU_ITEM [ ]	Menu
ANR	4061899	DeclStmt									
ANR	4061900	Decl							EVENT	EVENT ( )	get_command
ANR	4061901	DeclStmt									
ANR	4061902	Decl							void	void ( char * )	usage
ANR	4061903	DeclStmt									
ANR	4061904	Decl							void	void ( int sig )	send_sig
ANR	4061905	DeclStmt									
ANR	4061906	Decl							pid_t	pid_t ( const char * )	get_starter_pid
ANR	4061907	DeclStmt									
ANR	4061908	Decl							void	void ( )	check_starter
ANR	4061909	DeclStmt									
ANR	4061910	Decl							int	"int ( const char * , const char * )"	contains
ANR	4061911	DeclStmt									
ANR	4061912	Decl							pid_t	pid_t ( const char * )	get_pid
ANR	4061913	Function	usage	53:0:1605:1705							
ANR	4061914	FunctionDef	usage (char * my_name)		4061913	0					
ANR	4061915	CompoundStatement		55:0:1633:1705	4061913	0					
ANR	4061916	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [starter_pid]\\n"" , my_name )"	56:1:1636:1691	4061913	0	True				
ANR	4061917	CallExpression	"fprintf ( stderr , ""Usage: %s [starter_pid]\\n"" , my_name )"		4061913	0					
ANR	4061918	Callee	fprintf		4061913	0					
ANR	4061919	Identifier	fprintf		4061913	0					
ANR	4061920	ArgumentList	stderr		4061913	1					
ANR	4061921	Argument	stderr		4061913	0					
ANR	4061922	Identifier	stderr		4061913	0					
ANR	4061923	Argument	"""Usage: %s [starter_pid]\\n"""		4061913	1					
ANR	4061924	PrimaryExpression	"""Usage: %s [starter_pid]\\n"""		4061913	0					
ANR	4061925	Argument	my_name		4061913	2					
ANR	4061926	Identifier	my_name		4061913	0					
ANR	4061927	ExpressionStatement	exit ( 1 )	57:1:1694:1703	4061913	1	True				
ANR	4061928	CallExpression	exit ( 1 )		4061913	0					
ANR	4061929	Callee	exit		4061913	0					
ANR	4061930	Identifier	exit		4061913	0					
ANR	4061931	ArgumentList	1		4061913	1					
ANR	4061932	Argument	1		4061913	0					
ANR	4061933	PrimaryExpression	1		4061913	0					
ANR	4061934	ReturnType	void		4061913	1					
ANR	4061935	Identifier	usage		4061913	2					
ANR	4061936	ParameterList	char * my_name		4061913	3					
ANR	4061937	Parameter	char * my_name	54:7:1617:1629	4061913	0	True				
ANR	4061938	ParameterType	char *		4061913	0					
ANR	4061939	Identifier	my_name		4061913	1					
ANR	4061940	CFGEntryNode	ENTRY		4061913		True				
ANR	4061941	CFGExitNode	EXIT		4061913		True				
ANR	4061942	Symbol	my_name		4061913						
ANR	4061943	Symbol	stderr		4061913						
ANR	4061944	Function	main	62:0:1710:2463							
ANR	4061945	FunctionDef	"main (int argc , char * argv [ ])"		4061944	0					
ANR	4061946	CompoundStatement		64:0:1745:2463	4061944	0					
ANR	4061947	IdentifierDeclStatement	EVENT command ;	65:1:1748:1761	4061944	0	True				
ANR	4061948	IdentifierDecl	command		4061944	0					
ANR	4061949	IdentifierDeclType	EVENT		4061944	0					
ANR	4061950	Identifier	command		4061944	1					
ANR	4061951	IfStatement	if ( ( argc != 1 ) && ( argc != 2 ) )		4061944	1					
ANR	4061952	Condition	( argc != 1 ) && ( argc != 2 )	67:5:1771:1796	4061944	0	True				
ANR	4061953	AndExpression	( argc != 1 ) && ( argc != 2 )		4061944	0		&&			
ANR	4061954	EqualityExpression	argc != 1		4061944	0		!=			
ANR	4061955	Identifier	argc		4061944	0					
ANR	4061956	PrimaryExpression	1		4061944	1					
ANR	4061957	EqualityExpression	argc != 2		4061944	1		!=			
ANR	4061958	Identifier	argc		4061944	0					
ANR	4061959	PrimaryExpression	2		4061944	1					
ANR	4061960	CompoundStatement		4:34:54:54	4061944	1					
ANR	4061961	ExpressionStatement	usage ( argv [ 0 ] )	68:2:1804:1820	4061944	0	True				
ANR	4061962	CallExpression	usage ( argv [ 0 ] )		4061944	0					
ANR	4061963	Callee	usage		4061944	0					
ANR	4061964	Identifier	usage		4061944	0					
ANR	4061965	ArgumentList	argv [ 0 ]		4061944	1					
ANR	4061966	Argument	argv [ 0 ]		4061944	0					
ANR	4061967	ArrayIndexing	argv [ 0 ]		4061944	0					
ANR	4061968	Identifier	argv		4061944	0					
ANR	4061969	PrimaryExpression	0		4061944	1					
ANR	4061970	IfStatement	if ( argc == 2 )		4061944	2					
ANR	4061971	Condition	argc == 2	71:5:1831:1839	4061944	0	True				
ANR	4061972	EqualityExpression	argc == 2		4061944	0		==			
ANR	4061973	Identifier	argc		4061944	0					
ANR	4061974	PrimaryExpression	2		4061944	1					
ANR	4061975	CompoundStatement		8:17:97:97	4061944	1					
ANR	4061976	ExpressionStatement	StarterPid = ( pid_t ) atoi ( argv [ 1 ] )	72:2:1847:1882	4061944	0	True				
ANR	4061977	AssignmentExpression	StarterPid = ( pid_t ) atoi ( argv [ 1 ] )		4061944	0		=			
ANR	4061978	Identifier	StarterPid		4061944	0					
ANR	4061979	CastExpression	( pid_t ) atoi ( argv [ 1 ] )		4061944	1					
ANR	4061980	CastTarget	pid_t		4061944	0					
ANR	4061981	CallExpression	atoi ( argv [ 1 ] )		4061944	1					
ANR	4061982	Callee	atoi		4061944	0					
ANR	4061983	Identifier	atoi		4061944	0					
ANR	4061984	ArgumentList	argv [ 1 ]		4061944	1					
ANR	4061985	Argument	argv [ 1 ]		4061944	0					
ANR	4061986	ArrayIndexing	argv [ 1 ]		4061944	0					
ANR	4061987	Identifier	argv		4061944	0					
ANR	4061988	PrimaryExpression	1		4061944	1					
ANR	4061989	ElseStatement	else		4061944	0					
ANR	4061990	CompoundStatement		10:8:146:146	4061944	0					
ANR	4061991	ExpressionStatement	StarterPid = get_starter_pid ( argv [ 0 ] )	74:2:1896:1935	4061944	0	True				
ANR	4061992	AssignmentExpression	StarterPid = get_starter_pid ( argv [ 0 ] )		4061944	0		=			
ANR	4061993	Identifier	StarterPid		4061944	0					
ANR	4061994	CallExpression	get_starter_pid ( argv [ 0 ] )		4061944	1					
ANR	4061995	Callee	get_starter_pid		4061944	0					
ANR	4061996	Identifier	get_starter_pid		4061944	0					
ANR	4061997	ArgumentList	argv [ 0 ]		4061944	1					
ANR	4061998	Argument	argv [ 0 ]		4061944	0					
ANR	4061999	ArrayIndexing	argv [ 0 ]		4061944	0					
ANR	4062000	Identifier	argv		4061944	0					
ANR	4062001	PrimaryExpression	0		4061944	1					
ANR	4062002	WhileStatement	while ( StarterPid )		4061944	3					
ANR	4062003	Condition	StarterPid	77:8:1949:1958	4061944	0	True				
ANR	4062004	Identifier	StarterPid		4061944	0					
ANR	4062005	CompoundStatement		14:21:216:216	4061944	1					
ANR	4062006	ExpressionStatement	check_starter ( )	78:2:1966:1981	4061944	0	True				
ANR	4062007	CallExpression	check_starter ( )		4061944	0					
ANR	4062008	Callee	check_starter		4061944	0					
ANR	4062009	Identifier	check_starter		4061944	0					
ANR	4062010	ArgumentList			4061944	1					
ANR	4062011	ExpressionStatement	command = get_command ( )	79:2:1985:2008	4061944	1	True				
ANR	4062012	AssignmentExpression	command = get_command ( )		4061944	0		=			
ANR	4062013	Identifier	command		4061944	0					
ANR	4062014	CallExpression	get_command ( )		4061944	1					
ANR	4062015	Callee	get_command		4061944	0					
ANR	4062016	Identifier	get_command		4061944	0					
ANR	4062017	ArgumentList			4061944	1					
ANR	4062018	SwitchStatement	switch ( command )		4061944	2					
ANR	4062019	Condition	command	80:10:2020:2026	4061944	0	True				
ANR	4062020	Identifier	command		4061944	0					
ANR	4062021	CompoundStatement		17:20:284:284	4061944	1					
ANR	4062022	Label	case SUSPEND :	81:3:2035:2047	4061944	0	True				
ANR	4062023	Identifier	SUSPEND		4061944	0					
ANR	4062024	ExpressionStatement	send_sig ( SIGUSR1 )	82:4:2053:2072	4061944	1	True				
ANR	4062025	CallExpression	send_sig ( SIGUSR1 )		4061944	0					
ANR	4062026	Callee	send_sig		4061944	0					
ANR	4062027	Identifier	send_sig		4061944	0					
ANR	4062028	ArgumentList	SIGUSR1		4061944	1					
ANR	4062029	Argument	SIGUSR1		4061944	0					
ANR	4062030	Identifier	SIGUSR1		4061944	0					
ANR	4062031	BreakStatement	break ;	83:4:2078:2083	4061944	2	True				
ANR	4062032	Label	case CONTINUE :	84:3:2088:2101	4061944	3	True				
ANR	4062033	Identifier	CONTINUE		4061944	0					
ANR	4062034	ExpressionStatement	send_sig ( SIGCONT )	85:4:2107:2126	4061944	4	True				
ANR	4062035	CallExpression	send_sig ( SIGCONT )		4061944	0					
ANR	4062036	Callee	send_sig		4061944	0					
ANR	4062037	Identifier	send_sig		4061944	0					
ANR	4062038	ArgumentList	SIGCONT		4061944	1					
ANR	4062039	Argument	SIGCONT		4061944	0					
ANR	4062040	Identifier	SIGCONT		4061944	0					
ANR	4062041	BreakStatement	break ;	86:4:2132:2137	4061944	5	True				
ANR	4062042	Label	case VACATE :	87:3:2142:2153	4061944	6	True				
ANR	4062043	Identifier	VACATE		4061944	0					
ANR	4062044	ExpressionStatement	send_sig ( SIGTSTP )	88:4:2159:2178	4061944	7	True				
ANR	4062045	CallExpression	send_sig ( SIGTSTP )		4061944	0					
ANR	4062046	Callee	send_sig		4061944	0					
ANR	4062047	Identifier	send_sig		4061944	0					
ANR	4062048	ArgumentList	SIGTSTP		4061944	1					
ANR	4062049	Argument	SIGTSTP		4061944	0					
ANR	4062050	Identifier	SIGTSTP		4061944	0					
ANR	4062051	BreakStatement	break ;	89:4:2184:2189	4061944	8	True				
ANR	4062052	Label	case ALARM :	90:3:2194:2204	4061944	9	True				
ANR	4062053	Identifier	ALARM		4061944	0					
ANR	4062054	ExpressionStatement	send_sig ( SIGALRM )	91:4:2210:2229	4061944	10	True				
ANR	4062055	CallExpression	send_sig ( SIGALRM )		4061944	0					
ANR	4062056	Callee	send_sig		4061944	0					
ANR	4062057	Identifier	send_sig		4061944	0					
ANR	4062058	ArgumentList	SIGALRM		4061944	1					
ANR	4062059	Argument	SIGALRM		4061944	0					
ANR	4062060	Identifier	SIGALRM		4061944	0					
ANR	4062061	BreakStatement	break ;	92:4:2235:2240	4061944	11	True				
ANR	4062062	Label	case DIE :	93:3:2245:2253	4061944	12	True				
ANR	4062063	Identifier	DIE		4061944	0					
ANR	4062064	ExpressionStatement	send_sig ( SIGINT )	94:4:2259:2277	4061944	13	True				
ANR	4062065	CallExpression	send_sig ( SIGINT )		4061944	0					
ANR	4062066	Callee	send_sig		4061944	0					
ANR	4062067	Identifier	send_sig		4061944	0					
ANR	4062068	ArgumentList	SIGINT		4061944	1					
ANR	4062069	Argument	SIGINT		4061944	0					
ANR	4062070	Identifier	SIGINT		4061944	0					
ANR	4062071	BreakStatement	break ;	95:4:2283:2288	4061944	14	True				
ANR	4062072	Label	case CKPT_and_VACATE :	96:3:2293:2313	4061944	15	True				
ANR	4062073	Identifier	CKPT_and_VACATE		4061944	0					
ANR	4062074	ExpressionStatement	send_sig ( SIGUSR2 )	97:4:2319:2338	4061944	16	True				
ANR	4062075	CallExpression	send_sig ( SIGUSR2 )		4061944	0					
ANR	4062076	Callee	send_sig		4061944	0					
ANR	4062077	Identifier	send_sig		4061944	0					
ANR	4062078	ArgumentList	SIGUSR2		4061944	1					
ANR	4062079	Argument	SIGUSR2		4061944	0					
ANR	4062080	Identifier	SIGUSR2		4061944	0					
ANR	4062081	BreakStatement	break ;	98:4:2344:2349	4061944	17	True				
ANR	4062082	Label	case NO_EVENT :	99:3:2354:2367	4061944	18	True				
ANR	4062083	Identifier	NO_EVENT		4061944	0					
ANR	4062084	ExpressionStatement	exit ( 0 )	100:4:2373:2382	4061944	19	True				
ANR	4062085	CallExpression	exit ( 0 )		4061944	0					
ANR	4062086	Callee	exit		4061944	0					
ANR	4062087	Identifier	exit		4061944	0					
ANR	4062088	ArgumentList	0		4061944	1					
ANR	4062089	Argument	0		4061944	0					
ANR	4062090	PrimaryExpression	0		4061944	0					
ANR	4062091	Label	default :	101:3:2387:2394	4061944	20	True				
ANR	4062092	Identifier	default		4061944	0					
ANR	4062093	ExpressionStatement	"printf ( ""Unknown command (%d)\\n"" , command )"	102:4:2400:2443	4061944	21	True				
ANR	4062094	CallExpression	"printf ( ""Unknown command (%d)\\n"" , command )"		4061944	0					
ANR	4062095	Callee	printf		4061944	0					
ANR	4062096	Identifier	printf		4061944	0					
ANR	4062097	ArgumentList	"""Unknown command (%d)\\n"""		4061944	1					
ANR	4062098	Argument	"""Unknown command (%d)\\n"""		4061944	0					
ANR	4062099	PrimaryExpression	"""Unknown command (%d)\\n"""		4061944	0					
ANR	4062100	Argument	command		4061944	1					
ANR	4062101	Identifier	command		4061944	0					
ANR	4062102	ReturnStatement	return 0 ;	105:1:2453:2461	4061944	4	True				
ANR	4062103	PrimaryExpression	0		4061944	0					
ANR	4062104	ReturnType	int		4061944	1					
ANR	4062105	Identifier	main		4061944	2					
ANR	4062106	ParameterList	"int argc , char * argv [ ]"		4061944	3					
ANR	4062107	Parameter	int argc	63:6:1720:1727	4061944	0	True				
ANR	4062108	ParameterType	int		4061944	0					
ANR	4062109	Identifier	argc		4061944	1					
ANR	4062110	Parameter	char * argv [ ]	63:16:1730:1741	4061944	1	True				
ANR	4062111	ParameterType	char * [ ]		4061944	0					
ANR	4062112	Identifier	argv		4061944	1					
ANR	4062113	CFGEntryNode	ENTRY		4061944		True				
ANR	4062114	CFGExitNode	EXIT		4061944		True				
ANR	4062115	Symbol	argc		4061944						
ANR	4062116	Symbol	atoi		4061944						
ANR	4062117	Symbol	SIGUSR2		4061944						
ANR	4062118	Symbol	SIGUSR1		4061944						
ANR	4062119	Symbol	SIGALRM		4061944						
ANR	4062120	Symbol	* argv		4061944						
ANR	4062121	Symbol	SIGTSTP		4061944						
ANR	4062122	Symbol	argv		4061944						
ANR	4062123	Symbol	command		4061944						
ANR	4062124	Symbol	SIGINT		4061944						
ANR	4062125	Symbol	get_command		4061944						
ANR	4062126	Symbol	get_starter_pid		4061944						
ANR	4062127	Symbol	StarterPid		4061944						
ANR	4062128	Symbol	SIGCONT		4061944						
ANR	4062129	Function	get_command	108:0:2466:2899							
ANR	4062130	FunctionDef	get_command ()		4062129	0					
ANR	4062131	CompoundStatement		110:0:2486:2899	4062129	0					
ANR	4062132	IdentifierDeclStatement	MENU_ITEM * ptr ;	111:1:2489:2503	4062129	0	True				
ANR	4062133	IdentifierDecl	* ptr		4062129	0					
ANR	4062134	IdentifierDeclType	MENU_ITEM *		4062129	0					
ANR	4062135	Identifier	ptr		4062129	1					
ANR	4062136	IdentifierDeclStatement	char ch ;	112:1:2506:2514	4062129	1	True				
ANR	4062137	IdentifierDecl	ch		4062129	0					
ANR	4062138	IdentifierDeclType	char		4062129	0					
ANR	4062139	Identifier	ch		4062129	1					
ANR	4062140	IdentifierDeclStatement	char buf [ 1024 ] ;	113:1:2517:2532	4062129	2	True				
ANR	4062141	IdentifierDecl	buf [ 1024 ]		4062129	0					
ANR	4062142	IdentifierDeclType	char [ 1024 ]		4062129	0					
ANR	4062143	Identifier	buf		4062129	1					
ANR	4062144	PrimaryExpression	1024		4062129	2					
ANR	4062145	ForStatement	for ( ptr = Menu ; ptr -> str ; ptr ++ )		4062129	3					
ANR	4062146	ForInit	ptr = Menu ;	115:6:2541:2549	4062129	0	True				
ANR	4062147	AssignmentExpression	ptr = Menu		4062129	0		=			
ANR	4062148	Identifier	ptr		4062129	0					
ANR	4062149	Identifier	Menu		4062129	1					
ANR	4062150	Condition	ptr -> str	115:16:2551:2558	4062129	1	True				
ANR	4062151	PtrMemberAccess	ptr -> str		4062129	0					
ANR	4062152	Identifier	ptr		4062129	0					
ANR	4062153	Identifier	str		4062129	1					
ANR	4062154	PostIncDecOperationExpression	ptr ++	115:26:2561:2565	4062129	2	True				
ANR	4062155	Identifier	ptr		4062129	0					
ANR	4062156	IncDec	++		4062129	1					
ANR	4062157	CompoundStatement		6:34:82:82	4062129	3					
ANR	4062158	ExpressionStatement	"printf ( ""%s\\n"" , ptr -> str )"	116:2:2573:2599	4062129	0	True				
ANR	4062159	CallExpression	"printf ( ""%s\\n"" , ptr -> str )"		4062129	0					
ANR	4062160	Callee	printf		4062129	0					
ANR	4062161	Identifier	printf		4062129	0					
ANR	4062162	ArgumentList	"""%s\\n"""		4062129	1					
ANR	4062163	Argument	"""%s\\n"""		4062129	0					
ANR	4062164	PrimaryExpression	"""%s\\n"""		4062129	0					
ANR	4062165	Argument	ptr -> str		4062129	1					
ANR	4062166	PtrMemberAccess	ptr -> str		4062129	0					
ANR	4062167	Identifier	ptr		4062129	0					
ANR	4062168	Identifier	str		4062129	1					
ANR	4062169	ExpressionStatement		117:2:2603:2603	4062129	4	True				
ANR	4062170	ExpressionStatement	"printf ( ""(Send EOF to quit)\\n"" )"	118:1:2606:2638	4062129	5	True				
ANR	4062171	CallExpression	"printf ( ""(Send EOF to quit)\\n"" )"		4062129	0					
ANR	4062172	Callee	printf		4062129	0					
ANR	4062173	Identifier	printf		4062129	0					
ANR	4062174	ArgumentList	"""(Send EOF to quit)\\n"""		4062129	1					
ANR	4062175	Argument	"""(Send EOF to quit)\\n"""		4062129	0					
ANR	4062176	PrimaryExpression	"""(Send EOF to quit)\\n"""		4062129	0					
ANR	4062177	ForStatement	for ( ; ; )		4062129	6					
ANR	4062178	CompoundStatement		12:9:164:164	4062129	0					
ANR	4062179	IfStatement	"if ( fgets ( buf , sizeof ( buf ) , stdin ) == NULL )"		4062129	0					
ANR	4062180	Condition	"fgets ( buf , sizeof ( buf ) , stdin ) == NULL"	122:6:2659:2694	4062129	0	True				
ANR	4062181	EqualityExpression	"fgets ( buf , sizeof ( buf ) , stdin ) == NULL"		4062129	0		==			
ANR	4062182	CallExpression	"fgets ( buf , sizeof ( buf ) , stdin )"		4062129	0					
ANR	4062183	Callee	fgets		4062129	0					
ANR	4062184	Identifier	fgets		4062129	0					
ANR	4062185	ArgumentList	buf		4062129	1					
ANR	4062186	Argument	buf		4062129	0					
ANR	4062187	Identifier	buf		4062129	0					
ANR	4062188	Argument	sizeof ( buf )		4062129	1					
ANR	4062189	SizeofExpression	sizeof ( buf )		4062129	0					
ANR	4062190	Sizeof	sizeof		4062129	0					
ANR	4062191	SizeofOperand	buf		4062129	1					
ANR	4062192	Argument	stdin		4062129	2					
ANR	4062193	Identifier	stdin		4062129	0					
ANR	4062194	Identifier	NULL		4062129	1					
ANR	4062195	CompoundStatement		13:45:211:211	4062129	1					
ANR	4062196	ReturnStatement	return NO_EVENT ;	123:3:2703:2718	4062129	0	True				
ANR	4062197	Identifier	NO_EVENT		4062129	0					
ANR	4062198	ExpressionStatement	ch = toupper ( ( int ) buf [ 0 ] )	126:2:2727:2754	4062129	1	True				
ANR	4062199	AssignmentExpression	ch = toupper ( ( int ) buf [ 0 ] )		4062129	0		=			
ANR	4062200	Identifier	ch		4062129	0					
ANR	4062201	CallExpression	toupper ( ( int ) buf [ 0 ] )		4062129	1					
ANR	4062202	Callee	toupper		4062129	0					
ANR	4062203	Identifier	toupper		4062129	0					
ANR	4062204	ArgumentList	( int ) buf [ 0 ]		4062129	1					
ANR	4062205	Argument	( int ) buf [ 0 ]		4062129	0					
ANR	4062206	CastExpression	( int ) buf [ 0 ]		4062129	0					
ANR	4062207	CastTarget	int		4062129	0					
ANR	4062208	ArrayIndexing	buf [ 0 ]		4062129	1					
ANR	4062209	Identifier	buf		4062129	0					
ANR	4062210	PrimaryExpression	0		4062129	1					
ANR	4062211	ForStatement	for ( ptr = Menu ; ptr -> str ; ptr ++ )		4062129	2					
ANR	4062212	ForInit	ptr = Menu ;	127:7:2763:2771	4062129	0	True				
ANR	4062213	AssignmentExpression	ptr = Menu		4062129	0		=			
ANR	4062214	Identifier	ptr		4062129	0					
ANR	4062215	Identifier	Menu		4062129	1					
ANR	4062216	Condition	ptr -> str	127:17:2773:2780	4062129	1	True				
ANR	4062217	PtrMemberAccess	ptr -> str		4062129	0					
ANR	4062218	Identifier	ptr		4062129	0					
ANR	4062219	Identifier	str		4062129	1					
ANR	4062220	PostIncDecOperationExpression	ptr ++	127:27:2783:2787	4062129	2	True				
ANR	4062221	Identifier	ptr		4062129	0					
ANR	4062222	IncDec	++		4062129	1					
ANR	4062223	CompoundStatement		18:35:304:304	4062129	3					
ANR	4062224	IfStatement	if ( ch == ptr -> response )		4062129	0					
ANR	4062225	Condition	ch == ptr -> response	128:7:2800:2818	4062129	0	True				
ANR	4062226	EqualityExpression	ch == ptr -> response		4062129	0		==			
ANR	4062227	Identifier	ch		4062129	0					
ANR	4062228	PtrMemberAccess	ptr -> response		4062129	1					
ANR	4062229	Identifier	ptr		4062129	0					
ANR	4062230	Identifier	response		4062129	1					
ANR	4062231	CompoundStatement		19:29:335:335	4062129	1					
ANR	4062232	ReturnStatement	return ptr -> ev ;	129:4:2828:2842	4062129	0	True				
ANR	4062233	PtrMemberAccess	ptr -> ev		4062129	0					
ANR	4062234	Identifier	ptr		4062129	0					
ANR	4062235	Identifier	ev		4062129	1					
ANR	4062236	ExpressionStatement	"printf ( ""%c - Unknown command\\n"" , ch )"	132:2:2855:2893	4062129	3	True				
ANR	4062237	CallExpression	"printf ( ""%c - Unknown command\\n"" , ch )"		4062129	0					
ANR	4062238	Callee	printf		4062129	0					
ANR	4062239	Identifier	printf		4062129	0					
ANR	4062240	ArgumentList	"""%c - Unknown command\\n"""		4062129	1					
ANR	4062241	Argument	"""%c - Unknown command\\n"""		4062129	0					
ANR	4062242	PrimaryExpression	"""%c - Unknown command\\n"""		4062129	0					
ANR	4062243	Argument	ch		4062129	1					
ANR	4062244	Identifier	ch		4062129	0					
ANR	4062245	ReturnType	EVENT		4062129	1					
ANR	4062246	Identifier	get_command		4062129	2					
ANR	4062247	ParameterList			4062129	3					
ANR	4062248	CFGEntryNode	ENTRY		4062129		True				
ANR	4062249	CFGExitNode	EXIT		4062129		True				
ANR	4062250	InfiniteForNode	true		4062129		True				
ANR	4062251	Symbol	ptr -> str		4062129						
ANR	4062252	Symbol	stdin		4062129						
ANR	4062253	Symbol	* buf		4062129						
ANR	4062254	Symbol	NULL		4062129						
ANR	4062255	Symbol	NO_EVENT		4062129						
ANR	4062256	Symbol	ch		4062129						
ANR	4062257	Symbol	toupper		4062129						
ANR	4062258	Symbol	fgets		4062129						
ANR	4062259	Symbol	ptr		4062129						
ANR	4062260	Symbol	buf		4062129						
ANR	4062261	Symbol	ptr -> response		4062129						
ANR	4062262	Symbol	* ptr		4062129						
ANR	4062263	Symbol	Menu		4062129						
ANR	4062264	Symbol	ptr -> ev		4062129						
ANR	4062265	Function	send_sig	137:0:2902:3491							
ANR	4062266	FunctionDef	send_sig (int sig)		4062265	0					
ANR	4062267	CompoundStatement		139:0:2927:3491	4062265	0					
ANR	4062268	IfStatement	if ( sig != SIGCONT )		4062265	0					
ANR	4062269	Condition	sig != SIGCONT	140:5:2934:2947	4062265	0	True				
ANR	4062270	EqualityExpression	sig != SIGCONT		4062265	0		!=			
ANR	4062271	Identifier	sig		4062265	0					
ANR	4062272	Identifier	SIGCONT		4062265	1					
ANR	4062273	CompoundStatement		2:22:23:23	4062265	1					
ANR	4062274	IfStatement	"if ( kill ( StarterPid , SIGCONT ) < 0 )"		4062265	0					
ANR	4062275	Condition	"kill ( StarterPid , SIGCONT ) < 0"	141:6:2959:2986	4062265	0	True				
ANR	4062276	RelationalExpression	"kill ( StarterPid , SIGCONT ) < 0"		4062265	0		<			
ANR	4062277	CallExpression	"kill ( StarterPid , SIGCONT )"		4062265	0					
ANR	4062278	Callee	kill		4062265	0					
ANR	4062279	Identifier	kill		4062265	0					
ANR	4062280	ArgumentList	StarterPid		4062265	1					
ANR	4062281	Argument	StarterPid		4062265	0					
ANR	4062282	Identifier	StarterPid		4062265	0					
ANR	4062283	Argument	SIGCONT		4062265	1					
ANR	4062284	Identifier	SIGCONT		4062265	0					
ANR	4062285	PrimaryExpression	0		4062265	1					
ANR	4062286	CompoundStatement		3:37:62:62	4062265	1					
ANR	4062287	IfStatement	if ( errno == ESRCH )		4062265	0					
ANR	4062288	Condition	errno == ESRCH	142:7:2999:3012	4062265	0	True				
ANR	4062289	EqualityExpression	errno == ESRCH		4062265	0		==			
ANR	4062290	Identifier	errno		4062265	0					
ANR	4062291	Identifier	ESRCH		4062265	1					
ANR	4062292	CompoundStatement		4:24:88:88	4062265	1					
ANR	4062293	ExpressionStatement	StarterPid = 0	143:4:3022:3036	4062265	0	True				
ANR	4062294	AssignmentExpression	StarterPid = 0		4062265	0		=			
ANR	4062295	Identifier	StarterPid		4062265	0					
ANR	4062296	PrimaryExpression	0		4062265	1					
ANR	4062297	ReturnStatement	return ;	144:4:3042:3048	4062265	1	True				
ANR	4062298	ExpressionStatement	"fprintf ( stderr , ""Can't send SIGCONT to process %d"" , StarterPid )"	146:3:3058:3123	4062265	1	True				
ANR	4062299	CallExpression	"fprintf ( stderr , ""Can't send SIGCONT to process %d"" , StarterPid )"		4062265	0					
ANR	4062300	Callee	fprintf		4062265	0					
ANR	4062301	Identifier	fprintf		4062265	0					
ANR	4062302	ArgumentList	stderr		4062265	1					
ANR	4062303	Argument	stderr		4062265	0					
ANR	4062304	Identifier	stderr		4062265	0					
ANR	4062305	Argument	"""Can't send SIGCONT to process %d"""		4062265	1					
ANR	4062306	PrimaryExpression	"""Can't send SIGCONT to process %d"""		4062265	0					
ANR	4062307	Argument	StarterPid		4062265	2					
ANR	4062308	Identifier	StarterPid		4062265	0					
ANR	4062309	ExpressionStatement	"perror ( "" "" )"	147:3:3128:3141	4062265	2	True				
ANR	4062310	CallExpression	"perror ( "" "" )"		4062265	0					
ANR	4062311	Callee	perror		4062265	0					
ANR	4062312	Identifier	perror		4062265	0					
ANR	4062313	ArgumentList	""" """		4062265	1					
ANR	4062314	Argument	""" """		4062265	0					
ANR	4062315	PrimaryExpression	""" """		4062265	0					
ANR	4062316	ExpressionStatement	exit ( 1 )	148:3:3146:3155	4062265	3	True				
ANR	4062317	CallExpression	exit ( 1 )		4062265	0					
ANR	4062318	Callee	exit		4062265	0					
ANR	4062319	Identifier	exit		4062265	0					
ANR	4062320	ArgumentList	1		4062265	1					
ANR	4062321	Argument	1		4062265	0					
ANR	4062322	PrimaryExpression	1		4062265	0					
ANR	4062323	ExpressionStatement	"printf ( ""Sent signal SIGCONT to process %d\\n"" , StarterPid )"	151:1:3165:3224	4062265	1	True				
ANR	4062324	CallExpression	"printf ( ""Sent signal SIGCONT to process %d\\n"" , StarterPid )"		4062265	0					
ANR	4062325	Callee	printf		4062265	0					
ANR	4062326	Identifier	printf		4062265	0					
ANR	4062327	ArgumentList	"""Sent signal SIGCONT to process %d\\n"""		4062265	1					
ANR	4062328	Argument	"""Sent signal SIGCONT to process %d\\n"""		4062265	0					
ANR	4062329	PrimaryExpression	"""Sent signal SIGCONT to process %d\\n"""		4062265	0					
ANR	4062330	Argument	StarterPid		4062265	1					
ANR	4062331	Identifier	StarterPid		4062265	0					
ANR	4062332	IfStatement	"if ( kill ( StarterPid , sig ) < 0 )"		4062265	2					
ANR	4062333	Condition	"kill ( StarterPid , sig ) < 0"	153:5:3232:3255	4062265	0	True				
ANR	4062334	RelationalExpression	"kill ( StarterPid , sig ) < 0"		4062265	0		<			
ANR	4062335	CallExpression	"kill ( StarterPid , sig )"		4062265	0					
ANR	4062336	Callee	kill		4062265	0					
ANR	4062337	Identifier	kill		4062265	0					
ANR	4062338	ArgumentList	StarterPid		4062265	1					
ANR	4062339	Argument	StarterPid		4062265	0					
ANR	4062340	Identifier	StarterPid		4062265	0					
ANR	4062341	Argument	sig		4062265	1					
ANR	4062342	Identifier	sig		4062265	0					
ANR	4062343	PrimaryExpression	0		4062265	1					
ANR	4062344	CompoundStatement		15:32:331:331	4062265	1					
ANR	4062345	IfStatement	if ( errno == ESRCH )		4062265	0					
ANR	4062346	Condition	errno == ESRCH	154:6:3267:3280	4062265	0	True				
ANR	4062347	EqualityExpression	errno == ESRCH		4062265	0		==			
ANR	4062348	Identifier	errno		4062265	0					
ANR	4062349	Identifier	ESRCH		4062265	1					
ANR	4062350	CompoundStatement		16:23:356:356	4062265	1					
ANR	4062351	ExpressionStatement	StarterPid = 0	155:3:3289:3303	4062265	0	True				
ANR	4062352	AssignmentExpression	StarterPid = 0		4062265	0		=			
ANR	4062353	Identifier	StarterPid		4062265	0					
ANR	4062354	PrimaryExpression	0		4062265	1					
ANR	4062355	ReturnStatement	return ;	156:3:3308:3314	4062265	1	True				
ANR	4062356	ExpressionStatement	"fprintf ( stderr , ""Can't send signal %d to process %d"" , sig , StarterPid )"	158:2:3322:3394	4062265	1	True				
ANR	4062357	CallExpression	"fprintf ( stderr , ""Can't send signal %d to process %d"" , sig , StarterPid )"		4062265	0					
ANR	4062358	Callee	fprintf		4062265	0					
ANR	4062359	Identifier	fprintf		4062265	0					
ANR	4062360	ArgumentList	stderr		4062265	1					
ANR	4062361	Argument	stderr		4062265	0					
ANR	4062362	Identifier	stderr		4062265	0					
ANR	4062363	Argument	"""Can't send signal %d to process %d"""		4062265	1					
ANR	4062364	PrimaryExpression	"""Can't send signal %d to process %d"""		4062265	0					
ANR	4062365	Argument	sig		4062265	2					
ANR	4062366	Identifier	sig		4062265	0					
ANR	4062367	Argument	StarterPid		4062265	3					
ANR	4062368	Identifier	StarterPid		4062265	0					
ANR	4062369	ExpressionStatement	"perror ( "" "" )"	159:2:3398:3411	4062265	2	True				
ANR	4062370	CallExpression	"perror ( "" "" )"		4062265	0					
ANR	4062371	Callee	perror		4062265	0					
ANR	4062372	Identifier	perror		4062265	0					
ANR	4062373	ArgumentList	""" """		4062265	1					
ANR	4062374	Argument	""" """		4062265	0					
ANR	4062375	PrimaryExpression	""" """		4062265	0					
ANR	4062376	ExpressionStatement	exit ( 1 )	160:2:3415:3424	4062265	3	True				
ANR	4062377	CallExpression	exit ( 1 )		4062265	0					
ANR	4062378	Callee	exit		4062265	0					
ANR	4062379	Identifier	exit		4062265	0					
ANR	4062380	ArgumentList	1		4062265	1					
ANR	4062381	Argument	1		4062265	0					
ANR	4062382	PrimaryExpression	1		4062265	0					
ANR	4062383	ExpressionStatement	"printf ( ""Sent signal %d to process %d\\n"" , sig , StarterPid )"	162:1:3430:3489	4062265	3	True				
ANR	4062384	CallExpression	"printf ( ""Sent signal %d to process %d\\n"" , sig , StarterPid )"		4062265	0					
ANR	4062385	Callee	printf		4062265	0					
ANR	4062386	Identifier	printf		4062265	0					
ANR	4062387	ArgumentList	"""Sent signal %d to process %d\\n"""		4062265	1					
ANR	4062388	Argument	"""Sent signal %d to process %d\\n"""		4062265	0					
ANR	4062389	PrimaryExpression	"""Sent signal %d to process %d\\n"""		4062265	0					
ANR	4062390	Argument	sig		4062265	1					
ANR	4062391	Identifier	sig		4062265	0					
ANR	4062392	Argument	StarterPid		4062265	2					
ANR	4062393	Identifier	StarterPid		4062265	0					
ANR	4062394	ReturnType	void		4062265	1					
ANR	4062395	Identifier	send_sig		4062265	2					
ANR	4062396	ParameterList	int sig		4062265	3					
ANR	4062397	Parameter	int sig	138:10:2917:2923	4062265	0	True				
ANR	4062398	ParameterType	int		4062265	0					
ANR	4062399	Identifier	sig		4062265	1					
ANR	4062400	CFGEntryNode	ENTRY		4062265		True				
ANR	4062401	CFGExitNode	EXIT		4062265		True				
ANR	4062402	Symbol	sig		4062265						
ANR	4062403	Symbol	errno		4062265						
ANR	4062404	Symbol	ESRCH		4062265						
ANR	4062405	Symbol	SIGCONT		4062265						
ANR	4062406	Symbol	StarterPid		4062265						
ANR	4062407	Symbol	kill		4062265						
ANR	4062408	Symbol	stderr		4062265						
ANR	4062409	Function	get_starter_pid	167:0:3544:4437							
ANR	4062410	FunctionDef	get_starter_pid (const char * my_name)		4062409	0					
ANR	4062411	CompoundStatement		169:0:3588:4437	4062409	0					
ANR	4062412	IdentifierDeclStatement	char buf [ 1024 ] ;	170:1:3591:3605	4062409	0	True				
ANR	4062413	IdentifierDecl	buf [ 1024 ]		4062409	0					
ANR	4062414	IdentifierDeclType	char [ 1024 ]		4062409	0					
ANR	4062415	Identifier	buf		4062409	1					
ANR	4062416	PrimaryExpression	1024		4062409	2					
ANR	4062417	IdentifierDeclStatement	FILE * fp ;	171:1:3608:3616	4062409	1	True				
ANR	4062418	IdentifierDecl	* fp		4062409	0					
ANR	4062419	IdentifierDeclType	FILE *		4062409	0					
ANR	4062420	Identifier	fp		4062409	1					
ANR	4062421	IdentifierDeclStatement	char cmd [ 1024 ] ;	172:1:3619:3634	4062409	2	True				
ANR	4062422	IdentifierDecl	cmd [ 1024 ]		4062409	0					
ANR	4062423	IdentifierDeclType	char [ 1024 ]		4062409	0					
ANR	4062424	Identifier	cmd		4062409	1					
ANR	4062425	PrimaryExpression	1024		4062409	2					
ANR	4062426	IdentifierDeclStatement	pid_t answer = 0 ;	173:1:3637:3653	4062409	3	True				
ANR	4062427	IdentifierDecl	answer = 0		4062409	0					
ANR	4062428	IdentifierDeclType	pid_t		4062409	0					
ANR	4062429	Identifier	answer		4062409	1					
ANR	4062430	AssignmentExpression	answer = 0		4062409	2		=			
ANR	4062431	Identifier	answer		4062409	0					
ANR	4062432	PrimaryExpression	0		4062409	1					
ANR	4062433	ExpressionStatement	"sprintf ( cmd , ""ps -ef | egrep %s"" , PROG_NAME )"	176:1:3708:3754	4062409	4	True				
ANR	4062434	CallExpression	"sprintf ( cmd , ""ps -ef | egrep %s"" , PROG_NAME )"		4062409	0					
ANR	4062435	Callee	sprintf		4062409	0					
ANR	4062436	Identifier	sprintf		4062409	0					
ANR	4062437	ArgumentList	cmd		4062409	1					
ANR	4062438	Argument	cmd		4062409	0					
ANR	4062439	Identifier	cmd		4062409	0					
ANR	4062440	Argument	"""ps -ef | egrep %s"""		4062409	1					
ANR	4062441	PrimaryExpression	"""ps -ef | egrep %s"""		4062409	0					
ANR	4062442	Argument	PROG_NAME		4062409	2					
ANR	4062443	Identifier	PROG_NAME		4062409	0					
ANR	4062444	IfStatement	"if ( ( fp = popen ( cmd , ""r"" ) ) == NULL )"		4062409	5					
ANR	4062445	Condition	"( fp = popen ( cmd , ""r"" ) ) == NULL"	181:5:3824:3850	4062409	0	True				
ANR	4062446	EqualityExpression	"( fp = popen ( cmd , ""r"" ) ) == NULL"		4062409	0		==			
ANR	4062447	AssignmentExpression	"fp = popen ( cmd , ""r"" )"		4062409	0		=			
ANR	4062448	Identifier	fp		4062409	0					
ANR	4062449	CallExpression	"popen ( cmd , ""r"" )"		4062409	1					
ANR	4062450	Callee	popen		4062409	0					
ANR	4062451	Identifier	popen		4062409	0					
ANR	4062452	ArgumentList	cmd		4062409	1					
ANR	4062453	Argument	cmd		4062409	0					
ANR	4062454	Identifier	cmd		4062409	0					
ANR	4062455	Argument	"""r"""		4062409	1					
ANR	4062456	PrimaryExpression	"""r"""		4062409	0					
ANR	4062457	Identifier	NULL		4062409	1					
ANR	4062458	CompoundStatement		13:35:265:265	4062409	1					
ANR	4062459	ExpressionStatement	"fprintf ( stderr , ""Can't execute \\""%s\\""\\n"" , cmd )"	182:2:3858:3906	4062409	0	True				
ANR	4062460	CallExpression	"fprintf ( stderr , ""Can't execute \\""%s\\""\\n"" , cmd )"		4062409	0					
ANR	4062461	Callee	fprintf		4062409	0					
ANR	4062462	Identifier	fprintf		4062409	0					
ANR	4062463	ArgumentList	stderr		4062409	1					
ANR	4062464	Argument	stderr		4062409	0					
ANR	4062465	Identifier	stderr		4062409	0					
ANR	4062466	Argument	"""Can't execute \\""%s\\""\\n"""		4062409	1					
ANR	4062467	PrimaryExpression	"""Can't execute \\""%s\\""\\n"""		4062409	0					
ANR	4062468	Argument	cmd		4062409	2					
ANR	4062469	Identifier	cmd		4062409	0					
ANR	4062470	ExpressionStatement	exit ( 1 )	183:2:3910:3919	4062409	1	True				
ANR	4062471	CallExpression	exit ( 1 )		4062409	0					
ANR	4062472	Callee	exit		4062409	0					
ANR	4062473	Identifier	exit		4062409	0					
ANR	4062474	ArgumentList	1		4062409	1					
ANR	4062475	Argument	1		4062409	0					
ANR	4062476	PrimaryExpression	1		4062409	0					
ANR	4062477	WhileStatement	"while ( fgets ( buf , sizeof ( buf ) , fp ) )"		4062409	6					
ANR	4062478	Condition	"fgets ( buf , sizeof ( buf ) , fp )"	185:8:3932:3956	4062409	0	True				
ANR	4062479	CallExpression	"fgets ( buf , sizeof ( buf ) , fp )"		4062409	0					
ANR	4062480	Callee	fgets		4062409	0					
ANR	4062481	Identifier	fgets		4062409	0					
ANR	4062482	ArgumentList	buf		4062409	1					
ANR	4062483	Argument	buf		4062409	0					
ANR	4062484	Identifier	buf		4062409	0					
ANR	4062485	Argument	sizeof ( buf )		4062409	1					
ANR	4062486	SizeofExpression	sizeof ( buf )		4062409	0					
ANR	4062487	Sizeof	sizeof		4062409	0					
ANR	4062488	SizeofOperand	buf		4062409	1					
ANR	4062489	Argument	fp		4062409	2					
ANR	4062490	Identifier	fp		4062409	0					
ANR	4062491	CompoundStatement		17:36:371:371	4062409	1					
ANR	4062492	IfStatement	"if ( contains ( buf , ""egrep"" ) )"		4062409	0					
ANR	4062493	Condition	"contains ( buf , ""egrep"" )"	186:6:3968:3988	4062409	0	True				
ANR	4062494	CallExpression	"contains ( buf , ""egrep"" )"		4062409	0					
ANR	4062495	Callee	contains		4062409	0					
ANR	4062496	Identifier	contains		4062409	0					
ANR	4062497	ArgumentList	buf		4062409	1					
ANR	4062498	Argument	buf		4062409	0					
ANR	4062499	Identifier	buf		4062409	0					
ANR	4062500	Argument	"""egrep"""		4062409	1					
ANR	4062501	PrimaryExpression	"""egrep"""		4062409	0					
ANR	4062502	CompoundStatement		18:30:403:403	4062409	1					
ANR	4062503	ContinueStatement	continue ;	187:3:3997:4005	4062409	0	True				
ANR	4062504	IfStatement	"if ( contains ( buf , my_name ) )"		4062409	1					
ANR	4062505	Condition	"contains ( buf , my_name )"	189:6:4017:4037	4062409	0	True				
ANR	4062506	CallExpression	"contains ( buf , my_name )"		4062409	0					
ANR	4062507	Callee	contains		4062409	0					
ANR	4062508	Identifier	contains		4062409	0					
ANR	4062509	ArgumentList	buf		4062409	1					
ANR	4062510	Argument	buf		4062409	0					
ANR	4062511	Identifier	buf		4062409	0					
ANR	4062512	Argument	my_name		4062409	1					
ANR	4062513	Identifier	my_name		4062409	0					
ANR	4062514	CompoundStatement		21:30:452:452	4062409	1					
ANR	4062515	ContinueStatement	continue ;	190:3:4046:4054	4062409	0	True				
ANR	4062516	IfStatement	"if ( contains ( buf , PROG_NAME ) )"		4062409	2					
ANR	4062517	Condition	"contains ( buf , PROG_NAME )"	192:6:4066:4088	4062409	0	True				
ANR	4062518	CallExpression	"contains ( buf , PROG_NAME )"		4062409	0					
ANR	4062519	Callee	contains		4062409	0					
ANR	4062520	Identifier	contains		4062409	0					
ANR	4062521	ArgumentList	buf		4062409	1					
ANR	4062522	Argument	buf		4062409	0					
ANR	4062523	Identifier	buf		4062409	0					
ANR	4062524	Argument	PROG_NAME		4062409	1					
ANR	4062525	Identifier	PROG_NAME		4062409	0					
ANR	4062526	CompoundStatement		24:32:503:503	4062409	1					
ANR	4062527	IfStatement	if ( answer )		4062409	0					
ANR	4062528	Condition	answer	193:7:4101:4106	4062409	0	True				
ANR	4062529	Identifier	answer		4062409	0					
ANR	4062530	CompoundStatement		25:16:521:521	4062409	1					
ANR	4062531	ExpressionStatement	"fprintf ( stderr , ""Multiple processes named \\""%s\\"" exist\\n"" , PROG_NAME )"	194:4:4116:4196	4062409	0	True				
ANR	4062532	CallExpression	"fprintf ( stderr , ""Multiple processes named \\""%s\\"" exist\\n"" , PROG_NAME )"		4062409	0					
ANR	4062533	Callee	fprintf		4062409	0					
ANR	4062534	Identifier	fprintf		4062409	0					
ANR	4062535	ArgumentList	stderr		4062409	1					
ANR	4062536	Argument	stderr		4062409	0					
ANR	4062537	Identifier	stderr		4062409	0					
ANR	4062538	Argument	"""Multiple processes named \\""%s\\"" exist\\n"""		4062409	1					
ANR	4062539	PrimaryExpression	"""Multiple processes named \\""%s\\"" exist\\n"""		4062409	0					
ANR	4062540	Argument	PROG_NAME		4062409	2					
ANR	4062541	Identifier	PROG_NAME		4062409	0					
ANR	4062542	ExpressionStatement	exit ( 1 )	197:4:4202:4211	4062409	1	True				
ANR	4062543	CallExpression	exit ( 1 )		4062409	0					
ANR	4062544	Callee	exit		4062409	0					
ANR	4062545	Identifier	exit		4062409	0					
ANR	4062546	ArgumentList	1		4062409	1					
ANR	4062547	Argument	1		4062409	0					
ANR	4062548	PrimaryExpression	1		4062409	0					
ANR	4062549	ExpressionStatement	answer = get_pid ( buf )	199:3:4221:4242	4062409	1	True				
ANR	4062550	AssignmentExpression	answer = get_pid ( buf )		4062409	0		=			
ANR	4062551	Identifier	answer		4062409	0					
ANR	4062552	CallExpression	get_pid ( buf )		4062409	1					
ANR	4062553	Callee	get_pid		4062409	0					
ANR	4062554	Identifier	get_pid		4062409	0					
ANR	4062555	ArgumentList	buf		4062409	1					
ANR	4062556	Argument	buf		4062409	0					
ANR	4062557	Identifier	buf		4062409	0					
ANR	4062558	ExpressionStatement	( void ) pclose ( fp )	202:1:4252:4270	4062409	7	True				
ANR	4062559	CastExpression	( void ) pclose ( fp )		4062409	0					
ANR	4062560	CastTarget	void		4062409	0					
ANR	4062561	CallExpression	pclose ( fp )		4062409	1					
ANR	4062562	Callee	pclose		4062409	0					
ANR	4062563	Identifier	pclose		4062409	0					
ANR	4062564	ArgumentList	fp		4062409	1					
ANR	4062565	Argument	fp		4062409	0					
ANR	4062566	Identifier	fp		4062409	0					
ANR	4062567	IfStatement	if ( answer )		4062409	8					
ANR	4062568	Condition	answer	203:5:4277:4282	4062409	0	True				
ANR	4062569	Identifier	answer		4062409	0					
ANR	4062570	CompoundStatement		35:14:697:697	4062409	1					
ANR	4062571	ExpressionStatement	"printf ( ""Process \\""%s\\"" PID is %d\\n"" , PROG_NAME , answer )"	204:2:4290:4347	4062409	0	True				
ANR	4062572	CallExpression	"printf ( ""Process \\""%s\\"" PID is %d\\n"" , PROG_NAME , answer )"		4062409	0					
ANR	4062573	Callee	printf		4062409	0					
ANR	4062574	Identifier	printf		4062409	0					
ANR	4062575	ArgumentList	"""Process \\""%s\\"" PID is %d\\n"""		4062409	1					
ANR	4062576	Argument	"""Process \\""%s\\"" PID is %d\\n"""		4062409	0					
ANR	4062577	PrimaryExpression	"""Process \\""%s\\"" PID is %d\\n"""		4062409	0					
ANR	4062578	Argument	PROG_NAME		4062409	1					
ANR	4062579	Identifier	PROG_NAME		4062409	0					
ANR	4062580	Argument	answer		4062409	2					
ANR	4062581	Identifier	answer		4062409	0					
ANR	4062582	ReturnStatement	return answer ;	205:2:4351:4364	4062409	1	True				
ANR	4062583	Identifier	answer		4062409	0					
ANR	4062584	ElseStatement	else		4062409	0					
ANR	4062585	CompoundStatement		38:8:785:785	4062409	0					
ANR	4062586	ExpressionStatement	"printf ( ""Can't find \\""%s\\""\\n"" , PROG_NAME )"	207:2:4378:4420	4062409	0	True				
ANR	4062587	CallExpression	"printf ( ""Can't find \\""%s\\""\\n"" , PROG_NAME )"		4062409	0					
ANR	4062588	Callee	printf		4062409	0					
ANR	4062589	Identifier	printf		4062409	0					
ANR	4062590	ArgumentList	"""Can't find \\""%s\\""\\n"""		4062409	1					
ANR	4062591	Argument	"""Can't find \\""%s\\""\\n"""		4062409	0					
ANR	4062592	PrimaryExpression	"""Can't find \\""%s\\""\\n"""		4062409	0					
ANR	4062593	Argument	PROG_NAME		4062409	1					
ANR	4062594	Identifier	PROG_NAME		4062409	0					
ANR	4062595	ReturnStatement	return 0 ;	208:2:4424:4432	4062409	1	True				
ANR	4062596	PrimaryExpression	0		4062409	0					
ANR	4062597	ReturnType	pid_t		4062409	1					
ANR	4062598	Identifier	get_starter_pid		4062409	2					
ANR	4062599	ParameterList	const char * my_name		4062409	3					
ANR	4062600	Parameter	const char * my_name	168:17:3567:3585	4062409	0	True				
ANR	4062601	ParameterType	const char *		4062409	0					
ANR	4062602	Identifier	my_name		4062409	1					
ANR	4062603	CFGEntryNode	ENTRY		4062409		True				
ANR	4062604	CFGExitNode	EXIT		4062409		True				
ANR	4062605	Symbol	my_name		4062409						
ANR	4062606	Symbol	buf		4062409						
ANR	4062607	Symbol	contains		4062409						
ANR	4062608	Symbol	NULL		4062409						
ANR	4062609	Symbol	answer		4062409						
ANR	4062610	Symbol	popen		4062409						
ANR	4062611	Symbol	PROG_NAME		4062409						
ANR	4062612	Symbol	get_pid		4062409						
ANR	4062613	Symbol	fp		4062409						
ANR	4062614	Symbol	cmd		4062409						
ANR	4062615	Symbol	stderr		4062409						
ANR	4062616	Symbol	fgets		4062409						
ANR	4062617	Function	check_starter	212:0:4440:4676							
ANR	4062618	FunctionDef	check_starter ()		4062617	0					
ANR	4062619	CompoundStatement		214:0:4461:4676	4062617	0					
ANR	4062620	IfStatement	"if ( kill ( StarterPid , 0 ) < 0 )"		4062617	0					
ANR	4062621	Condition	"kill ( StarterPid , 0 ) < 0"	215:5:4468:4489	4062617	0	True				
ANR	4062622	RelationalExpression	"kill ( StarterPid , 0 ) < 0"		4062617	0		<			
ANR	4062623	CallExpression	"kill ( StarterPid , 0 )"		4062617	0					
ANR	4062624	Callee	kill		4062617	0					
ANR	4062625	Identifier	kill		4062617	0					
ANR	4062626	ArgumentList	StarterPid		4062617	1					
ANR	4062627	Argument	StarterPid		4062617	0					
ANR	4062628	Identifier	StarterPid		4062617	0					
ANR	4062629	Argument	0		4062617	1					
ANR	4062630	PrimaryExpression	0		4062617	0					
ANR	4062631	PrimaryExpression	0		4062617	1					
ANR	4062632	CompoundStatement		2:30:31:31	4062617	1					
ANR	4062633	IfStatement	if ( errno == ESRCH )		4062617	0					
ANR	4062634	Condition	errno == ESRCH	216:6:4501:4514	4062617	0	True				
ANR	4062635	EqualityExpression	errno == ESRCH		4062617	0		==			
ANR	4062636	Identifier	errno		4062617	0					
ANR	4062637	Identifier	ESRCH		4062617	1					
ANR	4062638	CompoundStatement		3:23:56:56	4062617	1					
ANR	4062639	ExpressionStatement	"printf ( ""Starter %d exited\\n"" , StarterPid )"	217:3:4523:4566	4062617	0	True				
ANR	4062640	CallExpression	"printf ( ""Starter %d exited\\n"" , StarterPid )"		4062617	0					
ANR	4062641	Callee	printf		4062617	0					
ANR	4062642	Identifier	printf		4062617	0					
ANR	4062643	ArgumentList	"""Starter %d exited\\n"""		4062617	1					
ANR	4062644	Argument	"""Starter %d exited\\n"""		4062617	0					
ANR	4062645	PrimaryExpression	"""Starter %d exited\\n"""		4062617	0					
ANR	4062646	Argument	StarterPid		4062617	1					
ANR	4062647	Identifier	StarterPid		4062617	0					
ANR	4062648	ExpressionStatement	exit ( 0 )	218:3:4571:4580	4062617	1	True				
ANR	4062649	CallExpression	exit ( 0 )		4062617	0					
ANR	4062650	Callee	exit		4062617	0					
ANR	4062651	Identifier	exit		4062617	0					
ANR	4062652	ArgumentList	0		4062617	1					
ANR	4062653	Argument	0		4062617	0					
ANR	4062654	PrimaryExpression	0		4062617	0					
ANR	4062655	ElseStatement	else		4062617	0					
ANR	4062656	CompoundStatement		6:9:129:129	4062617	0					
ANR	4062657	ExpressionStatement	"printf ( ""Can't send signal to starter %d\\n"" , StarterPid )"	220:3:4596:4653	4062617	0	True				
ANR	4062658	CallExpression	"printf ( ""Can't send signal to starter %d\\n"" , StarterPid )"		4062617	0					
ANR	4062659	Callee	printf		4062617	0					
ANR	4062660	Identifier	printf		4062617	0					
ANR	4062661	ArgumentList	"""Can't send signal to starter %d\\n"""		4062617	1					
ANR	4062662	Argument	"""Can't send signal to starter %d\\n"""		4062617	0					
ANR	4062663	PrimaryExpression	"""Can't send signal to starter %d\\n"""		4062617	0					
ANR	4062664	Argument	StarterPid		4062617	1					
ANR	4062665	Identifier	StarterPid		4062617	0					
ANR	4062666	ExpressionStatement	exit ( 1 )	221:3:4658:4667	4062617	1	True				
ANR	4062667	CallExpression	exit ( 1 )		4062617	0					
ANR	4062668	Callee	exit		4062617	0					
ANR	4062669	Identifier	exit		4062617	0					
ANR	4062670	ArgumentList	1		4062617	1					
ANR	4062671	Argument	1		4062617	0					
ANR	4062672	PrimaryExpression	1		4062617	0					
ANR	4062673	ReturnType	void		4062617	1					
ANR	4062674	Identifier	check_starter		4062617	2					
ANR	4062675	ParameterList			4062617	3					
ANR	4062676	CFGEntryNode	ENTRY		4062617		True				
ANR	4062677	CFGExitNode	EXIT		4062617		True				
ANR	4062678	Symbol	errno		4062617						
ANR	4062679	Symbol	ESRCH		4062617						
ANR	4062680	Symbol	StarterPid		4062617						
ANR	4062681	Symbol	kill		4062617						
ANR	4062682	Function	contains	229:0:4755:4960							
ANR	4062683	FunctionDef	"contains (const char * str , const char * targ)"		4062682	0					
ANR	4062684	CompoundStatement		231:0:4805:4960	4062682	0					
ANR	4062685	IdentifierDeclStatement	int len = strlen ( targ ) ;	232:1:4808:4833	4062682	0	True				
ANR	4062686	IdentifierDecl	len = strlen ( targ )		4062682	0					
ANR	4062687	IdentifierDeclType	int		4062682	0					
ANR	4062688	Identifier	len		4062682	1					
ANR	4062689	AssignmentExpression	len = strlen ( targ )		4062682	2		=			
ANR	4062690	Identifier	len		4062682	0					
ANR	4062691	CallExpression	strlen ( targ )		4062682	1					
ANR	4062692	Callee	strlen		4062682	0					
ANR	4062693	Identifier	strlen		4062682	0					
ANR	4062694	ArgumentList	targ		4062682	1					
ANR	4062695	Argument	targ		4062682	0					
ANR	4062696	Identifier	targ		4062682	0					
ANR	4062697	IdentifierDeclStatement	const char * ptr ;	233:1:4836:4851	4062682	1	True				
ANR	4062698	IdentifierDecl	* ptr		4062682	0					
ANR	4062699	IdentifierDeclType	const char *		4062682	0					
ANR	4062700	Identifier	ptr		4062682	1					
ANR	4062701	ForStatement	for ( ptr = str ; * ptr ; ptr ++ )		4062682	2					
ANR	4062702	ForInit	ptr = str ;	235:6:4860:4867	4062682	0	True				
ANR	4062703	AssignmentExpression	ptr = str		4062682	0		=			
ANR	4062704	Identifier	ptr		4062682	0					
ANR	4062705	Identifier	str		4062682	1					
ANR	4062706	Condition	* ptr	235:15:4869:4872	4062682	1	True				
ANR	4062707	UnaryOperationExpression	* ptr		4062682	0					
ANR	4062708	UnaryOperator	*		4062682	0					
ANR	4062709	Identifier	ptr		4062682	1					
ANR	4062710	PostIncDecOperationExpression	ptr ++	235:21:4875:4879	4062682	2	True				
ANR	4062711	Identifier	ptr		4062682	0					
ANR	4062712	IncDec	++		4062682	1					
ANR	4062713	CompoundStatement		5:29:77:77	4062682	3					
ANR	4062714	IfStatement	"if ( strncmp ( ptr , targ , len ) == 0 )"		4062682	0					
ANR	4062715	Condition	"strncmp ( ptr , targ , len ) == 0"	236:6:4891:4916	4062682	0	True				
ANR	4062716	EqualityExpression	"strncmp ( ptr , targ , len ) == 0"		4062682	0		==			
ANR	4062717	CallExpression	"strncmp ( ptr , targ , len )"		4062682	0					
ANR	4062718	Callee	strncmp		4062682	0					
ANR	4062719	Identifier	strncmp		4062682	0					
ANR	4062720	ArgumentList	ptr		4062682	1					
ANR	4062721	Argument	ptr		4062682	0					
ANR	4062722	Identifier	ptr		4062682	0					
ANR	4062723	Argument	targ		4062682	1					
ANR	4062724	Identifier	targ		4062682	0					
ANR	4062725	Argument	len		4062682	2					
ANR	4062726	Identifier	len		4062682	0					
ANR	4062727	PrimaryExpression	0		4062682	1					
ANR	4062728	CompoundStatement		6:35:114:114	4062682	1					
ANR	4062729	ReturnStatement	return TRUE ;	237:3:4925:4936	4062682	0	True				
ANR	4062730	Identifier	TRUE		4062682	0					
ANR	4062731	ReturnStatement	return FALSE ;	240:1:4946:4958	4062682	3	True				
ANR	4062732	Identifier	FALSE		4062682	0					
ANR	4062733	ReturnType	int		4062682	1					
ANR	4062734	Identifier	contains		4062682	2					
ANR	4062735	ParameterList	"const char * str , const char * targ"		4062682	3					
ANR	4062736	Parameter	const char * str	230:10:4769:4783	4062682	0	True				
ANR	4062737	ParameterType	const char *		4062682	0					
ANR	4062738	Identifier	str		4062682	1					
ANR	4062739	Parameter	const char * targ	230:27:4786:4801	4062682	1	True				
ANR	4062740	ParameterType	const char *		4062682	0					
ANR	4062741	Identifier	targ		4062682	1					
ANR	4062742	CFGEntryNode	ENTRY		4062682		True				
ANR	4062743	CFGExitNode	EXIT		4062682		True				
ANR	4062744	Symbol	str		4062682						
ANR	4062745	Symbol	strlen		4062682						
ANR	4062746	Symbol	strncmp		4062682						
ANR	4062747	Symbol	targ		4062682						
ANR	4062748	Symbol	len		4062682						
ANR	4062749	Symbol	* ptr		4062682						
ANR	4062750	Symbol	TRUE		4062682						
ANR	4062751	Symbol	FALSE		4062682						
ANR	4062752	Symbol	ptr		4062682						
ANR	4062753	Function	get_pid	243:0:4963:5111							
ANR	4062754	FunctionDef	get_pid (const char * str)		4062753	0					
ANR	4062755	CompoundStatement		245:0:4996:5111	4062753	0					
ANR	4062756	IdentifierDeclStatement	const char * ptr ;	246:1:4999:5014	4062753	0	True				
ANR	4062757	IdentifierDecl	* ptr		4062753	0					
ANR	4062758	IdentifierDeclType	const char *		4062753	0					
ANR	4062759	Identifier	ptr		4062753	1					
ANR	4062760	ForStatement	for ( ptr = str ; * ptr ; ptr ++ )		4062753	1					
ANR	4062761	ForInit	ptr = str ;	248:6:5023:5030	4062753	0	True				
ANR	4062762	AssignmentExpression	ptr = str		4062753	0		=			
ANR	4062763	Identifier	ptr		4062753	0					
ANR	4062764	Identifier	str		4062753	1					
ANR	4062765	Condition	* ptr	248:15:5032:5035	4062753	1	True				
ANR	4062766	UnaryOperationExpression	* ptr		4062753	0					
ANR	4062767	UnaryOperator	*		4062753	0					
ANR	4062768	Identifier	ptr		4062753	1					
ANR	4062769	PostIncDecOperationExpression	ptr ++	248:21:5038:5042	4062753	2	True				
ANR	4062770	Identifier	ptr		4062753	0					
ANR	4062771	IncDec	++		4062753	1					
ANR	4062772	CompoundStatement		4:29:49:49	4062753	3					
ANR	4062773	IfStatement	if ( isdigit ( * ptr ) )		4062753	0					
ANR	4062774	Condition	isdigit ( * ptr )	249:6:5054:5066	4062753	0	True				
ANR	4062775	CallExpression	isdigit ( * ptr )		4062753	0					
ANR	4062776	Callee	isdigit		4062753	0					
ANR	4062777	Identifier	isdigit		4062753	0					
ANR	4062778	ArgumentList	* ptr		4062753	1					
ANR	4062779	Argument	* ptr		4062753	0					
ANR	4062780	UnaryOperationExpression	* ptr		4062753	0					
ANR	4062781	UnaryOperator	*		4062753	0					
ANR	4062782	Identifier	ptr		4062753	1					
ANR	4062783	CompoundStatement		5:22:73:73	4062753	1					
ANR	4062784	ReturnStatement	return atoi ( ptr ) ;	250:3:5075:5091	4062753	0	True				
ANR	4062785	CallExpression	atoi ( ptr )		4062753	0					
ANR	4062786	Callee	atoi		4062753	0					
ANR	4062787	Identifier	atoi		4062753	0					
ANR	4062788	ArgumentList	ptr		4062753	1					
ANR	4062789	Argument	ptr		4062753	0					
ANR	4062790	Identifier	ptr		4062753	0					
ANR	4062791	ReturnStatement	return 0 ;	253:1:5101:5109	4062753	2	True				
ANR	4062792	PrimaryExpression	0		4062753	0					
ANR	4062793	ReturnType	pid_t		4062753	1					
ANR	4062794	Identifier	get_pid		4062753	2					
ANR	4062795	ParameterList	const char * str		4062753	3					
ANR	4062796	Parameter	const char * str	244:9:4978:4992	4062753	0	True				
ANR	4062797	ParameterType	const char *		4062753	0					
ANR	4062798	Identifier	str		4062753	1					
ANR	4062799	CFGEntryNode	ENTRY		4062753		True				
ANR	4062800	CFGExitNode	EXIT		4062753		True				
ANR	4062801	Symbol	str		4062753						
ANR	4062802	Symbol	atoi		4062753						
ANR	4062803	Symbol	* ptr		4062753						
ANR	4062804	Symbol	isdigit		4062753						
ANR	4062805	Symbol	ptr		4062753						
