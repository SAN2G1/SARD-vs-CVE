command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4812404	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_log_transaction.cpp								
ANR	4812405	ClassDef	backup_filter_t	64:0:2491:2724							
ANR	4812406	ClassDef	<unnamed>	72:8:2736:2893							
ANR	4812407	DeclStmt									
ANR	4812408	Decl							backup_filter_t	backup_filter_t	filt
ANR	4812409	DeclStmt									
ANR	4812410	Decl							char	char *	fn
ANR	4812411	DeclStmt									
ANR	4812412	Decl							FILE	FILE *	fp
ANR	4812413	DeclStmt									
ANR	4812414	Decl							bool	bool	success
ANR	4812415	DeclStmt									
ANR	4812416	Decl									backup_info_t
ANR	4812417	ClassDef	stream_failure_t	82:0:2933:3147							
ANR	4812418	ClassDef	<unnamed>	97:8:3347:3566							
ANR	4812419	DeclStmt									
ANR	4812420	Decl							FILE	FILE *	fp
ANR	4812421	DeclStmt									
ANR	4812422	Decl							stream_failure_t	stream_failure_t	why
ANR	4812423	DeclStmt									
ANR	4812424	Decl							int	int	err
ANR	4812425	DeclStmt									
ANR	4812426	Decl									stream_with_status_t
ANR	4812427	Function	cleanup_backup_info	109:0:3672:3844							
ANR	4812428	FunctionDef	cleanup_backup_info (backup_info_t * bi)		4812427	0					
ANR	4812429	CompoundStatement		111:0:3725:3844	4812427	0					
ANR	4812430	IfStatement	if ( bi -> fn )		4812427	0					
ANR	4812431	Condition	bi -> fn	112:6:3733:3738	4812427	0	True				
ANR	4812432	PtrMemberAccess	bi -> fn		4812427	0					
ANR	4812433	Identifier	bi		4812427	0					
ANR	4812434	Identifier	fn		4812427	1					
ANR	4812435	CompoundStatement		2:14:15:15	4812427	1					
ANR	4812436	ExpressionStatement	free ( bi -> fn )	113:4:3747:3759	4812427	0	True				
ANR	4812437	CallExpression	free ( bi -> fn )		4812427	0					
ANR	4812438	Callee	free		4812427	0					
ANR	4812439	Identifier	free		4812427	0					
ANR	4812440	ArgumentList	bi -> fn		4812427	1					
ANR	4812441	Argument	bi -> fn		4812427	0					
ANR	4812442	PtrMemberAccess	bi -> fn		4812427	0					
ANR	4812443	Identifier	bi		4812427	0					
ANR	4812444	Identifier	fn		4812427	1					
ANR	4812445	ExpressionStatement	bi -> fn = NULL	114:4:3765:3778	4812427	1	True				
ANR	4812446	AssignmentExpression	bi -> fn = NULL		4812427	0		=			
ANR	4812447	PtrMemberAccess	bi -> fn		4812427	0					
ANR	4812448	Identifier	bi		4812427	0					
ANR	4812449	Identifier	fn		4812427	1					
ANR	4812450	Identifier	NULL		4812427	1					
ANR	4812451	IfStatement	if ( bi -> fp )		4812427	1					
ANR	4812452	Condition	bi -> fp	117:6:3791:3796	4812427	0	True				
ANR	4812453	PtrMemberAccess	bi -> fp		4812427	0					
ANR	4812454	Identifier	bi		4812427	0					
ANR	4812455	Identifier	fp		4812427	1					
ANR	4812456	CompoundStatement		7:14:73:73	4812427	1					
ANR	4812457	ExpressionStatement	fclose ( bi -> fp )	118:4:3805:3819	4812427	0	True				
ANR	4812458	CallExpression	fclose ( bi -> fp )		4812427	0					
ANR	4812459	Callee	fclose		4812427	0					
ANR	4812460	Identifier	fclose		4812427	0					
ANR	4812461	ArgumentList	bi -> fp		4812427	1					
ANR	4812462	Argument	bi -> fp		4812427	0					
ANR	4812463	PtrMemberAccess	bi -> fp		4812427	0					
ANR	4812464	Identifier	bi		4812427	0					
ANR	4812465	Identifier	fp		4812427	1					
ANR	4812466	ExpressionStatement	bi -> fp = NULL	119:4:3825:3838	4812427	1	True				
ANR	4812467	AssignmentExpression	bi -> fp = NULL		4812427	0		=			
ANR	4812468	PtrMemberAccess	bi -> fp		4812427	0					
ANR	4812469	Identifier	bi		4812427	0					
ANR	4812470	Identifier	fp		4812427	1					
ANR	4812471	Identifier	NULL		4812427	1					
ANR	4812472	ReturnType	static void		4812427	1					
ANR	4812473	Identifier	cleanup_backup_info		4812427	2					
ANR	4812474	ParameterList	backup_info_t * bi		4812427	3					
ANR	4812475	Parameter	backup_info_t * bi	110:20:3705:3721	4812427	0	True				
ANR	4812476	ParameterType	backup_info_t *		4812427	0					
ANR	4812477	Identifier	bi		4812427	1					
ANR	4812478	CFGEntryNode	ENTRY		4812427		True				
ANR	4812479	CFGExitNode	EXIT		4812427		True				
ANR	4812480	Symbol	NULL		4812427						
ANR	4812481	Symbol	bi -> fp		4812427						
ANR	4812482	Symbol	bi		4812427						
ANR	4812483	Symbol	bi -> fn		4812427						
ANR	4812484	Symbol	* bi		4812427						
ANR	4812485	Function	remove_backup_file	123:0:3847:4041							
ANR	4812486	FunctionDef	remove_backup_file (backup_info_t * bi)		4812485	0					
ANR	4812487	CompoundStatement		125:0:3899:4041	4812485	0					
ANR	4812488	IfStatement	if ( bi -> fn != NULL )		4812485	0					
ANR	4812489	Condition	bi -> fn != NULL	126:6:3907:3920	4812485	0	True				
ANR	4812490	EqualityExpression	bi -> fn != NULL		4812485	0		!=			
ANR	4812491	PtrMemberAccess	bi -> fn		4812485	0					
ANR	4812492	Identifier	bi		4812485	0					
ANR	4812493	Identifier	fn		4812485	1					
ANR	4812494	Identifier	NULL		4812485	1					
ANR	4812495	CompoundStatement		2:22:23:23	4812485	1					
ANR	4812496	ExpressionStatement	unlink ( bi -> fn )	129:4:4020:4034	4812485	0	True				
ANR	4812497	CallExpression	unlink ( bi -> fn )		4812485	0					
ANR	4812498	Callee	unlink		4812485	0					
ANR	4812499	Identifier	unlink		4812485	0					
ANR	4812500	ArgumentList	bi -> fn		4812485	1					
ANR	4812501	Argument	bi -> fn		4812485	0					
ANR	4812502	PtrMemberAccess	bi -> fn		4812485	0					
ANR	4812503	Identifier	bi		4812485	0					
ANR	4812504	Identifier	fn		4812485	1					
ANR	4812505	ReturnType	static void		4812485	1					
ANR	4812506	Identifier	remove_backup_file		4812485	2					
ANR	4812507	ParameterList	backup_info_t * bi		4812485	3					
ANR	4812508	Parameter	backup_info_t * bi	124:19:3879:3895	4812485	0	True				
ANR	4812509	ParameterType	backup_info_t *		4812485	0					
ANR	4812510	Identifier	bi		4812485	1					
ANR	4812511	CFGEntryNode	ENTRY		4812485		True				
ANR	4812512	CFGExitNode	EXIT		4812485		True				
ANR	4812513	Symbol	NULL		4812485						
ANR	4812514	Symbol	bi		4812485						
ANR	4812515	Symbol	bi -> fn		4812485						
ANR	4812516	Symbol	* bi		4812485						
ANR	4812517	DeclStmt									
ANR	4812518	Decl							MyString	MyString	local_file
ANR	4812519	DeclStmt									
ANR	4812520	Decl							int	int	local_fd
ANR	4812521	DeclStmt									
ANR	4812522	Decl							char	char *	filter
ANR	4812523	DeclStmt									
ANR	4812524	Decl							char	char *	dir
ANR	4812525	Function	init_stream_with_status	222:0:6311:6457							
ANR	4812526	FunctionDef	"init_stream_with_status (stream_with_status_t * s , FILE * fp)"		4812525	0					
ANR	4812527	CompoundStatement		224:0:6384:6457	4812525	0					
ANR	4812528	ExpressionStatement	ASSERT ( s )	225:2:6388:6397	4812525	0	True				
ANR	4812529	CallExpression	ASSERT ( s )		4812525	0					
ANR	4812530	Callee	ASSERT		4812525	0					
ANR	4812531	Identifier	ASSERT		4812525	0					
ANR	4812532	ArgumentList	s		4812525	1					
ANR	4812533	Argument	s		4812525	0					
ANR	4812534	Identifier	s		4812525	0					
ANR	4812535	ExpressionStatement	s -> fp = fp	227:2:6402:6412	4812525	1	True				
ANR	4812536	AssignmentExpression	s -> fp = fp		4812525	0		=			
ANR	4812537	PtrMemberAccess	s -> fp		4812525	0					
ANR	4812538	Identifier	s		4812525	0					
ANR	4812539	Identifier	fp		4812525	1					
ANR	4812540	Identifier	fp		4812525	1					
ANR	4812541	ExpressionStatement	s -> why = WHY_OK	228:2:6416:6431	4812525	2	True				
ANR	4812542	AssignmentExpression	s -> why = WHY_OK		4812525	0		=			
ANR	4812543	PtrMemberAccess	s -> why		4812525	0					
ANR	4812544	Identifier	s		4812525	0					
ANR	4812545	Identifier	why		4812525	1					
ANR	4812546	Identifier	WHY_OK		4812525	1					
ANR	4812547	ExpressionStatement	s -> err = 0	229:2:6435:6445	4812525	3	True				
ANR	4812548	AssignmentExpression	s -> err = 0		4812525	0		=			
ANR	4812549	PtrMemberAccess	s -> err		4812525	0					
ANR	4812550	Identifier	s		4812525	0					
ANR	4812551	Identifier	err		4812525	1					
ANR	4812552	PrimaryExpression	0		4812525	1					
ANR	4812553	ReturnStatement	return ;	230:2:6449:6455	4812525	4	True				
ANR	4812554	ReturnType	static void		4812525	1					
ANR	4812555	Identifier	init_stream_with_status		4812525	2					
ANR	4812556	ParameterList	"stream_with_status_t * s , FILE * fp"		4812525	3					
ANR	4812557	Parameter	stream_with_status_t * s	223:24:6348:6370	4812525	0	True				
ANR	4812558	ParameterType	stream_with_status_t *		4812525	0					
ANR	4812559	Identifier	s		4812525	1					
ANR	4812560	Parameter	FILE * fp	223:49:6373:6380	4812525	1	True				
ANR	4812561	ParameterType	FILE *		4812525	0					
ANR	4812562	Identifier	fp		4812525	1					
ANR	4812563	CFGEntryNode	ENTRY		4812525		True				
ANR	4812564	CFGExitNode	EXIT		4812525		True				
ANR	4812565	Symbol	s -> err		4812525						
ANR	4812566	Symbol	s -> fp		4812525						
ANR	4812567	Symbol	s		4812525						
ANR	4812568	Symbol	s -> why		4812525						
ANR	4812569	Symbol	WHY_OK		4812525						
ANR	4812570	Symbol	fp		4812525						
ANR	4812571	Symbol	* s		4812525						
ANR	4812572	Function	write_with_status	244:0:6855:7147							
ANR	4812573	FunctionDef	"write_with_status (LogRecord * log , stream_with_status_t * s)"		4812572	0					
ANR	4812574	CompoundStatement		246:0:6927:7147	4812572	0					
ANR	4812575	ExpressionStatement	ASSERT ( s )	247:2:6931:6940	4812572	0	True				
ANR	4812576	CallExpression	ASSERT ( s )		4812572	0					
ANR	4812577	Callee	ASSERT		4812572	0					
ANR	4812578	Identifier	ASSERT		4812572	0					
ANR	4812579	ArgumentList	s		4812572	1					
ANR	4812580	Argument	s		4812572	0					
ANR	4812581	Identifier	s		4812572	0					
ANR	4812582	IfStatement	if ( s -> fp == NULL || s -> why != WHY_OK )		4812572	1					
ANR	4812583	Condition	s -> fp == NULL || s -> why != WHY_OK	249:6:6949:6981	4812572	0	True				
ANR	4812584	OrExpression	s -> fp == NULL || s -> why != WHY_OK		4812572	0		||			
ANR	4812585	EqualityExpression	s -> fp == NULL		4812572	0		==			
ANR	4812586	PtrMemberAccess	s -> fp		4812572	0					
ANR	4812587	Identifier	s		4812572	0					
ANR	4812588	Identifier	fp		4812572	1					
ANR	4812589	Identifier	NULL		4812572	1					
ANR	4812590	EqualityExpression	s -> why != WHY_OK		4812572	1		!=			
ANR	4812591	PtrMemberAccess	s -> why		4812572	0					
ANR	4812592	Identifier	s		4812572	0					
ANR	4812593	Identifier	why		4812572	1					
ANR	4812594	Identifier	WHY_OK		4812572	1					
ANR	4812595	CompoundStatement		4:41:56:56	4812572	1					
ANR	4812596	ReturnStatement	return 0 ;	250:4:6990:6998	4812572	0	True				
ANR	4812597	PrimaryExpression	0		4812572	0					
ANR	4812598	IfStatement	if ( log -> Write ( s -> fp ) < 0 )		4812572	2					
ANR	4812599	Condition	log -> Write ( s -> fp ) < 0	253:6:7044:7064	4812572	0	True				
ANR	4812600	RelationalExpression	log -> Write ( s -> fp ) < 0		4812572	0		<			
ANR	4812601	CallExpression	log -> Write ( s -> fp )		4812572	0					
ANR	4812602	Callee	log -> Write		4812572	0					
ANR	4812603	PtrMemberAccess	log -> Write		4812572	0					
ANR	4812604	Identifier	log		4812572	0					
ANR	4812605	Identifier	Write		4812572	1					
ANR	4812606	ArgumentList	s -> fp		4812572	1					
ANR	4812607	Argument	s -> fp		4812572	0					
ANR	4812608	PtrMemberAccess	s -> fp		4812572	0					
ANR	4812609	Identifier	s		4812572	0					
ANR	4812610	Identifier	fp		4812572	1					
ANR	4812611	PrimaryExpression	0		4812572	1					
ANR	4812612	CompoundStatement		8:29:139:139	4812572	1					
ANR	4812613	ExpressionStatement	s -> why = WHY_WRITE	254:4:7073:7091	4812572	0	True				
ANR	4812614	AssignmentExpression	s -> why = WHY_WRITE		4812572	0		=			
ANR	4812615	PtrMemberAccess	s -> why		4812572	0					
ANR	4812616	Identifier	s		4812572	0					
ANR	4812617	Identifier	why		4812572	1					
ANR	4812618	Identifier	WHY_WRITE		4812572	1					
ANR	4812619	ExpressionStatement	s -> err = errno	255:4:7097:7111	4812572	1	True				
ANR	4812620	AssignmentExpression	s -> err = errno		4812572	0		=			
ANR	4812621	PtrMemberAccess	s -> err		4812572	0					
ANR	4812622	Identifier	s		4812572	0					
ANR	4812623	Identifier	err		4812572	1					
ANR	4812624	Identifier	errno		4812572	1					
ANR	4812625	ReturnStatement	return - 1 ;	256:4:7117:7126	4812572	2	True				
ANR	4812626	UnaryOperationExpression	- 1		4812572	0					
ANR	4812627	UnaryOperator	-		4812572	0					
ANR	4812628	PrimaryExpression	1		4812572	1					
ANR	4812629	ReturnStatement	return 0 ;	259:2:7137:7145	4812572	3	True				
ANR	4812630	PrimaryExpression	0		4812572	0					
ANR	4812631	ReturnType	static int		4812572	1					
ANR	4812632	Identifier	write_with_status		4812572	2					
ANR	4812633	ParameterList	"LogRecord * log , stream_with_status_t * s"		4812572	3					
ANR	4812634	Parameter	LogRecord * log	245:18:6885:6898	4812572	0	True				
ANR	4812635	ParameterType	LogRecord *		4812572	0					
ANR	4812636	Identifier	log		4812572	1					
ANR	4812637	Parameter	stream_with_status_t * s	245:34:6901:6923	4812572	1	True				
ANR	4812638	ParameterType	stream_with_status_t *		4812572	0					
ANR	4812639	Identifier	s		4812572	1					
ANR	4812640	CFGEntryNode	ENTRY		4812572		True				
ANR	4812641	CFGExitNode	EXIT		4812572		True				
ANR	4812642	Symbol	s -> err		4812572						
ANR	4812643	Symbol	s -> fp		4812572						
ANR	4812644	Symbol	errno		4812572						
ANR	4812645	Symbol	s		4812572						
ANR	4812646	Symbol	NULL		4812572						
ANR	4812647	Symbol	s -> why		4812572						
ANR	4812648	Symbol	log		4812572						
ANR	4812649	Symbol	WHY_OK		4812572						
ANR	4812650	Symbol	WHY_WRITE		4812572						
ANR	4812651	Symbol	log -> Write		4812572						
ANR	4812652	Symbol	* s		4812572						
ANR	4812653	Symbol	* log		4812572						
ANR	4812654	Function	fclose_with_status	262:0:7150:7432							
ANR	4812655	FunctionDef	fclose_with_status (stream_with_status_t * s)		4812654	0					
ANR	4812656	CompoundStatement		264:0:7207:7432	4812654	0					
ANR	4812657	ExpressionStatement	ASSERT ( s )	265:2:7211:7220	4812654	0	True				
ANR	4812658	CallExpression	ASSERT ( s )		4812654	0					
ANR	4812659	Callee	ASSERT		4812654	0					
ANR	4812660	Identifier	ASSERT		4812654	0					
ANR	4812661	ArgumentList	s		4812654	1					
ANR	4812662	Argument	s		4812654	0					
ANR	4812663	Identifier	s		4812654	0					
ANR	4812664	IfStatement	if ( s -> fp == NULL )		4812654	1					
ANR	4812665	Condition	s -> fp == NULL	267:6:7229:7241	4812654	0	True				
ANR	4812666	EqualityExpression	s -> fp == NULL		4812654	0		==			
ANR	4812667	PtrMemberAccess	s -> fp		4812654	0					
ANR	4812668	Identifier	s		4812654	0					
ANR	4812669	Identifier	fp		4812654	1					
ANR	4812670	Identifier	NULL		4812654	1					
ANR	4812671	CompoundStatement		4:21:36:36	4812654	1					
ANR	4812672	ReturnStatement	return 0 ;	268:4:7250:7258	4812654	0	True				
ANR	4812673	PrimaryExpression	0		4812654	0					
ANR	4812674	IfStatement	if ( fclose ( s -> fp ) == EOF )		4812654	2					
ANR	4812675	Condition	fclose ( s -> fp ) == EOF	271:6:7271:7290	4812654	0	True				
ANR	4812676	EqualityExpression	fclose ( s -> fp ) == EOF		4812654	0		==			
ANR	4812677	CallExpression	fclose ( s -> fp )		4812654	0					
ANR	4812678	Callee	fclose		4812654	0					
ANR	4812679	Identifier	fclose		4812654	0					
ANR	4812680	ArgumentList	s -> fp		4812654	1					
ANR	4812681	Argument	s -> fp		4812654	0					
ANR	4812682	PtrMemberAccess	s -> fp		4812654	0					
ANR	4812683	Identifier	s		4812654	0					
ANR	4812684	Identifier	fp		4812654	1					
ANR	4812685	Identifier	EOF		4812654	1					
ANR	4812686	CompoundStatement		8:28:85:85	4812654	1					
ANR	4812687	ExpressionStatement	s -> why = WHY_FCLOSE	272:4:7299:7318	4812654	0	True				
ANR	4812688	AssignmentExpression	s -> why = WHY_FCLOSE		4812654	0		=			
ANR	4812689	PtrMemberAccess	s -> why		4812654	0					
ANR	4812690	Identifier	s		4812654	0					
ANR	4812691	Identifier	why		4812654	1					
ANR	4812692	Identifier	WHY_FCLOSE		4812654	1					
ANR	4812693	ExpressionStatement	s -> err = errno	273:4:7324:7338	4812654	1	True				
ANR	4812694	AssignmentExpression	s -> err = errno		4812654	0		=			
ANR	4812695	PtrMemberAccess	s -> err		4812654	0					
ANR	4812696	Identifier	s		4812654	0					
ANR	4812697	Identifier	err		4812654	1					
ANR	4812698	Identifier	errno		4812654	1					
ANR	4812699	ReturnStatement	return - 1 ;	275:4:7345:7354	4812654	2	True				
ANR	4812700	UnaryOperationExpression	- 1		4812654	0					
ANR	4812701	UnaryOperator	-		4812654	0					
ANR	4812702	PrimaryExpression	1		4812654	1					
ANR	4812703	ExpressionStatement	s -> fp = NULL	279:2:7405:7417	4812654	3	True				
ANR	4812704	AssignmentExpression	s -> fp = NULL		4812654	0		=			
ANR	4812705	PtrMemberAccess	s -> fp		4812654	0					
ANR	4812706	Identifier	s		4812654	0					
ANR	4812707	Identifier	fp		4812654	1					
ANR	4812708	Identifier	NULL		4812654	1					
ANR	4812709	ReturnStatement	return 0 ;	281:2:7422:7430	4812654	4	True				
ANR	4812710	PrimaryExpression	0		4812654	0					
ANR	4812711	ReturnType	static int		4812654	1					
ANR	4812712	Identifier	fclose_with_status		4812654	2					
ANR	4812713	ParameterList	stream_with_status_t * s		4812654	3					
ANR	4812714	Parameter	stream_with_status_t * s	263:19:7181:7203	4812654	0	True				
ANR	4812715	ParameterType	stream_with_status_t *		4812654	0					
ANR	4812716	Identifier	s		4812654	1					
ANR	4812717	CFGEntryNode	ENTRY		4812654		True				
ANR	4812718	CFGExitNode	EXIT		4812654		True				
ANR	4812719	Symbol	s -> err		4812654						
ANR	4812720	Symbol	s -> fp		4812654						
ANR	4812721	Symbol	errno		4812654						
ANR	4812722	Symbol	s		4812654						
ANR	4812723	Symbol	NULL		4812654						
ANR	4812724	Symbol	s -> why		4812654						
ANR	4812725	Symbol	fclose		4812654						
ANR	4812726	Symbol	* s		4812654						
ANR	4812727	Symbol	EOF		4812654						
ANR	4812728	Symbol	WHY_FCLOSE		4812654						
ANR	4812729	Function	fflush_with_status	294:0:7843:8085							
ANR	4812730	FunctionDef	fflush_with_status (stream_with_status_t * s)		4812729	0					
ANR	4812731	CompoundStatement		296:0:7900:8085	4812729	0					
ANR	4812732	ExpressionStatement	ASSERT ( s )	297:2:7904:7913	4812729	0	True				
ANR	4812733	CallExpression	ASSERT ( s )		4812729	0					
ANR	4812734	Callee	ASSERT		4812729	0					
ANR	4812735	Identifier	ASSERT		4812729	0					
ANR	4812736	ArgumentList	s		4812729	1					
ANR	4812737	Argument	s		4812729	0					
ANR	4812738	Identifier	s		4812729	0					
ANR	4812739	IfStatement	if ( s -> fp == NULL || s -> why != WHY_OK )		4812729	1					
ANR	4812740	Condition	s -> fp == NULL || s -> why != WHY_OK	299:6:7922:7954	4812729	0	True				
ANR	4812741	OrExpression	s -> fp == NULL || s -> why != WHY_OK		4812729	0		||			
ANR	4812742	EqualityExpression	s -> fp == NULL		4812729	0		==			
ANR	4812743	PtrMemberAccess	s -> fp		4812729	0					
ANR	4812744	Identifier	s		4812729	0					
ANR	4812745	Identifier	fp		4812729	1					
ANR	4812746	Identifier	NULL		4812729	1					
ANR	4812747	EqualityExpression	s -> why != WHY_OK		4812729	1		!=			
ANR	4812748	PtrMemberAccess	s -> why		4812729	0					
ANR	4812749	Identifier	s		4812729	0					
ANR	4812750	Identifier	why		4812729	1					
ANR	4812751	Identifier	WHY_OK		4812729	1					
ANR	4812752	CompoundStatement		4:41:56:56	4812729	1					
ANR	4812753	ReturnStatement	return 0 ;	300:4:7963:7971	4812729	0	True				
ANR	4812754	PrimaryExpression	0		4812729	0					
ANR	4812755	IfStatement	if ( fflush ( s -> fp ) != 0 )		4812729	2					
ANR	4812756	Condition	fflush ( s -> fp ) != 0	303:5:7983:8000	4812729	0	True				
ANR	4812757	EqualityExpression	fflush ( s -> fp ) != 0		4812729	0		!=			
ANR	4812758	CallExpression	fflush ( s -> fp )		4812729	0					
ANR	4812759	Callee	fflush		4812729	0					
ANR	4812760	Identifier	fflush		4812729	0					
ANR	4812761	ArgumentList	s -> fp		4812729	1					
ANR	4812762	Argument	s -> fp		4812729	0					
ANR	4812763	PtrMemberAccess	s -> fp		4812729	0					
ANR	4812764	Identifier	s		4812729	0					
ANR	4812765	Identifier	fp		4812729	1					
ANR	4812766	PrimaryExpression	0		4812729	1					
ANR	4812767	CompoundStatement		8:25:102:102	4812729	1					
ANR	4812768	ExpressionStatement	s -> err = errno	304:4:8009:8023	4812729	0	True				
ANR	4812769	AssignmentExpression	s -> err = errno		4812729	0		=			
ANR	4812770	PtrMemberAccess	s -> err		4812729	0					
ANR	4812771	Identifier	s		4812729	0					
ANR	4812772	Identifier	err		4812729	1					
ANR	4812773	Identifier	errno		4812729	1					
ANR	4812774	ExpressionStatement	s -> why = WHY_FFLUSH	305:4:8029:8048	4812729	1	True				
ANR	4812775	AssignmentExpression	s -> why = WHY_FFLUSH		4812729	0		=			
ANR	4812776	PtrMemberAccess	s -> why		4812729	0					
ANR	4812777	Identifier	s		4812729	0					
ANR	4812778	Identifier	why		4812729	1					
ANR	4812779	Identifier	WHY_FFLUSH		4812729	1					
ANR	4812780	ReturnStatement	return - 1 ;	306:4:8054:8063	4812729	2	True				
ANR	4812781	UnaryOperationExpression	- 1		4812729	0					
ANR	4812782	UnaryOperator	-		4812729	0					
ANR	4812783	PrimaryExpression	1		4812729	1					
ANR	4812784	ReturnStatement	return 0 ;	309:2:8075:8083	4812729	3	True				
ANR	4812785	PrimaryExpression	0		4812729	0					
ANR	4812786	ReturnType	static int		4812729	1					
ANR	4812787	Identifier	fflush_with_status		4812729	2					
ANR	4812788	ParameterList	stream_with_status_t * s		4812729	3					
ANR	4812789	Parameter	stream_with_status_t * s	295:19:7874:7896	4812729	0	True				
ANR	4812790	ParameterType	stream_with_status_t *		4812729	0					
ANR	4812791	Identifier	s		4812729	1					
ANR	4812792	CFGEntryNode	ENTRY		4812729		True				
ANR	4812793	CFGExitNode	EXIT		4812729		True				
ANR	4812794	Symbol	fflush		4812729						
ANR	4812795	Symbol	s -> err		4812729						
ANR	4812796	Symbol	s -> fp		4812729						
ANR	4812797	Symbol	errno		4812729						
ANR	4812798	Symbol	s		4812729						
ANR	4812799	Symbol	NULL		4812729						
ANR	4812800	Symbol	s -> why		4812729						
ANR	4812801	Symbol	WHY_OK		4812729						
ANR	4812802	Symbol	WHY_FFLUSH		4812729						
ANR	4812803	Symbol	* s		4812729						
ANR	4812804	Function	fsync_with_status	323:0:8492:9017							
ANR	4812805	FunctionDef	fsync_with_status (stream_with_status_t * s)		4812804	0					
ANR	4812806	CompoundStatement		325:0:8547:9017	4812804	0					
ANR	4812807	ExpressionStatement	ASSERT ( s )	326:2:8551:8560	4812804	0	True				
ANR	4812808	CallExpression	ASSERT ( s )		4812804	0					
ANR	4812809	Callee	ASSERT		4812804	0					
ANR	4812810	Identifier	ASSERT		4812804	0					
ANR	4812811	ArgumentList	s		4812804	1					
ANR	4812812	Argument	s		4812804	0					
ANR	4812813	Identifier	s		4812804	0					
ANR	4812814	IfStatement	if ( s -> fp == NULL || s -> why != WHY_OK )		4812804	1					
ANR	4812815	Condition	s -> fp == NULL || s -> why != WHY_OK	328:6:8569:8601	4812804	0	True				
ANR	4812816	OrExpression	s -> fp == NULL || s -> why != WHY_OK		4812804	0		||			
ANR	4812817	EqualityExpression	s -> fp == NULL		4812804	0		==			
ANR	4812818	PtrMemberAccess	s -> fp		4812804	0					
ANR	4812819	Identifier	s		4812804	0					
ANR	4812820	Identifier	fp		4812804	1					
ANR	4812821	Identifier	NULL		4812804	1					
ANR	4812822	EqualityExpression	s -> why != WHY_OK		4812804	1		!=			
ANR	4812823	PtrMemberAccess	s -> why		4812804	0					
ANR	4812824	Identifier	s		4812804	0					
ANR	4812825	Identifier	why		4812804	1					
ANR	4812826	Identifier	WHY_OK		4812804	1					
ANR	4812827	CompoundStatement		4:41:56:56	4812804	1					
ANR	4812828	ReturnStatement	return 0 ;	329:4:8610:8618	4812804	0	True				
ANR	4812829	PrimaryExpression	0		4812804	0					
ANR	4812830	IdentifierDeclStatement	int fd = fileno ( s -> fp ) ;	332:2:8627:8649	4812804	2	True				
ANR	4812831	IdentifierDecl	fd = fileno ( s -> fp )		4812804	0					
ANR	4812832	IdentifierDeclType	int		4812804	0					
ANR	4812833	Identifier	fd		4812804	1					
ANR	4812834	AssignmentExpression	fd = fileno ( s -> fp )		4812804	2		=			
ANR	4812835	Identifier	fd		4812804	0					
ANR	4812836	CallExpression	fileno ( s -> fp )		4812804	1					
ANR	4812837	Callee	fileno		4812804	0					
ANR	4812838	Identifier	fileno		4812804	0					
ANR	4812839	ArgumentList	s -> fp		4812804	1					
ANR	4812840	Argument	s -> fp		4812804	0					
ANR	4812841	PtrMemberAccess	s -> fp		4812804	0					
ANR	4812842	Identifier	s		4812804	0					
ANR	4812843	Identifier	fp		4812804	1					
ANR	4812844	IfStatement	if ( fd >= 0 )		4812804	3					
ANR	4812845	Condition	fd >= 0	333:6:8657:8663	4812804	0	True				
ANR	4812846	RelationalExpression	fd >= 0		4812804	0		>=			
ANR	4812847	Identifier	fd		4812804	0					
ANR	4812848	PrimaryExpression	0		4812804	1					
ANR	4812849	CompoundStatement		9:15:118:118	4812804	1					
ANR	4812850	IfStatement	if ( condor_fsync ( fd ) < 0 )		4812804	0					
ANR	4812851	Condition	condor_fsync ( fd ) < 0	340:5:8918:8937	4812804	0	True				
ANR	4812852	RelationalExpression	condor_fsync ( fd ) < 0		4812804	0		<			
ANR	4812853	CallExpression	condor_fsync ( fd )		4812804	0					
ANR	4812854	Callee	condor_fsync		4812804	0					
ANR	4812855	Identifier	condor_fsync		4812804	0					
ANR	4812856	ArgumentList	fd		4812804	1					
ANR	4812857	Argument	fd		4812804	0					
ANR	4812858	Identifier	fd		4812804	0					
ANR	4812859	PrimaryExpression	0		4812804	1					
ANR	4812860	CompoundStatement		16:27:392:392	4812804	1					
ANR	4812861	ExpressionStatement	s -> why = WHY_FSYNC	341:3:8945:8963	4812804	0	True				
ANR	4812862	AssignmentExpression	s -> why = WHY_FSYNC		4812804	0		=			
ANR	4812863	PtrMemberAccess	s -> why		4812804	0					
ANR	4812864	Identifier	s		4812804	0					
ANR	4812865	Identifier	why		4812804	1					
ANR	4812866	Identifier	WHY_FSYNC		4812804	1					
ANR	4812867	ExpressionStatement	s -> err = errno	342:3:8968:8982	4812804	1	True				
ANR	4812868	AssignmentExpression	s -> err = errno		4812804	0		=			
ANR	4812869	PtrMemberAccess	s -> err		4812804	0					
ANR	4812870	Identifier	s		4812804	0					
ANR	4812871	Identifier	err		4812804	1					
ANR	4812872	Identifier	errno		4812804	1					
ANR	4812873	ReturnStatement	return - 1 ;	343:3:8987:8996	4812804	2	True				
ANR	4812874	UnaryOperationExpression	- 1		4812804	0					
ANR	4812875	UnaryOperator	-		4812804	0					
ANR	4812876	PrimaryExpression	1		4812804	1					
ANR	4812877	ReturnStatement	return 0 ;	346:2:9007:9015	4812804	4	True				
ANR	4812878	PrimaryExpression	0		4812804	0					
ANR	4812879	ReturnType	static int		4812804	1					
ANR	4812880	Identifier	fsync_with_status		4812804	2					
ANR	4812881	ParameterList	stream_with_status_t * s		4812804	3					
ANR	4812882	Parameter	stream_with_status_t * s	324:18:8521:8543	4812804	0	True				
ANR	4812883	ParameterType	stream_with_status_t *		4812804	0					
ANR	4812884	Identifier	s		4812804	1					
ANR	4812885	CFGEntryNode	ENTRY		4812804		True				
ANR	4812886	CFGExitNode	EXIT		4812804		True				
ANR	4812887	Symbol	s -> err		4812804						
ANR	4812888	Symbol	s -> fp		4812804						
ANR	4812889	Symbol	errno		4812804						
ANR	4812890	Symbol	s		4812804						
ANR	4812891	Symbol	NULL		4812804						
ANR	4812892	Symbol	s -> why		4812804						
ANR	4812893	Symbol	WHY_FSYNC		4812804						
ANR	4812894	Symbol	WHY_OK		4812804						
ANR	4812895	Symbol	fileno		4812804						
ANR	4812896	Symbol	condor_fsync		4812804						
ANR	4812897	Symbol	* s		4812804						
ANR	4812898	Symbol	fd		4812804						
ANR	4812899	Function	Transaction :: Transaction	349:0:9020:9187							
ANR	4812900	FunctionDef	Transaction :: Transaction ()		4812899	0					
ANR	4812901	CompoundStatement		350:0:9131:9187	4812899	0					
ANR	4812902	ExpressionStatement	m_EmptyTransaction = true	351:1:9134:9159	4812899	0	True				
ANR	4812903	AssignmentExpression	m_EmptyTransaction = true		4812899	0		=			
ANR	4812904	Identifier	m_EmptyTransaction		4812899	0					
ANR	4812905	Identifier	true		4812899	1					
ANR	4812906	ExpressionStatement	op_log_iterating = NULL	352:1:9162:9185	4812899	1	True				
ANR	4812907	AssignmentExpression	op_log_iterating = NULL		4812899	0		=			
ANR	4812908	Identifier	op_log_iterating		4812899	0					
ANR	4812909	Identifier	NULL		4812899	1					
ANR	4812910	Identifier	Transaction :: Transaction		4812899	1					
ANR	4812911	ParameterList			4812899	2					
ANR	4812912	CFGEntryNode	ENTRY		4812899		True				
ANR	4812913	CFGExitNode	EXIT		4812899		True				
ANR	4812914	Symbol	NULL		4812899						
ANR	4812915	Symbol	true		4812899						
ANR	4812916	Symbol	op_log_iterating		4812899						
ANR	4812917	Symbol	m_EmptyTransaction		4812899						
ANR	4812918	Function	Transaction :: ~Transaction	355:0:9190:9646							
ANR	4812919	FunctionDef	Transaction :: ~Transaction ()		4812918	0					
ANR	4812920	CompoundStatement		356:0:9218:9646	4812918	0					
ANR	4812921	IdentifierDeclStatement	LogRecordList * l ;	357:1:9221:9237	4812918	0	True				
ANR	4812922	IdentifierDecl	* l		4812918	0					
ANR	4812923	IdentifierDeclType	LogRecordList *		4812918	0					
ANR	4812924	Identifier	l		4812918	1					
ANR	4812925	IdentifierDeclStatement	LogRecord * log ;	358:1:9240:9255	4812918	1	True				
ANR	4812926	IdentifierDecl	* log		4812918	0					
ANR	4812927	IdentifierDeclType	LogRecord *		4812918	0					
ANR	4812928	Identifier	log		4812918	1					
ANR	4812929	IdentifierDeclStatement	YourSensitiveString key ;	359:1:9258:9281	4812918	2	True				
ANR	4812930	IdentifierDecl	key		4812918	0					
ANR	4812931	IdentifierDeclType	YourSensitiveString		4812918	0					
ANR	4812932	Identifier	key		4812918	1					
ANR	4812933	ExpressionStatement	op_log . startIterations ( )	361:1:9285:9309	4812918	3	True				
ANR	4812934	CallExpression	op_log . startIterations ( )		4812918	0					
ANR	4812935	Callee	op_log . startIterations		4812918	0					
ANR	4812936	MemberAccess	op_log . startIterations		4812918	0					
ANR	4812937	Identifier	op_log		4812918	0					
ANR	4812938	Identifier	startIterations		4812918	1					
ANR	4812939	ArgumentList			4812918	1					
ANR	4812940	WhileStatement	"while ( op_log . iterate ( key , l ) )"		4812918	4					
ANR	4812941	Condition	"op_log . iterate ( key , l )"	362:8:9319:9339	4812918	0	True				
ANR	4812942	CallExpression	"op_log . iterate ( key , l )"		4812918	0					
ANR	4812943	Callee	op_log . iterate		4812918	0					
ANR	4812944	MemberAccess	op_log . iterate		4812918	0					
ANR	4812945	Identifier	op_log		4812918	0					
ANR	4812946	Identifier	iterate		4812918	1					
ANR	4812947	ArgumentList	key		4812918	1					
ANR	4812948	Argument	key		4812918	0					
ANR	4812949	Identifier	key		4812918	0					
ANR	4812950	Argument	l		4812918	1					
ANR	4812951	Identifier	l		4812918	0					
ANR	4812952	CompoundStatement		7:32:124:124	4812918	1					
ANR	4812953	ExpressionStatement	ASSERT ( l )	363:2:9347:9358	4812918	0	True				
ANR	4812954	CallExpression	ASSERT ( l )		4812918	0					
ANR	4812955	Callee	ASSERT		4812918	0					
ANR	4812956	Identifier	ASSERT		4812918	0					
ANR	4812957	ArgumentList	l		4812918	1					
ANR	4812958	Argument	l		4812918	0					
ANR	4812959	Identifier	l		4812918	0					
ANR	4812960	ExpressionStatement	l -> Rewind ( )	364:2:9362:9373	4812918	1	True				
ANR	4812961	CallExpression	l -> Rewind ( )		4812918	0					
ANR	4812962	Callee	l -> Rewind		4812918	0					
ANR	4812963	PtrMemberAccess	l -> Rewind		4812918	0					
ANR	4812964	Identifier	l		4812918	0					
ANR	4812965	Identifier	Rewind		4812918	1					
ANR	4812966	ArgumentList			4812918	1					
ANR	4812967	WhileStatement	while ( ( log = l -> Next ( ) ) )		4812918	2					
ANR	4812968	Condition	log = l -> Next ( )	365:9:9384:9400	4812918	0	True				
ANR	4812969	AssignmentExpression	log = l -> Next ( )		4812918	0		=			
ANR	4812970	Identifier	log		4812918	0					
ANR	4812971	CallExpression	l -> Next ( )		4812918	1					
ANR	4812972	Callee	l -> Next		4812918	0					
ANR	4812973	PtrMemberAccess	l -> Next		4812918	0					
ANR	4812974	Identifier	l		4812918	0					
ANR	4812975	Identifier	Next		4812918	1					
ANR	4812976	ArgumentList			4812918	1					
ANR	4812977	CompoundStatement		10:29:185:185	4812918	1					
ANR	4812978	Statement	delete	366:3:9409:9414	4812918	0	True				
ANR	4812979	ExpressionStatement	log	366:10:9416:9419	4812918	1	True				
ANR	4812980	Identifier	log		4812918	0					
ANR	4812981	Statement	delete	368:2:9427:9432	4812918	3	True				
ANR	4812982	ExpressionStatement	l	368:9:9434:9435	4812918	4	True				
ANR	4812983	Identifier	l		4812918	0					
ANR	4812984	Identifier	Transaction :: ~Transaction		4812918	1					
ANR	4812985	ParameterList			4812918	2					
ANR	4812986	CFGEntryNode	ENTRY		4812918		True				
ANR	4812987	CFGExitNode	EXIT		4812918		True				
ANR	4812988	Symbol	log		4812918						
ANR	4812989	Symbol	* l		4812918						
ANR	4812990	Symbol	op_log		4812918						
ANR	4812991	Symbol	l		4812918						
ANR	4812992	Symbol	key		4812918						
ANR	4812993	Symbol	op_log . iterate		4812918						
ANR	4812994	Symbol	l -> Next		4812918						
ANR	4812995	Function	Transaction :: Commit	375:0:9649:15307							
ANR	4812996	FunctionDef	"Transaction :: Commit (FILE * fp , void * data_structure , bool nondurable)"		4812995	0					
ANR	4812997	CompoundStatement		377:0:9723:15307	4812995	0					
ANR	4812998	IdentifierDeclStatement	LogRecord * log ;	378:1:9726:9740	4812995	0	True				
ANR	4812999	IdentifierDecl	* log		4812995	0					
ANR	4813000	IdentifierDeclType	LogRecord *		4812995	0					
ANR	4813001	Identifier	log		4812995	1					
ANR	4813002	IdentifierDeclStatement	backup_info_t bi ;	410:1:11072:11088	4812995	1	True				
ANR	4813003	IdentifierDecl	bi		4812995	0					
ANR	4813004	IdentifierDeclType	backup_info_t		4812995	0					
ANR	4813005	Identifier	bi		4812995	1					
ANR	4813006	ExpressionStatement	"init_backup_info ( & bi , ( nondurable || fp == NULL ) )"	411:1:11091:11140	4812995	2	True				
ANR	4813007	CallExpression	"init_backup_info ( & bi , ( nondurable || fp == NULL ) )"		4812995	0					
ANR	4813008	Callee	init_backup_info		4812995	0					
ANR	4813009	Identifier	init_backup_info		4812995	0					
ANR	4813010	ArgumentList	& bi		4812995	1					
ANR	4813011	Argument	& bi		4812995	0					
ANR	4813012	UnaryOperationExpression	& bi		4812995	0					
ANR	4813013	UnaryOperator	&		4812995	0					
ANR	4813014	Identifier	bi		4812995	1					
ANR	4813015	Argument	nondurable || fp == NULL		4812995	1					
ANR	4813016	OrExpression	nondurable || fp == NULL		4812995	0		||			
ANR	4813017	Identifier	nondurable		4812995	0					
ANR	4813018	EqualityExpression	fp == NULL		4812995	1		==			
ANR	4813019	Identifier	fp		4812995	0					
ANR	4813020	Identifier	NULL		4812995	1					
ANR	4813021	IdentifierDeclStatement	stream_with_status_t fps [ 2 ] ;	415:1:11217:11244	4812995	3	True				
ANR	4813022	IdentifierDecl	fps [ 2 ]		4812995	0					
ANR	4813023	IdentifierDeclType	stream_with_status_t [ 2 ]		4812995	0					
ANR	4813024	Identifier	fps		4812995	1					
ANR	4813025	PrimaryExpression	2		4812995	2					
ANR	4813026	ExpressionStatement	"init_stream_with_status ( & ( fps [ 0 ] ) , fp )"	419:1:11420:11458	4812995	4	True				
ANR	4813027	CallExpression	"init_stream_with_status ( & ( fps [ 0 ] ) , fp )"		4812995	0					
ANR	4813028	Callee	init_stream_with_status		4812995	0					
ANR	4813029	Identifier	init_stream_with_status		4812995	0					
ANR	4813030	ArgumentList	& ( fps [ 0 ] )		4812995	1					
ANR	4813031	Argument	& ( fps [ 0 ] )		4812995	0					
ANR	4813032	UnaryOperationExpression	& ( fps [ 0 ] )		4812995	0					
ANR	4813033	UnaryOperator	&		4812995	0					
ANR	4813034	ArrayIndexing	fps [ 0 ]		4812995	1					
ANR	4813035	Identifier	fps		4812995	0					
ANR	4813036	PrimaryExpression	0		4812995	1					
ANR	4813037	Argument	fp		4812995	1					
ANR	4813038	Identifier	fp		4812995	0					
ANR	4813039	ExpressionStatement	"init_stream_with_status ( & ( fps [ 1 ] ) , bi . fp )"	420:1:11461:11502	4812995	5	True				
ANR	4813040	CallExpression	"init_stream_with_status ( & ( fps [ 1 ] ) , bi . fp )"		4812995	0					
ANR	4813041	Callee	init_stream_with_status		4812995	0					
ANR	4813042	Identifier	init_stream_with_status		4812995	0					
ANR	4813043	ArgumentList	& ( fps [ 1 ] )		4812995	1					
ANR	4813044	Argument	& ( fps [ 1 ] )		4812995	0					
ANR	4813045	UnaryOperationExpression	& ( fps [ 1 ] )		4812995	0					
ANR	4813046	UnaryOperator	&		4812995	0					
ANR	4813047	ArrayIndexing	fps [ 1 ]		4812995	1					
ANR	4813048	Identifier	fps		4812995	0					
ANR	4813049	PrimaryExpression	1		4812995	1					
ANR	4813050	Argument	bi . fp		4812995	1					
ANR	4813051	MemberAccess	bi . fp		4812995	0					
ANR	4813052	Identifier	bi		4812995	0					
ANR	4813053	Identifier	fp		4812995	1					
ANR	4813054	IdentifierDeclStatement	bool fussy = bi . filt == BF_ALL ;	426:1:11615:11645	4812995	6	True				
ANR	4813055	IdentifierDecl	fussy = bi . filt == BF_ALL		4812995	0					
ANR	4813056	IdentifierDeclType	bool		4812995	0					
ANR	4813057	Identifier	fussy		4812995	1					
ANR	4813058	AssignmentExpression	fussy = bi . filt == BF_ALL		4812995	2		=			
ANR	4813059	Identifier	fussy		4812995	0					
ANR	4813060	EqualityExpression	bi . filt == BF_ALL		4812995	1		==			
ANR	4813061	MemberAccess	bi . filt		4812995	0					
ANR	4813062	Identifier	bi		4812995	0					
ANR	4813063	Identifier	filt		4812995	1					
ANR	4813064	Identifier	BF_ALL		4812995	1					
ANR	4813065	ExpressionStatement	ordered_op_log . Rewind ( )	428:1:11649:11672	4812995	7	True				
ANR	4813066	CallExpression	ordered_op_log . Rewind ( )		4812995	0					
ANR	4813067	Callee	ordered_op_log . Rewind		4812995	0					
ANR	4813068	MemberAccess	ordered_op_log . Rewind		4812995	0					
ANR	4813069	Identifier	ordered_op_log		4812995	0					
ANR	4813070	Identifier	Rewind		4812995	1					
ANR	4813071	ArgumentList			4812995	1					
ANR	4813072	IdentifierDeclStatement	"time_t before , after ;"	434:1:11866:11886	4812995	8	True				
ANR	4813073	IdentifierDecl	before		4812995	0					
ANR	4813074	IdentifierDeclType	time_t		4812995	0					
ANR	4813075	Identifier	before		4812995	1					
ANR	4813076	IdentifierDecl	after		4812995	1					
ANR	4813077	IdentifierDeclType	time_t		4812995	0					
ANR	4813078	Identifier	after		4812995	1					
ANR	4813079	WhileStatement	while ( ( log = ordered_op_log . Next ( ) ) )		4812995	9					
ANR	4813080	Condition	log = ordered_op_log . Next ( )	442:8:12067:12095	4812995	0	True				
ANR	4813081	AssignmentExpression	log = ordered_op_log . Next ( )		4812995	0		=			
ANR	4813082	Identifier	log		4812995	0					
ANR	4813083	CallExpression	ordered_op_log . Next ( )		4812995	1					
ANR	4813084	Callee	ordered_op_log . Next		4812995	0					
ANR	4813085	MemberAccess	ordered_op_log . Next		4812995	0					
ANR	4813086	Identifier	ordered_op_log		4812995	0					
ANR	4813087	Identifier	Next		4812995	1					
ANR	4813088	ArgumentList			4812995	1					
ANR	4813089	CompoundStatement		66:40:2375:2375	4812995	1					
ANR	4813090	ForStatement	for ( int i = 0 ; i < 2 ; i ++ )		4812995	0					
ANR	4813091	ForInit	int i = 0 ;	443:8:12109:12116	4812995	0	True				
ANR	4813092	IdentifierDeclStatement	int i = 0 ;		4812995	0					
ANR	4813093	IdentifierDecl	i = 0		4812995	0					
ANR	4813094	IdentifierDeclType	int		4812995	0					
ANR	4813095	Identifier	i		4812995	1					
ANR	4813096	AssignmentExpression	i = 0		4812995	2		=			
ANR	4813097	Identifier	i		4812995	0					
ANR	4813098	PrimaryExpression	0		4812995	1					
ANR	4813099	Condition	i < 2	443:17:12118:12120	4812995	1	True				
ANR	4813100	RelationalExpression	i < 2		4812995	0		<			
ANR	4813101	Identifier	i		4812995	0					
ANR	4813102	PrimaryExpression	2		4812995	1					
ANR	4813103	PostIncDecOperationExpression	i ++	443:22:12123:12125	4812995	2	True				
ANR	4813104	Identifier	i		4812995	0					
ANR	4813105	IncDec	++		4812995	1					
ANR	4813106	CompoundStatement		67:27:2404:2404	4812995	3					
ANR	4813107	ExpressionStatement	before = time ( NULL )	446:5:12224:12243	4812995	0	True				
ANR	4813108	AssignmentExpression	before = time ( NULL )		4812995	0		=			
ANR	4813109	Identifier	before		4812995	0					
ANR	4813110	CallExpression	time ( NULL )		4812995	1					
ANR	4813111	Callee	time		4812995	0					
ANR	4813112	Identifier	time		4812995	0					
ANR	4813113	ArgumentList	NULL		4812995	1					
ANR	4813114	Argument	NULL		4812995	0					
ANR	4813115	Identifier	NULL		4812995	0					
ANR	4813116	ExpressionStatement	"write_with_status ( log , & ( fps [ i ] ) )"	447:5:12250:12283	4812995	1	True				
ANR	4813117	CallExpression	"write_with_status ( log , & ( fps [ i ] ) )"		4812995	0					
ANR	4813118	Callee	write_with_status		4812995	0					
ANR	4813119	Identifier	write_with_status		4812995	0					
ANR	4813120	ArgumentList	log		4812995	1					
ANR	4813121	Argument	log		4812995	0					
ANR	4813122	Identifier	log		4812995	0					
ANR	4813123	Argument	& ( fps [ i ] )		4812995	1					
ANR	4813124	UnaryOperationExpression	& ( fps [ i ] )		4812995	0					
ANR	4813125	UnaryOperator	&		4812995	0					
ANR	4813126	ArrayIndexing	fps [ i ]		4812995	1					
ANR	4813127	Identifier	fps		4812995	0					
ANR	4813128	Identifier	i		4812995	1					
ANR	4813129	ExpressionStatement	after = time ( NULL )	448:2:12287:12305	4812995	2	True				
ANR	4813130	AssignmentExpression	after = time ( NULL )		4812995	0		=			
ANR	4813131	Identifier	after		4812995	0					
ANR	4813132	CallExpression	time ( NULL )		4812995	1					
ANR	4813133	Callee	time		4812995	0					
ANR	4813134	Identifier	time		4812995	0					
ANR	4813135	ArgumentList	NULL		4812995	1					
ANR	4813136	Argument	NULL		4812995	0					
ANR	4813137	Identifier	NULL		4812995	0					
ANR	4813138	IfStatement	if ( ( after - before ) > 5 )		4812995	3					
ANR	4813139	Condition	( after - before ) > 5	449:7:12314:12333	4812995	0	True				
ANR	4813140	RelationalExpression	( after - before ) > 5		4812995	0		>			
ANR	4813141	AdditiveExpression	after - before		4812995	0		-			
ANR	4813142	Identifier	after		4812995	0					
ANR	4813143	Identifier	before		4812995	1					
ANR	4813144	PrimaryExpression	5		4812995	1					
ANR	4813145	CompoundStatement		73:30:2613:2613	4812995	1					
ANR	4813146	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Transaction::Commit(): write_with_status() took %ld seconds to run\\n"" , after - before )"	450:3:12342:12452	4812995	0	True				
ANR	4813147	CallExpression	"dprintf ( D_FULLDEBUG , ""Transaction::Commit(): write_with_status() took %ld seconds to run\\n"" , after - before )"		4812995	0					
ANR	4813148	Callee	dprintf		4812995	0					
ANR	4813149	Identifier	dprintf		4812995	0					
ANR	4813150	ArgumentList	D_FULLDEBUG		4812995	1					
ANR	4813151	Argument	D_FULLDEBUG		4812995	0					
ANR	4813152	Identifier	D_FULLDEBUG		4812995	0					
ANR	4813153	Argument	"""Transaction::Commit(): write_with_status() took %ld seconds to run\\n"""		4812995	1					
ANR	4813154	PrimaryExpression	"""Transaction::Commit(): write_with_status() took %ld seconds to run\\n"""		4812995	0					
ANR	4813155	Argument	after - before		4812995	2					
ANR	4813156	AdditiveExpression	after - before		4812995	0		-			
ANR	4813157	Identifier	after		4812995	0					
ANR	4813158	Identifier	before		4812995	1					
ANR	4813159	ExpressionStatement	log -> Play ( data_structure )	454:3:12467:12492	4812995	1	True				
ANR	4813160	CallExpression	log -> Play ( data_structure )		4812995	0					
ANR	4813161	Callee	log -> Play		4812995	0					
ANR	4813162	PtrMemberAccess	log -> Play		4812995	0					
ANR	4813163	Identifier	log		4812995	0					
ANR	4813164	Identifier	Play		4812995	1					
ANR	4813165	ArgumentList	data_structure		4812995	1					
ANR	4813166	Argument	data_structure		4812995	0					
ANR	4813167	Identifier	data_structure		4812995	0					
ANR	4813168	IfStatement	if ( ! nondurable )		4812995	10					
ANR	4813169	Condition	! nondurable	457:5:12503:12513	4812995	0	True				
ANR	4813170	UnaryOperationExpression	! nondurable		4812995	0					
ANR	4813171	UnaryOperator	!		4812995	0					
ANR	4813172	Identifier	nondurable		4812995	1					
ANR	4813173	CompoundStatement		105:3:3595:3630	4812995	1					
ANR	4813174	ExpressionStatement	before = time ( NULL )	467:3:12847:12866	4812995	0	True				
ANR	4813175	AssignmentExpression	before = time ( NULL )		4812995	0		=			
ANR	4813176	Identifier	before		4812995	0					
ANR	4813177	CallExpression	time ( NULL )		4812995	1					
ANR	4813178	Callee	time		4812995	0					
ANR	4813179	Identifier	time		4812995	0					
ANR	4813180	ArgumentList	NULL		4812995	1					
ANR	4813181	Argument	NULL		4812995	0					
ANR	4813182	Identifier	NULL		4812995	0					
ANR	4813183	ExpressionStatement	fflush_with_status ( & ( fps [ 0 ] ) )	468:3:12871:12900	4812995	1	True				
ANR	4813184	CallExpression	fflush_with_status ( & ( fps [ 0 ] ) )		4812995	0					
ANR	4813185	Callee	fflush_with_status		4812995	0					
ANR	4813186	Identifier	fflush_with_status		4812995	0					
ANR	4813187	ArgumentList	& ( fps [ 0 ] )		4812995	1					
ANR	4813188	Argument	& ( fps [ 0 ] )		4812995	0					
ANR	4813189	UnaryOperationExpression	& ( fps [ 0 ] )		4812995	0					
ANR	4813190	UnaryOperator	&		4812995	0					
ANR	4813191	ArrayIndexing	fps [ 0 ]		4812995	1					
ANR	4813192	Identifier	fps		4812995	0					
ANR	4813193	PrimaryExpression	0		4812995	1					
ANR	4813194	ExpressionStatement	after = time ( NULL )	469:3:12905:12923	4812995	2	True				
ANR	4813195	AssignmentExpression	after = time ( NULL )		4812995	0		=			
ANR	4813196	Identifier	after		4812995	0					
ANR	4813197	CallExpression	time ( NULL )		4812995	1					
ANR	4813198	Callee	time		4812995	0					
ANR	4813199	Identifier	time		4812995	0					
ANR	4813200	ArgumentList	NULL		4812995	1					
ANR	4813201	Argument	NULL		4812995	0					
ANR	4813202	Identifier	NULL		4812995	0					
ANR	4813203	IfStatement	if ( ( after - before ) > 5 )		4812995	3					
ANR	4813204	Condition	( after - before ) > 5	470:8:12933:12952	4812995	0	True				
ANR	4813205	RelationalExpression	( after - before ) > 5		4812995	0		>			
ANR	4813206	AdditiveExpression	after - before		4812995	0		-			
ANR	4813207	Identifier	after		4812995	0					
ANR	4813208	Identifier	before		4812995	1					
ANR	4813209	PrimaryExpression	5		4812995	1					
ANR	4813210	CompoundStatement		94:31:3232:3232	4812995	1					
ANR	4813211	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Transaction::Commit(): fflush_with_status() took %ld seconds to run\\n"" , after - before )"	471:4:12962:13073	4812995	0	True				
ANR	4813212	CallExpression	"dprintf ( D_FULLDEBUG , ""Transaction::Commit(): fflush_with_status() took %ld seconds to run\\n"" , after - before )"		4812995	0					
ANR	4813213	Callee	dprintf		4812995	0					
ANR	4813214	Identifier	dprintf		4812995	0					
ANR	4813215	ArgumentList	D_FULLDEBUG		4812995	1					
ANR	4813216	Argument	D_FULLDEBUG		4812995	0					
ANR	4813217	Identifier	D_FULLDEBUG		4812995	0					
ANR	4813218	Argument	"""Transaction::Commit(): fflush_with_status() took %ld seconds to run\\n"""		4812995	1					
ANR	4813219	PrimaryExpression	"""Transaction::Commit(): fflush_with_status() took %ld seconds to run\\n"""		4812995	0					
ANR	4813220	Argument	after - before		4812995	2					
ANR	4813221	AdditiveExpression	after - before		4812995	0		-			
ANR	4813222	Identifier	after		4812995	0					
ANR	4813223	Identifier	before		4812995	1					
ANR	4813224	ExpressionStatement	before = time ( NULL )	474:3:13084:13103	4812995	4	True				
ANR	4813225	AssignmentExpression	before = time ( NULL )		4812995	0		=			
ANR	4813226	Identifier	before		4812995	0					
ANR	4813227	CallExpression	time ( NULL )		4812995	1					
ANR	4813228	Callee	time		4812995	0					
ANR	4813229	Identifier	time		4812995	0					
ANR	4813230	ArgumentList	NULL		4812995	1					
ANR	4813231	Argument	NULL		4812995	0					
ANR	4813232	Identifier	NULL		4812995	0					
ANR	4813233	ExpressionStatement	fsync_with_status ( & ( fps [ 0 ] ) )	475:3:13108:13136	4812995	5	True				
ANR	4813234	CallExpression	fsync_with_status ( & ( fps [ 0 ] ) )		4812995	0					
ANR	4813235	Callee	fsync_with_status		4812995	0					
ANR	4813236	Identifier	fsync_with_status		4812995	0					
ANR	4813237	ArgumentList	& ( fps [ 0 ] )		4812995	1					
ANR	4813238	Argument	& ( fps [ 0 ] )		4812995	0					
ANR	4813239	UnaryOperationExpression	& ( fps [ 0 ] )		4812995	0					
ANR	4813240	UnaryOperator	&		4812995	0					
ANR	4813241	ArrayIndexing	fps [ 0 ]		4812995	1					
ANR	4813242	Identifier	fps		4812995	0					
ANR	4813243	PrimaryExpression	0		4812995	1					
ANR	4813244	ExpressionStatement	after = time ( NULL )	476:3:13141:13159	4812995	6	True				
ANR	4813245	AssignmentExpression	after = time ( NULL )		4812995	0		=			
ANR	4813246	Identifier	after		4812995	0					
ANR	4813247	CallExpression	time ( NULL )		4812995	1					
ANR	4813248	Callee	time		4812995	0					
ANR	4813249	Identifier	time		4812995	0					
ANR	4813250	ArgumentList	NULL		4812995	1					
ANR	4813251	Argument	NULL		4812995	0					
ANR	4813252	Identifier	NULL		4812995	0					
ANR	4813253	IfStatement	if ( ( after - before ) > 5 )		4812995	7					
ANR	4813254	Condition	( after - before ) > 5	477:8:13169:13188	4812995	0	True				
ANR	4813255	RelationalExpression	( after - before ) > 5		4812995	0		>			
ANR	4813256	AdditiveExpression	after - before		4812995	0		-			
ANR	4813257	Identifier	after		4812995	0					
ANR	4813258	Identifier	before		4812995	1					
ANR	4813259	PrimaryExpression	5		4812995	1					
ANR	4813260	CompoundStatement		101:31:3468:3468	4812995	1					
ANR	4813261	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Transaction::Commit(): fsync_with_status() took %ld seconds to run\\n"" , after - before )"	478:4:13198:13308	4812995	0	True				
ANR	4813262	CallExpression	"dprintf ( D_FULLDEBUG , ""Transaction::Commit(): fsync_with_status() took %ld seconds to run\\n"" , after - before )"		4812995	0					
ANR	4813263	Callee	dprintf		4812995	0					
ANR	4813264	Identifier	dprintf		4812995	0					
ANR	4813265	ArgumentList	D_FULLDEBUG		4812995	1					
ANR	4813266	Argument	D_FULLDEBUG		4812995	0					
ANR	4813267	Identifier	D_FULLDEBUG		4812995	0					
ANR	4813268	Argument	"""Transaction::Commit(): fsync_with_status() took %ld seconds to run\\n"""		4812995	1					
ANR	4813269	PrimaryExpression	"""Transaction::Commit(): fsync_with_status() took %ld seconds to run\\n"""		4812995	0					
ANR	4813270	Argument	after - before		4812995	2					
ANR	4813271	AdditiveExpression	after - before		4812995	0		-			
ANR	4813272	Identifier	after		4812995	0					
ANR	4813273	Identifier	before		4812995	1					
ANR	4813274	IdentifierDeclStatement	bool failure = fps [ 0 ] . why != WHY_OK ;	481:3:13319:13354	4812995	8	True				
ANR	4813275	IdentifierDecl	failure = fps [ 0 ] . why != WHY_OK		4812995	0					
ANR	4813276	IdentifierDeclType	bool		4812995	0					
ANR	4813277	Identifier	failure		4812995	1					
ANR	4813278	AssignmentExpression	failure = fps [ 0 ] . why != WHY_OK		4812995	2		=			
ANR	4813279	Identifier	failure		4812995	0					
ANR	4813280	EqualityExpression	fps [ 0 ] . why != WHY_OK		4812995	1		!=			
ANR	4813281	MemberAccess	fps [ 0 ] . why		4812995	0					
ANR	4813282	ArrayIndexing	fps [ 0 ]		4812995	0					
ANR	4813283	Identifier	fps		4812995	0					
ANR	4813284	PrimaryExpression	0		4812995	1					
ANR	4813285	Identifier	why		4812995	1					
ANR	4813286	Identifier	WHY_OK		4812995	1					
ANR	4813287	IfStatement	if ( ( failure || fussy ) && bi . filt != BF_NONE )		4812995	9					
ANR	4813288	Condition	( failure || fussy ) && bi . filt != BF_NONE	483:7:13364:13403	4812995	0	True				
ANR	4813289	AndExpression	( failure || fussy ) && bi . filt != BF_NONE		4812995	0		&&			
ANR	4813290	OrExpression	failure || fussy		4812995	0		||			
ANR	4813291	Identifier	failure		4812995	0					
ANR	4813292	Identifier	fussy		4812995	1					
ANR	4813293	EqualityExpression	bi . filt != BF_NONE		4812995	1		!=			
ANR	4813294	MemberAccess	bi . filt		4812995	0					
ANR	4813295	Identifier	bi		4812995	0					
ANR	4813296	Identifier	filt		4812995	1					
ANR	4813297	Identifier	BF_NONE		4812995	1					
ANR	4813298	CompoundStatement		107:49:3682:3682	4812995	1					
ANR	4813299	ExpressionStatement	fflush_with_status ( & ( fps [ 1 ] ) )	490:5:13595:13624	4812995	0	True				
ANR	4813300	CallExpression	fflush_with_status ( & ( fps [ 1 ] ) )		4812995	0					
ANR	4813301	Callee	fflush_with_status		4812995	0					
ANR	4813302	Identifier	fflush_with_status		4812995	0					
ANR	4813303	ArgumentList	& ( fps [ 1 ] )		4812995	1					
ANR	4813304	Argument	& ( fps [ 1 ] )		4812995	0					
ANR	4813305	UnaryOperationExpression	& ( fps [ 1 ] )		4812995	0					
ANR	4813306	UnaryOperator	&		4812995	0					
ANR	4813307	ArrayIndexing	fps [ 1 ]		4812995	1					
ANR	4813308	Identifier	fps		4812995	0					
ANR	4813309	PrimaryExpression	1		4812995	1					
ANR	4813310	ExpressionStatement	fsync_with_status ( & ( fps [ 1 ] ) )	491:5:13631:13659	4812995	1	True				
ANR	4813311	CallExpression	fsync_with_status ( & ( fps [ 1 ] ) )		4812995	0					
ANR	4813312	Callee	fsync_with_status		4812995	0					
ANR	4813313	Identifier	fsync_with_status		4812995	0					
ANR	4813314	ArgumentList	& ( fps [ 1 ] )		4812995	1					
ANR	4813315	Argument	& ( fps [ 1 ] )		4812995	0					
ANR	4813316	UnaryOperationExpression	& ( fps [ 1 ] )		4812995	0					
ANR	4813317	UnaryOperator	&		4812995	0					
ANR	4813318	ArrayIndexing	fps [ 1 ]		4812995	1					
ANR	4813319	Identifier	fps		4812995	0					
ANR	4813320	PrimaryExpression	1		4812995	1					
ANR	4813321	ExpressionStatement	fclose_with_status ( & ( fps [ 1 ] ) )	493:5:13667:13696	4812995	2	True				
ANR	4813322	CallExpression	fclose_with_status ( & ( fps [ 1 ] ) )		4812995	0					
ANR	4813323	Callee	fclose_with_status		4812995	0					
ANR	4813324	Identifier	fclose_with_status		4812995	0					
ANR	4813325	ArgumentList	& ( fps [ 1 ] )		4812995	1					
ANR	4813326	Argument	& ( fps [ 1 ] )		4812995	0					
ANR	4813327	UnaryOperationExpression	& ( fps [ 1 ] )		4812995	0					
ANR	4813328	UnaryOperator	&		4812995	0					
ANR	4813329	ArrayIndexing	fps [ 1 ]		4812995	1					
ANR	4813330	Identifier	fps		4812995	0					
ANR	4813331	PrimaryExpression	1		4812995	1					
ANR	4813332	ExpressionStatement	bi . fp = NULL	494:5:13703:13715	4812995	3	True				
ANR	4813333	AssignmentExpression	bi . fp = NULL		4812995	0		=			
ANR	4813334	MemberAccess	bi . fp		4812995	0					
ANR	4813335	Identifier	bi		4812995	0					
ANR	4813336	Identifier	fp		4812995	1					
ANR	4813337	Identifier	NULL		4812995	1					
ANR	4813338	IfStatement	if ( bi . success && fps [ 1 ] . why == WHY_OK )		4812995	4					
ANR	4813339	Condition	bi . success && fps [ 1 ] . why == WHY_OK	496:8:13726:13759	4812995	0	True				
ANR	4813340	AndExpression	bi . success && fps [ 1 ] . why == WHY_OK		4812995	0		&&			
ANR	4813341	MemberAccess	bi . success		4812995	0					
ANR	4813342	Identifier	bi		4812995	0					
ANR	4813343	Identifier	success		4812995	1					
ANR	4813344	EqualityExpression	fps [ 1 ] . why == WHY_OK		4812995	1		==			
ANR	4813345	MemberAccess	fps [ 1 ] . why		4812995	0					
ANR	4813346	ArrayIndexing	fps [ 1 ]		4812995	0					
ANR	4813347	Identifier	fps		4812995	0					
ANR	4813348	PrimaryExpression	1		4812995	1					
ANR	4813349	Identifier	why		4812995	1					
ANR	4813350	Identifier	WHY_OK		4812995	1					
ANR	4813351	CompoundStatement		120:44:4038:4038	4812995	1					
ANR	4813352	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""local backup of job queue log written to %s\\n"" , bi . fn )"	497:7:13771:13847	4812995	0	True				
ANR	4813353	CallExpression	"dprintf ( D_FULLDEBUG , ""local backup of job queue log written to %s\\n"" , bi . fn )"		4812995	0					
ANR	4813354	Callee	dprintf		4812995	0					
ANR	4813355	Identifier	dprintf		4812995	0					
ANR	4813356	ArgumentList	D_FULLDEBUG		4812995	1					
ANR	4813357	Argument	D_FULLDEBUG		4812995	0					
ANR	4813358	Identifier	D_FULLDEBUG		4812995	0					
ANR	4813359	Argument	"""local backup of job queue log written to %s\\n"""		4812995	1					
ANR	4813360	PrimaryExpression	"""local backup of job queue log written to %s\\n"""		4812995	0					
ANR	4813361	Argument	bi . fn		4812995	2					
ANR	4813362	MemberAccess	bi . fn		4812995	0					
ANR	4813363	Identifier	bi		4812995	0					
ANR	4813364	Identifier	fn		4812995	1					
ANR	4813365	ElseStatement	else		4812995	0					
ANR	4813366	CompoundStatement		122:12:4137:4137	4812995	0					
ANR	4813367	ExpressionStatement	"dprintf ( D_ALWAYS , ""FAILED to write local backup of job queue log to %s\\n"" , bi . fn )"	499:7:13870:13951	4812995	0	True				
ANR	4813368	CallExpression	"dprintf ( D_ALWAYS , ""FAILED to write local backup of job queue log to %s\\n"" , bi . fn )"		4812995	0					
ANR	4813369	Callee	dprintf		4812995	0					
ANR	4813370	Identifier	dprintf		4812995	0					
ANR	4813371	ArgumentList	D_ALWAYS		4812995	1					
ANR	4813372	Argument	D_ALWAYS		4812995	0					
ANR	4813373	Identifier	D_ALWAYS		4812995	0					
ANR	4813374	Argument	"""FAILED to write local backup of job queue log to %s\\n"""		4812995	1					
ANR	4813375	PrimaryExpression	"""FAILED to write local backup of job queue log to %s\\n"""		4812995	0					
ANR	4813376	Argument	bi . fn		4812995	2					
ANR	4813377	MemberAccess	bi . fn		4812995	0					
ANR	4813378	Identifier	bi		4812995	0					
ANR	4813379	Identifier	fn		4812995	1					
ANR	4813380	ElseStatement	else		4812995	0					
ANR	4813381	CompoundStatement		125:10:4246:4246	4812995	0					
ANR	4813382	ExpressionStatement	fclose_with_status ( & ( fps [ 1 ] ) )	507:5:14167:14196	4812995	0	True				
ANR	4813383	CallExpression	fclose_with_status ( & ( fps [ 1 ] ) )		4812995	0					
ANR	4813384	Callee	fclose_with_status		4812995	0					
ANR	4813385	Identifier	fclose_with_status		4812995	0					
ANR	4813386	ArgumentList	& ( fps [ 1 ] )		4812995	1					
ANR	4813387	Argument	& ( fps [ 1 ] )		4812995	0					
ANR	4813388	UnaryOperationExpression	& ( fps [ 1 ] )		4812995	0					
ANR	4813389	UnaryOperator	&		4812995	0					
ANR	4813390	ArrayIndexing	fps [ 1 ]		4812995	1					
ANR	4813391	Identifier	fps		4812995	0					
ANR	4813392	PrimaryExpression	1		4812995	1					
ANR	4813393	ExpressionStatement	bi . fp = NULL	508:5:14203:14215	4812995	1	True				
ANR	4813394	AssignmentExpression	bi . fp = NULL		4812995	0		=			
ANR	4813395	MemberAccess	bi . fp		4812995	0					
ANR	4813396	Identifier	bi		4812995	0					
ANR	4813397	Identifier	fp		4812995	1					
ANR	4813398	Identifier	NULL		4812995	1					
ANR	4813399	ExpressionStatement	remove_backup_file ( & bi )	509:5:14222:14245	4812995	2	True				
ANR	4813400	CallExpression	remove_backup_file ( & bi )		4812995	0					
ANR	4813401	Callee	remove_backup_file		4812995	0					
ANR	4813402	Identifier	remove_backup_file		4812995	0					
ANR	4813403	ArgumentList	& bi		4812995	1					
ANR	4813404	Argument	& bi		4812995	0					
ANR	4813405	UnaryOperationExpression	& bi		4812995	0					
ANR	4813406	UnaryOperator	&		4812995	0					
ANR	4813407	Identifier	bi		4812995	1					
ANR	4813408	IfStatement	if ( failure )		4812995	10					
ANR	4813409	Condition	failure	512:7:14265:14271	4812995	0	True				
ANR	4813410	Identifier	failure		4812995	0					
ANR	4813411	CompoundStatement		165:2:5122:5141	4812995	1					
ANR	4813412	IdentifierDeclStatement	"const char * why = """" ;"	518:5:14437:14457	4812995	0	True				
ANR	4813413	IdentifierDecl	"* why = """""		4812995	0					
ANR	4813414	IdentifierDeclType	const char *		4812995	0					
ANR	4813415	Identifier	why		4812995	1					
ANR	4813416	AssignmentExpression	"* why = """""		4812995	2		=			
ANR	4813417	Identifier	why		4812995	0					
ANR	4813418	PrimaryExpression	""""""		4812995	1					
ANR	4813419	SwitchStatement	switch ( fps [ 0 ] . why )		4812995	1					
ANR	4813420	Condition	fps [ 0 ] . why	520:13:14473:14482	4812995	0	True				
ANR	4813421	MemberAccess	fps [ 0 ] . why		4812995	0					
ANR	4813422	ArrayIndexing	fps [ 0 ]		4812995	0					
ANR	4813423	Identifier	fps		4812995	0					
ANR	4813424	PrimaryExpression	0		4812995	1					
ANR	4813425	Identifier	why		4812995	1					
ANR	4813426	CompoundStatement		144:25:4761:4761	4812995	1					
ANR	4813427	Label	case WHY_OK :	521:6:14493:14504	4812995	0	True				
ANR	4813428	Identifier	WHY_OK		4812995	0					
ANR	4813429	ExpressionStatement	"why = ""nothing"""	522:4:14510:14525	4812995	1	True				
ANR	4813430	AssignmentExpression	"why = ""nothing"""		4812995	0		=			
ANR	4813431	Identifier	why		4812995	0					
ANR	4813432	PrimaryExpression	"""nothing"""		4812995	1					
ANR	4813433	BreakStatement	break ;	523:4:14532:14537	4812995	2	True				
ANR	4813434	Label	case WHY_WRITE :	524:6:14545:14559	4812995	3	True				
ANR	4813435	Identifier	WHY_WRITE		4812995	0					
ANR	4813436	ExpressionStatement	"why = ""write"""	525:4:14566:14579	4812995	4	True				
ANR	4813437	AssignmentExpression	"why = ""write"""		4812995	0		=			
ANR	4813438	Identifier	why		4812995	0					
ANR	4813439	PrimaryExpression	"""write"""		4812995	1					
ANR	4813440	BreakStatement	break ;	526:4:14586:14591	4812995	5	True				
ANR	4813441	Label	case WHY_FFLUSH :	527:6:14599:14614	4812995	6	True				
ANR	4813442	Identifier	WHY_FFLUSH		4812995	0					
ANR	4813443	ExpressionStatement	"why = ""fflush"""	528:4:14621:14635	4812995	7	True				
ANR	4813444	AssignmentExpression	"why = ""fflush"""		4812995	0		=			
ANR	4813445	Identifier	why		4812995	0					
ANR	4813446	PrimaryExpression	"""fflush"""		4812995	1					
ANR	4813447	BreakStatement	break ;	529:4:14642:14647	4812995	8	True				
ANR	4813448	Label	case WHY_FSYNC :	530:6:14655:14669	4812995	9	True				
ANR	4813449	Identifier	WHY_FSYNC		4812995	0					
ANR	4813450	ExpressionStatement	"why = ""fsync"""	531:4:14676:14689	4812995	10	True				
ANR	4813451	AssignmentExpression	"why = ""fsync"""		4812995	0		=			
ANR	4813452	Identifier	why		4812995	0					
ANR	4813453	PrimaryExpression	"""fsync"""		4812995	1					
ANR	4813454	BreakStatement	break ;	532:4:14696:14701	4812995	11	True				
ANR	4813455	Label	case WHY_FCLOSE :	533:6:14709:14724	4812995	12	True				
ANR	4813456	Identifier	WHY_FCLOSE		4812995	0					
ANR	4813457	ExpressionStatement	"why = ""fclose"""	534:4:14731:14745	4812995	13	True				
ANR	4813458	AssignmentExpression	"why = ""fclose"""		4812995	0		=			
ANR	4813459	Identifier	why		4812995	0					
ANR	4813460	PrimaryExpression	"""fclose"""		4812995	1					
ANR	4813461	BreakStatement	break ;	535:4:14752:14757	4812995	14	True				
ANR	4813462	Label	default :	536:6:14765:14772	4812995	15	True				
ANR	4813463	Identifier	default		4812995	0					
ANR	4813464	ExpressionStatement	"why = ""unknown"""	537:4:14779:14794	4812995	16	True				
ANR	4813465	AssignmentExpression	"why = ""unknown"""		4812995	0		=			
ANR	4813466	Identifier	why		4812995	0					
ANR	4813467	PrimaryExpression	"""unknown"""		4812995	1					
ANR	4813468	IdentifierDeclStatement	"const char * made_backup = """" ;"	540:5:14814:14842	4812995	2	True				
ANR	4813469	IdentifierDecl	"* made_backup = """""		4812995	0					
ANR	4813470	IdentifierDeclType	const char *		4812995	0					
ANR	4813471	Identifier	made_backup		4812995	1					
ANR	4813472	AssignmentExpression	"* made_backup = """""		4812995	2		=			
ANR	4813473	Identifier	made_backup		4812995	0					
ANR	4813474	PrimaryExpression	""""""		4812995	1					
ANR	4813475	IdentifierDeclStatement	MyString backup_loc ;	541:2:14846:14865	4812995	3	True				
ANR	4813476	IdentifierDecl	backup_loc		4812995	0					
ANR	4813477	IdentifierDeclType	MyString		4812995	0					
ANR	4813478	Identifier	backup_loc		4812995	1					
ANR	4813479	IfStatement	if ( bi . filt != BF_NONE && bi . success && fps [ 1 ] . why == WHY_OK )		4812995	4					
ANR	4813480	Condition	bi . filt != BF_NONE && bi . success && fps [ 1 ] . why == WHY_OK	543:9:14877:14932	4812995	0	True				
ANR	4813481	AndExpression	bi . filt != BF_NONE && bi . success && fps [ 1 ] . why == WHY_OK		4812995	0		&&			
ANR	4813482	EqualityExpression	bi . filt != BF_NONE		4812995	0		!=			
ANR	4813483	MemberAccess	bi . filt		4812995	0					
ANR	4813484	Identifier	bi		4812995	0					
ANR	4813485	Identifier	filt		4812995	1					
ANR	4813486	Identifier	BF_NONE		4812995	1					
ANR	4813487	AndExpression	bi . success && fps [ 1 ] . why == WHY_OK		4812995	1		&&			
ANR	4813488	MemberAccess	bi . success		4812995	0					
ANR	4813489	Identifier	bi		4812995	0					
ANR	4813490	Identifier	success		4812995	1					
ANR	4813491	EqualityExpression	fps [ 1 ] . why == WHY_OK		4812995	1		==			
ANR	4813492	MemberAccess	fps [ 1 ] . why		4812995	0					
ANR	4813493	ArrayIndexing	fps [ 1 ]		4812995	0					
ANR	4813494	Identifier	fps		4812995	0					
ANR	4813495	PrimaryExpression	1		4812995	1					
ANR	4813496	Identifier	why		4812995	1					
ANR	4813497	Identifier	WHY_OK		4812995	1					
ANR	4813498	CompoundStatement		167:67:5211:5211	4812995	1					
ANR	4813499	ExpressionStatement	"made_backup = ""failed transaction logged to """	544:7:14944:14989	4812995	0	True				
ANR	4813500	AssignmentExpression	"made_backup = ""failed transaction logged to """		4812995	0		=			
ANR	4813501	Identifier	made_backup		4812995	0					
ANR	4813502	PrimaryExpression	"""failed transaction logged to """		4812995	1					
ANR	4813503	ExpressionStatement	backup_loc = bi . fn	545:7:14998:15016	4812995	1	True				
ANR	4813504	AssignmentExpression	backup_loc = bi . fn		4812995	0		=			
ANR	4813505	Identifier	backup_loc		4812995	0					
ANR	4813506	MemberAccess	bi . fn		4812995	1					
ANR	4813507	Identifier	bi		4812995	0					
ANR	4813508	Identifier	fn		4812995	1					
ANR	4813509	ElseStatement	else		4812995	0					
ANR	4813510	CompoundStatement		170:12:5306:5306	4812995	0					
ANR	4813511	ExpressionStatement	"made_backup = ""no local backup available."""	547:7:15039:15081	4812995	0	True				
ANR	4813512	AssignmentExpression	"made_backup = ""no local backup available."""		4812995	0		=			
ANR	4813513	Identifier	made_backup		4812995	0					
ANR	4813514	PrimaryExpression	"""no local backup available."""		4812995	1					
ANR	4813515	ExpressionStatement	cleanup_backup_info ( & bi )	550:5:15101:15125	4812995	5	True				
ANR	4813516	CallExpression	cleanup_backup_info ( & bi )		4812995	0					
ANR	4813517	Callee	cleanup_backup_info		4812995	0					
ANR	4813518	Identifier	cleanup_backup_info		4812995	0					
ANR	4813519	ArgumentList	& bi		4812995	1					
ANR	4813520	Argument	& bi		4812995	0					
ANR	4813521	UnaryOperationExpression	& bi		4812995	0					
ANR	4813522	UnaryOperator	&		4812995	0					
ANR	4813523	Identifier	bi		4812995	1					
ANR	4813524	ExpressionStatement	"EXCEPT ( ""Failed to write real job queue log: %s failed (errno %d); %s%s"" , why , fps [ 0 ] . err , made_backup , backup_loc . Value ( ) )"	552:5:15138:15260	4812995	6	True				
ANR	4813525	CallExpression	"EXCEPT ( ""Failed to write real job queue log: %s failed (errno %d); %s%s"" , why , fps [ 0 ] . err , made_backup , backup_loc . Value ( ) )"		4812995	0					
ANR	4813526	Callee	EXCEPT		4812995	0					
ANR	4813527	Identifier	EXCEPT		4812995	0					
ANR	4813528	ArgumentList	"""Failed to write real job queue log: %s failed (errno %d); %s%s"""		4812995	1					
ANR	4813529	Argument	"""Failed to write real job queue log: %s failed (errno %d); %s%s"""		4812995	0					
ANR	4813530	PrimaryExpression	"""Failed to write real job queue log: %s failed (errno %d); %s%s"""		4812995	0					
ANR	4813531	Argument	why		4812995	1					
ANR	4813532	Identifier	why		4812995	0					
ANR	4813533	Argument	fps [ 0 ] . err		4812995	2					
ANR	4813534	MemberAccess	fps [ 0 ] . err		4812995	0					
ANR	4813535	ArrayIndexing	fps [ 0 ]		4812995	0					
ANR	4813536	Identifier	fps		4812995	0					
ANR	4813537	PrimaryExpression	0		4812995	1					
ANR	4813538	Identifier	err		4812995	1					
ANR	4813539	Argument	made_backup		4812995	3					
ANR	4813540	Identifier	made_backup		4812995	0					
ANR	4813541	Argument	backup_loc . Value ( )		4812995	4					
ANR	4813542	CallExpression	backup_loc . Value ( )		4812995	0					
ANR	4813543	Callee	backup_loc . Value		4812995	0					
ANR	4813544	MemberAccess	backup_loc . Value		4812995	0					
ANR	4813545	Identifier	backup_loc		4812995	0					
ANR	4813546	Identifier	Value		4812995	1					
ANR	4813547	ArgumentList			4812995	1					
ANR	4813548	ExpressionStatement	cleanup_backup_info ( & bi )	555:3:15274:15298	4812995	11	True				
ANR	4813549	CallExpression	cleanup_backup_info ( & bi )		4812995	0					
ANR	4813550	Callee	cleanup_backup_info		4812995	0					
ANR	4813551	Identifier	cleanup_backup_info		4812995	0					
ANR	4813552	ArgumentList	& bi		4812995	1					
ANR	4813553	Argument	& bi		4812995	0					
ANR	4813554	UnaryOperationExpression	& bi		4812995	0					
ANR	4813555	UnaryOperator	&		4812995	0					
ANR	4813556	Identifier	bi		4812995	1					
ANR	4813557	ReturnType	void		4812995	1					
ANR	4813558	Identifier	Transaction :: Commit		4812995	2					
ANR	4813559	ParameterList	"FILE * fp , void * data_structure , bool nondurable"		4812995	3					
ANR	4813560	Parameter	FILE * fp	376:20:9674:9681	4812995	0	True				
ANR	4813561	ParameterType	FILE *		4812995	0					
ANR	4813562	Identifier	fp		4812995	1					
ANR	4813563	Parameter	void * data_structure	376:30:9684:9703	4812995	1	True				
ANR	4813564	ParameterType	void *		4812995	0					
ANR	4813565	Identifier	data_structure		4812995	1					
ANR	4813566	Parameter	bool nondurable	376:52:9706:9720	4812995	2	True				
ANR	4813567	ParameterType	bool		4812995	0					
ANR	4813568	Identifier	nondurable		4812995	1					
ANR	4813569	CFGEntryNode	ENTRY		4812995		True				
ANR	4813570	CFGExitNode	EXIT		4812995		True				
ANR	4813571	Symbol	backup_loc . Value		4812995						
ANR	4813572	Symbol	log		4812995						
ANR	4813573	Symbol	ordered_op_log		4812995						
ANR	4813574	Symbol	before		4812995						
ANR	4813575	Symbol	WHY_OK		4812995						
ANR	4813576	Symbol	bi		4812995						
ANR	4813577	Symbol	why		4812995						
ANR	4813578	Symbol	fp		4812995						
ANR	4813579	Symbol	& bi		4812995						
ANR	4813580	Symbol	bi . fp		4812995						
ANR	4813581	Symbol	data_structure		4812995						
ANR	4813582	Symbol	bi . fn		4812995						
ANR	4813583	Symbol	fps [ 0 ] . err		4812995						
ANR	4813584	Symbol	made_backup		4812995						
ANR	4813585	Symbol	after		4812995						
ANR	4813586	Symbol	bi . success		4812995						
ANR	4813587	Symbol	backup_loc		4812995						
ANR	4813588	Symbol	BF_ALL		4812995						
ANR	4813589	Symbol	NULL		4812995						
ANR	4813590	Symbol	ordered_op_log . Next		4812995						
ANR	4813591	Symbol	nondurable		4812995						
ANR	4813592	Symbol	fps		4812995						
ANR	4813593	Symbol	D_ALWAYS		4812995						
ANR	4813594	Symbol	i		4812995						
ANR	4813595	Symbol	D_FULLDEBUG		4812995						
ANR	4813596	Symbol	* fps		4812995						
ANR	4813597	Symbol	bi . filt		4812995						
ANR	4813598	Symbol	failure		4812995						
ANR	4813599	Symbol	fps [ 0 ] . why		4812995						
ANR	4813600	Symbol	time		4812995						
ANR	4813601	Symbol	fps [ 1 ] . why		4812995						
ANR	4813602	Symbol	fussy		4812995						
ANR	4813603	Symbol	BF_NONE		4812995						
ANR	4813604	Function	Transaction :: AppendLog	560:0:15310:15635							
ANR	4813605	FunctionDef	Transaction :: AppendLog (LogRecord * log)		4813604	0					
ANR	4813606	CompoundStatement		562:0:15354:15635	4813604	0					
ANR	4813607	ExpressionStatement	m_EmptyTransaction = false	563:1:15357:15383	4813604	0	True				
ANR	4813608	AssignmentExpression	m_EmptyTransaction = false		4813604	0		=			
ANR	4813609	Identifier	m_EmptyTransaction		4813604	0					
ANR	4813610	Identifier	false		4813604	1					
ANR	4813611	IdentifierDeclStatement	char const * key = log -> get_key ( ) ;	564:1:15386:15418	4813604	1	True				
ANR	4813612	IdentifierDecl	* key = log -> get_key ( )		4813604	0					
ANR	4813613	IdentifierDeclType	char const *		4813604	0					
ANR	4813614	Identifier	key		4813604	1					
ANR	4813615	AssignmentExpression	* key = log -> get_key ( )		4813604	2		=			
ANR	4813616	Identifier	key		4813604	0					
ANR	4813617	CallExpression	log -> get_key ( )		4813604	1					
ANR	4813618	Callee	log -> get_key		4813604	0					
ANR	4813619	PtrMemberAccess	log -> get_key		4813604	0					
ANR	4813620	Identifier	log		4813604	0					
ANR	4813621	Identifier	get_key		4813604	1					
ANR	4813622	ArgumentList			4813604	1					
ANR	4813623	IdentifierDeclStatement	"YourSensitiveString key_obj = key ? key : """" ;"	565:1:15421:15465	4813604	2	True				
ANR	4813624	IdentifierDecl	"key_obj = key ? key : """""		4813604	0					
ANR	4813625	IdentifierDeclType	YourSensitiveString		4813604	0					
ANR	4813626	Identifier	key_obj		4813604	1					
ANR	4813627	AssignmentExpression	"key_obj = key ? key : """""		4813604	2		=			
ANR	4813628	Identifier	key_obj		4813604	0					
ANR	4813629	ConditionalExpression	"key ? key : """""		4813604	1					
ANR	4813630	Condition	key		4813604	0					
ANR	4813631	Identifier	key		4813604	0					
ANR	4813632	Identifier	key		4813604	1					
ANR	4813633	PrimaryExpression	""""""		4813604	2					
ANR	4813634	IdentifierDeclStatement	LogRecordList * l = NULL ;	567:1:15469:15492	4813604	3	True				
ANR	4813635	IdentifierDecl	* l = NULL		4813604	0					
ANR	4813636	IdentifierDeclType	LogRecordList *		4813604	0					
ANR	4813637	Identifier	l		4813604	1					
ANR	4813638	AssignmentExpression	* l = NULL		4813604	2		=			
ANR	4813639	Identifier	NULL		4813604	0					
ANR	4813640	Identifier	NULL		4813604	1					
ANR	4813641	ExpressionStatement	"op_log . lookup ( key_obj , l )"	568:1:15495:15519	4813604	4	True				
ANR	4813642	CallExpression	"op_log . lookup ( key_obj , l )"		4813604	0					
ANR	4813643	Callee	op_log . lookup		4813604	0					
ANR	4813644	MemberAccess	op_log . lookup		4813604	0					
ANR	4813645	Identifier	op_log		4813604	0					
ANR	4813646	Identifier	lookup		4813604	1					
ANR	4813647	ArgumentList	key_obj		4813604	1					
ANR	4813648	Argument	key_obj		4813604	0					
ANR	4813649	Identifier	key_obj		4813604	0					
ANR	4813650	Argument	l		4813604	1					
ANR	4813651	Identifier	l		4813604	0					
ANR	4813652	IfStatement	if ( ! l )		4813604	5					
ANR	4813653	Condition	! l	569:5:15526:15527	4813604	0	True				
ANR	4813654	UnaryOperationExpression	! l		4813604	0					
ANR	4813655	UnaryOperator	!		4813604	0					
ANR	4813656	Identifier	l		4813604	1					
ANR	4813657	CompoundStatement		8:10:176:176	4813604	1					
ANR	4813658	Statement	l	570:2:15535:15535	4813604	0	True				
ANR	4813659	Statement	=	570:4:15537:15537	4813604	1	True				
ANR	4813660	Statement	new	570:6:15539:15541	4813604	2	True				
ANR	4813661	ExpressionStatement	LogRecordList	570:10:15543:15556	4813604	3	True				
ANR	4813662	Identifier	LogRecordList		4813604	0					
ANR	4813663	ExpressionStatement	"op_log . insert ( key_obj , l )"	571:2:15560:15584	4813604	4	True				
ANR	4813664	CallExpression	"op_log . insert ( key_obj , l )"		4813604	0					
ANR	4813665	Callee	op_log . insert		4813604	0					
ANR	4813666	MemberAccess	op_log . insert		4813604	0					
ANR	4813667	Identifier	op_log		4813604	0					
ANR	4813668	Identifier	insert		4813604	1					
ANR	4813669	ArgumentList	key_obj		4813604	1					
ANR	4813670	Argument	key_obj		4813604	0					
ANR	4813671	Identifier	key_obj		4813604	0					
ANR	4813672	Argument	l		4813604	1					
ANR	4813673	Identifier	l		4813604	0					
ANR	4813674	ExpressionStatement	l -> Append ( log )	573:1:15590:15604	4813604	6	True				
ANR	4813675	CallExpression	l -> Append ( log )		4813604	0					
ANR	4813676	Callee	l -> Append		4813604	0					
ANR	4813677	PtrMemberAccess	l -> Append		4813604	0					
ANR	4813678	Identifier	l		4813604	0					
ANR	4813679	Identifier	Append		4813604	1					
ANR	4813680	ArgumentList	log		4813604	1					
ANR	4813681	Argument	log		4813604	0					
ANR	4813682	Identifier	log		4813604	0					
ANR	4813683	ExpressionStatement	ordered_op_log . Append ( log )	574:1:15607:15633	4813604	7	True				
ANR	4813684	CallExpression	ordered_op_log . Append ( log )		4813604	0					
ANR	4813685	Callee	ordered_op_log . Append		4813604	0					
ANR	4813686	MemberAccess	ordered_op_log . Append		4813604	0					
ANR	4813687	Identifier	ordered_op_log		4813604	0					
ANR	4813688	Identifier	Append		4813604	1					
ANR	4813689	ArgumentList	log		4813604	1					
ANR	4813690	Argument	log		4813604	0					
ANR	4813691	Identifier	log		4813604	0					
ANR	4813692	ReturnType	void		4813604	1					
ANR	4813693	Identifier	Transaction :: AppendLog		4813604	2					
ANR	4813694	ParameterList	LogRecord * log		4813604	3					
ANR	4813695	Parameter	LogRecord * log	561:23:15338:15351	4813604	0	True				
ANR	4813696	ParameterType	LogRecord *		4813604	0					
ANR	4813697	Identifier	log		4813604	1					
ANR	4813698	CFGEntryNode	ENTRY		4813604		True				
ANR	4813699	CFGExitNode	EXIT		4813604		True				
ANR	4813700	Symbol	NULL		4813604						
ANR	4813701	Symbol	log		4813604						
ANR	4813702	Symbol	ordered_op_log		4813604						
ANR	4813703	Symbol	op_log		4813604						
ANR	4813704	Symbol	false		4813604						
ANR	4813705	Symbol	l		4813604						
ANR	4813706	Symbol	key_obj		4813604						
ANR	4813707	Symbol	key		4813604						
ANR	4813708	Symbol	* log		4813604						
ANR	4813709	Symbol	m_EmptyTransaction		4813604						
ANR	4813710	Symbol	log -> get_key		4813604						
ANR	4813711	Function	Transaction :: FirstEntry	577:0:15638:15907							
ANR	4813712	FunctionDef	Transaction :: FirstEntry (char const * key)		4813711	0					
ANR	4813713	CompoundStatement		579:0:15691:15907	4813711	0					
ANR	4813714	IdentifierDeclStatement	YourSensitiveString key_obj = key ;	580:1:15694:15727	4813711	0	True				
ANR	4813715	IdentifierDecl	key_obj = key		4813711	0					
ANR	4813716	IdentifierDeclType	YourSensitiveString		4813711	0					
ANR	4813717	Identifier	key_obj		4813711	1					
ANR	4813718	AssignmentExpression	key_obj = key		4813711	2		=			
ANR	4813719	Identifier	key		4813711	0					
ANR	4813720	Identifier	key		4813711	1					
ANR	4813721	ExpressionStatement	op_log_iterating = NULL	581:1:15730:15753	4813711	1	True				
ANR	4813722	AssignmentExpression	op_log_iterating = NULL		4813711	0		=			
ANR	4813723	Identifier	op_log_iterating		4813711	0					
ANR	4813724	Identifier	NULL		4813711	1					
ANR	4813725	ExpressionStatement	"op_log . lookup ( key_obj , op_log_iterating )"	582:1:15756:15795	4813711	2	True				
ANR	4813726	CallExpression	"op_log . lookup ( key_obj , op_log_iterating )"		4813711	0					
ANR	4813727	Callee	op_log . lookup		4813711	0					
ANR	4813728	MemberAccess	op_log . lookup		4813711	0					
ANR	4813729	Identifier	op_log		4813711	0					
ANR	4813730	Identifier	lookup		4813711	1					
ANR	4813731	ArgumentList	key_obj		4813711	1					
ANR	4813732	Argument	key_obj		4813711	0					
ANR	4813733	Identifier	key_obj		4813711	0					
ANR	4813734	Argument	op_log_iterating		4813711	1					
ANR	4813735	Identifier	op_log_iterating		4813711	0					
ANR	4813736	IfStatement	if ( ! op_log_iterating )		4813711	3					
ANR	4813737	Condition	! op_log_iterating	584:5:15803:15819	4813711	0	True				
ANR	4813738	UnaryOperationExpression	! op_log_iterating		4813711	0					
ANR	4813739	UnaryOperator	!		4813711	0					
ANR	4813740	Identifier	op_log_iterating		4813711	1					
ANR	4813741	CompoundStatement		6:25:131:131	4813711	1					
ANR	4813742	ReturnStatement	return NULL ;	585:2:15827:15838	4813711	0	True				
ANR	4813743	Identifier	NULL		4813711	0					
ANR	4813744	ExpressionStatement	op_log_iterating -> Rewind ( )	588:1:15845:15871	4813711	4	True				
ANR	4813745	CallExpression	op_log_iterating -> Rewind ( )		4813711	0					
ANR	4813746	Callee	op_log_iterating -> Rewind		4813711	0					
ANR	4813747	PtrMemberAccess	op_log_iterating -> Rewind		4813711	0					
ANR	4813748	Identifier	op_log_iterating		4813711	0					
ANR	4813749	Identifier	Rewind		4813711	1					
ANR	4813750	ArgumentList			4813711	1					
ANR	4813751	ReturnStatement	return op_log_iterating -> Next ( ) ;	589:1:15874:15905	4813711	5	True				
ANR	4813752	CallExpression	op_log_iterating -> Next ( )		4813711	0					
ANR	4813753	Callee	op_log_iterating -> Next		4813711	0					
ANR	4813754	PtrMemberAccess	op_log_iterating -> Next		4813711	0					
ANR	4813755	Identifier	op_log_iterating		4813711	0					
ANR	4813756	Identifier	Next		4813711	1					
ANR	4813757	ArgumentList			4813711	1					
ANR	4813758	ReturnType	LogRecord *		4813711	1					
ANR	4813759	Identifier	Transaction :: FirstEntry		4813711	2					
ANR	4813760	ParameterList	char const * key		4813711	3					
ANR	4813761	Parameter	char const * key	578:24:15674:15688	4813711	0	True				
ANR	4813762	ParameterType	char const *		4813711	0					
ANR	4813763	Identifier	key		4813711	1					
ANR	4813764	CFGEntryNode	ENTRY		4813711		True				
ANR	4813765	CFGExitNode	EXIT		4813711		True				
ANR	4813766	Symbol	NULL		4813711						
ANR	4813767	Symbol	op_log		4813711						
ANR	4813768	Symbol	op_log_iterating -> Next		4813711						
ANR	4813769	Symbol	* op_log_iterating		4813711						
ANR	4813770	Symbol	op_log_iterating		4813711						
ANR	4813771	Symbol	key_obj		4813711						
ANR	4813772	Symbol	key		4813711						
ANR	4813773	Function	Transaction :: NextEntry	591:0:15909:16011							
ANR	4813774	FunctionDef	Transaction :: NextEntry ()		4813773	0					
ANR	4813775	CompoundStatement		593:0:15946:16011	4813773	0					
ANR	4813776	ExpressionStatement	ASSERT ( op_log_iterating )	594:1:15949:15975	4813773	0	True				
ANR	4813777	CallExpression	ASSERT ( op_log_iterating )		4813773	0					
ANR	4813778	Callee	ASSERT		4813773	0					
ANR	4813779	Identifier	ASSERT		4813773	0					
ANR	4813780	ArgumentList	op_log_iterating		4813773	1					
ANR	4813781	Argument	op_log_iterating		4813773	0					
ANR	4813782	Identifier	op_log_iterating		4813773	0					
ANR	4813783	ReturnStatement	return op_log_iterating -> Next ( ) ;	595:1:15978:16009	4813773	1	True				
ANR	4813784	CallExpression	op_log_iterating -> Next ( )		4813773	0					
ANR	4813785	Callee	op_log_iterating -> Next		4813773	0					
ANR	4813786	PtrMemberAccess	op_log_iterating -> Next		4813773	0					
ANR	4813787	Identifier	op_log_iterating		4813773	0					
ANR	4813788	Identifier	Next		4813773	1					
ANR	4813789	ArgumentList			4813773	1					
ANR	4813790	ReturnType	LogRecord *		4813773	1					
ANR	4813791	Identifier	Transaction :: NextEntry		4813773	2					
ANR	4813792	ParameterList			4813773	3					
ANR	4813793	CFGEntryNode	ENTRY		4813773		True				
ANR	4813794	CFGExitNode	EXIT		4813773		True				
ANR	4813795	Symbol	op_log_iterating -> Next		4813773						
ANR	4813796	Symbol	* op_log_iterating		4813773						
ANR	4813797	Symbol	op_log_iterating		4813773						
ANR	4813798	Function	Transaction :: InTransactionListKeysWithOpType	598:0:16014:16289							
ANR	4813799	FunctionDef	"Transaction :: InTransactionListKeysWithOpType (int op_type , std :: list < std :: string > & new_keys)"		4813798	0					
ANR	4813800	CompoundStatement		600:0:16113:16289	4813798	0					
ANR	4813801	IdentifierDeclStatement	LogRecord * log ;	601:1:16116:16130	4813798	0	True				
ANR	4813802	IdentifierDecl	* log		4813798	0					
ANR	4813803	IdentifierDeclType	LogRecord *		4813798	0					
ANR	4813804	Identifier	log		4813798	1					
ANR	4813805	ExpressionStatement	ordered_op_log . Rewind ( )	603:1:16134:16157	4813798	1	True				
ANR	4813806	CallExpression	ordered_op_log . Rewind ( )		4813798	0					
ANR	4813807	Callee	ordered_op_log . Rewind		4813798	0					
ANR	4813808	MemberAccess	ordered_op_log . Rewind		4813798	0					
ANR	4813809	Identifier	ordered_op_log		4813798	0					
ANR	4813810	Identifier	Rewind		4813798	1					
ANR	4813811	ArgumentList			4813798	1					
ANR	4813812	WhileStatement	while ( ( log = ordered_op_log . Next ( ) ) )		4813798	2					
ANR	4813813	Condition	log = ordered_op_log . Next ( )	604:8:16167:16195	4813798	0	True				
ANR	4813814	AssignmentExpression	log = ordered_op_log . Next ( )		4813798	0		=			
ANR	4813815	Identifier	log		4813798	0					
ANR	4813816	CallExpression	ordered_op_log . Next ( )		4813798	1					
ANR	4813817	Callee	ordered_op_log . Next		4813798	0					
ANR	4813818	MemberAccess	ordered_op_log . Next		4813798	0					
ANR	4813819	Identifier	ordered_op_log		4813798	0					
ANR	4813820	Identifier	Next		4813798	1					
ANR	4813821	ArgumentList			4813798	1					
ANR	4813822	CompoundStatement		5:40:85:85	4813798	1					
ANR	4813823	IfStatement	if ( log -> get_op_type ( ) == op_type )		4813798	0					
ANR	4813824	Condition	log -> get_op_type ( ) == op_type	605:6:16207:16235	4813798	0	True				
ANR	4813825	EqualityExpression	log -> get_op_type ( ) == op_type		4813798	0		==			
ANR	4813826	CallExpression	log -> get_op_type ( )		4813798	0					
ANR	4813827	Callee	log -> get_op_type		4813798	0					
ANR	4813828	PtrMemberAccess	log -> get_op_type		4813798	0					
ANR	4813829	Identifier	log		4813798	0					
ANR	4813830	Identifier	get_op_type		4813798	1					
ANR	4813831	ArgumentList			4813798	1					
ANR	4813832	Identifier	op_type		4813798	1					
ANR	4813833	CompoundStatement		6:38:125:125	4813798	1					
ANR	4813834	ExpressionStatement	new_keys . push_back ( log -> get_key ( ) )	606:3:16244:16280	4813798	0	True				
ANR	4813835	CallExpression	new_keys . push_back ( log -> get_key ( ) )		4813798	0					
ANR	4813836	Callee	new_keys . push_back		4813798	0					
ANR	4813837	MemberAccess	new_keys . push_back		4813798	0					
ANR	4813838	Identifier	new_keys		4813798	0					
ANR	4813839	Identifier	push_back		4813798	1					
ANR	4813840	ArgumentList	log -> get_key ( )		4813798	1					
ANR	4813841	Argument	log -> get_key ( )		4813798	0					
ANR	4813842	CallExpression	log -> get_key ( )		4813798	0					
ANR	4813843	Callee	log -> get_key		4813798	0					
ANR	4813844	PtrMemberAccess	log -> get_key		4813798	0					
ANR	4813845	Identifier	log		4813798	0					
ANR	4813846	Identifier	get_key		4813798	1					
ANR	4813847	ArgumentList			4813798	1					
ANR	4813848	ReturnType	void		4813798	1					
ANR	4813849	Identifier	Transaction :: InTransactionListKeysWithOpType		4813798	2					
ANR	4813850	ParameterList	"int op_type , std :: list < std :: string > & new_keys"		4813798	3					
ANR	4813851	Parameter	int op_type	599:46:16065:16075	4813798	0	True				
ANR	4813852	ParameterType	int		4813798	0					
ANR	4813853	Identifier	op_type		4813798	1					
ANR	4813854	Parameter	std :: list < std :: string > & new_keys	599:59:16078:16109	4813798	1	True				
ANR	4813855	ParameterType	std :: list < std :: string > &		4813798	0					
ANR	4813856	Identifier	new_keys		4813798	1					
ANR	4813857	CFGEntryNode	ENTRY		4813798		True				
ANR	4813858	CFGExitNode	EXIT		4813798		True				
ANR	4813859	Symbol	log		4813798						
ANR	4813860	Symbol	ordered_op_log		4813798						
ANR	4813861	Symbol	new_keys		4813798						
ANR	4813862	Symbol	ordered_op_log . Next		4813798						
ANR	4813863	Symbol	op_type		4813798						
ANR	4813864	Symbol	log -> get_op_type		4813798						
ANR	4813865	Symbol	* log		4813798						
ANR	4813866	Symbol	log -> get_key		4813798						
