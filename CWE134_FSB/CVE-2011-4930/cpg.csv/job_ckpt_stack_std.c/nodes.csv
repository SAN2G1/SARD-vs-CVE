command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1713109	File	data/converged/CVE-2011-4930_htcondor/job_ckpt_stack_std.c								
ANR	1713110	ClassDef	Frame	54:0:2290:2569							
ANR	1713111	DeclStmt									
ANR	1713112	Decl							int	int	value
ANR	1713113	DeclStmt									
ANR	1713114	Decl							int	int *	data
ANR	1713115	DeclStmt									
ANR	1713116	Decl							int	int	size
ANR	1713117	DeclStmt									
ANR	1713118	Decl							struct Frame	struct Frame *	previous
ANR	1713119	DeclStmt									
ANR	1713120	Decl							void	"void ( int * data , int size , int value )"	init_data
ANR	1713121	DeclStmt									
ANR	1713122	Decl							int	"int ( struct Frame * pf , int old_value )"	deepen
ANR	1713123	DeclStmt									
ANR	1713124	Decl							int	"int ( struct Frame * f , int value )"	is_stack_valid
ANR	1713125	DeclStmt									
ANR	1713126	Decl							int	"int ( int * data , int size , int value )"	data_valid
ANR	1713127	DeclStmt									
ANR	1713128	Decl							int	int	g_sum
ANR	1713129	Function	main	74:0:2832:3767							
ANR	1713130	FunctionDef	main ()		1713129	0					
ANR	1713131	CompoundStatement		75:0:2847:3767	1713129	0					
ANR	1713132	IdentifierDeclStatement	int data [ STACKINCREMENT ] ;	77:1:2925:2949	1713129	0	True				
ANR	1713133	IdentifierDecl	data [ STACKINCREMENT ]		1713129	0					
ANR	1713134	IdentifierDeclType	int [ STACKINCREMENT ]		1713129	0					
ANR	1713135	Identifier	data		1713129	1					
ANR	1713136	Identifier	STACKINCREMENT		1713129	2					
ANR	1713137	IdentifierDeclStatement	struct Frame f ;	78:1:2952:2966	1713129	1	True				
ANR	1713138	IdentifierDecl	f		1713129	0					
ANR	1713139	IdentifierDeclType	struct Frame		1713129	0					
ANR	1713140	Identifier	f		1713129	1					
ANR	1713141	IdentifierDeclStatement	int validity ;	79:1:2969:2981	1713129	2	True				
ANR	1713142	IdentifierDecl	validity		1713129	0					
ANR	1713143	IdentifierDeclType	int		1713129	0					
ANR	1713144	Identifier	validity		1713129	1					
ANR	1713145	IdentifierDeclStatement	"int a , b , c ;"	80:1:2984:2995	1713129	3	True				
ANR	1713146	IdentifierDecl	a		1713129	0					
ANR	1713147	IdentifierDeclType	int		1713129	0					
ANR	1713148	Identifier	a		1713129	1					
ANR	1713149	IdentifierDecl	b		1713129	1					
ANR	1713150	IdentifierDeclType	int		1713129	0					
ANR	1713151	Identifier	b		1713129	1					
ANR	1713152	IdentifierDecl	c		1713129	2					
ANR	1713153	IdentifierDeclType	int		1713129	0					
ANR	1713154	Identifier	c		1713129	1					
ANR	1713155	ExpressionStatement	"init_data ( data , STACKINCREMENT , 0 )"	82:1:2999:3033	1713129	4	True				
ANR	1713156	CallExpression	"init_data ( data , STACKINCREMENT , 0 )"		1713129	0					
ANR	1713157	Callee	init_data		1713129	0					
ANR	1713158	Identifier	init_data		1713129	0					
ANR	1713159	ArgumentList	data		1713129	1					
ANR	1713160	Argument	data		1713129	0					
ANR	1713161	Identifier	data		1713129	0					
ANR	1713162	Argument	STACKINCREMENT		1713129	1					
ANR	1713163	Identifier	STACKINCREMENT		1713129	0					
ANR	1713164	Argument	0		1713129	2					
ANR	1713165	PrimaryExpression	0		1713129	0					
ANR	1713166	ExpressionStatement	f . value = 0	87:1:3292:3303	1713129	5	True				
ANR	1713167	AssignmentExpression	f . value = 0		1713129	0		=			
ANR	1713168	MemberAccess	f . value		1713129	0					
ANR	1713169	Identifier	f		1713129	0					
ANR	1713170	Identifier	value		1713129	1					
ANR	1713171	PrimaryExpression	0		1713129	1					
ANR	1713172	ExpressionStatement	f . data = & data [ 0 ]	88:1:3307:3324	1713129	6	True				
ANR	1713173	AssignmentExpression	f . data = & data [ 0 ]		1713129	0		=			
ANR	1713174	MemberAccess	f . data		1713129	0					
ANR	1713175	Identifier	f		1713129	0					
ANR	1713176	Identifier	data		1713129	1					
ANR	1713177	UnaryOperationExpression	& data [ 0 ]		1713129	1					
ANR	1713178	UnaryOperator	&		1713129	0					
ANR	1713179	ArrayIndexing	data [ 0 ]		1713129	1					
ANR	1713180	Identifier	data		1713129	0					
ANR	1713181	PrimaryExpression	0		1713129	1					
ANR	1713182	ExpressionStatement	f . size = STACKINCREMENT	89:1:3327:3350	1713129	7	True				
ANR	1713183	AssignmentExpression	f . size = STACKINCREMENT		1713129	0		=			
ANR	1713184	MemberAccess	f . size		1713129	0					
ANR	1713185	Identifier	f		1713129	0					
ANR	1713186	Identifier	size		1713129	1					
ANR	1713187	Identifier	STACKINCREMENT		1713129	1					
ANR	1713188	ExpressionStatement	f . previous = NULL	90:1:3353:3370	1713129	8	True				
ANR	1713189	AssignmentExpression	f . previous = NULL		1713129	0		=			
ANR	1713190	MemberAccess	f . previous		1713129	0					
ANR	1713191	Identifier	f		1713129	0					
ANR	1713192	Identifier	previous		1713129	1					
ANR	1713193	Identifier	NULL		1713129	1					
ANR	1713194	ExpressionStatement	g_sum += STACKINCREMENT	91:1:3373:3396	1713129	9	True				
ANR	1713195	AssignmentExpression	g_sum += STACKINCREMENT		1713129	0		+=			
ANR	1713196	Identifier	g_sum		1713129	0					
ANR	1713197	Identifier	STACKINCREMENT		1713129	1					
ANR	1713198	ExpressionStatement	"a = is_stack_valid ( & f , 0 )"	93:1:3443:3468	1713129	10	True				
ANR	1713199	AssignmentExpression	"a = is_stack_valid ( & f , 0 )"		1713129	0		=			
ANR	1713200	Identifier	a		1713129	0					
ANR	1713201	CallExpression	"is_stack_valid ( & f , 0 )"		1713129	1					
ANR	1713202	Callee	is_stack_valid		1713129	0					
ANR	1713203	Identifier	is_stack_valid		1713129	0					
ANR	1713204	ArgumentList	& f		1713129	1					
ANR	1713205	Argument	& f		1713129	0					
ANR	1713206	UnaryOperationExpression	& f		1713129	0					
ANR	1713207	UnaryOperator	&		1713129	0					
ANR	1713208	Identifier	f		1713129	1					
ANR	1713209	Argument	0		1713129	1					
ANR	1713210	PrimaryExpression	0		1713129	0					
ANR	1713211	ExpressionStatement	"printf ( ""Deepness Level: %d\\n"" , 0 )"	94:1:3471:3504	1713129	11	True				
ANR	1713212	CallExpression	"printf ( ""Deepness Level: %d\\n"" , 0 )"		1713129	0					
ANR	1713213	Callee	printf		1713129	0					
ANR	1713214	Identifier	printf		1713129	0					
ANR	1713215	ArgumentList	"""Deepness Level: %d\\n"""		1713129	1					
ANR	1713216	Argument	"""Deepness Level: %d\\n"""		1713129	0					
ANR	1713217	PrimaryExpression	"""Deepness Level: %d\\n"""		1713129	0					
ANR	1713218	Argument	0		1713129	1					
ANR	1713219	PrimaryExpression	0		1713129	0					
ANR	1713220	ExpressionStatement	"b = deepen ( & f , 0 )"	95:1:3507:3524	1713129	12	True				
ANR	1713221	AssignmentExpression	"b = deepen ( & f , 0 )"		1713129	0		=			
ANR	1713222	Identifier	b		1713129	0					
ANR	1713223	CallExpression	"deepen ( & f , 0 )"		1713129	1					
ANR	1713224	Callee	deepen		1713129	0					
ANR	1713225	Identifier	deepen		1713129	0					
ANR	1713226	ArgumentList	& f		1713129	1					
ANR	1713227	Argument	& f		1713129	0					
ANR	1713228	UnaryOperationExpression	& f		1713129	0					
ANR	1713229	UnaryOperator	&		1713129	0					
ANR	1713230	Identifier	f		1713129	1					
ANR	1713231	Argument	0		1713129	1					
ANR	1713232	PrimaryExpression	0		1713129	0					
ANR	1713233	ExpressionStatement	"printf ( ""Backchecking %d\\n"" , 0 ) , c = is_stack_valid ( & f , 0 )"	96:1:3527:3586	1713129	13	True				
ANR	1713234	Expression	"printf ( ""Backchecking %d\\n"" , 0 ) , c = is_stack_valid ( & f , 0 )"		1713129	0					
ANR	1713235	CallExpression	"printf ( ""Backchecking %d\\n"" , 0 )"		1713129	0					
ANR	1713236	Callee	printf		1713129	0					
ANR	1713237	Identifier	printf		1713129	0					
ANR	1713238	ArgumentList	"""Backchecking %d\\n"""		1713129	1					
ANR	1713239	Argument	"""Backchecking %d\\n"""		1713129	0					
ANR	1713240	PrimaryExpression	"""Backchecking %d\\n"""		1713129	0					
ANR	1713241	Argument	0		1713129	1					
ANR	1713242	PrimaryExpression	0		1713129	0					
ANR	1713243	AssignmentExpression	"c = is_stack_valid ( & f , 0 )"		1713129	1		=			
ANR	1713244	Identifier	c		1713129	0					
ANR	1713245	CallExpression	"is_stack_valid ( & f , 0 )"		1713129	1					
ANR	1713246	Callee	is_stack_valid		1713129	0					
ANR	1713247	Identifier	is_stack_valid		1713129	0					
ANR	1713248	ArgumentList	& f		1713129	1					
ANR	1713249	Argument	& f		1713129	0					
ANR	1713250	UnaryOperationExpression	& f		1713129	0					
ANR	1713251	UnaryOperator	&		1713129	0					
ANR	1713252	Identifier	f		1713129	1					
ANR	1713253	Argument	0		1713129	1					
ANR	1713254	PrimaryExpression	0		1713129	0					
ANR	1713255	ExpressionStatement	validity = a && b && c	98:1:3589:3611	1713129	14	True				
ANR	1713256	AssignmentExpression	validity = a && b && c		1713129	0		=			
ANR	1713257	Identifier	validity		1713129	0					
ANR	1713258	AndExpression	a && b && c		1713129	1		&&			
ANR	1713259	Identifier	a		1713129	0					
ANR	1713260	AndExpression	b && c		1713129	1		&&			
ANR	1713261	Identifier	b		1713129	0					
ANR	1713262	Identifier	c		1713129	1					
ANR	1713263	IfStatement	if ( validity == FALSE )		1713129	15					
ANR	1713264	Condition	validity == FALSE	99:5:3618:3634	1713129	0	True				
ANR	1713265	EqualityExpression	validity == FALSE		1713129	0		==			
ANR	1713266	Identifier	validity		1713129	0					
ANR	1713267	Identifier	FALSE		1713129	1					
ANR	1713268	CompoundStatement		26:1:790:790	1713129	1					
ANR	1713269	ExpressionStatement	"printf ( ""FAILED\\n"" )"	101:2:3642:3660	1713129	0	True				
ANR	1713270	CallExpression	"printf ( ""FAILED\\n"" )"		1713129	0					
ANR	1713271	Callee	printf		1713129	0					
ANR	1713272	Identifier	printf		1713129	0					
ANR	1713273	ArgumentList	"""FAILED\\n"""		1713129	1					
ANR	1713274	Argument	"""FAILED\\n"""		1713129	0					
ANR	1713275	PrimaryExpression	"""FAILED\\n"""		1713129	0					
ANR	1713276	ExpressionStatement	exit ( EXIT_FAILURE )	102:2:3664:3682	1713129	1	True				
ANR	1713277	CallExpression	exit ( EXIT_FAILURE )		1713129	0					
ANR	1713278	Callee	exit		1713129	0					
ANR	1713279	Identifier	exit		1713129	0					
ANR	1713280	ArgumentList	EXIT_FAILURE		1713129	1					
ANR	1713281	Argument	EXIT_FAILURE		1713129	0					
ANR	1713282	Identifier	EXIT_FAILURE		1713129	0					
ANR	1713283	ElseStatement	else		1713129	0					
ANR	1713284	CompoundStatement		31:1:846:846	1713129	0					
ANR	1713285	ExpressionStatement	"printf ( ""SUCCESS\\n"" )"	106:2:3698:3717	1713129	0	True				
ANR	1713286	CallExpression	"printf ( ""SUCCESS\\n"" )"		1713129	0					
ANR	1713287	Callee	printf		1713129	0					
ANR	1713288	Identifier	printf		1713129	0					
ANR	1713289	ArgumentList	"""SUCCESS\\n"""		1713129	1					
ANR	1713290	Argument	"""SUCCESS\\n"""		1713129	0					
ANR	1713291	PrimaryExpression	"""SUCCESS\\n"""		1713129	0					
ANR	1713292	ExpressionStatement	exit ( EXIT_SUCCESS )	107:2:3721:3739	1713129	1	True				
ANR	1713293	CallExpression	exit ( EXIT_SUCCESS )		1713129	0					
ANR	1713294	Callee	exit		1713129	0					
ANR	1713295	Identifier	exit		1713129	0					
ANR	1713296	ArgumentList	EXIT_SUCCESS		1713129	1					
ANR	1713297	Argument	EXIT_SUCCESS		1713129	0					
ANR	1713298	Identifier	EXIT_SUCCESS		1713129	0					
ANR	1713299	ReturnStatement	return EXIT_FAILURE ;	110:1:3746:3765	1713129	16	True				
ANR	1713300	Identifier	EXIT_FAILURE		1713129	0					
ANR	1713301	ReturnType	int		1713129	1					
ANR	1713302	Identifier	main		1713129	2					
ANR	1713303	ParameterList			1713129	3					
ANR	1713304	CFGEntryNode	ENTRY		1713129		True				
ANR	1713305	CFGExitNode	EXIT		1713129		True				
ANR	1713306	Symbol	a		1713129						
ANR	1713307	Symbol	b		1713129						
ANR	1713308	Symbol	c		1713129						
ANR	1713309	Symbol	NULL		1713129						
ANR	1713310	Symbol	data		1713129						
ANR	1713311	Symbol	f		1713129						
ANR	1713312	Symbol	f . data		1713129						
ANR	1713313	Symbol	g_sum		1713129						
ANR	1713314	Symbol	& f		1713129						
ANR	1713315	Symbol	f . previous		1713129						
ANR	1713316	Symbol	f . value		1713129						
ANR	1713317	Symbol	EXIT_FAILURE		1713129						
ANR	1713318	Symbol	deepen		1713129						
ANR	1713319	Symbol	EXIT_SUCCESS		1713129						
ANR	1713320	Symbol	STACKINCREMENT		1713129						
ANR	1713321	Symbol	is_stack_valid		1713129						
ANR	1713322	Symbol	f . size		1713129						
ANR	1713323	Symbol	FALSE		1713129						
ANR	1713324	Symbol	validity		1713129						
ANR	1713325	Function	init_data	114:0:3815:3927							
ANR	1713326	FunctionDef	"init_data (int * data , int size , int value)"		1713325	0					
ANR	1713327	CompoundStatement		115:0:3862:3927	1713325	0					
ANR	1713328	IdentifierDeclStatement	int i ;	116:1:3865:3870	1713325	0	True				
ANR	1713329	IdentifierDecl	i		1713325	0					
ANR	1713330	IdentifierDeclType	int		1713325	0					
ANR	1713331	Identifier	i		1713325	1					
ANR	1713332	ForStatement	for ( i = 0 ; i < size ; i ++ )		1713325	1					
ANR	1713333	ForInit	i = 0 ;	118:6:3880:3885	1713325	0	True				
ANR	1713334	AssignmentExpression	i = 0		1713325	0		=			
ANR	1713335	Identifier	i		1713325	0					
ANR	1713336	PrimaryExpression	0		1713325	1					
ANR	1713337	Condition	i < size	118:13:3887:3894	1713325	1	True				
ANR	1713338	RelationalExpression	i < size		1713325	0		<			
ANR	1713339	Identifier	i		1713325	0					
ANR	1713340	Identifier	size		1713325	1					
ANR	1713341	PostIncDecOperationExpression	i ++	118:23:3897:3899	1713325	2	True				
ANR	1713342	Identifier	i		1713325	0					
ANR	1713343	IncDec	++		1713325	1					
ANR	1713344	CompoundStatement		5:1:40:40	1713325	3					
ANR	1713345	ExpressionStatement	data [ i ] = value	120:2:3907:3922	1713325	0	True				
ANR	1713346	AssignmentExpression	data [ i ] = value		1713325	0		=			
ANR	1713347	ArrayIndexing	data [ i ]		1713325	0					
ANR	1713348	Identifier	data		1713325	0					
ANR	1713349	Identifier	i		1713325	1					
ANR	1713350	Identifier	value		1713325	1					
ANR	1713351	ReturnType	void		1713325	1					
ANR	1713352	Identifier	init_data		1713325	2					
ANR	1713353	ParameterList	"int * data , int size , int value"		1713325	3					
ANR	1713354	Parameter	int * data	114:15:3830:3838	1713325	0	True				
ANR	1713355	ParameterType	int *		1713325	0					
ANR	1713356	Identifier	data		1713325	1					
ANR	1713357	Parameter	int size	114:26:3841:3848	1713325	1	True				
ANR	1713358	ParameterType	int		1713325	0					
ANR	1713359	Identifier	size		1713325	1					
ANR	1713360	Parameter	int value	114:36:3851:3859	1713325	2	True				
ANR	1713361	ParameterType	int		1713325	0					
ANR	1713362	Identifier	value		1713325	1					
ANR	1713363	CFGEntryNode	ENTRY		1713325		True				
ANR	1713364	CFGExitNode	EXIT		1713325		True				
ANR	1713365	Symbol	* i		1713325						
ANR	1713366	Symbol	data		1713325						
ANR	1713367	Symbol	size		1713325						
ANR	1713368	Symbol	i		1713325						
ANR	1713369	Symbol	value		1713325						
ANR	1713370	Symbol	* data		1713325						
ANR	1713371	Function	deepen	126:0:4027:5051							
ANR	1713372	FunctionDef	"deepen (struct Frame * pf , int old_value)"		1713371	0					
ANR	1713373	CompoundStatement		127:0:4071:5051	1713371	0					
ANR	1713374	IdentifierDeclStatement	int test ;	128:1:4074:4082	1713371	0	True				
ANR	1713375	IdentifierDecl	test		1713371	0					
ANR	1713376	IdentifierDeclType	int		1713371	0					
ANR	1713377	Identifier	test		1713371	1					
ANR	1713378	IdentifierDeclStatement	int data [ STACKINCREMENT ] ;	129:1:4085:4109	1713371	1	True				
ANR	1713379	IdentifierDecl	data [ STACKINCREMENT ]		1713371	0					
ANR	1713380	IdentifierDeclType	int [ STACKINCREMENT ]		1713371	0					
ANR	1713381	Identifier	data		1713371	1					
ANR	1713382	Identifier	STACKINCREMENT		1713371	2					
ANR	1713383	IdentifierDeclStatement	struct Frame f ;	130:1:4112:4126	1713371	2	True				
ANR	1713384	IdentifierDecl	f		1713371	0					
ANR	1713385	IdentifierDeclType	struct Frame		1713371	0					
ANR	1713386	Identifier	f		1713371	1					
ANR	1713387	IdentifierDeclStatement	int new_value = old_value + 1 ;	131:1:4129:4158	1713371	3	True				
ANR	1713388	IdentifierDecl	new_value = old_value + 1		1713371	0					
ANR	1713389	IdentifierDeclType	int		1713371	0					
ANR	1713390	Identifier	new_value		1713371	1					
ANR	1713391	AssignmentExpression	new_value = old_value + 1		1713371	2		=			
ANR	1713392	Identifier	new_value		1713371	0					
ANR	1713393	AdditiveExpression	old_value + 1		1713371	1		+			
ANR	1713394	Identifier	old_value		1713371	0					
ANR	1713395	PrimaryExpression	1		1713371	1					
ANR	1713396	IdentifierDeclStatement	"int a , b ;"	132:1:4161:4169	1713371	4	True				
ANR	1713397	IdentifierDecl	a		1713371	0					
ANR	1713398	IdentifierDeclType	int		1713371	0					
ANR	1713399	Identifier	a		1713371	1					
ANR	1713400	IdentifierDecl	b		1713371	1					
ANR	1713401	IdentifierDeclType	int		1713371	0					
ANR	1713402	Identifier	b		1713371	1					
ANR	1713403	ExpressionStatement	"printf ( ""Deepness Level: %d\\n"" , new_value )"	134:1:4173:4214	1713371	5	True				
ANR	1713404	CallExpression	"printf ( ""Deepness Level: %d\\n"" , new_value )"		1713371	0					
ANR	1713405	Callee	printf		1713371	0					
ANR	1713406	Identifier	printf		1713371	0					
ANR	1713407	ArgumentList	"""Deepness Level: %d\\n"""		1713371	1					
ANR	1713408	Argument	"""Deepness Level: %d\\n"""		1713371	0					
ANR	1713409	PrimaryExpression	"""Deepness Level: %d\\n"""		1713371	0					
ANR	1713410	Argument	new_value		1713371	1					
ANR	1713411	Identifier	new_value		1713371	0					
ANR	1713412	ExpressionStatement	"init_data ( data , STACKINCREMENT , new_value )"	135:1:4217:4259	1713371	6	True				
ANR	1713413	CallExpression	"init_data ( data , STACKINCREMENT , new_value )"		1713371	0					
ANR	1713414	Callee	init_data		1713371	0					
ANR	1713415	Identifier	init_data		1713371	0					
ANR	1713416	ArgumentList	data		1713371	1					
ANR	1713417	Argument	data		1713371	0					
ANR	1713418	Identifier	data		1713371	0					
ANR	1713419	Argument	STACKINCREMENT		1713371	1					
ANR	1713420	Identifier	STACKINCREMENT		1713371	0					
ANR	1713421	Argument	new_value		1713371	2					
ANR	1713422	Identifier	new_value		1713371	0					
ANR	1713423	ExpressionStatement	f . value = new_value	136:1:4262:4281	1713371	7	True				
ANR	1713424	AssignmentExpression	f . value = new_value		1713371	0		=			
ANR	1713425	MemberAccess	f . value		1713371	0					
ANR	1713426	Identifier	f		1713371	0					
ANR	1713427	Identifier	value		1713371	1					
ANR	1713428	Identifier	new_value		1713371	1					
ANR	1713429	ExpressionStatement	f . data = & data [ 0 ]	137:1:4284:4301	1713371	8	True				
ANR	1713430	AssignmentExpression	f . data = & data [ 0 ]		1713371	0		=			
ANR	1713431	MemberAccess	f . data		1713371	0					
ANR	1713432	Identifier	f		1713371	0					
ANR	1713433	Identifier	data		1713371	1					
ANR	1713434	UnaryOperationExpression	& data [ 0 ]		1713371	1					
ANR	1713435	UnaryOperator	&		1713371	0					
ANR	1713436	ArrayIndexing	data [ 0 ]		1713371	1					
ANR	1713437	Identifier	data		1713371	0					
ANR	1713438	PrimaryExpression	0		1713371	1					
ANR	1713439	ExpressionStatement	f . size = STACKINCREMENT	138:1:4304:4327	1713371	9	True				
ANR	1713440	AssignmentExpression	f . size = STACKINCREMENT		1713371	0		=			
ANR	1713441	MemberAccess	f . size		1713371	0					
ANR	1713442	Identifier	f		1713371	0					
ANR	1713443	Identifier	size		1713371	1					
ANR	1713444	Identifier	STACKINCREMENT		1713371	1					
ANR	1713445	ExpressionStatement	f . previous = pf	139:1:4330:4345	1713371	10	True				
ANR	1713446	AssignmentExpression	f . previous = pf		1713371	0		=			
ANR	1713447	MemberAccess	f . previous		1713371	0					
ANR	1713448	Identifier	f		1713371	0					
ANR	1713449	Identifier	previous		1713371	1					
ANR	1713450	Identifier	pf		1713371	1					
ANR	1713451	ExpressionStatement	g_sum += STACKINCREMENT	140:1:4348:4371	1713371	11	True				
ANR	1713452	AssignmentExpression	g_sum += STACKINCREMENT		1713371	0		+=			
ANR	1713453	Identifier	g_sum		1713371	0					
ANR	1713454	Identifier	STACKINCREMENT		1713371	1					
ANR	1713455	ExpressionStatement	"test = is_stack_valid ( & f , new_value )"	142:1:4418:4454	1713371	12	True				
ANR	1713456	AssignmentExpression	"test = is_stack_valid ( & f , new_value )"		1713371	0		=			
ANR	1713457	Identifier	test		1713371	0					
ANR	1713458	CallExpression	"is_stack_valid ( & f , new_value )"		1713371	1					
ANR	1713459	Callee	is_stack_valid		1713371	0					
ANR	1713460	Identifier	is_stack_valid		1713371	0					
ANR	1713461	ArgumentList	& f		1713371	1					
ANR	1713462	Argument	& f		1713371	0					
ANR	1713463	UnaryOperationExpression	& f		1713371	0					
ANR	1713464	UnaryOperator	&		1713371	0					
ANR	1713465	Identifier	f		1713371	1					
ANR	1713466	Argument	new_value		1713371	1					
ANR	1713467	Identifier	new_value		1713371	0					
ANR	1713468	IfStatement	if ( test == TRUE )		1713371	13					
ANR	1713469	Condition	test == TRUE	144:5:4462:4473	1713371	0	True				
ANR	1713470	EqualityExpression	test == TRUE		1713371	0		==			
ANR	1713471	Identifier	test		1713371	0					
ANR	1713472	Identifier	TRUE		1713371	1					
ANR	1713473	CompoundStatement		19:1:405:405	1713371	1					
ANR	1713474	IfStatement	if ( g_sum < STACKSIZETARGET )		1713371	0					
ANR	1713475	Condition	g_sum < STACKSIZETARGET	146:6:4485:4507	1713371	0	True				
ANR	1713476	RelationalExpression	g_sum < STACKSIZETARGET		1713371	0		<			
ANR	1713477	Identifier	g_sum		1713371	0					
ANR	1713478	Identifier	STACKSIZETARGET		1713371	1					
ANR	1713479	CompoundStatement		21:2:440:440	1713371	1					
ANR	1713480	ExpressionStatement	"a = deepen ( & f , new_value )"	149:4:4568:4593	1713371	0	True				
ANR	1713481	AssignmentExpression	"a = deepen ( & f , new_value )"		1713371	0		=			
ANR	1713482	Identifier	a		1713371	0					
ANR	1713483	CallExpression	"deepen ( & f , new_value )"		1713371	1					
ANR	1713484	Callee	deepen		1713371	0					
ANR	1713485	Identifier	deepen		1713371	0					
ANR	1713486	ArgumentList	& f		1713371	1					
ANR	1713487	Argument	& f		1713371	0					
ANR	1713488	UnaryOperationExpression	& f		1713371	0					
ANR	1713489	UnaryOperator	&		1713371	0					
ANR	1713490	Identifier	f		1713371	1					
ANR	1713491	Argument	new_value		1713371	1					
ANR	1713492	Identifier	new_value		1713371	0					
ANR	1713493	ExpressionStatement	"printf ( ""Backchecking %d\\n"" , new_value ) , b = is_stack_valid ( & f , new_value )"	150:4:4599:4677	1713371	1	True				
ANR	1713494	Expression	"printf ( ""Backchecking %d\\n"" , new_value ) , b = is_stack_valid ( & f , new_value )"		1713371	0					
ANR	1713495	CallExpression	"printf ( ""Backchecking %d\\n"" , new_value )"		1713371	0					
ANR	1713496	Callee	printf		1713371	0					
ANR	1713497	Identifier	printf		1713371	0					
ANR	1713498	ArgumentList	"""Backchecking %d\\n"""		1713371	1					
ANR	1713499	Argument	"""Backchecking %d\\n"""		1713371	0					
ANR	1713500	PrimaryExpression	"""Backchecking %d\\n"""		1713371	0					
ANR	1713501	Argument	new_value		1713371	1					
ANR	1713502	Identifier	new_value		1713371	0					
ANR	1713503	AssignmentExpression	"b = is_stack_valid ( & f , new_value )"		1713371	1		=			
ANR	1713504	Identifier	b		1713371	0					
ANR	1713505	CallExpression	"is_stack_valid ( & f , new_value )"		1713371	1					
ANR	1713506	Callee	is_stack_valid		1713371	0					
ANR	1713507	Identifier	is_stack_valid		1713371	0					
ANR	1713508	ArgumentList	& f		1713371	1					
ANR	1713509	Argument	& f		1713371	0					
ANR	1713510	UnaryOperationExpression	& f		1713371	0					
ANR	1713511	UnaryOperator	&		1713371	0					
ANR	1713512	Identifier	f		1713371	1					
ANR	1713513	Argument	new_value		1713371	1					
ANR	1713514	Identifier	new_value		1713371	0					
ANR	1713515	ReturnStatement	return a && b ;	153:4:4684:4697	1713371	2	True				
ANR	1713516	AndExpression	a && b		1713371	0		&&			
ANR	1713517	Identifier	a		1713371	0					
ANR	1713518	Identifier	b		1713371	1					
ANR	1713519	ExpressionStatement	"printf ( ""About to checkpoint....\\n"" )"	156:2:4757:4792	1713371	1	True				
ANR	1713520	CallExpression	"printf ( ""About to checkpoint....\\n"" )"		1713371	0					
ANR	1713521	Callee	printf		1713371	0					
ANR	1713522	Identifier	printf		1713371	0					
ANR	1713523	ArgumentList	"""About to checkpoint....\\n"""		1713371	1					
ANR	1713524	Argument	"""About to checkpoint....\\n"""		1713371	0					
ANR	1713525	PrimaryExpression	"""About to checkpoint....\\n"""		1713371	0					
ANR	1713526	ExpressionStatement	ckpt_and_exit ( )	157:2:4796:4811	1713371	2	True				
ANR	1713527	CallExpression	ckpt_and_exit ( )		1713371	0					
ANR	1713528	Callee	ckpt_and_exit		1713371	0					
ANR	1713529	Identifier	ckpt_and_exit		1713371	0					
ANR	1713530	ArgumentList			1713371	1					
ANR	1713531	ExpressionStatement	"printf ( ""Returning from checkpoint....\\n"" )"	158:2:4815:4856	1713371	3	True				
ANR	1713532	CallExpression	"printf ( ""Returning from checkpoint....\\n"" )"		1713371	0					
ANR	1713533	Callee	printf		1713371	0					
ANR	1713534	Identifier	printf		1713371	0					
ANR	1713535	ArgumentList	"""Returning from checkpoint....\\n"""		1713371	1					
ANR	1713536	Argument	"""Returning from checkpoint....\\n"""		1713371	0					
ANR	1713537	PrimaryExpression	"""Returning from checkpoint....\\n"""		1713371	0					
ANR	1713538	ExpressionStatement	"test = is_stack_valid ( & f , new_value )"	161:2:4979:5015	1713371	4	True				
ANR	1713539	AssignmentExpression	"test = is_stack_valid ( & f , new_value )"		1713371	0		=			
ANR	1713540	Identifier	test		1713371	0					
ANR	1713541	CallExpression	"is_stack_valid ( & f , new_value )"		1713371	1					
ANR	1713542	Callee	is_stack_valid		1713371	0					
ANR	1713543	Identifier	is_stack_valid		1713371	0					
ANR	1713544	ArgumentList	& f		1713371	1					
ANR	1713545	Argument	& f		1713371	0					
ANR	1713546	UnaryOperationExpression	& f		1713371	0					
ANR	1713547	UnaryOperator	&		1713371	0					
ANR	1713548	Identifier	f		1713371	1					
ANR	1713549	Argument	new_value		1713371	1					
ANR	1713550	Identifier	new_value		1713371	0					
ANR	1713551	ReturnStatement	return test ;	162:2:5019:5030	1713371	5	True				
ANR	1713552	Identifier	test		1713371	0					
ANR	1713553	ReturnStatement	return FALSE ;	165:1:5037:5049	1713371	14	True				
ANR	1713554	Identifier	FALSE		1713371	0					
ANR	1713555	ReturnType	int		1713371	1					
ANR	1713556	Identifier	deepen		1713371	2					
ANR	1713557	ParameterList	"struct Frame * pf , int old_value"		1713371	3					
ANR	1713558	Parameter	struct Frame * pf	126:11:4038:4053	1713371	0	True				
ANR	1713559	ParameterType	struct Frame *		1713371	0					
ANR	1713560	Identifier	pf		1713371	1					
ANR	1713561	Parameter	int old_value	126:29:4056:4068	1713371	1	True				
ANR	1713562	ParameterType	int		1713371	0					
ANR	1713563	Identifier	old_value		1713371	1					
ANR	1713564	CFGEntryNode	ENTRY		1713371		True				
ANR	1713565	CFGExitNode	EXIT		1713371		True				
ANR	1713566	Symbol	a		1713371						
ANR	1713567	Symbol	b		1713371						
ANR	1713568	Symbol	test		1713371						
ANR	1713569	Symbol	data		1713371						
ANR	1713570	Symbol	f		1713371						
ANR	1713571	Symbol	f . data		1713371						
ANR	1713572	Symbol	TRUE		1713371						
ANR	1713573	Symbol	g_sum		1713371						
ANR	1713574	Symbol	& f		1713371						
ANR	1713575	Symbol	f . previous		1713371						
ANR	1713576	Symbol	STACKSIZETARGET		1713371						
ANR	1713577	Symbol	f . value		1713371						
ANR	1713578	Symbol	pf		1713371						
ANR	1713579	Symbol	deepen		1713371						
ANR	1713580	Symbol	STACKINCREMENT		1713371						
ANR	1713581	Symbol	is_stack_valid		1713371						
ANR	1713582	Symbol	old_value		1713371						
ANR	1713583	Symbol	f . size		1713371						
ANR	1713584	Symbol	FALSE		1713371						
ANR	1713585	Symbol	new_value		1713371						
ANR	1713586	Function	is_stack_valid	170:0:5184:5463							
ANR	1713587	FunctionDef	"is_stack_valid (struct Frame * f , int value)"		1713586	0					
ANR	1713588	CompoundStatement		171:0:5231:5463	1713586	0					
ANR	1713589	IdentifierDeclStatement	int check ;	172:1:5234:5243	1713586	0	True				
ANR	1713590	IdentifierDecl	check		1713586	0					
ANR	1713591	IdentifierDeclType	int		1713586	0					
ANR	1713592	Identifier	check		1713586	1					
ANR	1713593	ExpressionStatement	"check = data_valid ( f -> data , f -> size , value )"	174:1:5247:5290	1713586	1	True				
ANR	1713594	AssignmentExpression	"check = data_valid ( f -> data , f -> size , value )"		1713586	0		=			
ANR	1713595	Identifier	check		1713586	0					
ANR	1713596	CallExpression	"data_valid ( f -> data , f -> size , value )"		1713586	1					
ANR	1713597	Callee	data_valid		1713586	0					
ANR	1713598	Identifier	data_valid		1713586	0					
ANR	1713599	ArgumentList	f -> data		1713586	1					
ANR	1713600	Argument	f -> data		1713586	0					
ANR	1713601	PtrMemberAccess	f -> data		1713586	0					
ANR	1713602	Identifier	f		1713586	0					
ANR	1713603	Identifier	data		1713586	1					
ANR	1713604	Argument	f -> size		1713586	1					
ANR	1713605	PtrMemberAccess	f -> size		1713586	0					
ANR	1713606	Identifier	f		1713586	0					
ANR	1713607	Identifier	size		1713586	1					
ANR	1713608	Argument	value		1713586	2					
ANR	1713609	Identifier	value		1713586	0					
ANR	1713610	IfStatement	if ( value == 0 )		1713586	2					
ANR	1713611	Condition	value == 0	176:5:5298:5307	1713586	0	True				
ANR	1713612	EqualityExpression	value == 0		1713586	0		==			
ANR	1713613	Identifier	value		1713586	0					
ANR	1713614	PrimaryExpression	0		1713586	1					
ANR	1713615	CompoundStatement		7:1:79:79	1713586	1					
ANR	1713616	IfStatement	if ( check == TRUE )		1713586	0					
ANR	1713617	Condition	check == TRUE	178:6:5319:5331	1713586	0	True				
ANR	1713618	EqualityExpression	check == TRUE		1713586	0		==			
ANR	1713619	Identifier	check		1713586	0					
ANR	1713620	Identifier	TRUE		1713586	1					
ANR	1713621	CompoundStatement		9:2:104:104	1713586	1					
ANR	1713622	ReturnStatement	return TRUE ;	180:3:5341:5352	1713586	0	True				
ANR	1713623	Identifier	TRUE		1713586	0					
ANR	1713624	ReturnStatement	return FALSE ;	182:2:5360:5372	1713586	1	True				
ANR	1713625	Identifier	FALSE		1713586	0					
ANR	1713626	ReturnStatement	"return is_stack_valid ( f -> previous , value - 1 ) ;"	186:1:5416:5461	1713586	3	True				
ANR	1713627	CallExpression	"is_stack_valid ( f -> previous , value - 1 )"		1713586	0					
ANR	1713628	Callee	is_stack_valid		1713586	0					
ANR	1713629	Identifier	is_stack_valid		1713586	0					
ANR	1713630	ArgumentList	f -> previous		1713586	1					
ANR	1713631	Argument	f -> previous		1713586	0					
ANR	1713632	PtrMemberAccess	f -> previous		1713586	0					
ANR	1713633	Identifier	f		1713586	0					
ANR	1713634	Identifier	previous		1713586	1					
ANR	1713635	Argument	value - 1		1713586	1					
ANR	1713636	AdditiveExpression	value - 1		1713586	0		-			
ANR	1713637	Identifier	value		1713586	0					
ANR	1713638	PrimaryExpression	1		1713586	1					
ANR	1713639	ReturnType	int		1713586	1					
ANR	1713640	Identifier	is_stack_valid		1713586	2					
ANR	1713641	ParameterList	"struct Frame * f , int value"		1713586	3					
ANR	1713642	Parameter	struct Frame * f	170:19:5203:5217	1713586	0	True				
ANR	1713643	ParameterType	struct Frame *		1713586	0					
ANR	1713644	Identifier	f		1713586	1					
ANR	1713645	Parameter	int value	170:36:5220:5228	1713586	1	True				
ANR	1713646	ParameterType	int		1713586	0					
ANR	1713647	Identifier	value		1713586	1					
ANR	1713648	CFGEntryNode	ENTRY		1713586		True				
ANR	1713649	CFGExitNode	EXIT		1713586		True				
ANR	1713650	Symbol	* f		1713586						
ANR	1713651	Symbol	f -> size		1713586						
ANR	1713652	Symbol	f		1713586						
ANR	1713653	Symbol	TRUE		1713586						
ANR	1713654	Symbol	is_stack_valid		1713586						
ANR	1713655	Symbol	FALSE		1713586						
ANR	1713656	Symbol	check		1713586						
ANR	1713657	Symbol	f -> previous		1713586						
ANR	1713658	Symbol	data_valid		1713586						
ANR	1713659	Symbol	value		1713586						
ANR	1713660	Symbol	f -> data		1713586						
ANR	1713661	Function	data_valid	191:0:5507:5664							
ANR	1713662	FunctionDef	"data_valid (int * data , int size , int value)"		1713661	0					
ANR	1713663	CompoundStatement		192:0:5554:5664	1713661	0					
ANR	1713664	IdentifierDeclStatement	int i ;	193:1:5557:5562	1713661	0	True				
ANR	1713665	IdentifierDecl	i		1713661	0					
ANR	1713666	IdentifierDeclType	int		1713661	0					
ANR	1713667	Identifier	i		1713661	1					
ANR	1713668	ForStatement	for ( i = 0 ; i < size ; i ++ )		1713661	1					
ANR	1713669	ForInit	i = 0 ;	195:6:5572:5577	1713661	0	True				
ANR	1713670	AssignmentExpression	i = 0		1713661	0		=			
ANR	1713671	Identifier	i		1713661	0					
ANR	1713672	PrimaryExpression	0		1713661	1					
ANR	1713673	Condition	i < size	195:13:5579:5586	1713661	1	True				
ANR	1713674	RelationalExpression	i < size		1713661	0		<			
ANR	1713675	Identifier	i		1713661	0					
ANR	1713676	Identifier	size		1713661	1					
ANR	1713677	PostIncDecOperationExpression	i ++	195:23:5589:5591	1713661	2	True				
ANR	1713678	Identifier	i		1713661	0					
ANR	1713679	IncDec	++		1713661	1					
ANR	1713680	CompoundStatement		5:1:40:40	1713661	3					
ANR	1713681	IfStatement	if ( data [ i ] != value )		1713661	0					
ANR	1713682	Condition	data [ i ] != value	197:6:5603:5618	1713661	0	True				
ANR	1713683	EqualityExpression	data [ i ] != value		1713661	0		!=			
ANR	1713684	ArrayIndexing	data [ i ]		1713661	0					
ANR	1713685	Identifier	data		1713661	0					
ANR	1713686	Identifier	i		1713661	1					
ANR	1713687	Identifier	value		1713661	1					
ANR	1713688	CompoundStatement		7:2:68:68	1713661	1					
ANR	1713689	ReturnStatement	return FALSE ;	199:3:5628:5640	1713661	0	True				
ANR	1713690	Identifier	FALSE		1713661	0					
ANR	1713691	ReturnStatement	return TRUE ;	203:1:5651:5662	1713661	2	True				
ANR	1713692	Identifier	TRUE		1713661	0					
ANR	1713693	ReturnType	int		1713661	1					
ANR	1713694	Identifier	data_valid		1713661	2					
ANR	1713695	ParameterList	"int * data , int size , int value"		1713661	3					
ANR	1713696	Parameter	int * data	191:15:5522:5530	1713661	0	True				
ANR	1713697	ParameterType	int *		1713661	0					
ANR	1713698	Identifier	data		1713661	1					
ANR	1713699	Parameter	int size	191:26:5533:5540	1713661	1	True				
ANR	1713700	ParameterType	int		1713661	0					
ANR	1713701	Identifier	size		1713661	1					
ANR	1713702	Parameter	int value	191:36:5543:5551	1713661	2	True				
ANR	1713703	ParameterType	int		1713661	0					
ANR	1713704	Identifier	value		1713661	1					
ANR	1713705	CFGEntryNode	ENTRY		1713661		True				
ANR	1713706	CFGExitNode	EXIT		1713661		True				
ANR	1713707	Symbol	* i		1713661						
ANR	1713708	Symbol	data		1713661						
ANR	1713709	Symbol	size		1713661						
ANR	1713710	Symbol	i		1713661						
ANR	1713711	Symbol	TRUE		1713661						
ANR	1713712	Symbol	FALSE		1713661						
ANR	1713713	Symbol	value		1713661						
ANR	1713714	Symbol	* data		1713661						
