command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4821493	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_my_hostname.t.cpp								
ANR	4821494	Function	usage	24:0:864:971							
ANR	4821495	FunctionDef	usage (char * me)		4821494	0					
ANR	4821496	CompoundStatement		25:18:887:971	4821494	0					
ANR	4821497	ExpressionStatement	"fprintf ( stderr , ""Usage: %s -ip | -host | -fullhost | -sin\\n"" , me )"	26:1:890:957	4821494	0	True				
ANR	4821498	CallExpression	"fprintf ( stderr , ""Usage: %s -ip | -host | -fullhost | -sin\\n"" , me )"		4821494	0					
ANR	4821499	Callee	fprintf		4821494	0					
ANR	4821500	Identifier	fprintf		4821494	0					
ANR	4821501	ArgumentList	stderr		4821494	1					
ANR	4821502	Argument	stderr		4821494	0					
ANR	4821503	Identifier	stderr		4821494	0					
ANR	4821504	Argument	"""Usage: %s -ip | -host | -fullhost | -sin\\n"""		4821494	1					
ANR	4821505	PrimaryExpression	"""Usage: %s -ip | -host | -fullhost | -sin\\n"""		4821494	0					
ANR	4821506	Argument	me		4821494	2					
ANR	4821507	Identifier	me		4821494	0					
ANR	4821508	ExpressionStatement	exit ( 1 )	27:1:960:969	4821494	1	True				
ANR	4821509	CallExpression	exit ( 1 )		4821494	0					
ANR	4821510	Callee	exit		4821494	0					
ANR	4821511	Identifier	exit		4821494	0					
ANR	4821512	ArgumentList	1		4821494	1					
ANR	4821513	Argument	1		4821494	0					
ANR	4821514	PrimaryExpression	1		4821494	0					
ANR	4821515	ReturnType	void		4821494	1					
ANR	4821516	Identifier	usage		4821494	2					
ANR	4821517	ParameterList	char * me		4821494	3					
ANR	4821518	Parameter	char * me	25:7:876:883	4821494	0	True				
ANR	4821519	ParameterType	char *		4821494	0					
ANR	4821520	Identifier	me		4821494	1					
ANR	4821521	CFGEntryNode	ENTRY		4821494		True				
ANR	4821522	CFGExitNode	EXIT		4821494		True				
ANR	4821523	Symbol	me		4821494						
ANR	4821524	Symbol	stderr		4821494						
ANR	4821525	Function	main	31:0:975:1530							
ANR	4821526	FunctionDef	"main (int argc , char * argv [ ])"		4821525	0					
ANR	4821527	CompoundStatement		33:0:1010:1530	4821525	0					
ANR	4821528	IfStatement	if ( argc != 2 )		4821525	0					
ANR	4821529	Condition	argc != 2	34:5:1017:1025	4821525	0	True				
ANR	4821530	EqualityExpression	argc != 2		4821525	0		!=			
ANR	4821531	Identifier	argc		4821525	0					
ANR	4821532	PrimaryExpression	2		4821525	1					
ANR	4821533	CompoundStatement		2:17:18:18	4821525	1					
ANR	4821534	ExpressionStatement	usage ( argv [ 0 ] )	35:2:1033:1049	4821525	0	True				
ANR	4821535	CallExpression	usage ( argv [ 0 ] )		4821525	0					
ANR	4821536	Callee	usage		4821525	0					
ANR	4821537	Identifier	usage		4821525	0					
ANR	4821538	ArgumentList	argv [ 0 ]		4821525	1					
ANR	4821539	Argument	argv [ 0 ]		4821525	0					
ANR	4821540	ArrayIndexing	argv [ 0 ]		4821525	0					
ANR	4821541	Identifier	argv		4821525	0					
ANR	4821542	PrimaryExpression	0		4821525	1					
ANR	4821543	SwitchStatement	switch ( argv [ 1 ] [ 1 ] )		4821525	1					
ANR	4821544	Condition	argv [ 1 ] [ 1 ]	37:9:1063:1072	4821525	0	True				
ANR	4821545	ArrayIndexing	argv [ 1 ] [ 1 ]		4821525	0					
ANR	4821546	ArrayIndexing	argv [ 1 ]		4821525	0					
ANR	4821547	Identifier	argv		4821525	0					
ANR	4821548	PrimaryExpression	1		4821525	1					
ANR	4821549	PrimaryExpression	1		4821525	1					
ANR	4821550	CompoundStatement		5:22:65:65	4821525	1					
ANR	4821551	Label	case 'i' :	38:1:1079:1087	4821525	0	True				
ANR	4821552	ExpressionStatement	"printf ( ""ip: %ul\\n"" , my_ip_addr ( ) )"	39:2:1091:1126	4821525	1	True				
ANR	4821553	CallExpression	"printf ( ""ip: %ul\\n"" , my_ip_addr ( ) )"		4821525	0					
ANR	4821554	Callee	printf		4821525	0					
ANR	4821555	Identifier	printf		4821525	0					
ANR	4821556	ArgumentList	"""ip: %ul\\n"""		4821525	1					
ANR	4821557	Argument	"""ip: %ul\\n"""		4821525	0					
ANR	4821558	PrimaryExpression	"""ip: %ul\\n"""		4821525	0					
ANR	4821559	Argument	my_ip_addr ( )		4821525	1					
ANR	4821560	CallExpression	my_ip_addr ( )		4821525	0					
ANR	4821561	Callee	my_ip_addr		4821525	0					
ANR	4821562	Identifier	my_ip_addr		4821525	0					
ANR	4821563	ArgumentList			4821525	1					
ANR	4821564	BreakStatement	break ;	40:2:1130:1135	4821525	2	True				
ANR	4821565	Label	case 'h' :	41:1:1138:1146	4821525	3	True				
ANR	4821566	ExpressionStatement	"printf ( ""host: %s\\n"" , my_hostname ( ) )"	42:2:1150:1187	4821525	4	True				
ANR	4821567	CallExpression	"printf ( ""host: %s\\n"" , my_hostname ( ) )"		4821525	0					
ANR	4821568	Callee	printf		4821525	0					
ANR	4821569	Identifier	printf		4821525	0					
ANR	4821570	ArgumentList	"""host: %s\\n"""		4821525	1					
ANR	4821571	Argument	"""host: %s\\n"""		4821525	0					
ANR	4821572	PrimaryExpression	"""host: %s\\n"""		4821525	0					
ANR	4821573	Argument	my_hostname ( )		4821525	1					
ANR	4821574	CallExpression	my_hostname ( )		4821525	0					
ANR	4821575	Callee	my_hostname		4821525	0					
ANR	4821576	Identifier	my_hostname		4821525	0					
ANR	4821577	ArgumentList			4821525	1					
ANR	4821578	BreakStatement	break ;	43:2:1191:1196	4821525	5	True				
ANR	4821579	Label	case 'f' :	44:1:1199:1207	4821525	6	True				
ANR	4821580	ExpressionStatement	"printf ( ""fullhost: %s\\n"" , my_full_hostname ( ) )"	45:2:1211:1257	4821525	7	True				
ANR	4821581	CallExpression	"printf ( ""fullhost: %s\\n"" , my_full_hostname ( ) )"		4821525	0					
ANR	4821582	Callee	printf		4821525	0					
ANR	4821583	Identifier	printf		4821525	0					
ANR	4821584	ArgumentList	"""fullhost: %s\\n"""		4821525	1					
ANR	4821585	Argument	"""fullhost: %s\\n"""		4821525	0					
ANR	4821586	PrimaryExpression	"""fullhost: %s\\n"""		4821525	0					
ANR	4821587	Argument	my_full_hostname ( )		4821525	1					
ANR	4821588	CallExpression	my_full_hostname ( )		4821525	0					
ANR	4821589	Callee	my_full_hostname		4821525	0					
ANR	4821590	Identifier	my_full_hostname		4821525	0					
ANR	4821591	ArgumentList			4821525	1					
ANR	4821592	BreakStatement	break ;	46:2:1261:1266	4821525	8	True				
ANR	4821593	Label	case 's' :	47:1:1269:1277	4821525	9	True				
ANR	4821594	ExpressionStatement	"printf ( ""sin_addr: %ul\\n"" , ( my_sin_addr ( ) ) -> s_addr )"	48:2:1281:1333	4821525	10	True				
ANR	4821595	CallExpression	"printf ( ""sin_addr: %ul\\n"" , ( my_sin_addr ( ) ) -> s_addr )"		4821525	0					
ANR	4821596	Callee	printf		4821525	0					
ANR	4821597	Identifier	printf		4821525	0					
ANR	4821598	ArgumentList	"""sin_addr: %ul\\n"""		4821525	1					
ANR	4821599	Argument	"""sin_addr: %ul\\n"""		4821525	0					
ANR	4821600	PrimaryExpression	"""sin_addr: %ul\\n"""		4821525	0					
ANR	4821601	Argument	( my_sin_addr ( ) ) -> s_addr		4821525	1					
ANR	4821602	PtrMemberAccess	( my_sin_addr ( ) ) -> s_addr		4821525	0					
ANR	4821603	CallExpression	my_sin_addr ( )		4821525	0					
ANR	4821604	Callee	my_sin_addr		4821525	0					
ANR	4821605	Identifier	my_sin_addr		4821525	0					
ANR	4821606	ArgumentList			4821525	1					
ANR	4821607	Identifier	s_addr		4821525	1					
ANR	4821608	ExpressionStatement	"printf ( ""ntohl sin_addr: %ul\\n"" , ntohl ( ( my_sin_addr ( ) ) -> s_addr ) )"	49:2:1337:1402	4821525	11	True				
ANR	4821609	CallExpression	"printf ( ""ntohl sin_addr: %ul\\n"" , ntohl ( ( my_sin_addr ( ) ) -> s_addr ) )"		4821525	0					
ANR	4821610	Callee	printf		4821525	0					
ANR	4821611	Identifier	printf		4821525	0					
ANR	4821612	ArgumentList	"""ntohl sin_addr: %ul\\n"""		4821525	1					
ANR	4821613	Argument	"""ntohl sin_addr: %ul\\n"""		4821525	0					
ANR	4821614	PrimaryExpression	"""ntohl sin_addr: %ul\\n"""		4821525	0					
ANR	4821615	Argument	ntohl ( ( my_sin_addr ( ) ) -> s_addr )		4821525	1					
ANR	4821616	CallExpression	ntohl ( ( my_sin_addr ( ) ) -> s_addr )		4821525	0					
ANR	4821617	Callee	ntohl		4821525	0					
ANR	4821618	Identifier	ntohl		4821525	0					
ANR	4821619	ArgumentList	( my_sin_addr ( ) ) -> s_addr		4821525	1					
ANR	4821620	Argument	( my_sin_addr ( ) ) -> s_addr		4821525	0					
ANR	4821621	PtrMemberAccess	( my_sin_addr ( ) ) -> s_addr		4821525	0					
ANR	4821622	CallExpression	my_sin_addr ( )		4821525	0					
ANR	4821623	Callee	my_sin_addr		4821525	0					
ANR	4821624	Identifier	my_sin_addr		4821525	0					
ANR	4821625	ArgumentList			4821525	1					
ANR	4821626	Identifier	s_addr		4821525	1					
ANR	4821627	ExpressionStatement	"printf ( ""ntoa sin_addr: %s\\n"" , inet_ntoa ( * ( my_sin_addr ( ) ) ) )"	50:2:1406:1466	4821525	12	True				
ANR	4821628	CallExpression	"printf ( ""ntoa sin_addr: %s\\n"" , inet_ntoa ( * ( my_sin_addr ( ) ) ) )"		4821525	0					
ANR	4821629	Callee	printf		4821525	0					
ANR	4821630	Identifier	printf		4821525	0					
ANR	4821631	ArgumentList	"""ntoa sin_addr: %s\\n"""		4821525	1					
ANR	4821632	Argument	"""ntoa sin_addr: %s\\n"""		4821525	0					
ANR	4821633	PrimaryExpression	"""ntoa sin_addr: %s\\n"""		4821525	0					
ANR	4821634	Argument	inet_ntoa ( * ( my_sin_addr ( ) ) )		4821525	1					
ANR	4821635	CallExpression	inet_ntoa ( * ( my_sin_addr ( ) ) )		4821525	0					
ANR	4821636	Callee	inet_ntoa		4821525	0					
ANR	4821637	Identifier	inet_ntoa		4821525	0					
ANR	4821638	ArgumentList	* ( my_sin_addr ( ) )		4821525	1					
ANR	4821639	Argument	* ( my_sin_addr ( ) )		4821525	0					
ANR	4821640	UnaryOperationExpression	* ( my_sin_addr ( ) )		4821525	0					
ANR	4821641	UnaryOperator	*		4821525	0					
ANR	4821642	CallExpression	my_sin_addr ( )		4821525	1					
ANR	4821643	Callee	my_sin_addr		4821525	0					
ANR	4821644	Identifier	my_sin_addr		4821525	0					
ANR	4821645	ArgumentList			4821525	1					
ANR	4821646	BreakStatement	break ;	51:2:1470:1475	4821525	13	True				
ANR	4821647	Label	default :	52:1:1478:1485	4821525	14	True				
ANR	4821648	Identifier	default		4821525	0					
ANR	4821649	ExpressionStatement	usage ( argv [ 0 ] )	53:2:1489:1505	4821525	15	True				
ANR	4821650	CallExpression	usage ( argv [ 0 ] )		4821525	0					
ANR	4821651	Callee	usage		4821525	0					
ANR	4821652	Identifier	usage		4821525	0					
ANR	4821653	ArgumentList	argv [ 0 ]		4821525	1					
ANR	4821654	Argument	argv [ 0 ]		4821525	0					
ANR	4821655	ArrayIndexing	argv [ 0 ]		4821525	0					
ANR	4821656	Identifier	argv		4821525	0					
ANR	4821657	PrimaryExpression	0		4821525	1					
ANR	4821658	BreakStatement	break ;	54:2:1509:1514	4821525	16	True				
ANR	4821659	ReturnStatement	return 0 ;	56:1:1520:1528	4821525	2	True				
ANR	4821660	PrimaryExpression	0		4821525	0					
ANR	4821661	ReturnType	int		4821525	1					
ANR	4821662	Identifier	main		4821525	2					
ANR	4821663	ParameterList	"int argc , char * argv [ ]"		4821525	3					
ANR	4821664	Parameter	int argc	32:6:985:992	4821525	0	True				
ANR	4821665	ParameterType	int		4821525	0					
ANR	4821666	Identifier	argc		4821525	1					
ANR	4821667	Parameter	char * argv [ ]	32:16:995:1006	4821525	1	True				
ANR	4821668	ParameterType	char * [ ]		4821525	0					
ANR	4821669	Identifier	argv		4821525	1					
ANR	4821670	CFGEntryNode	ENTRY		4821525		True				
ANR	4821671	CFGExitNode	EXIT		4821525		True				
ANR	4821672	Symbol	argc		4821525						
ANR	4821673	Symbol	my_sin_addr		4821525						
ANR	4821674	Symbol	ntohl		4821525						
ANR	4821675	Symbol	* argv		4821525						
ANR	4821676	Symbol	inet_ntoa		4821525						
ANR	4821677	Symbol	* ( my_sin_addr ( ) )		4821525						
ANR	4821678	Symbol	argv		4821525						
ANR	4821679	Symbol	my_full_hostname		4821525						
ANR	4821680	Symbol	my_ip_addr		4821525						
ANR	4821681	Symbol	* my_sin_addr		4821525						
ANR	4821682	Symbol	* * argv		4821525						
ANR	4821683	Symbol	my_hostname		4821525						
ANR	4821684	Symbol	( my_sin_addr ( ) ) -> s_addr		4821525						
