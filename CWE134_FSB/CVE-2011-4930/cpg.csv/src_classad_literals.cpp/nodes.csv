command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2553598	File	data/converged/CVE-2011-4930_htcondor/src_classad_literals.cpp								
ANR	2553599	DeclStmt									
ANR	2553600	Decl							void	"void ( string Str , int & index )"	nextDigitChar
ANR	2553601	DeclStmt									
ANR	2553602	Decl							void	"void ( string Str , int & index )"	prevNonSpaceChar
ANR	2553603	DeclStmt									
ANR	2553604	Decl							int	int ( string revNumStr )	revInt
ANR	2553605	DeclStmt									
ANR	2553606	Decl							double	double ( string revNumStr )	revDouble
ANR	2553607	DeclStmt									
ANR	2553608	Decl							bool	"bool ( string & timeStr , int & tzhr , int & tzmin )"	extractTimeZone
ANR	2553609	Function	Literal :: Literal	35:0:1208:1285							
ANR	2553610	FunctionDef	Literal :: Literal ()		2553609	0					
ANR	2553611	CompoundStatement		37:0:1229:1285	2553609	0					
ANR	2553612	ExpressionStatement	nodeKind = LITERAL_NODE	38:1:1232:1255	2553609	0	True				
ANR	2553613	AssignmentExpression	nodeKind = LITERAL_NODE		2553609	0		=			
ANR	2553614	Identifier	nodeKind		2553609	0					
ANR	2553615	Identifier	LITERAL_NODE		2553609	1					
ANR	2553616	ExpressionStatement	factor = Value :: NO_FACTOR	39:1:1258:1283	2553609	1	True				
ANR	2553617	AssignmentExpression	factor = Value :: NO_FACTOR		2553609	0		=			
ANR	2553618	Identifier	factor		2553609	0					
ANR	2553619	Identifier	Value :: NO_FACTOR		2553609	1					
ANR	2553620	Identifier	Literal :: Literal		2553609	1					
ANR	2553621	ParameterList			2553609	2					
ANR	2553622	CFGEntryNode	ENTRY		2553609		True				
ANR	2553623	CFGExitNode	EXIT		2553609		True				
ANR	2553624	Symbol	Value :: NO_FACTOR		2553609						
ANR	2553625	Symbol	LITERAL_NODE		2553609						
ANR	2553626	Symbol	nodeKind		2553609						
ANR	2553627	Symbol	factor		2553609						
ANR	2553628	Function	Literal :: ~Literal	43:0:1289:1313							
ANR	2553629	FunctionDef	Literal :: ~Literal ()		2553628	0					
ANR	2553630	CompoundStatement		45:0:1311:1313	2553628	0					
ANR	2553631	Identifier	Literal :: ~Literal		2553628	1					
ANR	2553632	ParameterList			2553628	2					
ANR	2553633	CFGEntryNode	ENTRY		2553628		True				
ANR	2553634	CFGExitNode	EXIT		2553628		True				
ANR	2553635	Function	Literal :: Literal	48:0:1316:1395							
ANR	2553636	FunctionDef	Literal :: Literal (const Literal & literal)		2553635	0					
ANR	2553637	CompoundStatement		50:0:1358:1395	2553635	0					
ANR	2553638	ExpressionStatement	CopyFrom ( literal )	51:4:1364:1381	2553635	0	True				
ANR	2553639	CallExpression	CopyFrom ( literal )		2553635	0					
ANR	2553640	Callee	CopyFrom		2553635	0					
ANR	2553641	Identifier	CopyFrom		2553635	0					
ANR	2553642	ArgumentList	literal		2553635	1					
ANR	2553643	Argument	literal		2553635	0					
ANR	2553644	Identifier	literal		2553635	0					
ANR	2553645	ReturnStatement	return ;	52:4:1387:1393	2553635	1	True				
ANR	2553646	Identifier	Literal :: Literal		2553635	1					
ANR	2553647	ParameterList	const Literal & literal		2553635	2					
ANR	2553648	Parameter	const Literal & literal	49:8:1334:1355	2553635	0	True				
ANR	2553649	ParameterType	const Literal &		2553635	0					
ANR	2553650	Identifier	literal		2553635	1					
ANR	2553651	CFGEntryNode	ENTRY		2553635		True				
ANR	2553652	CFGExitNode	EXIT		2553635		True				
ANR	2553653	Symbol	literal		2553635						
ANR	2553654	Function	operator =	56:0:1417:1532							
ANR	2553655	FunctionDef	operator = (const Literal & literal)		2553654	0					
ANR	2553656	CompoundStatement		57:0:1451:1532	2553654	0					
ANR	2553657	IfStatement	if ( this != & literal )		2553654	0					
ANR	2553658	Condition	this != & literal	58:8:1461:1476	2553654	0	True				
ANR	2553659	EqualityExpression	this != & literal		2553654	0		!=			
ANR	2553660	Identifier	this		2553654	0					
ANR	2553661	UnaryOperationExpression	& literal		2553654	1					
ANR	2553662	UnaryOperator	&		2553654	0					
ANR	2553663	Identifier	literal		2553654	1					
ANR	2553664	CompoundStatement		2:26:27:27	2553654	1					
ANR	2553665	ExpressionStatement	CopyFrom ( literal )	59:8:1489:1506	2553654	0	True				
ANR	2553666	CallExpression	CopyFrom ( literal )		2553654	0					
ANR	2553667	Callee	CopyFrom		2553654	0					
ANR	2553668	Identifier	CopyFrom		2553654	0					
ANR	2553669	ArgumentList	literal		2553654	1					
ANR	2553670	Argument	literal		2553654	0					
ANR	2553671	Identifier	literal		2553654	0					
ANR	2553672	ReturnStatement	return * this ;	61:4:1518:1530	2553654	1	True				
ANR	2553673	UnaryOperationExpression	* this		2553654	0					
ANR	2553674	UnaryOperator	*		2553654	0					
ANR	2553675	Identifier	this		2553654	1					
ANR	2553676	Identifier	operator =		2553654	1					
ANR	2553677	ParameterList	const Literal & literal		2553654	2					
ANR	2553678	Parameter	const Literal & literal	56:10:1427:1448	2553654	0	True				
ANR	2553679	ParameterType	const Literal &		2553654	0					
ANR	2553680	Identifier	literal		2553654	1					
ANR	2553681	CFGEntryNode	ENTRY		2553654		True				
ANR	2553682	CFGExitNode	EXIT		2553654		True				
ANR	2553683	Symbol	* this		2553654						
ANR	2553684	Symbol	this		2553654						
ANR	2553685	Symbol	& literal		2553654						
ANR	2553686	Symbol	literal		2553654						
ANR	2553687	Function	Literal :: Copy	64:0:1535:1761							
ANR	2553688	FunctionDef	Literal :: Copy ()		2553687	0					
ANR	2553689	CompoundStatement		66:0:1569:1761	2553687	0					
ANR	2553690	Statement	Literal	67:1:1572:1578	2553687	0	True				
ANR	2553691	Statement	*	67:9:1580:1580	2553687	1	True				
ANR	2553692	Statement	newTree	67:10:1581:1587	2553687	2	True				
ANR	2553693	Statement	=	67:18:1589:1589	2553687	3	True				
ANR	2553694	Statement	new	67:20:1591:1593	2553687	4	True				
ANR	2553695	ExpressionStatement	Literal	67:24:1595:1602	2553687	5	True				
ANR	2553696	Identifier	Literal		2553687	0					
ANR	2553697	IfStatement	if ( newTree == 0 )		2553687	6					
ANR	2553698	Condition	newTree == 0	69:5:1610:1621	2553687	0	True				
ANR	2553699	EqualityExpression	newTree == 0		2553687	0		==			
ANR	2553700	Identifier	newTree		2553687	0					
ANR	2553701	PrimaryExpression	0		2553687	1					
ANR	2553702	CompoundStatement		4:19:54:54	2553687	1					
ANR	2553703	ExpressionStatement	CondorErrno = ERR_MEM_ALLOC_FAILED	70:2:1628:1662	2553687	0	True				
ANR	2553704	AssignmentExpression	CondorErrno = ERR_MEM_ALLOC_FAILED		2553687	0		=			
ANR	2553705	Identifier	CondorErrno		2553687	0					
ANR	2553706	Identifier	ERR_MEM_ALLOC_FAILED		2553687	1					
ANR	2553707	ExpressionStatement	"CondorErrMsg = """""	71:2:1666:1683	2553687	1	True				
ANR	2553708	AssignmentExpression	"CondorErrMsg = """""		2553687	0		=			
ANR	2553709	Identifier	CondorErrMsg		2553687	0					
ANR	2553710	PrimaryExpression	""""""		2553687	1					
ANR	2553711	ReturnStatement	return ( ( Literal * ) NULL ) ;	72:2:1687:1709	2553687	2	True				
ANR	2553712	CastExpression	( Literal * ) NULL		2553687	0					
ANR	2553713	CastTarget	Literal *		2553687	0					
ANR	2553714	Identifier	NULL		2553687	1					
ANR	2553715	ExpressionStatement	newTree -> CopyFrom ( * this )	74:4:1718:1742	2553687	7	True				
ANR	2553716	CallExpression	newTree -> CopyFrom ( * this )		2553687	0					
ANR	2553717	Callee	newTree -> CopyFrom		2553687	0					
ANR	2553718	PtrMemberAccess	newTree -> CopyFrom		2553687	0					
ANR	2553719	Identifier	newTree		2553687	0					
ANR	2553720	Identifier	CopyFrom		2553687	1					
ANR	2553721	ArgumentList	* this		2553687	1					
ANR	2553722	Argument	* this		2553687	0					
ANR	2553723	UnaryOperationExpression	* this		2553687	0					
ANR	2553724	UnaryOperator	*		2553687	0					
ANR	2553725	Identifier	this		2553687	1					
ANR	2553726	ReturnStatement	return newTree ;	75:1:1745:1759	2553687	8	True				
ANR	2553727	Identifier	newTree		2553687	0					
ANR	2553728	ReturnType	ExprTree *		2553687	1					
ANR	2553729	Identifier	Literal :: Copy		2553687	2					
ANR	2553730	ParameterList			2553687	3					
ANR	2553731	CFGEntryNode	ENTRY		2553687		True				
ANR	2553732	CFGExitNode	EXIT		2553687		True				
ANR	2553733	Symbol	* this		2553687						
ANR	2553734	Symbol	NULL		2553687						
ANR	2553735	Symbol	newTree		2553687						
ANR	2553736	Symbol	CondorErrMsg		2553687						
ANR	2553737	Symbol	this		2553687						
ANR	2553738	Symbol	ERR_MEM_ALLOC_FAILED		2553687						
ANR	2553739	Symbol	CondorErrno		2553687						
ANR	2553740	Function	Literal :: CopyFrom	78:0:1764:1894							
ANR	2553741	FunctionDef	Literal :: CopyFrom (const Literal & literal)		2553740	0					
ANR	2553742	CompoundStatement		80:0:1812:1894	2553740	0					
ANR	2553743	ExpressionStatement	ExprTree :: CopyFrom ( literal )	81:4:1818:1845	2553740	0	True				
ANR	2553744	CallExpression	ExprTree :: CopyFrom ( literal )		2553740	0					
ANR	2553745	Callee	ExprTree :: CopyFrom		2553740	0					
ANR	2553746	Identifier	ExprTree :: CopyFrom		2553740	0					
ANR	2553747	ArgumentList	literal		2553740	1					
ANR	2553748	Argument	literal		2553740	0					
ANR	2553749	Identifier	literal		2553740	0					
ANR	2553750	ExpressionStatement	value . CopyFrom ( literal . value )	82:4:1851:1880	2553740	1	True				
ANR	2553751	CallExpression	value . CopyFrom ( literal . value )		2553740	0					
ANR	2553752	Callee	value . CopyFrom		2553740	0					
ANR	2553753	MemberAccess	value . CopyFrom		2553740	0					
ANR	2553754	Identifier	value		2553740	0					
ANR	2553755	Identifier	CopyFrom		2553740	1					
ANR	2553756	ArgumentList	literal . value		2553740	1					
ANR	2553757	Argument	literal . value		2553740	0					
ANR	2553758	MemberAccess	literal . value		2553740	0					
ANR	2553759	Identifier	literal		2553740	0					
ANR	2553760	Identifier	value		2553740	1					
ANR	2553761	ReturnStatement	return ;	83:4:1886:1892	2553740	2	True				
ANR	2553762	ReturnType	void		2553740	1					
ANR	2553763	Identifier	Literal :: CopyFrom		2553740	2					
ANR	2553764	ParameterList	const Literal & literal		2553740	3					
ANR	2553765	Parameter	const Literal & literal	79:9:1788:1809	2553740	0	True				
ANR	2553766	ParameterType	const Literal &		2553740	0					
ANR	2553767	Identifier	literal		2553740	1					
ANR	2553768	CFGEntryNode	ENTRY		2553740		True				
ANR	2553769	CFGExitNode	EXIT		2553740		True				
ANR	2553770	Symbol	literal . value		2553740						
ANR	2553771	Symbol	value		2553740						
ANR	2553772	Symbol	literal		2553740						
ANR	2553773	Function	Literal :: MakeReal	86:0:1897:2189							
ANR	2553774	FunctionDef	Literal :: MakeReal (string number_string)		2553773	0					
ANR	2553775	CompoundStatement		88:0:1948:2189	2553773	0					
ANR	2553776	IdentifierDeclStatement	Value val ;	89:1:1951:1961	2553773	0	True				
ANR	2553777	IdentifierDecl	val		2553773	0					
ANR	2553778	IdentifierDeclType	Value		2553773	0					
ANR	2553779	Identifier	val		2553773	1					
ANR	2553780	IdentifierDeclStatement	double real ;	90:1:1964:1975	2553773	1	True				
ANR	2553781	IdentifierDecl	real		2553773	0					
ANR	2553782	IdentifierDeclType	double		2553773	0					
ANR	2553783	Identifier	real		2553773	1					
ANR	2553784	IdentifierDeclStatement	char * end ;	91:4:1981:1992	2553773	2	True				
ANR	2553785	IdentifierDecl	* end		2553773	0					
ANR	2553786	IdentifierDeclType	char *		2553773	0					
ANR	2553787	Identifier	end		2553773	1					
ANR	2553788	ExpressionStatement	"real = strtod ( number_string . c_str ( ) , & end )"	93:4:1999:2041	2553773	3	True				
ANR	2553789	AssignmentExpression	"real = strtod ( number_string . c_str ( ) , & end )"		2553773	0		=			
ANR	2553790	Identifier	real		2553773	0					
ANR	2553791	CallExpression	"strtod ( number_string . c_str ( ) , & end )"		2553773	1					
ANR	2553792	Callee	strtod		2553773	0					
ANR	2553793	Identifier	strtod		2553773	0					
ANR	2553794	ArgumentList	number_string . c_str ( )		2553773	1					
ANR	2553795	Argument	number_string . c_str ( )		2553773	0					
ANR	2553796	CallExpression	number_string . c_str ( )		2553773	0					
ANR	2553797	Callee	number_string . c_str		2553773	0					
ANR	2553798	MemberAccess	number_string . c_str		2553773	0					
ANR	2553799	Identifier	number_string		2553773	0					
ANR	2553800	Identifier	c_str		2553773	1					
ANR	2553801	ArgumentList			2553773	1					
ANR	2553802	Argument	& end		2553773	1					
ANR	2553803	UnaryOperationExpression	& end		2553773	0					
ANR	2553804	UnaryOperator	&		2553773	0					
ANR	2553805	Identifier	end		2553773	1					
ANR	2553806	IfStatement	if ( end == number_string . c_str ( ) && real == 0.0 )		2553773	4					
ANR	2553807	Condition	end == number_string . c_str ( ) && real == 0.0	94:8:2051:2093	2553773	0	True				
ANR	2553808	AndExpression	end == number_string . c_str ( ) && real == 0.0		2553773	0		&&			
ANR	2553809	EqualityExpression	end == number_string . c_str ( )		2553773	0		==			
ANR	2553810	Identifier	end		2553773	0					
ANR	2553811	CallExpression	number_string . c_str ( )		2553773	1					
ANR	2553812	Callee	number_string . c_str		2553773	0					
ANR	2553813	MemberAccess	number_string . c_str		2553773	0					
ANR	2553814	Identifier	number_string		2553773	0					
ANR	2553815	Identifier	c_str		2553773	1					
ANR	2553816	ArgumentList			2553773	1					
ANR	2553817	EqualityExpression	real == 0.0		2553773	1		==			
ANR	2553818	Identifier	real		2553773	0					
ANR	2553819	PrimaryExpression	0.0		2553773	1					
ANR	2553820	CompoundStatement		7:53:147:147	2553773	1					
ANR	2553821	ExpressionStatement	val . SetErrorValue ( )	95:2:2100:2119	2553773	0	True				
ANR	2553822	CallExpression	val . SetErrorValue ( )		2553773	0					
ANR	2553823	Callee	val . SetErrorValue		2553773	0					
ANR	2553824	MemberAccess	val . SetErrorValue		2553773	0					
ANR	2553825	Identifier	val		2553773	0					
ANR	2553826	Identifier	SetErrorValue		2553773	1					
ANR	2553827	ArgumentList			2553773	1					
ANR	2553828	ElseStatement	else		2553773	0					
ANR	2553829	CompoundStatement		9:11:183:183	2553773	0					
ANR	2553830	ExpressionStatement	val . SetRealValue ( real )	97:2:2136:2158	2553773	0	True				
ANR	2553831	CallExpression	val . SetRealValue ( real )		2553773	0					
ANR	2553832	Callee	val . SetRealValue		2553773	0					
ANR	2553833	MemberAccess	val . SetRealValue		2553773	0					
ANR	2553834	Identifier	val		2553773	0					
ANR	2553835	Identifier	SetRealValue		2553773	1					
ANR	2553836	ArgumentList	real		2553773	1					
ANR	2553837	Argument	real		2553773	0					
ANR	2553838	Identifier	real		2553773	0					
ANR	2553839	ReturnStatement	return MakeLiteral ( val ) ;	99:1:2164:2187	2553773	5	True				
ANR	2553840	CallExpression	MakeLiteral ( val )		2553773	0					
ANR	2553841	Callee	MakeLiteral		2553773	0					
ANR	2553842	Identifier	MakeLiteral		2553773	0					
ANR	2553843	ArgumentList	val		2553773	1					
ANR	2553844	Argument	val		2553773	0					
ANR	2553845	Identifier	val		2553773	0					
ANR	2553846	ReturnType	Literal *		2553773	1					
ANR	2553847	Identifier	Literal :: MakeReal		2553773	2					
ANR	2553848	ParameterList	string number_string		2553773	3					
ANR	2553849	Parameter	string number_string	87:9:1925:1944	2553773	0	True				
ANR	2553850	ParameterType	string		2553773	0					
ANR	2553851	Identifier	number_string		2553773	1					
ANR	2553852	CFGEntryNode	ENTRY		2553773		True				
ANR	2553853	CFGExitNode	EXIT		2553773		True				
ANR	2553854	Symbol	val		2553773						
ANR	2553855	Symbol	number_string . c_str		2553773						
ANR	2553856	Symbol	number_string		2553773						
ANR	2553857	Symbol	& end		2553773						
ANR	2553858	Symbol	MakeLiteral		2553773						
ANR	2553859	Symbol	end		2553773						
ANR	2553860	Symbol	real		2553773						
ANR	2553861	Symbol	strtod		2553773						
ANR	2553862	Function	Literal :: MakeAbsTime	102:0:2192:2603							
ANR	2553863	FunctionDef	Literal :: MakeAbsTime (abstime_t * tim)		2553862	0					
ANR	2553864	CompoundStatement		104:0:2241:2603	2553862	0					
ANR	2553865	IdentifierDeclStatement	Value val ;	105:4:2247:2256	2553862	0	True				
ANR	2553866	IdentifierDecl	val		2553862	0					
ANR	2553867	IdentifierDeclType	Value		2553862	0					
ANR	2553868	Identifier	val		2553862	1					
ANR	2553869	IdentifierDeclStatement	abstime_t abst ;	106:4:2262:2276	2553862	1	True				
ANR	2553870	IdentifierDecl	abst		2553862	0					
ANR	2553871	IdentifierDeclType	abstime_t		2553862	0					
ANR	2553872	Identifier	abst		2553862	1					
ANR	2553873	IfStatement	if ( tim == NULL )		2553862	2					
ANR	2553874	Condition	tim == NULL	107:8:2286:2296	2553862	0	True				
ANR	2553875	EqualityExpression	tim == NULL		2553862	0		==			
ANR	2553876	Identifier	tim		2553862	0					
ANR	2553877	Identifier	NULL		2553862	1					
ANR	2553878	CompoundStatement		5:8:93:103	2553862	1					
ANR	2553879	IdentifierDeclStatement	time_t now ;	108:8:2335:2345	2553862	0	True				
ANR	2553880	IdentifierDecl	now		2553862	0					
ANR	2553881	IdentifierDeclType	time_t		2553862	0					
ANR	2553882	Identifier	now		2553862	1					
ANR	2553883	ExpressionStatement	time ( & now )	109:8:2355:2367	2553862	1	True				
ANR	2553884	CallExpression	time ( & now )		2553862	0					
ANR	2553885	Callee	time		2553862	0					
ANR	2553886	Identifier	time		2553862	0					
ANR	2553887	ArgumentList	& now		2553862	1					
ANR	2553888	Argument	& now		2553862	0					
ANR	2553889	UnaryOperationExpression	& now		2553862	0					
ANR	2553890	UnaryOperator	&		2553862	0					
ANR	2553891	Identifier	now		2553862	1					
ANR	2553892	ExpressionStatement	abst . secs = now	110:8:2377:2392	2553862	2	True				
ANR	2553893	AssignmentExpression	abst . secs = now		2553862	0		=			
ANR	2553894	MemberAccess	abst . secs		2553862	0					
ANR	2553895	Identifier	abst		2553862	0					
ANR	2553896	Identifier	secs		2553862	1					
ANR	2553897	Identifier	now		2553862	1					
ANR	2553898	ExpressionStatement	"abst . offset = timezone_offset ( now , false )"	111:8:2402:2445	2553862	3	True				
ANR	2553899	AssignmentExpression	"abst . offset = timezone_offset ( now , false )"		2553862	0		=			
ANR	2553900	MemberAccess	abst . offset		2553862	0					
ANR	2553901	Identifier	abst		2553862	0					
ANR	2553902	Identifier	offset		2553862	1					
ANR	2553903	CallExpression	"timezone_offset ( now , false )"		2553862	1					
ANR	2553904	Callee	timezone_offset		2553862	0					
ANR	2553905	Identifier	timezone_offset		2553862	0					
ANR	2553906	ArgumentList	now		2553862	1					
ANR	2553907	Argument	now		2553862	0					
ANR	2553908	Identifier	now		2553862	0					
ANR	2553909	Argument	false		2553862	1					
ANR	2553910	Identifier	false		2553862	0					
ANR	2553911	ElseStatement	else		2553862	0					
ANR	2553912	CompoundStatement		10:9:220:220	2553862	0					
ANR	2553913	ExpressionStatement	abst = * tim	114:8:2513:2524	2553862	0	True				
ANR	2553914	AssignmentExpression	abst = * tim		2553862	0		=			
ANR	2553915	Identifier	abst		2553862	0					
ANR	2553916	UnaryOperationExpression	* tim		2553862	1					
ANR	2553917	UnaryOperator	*		2553862	0					
ANR	2553918	Identifier	tim		2553862	1					
ANR	2553919	ExpressionStatement	val . SetAbsoluteTimeValue ( abst )	116:4:2536:2567	2553862	3	True				
ANR	2553920	CallExpression	val . SetAbsoluteTimeValue ( abst )		2553862	0					
ANR	2553921	Callee	val . SetAbsoluteTimeValue		2553862	0					
ANR	2553922	MemberAccess	val . SetAbsoluteTimeValue		2553862	0					
ANR	2553923	Identifier	val		2553862	0					
ANR	2553924	Identifier	SetAbsoluteTimeValue		2553862	1					
ANR	2553925	ArgumentList	abst		2553862	1					
ANR	2553926	Argument	abst		2553862	0					
ANR	2553927	Identifier	abst		2553862	0					
ANR	2553928	ReturnStatement	return ( MakeLiteral ( val ) ) ;	117:4:2573:2601	2553862	4	True				
ANR	2553929	CallExpression	MakeLiteral ( val )		2553862	0					
ANR	2553930	Callee	MakeLiteral		2553862	0					
ANR	2553931	Identifier	MakeLiteral		2553862	0					
ANR	2553932	ArgumentList	val		2553862	1					
ANR	2553933	Argument	val		2553862	0					
ANR	2553934	Identifier	val		2553862	0					
ANR	2553935	ReturnType	Literal *		2553862	1					
ANR	2553936	Identifier	Literal :: MakeAbsTime		2553862	2					
ANR	2553937	ParameterList	abstime_t * tim		2553862	3					
ANR	2553938	Parameter	abstime_t * tim	103:13:2224:2237	2553862	0	True				
ANR	2553939	ParameterType	abstime_t *		2553862	0					
ANR	2553940	Identifier	tim		2553862	1					
ANR	2553941	CFGEntryNode	ENTRY		2553862		True				
ANR	2553942	CFGExitNode	EXIT		2553862		True				
ANR	2553943	Symbol	val		2553862						
ANR	2553944	Symbol	* tim		2553862						
ANR	2553945	Symbol	NULL		2553862						
ANR	2553946	Symbol	MakeLiteral		2553862						
ANR	2553947	Symbol	now		2553862						
ANR	2553948	Symbol	timezone_offset		2553862						
ANR	2553949	Symbol	abst . secs		2553862						
ANR	2553950	Symbol	false		2553862						
ANR	2553951	Symbol	tim		2553862						
ANR	2553952	Symbol	& now		2553862						
ANR	2553953	Symbol	abst . offset		2553862						
ANR	2553954	Symbol	abst		2553862						
ANR	2553955	Function	Literal :: MakeAbsTime	126:0:2849:5921							
ANR	2553956	FunctionDef	Literal :: MakeAbsTime (string timeStr)		2553955	0					
ANR	2553957	CompoundStatement		128:0:2897:5921	2553955	0					
ANR	2553958	IdentifierDeclStatement	abstime_t abst ;	129:1:2904:2918	2553955	0	True				
ANR	2553959	IdentifierDecl	abst		2553955	0					
ANR	2553960	IdentifierDeclType	abstime_t		2553955	0					
ANR	2553961	Identifier	abst		2553955	1					
ANR	2553962	IdentifierDeclStatement	Value val ;	130:1:2921:2930	2553955	1	True				
ANR	2553963	IdentifierDecl	val		2553955	0					
ANR	2553964	IdentifierDeclType	Value		2553955	0					
ANR	2553965	Identifier	val		2553955	1					
ANR	2553966	IdentifierDeclStatement	bool offset = false ;	131:1:2933:2952	2553955	2	True				
ANR	2553967	IdentifierDecl	offset = false		2553955	0					
ANR	2553968	IdentifierDeclType	bool		2553955	0					
ANR	2553969	Identifier	offset		2553955	1					
ANR	2553970	AssignmentExpression	offset = false		2553955	2		=			
ANR	2553971	Identifier	false		2553955	0					
ANR	2553972	Identifier	false		2553955	1					
ANR	2553973	IdentifierDeclStatement	struct tm abstm ;	133:1:3022:3037	2553955	3	True				
ANR	2553974	IdentifierDecl	abstm		2553955	0					
ANR	2553975	IdentifierDeclType	struct tm		2553955	0					
ANR	2553976	Identifier	abstm		2553955	1					
ANR	2553977	ExpressionStatement	"memset ( & abstm , 0 , sizeof ( abstm ) )"	134:4:3043:3075	2553955	4	True				
ANR	2553978	CallExpression	"memset ( & abstm , 0 , sizeof ( abstm ) )"		2553955	0					
ANR	2553979	Callee	memset		2553955	0					
ANR	2553980	Identifier	memset		2553955	0					
ANR	2553981	ArgumentList	& abstm		2553955	1					
ANR	2553982	Argument	& abstm		2553955	0					
ANR	2553983	UnaryOperationExpression	& abstm		2553955	0					
ANR	2553984	UnaryOperator	&		2553955	0					
ANR	2553985	Identifier	abstm		2553955	1					
ANR	2553986	Argument	0		2553955	1					
ANR	2553987	PrimaryExpression	0		2553955	0					
ANR	2553988	Argument	sizeof ( abstm )		2553955	2					
ANR	2553989	SizeofExpression	sizeof ( abstm )		2553955	0					
ANR	2553990	Sizeof	sizeof		2553955	0					
ANR	2553991	SizeofOperand	abstm		2553955	1					
ANR	2553992	IdentifierDeclStatement	int tzhr = 0 ;	135:1:3078:3090	2553955	5	True				
ANR	2553993	IdentifierDecl	tzhr = 0		2553955	0					
ANR	2553994	IdentifierDeclType	int		2553955	0					
ANR	2553995	Identifier	tzhr		2553955	1					
ANR	2553996	AssignmentExpression	tzhr = 0		2553955	2		=			
ANR	2553997	Identifier	tzhr		2553955	0					
ANR	2553998	PrimaryExpression	0		2553955	1					
ANR	2553999	IdentifierDeclStatement	int tzmin = 0 ;	136:1:3132:3145	2553955	6	True				
ANR	2554000	IdentifierDecl	tzmin = 0		2553955	0					
ANR	2554001	IdentifierDeclType	int		2553955	0					
ANR	2554002	Identifier	tzmin		2553955	1					
ANR	2554003	AssignmentExpression	tzmin = 0		2553955	2		=			
ANR	2554004	Identifier	tzmin		2553955	0					
ANR	2554005	PrimaryExpression	0		2553955	1					
ANR	2554006	IdentifierDeclStatement	int len = timeStr . length ( ) ;	138:1:3189:3215	2553955	7	True				
ANR	2554007	IdentifierDecl	len = timeStr . length ( )		2553955	0					
ANR	2554008	IdentifierDeclType	int		2553955	0					
ANR	2554009	Identifier	len		2553955	1					
ANR	2554010	AssignmentExpression	len = timeStr . length ( )		2553955	2		=			
ANR	2554011	Identifier	len		2553955	0					
ANR	2554012	CallExpression	timeStr . length ( )		2553955	1					
ANR	2554013	Callee	timeStr . length		2553955	0					
ANR	2554014	MemberAccess	timeStr . length		2553955	0					
ANR	2554015	Identifier	timeStr		2553955	0					
ANR	2554016	Identifier	length		2553955	1					
ANR	2554017	ArgumentList			2553955	1					
ANR	2554018	IdentifierDeclStatement	int i = len - 1 ;	139:1:3218:3229	2553955	8	True				
ANR	2554019	IdentifierDecl	i = len - 1		2553955	0					
ANR	2554020	IdentifierDeclType	int		2553955	0					
ANR	2554021	Identifier	i		2553955	1					
ANR	2554022	AssignmentExpression	i = len - 1		2553955	2		=			
ANR	2554023	Identifier	i		2553955	0					
ANR	2554024	AdditiveExpression	len - 1		2553955	1		-			
ANR	2554025	Identifier	len		2553955	0					
ANR	2554026	PrimaryExpression	1		2553955	1					
ANR	2554027	ExpressionStatement	"prevNonSpaceChar ( timeStr , i )"	140:1:3233:3260	2553955	9	True				
ANR	2554028	CallExpression	"prevNonSpaceChar ( timeStr , i )"		2553955	0					
ANR	2554029	Callee	prevNonSpaceChar		2553955	0					
ANR	2554030	Identifier	prevNonSpaceChar		2553955	0					
ANR	2554031	ArgumentList	timeStr		2553955	1					
ANR	2554032	Argument	timeStr		2553955	0					
ANR	2554033	Identifier	timeStr		2553955	0					
ANR	2554034	Argument	i		2553955	1					
ANR	2554035	Identifier	i		2553955	0					
ANR	2554036	IfStatement	if ( ( timeStr [ i ] == 'z' ) || ( timeStr [ i ] == 'Z' ) )		2553955	10					
ANR	2554037	Condition	( timeStr [ i ] == 'z' ) || ( timeStr [ i ] == 'Z' )	141:4:3266:3307	2553955	0	True				
ANR	2554038	OrExpression	( timeStr [ i ] == 'z' ) || ( timeStr [ i ] == 'Z' )		2553955	0		||			
ANR	2554039	EqualityExpression	timeStr [ i ] == 'z'		2553955	0		==			
ANR	2554040	ArrayIndexing	timeStr [ i ]		2553955	0					
ANR	2554041	Identifier	timeStr		2553955	0					
ANR	2554042	Identifier	i		2553955	1					
ANR	2554043	PrimaryExpression	'z'		2553955	1					
ANR	2554044	EqualityExpression	timeStr [ i ] == 'Z'		2553955	1		==			
ANR	2554045	ArrayIndexing	timeStr [ i ]		2553955	0					
ANR	2554046	Identifier	timeStr		2553955	0					
ANR	2554047	Identifier	i		2553955	1					
ANR	2554048	PrimaryExpression	'Z'		2553955	1					
ANR	2554049	CompoundStatement		14:48:412:412	2553955	1					
ANR	2554050	ExpressionStatement	offset = true	142:2:3359:3372	2553955	0	True				
ANR	2554051	AssignmentExpression	offset = true		2553955	0		=			
ANR	2554052	Identifier	offset		2553955	0					
ANR	2554053	Identifier	true		2553955	1					
ANR	2554054	ExpressionStatement	"timeStr . erase ( i , 1 )"	143:2:3376:3394	2553955	1	True				
ANR	2554055	CallExpression	"timeStr . erase ( i , 1 )"		2553955	0					
ANR	2554056	Callee	timeStr . erase		2553955	0					
ANR	2554057	MemberAccess	timeStr . erase		2553955	0					
ANR	2554058	Identifier	timeStr		2553955	0					
ANR	2554059	Identifier	erase		2553955	1					
ANR	2554060	ArgumentList	i		2553955	1					
ANR	2554061	Argument	i		2553955	0					
ANR	2554062	Identifier	i		2553955	0					
ANR	2554063	Argument	1		2553955	1					
ANR	2554064	PrimaryExpression	1		2553955	0					
ANR	2554065	ExpressionStatement	tzhr = 0	144:2:3443:3451	2553955	2	True				
ANR	2554066	AssignmentExpression	tzhr = 0		2553955	0		=			
ANR	2554067	Identifier	tzhr		2553955	0					
ANR	2554068	PrimaryExpression	0		2553955	1					
ANR	2554069	ExpressionStatement	tzmin = 0	145:2:3455:3464	2553955	3	True				
ANR	2554070	AssignmentExpression	tzmin = 0		2553955	0		=			
ANR	2554071	Identifier	tzmin		2553955	0					
ANR	2554072	PrimaryExpression	0		2553955	1					
ANR	2554073	ElseStatement	else		2553955	0					
ANR	2554074	IfStatement	if ( timeStr [ len - 5 ] == '+' || timeStr [ len - 5 ] == '-' )		2553955	0					
ANR	2554075	Condition	timeStr [ len - 5 ] == '+' || timeStr [ len - 5 ] == '-'	146:15:3481:3526	2553955	0	True				
ANR	2554076	OrExpression	timeStr [ len - 5 ] == '+' || timeStr [ len - 5 ] == '-'		2553955	0		||			
ANR	2554077	EqualityExpression	timeStr [ len - 5 ] == '+'		2553955	0		==			
ANR	2554078	ArrayIndexing	timeStr [ len - 5 ]		2553955	0					
ANR	2554079	Identifier	timeStr		2553955	0					
ANR	2554080	AdditiveExpression	len - 5		2553955	1		-			
ANR	2554081	Identifier	len		2553955	0					
ANR	2554082	PrimaryExpression	5		2553955	1					
ANR	2554083	PrimaryExpression	'+'		2553955	1					
ANR	2554084	EqualityExpression	timeStr [ len - 5 ] == '-'		2553955	1		==			
ANR	2554085	ArrayIndexing	timeStr [ len - 5 ]		2553955	0					
ANR	2554086	Identifier	timeStr		2553955	0					
ANR	2554087	AdditiveExpression	len - 5		2553955	1		-			
ANR	2554088	Identifier	len		2553955	0					
ANR	2554089	PrimaryExpression	5		2553955	1					
ANR	2554090	PrimaryExpression	'-'		2553955	1					
ANR	2554091	CompoundStatement		19:63:631:631	2553955	1					
ANR	2554092	ExpressionStatement	"offset = extractTimeZone ( timeStr , tzhr , tzmin )"	147:8:3539:3585	2553955	0	True				
ANR	2554093	AssignmentExpression	"offset = extractTimeZone ( timeStr , tzhr , tzmin )"		2553955	0		=			
ANR	2554094	Identifier	offset		2553955	0					
ANR	2554095	CallExpression	"extractTimeZone ( timeStr , tzhr , tzmin )"		2553955	1					
ANR	2554096	Callee	extractTimeZone		2553955	0					
ANR	2554097	Identifier	extractTimeZone		2553955	0					
ANR	2554098	ArgumentList	timeStr		2553955	1					
ANR	2554099	Argument	timeStr		2553955	0					
ANR	2554100	Identifier	timeStr		2553955	0					
ANR	2554101	Argument	tzhr		2553955	1					
ANR	2554102	Identifier	tzhr		2553955	0					
ANR	2554103	Argument	tzmin		2553955	2					
ANR	2554104	Identifier	tzmin		2553955	0					
ANR	2554105	ElseStatement	else		2553955	0					
ANR	2554106	IfStatement	if ( ( timeStr [ len - 6 ] == '+' || timeStr [ len - 6 ] == '-' ) && timeStr [ len - 3 ] == ':' )		2553955	0					
ANR	2554107	Condition	( timeStr [ len - 6 ] == '+' || timeStr [ len - 6 ] == '-' ) && timeStr [ len - 3 ] == ':'	148:15:3602:3674	2553955	0	True				
ANR	2554108	AndExpression	( timeStr [ len - 6 ] == '+' || timeStr [ len - 6 ] == '-' ) && timeStr [ len - 3 ] == ':'		2553955	0		&&			
ANR	2554109	OrExpression	timeStr [ len - 6 ] == '+' || timeStr [ len - 6 ] == '-'		2553955	0		||			
ANR	2554110	EqualityExpression	timeStr [ len - 6 ] == '+'		2553955	0		==			
ANR	2554111	ArrayIndexing	timeStr [ len - 6 ]		2553955	0					
ANR	2554112	Identifier	timeStr		2553955	0					
ANR	2554113	AdditiveExpression	len - 6		2553955	1		-			
ANR	2554114	Identifier	len		2553955	0					
ANR	2554115	PrimaryExpression	6		2553955	1					
ANR	2554116	PrimaryExpression	'+'		2553955	1					
ANR	2554117	EqualityExpression	timeStr [ len - 6 ] == '-'		2553955	1		==			
ANR	2554118	ArrayIndexing	timeStr [ len - 6 ]		2553955	0					
ANR	2554119	Identifier	timeStr		2553955	0					
ANR	2554120	AdditiveExpression	len - 6		2553955	1		-			
ANR	2554121	Identifier	len		2553955	0					
ANR	2554122	PrimaryExpression	6		2553955	1					
ANR	2554123	PrimaryExpression	'-'		2553955	1					
ANR	2554124	EqualityExpression	timeStr [ len - 3 ] == ':'		2553955	1		==			
ANR	2554125	ArrayIndexing	timeStr [ len - 3 ]		2553955	0					
ANR	2554126	Identifier	timeStr		2553955	0					
ANR	2554127	AdditiveExpression	len - 3		2553955	1		-			
ANR	2554128	Identifier	len		2553955	0					
ANR	2554129	PrimaryExpression	3		2553955	1					
ANR	2554130	PrimaryExpression	':'		2553955	1					
ANR	2554131	CompoundStatement		21:90:779:779	2553955	1					
ANR	2554132	ExpressionStatement	"timeStr . erase ( len - 3 , 1 )"	149:8:3687:3710	2553955	0	True				
ANR	2554133	CallExpression	"timeStr . erase ( len - 3 , 1 )"		2553955	0					
ANR	2554134	Callee	timeStr . erase		2553955	0					
ANR	2554135	MemberAccess	timeStr . erase		2553955	0					
ANR	2554136	Identifier	timeStr		2553955	0					
ANR	2554137	Identifier	erase		2553955	1					
ANR	2554138	ArgumentList	len - 3		2553955	1					
ANR	2554139	Argument	len - 3		2553955	0					
ANR	2554140	AdditiveExpression	len - 3		2553955	0		-			
ANR	2554141	Identifier	len		2553955	0					
ANR	2554142	PrimaryExpression	3		2553955	1					
ANR	2554143	Argument	1		2553955	1					
ANR	2554144	PrimaryExpression	1		2553955	0					
ANR	2554145	ExpressionStatement	"offset = extractTimeZone ( timeStr , tzhr , tzmin )"	150:8:3720:3766	2553955	1	True				
ANR	2554146	AssignmentExpression	"offset = extractTimeZone ( timeStr , tzhr , tzmin )"		2553955	0		=			
ANR	2554147	Identifier	offset		2553955	0					
ANR	2554148	CallExpression	"extractTimeZone ( timeStr , tzhr , tzmin )"		2553955	1					
ANR	2554149	Callee	extractTimeZone		2553955	0					
ANR	2554150	Identifier	extractTimeZone		2553955	0					
ANR	2554151	ArgumentList	timeStr		2553955	1					
ANR	2554152	Argument	timeStr		2553955	0					
ANR	2554153	Identifier	timeStr		2553955	0					
ANR	2554154	Argument	tzhr		2553955	1					
ANR	2554155	Identifier	tzhr		2553955	0					
ANR	2554156	Argument	tzmin		2553955	2					
ANR	2554157	Identifier	tzmin		2553955	0					
ANR	2554158	ExpressionStatement	i = 0	153:1:3776:3779	2553955	11	True				
ANR	2554159	AssignmentExpression	i = 0		2553955	0		=			
ANR	2554160	Identifier	i		2553955	0					
ANR	2554161	PrimaryExpression	0		2553955	1					
ANR	2554162	ExpressionStatement	len = timeStr . length ( )	154:1:3782:3804	2553955	12	True				
ANR	2554163	AssignmentExpression	len = timeStr . length ( )		2553955	0		=			
ANR	2554164	Identifier	len		2553955	0					
ANR	2554165	CallExpression	timeStr . length ( )		2553955	1					
ANR	2554166	Callee	timeStr . length		2553955	0					
ANR	2554167	MemberAccess	timeStr . length		2553955	0					
ANR	2554168	Identifier	timeStr		2553955	0					
ANR	2554169	Identifier	length		2553955	1					
ANR	2554170	ArgumentList			2553955	1					
ANR	2554171	ExpressionStatement	"nextDigitChar ( timeStr , i )"	156:1:3809:3833	2553955	13	True				
ANR	2554172	CallExpression	"nextDigitChar ( timeStr , i )"		2553955	0					
ANR	2554173	Callee	nextDigitChar		2553955	0					
ANR	2554174	Identifier	nextDigitChar		2553955	0					
ANR	2554175	ArgumentList	timeStr		2553955	1					
ANR	2554176	Argument	timeStr		2553955	0					
ANR	2554177	Identifier	timeStr		2553955	0					
ANR	2554178	Argument	i		2553955	1					
ANR	2554179	Identifier	i		2553955	0					
ANR	2554180	IfStatement	if ( i > len - 4 )		2553955	14					
ANR	2554181	Condition	i > len - 4	157:4:3839:3847	2553955	0	True				
ANR	2554182	RelationalExpression	i > len - 4		2553955	0		>			
ANR	2554183	Identifier	i		2553955	0					
ANR	2554184	AdditiveExpression	len - 4		2553955	1		-			
ANR	2554185	Identifier	len		2553955	0					
ANR	2554186	PrimaryExpression	4		2553955	1					
ANR	2554187	CompoundStatement		30:15:952:952	2553955	1					
ANR	2554188	ExpressionStatement	val . SetErrorValue ( )	158:2:3891:3911	2553955	0	True				
ANR	2554189	CallExpression	val . SetErrorValue ( )		2553955	0					
ANR	2554190	Callee	val . SetErrorValue		2553955	0					
ANR	2554191	MemberAccess	val . SetErrorValue		2553955	0					
ANR	2554192	Identifier	val		2553955	0					
ANR	2554193	Identifier	SetErrorValue		2553955	1					
ANR	2554194	ArgumentList			2553955	1					
ANR	2554195	ReturnStatement	return ( MakeLiteral ( val ) ) ;	159:2:3915:3941	2553955	1	True				
ANR	2554196	CallExpression	MakeLiteral ( val )		2553955	0					
ANR	2554197	Callee	MakeLiteral		2553955	0					
ANR	2554198	Identifier	MakeLiteral		2553955	0					
ANR	2554199	ArgumentList	val		2553955	1					
ANR	2554200	Argument	val		2553955	0					
ANR	2554201	Identifier	val		2553955	0					
ANR	2554202	ExpressionStatement	"abstm . tm_year = atoi ( timeStr . substr ( i , 4 ) . c_str ( ) ) - 1900"	162:1:3953:4009	2553955	15	True				
ANR	2554203	AssignmentExpression	"abstm . tm_year = atoi ( timeStr . substr ( i , 4 ) . c_str ( ) ) - 1900"		2553955	0		=			
ANR	2554204	MemberAccess	abstm . tm_year		2553955	0					
ANR	2554205	Identifier	abstm		2553955	0					
ANR	2554206	Identifier	tm_year		2553955	1					
ANR	2554207	AdditiveExpression	"atoi ( timeStr . substr ( i , 4 ) . c_str ( ) ) - 1900"		2553955	1		-			
ANR	2554208	CallExpression	"atoi ( timeStr . substr ( i , 4 ) . c_str ( ) )"		2553955	0					
ANR	2554209	Callee	atoi		2553955	0					
ANR	2554210	Identifier	atoi		2553955	0					
ANR	2554211	ArgumentList	"timeStr . substr ( i , 4 ) . c_str ( )"		2553955	1					
ANR	2554212	Argument	"timeStr . substr ( i , 4 ) . c_str ( )"		2553955	0					
ANR	2554213	CallExpression	"timeStr . substr ( i , 4 ) . c_str ( )"		2553955	0					
ANR	2554214	Callee	"timeStr . substr ( i , 4 ) . c_str"		2553955	0					
ANR	2554215	MemberAccess	"timeStr . substr ( i , 4 ) . c_str"		2553955	0					
ANR	2554216	CallExpression	"timeStr . substr ( i , 4 )"		2553955	0					
ANR	2554217	Callee	timeStr . substr		2553955	0					
ANR	2554218	MemberAccess	timeStr . substr		2553955	0					
ANR	2554219	Identifier	timeStr		2553955	0					
ANR	2554220	Identifier	substr		2553955	1					
ANR	2554221	ArgumentList	i		2553955	1					
ANR	2554222	Argument	i		2553955	0					
ANR	2554223	Identifier	i		2553955	0					
ANR	2554224	Argument	4		2553955	1					
ANR	2554225	PrimaryExpression	4		2553955	0					
ANR	2554226	Identifier	c_str		2553955	1					
ANR	2554227	ArgumentList			2553955	1					
ANR	2554228	PrimaryExpression	1900		2553955	1					
ANR	2554229	ExpressionStatement	i += 4	163:1:4012:4018	2553955	16	True				
ANR	2554230	AssignmentExpression	i += 4		2553955	0		+=			
ANR	2554231	Identifier	i		2553955	0					
ANR	2554232	PrimaryExpression	4		2553955	1					
ANR	2554233	ExpressionStatement	"nextDigitChar ( timeStr , i )"	164:1:4021:4045	2553955	17	True				
ANR	2554234	CallExpression	"nextDigitChar ( timeStr , i )"		2553955	0					
ANR	2554235	Callee	nextDigitChar		2553955	0					
ANR	2554236	Identifier	nextDigitChar		2553955	0					
ANR	2554237	ArgumentList	timeStr		2553955	1					
ANR	2554238	Argument	timeStr		2553955	0					
ANR	2554239	Identifier	timeStr		2553955	0					
ANR	2554240	Argument	i		2553955	1					
ANR	2554241	Identifier	i		2553955	0					
ANR	2554242	IfStatement	if ( i <= len - 2 )		2553955	18					
ANR	2554243	Condition	i <= len - 2	166:4:4053:4060	2553955	0	True				
ANR	2554244	RelationalExpression	i <= len - 2		2553955	0		<=			
ANR	2554245	Identifier	i		2553955	0					
ANR	2554246	AdditiveExpression	len - 2		2553955	1		-			
ANR	2554247	Identifier	len		2553955	0					
ANR	2554248	PrimaryExpression	2		2553955	1					
ANR	2554249	CompoundStatement		39:14:1165:1165	2553955	1					
ANR	2554250	ExpressionStatement	"abstm . tm_mon = atoi ( timeStr . substr ( i , 2 ) . c_str ( ) ) - 1"	167:2:4067:4119	2553955	0	True				
ANR	2554251	AssignmentExpression	"abstm . tm_mon = atoi ( timeStr . substr ( i , 2 ) . c_str ( ) ) - 1"		2553955	0		=			
ANR	2554252	MemberAccess	abstm . tm_mon		2553955	0					
ANR	2554253	Identifier	abstm		2553955	0					
ANR	2554254	Identifier	tm_mon		2553955	1					
ANR	2554255	AdditiveExpression	"atoi ( timeStr . substr ( i , 2 ) . c_str ( ) ) - 1"		2553955	1		-			
ANR	2554256	CallExpression	"atoi ( timeStr . substr ( i , 2 ) . c_str ( ) )"		2553955	0					
ANR	2554257	Callee	atoi		2553955	0					
ANR	2554258	Identifier	atoi		2553955	0					
ANR	2554259	ArgumentList	"timeStr . substr ( i , 2 ) . c_str ( )"		2553955	1					
ANR	2554260	Argument	"timeStr . substr ( i , 2 ) . c_str ( )"		2553955	0					
ANR	2554261	CallExpression	"timeStr . substr ( i , 2 ) . c_str ( )"		2553955	0					
ANR	2554262	Callee	"timeStr . substr ( i , 2 ) . c_str"		2553955	0					
ANR	2554263	MemberAccess	"timeStr . substr ( i , 2 ) . c_str"		2553955	0					
ANR	2554264	CallExpression	"timeStr . substr ( i , 2 )"		2553955	0					
ANR	2554265	Callee	timeStr . substr		2553955	0					
ANR	2554266	MemberAccess	timeStr . substr		2553955	0					
ANR	2554267	Identifier	timeStr		2553955	0					
ANR	2554268	Identifier	substr		2553955	1					
ANR	2554269	ArgumentList	i		2553955	1					
ANR	2554270	Argument	i		2553955	0					
ANR	2554271	Identifier	i		2553955	0					
ANR	2554272	Argument	2		2553955	1					
ANR	2554273	PrimaryExpression	2		2553955	0					
ANR	2554274	Identifier	c_str		2553955	1					
ANR	2554275	ArgumentList			2553955	1					
ANR	2554276	PrimaryExpression	1		2553955	1					
ANR	2554277	ExpressionStatement	i += 2	168:2:4123:4129	2553955	1	True				
ANR	2554278	AssignmentExpression	i += 2		2553955	0		+=			
ANR	2554279	Identifier	i		2553955	0					
ANR	2554280	PrimaryExpression	2		2553955	1					
ANR	2554281	ExpressionStatement	"nextDigitChar ( timeStr , i )"	170:1:4135:4159	2553955	19	True				
ANR	2554282	CallExpression	"nextDigitChar ( timeStr , i )"		2553955	0					
ANR	2554283	Callee	nextDigitChar		2553955	0					
ANR	2554284	Identifier	nextDigitChar		2553955	0					
ANR	2554285	ArgumentList	timeStr		2553955	1					
ANR	2554286	Argument	timeStr		2553955	0					
ANR	2554287	Identifier	timeStr		2553955	0					
ANR	2554288	Argument	i		2553955	1					
ANR	2554289	Identifier	i		2553955	0					
ANR	2554290	IfStatement	if ( i <= len - 2 )		2553955	20					
ANR	2554291	Condition	i <= len - 2	172:4:4167:4174	2553955	0	True				
ANR	2554292	RelationalExpression	i <= len - 2		2553955	0		<=			
ANR	2554293	Identifier	i		2553955	0					
ANR	2554294	AdditiveExpression	len - 2		2553955	1		-			
ANR	2554295	Identifier	len		2553955	0					
ANR	2554296	PrimaryExpression	2		2553955	1					
ANR	2554297	CompoundStatement		45:14:1279:1279	2553955	1					
ANR	2554298	ExpressionStatement	"abstm . tm_mday = atoi ( timeStr . substr ( i , 2 ) . c_str ( ) )"	173:2:4181:4230	2553955	0	True				
ANR	2554299	AssignmentExpression	"abstm . tm_mday = atoi ( timeStr . substr ( i , 2 ) . c_str ( ) )"		2553955	0		=			
ANR	2554300	MemberAccess	abstm . tm_mday		2553955	0					
ANR	2554301	Identifier	abstm		2553955	0					
ANR	2554302	Identifier	tm_mday		2553955	1					
ANR	2554303	CallExpression	"atoi ( timeStr . substr ( i , 2 ) . c_str ( ) )"		2553955	1					
ANR	2554304	Callee	atoi		2553955	0					
ANR	2554305	Identifier	atoi		2553955	0					
ANR	2554306	ArgumentList	"timeStr . substr ( i , 2 ) . c_str ( )"		2553955	1					
ANR	2554307	Argument	"timeStr . substr ( i , 2 ) . c_str ( )"		2553955	0					
ANR	2554308	CallExpression	"timeStr . substr ( i , 2 ) . c_str ( )"		2553955	0					
ANR	2554309	Callee	"timeStr . substr ( i , 2 ) . c_str"		2553955	0					
ANR	2554310	MemberAccess	"timeStr . substr ( i , 2 ) . c_str"		2553955	0					
ANR	2554311	CallExpression	"timeStr . substr ( i , 2 )"		2553955	0					
ANR	2554312	Callee	timeStr . substr		2553955	0					
ANR	2554313	MemberAccess	timeStr . substr		2553955	0					
ANR	2554314	Identifier	timeStr		2553955	0					
ANR	2554315	Identifier	substr		2553955	1					
ANR	2554316	ArgumentList	i		2553955	1					
ANR	2554317	Argument	i		2553955	0					
ANR	2554318	Identifier	i		2553955	0					
ANR	2554319	Argument	2		2553955	1					
ANR	2554320	PrimaryExpression	2		2553955	0					
ANR	2554321	Identifier	c_str		2553955	1					
ANR	2554322	ArgumentList			2553955	1					
ANR	2554323	ExpressionStatement	i += 2	174:2:4235:4241	2553955	1	True				
ANR	2554324	AssignmentExpression	i += 2		2553955	0		+=			
ANR	2554325	Identifier	i		2553955	0					
ANR	2554326	PrimaryExpression	2		2553955	1					
ANR	2554327	ExpressionStatement	"nextDigitChar ( timeStr , i )"	176:1:4247:4271	2553955	21	True				
ANR	2554328	CallExpression	"nextDigitChar ( timeStr , i )"		2553955	0					
ANR	2554329	Callee	nextDigitChar		2553955	0					
ANR	2554330	Identifier	nextDigitChar		2553955	0					
ANR	2554331	ArgumentList	timeStr		2553955	1					
ANR	2554332	Argument	timeStr		2553955	0					
ANR	2554333	Identifier	timeStr		2553955	0					
ANR	2554334	Argument	i		2553955	1					
ANR	2554335	Identifier	i		2553955	0					
ANR	2554336	IfStatement	if ( i <= len - 2 )		2553955	22					
ANR	2554337	Condition	i <= len - 2	178:4:4279:4286	2553955	0	True				
ANR	2554338	RelationalExpression	i <= len - 2		2553955	0		<=			
ANR	2554339	Identifier	i		2553955	0					
ANR	2554340	AdditiveExpression	len - 2		2553955	1		-			
ANR	2554341	Identifier	len		2553955	0					
ANR	2554342	PrimaryExpression	2		2553955	1					
ANR	2554343	CompoundStatement		51:14:1391:1391	2553955	1					
ANR	2554344	ExpressionStatement	"abstm . tm_hour += atoi ( timeStr . substr ( i , 2 ) . c_str ( ) )"	179:2:4293:4343	2553955	0	True				
ANR	2554345	AssignmentExpression	"abstm . tm_hour += atoi ( timeStr . substr ( i , 2 ) . c_str ( ) )"		2553955	0		+=			
ANR	2554346	MemberAccess	abstm . tm_hour		2553955	0					
ANR	2554347	Identifier	abstm		2553955	0					
ANR	2554348	Identifier	tm_hour		2553955	1					
ANR	2554349	CallExpression	"atoi ( timeStr . substr ( i , 2 ) . c_str ( ) )"		2553955	1					
ANR	2554350	Callee	atoi		2553955	0					
ANR	2554351	Identifier	atoi		2553955	0					
ANR	2554352	ArgumentList	"timeStr . substr ( i , 2 ) . c_str ( )"		2553955	1					
ANR	2554353	Argument	"timeStr . substr ( i , 2 ) . c_str ( )"		2553955	0					
ANR	2554354	CallExpression	"timeStr . substr ( i , 2 ) . c_str ( )"		2553955	0					
ANR	2554355	Callee	"timeStr . substr ( i , 2 ) . c_str"		2553955	0					
ANR	2554356	MemberAccess	"timeStr . substr ( i , 2 ) . c_str"		2553955	0					
ANR	2554357	CallExpression	"timeStr . substr ( i , 2 )"		2553955	0					
ANR	2554358	Callee	timeStr . substr		2553955	0					
ANR	2554359	MemberAccess	timeStr . substr		2553955	0					
ANR	2554360	Identifier	timeStr		2553955	0					
ANR	2554361	Identifier	substr		2553955	1					
ANR	2554362	ArgumentList	i		2553955	1					
ANR	2554363	Argument	i		2553955	0					
ANR	2554364	Identifier	i		2553955	0					
ANR	2554365	Argument	2		2553955	1					
ANR	2554366	PrimaryExpression	2		2553955	0					
ANR	2554367	Identifier	c_str		2553955	1					
ANR	2554368	ArgumentList			2553955	1					
ANR	2554369	ExpressionStatement	i += 2	180:2:4348:4354	2553955	1	True				
ANR	2554370	AssignmentExpression	i += 2		2553955	0		+=			
ANR	2554371	Identifier	i		2553955	0					
ANR	2554372	PrimaryExpression	2		2553955	1					
ANR	2554373	ExpressionStatement	"nextDigitChar ( timeStr , i )"	182:1:4362:4386	2553955	23	True				
ANR	2554374	CallExpression	"nextDigitChar ( timeStr , i )"		2553955	0					
ANR	2554375	Callee	nextDigitChar		2553955	0					
ANR	2554376	Identifier	nextDigitChar		2553955	0					
ANR	2554377	ArgumentList	timeStr		2553955	1					
ANR	2554378	Argument	timeStr		2553955	0					
ANR	2554379	Identifier	timeStr		2553955	0					
ANR	2554380	Argument	i		2553955	1					
ANR	2554381	Identifier	i		2553955	0					
ANR	2554382	IfStatement	if ( i <= len - 2 )		2553955	24					
ANR	2554383	Condition	i <= len - 2	184:4:4394:4401	2553955	0	True				
ANR	2554384	RelationalExpression	i <= len - 2		2553955	0		<=			
ANR	2554385	Identifier	i		2553955	0					
ANR	2554386	AdditiveExpression	len - 2		2553955	1		-			
ANR	2554387	Identifier	len		2553955	0					
ANR	2554388	PrimaryExpression	2		2553955	1					
ANR	2554389	CompoundStatement		57:14:1506:1506	2553955	1					
ANR	2554390	ExpressionStatement	"abstm . tm_min += atoi ( timeStr . substr ( i , 2 ) . c_str ( ) )"	185:2:4408:4457	2553955	0	True				
ANR	2554391	AssignmentExpression	"abstm . tm_min += atoi ( timeStr . substr ( i , 2 ) . c_str ( ) )"		2553955	0		+=			
ANR	2554392	MemberAccess	abstm . tm_min		2553955	0					
ANR	2554393	Identifier	abstm		2553955	0					
ANR	2554394	Identifier	tm_min		2553955	1					
ANR	2554395	CallExpression	"atoi ( timeStr . substr ( i , 2 ) . c_str ( ) )"		2553955	1					
ANR	2554396	Callee	atoi		2553955	0					
ANR	2554397	Identifier	atoi		2553955	0					
ANR	2554398	ArgumentList	"timeStr . substr ( i , 2 ) . c_str ( )"		2553955	1					
ANR	2554399	Argument	"timeStr . substr ( i , 2 ) . c_str ( )"		2553955	0					
ANR	2554400	CallExpression	"timeStr . substr ( i , 2 ) . c_str ( )"		2553955	0					
ANR	2554401	Callee	"timeStr . substr ( i , 2 ) . c_str"		2553955	0					
ANR	2554402	MemberAccess	"timeStr . substr ( i , 2 ) . c_str"		2553955	0					
ANR	2554403	CallExpression	"timeStr . substr ( i , 2 )"		2553955	0					
ANR	2554404	Callee	timeStr . substr		2553955	0					
ANR	2554405	MemberAccess	timeStr . substr		2553955	0					
ANR	2554406	Identifier	timeStr		2553955	0					
ANR	2554407	Identifier	substr		2553955	1					
ANR	2554408	ArgumentList	i		2553955	1					
ANR	2554409	Argument	i		2553955	0					
ANR	2554410	Identifier	i		2553955	0					
ANR	2554411	Argument	2		2553955	1					
ANR	2554412	PrimaryExpression	2		2553955	0					
ANR	2554413	Identifier	c_str		2553955	1					
ANR	2554414	ArgumentList			2553955	1					
ANR	2554415	ExpressionStatement	i += 2	186:2:4461:4467	2553955	1	True				
ANR	2554416	AssignmentExpression	i += 2		2553955	0		+=			
ANR	2554417	Identifier	i		2553955	0					
ANR	2554418	PrimaryExpression	2		2553955	1					
ANR	2554419	ExpressionStatement	"nextDigitChar ( timeStr , i )"	188:1:4475:4499	2553955	25	True				
ANR	2554420	CallExpression	"nextDigitChar ( timeStr , i )"		2553955	0					
ANR	2554421	Callee	nextDigitChar		2553955	0					
ANR	2554422	Identifier	nextDigitChar		2553955	0					
ANR	2554423	ArgumentList	timeStr		2553955	1					
ANR	2554424	Argument	timeStr		2553955	0					
ANR	2554425	Identifier	timeStr		2553955	0					
ANR	2554426	Argument	i		2553955	1					
ANR	2554427	Identifier	i		2553955	0					
ANR	2554428	IfStatement	if ( i <= len - 2 )		2553955	26					
ANR	2554429	Condition	i <= len - 2	190:4:4507:4514	2553955	0	True				
ANR	2554430	RelationalExpression	i <= len - 2		2553955	0		<=			
ANR	2554431	Identifier	i		2553955	0					
ANR	2554432	AdditiveExpression	len - 2		2553955	1		-			
ANR	2554433	Identifier	len		2553955	0					
ANR	2554434	PrimaryExpression	2		2553955	1					
ANR	2554435	CompoundStatement		63:14:1619:1619	2553955	1					
ANR	2554436	ExpressionStatement	"abstm . tm_sec = atoi ( timeStr . substr ( i , 2 ) . c_str ( ) )"	191:2:4521:4569	2553955	0	True				
ANR	2554437	AssignmentExpression	"abstm . tm_sec = atoi ( timeStr . substr ( i , 2 ) . c_str ( ) )"		2553955	0		=			
ANR	2554438	MemberAccess	abstm . tm_sec		2553955	0					
ANR	2554439	Identifier	abstm		2553955	0					
ANR	2554440	Identifier	tm_sec		2553955	1					
ANR	2554441	CallExpression	"atoi ( timeStr . substr ( i , 2 ) . c_str ( ) )"		2553955	1					
ANR	2554442	Callee	atoi		2553955	0					
ANR	2554443	Identifier	atoi		2553955	0					
ANR	2554444	ArgumentList	"timeStr . substr ( i , 2 ) . c_str ( )"		2553955	1					
ANR	2554445	Argument	"timeStr . substr ( i , 2 ) . c_str ( )"		2553955	0					
ANR	2554446	CallExpression	"timeStr . substr ( i , 2 ) . c_str ( )"		2553955	0					
ANR	2554447	Callee	"timeStr . substr ( i , 2 ) . c_str"		2553955	0					
ANR	2554448	MemberAccess	"timeStr . substr ( i , 2 ) . c_str"		2553955	0					
ANR	2554449	CallExpression	"timeStr . substr ( i , 2 )"		2553955	0					
ANR	2554450	Callee	timeStr . substr		2553955	0					
ANR	2554451	MemberAccess	timeStr . substr		2553955	0					
ANR	2554452	Identifier	timeStr		2553955	0					
ANR	2554453	Identifier	substr		2553955	1					
ANR	2554454	ArgumentList	i		2553955	1					
ANR	2554455	Argument	i		2553955	0					
ANR	2554456	Identifier	i		2553955	0					
ANR	2554457	Argument	2		2553955	1					
ANR	2554458	PrimaryExpression	2		2553955	0					
ANR	2554459	Identifier	c_str		2553955	1					
ANR	2554460	ArgumentList			2553955	1					
ANR	2554461	ExpressionStatement	i += 2	192:2:4574:4580	2553955	1	True				
ANR	2554462	AssignmentExpression	i += 2		2553955	0		+=			
ANR	2554463	Identifier	i		2553955	0					
ANR	2554464	PrimaryExpression	2		2553955	1					
ANR	2554465	ExpressionStatement	"nextDigitChar ( timeStr , i )"	194:1:4586:4610	2553955	27	True				
ANR	2554466	CallExpression	"nextDigitChar ( timeStr , i )"		2553955	0					
ANR	2554467	Callee	nextDigitChar		2553955	0					
ANR	2554468	Identifier	nextDigitChar		2553955	0					
ANR	2554469	ArgumentList	timeStr		2553955	1					
ANR	2554470	Argument	timeStr		2553955	0					
ANR	2554471	Identifier	timeStr		2553955	0					
ANR	2554472	Argument	i		2553955	1					
ANR	2554473	Identifier	i		2553955	0					
ANR	2554474	IfStatement	if ( ( i <= len - 1 ) && ( isdigit ( timeStr [ i ] ) ) )		2553955	28					
ANR	2554475	Condition	( i <= len - 1 ) && ( isdigit ( timeStr [ i ] ) )	196:4:4618:4652	2553955	0	True				
ANR	2554476	AndExpression	( i <= len - 1 ) && ( isdigit ( timeStr [ i ] ) )		2553955	0		&&			
ANR	2554477	RelationalExpression	i <= len - 1		2553955	0		<=			
ANR	2554478	Identifier	i		2553955	0					
ANR	2554479	AdditiveExpression	len - 1		2553955	1		-			
ANR	2554480	Identifier	len		2553955	0					
ANR	2554481	PrimaryExpression	1		2553955	1					
ANR	2554482	CallExpression	isdigit ( timeStr [ i ] )		2553955	1					
ANR	2554483	Callee	isdigit		2553955	0					
ANR	2554484	Identifier	isdigit		2553955	0					
ANR	2554485	ArgumentList	timeStr [ i ]		2553955	1					
ANR	2554486	Argument	timeStr [ i ]		2553955	0					
ANR	2554487	ArrayIndexing	timeStr [ i ]		2553955	0					
ANR	2554488	Identifier	timeStr		2553955	0					
ANR	2554489	Identifier	i		2553955	1					
ANR	2554490	CompoundStatement		69:41:1757:1757	2553955	1					
ANR	2554491	ExpressionStatement	val . SetErrorValue ( )	197:2:4722:4742	2553955	0	True				
ANR	2554492	CallExpression	val . SetErrorValue ( )		2553955	0					
ANR	2554493	Callee	val . SetErrorValue		2553955	0					
ANR	2554494	MemberAccess	val . SetErrorValue		2553955	0					
ANR	2554495	Identifier	val		2553955	0					
ANR	2554496	Identifier	SetErrorValue		2553955	1					
ANR	2554497	ArgumentList			2553955	1					
ANR	2554498	ReturnStatement	return ( MakeLiteral ( val ) ) ;	198:2:4800:4826	2553955	1	True				
ANR	2554499	CallExpression	MakeLiteral ( val )		2553955	0					
ANR	2554500	Callee	MakeLiteral		2553955	0					
ANR	2554501	Identifier	MakeLiteral		2553955	0					
ANR	2554502	ArgumentList	val		2553955	1					
ANR	2554503	Argument	val		2553955	0					
ANR	2554504	Identifier	val		2553955	0					
ANR	2554505	ExpressionStatement	abst . secs = mktime ( & abstm )	201:1:4840:4866	2553955	29	True				
ANR	2554506	AssignmentExpression	abst . secs = mktime ( & abstm )		2553955	0		=			
ANR	2554507	MemberAccess	abst . secs		2553955	0					
ANR	2554508	Identifier	abst		2553955	0					
ANR	2554509	Identifier	secs		2553955	1					
ANR	2554510	CallExpression	mktime ( & abstm )		2553955	1					
ANR	2554511	Callee	mktime		2553955	0					
ANR	2554512	Identifier	mktime		2553955	0					
ANR	2554513	ArgumentList	& abstm		2553955	1					
ANR	2554514	Argument	& abstm		2553955	0					
ANR	2554515	UnaryOperationExpression	& abstm		2553955	0					
ANR	2554516	UnaryOperator	&		2553955	0					
ANR	2554517	Identifier	abstm		2553955	1					
ANR	2554518	IfStatement	if ( abst . secs == - 1 )		2553955	30					
ANR	2554519	Condition	abst . secs == - 1	203:4:4874:4888	2553955	0	True				
ANR	2554520	EqualityExpression	abst . secs == - 1		2553955	0		==			
ANR	2554521	MemberAccess	abst . secs		2553955	0					
ANR	2554522	Identifier	abst		2553955	0					
ANR	2554523	Identifier	secs		2553955	1					
ANR	2554524	UnaryOperationExpression	- 1		2553955	1					
ANR	2554525	UnaryOperator	-		2553955	0					
ANR	2554526	PrimaryExpression	1		2553955	1					
ANR	2554527	CompoundStatement		76:22:1994:1994	2553955	1					
ANR	2554528	ExpressionStatement	val . SetErrorValue ( )	204:2:4965:4985	2553955	0	True				
ANR	2554529	CallExpression	val . SetErrorValue ( )		2553955	0					
ANR	2554530	Callee	val . SetErrorValue		2553955	0					
ANR	2554531	MemberAccess	val . SetErrorValue		2553955	0					
ANR	2554532	Identifier	val		2553955	0					
ANR	2554533	Identifier	SetErrorValue		2553955	1					
ANR	2554534	ArgumentList			2553955	1					
ANR	2554535	ReturnStatement	return ( MakeLiteral ( val ) ) ;	205:2:4989:5015	2553955	1	True				
ANR	2554536	CallExpression	MakeLiteral ( val )		2553955	0					
ANR	2554537	Callee	MakeLiteral		2553955	0					
ANR	2554538	Identifier	MakeLiteral		2553955	0					
ANR	2554539	ArgumentList	val		2553955	1					
ANR	2554540	Argument	val		2553955	0					
ANR	2554541	Identifier	val		2553955	0					
ANR	2554542	ExpressionStatement	"abst . secs += timezone_offset ( abst . secs , true )"	212:4:5265:5312	2553955	31	True				
ANR	2554543	AssignmentExpression	"abst . secs += timezone_offset ( abst . secs , true )"		2553955	0		+=			
ANR	2554544	MemberAccess	abst . secs		2553955	0					
ANR	2554545	Identifier	abst		2553955	0					
ANR	2554546	Identifier	secs		2553955	1					
ANR	2554547	CallExpression	"timezone_offset ( abst . secs , true )"		2553955	1					
ANR	2554548	Callee	timezone_offset		2553955	0					
ANR	2554549	Identifier	timezone_offset		2553955	0					
ANR	2554550	ArgumentList	abst . secs		2553955	1					
ANR	2554551	Argument	abst . secs		2553955	0					
ANR	2554552	MemberAccess	abst . secs		2553955	0					
ANR	2554553	Identifier	abst		2553955	0					
ANR	2554554	Identifier	secs		2553955	1					
ANR	2554555	Argument	true		2553955	1					
ANR	2554556	Identifier	true		2553955	0					
ANR	2554557	IfStatement	if ( offset )		2553955	32					
ANR	2554558	Condition	offset	214:4:5320:5325	2553955	0	True				
ANR	2554559	Identifier	offset		2553955	0					
ANR	2554560	CompoundStatement		87:12:2430:2430	2553955	1					
ANR	2554561	ExpressionStatement	abst . offset = ( tzhr * 3600 ) + ( tzmin * 60 )	215:2:5332:5370	2553955	0	True				
ANR	2554562	AssignmentExpression	abst . offset = ( tzhr * 3600 ) + ( tzmin * 60 )		2553955	0		=			
ANR	2554563	MemberAccess	abst . offset		2553955	0					
ANR	2554564	Identifier	abst		2553955	0					
ANR	2554565	Identifier	offset		2553955	1					
ANR	2554566	AdditiveExpression	( tzhr * 3600 ) + ( tzmin * 60 )		2553955	1		+			
ANR	2554567	MultiplicativeExpression	tzhr * 3600		2553955	0		*			
ANR	2554568	Identifier	tzhr		2553955	0					
ANR	2554569	PrimaryExpression	3600		2553955	1					
ANR	2554570	MultiplicativeExpression	tzmin * 60		2553955	1		*			
ANR	2554571	Identifier	tzmin		2553955	0					
ANR	2554572	PrimaryExpression	60		2553955	1					
ANR	2554573	ElseStatement	else		2553955	0					
ANR	2554574	CompoundStatement		90:6:2483:2483	2553955	0					
ANR	2554575	ExpressionStatement	abst . offset = findOffset ( abst . secs )	218:2:5460:5495	2553955	0	True				
ANR	2554576	AssignmentExpression	abst . offset = findOffset ( abst . secs )		2553955	0		=			
ANR	2554577	MemberAccess	abst . offset		2553955	0					
ANR	2554578	Identifier	abst		2553955	0					
ANR	2554579	Identifier	offset		2553955	1					
ANR	2554580	CallExpression	findOffset ( abst . secs )		2553955	1					
ANR	2554581	Callee	findOffset		2553955	0					
ANR	2554582	Identifier	findOffset		2553955	0					
ANR	2554583	ArgumentList	abst . secs		2553955	1					
ANR	2554584	Argument	abst . secs		2553955	0					
ANR	2554585	MemberAccess	abst . secs		2553955	0					
ANR	2554586	Identifier	abst		2553955	0					
ANR	2554587	Identifier	secs		2553955	1					
ANR	2554588	ExpressionStatement	abst . secs -= abst . offset	224:1:5699:5723	2553955	33	True				
ANR	2554589	AssignmentExpression	abst . secs -= abst . offset		2553955	0		-=			
ANR	2554590	MemberAccess	abst . secs		2553955	0					
ANR	2554591	Identifier	abst		2553955	0					
ANR	2554592	Identifier	secs		2553955	1					
ANR	2554593	MemberAccess	abst . offset		2553955	1					
ANR	2554594	Identifier	abst		2553955	0					
ANR	2554595	Identifier	offset		2553955	1					
ANR	2554596	IfStatement	if ( abst . offset == - 1 )		2553955	34					
ANR	2554597	Condition	abst . offset == - 1	226:4:5731:5747	2553955	0	True				
ANR	2554598	EqualityExpression	abst . offset == - 1		2553955	0		==			
ANR	2554599	MemberAccess	abst . offset		2553955	0					
ANR	2554600	Identifier	abst		2553955	0					
ANR	2554601	Identifier	offset		2553955	1					
ANR	2554602	UnaryOperationExpression	- 1		2553955	1					
ANR	2554603	UnaryOperator	-		2553955	0					
ANR	2554604	PrimaryExpression	1		2553955	1					
ANR	2554605	CompoundStatement		99:23:2852:2852	2553955	1					
ANR	2554606	ExpressionStatement	val . SetErrorValue ( )	227:2:5787:5807	2553955	0	True				
ANR	2554607	CallExpression	val . SetErrorValue ( )		2553955	0					
ANR	2554608	Callee	val . SetErrorValue		2553955	0					
ANR	2554609	MemberAccess	val . SetErrorValue		2553955	0					
ANR	2554610	Identifier	val		2553955	0					
ANR	2554611	Identifier	SetErrorValue		2553955	1					
ANR	2554612	ArgumentList			2553955	1					
ANR	2554613	ReturnStatement	return ( MakeLiteral ( val ) ) ;	228:2:5811:5838	2553955	1	True				
ANR	2554614	CallExpression	MakeLiteral ( val )		2553955	0					
ANR	2554615	Callee	MakeLiteral		2553955	0					
ANR	2554616	Identifier	MakeLiteral		2553955	0					
ANR	2554617	ArgumentList	val		2553955	1					
ANR	2554618	Argument	val		2553955	0					
ANR	2554619	Identifier	val		2553955	0					
ANR	2554620	ElseStatement	else		2553955	0					
ANR	2554621	CompoundStatement		103:6:2951:2951	2553955	0					
ANR	2554622	ExpressionStatement	val . SetAbsoluteTimeValue ( abst )	231:2:5853:5883	2553955	0	True				
ANR	2554623	CallExpression	val . SetAbsoluteTimeValue ( abst )		2553955	0					
ANR	2554624	Callee	val . SetAbsoluteTimeValue		2553955	0					
ANR	2554625	MemberAccess	val . SetAbsoluteTimeValue		2553955	0					
ANR	2554626	Identifier	val		2553955	0					
ANR	2554627	Identifier	SetAbsoluteTimeValue		2553955	1					
ANR	2554628	ArgumentList	abst		2553955	1					
ANR	2554629	Argument	abst		2553955	0					
ANR	2554630	Identifier	abst		2553955	0					
ANR	2554631	ReturnStatement	return ( MakeLiteral ( val ) ) ;	234:1:5891:5919	2553955	35	True				
ANR	2554632	CallExpression	MakeLiteral ( val )		2553955	0					
ANR	2554633	Callee	MakeLiteral		2553955	0					
ANR	2554634	Identifier	MakeLiteral		2553955	0					
ANR	2554635	ArgumentList	val		2553955	1					
ANR	2554636	Argument	val		2553955	0					
ANR	2554637	Identifier	val		2553955	0					
ANR	2554638	ReturnType	Literal *		2553955	1					
ANR	2554639	Identifier	Literal :: MakeAbsTime		2553955	2					
ANR	2554640	ParameterList	string timeStr		2553955	3					
ANR	2554641	Parameter	string timeStr	127:12:2880:2893	2553955	0	True				
ANR	2554642	ParameterType	string		2553955	0					
ANR	2554643	Identifier	timeStr		2553955	1					
ANR	2554644	CFGEntryNode	ENTRY		2553955		True				
ANR	2554645	CFGExitNode	EXIT		2553955		True				
ANR	2554646	Symbol	abstm . tm_mon		2553955						
ANR	2554647	Symbol	timeStr		2553955						
ANR	2554648	Symbol	abstm . tm_mday		2553955						
ANR	2554649	Symbol	findOffset		2553955						
ANR	2554650	Symbol	abst . offset		2553955						
ANR	2554651	Symbol	timeStr . substr		2553955						
ANR	2554652	Symbol	len		2553955						
ANR	2554653	Symbol	tzmin		2553955						
ANR	2554654	Symbol	abst . secs		2553955						
ANR	2554655	Symbol	"timeStr . substr ( i , 4 ) . c_str"		2553955						
ANR	2554656	Symbol	abstm . tm_min		2553955						
ANR	2554657	Symbol	abstm . tm_sec		2553955						
ANR	2554658	Symbol	isdigit		2553955						
ANR	2554659	Symbol	val		2553955						
ANR	2554660	Symbol	* timeStr		2553955						
ANR	2554661	Symbol	atoi		2553955						
ANR	2554662	Symbol	abstm . tm_hour		2553955						
ANR	2554663	Symbol	offset		2553955						
ANR	2554664	Symbol	tzhr		2553955						
ANR	2554665	Symbol	MakeLiteral		2553955						
ANR	2554666	Symbol	extractTimeZone		2553955						
ANR	2554667	Symbol	"timeStr . substr ( i , 2 ) . c_str"		2553955						
ANR	2554668	Symbol	timezone_offset		2553955						
ANR	2554669	Symbol	false		2553955						
ANR	2554670	Symbol	i		2553955						
ANR	2554671	Symbol	timeStr . length		2553955						
ANR	2554672	Symbol	abstm		2553955						
ANR	2554673	Symbol	abst		2553955						
ANR	2554674	Symbol	mktime		2553955						
ANR	2554675	Symbol	* i		2553955						
ANR	2554676	Symbol	abstm . tm_year		2553955						
ANR	2554677	Symbol	true		2553955						
ANR	2554678	Symbol	& abstm		2553955						
ANR	2554679	Symbol	* len		2553955						
ANR	2554680	Function	Literal :: MakeRelTime	237:0:5924:6113							
ANR	2554681	FunctionDef	"Literal :: MakeRelTime (time_t t1 , time_t t2)"		2554680	0					
ANR	2554682	CompoundStatement		239:0:5979:6113	2554680	0					
ANR	2554683	IdentifierDeclStatement	Value val ;	240:1:5982:5991	2554680	0	True				
ANR	2554684	IdentifierDecl	val		2554680	0					
ANR	2554685	IdentifierDeclType	Value		2554680	0					
ANR	2554686	Identifier	val		2554680	1					
ANR	2554687	IfStatement	if ( t1 < 0 )		2554680	1					
ANR	2554688	Condition	t1 < 0	242:5:5999:6002	2554680	0	True				
ANR	2554689	RelationalExpression	t1 < 0		2554680	0		<			
ANR	2554690	Identifier	t1		2554680	0					
ANR	2554691	PrimaryExpression	0		2554680	1					
ANR	2554692	ExpressionStatement	time ( & t1 )	242:12:6006:6017	2554680	1	True				
ANR	2554693	CallExpression	time ( & t1 )		2554680	0					
ANR	2554694	Callee	time		2554680	0					
ANR	2554695	Identifier	time		2554680	0					
ANR	2554696	ArgumentList	& t1		2554680	1					
ANR	2554697	Argument	& t1		2554680	0					
ANR	2554698	UnaryOperationExpression	& t1		2554680	0					
ANR	2554699	UnaryOperator	&		2554680	0					
ANR	2554700	Identifier	t1		2554680	1					
ANR	2554701	IfStatement	if ( t2 < 0 )		2554680	2					
ANR	2554702	Condition	t2 < 0	243:5:6024:6027	2554680	0	True				
ANR	2554703	RelationalExpression	t2 < 0		2554680	0		<			
ANR	2554704	Identifier	t2		2554680	0					
ANR	2554705	PrimaryExpression	0		2554680	1					
ANR	2554706	ExpressionStatement	time ( & t2 )	243:12:6031:6042	2554680	1	True				
ANR	2554707	CallExpression	time ( & t2 )		2554680	0					
ANR	2554708	Callee	time		2554680	0					
ANR	2554709	Identifier	time		2554680	0					
ANR	2554710	ArgumentList	& t2		2554680	1					
ANR	2554711	Argument	& t2		2554680	0					
ANR	2554712	UnaryOperationExpression	& t2		2554680	0					
ANR	2554713	UnaryOperator	&		2554680	0					
ANR	2554714	Identifier	t2		2554680	1					
ANR	2554715	ExpressionStatement	val . SetRelativeTimeValue ( t1 - t2 )	244:1:6045:6080	2554680	3	True				
ANR	2554716	CallExpression	val . SetRelativeTimeValue ( t1 - t2 )		2554680	0					
ANR	2554717	Callee	val . SetRelativeTimeValue		2554680	0					
ANR	2554718	MemberAccess	val . SetRelativeTimeValue		2554680	0					
ANR	2554719	Identifier	val		2554680	0					
ANR	2554720	Identifier	SetRelativeTimeValue		2554680	1					
ANR	2554721	ArgumentList	t1 - t2		2554680	1					
ANR	2554722	Argument	t1 - t2		2554680	0					
ANR	2554723	AdditiveExpression	t1 - t2		2554680	0		-			
ANR	2554724	Identifier	t1		2554680	0					
ANR	2554725	Identifier	t2		2554680	1					
ANR	2554726	ReturnStatement	return ( MakeLiteral ( val ) ) ;	245:1:6083:6111	2554680	4	True				
ANR	2554727	CallExpression	MakeLiteral ( val )		2554680	0					
ANR	2554728	Callee	MakeLiteral		2554680	0					
ANR	2554729	Identifier	MakeLiteral		2554680	0					
ANR	2554730	ArgumentList	val		2554680	1					
ANR	2554731	Argument	val		2554680	0					
ANR	2554732	Identifier	val		2554680	0					
ANR	2554733	ReturnType	Literal *		2554680	1					
ANR	2554734	Identifier	Literal :: MakeRelTime		2554680	2					
ANR	2554735	ParameterList	"time_t t1 , time_t t2"		2554680	3					
ANR	2554736	Parameter	time_t t1	238:13:5956:5964	2554680	0	True				
ANR	2554737	ParameterType	time_t		2554680	0					
ANR	2554738	Identifier	t1		2554680	1					
ANR	2554739	Parameter	time_t t2	238:24:5967:5975	2554680	1	True				
ANR	2554740	ParameterType	time_t		2554680	0					
ANR	2554741	Identifier	t2		2554680	1					
ANR	2554742	CFGEntryNode	ENTRY		2554680		True				
ANR	2554743	CFGExitNode	EXIT		2554680		True				
ANR	2554744	Symbol	val		2554680						
ANR	2554745	Symbol	& t1		2554680						
ANR	2554746	Symbol	MakeLiteral		2554680						
ANR	2554747	Symbol	& t2		2554680						
ANR	2554748	Symbol	t1		2554680						
ANR	2554749	Symbol	t2		2554680						
ANR	2554750	Function	Literal :: MakeRelTime	249:0:6117:6427							
ANR	2554751	FunctionDef	Literal :: MakeRelTime (time_t secs)		2554750	0					
ANR	2554752	CompoundStatement		251:0:6163:6427	2554750	0					
ANR	2554753	IdentifierDeclStatement	Value val ;	252:1:6166:6176	2554750	0	True				
ANR	2554754	IdentifierDecl	val		2554750	0					
ANR	2554755	IdentifierDeclType	Value		2554750	0					
ANR	2554756	Identifier	val		2554750	1					
ANR	2554757	IdentifierDeclStatement	struct tm lt ;	253:1:6179:6192	2554750	1	True				
ANR	2554758	IdentifierDecl	lt		2554750	0					
ANR	2554759	IdentifierDeclType	struct tm		2554750	0					
ANR	2554760	Identifier	lt		2554750	1					
ANR	2554761	IfStatement	if ( secs < 0 )		2554750	2					
ANR	2554762	Condition	secs < 0	255:5:6200:6205	2554750	0	True				
ANR	2554763	RelationalExpression	secs < 0		2554750	0		<			
ANR	2554764	Identifier	secs		2554750	0					
ANR	2554765	PrimaryExpression	0		2554750	1					
ANR	2554766	CompoundStatement		5:14:45:45	2554750	1					
ANR	2554767	ExpressionStatement	time ( & secs )	256:2:6213:6225	2554750	0	True				
ANR	2554768	CallExpression	time ( & secs )		2554750	0					
ANR	2554769	Callee	time		2554750	0					
ANR	2554770	Identifier	time		2554750	0					
ANR	2554771	ArgumentList	& secs		2554750	1					
ANR	2554772	Argument	& secs		2554750	0					
ANR	2554773	UnaryOperationExpression	& secs		2554750	0					
ANR	2554774	UnaryOperator	&		2554750	0					
ANR	2554775	Identifier	secs		2554750	1					
ANR	2554776	ExpressionStatement	"getLocalTime ( & secs , & lt )"	257:2:6229:6255	2554750	1	True				
ANR	2554777	CallExpression	"getLocalTime ( & secs , & lt )"		2554750	0					
ANR	2554778	Callee	getLocalTime		2554750	0					
ANR	2554779	Identifier	getLocalTime		2554750	0					
ANR	2554780	ArgumentList	& secs		2554750	1					
ANR	2554781	Argument	& secs		2554750	0					
ANR	2554782	UnaryOperationExpression	& secs		2554750	0					
ANR	2554783	UnaryOperator	&		2554750	0					
ANR	2554784	Identifier	secs		2554750	1					
ANR	2554785	Argument	& lt		2554750	1					
ANR	2554786	UnaryOperationExpression	& lt		2554750	0					
ANR	2554787	UnaryOperator	&		2554750	0					
ANR	2554788	Identifier	lt		2554750	1					
ANR	2554789	ExpressionStatement	val . SetRelativeTimeValue ( ( time_t ) ( lt . tm_hour * 3600 + lt . tm_min * 60 + lt . tm_sec ) )	258:2:6259:6338	2554750	2	True				
ANR	2554790	CallExpression	val . SetRelativeTimeValue ( ( time_t ) ( lt . tm_hour * 3600 + lt . tm_min * 60 + lt . tm_sec ) )		2554750	0					
ANR	2554791	Callee	val . SetRelativeTimeValue		2554750	0					
ANR	2554792	MemberAccess	val . SetRelativeTimeValue		2554750	0					
ANR	2554793	Identifier	val		2554750	0					
ANR	2554794	Identifier	SetRelativeTimeValue		2554750	1					
ANR	2554795	ArgumentList	( time_t ) ( lt . tm_hour * 3600 + lt . tm_min * 60 + lt . tm_sec )		2554750	1					
ANR	2554796	Argument	( time_t ) ( lt . tm_hour * 3600 + lt . tm_min * 60 + lt . tm_sec )		2554750	0					
ANR	2554797	CastExpression	( time_t ) ( lt . tm_hour * 3600 + lt . tm_min * 60 + lt . tm_sec )		2554750	0					
ANR	2554798	CastTarget	time_t		2554750	0					
ANR	2554799	AdditiveExpression	lt . tm_hour * 3600 + lt . tm_min * 60 + lt . tm_sec		2554750	1		+			
ANR	2554800	MultiplicativeExpression	lt . tm_hour * 3600		2554750	0		*			
ANR	2554801	MemberAccess	lt . tm_hour		2554750	0					
ANR	2554802	Identifier	lt		2554750	0					
ANR	2554803	Identifier	tm_hour		2554750	1					
ANR	2554804	PrimaryExpression	3600		2554750	1					
ANR	2554805	AdditiveExpression	lt . tm_min * 60 + lt . tm_sec		2554750	1		+			
ANR	2554806	MultiplicativeExpression	lt . tm_min * 60		2554750	0		*			
ANR	2554807	MemberAccess	lt . tm_min		2554750	0					
ANR	2554808	Identifier	lt		2554750	0					
ANR	2554809	Identifier	tm_min		2554750	1					
ANR	2554810	PrimaryExpression	60		2554750	1					
ANR	2554811	MemberAccess	lt . tm_sec		2554750	1					
ANR	2554812	Identifier	lt		2554750	0					
ANR	2554813	Identifier	tm_sec		2554750	1					
ANR	2554814	ElseStatement	else		2554750	0					
ANR	2554815	CompoundStatement		9:8:184:184	2554750	0					
ANR	2554816	ExpressionStatement	val . SetRelativeTimeValue ( ( time_t ) secs )	260:2:6352:6391	2554750	0	True				
ANR	2554817	CallExpression	val . SetRelativeTimeValue ( ( time_t ) secs )		2554750	0					
ANR	2554818	Callee	val . SetRelativeTimeValue		2554750	0					
ANR	2554819	MemberAccess	val . SetRelativeTimeValue		2554750	0					
ANR	2554820	Identifier	val		2554750	0					
ANR	2554821	Identifier	SetRelativeTimeValue		2554750	1					
ANR	2554822	ArgumentList	( time_t ) secs		2554750	1					
ANR	2554823	Argument	( time_t ) secs		2554750	0					
ANR	2554824	CastExpression	( time_t ) secs		2554750	0					
ANR	2554825	CastTarget	time_t		2554750	0					
ANR	2554826	Identifier	secs		2554750	1					
ANR	2554827	ReturnStatement	return ( MakeLiteral ( val ) ) ;	262:1:6397:6425	2554750	3	True				
ANR	2554828	CallExpression	MakeLiteral ( val )		2554750	0					
ANR	2554829	Callee	MakeLiteral		2554750	0					
ANR	2554830	Identifier	MakeLiteral		2554750	0					
ANR	2554831	ArgumentList	val		2554750	1					
ANR	2554832	Argument	val		2554750	0					
ANR	2554833	Identifier	val		2554750	0					
ANR	2554834	ReturnType	Literal *		2554750	1					
ANR	2554835	Identifier	Literal :: MakeRelTime		2554750	2					
ANR	2554836	ParameterList	time_t secs		2554750	3					
ANR	2554837	Parameter	time_t secs	250:13:6149:6159	2554750	0	True				
ANR	2554838	ParameterType	time_t		2554750	0					
ANR	2554839	Identifier	secs		2554750	1					
ANR	2554840	CFGEntryNode	ENTRY		2554750		True				
ANR	2554841	CFGExitNode	EXIT		2554750		True				
ANR	2554842	Symbol	val		2554750						
ANR	2554843	Symbol	lt . tm_hour		2554750						
ANR	2554844	Symbol	& lt		2554750						
ANR	2554845	Symbol	MakeLiteral		2554750						
ANR	2554846	Symbol	secs		2554750						
ANR	2554847	Symbol	lt		2554750						
ANR	2554848	Symbol	lt . tm_sec		2554750						
ANR	2554849	Symbol	lt . tm_min		2554750						
ANR	2554850	Symbol	& secs		2554750						
ANR	2554851	Function	Literal :: MakeRelTime	269:0:6551:8744							
ANR	2554852	FunctionDef	Literal :: MakeRelTime (string timeStr)		2554851	0					
ANR	2554853	CompoundStatement		271:0:6598:8744	2554851	0					
ANR	2554854	IdentifierDeclStatement	Value val ;	272:1:6601:6610	2554851	0	True				
ANR	2554855	IdentifierDecl	val		2554851	0					
ANR	2554856	IdentifierDeclType	Value		2554851	0					
ANR	2554857	Identifier	val		2554851	1					
ANR	2554858	IdentifierDeclStatement	double rsecs ;	273:1:6615:6627	2554851	1	True				
ANR	2554859	IdentifierDecl	rsecs		2554851	0					
ANR	2554860	IdentifierDeclType	double		2554851	0					
ANR	2554861	Identifier	rsecs		2554851	1					
ANR	2554862	IdentifierDeclStatement	int len = timeStr . length ( ) ;	275:1:6632:6658	2554851	2	True				
ANR	2554863	IdentifierDecl	len = timeStr . length ( )		2554851	0					
ANR	2554864	IdentifierDeclType	int		2554851	0					
ANR	2554865	Identifier	len		2554851	1					
ANR	2554866	AssignmentExpression	len = timeStr . length ( )		2554851	2		=			
ANR	2554867	Identifier	len		2554851	0					
ANR	2554868	CallExpression	timeStr . length ( )		2554851	1					
ANR	2554869	Callee	timeStr . length		2554851	0					
ANR	2554870	MemberAccess	timeStr . length		2554851	0					
ANR	2554871	Identifier	timeStr		2554851	0					
ANR	2554872	Identifier	length		2554851	1					
ANR	2554873	ArgumentList			2554851	1					
ANR	2554874	IdentifierDeclStatement	double secs = 0 ;	276:1:6661:6676	2554851	3	True				
ANR	2554875	IdentifierDecl	secs = 0		2554851	0					
ANR	2554876	IdentifierDeclType	double		2554851	0					
ANR	2554877	Identifier	secs		2554851	1					
ANR	2554878	AssignmentExpression	secs = 0		2554851	2		=			
ANR	2554879	Identifier	secs		2554851	0					
ANR	2554880	PrimaryExpression	0		2554851	1					
ANR	2554881	IdentifierDeclStatement	int mins = 0 ;	277:1:6679:6691	2554851	4	True				
ANR	2554882	IdentifierDecl	mins = 0		2554851	0					
ANR	2554883	IdentifierDeclType	int		2554851	0					
ANR	2554884	Identifier	mins		2554851	1					
ANR	2554885	AssignmentExpression	mins = 0		2554851	2		=			
ANR	2554886	Identifier	mins		2554851	0					
ANR	2554887	PrimaryExpression	0		2554851	1					
ANR	2554888	IdentifierDeclStatement	int hrs = 0 ;	278:1:6694:6705	2554851	5	True				
ANR	2554889	IdentifierDecl	hrs = 0		2554851	0					
ANR	2554890	IdentifierDeclType	int		2554851	0					
ANR	2554891	Identifier	hrs		2554851	1					
ANR	2554892	AssignmentExpression	hrs = 0		2554851	2		=			
ANR	2554893	Identifier	hrs		2554851	0					
ANR	2554894	PrimaryExpression	0		2554851	1					
ANR	2554895	IdentifierDeclStatement	int days = 0 ;	279:1:6708:6720	2554851	6	True				
ANR	2554896	IdentifierDecl	days = 0		2554851	0					
ANR	2554897	IdentifierDeclType	int		2554851	0					
ANR	2554898	Identifier	days		2554851	1					
ANR	2554899	AssignmentExpression	days = 0		2554851	2		=			
ANR	2554900	Identifier	days		2554851	0					
ANR	2554901	PrimaryExpression	0		2554851	1					
ANR	2554902	IdentifierDeclStatement	bool negative = false ;	280:1:6723:6744	2554851	7	True				
ANR	2554903	IdentifierDecl	negative = false		2554851	0					
ANR	2554904	IdentifierDeclType	bool		2554851	0					
ANR	2554905	Identifier	negative		2554851	1					
ANR	2554906	AssignmentExpression	negative = false		2554851	2		=			
ANR	2554907	Identifier	false		2554851	0					
ANR	2554908	Identifier	false		2554851	1					
ANR	2554909	IdentifierDeclStatement	int i = len - 1 ;	282:1:6752:6763	2554851	8	True				
ANR	2554910	IdentifierDecl	i = len - 1		2554851	0					
ANR	2554911	IdentifierDeclType	int		2554851	0					
ANR	2554912	Identifier	i		2554851	1					
ANR	2554913	AssignmentExpression	i = len - 1		2554851	2		=			
ANR	2554914	Identifier	i		2554851	0					
ANR	2554915	AdditiveExpression	len - 1		2554851	1		-			
ANR	2554916	Identifier	len		2554851	0					
ANR	2554917	PrimaryExpression	1		2554851	1					
ANR	2554918	ExpressionStatement	"prevNonSpaceChar ( timeStr , i )"	283:1:6767:6794	2554851	9	True				
ANR	2554919	CallExpression	"prevNonSpaceChar ( timeStr , i )"		2554851	0					
ANR	2554920	Callee	prevNonSpaceChar		2554851	0					
ANR	2554921	Identifier	prevNonSpaceChar		2554851	0					
ANR	2554922	ArgumentList	timeStr		2554851	1					
ANR	2554923	Argument	timeStr		2554851	0					
ANR	2554924	Identifier	timeStr		2554851	0					
ANR	2554925	Argument	i		2554851	1					
ANR	2554926	Identifier	i		2554851	0					
ANR	2554927	IfStatement	if ( ( i >= 0 ) && ( ( timeStr [ i ] == 's' ) || ( timeStr [ i ] == 'S' ) || ( isdigit ( timeStr [ i ] ) ) ) )		2554851	10					
ANR	2554928	Condition	( i >= 0 ) && ( ( timeStr [ i ] == 's' ) || ( timeStr [ i ] == 'S' ) || ( isdigit ( timeStr [ i ] ) ) )	285:4:6869:6946	2554851	0	True				
ANR	2554929	AndExpression	( i >= 0 ) && ( ( timeStr [ i ] == 's' ) || ( timeStr [ i ] == 'S' ) || ( isdigit ( timeStr [ i ] ) ) )		2554851	0		&&			
ANR	2554930	RelationalExpression	i >= 0		2554851	0		>=			
ANR	2554931	Identifier	i		2554851	0					
ANR	2554932	PrimaryExpression	0		2554851	1					
ANR	2554933	OrExpression	( timeStr [ i ] == 's' ) || ( timeStr [ i ] == 'S' ) || ( isdigit ( timeStr [ i ] ) )		2554851	1		||			
ANR	2554934	EqualityExpression	timeStr [ i ] == 's'		2554851	0		==			
ANR	2554935	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2554936	Identifier	timeStr		2554851	0					
ANR	2554937	Identifier	i		2554851	1					
ANR	2554938	PrimaryExpression	's'		2554851	1					
ANR	2554939	OrExpression	( timeStr [ i ] == 'S' ) || ( isdigit ( timeStr [ i ] ) )		2554851	1		||			
ANR	2554940	EqualityExpression	timeStr [ i ] == 'S'		2554851	0		==			
ANR	2554941	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2554942	Identifier	timeStr		2554851	0					
ANR	2554943	Identifier	i		2554851	1					
ANR	2554944	PrimaryExpression	'S'		2554851	1					
ANR	2554945	CallExpression	isdigit ( timeStr [ i ] )		2554851	1					
ANR	2554946	Callee	isdigit		2554851	0					
ANR	2554947	Identifier	isdigit		2554851	0					
ANR	2554948	ArgumentList	timeStr [ i ]		2554851	1					
ANR	2554949	Argument	timeStr [ i ]		2554851	0					
ANR	2554950	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2554951	Identifier	timeStr		2554851	0					
ANR	2554952	Identifier	i		2554851	1					
ANR	2554953	CompoundStatement		20:2:448:464	2554851	1					
ANR	2554954	IfStatement	if ( ( timeStr [ i ] == 's' ) || ( timeStr [ i ] == 'S' ) )		2554851	0					
ANR	2554955	Condition	( timeStr [ i ] == 's' ) || ( timeStr [ i ] == 'S' )	286:5:6956:6997	2554851	0	True				
ANR	2554956	OrExpression	( timeStr [ i ] == 's' ) || ( timeStr [ i ] == 'S' )		2554851	0		||			
ANR	2554957	EqualityExpression	timeStr [ i ] == 's'		2554851	0		==			
ANR	2554958	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2554959	Identifier	timeStr		2554851	0					
ANR	2554960	Identifier	i		2554851	1					
ANR	2554961	PrimaryExpression	's'		2554851	1					
ANR	2554962	EqualityExpression	timeStr [ i ] == 'S'		2554851	1		==			
ANR	2554963	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2554964	Identifier	timeStr		2554851	0					
ANR	2554965	Identifier	i		2554851	1					
ANR	2554966	PrimaryExpression	'S'		2554851	1					
ANR	2554967	CompoundStatement		16:49:401:401	2554851	1					
ANR	2554968	ExpressionStatement	i --	287:3:7005:7008	2554851	0	True				
ANR	2554969	PostIncDecOperationExpression	i --		2554851	0					
ANR	2554970	Identifier	i		2554851	0					
ANR	2554971	IncDec	--		2554851	1					
ANR	2554972	ExpressionStatement	"prevNonSpaceChar ( timeStr , i )"	289:2:7016:7043	2554851	1	True				
ANR	2554973	CallExpression	"prevNonSpaceChar ( timeStr , i )"		2554851	0					
ANR	2554974	Callee	prevNonSpaceChar		2554851	0					
ANR	2554975	Identifier	prevNonSpaceChar		2554851	0					
ANR	2554976	ArgumentList	timeStr		2554851	1					
ANR	2554977	Argument	timeStr		2554851	0					
ANR	2554978	Identifier	timeStr		2554851	0					
ANR	2554979	Argument	i		2554851	1					
ANR	2554980	Identifier	i		2554851	0					
ANR	2554981	IdentifierDeclStatement	string revSecStr ;	290:2:7047:7063	2554851	2	True				
ANR	2554982	IdentifierDecl	revSecStr		2554851	0					
ANR	2554983	IdentifierDeclType	string		2554851	0					
ANR	2554984	Identifier	revSecStr		2554851	1					
ANR	2554985	WhileStatement	while ( ( i >= 0 ) && ( isdigit ( timeStr [ i ] ) ) )		2554851	3					
ANR	2554986	Condition	( i >= 0 ) && ( isdigit ( timeStr [ i ] ) )	291:8:7073:7102	2554851	0	True				
ANR	2554987	AndExpression	( i >= 0 ) && ( isdigit ( timeStr [ i ] ) )		2554851	0		&&			
ANR	2554988	RelationalExpression	i >= 0		2554851	0		>=			
ANR	2554989	Identifier	i		2554851	0					
ANR	2554990	PrimaryExpression	0		2554851	1					
ANR	2554991	CallExpression	isdigit ( timeStr [ i ] )		2554851	1					
ANR	2554992	Callee	isdigit		2554851	0					
ANR	2554993	Identifier	isdigit		2554851	0					
ANR	2554994	ArgumentList	timeStr [ i ]		2554851	1					
ANR	2554995	Argument	timeStr [ i ]		2554851	0					
ANR	2554996	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2554997	Identifier	timeStr		2554851	0					
ANR	2554998	Identifier	i		2554851	1					
ANR	2554999	CompoundStatement		21:40:506:506	2554851	1					
ANR	2555000	ExpressionStatement	revSecStr += timeStr [ i -- ]	292:3:7110:7135	2554851	0	True				
ANR	2555001	AssignmentExpression	revSecStr += timeStr [ i -- ]		2554851	0		+=			
ANR	2555002	Identifier	revSecStr		2554851	0					
ANR	2555003	ArrayIndexing	timeStr [ i -- ]		2554851	1					
ANR	2555004	Identifier	timeStr		2554851	0					
ANR	2555005	PostIncDecOperationExpression	i --		2554851	1					
ANR	2555006	Identifier	i		2554851	0					
ANR	2555007	IncDec	--		2554851	1					
ANR	2555008	IfStatement	if ( ( i >= 0 ) && ( timeStr [ i ] == '.' ) )		2554851	4					
ANR	2555009	Condition	( i >= 0 ) && ( timeStr [ i ] == '.' )	294:5:7146:7173	2554851	0	True				
ANR	2555010	AndExpression	( i >= 0 ) && ( timeStr [ i ] == '.' )		2554851	0		&&			
ANR	2555011	RelationalExpression	i >= 0		2554851	0		>=			
ANR	2555012	Identifier	i		2554851	0					
ANR	2555013	PrimaryExpression	0		2554851	1					
ANR	2555014	EqualityExpression	timeStr [ i ] == '.'		2554851	1		==			
ANR	2555015	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555016	Identifier	timeStr		2554851	0					
ANR	2555017	Identifier	i		2554851	1					
ANR	2555018	PrimaryExpression	'.'		2554851	1					
ANR	2555019	CompoundStatement		24:35:577:577	2554851	1					
ANR	2555020	ExpressionStatement	revSecStr += timeStr [ i -- ]	295:3:7181:7206	2554851	0	True				
ANR	2555021	AssignmentExpression	revSecStr += timeStr [ i -- ]		2554851	0		+=			
ANR	2555022	Identifier	revSecStr		2554851	0					
ANR	2555023	ArrayIndexing	timeStr [ i -- ]		2554851	1					
ANR	2555024	Identifier	timeStr		2554851	0					
ANR	2555025	PostIncDecOperationExpression	i --		2554851	1					
ANR	2555026	Identifier	i		2554851	0					
ANR	2555027	IncDec	--		2554851	1					
ANR	2555028	WhileStatement	while ( ( i >= 0 ) && ( isdigit ( timeStr [ i ] ) ) )		2554851	1					
ANR	2555029	Condition	( i >= 0 ) && ( isdigit ( timeStr [ i ] ) )	296:9:7217:7247	2554851	0	True				
ANR	2555030	AndExpression	( i >= 0 ) && ( isdigit ( timeStr [ i ] ) )		2554851	0		&&			
ANR	2555031	RelationalExpression	i >= 0		2554851	0		>=			
ANR	2555032	Identifier	i		2554851	0					
ANR	2555033	PrimaryExpression	0		2554851	1					
ANR	2555034	CallExpression	isdigit ( timeStr [ i ] )		2554851	1					
ANR	2555035	Callee	isdigit		2554851	0					
ANR	2555036	Identifier	isdigit		2554851	0					
ANR	2555037	ArgumentList	timeStr [ i ]		2554851	1					
ANR	2555038	Argument	timeStr [ i ]		2554851	0					
ANR	2555039	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555040	Identifier	timeStr		2554851	0					
ANR	2555041	Identifier	i		2554851	1					
ANR	2555042	CompoundStatement		26:42:651:651	2554851	1					
ANR	2555043	ExpressionStatement	revSecStr += timeStr [ i -- ]	297:4:7256:7281	2554851	0	True				
ANR	2555044	AssignmentExpression	revSecStr += timeStr [ i -- ]		2554851	0		+=			
ANR	2555045	Identifier	revSecStr		2554851	0					
ANR	2555046	ArrayIndexing	timeStr [ i -- ]		2554851	1					
ANR	2555047	Identifier	timeStr		2554851	0					
ANR	2555048	PostIncDecOperationExpression	i --		2554851	1					
ANR	2555049	Identifier	i		2554851	0					
ANR	2555050	IncDec	--		2554851	1					
ANR	2555051	ExpressionStatement	secs = revDouble ( revSecStr )	300:2:7294:7321	2554851	5	True				
ANR	2555052	AssignmentExpression	secs = revDouble ( revSecStr )		2554851	0		=			
ANR	2555053	Identifier	secs		2554851	0					
ANR	2555054	CallExpression	revDouble ( revSecStr )		2554851	1					
ANR	2555055	Callee	revDouble		2554851	0					
ANR	2555056	Identifier	revDouble		2554851	0					
ANR	2555057	ArgumentList	revSecStr		2554851	1					
ANR	2555058	Argument	revSecStr		2554851	0					
ANR	2555059	Identifier	revSecStr		2554851	0					
ANR	2555060	ExpressionStatement	"prevNonSpaceChar ( timeStr , i )"	303:1:7329:7356	2554851	11	True				
ANR	2555061	CallExpression	"prevNonSpaceChar ( timeStr , i )"		2554851	0					
ANR	2555062	Callee	prevNonSpaceChar		2554851	0					
ANR	2555063	Identifier	prevNonSpaceChar		2554851	0					
ANR	2555064	ArgumentList	timeStr		2554851	1					
ANR	2555065	Argument	timeStr		2554851	0					
ANR	2555066	Identifier	timeStr		2554851	0					
ANR	2555067	Argument	i		2554851	1					
ANR	2555068	Identifier	i		2554851	0					
ANR	2555069	IfStatement	if ( ( i >= 0 ) && ( ( timeStr [ i ] == 'm' ) || ( timeStr [ i ] == 'M' ) || ( timeStr [ i ] == ':' ) ) )		2554851	12					
ANR	2555070	Condition	( i >= 0 ) && ( ( timeStr [ i ] == 'm' ) || ( timeStr [ i ] == 'M' ) || ( timeStr [ i ] == ':' ) )	305:4:7395:7470	2554851	0	True				
ANR	2555071	AndExpression	( i >= 0 ) && ( ( timeStr [ i ] == 'm' ) || ( timeStr [ i ] == 'M' ) || ( timeStr [ i ] == ':' ) )		2554851	0		&&			
ANR	2555072	RelationalExpression	i >= 0		2554851	0		>=			
ANR	2555073	Identifier	i		2554851	0					
ANR	2555074	PrimaryExpression	0		2554851	1					
ANR	2555075	OrExpression	( timeStr [ i ] == 'm' ) || ( timeStr [ i ] == 'M' ) || ( timeStr [ i ] == ':' )		2554851	1		||			
ANR	2555076	EqualityExpression	timeStr [ i ] == 'm'		2554851	0		==			
ANR	2555077	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555078	Identifier	timeStr		2554851	0					
ANR	2555079	Identifier	i		2554851	1					
ANR	2555080	PrimaryExpression	'm'		2554851	1					
ANR	2555081	OrExpression	( timeStr [ i ] == 'M' ) || ( timeStr [ i ] == ':' )		2554851	1		||			
ANR	2555082	EqualityExpression	timeStr [ i ] == 'M'		2554851	0		==			
ANR	2555083	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555084	Identifier	timeStr		2554851	0					
ANR	2555085	Identifier	i		2554851	1					
ANR	2555086	PrimaryExpression	'M'		2554851	1					
ANR	2555087	EqualityExpression	timeStr [ i ] == ':'		2554851	1		==			
ANR	2555088	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555089	Identifier	timeStr		2554851	0					
ANR	2555090	Identifier	i		2554851	1					
ANR	2555091	PrimaryExpression	':'		2554851	1					
ANR	2555092	CompoundStatement		37:2:885:901	2554851	1					
ANR	2555093	ExpressionStatement	i --	306:2:7477:7480	2554851	0	True				
ANR	2555094	PostIncDecOperationExpression	i --		2554851	0					
ANR	2555095	Identifier	i		2554851	0					
ANR	2555096	IncDec	--		2554851	1					
ANR	2555097	IdentifierDeclStatement	string revMinStr ;	307:2:7484:7500	2554851	1	True				
ANR	2555098	IdentifierDecl	revMinStr		2554851	0					
ANR	2555099	IdentifierDeclType	string		2554851	0					
ANR	2555100	Identifier	revMinStr		2554851	1					
ANR	2555101	ExpressionStatement	"prevNonSpaceChar ( timeStr , i )"	308:2:7504:7531	2554851	2	True				
ANR	2555102	CallExpression	"prevNonSpaceChar ( timeStr , i )"		2554851	0					
ANR	2555103	Callee	prevNonSpaceChar		2554851	0					
ANR	2555104	Identifier	prevNonSpaceChar		2554851	0					
ANR	2555105	ArgumentList	timeStr		2554851	1					
ANR	2555106	Argument	timeStr		2554851	0					
ANR	2555107	Identifier	timeStr		2554851	0					
ANR	2555108	Argument	i		2554851	1					
ANR	2555109	Identifier	i		2554851	0					
ANR	2555110	WhileStatement	while ( ( i >= 0 ) && ( isdigit ( timeStr [ i ] ) ) )		2554851	3					
ANR	2555111	Condition	( i >= 0 ) && ( isdigit ( timeStr [ i ] ) )	309:8:7541:7570	2554851	0	True				
ANR	2555112	AndExpression	( i >= 0 ) && ( isdigit ( timeStr [ i ] ) )		2554851	0		&&			
ANR	2555113	RelationalExpression	i >= 0		2554851	0		>=			
ANR	2555114	Identifier	i		2554851	0					
ANR	2555115	PrimaryExpression	0		2554851	1					
ANR	2555116	CallExpression	isdigit ( timeStr [ i ] )		2554851	1					
ANR	2555117	Callee	isdigit		2554851	0					
ANR	2555118	Identifier	isdigit		2554851	0					
ANR	2555119	ArgumentList	timeStr [ i ]		2554851	1					
ANR	2555120	Argument	timeStr [ i ]		2554851	0					
ANR	2555121	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555122	Identifier	timeStr		2554851	0					
ANR	2555123	Identifier	i		2554851	1					
ANR	2555124	CompoundStatement		39:40:974:974	2554851	1					
ANR	2555125	ExpressionStatement	revMinStr += timeStr [ i -- ]	310:3:7578:7603	2554851	0	True				
ANR	2555126	AssignmentExpression	revMinStr += timeStr [ i -- ]		2554851	0		+=			
ANR	2555127	Identifier	revMinStr		2554851	0					
ANR	2555128	ArrayIndexing	timeStr [ i -- ]		2554851	1					
ANR	2555129	Identifier	timeStr		2554851	0					
ANR	2555130	PostIncDecOperationExpression	i --		2554851	1					
ANR	2555131	Identifier	i		2554851	0					
ANR	2555132	IncDec	--		2554851	1					
ANR	2555133	ExpressionStatement	mins = revInt ( revMinStr )	312:2:7611:7635	2554851	4	True				
ANR	2555134	AssignmentExpression	mins = revInt ( revMinStr )		2554851	0		=			
ANR	2555135	Identifier	mins		2554851	0					
ANR	2555136	CallExpression	revInt ( revMinStr )		2554851	1					
ANR	2555137	Callee	revInt		2554851	0					
ANR	2555138	Identifier	revInt		2554851	0					
ANR	2555139	ArgumentList	revMinStr		2554851	1					
ANR	2555140	Argument	revMinStr		2554851	0					
ANR	2555141	Identifier	revMinStr		2554851	0					
ANR	2555142	ExpressionStatement	"prevNonSpaceChar ( timeStr , i )"	315:1:7643:7670	2554851	13	True				
ANR	2555143	CallExpression	"prevNonSpaceChar ( timeStr , i )"		2554851	0					
ANR	2555144	Callee	prevNonSpaceChar		2554851	0					
ANR	2555145	Identifier	prevNonSpaceChar		2554851	0					
ANR	2555146	ArgumentList	timeStr		2554851	1					
ANR	2555147	Argument	timeStr		2554851	0					
ANR	2555148	Identifier	timeStr		2554851	0					
ANR	2555149	Argument	i		2554851	1					
ANR	2555150	Identifier	i		2554851	0					
ANR	2555151	IfStatement	if ( ( i >= 0 ) && ( ( timeStr [ i ] == 'h' ) || ( timeStr [ i ] == 'H' ) || ( timeStr [ i ] == ':' ) ) )		2554851	14					
ANR	2555152	Condition	( i >= 0 ) && ( ( timeStr [ i ] == 'h' ) || ( timeStr [ i ] == 'H' ) || ( timeStr [ i ] == ':' ) )	317:4:7709:7784	2554851	0	True				
ANR	2555153	AndExpression	( i >= 0 ) && ( ( timeStr [ i ] == 'h' ) || ( timeStr [ i ] == 'H' ) || ( timeStr [ i ] == ':' ) )		2554851	0		&&			
ANR	2555154	RelationalExpression	i >= 0		2554851	0		>=			
ANR	2555155	Identifier	i		2554851	0					
ANR	2555156	PrimaryExpression	0		2554851	1					
ANR	2555157	OrExpression	( timeStr [ i ] == 'h' ) || ( timeStr [ i ] == 'H' ) || ( timeStr [ i ] == ':' )		2554851	1		||			
ANR	2555158	EqualityExpression	timeStr [ i ] == 'h'		2554851	0		==			
ANR	2555159	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555160	Identifier	timeStr		2554851	0					
ANR	2555161	Identifier	i		2554851	1					
ANR	2555162	PrimaryExpression	'h'		2554851	1					
ANR	2555163	OrExpression	( timeStr [ i ] == 'H' ) || ( timeStr [ i ] == ':' )		2554851	1		||			
ANR	2555164	EqualityExpression	timeStr [ i ] == 'H'		2554851	0		==			
ANR	2555165	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555166	Identifier	timeStr		2554851	0					
ANR	2555167	Identifier	i		2554851	1					
ANR	2555168	PrimaryExpression	'H'		2554851	1					
ANR	2555169	EqualityExpression	timeStr [ i ] == ':'		2554851	1		==			
ANR	2555170	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555171	Identifier	timeStr		2554851	0					
ANR	2555172	Identifier	i		2554851	1					
ANR	2555173	PrimaryExpression	':'		2554851	1					
ANR	2555174	CompoundStatement		49:2:1199:1214	2554851	1					
ANR	2555175	ExpressionStatement	i --	318:2:7791:7794	2554851	0	True				
ANR	2555176	PostIncDecOperationExpression	i --		2554851	0					
ANR	2555177	Identifier	i		2554851	0					
ANR	2555178	IncDec	--		2554851	1					
ANR	2555179	IdentifierDeclStatement	string revHrStr ;	319:2:7798:7813	2554851	1	True				
ANR	2555180	IdentifierDecl	revHrStr		2554851	0					
ANR	2555181	IdentifierDeclType	string		2554851	0					
ANR	2555182	Identifier	revHrStr		2554851	1					
ANR	2555183	ExpressionStatement	"prevNonSpaceChar ( timeStr , i )"	320:2:7817:7844	2554851	2	True				
ANR	2555184	CallExpression	"prevNonSpaceChar ( timeStr , i )"		2554851	0					
ANR	2555185	Callee	prevNonSpaceChar		2554851	0					
ANR	2555186	Identifier	prevNonSpaceChar		2554851	0					
ANR	2555187	ArgumentList	timeStr		2554851	1					
ANR	2555188	Argument	timeStr		2554851	0					
ANR	2555189	Identifier	timeStr		2554851	0					
ANR	2555190	Argument	i		2554851	1					
ANR	2555191	Identifier	i		2554851	0					
ANR	2555192	WhileStatement	while ( ( i >= 0 ) && ( isdigit ( timeStr [ i ] ) ) )		2554851	3					
ANR	2555193	Condition	( i >= 0 ) && ( isdigit ( timeStr [ i ] ) )	321:8:7854:7883	2554851	0	True				
ANR	2555194	AndExpression	( i >= 0 ) && ( isdigit ( timeStr [ i ] ) )		2554851	0		&&			
ANR	2555195	RelationalExpression	i >= 0		2554851	0		>=			
ANR	2555196	Identifier	i		2554851	0					
ANR	2555197	PrimaryExpression	0		2554851	1					
ANR	2555198	CallExpression	isdigit ( timeStr [ i ] )		2554851	1					
ANR	2555199	Callee	isdigit		2554851	0					
ANR	2555200	Identifier	isdigit		2554851	0					
ANR	2555201	ArgumentList	timeStr [ i ]		2554851	1					
ANR	2555202	Argument	timeStr [ i ]		2554851	0					
ANR	2555203	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555204	Identifier	timeStr		2554851	0					
ANR	2555205	Identifier	i		2554851	1					
ANR	2555206	CompoundStatement		51:40:1287:1287	2554851	1					
ANR	2555207	ExpressionStatement	revHrStr += timeStr [ i -- ]	322:3:7891:7915	2554851	0	True				
ANR	2555208	AssignmentExpression	revHrStr += timeStr [ i -- ]		2554851	0		+=			
ANR	2555209	Identifier	revHrStr		2554851	0					
ANR	2555210	ArrayIndexing	timeStr [ i -- ]		2554851	1					
ANR	2555211	Identifier	timeStr		2554851	0					
ANR	2555212	PostIncDecOperationExpression	i --		2554851	1					
ANR	2555213	Identifier	i		2554851	0					
ANR	2555214	IncDec	--		2554851	1					
ANR	2555215	ExpressionStatement	hrs = revInt ( revHrStr )	324:2:7923:7945	2554851	4	True				
ANR	2555216	AssignmentExpression	hrs = revInt ( revHrStr )		2554851	0		=			
ANR	2555217	Identifier	hrs		2554851	0					
ANR	2555218	CallExpression	revInt ( revHrStr )		2554851	1					
ANR	2555219	Callee	revInt		2554851	0					
ANR	2555220	Identifier	revInt		2554851	0					
ANR	2555221	ArgumentList	revHrStr		2554851	1					
ANR	2555222	Argument	revHrStr		2554851	0					
ANR	2555223	Identifier	revHrStr		2554851	0					
ANR	2555224	ExpressionStatement	"prevNonSpaceChar ( timeStr , i )"	327:1:7956:7983	2554851	15	True				
ANR	2555225	CallExpression	"prevNonSpaceChar ( timeStr , i )"		2554851	0					
ANR	2555226	Callee	prevNonSpaceChar		2554851	0					
ANR	2555227	Identifier	prevNonSpaceChar		2554851	0					
ANR	2555228	ArgumentList	timeStr		2554851	1					
ANR	2555229	Argument	timeStr		2554851	0					
ANR	2555230	Identifier	timeStr		2554851	0					
ANR	2555231	Argument	i		2554851	1					
ANR	2555232	Identifier	i		2554851	0					
ANR	2555233	IfStatement	if ( ( i >= 0 ) && ( ( timeStr [ i ] == 'd' ) || ( timeStr [ i ] == 'D' ) || ( timeStr [ i ] == '+' ) ) )		2554851	16					
ANR	2555234	Condition	( i >= 0 ) && ( ( timeStr [ i ] == 'd' ) || ( timeStr [ i ] == 'D' ) || ( timeStr [ i ] == '+' ) )	329:4:8023:8098	2554851	0	True				
ANR	2555235	AndExpression	( i >= 0 ) && ( ( timeStr [ i ] == 'd' ) || ( timeStr [ i ] == 'D' ) || ( timeStr [ i ] == '+' ) )		2554851	0		&&			
ANR	2555236	RelationalExpression	i >= 0		2554851	0		>=			
ANR	2555237	Identifier	i		2554851	0					
ANR	2555238	PrimaryExpression	0		2554851	1					
ANR	2555239	OrExpression	( timeStr [ i ] == 'd' ) || ( timeStr [ i ] == 'D' ) || ( timeStr [ i ] == '+' )		2554851	1		||			
ANR	2555240	EqualityExpression	timeStr [ i ] == 'd'		2554851	0		==			
ANR	2555241	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555242	Identifier	timeStr		2554851	0					
ANR	2555243	Identifier	i		2554851	1					
ANR	2555244	PrimaryExpression	'd'		2554851	1					
ANR	2555245	OrExpression	( timeStr [ i ] == 'D' ) || ( timeStr [ i ] == '+' )		2554851	1		||			
ANR	2555246	EqualityExpression	timeStr [ i ] == 'D'		2554851	0		==			
ANR	2555247	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555248	Identifier	timeStr		2554851	0					
ANR	2555249	Identifier	i		2554851	1					
ANR	2555250	PrimaryExpression	'D'		2554851	1					
ANR	2555251	EqualityExpression	timeStr [ i ] == '+'		2554851	1		==			
ANR	2555252	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555253	Identifier	timeStr		2554851	0					
ANR	2555254	Identifier	i		2554851	1					
ANR	2555255	PrimaryExpression	'+'		2554851	1					
ANR	2555256	CompoundStatement		61:2:1513:1529	2554851	1					
ANR	2555257	ExpressionStatement	i --	330:2:8105:8108	2554851	0	True				
ANR	2555258	PostIncDecOperationExpression	i --		2554851	0					
ANR	2555259	Identifier	i		2554851	0					
ANR	2555260	IncDec	--		2554851	1					
ANR	2555261	IdentifierDeclStatement	string revDayStr ;	331:2:8112:8128	2554851	1	True				
ANR	2555262	IdentifierDecl	revDayStr		2554851	0					
ANR	2555263	IdentifierDeclType	string		2554851	0					
ANR	2555264	Identifier	revDayStr		2554851	1					
ANR	2555265	ExpressionStatement	"prevNonSpaceChar ( timeStr , i )"	332:2:8132:8159	2554851	2	True				
ANR	2555266	CallExpression	"prevNonSpaceChar ( timeStr , i )"		2554851	0					
ANR	2555267	Callee	prevNonSpaceChar		2554851	0					
ANR	2555268	Identifier	prevNonSpaceChar		2554851	0					
ANR	2555269	ArgumentList	timeStr		2554851	1					
ANR	2555270	Argument	timeStr		2554851	0					
ANR	2555271	Identifier	timeStr		2554851	0					
ANR	2555272	Argument	i		2554851	1					
ANR	2555273	Identifier	i		2554851	0					
ANR	2555274	WhileStatement	while ( ( i >= 0 ) && ( isdigit ( timeStr [ i ] ) ) )		2554851	3					
ANR	2555275	Condition	( i >= 0 ) && ( isdigit ( timeStr [ i ] ) )	333:8:8169:8198	2554851	0	True				
ANR	2555276	AndExpression	( i >= 0 ) && ( isdigit ( timeStr [ i ] ) )		2554851	0		&&			
ANR	2555277	RelationalExpression	i >= 0		2554851	0		>=			
ANR	2555278	Identifier	i		2554851	0					
ANR	2555279	PrimaryExpression	0		2554851	1					
ANR	2555280	CallExpression	isdigit ( timeStr [ i ] )		2554851	1					
ANR	2555281	Callee	isdigit		2554851	0					
ANR	2555282	Identifier	isdigit		2554851	0					
ANR	2555283	ArgumentList	timeStr [ i ]		2554851	1					
ANR	2555284	Argument	timeStr [ i ]		2554851	0					
ANR	2555285	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555286	Identifier	timeStr		2554851	0					
ANR	2555287	Identifier	i		2554851	1					
ANR	2555288	CompoundStatement		63:40:1602:1602	2554851	1					
ANR	2555289	ExpressionStatement	revDayStr += timeStr [ i -- ]	334:3:8206:8231	2554851	0	True				
ANR	2555290	AssignmentExpression	revDayStr += timeStr [ i -- ]		2554851	0		+=			
ANR	2555291	Identifier	revDayStr		2554851	0					
ANR	2555292	ArrayIndexing	timeStr [ i -- ]		2554851	1					
ANR	2555293	Identifier	timeStr		2554851	0					
ANR	2555294	PostIncDecOperationExpression	i --		2554851	1					
ANR	2555295	Identifier	i		2554851	0					
ANR	2555296	IncDec	--		2554851	1					
ANR	2555297	ExpressionStatement	days = revInt ( revDayStr )	336:2:8239:8263	2554851	4	True				
ANR	2555298	AssignmentExpression	days = revInt ( revDayStr )		2554851	0		=			
ANR	2555299	Identifier	days		2554851	0					
ANR	2555300	CallExpression	revInt ( revDayStr )		2554851	1					
ANR	2555301	Callee	revInt		2554851	0					
ANR	2555302	Identifier	revInt		2554851	0					
ANR	2555303	ArgumentList	revDayStr		2554851	1					
ANR	2555304	Argument	revDayStr		2554851	0					
ANR	2555305	Identifier	revDayStr		2554851	0					
ANR	2555306	ExpressionStatement	"prevNonSpaceChar ( timeStr , i )"	339:1:8276:8303	2554851	17	True				
ANR	2555307	CallExpression	"prevNonSpaceChar ( timeStr , i )"		2554851	0					
ANR	2555308	Callee	prevNonSpaceChar		2554851	0					
ANR	2555309	Identifier	prevNonSpaceChar		2554851	0					
ANR	2555310	ArgumentList	timeStr		2554851	1					
ANR	2555311	Argument	timeStr		2554851	0					
ANR	2555312	Identifier	timeStr		2554851	0					
ANR	2555313	Argument	i		2554851	1					
ANR	2555314	Identifier	i		2554851	0					
ANR	2555315	IfStatement	if ( ( i >= 0 ) && ( timeStr [ i ] == '-' ) )		2554851	18					
ANR	2555316	Condition	( i >= 0 ) && ( timeStr [ i ] == '-' )	341:4:8339:8366	2554851	0	True				
ANR	2555317	AndExpression	( i >= 0 ) && ( timeStr [ i ] == '-' )		2554851	0		&&			
ANR	2555318	RelationalExpression	i >= 0		2554851	0		>=			
ANR	2555319	Identifier	i		2554851	0					
ANR	2555320	PrimaryExpression	0		2554851	1					
ANR	2555321	EqualityExpression	timeStr [ i ] == '-'		2554851	1		==			
ANR	2555322	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555323	Identifier	timeStr		2554851	0					
ANR	2555324	Identifier	i		2554851	1					
ANR	2555325	PrimaryExpression	'-'		2554851	1					
ANR	2555326	CompoundStatement		71:34:1770:1770	2554851	1					
ANR	2555327	ExpressionStatement	negative = true	342:2:8373:8388	2554851	0	True				
ANR	2555328	AssignmentExpression	negative = true		2554851	0		=			
ANR	2555329	Identifier	negative		2554851	0					
ANR	2555330	Identifier	true		2554851	1					
ANR	2555331	ExpressionStatement	i --	343:2:8392:8395	2554851	1	True				
ANR	2555332	PostIncDecOperationExpression	i --		2554851	0					
ANR	2555333	Identifier	i		2554851	0					
ANR	2555334	IncDec	--		2554851	1					
ANR	2555335	ExpressionStatement	"prevNonSpaceChar ( timeStr , i )"	346:1:8403:8430	2554851	19	True				
ANR	2555336	CallExpression	"prevNonSpaceChar ( timeStr , i )"		2554851	0					
ANR	2555337	Callee	prevNonSpaceChar		2554851	0					
ANR	2555338	Identifier	prevNonSpaceChar		2554851	0					
ANR	2555339	ArgumentList	timeStr		2554851	1					
ANR	2555340	Argument	timeStr		2554851	0					
ANR	2555341	Identifier	timeStr		2554851	0					
ANR	2555342	Argument	i		2554851	1					
ANR	2555343	Identifier	i		2554851	0					
ANR	2555344	IfStatement	if ( ( i >= 0 ) && ( ! ( isspace ( timeStr [ i ] ) ) ) )		2554851	20					
ANR	2555345	Condition	( i >= 0 ) && ( ! ( isspace ( timeStr [ i ] ) ) )	348:4:8441:8474	2554851	0	True				
ANR	2555346	AndExpression	( i >= 0 ) && ( ! ( isspace ( timeStr [ i ] ) ) )		2554851	0		&&			
ANR	2555347	RelationalExpression	i >= 0		2554851	0		>=			
ANR	2555348	Identifier	i		2554851	0					
ANR	2555349	PrimaryExpression	0		2554851	1					
ANR	2555350	UnaryOperationExpression	! ( isspace ( timeStr [ i ] ) )		2554851	1					
ANR	2555351	UnaryOperator	!		2554851	0					
ANR	2555352	CallExpression	isspace ( timeStr [ i ] )		2554851	1					
ANR	2555353	Callee	isspace		2554851	0					
ANR	2555354	Identifier	isspace		2554851	0					
ANR	2555355	ArgumentList	timeStr [ i ]		2554851	1					
ANR	2555356	Argument	timeStr [ i ]		2554851	0					
ANR	2555357	ArrayIndexing	timeStr [ i ]		2554851	0					
ANR	2555358	Identifier	timeStr		2554851	0					
ANR	2555359	Identifier	i		2554851	1					
ANR	2555360	CompoundStatement		78:40:1878:1878	2554851	1					
ANR	2555361	ExpressionStatement	val . SetErrorValue ( )	349:2:8539:8559	2554851	0	True				
ANR	2555362	CallExpression	val . SetErrorValue ( )		2554851	0					
ANR	2555363	Callee	val . SetErrorValue		2554851	0					
ANR	2555364	MemberAccess	val . SetErrorValue		2554851	0					
ANR	2555365	Identifier	val		2554851	0					
ANR	2555366	Identifier	SetErrorValue		2554851	1					
ANR	2555367	ArgumentList			2554851	1					
ANR	2555368	ReturnStatement	return ( MakeLiteral ( val ) ) ;	350:2:8563:8589	2554851	1	True				
ANR	2555369	CallExpression	MakeLiteral ( val )		2554851	0					
ANR	2555370	Callee	MakeLiteral		2554851	0					
ANR	2555371	Identifier	MakeLiteral		2554851	0					
ANR	2555372	ArgumentList	val		2554851	1					
ANR	2555373	Argument	val		2554851	0					
ANR	2555374	Identifier	val		2554851	0					
ANR	2555375	ExpressionStatement	rsecs = ( negative ? - 1 : + 1 ) * ( days * 86400 + hrs * 3600 + mins * 60 + secs )	353:1:8600:8675	2554851	21	True				
ANR	2555376	AssignmentExpression	rsecs = ( negative ? - 1 : + 1 ) * ( days * 86400 + hrs * 3600 + mins * 60 + secs )		2554851	0		=			
ANR	2555377	Identifier	rsecs		2554851	0					
ANR	2555378	MultiplicativeExpression	( negative ? - 1 : + 1 ) * ( days * 86400 + hrs * 3600 + mins * 60 + secs )		2554851	1		*			
ANR	2555379	ConditionalExpression	negative ? - 1 : + 1		2554851	0					
ANR	2555380	Condition	negative		2554851	0					
ANR	2555381	Identifier	negative		2554851	0					
ANR	2555382	UnaryOperationExpression	- 1		2554851	1					
ANR	2555383	UnaryOperator	-		2554851	0					
ANR	2555384	PrimaryExpression	1		2554851	1					
ANR	2555385	UnaryOperationExpression	+ 1		2554851	2					
ANR	2555386	UnaryOperator	+		2554851	0					
ANR	2555387	PrimaryExpression	1		2554851	1					
ANR	2555388	AdditiveExpression	days * 86400 + hrs * 3600 + mins * 60 + secs		2554851	1		+			
ANR	2555389	MultiplicativeExpression	days * 86400		2554851	0		*			
ANR	2555390	Identifier	days		2554851	0					
ANR	2555391	PrimaryExpression	86400		2554851	1					
ANR	2555392	AdditiveExpression	hrs * 3600 + mins * 60 + secs		2554851	1		+			
ANR	2555393	MultiplicativeExpression	hrs * 3600		2554851	0		*			
ANR	2555394	Identifier	hrs		2554851	0					
ANR	2555395	PrimaryExpression	3600		2554851	1					
ANR	2555396	AdditiveExpression	mins * 60 + secs		2554851	1		+			
ANR	2555397	MultiplicativeExpression	mins * 60		2554851	0		*			
ANR	2555398	Identifier	mins		2554851	0					
ANR	2555399	PrimaryExpression	60		2554851	1					
ANR	2555400	Identifier	secs		2554851	1					
ANR	2555401	ExpressionStatement	val . SetRelativeTimeValue ( rsecs )	354:1:8678:8709	2554851	22	True				
ANR	2555402	CallExpression	val . SetRelativeTimeValue ( rsecs )		2554851	0					
ANR	2555403	Callee	val . SetRelativeTimeValue		2554851	0					
ANR	2555404	MemberAccess	val . SetRelativeTimeValue		2554851	0					
ANR	2555405	Identifier	val		2554851	0					
ANR	2555406	Identifier	SetRelativeTimeValue		2554851	1					
ANR	2555407	ArgumentList	rsecs		2554851	1					
ANR	2555408	Argument	rsecs		2554851	0					
ANR	2555409	Identifier	rsecs		2554851	0					
ANR	2555410	ReturnStatement	return ( MakeLiteral ( val ) ) ;	356:1:8714:8742	2554851	23	True				
ANR	2555411	CallExpression	MakeLiteral ( val )		2554851	0					
ANR	2555412	Callee	MakeLiteral		2554851	0					
ANR	2555413	Identifier	MakeLiteral		2554851	0					
ANR	2555414	ArgumentList	val		2554851	1					
ANR	2555415	Argument	val		2554851	0					
ANR	2555416	Identifier	val		2554851	0					
ANR	2555417	ReturnType	Literal *		2554851	1					
ANR	2555418	Identifier	Literal :: MakeRelTime		2554851	2					
ANR	2555419	ParameterList	string timeStr		2554851	3					
ANR	2555420	Parameter	string timeStr	270:12:6582:6595	2554851	0	True				
ANR	2555421	ParameterType	string		2554851	0					
ANR	2555422	Identifier	timeStr		2554851	1					
ANR	2555423	CFGEntryNode	ENTRY		2554851		True				
ANR	2555424	CFGExitNode	EXIT		2554851		True				
ANR	2555425	Symbol	val		2554851						
ANR	2555426	Symbol	* timeStr		2554851						
ANR	2555427	Symbol	revInt		2554851						
ANR	2555428	Symbol	revHrStr		2554851						
ANR	2555429	Symbol	MakeLiteral		2554851						
ANR	2555430	Symbol	rsecs		2554851						
ANR	2555431	Symbol	hrs		2554851						
ANR	2555432	Symbol	false		2554851						
ANR	2555433	Symbol	isspace		2554851						
ANR	2555434	Symbol	i		2554851						
ANR	2555435	Symbol	timeStr		2554851						
ANR	2555436	Symbol	timeStr . length		2554851						
ANR	2555437	Symbol	revSecStr		2554851						
ANR	2555438	Symbol	revMinStr		2554851						
ANR	2555439	Symbol	revDayStr		2554851						
ANR	2555440	Symbol	mins		2554851						
ANR	2555441	Symbol	negative		2554851						
ANR	2555442	Symbol	* i		2554851						
ANR	2555443	Symbol	len		2554851						
ANR	2555444	Symbol	secs		2554851						
ANR	2555445	Symbol	true		2554851						
ANR	2555446	Symbol	days		2554851						
ANR	2555447	Symbol	isdigit		2554851						
ANR	2555448	Symbol	revDouble		2554851						
ANR	2555449	Function	nextDigitChar	362:0:8875:9027							
ANR	2555450	FunctionDef	"nextDigitChar (string Str , int & index)"		2555449	0					
ANR	2555451	CompoundStatement		363:0:8933:9027	2555449	0					
ANR	2555452	IdentifierDeclStatement	int len = Str . length ( ) ;	364:1:8936:8958	2555449	0	True				
ANR	2555453	IdentifierDecl	len = Str . length ( )		2555449	0					
ANR	2555454	IdentifierDeclType	int		2555449	0					
ANR	2555455	Identifier	len		2555449	1					
ANR	2555456	AssignmentExpression	len = Str . length ( )		2555449	2		=			
ANR	2555457	Identifier	len		2555449	0					
ANR	2555458	CallExpression	Str . length ( )		2555449	1					
ANR	2555459	Callee	Str . length		2555449	0					
ANR	2555460	MemberAccess	Str . length		2555449	0					
ANR	2555461	Identifier	Str		2555449	0					
ANR	2555462	Identifier	length		2555449	1					
ANR	2555463	ArgumentList			2555449	1					
ANR	2555464	WhileStatement	while ( ( index < len ) && ( ! isdigit ( Str [ index ] ) ) )		2555449	1					
ANR	2555465	Condition	( index < len ) && ( ! isdigit ( Str [ index ] ) )	365:10:8970:9005	2555449	0	True				
ANR	2555466	AndExpression	( index < len ) && ( ! isdigit ( Str [ index ] ) )		2555449	0		&&			
ANR	2555467	RelationalExpression	index < len		2555449	0		<			
ANR	2555468	Identifier	index		2555449	0					
ANR	2555469	Identifier	len		2555449	1					
ANR	2555470	UnaryOperationExpression	! isdigit ( Str [ index ] )		2555449	1					
ANR	2555471	UnaryOperator	!		2555449	0					
ANR	2555472	CallExpression	isdigit ( Str [ index ] )		2555449	1					
ANR	2555473	Callee	isdigit		2555449	0					
ANR	2555474	Identifier	isdigit		2555449	0					
ANR	2555475	ArgumentList	Str [ index ]		2555449	1					
ANR	2555476	Argument	Str [ index ]		2555449	0					
ANR	2555477	ArrayIndexing	Str [ index ]		2555449	0					
ANR	2555478	Identifier	Str		2555449	0					
ANR	2555479	Identifier	index		2555449	1					
ANR	2555480	CompoundStatement		3:48:74:74	2555449	1					
ANR	2555481	ExpressionStatement	index ++	366:2:9012:9019	2555449	0	True				
ANR	2555482	PostIncDecOperationExpression	index ++		2555449	0					
ANR	2555483	Identifier	index		2555449	0					
ANR	2555484	IncDec	++		2555449	1					
ANR	2555485	ReturnType	static inline void		2555449	1					
ANR	2555486	Identifier	nextDigitChar		2555449	2					
ANR	2555487	ParameterList	"string Str , int & index"		2555449	3					
ANR	2555488	Parameter	string Str	362:33:8908:8917	2555449	0	True				
ANR	2555489	ParameterType	string		2555449	0					
ANR	2555490	Identifier	Str		2555449	1					
ANR	2555491	Parameter	int & index	362:45:8920:8929	2555449	1	True				
ANR	2555492	ParameterType	int &		2555449	0					
ANR	2555493	Identifier	index		2555449	1					
ANR	2555494	CFGEntryNode	ENTRY		2555449		True				
ANR	2555495	CFGExitNode	EXIT		2555449		True				
ANR	2555496	Symbol	Str		2555449						
ANR	2555497	Symbol	Str . length		2555449						
ANR	2555498	Symbol	len		2555449						
ANR	2555499	Symbol	* Str		2555449						
ANR	2555500	Symbol	* index		2555449						
ANR	2555501	Symbol	index		2555449						
ANR	2555502	Symbol	isdigit		2555449						
ANR	2555503	Function	prevNonSpaceChar	374:0:9185:9313							
ANR	2555504	FunctionDef	"prevNonSpaceChar (string Str , int & index)"		2555503	0					
ANR	2555505	CompoundStatement		375:0:9246:9313	2555503	0					
ANR	2555506	WhileStatement	while ( ( index >= 0 ) && ( isspace ( Str [ index ] ) ) )		2555503	0					
ANR	2555507	Condition	( index >= 0 ) && ( isspace ( Str [ index ] ) )	376:10:9258:9291	2555503	0	True				
ANR	2555508	AndExpression	( index >= 0 ) && ( isspace ( Str [ index ] ) )		2555503	0		&&			
ANR	2555509	RelationalExpression	index >= 0		2555503	0		>=			
ANR	2555510	Identifier	index		2555503	0					
ANR	2555511	PrimaryExpression	0		2555503	1					
ANR	2555512	CallExpression	isspace ( Str [ index ] )		2555503	1					
ANR	2555513	Callee	isspace		2555503	0					
ANR	2555514	Identifier	isspace		2555503	0					
ANR	2555515	ArgumentList	Str [ index ]		2555503	1					
ANR	2555516	Argument	Str [ index ]		2555503	0					
ANR	2555517	ArrayIndexing	Str [ index ]		2555503	0					
ANR	2555518	Identifier	Str		2555503	0					
ANR	2555519	Identifier	index		2555503	1					
ANR	2555520	CompoundStatement		2:46:47:47	2555503	1					
ANR	2555521	ExpressionStatement	index --	377:2:9298:9305	2555503	0	True				
ANR	2555522	PostIncDecOperationExpression	index --		2555503	0					
ANR	2555523	Identifier	index		2555503	0					
ANR	2555524	IncDec	--		2555503	1					
ANR	2555525	ReturnType	static inline void		2555503	1					
ANR	2555526	Identifier	prevNonSpaceChar		2555503	2					
ANR	2555527	ParameterList	"string Str , int & index"		2555503	3					
ANR	2555528	Parameter	string Str	374:36:9221:9230	2555503	0	True				
ANR	2555529	ParameterType	string		2555503	0					
ANR	2555530	Identifier	Str		2555503	1					
ANR	2555531	Parameter	int & index	374:48:9233:9242	2555503	1	True				
ANR	2555532	ParameterType	int &		2555503	0					
ANR	2555533	Identifier	index		2555503	1					
ANR	2555534	CFGEntryNode	ENTRY		2555503		True				
ANR	2555535	CFGExitNode	EXIT		2555503		True				
ANR	2555536	Symbol	Str		2555503						
ANR	2555537	Symbol	* Str		2555503						
ANR	2555538	Symbol	* index		2555503						
ANR	2555539	Symbol	isspace		2555503						
ANR	2555540	Symbol	index		2555503						
ANR	2555541	Function	revInt	386:0:9465:9686							
ANR	2555542	FunctionDef	revInt (string revNumStr)		2555541	0					
ANR	2555543	CompoundStatement		387:0:9502:9686	2555541	0					
ANR	2555544	IdentifierDeclStatement	"string numStr = """" ;"	388:1:9505:9523	2555541	0	True				
ANR	2555545	IdentifierDecl	"numStr = """""		2555541	0					
ANR	2555546	IdentifierDeclType	string		2555541	0					
ANR	2555547	Identifier	numStr		2555541	1					
ANR	2555548	AssignmentExpression	"numStr = """""		2555541	2		=			
ANR	2555549	Identifier	numStr		2555541	0					
ANR	2555550	PrimaryExpression	""""""		2555541	1					
ANR	2555551	IdentifierDeclStatement	int number ;	389:4:9529:9539	2555541	1	True				
ANR	2555552	IdentifierDecl	number		2555541	0					
ANR	2555553	IdentifierDeclType	int		2555541	0					
ANR	2555554	Identifier	number		2555541	1					
ANR	2555555	IdentifierDeclStatement	int len = revNumStr . length ( ) ;	391:1:9543:9571	2555541	2	True				
ANR	2555556	IdentifierDecl	len = revNumStr . length ( )		2555541	0					
ANR	2555557	IdentifierDeclType	int		2555541	0					
ANR	2555558	Identifier	len		2555541	1					
ANR	2555559	AssignmentExpression	len = revNumStr . length ( )		2555541	2		=			
ANR	2555560	Identifier	len		2555541	0					
ANR	2555561	CallExpression	revNumStr . length ( )		2555541	1					
ANR	2555562	Callee	revNumStr . length		2555541	0					
ANR	2555563	MemberAccess	revNumStr . length		2555541	0					
ANR	2555564	Identifier	revNumStr		2555541	0					
ANR	2555565	Identifier	length		2555541	1					
ANR	2555566	ArgumentList			2555541	1					
ANR	2555567	ForStatement	for ( int i = len - 1 ; i >= 0 ; i -- )		2555541	3					
ANR	2555568	ForInit	int i = len - 1 ;	392:5:9578:9589	2555541	0	True				
ANR	2555569	IdentifierDeclStatement	int i = len - 1 ;		2555541	0					
ANR	2555570	IdentifierDecl	i = len - 1		2555541	0					
ANR	2555571	IdentifierDeclType	int		2555541	0					
ANR	2555572	Identifier	i		2555541	1					
ANR	2555573	AssignmentExpression	i = len - 1		2555541	2		=			
ANR	2555574	Identifier	i		2555541	0					
ANR	2555575	AdditiveExpression	len - 1		2555541	1		-			
ANR	2555576	Identifier	len		2555541	0					
ANR	2555577	PrimaryExpression	1		2555541	1					
ANR	2555578	Condition	i >= 0	392:18:9591:9594	2555541	1	True				
ANR	2555579	RelationalExpression	i >= 0		2555541	0		>=			
ANR	2555580	Identifier	i		2555541	0					
ANR	2555581	PrimaryExpression	0		2555541	1					
ANR	2555582	PostIncDecOperationExpression	i --	392:25:9598:9600	2555541	2	True				
ANR	2555583	Identifier	i		2555541	0					
ANR	2555584	IncDec	--		2555541	1					
ANR	2555585	CompoundStatement		6:30:100:100	2555541	3					
ANR	2555586	ExpressionStatement	numStr += revNumStr [ i ]	393:2:9607:9629	2555541	0	True				
ANR	2555587	AssignmentExpression	numStr += revNumStr [ i ]		2555541	0		+=			
ANR	2555588	Identifier	numStr		2555541	0					
ANR	2555589	ArrayIndexing	revNumStr [ i ]		2555541	1					
ANR	2555590	Identifier	revNumStr		2555541	0					
ANR	2555591	Identifier	i		2555541	1					
ANR	2555592	ExpressionStatement	number = atoi ( numStr . c_str ( ) )	396:4:9639:9668	2555541	4	True				
ANR	2555593	AssignmentExpression	number = atoi ( numStr . c_str ( ) )		2555541	0		=			
ANR	2555594	Identifier	number		2555541	0					
ANR	2555595	CallExpression	atoi ( numStr . c_str ( ) )		2555541	1					
ANR	2555596	Callee	atoi		2555541	0					
ANR	2555597	Identifier	atoi		2555541	0					
ANR	2555598	ArgumentList	numStr . c_str ( )		2555541	1					
ANR	2555599	Argument	numStr . c_str ( )		2555541	0					
ANR	2555600	CallExpression	numStr . c_str ( )		2555541	0					
ANR	2555601	Callee	numStr . c_str		2555541	0					
ANR	2555602	MemberAccess	numStr . c_str		2555541	0					
ANR	2555603	Identifier	numStr		2555541	0					
ANR	2555604	Identifier	c_str		2555541	1					
ANR	2555605	ArgumentList			2555541	1					
ANR	2555606	ReturnStatement	return number ;	397:1:9671:9684	2555541	5	True				
ANR	2555607	Identifier	number		2555541	0					
ANR	2555608	ReturnType	static int		2555541	1					
ANR	2555609	Identifier	revInt		2555541	2					
ANR	2555610	ParameterList	string revNumStr		2555541	3					
ANR	2555611	Parameter	string revNumStr	386:18:9483:9498	2555541	0	True				
ANR	2555612	ParameterType	string		2555541	0					
ANR	2555613	Identifier	revNumStr		2555541	1					
ANR	2555614	CFGEntryNode	ENTRY		2555541		True				
ANR	2555615	CFGExitNode	EXIT		2555541		True				
ANR	2555616	Symbol	atoi		2555541						
ANR	2555617	Symbol	number		2555541						
ANR	2555618	Symbol	revNumStr		2555541						
ANR	2555619	Symbol	numStr		2555541						
ANR	2555620	Symbol	* i		2555541						
ANR	2555621	Symbol	len		2555541						
ANR	2555622	Symbol	numStr . c_str		2555541						
ANR	2555623	Symbol	* revNumStr		2555541						
ANR	2555624	Symbol	i		2555541						
ANR	2555625	Symbol	revNumStr . length		2555541						
ANR	2555626	Function	revDouble	403:0:9832:10123							
ANR	2555627	FunctionDef	revDouble (string revNumStr)		2555626	0					
ANR	2555628	CompoundStatement		404:0:9875:10123	2555626	0					
ANR	2555629	IdentifierDeclStatement	"string numStr = """" ;"	405:1:9878:9896	2555626	0	True				
ANR	2555630	IdentifierDecl	"numStr = """""		2555626	0					
ANR	2555631	IdentifierDeclType	string		2555626	0					
ANR	2555632	Identifier	numStr		2555626	1					
ANR	2555633	AssignmentExpression	"numStr = """""		2555626	2		=			
ANR	2555634	Identifier	numStr		2555626	0					
ANR	2555635	PrimaryExpression	""""""		2555626	1					
ANR	2555636	IdentifierDeclStatement	double number ;	406:4:9902:9915	2555626	1	True				
ANR	2555637	IdentifierDecl	number		2555626	0					
ANR	2555638	IdentifierDeclType	double		2555626	0					
ANR	2555639	Identifier	number		2555626	1					
ANR	2555640	IdentifierDeclStatement	const char * cNumStr ;	407:4:9921:9940	2555626	2	True				
ANR	2555641	IdentifierDecl	* cNumStr		2555626	0					
ANR	2555642	IdentifierDeclType	const char *		2555626	0					
ANR	2555643	Identifier	cNumStr		2555626	1					
ANR	2555644	IdentifierDeclStatement	int len = revNumStr . length ( ) ;	409:1:9944:9972	2555626	3	True				
ANR	2555645	IdentifierDecl	len = revNumStr . length ( )		2555626	0					
ANR	2555646	IdentifierDeclType	int		2555626	0					
ANR	2555647	Identifier	len		2555626	1					
ANR	2555648	AssignmentExpression	len = revNumStr . length ( )		2555626	2		=			
ANR	2555649	Identifier	len		2555626	0					
ANR	2555650	CallExpression	revNumStr . length ( )		2555626	1					
ANR	2555651	Callee	revNumStr . length		2555626	0					
ANR	2555652	MemberAccess	revNumStr . length		2555626	0					
ANR	2555653	Identifier	revNumStr		2555626	0					
ANR	2555654	Identifier	length		2555626	1					
ANR	2555655	ArgumentList			2555626	1					
ANR	2555656	ForStatement	for ( int i = len - 1 ; i >= 0 ; i -- )		2555626	4					
ANR	2555657	ForInit	int i = len - 1 ;	410:5:9979:9990	2555626	0	True				
ANR	2555658	IdentifierDeclStatement	int i = len - 1 ;		2555626	0					
ANR	2555659	IdentifierDecl	i = len - 1		2555626	0					
ANR	2555660	IdentifierDeclType	int		2555626	0					
ANR	2555661	Identifier	i		2555626	1					
ANR	2555662	AssignmentExpression	i = len - 1		2555626	2		=			
ANR	2555663	Identifier	i		2555626	0					
ANR	2555664	AdditiveExpression	len - 1		2555626	1		-			
ANR	2555665	Identifier	len		2555626	0					
ANR	2555666	PrimaryExpression	1		2555626	1					
ANR	2555667	Condition	i >= 0	410:18:9992:9995	2555626	1	True				
ANR	2555668	RelationalExpression	i >= 0		2555626	0		>=			
ANR	2555669	Identifier	i		2555626	0					
ANR	2555670	PrimaryExpression	0		2555626	1					
ANR	2555671	PostIncDecOperationExpression	i --	410:25:9999:10001	2555626	2	True				
ANR	2555672	Identifier	i		2555626	0					
ANR	2555673	IncDec	--		2555626	1					
ANR	2555674	CompoundStatement		7:30:128:128	2555626	3					
ANR	2555675	ExpressionStatement	numStr += revNumStr [ i ]	411:2:10008:10030	2555626	0	True				
ANR	2555676	AssignmentExpression	numStr += revNumStr [ i ]		2555626	0		+=			
ANR	2555677	Identifier	numStr		2555626	0					
ANR	2555678	ArrayIndexing	revNumStr [ i ]		2555626	1					
ANR	2555679	Identifier	revNumStr		2555626	0					
ANR	2555680	Identifier	i		2555626	1					
ANR	2555681	ExpressionStatement	cNumStr = numStr . c_str ( )	414:4:10040:10064	2555626	5	True				
ANR	2555682	AssignmentExpression	cNumStr = numStr . c_str ( )		2555626	0		=			
ANR	2555683	Identifier	cNumStr		2555626	0					
ANR	2555684	CallExpression	numStr . c_str ( )		2555626	1					
ANR	2555685	Callee	numStr . c_str		2555626	0					
ANR	2555686	MemberAccess	numStr . c_str		2555626	0					
ANR	2555687	Identifier	numStr		2555626	0					
ANR	2555688	Identifier	c_str		2555626	1					
ANR	2555689	ArgumentList			2555626	1					
ANR	2555690	ExpressionStatement	"number = strtod ( cNumStr , NULL )"	416:4:10075:10105	2555626	6	True				
ANR	2555691	AssignmentExpression	"number = strtod ( cNumStr , NULL )"		2555626	0		=			
ANR	2555692	Identifier	number		2555626	0					
ANR	2555693	CallExpression	"strtod ( cNumStr , NULL )"		2555626	1					
ANR	2555694	Callee	strtod		2555626	0					
ANR	2555695	Identifier	strtod		2555626	0					
ANR	2555696	ArgumentList	cNumStr		2555626	1					
ANR	2555697	Argument	cNumStr		2555626	0					
ANR	2555698	Identifier	cNumStr		2555626	0					
ANR	2555699	Argument	NULL		2555626	1					
ANR	2555700	Identifier	NULL		2555626	0					
ANR	2555701	ReturnStatement	return number ;	417:1:10108:10121	2555626	7	True				
ANR	2555702	Identifier	number		2555626	0					
ANR	2555703	ReturnType	static double		2555626	1					
ANR	2555704	Identifier	revDouble		2555626	2					
ANR	2555705	ParameterList	string revNumStr		2555626	3					
ANR	2555706	Parameter	string revNumStr	403:24:9856:9871	2555626	0	True				
ANR	2555707	ParameterType	string		2555626	0					
ANR	2555708	Identifier	revNumStr		2555626	1					
ANR	2555709	CFGEntryNode	ENTRY		2555626		True				
ANR	2555710	CFGExitNode	EXIT		2555626		True				
ANR	2555711	Symbol	number		2555626						
ANR	2555712	Symbol	revNumStr		2555626						
ANR	2555713	Symbol	numStr		2555626						
ANR	2555714	Symbol	* i		2555626						
ANR	2555715	Symbol	NULL		2555626						
ANR	2555716	Symbol	len		2555626						
ANR	2555717	Symbol	numStr . c_str		2555626						
ANR	2555718	Symbol	cNumStr		2555626						
ANR	2555719	Symbol	* revNumStr		2555626						
ANR	2555720	Symbol	i		2555626						
ANR	2555721	Symbol	revNumStr . length		2555626						
ANR	2555722	Symbol	strtod		2555626						
ANR	2555723	Function	Literal :: findOffset	423:0:10269:10360							
ANR	2555724	FunctionDef	Literal :: findOffset (time_t epochsecs)		2555723	0					
ANR	2555725	CompoundStatement		425:0:10313:10360	2555723	0					
ANR	2555726	ReturnStatement	"return timezone_offset ( epochsecs , false ) ;"	426:1:10316:10358	2555723	0	True				
ANR	2555727	CallExpression	"timezone_offset ( epochsecs , false )"		2555723	0					
ANR	2555728	Callee	timezone_offset		2555723	0					
ANR	2555729	Identifier	timezone_offset		2555723	0					
ANR	2555730	ArgumentList	epochsecs		2555723	1					
ANR	2555731	Argument	epochsecs		2555723	0					
ANR	2555732	Identifier	epochsecs		2555723	0					
ANR	2555733	Argument	false		2555723	1					
ANR	2555734	Identifier	false		2555723	0					
ANR	2555735	ReturnType	int		2555723	1					
ANR	2555736	Identifier	Literal :: findOffset		2555723	2					
ANR	2555737	ParameterList	time_t epochsecs		2555723	3					
ANR	2555738	Parameter	time_t epochsecs	424:11:10294:10309	2555723	0	True				
ANR	2555739	ParameterType	time_t		2555723	0					
ANR	2555740	Identifier	epochsecs		2555723	1					
ANR	2555741	CFGEntryNode	ENTRY		2555723		True				
ANR	2555742	CFGExitNode	EXIT		2555723		True				
ANR	2555743	Symbol	timezone_offset		2555723						
ANR	2555744	Symbol	false		2555723						
ANR	2555745	Symbol	epochsecs		2555723						
ANR	2555746	Function	Literal :: MakeLiteral	430:0:10365:10862							
ANR	2555747	FunctionDef	"Literal :: MakeLiteral (const Value & val , Value :: NumberFactor f)"		2555746	0					
ANR	2555748	CompoundStatement		432:0:10440:10862	2555746	0					
ANR	2555749	IfStatement	if ( val . GetType ( ) == Value :: CLASSAD_VALUE && val . GetType ( ) == Value :: LIST_VALUE )		2555746	0					
ANR	2555750	Condition	val . GetType ( ) == Value :: CLASSAD_VALUE && val . GetType ( ) == Value :: LIST_VALUE	433:4:10446:10516	2555746	0	True				
ANR	2555751	AndExpression	val . GetType ( ) == Value :: CLASSAD_VALUE && val . GetType ( ) == Value :: LIST_VALUE		2555746	0		&&			
ANR	2555752	EqualityExpression	val . GetType ( ) == Value :: CLASSAD_VALUE		2555746	0		==			
ANR	2555753	CallExpression	val . GetType ( )		2555746	0					
ANR	2555754	Callee	val . GetType		2555746	0					
ANR	2555755	MemberAccess	val . GetType		2555746	0					
ANR	2555756	Identifier	val		2555746	0					
ANR	2555757	Identifier	GetType		2555746	1					
ANR	2555758	ArgumentList			2555746	1					
ANR	2555759	Identifier	Value :: CLASSAD_VALUE		2555746	1					
ANR	2555760	EqualityExpression	val . GetType ( ) == Value :: LIST_VALUE		2555746	1		==			
ANR	2555761	CallExpression	val . GetType ( )		2555746	0					
ANR	2555762	Callee	val . GetType		2555746	0					
ANR	2555763	MemberAccess	val . GetType		2555746	0					
ANR	2555764	Identifier	val		2555746	0					
ANR	2555765	Identifier	GetType		2555746	1					
ANR	2555766	ArgumentList			2555746	1					
ANR	2555767	Identifier	Value :: LIST_VALUE		2555746	1					
ANR	2555768	CompoundStatement		2:76:77:77	2555746	1					
ANR	2555769	ExpressionStatement	CondorErrno = ERR_BAD_VALUE	434:2:10522:10549	2555746	0	True				
ANR	2555770	AssignmentExpression	CondorErrno = ERR_BAD_VALUE		2555746	0		=			
ANR	2555771	Identifier	CondorErrno		2555746	0					
ANR	2555772	Identifier	ERR_BAD_VALUE		2555746	1					
ANR	2555773	ExpressionStatement	"CondorErrMsg = ""list and classad values are not literals"""	435:2:10553:10610	2555746	1	True				
ANR	2555774	AssignmentExpression	"CondorErrMsg = ""list and classad values are not literals"""		2555746	0		=			
ANR	2555775	Identifier	CondorErrMsg		2555746	0					
ANR	2555776	PrimaryExpression	"""list and classad values are not literals"""		2555746	1					
ANR	2555777	ReturnStatement	return ( NULL ) ;	436:2:10614:10628	2555746	2	True				
ANR	2555778	Identifier	NULL		2555746	0					
ANR	2555779	IdentifierDeclStatement	Literal * lit = new Literal ( ) ;	439:1:10635:10663	2555746	1	True				
ANR	2555780	IdentifierDecl	* lit = new Literal ( )		2555746	0					
ANR	2555781	IdentifierDeclType	Literal *		2555746	0					
ANR	2555782	Identifier	lit		2555746	1					
ANR	2555783	AssignmentExpression	* lit = new Literal ( )		2555746	2		=			
ANR	2555784	Identifier	lit		2555746	0					
ANR	2555785	UnaryExpression	new Literal ( )		2555746	1					
ANR	2555786	IfStatement	if ( ! lit )		2555746	2					
ANR	2555787	Condition	! lit	440:5:10670:10673	2555746	0	True				
ANR	2555788	UnaryOperationExpression	! lit		2555746	0					
ANR	2555789	UnaryOperator	!		2555746	0					
ANR	2555790	Identifier	lit		2555746	1					
ANR	2555791	CompoundStatement		9:11:235:235	2555746	1					
ANR	2555792	ExpressionStatement	CondorErrno = ERR_MEM_ALLOC_FAILED	441:2:10680:10714	2555746	0	True				
ANR	2555793	AssignmentExpression	CondorErrno = ERR_MEM_ALLOC_FAILED		2555746	0		=			
ANR	2555794	Identifier	CondorErrno		2555746	0					
ANR	2555795	Identifier	ERR_MEM_ALLOC_FAILED		2555746	1					
ANR	2555796	ExpressionStatement	"CondorErrMsg = """""	442:2:10718:10735	2555746	1	True				
ANR	2555797	AssignmentExpression	"CondorErrMsg = """""		2555746	0		=			
ANR	2555798	Identifier	CondorErrMsg		2555746	0					
ANR	2555799	PrimaryExpression	""""""		2555746	1					
ANR	2555800	ReturnStatement	return NULL ;	443:2:10739:10750	2555746	2	True				
ANR	2555801	Identifier	NULL		2555746	0					
ANR	2555802	ExpressionStatement	lit -> value . CopyFrom ( val )	445:1:10756:10782	2555746	3	True				
ANR	2555803	CallExpression	lit -> value . CopyFrom ( val )		2555746	0					
ANR	2555804	Callee	lit -> value . CopyFrom		2555746	0					
ANR	2555805	MemberAccess	lit -> value . CopyFrom		2555746	0					
ANR	2555806	PtrMemberAccess	lit -> value		2555746	0					
ANR	2555807	Identifier	lit		2555746	0					
ANR	2555808	Identifier	value		2555746	1					
ANR	2555809	Identifier	CopyFrom		2555746	1					
ANR	2555810	ArgumentList	val		2555746	1					
ANR	2555811	Argument	val		2555746	0					
ANR	2555812	Identifier	val		2555746	0					
ANR	2555813	IfStatement	if ( ! val . IsNumber ( ) )		2555746	4					
ANR	2555814	Condition	! val . IsNumber ( )	446:5:10789:10804	2555746	0	True				
ANR	2555815	UnaryOperationExpression	! val . IsNumber ( )		2555746	0					
ANR	2555816	UnaryOperator	!		2555746	0					
ANR	2555817	CallExpression	val . IsNumber ( )		2555746	1					
ANR	2555818	Callee	val . IsNumber		2555746	0					
ANR	2555819	MemberAccess	val . IsNumber		2555746	0					
ANR	2555820	Identifier	val		2555746	0					
ANR	2555821	Identifier	IsNumber		2555746	1					
ANR	2555822	ArgumentList			2555746	1					
ANR	2555823	ExpressionStatement	f = Value :: NO_FACTOR	446:24:10808:10828	2555746	1	True				
ANR	2555824	AssignmentExpression	f = Value :: NO_FACTOR		2555746	0		=			
ANR	2555825	Identifier	f		2555746	0					
ANR	2555826	Identifier	Value :: NO_FACTOR		2555746	1					
ANR	2555827	ExpressionStatement	lit -> factor = f	447:1:10831:10846	2555746	5	True				
ANR	2555828	AssignmentExpression	lit -> factor = f		2555746	0		=			
ANR	2555829	PtrMemberAccess	lit -> factor		2555746	0					
ANR	2555830	Identifier	lit		2555746	0					
ANR	2555831	Identifier	factor		2555746	1					
ANR	2555832	Identifier	f		2555746	1					
ANR	2555833	ReturnStatement	return lit ;	449:1:10850:10860	2555746	6	True				
ANR	2555834	Identifier	lit		2555746	0					
ANR	2555835	ReturnType	Literal *		2555746	1					
ANR	2555836	Identifier	Literal :: MakeLiteral		2555746	2					
ANR	2555837	ParameterList	"const Value & val , Value :: NumberFactor f"		2555746	3					
ANR	2555838	Parameter	const Value & val	431:13:10397:10412	2555746	0	True				
ANR	2555839	ParameterType	const Value &		2555746	0					
ANR	2555840	Identifier	val		2555746	1					
ANR	2555841	Parameter	Value :: NumberFactor f	431:31:10415:10435	2555746	1	True				
ANR	2555842	ParameterType	Value :: NumberFactor		2555746	0					
ANR	2555843	Identifier	f		2555746	1					
ANR	2555844	CFGEntryNode	ENTRY		2555746		True				
ANR	2555845	CFGExitNode	EXIT		2555746		True				
ANR	2555846	Symbol	val		2555746						
ANR	2555847	Symbol	* lit		2555746						
ANR	2555848	Symbol	Value :: NO_FACTOR		2555746						
ANR	2555849	Symbol	NULL		2555746						
ANR	2555850	Symbol	f		2555746						
ANR	2555851	Symbol	ERR_MEM_ALLOC_FAILED		2555746						
ANR	2555852	Symbol	lit -> factor		2555746						
ANR	2555853	Symbol	Value :: CLASSAD_VALUE		2555746						
ANR	2555854	Symbol	val . IsNumber		2555746						
ANR	2555855	Symbol	CondorErrno		2555746						
ANR	2555856	Symbol	val . GetType		2555746						
ANR	2555857	Symbol	ERR_BAD_VALUE		2555746						
ANR	2555858	Symbol	CondorErrMsg		2555746						
ANR	2555859	Symbol	lit		2555746						
ANR	2555860	Symbol	lit -> value		2555746						
ANR	2555861	Symbol	Value :: LIST_VALUE		2555746						
ANR	2555862	Function	Literal :: GetValue	453:0:10866:11270							
ANR	2555863	FunctionDef	Literal :: GetValue (Value & val)		2555862	0					
ANR	2555864	CompoundStatement		455:0:10911:11270	2555862	0					
ANR	2555865	IdentifierDeclStatement	int i ;	456:1:10914:10920	2555862	0	True				
ANR	2555866	IdentifierDecl	i		2555862	0					
ANR	2555867	IdentifierDeclType	int		2555862	0					
ANR	2555868	Identifier	i		2555862	1					
ANR	2555869	IdentifierDeclStatement	double r ;	457:1:10923:10931	2555862	1	True				
ANR	2555870	IdentifierDecl	r		2555862	0					
ANR	2555871	IdentifierDeclType	double		2555862	0					
ANR	2555872	Identifier	r		2555862	1					
ANR	2555873	ExpressionStatement	val . CopyFrom ( value )	459:1:10935:10956	2555862	2	True				
ANR	2555874	CallExpression	val . CopyFrom ( value )		2555862	0					
ANR	2555875	Callee	val . CopyFrom		2555862	0					
ANR	2555876	MemberAccess	val . CopyFrom		2555862	0					
ANR	2555877	Identifier	val		2555862	0					
ANR	2555878	Identifier	CopyFrom		2555862	1					
ANR	2555879	ArgumentList	value		2555862	1					
ANR	2555880	Argument	value		2555862	0					
ANR	2555881	Identifier	value		2555862	0					
ANR	2555882	IfStatement	if ( val . IsIntegerValue ( i ) )		2555862	3					
ANR	2555883	Condition	val . IsIntegerValue ( i )	462:5:11011:11031	2555862	0	True				
ANR	2555884	CallExpression	val . IsIntegerValue ( i )		2555862	0					
ANR	2555885	Callee	val . IsIntegerValue		2555862	0					
ANR	2555886	MemberAccess	val . IsIntegerValue		2555862	0					
ANR	2555887	Identifier	val		2555862	0					
ANR	2555888	Identifier	IsIntegerValue		2555862	1					
ANR	2555889	ArgumentList	i		2555862	1					
ANR	2555890	Argument	i		2555862	0					
ANR	2555891	Identifier	i		2555862	0					
ANR	2555892	CompoundStatement		8:28:122:122	2555862	1					
ANR	2555893	IfStatement	if ( factor != Value :: NO_FACTOR )		2555862	0					
ANR	2555894	Condition	factor != Value :: NO_FACTOR	463:6:11042:11067	2555862	0	True				
ANR	2555895	EqualityExpression	factor != Value :: NO_FACTOR		2555862	0		!=			
ANR	2555896	Identifier	factor		2555862	0					
ANR	2555897	Identifier	Value :: NO_FACTOR		2555862	1					
ANR	2555898	CompoundStatement		9:35:159:159	2555862	1					
ANR	2555899	ExpressionStatement	val . SetRealValue ( ( ( double ) i ) * Value :: ScaleFactor [ factor ] )	464:3:11076:11134	2555862	0	True				
ANR	2555900	CallExpression	val . SetRealValue ( ( ( double ) i ) * Value :: ScaleFactor [ factor ] )		2555862	0					
ANR	2555901	Callee	val . SetRealValue		2555862	0					
ANR	2555902	MemberAccess	val . SetRealValue		2555862	0					
ANR	2555903	Identifier	val		2555862	0					
ANR	2555904	Identifier	SetRealValue		2555862	1					
ANR	2555905	ArgumentList	( ( double ) i ) * Value :: ScaleFactor [ factor ]		2555862	1					
ANR	2555906	Argument	( ( double ) i ) * Value :: ScaleFactor [ factor ]		2555862	0					
ANR	2555907	MultiplicativeExpression	( ( double ) i ) * Value :: ScaleFactor [ factor ]		2555862	0		*			
ANR	2555908	CastExpression	( double ) i		2555862	0					
ANR	2555909	CastTarget	double		2555862	0					
ANR	2555910	Identifier	i		2555862	1					
ANR	2555911	ArrayIndexing	Value :: ScaleFactor [ factor ]		2555862	1					
ANR	2555912	Identifier	Value :: ScaleFactor		2555862	0					
ANR	2555913	Identifier	factor		2555862	1					
ANR	2555914	ElseStatement	else		2555862	0					
ANR	2555915	IfStatement	if ( val . IsRealValue ( r ) )		2555862	0					
ANR	2555916	Condition	val . IsRealValue ( r )	466:12:11152:11169	2555862	0	True				
ANR	2555917	CallExpression	val . IsRealValue ( r )		2555862	0					
ANR	2555918	Callee	val . IsRealValue		2555862	0					
ANR	2555919	MemberAccess	val . IsRealValue		2555862	0					
ANR	2555920	Identifier	val		2555862	0					
ANR	2555921	Identifier	IsRealValue		2555862	1					
ANR	2555922	ArgumentList	r		2555862	1					
ANR	2555923	Argument	r		2555862	0					
ANR	2555924	Identifier	r		2555862	0					
ANR	2555925	CompoundStatement		12:32:260:260	2555862	1					
ANR	2555926	IfStatement	if ( factor != Value :: NO_FACTOR )		2555862	0					
ANR	2555927	Condition	factor != Value :: NO_FACTOR	467:6:11180:11205	2555862	0	True				
ANR	2555928	EqualityExpression	factor != Value :: NO_FACTOR		2555862	0		!=			
ANR	2555929	Identifier	factor		2555862	0					
ANR	2555930	Identifier	Value :: NO_FACTOR		2555862	1					
ANR	2555931	CompoundStatement		13:35:297:297	2555862	1					
ANR	2555932	ExpressionStatement	val . SetRealValue ( r * Value :: ScaleFactor [ factor ] )	468:3:11214:11261	2555862	0	True				
ANR	2555933	CallExpression	val . SetRealValue ( r * Value :: ScaleFactor [ factor ] )		2555862	0					
ANR	2555934	Callee	val . SetRealValue		2555862	0					
ANR	2555935	MemberAccess	val . SetRealValue		2555862	0					
ANR	2555936	Identifier	val		2555862	0					
ANR	2555937	Identifier	SetRealValue		2555862	1					
ANR	2555938	ArgumentList	r * Value :: ScaleFactor [ factor ]		2555862	1					
ANR	2555939	Argument	r * Value :: ScaleFactor [ factor ]		2555862	0					
ANR	2555940	MultiplicativeExpression	r * Value :: ScaleFactor [ factor ]		2555862	0		*			
ANR	2555941	Identifier	r		2555862	0					
ANR	2555942	ArrayIndexing	Value :: ScaleFactor [ factor ]		2555862	1					
ANR	2555943	Identifier	Value :: ScaleFactor		2555862	0					
ANR	2555944	Identifier	factor		2555862	1					
ANR	2555945	ReturnType	void		2555862	1					
ANR	2555946	Identifier	Literal :: GetValue		2555862	2					
ANR	2555947	ParameterList	Value & val		2555862	3					
ANR	2555948	Parameter	Value & val	454:10:10891:10900	2555862	0	True				
ANR	2555949	ParameterType	Value &		2555862	0					
ANR	2555950	Identifier	val		2555862	1					
ANR	2555951	CFGEntryNode	ENTRY		2555862		True				
ANR	2555952	CFGExitNode	EXIT		2555862		True				
ANR	2555953	Symbol	val		2555862						
ANR	2555954	Symbol	Value :: NO_FACTOR		2555862						
ANR	2555955	Symbol	* Value :: ScaleFactor		2555862						
ANR	2555956	Symbol	r		2555862						
ANR	2555957	Symbol	Value :: ScaleFactor		2555862						
ANR	2555958	Symbol	i		2555862						
ANR	2555959	Symbol	* factor		2555862						
ANR	2555960	Symbol	val . IsRealValue		2555862						
ANR	2555961	Symbol	factor		2555862						
ANR	2555962	Symbol	value		2555862						
ANR	2555963	Symbol	val . IsIntegerValue		2555862						
ANR	2555964	Function	Literal :: GetComponents	474:0:11274:11376							
ANR	2555965	FunctionDef	"Literal :: GetComponents (Value & val , Value :: NumberFactor & f)"		2555964	0					
ANR	2555966	CompoundStatement		476:0:11347:11376	2555964	0					
ANR	2555967	ExpressionStatement	val = value	477:1:11350:11361	2555964	0	True				
ANR	2555968	AssignmentExpression	val = value		2555964	0		=			
ANR	2555969	Identifier	val		2555964	0					
ANR	2555970	Identifier	value		2555964	1					
ANR	2555971	ExpressionStatement	f = factor	478:1:11364:11374	2555964	1	True				
ANR	2555972	AssignmentExpression	f = factor		2555964	0		=			
ANR	2555973	Identifier	f		2555964	0					
ANR	2555974	Identifier	factor		2555964	1					
ANR	2555975	ReturnType	void		2555964	1					
ANR	2555976	Identifier	Literal :: GetComponents		2555964	2					
ANR	2555977	ParameterList	"Value & val , Value :: NumberFactor & f"		2555964	3					
ANR	2555978	Parameter	Value & val	475:15:11304:11313	2555964	0	True				
ANR	2555979	ParameterType	Value &		2555964	0					
ANR	2555980	Identifier	val		2555964	1					
ANR	2555981	Parameter	Value :: NumberFactor & f	475:27:11316:11337	2555964	1	True				
ANR	2555982	ParameterType	Value :: NumberFactor &		2555964	0					
ANR	2555983	Identifier	f		2555964	1					
ANR	2555984	CFGEntryNode	ENTRY		2555964		True				
ANR	2555985	CFGExitNode	EXIT		2555964		True				
ANR	2555986	Symbol	val		2555964						
ANR	2555987	Symbol	f		2555964						
ANR	2555988	Symbol	factor		2555964						
ANR	2555989	Symbol	value		2555964						
ANR	2555990	Function	Literal :: SameAs	481:0:11379:11768							
ANR	2555991	FunctionDef	Literal :: SameAs (const ExprTree * tree)		2555990	0					
ANR	2555992	CompoundStatement		483:0:11429:11768	2555990	0					
ANR	2555993	IdentifierDeclStatement	bool is_same ;	484:4:11435:11450	2555990	0	True				
ANR	2555994	IdentifierDecl	is_same		2555990	0					
ANR	2555995	IdentifierDeclType	bool		2555990	0					
ANR	2555996	Identifier	is_same		2555990	1					
ANR	2555997	IfStatement	if ( tree -> GetKind ( ) != LITERAL_NODE )		2555990	1					
ANR	2555998	Condition	tree -> GetKind ( ) != LITERAL_NODE	486:8:11461:11491	2555990	0	True				
ANR	2555999	EqualityExpression	tree -> GetKind ( ) != LITERAL_NODE		2555990	0		!=			
ANR	2556000	CallExpression	tree -> GetKind ( )		2555990	0					
ANR	2556001	Callee	tree -> GetKind		2555990	0					
ANR	2556002	PtrMemberAccess	tree -> GetKind		2555990	0					
ANR	2556003	Identifier	tree		2555990	0					
ANR	2556004	Identifier	GetKind		2555990	1					
ANR	2556005	ArgumentList			2555990	1					
ANR	2556006	Identifier	LITERAL_NODE		2555990	1					
ANR	2556007	CompoundStatement		4:41:64:64	2555990	1					
ANR	2556008	ExpressionStatement	is_same = false	487:8:11504:11519	2555990	0	True				
ANR	2556009	AssignmentExpression	is_same = false		2555990	0		=			
ANR	2556010	Identifier	is_same		2555990	0					
ANR	2556011	Identifier	false		2555990	1					
ANR	2556012	ElseStatement	else		2555990	0					
ANR	2556013	CompoundStatement		7:8:112:140	2555990	0					
ANR	2556014	IdentifierDeclStatement	const Literal * other_literal ;	489:8:11542:11570	2555990	0	True				
ANR	2556015	IdentifierDecl	* other_literal		2555990	0					
ANR	2556016	IdentifierDeclType	const Literal *		2555990	0					
ANR	2556017	Identifier	other_literal		2555990	1					
ANR	2556018	ExpressionStatement	other_literal = ( const Literal * ) tree	491:8:11589:11627	2555990	1	True				
ANR	2556019	AssignmentExpression	other_literal = ( const Literal * ) tree		2555990	0		=			
ANR	2556020	Identifier	other_literal		2555990	0					
ANR	2556021	CastExpression	( const Literal * ) tree		2555990	1					
ANR	2556022	CastTarget	const Literal *		2555990	0					
ANR	2556023	Identifier	tree		2555990	1					
ANR	2556024	ExpressionStatement	is_same = ( factor == other_literal -> factor && value . SameAs ( other_literal -> value ) )	492:8:11637:11740	2555990	2	True				
ANR	2556025	AssignmentExpression	is_same = ( factor == other_literal -> factor && value . SameAs ( other_literal -> value ) )		2555990	0		=			
ANR	2556026	Identifier	is_same		2555990	0					
ANR	2556027	AndExpression	factor == other_literal -> factor && value . SameAs ( other_literal -> value )		2555990	1		&&			
ANR	2556028	EqualityExpression	factor == other_literal -> factor		2555990	0		==			
ANR	2556029	Identifier	factor		2555990	0					
ANR	2556030	PtrMemberAccess	other_literal -> factor		2555990	1					
ANR	2556031	Identifier	other_literal		2555990	0					
ANR	2556032	Identifier	factor		2555990	1					
ANR	2556033	CallExpression	value . SameAs ( other_literal -> value )		2555990	1					
ANR	2556034	Callee	value . SameAs		2555990	0					
ANR	2556035	MemberAccess	value . SameAs		2555990	0					
ANR	2556036	Identifier	value		2555990	0					
ANR	2556037	Identifier	SameAs		2555990	1					
ANR	2556038	ArgumentList	other_literal -> value		2555990	1					
ANR	2556039	Argument	other_literal -> value		2555990	0					
ANR	2556040	PtrMemberAccess	other_literal -> value		2555990	0					
ANR	2556041	Identifier	other_literal		2555990	0					
ANR	2556042	Identifier	value		2555990	1					
ANR	2556043	ReturnStatement	return is_same ;	495:4:11752:11766	2555990	2	True				
ANR	2556044	Identifier	is_same		2555990	0					
ANR	2556045	ReturnType	bool		2555990	1					
ANR	2556046	Identifier	Literal :: SameAs		2555990	2					
ANR	2556047	ParameterList	const ExprTree * tree		2555990	3					
ANR	2556048	Parameter	const ExprTree * tree	482:7:11401:11420	2555990	0	True				
ANR	2556049	ParameterType	const ExprTree *		2555990	0					
ANR	2556050	Identifier	tree		2555990	1					
ANR	2556051	CFGEntryNode	ENTRY		2555990		True				
ANR	2556052	CFGExitNode	EXIT		2555990		True				
ANR	2556053	Symbol	other_literal -> value		2555990						
ANR	2556054	Symbol	is_same		2555990						
ANR	2556055	Symbol	tree		2555990						
ANR	2556056	Symbol	false		2555990						
ANR	2556057	Symbol	* tree		2555990						
ANR	2556058	Symbol	value . SameAs		2555990						
ANR	2556059	Symbol	tree -> GetKind		2555990						
ANR	2556060	Symbol	LITERAL_NODE		2555990						
ANR	2556061	Symbol	* other_literal		2555990						
ANR	2556062	Symbol	other_literal		2555990						
ANR	2556063	Symbol	factor		2555990						
ANR	2556064	Symbol	value		2555990						
ANR	2556065	Symbol	other_literal -> factor		2555990						
ANR	2556066	Function	operator ==	498:0:11771:11867							
ANR	2556067	FunctionDef	"operator == (Literal & literal1 , Literal & literal2)"		2556066	0					
ANR	2556068	CompoundStatement		500:0:11826:11867	2556066	0					
ANR	2556069	ReturnStatement	return literal1 . SameAs ( & literal2 ) ;	501:4:11832:11865	2556066	0	True				
ANR	2556070	CallExpression	literal1 . SameAs ( & literal2 )		2556066	0					
ANR	2556071	Callee	literal1 . SameAs		2556066	0					
ANR	2556072	MemberAccess	literal1 . SameAs		2556066	0					
ANR	2556073	Identifier	literal1		2556066	0					
ANR	2556074	Identifier	SameAs		2556066	1					
ANR	2556075	ArgumentList	& literal2		2556066	1					
ANR	2556076	Argument	& literal2		2556066	0					
ANR	2556077	UnaryOperationExpression	& literal2		2556066	0					
ANR	2556078	UnaryOperator	&		2556066	0					
ANR	2556079	Identifier	literal2		2556066	1					
ANR	2556080	ReturnType	bool		2556066	1					
ANR	2556081	Identifier	operator ==		2556066	2					
ANR	2556082	ParameterList	"Literal & literal1 , Literal & literal2"		2556066	3					
ANR	2556083	Parameter	Literal & literal1	499:11:11788:11804	2556066	0	True				
ANR	2556084	ParameterType	Literal &		2556066	0					
ANR	2556085	Identifier	literal1		2556066	1					
ANR	2556086	Parameter	Literal & literal2	499:30:11807:11823	2556066	1	True				
ANR	2556087	ParameterType	Literal &		2556066	0					
ANR	2556088	Identifier	literal2		2556066	1					
ANR	2556089	CFGEntryNode	ENTRY		2556066		True				
ANR	2556090	CFGExitNode	EXIT		2556066		True				
ANR	2556091	Symbol	literal2		2556066						
ANR	2556092	Symbol	literal1		2556066						
ANR	2556093	Symbol	& literal2		2556066						
ANR	2556094	Symbol	literal1 . SameAs		2556066						
ANR	2556095	DeclStmt									
ANR	2556096	Decl							int	int	i
ANR	2556097	DeclStmt									
ANR	2556098	Decl							double	double	r
ANR	2556099	Function	Literal :: _Evaluate	528:0:12305:12443							
ANR	2556100	FunctionDef	"Literal :: _Evaluate (EvalState & state , Value & val , ExprTree * & tree)"		2556099	0					
ANR	2556101	CompoundStatement		530:0:12385:12443	2556099	0					
ANR	2556102	ExpressionStatement	"_Evaluate ( state , val )"	531:1:12388:12411	2556099	0	True				
ANR	2556103	CallExpression	"_Evaluate ( state , val )"		2556099	0					
ANR	2556104	Callee	_Evaluate		2556099	0					
ANR	2556105	Identifier	_Evaluate		2556099	0					
ANR	2556106	ArgumentList	state		2556099	1					
ANR	2556107	Argument	state		2556099	0					
ANR	2556108	Identifier	state		2556099	0					
ANR	2556109	Argument	val		2556099	1					
ANR	2556110	Identifier	val		2556099	0					
ANR	2556111	ReturnStatement	return ( ( tree = Copy ( ) ) ) ;	532:1:12414:12441	2556099	1	True				
ANR	2556112	AssignmentExpression	tree = Copy ( )		2556099	0		=			
ANR	2556113	Identifier	tree		2556099	0					
ANR	2556114	CallExpression	Copy ( )		2556099	1					
ANR	2556115	Callee	Copy		2556099	0					
ANR	2556116	Identifier	Copy		2556099	0					
ANR	2556117	ArgumentList			2556099	1					
ANR	2556118	ReturnType	bool		2556099	1					
ANR	2556119	Identifier	Literal :: _Evaluate		2556099	2					
ANR	2556120	ParameterList	"EvalState & state , Value & val , ExprTree * & tree"		2556099	3					
ANR	2556121	Parameter	EvalState & state	529:11:12331:12346	2556099	0	True				
ANR	2556122	ParameterType	EvalState &		2556099	0					
ANR	2556123	Identifier	state		2556099	1					
ANR	2556124	Parameter	Value & val	529:29:12349:12358	2556099	1	True				
ANR	2556125	ParameterType	Value &		2556099	0					
ANR	2556126	Identifier	val		2556099	1					
ANR	2556127	Parameter	ExprTree * & tree	529:41:12361:12375	2556099	2	True				
ANR	2556128	ParameterType	ExprTree * &		2556099	0					
ANR	2556129	Identifier	tree		2556099	1					
ANR	2556130	CFGEntryNode	ENTRY		2556099		True				
ANR	2556131	CFGExitNode	EXIT		2556099		True				
ANR	2556132	Symbol	val		2556099						
ANR	2556133	Symbol	Copy		2556099						
ANR	2556134	Symbol	tree		2556099						
ANR	2556135	Symbol	state		2556099						
ANR	2556136	Function	extractTimeZone	543:0:12586:13308							
ANR	2556137	FunctionDef	"extractTimeZone (string & timeStr , int & tzhr , int & tzmin)"		2556136	0					
ANR	2556138	CompoundStatement		544:0:12655:13308	2556136	0					
ANR	2556139	IdentifierDeclStatement	int len = timeStr . length ( ) ;	545:1:12658:12690	2556136	0	True				
ANR	2556140	IdentifierDecl	len = timeStr . length ( )		2556136	0					
ANR	2556141	IdentifierDeclType	int		2556136	0					
ANR	2556142	Identifier	len		2556136	1					
ANR	2556143	AssignmentExpression	len = timeStr . length ( )		2556136	2		=			
ANR	2556144	Identifier	len		2556136	0					
ANR	2556145	CallExpression	timeStr . length ( )		2556136	1					
ANR	2556146	Callee	timeStr . length		2556136	0					
ANR	2556147	MemberAccess	timeStr . length		2556136	0					
ANR	2556148	Identifier	timeStr		2556136	0					
ANR	2556149	Identifier	length		2556136	1					
ANR	2556150	ArgumentList			2556136	1					
ANR	2556151	IdentifierDeclStatement	int i = len - 1 ;	546:1:12693:12714	2556136	1	True				
ANR	2556152	IdentifierDecl	i = len - 1		2556136	0					
ANR	2556153	IdentifierDeclType	int		2556136	0					
ANR	2556154	Identifier	i		2556136	1					
ANR	2556155	AssignmentExpression	i = len - 1		2556136	2		=			
ANR	2556156	Identifier	i		2556136	0					
ANR	2556157	AdditiveExpression	len - 1		2556136	1		-			
ANR	2556158	Identifier	len		2556136	0					
ANR	2556159	PrimaryExpression	1		2556136	1					
ANR	2556160	IdentifierDeclStatement	bool offset = false ;	547:4:12721:12742	2556136	2	True				
ANR	2556161	IdentifierDecl	offset = false		2556136	0					
ANR	2556162	IdentifierDeclType	bool		2556136	0					
ANR	2556163	Identifier	offset		2556136	1					
ANR	2556164	AssignmentExpression	offset = false		2556136	2		=			
ANR	2556165	Identifier	false		2556136	0					
ANR	2556166	Identifier	false		2556136	1					
ANR	2556167	IdentifierDeclStatement	"string offStr = timeStr . substr ( i - 4 , 5 ) ;"	548:4:12748:12785	2556136	3	True				
ANR	2556168	IdentifierDecl	"offStr = timeStr . substr ( i - 4 , 5 )"		2556136	0					
ANR	2556169	IdentifierDeclType	string		2556136	0					
ANR	2556170	Identifier	offStr		2556136	1					
ANR	2556171	AssignmentExpression	"offStr = timeStr . substr ( i - 4 , 5 )"		2556136	2		=			
ANR	2556172	Identifier	offStr		2556136	0					
ANR	2556173	CallExpression	"timeStr . substr ( i - 4 , 5 )"		2556136	1					
ANR	2556174	Callee	timeStr . substr		2556136	0					
ANR	2556175	MemberAccess	timeStr . substr		2556136	0					
ANR	2556176	Identifier	timeStr		2556136	0					
ANR	2556177	Identifier	substr		2556136	1					
ANR	2556178	ArgumentList	i - 4		2556136	1					
ANR	2556179	Argument	i - 4		2556136	0					
ANR	2556180	AdditiveExpression	i - 4		2556136	0		-			
ANR	2556181	Identifier	i		2556136	0					
ANR	2556182	PrimaryExpression	4		2556136	1					
ANR	2556183	Argument	5		2556136	1					
ANR	2556184	PrimaryExpression	5		2556136	0					
ANR	2556185	IfStatement	if ( ( ( offStr [ 0 ] == '+' ) || ( offStr [ 0 ] == '-' ) ) && ( isdigit ( offStr [ 1 ] ) ) && ( isdigit ( offStr [ 2 ] ) ) && ( isdigit ( offStr [ 3 ] ) ) && ( isdigit ( offStr [ 4 ] ) ) )		2556136	4					
ANR	2556186	Condition	( ( offStr [ 0 ] == '+' ) || ( offStr [ 0 ] == '-' ) ) && ( isdigit ( offStr [ 1 ] ) ) && ( isdigit ( offStr [ 2 ] ) ) && ( isdigit ( offStr [ 3 ] ) ) && ( isdigit ( offStr [ 4 ] ) )	550:8:12796:12942	2556136	0	True				
ANR	2556187	AndExpression	( ( offStr [ 0 ] == '+' ) || ( offStr [ 0 ] == '-' ) ) && ( isdigit ( offStr [ 1 ] ) ) && ( isdigit ( offStr [ 2 ] ) ) && ( isdigit ( offStr [ 3 ] ) ) && ( isdigit ( offStr [ 4 ] ) )		2556136	0		&&			
ANR	2556188	OrExpression	( offStr [ 0 ] == '+' ) || ( offStr [ 0 ] == '-' )		2556136	0		||			
ANR	2556189	EqualityExpression	offStr [ 0 ] == '+'		2556136	0		==			
ANR	2556190	ArrayIndexing	offStr [ 0 ]		2556136	0					
ANR	2556191	Identifier	offStr		2556136	0					
ANR	2556192	PrimaryExpression	0		2556136	1					
ANR	2556193	PrimaryExpression	'+'		2556136	1					
ANR	2556194	EqualityExpression	offStr [ 0 ] == '-'		2556136	1		==			
ANR	2556195	ArrayIndexing	offStr [ 0 ]		2556136	0					
ANR	2556196	Identifier	offStr		2556136	0					
ANR	2556197	PrimaryExpression	0		2556136	1					
ANR	2556198	PrimaryExpression	'-'		2556136	1					
ANR	2556199	AndExpression	( isdigit ( offStr [ 1 ] ) ) && ( isdigit ( offStr [ 2 ] ) ) && ( isdigit ( offStr [ 3 ] ) ) && ( isdigit ( offStr [ 4 ] ) )		2556136	1		&&			
ANR	2556200	CallExpression	isdigit ( offStr [ 1 ] )		2556136	0					
ANR	2556201	Callee	isdigit		2556136	0					
ANR	2556202	Identifier	isdigit		2556136	0					
ANR	2556203	ArgumentList	offStr [ 1 ]		2556136	1					
ANR	2556204	Argument	offStr [ 1 ]		2556136	0					
ANR	2556205	ArrayIndexing	offStr [ 1 ]		2556136	0					
ANR	2556206	Identifier	offStr		2556136	0					
ANR	2556207	PrimaryExpression	1		2556136	1					
ANR	2556208	AndExpression	( isdigit ( offStr [ 2 ] ) ) && ( isdigit ( offStr [ 3 ] ) ) && ( isdigit ( offStr [ 4 ] ) )		2556136	1		&&			
ANR	2556209	CallExpression	isdigit ( offStr [ 2 ] )		2556136	0					
ANR	2556210	Callee	isdigit		2556136	0					
ANR	2556211	Identifier	isdigit		2556136	0					
ANR	2556212	ArgumentList	offStr [ 2 ]		2556136	1					
ANR	2556213	Argument	offStr [ 2 ]		2556136	0					
ANR	2556214	ArrayIndexing	offStr [ 2 ]		2556136	0					
ANR	2556215	Identifier	offStr		2556136	0					
ANR	2556216	PrimaryExpression	2		2556136	1					
ANR	2556217	AndExpression	( isdigit ( offStr [ 3 ] ) ) && ( isdigit ( offStr [ 4 ] ) )		2556136	1		&&			
ANR	2556218	CallExpression	isdigit ( offStr [ 3 ] )		2556136	0					
ANR	2556219	Callee	isdigit		2556136	0					
ANR	2556220	Identifier	isdigit		2556136	0					
ANR	2556221	ArgumentList	offStr [ 3 ]		2556136	1					
ANR	2556222	Argument	offStr [ 3 ]		2556136	0					
ANR	2556223	ArrayIndexing	offStr [ 3 ]		2556136	0					
ANR	2556224	Identifier	offStr		2556136	0					
ANR	2556225	PrimaryExpression	3		2556136	1					
ANR	2556226	CallExpression	isdigit ( offStr [ 4 ] )		2556136	1					
ANR	2556227	Callee	isdigit		2556136	0					
ANR	2556228	Identifier	isdigit		2556136	0					
ANR	2556229	ArgumentList	offStr [ 4 ]		2556136	1					
ANR	2556230	Argument	offStr [ 4 ]		2556136	0					
ANR	2556231	ArrayIndexing	offStr [ 4 ]		2556136	0					
ANR	2556232	Identifier	offStr		2556136	0					
ANR	2556233	PrimaryExpression	4		2556136	1					
ANR	2556234	CompoundStatement		8:102:289:289	2556136	1					
ANR	2556235	ExpressionStatement	offset = true	552:8:12955:12968	2556136	0	True				
ANR	2556236	AssignmentExpression	offset = true		2556136	0		=			
ANR	2556237	Identifier	offset		2556136	0					
ANR	2556238	Identifier	true		2556136	1					
ANR	2556239	ExpressionStatement	"timeStr . erase ( i - 4 , 5 )"	553:8:12978:12998	2556136	1	True				
ANR	2556240	CallExpression	"timeStr . erase ( i - 4 , 5 )"		2556136	0					
ANR	2556241	Callee	timeStr . erase		2556136	0					
ANR	2556242	MemberAccess	timeStr . erase		2556136	0					
ANR	2556243	Identifier	timeStr		2556136	0					
ANR	2556244	Identifier	erase		2556136	1					
ANR	2556245	ArgumentList	i - 4		2556136	1					
ANR	2556246	Argument	i - 4		2556136	0					
ANR	2556247	AdditiveExpression	i - 4		2556136	0		-			
ANR	2556248	Identifier	i		2556136	0					
ANR	2556249	PrimaryExpression	4		2556136	1					
ANR	2556250	Argument	5		2556136	1					
ANR	2556251	PrimaryExpression	5		2556136	0					
ANR	2556252	IfStatement	if ( offStr [ 0 ] == '+' )		2556136	2					
ANR	2556253	Condition	offStr [ 0 ] == '+'	554:12:13012:13027	2556136	0	True				
ANR	2556254	EqualityExpression	offStr [ 0 ] == '+'		2556136	0		==			
ANR	2556255	ArrayIndexing	offStr [ 0 ]		2556136	0					
ANR	2556256	Identifier	offStr		2556136	0					
ANR	2556257	PrimaryExpression	0		2556136	1					
ANR	2556258	PrimaryExpression	'+'		2556136	1					
ANR	2556259	CompoundStatement		11:30:374:374	2556136	1					
ANR	2556260	ExpressionStatement	"tzhr = atoi ( offStr . substr ( 1 , 2 ) . c_str ( ) )"	555:12:13044:13083	2556136	0	True				
ANR	2556261	AssignmentExpression	"tzhr = atoi ( offStr . substr ( 1 , 2 ) . c_str ( ) )"		2556136	0		=			
ANR	2556262	Identifier	tzhr		2556136	0					
ANR	2556263	CallExpression	"atoi ( offStr . substr ( 1 , 2 ) . c_str ( ) )"		2556136	1					
ANR	2556264	Callee	atoi		2556136	0					
ANR	2556265	Identifier	atoi		2556136	0					
ANR	2556266	ArgumentList	"offStr . substr ( 1 , 2 ) . c_str ( )"		2556136	1					
ANR	2556267	Argument	"offStr . substr ( 1 , 2 ) . c_str ( )"		2556136	0					
ANR	2556268	CallExpression	"offStr . substr ( 1 , 2 ) . c_str ( )"		2556136	0					
ANR	2556269	Callee	"offStr . substr ( 1 , 2 ) . c_str"		2556136	0					
ANR	2556270	MemberAccess	"offStr . substr ( 1 , 2 ) . c_str"		2556136	0					
ANR	2556271	CallExpression	"offStr . substr ( 1 , 2 )"		2556136	0					
ANR	2556272	Callee	offStr . substr		2556136	0					
ANR	2556273	MemberAccess	offStr . substr		2556136	0					
ANR	2556274	Identifier	offStr		2556136	0					
ANR	2556275	Identifier	substr		2556136	1					
ANR	2556276	ArgumentList	1		2556136	1					
ANR	2556277	Argument	1		2556136	0					
ANR	2556278	PrimaryExpression	1		2556136	0					
ANR	2556279	Argument	2		2556136	1					
ANR	2556280	PrimaryExpression	2		2556136	0					
ANR	2556281	Identifier	c_str		2556136	1					
ANR	2556282	ArgumentList			2556136	1					
ANR	2556283	ExpressionStatement	"tzmin = atoi ( offStr . substr ( 3 , 2 ) . c_str ( ) )"	556:12:13097:13137	2556136	1	True				
ANR	2556284	AssignmentExpression	"tzmin = atoi ( offStr . substr ( 3 , 2 ) . c_str ( ) )"		2556136	0		=			
ANR	2556285	Identifier	tzmin		2556136	0					
ANR	2556286	CallExpression	"atoi ( offStr . substr ( 3 , 2 ) . c_str ( ) )"		2556136	1					
ANR	2556287	Callee	atoi		2556136	0					
ANR	2556288	Identifier	atoi		2556136	0					
ANR	2556289	ArgumentList	"offStr . substr ( 3 , 2 ) . c_str ( )"		2556136	1					
ANR	2556290	Argument	"offStr . substr ( 3 , 2 ) . c_str ( )"		2556136	0					
ANR	2556291	CallExpression	"offStr . substr ( 3 , 2 ) . c_str ( )"		2556136	0					
ANR	2556292	Callee	"offStr . substr ( 3 , 2 ) . c_str"		2556136	0					
ANR	2556293	MemberAccess	"offStr . substr ( 3 , 2 ) . c_str"		2556136	0					
ANR	2556294	CallExpression	"offStr . substr ( 3 , 2 )"		2556136	0					
ANR	2556295	Callee	offStr . substr		2556136	0					
ANR	2556296	MemberAccess	offStr . substr		2556136	0					
ANR	2556297	Identifier	offStr		2556136	0					
ANR	2556298	Identifier	substr		2556136	1					
ANR	2556299	ArgumentList	3		2556136	1					
ANR	2556300	Argument	3		2556136	0					
ANR	2556301	PrimaryExpression	3		2556136	0					
ANR	2556302	Argument	2		2556136	1					
ANR	2556303	PrimaryExpression	2		2556136	0					
ANR	2556304	Identifier	c_str		2556136	1					
ANR	2556305	ArgumentList			2556136	1					
ANR	2556306	ElseStatement	else		2556136	0					
ANR	2556307	CompoundStatement		15:13:506:506	2556136	0					
ANR	2556308	ExpressionStatement	"tzhr = - atoi ( offStr . substr ( 1 , 2 ) . c_str ( ) )"	559:12:13176:13216	2556136	0	True				
ANR	2556309	AssignmentExpression	"tzhr = - atoi ( offStr . substr ( 1 , 2 ) . c_str ( ) )"		2556136	0		=			
ANR	2556310	Identifier	tzhr		2556136	0					
ANR	2556311	UnaryOperationExpression	"- atoi ( offStr . substr ( 1 , 2 ) . c_str ( ) )"		2556136	1					
ANR	2556312	UnaryOperator	-		2556136	0					
ANR	2556313	CallExpression	"atoi ( offStr . substr ( 1 , 2 ) . c_str ( ) )"		2556136	1					
ANR	2556314	Callee	atoi		2556136	0					
ANR	2556315	Identifier	atoi		2556136	0					
ANR	2556316	ArgumentList	"offStr . substr ( 1 , 2 ) . c_str ( )"		2556136	1					
ANR	2556317	Argument	"offStr . substr ( 1 , 2 ) . c_str ( )"		2556136	0					
ANR	2556318	CallExpression	"offStr . substr ( 1 , 2 ) . c_str ( )"		2556136	0					
ANR	2556319	Callee	"offStr . substr ( 1 , 2 ) . c_str"		2556136	0					
ANR	2556320	MemberAccess	"offStr . substr ( 1 , 2 ) . c_str"		2556136	0					
ANR	2556321	CallExpression	"offStr . substr ( 1 , 2 )"		2556136	0					
ANR	2556322	Callee	offStr . substr		2556136	0					
ANR	2556323	MemberAccess	offStr . substr		2556136	0					
ANR	2556324	Identifier	offStr		2556136	0					
ANR	2556325	Identifier	substr		2556136	1					
ANR	2556326	ArgumentList	1		2556136	1					
ANR	2556327	Argument	1		2556136	0					
ANR	2556328	PrimaryExpression	1		2556136	0					
ANR	2556329	Argument	2		2556136	1					
ANR	2556330	PrimaryExpression	2		2556136	0					
ANR	2556331	Identifier	c_str		2556136	1					
ANR	2556332	ArgumentList			2556136	1					
ANR	2556333	ExpressionStatement	"tzmin = - atoi ( offStr . substr ( 3 , 2 ) . c_str ( ) )"	560:12:13230:13271	2556136	1	True				
ANR	2556334	AssignmentExpression	"tzmin = - atoi ( offStr . substr ( 3 , 2 ) . c_str ( ) )"		2556136	0		=			
ANR	2556335	Identifier	tzmin		2556136	0					
ANR	2556336	UnaryOperationExpression	"- atoi ( offStr . substr ( 3 , 2 ) . c_str ( ) )"		2556136	1					
ANR	2556337	UnaryOperator	-		2556136	0					
ANR	2556338	CallExpression	"atoi ( offStr . substr ( 3 , 2 ) . c_str ( ) )"		2556136	1					
ANR	2556339	Callee	atoi		2556136	0					
ANR	2556340	Identifier	atoi		2556136	0					
ANR	2556341	ArgumentList	"offStr . substr ( 3 , 2 ) . c_str ( )"		2556136	1					
ANR	2556342	Argument	"offStr . substr ( 3 , 2 ) . c_str ( )"		2556136	0					
ANR	2556343	CallExpression	"offStr . substr ( 3 , 2 ) . c_str ( )"		2556136	0					
ANR	2556344	Callee	"offStr . substr ( 3 , 2 ) . c_str"		2556136	0					
ANR	2556345	MemberAccess	"offStr . substr ( 3 , 2 ) . c_str"		2556136	0					
ANR	2556346	CallExpression	"offStr . substr ( 3 , 2 )"		2556136	0					
ANR	2556347	Callee	offStr . substr		2556136	0					
ANR	2556348	MemberAccess	offStr . substr		2556136	0					
ANR	2556349	Identifier	offStr		2556136	0					
ANR	2556350	Identifier	substr		2556136	1					
ANR	2556351	ArgumentList	3		2556136	1					
ANR	2556352	Argument	3		2556136	0					
ANR	2556353	PrimaryExpression	3		2556136	0					
ANR	2556354	Argument	2		2556136	1					
ANR	2556355	PrimaryExpression	2		2556136	0					
ANR	2556356	Identifier	c_str		2556136	1					
ANR	2556357	ArgumentList			2556136	1					
ANR	2556358	ReturnStatement	return offset ;	563:4:13293:13306	2556136	5	True				
ANR	2556359	Identifier	offset		2556136	0					
ANR	2556360	ReturnType	static bool		2556136	1					
ANR	2556361	Identifier	extractTimeZone		2556136	2					
ANR	2556362	ParameterList	"string & timeStr , int & tzhr , int & tzmin"		2556136	3					
ANR	2556363	Parameter	string & timeStr	543:28:12614:12628	2556136	0	True				
ANR	2556364	ParameterType	string &		2556136	0					
ANR	2556365	Identifier	timeStr		2556136	1					
ANR	2556366	Parameter	int & tzhr	543:45:12631:12639	2556136	1	True				
ANR	2556367	ParameterType	int &		2556136	0					
ANR	2556368	Identifier	tzhr		2556136	1					
ANR	2556369	Parameter	int & tzmin	543:56:12642:12651	2556136	2	True				
ANR	2556370	ParameterType	int &		2556136	0					
ANR	2556371	Identifier	tzmin		2556136	1					
ANR	2556372	CFGEntryNode	ENTRY		2556136		True				
ANR	2556373	CFGExitNode	EXIT		2556136		True				
ANR	2556374	Symbol	atoi		2556136						
ANR	2556375	Symbol	offset		2556136						
ANR	2556376	Symbol	tzhr		2556136						
ANR	2556377	Symbol	false		2556136						
ANR	2556378	Symbol	i		2556136						
ANR	2556379	Symbol	timeStr		2556136						
ANR	2556380	Symbol	offStr . substr		2556136						
ANR	2556381	Symbol	timeStr . length		2556136						
ANR	2556382	Symbol	timeStr . substr		2556136						
ANR	2556383	Symbol	"offStr . substr ( 3 , 2 ) . c_str"		2556136						
ANR	2556384	Symbol	len		2556136						
ANR	2556385	Symbol	offStr		2556136						
ANR	2556386	Symbol	tzmin		2556136						
ANR	2556387	Symbol	* offStr		2556136						
ANR	2556388	Symbol	true		2556136						
ANR	2556389	Symbol	"offStr . substr ( 1 , 2 ) . c_str"		2556136						
ANR	2556390	Symbol	isdigit		2556136						
