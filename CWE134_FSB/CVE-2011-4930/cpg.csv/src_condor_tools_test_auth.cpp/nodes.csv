command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4249128	File	data/converged/CVE-2011-4930_htcondor/src_condor_tools_test_auth.cpp								
ANR	4249129	DeclStmt									
ANR	4249130	Decl							char	char *	MyName
ANR	4249131	Function	usage	48:0:1422:2087							
ANR	4249132	FunctionDef	usage ()		4249131	0					
ANR	4249133	CompoundStatement		50:0:1435:2087	4249131	0					
ANR	4249134	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [options]\\n"" , MyName )"	51:1:1438:1488	4249131	0	True				
ANR	4249135	CallExpression	"fprintf ( stderr , ""Usage: %s [options]\\n"" , MyName )"		4249131	0					
ANR	4249136	Callee	fprintf		4249131	0					
ANR	4249137	Identifier	fprintf		4249131	0					
ANR	4249138	ArgumentList	stderr		4249131	1					
ANR	4249139	Argument	stderr		4249131	0					
ANR	4249140	Identifier	stderr		4249131	0					
ANR	4249141	Argument	"""Usage: %s [options]\\n"""		4249131	1					
ANR	4249142	PrimaryExpression	"""Usage: %s [options]\\n"""		4249131	0					
ANR	4249143	Argument	MyName		4249131	2					
ANR	4249144	Identifier	MyName		4249131	0					
ANR	4249145	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	52:1:1491:1514	4249131	1	True				
ANR	4249146	CallExpression	"fprintf ( stderr , ""\\n"" )"		4249131	0					
ANR	4249147	Callee	fprintf		4249131	0					
ANR	4249148	Identifier	fprintf		4249131	0					
ANR	4249149	ArgumentList	stderr		4249131	1					
ANR	4249150	Argument	stderr		4249131	0					
ANR	4249151	Identifier	stderr		4249131	0					
ANR	4249152	Argument	"""\\n"""		4249131	1					
ANR	4249153	PrimaryExpression	"""\\n"""		4249131	0					
ANR	4249154	Statement	fprintf	53:1:1517:1523	4249131	2	True				
ANR	4249155	Statement	(	53:8:1524:1524	4249131	3	True				
ANR	4249156	Statement	stderr	53:10:1526:1531	4249131	4	True				
ANR	4249157	Statement	","	53:16:1532:1532	4249131	5	True				
ANR	4249158	Statement	"""Test authorization policy.  Each test is entered into\\n"""	53:18:1534:1590	4249131	6	True				
ANR	4249159	Statement	"""this program, one per line as follows:\\n"""	54:18:1610:1651	4249131	7	True				
ANR	4249160	Statement	)	54:60:1652:1652	4249131	8	True				
ANR	4249161	ExpressionStatement		54:61:1653:1653	4249131	9	True				
ANR	4249162	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	55:1:1656:1679	4249131	10	True				
ANR	4249163	CallExpression	"fprintf ( stderr , ""\\n"" )"		4249131	0					
ANR	4249164	Callee	fprintf		4249131	0					
ANR	4249165	Identifier	fprintf		4249131	0					
ANR	4249166	ArgumentList	stderr		4249131	1					
ANR	4249167	Argument	stderr		4249131	0					
ANR	4249168	Identifier	stderr		4249131	0					
ANR	4249169	Argument	"""\\n"""		4249131	1					
ANR	4249170	PrimaryExpression	"""\\n"""		4249131	0					
ANR	4249171	ExpressionStatement	"fprintf ( stderr , ""perm user ip [expected result]\\n"" )"	56:1:1682:1735	4249131	11	True				
ANR	4249172	CallExpression	"fprintf ( stderr , ""perm user ip [expected result]\\n"" )"		4249131	0					
ANR	4249173	Callee	fprintf		4249131	0					
ANR	4249174	Identifier	fprintf		4249131	0					
ANR	4249175	ArgumentList	stderr		4249131	1					
ANR	4249176	Argument	stderr		4249131	0					
ANR	4249177	Identifier	stderr		4249131	0					
ANR	4249178	Argument	"""perm user ip [expected result]\\n"""		4249131	1					
ANR	4249179	PrimaryExpression	"""perm user ip [expected result]\\n"""		4249131	0					
ANR	4249180	ExpressionStatement	"fprintf ( stderr , ""Example: WRITE badguy@some.domain 192.168.4.3 DENIED\\n"" )"	57:1:1738:1812	4249131	12	True				
ANR	4249181	CallExpression	"fprintf ( stderr , ""Example: WRITE badguy@some.domain 192.168.4.3 DENIED\\n"" )"		4249131	0					
ANR	4249182	Callee	fprintf		4249131	0					
ANR	4249183	Identifier	fprintf		4249131	0					
ANR	4249184	ArgumentList	stderr		4249131	1					
ANR	4249185	Argument	stderr		4249131	0					
ANR	4249186	Identifier	stderr		4249131	0					
ANR	4249187	Argument	"""Example: WRITE badguy@some.domain 192.168.4.3 DENIED\\n"""		4249131	1					
ANR	4249188	PrimaryExpression	"""Example: WRITE badguy@some.domain 192.168.4.3 DENIED\\n"""		4249131	0					
ANR	4249189	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	58:1:1815:1838	4249131	13	True				
ANR	4249190	CallExpression	"fprintf ( stderr , ""\\n"" )"		4249131	0					
ANR	4249191	Callee	fprintf		4249131	0					
ANR	4249192	Identifier	fprintf		4249131	0					
ANR	4249193	ArgumentList	stderr		4249131	1					
ANR	4249194	Argument	stderr		4249131	0					
ANR	4249195	Identifier	stderr		4249131	0					
ANR	4249196	Argument	"""\\n"""		4249131	1					
ANR	4249197	PrimaryExpression	"""\\n"""		4249131	0					
ANR	4249198	ExpressionStatement	"fprintf ( stderr , ""Use '*' for the user to represent an unauthenticated user.\\n"" )"	59:1:1841:1921	4249131	14	True				
ANR	4249199	CallExpression	"fprintf ( stderr , ""Use '*' for the user to represent an unauthenticated user.\\n"" )"		4249131	0					
ANR	4249200	Callee	fprintf		4249131	0					
ANR	4249201	Identifier	fprintf		4249131	0					
ANR	4249202	ArgumentList	stderr		4249131	1					
ANR	4249203	Argument	stderr		4249131	0					
ANR	4249204	Identifier	stderr		4249131	0					
ANR	4249205	Argument	"""Use '*' for the user to represent an unauthenticated user.\\n"""		4249131	1					
ANR	4249206	PrimaryExpression	"""Use '*' for the user to represent an unauthenticated user.\\n"""		4249131	0					
ANR	4249207	ExpressionStatement	"fprintf ( stderr , ""\\n   Valid options are:\\n"" )"	60:1:1924:1970	4249131	15	True				
ANR	4249208	CallExpression	"fprintf ( stderr , ""\\n   Valid options are:\\n"" )"		4249131	0					
ANR	4249209	Callee	fprintf		4249131	0					
ANR	4249210	Identifier	fprintf		4249131	0					
ANR	4249211	ArgumentList	stderr		4249131	1					
ANR	4249212	Argument	stderr		4249131	0					
ANR	4249213	Identifier	stderr		4249131	0					
ANR	4249214	Argument	"""\\n   Valid options are:\\n"""		4249131	1					
ANR	4249215	PrimaryExpression	"""\\n   Valid options are:\\n"""		4249131	0					
ANR	4249216	ExpressionStatement	"fprintf ( stderr , ""   -daemontype name\\t(schedd, startd, ...)\\n"" )"	61:1:1973:2038	4249131	16	True				
ANR	4249217	CallExpression	"fprintf ( stderr , ""   -daemontype name\\t(schedd, startd, ...)\\n"" )"		4249131	0					
ANR	4249218	Callee	fprintf		4249131	0					
ANR	4249219	Identifier	fprintf		4249131	0					
ANR	4249220	ArgumentList	stderr		4249131	1					
ANR	4249221	Argument	stderr		4249131	0					
ANR	4249222	Identifier	stderr		4249131	0					
ANR	4249223	Argument	"""   -daemontype name\\t(schedd, startd, ...)\\n"""		4249131	1					
ANR	4249224	PrimaryExpression	"""   -daemontype name\\t(schedd, startd, ...)\\n"""		4249131	0					
ANR	4249225	ExpressionStatement	"fprintf ( stderr , ""   -debug\\n"" )"	62:1:2041:2073	4249131	17	True				
ANR	4249226	CallExpression	"fprintf ( stderr , ""   -debug\\n"" )"		4249131	0					
ANR	4249227	Callee	fprintf		4249131	0					
ANR	4249228	Identifier	fprintf		4249131	0					
ANR	4249229	ArgumentList	stderr		4249131	1					
ANR	4249230	Argument	stderr		4249131	0					
ANR	4249231	Identifier	stderr		4249131	0					
ANR	4249232	Argument	"""   -debug\\n"""		4249131	1					
ANR	4249233	PrimaryExpression	"""   -debug\\n"""		4249131	0					
ANR	4249234	ExpressionStatement	exit ( 2 )	63:1:2076:2085	4249131	18	True				
ANR	4249235	CallExpression	exit ( 2 )		4249131	0					
ANR	4249236	Callee	exit		4249131	0					
ANR	4249237	Identifier	exit		4249131	0					
ANR	4249238	ArgumentList	2		4249131	1					
ANR	4249239	Argument	2		4249131	0					
ANR	4249240	PrimaryExpression	2		4249131	0					
ANR	4249241	ReturnType	void		4249131	1					
ANR	4249242	Identifier	usage		4249131	2					
ANR	4249243	ParameterList			4249131	3					
ANR	4249244	CFGEntryNode	ENTRY		4249131		True				
ANR	4249245	CFGExitNode	EXIT		4249131		True				
ANR	4249246	Symbol	MyName		4249131						
ANR	4249247	Symbol	stderr		4249131						
ANR	4249248	Function	StringToDCpermission	66:0:2090:2319							
ANR	4249249	FunctionDef	StringToDCpermission (char const * str)		4249248	0					
ANR	4249250	CompoundStatement		67:38:2141:2319	4249248	0					
ANR	4249251	IdentifierDeclStatement	DCpermission perm ;	68:1:2144:2161	4249248	0	True				
ANR	4249252	IdentifierDecl	perm		4249248	0					
ANR	4249253	IdentifierDeclType	DCpermission		4249248	0					
ANR	4249254	Identifier	perm		4249248	1					
ANR	4249255	ForStatement	for ( perm = FIRST_PERM ; perm != LAST_PERM ; perm = NEXT_PERM ( perm ) )		4249248	1					
ANR	4249256	ForInit	perm = FIRST_PERM ;	70:5:2169:2186	4249248	0	True				
ANR	4249257	AssignmentExpression	perm = FIRST_PERM		4249248	0		=			
ANR	4249258	Identifier	perm		4249248	0					
ANR	4249259	Identifier	FIRST_PERM		4249248	1					
ANR	4249260	Condition	perm != LAST_PERM	70:23:2187:2201	4249248	1	True				
ANR	4249261	EqualityExpression	perm != LAST_PERM		4249248	0		!=			
ANR	4249262	Identifier	perm		4249248	0					
ANR	4249263	Identifier	LAST_PERM		4249248	1					
ANR	4249264	AssignmentExpression	perm = NEXT_PERM ( perm )	70:39:2203:2222	4249248	2	True	=			
ANR	4249265	Identifier	perm		4249248	0					
ANR	4249266	CallExpression	NEXT_PERM ( perm )		4249248	1					
ANR	4249267	Callee	NEXT_PERM		4249248	0					
ANR	4249268	Identifier	NEXT_PERM		4249248	0					
ANR	4249269	ArgumentList	perm		4249248	1					
ANR	4249270	Argument	perm		4249248	0					
ANR	4249271	Identifier	perm		4249248	0					
ANR	4249272	CompoundStatement		4:61:83:83	4249248	3					
ANR	4249273	IfStatement	"if ( str && ! strcasecmp ( str , PermString ( perm ) ) )"		4249248	0					
ANR	4249274	Condition	"str && ! strcasecmp ( str , PermString ( perm ) )"	71:5:2232:2271	4249248	0	True				
ANR	4249275	AndExpression	"str && ! strcasecmp ( str , PermString ( perm ) )"		4249248	0		&&			
ANR	4249276	Identifier	str		4249248	0					
ANR	4249277	UnaryOperationExpression	"! strcasecmp ( str , PermString ( perm ) )"		4249248	1					
ANR	4249278	UnaryOperator	!		4249248	0					
ANR	4249279	CallExpression	"strcasecmp ( str , PermString ( perm ) )"		4249248	1					
ANR	4249280	Callee	strcasecmp		4249248	0					
ANR	4249281	Identifier	strcasecmp		4249248	0					
ANR	4249282	ArgumentList	str		4249248	1					
ANR	4249283	Argument	str		4249248	0					
ANR	4249284	Identifier	str		4249248	0					
ANR	4249285	Argument	PermString ( perm )		4249248	1					
ANR	4249286	CallExpression	PermString ( perm )		4249248	0					
ANR	4249287	Callee	PermString		4249248	0					
ANR	4249288	Identifier	PermString		4249248	0					
ANR	4249289	ArgumentList	perm		4249248	1					
ANR	4249290	Argument	perm		4249248	0					
ANR	4249291	Identifier	perm		4249248	0					
ANR	4249292	CompoundStatement		5:48:133:133	4249248	1					
ANR	4249293	ReturnStatement	return perm ;	72:3:2280:2291	4249248	0	True				
ANR	4249294	Identifier	perm		4249248	0					
ANR	4249295	ReturnStatement	return LAST_PERM ;	75:1:2301:2317	4249248	2	True				
ANR	4249296	Identifier	LAST_PERM		4249248	0					
ANR	4249297	ReturnType	DCpermission		4249248	1					
ANR	4249298	Identifier	StringToDCpermission		4249248	2					
ANR	4249299	ParameterList	char const * str		4249248	3					
ANR	4249300	Parameter	char const * str	67:21:2124:2138	4249248	0	True				
ANR	4249301	ParameterType	char const *		4249248	0					
ANR	4249302	Identifier	str		4249248	1					
ANR	4249303	CFGEntryNode	ENTRY		4249248		True				
ANR	4249304	CFGExitNode	EXIT		4249248		True				
ANR	4249305	Symbol	str		4249248						
ANR	4249306	Symbol	LAST_PERM		4249248						
ANR	4249307	Symbol	perm		4249248						
ANR	4249308	Symbol	FIRST_PERM		4249248						
ANR	4249309	Symbol	NEXT_PERM		4249248						
ANR	4249310	Symbol	PermString		4249248						
ANR	4249311	Symbol	strcasecmp		4249248						
ANR	4249312	Function	main	78:0:2322:4523							
ANR	4249313	FunctionDef	"main (int argc , char * argv [ ])"		4249312	0					
ANR	4249314	CompoundStatement		80:0:2357:4523	4249312	0					
ANR	4249315	IdentifierDeclStatement	int i ;	81:1:2360:2366	4249312	0	True				
ANR	4249316	IdentifierDecl	i		4249312	0					
ANR	4249317	IdentifierDeclType	int		4249312	0					
ANR	4249318	Identifier	i		4249312	1					
ANR	4249319	IdentifierDeclStatement	param_functions * p_funcs = NULL ;	82:1:2369:2400	4249312	1	True				
ANR	4249320	IdentifierDecl	* p_funcs = NULL		4249312	0					
ANR	4249321	IdentifierDeclType	param_functions *		4249312	0					
ANR	4249322	Identifier	p_funcs		4249312	1					
ANR	4249323	AssignmentExpression	* p_funcs = NULL		4249312	2		=			
ANR	4249324	Identifier	NULL		4249312	0					
ANR	4249325	Identifier	NULL		4249312	1					
ANR	4249326	ExpressionStatement	"set_mySubSystem ( ""DAEMON-TOOL"" , SUBSYSTEM_TYPE_TOOL )"	84:1:2405:2458	4249312	2	True				
ANR	4249327	CallExpression	"set_mySubSystem ( ""DAEMON-TOOL"" , SUBSYSTEM_TYPE_TOOL )"		4249312	0					
ANR	4249328	Callee	set_mySubSystem		4249312	0					
ANR	4249329	Identifier	set_mySubSystem		4249312	0					
ANR	4249330	ArgumentList	"""DAEMON-TOOL"""		4249312	1					
ANR	4249331	Argument	"""DAEMON-TOOL"""		4249312	0					
ANR	4249332	PrimaryExpression	"""DAEMON-TOOL"""		4249312	0					
ANR	4249333	Argument	SUBSYSTEM_TYPE_TOOL		4249312	1					
ANR	4249334	Identifier	SUBSYSTEM_TYPE_TOOL		4249312	0					
ANR	4249335	ExpressionStatement	MyName = argv [ 0 ]	86:1:2462:2478	4249312	3	True				
ANR	4249336	AssignmentExpression	MyName = argv [ 0 ]		4249312	0		=			
ANR	4249337	Identifier	MyName		4249312	0					
ANR	4249338	ArrayIndexing	argv [ 0 ]		4249312	1					
ANR	4249339	Identifier	argv		4249312	0					
ANR	4249340	PrimaryExpression	0		4249312	1					
ANR	4249341	ExpressionStatement	"myDistro -> Init ( argc , argv )"	87:1:2481:2509	4249312	4	True				
ANR	4249342	CallExpression	"myDistro -> Init ( argc , argv )"		4249312	0					
ANR	4249343	Callee	myDistro -> Init		4249312	0					
ANR	4249344	PtrMemberAccess	myDistro -> Init		4249312	0					
ANR	4249345	Identifier	myDistro		4249312	0					
ANR	4249346	Identifier	Init		4249312	1					
ANR	4249347	ArgumentList	argc		4249312	1					
ANR	4249348	Argument	argc		4249312	0					
ANR	4249349	Identifier	argc		4249312	0					
ANR	4249350	Argument	argv		4249312	1					
ANR	4249351	Identifier	argv		4249312	0					
ANR	4249352	IdentifierDeclStatement	FILE * input_fp = stdin ;	89:1:2513:2535	4249312	5	True				
ANR	4249353	IdentifierDecl	* input_fp = stdin		4249312	0					
ANR	4249354	IdentifierDeclType	FILE *		4249312	0					
ANR	4249355	Identifier	input_fp		4249312	1					
ANR	4249356	AssignmentExpression	* input_fp = stdin		4249312	2		=			
ANR	4249357	Identifier	stdin		4249312	0					
ANR	4249358	Identifier	stdin		4249312	1					
ANR	4249359	ForStatement	for ( i = 1 ; i < argc ; i ++ )		4249312	6					
ANR	4249360	ForInit	i = 1 ;	91:6:2544:2547	4249312	0	True				
ANR	4249361	AssignmentExpression	i = 1		4249312	0		=			
ANR	4249362	Identifier	i		4249312	0					
ANR	4249363	PrimaryExpression	1		4249312	1					
ANR	4249364	Condition	i < argc	91:11:2549:2554	4249312	1	True				
ANR	4249365	RelationalExpression	i < argc		4249312	0		<			
ANR	4249366	Identifier	i		4249312	0					
ANR	4249367	Identifier	argc		4249312	1					
ANR	4249368	PostIncDecOperationExpression	i ++	91:19:2557:2559	4249312	2	True				
ANR	4249369	Identifier	i		4249312	0					
ANR	4249370	IncDec	++		4249312	1					
ANR	4249371	CompoundStatement		12:25:205:205	4249312	3					
ANR	4249372	IfStatement	"if ( match_prefix ( argv [ i ] , ""-daemontype"" ) )"		4249312	0					
ANR	4249373	Condition	"match_prefix ( argv [ i ] , ""-daemontype"" )"	92:6:2571:2608	4249312	0	True				
ANR	4249374	CallExpression	"match_prefix ( argv [ i ] , ""-daemontype"" )"		4249312	0					
ANR	4249375	Callee	match_prefix		4249312	0					
ANR	4249376	Identifier	match_prefix		4249312	0					
ANR	4249377	ArgumentList	argv [ i ]		4249312	1					
ANR	4249378	Argument	argv [ i ]		4249312	0					
ANR	4249379	ArrayIndexing	argv [ i ]		4249312	0					
ANR	4249380	Identifier	argv		4249312	0					
ANR	4249381	Identifier	i		4249312	1					
ANR	4249382	Argument	"""-daemontype"""		4249312	1					
ANR	4249383	PrimaryExpression	"""-daemontype"""		4249312	0					
ANR	4249384	CompoundStatement		13:47:254:254	4249312	1					
ANR	4249385	IfStatement	if ( argv [ i + 1 ] )		4249312	0					
ANR	4249386	Condition	argv [ i + 1 ]	93:7:2621:2631	4249312	0	True				
ANR	4249387	ArrayIndexing	argv [ i + 1 ]		4249312	0					
ANR	4249388	Identifier	argv		4249312	0					
ANR	4249389	AdditiveExpression	i + 1		4249312	1		+			
ANR	4249390	Identifier	i		4249312	0					
ANR	4249391	PrimaryExpression	1		4249312	1					
ANR	4249392	CompoundStatement		14:21:277:277	4249312	1					
ANR	4249393	ExpressionStatement	get_mySubSystem ( ) -> setName ( argv [ ++ i ] )	94:4:2641:2680	4249312	0	True				
ANR	4249394	CallExpression	get_mySubSystem ( ) -> setName ( argv [ ++ i ] )		4249312	0					
ANR	4249395	Callee	get_mySubSystem ( ) -> setName		4249312	0					
ANR	4249396	PtrMemberAccess	get_mySubSystem ( ) -> setName		4249312	0					
ANR	4249397	CallExpression	get_mySubSystem ( )		4249312	0					
ANR	4249398	Callee	get_mySubSystem		4249312	0					
ANR	4249399	Identifier	get_mySubSystem		4249312	0					
ANR	4249400	ArgumentList			4249312	1					
ANR	4249401	Identifier	setName		4249312	1					
ANR	4249402	ArgumentList	argv [ ++ i ]		4249312	1					
ANR	4249403	Argument	argv [ ++ i ]		4249312	0					
ANR	4249404	ArrayIndexing	argv [ ++ i ]		4249312	0					
ANR	4249405	Identifier	argv		4249312	0					
ANR	4249406	UnaryExpression	++ i		4249312	1					
ANR	4249407	IncDec	++		4249312	0					
ANR	4249408	Identifier	i		4249312	1					
ANR	4249409	ExpressionStatement	get_mySubSystem ( ) -> setTypeFromName ( )	95:4:2686:2723	4249312	1	True				
ANR	4249410	CallExpression	get_mySubSystem ( ) -> setTypeFromName ( )		4249312	0					
ANR	4249411	Callee	get_mySubSystem ( ) -> setTypeFromName		4249312	0					
ANR	4249412	PtrMemberAccess	get_mySubSystem ( ) -> setTypeFromName		4249312	0					
ANR	4249413	CallExpression	get_mySubSystem ( )		4249312	0					
ANR	4249414	Callee	get_mySubSystem		4249312	0					
ANR	4249415	Identifier	get_mySubSystem		4249312	0					
ANR	4249416	ArgumentList			4249312	1					
ANR	4249417	Identifier	setTypeFromName		4249312	1					
ANR	4249418	ArgumentList			4249312	1					
ANR	4249419	ElseStatement	else		4249312	0					
ANR	4249420	CompoundStatement		17:10:377:377	4249312	0					
ANR	4249421	ExpressionStatement	usage ( )	97:4:2741:2748	4249312	0	True				
ANR	4249422	CallExpression	usage ( )		4249312	0					
ANR	4249423	Callee	usage		4249312	0					
ANR	4249424	Identifier	usage		4249312	0					
ANR	4249425	ArgumentList			4249312	1					
ANR	4249426	ElseStatement	else		4249312	0					
ANR	4249427	IfStatement	"if ( match_prefix ( argv [ i ] , ""-debug"" ) )"		4249312	0					
ANR	4249428	Condition	"match_prefix ( argv [ i ] , ""-debug"" )"	99:13:2768:2800	4249312	0	True				
ANR	4249429	CallExpression	"match_prefix ( argv [ i ] , ""-debug"" )"		4249312	0					
ANR	4249430	Callee	match_prefix		4249312	0					
ANR	4249431	Identifier	match_prefix		4249312	0					
ANR	4249432	ArgumentList	argv [ i ]		4249312	1					
ANR	4249433	Argument	argv [ i ]		4249312	0					
ANR	4249434	ArrayIndexing	argv [ i ]		4249312	0					
ANR	4249435	Identifier	argv		4249312	0					
ANR	4249436	Identifier	i		4249312	1					
ANR	4249437	Argument	"""-debug"""		4249312	1					
ANR	4249438	PrimaryExpression	"""-debug"""		4249312	0					
ANR	4249439	CompoundStatement		20:49:446:446	4249312	1					
ANR	4249440	ExpressionStatement	Termlog = 1	101:3:2835:2846	4249312	0	True				
ANR	4249441	AssignmentExpression	Termlog = 1		4249312	0		=			
ANR	4249442	Identifier	Termlog		4249312	0					
ANR	4249443	PrimaryExpression	1		4249312	1					
ANR	4249444	ExpressionStatement	p_funcs = get_param_functions ( )	102:3:2851:2882	4249312	1	True				
ANR	4249445	AssignmentExpression	p_funcs = get_param_functions ( )		4249312	0		=			
ANR	4249446	Identifier	p_funcs		4249312	0					
ANR	4249447	CallExpression	get_param_functions ( )		4249312	1					
ANR	4249448	Callee	get_param_functions		4249312	0					
ANR	4249449	Identifier	get_param_functions		4249312	0					
ANR	4249450	ArgumentList			4249312	1					
ANR	4249451	ExpressionStatement	"dprintf_config ( ""DAEMON-TOOL"" , p_funcs )"	103:3:2887:2927	4249312	2	True				
ANR	4249452	CallExpression	"dprintf_config ( ""DAEMON-TOOL"" , p_funcs )"		4249312	0					
ANR	4249453	Callee	dprintf_config		4249312	0					
ANR	4249454	Identifier	dprintf_config		4249312	0					
ANR	4249455	ArgumentList	"""DAEMON-TOOL"""		4249312	1					
ANR	4249456	Argument	"""DAEMON-TOOL"""		4249312	0					
ANR	4249457	PrimaryExpression	"""DAEMON-TOOL"""		4249312	0					
ANR	4249458	Argument	p_funcs		4249312	1					
ANR	4249459	Identifier	p_funcs		4249312	0					
ANR	4249460	ExpressionStatement	DebugFlags |= D_FULLDEBUG | D_SECURITY	104:3:2932:2968	4249312	3	True				
ANR	4249461	AssignmentExpression	DebugFlags |= D_FULLDEBUG | D_SECURITY		4249312	0		|=			
ANR	4249462	Identifier	DebugFlags		4249312	0					
ANR	4249463	InclusiveOrExpression	D_FULLDEBUG | D_SECURITY		4249312	1		|			
ANR	4249464	Identifier	D_FULLDEBUG		4249312	0					
ANR	4249465	Identifier	D_SECURITY		4249312	1					
ANR	4249466	ElseStatement	else		4249312	0					
ANR	4249467	IfStatement	"if ( match_prefix ( argv [ i ] , ""-"" ) )"		4249312	0					
ANR	4249468	Condition	"match_prefix ( argv [ i ] , ""-"" )"	105:13:2983:3010	4249312	0	True				
ANR	4249469	CallExpression	"match_prefix ( argv [ i ] , ""-"" )"		4249312	0					
ANR	4249470	Callee	match_prefix		4249312	0					
ANR	4249471	Identifier	match_prefix		4249312	0					
ANR	4249472	ArgumentList	argv [ i ]		4249312	1					
ANR	4249473	Argument	argv [ i ]		4249312	0					
ANR	4249474	ArrayIndexing	argv [ i ]		4249312	0					
ANR	4249475	Identifier	argv		4249312	0					
ANR	4249476	Identifier	i		4249312	1					
ANR	4249477	Argument	"""-"""		4249312	1					
ANR	4249478	PrimaryExpression	"""-"""		4249312	0					
ANR	4249479	CompoundStatement		26:44:656:656	4249312	1					
ANR	4249480	ExpressionStatement	usage ( )	106:3:3019:3026	4249312	0	True				
ANR	4249481	CallExpression	usage ( )		4249312	0					
ANR	4249482	Callee	usage		4249312	0					
ANR	4249483	Identifier	usage		4249312	0					
ANR	4249484	ArgumentList			4249312	1					
ANR	4249485	ElseStatement	else		4249312	0					
ANR	4249486	CompoundStatement		28:9:679:679	4249312	0					
ANR	4249487	ExpressionStatement	usage ( )	108:3:3042:3049	4249312	0	True				
ANR	4249488	CallExpression	usage ( )		4249312	0					
ANR	4249489	Callee	usage		4249312	0					
ANR	4249490	Identifier	usage		4249312	0					
ANR	4249491	ArgumentList			4249312	1					
ANR	4249492	IfStatement	if ( ! get_mySubSystem ( ) -> isNameValid ( ) )		4249312	7					
ANR	4249493	Condition	! get_mySubSystem ( ) -> isNameValid ( )	115:5:3143:3175	4249312	0	True				
ANR	4249494	UnaryOperationExpression	! get_mySubSystem ( ) -> isNameValid ( )		4249312	0					
ANR	4249495	UnaryOperator	!		4249312	0					
ANR	4249496	CallExpression	get_mySubSystem ( ) -> isNameValid ( )		4249312	1					
ANR	4249497	Callee	get_mySubSystem ( ) -> isNameValid		4249312	0					
ANR	4249498	PtrMemberAccess	get_mySubSystem ( ) -> isNameValid		4249312	0					
ANR	4249499	CallExpression	get_mySubSystem ( )		4249312	0					
ANR	4249500	Callee	get_mySubSystem		4249312	0					
ANR	4249501	Identifier	get_mySubSystem		4249312	0					
ANR	4249502	ArgumentList			4249312	1					
ANR	4249503	Identifier	isNameValid		4249312	1					
ANR	4249504	ArgumentList			4249312	1					
ANR	4249505	CompoundStatement		36:41:821:821	4249312	1					
ANR	4249506	ExpressionStatement	"get_mySubSystem ( ) -> setName ( ""DAEMON-TOOL"" )"	116:2:3183:3226	4249312	0	True				
ANR	4249507	CallExpression	"get_mySubSystem ( ) -> setName ( ""DAEMON-TOOL"" )"		4249312	0					
ANR	4249508	Callee	get_mySubSystem ( ) -> setName		4249312	0					
ANR	4249509	PtrMemberAccess	get_mySubSystem ( ) -> setName		4249312	0					
ANR	4249510	CallExpression	get_mySubSystem ( )		4249312	0					
ANR	4249511	Callee	get_mySubSystem		4249312	0					
ANR	4249512	Identifier	get_mySubSystem		4249312	0					
ANR	4249513	ArgumentList			4249312	1					
ANR	4249514	Identifier	setName		4249312	1					
ANR	4249515	ArgumentList	"""DAEMON-TOOL"""		4249312	1					
ANR	4249516	Argument	"""DAEMON-TOOL"""		4249312	0					
ANR	4249517	PrimaryExpression	"""DAEMON-TOOL"""		4249312	0					
ANR	4249518	ExpressionStatement	"config ( 0 , true )"	119:1:3233:3250	4249312	8	True				
ANR	4249519	CallExpression	"config ( 0 , true )"		4249312	0					
ANR	4249520	Callee	config		4249312	0					
ANR	4249521	Identifier	config		4249312	0					
ANR	4249522	ArgumentList	0		4249312	1					
ANR	4249523	Argument	0		4249312	0					
ANR	4249524	PrimaryExpression	0		4249312	0					
ANR	4249525	Argument	true		4249312	1					
ANR	4249526	Identifier	true		4249312	0					
ANR	4249527	IdentifierDeclStatement	IpVerify ipverify ;	121:1:3254:3271	4249312	9	True				
ANR	4249528	IdentifierDecl	ipverify		4249312	0					
ANR	4249529	IdentifierDeclType	IpVerify		4249312	0					
ANR	4249530	Identifier	ipverify		4249312	1					
ANR	4249531	IdentifierDeclStatement	MyString line ;	123:1:3275:3288	4249312	10	True				
ANR	4249532	IdentifierDecl	line		4249312	0					
ANR	4249533	IdentifierDeclType	MyString		4249312	0					
ANR	4249534	Identifier	line		4249312	1					
ANR	4249535	WhileStatement	while ( line . readLine ( input_fp ) )		4249312	11					
ANR	4249536	Condition	line . readLine ( input_fp )	124:8:3298:3320	4249312	0	True				
ANR	4249537	CallExpression	line . readLine ( input_fp )		4249312	0					
ANR	4249538	Callee	line . readLine		4249312	0					
ANR	4249539	MemberAccess	line . readLine		4249312	0					
ANR	4249540	Identifier	line		4249312	0					
ANR	4249541	Identifier	readLine		4249312	1					
ANR	4249542	ArgumentList	input_fp		4249312	1					
ANR	4249543	Argument	input_fp		4249312	0					
ANR	4249544	Identifier	input_fp		4249312	0					
ANR	4249545	CompoundStatement		79:2:1694:1709	4249312	1					
ANR	4249546	ExpressionStatement	line . chomp ( )	125:2:3328:3340	4249312	0	True				
ANR	4249547	CallExpression	line . chomp ( )		4249312	0					
ANR	4249548	Callee	line . chomp		4249312	0					
ANR	4249549	MemberAccess	line . chomp		4249312	0					
ANR	4249550	Identifier	line		4249312	0					
ANR	4249551	Identifier	chomp		4249312	1					
ANR	4249552	ArgumentList			4249312	1					
ANR	4249553	IfStatement	if ( line . IsEmpty ( ) || line [ 0 ] == '#' )		4249312	1					
ANR	4249554	Condition	line . IsEmpty ( ) || line [ 0 ] == '#'	126:6:3348:3379	4249312	0	True				
ANR	4249555	OrExpression	line . IsEmpty ( ) || line [ 0 ] == '#'		4249312	0		||			
ANR	4249556	CallExpression	line . IsEmpty ( )		4249312	0					
ANR	4249557	Callee	line . IsEmpty		4249312	0					
ANR	4249558	MemberAccess	line . IsEmpty		4249312	0					
ANR	4249559	Identifier	line		4249312	0					
ANR	4249560	Identifier	IsEmpty		4249312	1					
ANR	4249561	ArgumentList			4249312	1					
ANR	4249562	EqualityExpression	line [ 0 ] == '#'		4249312	1		==			
ANR	4249563	ArrayIndexing	line [ 0 ]		4249312	0					
ANR	4249564	Identifier	line		4249312	0					
ANR	4249565	PrimaryExpression	0		4249312	1					
ANR	4249566	PrimaryExpression	'#'		4249312	1					
ANR	4249567	CompoundStatement		47:41:1025:1025	4249312	1					
ANR	4249568	ExpressionStatement	"printf ( ""%s\\n"" , line . Value ( ) )"	127:3:3388:3415	4249312	0	True				
ANR	4249569	CallExpression	"printf ( ""%s\\n"" , line . Value ( ) )"		4249312	0					
ANR	4249570	Callee	printf		4249312	0					
ANR	4249571	Identifier	printf		4249312	0					
ANR	4249572	ArgumentList	"""%s\\n"""		4249312	1					
ANR	4249573	Argument	"""%s\\n"""		4249312	0					
ANR	4249574	PrimaryExpression	"""%s\\n"""		4249312	0					
ANR	4249575	Argument	line . Value ( )		4249312	1					
ANR	4249576	CallExpression	line . Value ( )		4249312	0					
ANR	4249577	Callee	line . Value		4249312	0					
ANR	4249578	MemberAccess	line . Value		4249312	0					
ANR	4249579	Identifier	line		4249312	0					
ANR	4249580	Identifier	Value		4249312	1					
ANR	4249581	ArgumentList			4249312	1					
ANR	4249582	ContinueStatement	continue ;	128:3:3420:3428	4249312	1	True				
ANR	4249583	IdentifierDeclStatement	"StringList fields ( line . Value ( ) , "" "" ) ;"	131:2:3437:3472	4249312	2	True				
ANR	4249584	IdentifierDecl	"fields ( line . Value ( ) , "" "" )"		4249312	0					
ANR	4249585	IdentifierDeclType	StringList		4249312	0					
ANR	4249586	Identifier	fields		4249312	1					
ANR	4249587	Expression	"line . Value ( ) , "" """		4249312	2					
ANR	4249588	CallExpression	line . Value ( )		4249312	0					
ANR	4249589	Callee	line . Value		4249312	0					
ANR	4249590	MemberAccess	line . Value		4249312	0					
ANR	4249591	Identifier	line		4249312	0					
ANR	4249592	Identifier	Value		4249312	1					
ANR	4249593	ArgumentList			4249312	1					
ANR	4249594	PrimaryExpression	""" """		4249312	1					
ANR	4249595	ExpressionStatement	fields . rewind ( )	132:2:3476:3491	4249312	3	True				
ANR	4249596	CallExpression	fields . rewind ( )		4249312	0					
ANR	4249597	Callee	fields . rewind		4249312	0					
ANR	4249598	MemberAccess	fields . rewind		4249312	0					
ANR	4249599	Identifier	fields		4249312	0					
ANR	4249600	Identifier	rewind		4249312	1					
ANR	4249601	ArgumentList			4249312	1					
ANR	4249602	IdentifierDeclStatement	char const * perm_str = fields . next ( ) ;	134:2:3496:3532	4249312	4	True				
ANR	4249603	IdentifierDecl	* perm_str = fields . next ( )		4249312	0					
ANR	4249604	IdentifierDeclType	char const *		4249312	0					
ANR	4249605	Identifier	perm_str		4249312	1					
ANR	4249606	AssignmentExpression	* perm_str = fields . next ( )		4249312	2		=			
ANR	4249607	Identifier	perm_str		4249312	0					
ANR	4249608	CallExpression	fields . next ( )		4249312	1					
ANR	4249609	Callee	fields . next		4249312	0					
ANR	4249610	MemberAccess	fields . next		4249312	0					
ANR	4249611	Identifier	fields		4249312	0					
ANR	4249612	Identifier	next		4249312	1					
ANR	4249613	ArgumentList			4249312	1					
ANR	4249614	IdentifierDeclStatement	char const * fqu = fields . next ( ) ;	135:2:3536:3567	4249312	5	True				
ANR	4249615	IdentifierDecl	* fqu = fields . next ( )		4249312	0					
ANR	4249616	IdentifierDeclType	char const *		4249312	0					
ANR	4249617	Identifier	fqu		4249312	1					
ANR	4249618	AssignmentExpression	* fqu = fields . next ( )		4249312	2		=			
ANR	4249619	Identifier	fqu		4249312	0					
ANR	4249620	CallExpression	fields . next ( )		4249312	1					
ANR	4249621	Callee	fields . next		4249312	0					
ANR	4249622	MemberAccess	fields . next		4249312	0					
ANR	4249623	Identifier	fields		4249312	0					
ANR	4249624	Identifier	next		4249312	1					
ANR	4249625	ArgumentList			4249312	1					
ANR	4249626	IdentifierDeclStatement	char const * ip = fields . next ( ) ;	136:2:3571:3601	4249312	6	True				
ANR	4249627	IdentifierDecl	* ip = fields . next ( )		4249312	0					
ANR	4249628	IdentifierDeclType	char const *		4249312	0					
ANR	4249629	Identifier	ip		4249312	1					
ANR	4249630	AssignmentExpression	* ip = fields . next ( )		4249312	2		=			
ANR	4249631	Identifier	ip		4249312	0					
ANR	4249632	CallExpression	fields . next ( )		4249312	1					
ANR	4249633	Callee	fields . next		4249312	0					
ANR	4249634	MemberAccess	fields . next		4249312	0					
ANR	4249635	Identifier	fields		4249312	0					
ANR	4249636	Identifier	next		4249312	1					
ANR	4249637	ArgumentList			4249312	1					
ANR	4249638	IdentifierDeclStatement	char const * expected = fields . next ( ) ;	137:2:3605:3641	4249312	7	True				
ANR	4249639	IdentifierDecl	* expected = fields . next ( )		4249312	0					
ANR	4249640	IdentifierDeclType	char const *		4249312	0					
ANR	4249641	Identifier	expected		4249312	1					
ANR	4249642	AssignmentExpression	* expected = fields . next ( )		4249312	2		=			
ANR	4249643	Identifier	expected		4249312	0					
ANR	4249644	CallExpression	fields . next ( )		4249312	1					
ANR	4249645	Callee	fields . next		4249312	0					
ANR	4249646	MemberAccess	fields . next		4249312	0					
ANR	4249647	Identifier	fields		4249312	0					
ANR	4249648	Identifier	next		4249312	1					
ANR	4249649	ArgumentList			4249312	1					
ANR	4249650	IdentifierDeclStatement	"MyString sin_str = generate_sinful ( ip , 0 ) ;"	139:2:3646:3687	4249312	8	True				
ANR	4249651	IdentifierDecl	"sin_str = generate_sinful ( ip , 0 )"		4249312	0					
ANR	4249652	IdentifierDeclType	MyString		4249312	0					
ANR	4249653	Identifier	sin_str		4249312	1					
ANR	4249654	AssignmentExpression	"sin_str = generate_sinful ( ip , 0 )"		4249312	2		=			
ANR	4249655	Identifier	sin_str		4249312	0					
ANR	4249656	CallExpression	"generate_sinful ( ip , 0 )"		4249312	1					
ANR	4249657	Callee	generate_sinful		4249312	0					
ANR	4249658	Identifier	generate_sinful		4249312	0					
ANR	4249659	ArgumentList	ip		4249312	1					
ANR	4249660	Argument	ip		4249312	0					
ANR	4249661	Identifier	ip		4249312	0					
ANR	4249662	Argument	0		4249312	1					
ANR	4249663	PrimaryExpression	0		4249312	0					
ANR	4249664	IdentifierDeclStatement	condor_sockaddr addr ;	141:2:3692:3712	4249312	9	True				
ANR	4249665	IdentifierDecl	addr		4249312	0					
ANR	4249666	IdentifierDeclType	condor_sockaddr		4249312	0					
ANR	4249667	Identifier	addr		4249312	1					
ANR	4249668	IfStatement	if ( ! addr . from_sinful ( sin_str ) )		4249312	10					
ANR	4249669	Condition	! addr . from_sinful ( sin_str )	142:6:3720:3745	4249312	0	True				
ANR	4249670	UnaryOperationExpression	! addr . from_sinful ( sin_str )		4249312	0					
ANR	4249671	UnaryOperator	!		4249312	0					
ANR	4249672	CallExpression	addr . from_sinful ( sin_str )		4249312	1					
ANR	4249673	Callee	addr . from_sinful		4249312	0					
ANR	4249674	MemberAccess	addr . from_sinful		4249312	0					
ANR	4249675	Identifier	addr		4249312	0					
ANR	4249676	Identifier	from_sinful		4249312	1					
ANR	4249677	ArgumentList	sin_str		4249312	1					
ANR	4249678	Argument	sin_str		4249312	0					
ANR	4249679	Identifier	sin_str		4249312	0					
ANR	4249680	CompoundStatement		63:35:1391:1391	4249312	1					
ANR	4249681	ExpressionStatement	"fprintf ( stderr , ""Invalid ip address: %s\\n"" , ip )"	143:3:3754:3799	4249312	0	True				
ANR	4249682	CallExpression	"fprintf ( stderr , ""Invalid ip address: %s\\n"" , ip )"		4249312	0					
ANR	4249683	Callee	fprintf		4249312	0					
ANR	4249684	Identifier	fprintf		4249312	0					
ANR	4249685	ArgumentList	stderr		4249312	1					
ANR	4249686	Argument	stderr		4249312	0					
ANR	4249687	Identifier	stderr		4249312	0					
ANR	4249688	Argument	"""Invalid ip address: %s\\n"""		4249312	1					
ANR	4249689	PrimaryExpression	"""Invalid ip address: %s\\n"""		4249312	0					
ANR	4249690	Argument	ip		4249312	2					
ANR	4249691	Identifier	ip		4249312	0					
ANR	4249692	ExpressionStatement	exit ( 1 )	144:3:3804:3811	4249312	1	True				
ANR	4249693	CallExpression	exit ( 1 )		4249312	0					
ANR	4249694	Callee	exit		4249312	0					
ANR	4249695	Identifier	exit		4249312	0					
ANR	4249696	ArgumentList	1		4249312	1					
ANR	4249697	Argument	1		4249312	0					
ANR	4249698	PrimaryExpression	1		4249312	0					
ANR	4249699	IdentifierDeclStatement	DCpermission perm = StringToDCpermission ( perm_str ) ;	147:2:3820:3870	4249312	11	True				
ANR	4249700	IdentifierDecl	perm = StringToDCpermission ( perm_str )		4249312	0					
ANR	4249701	IdentifierDeclType	DCpermission		4249312	0					
ANR	4249702	Identifier	perm		4249312	1					
ANR	4249703	AssignmentExpression	perm = StringToDCpermission ( perm_str )		4249312	2		=			
ANR	4249704	Identifier	perm		4249312	0					
ANR	4249705	CallExpression	StringToDCpermission ( perm_str )		4249312	1					
ANR	4249706	Callee	StringToDCpermission		4249312	0					
ANR	4249707	Identifier	StringToDCpermission		4249312	0					
ANR	4249708	ArgumentList	perm_str		4249312	1					
ANR	4249709	Argument	perm_str		4249312	0					
ANR	4249710	Identifier	perm_str		4249312	0					
ANR	4249711	IfStatement	if ( perm == LAST_PERM )		4249312	12					
ANR	4249712	Condition	perm == LAST_PERM	148:6:3878:3894	4249312	0	True				
ANR	4249713	EqualityExpression	perm == LAST_PERM		4249312	0		==			
ANR	4249714	Identifier	perm		4249312	0					
ANR	4249715	Identifier	LAST_PERM		4249312	1					
ANR	4249716	CompoundStatement		69:26:1540:1540	4249312	1					
ANR	4249717	ExpressionStatement	"fprintf ( stderr , ""Invalid permission level: %s\\n"" , perm_str )"	149:3:3903:3960	4249312	0	True				
ANR	4249718	CallExpression	"fprintf ( stderr , ""Invalid permission level: %s\\n"" , perm_str )"		4249312	0					
ANR	4249719	Callee	fprintf		4249312	0					
ANR	4249720	Identifier	fprintf		4249312	0					
ANR	4249721	ArgumentList	stderr		4249312	1					
ANR	4249722	Argument	stderr		4249312	0					
ANR	4249723	Identifier	stderr		4249312	0					
ANR	4249724	Argument	"""Invalid permission level: %s\\n"""		4249312	1					
ANR	4249725	PrimaryExpression	"""Invalid permission level: %s\\n"""		4249312	0					
ANR	4249726	Argument	perm_str		4249312	2					
ANR	4249727	Identifier	perm_str		4249312	0					
ANR	4249728	ExpressionStatement	exit ( 1 )	150:3:3965:3972	4249312	1	True				
ANR	4249729	CallExpression	exit ( 1 )		4249312	0					
ANR	4249730	Callee	exit		4249312	0					
ANR	4249731	Identifier	exit		4249312	0					
ANR	4249732	ArgumentList	1		4249312	1					
ANR	4249733	Argument	1		4249312	0					
ANR	4249734	PrimaryExpression	1		4249312	0					
ANR	4249735	IfStatement	"if ( strcmp ( fqu , ""*"" ) == 0 )"		4249312	13					
ANR	4249736	Condition	"strcmp ( fqu , ""*"" ) == 0"	153:6:3985:4004	4249312	0	True				
ANR	4249737	EqualityExpression	"strcmp ( fqu , ""*"" ) == 0"		4249312	0		==			
ANR	4249738	CallExpression	"strcmp ( fqu , ""*"" )"		4249312	0					
ANR	4249739	Callee	strcmp		4249312	0					
ANR	4249740	Identifier	strcmp		4249312	0					
ANR	4249741	ArgumentList	fqu		4249312	1					
ANR	4249742	Argument	fqu		4249312	0					
ANR	4249743	Identifier	fqu		4249312	0					
ANR	4249744	Argument	"""*"""		4249312	1					
ANR	4249745	PrimaryExpression	"""*"""		4249312	0					
ANR	4249746	PrimaryExpression	0		4249312	1					
ANR	4249747	CompoundStatement		74:29:1650:1650	4249312	1					
ANR	4249748	ExpressionStatement	"fqu = """""	154:3:4013:4021	4249312	0	True				
ANR	4249749	AssignmentExpression	"fqu = """""		4249312	0		=			
ANR	4249750	Identifier	fqu		4249312	0					
ANR	4249751	PrimaryExpression	""""""		4249312	1					
ANR	4249752	IdentifierDeclStatement	char const * result ;	157:2:4030:4048	4249312	14	True				
ANR	4249753	IdentifierDecl	* result		4249312	0					
ANR	4249754	IdentifierDeclType	char const *		4249312	0					
ANR	4249755	Identifier	result		4249312	1					
ANR	4249756	IdentifierDeclStatement	MyString reason ;	158:2:4052:4067	4249312	15	True				
ANR	4249757	IdentifierDecl	reason		4249312	0					
ANR	4249758	IdentifierDeclType	MyString		4249312	0					
ANR	4249759	Identifier	reason		4249312	1					
ANR	4249760	IfStatement	"if ( ipverify . Verify ( perm , addr , fqu , & reason , & reason ) != USER_AUTH_SUCCESS )"		4249312	16					
ANR	4249761	Condition	"ipverify . Verify ( perm , addr , fqu , & reason , & reason ) != USER_AUTH_SUCCESS"	159:6:4075:4141	4249312	0	True				
ANR	4249762	EqualityExpression	"ipverify . Verify ( perm , addr , fqu , & reason , & reason ) != USER_AUTH_SUCCESS"		4249312	0		!=			
ANR	4249763	CallExpression	"ipverify . Verify ( perm , addr , fqu , & reason , & reason )"		4249312	0					
ANR	4249764	Callee	ipverify . Verify		4249312	0					
ANR	4249765	MemberAccess	ipverify . Verify		4249312	0					
ANR	4249766	Identifier	ipverify		4249312	0					
ANR	4249767	Identifier	Verify		4249312	1					
ANR	4249768	ArgumentList	perm		4249312	1					
ANR	4249769	Argument	perm		4249312	0					
ANR	4249770	Identifier	perm		4249312	0					
ANR	4249771	Argument	addr		4249312	1					
ANR	4249772	Identifier	addr		4249312	0					
ANR	4249773	Argument	fqu		4249312	2					
ANR	4249774	Identifier	fqu		4249312	0					
ANR	4249775	Argument	& reason		4249312	3					
ANR	4249776	UnaryOperationExpression	& reason		4249312	0					
ANR	4249777	UnaryOperator	&		4249312	0					
ANR	4249778	Identifier	reason		4249312	1					
ANR	4249779	Argument	& reason		4249312	4					
ANR	4249780	UnaryOperationExpression	& reason		4249312	0					
ANR	4249781	UnaryOperator	&		4249312	0					
ANR	4249782	Identifier	reason		4249312	1					
ANR	4249783	Identifier	USER_AUTH_SUCCESS		4249312	1					
ANR	4249784	CompoundStatement		80:76:1787:1787	4249312	1					
ANR	4249785	ExpressionStatement	"result = ""DENIED"""	160:3:4150:4167	4249312	0	True				
ANR	4249786	AssignmentExpression	"result = ""DENIED"""		4249312	0		=			
ANR	4249787	Identifier	result		4249312	0					
ANR	4249788	PrimaryExpression	"""DENIED"""		4249312	1					
ANR	4249789	ElseStatement	else		4249312	0					
ANR	4249790	CompoundStatement		83:7:1822:1822	4249312	0					
ANR	4249791	ExpressionStatement	"result = ""ALLOWED"""	163:3:4185:4203	4249312	0	True				
ANR	4249792	AssignmentExpression	"result = ""ALLOWED"""		4249312	0		=			
ANR	4249793	Identifier	result		4249312	0					
ANR	4249794	PrimaryExpression	"""ALLOWED"""		4249312	1					
ANR	4249795	IfStatement	"if ( expected && strcasecmp ( expected , result ) != 0 )"		4249312	17					
ANR	4249796	Condition	"expected && strcasecmp ( expected , result ) != 0"	166:6:4216:4259	4249312	0	True				
ANR	4249797	AndExpression	"expected && strcasecmp ( expected , result ) != 0"		4249312	0		&&			
ANR	4249798	Identifier	expected		4249312	0					
ANR	4249799	EqualityExpression	"strcasecmp ( expected , result ) != 0"		4249312	1		!=			
ANR	4249800	CallExpression	"strcasecmp ( expected , result )"		4249312	0					
ANR	4249801	Callee	strcasecmp		4249312	0					
ANR	4249802	Identifier	strcasecmp		4249312	0					
ANR	4249803	ArgumentList	expected		4249312	1					
ANR	4249804	Argument	expected		4249312	0					
ANR	4249805	Identifier	expected		4249312	0					
ANR	4249806	Argument	result		4249312	1					
ANR	4249807	Identifier	result		4249312	0					
ANR	4249808	PrimaryExpression	0		4249312	1					
ANR	4249809	CompoundStatement		87:53:1905:1905	4249312	1					
ANR	4249810	ExpressionStatement	"printf ( ""Got wrong result '%s' for '%s': reason: %s!\\n"" , result , line . Value ( ) , reason . Value ( ) )"	167:3:4268:4366	4249312	0	True				
ANR	4249811	CallExpression	"printf ( ""Got wrong result '%s' for '%s': reason: %s!\\n"" , result , line . Value ( ) , reason . Value ( ) )"		4249312	0					
ANR	4249812	Callee	printf		4249312	0					
ANR	4249813	Identifier	printf		4249312	0					
ANR	4249814	ArgumentList	"""Got wrong result '%s' for '%s': reason: %s!\\n"""		4249312	1					
ANR	4249815	Argument	"""Got wrong result '%s' for '%s': reason: %s!\\n"""		4249312	0					
ANR	4249816	PrimaryExpression	"""Got wrong result '%s' for '%s': reason: %s!\\n"""		4249312	0					
ANR	4249817	Argument	result		4249312	1					
ANR	4249818	Identifier	result		4249312	0					
ANR	4249819	Argument	line . Value ( )		4249312	2					
ANR	4249820	CallExpression	line . Value ( )		4249312	0					
ANR	4249821	Callee	line . Value		4249312	0					
ANR	4249822	MemberAccess	line . Value		4249312	0					
ANR	4249823	Identifier	line		4249312	0					
ANR	4249824	Identifier	Value		4249312	1					
ANR	4249825	ArgumentList			4249312	1					
ANR	4249826	Argument	reason . Value ( )		4249312	3					
ANR	4249827	CallExpression	reason . Value ( )		4249312	0					
ANR	4249828	Callee	reason . Value		4249312	0					
ANR	4249829	MemberAccess	reason . Value		4249312	0					
ANR	4249830	Identifier	reason		4249312	0					
ANR	4249831	Identifier	Value		4249312	1					
ANR	4249832	ArgumentList			4249312	1					
ANR	4249833	ExpressionStatement	"printf ( ""Aborting.\\n"" )"	169:3:4371:4392	4249312	1	True				
ANR	4249834	CallExpression	"printf ( ""Aborting.\\n"" )"		4249312	0					
ANR	4249835	Callee	printf		4249312	0					
ANR	4249836	Identifier	printf		4249312	0					
ANR	4249837	ArgumentList	"""Aborting.\\n"""		4249312	1					
ANR	4249838	Argument	"""Aborting.\\n"""		4249312	0					
ANR	4249839	PrimaryExpression	"""Aborting.\\n"""		4249312	0					
ANR	4249840	ExpressionStatement	exit ( 1 )	170:3:4397:4404	4249312	2	True				
ANR	4249841	CallExpression	exit ( 1 )		4249312	0					
ANR	4249842	Callee	exit		4249312	0					
ANR	4249843	Identifier	exit		4249312	0					
ANR	4249844	ArgumentList	1		4249312	1					
ANR	4249845	Argument	1		4249312	0					
ANR	4249846	PrimaryExpression	1		4249312	0					
ANR	4249847	IfStatement	if ( expected )		4249312	18					
ANR	4249848	Condition	expected	172:6:4416:4423	4249312	0	True				
ANR	4249849	Identifier	expected		4249312	0					
ANR	4249850	CompoundStatement		93:17:2069:2069	4249312	1					
ANR	4249851	ExpressionStatement	"printf ( ""%s\\n"" , line . Value ( ) )"	173:3:4432:4459	4249312	0	True				
ANR	4249852	CallExpression	"printf ( ""%s\\n"" , line . Value ( ) )"		4249312	0					
ANR	4249853	Callee	printf		4249312	0					
ANR	4249854	Identifier	printf		4249312	0					
ANR	4249855	ArgumentList	"""%s\\n"""		4249312	1					
ANR	4249856	Argument	"""%s\\n"""		4249312	0					
ANR	4249857	PrimaryExpression	"""%s\\n"""		4249312	0					
ANR	4249858	Argument	line . Value ( )		4249312	1					
ANR	4249859	CallExpression	line . Value ( )		4249312	0					
ANR	4249860	Callee	line . Value		4249312	0					
ANR	4249861	MemberAccess	line . Value		4249312	0					
ANR	4249862	Identifier	line		4249312	0					
ANR	4249863	Identifier	Value		4249312	1					
ANR	4249864	ArgumentList			4249312	1					
ANR	4249865	ElseStatement	else		4249312	0					
ANR	4249866	CompoundStatement		96:7:2114:2114	4249312	0					
ANR	4249867	ExpressionStatement	"printf ( ""%s %s\\n"" , line . Value ( ) , result )"	176:3:4477:4514	4249312	0	True				
ANR	4249868	CallExpression	"printf ( ""%s %s\\n"" , line . Value ( ) , result )"		4249312	0					
ANR	4249869	Callee	printf		4249312	0					
ANR	4249870	Identifier	printf		4249312	0					
ANR	4249871	ArgumentList	"""%s %s\\n"""		4249312	1					
ANR	4249872	Argument	"""%s %s\\n"""		4249312	0					
ANR	4249873	PrimaryExpression	"""%s %s\\n"""		4249312	0					
ANR	4249874	Argument	line . Value ( )		4249312	1					
ANR	4249875	CallExpression	line . Value ( )		4249312	0					
ANR	4249876	Callee	line . Value		4249312	0					
ANR	4249877	MemberAccess	line . Value		4249312	0					
ANR	4249878	Identifier	line		4249312	0					
ANR	4249879	Identifier	Value		4249312	1					
ANR	4249880	ArgumentList			4249312	1					
ANR	4249881	Argument	result		4249312	2					
ANR	4249882	Identifier	result		4249312	0					
ANR	4249883	ReturnType	int		4249312	1					
ANR	4249884	Identifier	main		4249312	2					
ANR	4249885	ParameterList	"int argc , char * argv [ ]"		4249312	3					
ANR	4249886	Parameter	int argc	79:6:2332:2339	4249312	0	True				
ANR	4249887	ParameterType	int		4249312	0					
ANR	4249888	Identifier	argc		4249312	1					
ANR	4249889	Parameter	char * argv [ ]	79:16:2342:2353	4249312	1	True				
ANR	4249890	ParameterType	char * [ ]		4249312	0					
ANR	4249891	Identifier	argv		4249312	1					
ANR	4249892	CFGEntryNode	ENTRY		4249312		True				
ANR	4249893	CFGExitNode	EXIT		4249312		True				
ANR	4249894	Symbol	line . readLine		4249312						
ANR	4249895	Symbol	reason		4249312						
ANR	4249896	Symbol	stdin		4249312						
ANR	4249897	Symbol	& reason		4249312						
ANR	4249898	Symbol	p_funcs		4249312						
ANR	4249899	Symbol	* argv		4249312						
ANR	4249900	Symbol	fields . next		4249312						
ANR	4249901	Symbol	* line		4249312						
ANR	4249902	Symbol	fqu		4249312						
ANR	4249903	Symbol	StringToDCpermission		4249312						
ANR	4249904	Symbol	myDistro		4249312						
ANR	4249905	Symbol	strcasecmp		4249312						
ANR	4249906	Symbol	sin_str		4249312						
ANR	4249907	Symbol	LAST_PERM		4249312						
ANR	4249908	Symbol	strcmp		4249312						
ANR	4249909	Symbol	NULL		4249312						
ANR	4249910	Symbol	SUBSYSTEM_TYPE_TOOL		4249312						
ANR	4249911	Symbol	get_param_functions		4249312						
ANR	4249912	Symbol	ip		4249312						
ANR	4249913	Symbol	expected		4249312						
ANR	4249914	Symbol	DebugFlags		4249312						
ANR	4249915	Symbol	D_FULLDEBUG		4249312						
ANR	4249916	Symbol	addr . from_sinful		4249312						
ANR	4249917	Symbol	stderr		4249312						
ANR	4249918	Symbol	USER_AUTH_SUCCESS		4249312						
ANR	4249919	Symbol	true		4249312						
ANR	4249920	Symbol	fields		4249312						
ANR	4249921	Symbol	get_mySubSystem		4249312						
ANR	4249922	Symbol	MyName		4249312						
ANR	4249923	Symbol	match_prefix		4249312						
ANR	4249924	Symbol	D_SECURITY		4249312						
ANR	4249925	Symbol	perm		4249312						
ANR	4249926	Symbol	line		4249312						
ANR	4249927	Symbol	reason . Value		4249312						
ANR	4249928	Symbol	argv		4249312						
ANR	4249929	Symbol	get_mySubSystem ( ) -> isNameValid		4249312						
ANR	4249930	Symbol	result		4249312						
ANR	4249931	Symbol	input_fp		4249312						
ANR	4249932	Symbol	ipverify		4249312						
ANR	4249933	Symbol	addr		4249312						
ANR	4249934	Symbol	argc		4249312						
ANR	4249935	Symbol	line . IsEmpty		4249312						
ANR	4249936	Symbol	* get_mySubSystem		4249312						
ANR	4249937	Symbol	line . Value		4249312						
ANR	4249938	Symbol	Termlog		4249312						
ANR	4249939	Symbol	i		4249312						
ANR	4249940	Symbol	perm_str		4249312						
ANR	4249941	Symbol	* i		4249312						
ANR	4249942	Symbol	generate_sinful		4249312						
ANR	4249943	Symbol	ipverify . Verify		4249312						
