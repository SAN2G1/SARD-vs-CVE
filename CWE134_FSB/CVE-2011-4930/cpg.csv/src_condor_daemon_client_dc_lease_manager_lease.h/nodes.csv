command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3009236	File	data/converged/CVE-2011-4930_htcondor/src_condor_daemon_client_dc_lease_manager_lease.h								
ANR	3009237	ClassDef	DCLeaseManagerLease	33:0:1055:3527							
ANR	3009238	DeclStmt									
ANR	3009239	Decl							int	int ( const DCLeaseManagerLease & )	copyUpdates
ANR	3009240	Function	leaseId	53:1:1767:1831							
ANR	3009241	FunctionDef	leaseId ()		3009240	1					
ANR	3009242	CompoundStatement		54:2:1810:1831	3009240	0					
ANR	3009243	ReturnStatement	return m_lease_id ;	54:1:1812:1829	3009240	0	True				
ANR	3009244	Identifier	m_lease_id		3009240	0					
ANR	3009245	ReturnType	const std :: string &		3009240	1					
ANR	3009246	Identifier	leaseId		3009240	2					
ANR	3009247	ParameterList			3009240	3					
ANR	3009248	CFGEntryNode	ENTRY		3009240		True				
ANR	3009249	CFGExitNode	EXIT		3009240		True				
ANR	3009250	Symbol	m_lease_id		3009240						
ANR	3009251	Function	leaseDuration	55:1:1835:1896							
ANR	3009252	FunctionDef	leaseDuration ()		3009251	2					
ANR	3009253	CompoundStatement		56:2:1869:1896	3009251	0					
ANR	3009254	ReturnStatement	return m_lease_duration ;	56:1:1871:1894	3009251	0	True				
ANR	3009255	Identifier	m_lease_duration		3009251	0					
ANR	3009256	ReturnType	int		3009251	1					
ANR	3009257	Identifier	leaseDuration		3009251	2					
ANR	3009258	ParameterList			3009251	3					
ANR	3009259	CFGEntryNode	ENTRY		3009251		True				
ANR	3009260	CFGExitNode	EXIT		3009251		True				
ANR	3009261	Symbol	m_lease_duration		3009251						
ANR	3009262	Function	leaseAd	57:1:1900:1963							
ANR	3009263	FunctionDef	leaseAd ()		3009262	3					
ANR	3009264	CompoundStatement		58:2:1942:1963	3009262	0					
ANR	3009265	ReturnStatement	return m_lease_ad ;	58:1:1944:1961	3009262	0	True				
ANR	3009266	Identifier	m_lease_ad		3009262	0					
ANR	3009267	ReturnType	classad :: ClassAd *		3009262	1					
ANR	3009268	Identifier	leaseAd		3009262	2					
ANR	3009269	ParameterList			3009262	3					
ANR	3009270	CFGEntryNode	ENTRY		3009262		True				
ANR	3009271	CFGExitNode	EXIT		3009262		True				
ANR	3009272	Symbol	m_lease_ad		3009262						
ANR	3009273	Function	releaseLeaseWhenDone	59:1:1967:2045							
ANR	3009274	FunctionDef	releaseLeaseWhenDone ()		3009273	4					
ANR	3009275	CompoundStatement		60:2:2009:2045	3009273	0					
ANR	3009276	ReturnStatement	return m_release_lease_when_done ;	60:1:2011:2043	3009273	0	True				
ANR	3009277	Identifier	m_release_lease_when_done		3009273	0					
ANR	3009278	ReturnType	bool		3009273	1					
ANR	3009279	Identifier	releaseLeaseWhenDone		3009273	2					
ANR	3009280	ParameterList			3009273	3					
ANR	3009281	CFGEntryNode	ENTRY		3009273		True				
ANR	3009282	CFGExitNode	EXIT		3009273		True				
ANR	3009283	Symbol	m_release_lease_when_done		3009273						
ANR	3009284	Function	leaseTime	61:1:2049:2102							
ANR	3009285	FunctionDef	leaseTime ()		3009284	5					
ANR	3009286	CompoundStatement		62:2:2079:2102	3009284	0					
ANR	3009287	ReturnStatement	return m_lease_time ;	62:1:2081:2100	3009284	0	True				
ANR	3009288	Identifier	m_lease_time		3009284	0					
ANR	3009289	ReturnType	int		3009284	1					
ANR	3009290	Identifier	leaseTime		3009284	2					
ANR	3009291	ParameterList			3009284	3					
ANR	3009292	CFGEntryNode	ENTRY		3009284		True				
ANR	3009293	CFGExitNode	EXIT		3009284		True				
ANR	3009294	Symbol	m_lease_time		3009284						
ANR	3009295	Function	idMatch	65:1:2137:2203							
ANR	3009296	FunctionDef	idMatch (const char * id)		3009295	6					
ANR	3009297	CompoundStatement		66:2:2176:2203	3009295	0					
ANR	3009298	ReturnStatement	return m_lease_id == id ;	66:1:2178:2201	3009295	0	True				
ANR	3009299	EqualityExpression	m_lease_id == id		3009295	0		==			
ANR	3009300	Identifier	m_lease_id		3009295	0					
ANR	3009301	Identifier	id		3009295	1					
ANR	3009302	ReturnType	bool		3009295	1					
ANR	3009303	Identifier	idMatch		3009295	2					
ANR	3009304	ParameterList	const char * id		3009295	3					
ANR	3009305	Parameter	const char * id	65:15:2151:2164	3009295	0	True				
ANR	3009306	ParameterType	const char *		3009295	0					
ANR	3009307	Identifier	id		3009295	1					
ANR	3009308	CFGEntryNode	ENTRY		3009295		True				
ANR	3009309	CFGExitNode	EXIT		3009295		True				
ANR	3009310	Symbol	m_lease_id		3009295						
ANR	3009311	Symbol	id		3009295						
ANR	3009312	Function	idMatch	67:1:2207:2280							
ANR	3009313	FunctionDef	idMatch (const std :: string & id)		3009312	7					
ANR	3009314	CompoundStatement		68:2:2253:2280	3009312	0					
ANR	3009315	ReturnStatement	return m_lease_id == id ;	68:1:2255:2278	3009312	0	True				
ANR	3009316	EqualityExpression	m_lease_id == id		3009312	0		==			
ANR	3009317	Identifier	m_lease_id		3009312	0					
ANR	3009318	Identifier	id		3009312	1					
ANR	3009319	ReturnType	bool		3009312	1					
ANR	3009320	Identifier	idMatch		3009312	2					
ANR	3009321	ParameterList	const std :: string & id		3009312	3					
ANR	3009322	Parameter	const std :: string & id	67:15:2221:2241	3009312	0	True				
ANR	3009323	ParameterType	const std :: string &		3009312	0					
ANR	3009324	Identifier	id		3009312	1					
ANR	3009325	CFGEntryNode	ENTRY		3009312		True				
ANR	3009326	CFGExitNode	EXIT		3009312		True				
ANR	3009327	Symbol	m_lease_id		3009312						
ANR	3009328	Symbol	id		3009312						
ANR	3009329	Function	idMatch	69:1:2284:2381							
ANR	3009330	FunctionDef	idMatch (const DCLeaseManagerLease & other)		3009329	8					
ANR	3009331	CompoundStatement		70:2:2341:2381	3009329	0					
ANR	3009332	ReturnStatement	return m_lease_id == other . leaseId ( ) ;	70:1:2343:2379	3009329	0	True				
ANR	3009333	EqualityExpression	m_lease_id == other . leaseId ( )		3009329	0		==			
ANR	3009334	Identifier	m_lease_id		3009329	0					
ANR	3009335	CallExpression	other . leaseId ( )		3009329	1					
ANR	3009336	Callee	other . leaseId		3009329	0					
ANR	3009337	MemberAccess	other . leaseId		3009329	0					
ANR	3009338	Identifier	other		3009329	0					
ANR	3009339	Identifier	leaseId		3009329	1					
ANR	3009340	ArgumentList			3009329	1					
ANR	3009341	ReturnType	bool		3009329	1					
ANR	3009342	Identifier	idMatch		3009329	2					
ANR	3009343	ParameterList	const DCLeaseManagerLease & other		3009329	3					
ANR	3009344	Parameter	const DCLeaseManagerLease & other	69:15:2298:2329	3009329	0	True				
ANR	3009345	ParameterType	const DCLeaseManagerLease &		3009329	0					
ANR	3009346	Identifier	other		3009329	1					
ANR	3009347	CFGEntryNode	ENTRY		3009329		True				
ANR	3009348	CFGExitNode	EXIT		3009329		True				
ANR	3009349	Symbol	other		3009329						
ANR	3009350	Symbol	other . leaseId		3009329						
ANR	3009351	Symbol	m_lease_id		3009329						
ANR	3009352	Function	isDead	73:1:2407:2452							
ANR	3009353	FunctionDef	isDead ()		3009352	9					
ANR	3009354	CompoundStatement		74:2:2435:2452	3009352	0					
ANR	3009355	ReturnStatement	return m_dead ;	74:1:2437:2450	3009352	0	True				
ANR	3009356	Identifier	m_dead		3009352	0					
ANR	3009357	ReturnType	bool		3009352	1					
ANR	3009358	Identifier	isDead		3009352	2					
ANR	3009359	ParameterList			3009352	3					
ANR	3009360	CFGEntryNode	ENTRY		3009352		True				
ANR	3009361	CFGExitNode	EXIT		3009352		True				
ANR	3009362	Symbol	m_dead		3009352						
ANR	3009363	Function	setDead	75:1:2456:2508							
ANR	3009364	FunctionDef	setDead (bool dead)		3009363	10					
ANR	3009365	CompoundStatement		76:2:2484:2508	3009363	0					
ANR	3009366	ReturnStatement	return m_dead = dead ;	76:1:2486:2506	3009363	0	True				
ANR	3009367	AssignmentExpression	m_dead = dead		3009363	0		=			
ANR	3009368	Identifier	m_dead		3009363	0					
ANR	3009369	Identifier	dead		3009363	1					
ANR	3009370	ReturnType	bool		3009363	1					
ANR	3009371	Identifier	setDead		3009363	2					
ANR	3009372	ParameterList	bool dead		3009363	3					
ANR	3009373	Parameter	bool dead	75:15:2470:2478	3009363	0	True				
ANR	3009374	ParameterType	bool		3009363	0					
ANR	3009375	Identifier	dead		3009363	1					
ANR	3009376	CFGEntryNode	ENTRY		3009363		True				
ANR	3009377	CFGExitNode	EXIT		3009363		True				
ANR	3009378	Symbol	dead		3009363						
ANR	3009379	Symbol	m_dead		3009363						
ANR	3009380	DeclStmt									
ANR	3009381	Decl							int	int ( const std :: string & )	setLeaseId
ANR	3009382	DeclStmt									
ANR	3009383	Decl							int	int ( int )	setLeaseDuration
ANR	3009384	Function	setMark	84:1:2665:2731							
ANR	3009385	FunctionDef	setMark (bool mark)		3009384	13					
ANR	3009386	CompoundStatement		85:2:2693:2731	3009384	0					
ANR	3009387	ExpressionStatement	this -> m_mark = mark	85:1:2695:2714	3009384	0	True				
ANR	3009388	AssignmentExpression	this -> m_mark = mark		3009384	0		=			
ANR	3009389	PtrMemberAccess	this -> m_mark		3009384	0					
ANR	3009390	Identifier	this		3009384	0					
ANR	3009391	Identifier	m_mark		3009384	1					
ANR	3009392	Identifier	mark		3009384	1					
ANR	3009393	ReturnStatement	return m_mark ;	85:22:2716:2729	3009384	1	True				
ANR	3009394	Identifier	m_mark		3009384	0					
ANR	3009395	ReturnType	bool		3009384	1					
ANR	3009396	Identifier	setMark		3009384	2					
ANR	3009397	ParameterList	bool mark		3009384	3					
ANR	3009398	Parameter	bool mark	84:15:2679:2687	3009384	0	True				
ANR	3009399	ParameterType	bool		3009384	0					
ANR	3009400	Identifier	mark		3009384	1					
ANR	3009401	CFGEntryNode	ENTRY		3009384		True				
ANR	3009402	CFGExitNode	EXIT		3009384		True				
ANR	3009403	Symbol	* this		3009384						
ANR	3009404	Symbol	m_mark		3009384						
ANR	3009405	Symbol	this		3009384						
ANR	3009406	Symbol	this -> m_mark		3009384						
ANR	3009407	Symbol	mark		3009384						
ANR	3009408	Function	getMark	86:1:2735:2781							
ANR	3009409	FunctionDef	getMark ()		3009408	14					
ANR	3009410	CompoundStatement		87:2:2764:2781	3009408	0					
ANR	3009411	ReturnStatement	return m_mark ;	87:1:2766:2779	3009408	0	True				
ANR	3009412	Identifier	m_mark		3009408	0					
ANR	3009413	ReturnType	bool		3009408	1					
ANR	3009414	Identifier	getMark		3009408	2					
ANR	3009415	ParameterList			3009408	3					
ANR	3009416	CFGEntryNode	ENTRY		3009408		True				
ANR	3009417	CFGExitNode	EXIT		3009408		True				
ANR	3009418	Symbol	m_mark		3009408						
ANR	3009419	Function	leaseExpiration	92:1:2950:3028							
ANR	3009420	FunctionDef	leaseExpiration ()		3009419	15					
ANR	3009421	CompoundStatement		93:2:2986:3028	3009419	0					
ANR	3009422	ReturnStatement	return m_lease_time + m_lease_duration ;	93:1:2988:3026	3009419	0	True				
ANR	3009423	AdditiveExpression	m_lease_time + m_lease_duration		3009419	0		+			
ANR	3009424	Identifier	m_lease_time		3009419	0					
ANR	3009425	Identifier	m_lease_duration		3009419	1					
ANR	3009426	ReturnType	int		3009419	1					
ANR	3009427	Identifier	leaseExpiration		3009419	2					
ANR	3009428	ParameterList			3009419	3					
ANR	3009429	CFGEntryNode	ENTRY		3009419		True				
ANR	3009430	CFGExitNode	EXIT		3009419		True				
ANR	3009431	Symbol	m_lease_duration		3009419						
ANR	3009432	Symbol	m_lease_time		3009419						
ANR	3009433	DeclStmt									
ANR	3009434	Decl							bool	bool ( FILE * fp )	fread
ANR	3009435	DeclStmt									
ANR	3009436	Decl							classad :: ClassAd	classad :: ClassAd *	m_lease_ad
ANR	3009437	DeclStmt									
ANR	3009438	Decl							std :: string	std :: string	m_lease_id
ANR	3009439	DeclStmt									
ANR	3009440	Decl							int	int	m_lease_duration
ANR	3009441	DeclStmt									
ANR	3009442	Decl							int	int	m_lease_time
ANR	3009443	DeclStmt									
ANR	3009444	Decl							bool	bool	m_release_lease_when_done
ANR	3009445	DeclStmt									
ANR	3009446	Decl							bool	bool	m_mark
ANR	3009447	DeclStmt									
ANR	3009448	Decl							bool	bool	m_dead
ANR	3009449	DeclStmt									
ANR	3009450	Decl							int	"int ( const std :: list < const DCLeaseManagerLease * > & source_list , std :: list < const DCLeaseManagerLease * > & dest_list )"	DCLeaseManagerLease_copyList
ANR	3009451	DeclStmt									
ANR	3009452	Decl							int	"int ( const std :: list < DCLeaseManagerLease * > & source_list , std :: list < DCLeaseManagerLease * > & dest_list )"	DCLeaseManagerLease_copyList
ANR	3009453	DeclStmt									
ANR	3009454	Decl							int	int ( std :: list < DCLeaseManagerLease * > & lease_list )	DCLeaseManagerLease_freeList
ANR	3009455	DeclStmt									
ANR	3009456	Decl							int	"int ( std :: list < DCLeaseManagerLease * > & lease_list , const std :: list < const DCLeaseManagerLease * > & remove_list )"	DCLeaseManagerLease_removeLeases
ANR	3009457	DeclStmt									
ANR	3009458	Decl							int	"int ( std :: list < DCLeaseManagerLease * > & lease_list , const std :: list < const DCLeaseManagerLease * > & update_list )"	DCLeaseManagerLease_updateLeases
ANR	3009459	DeclStmt									
ANR	3009460	Decl							int	"int ( std :: list < DCLeaseManagerLease * > & lease_list , bool mark )"	DCLeaseManagerLease_markLeases
ANR	3009461	DeclStmt									
ANR	3009462	Decl							int	"int ( std :: list < DCLeaseManagerLease * > & lease_list , bool mark )"	DCLeaseManagerLease_removeMarkedLeases
ANR	3009463	DeclStmt									
ANR	3009464	Decl							int	"int ( const std :: list < const DCLeaseManagerLease * > & lease_list , bool mark , std :: list < const DCLeaseManagerLease * > & marked_lease_list )"	DCLeaseManagerLease_getMarkedLeases
ANR	3009465	DeclStmt									
ANR	3009466	Decl							int	"int ( const std :: list < const DCLeaseManagerLease * > & lease_list , bool mark )"	DCLeaseManagerLease_countMarkedLeases
ANR	3009467	DeclStmt									
ANR	3009468	Decl							std :: list < const DCLeaseManagerLease * >	std :: list < const DCLeaseManagerLease * > & ( const std :: list < DCLeaseManagerLease * > & non_const_list )	DCLeaseManagerLease_getConstList
ANR	3009469	DeclStmt									
ANR	3009470	Decl							int	"int ( const std :: list < const DCLeaseManagerLease * > & lease_list , FILE * fp )"	DCLeaseManagerLease_fwriteList
ANR	3009471	DeclStmt									
ANR	3009472	Decl							int	"int ( std :: list < DCLeaseManagerLease * > & lease_list , FILE * fp )"	DCLeaseManagerLease_freadList
