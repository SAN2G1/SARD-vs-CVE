command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5447106	File	data/converged/CVE-2011-4930_htcondor/tool.cpp								
ANR	5447107	DeclStmt									
ANR	5447108	Decl							void	void ( void )	computeRealAction
ANR	5447109	DeclStmt									
ANR	5447110	Decl							bool	"bool ( DaemonList * daemon_list , StringList * name_list )"	resolveNames
ANR	5447111	DeclStmt									
ANR	5447112	Decl							void	void ( Daemon * d )	doCommand
ANR	5447113	DeclStmt									
ANR	5447114	Decl							int	"int ( int argc , char * argv [ ] , char * MyName )"	doCommands
ANR	5447115	DeclStmt									
ANR	5447116	Decl							void	void ( )	version
ANR	5447117	DeclStmt									
ANR	5447118	Decl							void	void ( )	handleAll
ANR	5447119	DeclStmt									
ANR	5447120	Decl							void	void ( char * addr )	doSquawk
ANR	5447121	DeclStmt									
ANR	5447122	Decl							int	"int ( char * line , char * addr )"	handleSquawk
ANR	5447123	DeclStmt									
ANR	5447124	Decl							int	int ( char * addr )	doSquawkReconnect
ANR	5447125	DeclStmt									
ANR	5447126	Decl							void	void ( char * token )	squawkHelp
ANR	5447127	DeclStmt									
ANR	5447128	Decl							int	"int ( ClassAd * ad , char * filename )"	printAdToFile
ANR	5447129	DeclStmt									
ANR	5447130	Decl							int	"int ( const char * s1 , const char * s2 )"	strncmp_auto
ANR	5447131	DeclStmt									
ANR	5447132	Decl							int	int	cmd
ANR	5447133	DeclStmt									
ANR	5447134	Decl							int	int	real_cmd
ANR	5447135	DeclStmt									
ANR	5447136	Decl							daemon_t	daemon_t	dt
ANR	5447137	DeclStmt									
ANR	5447138	Decl							daemon_t	daemon_t	real_dt
ANR	5447139	DeclStmt									
ANR	5447140	Decl							DCCollector	DCCollector *	pool
ANR	5447141	DeclStmt									
ANR	5447142	Decl							bool	bool	fast
ANR	5447143	DeclStmt									
ANR	5447144	Decl							bool	bool	peaceful_shutdown
ANR	5447145	DeclStmt									
ANR	5447146	Decl							bool	bool	full
ANR	5447147	DeclStmt									
ANR	5447148	Decl							bool	bool	all
ANR	5447149	DeclStmt									
ANR	5447150	Decl							char	char *	constraint
ANR	5447151	DeclStmt									
ANR	5447152	Decl							const char	const char *	subsys
ANR	5447153	DeclStmt									
ANR	5447154	Decl							const char	const char *	exec_program
ANR	5447155	DeclStmt									
ANR	5447156	Decl							int	int	takes_subsys
ANR	5447157	DeclStmt									
ANR	5447158	Decl							int	int	cmd_set
ANR	5447159	DeclStmt									
ANR	5447160	Decl							char	char *	subsys_arg
ANR	5447161	DeclStmt									
ANR	5447162	Decl							bool	bool	IgnoreMissingDaemon
ANR	5447163	DeclStmt									
ANR	5447164	Decl							bool	bool	all_good
ANR	5447165	DeclStmt									
ANR	5447166	Decl							"HashTable < MyString , bool >"	"HashTable < MyString , bool >"	addresses_sent
ANR	5447167	Function	usage	92:0:2754:7631							
ANR	5447168	FunctionDef	"usage (char * str , int iExitCode)"		5447167	0					
ANR	5447169	CompoundStatement		94:0:2793:7631	5447167	0					
ANR	5447170	IfStatement	if ( ! str )		5447167	0					
ANR	5447171	Condition	! str	95:5:2800:2804	5447167	0	True				
ANR	5447172	UnaryOperationExpression	! str		5447167	0					
ANR	5447173	UnaryOperator	!		5447167	0					
ANR	5447174	Identifier	str		5447167	1					
ANR	5447175	CompoundStatement		2:13:14:14	5447167	1					
ANR	5447176	ExpressionStatement	"fprintf ( stderr , ""Use \\""-help\\"" to see usage information\\n"" )"	96:2:2812:2873	5447167	0	True				
ANR	5447177	CallExpression	"fprintf ( stderr , ""Use \\""-help\\"" to see usage information\\n"" )"		5447167	0					
ANR	5447178	Callee	fprintf		5447167	0					
ANR	5447179	Identifier	fprintf		5447167	0					
ANR	5447180	ArgumentList	stderr		5447167	1					
ANR	5447181	Argument	stderr		5447167	0					
ANR	5447182	Identifier	stderr		5447167	0					
ANR	5447183	Argument	"""Use \\""-help\\"" to see usage information\\n"""		5447167	1					
ANR	5447184	PrimaryExpression	"""Use \\""-help\\"" to see usage information\\n"""		5447167	0					
ANR	5447185	ExpressionStatement	exit ( 1 )	97:2:2877:2886	5447167	1	True				
ANR	5447186	CallExpression	exit ( 1 )		5447167	0					
ANR	5447187	Callee	exit		5447167	0					
ANR	5447188	Identifier	exit		5447167	0					
ANR	5447189	ArgumentList	1		5447167	1					
ANR	5447190	Argument	1		5447167	0					
ANR	5447191	PrimaryExpression	1		5447167	0					
ANR	5447192	IdentifierDeclStatement	"char * tmp = strchr ( str , '_' ) ;"	100:1:2893:2923	5447167	1	True				
ANR	5447193	IdentifierDecl	"* tmp = strchr ( str , '_' )"		5447167	0					
ANR	5447194	IdentifierDeclType	char *		5447167	0					
ANR	5447195	Identifier	tmp		5447167	1					
ANR	5447196	AssignmentExpression	"* tmp = strchr ( str , '_' )"		5447167	2		=			
ANR	5447197	Identifier	tmp		5447167	0					
ANR	5447198	CallExpression	"strchr ( str , '_' )"		5447167	1					
ANR	5447199	Callee	strchr		5447167	0					
ANR	5447200	Identifier	strchr		5447167	0					
ANR	5447201	ArgumentList	str		5447167	1					
ANR	5447202	Argument	str		5447167	0					
ANR	5447203	Identifier	str		5447167	0					
ANR	5447204	Argument	'_'		5447167	1					
ANR	5447205	PrimaryExpression	'_'		5447167	0					
ANR	5447206	IfStatement	if ( ! tmp )		5447167	2					
ANR	5447207	Condition	! tmp	101:5:2930:2933	5447167	0	True				
ANR	5447208	UnaryOperationExpression	! tmp		5447167	0					
ANR	5447209	UnaryOperator	!		5447167	0					
ANR	5447210	Identifier	tmp		5447167	1					
ANR	5447211	CompoundStatement		8:12:143:143	5447167	1					
ANR	5447212	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [command] "" , str )"	102:2:2941:2987	5447167	0	True				
ANR	5447213	CallExpression	"fprintf ( stderr , ""Usage: %s [command] "" , str )"		5447167	0					
ANR	5447214	Callee	fprintf		5447167	0					
ANR	5447215	Identifier	fprintf		5447167	0					
ANR	5447216	ArgumentList	stderr		5447167	1					
ANR	5447217	Argument	stderr		5447167	0					
ANR	5447218	Identifier	stderr		5447167	0					
ANR	5447219	Argument	"""Usage: %s [command] """		5447167	1					
ANR	5447220	PrimaryExpression	"""Usage: %s [command] """		5447167	0					
ANR	5447221	Argument	str		5447167	2					
ANR	5447222	Identifier	str		5447167	0					
ANR	5447223	ElseStatement	else		5447167	0					
ANR	5447224	CompoundStatement		10:8:203:203	5447167	0					
ANR	5447225	ExpressionStatement	"fprintf ( stderr , ""Usage: %s "" , str )"	104:2:3001:3037	5447167	0	True				
ANR	5447226	CallExpression	"fprintf ( stderr , ""Usage: %s "" , str )"		5447167	0					
ANR	5447227	Callee	fprintf		5447167	0					
ANR	5447228	Identifier	fprintf		5447167	0					
ANR	5447229	ArgumentList	stderr		5447167	1					
ANR	5447230	Argument	stderr		5447167	0					
ANR	5447231	Identifier	stderr		5447167	0					
ANR	5447232	Argument	"""Usage: %s """		5447167	1					
ANR	5447233	PrimaryExpression	"""Usage: %s """		5447167	0					
ANR	5447234	Argument	str		5447167	2					
ANR	5447235	Identifier	str		5447167	0					
ANR	5447236	ExpressionStatement	"fprintf ( stderr , ""[general-options] [targets]"" )"	107:1:3044:3092	5447167	3	True				
ANR	5447237	CallExpression	"fprintf ( stderr , ""[general-options] [targets]"" )"		5447167	0					
ANR	5447238	Callee	fprintf		5447167	0					
ANR	5447239	Identifier	fprintf		5447167	0					
ANR	5447240	ArgumentList	stderr		5447167	1					
ANR	5447241	Argument	stderr		5447167	0					
ANR	5447242	Identifier	stderr		5447167	0					
ANR	5447243	Argument	"""[general-options] [targets]"""		5447167	1					
ANR	5447244	PrimaryExpression	"""[general-options] [targets]"""		5447167	0					
ANR	5447245	IfStatement	if ( takes_subsys )		5447167	4					
ANR	5447246	Condition	takes_subsys	108:5:3099:3110	5447167	0	True				
ANR	5447247	Identifier	takes_subsys		5447167	0					
ANR	5447248	CompoundStatement		15:20:320:320	5447167	1					
ANR	5447249	ExpressionStatement	"fprintf ( stderr , "" [daemon]"" )"	109:2:3118:3148	5447167	0	True				
ANR	5447250	CallExpression	"fprintf ( stderr , "" [daemon]"" )"		5447167	0					
ANR	5447251	Callee	fprintf		5447167	0					
ANR	5447252	Identifier	fprintf		5447167	0					
ANR	5447253	ArgumentList	stderr		5447167	1					
ANR	5447254	Argument	stderr		5447167	0					
ANR	5447255	Identifier	stderr		5447167	0					
ANR	5447256	Argument	""" [daemon]"""		5447167	1					
ANR	5447257	PrimaryExpression	""" [daemon]"""		5447167	0					
ANR	5447258	ExpressionStatement	"fprintf ( stderr , ""\\nwhere [general-options] can be zero or more of:\\n"" )"	111:1:3154:3226	5447167	5	True				
ANR	5447259	CallExpression	"fprintf ( stderr , ""\\nwhere [general-options] can be zero or more of:\\n"" )"		5447167	0					
ANR	5447260	Callee	fprintf		5447167	0					
ANR	5447261	Identifier	fprintf		5447167	0					
ANR	5447262	ArgumentList	stderr		5447167	1					
ANR	5447263	Argument	stderr		5447167	0					
ANR	5447264	Identifier	stderr		5447167	0					
ANR	5447265	Argument	"""\\nwhere [general-options] can be zero or more of:\\n"""		5447167	1					
ANR	5447266	PrimaryExpression	"""\\nwhere [general-options] can be zero or more of:\\n"""		5447167	0					
ANR	5447267	ExpressionStatement	"fprintf ( stderr , ""    -help\\t\\tgives this usage information\\n"" )"	112:1:3229:3293	5447167	6	True				
ANR	5447268	CallExpression	"fprintf ( stderr , ""    -help\\t\\tgives this usage information\\n"" )"		5447167	0					
ANR	5447269	Callee	fprintf		5447167	0					
ANR	5447270	Identifier	fprintf		5447167	0					
ANR	5447271	ArgumentList	stderr		5447167	1					
ANR	5447272	Argument	stderr		5447167	0					
ANR	5447273	Identifier	stderr		5447167	0					
ANR	5447274	Argument	"""    -help\\t\\tgives this usage information\\n"""		5447167	1					
ANR	5447275	PrimaryExpression	"""    -help\\t\\tgives this usage information\\n"""		5447167	0					
ANR	5447276	ExpressionStatement	"fprintf ( stderr , ""    -version\\t\\tprints the version\\n"" )"	113:1:3296:3353	5447167	7	True				
ANR	5447277	CallExpression	"fprintf ( stderr , ""    -version\\t\\tprints the version\\n"" )"		5447167	0					
ANR	5447278	Callee	fprintf		5447167	0					
ANR	5447279	Identifier	fprintf		5447167	0					
ANR	5447280	ArgumentList	stderr		5447167	1					
ANR	5447281	Argument	stderr		5447167	0					
ANR	5447282	Identifier	stderr		5447167	0					
ANR	5447283	Argument	"""    -version\\t\\tprints the version\\n"""		5447167	1					
ANR	5447284	PrimaryExpression	"""    -version\\t\\tprints the version\\n"""		5447167	0					
ANR	5447285	ExpressionStatement	"fprintf ( stderr , ""    -pool hostname\\tuse the given central manager to find daemons\\n"" )"	114:1:3356:3449	5447167	8	True				
ANR	5447286	CallExpression	"fprintf ( stderr , ""    -pool hostname\\tuse the given central manager to find daemons\\n"" )"		5447167	0					
ANR	5447287	Callee	fprintf		5447167	0					
ANR	5447288	Identifier	fprintf		5447167	0					
ANR	5447289	ArgumentList	stderr		5447167	1					
ANR	5447290	Argument	stderr		5447167	0					
ANR	5447291	Identifier	stderr		5447167	0					
ANR	5447292	Argument	"""    -pool hostname\\tuse the given central manager to find daemons\\n"""		5447167	1					
ANR	5447293	PrimaryExpression	"""    -pool hostname\\tuse the given central manager to find daemons\\n"""		5447167	0					
ANR	5447294	IfStatement	if ( cmd == DAEMONS_OFF || cmd == DAEMON_OFF || cmd == RESTART )		5447167	9					
ANR	5447295	Condition	cmd == DAEMONS_OFF || cmd == DAEMON_OFF || cmd == RESTART	116:5:3456:3512	5447167	0	True				
ANR	5447296	OrExpression	cmd == DAEMONS_OFF || cmd == DAEMON_OFF || cmd == RESTART		5447167	0		||			
ANR	5447297	EqualityExpression	cmd == DAEMONS_OFF		5447167	0		==			
ANR	5447298	Identifier	cmd		5447167	0					
ANR	5447299	Identifier	DAEMONS_OFF		5447167	1					
ANR	5447300	OrExpression	cmd == DAEMON_OFF || cmd == RESTART		5447167	1		||			
ANR	5447301	EqualityExpression	cmd == DAEMON_OFF		5447167	0		==			
ANR	5447302	Identifier	cmd		5447167	0					
ANR	5447303	Identifier	DAEMON_OFF		5447167	1					
ANR	5447304	EqualityExpression	cmd == RESTART		5447167	1		==			
ANR	5447305	Identifier	cmd		5447167	0					
ANR	5447306	Identifier	RESTART		5447167	1					
ANR	5447307	CompoundStatement		23:65:722:722	5447167	1					
ANR	5447308	ExpressionStatement	"fprintf ( stderr , ""    -graceful\\t\\tgracefully shutdown daemons %s\\n"" , ""(the default)"" )"	117:2:3520:3613	5447167	0	True				
ANR	5447309	CallExpression	"fprintf ( stderr , ""    -graceful\\t\\tgracefully shutdown daemons %s\\n"" , ""(the default)"" )"		5447167	0					
ANR	5447310	Callee	fprintf		5447167	0					
ANR	5447311	Identifier	fprintf		5447167	0					
ANR	5447312	ArgumentList	stderr		5447167	1					
ANR	5447313	Argument	stderr		5447167	0					
ANR	5447314	Identifier	stderr		5447167	0					
ANR	5447315	Argument	"""    -graceful\\t\\tgracefully shutdown daemons %s\\n"""		5447167	1					
ANR	5447316	PrimaryExpression	"""    -graceful\\t\\tgracefully shutdown daemons %s\\n"""		5447167	0					
ANR	5447317	Argument	"""(the default)"""		5447167	2					
ANR	5447318	PrimaryExpression	"""(the default)"""		5447167	0					
ANR	5447319	ExpressionStatement	"fprintf ( stderr , ""    -fast\\t\\tquickly shutdown daemons\\n"" )"	119:2:3617:3677	5447167	1	True				
ANR	5447320	CallExpression	"fprintf ( stderr , ""    -fast\\t\\tquickly shutdown daemons\\n"" )"		5447167	0					
ANR	5447321	Callee	fprintf		5447167	0					
ANR	5447322	Identifier	fprintf		5447167	0					
ANR	5447323	ArgumentList	stderr		5447167	1					
ANR	5447324	Argument	stderr		5447167	0					
ANR	5447325	Identifier	stderr		5447167	0					
ANR	5447326	Argument	"""    -fast\\t\\tquickly shutdown daemons\\n"""		5447167	1					
ANR	5447327	PrimaryExpression	"""    -fast\\t\\tquickly shutdown daemons\\n"""		5447167	0					
ANR	5447328	ExpressionStatement	"fprintf ( stderr , ""    -peaceful\\t\\twait indefinitely for jobs to finish\\n"" )"	120:2:3681:3757	5447167	2	True				
ANR	5447329	CallExpression	"fprintf ( stderr , ""    -peaceful\\t\\twait indefinitely for jobs to finish\\n"" )"		5447167	0					
ANR	5447330	Callee	fprintf		5447167	0					
ANR	5447331	Identifier	fprintf		5447167	0					
ANR	5447332	ArgumentList	stderr		5447167	1					
ANR	5447333	Argument	stderr		5447167	0					
ANR	5447334	Identifier	stderr		5447167	0					
ANR	5447335	Argument	"""    -peaceful\\t\\twait indefinitely for jobs to finish\\n"""		5447167	1					
ANR	5447336	PrimaryExpression	"""    -peaceful\\t\\twait indefinitely for jobs to finish\\n"""		5447167	0					
ANR	5447337	IfStatement	if ( cmd == VACATE_CLAIM )		5447167	10					
ANR	5447338	Condition	cmd == VACATE_CLAIM	122:5:3767:3785	5447167	0	True				
ANR	5447339	EqualityExpression	cmd == VACATE_CLAIM		5447167	0		==			
ANR	5447340	Identifier	cmd		5447167	0					
ANR	5447341	Identifier	VACATE_CLAIM		5447167	1					
ANR	5447342	CompoundStatement		29:27:995:995	5447167	1					
ANR	5447343	ExpressionStatement	"fprintf ( stderr , ""    -graceful\\t\\tgracefully vacate the jobs (the default)\\n"" )"	123:2:3793:3879	5447167	0	True				
ANR	5447344	CallExpression	"fprintf ( stderr , ""    -graceful\\t\\tgracefully vacate the jobs (the default)\\n"" )"		5447167	0					
ANR	5447345	Callee	fprintf		5447167	0					
ANR	5447346	Identifier	fprintf		5447167	0					
ANR	5447347	ArgumentList	stderr		5447167	1					
ANR	5447348	Argument	stderr		5447167	0					
ANR	5447349	Identifier	stderr		5447167	0					
ANR	5447350	Argument	"""    -graceful\\t\\tgracefully vacate the jobs (the default)\\n"""		5447167	1					
ANR	5447351	PrimaryExpression	"""    -graceful\\t\\tgracefully vacate the jobs (the default)\\n"""		5447167	0					
ANR	5447352	ExpressionStatement	"fprintf ( stderr , ""    -fast\\t\\tquickly vacate the jobs (no checkpointing)\\n"" )"	125:2:3883:3967	5447167	1	True				
ANR	5447353	CallExpression	"fprintf ( stderr , ""    -fast\\t\\tquickly vacate the jobs (no checkpointing)\\n"" )"		5447167	0					
ANR	5447354	Callee	fprintf		5447167	0					
ANR	5447355	Identifier	fprintf		5447167	0					
ANR	5447356	ArgumentList	stderr		5447167	1					
ANR	5447357	Argument	stderr		5447167	0					
ANR	5447358	Identifier	stderr		5447167	0					
ANR	5447359	Argument	"""    -fast\\t\\tquickly vacate the jobs (no checkpointing)\\n"""		5447167	1					
ANR	5447360	PrimaryExpression	"""    -fast\\t\\tquickly vacate the jobs (no checkpointing)\\n"""		5447167	0					
ANR	5447361	ExpressionStatement	"fprintf ( stderr , ""where [targets] can be zero or more of:\\n"" )"	128:1:3973:4035	5447167	11	True				
ANR	5447362	CallExpression	"fprintf ( stderr , ""where [targets] can be zero or more of:\\n"" )"		5447167	0					
ANR	5447363	Callee	fprintf		5447167	0					
ANR	5447364	Identifier	fprintf		5447167	0					
ANR	5447365	ArgumentList	stderr		5447167	1					
ANR	5447366	Argument	stderr		5447167	0					
ANR	5447367	Identifier	stderr		5447167	0					
ANR	5447368	Argument	"""where [targets] can be zero or more of:\\n"""		5447167	1					
ANR	5447369	PrimaryExpression	"""where [targets] can be zero or more of:\\n"""		5447167	0					
ANR	5447370	ExpressionStatement	"fprintf ( stderr , ""    -all\\t\\tall hosts in your pool (overrides other targets)\\n"" )"	129:1:4038:4126	5447167	12	True				
ANR	5447371	CallExpression	"fprintf ( stderr , ""    -all\\t\\tall hosts in your pool (overrides other targets)\\n"" )"		5447167	0					
ANR	5447372	Callee	fprintf		5447167	0					
ANR	5447373	Identifier	fprintf		5447167	0					
ANR	5447374	ArgumentList	stderr		5447167	1					
ANR	5447375	Argument	stderr		5447167	0					
ANR	5447376	Identifier	stderr		5447167	0					
ANR	5447377	Argument	"""    -all\\t\\tall hosts in your pool (overrides other targets)\\n"""		5447167	1					
ANR	5447378	PrimaryExpression	"""    -all\\t\\tall hosts in your pool (overrides other targets)\\n"""		5447167	0					
ANR	5447379	ExpressionStatement	"fprintf ( stderr , ""    hostname\\t\\tgiven host\\n"" )"	131:1:4129:4178	5447167	13	True				
ANR	5447380	CallExpression	"fprintf ( stderr , ""    hostname\\t\\tgiven host\\n"" )"		5447167	0					
ANR	5447381	Callee	fprintf		5447167	0					
ANR	5447382	Identifier	fprintf		5447167	0					
ANR	5447383	ArgumentList	stderr		5447167	1					
ANR	5447384	Argument	stderr		5447167	0					
ANR	5447385	Identifier	stderr		5447167	0					
ANR	5447386	Argument	"""    hostname\\t\\tgiven host\\n"""		5447167	1					
ANR	5447387	PrimaryExpression	"""    hostname\\t\\tgiven host\\n"""		5447167	0					
ANR	5447388	ExpressionStatement	"fprintf ( stderr , ""    <ip.address:port>\\tgiven \\""sinful string\\""\\n"" )"	132:1:4181:4250	5447167	14	True				
ANR	5447389	CallExpression	"fprintf ( stderr , ""    <ip.address:port>\\tgiven \\""sinful string\\""\\n"" )"		5447167	0					
ANR	5447390	Callee	fprintf		5447167	0					
ANR	5447391	Identifier	fprintf		5447167	0					
ANR	5447392	ArgumentList	stderr		5447167	1					
ANR	5447393	Argument	stderr		5447167	0					
ANR	5447394	Identifier	stderr		5447167	0					
ANR	5447395	Argument	"""    <ip.address:port>\\tgiven \\""sinful string\\""\\n"""		5447167	1					
ANR	5447396	PrimaryExpression	"""    <ip.address:port>\\tgiven \\""sinful string\\""\\n"""		5447167	0					
ANR	5447397	ExpressionStatement	"fprintf ( stderr , ""  (for compatibility with other Condor tools, you can also use:)\\n"" )"	133:1:4253:4344	5447167	15	True				
ANR	5447398	CallExpression	"fprintf ( stderr , ""  (for compatibility with other Condor tools, you can also use:)\\n"" )"		5447167	0					
ANR	5447399	Callee	fprintf		5447167	0					
ANR	5447400	Identifier	fprintf		5447167	0					
ANR	5447401	ArgumentList	stderr		5447167	1					
ANR	5447402	Argument	stderr		5447167	0					
ANR	5447403	Identifier	stderr		5447167	0					
ANR	5447404	Argument	"""  (for compatibility with other Condor tools, you can also use:)\\n"""		5447167	1					
ANR	5447405	PrimaryExpression	"""  (for compatibility with other Condor tools, you can also use:)\\n"""		5447167	0					
ANR	5447406	ExpressionStatement	"fprintf ( stderr , ""    -name name\\tgiven host\\n"" )"	135:1:4347:4396	5447167	16	True				
ANR	5447407	CallExpression	"fprintf ( stderr , ""    -name name\\tgiven host\\n"" )"		5447167	0					
ANR	5447408	Callee	fprintf		5447167	0					
ANR	5447409	Identifier	fprintf		5447167	0					
ANR	5447410	ArgumentList	stderr		5447167	1					
ANR	5447411	Argument	stderr		5447167	0					
ANR	5447412	Identifier	stderr		5447167	0					
ANR	5447413	Argument	"""    -name name\\tgiven host\\n"""		5447167	1					
ANR	5447414	PrimaryExpression	"""    -name name\\tgiven host\\n"""		5447167	0					
ANR	5447415	ExpressionStatement	"fprintf ( stderr , ""    -constraint constraint\\tconstraint\\n"" )"	136:1:4399:4460	5447167	17	True				
ANR	5447416	CallExpression	"fprintf ( stderr , ""    -constraint constraint\\tconstraint\\n"" )"		5447167	0					
ANR	5447417	Callee	fprintf		5447167	0					
ANR	5447418	Identifier	fprintf		5447167	0					
ANR	5447419	ArgumentList	stderr		5447167	1					
ANR	5447420	Argument	stderr		5447167	0					
ANR	5447421	Identifier	stderr		5447167	0					
ANR	5447422	Argument	"""    -constraint constraint\\tconstraint\\n"""		5447167	1					
ANR	5447423	PrimaryExpression	"""    -constraint constraint\\tconstraint\\n"""		5447167	0					
ANR	5447424	ExpressionStatement	"fprintf ( stderr , ""    -addr <addr:port>\\tgiven \\""sinful string\\""\\n"" )"	137:1:4463:4532	5447167	18	True				
ANR	5447425	CallExpression	"fprintf ( stderr , ""    -addr <addr:port>\\tgiven \\""sinful string\\""\\n"" )"		5447167	0					
ANR	5447426	Callee	fprintf		5447167	0					
ANR	5447427	Identifier	fprintf		5447167	0					
ANR	5447428	ArgumentList	stderr		5447167	1					
ANR	5447429	Argument	stderr		5447167	0					
ANR	5447430	Identifier	stderr		5447167	0					
ANR	5447431	Argument	"""    -addr <addr:port>\\tgiven \\""sinful string\\""\\n"""		5447167	1					
ANR	5447432	PrimaryExpression	"""    -addr <addr:port>\\tgiven \\""sinful string\\""\\n"""		5447167	0					
ANR	5447433	ExpressionStatement	"fprintf ( stderr , ""  (if no targets are specified, the local host is used)\\n"" )"	138:1:4535:4613	5447167	19	True				
ANR	5447434	CallExpression	"fprintf ( stderr , ""  (if no targets are specified, the local host is used)\\n"" )"		5447167	0					
ANR	5447435	Callee	fprintf		5447167	0					
ANR	5447436	Identifier	fprintf		5447167	0					
ANR	5447437	ArgumentList	stderr		5447167	1					
ANR	5447438	Argument	stderr		5447167	0					
ANR	5447439	Identifier	stderr		5447167	0					
ANR	5447440	Argument	"""  (if no targets are specified, the local host is used)\\n"""		5447167	1					
ANR	5447441	PrimaryExpression	"""  (if no targets are specified, the local host is used)\\n"""		5447167	0					
ANR	5447442	IfStatement	if ( takes_subsys )		5447167	20					
ANR	5447443	Condition	takes_subsys	139:5:4620:4631	5447167	0	True				
ANR	5447444	Identifier	takes_subsys		5447167	0					
ANR	5447445	CompoundStatement		46:20:1841:1841	5447167	1					
ANR	5447446	ExpressionStatement	"fprintf ( stderr , ""where [daemon] can be one of:\\n"" )"	140:2:4639:4691	5447167	0	True				
ANR	5447447	CallExpression	"fprintf ( stderr , ""where [daemon] can be one of:\\n"" )"		5447167	0					
ANR	5447448	Callee	fprintf		5447167	0					
ANR	5447449	Identifier	fprintf		5447167	0					
ANR	5447450	ArgumentList	stderr		5447167	1					
ANR	5447451	Argument	stderr		5447167	0					
ANR	5447452	Identifier	stderr		5447167	0					
ANR	5447453	Argument	"""where [daemon] can be one of:\\n"""		5447167	1					
ANR	5447454	PrimaryExpression	"""where [daemon] can be one of:\\n"""		5447167	0					
ANR	5447455	ExpressionStatement	"fprintf ( stderr , ""    -daemon <name>\\tspecify the target daemon by name.\\n"" )"	141:2:4695:4777	5447167	1	True				
ANR	5447456	CallExpression	"fprintf ( stderr , ""    -daemon <name>\\tspecify the target daemon by name.\\n"" )"		5447167	0					
ANR	5447457	Callee	fprintf		5447167	0					
ANR	5447458	Identifier	fprintf		5447167	0					
ANR	5447459	ArgumentList	stderr		5447167	1					
ANR	5447460	Argument	stderr		5447167	0					
ANR	5447461	Identifier	stderr		5447167	0					
ANR	5447462	Argument	"""    -daemon <name>\\tspecify the target daemon by name.\\n"""		5447167	1					
ANR	5447463	PrimaryExpression	"""    -daemon <name>\\tspecify the target daemon by name.\\n"""		5447167	0					
ANR	5447464	ExpressionStatement	"fprintf ( stderr , ""    The following named daemon options are deprecated, and\\n"" )"	143:2:4781:4864	5447167	2	True				
ANR	5447465	CallExpression	"fprintf ( stderr , ""    The following named daemon options are deprecated, and\\n"" )"		5447167	0					
ANR	5447466	Callee	fprintf		5447167	0					
ANR	5447467	Identifier	fprintf		5447167	0					
ANR	5447468	ArgumentList	stderr		5447167	1					
ANR	5447469	Argument	stderr		5447167	0					
ANR	5447470	Identifier	stderr		5447167	0					
ANR	5447471	Argument	"""    The following named daemon options are deprecated, and\\n"""		5447167	1					
ANR	5447472	PrimaryExpression	"""    The following named daemon options are deprecated, and\\n"""		5447167	0					
ANR	5447473	ExpressionStatement	"fprintf ( stderr , ""    may be discontinued in a future release:\\n"" )"	145:2:4868:4934	5447167	3	True				
ANR	5447474	CallExpression	"fprintf ( stderr , ""    may be discontinued in a future release:\\n"" )"		5447167	0					
ANR	5447475	Callee	fprintf		5447167	0					
ANR	5447476	Identifier	fprintf		5447167	0					
ANR	5447477	ArgumentList	stderr		5447167	1					
ANR	5447478	Argument	stderr		5447167	0					
ANR	5447479	Identifier	stderr		5447167	0					
ANR	5447480	Argument	"""    may be discontinued in a future release:\\n"""		5447167	1					
ANR	5447481	PrimaryExpression	"""    may be discontinued in a future release:\\n"""		5447167	0					
ANR	5447482	IfStatement	if ( cmd == DAEMONS_OFF || cmd == DAEMON_OFF )		5447167	4					
ANR	5447483	Condition	cmd == DAEMONS_OFF || cmd == DAEMON_OFF	146:6:4942:4980	5447167	0	True				
ANR	5447484	OrExpression	cmd == DAEMONS_OFF || cmd == DAEMON_OFF		5447167	0		||			
ANR	5447485	EqualityExpression	cmd == DAEMONS_OFF		5447167	0		==			
ANR	5447486	Identifier	cmd		5447167	0					
ANR	5447487	Identifier	DAEMONS_OFF		5447167	1					
ANR	5447488	EqualityExpression	cmd == DAEMON_OFF		5447167	1		==			
ANR	5447489	Identifier	cmd		5447167	0					
ANR	5447490	Identifier	DAEMON_OFF		5447167	1					
ANR	5447491	CompoundStatement		53:48:2190:2190	5447167	1					
ANR	5447492	ExpressionStatement	"fprintf ( stderr , ""    -master\\n"" )"	147:3:4989:5023	5447167	0	True				
ANR	5447493	CallExpression	"fprintf ( stderr , ""    -master\\n"" )"		5447167	0					
ANR	5447494	Callee	fprintf		5447167	0					
ANR	5447495	Identifier	fprintf		5447167	0					
ANR	5447496	ArgumentList	stderr		5447167	1					
ANR	5447497	Argument	stderr		5447167	0					
ANR	5447498	Identifier	stderr		5447167	0					
ANR	5447499	Argument	"""    -master\\n"""		5447167	1					
ANR	5447500	PrimaryExpression	"""    -master\\n"""		5447167	0					
ANR	5447501	ElseStatement	else		5447167	0					
ANR	5447502	CompoundStatement		55:9:2240:2240	5447167	0					
ANR	5447503	ExpressionStatement	"fprintf ( stderr , ""    -master\\t\\t(the default)\\n"" )"	149:3:5039:5090	5447167	0	True				
ANR	5447504	CallExpression	"fprintf ( stderr , ""    -master\\t\\t(the default)\\n"" )"		5447167	0					
ANR	5447505	Callee	fprintf		5447167	0					
ANR	5447506	Identifier	fprintf		5447167	0					
ANR	5447507	ArgumentList	stderr		5447167	1					
ANR	5447508	Argument	stderr		5447167	0					
ANR	5447509	Identifier	stderr		5447167	0					
ANR	5447510	Argument	"""    -master\\t\\t(the default)\\n"""		5447167	1					
ANR	5447511	PrimaryExpression	"""    -master\\t\\t(the default)\\n"""		5447167	0					
ANR	5447512	ExpressionStatement	"fprintf ( stderr , ""    -startd\\n"" )"	151:2:5098:5132	5447167	5	True				
ANR	5447513	CallExpression	"fprintf ( stderr , ""    -startd\\n"" )"		5447167	0					
ANR	5447514	Callee	fprintf		5447167	0					
ANR	5447515	Identifier	fprintf		5447167	0					
ANR	5447516	ArgumentList	stderr		5447167	1					
ANR	5447517	Argument	stderr		5447167	0					
ANR	5447518	Identifier	stderr		5447167	0					
ANR	5447519	Argument	"""    -startd\\n"""		5447167	1					
ANR	5447520	PrimaryExpression	"""    -startd\\n"""		5447167	0					
ANR	5447521	ExpressionStatement	"fprintf ( stderr , ""    -schedd\\n"" )"	152:2:5136:5170	5447167	6	True				
ANR	5447522	CallExpression	"fprintf ( stderr , ""    -schedd\\n"" )"		5447167	0					
ANR	5447523	Callee	fprintf		5447167	0					
ANR	5447524	Identifier	fprintf		5447167	0					
ANR	5447525	ArgumentList	stderr		5447167	1					
ANR	5447526	Argument	stderr		5447167	0					
ANR	5447527	Identifier	stderr		5447167	0					
ANR	5447528	Argument	"""    -schedd\\n"""		5447167	1					
ANR	5447529	PrimaryExpression	"""    -schedd\\n"""		5447167	0					
ANR	5447530	ExpressionStatement	"fprintf ( stderr , ""    -collector\\n"" )"	153:2:5174:5211	5447167	7	True				
ANR	5447531	CallExpression	"fprintf ( stderr , ""    -collector\\n"" )"		5447167	0					
ANR	5447532	Callee	fprintf		5447167	0					
ANR	5447533	Identifier	fprintf		5447167	0					
ANR	5447534	ArgumentList	stderr		5447167	1					
ANR	5447535	Argument	stderr		5447167	0					
ANR	5447536	Identifier	stderr		5447167	0					
ANR	5447537	Argument	"""    -collector\\n"""		5447167	1					
ANR	5447538	PrimaryExpression	"""    -collector\\n"""		5447167	0					
ANR	5447539	ExpressionStatement	"fprintf ( stderr , ""    -negotiator\\n"" )"	154:2:5215:5253	5447167	8	True				
ANR	5447540	CallExpression	"fprintf ( stderr , ""    -negotiator\\n"" )"		5447167	0					
ANR	5447541	Callee	fprintf		5447167	0					
ANR	5447542	Identifier	fprintf		5447167	0					
ANR	5447543	ArgumentList	stderr		5447167	1					
ANR	5447544	Argument	stderr		5447167	0					
ANR	5447545	Identifier	stderr		5447167	0					
ANR	5447546	Argument	"""    -negotiator\\n"""		5447167	1					
ANR	5447547	PrimaryExpression	"""    -negotiator\\n"""		5447167	0					
ANR	5447548	ExpressionStatement	"fprintf ( stderr , ""    -kbdd\\n"" )"	155:2:5257:5289	5447167	9	True				
ANR	5447549	CallExpression	"fprintf ( stderr , ""    -kbdd\\n"" )"		5447167	0					
ANR	5447550	Callee	fprintf		5447167	0					
ANR	5447551	Identifier	fprintf		5447167	0					
ANR	5447552	ArgumentList	stderr		5447167	1					
ANR	5447553	Argument	stderr		5447167	0					
ANR	5447554	Identifier	stderr		5447167	0					
ANR	5447555	Argument	"""    -kbdd\\n"""		5447167	1					
ANR	5447556	PrimaryExpression	"""    -kbdd\\n"""		5447167	0					
ANR	5447557	ExpressionStatement	"fprintf ( stderr , ""    -quill\\n"" )"	157:2:5320:5353	5447167	10	True				
ANR	5447558	CallExpression	"fprintf ( stderr , ""    -quill\\n"" )"		5447167	0					
ANR	5447559	Callee	fprintf		5447167	0					
ANR	5447560	Identifier	fprintf		5447167	0					
ANR	5447561	ArgumentList	stderr		5447167	1					
ANR	5447562	Argument	stderr		5447167	0					
ANR	5447563	Identifier	stderr		5447167	0					
ANR	5447564	Argument	"""    -quill\\n"""		5447167	1					
ANR	5447565	PrimaryExpression	"""    -quill\\n"""		5447167	0					
ANR	5447566	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	160:1:5366:5389	5447167	21	True				
ANR	5447567	CallExpression	"fprintf ( stderr , ""\\n"" )"		5447167	0					
ANR	5447568	Callee	fprintf		5447167	0					
ANR	5447569	Identifier	fprintf		5447167	0					
ANR	5447570	ArgumentList	stderr		5447167	1					
ANR	5447571	Argument	stderr		5447167	0					
ANR	5447572	Identifier	stderr		5447167	0					
ANR	5447573	Argument	"""\\n"""		5447167	1					
ANR	5447574	PrimaryExpression	"""\\n"""		5447167	0					
ANR	5447575	SwitchStatement	switch ( cmd )		5447167	22					
ANR	5447576	Condition	cmd	162:9:5401:5403	5447167	0	True				
ANR	5447577	Identifier	cmd		5447167	0					
ANR	5447578	CompoundStatement		69:15:2613:2613	5447167	1					
ANR	5447579	Label	case DAEMONS_ON :	163:1:5410:5425	5447167	0	True				
ANR	5447580	Identifier	DAEMONS_ON		5447167	0					
ANR	5447581	ExpressionStatement	"fprintf ( stderr , ""  %s turns on the condor daemons specified in the config file.\\n"" , str )"	164:2:5429:5530	5447167	1	True				
ANR	5447582	CallExpression	"fprintf ( stderr , ""  %s turns on the condor daemons specified in the config file.\\n"" , str )"		5447167	0					
ANR	5447583	Callee	fprintf		5447167	0					
ANR	5447584	Identifier	fprintf		5447167	0					
ANR	5447585	ArgumentList	stderr		5447167	1					
ANR	5447586	Argument	stderr		5447167	0					
ANR	5447587	Identifier	stderr		5447167	0					
ANR	5447588	Argument	"""  %s turns on the condor daemons specified in the config file.\\n"""		5447167	1					
ANR	5447589	PrimaryExpression	"""  %s turns on the condor daemons specified in the config file.\\n"""		5447167	0					
ANR	5447590	Argument	str		5447167	2					
ANR	5447591	Identifier	str		5447167	0					
ANR	5447592	BreakStatement	break ;	167:2:5534:5539	5447167	2	True				
ANR	5447593	Label	case DAEMONS_OFF :	168:1:5542:5558	5447167	3	True				
ANR	5447594	Identifier	DAEMONS_OFF		5447167	0					
ANR	5447595	Label	case DC_OFF_GRACEFUL :	169:1:5561:5581	5447167	4	True				
ANR	5447596	Identifier	DC_OFF_GRACEFUL		5447167	0					
ANR	5447597	ExpressionStatement	"fprintf ( stderr , ""  %s turns off the specified daemon.\\n"" , str )"	170:2:5585:5655	5447167	5	True				
ANR	5447598	CallExpression	"fprintf ( stderr , ""  %s turns off the specified daemon.\\n"" , str )"		5447167	0					
ANR	5447599	Callee	fprintf		5447167	0					
ANR	5447600	Identifier	fprintf		5447167	0					
ANR	5447601	ArgumentList	stderr		5447167	1					
ANR	5447602	Argument	stderr		5447167	0					
ANR	5447603	Identifier	stderr		5447167	0					
ANR	5447604	Argument	"""  %s turns off the specified daemon.\\n"""		5447167	1					
ANR	5447605	PrimaryExpression	"""  %s turns off the specified daemon.\\n"""		5447167	0					
ANR	5447606	Argument	str		5447167	2					
ANR	5447607	Identifier	str		5447167	0					
ANR	5447608	ExpressionStatement	"fprintf ( stderr , ""  If no daemon is given, everything except the master is shut down.\\n"" )"	172:2:5659:5755	5447167	6	True				
ANR	5447609	CallExpression	"fprintf ( stderr , ""  If no daemon is given, everything except the master is shut down.\\n"" )"		5447167	0					
ANR	5447610	Callee	fprintf		5447167	0					
ANR	5447611	Identifier	fprintf		5447167	0					
ANR	5447612	ArgumentList	stderr		5447167	1					
ANR	5447613	Argument	stderr		5447167	0					
ANR	5447614	Identifier	stderr		5447167	0					
ANR	5447615	Argument	"""  If no daemon is given, everything except the master is shut down.\\n"""		5447167	1					
ANR	5447616	PrimaryExpression	"""  If no daemon is given, everything except the master is shut down.\\n"""		5447167	0					
ANR	5447617	BreakStatement	break ;	174:2:5759:5764	5447167	7	True				
ANR	5447618	Label	case RESTART :	175:1:5767:5779	5447167	8	True				
ANR	5447619	Identifier	RESTART		5447167	0					
ANR	5447620	ExpressionStatement	"fprintf ( stderr , ""  %s causes specified daemon to restart itself.\\n"" , str )"	176:2:5783:5858	5447167	9	True				
ANR	5447621	CallExpression	"fprintf ( stderr , ""  %s causes specified daemon to restart itself.\\n"" , str )"		5447167	0					
ANR	5447622	Callee	fprintf		5447167	0					
ANR	5447623	Identifier	fprintf		5447167	0					
ANR	5447624	ArgumentList	stderr		5447167	1					
ANR	5447625	Argument	stderr		5447167	0					
ANR	5447626	Identifier	stderr		5447167	0					
ANR	5447627	Argument	"""  %s causes specified daemon to restart itself.\\n"""		5447167	1					
ANR	5447628	PrimaryExpression	"""  %s causes specified daemon to restart itself.\\n"""		5447167	0					
ANR	5447629	Argument	str		5447167	2					
ANR	5447630	Identifier	str		5447167	0					
ANR	5447631	ExpressionStatement	"fprintf ( stderr , ""  If sent to the master, all daemons on that host will restart.\\n"" )"	177:2:5862:5954	5447167	10	True				
ANR	5447632	CallExpression	"fprintf ( stderr , ""  If sent to the master, all daemons on that host will restart.\\n"" )"		5447167	0					
ANR	5447633	Callee	fprintf		5447167	0					
ANR	5447634	Identifier	fprintf		5447167	0					
ANR	5447635	ArgumentList	stderr		5447167	1					
ANR	5447636	Argument	stderr		5447167	0					
ANR	5447637	Identifier	stderr		5447167	0					
ANR	5447638	Argument	"""  If sent to the master, all daemons on that host will restart.\\n"""		5447167	1					
ANR	5447639	PrimaryExpression	"""  If sent to the master, all daemons on that host will restart.\\n"""		5447167	0					
ANR	5447640	BreakStatement	break ;	179:2:5958:5963	5447167	11	True				
ANR	5447641	Label	case DC_RECONFIG_FULL :	181:1:5967:5988	5447167	12	True				
ANR	5447642	Identifier	DC_RECONFIG_FULL		5447167	0					
ANR	5447643	ExpressionStatement	"fprintf ( stderr , ""  %s causes the specified daemon to reconfigure itself.\\n"" , str )"	182:2:5992:6087	5447167	13	True				
ANR	5447644	CallExpression	"fprintf ( stderr , ""  %s causes the specified daemon to reconfigure itself.\\n"" , str )"		5447167	0					
ANR	5447645	Callee	fprintf		5447167	0					
ANR	5447646	Identifier	fprintf		5447167	0					
ANR	5447647	ArgumentList	stderr		5447167	1					
ANR	5447648	Argument	stderr		5447167	0					
ANR	5447649	Identifier	stderr		5447167	0					
ANR	5447650	Argument	"""  %s causes the specified daemon to reconfigure itself.\\n"""		5447167	1					
ANR	5447651	PrimaryExpression	"""  %s causes the specified daemon to reconfigure itself.\\n"""		5447167	0					
ANR	5447652	Argument	str		5447167	2					
ANR	5447653	Identifier	str		5447167	0					
ANR	5447654	ExpressionStatement	"fprintf ( stderr , ""  If sent to the master, all daemons on that host will reconfigure.\\n"" )"	185:2:6091:6187	5447167	14	True				
ANR	5447655	CallExpression	"fprintf ( stderr , ""  If sent to the master, all daemons on that host will reconfigure.\\n"" )"		5447167	0					
ANR	5447656	Callee	fprintf		5447167	0					
ANR	5447657	Identifier	fprintf		5447167	0					
ANR	5447658	ArgumentList	stderr		5447167	1					
ANR	5447659	Argument	stderr		5447167	0					
ANR	5447660	Identifier	stderr		5447167	0					
ANR	5447661	Argument	"""  If sent to the master, all daemons on that host will reconfigure.\\n"""		5447167	1					
ANR	5447662	PrimaryExpression	"""  If sent to the master, all daemons on that host will reconfigure.\\n"""		5447167	0					
ANR	5447663	BreakStatement	break ;	187:2:6191:6196	5447167	15	True				
ANR	5447664	Label	case RESCHEDULE :	188:1:6199:6214	5447167	16	True				
ANR	5447665	Identifier	RESCHEDULE		5447167	0					
ANR	5447666	ExpressionStatement	"fprintf ( stderr , ""  %s %s\\n  %s\\n"" , str , ""causes the condor_schedd to update the central manager"" , ""and initiate a new negotiation cycle."" )"	189:2:6218:6369	5447167	17	True				
ANR	5447667	CallExpression	"fprintf ( stderr , ""  %s %s\\n  %s\\n"" , str , ""causes the condor_schedd to update the central manager"" , ""and initiate a new negotiation cycle."" )"		5447167	0					
ANR	5447668	Callee	fprintf		5447167	0					
ANR	5447669	Identifier	fprintf		5447167	0					
ANR	5447670	ArgumentList	stderr		5447167	1					
ANR	5447671	Argument	stderr		5447167	0					
ANR	5447672	Identifier	stderr		5447167	0					
ANR	5447673	Argument	"""  %s %s\\n  %s\\n"""		5447167	1					
ANR	5447674	PrimaryExpression	"""  %s %s\\n  %s\\n"""		5447167	0					
ANR	5447675	Argument	str		5447167	2					
ANR	5447676	Identifier	str		5447167	0					
ANR	5447677	Argument	"""causes the condor_schedd to update the central manager"""		5447167	3					
ANR	5447678	PrimaryExpression	"""causes the condor_schedd to update the central manager"""		5447167	0					
ANR	5447679	Argument	"""and initiate a new negotiation cycle."""		5447167	4					
ANR	5447680	PrimaryExpression	"""and initiate a new negotiation cycle."""		5447167	0					
ANR	5447681	BreakStatement	break ;	192:2:6373:6378	5447167	18	True				
ANR	5447682	Label	case VACATE_CLAIM :	193:1:6381:6398	5447167	19	True				
ANR	5447683	Identifier	VACATE_CLAIM		5447167	0					
ANR	5447684	Statement	fprintf	194:2:6402:6408	5447167	20	True				
ANR	5447685	Statement	(	194:9:6409:6409	5447167	21	True				
ANR	5447686	Statement	stderr	194:11:6411:6416	5447167	22	True				
ANR	5447687	Statement	","	194:17:6417:6417	5447167	23	True				
ANR	5447688	Statement	"""  %s causes the condor_startd to vacate the running\\n"""	195:5:6425:6479	5447167	24	True				
ANR	5447689	Statement	"""  job(s) on specific machines.  If you specify a slot\\n"""	196:5:6486:6542	5447167	25	True				
ANR	5447690	Statement	"""  (for example, \\""slot1@hostname\\""), only that slot will be\\n"""	197:5:6549:6611	5447167	26	True				
ANR	5447691	Statement	"""  vacated.  If you specify just a hostname, all jobs running under\\n"""	198:5:6618:6687	5447167	27	True				
ANR	5447692	Statement	"""  any slots at that host will be vacated.  By default,\\n"""	199:5:6694:6751	5447167	28	True				
ANR	5447693	Statement	"""  the jobs will be checkpointed (if possible), though if you\\n"""	200:5:6758:6821	5447167	29	True				
ANR	5447694	Statement	"""  specify the -fast option, they will be immediately killed.\\n"""	201:5:6828:6891	5447167	30	True				
ANR	5447695	Statement	","	201:69:6892:6892	5447167	31	True				
ANR	5447696	Statement	str	202:5:6899:6901	5447167	32	True				
ANR	5447697	Statement	)	202:9:6903:6903	5447167	33	True				
ANR	5447698	ExpressionStatement		202:10:6904:6904	5447167	34	True				
ANR	5447699	BreakStatement	break ;	203:2:6908:6913	5447167	35	True				
ANR	5447700	Label	case PCKPT_JOB :	204:1:6916:6930	5447167	36	True				
ANR	5447701	Identifier	PCKPT_JOB		5447167	0					
ANR	5447702	Statement	fprintf	205:2:6934:6940	5447167	37	True				
ANR	5447703	Statement	(	205:9:6941:6941	5447167	38	True				
ANR	5447704	Statement	stderr	205:11:6943:6948	5447167	39	True				
ANR	5447705	Statement	","	205:17:6949:6949	5447167	40	True				
ANR	5447706	Statement	"""  %s\\n"""	206:5:6956:6963	5447167	41	True				
ANR	5447707	Statement	"""  causes the condor_startd to perform a periodic"""	207:5:6970:7019	5447167	42	True				
ANR	5447708	Statement	"""checkpoint on running jobs on specific machines.\\n"""	208:5:7026:7077	5447167	43	True				
ANR	5447709	Statement	"""  The jobs continue to run once """	209:5:7084:7117	5447167	44	True				
ANR	5447710	Statement	"""they are done checkpointing.\\n"""	210:5:7124:7155	5447167	45	True				
ANR	5447711	Statement	","	210:37:7156:7156	5447167	46	True				
ANR	5447712	Statement	str	211:5:7163:7165	5447167	47	True				
ANR	5447713	Statement	)	211:8:7166:7166	5447167	48	True				
ANR	5447714	ExpressionStatement		211:9:7167:7167	5447167	49	True				
ANR	5447715	BreakStatement	break ;	212:2:7171:7176	5447167	50	True				
ANR	5447716	Label	case SQUAWK :	213:1:7179:7190	5447167	51	True				
ANR	5447717	Identifier	SQUAWK		5447167	0					
ANR	5447718	Statement	fprintf	214:2:7194:7200	5447167	52	True				
ANR	5447719	Statement	(	214:9:7201:7201	5447167	53	True				
ANR	5447720	Statement	stderr	214:11:7203:7208	5447167	54	True				
ANR	5447721	Statement	","	214:17:7209:7209	5447167	55	True				
ANR	5447722	Statement	"""  %s\\n"""	214:19:7211:7218	5447167	56	True				
ANR	5447723	Statement	"""is a developer-only command used to talk to daemons."""	215:5:7225:7278	5447167	57	True				
ANR	5447724	Statement	","	215:59:7279:7279	5447167	58	True				
ANR	5447725	Statement	str	216:5:7287:7289	5447167	59	True				
ANR	5447726	Statement	)	216:9:7291:7291	5447167	60	True				
ANR	5447727	ExpressionStatement		216:10:7292:7292	5447167	61	True				
ANR	5447728	BreakStatement	break ;	217:2:7296:7301	5447167	62	True				
ANR	5447729	Label	default :	218:1:7304:7311	5447167	63	True				
ANR	5447730	Identifier	default		5447167	0					
ANR	5447731	ExpressionStatement	"fprintf ( stderr , ""  Valid commands are:\\n%s%s"" , ""\\toff, on, restart, reconfig, reschedule, "" , ""vacate, checkpoint, set_shutdown\\n\\n"" )"	219:2:7315:7459	5447167	64	True				
ANR	5447732	CallExpression	"fprintf ( stderr , ""  Valid commands are:\\n%s%s"" , ""\\toff, on, restart, reconfig, reschedule, "" , ""vacate, checkpoint, set_shutdown\\n\\n"" )"		5447167	0					
ANR	5447733	Callee	fprintf		5447167	0					
ANR	5447734	Identifier	fprintf		5447167	0					
ANR	5447735	ArgumentList	stderr		5447167	1					
ANR	5447736	Argument	stderr		5447167	0					
ANR	5447737	Identifier	stderr		5447167	0					
ANR	5447738	Argument	"""  Valid commands are:\\n%s%s"""		5447167	1					
ANR	5447739	PrimaryExpression	"""  Valid commands are:\\n%s%s"""		5447167	0					
ANR	5447740	Argument	"""\\toff, on, restart, reconfig, reschedule, """		5447167	2					
ANR	5447741	PrimaryExpression	"""\\toff, on, restart, reconfig, reschedule, """		5447167	0					
ANR	5447742	Argument	"""vacate, checkpoint, set_shutdown\\n\\n"""		5447167	3					
ANR	5447743	PrimaryExpression	"""vacate, checkpoint, set_shutdown\\n\\n"""		5447167	0					
ANR	5447744	ExpressionStatement	"fprintf ( stderr , ""  Use \\""%s [command] -help\\"" for more information %s\\n"" , str , ""on a given command."" )"	222:2:7463:7572	5447167	65	True				
ANR	5447745	CallExpression	"fprintf ( stderr , ""  Use \\""%s [command] -help\\"" for more information %s\\n"" , str , ""on a given command."" )"		5447167	0					
ANR	5447746	Callee	fprintf		5447167	0					
ANR	5447747	Identifier	fprintf		5447167	0					
ANR	5447748	ArgumentList	stderr		5447167	1					
ANR	5447749	Argument	stderr		5447167	0					
ANR	5447750	Identifier	stderr		5447167	0					
ANR	5447751	Argument	"""  Use \\""%s [command] -help\\"" for more information %s\\n"""		5447167	1					
ANR	5447752	PrimaryExpression	"""  Use \\""%s [command] -help\\"" for more information %s\\n"""		5447167	0					
ANR	5447753	Argument	str		5447167	2					
ANR	5447754	Identifier	str		5447167	0					
ANR	5447755	Argument	"""on a given command."""		5447167	3					
ANR	5447756	PrimaryExpression	"""on a given command."""		5447167	0					
ANR	5447757	BreakStatement	break ;	224:2:7576:7581	5447167	66	True				
ANR	5447758	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	226:1:7587:7609	5447167	23	True				
ANR	5447759	CallExpression	"fprintf ( stderr , ""\\n"" )"		5447167	0					
ANR	5447760	Callee	fprintf		5447167	0					
ANR	5447761	Identifier	fprintf		5447167	0					
ANR	5447762	ArgumentList	stderr		5447167	1					
ANR	5447763	Argument	stderr		5447167	0					
ANR	5447764	Identifier	stderr		5447167	0					
ANR	5447765	Argument	"""\\n"""		5447167	1					
ANR	5447766	PrimaryExpression	"""\\n"""		5447167	0					
ANR	5447767	ExpressionStatement	exit ( iExitCode )	227:1:7612:7629	5447167	24	True				
ANR	5447768	CallExpression	exit ( iExitCode )		5447167	0					
ANR	5447769	Callee	exit		5447167	0					
ANR	5447770	Identifier	exit		5447167	0					
ANR	5447771	ArgumentList	iExitCode		5447167	1					
ANR	5447772	Argument	iExitCode		5447167	0					
ANR	5447773	Identifier	iExitCode		5447167	0					
ANR	5447774	ReturnType	void		5447167	1					
ANR	5447775	Identifier	usage		5447167	2					
ANR	5447776	ParameterList	"char * str , int iExitCode"		5447167	3					
ANR	5447777	Parameter	char * str	93:7:2766:2774	5447167	0	True				
ANR	5447778	ParameterType	char *		5447167	0					
ANR	5447779	Identifier	str		5447167	1					
ANR	5447780	Parameter	int iExitCode	93:18:2777:2789	5447167	1	True				
ANR	5447781	ParameterType	int		5447167	0					
ANR	5447782	Identifier	iExitCode		5447167	1					
ANR	5447783	CFGEntryNode	ENTRY		5447167		True				
ANR	5447784	CFGExitNode	EXIT		5447167		True				
ANR	5447785	Symbol	str		5447167						
ANR	5447786	Symbol	tmp		5447167						
ANR	5447787	Symbol	strchr		5447167						
ANR	5447788	Symbol	RESTART		5447167						
ANR	5447789	Symbol	iExitCode		5447167						
ANR	5447790	Symbol	DAEMONS_OFF		5447167						
ANR	5447791	Symbol	cmd		5447167						
ANR	5447792	Symbol	stderr		5447167						
ANR	5447793	Symbol	takes_subsys		5447167						
ANR	5447794	Symbol	DAEMON_OFF		5447167						
ANR	5447795	Symbol	VACATE_CLAIM		5447167						
ANR	5447796	Function	pool_target_usage	231:0:7635:7942							
ANR	5447797	FunctionDef	pool_target_usage ()		5447796	0					
ANR	5447798	CompoundStatement		233:0:7666:7942	5447796	0					
ANR	5447799	Statement	fprintf	234:1:7669:7675	5447796	0	True				
ANR	5447800	Statement	(	234:8:7676:7676	5447796	1	True				
ANR	5447801	Statement	stderr	234:10:7678:7683	5447796	2	True				
ANR	5447802	Statement	","	234:16:7684:7684	5447796	3	True				
ANR	5447803	Statement	"""ERROR: You have asked to find a machine in """	234:18:7686:7730	5447796	4	True				
ANR	5447804	Statement	"""another pool (with\\n"""	235:4:7736:7757	5447796	5	True				
ANR	5447805	Statement	"""the -pool option) but you have not specified which machine.\\n"""	236:4:7763:7825	5447796	6	True				
ANR	5447806	Statement	"""Please also use -addr, -name, or list the name(s).\\n"""	237:4:7831:7884	5447796	7	True				
ANR	5447807	Statement	"""For more information, use -help.\\n"""	238:4:7890:7925	5447796	8	True				
ANR	5447808	Statement	)	238:41:7927:7927	5447796	9	True				
ANR	5447809	ExpressionStatement		238:42:7928:7928	5447796	10	True				
ANR	5447810	ExpressionStatement	exit ( 1 )	239:1:7931:7940	5447796	11	True				
ANR	5447811	CallExpression	exit ( 1 )		5447796	0					
ANR	5447812	Callee	exit		5447796	0					
ANR	5447813	Identifier	exit		5447796	0					
ANR	5447814	ArgumentList	1		5447796	1					
ANR	5447815	Argument	1		5447796	0					
ANR	5447816	PrimaryExpression	1		5447796	0					
ANR	5447817	ReturnType	void		5447796	1					
ANR	5447818	Identifier	pool_target_usage		5447796	2					
ANR	5447819	ParameterList			5447796	3					
ANR	5447820	CFGEntryNode	ENTRY		5447796		True				
ANR	5447821	CFGExitNode	EXIT		5447796		True				
ANR	5447822	Function	cmdToStr	243:0:7946:9309							
ANR	5447823	FunctionDef	cmdToStr (int c)		5447822	0					
ANR	5447824	CompoundStatement		245:0:7976:9309	5447822	0					
ANR	5447825	SwitchStatement	switch ( c )		5447822	0					
ANR	5447826	Condition	c	246:9:7987:7987	5447822	0	True				
ANR	5447827	Identifier	c		5447822	0					
ANR	5447828	CompoundStatement		2:13:14:14	5447822	1					
ANR	5447829	Label	case DAEMONS_OFF :	247:1:7994:8010	5447822	0	True				
ANR	5447830	Identifier	DAEMONS_OFF		5447822	0					
ANR	5447831	ReturnStatement	"return ""Kill-All-Daemons"" ;"	248:2:8014:8039	5447822	1	True				
ANR	5447832	PrimaryExpression	"""Kill-All-Daemons"""		5447822	0					
ANR	5447833	Label	case DAEMONS_OFF_FAST :	249:1:8042:8063	5447822	2	True				
ANR	5447834	Identifier	DAEMONS_OFF_FAST		5447822	0					
ANR	5447835	ReturnStatement	"return ""Kill-All-Daemons-Fast"" ;"	250:2:8067:8097	5447822	3	True				
ANR	5447836	PrimaryExpression	"""Kill-All-Daemons-Fast"""		5447822	0					
ANR	5447837	Label	case DAEMONS_OFF_PEACEFUL :	251:1:8100:8125	5447822	4	True				
ANR	5447838	Identifier	DAEMONS_OFF_PEACEFUL		5447822	0					
ANR	5447839	ReturnStatement	"return ""Kill-All-Daemons-Peacefully"" ;"	252:2:8129:8165	5447822	5	True				
ANR	5447840	PrimaryExpression	"""Kill-All-Daemons-Peacefully"""		5447822	0					
ANR	5447841	Label	case DAEMON_OFF :	253:1:8168:8183	5447822	6	True				
ANR	5447842	Identifier	DAEMON_OFF		5447822	0					
ANR	5447843	Label	case DC_OFF_GRACEFUL :	254:1:8186:8206	5447822	7	True				
ANR	5447844	Identifier	DC_OFF_GRACEFUL		5447822	0					
ANR	5447845	ReturnStatement	"return ""Kill-Daemon"" ;"	255:2:8210:8230	5447822	8	True				
ANR	5447846	PrimaryExpression	"""Kill-Daemon"""		5447822	0					
ANR	5447847	Label	case DAEMON_OFF_FAST :	256:1:8233:8253	5447822	9	True				
ANR	5447848	Identifier	DAEMON_OFF_FAST		5447822	0					
ANR	5447849	Label	case DC_OFF_FAST :	257:1:8256:8272	5447822	10	True				
ANR	5447850	Identifier	DC_OFF_FAST		5447822	0					
ANR	5447851	ReturnStatement	"return ""Kill-Daemon-Fast"" ;"	258:2:8276:8301	5447822	11	True				
ANR	5447852	PrimaryExpression	"""Kill-Daemon-Fast"""		5447822	0					
ANR	5447853	Label	case DAEMON_OFF_PEACEFUL :	259:1:8304:8328	5447822	12	True				
ANR	5447854	Identifier	DAEMON_OFF_PEACEFUL		5447822	0					
ANR	5447855	Label	case DC_OFF_PEACEFUL :	260:1:8331:8351	5447822	13	True				
ANR	5447856	Identifier	DC_OFF_PEACEFUL		5447822	0					
ANR	5447857	ReturnStatement	"return ""Kill-Daemon-Peacefully"" ;"	261:2:8355:8386	5447822	14	True				
ANR	5447858	PrimaryExpression	"""Kill-Daemon-Peacefully"""		5447822	0					
ANR	5447859	Label	case DC_SET_PEACEFUL_SHUTDOWN :	262:1:8389:8418	5447822	15	True				
ANR	5447860	Identifier	DC_SET_PEACEFUL_SHUTDOWN		5447822	0					
ANR	5447861	ReturnStatement	"return ""Set-Peaceful-Shutdown"" ;"	263:2:8422:8452	5447822	16	True				
ANR	5447862	PrimaryExpression	"""Set-Peaceful-Shutdown"""		5447822	0					
ANR	5447863	Label	case DAEMONS_ON :	264:1:8455:8470	5447822	17	True				
ANR	5447864	Identifier	DAEMONS_ON		5447822	0					
ANR	5447865	ReturnStatement	"return ""Spawn-All-Daemons"" ;"	265:2:8474:8500	5447822	18	True				
ANR	5447866	PrimaryExpression	"""Spawn-All-Daemons"""		5447822	0					
ANR	5447867	Label	case DAEMON_ON :	266:1:8503:8517	5447822	19	True				
ANR	5447868	Identifier	DAEMON_ON		5447822	0					
ANR	5447869	ReturnStatement	"return ""Spawn-Daemon"" ;"	267:2:8521:8542	5447822	20	True				
ANR	5447870	PrimaryExpression	"""Spawn-Daemon"""		5447822	0					
ANR	5447871	Label	case RESTART :	268:1:8545:8557	5447822	21	True				
ANR	5447872	Identifier	RESTART		5447822	0					
ANR	5447873	IfStatement	if ( fast )		5447822	22					
ANR	5447874	Condition	fast	269:6:8565:8568	5447822	0	True				
ANR	5447875	Identifier	fast		5447822	0					
ANR	5447876	CompoundStatement		25:13:595:595	5447822	1					
ANR	5447877	ReturnStatement	"return ""Restart-Fast"" ;"	270:3:8577:8598	5447822	0	True				
ANR	5447878	PrimaryExpression	"""Restart-Fast"""		5447822	0					
ANR	5447879	ElseStatement	else		5447822	0					
ANR	5447880	IfStatement	if ( peaceful_shutdown )		5447822	0					
ANR	5447881	Condition	peaceful_shutdown	271:13:8613:8629	5447822	0	True				
ANR	5447882	Identifier	peaceful_shutdown		5447822	0					
ANR	5447883	CompoundStatement		27:33:656:656	5447822	1					
ANR	5447884	ReturnStatement	"return ""Restart-Peaceful"" ;"	272:3:8638:8663	5447822	0	True				
ANR	5447885	PrimaryExpression	"""Restart-Peaceful"""		5447822	0					
ANR	5447886	ElseStatement	else		5447822	0					
ANR	5447887	CompoundStatement		29:9:697:697	5447822	0					
ANR	5447888	ReturnStatement	"return ""Restart"" ;"	274:3:8679:8695	5447822	0	True				
ANR	5447889	PrimaryExpression	"""Restart"""		5447822	0					
ANR	5447890	Label	case VACATE_CLAIM :	276:1:8702:8719	5447822	23	True				
ANR	5447891	Identifier	VACATE_CLAIM		5447822	0					
ANR	5447892	ReturnStatement	"return ""Vacate-Claim"" ;"	277:2:8723:8744	5447822	24	True				
ANR	5447893	PrimaryExpression	"""Vacate-Claim"""		5447822	0					
ANR	5447894	Label	case VACATE_CLAIM_FAST :	278:1:8747:8769	5447822	25	True				
ANR	5447895	Identifier	VACATE_CLAIM_FAST		5447822	0					
ANR	5447896	ReturnStatement	"return ""Vacate-Claim-Fast"" ;"	279:2:8773:8799	5447822	26	True				
ANR	5447897	PrimaryExpression	"""Vacate-Claim-Fast"""		5447822	0					
ANR	5447898	Label	case VACATE_ALL_CLAIMS :	280:1:8802:8824	5447822	27	True				
ANR	5447899	Identifier	VACATE_ALL_CLAIMS		5447822	0					
ANR	5447900	ReturnStatement	"return ""Vacate-All-Claims"" ;"	281:2:8828:8854	5447822	28	True				
ANR	5447901	PrimaryExpression	"""Vacate-All-Claims"""		5447822	0					
ANR	5447902	Label	case VACATE_ALL_FAST :	282:1:8857:8877	5447822	29	True				
ANR	5447903	Identifier	VACATE_ALL_FAST		5447822	0					
ANR	5447904	ReturnStatement	"return ""Vacate-All-Claims-Fast"" ;"	283:2:8881:8912	5447822	30	True				
ANR	5447905	PrimaryExpression	"""Vacate-All-Claims-Fast"""		5447822	0					
ANR	5447906	Label	case PCKPT_JOB :	284:1:8915:8929	5447822	31	True				
ANR	5447907	Identifier	PCKPT_JOB		5447822	0					
ANR	5447908	ReturnStatement	"return ""Checkpoint-Job"" ;"	285:2:8933:8956	5447822	32	True				
ANR	5447909	PrimaryExpression	"""Checkpoint-Job"""		5447822	0					
ANR	5447910	Label	case PCKPT_ALL_JOBS :	286:1:8959:8978	5447822	33	True				
ANR	5447911	Identifier	PCKPT_ALL_JOBS		5447822	0					
ANR	5447912	ReturnStatement	"return ""Checkpoint-All-Jobs"" ;"	287:2:8982:9010	5447822	34	True				
ANR	5447913	PrimaryExpression	"""Checkpoint-All-Jobs"""		5447822	0					
ANR	5447914	Label	case RESCHEDULE :	288:1:9013:9028	5447822	35	True				
ANR	5447915	Identifier	RESCHEDULE		5447822	0					
ANR	5447916	ReturnStatement	"return ""Reschedule"" ;"	289:2:9032:9051	5447822	36	True				
ANR	5447917	PrimaryExpression	"""Reschedule"""		5447822	0					
ANR	5447918	Label	case DC_RECONFIG_FULL :	290:1:9054:9075	5447822	37	True				
ANR	5447919	Identifier	DC_RECONFIG_FULL		5447822	0					
ANR	5447920	ReturnStatement	"return ""Reconfig"" ;"	291:2:9079:9096	5447822	38	True				
ANR	5447921	PrimaryExpression	"""Reconfig"""		5447822	0					
ANR	5447922	Label	case SQUAWK :	292:1:9099:9110	5447822	39	True				
ANR	5447923	Identifier	SQUAWK		5447822	0					
ANR	5447924	ReturnStatement	"return ""Squawk"" ;"	293:2:9114:9129	5447822	40	True				
ANR	5447925	PrimaryExpression	"""Squawk"""		5447822	0					
ANR	5447926	Label	case SET_SHUTDOWN_PROGRAM :	294:1:9132:9157	5447822	41	True				
ANR	5447927	Identifier	SET_SHUTDOWN_PROGRAM		5447822	0					
ANR	5447928	ReturnStatement	"return ""Set-Shutdown-Program"" ;"	295:2:9161:9190	5447822	42	True				
ANR	5447929	PrimaryExpression	"""Set-Shutdown-Program"""		5447822	0					
ANR	5447930	ExpressionStatement	"fprintf ( stderr , ""Unknown Command (%d) in cmdToStr()\\n"" , c )"	297:1:9196:9256	5447822	1	True				
ANR	5447931	CallExpression	"fprintf ( stderr , ""Unknown Command (%d) in cmdToStr()\\n"" , c )"		5447822	0					
ANR	5447932	Callee	fprintf		5447822	0					
ANR	5447933	Identifier	fprintf		5447822	0					
ANR	5447934	ArgumentList	stderr		5447822	1					
ANR	5447935	Argument	stderr		5447822	0					
ANR	5447936	Identifier	stderr		5447822	0					
ANR	5447937	Argument	"""Unknown Command (%d) in cmdToStr()\\n"""		5447822	1					
ANR	5447938	PrimaryExpression	"""Unknown Command (%d) in cmdToStr()\\n"""		5447822	0					
ANR	5447939	Argument	c		5447822	2					
ANR	5447940	Identifier	c		5447822	0					
ANR	5447941	ExpressionStatement	exit ( 1 )	298:1:9259:9266	5447822	2	True				
ANR	5447942	CallExpression	exit ( 1 )		5447822	0					
ANR	5447943	Callee	exit		5447822	0					
ANR	5447944	Identifier	exit		5447822	0					
ANR	5447945	ArgumentList	1		5447822	1					
ANR	5447946	Argument	1		5447822	0					
ANR	5447947	PrimaryExpression	1		5447822	0					
ANR	5447948	ReturnStatement	"return ""UNKNOWN"" ;"	300:1:9270:9286	5447822	3	True				
ANR	5447949	PrimaryExpression	"""UNKNOWN"""		5447822	0					
ANR	5447950	ReturnType	const char *		5447822	1					
ANR	5447951	Identifier	cmdToStr		5447822	2					
ANR	5447952	ParameterList	int c		5447822	3					
ANR	5447953	Parameter	int c	244:10:7968:7972	5447822	0	True				
ANR	5447954	ParameterType	int		5447822	0					
ANR	5447955	Identifier	c		5447822	1					
ANR	5447956	CFGEntryNode	ENTRY		5447822		True				
ANR	5447957	CFGExitNode	EXIT		5447822		True				
ANR	5447958	Symbol	c		5447822						
ANR	5447959	Symbol	fast		5447822						
ANR	5447960	Symbol	peaceful_shutdown		5447822						
ANR	5447961	Symbol	stderr		5447822						
ANR	5447962	Function	subsys_check	304:0:9314:9608							
ANR	5447963	FunctionDef	subsys_check (char * MyName)		5447962	0					
ANR	5447964	CompoundStatement		306:0:9348:9608	5447962	0					
ANR	5447965	IfStatement	if ( ! takes_subsys )		5447962	0					
ANR	5447966	Condition	! takes_subsys	307:5:9355:9368	5447962	0	True				
ANR	5447967	UnaryOperationExpression	! takes_subsys		5447962	0					
ANR	5447968	UnaryOperator	!		5447962	0					
ANR	5447969	Identifier	takes_subsys		5447962	1					
ANR	5447970	CompoundStatement		2:22:23:23	5447962	1					
ANR	5447971	ExpressionStatement	"fprintf ( stderr , ""ERROR: Can't specify a daemon flag with %s.\\n"" , MyName )"	308:2:9376:9463	5447962	0	True				
ANR	5447972	CallExpression	"fprintf ( stderr , ""ERROR: Can't specify a daemon flag with %s.\\n"" , MyName )"		5447962	0					
ANR	5447973	Callee	fprintf		5447962	0					
ANR	5447974	Identifier	fprintf		5447962	0					
ANR	5447975	ArgumentList	stderr		5447962	1					
ANR	5447976	Argument	stderr		5447962	0					
ANR	5447977	Identifier	stderr		5447962	0					
ANR	5447978	Argument	"""ERROR: Can't specify a daemon flag with %s.\\n"""		5447962	1					
ANR	5447979	PrimaryExpression	"""ERROR: Can't specify a daemon flag with %s.\\n"""		5447962	0					
ANR	5447980	Argument	MyName		5447962	2					
ANR	5447981	Identifier	MyName		5447962	0					
ANR	5447982	ExpressionStatement	usage ( MyName )	311:2:9467:9482	5447962	1	True				
ANR	5447983	CallExpression	usage ( MyName )		5447962	0					
ANR	5447984	Callee	usage		5447962	0					
ANR	5447985	Identifier	usage		5447962	0					
ANR	5447986	ArgumentList	MyName		5447962	1					
ANR	5447987	Argument	MyName		5447962	0					
ANR	5447988	Identifier	MyName		5447962	0					
ANR	5447989	IfStatement	if ( dt )		5447962	1					
ANR	5447990	Condition	dt	313:5:9492:9493	5447962	0	True				
ANR	5447991	Identifier	dt		5447962	0					
ANR	5447992	CompoundStatement		8:10:148:148	5447962	1					
ANR	5447993	ExpressionStatement	"fprintf ( stderr , ""ERROR: can only specify one daemon flag.\\n"" )"	314:2:9501:9564	5447962	0	True				
ANR	5447994	CallExpression	"fprintf ( stderr , ""ERROR: can only specify one daemon flag.\\n"" )"		5447962	0					
ANR	5447995	Callee	fprintf		5447962	0					
ANR	5447996	Identifier	fprintf		5447962	0					
ANR	5447997	ArgumentList	stderr		5447962	1					
ANR	5447998	Argument	stderr		5447962	0					
ANR	5447999	Identifier	stderr		5447962	0					
ANR	5448000	Argument	"""ERROR: can only specify one daemon flag.\\n"""		5447962	1					
ANR	5448001	PrimaryExpression	"""ERROR: can only specify one daemon flag.\\n"""		5447962	0					
ANR	5448002	ExpressionStatement	usage ( MyName )	315:2:9568:9583	5447962	1	True				
ANR	5448003	CallExpression	usage ( MyName )		5447962	0					
ANR	5448004	Callee	usage		5447962	0					
ANR	5448005	Identifier	usage		5447962	0					
ANR	5448006	ArgumentList	MyName		5447962	1					
ANR	5448007	Argument	MyName		5447962	0					
ANR	5448008	Identifier	MyName		5447962	0					
ANR	5448009	ExpressionStatement	subsys = ( char * ) 1	317:1:9589:9606	5447962	2	True				
ANR	5448010	AssignmentExpression	subsys = ( char * ) 1		5447962	0		=			
ANR	5448011	Identifier	subsys		5447962	0					
ANR	5448012	CastExpression	( char * ) 1		5447962	1					
ANR	5448013	CastTarget	char *		5447962	0					
ANR	5448014	PrimaryExpression	1		5447962	1					
ANR	5448015	ReturnType	void		5447962	1					
ANR	5448016	Identifier	subsys_check		5447962	2					
ANR	5448017	ParameterList	char * MyName		5447962	3					
ANR	5448018	Parameter	char * MyName	305:14:9333:9344	5447962	0	True				
ANR	5448019	ParameterType	char *		5447962	0					
ANR	5448020	Identifier	MyName		5447962	1					
ANR	5448021	CFGEntryNode	ENTRY		5447962		True				
ANR	5448022	CFGExitNode	EXIT		5447962		True				
ANR	5448023	Symbol	dt		5447962						
ANR	5448024	Symbol	subsys		5447962						
ANR	5448025	Symbol	MyName		5447962						
ANR	5448026	Symbol	takes_subsys		5447962						
ANR	5448027	Symbol	stderr		5447962						
ANR	5448028	Function	main	321:0:9612:23032							
ANR	5448029	FunctionDef	"main (int argc , char * argv [ ])"		5448028	0					
ANR	5448030	CompoundStatement		323:0:9647:23032	5448028	0					
ANR	5448031	IdentifierDeclStatement	char * MyName = argv [ 0 ] ;	324:1:9650:9672	5448028	0	True				
ANR	5448032	IdentifierDecl	* MyName = argv [ 0 ]		5448028	0					
ANR	5448033	IdentifierDeclType	char *		5448028	0					
ANR	5448034	Identifier	MyName		5448028	1					
ANR	5448035	AssignmentExpression	* MyName = argv [ 0 ]		5448028	2		=			
ANR	5448036	Identifier	MyName		5448028	0					
ANR	5448037	ArrayIndexing	argv [ 0 ]		5448028	1					
ANR	5448038	Identifier	argv		5448028	0					
ANR	5448039	PrimaryExpression	0		5448028	1					
ANR	5448040	IdentifierDeclStatement	"char * cmd_str , * * tmp ;"	325:1:9675:9695	5448028	1	True				
ANR	5448041	IdentifierDecl	* cmd_str		5448028	0					
ANR	5448042	IdentifierDeclType	char *		5448028	0					
ANR	5448043	Identifier	cmd_str		5448028	1					
ANR	5448044	IdentifierDecl	* * tmp		5448028	1					
ANR	5448045	IdentifierDeclType	char * *		5448028	0					
ANR	5448046	Identifier	tmp		5448028	1					
ANR	5448047	IdentifierDeclStatement	int size ;	326:1:9698:9706	5448028	2	True				
ANR	5448048	IdentifierDecl	size		5448028	0					
ANR	5448049	IdentifierDeclType	int		5448028	0					
ANR	5448050	Identifier	size		5448028	1					
ANR	5448051	IdentifierDeclStatement	int rc ;	327:1:9709:9715	5448028	3	True				
ANR	5448052	IdentifierDecl	rc		5448028	0					
ANR	5448053	IdentifierDeclType	int		5448028	0					
ANR	5448054	Identifier	rc		5448028	1					
ANR	5448055	IdentifierDeclStatement	param_functions * p_funcs = NULL ;	328:1:9718:9749	5448028	4	True				
ANR	5448056	IdentifierDecl	* p_funcs = NULL		5448028	0					
ANR	5448057	IdentifierDeclType	param_functions *		5448028	0					
ANR	5448058	Identifier	p_funcs		5448028	1					
ANR	5448059	AssignmentExpression	* p_funcs = NULL		5448028	2		=			
ANR	5448060	Identifier	NULL		5448028	0					
ANR	5448061	Identifier	NULL		5448028	1					
ANR	5448062	ExpressionStatement	"install_sig_handler ( SIGPIPE , SIG_IGN )"	333:1:9858:9896	5448028	5	True				
ANR	5448063	CallExpression	"install_sig_handler ( SIGPIPE , SIG_IGN )"		5448028	0					
ANR	5448064	Callee	install_sig_handler		5448028	0					
ANR	5448065	Identifier	install_sig_handler		5448028	0					
ANR	5448066	ArgumentList	SIGPIPE		5448028	1					
ANR	5448067	Argument	SIGPIPE		5448028	0					
ANR	5448068	Identifier	SIGPIPE		5448028	0					
ANR	5448069	Argument	SIG_IGN		5448028	1					
ANR	5448070	Identifier	SIG_IGN		5448028	0					
ANR	5448071	ExpressionStatement	"myDistro -> Init ( argc , argv )"	336:1:9907:9935	5448028	6	True				
ANR	5448072	CallExpression	"myDistro -> Init ( argc , argv )"		5448028	0					
ANR	5448073	Callee	myDistro -> Init		5448028	0					
ANR	5448074	PtrMemberAccess	myDistro -> Init		5448028	0					
ANR	5448075	Identifier	myDistro		5448028	0					
ANR	5448076	Identifier	Init		5448028	1					
ANR	5448077	ArgumentList	argc		5448028	1					
ANR	5448078	Argument	argc		5448028	0					
ANR	5448079	Identifier	argc		5448028	0					
ANR	5448080	Argument	argv		5448028	1					
ANR	5448081	Identifier	argv		5448028	0					
ANR	5448082	ExpressionStatement	config ( )	337:1:9938:9946	5448028	7	True				
ANR	5448083	CallExpression	config ( )		5448028	0					
ANR	5448084	Callee	config		5448028	0					
ANR	5448085	Identifier	config		5448028	0					
ANR	5448086	ArgumentList			5448028	1					
ANR	5448087	ExpressionStatement	"MyName = strrchr ( argv [ 0 ] , DIR_DELIM_CHAR )"	339:1:9950:9993	5448028	8	True				
ANR	5448088	AssignmentExpression	"MyName = strrchr ( argv [ 0 ] , DIR_DELIM_CHAR )"		5448028	0		=			
ANR	5448089	Identifier	MyName		5448028	0					
ANR	5448090	CallExpression	"strrchr ( argv [ 0 ] , DIR_DELIM_CHAR )"		5448028	1					
ANR	5448091	Callee	strrchr		5448028	0					
ANR	5448092	Identifier	strrchr		5448028	0					
ANR	5448093	ArgumentList	argv [ 0 ]		5448028	1					
ANR	5448094	Argument	argv [ 0 ]		5448028	0					
ANR	5448095	ArrayIndexing	argv [ 0 ]		5448028	0					
ANR	5448096	Identifier	argv		5448028	0					
ANR	5448097	PrimaryExpression	0		5448028	1					
ANR	5448098	Argument	DIR_DELIM_CHAR		5448028	1					
ANR	5448099	Identifier	DIR_DELIM_CHAR		5448028	0					
ANR	5448100	IfStatement	if ( ! MyName )		5448028	9					
ANR	5448101	Condition	! MyName	340:5:10000:10006	5448028	0	True				
ANR	5448102	UnaryOperationExpression	! MyName		5448028	0					
ANR	5448103	UnaryOperator	!		5448028	0					
ANR	5448104	Identifier	MyName		5448028	1					
ANR	5448105	CompoundStatement		18:15:362:362	5448028	1					
ANR	5448106	ExpressionStatement	MyName = argv [ 0 ]	341:2:10014:10030	5448028	0	True				
ANR	5448107	AssignmentExpression	MyName = argv [ 0 ]		5448028	0		=			
ANR	5448108	Identifier	MyName		5448028	0					
ANR	5448109	ArrayIndexing	argv [ 0 ]		5448028	1					
ANR	5448110	Identifier	argv		5448028	0					
ANR	5448111	PrimaryExpression	0		5448028	1					
ANR	5448112	ElseStatement	else		5448028	0					
ANR	5448113	CompoundStatement		20:8:392:392	5448028	0					
ANR	5448114	ExpressionStatement	MyName ++	343:2:10044:10052	5448028	0	True				
ANR	5448115	PostIncDecOperationExpression	MyName ++		5448028	0					
ANR	5448116	Identifier	MyName		5448028	0					
ANR	5448117	IncDec	++		5448028	1					
ANR	5448118	ExpressionStatement	"cmd_str = strchr ( MyName , '_' )"	346:1:10123:10153	5448028	10	True				
ANR	5448119	AssignmentExpression	"cmd_str = strchr ( MyName , '_' )"		5448028	0		=			
ANR	5448120	Identifier	cmd_str		5448028	0					
ANR	5448121	CallExpression	"strchr ( MyName , '_' )"		5448028	1					
ANR	5448122	Callee	strchr		5448028	0					
ANR	5448123	Identifier	strchr		5448028	0					
ANR	5448124	ArgumentList	MyName		5448028	1					
ANR	5448125	Argument	MyName		5448028	0					
ANR	5448126	Identifier	MyName		5448028	0					
ANR	5448127	Argument	'_'		5448028	1					
ANR	5448128	PrimaryExpression	'_'		5448028	0					
ANR	5448129	IfStatement	if ( ! cmd_str )		5448028	11					
ANR	5448130	Condition	! cmd_str	347:5:10160:10167	5448028	0	True				
ANR	5448131	UnaryOperationExpression	! cmd_str		5448028	0					
ANR	5448132	UnaryOperator	!		5448028	0					
ANR	5448133	Identifier	cmd_str		5448028	1					
ANR	5448134	CompoundStatement		25:16:523:523	5448028	1					
ANR	5448135	IfStatement	if ( ! argv [ 1 ] )		5448028	0					
ANR	5448136	Condition	! argv [ 1 ]	350:6:10222:10230	5448028	0	True				
ANR	5448137	UnaryOperationExpression	! argv [ 1 ]		5448028	0					
ANR	5448138	UnaryOperator	!		5448028	0					
ANR	5448139	ArrayIndexing	argv [ 1 ]		5448028	1					
ANR	5448140	Identifier	argv		5448028	0					
ANR	5448141	PrimaryExpression	1		5448028	1					
ANR	5448142	CompoundStatement		28:18:586:586	5448028	1					
ANR	5448143	ExpressionStatement	usage ( MyName )	350:20:10236:10251	5448028	0	True				
ANR	5448144	CallExpression	usage ( MyName )		5448028	0					
ANR	5448145	Callee	usage		5448028	0					
ANR	5448146	Identifier	usage		5448028	0					
ANR	5448147	ArgumentList	MyName		5448028	1					
ANR	5448148	Argument	MyName		5448028	0					
ANR	5448149	Identifier	MyName		5448028	0					
ANR	5448150	IfStatement	if ( argv [ 1 ] [ 0 ] == '-' )		5448028	1					
ANR	5448151	Condition	argv [ 1 ] [ 0 ] == '-'	353:6:10323:10339	5448028	0	True				
ANR	5448152	EqualityExpression	argv [ 1 ] [ 0 ] == '-'		5448028	0		==			
ANR	5448153	ArrayIndexing	argv [ 1 ] [ 0 ]		5448028	0					
ANR	5448154	ArrayIndexing	argv [ 1 ]		5448028	0					
ANR	5448155	Identifier	argv		5448028	0					
ANR	5448156	PrimaryExpression	1		5448028	1					
ANR	5448157	PrimaryExpression	0		5448028	1					
ANR	5448158	PrimaryExpression	'-'		5448028	1					
ANR	5448159	CompoundStatement		31:26:695:695	5448028	1					
ANR	5448160	IfStatement	if ( argv [ 1 ] [ 1 ] == 'v' )		5448028	0					
ANR	5448161	Condition	argv [ 1 ] [ 1 ] == 'v'	356:7:10461:10477	5448028	0	True				
ANR	5448162	EqualityExpression	argv [ 1 ] [ 1 ] == 'v'		5448028	0		==			
ANR	5448163	ArrayIndexing	argv [ 1 ] [ 1 ]		5448028	0					
ANR	5448164	ArrayIndexing	argv [ 1 ]		5448028	0					
ANR	5448165	Identifier	argv		5448028	0					
ANR	5448166	PrimaryExpression	1		5448028	1					
ANR	5448167	PrimaryExpression	1		5448028	1					
ANR	5448168	PrimaryExpression	'v'		5448028	1					
ANR	5448169	CompoundStatement		34:27:833:833	5448028	1					
ANR	5448170	ExpressionStatement	version ( )	357:4:10487:10496	5448028	0	True				
ANR	5448171	CallExpression	version ( )		5448028	0					
ANR	5448172	Callee	version		5448028	0					
ANR	5448173	Identifier	version		5448028	0					
ANR	5448174	ArgumentList			5448028	1					
ANR	5448175	ElseStatement	else		5448028	0					
ANR	5448176	CompoundStatement		36:10:860:860	5448028	0					
ANR	5448177	ExpressionStatement	usage ( MyName )	359:4:10514:10529	5448028	0	True				
ANR	5448178	CallExpression	usage ( MyName )		5448028	0					
ANR	5448179	Callee	usage		5448028	0					
ANR	5448180	Identifier	usage		5448028	0					
ANR	5448181	ArgumentList	MyName		5448028	1					
ANR	5448182	Argument	MyName		5448028	0					
ANR	5448183	Identifier	MyName		5448028	0					
ANR	5448184	ExpressionStatement	size = strlen ( argv [ 1 ] )	362:2:10542:10566	5448028	2	True				
ANR	5448185	AssignmentExpression	size = strlen ( argv [ 1 ] )		5448028	0		=			
ANR	5448186	Identifier	size		5448028	0					
ANR	5448187	CallExpression	strlen ( argv [ 1 ] )		5448028	1					
ANR	5448188	Callee	strlen		5448028	0					
ANR	5448189	Identifier	strlen		5448028	0					
ANR	5448190	ArgumentList	argv [ 1 ]		5448028	1					
ANR	5448191	Argument	argv [ 1 ]		5448028	0					
ANR	5448192	ArrayIndexing	argv [ 1 ]		5448028	0					
ANR	5448193	Identifier	argv		5448028	0					
ANR	5448194	PrimaryExpression	1		5448028	1					
ANR	5448195	ExpressionStatement	MyName = ( char * ) malloc ( size + 8 )	363:2:10570:10604	5448028	3	True				
ANR	5448196	AssignmentExpression	MyName = ( char * ) malloc ( size + 8 )		5448028	0		=			
ANR	5448197	Identifier	MyName		5448028	0					
ANR	5448198	CastExpression	( char * ) malloc ( size + 8 )		5448028	1					
ANR	5448199	CastTarget	char *		5448028	0					
ANR	5448200	CallExpression	malloc ( size + 8 )		5448028	1					
ANR	5448201	Callee	malloc		5448028	0					
ANR	5448202	Identifier	malloc		5448028	0					
ANR	5448203	ArgumentList	size + 8		5448028	1					
ANR	5448204	Argument	size + 8		5448028	0					
ANR	5448205	AdditiveExpression	size + 8		5448028	0		+			
ANR	5448206	Identifier	size		5448028	0					
ANR	5448207	PrimaryExpression	8		5448028	1					
ANR	5448208	ExpressionStatement	"sprintf ( MyName , ""condor_%s"" , argv [ 1 ] )"	364:2:10608:10647	5448028	4	True				
ANR	5448209	CallExpression	"sprintf ( MyName , ""condor_%s"" , argv [ 1 ] )"		5448028	0					
ANR	5448210	Callee	sprintf		5448028	0					
ANR	5448211	Identifier	sprintf		5448028	0					
ANR	5448212	ArgumentList	MyName		5448028	1					
ANR	5448213	Argument	MyName		5448028	0					
ANR	5448214	Identifier	MyName		5448028	0					
ANR	5448215	Argument	"""condor_%s"""		5448028	1					
ANR	5448216	PrimaryExpression	"""condor_%s"""		5448028	0					
ANR	5448217	Argument	argv [ 1 ]		5448028	2					
ANR	5448218	ArrayIndexing	argv [ 1 ]		5448028	0					
ANR	5448219	Identifier	argv		5448028	0					
ANR	5448220	PrimaryExpression	1		5448028	1					
ANR	5448221	ExpressionStatement	cmd_str = MyName + 6	365:2:10651:10669	5448028	5	True				
ANR	5448222	AssignmentExpression	cmd_str = MyName + 6		5448028	0		=			
ANR	5448223	Identifier	cmd_str		5448028	0					
ANR	5448224	AdditiveExpression	MyName + 6		5448028	1		+			
ANR	5448225	Identifier	MyName		5448028	0					
ANR	5448226	PrimaryExpression	6		5448028	1					
ANR	5448227	ExpressionStatement	argv ++	366:2:10673:10679	5448028	6	True				
ANR	5448228	PostIncDecOperationExpression	argv ++		5448028	0					
ANR	5448229	Identifier	argv		5448028	0					
ANR	5448230	IncDec	++		5448028	1					
ANR	5448231	ExpressionStatement	argc --	366:10:10681:10687	5448028	7	True				
ANR	5448232	PostIncDecOperationExpression	argc --		5448028	0					
ANR	5448233	Identifier	argc		5448028	0					
ANR	5448234	IncDec	--		5448028	1					
ANR	5448235	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_reconfig_schedd"" ) )"		5448028	12					
ANR	5448236	Condition	"! strncmp_auto ( cmd_str , ""_reconfig_schedd"" )"	372:5:10904:10947	5448028	0	True				
ANR	5448237	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_reconfig_schedd"" )"		5448028	0					
ANR	5448238	UnaryOperator	!		5448028	0					
ANR	5448239	CallExpression	"strncmp_auto ( cmd_str , ""_reconfig_schedd"" )"		5448028	1					
ANR	5448240	Callee	strncmp_auto		5448028	0					
ANR	5448241	Identifier	strncmp_auto		5448028	0					
ANR	5448242	ArgumentList	cmd_str		5448028	1					
ANR	5448243	Argument	cmd_str		5448028	0					
ANR	5448244	Identifier	cmd_str		5448028	0					
ANR	5448245	Argument	"""_reconfig_schedd"""		5448028	1					
ANR	5448246	PrimaryExpression	"""_reconfig_schedd"""		5448028	0					
ANR	5448247	CompoundStatement		50:52:1303:1303	5448028	1					
ANR	5448248	ExpressionStatement	"fprintf ( stderr , ""WARNING: condor_reconfig_schedd is deprecated.\\n"" )"	373:2:10955:11024	5448028	0	True				
ANR	5448249	CallExpression	"fprintf ( stderr , ""WARNING: condor_reconfig_schedd is deprecated.\\n"" )"		5448028	0					
ANR	5448250	Callee	fprintf		5448028	0					
ANR	5448251	Identifier	fprintf		5448028	0					
ANR	5448252	ArgumentList	stderr		5448028	1					
ANR	5448253	Argument	stderr		5448028	0					
ANR	5448254	Identifier	stderr		5448028	0					
ANR	5448255	Argument	"""WARNING: condor_reconfig_schedd is deprecated.\\n"""		5448028	1					
ANR	5448256	PrimaryExpression	"""WARNING: condor_reconfig_schedd is deprecated.\\n"""		5448028	0					
ANR	5448257	ExpressionStatement	"fprintf ( stderr , ""\\t Use: \\""condor_reconfig -schedd\\"" instead.\\n"" )"	374:2:11028:11095	5448028	1	True				
ANR	5448258	CallExpression	"fprintf ( stderr , ""\\t Use: \\""condor_reconfig -schedd\\"" instead.\\n"" )"		5448028	0					
ANR	5448259	Callee	fprintf		5448028	0					
ANR	5448260	Identifier	fprintf		5448028	0					
ANR	5448261	ArgumentList	stderr		5448028	1					
ANR	5448262	Argument	stderr		5448028	0					
ANR	5448263	Identifier	stderr		5448028	0					
ANR	5448264	Argument	"""\\t Use: \\""condor_reconfig -schedd\\"" instead.\\n"""		5448028	1					
ANR	5448265	PrimaryExpression	"""\\t Use: \\""condor_reconfig -schedd\\"" instead.\\n"""		5448028	0					
ANR	5448266	ExpressionStatement	cmd = DC_RECONFIG_FULL	375:2:11099:11121	5448028	2	True				
ANR	5448267	AssignmentExpression	cmd = DC_RECONFIG_FULL		5448028	0		=			
ANR	5448268	Identifier	cmd		5448028	0					
ANR	5448269	Identifier	DC_RECONFIG_FULL		5448028	1					
ANR	5448270	ExpressionStatement	dt = DT_SCHEDD	376:2:11125:11139	5448028	3	True				
ANR	5448271	AssignmentExpression	dt = DT_SCHEDD		5448028	0		=			
ANR	5448272	Identifier	dt		5448028	0					
ANR	5448273	Identifier	DT_SCHEDD		5448028	1					
ANR	5448274	ElseStatement	else		5448028	0					
ANR	5448275	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_reconfig"" ) )"		5448028	0					
ANR	5448276	Condition	"! strncmp_auto ( cmd_str , ""_reconfig"" )"	377:15:11156:11192	5448028	0	True				
ANR	5448277	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_reconfig"" )"		5448028	0					
ANR	5448278	UnaryOperator	!		5448028	0					
ANR	5448279	CallExpression	"strncmp_auto ( cmd_str , ""_reconfig"" )"		5448028	1					
ANR	5448280	Callee	strncmp_auto		5448028	0					
ANR	5448281	Identifier	strncmp_auto		5448028	0					
ANR	5448282	ArgumentList	cmd_str		5448028	1					
ANR	5448283	Argument	cmd_str		5448028	0					
ANR	5448284	Identifier	cmd_str		5448028	0					
ANR	5448285	Argument	"""_reconfig"""		5448028	1					
ANR	5448286	PrimaryExpression	"""_reconfig"""		5448028	0					
ANR	5448287	CompoundStatement		55:55:1548:1548	5448028	1					
ANR	5448288	ExpressionStatement	cmd = DC_RECONFIG_FULL	378:2:11200:11222	5448028	0	True				
ANR	5448289	AssignmentExpression	cmd = DC_RECONFIG_FULL		5448028	0		=			
ANR	5448290	Identifier	cmd		5448028	0					
ANR	5448291	Identifier	DC_RECONFIG_FULL		5448028	1					
ANR	5448292	ExpressionStatement	takes_subsys = 1	379:2:11226:11242	5448028	1	True				
ANR	5448293	AssignmentExpression	takes_subsys = 1		5448028	0		=			
ANR	5448294	Identifier	takes_subsys		5448028	0					
ANR	5448295	PrimaryExpression	1		5448028	1					
ANR	5448296	ElseStatement	else		5448028	0					
ANR	5448297	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_restart"" ) )"		5448028	0					
ANR	5448298	Condition	"! strncmp_auto ( cmd_str , ""_restart"" )"	380:12:11256:11291	5448028	0	True				
ANR	5448299	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_restart"" )"		5448028	0					
ANR	5448300	UnaryOperator	!		5448028	0					
ANR	5448301	CallExpression	"strncmp_auto ( cmd_str , ""_restart"" )"		5448028	1					
ANR	5448302	Callee	strncmp_auto		5448028	0					
ANR	5448303	Identifier	strncmp_auto		5448028	0					
ANR	5448304	ArgumentList	cmd_str		5448028	1					
ANR	5448305	Argument	cmd_str		5448028	0					
ANR	5448306	Identifier	cmd_str		5448028	0					
ANR	5448307	Argument	"""_restart"""		5448028	1					
ANR	5448308	PrimaryExpression	"""_restart"""		5448028	0					
ANR	5448309	CompoundStatement		58:51:1647:1647	5448028	1					
ANR	5448310	ExpressionStatement	cmd = RESTART	381:2:11299:11312	5448028	0	True				
ANR	5448311	AssignmentExpression	cmd = RESTART		5448028	0		=			
ANR	5448312	Identifier	cmd		5448028	0					
ANR	5448313	Identifier	RESTART		5448028	1					
ANR	5448314	ExpressionStatement	takes_subsys = 1	382:2:11316:11332	5448028	1	True				
ANR	5448315	AssignmentExpression	takes_subsys = 1		5448028	0		=			
ANR	5448316	Identifier	takes_subsys		5448028	0					
ANR	5448317	PrimaryExpression	1		5448028	1					
ANR	5448318	ElseStatement	else		5448028	0					
ANR	5448319	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_off"" ) )"		5448028	0					
ANR	5448320	Condition	"! strncmp_auto ( cmd_str , ""_off"" )"	383:12:11346:11377	5448028	0	True				
ANR	5448321	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_off"" )"		5448028	0					
ANR	5448322	UnaryOperator	!		5448028	0					
ANR	5448323	CallExpression	"strncmp_auto ( cmd_str , ""_off"" )"		5448028	1					
ANR	5448324	Callee	strncmp_auto		5448028	0					
ANR	5448325	Identifier	strncmp_auto		5448028	0					
ANR	5448326	ArgumentList	cmd_str		5448028	1					
ANR	5448327	Argument	cmd_str		5448028	0					
ANR	5448328	Identifier	cmd_str		5448028	0					
ANR	5448329	Argument	"""_off"""		5448028	1					
ANR	5448330	PrimaryExpression	"""_off"""		5448028	0					
ANR	5448331	CompoundStatement		61:47:1733:1733	5448028	1					
ANR	5448332	ExpressionStatement	cmd = DAEMONS_OFF	384:2:11385:11402	5448028	0	True				
ANR	5448333	AssignmentExpression	cmd = DAEMONS_OFF		5448028	0		=			
ANR	5448334	Identifier	cmd		5448028	0					
ANR	5448335	Identifier	DAEMONS_OFF		5448028	1					
ANR	5448336	ExpressionStatement	takes_subsys = 1	385:2:11406:11422	5448028	1	True				
ANR	5448337	AssignmentExpression	takes_subsys = 1		5448028	0		=			
ANR	5448338	Identifier	takes_subsys		5448028	0					
ANR	5448339	PrimaryExpression	1		5448028	1					
ANR	5448340	ElseStatement	else		5448028	0					
ANR	5448341	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_on"" ) )"		5448028	0					
ANR	5448342	Condition	"! strncmp_auto ( cmd_str , ""_on"" )"	386:12:11436:11466	5448028	0	True				
ANR	5448343	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_on"" )"		5448028	0					
ANR	5448344	UnaryOperator	!		5448028	0					
ANR	5448345	CallExpression	"strncmp_auto ( cmd_str , ""_on"" )"		5448028	1					
ANR	5448346	Callee	strncmp_auto		5448028	0					
ANR	5448347	Identifier	strncmp_auto		5448028	0					
ANR	5448348	ArgumentList	cmd_str		5448028	1					
ANR	5448349	Argument	cmd_str		5448028	0					
ANR	5448350	Identifier	cmd_str		5448028	0					
ANR	5448351	Argument	"""_on"""		5448028	1					
ANR	5448352	PrimaryExpression	"""_on"""		5448028	0					
ANR	5448353	CompoundStatement		64:46:1822:1822	5448028	1					
ANR	5448354	ExpressionStatement	cmd = DAEMONS_ON	387:2:11474:11490	5448028	0	True				
ANR	5448355	AssignmentExpression	cmd = DAEMONS_ON		5448028	0		=			
ANR	5448356	Identifier	cmd		5448028	0					
ANR	5448357	Identifier	DAEMONS_ON		5448028	1					
ANR	5448358	ExpressionStatement	takes_subsys = 1	388:2:11494:11510	5448028	1	True				
ANR	5448359	AssignmentExpression	takes_subsys = 1		5448028	0		=			
ANR	5448360	Identifier	takes_subsys		5448028	0					
ANR	5448361	PrimaryExpression	1		5448028	1					
ANR	5448362	ElseStatement	else		5448028	0					
ANR	5448363	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_master_off"" ) )"		5448028	0					
ANR	5448364	Condition	"! strncmp_auto ( cmd_str , ""_master_off"" )"	389:12:11524:11562	5448028	0	True				
ANR	5448365	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_master_off"" )"		5448028	0					
ANR	5448366	UnaryOperator	!		5448028	0					
ANR	5448367	CallExpression	"strncmp_auto ( cmd_str , ""_master_off"" )"		5448028	1					
ANR	5448368	Callee	strncmp_auto		5448028	0					
ANR	5448369	Identifier	strncmp_auto		5448028	0					
ANR	5448370	ArgumentList	cmd_str		5448028	1					
ANR	5448371	Argument	cmd_str		5448028	0					
ANR	5448372	Identifier	cmd_str		5448028	0					
ANR	5448373	Argument	"""_master_off"""		5448028	1					
ANR	5448374	PrimaryExpression	"""_master_off"""		5448028	0					
ANR	5448375	CompoundStatement		67:54:1918:1918	5448028	1					
ANR	5448376	ExpressionStatement	"fprintf ( stderr , ""WARNING: condor_master_off is deprecated.\\n"" )"	390:2:11570:11634	5448028	0	True				
ANR	5448377	CallExpression	"fprintf ( stderr , ""WARNING: condor_master_off is deprecated.\\n"" )"		5448028	0					
ANR	5448378	Callee	fprintf		5448028	0					
ANR	5448379	Identifier	fprintf		5448028	0					
ANR	5448380	ArgumentList	stderr		5448028	1					
ANR	5448381	Argument	stderr		5448028	0					
ANR	5448382	Identifier	stderr		5448028	0					
ANR	5448383	Argument	"""WARNING: condor_master_off is deprecated.\\n"""		5448028	1					
ANR	5448384	PrimaryExpression	"""WARNING: condor_master_off is deprecated.\\n"""		5448028	0					
ANR	5448385	ExpressionStatement	"fprintf ( stderr , ""\\t Use: \\""condor_off -master\\"" instead.\\n"" )"	391:2:11638:11700	5448028	1	True				
ANR	5448386	CallExpression	"fprintf ( stderr , ""\\t Use: \\""condor_off -master\\"" instead.\\n"" )"		5448028	0					
ANR	5448387	Callee	fprintf		5448028	0					
ANR	5448388	Identifier	fprintf		5448028	0					
ANR	5448389	ArgumentList	stderr		5448028	1					
ANR	5448390	Argument	stderr		5448028	0					
ANR	5448391	Identifier	stderr		5448028	0					
ANR	5448392	Argument	"""\\t Use: \\""condor_off -master\\"" instead.\\n"""		5448028	1					
ANR	5448393	PrimaryExpression	"""\\t Use: \\""condor_off -master\\"" instead.\\n"""		5448028	0					
ANR	5448394	ExpressionStatement	cmd = DC_OFF_GRACEFUL	392:2:11704:11725	5448028	2	True				
ANR	5448395	AssignmentExpression	cmd = DC_OFF_GRACEFUL		5448028	0		=			
ANR	5448396	Identifier	cmd		5448028	0					
ANR	5448397	Identifier	DC_OFF_GRACEFUL		5448028	1					
ANR	5448398	ExpressionStatement	dt = DT_MASTER	393:2:11729:11743	5448028	3	True				
ANR	5448399	AssignmentExpression	dt = DT_MASTER		5448028	0		=			
ANR	5448400	Identifier	dt		5448028	0					
ANR	5448401	Identifier	DT_MASTER		5448028	1					
ANR	5448402	ExpressionStatement	takes_subsys = 0	394:2:11747:11763	5448028	4	True				
ANR	5448403	AssignmentExpression	takes_subsys = 0		5448028	0		=			
ANR	5448404	Identifier	takes_subsys		5448028	0					
ANR	5448405	PrimaryExpression	0		5448028	1					
ANR	5448406	ElseStatement	else		5448028	0					
ANR	5448407	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_reschedule"" ) )"		5448028	0					
ANR	5448408	Condition	"! strncmp_auto ( cmd_str , ""_reschedule"" )"	395:12:11777:11815	5448028	0	True				
ANR	5448409	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_reschedule"" )"		5448028	0					
ANR	5448410	UnaryOperator	!		5448028	0					
ANR	5448411	CallExpression	"strncmp_auto ( cmd_str , ""_reschedule"" )"		5448028	1					
ANR	5448412	Callee	strncmp_auto		5448028	0					
ANR	5448413	Identifier	strncmp_auto		5448028	0					
ANR	5448414	ArgumentList	cmd_str		5448028	1					
ANR	5448415	Argument	cmd_str		5448028	0					
ANR	5448416	Identifier	cmd_str		5448028	0					
ANR	5448417	Argument	"""_reschedule"""		5448028	1					
ANR	5448418	PrimaryExpression	"""_reschedule"""		5448028	0					
ANR	5448419	CompoundStatement		73:54:2171:2171	5448028	1					
ANR	5448420	ExpressionStatement	cmd = RESCHEDULE	396:2:11823:11839	5448028	0	True				
ANR	5448421	AssignmentExpression	cmd = RESCHEDULE		5448028	0		=			
ANR	5448422	Identifier	cmd		5448028	0					
ANR	5448423	Identifier	RESCHEDULE		5448028	1					
ANR	5448424	ElseStatement	else		5448028	0					
ANR	5448425	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_vacate"" ) )"		5448028	0					
ANR	5448426	Condition	"! strncmp_auto ( cmd_str , ""_vacate"" )"	397:12:11853:11887	5448028	0	True				
ANR	5448427	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_vacate"" )"		5448028	0					
ANR	5448428	UnaryOperator	!		5448028	0					
ANR	5448429	CallExpression	"strncmp_auto ( cmd_str , ""_vacate"" )"		5448028	1					
ANR	5448430	Callee	strncmp_auto		5448028	0					
ANR	5448431	Identifier	strncmp_auto		5448028	0					
ANR	5448432	ArgumentList	cmd_str		5448028	1					
ANR	5448433	Argument	cmd_str		5448028	0					
ANR	5448434	Identifier	cmd_str		5448028	0					
ANR	5448435	Argument	"""_vacate"""		5448028	1					
ANR	5448436	PrimaryExpression	"""_vacate"""		5448028	0					
ANR	5448437	CompoundStatement		75:50:2243:2243	5448028	1					
ANR	5448438	ExpressionStatement	cmd = VACATE_CLAIM	398:2:11895:11913	5448028	0	True				
ANR	5448439	AssignmentExpression	cmd = VACATE_CLAIM		5448028	0		=			
ANR	5448440	Identifier	cmd		5448028	0					
ANR	5448441	Identifier	VACATE_CLAIM		5448028	1					
ANR	5448442	ElseStatement	else		5448028	0					
ANR	5448443	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_checkpoint"" ) )"		5448028	0					
ANR	5448444	Condition	"! strncmp_auto ( cmd_str , ""_checkpoint"" )"	399:12:11927:11965	5448028	0	True				
ANR	5448445	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_checkpoint"" )"		5448028	0					
ANR	5448446	UnaryOperator	!		5448028	0					
ANR	5448447	CallExpression	"strncmp_auto ( cmd_str , ""_checkpoint"" )"		5448028	1					
ANR	5448448	Callee	strncmp_auto		5448028	0					
ANR	5448449	Identifier	strncmp_auto		5448028	0					
ANR	5448450	ArgumentList	cmd_str		5448028	1					
ANR	5448451	Argument	cmd_str		5448028	0					
ANR	5448452	Identifier	cmd_str		5448028	0					
ANR	5448453	Argument	"""_checkpoint"""		5448028	1					
ANR	5448454	PrimaryExpression	"""_checkpoint"""		5448028	0					
ANR	5448455	CompoundStatement		77:54:2321:2321	5448028	1					
ANR	5448456	ExpressionStatement	cmd = PCKPT_JOB	400:2:11973:11988	5448028	0	True				
ANR	5448457	AssignmentExpression	cmd = PCKPT_JOB		5448028	0		=			
ANR	5448458	Identifier	cmd		5448028	0					
ANR	5448459	Identifier	PCKPT_JOB		5448028	1					
ANR	5448460	ElseStatement	else		5448028	0					
ANR	5448461	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_squawk"" ) )"		5448028	0					
ANR	5448462	Condition	"! strncmp_auto ( cmd_str , ""_squawk"" )"	401:13:12003:12037	5448028	0	True				
ANR	5448463	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_squawk"" )"		5448028	0					
ANR	5448464	UnaryOperator	!		5448028	0					
ANR	5448465	CallExpression	"strncmp_auto ( cmd_str , ""_squawk"" )"		5448028	1					
ANR	5448466	Callee	strncmp_auto		5448028	0					
ANR	5448467	Identifier	strncmp_auto		5448028	0					
ANR	5448468	ArgumentList	cmd_str		5448028	1					
ANR	5448469	Argument	cmd_str		5448028	0					
ANR	5448470	Identifier	cmd_str		5448028	0					
ANR	5448471	Argument	"""_squawk"""		5448028	1					
ANR	5448472	PrimaryExpression	"""_squawk"""		5448028	0					
ANR	5448473	CompoundStatement		79:51:2393:2393	5448028	1					
ANR	5448474	ExpressionStatement	cmd = SQUAWK	402:2:12045:12057	5448028	0	True				
ANR	5448475	AssignmentExpression	cmd = SQUAWK		5448028	0		=			
ANR	5448476	Identifier	cmd		5448028	0					
ANR	5448477	Identifier	SQUAWK		5448028	1					
ANR	5448478	ExpressionStatement	takes_subsys = 1	403:2:12061:12077	5448028	1	True				
ANR	5448479	AssignmentExpression	takes_subsys = 1		5448028	0		=			
ANR	5448480	Identifier	takes_subsys		5448028	0					
ANR	5448481	PrimaryExpression	1		5448028	1					
ANR	5448482	ElseStatement	else		5448028	0					
ANR	5448483	IfStatement	"if ( ! strncmp_auto ( cmd_str , ""_set_shutdown"" ) )"		5448028	0					
ANR	5448484	Condition	"! strncmp_auto ( cmd_str , ""_set_shutdown"" )"	404:13:12092:12132	5448028	0	True				
ANR	5448485	UnaryOperationExpression	"! strncmp_auto ( cmd_str , ""_set_shutdown"" )"		5448028	0					
ANR	5448486	UnaryOperator	!		5448028	0					
ANR	5448487	CallExpression	"strncmp_auto ( cmd_str , ""_set_shutdown"" )"		5448028	1					
ANR	5448488	Callee	strncmp_auto		5448028	0					
ANR	5448489	Identifier	strncmp_auto		5448028	0					
ANR	5448490	ArgumentList	cmd_str		5448028	1					
ANR	5448491	Argument	cmd_str		5448028	0					
ANR	5448492	Identifier	cmd_str		5448028	0					
ANR	5448493	Argument	"""_set_shutdown"""		5448028	1					
ANR	5448494	PrimaryExpression	"""_set_shutdown"""		5448028	0					
ANR	5448495	CompoundStatement		82:57:2488:2488	5448028	1					
ANR	5448496	ExpressionStatement	cmd = SET_SHUTDOWN_PROGRAM	405:2:12140:12166	5448028	0	True				
ANR	5448497	AssignmentExpression	cmd = SET_SHUTDOWN_PROGRAM		5448028	0		=			
ANR	5448498	Identifier	cmd		5448028	0					
ANR	5448499	Identifier	SET_SHUTDOWN_PROGRAM		5448028	1					
ANR	5448500	ElseStatement	else		5448028	0					
ANR	5448501	CompoundStatement		84:8:2528:2528	5448028	0					
ANR	5448502	ExpressionStatement	"fprintf ( stderr , ""ERROR: unknown command %s\\n"" , MyName )"	407:2:12180:12236	5448028	0	True				
ANR	5448503	CallExpression	"fprintf ( stderr , ""ERROR: unknown command %s\\n"" , MyName )"		5448028	0					
ANR	5448504	Callee	fprintf		5448028	0					
ANR	5448505	Identifier	fprintf		5448028	0					
ANR	5448506	ArgumentList	stderr		5448028	1					
ANR	5448507	Argument	stderr		5448028	0					
ANR	5448508	Identifier	stderr		5448028	0					
ANR	5448509	Argument	"""ERROR: unknown command %s\\n"""		5448028	1					
ANR	5448510	PrimaryExpression	"""ERROR: unknown command %s\\n"""		5448028	0					
ANR	5448511	Argument	MyName		5448028	2					
ANR	5448512	Identifier	MyName		5448028	0					
ANR	5448513	ExpressionStatement	"usage ( ""condor"" )"	408:2:12240:12257	5448028	1	True				
ANR	5448514	CallExpression	"usage ( ""condor"" )"		5448028	0					
ANR	5448515	Callee	usage		5448028	0					
ANR	5448516	Identifier	usage		5448028	0					
ANR	5448517	ArgumentList	"""condor"""		5448028	1					
ANR	5448518	Argument	"""condor"""		5448028	0					
ANR	5448519	PrimaryExpression	"""condor"""		5448028	0					
ANR	5448520	ExpressionStatement	tmp = argv	412:1:12312:12322	5448028	13	True				
ANR	5448521	AssignmentExpression	tmp = argv		5448028	0		=			
ANR	5448522	Identifier	tmp		5448028	0					
ANR	5448523	Identifier	argv		5448028	1					
ANR	5448524	ForStatement	for ( tmp ++ ; * tmp ; tmp ++ )		5448028	14					
ANR	5448525	ForInit	tmp ++ ;	413:6:12330:12335	5448028	0	True				
ANR	5448526	PostIncDecOperationExpression	tmp ++		5448028	0					
ANR	5448527	Identifier	tmp		5448028	0					
ANR	5448528	IncDec	++		5448028	1					
ANR	5448529	Condition	* tmp	413:13:12337:12340	5448028	1	True				
ANR	5448530	UnaryOperationExpression	* tmp		5448028	0					
ANR	5448531	UnaryOperator	*		5448028	0					
ANR	5448532	Identifier	tmp		5448028	1					
ANR	5448533	PostIncDecOperationExpression	tmp ++	413:19:12343:12347	5448028	2	True				
ANR	5448534	Identifier	tmp		5448028	0					
ANR	5448535	IncDec	++		5448028	1					
ANR	5448536	CompoundStatement		91:27:2703:2703	5448028	3					
ANR	5448537	IfStatement	if ( ( * tmp ) [ 0 ] != '-' )		5448028	0					
ANR	5448538	Condition	( * tmp ) [ 0 ] != '-'	414:6:12359:12374	5448028	0	True				
ANR	5448539	EqualityExpression	( * tmp ) [ 0 ] != '-'		5448028	0		!=			
ANR	5448540	ArrayIndexing	( * tmp ) [ 0 ]		5448028	0					
ANR	5448541	UnaryOperationExpression	* tmp		5448028	0					
ANR	5448542	UnaryOperator	*		5448028	0					
ANR	5448543	Identifier	tmp		5448028	1					
ANR	5448544	PrimaryExpression	0		5448028	1					
ANR	5448545	PrimaryExpression	'-'		5448028	1					
ANR	5448546	CompoundStatement		92:25:2730:2730	5448028	1					
ANR	5448547	ContinueStatement	continue ;	416:3:12428:12436	5448028	0	True				
ANR	5448548	SwitchStatement	switch ( ( * tmp ) [ 1 ] )		5448028	1					
ANR	5448549	Condition	( * tmp ) [ 1 ]	418:10:12452:12460	5448028	0	True				
ANR	5448550	ArrayIndexing	( * tmp ) [ 1 ]		5448028	0					
ANR	5448551	UnaryOperationExpression	* tmp		5448028	0					
ANR	5448552	UnaryOperator	*		5448028	0					
ANR	5448553	Identifier	tmp		5448028	1					
ANR	5448554	PrimaryExpression	1		5448028	1					
ANR	5448555	CompoundStatement		96:22:2816:2816	5448028	1					
ANR	5448556	Label	case 'v' :	419:2:12468:12476	5448028	0	True				
ANR	5448557	ExpressionStatement	version ( )	420:3:12481:12490	5448028	1	True				
ANR	5448558	CallExpression	version ( )		5448028	0					
ANR	5448559	Callee	version		5448028	0					
ANR	5448560	Identifier	version		5448028	0					
ANR	5448561	ArgumentList			5448028	1					
ANR	5448562	BreakStatement	break ;	421:3:12495:12500	5448028	2	True				
ANR	5448563	Label	case 'q' :	423:2:12531:12539	5448028	3	True				
ANR	5448564	ExpressionStatement	subsys_check ( MyName )	424:3:12544:12566	5448028	4	True				
ANR	5448565	CallExpression	subsys_check ( MyName )		5448028	0					
ANR	5448566	Callee	subsys_check		5448028	0					
ANR	5448567	Identifier	subsys_check		5448028	0					
ANR	5448568	ArgumentList	MyName		5448028	1					
ANR	5448569	Argument	MyName		5448028	0					
ANR	5448570	Identifier	MyName		5448028	0					
ANR	5448571	ExpressionStatement	dt = DT_QUILL	425:3:12571:12584	5448028	5	True				
ANR	5448572	AssignmentExpression	dt = DT_QUILL		5448028	0		=			
ANR	5448573	Identifier	dt		5448028	0					
ANR	5448574	Identifier	DT_QUILL		5448028	1					
ANR	5448575	BreakStatement	break ;	426:3:12589:12594	5448028	6	True				
ANR	5448576	Label	case 'h' :	428:2:12605:12613	5448028	7	True				
ANR	5448577	ExpressionStatement	"usage ( MyName , 0 )"	429:3:12618:12636	5448028	8	True				
ANR	5448578	CallExpression	"usage ( MyName , 0 )"		5448028	0					
ANR	5448579	Callee	usage		5448028	0					
ANR	5448580	Identifier	usage		5448028	0					
ANR	5448581	ArgumentList	MyName		5448028	1					
ANR	5448582	Argument	MyName		5448028	0					
ANR	5448583	Identifier	MyName		5448028	0					
ANR	5448584	Argument	0		5448028	1					
ANR	5448585	PrimaryExpression	0		5448028	0					
ANR	5448586	BreakStatement	break ;	430:3:12641:12646	5448028	9	True				
ANR	5448587	Label	case 'p' :	431:2:12650:12658	5448028	10	True				
ANR	5448588	IfStatement	if ( ( * tmp ) [ 2 ] == 'e' )		5448028	11					
ANR	5448589	Condition	( * tmp ) [ 2 ] == 'e'	432:6:12666:12681	5448028	0	True				
ANR	5448590	EqualityExpression	( * tmp ) [ 2 ] == 'e'		5448028	0		==			
ANR	5448591	ArrayIndexing	( * tmp ) [ 2 ]		5448028	0					
ANR	5448592	UnaryOperationExpression	* tmp		5448028	0					
ANR	5448593	UnaryOperator	*		5448028	0					
ANR	5448594	Identifier	tmp		5448028	1					
ANR	5448595	PrimaryExpression	2		5448028	1					
ANR	5448596	PrimaryExpression	'e'		5448028	1					
ANR	5448597	CompoundStatement		110:24:3036:3036	5448028	1					
ANR	5448598	ExpressionStatement	peaceful_shutdown = true	433:4:12703:12727	5448028	0	True				
ANR	5448599	AssignmentExpression	peaceful_shutdown = true		5448028	0		=			
ANR	5448600	Identifier	peaceful_shutdown		5448028	0					
ANR	5448601	Identifier	true		5448028	1					
ANR	5448602	ExpressionStatement	fast = false	434:4:12733:12745	5448028	1	True				
ANR	5448603	AssignmentExpression	fast = false		5448028	0		=			
ANR	5448604	Identifier	fast		5448028	0					
ANR	5448605	Identifier	false		5448028	1					
ANR	5448606	SwitchStatement	switch ( cmd )		5448028	2					
ANR	5448607	Condition	cmd	435:12:12759:12761	5448028	0	True				
ANR	5448608	Identifier	cmd		5448028	0					
ANR	5448609	CompoundStatement		113:18:3117:3117	5448028	1					
ANR	5448610	Label	case DAEMONS_OFF :	436:4:12771:12787	5448028	0	True				
ANR	5448611	Identifier	DAEMONS_OFF		5448028	0					
ANR	5448612	Label	case DC_OFF_GRACEFUL :	437:4:12793:12813	5448028	1	True				
ANR	5448613	Identifier	DC_OFF_GRACEFUL		5448028	0					
ANR	5448614	Label	case RESTART :	438:4:12819:12831	5448028	2	True				
ANR	5448615	Identifier	RESTART		5448028	0					
ANR	5448616	BreakStatement	break ;	439:5:12838:12843	5448028	3	True				
ANR	5448617	Label	default :	440:4:12849:12856	5448028	4	True				
ANR	5448618	Identifier	default		5448028	0					
ANR	5448619	Statement	fprintf	441:5:12863:12869	5448028	5	True				
ANR	5448620	Statement	(	441:12:12870:12870	5448028	6	True				
ANR	5448621	Statement	stderr	441:14:12872:12877	5448028	7	True				
ANR	5448622	Statement	","	441:20:12878:12878	5448028	8	True				
ANR	5448623	Statement	"""ERROR: \\""-peaceful\\"" """	441:22:12880:12902	5448028	9	True				
ANR	5448624	Statement	"""is not valid with %s\\n"""	442:8:12912:12935	5448028	10	True				
ANR	5448625	Statement	","	442:32:12936:12936	5448028	11	True				
ANR	5448626	Statement	MyName	442:34:12938:12943	5448028	12	True				
ANR	5448627	Statement	)	442:41:12945:12945	5448028	13	True				
ANR	5448628	ExpressionStatement		442:42:12946:12946	5448028	14	True				
ANR	5448629	ExpressionStatement	usage ( NULL )	443:5:12953:12966	5448028	15	True				
ANR	5448630	CallExpression	usage ( NULL )		5448028	0					
ANR	5448631	Callee	usage		5448028	0					
ANR	5448632	Identifier	usage		5448028	0					
ANR	5448633	ArgumentList	NULL		5448028	1					
ANR	5448634	Argument	NULL		5448028	0					
ANR	5448635	Identifier	NULL		5448028	0					
ANR	5448636	ElseStatement	else		5448028	0					
ANR	5448637	IfStatement	if ( ( * tmp ) [ 2 ] == '\\0' || ( * tmp ) [ 2 ] == 'o' )		5448028	0					
ANR	5448638	Condition	( * tmp ) [ 2 ] == '\\0' || ( * tmp ) [ 2 ] == 'o'	446:12:12991:13027	5448028	0	True				
ANR	5448639	OrExpression	( * tmp ) [ 2 ] == '\\0' || ( * tmp ) [ 2 ] == 'o'		5448028	0		||			
ANR	5448640	EqualityExpression	( * tmp ) [ 2 ] == '\\0'		5448028	0		==			
ANR	5448641	ArrayIndexing	( * tmp ) [ 2 ]		5448028	0					
ANR	5448642	UnaryOperationExpression	* tmp		5448028	0					
ANR	5448643	UnaryOperator	*		5448028	0					
ANR	5448644	Identifier	tmp		5448028	1					
ANR	5448645	PrimaryExpression	2		5448028	1					
ANR	5448646	PrimaryExpression	'\\0'		5448028	1					
ANR	5448647	EqualityExpression	( * tmp ) [ 2 ] == 'o'		5448028	1		==			
ANR	5448648	ArrayIndexing	( * tmp ) [ 2 ]		5448028	0					
ANR	5448649	UnaryOperationExpression	* tmp		5448028	0					
ANR	5448650	UnaryOperator	*		5448028	0					
ANR	5448651	Identifier	tmp		5448028	1					
ANR	5448652	PrimaryExpression	2		5448028	1					
ANR	5448653	PrimaryExpression	'o'		5448028	1					
ANR	5448654	CompoundStatement		124:52:3383:3383	5448028	1					
ANR	5448655	ExpressionStatement	tmp ++	447:4:13045:13050	5448028	0	True				
ANR	5448656	PostIncDecOperationExpression	tmp ++		5448028	0					
ANR	5448657	Identifier	tmp		5448028	0					
ANR	5448658	IncDec	++		5448028	1					
ANR	5448659	IfStatement	if ( tmp && * tmp )		5448028	1					
ANR	5448660	Condition	tmp && * tmp	448:8:13060:13070	5448028	0	True				
ANR	5448661	AndExpression	tmp && * tmp		5448028	0		&&			
ANR	5448662	Identifier	tmp		5448028	0					
ANR	5448663	UnaryOperationExpression	* tmp		5448028	1					
ANR	5448664	UnaryOperator	*		5448028	0					
ANR	5448665	Identifier	tmp		5448028	1					
ANR	5448666	CompoundStatement		126:22:3426:3426	5448028	1					
ANR	5448667	ExpressionStatement	pool = new DCCollector ( * tmp )	449:5:13081:13111	5448028	0	True				
ANR	5448668	AssignmentExpression	pool = new DCCollector ( * tmp )		5448028	0		=			
ANR	5448669	Identifier	pool		5448028	0					
ANR	5448670	UnaryOperationExpression	* tmp		5448028	1					
ANR	5448671	UnaryOperator	*		5448028	0					
ANR	5448672	Identifier	tmp		5448028	1					
ANR	5448673	IfStatement	if ( ! pool -> addr ( ) )		5448028	1					
ANR	5448674	Condition	! pool -> addr ( )	450:9:13122:13135	5448028	0	True				
ANR	5448675	UnaryOperationExpression	! pool -> addr ( )		5448028	0					
ANR	5448676	UnaryOperator	!		5448028	0					
ANR	5448677	CallExpression	pool -> addr ( )		5448028	1					
ANR	5448678	Callee	pool -> addr		5448028	0					
ANR	5448679	PtrMemberAccess	pool -> addr		5448028	0					
ANR	5448680	Identifier	pool		5448028	0					
ANR	5448681	Identifier	addr		5448028	1					
ANR	5448682	ArgumentList			5448028	1					
ANR	5448683	CompoundStatement		128:26:3491:3491	5448028	1					
ANR	5448684	ExpressionStatement	"fprintf ( stderr , ""%s: %s\\n"" , MyName , pool -> error ( ) )"	451:6:13147:13199	5448028	0	True				
ANR	5448685	CallExpression	"fprintf ( stderr , ""%s: %s\\n"" , MyName , pool -> error ( ) )"		5448028	0					
ANR	5448686	Callee	fprintf		5448028	0					
ANR	5448687	Identifier	fprintf		5448028	0					
ANR	5448688	ArgumentList	stderr		5448028	1					
ANR	5448689	Argument	stderr		5448028	0					
ANR	5448690	Identifier	stderr		5448028	0					
ANR	5448691	Argument	"""%s: %s\\n"""		5448028	1					
ANR	5448692	PrimaryExpression	"""%s: %s\\n"""		5448028	0					
ANR	5448693	Argument	MyName		5448028	2					
ANR	5448694	Identifier	MyName		5448028	0					
ANR	5448695	Argument	pool -> error ( )		5448028	3					
ANR	5448696	CallExpression	pool -> error ( )		5448028	0					
ANR	5448697	Callee	pool -> error		5448028	0					
ANR	5448698	PtrMemberAccess	pool -> error		5448028	0					
ANR	5448699	Identifier	pool		5448028	0					
ANR	5448700	Identifier	error		5448028	1					
ANR	5448701	ArgumentList			5448028	1					
ANR	5448702	ExpressionStatement	exit ( 1 )	452:6:13207:13216	5448028	1	True				
ANR	5448703	CallExpression	exit ( 1 )		5448028	0					
ANR	5448704	Callee	exit		5448028	0					
ANR	5448705	Identifier	exit		5448028	0					
ANR	5448706	ArgumentList	1		5448028	1					
ANR	5448707	Argument	1		5448028	0					
ANR	5448708	PrimaryExpression	1		5448028	0					
ANR	5448709	ElseStatement	else		5448028	0					
ANR	5448710	CompoundStatement		132:11:3588:3588	5448028	0					
ANR	5448711	ExpressionStatement	"fprintf ( stderr , ""ERROR: -pool requires another argument\\n"" )"	455:5:13243:13304	5448028	0	True				
ANR	5448712	CallExpression	"fprintf ( stderr , ""ERROR: -pool requires another argument\\n"" )"		5448028	0					
ANR	5448713	Callee	fprintf		5448028	0					
ANR	5448714	Identifier	fprintf		5448028	0					
ANR	5448715	ArgumentList	stderr		5448028	1					
ANR	5448716	Argument	stderr		5448028	0					
ANR	5448717	Identifier	stderr		5448028	0					
ANR	5448718	Argument	"""ERROR: -pool requires another argument\\n"""		5448028	1					
ANR	5448719	PrimaryExpression	"""ERROR: -pool requires another argument\\n"""		5448028	0					
ANR	5448720	ExpressionStatement	usage ( NULL )	456:5:13311:13324	5448028	1	True				
ANR	5448721	CallExpression	usage ( NULL )		5448028	0					
ANR	5448722	Callee	usage		5448028	0					
ANR	5448723	Identifier	usage		5448028	0					
ANR	5448724	ArgumentList	NULL		5448028	1					
ANR	5448725	Argument	NULL		5448028	0					
ANR	5448726	Identifier	NULL		5448028	0					
ANR	5448727	ElseStatement	else		5448028	0					
ANR	5448728	CompoundStatement		137:8:3697:3697	5448028	0					
ANR	5448729	Statement	fprintf	460:4:13351:13357	5448028	0	True				
ANR	5448730	Statement	(	460:11:13358:13358	5448028	1	True				
ANR	5448731	Statement	stderr	460:13:13360:13365	5448028	2	True				
ANR	5448732	Statement	","	460:19:13366:13366	5448028	3	True				
ANR	5448733	Statement	"""ERROR: \\""%s\\"" """	460:21:13368:13383	5448028	4	True				
ANR	5448734	Statement	"""is not a valid option\\n"""	461:7:13392:13416	5448028	5	True				
ANR	5448735	Statement	","	461:32:13417:13417	5448028	6	True				
ANR	5448736	Statement	(	461:34:13419:13419	5448028	7	True				
ANR	5448737	Statement	*	461:35:13420:13420	5448028	8	True				
ANR	5448738	Statement	tmp	461:36:13421:13423	5448028	9	True				
ANR	5448739	Statement	)	461:39:13424:13424	5448028	10	True				
ANR	5448740	Statement	)	461:41:13426:13426	5448028	11	True				
ANR	5448741	ExpressionStatement		461:42:13427:13427	5448028	12	True				
ANR	5448742	ExpressionStatement	usage ( NULL )	462:4:13433:13446	5448028	13	True				
ANR	5448743	CallExpression	usage ( NULL )		5448028	0					
ANR	5448744	Callee	usage		5448028	0					
ANR	5448745	Identifier	usage		5448028	0					
ANR	5448746	ArgumentList	NULL		5448028	1					
ANR	5448747	Argument	NULL		5448028	0					
ANR	5448748	Identifier	NULL		5448028	0					
ANR	5448749	BreakStatement	break ;	464:3:13456:13461	5448028	12	True				
ANR	5448750	Label	case 'f' :	465:2:13465:13473	5448028	13	True				
ANR	5448751	IfStatement	if ( ( * tmp ) [ 2 ] )		5448028	14					
ANR	5448752	Condition	( * tmp ) [ 2 ]	466:7:13482:13490	5448028	0	True				
ANR	5448753	ArrayIndexing	( * tmp ) [ 2 ]		5448028	0					
ANR	5448754	UnaryOperationExpression	* tmp		5448028	0					
ANR	5448755	UnaryOperator	*		5448028	0					
ANR	5448756	Identifier	tmp		5448028	1					
ANR	5448757	PrimaryExpression	2		5448028	1					
ANR	5448758	CompoundStatement		144:19:3846:3846	5448028	1					
ANR	5448759	SwitchStatement	switch ( ( * tmp ) [ 2 ] )		5448028	0					
ANR	5448760	Condition	( * tmp ) [ 2 ]	467:12:13508:13516	5448028	0	True				
ANR	5448761	ArrayIndexing	( * tmp ) [ 2 ]		5448028	0					
ANR	5448762	UnaryOperationExpression	* tmp		5448028	0					
ANR	5448763	UnaryOperator	*		5448028	0					
ANR	5448764	Identifier	tmp		5448028	1					
ANR	5448765	PrimaryExpression	2		5448028	1					
ANR	5448766	CompoundStatement		145:24:3872:3872	5448028	1					
ANR	5448767	Label	case 'u' :	468:4:13526:13534	5448028	0	True				
ANR	5448768	IfStatement	if ( cmd != DC_RECONFIG_FULL )		5448028	1					
ANR	5448769	Condition	cmd != DC_RECONFIG_FULL	471:9:13646:13668	5448028	0	True				
ANR	5448770	EqualityExpression	cmd != DC_RECONFIG_FULL		5448028	0		!=			
ANR	5448771	Identifier	cmd		5448028	0					
ANR	5448772	Identifier	DC_RECONFIG_FULL		5448028	1					
ANR	5448773	CompoundStatement		149:35:4024:4024	5448028	1					
ANR	5448774	Statement	fprintf	472:6:13680:13686	5448028	0	True				
ANR	5448775	Statement	(	472:13:13687:13687	5448028	1	True				
ANR	5448776	Statement	stderr	472:15:13689:13694	5448028	2	True				
ANR	5448777	Statement	","	472:21:13695:13695	5448028	3	True				
ANR	5448778	Statement	"""ERROR: \\""-full\\"" """	472:23:13697:13715	5448028	4	True				
ANR	5448779	Statement	"""is not valid with %s\\n"""	473:9:13726:13749	5448028	5	True				
ANR	5448780	Statement	","	473:33:13750:13750	5448028	6	True				
ANR	5448781	Statement	MyName	473:35:13752:13757	5448028	7	True				
ANR	5448782	Statement	)	473:42:13759:13759	5448028	8	True				
ANR	5448783	ExpressionStatement		473:43:13760:13760	5448028	9	True				
ANR	5448784	ExpressionStatement	usage ( NULL )	474:6:13768:13781	5448028	10	True				
ANR	5448785	CallExpression	usage ( NULL )		5448028	0					
ANR	5448786	Callee	usage		5448028	0					
ANR	5448787	Identifier	usage		5448028	0					
ANR	5448788	ArgumentList	NULL		5448028	1					
ANR	5448789	Argument	NULL		5448028	0					
ANR	5448790	Identifier	NULL		5448028	0					
ANR	5448791	BreakStatement	break ;	476:5:13795:13800	5448028	2	True				
ANR	5448792	Label	case 'a' :	477:4:13806:13814	5448028	3	True				
ANR	5448793	ExpressionStatement	fast = true	478:5:13821:13832	5448028	4	True				
ANR	5448794	AssignmentExpression	fast = true		5448028	0		=			
ANR	5448795	Identifier	fast		5448028	0					
ANR	5448796	Identifier	true		5448028	1					
ANR	5448797	ExpressionStatement	peaceful_shutdown = false	479:5:13839:13864	5448028	5	True				
ANR	5448798	AssignmentExpression	peaceful_shutdown = false		5448028	0		=			
ANR	5448799	Identifier	peaceful_shutdown		5448028	0					
ANR	5448800	Identifier	false		5448028	1					
ANR	5448801	SwitchStatement	switch ( cmd )		5448028	6					
ANR	5448802	Condition	cmd	480:13:13879:13881	5448028	0	True				
ANR	5448803	Identifier	cmd		5448028	0					
ANR	5448804	CompoundStatement		158:19:4237:4237	5448028	1					
ANR	5448805	Label	case DAEMONS_OFF :	481:5:13892:13908	5448028	0	True				
ANR	5448806	Identifier	DAEMONS_OFF		5448028	0					
ANR	5448807	Label	case DC_OFF_GRACEFUL :	482:5:13915:13935	5448028	1	True				
ANR	5448808	Identifier	DC_OFF_GRACEFUL		5448028	0					
ANR	5448809	Label	case RESTART :	483:5:13942:13954	5448028	2	True				
ANR	5448810	Identifier	RESTART		5448028	0					
ANR	5448811	Label	case VACATE_CLAIM :	484:5:13961:13978	5448028	3	True				
ANR	5448812	Identifier	VACATE_CLAIM		5448028	0					
ANR	5448813	BreakStatement	break ;	485:6:13986:13991	5448028	4	True				
ANR	5448814	Label	default :	486:5:13998:14005	5448028	5	True				
ANR	5448815	Identifier	default		5448028	0					
ANR	5448816	Statement	fprintf	487:6:14013:14019	5448028	6	True				
ANR	5448817	Statement	(	487:13:14020:14020	5448028	7	True				
ANR	5448818	Statement	stderr	487:15:14022:14027	5448028	8	True				
ANR	5448819	Statement	","	487:21:14028:14028	5448028	9	True				
ANR	5448820	Statement	"""ERROR: \\""-fast\\"" """	487:23:14030:14048	5448028	10	True				
ANR	5448821	Statement	"""is not valid with %s\\n"""	488:9:14059:14082	5448028	11	True				
ANR	5448822	Statement	","	488:33:14083:14083	5448028	12	True				
ANR	5448823	Statement	MyName	488:35:14085:14090	5448028	13	True				
ANR	5448824	Statement	)	488:42:14092:14092	5448028	14	True				
ANR	5448825	ExpressionStatement		488:43:14093:14093	5448028	15	True				
ANR	5448826	ExpressionStatement	usage ( NULL )	489:6:14101:14114	5448028	16	True				
ANR	5448827	CallExpression	usage ( NULL )		5448028	0					
ANR	5448828	Callee	usage		5448028	0					
ANR	5448829	Identifier	usage		5448028	0					
ANR	5448830	ArgumentList	NULL		5448028	1					
ANR	5448831	Argument	NULL		5448028	0					
ANR	5448832	Identifier	NULL		5448028	0					
ANR	5448833	BreakStatement	break ;	491:5:14128:14133	5448028	7	True				
ANR	5448834	Label	default :	492:4:14139:14146	5448028	8	True				
ANR	5448835	Identifier	default		5448028	0					
ANR	5448836	ExpressionStatement	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"	493:5:14153:14231	5448028	9	True				
ANR	5448837	CallExpression	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"		5448028	0					
ANR	5448838	Callee	fprintf		5448028	0					
ANR	5448839	Identifier	fprintf		5448028	0					
ANR	5448840	ArgumentList	stderr		5448028	1					
ANR	5448841	Argument	stderr		5448028	0					
ANR	5448842	Identifier	stderr		5448028	0					
ANR	5448843	Argument	"""ERROR: unknown parameter: \\""%s\\""\\n"""		5448028	1					
ANR	5448844	PrimaryExpression	"""ERROR: unknown parameter: \\""%s\\""\\n"""		5448028	0					
ANR	5448845	Argument	* tmp		5448028	2					
ANR	5448846	UnaryOperationExpression	* tmp		5448028	0					
ANR	5448847	UnaryOperator	*		5448028	0					
ANR	5448848	Identifier	tmp		5448028	1					
ANR	5448849	ExpressionStatement	usage ( NULL )	496:5:14239:14252	5448028	10	True				
ANR	5448850	CallExpression	usage ( NULL )		5448028	0					
ANR	5448851	Callee	usage		5448028	0					
ANR	5448852	Identifier	usage		5448028	0					
ANR	5448853	ArgumentList	NULL		5448028	1					
ANR	5448854	Argument	NULL		5448028	0					
ANR	5448855	Identifier	NULL		5448028	0					
ANR	5448856	BreakStatement	break ;	497:5:14259:14264	5448028	11	True				
ANR	5448857	ElseStatement	else		5448028	0					
ANR	5448858	CompoundStatement		177:10:4634:4634	5448028	0					
ANR	5448859	ExpressionStatement	"fprintf ( stderr , ""ERROR: ambiguous parameter: \\""%s\\""\\n"" , * tmp )"	500:4:14288:14366	5448028	0	True				
ANR	5448860	CallExpression	"fprintf ( stderr , ""ERROR: ambiguous parameter: \\""%s\\""\\n"" , * tmp )"		5448028	0					
ANR	5448861	Callee	fprintf		5448028	0					
ANR	5448862	Identifier	fprintf		5448028	0					
ANR	5448863	ArgumentList	stderr		5448028	1					
ANR	5448864	Argument	stderr		5448028	0					
ANR	5448865	Identifier	stderr		5448028	0					
ANR	5448866	Argument	"""ERROR: ambiguous parameter: \\""%s\\""\\n"""		5448028	1					
ANR	5448867	PrimaryExpression	"""ERROR: ambiguous parameter: \\""%s\\""\\n"""		5448028	0					
ANR	5448868	Argument	* tmp		5448028	2					
ANR	5448869	UnaryOperationExpression	* tmp		5448028	0					
ANR	5448870	UnaryOperator	*		5448028	0					
ANR	5448871	Identifier	tmp		5448028	1					
ANR	5448872	ExpressionStatement	"fprintf ( stderr , ""Please specify \\""-full\\"" or \\""-fast\\""\\n"" )"	503:4:14373:14441	5448028	1	True				
ANR	5448873	CallExpression	"fprintf ( stderr , ""Please specify \\""-full\\"" or \\""-fast\\""\\n"" )"		5448028	0					
ANR	5448874	Callee	fprintf		5448028	0					
ANR	5448875	Identifier	fprintf		5448028	0					
ANR	5448876	ArgumentList	stderr		5448028	1					
ANR	5448877	Argument	stderr		5448028	0					
ANR	5448878	Identifier	stderr		5448028	0					
ANR	5448879	Argument	"""Please specify \\""-full\\"" or \\""-fast\\""\\n"""		5448028	1					
ANR	5448880	PrimaryExpression	"""Please specify \\""-full\\"" or \\""-fast\\""\\n"""		5448028	0					
ANR	5448881	ExpressionStatement	usage ( NULL )	505:4:14447:14460	5448028	2	True				
ANR	5448882	CallExpression	usage ( NULL )		5448028	0					
ANR	5448883	Callee	usage		5448028	0					
ANR	5448884	Identifier	usage		5448028	0					
ANR	5448885	ArgumentList	NULL		5448028	1					
ANR	5448886	Argument	NULL		5448028	0					
ANR	5448887	Identifier	NULL		5448028	0					
ANR	5448888	BreakStatement	break ;	507:3:14470:14475	5448028	15	True				
ANR	5448889	Label	case 'd' :	508:2:14479:14487	5448028	16	True				
ANR	5448890	IfStatement	if ( ! ( * tmp ) [ 2 ] || ( * tmp ) [ 2 ] == 'e' )		5448028	17					
ANR	5448891	Condition	! ( * tmp ) [ 2 ] || ( * tmp ) [ 2 ] == 'e'	509:7:14496:14525	5448028	0	True				
ANR	5448892	OrExpression	! ( * tmp ) [ 2 ] || ( * tmp ) [ 2 ] == 'e'		5448028	0		||			
ANR	5448893	UnaryOperationExpression	! ( * tmp ) [ 2 ]		5448028	0					
ANR	5448894	UnaryOperator	!		5448028	0					
ANR	5448895	ArrayIndexing	( * tmp ) [ 2 ]		5448028	1					
ANR	5448896	UnaryOperationExpression	* tmp		5448028	0					
ANR	5448897	UnaryOperator	*		5448028	0					
ANR	5448898	Identifier	tmp		5448028	1					
ANR	5448899	PrimaryExpression	2		5448028	1					
ANR	5448900	EqualityExpression	( * tmp ) [ 2 ] == 'e'		5448028	1		==			
ANR	5448901	ArrayIndexing	( * tmp ) [ 2 ]		5448028	0					
ANR	5448902	UnaryOperationExpression	* tmp		5448028	0					
ANR	5448903	UnaryOperator	*		5448028	0					
ANR	5448904	Identifier	tmp		5448028	1					
ANR	5448905	PrimaryExpression	2		5448028	1					
ANR	5448906	PrimaryExpression	'e'		5448028	1					
ANR	5448907	CompoundStatement		187:39:4880:4880	5448028	1					
ANR	5448908	ExpressionStatement	Termlog = 1	510:4:14534:14545	5448028	0	True				
ANR	5448909	AssignmentExpression	Termlog = 1		5448028	0		=			
ANR	5448910	Identifier	Termlog		5448028	0					
ANR	5448911	PrimaryExpression	1		5448028	1					
ANR	5448912	ExpressionStatement	p_funcs = get_param_functions ( )	511:4:14551:14582	5448028	1	True				
ANR	5448913	AssignmentExpression	p_funcs = get_param_functions ( )		5448028	0		=			
ANR	5448914	Identifier	p_funcs		5448028	0					
ANR	5448915	CallExpression	get_param_functions ( )		5448028	1					
ANR	5448916	Callee	get_param_functions		5448028	0					
ANR	5448917	Identifier	get_param_functions		5448028	0					
ANR	5448918	ArgumentList			5448028	1					
ANR	5448919	ExpressionStatement	"dprintf_config ( ""TOOL"" , p_funcs )"	512:4:14588:14620	5448028	2	True				
ANR	5448920	CallExpression	"dprintf_config ( ""TOOL"" , p_funcs )"		5448028	0					
ANR	5448921	Callee	dprintf_config		5448028	0					
ANR	5448922	Identifier	dprintf_config		5448028	0					
ANR	5448923	ArgumentList	"""TOOL"""		5448028	1					
ANR	5448924	Argument	"""TOOL"""		5448028	0					
ANR	5448925	PrimaryExpression	"""TOOL"""		5448028	0					
ANR	5448926	Argument	p_funcs		5448028	1					
ANR	5448927	Identifier	p_funcs		5448028	0					
ANR	5448928	ElseStatement	else		5448028	0					
ANR	5448929	IfStatement	if ( ( * tmp ) [ 2 ] == 'a' )		5448028	0					
ANR	5448930	Condition	( * tmp ) [ 2 ] == 'a'	513:14:14636:14651	5448028	0	True				
ANR	5448931	EqualityExpression	( * tmp ) [ 2 ] == 'a'		5448028	0		==			
ANR	5448932	ArrayIndexing	( * tmp ) [ 2 ]		5448028	0					
ANR	5448933	UnaryOperationExpression	* tmp		5448028	0					
ANR	5448934	UnaryOperator	*		5448028	0					
ANR	5448935	Identifier	tmp		5448028	1					
ANR	5448936	PrimaryExpression	2		5448028	1					
ANR	5448937	PrimaryExpression	'a'		5448028	1					
ANR	5448938	CompoundStatement		191:33:5007:5007	5448028	1					
ANR	5448939	ExpressionStatement	subsys_check ( MyName )	514:4:14661:14683	5448028	0	True				
ANR	5448940	CallExpression	subsys_check ( MyName )		5448028	0					
ANR	5448941	Callee	subsys_check		5448028	0					
ANR	5448942	Identifier	subsys_check		5448028	0					
ANR	5448943	ArgumentList	MyName		5448028	1					
ANR	5448944	Argument	MyName		5448028	0					
ANR	5448945	Identifier	MyName		5448028	0					
ANR	5448946	ExpressionStatement	tmp ++	517:4:14770:14775	5448028	1	True				
ANR	5448947	PostIncDecOperationExpression	tmp ++		5448028	0					
ANR	5448948	Identifier	tmp		5448028	0					
ANR	5448949	IncDec	++		5448028	1					
ANR	5448950	IfStatement	if ( tmp && * tmp )		5448028	2					
ANR	5448951	Condition	tmp && * tmp	518:8:14785:14795	5448028	0	True				
ANR	5448952	AndExpression	tmp && * tmp		5448028	0		&&			
ANR	5448953	Identifier	tmp		5448028	0					
ANR	5448954	UnaryOperationExpression	* tmp		5448028	1					
ANR	5448955	UnaryOperator	*		5448028	0					
ANR	5448956	Identifier	tmp		5448028	1					
ANR	5448957	CompoundStatement		196:22:5151:5151	5448028	1					
ANR	5448958	ExpressionStatement	subsys_arg = * tmp	519:5:14806:14823	5448028	0	True				
ANR	5448959	AssignmentExpression	subsys_arg = * tmp		5448028	0		=			
ANR	5448960	Identifier	subsys_arg		5448028	0					
ANR	5448961	UnaryOperationExpression	* tmp		5448028	1					
ANR	5448962	UnaryOperator	*		5448028	0					
ANR	5448963	Identifier	tmp		5448028	1					
ANR	5448964	ExpressionStatement	dt = stringToDaemonType ( subsys_arg )	520:5:14830:14865	5448028	1	True				
ANR	5448965	AssignmentExpression	dt = stringToDaemonType ( subsys_arg )		5448028	0		=			
ANR	5448966	Identifier	dt		5448028	0					
ANR	5448967	CallExpression	stringToDaemonType ( subsys_arg )		5448028	1					
ANR	5448968	Callee	stringToDaemonType		5448028	0					
ANR	5448969	Identifier	stringToDaemonType		5448028	0					
ANR	5448970	ArgumentList	subsys_arg		5448028	1					
ANR	5448971	Argument	subsys_arg		5448028	0					
ANR	5448972	Identifier	subsys_arg		5448028	0					
ANR	5448973	IfStatement	if ( dt == DT_NONE )		5448028	2					
ANR	5448974	Condition	dt == DT_NONE	521:9:14876:14888	5448028	0	True				
ANR	5448975	EqualityExpression	dt == DT_NONE		5448028	0		==			
ANR	5448976	Identifier	dt		5448028	0					
ANR	5448977	Identifier	DT_NONE		5448028	1					
ANR	5448978	CompoundStatement		199:25:5244:5244	5448028	1					
ANR	5448979	ExpressionStatement	dt = DT_GENERIC	522:6:14900:14915	5448028	0	True				
ANR	5448980	AssignmentExpression	dt = DT_GENERIC		5448028	0		=			
ANR	5448981	Identifier	dt		5448028	0					
ANR	5448982	Identifier	DT_GENERIC		5448028	1					
ANR	5448983	ElseStatement	else		5448028	0					
ANR	5448984	CompoundStatement		202:11:5287:5287	5448028	0					
ANR	5448985	ExpressionStatement	"fprintf ( stderr , ""ERROR: -daemon requires another argument\\n"" )"	525:5:14942:15014	5448028	0	True				
ANR	5448986	CallExpression	"fprintf ( stderr , ""ERROR: -daemon requires another argument\\n"" )"		5448028	0					
ANR	5448987	Callee	fprintf		5448028	0					
ANR	5448988	Identifier	fprintf		5448028	0					
ANR	5448989	ArgumentList	stderr		5448028	1					
ANR	5448990	Argument	stderr		5448028	0					
ANR	5448991	Identifier	stderr		5448028	0					
ANR	5448992	Argument	"""ERROR: -daemon requires another argument\\n"""		5448028	1					
ANR	5448993	PrimaryExpression	"""ERROR: -daemon requires another argument\\n"""		5448028	0					
ANR	5448994	ExpressionStatement	usage ( NULL )	527:5:15022:15035	5448028	1	True				
ANR	5448995	CallExpression	usage ( NULL )		5448028	0					
ANR	5448996	Callee	usage		5448028	0					
ANR	5448997	Identifier	usage		5448028	0					
ANR	5448998	ArgumentList	NULL		5448028	1					
ANR	5448999	Argument	NULL		5448028	0					
ANR	5449000	Identifier	NULL		5448028	0					
ANR	5449001	ExpressionStatement	exit ( 1 )	528:5:15042:15051	5448028	2	True				
ANR	5449002	CallExpression	exit ( 1 )		5448028	0					
ANR	5449003	Callee	exit		5448028	0					
ANR	5449004	Identifier	exit		5448028	0					
ANR	5449005	ArgumentList	1		5448028	1					
ANR	5449006	Argument	1		5448028	0					
ANR	5449007	PrimaryExpression	1		5448028	0					
ANR	5449008	ElseStatement	else		5448028	0					
ANR	5449009	CompoundStatement		208:10:5421:5421	5448028	0					
ANR	5449010	ExpressionStatement	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"	531:4:15075:15151	5448028	0	True				
ANR	5449011	CallExpression	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"		5448028	0					
ANR	5449012	Callee	fprintf		5448028	0					
ANR	5449013	Identifier	fprintf		5448028	0					
ANR	5449014	ArgumentList	stderr		5448028	1					
ANR	5449015	Argument	stderr		5448028	0					
ANR	5449016	Identifier	stderr		5448028	0					
ANR	5449017	Argument	"""ERROR: unknown parameter: \\""%s\\""\\n"""		5448028	1					
ANR	5449018	PrimaryExpression	"""ERROR: unknown parameter: \\""%s\\""\\n"""		5448028	0					
ANR	5449019	Argument	* tmp		5448028	2					
ANR	5449020	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449021	UnaryOperator	*		5448028	0					
ANR	5449022	Identifier	tmp		5448028	1					
ANR	5449023	ExpressionStatement	usage ( NULL )	534:4:15159:15172	5448028	1	True				
ANR	5449024	CallExpression	usage ( NULL )		5448028	0					
ANR	5449025	Callee	usage		5448028	0					
ANR	5449026	Identifier	usage		5448028	0					
ANR	5449027	ArgumentList	NULL		5448028	1					
ANR	5449028	Argument	NULL		5448028	0					
ANR	5449029	Identifier	NULL		5448028	0					
ANR	5449030	BreakStatement	break ;	536:3:15182:15187	5448028	18	True				
ANR	5449031	Label	case 'e' :	537:2:15191:15199	5448028	19	True				
ANR	5449032	IfStatement	"if ( strcmp ( * tmp , ""-exec"" ) )"		5448028	20					
ANR	5449033	Condition	"strcmp ( * tmp , ""-exec"" )"	538:8:15209:15231	5448028	0	True				
ANR	5449034	CallExpression	"strcmp ( * tmp , ""-exec"" )"		5448028	0					
ANR	5449035	Callee	strcmp		5448028	0					
ANR	5449036	Identifier	strcmp		5448028	0					
ANR	5449037	ArgumentList	* tmp		5448028	1					
ANR	5449038	Argument	* tmp		5448028	0					
ANR	5449039	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449040	UnaryOperator	*		5448028	0					
ANR	5449041	Identifier	tmp		5448028	1					
ANR	5449042	Argument	"""-exec"""		5448028	1					
ANR	5449043	PrimaryExpression	"""-exec"""		5448028	0					
ANR	5449044	CompoundStatement		216:34:5587:5587	5448028	1					
ANR	5449045	ExpressionStatement	"fprintf ( stderr , ""Unknown option '%s'\\n"" , * tmp )"	539:4:15241:15289	5448028	0	True				
ANR	5449046	CallExpression	"fprintf ( stderr , ""Unknown option '%s'\\n"" , * tmp )"		5448028	0					
ANR	5449047	Callee	fprintf		5448028	0					
ANR	5449048	Identifier	fprintf		5448028	0					
ANR	5449049	ArgumentList	stderr		5448028	1					
ANR	5449050	Argument	stderr		5448028	0					
ANR	5449051	Identifier	stderr		5448028	0					
ANR	5449052	Argument	"""Unknown option '%s'\\n"""		5448028	1					
ANR	5449053	PrimaryExpression	"""Unknown option '%s'\\n"""		5448028	0					
ANR	5449054	Argument	* tmp		5448028	2					
ANR	5449055	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449056	UnaryOperator	*		5448028	0					
ANR	5449057	Identifier	tmp		5448028	1					
ANR	5449058	ExpressionStatement	usage ( NULL )	540:4:15295:15308	5448028	1	True				
ANR	5449059	CallExpression	usage ( NULL )		5448028	0					
ANR	5449060	Callee	usage		5448028	0					
ANR	5449061	Identifier	usage		5448028	0					
ANR	5449062	ArgumentList	NULL		5448028	1					
ANR	5449063	Argument	NULL		5448028	0					
ANR	5449064	Identifier	NULL		5448028	0					
ANR	5449065	BreakStatement	break ;	541:4:15314:15319	5448028	2	True				
ANR	5449066	IfStatement	if ( cmd != SET_SHUTDOWN_PROGRAM )		5448028	21					
ANR	5449067	Condition	cmd != SET_SHUTDOWN_PROGRAM	543:8:15334:15360	5448028	0	True				
ANR	5449068	EqualityExpression	cmd != SET_SHUTDOWN_PROGRAM		5448028	0		!=			
ANR	5449069	Identifier	cmd		5448028	0					
ANR	5449070	Identifier	SET_SHUTDOWN_PROGRAM		5448028	1					
ANR	5449071	CompoundStatement		221:38:5716:5716	5448028	1					
ANR	5449072	ExpressionStatement	"fprintf ( stderr , ""ERROR: \\""-exec\\"" is not valid with %s\\n"" , MyName )"	544:4:15370:15445	5448028	0	True				
ANR	5449073	CallExpression	"fprintf ( stderr , ""ERROR: \\""-exec\\"" is not valid with %s\\n"" , MyName )"		5448028	0					
ANR	5449074	Callee	fprintf		5448028	0					
ANR	5449075	Identifier	fprintf		5448028	0					
ANR	5449076	ArgumentList	stderr		5448028	1					
ANR	5449077	Argument	stderr		5448028	0					
ANR	5449078	Identifier	stderr		5448028	0					
ANR	5449079	Argument	"""ERROR: \\""-exec\\"" is not valid with %s\\n"""		5448028	1					
ANR	5449080	PrimaryExpression	"""ERROR: \\""-exec\\"" is not valid with %s\\n"""		5448028	0					
ANR	5449081	Argument	MyName		5448028	2					
ANR	5449082	Identifier	MyName		5448028	0					
ANR	5449083	ExpressionStatement	usage ( NULL )	546:4:15451:15464	5448028	1	True				
ANR	5449084	CallExpression	usage ( NULL )		5448028	0					
ANR	5449085	Callee	usage		5448028	0					
ANR	5449086	Identifier	usage		5448028	0					
ANR	5449087	ArgumentList	NULL		5448028	1					
ANR	5449088	Argument	NULL		5448028	0					
ANR	5449089	Identifier	NULL		5448028	0					
ANR	5449090	BreakStatement	break ;	547:4:15470:15475	5448028	2	True				
ANR	5449091	ExpressionStatement	tmp ++	549:3:15485:15490	5448028	22	True				
ANR	5449092	PostIncDecOperationExpression	tmp ++		5448028	0					
ANR	5449093	Identifier	tmp		5448028	0					
ANR	5449094	IncDec	++		5448028	1					
ANR	5449095	IfStatement	if ( ! ( tmp && * tmp ) )		5448028	23					
ANR	5449096	Condition	! ( tmp && * tmp )	550:7:15499:15513	5448028	0	True				
ANR	5449097	UnaryOperationExpression	! ( tmp && * tmp )		5448028	0					
ANR	5449098	UnaryOperator	!		5448028	0					
ANR	5449099	AndExpression	tmp && * tmp		5448028	1		&&			
ANR	5449100	Identifier	tmp		5448028	0					
ANR	5449101	UnaryOperationExpression	* tmp		5448028	1					
ANR	5449102	UnaryOperator	*		5448028	0					
ANR	5449103	Identifier	tmp		5448028	1					
ANR	5449104	CompoundStatement		228:25:5869:5869	5448028	1					
ANR	5449105	ExpressionStatement	"fprintf ( stderr , ""ERROR: \\""-exec\\"" requires another argument\\n"" )"	551:4:15523:15596	5448028	0	True				
ANR	5449106	CallExpression	"fprintf ( stderr , ""ERROR: \\""-exec\\"" requires another argument\\n"" )"		5448028	0					
ANR	5449107	Callee	fprintf		5448028	0					
ANR	5449108	Identifier	fprintf		5448028	0					
ANR	5449109	ArgumentList	stderr		5448028	1					
ANR	5449110	Argument	stderr		5448028	0					
ANR	5449111	Identifier	stderr		5448028	0					
ANR	5449112	Argument	"""ERROR: \\""-exec\\"" requires another argument\\n"""		5448028	1					
ANR	5449113	PrimaryExpression	"""ERROR: \\""-exec\\"" requires another argument\\n"""		5448028	0					
ANR	5449114	ExpressionStatement	usage ( NULL )	553:4:15603:15616	5448028	1	True				
ANR	5449115	CallExpression	usage ( NULL )		5448028	0					
ANR	5449116	Callee	usage		5448028	0					
ANR	5449117	Identifier	usage		5448028	0					
ANR	5449118	ArgumentList	NULL		5448028	1					
ANR	5449119	Argument	NULL		5448028	0					
ANR	5449120	Identifier	NULL		5448028	0					
ANR	5449121	BreakStatement	break ;	554:4:15622:15627	5448028	2	True				
ANR	5449122	ExpressionStatement	exec_program = * tmp	556:3:15637:15656	5448028	24	True				
ANR	5449123	AssignmentExpression	exec_program = * tmp		5448028	0		=			
ANR	5449124	Identifier	exec_program		5448028	0					
ANR	5449125	UnaryOperationExpression	* tmp		5448028	1					
ANR	5449126	UnaryOperator	*		5448028	0					
ANR	5449127	Identifier	tmp		5448028	1					
ANR	5449128	ExpressionStatement	"printf ( ""Set exec to %s\\n"" , exec_program )"	557:3:15661:15703	5448028	25	True				
ANR	5449129	CallExpression	"printf ( ""Set exec to %s\\n"" , exec_program )"		5448028	0					
ANR	5449130	Callee	printf		5448028	0					
ANR	5449131	Identifier	printf		5448028	0					
ANR	5449132	ArgumentList	"""Set exec to %s\\n"""		5448028	1					
ANR	5449133	Argument	"""Set exec to %s\\n"""		5448028	0					
ANR	5449134	PrimaryExpression	"""Set exec to %s\\n"""		5448028	0					
ANR	5449135	Argument	exec_program		5448028	1					
ANR	5449136	Identifier	exec_program		5448028	0					
ANR	5449137	BreakStatement	break ;	558:3:15708:15713	5448028	26	True				
ANR	5449138	Label	case 'g' :	559:2:15717:15725	5448028	27	True				
ANR	5449139	ExpressionStatement	fast = false	560:3:15730:15742	5448028	28	True				
ANR	5449140	AssignmentExpression	fast = false		5448028	0		=			
ANR	5449141	Identifier	fast		5448028	0					
ANR	5449142	Identifier	false		5448028	1					
ANR	5449143	ExpressionStatement	peaceful_shutdown = false	561:3:15747:15772	5448028	29	True				
ANR	5449144	AssignmentExpression	peaceful_shutdown = false		5448028	0		=			
ANR	5449145	Identifier	peaceful_shutdown		5448028	0					
ANR	5449146	Identifier	false		5448028	1					
ANR	5449147	BreakStatement	break ;	562:3:15777:15782	5448028	30	True				
ANR	5449148	Label	case 'a' :	563:2:15786:15794	5448028	31	True				
ANR	5449149	IfStatement	if ( ( * tmp ) [ 2 ] )		5448028	32					
ANR	5449150	Condition	( * tmp ) [ 2 ]	564:7:15803:15811	5448028	0	True				
ANR	5449151	ArrayIndexing	( * tmp ) [ 2 ]		5448028	0					
ANR	5449152	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449153	UnaryOperator	*		5448028	0					
ANR	5449154	Identifier	tmp		5448028	1					
ANR	5449155	PrimaryExpression	2		5448028	1					
ANR	5449156	CompoundStatement		242:19:6167:6167	5448028	1					
ANR	5449157	SwitchStatement	switch ( ( * tmp ) [ 2 ] )		5448028	0					
ANR	5449158	Condition	( * tmp ) [ 2 ]	565:12:15829:15837	5448028	0	True				
ANR	5449159	ArrayIndexing	( * tmp ) [ 2 ]		5448028	0					
ANR	5449160	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449161	UnaryOperator	*		5448028	0					
ANR	5449162	Identifier	tmp		5448028	1					
ANR	5449163	PrimaryExpression	2		5448028	1					
ANR	5449164	CompoundStatement		243:24:6193:6193	5448028	1					
ANR	5449165	Label	case 'd' :	566:4:15847:15855	5448028	0	True				
ANR	5449166	ExpressionStatement	tmp ++	569:5:15941:15946	5448028	1	True				
ANR	5449167	PostIncDecOperationExpression	tmp ++		5448028	0					
ANR	5449168	Identifier	tmp		5448028	0					
ANR	5449169	IncDec	++		5448028	1					
ANR	5449170	IfStatement	if ( ! ( tmp && * tmp ) )		5448028	2					
ANR	5449171	Condition	! ( tmp && * tmp )	570:9:15957:15971	5448028	0	True				
ANR	5449172	UnaryOperationExpression	! ( tmp && * tmp )		5448028	0					
ANR	5449173	UnaryOperator	!		5448028	0					
ANR	5449174	AndExpression	tmp && * tmp		5448028	1		&&			
ANR	5449175	Identifier	tmp		5448028	0					
ANR	5449176	UnaryOperationExpression	* tmp		5448028	1					
ANR	5449177	UnaryOperator	*		5448028	0					
ANR	5449178	Identifier	tmp		5448028	1					
ANR	5449179	CompoundStatement		248:27:6327:6327	5448028	1					
ANR	5449180	ExpressionStatement	"fprintf ( stderr , ""ERROR: -addr requires another argument\\n"" )"	571:6:15983:16054	5448028	0	True				
ANR	5449181	CallExpression	"fprintf ( stderr , ""ERROR: -addr requires another argument\\n"" )"		5448028	0					
ANR	5449182	Callee	fprintf		5448028	0					
ANR	5449183	Identifier	fprintf		5448028	0					
ANR	5449184	ArgumentList	stderr		5448028	1					
ANR	5449185	Argument	stderr		5448028	0					
ANR	5449186	Identifier	stderr		5448028	0					
ANR	5449187	Argument	"""ERROR: -addr requires another argument\\n"""		5448028	1					
ANR	5449188	PrimaryExpression	"""ERROR: -addr requires another argument\\n"""		5448028	0					
ANR	5449189	ExpressionStatement	usage ( NULL )	573:6:16063:16076	5448028	1	True				
ANR	5449190	CallExpression	usage ( NULL )		5448028	0					
ANR	5449191	Callee	usage		5448028	0					
ANR	5449192	Identifier	usage		5448028	0					
ANR	5449193	ArgumentList	NULL		5448028	1					
ANR	5449194	Argument	NULL		5448028	0					
ANR	5449195	Identifier	NULL		5448028	0					
ANR	5449196	BreakStatement	break ;	575:5:16090:16095	5448028	3	True				
ANR	5449197	Label	case 'l' :	576:4:16101:16109	5448028	4	True				
ANR	5449198	ExpressionStatement	all = true	578:5:16156:16166	5448028	5	True				
ANR	5449199	AssignmentExpression	all = true		5448028	0		=			
ANR	5449200	Identifier	all		5448028	0					
ANR	5449201	Identifier	true		5448028	1					
ANR	5449202	BreakStatement	break ;	579:5:16173:16178	5448028	6	True				
ANR	5449203	Label	default :	580:4:16184:16191	5448028	7	True				
ANR	5449204	Identifier	default		5448028	0					
ANR	5449205	ExpressionStatement	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"	581:5:16198:16276	5448028	8	True				
ANR	5449206	CallExpression	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"		5448028	0					
ANR	5449207	Callee	fprintf		5448028	0					
ANR	5449208	Identifier	fprintf		5448028	0					
ANR	5449209	ArgumentList	stderr		5448028	1					
ANR	5449210	Argument	stderr		5448028	0					
ANR	5449211	Identifier	stderr		5448028	0					
ANR	5449212	Argument	"""ERROR: unknown parameter: \\""%s\\""\\n"""		5448028	1					
ANR	5449213	PrimaryExpression	"""ERROR: unknown parameter: \\""%s\\""\\n"""		5448028	0					
ANR	5449214	Argument	* tmp		5448028	2					
ANR	5449215	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449216	UnaryOperator	*		5448028	0					
ANR	5449217	Identifier	tmp		5448028	1					
ANR	5449218	ExpressionStatement	usage ( NULL )	584:5:16284:16297	5448028	9	True				
ANR	5449219	CallExpression	usage ( NULL )		5448028	0					
ANR	5449220	Callee	usage		5448028	0					
ANR	5449221	Identifier	usage		5448028	0					
ANR	5449222	ArgumentList	NULL		5448028	1					
ANR	5449223	Argument	NULL		5448028	0					
ANR	5449224	Identifier	NULL		5448028	0					
ANR	5449225	BreakStatement	break ;	585:5:16304:16309	5448028	10	True				
ANR	5449226	ElseStatement	else		5448028	0					
ANR	5449227	CompoundStatement		265:10:6679:6679	5448028	0					
ANR	5449228	ExpressionStatement	"fprintf ( stderr , ""ERROR: ambiguous parameter: \\""%s\\""\\n"" , * tmp )"	588:4:16333:16411	5448028	0	True				
ANR	5449229	CallExpression	"fprintf ( stderr , ""ERROR: ambiguous parameter: \\""%s\\""\\n"" , * tmp )"		5448028	0					
ANR	5449230	Callee	fprintf		5448028	0					
ANR	5449231	Identifier	fprintf		5448028	0					
ANR	5449232	ArgumentList	stderr		5448028	1					
ANR	5449233	Argument	stderr		5448028	0					
ANR	5449234	Identifier	stderr		5448028	0					
ANR	5449235	Argument	"""ERROR: ambiguous parameter: \\""%s\\""\\n"""		5448028	1					
ANR	5449236	PrimaryExpression	"""ERROR: ambiguous parameter: \\""%s\\""\\n"""		5448028	0					
ANR	5449237	Argument	* tmp		5448028	2					
ANR	5449238	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449239	UnaryOperator	*		5448028	0					
ANR	5449240	Identifier	tmp		5448028	1					
ANR	5449241	ExpressionStatement	"fprintf ( stderr , ""Please specify \\""-addr\\"" or \\""-all\\""\\n"" )"	591:4:16418:16485	5448028	1	True				
ANR	5449242	CallExpression	"fprintf ( stderr , ""Please specify \\""-addr\\"" or \\""-all\\""\\n"" )"		5448028	0					
ANR	5449243	Callee	fprintf		5448028	0					
ANR	5449244	Identifier	fprintf		5448028	0					
ANR	5449245	ArgumentList	stderr		5448028	1					
ANR	5449246	Argument	stderr		5448028	0					
ANR	5449247	Identifier	stderr		5448028	0					
ANR	5449248	Argument	"""Please specify \\""-addr\\"" or \\""-all\\""\\n"""		5448028	1					
ANR	5449249	PrimaryExpression	"""Please specify \\""-addr\\"" or \\""-all\\""\\n"""		5448028	0					
ANR	5449250	ExpressionStatement	usage ( NULL )	593:4:16491:16504	5448028	2	True				
ANR	5449251	CallExpression	usage ( NULL )		5448028	0					
ANR	5449252	Callee	usage		5448028	0					
ANR	5449253	Identifier	usage		5448028	0					
ANR	5449254	ArgumentList	NULL		5448028	1					
ANR	5449255	Argument	NULL		5448028	0					
ANR	5449256	Identifier	NULL		5448028	0					
ANR	5449257	BreakStatement	break ;	595:3:16514:16519	5448028	33	True				
ANR	5449258	Label	case 'n' :	596:2:16523:16531	5448028	34	True				
ANR	5449259	IfStatement	if ( ( * tmp ) [ 2 ] )		5448028	35					
ANR	5449260	Condition	( * tmp ) [ 2 ]	597:7:16540:16548	5448028	0	True				
ANR	5449261	ArrayIndexing	( * tmp ) [ 2 ]		5448028	0					
ANR	5449262	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449263	UnaryOperator	*		5448028	0					
ANR	5449264	Identifier	tmp		5448028	1					
ANR	5449265	PrimaryExpression	2		5448028	1					
ANR	5449266	CompoundStatement		275:19:6904:6904	5448028	1					
ANR	5449267	SwitchStatement	switch ( ( * tmp ) [ 2 ] )		5448028	0					
ANR	5449268	Condition	( * tmp ) [ 2 ]	598:12:16566:16574	5448028	0	True				
ANR	5449269	ArrayIndexing	( * tmp ) [ 2 ]		5448028	0					
ANR	5449270	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449271	UnaryOperator	*		5448028	0					
ANR	5449272	Identifier	tmp		5448028	1					
ANR	5449273	PrimaryExpression	2		5448028	1					
ANR	5449274	CompoundStatement		276:24:6930:6930	5448028	1					
ANR	5449275	Label	case 'a' :	599:4:16584:16592	5448028	0	True				
ANR	5449276	ExpressionStatement	tmp ++	602:5:16681:16686	5448028	1	True				
ANR	5449277	PostIncDecOperationExpression	tmp ++		5448028	0					
ANR	5449278	Identifier	tmp		5448028	0					
ANR	5449279	IncDec	++		5448028	1					
ANR	5449280	IfStatement	if ( ! ( tmp && * tmp ) )		5448028	2					
ANR	5449281	Condition	! ( tmp && * tmp )	603:9:16697:16711	5448028	0	True				
ANR	5449282	UnaryOperationExpression	! ( tmp && * tmp )		5448028	0					
ANR	5449283	UnaryOperator	!		5448028	0					
ANR	5449284	AndExpression	tmp && * tmp		5448028	1		&&			
ANR	5449285	Identifier	tmp		5448028	0					
ANR	5449286	UnaryOperationExpression	* tmp		5448028	1					
ANR	5449287	UnaryOperator	*		5448028	0					
ANR	5449288	Identifier	tmp		5448028	1					
ANR	5449289	CompoundStatement		281:27:7067:7067	5448028	1					
ANR	5449290	ExpressionStatement	"fprintf ( stderr , ""ERROR: -name requires another argument\\n"" )"	604:6:16723:16794	5448028	0	True				
ANR	5449291	CallExpression	"fprintf ( stderr , ""ERROR: -name requires another argument\\n"" )"		5448028	0					
ANR	5449292	Callee	fprintf		5448028	0					
ANR	5449293	Identifier	fprintf		5448028	0					
ANR	5449294	ArgumentList	stderr		5448028	1					
ANR	5449295	Argument	stderr		5448028	0					
ANR	5449296	Identifier	stderr		5448028	0					
ANR	5449297	Argument	"""ERROR: -name requires another argument\\n"""		5448028	1					
ANR	5449298	PrimaryExpression	"""ERROR: -name requires another argument\\n"""		5448028	0					
ANR	5449299	ExpressionStatement	usage ( NULL )	606:6:16802:16815	5448028	1	True				
ANR	5449300	CallExpression	usage ( NULL )		5448028	0					
ANR	5449301	Callee	usage		5448028	0					
ANR	5449302	Identifier	usage		5448028	0					
ANR	5449303	ArgumentList	NULL		5448028	1					
ANR	5449304	Argument	NULL		5448028	0					
ANR	5449305	Identifier	NULL		5448028	0					
ANR	5449306	BreakStatement	break ;	608:5:16829:16834	5448028	3	True				
ANR	5449307	Label	case 'e' :	609:4:16840:16848	5448028	4	True				
ANR	5449308	ExpressionStatement	subsys_check ( MyName )	611:5:16887:16909	5448028	5	True				
ANR	5449309	CallExpression	subsys_check ( MyName )		5448028	0					
ANR	5449310	Callee	subsys_check		5448028	0					
ANR	5449311	Identifier	subsys_check		5448028	0					
ANR	5449312	ArgumentList	MyName		5448028	1					
ANR	5449313	Argument	MyName		5448028	0					
ANR	5449314	Identifier	MyName		5448028	0					
ANR	5449315	ExpressionStatement	dt = DT_NEGOTIATOR	612:5:16916:16934	5448028	6	True				
ANR	5449316	AssignmentExpression	dt = DT_NEGOTIATOR		5448028	0		=			
ANR	5449317	Identifier	dt		5448028	0					
ANR	5449318	Identifier	DT_NEGOTIATOR		5448028	1					
ANR	5449319	BreakStatement	break ;	613:5:16941:16946	5448028	7	True				
ANR	5449320	Label	default :	614:4:16952:16959	5448028	8	True				
ANR	5449321	Identifier	default		5448028	0					
ANR	5449322	ExpressionStatement	"fprintf ( stderr , ""ERROR: invalid option: \\""%s\\""\\n"" , * tmp )"	615:5:16966:17041	5448028	9	True				
ANR	5449323	CallExpression	"fprintf ( stderr , ""ERROR: invalid option: \\""%s\\""\\n"" , * tmp )"		5448028	0					
ANR	5449324	Callee	fprintf		5448028	0					
ANR	5449325	Identifier	fprintf		5448028	0					
ANR	5449326	ArgumentList	stderr		5448028	1					
ANR	5449327	Argument	stderr		5448028	0					
ANR	5449328	Identifier	stderr		5448028	0					
ANR	5449329	Argument	"""ERROR: invalid option: \\""%s\\""\\n"""		5448028	1					
ANR	5449330	PrimaryExpression	"""ERROR: invalid option: \\""%s\\""\\n"""		5448028	0					
ANR	5449331	Argument	* tmp		5448028	2					
ANR	5449332	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449333	UnaryOperator	*		5448028	0					
ANR	5449334	Identifier	tmp		5448028	1					
ANR	5449335	ExpressionStatement	usage ( NULL )	618:5:17050:17063	5448028	10	True				
ANR	5449336	CallExpression	usage ( NULL )		5448028	0					
ANR	5449337	Callee	usage		5448028	0					
ANR	5449338	Identifier	usage		5448028	0					
ANR	5449339	ArgumentList	NULL		5448028	1					
ANR	5449340	Argument	NULL		5448028	0					
ANR	5449341	Identifier	NULL		5448028	0					
ANR	5449342	BreakStatement	break ;	619:5:17070:17075	5448028	11	True				
ANR	5449343	ElseStatement	else		5448028	0					
ANR	5449344	CompoundStatement		299:10:7445:7445	5448028	0					
ANR	5449345	ExpressionStatement	"fprintf ( stderr , ""ERROR: ambiguous option: \\""%s\\""\\n"" , * tmp )"	622:4:17099:17174	5448028	0	True				
ANR	5449346	CallExpression	"fprintf ( stderr , ""ERROR: ambiguous option: \\""%s\\""\\n"" , * tmp )"		5448028	0					
ANR	5449347	Callee	fprintf		5448028	0					
ANR	5449348	Identifier	fprintf		5448028	0					
ANR	5449349	ArgumentList	stderr		5448028	1					
ANR	5449350	Argument	stderr		5448028	0					
ANR	5449351	Identifier	stderr		5448028	0					
ANR	5449352	Argument	"""ERROR: ambiguous option: \\""%s\\""\\n"""		5448028	1					
ANR	5449353	PrimaryExpression	"""ERROR: ambiguous option: \\""%s\\""\\n"""		5448028	0					
ANR	5449354	Argument	* tmp		5448028	2					
ANR	5449355	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449356	UnaryOperator	*		5448028	0					
ANR	5449357	Identifier	tmp		5448028	1					
ANR	5449358	ExpressionStatement	"fprintf ( stderr , ""Please specify \\""-name\\"" or \\""-negotiator\\""\\n"" )"	625:4:17181:17255	5448028	1	True				
ANR	5449359	CallExpression	"fprintf ( stderr , ""Please specify \\""-name\\"" or \\""-negotiator\\""\\n"" )"		5448028	0					
ANR	5449360	Callee	fprintf		5448028	0					
ANR	5449361	Identifier	fprintf		5448028	0					
ANR	5449362	ArgumentList	stderr		5448028	1					
ANR	5449363	Argument	stderr		5448028	0					
ANR	5449364	Identifier	stderr		5448028	0					
ANR	5449365	Argument	"""Please specify \\""-name\\"" or \\""-negotiator\\""\\n"""		5448028	1					
ANR	5449366	PrimaryExpression	"""Please specify \\""-name\\"" or \\""-negotiator\\""\\n"""		5448028	0					
ANR	5449367	ExpressionStatement	usage ( NULL )	627:4:17261:17274	5448028	2	True				
ANR	5449368	CallExpression	usage ( NULL )		5448028	0					
ANR	5449369	Callee	usage		5448028	0					
ANR	5449370	Identifier	usage		5448028	0					
ANR	5449371	ArgumentList	NULL		5448028	1					
ANR	5449372	Argument	NULL		5448028	0					
ANR	5449373	Identifier	NULL		5448028	0					
ANR	5449374	BreakStatement	break ;	629:3:17284:17289	5448028	36	True				
ANR	5449375	Label	case 'm' :	630:2:17293:17301	5448028	37	True				
ANR	5449376	ExpressionStatement	subsys_check ( MyName )	631:3:17306:17328	5448028	38	True				
ANR	5449377	CallExpression	subsys_check ( MyName )		5448028	0					
ANR	5449378	Callee	subsys_check		5448028	0					
ANR	5449379	Identifier	subsys_check		5448028	0					
ANR	5449380	ArgumentList	MyName		5448028	1					
ANR	5449381	Argument	MyName		5448028	0					
ANR	5449382	Identifier	MyName		5448028	0					
ANR	5449383	ExpressionStatement	dt = DT_MASTER	632:3:17333:17347	5448028	39	True				
ANR	5449384	AssignmentExpression	dt = DT_MASTER		5448028	0		=			
ANR	5449385	Identifier	dt		5448028	0					
ANR	5449386	Identifier	DT_MASTER		5448028	1					
ANR	5449387	BreakStatement	break ;	633:3:17352:17357	5448028	40	True				
ANR	5449388	Label	case 'c' :	634:2:17361:17369	5448028	41	True				
ANR	5449389	IfStatement	if ( ( * tmp ) [ 2 ] )		5448028	42					
ANR	5449390	Condition	( * tmp ) [ 2 ]	635:7:17378:17386	5448028	0	True				
ANR	5449391	ArrayIndexing	( * tmp ) [ 2 ]		5448028	0					
ANR	5449392	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449393	UnaryOperator	*		5448028	0					
ANR	5449394	Identifier	tmp		5448028	1					
ANR	5449395	PrimaryExpression	2		5448028	1					
ANR	5449396	CompoundStatement		313:19:7742:7742	5448028	1					
ANR	5449397	SwitchStatement	switch ( ( * tmp ) [ 2 ] )		5448028	0					
ANR	5449398	Condition	( * tmp ) [ 2 ]	636:12:17404:17412	5448028	0	True				
ANR	5449399	ArrayIndexing	( * tmp ) [ 2 ]		5448028	0					
ANR	5449400	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449401	UnaryOperator	*		5448028	0					
ANR	5449402	Identifier	tmp		5448028	1					
ANR	5449403	PrimaryExpression	2		5448028	1					
ANR	5449404	CompoundStatement		314:24:7768:7768	5448028	1					
ANR	5449405	Label	case 'm' :	637:4:17422:17430	5448028	0	True				
ANR	5449406	ExpressionStatement	tmp ++	640:5:17518:17523	5448028	1	True				
ANR	5449407	PostIncDecOperationExpression	tmp ++		5448028	0					
ANR	5449408	Identifier	tmp		5448028	0					
ANR	5449409	IncDec	++		5448028	1					
ANR	5449410	IfStatement	if ( tmp && * tmp )		5448028	2					
ANR	5449411	Condition	tmp && * tmp	641:9:17534:17544	5448028	0	True				
ANR	5449412	AndExpression	tmp && * tmp		5448028	0		&&			
ANR	5449413	Identifier	tmp		5448028	0					
ANR	5449414	UnaryOperationExpression	* tmp		5448028	1					
ANR	5449415	UnaryOperator	*		5448028	0					
ANR	5449416	Identifier	tmp		5448028	1					
ANR	5449417	CompoundStatement		319:23:7900:7900	5448028	1					
ANR	5449418	ExpressionStatement	cmd = atoi ( * tmp )	642:6:17556:17574	5448028	0	True				
ANR	5449419	AssignmentExpression	cmd = atoi ( * tmp )		5448028	0		=			
ANR	5449420	Identifier	cmd		5448028	0					
ANR	5449421	CallExpression	atoi ( * tmp )		5448028	1					
ANR	5449422	Callee	atoi		5448028	0					
ANR	5449423	Identifier	atoi		5448028	0					
ANR	5449424	ArgumentList	* tmp		5448028	1					
ANR	5449425	Argument	* tmp		5448028	0					
ANR	5449426	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449427	UnaryOperator	*		5448028	0					
ANR	5449428	Identifier	tmp		5448028	1					
ANR	5449429	ExpressionStatement	cmd_set = 1	643:6:17582:17593	5448028	1	True				
ANR	5449430	AssignmentExpression	cmd_set = 1		5448028	0		=			
ANR	5449431	Identifier	cmd_set		5448028	0					
ANR	5449432	PrimaryExpression	1		5448028	1					
ANR	5449433	IfStatement	if ( ! cmd )		5448028	2					
ANR	5449434	Condition	! cmd	644:10:17605:17608	5448028	0	True				
ANR	5449435	UnaryOperationExpression	! cmd		5448028	0					
ANR	5449436	UnaryOperator	!		5448028	0					
ANR	5449437	Identifier	cmd		5448028	1					
ANR	5449438	CompoundStatement		322:17:7964:7964	5448028	1					
ANR	5449439	ExpressionStatement	"fprintf ( stderr , ""ERROR: invalid argument to -cmd (\\""%s\\"")\\n"" , * tmp )"	645:7:17621:17711	5448028	0	True				
ANR	5449440	CallExpression	"fprintf ( stderr , ""ERROR: invalid argument to -cmd (\\""%s\\"")\\n"" , * tmp )"		5448028	0					
ANR	5449441	Callee	fprintf		5448028	0					
ANR	5449442	Identifier	fprintf		5448028	0					
ANR	5449443	ArgumentList	stderr		5448028	1					
ANR	5449444	Argument	stderr		5448028	0					
ANR	5449445	Identifier	stderr		5448028	0					
ANR	5449446	Argument	"""ERROR: invalid argument to -cmd (\\""%s\\"")\\n"""		5448028	1					
ANR	5449447	PrimaryExpression	"""ERROR: invalid argument to -cmd (\\""%s\\"")\\n"""		5448028	0					
ANR	5449448	Argument	* tmp		5448028	2					
ANR	5449449	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449450	UnaryOperator	*		5448028	0					
ANR	5449451	Identifier	tmp		5448028	1					
ANR	5449452	ExpressionStatement	exit ( 1 )	648:7:17720:17729	5448028	1	True				
ANR	5449453	CallExpression	exit ( 1 )		5448028	0					
ANR	5449454	Callee	exit		5448028	0					
ANR	5449455	Identifier	exit		5448028	0					
ANR	5449456	ArgumentList	1		5448028	1					
ANR	5449457	Argument	1		5448028	0					
ANR	5449458	PrimaryExpression	1		5448028	0					
ANR	5449459	ElseStatement	else		5448028	0					
ANR	5449460	CompoundStatement		328:12:8103:8103	5448028	0					
ANR	5449461	ExpressionStatement	"fprintf ( stderr , ""ERROR: -cmd requires another argument\\n"" )"	651:6:17759:17829	5448028	0	True				
ANR	5449462	CallExpression	"fprintf ( stderr , ""ERROR: -cmd requires another argument\\n"" )"		5448028	0					
ANR	5449463	Callee	fprintf		5448028	0					
ANR	5449464	Identifier	fprintf		5448028	0					
ANR	5449465	ArgumentList	stderr		5448028	1					
ANR	5449466	Argument	stderr		5448028	0					
ANR	5449467	Identifier	stderr		5448028	0					
ANR	5449468	Argument	"""ERROR: -cmd requires another argument\\n"""		5448028	1					
ANR	5449469	PrimaryExpression	"""ERROR: -cmd requires another argument\\n"""		5448028	0					
ANR	5449470	ExpressionStatement	exit ( 1 )	653:6:17838:17847	5448028	1	True				
ANR	5449471	CallExpression	exit ( 1 )		5448028	0					
ANR	5449472	Callee	exit		5448028	0					
ANR	5449473	Identifier	exit		5448028	0					
ANR	5449474	ArgumentList	1		5448028	1					
ANR	5449475	Argument	1		5448028	0					
ANR	5449476	PrimaryExpression	1		5448028	0					
ANR	5449477	BreakStatement	break ;	655:5:17861:17866	5448028	3	True				
ANR	5449478	Label	case 'o' :	656:4:17872:17880	5448028	4	True				
ANR	5449479	IfStatement	if ( ( * tmp ) [ 3 ] )		5448028	5					
ANR	5449480	Condition	( * tmp ) [ 3 ]	657:10:17892:17900	5448028	0	True				
ANR	5449481	ArrayIndexing	( * tmp ) [ 3 ]		5448028	0					
ANR	5449482	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449483	UnaryOperator	*		5448028	0					
ANR	5449484	Identifier	tmp		5448028	1					
ANR	5449485	PrimaryExpression	3		5448028	1					
ANR	5449486	CompoundStatement		335:22:8256:8256	5448028	1					
ANR	5449487	SwitchStatement	switch ( ( * tmp ) [ 3 ] )		5448028	0					
ANR	5449488	Condition	( * tmp ) [ 3 ]	658:16:17922:17930	5448028	0	True				
ANR	5449489	ArrayIndexing	( * tmp ) [ 3 ]		5448028	0					
ANR	5449490	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449491	UnaryOperator	*		5448028	0					
ANR	5449492	Identifier	tmp		5448028	1					
ANR	5449493	PrimaryExpression	3		5448028	1					
ANR	5449494	CompoundStatement		336:28:8286:8286	5448028	1					
ANR	5449495	Label	case 'n' :	659:8:17944:17952	5448028	0	True				
ANR	5449496	ExpressionStatement	tmp ++	662:10:18060:18065	5448028	1	True				
ANR	5449497	PostIncDecOperationExpression	tmp ++		5448028	0					
ANR	5449498	Identifier	tmp		5448028	0					
ANR	5449499	IncDec	++		5448028	1					
ANR	5449500	IfStatement	if ( tmp && * tmp )		5448028	2					
ANR	5449501	Condition	tmp && * tmp	663:14:18081:18091	5448028	0	True				
ANR	5449502	AndExpression	tmp && * tmp		5448028	0		&&			
ANR	5449503	Identifier	tmp		5448028	0					
ANR	5449504	UnaryOperationExpression	* tmp		5448028	1					
ANR	5449505	UnaryOperator	*		5448028	0					
ANR	5449506	Identifier	tmp		5448028	1					
ANR	5449507	CompoundStatement		341:28:8447:8447	5448028	1					
ANR	5449508	ExpressionStatement	constraint = * tmp	664:5:18102:18119	5448028	0	True				
ANR	5449509	AssignmentExpression	constraint = * tmp		5448028	0		=			
ANR	5449510	Identifier	constraint		5448028	0					
ANR	5449511	UnaryOperationExpression	* tmp		5448028	1					
ANR	5449512	UnaryOperator	*		5448028	0					
ANR	5449513	Identifier	tmp		5448028	1					
ANR	5449514	ElseStatement	else		5448028	0					
ANR	5449515	CompoundStatement		343:17:8490:8490	5448028	0					
ANR	5449516	ExpressionStatement	"fprintf ( stderr , ""ERROR: -constraint requires another argument\\n"" )"	666:5:18145:18212	5448028	0	True				
ANR	5449517	CallExpression	"fprintf ( stderr , ""ERROR: -constraint requires another argument\\n"" )"		5448028	0					
ANR	5449518	Callee	fprintf		5448028	0					
ANR	5449519	Identifier	fprintf		5448028	0					
ANR	5449520	ArgumentList	stderr		5448028	1					
ANR	5449521	Argument	stderr		5448028	0					
ANR	5449522	Identifier	stderr		5448028	0					
ANR	5449523	Argument	"""ERROR: -constraint requires another argument\\n"""		5448028	1					
ANR	5449524	PrimaryExpression	"""ERROR: -constraint requires another argument\\n"""		5448028	0					
ANR	5449525	ExpressionStatement	usage ( NULL )	667:5:18219:18232	5448028	1	True				
ANR	5449526	CallExpression	usage ( NULL )		5448028	0					
ANR	5449527	Callee	usage		5448028	0					
ANR	5449528	Identifier	usage		5448028	0					
ANR	5449529	ArgumentList	NULL		5448028	1					
ANR	5449530	Argument	NULL		5448028	0					
ANR	5449531	Identifier	NULL		5448028	0					
ANR	5449532	BreakStatement	break ;	670:10:18257:18262	5448028	3	True				
ANR	5449533	Label	case 'l' :	671:8:18272:18280	5448028	4	True				
ANR	5449534	ExpressionStatement	subsys_check ( MyName )	672:5:18287:18309	5448028	5	True				
ANR	5449535	CallExpression	subsys_check ( MyName )		5448028	0					
ANR	5449536	Callee	subsys_check		5448028	0					
ANR	5449537	Identifier	subsys_check		5448028	0					
ANR	5449538	ArgumentList	MyName		5448028	1					
ANR	5449539	Argument	MyName		5448028	0					
ANR	5449540	Identifier	MyName		5448028	0					
ANR	5449541	ExpressionStatement	dt = DT_COLLECTOR	673:5:18316:18333	5448028	6	True				
ANR	5449542	AssignmentExpression	dt = DT_COLLECTOR		5448028	0		=			
ANR	5449543	Identifier	dt		5448028	0					
ANR	5449544	Identifier	DT_COLLECTOR		5448028	1					
ANR	5449545	BreakStatement	break ;	674:5:18340:18345	5448028	7	True				
ANR	5449546	Label	default :	675:8:18355:18362	5448028	8	True				
ANR	5449547	Identifier	default		5448028	0					
ANR	5449548	ExpressionStatement	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"	676:10:18374:18460	5448028	9	True				
ANR	5449549	CallExpression	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"		5448028	0					
ANR	5449550	Callee	fprintf		5448028	0					
ANR	5449551	Identifier	fprintf		5448028	0					
ANR	5449552	ArgumentList	stderr		5448028	1					
ANR	5449553	Argument	stderr		5448028	0					
ANR	5449554	Identifier	stderr		5448028	0					
ANR	5449555	Argument	"""ERROR: unknown parameter: \\""%s\\""\\n"""		5448028	1					
ANR	5449556	PrimaryExpression	"""ERROR: unknown parameter: \\""%s\\""\\n"""		5448028	0					
ANR	5449557	Argument	* tmp		5448028	2					
ANR	5449558	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449559	UnaryOperator	*		5448028	0					
ANR	5449560	Identifier	tmp		5448028	1					
ANR	5449561	ExpressionStatement	usage ( NULL )	679:10:18474:18487	5448028	10	True				
ANR	5449562	CallExpression	usage ( NULL )		5448028	0					
ANR	5449563	Callee	usage		5448028	0					
ANR	5449564	Identifier	usage		5448028	0					
ANR	5449565	ArgumentList	NULL		5448028	1					
ANR	5449566	Argument	NULL		5448028	0					
ANR	5449567	Identifier	NULL		5448028	0					
ANR	5449568	BreakStatement	break ;	680:10:18499:18504	5448028	11	True				
ANR	5449569	ElseStatement	else		5448028	0					
ANR	5449570	CompoundStatement		360:13:8881:8881	5448028	0					
ANR	5449571	ExpressionStatement	"fprintf ( stderr , ""ERROR: ambigous parameter: \\""%s\\""\\n"" , * tmp )"	683:8:18539:18622	5448028	0	True				
ANR	5449572	CallExpression	"fprintf ( stderr , ""ERROR: ambigous parameter: \\""%s\\""\\n"" , * tmp )"		5448028	0					
ANR	5449573	Callee	fprintf		5448028	0					
ANR	5449574	Identifier	fprintf		5448028	0					
ANR	5449575	ArgumentList	stderr		5448028	1					
ANR	5449576	Argument	stderr		5448028	0					
ANR	5449577	Identifier	stderr		5448028	0					
ANR	5449578	Argument	"""ERROR: ambigous parameter: \\""%s\\""\\n"""		5448028	1					
ANR	5449579	PrimaryExpression	"""ERROR: ambigous parameter: \\""%s\\""\\n"""		5448028	0					
ANR	5449580	Argument	* tmp		5448028	2					
ANR	5449581	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449582	UnaryOperator	*		5448028	0					
ANR	5449583	Identifier	tmp		5448028	1					
ANR	5449584	ExpressionStatement	"fprintf ( stderr , ""Please specify \\""-collector\\"" or \\""-constraint\\""\\n"" )"	686:8:18634:18716	5448028	1	True				
ANR	5449585	CallExpression	"fprintf ( stderr , ""Please specify \\""-collector\\"" or \\""-constraint\\""\\n"" )"		5448028	0					
ANR	5449586	Callee	fprintf		5448028	0					
ANR	5449587	Identifier	fprintf		5448028	0					
ANR	5449588	ArgumentList	stderr		5448028	1					
ANR	5449589	Argument	stderr		5448028	0					
ANR	5449590	Identifier	stderr		5448028	0					
ANR	5449591	Argument	"""Please specify \\""-collector\\"" or \\""-constraint\\""\\n"""		5448028	1					
ANR	5449592	PrimaryExpression	"""Please specify \\""-collector\\"" or \\""-constraint\\""\\n"""		5448028	0					
ANR	5449593	ExpressionStatement	usage ( NULL )	688:8:18726:18739	5448028	2	True				
ANR	5449594	CallExpression	usage ( NULL )		5448028	0					
ANR	5449595	Callee	usage		5448028	0					
ANR	5449596	Identifier	usage		5448028	0					
ANR	5449597	ArgumentList	NULL		5448028	1					
ANR	5449598	Argument	NULL		5448028	0					
ANR	5449599	Identifier	NULL		5448028	0					
ANR	5449600	BreakStatement	break ;	690:6:18755:18760	5448028	6	True				
ANR	5449601	Label	default :	691:4:18766:18773	5448028	7	True				
ANR	5449602	Identifier	default		5448028	0					
ANR	5449603	ExpressionStatement	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"	692:5:18780:18858	5448028	8	True				
ANR	5449604	CallExpression	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"		5448028	0					
ANR	5449605	Callee	fprintf		5448028	0					
ANR	5449606	Identifier	fprintf		5448028	0					
ANR	5449607	ArgumentList	stderr		5448028	1					
ANR	5449608	Argument	stderr		5448028	0					
ANR	5449609	Identifier	stderr		5448028	0					
ANR	5449610	Argument	"""ERROR: unknown parameter: \\""%s\\""\\n"""		5448028	1					
ANR	5449611	PrimaryExpression	"""ERROR: unknown parameter: \\""%s\\""\\n"""		5448028	0					
ANR	5449612	Argument	* tmp		5448028	2					
ANR	5449613	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449614	UnaryOperator	*		5448028	0					
ANR	5449615	Identifier	tmp		5448028	1					
ANR	5449616	ExpressionStatement	usage ( NULL )	695:5:18867:18880	5448028	9	True				
ANR	5449617	CallExpression	usage ( NULL )		5448028	0					
ANR	5449618	Callee	usage		5448028	0					
ANR	5449619	Identifier	usage		5448028	0					
ANR	5449620	ArgumentList	NULL		5448028	1					
ANR	5449621	Argument	NULL		5448028	0					
ANR	5449622	Identifier	NULL		5448028	0					
ANR	5449623	BreakStatement	break ;	696:5:18887:18892	5448028	10	True				
ANR	5449624	ElseStatement	else		5448028	0					
ANR	5449625	CompoundStatement		376:10:9262:9262	5448028	0					
ANR	5449626	ExpressionStatement	"fprintf ( stderr , ""ERROR: ambiguous parameter: \\""%s\\""\\n"" , * tmp )"	699:4:18916:18994	5448028	0	True				
ANR	5449627	CallExpression	"fprintf ( stderr , ""ERROR: ambiguous parameter: \\""%s\\""\\n"" , * tmp )"		5448028	0					
ANR	5449628	Callee	fprintf		5448028	0					
ANR	5449629	Identifier	fprintf		5448028	0					
ANR	5449630	ArgumentList	stderr		5448028	1					
ANR	5449631	Argument	stderr		5448028	0					
ANR	5449632	Identifier	stderr		5448028	0					
ANR	5449633	Argument	"""ERROR: ambiguous parameter: \\""%s\\""\\n"""		5448028	1					
ANR	5449634	PrimaryExpression	"""ERROR: ambiguous parameter: \\""%s\\""\\n"""		5448028	0					
ANR	5449635	Argument	* tmp		5448028	2					
ANR	5449636	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449637	UnaryOperator	*		5448028	0					
ANR	5449638	Identifier	tmp		5448028	1					
ANR	5449639	ExpressionStatement	usage ( NULL )	702:4:19001:19014	5448028	1	True				
ANR	5449640	CallExpression	usage ( NULL )		5448028	0					
ANR	5449641	Callee	usage		5448028	0					
ANR	5449642	Identifier	usage		5448028	0					
ANR	5449643	ArgumentList	NULL		5448028	1					
ANR	5449644	Argument	NULL		5448028	0					
ANR	5449645	Identifier	NULL		5448028	0					
ANR	5449646	BreakStatement	break ;	704:3:19024:19029	5448028	43	True				
ANR	5449647	Label	case 'k' :	705:2:19033:19041	5448028	44	True				
ANR	5449648	ExpressionStatement	subsys_check ( MyName )	706:3:19046:19068	5448028	45	True				
ANR	5449649	CallExpression	subsys_check ( MyName )		5448028	0					
ANR	5449650	Callee	subsys_check		5448028	0					
ANR	5449651	Identifier	subsys_check		5448028	0					
ANR	5449652	ArgumentList	MyName		5448028	1					
ANR	5449653	Argument	MyName		5448028	0					
ANR	5449654	Identifier	MyName		5448028	0					
ANR	5449655	ExpressionStatement	dt = DT_KBDD	707:3:19073:19085	5448028	46	True				
ANR	5449656	AssignmentExpression	dt = DT_KBDD		5448028	0		=			
ANR	5449657	Identifier	dt		5448028	0					
ANR	5449658	Identifier	DT_KBDD		5448028	1					
ANR	5449659	BreakStatement	break ;	708:3:19090:19095	5448028	47	True				
ANR	5449660	Label	case 's' :	709:2:19099:19107	5448028	48	True				
ANR	5449661	ExpressionStatement	subsys_check ( MyName )	710:3:19112:19134	5448028	49	True				
ANR	5449662	CallExpression	subsys_check ( MyName )		5448028	0					
ANR	5449663	Callee	subsys_check		5448028	0					
ANR	5449664	Identifier	subsys_check		5448028	0					
ANR	5449665	ArgumentList	MyName		5448028	1					
ANR	5449666	Argument	MyName		5448028	0					
ANR	5449667	Identifier	MyName		5448028	0					
ANR	5449668	IfStatement	if ( ( * tmp ) [ 2 ] )		5448028	50					
ANR	5449669	Condition	( * tmp ) [ 2 ]	711:7:19143:19151	5448028	0	True				
ANR	5449670	ArrayIndexing	( * tmp ) [ 2 ]		5448028	0					
ANR	5449671	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449672	UnaryOperator	*		5448028	0					
ANR	5449673	Identifier	tmp		5448028	1					
ANR	5449674	PrimaryExpression	2		5448028	1					
ANR	5449675	CompoundStatement		389:19:9507:9507	5448028	1					
ANR	5449676	SwitchStatement	switch ( ( * tmp ) [ 2 ] )		5448028	0					
ANR	5449677	Condition	( * tmp ) [ 2 ]	712:12:19169:19177	5448028	0	True				
ANR	5449678	ArrayIndexing	( * tmp ) [ 2 ]		5448028	0					
ANR	5449679	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449680	UnaryOperator	*		5448028	0					
ANR	5449681	Identifier	tmp		5448028	1					
ANR	5449682	PrimaryExpression	2		5448028	1					
ANR	5449683	CompoundStatement		390:24:9533:9533	5448028	1					
ANR	5449684	Label	case 'c' :	713:4:19187:19195	5448028	0	True				
ANR	5449685	ExpressionStatement	dt = DT_SCHEDD	714:5:19202:19216	5448028	1	True				
ANR	5449686	AssignmentExpression	dt = DT_SCHEDD		5448028	0		=			
ANR	5449687	Identifier	dt		5448028	0					
ANR	5449688	Identifier	DT_SCHEDD		5448028	1					
ANR	5449689	BreakStatement	break ;	715:5:19223:19228	5448028	2	True				
ANR	5449690	Label	case 't' :	716:4:19234:19242	5448028	3	True				
ANR	5449691	ExpressionStatement	dt = DT_STARTD	717:5:19249:19263	5448028	4	True				
ANR	5449692	AssignmentExpression	dt = DT_STARTD		5448028	0		=			
ANR	5449693	Identifier	dt		5448028	0					
ANR	5449694	Identifier	DT_STARTD		5448028	1					
ANR	5449695	BreakStatement	break ;	718:5:19270:19275	5448028	5	True				
ANR	5449696	Label	case 'u' :	719:4:19281:19289	5448028	6	True				
ANR	5449697	ExpressionStatement	tmp ++	722:5:19383:19388	5448028	7	True				
ANR	5449698	PostIncDecOperationExpression	tmp ++		5448028	0					
ANR	5449699	Identifier	tmp		5448028	0					
ANR	5449700	IncDec	++		5448028	1					
ANR	5449701	IfStatement	if ( tmp && * tmp )		5448028	8					
ANR	5449702	Condition	tmp && * tmp	723:9:19399:19409	5448028	0	True				
ANR	5449703	AndExpression	tmp && * tmp		5448028	0		&&			
ANR	5449704	Identifier	tmp		5448028	0					
ANR	5449705	UnaryOperationExpression	* tmp		5448028	1					
ANR	5449706	UnaryOperator	*		5448028	0					
ANR	5449707	Identifier	tmp		5448028	1					
ANR	5449708	CompoundStatement		401:23:9765:9765	5448028	1					
ANR	5449709	ExpressionStatement	subsys_check ( MyName )	724:6:19421:19443	5448028	0	True				
ANR	5449710	CallExpression	subsys_check ( MyName )		5448028	0					
ANR	5449711	Callee	subsys_check		5448028	0					
ANR	5449712	Identifier	subsys_check		5448028	0					
ANR	5449713	ArgumentList	MyName		5448028	1					
ANR	5449714	Argument	MyName		5448028	0					
ANR	5449715	Identifier	MyName		5448028	0					
ANR	5449716	ExpressionStatement	subsys_arg = * tmp	725:6:19451:19468	5448028	1	True				
ANR	5449717	AssignmentExpression	subsys_arg = * tmp		5448028	0		=			
ANR	5449718	Identifier	subsys_arg		5448028	0					
ANR	5449719	UnaryOperationExpression	* tmp		5448028	1					
ANR	5449720	UnaryOperator	*		5448028	0					
ANR	5449721	Identifier	tmp		5448028	1					
ANR	5449722	ExpressionStatement	dt = stringToDaemonType ( subsys_arg )	726:6:19476:19511	5448028	2	True				
ANR	5449723	AssignmentExpression	dt = stringToDaemonType ( subsys_arg )		5448028	0		=			
ANR	5449724	Identifier	dt		5448028	0					
ANR	5449725	CallExpression	stringToDaemonType ( subsys_arg )		5448028	1					
ANR	5449726	Callee	stringToDaemonType		5448028	0					
ANR	5449727	Identifier	stringToDaemonType		5448028	0					
ANR	5449728	ArgumentList	subsys_arg		5448028	1					
ANR	5449729	Argument	subsys_arg		5448028	0					
ANR	5449730	Identifier	subsys_arg		5448028	0					
ANR	5449731	IfStatement	if ( dt == DT_NONE )		5448028	3					
ANR	5449732	Condition	dt == DT_NONE	727:10:19523:19535	5448028	0	True				
ANR	5449733	EqualityExpression	dt == DT_NONE		5448028	0		==			
ANR	5449734	Identifier	dt		5448028	0					
ANR	5449735	Identifier	DT_NONE		5448028	1					
ANR	5449736	CompoundStatement		405:26:9891:9891	5448028	1					
ANR	5449737	ExpressionStatement	dt = DT_GENERIC	728:7:19548:19563	5448028	0	True				
ANR	5449738	AssignmentExpression	dt = DT_GENERIC		5448028	0		=			
ANR	5449739	Identifier	dt		5448028	0					
ANR	5449740	Identifier	DT_GENERIC		5448028	1					
ANR	5449741	ElseStatement	else		5448028	0					
ANR	5449742	CompoundStatement		408:12:9937:9937	5448028	0					
ANR	5449743	ExpressionStatement	"fprintf ( stderr , ""ERROR: -daemon requires another argument\\n"" )"	731:6:19593:19665	5448028	0	True				
ANR	5449744	CallExpression	"fprintf ( stderr , ""ERROR: -daemon requires another argument\\n"" )"		5448028	0					
ANR	5449745	Callee	fprintf		5448028	0					
ANR	5449746	Identifier	fprintf		5448028	0					
ANR	5449747	ArgumentList	stderr		5448028	1					
ANR	5449748	Argument	stderr		5448028	0					
ANR	5449749	Identifier	stderr		5448028	0					
ANR	5449750	Argument	"""ERROR: -daemon requires another argument\\n"""		5448028	1					
ANR	5449751	PrimaryExpression	"""ERROR: -daemon requires another argument\\n"""		5448028	0					
ANR	5449752	ExpressionStatement	usage ( NULL )	733:6:19674:19687	5448028	1	True				
ANR	5449753	CallExpression	usage ( NULL )		5448028	0					
ANR	5449754	Callee	usage		5448028	0					
ANR	5449755	Identifier	usage		5448028	0					
ANR	5449756	ArgumentList	NULL		5448028	1					
ANR	5449757	Argument	NULL		5448028	0					
ANR	5449758	Identifier	NULL		5448028	0					
ANR	5449759	ExpressionStatement	exit ( 1 )	734:6:19695:19704	5448028	2	True				
ANR	5449760	CallExpression	exit ( 1 )		5448028	0					
ANR	5449761	Callee	exit		5448028	0					
ANR	5449762	Identifier	exit		5448028	0					
ANR	5449763	ArgumentList	1		5448028	1					
ANR	5449764	Argument	1		5448028	0					
ANR	5449765	PrimaryExpression	1		5448028	0					
ANR	5449766	BreakStatement	break ;	736:5:19718:19723	5448028	9	True				
ANR	5449767	Label	default :	737:4:19729:19736	5448028	10	True				
ANR	5449768	Identifier	default		5448028	0					
ANR	5449769	ExpressionStatement	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"	738:5:19744:19822	5448028	11	True				
ANR	5449770	CallExpression	"fprintf ( stderr , ""ERROR: unknown parameter: \\""%s\\""\\n"" , * tmp )"		5448028	0					
ANR	5449771	Callee	fprintf		5448028	0					
ANR	5449772	Identifier	fprintf		5448028	0					
ANR	5449773	ArgumentList	stderr		5448028	1					
ANR	5449774	Argument	stderr		5448028	0					
ANR	5449775	Identifier	stderr		5448028	0					
ANR	5449776	Argument	"""ERROR: unknown parameter: \\""%s\\""\\n"""		5448028	1					
ANR	5449777	PrimaryExpression	"""ERROR: unknown parameter: \\""%s\\""\\n"""		5448028	0					
ANR	5449778	Argument	* tmp		5448028	2					
ANR	5449779	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449780	UnaryOperator	*		5448028	0					
ANR	5449781	Identifier	tmp		5448028	1					
ANR	5449782	ExpressionStatement	usage ( NULL )	741:5:19831:19844	5448028	12	True				
ANR	5449783	CallExpression	usage ( NULL )		5448028	0					
ANR	5449784	Callee	usage		5448028	0					
ANR	5449785	Identifier	usage		5448028	0					
ANR	5449786	ArgumentList	NULL		5448028	1					
ANR	5449787	Argument	NULL		5448028	0					
ANR	5449788	Identifier	NULL		5448028	0					
ANR	5449789	BreakStatement	break ;	742:5:19851:19856	5448028	13	True				
ANR	5449790	ElseStatement	else		5448028	0					
ANR	5449791	CompoundStatement		422:10:10226:10226	5448028	0					
ANR	5449792	ExpressionStatement	"fprintf ( stderr , ""ERROR: ambiguous argument \\""%s\\""\\n"" , * tmp )"	745:4:19880:19956	5448028	0	True				
ANR	5449793	CallExpression	"fprintf ( stderr , ""ERROR: ambiguous argument \\""%s\\""\\n"" , * tmp )"		5448028	0					
ANR	5449794	Callee	fprintf		5448028	0					
ANR	5449795	Identifier	fprintf		5448028	0					
ANR	5449796	ArgumentList	stderr		5448028	1					
ANR	5449797	Argument	stderr		5448028	0					
ANR	5449798	Identifier	stderr		5448028	0					
ANR	5449799	Argument	"""ERROR: ambiguous argument \\""%s\\""\\n"""		5448028	1					
ANR	5449800	PrimaryExpression	"""ERROR: ambiguous argument \\""%s\\""\\n"""		5448028	0					
ANR	5449801	Argument	* tmp		5448028	2					
ANR	5449802	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449803	UnaryOperator	*		5448028	0					
ANR	5449804	Identifier	tmp		5448028	1					
ANR	5449805	ExpressionStatement	"fprintf ( stderr , ""Please specify \\""-daemon\\"", \\""-startd\\"" or \\""-schedd\\""\\n"" )"	748:4:19962:20044	5448028	1	True				
ANR	5449806	CallExpression	"fprintf ( stderr , ""Please specify \\""-daemon\\"", \\""-startd\\"" or \\""-schedd\\""\\n"" )"		5448028	0					
ANR	5449807	Callee	fprintf		5448028	0					
ANR	5449808	Identifier	fprintf		5448028	0					
ANR	5449809	ArgumentList	stderr		5448028	1					
ANR	5449810	Argument	stderr		5448028	0					
ANR	5449811	Identifier	stderr		5448028	0					
ANR	5449812	Argument	"""Please specify \\""-daemon\\"", \\""-startd\\"" or \\""-schedd\\""\\n"""		5448028	1					
ANR	5449813	PrimaryExpression	"""Please specify \\""-daemon\\"", \\""-startd\\"" or \\""-schedd\\""\\n"""		5448028	0					
ANR	5449814	ExpressionStatement	usage ( NULL )	750:4:20050:20063	5448028	2	True				
ANR	5449815	CallExpression	usage ( NULL )		5448028	0					
ANR	5449816	Callee	usage		5448028	0					
ANR	5449817	Identifier	usage		5448028	0					
ANR	5449818	ArgumentList	NULL		5448028	1					
ANR	5449819	Argument	NULL		5448028	0					
ANR	5449820	Identifier	NULL		5448028	0					
ANR	5449821	BreakStatement	break ;	752:3:20073:20078	5448028	51	True				
ANR	5449822	Label	default :	753:2:20082:20089	5448028	52	True				
ANR	5449823	Identifier	default		5448028	0					
ANR	5449824	ExpressionStatement	"fprintf ( stderr , ""ERROR: invalid argument \\""%s\\""\\n"" , * tmp )"	754:3:20094:20159	5448028	53	True				
ANR	5449825	CallExpression	"fprintf ( stderr , ""ERROR: invalid argument \\""%s\\""\\n"" , * tmp )"		5448028	0					
ANR	5449826	Callee	fprintf		5448028	0					
ANR	5449827	Identifier	fprintf		5448028	0					
ANR	5449828	ArgumentList	stderr		5448028	1					
ANR	5449829	Argument	stderr		5448028	0					
ANR	5449830	Identifier	stderr		5448028	0					
ANR	5449831	Argument	"""ERROR: invalid argument \\""%s\\""\\n"""		5448028	1					
ANR	5449832	PrimaryExpression	"""ERROR: invalid argument \\""%s\\""\\n"""		5448028	0					
ANR	5449833	Argument	* tmp		5448028	2					
ANR	5449834	UnaryOperationExpression	* tmp		5448028	0					
ANR	5449835	UnaryOperator	*		5448028	0					
ANR	5449836	Identifier	tmp		5448028	1					
ANR	5449837	ExpressionStatement	usage ( MyName )	756:3:20164:20179	5448028	54	True				
ANR	5449838	CallExpression	usage ( MyName )		5448028	0					
ANR	5449839	Callee	usage		5448028	0					
ANR	5449840	Identifier	usage		5448028	0					
ANR	5449841	ArgumentList	MyName		5448028	1					
ANR	5449842	Argument	MyName		5448028	0					
ANR	5449843	Identifier	MyName		5448028	0					
ANR	5449844	ExpressionStatement	computeRealAction ( )	767:1:20616:20635	5448028	15	True				
ANR	5449845	CallExpression	computeRealAction ( )		5448028	0					
ANR	5449846	Callee	computeRealAction		5448028	0					
ANR	5449847	Identifier	computeRealAction		5448028	0					
ANR	5449848	ArgumentList			5448028	1					
ANR	5449849	IfStatement	if ( subsys )		5448028	16					
ANR	5449850	Condition	subsys	774:5:20938:20943	5448028	0	True				
ANR	5449851	Identifier	subsys		5448028	0					
ANR	5449852	CompoundStatement		452:14:11299:11299	5448028	1					
ANR	5449853	IfStatement	if ( ( dt == DT_ANY || dt == DT_GENERIC ) && subsys_arg )		5448028	0					
ANR	5449854	Condition	( dt == DT_ANY || dt == DT_GENERIC ) && subsys_arg	775:6:20955:21002	5448028	0	True				
ANR	5449855	AndExpression	( dt == DT_ANY || dt == DT_GENERIC ) && subsys_arg		5448028	0		&&			
ANR	5449856	OrExpression	dt == DT_ANY || dt == DT_GENERIC		5448028	0		||			
ANR	5449857	EqualityExpression	dt == DT_ANY		5448028	0		==			
ANR	5449858	Identifier	dt		5448028	0					
ANR	5449859	Identifier	DT_ANY		5448028	1					
ANR	5449860	EqualityExpression	dt == DT_GENERIC		5448028	1		==			
ANR	5449861	Identifier	dt		5448028	0					
ANR	5449862	Identifier	DT_GENERIC		5448028	1					
ANR	5449863	Identifier	subsys_arg		5448028	1					
ANR	5449864	CompoundStatement		453:57:11358:11358	5448028	1					
ANR	5449865	ExpressionStatement	subsys = subsys_arg	776:3:21011:21030	5448028	0	True				
ANR	5449866	AssignmentExpression	subsys = subsys_arg		5448028	0		=			
ANR	5449867	Identifier	subsys		5448028	0					
ANR	5449868	Identifier	subsys_arg		5448028	1					
ANR	5449869	ElseStatement	else		5448028	0					
ANR	5449870	CompoundStatement		455:9:11394:11394	5448028	0					
ANR	5449871	ExpressionStatement	subsys = daemonString ( dt )	778:3:21048:21075	5448028	0	True				
ANR	5449872	AssignmentExpression	subsys = daemonString ( dt )		5448028	0		=			
ANR	5449873	Identifier	subsys		5448028	0					
ANR	5449874	CallExpression	daemonString ( dt )		5448028	1					
ANR	5449875	Callee	daemonString		5448028	0					
ANR	5449876	Identifier	daemonString		5448028	0					
ANR	5449877	ArgumentList	dt		5448028	1					
ANR	5449878	Argument	dt		5448028	0					
ANR	5449879	Identifier	dt		5448028	0					
ANR	5449880	IfStatement	if ( ( SET_SHUTDOWN_PROGRAM == cmd ) && ( NULL == exec_program ) )		5448028	17					
ANR	5449881	Condition	( SET_SHUTDOWN_PROGRAM == cmd ) && ( NULL == exec_program )	783:7:21139:21193	5448028	0	True				
ANR	5449882	AndExpression	( SET_SHUTDOWN_PROGRAM == cmd ) && ( NULL == exec_program )		5448028	0		&&			
ANR	5449883	EqualityExpression	SET_SHUTDOWN_PROGRAM == cmd		5448028	0		==			
ANR	5449884	Identifier	SET_SHUTDOWN_PROGRAM		5448028	0					
ANR	5449885	Identifier	cmd		5448028	1					
ANR	5449886	EqualityExpression	NULL == exec_program		5448028	1		==			
ANR	5449887	Identifier	NULL		5448028	0					
ANR	5449888	Identifier	exec_program		5448028	1					
ANR	5449889	CompoundStatement		461:65:11549:11549	5448028	1					
ANR	5449890	ExpressionStatement	"fprintf ( stderr , ""ERROR: \\""-exec\\"" required for %s\\n"" , MyName )"	784:2:21201:21264	5448028	0	True				
ANR	5449891	CallExpression	"fprintf ( stderr , ""ERROR: \\""-exec\\"" required for %s\\n"" , MyName )"		5448028	0					
ANR	5449892	Callee	fprintf		5448028	0					
ANR	5449893	Identifier	fprintf		5448028	0					
ANR	5449894	ArgumentList	stderr		5448028	1					
ANR	5449895	Argument	stderr		5448028	0					
ANR	5449896	Identifier	stderr		5448028	0					
ANR	5449897	Argument	"""ERROR: \\""-exec\\"" required for %s\\n"""		5448028	1					
ANR	5449898	PrimaryExpression	"""ERROR: \\""-exec\\"" required for %s\\n"""		5448028	0					
ANR	5449899	Argument	MyName		5448028	2					
ANR	5449900	Identifier	MyName		5448028	0					
ANR	5449901	ExpressionStatement	usage ( NULL )	785:2:21268:21281	5448028	1	True				
ANR	5449902	CallExpression	usage ( NULL )		5448028	0					
ANR	5449903	Callee	usage		5448028	0					
ANR	5449904	Identifier	usage		5448028	0					
ANR	5449905	ArgumentList	NULL		5448028	1					
ANR	5449906	Argument	NULL		5448028	0					
ANR	5449907	Identifier	NULL		5448028	0					
ANR	5449908	IfStatement	if ( peaceful_shutdown && real_dt == DT_MASTER )		5448028	18					
ANR	5449909	Condition	peaceful_shutdown && real_dt == DT_MASTER	797:5:21722:21762	5448028	0	True				
ANR	5449910	AndExpression	peaceful_shutdown && real_dt == DT_MASTER		5448028	0		&&			
ANR	5449911	Identifier	peaceful_shutdown		5448028	0					
ANR	5449912	EqualityExpression	real_dt == DT_MASTER		5448028	1		==			
ANR	5449913	Identifier	real_dt		5448028	0					
ANR	5449914	Identifier	DT_MASTER		5448028	1					
ANR	5449915	CompoundStatement		475:49:12118:12118	5448028	1					
ANR	5449916	IfStatement	"if ( ( real_cmd == DAEMONS_OFF ) || ( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""startd"" ) ) || ( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""schedd"" ) ) || ( real_cmd == DC_OFF_GRACEFUL ) || ( real_cmd == RESTART ) )"		5448028	0					
ANR	5449917	Condition	"( real_cmd == DAEMONS_OFF ) || ( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""startd"" ) ) || ( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""schedd"" ) ) || ( real_cmd == DC_OFF_GRACEFUL ) || ( real_cmd == RESTART )"	798:6:21774:22000	5448028	0	True				
ANR	5449918	OrExpression	"( real_cmd == DAEMONS_OFF ) || ( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""startd"" ) ) || ( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""schedd"" ) ) || ( real_cmd == DC_OFF_GRACEFUL ) || ( real_cmd == RESTART )"		5448028	0		||			
ANR	5449919	EqualityExpression	real_cmd == DAEMONS_OFF		5448028	0		==			
ANR	5449920	Identifier	real_cmd		5448028	0					
ANR	5449921	Identifier	DAEMONS_OFF		5448028	1					
ANR	5449922	OrExpression	"( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""startd"" ) ) || ( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""schedd"" ) ) || ( real_cmd == DC_OFF_GRACEFUL ) || ( real_cmd == RESTART )"		5448028	1		||			
ANR	5449923	AndExpression	"real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""startd"" )"		5448028	0		&&			
ANR	5449924	EqualityExpression	real_cmd == DAEMON_OFF		5448028	0		==			
ANR	5449925	Identifier	real_cmd		5448028	0					
ANR	5449926	Identifier	DAEMON_OFF		5448028	1					
ANR	5449927	AndExpression	"subsys && ! strcmp ( subsys , ""startd"" )"		5448028	1		&&			
ANR	5449928	Identifier	subsys		5448028	0					
ANR	5449929	UnaryOperationExpression	"! strcmp ( subsys , ""startd"" )"		5448028	1					
ANR	5449930	UnaryOperator	!		5448028	0					
ANR	5449931	CallExpression	"strcmp ( subsys , ""startd"" )"		5448028	1					
ANR	5449932	Callee	strcmp		5448028	0					
ANR	5449933	Identifier	strcmp		5448028	0					
ANR	5449934	ArgumentList	subsys		5448028	1					
ANR	5449935	Argument	subsys		5448028	0					
ANR	5449936	Identifier	subsys		5448028	0					
ANR	5449937	Argument	"""startd"""		5448028	1					
ANR	5449938	PrimaryExpression	"""startd"""		5448028	0					
ANR	5449939	OrExpression	"( real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""schedd"" ) ) || ( real_cmd == DC_OFF_GRACEFUL ) || ( real_cmd == RESTART )"		5448028	1		||			
ANR	5449940	AndExpression	"real_cmd == DAEMON_OFF && subsys && ! strcmp ( subsys , ""schedd"" )"		5448028	0		&&			
ANR	5449941	EqualityExpression	real_cmd == DAEMON_OFF		5448028	0		==			
ANR	5449942	Identifier	real_cmd		5448028	0					
ANR	5449943	Identifier	DAEMON_OFF		5448028	1					
ANR	5449944	AndExpression	"subsys && ! strcmp ( subsys , ""schedd"" )"		5448028	1		&&			
ANR	5449945	Identifier	subsys		5448028	0					
ANR	5449946	UnaryOperationExpression	"! strcmp ( subsys , ""schedd"" )"		5448028	1					
ANR	5449947	UnaryOperator	!		5448028	0					
ANR	5449948	CallExpression	"strcmp ( subsys , ""schedd"" )"		5448028	1					
ANR	5449949	Callee	strcmp		5448028	0					
ANR	5449950	Identifier	strcmp		5448028	0					
ANR	5449951	ArgumentList	subsys		5448028	1					
ANR	5449952	Argument	subsys		5448028	0					
ANR	5449953	Identifier	subsys		5448028	0					
ANR	5449954	Argument	"""schedd"""		5448028	1					
ANR	5449955	PrimaryExpression	"""schedd"""		5448028	0					
ANR	5449956	OrExpression	( real_cmd == DC_OFF_GRACEFUL ) || ( real_cmd == RESTART )		5448028	1		||			
ANR	5449957	EqualityExpression	real_cmd == DC_OFF_GRACEFUL		5448028	0		==			
ANR	5449958	Identifier	real_cmd		5448028	0					
ANR	5449959	Identifier	DC_OFF_GRACEFUL		5448028	1					
ANR	5449960	EqualityExpression	real_cmd == RESTART		5448028	1		==			
ANR	5449961	Identifier	real_cmd		5448028	0					
ANR	5449962	Identifier	RESTART		5448028	1					
ANR	5449963	CompoundStatement		486:3:12524:12575	5448028	1					
ANR	5449964	IdentifierDeclStatement	daemon_t orig_real_dt = real_dt ;	805:3:22080:22111	5448028	0	True				
ANR	5449965	IdentifierDecl	orig_real_dt = real_dt		5448028	0					
ANR	5449966	IdentifierDeclType	daemon_t		5448028	0					
ANR	5449967	Identifier	orig_real_dt		5448028	1					
ANR	5449968	AssignmentExpression	orig_real_dt = real_dt		5448028	2		=			
ANR	5449969	Identifier	real_dt		5448028	0					
ANR	5449970	Identifier	real_dt		5448028	1					
ANR	5449971	IdentifierDeclStatement	int orig_real_cmd = real_cmd ;	806:3:22116:22144	5448028	1	True				
ANR	5449972	IdentifierDecl	orig_real_cmd = real_cmd		5448028	0					
ANR	5449973	IdentifierDeclType	int		5448028	0					
ANR	5449974	Identifier	orig_real_cmd		5448028	1					
ANR	5449975	AssignmentExpression	orig_real_cmd = real_cmd		5448028	2		=			
ANR	5449976	Identifier	real_cmd		5448028	0					
ANR	5449977	Identifier	real_cmd		5448028	1					
ANR	5449978	IdentifierDeclStatement	int orig_cmd = cmd ;	807:3:22149:22167	5448028	2	True				
ANR	5449979	IdentifierDecl	orig_cmd = cmd		5448028	0					
ANR	5449980	IdentifierDeclType	int		5448028	0					
ANR	5449981	Identifier	orig_cmd		5448028	1					
ANR	5449982	AssignmentExpression	orig_cmd = cmd		5448028	2		=			
ANR	5449983	Identifier	cmd		5448028	0					
ANR	5449984	Identifier	cmd		5448028	1					
ANR	5449985	IdentifierDeclStatement	bool orig_IgnoreMissingDaemon = IgnoreMissingDaemon ;	808:3:22172:22223	5448028	3	True				
ANR	5449986	IdentifierDecl	orig_IgnoreMissingDaemon = IgnoreMissingDaemon		5448028	0					
ANR	5449987	IdentifierDeclType	bool		5448028	0					
ANR	5449988	Identifier	orig_IgnoreMissingDaemon		5448028	1					
ANR	5449989	AssignmentExpression	orig_IgnoreMissingDaemon = IgnoreMissingDaemon		5448028	2		=			
ANR	5449990	Identifier	IgnoreMissingDaemon		5448028	0					
ANR	5449991	Identifier	IgnoreMissingDaemon		5448028	1					
ANR	5449992	ExpressionStatement	cmd = real_cmd = DC_SET_PEACEFUL_SHUTDOWN	810:3:22229:22270	5448028	4	True				
ANR	5449993	AssignmentExpression	cmd = real_cmd = DC_SET_PEACEFUL_SHUTDOWN		5448028	0		=			
ANR	5449994	Identifier	cmd		5448028	0					
ANR	5449995	AssignmentExpression	real_cmd = DC_SET_PEACEFUL_SHUTDOWN		5448028	1		=			
ANR	5449996	Identifier	real_cmd		5448028	0					
ANR	5449997	Identifier	DC_SET_PEACEFUL_SHUTDOWN		5448028	1					
ANR	5449998	ExpressionStatement	IgnoreMissingDaemon = true	816:3:22531:22557	5448028	5	True				
ANR	5449999	AssignmentExpression	IgnoreMissingDaemon = true		5448028	0		=			
ANR	5450000	Identifier	IgnoreMissingDaemon		5448028	0					
ANR	5450001	Identifier	true		5448028	1					
ANR	5450002	IfStatement	"if ( ! subsys || ! strcmp ( subsys , ""startd"" ) )"		5448028	6					
ANR	5450003	Condition	"! subsys || ! strcmp ( subsys , ""startd"" )"	818:7:22567:22601	5448028	0	True				
ANR	5450004	OrExpression	"! subsys || ! strcmp ( subsys , ""startd"" )"		5448028	0		||			
ANR	5450005	UnaryOperationExpression	! subsys		5448028	0					
ANR	5450006	UnaryOperator	!		5448028	0					
ANR	5450007	Identifier	subsys		5448028	1					
ANR	5450008	UnaryOperationExpression	"! strcmp ( subsys , ""startd"" )"		5448028	1					
ANR	5450009	UnaryOperator	!		5448028	0					
ANR	5450010	CallExpression	"strcmp ( subsys , ""startd"" )"		5448028	1					
ANR	5450011	Callee	strcmp		5448028	0					
ANR	5450012	Identifier	strcmp		5448028	0					
ANR	5450013	ArgumentList	subsys		5448028	1					
ANR	5450014	Argument	subsys		5448028	0					
ANR	5450015	Identifier	subsys		5448028	0					
ANR	5450016	Argument	"""startd"""		5448028	1					
ANR	5450017	PrimaryExpression	"""startd"""		5448028	0					
ANR	5450018	CompoundStatement		496:45:12957:12957	5448028	1					
ANR	5450019	ExpressionStatement	real_dt = DT_STARTD	819:4:22611:22630	5448028	0	True				
ANR	5450020	AssignmentExpression	real_dt = DT_STARTD		5448028	0		=			
ANR	5450021	Identifier	real_dt		5448028	0					
ANR	5450022	Identifier	DT_STARTD		5448028	1					
ANR	5450023	ExpressionStatement	"rc = doCommands ( argc , argv , MyName )"	820:4:22636:22669	5448028	1	True				
ANR	5450024	AssignmentExpression	"rc = doCommands ( argc , argv , MyName )"		5448028	0		=			
ANR	5450025	Identifier	rc		5448028	0					
ANR	5450026	CallExpression	"doCommands ( argc , argv , MyName )"		5448028	1					
ANR	5450027	Callee	doCommands		5448028	0					
ANR	5450028	Identifier	doCommands		5448028	0					
ANR	5450029	ArgumentList	argc		5448028	1					
ANR	5450030	Argument	argc		5448028	0					
ANR	5450031	Identifier	argc		5448028	0					
ANR	5450032	Argument	argv		5448028	1					
ANR	5450033	Identifier	argv		5448028	0					
ANR	5450034	Argument	MyName		5448028	2					
ANR	5450035	Identifier	MyName		5448028	0					
ANR	5450036	IfStatement	if ( rc )		5448028	2					
ANR	5450037	Condition	rc	821:7:22678:22679	5448028	0	True				
ANR	5450038	Identifier	rc		5448028	0					
ANR	5450039	ReturnStatement	return rc ;	821:11:22682:22691	5448028	1	True				
ANR	5450040	Identifier	rc		5448028	0					
ANR	5450041	IfStatement	"if ( ! subsys || ! strcmp ( subsys , ""schedd"" ) )"		5448028	7					
ANR	5450042	Condition	"! subsys || ! strcmp ( subsys , ""schedd"" )"	823:7:22705:22739	5448028	0	True				
ANR	5450043	OrExpression	"! subsys || ! strcmp ( subsys , ""schedd"" )"		5448028	0		||			
ANR	5450044	UnaryOperationExpression	! subsys		5448028	0					
ANR	5450045	UnaryOperator	!		5448028	0					
ANR	5450046	Identifier	subsys		5448028	1					
ANR	5450047	UnaryOperationExpression	"! strcmp ( subsys , ""schedd"" )"		5448028	1					
ANR	5450048	UnaryOperator	!		5448028	0					
ANR	5450049	CallExpression	"strcmp ( subsys , ""schedd"" )"		5448028	1					
ANR	5450050	Callee	strcmp		5448028	0					
ANR	5450051	Identifier	strcmp		5448028	0					
ANR	5450052	ArgumentList	subsys		5448028	1					
ANR	5450053	Argument	subsys		5448028	0					
ANR	5450054	Identifier	subsys		5448028	0					
ANR	5450055	Argument	"""schedd"""		5448028	1					
ANR	5450056	PrimaryExpression	"""schedd"""		5448028	0					
ANR	5450057	CompoundStatement		501:45:13095:13095	5448028	1					
ANR	5450058	ExpressionStatement	real_dt = DT_SCHEDD	824:4:22749:22768	5448028	0	True				
ANR	5450059	AssignmentExpression	real_dt = DT_SCHEDD		5448028	0		=			
ANR	5450060	Identifier	real_dt		5448028	0					
ANR	5450061	Identifier	DT_SCHEDD		5448028	1					
ANR	5450062	ExpressionStatement	"rc = doCommands ( argc , argv , MyName )"	825:4:22774:22807	5448028	1	True				
ANR	5450063	AssignmentExpression	"rc = doCommands ( argc , argv , MyName )"		5448028	0		=			
ANR	5450064	Identifier	rc		5448028	0					
ANR	5450065	CallExpression	"doCommands ( argc , argv , MyName )"		5448028	1					
ANR	5450066	Callee	doCommands		5448028	0					
ANR	5450067	Identifier	doCommands		5448028	0					
ANR	5450068	ArgumentList	argc		5448028	1					
ANR	5450069	Argument	argc		5448028	0					
ANR	5450070	Identifier	argc		5448028	0					
ANR	5450071	Argument	argv		5448028	1					
ANR	5450072	Identifier	argv		5448028	0					
ANR	5450073	Argument	MyName		5448028	2					
ANR	5450074	Identifier	MyName		5448028	0					
ANR	5450075	IfStatement	if ( rc )		5448028	2					
ANR	5450076	Condition	rc	826:7:22816:22817	5448028	0	True				
ANR	5450077	Identifier	rc		5448028	0					
ANR	5450078	ReturnStatement	return rc ;	826:11:22820:22829	5448028	1	True				
ANR	5450079	Identifier	rc		5448028	0					
ANR	5450080	ExpressionStatement	real_dt = orig_real_dt	830:3:22863:22885	5448028	8	True				
ANR	5450081	AssignmentExpression	real_dt = orig_real_dt		5448028	0		=			
ANR	5450082	Identifier	real_dt		5448028	0					
ANR	5450083	Identifier	orig_real_dt		5448028	1					
ANR	5450084	ExpressionStatement	real_cmd = orig_real_cmd	831:3:22890:22914	5448028	9	True				
ANR	5450085	AssignmentExpression	real_cmd = orig_real_cmd		5448028	0		=			
ANR	5450086	Identifier	real_cmd		5448028	0					
ANR	5450087	Identifier	orig_real_cmd		5448028	1					
ANR	5450088	ExpressionStatement	cmd = orig_cmd	832:3:22919:22933	5448028	10	True				
ANR	5450089	AssignmentExpression	cmd = orig_cmd		5448028	0		=			
ANR	5450090	Identifier	cmd		5448028	0					
ANR	5450091	Identifier	orig_cmd		5448028	1					
ANR	5450092	ExpressionStatement	IgnoreMissingDaemon = orig_IgnoreMissingDaemon	833:3:22938:22984	5448028	11	True				
ANR	5450093	AssignmentExpression	IgnoreMissingDaemon = orig_IgnoreMissingDaemon		5448028	0		=			
ANR	5450094	Identifier	IgnoreMissingDaemon		5448028	0					
ANR	5450095	Identifier	orig_IgnoreMissingDaemon		5448028	1					
ANR	5450096	ReturnStatement	"return doCommands ( argc , argv , MyName ) ;"	837:1:22995:23030	5448028	19	True				
ANR	5450097	CallExpression	"doCommands ( argc , argv , MyName )"		5448028	0					
ANR	5450098	Callee	doCommands		5448028	0					
ANR	5450099	Identifier	doCommands		5448028	0					
ANR	5450100	ArgumentList	argc		5448028	1					
ANR	5450101	Argument	argc		5448028	0					
ANR	5450102	Identifier	argc		5448028	0					
ANR	5450103	Argument	argv		5448028	1					
ANR	5450104	Identifier	argv		5448028	0					
ANR	5450105	Argument	MyName		5448028	2					
ANR	5450106	Identifier	MyName		5448028	0					
ANR	5450107	ReturnType	int		5448028	1					
ANR	5450108	Identifier	main		5448028	2					
ANR	5450109	ParameterList	"int argc , char * argv [ ]"		5448028	3					
ANR	5450110	Parameter	int argc	322:6:9622:9629	5448028	0	True				
ANR	5450111	ParameterType	int		5448028	0					
ANR	5450112	Identifier	argc		5448028	1					
ANR	5450113	Parameter	char * argv [ ]	322:16:9632:9643	5448028	1	True				
ANR	5450114	ParameterType	char * [ ]		5448028	0					
ANR	5450115	Identifier	argv		5448028	1					
ANR	5450116	CFGEntryNode	ENTRY		5448028		True				
ANR	5450117	CFGExitNode	EXIT		5448028		True				
ANR	5450118	Symbol	SQUAWK		5448028						
ANR	5450119	Symbol	DT_GENERIC		5448028						
ANR	5450120	Symbol	IgnoreMissingDaemon		5448028						
ANR	5450121	Symbol	strchr		5448028						
ANR	5450122	Symbol	* argv		5448028						
ANR	5450123	Symbol	p_funcs		5448028						
ANR	5450124	Symbol	DAEMON_OFF		5448028						
ANR	5450125	Symbol	PCKPT_JOB		5448028						
ANR	5450126	Symbol	pool -> addr		5448028						
ANR	5450127	Symbol	exec_program		5448028						
ANR	5450128	Symbol	dt		5448028						
ANR	5450129	Symbol	strlen		5448028						
ANR	5450130	Symbol	orig_cmd		5448028						
ANR	5450131	Symbol	tmp		5448028						
ANR	5450132	Symbol	myDistro		5448028						
ANR	5450133	Symbol	* * argv		5448028						
ANR	5450134	Symbol	cmd_str		5448028						
ANR	5450135	Symbol	SIGPIPE		5448028						
ANR	5450136	Symbol	pool -> error		5448028						
ANR	5450137	Symbol	strcmp		5448028						
ANR	5450138	Symbol	all		5448028						
ANR	5450139	Symbol	NULL		5448028						
ANR	5450140	Symbol	get_param_functions		5448028						
ANR	5450141	Symbol	pool		5448028						
ANR	5450142	Symbol	SIG_IGN		5448028						
ANR	5450143	Symbol	DT_COLLECTOR		5448028						
ANR	5450144	Symbol	DAEMONS_OFF		5448028						
ANR	5450145	Symbol	stderr		5448028						
ANR	5450146	Symbol	takes_subsys		5448028						
ANR	5450147	Symbol	orig_real_dt		5448028						
ANR	5450148	Symbol	VACATE_CLAIM		5448028						
ANR	5450149	Symbol	stringToDaemonType		5448028						
ANR	5450150	Symbol	rc		5448028						
ANR	5450151	Symbol	DT_STARTD		5448028						
ANR	5450152	Symbol	SET_SHUTDOWN_PROGRAM		5448028						
ANR	5450153	Symbol	size		5448028						
ANR	5450154	Symbol	true		5448028						
ANR	5450155	Symbol	real_dt		5448028						
ANR	5450156	Symbol	DT_NEGOTIATOR		5448028						
ANR	5450157	Symbol	DT_KBDD		5448028						
ANR	5450158	Symbol	cmd		5448028						
ANR	5450159	Symbol	orig_real_cmd		5448028						
ANR	5450160	Symbol	* tmp		5448028						
ANR	5450161	Symbol	DC_OFF_GRACEFUL		5448028						
ANR	5450162	Symbol	MyName		5448028						
ANR	5450163	Symbol	daemonString		5448028						
ANR	5450164	Symbol	strncmp_auto		5448028						
ANR	5450165	Symbol	DT_ANY		5448028						
ANR	5450166	Symbol	peaceful_shutdown		5448028						
ANR	5450167	Symbol	DC_SET_PEACEFUL_SHUTDOWN		5448028						
ANR	5450168	Symbol	argv		5448028						
ANR	5450169	Symbol	RESCHEDULE		5448028						
ANR	5450170	Symbol	orig_IgnoreMissingDaemon		5448028						
ANR	5450171	Symbol	DT_MASTER		5448028						
ANR	5450172	Symbol	subsys		5448028						
ANR	5450173	Symbol	RESTART		5448028						
ANR	5450174	Symbol	DT_NONE		5448028						
ANR	5450175	Symbol	real_cmd		5448028						
ANR	5450176	Symbol	DAEMONS_ON		5448028						
ANR	5450177	Symbol	argc		5448028						
ANR	5450178	Symbol	atoi		5448028						
ANR	5450179	Symbol	malloc		5448028						
ANR	5450180	Symbol	DT_QUILL		5448028						
ANR	5450181	Symbol	Termlog		5448028						
ANR	5450182	Symbol	DIR_DELIM_CHAR		5448028						
ANR	5450183	Symbol	DT_SCHEDD		5448028						
ANR	5450184	Symbol	false		5448028						
ANR	5450185	Symbol	cmd_set		5448028						
ANR	5450186	Symbol	* * tmp		5448028						
ANR	5450187	Symbol	* pool		5448028						
ANR	5450188	Symbol	fast		5448028						
ANR	5450189	Symbol	strrchr		5448028						
ANR	5450190	Symbol	DC_RECONFIG_FULL		5448028						
ANR	5450191	Symbol	constraint		5448028						
ANR	5450192	Symbol	subsys_arg		5448028						
ANR	5450193	Symbol	doCommands		5448028						
ANR	5450194	DeclStmt									
ANR	5450195	Decl							StringList	StringList	names
ANR	5450196	DeclStmt									
ANR	5450197	Decl							StringList	StringList	addrs
ANR	5450198	DeclStmt									
ANR	5450199	Decl							DaemonList	DaemonList	daemons
ANR	5450200	DeclStmt									
ANR	5450201	Decl							char	char *	daemonname
ANR	5450202	DeclStmt									
ANR	5450203	Decl							bool	bool	found_one
ANR	5450204	DeclStmt									
ANR	5450205	Decl							Daemon	"Daemon ( real_dt , NULL )"	local_d
ANR	5450206	DeclStmt									
ANR	5450207	Decl							Daemon	Daemon *	d
ANR	5450208	DeclStmt									
ANR	5450209	Decl							char	char *	addr
ANR	5450210	Function	computeRealAction	1009:0:27845:29722							
ANR	5450211	FunctionDef	computeRealAction ()		5450210	0					
ANR	5450212	CompoundStatement		1011:0:27876:29722	5450210	0					
ANR	5450213	ExpressionStatement	real_cmd = - 1	1012:1:27879:27892	5450210	0	True				
ANR	5450214	AssignmentExpression	real_cmd = - 1		5450210	0		=			
ANR	5450215	Identifier	real_cmd		5450210	0					
ANR	5450216	UnaryOperationExpression	- 1		5450210	1					
ANR	5450217	UnaryOperator	-		5450210	0					
ANR	5450218	PrimaryExpression	1		5450210	1					
ANR	5450219	SwitchStatement	switch ( cmd )		5450210	1					
ANR	5450220	Condition	cmd	1013:9:27903:27905	5450210	0	True				
ANR	5450221	Identifier	cmd		5450210	0					
ANR	5450222	CompoundStatement		3:15:32:32	5450210	1					
ANR	5450223	Label	case DC_RECONFIG_FULL :	1015:1:27913:27934	5450210	0	True				
ANR	5450224	Identifier	DC_RECONFIG_FULL		5450210	0					
ANR	5450225	BreakStatement	break ;	1017:2:27953:27958	5450210	1	True				
ANR	5450226	Label	case RESTART :	1019:1:27962:27974	5450210	2	True				
ANR	5450227	Identifier	RESTART		5450210	0					
ANR	5450228	IfStatement	if ( subsys && dt != DT_MASTER )		5450210	3					
ANR	5450229	Condition	subsys && dt != DT_MASTER	1020:6:27982:28006	5450210	0	True				
ANR	5450230	AndExpression	subsys && dt != DT_MASTER		5450210	0		&&			
ANR	5450231	Identifier	subsys		5450210	0					
ANR	5450232	EqualityExpression	dt != DT_MASTER		5450210	1		!=			
ANR	5450233	Identifier	dt		5450210	0					
ANR	5450234	Identifier	DT_MASTER		5450210	1					
ANR	5450235	CompoundStatement		10:34:133:133	5450210	1					
ANR	5450236	ExpressionStatement	real_cmd = DC_OFF_GRACEFUL	1027:3:28358:28384	5450210	0	True				
ANR	5450237	AssignmentExpression	real_cmd = DC_OFF_GRACEFUL		5450210	0		=			
ANR	5450238	Identifier	real_cmd		5450210	0					
ANR	5450239	Identifier	DC_OFF_GRACEFUL		5450210	1					
ANR	5450240	BreakStatement	break ;	1029:2:28392:28397	5450210	4	True				
ANR	5450241	Label	case DAEMONS_OFF :	1031:1:28401:28417	5450210	5	True				
ANR	5450242	Identifier	DAEMONS_OFF		5450210	0					
ANR	5450243	IfStatement	if ( subsys )		5450210	6					
ANR	5450244	Condition	subsys	1032:6:28425:28430	5450210	0	True				
ANR	5450245	Identifier	subsys		5450210	0					
ANR	5450246	CompoundStatement		22:15:557:557	5450210	1					
ANR	5450247	IfStatement	if ( dt == DT_MASTER )		5450210	0					
ANR	5450248	Condition	dt == DT_MASTER	1037:7:28651:28665	5450210	0	True				
ANR	5450249	EqualityExpression	dt == DT_MASTER		5450210	0		==			
ANR	5450250	Identifier	dt		5450210	0					
ANR	5450251	Identifier	DT_MASTER		5450210	1					
ANR	5450252	CompoundStatement		27:25:792:792	5450210	1					
ANR	5450253	ExpressionStatement	real_cmd = DC_OFF_GRACEFUL	1038:4:28675:28701	5450210	0	True				
ANR	5450254	AssignmentExpression	real_cmd = DC_OFF_GRACEFUL		5450210	0		=			
ANR	5450255	Identifier	real_cmd		5450210	0					
ANR	5450256	Identifier	DC_OFF_GRACEFUL		5450210	1					
ANR	5450257	ElseStatement	else		5450210	0					
ANR	5450258	CompoundStatement		29:10:836:836	5450210	0					
ANR	5450259	ExpressionStatement	real_cmd = DAEMON_OFF	1040:4:28719:28740	5450210	0	True				
ANR	5450260	AssignmentExpression	real_cmd = DAEMON_OFF		5450210	0		=			
ANR	5450261	Identifier	real_cmd		5450210	0					
ANR	5450262	Identifier	DAEMON_OFF		5450210	1					
ANR	5450263	ExpressionStatement	real_dt = DT_MASTER	1042:3:28750:28769	5450210	1	True				
ANR	5450264	AssignmentExpression	real_dt = DT_MASTER		5450210	0		=			
ANR	5450265	Identifier	real_dt		5450210	0					
ANR	5450266	Identifier	DT_MASTER		5450210	1					
ANR	5450267	BreakStatement	break ;	1044:2:28777:28782	5450210	7	True				
ANR	5450268	Label	case DAEMONS_ON :	1046:1:28786:28801	5450210	8	True				
ANR	5450269	Identifier	DAEMONS_ON		5450210	0					
ANR	5450270	ExpressionStatement	real_dt = DT_MASTER	1049:2:28888:28907	5450210	9	True				
ANR	5450271	AssignmentExpression	real_dt = DT_MASTER		5450210	0		=			
ANR	5450272	Identifier	real_dt		5450210	0					
ANR	5450273	Identifier	DT_MASTER		5450210	1					
ANR	5450274	IfStatement	if ( subsys && dt != DT_MASTER )		5450210	10					
ANR	5450275	Condition	subsys && dt != DT_MASTER	1050:6:28915:28939	5450210	0	True				
ANR	5450276	AndExpression	subsys && dt != DT_MASTER		5450210	0		&&			
ANR	5450277	Identifier	subsys		5450210	0					
ANR	5450278	EqualityExpression	dt != DT_MASTER		5450210	1		!=			
ANR	5450279	Identifier	dt		5450210	0					
ANR	5450280	Identifier	DT_MASTER		5450210	1					
ANR	5450281	CompoundStatement		40:34:1066:1066	5450210	1					
ANR	5450282	ExpressionStatement	real_cmd = DAEMON_ON	1054:3:29086:29106	5450210	0	True				
ANR	5450283	AssignmentExpression	real_cmd = DAEMON_ON		5450210	0		=			
ANR	5450284	Identifier	real_cmd		5450210	0					
ANR	5450285	Identifier	DAEMON_ON		5450210	1					
ANR	5450286	BreakStatement	break ;	1056:2:29114:29119	5450210	11	True				
ANR	5450287	Label	case RESCHEDULE :	1058:1:29123:29138	5450210	12	True				
ANR	5450288	Identifier	RESCHEDULE		5450210	0					
ANR	5450289	ExpressionStatement	dt = real_dt = DT_SCHEDD	1059:2:29142:29166	5450210	13	True				
ANR	5450290	AssignmentExpression	dt = real_dt = DT_SCHEDD		5450210	0		=			
ANR	5450291	Identifier	dt		5450210	0					
ANR	5450292	AssignmentExpression	real_dt = DT_SCHEDD		5450210	1		=			
ANR	5450293	Identifier	real_dt		5450210	0					
ANR	5450294	Identifier	DT_SCHEDD		5450210	1					
ANR	5450295	BreakStatement	break ;	1060:2:29170:29175	5450210	14	True				
ANR	5450296	Label	case VACATE_CLAIM :	1062:1:29179:29196	5450210	15	True				
ANR	5450297	Identifier	VACATE_CLAIM		5450210	0					
ANR	5450298	Label	case PCKPT_JOB :	1063:1:29199:29213	5450210	16	True				
ANR	5450299	Identifier	PCKPT_JOB		5450210	0					
ANR	5450300	ExpressionStatement	dt = real_dt = DT_STARTD	1064:2:29217:29241	5450210	17	True				
ANR	5450301	AssignmentExpression	dt = real_dt = DT_STARTD		5450210	0		=			
ANR	5450302	Identifier	dt		5450210	0					
ANR	5450303	AssignmentExpression	real_dt = DT_STARTD		5450210	1		=			
ANR	5450304	Identifier	real_dt		5450210	0					
ANR	5450305	Identifier	DT_STARTD		5450210	1					
ANR	5450306	BreakStatement	break ;	1065:2:29245:29250	5450210	18	True				
ANR	5450307	Label	case SET_SHUTDOWN_PROGRAM :	1067:1:29254:29279	5450210	19	True				
ANR	5450308	Identifier	SET_SHUTDOWN_PROGRAM		5450210	0					
ANR	5450309	ExpressionStatement	real_dt = DT_MASTER	1068:2:29283:29302	5450210	20	True				
ANR	5450310	AssignmentExpression	real_dt = DT_MASTER		5450210	0		=			
ANR	5450311	Identifier	real_dt		5450210	0					
ANR	5450312	Identifier	DT_MASTER		5450210	1					
ANR	5450313	BreakStatement	break ;	1069:2:29306:29311	5450210	21	True				
ANR	5450314	Label	case SQUAWK :	1071:1:29315:29326	5450210	22	True				
ANR	5450315	Identifier	SQUAWK		5450210	0					
ANR	5450316	BreakStatement	break ;	1072:2:29330:29335	5450210	23	True				
ANR	5450317	IfStatement	if ( real_cmd < 0 )		5450210	2					
ANR	5450318	Condition	real_cmd < 0	1075:5:29346:29357	5450210	0	True				
ANR	5450319	RelationalExpression	real_cmd < 0		5450210	0		<			
ANR	5450320	Identifier	real_cmd		5450210	0					
ANR	5450321	PrimaryExpression	0		5450210	1					
ANR	5450322	CompoundStatement		65:20:1484:1484	5450210	1					
ANR	5450323	ExpressionStatement	real_cmd = cmd	1078:2:29461:29475	5450210	0	True				
ANR	5450324	AssignmentExpression	real_cmd = cmd		5450210	0		=			
ANR	5450325	Identifier	real_cmd		5450210	0					
ANR	5450326	Identifier	cmd		5450210	1					
ANR	5450327	IfStatement	if ( real_dt == DT_NONE )		5450210	3					
ANR	5450328	Condition	real_dt == DT_NONE	1084:5:29627:29644	5450210	0	True				
ANR	5450329	EqualityExpression	real_dt == DT_NONE		5450210	0		==			
ANR	5450330	Identifier	real_dt		5450210	0					
ANR	5450331	Identifier	DT_NONE		5450210	1					
ANR	5450332	CompoundStatement		74:26:1771:1771	5450210	1					
ANR	5450333	IfStatement	if ( dt )		5450210	0					
ANR	5450334	Condition	dt	1085:6:29656:29657	5450210	0	True				
ANR	5450335	Identifier	dt		5450210	0					
ANR	5450336	CompoundStatement		75:11:1784:1784	5450210	1					
ANR	5450337	ExpressionStatement	real_dt = dt	1086:3:29666:29678	5450210	0	True				
ANR	5450338	AssignmentExpression	real_dt = dt		5450210	0		=			
ANR	5450339	Identifier	real_dt		5450210	0					
ANR	5450340	Identifier	dt		5450210	1					
ANR	5450341	ElseStatement	else		5450210	0					
ANR	5450342	CompoundStatement		77:9:1812:1812	5450210	0					
ANR	5450343	ExpressionStatement	real_dt = DT_MASTER	1088:3:29694:29713	5450210	0	True				
ANR	5450344	AssignmentExpression	real_dt = DT_MASTER		5450210	0		=			
ANR	5450345	Identifier	real_dt		5450210	0					
ANR	5450346	Identifier	DT_MASTER		5450210	1					
ANR	5450347	ReturnType	void		5450210	1					
ANR	5450348	Identifier	computeRealAction		5450210	2					
ANR	5450349	ParameterList			5450210	3					
ANR	5450350	CFGEntryNode	ENTRY		5450210		True				
ANR	5450351	CFGExitNode	EXIT		5450210		True				
ANR	5450352	Symbol	dt		5450210						
ANR	5450353	Symbol	subsys		5450210						
ANR	5450354	Symbol	DT_MASTER		5450210						
ANR	5450355	Symbol	DAEMON_ON		5450210						
ANR	5450356	Symbol	DT_STARTD		5450210						
ANR	5450357	Symbol	DC_OFF_GRACEFUL		5450210						
ANR	5450358	Symbol	real_dt		5450210						
ANR	5450359	Symbol	DT_SCHEDD		5450210						
ANR	5450360	Symbol	real_cmd		5450210						
ANR	5450361	Symbol	DT_NONE		5450210						
ANR	5450362	Symbol	cmd		5450210						
ANR	5450363	Symbol	DAEMON_OFF		5450210						
ANR	5450364	Function	resolveNames	1094:0:29726:35917							
ANR	5450365	FunctionDef	"resolveNames (DaemonList * daemon_list , StringList * name_list)"		5450364	0					
ANR	5450366	CompoundStatement		1096:0:29794:35917	5450364	0					
ANR	5450367	IdentifierDeclStatement	Daemon * d = NULL ;	1097:1:29797:29813	5450364	0	True				
ANR	5450368	IdentifierDecl	* d = NULL		5450364	0					
ANR	5450369	IdentifierDeclType	Daemon *		5450364	0					
ANR	5450370	Identifier	d		5450364	1					
ANR	5450371	AssignmentExpression	* d = NULL		5450364	2		=			
ANR	5450372	Identifier	NULL		5450364	0					
ANR	5450373	Identifier	NULL		5450364	1					
ANR	5450374	IdentifierDeclStatement	char * name = NULL ;	1098:1:29816:29833	5450364	1	True				
ANR	5450375	IdentifierDecl	* name = NULL		5450364	0					
ANR	5450376	IdentifierDeclType	char *		5450364	0					
ANR	5450377	Identifier	name		5450364	1					
ANR	5450378	AssignmentExpression	* name = NULL		5450364	2		=			
ANR	5450379	Identifier	NULL		5450364	0					
ANR	5450380	Identifier	NULL		5450364	1					
ANR	5450381	IdentifierDeclStatement	char * tmp = NULL ;	1099:1:29836:29852	5450364	2	True				
ANR	5450382	IdentifierDecl	* tmp = NULL		5450364	0					
ANR	5450383	IdentifierDeclType	char *		5450364	0					
ANR	5450384	Identifier	tmp		5450364	1					
ANR	5450385	AssignmentExpression	* tmp = NULL		5450364	2		=			
ANR	5450386	Identifier	NULL		5450364	0					
ANR	5450387	Identifier	NULL		5450364	1					
ANR	5450388	IdentifierDeclStatement	const char * host = NULL ;	1100:1:29855:29878	5450364	3	True				
ANR	5450389	IdentifierDecl	* host = NULL		5450364	0					
ANR	5450390	IdentifierDeclType	const char *		5450364	0					
ANR	5450391	Identifier	host		5450364	1					
ANR	5450392	AssignmentExpression	* host = NULL		5450364	2		=			
ANR	5450393	Identifier	NULL		5450364	0					
ANR	5450394	Identifier	NULL		5450364	1					
ANR	5450395	IdentifierDeclStatement	bool had_error = false ;	1101:1:29881:29903	5450364	4	True				
ANR	5450396	IdentifierDecl	had_error = false		5450364	0					
ANR	5450397	IdentifierDeclType	bool		5450364	0					
ANR	5450398	Identifier	had_error		5450364	1					
ANR	5450399	AssignmentExpression	had_error = false		5450364	2		=			
ANR	5450400	Identifier	false		5450364	0					
ANR	5450401	Identifier	false		5450364	1					
ANR	5450402	IfStatement	if ( ! daemon_list )		5450364	5					
ANR	5450403	Condition	! daemon_list	1103:5:29911:29923	5450364	0	True				
ANR	5450404	UnaryOperationExpression	! daemon_list		5450364	0					
ANR	5450405	UnaryOperator	!		5450364	0					
ANR	5450406	Identifier	daemon_list		5450364	1					
ANR	5450407	CompoundStatement		8:21:132:132	5450364	1					
ANR	5450408	ExpressionStatement	"EXCEPT ( ""resolveNames() called with NULL daemon_list"" )"	1104:2:29931:29986	5450364	0	True				
ANR	5450409	CallExpression	"EXCEPT ( ""resolveNames() called with NULL daemon_list"" )"		5450364	0					
ANR	5450410	Callee	EXCEPT		5450364	0					
ANR	5450411	Identifier	EXCEPT		5450364	0					
ANR	5450412	ArgumentList	"""resolveNames() called with NULL daemon_list"""		5450364	1					
ANR	5450413	Argument	"""resolveNames() called with NULL daemon_list"""		5450364	0					
ANR	5450414	PrimaryExpression	"""resolveNames() called with NULL daemon_list"""		5450364	0					
ANR	5450415	IfStatement	if ( name_list && name_list -> isEmpty ( ) )		5450364	6					
ANR	5450416	Condition	name_list && name_list -> isEmpty ( )	1109:5:30159:30191	5450364	0	True				
ANR	5450417	AndExpression	name_list && name_list -> isEmpty ( )		5450364	0		&&			
ANR	5450418	Identifier	name_list		5450364	0					
ANR	5450419	CallExpression	name_list -> isEmpty ( )		5450364	1					
ANR	5450420	Callee	name_list -> isEmpty		5450364	0					
ANR	5450421	PtrMemberAccess	name_list -> isEmpty		5450364	0					
ANR	5450422	Identifier	name_list		5450364	0					
ANR	5450423	Identifier	isEmpty		5450364	1					
ANR	5450424	ArgumentList			5450364	1					
ANR	5450425	CompoundStatement		14:41:400:400	5450364	1					
ANR	5450426	ReturnStatement	return true ;	1110:2:30199:30210	5450364	0	True				
ANR	5450427	Identifier	true		5450364	0					
ANR	5450428	IdentifierDeclStatement	AdTypes adtype = MASTER_AD ;	1113:1:30217:30243	5450364	7	True				
ANR	5450429	IdentifierDecl	adtype = MASTER_AD		5450364	0					
ANR	5450430	IdentifierDeclType	AdTypes		5450364	0					
ANR	5450431	Identifier	adtype		5450364	1					
ANR	5450432	AssignmentExpression	adtype = MASTER_AD		5450364	2		=			
ANR	5450433	Identifier	MASTER_AD		5450364	0					
ANR	5450434	Identifier	MASTER_AD		5450364	1					
ANR	5450435	SwitchStatement	switch ( real_dt )		5450364	8					
ANR	5450436	Condition	real_dt	1114:9:30254:30260	5450364	0	True				
ANR	5450437	Identifier	real_dt		5450364	0					
ANR	5450438	CompoundStatement		19:19:469:469	5450364	1					
ANR	5450439	Label	case DT_MASTER :	1115:1:30267:30281	5450364	0	True				
ANR	5450440	Identifier	DT_MASTER		5450364	0					
ANR	5450441	ExpressionStatement	adtype = MASTER_AD	1116:2:30285:30303	5450364	1	True				
ANR	5450442	AssignmentExpression	adtype = MASTER_AD		5450364	0		=			
ANR	5450443	Identifier	adtype		5450364	0					
ANR	5450444	Identifier	MASTER_AD		5450364	1					
ANR	5450445	BreakStatement	break ;	1117:2:30307:30312	5450364	2	True				
ANR	5450446	Label	case DT_STARTD :	1118:1:30315:30329	5450364	3	True				
ANR	5450447	Identifier	DT_STARTD		5450364	0					
ANR	5450448	ExpressionStatement	adtype = STARTD_AD	1119:2:30333:30351	5450364	4	True				
ANR	5450449	AssignmentExpression	adtype = STARTD_AD		5450364	0		=			
ANR	5450450	Identifier	adtype		5450364	0					
ANR	5450451	Identifier	STARTD_AD		5450364	1					
ANR	5450452	BreakStatement	break ;	1120:2:30355:30360	5450364	5	True				
ANR	5450453	Label	case DT_SCHEDD :	1121:1:30363:30377	5450364	6	True				
ANR	5450454	Identifier	DT_SCHEDD		5450364	0					
ANR	5450455	ExpressionStatement	adtype = SCHEDD_AD	1122:2:30381:30399	5450364	7	True				
ANR	5450456	AssignmentExpression	adtype = SCHEDD_AD		5450364	0		=			
ANR	5450457	Identifier	adtype		5450364	0					
ANR	5450458	Identifier	SCHEDD_AD		5450364	1					
ANR	5450459	BreakStatement	break ;	1123:2:30403:30408	5450364	8	True				
ANR	5450460	Label	case DT_CLUSTER :	1124:1:30411:30426	5450364	9	True				
ANR	5450461	Identifier	DT_CLUSTER		5450364	0					
ANR	5450462	ExpressionStatement	adtype = CLUSTER_AD	1125:2:30430:30449	5450364	10	True				
ANR	5450463	AssignmentExpression	adtype = CLUSTER_AD		5450364	0		=			
ANR	5450464	Identifier	adtype		5450364	0					
ANR	5450465	Identifier	CLUSTER_AD		5450364	1					
ANR	5450466	BreakStatement	break ;	1126:2:30453:30458	5450364	11	True				
ANR	5450467	Label	case DT_COLLECTOR :	1127:1:30461:30478	5450364	12	True				
ANR	5450468	Identifier	DT_COLLECTOR		5450364	0					
ANR	5450469	ExpressionStatement	adtype = COLLECTOR_AD	1128:2:30482:30503	5450364	13	True				
ANR	5450470	AssignmentExpression	adtype = COLLECTOR_AD		5450364	0		=			
ANR	5450471	Identifier	adtype		5450364	0					
ANR	5450472	Identifier	COLLECTOR_AD		5450364	1					
ANR	5450473	BreakStatement	break ;	1129:2:30507:30512	5450364	14	True				
ANR	5450474	Label	case DT_NEGOTIATOR :	1130:1:30515:30533	5450364	15	True				
ANR	5450475	Identifier	DT_NEGOTIATOR		5450364	0					
ANR	5450476	ExpressionStatement	adtype = NEGOTIATOR_AD	1131:2:30537:30559	5450364	16	True				
ANR	5450477	AssignmentExpression	adtype = NEGOTIATOR_AD		5450364	0		=			
ANR	5450478	Identifier	adtype		5450364	0					
ANR	5450479	Identifier	NEGOTIATOR_AD		5450364	1					
ANR	5450480	BreakStatement	break ;	1132:2:30563:30568	5450364	17	True				
ANR	5450481	Label	case DT_CREDD :	1133:1:30571:30584	5450364	18	True				
ANR	5450482	Identifier	DT_CREDD		5450364	0					
ANR	5450483	ExpressionStatement	adtype = CREDD_AD	1134:2:30588:30605	5450364	19	True				
ANR	5450484	AssignmentExpression	adtype = CREDD_AD		5450364	0		=			
ANR	5450485	Identifier	adtype		5450364	0					
ANR	5450486	Identifier	CREDD_AD		5450364	1					
ANR	5450487	BreakStatement	break ;	1135:2:30609:30614	5450364	20	True				
ANR	5450488	Label	case DT_QUILL :	1136:1:30617:30630	5450364	21	True				
ANR	5450489	Identifier	DT_QUILL		5450364	0					
ANR	5450490	ExpressionStatement	adtype = QUILL_AD	1137:2:30634:30651	5450364	22	True				
ANR	5450491	AssignmentExpression	adtype = QUILL_AD		5450364	0		=			
ANR	5450492	Identifier	adtype		5450364	0					
ANR	5450493	Identifier	QUILL_AD		5450364	1					
ANR	5450494	BreakStatement	break ;	1138:2:30655:30660	5450364	23	True				
ANR	5450495	Label	case DT_LEASE_MANAGER :	1139:1:30663:30684	5450364	24	True				
ANR	5450496	Identifier	DT_LEASE_MANAGER		5450364	0					
ANR	5450497	ExpressionStatement	adtype = LEASE_MANAGER_AD	1140:2:30688:30713	5450364	25	True				
ANR	5450498	AssignmentExpression	adtype = LEASE_MANAGER_AD		5450364	0		=			
ANR	5450499	Identifier	adtype		5450364	0					
ANR	5450500	Identifier	LEASE_MANAGER_AD		5450364	1					
ANR	5450501	BreakStatement	break ;	1141:2:30717:30722	5450364	26	True				
ANR	5450502	Label	case DT_GENERIC :	1142:1:30725:30740	5450364	27	True				
ANR	5450503	Identifier	DT_GENERIC		5450364	0					
ANR	5450504	ExpressionStatement	adtype = GENERIC_AD	1143:2:30744:30763	5450364	28	True				
ANR	5450505	AssignmentExpression	adtype = GENERIC_AD		5450364	0		=			
ANR	5450506	Identifier	adtype		5450364	0					
ANR	5450507	Identifier	GENERIC_AD		5450364	1					
ANR	5450508	BreakStatement	break ;	1144:2:30767:30772	5450364	29	True				
ANR	5450509	Label	case DT_HAD :	1145:1:30775:30786	5450364	30	True				
ANR	5450510	Identifier	DT_HAD		5450364	0					
ANR	5450511	ExpressionStatement	adtype = HAD_AD	1146:2:30790:30805	5450364	31	True				
ANR	5450512	AssignmentExpression	adtype = HAD_AD		5450364	0		=			
ANR	5450513	Identifier	adtype		5450364	0					
ANR	5450514	Identifier	HAD_AD		5450364	1					
ANR	5450515	BreakStatement	break ;	1147:2:30809:30814	5450364	32	True				
ANR	5450516	Label	default :	1148:1:30817:30824	5450364	33	True				
ANR	5450517	Identifier	default		5450364	0					
ANR	5450518	ExpressionStatement	"fprintf ( stderr , ""Unrecognized daemon type while resolving names\\n"" )"	1150:2:30868:30937	5450364	34	True				
ANR	5450519	CallExpression	"fprintf ( stderr , ""Unrecognized daemon type while resolving names\\n"" )"		5450364	0					
ANR	5450520	Callee	fprintf		5450364	0					
ANR	5450521	Identifier	fprintf		5450364	0					
ANR	5450522	ArgumentList	stderr		5450364	1					
ANR	5450523	Argument	stderr		5450364	0					
ANR	5450524	Identifier	stderr		5450364	0					
ANR	5450525	Argument	"""Unrecognized daemon type while resolving names\\n"""		5450364	1					
ANR	5450526	PrimaryExpression	"""Unrecognized daemon type while resolving names\\n"""		5450364	0					
ANR	5450527	ExpressionStatement	usage ( NULL )	1151:2:30941:30954	5450364	35	True				
ANR	5450528	CallExpression	usage ( NULL )		5450364	0					
ANR	5450529	Callee	usage		5450364	0					
ANR	5450530	Identifier	usage		5450364	0					
ANR	5450531	ArgumentList	NULL		5450364	1					
ANR	5450532	Argument	NULL		5450364	0					
ANR	5450533	Identifier	NULL		5450364	0					
ANR	5450534	IdentifierDeclStatement	char * pool_addr = pool ? pool -> addr ( ) : NULL ;	1154:1:30961:31005	5450364	9	True				
ANR	5450535	IdentifierDecl	* pool_addr = pool ? pool -> addr ( ) : NULL		5450364	0					
ANR	5450536	IdentifierDeclType	char *		5450364	0					
ANR	5450537	Identifier	pool_addr		5450364	1					
ANR	5450538	AssignmentExpression	* pool_addr = pool ? pool -> addr ( ) : NULL		5450364	2		=			
ANR	5450539	Identifier	pool_addr		5450364	0					
ANR	5450540	ConditionalExpression	pool ? pool -> addr ( ) : NULL		5450364	1					
ANR	5450541	Condition	pool		5450364	0					
ANR	5450542	Identifier	pool		5450364	0					
ANR	5450543	CallExpression	pool -> addr ( )		5450364	1					
ANR	5450544	Callee	pool -> addr		5450364	0					
ANR	5450545	PtrMemberAccess	pool -> addr		5450364	0					
ANR	5450546	Identifier	pool		5450364	0					
ANR	5450547	Identifier	addr		5450364	1					
ANR	5450548	ArgumentList			5450364	1					
ANR	5450549	Identifier	NULL		5450364	2					
ANR	5450550	IdentifierDeclStatement	CondorQuery query ( adtype ) ;	1155:1:31008:31033	5450364	10	True				
ANR	5450551	IdentifierDecl	query ( adtype )		5450364	0					
ANR	5450552	IdentifierDeclType	CondorQuery		5450364	0					
ANR	5450553	Identifier	query		5450364	1					
ANR	5450554	Identifier	adtype		5450364	2					
ANR	5450555	IdentifierDeclStatement	ClassAd * ad ;	1156:1:31036:31047	5450364	11	True				
ANR	5450556	IdentifierDecl	* ad		5450364	0					
ANR	5450557	IdentifierDeclType	ClassAd *		5450364	0					
ANR	5450558	Identifier	ad		5450364	1					
ANR	5450559	IdentifierDeclStatement	ClassAdList ads ;	1157:1:31050:31065	5450364	12	True				
ANR	5450560	IdentifierDecl	ads		5450364	0					
ANR	5450561	IdentifierDeclType	ClassAdList		5450364	0					
ANR	5450562	Identifier	ads		5450364	1					
ANR	5450563	IdentifierDeclStatement	CondorError errstack ;	1159:1:31069:31089	5450364	13	True				
ANR	5450564	IdentifierDecl	errstack		5450364	0					
ANR	5450565	IdentifierDeclType	CondorError		5450364	0					
ANR	5450566	Identifier	errstack		5450364	1					
ANR	5450567	IdentifierDeclStatement	QueryResult q_result ;	1160:1:31092:31112	5450364	14	True				
ANR	5450568	IdentifierDecl	q_result		5450364	0					
ANR	5450569	IdentifierDeclType	QueryResult		5450364	0					
ANR	5450570	Identifier	q_result		5450364	1					
ANR	5450571	IdentifierDeclStatement	MyString buffer ;	1161:1:31115:31130	5450364	15	True				
ANR	5450572	IdentifierDecl	buffer		5450364	0					
ANR	5450573	IdentifierDeclType	MyString		5450364	0					
ANR	5450574	Identifier	buffer		5450364	1					
ANR	5450575	IfStatement	if ( adtype == GENERIC_AD )		5450364	16					
ANR	5450576	Condition	adtype == GENERIC_AD	1163:5:31138:31157	5450364	0	True				
ANR	5450577	EqualityExpression	adtype == GENERIC_AD		5450364	0		==			
ANR	5450578	Identifier	adtype		5450364	0					
ANR	5450579	Identifier	GENERIC_AD		5450364	1					
ANR	5450580	CompoundStatement		68:27:1365:1365	5450364	1					
ANR	5450581	ExpressionStatement	query . setGenericQueryType ( subsys )	1164:2:31164:31197	5450364	0	True				
ANR	5450582	CallExpression	query . setGenericQueryType ( subsys )		5450364	0					
ANR	5450583	Callee	query . setGenericQueryType		5450364	0					
ANR	5450584	MemberAccess	query . setGenericQueryType		5450364	0					
ANR	5450585	Identifier	query		5450364	0					
ANR	5450586	Identifier	setGenericQueryType		5450364	1					
ANR	5450587	ArgumentList	subsys		5450364	1					
ANR	5450588	Argument	subsys		5450364	0					
ANR	5450589	Identifier	subsys		5450364	0					
ANR	5450590	IfStatement	if ( constraint != NULL )		5450364	17					
ANR	5450591	Condition	constraint != NULL	1166:5:31207:31222	5450364	0	True				
ANR	5450592	EqualityExpression	constraint != NULL		5450364	0		!=			
ANR	5450593	Identifier	constraint		5450364	0					
ANR	5450594	Identifier	NULL		5450364	1					
ANR	5450595	CompoundStatement		71:23:1430:1430	5450364	1					
ANR	5450596	ExpressionStatement	query . addANDConstraint ( constraint )	1167:3:31230:31264	5450364	0	True				
ANR	5450597	CallExpression	query . addANDConstraint ( constraint )		5450364	0					
ANR	5450598	Callee	query . addANDConstraint		5450364	0					
ANR	5450599	MemberAccess	query . addANDConstraint		5450364	0					
ANR	5450600	Identifier	query		5450364	0					
ANR	5450601	Identifier	addANDConstraint		5450364	1					
ANR	5450602	ArgumentList	constraint		5450364	1					
ANR	5450603	Argument	constraint		5450364	0					
ANR	5450604	Identifier	constraint		5450364	0					
ANR	5450605	IfStatement	if ( pool_addr )		5450364	18					
ANR	5450606	Condition	pool_addr	1171:5:31276:31284	5450364	0	True				
ANR	5450607	Identifier	pool_addr		5450364	0					
ANR	5450608	CompoundStatement		76:16:1492:1492	5450364	1					
ANR	5450609	ExpressionStatement	"q_result = query . fetchAds ( ads , pool_addr , & errstack )"	1172:2:31291:31343	5450364	0	True				
ANR	5450610	AssignmentExpression	"q_result = query . fetchAds ( ads , pool_addr , & errstack )"		5450364	0		=			
ANR	5450611	Identifier	q_result		5450364	0					
ANR	5450612	CallExpression	"query . fetchAds ( ads , pool_addr , & errstack )"		5450364	1					
ANR	5450613	Callee	query . fetchAds		5450364	0					
ANR	5450614	MemberAccess	query . fetchAds		5450364	0					
ANR	5450615	Identifier	query		5450364	0					
ANR	5450616	Identifier	fetchAds		5450364	1					
ANR	5450617	ArgumentList	ads		5450364	1					
ANR	5450618	Argument	ads		5450364	0					
ANR	5450619	Identifier	ads		5450364	0					
ANR	5450620	Argument	pool_addr		5450364	1					
ANR	5450621	Identifier	pool_addr		5450364	0					
ANR	5450622	Argument	& errstack		5450364	2					
ANR	5450623	UnaryOperationExpression	& errstack		5450364	0					
ANR	5450624	UnaryOperator	&		5450364	0					
ANR	5450625	Identifier	errstack		5450364	1					
ANR	5450626	ElseStatement	else		5450364	0					
ANR	5450627	CompoundStatement		79:2:1562:1614	5450364	0					
ANR	5450628	IdentifierDeclStatement	CollectorList * collectors = CollectorList :: create ( ) ;	1174:2:31357:31409	5450364	0	True				
ANR	5450629	IdentifierDecl	* collectors = CollectorList :: create ( )		5450364	0					
ANR	5450630	IdentifierDeclType	CollectorList *		5450364	0					
ANR	5450631	Identifier	collectors		5450364	1					
ANR	5450632	AssignmentExpression	* collectors = CollectorList :: create ( )		5450364	2		=			
ANR	5450633	Identifier	collectors		5450364	0					
ANR	5450634	CallExpression	CollectorList :: create ( )		5450364	1					
ANR	5450635	Callee	CollectorList :: create		5450364	0					
ANR	5450636	Identifier	CollectorList :: create		5450364	0					
ANR	5450637	ArgumentList			5450364	1					
ANR	5450638	ExpressionStatement	"q_result = collectors -> query ( query , ads )"	1175:2:31413:31454	5450364	1	True				
ANR	5450639	AssignmentExpression	"q_result = collectors -> query ( query , ads )"		5450364	0		=			
ANR	5450640	Identifier	q_result		5450364	0					
ANR	5450641	CallExpression	"collectors -> query ( query , ads )"		5450364	1					
ANR	5450642	Callee	collectors -> query		5450364	0					
ANR	5450643	PtrMemberAccess	collectors -> query		5450364	0					
ANR	5450644	Identifier	collectors		5450364	0					
ANR	5450645	Identifier	query		5450364	1					
ANR	5450646	ArgumentList	query		5450364	1					
ANR	5450647	Argument	query		5450364	0					
ANR	5450648	Identifier	query		5450364	0					
ANR	5450649	Argument	ads		5450364	1					
ANR	5450650	Identifier	ads		5450364	0					
ANR	5450651	Statement	delete	1176:2:31458:31463	5450364	2	True				
ANR	5450652	ExpressionStatement	collectors	1176:9:31465:31475	5450364	3	True				
ANR	5450653	Identifier	collectors		5450364	0					
ANR	5450654	IfStatement	if ( q_result != Q_OK )		5450364	19					
ANR	5450655	Condition	q_result != Q_OK	1178:5:31485:31500	5450364	0	True				
ANR	5450656	EqualityExpression	q_result != Q_OK		5450364	0		!=			
ANR	5450657	Identifier	q_result		5450364	0					
ANR	5450658	Identifier	Q_OK		5450364	1					
ANR	5450659	CompoundStatement		83:24:1709:1709	5450364	1					
ANR	5450660	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"	1179:2:31508:31561	5450364	0	True				
ANR	5450661	CallExpression	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"		5450364	0					
ANR	5450662	Callee	fprintf		5450364	0					
ANR	5450663	Identifier	fprintf		5450364	0					
ANR	5450664	ArgumentList	stderr		5450364	1					
ANR	5450665	Argument	stderr		5450364	0					
ANR	5450666	Identifier	stderr		5450364	0					
ANR	5450667	Argument	"""%s\\n"""		5450364	1					
ANR	5450668	PrimaryExpression	"""%s\\n"""		5450364	0					
ANR	5450669	Argument	errstack . getFullText ( true )		5450364	2					
ANR	5450670	CallExpression	errstack . getFullText ( true )		5450364	0					
ANR	5450671	Callee	errstack . getFullText		5450364	0					
ANR	5450672	MemberAccess	errstack . getFullText		5450364	0					
ANR	5450673	Identifier	errstack		5450364	0					
ANR	5450674	Identifier	getFullText		5450364	1					
ANR	5450675	ArgumentList	true		5450364	1					
ANR	5450676	Argument	true		5450364	0					
ANR	5450677	Identifier	true		5450364	0					
ANR	5450678	ExpressionStatement	"fprintf ( stderr , ""ERROR: can't connect to %s\\n"" , pool ? pool -> idStr ( ) : ""local collector"" )"	1180:2:31565:31661	5450364	1	True				
ANR	5450679	CallExpression	"fprintf ( stderr , ""ERROR: can't connect to %s\\n"" , pool ? pool -> idStr ( ) : ""local collector"" )"		5450364	0					
ANR	5450680	Callee	fprintf		5450364	0					
ANR	5450681	Identifier	fprintf		5450364	0					
ANR	5450682	ArgumentList	stderr		5450364	1					
ANR	5450683	Argument	stderr		5450364	0					
ANR	5450684	Identifier	stderr		5450364	0					
ANR	5450685	Argument	"""ERROR: can't connect to %s\\n"""		5450364	1					
ANR	5450686	PrimaryExpression	"""ERROR: can't connect to %s\\n"""		5450364	0					
ANR	5450687	Argument	"pool ? pool -> idStr ( ) : ""local collector"""		5450364	2					
ANR	5450688	ConditionalExpression	"pool ? pool -> idStr ( ) : ""local collector"""		5450364	0					
ANR	5450689	Condition	pool		5450364	0					
ANR	5450690	Identifier	pool		5450364	0					
ANR	5450691	CallExpression	pool -> idStr ( )		5450364	1					
ANR	5450692	Callee	pool -> idStr		5450364	0					
ANR	5450693	PtrMemberAccess	pool -> idStr		5450364	0					
ANR	5450694	Identifier	pool		5450364	0					
ANR	5450695	Identifier	idStr		5450364	1					
ANR	5450696	ArgumentList			5450364	1					
ANR	5450697	PrimaryExpression	"""local collector"""		5450364	2					
ANR	5450698	ExpressionStatement	had_error = true	1182:2:31665:31681	5450364	2	True				
ANR	5450699	AssignmentExpression	had_error = true		5450364	0		=			
ANR	5450700	Identifier	had_error		5450364	0					
ANR	5450701	Identifier	true		5450364	1					
ANR	5450702	ElseStatement	else		5450364	0					
ANR	5450703	IfStatement	if ( ads . Length ( ) <= 0 )		5450364	0					
ANR	5450704	Condition	ads . Length ( ) <= 0	1183:12:31695:31711	5450364	0	True				
ANR	5450705	RelationalExpression	ads . Length ( ) <= 0		5450364	0		<=			
ANR	5450706	CallExpression	ads . Length ( )		5450364	0					
ANR	5450707	Callee	ads . Length		5450364	0					
ANR	5450708	MemberAccess	ads . Length		5450364	0					
ANR	5450709	Identifier	ads		5450364	0					
ANR	5450710	Identifier	Length		5450364	1					
ANR	5450711	ArgumentList			5450364	1					
ANR	5450712	PrimaryExpression	0		5450364	1					
ANR	5450713	CompoundStatement		88:32:1920:1920	5450364	1					
ANR	5450714	IfStatement	if ( IgnoreMissingDaemon )		5450364	0					
ANR	5450715	Condition	IgnoreMissingDaemon	1185:6:31760:31778	5450364	0	True				
ANR	5450716	Identifier	IgnoreMissingDaemon		5450364	0					
ANR	5450717	CompoundStatement		90:28:1987:1987	5450364	1					
ANR	5450718	ReturnStatement	return true ;	1186:3:31787:31798	5450364	0	True				
ANR	5450719	Identifier	true		5450364	0					
ANR	5450720	ExpressionStatement	"fprintf ( stderr , ""Found no ClassAds when querying pool (%s)\\n"" , pool ? pool -> name ( ) : ""local"" )"	1188:2:31806:31906	5450364	1	True				
ANR	5450721	CallExpression	"fprintf ( stderr , ""Found no ClassAds when querying pool (%s)\\n"" , pool ? pool -> name ( ) : ""local"" )"		5450364	0					
ANR	5450722	Callee	fprintf		5450364	0					
ANR	5450723	Identifier	fprintf		5450364	0					
ANR	5450724	ArgumentList	stderr		5450364	1					
ANR	5450725	Argument	stderr		5450364	0					
ANR	5450726	Identifier	stderr		5450364	0					
ANR	5450727	Argument	"""Found no ClassAds when querying pool (%s)\\n"""		5450364	1					
ANR	5450728	PrimaryExpression	"""Found no ClassAds when querying pool (%s)\\n"""		5450364	0					
ANR	5450729	Argument	"pool ? pool -> name ( ) : ""local"""		5450364	2					
ANR	5450730	ConditionalExpression	"pool ? pool -> name ( ) : ""local"""		5450364	0					
ANR	5450731	Condition	pool		5450364	0					
ANR	5450732	Identifier	pool		5450364	0					
ANR	5450733	CallExpression	pool -> name ( )		5450364	1					
ANR	5450734	Callee	pool -> name		5450364	0					
ANR	5450735	PtrMemberAccess	pool -> name		5450364	0					
ANR	5450736	Identifier	pool		5450364	0					
ANR	5450737	Identifier	name		5450364	1					
ANR	5450738	ArgumentList			5450364	1					
ANR	5450739	PrimaryExpression	"""local"""		5450364	2					
ANR	5450740	ExpressionStatement	had_error = true	1190:2:31910:31926	5450364	2	True				
ANR	5450741	AssignmentExpression	had_error = true		5450364	0		=			
ANR	5450742	Identifier	had_error		5450364	0					
ANR	5450743	Identifier	true		5450364	1					
ANR	5450744	IfStatement	if ( had_error )		5450364	20					
ANR	5450745	Condition	had_error	1192:5:31936:31944	5450364	0	True				
ANR	5450746	Identifier	had_error		5450364	0					
ANR	5450747	CompoundStatement		97:17:2153:2153	5450364	1					
ANR	5450748	IfStatement	if ( ! name_list )		5450364	0					
ANR	5450749	Condition	! name_list	1193:6:31956:31966	5450364	0	True				
ANR	5450750	UnaryOperationExpression	! name_list		5450364	0					
ANR	5450751	UnaryOperator	!		5450364	0					
ANR	5450752	Identifier	name_list		5450364	1					
ANR	5450753	CompoundStatement		98:20:2175:2175	5450364	1					
ANR	5450754	IfStatement	if ( constraint != NULL )		5450364	0					
ANR	5450755	Condition	constraint != NULL	1194:9:31981:31996	5450364	0	True				
ANR	5450756	EqualityExpression	constraint != NULL		5450364	0		!=			
ANR	5450757	Identifier	constraint		5450364	0					
ANR	5450758	Identifier	NULL		5450364	1					
ANR	5450759	CompoundStatement		99:28:2205:2205	5450364	1					
ANR	5450760	ExpressionStatement	"fprintf ( stderr , ""Can't find addresses for %s's for constraint '%s'\\n"" , real_dt ? daemonString ( real_dt ) : ""daemon"" , constraint )"	1195:6:32008:32145	5450364	0	True				
ANR	5450761	CallExpression	"fprintf ( stderr , ""Can't find addresses for %s's for constraint '%s'\\n"" , real_dt ? daemonString ( real_dt ) : ""daemon"" , constraint )"		5450364	0					
ANR	5450762	Callee	fprintf		5450364	0					
ANR	5450763	Identifier	fprintf		5450364	0					
ANR	5450764	ArgumentList	stderr		5450364	1					
ANR	5450765	Argument	stderr		5450364	0					
ANR	5450766	Identifier	stderr		5450364	0					
ANR	5450767	Argument	"""Can't find addresses for %s's for constraint '%s'\\n"""		5450364	1					
ANR	5450768	PrimaryExpression	"""Can't find addresses for %s's for constraint '%s'\\n"""		5450364	0					
ANR	5450769	Argument	"real_dt ? daemonString ( real_dt ) : ""daemon"""		5450364	2					
ANR	5450770	ConditionalExpression	"real_dt ? daemonString ( real_dt ) : ""daemon"""		5450364	0					
ANR	5450771	Condition	real_dt		5450364	0					
ANR	5450772	Identifier	real_dt		5450364	0					
ANR	5450773	CallExpression	daemonString ( real_dt )		5450364	1					
ANR	5450774	Callee	daemonString		5450364	0					
ANR	5450775	Identifier	daemonString		5450364	0					
ANR	5450776	ArgumentList	real_dt		5450364	1					
ANR	5450777	Argument	real_dt		5450364	0					
ANR	5450778	Identifier	real_dt		5450364	0					
ANR	5450779	PrimaryExpression	"""daemon"""		5450364	2					
ANR	5450780	Argument	constraint		5450364	3					
ANR	5450781	Identifier	constraint		5450364	0					
ANR	5450782	ElseStatement	else		5450364	0					
ANR	5450783	CompoundStatement		102:11:2363:2363	5450364	0					
ANR	5450784	ExpressionStatement	"fprintf ( stderr , ""Can't find addresses for %s's for -all\\n"" , real_dt ? daemonString ( real_dt ) : ""daemon"" )"	1198:6:32166:32280	5450364	0	True				
ANR	5450785	CallExpression	"fprintf ( stderr , ""Can't find addresses for %s's for -all\\n"" , real_dt ? daemonString ( real_dt ) : ""daemon"" )"		5450364	0					
ANR	5450786	Callee	fprintf		5450364	0					
ANR	5450787	Identifier	fprintf		5450364	0					
ANR	5450788	ArgumentList	stderr		5450364	1					
ANR	5450789	Argument	stderr		5450364	0					
ANR	5450790	Identifier	stderr		5450364	0					
ANR	5450791	Argument	"""Can't find addresses for %s's for -all\\n"""		5450364	1					
ANR	5450792	PrimaryExpression	"""Can't find addresses for %s's for -all\\n"""		5450364	0					
ANR	5450793	Argument	"real_dt ? daemonString ( real_dt ) : ""daemon"""		5450364	2					
ANR	5450794	ConditionalExpression	"real_dt ? daemonString ( real_dt ) : ""daemon"""		5450364	0					
ANR	5450795	Condition	real_dt		5450364	0					
ANR	5450796	Identifier	real_dt		5450364	0					
ANR	5450797	CallExpression	daemonString ( real_dt )		5450364	1					
ANR	5450798	Callee	daemonString		5450364	0					
ANR	5450799	Identifier	daemonString		5450364	0					
ANR	5450800	ArgumentList	real_dt		5450364	1					
ANR	5450801	Argument	real_dt		5450364	0					
ANR	5450802	Identifier	real_dt		5450364	0					
ANR	5450803	PrimaryExpression	"""daemon"""		5450364	2					
ANR	5450804	ElseStatement	else		5450364	0					
ANR	5450805	CompoundStatement		106:9:2502:2502	5450364	0					
ANR	5450806	ExpressionStatement	name_list -> rewind ( )	1202:3:32302:32321	5450364	0	True				
ANR	5450807	CallExpression	name_list -> rewind ( )		5450364	0					
ANR	5450808	Callee	name_list -> rewind		5450364	0					
ANR	5450809	PtrMemberAccess	name_list -> rewind		5450364	0					
ANR	5450810	Identifier	name_list		5450364	0					
ANR	5450811	Identifier	rewind		5450364	1					
ANR	5450812	ArgumentList			5450364	1					
ANR	5450813	WhileStatement	while ( ( name = name_list -> next ( ) ) )		5450364	1					
ANR	5450814	Condition	name = name_list -> next ( )	1203:10:32333:32358	5450364	0	True				
ANR	5450815	AssignmentExpression	name = name_list -> next ( )		5450364	0		=			
ANR	5450816	Identifier	name		5450364	0					
ANR	5450817	CallExpression	name_list -> next ( )		5450364	1					
ANR	5450818	Callee	name_list -> next		5450364	0					
ANR	5450819	PtrMemberAccess	name_list -> next		5450364	0					
ANR	5450820	Identifier	name_list		5450364	0					
ANR	5450821	Identifier	next		5450364	1					
ANR	5450822	ArgumentList			5450364	1					
ANR	5450823	CompoundStatement		108:39:2567:2567	5450364	1					
ANR	5450824	ExpressionStatement	"fprintf ( stderr , ""Can't find address for %s %s\\n"" , real_dt ? daemonString ( real_dt ) : ""daemon"" , name )"	1204:4:32368:32477	5450364	0	True				
ANR	5450825	CallExpression	"fprintf ( stderr , ""Can't find address for %s %s\\n"" , real_dt ? daemonString ( real_dt ) : ""daemon"" , name )"		5450364	0					
ANR	5450826	Callee	fprintf		5450364	0					
ANR	5450827	Identifier	fprintf		5450364	0					
ANR	5450828	ArgumentList	stderr		5450364	1					
ANR	5450829	Argument	stderr		5450364	0					
ANR	5450830	Identifier	stderr		5450364	0					
ANR	5450831	Argument	"""Can't find address for %s %s\\n"""		5450364	1					
ANR	5450832	PrimaryExpression	"""Can't find address for %s %s\\n"""		5450364	0					
ANR	5450833	Argument	"real_dt ? daemonString ( real_dt ) : ""daemon"""		5450364	2					
ANR	5450834	ConditionalExpression	"real_dt ? daemonString ( real_dt ) : ""daemon"""		5450364	0					
ANR	5450835	Condition	real_dt		5450364	0					
ANR	5450836	Identifier	real_dt		5450364	0					
ANR	5450837	CallExpression	daemonString ( real_dt )		5450364	1					
ANR	5450838	Callee	daemonString		5450364	0					
ANR	5450839	Identifier	daemonString		5450364	0					
ANR	5450840	ArgumentList	real_dt		5450364	1					
ANR	5450841	Argument	real_dt		5450364	0					
ANR	5450842	Identifier	real_dt		5450364	0					
ANR	5450843	PrimaryExpression	"""daemon"""		5450364	2					
ANR	5450844	Argument	name		5450364	3					
ANR	5450845	Identifier	name		5450364	0					
ANR	5450846	ExpressionStatement	"fprintf ( stderr , ""Perhaps you need to query another pool.\\n"" )"	1208:2:32490:32552	5450364	1	True				
ANR	5450847	CallExpression	"fprintf ( stderr , ""Perhaps you need to query another pool.\\n"" )"		5450364	0					
ANR	5450848	Callee	fprintf		5450364	0					
ANR	5450849	Identifier	fprintf		5450364	0					
ANR	5450850	ArgumentList	stderr		5450364	1					
ANR	5450851	Argument	stderr		5450364	0					
ANR	5450852	Identifier	stderr		5450364	0					
ANR	5450853	Argument	"""Perhaps you need to query another pool.\\n"""		5450364	1					
ANR	5450854	PrimaryExpression	"""Perhaps you need to query another pool.\\n"""		5450364	0					
ANR	5450855	ExpressionStatement	exit ( 1 )	1209:2:32556:32565	5450364	2	True				
ANR	5450856	CallExpression	exit ( 1 )		5450364	0					
ANR	5450857	Callee	exit		5450364	0					
ANR	5450858	Identifier	exit		5450364	0					
ANR	5450859	ArgumentList	1		5450364	1					
ANR	5450860	Argument	1		5450364	0					
ANR	5450861	PrimaryExpression	1		5450364	0					
ANR	5450862	IfStatement	if ( ! name_list )		5450364	21					
ANR	5450863	Condition	! name_list	1213:5:32577:32587	5450364	0	True				
ANR	5450864	UnaryOperationExpression	! name_list		5450364	0					
ANR	5450865	UnaryOperator	!		5450364	0					
ANR	5450866	Identifier	name_list		5450364	1					
ANR	5450867	CompoundStatement		118:19:2796:2796	5450364	1					
ANR	5450868	ExpressionStatement	ads . Rewind ( )	1215:2:32651:32663	5450364	0	True				
ANR	5450869	CallExpression	ads . Rewind ( )		5450364	0					
ANR	5450870	Callee	ads . Rewind		5450364	0					
ANR	5450871	MemberAccess	ads . Rewind		5450364	0					
ANR	5450872	Identifier	ads		5450364	0					
ANR	5450873	Identifier	Rewind		5450364	1					
ANR	5450874	ArgumentList			5450364	1					
ANR	5450875	WhileStatement	while ( ( ad = ads . Next ( ) ) )		5450364	1					
ANR	5450876	Condition	ad = ads . Next ( )	1216:9:32674:32690	5450364	0	True				
ANR	5450877	AssignmentExpression	ad = ads . Next ( )		5450364	0		=			
ANR	5450878	Identifier	ad		5450364	0					
ANR	5450879	CallExpression	ads . Next ( )		5450364	1					
ANR	5450880	Callee	ads . Next		5450364	0					
ANR	5450881	MemberAccess	ads . Next		5450364	0					
ANR	5450882	Identifier	ads		5450364	0					
ANR	5450883	Identifier	Next		5450364	1					
ANR	5450884	ArgumentList			5450364	1					
ANR	5450885	CompoundStatement		121:29:2899:2899	5450364	1					
ANR	5450886	ExpressionStatement	"d = new Daemon ( ad , real_dt , pool_addr )"	1217:3:32699:32739	5450364	0	True				
ANR	5450887	AssignmentExpression	"d = new Daemon ( ad , real_dt , pool_addr )"		5450364	0		=			
ANR	5450888	Identifier	d		5450364	0					
ANR	5450889	Expression	"ad , real_dt , pool_addr"		5450364	1					
ANR	5450890	Identifier	ad		5450364	0					
ANR	5450891	Expression	"real_dt , pool_addr"		5450364	1					
ANR	5450892	Identifier	real_dt		5450364	0					
ANR	5450893	Identifier	pool_addr		5450364	1					
ANR	5450894	ExpressionStatement	daemon_list -> append ( d )	1218:3:32744:32768	5450364	1	True				
ANR	5450895	CallExpression	daemon_list -> append ( d )		5450364	0					
ANR	5450896	Callee	daemon_list -> append		5450364	0					
ANR	5450897	PtrMemberAccess	daemon_list -> append		5450364	0					
ANR	5450898	Identifier	daemon_list		5450364	0					
ANR	5450899	Identifier	append		5450364	1					
ANR	5450900	ArgumentList	d		5450364	1					
ANR	5450901	Argument	d		5450364	0					
ANR	5450902	Identifier	d		5450364	0					
ANR	5450903	ReturnStatement	return true ;	1220:2:32776:32787	5450364	2	True				
ANR	5450904	Identifier	true		5450364	0					
ANR	5450905	ExpressionStatement	name_list -> rewind ( )	1231:1:33254:33273	5450364	22	True				
ANR	5450906	CallExpression	name_list -> rewind ( )		5450364	0					
ANR	5450907	Callee	name_list -> rewind		5450364	0					
ANR	5450908	PtrMemberAccess	name_list -> rewind		5450364	0					
ANR	5450909	Identifier	name_list		5450364	0					
ANR	5450910	Identifier	rewind		5450364	1					
ANR	5450911	ArgumentList			5450364	1					
ANR	5450912	WhileStatement	while ( ( name = name_list -> next ( ) ) )		5450364	23					
ANR	5450913	Condition	name = name_list -> next ( )	1232:8:33283:33308	5450364	0	True				
ANR	5450914	AssignmentExpression	name = name_list -> next ( )		5450364	0		=			
ANR	5450915	Identifier	name		5450364	0					
ANR	5450916	CallExpression	name_list -> next ( )		5450364	1					
ANR	5450917	Callee	name_list -> next		5450364	0					
ANR	5450918	PtrMemberAccess	name_list -> next		5450364	0					
ANR	5450919	Identifier	name_list		5450364	0					
ANR	5450920	Identifier	next		5450364	1					
ANR	5450921	ArgumentList			5450364	1					
ANR	5450922	CompoundStatement		137:37:3517:3517	5450364	1					
ANR	5450923	ExpressionStatement	ads . Rewind ( )	1233:2:33316:33328	5450364	0	True				
ANR	5450924	CallExpression	ads . Rewind ( )		5450364	0					
ANR	5450925	Callee	ads . Rewind		5450364	0					
ANR	5450926	MemberAccess	ads . Rewind		5450364	0					
ANR	5450927	Identifier	ads		5450364	0					
ANR	5450928	Identifier	Rewind		5450364	1					
ANR	5450929	ArgumentList			5450364	1					
ANR	5450930	WhileStatement	while ( ! d && ( ad = ads . Next ( ) ) )		5450364	1					
ANR	5450931	Condition	! d && ( ad = ads . Next ( ) )	1234:9:33339:33361	5450364	0	True				
ANR	5450932	AndExpression	! d && ( ad = ads . Next ( ) )		5450364	0		&&			
ANR	5450933	UnaryOperationExpression	! d		5450364	0					
ANR	5450934	UnaryOperator	!		5450364	0					
ANR	5450935	Identifier	d		5450364	1					
ANR	5450936	AssignmentExpression	ad = ads . Next ( )		5450364	1		=			
ANR	5450937	Identifier	ad		5450364	0					
ANR	5450938	CallExpression	ads . Next ( )		5450364	1					
ANR	5450939	Callee	ads . Next		5450364	0					
ANR	5450940	MemberAccess	ads . Next		5450364	0					
ANR	5450941	Identifier	ads		5450364	0					
ANR	5450942	Identifier	Next		5450364	1					
ANR	5450943	ArgumentList			5450364	1					
ANR	5450944	CompoundStatement		139:35:3570:3570	5450364	1					
ANR	5450945	IfStatement	"if ( real_dt == DT_STARTD && ! strchr ( name , '@' ) )"		5450364	0					
ANR	5450946	Condition	"real_dt == DT_STARTD && ! strchr ( name , '@' )"	1241:7:33709:33751	5450364	0	True				
ANR	5450947	AndExpression	"real_dt == DT_STARTD && ! strchr ( name , '@' )"		5450364	0		&&			
ANR	5450948	EqualityExpression	real_dt == DT_STARTD		5450364	0		==			
ANR	5450949	Identifier	real_dt		5450364	0					
ANR	5450950	Identifier	DT_STARTD		5450364	1					
ANR	5450951	UnaryOperationExpression	"! strchr ( name , '@' )"		5450364	1					
ANR	5450952	UnaryOperator	!		5450364	0					
ANR	5450953	CallExpression	"strchr ( name , '@' )"		5450364	1					
ANR	5450954	Callee	strchr		5450364	0					
ANR	5450955	Identifier	strchr		5450364	0					
ANR	5450956	ArgumentList	name		5450364	1					
ANR	5450957	Argument	name		5450364	0					
ANR	5450958	Identifier	name		5450364	0					
ANR	5450959	Argument	'@'		5450364	1					
ANR	5450960	PrimaryExpression	'@'		5450364	0					
ANR	5450961	CompoundStatement		146:53:3960:3960	5450364	1					
ANR	5450962	ExpressionStatement	host = get_host_part ( name )	1242:4:33761:33789	5450364	0	True				
ANR	5450963	AssignmentExpression	host = get_host_part ( name )		5450364	0		=			
ANR	5450964	Identifier	host		5450364	0					
ANR	5450965	CallExpression	get_host_part ( name )		5450364	1					
ANR	5450966	Callee	get_host_part		5450364	0					
ANR	5450967	Identifier	get_host_part		5450364	0					
ANR	5450968	ArgumentList	name		5450364	1					
ANR	5450969	Argument	name		5450364	0					
ANR	5450970	Identifier	name		5450364	0					
ANR	5450971	ExpressionStatement	"ad -> LookupString ( ATTR_MACHINE , & tmp )"	1243:4:33795:33833	5450364	1	True				
ANR	5450972	CallExpression	"ad -> LookupString ( ATTR_MACHINE , & tmp )"		5450364	0					
ANR	5450973	Callee	ad -> LookupString		5450364	0					
ANR	5450974	PtrMemberAccess	ad -> LookupString		5450364	0					
ANR	5450975	Identifier	ad		5450364	0					
ANR	5450976	Identifier	LookupString		5450364	1					
ANR	5450977	ArgumentList	ATTR_MACHINE		5450364	1					
ANR	5450978	Argument	ATTR_MACHINE		5450364	0					
ANR	5450979	Identifier	ATTR_MACHINE		5450364	0					
ANR	5450980	Argument	& tmp		5450364	1					
ANR	5450981	UnaryOperationExpression	& tmp		5450364	0					
ANR	5450982	UnaryOperator	&		5450364	0					
ANR	5450983	Identifier	tmp		5450364	1					
ANR	5450984	IfStatement	if ( ! tmp )		5450364	2					
ANR	5450985	Condition	! tmp	1244:8:33843:33847	5450364	0	True				
ANR	5450986	UnaryOperationExpression	! tmp		5450364	0					
ANR	5450987	UnaryOperator	!		5450364	0					
ANR	5450988	Identifier	tmp		5450364	1					
ANR	5450989	CompoundStatement		149:16:4056:4056	5450364	1					
ANR	5450990	ContinueStatement	continue ;	1247:5:33924:33932	5450364	0	True				
ANR	5450991	IfStatement	"if ( strcasecmp ( tmp , host ) )"		5450364	3					
ANR	5450992	Condition	"strcasecmp ( tmp , host )"	1249:8:33948:33968	5450364	0	True				
ANR	5450993	CallExpression	"strcasecmp ( tmp , host )"		5450364	0					
ANR	5450994	Callee	strcasecmp		5450364	0					
ANR	5450995	Identifier	strcasecmp		5450364	0					
ANR	5450996	ArgumentList	tmp		5450364	1					
ANR	5450997	Argument	tmp		5450364	0					
ANR	5450998	Identifier	tmp		5450364	0					
ANR	5450999	Argument	host		5450364	1					
ANR	5451000	Identifier	host		5450364	0					
ANR	5451001	CompoundStatement		154:32:4177:4177	5450364	1					
ANR	5451002	ExpressionStatement	free ( tmp )	1250:5:33992:34003	5450364	0	True				
ANR	5451003	CallExpression	free ( tmp )		5450364	0					
ANR	5451004	Callee	free		5450364	0					
ANR	5451005	Identifier	free		5450364	0					
ANR	5451006	ArgumentList	tmp		5450364	1					
ANR	5451007	Argument	tmp		5450364	0					
ANR	5451008	Identifier	tmp		5450364	0					
ANR	5451009	ExpressionStatement	tmp = NULL	1251:5:34010:34020	5450364	1	True				
ANR	5451010	AssignmentExpression	tmp = NULL		5450364	0		=			
ANR	5451011	Identifier	tmp		5450364	0					
ANR	5451012	Identifier	NULL		5450364	1					
ANR	5451013	ContinueStatement	continue ;	1252:5:34027:34035	5450364	2	True				
ANR	5451014	ExpressionStatement	"ad -> Assign ( ATTR_NAME , name )"	1272:4:34863:34891	5450364	4	True				
ANR	5451015	CallExpression	"ad -> Assign ( ATTR_NAME , name )"		5450364	0					
ANR	5451016	Callee	ad -> Assign		5450364	0					
ANR	5451017	PtrMemberAccess	ad -> Assign		5450364	0					
ANR	5451018	Identifier	ad		5450364	0					
ANR	5451019	Identifier	Assign		5450364	1					
ANR	5451020	ArgumentList	ATTR_NAME		5450364	1					
ANR	5451021	Argument	ATTR_NAME		5450364	0					
ANR	5451022	Identifier	ATTR_NAME		5450364	0					
ANR	5451023	Argument	name		5450364	1					
ANR	5451024	Identifier	name		5450364	0					
ANR	5451025	ExpressionStatement	"d = new Daemon ( ad , real_dt , pool_addr )"	1273:4:34897:34937	5450364	5	True				
ANR	5451026	AssignmentExpression	"d = new Daemon ( ad , real_dt , pool_addr )"		5450364	0		=			
ANR	5451027	Identifier	d		5450364	0					
ANR	5451028	Expression	"ad , real_dt , pool_addr"		5450364	1					
ANR	5451029	Identifier	ad		5450364	0					
ANR	5451030	Expression	"real_dt , pool_addr"		5450364	1					
ANR	5451031	Identifier	real_dt		5450364	0					
ANR	5451032	Identifier	pool_addr		5450364	1					
ANR	5451033	ExpressionStatement	free ( tmp )	1274:4:34943:34954	5450364	6	True				
ANR	5451034	CallExpression	free ( tmp )		5450364	0					
ANR	5451035	Callee	free		5450364	0					
ANR	5451036	Identifier	free		5450364	0					
ANR	5451037	ArgumentList	tmp		5450364	1					
ANR	5451038	Argument	tmp		5450364	0					
ANR	5451039	Identifier	tmp		5450364	0					
ANR	5451040	ExpressionStatement	tmp = NULL	1275:4:34960:34970	5450364	7	True				
ANR	5451041	AssignmentExpression	tmp = NULL		5450364	0		=			
ANR	5451042	Identifier	tmp		5450364	0					
ANR	5451043	Identifier	NULL		5450364	1					
ANR	5451044	ElseStatement	else		5450364	0					
ANR	5451045	CompoundStatement		182:10:5188:5188	5450364	0					
ANR	5451046	ExpressionStatement	"ad -> LookupString ( ATTR_NAME , & tmp )"	1279:4:35082:35117	5450364	0	True				
ANR	5451047	CallExpression	"ad -> LookupString ( ATTR_NAME , & tmp )"		5450364	0					
ANR	5451048	Callee	ad -> LookupString		5450364	0					
ANR	5451049	PtrMemberAccess	ad -> LookupString		5450364	0					
ANR	5451050	Identifier	ad		5450364	0					
ANR	5451051	Identifier	LookupString		5450364	1					
ANR	5451052	ArgumentList	ATTR_NAME		5450364	1					
ANR	5451053	Argument	ATTR_NAME		5450364	0					
ANR	5451054	Identifier	ATTR_NAME		5450364	0					
ANR	5451055	Argument	& tmp		5450364	1					
ANR	5451056	UnaryOperationExpression	& tmp		5450364	0					
ANR	5451057	UnaryOperator	&		5450364	0					
ANR	5451058	Identifier	tmp		5450364	1					
ANR	5451059	IfStatement	if ( ! tmp )		5450364	1					
ANR	5451060	Condition	! tmp	1280:8:35127:35131	5450364	0	True				
ANR	5451061	UnaryOperationExpression	! tmp		5450364	0					
ANR	5451062	UnaryOperator	!		5450364	0					
ANR	5451063	Identifier	tmp		5450364	1					
ANR	5451064	CompoundStatement		185:16:5340:5340	5450364	1					
ANR	5451065	ContinueStatement	continue ;	1283:5:35208:35216	5450364	0	True				
ANR	5451066	IfStatement	"if ( ! strchr ( name , '@' ) )"		5450364	2					
ANR	5451067	Condition	"! strchr ( name , '@' )"	1285:8:35232:35250	5450364	0	True				
ANR	5451068	UnaryOperationExpression	"! strchr ( name , '@' )"		5450364	0					
ANR	5451069	UnaryOperator	!		5450364	0					
ANR	5451070	CallExpression	"strchr ( name , '@' )"		5450364	1					
ANR	5451071	Callee	strchr		5450364	0					
ANR	5451072	Identifier	strchr		5450364	0					
ANR	5451073	ArgumentList	name		5450364	1					
ANR	5451074	Argument	name		5450364	0					
ANR	5451075	Identifier	name		5450364	0					
ANR	5451076	Argument	'@'		5450364	1					
ANR	5451077	PrimaryExpression	'@'		5450364	0					
ANR	5451078	CompoundStatement		190:30:5459:5459	5450364	1					
ANR	5451079	ExpressionStatement	host = get_host_part ( tmp )	1286:5:35261:35288	5450364	0	True				
ANR	5451080	AssignmentExpression	host = get_host_part ( tmp )		5450364	0		=			
ANR	5451081	Identifier	host		5450364	0					
ANR	5451082	CallExpression	get_host_part ( tmp )		5450364	1					
ANR	5451083	Callee	get_host_part		5450364	0					
ANR	5451084	Identifier	get_host_part		5450364	0					
ANR	5451085	ArgumentList	tmp		5450364	1					
ANR	5451086	Argument	tmp		5450364	0					
ANR	5451087	Identifier	tmp		5450364	0					
ANR	5451088	ElseStatement	else		5450364	0					
ANR	5451089	CompoundStatement		192:11:5506:5506	5450364	0					
ANR	5451090	ExpressionStatement	host = tmp	1288:5:35308:35318	5450364	0	True				
ANR	5451091	AssignmentExpression	host = tmp		5450364	0		=			
ANR	5451092	Identifier	host		5450364	0					
ANR	5451093	Identifier	tmp		5450364	1					
ANR	5451094	IfStatement	"if ( ! strcasecmp ( host , name ) )"		5450364	3					
ANR	5451095	Condition	"! strcasecmp ( host , name )"	1290:8:35334:35357	5450364	0	True				
ANR	5451096	UnaryOperationExpression	"! strcasecmp ( host , name )"		5450364	0					
ANR	5451097	UnaryOperator	!		5450364	0					
ANR	5451098	CallExpression	"strcasecmp ( host , name )"		5450364	1					
ANR	5451099	Callee	strcasecmp		5450364	0					
ANR	5451100	Identifier	strcasecmp		5450364	0					
ANR	5451101	ArgumentList	host		5450364	1					
ANR	5451102	Argument	host		5450364	0					
ANR	5451103	Identifier	host		5450364	0					
ANR	5451104	Argument	name		5450364	1					
ANR	5451105	Identifier	name		5450364	0					
ANR	5451106	CompoundStatement		195:35:5566:5566	5450364	1					
ANR	5451107	ExpressionStatement	"d = new Daemon ( ad , real_dt , pool_addr )"	1291:5:35368:35408	5450364	0	True				
ANR	5451108	AssignmentExpression	"d = new Daemon ( ad , real_dt , pool_addr )"		5450364	0		=			
ANR	5451109	Identifier	d		5450364	0					
ANR	5451110	Expression	"ad , real_dt , pool_addr"		5450364	1					
ANR	5451111	Identifier	ad		5450364	0					
ANR	5451112	Expression	"real_dt , pool_addr"		5450364	1					
ANR	5451113	Identifier	real_dt		5450364	0					
ANR	5451114	Identifier	pool_addr		5450364	1					
ANR	5451115	ExpressionStatement	free ( tmp )	1293:4:35420:35431	5450364	4	True				
ANR	5451116	CallExpression	free ( tmp )		5450364	0					
ANR	5451117	Callee	free		5450364	0					
ANR	5451118	Identifier	free		5450364	0					
ANR	5451119	ArgumentList	tmp		5450364	1					
ANR	5451120	Argument	tmp		5450364	0					
ANR	5451121	Identifier	tmp		5450364	0					
ANR	5451122	ExpressionStatement	tmp = NULL	1294:4:35437:35447	5450364	5	True				
ANR	5451123	AssignmentExpression	tmp = NULL		5450364	0		=			
ANR	5451124	Identifier	tmp		5450364	0					
ANR	5451125	Identifier	NULL		5450364	1					
ANR	5451126	IfStatement	if ( d )		5450364	2					
ANR	5451127	Condition	d	1298:6:35519:35519	5450364	0	True				
ANR	5451128	Identifier	d		5450364	0					
ANR	5451129	CompoundStatement		203:10:5728:5728	5450364	1					
ANR	5451130	ExpressionStatement	daemon_list -> append ( d )	1300:3:35583:35607	5450364	0	True				
ANR	5451131	CallExpression	daemon_list -> append ( d )		5450364	0					
ANR	5451132	Callee	daemon_list -> append		5450364	0					
ANR	5451133	PtrMemberAccess	daemon_list -> append		5450364	0					
ANR	5451134	Identifier	daemon_list		5450364	0					
ANR	5451135	Identifier	append		5450364	1					
ANR	5451136	ArgumentList	d		5450364	1					
ANR	5451137	Argument	d		5450364	0					
ANR	5451138	Identifier	d		5450364	0					
ANR	5451139	ExpressionStatement	d = NULL	1301:3:35612:35620	5450364	1	True				
ANR	5451140	AssignmentExpression	d = NULL		5450364	0		=			
ANR	5451141	Identifier	d		5450364	0					
ANR	5451142	Identifier	NULL		5450364	1					
ANR	5451143	ElseStatement	else		5450364	0					
ANR	5451144	CompoundStatement		207:9:5836:5836	5450364	0					
ANR	5451145	ExpressionStatement	"fprintf ( stderr , ""Can't find address for %s %s\\n"" , daemonString ( real_dt ) , name )"	1303:3:35636:35722	5450364	0	True				
ANR	5451146	CallExpression	"fprintf ( stderr , ""Can't find address for %s %s\\n"" , daemonString ( real_dt ) , name )"		5450364	0					
ANR	5451147	Callee	fprintf		5450364	0					
ANR	5451148	Identifier	fprintf		5450364	0					
ANR	5451149	ArgumentList	stderr		5450364	1					
ANR	5451150	Argument	stderr		5450364	0					
ANR	5451151	Identifier	stderr		5450364	0					
ANR	5451152	Argument	"""Can't find address for %s %s\\n"""		5450364	1					
ANR	5451153	PrimaryExpression	"""Can't find address for %s %s\\n"""		5450364	0					
ANR	5451154	Argument	daemonString ( real_dt )		5450364	2					
ANR	5451155	CallExpression	daemonString ( real_dt )		5450364	0					
ANR	5451156	Callee	daemonString		5450364	0					
ANR	5451157	Identifier	daemonString		5450364	0					
ANR	5451158	ArgumentList	real_dt		5450364	1					
ANR	5451159	Argument	real_dt		5450364	0					
ANR	5451160	Identifier	real_dt		5450364	0					
ANR	5451161	Argument	name		5450364	3					
ANR	5451162	Identifier	name		5450364	0					
ANR	5451163	ExpressionStatement	had_error = true	1305:3:35727:35743	5450364	1	True				
ANR	5451164	AssignmentExpression	had_error = true		5450364	0		=			
ANR	5451165	Identifier	had_error		5450364	0					
ANR	5451166	Identifier	true		5450364	1					
ANR	5451167	IfStatement	if ( had_error )		5450364	24					
ANR	5451168	Condition	had_error	1309:5:35795:35803	5450364	0	True				
ANR	5451169	Identifier	had_error		5450364	0					
ANR	5451170	CompoundStatement		214:17:6012:6012	5450364	1					
ANR	5451171	ExpressionStatement	"fprintf ( stderr , ""Perhaps you need to query another pool.\\n"" )"	1310:2:35811:35878	5450364	0	True				
ANR	5451172	CallExpression	"fprintf ( stderr , ""Perhaps you need to query another pool.\\n"" )"		5450364	0					
ANR	5451173	Callee	fprintf		5450364	0					
ANR	5451174	Identifier	fprintf		5450364	0					
ANR	5451175	ArgumentList	stderr		5450364	1					
ANR	5451176	Argument	stderr		5450364	0					
ANR	5451177	Identifier	stderr		5450364	0					
ANR	5451178	Argument	"""Perhaps you need to query another pool.\\n"""		5450364	1					
ANR	5451179	PrimaryExpression	"""Perhaps you need to query another pool.\\n"""		5450364	0					
ANR	5451180	ExpressionStatement	all_good = false	1312:2:35882:35898	5450364	1	True				
ANR	5451181	AssignmentExpression	all_good = false		5450364	0		=			
ANR	5451182	Identifier	all_good		5450364	0					
ANR	5451183	Identifier	false		5450364	1					
ANR	5451184	ReturnStatement	return true ;	1314:1:35904:35915	5450364	25	True				
ANR	5451185	Identifier	true		5450364	0					
ANR	5451186	ReturnType	bool		5450364	1					
ANR	5451187	Identifier	resolveNames		5450364	2					
ANR	5451188	ParameterList	"DaemonList * daemon_list , StringList * name_list"		5450364	3					
ANR	5451189	Parameter	DaemonList * daemon_list	1095:14:29745:29767	5450364	0	True				
ANR	5451190	ParameterType	DaemonList *		5450364	0					
ANR	5451191	Identifier	daemon_list		5450364	1					
ANR	5451192	Parameter	StringList * name_list	1095:39:29770:29790	5450364	1	True				
ANR	5451193	ParameterType	StringList *		5450364	0					
ANR	5451194	Identifier	name_list		5450364	1					
ANR	5451195	CFGEntryNode	ENTRY		5450364		True				
ANR	5451196	CFGExitNode	EXIT		5450364		True				
ANR	5451197	Symbol	ATTR_NAME		5450364						
ANR	5451198	Symbol	daemon_list		5450364						
ANR	5451199	Symbol	CREDD_AD		5450364						
ANR	5451200	Symbol	IgnoreMissingDaemon		5450364						
ANR	5451201	Symbol	q_result		5450364						
ANR	5451202	Symbol	strchr		5450364						
ANR	5451203	Symbol	pool -> addr		5450364						
ANR	5451204	Symbol	MASTER_AD		5450364						
ANR	5451205	Symbol	CLUSTER_AD		5450364						
ANR	5451206	Symbol	tmp		5450364						
ANR	5451207	Symbol	host		5450364						
ANR	5451208	Symbol	& errstack		5450364						
ANR	5451209	Symbol	buffer		5450364						
ANR	5451210	Symbol	strcasecmp		5450364						
ANR	5451211	Symbol	CollectorList :: create		5450364						
ANR	5451212	Symbol	pool -> idStr		5450364						
ANR	5451213	Symbol	GENERIC_AD		5450364						
ANR	5451214	Symbol	NULL		5450364						
ANR	5451215	Symbol	ad		5450364						
ANR	5451216	Symbol	LEASE_MANAGER_AD		5450364						
ANR	5451217	Symbol	query		5450364						
ANR	5451218	Symbol	QUILL_AD		5450364						
ANR	5451219	Symbol	pool		5450364						
ANR	5451220	Symbol	collectors -> query		5450364						
ANR	5451221	Symbol	stderr		5450364						
ANR	5451222	Symbol	Q_OK		5450364						
ANR	5451223	Symbol	pool_addr		5450364						
ANR	5451224	Symbol	ads		5450364						
ANR	5451225	Symbol	DT_STARTD		5450364						
ANR	5451226	Symbol	all_good		5450364						
ANR	5451227	Symbol	errstack		5450364						
ANR	5451228	Symbol	collectors		5450364						
ANR	5451229	Symbol	name		5450364						
ANR	5451230	Symbol	true		5450364						
ANR	5451231	Symbol	real_dt		5450364						
ANR	5451232	Symbol	& tmp		5450364						
ANR	5451233	Symbol	had_error		5450364						
ANR	5451234	Symbol	name_list -> isEmpty		5450364						
ANR	5451235	Symbol	NEGOTIATOR_AD		5450364						
ANR	5451236	Symbol	daemonString		5450364						
ANR	5451237	Symbol	ads . Length		5450364						
ANR	5451238	Symbol	COLLECTOR_AD		5450364						
ANR	5451239	Symbol	* collectors		5450364						
ANR	5451240	Symbol	subsys		5450364						
ANR	5451241	Symbol	ads . Next		5450364						
ANR	5451242	Symbol	query . fetchAds		5450364						
ANR	5451243	Symbol	name_list		5450364						
ANR	5451244	Symbol	name_list -> next		5450364						
ANR	5451245	Symbol	adtype		5450364						
ANR	5451246	Symbol	d		5450364						
ANR	5451247	Symbol	HAD_AD		5450364						
ANR	5451248	Symbol	* name_list		5450364						
ANR	5451249	Symbol	false		5450364						
ANR	5451250	Symbol	SCHEDD_AD		5450364						
ANR	5451251	Symbol	get_host_part		5450364						
ANR	5451252	Symbol	pool -> name		5450364						
ANR	5451253	Symbol	ATTR_MACHINE		5450364						
ANR	5451254	Symbol	* pool		5450364						
ANR	5451255	Symbol	STARTD_AD		5450364						
ANR	5451256	Symbol	errstack . getFullText		5450364						
ANR	5451257	Symbol	constraint		5450364						
ANR	5451258	Function	doCommand	1318:0:35921:43152							
ANR	5451259	FunctionDef	doCommand (Daemon * d)		5451258	0					
ANR	5451260	CompoundStatement		1320:0:35950:43152	5451258	0					
ANR	5451261	IdentifierDeclStatement	bool done = false ;	1321:1:35953:35970	5451258	0	True				
ANR	5451262	IdentifierDecl	done = false		5451258	0					
ANR	5451263	IdentifierDeclType	bool		5451258	0					
ANR	5451264	Identifier	done		5451258	1					
ANR	5451265	AssignmentExpression	done = false		5451258	2		=			
ANR	5451266	Identifier	false		5451258	0					
ANR	5451267	Identifier	false		5451258	1					
ANR	5451268	IdentifierDeclStatement	int my_cmd = real_cmd ;	1322:1:35973:35994	5451258	1	True				
ANR	5451269	IdentifierDecl	my_cmd = real_cmd		5451258	0					
ANR	5451270	IdentifierDeclType	int		5451258	0					
ANR	5451271	Identifier	my_cmd		5451258	1					
ANR	5451272	AssignmentExpression	my_cmd = real_cmd		5451258	2		=			
ANR	5451273	Identifier	real_cmd		5451258	0					
ANR	5451274	Identifier	real_cmd		5451258	1					
ANR	5451275	IdentifierDeclStatement	CondorError errstack ;	1323:1:35997:36017	5451258	2	True				
ANR	5451276	IdentifierDecl	errstack		5451258	0					
ANR	5451277	IdentifierDeclType	CondorError		5451258	0					
ANR	5451278	Identifier	errstack		5451258	1					
ANR	5451279	IdentifierDeclStatement	bool error = true ;	1324:1:36020:36037	5451258	3	True				
ANR	5451280	IdentifierDecl	error = true		5451258	0					
ANR	5451281	IdentifierDeclType	bool		5451258	0					
ANR	5451282	Identifier	error		5451258	1					
ANR	5451283	AssignmentExpression	error = true		5451258	2		=			
ANR	5451284	Identifier	true		5451258	0					
ANR	5451285	Identifier	true		5451258	1					
ANR	5451286	IdentifierDeclStatement	char * name ;	1325:1:36040:36050	5451258	4	True				
ANR	5451287	IdentifierDecl	* name		5451258	0					
ANR	5451288	IdentifierDeclType	char *		5451258	0					
ANR	5451289	Identifier	name		5451258	1					
ANR	5451290	IdentifierDeclStatement	bool is_local ;	1326:1:36053:36066	5451258	5	True				
ANR	5451291	IdentifierDecl	is_local		5451258	0					
ANR	5451292	IdentifierDeclType	bool		5451258	0					
ANR	5451293	Identifier	is_local		5451258	1					
ANR	5451294	IdentifierDeclStatement	daemon_t d_type ;	1327:1:36069:36084	5451258	6	True				
ANR	5451295	IdentifierDecl	d_type		5451258	0					
ANR	5451296	IdentifierDeclType	daemon_t		5451258	0					
ANR	5451297	Identifier	d_type		5451258	1					
ANR	5451298	DoStatement	do		5451258	7					
ANR	5451299	CompoundStatement		28:2:863:899	5451258	0					
ANR	5451300	ExpressionStatement	name = d -> name ( )	1331:2:36158:36174	5451258	0	True				
ANR	5451301	AssignmentExpression	name = d -> name ( )		5451258	0		=			
ANR	5451302	Identifier	name		5451258	0					
ANR	5451303	CallExpression	d -> name ( )		5451258	1					
ANR	5451304	Callee	d -> name		5451258	0					
ANR	5451305	PtrMemberAccess	d -> name		5451258	0					
ANR	5451306	Identifier	d		5451258	0					
ANR	5451307	Identifier	name		5451258	1					
ANR	5451308	ArgumentList			5451258	1					
ANR	5451309	ExpressionStatement	d_type = d -> type ( )	1332:2:36178:36196	5451258	1	True				
ANR	5451310	AssignmentExpression	d_type = d -> type ( )		5451258	0		=			
ANR	5451311	Identifier	d_type		5451258	0					
ANR	5451312	CallExpression	d -> type ( )		5451258	1					
ANR	5451313	Callee	d -> type		5451258	0					
ANR	5451314	PtrMemberAccess	d -> type		5451258	0					
ANR	5451315	Identifier	d		5451258	0					
ANR	5451316	Identifier	type		5451258	1					
ANR	5451317	ArgumentList			5451258	1					
ANR	5451318	ExpressionStatement	is_local = d -> isLocal ( )	1333:2:36200:36223	5451258	2	True				
ANR	5451319	AssignmentExpression	is_local = d -> isLocal ( )		5451258	0		=			
ANR	5451320	Identifier	is_local		5451258	0					
ANR	5451321	CallExpression	d -> isLocal ( )		5451258	1					
ANR	5451322	Callee	d -> isLocal		5451258	0					
ANR	5451323	PtrMemberAccess	d -> isLocal		5451258	0					
ANR	5451324	Identifier	d		5451258	0					
ANR	5451325	Identifier	isLocal		5451258	1					
ANR	5451326	ArgumentList			5451258	1					
ANR	5451327	IdentifierDeclStatement	ReliSock sock ;	1334:2:36227:36240	5451258	3	True				
ANR	5451328	IdentifierDecl	sock		5451258	0					
ANR	5451329	IdentifierDeclType	ReliSock		5451258	0					
ANR	5451330	Identifier	sock		5451258	1					
ANR	5451331	ExpressionStatement	done = false	1335:2:36244:36256	5451258	4	True				
ANR	5451332	AssignmentExpression	done = false		5451258	0		=			
ANR	5451333	Identifier	done		5451258	0					
ANR	5451334	Identifier	false		5451258	1					
ANR	5451335	ExpressionStatement	my_cmd = real_cmd	1336:2:36260:36277	5451258	5	True				
ANR	5451336	AssignmentExpression	my_cmd = real_cmd		5451258	0		=			
ANR	5451337	Identifier	my_cmd		5451258	0					
ANR	5451338	Identifier	real_cmd		5451258	1					
ANR	5451339	IdentifierDeclStatement	bool is_per_claim_startd_cmd = false ;	1347:2:36814:36850	5451258	6	True				
ANR	5451340	IdentifierDecl	is_per_claim_startd_cmd = false		5451258	0					
ANR	5451341	IdentifierDeclType	bool		5451258	0					
ANR	5451342	Identifier	is_per_claim_startd_cmd		5451258	1					
ANR	5451343	AssignmentExpression	is_per_claim_startd_cmd = false		5451258	2		=			
ANR	5451344	Identifier	false		5451258	0					
ANR	5451345	Identifier	false		5451258	1					
ANR	5451346	IfStatement	if ( real_cmd == VACATE_CLAIM || real_cmd == PCKPT_JOB )		5451258	7					
ANR	5451347	Condition	real_cmd == VACATE_CLAIM || real_cmd == PCKPT_JOB	1348:6:36858:36906	5451258	0	True				
ANR	5451348	OrExpression	real_cmd == VACATE_CLAIM || real_cmd == PCKPT_JOB		5451258	0		||			
ANR	5451349	EqualityExpression	real_cmd == VACATE_CLAIM		5451258	0		==			
ANR	5451350	Identifier	real_cmd		5451258	0					
ANR	5451351	Identifier	VACATE_CLAIM		5451258	1					
ANR	5451352	EqualityExpression	real_cmd == PCKPT_JOB		5451258	1		==			
ANR	5451353	Identifier	real_cmd		5451258	0					
ANR	5451354	Identifier	PCKPT_JOB		5451258	1					
ANR	5451355	CompoundStatement		29:58:959:959	5451258	1					
ANR	5451356	IfStatement	"if ( ! all && d_type != DT_ANY && ! is_local && ( name && strchr ( name , '@' ) ) )"		5451258	0					
ANR	5451357	Condition	"! all && d_type != DT_ANY && ! is_local && ( name && strchr ( name , '@' ) )"	1349:7:36919:36990	5451258	0	True				
ANR	5451358	AndExpression	"! all && d_type != DT_ANY && ! is_local && ( name && strchr ( name , '@' ) )"		5451258	0		&&			
ANR	5451359	UnaryOperationExpression	! all		5451258	0					
ANR	5451360	UnaryOperator	!		5451258	0					
ANR	5451361	Identifier	all		5451258	1					
ANR	5451362	AndExpression	"d_type != DT_ANY && ! is_local && ( name && strchr ( name , '@' ) )"		5451258	1		&&			
ANR	5451363	EqualityExpression	d_type != DT_ANY		5451258	0		!=			
ANR	5451364	Identifier	d_type		5451258	0					
ANR	5451365	Identifier	DT_ANY		5451258	1					
ANR	5451366	AndExpression	"! is_local && ( name && strchr ( name , '@' ) )"		5451258	1		&&			
ANR	5451367	UnaryOperationExpression	! is_local		5451258	0					
ANR	5451368	UnaryOperator	!		5451258	0					
ANR	5451369	Identifier	is_local		5451258	1					
ANR	5451370	AndExpression	"name && strchr ( name , '@' )"		5451258	1		&&			
ANR	5451371	Identifier	name		5451258	0					
ANR	5451372	CallExpression	"strchr ( name , '@' )"		5451258	1					
ANR	5451373	Callee	strchr		5451258	0					
ANR	5451374	Identifier	strchr		5451258	0					
ANR	5451375	ArgumentList	name		5451258	1					
ANR	5451376	Argument	name		5451258	0					
ANR	5451377	Identifier	name		5451258	0					
ANR	5451378	Argument	'@'		5451258	1					
ANR	5451379	PrimaryExpression	'@'		5451258	0					
ANR	5451380	CompoundStatement		32:3:1046:1046	5451258	1					
ANR	5451381	ExpressionStatement	is_per_claim_startd_cmd = true	1352:4:37003:37033	5451258	0	True				
ANR	5451382	AssignmentExpression	is_per_claim_startd_cmd = true		5451258	0		=			
ANR	5451383	Identifier	is_per_claim_startd_cmd		5451258	0					
ANR	5451384	Identifier	true		5451258	1					
ANR	5451385	IfStatement	if ( ! is_per_claim_startd_cmd )		5451258	8					
ANR	5451386	Condition	! is_per_claim_startd_cmd	1362:6:37397:37421	5451258	0	True				
ANR	5451387	UnaryOperationExpression	! is_per_claim_startd_cmd		5451258	0					
ANR	5451388	UnaryOperator	!		5451258	0					
ANR	5451389	Identifier	is_per_claim_startd_cmd		5451258	1					
ANR	5451390	CompoundStatement		45:3:1513:1533	5451258	1					
ANR	5451391	IdentifierDeclStatement	MyString hash_key = d -> addr ( ) ;	1363:3:37430:37459	5451258	0	True				
ANR	5451392	IdentifierDecl	hash_key = d -> addr ( )		5451258	0					
ANR	5451393	IdentifierDeclType	MyString		5451258	0					
ANR	5451394	Identifier	hash_key		5451258	1					
ANR	5451395	AssignmentExpression	hash_key = d -> addr ( )		5451258	2		=			
ANR	5451396	Identifier	hash_key		5451258	0					
ANR	5451397	CallExpression	d -> addr ( )		5451258	1					
ANR	5451398	Callee	d -> addr		5451258	0					
ANR	5451399	PtrMemberAccess	d -> addr		5451258	0					
ANR	5451400	Identifier	d		5451258	0					
ANR	5451401	Identifier	addr		5451258	1					
ANR	5451402	ArgumentList			5451258	1					
ANR	5451403	IdentifierDeclStatement	bool sent_it = false ;	1364:3:37464:37484	5451258	1	True				
ANR	5451404	IdentifierDecl	sent_it = false		5451258	0					
ANR	5451405	IdentifierDeclType	bool		5451258	0					
ANR	5451406	Identifier	sent_it		5451258	1					
ANR	5451407	AssignmentExpression	sent_it = false		5451258	2		=			
ANR	5451408	Identifier	false		5451258	0					
ANR	5451409	Identifier	false		5451258	1					
ANR	5451410	IfStatement	"if ( addresses_sent . lookup ( hash_key , sent_it ) >= 0 && sent_it )"		5451258	2					
ANR	5451411	Condition	"addresses_sent . lookup ( hash_key , sent_it ) >= 0 && sent_it"	1365:7:37493:37548	5451258	0	True				
ANR	5451412	AndExpression	"addresses_sent . lookup ( hash_key , sent_it ) >= 0 && sent_it"		5451258	0		&&			
ANR	5451413	RelationalExpression	"addresses_sent . lookup ( hash_key , sent_it ) >= 0"		5451258	0		>=			
ANR	5451414	CallExpression	"addresses_sent . lookup ( hash_key , sent_it )"		5451258	0					
ANR	5451415	Callee	addresses_sent . lookup		5451258	0					
ANR	5451416	MemberAccess	addresses_sent . lookup		5451258	0					
ANR	5451417	Identifier	addresses_sent		5451258	0					
ANR	5451418	Identifier	lookup		5451258	1					
ANR	5451419	ArgumentList	hash_key		5451258	1					
ANR	5451420	Argument	hash_key		5451258	0					
ANR	5451421	Identifier	hash_key		5451258	0					
ANR	5451422	Argument	sent_it		5451258	1					
ANR	5451423	Identifier	sent_it		5451258	0					
ANR	5451424	PrimaryExpression	0		5451258	1					
ANR	5451425	Identifier	sent_it		5451258	1					
ANR	5451426	CompoundStatement		46:66:1601:1601	5451258	1					
ANR	5451427	ReturnStatement	return ;	1366:4:37558:37564	5451258	0	True				
ANR	5451428	ExpressionStatement	"addresses_sent . insert ( hash_key , true )"	1368:3:37574:37613	5451258	3	True				
ANR	5451429	CallExpression	"addresses_sent . insert ( hash_key , true )"		5451258	0					
ANR	5451430	Callee	addresses_sent . insert		5451258	0					
ANR	5451431	MemberAccess	addresses_sent . insert		5451258	0					
ANR	5451432	Identifier	addresses_sent		5451258	0					
ANR	5451433	Identifier	insert		5451258	1					
ANR	5451434	ArgumentList	hash_key		5451258	1					
ANR	5451435	Argument	hash_key		5451258	0					
ANR	5451436	Identifier	hash_key		5451258	0					
ANR	5451437	Argument	true		5451258	1					
ANR	5451438	Identifier	true		5451258	0					
ANR	5451439	IfStatement	if ( real_cmd == SQUAWK )		5451258	9					
ANR	5451440	Condition	real_cmd == SQUAWK	1372:6:37669:37686	5451258	0	True				
ANR	5451441	EqualityExpression	real_cmd == SQUAWK		5451258	0		==			
ANR	5451442	Identifier	real_cmd		5451258	0					
ANR	5451443	Identifier	SQUAWK		5451258	1					
ANR	5451444	CompoundStatement		53:27:1739:1739	5451258	1					
ANR	5451445	ExpressionStatement	doSquawk ( d -> addr ( ) )	1373:3:37695:37716	5451258	0	True				
ANR	5451446	CallExpression	doSquawk ( d -> addr ( ) )		5451258	0					
ANR	5451447	Callee	doSquawk		5451258	0					
ANR	5451448	Identifier	doSquawk		5451258	0					
ANR	5451449	ArgumentList	d -> addr ( )		5451258	1					
ANR	5451450	Argument	d -> addr ( )		5451258	0					
ANR	5451451	CallExpression	d -> addr ( )		5451258	0					
ANR	5451452	Callee	d -> addr		5451258	0					
ANR	5451453	PtrMemberAccess	d -> addr		5451258	0					
ANR	5451454	Identifier	d		5451258	0					
ANR	5451455	Identifier	addr		5451258	1					
ANR	5451456	ArgumentList			5451258	1					
ANR	5451457	ExpressionStatement	"printf ( ""Bye!\\n"" )"	1374:3:37721:37740	5451258	1	True				
ANR	5451458	CallExpression	"printf ( ""Bye!\\n"" )"		5451258	0					
ANR	5451459	Callee	printf		5451258	0					
ANR	5451460	Identifier	printf		5451258	0					
ANR	5451461	ArgumentList	"""Bye!\\n"""		5451258	1					
ANR	5451462	Argument	"""Bye!\\n"""		5451258	0					
ANR	5451463	PrimaryExpression	"""Bye!\\n"""		5451258	0					
ANR	5451464	ReturnStatement	return ;	1375:3:37745:37751	5451258	2	True				
ANR	5451465	IfStatement	if ( sock . connect ( d -> addr ( ) ) )		5451258	10					
ANR	5451466	Condition	sock . connect ( d -> addr ( ) )	1379:6:37794:37816	5451258	0	True				
ANR	5451467	CallExpression	sock . connect ( d -> addr ( ) )		5451258	0					
ANR	5451468	Callee	sock . connect		5451258	0					
ANR	5451469	MemberAccess	sock . connect		5451258	0					
ANR	5451470	Identifier	sock		5451258	0					
ANR	5451471	Identifier	connect		5451258	1					
ANR	5451472	ArgumentList	d -> addr ( )		5451258	1					
ANR	5451473	Argument	d -> addr ( )		5451258	0					
ANR	5451474	CallExpression	d -> addr ( )		5451258	0					
ANR	5451475	Callee	d -> addr		5451258	0					
ANR	5451476	PtrMemberAccess	d -> addr		5451258	0					
ANR	5451477	Identifier	d		5451258	0					
ANR	5451478	Identifier	addr		5451258	1					
ANR	5451479	ArgumentList			5451258	1					
ANR	5451480	CompoundStatement		60:32:1869:1869	5451258	1					
ANR	5451481	ExpressionStatement	error = false	1380:3:37825:37838	5451258	0	True				
ANR	5451482	AssignmentExpression	error = false		5451258	0		=			
ANR	5451483	Identifier	error		5451258	0					
ANR	5451484	Identifier	false		5451258	1					
ANR	5451485	ElseStatement	else		5451258	0					
ANR	5451486	CompoundStatement		63:9:1910:1910	5451258	0					
ANR	5451487	ContinueStatement	continue ;	1383:3:37866:37874	5451258	0	True				
ANR	5451488	Statement	char	1386:2:37883:37886	5451258	11	True				
ANR	5451489	Statement	*	1386:7:37888:37888	5451258	12	True				
ANR	5451490	Statement	psubsys	1386:8:37889:37895	5451258	13	True				
ANR	5451491	Statement	=	1386:16:37897:37897	5451258	14	True				
ANR	5451492	Statement	const_cast	1386:18:37899:37908	5451258	15	True				
ANR	5451493	Statement	<	1386:28:37909:37909	5451258	16	True				
ANR	5451494	Statement	char	1386:29:37910:37913	5451258	17	True				
ANR	5451495	Statement	*	1386:34:37915:37915	5451258	18	True				
ANR	5451496	Statement	>	1386:35:37916:37916	5451258	19	True				
ANR	5451497	ExpressionStatement	subsys	1386:36:37917:37925	5451258	20	True				
ANR	5451498	Identifier	subsys		5451258	0					
ANR	5451499	SwitchStatement	switch ( real_cmd )		5451258	21					
ANR	5451500	Condition	real_cmd	1387:9:37936:37943	5451258	0	True				
ANR	5451501	Identifier	real_cmd		5451258	0					
ANR	5451502	CompoundStatement		68:19:1995:1995	5451258	1					
ANR	5451503	Label	case VACATE_CLAIM :	1388:2:37950:37967	5451258	0	True				
ANR	5451504	Identifier	VACATE_CLAIM		5451258	0					
ANR	5451505	IfStatement	if ( is_per_claim_startd_cmd )		5451258	1					
ANR	5451506	Condition	is_per_claim_startd_cmd	1389:7:37976:37998	5451258	0	True				
ANR	5451507	Identifier	is_per_claim_startd_cmd		5451258	0					
ANR	5451508	CompoundStatement		70:33:2051:2051	5451258	1					
ANR	5451509	IfStatement	if ( fast )		5451258	0					
ANR	5451510	Condition	fast	1392:8:38092:38095	5451258	0	True				
ANR	5451511	Identifier	fast		5451258	0					
ANR	5451512	CompoundStatement		73:15:2148:2148	5451258	1					
ANR	5451513	ExpressionStatement	my_cmd = VACATE_CLAIM_FAST	1393:5:38106:38132	5451258	0	True				
ANR	5451514	AssignmentExpression	my_cmd = VACATE_CLAIM_FAST		5451258	0		=			
ANR	5451515	Identifier	my_cmd		5451258	0					
ANR	5451516	Identifier	VACATE_CLAIM_FAST		5451258	1					
ANR	5451517	IfStatement	"if ( ! d -> startCommand ( my_cmd , & sock , 0 , & errstack ) )"		5451258	1					
ANR	5451518	Condition	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"	1395:8:38148:38192	5451258	0	True				
ANR	5451519	UnaryOperationExpression	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		5451258	0					
ANR	5451520	UnaryOperator	!		5451258	0					
ANR	5451521	CallExpression	"d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		5451258	1					
ANR	5451522	Callee	d -> startCommand		5451258	0					
ANR	5451523	PtrMemberAccess	d -> startCommand		5451258	0					
ANR	5451524	Identifier	d		5451258	0					
ANR	5451525	Identifier	startCommand		5451258	1					
ANR	5451526	ArgumentList	my_cmd		5451258	1					
ANR	5451527	Argument	my_cmd		5451258	0					
ANR	5451528	Identifier	my_cmd		5451258	0					
ANR	5451529	Argument	& sock		5451258	1					
ANR	5451530	UnaryOperationExpression	& sock		5451258	0					
ANR	5451531	UnaryOperator	&		5451258	0					
ANR	5451532	Identifier	sock		5451258	1					
ANR	5451533	Argument	0		5451258	2					
ANR	5451534	PrimaryExpression	0		5451258	0					
ANR	5451535	Argument	& errstack		5451258	3					
ANR	5451536	UnaryOperationExpression	& errstack		5451258	0					
ANR	5451537	UnaryOperator	&		5451258	0					
ANR	5451538	Identifier	errstack		5451258	1					
ANR	5451539	CompoundStatement		76:55:2244:2244	5451258	1					
ANR	5451540	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1396:5:38202:38260	5451258	0	True				
ANR	5451541	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		5451258	0					
ANR	5451542	Callee	fprintf		5451258	0					
ANR	5451543	Identifier	fprintf		5451258	0					
ANR	5451544	ArgumentList	stderr		5451258	1					
ANR	5451545	Argument	stderr		5451258	0					
ANR	5451546	Identifier	stderr		5451258	0					
ANR	5451547	Argument	"""ERROR\\n%s\\n"""		5451258	1					
ANR	5451548	PrimaryExpression	"""ERROR\\n%s\\n"""		5451258	0					
ANR	5451549	Argument	errstack . getFullText ( true )		5451258	2					
ANR	5451550	CallExpression	errstack . getFullText ( true )		5451258	0					
ANR	5451551	Callee	errstack . getFullText		5451258	0					
ANR	5451552	MemberAccess	errstack . getFullText		5451258	0					
ANR	5451553	Identifier	errstack		5451258	0					
ANR	5451554	Identifier	getFullText		5451258	1					
ANR	5451555	ArgumentList	true		5451258	1					
ANR	5451556	Argument	true		5451258	0					
ANR	5451557	Identifier	true		5451258	0					
ANR	5451558	IfStatement	if ( ! sock . code ( name ) || ! sock . end_of_message ( ) )		5451258	2					
ANR	5451559	Condition	! sock . code ( name ) || ! sock . end_of_message ( )	1398:8:38276:38317	5451258	0	True				
ANR	5451560	OrExpression	! sock . code ( name ) || ! sock . end_of_message ( )		5451258	0		||			
ANR	5451561	UnaryOperationExpression	! sock . code ( name )		5451258	0					
ANR	5451562	UnaryOperator	!		5451258	0					
ANR	5451563	CallExpression	sock . code ( name )		5451258	1					
ANR	5451564	Callee	sock . code		5451258	0					
ANR	5451565	MemberAccess	sock . code		5451258	0					
ANR	5451566	Identifier	sock		5451258	0					
ANR	5451567	Identifier	code		5451258	1					
ANR	5451568	ArgumentList	name		5451258	1					
ANR	5451569	Argument	name		5451258	0					
ANR	5451570	Identifier	name		5451258	0					
ANR	5451571	UnaryOperationExpression	! sock . end_of_message ( )		5451258	1					
ANR	5451572	UnaryOperator	!		5451258	0					
ANR	5451573	CallExpression	sock . end_of_message ( )		5451258	1					
ANR	5451574	Callee	sock . end_of_message		5451258	0					
ANR	5451575	MemberAccess	sock . end_of_message		5451258	0					
ANR	5451576	Identifier	sock		5451258	0					
ANR	5451577	Identifier	end_of_message		5451258	1					
ANR	5451578	ArgumentList			5451258	1					
ANR	5451579	CompoundStatement		79:53:2370:2370	5451258	1					
ANR	5451580	ExpressionStatement	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1399:5:38328:38418	5451258	0	True				
ANR	5451581	CallExpression	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		5451258	0					
ANR	5451582	Callee	fprintf		5451258	0					
ANR	5451583	Identifier	fprintf		5451258	0					
ANR	5451584	ArgumentList	stderr		5451258	1					
ANR	5451585	Argument	stderr		5451258	0					
ANR	5451586	Identifier	stderr		5451258	0					
ANR	5451587	Argument	"""Can't send %s command to %s\\n"""		5451258	1					
ANR	5451588	PrimaryExpression	"""Can't send %s command to %s\\n"""		5451258	0					
ANR	5451589	Argument	cmdToStr ( my_cmd )		5451258	2					
ANR	5451590	CallExpression	cmdToStr ( my_cmd )		5451258	0					
ANR	5451591	Callee	cmdToStr		5451258	0					
ANR	5451592	Identifier	cmdToStr		5451258	0					
ANR	5451593	ArgumentList	my_cmd		5451258	1					
ANR	5451594	Argument	my_cmd		5451258	0					
ANR	5451595	Identifier	my_cmd		5451258	0					
ANR	5451596	Argument	d -> idStr ( )		5451258	3					
ANR	5451597	CallExpression	d -> idStr ( )		5451258	0					
ANR	5451598	Callee	d -> idStr		5451258	0					
ANR	5451599	PtrMemberAccess	d -> idStr		5451258	0					
ANR	5451600	Identifier	d		5451258	0					
ANR	5451601	Identifier	idStr		5451258	1					
ANR	5451602	ArgumentList			5451258	1					
ANR	5451603	ExpressionStatement	all_good = false	1401:5:38425:38441	5451258	1	True				
ANR	5451604	AssignmentExpression	all_good = false		5451258	0		=			
ANR	5451605	Identifier	all_good		5451258	0					
ANR	5451606	Identifier	false		5451258	1					
ANR	5451607	ReturnStatement	return ;	1402:5:38448:38454	5451258	2	True				
ANR	5451608	ElseStatement	else		5451258	0					
ANR	5451609	CompoundStatement		84:11:2516:2516	5451258	0					
ANR	5451610	ExpressionStatement	done = true	1404:5:38474:38485	5451258	0	True				
ANR	5451611	AssignmentExpression	done = true		5451258	0		=			
ANR	5451612	Identifier	done		5451258	0					
ANR	5451613	Identifier	true		5451258	1					
ANR	5451614	ElseStatement	else		5451258	0					
ANR	5451615	CompoundStatement		87:10:2552:2552	5451258	0					
ANR	5451616	IfStatement	if ( fast )		5451258	0					
ANR	5451617	Condition	fast	1407:8:38513:38516	5451258	0	True				
ANR	5451618	Identifier	fast		5451258	0					
ANR	5451619	CompoundStatement		88:15:2569:2569	5451258	1					
ANR	5451620	ExpressionStatement	my_cmd = VACATE_ALL_FAST	1408:5:38527:38551	5451258	0	True				
ANR	5451621	AssignmentExpression	my_cmd = VACATE_ALL_FAST		5451258	0		=			
ANR	5451622	Identifier	my_cmd		5451258	0					
ANR	5451623	Identifier	VACATE_ALL_FAST		5451258	1					
ANR	5451624	ElseStatement	else		5451258	0					
ANR	5451625	CompoundStatement		90:11:2613:2613	5451258	0					
ANR	5451626	ExpressionStatement	my_cmd = VACATE_ALL_CLAIMS	1410:5:38571:38597	5451258	0	True				
ANR	5451627	AssignmentExpression	my_cmd = VACATE_ALL_CLAIMS		5451258	0		=			
ANR	5451628	Identifier	my_cmd		5451258	0					
ANR	5451629	Identifier	VACATE_ALL_CLAIMS		5451258	1					
ANR	5451630	BreakStatement	break ;	1413:3:38613:38618	5451258	2	True				
ANR	5451631	Label	case PCKPT_JOB :	1415:2:38623:38637	5451258	3	True				
ANR	5451632	Identifier	PCKPT_JOB		5451258	0					
ANR	5451633	IfStatement	if ( is_per_claim_startd_cmd )		5451258	4					
ANR	5451634	Condition	is_per_claim_startd_cmd	1416:7:38646:38668	5451258	0	True				
ANR	5451635	Identifier	is_per_claim_startd_cmd		5451258	0					
ANR	5451636	CompoundStatement		97:33:2721:2721	5451258	1					
ANR	5451637	IfStatement	"if ( ! d -> startCommand ( my_cmd , & sock , 0 , & errstack ) )"		5451258	0					
ANR	5451638	Condition	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"	1419:8:38762:38806	5451258	0	True				
ANR	5451639	UnaryOperationExpression	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		5451258	0					
ANR	5451640	UnaryOperator	!		5451258	0					
ANR	5451641	CallExpression	"d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		5451258	1					
ANR	5451642	Callee	d -> startCommand		5451258	0					
ANR	5451643	PtrMemberAccess	d -> startCommand		5451258	0					
ANR	5451644	Identifier	d		5451258	0					
ANR	5451645	Identifier	startCommand		5451258	1					
ANR	5451646	ArgumentList	my_cmd		5451258	1					
ANR	5451647	Argument	my_cmd		5451258	0					
ANR	5451648	Identifier	my_cmd		5451258	0					
ANR	5451649	Argument	& sock		5451258	1					
ANR	5451650	UnaryOperationExpression	& sock		5451258	0					
ANR	5451651	UnaryOperator	&		5451258	0					
ANR	5451652	Identifier	sock		5451258	1					
ANR	5451653	Argument	0		5451258	2					
ANR	5451654	PrimaryExpression	0		5451258	0					
ANR	5451655	Argument	& errstack		5451258	3					
ANR	5451656	UnaryOperationExpression	& errstack		5451258	0					
ANR	5451657	UnaryOperator	&		5451258	0					
ANR	5451658	Identifier	errstack		5451258	1					
ANR	5451659	CompoundStatement		100:56:2859:2859	5451258	1					
ANR	5451660	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1420:5:38817:38876	5451258	0	True				
ANR	5451661	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		5451258	0					
ANR	5451662	Callee	fprintf		5451258	0					
ANR	5451663	Identifier	fprintf		5451258	0					
ANR	5451664	ArgumentList	stderr		5451258	1					
ANR	5451665	Argument	stderr		5451258	0					
ANR	5451666	Identifier	stderr		5451258	0					
ANR	5451667	Argument	"""ERROR\\n%s\\n"""		5451258	1					
ANR	5451668	PrimaryExpression	"""ERROR\\n%s\\n"""		5451258	0					
ANR	5451669	Argument	errstack . getFullText ( true )		5451258	2					
ANR	5451670	CallExpression	errstack . getFullText ( true )		5451258	0					
ANR	5451671	Callee	errstack . getFullText		5451258	0					
ANR	5451672	MemberAccess	errstack . getFullText		5451258	0					
ANR	5451673	Identifier	errstack		5451258	0					
ANR	5451674	Identifier	getFullText		5451258	1					
ANR	5451675	ArgumentList	true		5451258	1					
ANR	5451676	Argument	true		5451258	0					
ANR	5451677	Identifier	true		5451258	0					
ANR	5451678	IfStatement	if ( ! sock . code ( name ) || ! sock . end_of_message ( ) )		5451258	1					
ANR	5451679	Condition	! sock . code ( name ) || ! sock . end_of_message ( )	1422:8:38892:38933	5451258	0	True				
ANR	5451680	OrExpression	! sock . code ( name ) || ! sock . end_of_message ( )		5451258	0		||			
ANR	5451681	UnaryOperationExpression	! sock . code ( name )		5451258	0					
ANR	5451682	UnaryOperator	!		5451258	0					
ANR	5451683	CallExpression	sock . code ( name )		5451258	1					
ANR	5451684	Callee	sock . code		5451258	0					
ANR	5451685	MemberAccess	sock . code		5451258	0					
ANR	5451686	Identifier	sock		5451258	0					
ANR	5451687	Identifier	code		5451258	1					
ANR	5451688	ArgumentList	name		5451258	1					
ANR	5451689	Argument	name		5451258	0					
ANR	5451690	Identifier	name		5451258	0					
ANR	5451691	UnaryOperationExpression	! sock . end_of_message ( )		5451258	1					
ANR	5451692	UnaryOperator	!		5451258	0					
ANR	5451693	CallExpression	sock . end_of_message ( )		5451258	1					
ANR	5451694	Callee	sock . end_of_message		5451258	0					
ANR	5451695	MemberAccess	sock . end_of_message		5451258	0					
ANR	5451696	Identifier	sock		5451258	0					
ANR	5451697	Identifier	end_of_message		5451258	1					
ANR	5451698	ArgumentList			5451258	1					
ANR	5451699	CompoundStatement		103:53:2986:2986	5451258	1					
ANR	5451700	ExpressionStatement	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1423:5:38944:39033	5451258	0	True				
ANR	5451701	CallExpression	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		5451258	0					
ANR	5451702	Callee	fprintf		5451258	0					
ANR	5451703	Identifier	fprintf		5451258	0					
ANR	5451704	ArgumentList	stderr		5451258	1					
ANR	5451705	Argument	stderr		5451258	0					
ANR	5451706	Identifier	stderr		5451258	0					
ANR	5451707	Argument	"""Can't send %s command to %s\\n"""		5451258	1					
ANR	5451708	PrimaryExpression	"""Can't send %s command to %s\\n"""		5451258	0					
ANR	5451709	Argument	cmdToStr ( my_cmd )		5451258	2					
ANR	5451710	CallExpression	cmdToStr ( my_cmd )		5451258	0					
ANR	5451711	Callee	cmdToStr		5451258	0					
ANR	5451712	Identifier	cmdToStr		5451258	0					
ANR	5451713	ArgumentList	my_cmd		5451258	1					
ANR	5451714	Argument	my_cmd		5451258	0					
ANR	5451715	Identifier	my_cmd		5451258	0					
ANR	5451716	Argument	d -> idStr ( )		5451258	3					
ANR	5451717	CallExpression	d -> idStr ( )		5451258	0					
ANR	5451718	Callee	d -> idStr		5451258	0					
ANR	5451719	PtrMemberAccess	d -> idStr		5451258	0					
ANR	5451720	Identifier	d		5451258	0					
ANR	5451721	Identifier	idStr		5451258	1					
ANR	5451722	ArgumentList			5451258	1					
ANR	5451723	ExpressionStatement	all_good = false	1425:5:39040:39056	5451258	1	True				
ANR	5451724	AssignmentExpression	all_good = false		5451258	0		=			
ANR	5451725	Identifier	all_good		5451258	0					
ANR	5451726	Identifier	false		5451258	1					
ANR	5451727	ReturnStatement	return ;	1426:5:39063:39069	5451258	2	True				
ANR	5451728	ElseStatement	else		5451258	0					
ANR	5451729	CompoundStatement		108:11:3131:3131	5451258	0					
ANR	5451730	ExpressionStatement	done = true	1428:5:39089:39100	5451258	0	True				
ANR	5451731	AssignmentExpression	done = true		5451258	0		=			
ANR	5451732	Identifier	done		5451258	0					
ANR	5451733	Identifier	true		5451258	1					
ANR	5451734	ElseStatement	else		5451258	0					
ANR	5451735	CompoundStatement		111:10:3167:3167	5451258	0					
ANR	5451736	ExpressionStatement	my_cmd = PCKPT_ALL_JOBS	1431:4:39124:39147	5451258	0	True				
ANR	5451737	AssignmentExpression	my_cmd = PCKPT_ALL_JOBS		5451258	0		=			
ANR	5451738	Identifier	my_cmd		5451258	0					
ANR	5451739	Identifier	PCKPT_ALL_JOBS		5451258	1					
ANR	5451740	BreakStatement	break ;	1433:3:39157:39162	5451258	5	True				
ANR	5451741	Label	case DAEMON_OFF :	1435:2:39167:39182	5451258	6	True				
ANR	5451742	Identifier	DAEMON_OFF		5451258	0					
ANR	5451743	IfStatement	if ( fast )		5451258	7					
ANR	5451744	Condition	fast	1437:7:39253:39256	5451258	0	True				
ANR	5451745	Identifier	fast		5451258	0					
ANR	5451746	CompoundStatement		118:14:3309:3309	5451258	1					
ANR	5451747	ExpressionStatement	my_cmd = DAEMON_OFF_FAST	1438:4:39266:39290	5451258	0	True				
ANR	5451748	AssignmentExpression	my_cmd = DAEMON_OFF_FAST		5451258	0		=			
ANR	5451749	Identifier	my_cmd		5451258	0					
ANR	5451750	Identifier	DAEMON_OFF_FAST		5451258	1					
ANR	5451751	ElseStatement	else		5451258	0					
ANR	5451752	IfStatement	if ( peaceful_shutdown )		5451258	0					
ANR	5451753	Condition	peaceful_shutdown	1439:14:39306:39322	5451258	0	True				
ANR	5451754	Identifier	peaceful_shutdown		5451258	0					
ANR	5451755	CompoundStatement		120:34:3375:3375	5451258	1					
ANR	5451756	ExpressionStatement	my_cmd = DAEMON_OFF_PEACEFUL	1440:4:39332:39360	5451258	0	True				
ANR	5451757	AssignmentExpression	my_cmd = DAEMON_OFF_PEACEFUL		5451258	0		=			
ANR	5451758	Identifier	my_cmd		5451258	0					
ANR	5451759	Identifier	DAEMON_OFF_PEACEFUL		5451258	1					
ANR	5451760	IfStatement	"if ( ! d -> startCommand ( my_cmd , & sock , 0 , & errstack ) )"		5451258	8					
ANR	5451761	Condition	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"	1442:7:39374:39419	5451258	0	True				
ANR	5451762	UnaryOperationExpression	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		5451258	0					
ANR	5451763	UnaryOperator	!		5451258	0					
ANR	5451764	CallExpression	"d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		5451258	1					
ANR	5451765	Callee	d -> startCommand		5451258	0					
ANR	5451766	PtrMemberAccess	d -> startCommand		5451258	0					
ANR	5451767	Identifier	d		5451258	0					
ANR	5451768	Identifier	startCommand		5451258	1					
ANR	5451769	ArgumentList	my_cmd		5451258	1					
ANR	5451770	Argument	my_cmd		5451258	0					
ANR	5451771	Identifier	my_cmd		5451258	0					
ANR	5451772	Argument	& sock		5451258	1					
ANR	5451773	UnaryOperationExpression	& sock		5451258	0					
ANR	5451774	UnaryOperator	&		5451258	0					
ANR	5451775	Identifier	sock		5451258	1					
ANR	5451776	Argument	0		5451258	2					
ANR	5451777	PrimaryExpression	0		5451258	0					
ANR	5451778	Argument	& errstack		5451258	3					
ANR	5451779	UnaryOperationExpression	& errstack		5451258	0					
ANR	5451780	UnaryOperator	&		5451258	0					
ANR	5451781	Identifier	errstack		5451258	1					
ANR	5451782	CompoundStatement		123:56:3472:3472	5451258	1					
ANR	5451783	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1443:4:39429:39489	5451258	0	True				
ANR	5451784	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		5451258	0					
ANR	5451785	Callee	fprintf		5451258	0					
ANR	5451786	Identifier	fprintf		5451258	0					
ANR	5451787	ArgumentList	stderr		5451258	1					
ANR	5451788	Argument	stderr		5451258	0					
ANR	5451789	Identifier	stderr		5451258	0					
ANR	5451790	Argument	"""ERROR\\n%s\\n"""		5451258	1					
ANR	5451791	PrimaryExpression	"""ERROR\\n%s\\n"""		5451258	0					
ANR	5451792	Argument	errstack . getFullText ( true )		5451258	2					
ANR	5451793	CallExpression	errstack . getFullText ( true )		5451258	0					
ANR	5451794	Callee	errstack . getFullText		5451258	0					
ANR	5451795	MemberAccess	errstack . getFullText		5451258	0					
ANR	5451796	Identifier	errstack		5451258	0					
ANR	5451797	Identifier	getFullText		5451258	1					
ANR	5451798	ArgumentList	true		5451258	1					
ANR	5451799	Argument	true		5451258	0					
ANR	5451800	Identifier	true		5451258	0					
ANR	5451801	IfStatement	if ( ! sock . code ( psubsys ) || ! sock . end_of_message ( ) )		5451258	9					
ANR	5451802	Condition	! sock . code ( psubsys ) || ! sock . end_of_message ( )	1445:7:39503:39549	5451258	0	True				
ANR	5451803	OrExpression	! sock . code ( psubsys ) || ! sock . end_of_message ( )		5451258	0		||			
ANR	5451804	UnaryOperationExpression	! sock . code ( psubsys )		5451258	0					
ANR	5451805	UnaryOperator	!		5451258	0					
ANR	5451806	CallExpression	sock . code ( psubsys )		5451258	1					
ANR	5451807	Callee	sock . code		5451258	0					
ANR	5451808	MemberAccess	sock . code		5451258	0					
ANR	5451809	Identifier	sock		5451258	0					
ANR	5451810	Identifier	code		5451258	1					
ANR	5451811	ArgumentList	psubsys		5451258	1					
ANR	5451812	Argument	psubsys		5451258	0					
ANR	5451813	Identifier	psubsys		5451258	0					
ANR	5451814	UnaryOperationExpression	! sock . end_of_message ( )		5451258	1					
ANR	5451815	UnaryOperator	!		5451258	0					
ANR	5451816	CallExpression	sock . end_of_message ( )		5451258	1					
ANR	5451817	Callee	sock . end_of_message		5451258	0					
ANR	5451818	MemberAccess	sock . end_of_message		5451258	0					
ANR	5451819	Identifier	sock		5451258	0					
ANR	5451820	Identifier	end_of_message		5451258	1					
ANR	5451821	ArgumentList			5451258	1					
ANR	5451822	CompoundStatement		126:57:3602:3602	5451258	1					
ANR	5451823	ExpressionStatement	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1446:4:39559:39646	5451258	0	True				
ANR	5451824	CallExpression	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		5451258	0					
ANR	5451825	Callee	fprintf		5451258	0					
ANR	5451826	Identifier	fprintf		5451258	0					
ANR	5451827	ArgumentList	stderr		5451258	1					
ANR	5451828	Argument	stderr		5451258	0					
ANR	5451829	Identifier	stderr		5451258	0					
ANR	5451830	Argument	"""Can't send %s command to %s\\n"""		5451258	1					
ANR	5451831	PrimaryExpression	"""Can't send %s command to %s\\n"""		5451258	0					
ANR	5451832	Argument	cmdToStr ( my_cmd )		5451258	2					
ANR	5451833	CallExpression	cmdToStr ( my_cmd )		5451258	0					
ANR	5451834	Callee	cmdToStr		5451258	0					
ANR	5451835	Identifier	cmdToStr		5451258	0					
ANR	5451836	ArgumentList	my_cmd		5451258	1					
ANR	5451837	Argument	my_cmd		5451258	0					
ANR	5451838	Identifier	my_cmd		5451258	0					
ANR	5451839	Argument	d -> idStr ( )		5451258	3					
ANR	5451840	CallExpression	d -> idStr ( )		5451258	0					
ANR	5451841	Callee	d -> idStr		5451258	0					
ANR	5451842	PtrMemberAccess	d -> idStr		5451258	0					
ANR	5451843	Identifier	d		5451258	0					
ANR	5451844	Identifier	idStr		5451258	1					
ANR	5451845	ArgumentList			5451258	1					
ANR	5451846	ExpressionStatement	all_good = false	1448:4:39652:39668	5451258	1	True				
ANR	5451847	AssignmentExpression	all_good = false		5451258	0		=			
ANR	5451848	Identifier	all_good		5451258	0					
ANR	5451849	Identifier	false		5451258	1					
ANR	5451850	ReturnStatement	return ;	1449:4:39674:39680	5451258	2	True				
ANR	5451851	ElseStatement	else		5451258	0					
ANR	5451852	CompoundStatement		131:10:3741:3741	5451258	0					
ANR	5451853	ExpressionStatement	done = true	1451:4:39698:39709	5451258	0	True				
ANR	5451854	AssignmentExpression	done = true		5451258	0		=			
ANR	5451855	Identifier	done		5451258	0					
ANR	5451856	Identifier	true		5451258	1					
ANR	5451857	BreakStatement	break ;	1453:3:39719:39724	5451258	10	True				
ANR	5451858	Label	case DAEMON_ON :	1455:2:39729:39743	5451258	11	True				
ANR	5451859	Identifier	DAEMON_ON		5451258	0					
ANR	5451860	IfStatement	"if ( ! d -> startCommand ( my_cmd , & sock , 0 , & errstack ) )"		5451258	12					
ANR	5451861	Condition	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"	1456:7:39752:39796	5451258	0	True				
ANR	5451862	UnaryOperationExpression	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		5451258	0					
ANR	5451863	UnaryOperator	!		5451258	0					
ANR	5451864	CallExpression	"d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		5451258	1					
ANR	5451865	Callee	d -> startCommand		5451258	0					
ANR	5451866	PtrMemberAccess	d -> startCommand		5451258	0					
ANR	5451867	Identifier	d		5451258	0					
ANR	5451868	Identifier	startCommand		5451258	1					
ANR	5451869	ArgumentList	my_cmd		5451258	1					
ANR	5451870	Argument	my_cmd		5451258	0					
ANR	5451871	Identifier	my_cmd		5451258	0					
ANR	5451872	Argument	& sock		5451258	1					
ANR	5451873	UnaryOperationExpression	& sock		5451258	0					
ANR	5451874	UnaryOperator	&		5451258	0					
ANR	5451875	Identifier	sock		5451258	1					
ANR	5451876	Argument	0		5451258	2					
ANR	5451877	PrimaryExpression	0		5451258	0					
ANR	5451878	Argument	& errstack		5451258	3					
ANR	5451879	UnaryOperationExpression	& errstack		5451258	0					
ANR	5451880	UnaryOperator	&		5451258	0					
ANR	5451881	Identifier	errstack		5451258	1					
ANR	5451882	CompoundStatement		137:55:3849:3849	5451258	1					
ANR	5451883	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1457:4:39806:39866	5451258	0	True				
ANR	5451884	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		5451258	0					
ANR	5451885	Callee	fprintf		5451258	0					
ANR	5451886	Identifier	fprintf		5451258	0					
ANR	5451887	ArgumentList	stderr		5451258	1					
ANR	5451888	Argument	stderr		5451258	0					
ANR	5451889	Identifier	stderr		5451258	0					
ANR	5451890	Argument	"""ERROR\\n%s\\n"""		5451258	1					
ANR	5451891	PrimaryExpression	"""ERROR\\n%s\\n"""		5451258	0					
ANR	5451892	Argument	errstack . getFullText ( true )		5451258	2					
ANR	5451893	CallExpression	errstack . getFullText ( true )		5451258	0					
ANR	5451894	Callee	errstack . getFullText		5451258	0					
ANR	5451895	MemberAccess	errstack . getFullText		5451258	0					
ANR	5451896	Identifier	errstack		5451258	0					
ANR	5451897	Identifier	getFullText		5451258	1					
ANR	5451898	ArgumentList	true		5451258	1					
ANR	5451899	Argument	true		5451258	0					
ANR	5451900	Identifier	true		5451258	0					
ANR	5451901	IfStatement	if ( ! sock . code ( psubsys ) || ! sock . end_of_message ( ) )		5451258	13					
ANR	5451902	Condition	! sock . code ( psubsys ) || ! sock . end_of_message ( )	1459:7:39880:39926	5451258	0	True				
ANR	5451903	OrExpression	! sock . code ( psubsys ) || ! sock . end_of_message ( )		5451258	0		||			
ANR	5451904	UnaryOperationExpression	! sock . code ( psubsys )		5451258	0					
ANR	5451905	UnaryOperator	!		5451258	0					
ANR	5451906	CallExpression	sock . code ( psubsys )		5451258	1					
ANR	5451907	Callee	sock . code		5451258	0					
ANR	5451908	MemberAccess	sock . code		5451258	0					
ANR	5451909	Identifier	sock		5451258	0					
ANR	5451910	Identifier	code		5451258	1					
ANR	5451911	ArgumentList	psubsys		5451258	1					
ANR	5451912	Argument	psubsys		5451258	0					
ANR	5451913	Identifier	psubsys		5451258	0					
ANR	5451914	UnaryOperationExpression	! sock . end_of_message ( )		5451258	1					
ANR	5451915	UnaryOperator	!		5451258	0					
ANR	5451916	CallExpression	sock . end_of_message ( )		5451258	1					
ANR	5451917	Callee	sock . end_of_message		5451258	0					
ANR	5451918	MemberAccess	sock . end_of_message		5451258	0					
ANR	5451919	Identifier	sock		5451258	0					
ANR	5451920	Identifier	end_of_message		5451258	1					
ANR	5451921	ArgumentList			5451258	1					
ANR	5451922	CompoundStatement		140:57:3979:3979	5451258	1					
ANR	5451923	ExpressionStatement	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1460:4:39936:40023	5451258	0	True				
ANR	5451924	CallExpression	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		5451258	0					
ANR	5451925	Callee	fprintf		5451258	0					
ANR	5451926	Identifier	fprintf		5451258	0					
ANR	5451927	ArgumentList	stderr		5451258	1					
ANR	5451928	Argument	stderr		5451258	0					
ANR	5451929	Identifier	stderr		5451258	0					
ANR	5451930	Argument	"""Can't send %s command to %s\\n"""		5451258	1					
ANR	5451931	PrimaryExpression	"""Can't send %s command to %s\\n"""		5451258	0					
ANR	5451932	Argument	cmdToStr ( my_cmd )		5451258	2					
ANR	5451933	CallExpression	cmdToStr ( my_cmd )		5451258	0					
ANR	5451934	Callee	cmdToStr		5451258	0					
ANR	5451935	Identifier	cmdToStr		5451258	0					
ANR	5451936	ArgumentList	my_cmd		5451258	1					
ANR	5451937	Argument	my_cmd		5451258	0					
ANR	5451938	Identifier	my_cmd		5451258	0					
ANR	5451939	Argument	d -> idStr ( )		5451258	3					
ANR	5451940	CallExpression	d -> idStr ( )		5451258	0					
ANR	5451941	Callee	d -> idStr		5451258	0					
ANR	5451942	PtrMemberAccess	d -> idStr		5451258	0					
ANR	5451943	Identifier	d		5451258	0					
ANR	5451944	Identifier	idStr		5451258	1					
ANR	5451945	ArgumentList			5451258	1					
ANR	5451946	ExpressionStatement	all_good = false	1462:4:40029:40045	5451258	1	True				
ANR	5451947	AssignmentExpression	all_good = false		5451258	0		=			
ANR	5451948	Identifier	all_good		5451258	0					
ANR	5451949	Identifier	false		5451258	1					
ANR	5451950	ReturnStatement	return ;	1463:4:40051:40057	5451258	2	True				
ANR	5451951	ElseStatement	else		5451258	0					
ANR	5451952	CompoundStatement		145:10:4118:4118	5451258	0					
ANR	5451953	ExpressionStatement	done = true	1465:4:40075:40086	5451258	0	True				
ANR	5451954	AssignmentExpression	done = true		5451258	0		=			
ANR	5451955	Identifier	done		5451258	0					
ANR	5451956	Identifier	true		5451258	1					
ANR	5451957	BreakStatement	break ;	1467:3:40096:40101	5451258	14	True				
ANR	5451958	Label	case RESTART :	1469:2:40106:40118	5451258	15	True				
ANR	5451959	Identifier	RESTART		5451258	0					
ANR	5451960	IfStatement	if ( peaceful_shutdown )		5451258	16					
ANR	5451961	Condition	peaceful_shutdown	1470:7:40127:40143	5451258	0	True				
ANR	5451962	Identifier	peaceful_shutdown		5451258	0					
ANR	5451963	CompoundStatement		151:27:4196:4196	5451258	1					
ANR	5451964	ExpressionStatement	my_cmd = RESTART_PEACEFUL	1471:4:40153:40178	5451258	0	True				
ANR	5451965	AssignmentExpression	my_cmd = RESTART_PEACEFUL		5451258	0		=			
ANR	5451966	Identifier	my_cmd		5451258	0					
ANR	5451967	Identifier	RESTART_PEACEFUL		5451258	1					
ANR	5451968	BreakStatement	break ;	1473:3:40188:40193	5451258	17	True				
ANR	5451969	Label	case DAEMONS_OFF :	1475:2:40198:40214	5451258	18	True				
ANR	5451970	Identifier	DAEMONS_OFF		5451258	0					
ANR	5451971	IfStatement	if ( fast )		5451258	19					
ANR	5451972	Condition	fast	1477:7:40285:40288	5451258	0	True				
ANR	5451973	Identifier	fast		5451258	0					
ANR	5451974	CompoundStatement		158:14:4341:4341	5451258	1					
ANR	5451975	ExpressionStatement	my_cmd = DAEMONS_OFF_FAST	1478:4:40298:40323	5451258	0	True				
ANR	5451976	AssignmentExpression	my_cmd = DAEMONS_OFF_FAST		5451258	0		=			
ANR	5451977	Identifier	my_cmd		5451258	0					
ANR	5451978	Identifier	DAEMONS_OFF_FAST		5451258	1					
ANR	5451979	ElseStatement	else		5451258	0					
ANR	5451980	IfStatement	if ( peaceful_shutdown )		5451258	0					
ANR	5451981	Condition	peaceful_shutdown	1479:14:40339:40355	5451258	0	True				
ANR	5451982	Identifier	peaceful_shutdown		5451258	0					
ANR	5451983	CompoundStatement		160:34:4408:4408	5451258	1					
ANR	5451984	ExpressionStatement	my_cmd = DAEMONS_OFF_PEACEFUL	1480:4:40365:40394	5451258	0	True				
ANR	5451985	AssignmentExpression	my_cmd = DAEMONS_OFF_PEACEFUL		5451258	0		=			
ANR	5451986	Identifier	my_cmd		5451258	0					
ANR	5451987	Identifier	DAEMONS_OFF_PEACEFUL		5451258	1					
ANR	5451988	IfStatement	if ( d_type != DT_MASTER )		5451258	20					
ANR	5451989	Condition	d_type != DT_MASTER	1482:7:40408:40426	5451258	0	True				
ANR	5451990	EqualityExpression	d_type != DT_MASTER		5451258	0		!=			
ANR	5451991	Identifier	d_type		5451258	0					
ANR	5451992	Identifier	DT_MASTER		5451258	1					
ANR	5451993	CompoundStatement		163:29:4479:4479	5451258	1					
ANR	5451994	IfStatement	if ( fast )		5451258	0					
ANR	5451995	Condition	fast	1487:8:40664:40667	5451258	0	True				
ANR	5451996	Identifier	fast		5451258	0					
ANR	5451997	CompoundStatement		168:15:4720:4720	5451258	1					
ANR	5451998	ExpressionStatement	my_cmd = DC_OFF_FAST	1488:5:40678:40698	5451258	0	True				
ANR	5451999	AssignmentExpression	my_cmd = DC_OFF_FAST		5451258	0		=			
ANR	5452000	Identifier	my_cmd		5451258	0					
ANR	5452001	Identifier	DC_OFF_FAST		5451258	1					
ANR	5452002	ElseStatement	else		5451258	0					
ANR	5452003	IfStatement	if ( peaceful_shutdown )		5451258	0					
ANR	5452004	Condition	peaceful_shutdown	1489:15:40715:40731	5451258	0	True				
ANR	5452005	Identifier	peaceful_shutdown		5451258	0					
ANR	5452006	CompoundStatement		170:35:4784:4784	5451258	1					
ANR	5452007	ExpressionStatement	my_cmd = DC_OFF_PEACEFUL	1490:5:40742:40766	5451258	0	True				
ANR	5452008	AssignmentExpression	my_cmd = DC_OFF_PEACEFUL		5451258	0		=			
ANR	5452009	Identifier	my_cmd		5451258	0					
ANR	5452010	Identifier	DC_OFF_PEACEFUL		5451258	1					
ANR	5452011	ElseStatement	else		5451258	0					
ANR	5452012	CompoundStatement		172:11:4828:4828	5451258	0					
ANR	5452013	ExpressionStatement	my_cmd = DC_OFF_GRACEFUL	1492:5:40786:40810	5451258	0	True				
ANR	5452014	AssignmentExpression	my_cmd = DC_OFF_GRACEFUL		5451258	0		=			
ANR	5452015	Identifier	my_cmd		5451258	0					
ANR	5452016	Identifier	DC_OFF_GRACEFUL		5451258	1					
ANR	5452017	BreakStatement	break ;	1495:3:40826:40831	5451258	21	True				
ANR	5452018	Label	case DC_OFF_GRACEFUL :	1497:2:40836:40856	5451258	22	True				
ANR	5452019	Identifier	DC_OFF_GRACEFUL		5451258	0					
ANR	5452020	IfStatement	if ( fast )		5451258	23					
ANR	5452021	Condition	fast	1499:7:40927:40930	5451258	0	True				
ANR	5452022	Identifier	fast		5451258	0					
ANR	5452023	CompoundStatement		180:14:4983:4983	5451258	1					
ANR	5452024	ExpressionStatement	my_cmd = DC_OFF_FAST	1500:4:40940:40960	5451258	0	True				
ANR	5452025	AssignmentExpression	my_cmd = DC_OFF_FAST		5451258	0		=			
ANR	5452026	Identifier	my_cmd		5451258	0					
ANR	5452027	Identifier	DC_OFF_FAST		5451258	1					
ANR	5452028	ElseStatement	else		5451258	0					
ANR	5452029	IfStatement	if ( peaceful_shutdown )		5451258	0					
ANR	5452030	Condition	peaceful_shutdown	1501:14:40976:40992	5451258	0	True				
ANR	5452031	Identifier	peaceful_shutdown		5451258	0					
ANR	5452032	CompoundStatement		182:34:5045:5045	5451258	1					
ANR	5452033	ExpressionStatement	my_cmd = DC_OFF_PEACEFUL	1502:4:41002:41026	5451258	0	True				
ANR	5452034	AssignmentExpression	my_cmd = DC_OFF_PEACEFUL		5451258	0		=			
ANR	5452035	Identifier	my_cmd		5451258	0					
ANR	5452036	Identifier	DC_OFF_PEACEFUL		5451258	1					
ANR	5452037	BreakStatement	break ;	1504:3:41036:41041	5451258	24	True				
ANR	5452038	Label	case DC_RECONFIG_FULL :	1506:2:41046:41067	5451258	25	True				
ANR	5452039	Identifier	DC_RECONFIG_FULL		5451258	0					
ANR	5452040	BreakStatement	break ;	1508:3:41093:41098	5451258	26	True				
ANR	5452041	Label	case SET_SHUTDOWN_PROGRAM :	1509:2:41102:41127	5451258	27	True				
ANR	5452042	Identifier	SET_SHUTDOWN_PROGRAM		5451258	0					
ANR	5452043	CompoundStatement		191:2:5180:5180	5451258	28					
ANR	5452044	Statement	char	1511:3:41136:41139	5451258	0	True				
ANR	5452045	Statement	*	1511:8:41141:41141	5451258	1	True				
ANR	5452046	Statement	pexec	1511:9:41142:41146	5451258	2	True				
ANR	5452047	Statement	=	1511:15:41148:41148	5451258	3	True				
ANR	5452048	Statement	const_cast	1511:17:41150:41159	5451258	4	True				
ANR	5452049	Statement	<	1511:27:41160:41160	5451258	5	True				
ANR	5452050	Statement	char	1511:28:41161:41164	5451258	6	True				
ANR	5452051	Statement	*	1511:33:41166:41166	5451258	7	True				
ANR	5452052	Statement	>	1511:34:41167:41167	5451258	8	True				
ANR	5452053	ExpressionStatement	exec_program	1511:35:41168:41182	5451258	9	True				
ANR	5452054	Identifier	exec_program		5451258	0					
ANR	5452055	IfStatement	"if ( ! d -> startCommand ( my_cmd , & sock , 0 , & errstack ) )"		5451258	10					
ANR	5452056	Condition	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"	1512:7:41192:41236	5451258	0	True				
ANR	5452057	UnaryOperationExpression	"! d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		5451258	0					
ANR	5452058	UnaryOperator	!		5451258	0					
ANR	5452059	CallExpression	"d -> startCommand ( my_cmd , & sock , 0 , & errstack )"		5451258	1					
ANR	5452060	Callee	d -> startCommand		5451258	0					
ANR	5452061	PtrMemberAccess	d -> startCommand		5451258	0					
ANR	5452062	Identifier	d		5451258	0					
ANR	5452063	Identifier	startCommand		5451258	1					
ANR	5452064	ArgumentList	my_cmd		5451258	1					
ANR	5452065	Argument	my_cmd		5451258	0					
ANR	5452066	Identifier	my_cmd		5451258	0					
ANR	5452067	Argument	& sock		5451258	1					
ANR	5452068	UnaryOperationExpression	& sock		5451258	0					
ANR	5452069	UnaryOperator	&		5451258	0					
ANR	5452070	Identifier	sock		5451258	1					
ANR	5452071	Argument	0		5451258	2					
ANR	5452072	PrimaryExpression	0		5451258	0					
ANR	5452073	Argument	& errstack		5451258	3					
ANR	5452074	UnaryOperationExpression	& errstack		5451258	0					
ANR	5452075	UnaryOperator	&		5451258	0					
ANR	5452076	Identifier	errstack		5451258	1					
ANR	5452077	CompoundStatement		193:55:5289:5289	5451258	1					
ANR	5452078	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1513:4:41246:41306	5451258	0	True				
ANR	5452079	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		5451258	0					
ANR	5452080	Callee	fprintf		5451258	0					
ANR	5452081	Identifier	fprintf		5451258	0					
ANR	5452082	ArgumentList	stderr		5451258	1					
ANR	5452083	Argument	stderr		5451258	0					
ANR	5452084	Identifier	stderr		5451258	0					
ANR	5452085	Argument	"""ERROR\\n%s\\n"""		5451258	1					
ANR	5452086	PrimaryExpression	"""ERROR\\n%s\\n"""		5451258	0					
ANR	5452087	Argument	errstack . getFullText ( true )		5451258	2					
ANR	5452088	CallExpression	errstack . getFullText ( true )		5451258	0					
ANR	5452089	Callee	errstack . getFullText		5451258	0					
ANR	5452090	MemberAccess	errstack . getFullText		5451258	0					
ANR	5452091	Identifier	errstack		5451258	0					
ANR	5452092	Identifier	getFullText		5451258	1					
ANR	5452093	ArgumentList	true		5451258	1					
ANR	5452094	Argument	true		5451258	0					
ANR	5452095	Identifier	true		5451258	0					
ANR	5452096	IfStatement	if ( ! sock . code ( pexec ) || ! sock . end_of_message ( ) )		5451258	11					
ANR	5452097	Condition	! sock . code ( pexec ) || ! sock . end_of_message ( )	1515:7:41320:41364	5451258	0	True				
ANR	5452098	OrExpression	! sock . code ( pexec ) || ! sock . end_of_message ( )		5451258	0		||			
ANR	5452099	UnaryOperationExpression	! sock . code ( pexec )		5451258	0					
ANR	5452100	UnaryOperator	!		5451258	0					
ANR	5452101	CallExpression	sock . code ( pexec )		5451258	1					
ANR	5452102	Callee	sock . code		5451258	0					
ANR	5452103	MemberAccess	sock . code		5451258	0					
ANR	5452104	Identifier	sock		5451258	0					
ANR	5452105	Identifier	code		5451258	1					
ANR	5452106	ArgumentList	pexec		5451258	1					
ANR	5452107	Argument	pexec		5451258	0					
ANR	5452108	Identifier	pexec		5451258	0					
ANR	5452109	UnaryOperationExpression	! sock . end_of_message ( )		5451258	1					
ANR	5452110	UnaryOperator	!		5451258	0					
ANR	5452111	CallExpression	sock . end_of_message ( )		5451258	1					
ANR	5452112	Callee	sock . end_of_message		5451258	0					
ANR	5452113	MemberAccess	sock . end_of_message		5451258	0					
ANR	5452114	Identifier	sock		5451258	0					
ANR	5452115	Identifier	end_of_message		5451258	1					
ANR	5452116	ArgumentList			5451258	1					
ANR	5452117	CompoundStatement		196:55:5417:5417	5451258	1					
ANR	5452118	ExpressionStatement	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1516:4:41374:41461	5451258	0	True				
ANR	5452119	CallExpression	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		5451258	0					
ANR	5452120	Callee	fprintf		5451258	0					
ANR	5452121	Identifier	fprintf		5451258	0					
ANR	5452122	ArgumentList	stderr		5451258	1					
ANR	5452123	Argument	stderr		5451258	0					
ANR	5452124	Identifier	stderr		5451258	0					
ANR	5452125	Argument	"""Can't send %s command to %s\\n"""		5451258	1					
ANR	5452126	PrimaryExpression	"""Can't send %s command to %s\\n"""		5451258	0					
ANR	5452127	Argument	cmdToStr ( my_cmd )		5451258	2					
ANR	5452128	CallExpression	cmdToStr ( my_cmd )		5451258	0					
ANR	5452129	Callee	cmdToStr		5451258	0					
ANR	5452130	Identifier	cmdToStr		5451258	0					
ANR	5452131	ArgumentList	my_cmd		5451258	1					
ANR	5452132	Argument	my_cmd		5451258	0					
ANR	5452133	Identifier	my_cmd		5451258	0					
ANR	5452134	Argument	d -> idStr ( )		5451258	3					
ANR	5452135	CallExpression	d -> idStr ( )		5451258	0					
ANR	5452136	Callee	d -> idStr		5451258	0					
ANR	5452137	PtrMemberAccess	d -> idStr		5451258	0					
ANR	5452138	Identifier	d		5451258	0					
ANR	5452139	Identifier	idStr		5451258	1					
ANR	5452140	ArgumentList			5451258	1					
ANR	5452141	ExpressionStatement	all_good = false	1518:4:41467:41483	5451258	1	True				
ANR	5452142	AssignmentExpression	all_good = false		5451258	0		=			
ANR	5452143	Identifier	all_good		5451258	0					
ANR	5452144	Identifier	false		5451258	1					
ANR	5452145	ReturnStatement	return ;	1519:4:41489:41495	5451258	2	True				
ANR	5452146	ElseStatement	else		5451258	0					
ANR	5452147	CompoundStatement		201:10:5556:5556	5451258	0					
ANR	5452148	ExpressionStatement	done = true	1521:4:41513:41524	5451258	0	True				
ANR	5452149	AssignmentExpression	done = true		5451258	0		=			
ANR	5452150	Identifier	done		5451258	0					
ANR	5452151	Identifier	true		5451258	1					
ANR	5452152	BreakStatement	break ;	1523:3:41534:41539	5451258	12	True				
ANR	5452153	Label	default :	1526:2:41548:41555	5451258	29	True				
ANR	5452154	Identifier	default		5451258	0					
ANR	5452155	BreakStatement	break ;	1527:3:41560:41565	5451258	30	True				
ANR	5452156	IfStatement	if ( ! done )		5451258	22					
ANR	5452157	Condition	! done	1530:6:41578:41582	5451258	0	True				
ANR	5452158	UnaryOperationExpression	! done		5451258	0					
ANR	5452159	UnaryOperator	!		5451258	0					
ANR	5452160	Identifier	done		5451258	1					
ANR	5452161	CompoundStatement		211:14:5635:5635	5451258	1					
ANR	5452162	IfStatement	"if ( ! d -> sendCommand ( my_cmd , & sock , 0 , & errstack ) )"		5451258	0					
ANR	5452163	Condition	"! d -> sendCommand ( my_cmd , & sock , 0 , & errstack )"	1531:7:41595:41638	5451258	0	True				
ANR	5452164	UnaryOperationExpression	"! d -> sendCommand ( my_cmd , & sock , 0 , & errstack )"		5451258	0					
ANR	5452165	UnaryOperator	!		5451258	0					
ANR	5452166	CallExpression	"d -> sendCommand ( my_cmd , & sock , 0 , & errstack )"		5451258	1					
ANR	5452167	Callee	d -> sendCommand		5451258	0					
ANR	5452168	PtrMemberAccess	d -> sendCommand		5451258	0					
ANR	5452169	Identifier	d		5451258	0					
ANR	5452170	Identifier	sendCommand		5451258	1					
ANR	5452171	ArgumentList	my_cmd		5451258	1					
ANR	5452172	Argument	my_cmd		5451258	0					
ANR	5452173	Identifier	my_cmd		5451258	0					
ANR	5452174	Argument	& sock		5451258	1					
ANR	5452175	UnaryOperationExpression	& sock		5451258	0					
ANR	5452176	UnaryOperator	&		5451258	0					
ANR	5452177	Identifier	sock		5451258	1					
ANR	5452178	Argument	0		5451258	2					
ANR	5452179	PrimaryExpression	0		5451258	0					
ANR	5452180	Argument	& errstack		5451258	3					
ANR	5452181	UnaryOperationExpression	& errstack		5451258	0					
ANR	5452182	UnaryOperator	&		5451258	0					
ANR	5452183	Identifier	errstack		5451258	1					
ANR	5452184	CompoundStatement		212:54:5691:5691	5451258	1					
ANR	5452185	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1532:4:41648:41708	5451258	0	True				
ANR	5452186	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		5451258	0					
ANR	5452187	Callee	fprintf		5451258	0					
ANR	5452188	Identifier	fprintf		5451258	0					
ANR	5452189	ArgumentList	stderr		5451258	1					
ANR	5452190	Argument	stderr		5451258	0					
ANR	5452191	Identifier	stderr		5451258	0					
ANR	5452192	Argument	"""ERROR\\n%s\\n"""		5451258	1					
ANR	5452193	PrimaryExpression	"""ERROR\\n%s\\n"""		5451258	0					
ANR	5452194	Argument	errstack . getFullText ( true )		5451258	2					
ANR	5452195	CallExpression	errstack . getFullText ( true )		5451258	0					
ANR	5452196	Callee	errstack . getFullText		5451258	0					
ANR	5452197	MemberAccess	errstack . getFullText		5451258	0					
ANR	5452198	Identifier	errstack		5451258	0					
ANR	5452199	Identifier	getFullText		5451258	1					
ANR	5452200	ArgumentList	true		5451258	1					
ANR	5452201	Argument	true		5451258	0					
ANR	5452202	Identifier	true		5451258	0					
ANR	5452203	ExpressionStatement	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1533:4:41714:41802	5451258	1	True				
ANR	5452204	CallExpression	"fprintf ( stderr , ""Can't send %s command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		5451258	0					
ANR	5452205	Callee	fprintf		5451258	0					
ANR	5452206	Identifier	fprintf		5451258	0					
ANR	5452207	ArgumentList	stderr		5451258	1					
ANR	5452208	Argument	stderr		5451258	0					
ANR	5452209	Identifier	stderr		5451258	0					
ANR	5452210	Argument	"""Can't send %s command to %s\\n"""		5451258	1					
ANR	5452211	PrimaryExpression	"""Can't send %s command to %s\\n"""		5451258	0					
ANR	5452212	Argument	cmdToStr ( my_cmd )		5451258	2					
ANR	5452213	CallExpression	cmdToStr ( my_cmd )		5451258	0					
ANR	5452214	Callee	cmdToStr		5451258	0					
ANR	5452215	Identifier	cmdToStr		5451258	0					
ANR	5452216	ArgumentList	my_cmd		5451258	1					
ANR	5452217	Argument	my_cmd		5451258	0					
ANR	5452218	Identifier	my_cmd		5451258	0					
ANR	5452219	Argument	d -> idStr ( )		5451258	3					
ANR	5452220	CallExpression	d -> idStr ( )		5451258	0					
ANR	5452221	Callee	d -> idStr		5451258	0					
ANR	5452222	PtrMemberAccess	d -> idStr		5451258	0					
ANR	5452223	Identifier	d		5451258	0					
ANR	5452224	Identifier	idStr		5451258	1					
ANR	5452225	ArgumentList			5451258	1					
ANR	5452226	ExpressionStatement	all_good = false	1535:4:41808:41824	5451258	2	True				
ANR	5452227	AssignmentExpression	all_good = false		5451258	0		=			
ANR	5452228	Identifier	all_good		5451258	0					
ANR	5452229	Identifier	false		5451258	1					
ANR	5452230	ReturnStatement	return ;	1536:4:41830:41836	5451258	3	True				
ANR	5452231	IfStatement	if ( cmd == RESTART )		5451258	23					
ANR	5452232	Condition	cmd == RESTART	1543:6:42006:42019	5451258	0	True				
ANR	5452233	EqualityExpression	cmd == RESTART		5451258	0		==			
ANR	5452234	Identifier	cmd		5451258	0					
ANR	5452235	Identifier	RESTART		5451258	1					
ANR	5452236	CompoundStatement		224:23:6072:6072	5451258	1					
ANR	5452237	ExpressionStatement	my_cmd = RESTART	1544:3:42028:42044	5451258	0	True				
ANR	5452238	AssignmentExpression	my_cmd = RESTART		5451258	0		=			
ANR	5452239	Identifier	my_cmd		5451258	0					
ANR	5452240	Identifier	RESTART		5451258	1					
ANR	5452241	IfStatement	if ( my_cmd == DAEMON_ON || my_cmd == DAEMON_OFF || my_cmd == DAEMON_OFF_FAST || ( ( my_cmd == DC_OFF_GRACEFUL || my_cmd == DC_OFF_FAST ) && real_dt == DT_MASTER ) )		5451258	24					
ANR	5452242	Condition	my_cmd == DAEMON_ON || my_cmd == DAEMON_OFF || my_cmd == DAEMON_OFF_FAST || ( ( my_cmd == DC_OFF_GRACEFUL || my_cmd == DC_OFF_FAST ) && real_dt == DT_MASTER )	1548:6:42119:42285	5451258	0	True				
ANR	5452243	OrExpression	my_cmd == DAEMON_ON || my_cmd == DAEMON_OFF || my_cmd == DAEMON_OFF_FAST || ( ( my_cmd == DC_OFF_GRACEFUL || my_cmd == DC_OFF_FAST ) && real_dt == DT_MASTER )		5451258	0		||			
ANR	5452244	EqualityExpression	my_cmd == DAEMON_ON		5451258	0		==			
ANR	5452245	Identifier	my_cmd		5451258	0					
ANR	5452246	Identifier	DAEMON_ON		5451258	1					
ANR	5452247	OrExpression	my_cmd == DAEMON_OFF || my_cmd == DAEMON_OFF_FAST || ( ( my_cmd == DC_OFF_GRACEFUL || my_cmd == DC_OFF_FAST ) && real_dt == DT_MASTER )		5451258	1		||			
ANR	5452248	EqualityExpression	my_cmd == DAEMON_OFF		5451258	0		==			
ANR	5452249	Identifier	my_cmd		5451258	0					
ANR	5452250	Identifier	DAEMON_OFF		5451258	1					
ANR	5452251	OrExpression	my_cmd == DAEMON_OFF_FAST || ( ( my_cmd == DC_OFF_GRACEFUL || my_cmd == DC_OFF_FAST ) && real_dt == DT_MASTER )		5451258	1		||			
ANR	5452252	EqualityExpression	my_cmd == DAEMON_OFF_FAST		5451258	0		==			
ANR	5452253	Identifier	my_cmd		5451258	0					
ANR	5452254	Identifier	DAEMON_OFF_FAST		5451258	1					
ANR	5452255	AndExpression	( my_cmd == DC_OFF_GRACEFUL || my_cmd == DC_OFF_FAST ) && real_dt == DT_MASTER		5451258	1		&&			
ANR	5452256	OrExpression	my_cmd == DC_OFF_GRACEFUL || my_cmd == DC_OFF_FAST		5451258	0		||			
ANR	5452257	EqualityExpression	my_cmd == DC_OFF_GRACEFUL		5451258	0		==			
ANR	5452258	Identifier	my_cmd		5451258	0					
ANR	5452259	Identifier	DC_OFF_GRACEFUL		5451258	1					
ANR	5452260	EqualityExpression	my_cmd == DC_OFF_FAST		5451258	1		==			
ANR	5452261	Identifier	my_cmd		5451258	0					
ANR	5452262	Identifier	DC_OFF_FAST		5451258	1					
ANR	5452263	EqualityExpression	real_dt == DT_MASTER		5451258	1		==			
ANR	5452264	Identifier	real_dt		5451258	0					
ANR	5452265	Identifier	DT_MASTER		5451258	1					
ANR	5452266	CompoundStatement		233:2:6340:6340	5451258	1					
ANR	5452267	IfStatement	if ( d_type == DT_ANY )		5451258	0					
ANR	5452268	Condition	d_type == DT_ANY	1553:7:42300:42315	5451258	0	True				
ANR	5452269	EqualityExpression	d_type == DT_ANY		5451258	0		==			
ANR	5452270	Identifier	d_type		5451258	0					
ANR	5452271	Identifier	DT_ANY		5451258	1					
ANR	5452272	CompoundStatement		234:26:6368:6368	5451258	1					
ANR	5452273	ExpressionStatement	"printf ( ""Sent \\""%s\\"" command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1554:4:42325:42400	5451258	0	True				
ANR	5452274	CallExpression	"printf ( ""Sent \\""%s\\"" command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		5451258	0					
ANR	5452275	Callee	printf		5451258	0					
ANR	5452276	Identifier	printf		5451258	0					
ANR	5452277	ArgumentList	"""Sent \\""%s\\"" command to %s\\n"""		5451258	1					
ANR	5452278	Argument	"""Sent \\""%s\\"" command to %s\\n"""		5451258	0					
ANR	5452279	PrimaryExpression	"""Sent \\""%s\\"" command to %s\\n"""		5451258	0					
ANR	5452280	Argument	cmdToStr ( my_cmd )		5451258	1					
ANR	5452281	CallExpression	cmdToStr ( my_cmd )		5451258	0					
ANR	5452282	Callee	cmdToStr		5451258	0					
ANR	5452283	Identifier	cmdToStr		5451258	0					
ANR	5452284	ArgumentList	my_cmd		5451258	1					
ANR	5452285	Argument	my_cmd		5451258	0					
ANR	5452286	Identifier	my_cmd		5451258	0					
ANR	5452287	Argument	d -> idStr ( )		5451258	2					
ANR	5452288	CallExpression	d -> idStr ( )		5451258	0					
ANR	5452289	Callee	d -> idStr		5451258	0					
ANR	5452290	PtrMemberAccess	d -> idStr		5451258	0					
ANR	5452291	Identifier	d		5451258	0					
ANR	5452292	Identifier	idStr		5451258	1					
ANR	5452293	ArgumentList			5451258	1					
ANR	5452294	ElseStatement	else		5451258	0					
ANR	5452295	CompoundStatement		237:10:6461:6461	5451258	0					
ANR	5452296	ExpressionStatement	"printf ( ""Sent \\""%s\\"" command for \\""%s\\"" to %s\\n"" , cmdToStr ( my_cmd ) , subsys_arg ? subsys_arg : daemonString ( dt ) , d -> idStr ( ) )"	1557:4:42418:42561	5451258	0	True				
ANR	5452297	CallExpression	"printf ( ""Sent \\""%s\\"" command for \\""%s\\"" to %s\\n"" , cmdToStr ( my_cmd ) , subsys_arg ? subsys_arg : daemonString ( dt ) , d -> idStr ( ) )"		5451258	0					
ANR	5452298	Callee	printf		5451258	0					
ANR	5452299	Identifier	printf		5451258	0					
ANR	5452300	ArgumentList	"""Sent \\""%s\\"" command for \\""%s\\"" to %s\\n"""		5451258	1					
ANR	5452301	Argument	"""Sent \\""%s\\"" command for \\""%s\\"" to %s\\n"""		5451258	0					
ANR	5452302	PrimaryExpression	"""Sent \\""%s\\"" command for \\""%s\\"" to %s\\n"""		5451258	0					
ANR	5452303	Argument	cmdToStr ( my_cmd )		5451258	1					
ANR	5452304	CallExpression	cmdToStr ( my_cmd )		5451258	0					
ANR	5452305	Callee	cmdToStr		5451258	0					
ANR	5452306	Identifier	cmdToStr		5451258	0					
ANR	5452307	ArgumentList	my_cmd		5451258	1					
ANR	5452308	Argument	my_cmd		5451258	0					
ANR	5452309	Identifier	my_cmd		5451258	0					
ANR	5452310	Argument	subsys_arg ? subsys_arg : daemonString ( dt )		5451258	2					
ANR	5452311	ConditionalExpression	subsys_arg ? subsys_arg : daemonString ( dt )		5451258	0					
ANR	5452312	Condition	subsys_arg		5451258	0					
ANR	5452313	Identifier	subsys_arg		5451258	0					
ANR	5452314	Identifier	subsys_arg		5451258	1					
ANR	5452315	CallExpression	daemonString ( dt )		5451258	2					
ANR	5452316	Callee	daemonString		5451258	0					
ANR	5452317	Identifier	daemonString		5451258	0					
ANR	5452318	ArgumentList	dt		5451258	1					
ANR	5452319	Argument	dt		5451258	0					
ANR	5452320	Identifier	dt		5451258	0					
ANR	5452321	Argument	d -> idStr ( )		5451258	3					
ANR	5452322	CallExpression	d -> idStr ( )		5451258	0					
ANR	5452323	Callee	d -> idStr		5451258	0					
ANR	5452324	PtrMemberAccess	d -> idStr		5451258	0					
ANR	5452325	Identifier	d		5451258	0					
ANR	5452326	Identifier	idStr		5451258	1					
ANR	5452327	ArgumentList			5451258	1					
ANR	5452328	ElseStatement	else		5451258	0					
ANR	5452329	IfStatement	if ( d_type == DT_STARTD && all )		5451258	0					
ANR	5452330	Condition	d_type == DT_STARTD && all	1562:13:42581:42606	5451258	0	True				
ANR	5452331	AndExpression	d_type == DT_STARTD && all		5451258	0		&&			
ANR	5452332	EqualityExpression	d_type == DT_STARTD		5451258	0		==			
ANR	5452333	Identifier	d_type		5451258	0					
ANR	5452334	Identifier	DT_STARTD		5451258	1					
ANR	5452335	Identifier	all		5451258	1					
ANR	5452336	CompoundStatement		243:42:6659:6659	5451258	1					
ANR	5452337	ExpressionStatement	"printf ( ""Sent \\""%s\\"" command to startd %s\\n"" , cmdToStr ( my_cmd ) , d -> fullHostname ( ) )"	1565:3:42718:42806	5451258	0	True				
ANR	5452338	CallExpression	"printf ( ""Sent \\""%s\\"" command to startd %s\\n"" , cmdToStr ( my_cmd ) , d -> fullHostname ( ) )"		5451258	0					
ANR	5452339	Callee	printf		5451258	0					
ANR	5452340	Identifier	printf		5451258	0					
ANR	5452341	ArgumentList	"""Sent \\""%s\\"" command to startd %s\\n"""		5451258	1					
ANR	5452342	Argument	"""Sent \\""%s\\"" command to startd %s\\n"""		5451258	0					
ANR	5452343	PrimaryExpression	"""Sent \\""%s\\"" command to startd %s\\n"""		5451258	0					
ANR	5452344	Argument	cmdToStr ( my_cmd )		5451258	1					
ANR	5452345	CallExpression	cmdToStr ( my_cmd )		5451258	0					
ANR	5452346	Callee	cmdToStr		5451258	0					
ANR	5452347	Identifier	cmdToStr		5451258	0					
ANR	5452348	ArgumentList	my_cmd		5451258	1					
ANR	5452349	Argument	my_cmd		5451258	0					
ANR	5452350	Identifier	my_cmd		5451258	0					
ANR	5452351	Argument	d -> fullHostname ( )		5451258	2					
ANR	5452352	CallExpression	d -> fullHostname ( )		5451258	0					
ANR	5452353	Callee	d -> fullHostname		5451258	0					
ANR	5452354	PtrMemberAccess	d -> fullHostname		5451258	0					
ANR	5452355	Identifier	d		5451258	0					
ANR	5452356	Identifier	fullHostname		5451258	1					
ANR	5452357	ArgumentList			5451258	1					
ANR	5452358	ElseStatement	else		5451258	0					
ANR	5452359	IfStatement	if ( cmd_set )		5451258	0					
ANR	5452360	Condition	cmd_set	1567:13:42821:42827	5451258	0	True				
ANR	5452361	Identifier	cmd_set		5451258	0					
ANR	5452362	CompoundStatement		248:23:6880:6880	5451258	1					
ANR	5452363	ExpressionStatement	"printf ( ""Sent command \\""%d\\"" to %s\\n"" , my_cmd , d -> idStr ( ) )"	1568:3:42836:42895	5451258	0	True				
ANR	5452364	CallExpression	"printf ( ""Sent command \\""%d\\"" to %s\\n"" , my_cmd , d -> idStr ( ) )"		5451258	0					
ANR	5452365	Callee	printf		5451258	0					
ANR	5452366	Identifier	printf		5451258	0					
ANR	5452367	ArgumentList	"""Sent command \\""%d\\"" to %s\\n"""		5451258	1					
ANR	5452368	Argument	"""Sent command \\""%d\\"" to %s\\n"""		5451258	0					
ANR	5452369	PrimaryExpression	"""Sent command \\""%d\\"" to %s\\n"""		5451258	0					
ANR	5452370	Argument	my_cmd		5451258	1					
ANR	5452371	Identifier	my_cmd		5451258	0					
ANR	5452372	Argument	d -> idStr ( )		5451258	2					
ANR	5452373	CallExpression	d -> idStr ( )		5451258	0					
ANR	5452374	Callee	d -> idStr		5451258	0					
ANR	5452375	PtrMemberAccess	d -> idStr		5451258	0					
ANR	5452376	Identifier	d		5451258	0					
ANR	5452377	Identifier	idStr		5451258	1					
ANR	5452378	ArgumentList			5451258	1					
ANR	5452379	ElseStatement	else		5451258	0					
ANR	5452380	CompoundStatement		250:9:6955:6955	5451258	0					
ANR	5452381	ExpressionStatement	"printf ( ""Sent \\""%s\\"" command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"	1570:3:42911:42980	5451258	0	True				
ANR	5452382	CallExpression	"printf ( ""Sent \\""%s\\"" command to %s\\n"" , cmdToStr ( my_cmd ) , d -> idStr ( ) )"		5451258	0					
ANR	5452383	Callee	printf		5451258	0					
ANR	5452384	Identifier	printf		5451258	0					
ANR	5452385	ArgumentList	"""Sent \\""%s\\"" command to %s\\n"""		5451258	1					
ANR	5452386	Argument	"""Sent \\""%s\\"" command to %s\\n"""		5451258	0					
ANR	5452387	PrimaryExpression	"""Sent \\""%s\\"" command to %s\\n"""		5451258	0					
ANR	5452388	Argument	cmdToStr ( my_cmd )		5451258	1					
ANR	5452389	CallExpression	cmdToStr ( my_cmd )		5451258	0					
ANR	5452390	Callee	cmdToStr		5451258	0					
ANR	5452391	Identifier	cmdToStr		5451258	0					
ANR	5452392	ArgumentList	my_cmd		5451258	1					
ANR	5452393	Argument	my_cmd		5451258	0					
ANR	5452394	Identifier	my_cmd		5451258	0					
ANR	5452395	Argument	d -> idStr ( )		5451258	2					
ANR	5452396	CallExpression	d -> idStr ( )		5451258	0					
ANR	5452397	Callee	d -> idStr		5451258	0					
ANR	5452398	PtrMemberAccess	d -> idStr		5451258	0					
ANR	5452399	Identifier	d		5451258	0					
ANR	5452400	Identifier	idStr		5451258	1					
ANR	5452401	ArgumentList			5451258	1					
ANR	5452402	ExpressionStatement	sock . close ( )	1572:2:42988:43000	5451258	25	True				
ANR	5452403	CallExpression	sock . close ( )		5451258	0					
ANR	5452404	Callee	sock . close		5451258	0					
ANR	5452405	MemberAccess	sock . close		5451258	0					
ANR	5452406	Identifier	sock		5451258	0					
ANR	5452407	Identifier	close		5451258	1					
ANR	5452408	ArgumentList			5451258	1					
ANR	5452409	Condition	d -> nextValidCm ( ) == true	1573:9:43011:43034	5451258	1	True				
ANR	5452410	EqualityExpression	d -> nextValidCm ( ) == true		5451258	0		==			
ANR	5452411	CallExpression	d -> nextValidCm ( )		5451258	0					
ANR	5452412	Callee	d -> nextValidCm		5451258	0					
ANR	5452413	PtrMemberAccess	d -> nextValidCm		5451258	0					
ANR	5452414	Identifier	d		5451258	0					
ANR	5452415	Identifier	nextValidCm		5451258	1					
ANR	5452416	ArgumentList			5451258	1					
ANR	5452417	Identifier	true		5451258	1					
ANR	5452418	IfStatement	if ( error == true )		5451258	8					
ANR	5452419	Condition	error == true	1574:5:43043:43055	5451258	0	True				
ANR	5452420	EqualityExpression	error == true		5451258	0		==			
ANR	5452421	Identifier	error		5451258	0					
ANR	5452422	Identifier	true		5451258	1					
ANR	5452423	CompoundStatement		255:21:7108:7108	5451258	1					
ANR	5452424	ExpressionStatement	"fprintf ( stderr , ""Can't connect to %s\\n"" , d -> idStr ( ) )"	1575:2:43063:43117	5451258	0	True				
ANR	5452425	CallExpression	"fprintf ( stderr , ""Can't connect to %s\\n"" , d -> idStr ( ) )"		5451258	0					
ANR	5452426	Callee	fprintf		5451258	0					
ANR	5452427	Identifier	fprintf		5451258	0					
ANR	5452428	ArgumentList	stderr		5451258	1					
ANR	5452429	Argument	stderr		5451258	0					
ANR	5452430	Identifier	stderr		5451258	0					
ANR	5452431	Argument	"""Can't connect to %s\\n"""		5451258	1					
ANR	5452432	PrimaryExpression	"""Can't connect to %s\\n"""		5451258	0					
ANR	5452433	Argument	d -> idStr ( )		5451258	2					
ANR	5452434	CallExpression	d -> idStr ( )		5451258	0					
ANR	5452435	Callee	d -> idStr		5451258	0					
ANR	5452436	PtrMemberAccess	d -> idStr		5451258	0					
ANR	5452437	Identifier	d		5451258	0					
ANR	5452438	Identifier	idStr		5451258	1					
ANR	5452439	ArgumentList			5451258	1					
ANR	5452440	ExpressionStatement	all_good = false	1576:2:43121:43137	5451258	1	True				
ANR	5452441	AssignmentExpression	all_good = false		5451258	0		=			
ANR	5452442	Identifier	all_good		5451258	0					
ANR	5452443	Identifier	false		5451258	1					
ANR	5452444	ReturnStatement	return ;	1577:2:43141:43147	5451258	2	True				
ANR	5452445	ReturnType	void		5451258	1					
ANR	5452446	Identifier	doCommand		5451258	2					
ANR	5452447	ParameterList	Daemon * d		5451258	3					
ANR	5452448	Parameter	Daemon * d	1319:11:35937:35945	5451258	0	True				
ANR	5452449	ParameterType	Daemon *		5451258	0					
ANR	5452450	Identifier	d		5451258	1					
ANR	5452451	CFGEntryNode	ENTRY		5451258		True				
ANR	5452452	CFGExitNode	EXIT		5451258		True				
ANR	5452453	Symbol	SQUAWK		5451258						
ANR	5452454	Symbol	d -> isLocal		5451258						
ANR	5452455	Symbol	d -> idStr		5451258						
ANR	5452456	Symbol	strchr		5451258						
ANR	5452457	Symbol	DAEMON_OFF		5451258						
ANR	5452458	Symbol	PCKPT_JOB		5451258						
ANR	5452459	Symbol	cmdToStr		5451258						
ANR	5452460	Symbol	DC_OFF_PEACEFUL		5451258						
ANR	5452461	Symbol	dt		5451258						
ANR	5452462	Symbol	DC_OFF_FAST		5451258						
ANR	5452463	Symbol	d -> type		5451258						
ANR	5452464	Symbol	sock . connect		5451258						
ANR	5452465	Symbol	is_per_claim_startd_cmd		5451258						
ANR	5452466	Symbol	& errstack		5451258						
ANR	5452467	Symbol	sock . code		5451258						
ANR	5452468	Symbol	is_local		5451258						
ANR	5452469	Symbol	d_type		5451258						
ANR	5452470	Symbol	all		5451258						
ANR	5452471	Symbol	DAEMONS_OFF_PEACEFUL		5451258						
ANR	5452472	Symbol	DAEMONS_OFF_FAST		5451258						
ANR	5452473	Symbol	stderr		5451258						
ANR	5452474	Symbol	done		5451258						
ANR	5452475	Symbol	VACATE_CLAIM		5451258						
ANR	5452476	Symbol	& sock		5451258						
ANR	5452477	Symbol	DAEMON_ON		5451258						
ANR	5452478	Symbol	DT_STARTD		5451258						
ANR	5452479	Symbol	all_good		5451258						
ANR	5452480	Symbol	errstack		5451258						
ANR	5452481	Symbol	VACATE_CLAIM_FAST		5451258						
ANR	5452482	Symbol	d -> sendCommand		5451258						
ANR	5452483	Symbol	true		5451258						
ANR	5452484	Symbol	name		5451258						
ANR	5452485	Symbol	sent_it		5451258						
ANR	5452486	Symbol	real_dt		5451258						
ANR	5452487	Symbol	cmd		5451258						
ANR	5452488	Symbol	d -> startCommand		5451258						
ANR	5452489	Symbol	DAEMON_OFF_PEACEFUL		5451258						
ANR	5452490	Symbol	d -> name		5451258						
ANR	5452491	Symbol	addresses_sent		5451258						
ANR	5452492	Symbol	DC_OFF_GRACEFUL		5451258						
ANR	5452493	Symbol	daemonString		5451258						
ANR	5452494	Symbol	VACATE_ALL_FAST		5451258						
ANR	5452495	Symbol	DT_ANY		5451258						
ANR	5452496	Symbol	peaceful_shutdown		5451258						
ANR	5452497	Symbol	error		5451258						
ANR	5452498	Symbol	d -> nextValidCm		5451258						
ANR	5452499	Symbol	DT_MASTER		5451258						
ANR	5452500	Symbol	d -> addr		5451258						
ANR	5452501	Symbol	sock . end_of_message		5451258						
ANR	5452502	Symbol	d -> fullHostname		5451258						
ANR	5452503	Symbol	DAEMON_OFF_FAST		5451258						
ANR	5452504	Symbol	PCKPT_ALL_JOBS		5451258						
ANR	5452505	Symbol	real_cmd		5451258						
ANR	5452506	Symbol	RESTART		5451258						
ANR	5452507	Symbol	RESTART_PEACEFUL		5451258						
ANR	5452508	Symbol	pexec		5451258						
ANR	5452509	Symbol	d		5451258						
ANR	5452510	Symbol	false		5451258						
ANR	5452511	Symbol	cmd_set		5451258						
ANR	5452512	Symbol	psubsys		5451258						
ANR	5452513	Symbol	VACATE_ALL_CLAIMS		5451258						
ANR	5452514	Symbol	* d		5451258						
ANR	5452515	Symbol	addresses_sent . lookup		5451258						
ANR	5452516	Symbol	my_cmd		5451258						
ANR	5452517	Symbol	sock		5451258						
ANR	5452518	Symbol	fast		5451258						
ANR	5452519	Symbol	hash_key		5451258						
ANR	5452520	Symbol	errstack . getFullText		5451258						
ANR	5452521	Symbol	subsys_arg		5451258						
ANR	5452522	Function	version	1582:0:43156:43243							
ANR	5452523	FunctionDef	version ()		5452522	0					
ANR	5452524	CompoundStatement		1584:0:43171:43243	5452522	0					
ANR	5452525	ExpressionStatement	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"	1585:1:43174:43229	5452522	0	True				
ANR	5452526	CallExpression	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"		5452522	0					
ANR	5452527	Callee	printf		5452522	0					
ANR	5452528	Identifier	printf		5452522	0					
ANR	5452529	ArgumentList	"""%s\\n%s\\n"""		5452522	1					
ANR	5452530	Argument	"""%s\\n%s\\n"""		5452522	0					
ANR	5452531	PrimaryExpression	"""%s\\n%s\\n"""		5452522	0					
ANR	5452532	Argument	CondorVersion ( )		5452522	1					
ANR	5452533	CallExpression	CondorVersion ( )		5452522	0					
ANR	5452534	Callee	CondorVersion		5452522	0					
ANR	5452535	Identifier	CondorVersion		5452522	0					
ANR	5452536	ArgumentList			5452522	1					
ANR	5452537	Argument	CondorPlatform ( )		5452522	2					
ANR	5452538	CallExpression	CondorPlatform ( )		5452522	0					
ANR	5452539	Callee	CondorPlatform		5452522	0					
ANR	5452540	Identifier	CondorPlatform		5452522	0					
ANR	5452541	ArgumentList			5452522	1					
ANR	5452542	ExpressionStatement	exit ( 0 )	1586:1:43232:43241	5452522	1	True				
ANR	5452543	CallExpression	exit ( 0 )		5452522	0					
ANR	5452544	Callee	exit		5452522	0					
ANR	5452545	Identifier	exit		5452522	0					
ANR	5452546	ArgumentList	0		5452522	1					
ANR	5452547	Argument	0		5452522	0					
ANR	5452548	PrimaryExpression	0		5452522	0					
ANR	5452549	ReturnType	void		5452522	1					
ANR	5452550	Identifier	version		5452522	2					
ANR	5452551	ParameterList			5452522	3					
ANR	5452552	CFGEntryNode	ENTRY		5452522		True				
ANR	5452553	CFGExitNode	EXIT		5452522		True				
ANR	5452554	Symbol	CondorVersion		5452522						
ANR	5452555	Symbol	CondorPlatform		5452522						
ANR	5452556	Function	handleAll	1592:0:43337:43838							
ANR	5452557	FunctionDef	handleAll ()		5452556	0					
ANR	5452558	CompoundStatement		1594:0:43354:43838	5452556	0					
ANR	5452559	IdentifierDeclStatement	DaemonList daemons ;	1595:1:43357:43375	5452556	0	True				
ANR	5452560	IdentifierDecl	daemons		5452556	0					
ANR	5452561	IdentifierDeclType	DaemonList		5452556	0					
ANR	5452562	Identifier	daemons		5452556	1					
ANR	5452563	IfStatement	"if ( ! resolveNames ( & daemons , NULL ) )"		5452556	1					
ANR	5452564	Condition	"! resolveNames ( & daemons , NULL )"	1597:5:43383:43412	5452556	0	True				
ANR	5452565	UnaryOperationExpression	"! resolveNames ( & daemons , NULL )"		5452556	0					
ANR	5452566	UnaryOperator	!		5452556	0					
ANR	5452567	CallExpression	"resolveNames ( & daemons , NULL )"		5452556	1					
ANR	5452568	Callee	resolveNames		5452556	0					
ANR	5452569	Identifier	resolveNames		5452556	0					
ANR	5452570	ArgumentList	& daemons		5452556	1					
ANR	5452571	Argument	& daemons		5452556	0					
ANR	5452572	UnaryOperationExpression	& daemons		5452556	0					
ANR	5452573	UnaryOperator	&		5452556	0					
ANR	5452574	Identifier	daemons		5452556	1					
ANR	5452575	Argument	NULL		5452556	1					
ANR	5452576	Identifier	NULL		5452556	0					
ANR	5452577	CompoundStatement		4:38:61:61	5452556	1					
ANR	5452578	IfStatement	if ( constraint != NULL )		5452556	0					
ANR	5452579	Condition	constraint != NULL	1598:8:43426:43441	5452556	0	True				
ANR	5452580	EqualityExpression	constraint != NULL		5452556	0		!=			
ANR	5452581	Identifier	constraint		5452556	0					
ANR	5452582	Identifier	NULL		5452556	1					
ANR	5452583	CompoundStatement		5:27:90:90	5452556	1					
ANR	5452584	ExpressionStatement	"fprintf ( stderr , ""ERROR: Failed to find daemons matching the constraint\\n"" )"	1599:5:43452:43528	5452556	0	True				
ANR	5452585	CallExpression	"fprintf ( stderr , ""ERROR: Failed to find daemons matching the constraint\\n"" )"		5452556	0					
ANR	5452586	Callee	fprintf		5452556	0					
ANR	5452587	Identifier	fprintf		5452556	0					
ANR	5452588	ArgumentList	stderr		5452556	1					
ANR	5452589	Argument	stderr		5452556	0					
ANR	5452590	Identifier	stderr		5452556	0					
ANR	5452591	Argument	"""ERROR: Failed to find daemons matching the constraint\\n"""		5452556	1					
ANR	5452592	PrimaryExpression	"""ERROR: Failed to find daemons matching the constraint\\n"""		5452556	0					
ANR	5452593	ElseStatement	else		5452556	0					
ANR	5452594	CompoundStatement		7:10:185:185	5452556	0					
ANR	5452595	ExpressionStatement	"fprintf ( stderr , ""ERROR: Failed to find daemons for -all\\n"" )"	1601:5:43547:43608	5452556	0	True				
ANR	5452596	CallExpression	"fprintf ( stderr , ""ERROR: Failed to find daemons for -all\\n"" )"		5452556	0					
ANR	5452597	Callee	fprintf		5452556	0					
ANR	5452598	Identifier	fprintf		5452556	0					
ANR	5452599	ArgumentList	stderr		5452556	1					
ANR	5452600	Argument	stderr		5452556	0					
ANR	5452601	Identifier	stderr		5452556	0					
ANR	5452602	Argument	"""ERROR: Failed to find daemons for -all\\n"""		5452556	1					
ANR	5452603	PrimaryExpression	"""ERROR: Failed to find daemons for -all\\n"""		5452556	0					
ANR	5452604	ExpressionStatement	exit ( 1 )	1603:3:43618:43627	5452556	1	True				
ANR	5452605	CallExpression	exit ( 1 )		5452556	0					
ANR	5452606	Callee	exit		5452556	0					
ANR	5452607	Identifier	exit		5452556	0					
ANR	5452608	ArgumentList	1		5452556	1					
ANR	5452609	Argument	1		5452556	0					
ANR	5452610	PrimaryExpression	1		5452556	0					
ANR	5452611	IdentifierDeclStatement	Daemon * d ;	1607:1:43692:43701	5452556	2	True				
ANR	5452612	IdentifierDecl	* d		5452556	0					
ANR	5452613	IdentifierDeclType	Daemon *		5452556	0					
ANR	5452614	Identifier	d		5452556	1					
ANR	5452615	ExpressionStatement	daemons . rewind ( )	1608:1:43704:43720	5452556	3	True				
ANR	5452616	CallExpression	daemons . rewind ( )		5452556	0					
ANR	5452617	Callee	daemons . rewind		5452556	0					
ANR	5452618	MemberAccess	daemons . rewind		5452556	0					
ANR	5452619	Identifier	daemons		5452556	0					
ANR	5452620	Identifier	rewind		5452556	1					
ANR	5452621	ArgumentList			5452556	1					
ANR	5452622	WhileStatement	while ( daemons . next ( d ) )		5452556	4					
ANR	5452623	Condition	daemons . next ( d )	1609:8:43731:43745	5452556	0	True				
ANR	5452624	CallExpression	daemons . next ( d )		5452556	0					
ANR	5452625	Callee	daemons . next		5452556	0					
ANR	5452626	MemberAccess	daemons . next		5452556	0					
ANR	5452627	Identifier	daemons		5452556	0					
ANR	5452628	Identifier	next		5452556	1					
ANR	5452629	ArgumentList	d		5452556	1					
ANR	5452630	Argument	d		5452556	0					
ANR	5452631	Identifier	d		5452556	0					
ANR	5452632	CompoundStatement		16:26:394:394	5452556	1					
ANR	5452633	IfStatement	if ( real_dt == DT_GENERIC )		5452556	0					
ANR	5452634	Condition	real_dt == DT_GENERIC	1610:6:43757:43777	5452556	0	True				
ANR	5452635	EqualityExpression	real_dt == DT_GENERIC		5452556	0		==			
ANR	5452636	Identifier	real_dt		5452556	0					
ANR	5452637	Identifier	DT_GENERIC		5452556	1					
ANR	5452638	CompoundStatement		17:30:426:426	5452556	1					
ANR	5452639	ExpressionStatement	d -> setSubsystem ( subsys )	1611:3:43786:43811	5452556	0	True				
ANR	5452640	CallExpression	d -> setSubsystem ( subsys )		5452556	0					
ANR	5452641	Callee	d -> setSubsystem		5452556	0					
ANR	5452642	PtrMemberAccess	d -> setSubsystem		5452556	0					
ANR	5452643	Identifier	d		5452556	0					
ANR	5452644	Identifier	setSubsystem		5452556	1					
ANR	5452645	ArgumentList	subsys		5452556	1					
ANR	5452646	Argument	subsys		5452556	0					
ANR	5452647	Identifier	subsys		5452556	0					
ANR	5452648	ExpressionStatement	doCommand ( d )	1613:2:43819:43833	5452556	1	True				
ANR	5452649	CallExpression	doCommand ( d )		5452556	0					
ANR	5452650	Callee	doCommand		5452556	0					
ANR	5452651	Identifier	doCommand		5452556	0					
ANR	5452652	ArgumentList	d		5452556	1					
ANR	5452653	Argument	d		5452556	0					
ANR	5452654	Identifier	d		5452556	0					
ANR	5452655	ReturnType	void		5452556	1					
ANR	5452656	Identifier	handleAll		5452556	2					
ANR	5452657	ParameterList			5452556	3					
ANR	5452658	CFGEntryNode	ENTRY		5452556		True				
ANR	5452659	CFGExitNode	EXIT		5452556		True				
ANR	5452660	Symbol	& daemons		5452556						
ANR	5452661	Symbol	subsys		5452556						
ANR	5452662	Symbol	DT_GENERIC		5452556						
ANR	5452663	Symbol	NULL		5452556						
ANR	5452664	Symbol	d		5452556						
ANR	5452665	Symbol	daemons . next		5452556						
ANR	5452666	Symbol	daemons		5452556						
ANR	5452667	Symbol	real_dt		5452556						
ANR	5452668	Symbol	constraint		5452556						
ANR	5452669	Symbol	resolveNames		5452556						
ANR	5452670	Symbol	stderr		5452556						
ANR	5452671	Function	doSquawk	1618:0:43842:44332							
ANR	5452672	FunctionDef	doSquawk (char * address)		5452671	0					
ANR	5452673	CompoundStatement		1619:26:43873:44332	5452671	0					
ANR	5452674	IdentifierDeclStatement	"char line [ 256 ] , addr [ 256 ] ;"	1622:1:43944:43969	5452671	0	True				
ANR	5452675	IdentifierDecl	line [ 256 ]		5452671	0					
ANR	5452676	IdentifierDeclType	char [ 256 ]		5452671	0					
ANR	5452677	Identifier	line		5452671	1					
ANR	5452678	PrimaryExpression	256		5452671	2					
ANR	5452679	IdentifierDecl	addr [ 256 ]		5452671	1					
ANR	5452680	IdentifierDeclType	char [ 256 ]		5452671	0					
ANR	5452681	Identifier	addr		5452671	1					
ANR	5452682	PrimaryExpression	256		5452671	2					
ANR	5452683	IdentifierDeclStatement	"int i , done = FALSE ;"	1623:1:43972:43991	5452671	1	True				
ANR	5452684	IdentifierDecl	i		5452671	0					
ANR	5452685	IdentifierDeclType	int		5452671	0					
ANR	5452686	Identifier	i		5452671	1					
ANR	5452687	IdentifierDecl	done = FALSE		5452671	1					
ANR	5452688	IdentifierDeclType	int		5452671	0					
ANR	5452689	Identifier	done		5452671	1					
ANR	5452690	AssignmentExpression	done = FALSE		5452671	2		=			
ANR	5452691	Identifier	FALSE		5452671	0					
ANR	5452692	Identifier	FALSE		5452671	1					
ANR	5452693	ExpressionStatement	"strcpy ( addr , address )"	1624:1:43994:44017	5452671	2	True				
ANR	5452694	CallExpression	"strcpy ( addr , address )"		5452671	0					
ANR	5452695	Callee	strcpy		5452671	0					
ANR	5452696	Identifier	strcpy		5452671	0					
ANR	5452697	ArgumentList	addr		5452671	1					
ANR	5452698	Argument	addr		5452671	0					
ANR	5452699	Identifier	addr		5452671	0					
ANR	5452700	Argument	address		5452671	1					
ANR	5452701	Identifier	address		5452671	0					
ANR	5452702	WhileStatement	while ( ! done )		5452671	3					
ANR	5452703	Condition	! done	1626:9:44030:44034	5452671	0	True				
ANR	5452704	UnaryOperationExpression	! done		5452671	0					
ANR	5452705	UnaryOperator	!		5452671	0					
ANR	5452706	Identifier	done		5452671	1					
ANR	5452707	CompoundStatement		8:17:164:164	5452671	1					
ANR	5452708	ExpressionStatement	"printf ( ""> "" )"	1627:2:44042:44057	5452671	0	True				
ANR	5452709	CallExpression	"printf ( ""> "" )"		5452671	0					
ANR	5452710	Callee	printf		5452671	0					
ANR	5452711	Identifier	printf		5452671	0					
ANR	5452712	ArgumentList	"""> """		5452671	1					
ANR	5452713	Argument	"""> """		5452671	0					
ANR	5452714	PrimaryExpression	"""> """		5452671	0					
ANR	5452715	ExpressionStatement	fflush ( stdout )	1628:2:44061:44078	5452671	1	True				
ANR	5452716	CallExpression	fflush ( stdout )		5452671	0					
ANR	5452717	Callee	fflush		5452671	0					
ANR	5452718	Identifier	fflush		5452671	0					
ANR	5452719	ArgumentList	stdout		5452671	1					
ANR	5452720	Argument	stdout		5452671	0					
ANR	5452721	Identifier	stdout		5452671	0					
ANR	5452722	IfStatement	"if ( ! fgets ( line , 256 , stdin ) )"		5452671	2					
ANR	5452723	Condition	"! fgets ( line , 256 , stdin )"	1630:7:44088:44113	5452671	0	True				
ANR	5452724	UnaryOperationExpression	"! fgets ( line , 256 , stdin )"		5452671	0					
ANR	5452725	UnaryOperator	!		5452671	0					
ANR	5452726	CallExpression	"fgets ( line , 256 , stdin )"		5452671	1					
ANR	5452727	Callee	fgets		5452671	0					
ANR	5452728	Identifier	fgets		5452671	0					
ANR	5452729	ArgumentList	line		5452671	1					
ANR	5452730	Argument	line		5452671	0					
ANR	5452731	Identifier	line		5452671	0					
ANR	5452732	Argument	256		5452671	1					
ANR	5452733	PrimaryExpression	256		5452671	0					
ANR	5452734	Argument	stdin		5452671	2					
ANR	5452735	Identifier	stdin		5452671	0					
ANR	5452736	CompoundStatement		12:36:243:243	5452671	1					
ANR	5452737	ExpressionStatement	done = TRUE	1631:3:44122:44133	5452671	0	True				
ANR	5452738	AssignmentExpression	done = TRUE		5452671	0		=			
ANR	5452739	Identifier	done		5452671	0					
ANR	5452740	Identifier	TRUE		5452671	1					
ANR	5452741	ElseStatement	else		5452671	0					
ANR	5452742	CompoundStatement		14:9:270:270	5452671	0					
ANR	5452743	ForStatement	for ( i = 0 ; line [ i ] != '\\0' ; i ++ )		5452671	0					
ANR	5452744	ForInit	i = 0 ;	1633:9:44155:44159	5452671	0	True				
ANR	5452745	AssignmentExpression	i = 0		5452671	0		=			
ANR	5452746	Identifier	i		5452671	0					
ANR	5452747	PrimaryExpression	0		5452671	1					
ANR	5452748	Condition	line [ i ] != '\\0'	1633:15:44161:44175	5452671	1	True				
ANR	5452749	EqualityExpression	line [ i ] != '\\0'		5452671	0		!=			
ANR	5452750	ArrayIndexing	line [ i ]		5452671	0					
ANR	5452751	Identifier	line		5452671	0					
ANR	5452752	Identifier	i		5452671	1					
ANR	5452753	PrimaryExpression	'\\0'		5452671	1					
ANR	5452754	PostIncDecOperationExpression	i ++	1633:33:44179:44181	5452671	2	True				
ANR	5452755	Identifier	i		5452671	0					
ANR	5452756	IncDec	++		5452671	1					
ANR	5452757	CompoundStatement		15:39:311:311	5452671	3					
ANR	5452758	ExpressionStatement	line [ i ] = tolower ( line [ i ] )	1634:4:44191:44220	5452671	0	True				
ANR	5452759	AssignmentExpression	line [ i ] = tolower ( line [ i ] )		5452671	0		=			
ANR	5452760	ArrayIndexing	line [ i ]		5452671	0					
ANR	5452761	Identifier	line		5452671	0					
ANR	5452762	Identifier	i		5452671	1					
ANR	5452763	CallExpression	tolower ( line [ i ] )		5452671	1					
ANR	5452764	Callee	tolower		5452671	0					
ANR	5452765	Identifier	tolower		5452671	0					
ANR	5452766	ArgumentList	line [ i ]		5452671	1					
ANR	5452767	Argument	line [ i ]		5452671	0					
ANR	5452768	ArrayIndexing	line [ i ]		5452671	0					
ANR	5452769	Identifier	line		5452671	0					
ANR	5452770	Identifier	i		5452671	1					
ANR	5452771	IfStatement	if ( line [ i - 1 ] == '\\n' )		5452671	1					
ANR	5452772	Condition	line [ i - 1 ] == '\\n'	1636:8:44235:44251	5452671	0	True				
ANR	5452773	EqualityExpression	line [ i - 1 ] == '\\n'		5452671	0		==			
ANR	5452774	ArrayIndexing	line [ i - 1 ]		5452671	0					
ANR	5452775	Identifier	line		5452671	0					
ANR	5452776	AdditiveExpression	i - 1		5452671	1		-			
ANR	5452777	Identifier	i		5452671	0					
ANR	5452778	PrimaryExpression	1		5452671	1					
ANR	5452779	PrimaryExpression	'\\n'		5452671	1					
ANR	5452780	CompoundStatement		18:28:381:381	5452671	1					
ANR	5452781	ExpressionStatement	line [ i - 1 ] = '\\0'	1637:4:44262:44278	5452671	0	True				
ANR	5452782	AssignmentExpression	line [ i - 1 ] = '\\0'		5452671	0		=			
ANR	5452783	ArrayIndexing	line [ i - 1 ]		5452671	0					
ANR	5452784	Identifier	line		5452671	0					
ANR	5452785	AdditiveExpression	i - 1		5452671	1		-			
ANR	5452786	Identifier	i		5452671	0					
ANR	5452787	PrimaryExpression	1		5452671	1					
ANR	5452788	PrimaryExpression	'\\0'		5452671	1					
ANR	5452789	ExpressionStatement	"done = ! handleSquawk ( line , addr )"	1639:3:44288:44323	5452671	2	True				
ANR	5452790	AssignmentExpression	"done = ! handleSquawk ( line , addr )"		5452671	0		=			
ANR	5452791	Identifier	done		5452671	0					
ANR	5452792	UnaryOperationExpression	"! handleSquawk ( line , addr )"		5452671	1					
ANR	5452793	UnaryOperator	!		5452671	0					
ANR	5452794	CallExpression	"handleSquawk ( line , addr )"		5452671	1					
ANR	5452795	Callee	handleSquawk		5452671	0					
ANR	5452796	Identifier	handleSquawk		5452671	0					
ANR	5452797	ArgumentList	line		5452671	1					
ANR	5452798	Argument	line		5452671	0					
ANR	5452799	Identifier	line		5452671	0					
ANR	5452800	Argument	addr		5452671	1					
ANR	5452801	Identifier	addr		5452671	0					
ANR	5452802	ReturnType	void		5452671	1					
ANR	5452803	Identifier	doSquawk		5452671	2					
ANR	5452804	ParameterList	char * address		5452671	3					
ANR	5452805	Parameter	char * address	1619:10:43857:43869	5452671	0	True				
ANR	5452806	ParameterType	char *		5452671	0					
ANR	5452807	Identifier	address		5452671	1					
ANR	5452808	CFGEntryNode	ENTRY		5452671		True				
ANR	5452809	CFGExitNode	EXIT		5452671		True				
ANR	5452810	Symbol	stdin		5452671						
ANR	5452811	Symbol	address		5452671						
ANR	5452812	Symbol	stdout		5452671						
ANR	5452813	Symbol	tolower		5452671						
ANR	5452814	Symbol	handleSquawk		5452671						
ANR	5452815	Symbol	line		5452671						
ANR	5452816	Symbol	i		5452671						
ANR	5452817	Symbol	TRUE		5452671						
ANR	5452818	Symbol	* line		5452671						
ANR	5452819	Symbol	done		5452671						
ANR	5452820	Symbol	fgets		5452671						
ANR	5452821	Symbol	* i		5452671						
ANR	5452822	Symbol	FALSE		5452671						
ANR	5452823	Symbol	addr		5452671						
ANR	5452824	Function	handleSquawk	1644:0:44335:47144							
ANR	5452825	FunctionDef	"handleSquawk (char * line , char * addr)"		5452824	0					
ANR	5452826	CompoundStatement		1645:39:44378:47144	5452824	0					
ANR	5452827	IdentifierDeclStatement	char * token ;	1647:1:44383:44394	5452824	0	True				
ANR	5452828	IdentifierDecl	* token		5452824	0					
ANR	5452829	IdentifierDeclType	char *		5452824	0					
ANR	5452830	Identifier	token		5452824	1					
ANR	5452831	IdentifierDeclStatement	"int command , signal ;"	1648:1:44397:44416	5452824	1	True				
ANR	5452832	IdentifierDecl	command		5452824	0					
ANR	5452833	IdentifierDeclType	int		5452824	0					
ANR	5452834	Identifier	command		5452824	1					
ANR	5452835	IdentifierDecl	signal		5452824	1					
ANR	5452836	IdentifierDeclType	int		5452824	0					
ANR	5452837	Identifier	signal		5452824	1					
ANR	5452838	IdentifierDeclStatement	ReliSock sock ;	1649:4:44422:44435	5452824	2	True				
ANR	5452839	IdentifierDecl	sock		5452824	0					
ANR	5452840	IdentifierDeclType	ReliSock		5452824	0					
ANR	5452841	Identifier	sock		5452824	1					
ANR	5452842	IfStatement	if ( ! sock . connect ( addr ) )		5452824	3					
ANR	5452843	Condition	! sock . connect ( addr )	1651:9:44447:44467	5452824	0	True				
ANR	5452844	UnaryOperationExpression	! sock . connect ( addr )		5452824	0					
ANR	5452845	UnaryOperator	!		5452824	0					
ANR	5452846	CallExpression	sock . connect ( addr )		5452824	1					
ANR	5452847	Callee	sock . connect		5452824	0					
ANR	5452848	MemberAccess	sock . connect		5452824	0					
ANR	5452849	Identifier	sock		5452824	0					
ANR	5452850	Identifier	connect		5452824	1					
ANR	5452851	ArgumentList	addr		5452824	1					
ANR	5452852	Argument	addr		5452824	0					
ANR	5452853	Identifier	addr		5452824	0					
ANR	5452854	CompoundStatement		7:33:92:92	5452824	1					
ANR	5452855	ExpressionStatement	"printf ( ""Problems connecting to %s\\n"" , addr )"	1652:8:44481:44527	5452824	0	True				
ANR	5452856	CallExpression	"printf ( ""Problems connecting to %s\\n"" , addr )"		5452824	0					
ANR	5452857	Callee	printf		5452824	0					
ANR	5452858	Identifier	printf		5452824	0					
ANR	5452859	ArgumentList	"""Problems connecting to %s\\n"""		5452824	1					
ANR	5452860	Argument	"""Problems connecting to %s\\n"""		5452824	0					
ANR	5452861	PrimaryExpression	"""Problems connecting to %s\\n"""		5452824	0					
ANR	5452862	Argument	addr		5452824	1					
ANR	5452863	Identifier	addr		5452824	0					
ANR	5452864	ReturnStatement	return TRUE ;	1653:8:44537:44548	5452824	1	True				
ANR	5452865	Identifier	TRUE		5452824	0					
ANR	5452866	ExpressionStatement	"token = strtok ( line , "" "" )"	1657:1:44567:44594	5452824	4	True				
ANR	5452867	AssignmentExpression	"token = strtok ( line , "" "" )"		5452824	0		=			
ANR	5452868	Identifier	token		5452824	0					
ANR	5452869	CallExpression	"strtok ( line , "" "" )"		5452824	1					
ANR	5452870	Callee	strtok		5452824	0					
ANR	5452871	Identifier	strtok		5452824	0					
ANR	5452872	ArgumentList	line		5452824	1					
ANR	5452873	Argument	line		5452824	0					
ANR	5452874	Identifier	line		5452824	0					
ANR	5452875	Argument	""" """		5452824	1					
ANR	5452876	PrimaryExpression	""" """		5452824	0					
ANR	5452877	IfStatement	if ( ! token )		5452824	5					
ANR	5452878	Condition	! token	1659:6:44603:44608	5452824	0	True				
ANR	5452879	UnaryOperationExpression	! token		5452824	0					
ANR	5452880	UnaryOperator	!		5452824	0					
ANR	5452881	Identifier	token		5452824	1					
ANR	5452882	ReturnStatement	return TRUE ;	1659:15:44612:44623	5452824	1	True				
ANR	5452883	Identifier	TRUE		5452824	0					
ANR	5452884	SwitchStatement	switch ( token [ 0 ] )		5452824	6					
ANR	5452885	Condition	token [ 0 ]	1661:10:44637:44644	5452824	0	True				
ANR	5452886	ArrayIndexing	token [ 0 ]		5452824	0					
ANR	5452887	Identifier	token		5452824	0					
ANR	5452888	PrimaryExpression	0		5452824	1					
ANR	5452889	CompoundStatement		17:21:269:269	5452824	1					
ANR	5452890	Label	case 'e' :	1662:1:44651:44659	5452824	0	True				
ANR	5452891	Label	case 'q' :	1663:1:44673:44681	5452824	1	True				
ANR	5452892	ReturnStatement	return FALSE ;	1664:2:44696:44708	5452824	2	True				
ANR	5452893	Identifier	FALSE		5452824	0					
ANR	5452894	Label	case 'd' :	1666:1:44714:44722	5452824	3	True				
ANR	5452895	CompoundStatement		31:2:570:580	5452824	4					
ANR	5452896	IdentifierDeclStatement	"Daemon d ( DT_ANY , addr ) ;"	1667:2:44745:44769	5452824	0	True				
ANR	5452897	IdentifierDecl	"d ( DT_ANY , addr )"		5452824	0					
ANR	5452898	IdentifierDeclType	Daemon		5452824	0					
ANR	5452899	Identifier	d		5452824	1					
ANR	5452900	Expression	"DT_ANY , addr"		5452824	2					
ANR	5452901	Identifier	DT_ANY		5452824	0					
ANR	5452902	Identifier	addr		5452824	1					
ANR	5452903	IdentifierDeclStatement	CondorError errstack ;	1668:2:44773:44793	5452824	1	True				
ANR	5452904	IdentifierDecl	errstack		5452824	0					
ANR	5452905	IdentifierDeclType	CondorError		5452824	0					
ANR	5452906	Identifier	errstack		5452824	1					
ANR	5452907	IfStatement	"if ( ! d . startCommand ( DUMP_STATE , & sock , 0 , & errstack ) )"		5452824	2					
ANR	5452908	Condition	"! d . startCommand ( DUMP_STATE , & sock , 0 , & errstack )"	1669:12:44807:44854	5452824	0	True				
ANR	5452909	UnaryOperationExpression	"! d . startCommand ( DUMP_STATE , & sock , 0 , & errstack )"		5452824	0					
ANR	5452910	UnaryOperator	!		5452824	0					
ANR	5452911	CallExpression	"d . startCommand ( DUMP_STATE , & sock , 0 , & errstack )"		5452824	1					
ANR	5452912	Callee	d . startCommand		5452824	0					
ANR	5452913	MemberAccess	d . startCommand		5452824	0					
ANR	5452914	Identifier	d		5452824	0					
ANR	5452915	Identifier	startCommand		5452824	1					
ANR	5452916	ArgumentList	DUMP_STATE		5452824	1					
ANR	5452917	Argument	DUMP_STATE		5452824	0					
ANR	5452918	Identifier	DUMP_STATE		5452824	0					
ANR	5452919	Argument	& sock		5452824	1					
ANR	5452920	UnaryOperationExpression	& sock		5452824	0					
ANR	5452921	UnaryOperator	&		5452824	0					
ANR	5452922	Identifier	sock		5452824	1					
ANR	5452923	Argument	0		5452824	2					
ANR	5452924	PrimaryExpression	0		5452824	0					
ANR	5452925	Argument	& errstack		5452824	3					
ANR	5452926	UnaryOperationExpression	& errstack		5452824	0					
ANR	5452927	UnaryOperator	&		5452824	0					
ANR	5452928	Identifier	errstack		5452824	1					
ANR	5452929	CompoundStatement		25:62:478:478	5452824	1					
ANR	5452930	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1670:3:44862:44922	5452824	0	True				
ANR	5452931	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		5452824	0					
ANR	5452932	Callee	fprintf		5452824	0					
ANR	5452933	Identifier	fprintf		5452824	0					
ANR	5452934	ArgumentList	stderr		5452824	1					
ANR	5452935	Argument	stderr		5452824	0					
ANR	5452936	Identifier	stderr		5452824	0					
ANR	5452937	Argument	"""ERROR\\n%s\\n"""		5452824	1					
ANR	5452938	PrimaryExpression	"""ERROR\\n%s\\n"""		5452824	0					
ANR	5452939	Argument	errstack . getFullText ( true )		5452824	2					
ANR	5452940	CallExpression	errstack . getFullText ( true )		5452824	0					
ANR	5452941	Callee	errstack . getFullText		5452824	0					
ANR	5452942	MemberAccess	errstack . getFullText		5452824	0					
ANR	5452943	Identifier	errstack		5452824	0					
ANR	5452944	Identifier	getFullText		5452824	1					
ANR	5452945	ArgumentList	true		5452824	1					
ANR	5452946	Argument	true		5452824	0					
ANR	5452947	Identifier	true		5452824	0					
ANR	5452948	ExpressionStatement	sock . decode ( )	1673:2:44931:44944	5452824	3	True				
ANR	5452949	CallExpression	sock . decode ( )		5452824	0					
ANR	5452950	Callee	sock . decode		5452824	0					
ANR	5452951	MemberAccess	sock . decode		5452824	0					
ANR	5452952	Identifier	sock		5452824	0					
ANR	5452953	Identifier	decode		5452824	1					
ANR	5452954	ArgumentList			5452824	1					
ANR	5452955	IdentifierDeclStatement	ClassAd ad ;	1675:2:44949:44959	5452824	4	True				
ANR	5452956	IdentifierDecl	ad		5452824	0					
ANR	5452957	IdentifierDeclType	ClassAd		5452824	0					
ANR	5452958	Identifier	ad		5452824	1					
ANR	5452959	ExpressionStatement	ad . initFromStream ( sock )	1676:2:44963:44988	5452824	5	True				
ANR	5452960	CallExpression	ad . initFromStream ( sock )		5452824	0					
ANR	5452961	Callee	ad . initFromStream		5452824	0					
ANR	5452962	MemberAccess	ad . initFromStream		5452824	0					
ANR	5452963	Identifier	ad		5452824	0					
ANR	5452964	Identifier	initFromStream		5452824	1					
ANR	5452965	ArgumentList	sock		5452824	1					
ANR	5452966	Argument	sock		5452824	0					
ANR	5452967	Identifier	sock		5452824	0					
ANR	5452968	ExpressionStatement	"printAdToFile ( & ad , NULL )"	1677:2:44992:45018	5452824	6	True				
ANR	5452969	CallExpression	"printAdToFile ( & ad , NULL )"		5452824	0					
ANR	5452970	Callee	printAdToFile		5452824	0					
ANR	5452971	Identifier	printAdToFile		5452824	0					
ANR	5452972	ArgumentList	& ad		5452824	1					
ANR	5452973	Argument	& ad		5452824	0					
ANR	5452974	UnaryOperationExpression	& ad		5452824	0					
ANR	5452975	UnaryOperator	&		5452824	0					
ANR	5452976	Identifier	ad		5452824	1					
ANR	5452977	Argument	NULL		5452824	1					
ANR	5452978	Identifier	NULL		5452824	0					
ANR	5452979	ReturnStatement	return TRUE ;	1679:2:45025:45036	5452824	7	True				
ANR	5452980	Identifier	TRUE		5452824	0					
ANR	5452981	Label	case 's' :	1681:1:45042:45050	5452824	5	True				
ANR	5452982	CompoundStatement		56:2:1128:1148	5452824	6					
ANR	5452983	ExpressionStatement	"token = strtok ( NULL , "" "" )"	1682:2:45080:45107	5452824	0	True				
ANR	5452984	AssignmentExpression	"token = strtok ( NULL , "" "" )"		5452824	0		=			
ANR	5452985	Identifier	token		5452824	0					
ANR	5452986	CallExpression	"strtok ( NULL , "" "" )"		5452824	1					
ANR	5452987	Callee	strtok		5452824	0					
ANR	5452988	Identifier	strtok		5452824	0					
ANR	5452989	ArgumentList	NULL		5452824	1					
ANR	5452990	Argument	NULL		5452824	0					
ANR	5452991	Identifier	NULL		5452824	0					
ANR	5452992	Argument	""" """		5452824	1					
ANR	5452993	PrimaryExpression	""" """		5452824	0					
ANR	5452994	IfStatement	if ( ! token )		5452824	1					
ANR	5452995	Condition	! token	1683:7:45116:45121	5452824	0	True				
ANR	5452996	UnaryOperationExpression	! token		5452824	0					
ANR	5452997	UnaryOperator	!		5452824	0					
ANR	5452998	Identifier	token		5452824	1					
ANR	5452999	CompoundStatement		39:16:746:746	5452824	1					
ANR	5453000	ExpressionStatement	"printf ( ""You must specify a signal to send.\\n"" )"	1684:3:45130:45179	5452824	0	True				
ANR	5453001	CallExpression	"printf ( ""You must specify a signal to send.\\n"" )"		5452824	0					
ANR	5453002	Callee	printf		5452824	0					
ANR	5453003	Identifier	printf		5452824	0					
ANR	5453004	ArgumentList	"""You must specify a signal to send.\\n"""		5452824	1					
ANR	5453005	Argument	"""You must specify a signal to send.\\n"""		5452824	0					
ANR	5453006	PrimaryExpression	"""You must specify a signal to send.\\n"""		5452824	0					
ANR	5453007	ReturnStatement	return TRUE ;	1685:3:45184:45195	5452824	1	True				
ANR	5453008	Identifier	TRUE		5452824	0					
ANR	5453009	IfStatement	"if ( strncmp ( token , ""dc_"" , 3 ) )"		5452824	2					
ANR	5453010	Condition	"strncmp ( token , ""dc_"" , 3 )"	1687:7:45208:45233	5452824	0	True				
ANR	5453011	CallExpression	"strncmp ( token , ""dc_"" , 3 )"		5452824	0					
ANR	5453012	Callee	strncmp		5452824	0					
ANR	5453013	Identifier	strncmp		5452824	0					
ANR	5453014	ArgumentList	token		5452824	1					
ANR	5453015	Argument	token		5452824	0					
ANR	5453016	Identifier	token		5452824	0					
ANR	5453017	Argument	"""dc_"""		5452824	1					
ANR	5453018	PrimaryExpression	"""dc_"""		5452824	0					
ANR	5453019	Argument	3		5452824	2					
ANR	5453020	PrimaryExpression	3		5452824	0					
ANR	5453021	CompoundStatement		43:36:858:858	5452824	1					
ANR	5453022	Statement	printf	1688:3:45242:45247	5452824	0	True				
ANR	5453023	Statement	(	1688:10:45249:45249	5452824	1	True				
ANR	5453024	Statement	"""The signal must be a daemoncore signal """	1688:12:45251:45291	5452824	2	True				
ANR	5453025	Statement	"""(starts with DC_).\\n"""	1689:6:45299:45320	5452824	3	True				
ANR	5453026	Statement	)	1689:29:45322:45322	5452824	4	True				
ANR	5453027	ExpressionStatement		1689:30:45323:45323	5452824	5	True				
ANR	5453028	ReturnStatement	return TRUE ;	1690:3:45328:45339	5452824	6	True				
ANR	5453029	Identifier	TRUE		5452824	0					
ANR	5453030	ExpressionStatement	signal = getCommandNum ( token )	1693:2:45350:45381	5452824	3	True				
ANR	5453031	AssignmentExpression	signal = getCommandNum ( token )		5452824	0		=			
ANR	5453032	Identifier	signal		5452824	0					
ANR	5453033	CallExpression	getCommandNum ( token )		5452824	1					
ANR	5453034	Callee	getCommandNum		5452824	0					
ANR	5453035	Identifier	getCommandNum		5452824	0					
ANR	5453036	ArgumentList	token		5452824	1					
ANR	5453037	Argument	token		5452824	0					
ANR	5453038	Identifier	token		5452824	0					
ANR	5453039	IfStatement	if ( signal == - 1 )		5452824	4					
ANR	5453040	Condition	signal == - 1	1694:7:45390:45401	5452824	0	True				
ANR	5453041	EqualityExpression	signal == - 1		5452824	0		==			
ANR	5453042	Identifier	signal		5452824	0					
ANR	5453043	UnaryOperationExpression	- 1		5452824	1					
ANR	5453044	UnaryOperator	-		5452824	0					
ANR	5453045	PrimaryExpression	1		5452824	1					
ANR	5453046	CompoundStatement		50:22:1026:1026	5452824	1					
ANR	5453047	ExpressionStatement	"printf ( ""Signal %s not known.\\n"" , token )"	1695:3:45410:45452	5452824	0	True				
ANR	5453048	CallExpression	"printf ( ""Signal %s not known.\\n"" , token )"		5452824	0					
ANR	5453049	Callee	printf		5452824	0					
ANR	5453050	Identifier	printf		5452824	0					
ANR	5453051	ArgumentList	"""Signal %s not known.\\n"""		5452824	1					
ANR	5453052	Argument	"""Signal %s not known.\\n"""		5452824	0					
ANR	5453053	PrimaryExpression	"""Signal %s not known.\\n"""		5452824	0					
ANR	5453054	Argument	token		5452824	1					
ANR	5453055	Identifier	token		5452824	0					
ANR	5453056	ReturnStatement	return TRUE ;	1696:3:45457:45468	5452824	1	True				
ANR	5453057	Identifier	TRUE		5452824	0					
ANR	5453058	IdentifierDeclStatement	"Daemon d ( DT_ANY , addr ) ;"	1699:2:45479:45503	5452824	5	True				
ANR	5453059	IdentifierDecl	"d ( DT_ANY , addr )"		5452824	0					
ANR	5453060	IdentifierDeclType	Daemon		5452824	0					
ANR	5453061	Identifier	d		5452824	1					
ANR	5453062	Expression	"DT_ANY , addr"		5452824	2					
ANR	5453063	Identifier	DT_ANY		5452824	0					
ANR	5453064	Identifier	addr		5452824	1					
ANR	5453065	IdentifierDeclStatement	CondorError errstack ;	1700:2:45507:45527	5452824	6	True				
ANR	5453066	IdentifierDecl	errstack		5452824	0					
ANR	5453067	IdentifierDeclType	CondorError		5452824	0					
ANR	5453068	Identifier	errstack		5452824	1					
ANR	5453069	IfStatement	"if ( ! d . startCommand ( DC_RAISESIGNAL , & sock , 0 , & errstack ) )"		5452824	7					
ANR	5453070	Condition	"! d . startCommand ( DC_RAISESIGNAL , & sock , 0 , & errstack )"	1701:6:45535:45587	5452824	0	True				
ANR	5453071	UnaryOperationExpression	"! d . startCommand ( DC_RAISESIGNAL , & sock , 0 , & errstack )"		5452824	0					
ANR	5453072	UnaryOperator	!		5452824	0					
ANR	5453073	CallExpression	"d . startCommand ( DC_RAISESIGNAL , & sock , 0 , & errstack )"		5452824	1					
ANR	5453074	Callee	d . startCommand		5452824	0					
ANR	5453075	MemberAccess	d . startCommand		5452824	0					
ANR	5453076	Identifier	d		5452824	0					
ANR	5453077	Identifier	startCommand		5452824	1					
ANR	5453078	ArgumentList	DC_RAISESIGNAL		5452824	1					
ANR	5453079	Argument	DC_RAISESIGNAL		5452824	0					
ANR	5453080	Identifier	DC_RAISESIGNAL		5452824	0					
ANR	5453081	Argument	& sock		5452824	1					
ANR	5453082	UnaryOperationExpression	& sock		5452824	0					
ANR	5453083	UnaryOperator	&		5452824	0					
ANR	5453084	Identifier	sock		5452824	1					
ANR	5453085	Argument	0		5452824	2					
ANR	5453086	PrimaryExpression	0		5452824	0					
ANR	5453087	Argument	& errstack		5452824	3					
ANR	5453088	UnaryOperationExpression	& errstack		5452824	0					
ANR	5453089	UnaryOperator	&		5452824	0					
ANR	5453090	Identifier	errstack		5452824	1					
ANR	5453091	CompoundStatement		57:61:1211:1211	5452824	1					
ANR	5453092	ExpressionStatement	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"	1702:3:45595:45655	5452824	0	True				
ANR	5453093	CallExpression	"fprintf ( stderr , ""ERROR\\n%s\\n"" , errstack . getFullText ( true ) )"		5452824	0					
ANR	5453094	Callee	fprintf		5452824	0					
ANR	5453095	Identifier	fprintf		5452824	0					
ANR	5453096	ArgumentList	stderr		5452824	1					
ANR	5453097	Argument	stderr		5452824	0					
ANR	5453098	Identifier	stderr		5452824	0					
ANR	5453099	Argument	"""ERROR\\n%s\\n"""		5452824	1					
ANR	5453100	PrimaryExpression	"""ERROR\\n%s\\n"""		5452824	0					
ANR	5453101	Argument	errstack . getFullText ( true )		5452824	2					
ANR	5453102	CallExpression	errstack . getFullText ( true )		5452824	0					
ANR	5453103	Callee	errstack . getFullText		5452824	0					
ANR	5453104	MemberAccess	errstack . getFullText		5452824	0					
ANR	5453105	Identifier	errstack		5452824	0					
ANR	5453106	Identifier	getFullText		5452824	1					
ANR	5453107	ArgumentList	true		5452824	1					
ANR	5453108	Argument	true		5452824	0					
ANR	5453109	Identifier	true		5452824	0					
ANR	5453110	ExpressionStatement	sock . encode ( )	1705:2:45664:45677	5452824	8	True				
ANR	5453111	CallExpression	sock . encode ( )		5452824	0					
ANR	5453112	Callee	sock . encode		5452824	0					
ANR	5453113	MemberAccess	sock . encode		5452824	0					
ANR	5453114	Identifier	sock		5452824	0					
ANR	5453115	Identifier	encode		5452824	1					
ANR	5453116	ArgumentList			5452824	1					
ANR	5453117	ExpressionStatement	sock . code ( signal )	1706:2:45681:45700	5452824	9	True				
ANR	5453118	CallExpression	sock . code ( signal )		5452824	0					
ANR	5453119	Callee	sock . code		5452824	0					
ANR	5453120	MemberAccess	sock . code		5452824	0					
ANR	5453121	Identifier	sock		5452824	0					
ANR	5453122	Identifier	code		5452824	1					
ANR	5453123	ArgumentList	signal		5452824	1					
ANR	5453124	Argument	signal		5452824	0					
ANR	5453125	Identifier	signal		5452824	0					
ANR	5453126	ExpressionStatement	sock . end_of_message ( )	1707:2:45704:45725	5452824	10	True				
ANR	5453127	CallExpression	sock . end_of_message ( )		5452824	0					
ANR	5453128	Callee	sock . end_of_message		5452824	0					
ANR	5453129	MemberAccess	sock . end_of_message		5452824	0					
ANR	5453130	Identifier	sock		5452824	0					
ANR	5453131	Identifier	end_of_message		5452824	1					
ANR	5453132	ArgumentList			5452824	1					
ANR	5453133	ReturnStatement	return TRUE ;	1709:2:45732:45743	5452824	11	True				
ANR	5453134	Identifier	TRUE		5452824	0					
ANR	5453135	Label	case 'c' :	1711:1:45749:45757	5452824	7	True				
ANR	5453136	CompoundStatement		81:2:1693:1713	5452824	8					
ANR	5453137	ExpressionStatement	"token = strtok ( NULL , "" "" )"	1712:2:45787:45814	5452824	0	True				
ANR	5453138	AssignmentExpression	"token = strtok ( NULL , "" "" )"		5452824	0		=			
ANR	5453139	Identifier	token		5452824	0					
ANR	5453140	CallExpression	"strtok ( NULL , "" "" )"		5452824	1					
ANR	5453141	Callee	strtok		5452824	0					
ANR	5453142	Identifier	strtok		5452824	0					
ANR	5453143	ArgumentList	NULL		5452824	1					
ANR	5453144	Argument	NULL		5452824	0					
ANR	5453145	Identifier	NULL		5452824	0					
ANR	5453146	Argument	""" """		5452824	1					
ANR	5453147	PrimaryExpression	""" """		5452824	0					
ANR	5453148	IfStatement	if ( ! token )		5452824	1					
ANR	5453149	Condition	! token	1713:7:45823:45828	5452824	0	True				
ANR	5453150	UnaryOperationExpression	! token		5452824	0					
ANR	5453151	UnaryOperator	!		5452824	0					
ANR	5453152	Identifier	token		5452824	1					
ANR	5453153	CompoundStatement		69:16:1453:1453	5452824	1					
ANR	5453154	ExpressionStatement	"printf ( ""You must specify a command to send.\\n"" )"	1714:3:45837:45887	5452824	0	True				
ANR	5453155	CallExpression	"printf ( ""You must specify a command to send.\\n"" )"		5452824	0					
ANR	5453156	Callee	printf		5452824	0					
ANR	5453157	Identifier	printf		5452824	0					
ANR	5453158	ArgumentList	"""You must specify a command to send.\\n"""		5452824	1					
ANR	5453159	Argument	"""You must specify a command to send.\\n"""		5452824	0					
ANR	5453160	PrimaryExpression	"""You must specify a command to send.\\n"""		5452824	0					
ANR	5453161	ReturnStatement	return TRUE ;	1715:3:45892:45903	5452824	1	True				
ANR	5453162	Identifier	TRUE		5452824	0					
ANR	5453163	ExpressionStatement	command = getCommandNum ( token )	1718:2:45914:45946	5452824	2	True				
ANR	5453164	AssignmentExpression	command = getCommandNum ( token )		5452824	0		=			
ANR	5453165	Identifier	command		5452824	0					
ANR	5453166	CallExpression	getCommandNum ( token )		5452824	1					
ANR	5453167	Callee	getCommandNum		5452824	0					
ANR	5453168	Identifier	getCommandNum		5452824	0					
ANR	5453169	ArgumentList	token		5452824	1					
ANR	5453170	Argument	token		5452824	0					
ANR	5453171	Identifier	token		5452824	0					
ANR	5453172	IfStatement	if ( command == - 1 )		5452824	3					
ANR	5453173	Condition	command == - 1	1719:7:45955:45967	5452824	0	True				
ANR	5453174	EqualityExpression	command == - 1		5452824	0		==			
ANR	5453175	Identifier	command		5452824	0					
ANR	5453176	UnaryOperationExpression	- 1		5452824	1					
ANR	5453177	UnaryOperator	-		5452824	0					
ANR	5453178	PrimaryExpression	1		5452824	1					
ANR	5453179	CompoundStatement		75:23:1592:1592	5452824	1					
ANR	5453180	ExpressionStatement	"printf ( ""Command %s not known.\\n"" , token )"	1720:3:45976:46019	5452824	0	True				
ANR	5453181	CallExpression	"printf ( ""Command %s not known.\\n"" , token )"		5452824	0					
ANR	5453182	Callee	printf		5452824	0					
ANR	5453183	Identifier	printf		5452824	0					
ANR	5453184	ArgumentList	"""Command %s not known.\\n"""		5452824	1					
ANR	5453185	Argument	"""Command %s not known.\\n"""		5452824	0					
ANR	5453186	PrimaryExpression	"""Command %s not known.\\n"""		5452824	0					
ANR	5453187	Argument	token		5452824	1					
ANR	5453188	Identifier	token		5452824	0					
ANR	5453189	ReturnStatement	return TRUE ;	1721:3:46024:46035	5452824	1	True				
ANR	5453190	Identifier	TRUE		5452824	0					
ANR	5453191	IdentifierDeclStatement	"Daemon d ( DT_ANY , addr ) ;"	1724:2:46044:46068	5452824	4	True				
ANR	5453192	IdentifierDecl	"d ( DT_ANY , addr )"		5452824	0					
ANR	5453193	IdentifierDeclType	Daemon		5452824	0					
ANR	5453194	Identifier	d		5452824	1					
ANR	5453195	Expression	"DT_ANY , addr"		5452824	2					
ANR	5453196	Identifier	DT_ANY		5452824	0					
ANR	5453197	Identifier	addr		5452824	1					
ANR	5453198	IdentifierDeclStatement	CondorError errstack ;	1725:2:46072:46092	5452824	5	True				
ANR	5453199	IdentifierDecl	errstack		5452824	0					
ANR	5453200	IdentifierDeclType	CondorError		5452824	0					
ANR	5453201	Identifier	errstack		5452824	1					
ANR	5453202	IfStatement	"if ( ! d . startCommand ( command , & sock , 0 , & errstack ) )"		5452824	6					
ANR	5453203	Condition	"! d . startCommand ( command , & sock , 0 , & errstack )"	1726:6:46100:46146	5452824	0	True				
ANR	5453204	UnaryOperationExpression	"! d . startCommand ( command , & sock , 0 , & errstack )"		5452824	0					
ANR	5453205	UnaryOperator	!		5452824	0					
ANR	5453206	CallExpression	"d . startCommand ( command , & sock , 0 , & errstack )"		5452824	1					
ANR	5453207	Callee	d . startCommand		5452824	0					
ANR	5453208	MemberAccess	d . startCommand		5452824	0					
ANR	5453209	Identifier	d		5452824	0					
ANR	5453210	Identifier	startCommand		5452824	1					
ANR	5453211	ArgumentList	command		5452824	1					
ANR	5453212	Argument	command		5452824	0					
ANR	5453213	Identifier	command		5452824	0					
ANR	5453214	Argument	& sock		5452824	1					
ANR	5453215	UnaryOperationExpression	& sock		5452824	0					
ANR	5453216	UnaryOperator	&		5452824	0					
ANR	5453217	Identifier	sock		5452824	1					
ANR	5453218	Argument	0		5452824	2					
ANR	5453219	PrimaryExpression	0		5452824	0					
ANR	5453220	Argument	& errstack		5452824	3					
ANR	5453221	UnaryOperationExpression	& errstack		5452824	0					
ANR	5453222	UnaryOperator	&		5452824	0					
ANR	5453223	Identifier	errstack		5452824	1					
ANR	5453224	CompoundStatement		82:55:1770:1770	5452824	1					
ANR	5453225	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"	1727:3:46154:46207	5452824	0	True				
ANR	5453226	CallExpression	"fprintf ( stderr , ""%s\\n"" , errstack . getFullText ( true ) )"		5452824	0					
ANR	5453227	Callee	fprintf		5452824	0					
ANR	5453228	Identifier	fprintf		5452824	0					
ANR	5453229	ArgumentList	stderr		5452824	1					
ANR	5453230	Argument	stderr		5452824	0					
ANR	5453231	Identifier	stderr		5452824	0					
ANR	5453232	Argument	"""%s\\n"""		5452824	1					
ANR	5453233	PrimaryExpression	"""%s\\n"""		5452824	0					
ANR	5453234	Argument	errstack . getFullText ( true )		5452824	2					
ANR	5453235	CallExpression	errstack . getFullText ( true )		5452824	0					
ANR	5453236	Callee	errstack . getFullText		5452824	0					
ANR	5453237	MemberAccess	errstack . getFullText		5452824	0					
ANR	5453238	Identifier	errstack		5452824	0					
ANR	5453239	Identifier	getFullText		5452824	1					
ANR	5453240	ArgumentList	true		5452824	1					
ANR	5453241	Argument	true		5452824	0					
ANR	5453242	Identifier	true		5452824	0					
ANR	5453243	ExpressionStatement	sock . encode ( )	1729:2:46215:46228	5452824	7	True				
ANR	5453244	CallExpression	sock . encode ( )		5452824	0					
ANR	5453245	Callee	sock . encode		5452824	0					
ANR	5453246	MemberAccess	sock . encode		5452824	0					
ANR	5453247	Identifier	sock		5452824	0					
ANR	5453248	Identifier	encode		5452824	1					
ANR	5453249	ArgumentList			5452824	1					
ANR	5453250	WhileStatement	"while ( ( token = strtok ( NULL , "" "" ) ) )"		5452824	8					
ANR	5453251	Condition	"token = strtok ( NULL , "" "" )"	1730:9:46239:46265	5452824	0	True				
ANR	5453252	AssignmentExpression	"token = strtok ( NULL , "" "" )"		5452824	0		=			
ANR	5453253	Identifier	token		5452824	0					
ANR	5453254	CallExpression	"strtok ( NULL , "" "" )"		5452824	1					
ANR	5453255	Callee	strtok		5452824	0					
ANR	5453256	Identifier	strtok		5452824	0					
ANR	5453257	ArgumentList	NULL		5452824	1					
ANR	5453258	Argument	NULL		5452824	0					
ANR	5453259	Identifier	NULL		5452824	0					
ANR	5453260	Argument	""" """		5452824	1					
ANR	5453261	PrimaryExpression	""" """		5452824	0					
ANR	5453262	CompoundStatement		86:39:1890:1890	5452824	1					
ANR	5453263	IfStatement	if ( isdigit ( token [ 0 ] ) )		5452824	0					
ANR	5453264	Condition	isdigit ( token [ 0 ] )	1731:8:46279:46295	5452824	0	True				
ANR	5453265	CallExpression	isdigit ( token [ 0 ] )		5452824	0					
ANR	5453266	Callee	isdigit		5452824	0					
ANR	5453267	Identifier	isdigit		5452824	0					
ANR	5453268	ArgumentList	token [ 0 ]		5452824	1					
ANR	5453269	Argument	token [ 0 ]		5452824	0					
ANR	5453270	ArrayIndexing	token [ 0 ]		5452824	0					
ANR	5453271	Identifier	token		5452824	0					
ANR	5453272	PrimaryExpression	0		5452824	1					
ANR	5453273	CompoundStatement		88:4:1926:1949	5452824	1					
ANR	5453274	IdentifierDeclStatement	int dig = atoi ( token ) ;	1732:4:46305:46328	5452824	0	True				
ANR	5453275	IdentifierDecl	dig = atoi ( token )		5452824	0					
ANR	5453276	IdentifierDeclType	int		5452824	0					
ANR	5453277	Identifier	dig		5452824	1					
ANR	5453278	AssignmentExpression	dig = atoi ( token )		5452824	2		=			
ANR	5453279	Identifier	dig		5452824	0					
ANR	5453280	CallExpression	atoi ( token )		5452824	1					
ANR	5453281	Callee	atoi		5452824	0					
ANR	5453282	Identifier	atoi		5452824	0					
ANR	5453283	ArgumentList	token		5452824	1					
ANR	5453284	Argument	token		5452824	0					
ANR	5453285	Identifier	token		5452824	0					
ANR	5453286	IfStatement	if ( ! sock . code ( dig ) )		5452824	1					
ANR	5453287	Condition	! sock . code ( dig )	1733:9:46339:46355	5452824	0	True				
ANR	5453288	UnaryOperationExpression	! sock . code ( dig )		5452824	0					
ANR	5453289	UnaryOperator	!		5452824	0					
ANR	5453290	CallExpression	sock . code ( dig )		5452824	1					
ANR	5453291	Callee	sock . code		5452824	0					
ANR	5453292	MemberAccess	sock . code		5452824	0					
ANR	5453293	Identifier	sock		5452824	0					
ANR	5453294	Identifier	code		5452824	1					
ANR	5453295	ArgumentList	dig		5452824	1					
ANR	5453296	Argument	dig		5452824	0					
ANR	5453297	Identifier	dig		5452824	0					
ANR	5453298	CompoundStatement		89:29:1980:1980	5452824	1					
ANR	5453299	ExpressionStatement	"printf ( ""Error coding %d.\\n"" , dig )"	1734:5:46366:46402	5452824	0	True				
ANR	5453300	CallExpression	"printf ( ""Error coding %d.\\n"" , dig )"		5452824	0					
ANR	5453301	Callee	printf		5452824	0					
ANR	5453302	Identifier	printf		5452824	0					
ANR	5453303	ArgumentList	"""Error coding %d.\\n"""		5452824	1					
ANR	5453304	Argument	"""Error coding %d.\\n"""		5452824	0					
ANR	5453305	PrimaryExpression	"""Error coding %d.\\n"""		5452824	0					
ANR	5453306	Argument	dig		5452824	1					
ANR	5453307	Identifier	dig		5452824	0					
ANR	5453308	ReturnStatement	return TRUE ;	1735:5:46409:46420	5452824	1	True				
ANR	5453309	Identifier	TRUE		5452824	0					
ANR	5453310	ElseStatement	else		5452824	0					
ANR	5453311	CompoundStatement		93:10:2059:2059	5452824	0					
ANR	5453312	IfStatement	if ( ! sock . code ( token ) )		5452824	0					
ANR	5453313	Condition	! sock . code ( token )	1738:9:46449:46467	5452824	0	True				
ANR	5453314	UnaryOperationExpression	! sock . code ( token )		5452824	0					
ANR	5453315	UnaryOperator	!		5452824	0					
ANR	5453316	CallExpression	sock . code ( token )		5452824	1					
ANR	5453317	Callee	sock . code		5452824	0					
ANR	5453318	MemberAccess	sock . code		5452824	0					
ANR	5453319	Identifier	sock		5452824	0					
ANR	5453320	Identifier	code		5452824	1					
ANR	5453321	ArgumentList	token		5452824	1					
ANR	5453322	Argument	token		5452824	0					
ANR	5453323	Identifier	token		5452824	0					
ANR	5453324	CompoundStatement		94:31:2092:2092	5452824	1					
ANR	5453325	ExpressionStatement	"printf ( ""Error coding %s.\\n"" , token )"	1739:5:46478:46516	5452824	0	True				
ANR	5453326	CallExpression	"printf ( ""Error coding %s.\\n"" , token )"		5452824	0					
ANR	5453327	Callee	printf		5452824	0					
ANR	5453328	Identifier	printf		5452824	0					
ANR	5453329	ArgumentList	"""Error coding %s.\\n"""		5452824	1					
ANR	5453330	Argument	"""Error coding %s.\\n"""		5452824	0					
ANR	5453331	PrimaryExpression	"""Error coding %s.\\n"""		5452824	0					
ANR	5453332	Argument	token		5452824	1					
ANR	5453333	Identifier	token		5452824	0					
ANR	5453334	ReturnStatement	return TRUE ;	1740:5:46523:46534	5452824	1	True				
ANR	5453335	Identifier	TRUE		5452824	0					
ANR	5453336	ExpressionStatement	sock . end_of_message ( )	1744:2:46553:46574	5452824	9	True				
ANR	5453337	CallExpression	sock . end_of_message ( )		5452824	0					
ANR	5453338	Callee	sock . end_of_message		5452824	0					
ANR	5453339	MemberAccess	sock . end_of_message		5452824	0					
ANR	5453340	Identifier	sock		5452824	0					
ANR	5453341	Identifier	end_of_message		5452824	1					
ANR	5453342	ArgumentList			5452824	1					
ANR	5453343	ReturnStatement	return TRUE ;	1746:2:46579:46590	5452824	10	True				
ANR	5453344	Identifier	TRUE		5452824	0					
ANR	5453345	Label	case 'r' :	1748:1:46596:46604	5452824	9	True				
ANR	5453346	IfStatement	if ( doSquawkReconnect ( addr ) )		5452824	10					
ANR	5453347	Condition	doSquawkReconnect ( addr )	1749:7:46613:46637	5452824	0	True				
ANR	5453348	CallExpression	doSquawkReconnect ( addr )		5452824	0					
ANR	5453349	Callee	doSquawkReconnect		5452824	0					
ANR	5453350	Identifier	doSquawkReconnect		5452824	0					
ANR	5453351	ArgumentList	addr		5452824	1					
ANR	5453352	Argument	addr		5452824	0					
ANR	5453353	Identifier	addr		5452824	0					
ANR	5453354	CompoundStatement		105:35:2262:2262	5452824	1					
ANR	5453355	ExpressionStatement	"printf ( ""Now talking to %s.\\n"" , addr )"	1750:3:46646:46685	5452824	0	True				
ANR	5453356	CallExpression	"printf ( ""Now talking to %s.\\n"" , addr )"		5452824	0					
ANR	5453357	Callee	printf		5452824	0					
ANR	5453358	Identifier	printf		5452824	0					
ANR	5453359	ArgumentList	"""Now talking to %s.\\n"""		5452824	1					
ANR	5453360	Argument	"""Now talking to %s.\\n"""		5452824	0					
ANR	5453361	PrimaryExpression	"""Now talking to %s.\\n"""		5452824	0					
ANR	5453362	Argument	addr		5452824	1					
ANR	5453363	Identifier	addr		5452824	0					
ANR	5453364	ReturnStatement	return TRUE ;	1752:2:46693:46704	5452824	11	True				
ANR	5453365	Identifier	TRUE		5452824	0					
ANR	5453366	Label	case '\\n' :	1754:1:46708:46717	5452824	12	True				
ANR	5453367	ReturnStatement	return TRUE ;	1755:2:46721:46732	5452824	13	True				
ANR	5453368	Identifier	TRUE		5452824	0					
ANR	5453369	Label	case 'h' :	1757:1:46736:46744	5452824	14	True				
ANR	5453370	IfStatement	"if ( ( token = strtok ( NULL , "" "" ) ) != NULL )"		5452824	15					
ANR	5453371	Condition	"( token = strtok ( NULL , "" "" ) ) != NULL"	1758:7:46764:46801	5452824	0	True				
ANR	5453372	EqualityExpression	"( token = strtok ( NULL , "" "" ) ) != NULL"		5452824	0		!=			
ANR	5453373	AssignmentExpression	"token = strtok ( NULL , "" "" )"		5452824	0		=			
ANR	5453374	Identifier	token		5452824	0					
ANR	5453375	CallExpression	"strtok ( NULL , "" "" )"		5452824	1					
ANR	5453376	Callee	strtok		5452824	0					
ANR	5453377	Identifier	strtok		5452824	0					
ANR	5453378	ArgumentList	NULL		5452824	1					
ANR	5453379	Argument	NULL		5452824	0					
ANR	5453380	Identifier	NULL		5452824	0					
ANR	5453381	Argument	""" """		5452824	1					
ANR	5453382	PrimaryExpression	""" """		5452824	0					
ANR	5453383	Identifier	NULL		5452824	1					
ANR	5453384	CompoundStatement		114:48:2426:2426	5452824	1					
ANR	5453385	ExpressionStatement	squawkHelp ( token )	1759:3:46810:46829	5452824	0	True				
ANR	5453386	CallExpression	squawkHelp ( token )		5452824	0					
ANR	5453387	Callee	squawkHelp		5452824	0					
ANR	5453388	Identifier	squawkHelp		5452824	0					
ANR	5453389	ArgumentList	token		5452824	1					
ANR	5453390	Argument	token		5452824	0					
ANR	5453391	Identifier	token		5452824	0					
ANR	5453392	ReturnStatement	return TRUE ;	1760:3:46834:46845	5452824	1	True				
ANR	5453393	Identifier	TRUE		5452824	0					
ANR	5453394	Label	default :	1763:1:46894:46901	5452824	16	True				
ANR	5453395	Identifier	default		5452824	0					
ANR	5453396	ExpressionStatement	"printf ( ""Valid commands are \\""help\\"", \\""signal\\"", \\""command\\"","" )"	1764:2:46905:46970	5452824	17	True				
ANR	5453397	CallExpression	"printf ( ""Valid commands are \\""help\\"", \\""signal\\"", \\""command\\"","" )"		5452824	0					
ANR	5453398	Callee	printf		5452824	0					
ANR	5453399	Identifier	printf		5452824	0					
ANR	5453400	ArgumentList	"""Valid commands are \\""help\\"", \\""signal\\"", \\""command\\"","""		5452824	1					
ANR	5453401	Argument	"""Valid commands are \\""help\\"", \\""signal\\"", \\""command\\"","""		5452824	0					
ANR	5453402	PrimaryExpression	"""Valid commands are \\""help\\"", \\""signal\\"", \\""command\\"","""		5452824	0					
ANR	5453403	ExpressionStatement	"printf ( ""\\""reconnect\\"",\\n\\""dump\\"" (state into a ClassAd) and"" )"	1765:2:46974:47037	5452824	18	True				
ANR	5453404	CallExpression	"printf ( ""\\""reconnect\\"",\\n\\""dump\\"" (state into a ClassAd) and"" )"		5452824	0					
ANR	5453405	Callee	printf		5452824	0					
ANR	5453406	Identifier	printf		5452824	0					
ANR	5453407	ArgumentList	"""\\""reconnect\\"",\\n\\""dump\\"" (state into a ClassAd) and"""		5452824	1					
ANR	5453408	Argument	"""\\""reconnect\\"",\\n\\""dump\\"" (state into a ClassAd) and"""		5452824	0					
ANR	5453409	PrimaryExpression	"""\\""reconnect\\"",\\n\\""dump\\"" (state into a ClassAd) and"""		5452824	0					
ANR	5453410	ExpressionStatement	"printf ( ""\\""quit\\"".\\n"" )"	1766:2:47041:47063	5452824	19	True				
ANR	5453411	CallExpression	"printf ( ""\\""quit\\"".\\n"" )"		5452824	0					
ANR	5453412	Callee	printf		5452824	0					
ANR	5453413	Identifier	printf		5452824	0					
ANR	5453414	ArgumentList	"""\\""quit\\"".\\n"""		5452824	1					
ANR	5453415	Argument	"""\\""quit\\"".\\n"""		5452824	0					
ANR	5453416	PrimaryExpression	"""\\""quit\\"".\\n"""		5452824	0					
ANR	5453417	ReturnStatement	return TRUE ;	1767:2:47067:47078	5452824	20	True				
ANR	5453418	Identifier	TRUE		5452824	0					
ANR	5453419	ReturnStatement	return TRUE ;	1770:1:47100:47111	5452824	7	True				
ANR	5453420	Identifier	TRUE		5452824	0					
ANR	5453421	ReturnType	int		5452824	1					
ANR	5453422	Identifier	handleSquawk		5452824	2					
ANR	5453423	ParameterList	"char * line , char * addr"		5452824	3					
ANR	5453424	Parameter	char * line	1645:14:44353:44362	5452824	0	True				
ANR	5453425	ParameterType	char *		5452824	0					
ANR	5453426	Identifier	line		5452824	1					
ANR	5453427	Parameter	char * addr	1645:26:44365:44374	5452824	1	True				
ANR	5453428	ParameterType	char *		5452824	0					
ANR	5453429	Identifier	addr		5452824	1					
ANR	5453430	CFGEntryNode	ENTRY		5452824		True				
ANR	5453431	CFGExitNode	EXIT		5452824		True				
ANR	5453432	Symbol	dig		5452824						
ANR	5453433	Symbol	line		5452824						
ANR	5453434	Symbol	& ad		5452824						
ANR	5453435	Symbol	getCommandNum		5452824						
ANR	5453436	Symbol	strncmp		5452824						
ANR	5453437	Symbol	sock . connect		5452824						
ANR	5453438	Symbol	DC_RAISESIGNAL		5452824						
ANR	5453439	Symbol	& errstack		5452824						
ANR	5453440	Symbol	DUMP_STATE		5452824						
ANR	5453441	Symbol	sock . code		5452824						
ANR	5453442	Symbol	addr		5452824						
ANR	5453443	Symbol	signal		5452824						
ANR	5453444	Symbol	isdigit		5452824						
ANR	5453445	Symbol	atoi		5452824						
ANR	5453446	Symbol	ad		5452824						
ANR	5453447	Symbol	NULL		5452824						
ANR	5453448	Symbol	doSquawkReconnect		5452824						
ANR	5453449	Symbol	d		5452824						
ANR	5453450	Symbol	TRUE		5452824						
ANR	5453451	Symbol	strtok		5452824						
ANR	5453452	Symbol	stderr		5452824						
ANR	5453453	Symbol	command		5452824						
ANR	5453454	Symbol	token		5452824						
ANR	5453455	Symbol	& sock		5452824						
ANR	5453456	Symbol	sock		5452824						
ANR	5453457	Symbol	d . startCommand		5452824						
ANR	5453458	Symbol	errstack		5452824						
ANR	5453459	Symbol	* token		5452824						
ANR	5453460	Symbol	true		5452824						
ANR	5453461	Symbol	errstack . getFullText		5452824						
ANR	5453462	Symbol	FALSE		5452824						
ANR	5453463	Function	doSquawkReconnect	1773:0:47147:48865							
ANR	5453464	FunctionDef	doSquawkReconnect (char * addr)		5453463	0					
ANR	5453465	CompoundStatement		1774:32:47183:48865	5453463	0					
ANR	5453466	IdentifierDeclStatement	char * token ;	1776:1:47188:47199	5453463	0	True				
ANR	5453467	IdentifierDecl	* token		5453463	0					
ANR	5453468	IdentifierDeclType	char *		5453463	0					
ANR	5453469	Identifier	token		5453463	1					
ANR	5453470	IfStatement	"if ( ( token = strtok ( NULL , "" "" ) ) == NULL )"		5453463	1					
ANR	5453471	Condition	"( token = strtok ( NULL , "" "" ) ) == NULL"	1778:6:47209:47245	5453463	0	True				
ANR	5453472	EqualityExpression	"( token = strtok ( NULL , "" "" ) ) == NULL"		5453463	0		==			
ANR	5453473	AssignmentExpression	"token = strtok ( NULL , "" "" )"		5453463	0		=			
ANR	5453474	Identifier	token		5453463	0					
ANR	5453475	CallExpression	"strtok ( NULL , "" "" )"		5453463	1					
ANR	5453476	Callee	strtok		5453463	0					
ANR	5453477	Identifier	strtok		5453463	0					
ANR	5453478	ArgumentList	NULL		5453463	1					
ANR	5453479	Argument	NULL		5453463	0					
ANR	5453480	Identifier	NULL		5453463	0					
ANR	5453481	Argument	""" """		5453463	1					
ANR	5453482	PrimaryExpression	""" """		5453463	0					
ANR	5453483	Identifier	NULL		5453463	1					
ANR	5453484	CompoundStatement		5:46:65:65	5453463	1					
ANR	5453485	ExpressionStatement	"printf ( ""You must specify a daemon to connect to...\\n"" )"	1779:2:47253:47310	5453463	0	True				
ANR	5453486	CallExpression	"printf ( ""You must specify a daemon to connect to...\\n"" )"		5453463	0					
ANR	5453487	Callee	printf		5453463	0					
ANR	5453488	Identifier	printf		5453463	0					
ANR	5453489	ArgumentList	"""You must specify a daemon to connect to...\\n"""		5453463	1					
ANR	5453490	Argument	"""You must specify a daemon to connect to...\\n"""		5453463	0					
ANR	5453491	PrimaryExpression	"""You must specify a daemon to connect to...\\n"""		5453463	0					
ANR	5453492	ReturnStatement	return FALSE ;	1780:2:47314:47326	5453463	1	True				
ANR	5453493	Identifier	FALSE		5453463	0					
ANR	5453494	IfStatement	if ( token [ 0 ] == '<' )		5453463	2					
ANR	5453495	Condition	token [ 0 ] == '<'	1783:6:47339:47353	5453463	0	True				
ANR	5453496	EqualityExpression	token [ 0 ] == '<'		5453463	0		==			
ANR	5453497	ArrayIndexing	token [ 0 ]		5453463	0					
ANR	5453498	Identifier	token		5453463	0					
ANR	5453499	PrimaryExpression	0		5453463	1					
ANR	5453500	PrimaryExpression	'<'		5453463	1					
ANR	5453501	CompoundStatement		10:24:173:173	5453463	1					
ANR	5453502	ExpressionStatement	"strcpy ( addr , token )"	1784:2:47361:47382	5453463	0	True				
ANR	5453503	CallExpression	"strcpy ( addr , token )"		5453463	0					
ANR	5453504	Callee	strcpy		5453463	0					
ANR	5453505	Identifier	strcpy		5453463	0					
ANR	5453506	ArgumentList	addr		5453463	1					
ANR	5453507	Argument	addr		5453463	0					
ANR	5453508	Identifier	addr		5453463	0					
ANR	5453509	Argument	token		5453463	1					
ANR	5453510	Identifier	token		5453463	0					
ANR	5453511	ReturnStatement	return TRUE ;	1785:2:47386:47397	5453463	1	True				
ANR	5453512	Identifier	TRUE		5453463	0					
ANR	5453513	IfStatement	if ( token [ 0 ] == '-' && token [ 1 ] == 'p' )		5453463	3					
ANR	5453514	Condition	token [ 0 ] == '-' && token [ 1 ] == 'p'	1789:6:47441:47474	5453463	0	True				
ANR	5453515	AndExpression	token [ 0 ] == '-' && token [ 1 ] == 'p'		5453463	0		&&			
ANR	5453516	EqualityExpression	token [ 0 ] == '-'		5453463	0		==			
ANR	5453517	ArrayIndexing	token [ 0 ]		5453463	0					
ANR	5453518	Identifier	token		5453463	0					
ANR	5453519	PrimaryExpression	0		5453463	1					
ANR	5453520	PrimaryExpression	'-'		5453463	1					
ANR	5453521	EqualityExpression	token [ 1 ] == 'p'		5453463	1		==			
ANR	5453522	ArrayIndexing	token [ 1 ]		5453463	0					
ANR	5453523	Identifier	token		5453463	0					
ANR	5453524	PrimaryExpression	1		5453463	1					
ANR	5453525	PrimaryExpression	'p'		5453463	1					
ANR	5453526	CompoundStatement		21:2:419:436	5453463	1					
ANR	5453527	IfStatement	"if ( ( token = strtok ( NULL , "" "" ) ) == NULL )"		5453463	0					
ANR	5453528	Condition	"( token = strtok ( NULL , "" "" ) ) == NULL"	1790:7:47487:47523	5453463	0	True				
ANR	5453529	EqualityExpression	"( token = strtok ( NULL , "" "" ) ) == NULL"		5453463	0		==			
ANR	5453530	AssignmentExpression	"token = strtok ( NULL , "" "" )"		5453463	0		=			
ANR	5453531	Identifier	token		5453463	0					
ANR	5453532	CallExpression	"strtok ( NULL , "" "" )"		5453463	1					
ANR	5453533	Callee	strtok		5453463	0					
ANR	5453534	Identifier	strtok		5453463	0					
ANR	5453535	ArgumentList	NULL		5453463	1					
ANR	5453536	Argument	NULL		5453463	0					
ANR	5453537	Identifier	NULL		5453463	0					
ANR	5453538	Argument	""" """		5453463	1					
ANR	5453539	PrimaryExpression	""" """		5453463	0					
ANR	5453540	Identifier	NULL		5453463	1					
ANR	5453541	CompoundStatement		17:47:343:343	5453463	1					
ANR	5453542	ExpressionStatement	"printf ( ""-pool needs another argument...\\n"" )"	1791:3:47532:47578	5453463	0	True				
ANR	5453543	CallExpression	"printf ( ""-pool needs another argument...\\n"" )"		5453463	0					
ANR	5453544	Callee	printf		5453463	0					
ANR	5453545	Identifier	printf		5453463	0					
ANR	5453546	ArgumentList	"""-pool needs another argument...\\n"""		5453463	1					
ANR	5453547	Argument	"""-pool needs another argument...\\n"""		5453463	0					
ANR	5453548	PrimaryExpression	"""-pool needs another argument...\\n"""		5453463	0					
ANR	5453549	ReturnStatement	return FALSE ;	1792:3:47583:47595	5453463	1	True				
ANR	5453550	Identifier	FALSE		5453463	0					
ANR	5453551	IdentifierDeclStatement	char * tmp = token ;	1794:2:47603:47620	5453463	1	True				
ANR	5453552	IdentifierDecl	* tmp = token		5453463	0					
ANR	5453553	IdentifierDeclType	char *		5453463	0					
ANR	5453554	Identifier	tmp		5453463	1					
ANR	5453555	AssignmentExpression	* tmp = token		5453463	2		=			
ANR	5453556	Identifier	token		5453463	0					
ANR	5453557	Identifier	token		5453463	1					
ANR	5453558	IfStatement	"if ( ( token = strtok ( NULL , "" "" ) ) == NULL )"		5453463	2					
ANR	5453559	Condition	"( token = strtok ( NULL , "" "" ) ) == NULL"	1795:7:47629:47665	5453463	0	True				
ANR	5453560	EqualityExpression	"( token = strtok ( NULL , "" "" ) ) == NULL"		5453463	0		==			
ANR	5453561	AssignmentExpression	"token = strtok ( NULL , "" "" )"		5453463	0		=			
ANR	5453562	Identifier	token		5453463	0					
ANR	5453563	CallExpression	"strtok ( NULL , "" "" )"		5453463	1					
ANR	5453564	Callee	strtok		5453463	0					
ANR	5453565	Identifier	strtok		5453463	0					
ANR	5453566	ArgumentList	NULL		5453463	1					
ANR	5453567	Argument	NULL		5453463	0					
ANR	5453568	Identifier	NULL		5453463	0					
ANR	5453569	Argument	""" """		5453463	1					
ANR	5453570	PrimaryExpression	""" """		5453463	0					
ANR	5453571	Identifier	NULL		5453463	1					
ANR	5453572	CompoundStatement		22:47:485:485	5453463	1					
ANR	5453573	ExpressionStatement	"printf ( ""Need more arguments.\\n"" )"	1796:3:47674:47709	5453463	0	True				
ANR	5453574	CallExpression	"printf ( ""Need more arguments.\\n"" )"		5453463	0					
ANR	5453575	Callee	printf		5453463	0					
ANR	5453576	Identifier	printf		5453463	0					
ANR	5453577	ArgumentList	"""Need more arguments.\\n"""		5453463	1					
ANR	5453578	Argument	"""Need more arguments.\\n"""		5453463	0					
ANR	5453579	PrimaryExpression	"""Need more arguments.\\n"""		5453463	0					
ANR	5453580	ReturnStatement	return FALSE ;	1797:3:47714:47726	5453463	1	True				
ANR	5453581	Identifier	FALSE		5453463	0					
ANR	5453582	IfStatement	if ( pool )		5453463	3					
ANR	5453583	Condition	pool	1800:7:47742:47745	5453463	0	True				
ANR	5453584	Identifier	pool		5453463	0					
ANR	5453585	Statement	delete	1800:14:47749:47754	5453463	1	True				
ANR	5453586	ExpressionStatement	pool	1800:21:47756:47760	5453463	4	True				
ANR	5453587	Identifier	pool		5453463	0					
ANR	5453588	ExpressionStatement	pool = new DCCollector ( tmp )	1801:2:47764:47793	5453463	5	True				
ANR	5453589	AssignmentExpression	pool = new DCCollector ( tmp )		5453463	0		=			
ANR	5453590	Identifier	pool		5453463	0					
ANR	5453591	Identifier	tmp		5453463	1					
ANR	5453592	IfStatement	if ( ! pool -> addr ( ) )		5453463	6					
ANR	5453593	Condition	! pool -> addr ( )	1802:6:47801:47814	5453463	0	True				
ANR	5453594	UnaryOperationExpression	! pool -> addr ( )		5453463	0					
ANR	5453595	UnaryOperator	!		5453463	0					
ANR	5453596	CallExpression	pool -> addr ( )		5453463	1					
ANR	5453597	Callee	pool -> addr		5453463	0					
ANR	5453598	PtrMemberAccess	pool -> addr		5453463	0					
ANR	5453599	Identifier	pool		5453463	0					
ANR	5453600	Identifier	addr		5453463	1					
ANR	5453601	ArgumentList			5453463	1					
ANR	5453602	CompoundStatement		29:23:634:634	5453463	1					
ANR	5453603	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , pool -> error ( ) )"	1803:3:47823:47863	5453463	0	True				
ANR	5453604	CallExpression	"fprintf ( stderr , ""%s\\n"" , pool -> error ( ) )"		5453463	0					
ANR	5453605	Callee	fprintf		5453463	0					
ANR	5453606	Identifier	fprintf		5453463	0					
ANR	5453607	ArgumentList	stderr		5453463	1					
ANR	5453608	Argument	stderr		5453463	0					
ANR	5453609	Identifier	stderr		5453463	0					
ANR	5453610	Argument	"""%s\\n"""		5453463	1					
ANR	5453611	PrimaryExpression	"""%s\\n"""		5453463	0					
ANR	5453612	Argument	pool -> error ( )		5453463	2					
ANR	5453613	CallExpression	pool -> error ( )		5453463	0					
ANR	5453614	Callee	pool -> error		5453463	0					
ANR	5453615	PtrMemberAccess	pool -> error		5453463	0					
ANR	5453616	Identifier	pool		5453463	0					
ANR	5453617	Identifier	error		5453463	1					
ANR	5453618	ArgumentList			5453463	1					
ANR	5453619	ReturnStatement	return FALSE ;	1804:3:47868:47880	5453463	1	True				
ANR	5453620	Identifier	FALSE		5453463	0					
ANR	5453621	ElseStatement	else		5453463	0					
ANR	5453622	CompoundStatement		32:9:707:707	5453463	0					
ANR	5453623	ExpressionStatement	"printf ( ""Using pool %s.\\n"" , pool -> name ( ) )"	1806:3:47896:47939	5453463	0	True				
ANR	5453624	CallExpression	"printf ( ""Using pool %s.\\n"" , pool -> name ( ) )"		5453463	0					
ANR	5453625	Callee	printf		5453463	0					
ANR	5453626	Identifier	printf		5453463	0					
ANR	5453627	ArgumentList	"""Using pool %s.\\n"""		5453463	1					
ANR	5453628	Argument	"""Using pool %s.\\n"""		5453463	0					
ANR	5453629	PrimaryExpression	"""Using pool %s.\\n"""		5453463	0					
ANR	5453630	Argument	pool -> name ( )		5453463	1					
ANR	5453631	CallExpression	pool -> name ( )		5453463	0					
ANR	5453632	Callee	pool -> name		5453463	0					
ANR	5453633	PtrMemberAccess	pool -> name		5453463	0					
ANR	5453634	Identifier	pool		5453463	0					
ANR	5453635	Identifier	name		5453463	1					
ANR	5453636	ArgumentList			5453463	1					
ANR	5453637	IdentifierDeclStatement	char * hostname ;	1811:1:47972:47986	5453463	4	True				
ANR	5453638	IdentifierDecl	* hostname		5453463	0					
ANR	5453639	IdentifierDeclType	char *		5453463	0					
ANR	5453640	Identifier	hostname		5453463	1					
ANR	5453641	IfStatement	if ( ( hostname = get_daemon_name ( token ) ) == NULL )		5453463	5					
ANR	5453642	Condition	( hostname = get_daemon_name ( token ) ) == NULL	1812:5:47993:48036	5453463	0	True				
ANR	5453643	EqualityExpression	( hostname = get_daemon_name ( token ) ) == NULL		5453463	0		==			
ANR	5453644	AssignmentExpression	hostname = get_daemon_name ( token )		5453463	0		=			
ANR	5453645	Identifier	hostname		5453463	0					
ANR	5453646	CallExpression	get_daemon_name ( token )		5453463	1					
ANR	5453647	Callee	get_daemon_name		5453463	0					
ANR	5453648	Identifier	get_daemon_name		5453463	0					
ANR	5453649	ArgumentList	token		5453463	1					
ANR	5453650	Argument	token		5453463	0					
ANR	5453651	Identifier	token		5453463	0					
ANR	5453652	Identifier	NULL		5453463	1					
ANR	5453653	CompoundStatement		39:52:856:856	5453463	1					
ANR	5453654	ExpressionStatement	"printf ( ""Unknown host %s\\n"" , get_host_part ( token ) )"	1813:2:48044:48095	5453463	0	True				
ANR	5453655	CallExpression	"printf ( ""Unknown host %s\\n"" , get_host_part ( token ) )"		5453463	0					
ANR	5453656	Callee	printf		5453463	0					
ANR	5453657	Identifier	printf		5453463	0					
ANR	5453658	ArgumentList	"""Unknown host %s\\n"""		5453463	1					
ANR	5453659	Argument	"""Unknown host %s\\n"""		5453463	0					
ANR	5453660	PrimaryExpression	"""Unknown host %s\\n"""		5453463	0					
ANR	5453661	Argument	get_host_part ( token )		5453463	1					
ANR	5453662	CallExpression	get_host_part ( token )		5453463	0					
ANR	5453663	Callee	get_host_part		5453463	0					
ANR	5453664	Identifier	get_host_part		5453463	0					
ANR	5453665	ArgumentList	token		5453463	1					
ANR	5453666	Argument	token		5453463	0					
ANR	5453667	Identifier	token		5453463	0					
ANR	5453668	ReturnStatement	return FALSE ;	1814:2:48099:48111	5453463	1	True				
ANR	5453669	Identifier	FALSE		5453463	0					
ANR	5453670	IfStatement	"if ( ( token = strtok ( NULL , "" "" ) ) == NULL )"		5453463	6					
ANR	5453671	Condition	"( token = strtok ( NULL , "" "" ) ) == NULL"	1817:6:48124:48160	5453463	0	True				
ANR	5453672	EqualityExpression	"( token = strtok ( NULL , "" "" ) ) == NULL"		5453463	0		==			
ANR	5453673	AssignmentExpression	"token = strtok ( NULL , "" "" )"		5453463	0		=			
ANR	5453674	Identifier	token		5453463	0					
ANR	5453675	CallExpression	"strtok ( NULL , "" "" )"		5453463	1					
ANR	5453676	Callee	strtok		5453463	0					
ANR	5453677	Identifier	strtok		5453463	0					
ANR	5453678	ArgumentList	NULL		5453463	1					
ANR	5453679	Argument	NULL		5453463	0					
ANR	5453680	Identifier	NULL		5453463	0					
ANR	5453681	Argument	""" """		5453463	1					
ANR	5453682	PrimaryExpression	""" """		5453463	0					
ANR	5453683	Identifier	NULL		5453463	1					
ANR	5453684	CompoundStatement		44:46:980:980	5453463	1					
ANR	5453685	ExpressionStatement	dt = DT_MASTER	1818:2:48168:48182	5453463	0	True				
ANR	5453686	AssignmentExpression	dt = DT_MASTER		5453463	0		=			
ANR	5453687	Identifier	dt		5453463	0					
ANR	5453688	Identifier	DT_MASTER		5453463	1					
ANR	5453689	ElseStatement	else		5453463	0					
ANR	5453690	CompoundStatement		46:8:1008:1008	5453463	0					
ANR	5453691	SwitchStatement	switch ( token [ 1 ] )		5453463	0					
ANR	5453692	Condition	token [ 1 ]	1820:11:48205:48212	5453463	0	True				
ANR	5453693	ArrayIndexing	token [ 1 ]		5453463	0					
ANR	5453694	Identifier	token		5453463	0					
ANR	5453695	PrimaryExpression	1		5453463	1					
ANR	5453696	CompoundStatement		47:22:1032:1032	5453463	1					
ANR	5453697	Label	case 's' :	1821:2:48236:48244	5453463	0	True				
ANR	5453698	IfStatement	if ( token [ 2 ] == 't' )		5453463	1					
ANR	5453699	Condition	token [ 2 ] == 't'	1822:8:48254:48268	5453463	0	True				
ANR	5453700	EqualityExpression	token [ 2 ] == 't'		5453463	0		==			
ANR	5453701	ArrayIndexing	token [ 2 ]		5453463	0					
ANR	5453702	Identifier	token		5453463	0					
ANR	5453703	PrimaryExpression	2		5453463	1					
ANR	5453704	PrimaryExpression	't'		5453463	1					
ANR	5453705	ExpressionStatement	dt = DT_STARTD	1822:26:48272:48286	5453463	1	True				
ANR	5453706	AssignmentExpression	dt = DT_STARTD		5453463	0		=			
ANR	5453707	Identifier	dt		5453463	0					
ANR	5453708	Identifier	DT_STARTD		5453463	1					
ANR	5453709	ElseStatement	else		5453463	0					
ANR	5453710	IfStatement	if ( token [ 2 ] == 'c' )		5453463	0					
ANR	5453711	Condition	token [ 2 ] == 'c'	1823:13:48301:48315	5453463	0	True				
ANR	5453712	EqualityExpression	token [ 2 ] == 'c'		5453463	0		==			
ANR	5453713	ArrayIndexing	token [ 2 ]		5453463	0					
ANR	5453714	Identifier	token		5453463	0					
ANR	5453715	PrimaryExpression	2		5453463	1					
ANR	5453716	PrimaryExpression	'c'		5453463	1					
ANR	5453717	ExpressionStatement	dt = DT_SCHEDD	1823:31:48319:48333	5453463	1	True				
ANR	5453718	AssignmentExpression	dt = DT_SCHEDD		5453463	0		=			
ANR	5453719	Identifier	dt		5453463	0					
ANR	5453720	Identifier	DT_SCHEDD		5453463	1					
ANR	5453721	ElseStatement	else		5453463	0					
ANR	5453722	ExpressionStatement	dt = DT_MASTER	1824:8:48343:48357	5453463	0	True				
ANR	5453723	AssignmentExpression	dt = DT_MASTER		5453463	0		=			
ANR	5453724	Identifier	dt		5453463	0					
ANR	5453725	Identifier	DT_MASTER		5453463	1					
ANR	5453726	BreakStatement	break ;	1825:3:48362:48367	5453463	2	True				
ANR	5453727	Label	case 'c' :	1826:2:48371:48379	5453463	3	True				
ANR	5453728	ExpressionStatement	dt = DT_COLLECTOR	1827:3:48384:48401	5453463	4	True				
ANR	5453729	AssignmentExpression	dt = DT_COLLECTOR		5453463	0		=			
ANR	5453730	Identifier	dt		5453463	0					
ANR	5453731	Identifier	DT_COLLECTOR		5453463	1					
ANR	5453732	BreakStatement	break ;	1828:3:48406:48411	5453463	5	True				
ANR	5453733	Label	case 'm' :	1829:2:48415:48423	5453463	6	True				
ANR	5453734	ExpressionStatement	dt = DT_MASTER	1830:3:48428:48442	5453463	7	True				
ANR	5453735	AssignmentExpression	dt = DT_MASTER		5453463	0		=			
ANR	5453736	Identifier	dt		5453463	0					
ANR	5453737	Identifier	DT_MASTER		5453463	1					
ANR	5453738	BreakStatement	break ;	1831:3:48447:48452	5453463	8	True				
ANR	5453739	Label	case 'n' :	1832:2:48456:48464	5453463	9	True				
ANR	5453740	ExpressionStatement	dt = DT_NEGOTIATOR	1833:3:48469:48487	5453463	10	True				
ANR	5453741	AssignmentExpression	dt = DT_NEGOTIATOR		5453463	0		=			
ANR	5453742	Identifier	dt		5453463	0					
ANR	5453743	Identifier	DT_NEGOTIATOR		5453463	1					
ANR	5453744	BreakStatement	break ;	1834:3:48492:48497	5453463	11	True				
ANR	5453745	Label	case 'k' :	1835:2:48501:48509	5453463	12	True				
ANR	5453746	ExpressionStatement	dt = DT_KBDD	1836:3:48514:48526	5453463	13	True				
ANR	5453747	AssignmentExpression	dt = DT_KBDD		5453463	0		=			
ANR	5453748	Identifier	dt		5453463	0					
ANR	5453749	Identifier	DT_KBDD		5453463	1					
ANR	5453750	BreakStatement	break ;	1837:3:48531:48536	5453463	14	True				
ANR	5453751	Label	default :	1838:2:48540:48547	5453463	15	True				
ANR	5453752	Identifier	default		5453463	0					
ANR	5453753	ExpressionStatement	dt = DT_MASTER	1839:3:48552:48566	5453463	16	True				
ANR	5453754	AssignmentExpression	dt = DT_MASTER		5453463	0		=			
ANR	5453755	Identifier	dt		5453463	0					
ANR	5453756	Identifier	DT_MASTER		5453463	1					
ANR	5453757	IdentifierDeclStatement	"Daemon d ( dt , hostname , pool ? pool -> addr ( ) : NULL ) ;"	1842:1:48576:48628	5453463	7	True				
ANR	5453758	IdentifierDecl	"d ( dt , hostname , pool ? pool -> addr ( ) : NULL )"		5453463	0					
ANR	5453759	IdentifierDeclType	Daemon		5453463	0					
ANR	5453760	Identifier	d		5453463	1					
ANR	5453761	Expression	"dt , hostname , pool ? pool -> addr ( ) : NULL"		5453463	2					
ANR	5453762	Identifier	dt		5453463	0					
ANR	5453763	Expression	"hostname , pool ? pool -> addr ( ) : NULL"		5453463	1					
ANR	5453764	Identifier	hostname		5453463	0					
ANR	5453765	ConditionalExpression	pool ? pool -> addr ( ) : NULL		5453463	1					
ANR	5453766	Condition	pool		5453463	0					
ANR	5453767	Identifier	pool		5453463	0					
ANR	5453768	CallExpression	pool -> addr ( )		5453463	1					
ANR	5453769	Callee	pool -> addr		5453463	0					
ANR	5453770	PtrMemberAccess	pool -> addr		5453463	0					
ANR	5453771	Identifier	pool		5453463	0					
ANR	5453772	Identifier	addr		5453463	1					
ANR	5453773	ArgumentList			5453463	1					
ANR	5453774	Identifier	NULL		5453463	2					
ANR	5453775	IfStatement	if ( real_dt == DT_GENERIC )		5453463	8					
ANR	5453776	Condition	real_dt == DT_GENERIC	1843:5:48635:48655	5453463	0	True				
ANR	5453777	EqualityExpression	real_dt == DT_GENERIC		5453463	0		==			
ANR	5453778	Identifier	real_dt		5453463	0					
ANR	5453779	Identifier	DT_GENERIC		5453463	1					
ANR	5453780	CompoundStatement		70:29:1475:1475	5453463	1					
ANR	5453781	ExpressionStatement	d . setSubsystem ( subsys )	1844:2:48663:48687	5453463	0	True				
ANR	5453782	CallExpression	d . setSubsystem ( subsys )		5453463	0					
ANR	5453783	Callee	d . setSubsystem		5453463	0					
ANR	5453784	MemberAccess	d . setSubsystem		5453463	0					
ANR	5453785	Identifier	d		5453463	0					
ANR	5453786	Identifier	setSubsystem		5453463	1					
ANR	5453787	ArgumentList	subsys		5453463	1					
ANR	5453788	Argument	subsys		5453463	0					
ANR	5453789	Identifier	subsys		5453463	0					
ANR	5453790	IfStatement	if ( ! d . locate ( ) )		5453463	9					
ANR	5453791	Condition	! d . locate ( )	1846:5:48697:48708	5453463	0	True				
ANR	5453792	UnaryOperationExpression	! d . locate ( )		5453463	0					
ANR	5453793	UnaryOperator	!		5453463	0					
ANR	5453794	CallExpression	d . locate ( )		5453463	1					
ANR	5453795	Callee	d . locate		5453463	0					
ANR	5453796	MemberAccess	d . locate		5453463	0					
ANR	5453797	Identifier	d		5453463	0					
ANR	5453798	Identifier	locate		5453463	1					
ANR	5453799	ArgumentList			5453463	1					
ANR	5453800	CompoundStatement		73:20:1528:1528	5453463	1					
ANR	5453801	ExpressionStatement	"printf ( ""Failed to contact daemon.\\n"" )"	1847:2:48716:48756	5453463	0	True				
ANR	5453802	CallExpression	"printf ( ""Failed to contact daemon.\\n"" )"		5453463	0					
ANR	5453803	Callee	printf		5453463	0					
ANR	5453804	Identifier	printf		5453463	0					
ANR	5453805	ArgumentList	"""Failed to contact daemon.\\n"""		5453463	1					
ANR	5453806	Argument	"""Failed to contact daemon.\\n"""		5453463	0					
ANR	5453807	PrimaryExpression	"""Failed to contact daemon.\\n"""		5453463	0					
ANR	5453808	Statement	delete	1848:2:48760:48765	5453463	1	True				
ANR	5453809	Statement	[	1848:9:48767:48767	5453463	2	True				
ANR	5453810	Statement	]	1848:10:48768:48768	5453463	3	True				
ANR	5453811	ExpressionStatement	hostname	1848:12:48770:48778	5453463	4	True				
ANR	5453812	Identifier	hostname		5453463	0					
ANR	5453813	ReturnStatement	return FALSE ;	1849:2:48782:48794	5453463	5	True				
ANR	5453814	Identifier	FALSE		5453463	0					
ANR	5453815	ExpressionStatement	"strcpy ( addr , d . addr ( ) )"	1851:1:48800:48825	5453463	10	True				
ANR	5453816	CallExpression	"strcpy ( addr , d . addr ( ) )"		5453463	0					
ANR	5453817	Callee	strcpy		5453463	0					
ANR	5453818	Identifier	strcpy		5453463	0					
ANR	5453819	ArgumentList	addr		5453463	1					
ANR	5453820	Argument	addr		5453463	0					
ANR	5453821	Identifier	addr		5453463	0					
ANR	5453822	Argument	d . addr ( )		5453463	1					
ANR	5453823	CallExpression	d . addr ( )		5453463	0					
ANR	5453824	Callee	d . addr		5453463	0					
ANR	5453825	MemberAccess	d . addr		5453463	0					
ANR	5453826	Identifier	d		5453463	0					
ANR	5453827	Identifier	addr		5453463	1					
ANR	5453828	ArgumentList			5453463	1					
ANR	5453829	Statement	delete	1852:1:48828:48833	5453463	11	True				
ANR	5453830	Statement	[	1852:8:48835:48835	5453463	12	True				
ANR	5453831	Statement	]	1852:9:48836:48836	5453463	13	True				
ANR	5453832	ExpressionStatement	hostname	1852:11:48838:48846	5453463	14	True				
ANR	5453833	Identifier	hostname		5453463	0					
ANR	5453834	ReturnStatement	return TRUE ;	1854:1:48851:48862	5453463	15	True				
ANR	5453835	Identifier	TRUE		5453463	0					
ANR	5453836	ReturnType	int		5453463	1					
ANR	5453837	Identifier	doSquawkReconnect		5453463	2					
ANR	5453838	ParameterList	char * addr		5453463	3					
ANR	5453839	Parameter	char * addr	1774:19:47170:47179	5453463	0	True				
ANR	5453840	ParameterType	char *		5453463	0					
ANR	5453841	Identifier	addr		5453463	1					
ANR	5453842	CFGEntryNode	ENTRY		5453463		True				
ANR	5453843	CFGExitNode	EXIT		5453463		True				
ANR	5453844	Symbol	DT_GENERIC		5453463						
ANR	5453845	Symbol	pool -> addr		5453463						
ANR	5453846	Symbol	dt		5453463						
ANR	5453847	Symbol	DT_MASTER		5453463						
ANR	5453848	Symbol	subsys		5453463						
ANR	5453849	Symbol	d . locate		5453463						
ANR	5453850	Symbol	hostname		5453463						
ANR	5453851	Symbol	tmp		5453463						
ANR	5453852	Symbol	addr		5453463						
ANR	5453853	Symbol	pool -> error		5453463						
ANR	5453854	Symbol	NULL		5453463						
ANR	5453855	Symbol	d		5453463						
ANR	5453856	Symbol	pool		5453463						
ANR	5453857	Symbol	DT_SCHEDD		5453463						
ANR	5453858	Symbol	TRUE		5453463						
ANR	5453859	Symbol	get_daemon_name		5453463						
ANR	5453860	Symbol	DT_COLLECTOR		5453463						
ANR	5453861	Symbol	strtok		5453463						
ANR	5453862	Symbol	stderr		5453463						
ANR	5453863	Symbol	get_host_part		5453463						
ANR	5453864	Symbol	token		5453463						
ANR	5453865	Symbol	pool -> name		5453463						
ANR	5453866	Symbol	* pool		5453463						
ANR	5453867	Symbol	DT_STARTD		5453463						
ANR	5453868	Symbol	d . addr		5453463						
ANR	5453869	Symbol	* token		5453463						
ANR	5453870	Symbol	real_dt		5453463						
ANR	5453871	Symbol	FALSE		5453463						
ANR	5453872	Symbol	DT_NEGOTIATOR		5453463						
ANR	5453873	Symbol	DT_KBDD		5453463						
ANR	5453874	Function	squawkHelp	1857:0:48868:49511							
ANR	5453875	FunctionDef	squawkHelp (char * token)		5453874	0					
ANR	5453876	CompoundStatement		1857:31:48899:49511	5453874	0					
ANR	5453877	SwitchStatement	switch ( token [ 0 ] )		5453874	0					
ANR	5453878	Condition	token [ 0 ]	1858:9:48910:48917	5453874	0	True				
ANR	5453879	ArrayIndexing	token [ 0 ]		5453874	0					
ANR	5453880	Identifier	token		5453874	0					
ANR	5453881	PrimaryExpression	0		5453874	1					
ANR	5453882	CompoundStatement		2:20:21:21	5453874	1					
ANR	5453883	Label	case 's' :	1859:1:48924:48932	5453874	0	True				
ANR	5453884	ExpressionStatement	"printf ( ""Send a daemoncore signal.\\n"" )"	1860:2:48937:48977	5453874	1	True				
ANR	5453885	CallExpression	"printf ( ""Send a daemoncore signal.\\n"" )"		5453874	0					
ANR	5453886	Callee	printf		5453874	0					
ANR	5453887	Identifier	printf		5453874	0					
ANR	5453888	ArgumentList	"""Send a daemoncore signal.\\n"""		5453874	1					
ANR	5453889	Argument	"""Send a daemoncore signal.\\n"""		5453874	0					
ANR	5453890	PrimaryExpression	"""Send a daemoncore signal.\\n"""		5453874	0					
ANR	5453891	BreakStatement	break ;	1861:2:48982:48987	5453874	2	True				
ANR	5453892	Label	case 'c' :	1862:1:48990:48998	5453874	3	True				
ANR	5453893	Statement	printf	1863:2:49003:49008	5453874	4	True				
ANR	5453894	Statement	(	1863:9:49010:49010	5453874	5	True				
ANR	5453895	Statement	"""Send a daemoncore command.  Each word after """	1863:11:49012:49057	5453874	6	True				
ANR	5453896	Statement	"""the command\\nwill also be sent.  If you send """	1864:5:49064:49110	5453874	7	True				
ANR	5453897	Statement	"""a number, it will be sent\\nas an integer.\\n"""	1865:5:49117:49161	5453874	8	True				
ANR	5453898	Statement	)	1865:51:49163:49163	5453874	9	True				
ANR	5453899	ExpressionStatement		1865:52:49164:49164	5453874	10	True				
ANR	5453900	BreakStatement	break ;	1866:2:49168:49173	5453874	11	True				
ANR	5453901	Label	case 'r' :	1867:1:49176:49184	5453874	12	True				
ANR	5453902	ExpressionStatement	"printf ( ""Connect to a different daemon.  The format is:\\n"" )"	1868:2:49188:49248	5453874	13	True				
ANR	5453903	CallExpression	"printf ( ""Connect to a different daemon.  The format is:\\n"" )"		5453874	0					
ANR	5453904	Callee	printf		5453874	0					
ANR	5453905	Identifier	printf		5453874	0					
ANR	5453906	ArgumentList	"""Connect to a different daemon.  The format is:\\n"""		5453874	1					
ANR	5453907	Argument	"""Connect to a different daemon.  The format is:\\n"""		5453874	0					
ANR	5453908	PrimaryExpression	"""Connect to a different daemon.  The format is:\\n"""		5453874	0					
ANR	5453909	ExpressionStatement	"printf ( ""reconnect <host:port> or\\n"" )"	1869:2:49252:49290	5453874	14	True				
ANR	5453910	CallExpression	"printf ( ""reconnect <host:port> or\\n"" )"		5453874	0					
ANR	5453911	Callee	printf		5453874	0					
ANR	5453912	Identifier	printf		5453874	0					
ANR	5453913	ArgumentList	"""reconnect <host:port> or\\n"""		5453874	1					
ANR	5453914	Argument	"""reconnect <host:port> or\\n"""		5453874	0					
ANR	5453915	PrimaryExpression	"""reconnect <host:port> or\\n"""		5453874	0					
ANR	5453916	ExpressionStatement	"printf ( ""reconnect [-pool poolname] hostname [-deamontype]\\n"" )"	1870:2:49294:49356	5453874	15	True				
ANR	5453917	CallExpression	"printf ( ""reconnect [-pool poolname] hostname [-deamontype]\\n"" )"		5453874	0					
ANR	5453918	Callee	printf		5453874	0					
ANR	5453919	Identifier	printf		5453874	0					
ANR	5453920	ArgumentList	"""reconnect [-pool poolname] hostname [-deamontype]\\n"""		5453874	1					
ANR	5453921	Argument	"""reconnect [-pool poolname] hostname [-deamontype]\\n"""		5453874	0					
ANR	5453922	PrimaryExpression	"""reconnect [-pool poolname] hostname [-deamontype]\\n"""		5453874	0					
ANR	5453923	BreakStatement	break ;	1871:2:49360:49365	5453874	16	True				
ANR	5453924	Label	case 'e' :	1872:1:49368:49376	5453874	17	True				
ANR	5453925	Label	case 'q' :	1873:1:49379:49387	5453874	18	True				
ANR	5453926	ExpressionStatement	"printf ( ""Terminates this squawking session.\\n"" )"	1874:2:49391:49439	5453874	19	True				
ANR	5453927	CallExpression	"printf ( ""Terminates this squawking session.\\n"" )"		5453874	0					
ANR	5453928	Callee	printf		5453874	0					
ANR	5453929	Identifier	printf		5453874	0					
ANR	5453930	ArgumentList	"""Terminates this squawking session.\\n"""		5453874	1					
ANR	5453931	Argument	"""Terminates this squawking session.\\n"""		5453874	0					
ANR	5453932	PrimaryExpression	"""Terminates this squawking session.\\n"""		5453874	0					
ANR	5453933	BreakStatement	break ;	1875:2:49443:49448	5453874	20	True				
ANR	5453934	Label	default :	1876:1:49451:49458	5453874	21	True				
ANR	5453935	Identifier	default		5453874	0					
ANR	5453936	ExpressionStatement	"printf ( ""Don't know command %s.\\n"" , token )"	1877:2:49462:49506	5453874	22	True				
ANR	5453937	CallExpression	"printf ( ""Don't know command %s.\\n"" , token )"		5453874	0					
ANR	5453938	Callee	printf		5453874	0					
ANR	5453939	Identifier	printf		5453874	0					
ANR	5453940	ArgumentList	"""Don't know command %s.\\n"""		5453874	1					
ANR	5453941	Argument	"""Don't know command %s.\\n"""		5453874	0					
ANR	5453942	PrimaryExpression	"""Don't know command %s.\\n"""		5453874	0					
ANR	5453943	Argument	token		5453874	1					
ANR	5453944	Identifier	token		5453874	0					
ANR	5453945	ReturnType	void		5453874	1					
ANR	5453946	Identifier	squawkHelp		5453874	2					
ANR	5453947	ParameterList	char * token		5453874	3					
ANR	5453948	Parameter	char * token	1857:17:48885:48895	5453874	0	True				
ANR	5453949	ParameterType	char *		5453874	0					
ANR	5453950	Identifier	token		5453874	1					
ANR	5453951	CFGEntryNode	ENTRY		5453874		True				
ANR	5453952	CFGExitNode	EXIT		5453874		True				
ANR	5453953	Symbol	* token		5453874						
ANR	5453954	Symbol	token		5453874						
ANR	5453955	Function	printAdToFile	1881:0:49514:50016							
ANR	5453956	FunctionDef	"printAdToFile (ClassAd * ad , char * filename)"		5453955	0					
ANR	5453957	CompoundStatement		1882:43:49562:50016	5453955	0					
ANR	5453958	IdentifierDeclStatement	FILE * fp ;	1884:1:49566:49574	5453955	0	True				
ANR	5453959	IdentifierDecl	* fp		5453955	0					
ANR	5453960	IdentifierDeclType	FILE *		5453955	0					
ANR	5453961	Identifier	fp		5453955	1					
ANR	5453962	IfStatement	if ( filename )		5453955	1					
ANR	5453963	Condition	filename	1886:6:49583:49590	5453955	0	True				
ANR	5453964	Identifier	filename		5453955	0					
ANR	5453965	CompoundStatement		5:17:31:31	5453955	1					
ANR	5453966	IfStatement	"if ( ( fp = safe_fopen_wrapper_follow ( filename , ""a"" ) ) == NULL )"		5453955	0					
ANR	5453967	Condition	"( fp = safe_fopen_wrapper_follow ( filename , ""a"" ) ) == NULL"	1887:10:49606:49659	5453955	0	True				
ANR	5453968	EqualityExpression	"( fp = safe_fopen_wrapper_follow ( filename , ""a"" ) ) == NULL"		5453955	0		==			
ANR	5453969	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( filename , ""a"" )"		5453955	0		=			
ANR	5453970	Identifier	fp		5453955	0					
ANR	5453971	CallExpression	"safe_fopen_wrapper_follow ( filename , ""a"" )"		5453955	1					
ANR	5453972	Callee	safe_fopen_wrapper_follow		5453955	0					
ANR	5453973	Identifier	safe_fopen_wrapper_follow		5453955	0					
ANR	5453974	ArgumentList	filename		5453955	1					
ANR	5453975	Argument	filename		5453955	0					
ANR	5453976	Identifier	filename		5453955	0					
ANR	5453977	Argument	"""a"""		5453955	1					
ANR	5453978	PrimaryExpression	"""a"""		5453955	0					
ANR	5453979	Identifier	NULL		5453955	1					
ANR	5453980	CompoundStatement		6:67:100:100	5453955	1					
ANR	5453981	ExpressionStatement	"printf ( ""ERROR appending to %s.\\n"" , filename )"	1888:3:49668:49715	5453955	0	True				
ANR	5453982	CallExpression	"printf ( ""ERROR appending to %s.\\n"" , filename )"		5453955	0					
ANR	5453983	Callee	printf		5453955	0					
ANR	5453984	Identifier	printf		5453955	0					
ANR	5453985	ArgumentList	"""ERROR appending to %s.\\n"""		5453955	1					
ANR	5453986	Argument	"""ERROR appending to %s.\\n"""		5453955	0					
ANR	5453987	PrimaryExpression	"""ERROR appending to %s.\\n"""		5453955	0					
ANR	5453988	Argument	filename		5453955	1					
ANR	5453989	Identifier	filename		5453955	0					
ANR	5453990	ReturnStatement	return FALSE ;	1889:3:49720:49732	5453955	1	True				
ANR	5453991	Identifier	FALSE		5453955	0					
ANR	5453992	ElseStatement	else		5453955	0					
ANR	5453993	CompoundStatement		10:8:183:183	5453955	0					
ANR	5453994	ExpressionStatement	fp = stdout	1892:2:49750:49761	5453955	0	True				
ANR	5453995	AssignmentExpression	fp = stdout		5453955	0		=			
ANR	5453996	Identifier	fp		5453955	0					
ANR	5453997	Identifier	stdout		5453955	1					
ANR	5453998	IfStatement	if ( ! ad -> fPrint ( fp ) )		5453955	2					
ANR	5453999	Condition	! ad -> fPrint ( fp )	1895:8:49775:49789	5453955	0	True				
ANR	5454000	UnaryOperationExpression	! ad -> fPrint ( fp )		5453955	0					
ANR	5454001	UnaryOperator	!		5453955	0					
ANR	5454002	CallExpression	ad -> fPrint ( fp )		5453955	1					
ANR	5454003	Callee	ad -> fPrint		5453955	0					
ANR	5454004	PtrMemberAccess	ad -> fPrint		5453955	0					
ANR	5454005	Identifier	ad		5453955	0					
ANR	5454006	Identifier	fPrint		5453955	1					
ANR	5454007	ArgumentList	fp		5453955	1					
ANR	5454008	Argument	fp		5453955	0					
ANR	5454009	Identifier	fp		5453955	0					
ANR	5454010	CompoundStatement		14:25:229:229	5453955	1					
ANR	5454011	ExpressionStatement	"printf ( ""ERROR - failed to write ad to file.\\n"" )"	1896:8:49802:49851	5453955	0	True				
ANR	5454012	CallExpression	"printf ( ""ERROR - failed to write ad to file.\\n"" )"		5453955	0					
ANR	5454013	Callee	printf		5453955	0					
ANR	5454014	Identifier	printf		5453955	0					
ANR	5454015	ArgumentList	"""ERROR - failed to write ad to file.\\n"""		5453955	1					
ANR	5454016	Argument	"""ERROR - failed to write ad to file.\\n"""		5453955	0					
ANR	5454017	PrimaryExpression	"""ERROR - failed to write ad to file.\\n"""		5453955	0					
ANR	5454018	IfStatement	if ( filename )		5453955	1					
ANR	5454019	Condition	filename	1897:13:49866:49873	5453955	0	True				
ANR	5454020	Identifier	filename		5453955	0					
ANR	5454021	ExpressionStatement	fclose ( fp )	1897:24:49877:49887	5453955	1	True				
ANR	5454022	CallExpression	fclose ( fp )		5453955	0					
ANR	5454023	Callee	fclose		5453955	0					
ANR	5454024	Identifier	fclose		5453955	0					
ANR	5454025	ArgumentList	fp		5453955	1					
ANR	5454026	Argument	fp		5453955	0					
ANR	5454027	Identifier	fp		5453955	0					
ANR	5454028	ReturnStatement	return FALSE ;	1898:8:49897:49909	5453955	2	True				
ANR	5454029	Identifier	FALSE		5453955	0					
ANR	5454030	ExpressionStatement	"fprintf ( fp , ""***\\n"" )"	1900:4:49921:49940	5453955	3	True				
ANR	5454031	CallExpression	"fprintf ( fp , ""***\\n"" )"		5453955	0					
ANR	5454032	Callee	fprintf		5453955	0					
ANR	5454033	Identifier	fprintf		5453955	0					
ANR	5454034	ArgumentList	fp		5453955	1					
ANR	5454035	Argument	fp		5453955	0					
ANR	5454036	Identifier	fp		5453955	0					
ANR	5454037	Argument	"""***\\n"""		5453955	1					
ANR	5454038	PrimaryExpression	"""***\\n"""		5453955	0					
ANR	5454039	IfStatement	if ( filename )		5453955	4					
ANR	5454040	Condition	filename	1902:6:49965:49972	5453955	0	True				
ANR	5454041	Identifier	filename		5453955	0					
ANR	5454042	CompoundStatement		21:17:413:413	5453955	1					
ANR	5454043	ExpressionStatement	fclose ( fp )	1903:2:49980:49990	5453955	0	True				
ANR	5454044	CallExpression	fclose ( fp )		5453955	0					
ANR	5454045	Callee	fclose		5453955	0					
ANR	5454046	Identifier	fclose		5453955	0					
ANR	5454047	ArgumentList	fp		5453955	1					
ANR	5454048	Argument	fp		5453955	0					
ANR	5454049	Identifier	fp		5453955	0					
ANR	5454050	ReturnStatement	return TRUE ;	1906:4:50003:50014	5453955	5	True				
ANR	5454051	Identifier	TRUE		5453955	0					
ANR	5454052	ReturnType	int		5453955	1					
ANR	5454053	Identifier	printAdToFile		5453955	2					
ANR	5454054	ParameterList	"ClassAd * ad , char * filename"		5453955	3					
ANR	5454055	Parameter	ClassAd * ad	1882:14:49533:49543	5453955	0	True				
ANR	5454056	ParameterType	ClassAd *		5453955	0					
ANR	5454057	Identifier	ad		5453955	1					
ANR	5454058	Parameter	char * filename	1882:27:49546:49559	5453955	1	True				
ANR	5454059	ParameterType	char *		5453955	0					
ANR	5454060	Identifier	filename		5453955	1					
ANR	5454061	CFGEntryNode	ENTRY		5453955		True				
ANR	5454062	CFGExitNode	EXIT		5453955		True				
ANR	5454063	Symbol	ad		5453955						
ANR	5454064	Symbol	filename		5453955						
ANR	5454065	Symbol	NULL		5453955						
ANR	5454066	Symbol	stdout		5453955						
ANR	5454067	Symbol	TRUE		5453955						
ANR	5454068	Symbol	fp		5453955						
ANR	5454069	Symbol	FALSE		5453955						
ANR	5454070	Symbol	* ad		5453955						
ANR	5454071	Symbol	safe_fopen_wrapper_follow		5453955						
ANR	5454072	Symbol	ad -> fPrint		5453955						
ANR	5454073	Function	strncmp_auto	1910:0:50020:50115							
ANR	5454074	FunctionDef	"strncmp_auto (const char * s1 , const char * s2)"		5454073	0					
ANR	5454075	CompoundStatement		1911:0:50069:50115	5454073	0					
ANR	5454076	ReturnStatement	"return strncasecmp ( s1 , s2 , strlen ( s2 ) ) ;"	1912:4:50075:50113	5454073	0	True				
ANR	5454077	CallExpression	"strncasecmp ( s1 , s2 , strlen ( s2 ) )"		5454073	0					
ANR	5454078	Callee	strncasecmp		5454073	0					
ANR	5454079	Identifier	strncasecmp		5454073	0					
ANR	5454080	ArgumentList	s1		5454073	1					
ANR	5454081	Argument	s1		5454073	0					
ANR	5454082	Identifier	s1		5454073	0					
ANR	5454083	Argument	s2		5454073	1					
ANR	5454084	Identifier	s2		5454073	0					
ANR	5454085	Argument	strlen ( s2 )		5454073	2					
ANR	5454086	CallExpression	strlen ( s2 )		5454073	0					
ANR	5454087	Callee	strlen		5454073	0					
ANR	5454088	Identifier	strlen		5454073	0					
ANR	5454089	ArgumentList	s2		5454073	1					
ANR	5454090	Argument	s2		5454073	0					
ANR	5454091	Identifier	s2		5454073	0					
ANR	5454092	ReturnType	int		5454073	1					
ANR	5454093	Identifier	strncmp_auto		5454073	2					
ANR	5454094	ParameterList	"const char * s1 , const char * s2"		5454073	3					
ANR	5454095	Parameter	const char * s1	1910:17:50037:50050	5454073	0	True				
ANR	5454096	ParameterType	const char *		5454073	0					
ANR	5454097	Identifier	s1		5454073	1					
ANR	5454098	Parameter	const char * s2	1910:33:50053:50066	5454073	1	True				
ANR	5454099	ParameterType	const char *		5454073	0					
ANR	5454100	Identifier	s2		5454073	1					
ANR	5454101	CFGEntryNode	ENTRY		5454073		True				
ANR	5454102	CFGExitNode	EXIT		5454073		True				
ANR	5454103	Symbol	strlen		5454073						
ANR	5454104	Symbol	strncasecmp		5454073						
ANR	5454105	Symbol	s1		5454073						
ANR	5454106	Symbol	s2		5454073						
ANR	5454107	Function	SetSyscalls	1915:11:50129:50157							
ANR	5454108	FunctionDef	SetSyscalls ()		5454107	0					
ANR	5454109	CompoundStatement		1915:29:50147:50157	5454107	0					
ANR	5454110	ReturnStatement	return 0 ;	1915:0:50148:50156	5454107	0	True				
ANR	5454111	PrimaryExpression	0		5454107	0					
ANR	5454112	ReturnType	int		5454107	1					
ANR	5454113	Identifier	SetSyscalls		5454107	2					
ANR	5454114	ParameterList			5454107	3					
ANR	5454115	CFGEntryNode	ENTRY		5454107		True				
ANR	5454116	CFGExitNode	EXIT		5454107		True				
