command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2349447	File	data/converged/CVE-2011-4930_htcondor/sink.cpp								
ANR	2349448	DeclStmt									
ANR	2349449	Decl							bool	bool ( const string & )	identifierNeedsQuoting
ANR	2349450	Function	ClassAdUnParser :: ClassAdUnParser	34:0:1039:1147							
ANR	2349451	FunctionDef	ClassAdUnParser :: ClassAdUnParser ()		2349450	0					
ANR	2349452	CompoundStatement		36:0:1075:1147	2349450	0					
ANR	2349453	ExpressionStatement	oldClassAd = false	37:1:1078:1096	2349450	0	True				
ANR	2349454	AssignmentExpression	oldClassAd = false		2349450	0		=			
ANR	2349455	Identifier	oldClassAd		2349450	0					
ANR	2349456	Identifier	false		2349450	1					
ANR	2349457	ExpressionStatement	xmlUnparse = false	38:1:1099:1117	2349450	1	True				
ANR	2349458	AssignmentExpression	xmlUnparse = false		2349450	0		=			
ANR	2349459	Identifier	xmlUnparse		2349450	0					
ANR	2349460	Identifier	false		2349450	1					
ANR	2349461	ExpressionStatement	"delimiter = '\\""'"	39:1:1120:1136	2349450	2	True				
ANR	2349462	AssignmentExpression	"delimiter = '\\""'"		2349450	0		=			
ANR	2349463	Identifier	delimiter		2349450	0					
ANR	2349464	PrimaryExpression	"'\\""'"		2349450	1					
ANR	2349465	ReturnStatement	return ;	40:1:1139:1145	2349450	3	True				
ANR	2349466	Identifier	ClassAdUnParser :: ClassAdUnParser		2349450	1					
ANR	2349467	ParameterList			2349450	2					
ANR	2349468	CFGEntryNode	ENTRY		2349450		True				
ANR	2349469	CFGExitNode	EXIT		2349450		True				
ANR	2349470	Symbol	oldClassAd		2349450						
ANR	2349471	Symbol	delimiter		2349450						
ANR	2349472	Symbol	false		2349450						
ANR	2349473	Symbol	xmlUnparse		2349450						
ANR	2349474	Function	ClassAdUnParser :: ~ClassAdUnParser	44:0:1151:1199							
ANR	2349475	FunctionDef	ClassAdUnParser :: ~ClassAdUnParser ()		2349474	0					
ANR	2349476	CompoundStatement		46:0:1188:1199	2349474	0					
ANR	2349477	ReturnStatement	return ;	47:1:1191:1197	2349474	0	True				
ANR	2349478	Identifier	ClassAdUnParser :: ~ClassAdUnParser		2349474	1					
ANR	2349479	ParameterList			2349474	2					
ANR	2349480	CFGEntryNode	ENTRY		2349474		True				
ANR	2349481	CFGExitNode	EXIT		2349474		True				
ANR	2349482	DeclStmt									
ANR	2349483	Decl							const char	const char * [ ]	ClassAdUnParser :: opString
ANR	2349484	Function	ClassAdUnParser :: setXMLUnparse	90:0:1768:1864							
ANR	2349485	FunctionDef	ClassAdUnParser :: setXMLUnparse (bool doXMLUnparse)		2349484	0					
ANR	2349486	CompoundStatement		92:0:1825:1864	2349484	0					
ANR	2349487	ExpressionStatement	xmlUnparse = doXMLUnparse	93:1:1828:1853	2349484	0	True				
ANR	2349488	AssignmentExpression	xmlUnparse = doXMLUnparse		2349484	0		=			
ANR	2349489	Identifier	xmlUnparse		2349484	0					
ANR	2349490	Identifier	doXMLUnparse		2349484	1					
ANR	2349491	ReturnStatement	return ;	94:1:1856:1862	2349484	1	True				
ANR	2349492	ReturnType	void		2349484	1					
ANR	2349493	Identifier	ClassAdUnParser :: setXMLUnparse		2349484	2					
ANR	2349494	ParameterList	bool doXMLUnparse		2349484	3					
ANR	2349495	Parameter	bool doXMLUnparse	91:14:1805:1821	2349484	0	True				
ANR	2349496	ParameterType	bool		2349484	0					
ANR	2349497	Identifier	doXMLUnparse		2349484	1					
ANR	2349498	CFGEntryNode	ENTRY		2349484		True				
ANR	2349499	CFGExitNode	EXIT		2349484		True				
ANR	2349500	Symbol	doXMLUnparse		2349484						
ANR	2349501	Symbol	xmlUnparse		2349484						
ANR	2349502	Function	ClassAdUnParser :: setDelimiter	97:0:1867:1947							
ANR	2349503	FunctionDef	ClassAdUnParser :: setDelimiter (char delim)		2349502	0					
ANR	2349504	CompoundStatement		99:0:1916:1947	2349502	0					
ANR	2349505	ExpressionStatement	delimiter = delim	100:1:1919:1936	2349502	0	True				
ANR	2349506	AssignmentExpression	delimiter = delim		2349502	0		=			
ANR	2349507	Identifier	delimiter		2349502	0					
ANR	2349508	Identifier	delim		2349502	1					
ANR	2349509	ReturnStatement	return ;	101:1:1939:1945	2349502	1	True				
ANR	2349510	ReturnType	void		2349502	1					
ANR	2349511	Identifier	ClassAdUnParser :: setDelimiter		2349502	2					
ANR	2349512	ParameterList	char delim		2349502	3					
ANR	2349513	Parameter	char delim	98:13:1903:1912	2349502	0	True				
ANR	2349514	ParameterType	char		2349502	0					
ANR	2349515	Identifier	delim		2349502	1					
ANR	2349516	CFGEntryNode	ENTRY		2349502		True				
ANR	2349517	CFGExitNode	EXIT		2349502		True				
ANR	2349518	Symbol	delimiter		2349502						
ANR	2349519	Symbol	delim		2349502						
ANR	2349520	Function	ClassAdUnParser :: Unparse	105:0:1951:5709							
ANR	2349521	FunctionDef	"ClassAdUnParser :: Unparse (string & buffer , const Value & val)"		2349520	0					
ANR	2349522	CompoundStatement		107:0:2018:5709	2349520	0					
ANR	2349523	IdentifierDeclStatement	char tempBuf [ 512 ] ;	108:1:2021:2038	2349520	0	True				
ANR	2349524	IdentifierDecl	tempBuf [ 512 ]		2349520	0					
ANR	2349525	IdentifierDeclType	char [ 512 ]		2349520	0					
ANR	2349526	Identifier	tempBuf		2349520	1					
ANR	2349527	PrimaryExpression	512		2349520	2					
ANR	2349528	SwitchStatement	switch ( val . GetType ( ) )		2349520	1					
ANR	2349529	Condition	val . GetType ( )	109:9:2049:2062	2349520	0	True				
ANR	2349530	CallExpression	val . GetType ( )		2349520	0					
ANR	2349531	Callee	val . GetType		2349520	0					
ANR	2349532	MemberAccess	val . GetType		2349520	0					
ANR	2349533	Identifier	val		2349520	0					
ANR	2349534	Identifier	GetType		2349520	1					
ANR	2349535	ArgumentList			2349520	1					
ANR	2349536	CompoundStatement		3:26:47:47	2349520	1					
ANR	2349537	Label	case Value :: NULL_VALUE :	110:2:2070:2092	2349520	0	True				
ANR	2349538	Identifier	Value :: NULL_VALUE		2349520	0					
ANR	2349539	ExpressionStatement	"buffer += ""(null-value)"""	111:3:2098:2122	2349520	1	True				
ANR	2349540	AssignmentExpression	"buffer += ""(null-value)"""		2349520	0		+=			
ANR	2349541	Identifier	buffer		2349520	0					
ANR	2349542	PrimaryExpression	"""(null-value)"""		2349520	1					
ANR	2349543	BreakStatement	break ;	112:3:2127:2132	2349520	2	True				
ANR	2349544	Label	case Value :: STRING_VALUE :	114:2:2137:2161	2349520	3	True				
ANR	2349545	Identifier	Value :: STRING_VALUE		2349520	0					
ANR	2349546	CompoundStatement		9:3:149:157	2349520	4					
ANR	2349547	IdentifierDeclStatement	string s ;	115:3:2168:2176	2349520	0	True				
ANR	2349548	IdentifierDecl	s		2349520	0					
ANR	2349549	IdentifierDeclType	string		2349520	0					
ANR	2349550	Identifier	s		2349520	1					
ANR	2349551	ExpressionStatement	val . IsStringValue ( s )	116:3:2181:2203	2349520	1	True				
ANR	2349552	CallExpression	val . IsStringValue ( s )		2349520	0					
ANR	2349553	Callee	val . IsStringValue		2349520	0					
ANR	2349554	MemberAccess	val . IsStringValue		2349520	0					
ANR	2349555	Identifier	val		2349520	0					
ANR	2349556	Identifier	IsStringValue		2349520	1					
ANR	2349557	ArgumentList	s		2349520	1					
ANR	2349558	Argument	s		2349520	0					
ANR	2349559	Identifier	s		2349520	0					
ANR	2349560	ExpressionStatement	"buffer += '""'"	117:3:2208:2221	2349520	2	True				
ANR	2349561	AssignmentExpression	"buffer += '""'"		2349520	0		+=			
ANR	2349562	Identifier	buffer		2349520	0					
ANR	2349563	PrimaryExpression	"'""'"		2349520	1					
ANR	2349564	ForStatement	for ( string :: const_iterator itr = s . begin ( ) ; itr != s . end ( ) ; itr ++ )		2349520	3					
ANR	2349565	ForInit	string :: const_iterator itr = s . begin ( ) ;	118:8:2231:2268	2349520	0	True				
ANR	2349566	IdentifierDeclStatement	string :: const_iterator itr = s . begin ( ) ;		2349520	0					
ANR	2349567	IdentifierDecl	itr = s . begin ( )		2349520	0					
ANR	2349568	IdentifierDeclType	string :: const_iterator		2349520	0					
ANR	2349569	Identifier	itr		2349520	1					
ANR	2349570	AssignmentExpression	itr = s . begin ( )		2349520	2		=			
ANR	2349571	Identifier	itr		2349520	0					
ANR	2349572	CallExpression	s . begin ( )		2349520	1					
ANR	2349573	Callee	s . begin		2349520	0					
ANR	2349574	MemberAccess	s . begin		2349520	0					
ANR	2349575	Identifier	s		2349520	0					
ANR	2349576	Identifier	begin		2349520	1					
ANR	2349577	ArgumentList			2349520	1					
ANR	2349578	Condition	itr != s . end ( )	118:47:2270:2282	2349520	1	True				
ANR	2349579	EqualityExpression	itr != s . end ( )		2349520	0		!=			
ANR	2349580	Identifier	itr		2349520	0					
ANR	2349581	CallExpression	s . end ( )		2349520	1					
ANR	2349582	Callee	s . end		2349520	0					
ANR	2349583	MemberAccess	s . end		2349520	0					
ANR	2349584	Identifier	s		2349520	0					
ANR	2349585	Identifier	end		2349520	1					
ANR	2349586	ArgumentList			2349520	1					
ANR	2349587	PostIncDecOperationExpression	itr ++	118:62:2285:2289	2349520	2	True				
ANR	2349588	Identifier	itr		2349520	0					
ANR	2349589	IncDec	++		2349520	1					
ANR	2349590	CompoundStatement		12:70:274:274	2349520	3					
ANR	2349591	IfStatement	if ( * itr == delimiter )		2349520	0					
ANR	2349592	Condition	* itr == delimiter	119:7:2302:2318	2349520	0	True				
ANR	2349593	EqualityExpression	* itr == delimiter		2349520	0		==			
ANR	2349594	UnaryOperationExpression	* itr		2349520	0					
ANR	2349595	UnaryOperator	*		2349520	0					
ANR	2349596	Identifier	itr		2349520	1					
ANR	2349597	Identifier	delimiter		2349520	1					
ANR	2349598	CompoundStatement		13:26:302:302	2349520	1					
ANR	2349599	IfStatement	"if ( delimiter == '\\""' )"		2349520	0					
ANR	2349600	Condition	"delimiter == '\\""'"	120:8:2331:2347	2349520	0	True				
ANR	2349601	EqualityExpression	"delimiter == '\\""'"		2349520	0		==			
ANR	2349602	Identifier	delimiter		2349520	0					
ANR	2349603	PrimaryExpression	"'\\""'"		2349520	1					
ANR	2349604	CompoundStatement		14:27:331:331	2349520	1					
ANR	2349605	ExpressionStatement	"buffer += ""\\\\\\"""""	121:6:2358:2374	2349520	0	True				
ANR	2349606	AssignmentExpression	"buffer += ""\\\\\\"""""		2349520	0		+=			
ANR	2349607	Identifier	buffer		2349520	0					
ANR	2349608	PrimaryExpression	"""\\\\\\"""""		2349520	1					
ANR	2349609	ContinueStatement	continue ;	122:6:2383:2391	2349520	1	True				
ANR	2349610	ElseStatement	else		2349520	0					
ANR	2349611	CompoundStatement		18:10:391:391	2349520	0					
ANR	2349612	ExpressionStatement	"buffer += ""\\\\\\'"""	125:6:2418:2434	2349520	0	True				
ANR	2349613	AssignmentExpression	"buffer += ""\\\\\\'"""		2349520	0		+=			
ANR	2349614	Identifier	buffer		2349520	0					
ANR	2349615	PrimaryExpression	"""\\\\\\'"""		2349520	1					
ANR	2349616	ContinueStatement	continue ;	126:6:2443:2451	2349520	1	True				
ANR	2349617	IfStatement	if ( ! oldClassAd )		2349520	1					
ANR	2349618	Condition	! oldClassAd	129:8:2477:2487	2349520	0	True				
ANR	2349619	UnaryOperationExpression	! oldClassAd		2349520	0					
ANR	2349620	UnaryOperator	!		2349520	0					
ANR	2349621	Identifier	oldClassAd		2349520	1					
ANR	2349622	CompoundStatement		23:22:472:472	2349520	1					
ANR	2349623	SwitchStatement	switch ( * itr )		2349520	0					
ANR	2349624	Condition	* itr	130:13:2506:2509	2349520	0	True				
ANR	2349625	UnaryOperationExpression	* itr		2349520	0					
ANR	2349626	UnaryOperator	*		2349520	0					
ANR	2349627	Identifier	itr		2349520	1					
ANR	2349628	CompoundStatement		24:20:494:494	2349520	1					
ANR	2349629	Label	case '\\a' :	131:6:2521:2530	2349520	0	True				
ANR	2349630	ExpressionStatement	"buffer += ""\\\\a"""	131:17:2532:2547	2349520	1	True				
ANR	2349631	AssignmentExpression	"buffer += ""\\\\a"""		2349520	0		+=			
ANR	2349632	Identifier	buffer		2349520	0					
ANR	2349633	PrimaryExpression	"""\\\\a"""		2349520	1					
ANR	2349634	ContinueStatement	continue ;	131:34:2549:2557	2349520	2	True				
ANR	2349635	Label	case '\\b' :	132:6:2565:2574	2349520	3	True				
ANR	2349636	ExpressionStatement	"buffer += ""\\\\b"""	132:17:2576:2591	2349520	4	True				
ANR	2349637	AssignmentExpression	"buffer += ""\\\\b"""		2349520	0		+=			
ANR	2349638	Identifier	buffer		2349520	0					
ANR	2349639	PrimaryExpression	"""\\\\b"""		2349520	1					
ANR	2349640	ContinueStatement	continue ;	132:34:2593:2601	2349520	5	True				
ANR	2349641	Label	case '\\f' :	133:6:2609:2618	2349520	6	True				
ANR	2349642	ExpressionStatement	"buffer += ""\\\\f"""	133:17:2620:2635	2349520	7	True				
ANR	2349643	AssignmentExpression	"buffer += ""\\\\f"""		2349520	0		+=			
ANR	2349644	Identifier	buffer		2349520	0					
ANR	2349645	PrimaryExpression	"""\\\\f"""		2349520	1					
ANR	2349646	ContinueStatement	continue ;	133:34:2637:2645	2349520	8	True				
ANR	2349647	Label	case '\\n' :	134:6:2653:2662	2349520	9	True				
ANR	2349648	ExpressionStatement	"buffer += ""\\\\n"""	134:17:2664:2679	2349520	10	True				
ANR	2349649	AssignmentExpression	"buffer += ""\\\\n"""		2349520	0		+=			
ANR	2349650	Identifier	buffer		2349520	0					
ANR	2349651	PrimaryExpression	"""\\\\n"""		2349520	1					
ANR	2349652	ContinueStatement	continue ;	134:34:2681:2689	2349520	11	True				
ANR	2349653	Label	case '\\r' :	135:6:2697:2706	2349520	12	True				
ANR	2349654	ExpressionStatement	"buffer += ""\\\\r"""	135:17:2708:2723	2349520	13	True				
ANR	2349655	AssignmentExpression	"buffer += ""\\\\r"""		2349520	0		+=			
ANR	2349656	Identifier	buffer		2349520	0					
ANR	2349657	PrimaryExpression	"""\\\\r"""		2349520	1					
ANR	2349658	ContinueStatement	continue ;	135:34:2725:2733	2349520	14	True				
ANR	2349659	Label	case '\\t' :	136:6:2741:2750	2349520	15	True				
ANR	2349660	ExpressionStatement	"buffer += ""\\\\t"""	136:17:2752:2767	2349520	16	True				
ANR	2349661	AssignmentExpression	"buffer += ""\\\\t"""		2349520	0		+=			
ANR	2349662	Identifier	buffer		2349520	0					
ANR	2349663	PrimaryExpression	"""\\\\t"""		2349520	1					
ANR	2349664	ContinueStatement	continue ;	136:34:2769:2777	2349520	17	True				
ANR	2349665	Label	case '\\v' :	137:6:2785:2794	2349520	18	True				
ANR	2349666	ExpressionStatement	"buffer += ""\\\\v"""	137:17:2796:2811	2349520	19	True				
ANR	2349667	AssignmentExpression	"buffer += ""\\\\v"""		2349520	0		+=			
ANR	2349668	Identifier	buffer		2349520	0					
ANR	2349669	PrimaryExpression	"""\\\\v"""		2349520	1					
ANR	2349670	ContinueStatement	continue ;	137:34:2813:2821	2349520	20	True				
ANR	2349671	Label	case '\\\\' :	138:6:2829:2838	2349520	21	True				
ANR	2349672	ExpressionStatement	"buffer += ""\\\\\\\\"""	138:17:2840:2856	2349520	22	True				
ANR	2349673	AssignmentExpression	"buffer += ""\\\\\\\\"""		2349520	0		+=			
ANR	2349674	Identifier	buffer		2349520	0					
ANR	2349675	PrimaryExpression	"""\\\\\\\\"""		2349520	1					
ANR	2349676	ContinueStatement	continue ;	138:35:2858:2866	2349520	23	True				
ANR	2349677	Label	case '\\'' :	139:6:2874:2883	2349520	24	True				
ANR	2349678	ExpressionStatement	"buffer += ""\\'"""	139:17:2885:2899	2349520	25	True				
ANR	2349679	AssignmentExpression	"buffer += ""\\'"""		2349520	0		+=			
ANR	2349680	Identifier	buffer		2349520	0					
ANR	2349681	PrimaryExpression	"""\\'"""		2349520	1					
ANR	2349682	ContinueStatement	continue ;	139:33:2901:2909	2349520	26	True				
ANR	2349683	Label	"case '\\""' :"	140:6:2917:2926	2349520	27	True				
ANR	2349684	ExpressionStatement	"buffer += ""\\"""""	140:17:2928:2942	2349520	28	True				
ANR	2349685	AssignmentExpression	"buffer += ""\\"""""		2349520	0		+=			
ANR	2349686	Identifier	buffer		2349520	0					
ANR	2349687	PrimaryExpression	"""\\"""""		2349520	1					
ANR	2349688	ContinueStatement	continue ;	140:33:2944:2952	2349520	29	True				
ANR	2349689	Label	default :	142:6:2961:2968	2349520	30	True				
ANR	2349690	Identifier	default		2349520	0					
ANR	2349691	IfStatement	if ( ! isprint ( * itr ) )		2349520	31					
ANR	2349692	Condition	! isprint ( * itr )	143:11:2981:2996	2349520	0	True				
ANR	2349693	UnaryOperationExpression	! isprint ( * itr )		2349520	0					
ANR	2349694	UnaryOperator	!		2349520	0					
ANR	2349695	CallExpression	isprint ( * itr )		2349520	1					
ANR	2349696	Callee	isprint		2349520	0					
ANR	2349697	Identifier	isprint		2349520	0					
ANR	2349698	ArgumentList	* itr		2349520	1					
ANR	2349699	Argument	* itr		2349520	0					
ANR	2349700	UnaryOperationExpression	* itr		2349520	0					
ANR	2349701	UnaryOperator	*		2349520	0					
ANR	2349702	Identifier	itr		2349520	1					
ANR	2349703	CompoundStatement		37:30:981:981	2349520	1					
ANR	2349704	ExpressionStatement	"sprintf ( tempBuf , ""\\\\%03o"" , ( unsigned char ) * itr )"	145:8:3049:3098	2349520	0	True				
ANR	2349705	CallExpression	"sprintf ( tempBuf , ""\\\\%03o"" , ( unsigned char ) * itr )"		2349520	0					
ANR	2349706	Callee	sprintf		2349520	0					
ANR	2349707	Identifier	sprintf		2349520	0					
ANR	2349708	ArgumentList	tempBuf		2349520	1					
ANR	2349709	Argument	tempBuf		2349520	0					
ANR	2349710	Identifier	tempBuf		2349520	0					
ANR	2349711	Argument	"""\\\\%03o"""		2349520	1					
ANR	2349712	PrimaryExpression	"""\\\\%03o"""		2349520	0					
ANR	2349713	Argument	( unsigned char ) * itr		2349520	2					
ANR	2349714	CastExpression	( unsigned char ) * itr		2349520	0					
ANR	2349715	CastTarget	unsigned char		2349520	0					
ANR	2349716	UnaryOperationExpression	* itr		2349520	1					
ANR	2349717	UnaryOperator	*		2349520	0					
ANR	2349718	Identifier	itr		2349520	1					
ANR	2349719	ExpressionStatement	buffer += tempBuf	146:8:3108:3125	2349520	1	True				
ANR	2349720	AssignmentExpression	buffer += tempBuf		2349520	0		+=			
ANR	2349721	Identifier	buffer		2349520	0					
ANR	2349722	Identifier	tempBuf		2349520	1					
ANR	2349723	ContinueStatement	continue ;	147:8:3135:3143	2349520	2	True				
ANR	2349724	BreakStatement	break ;	149:7:3161:3166	2349520	32	True				
ANR	2349725	IfStatement	if ( ! xmlUnparse )		2349520	2					
ANR	2349726	Condition	! xmlUnparse	153:8:3190:3200	2349520	0	True				
ANR	2349727	UnaryOperationExpression	! xmlUnparse		2349520	0					
ANR	2349728	UnaryOperator	!		2349520	0					
ANR	2349729	Identifier	xmlUnparse		2349520	1					
ANR	2349730	CompoundStatement		47:21:1184:1184	2349520	1					
ANR	2349731	ExpressionStatement	buffer += * itr	154:5:3210:3224	2349520	0	True				
ANR	2349732	AssignmentExpression	buffer += * itr		2349520	0		+=			
ANR	2349733	Identifier	buffer		2349520	0					
ANR	2349734	UnaryOperationExpression	* itr		2349520	1					
ANR	2349735	UnaryOperator	*		2349520	0					
ANR	2349736	Identifier	itr		2349520	1					
ANR	2349737	ElseStatement	else		2349520	0					
ANR	2349738	CompoundStatement		49:11:1218:1218	2349520	0					
ANR	2349739	SwitchStatement	switch ( * itr )		2349520	0					
ANR	2349740	Condition	* itr	156:13:3252:3255	2349520	0	True				
ANR	2349741	UnaryOperationExpression	* itr		2349520	0					
ANR	2349742	UnaryOperator	*		2349520	0					
ANR	2349743	Identifier	itr		2349520	1					
ANR	2349744	CompoundStatement		50:19:1239:1239	2349520	1					
ANR	2349745	Label	case '&' :	157:6:3266:3274	2349520	0	True				
ANR	2349746	ExpressionStatement	"buffer += ""&amp;"""	157:16:3276:3293	2349520	1	True				
ANR	2349747	AssignmentExpression	"buffer += ""&amp;"""		2349520	0		+=			
ANR	2349748	Identifier	buffer		2349520	0					
ANR	2349749	PrimaryExpression	"""&amp;"""		2349520	1					
ANR	2349750	BreakStatement	break ;	157:35:3295:3300	2349520	2	True				
ANR	2349751	Label	case '<' :	158:6:3308:3316	2349520	3	True				
ANR	2349752	ExpressionStatement	"buffer += ""&lt;"""	158:16:3318:3334	2349520	4	True				
ANR	2349753	AssignmentExpression	"buffer += ""&lt;"""		2349520	0		+=			
ANR	2349754	Identifier	buffer		2349520	0					
ANR	2349755	PrimaryExpression	"""&lt;"""		2349520	1					
ANR	2349756	BreakStatement	break ;	158:35:3337:3342	2349520	5	True				
ANR	2349757	Label	case '>' :	159:6:3350:3358	2349520	6	True				
ANR	2349758	ExpressionStatement	"buffer += ""&gt;"""	159:16:3360:3376	2349520	7	True				
ANR	2349759	AssignmentExpression	"buffer += ""&gt;"""		2349520	0		+=			
ANR	2349760	Identifier	buffer		2349520	0					
ANR	2349761	PrimaryExpression	"""&gt;"""		2349520	1					
ANR	2349762	BreakStatement	break ;	159:35:3379:3384	2349520	8	True				
ANR	2349763	Label	default :	160:6:3392:3399	2349520	9	True				
ANR	2349764	Identifier	default		2349520	0					
ANR	2349765	ExpressionStatement	buffer += * itr	160:16:3402:3416	2349520	10	True				
ANR	2349766	AssignmentExpression	buffer += * itr		2349520	0		+=			
ANR	2349767	Identifier	buffer		2349520	0					
ANR	2349768	UnaryOperationExpression	* itr		2349520	1					
ANR	2349769	UnaryOperator	*		2349520	0					
ANR	2349770	Identifier	itr		2349520	1					
ANR	2349771	BreakStatement	break ;	160:35:3421:3426	2349520	11	True				
ANR	2349772	ExpressionStatement	"buffer += '""'"	164:3:3449:3462	2349520	4	True				
ANR	2349773	AssignmentExpression	"buffer += '""'"		2349520	0		+=			
ANR	2349774	Identifier	buffer		2349520	0					
ANR	2349775	PrimaryExpression	"'""'"		2349520	1					
ANR	2349776	ReturnStatement	return ;	165:3:3467:3473	2349520	5	True				
ANR	2349777	Label	case Value :: INTEGER_VALUE :	167:2:3481:3506	2349520	5	True				
ANR	2349778	Identifier	Value :: INTEGER_VALUE		2349520	0					
ANR	2349779	CompoundStatement		62:3:1494:1499	2349520	6					
ANR	2349780	IdentifierDeclStatement	int i ;	168:3:3513:3518	2349520	0	True				
ANR	2349781	IdentifierDecl	i		2349520	0					
ANR	2349782	IdentifierDeclType	int		2349520	0					
ANR	2349783	Identifier	i		2349520	1					
ANR	2349784	ExpressionStatement	val . IsIntegerValue ( i )	169:3:3523:3546	2349520	1	True				
ANR	2349785	CallExpression	val . IsIntegerValue ( i )		2349520	0					
ANR	2349786	Callee	val . IsIntegerValue		2349520	0					
ANR	2349787	MemberAccess	val . IsIntegerValue		2349520	0					
ANR	2349788	Identifier	val		2349520	0					
ANR	2349789	Identifier	IsIntegerValue		2349520	1					
ANR	2349790	ArgumentList	i		2349520	1					
ANR	2349791	Argument	i		2349520	0					
ANR	2349792	Identifier	i		2349520	0					
ANR	2349793	ExpressionStatement	"sprintf ( tempBuf , ""%d"" , i )"	170:3:3551:3578	2349520	2	True				
ANR	2349794	CallExpression	"sprintf ( tempBuf , ""%d"" , i )"		2349520	0					
ANR	2349795	Callee	sprintf		2349520	0					
ANR	2349796	Identifier	sprintf		2349520	0					
ANR	2349797	ArgumentList	tempBuf		2349520	1					
ANR	2349798	Argument	tempBuf		2349520	0					
ANR	2349799	Identifier	tempBuf		2349520	0					
ANR	2349800	Argument	"""%d"""		2349520	1					
ANR	2349801	PrimaryExpression	"""%d"""		2349520	0					
ANR	2349802	Argument	i		2349520	2					
ANR	2349803	Identifier	i		2349520	0					
ANR	2349804	ExpressionStatement	buffer += tempBuf	171:3:3583:3600	2349520	3	True				
ANR	2349805	AssignmentExpression	buffer += tempBuf		2349520	0		+=			
ANR	2349806	Identifier	buffer		2349520	0					
ANR	2349807	Identifier	tempBuf		2349520	1					
ANR	2349808	ReturnStatement	return ;	172:3:3605:3611	2349520	4	True				
ANR	2349809	Label	case Value :: REAL_VALUE :	174:2:3619:3641	2349520	7	True				
ANR	2349810	Identifier	Value :: REAL_VALUE		2349520	0					
ANR	2349811	CompoundStatement		69:3:1629:1640	2349520	8					
ANR	2349812	IdentifierDeclStatement	double real ;	175:3:3648:3659	2349520	0	True				
ANR	2349813	IdentifierDecl	real		2349520	0					
ANR	2349814	IdentifierDeclType	double		2349520	0					
ANR	2349815	Identifier	real		2349520	1					
ANR	2349816	ExpressionStatement	val . IsRealValue ( real )	176:3:3664:3685	2349520	1	True				
ANR	2349817	CallExpression	val . IsRealValue ( real )		2349520	0					
ANR	2349818	Callee	val . IsRealValue		2349520	0					
ANR	2349819	MemberAccess	val . IsRealValue		2349520	0					
ANR	2349820	Identifier	val		2349520	0					
ANR	2349821	Identifier	IsRealValue		2349520	1					
ANR	2349822	ArgumentList	real		2349520	1					
ANR	2349823	Argument	real		2349520	0					
ANR	2349824	Identifier	real		2349520	0					
ANR	2349825	IfStatement	if ( real == 0.0 )		2349520	2					
ANR	2349826	Condition	real == 0.0	177:16:3703:3713	2349520	0	True				
ANR	2349827	EqualityExpression	real == 0.0		2349520	0		==			
ANR	2349828	Identifier	real		2349520	0					
ANR	2349829	PrimaryExpression	0.0		2349520	1					
ANR	2349830	CompoundStatement		71:29:1697:1697	2349520	1					
ANR	2349831	ExpressionStatement	"sprintf ( tempBuf , ""%.1f"" , real )"	183:16:4019:4049	2349520	0	True				
ANR	2349832	CallExpression	"sprintf ( tempBuf , ""%.1f"" , real )"		2349520	0					
ANR	2349833	Callee	sprintf		2349520	0					
ANR	2349834	Identifier	sprintf		2349520	0					
ANR	2349835	ArgumentList	tempBuf		2349520	1					
ANR	2349836	Argument	tempBuf		2349520	0					
ANR	2349837	Identifier	tempBuf		2349520	0					
ANR	2349838	Argument	"""%.1f"""		2349520	1					
ANR	2349839	PrimaryExpression	"""%.1f"""		2349520	0					
ANR	2349840	Argument	real		2349520	2					
ANR	2349841	Identifier	real		2349520	0					
ANR	2349842	ExpressionStatement	buffer += tempBuf	184:16:4067:4084	2349520	1	True				
ANR	2349843	AssignmentExpression	buffer += tempBuf		2349520	0		+=			
ANR	2349844	Identifier	buffer		2349520	0					
ANR	2349845	Identifier	tempBuf		2349520	1					
ANR	2349846	ElseStatement	else		2349520	0					
ANR	2349847	IfStatement	if ( classad_isnan ( real ) )		2349520	0					
ANR	2349848	Condition	classad_isnan ( real )	185:23:4109:4127	2349520	0	True				
ANR	2349849	CallExpression	classad_isnan ( real )		2349520	0					
ANR	2349850	Callee	classad_isnan		2349520	0					
ANR	2349851	Identifier	classad_isnan		2349520	0					
ANR	2349852	ArgumentList	real		2349520	1					
ANR	2349853	Argument	real		2349520	0					
ANR	2349854	Identifier	real		2349520	0					
ANR	2349855	CompoundStatement		79:44:2111:2111	2349520	1					
ANR	2349856	ExpressionStatement	"buffer += ""real(\\""NaN\\"")"""	186:16:4148:4173	2349520	0	True				
ANR	2349857	AssignmentExpression	"buffer += ""real(\\""NaN\\"")"""		2349520	0		+=			
ANR	2349858	Identifier	buffer		2349520	0					
ANR	2349859	PrimaryExpression	"""real(\\""NaN\\"")"""		2349520	1					
ANR	2349860	ElseStatement	else		2349520	0					
ANR	2349861	IfStatement	if ( classad_isinf ( real ) == - 1 )		2349520	0					
ANR	2349862	Condition	classad_isinf ( real ) == - 1	187:23:4198:4222	2349520	0	True				
ANR	2349863	EqualityExpression	classad_isinf ( real ) == - 1		2349520	0		==			
ANR	2349864	CallExpression	classad_isinf ( real )		2349520	0					
ANR	2349865	Callee	classad_isinf		2349520	0					
ANR	2349866	Identifier	classad_isinf		2349520	0					
ANR	2349867	ArgumentList	real		2349520	1					
ANR	2349868	Argument	real		2349520	0					
ANR	2349869	Identifier	real		2349520	0					
ANR	2349870	UnaryOperationExpression	- 1		2349520	1					
ANR	2349871	UnaryOperator	-		2349520	0					
ANR	2349872	PrimaryExpression	1		2349520	1					
ANR	2349873	CompoundStatement		81:49:2205:2205	2349520	1					
ANR	2349874	ExpressionStatement	"buffer += ""real(\\""-INF\\"")"""	188:16:4242:4268	2349520	0	True				
ANR	2349875	AssignmentExpression	"buffer += ""real(\\""-INF\\"")"""		2349520	0		+=			
ANR	2349876	Identifier	buffer		2349520	0					
ANR	2349877	PrimaryExpression	"""real(\\""-INF\\"")"""		2349520	1					
ANR	2349878	ElseStatement	else		2349520	0					
ANR	2349879	IfStatement	if ( classad_isinf ( real ) == 1 )		2349520	0					
ANR	2349880	Condition	classad_isinf ( real ) == 1	189:23:4293:4316	2349520	0	True				
ANR	2349881	EqualityExpression	classad_isinf ( real ) == 1		2349520	0		==			
ANR	2349882	CallExpression	classad_isinf ( real )		2349520	0					
ANR	2349883	Callee	classad_isinf		2349520	0					
ANR	2349884	Identifier	classad_isinf		2349520	0					
ANR	2349885	ArgumentList	real		2349520	1					
ANR	2349886	Argument	real		2349520	0					
ANR	2349887	Identifier	real		2349520	0					
ANR	2349888	PrimaryExpression	1		2349520	1					
ANR	2349889	CompoundStatement		83:49:2300:2300	2349520	1					
ANR	2349890	ExpressionStatement	"buffer += ""real(\\""INF\\"")"""	190:16:4337:4362	2349520	0	True				
ANR	2349891	AssignmentExpression	"buffer += ""real(\\""INF\\"")"""		2349520	0		+=			
ANR	2349892	Identifier	buffer		2349520	0					
ANR	2349893	PrimaryExpression	"""real(\\""INF\\"")"""		2349520	1					
ANR	2349894	ElseStatement	else		2349520	0					
ANR	2349895	IfStatement	if ( oldClassAd )		2349520	0					
ANR	2349896	Condition	oldClassAd	191:14:4378:4387	2349520	0	True				
ANR	2349897	Identifier	oldClassAd		2349520	0					
ANR	2349898	CompoundStatement		85:26:2371:2371	2349520	1					
ANR	2349899	ExpressionStatement	"sprintf ( tempBuf , ""%f"" , real )"	192:16:4408:4436	2349520	0	True				
ANR	2349900	CallExpression	"sprintf ( tempBuf , ""%f"" , real )"		2349520	0					
ANR	2349901	Callee	sprintf		2349520	0					
ANR	2349902	Identifier	sprintf		2349520	0					
ANR	2349903	ArgumentList	tempBuf		2349520	1					
ANR	2349904	Argument	tempBuf		2349520	0					
ANR	2349905	Identifier	tempBuf		2349520	0					
ANR	2349906	Argument	"""%f"""		2349520	1					
ANR	2349907	PrimaryExpression	"""%f"""		2349520	0					
ANR	2349908	Argument	real		2349520	2					
ANR	2349909	Identifier	real		2349520	0					
ANR	2349910	ExpressionStatement	buffer += tempBuf	193:16:4454:4471	2349520	1	True				
ANR	2349911	AssignmentExpression	buffer += tempBuf		2349520	0		+=			
ANR	2349912	Identifier	buffer		2349520	0					
ANR	2349913	Identifier	tempBuf		2349520	1					
ANR	2349914	ElseStatement	else		2349520	0					
ANR	2349915	CompoundStatement		88:19:2473:2473	2349520	0					
ANR	2349916	ExpressionStatement	"sprintf ( tempBuf , ""%1.15E"" , real )"	195:16:4510:4542	2349520	0	True				
ANR	2349917	CallExpression	"sprintf ( tempBuf , ""%1.15E"" , real )"		2349520	0					
ANR	2349918	Callee	sprintf		2349520	0					
ANR	2349919	Identifier	sprintf		2349520	0					
ANR	2349920	ArgumentList	tempBuf		2349520	1					
ANR	2349921	Argument	tempBuf		2349520	0					
ANR	2349922	Identifier	tempBuf		2349520	0					
ANR	2349923	Argument	"""%1.15E"""		2349520	1					
ANR	2349924	PrimaryExpression	"""%1.15E"""		2349520	0					
ANR	2349925	Argument	real		2349520	2					
ANR	2349926	Identifier	real		2349520	0					
ANR	2349927	ExpressionStatement	buffer += tempBuf	196:16:4560:4577	2349520	1	True				
ANR	2349928	AssignmentExpression	buffer += tempBuf		2349520	0		+=			
ANR	2349929	Identifier	buffer		2349520	0					
ANR	2349930	Identifier	tempBuf		2349520	1					
ANR	2349931	ReturnStatement	return ;	198:3:4596:4602	2349520	3	True				
ANR	2349932	Label	case Value :: BOOLEAN_VALUE :	200:2:4610:4635	2349520	9	True				
ANR	2349933	Identifier	Value :: BOOLEAN_VALUE		2349520	0					
ANR	2349934	CompoundStatement		95:3:2623:2629	2349520	10					
ANR	2349935	IdentifierDeclStatement	bool b ;	201:3:4642:4648	2349520	0	True				
ANR	2349936	IdentifierDecl	b		2349520	0					
ANR	2349937	IdentifierDeclType	bool		2349520	0					
ANR	2349938	Identifier	b		2349520	1					
ANR	2349939	ExpressionStatement	val . IsBooleanValue ( b )	202:3:4653:4676	2349520	1	True				
ANR	2349940	CallExpression	val . IsBooleanValue ( b )		2349520	0					
ANR	2349941	Callee	val . IsBooleanValue		2349520	0					
ANR	2349942	MemberAccess	val . IsBooleanValue		2349520	0					
ANR	2349943	Identifier	val		2349520	0					
ANR	2349944	Identifier	IsBooleanValue		2349520	1					
ANR	2349945	ArgumentList	b		2349520	1					
ANR	2349946	Argument	b		2349520	0					
ANR	2349947	Identifier	b		2349520	0					
ANR	2349948	ExpressionStatement	"buffer += b ? ""true"" : ""false"""	203:3:4681:4711	2349520	2	True				
ANR	2349949	AssignmentExpression	"buffer += b ? ""true"" : ""false"""		2349520	0		+=			
ANR	2349950	Identifier	buffer		2349520	0					
ANR	2349951	ConditionalExpression	"b ? ""true"" : ""false"""		2349520	1					
ANR	2349952	Condition	b		2349520	0					
ANR	2349953	Identifier	b		2349520	0					
ANR	2349954	PrimaryExpression	"""true"""		2349520	1					
ANR	2349955	PrimaryExpression	"""false"""		2349520	2					
ANR	2349956	ReturnStatement	return ;	204:3:4716:4722	2349520	3	True				
ANR	2349957	Label	case Value :: UNDEFINED_VALUE :	206:2:4730:4757	2349520	11	True				
ANR	2349958	Identifier	Value :: UNDEFINED_VALUE		2349520	0					
ANR	2349959	CompoundStatement		100:31:2740:2740	2349520	12					
ANR	2349960	ExpressionStatement	"buffer += ""undefined"""	207:3:4764:4785	2349520	0	True				
ANR	2349961	AssignmentExpression	"buffer += ""undefined"""		2349520	0		+=			
ANR	2349962	Identifier	buffer		2349520	0					
ANR	2349963	PrimaryExpression	"""undefined"""		2349520	1					
ANR	2349964	ReturnStatement	return ;	208:3:4790:4796	2349520	1	True				
ANR	2349965	Label	case Value :: ERROR_VALUE :	210:2:4804:4827	2349520	13	True				
ANR	2349966	Identifier	Value :: ERROR_VALUE		2349520	0					
ANR	2349967	CompoundStatement		104:27:2810:2810	2349520	14					
ANR	2349968	ExpressionStatement	"buffer += ""error"""	211:3:4834:4851	2349520	0	True				
ANR	2349969	AssignmentExpression	"buffer += ""error"""		2349520	0		+=			
ANR	2349970	Identifier	buffer		2349520	0					
ANR	2349971	PrimaryExpression	"""error"""		2349520	1					
ANR	2349972	ReturnStatement	return ;	212:3:4856:4862	2349520	1	True				
ANR	2349973	Label	case Value :: ABSOLUTE_TIME_VALUE :	214:2:4870:4901	2349520	15	True				
ANR	2349974	Identifier	Value :: ABSOLUTE_TIME_VALUE		2349520	0					
ANR	2349975	CompoundStatement		109:3:2889:2904	2349520	16					
ANR	2349976	IdentifierDeclStatement	abstime_t asecs ;	215:3:4908:4923	2349520	0	True				
ANR	2349977	IdentifierDecl	asecs		2349520	0					
ANR	2349978	IdentifierDeclType	abstime_t		2349520	0					
ANR	2349979	Identifier	asecs		2349520	1					
ANR	2349980	ExpressionStatement	val . IsAbsoluteTimeValue ( asecs )	216:3:4928:4958	2349520	1	True				
ANR	2349981	CallExpression	val . IsAbsoluteTimeValue ( asecs )		2349520	0					
ANR	2349982	Callee	val . IsAbsoluteTimeValue		2349520	0					
ANR	2349983	MemberAccess	val . IsAbsoluteTimeValue		2349520	0					
ANR	2349984	Identifier	val		2349520	0					
ANR	2349985	Identifier	IsAbsoluteTimeValue		2349520	1					
ANR	2349986	ArgumentList	asecs		2349520	1					
ANR	2349987	Argument	asecs		2349520	0					
ANR	2349988	Identifier	asecs		2349520	0					
ANR	2349989	ExpressionStatement	"buffer += ""absTime(\\"""""	218:3:4964:4986	2349520	2	True				
ANR	2349990	AssignmentExpression	"buffer += ""absTime(\\"""""		2349520	0		+=			
ANR	2349991	Identifier	buffer		2349520	0					
ANR	2349992	PrimaryExpression	"""absTime(\\"""""		2349520	1					
ANR	2349993	ExpressionStatement	"absTimeToString ( asecs , buffer )"	219:12:5000:5030	2349520	3	True				
ANR	2349994	CallExpression	"absTimeToString ( asecs , buffer )"		2349520	0					
ANR	2349995	Callee	absTimeToString		2349520	0					
ANR	2349996	Identifier	absTimeToString		2349520	0					
ANR	2349997	ArgumentList	asecs		2349520	1					
ANR	2349998	Argument	asecs		2349520	0					
ANR	2349999	Identifier	asecs		2349520	0					
ANR	2350000	Argument	buffer		2349520	1					
ANR	2350001	Identifier	buffer		2349520	0					
ANR	2350002	ExpressionStatement	"buffer += ""\\"")"""	220:12:5044:5059	2349520	4	True				
ANR	2350003	AssignmentExpression	"buffer += ""\\"")"""		2349520	0		+=			
ANR	2350004	Identifier	buffer		2349520	0					
ANR	2350005	PrimaryExpression	"""\\"")"""		2349520	1					
ANR	2350006	ReturnStatement	return ;	222:3:5067:5073	2349520	5	True				
ANR	2350007	Label	case Value :: RELATIVE_TIME_VALUE :	224:2:5081:5112	2349520	17	True				
ANR	2350008	Identifier	Value :: RELATIVE_TIME_VALUE		2349520	0					
ANR	2350009	CompoundStatement		119:12:3109:3121	2349520	18					
ANR	2350010	IdentifierDeclStatement	double rsecs ;	225:12:5128:5140	2349520	0	True				
ANR	2350011	IdentifierDecl	rsecs		2349520	0					
ANR	2350012	IdentifierDeclType	double		2349520	0					
ANR	2350013	Identifier	rsecs		2349520	1					
ANR	2350014	ExpressionStatement	val . IsRelativeTimeValue ( rsecs )	226:12:5154:5184	2349520	1	True				
ANR	2350015	CallExpression	val . IsRelativeTimeValue ( rsecs )		2349520	0					
ANR	2350016	Callee	val . IsRelativeTimeValue		2349520	0					
ANR	2350017	MemberAccess	val . IsRelativeTimeValue		2349520	0					
ANR	2350018	Identifier	val		2349520	0					
ANR	2350019	Identifier	IsRelativeTimeValue		2349520	1					
ANR	2350020	ArgumentList	rsecs		2349520	1					
ANR	2350021	Argument	rsecs		2349520	0					
ANR	2350022	Identifier	rsecs		2349520	0					
ANR	2350023	ExpressionStatement	"buffer += ""relTime(\\"""""	228:3:5190:5212	2349520	2	True				
ANR	2350024	AssignmentExpression	"buffer += ""relTime(\\"""""		2349520	0		+=			
ANR	2350025	Identifier	buffer		2349520	0					
ANR	2350026	PrimaryExpression	"""relTime(\\"""""		2349520	1					
ANR	2350027	ExpressionStatement	"relTimeToString ( rsecs , buffer )"	229:12:5226:5256	2349520	3	True				
ANR	2350028	CallExpression	"relTimeToString ( rsecs , buffer )"		2349520	0					
ANR	2350029	Callee	relTimeToString		2349520	0					
ANR	2350030	Identifier	relTimeToString		2349520	0					
ANR	2350031	ArgumentList	rsecs		2349520	1					
ANR	2350032	Argument	rsecs		2349520	0					
ANR	2350033	Identifier	rsecs		2349520	0					
ANR	2350034	Argument	buffer		2349520	1					
ANR	2350035	Identifier	buffer		2349520	0					
ANR	2350036	ExpressionStatement	"buffer += ""\\"")"""	230:12:5270:5285	2349520	4	True				
ANR	2350037	AssignmentExpression	"buffer += ""\\"")"""		2349520	0		+=			
ANR	2350038	Identifier	buffer		2349520	0					
ANR	2350039	PrimaryExpression	"""\\"")"""		2349520	1					
ANR	2350040	ReturnStatement	return ;	232:3:5294:5300	2349520	5	True				
ANR	2350041	Label	case Value :: CLASSAD_VALUE :	234:2:5308:5333	2349520	19	True				
ANR	2350042	Identifier	Value :: CLASSAD_VALUE		2349520	0					
ANR	2350043	CompoundStatement		130:3:3350:3388	2349520	20					
ANR	2350044	IdentifierDeclStatement	const ClassAd * ad = NULL ;	235:3:5340:5364	2349520	0	True				
ANR	2350045	IdentifierDecl	* ad = NULL		2349520	0					
ANR	2350046	IdentifierDeclType	const ClassAd *		2349520	0					
ANR	2350047	Identifier	ad		2349520	1					
ANR	2350048	AssignmentExpression	* ad = NULL		2349520	2		=			
ANR	2350049	Identifier	NULL		2349520	0					
ANR	2350050	Identifier	NULL		2349520	1					
ANR	2350051	IdentifierDeclStatement	"vector < pair < string , ExprTree * > > attrs ;"	236:3:5369:5407	2349520	1	True				
ANR	2350052	IdentifierDecl	attrs		2349520	0					
ANR	2350053	IdentifierDeclType	"vector < pair < string , ExprTree * > >"		2349520	0					
ANR	2350054	Identifier	attrs		2349520	1					
ANR	2350055	ExpressionStatement	val . IsClassAdValue ( ad )	237:3:5412:5436	2349520	2	True				
ANR	2350056	CallExpression	val . IsClassAdValue ( ad )		2349520	0					
ANR	2350057	Callee	val . IsClassAdValue		2349520	0					
ANR	2350058	MemberAccess	val . IsClassAdValue		2349520	0					
ANR	2350059	Identifier	val		2349520	0					
ANR	2350060	Identifier	IsClassAdValue		2349520	1					
ANR	2350061	ArgumentList	ad		2349520	1					
ANR	2350062	Argument	ad		2349520	0					
ANR	2350063	Identifier	ad		2349520	0					
ANR	2350064	ExpressionStatement	ad -> GetComponents ( attrs )	238:3:5441:5467	2349520	3	True				
ANR	2350065	CallExpression	ad -> GetComponents ( attrs )		2349520	0					
ANR	2350066	Callee	ad -> GetComponents		2349520	0					
ANR	2350067	PtrMemberAccess	ad -> GetComponents		2349520	0					
ANR	2350068	Identifier	ad		2349520	0					
ANR	2350069	Identifier	GetComponents		2349520	1					
ANR	2350070	ArgumentList	attrs		2349520	1					
ANR	2350071	Argument	attrs		2349520	0					
ANR	2350072	Identifier	attrs		2349520	0					
ANR	2350073	ExpressionStatement	"UnparseAux ( buffer , attrs )"	239:3:5472:5499	2349520	4	True				
ANR	2350074	CallExpression	"UnparseAux ( buffer , attrs )"		2349520	0					
ANR	2350075	Callee	UnparseAux		2349520	0					
ANR	2350076	Identifier	UnparseAux		2349520	0					
ANR	2350077	ArgumentList	buffer		2349520	1					
ANR	2350078	Argument	buffer		2349520	0					
ANR	2350079	Identifier	buffer		2349520	0					
ANR	2350080	Argument	attrs		2349520	1					
ANR	2350081	Identifier	attrs		2349520	0					
ANR	2350082	ReturnStatement	return ;	240:3:5504:5510	2349520	5	True				
ANR	2350083	Label	case Value :: LIST_VALUE :	242:2:5518:5540	2349520	21	True				
ANR	2350084	Identifier	Value :: LIST_VALUE		2349520	0					
ANR	2350085	CompoundStatement		138:3:3558:3581	2349520	22					
ANR	2350086	IdentifierDeclStatement	const ExprList * el = NULL ;	243:3:5547:5572	2349520	0	True				
ANR	2350087	IdentifierDecl	* el = NULL		2349520	0					
ANR	2350088	IdentifierDeclType	const ExprList *		2349520	0					
ANR	2350089	Identifier	el		2349520	1					
ANR	2350090	AssignmentExpression	* el = NULL		2349520	2		=			
ANR	2350091	Identifier	NULL		2349520	0					
ANR	2350092	Identifier	NULL		2349520	1					
ANR	2350093	IdentifierDeclStatement	vector < ExprTree * > exprs ;	244:3:5577:5600	2349520	1	True				
ANR	2350094	IdentifierDecl	exprs		2349520	0					
ANR	2350095	IdentifierDeclType	vector < ExprTree * >		2349520	0					
ANR	2350096	Identifier	exprs		2349520	1					
ANR	2350097	ExpressionStatement	val . IsListValue ( el )	245:3:5605:5626	2349520	2	True				
ANR	2350098	CallExpression	val . IsListValue ( el )		2349520	0					
ANR	2350099	Callee	val . IsListValue		2349520	0					
ANR	2350100	MemberAccess	val . IsListValue		2349520	0					
ANR	2350101	Identifier	val		2349520	0					
ANR	2350102	Identifier	IsListValue		2349520	1					
ANR	2350103	ArgumentList	el		2349520	1					
ANR	2350104	Argument	el		2349520	0					
ANR	2350105	Identifier	el		2349520	0					
ANR	2350106	ExpressionStatement	el -> GetComponents ( exprs )	246:3:5631:5657	2349520	3	True				
ANR	2350107	CallExpression	el -> GetComponents ( exprs )		2349520	0					
ANR	2350108	Callee	el -> GetComponents		2349520	0					
ANR	2350109	PtrMemberAccess	el -> GetComponents		2349520	0					
ANR	2350110	Identifier	el		2349520	0					
ANR	2350111	Identifier	GetComponents		2349520	1					
ANR	2350112	ArgumentList	exprs		2349520	1					
ANR	2350113	Argument	exprs		2349520	0					
ANR	2350114	Identifier	exprs		2349520	0					
ANR	2350115	ExpressionStatement	"UnparseAux ( buffer , exprs )"	247:3:5662:5689	2349520	4	True				
ANR	2350116	CallExpression	"UnparseAux ( buffer , exprs )"		2349520	0					
ANR	2350117	Callee	UnparseAux		2349520	0					
ANR	2350118	Identifier	UnparseAux		2349520	0					
ANR	2350119	ArgumentList	buffer		2349520	1					
ANR	2350120	Argument	buffer		2349520	0					
ANR	2350121	Identifier	buffer		2349520	0					
ANR	2350122	Argument	exprs		2349520	1					
ANR	2350123	Identifier	exprs		2349520	0					
ANR	2350124	ReturnStatement	return ;	248:3:5694:5700	2349520	5	True				
ANR	2350125	ReturnType	void		2349520	1					
ANR	2350126	Identifier	ClassAdUnParser :: Unparse		2349520	2					
ANR	2350127	ParameterList	"string & buffer , const Value & val"		2349520	3					
ANR	2350128	Parameter	string & buffer	106:9:1983:1996	2349520	0	True				
ANR	2350129	ParameterType	string &		2349520	0					
ANR	2350130	Identifier	buffer		2349520	1					
ANR	2350131	Parameter	const Value & val	106:25:1999:2014	2349520	1	True				
ANR	2350132	ParameterType	const Value &		2349520	0					
ANR	2350133	Identifier	val		2349520	1					
ANR	2350134	CFGEntryNode	ENTRY		2349520		True				
ANR	2350135	CFGExitNode	EXIT		2349520		True				
ANR	2350136	Symbol	isprint		2349520						
ANR	2350137	Symbol	classad_isinf		2349520						
ANR	2350138	Symbol	rsecs		2349520						
ANR	2350139	Symbol	val . GetType		2349520						
ANR	2350140	Symbol	oldClassAd		2349520						
ANR	2350141	Symbol	delimiter		2349520						
ANR	2350142	Symbol	classad_isnan		2349520						
ANR	2350143	Symbol	exprs		2349520						
ANR	2350144	Symbol	buffer		2349520						
ANR	2350145	Symbol	tempBuf		2349520						
ANR	2350146	Symbol	val		2349520						
ANR	2350147	Symbol	b		2349520						
ANR	2350148	Symbol	s . end		2349520						
ANR	2350149	Symbol	NULL		2349520						
ANR	2350150	Symbol	ad		2349520						
ANR	2350151	Symbol	itr		2349520						
ANR	2350152	Symbol	el		2349520						
ANR	2350153	Symbol	i		2349520						
ANR	2350154	Symbol	real		2349520						
ANR	2350155	Symbol	xmlUnparse		2349520						
ANR	2350156	Symbol	* itr		2349520						
ANR	2350157	Symbol	asecs		2349520						
ANR	2350158	Symbol	attrs		2349520						
ANR	2350159	Symbol	s		2349520						
ANR	2350160	Symbol	s . begin		2349520						
ANR	2350161	Function	ClassAdUnParser :: Unparse	254:0:5713:7264							
ANR	2350162	FunctionDef	"ClassAdUnParser :: Unparse (string & buffer , const ExprTree * tree)"		2350161	0					
ANR	2350163	CompoundStatement		256:0:5784:7264	2350161	0					
ANR	2350164	IfStatement	if ( ! tree )		2350161	0					
ANR	2350165	Condition	! tree	257:5:5791:5795	2350161	0	True				
ANR	2350166	UnaryOperationExpression	! tree		2350161	0					
ANR	2350167	UnaryOperator	!		2350161	0					
ANR	2350168	Identifier	tree		2350161	1					
ANR	2350169	CompoundStatement		2:13:14:14	2350161	1					
ANR	2350170	ExpressionStatement	"buffer = ""<error:null expr>"""	258:2:5803:5831	2350161	0	True				
ANR	2350171	AssignmentExpression	"buffer = ""<error:null expr>"""		2350161	0		=			
ANR	2350172	Identifier	buffer		2350161	0					
ANR	2350173	PrimaryExpression	"""<error:null expr>"""		2350161	1					
ANR	2350174	ReturnStatement	return ;	259:2:5835:5841	2350161	1	True				
ANR	2350175	SwitchStatement	switch ( tree -> GetKind ( ) )		2350161	1					
ANR	2350176	Condition	tree -> GetKind ( )	262:9:5856:5871	2350161	0	True				
ANR	2350177	CallExpression	tree -> GetKind ( )		2350161	0					
ANR	2350178	Callee	tree -> GetKind		2350161	0					
ANR	2350179	PtrMemberAccess	tree -> GetKind		2350161	0					
ANR	2350180	Identifier	tree		2350161	0					
ANR	2350181	Identifier	GetKind		2350161	1					
ANR	2350182	ArgumentList			2350161	1					
ANR	2350183	CompoundStatement		7:28:90:90	2350161	1					
ANR	2350184	Label	case ExprTree :: LITERAL_NODE :	263:2:5879:5906	2350161	0	True				
ANR	2350185	Identifier	ExprTree :: LITERAL_NODE		2350161	0					
ANR	2350186	CompoundStatement		10:3:145:171	2350161	1					
ANR	2350187	IdentifierDeclStatement	Value val ;	264:3:5913:5925	2350161	0	True				
ANR	2350188	IdentifierDecl	val		2350161	0					
ANR	2350189	IdentifierDeclType	Value		2350161	0					
ANR	2350190	Identifier	val		2350161	1					
ANR	2350191	IdentifierDeclStatement	Value :: NumberFactor factor ;	265:3:5930:5956	2350161	1	True				
ANR	2350192	IdentifierDecl	factor		2350161	0					
ANR	2350193	IdentifierDeclType	Value :: NumberFactor		2350161	0					
ANR	2350194	Identifier	factor		2350161	1					
ANR	2350195	ExpressionStatement	"( ( Literal * ) tree ) -> GetComponents ( val , factor )"	266:3:5961:6007	2350161	2	True				
ANR	2350196	CallExpression	"( ( Literal * ) tree ) -> GetComponents ( val , factor )"		2350161	0					
ANR	2350197	Callee	( ( Literal * ) tree ) -> GetComponents		2350161	0					
ANR	2350198	PtrMemberAccess	( ( Literal * ) tree ) -> GetComponents		2350161	0					
ANR	2350199	CastExpression	( Literal * ) tree		2350161	0					
ANR	2350200	CastTarget	Literal *		2350161	0					
ANR	2350201	Identifier	tree		2350161	1					
ANR	2350202	Identifier	GetComponents		2350161	1					
ANR	2350203	ArgumentList	val		2350161	1					
ANR	2350204	Argument	val		2350161	0					
ANR	2350205	Identifier	val		2350161	0					
ANR	2350206	Argument	factor		2350161	1					
ANR	2350207	Identifier	factor		2350161	0					
ANR	2350208	ExpressionStatement	"UnparseAux ( buffer , val , factor )"	267:3:6012:6045	2350161	3	True				
ANR	2350209	CallExpression	"UnparseAux ( buffer , val , factor )"		2350161	0					
ANR	2350210	Callee	UnparseAux		2350161	0					
ANR	2350211	Identifier	UnparseAux		2350161	0					
ANR	2350212	ArgumentList	buffer		2350161	1					
ANR	2350213	Argument	buffer		2350161	0					
ANR	2350214	Identifier	buffer		2350161	0					
ANR	2350215	Argument	val		2350161	1					
ANR	2350216	Identifier	val		2350161	0					
ANR	2350217	Argument	factor		2350161	2					
ANR	2350218	Identifier	factor		2350161	0					
ANR	2350219	ReturnStatement	return ;	268:3:6050:6056	2350161	4	True				
ANR	2350220	Label	case ExprTree :: ATTRREF_NODE :	271:2:6065:6092	2350161	2	True				
ANR	2350221	Identifier	ExprTree :: ATTRREF_NODE		2350161	0					
ANR	2350222	CompoundStatement		19:3:348:361	2350161	3					
ANR	2350223	IdentifierDeclStatement	ExprTree * expr ;	272:3:6099:6113	2350161	0	True				
ANR	2350224	IdentifierDecl	* expr		2350161	0					
ANR	2350225	IdentifierDeclType	ExprTree *		2350161	0					
ANR	2350226	Identifier	expr		2350161	1					
ANR	2350227	IdentifierDeclStatement	string ref ;	273:3:6118:6128	2350161	1	True				
ANR	2350228	IdentifierDecl	ref		2350161	0					
ANR	2350229	IdentifierDeclType	string		2350161	0					
ANR	2350230	Identifier	ref		2350161	1					
ANR	2350231	IdentifierDeclStatement	bool absolute ;	274:3:6133:6146	2350161	2	True				
ANR	2350232	IdentifierDecl	absolute		2350161	0					
ANR	2350233	IdentifierDeclType	bool		2350161	0					
ANR	2350234	Identifier	absolute		2350161	1					
ANR	2350235	ExpressionStatement	"( ( AttributeReference * ) tree ) -> GetComponents ( expr , ref , absolute )"	275:3:6151:6216	2350161	3	True				
ANR	2350236	CallExpression	"( ( AttributeReference * ) tree ) -> GetComponents ( expr , ref , absolute )"		2350161	0					
ANR	2350237	Callee	( ( AttributeReference * ) tree ) -> GetComponents		2350161	0					
ANR	2350238	PtrMemberAccess	( ( AttributeReference * ) tree ) -> GetComponents		2350161	0					
ANR	2350239	CastExpression	( AttributeReference * ) tree		2350161	0					
ANR	2350240	CastTarget	AttributeReference *		2350161	0					
ANR	2350241	Identifier	tree		2350161	1					
ANR	2350242	Identifier	GetComponents		2350161	1					
ANR	2350243	ArgumentList	expr		2350161	1					
ANR	2350244	Argument	expr		2350161	0					
ANR	2350245	Identifier	expr		2350161	0					
ANR	2350246	Argument	ref		2350161	1					
ANR	2350247	Identifier	ref		2350161	0					
ANR	2350248	Argument	absolute		2350161	2					
ANR	2350249	Identifier	absolute		2350161	0					
ANR	2350250	ExpressionStatement	"UnparseAux ( buffer , expr , ref , absolute )"	276:3:6221:6262	2350161	4	True				
ANR	2350251	CallExpression	"UnparseAux ( buffer , expr , ref , absolute )"		2350161	0					
ANR	2350252	Callee	UnparseAux		2350161	0					
ANR	2350253	Identifier	UnparseAux		2350161	0					
ANR	2350254	ArgumentList	buffer		2350161	1					
ANR	2350255	Argument	buffer		2350161	0					
ANR	2350256	Identifier	buffer		2350161	0					
ANR	2350257	Argument	expr		2350161	1					
ANR	2350258	Identifier	expr		2350161	0					
ANR	2350259	Argument	ref		2350161	2					
ANR	2350260	Identifier	ref		2350161	0					
ANR	2350261	Argument	absolute		2350161	3					
ANR	2350262	Identifier	absolute		2350161	0					
ANR	2350263	ReturnStatement	return ;	277:3:6267:6273	2350161	5	True				
ANR	2350264	Label	case ExprTree :: OP_NODE :	280:2:6282:6304	2350161	4	True				
ANR	2350265	Identifier	ExprTree :: OP_NODE		2350161	0					
ANR	2350266	CompoundStatement		27:3:551:575	2350161	5					
ANR	2350267	IdentifierDeclStatement	Operation :: OpKind op ;	281:3:6311:6331	2350161	0	True				
ANR	2350268	IdentifierDecl	op		2350161	0					
ANR	2350269	IdentifierDeclType	Operation :: OpKind		2350161	0					
ANR	2350270	Identifier	op		2350161	1					
ANR	2350271	IdentifierDeclStatement	"ExprTree * t1 , * t2 , * t3 ;"	282:3:6336:6360	2350161	1	True				
ANR	2350272	IdentifierDecl	* t1		2350161	0					
ANR	2350273	IdentifierDeclType	ExprTree *		2350161	0					
ANR	2350274	Identifier	t1		2350161	1					
ANR	2350275	IdentifierDecl	* t2		2350161	1					
ANR	2350276	IdentifierDeclType	ExprTree *		2350161	0					
ANR	2350277	Identifier	t2		2350161	1					
ANR	2350278	IdentifierDecl	* t3		2350161	2					
ANR	2350279	IdentifierDeclType	ExprTree *		2350161	0					
ANR	2350280	Identifier	t3		2350161	1					
ANR	2350281	ExpressionStatement	"( ( Operation * ) tree ) -> GetComponents ( op , t1 , t2 , t3 )"	283:3:6365:6416	2350161	2	True				
ANR	2350282	CallExpression	"( ( Operation * ) tree ) -> GetComponents ( op , t1 , t2 , t3 )"		2350161	0					
ANR	2350283	Callee	( ( Operation * ) tree ) -> GetComponents		2350161	0					
ANR	2350284	PtrMemberAccess	( ( Operation * ) tree ) -> GetComponents		2350161	0					
ANR	2350285	CastExpression	( Operation * ) tree		2350161	0					
ANR	2350286	CastTarget	Operation *		2350161	0					
ANR	2350287	Identifier	tree		2350161	1					
ANR	2350288	Identifier	GetComponents		2350161	1					
ANR	2350289	ArgumentList	op		2350161	1					
ANR	2350290	Argument	op		2350161	0					
ANR	2350291	Identifier	op		2350161	0					
ANR	2350292	Argument	t1		2350161	1					
ANR	2350293	Identifier	t1		2350161	0					
ANR	2350294	Argument	t2		2350161	2					
ANR	2350295	Identifier	t2		2350161	0					
ANR	2350296	Argument	t3		2350161	3					
ANR	2350297	Identifier	t3		2350161	0					
ANR	2350298	ExpressionStatement	"UnparseAux ( buffer , op , t1 , t2 , t3 )"	284:3:6421:6457	2350161	3	True				
ANR	2350299	CallExpression	"UnparseAux ( buffer , op , t1 , t2 , t3 )"		2350161	0					
ANR	2350300	Callee	UnparseAux		2350161	0					
ANR	2350301	Identifier	UnparseAux		2350161	0					
ANR	2350302	ArgumentList	buffer		2350161	1					
ANR	2350303	Argument	buffer		2350161	0					
ANR	2350304	Identifier	buffer		2350161	0					
ANR	2350305	Argument	op		2350161	1					
ANR	2350306	Identifier	op		2350161	0					
ANR	2350307	Argument	t1		2350161	2					
ANR	2350308	Identifier	t1		2350161	0					
ANR	2350309	Argument	t2		2350161	3					
ANR	2350310	Identifier	t2		2350161	0					
ANR	2350311	Argument	t3		2350161	4					
ANR	2350312	Identifier	t3		2350161	0					
ANR	2350313	ReturnStatement	return ;	285:3:6462:6468	2350161	4	True				
ANR	2350314	Label	case ExprTree :: FN_CALL_NODE :	288:2:6477:6504	2350161	6	True				
ANR	2350315	Identifier	ExprTree :: FN_CALL_NODE		2350161	0					
ANR	2350316	CompoundStatement		35:3:748:770	2350161	7					
ANR	2350317	IdentifierDeclStatement	string fnName ;	289:3:6511:6528	2350161	0	True				
ANR	2350318	IdentifierDecl	fnName		2350161	0					
ANR	2350319	IdentifierDeclType	string		2350161	0					
ANR	2350320	Identifier	fnName		2350161	1					
ANR	2350321	IdentifierDeclStatement	vector < ExprTree * > args ;	290:3:6533:6555	2350161	1	True				
ANR	2350322	IdentifierDecl	args		2350161	0					
ANR	2350323	IdentifierDeclType	vector < ExprTree * >		2350161	0					
ANR	2350324	Identifier	args		2350161	1					
ANR	2350325	ExpressionStatement	"( ( FunctionCall * ) tree ) -> GetComponents ( fnName , args )"	291:3:6560:6612	2350161	2	True				
ANR	2350326	CallExpression	"( ( FunctionCall * ) tree ) -> GetComponents ( fnName , args )"		2350161	0					
ANR	2350327	Callee	( ( FunctionCall * ) tree ) -> GetComponents		2350161	0					
ANR	2350328	PtrMemberAccess	( ( FunctionCall * ) tree ) -> GetComponents		2350161	0					
ANR	2350329	CastExpression	( FunctionCall * ) tree		2350161	0					
ANR	2350330	CastTarget	FunctionCall *		2350161	0					
ANR	2350331	Identifier	tree		2350161	1					
ANR	2350332	Identifier	GetComponents		2350161	1					
ANR	2350333	ArgumentList	fnName		2350161	1					
ANR	2350334	Argument	fnName		2350161	0					
ANR	2350335	Identifier	fnName		2350161	0					
ANR	2350336	Argument	args		2350161	1					
ANR	2350337	Identifier	args		2350161	0					
ANR	2350338	ExpressionStatement	"UnparseAux ( buffer , fnName , args )"	292:3:6617:6651	2350161	3	True				
ANR	2350339	CallExpression	"UnparseAux ( buffer , fnName , args )"		2350161	0					
ANR	2350340	Callee	UnparseAux		2350161	0					
ANR	2350341	Identifier	UnparseAux		2350161	0					
ANR	2350342	ArgumentList	buffer		2350161	1					
ANR	2350343	Argument	buffer		2350161	0					
ANR	2350344	Identifier	buffer		2350161	0					
ANR	2350345	Argument	fnName		2350161	1					
ANR	2350346	Identifier	fnName		2350161	0					
ANR	2350347	Argument	args		2350161	2					
ANR	2350348	Identifier	args		2350161	0					
ANR	2350349	ReturnStatement	return ;	293:3:6656:6662	2350161	4	True				
ANR	2350350	Label	case ExprTree :: CLASSAD_NODE :	296:2:6671:6698	2350161	8	True				
ANR	2350351	Identifier	ExprTree :: CLASSAD_NODE		2350161	0					
ANR	2350352	CompoundStatement		42:3:920:959	2350161	9					
ANR	2350353	IdentifierDeclStatement	"vector < pair < string , ExprTree * > > attrs ;"	297:3:6705:6744	2350161	0	True				
ANR	2350354	IdentifierDecl	attrs		2350161	0					
ANR	2350355	IdentifierDeclType	"vector < pair < string , ExprTree * > >"		2350161	0					
ANR	2350356	Identifier	attrs		2350161	1					
ANR	2350357	ExpressionStatement	( ( ClassAd * ) tree ) -> GetComponents ( attrs )	298:3:6749:6789	2350161	1	True				
ANR	2350358	CallExpression	( ( ClassAd * ) tree ) -> GetComponents ( attrs )		2350161	0					
ANR	2350359	Callee	( ( ClassAd * ) tree ) -> GetComponents		2350161	0					
ANR	2350360	PtrMemberAccess	( ( ClassAd * ) tree ) -> GetComponents		2350161	0					
ANR	2350361	CastExpression	( ClassAd * ) tree		2350161	0					
ANR	2350362	CastTarget	ClassAd *		2350161	0					
ANR	2350363	Identifier	tree		2350161	1					
ANR	2350364	Identifier	GetComponents		2350161	1					
ANR	2350365	ArgumentList	attrs		2350161	1					
ANR	2350366	Argument	attrs		2350161	0					
ANR	2350367	Identifier	attrs		2350161	0					
ANR	2350368	ExpressionStatement	"UnparseAux ( buffer , attrs )"	299:3:6794:6821	2350161	2	True				
ANR	2350369	CallExpression	"UnparseAux ( buffer , attrs )"		2350161	0					
ANR	2350370	Callee	UnparseAux		2350161	0					
ANR	2350371	Identifier	UnparseAux		2350161	0					
ANR	2350372	ArgumentList	buffer		2350161	1					
ANR	2350373	Argument	buffer		2350161	0					
ANR	2350374	Identifier	buffer		2350161	0					
ANR	2350375	Argument	attrs		2350161	1					
ANR	2350376	Identifier	attrs		2350161	0					
ANR	2350377	ReturnStatement	return ;	300:3:6826:6832	2350161	3	True				
ANR	2350378	Label	case ExprTree :: EXPR_LIST_NODE :	303:2:6841:6870	2350161	10	True				
ANR	2350379	Identifier	ExprTree :: EXPR_LIST_NODE		2350161	0					
ANR	2350380	CompoundStatement		49:3:1092:1115	2350161	11					
ANR	2350381	IdentifierDeclStatement	vector < ExprTree * > exprs ;	304:3:6877:6900	2350161	0	True				
ANR	2350382	IdentifierDecl	exprs		2350161	0					
ANR	2350383	IdentifierDeclType	vector < ExprTree * >		2350161	0					
ANR	2350384	Identifier	exprs		2350161	1					
ANR	2350385	ExpressionStatement	( ( ExprList * ) tree ) -> GetComponents ( exprs )	305:3:6905:6946	2350161	1	True				
ANR	2350386	CallExpression	( ( ExprList * ) tree ) -> GetComponents ( exprs )		2350161	0					
ANR	2350387	Callee	( ( ExprList * ) tree ) -> GetComponents		2350161	0					
ANR	2350388	PtrMemberAccess	( ( ExprList * ) tree ) -> GetComponents		2350161	0					
ANR	2350389	CastExpression	( ExprList * ) tree		2350161	0					
ANR	2350390	CastTarget	ExprList *		2350161	0					
ANR	2350391	Identifier	tree		2350161	1					
ANR	2350392	Identifier	GetComponents		2350161	1					
ANR	2350393	ArgumentList	exprs		2350161	1					
ANR	2350394	Argument	exprs		2350161	0					
ANR	2350395	Identifier	exprs		2350161	0					
ANR	2350396	ExpressionStatement	"UnparseAux ( buffer , exprs )"	306:3:6951:6978	2350161	2	True				
ANR	2350397	CallExpression	"UnparseAux ( buffer , exprs )"		2350161	0					
ANR	2350398	Callee	UnparseAux		2350161	0					
ANR	2350399	Identifier	UnparseAux		2350161	0					
ANR	2350400	ArgumentList	buffer		2350161	1					
ANR	2350401	Argument	buffer		2350161	0					
ANR	2350402	Identifier	buffer		2350161	0					
ANR	2350403	Argument	exprs		2350161	1					
ANR	2350404	Identifier	exprs		2350161	0					
ANR	2350405	ReturnStatement	return ;	307:3:6983:6989	2350161	3	True				
ANR	2350406	Label	default :	310:2:6998:7005	2350161	12	True				
ANR	2350407	Identifier	default		2350161	0					
ANR	2350408	ExpressionStatement	"buffer = """""	314:3:7155:7166	2350161	13	True				
ANR	2350409	AssignmentExpression	"buffer = """""		2350161	0		=			
ANR	2350410	Identifier	buffer		2350161	0					
ANR	2350411	PrimaryExpression	""""""		2350161	1					
ANR	2350412	ExpressionStatement	CondorErrno = ERR_BAD_EXPRESSION	315:3:7171:7203	2350161	14	True				
ANR	2350413	AssignmentExpression	CondorErrno = ERR_BAD_EXPRESSION		2350161	0		=			
ANR	2350414	Identifier	CondorErrno		2350161	0					
ANR	2350415	Identifier	ERR_BAD_EXPRESSION		2350161	1					
ANR	2350416	ExpressionStatement	"CondorErrMsg = ""unknown expression type"""	316:3:7208:7248	2350161	15	True				
ANR	2350417	AssignmentExpression	"CondorErrMsg = ""unknown expression type"""		2350161	0		=			
ANR	2350418	Identifier	CondorErrMsg		2350161	0					
ANR	2350419	PrimaryExpression	"""unknown expression type"""		2350161	1					
ANR	2350420	ReturnStatement	return ;	317:3:7253:7259	2350161	16	True				
ANR	2350421	ReturnType	void		2350161	1					
ANR	2350422	Identifier	ClassAdUnParser :: Unparse		2350161	2					
ANR	2350423	ParameterList	"string & buffer , const ExprTree * tree"		2350161	3					
ANR	2350424	Parameter	string & buffer	255:9:5745:5758	2350161	0	True				
ANR	2350425	ParameterType	string &		2350161	0					
ANR	2350426	Identifier	buffer		2350161	1					
ANR	2350427	Parameter	const ExprTree * tree	255:25:5761:5780	2350161	1	True				
ANR	2350428	ParameterType	const ExprTree *		2350161	0					
ANR	2350429	Identifier	tree		2350161	1					
ANR	2350430	CFGEntryNode	ENTRY		2350161		True				
ANR	2350431	CFGExitNode	EXIT		2350161		True				
ANR	2350432	Symbol	val		2350161						
ANR	2350433	Symbol	op		2350161						
ANR	2350434	Symbol	tree		2350161						
ANR	2350435	Symbol	ERR_BAD_EXPRESSION		2350161						
ANR	2350436	Symbol	attrs		2350161						
ANR	2350437	Symbol	CondorErrno		2350161						
ANR	2350438	Symbol	* tree		2350161						
ANR	2350439	Symbol	args		2350161						
ANR	2350440	Symbol	ref		2350161						
ANR	2350441	Symbol	fnName		2350161						
ANR	2350442	Symbol	tree -> GetKind		2350161						
ANR	2350443	Symbol	CondorErrMsg		2350161						
ANR	2350444	Symbol	absolute		2350161						
ANR	2350445	Symbol	exprs		2350161						
ANR	2350446	Symbol	expr		2350161						
ANR	2350447	Symbol	buffer		2350161						
ANR	2350448	Symbol	factor		2350161						
ANR	2350449	Symbol	t1		2350161						
ANR	2350450	Symbol	t2		2350161						
ANR	2350451	Symbol	t3		2350161						
ANR	2350452	Function	ClassAdUnParser :: UnparseAux	323:0:7273:7684							
ANR	2350453	FunctionDef	"ClassAdUnParser :: UnparseAux (string & buffer , const Value & val , Value :: NumberFactor factor)"		2350452	0					
ANR	2350454	CompoundStatement		325:0:7371:7684	2350452	0					
ANR	2350455	ExpressionStatement	"Unparse ( buffer , val )"	326:1:7374:7396	2350452	0	True				
ANR	2350456	CallExpression	"Unparse ( buffer , val )"		2350452	0					
ANR	2350457	Callee	Unparse		2350452	0					
ANR	2350458	Identifier	Unparse		2350452	0					
ANR	2350459	ArgumentList	buffer		2350452	1					
ANR	2350460	Argument	buffer		2350452	0					
ANR	2350461	Identifier	buffer		2350452	0					
ANR	2350462	Argument	val		2350452	1					
ANR	2350463	Identifier	val		2350452	0					
ANR	2350464	IfStatement	if ( val . IsNumber ( ) && factor != Value :: NO_FACTOR )		2350452	1					
ANR	2350465	Condition	val . IsNumber ( ) && factor != Value :: NO_FACTOR	327:5:7403:7447	2350452	0	True				
ANR	2350466	AndExpression	val . IsNumber ( ) && factor != Value :: NO_FACTOR		2350452	0		&&			
ANR	2350467	CallExpression	val . IsNumber ( )		2350452	0					
ANR	2350468	Callee	val . IsNumber		2350452	0					
ANR	2350469	MemberAccess	val . IsNumber		2350452	0					
ANR	2350470	Identifier	val		2350452	0					
ANR	2350471	Identifier	IsNumber		2350452	1					
ANR	2350472	ArgumentList			2350452	1					
ANR	2350473	EqualityExpression	factor != Value :: NO_FACTOR		2350452	1		!=			
ANR	2350474	Identifier	factor		2350452	0					
ANR	2350475	Identifier	Value :: NO_FACTOR		2350452	1					
ANR	2350476	CompoundStatement		3:53:79:79	2350452	1					
ANR	2350477	ExpressionStatement	"buffer += ( factor == Value :: B_FACTOR ) ? ""B"" : ( factor == Value :: K_FACTOR ) ? ""K"" : ( factor == Value :: M_FACTOR ) ? ""M"" : ( factor == Value :: G_FACTOR ) ? ""G"" : ( factor == Value :: T_FACTOR ) ? ""T"" : ""<error:bad factor>"""	328:2:7455:7670	2350452	0	True				
ANR	2350478	AssignmentExpression	"buffer += ( factor == Value :: B_FACTOR ) ? ""B"" : ( factor == Value :: K_FACTOR ) ? ""K"" : ( factor == Value :: M_FACTOR ) ? ""M"" : ( factor == Value :: G_FACTOR ) ? ""G"" : ( factor == Value :: T_FACTOR ) ? ""T"" : ""<error:bad factor>"""		2350452	0		+=			
ANR	2350479	Identifier	buffer		2350452	0					
ANR	2350480	ConditionalExpression	"( factor == Value :: B_FACTOR ) ? ""B"" : ( factor == Value :: K_FACTOR ) ? ""K"" : ( factor == Value :: M_FACTOR ) ? ""M"" : ( factor == Value :: G_FACTOR ) ? ""G"" : ( factor == Value :: T_FACTOR ) ? ""T"" : ""<error:bad factor>"""		2350452	1					
ANR	2350481	Condition	factor == Value :: B_FACTOR		2350452	0					
ANR	2350482	EqualityExpression	factor == Value :: B_FACTOR		2350452	0		==			
ANR	2350483	Identifier	factor		2350452	0					
ANR	2350484	Identifier	Value :: B_FACTOR		2350452	1					
ANR	2350485	PrimaryExpression	"""B"""		2350452	1					
ANR	2350486	ConditionalExpression	"( factor == Value :: K_FACTOR ) ? ""K"" : ( factor == Value :: M_FACTOR ) ? ""M"" : ( factor == Value :: G_FACTOR ) ? ""G"" : ( factor == Value :: T_FACTOR ) ? ""T"" : ""<error:bad factor>"""		2350452	2					
ANR	2350487	Condition	factor == Value :: K_FACTOR		2350452	0					
ANR	2350488	EqualityExpression	factor == Value :: K_FACTOR		2350452	0		==			
ANR	2350489	Identifier	factor		2350452	0					
ANR	2350490	Identifier	Value :: K_FACTOR		2350452	1					
ANR	2350491	PrimaryExpression	"""K"""		2350452	1					
ANR	2350492	ConditionalExpression	"( factor == Value :: M_FACTOR ) ? ""M"" : ( factor == Value :: G_FACTOR ) ? ""G"" : ( factor == Value :: T_FACTOR ) ? ""T"" : ""<error:bad factor>"""		2350452	2					
ANR	2350493	Condition	factor == Value :: M_FACTOR		2350452	0					
ANR	2350494	EqualityExpression	factor == Value :: M_FACTOR		2350452	0		==			
ANR	2350495	Identifier	factor		2350452	0					
ANR	2350496	Identifier	Value :: M_FACTOR		2350452	1					
ANR	2350497	PrimaryExpression	"""M"""		2350452	1					
ANR	2350498	ConditionalExpression	"( factor == Value :: G_FACTOR ) ? ""G"" : ( factor == Value :: T_FACTOR ) ? ""T"" : ""<error:bad factor>"""		2350452	2					
ANR	2350499	Condition	factor == Value :: G_FACTOR		2350452	0					
ANR	2350500	EqualityExpression	factor == Value :: G_FACTOR		2350452	0		==			
ANR	2350501	Identifier	factor		2350452	0					
ANR	2350502	Identifier	Value :: G_FACTOR		2350452	1					
ANR	2350503	PrimaryExpression	"""G"""		2350452	1					
ANR	2350504	ConditionalExpression	"( factor == Value :: T_FACTOR ) ? ""T"" : ""<error:bad factor>"""		2350452	2					
ANR	2350505	Condition	factor == Value :: T_FACTOR		2350452	0					
ANR	2350506	EqualityExpression	factor == Value :: T_FACTOR		2350452	0		==			
ANR	2350507	Identifier	factor		2350452	0					
ANR	2350508	Identifier	Value :: T_FACTOR		2350452	1					
ANR	2350509	PrimaryExpression	"""T"""		2350452	1					
ANR	2350510	PrimaryExpression	"""<error:bad factor>"""		2350452	2					
ANR	2350511	ReturnStatement	return ;	335:1:7676:7682	2350452	2	True				
ANR	2350512	ReturnType	void		2350452	1					
ANR	2350513	Identifier	ClassAdUnParser :: UnparseAux		2350452	2					
ANR	2350514	ParameterList	"string & buffer , const Value & val , Value :: NumberFactor factor"		2350452	3					
ANR	2350515	Parameter	string & buffer	324:12:7308:7321	2350452	0	True				
ANR	2350516	ParameterType	string &		2350452	0					
ANR	2350517	Identifier	buffer		2350452	1					
ANR	2350518	Parameter	const Value & val	324:28:7324:7339	2350452	1	True				
ANR	2350519	ParameterType	const Value &		2350452	0					
ANR	2350520	Identifier	val		2350452	1					
ANR	2350521	Parameter	Value :: NumberFactor factor	324:46:7342:7367	2350452	2	True				
ANR	2350522	ParameterType	Value :: NumberFactor		2350452	0					
ANR	2350523	Identifier	factor		2350452	1					
ANR	2350524	CFGEntryNode	ENTRY		2350452		True				
ANR	2350525	CFGExitNode	EXIT		2350452		True				
ANR	2350526	Symbol	val		2350452						
ANR	2350527	Symbol	Value :: NO_FACTOR		2350452						
ANR	2350528	Symbol	buffer		2350452						
ANR	2350529	Symbol	factor		2350452						
ANR	2350530	Symbol	val . IsNumber		2350452						
ANR	2350531	Symbol	Value :: B_FACTOR		2350452						
ANR	2350532	Symbol	Value :: T_FACTOR		2350452						
ANR	2350533	Symbol	Value :: K_FACTOR		2350452						
ANR	2350534	Symbol	Value :: G_FACTOR		2350452						
ANR	2350535	Symbol	Value :: M_FACTOR		2350452						
ANR	2350536	Function	ClassAdUnParser :: UnparseAux	338:0:7687:7939							
ANR	2350537	FunctionDef	"ClassAdUnParser :: UnparseAux (string & buffer , const ExprTree * expr , string & attrName , bool absolute)"		2350536	0					
ANR	2350538	CompoundStatement		340:0:7794:7939	2350536	0					
ANR	2350539	IfStatement	if ( expr )		2350536	0					
ANR	2350540	Condition	expr	341:5:7801:7804	2350536	0	True				
ANR	2350541	Identifier	expr		2350536	0					
ANR	2350542	CompoundStatement		2:12:13:13	2350536	1					
ANR	2350543	ExpressionStatement	"Unparse ( buffer , expr )"	342:2:7812:7835	2350536	0	True				
ANR	2350544	CallExpression	"Unparse ( buffer , expr )"		2350536	0					
ANR	2350545	Callee	Unparse		2350536	0					
ANR	2350546	Identifier	Unparse		2350536	0					
ANR	2350547	ArgumentList	buffer		2350536	1					
ANR	2350548	Argument	buffer		2350536	0					
ANR	2350549	Identifier	buffer		2350536	0					
ANR	2350550	Argument	expr		2350536	1					
ANR	2350551	Identifier	expr		2350536	0					
ANR	2350552	ExpressionStatement	"buffer += ""."" + attrName"	343:2:7839:7863	2350536	1	True				
ANR	2350553	AssignmentExpression	"buffer += ""."" + attrName"		2350536	0		+=			
ANR	2350554	Identifier	buffer		2350536	0					
ANR	2350555	AdditiveExpression	"""."" + attrName"		2350536	1		+			
ANR	2350556	PrimaryExpression	"""."""		2350536	0					
ANR	2350557	Identifier	attrName		2350536	1					
ANR	2350558	ReturnStatement	return ;	344:2:7867:7873	2350536	2	True				
ANR	2350559	IfStatement	if ( absolute )		2350536	1					
ANR	2350560	Condition	absolute	346:5:7883:7890	2350536	0	True				
ANR	2350561	Identifier	absolute		2350536	0					
ANR	2350562	ExpressionStatement	"buffer += ""."""	346:16:7894:7907	2350536	1	True				
ANR	2350563	AssignmentExpression	"buffer += ""."""		2350536	0		+=			
ANR	2350564	Identifier	buffer		2350536	0					
ANR	2350565	PrimaryExpression	"""."""		2350536	1					
ANR	2350566	ExpressionStatement	"UnparseAux ( buffer , attrName )"	347:1:7910:7937	2350536	2	True				
ANR	2350567	CallExpression	"UnparseAux ( buffer , attrName )"		2350536	0					
ANR	2350568	Callee	UnparseAux		2350536	0					
ANR	2350569	Identifier	UnparseAux		2350536	0					
ANR	2350570	ArgumentList	buffer		2350536	1					
ANR	2350571	Argument	buffer		2350536	0					
ANR	2350572	Identifier	buffer		2350536	0					
ANR	2350573	Argument	attrName		2350536	1					
ANR	2350574	Identifier	attrName		2350536	0					
ANR	2350575	ReturnType	void		2350536	1					
ANR	2350576	Identifier	ClassAdUnParser :: UnparseAux		2350536	2					
ANR	2350577	ParameterList	"string & buffer , const ExprTree * expr , string & attrName , bool absolute"		2350536	3					
ANR	2350578	Parameter	string & buffer	339:12:7722:7735	2350536	0	True				
ANR	2350579	ParameterType	string &		2350536	0					
ANR	2350580	Identifier	buffer		2350536	1					
ANR	2350581	Parameter	const ExprTree * expr	339:28:7738:7757	2350536	1	True				
ANR	2350582	ParameterType	const ExprTree *		2350536	0					
ANR	2350583	Identifier	expr		2350536	1					
ANR	2350584	Parameter	string & attrName	339:50:7760:7775	2350536	2	True				
ANR	2350585	ParameterType	string &		2350536	0					
ANR	2350586	Identifier	attrName		2350536	1					
ANR	2350587	Parameter	bool absolute	339:68:7778:7790	2350536	3	True				
ANR	2350588	ParameterType	bool		2350536	0					
ANR	2350589	Identifier	absolute		2350536	1					
ANR	2350590	CFGEntryNode	ENTRY		2350536		True				
ANR	2350591	CFGExitNode	EXIT		2350536		True				
ANR	2350592	Symbol	absolute		2350536						
ANR	2350593	Symbol	expr		2350536						
ANR	2350594	Symbol	buffer		2350536						
ANR	2350595	Symbol	attrName		2350536						
ANR	2350596	Function	ClassAdUnParser :: UnparseAux	350:0:7942:9571							
ANR	2350597	FunctionDef	"ClassAdUnParser :: UnparseAux (string & buffer , Operation :: OpKind op , ExprTree * t1 , ExprTree * t2 , ExprTree * t3)"		2350596	0					
ANR	2350598	CompoundStatement		353:0:8058:9571	2350596	0					
ANR	2350599	IfStatement	if ( op == Operation :: PARENTHESES_OP )		2350596	0					
ANR	2350600	Condition	op == Operation :: PARENTHESES_OP	355:5:8093:8121	2350596	0	True				
ANR	2350601	EqualityExpression	op == Operation :: PARENTHESES_OP		2350596	0		==			
ANR	2350602	Identifier	op		2350596	0					
ANR	2350603	Identifier	Operation :: PARENTHESES_OP		2350596	1					
ANR	2350604	CompoundStatement		3:37:66:66	2350596	1					
ANR	2350605	ExpressionStatement	"buffer += ""( """	356:2:8129:8143	2350596	0	True				
ANR	2350606	AssignmentExpression	"buffer += ""( """		2350596	0		+=			
ANR	2350607	Identifier	buffer		2350596	0					
ANR	2350608	PrimaryExpression	"""( """		2350596	1					
ANR	2350609	ExpressionStatement	"Unparse ( buffer , t1 )"	357:2:8147:8168	2350596	1	True				
ANR	2350610	CallExpression	"Unparse ( buffer , t1 )"		2350596	0					
ANR	2350611	Callee	Unparse		2350596	0					
ANR	2350612	Identifier	Unparse		2350596	0					
ANR	2350613	ArgumentList	buffer		2350596	1					
ANR	2350614	Argument	buffer		2350596	0					
ANR	2350615	Identifier	buffer		2350596	0					
ANR	2350616	Argument	t1		2350596	1					
ANR	2350617	Identifier	t1		2350596	0					
ANR	2350618	ExpressionStatement	"buffer += "" )"""	358:2:8172:8186	2350596	2	True				
ANR	2350619	AssignmentExpression	"buffer += "" )"""		2350596	0		+=			
ANR	2350620	Identifier	buffer		2350596	0					
ANR	2350621	PrimaryExpression	""" )"""		2350596	1					
ANR	2350622	ReturnStatement	return ;	359:2:8190:8196	2350596	3	True				
ANR	2350623	IfStatement	if ( op == Operation :: UNARY_PLUS_OP || op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP )		2350596	1					
ANR	2350624	Condition	op == Operation :: UNARY_PLUS_OP || op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP	362:5:8239:8369	2350596	0	True				
ANR	2350625	OrExpression	op == Operation :: UNARY_PLUS_OP || op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP		2350596	0		||			
ANR	2350626	EqualityExpression	op == Operation :: UNARY_PLUS_OP		2350596	0		==			
ANR	2350627	Identifier	op		2350596	0					
ANR	2350628	Identifier	Operation :: UNARY_PLUS_OP		2350596	1					
ANR	2350629	OrExpression	op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP		2350596	1		||			
ANR	2350630	EqualityExpression	op == Operation :: UNARY_MINUS_OP		2350596	0		==			
ANR	2350631	Identifier	op		2350596	0					
ANR	2350632	Identifier	Operation :: UNARY_MINUS_OP		2350596	1					
ANR	2350633	OrExpression	op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP		2350596	1		||			
ANR	2350634	EqualityExpression	op == Operation :: LOGICAL_NOT_OP		2350596	0		==			
ANR	2350635	Identifier	op		2350596	0					
ANR	2350636	Identifier	Operation :: LOGICAL_NOT_OP		2350596	1					
ANR	2350637	EqualityExpression	op == Operation :: BITWISE_NOT_OP		2350596	1		==			
ANR	2350638	Identifier	op		2350596	0					
ANR	2350639	Identifier	Operation :: BITWISE_NOT_OP		2350596	1					
ANR	2350640	CompoundStatement		11:68:314:314	2350596	1					
ANR	2350641	ExpressionStatement	buffer += opString [ op ]	364:2:8377:8399	2350596	0	True				
ANR	2350642	AssignmentExpression	buffer += opString [ op ]		2350596	0		+=			
ANR	2350643	Identifier	buffer		2350596	0					
ANR	2350644	ArrayIndexing	opString [ op ]		2350596	1					
ANR	2350645	Identifier	opString		2350596	0					
ANR	2350646	Identifier	op		2350596	1					
ANR	2350647	ExpressionStatement	"Unparse ( buffer , t1 )"	365:2:8403:8424	2350596	1	True				
ANR	2350648	CallExpression	"Unparse ( buffer , t1 )"		2350596	0					
ANR	2350649	Callee	Unparse		2350596	0					
ANR	2350650	Identifier	Unparse		2350596	0					
ANR	2350651	ArgumentList	buffer		2350596	1					
ANR	2350652	Argument	buffer		2350596	0					
ANR	2350653	Identifier	buffer		2350596	0					
ANR	2350654	Argument	t1		2350596	1					
ANR	2350655	Identifier	t1		2350596	0					
ANR	2350656	ReturnStatement	return ;	366:2:8428:8434	2350596	2	True				
ANR	2350657	IfStatement	if ( op == Operation :: TERNARY_OP )		2350596	2					
ANR	2350658	Condition	op == Operation :: TERNARY_OP	369:5:8478:8502	2350596	0	True				
ANR	2350659	EqualityExpression	op == Operation :: TERNARY_OP		2350596	0		==			
ANR	2350660	Identifier	op		2350596	0					
ANR	2350661	Identifier	Operation :: TERNARY_OP		2350596	1					
ANR	2350662	CompoundStatement		17:33:447:447	2350596	1					
ANR	2350663	ExpressionStatement	"Unparse ( buffer , t1 )"	370:2:8510:8531	2350596	0	True				
ANR	2350664	CallExpression	"Unparse ( buffer , t1 )"		2350596	0					
ANR	2350665	Callee	Unparse		2350596	0					
ANR	2350666	Identifier	Unparse		2350596	0					
ANR	2350667	ArgumentList	buffer		2350596	1					
ANR	2350668	Argument	buffer		2350596	0					
ANR	2350669	Identifier	buffer		2350596	0					
ANR	2350670	Argument	t1		2350596	1					
ANR	2350671	Identifier	t1		2350596	0					
ANR	2350672	ExpressionStatement	"buffer += "" ? """	371:2:8535:8550	2350596	1	True				
ANR	2350673	AssignmentExpression	"buffer += "" ? """		2350596	0		+=			
ANR	2350674	Identifier	buffer		2350596	0					
ANR	2350675	PrimaryExpression	""" ? """		2350596	1					
ANR	2350676	ExpressionStatement	"Unparse ( buffer , t2 )"	372:2:8554:8575	2350596	2	True				
ANR	2350677	CallExpression	"Unparse ( buffer , t2 )"		2350596	0					
ANR	2350678	Callee	Unparse		2350596	0					
ANR	2350679	Identifier	Unparse		2350596	0					
ANR	2350680	ArgumentList	buffer		2350596	1					
ANR	2350681	Argument	buffer		2350596	0					
ANR	2350682	Identifier	buffer		2350596	0					
ANR	2350683	Argument	t2		2350596	1					
ANR	2350684	Identifier	t2		2350596	0					
ANR	2350685	ExpressionStatement	"buffer += "" : """	373:2:8579:8594	2350596	3	True				
ANR	2350686	AssignmentExpression	"buffer += "" : """		2350596	0		+=			
ANR	2350687	Identifier	buffer		2350596	0					
ANR	2350688	PrimaryExpression	""" : """		2350596	1					
ANR	2350689	ExpressionStatement	"Unparse ( buffer , t3 )"	374:2:8598:8619	2350596	4	True				
ANR	2350690	CallExpression	"Unparse ( buffer , t3 )"		2350596	0					
ANR	2350691	Callee	Unparse		2350596	0					
ANR	2350692	Identifier	Unparse		2350596	0					
ANR	2350693	ArgumentList	buffer		2350596	1					
ANR	2350694	Argument	buffer		2350596	0					
ANR	2350695	Identifier	buffer		2350596	0					
ANR	2350696	Argument	t3		2350596	1					
ANR	2350697	Identifier	t3		2350596	0					
ANR	2350698	ReturnStatement	return ;	375:2:8623:8629	2350596	5	True				
ANR	2350699	IfStatement	if ( op == Operation :: SUBSCRIPT_OP )		2350596	3					
ANR	2350700	Condition	op == Operation :: SUBSCRIPT_OP	378:5:8675:8701	2350596	0	True				
ANR	2350701	EqualityExpression	op == Operation :: SUBSCRIPT_OP		2350596	0		==			
ANR	2350702	Identifier	op		2350596	0					
ANR	2350703	Identifier	Operation :: SUBSCRIPT_OP		2350596	1					
ANR	2350704	CompoundStatement		26:35:646:646	2350596	1					
ANR	2350705	ExpressionStatement	"Unparse ( buffer , t1 )"	379:2:8709:8730	2350596	0	True				
ANR	2350706	CallExpression	"Unparse ( buffer , t1 )"		2350596	0					
ANR	2350707	Callee	Unparse		2350596	0					
ANR	2350708	Identifier	Unparse		2350596	0					
ANR	2350709	ArgumentList	buffer		2350596	1					
ANR	2350710	Argument	buffer		2350596	0					
ANR	2350711	Identifier	buffer		2350596	0					
ANR	2350712	Argument	t1		2350596	1					
ANR	2350713	Identifier	t1		2350596	0					
ANR	2350714	ExpressionStatement	buffer += '['	380:2:8734:8747	2350596	1	True				
ANR	2350715	AssignmentExpression	buffer += '['		2350596	0		+=			
ANR	2350716	Identifier	buffer		2350596	0					
ANR	2350717	PrimaryExpression	'['		2350596	1					
ANR	2350718	ExpressionStatement	"Unparse ( buffer , t2 )"	381:2:8751:8772	2350596	2	True				
ANR	2350719	CallExpression	"Unparse ( buffer , t2 )"		2350596	0					
ANR	2350720	Callee	Unparse		2350596	0					
ANR	2350721	Identifier	Unparse		2350596	0					
ANR	2350722	ArgumentList	buffer		2350596	1					
ANR	2350723	Argument	buffer		2350596	0					
ANR	2350724	Identifier	buffer		2350596	0					
ANR	2350725	Argument	t2		2350596	1					
ANR	2350726	Identifier	t2		2350596	0					
ANR	2350727	ExpressionStatement	buffer += ']'	382:2:8776:8789	2350596	3	True				
ANR	2350728	AssignmentExpression	buffer += ']'		2350596	0		+=			
ANR	2350729	Identifier	buffer		2350596	0					
ANR	2350730	PrimaryExpression	']'		2350596	1					
ANR	2350731	ReturnStatement	return ;	383:2:8793:8799	2350596	4	True				
ANR	2350732	IfStatement	if ( oldClassAd )		2350596	4					
ANR	2350733	Condition	oldClassAd	387:5:8845:8854	2350596	0	True				
ANR	2350734	Identifier	oldClassAd		2350596	0					
ANR	2350735	CompoundStatement		35:18:799:799	2350596	1					
ANR	2350736	ExpressionStatement	"Unparse ( buffer , t1 )"	388:2:8862:8883	2350596	0	True				
ANR	2350737	CallExpression	"Unparse ( buffer , t1 )"		2350596	0					
ANR	2350738	Callee	Unparse		2350596	0					
ANR	2350739	Identifier	Unparse		2350596	0					
ANR	2350740	ArgumentList	buffer		2350596	1					
ANR	2350741	Argument	buffer		2350596	0					
ANR	2350742	Identifier	buffer		2350596	0					
ANR	2350743	Argument	t1		2350596	1					
ANR	2350744	Identifier	t1		2350596	0					
ANR	2350745	IfStatement	if ( op == Operation :: META_EQUAL_OP )		2350596	1					
ANR	2350746	Condition	op == Operation :: META_EQUAL_OP	389:6:8891:8918	2350596	0	True				
ANR	2350747	EqualityExpression	op == Operation :: META_EQUAL_OP		2350596	0		==			
ANR	2350748	Identifier	op		2350596	0					
ANR	2350749	Identifier	Operation :: META_EQUAL_OP		2350596	1					
ANR	2350750	CompoundStatement		37:37:863:863	2350596	1					
ANR	2350751	ExpressionStatement	"buffer += "" =?= """	390:3:8927:8944	2350596	0	True				
ANR	2350752	AssignmentExpression	"buffer += "" =?= """		2350596	0		+=			
ANR	2350753	Identifier	buffer		2350596	0					
ANR	2350754	PrimaryExpression	""" =?= """		2350596	1					
ANR	2350755	ElseStatement	else		2350596	0					
ANR	2350756	IfStatement	if ( op == Operation :: META_NOT_EQUAL_OP )		2350596	0					
ANR	2350757	Condition	op == Operation :: META_NOT_EQUAL_OP	392:11:8961:8992	2350596	0	True				
ANR	2350758	EqualityExpression	op == Operation :: META_NOT_EQUAL_OP		2350596	0		==			
ANR	2350759	Identifier	op		2350596	0					
ANR	2350760	Identifier	Operation :: META_NOT_EQUAL_OP		2350596	1					
ANR	2350761	CompoundStatement		40:46:937:937	2350596	1					
ANR	2350762	ExpressionStatement	"buffer += "" =!= """	393:3:9001:9018	2350596	0	True				
ANR	2350763	AssignmentExpression	"buffer += "" =!= """		2350596	0		+=			
ANR	2350764	Identifier	buffer		2350596	0					
ANR	2350765	PrimaryExpression	""" =!= """		2350596	1					
ANR	2350766	ElseStatement	else		2350596	0					
ANR	2350767	CompoundStatement		43:7:972:972	2350596	0					
ANR	2350768	ExpressionStatement	buffer += opString [ op ]	396:3:9036:9058	2350596	0	True				
ANR	2350769	AssignmentExpression	buffer += opString [ op ]		2350596	0		+=			
ANR	2350770	Identifier	buffer		2350596	0					
ANR	2350771	ArrayIndexing	opString [ op ]		2350596	1					
ANR	2350772	Identifier	opString		2350596	0					
ANR	2350773	Identifier	op		2350596	1					
ANR	2350774	ExpressionStatement	"Unparse ( buffer , t2 )"	398:2:9066:9087	2350596	2	True				
ANR	2350775	CallExpression	"Unparse ( buffer , t2 )"		2350596	0					
ANR	2350776	Callee	Unparse		2350596	0					
ANR	2350777	Identifier	Unparse		2350596	0					
ANR	2350778	ArgumentList	buffer		2350596	1					
ANR	2350779	Argument	buffer		2350596	0					
ANR	2350780	Identifier	buffer		2350596	0					
ANR	2350781	Argument	t2		2350596	1					
ANR	2350782	Identifier	t2		2350596	0					
ANR	2350783	ReturnStatement	return ;	399:2:9091:9097	2350596	3	True				
ANR	2350784	ExpressionStatement	"Unparse ( buffer , t1 )"	403:1:9135:9156	2350596	5	True				
ANR	2350785	CallExpression	"Unparse ( buffer , t1 )"		2350596	0					
ANR	2350786	Callee	Unparse		2350596	0					
ANR	2350787	Identifier	Unparse		2350596	0					
ANR	2350788	ArgumentList	buffer		2350596	1					
ANR	2350789	Argument	buffer		2350596	0					
ANR	2350790	Identifier	buffer		2350596	0					
ANR	2350791	Argument	t1		2350596	1					
ANR	2350792	Identifier	t1		2350596	0					
ANR	2350793	IfStatement	if ( ! xmlUnparse )		2350596	6					
ANR	2350794	Condition	! xmlUnparse	404:5:9163:9173	2350596	0	True				
ANR	2350795	UnaryOperationExpression	! xmlUnparse		2350596	0					
ANR	2350796	UnaryOperator	!		2350596	0					
ANR	2350797	Identifier	xmlUnparse		2350596	1					
ANR	2350798	CompoundStatement		52:18:1117:1117	2350596	1					
ANR	2350799	ExpressionStatement	buffer += opString [ op ]	405:2:9180:9202	2350596	0	True				
ANR	2350800	AssignmentExpression	buffer += opString [ op ]		2350596	0		+=			
ANR	2350801	Identifier	buffer		2350596	0					
ANR	2350802	ArrayIndexing	opString [ op ]		2350596	1					
ANR	2350803	Identifier	opString		2350596	0					
ANR	2350804	Identifier	op		2350596	1					
ANR	2350805	ElseStatement	else		2350596	0					
ANR	2350806	CompoundStatement		56:2:1196:1229	2350596	0					
ANR	2350807	IdentifierDeclStatement	const char * opstring = opString [ op ] ;	407:2:9216:9251	2350596	0	True				
ANR	2350808	IdentifierDecl	* opstring = opString [ op ]		2350596	0					
ANR	2350809	IdentifierDeclType	const char *		2350596	0					
ANR	2350810	Identifier	opstring		2350596	1					
ANR	2350811	AssignmentExpression	* opstring = opString [ op ]		2350596	2		=			
ANR	2350812	Identifier	opstring		2350596	0					
ANR	2350813	ArrayIndexing	opString [ op ]		2350596	1					
ANR	2350814	Identifier	opString		2350596	0					
ANR	2350815	Identifier	op		2350596	1					
ANR	2350816	IdentifierDeclStatement	int length = strlen ( opstring ) ;	408:2:9255:9288	2350596	1	True				
ANR	2350817	IdentifierDecl	length = strlen ( opstring )		2350596	0					
ANR	2350818	IdentifierDeclType	int		2350596	0					
ANR	2350819	Identifier	length		2350596	1					
ANR	2350820	AssignmentExpression	length = strlen ( opstring )		2350596	2		=			
ANR	2350821	Identifier	length		2350596	0					
ANR	2350822	CallExpression	strlen ( opstring )		2350596	1					
ANR	2350823	Callee	strlen		2350596	0					
ANR	2350824	Identifier	strlen		2350596	0					
ANR	2350825	ArgumentList	opstring		2350596	1					
ANR	2350826	Argument	opstring		2350596	0					
ANR	2350827	Identifier	opstring		2350596	0					
ANR	2350828	ForStatement	for ( int i = 0 ; i < length ; i ++ )		2350596	2					
ANR	2350829	ForInit	int i = 0 ;	409:6:9296:9305	2350596	0	True				
ANR	2350830	IdentifierDeclStatement	int i = 0 ;		2350596	0					
ANR	2350831	IdentifierDecl	i = 0		2350596	0					
ANR	2350832	IdentifierDeclType	int		2350596	0					
ANR	2350833	Identifier	i		2350596	1					
ANR	2350834	AssignmentExpression	i = 0		2350596	2		=			
ANR	2350835	Identifier	i		2350596	0					
ANR	2350836	PrimaryExpression	0		2350596	1					
ANR	2350837	Condition	i < length	409:17:9307:9316	2350596	1	True				
ANR	2350838	RelationalExpression	i < length		2350596	0		<			
ANR	2350839	Identifier	i		2350596	0					
ANR	2350840	Identifier	length		2350596	1					
ANR	2350841	PostIncDecOperationExpression	i ++	409:29:9319:9321	2350596	2	True				
ANR	2350842	Identifier	i		2350596	0					
ANR	2350843	IncDec	++		2350596	1					
ANR	2350844	CompoundStatement		58:3:1270:1288	2350596	3					
ANR	2350845	IdentifierDeclStatement	char c = * opstring ;	410:3:9329:9347	2350596	0	True				
ANR	2350846	IdentifierDecl	c = * opstring		2350596	0					
ANR	2350847	IdentifierDeclType	char		2350596	0					
ANR	2350848	Identifier	c		2350596	1					
ANR	2350849	AssignmentExpression	c = * opstring		2350596	2		=			
ANR	2350850	Identifier	c		2350596	0					
ANR	2350851	UnaryOperationExpression	* opstring		2350596	1					
ANR	2350852	UnaryOperator	*		2350596	0					
ANR	2350853	Identifier	opstring		2350596	1					
ANR	2350854	SwitchStatement	switch ( c )		2350596	1					
ANR	2350855	Condition	c	411:11:9360:9360	2350596	0	True				
ANR	2350856	Identifier	c		2350596	0					
ANR	2350857	CompoundStatement		59:14:1304:1304	2350596	1					
ANR	2350858	Label	case '&' :	412:3:9368:9376	2350596	0	True				
ANR	2350859	ExpressionStatement	"buffer += ""&amp;"""	412:14:9379:9396	2350596	1	True				
ANR	2350860	AssignmentExpression	"buffer += ""&amp;"""		2350596	0		+=			
ANR	2350861	Identifier	buffer		2350596	0					
ANR	2350862	PrimaryExpression	"""&amp;"""		2350596	1					
ANR	2350863	BreakStatement	break ;	412:34:9399:9404	2350596	2	True				
ANR	2350864	Label	case '<' :	413:3:9409:9417	2350596	3	True				
ANR	2350865	ExpressionStatement	"buffer += ""&lt;"""	413:14:9420:9436	2350596	4	True				
ANR	2350866	AssignmentExpression	"buffer += ""&lt;"""		2350596	0		+=			
ANR	2350867	Identifier	buffer		2350596	0					
ANR	2350868	PrimaryExpression	"""&lt;"""		2350596	1					
ANR	2350869	BreakStatement	break ;	413:34:9440:9445	2350596	5	True				
ANR	2350870	Label	case '>' :	414:3:9450:9458	2350596	6	True				
ANR	2350871	ExpressionStatement	"buffer += ""&gt;"""	414:14:9461:9477	2350596	7	True				
ANR	2350872	AssignmentExpression	"buffer += ""&gt;"""		2350596	0		+=			
ANR	2350873	Identifier	buffer		2350596	0					
ANR	2350874	PrimaryExpression	"""&gt;"""		2350596	1					
ANR	2350875	BreakStatement	break ;	414:34:9481:9486	2350596	8	True				
ANR	2350876	Label	default :	415:3:9491:9498	2350596	9	True				
ANR	2350877	Identifier	default		2350596	0					
ANR	2350878	ExpressionStatement	buffer += c	415:12:9500:9511	2350596	10	True				
ANR	2350879	AssignmentExpression	buffer += c		2350596	0		+=			
ANR	2350880	Identifier	buffer		2350596	0					
ANR	2350881	Identifier	c		2350596	1					
ANR	2350882	BreakStatement	break ;	415:25:9513:9518	2350596	11	True				
ANR	2350883	ExpressionStatement	opstring ++	417:3:9528:9538	2350596	2	True				
ANR	2350884	PostIncDecOperationExpression	opstring ++		2350596	0					
ANR	2350885	Identifier	opstring		2350596	0					
ANR	2350886	IncDec	++		2350596	1					
ANR	2350887	ExpressionStatement	"Unparse ( buffer , t2 )"	420:1:9548:9569	2350596	7	True				
ANR	2350888	CallExpression	"Unparse ( buffer , t2 )"		2350596	0					
ANR	2350889	Callee	Unparse		2350596	0					
ANR	2350890	Identifier	Unparse		2350596	0					
ANR	2350891	ArgumentList	buffer		2350596	1					
ANR	2350892	Argument	buffer		2350596	0					
ANR	2350893	Identifier	buffer		2350596	0					
ANR	2350894	Argument	t2		2350596	1					
ANR	2350895	Identifier	t2		2350596	0					
ANR	2350896	ReturnType	void		2350596	1					
ANR	2350897	Identifier	ClassAdUnParser :: UnparseAux		2350596	2					
ANR	2350898	ParameterList	"string & buffer , Operation :: OpKind op , ExprTree * t1 , ExprTree * t2 , ExprTree * t3"		2350596	3					
ANR	2350899	Parameter	string & buffer	351:11:7976:7989	2350596	0	True				
ANR	2350900	ParameterType	string &		2350596	0					
ANR	2350901	Identifier	buffer		2350596	1					
ANR	2350902	Parameter	Operation :: OpKind op	351:27:7992:8011	2350596	1	True				
ANR	2350903	ParameterType	Operation :: OpKind		2350596	0					
ANR	2350904	Identifier	op		2350596	1					
ANR	2350905	Parameter	ExprTree * t1	351:49:8014:8025	2350596	2	True				
ANR	2350906	ParameterType	ExprTree *		2350596	0					
ANR	2350907	Identifier	t1		2350596	1					
ANR	2350908	Parameter	ExprTree * t2	351:63:8028:8039	2350596	3	True				
ANR	2350909	ParameterType	ExprTree *		2350596	0					
ANR	2350910	Identifier	t2		2350596	1					
ANR	2350911	Parameter	ExprTree * t3	352:1:8044:8055	2350596	4	True				
ANR	2350912	ParameterType	ExprTree *		2350596	0					
ANR	2350913	Identifier	t3		2350596	1					
ANR	2350914	CFGEntryNode	ENTRY		2350596		True				
ANR	2350915	CFGExitNode	EXIT		2350596		True				
ANR	2350916	Symbol	opstring		2350596						
ANR	2350917	Symbol	* op		2350596						
ANR	2350918	Symbol	opString		2350596						
ANR	2350919	Symbol	Operation :: LOGICAL_NOT_OP		2350596						
ANR	2350920	Symbol	Operation :: META_EQUAL_OP		2350596						
ANR	2350921	Symbol	Operation :: META_NOT_EQUAL_OP		2350596						
ANR	2350922	Symbol	Operation :: UNARY_MINUS_OP		2350596						
ANR	2350923	Symbol	strlen		2350596						
ANR	2350924	Symbol	oldClassAd		2350596						
ANR	2350925	Symbol	Operation :: TERNARY_OP		2350596						
ANR	2350926	Symbol	Operation :: BITWISE_NOT_OP		2350596						
ANR	2350927	Symbol	buffer		2350596						
ANR	2350928	Symbol	Operation :: SUBSCRIPT_OP		2350596						
ANR	2350929	Symbol	Operation :: UNARY_PLUS_OP		2350596						
ANR	2350930	Symbol	op		2350596						
ANR	2350931	Symbol	c		2350596						
ANR	2350932	Symbol	* opstring		2350596						
ANR	2350933	Symbol	length		2350596						
ANR	2350934	Symbol	i		2350596						
ANR	2350935	Symbol	xmlUnparse		2350596						
ANR	2350936	Symbol	Operation :: PARENTHESES_OP		2350596						
ANR	2350937	Symbol	* opString		2350596						
ANR	2350938	Symbol	t1		2350596						
ANR	2350939	Symbol	t2		2350596						
ANR	2350940	Symbol	t3		2350596						
ANR	2350941	Function	ClassAdUnParser :: UnparseAux	423:0:9574:9878							
ANR	2350942	FunctionDef	"ClassAdUnParser :: UnparseAux (string & buffer , string & fnName , vector < ExprTree * > & args)"		2350941	0					
ANR	2350943	CompoundStatement		425:0:9667:9878	2350941	0					
ANR	2350944	IdentifierDeclStatement	vector < ExprTree * > :: const_iterator itr ;	426:1:9670:9707	2350941	0	True				
ANR	2350945	IdentifierDecl	itr		2350941	0					
ANR	2350946	IdentifierDeclType	vector < ExprTree * > :: const_iterator		2350941	0					
ANR	2350947	Identifier	itr		2350941	1					
ANR	2350948	ExpressionStatement	"buffer += fnName + ""("""	428:1:9711:9733	2350941	1	True				
ANR	2350949	AssignmentExpression	"buffer += fnName + ""("""		2350941	0		+=			
ANR	2350950	Identifier	buffer		2350941	0					
ANR	2350951	AdditiveExpression	"fnName + ""("""		2350941	1		+			
ANR	2350952	Identifier	fnName		2350941	0					
ANR	2350953	PrimaryExpression	"""("""		2350941	1					
ANR	2350954	ForStatement	for ( itr = args . begin ( ) ; itr != args . end ( ) ; itr ++ )		2350941	2					
ANR	2350955	ForInit	itr = args . begin ( ) ;	429:6:9741:9758	2350941	0	True				
ANR	2350956	AssignmentExpression	itr = args . begin ( )		2350941	0		=			
ANR	2350957	Identifier	itr		2350941	0					
ANR	2350958	CallExpression	args . begin ( )		2350941	1					
ANR	2350959	Callee	args . begin		2350941	0					
ANR	2350960	MemberAccess	args . begin		2350941	0					
ANR	2350961	Identifier	args		2350941	0					
ANR	2350962	Identifier	begin		2350941	1					
ANR	2350963	ArgumentList			2350941	1					
ANR	2350964	Condition	itr != args . end ( )	429:25:9760:9775	2350941	1	True				
ANR	2350965	EqualityExpression	itr != args . end ( )		2350941	0		!=			
ANR	2350966	Identifier	itr		2350941	0					
ANR	2350967	CallExpression	args . end ( )		2350941	1					
ANR	2350968	Callee	args . end		2350941	0					
ANR	2350969	MemberAccess	args . end		2350941	0					
ANR	2350970	Identifier	args		2350941	0					
ANR	2350971	Identifier	end		2350941	1					
ANR	2350972	ArgumentList			2350941	1					
ANR	2350973	PostIncDecOperationExpression	itr ++	429:43:9778:9782	2350941	2	True				
ANR	2350974	Identifier	itr		2350941	0					
ANR	2350975	IncDec	++		2350941	1					
ANR	2350976	CompoundStatement		5:51:118:118	2350941	3					
ANR	2350977	ExpressionStatement	"Unparse ( buffer , * itr )"	430:2:9790:9813	2350941	0	True				
ANR	2350978	CallExpression	"Unparse ( buffer , * itr )"		2350941	0					
ANR	2350979	Callee	Unparse		2350941	0					
ANR	2350980	Identifier	Unparse		2350941	0					
ANR	2350981	ArgumentList	buffer		2350941	1					
ANR	2350982	Argument	buffer		2350941	0					
ANR	2350983	Identifier	buffer		2350941	0					
ANR	2350984	Argument	* itr		2350941	1					
ANR	2350985	UnaryOperationExpression	* itr		2350941	0					
ANR	2350986	UnaryOperator	*		2350941	0					
ANR	2350987	Identifier	itr		2350941	1					
ANR	2350988	IfStatement	if ( itr + 1 != args . end ( ) )		2350941	1					
ANR	2350989	Condition	itr + 1 != args . end ( )	431:6:9821:9840	2350941	0	True				
ANR	2350990	EqualityExpression	itr + 1 != args . end ( )		2350941	0		!=			
ANR	2350991	AdditiveExpression	itr + 1		2350941	0		+			
ANR	2350992	Identifier	itr		2350941	0					
ANR	2350993	PrimaryExpression	1		2350941	1					
ANR	2350994	CallExpression	args . end ( )		2350941	1					
ANR	2350995	Callee	args . end		2350941	0					
ANR	2350996	MemberAccess	args . end		2350941	0					
ANR	2350997	Identifier	args		2350941	0					
ANR	2350998	Identifier	end		2350941	1					
ANR	2350999	ArgumentList			2350941	1					
ANR	2351000	ExpressionStatement	"buffer += ','"	431:29:9844:9857	2350941	1	True				
ANR	2351001	AssignmentExpression	"buffer += ','"		2350941	0		+=			
ANR	2351002	Identifier	buffer		2350941	0					
ANR	2351003	PrimaryExpression	"','"		2350941	1					
ANR	2351004	ExpressionStatement	"buffer += "")"""	433:1:9863:9876	2350941	3	True				
ANR	2351005	AssignmentExpression	"buffer += "")"""		2350941	0		+=			
ANR	2351006	Identifier	buffer		2350941	0					
ANR	2351007	PrimaryExpression	""")"""		2350941	1					
ANR	2351008	ReturnType	void		2350941	1					
ANR	2351009	Identifier	ClassAdUnParser :: UnparseAux		2350941	2					
ANR	2351010	ParameterList	"string & buffer , string & fnName , vector < ExprTree * > & args"		2350941	3					
ANR	2351011	Parameter	string & buffer	424:12:9609:9622	2350941	0	True				
ANR	2351012	ParameterType	string &		2350941	0					
ANR	2351013	Identifier	buffer		2350941	1					
ANR	2351014	Parameter	string & fnName	424:28:9625:9638	2350941	1	True				
ANR	2351015	ParameterType	string &		2350941	0					
ANR	2351016	Identifier	fnName		2350941	1					
ANR	2351017	Parameter	vector < ExprTree * > & args	424:44:9641:9663	2350941	2	True				
ANR	2351018	ParameterType	vector < ExprTree * > &		2350941	0					
ANR	2351019	Identifier	args		2350941	1					
ANR	2351020	CFGEntryNode	ENTRY		2350941		True				
ANR	2351021	CFGExitNode	EXIT		2350941		True				
ANR	2351022	Symbol	args		2350941						
ANR	2351023	Symbol	args . end		2350941						
ANR	2351024	Symbol	args . begin		2350941						
ANR	2351025	Symbol	fnName		2350941						
ANR	2351026	Symbol	itr		2350941						
ANR	2351027	Symbol	buffer		2350941						
ANR	2351028	Symbol	* itr		2350941						
ANR	2351029	Function	ClassAdUnParser :: UnparseAux	436:0:9881:10605							
ANR	2351030	FunctionDef	"ClassAdUnParser :: UnparseAux (string & buffer , vector < pair < string , ExprTree * > > & attrs)"		2351029	0					
ANR	2351031	CompoundStatement		438:0:9974:10605	2351029	0					
ANR	2351032	IdentifierDeclStatement	"vector < pair < string , ExprTree * > > :: const_iterator itr ;"	439:1:9977:10029	2351029	0	True				
ANR	2351033	IdentifierDecl	itr		2351029	0					
ANR	2351034	IdentifierDeclType	"vector < pair < string , ExprTree * > > :: const_iterator"		2351029	0					
ANR	2351035	Identifier	itr		2351029	1					
ANR	2351036	IdentifierDeclStatement	string delim ;	441:1:10033:10045	2351029	1	True				
ANR	2351037	IdentifierDecl	delim		2351029	0					
ANR	2351038	IdentifierDeclType	string		2351029	0					
ANR	2351039	Identifier	delim		2351029	1					
ANR	2351040	IfStatement	if ( oldClassAd )		2351029	2					
ANR	2351041	Condition	oldClassAd	442:5:10060:10069	2351029	0	True				
ANR	2351042	Identifier	oldClassAd		2351029	0					
ANR	2351043	CompoundStatement		5:18:98:98	2351029	1					
ANR	2351044	ExpressionStatement	"delim = ""\\n"""	443:2:10084:10096	2351029	0	True				
ANR	2351045	AssignmentExpression	"delim = ""\\n"""		2351029	0		=			
ANR	2351046	Identifier	delim		2351029	0					
ANR	2351047	PrimaryExpression	"""\\n"""		2351029	1					
ANR	2351048	ElseStatement	else		2351029	0					
ANR	2351049	CompoundStatement		8:6:150:150	2351029	0					
ANR	2351050	ExpressionStatement	"delim = ""; """	446:2:10139:10151	2351029	0	True				
ANR	2351051	AssignmentExpression	"delim = ""; """		2351029	0		=			
ANR	2351052	Identifier	delim		2351029	0					
ANR	2351053	PrimaryExpression	"""; """		2351029	1					
ANR	2351054	IfStatement	if ( ! oldClassAd )		2351029	3					
ANR	2351055	Condition	! oldClassAd	449:5:10180:10190	2351029	0	True				
ANR	2351056	UnaryOperationExpression	! oldClassAd		2351029	0					
ANR	2351057	UnaryOperator	!		2351029	0					
ANR	2351058	Identifier	oldClassAd		2351029	1					
ANR	2351059	CompoundStatement		12:19:219:219	2351029	1					
ANR	2351060	ExpressionStatement	"buffer += ""[ """	450:2:10205:10219	2351029	0	True				
ANR	2351061	AssignmentExpression	"buffer += ""[ """		2351029	0		+=			
ANR	2351062	Identifier	buffer		2351029	0					
ANR	2351063	PrimaryExpression	"""[ """		2351029	1					
ANR	2351064	ForStatement	for ( itr = attrs . begin ( ) ; itr != attrs . end ( ) ; itr ++ )		2351029	4					
ANR	2351065	ForInit	itr = attrs . begin ( ) ;	452:6:10241:10259	2351029	0	True				
ANR	2351066	AssignmentExpression	itr = attrs . begin ( )		2351029	0		=			
ANR	2351067	Identifier	itr		2351029	0					
ANR	2351068	CallExpression	attrs . begin ( )		2351029	1					
ANR	2351069	Callee	attrs . begin		2351029	0					
ANR	2351070	MemberAccess	attrs . begin		2351029	0					
ANR	2351071	Identifier	attrs		2351029	0					
ANR	2351072	Identifier	begin		2351029	1					
ANR	2351073	ArgumentList			2351029	1					
ANR	2351074	Condition	itr != attrs . end ( )	452:26:10261:10277	2351029	1	True				
ANR	2351075	EqualityExpression	itr != attrs . end ( )		2351029	0		!=			
ANR	2351076	Identifier	itr		2351029	0					
ANR	2351077	CallExpression	attrs . end ( )		2351029	1					
ANR	2351078	Callee	attrs . end		2351029	0					
ANR	2351079	MemberAccess	attrs . end		2351029	0					
ANR	2351080	Identifier	attrs		2351029	0					
ANR	2351081	Identifier	end		2351029	1					
ANR	2351082	ArgumentList			2351029	1					
ANR	2351083	PostIncDecOperationExpression	itr ++	452:45:10280:10284	2351029	2	True				
ANR	2351084	Identifier	itr		2351029	0					
ANR	2351085	IncDec	++		2351029	1					
ANR	2351086	CompoundStatement		15:53:313:313	2351029	3					
ANR	2351087	ExpressionStatement	"UnparseAux ( buffer , itr -> first )"	453:3:10293:10325	2351029	0	True				
ANR	2351088	CallExpression	"UnparseAux ( buffer , itr -> first )"		2351029	0					
ANR	2351089	Callee	UnparseAux		2351029	0					
ANR	2351090	Identifier	UnparseAux		2351029	0					
ANR	2351091	ArgumentList	buffer		2351029	1					
ANR	2351092	Argument	buffer		2351029	0					
ANR	2351093	Identifier	buffer		2351029	0					
ANR	2351094	Argument	itr -> first		2351029	1					
ANR	2351095	PtrMemberAccess	itr -> first		2351029	0					
ANR	2351096	Identifier	itr		2351029	0					
ANR	2351097	Identifier	first		2351029	1					
ANR	2351098	ExpressionStatement	"buffer += "" = """	454:3:10331:10346	2351029	1	True				
ANR	2351099	AssignmentExpression	"buffer += "" = """		2351029	0		+=			
ANR	2351100	Identifier	buffer		2351029	0					
ANR	2351101	PrimaryExpression	""" = """		2351029	1					
ANR	2351102	ExpressionStatement	"Unparse ( buffer , itr -> second )"	455:2:10350:10380	2351029	2	True				
ANR	2351103	CallExpression	"Unparse ( buffer , itr -> second )"		2351029	0					
ANR	2351104	Callee	Unparse		2351029	0					
ANR	2351105	Identifier	Unparse		2351029	0					
ANR	2351106	ArgumentList	buffer		2351029	1					
ANR	2351107	Argument	buffer		2351029	0					
ANR	2351108	Identifier	buffer		2351029	0					
ANR	2351109	Argument	itr -> second		2351029	1					
ANR	2351110	PtrMemberAccess	itr -> second		2351029	0					
ANR	2351111	Identifier	itr		2351029	0					
ANR	2351112	Identifier	second		2351029	1					
ANR	2351113	IfStatement	if ( itr + 1 != attrs . end ( ) )		2351029	3					
ANR	2351114	Condition	itr + 1 != attrs . end ( )	457:6:10436:10456	2351029	0	True				
ANR	2351115	EqualityExpression	itr + 1 != attrs . end ( )		2351029	0		!=			
ANR	2351116	AdditiveExpression	itr + 1		2351029	0		+			
ANR	2351117	Identifier	itr		2351029	0					
ANR	2351118	PrimaryExpression	1		2351029	1					
ANR	2351119	CallExpression	attrs . end ( )		2351029	1					
ANR	2351120	Callee	attrs . end		2351029	0					
ANR	2351121	MemberAccess	attrs . end		2351029	0					
ANR	2351122	Identifier	attrs		2351029	0					
ANR	2351123	Identifier	end		2351029	1					
ANR	2351124	ArgumentList			2351029	1					
ANR	2351125	ExpressionStatement	buffer += delim	457:30:10460:10475	2351029	1	True				
ANR	2351126	AssignmentExpression	buffer += delim		2351029	0		+=			
ANR	2351127	Identifier	buffer		2351029	0					
ANR	2351128	Identifier	delim		2351029	1					
ANR	2351129	IfStatement	if ( ! oldClassAd )		2351029	5					
ANR	2351130	Condition	! oldClassAd	460:5:10493:10503	2351029	0	True				
ANR	2351131	UnaryOperationExpression	! oldClassAd		2351029	0					
ANR	2351132	UnaryOperator	!		2351029	0					
ANR	2351133	Identifier	oldClassAd		2351029	1					
ANR	2351134	CompoundStatement		23:19:532:532	2351029	1					
ANR	2351135	ExpressionStatement	"buffer += "" ]"""	461:2:10518:10532	2351029	0	True				
ANR	2351136	AssignmentExpression	"buffer += "" ]"""		2351029	0		+=			
ANR	2351137	Identifier	buffer		2351029	0					
ANR	2351138	PrimaryExpression	""" ]"""		2351029	1					
ANR	2351139	ElseStatement	else		2351029	0					
ANR	2351140	CompoundStatement		26:6:579:579	2351029	0					
ANR	2351141	ExpressionStatement	"buffer += ""\\n"""	464:2:10568:10582	2351029	0	True				
ANR	2351142	AssignmentExpression	"buffer += ""\\n"""		2351029	0		+=			
ANR	2351143	Identifier	buffer		2351029	0					
ANR	2351144	PrimaryExpression	"""\\n"""		2351029	1					
ANR	2351145	ReturnType	void		2351029	1					
ANR	2351146	Identifier	ClassAdUnParser :: UnparseAux		2351029	2					
ANR	2351147	ParameterList	"string & buffer , vector < pair < string , ExprTree * > > & attrs"		2351029	3					
ANR	2351148	Parameter	string & buffer	437:12:9916:9929	2351029	0	True				
ANR	2351149	ParameterType	string &		2351029	0					
ANR	2351150	Identifier	buffer		2351029	1					
ANR	2351151	Parameter	"vector < pair < string , ExprTree * > > & attrs"	437:28:9932:9970	2351029	1	True				
ANR	2351152	ParameterType	"vector < pair < string , ExprTree * > > &"		2351029	0					
ANR	2351153	Identifier	attrs		2351029	1					
ANR	2351154	CFGEntryNode	ENTRY		2351029		True				
ANR	2351155	CFGExitNode	EXIT		2351029		True				
ANR	2351156	Symbol	oldClassAd		2351029						
ANR	2351157	Symbol	attrs . begin		2351029						
ANR	2351158	Symbol	itr		2351029						
ANR	2351159	Symbol	buffer		2351029						
ANR	2351160	Symbol	itr -> first		2351029						
ANR	2351161	Symbol	attrs . end		2351029						
ANR	2351162	Symbol	* itr		2351029						
ANR	2351163	Symbol	attrs		2351029						
ANR	2351164	Symbol	delim		2351029						
ANR	2351165	Symbol	itr -> second		2351029						
ANR	2351166	Function	ClassAdUnParser :: UnparseAux	469:0:10609:10894							
ANR	2351167	FunctionDef	"ClassAdUnParser :: UnparseAux (string & buffer , vector < ExprTree * > & exprs)"		2351166	0					
ANR	2351168	CompoundStatement		471:0:10687:10894	2351166	0					
ANR	2351169	IdentifierDeclStatement	vector < ExprTree * > :: const_iterator itr ;	472:1:10690:10727	2351166	0	True				
ANR	2351170	IdentifierDecl	itr		2351166	0					
ANR	2351171	IdentifierDeclType	vector < ExprTree * > :: const_iterator		2351166	0					
ANR	2351172	Identifier	itr		2351166	1					
ANR	2351173	ExpressionStatement	"buffer += ""{ """	474:1:10731:10745	2351166	1	True				
ANR	2351174	AssignmentExpression	"buffer += ""{ """		2351166	0		+=			
ANR	2351175	Identifier	buffer		2351166	0					
ANR	2351176	PrimaryExpression	"""{ """		2351166	1					
ANR	2351177	ForStatement	for ( itr = exprs . begin ( ) ; itr != exprs . end ( ) ; itr ++ )		2351166	2					
ANR	2351178	ForInit	itr = exprs . begin ( ) ;	475:6:10753:10771	2351166	0	True				
ANR	2351179	AssignmentExpression	itr = exprs . begin ( )		2351166	0		=			
ANR	2351180	Identifier	itr		2351166	0					
ANR	2351181	CallExpression	exprs . begin ( )		2351166	1					
ANR	2351182	Callee	exprs . begin		2351166	0					
ANR	2351183	MemberAccess	exprs . begin		2351166	0					
ANR	2351184	Identifier	exprs		2351166	0					
ANR	2351185	Identifier	begin		2351166	1					
ANR	2351186	ArgumentList			2351166	1					
ANR	2351187	Condition	itr != exprs . end ( )	475:26:10773:10789	2351166	1	True				
ANR	2351188	EqualityExpression	itr != exprs . end ( )		2351166	0		!=			
ANR	2351189	Identifier	itr		2351166	0					
ANR	2351190	CallExpression	exprs . end ( )		2351166	1					
ANR	2351191	Callee	exprs . end		2351166	0					
ANR	2351192	MemberAccess	exprs . end		2351166	0					
ANR	2351193	Identifier	exprs		2351166	0					
ANR	2351194	Identifier	end		2351166	1					
ANR	2351195	ArgumentList			2351166	1					
ANR	2351196	PostIncDecOperationExpression	itr ++	475:45:10792:10796	2351166	2	True				
ANR	2351197	Identifier	itr		2351166	0					
ANR	2351198	IncDec	++		2351166	1					
ANR	2351199	CompoundStatement		5:53:112:112	2351166	3					
ANR	2351200	ExpressionStatement	"Unparse ( buffer , * itr )"	476:2:10804:10827	2351166	0	True				
ANR	2351201	CallExpression	"Unparse ( buffer , * itr )"		2351166	0					
ANR	2351202	Callee	Unparse		2351166	0					
ANR	2351203	Identifier	Unparse		2351166	0					
ANR	2351204	ArgumentList	buffer		2351166	1					
ANR	2351205	Argument	buffer		2351166	0					
ANR	2351206	Identifier	buffer		2351166	0					
ANR	2351207	Argument	* itr		2351166	1					
ANR	2351208	UnaryOperationExpression	* itr		2351166	0					
ANR	2351209	UnaryOperator	*		2351166	0					
ANR	2351210	Identifier	itr		2351166	1					
ANR	2351211	IfStatement	if ( itr + 1 != exprs . end ( ) )		2351166	1					
ANR	2351212	Condition	itr + 1 != exprs . end ( )	477:6:10835:10855	2351166	0	True				
ANR	2351213	EqualityExpression	itr + 1 != exprs . end ( )		2351166	0		!=			
ANR	2351214	AdditiveExpression	itr + 1		2351166	0		+			
ANR	2351215	Identifier	itr		2351166	0					
ANR	2351216	PrimaryExpression	1		2351166	1					
ANR	2351217	CallExpression	exprs . end ( )		2351166	1					
ANR	2351218	Callee	exprs . end		2351166	0					
ANR	2351219	MemberAccess	exprs . end		2351166	0					
ANR	2351220	Identifier	exprs		2351166	0					
ANR	2351221	Identifier	end		2351166	1					
ANR	2351222	ArgumentList			2351166	1					
ANR	2351223	ExpressionStatement	"buffer += ','"	477:30:10859:10872	2351166	1	True				
ANR	2351224	AssignmentExpression	"buffer += ','"		2351166	0		+=			
ANR	2351225	Identifier	buffer		2351166	0					
ANR	2351226	PrimaryExpression	"','"		2351166	1					
ANR	2351227	ExpressionStatement	"buffer += "" }"""	479:1:10878:10892	2351166	3	True				
ANR	2351228	AssignmentExpression	"buffer += "" }"""		2351166	0		+=			
ANR	2351229	Identifier	buffer		2351166	0					
ANR	2351230	PrimaryExpression	""" }"""		2351166	1					
ANR	2351231	ReturnType	void		2351166	1					
ANR	2351232	Identifier	ClassAdUnParser :: UnparseAux		2351166	2					
ANR	2351233	ParameterList	"string & buffer , vector < ExprTree * > & exprs"		2351166	3					
ANR	2351234	Parameter	string & buffer	470:12:10644:10657	2351166	0	True				
ANR	2351235	ParameterType	string &		2351166	0					
ANR	2351236	Identifier	buffer		2351166	1					
ANR	2351237	Parameter	vector < ExprTree * > & exprs	470:28:10660:10683	2351166	1	True				
ANR	2351238	ParameterType	vector < ExprTree * > &		2351166	0					
ANR	2351239	Identifier	exprs		2351166	1					
ANR	2351240	CFGEntryNode	ENTRY		2351166		True				
ANR	2351241	CFGExitNode	EXIT		2351166		True				
ANR	2351242	Symbol	itr		2351166						
ANR	2351243	Symbol	exprs		2351166						
ANR	2351244	Symbol	exprs . end		2351166						
ANR	2351245	Symbol	buffer		2351166						
ANR	2351246	Symbol	exprs . begin		2351166						
ANR	2351247	Symbol	* itr		2351166						
ANR	2351248	Function	ClassAdUnParser :: UnparseAux	487:0:11046:11510							
ANR	2351249	FunctionDef	"ClassAdUnParser :: UnparseAux (string & buffer , string identifier)"		2351248	0					
ANR	2351250	CompoundStatement		489:0:11117:11510	2351248	0					
ANR	2351251	IdentifierDeclStatement	Value val ;	490:1:11120:11130	2351248	0	True				
ANR	2351252	IdentifierDecl	val		2351248	0					
ANR	2351253	IdentifierDeclType	Value		2351248	0					
ANR	2351254	Identifier	val		2351248	1					
ANR	2351255	IdentifierDeclStatement	string idstr ;	491:1:11133:11145	2351248	1	True				
ANR	2351256	IdentifierDecl	idstr		2351248	0					
ANR	2351257	IdentifierDeclType	string		2351248	0					
ANR	2351258	Identifier	idstr		2351248	1					
ANR	2351259	ExpressionStatement	val . SetStringValue ( identifier )	493:1:11149:11179	2351248	2	True				
ANR	2351260	CallExpression	val . SetStringValue ( identifier )		2351248	0					
ANR	2351261	Callee	val . SetStringValue		2351248	0					
ANR	2351262	MemberAccess	val . SetStringValue		2351248	0					
ANR	2351263	Identifier	val		2351248	0					
ANR	2351264	Identifier	SetStringValue		2351248	1					
ANR	2351265	ArgumentList	identifier		2351248	1					
ANR	2351266	Argument	identifier		2351248	0					
ANR	2351267	Identifier	identifier		2351248	0					
ANR	2351268	ExpressionStatement	setDelimiter ( '\\'' )	494:1:11182:11200	2351248	3	True				
ANR	2351269	CallExpression	setDelimiter ( '\\'' )		2351248	0					
ANR	2351270	Callee	setDelimiter		2351248	0					
ANR	2351271	Identifier	setDelimiter		2351248	0					
ANR	2351272	ArgumentList	'\\''		2351248	1					
ANR	2351273	Argument	'\\''		2351248	0					
ANR	2351274	PrimaryExpression	'\\''		2351248	0					
ANR	2351275	ExpressionStatement	"Unparse ( idstr , val )"	495:1:11277:11295	2351248	4	True				
ANR	2351276	CallExpression	"Unparse ( idstr , val )"		2351248	0					
ANR	2351277	Callee	Unparse		2351248	0					
ANR	2351278	Identifier	Unparse		2351248	0					
ANR	2351279	ArgumentList	idstr		2351248	1					
ANR	2351280	Argument	idstr		2351248	0					
ANR	2351281	Identifier	idstr		2351248	0					
ANR	2351282	Argument	val		2351248	1					
ANR	2351283	Identifier	val		2351248	0					
ANR	2351284	ExpressionStatement	"setDelimiter ( '\\""' )"	496:1:11298:11316	2351248	5	True				
ANR	2351285	CallExpression	"setDelimiter ( '\\""' )"		2351248	0					
ANR	2351286	Callee	setDelimiter		2351248	0					
ANR	2351287	Identifier	setDelimiter		2351248	0					
ANR	2351288	ArgumentList	"'\\""'"		2351248	1					
ANR	2351289	Argument	"'\\""'"		2351248	0					
ANR	2351290	PrimaryExpression	"'\\""'"		2351248	0					
ANR	2351291	ExpressionStatement	"idstr . erase ( 0 , 1 )"	497:1:11360:11376	2351248	6	True				
ANR	2351292	CallExpression	"idstr . erase ( 0 , 1 )"		2351248	0					
ANR	2351293	Callee	idstr . erase		2351248	0					
ANR	2351294	MemberAccess	idstr . erase		2351248	0					
ANR	2351295	Identifier	idstr		2351248	0					
ANR	2351296	Identifier	erase		2351248	1					
ANR	2351297	ArgumentList	0		2351248	1					
ANR	2351298	Argument	0		2351248	0					
ANR	2351299	PrimaryExpression	0		2351248	0					
ANR	2351300	Argument	1		2351248	1					
ANR	2351301	PrimaryExpression	1		2351248	0					
ANR	2351302	ExpressionStatement	"idstr . erase ( idstr . length ( ) - 1 , 1 )"	498:1:11379:11410	2351248	7	True				
ANR	2351303	CallExpression	"idstr . erase ( idstr . length ( ) - 1 , 1 )"		2351248	0					
ANR	2351304	Callee	idstr . erase		2351248	0					
ANR	2351305	MemberAccess	idstr . erase		2351248	0					
ANR	2351306	Identifier	idstr		2351248	0					
ANR	2351307	Identifier	erase		2351248	1					
ANR	2351308	ArgumentList	idstr . length ( ) - 1		2351248	1					
ANR	2351309	Argument	idstr . length ( ) - 1		2351248	0					
ANR	2351310	AdditiveExpression	idstr . length ( ) - 1		2351248	0		-			
ANR	2351311	CallExpression	idstr . length ( )		2351248	0					
ANR	2351312	Callee	idstr . length		2351248	0					
ANR	2351313	MemberAccess	idstr . length		2351248	0					
ANR	2351314	Identifier	idstr		2351248	0					
ANR	2351315	Identifier	length		2351248	1					
ANR	2351316	ArgumentList			2351248	1					
ANR	2351317	PrimaryExpression	1		2351248	1					
ANR	2351318	Argument	1		2351248	1					
ANR	2351319	PrimaryExpression	1		2351248	0					
ANR	2351320	IfStatement	if ( identifierNeedsQuoting ( idstr ) )		2351248	8					
ANR	2351321	Condition	identifierNeedsQuoting ( idstr )	499:5:11417:11445	2351248	0	True				
ANR	2351322	CallExpression	identifierNeedsQuoting ( idstr )		2351248	0					
ANR	2351323	Callee	identifierNeedsQuoting		2351248	0					
ANR	2351324	Identifier	identifierNeedsQuoting		2351248	0					
ANR	2351325	ArgumentList	idstr		2351248	1					
ANR	2351326	Argument	idstr		2351248	0					
ANR	2351327	Identifier	idstr		2351248	0					
ANR	2351328	CompoundStatement		11:36:330:330	2351248	1					
ANR	2351329	ExpressionStatement	"idstr . insert ( 0 , ""'"" )"	500:2:11452:11471	2351248	0	True				
ANR	2351330	CallExpression	"idstr . insert ( 0 , ""'"" )"		2351248	0					
ANR	2351331	Callee	idstr . insert		2351248	0					
ANR	2351332	MemberAccess	idstr . insert		2351248	0					
ANR	2351333	Identifier	idstr		2351248	0					
ANR	2351334	Identifier	insert		2351248	1					
ANR	2351335	ArgumentList	0		2351248	1					
ANR	2351336	Argument	0		2351248	0					
ANR	2351337	PrimaryExpression	0		2351248	0					
ANR	2351338	Argument	"""'"""		2351248	1					
ANR	2351339	PrimaryExpression	"""'"""		2351248	0					
ANR	2351340	ExpressionStatement	"idstr += ""'"""	501:2:11475:11487	2351248	1	True				
ANR	2351341	AssignmentExpression	"idstr += ""'"""		2351248	0		+=			
ANR	2351342	Identifier	idstr		2351248	0					
ANR	2351343	PrimaryExpression	"""'"""		2351248	1					
ANR	2351344	ExpressionStatement	buffer += idstr	503:1:11493:11508	2351248	9	True				
ANR	2351345	AssignmentExpression	buffer += idstr		2351248	0		+=			
ANR	2351346	Identifier	buffer		2351248	0					
ANR	2351347	Identifier	idstr		2351248	1					
ANR	2351348	ReturnType	void		2351248	1					
ANR	2351349	Identifier	ClassAdUnParser :: UnparseAux		2351248	2					
ANR	2351350	ParameterList	"string & buffer , string identifier"		2351248	3					
ANR	2351351	Parameter	string & buffer	488:12:11081:11094	2351248	0	True				
ANR	2351352	ParameterType	string &		2351248	0					
ANR	2351353	Identifier	buffer		2351248	1					
ANR	2351354	Parameter	string identifier	488:28:11097:11113	2351248	1	True				
ANR	2351355	ParameterType	string		2351248	0					
ANR	2351356	Identifier	identifier		2351248	1					
ANR	2351357	CFGEntryNode	ENTRY		2351248		True				
ANR	2351358	CFGExitNode	EXIT		2351248		True				
ANR	2351359	Symbol	val		2351248						
ANR	2351360	Symbol	idstr		2351248						
ANR	2351361	Symbol	idstr . length		2351248						
ANR	2351362	Symbol	identifier		2351248						
ANR	2351363	Symbol	identifierNeedsQuoting		2351248						
ANR	2351364	Symbol	buffer		2351248						
ANR	2351365	Function	ClassAdUnParser :: SetOldClassAd	507:0:11546:11612							
ANR	2351366	FunctionDef	ClassAdUnParser :: SetOldClassAd (bool b)		2351365	0					
ANR	2351367	CompoundStatement		509:0:11593:11612	2351365	0					
ANR	2351368	ExpressionStatement	oldClassAd = b	510:1:11596:11610	2351365	0	True				
ANR	2351369	AssignmentExpression	oldClassAd = b		2351365	0		=			
ANR	2351370	Identifier	oldClassAd		2351365	0					
ANR	2351371	Identifier	b		2351365	1					
ANR	2351372	ReturnType	void		2351365	1					
ANR	2351373	Identifier	ClassAdUnParser :: SetOldClassAd		2351365	2					
ANR	2351374	ParameterList	bool b		2351365	3					
ANR	2351375	Parameter	bool b	508:15:11584:11589	2351365	0	True				
ANR	2351376	ParameterType	bool		2351365	0					
ANR	2351377	Identifier	b		2351365	1					
ANR	2351378	CFGEntryNode	ENTRY		2351365		True				
ANR	2351379	CFGExitNode	EXIT		2351365		True				
ANR	2351380	Symbol	b		2351365						
ANR	2351381	Symbol	oldClassAd		2351365						
ANR	2351382	Function	ClassAdUnParser :: GetOldClassAd	513:0:11615:11676							
ANR	2351383	FunctionDef	ClassAdUnParser :: GetOldClassAd ()		2351382	0					
ANR	2351384	CompoundStatement		515:0:11654:11676	2351382	0					
ANR	2351385	ReturnStatement	return oldClassAd ;	516:1:11657:11674	2351382	0	True				
ANR	2351386	Identifier	oldClassAd		2351382	0					
ANR	2351387	ReturnType	bool		2351382	1					
ANR	2351388	Identifier	ClassAdUnParser :: GetOldClassAd		2351382	2					
ANR	2351389	ParameterList			2351382	3					
ANR	2351390	CFGEntryNode	ENTRY		2351382		True				
ANR	2351391	CFGExitNode	EXIT		2351382		True				
ANR	2351392	Symbol	oldClassAd		2351382						
ANR	2351393	Function	PrettyPrint :: PrettyPrint	521:0:11717:11853							
ANR	2351394	FunctionDef	PrettyPrint :: PrettyPrint ()		2351393	0					
ANR	2351395	CompoundStatement		523:0:11746:11853	2351393	0					
ANR	2351396	ExpressionStatement	classadIndent = 4	524:1:11749:11766	2351393	0	True				
ANR	2351397	AssignmentExpression	classadIndent = 4		2351393	0		=			
ANR	2351398	Identifier	classadIndent		2351393	0					
ANR	2351399	PrimaryExpression	4		2351393	1					
ANR	2351400	ExpressionStatement	listIndent = 3	525:1:11769:11783	2351393	1	True				
ANR	2351401	AssignmentExpression	listIndent = 3		2351393	0		=			
ANR	2351402	Identifier	listIndent		2351393	0					
ANR	2351403	PrimaryExpression	3		2351393	1					
ANR	2351404	ExpressionStatement	wantStringQuotes = true	526:1:11786:11809	2351393	2	True				
ANR	2351405	AssignmentExpression	wantStringQuotes = true		2351393	0		=			
ANR	2351406	Identifier	wantStringQuotes		2351393	0					
ANR	2351407	Identifier	true		2351393	1					
ANR	2351408	ExpressionStatement	minimalParens = false	527:1:11812:11833	2351393	3	True				
ANR	2351409	AssignmentExpression	minimalParens = false		2351393	0		=			
ANR	2351410	Identifier	minimalParens		2351393	0					
ANR	2351411	Identifier	false		2351393	1					
ANR	2351412	ExpressionStatement	indentLevel = 0	528:1:11836:11851	2351393	4	True				
ANR	2351413	AssignmentExpression	indentLevel = 0		2351393	0		=			
ANR	2351414	Identifier	indentLevel		2351393	0					
ANR	2351415	PrimaryExpression	0		2351393	1					
ANR	2351416	Identifier	PrettyPrint :: PrettyPrint		2351393	1					
ANR	2351417	ParameterList			2351393	2					
ANR	2351418	CFGEntryNode	ENTRY		2351393		True				
ANR	2351419	CFGExitNode	EXIT		2351393		True				
ANR	2351420	Symbol	indentLevel		2351393						
ANR	2351421	Symbol	wantStringQuotes		2351393						
ANR	2351422	Symbol	classadIndent		2351393						
ANR	2351423	Symbol	true		2351393						
ANR	2351424	Symbol	false		2351393						
ANR	2351425	Symbol	minimalParens		2351393						
ANR	2351426	Symbol	listIndent		2351393						
ANR	2351427	Function	PrettyPrint :: ~PrettyPrint	532:0:11857:11889							
ANR	2351428	FunctionDef	PrettyPrint :: ~PrettyPrint ()		2351427	0					
ANR	2351429	CompoundStatement		534:0:11887:11889	2351427	0					
ANR	2351430	Identifier	PrettyPrint :: ~PrettyPrint		2351427	1					
ANR	2351431	ParameterList			2351427	2					
ANR	2351432	CFGEntryNode	ENTRY		2351427		True				
ANR	2351433	CFGExitNode	EXIT		2351427		True				
ANR	2351434	Function	PrettyPrint :: SetClassAdIndentation	537:0:11892:11968							
ANR	2351435	FunctionDef	PrettyPrint :: SetClassAdIndentation (int len)		2351434	0					
ANR	2351436	CompoundStatement		539:0:11944:11968	2351434	0					
ANR	2351437	ExpressionStatement	classadIndent = len	540:1:11947:11966	2351434	0	True				
ANR	2351438	AssignmentExpression	classadIndent = len		2351434	0		=			
ANR	2351439	Identifier	classadIndent		2351434	0					
ANR	2351440	Identifier	len		2351434	1					
ANR	2351441	ReturnType	void		2351434	1					
ANR	2351442	Identifier	PrettyPrint :: SetClassAdIndentation		2351434	2					
ANR	2351443	ParameterList	int len		2351434	3					
ANR	2351444	Parameter	int len	538:23:11934:11940	2351434	0	True				
ANR	2351445	ParameterType	int		2351434	0					
ANR	2351446	Identifier	len		2351434	1					
ANR	2351447	CFGEntryNode	ENTRY		2351434		True				
ANR	2351448	CFGExitNode	EXIT		2351434		True				
ANR	2351449	Symbol	len		2351434						
ANR	2351450	Symbol	classadIndent		2351434						
ANR	2351451	Function	PrettyPrint :: GetClassAdIndentation	543:0:11971:12042							
ANR	2351452	FunctionDef	PrettyPrint :: GetClassAdIndentation ()		2351451	0					
ANR	2351453	CompoundStatement		545:0:12014:12042	2351451	0					
ANR	2351454	ReturnStatement	return ( classadIndent ) ;	546:1:12017:12040	2351451	0	True				
ANR	2351455	Identifier	classadIndent		2351451	0					
ANR	2351456	ReturnType	int		2351451	1					
ANR	2351457	Identifier	PrettyPrint :: GetClassAdIndentation		2351451	2					
ANR	2351458	ParameterList			2351451	3					
ANR	2351459	CFGEntryNode	ENTRY		2351451		True				
ANR	2351460	CFGExitNode	EXIT		2351451		True				
ANR	2351461	Symbol	classadIndent		2351451						
ANR	2351462	Function	PrettyPrint :: SetListIndentation	549:0:12045:12115							
ANR	2351463	FunctionDef	PrettyPrint :: SetListIndentation (int len)		2351462	0					
ANR	2351464	CompoundStatement		551:0:12094:12115	2351462	0					
ANR	2351465	ExpressionStatement	listIndent = len	552:1:12097:12113	2351462	0	True				
ANR	2351466	AssignmentExpression	listIndent = len		2351462	0		=			
ANR	2351467	Identifier	listIndent		2351462	0					
ANR	2351468	Identifier	len		2351462	1					
ANR	2351469	ReturnType	void		2351462	1					
ANR	2351470	Identifier	PrettyPrint :: SetListIndentation		2351462	2					
ANR	2351471	ParameterList	int len		2351462	3					
ANR	2351472	Parameter	int len	550:20:12084:12090	2351462	0	True				
ANR	2351473	ParameterType	int		2351462	0					
ANR	2351474	Identifier	len		2351462	1					
ANR	2351475	CFGEntryNode	ENTRY		2351462		True				
ANR	2351476	CFGExitNode	EXIT		2351462		True				
ANR	2351477	Symbol	len		2351462						
ANR	2351478	Symbol	listIndent		2351462						
ANR	2351479	Function	PrettyPrint :: GetListIndentation	555:0:12118:12183							
ANR	2351480	FunctionDef	PrettyPrint :: GetListIndentation ()		2351479	0					
ANR	2351481	CompoundStatement		557:0:12158:12183	2351479	0					
ANR	2351482	ReturnStatement	return ( listIndent ) ;	558:1:12161:12181	2351479	0	True				
ANR	2351483	Identifier	listIndent		2351479	0					
ANR	2351484	ReturnType	int		2351479	1					
ANR	2351485	Identifier	PrettyPrint :: GetListIndentation		2351479	2					
ANR	2351486	ParameterList			2351479	3					
ANR	2351487	CFGEntryNode	ENTRY		2351479		True				
ANR	2351488	CFGExitNode	EXIT		2351479		True				
ANR	2351489	Symbol	listIndent		2351479						
ANR	2351490	Function	PrettyPrint :: SetWantStringQuotes	561:0:12186:12260							
ANR	2351491	FunctionDef	PrettyPrint :: SetWantStringQuotes (bool b)		2351490	0					
ANR	2351492	CompoundStatement		563:0:12235:12260	2351490	0					
ANR	2351493	ExpressionStatement	wantStringQuotes = b	564:1:12238:12258	2351490	0	True				
ANR	2351494	AssignmentExpression	wantStringQuotes = b		2351490	0		=			
ANR	2351495	Identifier	wantStringQuotes		2351490	0					
ANR	2351496	Identifier	b		2351490	1					
ANR	2351497	ReturnType	void		2351490	1					
ANR	2351498	Identifier	PrettyPrint :: SetWantStringQuotes		2351490	2					
ANR	2351499	ParameterList	bool b		2351490	3					
ANR	2351500	Parameter	bool b	562:21:12226:12231	2351490	0	True				
ANR	2351501	ParameterType	bool		2351490	0					
ANR	2351502	Identifier	b		2351490	1					
ANR	2351503	CFGEntryNode	ENTRY		2351490		True				
ANR	2351504	CFGExitNode	EXIT		2351490		True				
ANR	2351505	Symbol	b		2351490						
ANR	2351506	Symbol	wantStringQuotes		2351490						
ANR	2351507	Function	PrettyPrint :: GetWantStringQuotes	567:0:12263:12336							
ANR	2351508	FunctionDef	PrettyPrint :: GetWantStringQuotes ()		2351507	0					
ANR	2351509	CompoundStatement		569:0:12305:12336	2351507	0					
ANR	2351510	ReturnStatement	return ( wantStringQuotes ) ;	570:1:12308:12334	2351507	0	True				
ANR	2351511	Identifier	wantStringQuotes		2351507	0					
ANR	2351512	ReturnType	bool		2351507	1					
ANR	2351513	Identifier	PrettyPrint :: GetWantStringQuotes		2351507	2					
ANR	2351514	ParameterList			2351507	3					
ANR	2351515	CFGEntryNode	ENTRY		2351507		True				
ANR	2351516	CFGExitNode	EXIT		2351507		True				
ANR	2351517	Symbol	wantStringQuotes		2351507						
ANR	2351518	Function	PrettyPrint :: SetMinimalParentheses	573:0:12339:12412							
ANR	2351519	FunctionDef	PrettyPrint :: SetMinimalParentheses (bool b)		2351518	0					
ANR	2351520	CompoundStatement		575:0:12390:12412	2351518	0					
ANR	2351521	ExpressionStatement	minimalParens = b	576:1:12393:12410	2351518	0	True				
ANR	2351522	AssignmentExpression	minimalParens = b		2351518	0		=			
ANR	2351523	Identifier	minimalParens		2351518	0					
ANR	2351524	Identifier	b		2351518	1					
ANR	2351525	ReturnType	void		2351518	1					
ANR	2351526	Identifier	PrettyPrint :: SetMinimalParentheses		2351518	2					
ANR	2351527	ParameterList	bool b		2351518	3					
ANR	2351528	Parameter	bool b	574:23:12381:12386	2351518	0	True				
ANR	2351529	ParameterType	bool		2351518	0					
ANR	2351530	Identifier	b		2351518	1					
ANR	2351531	CFGEntryNode	ENTRY		2351518		True				
ANR	2351532	CFGExitNode	EXIT		2351518		True				
ANR	2351533	Symbol	b		2351518						
ANR	2351534	Symbol	minimalParens		2351518						
ANR	2351535	Function	PrettyPrint :: GetMinimalParentheses	579:0:12415:12487							
ANR	2351536	FunctionDef	PrettyPrint :: GetMinimalParentheses ()		2351535	0					
ANR	2351537	CompoundStatement		581:0:12459:12487	2351535	0					
ANR	2351538	ReturnStatement	return ( minimalParens ) ;	582:1:12462:12485	2351535	0	True				
ANR	2351539	Identifier	minimalParens		2351535	0					
ANR	2351540	ReturnType	bool		2351535	1					
ANR	2351541	Identifier	PrettyPrint :: GetMinimalParentheses		2351535	2					
ANR	2351542	ParameterList			2351535	3					
ANR	2351543	CFGEntryNode	ENTRY		2351535		True				
ANR	2351544	CFGExitNode	EXIT		2351535		True				
ANR	2351545	Symbol	minimalParens		2351535						
ANR	2351546	Function	PrettyPrint :: UnparseAux	587:0:12492:14124							
ANR	2351547	FunctionDef	"PrettyPrint :: UnparseAux (string & buffer , Operation :: OpKind op , ExprTree * op1 , ExprTree * op2 , ExprTree * op3)"		2351546	0					
ANR	2351548	CompoundStatement		590:0:12603:14124	2351546	0					
ANR	2351549	IfStatement	if ( ! minimalParens )		2351546	0					
ANR	2351550	Condition	! minimalParens	591:5:12610:12623	2351546	0	True				
ANR	2351551	UnaryOperationExpression	! minimalParens		2351546	0					
ANR	2351552	UnaryOperator	!		2351546	0					
ANR	2351553	Identifier	minimalParens		2351546	1					
ANR	2351554	CompoundStatement		2:22:23:23	2351546	1					
ANR	2351555	ExpressionStatement	"ClassAdUnParser :: UnparseAux ( buffer , op , op1 , op2 , op3 )"	592:2:12631:12687	2351546	0	True				
ANR	2351556	CallExpression	"ClassAdUnParser :: UnparseAux ( buffer , op , op1 , op2 , op3 )"		2351546	0					
ANR	2351557	Callee	ClassAdUnParser :: UnparseAux		2351546	0					
ANR	2351558	Identifier	ClassAdUnParser :: UnparseAux		2351546	0					
ANR	2351559	ArgumentList	buffer		2351546	1					
ANR	2351560	Argument	buffer		2351546	0					
ANR	2351561	Identifier	buffer		2351546	0					
ANR	2351562	Argument	op		2351546	1					
ANR	2351563	Identifier	op		2351546	0					
ANR	2351564	Argument	op1		2351546	2					
ANR	2351565	Identifier	op1		2351546	0					
ANR	2351566	Argument	op2		2351546	3					
ANR	2351567	Identifier	op2		2351546	0					
ANR	2351568	Argument	op3		2351546	4					
ANR	2351569	Identifier	op3		2351546	0					
ANR	2351570	ReturnStatement	return ;	593:2:12691:12697	2351546	1	True				
ANR	2351571	IfStatement	if ( op == Operation :: PARENTHESES_OP )		2351546	1					
ANR	2351572	Condition	op == Operation :: PARENTHESES_OP	597:5:12736:12764	2351546	0	True				
ANR	2351573	EqualityExpression	op == Operation :: PARENTHESES_OP		2351546	0		==			
ANR	2351574	Identifier	op		2351546	0					
ANR	2351575	Identifier	Operation :: PARENTHESES_OP		2351546	1					
ANR	2351576	CompoundStatement		8:37:164:164	2351546	1					
ANR	2351577	ExpressionStatement	"Unparse ( buffer , op1 )"	598:2:12772:12794	2351546	0	True				
ANR	2351578	CallExpression	"Unparse ( buffer , op1 )"		2351546	0					
ANR	2351579	Callee	Unparse		2351546	0					
ANR	2351580	Identifier	Unparse		2351546	0					
ANR	2351581	ArgumentList	buffer		2351546	1					
ANR	2351582	Argument	buffer		2351546	0					
ANR	2351583	Identifier	buffer		2351546	0					
ANR	2351584	Argument	op1		2351546	1					
ANR	2351585	Identifier	op1		2351546	0					
ANR	2351586	ReturnStatement	return ;	599:2:12798:12804	2351546	1	True				
ANR	2351587	IfStatement	if ( op == Operation :: UNARY_PLUS_OP || op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP )		2351546	2					
ANR	2351588	Condition	op == Operation :: UNARY_PLUS_OP || op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP	602:5:12847:12977	2351546	0	True				
ANR	2351589	OrExpression	op == Operation :: UNARY_PLUS_OP || op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP		2351546	0		||			
ANR	2351590	EqualityExpression	op == Operation :: UNARY_PLUS_OP		2351546	0		==			
ANR	2351591	Identifier	op		2351546	0					
ANR	2351592	Identifier	Operation :: UNARY_PLUS_OP		2351546	1					
ANR	2351593	OrExpression	op == Operation :: UNARY_MINUS_OP || op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP		2351546	1		||			
ANR	2351594	EqualityExpression	op == Operation :: UNARY_MINUS_OP		2351546	0		==			
ANR	2351595	Identifier	op		2351546	0					
ANR	2351596	Identifier	Operation :: UNARY_MINUS_OP		2351546	1					
ANR	2351597	OrExpression	op == Operation :: LOGICAL_NOT_OP || op == Operation :: BITWISE_NOT_OP		2351546	1		||			
ANR	2351598	EqualityExpression	op == Operation :: LOGICAL_NOT_OP		2351546	0		==			
ANR	2351599	Identifier	op		2351546	0					
ANR	2351600	Identifier	Operation :: LOGICAL_NOT_OP		2351546	1					
ANR	2351601	EqualityExpression	op == Operation :: BITWISE_NOT_OP		2351546	1		==			
ANR	2351602	Identifier	op		2351546	0					
ANR	2351603	Identifier	Operation :: BITWISE_NOT_OP		2351546	1					
ANR	2351604	CompoundStatement		14:68:377:377	2351546	1					
ANR	2351605	ExpressionStatement	buffer += opString [ op ]	604:2:12985:13007	2351546	0	True				
ANR	2351606	AssignmentExpression	buffer += opString [ op ]		2351546	0		+=			
ANR	2351607	Identifier	buffer		2351546	0					
ANR	2351608	ArrayIndexing	opString [ op ]		2351546	1					
ANR	2351609	Identifier	opString		2351546	0					
ANR	2351610	Identifier	op		2351546	1					
ANR	2351611	ExpressionStatement	"Unparse ( buffer , op1 )"	605:2:13011:13033	2351546	1	True				
ANR	2351612	CallExpression	"Unparse ( buffer , op1 )"		2351546	0					
ANR	2351613	Callee	Unparse		2351546	0					
ANR	2351614	Identifier	Unparse		2351546	0					
ANR	2351615	ArgumentList	buffer		2351546	1					
ANR	2351616	Argument	buffer		2351546	0					
ANR	2351617	Identifier	buffer		2351546	0					
ANR	2351618	Argument	op1		2351546	1					
ANR	2351619	Identifier	op1		2351546	0					
ANR	2351620	ReturnStatement	return ;	606:2:13037:13043	2351546	2	True				
ANR	2351621	IfStatement	if ( op == Operation :: TERNARY_OP )		2351546	3					
ANR	2351622	Condition	op == Operation :: TERNARY_OP	609:5:13087:13111	2351546	0	True				
ANR	2351623	EqualityExpression	op == Operation :: TERNARY_OP		2351546	0		==			
ANR	2351624	Identifier	op		2351546	0					
ANR	2351625	Identifier	Operation :: TERNARY_OP		2351546	1					
ANR	2351626	CompoundStatement		20:33:511:511	2351546	1					
ANR	2351627	ExpressionStatement	"Unparse ( buffer , op1 )"	610:2:13119:13141	2351546	0	True				
ANR	2351628	CallExpression	"Unparse ( buffer , op1 )"		2351546	0					
ANR	2351629	Callee	Unparse		2351546	0					
ANR	2351630	Identifier	Unparse		2351546	0					
ANR	2351631	ArgumentList	buffer		2351546	1					
ANR	2351632	Argument	buffer		2351546	0					
ANR	2351633	Identifier	buffer		2351546	0					
ANR	2351634	Argument	op1		2351546	1					
ANR	2351635	Identifier	op1		2351546	0					
ANR	2351636	ExpressionStatement	"buffer += "" ? """	611:2:13145:13160	2351546	1	True				
ANR	2351637	AssignmentExpression	"buffer += "" ? """		2351546	0		+=			
ANR	2351638	Identifier	buffer		2351546	0					
ANR	2351639	PrimaryExpression	""" ? """		2351546	1					
ANR	2351640	ExpressionStatement	"Unparse ( buffer , op2 )"	612:2:13164:13186	2351546	2	True				
ANR	2351641	CallExpression	"Unparse ( buffer , op2 )"		2351546	0					
ANR	2351642	Callee	Unparse		2351546	0					
ANR	2351643	Identifier	Unparse		2351546	0					
ANR	2351644	ArgumentList	buffer		2351546	1					
ANR	2351645	Argument	buffer		2351546	0					
ANR	2351646	Identifier	buffer		2351546	0					
ANR	2351647	Argument	op2		2351546	1					
ANR	2351648	Identifier	op2		2351546	0					
ANR	2351649	ExpressionStatement	"buffer += "" : """	613:2:13190:13205	2351546	3	True				
ANR	2351650	AssignmentExpression	"buffer += "" : """		2351546	0		+=			
ANR	2351651	Identifier	buffer		2351546	0					
ANR	2351652	PrimaryExpression	""" : """		2351546	1					
ANR	2351653	ExpressionStatement	"Unparse ( buffer , op3 )"	614:2:13209:13231	2351546	4	True				
ANR	2351654	CallExpression	"Unparse ( buffer , op3 )"		2351546	0					
ANR	2351655	Callee	Unparse		2351546	0					
ANR	2351656	Identifier	Unparse		2351546	0					
ANR	2351657	ArgumentList	buffer		2351546	1					
ANR	2351658	Argument	buffer		2351546	0					
ANR	2351659	Identifier	buffer		2351546	0					
ANR	2351660	Argument	op3		2351546	1					
ANR	2351661	Identifier	op3		2351546	0					
ANR	2351662	ReturnStatement	return ;	615:2:13235:13241	2351546	5	True				
ANR	2351663	IfStatement	if ( op == Operation :: SUBSCRIPT_OP )		2351546	4					
ANR	2351664	Condition	op == Operation :: SUBSCRIPT_OP	618:5:13287:13313	2351546	0	True				
ANR	2351665	EqualityExpression	op == Operation :: SUBSCRIPT_OP		2351546	0		==			
ANR	2351666	Identifier	op		2351546	0					
ANR	2351667	Identifier	Operation :: SUBSCRIPT_OP		2351546	1					
ANR	2351668	CompoundStatement		29:35:713:713	2351546	1					
ANR	2351669	ExpressionStatement	"Unparse ( buffer , op1 )"	619:2:13321:13343	2351546	0	True				
ANR	2351670	CallExpression	"Unparse ( buffer , op1 )"		2351546	0					
ANR	2351671	Callee	Unparse		2351546	0					
ANR	2351672	Identifier	Unparse		2351546	0					
ANR	2351673	ArgumentList	buffer		2351546	1					
ANR	2351674	Argument	buffer		2351546	0					
ANR	2351675	Identifier	buffer		2351546	0					
ANR	2351676	Argument	op1		2351546	1					
ANR	2351677	Identifier	op1		2351546	0					
ANR	2351678	ExpressionStatement	buffer += '['	620:2:13347:13360	2351546	1	True				
ANR	2351679	AssignmentExpression	buffer += '['		2351546	0		+=			
ANR	2351680	Identifier	buffer		2351546	0					
ANR	2351681	PrimaryExpression	'['		2351546	1					
ANR	2351682	ExpressionStatement	"Unparse ( buffer , op2 )"	621:2:13364:13386	2351546	2	True				
ANR	2351683	CallExpression	"Unparse ( buffer , op2 )"		2351546	0					
ANR	2351684	Callee	Unparse		2351546	0					
ANR	2351685	Identifier	Unparse		2351546	0					
ANR	2351686	ArgumentList	buffer		2351546	1					
ANR	2351687	Argument	buffer		2351546	0					
ANR	2351688	Identifier	buffer		2351546	0					
ANR	2351689	Argument	op2		2351546	1					
ANR	2351690	Identifier	op2		2351546	0					
ANR	2351691	ExpressionStatement	buffer += ']'	622:2:13390:13403	2351546	3	True				
ANR	2351692	AssignmentExpression	buffer += ']'		2351546	0		+=			
ANR	2351693	Identifier	buffer		2351546	0					
ANR	2351694	PrimaryExpression	']'		2351546	1					
ANR	2351695	ReturnStatement	return ;	623:2:13407:13413	2351546	4	True				
ANR	2351696	IdentifierDeclStatement	Operation :: OpKind top ;	626:1:13450:13471	2351546	5	True				
ANR	2351697	IdentifierDecl	top		2351546	0					
ANR	2351698	IdentifierDeclType	Operation :: OpKind		2351546	0					
ANR	2351699	Identifier	top		2351546	1					
ANR	2351700	IdentifierDeclStatement	"ExprTree * t1 , * t2 , * t3 ;"	627:1:13474:13498	2351546	6	True				
ANR	2351701	IdentifierDecl	* t1		2351546	0					
ANR	2351702	IdentifierDeclType	ExprTree *		2351546	0					
ANR	2351703	Identifier	t1		2351546	1					
ANR	2351704	IdentifierDecl	* t2		2351546	1					
ANR	2351705	IdentifierDeclType	ExprTree *		2351546	0					
ANR	2351706	Identifier	t2		2351546	1					
ANR	2351707	IdentifierDecl	* t3		2351546	2					
ANR	2351708	IdentifierDeclType	ExprTree *		2351546	0					
ANR	2351709	Identifier	t3		2351546	1					
ANR	2351710	IfStatement	if ( op1 -> GetKind ( ) == ExprTree :: OP_NODE )		2351546	7					
ANR	2351711	Condition	op1 -> GetKind ( ) == ExprTree :: OP_NODE	629:5:13506:13541	2351546	0	True				
ANR	2351712	EqualityExpression	op1 -> GetKind ( ) == ExprTree :: OP_NODE		2351546	0		==			
ANR	2351713	CallExpression	op1 -> GetKind ( )		2351546	0					
ANR	2351714	Callee	op1 -> GetKind		2351546	0					
ANR	2351715	PtrMemberAccess	op1 -> GetKind		2351546	0					
ANR	2351716	Identifier	op1		2351546	0					
ANR	2351717	Identifier	GetKind		2351546	1					
ANR	2351718	ArgumentList			2351546	1					
ANR	2351719	Identifier	ExprTree :: OP_NODE		2351546	1					
ANR	2351720	CompoundStatement		40:44:941:941	2351546	1					
ANR	2351721	ExpressionStatement	"( ( Operation * ) op1 ) -> GetComponents ( top , t1 , t2 , t3 )"	630:2:13549:13600	2351546	0	True				
ANR	2351722	CallExpression	"( ( Operation * ) op1 ) -> GetComponents ( top , t1 , t2 , t3 )"		2351546	0					
ANR	2351723	Callee	( ( Operation * ) op1 ) -> GetComponents		2351546	0					
ANR	2351724	PtrMemberAccess	( ( Operation * ) op1 ) -> GetComponents		2351546	0					
ANR	2351725	CastExpression	( Operation * ) op1		2351546	0					
ANR	2351726	CastTarget	Operation *		2351546	0					
ANR	2351727	Identifier	op1		2351546	1					
ANR	2351728	Identifier	GetComponents		2351546	1					
ANR	2351729	ArgumentList	top		2351546	1					
ANR	2351730	Argument	top		2351546	0					
ANR	2351731	Identifier	top		2351546	0					
ANR	2351732	Argument	t1		2351546	1					
ANR	2351733	Identifier	t1		2351546	0					
ANR	2351734	Argument	t2		2351546	2					
ANR	2351735	Identifier	t2		2351546	0					
ANR	2351736	Argument	t3		2351546	3					
ANR	2351737	Identifier	t3		2351546	0					
ANR	2351738	IfStatement	if ( Operation :: PrecedenceLevel ( top ) < Operation :: PrecedenceLevel ( op ) )		2351546	1					
ANR	2351739	Condition	Operation :: PrecedenceLevel ( top ) < Operation :: PrecedenceLevel ( op )	631:6:13608:13669	2351546	0	True				
ANR	2351740	RelationalExpression	Operation :: PrecedenceLevel ( top ) < Operation :: PrecedenceLevel ( op )		2351546	0		<			
ANR	2351741	CallExpression	Operation :: PrecedenceLevel ( top )		2351546	0					
ANR	2351742	Callee	Operation :: PrecedenceLevel		2351546	0					
ANR	2351743	Identifier	Operation :: PrecedenceLevel		2351546	0					
ANR	2351744	ArgumentList	top		2351546	1					
ANR	2351745	Argument	top		2351546	0					
ANR	2351746	Identifier	top		2351546	0					
ANR	2351747	CallExpression	Operation :: PrecedenceLevel ( op )		2351546	1					
ANR	2351748	Callee	Operation :: PrecedenceLevel		2351546	0					
ANR	2351749	Identifier	Operation :: PrecedenceLevel		2351546	0					
ANR	2351750	ArgumentList	op		2351546	1					
ANR	2351751	Argument	op		2351546	0					
ANR	2351752	Identifier	op		2351546	0					
ANR	2351753	CompoundStatement		42:71:1069:1069	2351546	1					
ANR	2351754	ExpressionStatement	"buffer += "" ( """	632:3:13678:13693	2351546	0	True				
ANR	2351755	AssignmentExpression	"buffer += "" ( """		2351546	0		+=			
ANR	2351756	Identifier	buffer		2351546	0					
ANR	2351757	PrimaryExpression	""" ( """		2351546	1					
ANR	2351758	ExpressionStatement	"UnparseAux ( buffer , top , t1 , t2 , t3 )"	633:3:13698:13735	2351546	1	True				
ANR	2351759	CallExpression	"UnparseAux ( buffer , top , t1 , t2 , t3 )"		2351546	0					
ANR	2351760	Callee	UnparseAux		2351546	0					
ANR	2351761	Identifier	UnparseAux		2351546	0					
ANR	2351762	ArgumentList	buffer		2351546	1					
ANR	2351763	Argument	buffer		2351546	0					
ANR	2351764	Identifier	buffer		2351546	0					
ANR	2351765	Argument	top		2351546	1					
ANR	2351766	Identifier	top		2351546	0					
ANR	2351767	Argument	t1		2351546	2					
ANR	2351768	Identifier	t1		2351546	0					
ANR	2351769	Argument	t2		2351546	3					
ANR	2351770	Identifier	t2		2351546	0					
ANR	2351771	Argument	t3		2351546	4					
ANR	2351772	Identifier	t3		2351546	0					
ANR	2351773	ExpressionStatement	"buffer += "" ) """	634:3:13740:13755	2351546	2	True				
ANR	2351774	AssignmentExpression	"buffer += "" ) """		2351546	0		+=			
ANR	2351775	Identifier	buffer		2351546	0					
ANR	2351776	PrimaryExpression	""" ) """		2351546	1					
ANR	2351777	ElseStatement	else		2351546	0					
ANR	2351778	CompoundStatement		47:8:1165:1165	2351546	0					
ANR	2351779	ExpressionStatement	"Unparse ( buffer , op1 )"	637:2:13773:13795	2351546	0	True				
ANR	2351780	CallExpression	"Unparse ( buffer , op1 )"		2351546	0					
ANR	2351781	Callee	Unparse		2351546	0					
ANR	2351782	Identifier	Unparse		2351546	0					
ANR	2351783	ArgumentList	buffer		2351546	1					
ANR	2351784	Argument	buffer		2351546	0					
ANR	2351785	Identifier	buffer		2351546	0					
ANR	2351786	Argument	op1		2351546	1					
ANR	2351787	Identifier	op1		2351546	0					
ANR	2351788	ExpressionStatement	buffer += opString [ op ]	639:1:13801:13823	2351546	8	True				
ANR	2351789	AssignmentExpression	buffer += opString [ op ]		2351546	0		+=			
ANR	2351790	Identifier	buffer		2351546	0					
ANR	2351791	ArrayIndexing	opString [ op ]		2351546	1					
ANR	2351792	Identifier	opString		2351546	0					
ANR	2351793	Identifier	op		2351546	1					
ANR	2351794	IfStatement	if ( op2 -> GetKind ( ) == ExprTree :: OP_NODE )		2351546	9					
ANR	2351795	Condition	op2 -> GetKind ( ) == ExprTree :: OP_NODE	640:5:13830:13865	2351546	0	True				
ANR	2351796	EqualityExpression	op2 -> GetKind ( ) == ExprTree :: OP_NODE		2351546	0		==			
ANR	2351797	CallExpression	op2 -> GetKind ( )		2351546	0					
ANR	2351798	Callee	op2 -> GetKind		2351546	0					
ANR	2351799	PtrMemberAccess	op2 -> GetKind		2351546	0					
ANR	2351800	Identifier	op2		2351546	0					
ANR	2351801	Identifier	GetKind		2351546	1					
ANR	2351802	ArgumentList			2351546	1					
ANR	2351803	Identifier	ExprTree :: OP_NODE		2351546	1					
ANR	2351804	CompoundStatement		51:44:1265:1265	2351546	1					
ANR	2351805	ExpressionStatement	"( ( Operation * ) op2 ) -> GetComponents ( top , t1 , t2 , t3 )"	641:2:13873:13924	2351546	0	True				
ANR	2351806	CallExpression	"( ( Operation * ) op2 ) -> GetComponents ( top , t1 , t2 , t3 )"		2351546	0					
ANR	2351807	Callee	( ( Operation * ) op2 ) -> GetComponents		2351546	0					
ANR	2351808	PtrMemberAccess	( ( Operation * ) op2 ) -> GetComponents		2351546	0					
ANR	2351809	CastExpression	( Operation * ) op2		2351546	0					
ANR	2351810	CastTarget	Operation *		2351546	0					
ANR	2351811	Identifier	op2		2351546	1					
ANR	2351812	Identifier	GetComponents		2351546	1					
ANR	2351813	ArgumentList	top		2351546	1					
ANR	2351814	Argument	top		2351546	0					
ANR	2351815	Identifier	top		2351546	0					
ANR	2351816	Argument	t1		2351546	1					
ANR	2351817	Identifier	t1		2351546	0					
ANR	2351818	Argument	t2		2351546	2					
ANR	2351819	Identifier	t2		2351546	0					
ANR	2351820	Argument	t3		2351546	3					
ANR	2351821	Identifier	t3		2351546	0					
ANR	2351822	IfStatement	if ( Operation :: PrecedenceLevel ( top ) < Operation :: PrecedenceLevel ( op ) )		2351546	1					
ANR	2351823	Condition	Operation :: PrecedenceLevel ( top ) < Operation :: PrecedenceLevel ( op )	642:6:13932:13993	2351546	0	True				
ANR	2351824	RelationalExpression	Operation :: PrecedenceLevel ( top ) < Operation :: PrecedenceLevel ( op )		2351546	0		<			
ANR	2351825	CallExpression	Operation :: PrecedenceLevel ( top )		2351546	0					
ANR	2351826	Callee	Operation :: PrecedenceLevel		2351546	0					
ANR	2351827	Identifier	Operation :: PrecedenceLevel		2351546	0					
ANR	2351828	ArgumentList	top		2351546	1					
ANR	2351829	Argument	top		2351546	0					
ANR	2351830	Identifier	top		2351546	0					
ANR	2351831	CallExpression	Operation :: PrecedenceLevel ( op )		2351546	1					
ANR	2351832	Callee	Operation :: PrecedenceLevel		2351546	0					
ANR	2351833	Identifier	Operation :: PrecedenceLevel		2351546	0					
ANR	2351834	ArgumentList	op		2351546	1					
ANR	2351835	Argument	op		2351546	0					
ANR	2351836	Identifier	op		2351546	0					
ANR	2351837	CompoundStatement		53:71:1393:1393	2351546	1					
ANR	2351838	ExpressionStatement	"buffer += "" ( """	643:3:14002:14017	2351546	0	True				
ANR	2351839	AssignmentExpression	"buffer += "" ( """		2351546	0		+=			
ANR	2351840	Identifier	buffer		2351546	0					
ANR	2351841	PrimaryExpression	""" ( """		2351546	1					
ANR	2351842	ExpressionStatement	"UnparseAux ( buffer , top , t1 , t2 , t3 )"	644:3:14022:14059	2351546	1	True				
ANR	2351843	CallExpression	"UnparseAux ( buffer , top , t1 , t2 , t3 )"		2351546	0					
ANR	2351844	Callee	UnparseAux		2351546	0					
ANR	2351845	Identifier	UnparseAux		2351546	0					
ANR	2351846	ArgumentList	buffer		2351546	1					
ANR	2351847	Argument	buffer		2351546	0					
ANR	2351848	Identifier	buffer		2351546	0					
ANR	2351849	Argument	top		2351546	1					
ANR	2351850	Identifier	top		2351546	0					
ANR	2351851	Argument	t1		2351546	2					
ANR	2351852	Identifier	t1		2351546	0					
ANR	2351853	Argument	t2		2351546	3					
ANR	2351854	Identifier	t2		2351546	0					
ANR	2351855	Argument	t3		2351546	4					
ANR	2351856	Identifier	t3		2351546	0					
ANR	2351857	ExpressionStatement	"buffer += "" ) """	645:3:14064:14079	2351546	2	True				
ANR	2351858	AssignmentExpression	"buffer += "" ) """		2351546	0		+=			
ANR	2351859	Identifier	buffer		2351546	0					
ANR	2351860	PrimaryExpression	""" ) """		2351546	1					
ANR	2351861	ElseStatement	else		2351546	0					
ANR	2351862	CompoundStatement		58:8:1489:1489	2351546	0					
ANR	2351863	ExpressionStatement	"Unparse ( buffer , op2 )"	648:2:14097:14119	2351546	0	True				
ANR	2351864	CallExpression	"Unparse ( buffer , op2 )"		2351546	0					
ANR	2351865	Callee	Unparse		2351546	0					
ANR	2351866	Identifier	Unparse		2351546	0					
ANR	2351867	ArgumentList	buffer		2351546	1					
ANR	2351868	Argument	buffer		2351546	0					
ANR	2351869	Identifier	buffer		2351546	0					
ANR	2351870	Argument	op2		2351546	1					
ANR	2351871	Identifier	op2		2351546	0					
ANR	2351872	ReturnType	void		2351546	1					
ANR	2351873	Identifier	PrettyPrint :: UnparseAux		2351546	2					
ANR	2351874	ParameterList	"string & buffer , Operation :: OpKind op , ExprTree * op1 , ExprTree * op2 , ExprTree * op3"		2351546	3					
ANR	2351875	Parameter	string & buffer	588:11:12522:12535	2351546	0	True				
ANR	2351876	ParameterType	string &		2351546	0					
ANR	2351877	Identifier	buffer		2351546	1					
ANR	2351878	Parameter	Operation :: OpKind op	588:26:12537:12556	2351546	1	True				
ANR	2351879	ParameterType	Operation :: OpKind		2351546	0					
ANR	2351880	Identifier	op		2351546	1					
ANR	2351881	Parameter	ExprTree * op1	588:47:12558:12570	2351546	2	True				
ANR	2351882	ParameterType	ExprTree *		2351546	0					
ANR	2351883	Identifier	op1		2351546	1					
ANR	2351884	Parameter	ExprTree * op2	588:61:12572:12584	2351546	3	True				
ANR	2351885	ParameterType	ExprTree *		2351546	0					
ANR	2351886	Identifier	op2		2351546	1					
ANR	2351887	Parameter	ExprTree * op3	589:1:12588:12600	2351546	4	True				
ANR	2351888	ParameterType	ExprTree *		2351546	0					
ANR	2351889	Identifier	op3		2351546	1					
ANR	2351890	CFGEntryNode	ENTRY		2351546		True				
ANR	2351891	CFGExitNode	EXIT		2351546		True				
ANR	2351892	Symbol	ExprTree :: OP_NODE		2351546						
ANR	2351893	Symbol	* op		2351546						
ANR	2351894	Symbol	opString		2351546						
ANR	2351895	Symbol	op1 -> GetKind		2351546						
ANR	2351896	Symbol	Operation :: LOGICAL_NOT_OP		2351546						
ANR	2351897	Symbol	Operation :: UNARY_MINUS_OP		2351546						
ANR	2351898	Symbol	Operation :: TERNARY_OP		2351546						
ANR	2351899	Symbol	top		2351546						
ANR	2351900	Symbol	Operation :: BITWISE_NOT_OP		2351546						
ANR	2351901	Symbol	* op1		2351546						
ANR	2351902	Symbol	buffer		2351546						
ANR	2351903	Symbol	minimalParens		2351546						
ANR	2351904	Symbol	Operation :: SUBSCRIPT_OP		2351546						
ANR	2351905	Symbol	* op2		2351546						
ANR	2351906	Symbol	Operation :: UNARY_PLUS_OP		2351546						
ANR	2351907	Symbol	op		2351546						
ANR	2351908	Symbol	Operation :: PrecedenceLevel		2351546						
ANR	2351909	Symbol	op2 -> GetKind		2351546						
ANR	2351910	Symbol	op2		2351546						
ANR	2351911	Symbol	op1		2351546						
ANR	2351912	Symbol	op3		2351546						
ANR	2351913	Symbol	Operation :: PARENTHESES_OP		2351546						
ANR	2351914	Symbol	* opString		2351546						
ANR	2351915	Symbol	t1		2351546						
ANR	2351916	Symbol	t2		2351546						
ANR	2351917	Symbol	t3		2351546						
ANR	2351918	Function	PrettyPrint :: UnparseAux	653:0:14128:14922							
ANR	2351919	FunctionDef	"PrettyPrint :: UnparseAux (string & buffer , vector < pair < string , ExprTree * > > & attrs)"		2351918	0					
ANR	2351920	CompoundStatement		655:0:14217:14922	2351918	0					
ANR	2351921	IdentifierDeclStatement	"vector < pair < string , ExprTree * > > :: iterator itr ;"	656:1:14220:14267	2351918	0	True				
ANR	2351922	IdentifierDecl	itr		2351918	0					
ANR	2351923	IdentifierDeclType	"vector < pair < string , ExprTree * > > :: iterator"		2351918	0					
ANR	2351924	Identifier	itr		2351918	1					
ANR	2351925	IfStatement	if ( classadIndent > 0 )		2351918	1					
ANR	2351926	Condition	classadIndent > 0	658:5:14275:14291	2351918	0	True				
ANR	2351927	RelationalExpression	classadIndent > 0		2351918	0		>			
ANR	2351928	Identifier	classadIndent		2351918	0					
ANR	2351929	PrimaryExpression	0		2351918	1					
ANR	2351930	CompoundStatement		4:25:77:77	2351918	1					
ANR	2351931	ExpressionStatement	indentLevel += classadIndent	659:2:14299:14327	2351918	0	True				
ANR	2351932	AssignmentExpression	indentLevel += classadIndent		2351918	0		+=			
ANR	2351933	Identifier	indentLevel		2351918	0					
ANR	2351934	Identifier	classadIndent		2351918	1					
ANR	2351935	ExpressionStatement	"buffer += '\\n' + string ( indentLevel , ' ' ) + '['"	660:2:14331:14380	2351918	1	True				
ANR	2351936	AssignmentExpression	"buffer += '\\n' + string ( indentLevel , ' ' ) + '['"		2351918	0		+=			
ANR	2351937	Identifier	buffer		2351918	0					
ANR	2351938	AdditiveExpression	"'\\n' + string ( indentLevel , ' ' ) + '['"		2351918	1		+			
ANR	2351939	PrimaryExpression	'\\n'		2351918	0					
ANR	2351940	AdditiveExpression	"string ( indentLevel , ' ' ) + '['"		2351918	1		+			
ANR	2351941	CallExpression	"string ( indentLevel , ' ' )"		2351918	0					
ANR	2351942	Callee	string		2351918	0					
ANR	2351943	Identifier	string		2351918	0					
ANR	2351944	ArgumentList	indentLevel		2351918	1					
ANR	2351945	Argument	indentLevel		2351918	0					
ANR	2351946	Identifier	indentLevel		2351918	0					
ANR	2351947	Argument	' '		2351918	1					
ANR	2351948	PrimaryExpression	' '		2351918	0					
ANR	2351949	PrimaryExpression	'['		2351918	1					
ANR	2351950	ExpressionStatement	indentLevel += classadIndent	661:2:14384:14412	2351918	2	True				
ANR	2351951	AssignmentExpression	indentLevel += classadIndent		2351918	0		+=			
ANR	2351952	Identifier	indentLevel		2351918	0					
ANR	2351953	Identifier	classadIndent		2351918	1					
ANR	2351954	ElseStatement	else		2351918	0					
ANR	2351955	CompoundStatement		8:8:204:204	2351918	0					
ANR	2351956	ExpressionStatement	"buffer += ""[ """	663:2:14426:14440	2351918	0	True				
ANR	2351957	AssignmentExpression	"buffer += ""[ """		2351918	0		+=			
ANR	2351958	Identifier	buffer		2351918	0					
ANR	2351959	PrimaryExpression	"""[ """		2351918	1					
ANR	2351960	ForStatement	for ( itr = attrs . begin ( ) ; itr != attrs . end ( ) ; itr ++ )		2351918	2					
ANR	2351961	ForInit	itr = attrs . begin ( ) ;	665:6:14451:14469	2351918	0	True				
ANR	2351962	AssignmentExpression	itr = attrs . begin ( )		2351918	0		=			
ANR	2351963	Identifier	itr		2351918	0					
ANR	2351964	CallExpression	attrs . begin ( )		2351918	1					
ANR	2351965	Callee	attrs . begin		2351918	0					
ANR	2351966	MemberAccess	attrs . begin		2351918	0					
ANR	2351967	Identifier	attrs		2351918	0					
ANR	2351968	Identifier	begin		2351918	1					
ANR	2351969	ArgumentList			2351918	1					
ANR	2351970	Condition	itr != attrs . end ( )	665:26:14471:14487	2351918	1	True				
ANR	2351971	EqualityExpression	itr != attrs . end ( )		2351918	0		!=			
ANR	2351972	Identifier	itr		2351918	0					
ANR	2351973	CallExpression	attrs . end ( )		2351918	1					
ANR	2351974	Callee	attrs . end		2351918	0					
ANR	2351975	MemberAccess	attrs . end		2351918	0					
ANR	2351976	Identifier	attrs		2351918	0					
ANR	2351977	Identifier	end		2351918	1					
ANR	2351978	ArgumentList			2351918	1					
ANR	2351979	PostIncDecOperationExpression	itr ++	665:45:14490:14494	2351918	2	True				
ANR	2351980	Identifier	itr		2351918	0					
ANR	2351981	IncDec	++		2351918	1					
ANR	2351982	CompoundStatement		11:53:280:280	2351918	3					
ANR	2351983	IfStatement	if ( classadIndent > 0 )		2351918	0					
ANR	2351984	Condition	classadIndent > 0	666:6:14506:14522	2351918	0	True				
ANR	2351985	RelationalExpression	classadIndent > 0		2351918	0		>			
ANR	2351986	Identifier	classadIndent		2351918	0					
ANR	2351987	PrimaryExpression	0		2351918	1					
ANR	2351988	CompoundStatement		12:26:308:308	2351918	1					
ANR	2351989	ExpressionStatement	"buffer += '\\n' + string ( indentLevel , ' ' )"	667:3:14531:14574	2351918	0	True				
ANR	2351990	AssignmentExpression	"buffer += '\\n' + string ( indentLevel , ' ' )"		2351918	0		+=			
ANR	2351991	Identifier	buffer		2351918	0					
ANR	2351992	AdditiveExpression	"'\\n' + string ( indentLevel , ' ' )"		2351918	1		+			
ANR	2351993	PrimaryExpression	'\\n'		2351918	0					
ANR	2351994	CallExpression	"string ( indentLevel , ' ' )"		2351918	1					
ANR	2351995	Callee	string		2351918	0					
ANR	2351996	Identifier	string		2351918	0					
ANR	2351997	ArgumentList	indentLevel		2351918	1					
ANR	2351998	Argument	indentLevel		2351918	0					
ANR	2351999	Identifier	indentLevel		2351918	0					
ANR	2352000	Argument	' '		2351918	1					
ANR	2352001	PrimaryExpression	' '		2351918	0					
ANR	2352002	ExpressionStatement	"ClassAdUnParser :: UnparseAux ( buffer , itr -> first )"	669:2:14583:14632	2351918	1	True				
ANR	2352003	CallExpression	"ClassAdUnParser :: UnparseAux ( buffer , itr -> first )"		2351918	0					
ANR	2352004	Callee	ClassAdUnParser :: UnparseAux		2351918	0					
ANR	2352005	Identifier	ClassAdUnParser :: UnparseAux		2351918	0					
ANR	2352006	ArgumentList	buffer		2351918	1					
ANR	2352007	Argument	buffer		2351918	0					
ANR	2352008	Identifier	buffer		2351918	0					
ANR	2352009	Argument	itr -> first		2351918	1					
ANR	2352010	PtrMemberAccess	itr -> first		2351918	0					
ANR	2352011	Identifier	itr		2351918	0					
ANR	2352012	Identifier	first		2351918	1					
ANR	2352013	ExpressionStatement	"buffer += "" = """	670:2:14636:14652	2351918	2	True				
ANR	2352014	AssignmentExpression	"buffer += "" = """		2351918	0		+=			
ANR	2352015	Identifier	buffer		2351918	0					
ANR	2352016	PrimaryExpression	""" = """		2351918	1					
ANR	2352017	ExpressionStatement	"Unparse ( buffer , itr -> second )"	671:2:14656:14686	2351918	3	True				
ANR	2352018	CallExpression	"Unparse ( buffer , itr -> second )"		2351918	0					
ANR	2352019	Callee	Unparse		2351918	0					
ANR	2352020	Identifier	Unparse		2351918	0					
ANR	2352021	ArgumentList	buffer		2351918	1					
ANR	2352022	Argument	buffer		2351918	0					
ANR	2352023	Identifier	buffer		2351918	0					
ANR	2352024	Argument	itr -> second		2351918	1					
ANR	2352025	PtrMemberAccess	itr -> second		2351918	0					
ANR	2352026	Identifier	itr		2351918	0					
ANR	2352027	Identifier	second		2351918	1					
ANR	2352028	IfStatement	if ( itr + 1 != attrs . end ( ) )		2351918	4					
ANR	2352029	Condition	itr + 1 != attrs . end ( )	672:7:14695:14715	2351918	0	True				
ANR	2352030	EqualityExpression	itr + 1 != attrs . end ( )		2351918	0		!=			
ANR	2352031	AdditiveExpression	itr + 1		2351918	0		+			
ANR	2352032	Identifier	itr		2351918	0					
ANR	2352033	PrimaryExpression	1		2351918	1					
ANR	2352034	CallExpression	attrs . end ( )		2351918	1					
ANR	2352035	Callee	attrs . end		2351918	0					
ANR	2352036	MemberAccess	attrs . end		2351918	0					
ANR	2352037	Identifier	attrs		2351918	0					
ANR	2352038	Identifier	end		2351918	1					
ANR	2352039	ArgumentList			2351918	1					
ANR	2352040	CompoundStatement		18:31:501:501	2351918	1					
ANR	2352041	ExpressionStatement	"buffer += ""; """	673:3:14724:14738	2351918	0	True				
ANR	2352042	AssignmentExpression	"buffer += ""; """		2351918	0		+=			
ANR	2352043	Identifier	buffer		2351918	0					
ANR	2352044	PrimaryExpression	"""; """		2351918	1					
ANR	2352045	IfStatement	if ( classadIndent > 0 )		2351918	3					
ANR	2352046	Condition	classadIndent > 0	676:5:14752:14768	2351918	0	True				
ANR	2352047	RelationalExpression	classadIndent > 0		2351918	0		>			
ANR	2352048	Identifier	classadIndent		2351918	0					
ANR	2352049	PrimaryExpression	0		2351918	1					
ANR	2352050	CompoundStatement		22:25:554:554	2351918	1					
ANR	2352051	ExpressionStatement	indentLevel -= classadIndent	677:2:14776:14804	2351918	0	True				
ANR	2352052	AssignmentExpression	indentLevel -= classadIndent		2351918	0		-=			
ANR	2352053	Identifier	indentLevel		2351918	0					
ANR	2352054	Identifier	classadIndent		2351918	1					
ANR	2352055	ExpressionStatement	"buffer += '\\n' + string ( indentLevel , ' ' ) + ']'"	678:2:14808:14857	2351918	1	True				
ANR	2352056	AssignmentExpression	"buffer += '\\n' + string ( indentLevel , ' ' ) + ']'"		2351918	0		+=			
ANR	2352057	Identifier	buffer		2351918	0					
ANR	2352058	AdditiveExpression	"'\\n' + string ( indentLevel , ' ' ) + ']'"		2351918	1		+			
ANR	2352059	PrimaryExpression	'\\n'		2351918	0					
ANR	2352060	AdditiveExpression	"string ( indentLevel , ' ' ) + ']'"		2351918	1		+			
ANR	2352061	CallExpression	"string ( indentLevel , ' ' )"		2351918	0					
ANR	2352062	Callee	string		2351918	0					
ANR	2352063	Identifier	string		2351918	0					
ANR	2352064	ArgumentList	indentLevel		2351918	1					
ANR	2352065	Argument	indentLevel		2351918	0					
ANR	2352066	Identifier	indentLevel		2351918	0					
ANR	2352067	Argument	' '		2351918	1					
ANR	2352068	PrimaryExpression	' '		2351918	0					
ANR	2352069	PrimaryExpression	']'		2351918	1					
ANR	2352070	ExpressionStatement	indentLevel -= classadIndent	679:2:14861:14889	2351918	2	True				
ANR	2352071	AssignmentExpression	indentLevel -= classadIndent		2351918	0		-=			
ANR	2352072	Identifier	indentLevel		2351918	0					
ANR	2352073	Identifier	classadIndent		2351918	1					
ANR	2352074	ElseStatement	else		2351918	0					
ANR	2352075	CompoundStatement		26:8:681:681	2351918	0					
ANR	2352076	ExpressionStatement	"buffer += "" ]"""	681:2:14903:14917	2351918	0	True				
ANR	2352077	AssignmentExpression	"buffer += "" ]"""		2351918	0		+=			
ANR	2352078	Identifier	buffer		2351918	0					
ANR	2352079	PrimaryExpression	""" ]"""		2351918	1					
ANR	2352080	ReturnType	void		2351918	1					
ANR	2352081	Identifier	PrettyPrint :: UnparseAux		2351918	2					
ANR	2352082	ParameterList	"string & buffer , vector < pair < string , ExprTree * > > & attrs"		2351918	3					
ANR	2352083	Parameter	string & buffer	654:12:14159:14172	2351918	0	True				
ANR	2352084	ParameterType	string &		2351918	0					
ANR	2352085	Identifier	buffer		2351918	1					
ANR	2352086	Parameter	"vector < pair < string , ExprTree * > > & attrs"	654:28:14175:14213	2351918	1	True				
ANR	2352087	ParameterType	"vector < pair < string , ExprTree * > > &"		2351918	0					
ANR	2352088	Identifier	attrs		2351918	1					
ANR	2352089	CFGEntryNode	ENTRY		2351918		True				
ANR	2352090	CFGExitNode	EXIT		2351918		True				
ANR	2352091	Symbol	attrs . begin		2351918						
ANR	2352092	Symbol	indentLevel		2351918						
ANR	2352093	Symbol	string		2351918						
ANR	2352094	Symbol	itr		2351918						
ANR	2352095	Symbol	classadIndent		2351918						
ANR	2352096	Symbol	buffer		2351918						
ANR	2352097	Symbol	itr -> first		2351918						
ANR	2352098	Symbol	attrs . end		2351918						
ANR	2352099	Symbol	* itr		2351918						
ANR	2352100	Symbol	attrs		2351918						
ANR	2352101	Symbol	itr -> second		2351918						
ANR	2352102	Function	PrettyPrint :: UnparseAux	686:0:14926:15593							
ANR	2352103	FunctionDef	"PrettyPrint :: UnparseAux (string & buffer , vector < ExprTree * > & exprs)"		2352102	0					
ANR	2352104	CompoundStatement		688:0:15000:15593	2352102	0					
ANR	2352105	IdentifierDeclStatement	vector < ExprTree * > :: iterator itr ;	689:1:15003:15034	2352102	0	True				
ANR	2352106	IdentifierDecl	itr		2352102	0					
ANR	2352107	IdentifierDeclType	vector < ExprTree * > :: iterator		2352102	0					
ANR	2352108	Identifier	itr		2352102	1					
ANR	2352109	IfStatement	if ( listIndent > 0 )		2352102	1					
ANR	2352110	Condition	listIndent > 0	691:5:15042:15055	2352102	0	True				
ANR	2352111	RelationalExpression	listIndent > 0		2352102	0		>			
ANR	2352112	Identifier	listIndent		2352102	0					
ANR	2352113	PrimaryExpression	0		2352102	1					
ANR	2352114	CompoundStatement		4:22:58:58	2352102	1					
ANR	2352115	ExpressionStatement	indentLevel += listIndent	692:2:15063:15088	2352102	0	True				
ANR	2352116	AssignmentExpression	indentLevel += listIndent		2352102	0		+=			
ANR	2352117	Identifier	indentLevel		2352102	0					
ANR	2352118	Identifier	listIndent		2352102	1					
ANR	2352119	ExpressionStatement	"buffer += '\\n' + string ( indentLevel , ' ' ) + '{'"	693:2:15092:15141	2352102	1	True				
ANR	2352120	AssignmentExpression	"buffer += '\\n' + string ( indentLevel , ' ' ) + '{'"		2352102	0		+=			
ANR	2352121	Identifier	buffer		2352102	0					
ANR	2352122	AdditiveExpression	"'\\n' + string ( indentLevel , ' ' ) + '{'"		2352102	1		+			
ANR	2352123	PrimaryExpression	'\\n'		2352102	0					
ANR	2352124	AdditiveExpression	"string ( indentLevel , ' ' ) + '{'"		2352102	1		+			
ANR	2352125	CallExpression	"string ( indentLevel , ' ' )"		2352102	0					
ANR	2352126	Callee	string		2352102	0					
ANR	2352127	Identifier	string		2352102	0					
ANR	2352128	ArgumentList	indentLevel		2352102	1					
ANR	2352129	Argument	indentLevel		2352102	0					
ANR	2352130	Identifier	indentLevel		2352102	0					
ANR	2352131	Argument	' '		2352102	1					
ANR	2352132	PrimaryExpression	' '		2352102	0					
ANR	2352133	PrimaryExpression	'{'		2352102	1					
ANR	2352134	ExpressionStatement	indentLevel += listIndent	694:2:15145:15170	2352102	2	True				
ANR	2352135	AssignmentExpression	indentLevel += listIndent		2352102	0		+=			
ANR	2352136	Identifier	indentLevel		2352102	0					
ANR	2352137	Identifier	listIndent		2352102	1					
ANR	2352138	ElseStatement	else		2352102	0					
ANR	2352139	CompoundStatement		8:8:179:179	2352102	0					
ANR	2352140	ExpressionStatement	"buffer += ""{ """	696:2:15184:15198	2352102	0	True				
ANR	2352141	AssignmentExpression	"buffer += ""{ """		2352102	0		+=			
ANR	2352142	Identifier	buffer		2352102	0					
ANR	2352143	PrimaryExpression	"""{ """		2352102	1					
ANR	2352144	ForStatement	for ( itr = exprs . begin ( ) ; itr != exprs . end ( ) ; itr ++ )		2352102	2					
ANR	2352145	ForInit	itr = exprs . begin ( ) ;	698:6:15209:15227	2352102	0	True				
ANR	2352146	AssignmentExpression	itr = exprs . begin ( )		2352102	0		=			
ANR	2352147	Identifier	itr		2352102	0					
ANR	2352148	CallExpression	exprs . begin ( )		2352102	1					
ANR	2352149	Callee	exprs . begin		2352102	0					
ANR	2352150	MemberAccess	exprs . begin		2352102	0					
ANR	2352151	Identifier	exprs		2352102	0					
ANR	2352152	Identifier	begin		2352102	1					
ANR	2352153	ArgumentList			2352102	1					
ANR	2352154	Condition	itr != exprs . end ( )	698:26:15229:15245	2352102	1	True				
ANR	2352155	EqualityExpression	itr != exprs . end ( )		2352102	0		!=			
ANR	2352156	Identifier	itr		2352102	0					
ANR	2352157	CallExpression	exprs . end ( )		2352102	1					
ANR	2352158	Callee	exprs . end		2352102	0					
ANR	2352159	MemberAccess	exprs . end		2352102	0					
ANR	2352160	Identifier	exprs		2352102	0					
ANR	2352161	Identifier	end		2352102	1					
ANR	2352162	ArgumentList			2352102	1					
ANR	2352163	PostIncDecOperationExpression	itr ++	698:45:15248:15252	2352102	2	True				
ANR	2352164	Identifier	itr		2352102	0					
ANR	2352165	IncDec	++		2352102	1					
ANR	2352166	CompoundStatement		11:53:255:255	2352102	3					
ANR	2352167	IfStatement	if ( listIndent > 0 )		2352102	0					
ANR	2352168	Condition	listIndent > 0	699:6:15264:15277	2352102	0	True				
ANR	2352169	RelationalExpression	listIndent > 0		2352102	0		>			
ANR	2352170	Identifier	listIndent		2352102	0					
ANR	2352171	PrimaryExpression	0		2352102	1					
ANR	2352172	CompoundStatement		12:23:280:280	2352102	1					
ANR	2352173	ExpressionStatement	"buffer += '\\n' + string ( indentLevel , ' ' )"	700:3:15286:15329	2352102	0	True				
ANR	2352174	AssignmentExpression	"buffer += '\\n' + string ( indentLevel , ' ' )"		2352102	0		+=			
ANR	2352175	Identifier	buffer		2352102	0					
ANR	2352176	AdditiveExpression	"'\\n' + string ( indentLevel , ' ' )"		2352102	1		+			
ANR	2352177	PrimaryExpression	'\\n'		2352102	0					
ANR	2352178	CallExpression	"string ( indentLevel , ' ' )"		2352102	1					
ANR	2352179	Callee	string		2352102	0					
ANR	2352180	Identifier	string		2352102	0					
ANR	2352181	ArgumentList	indentLevel		2352102	1					
ANR	2352182	Argument	indentLevel		2352102	0					
ANR	2352183	Identifier	indentLevel		2352102	0					
ANR	2352184	Argument	' '		2352102	1					
ANR	2352185	PrimaryExpression	' '		2352102	0					
ANR	2352186	ExpressionStatement	"ClassAdUnParser :: Unparse ( buffer , * itr )"	702:2:15337:15377	2352102	1	True				
ANR	2352187	CallExpression	"ClassAdUnParser :: Unparse ( buffer , * itr )"		2352102	0					
ANR	2352188	Callee	ClassAdUnParser :: Unparse		2352102	0					
ANR	2352189	Identifier	ClassAdUnParser :: Unparse		2352102	0					
ANR	2352190	ArgumentList	buffer		2352102	1					
ANR	2352191	Argument	buffer		2352102	0					
ANR	2352192	Identifier	buffer		2352102	0					
ANR	2352193	Argument	* itr		2352102	1					
ANR	2352194	UnaryOperationExpression	* itr		2352102	0					
ANR	2352195	UnaryOperator	*		2352102	0					
ANR	2352196	Identifier	itr		2352102	1					
ANR	2352197	IfStatement	if ( itr + 1 != exprs . end ( ) )		2352102	2					
ANR	2352198	Condition	itr + 1 != exprs . end ( )	703:6:15385:15405	2352102	0	True				
ANR	2352199	EqualityExpression	itr + 1 != exprs . end ( )		2352102	0		!=			
ANR	2352200	AdditiveExpression	itr + 1		2352102	0		+			
ANR	2352201	Identifier	itr		2352102	0					
ANR	2352202	PrimaryExpression	1		2352102	1					
ANR	2352203	CallExpression	exprs . end ( )		2352102	1					
ANR	2352204	Callee	exprs . end		2352102	0					
ANR	2352205	MemberAccess	exprs . end		2352102	0					
ANR	2352206	Identifier	exprs		2352102	0					
ANR	2352207	Identifier	end		2352102	1					
ANR	2352208	ArgumentList			2352102	1					
ANR	2352209	ExpressionStatement	"buffer += ','"	703:30:15409:15422	2352102	1	True				
ANR	2352210	AssignmentExpression	"buffer += ','"		2352102	0		+=			
ANR	2352211	Identifier	buffer		2352102	0					
ANR	2352212	PrimaryExpression	"','"		2352102	1					
ANR	2352213	IfStatement	if ( listIndent > 0 )		2352102	3					
ANR	2352214	Condition	listIndent > 0	705:5:15432:15445	2352102	0	True				
ANR	2352215	RelationalExpression	listIndent > 0		2352102	0		>			
ANR	2352216	Identifier	listIndent		2352102	0					
ANR	2352217	PrimaryExpression	0		2352102	1					
ANR	2352218	CompoundStatement		18:22:448:448	2352102	1					
ANR	2352219	ExpressionStatement	indentLevel -= listIndent	706:2:15453:15478	2352102	0	True				
ANR	2352220	AssignmentExpression	indentLevel -= listIndent		2352102	0		-=			
ANR	2352221	Identifier	indentLevel		2352102	0					
ANR	2352222	Identifier	listIndent		2352102	1					
ANR	2352223	ExpressionStatement	"buffer += '\\n' + string ( indentLevel , ' ' ) + '}'"	707:2:15482:15531	2352102	1	True				
ANR	2352224	AssignmentExpression	"buffer += '\\n' + string ( indentLevel , ' ' ) + '}'"		2352102	0		+=			
ANR	2352225	Identifier	buffer		2352102	0					
ANR	2352226	AdditiveExpression	"'\\n' + string ( indentLevel , ' ' ) + '}'"		2352102	1		+			
ANR	2352227	PrimaryExpression	'\\n'		2352102	0					
ANR	2352228	AdditiveExpression	"string ( indentLevel , ' ' ) + '}'"		2352102	1		+			
ANR	2352229	CallExpression	"string ( indentLevel , ' ' )"		2352102	0					
ANR	2352230	Callee	string		2352102	0					
ANR	2352231	Identifier	string		2352102	0					
ANR	2352232	ArgumentList	indentLevel		2352102	1					
ANR	2352233	Argument	indentLevel		2352102	0					
ANR	2352234	Identifier	indentLevel		2352102	0					
ANR	2352235	Argument	' '		2352102	1					
ANR	2352236	PrimaryExpression	' '		2352102	0					
ANR	2352237	PrimaryExpression	'}'		2352102	1					
ANR	2352238	ExpressionStatement	indentLevel -= listIndent	708:2:15535:15560	2352102	2	True				
ANR	2352239	AssignmentExpression	indentLevel -= listIndent		2352102	0		-=			
ANR	2352240	Identifier	indentLevel		2352102	0					
ANR	2352241	Identifier	listIndent		2352102	1					
ANR	2352242	ElseStatement	else		2352102	0					
ANR	2352243	CompoundStatement		22:8:569:569	2352102	0					
ANR	2352244	ExpressionStatement	"buffer += "" }"""	710:2:15574:15588	2352102	0	True				
ANR	2352245	AssignmentExpression	"buffer += "" }"""		2352102	0		+=			
ANR	2352246	Identifier	buffer		2352102	0					
ANR	2352247	PrimaryExpression	""" }"""		2352102	1					
ANR	2352248	ReturnType	void		2352102	1					
ANR	2352249	Identifier	PrettyPrint :: UnparseAux		2352102	2					
ANR	2352250	ParameterList	"string & buffer , vector < ExprTree * > & exprs"		2352102	3					
ANR	2352251	Parameter	string & buffer	687:12:14957:14970	2352102	0	True				
ANR	2352252	ParameterType	string &		2352102	0					
ANR	2352253	Identifier	buffer		2352102	1					
ANR	2352254	Parameter	vector < ExprTree * > & exprs	687:28:14973:14996	2352102	1	True				
ANR	2352255	ParameterType	vector < ExprTree * > &		2352102	0					
ANR	2352256	Identifier	exprs		2352102	1					
ANR	2352257	CFGEntryNode	ENTRY		2352102		True				
ANR	2352258	CFGExitNode	EXIT		2352102		True				
ANR	2352259	Symbol	indentLevel		2352102						
ANR	2352260	Symbol	string		2352102						
ANR	2352261	Symbol	itr		2352102						
ANR	2352262	Symbol	exprs		2352102						
ANR	2352263	Symbol	exprs . end		2352102						
ANR	2352264	Symbol	buffer		2352102						
ANR	2352265	Symbol	listIndent		2352102						
ANR	2352266	Symbol	exprs . begin		2352102						
ANR	2352267	Symbol	* itr		2352102						
ANR	2352268	Function	identifierNeedsQuoting	715:0:15663:16141							
ANR	2352269	FunctionDef	identifierNeedsQuoting (const string & str)		2352268	0					
ANR	2352270	CompoundStatement		717:0:15720:16141	2352268	0					
ANR	2352271	IdentifierDeclStatement	bool needs_quoting ;	718:1:15723:15742	2352268	0	True				
ANR	2352272	IdentifierDecl	needs_quoting		2352268	0					
ANR	2352273	IdentifierDeclType	bool		2352268	0					
ANR	2352274	Identifier	needs_quoting		2352268	1					
ANR	2352275	IdentifierDeclStatement	const char * ch = str . c_str ( ) ;	719:1:15745:15774	2352268	1	True				
ANR	2352276	IdentifierDecl	* ch = str . c_str ( )		2352268	0					
ANR	2352277	IdentifierDeclType	const char *		2352268	0					
ANR	2352278	Identifier	ch		2352268	1					
ANR	2352279	AssignmentExpression	* ch = str . c_str ( )		2352268	2		=			
ANR	2352280	Identifier	ch		2352268	0					
ANR	2352281	CallExpression	str . c_str ( )		2352268	1					
ANR	2352282	Callee	str . c_str		2352268	0					
ANR	2352283	MemberAccess	str . c_str		2352268	0					
ANR	2352284	Identifier	str		2352268	0					
ANR	2352285	Identifier	c_str		2352268	1					
ANR	2352286	ArgumentList			2352268	1					
ANR	2352287	IfStatement	if ( ! isalpha ( * ch ) && * ch != '_' )		2352268	2					
ANR	2352288	Condition	! isalpha ( * ch ) && * ch != '_'	722:5:15812:15840	2352268	0	True				
ANR	2352289	AndExpression	! isalpha ( * ch ) && * ch != '_'		2352268	0		&&			
ANR	2352290	UnaryOperationExpression	! isalpha ( * ch )		2352268	0					
ANR	2352291	UnaryOperator	!		2352268	0					
ANR	2352292	CallExpression	isalpha ( * ch )		2352268	1					
ANR	2352293	Callee	isalpha		2352268	0					
ANR	2352294	Identifier	isalpha		2352268	0					
ANR	2352295	ArgumentList	* ch		2352268	1					
ANR	2352296	Argument	* ch		2352268	0					
ANR	2352297	UnaryOperationExpression	* ch		2352268	0					
ANR	2352298	UnaryOperator	*		2352268	0					
ANR	2352299	Identifier	ch		2352268	1					
ANR	2352300	EqualityExpression	* ch != '_'		2352268	1		!=			
ANR	2352301	UnaryOperationExpression	* ch		2352268	0					
ANR	2352302	UnaryOperator	*		2352268	0					
ANR	2352303	Identifier	ch		2352268	1					
ANR	2352304	PrimaryExpression	'_'		2352268	1					
ANR	2352305	CompoundStatement		6:37:123:123	2352268	1					
ANR	2352306	ExpressionStatement	needs_quoting = false	723:2:15848:15869	2352268	0	True				
ANR	2352307	AssignmentExpression	needs_quoting = false		2352268	0		=			
ANR	2352308	Identifier	needs_quoting		2352268	0					
ANR	2352309	Identifier	false		2352268	1					
ANR	2352310	ElseStatement	else		2352268	0					
ANR	2352311	CompoundStatement		8:8:158:158	2352268	0					
ANR	2352312	ExpressionStatement	ch ++	727:2:15931:15935	2352268	0	True				
ANR	2352313	PostIncDecOperationExpression	ch ++		2352268	0					
ANR	2352314	Identifier	ch		2352268	0					
ANR	2352315	IncDec	++		2352268	1					
ANR	2352316	WhileStatement	while ( isalnum ( * ch ) || * ch == '_' )		2352268	1					
ANR	2352317	Condition	isalnum ( * ch ) || * ch == '_'	728:9:15946:15973	2352268	0	True				
ANR	2352318	OrExpression	isalnum ( * ch ) || * ch == '_'		2352268	0		||			
ANR	2352319	CallExpression	isalnum ( * ch )		2352268	0					
ANR	2352320	Callee	isalnum		2352268	0					
ANR	2352321	Identifier	isalnum		2352268	0					
ANR	2352322	ArgumentList	* ch		2352268	1					
ANR	2352323	Argument	* ch		2352268	0					
ANR	2352324	UnaryOperationExpression	* ch		2352268	0					
ANR	2352325	UnaryOperator	*		2352268	0					
ANR	2352326	Identifier	ch		2352268	1					
ANR	2352327	EqualityExpression	* ch == '_'		2352268	1		==			
ANR	2352328	UnaryOperationExpression	* ch		2352268	0					
ANR	2352329	UnaryOperator	*		2352268	0					
ANR	2352330	Identifier	ch		2352268	1					
ANR	2352331	PrimaryExpression	'_'		2352268	1					
ANR	2352332	CompoundStatement		12:40:256:256	2352268	1					
ANR	2352333	ExpressionStatement	ch ++	729:3:15982:15986	2352268	0	True				
ANR	2352334	PostIncDecOperationExpression	ch ++		2352268	0					
ANR	2352335	Identifier	ch		2352268	0					
ANR	2352336	IncDec	++		2352268	1					
ANR	2352337	ExpressionStatement	needs_quoting = ! ( * ch == '\\0' )	734:2:16081:16113	2352268	2	True				
ANR	2352338	AssignmentExpression	needs_quoting = ! ( * ch == '\\0' )		2352268	0		=			
ANR	2352339	Identifier	needs_quoting		2352268	0					
ANR	2352340	UnaryOperationExpression	! ( * ch == '\\0' )		2352268	1					
ANR	2352341	UnaryOperator	!		2352268	0					
ANR	2352342	EqualityExpression	* ch == '\\0'		2352268	1		==			
ANR	2352343	UnaryOperationExpression	* ch		2352268	0					
ANR	2352344	UnaryOperator	*		2352268	0					
ANR	2352345	Identifier	ch		2352268	1					
ANR	2352346	PrimaryExpression	'\\0'		2352268	1					
ANR	2352347	ReturnStatement	return needs_quoting ;	736:1:16119:16139	2352268	3	True				
ANR	2352348	Identifier	needs_quoting		2352268	0					
ANR	2352349	ReturnType	static bool		2352268	1					
ANR	2352350	Identifier	identifierNeedsQuoting		2352268	2					
ANR	2352351	ParameterList	const string & str		2352268	3					
ANR	2352352	Parameter	const string & str	716:24:15700:15716	2352268	0	True				
ANR	2352353	ParameterType	const string &		2352268	0					
ANR	2352354	Identifier	str		2352268	1					
ANR	2352355	CFGEntryNode	ENTRY		2352268		True				
ANR	2352356	CFGExitNode	EXIT		2352268		True				
ANR	2352357	Symbol	str		2352268						
ANR	2352358	Symbol	isalpha		2352268						
ANR	2352359	Symbol	needs_quoting		2352268						
ANR	2352360	Symbol	isalnum		2352268						
ANR	2352361	Symbol	ch		2352268						
ANR	2352362	Symbol	str . c_str		2352268						
ANR	2352363	Symbol	* ch		2352268						
ANR	2352364	Symbol	false		2352268						
