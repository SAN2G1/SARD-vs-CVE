command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3090758	File	data/converged/CVE-2011-4930_htcondor/src_condor_daemon_core.V6_self_draining_queue.cpp								
ANR	3090759	Function	SelfDrainingQueue :: SelfDrainingQueue	28:0:953:1435							
ANR	3090760	FunctionDef	"SelfDrainingQueue :: SelfDrainingQueue (const char * queue_name , int per)"		3090759	0					
ANR	3090761	CompoundStatement		32:0:1117:1435	3090759	0					
ANR	3090762	IfStatement	if ( queue_name )		3090759	0					
ANR	3090763	Condition	queue_name	33:5:1124:1133	3090759	0	True				
ANR	3090764	Identifier	queue_name		3090759	0					
ANR	3090765	CompoundStatement		2:18:19:19	3090759	1					
ANR	3090766	ExpressionStatement	name = strdup ( queue_name )	34:2:1141:1168	3090759	0	True				
ANR	3090767	AssignmentExpression	name = strdup ( queue_name )		3090759	0		=			
ANR	3090768	Identifier	name		3090759	0					
ANR	3090769	CallExpression	strdup ( queue_name )		3090759	1					
ANR	3090770	Callee	strdup		3090759	0					
ANR	3090771	Identifier	strdup		3090759	0					
ANR	3090772	ArgumentList	queue_name		3090759	1					
ANR	3090773	Argument	queue_name		3090759	0					
ANR	3090774	Identifier	queue_name		3090759	0					
ANR	3090775	ElseStatement	else		3090759	0					
ANR	3090776	CompoundStatement		4:8:60:60	3090759	0					
ANR	3090777	ExpressionStatement	"name = strdup ( ""(unnamed)"" )"	36:2:1182:1210	3090759	0	True				
ANR	3090778	AssignmentExpression	"name = strdup ( ""(unnamed)"" )"		3090759	0		=			
ANR	3090779	Identifier	name		3090759	0					
ANR	3090780	CallExpression	"strdup ( ""(unnamed)"" )"		3090759	1					
ANR	3090781	Callee	strdup		3090759	0					
ANR	3090782	Identifier	strdup		3090759	0					
ANR	3090783	ArgumentList	"""(unnamed)"""		3090759	1					
ANR	3090784	Argument	"""(unnamed)"""		3090759	0					
ANR	3090785	PrimaryExpression	"""(unnamed)"""		3090759	0					
ANR	3090786	IdentifierDeclStatement	MyString t_name ;	38:1:1216:1231	3090759	1	True				
ANR	3090787	IdentifierDecl	t_name		3090759	0					
ANR	3090788	IdentifierDeclType	MyString		3090759	0					
ANR	3090789	Identifier	t_name		3090759	1					
ANR	3090790	ExpressionStatement	"t_name . sprintf ( ""SelfDrainingQueue::timerHandler[%s]"" , name )"	39:1:1234:1295	3090759	2	True				
ANR	3090791	CallExpression	"t_name . sprintf ( ""SelfDrainingQueue::timerHandler[%s]"" , name )"		3090759	0					
ANR	3090792	Callee	t_name . sprintf		3090759	0					
ANR	3090793	MemberAccess	t_name . sprintf		3090759	0					
ANR	3090794	Identifier	t_name		3090759	0					
ANR	3090795	Identifier	sprintf		3090759	1					
ANR	3090796	ArgumentList	"""SelfDrainingQueue::timerHandler[%s]"""		3090759	1					
ANR	3090797	Argument	"""SelfDrainingQueue::timerHandler[%s]"""		3090759	0					
ANR	3090798	PrimaryExpression	"""SelfDrainingQueue::timerHandler[%s]"""		3090759	0					
ANR	3090799	Argument	name		3090759	1					
ANR	3090800	Identifier	name		3090759	0					
ANR	3090801	ExpressionStatement	timer_name = strdup ( t_name . Value ( ) )	40:1:1298:1335	3090759	3	True				
ANR	3090802	AssignmentExpression	timer_name = strdup ( t_name . Value ( ) )		3090759	0		=			
ANR	3090803	Identifier	timer_name		3090759	0					
ANR	3090804	CallExpression	strdup ( t_name . Value ( ) )		3090759	1					
ANR	3090805	Callee	strdup		3090759	0					
ANR	3090806	Identifier	strdup		3090759	0					
ANR	3090807	ArgumentList	t_name . Value ( )		3090759	1					
ANR	3090808	Argument	t_name . Value ( )		3090759	0					
ANR	3090809	CallExpression	t_name . Value ( )		3090759	0					
ANR	3090810	Callee	t_name . Value		3090759	0					
ANR	3090811	MemberAccess	t_name . Value		3090759	0					
ANR	3090812	Identifier	t_name		3090759	0					
ANR	3090813	Identifier	Value		3090759	1					
ANR	3090814	ArgumentList			3090759	1					
ANR	3090815	ExpressionStatement	handler_fn = NULL	42:1:1339:1356	3090759	4	True				
ANR	3090816	AssignmentExpression	handler_fn = NULL		3090759	0		=			
ANR	3090817	Identifier	handler_fn		3090759	0					
ANR	3090818	Identifier	NULL		3090759	1					
ANR	3090819	ExpressionStatement	handlercpp_fn = NULL	43:1:1359:1379	3090759	5	True				
ANR	3090820	AssignmentExpression	handlercpp_fn = NULL		3090759	0		=			
ANR	3090821	Identifier	handlercpp_fn		3090759	0					
ANR	3090822	Identifier	NULL		3090759	1					
ANR	3090823	ExpressionStatement	service_ptr = NULL	44:1:1382:1400	3090759	6	True				
ANR	3090824	AssignmentExpression	service_ptr = NULL		3090759	0		=			
ANR	3090825	Identifier	service_ptr		3090759	0					
ANR	3090826	Identifier	NULL		3090759	1					
ANR	3090827	ExpressionStatement	this -> period = per	46:1:1404:1422	3090759	7	True				
ANR	3090828	AssignmentExpression	this -> period = per		3090759	0		=			
ANR	3090829	PtrMemberAccess	this -> period		3090759	0					
ANR	3090830	Identifier	this		3090759	0					
ANR	3090831	Identifier	period		3090759	1					
ANR	3090832	Identifier	per		3090759	1					
ANR	3090833	ExpressionStatement	tid = - 1	47:1:1425:1433	3090759	8	True				
ANR	3090834	AssignmentExpression	tid = - 1		3090759	0		=			
ANR	3090835	Identifier	tid		3090759	0					
ANR	3090836	UnaryOperationExpression	- 1		3090759	1					
ANR	3090837	UnaryOperator	-		3090759	0					
ANR	3090838	PrimaryExpression	1		3090759	1					
ANR	3090839	Identifier	SelfDrainingQueue :: SelfDrainingQueue		3090759	1					
ANR	3090840	ParameterList	"const char * queue_name , int per"		3090759	2					
ANR	3090841	Parameter	const char * queue_name	28:38:991:1012	3090759	0	True				
ANR	3090842	ParameterType	const char *		3090759	0					
ANR	3090843	Identifier	queue_name		3090759	1					
ANR	3090844	Parameter	int per	28:62:1015:1021	3090759	1	True				
ANR	3090845	ParameterType	int		3090759	0					
ANR	3090846	Identifier	per		3090759	1					
ANR	3090847	CFGEntryNode	ENTRY		3090759		True				
ANR	3090848	CFGExitNode	EXIT		3090759		True				
ANR	3090849	Symbol	timer_name		3090759						
ANR	3090850	Symbol	NULL		3090759						
ANR	3090851	Symbol	handlercpp_fn		3090759						
ANR	3090852	Symbol	this		3090759						
ANR	3090853	Symbol	tid		3090759						
ANR	3090854	Symbol	queue_name		3090759						
ANR	3090855	Symbol	service_ptr		3090759						
ANR	3090856	Symbol	* this		3090759						
ANR	3090857	Symbol	this -> period		3090759						
ANR	3090858	Symbol	t_name		3090759						
ANR	3090859	Symbol	name		3090759						
ANR	3090860	Symbol	handler_fn		3090759						
ANR	3090861	Symbol	strdup		3090759						
ANR	3090862	Symbol	per		3090759						
ANR	3090863	Symbol	t_name . Value		3090759						
ANR	3090864	Function	SelfDrainingQueue :: ~SelfDrainingQueue	51:0:1439:1612							
ANR	3090865	FunctionDef	SelfDrainingQueue :: ~SelfDrainingQueue ()		3090864	0					
ANR	3090866	CompoundStatement		52:0:1479:1612	3090864	0					
ANR	3090867	ExpressionStatement	cancelTimer ( )	53:1:1482:1495	3090864	0	True				
ANR	3090868	CallExpression	cancelTimer ( )		3090864	0					
ANR	3090869	Callee	cancelTimer		3090864	0					
ANR	3090870	Identifier	cancelTimer		3090864	0					
ANR	3090871	ArgumentList			3090864	1					
ANR	3090872	IfStatement	if ( name )		3090864	1					
ANR	3090873	Condition	name	55:5:1503:1506	3090864	0	True				
ANR	3090874	Identifier	name		3090864	0					
ANR	3090875	CompoundStatement		4:12:30:30	3090864	1					
ANR	3090876	ExpressionStatement	free ( name )	56:2:1514:1526	3090864	0	True				
ANR	3090877	CallExpression	free ( name )		3090864	0					
ANR	3090878	Callee	free		3090864	0					
ANR	3090879	Identifier	free		3090864	0					
ANR	3090880	ArgumentList	name		3090864	1					
ANR	3090881	Argument	name		3090864	0					
ANR	3090882	Identifier	name		3090864	0					
ANR	3090883	ExpressionStatement	name = NULL	57:2:1530:1541	3090864	1	True				
ANR	3090884	AssignmentExpression	name = NULL		3090864	0		=			
ANR	3090885	Identifier	name		3090864	0					
ANR	3090886	Identifier	NULL		3090864	1					
ANR	3090887	IfStatement	if ( timer_name )		3090864	2					
ANR	3090888	Condition	timer_name	59:5:1551:1560	3090864	0	True				
ANR	3090889	Identifier	timer_name		3090864	0					
ANR	3090890	CompoundStatement		8:18:84:84	3090864	1					
ANR	3090891	ExpressionStatement	free ( timer_name )	60:2:1568:1586	3090864	0	True				
ANR	3090892	CallExpression	free ( timer_name )		3090864	0					
ANR	3090893	Callee	free		3090864	0					
ANR	3090894	Identifier	free		3090864	0					
ANR	3090895	ArgumentList	timer_name		3090864	1					
ANR	3090896	Argument	timer_name		3090864	0					
ANR	3090897	Identifier	timer_name		3090864	0					
ANR	3090898	ExpressionStatement	timer_name = NULL	61:2:1590:1607	3090864	1	True				
ANR	3090899	AssignmentExpression	timer_name = NULL		3090864	0		=			
ANR	3090900	Identifier	timer_name		3090864	0					
ANR	3090901	Identifier	NULL		3090864	1					
ANR	3090902	Identifier	SelfDrainingQueue :: ~SelfDrainingQueue		3090864	1					
ANR	3090903	ParameterList			3090864	2					
ANR	3090904	CFGEntryNode	ENTRY		3090864		True				
ANR	3090905	CFGExitNode	EXIT		3090864		True				
ANR	3090906	Symbol	timer_name		3090864						
ANR	3090907	Symbol	NULL		3090864						
ANR	3090908	Symbol	name		3090864						
ANR	3090909	Function	SelfDrainingQueue :: registerHandler	71:0:1769:1984							
ANR	3090910	FunctionDef	SelfDrainingQueue :: registerHandler (ServiceDataHandler handle_fn)		3090909	0					
ANR	3090911	CompoundStatement		73:0:1841:1984	3090909	0					
ANR	3090912	IfStatement	if ( handlercpp_fn )		3090909	0					
ANR	3090913	Condition	handlercpp_fn	74:5:1848:1860	3090909	0	True				
ANR	3090914	Identifier	handlercpp_fn		3090909	0					
ANR	3090915	CompoundStatement		2:21:22:22	3090909	1					
ANR	3090916	ExpressionStatement	handlercpp_fn = NULL	75:2:1868:1888	3090909	0	True				
ANR	3090917	AssignmentExpression	handlercpp_fn = NULL		3090909	0		=			
ANR	3090918	Identifier	handlercpp_fn		3090909	0					
ANR	3090919	Identifier	NULL		3090909	1					
ANR	3090920	IfStatement	if ( service_ptr )		3090909	1					
ANR	3090921	Condition	service_ptr	77:5:1898:1908	3090909	0	True				
ANR	3090922	Identifier	service_ptr		3090909	0					
ANR	3090923	CompoundStatement		5:19:70:70	3090909	1					
ANR	3090924	ExpressionStatement	service_ptr = NULL	78:2:1916:1934	3090909	0	True				
ANR	3090925	AssignmentExpression	service_ptr = NULL		3090909	0		=			
ANR	3090926	Identifier	service_ptr		3090909	0					
ANR	3090927	Identifier	NULL		3090909	1					
ANR	3090928	ExpressionStatement	this -> handler_fn = handle_fn	80:1:1940:1968	3090909	2	True				
ANR	3090929	AssignmentExpression	this -> handler_fn = handle_fn		3090909	0		=			
ANR	3090930	PtrMemberAccess	this -> handler_fn		3090909	0					
ANR	3090931	Identifier	this		3090909	0					
ANR	3090932	Identifier	handler_fn		3090909	1					
ANR	3090933	Identifier	handle_fn		3090909	1					
ANR	3090934	ReturnStatement	return true ;	81:1:1971:1982	3090909	3	True				
ANR	3090935	Identifier	true		3090909	0					
ANR	3090936	ReturnType	bool		3090909	1					
ANR	3090937	Identifier	SelfDrainingQueue :: registerHandler		3090909	2					
ANR	3090938	ParameterList	ServiceDataHandler handle_fn		3090909	3					
ANR	3090939	Parameter	ServiceDataHandler handle_fn	72:36:1810:1837	3090909	0	True				
ANR	3090940	ParameterType	ServiceDataHandler		3090909	0					
ANR	3090941	Identifier	handle_fn		3090909	1					
ANR	3090942	CFGEntryNode	ENTRY		3090909		True				
ANR	3090943	CFGExitNode	EXIT		3090909		True				
ANR	3090944	Symbol	service_ptr		3090909						
ANR	3090945	Symbol	* this		3090909						
ANR	3090946	Symbol	NULL		3090909						
ANR	3090947	Symbol	handlercpp_fn		3090909						
ANR	3090948	Symbol	this		3090909						
ANR	3090949	Symbol	true		3090909						
ANR	3090950	Symbol	this -> handler_fn		3090909						
ANR	3090951	Symbol	handle_fn		3090909						
ANR	3090952	Function	SelfDrainingQueue :: registerHandlercpp	85:0:1988:2244							
ANR	3090953	FunctionDef	"SelfDrainingQueue :: registerHandlercpp (ServiceDataHandlercpp handlecpp_fn , Service * serve_ptr)"		3090952	0					
ANR	3090954	CompoundStatement		89:0:2115:2244	3090952	0					
ANR	3090955	IfStatement	if ( handler_fn )		3090952	0					
ANR	3090956	Condition	handler_fn	90:5:2122:2131	3090952	0	True				
ANR	3090957	Identifier	handler_fn		3090952	0					
ANR	3090958	CompoundStatement		2:18:19:19	3090952	1					
ANR	3090959	ExpressionStatement	handler_fn = NULL	91:2:2139:2156	3090952	0	True				
ANR	3090960	AssignmentExpression	handler_fn = NULL		3090952	0		=			
ANR	3090961	Identifier	handler_fn		3090952	0					
ANR	3090962	Identifier	NULL		3090952	1					
ANR	3090963	ExpressionStatement	this -> handlercpp_fn = handlecpp_fn	93:1:2162:2196	3090952	1	True				
ANR	3090964	AssignmentExpression	this -> handlercpp_fn = handlecpp_fn		3090952	0		=			
ANR	3090965	PtrMemberAccess	this -> handlercpp_fn		3090952	0					
ANR	3090966	Identifier	this		3090952	0					
ANR	3090967	Identifier	handlercpp_fn		3090952	1					
ANR	3090968	Identifier	handlecpp_fn		3090952	1					
ANR	3090969	ExpressionStatement	this -> service_ptr = serve_ptr	94:1:2199:2228	3090952	2	True				
ANR	3090970	AssignmentExpression	this -> service_ptr = serve_ptr		3090952	0		=			
ANR	3090971	PtrMemberAccess	this -> service_ptr		3090952	0					
ANR	3090972	Identifier	this		3090952	0					
ANR	3090973	Identifier	service_ptr		3090952	1					
ANR	3090974	Identifier	serve_ptr		3090952	1					
ANR	3090975	ReturnStatement	return true ;	95:1:2231:2242	3090952	3	True				
ANR	3090976	Identifier	true		3090952	0					
ANR	3090977	ReturnType	bool		3090952	1					
ANR	3090978	Identifier	SelfDrainingQueue :: registerHandlercpp		3090952	2					
ANR	3090979	ParameterList	"ServiceDataHandlercpp handlecpp_fn , Service * serve_ptr"		3090952	3					
ANR	3090980	Parameter	ServiceDataHandlercpp handlecpp_fn	86:39:2032:2078	3090952	0	True				
ANR	3090981	ParameterType	ServiceDataHandlercpp		3090952	0					
ANR	3090982	Identifier	handlecpp_fn		3090952	1					
ANR	3090983	Parameter	Service * serve_ptr	88:12:2094:2111	3090952	1	True				
ANR	3090984	ParameterType	Service *		3090952	0					
ANR	3090985	Identifier	serve_ptr		3090952	1					
ANR	3090986	CFGEntryNode	ENTRY		3090952		True				
ANR	3090987	CFGExitNode	EXIT		3090952		True				
ANR	3090988	Symbol	* this		3090952						
ANR	3090989	Symbol	handlecpp_fn		3090952						
ANR	3090990	Symbol	NULL		3090952						
ANR	3090991	Symbol	this		3090952						
ANR	3090992	Symbol	true		3090952						
ANR	3090993	Symbol	handler_fn		3090952						
ANR	3090994	Symbol	serve_ptr		3090952						
ANR	3090995	Symbol	this -> handlercpp_fn		3090952						
ANR	3090996	Symbol	this -> service_ptr		3090952						
ANR	3090997	Function	SelfDrainingQueue :: setPeriod	99:0:2248:2521							
ANR	3090998	FunctionDef	SelfDrainingQueue :: setPeriod (int new_period)		3090997	0					
ANR	3090999	CompoundStatement		101:0:2300:2521	3090997	0					
ANR	3091000	IfStatement	if ( period == new_period )		3090997	0					
ANR	3091001	Condition	period == new_period	102:5:2307:2326	3090997	0	True				
ANR	3091002	EqualityExpression	period == new_period		3090997	0		==			
ANR	3091003	Identifier	period		3090997	0					
ANR	3091004	Identifier	new_period		3090997	1					
ANR	3091005	CompoundStatement		2:28:29:29	3090997	1					
ANR	3091006	ReturnStatement	return false ;	103:2:2334:2346	3090997	0	True				
ANR	3091007	Identifier	false		3090997	0					
ANR	3091008	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Period for SelfDrainingQueue %s set to %d\\n"" , name , new_period )"	105:1:2352:2443	3090997	1	True				
ANR	3091009	CallExpression	"dprintf ( D_FULLDEBUG , ""Period for SelfDrainingQueue %s set to %d\\n"" , name , new_period )"		3090997	0					
ANR	3091010	Callee	dprintf		3090997	0					
ANR	3091011	Identifier	dprintf		3090997	0					
ANR	3091012	ArgumentList	D_FULLDEBUG		3090997	1					
ANR	3091013	Argument	D_FULLDEBUG		3090997	0					
ANR	3091014	Identifier	D_FULLDEBUG		3090997	0					
ANR	3091015	Argument	"""Period for SelfDrainingQueue %s set to %d\\n"""		3090997	1					
ANR	3091016	PrimaryExpression	"""Period for SelfDrainingQueue %s set to %d\\n"""		3090997	0					
ANR	3091017	Argument	name		3090997	2					
ANR	3091018	Identifier	name		3090997	0					
ANR	3091019	Argument	new_period		3090997	3					
ANR	3091020	Identifier	new_period		3090997	0					
ANR	3091021	ExpressionStatement	period = new_period	107:1:2446:2465	3090997	2	True				
ANR	3091022	AssignmentExpression	period = new_period		3090997	0		=			
ANR	3091023	Identifier	period		3090997	0					
ANR	3091024	Identifier	new_period		3090997	1					
ANR	3091025	IfStatement	if ( tid != - 1 )		3090997	3					
ANR	3091026	Condition	tid != - 1	108:5:2473:2481	3090997	0	True				
ANR	3091027	EqualityExpression	tid != - 1		3090997	0		!=			
ANR	3091028	Identifier	tid		3090997	0					
ANR	3091029	UnaryOperationExpression	- 1		3090997	1					
ANR	3091030	UnaryOperator	-		3090997	0					
ANR	3091031	PrimaryExpression	1		3090997	1					
ANR	3091032	CompoundStatement		8:17:184:184	3090997	1					
ANR	3091033	ExpressionStatement	resetTimer ( )	109:2:2490:2502	3090997	0	True				
ANR	3091034	CallExpression	resetTimer ( )		3090997	0					
ANR	3091035	Callee	resetTimer		3090997	0					
ANR	3091036	Identifier	resetTimer		3090997	0					
ANR	3091037	ArgumentList			3090997	1					
ANR	3091038	ReturnStatement	return true ;	111:1:2508:2519	3090997	4	True				
ANR	3091039	Identifier	true		3090997	0					
ANR	3091040	ReturnType	bool		3090997	1					
ANR	3091041	Identifier	SelfDrainingQueue :: setPeriod		3090997	2					
ANR	3091042	ParameterList	int new_period		3090997	3					
ANR	3091043	Parameter	int new_period	100:30:2283:2296	3090997	0	True				
ANR	3091044	ParameterType	int		3090997	0					
ANR	3091045	Identifier	new_period		3090997	1					
ANR	3091046	CFGEntryNode	ENTRY		3090997		True				
ANR	3091047	CFGExitNode	EXIT		3090997		True				
ANR	3091048	Symbol	period		3090997						
ANR	3091049	Symbol	false		3090997						
ANR	3091050	Symbol	name		3090997						
ANR	3091051	Symbol	true		3090997						
ANR	3091052	Symbol	D_FULLDEBUG		3090997						
ANR	3091053	Symbol	new_period		3090997						
ANR	3091054	Symbol	tid		3090997						
ANR	3091055	Function	SelfDrainingQueue :: setCountPerInterval	114:0:2524:2740							
ANR	3091056	FunctionDef	SelfDrainingQueue :: setCountPerInterval (int count)		3091055	0					
ANR	3091057	CompoundStatement		116:0:2581:2740	3091055	0					
ANR	3091058	ExpressionStatement	m_count_per_interval = count	117:1:2584:2612	3091055	0	True				
ANR	3091059	AssignmentExpression	m_count_per_interval = count		3091055	0		=			
ANR	3091060	Identifier	m_count_per_interval		3091055	0					
ANR	3091061	Identifier	count		3091055	1					
ANR	3091062	Statement	dprintf	118:1:2615:2621	3091055	1	True				
ANR	3091063	Statement	(	118:8:2622:2622	3091055	2	True				
ANR	3091064	Statement	D_FULLDEBUG	118:10:2624:2634	3091055	3	True				
ANR	3091065	Statement	","	118:21:2635:2635	3091055	4	True				
ANR	3091066	Statement	"""Count per interval for SelfDrainingQueue """	118:23:2637:2679	3091055	5	True				
ANR	3091067	Statement	"""%s set to %d\\n"""	119:4:2685:2700	3091055	6	True				
ANR	3091068	Statement	","	119:20:2701:2701	3091055	7	True				
ANR	3091069	Statement	name	119:22:2703:2706	3091055	8	True				
ANR	3091070	Statement	","	119:26:2707:2707	3091055	9	True				
ANR	3091071	Statement	count	119:28:2709:2713	3091055	10	True				
ANR	3091072	Statement	)	119:34:2715:2715	3091055	11	True				
ANR	3091073	ExpressionStatement		119:35:2716:2716	3091055	12	True				
ANR	3091074	ExpressionStatement	ASSERT ( count > 0 )	120:1:2719:2738	3091055	13	True				
ANR	3091075	CallExpression	ASSERT ( count > 0 )		3091055	0					
ANR	3091076	Callee	ASSERT		3091055	0					
ANR	3091077	Identifier	ASSERT		3091055	0					
ANR	3091078	ArgumentList	count > 0		3091055	1					
ANR	3091079	Argument	count > 0		3091055	0					
ANR	3091080	RelationalExpression	count > 0		3091055	0		>			
ANR	3091081	Identifier	count		3091055	0					
ANR	3091082	PrimaryExpression	0		3091055	1					
ANR	3091083	ReturnType	void		3091055	1					
ANR	3091084	Identifier	SelfDrainingQueue :: setCountPerInterval		3091055	2					
ANR	3091085	ParameterList	int count		3091055	3					
ANR	3091086	Parameter	int count	115:40:2569:2577	3091055	0	True				
ANR	3091087	ParameterType	int		3091055	0					
ANR	3091088	Identifier	count		3091055	1					
ANR	3091089	CFGEntryNode	ENTRY		3091055		True				
ANR	3091090	CFGExitNode	EXIT		3091055		True				
ANR	3091091	Symbol	count		3091055						
ANR	3091092	Symbol	m_count_per_interval		3091055						
ANR	3091093	Function	SelfDrainingQueue :: enqueue	129:0:2872:3342							
ANR	3091094	FunctionDef	"SelfDrainingQueue :: enqueue (ServiceData * data , bool allow_dups)"		3091093	0					
ANR	3091095	CompoundStatement		131:0:2942:3342	3091093	0					
ANR	3091096	IfStatement	if ( ! allow_dups )		3091093	0					
ANR	3091097	Condition	! allow_dups	132:5:2949:2960	3091093	0	True				
ANR	3091098	UnaryOperationExpression	! allow_dups		3091093	0					
ANR	3091099	UnaryOperator	!		3091093	0					
ANR	3091100	Identifier	allow_dups		3091093	1					
ANR	3091101	CompoundStatement		3:2:25:61	3091093	1					
ANR	3091102	IdentifierDeclStatement	SelfDrainingHashItem hash_item ( data ) ;	133:2:2968:3004	3091093	0	True				
ANR	3091103	IdentifierDecl	hash_item ( data )		3091093	0					
ANR	3091104	IdentifierDeclType	SelfDrainingHashItem		3091093	0					
ANR	3091105	Identifier	hash_item		3091093	1					
ANR	3091106	Identifier	data		3091093	2					
ANR	3091107	IfStatement	"if ( m_hash . insert ( hash_item , true ) == - 1 )"		3091093	1					
ANR	3091108	Condition	"m_hash . insert ( hash_item , true ) == - 1"	134:6:3012:3046	3091093	0	True				
ANR	3091109	EqualityExpression	"m_hash . insert ( hash_item , true ) == - 1"		3091093	0		==			
ANR	3091110	CallExpression	"m_hash . insert ( hash_item , true )"		3091093	0					
ANR	3091111	Callee	m_hash . insert		3091093	0					
ANR	3091112	MemberAccess	m_hash . insert		3091093	0					
ANR	3091113	Identifier	m_hash		3091093	0					
ANR	3091114	Identifier	insert		3091093	1					
ANR	3091115	ArgumentList	hash_item		3091093	1					
ANR	3091116	Argument	hash_item		3091093	0					
ANR	3091117	Identifier	hash_item		3091093	0					
ANR	3091118	Argument	true		3091093	1					
ANR	3091119	Identifier	true		3091093	0					
ANR	3091120	UnaryOperationExpression	- 1		3091093	1					
ANR	3091121	UnaryOperator	-		3091093	0					
ANR	3091122	PrimaryExpression	1		3091093	1					
ANR	3091123	CompoundStatement		4:44:107:107	3091093	1					
ANR	3091124	Statement	dprintf	135:3:3055:3061	3091093	0	True				
ANR	3091125	Statement	(	135:10:3062:3062	3091093	1	True				
ANR	3091126	Statement	D_FULLDEBUG	135:12:3064:3074	3091093	2	True				
ANR	3091127	Statement	","	135:23:3075:3075	3091093	3	True				
ANR	3091128	Statement	"""SelfDrainingQueue::enqueue() """	135:25:3077:3107	3091093	4	True				
ANR	3091129	Statement	"""refusing duplicate data\\n"""	136:6:3115:3141	3091093	5	True				
ANR	3091130	Statement	)	136:34:3143:3143	3091093	6	True				
ANR	3091131	ExpressionStatement		136:35:3144:3144	3091093	7	True				
ANR	3091132	ReturnStatement	return false ;	137:3:3149:3161	3091093	8	True				
ANR	3091133	Identifier	false		3091093	0					
ANR	3091134	ExpressionStatement	queue . enqueue ( data )	140:1:3171:3190	3091093	1	True				
ANR	3091135	CallExpression	queue . enqueue ( data )		3091093	0					
ANR	3091136	Callee	queue . enqueue		3091093	0					
ANR	3091137	MemberAccess	queue . enqueue		3091093	0					
ANR	3091138	Identifier	queue		3091093	0					
ANR	3091139	Identifier	enqueue		3091093	1					
ANR	3091140	ArgumentList	data		3091093	1					
ANR	3091141	Argument	data		3091093	0					
ANR	3091142	Identifier	data		3091093	0					
ANR	3091143	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Added data to SelfDrainingQueue %s, now has %d element(s)\\n"" , name , queue . Length ( ) )"	141:1:3193:3308	3091093	2	True				
ANR	3091144	CallExpression	"dprintf ( D_FULLDEBUG , ""Added data to SelfDrainingQueue %s, now has %d element(s)\\n"" , name , queue . Length ( ) )"		3091093	0					
ANR	3091145	Callee	dprintf		3091093	0					
ANR	3091146	Identifier	dprintf		3091093	0					
ANR	3091147	ArgumentList	D_FULLDEBUG		3091093	1					
ANR	3091148	Argument	D_FULLDEBUG		3091093	0					
ANR	3091149	Identifier	D_FULLDEBUG		3091093	0					
ANR	3091150	Argument	"""Added data to SelfDrainingQueue %s, now has %d element(s)\\n"""		3091093	1					
ANR	3091151	PrimaryExpression	"""Added data to SelfDrainingQueue %s, now has %d element(s)\\n"""		3091093	0					
ANR	3091152	Argument	name		3091093	2					
ANR	3091153	Identifier	name		3091093	0					
ANR	3091154	Argument	queue . Length ( )		3091093	3					
ANR	3091155	CallExpression	queue . Length ( )		3091093	0					
ANR	3091156	Callee	queue . Length		3091093	0					
ANR	3091157	MemberAccess	queue . Length		3091093	0					
ANR	3091158	Identifier	queue		3091093	0					
ANR	3091159	Identifier	Length		3091093	1					
ANR	3091160	ArgumentList			3091093	1					
ANR	3091161	ExpressionStatement	registerTimer ( )	144:1:3311:3326	3091093	3	True				
ANR	3091162	CallExpression	registerTimer ( )		3091093	0					
ANR	3091163	Callee	registerTimer		3091093	0					
ANR	3091164	Identifier	registerTimer		3091093	0					
ANR	3091165	ArgumentList			3091093	1					
ANR	3091166	ReturnStatement	return true ;	145:1:3329:3340	3091093	4	True				
ANR	3091167	Identifier	true		3091093	0					
ANR	3091168	ReturnType	bool		3091093	1					
ANR	3091169	Identifier	SelfDrainingQueue :: enqueue		3091093	2					
ANR	3091170	ParameterList	"ServiceData * data , bool allow_dups"		3091093	3					
ANR	3091171	Parameter	ServiceData * data	130:28:2905:2921	3091093	0	True				
ANR	3091172	ParameterType	ServiceData *		3091093	0					
ANR	3091173	Identifier	data		3091093	1					
ANR	3091174	Parameter	bool allow_dups	130:47:2924:2938	3091093	1	True				
ANR	3091175	ParameterType	bool		3091093	0					
ANR	3091176	Identifier	allow_dups		3091093	1					
ANR	3091177	CFGEntryNode	ENTRY		3091093		True				
ANR	3091178	CFGExitNode	EXIT		3091093		True				
ANR	3091179	Symbol	data		3091093						
ANR	3091180	Symbol	allow_dups		3091093						
ANR	3091181	Symbol	true		3091093						
ANR	3091182	Symbol	false		3091093						
ANR	3091183	Symbol	name		3091093						
ANR	3091184	Symbol	m_hash . insert		3091093						
ANR	3091185	Symbol	D_FULLDEBUG		3091093						
ANR	3091186	Symbol	hash_item		3091093						
ANR	3091187	Symbol	m_hash		3091093						
ANR	3091188	Symbol	queue . Length		3091093						
ANR	3091189	Symbol	queue		3091093						
ANR	3091190	Function	SelfDrainingQueue :: timerHandler	154:0:3474:4465							
ANR	3091191	FunctionDef	SelfDrainingQueue :: timerHandler ()		3091190	0					
ANR	3091192	CompoundStatement		156:0:3519:4465	3091190	0					
ANR	3091193	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside SelfDrainingQueue::timerHandler() for %s\\n"" , name )"	157:1:3522:3607	3091190	0	True				
ANR	3091194	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside SelfDrainingQueue::timerHandler() for %s\\n"" , name )"		3091190	0					
ANR	3091195	Callee	dprintf		3091190	0					
ANR	3091196	Identifier	dprintf		3091190	0					
ANR	3091197	ArgumentList	D_FULLDEBUG		3091190	1					
ANR	3091198	Argument	D_FULLDEBUG		3091190	0					
ANR	3091199	Identifier	D_FULLDEBUG		3091190	0					
ANR	3091200	Argument	"""Inside SelfDrainingQueue::timerHandler() for %s\\n"""		3091190	1					
ANR	3091201	PrimaryExpression	"""Inside SelfDrainingQueue::timerHandler() for %s\\n"""		3091190	0					
ANR	3091202	Argument	name		3091190	2					
ANR	3091203	Identifier	name		3091190	0					
ANR	3091204	IfStatement	if ( queue . IsEmpty ( ) )		3091190	1					
ANR	3091205	Condition	queue . IsEmpty ( )	160:5:3615:3629	3091190	0	True				
ANR	3091206	CallExpression	queue . IsEmpty ( )		3091190	0					
ANR	3091207	Callee	queue . IsEmpty		3091190	0					
ANR	3091208	MemberAccess	queue . IsEmpty		3091190	0					
ANR	3091209	Identifier	queue		3091190	0					
ANR	3091210	Identifier	IsEmpty		3091190	1					
ANR	3091211	ArgumentList			3091190	1					
ANR	3091212	CompoundStatement		5:23:113:113	3091190	1					
ANR	3091213	Statement	dprintf	161:2:3637:3643	3091190	0	True				
ANR	3091214	Statement	(	161:9:3644:3644	3091190	1	True				
ANR	3091215	Statement	D_FULLDEBUG	161:11:3646:3656	3091190	2	True				
ANR	3091216	Statement	","	161:22:3657:3657	3091190	3	True				
ANR	3091217	Statement	"""SelfDrainingQueue %s is empty, """	161:24:3659:3691	3091190	4	True				
ANR	3091218	Statement	"""timerHandler() has nothing to do\\n"""	162:5:3698:3733	3091190	5	True				
ANR	3091219	Statement	","	162:41:3734:3734	3091190	6	True				
ANR	3091220	Statement	name	162:43:3736:3739	3091190	7	True				
ANR	3091221	Statement	)	162:48:3741:3741	3091190	8	True				
ANR	3091222	ExpressionStatement		162:49:3742:3742	3091190	9	True				
ANR	3091223	ExpressionStatement	cancelTimer ( )	163:2:3746:3759	3091190	10	True				
ANR	3091224	CallExpression	cancelTimer ( )		3091190	0					
ANR	3091225	Callee	cancelTimer		3091190	0					
ANR	3091226	Identifier	cancelTimer		3091190	0					
ANR	3091227	ArgumentList			3091190	1					
ANR	3091228	ReturnStatement	return ;	164:2:3763:3769	3091190	11	True				
ANR	3091229	IdentifierDeclStatement	int count ;	166:1:3775:3784	3091190	2	True				
ANR	3091230	IdentifierDecl	count		3091190	0					
ANR	3091231	IdentifierDeclType	int		3091190	0					
ANR	3091232	Identifier	count		3091190	1					
ANR	3091233	ForStatement	for ( count = 0 ; count < m_count_per_interval && ! queue . IsEmpty ( ) ; count ++ )		3091190	3					
ANR	3091234	ForInit	count = 0 ;	167:6:3792:3799	3091190	0	True				
ANR	3091235	AssignmentExpression	count = 0		3091190	0		=			
ANR	3091236	Identifier	count		3091190	0					
ANR	3091237	PrimaryExpression	0		3091190	1					
ANR	3091238	Condition	count < m_count_per_interval && ! queue . IsEmpty ( )	167:15:3801:3846	3091190	1	True				
ANR	3091239	AndExpression	count < m_count_per_interval && ! queue . IsEmpty ( )		3091190	0		&&			
ANR	3091240	RelationalExpression	count < m_count_per_interval		3091190	0		<			
ANR	3091241	Identifier	count		3091190	0					
ANR	3091242	Identifier	m_count_per_interval		3091190	1					
ANR	3091243	UnaryOperationExpression	! queue . IsEmpty ( )		3091190	1					
ANR	3091244	UnaryOperator	!		3091190	0					
ANR	3091245	CallExpression	queue . IsEmpty ( )		3091190	1					
ANR	3091246	Callee	queue . IsEmpty		3091190	0					
ANR	3091247	MemberAccess	queue . IsEmpty		3091190	0					
ANR	3091248	Identifier	queue		3091190	0					
ANR	3091249	Identifier	IsEmpty		3091190	1					
ANR	3091250	ArgumentList			3091190	1					
ANR	3091251	PostIncDecOperationExpression	count ++	167:63:3849:3855	3091190	2	True				
ANR	3091252	Identifier	count		3091190	0					
ANR	3091253	IncDec	++		3091190	1					
ANR	3091254	CompoundStatement		16:2:389:422	3091190	3					
ANR	3091255	IdentifierDeclStatement	ServiceData * d = NULL ;	168:2:3863:3884	3091190	0	True				
ANR	3091256	IdentifierDecl	* d = NULL		3091190	0					
ANR	3091257	IdentifierDeclType	ServiceData *		3091190	0					
ANR	3091258	Identifier	d		3091190	1					
ANR	3091259	AssignmentExpression	* d = NULL		3091190	2		=			
ANR	3091260	Identifier	NULL		3091190	0					
ANR	3091261	Identifier	NULL		3091190	1					
ANR	3091262	ExpressionStatement	queue . dequeue ( d )	169:2:3888:3904	3091190	1	True				
ANR	3091263	CallExpression	queue . dequeue ( d )		3091190	0					
ANR	3091264	Callee	queue . dequeue		3091190	0					
ANR	3091265	MemberAccess	queue . dequeue		3091190	0					
ANR	3091266	Identifier	queue		3091190	0					
ANR	3091267	Identifier	dequeue		3091190	1					
ANR	3091268	ArgumentList	d		3091190	1					
ANR	3091269	Argument	d		3091190	0					
ANR	3091270	Identifier	d		3091190	0					
ANR	3091271	IdentifierDeclStatement	SelfDrainingHashItem hash_item ( d ) ;	171:2:3909:3942	3091190	2	True				
ANR	3091272	IdentifierDecl	hash_item ( d )		3091190	0					
ANR	3091273	IdentifierDeclType	SelfDrainingHashItem		3091190	0					
ANR	3091274	Identifier	hash_item		3091190	1					
ANR	3091275	Identifier	d		3091190	2					
ANR	3091276	ExpressionStatement	m_hash . remove ( hash_item )	172:2:3946:3970	3091190	3	True				
ANR	3091277	CallExpression	m_hash . remove ( hash_item )		3091190	0					
ANR	3091278	Callee	m_hash . remove		3091190	0					
ANR	3091279	MemberAccess	m_hash . remove		3091190	0					
ANR	3091280	Identifier	m_hash		3091190	0					
ANR	3091281	Identifier	remove		3091190	1					
ANR	3091282	ArgumentList	hash_item		3091190	1					
ANR	3091283	Argument	hash_item		3091190	0					
ANR	3091284	Identifier	hash_item		3091190	0					
ANR	3091285	IfStatement	if ( handler_fn )		3091190	4					
ANR	3091286	Condition	handler_fn	174:6:3979:3988	3091190	0	True				
ANR	3091287	Identifier	handler_fn		3091190	0					
ANR	3091288	CompoundStatement		19:19:472:472	3091190	1					
ANR	3091289	ExpressionStatement	handler_fn ( d )	175:3:3997:4012	3091190	0	True				
ANR	3091290	CallExpression	handler_fn ( d )		3091190	0					
ANR	3091291	Callee	handler_fn		3091190	0					
ANR	3091292	Identifier	handler_fn		3091190	0					
ANR	3091293	ArgumentList	d		3091190	1					
ANR	3091294	Argument	d		3091190	0					
ANR	3091295	Identifier	d		3091190	0					
ANR	3091296	ElseStatement	else		3091190	0					
ANR	3091297	IfStatement	if ( handlercpp_fn && service_ptr )		3091190	0					
ANR	3091298	Condition	handlercpp_fn && service_ptr	176:13:4027:4054	3091190	0	True				
ANR	3091299	AndExpression	handlercpp_fn && service_ptr		3091190	0		&&			
ANR	3091300	Identifier	handlercpp_fn		3091190	0					
ANR	3091301	Identifier	service_ptr		3091190	1					
ANR	3091302	CompoundStatement		21:44:538:538	3091190	1					
ANR	3091303	Statement	(	177:3:4063:4063	3091190	0	True				
ANR	3091304	Statement	service_ptr	177:4:4064:4074	3091190	1	True				
ANR	3091305	Statement	->*	177:15:4075:4077	3091190	2	True				
ANR	3091306	Statement	handlercpp_fn	177:18:4078:4090	3091190	3	True				
ANR	3091307	Statement	)	177:31:4091:4091	3091190	4	True				
ANR	3091308	ExpressionStatement	d	177:32:4092:4097	3091190	5	True				
ANR	3091309	Identifier	d		3091190	0					
ANR	3091310	IfStatement	if ( queue . IsEmpty ( ) )		3091190	4					
ANR	3091311	Condition	queue . IsEmpty ( )	181:5:4112:4126	3091190	0	True				
ANR	3091312	CallExpression	queue . IsEmpty ( )		3091190	0					
ANR	3091313	Callee	queue . IsEmpty		3091190	0					
ANR	3091314	MemberAccess	queue . IsEmpty		3091190	0					
ANR	3091315	Identifier	queue		3091190	0					
ANR	3091316	Identifier	IsEmpty		3091190	1					
ANR	3091317	ArgumentList			3091190	1					
ANR	3091318	CompoundStatement		26:23:610:610	3091190	1					
ANR	3091319	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""SelfDrainingQueue %s is empty, not resetting timer\\n"" , name )"	182:2:4134:4228	3091190	0	True				
ANR	3091320	CallExpression	"dprintf ( D_FULLDEBUG , ""SelfDrainingQueue %s is empty, not resetting timer\\n"" , name )"		3091190	0					
ANR	3091321	Callee	dprintf		3091190	0					
ANR	3091322	Identifier	dprintf		3091190	0					
ANR	3091323	ArgumentList	D_FULLDEBUG		3091190	1					
ANR	3091324	Argument	D_FULLDEBUG		3091190	0					
ANR	3091325	Identifier	D_FULLDEBUG		3091190	0					
ANR	3091326	Argument	"""SelfDrainingQueue %s is empty, not resetting timer\\n"""		3091190	1					
ANR	3091327	PrimaryExpression	"""SelfDrainingQueue %s is empty, not resetting timer\\n"""		3091190	0					
ANR	3091328	Argument	name		3091190	2					
ANR	3091329	Identifier	name		3091190	0					
ANR	3091330	ExpressionStatement	cancelTimer ( )	185:2:4232:4245	3091190	1	True				
ANR	3091331	CallExpression	cancelTimer ( )		3091190	0					
ANR	3091332	Callee	cancelTimer		3091190	0					
ANR	3091333	Identifier	cancelTimer		3091190	0					
ANR	3091334	ArgumentList			3091190	1					
ANR	3091335	ElseStatement	else		3091190	0					
ANR	3091336	CompoundStatement		31:8:735:735	3091190	0					
ANR	3091337	Statement	dprintf	188:2:4320:4326	3091190	0	True				
ANR	3091338	Statement	(	188:9:4327:4327	3091190	1	True				
ANR	3091339	Statement	D_FULLDEBUG	188:11:4329:4339	3091190	2	True				
ANR	3091340	Statement	","	188:22:4340:4340	3091190	3	True				
ANR	3091341	Statement	"""SelfDrainingQueue %s still has %d element(s), """	189:5:4347:4394	3091190	4	True				
ANR	3091342	Statement	"""resetting timer\\n"""	190:5:4401:4419	3091190	5	True				
ANR	3091343	Statement	","	190:24:4420:4420	3091190	6	True				
ANR	3091344	Statement	name	190:26:4422:4425	3091190	7	True				
ANR	3091345	Statement	","	190:30:4426:4426	3091190	8	True				
ANR	3091346	Statement	queue	190:32:4428:4432	3091190	9	True				
ANR	3091347	Statement	.	190:37:4433:4433	3091190	10	True				
ANR	3091348	Statement	Length	190:38:4434:4439	3091190	11	True				
ANR	3091349	Statement	(	190:44:4440:4440	3091190	12	True				
ANR	3091350	Statement	)	190:45:4441:4441	3091190	13	True				
ANR	3091351	Statement	)	190:47:4443:4443	3091190	14	True				
ANR	3091352	ExpressionStatement		190:48:4444:4444	3091190	15	True				
ANR	3091353	ExpressionStatement	resetTimer ( )	191:2:4448:4460	3091190	16	True				
ANR	3091354	CallExpression	resetTimer ( )		3091190	0					
ANR	3091355	Callee	resetTimer		3091190	0					
ANR	3091356	Identifier	resetTimer		3091190	0					
ANR	3091357	ArgumentList			3091190	1					
ANR	3091358	ReturnType	void		3091190	1					
ANR	3091359	Identifier	SelfDrainingQueue :: timerHandler		3091190	2					
ANR	3091360	ParameterList			3091190	3					
ANR	3091361	CFGEntryNode	ENTRY		3091190		True				
ANR	3091362	CFGExitNode	EXIT		3091190		True				
ANR	3091363	Symbol	NULL		3091190						
ANR	3091364	Symbol	d		3091190						
ANR	3091365	Symbol	handlercpp_fn		3091190						
ANR	3091366	Symbol	count		3091190						
ANR	3091367	Symbol	D_FULLDEBUG		3091190						
ANR	3091368	Symbol	hash_item		3091190						
ANR	3091369	Symbol	m_hash		3091190						
ANR	3091370	Symbol	service_ptr		3091190						
ANR	3091371	Symbol	queue . IsEmpty		3091190						
ANR	3091372	Symbol	name		3091190						
ANR	3091373	Symbol	m_count_per_interval		3091190						
ANR	3091374	Symbol	handler_fn		3091190						
ANR	3091375	Symbol	queue		3091190						
ANR	3091376	Function	SelfDrainingQueue :: registerTimer	196:0:4469:5441							
ANR	3091377	FunctionDef	SelfDrainingQueue :: registerTimer ()		3091376	0					
ANR	3091378	CompoundStatement		198:0:4515:5441	3091376	0					
ANR	3091379	IfStatement	if ( ! handler_fn && ! ( service_ptr && handlercpp_fn ) )		3091376	0					
ANR	3091380	Condition	! handler_fn && ! ( service_ptr && handlercpp_fn )	199:5:4522:4567	3091376	0	True				
ANR	3091381	AndExpression	! handler_fn && ! ( service_ptr && handlercpp_fn )		3091376	0		&&			
ANR	3091382	UnaryOperationExpression	! handler_fn		3091376	0					
ANR	3091383	UnaryOperator	!		3091376	0					
ANR	3091384	Identifier	handler_fn		3091376	1					
ANR	3091385	UnaryOperationExpression	! ( service_ptr && handlercpp_fn )		3091376	1					
ANR	3091386	UnaryOperator	!		3091376	0					
ANR	3091387	AndExpression	service_ptr && handlercpp_fn		3091376	1		&&			
ANR	3091388	Identifier	service_ptr		3091376	0					
ANR	3091389	Identifier	handlercpp_fn		3091376	1					
ANR	3091390	CompoundStatement		2:54:55:55	3091376	1					
ANR	3091391	Statement	EXCEPT	200:2:4575:4580	3091376	0	True				
ANR	3091392	Statement	(	200:8:4581:4581	3091376	1	True				
ANR	3091393	Statement	"""Programmer error: trying to register timer for """	200:10:4583:4631	3091376	2	True				
ANR	3091394	Statement	"""SelfDrainingQueue %s without having a handler function"""	201:4:4637:4692	3091376	3	True				
ANR	3091395	Statement	","	201:60:4693:4693	3091376	4	True				
ANR	3091396	Statement	name	202:4:4700:4703	3091376	5	True				
ANR	3091397	Statement	)	202:9:4705:4705	3091376	6	True				
ANR	3091398	ExpressionStatement		202:10:4706:4706	3091376	7	True				
ANR	3091399	IfStatement	if ( tid != - 1 )		3091376	1					
ANR	3091400	Condition	tid != - 1	208:5:4896:4904	3091376	0	True				
ANR	3091401	EqualityExpression	tid != - 1		3091376	0		!=			
ANR	3091402	Identifier	tid		3091376	0					
ANR	3091403	UnaryOperationExpression	- 1		3091376	1					
ANR	3091404	UnaryOperator	-		3091376	0					
ANR	3091405	PrimaryExpression	1		3091376	1					
ANR	3091406	CompoundStatement		11:17:392:392	3091376	1					
ANR	3091407	Statement	dprintf	209:2:4912:4918	3091376	0	True				
ANR	3091408	Statement	(	209:9:4919:4919	3091376	1	True				
ANR	3091409	Statement	D_FULLDEBUG	209:11:4921:4931	3091376	2	True				
ANR	3091410	Statement	","	209:22:4932:4932	3091376	3	True				
ANR	3091411	Statement	"""Timer for SelfDrainingQueue %s is already """	209:24:4934:4977	3091376	4	True				
ANR	3091412	Statement	"""registered (id: %d)\\n"""	210:5:4984:5006	3091376	5	True				
ANR	3091413	Statement	","	210:28:5007:5007	3091376	6	True				
ANR	3091414	Statement	name	210:30:5009:5012	3091376	7	True				
ANR	3091415	Statement	","	210:34:5013:5013	3091376	8	True				
ANR	3091416	Statement	tid	210:36:5015:5017	3091376	9	True				
ANR	3091417	Statement	)	210:40:5019:5019	3091376	10	True				
ANR	3091418	ExpressionStatement		210:41:5020:5020	3091376	11	True				
ANR	3091419	ReturnStatement	return ;	211:2:5024:5030	3091376	12	True				
ANR	3091420	ExpressionStatement	"tid = daemonCore -> Register_Timer ( period , ( TimerHandlercpp ) & SelfDrainingQueue :: timerHandler , timer_name , this )"	214:1:5037:5164	3091376	2	True				
ANR	3091421	AssignmentExpression	"tid = daemonCore -> Register_Timer ( period , ( TimerHandlercpp ) & SelfDrainingQueue :: timerHandler , timer_name , this )"		3091376	0		=			
ANR	3091422	Identifier	tid		3091376	0					
ANR	3091423	CallExpression	"daemonCore -> Register_Timer ( period , ( TimerHandlercpp ) & SelfDrainingQueue :: timerHandler , timer_name , this )"		3091376	1					
ANR	3091424	Callee	daemonCore -> Register_Timer		3091376	0					
ANR	3091425	PtrMemberAccess	daemonCore -> Register_Timer		3091376	0					
ANR	3091426	Identifier	daemonCore		3091376	0					
ANR	3091427	Identifier	Register_Timer		3091376	1					
ANR	3091428	ArgumentList	period		3091376	1					
ANR	3091429	Argument	period		3091376	0					
ANR	3091430	Identifier	period		3091376	0					
ANR	3091431	Argument	( TimerHandlercpp ) & SelfDrainingQueue :: timerHandler		3091376	1					
ANR	3091432	CastExpression	( TimerHandlercpp ) & SelfDrainingQueue :: timerHandler		3091376	0					
ANR	3091433	CastTarget	TimerHandlercpp		3091376	0					
ANR	3091434	UnaryOperationExpression	& SelfDrainingQueue :: timerHandler		3091376	1					
ANR	3091435	UnaryOperator	&		3091376	0					
ANR	3091436	Identifier	SelfDrainingQueue :: timerHandler		3091376	1					
ANR	3091437	Argument	timer_name		3091376	2					
ANR	3091438	Identifier	timer_name		3091376	0					
ANR	3091439	Argument	this		3091376	3					
ANR	3091440	Identifier	this		3091376	0					
ANR	3091441	IfStatement	if ( tid == - 1 )		3091376	3					
ANR	3091442	Condition	tid == - 1	218:8:5174:5182	3091376	0	True				
ANR	3091443	EqualityExpression	tid == - 1		3091376	0		==			
ANR	3091444	Identifier	tid		3091376	0					
ANR	3091445	UnaryOperationExpression	- 1		3091376	1					
ANR	3091446	UnaryOperator	-		3091376	0					
ANR	3091447	PrimaryExpression	1		3091376	1					
ANR	3091448	CompoundStatement		21:20:670:670	3091376	1					
ANR	3091449	ExpressionStatement	"EXCEPT ( ""Can't register daemonCore timer for SelfDrainingQueue %s"" , name )"	220:8:5236:5314	3091376	0	True				
ANR	3091450	CallExpression	"EXCEPT ( ""Can't register daemonCore timer for SelfDrainingQueue %s"" , name )"		3091376	0					
ANR	3091451	Callee	EXCEPT		3091376	0					
ANR	3091452	Identifier	EXCEPT		3091376	0					
ANR	3091453	ArgumentList	"""Can't register daemonCore timer for SelfDrainingQueue %s"""		3091376	1					
ANR	3091454	Argument	"""Can't register daemonCore timer for SelfDrainingQueue %s"""		3091376	0					
ANR	3091455	PrimaryExpression	"""Can't register daemonCore timer for SelfDrainingQueue %s"""		3091376	0					
ANR	3091456	Argument	name		3091376	1					
ANR	3091457	Identifier	name		3091376	0					
ANR	3091458	Statement	dprintf	223:1:5323:5329	3091376	4	True				
ANR	3091459	Statement	(	223:8:5330:5330	3091376	5	True				
ANR	3091460	Statement	D_FULLDEBUG	223:10:5332:5342	3091376	6	True				
ANR	3091461	Statement	","	223:21:5343:5343	3091376	7	True				
ANR	3091462	Statement	"""Registered timer for SelfDrainingQueue %s, """	223:23:5345:5389	3091376	8	True				
ANR	3091463	Statement	"""period: %d (id: %d)\\n"""	224:4:5395:5417	3091376	9	True				
ANR	3091464	Statement	","	224:27:5418:5418	3091376	10	True				
ANR	3091465	Statement	name	224:29:5420:5423	3091376	11	True				
ANR	3091466	Statement	","	224:33:5424:5424	3091376	12	True				
ANR	3091467	Statement	period	224:35:5426:5431	3091376	13	True				
ANR	3091468	Statement	","	224:41:5432:5432	3091376	14	True				
ANR	3091469	Statement	tid	224:43:5434:5436	3091376	15	True				
ANR	3091470	Statement	)	224:47:5438:5438	3091376	16	True				
ANR	3091471	ExpressionStatement		224:48:5439:5439	3091376	17	True				
ANR	3091472	ReturnType	void		3091376	1					
ANR	3091473	Identifier	SelfDrainingQueue :: registerTimer		3091376	2					
ANR	3091474	ParameterList			3091376	3					
ANR	3091475	CFGEntryNode	ENTRY		3091376		True				
ANR	3091476	CFGExitNode	EXIT		3091376		True				
ANR	3091477	Symbol	service_ptr		3091376						
ANR	3091478	Symbol	timer_name		3091376						
ANR	3091479	Symbol	period		3091376						
ANR	3091480	Symbol	* daemonCore		3091376						
ANR	3091481	Symbol	handlercpp_fn		3091376						
ANR	3091482	Symbol	daemonCore		3091376						
ANR	3091483	Symbol	daemonCore -> Register_Timer		3091376						
ANR	3091484	Symbol	this		3091376						
ANR	3091485	Symbol	name		3091376						
ANR	3091486	Symbol	handler_fn		3091376						
ANR	3091487	Symbol	& SelfDrainingQueue :: timerHandler		3091376						
ANR	3091488	Symbol	tid		3091376						
ANR	3091489	Function	SelfDrainingQueue :: cancelTimer	228:0:5445:5666							
ANR	3091490	FunctionDef	SelfDrainingQueue :: cancelTimer ()		3091489	0					
ANR	3091491	CompoundStatement		230:0:5489:5666	3091489	0					
ANR	3091492	IfStatement	if ( tid != - 1 )		3091489	0					
ANR	3091493	Condition	tid != - 1	231:5:5496:5504	3091489	0	True				
ANR	3091494	EqualityExpression	tid != - 1		3091489	0		!=			
ANR	3091495	Identifier	tid		3091489	0					
ANR	3091496	UnaryOperationExpression	- 1		3091489	1					
ANR	3091497	UnaryOperator	-		3091489	0					
ANR	3091498	PrimaryExpression	1		3091489	1					
ANR	3091499	CompoundStatement		2:17:18:18	3091489	1					
ANR	3091500	Statement	dprintf	232:2:5512:5518	3091489	0	True				
ANR	3091501	Statement	(	232:9:5519:5519	3091489	1	True				
ANR	3091502	Statement	D_FULLDEBUG	232:11:5521:5531	3091489	2	True				
ANR	3091503	Statement	","	232:22:5532:5532	3091489	3	True				
ANR	3091504	Statement	"""Canceling timer for SelfDrainingQueue %s """	232:24:5534:5576	3091489	4	True				
ANR	3091505	Statement	"""(timer id: %d)\\n"""	233:5:5583:5600	3091489	5	True				
ANR	3091506	Statement	","	233:23:5601:5601	3091489	6	True				
ANR	3091507	Statement	name	233:25:5603:5606	3091489	7	True				
ANR	3091508	Statement	","	233:29:5607:5607	3091489	8	True				
ANR	3091509	Statement	tid	233:31:5609:5611	3091489	9	True				
ANR	3091510	Statement	)	233:35:5613:5613	3091489	10	True				
ANR	3091511	ExpressionStatement		233:36:5614:5614	3091489	11	True				
ANR	3091512	ExpressionStatement	daemonCore -> Cancel_Timer ( tid )	234:2:5618:5649	3091489	12	True				
ANR	3091513	CallExpression	daemonCore -> Cancel_Timer ( tid )		3091489	0					
ANR	3091514	Callee	daemonCore -> Cancel_Timer		3091489	0					
ANR	3091515	PtrMemberAccess	daemonCore -> Cancel_Timer		3091489	0					
ANR	3091516	Identifier	daemonCore		3091489	0					
ANR	3091517	Identifier	Cancel_Timer		3091489	1					
ANR	3091518	ArgumentList	tid		3091489	1					
ANR	3091519	Argument	tid		3091489	0					
ANR	3091520	Identifier	tid		3091489	0					
ANR	3091521	ExpressionStatement	tid = - 1	235:2:5653:5661	3091489	13	True				
ANR	3091522	AssignmentExpression	tid = - 1		3091489	0		=			
ANR	3091523	Identifier	tid		3091489	0					
ANR	3091524	UnaryOperationExpression	- 1		3091489	1					
ANR	3091525	UnaryOperator	-		3091489	0					
ANR	3091526	PrimaryExpression	1		3091489	1					
ANR	3091527	ReturnType	void		3091489	1					
ANR	3091528	Identifier	SelfDrainingQueue :: cancelTimer		3091489	2					
ANR	3091529	ParameterList			3091489	3					
ANR	3091530	CFGEntryNode	ENTRY		3091489		True				
ANR	3091531	CFGExitNode	EXIT		3091489		True				
ANR	3091532	Symbol	daemonCore		3091489						
ANR	3091533	Symbol	tid		3091489						
ANR	3091534	Function	SelfDrainingQueue :: resetTimer	240:0:5670:5965							
ANR	3091535	FunctionDef	SelfDrainingQueue :: resetTimer ()		3091534	0					
ANR	3091536	CompoundStatement		242:0:5713:5965	3091534	0					
ANR	3091537	IfStatement	if ( tid == - 1 )		3091534	0					
ANR	3091538	Condition	tid == - 1	243:5:5720:5728	3091534	0	True				
ANR	3091539	EqualityExpression	tid == - 1		3091534	0		==			
ANR	3091540	Identifier	tid		3091534	0					
ANR	3091541	UnaryOperationExpression	- 1		3091534	1					
ANR	3091542	UnaryOperator	-		3091534	0					
ANR	3091543	PrimaryExpression	1		3091534	1					
ANR	3091544	CompoundStatement		2:17:18:18	3091534	1					
ANR	3091545	ExpressionStatement	"EXCEPT ( ""Programmer error: resetting a timer that doesn't exist"" )"	244:2:5736:5802	3091534	0	True				
ANR	3091546	CallExpression	"EXCEPT ( ""Programmer error: resetting a timer that doesn't exist"" )"		3091534	0					
ANR	3091547	Callee	EXCEPT		3091534	0					
ANR	3091548	Identifier	EXCEPT		3091534	0					
ANR	3091549	ArgumentList	"""Programmer error: resetting a timer that doesn't exist"""		3091534	1					
ANR	3091550	Argument	"""Programmer error: resetting a timer that doesn't exist"""		3091534	0					
ANR	3091551	PrimaryExpression	"""Programmer error: resetting a timer that doesn't exist"""		3091534	0					
ANR	3091552	ExpressionStatement	"daemonCore -> Reset_Timer ( tid , period , 0 )"	246:1:5808:5849	3091534	1	True				
ANR	3091553	CallExpression	"daemonCore -> Reset_Timer ( tid , period , 0 )"		3091534	0					
ANR	3091554	Callee	daemonCore -> Reset_Timer		3091534	0					
ANR	3091555	PtrMemberAccess	daemonCore -> Reset_Timer		3091534	0					
ANR	3091556	Identifier	daemonCore		3091534	0					
ANR	3091557	Identifier	Reset_Timer		3091534	1					
ANR	3091558	ArgumentList	tid		3091534	1					
ANR	3091559	Argument	tid		3091534	0					
ANR	3091560	Identifier	tid		3091534	0					
ANR	3091561	Argument	period		3091534	1					
ANR	3091562	Identifier	period		3091534	0					
ANR	3091563	Argument	0		3091534	2					
ANR	3091564	PrimaryExpression	0		3091534	0					
ANR	3091565	Statement	dprintf	247:1:5852:5858	3091534	2	True				
ANR	3091566	Statement	(	247:8:5859:5859	3091534	3	True				
ANR	3091567	Statement	D_FULLDEBUG	247:10:5861:5871	3091534	4	True				
ANR	3091568	Statement	","	247:21:5872:5872	3091534	5	True				
ANR	3091569	Statement	"""Reset timer for SelfDrainingQueue %s, """	247:23:5874:5913	3091534	6	True				
ANR	3091570	Statement	"""period: %d (id: %d)\\n"""	248:4:5919:5941	3091534	7	True				
ANR	3091571	Statement	","	248:27:5942:5942	3091534	8	True				
ANR	3091572	Statement	name	248:29:5944:5947	3091534	9	True				
ANR	3091573	Statement	","	248:33:5948:5948	3091534	10	True				
ANR	3091574	Statement	period	248:35:5950:5955	3091534	11	True				
ANR	3091575	Statement	","	248:41:5956:5956	3091534	12	True				
ANR	3091576	Statement	tid	248:43:5958:5960	3091534	13	True				
ANR	3091577	Statement	)	248:47:5962:5962	3091534	14	True				
ANR	3091578	ExpressionStatement		248:48:5963:5963	3091534	15	True				
ANR	3091579	ReturnType	void		3091534	1					
ANR	3091580	Identifier	SelfDrainingQueue :: resetTimer		3091534	2					
ANR	3091581	ParameterList			3091534	3					
ANR	3091582	CFGEntryNode	ENTRY		3091534		True				
ANR	3091583	CFGExitNode	EXIT		3091534		True				
ANR	3091584	Symbol	period		3091534						
ANR	3091585	Symbol	daemonCore		3091534						
ANR	3091586	Symbol	tid		3091534						
ANR	3091587	Function	SelfDrainingHashItem :: HashFn	251:0:5968:6080							
ANR	3091588	FunctionDef	SelfDrainingHashItem :: HashFn (SelfDrainingHashItem const & item)		3091587	0					
ANR	3091589	CompoundStatement		253:0:6044:6080	3091587	0					
ANR	3091590	ReturnStatement	return item . m_service -> HashFn ( ) ;	254:1:6047:6078	3091587	0	True				
ANR	3091591	CallExpression	item . m_service -> HashFn ( )		3091587	0					
ANR	3091592	Callee	item . m_service -> HashFn		3091587	0					
ANR	3091593	PtrMemberAccess	item . m_service -> HashFn		3091587	0					
ANR	3091594	MemberAccess	item . m_service		3091587	0					
ANR	3091595	Identifier	item		3091587	0					
ANR	3091596	Identifier	m_service		3091587	1					
ANR	3091597	Identifier	HashFn		3091587	1					
ANR	3091598	ArgumentList			3091587	1					
ANR	3091599	ReturnType	unsigned int		3091587	1					
ANR	3091600	Identifier	SelfDrainingHashItem :: HashFn		3091587	2					
ANR	3091601	ParameterList	SelfDrainingHashItem const & item		3091587	3					
ANR	3091602	Parameter	SelfDrainingHashItem const & item	252:29:6010:6041	3091587	0	True				
ANR	3091603	ParameterType	SelfDrainingHashItem const &		3091587	0					
ANR	3091604	Identifier	item		3091587	1					
ANR	3091605	CFGEntryNode	ENTRY		3091587		True				
ANR	3091606	CFGExitNode	EXIT		3091587		True				
ANR	3091607	Symbol	item		3091587						
ANR	3091608	Symbol	* item		3091587						
ANR	3091609	Symbol	item . m_service		3091587						
ANR	3091610	Symbol	* item . m_service		3091587						
ANR	3091611	Symbol	item . m_service -> HashFn		3091587						
