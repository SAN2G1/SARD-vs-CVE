command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4806029	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_libcondorapi_stubs.cpp								
ANR	4806030	Function	get_password_from_credd	28:0:958:1139							
ANR	4806031	FunctionDef	"get_password_from_credd (const char * credd_host , const char username [ ] , const char domain [ ] , char * pw , int cb)"		4806030	0					
ANR	4806032	CompoundStatement		35:0:1119:1139	4806030	0					
ANR	4806033	ReturnStatement	return false ;	36:4:1125:1137	4806030	0	True				
ANR	4806034	Identifier	false		4806030	0					
ANR	4806035	ReturnType	bool		4806030	1					
ANR	4806036	Identifier	get_password_from_credd		4806030	2					
ANR	4806037	ParameterList	"const char * credd_host , const char username [ ] , const char domain [ ] , char * pw , int cb"		4806030	3					
ANR	4806038	Parameter	const char * credd_host	30:1:991:1013	4806030	0	True				
ANR	4806039	ParameterType	const char *		4806030	0					
ANR	4806040	Identifier	credd_host		4806030	1					
ANR	4806041	Parameter	const char username [ ]	31:1:1017:1038	4806030	1	True				
ANR	4806042	ParameterType	const char [ ]		4806030	0					
ANR	4806043	Identifier	username		4806030	1					
ANR	4806044	Parameter	const char domain [ ]	32:1:1042:1061	4806030	2	True				
ANR	4806045	ParameterType	const char [ ]		4806030	0					
ANR	4806046	Identifier	domain		4806030	1					
ANR	4806047	Parameter	char * pw	33:1:1065:1073	4806030	3	True				
ANR	4806048	ParameterType	char *		4806030	0					
ANR	4806049	Identifier	pw		4806030	1					
ANR	4806050	Parameter	int cb	34:1:1077:1085	4806030	4	True				
ANR	4806051	ParameterType	int		4806030	0					
ANR	4806052	Identifier	cb		4806030	1					
ANR	4806053	CFGEntryNode	ENTRY		4806030		True				
ANR	4806054	CFGExitNode	EXIT		4806030		True				
ANR	4806055	Symbol	credd_host		4806030						
ANR	4806056	Symbol	domain		4806030						
ANR	4806057	Symbol	pw		4806030						
ANR	4806058	Symbol	false		4806030						
ANR	4806059	Symbol	username		4806030						
ANR	4806060	Symbol	cb		4806030						
ANR	4806061	Function	cache_credd_locally	38:0:1141:1252							
ANR	4806062	FunctionDef	"cache_credd_locally (const char username [ ] , const char domain [ ] , const char * pw)"		4806061	0					
ANR	4806063	CompoundStatement		43:0:1235:1252	4806061	0					
ANR	4806064	ReturnStatement	return false ;	44:1:1238:1250	4806061	0	True				
ANR	4806065	Identifier	false		4806061	0					
ANR	4806066	ReturnType	bool		4806061	1					
ANR	4806067	Identifier	cache_credd_locally		4806061	2					
ANR	4806068	ParameterList	"const char username [ ] , const char domain [ ] , const char * pw"		4806061	3					
ANR	4806069	Parameter	const char username [ ]	40:1:1170:1191	4806061	0	True				
ANR	4806070	ParameterType	const char [ ]		4806061	0					
ANR	4806071	Identifier	username		4806061	1					
ANR	4806072	Parameter	const char domain [ ]	41:1:1195:1214	4806061	1	True				
ANR	4806073	ParameterType	const char [ ]		4806061	0					
ANR	4806074	Identifier	domain		4806061	1					
ANR	4806075	Parameter	const char * pw	42:1:1218:1232	4806061	2	True				
ANR	4806076	ParameterType	const char *		4806061	0					
ANR	4806077	Identifier	pw		4806061	1					
ANR	4806078	CFGEntryNode	ENTRY		4806061		True				
ANR	4806079	CFGExitNode	EXIT		4806061		True				
ANR	4806080	Symbol	domain		4806061						
ANR	4806081	Symbol	pw		4806061						
ANR	4806082	Symbol	false		4806061						
ANR	4806083	Symbol	username		4806061						
ANR	4806084	Function	Daemon :: Daemon	47:0:1260:1329							
ANR	4806085	FunctionDef	"Daemon :: Daemon (daemon_t type , const char * name , const char * pool)"		4806084	0					
ANR	4806086	CompoundStatement		48:0:1327:1329	4806084	0					
ANR	4806087	Identifier	Daemon :: Daemon		4806084	1					
ANR	4806088	ParameterList	"daemon_t type , const char * name , const char * pool"		4806084	2					
ANR	4806089	Parameter	daemon_t type	47:16:1276:1288	4806084	0	True				
ANR	4806090	ParameterType	daemon_t		4806084	0					
ANR	4806091	Identifier	type		4806084	1					
ANR	4806092	Parameter	const char * name	47:31:1291:1306	4806084	1	True				
ANR	4806093	ParameterType	const char *		4806084	0					
ANR	4806094	Identifier	name		4806084	1					
ANR	4806095	Parameter	const char * pool	47:49:1309:1324	4806084	2	True				
ANR	4806096	ParameterType	const char *		4806084	0					
ANR	4806097	Identifier	pool		4806084	1					
ANR	4806098	CFGEntryNode	ENTRY		4806084		True				
ANR	4806099	CFGExitNode	EXIT		4806084		True				
ANR	4806100	Symbol	name		4806084						
ANR	4806101	Symbol	pool		4806084						
ANR	4806102	Symbol	type		4806084						
ANR	4806103	Function	Daemon :: ~Daemon	50:0:1331:1355							
ANR	4806104	FunctionDef	Daemon :: ~Daemon ()		4806103	0					
ANR	4806105	CompoundStatement		51:0:1353:1355	4806103	0					
ANR	4806106	Identifier	Daemon :: ~Daemon		4806103	1					
ANR	4806107	ParameterList			4806103	2					
ANR	4806108	CFGEntryNode	ENTRY		4806103		True				
ANR	4806109	CFGExitNode	EXIT		4806103		True				
ANR	4806110	Function	Daemon :: locate	54:0:1358:1397							
ANR	4806111	FunctionDef	Daemon :: locate ()		4806110	0					
ANR	4806112	CompoundStatement		55:0:1380:1397	4806110	0					
ANR	4806113	ReturnStatement	return false ;	56:1:1383:1395	4806110	0	True				
ANR	4806114	Identifier	false		4806110	0					
ANR	4806115	ReturnType	bool		4806110	1					
ANR	4806116	Identifier	Daemon :: locate		4806110	2					
ANR	4806117	ParameterList			4806110	3					
ANR	4806118	CFGEntryNode	ENTRY		4806110		True				
ANR	4806119	CFGExitNode	EXIT		4806110		True				
ANR	4806120	Symbol	false		4806110						
ANR	4806121	Function	Daemon :: startCommand	59:0:1400:1590							
ANR	4806122	FunctionDef	"Daemon :: startCommand (int cmd , Stream :: stream_type st , int timeout , CondorError * errstack , char const * cmd_description , bool raw_protocol , char const * sec_session_id)"		4806121	0					
ANR	4806123	CompoundStatement		61:0:1574:1590	4806121	0					
ANR	4806124	ReturnStatement	return NULL ;	62:1:1577:1588	4806121	0	True				
ANR	4806125	Identifier	NULL		4806121	0					
ANR	4806126	ReturnType	Sock *		4806121	1					
ANR	4806127	Identifier	Daemon :: startCommand		4806121	2					
ANR	4806128	ParameterList	"int cmd , Stream :: stream_type st , int timeout , CondorError * errstack , char const * cmd_description , bool raw_protocol , char const * sec_session_id"		4806121	3					
ANR	4806129	Parameter	int cmd	60:22:1428:1434	4806121	0	True				
ANR	4806130	ParameterType	int		4806121	0					
ANR	4806131	Identifier	cmd		4806121	1					
ANR	4806132	Parameter	Stream :: stream_type st	60:31:1437:1458	4806121	1	True				
ANR	4806133	ParameterType	Stream :: stream_type		4806121	0					
ANR	4806134	Identifier	st		4806121	1					
ANR	4806135	Parameter	int timeout	60:55:1461:1471	4806121	2	True				
ANR	4806136	ParameterType	int		4806121	0					
ANR	4806137	Identifier	timeout		4806121	1					
ANR	4806138	Parameter	CondorError * errstack	60:68:1474:1494	4806121	3	True				
ANR	4806139	ParameterType	CondorError *		4806121	0					
ANR	4806140	Identifier	errstack		4806121	1					
ANR	4806141	Parameter	char const * cmd_description	60:91:1497:1523	4806121	4	True				
ANR	4806142	ParameterType	char const *		4806121	0					
ANR	4806143	Identifier	cmd_description		4806121	1					
ANR	4806144	Parameter	bool raw_protocol	60:120:1526:1542	4806121	5	True				
ANR	4806145	ParameterType	bool		4806121	0					
ANR	4806146	Identifier	raw_protocol		4806121	1					
ANR	4806147	Parameter	char const * sec_session_id	60:139:1545:1570	4806121	6	True				
ANR	4806148	ParameterType	char const *		4806121	0					
ANR	4806149	Identifier	sec_session_id		4806121	1					
ANR	4806150	CFGEntryNode	ENTRY		4806121		True				
ANR	4806151	CFGExitNode	EXIT		4806121		True				
ANR	4806152	Symbol	sec_session_id		4806121						
ANR	4806153	Symbol	st		4806121						
ANR	4806154	Symbol	errstack		4806121						
ANR	4806155	Symbol	NULL		4806121						
ANR	4806156	Symbol	raw_protocol		4806121						
ANR	4806157	Symbol	cmd		4806121						
ANR	4806158	Symbol	timeout		4806121						
ANR	4806159	Symbol	cmd_description		4806121						
ANR	4806160	Function	SecMan :: ~SecMan	69:0:1618:1638							
ANR	4806161	FunctionDef	SecMan :: ~SecMan ()		4806160	0					
ANR	4806162	CompoundStatement		70:0:1636:1638	4806160	0					
ANR	4806163	Identifier	SecMan :: ~SecMan		4806160	1					
ANR	4806164	ParameterList			4806160	2					
ANR	4806165	CFGEntryNode	ENTRY		4806160		True				
ANR	4806166	CFGExitNode	EXIT		4806160		True				
ANR	4806167	Function	addCredential	73:0:1641:1720							
ANR	4806168	FunctionDef	"addCredential (const char * user , const char * pw , Daemon * d)"		4806167	0					
ANR	4806169	CompoundStatement		73:65:1706:1720	4806167	0					
ANR	4806170	ReturnStatement	return 0 ;	74:1:1709:1717	4806167	0	True				
ANR	4806171	PrimaryExpression	0		4806167	0					
ANR	4806172	ReturnType	int		4806167	1					
ANR	4806173	Identifier	addCredential		4806167	2					
ANR	4806174	ParameterList	"const char * user , const char * pw , Daemon * d"		4806167	3					
ANR	4806175	Parameter	const char * user	73:19:1660:1675	4806167	0	True				
ANR	4806176	ParameterType	const char *		4806167	0					
ANR	4806177	Identifier	user		4806167	1					
ANR	4806178	Parameter	const char * pw	73:37:1678:1691	4806167	1	True				
ANR	4806179	ParameterType	const char *		4806167	0					
ANR	4806180	Identifier	pw		4806167	1					
ANR	4806181	Parameter	Daemon * d	73:53:1694:1702	4806167	2	True				
ANR	4806182	ParameterType	Daemon *		4806167	0					
ANR	4806183	Identifier	d		4806167	1					
ANR	4806184	CFGEntryNode	ENTRY		4806167		True				
ANR	4806185	CFGExitNode	EXIT		4806167		True				
ANR	4806186	Symbol	d		4806167						
ANR	4806187	Symbol	pw		4806167						
ANR	4806188	Symbol	user		4806167						
ANR	4806189	Function	not_impl	93:0:2559:2948							
ANR	4806190	FunctionDef	not_impl ()		4806189	0					
ANR	4806191	CompoundStatement		94:0:2585:2948	4806189	0					
ANR	4806192	ExpressionStatement	"dprintf ( D_ALWAYS , ""I'm sorry, but this feature is not implemented in libcondorapi.a\\n"" )"	96:1:2650:2740	4806189	0	True				
ANR	4806193	CallExpression	"dprintf ( D_ALWAYS , ""I'm sorry, but this feature is not implemented in libcondorapi.a\\n"" )"		4806189	0					
ANR	4806194	Callee	dprintf		4806189	0					
ANR	4806195	Identifier	dprintf		4806189	0					
ANR	4806196	ArgumentList	D_ALWAYS		4806189	1					
ANR	4806197	Argument	D_ALWAYS		4806189	0					
ANR	4806198	Identifier	D_ALWAYS		4806189	0					
ANR	4806199	Argument	"""I'm sorry, but this feature is not implemented in libcondorapi.a\\n"""		4806189	1					
ANR	4806200	PrimaryExpression	"""I'm sorry, but this feature is not implemented in libcondorapi.a\\n"""		4806189	0					
ANR	4806201	ExpressionStatement	"dprintf ( D_ALWAYS , ""Please see stacktrace in core file to determine culprit.\\n"" )"	98:1:2743:2825	4806189	1	True				
ANR	4806202	CallExpression	"dprintf ( D_ALWAYS , ""Please see stacktrace in core file to determine culprit.\\n"" )"		4806189	0					
ANR	4806203	Callee	dprintf		4806189	0					
ANR	4806204	Identifier	dprintf		4806189	0					
ANR	4806205	ArgumentList	D_ALWAYS		4806189	1					
ANR	4806206	Argument	D_ALWAYS		4806189	0					
ANR	4806207	Identifier	D_ALWAYS		4806189	0					
ANR	4806208	Argument	"""Please see stacktrace in core file to determine culprit.\\n"""		4806189	1					
ANR	4806209	PrimaryExpression	"""Please see stacktrace in core file to determine culprit.\\n"""		4806189	0					
ANR	4806210	ExpressionStatement	"dprintf ( D_ALWAYS , ""Aborting!\\n"" )"	100:1:2828:2860	4806189	2	True				
ANR	4806211	CallExpression	"dprintf ( D_ALWAYS , ""Aborting!\\n"" )"		4806189	0					
ANR	4806212	Callee	dprintf		4806189	0					
ANR	4806213	Identifier	dprintf		4806189	0					
ANR	4806214	ArgumentList	D_ALWAYS		4806189	1					
ANR	4806215	Argument	D_ALWAYS		4806189	0					
ANR	4806216	Identifier	D_ALWAYS		4806189	0					
ANR	4806217	Argument	"""Aborting!\\n"""		4806189	1					
ANR	4806218	PrimaryExpression	"""Aborting!\\n"""		4806189	0					
ANR	4806219	ExpressionStatement	abort ( )	103:1:2882:2889	4806189	3	True				
ANR	4806220	CallExpression	abort ( )		4806189	0					
ANR	4806221	Callee	abort		4806189	0					
ANR	4806222	Identifier	abort		4806189	0					
ANR	4806223	ArgumentList			4806189	1					
ANR	4806224	ReturnStatement	return - 1 ;	106:1:2937:2946	4806189	4	True				
ANR	4806225	UnaryOperationExpression	- 1		4806189	0					
ANR	4806226	UnaryOperator	-		4806189	0					
ANR	4806227	PrimaryExpression	1		4806189	1					
ANR	4806228	ReturnType	static int		4806189	1					
ANR	4806229	Identifier	not_impl		4806189	2					
ANR	4806230	ParameterList			4806189	3					
ANR	4806231	CFGEntryNode	ENTRY		4806189		True				
ANR	4806232	CFGExitNode	EXIT		4806189		True				
ANR	4806233	Symbol	D_ALWAYS		4806189						
ANR	4806234	Function	param	120:0:3046:3148							
ANR	4806235	FunctionDef	param (const char * str)		4806234	0					
ANR	4806236	CompoundStatement		121:0:3075:3148	4806234	0					
ANR	4806237	IfStatement	"if ( strcmp ( str , ""LOG"" ) == 0 )"		4806234	0					
ANR	4806238	Condition	"strcmp ( str , ""LOG"" ) == 0"	122:4:3081:3103	4806234	0	True				
ANR	4806239	EqualityExpression	"strcmp ( str , ""LOG"" ) == 0"		4806234	0		==			
ANR	4806240	CallExpression	"strcmp ( str , ""LOG"" )"		4806234	0					
ANR	4806241	Callee	strcmp		4806234	0					
ANR	4806242	Identifier	strcmp		4806234	0					
ANR	4806243	ArgumentList	str		4806234	1					
ANR	4806244	Argument	str		4806234	0					
ANR	4806245	Identifier	str		4806234	0					
ANR	4806246	Argument	"""LOG"""		4806234	1					
ANR	4806247	PrimaryExpression	"""LOG"""		4806234	0					
ANR	4806248	PrimaryExpression	0		4806234	1					
ANR	4806249	CompoundStatement		2:29:30:30	4806234	1					
ANR	4806250	ReturnStatement	"return strdup ( ""."" ) ;"	123:2:3110:3128	4806234	0	True				
ANR	4806251	CallExpression	"strdup ( ""."" )"		4806234	0					
ANR	4806252	Callee	strdup		4806234	0					
ANR	4806253	Identifier	strdup		4806234	0					
ANR	4806254	ArgumentList	"""."""		4806234	1					
ANR	4806255	Argument	"""."""		4806234	0					
ANR	4806256	PrimaryExpression	"""."""		4806234	0					
ANR	4806257	ReturnStatement	return NULL ;	126:1:3135:3146	4806234	1	True				
ANR	4806258	Identifier	NULL		4806234	0					
ANR	4806259	ReturnType	char *		4806234	1					
ANR	4806260	Identifier	param		4806234	2					
ANR	4806261	ParameterList	const char * str		4806234	3					
ANR	4806262	Parameter	const char * str	120:12:3058:3072	4806234	0	True				
ANR	4806263	ParameterType	const char *		4806234	0					
ANR	4806264	Identifier	str		4806234	1					
ANR	4806265	CFGEntryNode	ENTRY		4806234		True				
ANR	4806266	CFGExitNode	EXIT		4806234		True				
ANR	4806267	Symbol	str		4806234						
ANR	4806268	Symbol	strcmp		4806234						
ANR	4806269	Symbol	NULL		4806234						
ANR	4806270	Symbol	strdup		4806234						
ANR	4806271	Function	param_without_default	129:0:3151:3268							
ANR	4806272	FunctionDef	param_without_default (const char * str)		4806271	0					
ANR	4806273	CompoundStatement		130:0:3196:3268	4806271	0					
ANR	4806274	IfStatement	"if ( strcmp ( str , ""LOG"" ) == 0 )"		4806271	0					
ANR	4806275	Condition	"strcmp ( str , ""LOG"" ) == 0"	131:4:3202:3224	4806271	0	True				
ANR	4806276	EqualityExpression	"strcmp ( str , ""LOG"" ) == 0"		4806271	0		==			
ANR	4806277	CallExpression	"strcmp ( str , ""LOG"" )"		4806271	0					
ANR	4806278	Callee	strcmp		4806271	0					
ANR	4806279	Identifier	strcmp		4806271	0					
ANR	4806280	ArgumentList	str		4806271	1					
ANR	4806281	Argument	str		4806271	0					
ANR	4806282	Identifier	str		4806271	0					
ANR	4806283	Argument	"""LOG"""		4806271	1					
ANR	4806284	PrimaryExpression	"""LOG"""		4806271	0					
ANR	4806285	PrimaryExpression	0		4806271	1					
ANR	4806286	CompoundStatement		2:29:30:30	4806271	1					
ANR	4806287	ReturnStatement	"return strdup ( ""."" ) ;"	132:2:3231:3249	4806271	0	True				
ANR	4806288	CallExpression	"strdup ( ""."" )"		4806271	0					
ANR	4806289	Callee	strdup		4806271	0					
ANR	4806290	Identifier	strdup		4806271	0					
ANR	4806291	ArgumentList	"""."""		4806271	1					
ANR	4806292	Argument	"""."""		4806271	0					
ANR	4806293	PrimaryExpression	"""."""		4806271	0					
ANR	4806294	ReturnStatement	return NULL ;	134:1:3255:3266	4806271	1	True				
ANR	4806295	Identifier	NULL		4806271	0					
ANR	4806296	ReturnType	char *		4806271	1					
ANR	4806297	Identifier	param_without_default		4806271	2					
ANR	4806298	ParameterList	const char * str		4806271	3					
ANR	4806299	Parameter	const char * str	129:28:3179:3193	4806271	0	True				
ANR	4806300	ParameterType	const char *		4806271	0					
ANR	4806301	Identifier	str		4806271	1					
ANR	4806302	CFGEntryNode	ENTRY		4806271		True				
ANR	4806303	CFGExitNode	EXIT		4806271		True				
ANR	4806304	Symbol	str		4806271						
ANR	4806305	Symbol	strcmp		4806271						
ANR	4806306	Symbol	NULL		4806271						
ANR	4806307	Symbol	strdup		4806271						
ANR	4806308	DeclStmt									
ANR	4806309	Decl							void ( * ) ( void * )	void ( * ) ( void * )	pcre_free
ANR	4806310	Function	Stream :: ~Stream	216:0:5232:5250							
ANR	4806311	FunctionDef	Stream :: ~Stream ()		4806310	0					
ANR	4806312	CompoundStatement		216:17:5249:5250	4806310	0					
ANR	4806313	Identifier	Stream :: ~Stream		4806310	1					
ANR	4806314	ParameterList			4806310	2					
ANR	4806315	CFGEntryNode	ENTRY		4806310		True				
ANR	4806316	CFGExitNode	EXIT		4806310		True				
ANR	4806317	Function	Stream :: allow_one_empty_message	260:0:7322:7375							
ANR	4806318	FunctionDef	Stream :: allow_one_empty_message ()		4806317	0					
ANR	4806319	CompoundStatement		260:39:7361:7375	4806317	0					
ANR	4806320	ExpressionStatement	not_impl ( )	260:1:7363:7373	4806317	0	True				
ANR	4806321	CallExpression	not_impl ( )		4806317	0					
ANR	4806322	Callee	not_impl		4806317	0					
ANR	4806323	Identifier	not_impl		4806317	0					
ANR	4806324	ArgumentList			4806317	1					
ANR	4806325	ReturnType	void		4806317	1					
ANR	4806326	Identifier	Stream :: allow_one_empty_message		4806317	2					
ANR	4806327	ParameterList			4806317	3					
ANR	4806328	CFGEntryNode	ENTRY		4806317		True				
ANR	4806329	CFGExitNode	EXIT		4806317		True				
ANR	4806330	Function	Stream :: prepare_crypto_for_secret	267:0:7641:7693							
ANR	4806331	FunctionDef	Stream :: prepare_crypto_for_secret ()		4806330	0					
ANR	4806332	CompoundStatement		267:40:7681:7693	4806330	0					
ANR	4806333	ExpressionStatement	not_impl ( )	267:0:7682:7692	4806330	0	True				
ANR	4806334	CallExpression	not_impl ( )		4806330	0					
ANR	4806335	Callee	not_impl		4806330	0					
ANR	4806336	Identifier	not_impl		4806330	0					
ANR	4806337	ArgumentList			4806330	1					
ANR	4806338	ReturnType	void		4806330	1					
ANR	4806339	Identifier	Stream :: prepare_crypto_for_secret		4806330	2					
ANR	4806340	ParameterList			4806330	3					
ANR	4806341	CFGEntryNode	ENTRY		4806330		True				
ANR	4806342	CFGExitNode	EXIT		4806330		True				
ANR	4806343	Function	Stream :: restore_crypto_after_secret	268:0:7695:7749							
ANR	4806344	FunctionDef	Stream :: restore_crypto_after_secret ()		4806343	0					
ANR	4806345	CompoundStatement		268:42:7737:7749	4806343	0					
ANR	4806346	ExpressionStatement	not_impl ( )	268:0:7738:7748	4806343	0	True				
ANR	4806347	CallExpression	not_impl ( )		4806343	0					
ANR	4806348	Callee	not_impl		4806343	0					
ANR	4806349	Identifier	not_impl		4806343	0					
ANR	4806350	ArgumentList			4806343	1					
ANR	4806351	ReturnType	void		4806343	1					
ANR	4806352	Identifier	Stream :: restore_crypto_after_secret		4806343	2					
ANR	4806353	ParameterList			4806343	3					
ANR	4806354	CFGEntryNode	ENTRY		4806343		True				
ANR	4806355	CFGExitNode	EXIT		4806343		True				
ANR	4806356	Function	Stream :: prepare_crypto_for_secret_is_noop	269:0:7751:7823							
ANR	4806357	FunctionDef	Stream :: prepare_crypto_for_secret_is_noop ()		4806356	0					
ANR	4806358	CompoundStatement		269:48:7799:7823	4806356	0					
ANR	4806359	ExpressionStatement	not_impl ( )	269:0:7800:7810	4806356	0	True				
ANR	4806360	CallExpression	not_impl ( )		4806356	0					
ANR	4806361	Callee	not_impl		4806356	0					
ANR	4806362	Identifier	not_impl		4806356	0					
ANR	4806363	ArgumentList			4806356	1					
ANR	4806364	ReturnStatement	return true ;	269:11:7811:7822	4806356	1	True				
ANR	4806365	Identifier	true		4806356	0					
ANR	4806366	ReturnType	bool		4806356	1					
ANR	4806367	Identifier	Stream :: prepare_crypto_for_secret_is_noop		4806356	2					
ANR	4806368	ParameterList			4806356	3					
ANR	4806369	CFGEntryNode	ENTRY		4806356		True				
ANR	4806370	CFGExitNode	EXIT		4806356		True				
ANR	4806371	Symbol	true		4806356						
ANR	4806372	Function	Stream :: get_encryption	271:0:7885:7945							
ANR	4806373	FunctionDef	Stream :: get_encryption ()		4806372	0					
ANR	4806374	CompoundStatement		271:35:7920:7945	4806372	0					
ANR	4806375	ExpressionStatement	not_impl ( )	271:0:7921:7931	4806372	0	True				
ANR	4806376	CallExpression	not_impl ( )		4806372	0					
ANR	4806377	Callee	not_impl		4806372	0					
ANR	4806378	Identifier	not_impl		4806372	0					
ANR	4806379	ArgumentList			4806372	1					
ANR	4806380	ReturnStatement	return false ;	271:11:7932:7944	4806372	1	True				
ANR	4806381	Identifier	false		4806372	0					
ANR	4806382	ReturnType	bool		4806372	1					
ANR	4806383	Identifier	Stream :: get_encryption		4806372	2					
ANR	4806384	ParameterList			4806372	3					
ANR	4806385	CFGEntryNode	ENTRY		4806372		True				
ANR	4806386	CFGExitNode	EXIT		4806372		True				
ANR	4806387	Symbol	false		4806372						
ANR	4806388	Function	Stream :: get_deadline	276:0:8175:8225							
ANR	4806389	FunctionDef	Stream :: get_deadline ()		4806388	0					
ANR	4806390	CompoundStatement		276:29:8204:8225	4806388	0					
ANR	4806391	ExpressionStatement	not_impl ( )	276:0:8205:8215	4806388	0	True				
ANR	4806392	CallExpression	not_impl ( )		4806388	0					
ANR	4806393	Callee	not_impl		4806388	0					
ANR	4806394	Identifier	not_impl		4806388	0					
ANR	4806395	ArgumentList			4806388	1					
ANR	4806396	ReturnStatement	return 0 ;	276:11:8216:8224	4806388	1	True				
ANR	4806397	PrimaryExpression	0		4806388	0					
ANR	4806398	ReturnType	time_t		4806388	1					
ANR	4806399	Identifier	Stream :: get_deadline		4806388	2					
ANR	4806400	ParameterList			4806388	3					
ANR	4806401	CFGEntryNode	ENTRY		4806388		True				
ANR	4806402	CFGExitNode	EXIT		4806388		True				
ANR	4806403	Function	Stream :: deadline_expired	277:0:8227:8283							
ANR	4806404	FunctionDef	Stream :: deadline_expired ()		4806403	0					
ANR	4806405	CompoundStatement		277:31:8258:8283	4806403	0					
ANR	4806406	ExpressionStatement	not_impl ( )	277:0:8259:8269	4806403	0	True				
ANR	4806407	CallExpression	not_impl ( )		4806403	0					
ANR	4806408	Callee	not_impl		4806403	0					
ANR	4806409	Identifier	not_impl		4806403	0					
ANR	4806410	ArgumentList			4806403	1					
ANR	4806411	ReturnStatement	return false ;	277:11:8270:8282	4806403	1	True				
ANR	4806412	Identifier	false		4806403	0					
ANR	4806413	ReturnType	bool		4806403	1					
ANR	4806414	Identifier	Stream :: deadline_expired		4806403	2					
ANR	4806415	ParameterList			4806403	3					
ANR	4806416	CFGEntryNode	ENTRY		4806403		True				
ANR	4806417	CFGExitNode	EXIT		4806403		True				
ANR	4806418	Symbol	false		4806403						
ANR	4806419	Function	GenericQuery :: GenericQuery	281:0:8324:8415							
ANR	4806420	FunctionDef	GenericQuery :: GenericQuery ()		4806419	0					
ANR	4806421	CompoundStatement		281:33:8357:8415	4806419	0					
ANR	4806422	ExpressionStatement	integerThreshold = stringThreshold = floatThreshold = 0	281:1:8359:8414	4806419	0	True				
ANR	4806423	AssignmentExpression	integerThreshold = stringThreshold = floatThreshold = 0		4806419	0		=			
ANR	4806424	Identifier	integerThreshold		4806419	0					
ANR	4806425	AssignmentExpression	stringThreshold = floatThreshold = 0		4806419	1		=			
ANR	4806426	Identifier	stringThreshold		4806419	0					
ANR	4806427	AssignmentExpression	floatThreshold = 0		4806419	1		=			
ANR	4806428	Identifier	floatThreshold		4806419	0					
ANR	4806429	PrimaryExpression	0		4806419	1					
ANR	4806430	Identifier	GenericQuery :: GenericQuery		4806419	1					
ANR	4806431	ParameterList			4806419	2					
ANR	4806432	CFGEntryNode	ENTRY		4806419		True				
ANR	4806433	CFGExitNode	EXIT		4806419		True				
ANR	4806434	Symbol	floatThreshold		4806419						
ANR	4806435	Symbol	stringThreshold		4806419						
ANR	4806436	Symbol	integerThreshold		4806419						
ANR	4806437	Function	GenericQuery :: ~GenericQuery	282:0:8417:8452							
ANR	4806438	FunctionDef	GenericQuery :: ~GenericQuery ()		4806437	0					
ANR	4806439	CompoundStatement		282:34:8451:8452	4806437	0					
ANR	4806440	Identifier	GenericQuery :: ~GenericQuery		4806437	1					
ANR	4806441	ParameterList			4806437	2					
ANR	4806442	CFGEntryNode	ENTRY		4806437		True				
ANR	4806443	CFGExitNode	EXIT		4806437		True				
ANR	4806444	Function	clearORCustomConstraints	294:0:8741:8793							
ANR	4806445	FunctionDef	clearORCustomConstraints ()		4806444	0					
ANR	4806446	CompoundStatement		295:0:8779:8793	4806444	0					
ANR	4806447	ExpressionStatement	not_impl ( )	295:1:8781:8791	4806444	0	True				
ANR	4806448	CallExpression	not_impl ( )		4806444	0					
ANR	4806449	Callee	not_impl		4806444	0					
ANR	4806450	Identifier	not_impl		4806444	0					
ANR	4806451	ArgumentList			4806444	1					
ANR	4806452	ReturnType	void		4806444	1					
ANR	4806453	Identifier	clearORCustomConstraints		4806444	2					
ANR	4806454	ParameterList			4806444	3					
ANR	4806455	CFGEntryNode	ENTRY		4806444		True				
ANR	4806456	CFGExitNode	EXIT		4806444		True				
ANR	4806457	Function	clearANDCustomConstraints	297:0:8796:8849							
ANR	4806458	FunctionDef	clearANDCustomConstraints ()		4806457	0					
ANR	4806459	CompoundStatement		298:0:8835:8849	4806457	0					
ANR	4806460	ExpressionStatement	not_impl ( )	298:1:8837:8847	4806457	0	True				
ANR	4806461	CallExpression	not_impl ( )		4806457	0					
ANR	4806462	Callee	not_impl		4806457	0					
ANR	4806463	Identifier	not_impl		4806457	0					
ANR	4806464	ArgumentList			4806457	1					
ANR	4806465	ReturnType	void		4806457	1					
ANR	4806466	Identifier	clearANDCustomConstraints		4806457	2					
ANR	4806467	ParameterList			4806457	3					
ANR	4806468	CFGEntryNode	ENTRY		4806457		True				
ANR	4806469	CFGExitNode	EXIT		4806457		True				
ANR	4806470	Function	CondorQuery :: ~CondorQuery	336:0:9961:9990							
ANR	4806471	FunctionDef	CondorQuery :: ~CondorQuery ()		4806470	0					
ANR	4806472	CompoundStatement		336:28:9989:9990	4806470	0					
ANR	4806473	Identifier	CondorQuery :: ~CondorQuery		4806470	1					
ANR	4806474	ParameterList			4806470	2					
ANR	4806475	CFGEntryNode	ENTRY		4806470		True				
ANR	4806476	CFGExitNode	EXIT		4806470		True				
ANR	4806477	Function	my_ip_string	338:0:9994:10037							
ANR	4806478	FunctionDef	my_ip_string ()		4806477	0					
ANR	4806479	CompoundStatement		339:15:10015:10037	4806477	0					
ANR	4806480	ExpressionStatement	not_impl ( )	339:0:10016:10026	4806477	0	True				
ANR	4806481	CallExpression	not_impl ( )		4806477	0					
ANR	4806482	Callee	not_impl		4806477	0					
ANR	4806483	Identifier	not_impl		4806477	0					
ANR	4806484	ArgumentList			4806477	1					
ANR	4806485	ReturnStatement	return 0 ;	339:12:10028:10036	4806477	1	True				
ANR	4806486	PrimaryExpression	0		4806477	0					
ANR	4806487	ReturnType	char *		4806477	1					
ANR	4806488	Identifier	my_ip_string		4806477	2					
ANR	4806489	ParameterList			4806477	3					
ANR	4806490	CFGEntryNode	ENTRY		4806477		True				
ANR	4806491	CFGExitNode	EXIT		4806477		True				
ANR	4806492	Function	Regex :: Regex	355:0:10321:10348							
ANR	4806493	FunctionDef	Regex :: Regex ()		4806492	0					
ANR	4806494	CompoundStatement		355:15:10336:10348	4806492	0					
ANR	4806495	ExpressionStatement	not_impl ( )	355:0:10337:10347	4806492	0	True				
ANR	4806496	CallExpression	not_impl ( )		4806492	0					
ANR	4806497	Callee	not_impl		4806492	0					
ANR	4806498	Identifier	not_impl		4806492	0					
ANR	4806499	ArgumentList			4806492	1					
ANR	4806500	Identifier	Regex :: Regex		4806492	1					
ANR	4806501	ParameterList			4806492	2					
ANR	4806502	CFGEntryNode	ENTRY		4806492		True				
ANR	4806503	CFGExitNode	EXIT		4806492		True				
ANR	4806504	Function	Regex :: ~Regex	356:0:10350:10378							
ANR	4806505	FunctionDef	Regex :: ~Regex ()		4806504	0					
ANR	4806506	CompoundStatement		356:16:10366:10378	4806504	0					
ANR	4806507	ExpressionStatement	not_impl ( )	356:0:10367:10377	4806504	0	True				
ANR	4806508	CallExpression	not_impl ( )		4806504	0					
ANR	4806509	Callee	not_impl		4806504	0					
ANR	4806510	Identifier	not_impl		4806504	0					
ANR	4806511	ArgumentList			4806504	1					
ANR	4806512	Identifier	Regex :: ~Regex		4806504	1					
ANR	4806513	ParameterList			4806504	2					
ANR	4806514	CFGEntryNode	ENTRY		4806504		True				
ANR	4806515	CFGExitNode	EXIT		4806504		True				
ANR	4806516	Function	privsep_enabled	361:0:10573:10612							
ANR	4806517	FunctionDef	privsep_enabled ()		4806516	0					
ANR	4806518	CompoundStatement		361:23:10596:10612	4806516	0					
ANR	4806519	ReturnStatement	return false ;	361:1:10598:10610	4806516	0	True				
ANR	4806520	Identifier	false		4806516	0					
ANR	4806521	ReturnType	bool		4806516	1					
ANR	4806522	Identifier	privsep_enabled		4806516	2					
ANR	4806523	ParameterList			4806516	3					
ANR	4806524	CFGEntryNode	ENTRY		4806516		True				
ANR	4806525	CFGExitNode	EXIT		4806516		True				
ANR	4806526	Symbol	false		4806516						
ANR	4806527	Function	Generic_set_log_va	366:0:10721:10833							
ANR	4806528	FunctionDef	"Generic_set_log_va (void ( * app_log_va ) ( int level , char * fmt , va_list args ))"		4806527	0					
ANR	4806529	CompoundStatement		368:0:10811:10833	4806527	0					
ANR	4806530	ExpressionStatement	( void ) app_log_va	369:1:10814:10831	4806527	0	True				
ANR	4806531	CastExpression	( void ) app_log_va		4806527	0					
ANR	4806532	CastTarget	void		4806527	0					
ANR	4806533	Identifier	app_log_va		4806527	1					
ANR	4806534	ReturnType	BEGIN_C_DECLS void		4806527	1					
ANR	4806535	Identifier	Generic_set_log_va		4806527	2					
ANR	4806536	ParameterList	"void ( * app_log_va ) ( int level , char * fmt , va_list args )"		4806527	3					
ANR	4806537	Parameter	"void ( * app_log_va ) ( int level , char * fmt , va_list args )"	367:24:10759:10808	4806527	0	True				
ANR	4806538	ParameterType	"(( int level , char * fmt , va_list args ) void) *"		4806527	0					
ANR	4806539	Identifier	app_log_va		4806527	1					
ANR	4806540	CFGEntryNode	ENTRY		4806527		True				
ANR	4806541	CFGExitNode	EXIT		4806527		True				
ANR	4806542	Symbol	app_log_va		4806527						
ANR	4806543	Function	CondorThreads_pool_size	371:0:10836:10950							
ANR	4806544	FunctionDef	CondorThreads_pool_size ()		4806543	0					
ANR	4806545	CompoundStatement		377:0:10937:10950	4806543	0					
ANR	4806546	ReturnStatement	return 0 ;	378:1:10940:10948	4806543	0	True				
ANR	4806547	PrimaryExpression	0		4806543	0					
ANR	4806548	ReturnType	END_C_DECLS BEGIN_C_DECLS int		4806543	1					
ANR	4806549	Identifier	CondorThreads_pool_size		4806543	2					
ANR	4806550	ParameterList			4806543	3					
ANR	4806551	CFGEntryNode	ENTRY		4806543		True				
ANR	4806552	CFGExitNode	EXIT		4806543		True				
ANR	4806553	Function	CondorThreads_gettid	381:0:10953:10998							
ANR	4806554	FunctionDef	CondorThreads_gettid ()		4806553	0					
ANR	4806555	CompoundStatement		383:0:10984:10998	4806553	0					
ANR	4806556	ReturnStatement	return - 1 ;	384:1:10987:10996	4806553	0	True				
ANR	4806557	UnaryOperationExpression	- 1		4806553	0					
ANR	4806558	UnaryOperator	-		4806553	0					
ANR	4806559	PrimaryExpression	1		4806553	1					
ANR	4806560	ReturnType	int		4806553	1					
ANR	4806561	Identifier	CondorThreads_gettid		4806553	2					
ANR	4806562	ParameterList			4806553	3					
ANR	4806563	CFGEntryNode	ENTRY		4806553		True				
ANR	4806564	CFGExitNode	EXIT		4806553		True				
ANR	4806565	Function	pthread_sigmask	392:1:11243:11378							
ANR	4806566	FunctionDef	"pthread_sigmask (int how , const sigset_t * newmask , sigset_t * oldmask)"		4806565	0					
ANR	4806567	CompoundStatement		394:0:11334:11378	4806565	0					
ANR	4806568	ReturnStatement	"return sigprocmask ( how , newmask , oldmask ) ;"	395:1:11337:11376	4806565	0	True				
ANR	4806569	CallExpression	"sigprocmask ( how , newmask , oldmask )"		4806565	0					
ANR	4806570	Callee	sigprocmask		4806565	0					
ANR	4806571	Identifier	sigprocmask		4806565	0					
ANR	4806572	ArgumentList	how		4806565	1					
ANR	4806573	Argument	how		4806565	0					
ANR	4806574	Identifier	how		4806565	0					
ANR	4806575	Argument	newmask		4806565	1					
ANR	4806576	Identifier	newmask		4806565	0					
ANR	4806577	Argument	oldmask		4806565	2					
ANR	4806578	Identifier	oldmask		4806565	0					
ANR	4806579	ReturnType	undef sigprocmask int		4806565	1					
ANR	4806580	Identifier	pthread_sigmask		4806565	2					
ANR	4806581	ParameterList	"int how , const sigset_t * newmask , sigset_t * oldmask"		4806565	3					
ANR	4806582	Parameter	int how	393:20:11281:11287	4806565	0	True				
ANR	4806583	ParameterType	int		4806565	0					
ANR	4806584	Identifier	how		4806565	1					
ANR	4806585	Parameter	const sigset_t * newmask	393:29:11290:11312	4806565	1	True				
ANR	4806586	ParameterType	const sigset_t *		4806565	0					
ANR	4806587	Identifier	newmask		4806565	1					
ANR	4806588	Parameter	sigset_t * oldmask	393:54:11315:11331	4806565	2	True				
ANR	4806589	ParameterType	sigset_t *		4806565	0					
ANR	4806590	Identifier	oldmask		4806565	1					
ANR	4806591	CFGEntryNode	ENTRY		4806565		True				
ANR	4806592	CFGExitNode	EXIT		4806565		True				
ANR	4806593	Symbol	oldmask		4806565						
ANR	4806594	Symbol	how		4806565						
ANR	4806595	Symbol	newmask		4806565						
ANR	4806596	Symbol	sigprocmask		4806565						
