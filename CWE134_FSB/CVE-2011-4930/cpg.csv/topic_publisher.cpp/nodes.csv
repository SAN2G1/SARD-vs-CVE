command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5457080	File	data/converged/CVE-2011-4930_htcondor/topic_publisher.cpp								
ANR	5457081	Function	getPortNumber	57:0:1573:1855							
ANR	5457082	FunctionDef	getPortNumber (char * hostname)		5457081	0					
ANR	5457083	CompoundStatement		57:33:1606:1855	5457081	0					
ANR	5457084	IdentifierDeclStatement	"FILE * f = popen ( ""daemonReader"" , ""r"" ) ;"	58:1:1609:1645	5457081	0	True				
ANR	5457085	IdentifierDecl	"* f = popen ( ""daemonReader"" , ""r"" )"		5457081	0					
ANR	5457086	IdentifierDeclType	FILE *		5457081	0					
ANR	5457087	Identifier	f		5457081	1					
ANR	5457088	AssignmentExpression	"* f = popen ( ""daemonReader"" , ""r"" )"		5457081	2		=			
ANR	5457089	Identifier	f		5457081	0					
ANR	5457090	CallExpression	"popen ( ""daemonReader"" , ""r"" )"		5457081	1					
ANR	5457091	Callee	popen		5457081	0					
ANR	5457092	Identifier	popen		5457081	0					
ANR	5457093	ArgumentList	"""daemonReader"""		5457081	1					
ANR	5457094	Argument	"""daemonReader"""		5457081	0					
ANR	5457095	PrimaryExpression	"""daemonReader"""		5457081	0					
ANR	5457096	Argument	"""r"""		5457081	1					
ANR	5457097	PrimaryExpression	"""r"""		5457081	0					
ANR	5457098	IdentifierDeclStatement	char buffer [ 256 ] ;	59:1:1648:1664	5457081	1	True				
ANR	5457099	IdentifierDecl	buffer [ 256 ]		5457081	0					
ANR	5457100	IdentifierDeclType	char [ 256 ]		5457081	0					
ANR	5457101	Identifier	buffer		5457081	1					
ANR	5457102	PrimaryExpression	256		5457081	2					
ANR	5457103	IdentifierDeclStatement	int count = 0 ;	60:1:1667:1680	5457081	2	True				
ANR	5457104	IdentifierDecl	count = 0		5457081	0					
ANR	5457105	IdentifierDeclType	int		5457081	0					
ANR	5457106	Identifier	count		5457081	1					
ANR	5457107	AssignmentExpression	count = 0		5457081	2		=			
ANR	5457108	Identifier	count		5457081	0					
ANR	5457109	PrimaryExpression	0		5457081	1					
ANR	5457110	WhileStatement	"while ( fgets ( buffer , 256 , f ) )"		5457081	3					
ANR	5457111	Condition	"fgets ( buffer , 256 , f )"	61:8:1690:1710	5457081	0	True				
ANR	5457112	CallExpression	"fgets ( buffer , 256 , f )"		5457081	0					
ANR	5457113	Callee	fgets		5457081	0					
ANR	5457114	Identifier	fgets		5457081	0					
ANR	5457115	ArgumentList	buffer		5457081	1					
ANR	5457116	Argument	buffer		5457081	0					
ANR	5457117	Identifier	buffer		5457081	0					
ANR	5457118	Argument	256		5457081	1					
ANR	5457119	PrimaryExpression	256		5457081	0					
ANR	5457120	Argument	f		5457081	2					
ANR	5457121	Identifier	f		5457081	0					
ANR	5457122	CompoundStatement		5:31:106:106	5457081	1					
ANR	5457123	ExpressionStatement	buffer [ strlen ( buffer ) - 1 ] = '\\0'	62:2:1717:1748	5457081	0	True				
ANR	5457124	AssignmentExpression	buffer [ strlen ( buffer ) - 1 ] = '\\0'		5457081	0		=			
ANR	5457125	ArrayIndexing	buffer [ strlen ( buffer ) - 1 ]		5457081	0					
ANR	5457126	Identifier	buffer		5457081	0					
ANR	5457127	AdditiveExpression	strlen ( buffer ) - 1		5457081	1		-			
ANR	5457128	CallExpression	strlen ( buffer )		5457081	0					
ANR	5457129	Callee	strlen		5457081	0					
ANR	5457130	Identifier	strlen		5457081	0					
ANR	5457131	ArgumentList	buffer		5457081	1					
ANR	5457132	Argument	buffer		5457081	0					
ANR	5457133	Identifier	buffer		5457081	0					
ANR	5457134	PrimaryExpression	1		5457081	1					
ANR	5457135	PrimaryExpression	'\\0'		5457081	1					
ANR	5457136	IfStatement	if ( count > 0 )		5457081	1					
ANR	5457137	Condition	count > 0	63:6:1756:1764	5457081	0	True				
ANR	5457138	RelationalExpression	count > 0		5457081	0		>			
ANR	5457139	Identifier	count		5457081	0					
ANR	5457140	PrimaryExpression	0		5457081	1					
ANR	5457141	ReturnStatement	return atoi ( buffer ) ;	64:3:1770:1789	5457081	1	True				
ANR	5457142	CallExpression	atoi ( buffer )		5457081	0					
ANR	5457143	Callee	atoi		5457081	0					
ANR	5457144	Identifier	atoi		5457081	0					
ANR	5457145	ArgumentList	buffer		5457081	1					
ANR	5457146	Argument	buffer		5457081	0					
ANR	5457147	Identifier	buffer		5457081	0					
ANR	5457148	ExpressionStatement	"sprintf ( hostname , ""%s"" , buffer )"	65:2:1793:1824	5457081	2	True				
ANR	5457149	CallExpression	"sprintf ( hostname , ""%s"" , buffer )"		5457081	0					
ANR	5457150	Callee	sprintf		5457081	0					
ANR	5457151	Identifier	sprintf		5457081	0					
ANR	5457152	ArgumentList	hostname		5457081	1					
ANR	5457153	Argument	hostname		5457081	0					
ANR	5457154	Identifier	hostname		5457081	0					
ANR	5457155	Argument	"""%s"""		5457081	1					
ANR	5457156	PrimaryExpression	"""%s"""		5457081	0					
ANR	5457157	Argument	buffer		5457081	2					
ANR	5457158	Identifier	buffer		5457081	0					
ANR	5457159	ExpressionStatement	++ count	66:2:1828:1835	5457081	3	True				
ANR	5457160	UnaryExpression	++ count		5457081	0					
ANR	5457161	IncDec	++		5457081	0					
ANR	5457162	Identifier	count		5457081	1					
ANR	5457163	ReturnStatement	return - 1 ;	69:1:1844:1853	5457081	4	True				
ANR	5457164	UnaryOperationExpression	- 1		5457081	0					
ANR	5457165	UnaryOperator	-		5457081	0					
ANR	5457166	PrimaryExpression	1		5457081	1					
ANR	5457167	ReturnType	int		5457081	1					
ANR	5457168	Identifier	getPortNumber		5457081	2					
ANR	5457169	ParameterList	char * hostname		5457081	3					
ANR	5457170	Parameter	char * hostname	57:18:1591:1604	5457081	0	True				
ANR	5457171	ParameterType	char *		5457081	0					
ANR	5457172	Identifier	hostname		5457081	1					
ANR	5457173	CFGEntryNode	ENTRY		5457081		True				
ANR	5457174	CFGExitNode	EXIT		5457081		True				
ANR	5457175	Symbol	atoi		5457081						
ANR	5457176	Symbol	strlen		5457081						
ANR	5457177	Symbol	hostname		5457081						
ANR	5457178	Symbol	* buffer		5457081						
ANR	5457179	Symbol	popen		5457081						
ANR	5457180	Symbol	* strlen		5457081						
ANR	5457181	Symbol	f		5457081						
ANR	5457182	Symbol	count		5457081						
ANR	5457183	Symbol	buffer		5457081						
ANR	5457184	Symbol	fgets		5457081						
ANR	5457185	ClassDef	Listener	76:0:1944:2485							
ANR	5457186	DeclStmt									
ANR	5457187	Decl							Session	Session &	session
ANR	5457188	DeclStmt									
ANR	5457189	Decl							SubscriptionManager	SubscriptionManager	subscriptions
ANR	5457190	DeclStmt									
ANR	5457191	Decl							string	string	newMessage
ANR	5457192	DeclStmt									
ANR	5457193	Decl							LocalQueue	LocalQueue	local_queue
ANR	5457194	DeclStmt									
ANR	5457195	Decl							LocalQueue	LocalQueue	temp_local_queue
ANR	5457196	DeclStmt									
ANR	5457197	Decl							void	"void ( std :: string queue , std :: string exchange , std :: string routing_key )"	prepareQueue
ANR	5457198	DeclStmt									
ANR	5457199	Decl							void	void ( Message & message )	received
ANR	5457200	DeclStmt									
ANR	5457201	Decl							void	void ( )	listen
ANR	5457202	DeclStmt									
ANR	5457203	Decl							void	void ( )	dequeue
ANR	5457204	DeclStmt									
ANR	5457205	Decl							void	void ( )	browse
ANR	5457206	DeclStmt									
ANR	5457207	Decl							void	void ( )	consume
ANR	5457208	DeclStmt									
ANR	5457209	Decl							bool	bool ( )	initListen
ANR	5457210	DeclStmt									
ANR	5457211	Decl							string	string ( )	getNewMessage
ANR	5457212	Function	~Listener	93:4:2468:2482							
ANR	5457213	FunctionDef	~Listener ()		5457212	13					
ANR	5457214	CompoundStatement		93:16:2480:2482	5457212	0					
ANR	5457215	Identifier	~Listener		5457212	1					
ANR	5457216	ParameterList			5457212	2					
ANR	5457217	CFGEntryNode	ENTRY		5457212		True				
ANR	5457218	CFGExitNode	EXIT		5457212		True				
ANR	5457219	Function	Listener :: Listener	106:0:2761:2848							
ANR	5457220	FunctionDef	Listener :: Listener (Session & session)		5457219	0					
ANR	5457221	CompoundStatement		109:0:2846:2848	5457219	0					
ANR	5457222	Identifier	Listener :: Listener		5457219	1					
ANR	5457223	ParameterList	Session & session		5457219	2					
ANR	5457224	Parameter	Session & session	106:19:2780:2795	5457219	0	True				
ANR	5457225	ParameterType	Session &		5457219	0					
ANR	5457226	Identifier	session		5457219	1					
ANR	5457227	CFGEntryNode	ENTRY		5457219		True				
ANR	5457228	CFGExitNode	EXIT		5457219		True				
ANR	5457229	Symbol	session		5457219						
ANR	5457230	Function	Listener :: getNewMessage	116:0:2960:3015							
ANR	5457231	FunctionDef	Listener :: getNewMessage ()		5457230	0					
ANR	5457232	CompoundStatement		116:32:2992:3015	5457230	0					
ANR	5457233	ReturnStatement	return newMessage ;	117:2:2996:3013	5457230	0	True				
ANR	5457234	Identifier	newMessage		5457230	0					
ANR	5457235	ReturnType	string		5457230	1					
ANR	5457236	Identifier	Listener :: getNewMessage		5457230	2					
ANR	5457237	ParameterList			5457230	3					
ANR	5457238	CFGEntryNode	ENTRY		5457230		True				
ANR	5457239	CFGExitNode	EXIT		5457230		True				
ANR	5457240	Symbol	newMessage		5457230						
ANR	5457241	Function	Listener :: prepareQueue	124:0:3064:3458							
ANR	5457242	FunctionDef	"Listener :: prepareQueue (std :: string queue , std :: string exchange , std :: string routing_key)"		5457241	0					
ANR	5457243	CompoundStatement		124:94:3158:3458	5457241	0					
ANR	5457244	ExpressionStatement	"std :: cout << ""Subscribing to queue "" << queue << std :: endl"	126:2:3163:3221	5457241	0	True				
ANR	5457245	ShiftExpression	"std :: cout << ""Subscribing to queue "" << queue << std :: endl"		5457241	0		<<			
ANR	5457246	Identifier	std :: cout		5457241	0					
ANR	5457247	ShiftExpression	"""Subscribing to queue "" << queue << std :: endl"		5457241	1		<<			
ANR	5457248	PrimaryExpression	"""Subscribing to queue """		5457241	0					
ANR	5457249	ShiftExpression	queue << std :: endl		5457241	1		<<			
ANR	5457250	Identifier	queue		5457241	0					
ANR	5457251	Identifier	std :: endl		5457241	1					
ANR	5457252	ExpressionStatement	"subscriptions . subscribe ( local_queue , string ( ""condor_queue"" ) )"	130:2:3396:3456	5457241	1	True				
ANR	5457253	CallExpression	"subscriptions . subscribe ( local_queue , string ( ""condor_queue"" ) )"		5457241	0					
ANR	5457254	Callee	subscriptions . subscribe		5457241	0					
ANR	5457255	MemberAccess	subscriptions . subscribe		5457241	0					
ANR	5457256	Identifier	subscriptions		5457241	0					
ANR	5457257	Identifier	subscribe		5457241	1					
ANR	5457258	ArgumentList	local_queue		5457241	1					
ANR	5457259	Argument	local_queue		5457241	0					
ANR	5457260	Identifier	local_queue		5457241	0					
ANR	5457261	Argument	"string ( ""condor_queue"" )"		5457241	1					
ANR	5457262	CallExpression	"string ( ""condor_queue"" )"		5457241	0					
ANR	5457263	Callee	string		5457241	0					
ANR	5457264	Identifier	string		5457241	0					
ANR	5457265	ArgumentList	"""condor_queue"""		5457241	1					
ANR	5457266	Argument	"""condor_queue"""		5457241	0					
ANR	5457267	PrimaryExpression	"""condor_queue"""		5457241	0					
ANR	5457268	ReturnType	void		5457241	1					
ANR	5457269	Identifier	Listener :: prepareQueue		5457241	2					
ANR	5457270	ParameterList	"std :: string queue , std :: string exchange , std :: string routing_key"		5457241	3					
ANR	5457271	Parameter	std :: string queue	124:28:3092:3108	5457241	0	True				
ANR	5457272	ParameterType	std :: string		5457241	0					
ANR	5457273	Identifier	queue		5457241	1					
ANR	5457274	Parameter	std :: string exchange	124:47:3111:3130	5457241	1	True				
ANR	5457275	ParameterType	std :: string		5457241	0					
ANR	5457276	Identifier	exchange		5457241	1					
ANR	5457277	Parameter	std :: string routing_key	124:69:3133:3155	5457241	2	True				
ANR	5457278	ParameterType	std :: string		5457241	0					
ANR	5457279	Identifier	routing_key		5457241	1					
ANR	5457280	CFGEntryNode	ENTRY		5457241		True				
ANR	5457281	CFGExitNode	EXIT		5457241		True				
ANR	5457282	Symbol	subscriptions		5457241						
ANR	5457283	Symbol	string		5457241						
ANR	5457284	Symbol	local_queue		5457241						
ANR	5457285	Symbol	exchange		5457241						
ANR	5457286	Symbol	routing_key		5457241						
ANR	5457287	Symbol	queue		5457241						
ANR	5457288	Function	Listener :: received	137:0:3571:4223							
ANR	5457289	FunctionDef	Listener :: received (Message & message)		5457288	0					
ANR	5457290	CompoundStatement		137:42:3613:4223	5457288	0					
ANR	5457291	IdentifierDeclStatement	"char * prevStateFileName = ""tempLRM.dat"" ;"	139:2:3618:3657	5457288	0	True				
ANR	5457292	IdentifierDecl	"* prevStateFileName = ""tempLRM.dat"""		5457288	0					
ANR	5457293	IdentifierDeclType	char *		5457288	0					
ANR	5457294	Identifier	prevStateFileName		5457288	1					
ANR	5457295	AssignmentExpression	"* prevStateFileName = ""tempLRM.dat"""		5457288	2		=			
ANR	5457296	Identifier	prevStateFileName		5457288	0					
ANR	5457297	PrimaryExpression	"""tempLRM.dat"""		5457288	1					
ANR	5457298	IdentifierDeclStatement	ofstream prevStateFile ;	140:2:3661:3684	5457288	1	True				
ANR	5457299	IdentifierDecl	prevStateFile		5457288	0					
ANR	5457300	IdentifierDeclType	ofstream		5457288	0					
ANR	5457301	Identifier	prevStateFile		5457288	1					
ANR	5457302	ExpressionStatement	"prevStateFile . open ( prevStateFileName , ios :: out )"	141:2:3688:3734	5457288	2	True				
ANR	5457303	CallExpression	"prevStateFile . open ( prevStateFileName , ios :: out )"		5457288	0					
ANR	5457304	Callee	prevStateFile . open		5457288	0					
ANR	5457305	MemberAccess	prevStateFile . open		5457288	0					
ANR	5457306	Identifier	prevStateFile		5457288	0					
ANR	5457307	Identifier	open		5457288	1					
ANR	5457308	ArgumentList	prevStateFileName		5457288	1					
ANR	5457309	Argument	prevStateFileName		5457288	0					
ANR	5457310	Identifier	prevStateFileName		5457288	0					
ANR	5457311	Argument	ios :: out		5457288	1					
ANR	5457312	Identifier	ios :: out		5457288	0					
ANR	5457313	ExpressionStatement	"cout << ""\\n STOP : about to write to a file().. "" << endl"	142:2:3738:3794	5457288	3	True				
ANR	5457314	ShiftExpression	"cout << ""\\n STOP : about to write to a file().. "" << endl"		5457288	0		<<			
ANR	5457315	Identifier	cout		5457288	0					
ANR	5457316	ShiftExpression	"""\\n STOP : about to write to a file().. "" << endl"		5457288	1		<<			
ANR	5457317	PrimaryExpression	"""\\n STOP : about to write to a file().. """		5457288	0					
ANR	5457318	Identifier	endl		5457288	1					
ANR	5457319	ExpressionStatement	prevStateFile << message . getData ( )	143:2:3798:3832	5457288	4	True				
ANR	5457320	ShiftExpression	prevStateFile << message . getData ( )		5457288	0		<<			
ANR	5457321	Identifier	prevStateFile		5457288	0					
ANR	5457322	CallExpression	message . getData ( )		5457288	1					
ANR	5457323	Callee	message . getData		5457288	0					
ANR	5457324	MemberAccess	message . getData		5457288	0					
ANR	5457325	Identifier	message		5457288	0					
ANR	5457326	Identifier	getData		5457288	1					
ANR	5457327	ArgumentList			5457288	1					
ANR	5457328	ExpressionStatement	prevStateFile . close ( )	144:2:3836:3857	5457288	5	True				
ANR	5457329	CallExpression	prevStateFile . close ( )		5457288	0					
ANR	5457330	Callee	prevStateFile . close		5457288	0					
ANR	5457331	MemberAccess	prevStateFile . close		5457288	0					
ANR	5457332	Identifier	prevStateFile		5457288	0					
ANR	5457333	Identifier	close		5457288	1					
ANR	5457334	ArgumentList			5457288	1					
ANR	5457335	ExpressionStatement	"rename ( prevStateFileName , ""LRM.dat"" )"	145:2:3861:3896	5457288	6	True				
ANR	5457336	CallExpression	"rename ( prevStateFileName , ""LRM.dat"" )"		5457288	0					
ANR	5457337	Callee	rename		5457288	0					
ANR	5457338	Identifier	rename		5457288	0					
ANR	5457339	ArgumentList	prevStateFileName		5457288	1					
ANR	5457340	Argument	prevStateFileName		5457288	0					
ANR	5457341	Identifier	prevStateFileName		5457288	0					
ANR	5457342	Argument	"""LRM.dat"""		5457288	1					
ANR	5457343	PrimaryExpression	"""LRM.dat"""		5457288	0					
ANR	5457344	IdentifierDeclStatement	string msgTxt = message . getData ( ) ;	146:2:3900:3933	5457288	7	True				
ANR	5457345	IdentifierDecl	msgTxt = message . getData ( )		5457288	0					
ANR	5457346	IdentifierDeclType	string		5457288	0					
ANR	5457347	Identifier	msgTxt		5457288	1					
ANR	5457348	AssignmentExpression	msgTxt = message . getData ( )		5457288	2		=			
ANR	5457349	Identifier	msgTxt		5457288	0					
ANR	5457350	CallExpression	message . getData ( )		5457288	1					
ANR	5457351	Callee	message . getData		5457288	0					
ANR	5457352	MemberAccess	message . getData		5457288	0					
ANR	5457353	Identifier	message		5457288	0					
ANR	5457354	Identifier	getData		5457288	1					
ANR	5457355	ArgumentList			5457288	1					
ANR	5457356	ExpressionStatement	newMessage = message . getData ( )	147:2:3937:3967	5457288	8	True				
ANR	5457357	AssignmentExpression	newMessage = message . getData ( )		5457288	0		=			
ANR	5457358	Identifier	newMessage		5457288	0					
ANR	5457359	CallExpression	message . getData ( )		5457288	1					
ANR	5457360	Callee	message . getData		5457288	0					
ANR	5457361	MemberAccess	message . getData		5457288	0					
ANR	5457362	Identifier	message		5457288	0					
ANR	5457363	Identifier	getData		5457288	1					
ANR	5457364	ArgumentList			5457288	1					
ANR	5457365	IfStatement	"if ( message . getData ( ) == """" )"		5457288	9					
ANR	5457366	Condition	"message . getData ( ) == """""	149:6:3976:3998	5457288	0	True				
ANR	5457367	EqualityExpression	"message . getData ( ) == """""		5457288	0		==			
ANR	5457368	CallExpression	message . getData ( )		5457288	0					
ANR	5457369	Callee	message . getData		5457288	0					
ANR	5457370	MemberAccess	message . getData		5457288	0					
ANR	5457371	Identifier	message		5457288	0					
ANR	5457372	Identifier	getData		5457288	1					
ANR	5457373	ArgumentList			5457288	1					
ANR	5457374	PrimaryExpression	""""""		5457288	1					
ANR	5457375	CompoundStatement		13:31:387:387	5457288	1					
ANR	5457376	ExpressionStatement	"std :: cout << ""Shutting down listener for "" << message . getDestination ( ) << std :: endl"	150:4:4007:4090	5457288	0	True				
ANR	5457377	ShiftExpression	"std :: cout << ""Shutting down listener for "" << message . getDestination ( ) << std :: endl"		5457288	0		<<			
ANR	5457378	Identifier	std :: cout		5457288	0					
ANR	5457379	ShiftExpression	"""Shutting down listener for "" << message . getDestination ( ) << std :: endl"		5457288	1		<<			
ANR	5457380	PrimaryExpression	"""Shutting down listener for """		5457288	0					
ANR	5457381	ShiftExpression	message . getDestination ( ) << std :: endl		5457288	1		<<			
ANR	5457382	CallExpression	message . getDestination ( )		5457288	0					
ANR	5457383	Callee	message . getDestination		5457288	0					
ANR	5457384	MemberAccess	message . getDestination		5457288	0					
ANR	5457385	Identifier	message		5457288	0					
ANR	5457386	Identifier	getDestination		5457288	1					
ANR	5457387	ArgumentList			5457288	1					
ANR	5457388	Identifier	std :: endl		5457288	1					
ANR	5457389	ExpressionStatement	subscriptions . cancel ( message . getDestination ( ) )	151:4:4096:4142	5457288	1	True				
ANR	5457390	CallExpression	subscriptions . cancel ( message . getDestination ( ) )		5457288	0					
ANR	5457391	Callee	subscriptions . cancel		5457288	0					
ANR	5457392	MemberAccess	subscriptions . cancel		5457288	0					
ANR	5457393	Identifier	subscriptions		5457288	0					
ANR	5457394	Identifier	cancel		5457288	1					
ANR	5457395	ArgumentList	message . getDestination ( )		5457288	1					
ANR	5457396	Argument	message . getDestination ( )		5457288	0					
ANR	5457397	CallExpression	message . getDestination ( )		5457288	0					
ANR	5457398	Callee	message . getDestination		5457288	0					
ANR	5457399	MemberAccess	message . getDestination		5457288	0					
ANR	5457400	Identifier	message		5457288	0					
ANR	5457401	Identifier	getDestination		5457288	1					
ANR	5457402	ArgumentList			5457288	1					
ANR	5457403	ExpressionStatement	subscriptions . stop ( )	153:2:4150:4170	5457288	10	True				
ANR	5457404	CallExpression	subscriptions . stop ( )		5457288	0					
ANR	5457405	Callee	subscriptions . stop		5457288	0					
ANR	5457406	MemberAccess	subscriptions . stop		5457288	0					
ANR	5457407	Identifier	subscriptions		5457288	0					
ANR	5457408	Identifier	stop		5457288	1					
ANR	5457409	ArgumentList			5457288	1					
ANR	5457410	ExpressionStatement	subscriptions . cancel ( message . getDestination ( ) )	154:2:4174:4220	5457288	11	True				
ANR	5457411	CallExpression	subscriptions . cancel ( message . getDestination ( ) )		5457288	0					
ANR	5457412	Callee	subscriptions . cancel		5457288	0					
ANR	5457413	MemberAccess	subscriptions . cancel		5457288	0					
ANR	5457414	Identifier	subscriptions		5457288	0					
ANR	5457415	Identifier	cancel		5457288	1					
ANR	5457416	ArgumentList	message . getDestination ( )		5457288	1					
ANR	5457417	Argument	message . getDestination ( )		5457288	0					
ANR	5457418	CallExpression	message . getDestination ( )		5457288	0					
ANR	5457419	Callee	message . getDestination		5457288	0					
ANR	5457420	MemberAccess	message . getDestination		5457288	0					
ANR	5457421	Identifier	message		5457288	0					
ANR	5457422	Identifier	getDestination		5457288	1					
ANR	5457423	ArgumentList			5457288	1					
ANR	5457424	ReturnType	void		5457288	1					
ANR	5457425	Identifier	Listener :: received		5457288	2					
ANR	5457426	ParameterList	Message & message		5457288	3					
ANR	5457427	Parameter	Message & message	137:24:3595:3610	5457288	0	True				
ANR	5457428	ParameterType	Message &		5457288	0					
ANR	5457429	Identifier	message		5457288	1					
ANR	5457430	CFGEntryNode	ENTRY		5457288		True				
ANR	5457431	CFGExitNode	EXIT		5457288		True				
ANR	5457432	Symbol	prevStateFile		5457288						
ANR	5457433	Symbol	subscriptions		5457288						
ANR	5457434	Symbol	ios :: out		5457288						
ANR	5457435	Symbol	newMessage		5457288						
ANR	5457436	Symbol	msgTxt		5457288						
ANR	5457437	Symbol	message		5457288						
ANR	5457438	Symbol	message . getData		5457288						
ANR	5457439	Symbol	message . getDestination		5457288						
ANR	5457440	Symbol	prevStateFileName		5457288						
ANR	5457441	Function	Listener :: listen	162:0:4361:4410							
ANR	5457442	FunctionDef	Listener :: listen ()		5457441	0					
ANR	5457443	CompoundStatement		162:24:4385:4410	5457441	0					
ANR	5457444	ExpressionStatement	subscriptions . run ( )	163:2:4389:4408	5457441	0	True				
ANR	5457445	CallExpression	subscriptions . run ( )		5457441	0					
ANR	5457446	Callee	subscriptions . run		5457441	0					
ANR	5457447	MemberAccess	subscriptions . run		5457441	0					
ANR	5457448	Identifier	subscriptions		5457441	0					
ANR	5457449	Identifier	run		5457441	1					
ANR	5457450	ArgumentList			5457441	1					
ANR	5457451	ReturnType	void		5457441	1					
ANR	5457452	Identifier	Listener :: listen		5457441	2					
ANR	5457453	ParameterList			5457441	3					
ANR	5457454	CFGEntryNode	ENTRY		5457441		True				
ANR	5457455	CFGExitNode	EXIT		5457441		True				
ANR	5457456	Symbol	subscriptions		5457441						
ANR	5457457	Function	Listener :: browse	171:0:4556:4756							
ANR	5457458	FunctionDef	Listener :: browse ()		5457457	0					
ANR	5457459	CompoundStatement		172:0:4581:4756	5457457	0					
ANR	5457460	ExpressionStatement	"subscriptions . subscribe ( * this , ""condor_queue"" , SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED ) )"	173:2:4586:4725	5457457	0	True				
ANR	5457461	CallExpression	"subscriptions . subscribe ( * this , ""condor_queue"" , SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED ) )"		5457457	0					
ANR	5457462	Callee	subscriptions . subscribe		5457457	0					
ANR	5457463	MemberAccess	subscriptions . subscribe		5457457	0					
ANR	5457464	Identifier	subscriptions		5457457	0					
ANR	5457465	Identifier	subscribe		5457457	1					
ANR	5457466	ArgumentList	* this		5457457	1					
ANR	5457467	Argument	* this		5457457	0					
ANR	5457468	UnaryOperationExpression	* this		5457457	0					
ANR	5457469	UnaryOperator	*		5457457	0					
ANR	5457470	Identifier	this		5457457	1					
ANR	5457471	Argument	"""condor_queue"""		5457457	1					
ANR	5457472	PrimaryExpression	"""condor_queue"""		5457457	0					
ANR	5457473	Argument	"SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED )"		5457457	2					
ANR	5457474	CallExpression	"SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED )"		5457457	0					
ANR	5457475	Callee	SubscriptionSettings		5457457	0					
ANR	5457476	Identifier	SubscriptionSettings		5457457	0					
ANR	5457477	ArgumentList	FlowControl :: unlimited ( )		5457457	1					
ANR	5457478	Argument	FlowControl :: unlimited ( )		5457457	0					
ANR	5457479	CallExpression	FlowControl :: unlimited ( )		5457457	0					
ANR	5457480	Callee	FlowControl :: unlimited		5457457	0					
ANR	5457481	Identifier	FlowControl :: unlimited		5457457	0					
ANR	5457482	ArgumentList			5457457	1					
ANR	5457483	Argument	ACCEPT_MODE_NONE		5457457	1					
ANR	5457484	Identifier	ACCEPT_MODE_NONE		5457457	0					
ANR	5457485	Argument	ACQUIRE_MODE_NOT_ACQUIRED		5457457	2					
ANR	5457486	Identifier	ACQUIRE_MODE_NOT_ACQUIRED		5457457	0					
ANR	5457487	ExpressionStatement	subscriptions . run ( )	174:2:4734:4753	5457457	1	True				
ANR	5457488	CallExpression	subscriptions . run ( )		5457457	0					
ANR	5457489	Callee	subscriptions . run		5457457	0					
ANR	5457490	MemberAccess	subscriptions . run		5457457	0					
ANR	5457491	Identifier	subscriptions		5457457	0					
ANR	5457492	Identifier	run		5457457	1					
ANR	5457493	ArgumentList			5457457	1					
ANR	5457494	ReturnType	void		5457457	1					
ANR	5457495	Identifier	Listener :: browse		5457457	2					
ANR	5457496	ParameterList			5457457	3					
ANR	5457497	CFGEntryNode	ENTRY		5457457		True				
ANR	5457498	CFGExitNode	EXIT		5457457		True				
ANR	5457499	Symbol	SubscriptionSettings		5457457						
ANR	5457500	Symbol	* this		5457457						
ANR	5457501	Symbol	FlowControl :: unlimited		5457457						
ANR	5457502	Symbol	subscriptions		5457457						
ANR	5457503	Symbol	ACCEPT_MODE_NONE		5457457						
ANR	5457504	Symbol	ACQUIRE_MODE_NOT_ACQUIRED		5457457						
ANR	5457505	Symbol	this		5457457						
ANR	5457506	Function	Listener :: consume	182:0:4911:5090							
ANR	5457507	FunctionDef	Listener :: consume ()		5457506	0					
ANR	5457508	CompoundStatement		183:0:4937:5090	5457506	0					
ANR	5457509	IdentifierDeclStatement	Message lMsg ;	184:2:4942:4954	5457506	0	True				
ANR	5457510	IdentifierDecl	lMsg		5457506	0					
ANR	5457511	IdentifierDeclType	Message		5457506	0					
ANR	5457512	Identifier	lMsg		5457506	1					
ANR	5457513	ExpressionStatement	"lMsg = subscriptions . get ( string ( ""condor_queue"" ) )"	185:2:4958:5006	5457506	1	True				
ANR	5457514	AssignmentExpression	"lMsg = subscriptions . get ( string ( ""condor_queue"" ) )"		5457506	0		=			
ANR	5457515	Identifier	lMsg		5457506	0					
ANR	5457516	CallExpression	"subscriptions . get ( string ( ""condor_queue"" ) )"		5457506	1					
ANR	5457517	Callee	subscriptions . get		5457506	0					
ANR	5457518	MemberAccess	subscriptions . get		5457506	0					
ANR	5457519	Identifier	subscriptions		5457506	0					
ANR	5457520	Identifier	get		5457506	1					
ANR	5457521	ArgumentList	"string ( ""condor_queue"" )"		5457506	1					
ANR	5457522	Argument	"string ( ""condor_queue"" )"		5457506	0					
ANR	5457523	CallExpression	"string ( ""condor_queue"" )"		5457506	0					
ANR	5457524	Callee	string		5457506	0					
ANR	5457525	Identifier	string		5457506	0					
ANR	5457526	ArgumentList	"""condor_queue"""		5457506	1					
ANR	5457527	Argument	"""condor_queue"""		5457506	0					
ANR	5457528	PrimaryExpression	"""condor_queue"""		5457506	0					
ANR	5457529	ExpressionStatement	newMessage = lMsg . getData ( )	186:2:5010:5037	5457506	2	True				
ANR	5457530	AssignmentExpression	newMessage = lMsg . getData ( )		5457506	0		=			
ANR	5457531	Identifier	newMessage		5457506	0					
ANR	5457532	CallExpression	lMsg . getData ( )		5457506	1					
ANR	5457533	Callee	lMsg . getData		5457506	0					
ANR	5457534	MemberAccess	lMsg . getData		5457506	0					
ANR	5457535	Identifier	lMsg		5457506	0					
ANR	5457536	Identifier	getData		5457506	1					
ANR	5457537	ArgumentList			5457506	1					
ANR	5457538	ExpressionStatement	"cout << ""\\n consume() => "" << newMessage << endl"	187:2:5041:5087	5457506	3	True				
ANR	5457539	ShiftExpression	"cout << ""\\n consume() => "" << newMessage << endl"		5457506	0		<<			
ANR	5457540	Identifier	cout		5457506	0					
ANR	5457541	ShiftExpression	"""\\n consume() => "" << newMessage << endl"		5457506	1		<<			
ANR	5457542	PrimaryExpression	"""\\n consume() => """		5457506	0					
ANR	5457543	ShiftExpression	newMessage << endl		5457506	1		<<			
ANR	5457544	Identifier	newMessage		5457506	0					
ANR	5457545	Identifier	endl		5457506	1					
ANR	5457546	ReturnType	void		5457506	1					
ANR	5457547	Identifier	Listener :: consume		5457506	2					
ANR	5457548	ParameterList			5457506	3					
ANR	5457549	CFGEntryNode	ENTRY		5457506		True				
ANR	5457550	CFGExitNode	EXIT		5457506		True				
ANR	5457551	Symbol	subscriptions		5457506						
ANR	5457552	Symbol	string		5457506						
ANR	5457553	Symbol	lMsg		5457506						
ANR	5457554	Symbol	lMsg . getData		5457506						
ANR	5457555	Symbol	newMessage		5457506						
ANR	5457556	Symbol	subscriptions . get		5457506						
ANR	5457557	Function	Listener :: dequeue	195:0:5216:5529							
ANR	5457558	FunctionDef	Listener :: dequeue ()		5457557	0					
ANR	5457559	CompoundStatement		195:25:5241:5529	5457557	0					
ANR	5457560	ExpressionStatement	"subscriptions . subscribe ( local_queue , string ( ""condor_queue"" ) )"	196:2:5245:5305	5457557	0	True				
ANR	5457561	CallExpression	"subscriptions . subscribe ( local_queue , string ( ""condor_queue"" ) )"		5457557	0					
ANR	5457562	Callee	subscriptions . subscribe		5457557	0					
ANR	5457563	MemberAccess	subscriptions . subscribe		5457557	0					
ANR	5457564	Identifier	subscriptions		5457557	0					
ANR	5457565	Identifier	subscribe		5457557	1					
ANR	5457566	ArgumentList	local_queue		5457557	1					
ANR	5457567	Argument	local_queue		5457557	0					
ANR	5457568	Identifier	local_queue		5457557	0					
ANR	5457569	Argument	"string ( ""condor_queue"" )"		5457557	1					
ANR	5457570	CallExpression	"string ( ""condor_queue"" )"		5457557	0					
ANR	5457571	Callee	string		5457557	0					
ANR	5457572	Identifier	string		5457557	0					
ANR	5457573	ArgumentList	"""condor_queue"""		5457557	1					
ANR	5457574	Argument	"""condor_queue"""		5457557	0					
ANR	5457575	PrimaryExpression	"""condor_queue"""		5457557	0					
ANR	5457576	IdentifierDeclStatement	Message lMsg ;	197:2:5312:5324	5457557	1	True				
ANR	5457577	IdentifierDecl	lMsg		5457557	0					
ANR	5457578	IdentifierDeclType	Message		5457557	0					
ANR	5457579	Identifier	lMsg		5457557	1					
ANR	5457580	IdentifierDeclStatement	int size = 10 ;	198:2:5328:5341	5457557	2	True				
ANR	5457581	IdentifierDecl	size = 10		5457557	0					
ANR	5457582	IdentifierDeclType	int		5457557	0					
ANR	5457583	Identifier	size		5457557	1					
ANR	5457584	AssignmentExpression	size = 10		5457557	2		=			
ANR	5457585	Identifier	size		5457557	0					
ANR	5457586	PrimaryExpression	10		5457557	1					
ANR	5457587	ExpressionStatement	size = local_queue . size ( )	199:2:5345:5370	5457557	3	True				
ANR	5457588	AssignmentExpression	size = local_queue . size ( )		5457557	0		=			
ANR	5457589	Identifier	size		5457557	0					
ANR	5457590	CallExpression	local_queue . size ( )		5457557	1					
ANR	5457591	Callee	local_queue . size		5457557	0					
ANR	5457592	MemberAccess	local_queue . size		5457557	0					
ANR	5457593	Identifier	local_queue		5457557	0					
ANR	5457594	Identifier	size		5457557	1					
ANR	5457595	ArgumentList			5457557	1					
ANR	5457596	ExpressionStatement	"cout << ""\\n STOP : about to dequeue  "" << endl"	200:2:5374:5419	5457557	4	True				
ANR	5457597	ShiftExpression	"cout << ""\\n STOP : about to dequeue  "" << endl"		5457557	0		<<			
ANR	5457598	Identifier	cout		5457557	0					
ANR	5457599	ShiftExpression	"""\\n STOP : about to dequeue  "" << endl"		5457557	1		<<			
ANR	5457600	PrimaryExpression	"""\\n STOP : about to dequeue  """		5457557	0					
ANR	5457601	Identifier	endl		5457557	1					
ANR	5457602	ExpressionStatement	"local_queue . get ( lMsg , 10000 )"	202:2:5424:5451	5457557	5	True				
ANR	5457603	CallExpression	"local_queue . get ( lMsg , 10000 )"		5457557	0					
ANR	5457604	Callee	local_queue . get		5457557	0					
ANR	5457605	MemberAccess	local_queue . get		5457557	0					
ANR	5457606	Identifier	local_queue		5457557	0					
ANR	5457607	Identifier	get		5457557	1					
ANR	5457608	ArgumentList	lMsg		5457557	1					
ANR	5457609	Argument	lMsg		5457557	0					
ANR	5457610	Identifier	lMsg		5457557	0					
ANR	5457611	Argument	10000		5457557	1					
ANR	5457612	PrimaryExpression	10000		5457557	0					
ANR	5457613	ExpressionStatement	newMessage = lMsg . getData ( )	203:2:5455:5482	5457557	6	True				
ANR	5457614	AssignmentExpression	newMessage = lMsg . getData ( )		5457557	0		=			
ANR	5457615	Identifier	newMessage		5457557	0					
ANR	5457616	CallExpression	lMsg . getData ( )		5457557	1					
ANR	5457617	Callee	lMsg . getData		5457557	0					
ANR	5457618	MemberAccess	lMsg . getData		5457557	0					
ANR	5457619	Identifier	lMsg		5457557	0					
ANR	5457620	Identifier	getData		5457557	1					
ANR	5457621	ArgumentList			5457557	1					
ANR	5457622	ExpressionStatement	"cout << ""\\n STOP : after dequeue "" << endl"	204:2:5486:5527	5457557	7	True				
ANR	5457623	ShiftExpression	"cout << ""\\n STOP : after dequeue "" << endl"		5457557	0		<<			
ANR	5457624	Identifier	cout		5457557	0					
ANR	5457625	ShiftExpression	"""\\n STOP : after dequeue "" << endl"		5457557	1		<<			
ANR	5457626	PrimaryExpression	"""\\n STOP : after dequeue """		5457557	0					
ANR	5457627	Identifier	endl		5457557	1					
ANR	5457628	ReturnType	void		5457557	1					
ANR	5457629	Identifier	Listener :: dequeue		5457557	2					
ANR	5457630	ParameterList			5457557	3					
ANR	5457631	CFGEntryNode	ENTRY		5457557		True				
ANR	5457632	CFGExitNode	EXIT		5457557		True				
ANR	5457633	Symbol	subscriptions		5457557						
ANR	5457634	Symbol	local_queue . size		5457557						
ANR	5457635	Symbol	string		5457557						
ANR	5457636	Symbol	size		5457557						
ANR	5457637	Symbol	local_queue		5457557						
ANR	5457638	Symbol	lMsg		5457557						
ANR	5457639	Symbol	newMessage		5457557						
ANR	5457640	Symbol	lMsg . getData		5457557						
ANR	5457641	Function	Listener :: initListen	215:0:5747:6578							
ANR	5457642	FunctionDef	Listener :: initListen ()		5457641	0					
ANR	5457643	CompoundStatement		215:28:5775:6578	5457641	0					
ANR	5457644	ExpressionStatement	"subscriptions . subscribe ( local_queue , string ( ""condor_queue"" ) , SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED ) )"	218:2:5864:6016	5457641	0	True				
ANR	5457645	CallExpression	"subscriptions . subscribe ( local_queue , string ( ""condor_queue"" ) , SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED ) )"		5457641	0					
ANR	5457646	Callee	subscriptions . subscribe		5457641	0					
ANR	5457647	MemberAccess	subscriptions . subscribe		5457641	0					
ANR	5457648	Identifier	subscriptions		5457641	0					
ANR	5457649	Identifier	subscribe		5457641	1					
ANR	5457650	ArgumentList	local_queue		5457641	1					
ANR	5457651	Argument	local_queue		5457641	0					
ANR	5457652	Identifier	local_queue		5457641	0					
ANR	5457653	Argument	"string ( ""condor_queue"" )"		5457641	1					
ANR	5457654	CallExpression	"string ( ""condor_queue"" )"		5457641	0					
ANR	5457655	Callee	string		5457641	0					
ANR	5457656	Identifier	string		5457641	0					
ANR	5457657	ArgumentList	"""condor_queue"""		5457641	1					
ANR	5457658	Argument	"""condor_queue"""		5457641	0					
ANR	5457659	PrimaryExpression	"""condor_queue"""		5457641	0					
ANR	5457660	Argument	"SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED )"		5457641	2					
ANR	5457661	CallExpression	"SubscriptionSettings ( FlowControl :: unlimited ( ) , ACCEPT_MODE_NONE , ACQUIRE_MODE_NOT_ACQUIRED )"		5457641	0					
ANR	5457662	Callee	SubscriptionSettings		5457641	0					
ANR	5457663	Identifier	SubscriptionSettings		5457641	0					
ANR	5457664	ArgumentList	FlowControl :: unlimited ( )		5457641	1					
ANR	5457665	Argument	FlowControl :: unlimited ( )		5457641	0					
ANR	5457666	CallExpression	FlowControl :: unlimited ( )		5457641	0					
ANR	5457667	Callee	FlowControl :: unlimited		5457641	0					
ANR	5457668	Identifier	FlowControl :: unlimited		5457641	0					
ANR	5457669	ArgumentList			5457641	1					
ANR	5457670	Argument	ACCEPT_MODE_NONE		5457641	1					
ANR	5457671	Identifier	ACCEPT_MODE_NONE		5457641	0					
ANR	5457672	Argument	ACQUIRE_MODE_NOT_ACQUIRED		5457641	2					
ANR	5457673	Identifier	ACQUIRE_MODE_NOT_ACQUIRED		5457641	0					
ANR	5457674	IdentifierDeclStatement	Message lMsg ;	219:2:6023:6035	5457641	1	True				
ANR	5457675	IdentifierDecl	lMsg		5457641	0					
ANR	5457676	IdentifierDeclType	Message		5457641	0					
ANR	5457677	Identifier	lMsg		5457641	1					
ANR	5457678	ExpressionStatement	sleep ( 2 )	222:2:6126:6134	5457641	2	True				
ANR	5457679	CallExpression	sleep ( 2 )		5457641	0					
ANR	5457680	Callee	sleep		5457641	0					
ANR	5457681	Identifier	sleep		5457641	0					
ANR	5457682	ArgumentList	2		5457641	1					
ANR	5457683	Argument	2		5457641	0					
ANR	5457684	PrimaryExpression	2		5457641	0					
ANR	5457685	IdentifierDeclStatement	int size = 10 ;	223:2:6138:6151	5457641	3	True				
ANR	5457686	IdentifierDecl	size = 10		5457641	0					
ANR	5457687	IdentifierDeclType	int		5457641	0					
ANR	5457688	Identifier	size		5457641	1					
ANR	5457689	AssignmentExpression	size = 10		5457641	2		=			
ANR	5457690	Identifier	size		5457641	0					
ANR	5457691	PrimaryExpression	10		5457641	1					
ANR	5457692	ExpressionStatement	size = local_queue . size ( )	224:2:6155:6180	5457641	4	True				
ANR	5457693	AssignmentExpression	size = local_queue . size ( )		5457641	0		=			
ANR	5457694	Identifier	size		5457641	0					
ANR	5457695	CallExpression	local_queue . size ( )		5457641	1					
ANR	5457696	Callee	local_queue . size		5457641	0					
ANR	5457697	MemberAccess	local_queue . size		5457641	0					
ANR	5457698	Identifier	local_queue		5457641	0					
ANR	5457699	Identifier	size		5457641	1					
ANR	5457700	ArgumentList			5457641	1					
ANR	5457701	ExpressionStatement	"local_queue . get ( lMsg , 10000 )"	225:2:6184:6211	5457641	5	True				
ANR	5457702	CallExpression	"local_queue . get ( lMsg , 10000 )"		5457641	0					
ANR	5457703	Callee	local_queue . get		5457641	0					
ANR	5457704	MemberAccess	local_queue . get		5457641	0					
ANR	5457705	Identifier	local_queue		5457641	0					
ANR	5457706	Identifier	get		5457641	1					
ANR	5457707	ArgumentList	lMsg		5457641	1					
ANR	5457708	Argument	lMsg		5457641	0					
ANR	5457709	Identifier	lMsg		5457641	0					
ANR	5457710	Argument	10000		5457641	1					
ANR	5457711	PrimaryExpression	10000		5457641	0					
ANR	5457712	ExpressionStatement	newMessage = lMsg . getData ( )	226:2:6215:6242	5457641	6	True				
ANR	5457713	AssignmentExpression	newMessage = lMsg . getData ( )		5457641	0		=			
ANR	5457714	Identifier	newMessage		5457641	0					
ANR	5457715	CallExpression	lMsg . getData ( )		5457641	1					
ANR	5457716	Callee	lMsg . getData		5457641	0					
ANR	5457717	MemberAccess	lMsg . getData		5457641	0					
ANR	5457718	Identifier	lMsg		5457641	0					
ANR	5457719	Identifier	getData		5457641	1					
ANR	5457720	ArgumentList			5457641	1					
ANR	5457721	ExpressionStatement	subscriptions . stop ( )	227:2:6246:6266	5457641	7	True				
ANR	5457722	CallExpression	subscriptions . stop ( )		5457641	0					
ANR	5457723	Callee	subscriptions . stop		5457641	0					
ANR	5457724	MemberAccess	subscriptions . stop		5457641	0					
ANR	5457725	Identifier	subscriptions		5457641	0					
ANR	5457726	Identifier	stop		5457641	1					
ANR	5457727	ArgumentList			5457641	1					
ANR	5457728	ExpressionStatement	subscriptions . cancel ( lMsg . getDestination ( ) )	228:2:6270:6313	5457641	8	True				
ANR	5457729	CallExpression	subscriptions . cancel ( lMsg . getDestination ( ) )		5457641	0					
ANR	5457730	Callee	subscriptions . cancel		5457641	0					
ANR	5457731	MemberAccess	subscriptions . cancel		5457641	0					
ANR	5457732	Identifier	subscriptions		5457641	0					
ANR	5457733	Identifier	cancel		5457641	1					
ANR	5457734	ArgumentList	lMsg . getDestination ( )		5457641	1					
ANR	5457735	Argument	lMsg . getDestination ( )		5457641	0					
ANR	5457736	CallExpression	lMsg . getDestination ( )		5457641	0					
ANR	5457737	Callee	lMsg . getDestination		5457641	0					
ANR	5457738	MemberAccess	lMsg . getDestination		5457641	0					
ANR	5457739	Identifier	lMsg		5457641	0					
ANR	5457740	Identifier	getDestination		5457641	1					
ANR	5457741	ArgumentList			5457641	1					
ANR	5457742	ExpressionStatement	"cout << ""\\n initListen(): size of the queue is : "" << size << endl"	229:2:6317:6382	5457641	9	True				
ANR	5457743	ShiftExpression	"cout << ""\\n initListen(): size of the queue is : "" << size << endl"		5457641	0		<<			
ANR	5457744	Identifier	cout		5457641	0					
ANR	5457745	ShiftExpression	"""\\n initListen(): size of the queue is : "" << size << endl"		5457641	1		<<			
ANR	5457746	PrimaryExpression	"""\\n initListen(): size of the queue is : """		5457641	0					
ANR	5457747	ShiftExpression	size << endl		5457641	1		<<			
ANR	5457748	Identifier	size		5457641	0					
ANR	5457749	Identifier	endl		5457641	1					
ANR	5457750	IfStatement	if ( size > 0 )		5457641	10					
ANR	5457751	Condition	size > 0	230:5:6389:6396	5457641	0	True				
ANR	5457752	RelationalExpression	size > 0		5457641	0		>			
ANR	5457753	Identifier	size		5457641	0					
ANR	5457754	PrimaryExpression	0		5457641	1					
ANR	5457755	CompoundStatement		16:14:622:622	5457641	1					
ANR	5457756	ReturnStatement	return false ;	232:4:6448:6460	5457641	0	True				
ANR	5457757	Identifier	false		5457641	0					
ANR	5457758	ElseStatement	else		5457641	0					
ANR	5457759	CompoundStatement		20:6:696:696	5457641	0					
ANR	5457760	ReturnStatement	return true ;	236:4:6561:6572	5457641	0	True				
ANR	5457761	Identifier	true		5457641	0					
ANR	5457762	ReturnType	bool		5457641	1					
ANR	5457763	Identifier	Listener :: initListen		5457641	2					
ANR	5457764	ParameterList			5457641	3					
ANR	5457765	CFGEntryNode	ENTRY		5457641		True				
ANR	5457766	CFGExitNode	EXIT		5457641		True				
ANR	5457767	Symbol	subscriptions		5457641						
ANR	5457768	Symbol	local_queue . size		5457641						
ANR	5457769	Symbol	string		5457641						
ANR	5457770	Symbol	ACCEPT_MODE_NONE		5457641						
ANR	5457771	Symbol	lMsg		5457641						
ANR	5457772	Symbol	false		5457641						
ANR	5457773	Symbol	lMsg . getData		5457641						
ANR	5457774	Symbol	SubscriptionSettings		5457641						
ANR	5457775	Symbol	FlowControl :: unlimited		5457641						
ANR	5457776	Symbol	size		5457641						
ANR	5457777	Symbol	local_queue		5457641						
ANR	5457778	Symbol	ACQUIRE_MODE_NOT_ACQUIRED		5457641						
ANR	5457779	Symbol	true		5457641						
ANR	5457780	Symbol	lMsg . getDestination		5457641						
ANR	5457781	Symbol	newMessage		5457641						
ANR	5457782	ClassDef	ClientPub	246:0:6676:7423							
ANR	5457783	DeclStmt									
ANR	5457784	Decl							bool	"bool ( int p , int c )"	compareMsgId
ANR	5457785	DeclStmt									
ANR	5457786	Decl							bool	"bool ( int p , int c , int pe , int ce )"	compareFId
ANR	5457787	DeclStmt									
ANR	5457788	Decl							int	int ( string msgTxt )	getMsgId
ANR	5457789	DeclStmt									
ANR	5457790	Decl							int	"int ( string msgTxt , string id )"	getMsgId
ANR	5457791	DeclStmt									
ANR	5457792	Decl							bool	"bool ( string msg1 , string msg2 )"	validLogMsg
ANR	5457793	DeclStmt									
ANR	5457794	Decl							bool	bool	mustFree
ANR	5457795	DeclStmt									
ANR	5457796	Decl							void	"void ( string logMsg , char * persistFile )"	publish_messages
ANR	5457797	DeclStmt									
ANR	5457798	Decl							void	void ( char * loadFile )	initLoadMsg
ANR	5457799	DeclStmt									
ANR	5457800	Decl							void	"void ( char * persistFile , int eventTrack , int erotate , bool excludeFlag )"	readLog
ANR	5457801	DeclStmt									
ANR	5457802	Decl							bool	bool	initFlag
ANR	5457803	DeclStmt									
ANR	5457804	Decl							bool	bool	skipFlag
ANR	5457805	DeclStmt									
ANR	5457806	Decl							int	int	curMsgId
ANR	5457807	DeclStmt									
ANR	5457808	Decl							int	int	prevMsgId
ANR	5457809	DeclStmt									
ANR	5457810	Decl							int	int	curFId
ANR	5457811	DeclStmt									
ANR	5457812	Decl							int	int	prevFId
ANR	5457813	DeclStmt									
ANR	5457814	Decl							string	string	tempMsg
ANR	5457815	DeclStmt									
ANR	5457816	Decl							int	int	port
ANR	5457817	DeclStmt									
ANR	5457818	Decl							char	char *	host
ANR	5457819	Function	ClientPub :: ClientPub	274:0:7427:8028							
ANR	5457820	FunctionDef	"ClientPub :: ClientPub (char * persistFile , char * iFile , int erotate , char * hostArg , int portArg)"		5457819	0					
ANR	5457821	CompoundStatement		274:125:7552:8028	5457819	0					
ANR	5457822	ExpressionStatement	"cout << ""Init ...  "" << endl"	275:2:7556:7584	5457819	0	True				
ANR	5457823	ShiftExpression	"cout << ""Init ...  "" << endl"		5457819	0		<<			
ANR	5457824	Identifier	cout		5457819	0					
ANR	5457825	ShiftExpression	"""Init ...  "" << endl"		5457819	1		<<			
ANR	5457826	PrimaryExpression	"""Init ...  """		5457819	0					
ANR	5457827	Identifier	endl		5457819	1					
ANR	5457828	ExpressionStatement	initFlag = true	276:2:7588:7603	5457819	1	True				
ANR	5457829	AssignmentExpression	initFlag = true		5457819	0		=			
ANR	5457830	Identifier	initFlag		5457819	0					
ANR	5457831	Identifier	true		5457819	1					
ANR	5457832	ExpressionStatement	skipFlag = false	277:2:7607:7623	5457819	2	True				
ANR	5457833	AssignmentExpression	skipFlag = false		5457819	0		=			
ANR	5457834	Identifier	skipFlag		5457819	0					
ANR	5457835	Identifier	false		5457819	1					
ANR	5457836	ExpressionStatement	curMsgId = 0	278:2:7627:7639	5457819	3	True				
ANR	5457837	AssignmentExpression	curMsgId = 0		5457819	0		=			
ANR	5457838	Identifier	curMsgId		5457819	0					
ANR	5457839	PrimaryExpression	0		5457819	1					
ANR	5457840	ExpressionStatement	prevMsgId = 0	279:2:7643:7656	5457819	4	True				
ANR	5457841	AssignmentExpression	prevMsgId = 0		5457819	0		=			
ANR	5457842	Identifier	prevMsgId		5457819	0					
ANR	5457843	PrimaryExpression	0		5457819	1					
ANR	5457844	ExpressionStatement	curFId = 0	280:2:7660:7670	5457819	5	True				
ANR	5457845	AssignmentExpression	curFId = 0		5457819	0		=			
ANR	5457846	Identifier	curFId		5457819	0					
ANR	5457847	PrimaryExpression	0		5457819	1					
ANR	5457848	ExpressionStatement	prevFId = 0	281:2:7674:7685	5457819	6	True				
ANR	5457849	AssignmentExpression	prevFId = 0		5457819	0		=			
ANR	5457850	Identifier	prevFId		5457819	0					
ANR	5457851	PrimaryExpression	0		5457819	1					
ANR	5457852	ExpressionStatement	mustFree = true	282:2:7689:7704	5457819	7	True				
ANR	5457853	AssignmentExpression	mustFree = true		5457819	0		=			
ANR	5457854	Identifier	mustFree		5457819	0					
ANR	5457855	Identifier	true		5457819	1					
ANR	5457856	ExpressionStatement	this -> host = ( char * ) malloc ( 256 )	283:2:7708:7739	5457819	8	True				
ANR	5457857	AssignmentExpression	this -> host = ( char * ) malloc ( 256 )		5457819	0		=			
ANR	5457858	PtrMemberAccess	this -> host		5457819	0					
ANR	5457859	Identifier	this		5457819	0					
ANR	5457860	Identifier	host		5457819	1					
ANR	5457861	CastExpression	( char * ) malloc ( 256 )		5457819	1					
ANR	5457862	CastTarget	char *		5457819	0					
ANR	5457863	CallExpression	malloc ( 256 )		5457819	1					
ANR	5457864	Callee	malloc		5457819	0					
ANR	5457865	Identifier	malloc		5457819	0					
ANR	5457866	ArgumentList	256		5457819	1					
ANR	5457867	Argument	256		5457819	0					
ANR	5457868	PrimaryExpression	256		5457819	0					
ANR	5457869	IfStatement	if ( portArg < 0 )		5457819	9					
ANR	5457870	Condition	portArg < 0	284:6:7747:7757	5457819	0	True				
ANR	5457871	RelationalExpression	portArg < 0		5457819	0		<			
ANR	5457872	Identifier	portArg		5457819	0					
ANR	5457873	PrimaryExpression	0		5457819	1					
ANR	5457874	ExpressionStatement	this -> port = getPortNumber ( this -> host )	285:3:7763:7801	5457819	1	True				
ANR	5457875	AssignmentExpression	this -> port = getPortNumber ( this -> host )		5457819	0		=			
ANR	5457876	PtrMemberAccess	this -> port		5457819	0					
ANR	5457877	Identifier	this		5457819	0					
ANR	5457878	Identifier	port		5457819	1					
ANR	5457879	CallExpression	getPortNumber ( this -> host )		5457819	1					
ANR	5457880	Callee	getPortNumber		5457819	0					
ANR	5457881	Identifier	getPortNumber		5457819	0					
ANR	5457882	ArgumentList	this -> host		5457819	1					
ANR	5457883	Argument	this -> host		5457819	0					
ANR	5457884	PtrMemberAccess	this -> host		5457819	0					
ANR	5457885	Identifier	this		5457819	0					
ANR	5457886	Identifier	host		5457819	1					
ANR	5457887	ElseStatement	else		5457819	0					
ANR	5457888	ExpressionStatement	this -> port = portArg	287:3:7814:7834	5457819	0	True				
ANR	5457889	AssignmentExpression	this -> port = portArg		5457819	0		=			
ANR	5457890	PtrMemberAccess	this -> port		5457819	0					
ANR	5457891	Identifier	this		5457819	0					
ANR	5457892	Identifier	port		5457819	1					
ANR	5457893	Identifier	portArg		5457819	1					
ANR	5457894	IfStatement	if ( hostArg != NULL )		5457819	10					
ANR	5457895	Condition	hostArg != NULL	289:6:7846:7860	5457819	0	True				
ANR	5457896	EqualityExpression	hostArg != NULL		5457819	0		!=			
ANR	5457897	Identifier	hostArg		5457819	0					
ANR	5457898	Identifier	NULL		5457819	1					
ANR	5457899	CompoundStatement		16:23:310:310	5457819	1					
ANR	5457900	IfStatement	if ( this -> host != NULL )		5457819	0					
ANR	5457901	Condition	this -> host != NULL	290:7:7872:7889	5457819	0	True				
ANR	5457902	EqualityExpression	this -> host != NULL		5457819	0		!=			
ANR	5457903	PtrMemberAccess	this -> host		5457819	0					
ANR	5457904	Identifier	this		5457819	0					
ANR	5457905	Identifier	host		5457819	1					
ANR	5457906	Identifier	NULL		5457819	1					
ANR	5457907	ExpressionStatement	free ( this -> host )	291:4:7896:7912	5457819	1	True				
ANR	5457908	CallExpression	free ( this -> host )		5457819	0					
ANR	5457909	Callee	free		5457819	0					
ANR	5457910	Identifier	free		5457819	0					
ANR	5457911	ArgumentList	this -> host		5457819	1					
ANR	5457912	Argument	this -> host		5457819	0					
ANR	5457913	PtrMemberAccess	this -> host		5457819	0					
ANR	5457914	Identifier	this		5457819	0					
ANR	5457915	Identifier	host		5457819	1					
ANR	5457916	ExpressionStatement	this -> host = hostArg	292:3:7918:7938	5457819	1	True				
ANR	5457917	AssignmentExpression	this -> host = hostArg		5457819	0		=			
ANR	5457918	PtrMemberAccess	this -> host		5457819	0					
ANR	5457919	Identifier	this		5457819	0					
ANR	5457920	Identifier	host		5457819	1					
ANR	5457921	Identifier	hostArg		5457819	1					
ANR	5457922	ExpressionStatement	mustFree = false	293:3:7943:7959	5457819	2	True				
ANR	5457923	AssignmentExpression	mustFree = false		5457819	0		=			
ANR	5457924	Identifier	mustFree		5457819	0					
ANR	5457925	Identifier	false		5457819	1					
ANR	5457926	ExpressionStatement	"tempMsg = """""	296:2:7971:7983	5457819	11	True				
ANR	5457927	AssignmentExpression	"tempMsg = """""		5457819	0		=			
ANR	5457928	Identifier	tempMsg		5457819	0					
ANR	5457929	PrimaryExpression	""""""		5457819	1					
ANR	5457930	Identifier	ClientPub :: ClientPub		5457819	1					
ANR	5457931	ParameterList	"char * persistFile , char * iFile , int erotate , char * hostArg , int portArg"		5457819	2					
ANR	5457932	Parameter	char * persistFile	274:21:7448:7464	5457819	0	True				
ANR	5457933	ParameterType	char *		5457819	0					
ANR	5457934	Identifier	persistFile		5457819	1					
ANR	5457935	Parameter	char * iFile	274:39:7466:7476	5457819	1	True				
ANR	5457936	ParameterType	char *		5457819	0					
ANR	5457937	Identifier	iFile		5457819	1					
ANR	5457938	Parameter	int erotate	274:51:7478:7488	5457819	2	True				
ANR	5457939	ParameterType	int		5457819	0					
ANR	5457940	Identifier	erotate		5457819	1					
ANR	5457941	Parameter	char * hostArg	274:64:7491:7503	5457819	3	True				
ANR	5457942	ParameterType	char *		5457819	0					
ANR	5457943	Identifier	hostArg		5457819	1					
ANR	5457944	Parameter	int portArg	274:79:7506:7516	5457819	4	True				
ANR	5457945	ParameterType	int		5457819	0					
ANR	5457946	Identifier	portArg		5457819	1					
ANR	5457947	CFGEntryNode	ENTRY		5457819		True				
ANR	5457948	CFGExitNode	EXIT		5457819		True				
ANR	5457949	Symbol	malloc		5457819						
ANR	5457950	Symbol	NULL		5457819						
ANR	5457951	Symbol	getPortNumber		5457819						
ANR	5457952	Symbol	initFlag		5457819						
ANR	5457953	Symbol	prevFId		5457819						
ANR	5457954	Symbol	persistFile		5457819						
ANR	5457955	Symbol	false		5457819						
ANR	5457956	Symbol	this		5457819						
ANR	5457957	Symbol	this -> port		5457819						
ANR	5457958	Symbol	iFile		5457819						
ANR	5457959	Symbol	tempMsg		5457819						
ANR	5457960	Symbol	mustFree		5457819						
ANR	5457961	Symbol	erotate		5457819						
ANR	5457962	Symbol	* this		5457819						
ANR	5457963	Symbol	skipFlag		5457819						
ANR	5457964	Symbol	hostArg		5457819						
ANR	5457965	Symbol	prevMsgId		5457819						
ANR	5457966	Symbol	curMsgId		5457819						
ANR	5457967	Symbol	curFId		5457819						
ANR	5457968	Symbol	portArg		5457819						
ANR	5457969	Symbol	this -> host		5457819						
ANR	5457970	Symbol	true		5457819						
ANR	5457971	Function	ClientPub :: ~ClientPub	300:0:8031:8113							
ANR	5457972	FunctionDef	ClientPub :: ~ClientPub ()		5457971	0					
ANR	5457973	CompoundStatement		300:23:8054:8113	5457971	0					
ANR	5457974	IfStatement	if ( this -> host != NULL && mustFree )		5457971	0					
ANR	5457975	Condition	this -> host != NULL && mustFree	301:5:8061:8090	5457971	0	True				
ANR	5457976	AndExpression	this -> host != NULL && mustFree		5457971	0		&&			
ANR	5457977	EqualityExpression	this -> host != NULL		5457971	0		!=			
ANR	5457978	PtrMemberAccess	this -> host		5457971	0					
ANR	5457979	Identifier	this		5457971	0					
ANR	5457980	Identifier	host		5457971	1					
ANR	5457981	Identifier	NULL		5457971	1					
ANR	5457982	Identifier	mustFree		5457971	1					
ANR	5457983	ExpressionStatement	free ( this -> host )	302:2:8095:8111	5457971	1	True				
ANR	5457984	CallExpression	free ( this -> host )		5457971	0					
ANR	5457985	Callee	free		5457971	0					
ANR	5457986	Identifier	free		5457971	0					
ANR	5457987	ArgumentList	this -> host		5457971	1					
ANR	5457988	Argument	this -> host		5457971	0					
ANR	5457989	PtrMemberAccess	this -> host		5457971	0					
ANR	5457990	Identifier	this		5457971	0					
ANR	5457991	Identifier	host		5457971	1					
ANR	5457992	Identifier	ClientPub :: ~ClientPub		5457971	1					
ANR	5457993	ParameterList			5457971	2					
ANR	5457994	CFGEntryNode	ENTRY		5457971		True				
ANR	5457995	CFGExitNode	EXIT		5457971		True				
ANR	5457996	Symbol	* this		5457971						
ANR	5457997	Symbol	NULL		5457971						
ANR	5457998	Symbol	this -> host		5457971						
ANR	5457999	Symbol	this		5457971						
ANR	5458000	Symbol	mustFree		5457971						
ANR	5458001	Function	ClientPub :: compareMsgId	313:0:8334:8551							
ANR	5458002	FunctionDef	"ClientPub :: compareMsgId (int p , int c)"		5458001	0					
ANR	5458003	CompoundStatement		313:42:8376:8551	5458001	0					
ANR	5458004	IdentifierDeclStatement	bool flag = true ;	314:2:8380:8397	5458001	0	True				
ANR	5458005	IdentifierDecl	flag = true		5458001	0					
ANR	5458006	IdentifierDeclType	bool		5458001	0					
ANR	5458007	Identifier	flag		5458001	1					
ANR	5458008	AssignmentExpression	flag = true		5458001	2		=			
ANR	5458009	Identifier	true		5458001	0					
ANR	5458010	Identifier	true		5458001	1					
ANR	5458011	IfStatement	if ( p != c )		5458001	1					
ANR	5458012	Condition	p != c	315:5:8404:8407	5458001	0	True				
ANR	5458013	EqualityExpression	p != c		5458001	0		!=			
ANR	5458014	Identifier	p		5458001	0					
ANR	5458015	Identifier	c		5458001	1					
ANR	5458016	ExpressionStatement	flag = true	316:4:8414:8425	5458001	1	True				
ANR	5458017	AssignmentExpression	flag = true		5458001	0		=			
ANR	5458018	Identifier	flag		5458001	0					
ANR	5458019	Identifier	true		5458001	1					
ANR	5458020	ElseStatement	else		5458001	0					
ANR	5458021	ExpressionStatement	flag = false	318:4:8438:8450	5458001	0	True				
ANR	5458022	AssignmentExpression	flag = false		5458001	0		=			
ANR	5458023	Identifier	flag		5458001	0					
ANR	5458024	Identifier	false		5458001	1					
ANR	5458025	ReturnStatement	return flag ;	320:2:8538:8549	5458001	2	True				
ANR	5458026	Identifier	flag		5458001	0					
ANR	5458027	ReturnType	bool		5458001	1					
ANR	5458028	Identifier	ClientPub :: compareMsgId		5458001	2					
ANR	5458029	ParameterList	"int p , int c"		5458001	3					
ANR	5458030	Parameter	int p	313:29:8363:8367	5458001	0	True				
ANR	5458031	ParameterType	int		5458001	0					
ANR	5458032	Identifier	p		5458001	1					
ANR	5458033	Parameter	int c	313:36:8370:8374	5458001	1	True				
ANR	5458034	ParameterType	int		5458001	0					
ANR	5458035	Identifier	c		5458001	1					
ANR	5458036	CFGEntryNode	ENTRY		5458001		True				
ANR	5458037	CFGExitNode	EXIT		5458001		True				
ANR	5458038	Symbol	p		5458001						
ANR	5458039	Symbol	c		5458001						
ANR	5458040	Symbol	flag		5458001						
ANR	5458041	Symbol	true		5458001						
ANR	5458042	Symbol	false		5458001						
ANR	5458043	Function	ClientPub :: compareFId	328:0:8743:9018							
ANR	5458044	FunctionDef	"ClientPub :: compareFId (int p , int c , int pe , int ce)"		5458043	0					
ANR	5458045	CompoundStatement		328:54:8797:9018	5458043	0					
ANR	5458046	IdentifierDeclStatement	bool flag = true ;	329:2:8801:8818	5458043	0	True				
ANR	5458047	IdentifierDecl	flag = true		5458043	0					
ANR	5458048	IdentifierDeclType	bool		5458043	0					
ANR	5458049	Identifier	flag		5458043	1					
ANR	5458050	AssignmentExpression	flag = true		5458043	2		=			
ANR	5458051	Identifier	true		5458043	0					
ANR	5458052	Identifier	true		5458043	1					
ANR	5458053	IfStatement	if ( p < c )		5458043	1					
ANR	5458054	Condition	p < c	330:5:8825:8827	5458043	0	True				
ANR	5458055	RelationalExpression	p < c		5458043	0		<			
ANR	5458056	Identifier	p		5458043	0					
ANR	5458057	Identifier	c		5458043	1					
ANR	5458058	ExpressionStatement	flag = true	331:4:8834:8845	5458043	1	True				
ANR	5458059	AssignmentExpression	flag = true		5458043	0		=			
ANR	5458060	Identifier	flag		5458043	0					
ANR	5458061	Identifier	true		5458043	1					
ANR	5458062	ElseStatement	else		5458043	0					
ANR	5458063	IfStatement	if ( ( p == c ) && ( pe < ce ) )		5458043	0					
ANR	5458064	Condition	( p == c ) && ( pe < ce )	332:10:8857:8871	5458043	0	True				
ANR	5458065	AndExpression	( p == c ) && ( pe < ce )		5458043	0		&&			
ANR	5458066	EqualityExpression	p == c		5458043	0		==			
ANR	5458067	Identifier	p		5458043	0					
ANR	5458068	Identifier	c		5458043	1					
ANR	5458069	RelationalExpression	pe < ce		5458043	1		<			
ANR	5458070	Identifier	pe		5458043	0					
ANR	5458071	Identifier	ce		5458043	1					
ANR	5458072	ExpressionStatement	flag = true	333:6:8880:8890	5458043	1	True				
ANR	5458073	AssignmentExpression	flag = true		5458043	0		=			
ANR	5458074	Identifier	flag		5458043	0					
ANR	5458075	Identifier	true		5458043	1					
ANR	5458076	ElseStatement	else		5458043	0					
ANR	5458077	ExpressionStatement	flag = false	335:4:8907:8919	5458043	0	True				
ANR	5458078	AssignmentExpression	flag = false		5458043	0		=			
ANR	5458079	Identifier	flag		5458043	0					
ANR	5458080	Identifier	false		5458043	1					
ANR	5458081	ReturnStatement	return flag ;	337:2:9005:9016	5458043	2	True				
ANR	5458082	Identifier	flag		5458043	0					
ANR	5458083	ReturnType	bool		5458043	1					
ANR	5458084	Identifier	ClientPub :: compareFId		5458043	2					
ANR	5458085	ParameterList	"int p , int c , int pe , int ce"		5458043	3					
ANR	5458086	Parameter	int p	328:27:8770:8774	5458043	0	True				
ANR	5458087	ParameterType	int		5458043	0					
ANR	5458088	Identifier	p		5458043	1					
ANR	5458089	Parameter	int c	328:34:8777:8781	5458043	1	True				
ANR	5458090	ParameterType	int		5458043	0					
ANR	5458091	Identifier	c		5458043	1					
ANR	5458092	Parameter	int pe	328:40:8783:8788	5458043	2	True				
ANR	5458093	ParameterType	int		5458043	0					
ANR	5458094	Identifier	pe		5458043	1					
ANR	5458095	Parameter	int ce	328:47:8790:8795	5458043	3	True				
ANR	5458096	ParameterType	int		5458043	0					
ANR	5458097	Identifier	ce		5458043	1					
ANR	5458098	CFGEntryNode	ENTRY		5458043		True				
ANR	5458099	CFGExitNode	EXIT		5458043		True				
ANR	5458100	Symbol	p		5458043						
ANR	5458101	Symbol	ce		5458043						
ANR	5458102	Symbol	c		5458043						
ANR	5458103	Symbol	flag		5458043						
ANR	5458104	Symbol	pe		5458043						
ANR	5458105	Symbol	true		5458043						
ANR	5458106	Symbol	false		5458043						
ANR	5458107	Function	ClientPub :: getMsgId	345:0:9135:9500							
ANR	5458108	FunctionDef	ClientPub :: getMsgId (string msgTxt)		5458107	0					
ANR	5458109	CompoundStatement		345:39:9174:9500	5458107	0					
ANR	5458110	IdentifierDeclStatement	"string estr = ""MsgId="" ;"	346:2:9178:9200	5458107	0	True				
ANR	5458111	IdentifierDecl	"estr = ""MsgId="""		5458107	0					
ANR	5458112	IdentifierDeclType	string		5458107	0					
ANR	5458113	Identifier	estr		5458107	1					
ANR	5458114	AssignmentExpression	"estr = ""MsgId="""		5458107	2		=			
ANR	5458115	Identifier	estr		5458107	0					
ANR	5458116	PrimaryExpression	"""MsgId="""		5458107	1					
ANR	5458117	IdentifierDeclStatement	"int startpos = msgTxt . find ( estr , 0 ) ;"	347:2:9204:9238	5458107	1	True				
ANR	5458118	IdentifierDecl	"startpos = msgTxt . find ( estr , 0 )"		5458107	0					
ANR	5458119	IdentifierDeclType	int		5458107	0					
ANR	5458120	Identifier	startpos		5458107	1					
ANR	5458121	AssignmentExpression	"startpos = msgTxt . find ( estr , 0 )"		5458107	2		=			
ANR	5458122	Identifier	startpos		5458107	0					
ANR	5458123	CallExpression	"msgTxt . find ( estr , 0 )"		5458107	1					
ANR	5458124	Callee	msgTxt . find		5458107	0					
ANR	5458125	MemberAccess	msgTxt . find		5458107	0					
ANR	5458126	Identifier	msgTxt		5458107	0					
ANR	5458127	Identifier	find		5458107	1					
ANR	5458128	ArgumentList	estr		5458107	1					
ANR	5458129	Argument	estr		5458107	0					
ANR	5458130	Identifier	estr		5458107	0					
ANR	5458131	Argument	0		5458107	1					
ANR	5458132	PrimaryExpression	0		5458107	0					
ANR	5458133	IfStatement	if ( startpos >= 0 )		5458107	2					
ANR	5458134	Condition	startpos >= 0	348:5:9245:9257	5458107	0	True				
ANR	5458135	RelationalExpression	startpos >= 0		5458107	0		>=			
ANR	5458136	Identifier	startpos		5458107	0					
ANR	5458137	PrimaryExpression	0		5458107	1					
ANR	5458138	CompoundStatement		8:4:239:272	5458107	1					
ANR	5458139	IdentifierDeclStatement	"int stoppos = msgTxt . find ( "" "" , startpos ) ;"	350:4:9312:9351	5458107	0	True				
ANR	5458140	IdentifierDecl	"stoppos = msgTxt . find ( "" "" , startpos )"		5458107	0					
ANR	5458141	IdentifierDeclType	int		5458107	0					
ANR	5458142	Identifier	stoppos		5458107	1					
ANR	5458143	AssignmentExpression	"stoppos = msgTxt . find ( "" "" , startpos )"		5458107	2		=			
ANR	5458144	Identifier	stoppos		5458107	0					
ANR	5458145	CallExpression	"msgTxt . find ( "" "" , startpos )"		5458107	1					
ANR	5458146	Callee	msgTxt . find		5458107	0					
ANR	5458147	MemberAccess	msgTxt . find		5458107	0					
ANR	5458148	Identifier	msgTxt		5458107	0					
ANR	5458149	Identifier	find		5458107	1					
ANR	5458150	ArgumentList	""" """		5458107	1					
ANR	5458151	Argument	""" """		5458107	0					
ANR	5458152	PrimaryExpression	""" """		5458107	0					
ANR	5458153	Argument	startpos		5458107	1					
ANR	5458154	Identifier	startpos		5458107	0					
ANR	5458155	IdentifierDeclStatement	"string idValStr = msgTxt . substr ( startpos + 6 , stoppos ) ;"	351:4:9357:9408	5458107	1	True				
ANR	5458156	IdentifierDecl	"idValStr = msgTxt . substr ( startpos + 6 , stoppos )"		5458107	0					
ANR	5458157	IdentifierDeclType	string		5458107	0					
ANR	5458158	Identifier	idValStr		5458107	1					
ANR	5458159	AssignmentExpression	"idValStr = msgTxt . substr ( startpos + 6 , stoppos )"		5458107	2		=			
ANR	5458160	Identifier	idValStr		5458107	0					
ANR	5458161	CallExpression	"msgTxt . substr ( startpos + 6 , stoppos )"		5458107	1					
ANR	5458162	Callee	msgTxt . substr		5458107	0					
ANR	5458163	MemberAccess	msgTxt . substr		5458107	0					
ANR	5458164	Identifier	msgTxt		5458107	0					
ANR	5458165	Identifier	substr		5458107	1					
ANR	5458166	ArgumentList	startpos + 6		5458107	1					
ANR	5458167	Argument	startpos + 6		5458107	0					
ANR	5458168	AdditiveExpression	startpos + 6		5458107	0		+			
ANR	5458169	Identifier	startpos		5458107	0					
ANR	5458170	PrimaryExpression	6		5458107	1					
ANR	5458171	Argument	stoppos		5458107	1					
ANR	5458172	Identifier	stoppos		5458107	0					
ANR	5458173	IdentifierDeclStatement	int msgId = atoi ( idValStr . c_str ( ) ) ;	352:4:9414:9447	5458107	2	True				
ANR	5458174	IdentifierDecl	msgId = atoi ( idValStr . c_str ( ) )		5458107	0					
ANR	5458175	IdentifierDeclType	int		5458107	0					
ANR	5458176	Identifier	msgId		5458107	1					
ANR	5458177	AssignmentExpression	msgId = atoi ( idValStr . c_str ( ) )		5458107	2		=			
ANR	5458178	Identifier	msgId		5458107	0					
ANR	5458179	CallExpression	atoi ( idValStr . c_str ( ) )		5458107	1					
ANR	5458180	Callee	atoi		5458107	0					
ANR	5458181	Identifier	atoi		5458107	0					
ANR	5458182	ArgumentList	idValStr . c_str ( )		5458107	1					
ANR	5458183	Argument	idValStr . c_str ( )		5458107	0					
ANR	5458184	CallExpression	idValStr . c_str ( )		5458107	0					
ANR	5458185	Callee	idValStr . c_str		5458107	0					
ANR	5458186	MemberAccess	idValStr . c_str		5458107	0					
ANR	5458187	Identifier	idValStr		5458107	0					
ANR	5458188	Identifier	c_str		5458107	1					
ANR	5458189	ArgumentList			5458107	1					
ANR	5458190	ReturnStatement	return ( msgId ) ;	353:4:9453:9466	5458107	3	True				
ANR	5458191	Identifier	msgId		5458107	0					
ANR	5458192	ElseStatement	else		5458107	0					
ANR	5458193	CompoundStatement		11:6:303:303	5458107	0					
ANR	5458194	ReturnStatement	return ( - 1 ) ;	356:4:9484:9494	5458107	0	True				
ANR	5458195	UnaryOperationExpression	- 1		5458107	0					
ANR	5458196	UnaryOperator	-		5458107	0					
ANR	5458197	PrimaryExpression	1		5458107	1					
ANR	5458198	ReturnType	int		5458107	1					
ANR	5458199	Identifier	ClientPub :: getMsgId		5458107	2					
ANR	5458200	ParameterList	string msgTxt		5458107	3					
ANR	5458201	Parameter	string msgTxt	345:25:9160:9172	5458107	0	True				
ANR	5458202	ParameterType	string		5458107	0					
ANR	5458203	Identifier	msgTxt		5458107	1					
ANR	5458204	CFGEntryNode	ENTRY		5458107		True				
ANR	5458205	CFGExitNode	EXIT		5458107		True				
ANR	5458206	Symbol	atoi		5458107						
ANR	5458207	Symbol	estr		5458107						
ANR	5458208	Symbol	msgTxt . find		5458107						
ANR	5458209	Symbol	msgTxt . substr		5458107						
ANR	5458210	Symbol	idValStr . c_str		5458107						
ANR	5458211	Symbol	msgId		5458107						
ANR	5458212	Symbol	msgTxt		5458107						
ANR	5458213	Symbol	stoppos		5458107						
ANR	5458214	Symbol	startpos		5458107						
ANR	5458215	Symbol	idValStr		5458107						
ANR	5458216	Function	ClientPub :: getMsgId	365:0:9616:9989							
ANR	5458217	FunctionDef	"ClientPub :: getMsgId (string msgTxt , string id)"		5458216	0					
ANR	5458218	CompoundStatement		365:49:9665:9989	5458216	0					
ANR	5458219	IdentifierDeclStatement	"string estr = id + ""="" ;"	366:2:9669:9689	5458216	0	True				
ANR	5458220	IdentifierDecl	"estr = id + ""="""		5458216	0					
ANR	5458221	IdentifierDeclType	string		5458216	0					
ANR	5458222	Identifier	estr		5458216	1					
ANR	5458223	AssignmentExpression	"estr = id + ""="""		5458216	2		=			
ANR	5458224	Identifier	estr		5458216	0					
ANR	5458225	AdditiveExpression	"id + ""="""		5458216	1		+			
ANR	5458226	Identifier	id		5458216	0					
ANR	5458227	PrimaryExpression	"""="""		5458216	1					
ANR	5458228	IdentifierDeclStatement	"int startpos = msgTxt . find ( estr , 0 ) ;"	367:2:9693:9727	5458216	1	True				
ANR	5458229	IdentifierDecl	"startpos = msgTxt . find ( estr , 0 )"		5458216	0					
ANR	5458230	IdentifierDeclType	int		5458216	0					
ANR	5458231	Identifier	startpos		5458216	1					
ANR	5458232	AssignmentExpression	"startpos = msgTxt . find ( estr , 0 )"		5458216	2		=			
ANR	5458233	Identifier	startpos		5458216	0					
ANR	5458234	CallExpression	"msgTxt . find ( estr , 0 )"		5458216	1					
ANR	5458235	Callee	msgTxt . find		5458216	0					
ANR	5458236	MemberAccess	msgTxt . find		5458216	0					
ANR	5458237	Identifier	msgTxt		5458216	0					
ANR	5458238	Identifier	find		5458216	1					
ANR	5458239	ArgumentList	estr		5458216	1					
ANR	5458240	Argument	estr		5458216	0					
ANR	5458241	Identifier	estr		5458216	0					
ANR	5458242	Argument	0		5458216	1					
ANR	5458243	PrimaryExpression	0		5458216	0					
ANR	5458244	IfStatement	if ( startpos >= 0 )		5458216	2					
ANR	5458245	Condition	startpos >= 0	368:5:9734:9746	5458216	0	True				
ANR	5458246	RelationalExpression	startpos >= 0		5458216	0		>=			
ANR	5458247	Identifier	startpos		5458216	0					
ANR	5458248	PrimaryExpression	0		5458216	1					
ANR	5458249	CompoundStatement		8:4:237:270	5458216	1					
ANR	5458250	IdentifierDeclStatement	"int stoppos = msgTxt . find ( "" "" , startpos ) ;"	370:4:9801:9840	5458216	0	True				
ANR	5458251	IdentifierDecl	"stoppos = msgTxt . find ( "" "" , startpos )"		5458216	0					
ANR	5458252	IdentifierDeclType	int		5458216	0					
ANR	5458253	Identifier	stoppos		5458216	1					
ANR	5458254	AssignmentExpression	"stoppos = msgTxt . find ( "" "" , startpos )"		5458216	2		=			
ANR	5458255	Identifier	stoppos		5458216	0					
ANR	5458256	CallExpression	"msgTxt . find ( "" "" , startpos )"		5458216	1					
ANR	5458257	Callee	msgTxt . find		5458216	0					
ANR	5458258	MemberAccess	msgTxt . find		5458216	0					
ANR	5458259	Identifier	msgTxt		5458216	0					
ANR	5458260	Identifier	find		5458216	1					
ANR	5458261	ArgumentList	""" """		5458216	1					
ANR	5458262	Argument	""" """		5458216	0					
ANR	5458263	PrimaryExpression	""" """		5458216	0					
ANR	5458264	Argument	startpos		5458216	1					
ANR	5458265	Identifier	startpos		5458216	0					
ANR	5458266	IdentifierDeclStatement	"string idValStr = msgTxt . substr ( startpos + 4 , stoppos ) ;"	371:4:9846:9897	5458216	1	True				
ANR	5458267	IdentifierDecl	"idValStr = msgTxt . substr ( startpos + 4 , stoppos )"		5458216	0					
ANR	5458268	IdentifierDeclType	string		5458216	0					
ANR	5458269	Identifier	idValStr		5458216	1					
ANR	5458270	AssignmentExpression	"idValStr = msgTxt . substr ( startpos + 4 , stoppos )"		5458216	2		=			
ANR	5458271	Identifier	idValStr		5458216	0					
ANR	5458272	CallExpression	"msgTxt . substr ( startpos + 4 , stoppos )"		5458216	1					
ANR	5458273	Callee	msgTxt . substr		5458216	0					
ANR	5458274	MemberAccess	msgTxt . substr		5458216	0					
ANR	5458275	Identifier	msgTxt		5458216	0					
ANR	5458276	Identifier	substr		5458216	1					
ANR	5458277	ArgumentList	startpos + 4		5458216	1					
ANR	5458278	Argument	startpos + 4		5458216	0					
ANR	5458279	AdditiveExpression	startpos + 4		5458216	0		+			
ANR	5458280	Identifier	startpos		5458216	0					
ANR	5458281	PrimaryExpression	4		5458216	1					
ANR	5458282	Argument	stoppos		5458216	1					
ANR	5458283	Identifier	stoppos		5458216	0					
ANR	5458284	IdentifierDeclStatement	int msgId = atoi ( idValStr . c_str ( ) ) ;	372:4:9903:9936	5458216	2	True				
ANR	5458285	IdentifierDecl	msgId = atoi ( idValStr . c_str ( ) )		5458216	0					
ANR	5458286	IdentifierDeclType	int		5458216	0					
ANR	5458287	Identifier	msgId		5458216	1					
ANR	5458288	AssignmentExpression	msgId = atoi ( idValStr . c_str ( ) )		5458216	2		=			
ANR	5458289	Identifier	msgId		5458216	0					
ANR	5458290	CallExpression	atoi ( idValStr . c_str ( ) )		5458216	1					
ANR	5458291	Callee	atoi		5458216	0					
ANR	5458292	Identifier	atoi		5458216	0					
ANR	5458293	ArgumentList	idValStr . c_str ( )		5458216	1					
ANR	5458294	Argument	idValStr . c_str ( )		5458216	0					
ANR	5458295	CallExpression	idValStr . c_str ( )		5458216	0					
ANR	5458296	Callee	idValStr . c_str		5458216	0					
ANR	5458297	MemberAccess	idValStr . c_str		5458216	0					
ANR	5458298	Identifier	idValStr		5458216	0					
ANR	5458299	Identifier	c_str		5458216	1					
ANR	5458300	ArgumentList			5458216	1					
ANR	5458301	ReturnStatement	return ( msgId ) ;	373:4:9942:9955	5458216	3	True				
ANR	5458302	Identifier	msgId		5458216	0					
ANR	5458303	ElseStatement	else		5458216	0					
ANR	5458304	CompoundStatement		11:6:301:301	5458216	0					
ANR	5458305	ReturnStatement	return ( - 1 ) ;	376:4:9973:9983	5458216	0	True				
ANR	5458306	UnaryOperationExpression	- 1		5458216	0					
ANR	5458307	UnaryOperator	-		5458216	0					
ANR	5458308	PrimaryExpression	1		5458216	1					
ANR	5458309	ReturnType	int		5458216	1					
ANR	5458310	Identifier	ClientPub :: getMsgId		5458216	2					
ANR	5458311	ParameterList	"string msgTxt , string id"		5458216	3					
ANR	5458312	Parameter	string msgTxt	365:25:9641:9653	5458216	0	True				
ANR	5458313	ParameterType	string		5458216	0					
ANR	5458314	Identifier	msgTxt		5458216	1					
ANR	5458315	Parameter	string id	365:39:9655:9663	5458216	1	True				
ANR	5458316	ParameterType	string		5458216	0					
ANR	5458317	Identifier	id		5458216	1					
ANR	5458318	CFGEntryNode	ENTRY		5458216		True				
ANR	5458319	CFGExitNode	EXIT		5458216		True				
ANR	5458320	Symbol	atoi		5458216						
ANR	5458321	Symbol	estr		5458216						
ANR	5458322	Symbol	msgTxt . find		5458216						
ANR	5458323	Symbol	msgTxt . substr		5458216						
ANR	5458324	Symbol	idValStr . c_str		5458216						
ANR	5458325	Symbol	msgId		5458216						
ANR	5458326	Symbol	msgTxt		5458216						
ANR	5458327	Symbol	id		5458216						
ANR	5458328	Symbol	stoppos		5458216						
ANR	5458329	Symbol	startpos		5458216						
ANR	5458330	Symbol	idValStr		5458216						
ANR	5458331	Function	ClientPub :: validLogMsg	385:0:10169:11141							
ANR	5458332	FunctionDef	"ClientPub :: validLogMsg (string msg1 , string msg2)"		5458331	0					
ANR	5458333	CompoundStatement		385:53:10222:11141	5458331	0					
ANR	5458334	ExpressionStatement	"cout << ""\\n validLogMsg()....."" << endl"	388:2:10379:10418	5458331	0	True				
ANR	5458335	ShiftExpression	"cout << ""\\n validLogMsg()....."" << endl"		5458331	0		<<			
ANR	5458336	Identifier	cout		5458331	0					
ANR	5458337	ShiftExpression	"""\\n validLogMsg()....."" << endl"		5458331	1		<<			
ANR	5458338	PrimaryExpression	"""\\n validLogMsg()....."""		5458331	0					
ANR	5458339	Identifier	endl		5458331	1					
ANR	5458340	ExpressionStatement	"cout << ""\\t Message1 =>"" << msg1 << endl"	389:2:10422:10461	5458331	1	True				
ANR	5458341	ShiftExpression	"cout << ""\\t Message1 =>"" << msg1 << endl"		5458331	0		<<			
ANR	5458342	Identifier	cout		5458331	0					
ANR	5458343	ShiftExpression	"""\\t Message1 =>"" << msg1 << endl"		5458331	1		<<			
ANR	5458344	PrimaryExpression	"""\\t Message1 =>"""		5458331	0					
ANR	5458345	ShiftExpression	msg1 << endl		5458331	1		<<			
ANR	5458346	Identifier	msg1		5458331	0					
ANR	5458347	Identifier	endl		5458331	1					
ANR	5458348	ExpressionStatement	"cout << ""\\t Message2 =>"" << msg2 << endl"	390:2:10465:10504	5458331	2	True				
ANR	5458349	ShiftExpression	"cout << ""\\t Message2 =>"" << msg2 << endl"		5458331	0		<<			
ANR	5458350	Identifier	cout		5458331	0					
ANR	5458351	ShiftExpression	"""\\t Message2 =>"" << msg2 << endl"		5458331	1		<<			
ANR	5458352	PrimaryExpression	"""\\t Message2 =>"""		5458331	0					
ANR	5458353	ShiftExpression	msg2 << endl		5458331	1		<<			
ANR	5458354	Identifier	msg2		5458331	0					
ANR	5458355	Identifier	endl		5458331	1					
ANR	5458356	IdentifierDeclStatement	bool validFlag = false ;	391:2:10508:10530	5458331	3	True				
ANR	5458357	IdentifierDecl	validFlag = false		5458331	0					
ANR	5458358	IdentifierDeclType	bool		5458331	0					
ANR	5458359	Identifier	validFlag		5458331	1					
ANR	5458360	AssignmentExpression	validFlag = false		5458331	2		=			
ANR	5458361	Identifier	false		5458331	0					
ANR	5458362	Identifier	false		5458331	1					
ANR	5458363	IdentifierDeclStatement	"int msg1Id = getMsgId ( msg1 , ""eId"" ) ;"	392:2:10534:10567	5458331	4	True				
ANR	5458364	IdentifierDecl	"msg1Id = getMsgId ( msg1 , ""eId"" )"		5458331	0					
ANR	5458365	IdentifierDeclType	int		5458331	0					
ANR	5458366	Identifier	msg1Id		5458331	1					
ANR	5458367	AssignmentExpression	"msg1Id = getMsgId ( msg1 , ""eId"" )"		5458331	2		=			
ANR	5458368	Identifier	msg1Id		5458331	0					
ANR	5458369	CallExpression	"getMsgId ( msg1 , ""eId"" )"		5458331	1					
ANR	5458370	Callee	getMsgId		5458331	0					
ANR	5458371	Identifier	getMsgId		5458331	0					
ANR	5458372	ArgumentList	msg1		5458331	1					
ANR	5458373	Argument	msg1		5458331	0					
ANR	5458374	Identifier	msg1		5458331	0					
ANR	5458375	Argument	"""eId"""		5458331	1					
ANR	5458376	PrimaryExpression	"""eId"""		5458331	0					
ANR	5458377	ExpressionStatement	curMsgId = msg1Id	393:2:10571:10588	5458331	5	True				
ANR	5458378	AssignmentExpression	curMsgId = msg1Id		5458331	0		=			
ANR	5458379	Identifier	curMsgId		5458331	0					
ANR	5458380	Identifier	msg1Id		5458331	1					
ANR	5458381	IdentifierDeclStatement	"int m1Id = getMsgId ( msg1 , ""fId"" ) ;"	394:2:10592:10623	5458331	6	True				
ANR	5458382	IdentifierDecl	"m1Id = getMsgId ( msg1 , ""fId"" )"		5458331	0					
ANR	5458383	IdentifierDeclType	int		5458331	0					
ANR	5458384	Identifier	m1Id		5458331	1					
ANR	5458385	AssignmentExpression	"m1Id = getMsgId ( msg1 , ""fId"" )"		5458331	2		=			
ANR	5458386	Identifier	m1Id		5458331	0					
ANR	5458387	CallExpression	"getMsgId ( msg1 , ""fId"" )"		5458331	1					
ANR	5458388	Callee	getMsgId		5458331	0					
ANR	5458389	Identifier	getMsgId		5458331	0					
ANR	5458390	ArgumentList	msg1		5458331	1					
ANR	5458391	Argument	msg1		5458331	0					
ANR	5458392	Identifier	msg1		5458331	0					
ANR	5458393	Argument	"""fId"""		5458331	1					
ANR	5458394	PrimaryExpression	"""fId"""		5458331	0					
ANR	5458395	ExpressionStatement	curFId = m1Id	395:2:10627:10640	5458331	7	True				
ANR	5458396	AssignmentExpression	curFId = m1Id		5458331	0		=			
ANR	5458397	Identifier	curFId		5458331	0					
ANR	5458398	Identifier	m1Id		5458331	1					
ANR	5458399	IdentifierDeclStatement	"int msg2Id = getMsgId ( msg2 , ""eId"" ) ;"	398:2:10646:10679	5458331	8	True				
ANR	5458400	IdentifierDecl	"msg2Id = getMsgId ( msg2 , ""eId"" )"		5458331	0					
ANR	5458401	IdentifierDeclType	int		5458331	0					
ANR	5458402	Identifier	msg2Id		5458331	1					
ANR	5458403	AssignmentExpression	"msg2Id = getMsgId ( msg2 , ""eId"" )"		5458331	2		=			
ANR	5458404	Identifier	msg2Id		5458331	0					
ANR	5458405	CallExpression	"getMsgId ( msg2 , ""eId"" )"		5458331	1					
ANR	5458406	Callee	getMsgId		5458331	0					
ANR	5458407	Identifier	getMsgId		5458331	0					
ANR	5458408	ArgumentList	msg2		5458331	1					
ANR	5458409	Argument	msg2		5458331	0					
ANR	5458410	Identifier	msg2		5458331	0					
ANR	5458411	Argument	"""eId"""		5458331	1					
ANR	5458412	PrimaryExpression	"""eId"""		5458331	0					
ANR	5458413	IfStatement	if ( msg2Id > - 1 )		5458331	9					
ANR	5458414	Condition	msg2Id > - 1	399:5:10686:10696	5458331	0	True				
ANR	5458415	RelationalExpression	msg2Id > - 1		5458331	0		>			
ANR	5458416	Identifier	msg2Id		5458331	0					
ANR	5458417	UnaryOperationExpression	- 1		5458331	1					
ANR	5458418	UnaryOperator	-		5458331	0					
ANR	5458419	PrimaryExpression	1		5458331	1					
ANR	5458420	CompoundStatement		16:4:481:512	5458331	1					
ANR	5458421	IdentifierDeclStatement	"int m2Id = getMsgId ( msg2 , ""fId"" ) ;"	400:4:10704:10735	5458331	0	True				
ANR	5458422	IdentifierDecl	"m2Id = getMsgId ( msg2 , ""fId"" )"		5458331	0					
ANR	5458423	IdentifierDeclType	int		5458331	0					
ANR	5458424	Identifier	m2Id		5458331	1					
ANR	5458425	AssignmentExpression	"m2Id = getMsgId ( msg2 , ""fId"" )"		5458331	2		=			
ANR	5458426	Identifier	m2Id		5458331	0					
ANR	5458427	CallExpression	"getMsgId ( msg2 , ""fId"" )"		5458331	1					
ANR	5458428	Callee	getMsgId		5458331	0					
ANR	5458429	Identifier	getMsgId		5458331	0					
ANR	5458430	ArgumentList	msg2		5458331	1					
ANR	5458431	Argument	msg2		5458331	0					
ANR	5458432	Identifier	msg2		5458331	0					
ANR	5458433	Argument	"""fId"""		5458331	1					
ANR	5458434	PrimaryExpression	"""fId"""		5458331	0					
ANR	5458435	IfStatement	if ( ( m2Id > prevFId ) || ( msg2Id > prevMsgId && m2Id >= prevFId ) )		5458331	1					
ANR	5458436	Condition	( m2Id > prevFId ) || ( msg2Id > prevMsgId && m2Id >= prevFId )	401:7:10744:10801	5458331	0	True				
ANR	5458437	OrExpression	( m2Id > prevFId ) || ( msg2Id > prevMsgId && m2Id >= prevFId )		5458331	0		||			
ANR	5458438	RelationalExpression	m2Id > prevFId		5458331	0		>			
ANR	5458439	Identifier	m2Id		5458331	0					
ANR	5458440	Identifier	prevFId		5458331	1					
ANR	5458441	AndExpression	msg2Id > prevMsgId && m2Id >= prevFId		5458331	1		&&			
ANR	5458442	RelationalExpression	msg2Id > prevMsgId		5458331	0		>			
ANR	5458443	Identifier	msg2Id		5458331	0					
ANR	5458444	Identifier	prevMsgId		5458331	1					
ANR	5458445	RelationalExpression	m2Id >= prevFId		5458331	1		>=			
ANR	5458446	Identifier	m2Id		5458331	0					
ANR	5458447	Identifier	prevFId		5458331	1					
ANR	5458448	CompoundStatement		17:66:580:580	5458331	1					
ANR	5458449	ExpressionStatement	prevMsgId = msg2Id	402:6:10811:10829	5458331	0	True				
ANR	5458450	AssignmentExpression	prevMsgId = msg2Id		5458331	0		=			
ANR	5458451	Identifier	prevMsgId		5458331	0					
ANR	5458452	Identifier	msg2Id		5458331	1					
ANR	5458453	ExpressionStatement	prevFId = m2Id	403:6:10837:10851	5458331	1	True				
ANR	5458454	AssignmentExpression	prevFId = m2Id		5458331	0		=			
ANR	5458455	Identifier	prevFId		5458331	0					
ANR	5458456	Identifier	m2Id		5458331	1					
ANR	5458457	ExpressionStatement	"validFlag = compareFId ( prevFId , curFId , prevMsgId , curMsgId )"	405:4:10863:10920	5458331	2	True				
ANR	5458458	AssignmentExpression	"validFlag = compareFId ( prevFId , curFId , prevMsgId , curMsgId )"		5458331	0		=			
ANR	5458459	Identifier	validFlag		5458331	0					
ANR	5458460	CallExpression	"compareFId ( prevFId , curFId , prevMsgId , curMsgId )"		5458331	1					
ANR	5458461	Callee	compareFId		5458331	0					
ANR	5458462	Identifier	compareFId		5458331	0					
ANR	5458463	ArgumentList	prevFId		5458331	1					
ANR	5458464	Argument	prevFId		5458331	0					
ANR	5458465	Identifier	prevFId		5458331	0					
ANR	5458466	Argument	curFId		5458331	1					
ANR	5458467	Identifier	curFId		5458331	0					
ANR	5458468	Argument	prevMsgId		5458331	2					
ANR	5458469	Identifier	prevMsgId		5458331	0					
ANR	5458470	Argument	curMsgId		5458331	3					
ANR	5458471	Identifier	curMsgId		5458331	0					
ANR	5458472	ElseStatement	else		5458331	0					
ANR	5458473	CompoundStatement		23:6:709:709	5458331	0					
ANR	5458474	ExpressionStatement	validFlag = false	408:4:10938:10955	5458331	0	True				
ANR	5458475	AssignmentExpression	validFlag = false		5458331	0		=			
ANR	5458476	Identifier	validFlag		5458331	0					
ANR	5458477	Identifier	false		5458331	1					
ANR	5458478	IfStatement	if ( initFlag )		5458331	1					
ANR	5458479	Condition	initFlag	411:7:11052:11059	5458331	0	True				
ANR	5458480	Identifier	initFlag		5458331	0					
ANR	5458481	CompoundStatement		27:16:838:838	5458331	1					
ANR	5458482	ExpressionStatement	validFlag = true	412:6:11069:11085	5458331	0	True				
ANR	5458483	AssignmentExpression	validFlag = true		5458331	0		=			
ANR	5458484	Identifier	validFlag		5458331	0					
ANR	5458485	Identifier	true		5458331	1					
ANR	5458486	ExpressionStatement	initFlag = false	413:6:11093:11109	5458331	1	True				
ANR	5458487	AssignmentExpression	initFlag = false		5458331	0		=			
ANR	5458488	Identifier	initFlag		5458331	0					
ANR	5458489	Identifier	false		5458331	1					
ANR	5458490	ReturnStatement	return validFlag ;	416:2:11123:11139	5458331	10	True				
ANR	5458491	Identifier	validFlag		5458331	0					
ANR	5458492	ReturnType	bool		5458331	1					
ANR	5458493	Identifier	ClientPub :: validLogMsg		5458331	2					
ANR	5458494	ParameterList	"string msg1 , string msg2"		5458331	3					
ANR	5458495	Parameter	string msg1	385:28:10197:10207	5458331	0	True				
ANR	5458496	ParameterType	string		5458331	0					
ANR	5458497	Identifier	msg1		5458331	1					
ANR	5458498	Parameter	string msg2	385:41:10210:10220	5458331	1	True				
ANR	5458499	ParameterType	string		5458331	0					
ANR	5458500	Identifier	msg2		5458331	1					
ANR	5458501	CFGEntryNode	ENTRY		5458331		True				
ANR	5458502	CFGExitNode	EXIT		5458331		True				
ANR	5458503	Symbol	msg2		5458331						
ANR	5458504	Symbol	msg1		5458331						
ANR	5458505	Symbol	validFlag		5458331						
ANR	5458506	Symbol	initFlag		5458331						
ANR	5458507	Symbol	prevFId		5458331						
ANR	5458508	Symbol	false		5458331						
ANR	5458509	Symbol	msg2Id		5458331						
ANR	5458510	Symbol	m1Id		5458331						
ANR	5458511	Symbol	msg1Id		5458331						
ANR	5458512	Symbol	m2Id		5458331						
ANR	5458513	Symbol	prevMsgId		5458331						
ANR	5458514	Symbol	curMsgId		5458331						
ANR	5458515	Symbol	curFId		5458331						
ANR	5458516	Symbol	compareFId		5458331						
ANR	5458517	Symbol	getMsgId		5458331						
ANR	5458518	Symbol	true		5458331						
ANR	5458519	Function	ClientPub :: initLoadMsg	424:0:11275:12811							
ANR	5458520	FunctionDef	ClientPub :: initLoadMsg (char * loadFile)		5458519	0					
ANR	5458521	CompoundStatement		425:0:11319:12811	5458519	0					
ANR	5458522	ExpressionStatement	"printf ( ""host: %s , port: %i \\n"" , host , port )"	426:2:11323:11367	5458519	0	True				
ANR	5458523	CallExpression	"printf ( ""host: %s , port: %i \\n"" , host , port )"		5458519	0					
ANR	5458524	Callee	printf		5458519	0					
ANR	5458525	Identifier	printf		5458519	0					
ANR	5458526	ArgumentList	"""host: %s , port: %i \\n"""		5458519	1					
ANR	5458527	Argument	"""host: %s , port: %i \\n"""		5458519	0					
ANR	5458528	PrimaryExpression	"""host: %s , port: %i \\n"""		5458519	0					
ANR	5458529	Argument	host		5458519	1					
ANR	5458530	Identifier	host		5458519	0					
ANR	5458531	Argument	port		5458519	2					
ANR	5458532	Identifier	port		5458519	0					
ANR	5458533	IfStatement	if ( port < 0 )		5458519	1					
ANR	5458534	Condition	port < 0	427:6:11376:11383	5458519	0	True				
ANR	5458535	RelationalExpression	port < 0		5458519	0		<			
ANR	5458536	Identifier	port		5458519	0					
ANR	5458537	PrimaryExpression	0		5458519	1					
ANR	5458538	CompoundStatement		3:16:66:66	5458519	1					
ANR	5458539	ExpressionStatement	"printf ( ""QPID does not seem to be running - exiting"" )"	428:3:11391:11443	5458519	0	True				
ANR	5458540	CallExpression	"printf ( ""QPID does not seem to be running - exiting"" )"		5458519	0					
ANR	5458541	Callee	printf		5458519	0					
ANR	5458542	Identifier	printf		5458519	0					
ANR	5458543	ArgumentList	"""QPID does not seem to be running - exiting"""		5458519	1					
ANR	5458544	Argument	"""QPID does not seem to be running - exiting"""		5458519	0					
ANR	5458545	PrimaryExpression	"""QPID does not seem to be running - exiting"""		5458519	0					
ANR	5458546	ReturnStatement	return ;	429:3:11448:11454	5458519	1	True				
ANR	5458547	IdentifierDeclStatement	bool sendFlag = false ;	431:2:11462:11483	5458519	2	True				
ANR	5458548	IdentifierDecl	sendFlag = false		5458519	0					
ANR	5458549	IdentifierDeclType	bool		5458519	0					
ANR	5458550	Identifier	sendFlag		5458519	1					
ANR	5458551	AssignmentExpression	sendFlag = false		5458519	2		=			
ANR	5458552	Identifier	false		5458519	0					
ANR	5458553	Identifier	false		5458519	1					
ANR	5458554	IdentifierDeclStatement	"string logMsg = """" ;"	432:2:11487:11503	5458519	3	True				
ANR	5458555	IdentifierDecl	"logMsg = """""		5458519	0					
ANR	5458556	IdentifierDeclType	string		5458519	0					
ANR	5458557	Identifier	logMsg		5458519	1					
ANR	5458558	AssignmentExpression	"logMsg = """""		5458519	2		=			
ANR	5458559	Identifier	logMsg		5458519	0					
ANR	5458560	PrimaryExpression	""""""		5458519	1					
ANR	5458561	IdentifierDeclStatement	fstream ifile ;	433:2:11507:11520	5458519	4	True				
ANR	5458562	IdentifierDecl	ifile		5458519	0					
ANR	5458563	IdentifierDeclType	fstream		5458519	0					
ANR	5458564	Identifier	ifile		5458519	1					
ANR	5458565	IdentifierDeclStatement	int getSize = 0 ;	434:2:11524:11537	5458519	5	True				
ANR	5458566	IdentifierDecl	getSize = 0		5458519	0					
ANR	5458567	IdentifierDeclType	int		5458519	0					
ANR	5458568	Identifier	getSize		5458519	1					
ANR	5458569	AssignmentExpression	getSize = 0		5458519	2		=			
ANR	5458570	Identifier	getSize		5458519	0					
ANR	5458571	PrimaryExpression	0		5458519	1					
ANR	5458572	IdentifierDeclStatement	Connection connection ;	435:2:11541:11562	5458519	6	True				
ANR	5458573	IdentifierDecl	connection		5458519	0					
ANR	5458574	IdentifierDeclType	Connection		5458519	0					
ANR	5458575	Identifier	connection		5458519	1					
ANR	5458576	TryStatement	try		5458519	7					
ANR	5458577	CompoundStatement		31:4:769:778	5458519	0					
ANR	5458578	ExpressionStatement	"connection . open ( host , port )"		5458519	0					
ANR	5458579	CallExpression	"connection . open ( host , port )"		5458519	0					
ANR	5458580	Callee	connection . open		5458519	0					
ANR	5458581	MemberAccess	connection . open		5458519	0					
ANR	5458582	Identifier	connection		5458519	0					
ANR	5458583	Identifier	open		5458519	1					
ANR	5458584	ArgumentList	host		5458519	1					
ANR	5458585	Argument	host		5458519	0					
ANR	5458586	Identifier	host		5458519	0					
ANR	5458587	Argument	port		5458519	1					
ANR	5458588	Identifier	port		5458519	0					
ANR	5458589	IdentifierDeclStatement	Session session = connection . newSession ( ) ;		5458519	1					
ANR	5458590	IdentifierDecl	session = connection . newSession ( )		5458519	0					
ANR	5458591	IdentifierDeclType	Session		5458519	0					
ANR	5458592	Identifier	session		5458519	1					
ANR	5458593	AssignmentExpression	session = connection . newSession ( )		5458519	2		=			
ANR	5458594	Identifier	session		5458519	0					
ANR	5458595	CallExpression	connection . newSession ( )		5458519	1					
ANR	5458596	Callee	connection . newSession		5458519	0					
ANR	5458597	MemberAccess	connection . newSession		5458519	0					
ANR	5458598	Identifier	connection		5458519	0					
ANR	5458599	Identifier	newSession		5458519	1					
ANR	5458600	ArgumentList			5458519	1					
ANR	5458601	IdentifierDeclStatement	Listener listener ( session ) ;		5458519	2					
ANR	5458602	IdentifierDecl	listener ( session )		5458519	0					
ANR	5458603	IdentifierDeclType	Listener		5458519	0					
ANR	5458604	Identifier	listener		5458519	1					
ANR	5458605	Identifier	session		5458519	2					
ANR	5458606	IdentifierDeclStatement	bool loadFlag = listener . initListen ( ) ;		5458519	3					
ANR	5458607	IdentifierDecl	loadFlag = listener . initListen ( )		5458519	0					
ANR	5458608	IdentifierDeclType	bool		5458519	0					
ANR	5458609	Identifier	loadFlag		5458519	1					
ANR	5458610	AssignmentExpression	loadFlag = listener . initListen ( )		5458519	2		=			
ANR	5458611	Identifier	loadFlag		5458519	0					
ANR	5458612	CallExpression	listener . initListen ( )		5458519	1					
ANR	5458613	Callee	listener . initListen		5458519	0					
ANR	5458614	MemberAccess	listener . initListen		5458519	0					
ANR	5458615	Identifier	listener		5458519	0					
ANR	5458616	Identifier	initListen		5458519	1					
ANR	5458617	ArgumentList			5458519	1					
ANR	5458618	IfStatement	if ( ! loadFlag )		5458519	4					
ANR	5458619	Condition	! loadFlag		5458519	0					
ANR	5458620	UnaryOperationExpression	! loadFlag		5458519	0					
ANR	5458621	UnaryOperator	!		5458519	0					
ANR	5458622	Identifier	loadFlag		5458519	1					
ANR	5458623	CompoundStatement		20:17:485:485	5458519	1					
ANR	5458624	ExpressionStatement	"cout << ""\\n initLoadMsg() => STATUS: condor_queue has contents "" << endl"		5458519	0					
ANR	5458625	ShiftExpression	"cout << ""\\n initLoadMsg() => STATUS: condor_queue has contents "" << endl"		5458519	0		<<			
ANR	5458626	Identifier	cout		5458519	0					
ANR	5458627	ShiftExpression	"""\\n initLoadMsg() => STATUS: condor_queue has contents "" << endl"		5458519	1		<<			
ANR	5458628	PrimaryExpression	"""\\n initLoadMsg() => STATUS: condor_queue has contents """		5458519	0					
ANR	5458629	Identifier	endl		5458519	1					
ANR	5458630	ExpressionStatement	session . close ( )		5458519	1					
ANR	5458631	CallExpression	session . close ( )		5458519	0					
ANR	5458632	Callee	session . close		5458519	0					
ANR	5458633	MemberAccess	session . close		5458519	0					
ANR	5458634	Identifier	session		5458519	0					
ANR	5458635	Identifier	close		5458519	1					
ANR	5458636	ArgumentList			5458519	1					
ANR	5458637	ExpressionStatement	connection . close ( )		5458519	2					
ANR	5458638	CallExpression	connection . close ( )		5458519	0					
ANR	5458639	Callee	connection . close		5458519	0					
ANR	5458640	MemberAccess	connection . close		5458519	0					
ANR	5458641	Identifier	connection		5458519	0					
ANR	5458642	Identifier	close		5458519	1					
ANR	5458643	ArgumentList			5458519	1					
ANR	5458644	ReturnStatement	return ;		5458519	3					
ANR	5458645	ExpressionStatement	"ifile . open ( loadFile , ios :: out | ios :: in )"		5458519	5					
ANR	5458646	CallExpression	"ifile . open ( loadFile , ios :: out | ios :: in )"		5458519	0					
ANR	5458647	Callee	ifile . open		5458519	0					
ANR	5458648	MemberAccess	ifile . open		5458519	0					
ANR	5458649	Identifier	ifile		5458519	0					
ANR	5458650	Identifier	open		5458519	1					
ANR	5458651	ArgumentList	loadFile		5458519	1					
ANR	5458652	Argument	loadFile		5458519	0					
ANR	5458653	Identifier	loadFile		5458519	0					
ANR	5458654	Argument	ios :: out | ios :: in		5458519	1					
ANR	5458655	InclusiveOrExpression	ios :: out | ios :: in		5458519	0		|			
ANR	5458656	Identifier	ios :: out		5458519	0					
ANR	5458657	Identifier	ios :: in		5458519	1					
ANR	5458658	ExpressionStatement	"ifile . seekg ( 0 , ios :: end )"		5458519	6					
ANR	5458659	CallExpression	"ifile . seekg ( 0 , ios :: end )"		5458519	0					
ANR	5458660	Callee	ifile . seekg		5458519	0					
ANR	5458661	MemberAccess	ifile . seekg		5458519	0					
ANR	5458662	Identifier	ifile		5458519	0					
ANR	5458663	Identifier	seekg		5458519	1					
ANR	5458664	ArgumentList	0		5458519	1					
ANR	5458665	Argument	0		5458519	0					
ANR	5458666	PrimaryExpression	0		5458519	0					
ANR	5458667	Argument	ios :: end		5458519	1					
ANR	5458668	Identifier	ios :: end		5458519	0					
ANR	5458669	ExpressionStatement	getSize = ifile . tellg ( )		5458519	7					
ANR	5458670	AssignmentExpression	getSize = ifile . tellg ( )		5458519	0		=			
ANR	5458671	Identifier	getSize		5458519	0					
ANR	5458672	CallExpression	ifile . tellg ( )		5458519	1					
ANR	5458673	Callee	ifile . tellg		5458519	0					
ANR	5458674	MemberAccess	ifile . tellg		5458519	0					
ANR	5458675	Identifier	ifile		5458519	0					
ANR	5458676	Identifier	tellg		5458519	1					
ANR	5458677	ArgumentList			5458519	1					
ANR	5458678	ExpressionStatement	ifile . seekg ( 0 )		5458519	8					
ANR	5458679	CallExpression	ifile . seekg ( 0 )		5458519	0					
ANR	5458680	Callee	ifile . seekg		5458519	0					
ANR	5458681	MemberAccess	ifile . seekg		5458519	0					
ANR	5458682	Identifier	ifile		5458519	0					
ANR	5458683	Identifier	seekg		5458519	1					
ANR	5458684	ArgumentList	0		5458519	1					
ANR	5458685	Argument	0		5458519	0					
ANR	5458686	PrimaryExpression	0		5458519	0					
ANR	5458687	IdentifierDeclStatement	char * log ;		5458519	9					
ANR	5458688	IdentifierDecl	* log		5458519	0					
ANR	5458689	IdentifierDeclType	char *		5458519	0					
ANR	5458690	Identifier	log		5458519	1					
ANR	5458691	ExpressionStatement	log = ( char * ) malloc ( getSize )		5458519	10					
ANR	5458692	AssignmentExpression	log = ( char * ) malloc ( getSize )		5458519	0		=			
ANR	5458693	Identifier	log		5458519	0					
ANR	5458694	CastExpression	( char * ) malloc ( getSize )		5458519	1					
ANR	5458695	CastTarget	char *		5458519	0					
ANR	5458696	CallExpression	malloc ( getSize )		5458519	1					
ANR	5458697	Callee	malloc		5458519	0					
ANR	5458698	Identifier	malloc		5458519	0					
ANR	5458699	ArgumentList	getSize		5458519	1					
ANR	5458700	Argument	getSize		5458519	0					
ANR	5458701	Identifier	getSize		5458519	0					
ANR	5458702	IfStatement	"if ( ifile . read ( log , getSize ) )"		5458519	11					
ANR	5458703	Condition	"ifile . read ( log , getSize )"		5458519	0					
ANR	5458704	CallExpression	"ifile . read ( log , getSize )"		5458519	0					
ANR	5458705	Callee	ifile . read		5458519	0					
ANR	5458706	MemberAccess	ifile . read		5458519	0					
ANR	5458707	Identifier	ifile		5458519	0					
ANR	5458708	Identifier	read		5458519	1					
ANR	5458709	ArgumentList	log		5458519	1					
ANR	5458710	Argument	log		5458519	0					
ANR	5458711	Identifier	log		5458519	0					
ANR	5458712	Argument	getSize		5458519	1					
ANR	5458713	Identifier	getSize		5458519	0					
ANR	5458714	CompoundStatement		40:6:1137:1162	5458519	1					
ANR	5458715	ExpressionStatement	logMsg = log		5458519	0					
ANR	5458716	AssignmentExpression	logMsg = log		5458519	0		=			
ANR	5458717	Identifier	logMsg		5458519	0					
ANR	5458718	Identifier	log		5458519	1					
ANR	5458719	ExpressionStatement	"cout << ""\\n initLoadMsg() => STATUS: load from file the condor_queue with msg : "" << logMsg << endl"		5458519	1					
ANR	5458720	ShiftExpression	"cout << ""\\n initLoadMsg() => STATUS: load from file the condor_queue with msg : "" << logMsg << endl"		5458519	0		<<			
ANR	5458721	Identifier	cout		5458519	0					
ANR	5458722	ShiftExpression	"""\\n initLoadMsg() => STATUS: load from file the condor_queue with msg : "" << logMsg << endl"		5458519	1		<<			
ANR	5458723	PrimaryExpression	"""\\n initLoadMsg() => STATUS: load from file the condor_queue with msg : """		5458519	0					
ANR	5458724	ShiftExpression	logMsg << endl		5458519	1		<<			
ANR	5458725	Identifier	logMsg		5458519	0					
ANR	5458726	Identifier	endl		5458519	1					
ANR	5458727	IdentifierDeclStatement	Message message ;		5458519	2					
ANR	5458728	IdentifierDecl	message		5458519	0					
ANR	5458729	IdentifierDeclType	Message		5458519	0					
ANR	5458730	Identifier	message		5458519	1					
ANR	5458731	ExpressionStatement	"message . getDeliveryProperties ( ) . setRoutingKey ( ""routing_key1"" )"		5458519	3					
ANR	5458732	CallExpression	"message . getDeliveryProperties ( ) . setRoutingKey ( ""routing_key1"" )"		5458519	0					
ANR	5458733	Callee	message . getDeliveryProperties ( ) . setRoutingKey		5458519	0					
ANR	5458734	MemberAccess	message . getDeliveryProperties ( ) . setRoutingKey		5458519	0					
ANR	5458735	CallExpression	message . getDeliveryProperties ( )		5458519	0					
ANR	5458736	Callee	message . getDeliveryProperties		5458519	0					
ANR	5458737	MemberAccess	message . getDeliveryProperties		5458519	0					
ANR	5458738	Identifier	message		5458519	0					
ANR	5458739	Identifier	getDeliveryProperties		5458519	1					
ANR	5458740	ArgumentList			5458519	1					
ANR	5458741	Identifier	setRoutingKey		5458519	1					
ANR	5458742	ArgumentList	"""routing_key1"""		5458519	1					
ANR	5458743	Argument	"""routing_key1"""		5458519	0					
ANR	5458744	PrimaryExpression	"""routing_key1"""		5458519	0					
ANR	5458745	ExpressionStatement	message . getDeliveryProperties ( ) . setDeliveryMode ( PERSISTENT )		5458519	4					
ANR	5458746	CallExpression	message . getDeliveryProperties ( ) . setDeliveryMode ( PERSISTENT )		5458519	0					
ANR	5458747	Callee	message . getDeliveryProperties ( ) . setDeliveryMode		5458519	0					
ANR	5458748	MemberAccess	message . getDeliveryProperties ( ) . setDeliveryMode		5458519	0					
ANR	5458749	CallExpression	message . getDeliveryProperties ( )		5458519	0					
ANR	5458750	Callee	message . getDeliveryProperties		5458519	0					
ANR	5458751	MemberAccess	message . getDeliveryProperties		5458519	0					
ANR	5458752	Identifier	message		5458519	0					
ANR	5458753	Identifier	getDeliveryProperties		5458519	1					
ANR	5458754	ArgumentList			5458519	1					
ANR	5458755	Identifier	setDeliveryMode		5458519	1					
ANR	5458756	ArgumentList	PERSISTENT		5458519	1					
ANR	5458757	Argument	PERSISTENT		5458519	0					
ANR	5458758	Identifier	PERSISTENT		5458519	0					
ANR	5458759	IdentifierDeclStatement	stringstream message_data ;		5458519	5					
ANR	5458760	IdentifierDecl	message_data		5458519	0					
ANR	5458761	IdentifierDeclType	stringstream		5458519	0					
ANR	5458762	Identifier	message_data		5458519	1					
ANR	5458763	ExpressionStatement	message_data << logMsg		5458519	6					
ANR	5458764	ShiftExpression	message_data << logMsg		5458519	0		<<			
ANR	5458765	Identifier	message_data		5458519	0					
ANR	5458766	Identifier	logMsg		5458519	1					
ANR	5458767	ExpressionStatement	message . setData ( message_data . str ( ) )		5458519	7					
ANR	5458768	CallExpression	message . setData ( message_data . str ( ) )		5458519	0					
ANR	5458769	Callee	message . setData		5458519	0					
ANR	5458770	MemberAccess	message . setData		5458519	0					
ANR	5458771	Identifier	message		5458519	0					
ANR	5458772	Identifier	setData		5458519	1					
ANR	5458773	ArgumentList	message_data . str ( )		5458519	1					
ANR	5458774	Argument	message_data . str ( )		5458519	0					
ANR	5458775	CallExpression	message_data . str ( )		5458519	0					
ANR	5458776	Callee	message_data . str		5458519	0					
ANR	5458777	MemberAccess	message_data . str		5458519	0					
ANR	5458778	Identifier	message_data		5458519	0					
ANR	5458779	Identifier	str		5458519	1					
ANR	5458780	ArgumentList			5458519	1					
ANR	5458781	ExpressionStatement	"async ( session ) . messageTransfer ( arg :: content = message , arg :: destination = ""amq.topic"" )"		5458519	8					
ANR	5458782	CallExpression	"async ( session ) . messageTransfer ( arg :: content = message , arg :: destination = ""amq.topic"" )"		5458519	0					
ANR	5458783	Callee	async ( session ) . messageTransfer		5458519	0					
ANR	5458784	MemberAccess	async ( session ) . messageTransfer		5458519	0					
ANR	5458785	CallExpression	async ( session )		5458519	0					
ANR	5458786	Callee	async		5458519	0					
ANR	5458787	Identifier	async		5458519	0					
ANR	5458788	ArgumentList	session		5458519	1					
ANR	5458789	Argument	session		5458519	0					
ANR	5458790	Identifier	session		5458519	0					
ANR	5458791	Identifier	messageTransfer		5458519	1					
ANR	5458792	ArgumentList	arg :: content = message		5458519	1					
ANR	5458793	Argument	arg :: content = message		5458519	0					
ANR	5458794	AssignmentExpression	arg :: content = message		5458519	0		=			
ANR	5458795	Identifier	arg :: content		5458519	0					
ANR	5458796	Identifier	message		5458519	1					
ANR	5458797	Argument	"arg :: destination = ""amq.topic"""		5458519	1					
ANR	5458798	AssignmentExpression	"arg :: destination = ""amq.topic"""		5458519	0		=			
ANR	5458799	Identifier	arg :: destination		5458519	0					
ANR	5458800	PrimaryExpression	"""amq.topic"""		5458519	1					
ANR	5458801	ExpressionStatement	ifile . close ( )		5458519	9					
ANR	5458802	CallExpression	ifile . close ( )		5458519	0					
ANR	5458803	Callee	ifile . close		5458519	0					
ANR	5458804	MemberAccess	ifile . close		5458519	0					
ANR	5458805	Identifier	ifile		5458519	0					
ANR	5458806	Identifier	close		5458519	1					
ANR	5458807	ArgumentList			5458519	1					
ANR	5458808	ExpressionStatement	session . close ( )		5458519	12					
ANR	5458809	CallExpression	session . close ( )		5458519	0					
ANR	5458810	Callee	session . close		5458519	0					
ANR	5458811	MemberAccess	session . close		5458519	0					
ANR	5458812	Identifier	session		5458519	0					
ANR	5458813	Identifier	close		5458519	1					
ANR	5458814	ArgumentList			5458519	1					
ANR	5458815	ExpressionStatement	connection . close ( )		5458519	13					
ANR	5458816	CallExpression	connection . close ( )		5458519	0					
ANR	5458817	Callee	connection . close		5458519	0					
ANR	5458818	MemberAccess	connection . close		5458519	0					
ANR	5458819	Identifier	connection		5458519	0					
ANR	5458820	Identifier	close		5458519	1					
ANR	5458821	ArgumentList			5458519	1					
ANR	5458822	CatchList			5458519	1					
ANR	5458823	CatchStatement	catch ( const std :: exception & error )		5458519	0					
ANR	5458824	Identifier	error		5458519	0					
ANR	5458825	CompoundStatement		50:39:1441:1441	5458519	1					
ANR	5458826	ExpressionStatement	std :: cout << error . what ( ) << std :: endl	475:4:12767:12805	5458519	0	True				
ANR	5458827	ShiftExpression	std :: cout << error . what ( ) << std :: endl		5458519	0		<<			
ANR	5458828	Identifier	std :: cout		5458519	0					
ANR	5458829	ShiftExpression	error . what ( ) << std :: endl		5458519	1		<<			
ANR	5458830	CallExpression	error . what ( )		5458519	0					
ANR	5458831	Callee	error . what		5458519	0					
ANR	5458832	MemberAccess	error . what		5458519	0					
ANR	5458833	Identifier	error		5458519	0					
ANR	5458834	Identifier	what		5458519	1					
ANR	5458835	ArgumentList			5458519	1					
ANR	5458836	Identifier	std :: endl		5458519	1					
ANR	5458837	ReturnType	void		5458519	1					
ANR	5458838	Identifier	ClientPub :: initLoadMsg		5458519	2					
ANR	5458839	ParameterList	char * loadFile		5458519	3					
ANR	5458840	Parameter	char * loadFile	424:28:11303:11316	5458519	0	True				
ANR	5458841	ParameterType	char *		5458519	0					
ANR	5458842	Identifier	loadFile		5458519	1					
ANR	5458843	CFGEntryNode	ENTRY		5458519		True				
ANR	5458844	CFGExitNode	EXIT		5458519		True				
ANR	5458845	CFGErrorNode	ERROR		5458519		True				
ANR	5458846	Symbol	sendFlag		5458519						
ANR	5458847	Symbol	ifile		5458519						
ANR	5458848	Symbol	getSize		5458519						
ANR	5458849	Symbol	port		5458519						
ANR	5458850	Symbol	host		5458519						
ANR	5458851	Symbol	false		5458519						
ANR	5458852	Symbol	loadFile		5458519						
ANR	5458853	Symbol	logMsg		5458519						
ANR	5458854	Symbol	connection		5458519						
ANR	5458855	Function	ClientPub :: publish_messages	484:0:12906:16099							
ANR	5458856	FunctionDef	"ClientPub :: publish_messages (string logMsg , char * persistFile)"		5458855	0					
ANR	5458857	CompoundStatement		485:0:12972:16099	5458855	0					
ANR	5458858	IdentifierDeclStatement	bool sendFlag = false ;	489:2:13049:13070	5458855	0	True				
ANR	5458859	IdentifierDecl	sendFlag = false		5458855	0					
ANR	5458860	IdentifierDeclType	bool		5458855	0					
ANR	5458861	Identifier	sendFlag		5458855	1					
ANR	5458862	AssignmentExpression	sendFlag = false		5458855	2		=			
ANR	5458863	Identifier	false		5458855	0					
ANR	5458864	Identifier	false		5458855	1					
ANR	5458865	IdentifierDeclStatement	Connection connection ;	491:2:13075:13096	5458855	1	True				
ANR	5458866	IdentifierDecl	connection		5458855	0					
ANR	5458867	IdentifierDeclType	Connection		5458855	0					
ANR	5458868	Identifier	connection		5458855	1					
ANR	5458869	TryStatement	try		5458855	2					
ANR	5458870	CompoundStatement		41:4:1345:1383	5458855	0					
ANR	5458871	ExpressionStatement	"connection . open ( host , port )"		5458855	0					
ANR	5458872	CallExpression	"connection . open ( host , port )"		5458855	0					
ANR	5458873	Callee	connection . open		5458855	0					
ANR	5458874	MemberAccess	connection . open		5458855	0					
ANR	5458875	Identifier	connection		5458855	0					
ANR	5458876	Identifier	open		5458855	1					
ANR	5458877	ArgumentList	host		5458855	1					
ANR	5458878	Argument	host		5458855	0					
ANR	5458879	Identifier	host		5458855	0					
ANR	5458880	Argument	port		5458855	1					
ANR	5458881	Identifier	port		5458855	0					
ANR	5458882	IdentifierDeclStatement	Session session = connection . newSession ( ) ;		5458855	1					
ANR	5458883	IdentifierDecl	session = connection . newSession ( )		5458855	0					
ANR	5458884	IdentifierDeclType	Session		5458855	0					
ANR	5458885	Identifier	session		5458855	1					
ANR	5458886	AssignmentExpression	session = connection . newSession ( )		5458855	2		=			
ANR	5458887	Identifier	session		5458855	0					
ANR	5458888	CallExpression	connection . newSession ( )		5458855	1					
ANR	5458889	Callee	connection . newSession		5458855	0					
ANR	5458890	MemberAccess	connection . newSession		5458855	0					
ANR	5458891	Identifier	connection		5458855	0					
ANR	5458892	Identifier	newSession		5458855	1					
ANR	5458893	ArgumentList			5458855	1					
ANR	5458894	IdentifierDeclStatement	Message message ;		5458855	2					
ANR	5458895	IdentifierDecl	message		5458855	0					
ANR	5458896	IdentifierDeclType	Message		5458855	0					
ANR	5458897	Identifier	message		5458855	1					
ANR	5458898	IdentifierDeclStatement	Message lMsg ;		5458855	3					
ANR	5458899	IdentifierDecl	lMsg		5458855	0					
ANR	5458900	IdentifierDeclType	Message		5458855	0					
ANR	5458901	Identifier	lMsg		5458855	1					
ANR	5458902	ExpressionStatement	"message . getDeliveryProperties ( ) . setRoutingKey ( ""routing_key1"" )"		5458855	4					
ANR	5458903	CallExpression	"message . getDeliveryProperties ( ) . setRoutingKey ( ""routing_key1"" )"		5458855	0					
ANR	5458904	Callee	message . getDeliveryProperties ( ) . setRoutingKey		5458855	0					
ANR	5458905	MemberAccess	message . getDeliveryProperties ( ) . setRoutingKey		5458855	0					
ANR	5458906	CallExpression	message . getDeliveryProperties ( )		5458855	0					
ANR	5458907	Callee	message . getDeliveryProperties		5458855	0					
ANR	5458908	MemberAccess	message . getDeliveryProperties		5458855	0					
ANR	5458909	Identifier	message		5458855	0					
ANR	5458910	Identifier	getDeliveryProperties		5458855	1					
ANR	5458911	ArgumentList			5458855	1					
ANR	5458912	Identifier	setRoutingKey		5458855	1					
ANR	5458913	ArgumentList	"""routing_key1"""		5458855	1					
ANR	5458914	Argument	"""routing_key1"""		5458855	0					
ANR	5458915	PrimaryExpression	"""routing_key1"""		5458855	0					
ANR	5458916	ExpressionStatement	message . getDeliveryProperties ( ) . setDeliveryMode ( PERSISTENT )		5458855	5					
ANR	5458917	CallExpression	message . getDeliveryProperties ( ) . setDeliveryMode ( PERSISTENT )		5458855	0					
ANR	5458918	Callee	message . getDeliveryProperties ( ) . setDeliveryMode		5458855	0					
ANR	5458919	MemberAccess	message . getDeliveryProperties ( ) . setDeliveryMode		5458855	0					
ANR	5458920	CallExpression	message . getDeliveryProperties ( )		5458855	0					
ANR	5458921	Callee	message . getDeliveryProperties		5458855	0					
ANR	5458922	MemberAccess	message . getDeliveryProperties		5458855	0					
ANR	5458923	Identifier	message		5458855	0					
ANR	5458924	Identifier	getDeliveryProperties		5458855	1					
ANR	5458925	ArgumentList			5458855	1					
ANR	5458926	Identifier	setDeliveryMode		5458855	1					
ANR	5458927	ArgumentList	PERSISTENT		5458855	1					
ANR	5458928	Argument	PERSISTENT		5458855	0					
ANR	5458929	Identifier	PERSISTENT		5458855	0					
ANR	5458930	IdentifierDeclStatement	stringstream message_data ;		5458855	6					
ANR	5458931	IdentifierDecl	message_data		5458855	0					
ANR	5458932	IdentifierDeclType	stringstream		5458855	0					
ANR	5458933	Identifier	message_data		5458855	1					
ANR	5458934	ExpressionStatement	message_data << logMsg		5458855	7					
ANR	5458935	ShiftExpression	message_data << logMsg		5458855	0		<<			
ANR	5458936	Identifier	message_data		5458855	0					
ANR	5458937	Identifier	logMsg		5458855	1					
ANR	5458938	IfStatement	if ( ! skipFlag )		5458855	8					
ANR	5458939	Condition	! skipFlag		5458855	0					
ANR	5458940	UnaryOperationExpression	! skipFlag		5458855	0					
ANR	5458941	UnaryOperator	!		5458855	0					
ANR	5458942	Identifier	skipFlag		5458855	1					
ANR	5458943	CompoundStatement		26:6:662:688	5458855	1					
ANR	5458944	IdentifierDeclStatement	Listener listener ( session ) ;		5458855	0					
ANR	5458945	IdentifierDecl	listener ( session )		5458855	0					
ANR	5458946	IdentifierDeclType	Listener		5458855	0					
ANR	5458947	Identifier	listener		5458855	1					
ANR	5458948	Identifier	session		5458855	2					
ANR	5458949	ExpressionStatement	"cout << ""\\n \\n ******************************************************************************** \\n \\n"""		5458855	1					
ANR	5458950	ShiftExpression	"cout << ""\\n \\n ******************************************************************************** \\n \\n"""		5458855	0		<<			
ANR	5458951	Identifier	cout		5458855	0					
ANR	5458952	PrimaryExpression	"""\\n \\n ******************************************************************************** \\n \\n"""		5458855	1					
ANR	5458953	ExpressionStatement	listener . browse ( )		5458855	2					
ANR	5458954	CallExpression	listener . browse ( )		5458855	0					
ANR	5458955	Callee	listener . browse		5458855	0					
ANR	5458956	MemberAccess	listener . browse		5458855	0					
ANR	5458957	Identifier	listener		5458855	0					
ANR	5458958	Identifier	browse		5458855	1					
ANR	5458959	ArgumentList			5458855	1					
ANR	5458960	ExpressionStatement	tempMsg = listener . getNewMessage ( )		5458855	3					
ANR	5458961	AssignmentExpression	tempMsg = listener . getNewMessage ( )		5458855	0		=			
ANR	5458962	Identifier	tempMsg		5458855	0					
ANR	5458963	CallExpression	listener . getNewMessage ( )		5458855	1					
ANR	5458964	Callee	listener . getNewMessage		5458855	0					
ANR	5458965	MemberAccess	listener . getNewMessage		5458855	0					
ANR	5458966	Identifier	listener		5458855	0					
ANR	5458967	Identifier	getNewMessage		5458855	1					
ANR	5458968	ArgumentList			5458855	1					
ANR	5458969	ExpressionStatement	listener . dequeue ( )		5458855	4					
ANR	5458970	CallExpression	listener . dequeue ( )		5458855	0					
ANR	5458971	Callee	listener . dequeue		5458855	0					
ANR	5458972	MemberAccess	listener . dequeue		5458855	0					
ANR	5458973	Identifier	listener		5458855	0					
ANR	5458974	Identifier	dequeue		5458855	1					
ANR	5458975	ArgumentList			5458855	1					
ANR	5458976	IdentifierDeclStatement	"string estr = ""fId="" ;"		5458855	9					
ANR	5458977	IdentifierDecl	"estr = ""fId="""		5458855	0					
ANR	5458978	IdentifierDeclType	string		5458855	0					
ANR	5458979	Identifier	estr		5458855	1					
ANR	5458980	AssignmentExpression	"estr = ""fId="""		5458855	2		=			
ANR	5458981	Identifier	estr		5458855	0					
ANR	5458982	PrimaryExpression	"""fId="""		5458855	1					
ANR	5458983	IdentifierDeclStatement	"int origstartpos = logMsg . find ( estr , 0 ) ;"		5458855	10					
ANR	5458984	IdentifierDecl	"origstartpos = logMsg . find ( estr , 0 )"		5458855	0					
ANR	5458985	IdentifierDeclType	int		5458855	0					
ANR	5458986	Identifier	origstartpos		5458855	1					
ANR	5458987	AssignmentExpression	"origstartpos = logMsg . find ( estr , 0 )"		5458855	2		=			
ANR	5458988	Identifier	origstartpos		5458855	0					
ANR	5458989	CallExpression	"logMsg . find ( estr , 0 )"		5458855	1					
ANR	5458990	Callee	logMsg . find		5458855	0					
ANR	5458991	MemberAccess	logMsg . find		5458855	0					
ANR	5458992	Identifier	logMsg		5458855	0					
ANR	5458993	Identifier	find		5458855	1					
ANR	5458994	ArgumentList	estr		5458855	1					
ANR	5458995	Argument	estr		5458855	0					
ANR	5458996	Identifier	estr		5458855	0					
ANR	5458997	Argument	0		5458855	1					
ANR	5458998	PrimaryExpression	0		5458855	0					
ANR	5458999	IfStatement	if ( origstartpos >= 0 )		5458855	11					
ANR	5459000	Condition	origstartpos >= 0		5458855	0					
ANR	5459001	RelationalExpression	origstartpos >= 0		5458855	0		>=			
ANR	5459002	Identifier	origstartpos		5458855	0					
ANR	5459003	PrimaryExpression	0		5458855	1					
ANR	5459004	CompoundStatement		42:25:1410:1410	5458855	1					
ANR	5459005	ExpressionStatement	"sendFlag = validLogMsg ( logMsg , tempMsg )"		5458855	0					
ANR	5459006	AssignmentExpression	"sendFlag = validLogMsg ( logMsg , tempMsg )"		5458855	0		=			
ANR	5459007	Identifier	sendFlag		5458855	0					
ANR	5459008	CallExpression	"validLogMsg ( logMsg , tempMsg )"		5458855	1					
ANR	5459009	Callee	validLogMsg		5458855	0					
ANR	5459010	Identifier	validLogMsg		5458855	0					
ANR	5459011	ArgumentList	logMsg		5458855	1					
ANR	5459012	Argument	logMsg		5458855	0					
ANR	5459013	Identifier	logMsg		5458855	0					
ANR	5459014	Argument	tempMsg		5458855	1					
ANR	5459015	Identifier	tempMsg		5458855	0					
ANR	5459016	ElseStatement	else		5458855	0					
ANR	5459017	CompoundStatement		46:8:1473:1473	5458855	0					
ANR	5459018	ExpressionStatement	sendFlag = false		5458855	0					
ANR	5459019	AssignmentExpression	sendFlag = false		5458855	0		=			
ANR	5459020	Identifier	sendFlag		5458855	0					
ANR	5459021	Identifier	false		5458855	1					
ANR	5459022	ExpressionStatement	"cout << ""Error: Current message is not a valid condor Log Message!"" << endl"		5458855	1					
ANR	5459023	ShiftExpression	"cout << ""Error: Current message is not a valid condor Log Message!"" << endl"		5458855	0		<<			
ANR	5459024	Identifier	cout		5458855	0					
ANR	5459025	ShiftExpression	"""Error: Current message is not a valid condor Log Message!"" << endl"		5458855	1		<<			
ANR	5459026	PrimaryExpression	"""Error: Current message is not a valid condor Log Message!"""		5458855	0					
ANR	5459027	Identifier	endl		5458855	1					
ANR	5459028	IfStatement	if ( sendFlag )		5458855	12					
ANR	5459029	Condition	sendFlag		5458855	0					
ANR	5459030	Identifier	sendFlag		5458855	0					
ANR	5459031	CompoundStatement		64:6:2291:2353	5458855	1					
ANR	5459032	ExpressionStatement	skipFlag = false		5458855	0					
ANR	5459033	AssignmentExpression	skipFlag = false		5458855	0		=			
ANR	5459034	Identifier	skipFlag		5458855	0					
ANR	5459035	Identifier	false		5458855	1					
ANR	5459036	ExpressionStatement	"cout << ""\\npublish_messages(): RESULT => send msg TRUE.... "" << endl"		5458855	1					
ANR	5459037	ShiftExpression	"cout << ""\\npublish_messages(): RESULT => send msg TRUE.... "" << endl"		5458855	0		<<			
ANR	5459038	Identifier	cout		5458855	0					
ANR	5459039	ShiftExpression	"""\\npublish_messages(): RESULT => send msg TRUE.... "" << endl"		5458855	1		<<			
ANR	5459040	PrimaryExpression	"""\\npublish_messages(): RESULT => send msg TRUE.... """		5458855	0					
ANR	5459041	Identifier	endl		5458855	1					
ANR	5459042	ExpressionStatement	message . setData ( message_data . str ( ) )		5458855	2					
ANR	5459043	CallExpression	message . setData ( message_data . str ( ) )		5458855	0					
ANR	5459044	Callee	message . setData		5458855	0					
ANR	5459045	MemberAccess	message . setData		5458855	0					
ANR	5459046	Identifier	message		5458855	0					
ANR	5459047	Identifier	setData		5458855	1					
ANR	5459048	ArgumentList	message_data . str ( )		5458855	1					
ANR	5459049	Argument	message_data . str ( )		5458855	0					
ANR	5459050	CallExpression	message_data . str ( )		5458855	0					
ANR	5459051	Callee	message_data . str		5458855	0					
ANR	5459052	MemberAccess	message_data . str		5458855	0					
ANR	5459053	Identifier	message_data		5458855	0					
ANR	5459054	Identifier	str		5458855	1					
ANR	5459055	ArgumentList			5458855	1					
ANR	5459056	ExpressionStatement	"async ( session ) . messageTransfer ( arg :: content = message , arg :: destination = ""amq.topic"" )"		5458855	3					
ANR	5459057	CallExpression	"async ( session ) . messageTransfer ( arg :: content = message , arg :: destination = ""amq.topic"" )"		5458855	0					
ANR	5459058	Callee	async ( session ) . messageTransfer		5458855	0					
ANR	5459059	MemberAccess	async ( session ) . messageTransfer		5458855	0					
ANR	5459060	CallExpression	async ( session )		5458855	0					
ANR	5459061	Callee	async		5458855	0					
ANR	5459062	Identifier	async		5458855	0					
ANR	5459063	ArgumentList	session		5458855	1					
ANR	5459064	Argument	session		5458855	0					
ANR	5459065	Identifier	session		5458855	0					
ANR	5459066	Identifier	messageTransfer		5458855	1					
ANR	5459067	ArgumentList	arg :: content = message		5458855	1					
ANR	5459068	Argument	arg :: content = message		5458855	0					
ANR	5459069	AssignmentExpression	arg :: content = message		5458855	0		=			
ANR	5459070	Identifier	arg :: content		5458855	0					
ANR	5459071	Identifier	message		5458855	1					
ANR	5459072	Argument	"arg :: destination = ""amq.topic"""		5458855	1					
ANR	5459073	AssignmentExpression	"arg :: destination = ""amq.topic"""		5458855	0		=			
ANR	5459074	Identifier	arg :: destination		5458855	0					
ANR	5459075	PrimaryExpression	"""amq.topic"""		5458855	1					
ANR	5459076	IdentifierDeclStatement	"bool stateUpFlag = updateState ( stateBuf , log , persistFile , 0 , 1 , 0 ) ;"		5458855	4					
ANR	5459077	IdentifierDecl	"stateUpFlag = updateState ( stateBuf , log , persistFile , 0 , 1 , 0 )"		5458855	0					
ANR	5459078	IdentifierDeclType	bool		5458855	0					
ANR	5459079	Identifier	stateUpFlag		5458855	1					
ANR	5459080	AssignmentExpression	"stateUpFlag = updateState ( stateBuf , log , persistFile , 0 , 1 , 0 )"		5458855	2		=			
ANR	5459081	Identifier	stateUpFlag		5458855	0					
ANR	5459082	CallExpression	"updateState ( stateBuf , log , persistFile , 0 , 1 , 0 )"		5458855	1					
ANR	5459083	Callee	updateState		5458855	0					
ANR	5459084	Identifier	updateState		5458855	0					
ANR	5459085	ArgumentList	stateBuf		5458855	1					
ANR	5459086	Argument	stateBuf		5458855	0					
ANR	5459087	Identifier	stateBuf		5458855	0					
ANR	5459088	Argument	log		5458855	1					
ANR	5459089	Identifier	log		5458855	0					
ANR	5459090	Argument	persistFile		5458855	2					
ANR	5459091	Identifier	persistFile		5458855	0					
ANR	5459092	Argument	0		5458855	3					
ANR	5459093	PrimaryExpression	0		5458855	0					
ANR	5459094	Argument	1		5458855	4					
ANR	5459095	PrimaryExpression	1		5458855	0					
ANR	5459096	Argument	0		5458855	5					
ANR	5459097	PrimaryExpression	0		5458855	0					
ANR	5459098	IfStatement	if ( stateUpFlag )		5458855	5					
ANR	5459099	Condition	stateUpFlag		5458855	0					
ANR	5459100	Identifier	stateUpFlag		5458855	0					
ANR	5459101	CompoundStatement		65:21:2376:2376	5458855	1					
ANR	5459102	ExpressionStatement	pos = 0		5458855	0					
ANR	5459103	AssignmentExpression	pos = 0		5458855	0		=			
ANR	5459104	Identifier	pos		5458855	0					
ANR	5459105	PrimaryExpression	0		5458855	1					
ANR	5459106	ElseStatement	else		5458855	0					
ANR	5459107	CompoundStatement		75:6:2795:2857	5458855	0					
ANR	5459108	ExpressionStatement	skipFlag = true		5458855	0					
ANR	5459109	AssignmentExpression	skipFlag = true		5458855	0		=			
ANR	5459110	Identifier	skipFlag		5458855	0					
ANR	5459111	Identifier	true		5458855	1					
ANR	5459112	ExpressionStatement	"cout << ""\\npublish_messages(): RESULT => send msg FALSE.... "" << endl"		5458855	1					
ANR	5459113	ShiftExpression	"cout << ""\\npublish_messages(): RESULT => send msg FALSE.... "" << endl"		5458855	0		<<			
ANR	5459114	Identifier	cout		5458855	0					
ANR	5459115	ShiftExpression	"""\\npublish_messages(): RESULT => send msg FALSE.... "" << endl"		5458855	1		<<			
ANR	5459116	PrimaryExpression	"""\\npublish_messages(): RESULT => send msg FALSE.... """		5458855	0					
ANR	5459117	Identifier	endl		5458855	1					
ANR	5459118	IdentifierDeclStatement	"bool stateUpFlag = updateState ( stateBuf , log , persistFile , 0 , 1 , 0 ) ;"		5458855	2					
ANR	5459119	IdentifierDecl	"stateUpFlag = updateState ( stateBuf , log , persistFile , 0 , 1 , 0 )"		5458855	0					
ANR	5459120	IdentifierDeclType	bool		5458855	0					
ANR	5459121	Identifier	stateUpFlag		5458855	1					
ANR	5459122	AssignmentExpression	"stateUpFlag = updateState ( stateBuf , log , persistFile , 0 , 1 , 0 )"		5458855	2		=			
ANR	5459123	Identifier	stateUpFlag		5458855	0					
ANR	5459124	CallExpression	"updateState ( stateBuf , log , persistFile , 0 , 1 , 0 )"		5458855	1					
ANR	5459125	Callee	updateState		5458855	0					
ANR	5459126	Identifier	updateState		5458855	0					
ANR	5459127	ArgumentList	stateBuf		5458855	1					
ANR	5459128	Argument	stateBuf		5458855	0					
ANR	5459129	Identifier	stateBuf		5458855	0					
ANR	5459130	Argument	log		5458855	1					
ANR	5459131	Identifier	log		5458855	0					
ANR	5459132	Argument	persistFile		5458855	2					
ANR	5459133	Identifier	persistFile		5458855	0					
ANR	5459134	Argument	0		5458855	3					
ANR	5459135	PrimaryExpression	0		5458855	0					
ANR	5459136	Argument	1		5458855	4					
ANR	5459137	PrimaryExpression	1		5458855	0					
ANR	5459138	Argument	0		5458855	5					
ANR	5459139	PrimaryExpression	0		5458855	0					
ANR	5459140	IfStatement	if ( stateUpFlag )		5458855	3					
ANR	5459141	Condition	stateUpFlag		5458855	0					
ANR	5459142	Identifier	stateUpFlag		5458855	0					
ANR	5459143	CompoundStatement		76:21:2880:2880	5458855	1					
ANR	5459144	ExpressionStatement	pos = 0		5458855	0					
ANR	5459145	AssignmentExpression	pos = 0		5458855	0		=			
ANR	5459146	Identifier	pos		5458855	0					
ANR	5459147	PrimaryExpression	0		5458855	1					
ANR	5459148	ExpressionStatement	session . close ( )		5458855	13					
ANR	5459149	CallExpression	session . close ( )		5458855	0					
ANR	5459150	Callee	session . close		5458855	0					
ANR	5459151	MemberAccess	session . close		5458855	0					
ANR	5459152	Identifier	session		5458855	0					
ANR	5459153	Identifier	close		5458855	1					
ANR	5459154	ArgumentList			5458855	1					
ANR	5459155	ExpressionStatement	connection . close ( )		5458855	14					
ANR	5459156	CallExpression	connection . close ( )		5458855	0					
ANR	5459157	Callee	connection . close		5458855	0					
ANR	5459158	MemberAccess	connection . close		5458855	0					
ANR	5459159	Identifier	connection		5458855	0					
ANR	5459160	Identifier	close		5458855	1					
ANR	5459161	ArgumentList			5458855	1					
ANR	5459162	CatchList			5458855	1					
ANR	5459163	CatchStatement	catch ( const std :: exception & error )		5458855	0					
ANR	5459164	Identifier	error		5458855	0					
ANR	5459165	CompoundStatement		83:39:3076:3076	5458855	1					
ANR	5459166	ExpressionStatement	std :: cout << error . what ( ) << std :: endl	568:4:16055:16093	5458855	0	True				
ANR	5459167	ShiftExpression	std :: cout << error . what ( ) << std :: endl		5458855	0		<<			
ANR	5459168	Identifier	std :: cout		5458855	0					
ANR	5459169	ShiftExpression	error . what ( ) << std :: endl		5458855	1		<<			
ANR	5459170	CallExpression	error . what ( )		5458855	0					
ANR	5459171	Callee	error . what		5458855	0					
ANR	5459172	MemberAccess	error . what		5458855	0					
ANR	5459173	Identifier	error		5458855	0					
ANR	5459174	Identifier	what		5458855	1					
ANR	5459175	ArgumentList			5458855	1					
ANR	5459176	Identifier	std :: endl		5458855	1					
ANR	5459177	ReturnType	void		5458855	1					
ANR	5459178	Identifier	ClientPub :: publish_messages		5458855	2					
ANR	5459179	ParameterList	"string logMsg , char * persistFile"		5458855	3					
ANR	5459180	Parameter	string logMsg	484:33:12939:12951	5458855	0	True				
ANR	5459181	ParameterType	string		5458855	0					
ANR	5459182	Identifier	logMsg		5458855	1					
ANR	5459183	Parameter	char * persistFile	484:47:12953:12969	5458855	1	True				
ANR	5459184	ParameterType	char *		5458855	0					
ANR	5459185	Identifier	persistFile		5458855	1					
ANR	5459186	CFGEntryNode	ENTRY		5458855		True				
ANR	5459187	CFGExitNode	EXIT		5458855		True				
ANR	5459188	CFGErrorNode	ERROR		5458855		True				
ANR	5459189	Symbol	sendFlag		5458855						
ANR	5459190	Symbol	persistFile		5458855						
ANR	5459191	Symbol	false		5458855						
ANR	5459192	Symbol	logMsg		5458855						
ANR	5459193	Symbol	connection		5458855						
ANR	5459194	DeclStmt									
ANR	5459195	Decl							ifstream	ifstream	dbRFile
ANR	5459196	DeclStmt									
ANR	5459197	Decl							ofstream	ofstream	dbWFileTemp
ANR	5459198	DeclStmt									
ANR	5459199	Decl							fstream	fstream	dbWFile
ANR	5459200	DeclStmt									
ANR	5459201	Decl							ifstream	ifstream	dbSRFile
ANR	5459202	DeclStmt									
ANR	5459203	Decl							ifstream	ifstream	pRFile
ANR	5459204	DeclStmt									
ANR	5459205	Decl							ifstream	ifstream	pTempFile
ANR	5459206	DeclStmt									
ANR	5459207	Decl							ifstream	ifstream	metaRFile
ANR	5459208	DeclStmt									
ANR	5459209	Decl							ofstream	ofstream	dbSWFile
ANR	5459210	DeclStmt									
ANR	5459211	Decl							ofstream	ofstream	metaWFile
ANR	5459212	DeclStmt									
ANR	5459213	Decl							ofstream	ofstream	stateBufFile
ANR	5459214	DeclStmt									
ANR	5459215	Decl							ofstream	ofstream	eFile
ANR	5459216	DeclStmt									
ANR	5459217	Decl							ofstream	ofstream	adFile
ANR	5459218	DeclStmt									
ANR	5459219	Decl							string	string	error
ANR	5459220	DeclStmt									
ANR	5459221	Decl							ReadUserLog :: FileState	ReadUserLog :: FileState	otherStateBuf
ANR	5459222	DeclStmt									
ANR	5459223	Decl							ReadUserLog :: FileState	ReadUserLog :: FileState	tempStateBuf
ANR	5459224	DeclStmt									
ANR	5459225	Decl							long	long	missedEventCnt
ANR	5459226	DeclStmt									
ANR	5459227	Decl							bool	bool	evnDiffFlag
ANR	5459228	DeclStmt									
ANR	5459229	Decl							char	char *	errorFile
ANR	5459230	DeclStmt									
ANR	5459231	Decl							int	int	eventNum
ANR	5459232	DeclStmt									
ANR	5459233	Decl							ULogEvent	ULogEvent *	event
ANR	5459234	DeclStmt									
ANR	5459235	Decl							int	int	msgId
ANR	5459236	DeclStmt									
ANR	5459237	Decl							ULogEventOutcome	ULogEventOutcome	outCome
ANR	5459238	DeclStmt									
ANR	5459239	Decl							std :: ostringstream	std :: ostringstream	missedEStr
ANR	5459240	DeclStmt									
ANR	5459241	Decl							std :: ostringstream	std :: ostringstream	mid
ANR	5459242	DeclStmt									
ANR	5459243	Decl							std :: ostringstream	std :: ostringstream	fid
ANR	5459244	DeclStmt									
ANR	5459245	Decl							string	string	logStr
ANR	5459246	DeclStmt									
ANR	5459247	Decl							const ReadUserLogStateAccess	const ReadUserLogStateAccess	lsa
ANR	5459248	DeclStmt									
ANR	5459249	Decl							unsigned long	unsigned long	testId
ANR	5459250	DeclStmt									
ANR	5459251	Decl							unsigned long	unsigned long	testId1
ANR	5459252	DeclStmt									
ANR	5459253	Decl							int	int	tlen
ANR	5459254	DeclStmt									
ANR	5459255	Decl							char	char [ 128 ]	tbuf
ANR	5459256	DeclStmt									
ANR	5459257	Decl							bool	bool	tf
ANR	5459258	DeclStmt									
ANR	5459259	Decl							const ReadUserLogStateAccess	const ReadUserLogStateAccess	otherLSA
ANR	5459260	DeclStmt									
ANR	5459261	Decl							const ReadUserLogStateAccess	const ReadUserLogStateAccess	thisLSA
ANR	5459262	DeclStmt									
ANR	5459263	Decl							string	string	mcnt
ANR	5459264	DeclStmt									
ANR	5459265	Decl							int	int	cint
ANR	5459266	DeclStmt									
ANR	5459267	Decl							string	string	eStr
ANR	5459268	DeclStmt									
ANR	5459269	Decl							string	string	eStr
ANR	5459270	Function	main	712:0:20264:21047							
ANR	5459271	FunctionDef	"main (int argc , char * argv [ ])"		5459270	0					
ANR	5459272	CompoundStatement		712:32:20296:21047	5459270	0					
ANR	5459273	IfStatement	if ( argc < 3 )		5459270	0					
ANR	5459274	Condition	argc < 3	713:5:20303:20310	5459270	0	True				
ANR	5459275	RelationalExpression	argc < 3		5459270	0		<			
ANR	5459276	Identifier	argc		5459270	0					
ANR	5459277	PrimaryExpression	3		5459270	1					
ANR	5459278	CompoundStatement		2:15:16:16	5459270	1					
ANR	5459279	ExpressionStatement	"cout << ""\\n Insufficient input"" << endl"	714:4:20319:20356	5459270	0	True				
ANR	5459280	ShiftExpression	"cout << ""\\n Insufficient input"" << endl"		5459270	0		<<			
ANR	5459281	Identifier	cout		5459270	0					
ANR	5459282	ShiftExpression	"""\\n Insufficient input"" << endl"		5459270	1		<<			
ANR	5459283	PrimaryExpression	"""\\n Insufficient input"""		5459270	0					
ANR	5459284	Identifier	endl		5459270	1					
ANR	5459285	ExpressionStatement	exit ( 1 )	715:4:20362:20369	5459270	1	True				
ANR	5459286	CallExpression	exit ( 1 )		5459270	0					
ANR	5459287	Callee	exit		5459270	0					
ANR	5459288	Identifier	exit		5459270	0					
ANR	5459289	ArgumentList	1		5459270	1					
ANR	5459290	Argument	1		5459270	0					
ANR	5459291	PrimaryExpression	1		5459270	0					
ANR	5459292	IdentifierDeclStatement	char * inputFName = argv [ 1 ] ;	717:2:20377:20403	5459270	1	True				
ANR	5459293	IdentifierDecl	* inputFName = argv [ 1 ]		5459270	0					
ANR	5459294	IdentifierDeclType	char *		5459270	0					
ANR	5459295	Identifier	inputFName		5459270	1					
ANR	5459296	AssignmentExpression	* inputFName = argv [ 1 ]		5459270	2		=			
ANR	5459297	Identifier	inputFName		5459270	0					
ANR	5459298	ArrayIndexing	argv [ 1 ]		5459270	1					
ANR	5459299	Identifier	argv		5459270	0					
ANR	5459300	PrimaryExpression	1		5459270	1					
ANR	5459301	IdentifierDeclStatement	char * persistFName = argv [ 2 ] ;	718:2:20407:20435	5459270	2	True				
ANR	5459302	IdentifierDecl	* persistFName = argv [ 2 ]		5459270	0					
ANR	5459303	IdentifierDeclType	char *		5459270	0					
ANR	5459304	Identifier	persistFName		5459270	1					
ANR	5459305	AssignmentExpression	* persistFName = argv [ 2 ]		5459270	2		=			
ANR	5459306	Identifier	persistFName		5459270	0					
ANR	5459307	ArrayIndexing	argv [ 2 ]		5459270	1					
ANR	5459308	Identifier	argv		5459270	0					
ANR	5459309	PrimaryExpression	2		5459270	1					
ANR	5459310	IdentifierDeclStatement	int eventTrack = 1 ;	719:2:20439:20457	5459270	3	True				
ANR	5459311	IdentifierDecl	eventTrack = 1		5459270	0					
ANR	5459312	IdentifierDeclType	int		5459270	0					
ANR	5459313	Identifier	eventTrack		5459270	1					
ANR	5459314	AssignmentExpression	eventTrack = 1		5459270	2		=			
ANR	5459315	Identifier	eventTrack		5459270	0					
ANR	5459316	PrimaryExpression	1		5459270	1					
ANR	5459317	IdentifierDeclStatement	int erotate = 10 ;	720:2:20461:20477	5459270	4	True				
ANR	5459318	IdentifierDecl	erotate = 10		5459270	0					
ANR	5459319	IdentifierDeclType	int		5459270	0					
ANR	5459320	Identifier	erotate		5459270	1					
ANR	5459321	AssignmentExpression	erotate = 10		5459270	2		=			
ANR	5459322	Identifier	erotate		5459270	0					
ANR	5459323	PrimaryExpression	10		5459270	1					
ANR	5459324	IfStatement	if ( argc > 3 )		5459270	5					
ANR	5459325	Condition	argc > 3	721:6:20485:20492	5459270	0	True				
ANR	5459326	RelationalExpression	argc > 3		5459270	0		>			
ANR	5459327	Identifier	argc		5459270	0					
ANR	5459328	PrimaryExpression	3		5459270	1					
ANR	5459329	ExpressionStatement	erotate = atoi ( argv [ 4 ] )	722:3:20498:20521	5459270	1	True				
ANR	5459330	AssignmentExpression	erotate = atoi ( argv [ 4 ] )		5459270	0		=			
ANR	5459331	Identifier	erotate		5459270	0					
ANR	5459332	CallExpression	atoi ( argv [ 4 ] )		5459270	1					
ANR	5459333	Callee	atoi		5459270	0					
ANR	5459334	Identifier	atoi		5459270	0					
ANR	5459335	ArgumentList	argv [ 4 ]		5459270	1					
ANR	5459336	Argument	argv [ 4 ]		5459270	0					
ANR	5459337	ArrayIndexing	argv [ 4 ]		5459270	0					
ANR	5459338	Identifier	argv		5459270	0					
ANR	5459339	PrimaryExpression	4		5459270	1					
ANR	5459340	IdentifierDeclStatement	int excludeOn = 0 ;	723:2:20525:20542	5459270	6	True				
ANR	5459341	IdentifierDecl	excludeOn = 0		5459270	0					
ANR	5459342	IdentifierDeclType	int		5459270	0					
ANR	5459343	Identifier	excludeOn		5459270	1					
ANR	5459344	AssignmentExpression	excludeOn = 0		5459270	2		=			
ANR	5459345	Identifier	excludeOn		5459270	0					
ANR	5459346	PrimaryExpression	0		5459270	1					
ANR	5459347	IfStatement	if ( argc > 4 )		5459270	7					
ANR	5459348	Condition	argc > 4	724:6:20550:20557	5459270	0	True				
ANR	5459349	RelationalExpression	argc > 4		5459270	0		>			
ANR	5459350	Identifier	argc		5459270	0					
ANR	5459351	PrimaryExpression	4		5459270	1					
ANR	5459352	ExpressionStatement	excludeOn = atoi ( argv [ 5 ] )	725:3:20563:20588	5459270	1	True				
ANR	5459353	AssignmentExpression	excludeOn = atoi ( argv [ 5 ] )		5459270	0		=			
ANR	5459354	Identifier	excludeOn		5459270	0					
ANR	5459355	CallExpression	atoi ( argv [ 5 ] )		5459270	1					
ANR	5459356	Callee	atoi		5459270	0					
ANR	5459357	Identifier	atoi		5459270	0					
ANR	5459358	ArgumentList	argv [ 5 ]		5459270	1					
ANR	5459359	Argument	argv [ 5 ]		5459270	0					
ANR	5459360	ArrayIndexing	argv [ 5 ]		5459270	0					
ANR	5459361	Identifier	argv		5459270	0					
ANR	5459362	PrimaryExpression	5		5459270	1					
ANR	5459363	IdentifierDeclStatement	char * host = NULL ;	726:2:20592:20609	5459270	8	True				
ANR	5459364	IdentifierDecl	* host = NULL		5459270	0					
ANR	5459365	IdentifierDeclType	char *		5459270	0					
ANR	5459366	Identifier	host		5459270	1					
ANR	5459367	AssignmentExpression	* host = NULL		5459270	2		=			
ANR	5459368	Identifier	NULL		5459270	0					
ANR	5459369	Identifier	NULL		5459270	1					
ANR	5459370	IfStatement	if ( argc > 5 )		5459270	9					
ANR	5459371	Condition	argc > 5	727:6:20617:20624	5459270	0	True				
ANR	5459372	RelationalExpression	argc > 5		5459270	0		>			
ANR	5459373	Identifier	argc		5459270	0					
ANR	5459374	PrimaryExpression	5		5459270	1					
ANR	5459375	ExpressionStatement	host = argv [ 6 ]	728:3:20630:20644	5459270	1	True				
ANR	5459376	AssignmentExpression	host = argv [ 6 ]		5459270	0		=			
ANR	5459377	Identifier	host		5459270	0					
ANR	5459378	ArrayIndexing	argv [ 6 ]		5459270	1					
ANR	5459379	Identifier	argv		5459270	0					
ANR	5459380	PrimaryExpression	6		5459270	1					
ANR	5459381	IdentifierDeclStatement	bool excludeFlag = false ;	729:2:20648:20672	5459270	10	True				
ANR	5459382	IdentifierDecl	excludeFlag = false		5459270	0					
ANR	5459383	IdentifierDeclType	bool		5459270	0					
ANR	5459384	Identifier	excludeFlag		5459270	1					
ANR	5459385	AssignmentExpression	excludeFlag = false		5459270	2		=			
ANR	5459386	Identifier	false		5459270	0					
ANR	5459387	Identifier	false		5459270	1					
ANR	5459388	IfStatement	if ( excludeOn == 1 )		5459270	11					
ANR	5459389	Condition	excludeOn == 1	730:6:20680:20691	5459270	0	True				
ANR	5459390	EqualityExpression	excludeOn == 1		5459270	0		==			
ANR	5459391	Identifier	excludeOn		5459270	0					
ANR	5459392	PrimaryExpression	1		5459270	1					
ANR	5459393	ExpressionStatement	excludeFlag = true	731:4:20698:20716	5459270	1	True				
ANR	5459394	AssignmentExpression	excludeFlag = true		5459270	0		=			
ANR	5459395	Identifier	excludeFlag		5459270	0					
ANR	5459396	Identifier	true		5459270	1					
ANR	5459397	IdentifierDeclStatement	"ClientPub * cpObj = new ClientPub ( persistFName , inputFName , erotate , host ) ;"	732:2:20720:20791	5459270	12	True				
ANR	5459398	IdentifierDecl	"* cpObj = new ClientPub ( persistFName , inputFName , erotate , host )"		5459270	0					
ANR	5459399	IdentifierDeclType	ClientPub *		5459270	0					
ANR	5459400	Identifier	cpObj		5459270	1					
ANR	5459401	AssignmentExpression	"* cpObj = new ClientPub ( persistFName , inputFName , erotate , host )"		5459270	2		=			
ANR	5459402	Identifier	cpObj		5459270	0					
ANR	5459403	Expression	"persistFName , inputFName , erotate , host"		5459270	1					
ANR	5459404	Identifier	persistFName		5459270	0					
ANR	5459405	Expression	"inputFName , erotate , host"		5459270	1					
ANR	5459406	Identifier	inputFName		5459270	0					
ANR	5459407	Expression	"erotate , host"		5459270	1					
ANR	5459408	Identifier	erotate		5459270	0					
ANR	5459409	Identifier	host		5459270	1					
ANR	5459410	IfStatement	if ( cpObj -> port < 0 )		5459270	13					
ANR	5459411	Condition	cpObj -> port < 0	733:6:20799:20813	5459270	0	True				
ANR	5459412	RelationalExpression	cpObj -> port < 0		5459270	0		<			
ANR	5459413	PtrMemberAccess	cpObj -> port		5459270	0					
ANR	5459414	Identifier	cpObj		5459270	0					
ANR	5459415	Identifier	port		5459270	1					
ANR	5459416	PrimaryExpression	0		5459270	1					
ANR	5459417	CompoundStatement		22:23:519:519	5459270	1					
ANR	5459418	ExpressionStatement	"printf ( ""It seems as if no qpid daemon is running ... Exiting.\\n"" )"	734:3:20821:20886	5459270	0	True				
ANR	5459419	CallExpression	"printf ( ""It seems as if no qpid daemon is running ... Exiting.\\n"" )"		5459270	0					
ANR	5459420	Callee	printf		5459270	0					
ANR	5459421	Identifier	printf		5459270	0					
ANR	5459422	ArgumentList	"""It seems as if no qpid daemon is running ... Exiting.\\n"""		5459270	1					
ANR	5459423	Argument	"""It seems as if no qpid daemon is running ... Exiting.\\n"""		5459270	0					
ANR	5459424	PrimaryExpression	"""It seems as if no qpid daemon is running ... Exiting.\\n"""		5459270	0					
ANR	5459425	Statement	delete	735:3:20891:20896	5459270	1	True				
ANR	5459426	ExpressionStatement	cpObj	735:10:20898:20903	5459270	2	True				
ANR	5459427	Identifier	cpObj		5459270	0					
ANR	5459428	ReturnStatement	return 0 ;	736:3:20908:20916	5459270	3	True				
ANR	5459429	PrimaryExpression	0		5459270	0					
ANR	5459430	ExpressionStatement	"cpObj -> initLoadMsg ( ""LRM.dat"" )"	738:2:20924:20954	5459270	14	True				
ANR	5459431	CallExpression	"cpObj -> initLoadMsg ( ""LRM.dat"" )"		5459270	0					
ANR	5459432	Callee	cpObj -> initLoadMsg		5459270	0					
ANR	5459433	PtrMemberAccess	cpObj -> initLoadMsg		5459270	0					
ANR	5459434	Identifier	cpObj		5459270	0					
ANR	5459435	Identifier	initLoadMsg		5459270	1					
ANR	5459436	ArgumentList	"""LRM.dat"""		5459270	1					
ANR	5459437	Argument	"""LRM.dat"""		5459270	0					
ANR	5459438	PrimaryExpression	"""LRM.dat"""		5459270	0					
ANR	5459439	ExpressionStatement	"cpObj -> readLog ( persistFName , eventTrack , erotate , excludeFlag )"	739:2:20958:21017	5459270	15	True				
ANR	5459440	CallExpression	"cpObj -> readLog ( persistFName , eventTrack , erotate , excludeFlag )"		5459270	0					
ANR	5459441	Callee	cpObj -> readLog		5459270	0					
ANR	5459442	PtrMemberAccess	cpObj -> readLog		5459270	0					
ANR	5459443	Identifier	cpObj		5459270	0					
ANR	5459444	Identifier	readLog		5459270	1					
ANR	5459445	ArgumentList	persistFName		5459270	1					
ANR	5459446	Argument	persistFName		5459270	0					
ANR	5459447	Identifier	persistFName		5459270	0					
ANR	5459448	Argument	eventTrack		5459270	1					
ANR	5459449	Identifier	eventTrack		5459270	0					
ANR	5459450	Argument	erotate		5459270	2					
ANR	5459451	Identifier	erotate		5459270	0					
ANR	5459452	Argument	excludeFlag		5459270	3					
ANR	5459453	Identifier	excludeFlag		5459270	0					
ANR	5459454	Statement	delete	740:2:21021:21026	5459270	16	True				
ANR	5459455	ExpressionStatement	cpObj	740:9:21028:21033	5459270	17	True				
ANR	5459456	Identifier	cpObj		5459270	0					
ANR	5459457	ReturnStatement	return 0 ;	741:2:21037:21045	5459270	18	True				
ANR	5459458	PrimaryExpression	0		5459270	0					
ANR	5459459	ReturnType	int		5459270	1					
ANR	5459460	Identifier	main		5459270	2					
ANR	5459461	ParameterList	"int argc , char * argv [ ]"		5459270	3					
ANR	5459462	Parameter	int argc	712:9:20273:20280	5459270	0	True				
ANR	5459463	ParameterType	int		5459270	0					
ANR	5459464	Identifier	argc		5459270	1					
ANR	5459465	Parameter	char * argv [ ]	712:19:20283:20293	5459270	1	True				
ANR	5459466	ParameterType	char * [ ]		5459270	0					
ANR	5459467	Identifier	argv		5459270	1					
ANR	5459468	CFGEntryNode	ENTRY		5459270		True				
ANR	5459469	CFGExitNode	EXIT		5459270		True				
ANR	5459470	Symbol	argc		5459270						
ANR	5459471	Symbol	atoi		5459270						
ANR	5459472	Symbol	eventTrack		5459270						
ANR	5459473	Symbol	persistFName		5459270						
ANR	5459474	Symbol	NULL		5459270						
ANR	5459475	Symbol	false		5459270						
ANR	5459476	Symbol	* argv		5459270						
ANR	5459477	Symbol	argv		5459270						
ANR	5459478	Symbol	excludeFlag		5459270						
ANR	5459479	Symbol	cpObj		5459270						
ANR	5459480	Symbol	erotate		5459270						
ANR	5459481	Symbol	inputFName		5459270						
ANR	5459482	Symbol	cpObj -> port		5459270						
ANR	5459483	Symbol	host		5459270						
ANR	5459484	Symbol	true		5459270						
ANR	5459485	Symbol	excludeOn		5459270						
ANR	5459486	Symbol	* cpObj		5459270						
