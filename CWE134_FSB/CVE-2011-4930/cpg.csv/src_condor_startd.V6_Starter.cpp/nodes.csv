command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3915031	File	data/converged/CVE-2011-4930_htcondor/src_condor_startd.V6_Starter.cpp								
ANR	3915032	DeclStmt									
ANR	3915033	Decl							extern dynuser	extern dynuser *	myDynuser
ANR	3915034	Function	Starter :: Starter	49:0:1471:1557							
ANR	3915035	FunctionDef	Starter :: Starter ()		3915034	0					
ANR	3915036	CompoundStatement		50:0:1490:1557	3915034	0					
ANR	3915037	ExpressionStatement	s_ad = NULL	51:1:1493:1504	3915034	0	True				
ANR	3915038	AssignmentExpression	s_ad = NULL		3915034	0		=			
ANR	3915039	Identifier	s_ad		3915034	0					
ANR	3915040	Identifier	NULL		3915034	1					
ANR	3915041	ExpressionStatement	s_path = NULL	52:1:1507:1520	3915034	1	True				
ANR	3915042	AssignmentExpression	s_path = NULL		3915034	0		=			
ANR	3915043	Identifier	s_path		3915034	0					
ANR	3915044	Identifier	NULL		3915034	1					
ANR	3915045	ExpressionStatement	s_is_dc = false	53:1:1523:1538	3915034	2	True				
ANR	3915046	AssignmentExpression	s_is_dc = false		3915034	0		=			
ANR	3915047	Identifier	s_is_dc		3915034	0					
ANR	3915048	Identifier	false		3915034	1					
ANR	3915049	ExpressionStatement	initRunData ( )	55:1:1542:1555	3915034	3	True				
ANR	3915050	CallExpression	initRunData ( )		3915034	0					
ANR	3915051	Callee	initRunData		3915034	0					
ANR	3915052	Identifier	initRunData		3915034	0					
ANR	3915053	ArgumentList			3915034	1					
ANR	3915054	Identifier	Starter :: Starter		3915034	1					
ANR	3915055	ParameterList			3915034	2					
ANR	3915056	CFGEntryNode	ENTRY		3915034		True				
ANR	3915057	CFGExitNode	EXIT		3915034		True				
ANR	3915058	Symbol	NULL		3915034						
ANR	3915059	Symbol	false		3915034						
ANR	3915060	Symbol	s_ad		3915034						
ANR	3915061	Symbol	s_path		3915034						
ANR	3915062	Symbol	s_is_dc		3915034						
ANR	3915063	Function	Starter :: Starter	59:0:1561:1980							
ANR	3915064	FunctionDef	Starter :: Starter (const Starter & s)		3915063	0					
ANR	3915065	CompoundStatement		61:0:1614:1980	3915063	0					
ANR	3915066	IfStatement	if ( s . s_claim || s . s_pid || s . s_birthdate || s . s_port1 >= 0 || s . s_port2 >= 0 )		3915063	0					
ANR	3915067	Condition	s . s_claim || s . s_pid || s . s_birthdate || s . s_port1 >= 0 || s . s_port2 >= 0	62:5:1621:1698	3915063	0	True				
ANR	3915068	OrExpression	s . s_claim || s . s_pid || s . s_birthdate || s . s_port1 >= 0 || s . s_port2 >= 0		3915063	0		||			
ANR	3915069	MemberAccess	s . s_claim		3915063	0					
ANR	3915070	Identifier	s		3915063	0					
ANR	3915071	Identifier	s_claim		3915063	1					
ANR	3915072	OrExpression	s . s_pid || s . s_birthdate || s . s_port1 >= 0 || s . s_port2 >= 0		3915063	1		||			
ANR	3915073	MemberAccess	s . s_pid		3915063	0					
ANR	3915074	Identifier	s		3915063	0					
ANR	3915075	Identifier	s_pid		3915063	1					
ANR	3915076	OrExpression	s . s_birthdate || s . s_port1 >= 0 || s . s_port2 >= 0		3915063	1		||			
ANR	3915077	MemberAccess	s . s_birthdate		3915063	0					
ANR	3915078	Identifier	s		3915063	0					
ANR	3915079	Identifier	s_birthdate		3915063	1					
ANR	3915080	OrExpression	s . s_port1 >= 0 || s . s_port2 >= 0		3915063	1		||			
ANR	3915081	RelationalExpression	s . s_port1 >= 0		3915063	0		>=			
ANR	3915082	MemberAccess	s . s_port1		3915063	0					
ANR	3915083	Identifier	s		3915063	0					
ANR	3915084	Identifier	s_port1		3915063	1					
ANR	3915085	PrimaryExpression	0		3915063	1					
ANR	3915086	RelationalExpression	s . s_port2 >= 0		3915063	1		>=			
ANR	3915087	MemberAccess	s . s_port2		3915063	0					
ANR	3915088	Identifier	s		3915063	0					
ANR	3915089	Identifier	s_port2		3915063	1					
ANR	3915090	PrimaryExpression	0		3915063	1					
ANR	3915091	CompoundStatement		4:1:88:88	3915063	1					
ANR	3915092	ExpressionStatement	"EXCEPT ( ""Trying to copy a Starter object that's already running!"" )"	65:2:1707:1774	3915063	0	True				
ANR	3915093	CallExpression	"EXCEPT ( ""Trying to copy a Starter object that's already running!"" )"		3915063	0					
ANR	3915094	Callee	EXCEPT		3915063	0					
ANR	3915095	Identifier	EXCEPT		3915063	0					
ANR	3915096	ArgumentList	"""Trying to copy a Starter object that's already running!"""		3915063	1					
ANR	3915097	Argument	"""Trying to copy a Starter object that's already running!"""		3915063	0					
ANR	3915098	PrimaryExpression	"""Trying to copy a Starter object that's already running!"""		3915063	0					
ANR	3915099	IfStatement	if ( s . s_ad )		3915063	1					
ANR	3915100	Condition	s . s_ad	68:5:1785:1790	3915063	0	True				
ANR	3915101	MemberAccess	s . s_ad		3915063	0					
ANR	3915102	Identifier	s		3915063	0					
ANR	3915103	Identifier	s_ad		3915063	1					
ANR	3915104	CompoundStatement		8:14:179:179	3915063	1					
ANR	3915105	ExpressionStatement	s_ad = new ClassAd ( * ( s . s_ad ) )	69:2:1798:1829	3915063	0	True				
ANR	3915106	AssignmentExpression	s_ad = new ClassAd ( * ( s . s_ad ) )		3915063	0		=			
ANR	3915107	Identifier	s_ad		3915063	0					
ANR	3915108	UnaryOperationExpression	* ( s . s_ad )		3915063	1					
ANR	3915109	UnaryOperator	*		3915063	0					
ANR	3915110	MemberAccess	s . s_ad		3915063	1					
ANR	3915111	Identifier	s		3915063	0					
ANR	3915112	Identifier	s_ad		3915063	1					
ANR	3915113	ElseStatement	else		3915063	0					
ANR	3915114	CompoundStatement		10:8:224:224	3915063	0					
ANR	3915115	ExpressionStatement	s_ad = NULL	71:2:1843:1854	3915063	0	True				
ANR	3915116	AssignmentExpression	s_ad = NULL		3915063	0		=			
ANR	3915117	Identifier	s_ad		3915063	0					
ANR	3915118	Identifier	NULL		3915063	1					
ANR	3915119	IfStatement	if ( s . s_path )		3915063	2					
ANR	3915120	Condition	s . s_path	74:5:1865:1872	3915063	0	True				
ANR	3915121	MemberAccess	s . s_path		3915063	0					
ANR	3915122	Identifier	s		3915063	0					
ANR	3915123	Identifier	s_path		3915063	1					
ANR	3915124	CompoundStatement		14:16:261:261	3915063	1					
ANR	3915125	ExpressionStatement	s_path = strnewp ( s . s_path )	75:2:1880:1908	3915063	0	True				
ANR	3915126	AssignmentExpression	s_path = strnewp ( s . s_path )		3915063	0		=			
ANR	3915127	Identifier	s_path		3915063	0					
ANR	3915128	CallExpression	strnewp ( s . s_path )		3915063	1					
ANR	3915129	Callee	strnewp		3915063	0					
ANR	3915130	Identifier	strnewp		3915063	0					
ANR	3915131	ArgumentList	s . s_path		3915063	1					
ANR	3915132	Argument	s . s_path		3915063	0					
ANR	3915133	MemberAccess	s . s_path		3915063	0					
ANR	3915134	Identifier	s		3915063	0					
ANR	3915135	Identifier	s_path		3915063	1					
ANR	3915136	ElseStatement	else		3915063	0					
ANR	3915137	CompoundStatement		16:8:303:303	3915063	0					
ANR	3915138	ExpressionStatement	s_path = NULL	77:2:1922:1935	3915063	0	True				
ANR	3915139	AssignmentExpression	s_path = NULL		3915063	0		=			
ANR	3915140	Identifier	s_path		3915063	0					
ANR	3915141	Identifier	NULL		3915063	1					
ANR	3915142	ExpressionStatement	s_is_dc = s . s_is_dc	80:1:1942:1961	3915063	3	True				
ANR	3915143	AssignmentExpression	s_is_dc = s . s_is_dc		3915063	0		=			
ANR	3915144	Identifier	s_is_dc		3915063	0					
ANR	3915145	MemberAccess	s . s_is_dc		3915063	1					
ANR	3915146	Identifier	s		3915063	0					
ANR	3915147	Identifier	s_is_dc		3915063	1					
ANR	3915148	ExpressionStatement	initRunData ( )	82:1:1965:1978	3915063	4	True				
ANR	3915149	CallExpression	initRunData ( )		3915063	0					
ANR	3915150	Callee	initRunData		3915063	0					
ANR	3915151	Identifier	initRunData		3915063	0					
ANR	3915152	ArgumentList			3915063	1					
ANR	3915153	Identifier	Starter :: Starter		3915063	1					
ANR	3915154	ParameterList	const Starter & s		3915063	2					
ANR	3915155	Parameter	const Starter & s	59:18:1579:1594	3915063	0	True				
ANR	3915156	ParameterType	const Starter &		3915063	0					
ANR	3915157	Identifier	s		3915063	1					
ANR	3915158	CFGEntryNode	ENTRY		3915063		True				
ANR	3915159	CFGExitNode	EXIT		3915063		True				
ANR	3915160	Symbol	NULL		3915063						
ANR	3915161	Symbol	* s . s_ad		3915063						
ANR	3915162	Symbol	s . s_port2		3915063						
ANR	3915163	Symbol	s . s_path		3915063						
ANR	3915164	Symbol	s . s_port1		3915063						
ANR	3915165	Symbol	s . s_ad		3915063						
ANR	3915166	Symbol	s . s_is_dc		3915063						
ANR	3915167	Symbol	s_is_dc		3915063						
ANR	3915168	Symbol	* ( s . s_ad )		3915063						
ANR	3915169	Symbol	s		3915063						
ANR	3915170	Symbol	s . s_birthdate		3915063						
ANR	3915171	Symbol	strnewp		3915063						
ANR	3915172	Symbol	s_ad		3915063						
ANR	3915173	Symbol	s . s_claim		3915063						
ANR	3915174	Symbol	* s		3915063						
ANR	3915175	Symbol	s_path		3915063						
ANR	3915176	Symbol	s . s_pid		3915063						
ANR	3915177	Function	Starter :: initRunData	86:0:1984:2527							
ANR	3915178	FunctionDef	Starter :: initRunData ()		3915177	0					
ANR	3915179	CompoundStatement		88:0:2019:2527	3915177	0					
ANR	3915180	ExpressionStatement	s_claim = NULL	89:1:2022:2036	3915177	0	True				
ANR	3915181	AssignmentExpression	s_claim = NULL		3915177	0		=			
ANR	3915182	Identifier	s_claim		3915177	0					
ANR	3915183	Identifier	NULL		3915177	1					
ANR	3915184	ExpressionStatement	s_pid = 0	90:1:2039:2048	3915177	1	True				
ANR	3915185	AssignmentExpression	s_pid = 0		3915177	0		=			
ANR	3915186	Identifier	s_pid		3915177	0					
ANR	3915187	PrimaryExpression	0		3915177	1					
ANR	3915188	ExpressionStatement	s_birthdate = 0	91:1:2095:2110	3915177	2	True				
ANR	3915189	AssignmentExpression	s_birthdate = 0		3915177	0		=			
ANR	3915190	Identifier	s_birthdate		3915177	0					
ANR	3915191	PrimaryExpression	0		3915177	1					
ANR	3915192	ExpressionStatement	s_kill_tid = - 1	92:1:2113:2128	3915177	3	True				
ANR	3915193	AssignmentExpression	s_kill_tid = - 1		3915177	0		=			
ANR	3915194	Identifier	s_kill_tid		3915177	0					
ANR	3915195	UnaryOperationExpression	- 1		3915177	1					
ANR	3915196	UnaryOperator	-		3915177	0					
ANR	3915197	PrimaryExpression	1		3915177	1					
ANR	3915198	ExpressionStatement	s_softkill_tid = - 1	93:1:2131:2150	3915177	4	True				
ANR	3915199	AssignmentExpression	s_softkill_tid = - 1		3915177	0		=			
ANR	3915200	Identifier	s_softkill_tid		3915177	0					
ANR	3915201	UnaryOperationExpression	- 1		3915177	1					
ANR	3915202	UnaryOperator	-		3915177	0					
ANR	3915203	PrimaryExpression	1		3915177	1					
ANR	3915204	ExpressionStatement	s_port1 = - 1	94:1:2153:2165	3915177	5	True				
ANR	3915205	AssignmentExpression	s_port1 = - 1		3915177	0		=			
ANR	3915206	Identifier	s_port1		3915177	0					
ANR	3915207	UnaryOperationExpression	- 1		3915177	1					
ANR	3915208	UnaryOperator	-		3915177	0					
ANR	3915209	PrimaryExpression	1		3915177	1					
ANR	3915210	ExpressionStatement	s_port2 = - 1	95:1:2168:2180	3915177	6	True				
ANR	3915211	AssignmentExpression	s_port2 = - 1		3915177	0		=			
ANR	3915212	Identifier	s_port2		3915177	0					
ANR	3915213	UnaryOperationExpression	- 1		3915177	1					
ANR	3915214	UnaryOperator	-		3915177	0					
ANR	3915215	PrimaryExpression	1		3915177	1					
ANR	3915216	ExpressionStatement	s_reaper_id = - 1	96:1:2183:2199	3915177	7	True				
ANR	3915217	AssignmentExpression	s_reaper_id = - 1		3915177	0		=			
ANR	3915218	Identifier	s_reaper_id		3915177	0					
ANR	3915219	UnaryOperationExpression	- 1		3915177	1					
ANR	3915220	UnaryOperator	-		3915177	0					
ANR	3915221	PrimaryExpression	1		3915177	1					
ANR	3915222	ExpressionStatement	s_is_boinc = false	99:1:2218:2236	3915177	8	True				
ANR	3915223	AssignmentExpression	s_is_boinc = false		3915177	0		=			
ANR	3915224	Identifier	s_is_boinc		3915177	0					
ANR	3915225	Identifier	false		3915177	1					
ANR	3915226	ExpressionStatement	s_job_update_sock = NULL	101:1:2263:2287	3915177	9	True				
ANR	3915227	AssignmentExpression	s_job_update_sock = NULL		3915177	0		=			
ANR	3915228	Identifier	s_job_update_sock		3915177	0					
ANR	3915229	Identifier	NULL		3915177	1					
ANR	3915230	ExpressionStatement	m_hold_job_cb = NULL	103:1:2291:2311	3915177	10	True				
ANR	3915231	AssignmentExpression	m_hold_job_cb = NULL		3915177	0		=			
ANR	3915232	Identifier	m_hold_job_cb		3915177	0					
ANR	3915233	Identifier	NULL		3915177	1					
ANR	3915234	ExpressionStatement	s_usage . max_image_size = 0	106:1:2361:2387	3915177	11	True				
ANR	3915235	AssignmentExpression	s_usage . max_image_size = 0		3915177	0		=			
ANR	3915236	MemberAccess	s_usage . max_image_size		3915177	0					
ANR	3915237	Identifier	s_usage		3915177	0					
ANR	3915238	Identifier	max_image_size		3915177	1					
ANR	3915239	PrimaryExpression	0		3915177	1					
ANR	3915240	ExpressionStatement	s_usage . num_procs = 0	107:1:2390:2411	3915177	12	True				
ANR	3915241	AssignmentExpression	s_usage . num_procs = 0		3915177	0		=			
ANR	3915242	MemberAccess	s_usage . num_procs		3915177	0					
ANR	3915243	Identifier	s_usage		3915177	0					
ANR	3915244	Identifier	num_procs		3915177	1					
ANR	3915245	PrimaryExpression	0		3915177	1					
ANR	3915246	ExpressionStatement	s_usage . percent_cpu = 0.0	108:1:2414:2439	3915177	13	True				
ANR	3915247	AssignmentExpression	s_usage . percent_cpu = 0.0		3915177	0		=			
ANR	3915248	MemberAccess	s_usage . percent_cpu		3915177	0					
ANR	3915249	Identifier	s_usage		3915177	0					
ANR	3915250	Identifier	percent_cpu		3915177	1					
ANR	3915251	PrimaryExpression	0.0		3915177	1					
ANR	3915252	ExpressionStatement	s_usage . sys_cpu_time = 0	109:1:2442:2466	3915177	14	True				
ANR	3915253	AssignmentExpression	s_usage . sys_cpu_time = 0		3915177	0		=			
ANR	3915254	MemberAccess	s_usage . sys_cpu_time		3915177	0					
ANR	3915255	Identifier	s_usage		3915177	0					
ANR	3915256	Identifier	sys_cpu_time		3915177	1					
ANR	3915257	PrimaryExpression	0		3915177	1					
ANR	3915258	ExpressionStatement	s_usage . total_image_size = 0	110:1:2469:2497	3915177	15	True				
ANR	3915259	AssignmentExpression	s_usage . total_image_size = 0		3915177	0		=			
ANR	3915260	MemberAccess	s_usage . total_image_size		3915177	0					
ANR	3915261	Identifier	s_usage		3915177	0					
ANR	3915262	Identifier	total_image_size		3915177	1					
ANR	3915263	PrimaryExpression	0		3915177	1					
ANR	3915264	ExpressionStatement	s_usage . user_cpu_time = 0	111:1:2500:2525	3915177	16	True				
ANR	3915265	AssignmentExpression	s_usage . user_cpu_time = 0		3915177	0		=			
ANR	3915266	MemberAccess	s_usage . user_cpu_time		3915177	0					
ANR	3915267	Identifier	s_usage		3915177	0					
ANR	3915268	Identifier	user_cpu_time		3915177	1					
ANR	3915269	PrimaryExpression	0		3915177	1					
ANR	3915270	ReturnType	void		3915177	1					
ANR	3915271	Identifier	Starter :: initRunData		3915177	2					
ANR	3915272	ParameterList			3915177	3					
ANR	3915273	CFGEntryNode	ENTRY		3915177		True				
ANR	3915274	CFGExitNode	EXIT		3915177		True				
ANR	3915275	Symbol	s_port2		3915177						
ANR	3915276	Symbol	NULL		3915177						
ANR	3915277	Symbol	s_kill_tid		3915177						
ANR	3915278	Symbol	s_port1		3915177						
ANR	3915279	Symbol	s_usage . percent_cpu		3915177						
ANR	3915280	Symbol	false		3915177						
ANR	3915281	Symbol	s_is_boinc		3915177						
ANR	3915282	Symbol	m_hold_job_cb		3915177						
ANR	3915283	Symbol	s_usage . max_image_size		3915177						
ANR	3915284	Symbol	s_usage . sys_cpu_time		3915177						
ANR	3915285	Symbol	s_birthdate		3915177						
ANR	3915286	Symbol	s_usage . user_cpu_time		3915177						
ANR	3915287	Symbol	s_usage . num_procs		3915177						
ANR	3915288	Symbol	s_reaper_id		3915177						
ANR	3915289	Symbol	s_job_update_sock		3915177						
ANR	3915290	Symbol	s_softkill_tid		3915177						
ANR	3915291	Symbol	s_usage . total_image_size		3915177						
ANR	3915292	Symbol	s_usage		3915177						
ANR	3915293	Symbol	s_claim		3915177						
ANR	3915294	Symbol	s_pid		3915177						
ANR	3915295	Function	Starter :: ~Starter	115:0:2531:2841							
ANR	3915296	FunctionDef	Starter :: ~Starter ()		3915295	0					
ANR	3915297	CompoundStatement		116:0:2551:2841	3915295	0					
ANR	3915298	ExpressionStatement	cancelKillTimer ( )	117:1:2554:2571	3915295	0	True				
ANR	3915299	CallExpression	cancelKillTimer ( )		3915295	0					
ANR	3915300	Callee	cancelKillTimer		3915295	0					
ANR	3915301	Identifier	cancelKillTimer		3915295	0					
ANR	3915302	ArgumentList			3915295	1					
ANR	3915303	IfStatement	if ( s_path )		3915295	1					
ANR	3915304	Condition	s_path	119:5:2579:2584	3915295	0	True				
ANR	3915305	Identifier	s_path		3915295	0					
ANR	3915306	CompoundStatement		4:13:35:35	3915295	1					
ANR	3915307	Statement	delete	120:2:2591:2596	3915295	0	True				
ANR	3915308	Statement	[	120:9:2598:2598	3915295	1	True				
ANR	3915309	Statement	]	120:10:2599:2599	3915295	2	True				
ANR	3915310	ExpressionStatement	s_path	120:12:2601:2607	3915295	3	True				
ANR	3915311	Identifier	s_path		3915295	0					
ANR	3915312	IfStatement	if ( s_ad )		3915295	2					
ANR	3915313	Condition	s_ad	122:5:2617:2620	3915295	0	True				
ANR	3915314	Identifier	s_ad		3915295	0					
ANR	3915315	CompoundStatement		7:12:72:72	3915295	1					
ANR	3915316	Statement	delete	123:2:2628:2633	3915295	0	True				
ANR	3915317	ExpressionStatement	s_ad	123:8:2634:2642	3915295	1	True				
ANR	3915318	Identifier	s_ad		3915295	0					
ANR	3915319	IfStatement	if ( s_job_update_sock )		3915295	3					
ANR	3915320	Condition	s_job_update_sock	125:5:2652:2668	3915295	0	True				
ANR	3915321	Identifier	s_job_update_sock		3915295	0					
ANR	3915322	CompoundStatement		10:25:120:120	3915295	1					
ANR	3915323	ExpressionStatement	daemonCore -> Cancel_Socket ( s_job_update_sock )	126:2:2676:2722	3915295	0	True				
ANR	3915324	CallExpression	daemonCore -> Cancel_Socket ( s_job_update_sock )		3915295	0					
ANR	3915325	Callee	daemonCore -> Cancel_Socket		3915295	0					
ANR	3915326	PtrMemberAccess	daemonCore -> Cancel_Socket		3915295	0					
ANR	3915327	Identifier	daemonCore		3915295	0					
ANR	3915328	Identifier	Cancel_Socket		3915295	1					
ANR	3915329	ArgumentList	s_job_update_sock		3915295	1					
ANR	3915330	Argument	s_job_update_sock		3915295	0					
ANR	3915331	Identifier	s_job_update_sock		3915295	0					
ANR	3915332	Statement	delete	127:2:2726:2731	3915295	1	True				
ANR	3915333	ExpressionStatement	s_job_update_sock	127:9:2733:2750	3915295	2	True				
ANR	3915334	Identifier	s_job_update_sock		3915295	0					
ANR	3915335	IfStatement	if ( m_hold_job_cb )		3915295	4					
ANR	3915336	Condition	m_hold_job_cb	130:5:2761:2773	3915295	0	True				
ANR	3915337	Identifier	m_hold_job_cb		3915295	0					
ANR	3915338	CompoundStatement		15:21:225:225	3915295	1					
ANR	3915339	ExpressionStatement	m_hold_job_cb -> cancelCallback ( )	131:2:2781:2812	3915295	0	True				
ANR	3915340	CallExpression	m_hold_job_cb -> cancelCallback ( )		3915295	0					
ANR	3915341	Callee	m_hold_job_cb -> cancelCallback		3915295	0					
ANR	3915342	PtrMemberAccess	m_hold_job_cb -> cancelCallback		3915295	0					
ANR	3915343	Identifier	m_hold_job_cb		3915295	0					
ANR	3915344	Identifier	cancelCallback		3915295	1					
ANR	3915345	ArgumentList			3915295	1					
ANR	3915346	ExpressionStatement	m_hold_job_cb = NULL	132:2:2816:2836	3915295	1	True				
ANR	3915347	AssignmentExpression	m_hold_job_cb = NULL		3915295	0		=			
ANR	3915348	Identifier	m_hold_job_cb		3915295	0					
ANR	3915349	Identifier	NULL		3915295	1					
ANR	3915350	Identifier	Starter :: ~Starter		3915295	1					
ANR	3915351	ParameterList			3915295	2					
ANR	3915352	CFGEntryNode	ENTRY		3915295		True				
ANR	3915353	CFGExitNode	EXIT		3915295		True				
ANR	3915354	Symbol	NULL		3915295						
ANR	3915355	Symbol	s_job_update_sock		3915295						
ANR	3915356	Symbol	daemonCore		3915295						
ANR	3915357	Symbol	m_hold_job_cb		3915295						
ANR	3915358	Symbol	s_ad		3915295						
ANR	3915359	Symbol	s_path		3915295						
ANR	3915360	Function	Starter :: satisfies	137:0:2845:3245							
ANR	3915361	FunctionDef	"Starter :: satisfies (ClassAd * job_ad , ClassAd * mach_ad)"		3915360	0					
ANR	3915362	CompoundStatement		139:0:2906:3245	3915360	0					
ANR	3915363	IdentifierDeclStatement	int requirements = 0 ;	140:1:2909:2929	3915360	0	True				
ANR	3915364	IdentifierDecl	requirements = 0		3915360	0					
ANR	3915365	IdentifierDeclType	int		3915360	0					
ANR	3915366	Identifier	requirements		3915360	1					
ANR	3915367	AssignmentExpression	requirements = 0		3915360	2		=			
ANR	3915368	Identifier	requirements		3915360	0					
ANR	3915369	PrimaryExpression	0		3915360	1					
ANR	3915370	IdentifierDeclStatement	ClassAd * merged_ad ;	141:1:2932:2950	3915360	1	True				
ANR	3915371	IdentifierDecl	* merged_ad		3915360	0					
ANR	3915372	IdentifierDeclType	ClassAd *		3915360	0					
ANR	3915373	Identifier	merged_ad		3915360	1					
ANR	3915374	IfStatement	if ( mach_ad )		3915360	2					
ANR	3915375	Condition	mach_ad	142:5:2957:2963	3915360	0	True				
ANR	3915376	Identifier	mach_ad		3915360	0					
ANR	3915377	CompoundStatement		4:15:60:60	3915360	1					
ANR	3915378	ExpressionStatement	merged_ad = new ClassAd ( * mach_ad )	143:2:2971:3006	3915360	0	True				
ANR	3915379	AssignmentExpression	merged_ad = new ClassAd ( * mach_ad )		3915360	0		=			
ANR	3915380	Identifier	merged_ad		3915360	0					
ANR	3915381	UnaryOperationExpression	* mach_ad		3915360	1					
ANR	3915382	UnaryOperator	*		3915360	0					
ANR	3915383	Identifier	mach_ad		3915360	1					
ANR	3915384	ExpressionStatement	"MergeClassAds ( merged_ad , s_ad , true )"	144:2:3010:3048	3915360	1	True				
ANR	3915385	CallExpression	"MergeClassAds ( merged_ad , s_ad , true )"		3915360	0					
ANR	3915386	Callee	MergeClassAds		3915360	0					
ANR	3915387	Identifier	MergeClassAds		3915360	0					
ANR	3915388	ArgumentList	merged_ad		3915360	1					
ANR	3915389	Argument	merged_ad		3915360	0					
ANR	3915390	Identifier	merged_ad		3915360	0					
ANR	3915391	Argument	s_ad		3915360	1					
ANR	3915392	Identifier	s_ad		3915360	0					
ANR	3915393	Argument	true		3915360	2					
ANR	3915394	Identifier	true		3915360	0					
ANR	3915395	ElseStatement	else		3915360	0					
ANR	3915396	CompoundStatement		7:8:151:151	3915360	0					
ANR	3915397	ExpressionStatement	merged_ad = new ClassAd ( * s_ad )	146:2:3062:3094	3915360	0	True				
ANR	3915398	AssignmentExpression	merged_ad = new ClassAd ( * s_ad )		3915360	0		=			
ANR	3915399	Identifier	merged_ad		3915360	0					
ANR	3915400	UnaryOperationExpression	* s_ad		3915360	1					
ANR	3915401	UnaryOperator	*		3915360	0					
ANR	3915402	Identifier	s_ad		3915360	1					
ANR	3915403	IfStatement	"if ( ! job_ad -> EvalBool ( ATTR_REQUIREMENTS , merged_ad , requirements ) )"		3915360	3					
ANR	3915404	Condition	"! job_ad -> EvalBool ( ATTR_REQUIREMENTS , merged_ad , requirements )"	148:5:3104:3165	3915360	0	True				
ANR	3915405	UnaryOperationExpression	"! job_ad -> EvalBool ( ATTR_REQUIREMENTS , merged_ad , requirements )"		3915360	0					
ANR	3915406	UnaryOperator	!		3915360	0					
ANR	3915407	CallExpression	"job_ad -> EvalBool ( ATTR_REQUIREMENTS , merged_ad , requirements )"		3915360	1					
ANR	3915408	Callee	job_ad -> EvalBool		3915360	0					
ANR	3915409	PtrMemberAccess	job_ad -> EvalBool		3915360	0					
ANR	3915410	Identifier	job_ad		3915360	0					
ANR	3915411	Identifier	EvalBool		3915360	1					
ANR	3915412	ArgumentList	ATTR_REQUIREMENTS		3915360	1					
ANR	3915413	Argument	ATTR_REQUIREMENTS		3915360	0					
ANR	3915414	Identifier	ATTR_REQUIREMENTS		3915360	0					
ANR	3915415	Argument	merged_ad		3915360	1					
ANR	3915416	Identifier	merged_ad		3915360	0					
ANR	3915417	Argument	requirements		3915360	2					
ANR	3915418	Identifier	requirements		3915360	0					
ANR	3915419	CompoundStatement		10:70:262:262	3915360	1					
ANR	3915420	ExpressionStatement	requirements = 0	149:2:3174:3190	3915360	0	True				
ANR	3915421	AssignmentExpression	requirements = 0		3915360	0		=			
ANR	3915422	Identifier	requirements		3915360	0					
ANR	3915423	PrimaryExpression	0		3915360	1					
ANR	3915424	Statement	delete	151:1:3196:3201	3915360	4	True				
ANR	3915425	ExpressionStatement	merged_ad	151:7:3202:3215	3915360	5	True				
ANR	3915426	Identifier	merged_ad		3915360	0					
ANR	3915427	ReturnStatement	return ( bool ) requirements ;	152:1:3218:3243	3915360	6	True				
ANR	3915428	CastExpression	( bool ) requirements		3915360	0					
ANR	3915429	CastTarget	bool		3915360	0					
ANR	3915430	Identifier	requirements		3915360	1					
ANR	3915431	ReturnType	bool		3915360	1					
ANR	3915432	Identifier	Starter :: satisfies		3915360	2					
ANR	3915433	ParameterList	"ClassAd * job_ad , ClassAd * mach_ad"		3915360	3					
ANR	3915434	Parameter	ClassAd * job_ad	138:20:2870:2884	3915360	0	True				
ANR	3915435	ParameterType	ClassAd *		3915360	0					
ANR	3915436	Identifier	job_ad		3915360	1					
ANR	3915437	Parameter	ClassAd * mach_ad	138:37:2887:2902	3915360	1	True				
ANR	3915438	ParameterType	ClassAd *		3915360	0					
ANR	3915439	Identifier	mach_ad		3915360	1					
ANR	3915440	CFGEntryNode	ENTRY		3915360		True				
ANR	3915441	CFGExitNode	EXIT		3915360		True				
ANR	3915442	Symbol	* s_ad		3915360						
ANR	3915443	Symbol	requirements		3915360						
ANR	3915444	Symbol	* mach_ad		3915360						
ANR	3915445	Symbol	ATTR_REQUIREMENTS		3915360						
ANR	3915446	Symbol	merged_ad		3915360						
ANR	3915447	Symbol	mach_ad		3915360						
ANR	3915448	Symbol	true		3915360						
ANR	3915449	Symbol	s_ad		3915360						
ANR	3915450	Symbol	job_ad -> EvalBool		3915360						
ANR	3915451	Symbol	job_ad		3915360						
ANR	3915452	Symbol	* job_ad		3915360						
ANR	3915453	Function	Starter :: provides	156:0:3249:3438							
ANR	3915454	FunctionDef	Starter :: provides (const char * ability)		3915453	0					
ANR	3915455	CompoundStatement		158:0:3295:3438	3915453	0					
ANR	3915456	IdentifierDeclStatement	int has_it = 0 ;	159:1:3298:3312	3915453	0	True				
ANR	3915457	IdentifierDecl	has_it = 0		3915453	0					
ANR	3915458	IdentifierDeclType	int		3915453	0					
ANR	3915459	Identifier	has_it		3915453	1					
ANR	3915460	AssignmentExpression	has_it = 0		3915453	2		=			
ANR	3915461	Identifier	has_it		3915453	0					
ANR	3915462	PrimaryExpression	0		3915453	1					
ANR	3915463	IfStatement	if ( ! s_ad )		3915453	1					
ANR	3915464	Condition	! s_ad	160:5:3319:3324	3915453	0	True				
ANR	3915465	UnaryOperationExpression	! s_ad		3915453	0					
ANR	3915466	UnaryOperator	!		3915453	0					
ANR	3915467	Identifier	s_ad		3915453	1					
ANR	3915468	CompoundStatement		3:14:32:32	3915453	1					
ANR	3915469	ReturnStatement	return false ;	161:2:3332:3344	3915453	0	True				
ANR	3915470	Identifier	false		3915453	0					
ANR	3915471	IfStatement	"if ( ! s_ad -> EvalBool ( ability , NULL , has_it ) )"		3915453	2					
ANR	3915472	Condition	"! s_ad -> EvalBool ( ability , NULL , has_it )"	163:5:3354:3392	3915453	0	True				
ANR	3915473	UnaryOperationExpression	"! s_ad -> EvalBool ( ability , NULL , has_it )"		3915453	0					
ANR	3915474	UnaryOperator	!		3915453	0					
ANR	3915475	CallExpression	"s_ad -> EvalBool ( ability , NULL , has_it )"		3915453	1					
ANR	3915476	Callee	s_ad -> EvalBool		3915453	0					
ANR	3915477	PtrMemberAccess	s_ad -> EvalBool		3915453	0					
ANR	3915478	Identifier	s_ad		3915453	0					
ANR	3915479	Identifier	EvalBool		3915453	1					
ANR	3915480	ArgumentList	ability		3915453	1					
ANR	3915481	Argument	ability		3915453	0					
ANR	3915482	Identifier	ability		3915453	0					
ANR	3915483	Argument	NULL		3915453	1					
ANR	3915484	Identifier	NULL		3915453	0					
ANR	3915485	Argument	has_it		3915453	2					
ANR	3915486	Identifier	has_it		3915453	0					
ANR	3915487	CompoundStatement		6:47:100:100	3915453	1					
ANR	3915488	ExpressionStatement	has_it = 0	164:2:3401:3411	3915453	0	True				
ANR	3915489	AssignmentExpression	has_it = 0		3915453	0		=			
ANR	3915490	Identifier	has_it		3915453	0					
ANR	3915491	PrimaryExpression	0		3915453	1					
ANR	3915492	ReturnStatement	return ( bool ) has_it ;	166:1:3417:3436	3915453	3	True				
ANR	3915493	CastExpression	( bool ) has_it		3915453	0					
ANR	3915494	CastTarget	bool		3915453	0					
ANR	3915495	Identifier	has_it		3915453	1					
ANR	3915496	ReturnType	bool		3915453	1					
ANR	3915497	Identifier	Starter :: provides		3915453	2					
ANR	3915498	ParameterList	const char * ability		3915453	3					
ANR	3915499	Parameter	const char * ability	157:19:3273:3291	3915453	0	True				
ANR	3915500	ParameterType	const char *		3915453	0					
ANR	3915501	Identifier	ability		3915453	1					
ANR	3915502	CFGEntryNode	ENTRY		3915453		True				
ANR	3915503	CFGExitNode	EXIT		3915453		True				
ANR	3915504	Symbol	* s_ad		3915453						
ANR	3915505	Symbol	NULL		3915453						
ANR	3915506	Symbol	has_it		3915453						
ANR	3915507	Symbol	s_ad -> EvalBool		3915453						
ANR	3915508	Symbol	false		3915453						
ANR	3915509	Symbol	s_ad		3915453						
ANR	3915510	Symbol	ability		3915453						
ANR	3915511	Function	Starter :: setAd	170:0:3442:3526							
ANR	3915512	FunctionDef	Starter :: setAd (ClassAd * ad)		3915511	0					
ANR	3915513	CompoundStatement		172:0:3477:3526	3915511	0					
ANR	3915514	IfStatement	if ( s_ad )		3915511	0					
ANR	3915515	Condition	s_ad	173:5:3484:3487	3915511	0	True				
ANR	3915516	Identifier	s_ad		3915511	0					
ANR	3915517	CompoundStatement		2:12:13:13	3915511	1					
ANR	3915518	Statement	delete	174:2:3495:3500	3915511	0	True				
ANR	3915519	ExpressionStatement	s_ad	174:8:3501:3509	3915511	1	True				
ANR	3915520	Identifier	s_ad		3915511	0					
ANR	3915521	ExpressionStatement	s_ad = ad	176:1:3515:3524	3915511	1	True				
ANR	3915522	AssignmentExpression	s_ad = ad		3915511	0		=			
ANR	3915523	Identifier	s_ad		3915511	0					
ANR	3915524	Identifier	ad		3915511	1					
ANR	3915525	ReturnType	void		3915511	1					
ANR	3915526	Identifier	Starter :: setAd		3915511	2					
ANR	3915527	ParameterList	ClassAd * ad		3915511	3					
ANR	3915528	Parameter	ClassAd * ad	171:16:3463:3473	3915511	0	True				
ANR	3915529	ParameterType	ClassAd *		3915511	0					
ANR	3915530	Identifier	ad		3915511	1					
ANR	3915531	CFGEntryNode	ENTRY		3915511		True				
ANR	3915532	CFGExitNode	EXIT		3915511		True				
ANR	3915533	Symbol	ad		3915511						
ANR	3915534	Symbol	s_ad		3915511						
ANR	3915535	Function	Starter :: setPath	180:0:3530:3656							
ANR	3915536	FunctionDef	Starter :: setPath (const char * updated_path)		3915535	0					
ANR	3915537	CompoundStatement		182:0:3580:3656	3915535	0					
ANR	3915538	IfStatement	if ( s_path )		3915535	0					
ANR	3915539	Condition	s_path	183:5:3587:3592	3915535	0	True				
ANR	3915540	Identifier	s_path		3915535	0					
ANR	3915541	CompoundStatement		2:14:15:15	3915535	1					
ANR	3915542	Statement	delete	184:2:3600:3605	3915535	0	True				
ANR	3915543	Statement	[	184:9:3607:3607	3915535	1	True				
ANR	3915544	Statement	]	184:10:3608:3608	3915535	2	True				
ANR	3915545	ExpressionStatement	s_path	184:12:3610:3616	3915535	3	True				
ANR	3915546	Identifier	s_path		3915535	0					
ANR	3915547	ExpressionStatement	s_path = strnewp ( updated_path )	186:1:3622:3654	3915535	1	True				
ANR	3915548	AssignmentExpression	s_path = strnewp ( updated_path )		3915535	0		=			
ANR	3915549	Identifier	s_path		3915535	0					
ANR	3915550	CallExpression	strnewp ( updated_path )		3915535	1					
ANR	3915551	Callee	strnewp		3915535	0					
ANR	3915552	Identifier	strnewp		3915535	0					
ANR	3915553	ArgumentList	updated_path		3915535	1					
ANR	3915554	Argument	updated_path		3915535	0					
ANR	3915555	Identifier	updated_path		3915535	0					
ANR	3915556	ReturnType	void		3915535	1					
ANR	3915557	Identifier	Starter :: setPath		3915535	2					
ANR	3915558	ParameterList	const char * updated_path		3915535	3					
ANR	3915559	Parameter	const char * updated_path	181:18:3553:3576	3915535	0	True				
ANR	3915560	ParameterType	const char *		3915535	0					
ANR	3915561	Identifier	updated_path		3915535	1					
ANR	3915562	CFGEntryNode	ENTRY		3915535		True				
ANR	3915563	CFGExitNode	EXIT		3915535		True				
ANR	3915564	Symbol	updated_path		3915535						
ANR	3915565	Symbol	strnewp		3915535						
ANR	3915566	Symbol	s_path		3915535						
ANR	3915567	Function	Starter :: setIsDC	189:0:3659:3731							
ANR	3915568	FunctionDef	Starter :: setIsDC (bool updated_is_dc)		3915567	0					
ANR	3915569	CompoundStatement		191:0:3703:3731	3915567	0					
ANR	3915570	ExpressionStatement	s_is_dc = updated_is_dc	192:1:3706:3729	3915567	0	True				
ANR	3915571	AssignmentExpression	s_is_dc = updated_is_dc		3915567	0		=			
ANR	3915572	Identifier	s_is_dc		3915567	0					
ANR	3915573	Identifier	updated_is_dc		3915567	1					
ANR	3915574	ReturnType	void		3915567	1					
ANR	3915575	Identifier	Starter :: setIsDC		3915567	2					
ANR	3915576	ParameterList	bool updated_is_dc		3915567	3					
ANR	3915577	Parameter	bool updated_is_dc	190:18:3682:3699	3915567	0	True				
ANR	3915578	ParameterType	bool		3915567	0					
ANR	3915579	Identifier	updated_is_dc		3915567	1					
ANR	3915580	CFGEntryNode	ENTRY		3915567		True				
ANR	3915581	CFGExitNode	EXIT		3915567		True				
ANR	3915582	Symbol	updated_is_dc		3915567						
ANR	3915583	Symbol	s_is_dc		3915567						
ANR	3915584	Function	Starter :: setClaim	195:0:3734:3785							
ANR	3915585	FunctionDef	Starter :: setClaim (Claim * c)		3915584	0					
ANR	3915586	CompoundStatement		197:0:3769:3785	3915584	0					
ANR	3915587	ExpressionStatement	s_claim = c	198:1:3772:3783	3915584	0	True				
ANR	3915588	AssignmentExpression	s_claim = c		3915584	0		=			
ANR	3915589	Identifier	s_claim		3915584	0					
ANR	3915590	Identifier	c		3915584	1					
ANR	3915591	ReturnType	void		3915584	1					
ANR	3915592	Identifier	Starter :: setClaim		3915584	2					
ANR	3915593	ParameterList	Claim * c		3915584	3					
ANR	3915594	Parameter	Claim * c	196:19:3758:3765	3915584	0	True				
ANR	3915595	ParameterType	Claim *		3915584	0					
ANR	3915596	Identifier	c		3915584	1					
ANR	3915597	CFGEntryNode	ENTRY		3915584		True				
ANR	3915598	CFGExitNode	EXIT		3915584		True				
ANR	3915599	Symbol	c		3915584						
ANR	3915600	Symbol	s_claim		3915584						
ANR	3915601	Function	Starter :: setPorts	202:0:3789:3874							
ANR	3915602	FunctionDef	"Starter :: setPorts (int port1 , int port2)"		3915601	0					
ANR	3915603	CompoundStatement		204:0:3836:3874	3915601	0					
ANR	3915604	ExpressionStatement	s_port1 = port1	205:1:3839:3854	3915601	0	True				
ANR	3915605	AssignmentExpression	s_port1 = port1		3915601	0		=			
ANR	3915606	Identifier	s_port1		3915601	0					
ANR	3915607	Identifier	port1		3915601	1					
ANR	3915608	ExpressionStatement	s_port2 = port2	206:1:3857:3872	3915601	1	True				
ANR	3915609	AssignmentExpression	s_port2 = port2		3915601	0		=			
ANR	3915610	Identifier	s_port2		3915601	0					
ANR	3915611	Identifier	port2		3915601	1					
ANR	3915612	ReturnType	void		3915601	1					
ANR	3915613	Identifier	Starter :: setPorts		3915601	2					
ANR	3915614	ParameterList	"int port1 , int port2"		3915601	3					
ANR	3915615	Parameter	int port1	203:19:3813:3821	3915601	0	True				
ANR	3915616	ParameterType	int		3915601	0					
ANR	3915617	Identifier	port1		3915601	1					
ANR	3915618	Parameter	int port2	203:30:3824:3832	3915601	1	True				
ANR	3915619	ParameterType	int		3915601	0					
ANR	3915620	Identifier	port2		3915601	1					
ANR	3915621	CFGEntryNode	ENTRY		3915601		True				
ANR	3915622	CFGExitNode	EXIT		3915601		True				
ANR	3915623	Symbol	s_port2		3915601						
ANR	3915624	Symbol	s_port1		3915601						
ANR	3915625	Symbol	port1		3915601						
ANR	3915626	Symbol	port2		3915601						
ANR	3915627	Function	Starter :: publish	210:0:3878:5443							
ANR	3915628	FunctionDef	"Starter :: publish (ClassAd * ad , amask_t mask , StringList * list)"		3915627	0					
ANR	3915629	CompoundStatement		212:0:3947:5443	3915627	0					
ANR	3915630	IfStatement	if ( ! ( IS_STATIC ( mask ) && IS_PUBLIC ( mask ) ) )		3915627	0					
ANR	3915631	Condition	! ( IS_STATIC ( mask ) && IS_PUBLIC ( mask ) )	213:5:3954:3990	3915627	0	True				
ANR	3915632	UnaryOperationExpression	! ( IS_STATIC ( mask ) && IS_PUBLIC ( mask ) )		3915627	0					
ANR	3915633	UnaryOperator	!		3915627	0					
ANR	3915634	AndExpression	IS_STATIC ( mask ) && IS_PUBLIC ( mask )		3915627	1		&&			
ANR	3915635	CallExpression	IS_STATIC ( mask )		3915627	0					
ANR	3915636	Callee	IS_STATIC		3915627	0					
ANR	3915637	Identifier	IS_STATIC		3915627	0					
ANR	3915638	ArgumentList	mask		3915627	1					
ANR	3915639	Argument	mask		3915627	0					
ANR	3915640	Identifier	mask		3915627	0					
ANR	3915641	CallExpression	IS_PUBLIC ( mask )		3915627	1					
ANR	3915642	Callee	IS_PUBLIC		3915627	0					
ANR	3915643	Identifier	IS_PUBLIC		3915627	0					
ANR	3915644	ArgumentList	mask		3915627	1					
ANR	3915645	Argument	mask		3915627	0					
ANR	3915646	Identifier	mask		3915627	0					
ANR	3915647	CompoundStatement		2:45:46:46	3915627	1					
ANR	3915648	ReturnStatement	return ;	214:2:3998:4004	3915627	0	True				
ANR	3915649	IdentifierDeclStatement	char * ignored_attrs = NULL ;	223:1:4353:4379	3915627	1	True				
ANR	3915650	IdentifierDecl	* ignored_attrs = NULL		3915627	0					
ANR	3915651	IdentifierDeclType	char *		3915627	0					
ANR	3915652	Identifier	ignored_attrs		3915627	1					
ANR	3915653	AssignmentExpression	* ignored_attrs = NULL		3915627	2		=			
ANR	3915654	Identifier	NULL		3915627	0					
ANR	3915655	Identifier	NULL		3915627	1					
ANR	3915656	IdentifierDeclStatement	StringList * ignored_attr_list = NULL ;	224:1:4382:4418	3915627	2	True				
ANR	3915657	IdentifierDecl	* ignored_attr_list = NULL		3915627	0					
ANR	3915658	IdentifierDeclType	StringList *		3915627	0					
ANR	3915659	Identifier	ignored_attr_list		3915627	1					
ANR	3915660	AssignmentExpression	* ignored_attr_list = NULL		3915627	2		=			
ANR	3915661	Identifier	NULL		3915627	0					
ANR	3915662	Identifier	NULL		3915627	1					
ANR	3915663	IfStatement	"if ( s_ad -> LookupString ( ATTR_STARTER_IGNORED_ATTRS , & ignored_attrs ) )"		3915627	3					
ANR	3915664	Condition	"s_ad -> LookupString ( ATTR_STARTER_IGNORED_ATTRS , & ignored_attrs )"	225:5:4425:4486	3915627	0	True				
ANR	3915665	CallExpression	"s_ad -> LookupString ( ATTR_STARTER_IGNORED_ATTRS , & ignored_attrs )"		3915627	0					
ANR	3915666	Callee	s_ad -> LookupString		3915627	0					
ANR	3915667	PtrMemberAccess	s_ad -> LookupString		3915627	0					
ANR	3915668	Identifier	s_ad		3915627	0					
ANR	3915669	Identifier	LookupString		3915627	1					
ANR	3915670	ArgumentList	ATTR_STARTER_IGNORED_ATTRS		3915627	1					
ANR	3915671	Argument	ATTR_STARTER_IGNORED_ATTRS		3915627	0					
ANR	3915672	Identifier	ATTR_STARTER_IGNORED_ATTRS		3915627	0					
ANR	3915673	Argument	& ignored_attrs		3915627	1					
ANR	3915674	UnaryOperationExpression	& ignored_attrs		3915627	0					
ANR	3915675	UnaryOperator	&		3915627	0					
ANR	3915676	Identifier	ignored_attrs		3915627	1					
ANR	3915677	CompoundStatement		14:69:541:541	3915627	1					
ANR	3915678	ExpressionStatement	ignored_attr_list = new StringList ( ignored_attrs )	226:2:4493:4542	3915627	0	True				
ANR	3915679	AssignmentExpression	ignored_attr_list = new StringList ( ignored_attrs )		3915627	0		=			
ANR	3915680	Identifier	ignored_attr_list		3915627	0					
ANR	3915681	Identifier	ignored_attrs		3915627	1					
ANR	3915682	ExpressionStatement	free ( ignored_attrs )	227:2:4546:4565	3915627	1	True				
ANR	3915683	CallExpression	free ( ignored_attrs )		3915627	0					
ANR	3915684	Callee	free		3915627	0					
ANR	3915685	Identifier	free		3915627	0					
ANR	3915686	ArgumentList	ignored_attrs		3915627	1					
ANR	3915687	Argument	ignored_attrs		3915627	0					
ANR	3915688	Identifier	ignored_attrs		3915627	0					
ANR	3915689	ExpressionStatement	ignored_attr_list -> append ( ATTR_STARTER_IGNORED_ATTRS )	231:2:4643:4696	3915627	2	True				
ANR	3915690	CallExpression	ignored_attr_list -> append ( ATTR_STARTER_IGNORED_ATTRS )		3915627	0					
ANR	3915691	Callee	ignored_attr_list -> append		3915627	0					
ANR	3915692	PtrMemberAccess	ignored_attr_list -> append		3915627	0					
ANR	3915693	Identifier	ignored_attr_list		3915627	0					
ANR	3915694	Identifier	append		3915627	1					
ANR	3915695	ArgumentList	ATTR_STARTER_IGNORED_ATTRS		3915627	1					
ANR	3915696	Argument	ATTR_STARTER_IGNORED_ATTRS		3915627	0					
ANR	3915697	Identifier	ATTR_STARTER_IGNORED_ATTRS		3915627	0					
ANR	3915698	IdentifierDeclStatement	ExprTree * tree ;	234:1:4703:4717	3915627	4	True				
ANR	3915699	IdentifierDecl	* tree		3915627	0					
ANR	3915700	IdentifierDeclType	ExprTree *		3915627	0					
ANR	3915701	Identifier	tree		3915627	1					
ANR	3915702	IdentifierDeclStatement	const char * lhstr = NULL ;	235:1:4720:4744	3915627	5	True				
ANR	3915703	IdentifierDecl	* lhstr = NULL		3915627	0					
ANR	3915704	IdentifierDeclType	const char *		3915627	0					
ANR	3915705	Identifier	lhstr		3915627	1					
ANR	3915706	AssignmentExpression	* lhstr = NULL		3915627	2		=			
ANR	3915707	Identifier	NULL		3915627	0					
ANR	3915708	Identifier	NULL		3915627	1					
ANR	3915709	ExpressionStatement	s_ad -> ResetExpr ( )	236:1:4747:4764	3915627	6	True				
ANR	3915710	CallExpression	s_ad -> ResetExpr ( )		3915627	0					
ANR	3915711	Callee	s_ad -> ResetExpr		3915627	0					
ANR	3915712	PtrMemberAccess	s_ad -> ResetExpr		3915627	0					
ANR	3915713	Identifier	s_ad		3915627	0					
ANR	3915714	Identifier	ResetExpr		3915627	1					
ANR	3915715	ArgumentList			3915627	1					
ANR	3915716	WhileStatement	"while ( s_ad -> NextExpr ( lhstr , tree ) )"		3915627	7					
ANR	3915717	Condition	"s_ad -> NextExpr ( lhstr , tree )"	237:8:4774:4800	3915627	0	True				
ANR	3915718	CallExpression	"s_ad -> NextExpr ( lhstr , tree )"		3915627	0					
ANR	3915719	Callee	s_ad -> NextExpr		3915627	0					
ANR	3915720	PtrMemberAccess	s_ad -> NextExpr		3915627	0					
ANR	3915721	Identifier	s_ad		3915627	0					
ANR	3915722	Identifier	NextExpr		3915627	1					
ANR	3915723	ArgumentList	lhstr		3915627	1					
ANR	3915724	Argument	lhstr		3915627	0					
ANR	3915725	Identifier	lhstr		3915627	0					
ANR	3915726	Argument	tree		3915627	1					
ANR	3915727	Identifier	tree		3915627	0					
ANR	3915728	CompoundStatement		26:38:856:856	3915627	1					
ANR	3915729	IfStatement	if ( ignored_attr_list )		3915627	0					
ANR	3915730	Condition	ignored_attr_list	239:6:4813:4829	3915627	0	True				
ANR	3915731	Identifier	ignored_attr_list		3915627	0					
ANR	3915732	CompoundStatement		28:25:884:884	3915627	1					
ANR	3915733	IfStatement	if ( ! ignored_attr_list -> contains ( lhstr ) )		3915627	0					
ANR	3915734	Condition	! ignored_attr_list -> contains ( lhstr )	241:7:4902:4936	3915627	0	True				
ANR	3915735	UnaryOperationExpression	! ignored_attr_list -> contains ( lhstr )		3915627	0					
ANR	3915736	UnaryOperator	!		3915627	0					
ANR	3915737	CallExpression	ignored_attr_list -> contains ( lhstr )		3915627	1					
ANR	3915738	Callee	ignored_attr_list -> contains		3915627	0					
ANR	3915739	PtrMemberAccess	ignored_attr_list -> contains		3915627	0					
ANR	3915740	Identifier	ignored_attr_list		3915627	0					
ANR	3915741	Identifier	contains		3915627	1					
ANR	3915742	ArgumentList	lhstr		3915627	1					
ANR	3915743	Argument	lhstr		3915627	0					
ANR	3915744	Identifier	lhstr		3915627	0					
ANR	3915745	CompoundStatement		30:44:991:991	3915627	1					
ANR	3915746	ExpressionStatement	"ad -> Insert ( lhstr , tree -> Copy ( ) )"	242:4:4945:4976	3915627	0	True				
ANR	3915747	CallExpression	"ad -> Insert ( lhstr , tree -> Copy ( ) )"		3915627	0					
ANR	3915748	Callee	ad -> Insert		3915627	0					
ANR	3915749	PtrMemberAccess	ad -> Insert		3915627	0					
ANR	3915750	Identifier	ad		3915627	0					
ANR	3915751	Identifier	Insert		3915627	1					
ANR	3915752	ArgumentList	lhstr		3915627	1					
ANR	3915753	Argument	lhstr		3915627	0					
ANR	3915754	Identifier	lhstr		3915627	0					
ANR	3915755	Argument	tree -> Copy ( )		3915627	1					
ANR	3915756	CallExpression	tree -> Copy ( )		3915627	0					
ANR	3915757	Callee	tree -> Copy		3915627	0					
ANR	3915758	PtrMemberAccess	tree -> Copy		3915627	0					
ANR	3915759	Identifier	tree		3915627	0					
ANR	3915760	Identifier	Copy		3915627	1					
ANR	3915761	ArgumentList			3915627	1					
ANR	3915762	IfStatement	"if ( strncasecmp ( lhstr , ""Has"" , 3 ) == MATCH )"		3915627	1					
ANR	3915763	Condition	"strncasecmp ( lhstr , ""Has"" , 3 ) == MATCH"	243:8:4986:5022	3915627	0	True				
ANR	3915764	EqualityExpression	"strncasecmp ( lhstr , ""Has"" , 3 ) == MATCH"		3915627	0		==			
ANR	3915765	CallExpression	"strncasecmp ( lhstr , ""Has"" , 3 )"		3915627	0					
ANR	3915766	Callee	strncasecmp		3915627	0					
ANR	3915767	Identifier	strncasecmp		3915627	0					
ANR	3915768	ArgumentList	lhstr		3915627	1					
ANR	3915769	Argument	lhstr		3915627	0					
ANR	3915770	Identifier	lhstr		3915627	0					
ANR	3915771	Argument	"""Has"""		3915627	1					
ANR	3915772	PrimaryExpression	"""Has"""		3915627	0					
ANR	3915773	Argument	3		3915627	2					
ANR	3915774	PrimaryExpression	3		3915627	0					
ANR	3915775	Identifier	MATCH		3915627	1					
ANR	3915776	CompoundStatement		32:47:1077:1077	3915627	1					
ANR	3915777	ExpressionStatement	list -> append ( lhstr )	244:5:5032:5051	3915627	0	True				
ANR	3915778	CallExpression	list -> append ( lhstr )		3915627	0					
ANR	3915779	Callee	list -> append		3915627	0					
ANR	3915780	PtrMemberAccess	list -> append		3915627	0					
ANR	3915781	Identifier	list		3915627	0					
ANR	3915782	Identifier	append		3915627	1					
ANR	3915783	ArgumentList	lhstr		3915627	1					
ANR	3915784	Argument	lhstr		3915627	0					
ANR	3915785	Identifier	lhstr		3915627	0					
ANR	3915786	ElseStatement	else		3915627	0					
ANR	3915787	CompoundStatement		37:7:1127:1127	3915627	0					
ANR	3915788	IfStatement	"if ( strncasecmp ( lhstr , ""Has"" , 3 ) == MATCH )"		3915627	0					
ANR	3915789	Condition	"strncasecmp ( lhstr , ""Has"" , 3 ) == MATCH"	250:7:5145:5181	3915627	0	True				
ANR	3915790	EqualityExpression	"strncasecmp ( lhstr , ""Has"" , 3 ) == MATCH"		3915627	0		==			
ANR	3915791	CallExpression	"strncasecmp ( lhstr , ""Has"" , 3 )"		3915627	0					
ANR	3915792	Callee	strncasecmp		3915627	0					
ANR	3915793	Identifier	strncasecmp		3915627	0					
ANR	3915794	ArgumentList	lhstr		3915627	1					
ANR	3915795	Argument	lhstr		3915627	0					
ANR	3915796	Identifier	lhstr		3915627	0					
ANR	3915797	Argument	"""Has"""		3915627	1					
ANR	3915798	PrimaryExpression	"""Has"""		3915627	0					
ANR	3915799	Argument	3		3915627	2					
ANR	3915800	PrimaryExpression	3		3915627	0					
ANR	3915801	Identifier	MATCH		3915627	1					
ANR	3915802	CompoundStatement		39:47:1237:1237	3915627	1					
ANR	3915803	ExpressionStatement	"ad -> Insert ( lhstr , tree -> Copy ( ) )"	251:4:5191:5224	3915627	0	True				
ANR	3915804	CallExpression	"ad -> Insert ( lhstr , tree -> Copy ( ) )"		3915627	0					
ANR	3915805	Callee	ad -> Insert		3915627	0					
ANR	3915806	PtrMemberAccess	ad -> Insert		3915627	0					
ANR	3915807	Identifier	ad		3915627	0					
ANR	3915808	Identifier	Insert		3915627	1					
ANR	3915809	ArgumentList	lhstr		3915627	1					
ANR	3915810	Argument	lhstr		3915627	0					
ANR	3915811	Identifier	lhstr		3915627	0					
ANR	3915812	Argument	tree -> Copy ( )		3915627	1					
ANR	3915813	CallExpression	tree -> Copy ( )		3915627	0					
ANR	3915814	Callee	tree -> Copy		3915627	0					
ANR	3915815	PtrMemberAccess	tree -> Copy		3915627	0					
ANR	3915816	Identifier	tree		3915627	0					
ANR	3915817	Identifier	Copy		3915627	1					
ANR	3915818	ArgumentList			3915627	1					
ANR	3915819	IfStatement	if ( list )		3915627	1					
ANR	3915820	Condition	list	252:8:5234:5237	3915627	0	True				
ANR	3915821	Identifier	list		3915627	0					
ANR	3915822	CompoundStatement		41:15:1293:1293	3915627	1					
ANR	3915823	ExpressionStatement	list -> append ( lhstr )	253:5:5248:5269	3915627	0	True				
ANR	3915824	CallExpression	list -> append ( lhstr )		3915627	0					
ANR	3915825	Callee	list -> append		3915627	0					
ANR	3915826	PtrMemberAccess	list -> append		3915627	0					
ANR	3915827	Identifier	list		3915627	0					
ANR	3915828	Identifier	append		3915627	1					
ANR	3915829	ArgumentList	lhstr		3915627	1					
ANR	3915830	Argument	lhstr		3915627	0					
ANR	3915831	Identifier	lhstr		3915627	0					
ANR	3915832	ElseStatement	else		3915627	0					
ANR	3915833	IfStatement	"if ( strncasecmp ( lhstr , ""Java"" , 4 ) == MATCH )"		3915627	0					
ANR	3915834	Condition	"strncasecmp ( lhstr , ""Java"" , 4 ) == MATCH"	255:14:5291:5328	3915627	0	True				
ANR	3915835	EqualityExpression	"strncasecmp ( lhstr , ""Java"" , 4 ) == MATCH"		3915627	0		==			
ANR	3915836	CallExpression	"strncasecmp ( lhstr , ""Java"" , 4 )"		3915627	0					
ANR	3915837	Callee	strncasecmp		3915627	0					
ANR	3915838	Identifier	strncasecmp		3915627	0					
ANR	3915839	ArgumentList	lhstr		3915627	1					
ANR	3915840	Argument	lhstr		3915627	0					
ANR	3915841	Identifier	lhstr		3915627	0					
ANR	3915842	Argument	"""Java"""		3915627	1					
ANR	3915843	PrimaryExpression	"""Java"""		3915627	0					
ANR	3915844	Argument	4		3915627	2					
ANR	3915845	PrimaryExpression	4		3915627	0					
ANR	3915846	Identifier	MATCH		3915627	1					
ANR	3915847	CompoundStatement		44:55:1384:1384	3915627	1					
ANR	3915848	ExpressionStatement	"ad -> Insert ( lhstr , tree -> Copy ( ) )"	256:4:5338:5371	3915627	0	True				
ANR	3915849	CallExpression	"ad -> Insert ( lhstr , tree -> Copy ( ) )"		3915627	0					
ANR	3915850	Callee	ad -> Insert		3915627	0					
ANR	3915851	PtrMemberAccess	ad -> Insert		3915627	0					
ANR	3915852	Identifier	ad		3915627	0					
ANR	3915853	Identifier	Insert		3915627	1					
ANR	3915854	ArgumentList	lhstr		3915627	1					
ANR	3915855	Argument	lhstr		3915627	0					
ANR	3915856	Identifier	lhstr		3915627	0					
ANR	3915857	Argument	tree -> Copy ( )		3915627	1					
ANR	3915858	CallExpression	tree -> Copy ( )		3915627	0					
ANR	3915859	Callee	tree -> Copy		3915627	0					
ANR	3915860	PtrMemberAccess	tree -> Copy		3915627	0					
ANR	3915861	Identifier	tree		3915627	0					
ANR	3915862	Identifier	Copy		3915627	1					
ANR	3915863	ArgumentList			3915627	1					
ANR	3915864	IfStatement	if ( ignored_attr_list )		3915627	8					
ANR	3915865	Condition	ignored_attr_list	261:5:5391:5407	3915627	0	True				
ANR	3915866	Identifier	ignored_attr_list		3915627	0					
ANR	3915867	CompoundStatement		50:24:1462:1462	3915627	1					
ANR	3915868	Statement	delete	262:2:5414:5419	3915627	0	True				
ANR	3915869	ExpressionStatement	ignored_attr_list	262:9:5421:5438	3915627	1	True				
ANR	3915870	Identifier	ignored_attr_list		3915627	0					
ANR	3915871	ReturnType	void		3915627	1					
ANR	3915872	Identifier	Starter :: publish		3915627	2					
ANR	3915873	ParameterList	"ClassAd * ad , amask_t mask , StringList * list"		3915627	3					
ANR	3915874	Parameter	ClassAd * ad	211:18:3901:3911	3915627	0	True				
ANR	3915875	ParameterType	ClassAd *		3915627	0					
ANR	3915876	Identifier	ad		3915627	1					
ANR	3915877	Parameter	amask_t mask	211:31:3914:3925	3915627	1	True				
ANR	3915878	ParameterType	amask_t		3915627	0					
ANR	3915879	Identifier	mask		3915627	1					
ANR	3915880	Parameter	StringList * list	211:45:3928:3943	3915627	2	True				
ANR	3915881	ParameterType	StringList *		3915627	0					
ANR	3915882	Identifier	list		3915627	1					
ANR	3915883	CFGEntryNode	ENTRY		3915627		True				
ANR	3915884	CFGExitNode	EXIT		3915627		True				
ANR	3915885	Symbol	* s_ad		3915627						
ANR	3915886	Symbol	ATTR_STARTER_IGNORED_ATTRS		3915627						
ANR	3915887	Symbol	s_ad -> NextExpr		3915627						
ANR	3915888	Symbol	ad		3915627						
ANR	3915889	Symbol	NULL		3915627						
ANR	3915890	Symbol	s_ad -> LookupString		3915627						
ANR	3915891	Symbol	ignored_attrs		3915627						
ANR	3915892	Symbol	tree		3915627						
ANR	3915893	Symbol	strncasecmp		3915627						
ANR	3915894	Symbol	* ignored_attr_list		3915627						
ANR	3915895	Symbol	list		3915627						
ANR	3915896	Symbol	ignored_attr_list		3915627						
ANR	3915897	Symbol	ignored_attr_list -> contains		3915627						
ANR	3915898	Symbol	* tree		3915627						
ANR	3915899	Symbol	& ignored_attrs		3915627						
ANR	3915900	Symbol	IS_STATIC		3915627						
ANR	3915901	Symbol	lhstr		3915627						
ANR	3915902	Symbol	s_ad		3915627						
ANR	3915903	Symbol	IS_PUBLIC		3915627						
ANR	3915904	Symbol	MATCH		3915627						
ANR	3915905	Symbol	mask		3915627						
ANR	3915906	Symbol	tree -> Copy		3915627						
ANR	3915907	Function	Starter :: kill	267:0:5447:5513							
ANR	3915908	FunctionDef	Starter :: kill (int signo)		3915907	0					
ANR	3915909	CompoundStatement		269:0:5479:5513	3915907	0					
ANR	3915910	ReturnStatement	"return reallykill ( signo , 0 ) ;"	270:1:5482:5511	3915907	0	True				
ANR	3915911	CallExpression	"reallykill ( signo , 0 )"		3915907	0					
ANR	3915912	Callee	reallykill		3915907	0					
ANR	3915913	Identifier	reallykill		3915907	0					
ANR	3915914	ArgumentList	signo		3915907	1					
ANR	3915915	Argument	signo		3915907	0					
ANR	3915916	Identifier	signo		3915907	0					
ANR	3915917	Argument	0		3915907	1					
ANR	3915918	PrimaryExpression	0		3915907	0					
ANR	3915919	ReturnType	bool		3915907	1					
ANR	3915920	Identifier	Starter :: kill		3915907	2					
ANR	3915921	ParameterList	int signo		3915907	3					
ANR	3915922	Parameter	int signo	268:15:5467:5475	3915907	0	True				
ANR	3915923	ParameterType	int		3915907	0					
ANR	3915924	Identifier	signo		3915907	1					
ANR	3915925	CFGEntryNode	ENTRY		3915907		True				
ANR	3915926	CFGExitNode	EXIT		3915907		True				
ANR	3915927	Symbol	reallykill		3915907						
ANR	3915928	Symbol	signo		3915907						
ANR	3915929	Function	Starter :: killpg	274:0:5517:5585							
ANR	3915930	FunctionDef	Starter :: killpg (int signo)		3915929	0					
ANR	3915931	CompoundStatement		276:0:5551:5585	3915929	0					
ANR	3915932	ReturnStatement	"return reallykill ( signo , 1 ) ;"	277:1:5554:5583	3915929	0	True				
ANR	3915933	CallExpression	"reallykill ( signo , 1 )"		3915929	0					
ANR	3915934	Callee	reallykill		3915929	0					
ANR	3915935	Identifier	reallykill		3915929	0					
ANR	3915936	ArgumentList	signo		3915929	1					
ANR	3915937	Argument	signo		3915929	0					
ANR	3915938	Identifier	signo		3915929	0					
ANR	3915939	Argument	1		3915929	1					
ANR	3915940	PrimaryExpression	1		3915929	0					
ANR	3915941	ReturnType	bool		3915929	1					
ANR	3915942	Identifier	Starter :: killpg		3915929	2					
ANR	3915943	ParameterList	int signo		3915929	3					
ANR	3915944	Parameter	int signo	275:17:5539:5547	3915929	0	True				
ANR	3915945	ParameterType	int		3915929	0					
ANR	3915946	Identifier	signo		3915929	1					
ANR	3915947	CFGEntryNode	ENTRY		3915929		True				
ANR	3915948	CFGExitNode	EXIT		3915929		True				
ANR	3915949	Symbol	reallykill		3915929						
ANR	3915950	Symbol	signo		3915929						
ANR	3915951	Function	Starter :: killkids	281:0:5589:5653							
ANR	3915952	FunctionDef	Starter :: killkids (int signo)		3915951	0					
ANR	3915953	CompoundStatement		283:0:5626:5653	3915951	0					
ANR	3915954	ExpressionStatement	"reallykill ( signo , 2 )"	284:1:5629:5651	3915951	0	True				
ANR	3915955	CallExpression	"reallykill ( signo , 2 )"		3915951	0					
ANR	3915956	Callee	reallykill		3915951	0					
ANR	3915957	Identifier	reallykill		3915951	0					
ANR	3915958	ArgumentList	signo		3915951	1					
ANR	3915959	Argument	signo		3915951	0					
ANR	3915960	Identifier	signo		3915951	0					
ANR	3915961	Argument	2		3915951	1					
ANR	3915962	PrimaryExpression	2		3915951	0					
ANR	3915963	ReturnType	void		3915951	1					
ANR	3915964	Identifier	Starter :: killkids		3915951	2					
ANR	3915965	ParameterList	int signo		3915951	3					
ANR	3915966	Parameter	int signo	282:19:5613:5621	3915951	0	True				
ANR	3915967	ParameterType	int		3915951	0					
ANR	3915968	Identifier	signo		3915951	1					
ANR	3915969	CFGEntryNode	ENTRY		3915951		True				
ANR	3915970	CFGExitNode	EXIT		3915951		True				
ANR	3915971	Symbol	signo		3915951						
ANR	3915972	Function	Starter :: reallykill	288:0:5657:12049							
ANR	3915973	FunctionDef	"Starter :: reallykill (int signo , int type)"		3915972	0					
ANR	3915974	CompoundStatement		290:0:5705:12049	3915972	0					
ANR	3915975	IdentifierDeclStatement	struct stat st ;	292:1:5722:5736	3915972	0	True				
ANR	3915976	IdentifierDecl	st		3915972	0					
ANR	3915977	IdentifierDeclType	struct stat		3915972	0					
ANR	3915978	Identifier	st		3915972	1					
ANR	3915979	IdentifierDeclStatement	"int ret = 0 , sig = 0 ;"	294:1:5746:5768	3915972	1	True				
ANR	3915980	IdentifierDecl	ret = 0		3915972	0					
ANR	3915981	IdentifierDeclType	int		3915972	0					
ANR	3915982	Identifier	ret		3915972	1					
ANR	3915983	AssignmentExpression	ret = 0		3915972	2		=			
ANR	3915984	Identifier	ret		3915972	0					
ANR	3915985	PrimaryExpression	0		3915972	1					
ANR	3915986	IdentifierDecl	sig = 0		3915972	1					
ANR	3915987	IdentifierDeclType	int		3915972	0					
ANR	3915988	Identifier	sig		3915972	1					
ANR	3915989	AssignmentExpression	sig = 0		3915972	2		=			
ANR	3915990	Identifier	sig		3915972	0					
ANR	3915991	PrimaryExpression	0		3915972	1					
ANR	3915992	IdentifierDeclStatement	priv_state priv ;	295:1:5771:5786	3915972	2	True				
ANR	3915993	IdentifierDecl	priv		3915972	0					
ANR	3915994	IdentifierDeclType	priv_state		3915972	0					
ANR	3915995	Identifier	priv		3915972	1					
ANR	3915996	IdentifierDeclStatement	"const char * signame = """" ;"	296:1:5789:5813	3915972	3	True				
ANR	3915997	IdentifierDecl	"* signame = """""		3915972	0					
ANR	3915998	IdentifierDeclType	const char *		3915972	0					
ANR	3915999	Identifier	signame		3915972	1					
ANR	3916000	AssignmentExpression	"* signame = """""		3915972	2		=			
ANR	3916001	Identifier	signame		3915972	0					
ANR	3916002	PrimaryExpression	""""""		3915972	1					
ANR	3916003	IfStatement	if ( s_pid == 0 )		3915972	4					
ANR	3916004	Condition	s_pid == 0	298:6:5822:5831	3915972	0	True				
ANR	3916005	EqualityExpression	s_pid == 0		3915972	0		==			
ANR	3916006	Identifier	s_pid		3915972	0					
ANR	3916007	PrimaryExpression	0		3915972	1					
ANR	3916008	CompoundStatement		9:19:129:129	3915972	1					
ANR	3916009	ReturnStatement	return true ;	300:2:5903:5914	3915972	0	True				
ANR	3916010	Identifier	true		3915972	0					
ANR	3916011	SwitchStatement	switch ( signo )		3915972	5					
ANR	3916012	Condition	signo	303:9:5929:5933	3915972	0	True				
ANR	3916013	Identifier	signo		3915972	0					
ANR	3916014	CompoundStatement		14:17:231:231	3915972	1					
ANR	3916015	Label	case DC_SIGSUSPEND :	304:1:5940:5958	3915972	0	True				
ANR	3916016	Identifier	DC_SIGSUSPEND		3915972	0					
ANR	3916017	ExpressionStatement	"signame = ""DC_SIGSUSPEND"""	305:2:5962:5987	3915972	1	True				
ANR	3916018	AssignmentExpression	"signame = ""DC_SIGSUSPEND"""		3915972	0		=			
ANR	3916019	Identifier	signame		3915972	0					
ANR	3916020	PrimaryExpression	"""DC_SIGSUSPEND"""		3915972	1					
ANR	3916021	BreakStatement	break ;	306:2:5991:5996	3915972	2	True				
ANR	3916022	Label	case DC_SIGHARDKILL :	307:1:5999:6018	3915972	3	True				
ANR	3916023	Identifier	DC_SIGHARDKILL		3915972	0					
ANR	3916024	ExpressionStatement	signo = SIGQUIT	308:2:6022:6037	3915972	4	True				
ANR	3916025	AssignmentExpression	signo = SIGQUIT		3915972	0		=			
ANR	3916026	Identifier	signo		3915972	0					
ANR	3916027	Identifier	SIGQUIT		3915972	1					
ANR	3916028	ExpressionStatement	"signame = ""SIGQUIT"""	309:2:6041:6060	3915972	5	True				
ANR	3916029	AssignmentExpression	"signame = ""SIGQUIT"""		3915972	0		=			
ANR	3916030	Identifier	signame		3915972	0					
ANR	3916031	PrimaryExpression	"""SIGQUIT"""		3915972	1					
ANR	3916032	BreakStatement	break ;	310:2:6064:6069	3915972	6	True				
ANR	3916033	Label	case DC_SIGSOFTKILL :	311:1:6072:6091	3915972	7	True				
ANR	3916034	Identifier	DC_SIGSOFTKILL		3915972	0					
ANR	3916035	ExpressionStatement	signo = SIGTERM	312:2:6095:6110	3915972	8	True				
ANR	3916036	AssignmentExpression	signo = SIGTERM		3915972	0		=			
ANR	3916037	Identifier	signo		3915972	0					
ANR	3916038	Identifier	SIGTERM		3915972	1					
ANR	3916039	ExpressionStatement	"signame = ""SIGTERM"""	313:2:6114:6133	3915972	9	True				
ANR	3916040	AssignmentExpression	"signame = ""SIGTERM"""		3915972	0		=			
ANR	3916041	Identifier	signame		3915972	0					
ANR	3916042	PrimaryExpression	"""SIGTERM"""		3915972	1					
ANR	3916043	BreakStatement	break ;	314:2:6137:6142	3915972	10	True				
ANR	3916044	Label	case DC_SIGPCKPT :	315:1:6145:6161	3915972	11	True				
ANR	3916045	Identifier	DC_SIGPCKPT		3915972	0					
ANR	3916046	ExpressionStatement	"signame = ""DC_SIGPCKPT"""	316:2:6165:6188	3915972	12	True				
ANR	3916047	AssignmentExpression	"signame = ""DC_SIGPCKPT"""		3915972	0		=			
ANR	3916048	Identifier	signame		3915972	0					
ANR	3916049	PrimaryExpression	"""DC_SIGPCKPT"""		3915972	1					
ANR	3916050	BreakStatement	break ;	317:2:6192:6197	3915972	13	True				
ANR	3916051	Label	case DC_SIGCONTINUE :	318:1:6200:6219	3915972	14	True				
ANR	3916052	Identifier	DC_SIGCONTINUE		3915972	0					
ANR	3916053	ExpressionStatement	"signame = ""DC_SIGCONTINUE"""	319:2:6223:6249	3915972	15	True				
ANR	3916054	AssignmentExpression	"signame = ""DC_SIGCONTINUE"""		3915972	0		=			
ANR	3916055	Identifier	signame		3915972	0					
ANR	3916056	PrimaryExpression	"""DC_SIGCONTINUE"""		3915972	1					
ANR	3916057	BreakStatement	break ;	320:2:6253:6258	3915972	16	True				
ANR	3916058	Label	case SIGHUP :	321:1:6261:6272	3915972	17	True				
ANR	3916059	Identifier	SIGHUP		3915972	0					
ANR	3916060	ExpressionStatement	"signame = ""SIGHUP"""	322:2:6276:6294	3915972	18	True				
ANR	3916061	AssignmentExpression	"signame = ""SIGHUP"""		3915972	0		=			
ANR	3916062	Identifier	signame		3915972	0					
ANR	3916063	PrimaryExpression	"""SIGHUP"""		3915972	1					
ANR	3916064	BreakStatement	break ;	323:2:6298:6303	3915972	19	True				
ANR	3916065	Label	case SIGKILL :	324:1:6306:6318	3915972	20	True				
ANR	3916066	Identifier	SIGKILL		3915972	0					
ANR	3916067	ExpressionStatement	"signame = ""SIGKILL"""	325:2:6322:6341	3915972	21	True				
ANR	3916068	AssignmentExpression	"signame = ""SIGKILL"""		3915972	0		=			
ANR	3916069	Identifier	signame		3915972	0					
ANR	3916070	PrimaryExpression	"""SIGKILL"""		3915972	1					
ANR	3916071	BreakStatement	break ;	326:2:6345:6350	3915972	22	True				
ANR	3916072	Label	default :	327:1:6353:6360	3915972	23	True				
ANR	3916073	Identifier	default		3915972	0					
ANR	3916074	ExpressionStatement	"EXCEPT ( ""Unknown signal (%d) in Starter::reallykill"" , signo )"	328:2:6364:6425	3915972	24	True				
ANR	3916075	CallExpression	"EXCEPT ( ""Unknown signal (%d) in Starter::reallykill"" , signo )"		3915972	0					
ANR	3916076	Callee	EXCEPT		3915972	0					
ANR	3916077	Identifier	EXCEPT		3915972	0					
ANR	3916078	ArgumentList	"""Unknown signal (%d) in Starter::reallykill"""		3915972	1					
ANR	3916079	Argument	"""Unknown signal (%d) in Starter::reallykill"""		3915972	0					
ANR	3916080	PrimaryExpression	"""Unknown signal (%d) in Starter::reallykill"""		3915972	0					
ANR	3916081	Argument	signo		3915972	1					
ANR	3916082	Identifier	signo		3915972	0					
ANR	3916083	IfStatement	if ( ! is_dc ( ) )		3915972	6					
ANR	3916084	Condition	! is_dc ( )	333:5:6457:6464	3915972	0	True				
ANR	3916085	UnaryOperationExpression	! is_dc ( )		3915972	0					
ANR	3916086	UnaryOperator	!		3915972	0					
ANR	3916087	CallExpression	is_dc ( )		3915972	1					
ANR	3916088	Callee	is_dc		3915972	0					
ANR	3916089	Identifier	is_dc		3915972	0					
ANR	3916090	ArgumentList			3915972	1					
ANR	3916091	CompoundStatement		44:16:762:762	3915972	1					
ANR	3916092	SwitchStatement	switch ( signo )		3915972	0					
ANR	3916093	Condition	signo	334:10:6480:6484	3915972	0	True				
ANR	3916094	Identifier	signo		3915972	0					
ANR	3916095	CompoundStatement		45:18:782:782	3915972	1					
ANR	3916096	Label	case DC_SIGSUSPEND :	335:2:6492:6510	3915972	0	True				
ANR	3916097	Identifier	DC_SIGSUSPEND		3915972	0					
ANR	3916098	ExpressionStatement	sig = SIGUSR1	336:3:6515:6528	3915972	1	True				
ANR	3916099	AssignmentExpression	sig = SIGUSR1		3915972	0		=			
ANR	3916100	Identifier	sig		3915972	0					
ANR	3916101	Identifier	SIGUSR1		3915972	1					
ANR	3916102	BreakStatement	break ;	337:3:6533:6538	3915972	2	True				
ANR	3916103	Label	case SIGQUIT :	338:2:6542:6554	3915972	3	True				
ANR	3916104	Identifier	SIGQUIT		3915972	0					
ANR	3916105	Label	case DC_SIGHARDKILL :	339:2:6558:6577	3915972	4	True				
ANR	3916106	Identifier	DC_SIGHARDKILL		3915972	0					
ANR	3916107	ExpressionStatement	sig = SIGINT	340:3:6582:6594	3915972	5	True				
ANR	3916108	AssignmentExpression	sig = SIGINT		3915972	0		=			
ANR	3916109	Identifier	sig		3915972	0					
ANR	3916110	Identifier	SIGINT		3915972	1					
ANR	3916111	BreakStatement	break ;	341:3:6599:6604	3915972	6	True				
ANR	3916112	Label	case SIGTERM :	342:2:6608:6620	3915972	7	True				
ANR	3916113	Identifier	SIGTERM		3915972	0					
ANR	3916114	Label	case DC_SIGSOFTKILL :	343:2:6624:6643	3915972	8	True				
ANR	3916115	Identifier	DC_SIGSOFTKILL		3915972	0					
ANR	3916116	ExpressionStatement	sig = SIGTSTP	344:3:6648:6661	3915972	9	True				
ANR	3916117	AssignmentExpression	sig = SIGTSTP		3915972	0		=			
ANR	3916118	Identifier	sig		3915972	0					
ANR	3916119	Identifier	SIGTSTP		3915972	1					
ANR	3916120	BreakStatement	break ;	345:3:6666:6671	3915972	10	True				
ANR	3916121	Label	case DC_SIGPCKPT :	346:2:6675:6691	3915972	11	True				
ANR	3916122	Identifier	DC_SIGPCKPT		3915972	0					
ANR	3916123	ExpressionStatement	sig = SIGUSR2	347:3:6696:6709	3915972	12	True				
ANR	3916124	AssignmentExpression	sig = SIGUSR2		3915972	0		=			
ANR	3916125	Identifier	sig		3915972	0					
ANR	3916126	Identifier	SIGUSR2		3915972	1					
ANR	3916127	BreakStatement	break ;	348:3:6714:6719	3915972	13	True				
ANR	3916128	Label	case DC_SIGCONTINUE :	349:2:6723:6742	3915972	14	True				
ANR	3916129	Identifier	DC_SIGCONTINUE		3915972	0					
ANR	3916130	ExpressionStatement	sig = SIGCONT	350:3:6747:6760	3915972	15	True				
ANR	3916131	AssignmentExpression	sig = SIGCONT		3915972	0		=			
ANR	3916132	Identifier	sig		3915972	0					
ANR	3916133	Identifier	SIGCONT		3915972	1					
ANR	3916134	BreakStatement	break ;	351:3:6765:6770	3915972	16	True				
ANR	3916135	Label	case SIGHUP :	352:2:6774:6785	3915972	17	True				
ANR	3916136	Identifier	SIGHUP		3915972	0					
ANR	3916137	ExpressionStatement	sig = SIGHUP	353:3:6790:6802	3915972	18	True				
ANR	3916138	AssignmentExpression	sig = SIGHUP		3915972	0		=			
ANR	3916139	Identifier	sig		3915972	0					
ANR	3916140	Identifier	SIGHUP		3915972	1					
ANR	3916141	BreakStatement	break ;	354:3:6807:6812	3915972	19	True				
ANR	3916142	Label	case SIGKILL :	355:2:6816:6828	3915972	20	True				
ANR	3916143	Identifier	SIGKILL		3915972	0					
ANR	3916144	ExpressionStatement	sig = SIGKILL	356:3:6833:6846	3915972	21	True				
ANR	3916145	AssignmentExpression	sig = SIGKILL		3915972	0		=			
ANR	3916146	Identifier	sig		3915972	0					
ANR	3916147	Identifier	SIGKILL		3915972	1					
ANR	3916148	BreakStatement	break ;	357:3:6851:6856	3915972	22	True				
ANR	3916149	Label	default :	358:2:6860:6867	3915972	23	True				
ANR	3916150	Identifier	default		3915972	0					
ANR	3916151	ExpressionStatement	"EXCEPT ( ""Unknown signal (%d) in Starter::reallykill"" , signo )"	359:3:6872:6933	3915972	24	True				
ANR	3916152	CallExpression	"EXCEPT ( ""Unknown signal (%d) in Starter::reallykill"" , signo )"		3915972	0					
ANR	3916153	Callee	EXCEPT		3915972	0					
ANR	3916154	Identifier	EXCEPT		3915972	0					
ANR	3916155	ArgumentList	"""Unknown signal (%d) in Starter::reallykill"""		3915972	1					
ANR	3916156	Argument	"""Unknown signal (%d) in Starter::reallykill"""		3915972	0					
ANR	3916157	PrimaryExpression	"""Unknown signal (%d) in Starter::reallykill"""		3915972	0					
ANR	3916158	Argument	signo		3915972	1					
ANR	3916159	Identifier	signo		3915972	0					
ANR	3916160	IdentifierDeclStatement	"int needs_stat = TRUE , first_time = TRUE ;"	394:1:8515:8555	3915972	7	True				
ANR	3916161	IdentifierDecl	needs_stat = TRUE		3915972	0					
ANR	3916162	IdentifierDeclType	int		3915972	0					
ANR	3916163	Identifier	needs_stat		3915972	1					
ANR	3916164	AssignmentExpression	needs_stat = TRUE		3915972	2		=			
ANR	3916165	Identifier	TRUE		3915972	0					
ANR	3916166	Identifier	TRUE		3915972	1					
ANR	3916167	IdentifierDecl	first_time = TRUE		3915972	1					
ANR	3916168	IdentifierDeclType	int		3915972	0					
ANR	3916169	Identifier	first_time		3915972	1					
ANR	3916170	AssignmentExpression	first_time = TRUE		3915972	2		=			
ANR	3916171	Identifier	TRUE		3915972	0					
ANR	3916172	Identifier	TRUE		3915972	1					
ANR	3916173	WhileStatement	while ( needs_stat )		3915972	8					
ANR	3916174	Condition	needs_stat	395:8:8565:8574	3915972	0	True				
ANR	3916175	Identifier	needs_stat		3915972	0					
ANR	3916176	CompoundStatement		106:21:2872:2872	3915972	1					
ANR	3916177	ExpressionStatement	errno = 0	396:2:8582:8591	3915972	0	True				
ANR	3916178	AssignmentExpression	errno = 0		3915972	0		=			
ANR	3916179	Identifier	errno		3915972	0					
ANR	3916180	PrimaryExpression	0		3915972	1					
ANR	3916181	ExpressionStatement	"ret = stat ( s_path , & st )"	397:2:8595:8618	3915972	1	True				
ANR	3916182	AssignmentExpression	"ret = stat ( s_path , & st )"		3915972	0		=			
ANR	3916183	Identifier	ret		3915972	0					
ANR	3916184	CallExpression	"stat ( s_path , & st )"		3915972	1					
ANR	3916185	Callee	stat		3915972	0					
ANR	3916186	Identifier	stat		3915972	0					
ANR	3916187	ArgumentList	s_path		3915972	1					
ANR	3916188	Argument	s_path		3915972	0					
ANR	3916189	Identifier	s_path		3915972	0					
ANR	3916190	Argument	& st		3915972	1					
ANR	3916191	UnaryOperationExpression	& st		3915972	0					
ANR	3916192	UnaryOperator	&		3915972	0					
ANR	3916193	Identifier	st		3915972	1					
ANR	3916194	IfStatement	if ( ret >= 0 )		3915972	2					
ANR	3916195	Condition	ret >= 0	398:6:8626:8632	3915972	0	True				
ANR	3916196	RelationalExpression	ret >= 0		3915972	0		>=			
ANR	3916197	Identifier	ret		3915972	0					
ANR	3916198	PrimaryExpression	0		3915972	1					
ANR	3916199	CompoundStatement		109:16:2930:2930	3915972	1					
ANR	3916200	ExpressionStatement	needs_stat = FALSE	399:3:8641:8659	3915972	0	True				
ANR	3916201	AssignmentExpression	needs_stat = FALSE		3915972	0		=			
ANR	3916202	Identifier	needs_stat		3915972	0					
ANR	3916203	Identifier	FALSE		3915972	1					
ANR	3916204	ContinueStatement	continue ;	400:3:8664:8672	3915972	1	True				
ANR	3916205	SwitchStatement	switch ( errno )		3915972	3					
ANR	3916206	Condition	errno	402:10:8688:8692	3915972	0	True				
ANR	3916207	Identifier	errno		3915972	0					
ANR	3916208	CompoundStatement		113:18:2990:2990	3915972	1					
ANR	3916209	Label	case EINTR :	403:2:8700:8710	3915972	0	True				
ANR	3916210	Identifier	EINTR		3915972	0					
ANR	3916211	Label	case ETIMEDOUT :	404:2:8714:8728	3915972	1	True				
ANR	3916212	Identifier	ETIMEDOUT		3915972	0					
ANR	3916213	BreakStatement	break ;	405:3:8733:8738	3915972	2	True				
ANR	3916214	Label	case ENOENT :	406:2:8742:8753	3915972	3	True				
ANR	3916215	Identifier	ENOENT		3915972	0					
ANR	3916216	Label	case ENOTDIR :	407:2:8757:8769	3915972	4	True				
ANR	3916217	Identifier	ENOTDIR		3915972	0					
ANR	3916218	Label	case EACCES :	408:2:8773:8784	3915972	5	True				
ANR	3916219	Identifier	EACCES		3915972	0					
ANR	3916220	ExpressionStatement	needs_stat = FALSE	409:3:8789:8807	3915972	6	True				
ANR	3916221	AssignmentExpression	needs_stat = FALSE		3915972	0		=			
ANR	3916222	Identifier	needs_stat		3915972	0					
ANR	3916223	Identifier	FALSE		3915972	1					
ANR	3916224	BreakStatement	break ;	410:3:8812:8817	3915972	7	True				
ANR	3916225	Label	case ESTALE :	416:2:9075:9086	3915972	8	True				
ANR	3916226	Identifier	ESTALE		3915972	0					
ANR	3916227	ExpressionStatement	"EXCEPT ( ""Condor binaries are on a stale NFS mount.  Aborting."" )"	417:3:9091:9155	3915972	9	True				
ANR	3916228	CallExpression	"EXCEPT ( ""Condor binaries are on a stale NFS mount.  Aborting."" )"		3915972	0					
ANR	3916229	Callee	EXCEPT		3915972	0					
ANR	3916230	Identifier	EXCEPT		3915972	0					
ANR	3916231	ArgumentList	"""Condor binaries are on a stale NFS mount.  Aborting."""		3915972	1					
ANR	3916232	Argument	"""Condor binaries are on a stale NFS mount.  Aborting."""		3915972	0					
ANR	3916233	PrimaryExpression	"""Condor binaries are on a stale NFS mount.  Aborting."""		3915972	0					
ANR	3916234	BreakStatement	break ;	418:3:9160:9165	3915972	10	True				
ANR	3916235	Label	default :	432:2:9465:9472	3915972	11	True				
ANR	3916236	Identifier	default		3915972	0					
ANR	3916237	ExpressionStatement	"EXCEPT ( ""stat(%s) failed with unexpected errno %d (%s)"" , s_path , errno , strerror ( errno ) )"	433:3:9477:9574	3915972	12	True				
ANR	3916238	CallExpression	"EXCEPT ( ""stat(%s) failed with unexpected errno %d (%s)"" , s_path , errno , strerror ( errno ) )"		3915972	0					
ANR	3916239	Callee	EXCEPT		3915972	0					
ANR	3916240	Identifier	EXCEPT		3915972	0					
ANR	3916241	ArgumentList	"""stat(%s) failed with unexpected errno %d (%s)"""		3915972	1					
ANR	3916242	Argument	"""stat(%s) failed with unexpected errno %d (%s)"""		3915972	0					
ANR	3916243	PrimaryExpression	"""stat(%s) failed with unexpected errno %d (%s)"""		3915972	0					
ANR	3916244	Argument	s_path		3915972	1					
ANR	3916245	Identifier	s_path		3915972	0					
ANR	3916246	Argument	errno		3915972	2					
ANR	3916247	Identifier	errno		3915972	0					
ANR	3916248	Argument	strerror ( errno )		3915972	3					
ANR	3916249	CallExpression	strerror ( errno )		3915972	0					
ANR	3916250	Callee	strerror		3915972	0					
ANR	3916251	Identifier	strerror		3915972	0					
ANR	3916252	ArgumentList	errno		3915972	1					
ANR	3916253	Argument	errno		3915972	0					
ANR	3916254	Identifier	errno		3915972	0					
ANR	3916255	IfStatement	if ( is_dc ( ) )		3915972	9					
ANR	3916256	Condition	is_dc ( )	439:5:9618:9624	3915972	0	True				
ANR	3916257	CallExpression	is_dc ( )		3915972	0					
ANR	3916258	Callee	is_dc		3915972	0					
ANR	3916259	Identifier	is_dc		3915972	0					
ANR	3916260	ArgumentList			3915972	1					
ANR	3916261	CompoundStatement		150:15:3922:3922	3915972	1					
ANR	3916262	IfStatement	if ( type == 1 )		3915972	0					
ANR	3916263	Condition	type == 1	443:7:9777:9785	3915972	0	True				
ANR	3916264	EqualityExpression	type == 1		3915972	0		==			
ANR	3916265	Identifier	type		3915972	0					
ANR	3916266	PrimaryExpression	1		3915972	1					
ANR	3916267	CompoundStatement		154:19:4083:4083	3915972	1					
ANR	3916268	ExpressionStatement	type = 2	444:3:9794:9802	3915972	0	True				
ANR	3916269	AssignmentExpression	type = 2		3915972	0		=			
ANR	3916270	Identifier	type		3915972	0					
ANR	3916271	PrimaryExpression	2		3915972	1					
ANR	3916272	SwitchStatement	switch ( type )		3915972	10					
ANR	3916273	Condition	type	448:9:9821:9824	3915972	0	True				
ANR	3916274	Identifier	type		3915972	0					
ANR	3916275	CompoundStatement		159:16:4122:4122	3915972	1					
ANR	3916276	Label	case 0 :	449:1:9831:9837	3915972	0	True				
ANR	3916277	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""In Starter::kill() with pid %d, sig %d (%s)\\n"" , s_pid , signo , signame )"	450:2:9841:9947	3915972	1	True				
ANR	3916278	CallExpression	"dprintf ( D_FULLDEBUG , ""In Starter::kill() with pid %d, sig %d (%s)\\n"" , s_pid , signo , signame )"		3915972	0					
ANR	3916279	Callee	dprintf		3915972	0					
ANR	3916280	Identifier	dprintf		3915972	0					
ANR	3916281	ArgumentList	D_FULLDEBUG		3915972	1					
ANR	3916282	Argument	D_FULLDEBUG		3915972	0					
ANR	3916283	Identifier	D_FULLDEBUG		3915972	0					
ANR	3916284	Argument	"""In Starter::kill() with pid %d, sig %d (%s)\\n"""		3915972	1					
ANR	3916285	PrimaryExpression	"""In Starter::kill() with pid %d, sig %d (%s)\\n"""		3915972	0					
ANR	3916286	Argument	s_pid		3915972	2					
ANR	3916287	Identifier	s_pid		3915972	0					
ANR	3916288	Argument	signo		3915972	3					
ANR	3916289	Identifier	signo		3915972	0					
ANR	3916290	Argument	signame		3915972	4					
ANR	3916291	Identifier	signame		3915972	0					
ANR	3916292	BreakStatement	break ;	453:2:9951:9956	3915972	2	True				
ANR	3916293	Label	case 1 :	454:1:9959:9965	3915972	3	True				
ANR	3916294	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""In Starter::killpg() with pid %d, sig %d (%s)\\n"" , s_pid , signo , signame )"	455:2:9969:10077	3915972	4	True				
ANR	3916295	CallExpression	"dprintf ( D_FULLDEBUG , ""In Starter::killpg() with pid %d, sig %d (%s)\\n"" , s_pid , signo , signame )"		3915972	0					
ANR	3916296	Callee	dprintf		3915972	0					
ANR	3916297	Identifier	dprintf		3915972	0					
ANR	3916298	ArgumentList	D_FULLDEBUG		3915972	1					
ANR	3916299	Argument	D_FULLDEBUG		3915972	0					
ANR	3916300	Identifier	D_FULLDEBUG		3915972	0					
ANR	3916301	Argument	"""In Starter::killpg() with pid %d, sig %d (%s)\\n"""		3915972	1					
ANR	3916302	PrimaryExpression	"""In Starter::killpg() with pid %d, sig %d (%s)\\n"""		3915972	0					
ANR	3916303	Argument	s_pid		3915972	2					
ANR	3916304	Identifier	s_pid		3915972	0					
ANR	3916305	Argument	signo		3915972	3					
ANR	3916306	Identifier	signo		3915972	0					
ANR	3916307	Argument	signame		3915972	4					
ANR	3916308	Identifier	signame		3915972	0					
ANR	3916309	BreakStatement	break ;	458:2:10081:10086	3915972	5	True				
ANR	3916310	Label	case 2 :	459:1:10089:10095	3915972	6	True				
ANR	3916311	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""In Starter::kill_kids() with pid %d, sig %d (%s)\\n"" , s_pid , signo , signame )"	460:2:10099:10210	3915972	7	True				
ANR	3916312	CallExpression	"dprintf ( D_FULLDEBUG , ""In Starter::kill_kids() with pid %d, sig %d (%s)\\n"" , s_pid , signo , signame )"		3915972	0					
ANR	3916313	Callee	dprintf		3915972	0					
ANR	3916314	Identifier	dprintf		3915972	0					
ANR	3916315	ArgumentList	D_FULLDEBUG		3915972	1					
ANR	3916316	Argument	D_FULLDEBUG		3915972	0					
ANR	3916317	Identifier	D_FULLDEBUG		3915972	0					
ANR	3916318	Argument	"""In Starter::kill_kids() with pid %d, sig %d (%s)\\n"""		3915972	1					
ANR	3916319	PrimaryExpression	"""In Starter::kill_kids() with pid %d, sig %d (%s)\\n"""		3915972	0					
ANR	3916320	Argument	s_pid		3915972	2					
ANR	3916321	Identifier	s_pid		3915972	0					
ANR	3916322	Argument	signo		3915972	3					
ANR	3916323	Identifier	signo		3915972	0					
ANR	3916324	Argument	signame		3915972	4					
ANR	3916325	Identifier	signame		3915972	0					
ANR	3916326	BreakStatement	break ;	463:2:10214:10219	3915972	8	True				
ANR	3916327	Label	default :	464:1:10222:10229	3915972	9	True				
ANR	3916328	Identifier	default		3915972	0					
ANR	3916329	ExpressionStatement	"EXCEPT ( ""Unknown type (%d) in Starter::reallykill\\n"" , type )"	465:2:10233:10293	3915972	10	True				
ANR	3916330	CallExpression	"EXCEPT ( ""Unknown type (%d) in Starter::reallykill\\n"" , type )"		3915972	0					
ANR	3916331	Callee	EXCEPT		3915972	0					
ANR	3916332	Identifier	EXCEPT		3915972	0					
ANR	3916333	ArgumentList	"""Unknown type (%d) in Starter::reallykill\\n"""		3915972	1					
ANR	3916334	Argument	"""Unknown type (%d) in Starter::reallykill\\n"""		3915972	0					
ANR	3916335	PrimaryExpression	"""Unknown type (%d) in Starter::reallykill\\n"""		3915972	0					
ANR	3916336	Argument	type		3915972	1					
ANR	3916337	Identifier	type		3915972	0					
ANR	3916338	ExpressionStatement	priv = set_root_priv ( )	468:1:10300:10322	3915972	11	True				
ANR	3916339	AssignmentExpression	priv = set_root_priv ( )		3915972	0		=			
ANR	3916340	Identifier	priv		3915972	0					
ANR	3916341	CallExpression	set_root_priv ( )		3915972	1					
ANR	3916342	Callee	set_root_priv		3915972	0					
ANR	3916343	Identifier	set_root_priv		3915972	0					
ANR	3916344	ArgumentList			3915972	1					
ANR	3916345	IfStatement	if ( ! is_dc ( ) )		3915972	12					
ANR	3916346	Condition	! is_dc ( )	471:5:10344:10352	3915972	0	True				
ANR	3916347	UnaryOperationExpression	! is_dc ( )		3915972	0					
ANR	3916348	UnaryOperator	!		3915972	0					
ANR	3916349	CallExpression	is_dc ( )		3915972	1					
ANR	3916350	Callee	is_dc		3915972	0					
ANR	3916351	Identifier	is_dc		3915972	0					
ANR	3916352	ArgumentList			3915972	1					
ANR	3916353	CompoundStatement		182:17:4650:4650	3915972	1					
ANR	3916354	IfStatement	if ( sig != SIGSTOP && sig != SIGCONT && sig != SIGKILL )		3915972	0					
ANR	3916355	Condition	sig != SIGSTOP && sig != SIGCONT && sig != SIGKILL	475:6:10525:10574	3915972	0	True				
ANR	3916356	AndExpression	sig != SIGSTOP && sig != SIGCONT && sig != SIGKILL		3915972	0		&&			
ANR	3916357	EqualityExpression	sig != SIGSTOP		3915972	0		!=			
ANR	3916358	Identifier	sig		3915972	0					
ANR	3916359	Identifier	SIGSTOP		3915972	1					
ANR	3916360	AndExpression	sig != SIGCONT && sig != SIGKILL		3915972	1		&&			
ANR	3916361	EqualityExpression	sig != SIGCONT		3915972	0		!=			
ANR	3916362	Identifier	sig		3915972	0					
ANR	3916363	Identifier	SIGCONT		3915972	1					
ANR	3916364	EqualityExpression	sig != SIGKILL		3915972	1		!=			
ANR	3916365	Identifier	sig		3915972	0					
ANR	3916366	Identifier	SIGKILL		3915972	1					
ANR	3916367	CompoundStatement		186:59:4872:4872	3915972	1					
ANR	3916368	IfStatement	if ( type == 1 )		3915972	0					
ANR	3916369	Condition	type == 1	476:7:10587:10595	3915972	0	True				
ANR	3916370	EqualityExpression	type == 1		3915972	0		==			
ANR	3916371	Identifier	type		3915972	0					
ANR	3916372	PrimaryExpression	1		3915972	1					
ANR	3916373	CompoundStatement		187:19:4893:4893	3915972	1					
ANR	3916374	Statement	ret	477:4:10606:10608	3915972	0	True				
ANR	3916375	Statement	=	477:8:10610:10610	3915972	1	True				
ANR	3916376	Statement	::	477:10:10612:10613	3915972	2	True				
ANR	3916377	ExpressionStatement	"kill ( - ( s_pid ) , SIGCONT )"	477:12:10614:10639	3915972	3	True				
ANR	3916378	CallExpression	"kill ( - ( s_pid ) , SIGCONT )"		3915972	0					
ANR	3916379	Callee	kill		3915972	0					
ANR	3916380	Identifier	kill		3915972	0					
ANR	3916381	ArgumentList	- ( s_pid )		3915972	1					
ANR	3916382	Argument	- ( s_pid )		3915972	0					
ANR	3916383	UnaryOperationExpression	- ( s_pid )		3915972	0					
ANR	3916384	UnaryOperator	-		3915972	0					
ANR	3916385	Identifier	s_pid		3915972	1					
ANR	3916386	Argument	SIGCONT		3915972	1					
ANR	3916387	Identifier	SIGCONT		3915972	0					
ANR	3916388	ElseStatement	else		3915972	0					
ANR	3916389	IfStatement	if ( type == 0 && ! daemonCore -> ProcessExitedButNotReaped ( s_pid ) )		3915972	0					
ANR	3916390	Condition	type == 0 && ! daemonCore -> ProcessExitedButNotReaped ( s_pid )	478:14:10655:10719	3915972	0	True				
ANR	3916391	AndExpression	type == 0 && ! daemonCore -> ProcessExitedButNotReaped ( s_pid )		3915972	0		&&			
ANR	3916392	EqualityExpression	type == 0		3915972	0		==			
ANR	3916393	Identifier	type		3915972	0					
ANR	3916394	PrimaryExpression	0		3915972	1					
ANR	3916395	UnaryOperationExpression	! daemonCore -> ProcessExitedButNotReaped ( s_pid )		3915972	1					
ANR	3916396	UnaryOperator	!		3915972	0					
ANR	3916397	CallExpression	daemonCore -> ProcessExitedButNotReaped ( s_pid )		3915972	1					
ANR	3916398	Callee	daemonCore -> ProcessExitedButNotReaped		3915972	0					
ANR	3916399	PtrMemberAccess	daemonCore -> ProcessExitedButNotReaped		3915972	0					
ANR	3916400	Identifier	daemonCore		3915972	0					
ANR	3916401	Identifier	ProcessExitedButNotReaped		3915972	1					
ANR	3916402	ArgumentList	s_pid		3915972	1					
ANR	3916403	Argument	s_pid		3915972	0					
ANR	3916404	Identifier	s_pid		3915972	0					
ANR	3916405	CompoundStatement		191:3:5020:5020	3915972	1					
ANR	3916406	Statement	ret	481:4:10732:10734	3915972	0	True				
ANR	3916407	Statement	=	481:8:10736:10736	3915972	1	True				
ANR	3916408	Statement	::	481:10:10738:10739	3915972	2	True				
ANR	3916409	ExpressionStatement	"kill ( ( s_pid ) , SIGCONT )"	481:12:10740:10764	3915972	3	True				
ANR	3916410	CallExpression	"kill ( ( s_pid ) , SIGCONT )"		3915972	0					
ANR	3916411	Callee	kill		3915972	0					
ANR	3916412	Identifier	kill		3915972	0					
ANR	3916413	ArgumentList	s_pid		3915972	1					
ANR	3916414	Argument	s_pid		3915972	0					
ANR	3916415	Identifier	s_pid		3915972	0					
ANR	3916416	Argument	SIGCONT		3915972	1					
ANR	3916417	Identifier	SIGCONT		3915972	0					
ANR	3916418	SwitchStatement	switch ( type )		3915972	13					
ANR	3916419	Condition	type	488:9:10836:10839	3915972	0	True				
ANR	3916420	Identifier	type		3915972	0					
ANR	3916421	CompoundStatement		199:16:5137:5137	3915972	1					
ANR	3916422	Label	case 0 :	489:1:10846:10852	3915972	0	True				
ANR	3916423	IfStatement	if ( is_dc ( ) )		3915972	1					
ANR	3916424	Condition	is_dc ( )	490:6:10860:10866	3915972	0	True				
ANR	3916425	CallExpression	is_dc ( )		3915972	0					
ANR	3916426	Callee	is_dc		3915972	0					
ANR	3916427	Identifier	is_dc		3915972	0					
ANR	3916428	ArgumentList			3915972	1					
ANR	3916429	CompoundStatement		201:16:5164:5164	3915972	1					
ANR	3916430	ExpressionStatement	"ret = daemonCore -> Send_Signal ( ( s_pid ) , signo )"	491:3:10877:10924	3915972	0	True				
ANR	3916431	AssignmentExpression	"ret = daemonCore -> Send_Signal ( ( s_pid ) , signo )"		3915972	0		=			
ANR	3916432	Identifier	ret		3915972	0					
ANR	3916433	CallExpression	"daemonCore -> Send_Signal ( ( s_pid ) , signo )"		3915972	1					
ANR	3916434	Callee	daemonCore -> Send_Signal		3915972	0					
ANR	3916435	PtrMemberAccess	daemonCore -> Send_Signal		3915972	0					
ANR	3916436	Identifier	daemonCore		3915972	0					
ANR	3916437	Identifier	Send_Signal		3915972	1					
ANR	3916438	ArgumentList	s_pid		3915972	1					
ANR	3916439	Argument	s_pid		3915972	0					
ANR	3916440	Identifier	s_pid		3915972	0					
ANR	3916441	Argument	signo		3915972	1					
ANR	3916442	Identifier	signo		3915972	0					
ANR	3916443	IfStatement	if ( ret == FALSE )		3915972	1					
ANR	3916444	Condition	ret == FALSE	493:7:10993:11004	3915972	0	True				
ANR	3916445	EqualityExpression	ret == FALSE		3915972	0		==			
ANR	3916446	Identifier	ret		3915972	0					
ANR	3916447	Identifier	FALSE		3915972	1					
ANR	3916448	CompoundStatement		204:22:5302:5302	3915972	1					
ANR	3916449	ExpressionStatement	ret = - 1	494:4:11014:11022	3915972	0	True				
ANR	3916450	AssignmentExpression	ret = - 1		3915972	0		=			
ANR	3916451	Identifier	ret		3915972	0					
ANR	3916452	UnaryOperationExpression	- 1		3915972	1					
ANR	3916453	UnaryOperator	-		3915972	0					
ANR	3916454	PrimaryExpression	1		3915972	1					
ANR	3916455	ElseStatement	else		3915972	0					
ANR	3916456	CompoundStatement		206:10:5328:5328	3915972	0					
ANR	3916457	ExpressionStatement	ret = 0	496:4:11040:11047	3915972	0	True				
ANR	3916458	AssignmentExpression	ret = 0		3915972	0		=			
ANR	3916459	Identifier	ret		3915972	0					
ANR	3916460	PrimaryExpression	0		3915972	1					
ANR	3916461	BreakStatement	break ;	498:3:11057:11062	3915972	2	True				
ANR	3916462	ElseStatement	else		3915972	0					
ANR	3916463	CompoundStatement		212:7:5384:5384	3915972	0					
ANR	3916464	IfStatement	if ( ! daemonCore -> ProcessExitedButNotReaped ( s_pid ) )		3915972	0					
ANR	3916465	Condition	! daemonCore -> ProcessExitedButNotReaped ( s_pid )	502:7:11099:11143	3915972	0	True				
ANR	3916466	UnaryOperationExpression	! daemonCore -> ProcessExitedButNotReaped ( s_pid )		3915972	0					
ANR	3916467	UnaryOperator	!		3915972	0					
ANR	3916468	CallExpression	daemonCore -> ProcessExitedButNotReaped ( s_pid )		3915972	1					
ANR	3916469	Callee	daemonCore -> ProcessExitedButNotReaped		3915972	0					
ANR	3916470	PtrMemberAccess	daemonCore -> ProcessExitedButNotReaped		3915972	0					
ANR	3916471	Identifier	daemonCore		3915972	0					
ANR	3916472	Identifier	ProcessExitedButNotReaped		3915972	1					
ANR	3916473	ArgumentList	s_pid		3915972	1					
ANR	3916474	Argument	s_pid		3915972	0					
ANR	3916475	Identifier	s_pid		3915972	0					
ANR	3916476	CompoundStatement		213:54:5440:5440	3915972	1					
ANR	3916477	Statement	ret	503:4:11152:11154	3915972	0	True				
ANR	3916478	Statement	=	503:8:11156:11156	3915972	1	True				
ANR	3916479	Statement	::	503:10:11158:11159	3915972	2	True				
ANR	3916480	ExpressionStatement	"kill ( ( s_pid ) , sig )"	503:12:11160:11180	3915972	3	True				
ANR	3916481	CallExpression	"kill ( ( s_pid ) , sig )"		3915972	0					
ANR	3916482	Callee	kill		3915972	0					
ANR	3916483	Identifier	kill		3915972	0					
ANR	3916484	ArgumentList	s_pid		3915972	1					
ANR	3916485	Argument	s_pid		3915972	0					
ANR	3916486	Identifier	s_pid		3915972	0					
ANR	3916487	Argument	sig		3915972	1					
ANR	3916488	Identifier	sig		3915972	0					
ANR	3916489	BreakStatement	break ;	505:3:11190:11195	3915972	1	True				
ANR	3916490	Label	case 1 :	509:1:11224:11230	3915972	2	True				
ANR	3916491	Statement	ret	512:2:11292:11294	3915972	3	True				
ANR	3916492	Statement	=	512:6:11296:11296	3915972	4	True				
ANR	3916493	Statement	::	512:8:11298:11299	3915972	5	True				
ANR	3916494	ExpressionStatement	"kill ( - ( s_pid ) , sig )"	512:10:11300:11321	3915972	6	True				
ANR	3916495	CallExpression	"kill ( - ( s_pid ) , sig )"		3915972	0					
ANR	3916496	Callee	kill		3915972	0					
ANR	3916497	Identifier	kill		3915972	0					
ANR	3916498	ArgumentList	- ( s_pid )		3915972	1					
ANR	3916499	Argument	- ( s_pid )		3915972	0					
ANR	3916500	UnaryOperationExpression	- ( s_pid )		3915972	0					
ANR	3916501	UnaryOperator	-		3915972	0					
ANR	3916502	Identifier	s_pid		3915972	1					
ANR	3916503	Argument	sig		3915972	1					
ANR	3916504	Identifier	sig		3915972	0					
ANR	3916505	BreakStatement	break ;	513:2:11325:11330	3915972	7	True				
ANR	3916506	Label	case 2 :	516:1:11355:11361	3915972	8	True				
ANR	3916507	IfStatement	if ( signo != SIGKILL )		3915972	9					
ANR	3916508	Condition	signo != SIGKILL	517:6:11369:11384	3915972	0	True				
ANR	3916509	EqualityExpression	signo != SIGKILL		3915972	0		!=			
ANR	3916510	Identifier	signo		3915972	0					
ANR	3916511	Identifier	SIGKILL		3915972	1					
ANR	3916512	CompoundStatement		228:25:5682:5682	3915972	1					
ANR	3916513	ExpressionStatement	"dprintf ( D_ALWAYS , ""In Starter::killkids() with %s\\n"" , signame )"	518:3:11393:11464	3915972	0	True				
ANR	3916514	CallExpression	"dprintf ( D_ALWAYS , ""In Starter::killkids() with %s\\n"" , signame )"		3915972	0					
ANR	3916515	Callee	dprintf		3915972	0					
ANR	3916516	Identifier	dprintf		3915972	0					
ANR	3916517	ArgumentList	D_ALWAYS		3915972	1					
ANR	3916518	Argument	D_ALWAYS		3915972	0					
ANR	3916519	Identifier	D_ALWAYS		3915972	0					
ANR	3916520	Argument	"""In Starter::killkids() with %s\\n"""		3915972	1					
ANR	3916521	PrimaryExpression	"""In Starter::killkids() with %s\\n"""		3915972	0					
ANR	3916522	Argument	signame		3915972	2					
ANR	3916523	Identifier	signame		3915972	0					
ANR	3916524	ExpressionStatement	"EXCEPT ( ""Starter::killkids() can only handle SIGKILL!"" )"	520:3:11469:11525	3915972	1	True				
ANR	3916525	CallExpression	"EXCEPT ( ""Starter::killkids() can only handle SIGKILL!"" )"		3915972	0					
ANR	3916526	Callee	EXCEPT		3915972	0					
ANR	3916527	Identifier	EXCEPT		3915972	0					
ANR	3916528	ArgumentList	"""Starter::killkids() can only handle SIGKILL!"""		3915972	1					
ANR	3916529	Argument	"""Starter::killkids() can only handle SIGKILL!"""		3915972	0					
ANR	3916530	PrimaryExpression	"""Starter::killkids() can only handle SIGKILL!"""		3915972	0					
ANR	3916531	IfStatement	if ( daemonCore -> Kill_Family ( s_pid ) == FALSE )		3915972	10					
ANR	3916532	Condition	daemonCore -> Kill_Family ( s_pid ) == FALSE	522:6:11537:11575	3915972	0	True				
ANR	3916533	EqualityExpression	daemonCore -> Kill_Family ( s_pid ) == FALSE		3915972	0		==			
ANR	3916534	CallExpression	daemonCore -> Kill_Family ( s_pid )		3915972	0					
ANR	3916535	Callee	daemonCore -> Kill_Family		3915972	0					
ANR	3916536	PtrMemberAccess	daemonCore -> Kill_Family		3915972	0					
ANR	3916537	Identifier	daemonCore		3915972	0					
ANR	3916538	Identifier	Kill_Family		3915972	1					
ANR	3916539	ArgumentList	s_pid		3915972	1					
ANR	3916540	Argument	s_pid		3915972	0					
ANR	3916541	Identifier	s_pid		3915972	0					
ANR	3916542	Identifier	FALSE		3915972	1					
ANR	3916543	CompoundStatement		233:47:5872:5872	3915972	1					
ANR	3916544	ExpressionStatement	"dprintf ( D_ALWAYS , ""error killing process family of starter with pid %u\\n"" , s_pid )"	523:3:11583:11679	3915972	0	True				
ANR	3916545	CallExpression	"dprintf ( D_ALWAYS , ""error killing process family of starter with pid %u\\n"" , s_pid )"		3915972	0					
ANR	3916546	Callee	dprintf		3915972	0					
ANR	3916547	Identifier	dprintf		3915972	0					
ANR	3916548	ArgumentList	D_ALWAYS		3915972	1					
ANR	3916549	Argument	D_ALWAYS		3915972	0					
ANR	3916550	Identifier	D_ALWAYS		3915972	0					
ANR	3916551	Argument	"""error killing process family of starter with pid %u\\n"""		3915972	1					
ANR	3916552	PrimaryExpression	"""error killing process family of starter with pid %u\\n"""		3915972	0					
ANR	3916553	Argument	s_pid		3915972	2					
ANR	3916554	Identifier	s_pid		3915972	0					
ANR	3916555	ExpressionStatement	ret = - 1	526:3:11684:11692	3915972	1	True				
ANR	3916556	AssignmentExpression	ret = - 1		3915972	0		=			
ANR	3916557	Identifier	ret		3915972	0					
ANR	3916558	UnaryOperationExpression	- 1		3915972	1					
ANR	3916559	UnaryOperator	-		3915972	0					
ANR	3916560	PrimaryExpression	1		3915972	1					
ANR	3916561	BreakStatement	break ;	528:2:11700:11705	3915972	11	True				
ANR	3916562	ExpressionStatement	set_priv ( priv )	531:1:11712:11726	3915972	14	True				
ANR	3916563	CallExpression	set_priv ( priv )		3915972	0					
ANR	3916564	Callee	set_priv		3915972	0					
ANR	3916565	Identifier	set_priv		3915972	0					
ANR	3916566	ArgumentList	priv		3915972	1					
ANR	3916567	Argument	priv		3915972	0					
ANR	3916568	Identifier	priv		3915972	0					
ANR	3916569	IfStatement	if ( ret < 0 )		3915972	15					
ANR	3916570	Condition	ret < 0	534:5:11782:11788	3915972	0	True				
ANR	3916571	RelationalExpression	ret < 0		3915972	0		<			
ANR	3916572	Identifier	ret		3915972	0					
ANR	3916573	PrimaryExpression	0		3915972	1					
ANR	3916574	CompoundStatement		245:15:6086:6086	3915972	1					
ANR	3916575	IfStatement	if ( errno == ESRCH )		3915972	0					
ANR	3916576	Condition	errno == ESRCH	535:5:11799:11810	3915972	0	True				
ANR	3916577	EqualityExpression	errno == ESRCH		3915972	0		==			
ANR	3916578	Identifier	errno		3915972	0					
ANR	3916579	Identifier	ESRCH		3915972	1					
ANR	3916580	CompoundStatement		246:19:6107:6107	3915972	1					
ANR	3916581	ReturnStatement	return true ;	537:3:11860:11871	3915972	0	True				
ANR	3916582	Identifier	true		3915972	0					
ANR	3916583	ElseStatement	else		3915972	0					
ANR	3916584	CompoundStatement		249:9:6176:6176	3915972	0					
ANR	3916585	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error sending signal to starter, errno = %d (%s)\\n"" , errno , strerror ( errno ) )"	539:3:11887:11998	3915972	0	True				
ANR	3916586	CallExpression	"dprintf ( D_ALWAYS , ""Error sending signal to starter, errno = %d (%s)\\n"" , errno , strerror ( errno ) )"		3915972	0					
ANR	3916587	Callee	dprintf		3915972	0					
ANR	3916588	Identifier	dprintf		3915972	0					
ANR	3916589	ArgumentList	D_ALWAYS		3915972	1					
ANR	3916590	Argument	D_ALWAYS		3915972	0					
ANR	3916591	Identifier	D_ALWAYS		3915972	0					
ANR	3916592	Argument	"""Error sending signal to starter, errno = %d (%s)\\n"""		3915972	1					
ANR	3916593	PrimaryExpression	"""Error sending signal to starter, errno = %d (%s)\\n"""		3915972	0					
ANR	3916594	Argument	errno		3915972	2					
ANR	3916595	Identifier	errno		3915972	0					
ANR	3916596	Argument	strerror ( errno )		3915972	3					
ANR	3916597	CallExpression	strerror ( errno )		3915972	0					
ANR	3916598	Callee	strerror		3915972	0					
ANR	3916599	Identifier	strerror		3915972	0					
ANR	3916600	ArgumentList	errno		3915972	1					
ANR	3916601	Argument	errno		3915972	0					
ANR	3916602	Identifier	errno		3915972	0					
ANR	3916603	ReturnStatement	return false ;	542:3:12003:12015	3915972	1	True				
ANR	3916604	Identifier	false		3915972	0					
ANR	3916605	ElseStatement	else		3915972	0					
ANR	3916606	CompoundStatement		255:8:6323:6323	3915972	0					
ANR	3916607	ReturnStatement	return true ;	545:2:12033:12044	3915972	0	True				
ANR	3916608	Identifier	true		3915972	0					
ANR	3916609	ReturnType	bool		3915972	1					
ANR	3916610	Identifier	Starter :: reallykill		3915972	2					
ANR	3916611	ParameterList	"int signo , int type"		3915972	3					
ANR	3916612	Parameter	int signo	289:21:5683:5691	3915972	0	True				
ANR	3916613	ParameterType	int		3915972	0					
ANR	3916614	Identifier	signo		3915972	1					
ANR	3916615	Parameter	int type	289:32:5694:5701	3915972	1	True				
ANR	3916616	ParameterType	int		3915972	0					
ANR	3916617	Identifier	type		3915972	1					
ANR	3916618	CFGEntryNode	ENTRY		3915972		True				
ANR	3916619	CFGExitNode	EXIT		3915972		True				
ANR	3916620	Symbol	SIGQUIT		3915972						
ANR	3916621	Symbol	is_dc		3915972						
ANR	3916622	Symbol	& st		3915972						
ANR	3916623	Symbol	type		3915972						
ANR	3916624	Symbol	SIGKILL		3915972						
ANR	3916625	Symbol	sig		3915972						
ANR	3916626	Symbol	daemonCore -> Kill_Family		3915972						
ANR	3916627	Symbol	first_time		3915972						
ANR	3916628	Symbol	signo		3915972						
ANR	3916629	Symbol	daemonCore		3915972						
ANR	3916630	Symbol	SIGHUP		3915972						
ANR	3916631	Symbol	priv		3915972						
ANR	3916632	Symbol	SIGTERM		3915972						
ANR	3916633	Symbol	SIGCONT		3915972						
ANR	3916634	Symbol	s_path		3915972						
ANR	3916635	Symbol	ret		3915972						
ANR	3916636	Symbol	st		3915972						
ANR	3916637	Symbol	errno		3915972						
ANR	3916638	Symbol	stat		3915972						
ANR	3916639	Symbol	daemonCore -> ProcessExitedButNotReaped		3915972						
ANR	3916640	Symbol	signame		3915972						
ANR	3916641	Symbol	SIGUSR2		3915972						
ANR	3916642	Symbol	D_ALWAYS		3915972						
ANR	3916643	Symbol	false		3915972						
ANR	3916644	Symbol	SIGUSR1		3915972						
ANR	3916645	Symbol	TRUE		3915972						
ANR	3916646	Symbol	SIGTSTP		3915972						
ANR	3916647	Symbol	D_FULLDEBUG		3915972						
ANR	3916648	Symbol	set_root_priv		3915972						
ANR	3916649	Symbol	strerror		3915972						
ANR	3916650	Symbol	daemonCore -> Send_Signal		3915972						
ANR	3916651	Symbol	needs_stat		3915972						
ANR	3916652	Symbol	SIGSTOP		3915972						
ANR	3916653	Symbol	SIGINT		3915972						
ANR	3916654	Symbol	* daemonCore		3915972						
ANR	3916655	Symbol	true		3915972						
ANR	3916656	Symbol	FALSE		3915972						
ANR	3916657	Symbol	ESRCH		3915972						
ANR	3916658	Symbol	s_pid		3915972						
ANR	3916659	Function	Starter :: finalizeExecuteDir	549:0:12052:12327							
ANR	3916660	FunctionDef	Starter :: finalizeExecuteDir ()		3916659	0					
ANR	3916661	CompoundStatement		551:0:12087:12327	3916659	0					
ANR	3916662	IfStatement	if ( ! executeDir ( ) )		3916659	0					
ANR	3916663	Condition	! executeDir ( )	554:5:12218:12230	3916659	0	True				
ANR	3916664	UnaryOperationExpression	! executeDir ( )		3916659	0					
ANR	3916665	UnaryOperator	!		3916659	0					
ANR	3916666	CallExpression	executeDir ( )		3916659	1					
ANR	3916667	Callee	executeDir		3916659	0					
ANR	3916668	Identifier	executeDir		3916659	0					
ANR	3916669	ArgumentList			3916659	1					
ANR	3916670	CompoundStatement		4:21:146:146	3916659	1					
ANR	3916671	ExpressionStatement	ASSERT ( s_claim && s_claim -> rip ( ) )	555:2:12238:12273	3916659	0	True				
ANR	3916672	CallExpression	ASSERT ( s_claim && s_claim -> rip ( ) )		3916659	0					
ANR	3916673	Callee	ASSERT		3916659	0					
ANR	3916674	Identifier	ASSERT		3916659	0					
ANR	3916675	ArgumentList	s_claim && s_claim -> rip ( )		3916659	1					
ANR	3916676	Argument	s_claim && s_claim -> rip ( )		3916659	0					
ANR	3916677	AndExpression	s_claim && s_claim -> rip ( )		3916659	0		&&			
ANR	3916678	Identifier	s_claim		3916659	0					
ANR	3916679	CallExpression	s_claim -> rip ( )		3916659	1					
ANR	3916680	Callee	s_claim -> rip		3916659	0					
ANR	3916681	PtrMemberAccess	s_claim -> rip		3916659	0					
ANR	3916682	Identifier	s_claim		3916659	0					
ANR	3916683	Identifier	rip		3916659	1					
ANR	3916684	ArgumentList			3916659	1					
ANR	3916685	ExpressionStatement	setExecuteDir ( s_claim -> rip ( ) -> executeDir ( ) )	556:2:12277:12322	3916659	1	True				
ANR	3916686	CallExpression	setExecuteDir ( s_claim -> rip ( ) -> executeDir ( ) )		3916659	0					
ANR	3916687	Callee	setExecuteDir		3916659	0					
ANR	3916688	Identifier	setExecuteDir		3916659	0					
ANR	3916689	ArgumentList	s_claim -> rip ( ) -> executeDir ( )		3916659	1					
ANR	3916690	Argument	s_claim -> rip ( ) -> executeDir ( )		3916659	0					
ANR	3916691	CallExpression	s_claim -> rip ( ) -> executeDir ( )		3916659	0					
ANR	3916692	Callee	s_claim -> rip ( ) -> executeDir		3916659	0					
ANR	3916693	PtrMemberAccess	s_claim -> rip ( ) -> executeDir		3916659	0					
ANR	3916694	CallExpression	s_claim -> rip ( )		3916659	0					
ANR	3916695	Callee	s_claim -> rip		3916659	0					
ANR	3916696	PtrMemberAccess	s_claim -> rip		3916659	0					
ANR	3916697	Identifier	s_claim		3916659	0					
ANR	3916698	Identifier	rip		3916659	1					
ANR	3916699	ArgumentList			3916659	1					
ANR	3916700	Identifier	executeDir		3916659	1					
ANR	3916701	ArgumentList			3916659	1					
ANR	3916702	ReturnType	void		3916659	1					
ANR	3916703	Identifier	Starter :: finalizeExecuteDir		3916659	2					
ANR	3916704	ParameterList			3916659	3					
ANR	3916705	CFGEntryNode	ENTRY		3916659		True				
ANR	3916706	CFGExitNode	EXIT		3916659		True				
ANR	3916707	Symbol	s_claim -> rip ( ) -> executeDir		3916659						
ANR	3916708	Symbol	* s_claim		3916659						
ANR	3916709	Symbol	* * s_claim		3916659						
ANR	3916710	Symbol	s_claim -> rip		3916659						
ANR	3916711	Symbol	* s_claim -> rip		3916659						
ANR	3916712	Symbol	executeDir		3916659						
ANR	3916713	Symbol	s_claim		3916659						
ANR	3916714	Function	Starter :: executeDir	560:0:12330:12430							
ANR	3916715	FunctionDef	Starter :: executeDir ()		3916714	0					
ANR	3916716	CompoundStatement		562:0:12365:12430	3916714	0					
ANR	3916717	ReturnStatement	return s_execute_dir . Length ( ) ? s_execute_dir . Value ( ) : NULL ;	563:1:12368:12428	3916714	0	True				
ANR	3916718	ConditionalExpression	s_execute_dir . Length ( ) ? s_execute_dir . Value ( ) : NULL		3916714	0					
ANR	3916719	Condition	s_execute_dir . Length ( )		3916714	0					
ANR	3916720	CallExpression	s_execute_dir . Length ( )		3916714	0					
ANR	3916721	Callee	s_execute_dir . Length		3916714	0					
ANR	3916722	MemberAccess	s_execute_dir . Length		3916714	0					
ANR	3916723	Identifier	s_execute_dir		3916714	0					
ANR	3916724	Identifier	Length		3916714	1					
ANR	3916725	ArgumentList			3916714	1					
ANR	3916726	CallExpression	s_execute_dir . Value ( )		3916714	1					
ANR	3916727	Callee	s_execute_dir . Value		3916714	0					
ANR	3916728	MemberAccess	s_execute_dir . Value		3916714	0					
ANR	3916729	Identifier	s_execute_dir		3916714	0					
ANR	3916730	Identifier	Value		3916714	1					
ANR	3916731	ArgumentList			3916714	1					
ANR	3916732	Identifier	NULL		3916714	2					
ANR	3916733	ReturnType	char const *		3916714	1					
ANR	3916734	Identifier	Starter :: executeDir		3916714	2					
ANR	3916735	ParameterList			3916714	3					
ANR	3916736	CFGEntryNode	ENTRY		3916714		True				
ANR	3916737	CFGExitNode	EXIT		3916714		True				
ANR	3916738	Symbol	NULL		3916714						
ANR	3916739	Symbol	s_execute_dir . Length		3916714						
ANR	3916740	Symbol	s_execute_dir		3916714						
ANR	3916741	Symbol	s_execute_dir . Value		3916714						
ANR	3916742	Function	Starter :: spawn	566:0:12433:13120							
ANR	3916743	FunctionDef	"Starter :: spawn (time_t now , Stream * s)"		3916742	0					
ANR	3916744	CompoundStatement		568:0:12478:13120	3916742	0					
ANR	3916745	ExpressionStatement	finalizeExecuteDir ( )	570:1:12534:12554	3916742	0	True				
ANR	3916746	CallExpression	finalizeExecuteDir ( )		3916742	0					
ANR	3916747	Callee	finalizeExecuteDir		3916742	0					
ANR	3916748	Identifier	finalizeExecuteDir		3916742	0					
ANR	3916749	ArgumentList			3916742	1					
ANR	3916750	IfStatement	if ( claimType ( ) == CLAIM_COD )		3916742	1					
ANR	3916751	Condition	claimType ( ) == CLAIM_COD	572:5:12562:12585	3916742	0	True				
ANR	3916752	EqualityExpression	claimType ( ) == CLAIM_COD		3916742	0		==			
ANR	3916753	CallExpression	claimType ( )		3916742	0					
ANR	3916754	Callee	claimType		3916742	0					
ANR	3916755	Identifier	claimType		3916742	0					
ANR	3916756	ArgumentList			3916742	1					
ANR	3916757	Identifier	CLAIM_COD		3916742	1					
ANR	3916758	CompoundStatement		5:31:109:109	3916742	1					
ANR	3916759	ExpressionStatement	s_pid = execJobPipeStarter ( )	573:2:12592:12620	3916742	0	True				
ANR	3916760	AssignmentExpression	s_pid = execJobPipeStarter ( )		3916742	0		=			
ANR	3916761	Identifier	s_pid		3916742	0					
ANR	3916762	CallExpression	execJobPipeStarter ( )		3916742	1					
ANR	3916763	Callee	execJobPipeStarter		3916742	0					
ANR	3916764	Identifier	execJobPipeStarter		3916742	0					
ANR	3916765	ArgumentList			3916742	1					
ANR	3916766	ElseStatement	else		3916742	0					
ANR	3916767	IfStatement	if ( claimType ( ) == CLAIM_FETCH )		3916742	0					
ANR	3916768	Condition	claimType ( ) == CLAIM_FETCH	576:10:12654:12679	3916742	0	True				
ANR	3916769	EqualityExpression	claimType ( ) == CLAIM_FETCH		3916742	0		==			
ANR	3916770	CallExpression	claimType ( )		3916742	0					
ANR	3916771	Callee	claimType		3916742	0					
ANR	3916772	Identifier	claimType		3916742	0					
ANR	3916773	ArgumentList			3916742	1					
ANR	3916774	Identifier	CLAIM_FETCH		3916742	1					
ANR	3916775	CompoundStatement		9:38:203:203	3916742	1					
ANR	3916776	ExpressionStatement	s_pid = execJobPipeStarter ( )	577:2:12686:12714	3916742	0	True				
ANR	3916777	AssignmentExpression	s_pid = execJobPipeStarter ( )		3916742	0		=			
ANR	3916778	Identifier	s_pid		3916742	0					
ANR	3916779	CallExpression	execJobPipeStarter ( )		3916742	1					
ANR	3916780	Callee	execJobPipeStarter		3916742	0					
ANR	3916781	Identifier	execJobPipeStarter		3916742	0					
ANR	3916782	ArgumentList			3916742	1					
ANR	3916783	ElseStatement	else		3916742	0					
ANR	3916784	IfStatement	if ( isBOINC ( ) )		3916742	0					
ANR	3916785	Condition	isBOINC ( )	581:10:12772:12780	3916742	0	True				
ANR	3916786	CallExpression	isBOINC ( )		3916742	0					
ANR	3916787	Callee	isBOINC		3916742	0					
ANR	3916788	Identifier	isBOINC		3916742	0					
ANR	3916789	ArgumentList			3916742	1					
ANR	3916790	CompoundStatement		14:22:305:305	3916742	1					
ANR	3916791	ExpressionStatement	s_pid = execBOINCStarter ( )	582:2:12788:12814	3916742	0	True				
ANR	3916792	AssignmentExpression	s_pid = execBOINCStarter ( )		3916742	0		=			
ANR	3916793	Identifier	s_pid		3916742	0					
ANR	3916794	CallExpression	execBOINCStarter ( )		3916742	1					
ANR	3916795	Callee	execBOINCStarter		3916742	0					
ANR	3916796	Identifier	execBOINCStarter		3916742	0					
ANR	3916797	ArgumentList			3916742	1					
ANR	3916798	ElseStatement	else		3916742	0					
ANR	3916799	IfStatement	if ( is_dc ( ) )		3916742	0					
ANR	3916800	Condition	is_dc ( )	585:10:12854:12860	3916742	0	True				
ANR	3916801	CallExpression	is_dc ( )		3916742	0					
ANR	3916802	Callee	is_dc		3916742	0					
ANR	3916803	Identifier	is_dc		3916742	0					
ANR	3916804	ArgumentList			3916742	1					
ANR	3916805	CompoundStatement		18:20:385:385	3916742	1					
ANR	3916806	ExpressionStatement	s_pid = execDCStarter ( s )	586:2:12868:12894	3916742	0	True				
ANR	3916807	AssignmentExpression	s_pid = execDCStarter ( s )		3916742	0		=			
ANR	3916808	Identifier	s_pid		3916742	0					
ANR	3916809	CallExpression	execDCStarter ( s )		3916742	1					
ANR	3916810	Callee	execDCStarter		3916742	0					
ANR	3916811	Identifier	execDCStarter		3916742	0					
ANR	3916812	ArgumentList	s		3916742	1					
ANR	3916813	Argument	s		3916742	0					
ANR	3916814	Identifier	s		3916742	0					
ANR	3916815	ElseStatement	else		3916742	0					
ANR	3916816	CompoundStatement		21:6:427:427	3916742	0					
ANR	3916817	ExpressionStatement	s_pid = execOldStarter ( )	590:2:12953:12977	3916742	0	True				
ANR	3916818	AssignmentExpression	s_pid = execOldStarter ( )		3916742	0		=			
ANR	3916819	Identifier	s_pid		3916742	0					
ANR	3916820	CallExpression	execOldStarter ( )		3916742	1					
ANR	3916821	Callee	execOldStarter		3916742	0					
ANR	3916822	Identifier	execOldStarter		3916742	0					
ANR	3916823	ArgumentList			3916742	1					
ANR	3916824	IfStatement	if ( s_pid == 0 )		3916742	2					
ANR	3916825	Condition	s_pid == 0	593:5:12988:12997	3916742	0	True				
ANR	3916826	EqualityExpression	s_pid == 0		3916742	0		==			
ANR	3916827	Identifier	s_pid		3916742	0					
ANR	3916828	PrimaryExpression	0		3916742	1					
ANR	3916829	CompoundStatement		26:18:522:522	3916742	1					
ANR	3916830	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: exec_starter returned %d\\n"" , s_pid )"	594:2:13005:13068	3916742	0	True				
ANR	3916831	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: exec_starter returned %d\\n"" , s_pid )"		3916742	0					
ANR	3916832	Callee	dprintf		3916742	0					
ANR	3916833	Identifier	dprintf		3916742	0					
ANR	3916834	ArgumentList	D_ALWAYS		3916742	1					
ANR	3916835	Argument	D_ALWAYS		3916742	0					
ANR	3916836	Identifier	D_ALWAYS		3916742	0					
ANR	3916837	Argument	"""ERROR: exec_starter returned %d\\n"""		3916742	1					
ANR	3916838	PrimaryExpression	"""ERROR: exec_starter returned %d\\n"""		3916742	0					
ANR	3916839	Argument	s_pid		3916742	2					
ANR	3916840	Identifier	s_pid		3916742	0					
ANR	3916841	ElseStatement	else		3916742	0					
ANR	3916842	CompoundStatement		28:8:599:599	3916742	0					
ANR	3916843	ExpressionStatement	s_birthdate = now	596:2:13082:13099	3916742	0	True				
ANR	3916844	AssignmentExpression	s_birthdate = now		3916742	0		=			
ANR	3916845	Identifier	s_birthdate		3916742	0					
ANR	3916846	Identifier	now		3916742	1					
ANR	3916847	ReturnStatement	return s_pid ;	599:1:13106:13118	3916742	3	True				
ANR	3916848	Identifier	s_pid		3916742	0					
ANR	3916849	ReturnType	int		3916742	1					
ANR	3916850	Identifier	Starter :: spawn		3916742	2					
ANR	3916851	ParameterList	"time_t now , Stream * s"		3916742	3					
ANR	3916852	Parameter	time_t now	567:16:12454:12463	3916742	0	True				
ANR	3916853	ParameterType	time_t		3916742	0					
ANR	3916854	Identifier	now		3916742	1					
ANR	3916855	Parameter	Stream * s	567:28:12466:12474	3916742	1	True				
ANR	3916856	ParameterType	Stream *		3916742	0					
ANR	3916857	Identifier	s		3916742	1					
ANR	3916858	CFGEntryNode	ENTRY		3916742		True				
ANR	3916859	CFGExitNode	EXIT		3916742		True				
ANR	3916860	Symbol	execBOINCStarter		3916742						
ANR	3916861	Symbol	CLAIM_FETCH		3916742						
ANR	3916862	Symbol	CLAIM_COD		3916742						
ANR	3916863	Symbol	execDCStarter		3916742						
ANR	3916864	Symbol	D_ALWAYS		3916742						
ANR	3916865	Symbol	is_dc		3916742						
ANR	3916866	Symbol	execOldStarter		3916742						
ANR	3916867	Symbol	s_birthdate		3916742						
ANR	3916868	Symbol	claimType		3916742						
ANR	3916869	Symbol	execJobPipeStarter		3916742						
ANR	3916870	Symbol	s		3916742						
ANR	3916871	Symbol	isBOINC		3916742						
ANR	3916872	Symbol	now		3916742						
ANR	3916873	Symbol	s_pid		3916742						
ANR	3916874	Function	Starter :: exited	602:0:13123:14915							
ANR	3916875	FunctionDef	Starter :: exited (int status)		3916874	0					
ANR	3916876	CompoundStatement		604:0:13156:14915	3916874	0					
ANR	3916877	IdentifierDeclStatement	ClassAd * jobAd = NULL ;	605:1:13159:13180	3916874	0	True				
ANR	3916878	IdentifierDecl	* jobAd = NULL		3916874	0					
ANR	3916879	IdentifierDeclType	ClassAd *		3916874	0					
ANR	3916880	Identifier	jobAd		3916874	1					
ANR	3916881	AssignmentExpression	* jobAd = NULL		3916874	2		=			
ANR	3916882	Identifier	NULL		3916874	0					
ANR	3916883	Identifier	NULL		3916874	1					
ANR	3916884	IdentifierDeclStatement	bool jobAdNeedsFree = true ;	606:1:13183:13209	3916874	1	True				
ANR	3916885	IdentifierDecl	jobAdNeedsFree = true		3916874	0					
ANR	3916886	IdentifierDeclType	bool		3916874	0					
ANR	3916887	Identifier	jobAdNeedsFree		3916874	1					
ANR	3916888	AssignmentExpression	jobAdNeedsFree = true		3916874	2		=			
ANR	3916889	Identifier	true		3916874	0					
ANR	3916890	Identifier	true		3916874	1					
ANR	3916891	IfStatement	if ( s_claim && s_claim -> ad ( ) )		3916874	2					
ANR	3916892	Condition	s_claim && s_claim -> ad ( )	608:5:13217:13240	3916874	0	True				
ANR	3916893	AndExpression	s_claim && s_claim -> ad ( )		3916874	0		&&			
ANR	3916894	Identifier	s_claim		3916874	0					
ANR	3916895	CallExpression	s_claim -> ad ( )		3916874	1					
ANR	3916896	Callee	s_claim -> ad		3916874	0					
ANR	3916897	PtrMemberAccess	s_claim -> ad		3916874	0					
ANR	3916898	Identifier	s_claim		3916874	0					
ANR	3916899	Identifier	ad		3916874	1					
ANR	3916900	ArgumentList			3916874	1					
ANR	3916901	CompoundStatement		5:31:86:86	3916874	1					
ANR	3916902	ExpressionStatement	jobAd = s_claim -> ad ( )	610:2:13332:13353	3916874	0	True				
ANR	3916903	AssignmentExpression	jobAd = s_claim -> ad ( )		3916874	0		=			
ANR	3916904	Identifier	jobAd		3916874	0					
ANR	3916905	CallExpression	s_claim -> ad ( )		3916874	1					
ANR	3916906	Callee	s_claim -> ad		3916874	0					
ANR	3916907	PtrMemberAccess	s_claim -> ad		3916874	0					
ANR	3916908	Identifier	s_claim		3916874	0					
ANR	3916909	Identifier	ad		3916874	1					
ANR	3916910	ArgumentList			3916874	1					
ANR	3916911	ExpressionStatement	jobAdNeedsFree = false	611:2:13357:13379	3916874	1	True				
ANR	3916912	AssignmentExpression	jobAdNeedsFree = false		3916874	0		=			
ANR	3916913	Identifier	jobAdNeedsFree		3916874	0					
ANR	3916914	Identifier	false		3916874	1					
ANR	3916915	ElseStatement	else		3916874	0					
ANR	3916916	CompoundStatement		22:2:649:662	3916874	0					
ANR	3916917	IdentifierDeclStatement	int now = ( int ) time ( 0 ) ;	614:2:13413:13436	3916874	0	True				
ANR	3916918	IdentifierDecl	now = ( int ) time ( 0 )		3916874	0					
ANR	3916919	IdentifierDeclType	int		3916874	0					
ANR	3916920	Identifier	now		3916874	1					
ANR	3916921	AssignmentExpression	now = ( int ) time ( 0 )		3916874	2		=			
ANR	3916922	Identifier	now		3916874	0					
ANR	3916923	CastExpression	( int ) time ( 0 )		3916874	1					
ANR	3916924	CastTarget	int		3916874	0					
ANR	3916925	CallExpression	time ( 0 )		3916874	1					
ANR	3916926	Callee	time		3916874	0					
ANR	3916927	Identifier	time		3916874	0					
ANR	3916928	ArgumentList	0		3916874	1					
ANR	3916929	Argument	0		3916874	0					
ANR	3916930	PrimaryExpression	0		3916874	0					
ANR	3916931	ExpressionStatement	jobAd = new ClassAd ( )	615:2:13440:13461	3916874	1	True				
ANR	3916932	AssignmentExpression	jobAd = new ClassAd ( )		3916874	0		=			
ANR	3916933	Identifier	jobAd		3916874	0					
ANR	3916934	UnaryExpression	new ClassAd ( )		3916874	1					
ANR	3916935	ExpressionStatement	"jobAd -> SetMyTypeName ( ""Job"" )"	616:2:13465:13492	3916874	2	True				
ANR	3916936	CallExpression	"jobAd -> SetMyTypeName ( ""Job"" )"		3916874	0					
ANR	3916937	Callee	jobAd -> SetMyTypeName		3916874	0					
ANR	3916938	PtrMemberAccess	jobAd -> SetMyTypeName		3916874	0					
ANR	3916939	Identifier	jobAd		3916874	0					
ANR	3916940	Identifier	SetMyTypeName		3916874	1					
ANR	3916941	ArgumentList	"""Job"""		3916874	1					
ANR	3916942	Argument	"""Job"""		3916874	0					
ANR	3916943	PrimaryExpression	"""Job"""		3916874	0					
ANR	3916944	ExpressionStatement	"jobAd -> SetTargetTypeName ( ""Machine"" )"	617:2:13496:13531	3916874	3	True				
ANR	3916945	CallExpression	"jobAd -> SetTargetTypeName ( ""Machine"" )"		3916874	0					
ANR	3916946	Callee	jobAd -> SetTargetTypeName		3916874	0					
ANR	3916947	PtrMemberAccess	jobAd -> SetTargetTypeName		3916874	0					
ANR	3916948	Identifier	jobAd		3916874	0					
ANR	3916949	Identifier	SetTargetTypeName		3916874	1					
ANR	3916950	ArgumentList	"""Machine"""		3916874	1					
ANR	3916951	Argument	"""Machine"""		3916874	0					
ANR	3916952	PrimaryExpression	"""Machine"""		3916874	0					
ANR	3916953	ExpressionStatement	"jobAd -> Assign ( ATTR_CLUSTER_ID , now )"	618:2:13535:13570	3916874	4	True				
ANR	3916954	CallExpression	"jobAd -> Assign ( ATTR_CLUSTER_ID , now )"		3916874	0					
ANR	3916955	Callee	jobAd -> Assign		3916874	0					
ANR	3916956	PtrMemberAccess	jobAd -> Assign		3916874	0					
ANR	3916957	Identifier	jobAd		3916874	0					
ANR	3916958	Identifier	Assign		3916874	1					
ANR	3916959	ArgumentList	ATTR_CLUSTER_ID		3916874	1					
ANR	3916960	Argument	ATTR_CLUSTER_ID		3916874	0					
ANR	3916961	Identifier	ATTR_CLUSTER_ID		3916874	0					
ANR	3916962	Argument	now		3916874	1					
ANR	3916963	Identifier	now		3916874	0					
ANR	3916964	ExpressionStatement	"jobAd -> Assign ( ATTR_PROC_ID , 1 )"	619:2:13574:13604	3916874	5	True				
ANR	3916965	CallExpression	"jobAd -> Assign ( ATTR_PROC_ID , 1 )"		3916874	0					
ANR	3916966	Callee	jobAd -> Assign		3916874	0					
ANR	3916967	PtrMemberAccess	jobAd -> Assign		3916874	0					
ANR	3916968	Identifier	jobAd		3916874	0					
ANR	3916969	Identifier	Assign		3916874	1					
ANR	3916970	ArgumentList	ATTR_PROC_ID		3916874	1					
ANR	3916971	Argument	ATTR_PROC_ID		3916874	0					
ANR	3916972	Identifier	ATTR_PROC_ID		3916874	0					
ANR	3916973	Argument	1		3916874	1					
ANR	3916974	PrimaryExpression	1		3916874	0					
ANR	3916975	ExpressionStatement	"jobAd -> Assign ( ATTR_OWNER , ""boinc"" )"	620:2:13608:13642	3916874	6	True				
ANR	3916976	CallExpression	"jobAd -> Assign ( ATTR_OWNER , ""boinc"" )"		3916874	0					
ANR	3916977	Callee	jobAd -> Assign		3916874	0					
ANR	3916978	PtrMemberAccess	jobAd -> Assign		3916874	0					
ANR	3916979	Identifier	jobAd		3916874	0					
ANR	3916980	Identifier	Assign		3916874	1					
ANR	3916981	ArgumentList	ATTR_OWNER		3916874	1					
ANR	3916982	Argument	ATTR_OWNER		3916874	0					
ANR	3916983	Identifier	ATTR_OWNER		3916874	0					
ANR	3916984	Argument	"""boinc"""		3916874	1					
ANR	3916985	PrimaryExpression	"""boinc"""		3916874	0					
ANR	3916986	ExpressionStatement	"jobAd -> Assign ( ATTR_Q_DATE , ( int ) s_birthdate )"	621:2:13646:13690	3916874	7	True				
ANR	3916987	CallExpression	"jobAd -> Assign ( ATTR_Q_DATE , ( int ) s_birthdate )"		3916874	0					
ANR	3916988	Callee	jobAd -> Assign		3916874	0					
ANR	3916989	PtrMemberAccess	jobAd -> Assign		3916874	0					
ANR	3916990	Identifier	jobAd		3916874	0					
ANR	3916991	Identifier	Assign		3916874	1					
ANR	3916992	ArgumentList	ATTR_Q_DATE		3916874	1					
ANR	3916993	Argument	ATTR_Q_DATE		3916874	0					
ANR	3916994	Identifier	ATTR_Q_DATE		3916874	0					
ANR	3916995	Argument	( int ) s_birthdate		3916874	1					
ANR	3916996	CastExpression	( int ) s_birthdate		3916874	0					
ANR	3916997	CastTarget	int		3916874	0					
ANR	3916998	Identifier	s_birthdate		3916874	1					
ANR	3916999	ExpressionStatement	"jobAd -> Assign ( ATTR_JOB_PRIO , 0 )"	622:2:13694:13725	3916874	8	True				
ANR	3917000	CallExpression	"jobAd -> Assign ( ATTR_JOB_PRIO , 0 )"		3916874	0					
ANR	3917001	Callee	jobAd -> Assign		3916874	0					
ANR	3917002	PtrMemberAccess	jobAd -> Assign		3916874	0					
ANR	3917003	Identifier	jobAd		3916874	0					
ANR	3917004	Identifier	Assign		3916874	1					
ANR	3917005	ArgumentList	ATTR_JOB_PRIO		3916874	1					
ANR	3917006	Argument	ATTR_JOB_PRIO		3916874	0					
ANR	3917007	Identifier	ATTR_JOB_PRIO		3916874	0					
ANR	3917008	Argument	0		3916874	1					
ANR	3917009	PrimaryExpression	0		3916874	0					
ANR	3917010	ExpressionStatement	"jobAd -> Assign ( ATTR_IMAGE_SIZE , 0 )"	623:2:13729:13762	3916874	9	True				
ANR	3917011	CallExpression	"jobAd -> Assign ( ATTR_IMAGE_SIZE , 0 )"		3916874	0					
ANR	3917012	Callee	jobAd -> Assign		3916874	0					
ANR	3917013	PtrMemberAccess	jobAd -> Assign		3916874	0					
ANR	3917014	Identifier	jobAd		3916874	0					
ANR	3917015	Identifier	Assign		3916874	1					
ANR	3917016	ArgumentList	ATTR_IMAGE_SIZE		3916874	1					
ANR	3917017	Argument	ATTR_IMAGE_SIZE		3916874	0					
ANR	3917018	Identifier	ATTR_IMAGE_SIZE		3916874	0					
ANR	3917019	Argument	0		3916874	1					
ANR	3917020	PrimaryExpression	0		3916874	0					
ANR	3917021	ExpressionStatement	"jobAd -> Assign ( ATTR_JOB_CMD , ""boinc"" )"	624:2:13766:13802	3916874	10	True				
ANR	3917022	CallExpression	"jobAd -> Assign ( ATTR_JOB_CMD , ""boinc"" )"		3916874	0					
ANR	3917023	Callee	jobAd -> Assign		3916874	0					
ANR	3917024	PtrMemberAccess	jobAd -> Assign		3916874	0					
ANR	3917025	Identifier	jobAd		3916874	0					
ANR	3917026	Identifier	Assign		3916874	1					
ANR	3917027	ArgumentList	ATTR_JOB_CMD		3916874	1					
ANR	3917028	Argument	ATTR_JOB_CMD		3916874	0					
ANR	3917029	Identifier	ATTR_JOB_CMD		3916874	0					
ANR	3917030	Argument	"""boinc"""		3916874	1					
ANR	3917031	PrimaryExpression	"""boinc"""		3916874	0					
ANR	3917032	IdentifierDeclStatement	MyString gjid ;	625:2:13806:13819	3916874	11	True				
ANR	3917033	IdentifierDecl	gjid		3916874	0					
ANR	3917034	IdentifierDeclType	MyString		3916874	0					
ANR	3917035	Identifier	gjid		3916874	1					
ANR	3917036	ExpressionStatement	"gjid . sprintf ( ""%s#%d#%d#%d"" , get_local_hostname ( ) . Value ( ) , now , 1 , now )"	626:2:13823:13900	3916874	12	True				
ANR	3917037	CallExpression	"gjid . sprintf ( ""%s#%d#%d#%d"" , get_local_hostname ( ) . Value ( ) , now , 1 , now )"		3916874	0					
ANR	3917038	Callee	gjid . sprintf		3916874	0					
ANR	3917039	MemberAccess	gjid . sprintf		3916874	0					
ANR	3917040	Identifier	gjid		3916874	0					
ANR	3917041	Identifier	sprintf		3916874	1					
ANR	3917042	ArgumentList	"""%s#%d#%d#%d"""		3916874	1					
ANR	3917043	Argument	"""%s#%d#%d#%d"""		3916874	0					
ANR	3917044	PrimaryExpression	"""%s#%d#%d#%d"""		3916874	0					
ANR	3917045	Argument	get_local_hostname ( ) . Value ( )		3916874	1					
ANR	3917046	CallExpression	get_local_hostname ( ) . Value ( )		3916874	0					
ANR	3917047	Callee	get_local_hostname ( ) . Value		3916874	0					
ANR	3917048	MemberAccess	get_local_hostname ( ) . Value		3916874	0					
ANR	3917049	CallExpression	get_local_hostname ( )		3916874	0					
ANR	3917050	Callee	get_local_hostname		3916874	0					
ANR	3917051	Identifier	get_local_hostname		3916874	0					
ANR	3917052	ArgumentList			3916874	1					
ANR	3917053	Identifier	Value		3916874	1					
ANR	3917054	ArgumentList			3916874	1					
ANR	3917055	Argument	now		3916874	2					
ANR	3917056	Identifier	now		3916874	0					
ANR	3917057	Argument	1		3916874	3					
ANR	3917058	PrimaryExpression	1		3916874	0					
ANR	3917059	Argument	now		3916874	4					
ANR	3917060	Identifier	now		3916874	0					
ANR	3917061	ExpressionStatement	"jobAd -> Assign ( ATTR_GLOBAL_JOB_ID , gjid )"	628:2:13904:13943	3916874	13	True				
ANR	3917062	CallExpression	"jobAd -> Assign ( ATTR_GLOBAL_JOB_ID , gjid )"		3916874	0					
ANR	3917063	Callee	jobAd -> Assign		3916874	0					
ANR	3917064	PtrMemberAccess	jobAd -> Assign		3916874	0					
ANR	3917065	Identifier	jobAd		3916874	0					
ANR	3917066	Identifier	Assign		3916874	1					
ANR	3917067	ArgumentList	ATTR_GLOBAL_JOB_ID		3916874	1					
ANR	3917068	Argument	ATTR_GLOBAL_JOB_ID		3916874	0					
ANR	3917069	Identifier	ATTR_GLOBAL_JOB_ID		3916874	0					
ANR	3917070	Argument	gjid		3916874	1					
ANR	3917071	Identifier	gjid		3916874	0					
ANR	3917072	ExpressionStatement	"jobAd -> Assign ( ATTR_COMPLETION_DATE , ( int ) time ( 0 ) )"	632:1:13991:14040	3916874	3	True				
ANR	3917073	CallExpression	"jobAd -> Assign ( ATTR_COMPLETION_DATE , ( int ) time ( 0 ) )"		3916874	0					
ANR	3917074	Callee	jobAd -> Assign		3916874	0					
ANR	3917075	PtrMemberAccess	jobAd -> Assign		3916874	0					
ANR	3917076	Identifier	jobAd		3916874	0					
ANR	3917077	Identifier	Assign		3916874	1					
ANR	3917078	ArgumentList	ATTR_COMPLETION_DATE		3916874	1					
ANR	3917079	Argument	ATTR_COMPLETION_DATE		3916874	0					
ANR	3917080	Identifier	ATTR_COMPLETION_DATE		3916874	0					
ANR	3917081	Argument	( int ) time ( 0 )		3916874	1					
ANR	3917082	CastExpression	( int ) time ( 0 )		3916874	0					
ANR	3917083	CastTarget	int		3916874	0					
ANR	3917084	CallExpression	time ( 0 )		3916874	1					
ANR	3917085	Callee	time		3916874	0					
ANR	3917086	Identifier	time		3916874	0					
ANR	3917087	ArgumentList	0		3916874	1					
ANR	3917088	Argument	0		3916874	0					
ANR	3917089	PrimaryExpression	0		3916874	0					
ANR	3917090	IdentifierDeclStatement	int runtime = time ( 0 ) - s_birthdate ;	633:1:14043:14078	3916874	4	True				
ANR	3917091	IdentifierDecl	runtime = time ( 0 ) - s_birthdate		3916874	0					
ANR	3917092	IdentifierDeclType	int		3916874	0					
ANR	3917093	Identifier	runtime		3916874	1					
ANR	3917094	AssignmentExpression	runtime = time ( 0 ) - s_birthdate		3916874	2		=			
ANR	3917095	Identifier	runtime		3916874	0					
ANR	3917096	AdditiveExpression	time ( 0 ) - s_birthdate		3916874	1		-			
ANR	3917097	CallExpression	time ( 0 )		3916874	0					
ANR	3917098	Callee	time		3916874	0					
ANR	3917099	Identifier	time		3916874	0					
ANR	3917100	ArgumentList	0		3916874	1					
ANR	3917101	Argument	0		3916874	0					
ANR	3917102	PrimaryExpression	0		3916874	0					
ANR	3917103	Identifier	s_birthdate		3916874	1					
ANR	3917104	ExpressionStatement	"jobAd -> Assign ( ATTR_JOB_REMOTE_WALL_CLOCK , runtime )"	635:1:14083:14133	3916874	5	True				
ANR	3917105	CallExpression	"jobAd -> Assign ( ATTR_JOB_REMOTE_WALL_CLOCK , runtime )"		3916874	0					
ANR	3917106	Callee	jobAd -> Assign		3916874	0					
ANR	3917107	PtrMemberAccess	jobAd -> Assign		3916874	0					
ANR	3917108	Identifier	jobAd		3916874	0					
ANR	3917109	Identifier	Assign		3916874	1					
ANR	3917110	ArgumentList	ATTR_JOB_REMOTE_WALL_CLOCK		3916874	1					
ANR	3917111	Argument	ATTR_JOB_REMOTE_WALL_CLOCK		3916874	0					
ANR	3917112	Identifier	ATTR_JOB_REMOTE_WALL_CLOCK		3916874	0					
ANR	3917113	Argument	runtime		3916874	1					
ANR	3917114	Identifier	runtime		3916874	0					
ANR	3917115	IdentifierDeclStatement	int jobStatus = COMPLETED ;	636:1:14136:14161	3916874	6	True				
ANR	3917116	IdentifierDecl	jobStatus = COMPLETED		3916874	0					
ANR	3917117	IdentifierDeclType	int		3916874	0					
ANR	3917118	Identifier	jobStatus		3916874	1					
ANR	3917119	AssignmentExpression	jobStatus = COMPLETED		3916874	2		=			
ANR	3917120	Identifier	COMPLETED		3916874	0					
ANR	3917121	Identifier	COMPLETED		3916874	1					
ANR	3917122	IfStatement	if ( WIFSIGNALED ( status ) )		3916874	7					
ANR	3917123	Condition	WIFSIGNALED ( status )	637:5:14168:14186	3916874	0	True				
ANR	3917124	CallExpression	WIFSIGNALED ( status )		3916874	0					
ANR	3917125	Callee	WIFSIGNALED		3916874	0					
ANR	3917126	Identifier	WIFSIGNALED		3916874	0					
ANR	3917127	ArgumentList	status		3916874	1					
ANR	3917128	Argument	status		3916874	0					
ANR	3917129	Identifier	status		3916874	0					
ANR	3917130	CompoundStatement		34:26:1032:1032	3916874	1					
ANR	3917131	ExpressionStatement	jobStatus = REMOVED	638:2:14193:14212	3916874	0	True				
ANR	3917132	AssignmentExpression	jobStatus = REMOVED		3916874	0		=			
ANR	3917133	Identifier	jobStatus		3916874	0					
ANR	3917134	Identifier	REMOVED		3916874	1					
ANR	3917135	ExpressionStatement	"jobAd -> Assign ( ATTR_JOB_STATUS , jobStatus )"	640:1:14218:14259	3916874	8	True				
ANR	3917136	CallExpression	"jobAd -> Assign ( ATTR_JOB_STATUS , jobStatus )"		3916874	0					
ANR	3917137	Callee	jobAd -> Assign		3916874	0					
ANR	3917138	PtrMemberAccess	jobAd -> Assign		3916874	0					
ANR	3917139	Identifier	jobAd		3916874	0					
ANR	3917140	Identifier	Assign		3916874	1					
ANR	3917141	ArgumentList	ATTR_JOB_STATUS		3916874	1					
ANR	3917142	Argument	ATTR_JOB_STATUS		3916874	0					
ANR	3917143	Identifier	ATTR_JOB_STATUS		3916874	0					
ANR	3917144	Argument	jobStatus		3916874	1					
ANR	3917145	Identifier	jobStatus		3916874	0					
ANR	3917146	ExpressionStatement	AppendHistory ( jobAd )	641:1:14262:14282	3916874	9	True				
ANR	3917147	CallExpression	AppendHistory ( jobAd )		3916874	0					
ANR	3917148	Callee	AppendHistory		3916874	0					
ANR	3917149	Identifier	AppendHistory		3916874	0					
ANR	3917150	ArgumentList	jobAd		3916874	1					
ANR	3917151	Argument	jobAd		3916874	0					
ANR	3917152	Identifier	jobAd		3916874	0					
ANR	3917153	ExpressionStatement	"WritePerJobHistoryFile ( jobAd , true )"	642:1:14285:14347	3916874	10	True				
ANR	3917154	CallExpression	"WritePerJobHistoryFile ( jobAd , true )"		3916874	0					
ANR	3917155	Callee	WritePerJobHistoryFile		3916874	0					
ANR	3917156	Identifier	WritePerJobHistoryFile		3916874	0					
ANR	3917157	ArgumentList	jobAd		3916874	1					
ANR	3917158	Argument	jobAd		3916874	0					
ANR	3917159	Identifier	jobAd		3916874	0					
ANR	3917160	Argument	true		3916874	1					
ANR	3917161	Identifier	true		3916874	0					
ANR	3917162	IfStatement	if ( jobAdNeedsFree )		3916874	11					
ANR	3917163	Condition	jobAdNeedsFree	644:5:14355:14368	3916874	0	True				
ANR	3917164	Identifier	jobAdNeedsFree		3916874	0					
ANR	3917165	CompoundStatement		41:21:1214:1214	3916874	1					
ANR	3917166	Statement	delete	645:2:14375:14380	3916874	0	True				
ANR	3917167	ExpressionStatement	jobAd	645:9:14382:14387	3916874	1	True				
ANR	3917168	Identifier	jobAd		3916874	0					
ANR	3917169	ExpressionStatement	cancelKillTimer ( )	649:1:14441:14458	3916874	12	True				
ANR	3917170	CallExpression	cancelKillTimer ( )		3916874	0					
ANR	3917171	Callee	cancelKillTimer		3916874	0					
ANR	3917172	Identifier	cancelKillTimer		3916874	0					
ANR	3917173	ArgumentList			3916874	1					
ANR	3917174	IfStatement	if ( daemonCore -> Kill_Family ( s_pid ) == FALSE )		3916874	13					
ANR	3917175	Condition	daemonCore -> Kill_Family ( s_pid ) == FALSE	653:5:14548:14586	3916874	0	True				
ANR	3917176	EqualityExpression	daemonCore -> Kill_Family ( s_pid ) == FALSE		3916874	0		==			
ANR	3917177	CallExpression	daemonCore -> Kill_Family ( s_pid )		3916874	0					
ANR	3917178	Callee	daemonCore -> Kill_Family		3916874	0					
ANR	3917179	PtrMemberAccess	daemonCore -> Kill_Family		3916874	0					
ANR	3917180	Identifier	daemonCore		3916874	0					
ANR	3917181	Identifier	Kill_Family		3916874	1					
ANR	3917182	ArgumentList	s_pid		3916874	1					
ANR	3917183	Argument	s_pid		3916874	0					
ANR	3917184	Identifier	s_pid		3916874	0					
ANR	3917185	Identifier	FALSE		3916874	1					
ANR	3917186	CompoundStatement		50:46:1432:1432	3916874	1					
ANR	3917187	ExpressionStatement	"dprintf ( D_ALWAYS , ""error killing process family of starter with pid %u\\n"" , s_pid )"	654:2:14593:14694	3916874	0	True				
ANR	3917188	CallExpression	"dprintf ( D_ALWAYS , ""error killing process family of starter with pid %u\\n"" , s_pid )"		3916874	0					
ANR	3917189	Callee	dprintf		3916874	0					
ANR	3917190	Identifier	dprintf		3916874	0					
ANR	3917191	ArgumentList	D_ALWAYS		3916874	1					
ANR	3917192	Argument	D_ALWAYS		3916874	0					
ANR	3917193	Identifier	D_ALWAYS		3916874	0					
ANR	3917194	Argument	"""error killing process family of starter with pid %u\\n"""		3916874	1					
ANR	3917195	PrimaryExpression	"""error killing process family of starter with pid %u\\n"""		3916874	0					
ANR	3917196	Argument	s_pid		3916874	2					
ANR	3917197	Identifier	s_pid		3916874	0					
ANR	3917198	ExpressionStatement	ASSERT ( executeDir ( ) )	660:1:14742:14764	3916874	14	True				
ANR	3917199	CallExpression	ASSERT ( executeDir ( ) )		3916874	0					
ANR	3917200	Callee	ASSERT		3916874	0					
ANR	3917201	Identifier	ASSERT		3916874	0					
ANR	3917202	ArgumentList	executeDir ( )		3916874	1					
ANR	3917203	Argument	executeDir ( )		3916874	0					
ANR	3917204	CallExpression	executeDir ( )		3916874	0					
ANR	3917205	Callee	executeDir		3916874	0					
ANR	3917206	Identifier	executeDir		3916874	0					
ANR	3917207	ArgumentList			3916874	1					
ANR	3917208	ExpressionStatement	"cleanup_execute_dir ( s_pid , executeDir ( ) )"	661:1:14767:14809	3916874	15	True				
ANR	3917209	CallExpression	"cleanup_execute_dir ( s_pid , executeDir ( ) )"		3916874	0					
ANR	3917210	Callee	cleanup_execute_dir		3916874	0					
ANR	3917211	Identifier	cleanup_execute_dir		3916874	0					
ANR	3917212	ArgumentList	s_pid		3916874	1					
ANR	3917213	Argument	s_pid		3916874	0					
ANR	3917214	Identifier	s_pid		3916874	0					
ANR	3917215	Argument	executeDir ( )		3916874	1					
ANR	3917216	CallExpression	executeDir ( )		3916874	0					
ANR	3917217	Callee	executeDir		3916874	0					
ANR	3917218	Identifier	executeDir		3916874	0					
ANR	3917219	ArgumentList			3916874	1					
ANR	3917220	IfStatement	"if ( param_boolean ( ""GLEXEC_STARTER"" , false ) )"		3916874	16					
ANR	3917221	Condition	"param_boolean ( ""GLEXEC_STARTER"" , false )"	664:5:14836:14875	3916874	0	True				
ANR	3917222	CallExpression	"param_boolean ( ""GLEXEC_STARTER"" , false )"		3916874	0					
ANR	3917223	Callee	param_boolean		3916874	0					
ANR	3917224	Identifier	param_boolean		3916874	0					
ANR	3917225	ArgumentList	"""GLEXEC_STARTER"""		3916874	1					
ANR	3917226	Argument	"""GLEXEC_STARTER"""		3916874	0					
ANR	3917227	PrimaryExpression	"""GLEXEC_STARTER"""		3916874	0					
ANR	3917228	Argument	false		3916874	1					
ANR	3917229	Identifier	false		3916874	0					
ANR	3917230	CompoundStatement		61:48:1722:1722	3916874	1					
ANR	3917231	ExpressionStatement	cleanupAfterGlexec ( )	665:2:14883:14903	3916874	0	True				
ANR	3917232	CallExpression	cleanupAfterGlexec ( )		3916874	0					
ANR	3917233	Callee	cleanupAfterGlexec		3916874	0					
ANR	3917234	Identifier	cleanupAfterGlexec		3916874	0					
ANR	3917235	ArgumentList			3916874	1					
ANR	3917236	ReturnType	void		3916874	1					
ANR	3917237	Identifier	Starter :: exited		3916874	2					
ANR	3917238	ParameterList	int status		3916874	3					
ANR	3917239	Parameter	int status	603:16:13144:13153	3916874	0	True				
ANR	3917240	ParameterType	int		3916874	0					
ANR	3917241	Identifier	status		3916874	1					
ANR	3917242	CFGEntryNode	ENTRY		3916874		True				
ANR	3917243	CFGExitNode	EXIT		3916874		True				
ANR	3917244	Symbol	jobAdNeedsFree		3916874						
ANR	3917245	Symbol	jobStatus		3916874						
ANR	3917246	Symbol	ATTR_JOB_REMOTE_WALL_CLOCK		3916874						
ANR	3917247	Symbol	ATTR_PROC_ID		3916874						
ANR	3917248	Symbol	jobAd		3916874						
ANR	3917249	Symbol	s_birthdate		3916874						
ANR	3917250	Symbol	get_local_hostname ( ) . Value		3916874						
ANR	3917251	Symbol	ATTR_JOB_CMD		3916874						
ANR	3917252	Symbol	gjid		3916874						
ANR	3917253	Symbol	daemonCore -> Kill_Family		3916874						
ANR	3917254	Symbol	ATTR_CLUSTER_ID		3916874						
ANR	3917255	Symbol	COMPLETED		3916874						
ANR	3917256	Symbol	ATTR_JOB_STATUS		3916874						
ANR	3917257	Symbol	now		3916874						
ANR	3917258	Symbol	daemonCore		3916874						
ANR	3917259	Symbol	s_claim		3916874						
ANR	3917260	Symbol	ATTR_OWNER		3916874						
ANR	3917261	Symbol	REMOVED		3916874						
ANR	3917262	Symbol	WIFSIGNALED		3916874						
ANR	3917263	Symbol	NULL		3916874						
ANR	3917264	Symbol	false		3916874						
ANR	3917265	Symbol	ATTR_Q_DATE		3916874						
ANR	3917266	Symbol	D_ALWAYS		3916874						
ANR	3917267	Symbol	get_local_hostname		3916874						
ANR	3917268	Symbol	runtime		3916874						
ANR	3917269	Symbol	param_boolean		3916874						
ANR	3917270	Symbol	ATTR_COMPLETION_DATE		3916874						
ANR	3917271	Symbol	ATTR_JOB_PRIO		3916874						
ANR	3917272	Symbol	ATTR_GLOBAL_JOB_ID		3916874						
ANR	3917273	Symbol	* s_claim		3916874						
ANR	3917274	Symbol	s_claim -> ad		3916874						
ANR	3917275	Symbol	* daemonCore		3916874						
ANR	3917276	Symbol	true		3916874						
ANR	3917277	Symbol	FALSE		3916874						
ANR	3917278	Symbol	time		3916874						
ANR	3917279	Symbol	executeDir		3916874						
ANR	3917280	Symbol	s_pid		3916874						
ANR	3917281	Symbol	status		3916874						
ANR	3917282	Symbol	ATTR_IMAGE_SIZE		3916874						
ANR	3917283	Function	Starter :: execJobPipeStarter	671:0:14919:16663							
ANR	3917284	FunctionDef	Starter :: execJobPipeStarter ()		3917283	0					
ANR	3917285	CompoundStatement		673:0:14959:16663	3917283	0					
ANR	3917286	IdentifierDeclStatement	int rval ;	674:1:14962:14970	3917283	0	True				
ANR	3917287	IdentifierDecl	rval		3917283	0					
ANR	3917288	IdentifierDeclType	int		3917283	0					
ANR	3917289	Identifier	rval		3917283	1					
ANR	3917290	IdentifierDeclStatement	MyString lock_env ;	675:1:14973:14990	3917283	1	True				
ANR	3917291	IdentifierDecl	lock_env		3917283	0					
ANR	3917292	IdentifierDeclType	MyString		3917283	0					
ANR	3917293	Identifier	lock_env		3917283	1					
ANR	3917294	IdentifierDeclStatement	ArgList args ;	676:1:14993:15005	3917283	2	True				
ANR	3917295	IdentifierDecl	args		3917283	0					
ANR	3917296	IdentifierDeclType	ArgList		3917283	0					
ANR	3917297	Identifier	args		3917283	1					
ANR	3917298	IdentifierDeclStatement	Env env ;	677:1:15008:15015	3917283	3	True				
ANR	3917299	IdentifierDecl	env		3917283	0					
ANR	3917300	IdentifierDeclType	Env		3917283	0					
ANR	3917301	Identifier	env		3917283	1					
ANR	3917302	IdentifierDeclStatement	char * tmp ;	678:1:15018:15027	3917283	4	True				
ANR	3917303	IdentifierDecl	* tmp		3917283	0					
ANR	3917304	IdentifierDeclType	char *		3917283	0					
ANR	3917305	Identifier	tmp		3917283	1					
ANR	3917306	IfStatement	if ( s_claim -> type ( ) == CLAIM_COD )		3917283	5					
ANR	3917307	Condition	s_claim -> type ( ) == CLAIM_COD	680:5:15035:15062	3917283	0	True				
ANR	3917308	EqualityExpression	s_claim -> type ( ) == CLAIM_COD		3917283	0		==			
ANR	3917309	CallExpression	s_claim -> type ( )		3917283	0					
ANR	3917310	Callee	s_claim -> type		3917283	0					
ANR	3917311	PtrMemberAccess	s_claim -> type		3917283	0					
ANR	3917312	Identifier	s_claim		3917283	0					
ANR	3917313	Identifier	type		3917283	1					
ANR	3917314	ArgumentList			3917283	1					
ANR	3917315	Identifier	CLAIM_COD		3917283	1					
ANR	3917316	CompoundStatement		8:35:105:105	3917283	1					
ANR	3917317	ExpressionStatement	"tmp = param ( ""LOCK"" )"	681:2:15069:15090	3917283	0	True				
ANR	3917318	AssignmentExpression	"tmp = param ( ""LOCK"" )"		3917283	0		=			
ANR	3917319	Identifier	tmp		3917283	0					
ANR	3917320	CallExpression	"param ( ""LOCK"" )"		3917283	1					
ANR	3917321	Callee	param		3917283	0					
ANR	3917322	Identifier	param		3917283	0					
ANR	3917323	ArgumentList	"""LOCK"""		3917283	1					
ANR	3917324	Argument	"""LOCK"""		3917283	0					
ANR	3917325	PrimaryExpression	"""LOCK"""		3917283	0					
ANR	3917326	IfStatement	if ( ! tmp )		3917283	1					
ANR	3917327	Condition	! tmp	682:6:15098:15102	3917283	0	True				
ANR	3917328	UnaryOperationExpression	! tmp		3917283	0					
ANR	3917329	UnaryOperator	!		3917283	0					
ANR	3917330	Identifier	tmp		3917283	1					
ANR	3917331	CompoundStatement		10:14:146:146	3917283	1					
ANR	3917332	ExpressionStatement	"tmp = param ( ""LOG"" )"	683:3:15112:15132	3917283	0	True				
ANR	3917333	AssignmentExpression	"tmp = param ( ""LOG"" )"		3917283	0		=			
ANR	3917334	Identifier	tmp		3917283	0					
ANR	3917335	CallExpression	"param ( ""LOG"" )"		3917283	1					
ANR	3917336	Callee	param		3917283	0					
ANR	3917337	Identifier	param		3917283	0					
ANR	3917338	ArgumentList	"""LOG"""		3917283	1					
ANR	3917339	Argument	"""LOG"""		3917283	0					
ANR	3917340	PrimaryExpression	"""LOG"""		3917283	0					
ANR	3917341	IfStatement	if ( ! tmp )		3917283	2					
ANR	3917342	Condition	! tmp	685:6:15144:15148	3917283	0	True				
ANR	3917343	UnaryOperationExpression	! tmp		3917283	0					
ANR	3917344	UnaryOperator	!		3917283	0					
ANR	3917345	Identifier	tmp		3917283	1					
ANR	3917346	CompoundStatement		13:14:192:192	3917283	1					
ANR	3917347	ExpressionStatement	"EXCEPT ( ""LOG not defined!"" )"	686:3:15158:15186	3917283	0	True				
ANR	3917348	CallExpression	"EXCEPT ( ""LOG not defined!"" )"		3917283	0					
ANR	3917349	Callee	EXCEPT		3917283	0					
ANR	3917350	Identifier	EXCEPT		3917283	0					
ANR	3917351	ArgumentList	"""LOG not defined!"""		3917283	1					
ANR	3917352	Argument	"""LOG not defined!"""		3917283	0					
ANR	3917353	PrimaryExpression	"""LOG not defined!"""		3917283	0					
ANR	3917354	ExpressionStatement	"lock_env = ""_condor_STARTER_LOCK="""	688:2:15194:15228	3917283	3	True				
ANR	3917355	AssignmentExpression	"lock_env = ""_condor_STARTER_LOCK="""		3917283	0		=			
ANR	3917356	Identifier	lock_env		3917283	0					
ANR	3917357	PrimaryExpression	"""_condor_STARTER_LOCK="""		3917283	1					
ANR	3917358	ExpressionStatement	lock_env += tmp	689:2:15232:15247	3917283	4	True				
ANR	3917359	AssignmentExpression	lock_env += tmp		3917283	0		+=			
ANR	3917360	Identifier	lock_env		3917283	0					
ANR	3917361	Identifier	tmp		3917283	1					
ANR	3917362	ExpressionStatement	free ( tmp )	690:2:15251:15262	3917283	5	True				
ANR	3917363	CallExpression	free ( tmp )		3917283	0					
ANR	3917364	Callee	free		3917283	0					
ANR	3917365	Identifier	free		3917283	0					
ANR	3917366	ArgumentList	tmp		3917283	1					
ANR	3917367	Argument	tmp		3917283	0					
ANR	3917368	Identifier	tmp		3917283	0					
ANR	3917369	ExpressionStatement	lock_env += DIR_DELIM_CHAR	691:2:15266:15292	3917283	6	True				
ANR	3917370	AssignmentExpression	lock_env += DIR_DELIM_CHAR		3917283	0		+=			
ANR	3917371	Identifier	lock_env		3917283	0					
ANR	3917372	Identifier	DIR_DELIM_CHAR		3917283	1					
ANR	3917373	ExpressionStatement	"lock_env += ""StarterLock.cod"""	692:2:15296:15325	3917283	7	True				
ANR	3917374	AssignmentExpression	"lock_env += ""StarterLock.cod"""		3917283	0		+=			
ANR	3917375	Identifier	lock_env		3917283	0					
ANR	3917376	PrimaryExpression	"""StarterLock.cod"""		3917283	1					
ANR	3917377	ExpressionStatement	env . SetEnv ( lock_env . Value ( ) )	694:2:15330:15358	3917283	8	True				
ANR	3917378	CallExpression	env . SetEnv ( lock_env . Value ( ) )		3917283	0					
ANR	3917379	Callee	env . SetEnv		3917283	0					
ANR	3917380	MemberAccess	env . SetEnv		3917283	0					
ANR	3917381	Identifier	env		3917283	0					
ANR	3917382	Identifier	SetEnv		3917283	1					
ANR	3917383	ArgumentList	lock_env . Value ( )		3917283	1					
ANR	3917384	Argument	lock_env . Value ( )		3917283	0					
ANR	3917385	CallExpression	lock_env . Value ( )		3917283	0					
ANR	3917386	Callee	lock_env . Value		3917283	0					
ANR	3917387	MemberAccess	lock_env . Value		3917283	0					
ANR	3917388	Identifier	lock_env		3917283	0					
ANR	3917389	Identifier	Value		3917283	1					
ANR	3917390	ArgumentList			3917283	1					
ANR	3917391	ExpressionStatement	s_claim -> makeStarterArgs ( args )	698:1:15432:15462	3917283	6	True				
ANR	3917392	CallExpression	s_claim -> makeStarterArgs ( args )		3917283	0					
ANR	3917393	Callee	s_claim -> makeStarterArgs		3917283	0					
ANR	3917394	PtrMemberAccess	s_claim -> makeStarterArgs		3917283	0					
ANR	3917395	Identifier	s_claim		3917283	0					
ANR	3917396	Identifier	makeStarterArgs		3917283	1					
ANR	3917397	ArgumentList	args		3917283	1					
ANR	3917398	Argument	args		3917283	0					
ANR	3917399	Identifier	args		3917283	0					
ANR	3917400	IdentifierDeclStatement	int * std_fds_p = NULL ;	700:1:15466:15487	3917283	7	True				
ANR	3917401	IdentifierDecl	* std_fds_p = NULL		3917283	0					
ANR	3917402	IdentifierDeclType	int *		3917283	0					
ANR	3917403	Identifier	std_fds_p		3917283	1					
ANR	3917404	AssignmentExpression	* std_fds_p = NULL		3917283	2		=			
ANR	3917405	Identifier	NULL		3917283	0					
ANR	3917406	Identifier	NULL		3917283	1					
ANR	3917407	IdentifierDeclStatement	int std_fds [ 3 ] ;	701:1:15490:15504	3917283	8	True				
ANR	3917408	IdentifierDecl	std_fds [ 3 ]		3917283	0					
ANR	3917409	IdentifierDeclType	int [ 3 ]		3917283	0					
ANR	3917410	Identifier	std_fds		3917283	1					
ANR	3917411	PrimaryExpression	3		3917283	2					
ANR	3917412	IdentifierDeclStatement	int pipe_fds [ 2 ] ;	702:1:15507:15522	3917283	9	True				
ANR	3917413	IdentifierDecl	pipe_fds [ 2 ]		3917283	0					
ANR	3917414	IdentifierDeclType	int [ 2 ]		3917283	0					
ANR	3917415	Identifier	pipe_fds		3917283	1					
ANR	3917416	PrimaryExpression	2		3917283	2					
ANR	3917417	IfStatement	if ( s_claim -> hasJobAd ( ) )		3917283	10					
ANR	3917418	Condition	s_claim -> hasJobAd ( )	703:5:15529:15547	3917283	0	True				
ANR	3917419	CallExpression	s_claim -> hasJobAd ( )		3917283	0					
ANR	3917420	Callee	s_claim -> hasJobAd		3917283	0					
ANR	3917421	PtrMemberAccess	s_claim -> hasJobAd		3917283	0					
ANR	3917422	Identifier	s_claim		3917283	0					
ANR	3917423	Identifier	hasJobAd		3917283	1					
ANR	3917424	ArgumentList			3917283	1					
ANR	3917425	CompoundStatement		31:27:591:591	3917283	1					
ANR	3917426	IfStatement	if ( ! daemonCore -> Create_Pipe ( pipe_fds ) )		3917283	0					
ANR	3917427	Condition	! daemonCore -> Create_Pipe ( pipe_fds )	704:6:15559:15593	3917283	0	True				
ANR	3917428	UnaryOperationExpression	! daemonCore -> Create_Pipe ( pipe_fds )		3917283	0					
ANR	3917429	UnaryOperator	!		3917283	0					
ANR	3917430	CallExpression	daemonCore -> Create_Pipe ( pipe_fds )		3917283	1					
ANR	3917431	Callee	daemonCore -> Create_Pipe		3917283	0					
ANR	3917432	PtrMemberAccess	daemonCore -> Create_Pipe		3917283	0					
ANR	3917433	Identifier	daemonCore		3917283	0					
ANR	3917434	Identifier	Create_Pipe		3917283	1					
ANR	3917435	ArgumentList	pipe_fds		3917283	1					
ANR	3917436	Argument	pipe_fds		3917283	0					
ANR	3917437	Identifier	pipe_fds		3917283	0					
ANR	3917438	CompoundStatement		32:44:637:637	3917283	1					
ANR	3917439	Statement	dprintf	705:3:15602:15608	3917283	0	True				
ANR	3917440	Statement	(	705:10:15609:15609	3917283	1	True				
ANR	3917441	Statement	D_ALWAYS	705:12:15611:15618	3917283	2	True				
ANR	3917442	Statement	","	705:20:15619:15619	3917283	3	True				
ANR	3917443	Statement	"""ERROR: Can't create pipe to pass job ClassAd """	705:22:15621:15667	3917283	4	True				
ANR	3917444	Statement	"""to starter, aborting\\n"""	706:6:15675:15698	3917283	5	True				
ANR	3917445	Statement	)	706:31:15700:15700	3917283	6	True				
ANR	3917446	ExpressionStatement		706:32:15701:15701	3917283	7	True				
ANR	3917447	ReturnStatement	return 0 ;	707:3:15706:15714	3917283	8	True				
ANR	3917448	PrimaryExpression	0		3917283	0					
ANR	3917449	ExpressionStatement	std_fds [ 0 ] = pipe_fds [ 0 ]	712:2:15868:15892	3917283	1	True				
ANR	3917450	AssignmentExpression	std_fds [ 0 ] = pipe_fds [ 0 ]		3917283	0		=			
ANR	3917451	ArrayIndexing	std_fds [ 0 ]		3917283	0					
ANR	3917452	Identifier	std_fds		3917283	0					
ANR	3917453	PrimaryExpression	0		3917283	1					
ANR	3917454	ArrayIndexing	pipe_fds [ 0 ]		3917283	1					
ANR	3917455	Identifier	pipe_fds		3917283	0					
ANR	3917456	PrimaryExpression	0		3917283	1					
ANR	3917457	ExpressionStatement	std_fds [ 1 ] = - 1	713:2:15896:15911	3917283	2	True				
ANR	3917458	AssignmentExpression	std_fds [ 1 ] = - 1		3917283	0		=			
ANR	3917459	ArrayIndexing	std_fds [ 1 ]		3917283	0					
ANR	3917460	Identifier	std_fds		3917283	0					
ANR	3917461	PrimaryExpression	1		3917283	1					
ANR	3917462	UnaryOperationExpression	- 1		3917283	1					
ANR	3917463	UnaryOperator	-		3917283	0					
ANR	3917464	PrimaryExpression	1		3917283	1					
ANR	3917465	ExpressionStatement	std_fds [ 2 ] = - 1	714:2:15915:15930	3917283	3	True				
ANR	3917466	AssignmentExpression	std_fds [ 2 ] = - 1		3917283	0		=			
ANR	3917467	ArrayIndexing	std_fds [ 2 ]		3917283	0					
ANR	3917468	Identifier	std_fds		3917283	0					
ANR	3917469	PrimaryExpression	2		3917283	1					
ANR	3917470	UnaryOperationExpression	- 1		3917283	1					
ANR	3917471	UnaryOperator	-		3917283	0					
ANR	3917472	PrimaryExpression	1		3917283	1					
ANR	3917473	ExpressionStatement	std_fds_p = std_fds	715:2:15934:15953	3917283	4	True				
ANR	3917474	AssignmentExpression	std_fds_p = std_fds		3917283	0		=			
ANR	3917475	Identifier	std_fds_p		3917283	0					
ANR	3917476	Identifier	std_fds		3917283	1					
ANR	3917477	ExpressionStatement	"rval = execDCStarter ( args , & env , std_fds_p , NULL )"	718:1:15960:16011	3917283	11	True				
ANR	3917478	AssignmentExpression	"rval = execDCStarter ( args , & env , std_fds_p , NULL )"		3917283	0		=			
ANR	3917479	Identifier	rval		3917283	0					
ANR	3917480	CallExpression	"execDCStarter ( args , & env , std_fds_p , NULL )"		3917283	1					
ANR	3917481	Callee	execDCStarter		3917283	0					
ANR	3917482	Identifier	execDCStarter		3917283	0					
ANR	3917483	ArgumentList	args		3917283	1					
ANR	3917484	Argument	args		3917283	0					
ANR	3917485	Identifier	args		3917283	0					
ANR	3917486	Argument	& env		3917283	1					
ANR	3917487	UnaryOperationExpression	& env		3917283	0					
ANR	3917488	UnaryOperator	&		3917283	0					
ANR	3917489	Identifier	env		3917283	1					
ANR	3917490	Argument	std_fds_p		3917283	2					
ANR	3917491	Identifier	std_fds_p		3917283	0					
ANR	3917492	Argument	NULL		3917283	3					
ANR	3917493	Identifier	NULL		3917283	0					
ANR	3917494	IfStatement	if ( s_claim -> hasJobAd ( ) )		3917283	12					
ANR	3917495	Condition	s_claim -> hasJobAd ( )	720:5:16019:16037	3917283	0	True				
ANR	3917496	CallExpression	s_claim -> hasJobAd ( )		3917283	0					
ANR	3917497	Callee	s_claim -> hasJobAd		3917283	0					
ANR	3917498	PtrMemberAccess	s_claim -> hasJobAd		3917283	0					
ANR	3917499	Identifier	s_claim		3917283	0					
ANR	3917500	Identifier	hasJobAd		3917283	1					
ANR	3917501	ArgumentList			3917283	1					
ANR	3917502	CompoundStatement		48:27:1081:1081	3917283	1					
ANR	3917503	ExpressionStatement	daemonCore -> Close_Pipe ( pipe_fds [ 0 ] )	727:2:16312:16349	3917283	0	True				
ANR	3917504	CallExpression	daemonCore -> Close_Pipe ( pipe_fds [ 0 ] )		3917283	0					
ANR	3917505	Callee	daemonCore -> Close_Pipe		3917283	0					
ANR	3917506	PtrMemberAccess	daemonCore -> Close_Pipe		3917283	0					
ANR	3917507	Identifier	daemonCore		3917283	0					
ANR	3917508	Identifier	Close_Pipe		3917283	1					
ANR	3917509	ArgumentList	pipe_fds [ 0 ]		3917283	1					
ANR	3917510	Argument	pipe_fds [ 0 ]		3917283	0					
ANR	3917511	ArrayIndexing	pipe_fds [ 0 ]		3917283	0					
ANR	3917512	Identifier	pipe_fds		3917283	0					
ANR	3917513	PrimaryExpression	0		3917283	1					
ANR	3917514	ExpressionStatement	s_claim -> writeJobAd ( pipe_fds [ 1 ] )	732:2:16467:16501	3917283	1	True				
ANR	3917515	CallExpression	s_claim -> writeJobAd ( pipe_fds [ 1 ] )		3917283	0					
ANR	3917516	Callee	s_claim -> writeJobAd		3917283	0					
ANR	3917517	PtrMemberAccess	s_claim -> writeJobAd		3917283	0					
ANR	3917518	Identifier	s_claim		3917283	0					
ANR	3917519	Identifier	writeJobAd		3917283	1					
ANR	3917520	ArgumentList	pipe_fds [ 1 ]		3917283	1					
ANR	3917521	Argument	pipe_fds [ 1 ]		3917283	0					
ANR	3917522	ArrayIndexing	pipe_fds [ 1 ]		3917283	0					
ANR	3917523	Identifier	pipe_fds		3917283	0					
ANR	3917524	PrimaryExpression	1		3917283	1					
ANR	3917525	ExpressionStatement	daemonCore -> Close_Pipe ( pipe_fds [ 1 ] )	736:2:16606:16643	3917283	2	True				
ANR	3917526	CallExpression	daemonCore -> Close_Pipe ( pipe_fds [ 1 ] )		3917283	0					
ANR	3917527	Callee	daemonCore -> Close_Pipe		3917283	0					
ANR	3917528	PtrMemberAccess	daemonCore -> Close_Pipe		3917283	0					
ANR	3917529	Identifier	daemonCore		3917283	0					
ANR	3917530	Identifier	Close_Pipe		3917283	1					
ANR	3917531	ArgumentList	pipe_fds [ 1 ]		3917283	1					
ANR	3917532	Argument	pipe_fds [ 1 ]		3917283	0					
ANR	3917533	ArrayIndexing	pipe_fds [ 1 ]		3917283	0					
ANR	3917534	Identifier	pipe_fds		3917283	0					
ANR	3917535	PrimaryExpression	1		3917283	1					
ANR	3917536	ReturnStatement	return rval ;	739:1:16650:16661	3917283	13	True				
ANR	3917537	Identifier	rval		3917283	0					
ANR	3917538	ReturnType	int		3917283	1					
ANR	3917539	Identifier	Starter :: execJobPipeStarter		3917283	2					
ANR	3917540	ParameterList			3917283	3					
ANR	3917541	CFGEntryNode	ENTRY		3917283		True				
ANR	3917542	CFGExitNode	EXIT		3917283		True				
ANR	3917543	Symbol	NULL		3917283						
ANR	3917544	Symbol	s_claim -> hasJobAd		3917283						
ANR	3917545	Symbol	lock_env . Value		3917283						
ANR	3917546	Symbol	CLAIM_COD		3917283						
ANR	3917547	Symbol	DIR_DELIM_CHAR		3917283						
ANR	3917548	Symbol	execDCStarter		3917283						
ANR	3917549	Symbol	pipe_fds		3917283						
ANR	3917550	Symbol	lock_env		3917283						
ANR	3917551	Symbol	env		3917283						
ANR	3917552	Symbol	* std_fds		3917283						
ANR	3917553	Symbol	args		3917283						
ANR	3917554	Symbol	s_claim -> type		3917283						
ANR	3917555	Symbol	* s_claim		3917283						
ANR	3917556	Symbol	std_fds_p		3917283						
ANR	3917557	Symbol	& env		3917283						
ANR	3917558	Symbol	param		3917283						
ANR	3917559	Symbol	std_fds		3917283						
ANR	3917560	Symbol	tmp		3917283						
ANR	3917561	Symbol	* daemonCore		3917283						
ANR	3917562	Symbol	daemonCore		3917283						
ANR	3917563	Symbol	rval		3917283						
ANR	3917564	Symbol	daemonCore -> Create_Pipe		3917283						
ANR	3917565	Symbol	* pipe_fds		3917283						
ANR	3917566	Symbol	s_claim		3917283						
ANR	3917567	Function	Starter :: execBOINCStarter	744:0:16682:16958							
ANR	3917568	FunctionDef	Starter :: execBOINCStarter ()		3917567	0					
ANR	3917569	CompoundStatement		746:0:16720:16958	3917567	0					
ANR	3917570	IdentifierDeclStatement	ArgList args ;	747:1:16723:16735	3917567	0	True				
ANR	3917571	IdentifierDecl	args		3917567	0					
ANR	3917572	IdentifierDeclType	ArgList		3917567	0					
ANR	3917573	Identifier	args		3917567	1					
ANR	3917574	ExpressionStatement	"args . AppendArg ( ""condor_starter"" )"	749:1:16739:16771	3917567	1	True				
ANR	3917575	CallExpression	"args . AppendArg ( ""condor_starter"" )"		3917567	0					
ANR	3917576	Callee	args . AppendArg		3917567	0					
ANR	3917577	MemberAccess	args . AppendArg		3917567	0					
ANR	3917578	Identifier	args		3917567	0					
ANR	3917579	Identifier	AppendArg		3917567	1					
ANR	3917580	ArgumentList	"""condor_starter"""		3917567	1					
ANR	3917581	Argument	"""condor_starter"""		3917567	0					
ANR	3917582	PrimaryExpression	"""condor_starter"""		3917567	0					
ANR	3917583	ExpressionStatement	"args . AppendArg ( ""-f"" )"	750:1:16774:16794	3917567	2	True				
ANR	3917584	CallExpression	"args . AppendArg ( ""-f"" )"		3917567	0					
ANR	3917585	Callee	args . AppendArg		3917567	0					
ANR	3917586	MemberAccess	args . AppendArg		3917567	0					
ANR	3917587	Identifier	args		3917567	0					
ANR	3917588	Identifier	AppendArg		3917567	1					
ANR	3917589	ArgumentList	"""-f"""		3917567	1					
ANR	3917590	Argument	"""-f"""		3917567	0					
ANR	3917591	PrimaryExpression	"""-f"""		3917567	0					
ANR	3917592	ExpressionStatement	"args . AppendArg ( ""-append"" )"	751:1:16797:16822	3917567	3	True				
ANR	3917593	CallExpression	"args . AppendArg ( ""-append"" )"		3917567	0					
ANR	3917594	Callee	args . AppendArg		3917567	0					
ANR	3917595	MemberAccess	args . AppendArg		3917567	0					
ANR	3917596	Identifier	args		3917567	0					
ANR	3917597	Identifier	AppendArg		3917567	1					
ANR	3917598	ArgumentList	"""-append"""		3917567	1					
ANR	3917599	Argument	"""-append"""		3917567	0					
ANR	3917600	PrimaryExpression	"""-append"""		3917567	0					
ANR	3917601	ExpressionStatement	"args . AppendArg ( ""boinc"" )"	752:1:16825:16848	3917567	4	True				
ANR	3917602	CallExpression	"args . AppendArg ( ""boinc"" )"		3917567	0					
ANR	3917603	Callee	args . AppendArg		3917567	0					
ANR	3917604	MemberAccess	args . AppendArg		3917567	0					
ANR	3917605	Identifier	args		3917567	0					
ANR	3917606	Identifier	AppendArg		3917567	1					
ANR	3917607	ArgumentList	"""boinc"""		3917567	1					
ANR	3917608	Argument	"""boinc"""		3917567	0					
ANR	3917609	PrimaryExpression	"""boinc"""		3917567	0					
ANR	3917610	ExpressionStatement	"args . AppendArg ( ""-job-keyword"" )"	753:1:16851:16881	3917567	5	True				
ANR	3917611	CallExpression	"args . AppendArg ( ""-job-keyword"" )"		3917567	0					
ANR	3917612	Callee	args . AppendArg		3917567	0					
ANR	3917613	MemberAccess	args . AppendArg		3917567	0					
ANR	3917614	Identifier	args		3917567	0					
ANR	3917615	Identifier	AppendArg		3917567	1					
ANR	3917616	ArgumentList	"""-job-keyword"""		3917567	1					
ANR	3917617	Argument	"""-job-keyword"""		3917567	0					
ANR	3917618	PrimaryExpression	"""-job-keyword"""		3917567	0					
ANR	3917619	ExpressionStatement	"args . AppendArg ( ""boinc"" )"	754:1:16884:16907	3917567	6	True				
ANR	3917620	CallExpression	"args . AppendArg ( ""boinc"" )"		3917567	0					
ANR	3917621	Callee	args . AppendArg		3917567	0					
ANR	3917622	MemberAccess	args . AppendArg		3917567	0					
ANR	3917623	Identifier	args		3917567	0					
ANR	3917624	Identifier	AppendArg		3917567	1					
ANR	3917625	ArgumentList	"""boinc"""		3917567	1					
ANR	3917626	Argument	"""boinc"""		3917567	0					
ANR	3917627	PrimaryExpression	"""boinc"""		3917567	0					
ANR	3917628	ReturnStatement	"return execDCStarter ( args , NULL , NULL , NULL ) ;"	755:1:16910:16956	3917567	7	True				
ANR	3917629	CallExpression	"execDCStarter ( args , NULL , NULL , NULL )"		3917567	0					
ANR	3917630	Callee	execDCStarter		3917567	0					
ANR	3917631	Identifier	execDCStarter		3917567	0					
ANR	3917632	ArgumentList	args		3917567	1					
ANR	3917633	Argument	args		3917567	0					
ANR	3917634	Identifier	args		3917567	0					
ANR	3917635	Argument	NULL		3917567	1					
ANR	3917636	Identifier	NULL		3917567	0					
ANR	3917637	Argument	NULL		3917567	2					
ANR	3917638	Identifier	NULL		3917567	0					
ANR	3917639	Argument	NULL		3917567	3					
ANR	3917640	Identifier	NULL		3917567	0					
ANR	3917641	ReturnType	int		3917567	1					
ANR	3917642	Identifier	Starter :: execBOINCStarter		3917567	2					
ANR	3917643	ParameterList			3917567	3					
ANR	3917644	CFGEntryNode	ENTRY		3917567		True				
ANR	3917645	CFGExitNode	EXIT		3917567		True				
ANR	3917646	Symbol	args		3917567						
ANR	3917647	Symbol	NULL		3917567						
ANR	3917648	Symbol	execDCStarter		3917567						
ANR	3917649	Function	Starter :: execDCStarter	760:0:16986:17528							
ANR	3917650	FunctionDef	Starter :: execDCStarter (Stream * s)		3917649	0					
ANR	3917651	CompoundStatement		762:0:17026:17528	3917649	0					
ANR	3917652	IdentifierDeclStatement	ArgList args ;	763:1:17029:17041	3917649	0	True				
ANR	3917653	IdentifierDecl	args		3917649	0					
ANR	3917654	IdentifierDeclType	ArgList		3917649	0					
ANR	3917655	Identifier	args		3917649	1					
ANR	3917656	IdentifierDeclStatement	char * hostname = s_claim -> client ( ) -> host ( ) ;	765:1:17045:17087	3917649	1	True				
ANR	3917657	IdentifierDecl	* hostname = s_claim -> client ( ) -> host ( )		3917649	0					
ANR	3917658	IdentifierDeclType	char *		3917649	0					
ANR	3917659	Identifier	hostname		3917649	1					
ANR	3917660	AssignmentExpression	* hostname = s_claim -> client ( ) -> host ( )		3917649	2		=			
ANR	3917661	Identifier	hostname		3917649	0					
ANR	3917662	CallExpression	s_claim -> client ( ) -> host ( )		3917649	1					
ANR	3917663	Callee	s_claim -> client ( ) -> host		3917649	0					
ANR	3917664	PtrMemberAccess	s_claim -> client ( ) -> host		3917649	0					
ANR	3917665	CallExpression	s_claim -> client ( )		3917649	0					
ANR	3917666	Callee	s_claim -> client		3917649	0					
ANR	3917667	PtrMemberAccess	s_claim -> client		3917649	0					
ANR	3917668	Identifier	s_claim		3917649	0					
ANR	3917669	Identifier	client		3917649	1					
ANR	3917670	ArgumentList			3917649	1					
ANR	3917671	Identifier	host		3917649	1					
ANR	3917672	ArgumentList			3917649	1					
ANR	3917673	IfStatement	if ( resmgr -> is_smp ( ) )		3917649	2					
ANR	3917674	Condition	resmgr -> is_smp ( )	766:6:17095:17110	3917649	0	True				
ANR	3917675	CallExpression	resmgr -> is_smp ( )		3917649	0					
ANR	3917676	Callee	resmgr -> is_smp		3917649	0					
ANR	3917677	PtrMemberAccess	resmgr -> is_smp		3917649	0					
ANR	3917678	Identifier	resmgr		3917649	0					
ANR	3917679	Identifier	is_smp		3917649	1					
ANR	3917680	ArgumentList			3917649	1					
ANR	3917681	CompoundStatement		5:25:87:87	3917649	1					
ANR	3917682	ExpressionStatement	"args . AppendArg ( ""condor_starter"" )"	769:2:17218:17250	3917649	0	True				
ANR	3917683	CallExpression	"args . AppendArg ( ""condor_starter"" )"		3917649	0					
ANR	3917684	Callee	args . AppendArg		3917649	0					
ANR	3917685	MemberAccess	args . AppendArg		3917649	0					
ANR	3917686	Identifier	args		3917649	0					
ANR	3917687	Identifier	AppendArg		3917649	1					
ANR	3917688	ArgumentList	"""condor_starter"""		3917649	1					
ANR	3917689	Argument	"""condor_starter"""		3917649	0					
ANR	3917690	PrimaryExpression	"""condor_starter"""		3917649	0					
ANR	3917691	ExpressionStatement	"args . AppendArg ( ""-f"" )"	770:2:17254:17274	3917649	1	True				
ANR	3917692	CallExpression	"args . AppendArg ( ""-f"" )"		3917649	0					
ANR	3917693	Callee	args . AppendArg		3917649	0					
ANR	3917694	MemberAccess	args . AppendArg		3917649	0					
ANR	3917695	Identifier	args		3917649	0					
ANR	3917696	Identifier	AppendArg		3917649	1					
ANR	3917697	ArgumentList	"""-f"""		3917649	1					
ANR	3917698	Argument	"""-f"""		3917649	0					
ANR	3917699	PrimaryExpression	"""-f"""		3917649	0					
ANR	3917700	ExpressionStatement	"args . AppendArg ( ""-a"" )"	771:2:17278:17298	3917649	2	True				
ANR	3917701	CallExpression	"args . AppendArg ( ""-a"" )"		3917649	0					
ANR	3917702	Callee	args . AppendArg		3917649	0					
ANR	3917703	MemberAccess	args . AppendArg		3917649	0					
ANR	3917704	Identifier	args		3917649	0					
ANR	3917705	Identifier	AppendArg		3917649	1					
ANR	3917706	ArgumentList	"""-a"""		3917649	1					
ANR	3917707	Argument	"""-a"""		3917649	0					
ANR	3917708	PrimaryExpression	"""-a"""		3917649	0					
ANR	3917709	ExpressionStatement	args . AppendArg ( s_claim -> rip ( ) -> r_id_str )	772:2:17302:17342	3917649	3	True				
ANR	3917710	CallExpression	args . AppendArg ( s_claim -> rip ( ) -> r_id_str )		3917649	0					
ANR	3917711	Callee	args . AppendArg		3917649	0					
ANR	3917712	MemberAccess	args . AppendArg		3917649	0					
ANR	3917713	Identifier	args		3917649	0					
ANR	3917714	Identifier	AppendArg		3917649	1					
ANR	3917715	ArgumentList	s_claim -> rip ( ) -> r_id_str		3917649	1					
ANR	3917716	Argument	s_claim -> rip ( ) -> r_id_str		3917649	0					
ANR	3917717	PtrMemberAccess	s_claim -> rip ( ) -> r_id_str		3917649	0					
ANR	3917718	CallExpression	s_claim -> rip ( )		3917649	0					
ANR	3917719	Callee	s_claim -> rip		3917649	0					
ANR	3917720	PtrMemberAccess	s_claim -> rip		3917649	0					
ANR	3917721	Identifier	s_claim		3917649	0					
ANR	3917722	Identifier	rip		3917649	1					
ANR	3917723	ArgumentList			3917649	1					
ANR	3917724	Identifier	r_id_str		3917649	1					
ANR	3917725	ExpressionStatement	args . AppendArg ( hostname )	773:2:17346:17370	3917649	4	True				
ANR	3917726	CallExpression	args . AppendArg ( hostname )		3917649	0					
ANR	3917727	Callee	args . AppendArg		3917649	0					
ANR	3917728	MemberAccess	args . AppendArg		3917649	0					
ANR	3917729	Identifier	args		3917649	0					
ANR	3917730	Identifier	AppendArg		3917649	1					
ANR	3917731	ArgumentList	hostname		3917649	1					
ANR	3917732	Argument	hostname		3917649	0					
ANR	3917733	Identifier	hostname		3917649	0					
ANR	3917734	ElseStatement	else		3917649	0					
ANR	3917735	CompoundStatement		13:8:353:353	3917649	0					
ANR	3917736	ExpressionStatement	"args . AppendArg ( ""condor_starter"" )"	775:2:17384:17416	3917649	0	True				
ANR	3917737	CallExpression	"args . AppendArg ( ""condor_starter"" )"		3917649	0					
ANR	3917738	Callee	args . AppendArg		3917649	0					
ANR	3917739	MemberAccess	args . AppendArg		3917649	0					
ANR	3917740	Identifier	args		3917649	0					
ANR	3917741	Identifier	AppendArg		3917649	1					
ANR	3917742	ArgumentList	"""condor_starter"""		3917649	1					
ANR	3917743	Argument	"""condor_starter"""		3917649	0					
ANR	3917744	PrimaryExpression	"""condor_starter"""		3917649	0					
ANR	3917745	ExpressionStatement	"args . AppendArg ( ""-f"" )"	776:2:17420:17440	3917649	1	True				
ANR	3917746	CallExpression	"args . AppendArg ( ""-f"" )"		3917649	0					
ANR	3917747	Callee	args . AppendArg		3917649	0					
ANR	3917748	MemberAccess	args . AppendArg		3917649	0					
ANR	3917749	Identifier	args		3917649	0					
ANR	3917750	Identifier	AppendArg		3917649	1					
ANR	3917751	ArgumentList	"""-f"""		3917649	1					
ANR	3917752	Argument	"""-f"""		3917649	0					
ANR	3917753	PrimaryExpression	"""-f"""		3917649	0					
ANR	3917754	ExpressionStatement	args . AppendArg ( hostname )	777:2:17444:17468	3917649	2	True				
ANR	3917755	CallExpression	args . AppendArg ( hostname )		3917649	0					
ANR	3917756	Callee	args . AppendArg		3917649	0					
ANR	3917757	MemberAccess	args . AppendArg		3917649	0					
ANR	3917758	Identifier	args		3917649	0					
ANR	3917759	Identifier	AppendArg		3917649	1					
ANR	3917760	ArgumentList	hostname		3917649	1					
ANR	3917761	Argument	hostname		3917649	0					
ANR	3917762	Identifier	hostname		3917649	0					
ANR	3917763	ExpressionStatement	"execDCStarter ( args , NULL , NULL , s )"	779:1:17474:17510	3917649	3	True				
ANR	3917764	CallExpression	"execDCStarter ( args , NULL , NULL , s )"		3917649	0					
ANR	3917765	Callee	execDCStarter		3917649	0					
ANR	3917766	Identifier	execDCStarter		3917649	0					
ANR	3917767	ArgumentList	args		3917649	1					
ANR	3917768	Argument	args		3917649	0					
ANR	3917769	Identifier	args		3917649	0					
ANR	3917770	Argument	NULL		3917649	1					
ANR	3917771	Identifier	NULL		3917649	0					
ANR	3917772	Argument	NULL		3917649	2					
ANR	3917773	Identifier	NULL		3917649	0					
ANR	3917774	Argument	s		3917649	3					
ANR	3917775	Identifier	s		3917649	0					
ANR	3917776	ReturnStatement	return s_pid ;	781:1:17514:17526	3917649	4	True				
ANR	3917777	Identifier	s_pid		3917649	0					
ANR	3917778	ReturnType	int		3917649	1					
ANR	3917779	Identifier	Starter :: execDCStarter		3917649	2					
ANR	3917780	ParameterList	Stream * s		3917649	3					
ANR	3917781	Parameter	Stream * s	761:24:17014:17022	3917649	0	True				
ANR	3917782	ParameterType	Stream *		3917649	0					
ANR	3917783	Identifier	s		3917649	1					
ANR	3917784	CFGEntryNode	ENTRY		3917649		True				
ANR	3917785	CFGExitNode	EXIT		3917649		True				
ANR	3917786	Symbol	NULL		3917649						
ANR	3917787	Symbol	* * s_claim		3917649						
ANR	3917788	Symbol	* resmgr		3917649						
ANR	3917789	Symbol	s_claim -> rip ( ) -> r_id_str		3917649						
ANR	3917790	Symbol	* s_claim -> rip		3917649						
ANR	3917791	Symbol	s_claim -> client ( ) -> host		3917649						
ANR	3917792	Symbol	args		3917649						
ANR	3917793	Symbol	hostname		3917649						
ANR	3917794	Symbol	* s_claim -> client		3917649						
ANR	3917795	Symbol	s		3917649						
ANR	3917796	Symbol	* s_claim		3917649						
ANR	3917797	Symbol	resmgr		3917649						
ANR	3917798	Symbol	s_claim -> rip		3917649						
ANR	3917799	Symbol	s_claim -> client		3917649						
ANR	3917800	Symbol	s_claim		3917649						
ANR	3917801	Symbol	resmgr -> is_smp		3917649						
ANR	3917802	Symbol	s_pid		3917649						
ANR	3917803	Function	Starter :: receiveJobClassAdUpdate	784:0:17531:18744							
ANR	3917804	FunctionDef	Starter :: receiveJobClassAdUpdate (Stream * stream)		3917803	0					
ANR	3917805	CompoundStatement		786:0:17586:18744	3917803	0					
ANR	3917806	IdentifierDeclStatement	ClassAd update_ad ;	787:1:17589:17606	3917803	0	True				
ANR	3917807	IdentifierDecl	update_ad		3917803	0					
ANR	3917808	IdentifierDeclType	ClassAd		3917803	0					
ANR	3917809	Identifier	update_ad		3917803	1					
ANR	3917810	IdentifierDeclStatement	int final_update = 0 ;	788:1:17609:17629	3917803	1	True				
ANR	3917811	IdentifierDecl	final_update = 0		3917803	0					
ANR	3917812	IdentifierDeclType	int		3917803	0					
ANR	3917813	Identifier	final_update		3917803	1					
ANR	3917814	AssignmentExpression	final_update = 0		3917803	2		=			
ANR	3917815	Identifier	final_update		3917803	0					
ANR	3917816	PrimaryExpression	0		3917803	1					
ANR	3917817	ExpressionStatement	stream -> decode ( )	794:1:17785:17801	3917803	2	True				
ANR	3917818	CallExpression	stream -> decode ( )		3917803	0					
ANR	3917819	Callee	stream -> decode		3917803	0					
ANR	3917820	PtrMemberAccess	stream -> decode		3917803	0					
ANR	3917821	Identifier	stream		3917803	0					
ANR	3917822	Identifier	decode		3917803	1					
ANR	3917823	ArgumentList			3917803	1					
ANR	3917824	IfStatement	if ( ! stream -> get ( final_update ) || ! update_ad . initFromStream ( * stream ) || ! stream -> end_of_message ( ) )		3917803	3					
ANR	3917825	Condition	! stream -> get ( final_update ) || ! update_ad . initFromStream ( * stream ) || ! stream -> end_of_message ( )	795:5:17808:17907	3917803	0	True				
ANR	3917826	OrExpression	! stream -> get ( final_update ) || ! update_ad . initFromStream ( * stream ) || ! stream -> end_of_message ( )		3917803	0		||			
ANR	3917827	UnaryOperationExpression	! stream -> get ( final_update )		3917803	0					
ANR	3917828	UnaryOperator	!		3917803	0					
ANR	3917829	CallExpression	stream -> get ( final_update )		3917803	1					
ANR	3917830	Callee	stream -> get		3917803	0					
ANR	3917831	PtrMemberAccess	stream -> get		3917803	0					
ANR	3917832	Identifier	stream		3917803	0					
ANR	3917833	Identifier	get		3917803	1					
ANR	3917834	ArgumentList	final_update		3917803	1					
ANR	3917835	Argument	final_update		3917803	0					
ANR	3917836	Identifier	final_update		3917803	0					
ANR	3917837	OrExpression	! update_ad . initFromStream ( * stream ) || ! stream -> end_of_message ( )		3917803	1		||			
ANR	3917838	UnaryOperationExpression	! update_ad . initFromStream ( * stream )		3917803	0					
ANR	3917839	UnaryOperator	!		3917803	0					
ANR	3917840	CallExpression	update_ad . initFromStream ( * stream )		3917803	1					
ANR	3917841	Callee	update_ad . initFromStream		3917803	0					
ANR	3917842	MemberAccess	update_ad . initFromStream		3917803	0					
ANR	3917843	Identifier	update_ad		3917803	0					
ANR	3917844	Identifier	initFromStream		3917803	1					
ANR	3917845	ArgumentList	* stream		3917803	1					
ANR	3917846	Argument	* stream		3917803	0					
ANR	3917847	UnaryOperationExpression	* stream		3917803	0					
ANR	3917848	UnaryOperator	*		3917803	0					
ANR	3917849	Identifier	stream		3917803	1					
ANR	3917850	UnaryOperationExpression	! stream -> end_of_message ( )		3917803	1					
ANR	3917851	UnaryOperator	!		3917803	0					
ANR	3917852	CallExpression	stream -> end_of_message ( )		3917803	1					
ANR	3917853	Callee	stream -> end_of_message		3917803	0					
ANR	3917854	PtrMemberAccess	stream -> end_of_message		3917803	0					
ANR	3917855	Identifier	stream		3917803	0					
ANR	3917856	Identifier	end_of_message		3917803	1					
ANR	3917857	ArgumentList			3917803	1					
ANR	3917858	CompoundStatement		13:1:325:325	3917803	1					
ANR	3917859	ExpressionStatement	final_update = 1	799:2:17916:17932	3917803	0	True				
ANR	3917860	AssignmentExpression	final_update = 1		3917803	0		=			
ANR	3917861	Identifier	final_update		3917803	0					
ANR	3917862	PrimaryExpression	1		3917803	1					
ANR	3917863	ElseStatement	else		3917803	0					
ANR	3917864	CompoundStatement		16:6:356:356	3917803	0					
ANR	3917865	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Received job ClassAd update from starter.\\n"" )"	802:2:17947:18014	3917803	0	True				
ANR	3917866	CallExpression	"dprintf ( D_FULLDEBUG , ""Received job ClassAd update from starter.\\n"" )"		3917803	0					
ANR	3917867	Callee	dprintf		3917803	0					
ANR	3917868	Identifier	dprintf		3917803	0					
ANR	3917869	ArgumentList	D_FULLDEBUG		3917803	1					
ANR	3917870	Argument	D_FULLDEBUG		3917803	0					
ANR	3917871	Identifier	D_FULLDEBUG		3917803	0					
ANR	3917872	Argument	"""Received job ClassAd update from starter.\\n"""		3917803	1					
ANR	3917873	PrimaryExpression	"""Received job ClassAd update from starter.\\n"""		3917803	0					
ANR	3917874	ExpressionStatement	update_ad . dPrint ( D_JOB )	803:2:18018:18043	3917803	1	True				
ANR	3917875	CallExpression	update_ad . dPrint ( D_JOB )		3917803	0					
ANR	3917876	Callee	update_ad . dPrint		3917803	0					
ANR	3917877	MemberAccess	update_ad . dPrint		3917803	0					
ANR	3917878	Identifier	update_ad		3917803	0					
ANR	3917879	Identifier	dPrint		3917803	1					
ANR	3917880	ArgumentList	D_JOB		3917803	1					
ANR	3917881	Argument	D_JOB		3917803	0					
ANR	3917882	Identifier	D_JOB		3917803	0					
ANR	3917883	ExpressionStatement	"update_ad . LookupString ( ATTR_STARTER_IP_ADDR , m_starter_addr )"	811:2:18379:18438	3917803	2	True				
ANR	3917884	CallExpression	"update_ad . LookupString ( ATTR_STARTER_IP_ADDR , m_starter_addr )"		3917803	0					
ANR	3917885	Callee	update_ad . LookupString		3917803	0					
ANR	3917886	MemberAccess	update_ad . LookupString		3917803	0					
ANR	3917887	Identifier	update_ad		3917803	0					
ANR	3917888	Identifier	LookupString		3917803	1					
ANR	3917889	ArgumentList	ATTR_STARTER_IP_ADDR		3917803	1					
ANR	3917890	Argument	ATTR_STARTER_IP_ADDR		3917803	0					
ANR	3917891	Identifier	ATTR_STARTER_IP_ADDR		3917803	0					
ANR	3917892	Argument	m_starter_addr		3917803	1					
ANR	3917893	Identifier	m_starter_addr		3917803	0					
ANR	3917894	IfStatement	if ( s_claim )		3917803	3					
ANR	3917895	Condition	s_claim	813:6:18447:18453	3917803	0	True				
ANR	3917896	Identifier	s_claim		3917803	0					
ANR	3917897	CompoundStatement		28:16:870:870	3917803	1					
ANR	3917898	ExpressionStatement	s_claim -> receiveJobClassAdUpdate ( update_ad )	814:3:18462:18507	3917803	0	True				
ANR	3917899	CallExpression	s_claim -> receiveJobClassAdUpdate ( update_ad )		3917803	0					
ANR	3917900	Callee	s_claim -> receiveJobClassAdUpdate		3917803	0					
ANR	3917901	PtrMemberAccess	s_claim -> receiveJobClassAdUpdate		3917803	0					
ANR	3917902	Identifier	s_claim		3917803	0					
ANR	3917903	Identifier	receiveJobClassAdUpdate		3917803	1					
ANR	3917904	ArgumentList	update_ad		3917803	1					
ANR	3917905	Argument	update_ad		3917803	0					
ANR	3917906	Identifier	update_ad		3917803	0					
ANR	3917907	IfStatement	if ( final_update )		3917803	4					
ANR	3917908	Condition	final_update	818:5:18522:18533	3917803	0	True				
ANR	3917909	Identifier	final_update		3917803	0					
ANR	3917910	CompoundStatement		33:20:950:950	3917803	1					
ANR	3917911	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Closing job ClassAd update socket from starter.\\n"" )"	819:2:18541:18614	3917803	0	True				
ANR	3917912	CallExpression	"dprintf ( D_FULLDEBUG , ""Closing job ClassAd update socket from starter.\\n"" )"		3917803	0					
ANR	3917913	Callee	dprintf		3917803	0					
ANR	3917914	Identifier	dprintf		3917803	0					
ANR	3917915	ArgumentList	D_FULLDEBUG		3917803	1					
ANR	3917916	Argument	D_FULLDEBUG		3917803	0					
ANR	3917917	Identifier	D_FULLDEBUG		3917803	0					
ANR	3917918	Argument	"""Closing job ClassAd update socket from starter.\\n"""		3917803	1					
ANR	3917919	PrimaryExpression	"""Closing job ClassAd update socket from starter.\\n"""		3917803	0					
ANR	3917920	ExpressionStatement	daemonCore -> Cancel_Socket ( s_job_update_sock )	820:2:18618:18662	3917803	1	True				
ANR	3917921	CallExpression	daemonCore -> Cancel_Socket ( s_job_update_sock )		3917803	0					
ANR	3917922	Callee	daemonCore -> Cancel_Socket		3917803	0					
ANR	3917923	PtrMemberAccess	daemonCore -> Cancel_Socket		3917803	0					
ANR	3917924	Identifier	daemonCore		3917803	0					
ANR	3917925	Identifier	Cancel_Socket		3917803	1					
ANR	3917926	ArgumentList	s_job_update_sock		3917803	1					
ANR	3917927	Argument	s_job_update_sock		3917803	0					
ANR	3917928	Identifier	s_job_update_sock		3917803	0					
ANR	3917929	Statement	delete	821:2:18666:18671	3917803	2	True				
ANR	3917930	ExpressionStatement	s_job_update_sock	821:9:18673:18690	3917803	3	True				
ANR	3917931	Identifier	s_job_update_sock		3917803	0					
ANR	3917932	ExpressionStatement	s_job_update_sock = NULL	822:2:18694:18718	3917803	4	True				
ANR	3917933	AssignmentExpression	s_job_update_sock = NULL		3917803	0		=			
ANR	3917934	Identifier	s_job_update_sock		3917803	0					
ANR	3917935	Identifier	NULL		3917803	1					
ANR	3917936	ReturnStatement	return KEEP_STREAM ;	824:1:18724:18742	3917803	5	True				
ANR	3917937	Identifier	KEEP_STREAM		3917803	0					
ANR	3917938	ReturnType	int		3917803	1					
ANR	3917939	Identifier	Starter :: receiveJobClassAdUpdate		3917803	2					
ANR	3917940	ParameterList	Stream * stream		3917803	3					
ANR	3917941	Parameter	Stream * stream	785:34:17569:17582	3917803	0	True				
ANR	3917942	ParameterType	Stream *		3917803	0					
ANR	3917943	Identifier	stream		3917803	1					
ANR	3917944	CFGEntryNode	ENTRY		3917803		True				
ANR	3917945	CFGExitNode	EXIT		3917803		True				
ANR	3917946	Symbol	stream -> get		3917803						
ANR	3917947	Symbol	stream -> end_of_message		3917803						
ANR	3917948	Symbol	NULL		3917803						
ANR	3917949	Symbol	update_ad		3917803						
ANR	3917950	Symbol	D_JOB		3917803						
ANR	3917951	Symbol	update_ad . initFromStream		3917803						
ANR	3917952	Symbol	D_FULLDEBUG		3917803						
ANR	3917953	Symbol	m_starter_addr		3917803						
ANR	3917954	Symbol	KEEP_STREAM		3917803						
ANR	3917955	Symbol	final_update		3917803						
ANR	3917956	Symbol	stream		3917803						
ANR	3917957	Symbol	s_job_update_sock		3917803						
ANR	3917958	Symbol	daemonCore		3917803						
ANR	3917959	Symbol	* stream		3917803						
ANR	3917960	Symbol	ATTR_STARTER_IP_ADDR		3917803						
ANR	3917961	Symbol	s_claim		3917803						
ANR	3917962	Function	Starter :: execDCStarter	827:0:18747:22319							
ANR	3917963	FunctionDef	"Starter :: execDCStarter (ArgList const & args , Env const * env , int * std_fds , Stream * s)"		3917962	0					
ANR	3917964	CompoundStatement		830:0:18845:22319	3917962	0					
ANR	3917965	IdentifierDeclStatement	"Stream * inherit_list [ ] = { 0 , s , 0 } ;"	831:1:18848:18979	3917962	0	True				
ANR	3917966	IdentifierDecl	"* inherit_list [ ] = { 0 , s , 0 }"		3917962	0					
ANR	3917967	IdentifierDeclType	Stream * [ ]		3917962	0					
ANR	3917968	Identifier	inherit_list		3917962	1					
ANR	3917969	AssignmentExpression	"* inherit_list [ ] = { 0 , s , 0 }"		3917962	2		=			
ANR	3917970	Identifier	inherit_list		3917962	0					
ANR	3917971	InitializerList	0		3917962	1					
ANR	3917972	PrimaryExpression	0		3917962	0					
ANR	3917973	Identifier	s		3917962	1					
ANR	3917974	PrimaryExpression	0		3917962	2					
ANR	3917975	IdentifierDeclStatement	const ArgList * final_args = & args ;	836:1:18983:19016	3917962	1	True				
ANR	3917976	IdentifierDecl	* final_args = & args		3917962	0					
ANR	3917977	IdentifierDeclType	const ArgList *		3917962	0					
ANR	3917978	Identifier	final_args		3917962	1					
ANR	3917979	AssignmentExpression	* final_args = & args		3917962	2		=			
ANR	3917980	Identifier	final_args		3917962	0					
ANR	3917981	UnaryOperationExpression	& args		3917962	1					
ANR	3917982	UnaryOperator	&		3917962	0					
ANR	3917983	Identifier	args		3917962	1					
ANR	3917984	IdentifierDeclStatement	const char * final_path = s_path ;	837:1:19019:19050	3917962	2	True				
ANR	3917985	IdentifierDecl	* final_path = s_path		3917962	0					
ANR	3917986	IdentifierDeclType	const char *		3917962	0					
ANR	3917987	Identifier	final_path		3917962	1					
ANR	3917988	AssignmentExpression	* final_path = s_path		3917962	2		=			
ANR	3917989	Identifier	s_path		3917962	0					
ANR	3917990	Identifier	s_path		3917962	1					
ANR	3917991	IdentifierDeclStatement	Env new_env ;	838:1:19053:19064	3917962	3	True				
ANR	3917992	IdentifierDecl	new_env		3917962	0					
ANR	3917993	IdentifierDeclType	Env		3917962	0					
ANR	3917994	Identifier	new_env		3917962	1					
ANR	3917995	IfStatement	if ( env )		3917962	4					
ANR	3917996	Condition	env	840:5:19072:19074	3917962	0	True				
ANR	3917997	Identifier	env		3917962	0					
ANR	3917998	CompoundStatement		11:11:232:232	3917962	1					
ANR	3917999	ExpressionStatement	new_env . MergeFrom ( * env )	841:2:19082:19107	3917962	0	True				
ANR	3918000	CallExpression	new_env . MergeFrom ( * env )		3917962	0					
ANR	3918001	Callee	new_env . MergeFrom		3917962	0					
ANR	3918002	MemberAccess	new_env . MergeFrom		3917962	0					
ANR	3918003	Identifier	new_env		3917962	0					
ANR	3918004	Identifier	MergeFrom		3917962	1					
ANR	3918005	ArgumentList	* env		3917962	1					
ANR	3918006	Argument	* env		3917962	0					
ANR	3918007	UnaryOperationExpression	* env		3917962	0					
ANR	3918008	UnaryOperator	*		3917962	0					
ANR	3918009	Identifier	env		3917962	1					
ANR	3918010	ExpressionStatement	ASSERT ( executeDir ( ) )	848:1:19328:19350	3917962	5	True				
ANR	3918011	CallExpression	ASSERT ( executeDir ( ) )		3917962	0					
ANR	3918012	Callee	ASSERT		3917962	0					
ANR	3918013	Identifier	ASSERT		3917962	0					
ANR	3918014	ArgumentList	executeDir ( )		3917962	1					
ANR	3918015	Argument	executeDir ( )		3917962	0					
ANR	3918016	CallExpression	executeDir ( )		3917962	0					
ANR	3918017	Callee	executeDir		3917962	0					
ANR	3918018	Identifier	executeDir		3917962	0					
ANR	3918019	ArgumentList			3917962	1					
ANR	3918020	ExpressionStatement	"new_env . SetEnv ( ""_CONDOR_EXECUTE"" , executeDir ( ) )"	849:1:19353:19402	3917962	6	True				
ANR	3918021	CallExpression	"new_env . SetEnv ( ""_CONDOR_EXECUTE"" , executeDir ( ) )"		3917962	0					
ANR	3918022	Callee	new_env . SetEnv		3917962	0					
ANR	3918023	MemberAccess	new_env . SetEnv		3917962	0					
ANR	3918024	Identifier	new_env		3917962	0					
ANR	3918025	Identifier	SetEnv		3917962	1					
ANR	3918026	ArgumentList	"""_CONDOR_EXECUTE"""		3917962	1					
ANR	3918027	Argument	"""_CONDOR_EXECUTE"""		3917962	0					
ANR	3918028	PrimaryExpression	"""_CONDOR_EXECUTE"""		3917962	0					
ANR	3918029	Argument	executeDir ( )		3917962	1					
ANR	3918030	CallExpression	executeDir ( )		3917962	0					
ANR	3918031	Callee	executeDir		3917962	0					
ANR	3918032	Identifier	executeDir		3917962	0					
ANR	3918033	ArgumentList			3917962	1					
ANR	3918034	ExpressionStatement	env = & new_env	851:1:19406:19420	3917962	7	True				
ANR	3918035	AssignmentExpression	env = & new_env		3917962	0		=			
ANR	3918036	Identifier	env		3917962	0					
ANR	3918037	UnaryOperationExpression	& new_env		3917962	1					
ANR	3918038	UnaryOperator	&		3917962	0					
ANR	3918039	Identifier	new_env		3917962	1					
ANR	3918040	IdentifierDeclStatement	ReliSock child_job_update_sock ;	854:1:19425:19455	3917962	8	True				
ANR	3918041	IdentifierDecl	child_job_update_sock		3917962	0					
ANR	3918042	IdentifierDeclType	ReliSock		3917962	0					
ANR	3918043	Identifier	child_job_update_sock		3917962	1					
ANR	3918044	ExpressionStatement	ASSERT ( ! s_job_update_sock )	855:1:19490:19518	3917962	9	True				
ANR	3918045	CallExpression	ASSERT ( ! s_job_update_sock )		3917962	0					
ANR	3918046	Callee	ASSERT		3917962	0					
ANR	3918047	Identifier	ASSERT		3917962	0					
ANR	3918048	ArgumentList	! s_job_update_sock		3917962	1					
ANR	3918049	Argument	! s_job_update_sock		3917962	0					
ANR	3918050	UnaryOperationExpression	! s_job_update_sock		3917962	0					
ANR	3918051	UnaryOperator	!		3917962	0					
ANR	3918052	Identifier	s_job_update_sock		3917962	1					
ANR	3918053	Statement	s_job_update_sock	856:1:19521:19537	3917962	10	True				
ANR	3918054	Statement	=	856:19:19539:19539	3917962	11	True				
ANR	3918055	Statement	new	856:21:19541:19543	3917962	12	True				
ANR	3918056	ExpressionStatement	ReliSock	856:25:19545:19553	3917962	13	True				
ANR	3918057	Identifier	ReliSock		3917962	0					
ANR	3918058	ExpressionStatement	ASSERT ( s_job_update_sock )	857:1:19598:19625	3917962	14	True				
ANR	3918059	CallExpression	ASSERT ( s_job_update_sock )		3917962	0					
ANR	3918060	Callee	ASSERT		3917962	0					
ANR	3918061	Identifier	ASSERT		3917962	0					
ANR	3918062	ArgumentList	s_job_update_sock		3917962	1					
ANR	3918063	Argument	s_job_update_sock		3917962	0					
ANR	3918064	Identifier	s_job_update_sock		3917962	0					
ANR	3918065	IfStatement	if ( ! s_job_update_sock -> connect_socketpair ( child_job_update_sock ) )		3917962	15					
ANR	3918066	Condition	! s_job_update_sock -> connect_socketpair ( child_job_update_sock )	861:5:19734:19796	3917962	0	True				
ANR	3918067	UnaryOperationExpression	! s_job_update_sock -> connect_socketpair ( child_job_update_sock )		3917962	0					
ANR	3918068	UnaryOperator	!		3917962	0					
ANR	3918069	CallExpression	s_job_update_sock -> connect_socketpair ( child_job_update_sock )		3917962	1					
ANR	3918070	Callee	s_job_update_sock -> connect_socketpair		3917962	0					
ANR	3918071	PtrMemberAccess	s_job_update_sock -> connect_socketpair		3917962	0					
ANR	3918072	Identifier	s_job_update_sock		3917962	0					
ANR	3918073	Identifier	connect_socketpair		3917962	1					
ANR	3918074	ArgumentList	child_job_update_sock		3917962	1					
ANR	3918075	Argument	child_job_update_sock		3917962	0					
ANR	3918076	Identifier	child_job_update_sock		3917962	0					
ANR	3918077	CompoundStatement		32:71:954:954	3917962	1					
ANR	3918078	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Failed to create job ClassAd update socket!\\n"" )"	862:2:19804:19878	3917962	0	True				
ANR	3918079	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Failed to create job ClassAd update socket!\\n"" )"		3917962	0					
ANR	3918080	Callee	dprintf		3917962	0					
ANR	3918081	Identifier	dprintf		3917962	0					
ANR	3918082	ArgumentList	D_ALWAYS		3917962	1					
ANR	3918083	Argument	D_ALWAYS		3917962	0					
ANR	3918084	Identifier	D_ALWAYS		3917962	0					
ANR	3918085	Argument	"""ERROR: Failed to create job ClassAd update socket!\\n"""		3917962	1					
ANR	3918086	PrimaryExpression	"""ERROR: Failed to create job ClassAd update socket!\\n"""		3917962	0					
ANR	3918087	ExpressionStatement	s_pid = 0	863:2:19882:19891	3917962	1	True				
ANR	3918088	AssignmentExpression	s_pid = 0		3917962	0		=			
ANR	3918089	Identifier	s_pid		3917962	0					
ANR	3918090	PrimaryExpression	0		3917962	1					
ANR	3918091	ReturnStatement	return s_pid ;	864:2:19895:19907	3917962	2	True				
ANR	3918092	Identifier	s_pid		3917962	0					
ANR	3918093	ExpressionStatement	inherit_list [ 0 ] = & child_job_update_sock	866:1:19913:19953	3917962	16	True				
ANR	3918094	AssignmentExpression	inherit_list [ 0 ] = & child_job_update_sock		3917962	0		=			
ANR	3918095	ArrayIndexing	inherit_list [ 0 ]		3917962	0					
ANR	3918096	Identifier	inherit_list		3917962	0					
ANR	3918097	PrimaryExpression	0		3917962	1					
ANR	3918098	UnaryOperationExpression	& child_job_update_sock		3917962	1					
ANR	3918099	UnaryOperator	&		3917962	0					
ANR	3918100	Identifier	child_job_update_sock		3917962	1					
ANR	3918101	IfStatement	if ( s_claim )		3917962	17					
ANR	3918102	Condition	s_claim	869:5:20000:20006	3917962	0	True				
ANR	3918103	Identifier	s_claim		3917962	0					
ANR	3918104	ExpressionStatement	s_claim -> writeMachAd ( s_job_update_sock )	870:2:20012:20053	3917962	1	True				
ANR	3918105	CallExpression	s_claim -> writeMachAd ( s_job_update_sock )		3917962	0					
ANR	3918106	Callee	s_claim -> writeMachAd		3917962	0					
ANR	3918107	PtrMemberAccess	s_claim -> writeMachAd		3917962	0					
ANR	3918108	Identifier	s_claim		3917962	0					
ANR	3918109	Identifier	writeMachAd		3917962	1					
ANR	3918110	ArgumentList	s_job_update_sock		3917962	1					
ANR	3918111	Argument	s_job_update_sock		3917962	0					
ANR	3918112	Identifier	s_job_update_sock		3917962	0					
ANR	3918113	IfStatement	"if ( daemonCore -> Register_Socket ( s_job_update_sock , ""starter ClassAd update socket"" , ( SocketHandlercpp ) & Starter :: receiveJobClassAdUpdate , ""receiveJobClassAdUpdate"" , this ) < 0 )"		3917962	18					
ANR	3918114	Condition	"daemonCore -> Register_Socket ( s_job_update_sock , ""starter ClassAd update socket"" , ( SocketHandlercpp ) & Starter :: receiveJobClassAdUpdate , ""receiveJobClassAdUpdate"" , this ) < 0"	872:5:20061:20245	3917962	0	True				
ANR	3918115	RelationalExpression	"daemonCore -> Register_Socket ( s_job_update_sock , ""starter ClassAd update socket"" , ( SocketHandlercpp ) & Starter :: receiveJobClassAdUpdate , ""receiveJobClassAdUpdate"" , this ) < 0"		3917962	0		<			
ANR	3918116	CallExpression	"daemonCore -> Register_Socket ( s_job_update_sock , ""starter ClassAd update socket"" , ( SocketHandlercpp ) & Starter :: receiveJobClassAdUpdate , ""receiveJobClassAdUpdate"" , this )"		3917962	0					
ANR	3918117	Callee	daemonCore -> Register_Socket		3917962	0					
ANR	3918118	PtrMemberAccess	daemonCore -> Register_Socket		3917962	0					
ANR	3918119	Identifier	daemonCore		3917962	0					
ANR	3918120	Identifier	Register_Socket		3917962	1					
ANR	3918121	ArgumentList	s_job_update_sock		3917962	1					
ANR	3918122	Argument	s_job_update_sock		3917962	0					
ANR	3918123	Identifier	s_job_update_sock		3917962	0					
ANR	3918124	Argument	"""starter ClassAd update socket"""		3917962	1					
ANR	3918125	PrimaryExpression	"""starter ClassAd update socket"""		3917962	0					
ANR	3918126	Argument	( SocketHandlercpp ) & Starter :: receiveJobClassAdUpdate		3917962	2					
ANR	3918127	CastExpression	( SocketHandlercpp ) & Starter :: receiveJobClassAdUpdate		3917962	0					
ANR	3918128	CastTarget	SocketHandlercpp		3917962	0					
ANR	3918129	UnaryOperationExpression	& Starter :: receiveJobClassAdUpdate		3917962	1					
ANR	3918130	UnaryOperator	&		3917962	0					
ANR	3918131	Identifier	Starter :: receiveJobClassAdUpdate		3917962	1					
ANR	3918132	Argument	"""receiveJobClassAdUpdate"""		3917962	3					
ANR	3918133	PrimaryExpression	"""receiveJobClassAdUpdate"""		3917962	0					
ANR	3918134	Argument	this		3917962	4					
ANR	3918135	Identifier	this		3917962	0					
ANR	3918136	PrimaryExpression	0		3917962	1					
ANR	3918137	CompoundStatement		49:1:1404:1404	3917962	1					
ANR	3918138	ExpressionStatement	"EXCEPT ( ""Failed to register ClassAd update socket."" )"	879:2:20254:20305	3917962	0	True				
ANR	3918139	CallExpression	"EXCEPT ( ""Failed to register ClassAd update socket."" )"		3917962	0					
ANR	3918140	Callee	EXCEPT		3917962	0					
ANR	3918141	Identifier	EXCEPT		3917962	0					
ANR	3918142	ArgumentList	"""Failed to register ClassAd update socket."""		3917962	1					
ANR	3918143	Argument	"""Failed to register ClassAd update socket."""		3917962	0					
ANR	3918144	PrimaryExpression	"""Failed to register ClassAd update socket."""		3917962	0					
ANR	3918145	IdentifierDeclStatement	ArgList glexec_args ;	886:1:20463:20482	3917962	19	True				
ANR	3918146	IdentifierDecl	glexec_args		3917962	0					
ANR	3918147	IdentifierDeclType	ArgList		3917962	0					
ANR	3918148	Identifier	glexec_args		3917962	1					
ANR	3918149	IdentifierDeclStatement	Env glexec_env ;	887:1:20485:20499	3917962	20	True				
ANR	3918150	IdentifierDecl	glexec_env		3917962	0					
ANR	3918151	IdentifierDeclType	Env		3917962	0					
ANR	3918152	Identifier	glexec_env		3917962	1					
ANR	3918153	IdentifierDeclStatement	int glexec_std_fds [ 3 ] ;	888:1:20502:20523	3917962	21	True				
ANR	3918154	IdentifierDecl	glexec_std_fds [ 3 ]		3917962	0					
ANR	3918155	IdentifierDeclType	int [ 3 ]		3917962	0					
ANR	3918156	Identifier	glexec_std_fds		3917962	1					
ANR	3918157	PrimaryExpression	3		3917962	2					
ANR	3918158	IfStatement	"if ( param_boolean ( ""GLEXEC_STARTER"" , false ) )"		3917962	22					
ANR	3918159	Condition	"param_boolean ( ""GLEXEC_STARTER"" , false )"	889:5:20530:20569	3917962	0	True				
ANR	3918160	CallExpression	"param_boolean ( ""GLEXEC_STARTER"" , false )"		3917962	0					
ANR	3918161	Callee	param_boolean		3917962	0					
ANR	3918162	Identifier	param_boolean		3917962	0					
ANR	3918163	ArgumentList	"""GLEXEC_STARTER"""		3917962	1					
ANR	3918164	Argument	"""GLEXEC_STARTER"""		3917962	0					
ANR	3918165	PrimaryExpression	"""GLEXEC_STARTER"""		3917962	0					
ANR	3918166	Argument	false		3917962	1					
ANR	3918167	Identifier	false		3917962	0					
ANR	3918168	CompoundStatement		60:48:1727:1727	3917962	1					
ANR	3918169	IfStatement	"if ( ! glexec_starter_prepare ( s_path , s_claim -> client ( ) -> proxyFile ( ) , args , env , std_fds , glexec_args , glexec_env , glexec_std_fds ) )"		3917962	0					
ANR	3918170	Condition	"! glexec_starter_prepare ( s_path , s_claim -> client ( ) -> proxyFile ( ) , args , env , std_fds , glexec_args , glexec_env , glexec_std_fds )"	890:6:20581:20931	3917962	0	True				
ANR	3918171	UnaryOperationExpression	"! glexec_starter_prepare ( s_path , s_claim -> client ( ) -> proxyFile ( ) , args , env , std_fds , glexec_args , glexec_env , glexec_std_fds )"		3917962	0					
ANR	3918172	UnaryOperator	!		3917962	0					
ANR	3918173	CallExpression	"glexec_starter_prepare ( s_path , s_claim -> client ( ) -> proxyFile ( ) , args , env , std_fds , glexec_args , glexec_env , glexec_std_fds )"		3917962	1					
ANR	3918174	Callee	glexec_starter_prepare		3917962	0					
ANR	3918175	Identifier	glexec_starter_prepare		3917962	0					
ANR	3918176	ArgumentList	s_path		3917962	1					
ANR	3918177	Argument	s_path		3917962	0					
ANR	3918178	Identifier	s_path		3917962	0					
ANR	3918179	Argument	s_claim -> client ( ) -> proxyFile ( )		3917962	1					
ANR	3918180	CallExpression	s_claim -> client ( ) -> proxyFile ( )		3917962	0					
ANR	3918181	Callee	s_claim -> client ( ) -> proxyFile		3917962	0					
ANR	3918182	PtrMemberAccess	s_claim -> client ( ) -> proxyFile		3917962	0					
ANR	3918183	CallExpression	s_claim -> client ( )		3917962	0					
ANR	3918184	Callee	s_claim -> client		3917962	0					
ANR	3918185	PtrMemberAccess	s_claim -> client		3917962	0					
ANR	3918186	Identifier	s_claim		3917962	0					
ANR	3918187	Identifier	client		3917962	1					
ANR	3918188	ArgumentList			3917962	1					
ANR	3918189	Identifier	proxyFile		3917962	1					
ANR	3918190	ArgumentList			3917962	1					
ANR	3918191	Argument	args		3917962	2					
ANR	3918192	Identifier	args		3917962	0					
ANR	3918193	Argument	env		3917962	3					
ANR	3918194	Identifier	env		3917962	0					
ANR	3918195	Argument	std_fds		3917962	4					
ANR	3918196	Identifier	std_fds		3917962	0					
ANR	3918197	Argument	glexec_args		3917962	5					
ANR	3918198	Identifier	glexec_args		3917962	0					
ANR	3918199	Argument	glexec_env		3917962	6					
ANR	3918200	Identifier	glexec_env		3917962	0					
ANR	3918201	Argument	glexec_std_fds		3917962	7					
ANR	3918202	Identifier	glexec_std_fds		3917962	0					
ANR	3918203	CompoundStatement		69:2:2091:2091	3917962	1					
ANR	3918204	ExpressionStatement	cleanupAfterGlexec ( )	901:3:21021:21041	3917962	0	True				
ANR	3918205	CallExpression	cleanupAfterGlexec ( )		3917962	0					
ANR	3918206	Callee	cleanupAfterGlexec		3917962	0					
ANR	3918207	Identifier	cleanupAfterGlexec		3917962	0					
ANR	3918208	ArgumentList			3917962	1					
ANR	3918209	ReturnStatement	return 0 ;	902:3:21046:21054	3917962	1	True				
ANR	3918210	PrimaryExpression	0		3917962	0					
ANR	3918211	ExpressionStatement	final_path = glexec_args . GetArg ( 0 )	904:2:21062:21096	3917962	1	True				
ANR	3918212	AssignmentExpression	final_path = glexec_args . GetArg ( 0 )		3917962	0		=			
ANR	3918213	Identifier	final_path		3917962	0					
ANR	3918214	CallExpression	glexec_args . GetArg ( 0 )		3917962	1					
ANR	3918215	Callee	glexec_args . GetArg		3917962	0					
ANR	3918216	MemberAccess	glexec_args . GetArg		3917962	0					
ANR	3918217	Identifier	glexec_args		3917962	0					
ANR	3918218	Identifier	GetArg		3917962	1					
ANR	3918219	ArgumentList	0		3917962	1					
ANR	3918220	Argument	0		3917962	0					
ANR	3918221	PrimaryExpression	0		3917962	0					
ANR	3918222	ExpressionStatement	final_args = & glexec_args	905:2:21100:21125	3917962	2	True				
ANR	3918223	AssignmentExpression	final_args = & glexec_args		3917962	0		=			
ANR	3918224	Identifier	final_args		3917962	0					
ANR	3918225	UnaryOperationExpression	& glexec_args		3917962	1					
ANR	3918226	UnaryOperator	&		3917962	0					
ANR	3918227	Identifier	glexec_args		3917962	1					
ANR	3918228	ExpressionStatement	env = & glexec_env	906:2:21129:21146	3917962	3	True				
ANR	3918229	AssignmentExpression	env = & glexec_env		3917962	0		=			
ANR	3918230	Identifier	env		3917962	0					
ANR	3918231	UnaryOperationExpression	& glexec_env		3917962	1					
ANR	3918232	UnaryOperator	&		3917962	0					
ANR	3918233	Identifier	glexec_env		3917962	1					
ANR	3918234	ExpressionStatement	std_fds = glexec_std_fds	907:2:21150:21174	3917962	4	True				
ANR	3918235	AssignmentExpression	std_fds = glexec_std_fds		3917962	0		=			
ANR	3918236	Identifier	std_fds		3917962	0					
ANR	3918237	Identifier	glexec_std_fds		3917962	1					
ANR	3918238	IdentifierDeclStatement	int reaper_id ;	911:1:21199:21212	3917962	23	True				
ANR	3918239	IdentifierDecl	reaper_id		3917962	0					
ANR	3918240	IdentifierDeclType	int		3917962	0					
ANR	3918241	Identifier	reaper_id		3917962	1					
ANR	3918242	IfStatement	if ( s_reaper_id > 0 )		3917962	24					
ANR	3918243	Condition	s_reaper_id > 0	912:5:21219:21233	3917962	0	True				
ANR	3918244	RelationalExpression	s_reaper_id > 0		3917962	0		>			
ANR	3918245	Identifier	s_reaper_id		3917962	0					
ANR	3918246	PrimaryExpression	0		3917962	1					
ANR	3918247	CompoundStatement		83:23:2391:2391	3917962	1					
ANR	3918248	ExpressionStatement	reaper_id = s_reaper_id	913:2:21241:21264	3917962	0	True				
ANR	3918249	AssignmentExpression	reaper_id = s_reaper_id		3917962	0		=			
ANR	3918250	Identifier	reaper_id		3917962	0					
ANR	3918251	Identifier	s_reaper_id		3917962	1					
ANR	3918252	ElseStatement	else		3917962	0					
ANR	3918253	CompoundStatement		85:8:2428:2428	3917962	0					
ANR	3918254	ExpressionStatement	reaper_id = main_reaper	915:2:21278:21301	3917962	0	True				
ANR	3918255	AssignmentExpression	reaper_id = main_reaper		3917962	0		=			
ANR	3918256	Identifier	reaper_id		3917962	0					
ANR	3918257	Identifier	main_reaper		3917962	1					
ANR	3918258	IfStatement	if ( DebugFlags & D_FULLDEBUG )		3917962	25					
ANR	3918259	Condition	DebugFlags & D_FULLDEBUG	918:4:21311:21334	3917962	0	True				
ANR	3918260	BitAndExpression	DebugFlags & D_FULLDEBUG		3917962	0		&			
ANR	3918261	Identifier	DebugFlags		3917962	0					
ANR	3918262	Identifier	D_FULLDEBUG		3917962	1					
ANR	3918263	CompoundStatement		90:2:2495:2515	3917962	1					
ANR	3918264	IdentifierDeclStatement	MyString args_string ;	919:2:21341:21361	3917962	0	True				
ANR	3918265	IdentifierDecl	args_string		3917962	0					
ANR	3918266	IdentifierDeclType	MyString		3917962	0					
ANR	3918267	Identifier	args_string		3917962	1					
ANR	3918268	ExpressionStatement	final_args -> GetArgsStringForDisplay ( & args_string )	920:2:21365:21414	3917962	1	True				
ANR	3918269	CallExpression	final_args -> GetArgsStringForDisplay ( & args_string )		3917962	0					
ANR	3918270	Callee	final_args -> GetArgsStringForDisplay		3917962	0					
ANR	3918271	PtrMemberAccess	final_args -> GetArgsStringForDisplay		3917962	0					
ANR	3918272	Identifier	final_args		3917962	0					
ANR	3918273	Identifier	GetArgsStringForDisplay		3917962	1					
ANR	3918274	ArgumentList	& args_string		3917962	1					
ANR	3918275	Argument	& args_string		3917962	0					
ANR	3918276	UnaryOperationExpression	& args_string		3917962	0					
ANR	3918277	UnaryOperator	&		3917962	0					
ANR	3918278	Identifier	args_string		3917962	1					
ANR	3918279	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""About to Create_Process \\""%s\\""\\n"" , args_string . Value ( ) )"	921:2:21418:21502	3917962	2	True				
ANR	3918280	CallExpression	"dprintf ( D_FULLDEBUG , ""About to Create_Process \\""%s\\""\\n"" , args_string . Value ( ) )"		3917962	0					
ANR	3918281	Callee	dprintf		3917962	0					
ANR	3918282	Identifier	dprintf		3917962	0					
ANR	3918283	ArgumentList	D_FULLDEBUG		3917962	1					
ANR	3918284	Argument	D_FULLDEBUG		3917962	0					
ANR	3918285	Identifier	D_FULLDEBUG		3917962	0					
ANR	3918286	Argument	"""About to Create_Process \\""%s\\""\\n"""		3917962	1					
ANR	3918287	PrimaryExpression	"""About to Create_Process \\""%s\\""\\n"""		3917962	0					
ANR	3918288	Argument	args_string . Value ( )		3917962	2					
ANR	3918289	CallExpression	args_string . Value ( )		3917962	0					
ANR	3918290	Callee	args_string . Value		3917962	0					
ANR	3918291	MemberAccess	args_string . Value		3917962	0					
ANR	3918292	Identifier	args_string		3917962	0					
ANR	3918293	Identifier	Value		3917962	1					
ANR	3918294	ArgumentList			3917962	1					
ANR	3918295	IdentifierDeclStatement	FamilyInfo fi ;	925:1:21509:21522	3917962	26	True				
ANR	3918296	IdentifierDecl	fi		3917962	0					
ANR	3918297	IdentifierDeclType	FamilyInfo		3917962	0					
ANR	3918298	Identifier	fi		3917962	1					
ANR	3918299	ExpressionStatement	fi . max_snapshot_interval = pid_snapshot_interval	926:1:21525:21573	3917962	27	True				
ANR	3918300	AssignmentExpression	fi . max_snapshot_interval = pid_snapshot_interval		3917962	0		=			
ANR	3918301	MemberAccess	fi . max_snapshot_interval		3917962	0					
ANR	3918302	Identifier	fi		3917962	0					
ANR	3918303	Identifier	max_snapshot_interval		3917962	1					
ANR	3918304	Identifier	pid_snapshot_interval		3917962	1					
ANR	3918305	ExpressionStatement	"s_pid = daemonCore -> Create_Process ( final_path , * final_args , PRIV_ROOT , reaper_id , TRUE , env , NULL , & fi , inherit_list , std_fds )"	928:1:21577:21726	3917962	28	True				
ANR	3918306	AssignmentExpression	"s_pid = daemonCore -> Create_Process ( final_path , * final_args , PRIV_ROOT , reaper_id , TRUE , env , NULL , & fi , inherit_list , std_fds )"		3917962	0		=			
ANR	3918307	Identifier	s_pid		3917962	0					
ANR	3918308	CallExpression	"daemonCore -> Create_Process ( final_path , * final_args , PRIV_ROOT , reaper_id , TRUE , env , NULL , & fi , inherit_list , std_fds )"		3917962	1					
ANR	3918309	Callee	daemonCore -> Create_Process		3917962	0					
ANR	3918310	PtrMemberAccess	daemonCore -> Create_Process		3917962	0					
ANR	3918311	Identifier	daemonCore		3917962	0					
ANR	3918312	Identifier	Create_Process		3917962	1					
ANR	3918313	ArgumentList	final_path		3917962	1					
ANR	3918314	Argument	final_path		3917962	0					
ANR	3918315	Identifier	final_path		3917962	0					
ANR	3918316	Argument	* final_args		3917962	1					
ANR	3918317	UnaryOperationExpression	* final_args		3917962	0					
ANR	3918318	UnaryOperator	*		3917962	0					
ANR	3918319	Identifier	final_args		3917962	1					
ANR	3918320	Argument	PRIV_ROOT		3917962	2					
ANR	3918321	Identifier	PRIV_ROOT		3917962	0					
ANR	3918322	Argument	reaper_id		3917962	3					
ANR	3918323	Identifier	reaper_id		3917962	0					
ANR	3918324	Argument	TRUE		3917962	4					
ANR	3918325	Identifier	TRUE		3917962	0					
ANR	3918326	Argument	env		3917962	5					
ANR	3918327	Identifier	env		3917962	0					
ANR	3918328	Argument	NULL		3917962	6					
ANR	3918329	Identifier	NULL		3917962	0					
ANR	3918330	Argument	& fi		3917962	7					
ANR	3918331	UnaryOperationExpression	& fi		3917962	0					
ANR	3918332	UnaryOperator	&		3917962	0					
ANR	3918333	Identifier	fi		3917962	1					
ANR	3918334	Argument	inherit_list		3917962	8					
ANR	3918335	Identifier	inherit_list		3917962	0					
ANR	3918336	Argument	std_fds		3917962	9					
ANR	3918337	Identifier	std_fds		3917962	0					
ANR	3918338	IfStatement	if ( s_pid == FALSE )		3917962	29					
ANR	3918339	Condition	s_pid == FALSE	931:5:21733:21746	3917962	0	True				
ANR	3918340	EqualityExpression	s_pid == FALSE		3917962	0		==			
ANR	3918341	Identifier	s_pid		3917962	0					
ANR	3918342	Identifier	FALSE		3917962	1					
ANR	3918343	CompoundStatement		102:22:2904:2904	3917962	1					
ANR	3918344	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: exec_starter failed!\\n"" )"	932:2:21754:21805	3917962	0	True				
ANR	3918345	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: exec_starter failed!\\n"" )"		3917962	0					
ANR	3918346	Callee	dprintf		3917962	0					
ANR	3918347	Identifier	dprintf		3917962	0					
ANR	3918348	ArgumentList	D_ALWAYS		3917962	1					
ANR	3918349	Argument	D_ALWAYS		3917962	0					
ANR	3918350	Identifier	D_ALWAYS		3917962	0					
ANR	3918351	Argument	"""ERROR: exec_starter failed!\\n"""		3917962	1					
ANR	3918352	PrimaryExpression	"""ERROR: exec_starter failed!\\n"""		3917962	0					
ANR	3918353	ExpressionStatement	s_pid = 0	933:2:21809:21818	3917962	1	True				
ANR	3918354	AssignmentExpression	s_pid = 0		3917962	0		=			
ANR	3918355	Identifier	s_pid		3917962	0					
ANR	3918356	PrimaryExpression	0		3917962	1					
ANR	3918357	IfStatement	"if ( param_boolean ( ""GLEXEC_STARTER"" , false ) )"		3917962	30					
ANR	3918358	Condition	"param_boolean ( ""GLEXEC_STARTER"" , false )"	937:5:21848:21887	3917962	0	True				
ANR	3918359	CallExpression	"param_boolean ( ""GLEXEC_STARTER"" , false )"		3917962	0					
ANR	3918360	Callee	param_boolean		3917962	0					
ANR	3918361	Identifier	param_boolean		3917962	0					
ANR	3918362	ArgumentList	"""GLEXEC_STARTER"""		3917962	1					
ANR	3918363	Argument	"""GLEXEC_STARTER"""		3917962	0					
ANR	3918364	PrimaryExpression	"""GLEXEC_STARTER"""		3917962	0					
ANR	3918365	Argument	false		3917962	1					
ANR	3918366	Identifier	false		3917962	0					
ANR	3918367	CompoundStatement		108:48:3045:3045	3917962	1					
ANR	3918368	IfStatement	if ( ! glexec_starter_handle_env ( s_pid ) )		3917962	0					
ANR	3918369	Condition	! glexec_starter_handle_env ( s_pid )	943:7:22127:22159	3917962	0	True				
ANR	3918370	UnaryOperationExpression	! glexec_starter_handle_env ( s_pid )		3917962	0					
ANR	3918371	UnaryOperator	!		3917962	0					
ANR	3918372	CallExpression	glexec_starter_handle_env ( s_pid )		3917962	1					
ANR	3918373	Callee	glexec_starter_handle_env		3917962	0					
ANR	3918374	Identifier	glexec_starter_handle_env		3917962	0					
ANR	3918375	ArgumentList	s_pid		3917962	1					
ANR	3918376	Argument	s_pid		3917962	0					
ANR	3918377	Identifier	s_pid		3917962	0					
ANR	3918378	CompoundStatement		114:43:3317:3317	3917962	1					
ANR	3918379	ExpressionStatement	cleanupAfterGlexec ( )	946:3:22254:22274	3917962	0	True				
ANR	3918380	CallExpression	cleanupAfterGlexec ( )		3917962	0					
ANR	3918381	Callee	cleanupAfterGlexec		3917962	0					
ANR	3918382	Identifier	cleanupAfterGlexec		3917962	0					
ANR	3918383	ArgumentList			3917962	1					
ANR	3918384	ReturnStatement	return 0 ;	947:3:22279:22287	3917962	1	True				
ANR	3918385	PrimaryExpression	0		3917962	0					
ANR	3918386	ReturnStatement	return s_pid ;	952:1:22305:22317	3917962	31	True				
ANR	3918387	Identifier	s_pid		3917962	0					
ANR	3918388	ReturnType	int		3917962	1					
ANR	3918389	Identifier	Starter :: execDCStarter		3917962	2					
ANR	3918390	ParameterList	"ArgList const & args , Env const * env , int * std_fds , Stream * s"		3917962	3					
ANR	3918391	Parameter	ArgList const & args	828:24:18775:18793	3917962	0	True				
ANR	3918392	ParameterType	ArgList const &		3917962	0					
ANR	3918393	Identifier	args		3917962	1					
ANR	3918394	Parameter	Env const * env	828:45:18796:18809	3917962	1	True				
ANR	3918395	ParameterType	Env const *		3917962	0					
ANR	3918396	Identifier	env		3917962	1					
ANR	3918397	Parameter	int * std_fds	829:6:18819:18830	3917962	2	True				
ANR	3918398	ParameterType	int *		3917962	0					
ANR	3918399	Identifier	std_fds		3917962	1					
ANR	3918400	Parameter	Stream * s	829:20:18833:18841	3917962	3	True				
ANR	3918401	ParameterType	Stream *		3917962	0					
ANR	3918402	Identifier	s		3917962	1					
ANR	3918403	CFGEntryNode	ENTRY		3917962		True				
ANR	3918404	CFGExitNode	EXIT		3917962		True				
ANR	3918405	Symbol	final_args		3917962						
ANR	3918406	Symbol	daemonCore -> Create_Process		3917962						
ANR	3918407	Symbol	glexec_env		3917962						
ANR	3918408	Symbol	glexec_args . GetArg		3917962						
ANR	3918409	Symbol	& child_job_update_sock		3917962						
ANR	3918410	Symbol	s_job_update_sock -> connect_socketpair		3917962						
ANR	3918411	Symbol	& new_env		3917962						
ANR	3918412	Symbol	NULL		3917962						
ANR	3918413	Symbol	* env		3917962						
ANR	3918414	Symbol	this		3917962						
ANR	3918415	Symbol	args_string . Value		3917962						
ANR	3918416	Symbol	main_reaper		3917962						
ANR	3918417	Symbol	TRUE		3917962						
ANR	3918418	Symbol	param_boolean		3917962						
ANR	3918419	Symbol	D_FULLDEBUG		3917962						
ANR	3918420	Symbol	DebugFlags		3917962						
ANR	3918421	Symbol	pid_snapshot_interval		3917962						
ANR	3918422	Symbol	* daemonCore		3917962						
ANR	3918423	Symbol	PRIV_ROOT		3917962						
ANR	3918424	Symbol	glexec_args		3917962						
ANR	3918425	Symbol	s_claim -> client		3917962						
ANR	3918426	Symbol	s_claim -> client ( ) -> proxyFile		3917962						
ANR	3918427	Symbol	* s_job_update_sock		3917962						
ANR	3918428	Symbol	s_pid		3917962						
ANR	3918429	Symbol	& args_string		3917962						
ANR	3918430	Symbol	final_path		3917962						
ANR	3918431	Symbol	fi		3917962						
ANR	3918432	Symbol	* * s_claim		3917962						
ANR	3918433	Symbol	& glexec_env		3917962						
ANR	3918434	Symbol	fi . max_snapshot_interval		3917962						
ANR	3918435	Symbol	glexec_std_fds		3917962						
ANR	3918436	Symbol	glexec_starter_handle_env		3917962						
ANR	3918437	Symbol	new_env		3917962						
ANR	3918438	Symbol	s_reaper_id		3917962						
ANR	3918439	Symbol	std_fds		3917962						
ANR	3918440	Symbol	daemonCore -> Register_Socket		3917962						
ANR	3918441	Symbol	* inherit_list		3917962						
ANR	3918442	Symbol	daemonCore		3917962						
ANR	3918443	Symbol	s_path		3917962						
ANR	3918444	Symbol	s_claim		3917962						
ANR	3918445	Symbol	& args		3917962						
ANR	3918446	Symbol	args_string		3917962						
ANR	3918447	Symbol	reaper_id		3917962						
ANR	3918448	Symbol	glexec_starter_prepare		3917962						
ANR	3918449	Symbol	D_ALWAYS		3917962						
ANR	3918450	Symbol	false		3917962						
ANR	3918451	Symbol	inherit_list		3917962						
ANR	3918452	Symbol	env		3917962						
ANR	3918453	Symbol	& fi		3917962						
ANR	3918454	Symbol	& glexec_args		3917962						
ANR	3918455	Symbol	child_job_update_sock		3917962						
ANR	3918456	Symbol	args		3917962						
ANR	3918457	Symbol	& Starter :: receiveJobClassAdUpdate		3917962						
ANR	3918458	Symbol	* s_claim -> client		3917962						
ANR	3918459	Symbol	s		3917962						
ANR	3918460	Symbol	* s_claim		3917962						
ANR	3918461	Symbol	s_job_update_sock		3917962						
ANR	3918462	Symbol	FALSE		3917962						
ANR	3918463	Symbol	executeDir		3917962						
ANR	3918464	Symbol	* final_args		3917962						
ANR	3918465	Function	Starter :: execOldStarter	956:0:22323:25815							
ANR	3918466	FunctionDef	Starter :: execOldStarter ()		3918465	0					
ANR	3918467	CompoundStatement		958:0:22359:25815	3918465	0					
ANR	3918468	ReturnStatement	return 0 ;	960:1:22409:22417	3918465	0	True				
ANR	3918469	PrimaryExpression	0		3918465	0					
ANR	3918470	ReturnType	int		3918465	1					
ANR	3918471	Identifier	Starter :: execOldStarter		3918465	2					
ANR	3918472	ParameterList			3918465	3					
ANR	3918473	CFGEntryNode	ENTRY		3918465		True				
ANR	3918474	CFGExitNode	EXIT		3918465		True				
ANR	3918475	Function	Starter :: cleanupAfterGlexec	1072:0:25837:26326							
ANR	3918476	FunctionDef	Starter :: cleanupAfterGlexec ()		3918475	0					
ANR	3918477	CompoundStatement		1074:0:25872:26326	3918475	0					
ANR	3918478	IfStatement	if ( s_claim && s_claim -> client ( ) -> proxyFile ( ) != NULL )		3918475	0					
ANR	3918479	Condition	s_claim && s_claim -> client ( ) -> proxyFile ( ) != NULL	1077:5:25991:26039	3918475	0	True				
ANR	3918480	AndExpression	s_claim && s_claim -> client ( ) -> proxyFile ( ) != NULL		3918475	0		&&			
ANR	3918481	Identifier	s_claim		3918475	0					
ANR	3918482	EqualityExpression	s_claim -> client ( ) -> proxyFile ( ) != NULL		3918475	1		!=			
ANR	3918483	CallExpression	s_claim -> client ( ) -> proxyFile ( )		3918475	0					
ANR	3918484	Callee	s_claim -> client ( ) -> proxyFile		3918475	0					
ANR	3918485	PtrMemberAccess	s_claim -> client ( ) -> proxyFile		3918475	0					
ANR	3918486	CallExpression	s_claim -> client ( )		3918475	0					
ANR	3918487	Callee	s_claim -> client		3918475	0					
ANR	3918488	PtrMemberAccess	s_claim -> client		3918475	0					
ANR	3918489	Identifier	s_claim		3918475	0					
ANR	3918490	Identifier	client		3918475	1					
ANR	3918491	ArgumentList			3918475	1					
ANR	3918492	Identifier	proxyFile		3918475	1					
ANR	3918493	ArgumentList			3918475	1					
ANR	3918494	Identifier	NULL		3918475	1					
ANR	3918495	CompoundStatement		4:57:170:170	3918475	1					
ANR	3918496	IfStatement	if ( unlink ( s_claim -> client ( ) -> proxyFile ( ) ) == - 1 )		3918475	0					
ANR	3918497	Condition	unlink ( s_claim -> client ( ) -> proxyFile ( ) ) == - 1	1078:7:26052:26097	3918475	0	True				
ANR	3918498	EqualityExpression	unlink ( s_claim -> client ( ) -> proxyFile ( ) ) == - 1		3918475	0		==			
ANR	3918499	CallExpression	unlink ( s_claim -> client ( ) -> proxyFile ( ) )		3918475	0					
ANR	3918500	Callee	unlink		3918475	0					
ANR	3918501	Identifier	unlink		3918475	0					
ANR	3918502	ArgumentList	s_claim -> client ( ) -> proxyFile ( )		3918475	1					
ANR	3918503	Argument	s_claim -> client ( ) -> proxyFile ( )		3918475	0					
ANR	3918504	CallExpression	s_claim -> client ( ) -> proxyFile ( )		3918475	0					
ANR	3918505	Callee	s_claim -> client ( ) -> proxyFile		3918475	0					
ANR	3918506	PtrMemberAccess	s_claim -> client ( ) -> proxyFile		3918475	0					
ANR	3918507	CallExpression	s_claim -> client ( )		3918475	0					
ANR	3918508	Callee	s_claim -> client		3918475	0					
ANR	3918509	PtrMemberAccess	s_claim -> client		3918475	0					
ANR	3918510	Identifier	s_claim		3918475	0					
ANR	3918511	Identifier	client		3918475	1					
ANR	3918512	ArgumentList			3918475	1					
ANR	3918513	Identifier	proxyFile		3918475	1					
ANR	3918514	ArgumentList			3918475	1					
ANR	3918515	UnaryOperationExpression	- 1		3918475	1					
ANR	3918516	UnaryOperator	-		3918475	0					
ANR	3918517	PrimaryExpression	1		3918475	1					
ANR	3918518	CompoundStatement		5:55:227:227	3918475	1					
ANR	3918519	ExpressionStatement	"dprintf ( D_ALWAYS , ""error removing temporary proxy %s: %s (%d)\\n"" , s_claim -> client ( ) -> proxyFile ( ) , strerror ( errno ) , errno )"	1079:3:26105:26276	3918475	0	True				
ANR	3918520	CallExpression	"dprintf ( D_ALWAYS , ""error removing temporary proxy %s: %s (%d)\\n"" , s_claim -> client ( ) -> proxyFile ( ) , strerror ( errno ) , errno )"		3918475	0					
ANR	3918521	Callee	dprintf		3918475	0					
ANR	3918522	Identifier	dprintf		3918475	0					
ANR	3918523	ArgumentList	D_ALWAYS		3918475	1					
ANR	3918524	Argument	D_ALWAYS		3918475	0					
ANR	3918525	Identifier	D_ALWAYS		3918475	0					
ANR	3918526	Argument	"""error removing temporary proxy %s: %s (%d)\\n"""		3918475	1					
ANR	3918527	PrimaryExpression	"""error removing temporary proxy %s: %s (%d)\\n"""		3918475	0					
ANR	3918528	Argument	s_claim -> client ( ) -> proxyFile ( )		3918475	2					
ANR	3918529	CallExpression	s_claim -> client ( ) -> proxyFile ( )		3918475	0					
ANR	3918530	Callee	s_claim -> client ( ) -> proxyFile		3918475	0					
ANR	3918531	PtrMemberAccess	s_claim -> client ( ) -> proxyFile		3918475	0					
ANR	3918532	CallExpression	s_claim -> client ( )		3918475	0					
ANR	3918533	Callee	s_claim -> client		3918475	0					
ANR	3918534	PtrMemberAccess	s_claim -> client		3918475	0					
ANR	3918535	Identifier	s_claim		3918475	0					
ANR	3918536	Identifier	client		3918475	1					
ANR	3918537	ArgumentList			3918475	1					
ANR	3918538	Identifier	proxyFile		3918475	1					
ANR	3918539	ArgumentList			3918475	1					
ANR	3918540	Argument	strerror ( errno )		3918475	3					
ANR	3918541	CallExpression	strerror ( errno )		3918475	0					
ANR	3918542	Callee	strerror		3918475	0					
ANR	3918543	Identifier	strerror		3918475	0					
ANR	3918544	ArgumentList	errno		3918475	1					
ANR	3918545	Argument	errno		3918475	0					
ANR	3918546	Identifier	errno		3918475	0					
ANR	3918547	Argument	errno		3918475	4					
ANR	3918548	Identifier	errno		3918475	0					
ANR	3918549	ExpressionStatement	s_claim -> client ( ) -> setProxyFile ( NULL )	1085:2:26284:26321	3918475	1	True				
ANR	3918550	CallExpression	s_claim -> client ( ) -> setProxyFile ( NULL )		3918475	0					
ANR	3918551	Callee	s_claim -> client ( ) -> setProxyFile		3918475	0					
ANR	3918552	PtrMemberAccess	s_claim -> client ( ) -> setProxyFile		3918475	0					
ANR	3918553	CallExpression	s_claim -> client ( )		3918475	0					
ANR	3918554	Callee	s_claim -> client		3918475	0					
ANR	3918555	PtrMemberAccess	s_claim -> client		3918475	0					
ANR	3918556	Identifier	s_claim		3918475	0					
ANR	3918557	Identifier	client		3918475	1					
ANR	3918558	ArgumentList			3918475	1					
ANR	3918559	Identifier	setProxyFile		3918475	1					
ANR	3918560	ArgumentList	NULL		3918475	1					
ANR	3918561	Argument	NULL		3918475	0					
ANR	3918562	Identifier	NULL		3918475	0					
ANR	3918563	ReturnType	void		3918475	1					
ANR	3918564	Identifier	Starter :: cleanupAfterGlexec		3918475	2					
ANR	3918565	ParameterList			3918475	3					
ANR	3918566	CFGEntryNode	ENTRY		3918475		True				
ANR	3918567	CFGExitNode	EXIT		3918475		True				
ANR	3918568	Symbol	strerror		3918475						
ANR	3918569	Symbol	* s_claim -> client		3918475						
ANR	3918570	Symbol	errno		3918475						
ANR	3918571	Symbol	NULL		3918475						
ANR	3918572	Symbol	* s_claim		3918475						
ANR	3918573	Symbol	unlink		3918475						
ANR	3918574	Symbol	* * s_claim		3918475						
ANR	3918575	Symbol	D_ALWAYS		3918475						
ANR	3918576	Symbol	s_claim -> client		3918475						
ANR	3918577	Symbol	s_claim -> client ( ) -> proxyFile		3918475						
ANR	3918578	Symbol	s_claim		3918475						
ANR	3918579	Function	Starter :: claimType	1090:0:26336:26437							
ANR	3918580	FunctionDef	Starter :: claimType ()		3918579	0					
ANR	3918581	CompoundStatement		1092:0:26367:26437	3918579	0					
ANR	3918582	IfStatement	if ( ! s_claim )		3918579	0					
ANR	3918583	Condition	! s_claim	1093:5:26374:26382	3918579	0	True				
ANR	3918584	UnaryOperationExpression	! s_claim		3918579	0					
ANR	3918585	UnaryOperator	!		3918579	0					
ANR	3918586	Identifier	s_claim		3918579	1					
ANR	3918587	CompoundStatement		2:17:18:18	3918579	1					
ANR	3918588	ReturnStatement	return CLAIM_NONE ;	1094:2:26390:26407	3918579	0	True				
ANR	3918589	Identifier	CLAIM_NONE		3918579	0					
ANR	3918590	ReturnStatement	return s_claim -> type ( ) ;	1096:1:26413:26435	3918579	1	True				
ANR	3918591	CallExpression	s_claim -> type ( )		3918579	0					
ANR	3918592	Callee	s_claim -> type		3918579	0					
ANR	3918593	PtrMemberAccess	s_claim -> type		3918579	0					
ANR	3918594	Identifier	s_claim		3918579	0					
ANR	3918595	Identifier	type		3918579	1					
ANR	3918596	ArgumentList			3918579	1					
ANR	3918597	ReturnType	ClaimType		3918579	1					
ANR	3918598	Identifier	Starter :: claimType		3918579	2					
ANR	3918599	ParameterList			3918579	3					
ANR	3918600	CFGEntryNode	ENTRY		3918579		True				
ANR	3918601	CFGExitNode	EXIT		3918579		True				
ANR	3918602	Symbol	s_claim -> type		3918579						
ANR	3918603	Symbol	* s_claim		3918579						
ANR	3918604	Symbol	CLAIM_NONE		3918579						
ANR	3918605	Symbol	s_claim		3918579						
ANR	3918606	Function	Starter :: active	1100:0:26441:26491							
ANR	3918607	FunctionDef	Starter :: active ()		3918606	0					
ANR	3918608	CompoundStatement		1102:0:26464:26491	3918606	0					
ANR	3918609	ReturnStatement	return ( ( s_pid != 0 ) ) ;	1103:1:26467:26489	3918606	0	True				
ANR	3918610	EqualityExpression	s_pid != 0		3918606	0		!=			
ANR	3918611	Identifier	s_pid		3918606	0					
ANR	3918612	PrimaryExpression	0		3918606	1					
ANR	3918613	ReturnType	bool		3918606	1					
ANR	3918614	Identifier	Starter :: active		3918606	2					
ANR	3918615	ParameterList			3918606	3					
ANR	3918616	CFGEntryNode	ENTRY		3918606		True				
ANR	3918617	CFGExitNode	EXIT		3918606		True				
ANR	3918618	Symbol	s_pid		3918606						
ANR	3918619	Function	Starter :: dprintf	1107:0:26496:26753							
ANR	3918620	FunctionDef	"Starter :: dprintf (int flags , const char * fmt)"		3918619	0					
ANR	3918621	CompoundStatement		1109:0:26553:26753	3918619	0					
ANR	3918622	IdentifierDeclStatement	va_list args ;	1110:1:26556:26568	3918619	0	True				
ANR	3918623	IdentifierDecl	args		3918619	0					
ANR	3918624	IdentifierDeclType	va_list		3918619	0					
ANR	3918625	Identifier	args		3918619	1					
ANR	3918626	ExpressionStatement	"va_start ( args , fmt )"	1111:1:26571:26592	3918619	1	True				
ANR	3918627	CallExpression	"va_start ( args , fmt )"		3918619	0					
ANR	3918628	Callee	va_start		3918619	0					
ANR	3918629	Identifier	va_start		3918619	0					
ANR	3918630	ArgumentList	args		3918619	1					
ANR	3918631	Argument	args		3918619	0					
ANR	3918632	Identifier	args		3918619	0					
ANR	3918633	Argument	fmt		3918619	1					
ANR	3918634	Identifier	fmt		3918619	0					
ANR	3918635	IfStatement	if ( s_claim && s_claim -> rip ( ) )		3918619	2					
ANR	3918636	Condition	s_claim && s_claim -> rip ( )	1112:5:26599:26623	3918619	0	True				
ANR	3918637	AndExpression	s_claim && s_claim -> rip ( )		3918619	0		&&			
ANR	3918638	Identifier	s_claim		3918619	0					
ANR	3918639	CallExpression	s_claim -> rip ( )		3918619	1					
ANR	3918640	Callee	s_claim -> rip		3918619	0					
ANR	3918641	PtrMemberAccess	s_claim -> rip		3918619	0					
ANR	3918642	Identifier	s_claim		3918619	0					
ANR	3918643	Identifier	rip		3918619	1					
ANR	3918644	ArgumentList			3918619	1					
ANR	3918645	CompoundStatement		4:33:73:73	3918619	1					
ANR	3918646	ExpressionStatement	"s_claim -> rip ( ) -> dprintf_va ( flags , fmt , args )"	1113:2:26631:26677	3918619	0	True				
ANR	3918647	CallExpression	"s_claim -> rip ( ) -> dprintf_va ( flags , fmt , args )"		3918619	0					
ANR	3918648	Callee	s_claim -> rip ( ) -> dprintf_va		3918619	0					
ANR	3918649	PtrMemberAccess	s_claim -> rip ( ) -> dprintf_va		3918619	0					
ANR	3918650	CallExpression	s_claim -> rip ( )		3918619	0					
ANR	3918651	Callee	s_claim -> rip		3918619	0					
ANR	3918652	PtrMemberAccess	s_claim -> rip		3918619	0					
ANR	3918653	Identifier	s_claim		3918619	0					
ANR	3918654	Identifier	rip		3918619	1					
ANR	3918655	ArgumentList			3918619	1					
ANR	3918656	Identifier	dprintf_va		3918619	1					
ANR	3918657	ArgumentList	flags		3918619	1					
ANR	3918658	Argument	flags		3918619	0					
ANR	3918659	Identifier	flags		3918619	0					
ANR	3918660	Argument	fmt		3918619	1					
ANR	3918661	Identifier	fmt		3918619	0					
ANR	3918662	Argument	args		3918619	2					
ANR	3918663	Identifier	args		3918619	0					
ANR	3918664	ElseStatement	else		3918619	0					
ANR	3918665	CompoundStatement		6:8:133:133	3918619	0					
ANR	3918666	Statement	::	1115:2:26691:26692	3918619	0	True				
ANR	3918667	ExpressionStatement	"_condor_dprintf_va ( flags , fmt , args )"	1115:4:26693:26731	3918619	1	True				
ANR	3918668	CallExpression	"_condor_dprintf_va ( flags , fmt , args )"		3918619	0					
ANR	3918669	Callee	_condor_dprintf_va		3918619	0					
ANR	3918670	Identifier	_condor_dprintf_va		3918619	0					
ANR	3918671	ArgumentList	flags		3918619	1					
ANR	3918672	Argument	flags		3918619	0					
ANR	3918673	Identifier	flags		3918619	0					
ANR	3918674	Argument	fmt		3918619	1					
ANR	3918675	Identifier	fmt		3918619	0					
ANR	3918676	Argument	args		3918619	2					
ANR	3918677	Identifier	args		3918619	0					
ANR	3918678	ExpressionStatement	va_end ( args )	1117:1:26737:26751	3918619	3	True				
ANR	3918679	CallExpression	va_end ( args )		3918619	0					
ANR	3918680	Callee	va_end		3918619	0					
ANR	3918681	Identifier	va_end		3918619	0					
ANR	3918682	ArgumentList	args		3918619	1					
ANR	3918683	Argument	args		3918619	0					
ANR	3918684	Identifier	args		3918619	0					
ANR	3918685	ReturnType	void		3918619	1					
ANR	3918686	Identifier	Starter :: dprintf		3918619	2					
ANR	3918687	ParameterList	"int flags , const char * fmt"		3918619	3					
ANR	3918688	Parameter	int flags	1108:18:26519:26527	3918619	0	True				
ANR	3918689	ParameterType	int		3918619	0					
ANR	3918690	Identifier	flags		3918619	1					
ANR	3918691	Parameter	const char * fmt	1108:29:26530:26544	3918619	1	True				
ANR	3918692	ParameterType	const char *		3918619	0					
ANR	3918693	Identifier	fmt		3918619	1					
ANR	3918694	CFGEntryNode	ENTRY		3918619		True				
ANR	3918695	CFGExitNode	EXIT		3918619		True				
ANR	3918696	Symbol	args		3918619						
ANR	3918697	Symbol	* s_claim		3918619						
ANR	3918698	Symbol	flags		3918619						
ANR	3918699	Symbol	s_claim -> rip		3918619						
ANR	3918700	Symbol	fmt		3918619						
ANR	3918701	Symbol	s_claim		3918619						
ANR	3918702	Function	Starter :: percentCpuUsage	1121:0:26757:27777							
ANR	3918703	FunctionDef	Starter :: percentCpuUsage ()		3918702	0					
ANR	3918704	CompoundStatement		1123:0:26796:27777	3918702	0					
ANR	3918705	IfStatement	"if ( daemonCore -> Get_Family_Usage ( s_pid , s_usage , true ) == FALSE )"		3918702	0					
ANR	3918706	Condition	"daemonCore -> Get_Family_Usage ( s_pid , s_usage , true ) == FALSE"	1124:5:26803:26861	3918702	0	True				
ANR	3918707	EqualityExpression	"daemonCore -> Get_Family_Usage ( s_pid , s_usage , true ) == FALSE"		3918702	0		==			
ANR	3918708	CallExpression	"daemonCore -> Get_Family_Usage ( s_pid , s_usage , true )"		3918702	0					
ANR	3918709	Callee	daemonCore -> Get_Family_Usage		3918702	0					
ANR	3918710	PtrMemberAccess	daemonCore -> Get_Family_Usage		3918702	0					
ANR	3918711	Identifier	daemonCore		3918702	0					
ANR	3918712	Identifier	Get_Family_Usage		3918702	1					
ANR	3918713	ArgumentList	s_pid		3918702	1					
ANR	3918714	Argument	s_pid		3918702	0					
ANR	3918715	Identifier	s_pid		3918702	0					
ANR	3918716	Argument	s_usage		3918702	1					
ANR	3918717	Identifier	s_usage		3918702	0					
ANR	3918718	Argument	true		3918702	2					
ANR	3918719	Identifier	true		3918702	0					
ANR	3918720	Identifier	FALSE		3918702	1					
ANR	3918721	CompoundStatement		2:66:67:67	3918702	1					
ANR	3918722	Statement	EXCEPT	1125:2:26868:26873	3918702	0	True				
ANR	3918723	Statement	(	1125:8:26874:26874	3918702	1	True				
ANR	3918724	Statement	"""Starter::percentCpuUsage(): Fatal error getting process """	1125:10:26876:26933	3918702	2	True				
ANR	3918725	Statement	"""info for the starter and decendents"""	1126:10:26945:26981	3918702	3	True				
ANR	3918726	Statement	)	1126:48:26983:26983	3918702	4	True				
ANR	3918727	ExpressionStatement		1126:49:26984:26984	3918702	5	True				
ANR	3918728	IfStatement	if ( resmgr )		3918702	1					
ANR	3918729	Condition	resmgr	1136:6:27417:27422	3918702	0	True				
ANR	3918730	Identifier	resmgr		3918702	0					
ANR	3918731	CompoundStatement		14:15:629:629	3918702	1					
ANR	3918732	ExpressionStatement	"resmgr -> m_vmuniverse_mgr . getUsageForVM ( s_pid , s_usage )"	1137:2:27430:27484	3918702	0	True				
ANR	3918733	CallExpression	"resmgr -> m_vmuniverse_mgr . getUsageForVM ( s_pid , s_usage )"		3918702	0					
ANR	3918734	Callee	resmgr -> m_vmuniverse_mgr . getUsageForVM		3918702	0					
ANR	3918735	MemberAccess	resmgr -> m_vmuniverse_mgr . getUsageForVM		3918702	0					
ANR	3918736	PtrMemberAccess	resmgr -> m_vmuniverse_mgr		3918702	0					
ANR	3918737	Identifier	resmgr		3918702	0					
ANR	3918738	Identifier	m_vmuniverse_mgr		3918702	1					
ANR	3918739	Identifier	getUsageForVM		3918702	1					
ANR	3918740	ArgumentList	s_pid		3918702	1					
ANR	3918741	Argument	s_pid		3918702	0					
ANR	3918742	Identifier	s_pid		3918702	0					
ANR	3918743	Argument	s_usage		3918702	1					
ANR	3918744	Identifier	s_usage		3918702	0					
ANR	3918745	IfStatement	if ( ( DebugFlags & D_FULLDEBUG ) && ( DebugFlags & D_LOAD ) )		3918702	2					
ANR	3918746	Condition	( DebugFlags & D_FULLDEBUG ) && ( DebugFlags & D_LOAD )	1140:5:27495:27545	3918702	0	True				
ANR	3918747	AndExpression	( DebugFlags & D_FULLDEBUG ) && ( DebugFlags & D_LOAD )		3918702	0		&&			
ANR	3918748	BitAndExpression	DebugFlags & D_FULLDEBUG		3918702	0		&			
ANR	3918749	Identifier	DebugFlags		3918702	0					
ANR	3918750	Identifier	D_FULLDEBUG		3918702	1					
ANR	3918751	BitAndExpression	DebugFlags & D_LOAD		3918702	1		&			
ANR	3918752	Identifier	DebugFlags		3918702	0					
ANR	3918753	Identifier	D_LOAD		3918702	1					
ANR	3918754	CompoundStatement		18:59:752:752	3918702	1					
ANR	3918755	Statement	dprintf	1141:2:27553:27559	3918702	0	True				
ANR	3918756	Statement	(	1141:9:27560:27560	3918702	1	True				
ANR	3918757	Statement	D_FULLDEBUG	1141:11:27562:27572	3918702	2	True				
ANR	3918758	Statement	","	1141:22:27573:27573	3918702	3	True				
ANR	3918759	Statement	"""Starter::percentCpuUsage(): Percent CPU usage """	1142:10:27585:27632	3918702	4	True				
ANR	3918760	Statement	"""for the family of starter with pid %u is: %f\\n"""	1143:10:27644:27691	3918702	5	True				
ANR	3918761	Statement	","	1143:58:27692:27692	3918702	6	True				
ANR	3918762	Statement	s_pid	1144:10:27704:27708	3918702	7	True				
ANR	3918763	Statement	","	1144:15:27709:27709	3918702	8	True				
ANR	3918764	Statement	s_usage	1145:10:27721:27727	3918702	9	True				
ANR	3918765	Statement	.	1145:17:27728:27728	3918702	10	True				
ANR	3918766	Statement	percent_cpu	1145:18:27729:27739	3918702	11	True				
ANR	3918767	Statement	)	1145:30:27741:27741	3918702	12	True				
ANR	3918768	ExpressionStatement		1145:31:27742:27742	3918702	13	True				
ANR	3918769	ReturnStatement	return s_usage . percent_cpu ;	1148:1:27749:27775	3918702	3	True				
ANR	3918770	MemberAccess	s_usage . percent_cpu		3918702	0					
ANR	3918771	Identifier	s_usage		3918702	0					
ANR	3918772	Identifier	percent_cpu		3918702	1					
ANR	3918773	ReturnType	float		3918702	1					
ANR	3918774	Identifier	Starter :: percentCpuUsage		3918702	2					
ANR	3918775	ParameterList			3918702	3					
ANR	3918776	CFGEntryNode	ENTRY		3918702		True				
ANR	3918777	CFGExitNode	EXIT		3918702		True				
ANR	3918778	Symbol	s_usage . percent_cpu		3918702						
ANR	3918779	Symbol	daemonCore -> Get_Family_Usage		3918702						
ANR	3918780	Symbol	* resmgr		3918702						
ANR	3918781	Symbol	D_LOAD		3918702						
ANR	3918782	Symbol	D_FULLDEBUG		3918702						
ANR	3918783	Symbol	DebugFlags		3918702						
ANR	3918784	Symbol	resmgr		3918702						
ANR	3918785	Symbol	* daemonCore		3918702						
ANR	3918786	Symbol	daemonCore		3918702						
ANR	3918787	Symbol	true		3918702						
ANR	3918788	Symbol	s_usage		3918702						
ANR	3918789	Symbol	FALSE		3918702						
ANR	3918790	Symbol	resmgr -> m_vmuniverse_mgr		3918702						
ANR	3918791	Symbol	s_pid		3918702						
ANR	3918792	Function	Starter :: imageSize	1151:0:27780:27997							
ANR	3918793	FunctionDef	Starter :: imageSize ()		3918792	0					
ANR	3918794	CompoundStatement		1153:0:27821:27997	3918792	0					
ANR	3918795	ReturnStatement	return s_usage . total_image_size ;	1157:1:27964:27995	3918792	0	True				
ANR	3918796	MemberAccess	s_usage . total_image_size		3918792	0					
ANR	3918797	Identifier	s_usage		3918792	0					
ANR	3918798	Identifier	total_image_size		3918792	1					
ANR	3918799	ReturnType	unsigned long		3918792	1					
ANR	3918800	Identifier	Starter :: imageSize		3918792	2					
ANR	3918801	ParameterList			3918792	3					
ANR	3918802	CFGEntryNode	ENTRY		3918792		True				
ANR	3918803	CFGExitNode	EXIT		3918792		True				
ANR	3918804	Symbol	s_usage . total_image_size		3918792						
ANR	3918805	Symbol	s_usage		3918792						
ANR	3918806	Function	Starter :: printInfo	1161:0:28001:28399							
ANR	3918807	FunctionDef	Starter :: printInfo (int debug_level)		3918806	0					
ANR	3918808	CompoundStatement		1163:0:28044:28399	3918806	0					
ANR	3918809	ExpressionStatement	"dprintf ( debug_level , ""Info for \\""%s\\"":\\n"" , s_path )"	1164:1:28047:28099	3918806	0	True				
ANR	3918810	CallExpression	"dprintf ( debug_level , ""Info for \\""%s\\"":\\n"" , s_path )"		3918806	0					
ANR	3918811	Callee	dprintf		3918806	0					
ANR	3918812	Identifier	dprintf		3918806	0					
ANR	3918813	ArgumentList	debug_level		3918806	1					
ANR	3918814	Argument	debug_level		3918806	0					
ANR	3918815	Identifier	debug_level		3918806	0					
ANR	3918816	Argument	"""Info for \\""%s\\"":\\n"""		3918806	1					
ANR	3918817	PrimaryExpression	"""Info for \\""%s\\"":\\n"""		3918806	0					
ANR	3918818	Argument	s_path		3918806	2					
ANR	3918819	Identifier	s_path		3918806	0					
ANR	3918820	ExpressionStatement	"dprintf ( debug_level | D_NOHEADER , ""IsDaemonCore: %s\\n"" , s_is_dc ? ""True"" : ""False"" )"	1165:1:28102:28192	3918806	1	True				
ANR	3918821	CallExpression	"dprintf ( debug_level | D_NOHEADER , ""IsDaemonCore: %s\\n"" , s_is_dc ? ""True"" : ""False"" )"		3918806	0					
ANR	3918822	Callee	dprintf		3918806	0					
ANR	3918823	Identifier	dprintf		3918806	0					
ANR	3918824	ArgumentList	debug_level | D_NOHEADER		3918806	1					
ANR	3918825	Argument	debug_level | D_NOHEADER		3918806	0					
ANR	3918826	InclusiveOrExpression	debug_level | D_NOHEADER		3918806	0		|			
ANR	3918827	Identifier	debug_level		3918806	0					
ANR	3918828	Identifier	D_NOHEADER		3918806	1					
ANR	3918829	Argument	"""IsDaemonCore: %s\\n"""		3918806	1					
ANR	3918830	PrimaryExpression	"""IsDaemonCore: %s\\n"""		3918806	0					
ANR	3918831	Argument	"s_is_dc ? ""True"" : ""False"""		3918806	2					
ANR	3918832	ConditionalExpression	"s_is_dc ? ""True"" : ""False"""		3918806	0					
ANR	3918833	Condition	s_is_dc		3918806	0					
ANR	3918834	Identifier	s_is_dc		3918806	0					
ANR	3918835	PrimaryExpression	"""True"""		3918806	1					
ANR	3918836	PrimaryExpression	"""False"""		3918806	2					
ANR	3918837	IfStatement	if ( ! s_ad )		3918806	2					
ANR	3918838	Condition	! s_ad	1167:5:28199:28204	3918806	0	True				
ANR	3918839	UnaryOperationExpression	! s_ad		3918806	0					
ANR	3918840	UnaryOperator	!		3918806	0					
ANR	3918841	Identifier	s_ad		3918806	1					
ANR	3918842	CompoundStatement		5:14:163:163	3918806	1					
ANR	3918843	ExpressionStatement	"dprintf ( debug_level | D_NOHEADER , ""No ClassAd available!\\n"" )"	1168:2:28212:28280	3918806	0	True				
ANR	3918844	CallExpression	"dprintf ( debug_level | D_NOHEADER , ""No ClassAd available!\\n"" )"		3918806	0					
ANR	3918845	Callee	dprintf		3918806	0					
ANR	3918846	Identifier	dprintf		3918806	0					
ANR	3918847	ArgumentList	debug_level | D_NOHEADER		3918806	1					
ANR	3918848	Argument	debug_level | D_NOHEADER		3918806	0					
ANR	3918849	InclusiveOrExpression	debug_level | D_NOHEADER		3918806	0		|			
ANR	3918850	Identifier	debug_level		3918806	0					
ANR	3918851	Identifier	D_NOHEADER		3918806	1					
ANR	3918852	Argument	"""No ClassAd available!\\n"""		3918806	1					
ANR	3918853	PrimaryExpression	"""No ClassAd available!\\n"""		3918806	0					
ANR	3918854	ElseStatement	else		3918806	0					
ANR	3918855	CompoundStatement		8:8:246:246	3918806	0					
ANR	3918856	ExpressionStatement	s_ad -> dPrint ( debug_level )	1171:2:28295:28322	3918806	0	True				
ANR	3918857	CallExpression	s_ad -> dPrint ( debug_level )		3918806	0					
ANR	3918858	Callee	s_ad -> dPrint		3918806	0					
ANR	3918859	PtrMemberAccess	s_ad -> dPrint		3918806	0					
ANR	3918860	Identifier	s_ad		3918806	0					
ANR	3918861	Identifier	dPrint		3918806	1					
ANR	3918862	ArgumentList	debug_level		3918806	1					
ANR	3918863	Argument	debug_level		3918806	0					
ANR	3918864	Identifier	debug_level		3918806	0					
ANR	3918865	ExpressionStatement	"dprintf ( debug_level | D_NOHEADER , ""*** End of starter info ***\\n"" )"	1173:1:28328:28396	3918806	3	True				
ANR	3918866	CallExpression	"dprintf ( debug_level | D_NOHEADER , ""*** End of starter info ***\\n"" )"		3918806	0					
ANR	3918867	Callee	dprintf		3918806	0					
ANR	3918868	Identifier	dprintf		3918806	0					
ANR	3918869	ArgumentList	debug_level | D_NOHEADER		3918806	1					
ANR	3918870	Argument	debug_level | D_NOHEADER		3918806	0					
ANR	3918871	InclusiveOrExpression	debug_level | D_NOHEADER		3918806	0		|			
ANR	3918872	Identifier	debug_level		3918806	0					
ANR	3918873	Identifier	D_NOHEADER		3918806	1					
ANR	3918874	Argument	"""*** End of starter info ***\\n"""		3918806	1					
ANR	3918875	PrimaryExpression	"""*** End of starter info ***\\n"""		3918806	0					
ANR	3918876	ReturnType	void		3918806	1					
ANR	3918877	Identifier	Starter :: printInfo		3918806	2					
ANR	3918878	ParameterList	int debug_level		3918806	3					
ANR	3918879	Parameter	int debug_level	1162:20:28026:28040	3918806	0	True				
ANR	3918880	ParameterType	int		3918806	0					
ANR	3918881	Identifier	debug_level		3918806	1					
ANR	3918882	CFGEntryNode	ENTRY		3918806		True				
ANR	3918883	CFGExitNode	EXIT		3918806		True				
ANR	3918884	Symbol	debug_level		3918806						
ANR	3918885	Symbol	s_ad		3918806						
ANR	3918886	Symbol	s_path		3918806						
ANR	3918887	Symbol	s_is_dc		3918806						
ANR	3918888	Symbol	D_NOHEADER		3918806						
ANR	3918889	Function	Starter :: getIpAddr	1177:0:28403:28914							
ANR	3918890	FunctionDef	Starter :: getIpAddr ()		3918889	0					
ANR	3918891	CompoundStatement		1179:0:28442:28914	3918889	0					
ANR	3918892	IfStatement	if ( ! s_pid )		3918889	0					
ANR	3918893	Condition	! s_pid	1180:5:28449:28455	3918889	0	True				
ANR	3918894	UnaryOperationExpression	! s_pid		3918889	0					
ANR	3918895	UnaryOperator	!		3918889	0					
ANR	3918896	Identifier	s_pid		3918889	1					
ANR	3918897	CompoundStatement		2:15:16:16	3918889	1					
ANR	3918898	ReturnStatement	return NULL ;	1181:2:28463:28474	3918889	0	True				
ANR	3918899	Identifier	NULL		3918889	0					
ANR	3918900	IfStatement	if ( ! m_starter_addr . IsEmpty ( ) )		3918889	1					
ANR	3918901	Condition	! m_starter_addr . IsEmpty ( )	1183:5:28484:28508	3918889	0	True				
ANR	3918902	UnaryOperationExpression	! m_starter_addr . IsEmpty ( )		3918889	0					
ANR	3918903	UnaryOperator	!		3918889	0					
ANR	3918904	CallExpression	m_starter_addr . IsEmpty ( )		3918889	1					
ANR	3918905	Callee	m_starter_addr . IsEmpty		3918889	0					
ANR	3918906	MemberAccess	m_starter_addr . IsEmpty		3918889	0					
ANR	3918907	Identifier	m_starter_addr		3918889	0					
ANR	3918908	Identifier	IsEmpty		3918889	1					
ANR	3918909	ArgumentList			3918889	1					
ANR	3918910	CompoundStatement		5:33:69:69	3918889	1					
ANR	3918911	ReturnStatement	return m_starter_addr . Value ( ) ;	1184:2:28516:28545	3918889	0	True				
ANR	3918912	CallExpression	m_starter_addr . Value ( )		3918889	0					
ANR	3918913	Callee	m_starter_addr . Value		3918889	0					
ANR	3918914	MemberAccess	m_starter_addr . Value		3918889	0					
ANR	3918915	Identifier	m_starter_addr		3918889	0					
ANR	3918916	Identifier	Value		3918889	1					
ANR	3918917	ArgumentList			3918889	1					
ANR	3918918	Statement	dprintf	1190:1:28715:28721	3918889	2	True				
ANR	3918919	Statement	(	1190:8:28722:28722	3918889	3	True				
ANR	3918920	Statement	D_ALWAYS	1190:9:28723:28730	3918889	4	True				
ANR	3918921	Statement	","	1190:17:28731:28731	3918889	5	True				
ANR	3918922	Statement	"""Warning: giving raw address in response to starter address query,"""	1191:3:28736:28802	3918889	6	True				
ANR	3918923	Statement	"""because update from starter not received yet.\\n"""	1192:3:28807:28855	3918889	7	True				
ANR	3918924	Statement	)	1192:52:28856:28856	3918889	8	True				
ANR	3918925	ExpressionStatement		1192:53:28857:28857	3918889	9	True				
ANR	3918926	ReturnStatement	return daemonCore -> InfoCommandSinfulString ( s_pid ) ;	1194:1:28861:28912	3918889	10	True				
ANR	3918927	CallExpression	daemonCore -> InfoCommandSinfulString ( s_pid )		3918889	0					
ANR	3918928	Callee	daemonCore -> InfoCommandSinfulString		3918889	0					
ANR	3918929	PtrMemberAccess	daemonCore -> InfoCommandSinfulString		3918889	0					
ANR	3918930	Identifier	daemonCore		3918889	0					
ANR	3918931	Identifier	InfoCommandSinfulString		3918889	1					
ANR	3918932	ArgumentList	s_pid		3918889	1					
ANR	3918933	Argument	s_pid		3918889	0					
ANR	3918934	Identifier	s_pid		3918889	0					
ANR	3918935	ReturnType	char const *		3918889	1					
ANR	3918936	Identifier	Starter :: getIpAddr		3918889	2					
ANR	3918937	ParameterList			3918889	3					
ANR	3918938	CFGEntryNode	ENTRY		3918889		True				
ANR	3918939	CFGExitNode	EXIT		3918889		True				
ANR	3918940	Symbol	daemonCore -> InfoCommandSinfulString		3918889						
ANR	3918941	Symbol	NULL		3918889						
ANR	3918942	Symbol	* daemonCore		3918889						
ANR	3918943	Symbol	daemonCore		3918889						
ANR	3918944	Symbol	m_starter_addr . IsEmpty		3918889						
ANR	3918945	Symbol	m_starter_addr . Value		3918889						
ANR	3918946	Symbol	m_starter_addr		3918889						
ANR	3918947	Symbol	s_pid		3918889						
ANR	3918948	Function	Starter :: killHard	1198:0:28918:29166							
ANR	3918949	FunctionDef	Starter :: killHard ()		3918948	0					
ANR	3918950	CompoundStatement		1200:0:28949:29166	3918948	0					
ANR	3918951	IfStatement	if ( ! active ( ) )		3918948	0					
ANR	3918952	Condition	! active ( )	1201:5:28956:28965	3918948	0	True				
ANR	3918953	UnaryOperationExpression	! active ( )		3918948	0					
ANR	3918954	UnaryOperator	!		3918948	0					
ANR	3918955	CallExpression	active ( )		3918948	1					
ANR	3918956	Callee	active		3918948	0					
ANR	3918957	Identifier	active		3918948	0					
ANR	3918958	ArgumentList			3918948	1					
ANR	3918959	CompoundStatement		2:18:19:19	3918948	1					
ANR	3918960	ReturnStatement	return true ;	1202:2:28973:28984	3918948	0	True				
ANR	3918961	Identifier	true		3918948	0					
ANR	3918962	IfStatement	if ( ! kill ( DC_SIGHARDKILL ) )		3918948	1					
ANR	3918963	Condition	! kill ( DC_SIGHARDKILL )	1205:5:28996:29017	3918948	0	True				
ANR	3918964	UnaryOperationExpression	! kill ( DC_SIGHARDKILL )		3918948	0					
ANR	3918965	UnaryOperator	!		3918948	0					
ANR	3918966	CallExpression	kill ( DC_SIGHARDKILL )		3918948	1					
ANR	3918967	Callee	kill		3918948	0					
ANR	3918968	Identifier	kill		3918948	0					
ANR	3918969	ArgumentList	DC_SIGHARDKILL		3918948	1					
ANR	3918970	Argument	DC_SIGHARDKILL		3918948	0					
ANR	3918971	Identifier	DC_SIGHARDKILL		3918948	0					
ANR	3918972	CompoundStatement		6:30:71:71	3918948	1					
ANR	3918973	ExpressionStatement	killpg ( SIGKILL )	1206:2:29025:29042	3918948	0	True				
ANR	3918974	CallExpression	killpg ( SIGKILL )		3918948	0					
ANR	3918975	Callee	killpg		3918948	0					
ANR	3918976	Identifier	killpg		3918948	0					
ANR	3918977	ArgumentList	SIGKILL		3918948	1					
ANR	3918978	Argument	SIGKILL		3918948	0					
ANR	3918979	Identifier	SIGKILL		3918948	0					
ANR	3918980	ReturnStatement	return false ;	1207:2:29046:29058	3918948	1	True				
ANR	3918981	Identifier	false		3918948	0					
ANR	3918982	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""in starter:killHard starting kill timer\\n"" )"	1209:1:29064:29129	3918948	2	True				
ANR	3918983	CallExpression	"dprintf ( D_FULLDEBUG , ""in starter:killHard starting kill timer\\n"" )"		3918948	0					
ANR	3918984	Callee	dprintf		3918948	0					
ANR	3918985	Identifier	dprintf		3918948	0					
ANR	3918986	ArgumentList	D_FULLDEBUG		3918948	1					
ANR	3918987	Argument	D_FULLDEBUG		3918948	0					
ANR	3918988	Identifier	D_FULLDEBUG		3918948	0					
ANR	3918989	Argument	"""in starter:killHard starting kill timer\\n"""		3918948	1					
ANR	3918990	PrimaryExpression	"""in starter:killHard starting kill timer\\n"""		3918948	0					
ANR	3918991	ExpressionStatement	startKillTimer ( )	1210:1:29132:29148	3918948	3	True				
ANR	3918992	CallExpression	startKillTimer ( )		3918948	0					
ANR	3918993	Callee	startKillTimer		3918948	0					
ANR	3918994	Identifier	startKillTimer		3918948	0					
ANR	3918995	ArgumentList			3918948	1					
ANR	3918996	ReturnStatement	return true ;	1212:1:29153:29164	3918948	4	True				
ANR	3918997	Identifier	true		3918948	0					
ANR	3918998	ReturnType	bool		3918948	1					
ANR	3918999	Identifier	Starter :: killHard		3918948	2					
ANR	3919000	ParameterList			3918948	3					
ANR	3919001	CFGEntryNode	ENTRY		3918948		True				
ANR	3919002	CFGExitNode	EXIT		3918948		True				
ANR	3919003	Symbol	DC_SIGHARDKILL		3918948						
ANR	3919004	Symbol	true		3918948						
ANR	3919005	Symbol	false		3918948						
ANR	3919006	Symbol	active		3918948						
ANR	3919007	Symbol	D_FULLDEBUG		3918948						
ANR	3919008	Symbol	kill		3918948						
ANR	3919009	Symbol	SIGKILL		3918948						
ANR	3919010	Function	Starter :: suspend	1244:0:29968:30123							
ANR	3919011	FunctionDef	Starter :: suspend ()		3919010	0					
ANR	3919012	CompoundStatement		1246:0:29998:30123	3919010	0					
ANR	3919013	IfStatement	if ( ! active ( ) )		3919010	0					
ANR	3919014	Condition	! active ( )	1247:5:30005:30014	3919010	0	True				
ANR	3919015	UnaryOperationExpression	! active ( )		3919010	0					
ANR	3919016	UnaryOperator	!		3919010	0					
ANR	3919017	CallExpression	active ( )		3919010	1					
ANR	3919018	Callee	active		3919010	0					
ANR	3919019	Identifier	active		3919010	0					
ANR	3919020	ArgumentList			3919010	1					
ANR	3919021	CompoundStatement		2:18:19:19	3919010	1					
ANR	3919022	ReturnStatement	return true ;	1248:2:30022:30033	3919010	0	True				
ANR	3919023	Identifier	true		3919010	0					
ANR	3919024	IfStatement	if ( ! kill ( DC_SIGSUSPEND ) )		3919010	1					
ANR	3919025	Condition	! kill ( DC_SIGSUSPEND )	1250:5:30043:30063	3919010	0	True				
ANR	3919026	UnaryOperationExpression	! kill ( DC_SIGSUSPEND )		3919010	0					
ANR	3919027	UnaryOperator	!		3919010	0					
ANR	3919028	CallExpression	kill ( DC_SIGSUSPEND )		3919010	1					
ANR	3919029	Callee	kill		3919010	0					
ANR	3919030	Identifier	kill		3919010	0					
ANR	3919031	ArgumentList	DC_SIGSUSPEND		3919010	1					
ANR	3919032	Argument	DC_SIGSUSPEND		3919010	0					
ANR	3919033	Identifier	DC_SIGSUSPEND		3919010	0					
ANR	3919034	CompoundStatement		5:29:68:68	3919010	1					
ANR	3919035	ExpressionStatement	killpg ( SIGKILL )	1251:2:30071:30088	3919010	0	True				
ANR	3919036	CallExpression	killpg ( SIGKILL )		3919010	0					
ANR	3919037	Callee	killpg		3919010	0					
ANR	3919038	Identifier	killpg		3919010	0					
ANR	3919039	ArgumentList	SIGKILL		3919010	1					
ANR	3919040	Argument	SIGKILL		3919010	0					
ANR	3919041	Identifier	SIGKILL		3919010	0					
ANR	3919042	ReturnStatement	return false ;	1252:2:30092:30104	3919010	1	True				
ANR	3919043	Identifier	false		3919010	0					
ANR	3919044	ReturnStatement	return true ;	1254:1:30110:30121	3919010	2	True				
ANR	3919045	Identifier	true		3919010	0					
ANR	3919046	ReturnType	bool		3919010	1					
ANR	3919047	Identifier	Starter :: suspend		3919010	2					
ANR	3919048	ParameterList			3919010	3					
ANR	3919049	CFGEntryNode	ENTRY		3919010		True				
ANR	3919050	CFGExitNode	EXIT		3919010		True				
ANR	3919051	Symbol	DC_SIGSUSPEND		3919010						
ANR	3919052	Symbol	true		3919010						
ANR	3919053	Symbol	false		3919010						
ANR	3919054	Symbol	active		3919010						
ANR	3919055	Symbol	kill		3919010						
ANR	3919056	Symbol	SIGKILL		3919010						
ANR	3919057	Function	Starter :: resume	1258:0:30127:30282							
ANR	3919058	FunctionDef	Starter :: resume ()		3919057	0					
ANR	3919059	CompoundStatement		1260:0:30156:30282	3919057	0					
ANR	3919060	IfStatement	if ( ! active ( ) )		3919057	0					
ANR	3919061	Condition	! active ( )	1261:5:30163:30172	3919057	0	True				
ANR	3919062	UnaryOperationExpression	! active ( )		3919057	0					
ANR	3919063	UnaryOperator	!		3919057	0					
ANR	3919064	CallExpression	active ( )		3919057	1					
ANR	3919065	Callee	active		3919057	0					
ANR	3919066	Identifier	active		3919057	0					
ANR	3919067	ArgumentList			3919057	1					
ANR	3919068	CompoundStatement		2:18:19:19	3919057	1					
ANR	3919069	ReturnStatement	return true ;	1262:2:30180:30191	3919057	0	True				
ANR	3919070	Identifier	true		3919057	0					
ANR	3919071	IfStatement	if ( ! kill ( DC_SIGCONTINUE ) )		3919057	1					
ANR	3919072	Condition	! kill ( DC_SIGCONTINUE )	1264:5:30201:30222	3919057	0	True				
ANR	3919073	UnaryOperationExpression	! kill ( DC_SIGCONTINUE )		3919057	0					
ANR	3919074	UnaryOperator	!		3919057	0					
ANR	3919075	CallExpression	kill ( DC_SIGCONTINUE )		3919057	1					
ANR	3919076	Callee	kill		3919057	0					
ANR	3919077	Identifier	kill		3919057	0					
ANR	3919078	ArgumentList	DC_SIGCONTINUE		3919057	1					
ANR	3919079	Argument	DC_SIGCONTINUE		3919057	0					
ANR	3919080	Identifier	DC_SIGCONTINUE		3919057	0					
ANR	3919081	CompoundStatement		5:30:69:69	3919057	1					
ANR	3919082	ExpressionStatement	killpg ( SIGKILL )	1265:2:30230:30247	3919057	0	True				
ANR	3919083	CallExpression	killpg ( SIGKILL )		3919057	0					
ANR	3919084	Callee	killpg		3919057	0					
ANR	3919085	Identifier	killpg		3919057	0					
ANR	3919086	ArgumentList	SIGKILL		3919057	1					
ANR	3919087	Argument	SIGKILL		3919057	0					
ANR	3919088	Identifier	SIGKILL		3919057	0					
ANR	3919089	ReturnStatement	return false ;	1266:2:30251:30263	3919057	1	True				
ANR	3919090	Identifier	false		3919057	0					
ANR	3919091	ReturnStatement	return true ;	1268:1:30269:30280	3919057	2	True				
ANR	3919092	Identifier	true		3919057	0					
ANR	3919093	ReturnType	bool		3919057	1					
ANR	3919094	Identifier	Starter :: resume		3919057	2					
ANR	3919095	ParameterList			3919057	3					
ANR	3919096	CFGEntryNode	ENTRY		3919057		True				
ANR	3919097	CFGExitNode	EXIT		3919057		True				
ANR	3919098	Symbol	DC_SIGCONTINUE		3919057						
ANR	3919099	Symbol	true		3919057						
ANR	3919100	Symbol	false		3919057						
ANR	3919101	Symbol	active		3919057						
ANR	3919102	Symbol	kill		3919057						
ANR	3919103	Symbol	SIGKILL		3919057						
ANR	3919104	Function	Starter :: startKillTimer	1272:0:30286:31076							
ANR	3919105	FunctionDef	Starter :: startKillTimer ()		3919104	0					
ANR	3919106	CompoundStatement		1274:0:30322:31076	3919104	0					
ANR	3919107	IfStatement	if ( s_kill_tid >= 0 )		3919104	0					
ANR	3919108	Condition	s_kill_tid >= 0	1275:5:30329:30343	3919104	0	True				
ANR	3919109	RelationalExpression	s_kill_tid >= 0		3919104	0		>=			
ANR	3919110	Identifier	s_kill_tid		3919104	0					
ANR	3919111	PrimaryExpression	0		3919104	1					
ANR	3919112	CompoundStatement		2:23:24:24	3919104	1					
ANR	3919113	ReturnStatement	return TRUE ;	1277:2:30380:30391	3919104	0	True				
ANR	3919114	Identifier	TRUE		3919104	0					
ANR	3919115	IdentifierDeclStatement	int tmp_killing_timeout = killing_timeout ;	1280:1:30399:30440	3919104	1	True				
ANR	3919116	IdentifierDecl	tmp_killing_timeout = killing_timeout		3919104	0					
ANR	3919117	IdentifierDeclType	int		3919104	0					
ANR	3919118	Identifier	tmp_killing_timeout		3919104	1					
ANR	3919119	AssignmentExpression	tmp_killing_timeout = killing_timeout		3919104	2		=			
ANR	3919120	Identifier	killing_timeout		3919104	0					
ANR	3919121	Identifier	killing_timeout		3919104	1					
ANR	3919122	IfStatement	if ( s_claim && ( s_claim -> universe ( ) == CONDOR_UNIVERSE_VM ) )		3919104	2					
ANR	3919123	Condition	s_claim && ( s_claim -> universe ( ) == CONDOR_UNIVERSE_VM )	1281:5:30447:30500	3919104	0	True				
ANR	3919124	AndExpression	s_claim && ( s_claim -> universe ( ) == CONDOR_UNIVERSE_VM )		3919104	0		&&			
ANR	3919125	Identifier	s_claim		3919104	0					
ANR	3919126	EqualityExpression	s_claim -> universe ( ) == CONDOR_UNIVERSE_VM		3919104	1		==			
ANR	3919127	CallExpression	s_claim -> universe ( )		3919104	0					
ANR	3919128	Callee	s_claim -> universe		3919104	0					
ANR	3919129	PtrMemberAccess	s_claim -> universe		3919104	0					
ANR	3919130	Identifier	s_claim		3919104	0					
ANR	3919131	Identifier	universe		3919104	1					
ANR	3919132	ArgumentList			3919104	1					
ANR	3919133	Identifier	CONDOR_UNIVERSE_VM		3919104	1					
ANR	3919134	CompoundStatement		10:2:238:303	3919104	1					
ANR	3919135	IdentifierDeclStatement	"int vm_killing_timeout = param_integer ( ""VM_KILLING_TIMEOUT"" , 60 ) ;"	1283:2:30561:30626	3919104	0	True				
ANR	3919136	IdentifierDecl	"vm_killing_timeout = param_integer ( ""VM_KILLING_TIMEOUT"" , 60 )"		3919104	0					
ANR	3919137	IdentifierDeclType	int		3919104	0					
ANR	3919138	Identifier	vm_killing_timeout		3919104	1					
ANR	3919139	AssignmentExpression	"vm_killing_timeout = param_integer ( ""VM_KILLING_TIMEOUT"" , 60 )"		3919104	2		=			
ANR	3919140	Identifier	vm_killing_timeout		3919104	0					
ANR	3919141	CallExpression	"param_integer ( ""VM_KILLING_TIMEOUT"" , 60 )"		3919104	1					
ANR	3919142	Callee	param_integer		3919104	0					
ANR	3919143	Identifier	param_integer		3919104	0					
ANR	3919144	ArgumentList	"""VM_KILLING_TIMEOUT"""		3919104	1					
ANR	3919145	Argument	"""VM_KILLING_TIMEOUT"""		3919104	0					
ANR	3919146	PrimaryExpression	"""VM_KILLING_TIMEOUT"""		3919104	0					
ANR	3919147	Argument	60		3919104	1					
ANR	3919148	PrimaryExpression	60		3919104	0					
ANR	3919149	IfStatement	if ( killing_timeout < vm_killing_timeout )		3919104	1					
ANR	3919150	Condition	killing_timeout < vm_killing_timeout	1284:6:30634:30669	3919104	0	True				
ANR	3919151	RelationalExpression	killing_timeout < vm_killing_timeout		3919104	0		<			
ANR	3919152	Identifier	killing_timeout		3919104	0					
ANR	3919153	Identifier	vm_killing_timeout		3919104	1					
ANR	3919154	CompoundStatement		11:45:350:350	3919104	1					
ANR	3919155	ExpressionStatement	tmp_killing_timeout = vm_killing_timeout	1285:3:30678:30718	3919104	0	True				
ANR	3919156	AssignmentExpression	tmp_killing_timeout = vm_killing_timeout		3919104	0		=			
ANR	3919157	Identifier	tmp_killing_timeout		3919104	0					
ANR	3919158	Identifier	vm_killing_timeout		3919104	1					
ANR	3919159	ExpressionStatement	"s_kill_tid = daemonCore -> Register_Timer ( tmp_killing_timeout , tmp_killing_timeout , ( TimerHandlercpp ) & Starter :: sigkillStarter , ""sigkillStarter"" , this )"	1291:1:30814:30986	3919104	3	True				
ANR	3919160	AssignmentExpression	"s_kill_tid = daemonCore -> Register_Timer ( tmp_killing_timeout , tmp_killing_timeout , ( TimerHandlercpp ) & Starter :: sigkillStarter , ""sigkillStarter"" , this )"		3919104	0		=			
ANR	3919161	Identifier	s_kill_tid		3919104	0					
ANR	3919162	CallExpression	"daemonCore -> Register_Timer ( tmp_killing_timeout , tmp_killing_timeout , ( TimerHandlercpp ) & Starter :: sigkillStarter , ""sigkillStarter"" , this )"		3919104	1					
ANR	3919163	Callee	daemonCore -> Register_Timer		3919104	0					
ANR	3919164	PtrMemberAccess	daemonCore -> Register_Timer		3919104	0					
ANR	3919165	Identifier	daemonCore		3919104	0					
ANR	3919166	Identifier	Register_Timer		3919104	1					
ANR	3919167	ArgumentList	tmp_killing_timeout		3919104	1					
ANR	3919168	Argument	tmp_killing_timeout		3919104	0					
ANR	3919169	Identifier	tmp_killing_timeout		3919104	0					
ANR	3919170	Argument	tmp_killing_timeout		3919104	1					
ANR	3919171	Identifier	tmp_killing_timeout		3919104	0					
ANR	3919172	Argument	( TimerHandlercpp ) & Starter :: sigkillStarter		3919104	2					
ANR	3919173	CastExpression	( TimerHandlercpp ) & Starter :: sigkillStarter		3919104	0					
ANR	3919174	CastTarget	TimerHandlercpp		3919104	0					
ANR	3919175	UnaryOperationExpression	& Starter :: sigkillStarter		3919104	1					
ANR	3919176	UnaryOperator	&		3919104	0					
ANR	3919177	Identifier	Starter :: sigkillStarter		3919104	1					
ANR	3919178	Argument	"""sigkillStarter"""		3919104	3					
ANR	3919179	PrimaryExpression	"""sigkillStarter"""		3919104	0					
ANR	3919180	Argument	this		3919104	4					
ANR	3919181	Identifier	this		3919104	0					
ANR	3919182	IfStatement	if ( s_kill_tid < 0 )		3919104	4					
ANR	3919183	Condition	s_kill_tid < 0	1296:5:30993:31006	3919104	0	True				
ANR	3919184	RelationalExpression	s_kill_tid < 0		3919104	0		<			
ANR	3919185	Identifier	s_kill_tid		3919104	0					
ANR	3919186	PrimaryExpression	0		3919104	1					
ANR	3919187	CompoundStatement		23:22:687:687	3919104	1					
ANR	3919188	ExpressionStatement	"EXCEPT ( ""Can't register DaemonCore timer"" )"	1297:2:31014:31057	3919104	0	True				
ANR	3919189	CallExpression	"EXCEPT ( ""Can't register DaemonCore timer"" )"		3919104	0					
ANR	3919190	Callee	EXCEPT		3919104	0					
ANR	3919191	Identifier	EXCEPT		3919104	0					
ANR	3919192	ArgumentList	"""Can't register DaemonCore timer"""		3919104	1					
ANR	3919193	Argument	"""Can't register DaemonCore timer"""		3919104	0					
ANR	3919194	PrimaryExpression	"""Can't register DaemonCore timer"""		3919104	0					
ANR	3919195	ReturnStatement	return TRUE ;	1299:1:31063:31074	3919104	5	True				
ANR	3919196	Identifier	TRUE		3919104	0					
ANR	3919197	ReturnType	int		3919104	1					
ANR	3919198	Identifier	Starter :: startKillTimer		3919104	2					
ANR	3919199	ParameterList			3919104	3					
ANR	3919200	CFGEntryNode	ENTRY		3919104		True				
ANR	3919201	CFGExitNode	EXIT		3919104		True				
ANR	3919202	Symbol	vm_killing_timeout		3919104						
ANR	3919203	Symbol	s_kill_tid		3919104						
ANR	3919204	Symbol	& Starter :: sigkillStarter		3919104						
ANR	3919205	Symbol	this		3919104						
ANR	3919206	Symbol	TRUE		3919104						
ANR	3919207	Symbol	killing_timeout		3919104						
ANR	3919208	Symbol	tmp_killing_timeout		3919104						
ANR	3919209	Symbol	* s_claim		3919104						
ANR	3919210	Symbol	* daemonCore		3919104						
ANR	3919211	Symbol	daemonCore -> Register_Timer		3919104						
ANR	3919212	Symbol	daemonCore		3919104						
ANR	3919213	Symbol	CONDOR_UNIVERSE_VM		3919104						
ANR	3919214	Symbol	s_claim -> universe		3919104						
ANR	3919215	Symbol	param_integer		3919104						
ANR	3919216	Symbol	s_claim		3919104						
ANR	3919217	Function	Starter :: startSoftkillTimeout	1303:0:31080:31668							
ANR	3919218	FunctionDef	Starter :: startSoftkillTimeout ()		3919217	0					
ANR	3919219	CompoundStatement		1305:0:31122:31668	3919217	0					
ANR	3919220	IfStatement	if ( s_softkill_tid >= 0 )		3919217	0					
ANR	3919221	Condition	s_softkill_tid >= 0	1306:5:31129:31147	3919217	0	True				
ANR	3919222	RelationalExpression	s_softkill_tid >= 0		3919217	0		>=			
ANR	3919223	Identifier	s_softkill_tid		3919217	0					
ANR	3919224	PrimaryExpression	0		3919217	1					
ANR	3919225	CompoundStatement		2:27:28:28	3919217	1					
ANR	3919226	ReturnStatement	return TRUE ;	1308:2:31184:31195	3919217	0	True				
ANR	3919227	Identifier	TRUE		3919217	0					
ANR	3919228	IdentifierDeclStatement	int softkill_timeout = s_claim ? s_claim -> rip ( ) -> evalMaxVacateTime ( ) : 0 ;	1311:1:31202:31274	3919217	1	True				
ANR	3919229	IdentifierDecl	softkill_timeout = s_claim ? s_claim -> rip ( ) -> evalMaxVacateTime ( ) : 0		3919217	0					
ANR	3919230	IdentifierDeclType	int		3919217	0					
ANR	3919231	Identifier	softkill_timeout		3919217	1					
ANR	3919232	AssignmentExpression	softkill_timeout = s_claim ? s_claim -> rip ( ) -> evalMaxVacateTime ( ) : 0		3919217	2		=			
ANR	3919233	Identifier	softkill_timeout		3919217	0					
ANR	3919234	ConditionalExpression	s_claim ? s_claim -> rip ( ) -> evalMaxVacateTime ( ) : 0		3919217	1					
ANR	3919235	Condition	s_claim		3919217	0					
ANR	3919236	Identifier	s_claim		3919217	0					
ANR	3919237	CallExpression	s_claim -> rip ( ) -> evalMaxVacateTime ( )		3919217	1					
ANR	3919238	Callee	s_claim -> rip ( ) -> evalMaxVacateTime		3919217	0					
ANR	3919239	PtrMemberAccess	s_claim -> rip ( ) -> evalMaxVacateTime		3919217	0					
ANR	3919240	CallExpression	s_claim -> rip ( )		3919217	0					
ANR	3919241	Callee	s_claim -> rip		3919217	0					
ANR	3919242	PtrMemberAccess	s_claim -> rip		3919217	0					
ANR	3919243	Identifier	s_claim		3919217	0					
ANR	3919244	Identifier	rip		3919217	1					
ANR	3919245	ArgumentList			3919217	1					
ANR	3919246	Identifier	evalMaxVacateTime		3919217	1					
ANR	3919247	ArgumentList			3919217	1					
ANR	3919248	PrimaryExpression	0		3919217	2					
ANR	3919249	IfStatement	if ( softkill_timeout < 0 )		3919217	2					
ANR	3919250	Condition	softkill_timeout < 0	1312:5:31281:31300	3919217	0	True				
ANR	3919251	RelationalExpression	softkill_timeout < 0		3919217	0		<			
ANR	3919252	Identifier	softkill_timeout		3919217	0					
ANR	3919253	PrimaryExpression	0		3919217	1					
ANR	3919254	CompoundStatement		8:28:181:181	3919217	1					
ANR	3919255	ExpressionStatement	softkill_timeout = 0	1313:2:31308:31328	3919217	0	True				
ANR	3919256	AssignmentExpression	softkill_timeout = 0		3919217	0		=			
ANR	3919257	Identifier	softkill_timeout		3919217	0					
ANR	3919258	PrimaryExpression	0		3919217	1					
ANR	3919259	ExpressionStatement	"s_softkill_tid = daemonCore -> Register_Timer ( softkill_timeout , ( TimerHandlercpp ) & Starter :: softkillTimeout , ""softkillTimeout"" , this )"	1316:1:31335:31482	3919217	3	True				
ANR	3919260	AssignmentExpression	"s_softkill_tid = daemonCore -> Register_Timer ( softkill_timeout , ( TimerHandlercpp ) & Starter :: softkillTimeout , ""softkillTimeout"" , this )"		3919217	0		=			
ANR	3919261	Identifier	s_softkill_tid		3919217	0					
ANR	3919262	CallExpression	"daemonCore -> Register_Timer ( softkill_timeout , ( TimerHandlercpp ) & Starter :: softkillTimeout , ""softkillTimeout"" , this )"		3919217	1					
ANR	3919263	Callee	daemonCore -> Register_Timer		3919217	0					
ANR	3919264	PtrMemberAccess	daemonCore -> Register_Timer		3919217	0					
ANR	3919265	Identifier	daemonCore		3919217	0					
ANR	3919266	Identifier	Register_Timer		3919217	1					
ANR	3919267	ArgumentList	softkill_timeout		3919217	1					
ANR	3919268	Argument	softkill_timeout		3919217	0					
ANR	3919269	Identifier	softkill_timeout		3919217	0					
ANR	3919270	Argument	( TimerHandlercpp ) & Starter :: softkillTimeout		3919217	1					
ANR	3919271	CastExpression	( TimerHandlercpp ) & Starter :: softkillTimeout		3919217	0					
ANR	3919272	CastTarget	TimerHandlercpp		3919217	0					
ANR	3919273	UnaryOperationExpression	& Starter :: softkillTimeout		3919217	1					
ANR	3919274	UnaryOperator	&		3919217	0					
ANR	3919275	Identifier	Starter :: softkillTimeout		3919217	1					
ANR	3919276	Argument	"""softkillTimeout"""		3919217	2					
ANR	3919277	PrimaryExpression	"""softkillTimeout"""		3919217	0					
ANR	3919278	Argument	this		3919217	3					
ANR	3919279	Identifier	this		3919217	0					
ANR	3919280	IfStatement	if ( s_softkill_tid < 0 )		3919217	4					
ANR	3919281	Condition	s_softkill_tid < 0	1320:5:31489:31506	3919217	0	True				
ANR	3919282	RelationalExpression	s_softkill_tid < 0		3919217	0		<			
ANR	3919283	Identifier	s_softkill_tid		3919217	0					
ANR	3919284	PrimaryExpression	0		3919217	1					
ANR	3919285	CompoundStatement		16:26:387:387	3919217	1					
ANR	3919286	ExpressionStatement	"EXCEPT ( ""Can't register softkillTimeout timer"" )"	1321:2:31514:31562	3919217	0	True				
ANR	3919287	CallExpression	"EXCEPT ( ""Can't register softkillTimeout timer"" )"		3919217	0					
ANR	3919288	Callee	EXCEPT		3919217	0					
ANR	3919289	Identifier	EXCEPT		3919217	0					
ANR	3919290	ArgumentList	"""Can't register softkillTimeout timer"""		3919217	1					
ANR	3919291	Argument	"""Can't register softkillTimeout timer"""		3919217	0					
ANR	3919292	PrimaryExpression	"""Can't register softkillTimeout timer"""		3919217	0					
ANR	3919293	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Using max vacate time of %ds for this job.\\n"" , softkill_timeout )"	1323:1:31568:31652	3919217	5	True				
ANR	3919294	CallExpression	"dprintf ( D_FULLDEBUG , ""Using max vacate time of %ds for this job.\\n"" , softkill_timeout )"		3919217	0					
ANR	3919295	Callee	dprintf		3919217	0					
ANR	3919296	Identifier	dprintf		3919217	0					
ANR	3919297	ArgumentList	D_FULLDEBUG		3919217	1					
ANR	3919298	Argument	D_FULLDEBUG		3919217	0					
ANR	3919299	Identifier	D_FULLDEBUG		3919217	0					
ANR	3919300	Argument	"""Using max vacate time of %ds for this job.\\n"""		3919217	1					
ANR	3919301	PrimaryExpression	"""Using max vacate time of %ds for this job.\\n"""		3919217	0					
ANR	3919302	Argument	softkill_timeout		3919217	2					
ANR	3919303	Identifier	softkill_timeout		3919217	0					
ANR	3919304	ReturnStatement	return TRUE ;	1324:1:31655:31666	3919217	6	True				
ANR	3919305	Identifier	TRUE		3919217	0					
ANR	3919306	ReturnType	int		3919217	1					
ANR	3919307	Identifier	Starter :: startSoftkillTimeout		3919217	2					
ANR	3919308	ParameterList			3919217	3					
ANR	3919309	CFGEntryNode	ENTRY		3919217		True				
ANR	3919310	CFGExitNode	EXIT		3919217		True				
ANR	3919311	Symbol	* * s_claim		3919217						
ANR	3919312	Symbol	softkill_timeout		3919217						
ANR	3919313	Symbol	this		3919217						
ANR	3919314	Symbol	TRUE		3919217						
ANR	3919315	Symbol	& Starter :: softkillTimeout		3919217						
ANR	3919316	Symbol	D_FULLDEBUG		3919217						
ANR	3919317	Symbol	* s_claim -> rip		3919217						
ANR	3919318	Symbol	s_claim -> rip ( ) -> evalMaxVacateTime		3919217						
ANR	3919319	Symbol	* s_claim		3919217						
ANR	3919320	Symbol	* daemonCore		3919217						
ANR	3919321	Symbol	s_softkill_tid		3919217						
ANR	3919322	Symbol	daemonCore -> Register_Timer		3919217						
ANR	3919323	Symbol	daemonCore		3919217						
ANR	3919324	Symbol	s_claim -> rip		3919217						
ANR	3919325	Symbol	s_claim		3919217						
ANR	3919326	Function	Starter :: cancelKillTimer	1328:0:31672:32419							
ANR	3919327	FunctionDef	Starter :: cancelKillTimer ()		3919326	0					
ANR	3919328	CompoundStatement		1330:0:31710:32419	3919326	0					
ANR	3919329	IdentifierDeclStatement	int rval ;	1331:1:31713:31721	3919326	0	True				
ANR	3919330	IdentifierDecl	rval		3919326	0					
ANR	3919331	IdentifierDeclType	int		3919326	0					
ANR	3919332	Identifier	rval		3919326	1					
ANR	3919333	IfStatement	if ( s_kill_tid != - 1 )		3919326	1					
ANR	3919334	Condition	s_kill_tid != - 1	1332:5:31728:31743	3919326	0	True				
ANR	3919335	EqualityExpression	s_kill_tid != - 1		3919326	0		!=			
ANR	3919336	Identifier	s_kill_tid		3919326	0					
ANR	3919337	UnaryOperationExpression	- 1		3919326	1					
ANR	3919338	UnaryOperator	-		3919326	0					
ANR	3919339	PrimaryExpression	1		3919326	1					
ANR	3919340	CompoundStatement		3:24:36:36	3919326	1					
ANR	3919341	ExpressionStatement	rval = daemonCore -> Cancel_Timer ( s_kill_tid )	1333:2:31751:31796	3919326	0	True				
ANR	3919342	AssignmentExpression	rval = daemonCore -> Cancel_Timer ( s_kill_tid )		3919326	0		=			
ANR	3919343	Identifier	rval		3919326	0					
ANR	3919344	CallExpression	daemonCore -> Cancel_Timer ( s_kill_tid )		3919326	1					
ANR	3919345	Callee	daemonCore -> Cancel_Timer		3919326	0					
ANR	3919346	PtrMemberAccess	daemonCore -> Cancel_Timer		3919326	0					
ANR	3919347	Identifier	daemonCore		3919326	0					
ANR	3919348	Identifier	Cancel_Timer		3919326	1					
ANR	3919349	ArgumentList	s_kill_tid		3919326	1					
ANR	3919350	Argument	s_kill_tid		3919326	0					
ANR	3919351	Identifier	s_kill_tid		3919326	0					
ANR	3919352	IfStatement	if ( rval < 0 )		3919326	1					
ANR	3919353	Condition	rval < 0	1334:6:31804:31811	3919326	0	True				
ANR	3919354	RelationalExpression	rval < 0		3919326	0		<			
ANR	3919355	Identifier	rval		3919326	0					
ANR	3919356	PrimaryExpression	0		3919326	1					
ANR	3919357	CompoundStatement		5:17:104:104	3919326	1					
ANR	3919358	Statement	dprintf	1335:3:31820:31826	3919326	0	True				
ANR	3919359	Statement	(	1335:10:31827:31827	3919326	1	True				
ANR	3919360	Statement	D_ALWAYS	1335:12:31829:31836	3919326	2	True				
ANR	3919361	Statement	","	1335:20:31837:31837	3919326	3	True				
ANR	3919362	Statement	"""Failed to cancel hardkill-starter timer (%d): """	1336:6:31846:31893	3919326	4	True				
ANR	3919363	Statement	"""daemonCore error\\n"""	1337:6:31901:31920	3919326	5	True				
ANR	3919364	Statement	","	1337:26:31921:31921	3919326	6	True				
ANR	3919365	Statement	s_kill_tid	1337:28:31923:31932	3919326	7	True				
ANR	3919366	Statement	)	1337:39:31934:31934	3919326	8	True				
ANR	3919367	ExpressionStatement		1337:40:31935:31935	3919326	9	True				
ANR	3919368	ElseStatement	else		3919326	0					
ANR	3919369	CompoundStatement		9:9:235:235	3919326	0					
ANR	3919370	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Canceled hardkill-starter timer (%d)\\n"" , s_kill_tid )"	1339:3:31951:32033	3919326	0	True				
ANR	3919371	CallExpression	"dprintf ( D_FULLDEBUG , ""Canceled hardkill-starter timer (%d)\\n"" , s_kill_tid )"		3919326	0					
ANR	3919372	Callee	dprintf		3919326	0					
ANR	3919373	Identifier	dprintf		3919326	0					
ANR	3919374	ArgumentList	D_FULLDEBUG		3919326	1					
ANR	3919375	Argument	D_FULLDEBUG		3919326	0					
ANR	3919376	Identifier	D_FULLDEBUG		3919326	0					
ANR	3919377	Argument	"""Canceled hardkill-starter timer (%d)\\n"""		3919326	1					
ANR	3919378	PrimaryExpression	"""Canceled hardkill-starter timer (%d)\\n"""		3919326	0					
ANR	3919379	Argument	s_kill_tid		3919326	2					
ANR	3919380	Identifier	s_kill_tid		3919326	0					
ANR	3919381	ExpressionStatement	s_kill_tid = - 1	1342:2:32041:32056	3919326	2	True				
ANR	3919382	AssignmentExpression	s_kill_tid = - 1		3919326	0		=			
ANR	3919383	Identifier	s_kill_tid		3919326	0					
ANR	3919384	UnaryOperationExpression	- 1		3919326	1					
ANR	3919385	UnaryOperator	-		3919326	0					
ANR	3919386	PrimaryExpression	1		3919326	1					
ANR	3919387	IfStatement	if ( s_softkill_tid != - 1 )		3919326	2					
ANR	3919388	Condition	s_softkill_tid != - 1	1344:5:32066:32085	3919326	0	True				
ANR	3919389	EqualityExpression	s_softkill_tid != - 1		3919326	0		!=			
ANR	3919390	Identifier	s_softkill_tid		3919326	0					
ANR	3919391	UnaryOperationExpression	- 1		3919326	1					
ANR	3919392	UnaryOperator	-		3919326	0					
ANR	3919393	PrimaryExpression	1		3919326	1					
ANR	3919394	CompoundStatement		15:28:378:378	3919326	1					
ANR	3919395	ExpressionStatement	rval = daemonCore -> Cancel_Timer ( s_softkill_tid )	1345:2:32093:32142	3919326	0	True				
ANR	3919396	AssignmentExpression	rval = daemonCore -> Cancel_Timer ( s_softkill_tid )		3919326	0		=			
ANR	3919397	Identifier	rval		3919326	0					
ANR	3919398	CallExpression	daemonCore -> Cancel_Timer ( s_softkill_tid )		3919326	1					
ANR	3919399	Callee	daemonCore -> Cancel_Timer		3919326	0					
ANR	3919400	PtrMemberAccess	daemonCore -> Cancel_Timer		3919326	0					
ANR	3919401	Identifier	daemonCore		3919326	0					
ANR	3919402	Identifier	Cancel_Timer		3919326	1					
ANR	3919403	ArgumentList	s_softkill_tid		3919326	1					
ANR	3919404	Argument	s_softkill_tid		3919326	0					
ANR	3919405	Identifier	s_softkill_tid		3919326	0					
ANR	3919406	IfStatement	if ( rval < 0 )		3919326	1					
ANR	3919407	Condition	rval < 0	1346:6:32150:32157	3919326	0	True				
ANR	3919408	RelationalExpression	rval < 0		3919326	0		<			
ANR	3919409	Identifier	rval		3919326	0					
ANR	3919410	PrimaryExpression	0		3919326	1					
ANR	3919411	CompoundStatement		17:17:450:450	3919326	1					
ANR	3919412	Statement	dprintf	1347:3:32166:32172	3919326	0	True				
ANR	3919413	Statement	(	1347:10:32173:32173	3919326	1	True				
ANR	3919414	Statement	D_ALWAYS	1347:12:32175:32182	3919326	2	True				
ANR	3919415	Statement	","	1347:20:32183:32183	3919326	3	True				
ANR	3919416	Statement	"""Failed to cancel softkill-starter timer (%d): """	1348:6:32192:32239	3919326	4	True				
ANR	3919417	Statement	"""daemonCore error\\n"""	1349:6:32247:32266	3919326	5	True				
ANR	3919418	Statement	","	1349:26:32267:32267	3919326	6	True				
ANR	3919419	Statement	s_softkill_tid	1349:28:32269:32282	3919326	7	True				
ANR	3919420	Statement	)	1349:43:32284:32284	3919326	8	True				
ANR	3919421	ExpressionStatement		1349:44:32285:32285	3919326	9	True				
ANR	3919422	ElseStatement	else		3919326	0					
ANR	3919423	CompoundStatement		21:9:585:585	3919326	0					
ANR	3919424	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Canceled softkill-starter timer (%d)\\n"" , s_softkill_tid )"	1351:3:32301:32387	3919326	0	True				
ANR	3919425	CallExpression	"dprintf ( D_FULLDEBUG , ""Canceled softkill-starter timer (%d)\\n"" , s_softkill_tid )"		3919326	0					
ANR	3919426	Callee	dprintf		3919326	0					
ANR	3919427	Identifier	dprintf		3919326	0					
ANR	3919428	ArgumentList	D_FULLDEBUG		3919326	1					
ANR	3919429	Argument	D_FULLDEBUG		3919326	0					
ANR	3919430	Identifier	D_FULLDEBUG		3919326	0					
ANR	3919431	Argument	"""Canceled softkill-starter timer (%d)\\n"""		3919326	1					
ANR	3919432	PrimaryExpression	"""Canceled softkill-starter timer (%d)\\n"""		3919326	0					
ANR	3919433	Argument	s_softkill_tid		3919326	2					
ANR	3919434	Identifier	s_softkill_tid		3919326	0					
ANR	3919435	ExpressionStatement	s_softkill_tid = - 1	1354:2:32395:32414	3919326	2	True				
ANR	3919436	AssignmentExpression	s_softkill_tid = - 1		3919326	0		=			
ANR	3919437	Identifier	s_softkill_tid		3919326	0					
ANR	3919438	UnaryOperationExpression	- 1		3919326	1					
ANR	3919439	UnaryOperator	-		3919326	0					
ANR	3919440	PrimaryExpression	1		3919326	1					
ANR	3919441	ReturnType	void		3919326	1					
ANR	3919442	Identifier	Starter :: cancelKillTimer		3919326	2					
ANR	3919443	ParameterList			3919326	3					
ANR	3919444	CFGEntryNode	ENTRY		3919326		True				
ANR	3919445	CFGExitNode	EXIT		3919326		True				
ANR	3919446	Symbol	s_kill_tid		3919326						
ANR	3919447	Symbol	* daemonCore		3919326						
ANR	3919448	Symbol	daemonCore		3919326						
ANR	3919449	Symbol	s_softkill_tid		3919326						
ANR	3919450	Symbol	rval		3919326						
ANR	3919451	Symbol	D_FULLDEBUG		3919326						
ANR	3919452	Symbol	daemonCore -> Cancel_Timer		3919326						
ANR	3919453	Function	Starter :: sigkillStarter	1359:0:32423:32925							
ANR	3919454	FunctionDef	Starter :: sigkillStarter ()		3919453	0					
ANR	3919455	CompoundStatement		1361:0:32460:32925	3919453	0					
ANR	3919456	IfStatement	if ( active ( ) )		3919453	0					
ANR	3919457	Condition	active ( )	1365:5:32568:32575	3919453	0	True				
ANR	3919458	CallExpression	active ( )		3919453	0					
ANR	3919459	Callee	active		3919453	0					
ANR	3919460	Identifier	active		3919453	0					
ANR	3919461	ArgumentList			3919453	1					
ANR	3919462	CompoundStatement		5:16:118:118	3919453	1					
ANR	3919463	Statement	dprintf	1366:2:32583:32589	3919453	0	True				
ANR	3919464	Statement	(	1366:9:32590:32590	3919453	1	True				
ANR	3919465	Statement	D_ALWAYS	1366:11:32592:32599	3919453	2	True				
ANR	3919466	Statement	","	1366:19:32600:32600	3919453	3	True				
ANR	3919467	Statement	"""starter (pid %d) is not responding to the """	1366:21:32602:32645	3919453	4	True				
ANR	3919468	Statement	"""request to hardkill its job.  The startd will now """	1367:5:32652:32703	3919453	5	True				
ANR	3919469	Statement	"""directly hard kill the starter and all its """	1368:5:32710:32754	3919453	6	True				
ANR	3919470	Statement	"""decendents.\\n"""	1369:5:32761:32775	3919453	7	True				
ANR	3919471	Statement	","	1369:20:32776:32776	3919453	8	True				
ANR	3919472	Statement	s_pid	1369:22:32778:32782	3919453	9	True				
ANR	3919473	Statement	)	1369:28:32784:32784	3919453	10	True				
ANR	3919474	ExpressionStatement		1369:29:32785:32785	3919453	11	True				
ANR	3919475	ExpressionStatement	killkids ( SIGKILL )	1372:2:32832:32851	3919453	12	True				
ANR	3919476	CallExpression	killkids ( SIGKILL )		3919453	0					
ANR	3919477	Callee	killkids		3919453	0					
ANR	3919478	Identifier	killkids		3919453	0					
ANR	3919479	ArgumentList	SIGKILL		3919453	1					
ANR	3919480	Argument	SIGKILL		3919453	0					
ANR	3919481	Identifier	SIGKILL		3919453	0					
ANR	3919482	ExpressionStatement	killpg ( SIGKILL )	1375:2:32903:32920	3919453	13	True				
ANR	3919483	CallExpression	killpg ( SIGKILL )		3919453	0					
ANR	3919484	Callee	killpg		3919453	0					
ANR	3919485	Identifier	killpg		3919453	0					
ANR	3919486	ArgumentList	SIGKILL		3919453	1					
ANR	3919487	Argument	SIGKILL		3919453	0					
ANR	3919488	Identifier	SIGKILL		3919453	0					
ANR	3919489	ReturnType	void		3919453	1					
ANR	3919490	Identifier	Starter :: sigkillStarter		3919453	2					
ANR	3919491	ParameterList			3919453	3					
ANR	3919492	CFGEntryNode	ENTRY		3919453		True				
ANR	3919493	CFGExitNode	EXIT		3919453		True				
ANR	3919494	Symbol	active		3919453						
ANR	3919495	Symbol	SIGKILL		3919453						
ANR	3919496	Function	Starter :: softkillTimeout	1379:0:32928:33121							
ANR	3919497	FunctionDef	Starter :: softkillTimeout ()		3919496	0					
ANR	3919498	CompoundStatement		1381:0:32966:33121	3919496	0					
ANR	3919499	ExpressionStatement	s_softkill_tid = - 1	1382:1:32969:32988	3919496	0	True				
ANR	3919500	AssignmentExpression	s_softkill_tid = - 1		3919496	0		=			
ANR	3919501	Identifier	s_softkill_tid		3919496	0					
ANR	3919502	UnaryOperationExpression	- 1		3919496	1					
ANR	3919503	UnaryOperator	-		3919496	0					
ANR	3919504	PrimaryExpression	1		3919496	1					
ANR	3919505	IfStatement	if ( active ( ) )		3919496	1					
ANR	3919506	Condition	active ( )	1383:5:32995:33002	3919496	0	True				
ANR	3919507	CallExpression	active ( )		3919496	0					
ANR	3919508	Callee	active		3919496	0					
ANR	3919509	Identifier	active		3919496	0					
ANR	3919510	ArgumentList			3919496	1					
ANR	3919511	CompoundStatement		3:16:39:39	3919496	1					
ANR	3919512	ExpressionStatement	"dprintf ( D_ALWAYS , ""max vacate time expired.  Escalating to a fast shutdown of the job.\\n"" )"	1384:2:33010:33102	3919496	0	True				
ANR	3919513	CallExpression	"dprintf ( D_ALWAYS , ""max vacate time expired.  Escalating to a fast shutdown of the job.\\n"" )"		3919496	0					
ANR	3919514	Callee	dprintf		3919496	0					
ANR	3919515	Identifier	dprintf		3919496	0					
ANR	3919516	ArgumentList	D_ALWAYS		3919496	1					
ANR	3919517	Argument	D_ALWAYS		3919496	0					
ANR	3919518	Identifier	D_ALWAYS		3919496	0					
ANR	3919519	Argument	"""max vacate time expired.  Escalating to a fast shutdown of the job.\\n"""		3919496	1					
ANR	3919520	PrimaryExpression	"""max vacate time expired.  Escalating to a fast shutdown of the job.\\n"""		3919496	0					
ANR	3919521	ExpressionStatement	killHard ( )	1385:2:33106:33116	3919496	1	True				
ANR	3919522	CallExpression	killHard ( )		3919496	0					
ANR	3919523	Callee	killHard		3919496	0					
ANR	3919524	Identifier	killHard		3919496	0					
ANR	3919525	ArgumentList			3919496	1					
ANR	3919526	ReturnType	void		3919496	1					
ANR	3919527	Identifier	Starter :: softkillTimeout		3919496	2					
ANR	3919528	ParameterList			3919496	3					
ANR	3919529	CFGEntryNode	ENTRY		3919496		True				
ANR	3919530	CFGExitNode	EXIT		3919496		True				
ANR	3919531	Symbol	s_softkill_tid		3919496						
ANR	3919532	Symbol	D_ALWAYS		3919496						
ANR	3919533	Symbol	active		3919496						
ANR	3919534	Function	Starter :: holdJob	1389:0:33124:33796							
ANR	3919535	FunctionDef	"Starter :: holdJob (char const * hold_reason , int hold_code , int hold_subcode)"		3919534	0					
ANR	3919536	CompoundStatement		1391:0:33202:33796	3919534	0					
ANR	3919537	IfStatement	if ( ! s_is_dc )		3919534	0					
ANR	3919538	Condition	! s_is_dc	1392:5:33209:33216	3919534	0	True				
ANR	3919539	UnaryOperationExpression	! s_is_dc		3919534	0					
ANR	3919540	UnaryOperator	!		3919534	0					
ANR	3919541	Identifier	s_is_dc		3919534	1					
ANR	3919542	CompoundStatement		2:16:17:17	3919534	1					
ANR	3919543	ReturnStatement	return false ;	1393:2:33224:33236	3919534	0	True				
ANR	3919544	Identifier	false		3919534	0					
ANR	3919545	IfStatement	if ( m_hold_job_cb )		3919534	1					
ANR	3919546	Condition	m_hold_job_cb	1395:5:33301:33313	3919534	0	True				
ANR	3919547	Identifier	m_hold_job_cb		3919534	0					
ANR	3919548	CompoundStatement		5:21:114:114	3919534	1					
ANR	3919549	ExpressionStatement	"dprintf ( D_ALWAYS , ""holdJob() called when operation already in progress (starter pid %d).\\n"" , s_pid )"	1396:2:33321:33419	3919534	0	True				
ANR	3919550	CallExpression	"dprintf ( D_ALWAYS , ""holdJob() called when operation already in progress (starter pid %d).\\n"" , s_pid )"		3919534	0					
ANR	3919551	Callee	dprintf		3919534	0					
ANR	3919552	Identifier	dprintf		3919534	0					
ANR	3919553	ArgumentList	D_ALWAYS		3919534	1					
ANR	3919554	Argument	D_ALWAYS		3919534	0					
ANR	3919555	Identifier	D_ALWAYS		3919534	0					
ANR	3919556	Argument	"""holdJob() called when operation already in progress (starter pid %d).\\n"""		3919534	1					
ANR	3919557	PrimaryExpression	"""holdJob() called when operation already in progress (starter pid %d).\\n"""		3919534	0					
ANR	3919558	Argument	s_pid		3919534	2					
ANR	3919559	Identifier	s_pid		3919534	0					
ANR	3919560	ReturnStatement	return true ;	1397:2:33423:33434	3919534	1	True				
ANR	3919561	Identifier	true		3919534	0					
ANR	3919562	IdentifierDeclStatement	classy_counted_ptr < DCStarter > starter = new DCStarter ( getIpAddr ( ) ) ;	1400:1:33441:33507	3919534	2	True				
ANR	3919563	IdentifierDecl	starter = new DCStarter ( getIpAddr ( ) )		3919534	0					
ANR	3919564	IdentifierDeclType	classy_counted_ptr < DCStarter >		3919534	0					
ANR	3919565	Identifier	starter		3919534	1					
ANR	3919566	AssignmentExpression	starter = new DCStarter ( getIpAddr ( ) )		3919534	2		=			
ANR	3919567	Identifier	starter		3919534	0					
ANR	3919568	CallExpression	getIpAddr ( )		3919534	1					
ANR	3919569	Callee	getIpAddr		3919534	0					
ANR	3919570	Identifier	getIpAddr		3919534	0					
ANR	3919571	ArgumentList			3919534	1					
ANR	3919572	IdentifierDeclStatement	"classy_counted_ptr < StarterHoldJobMsg > msg = new StarterHoldJobMsg ( hold_reason , hold_code , hold_subcode ) ;"	1401:1:33510:33611	3919534	3	True				
ANR	3919573	IdentifierDecl	"msg = new StarterHoldJobMsg ( hold_reason , hold_code , hold_subcode )"		3919534	0					
ANR	3919574	IdentifierDeclType	classy_counted_ptr < StarterHoldJobMsg >		3919534	0					
ANR	3919575	Identifier	msg		3919534	1					
ANR	3919576	AssignmentExpression	"msg = new StarterHoldJobMsg ( hold_reason , hold_code , hold_subcode )"		3919534	2		=			
ANR	3919577	Identifier	msg		3919534	0					
ANR	3919578	Expression	"hold_reason , hold_code , hold_subcode"		3919534	1					
ANR	3919579	Identifier	hold_reason		3919534	0					
ANR	3919580	Expression	"hold_code , hold_subcode"		3919534	1					
ANR	3919581	Identifier	hold_code		3919534	0					
ANR	3919582	Identifier	hold_subcode		3919534	1					
ANR	3919583	ExpressionStatement	"m_hold_job_cb = new DCMsgCallback ( ( DCMsgCallback :: CppFunction ) & Starter :: holdJobCallback , this )"	1403:1:33615:33711	3919534	4	True				
ANR	3919584	AssignmentExpression	"m_hold_job_cb = new DCMsgCallback ( ( DCMsgCallback :: CppFunction ) & Starter :: holdJobCallback , this )"		3919534	0		=			
ANR	3919585	Identifier	m_hold_job_cb		3919534	0					
ANR	3919586	Expression	"( DCMsgCallback :: CppFunction ) & Starter :: holdJobCallback , this"		3919534	1					
ANR	3919587	CastExpression	( DCMsgCallback :: CppFunction ) & Starter :: holdJobCallback		3919534	0					
ANR	3919588	CastTarget	DCMsgCallback :: CppFunction		3919534	0					
ANR	3919589	UnaryOperationExpression	& Starter :: holdJobCallback		3919534	1					
ANR	3919590	UnaryOperator	&		3919534	0					
ANR	3919591	Identifier	Starter :: holdJobCallback		3919534	1					
ANR	3919592	Identifier	this		3919534	1					
ANR	3919593	ExpressionStatement	msg -> setCallback ( m_hold_job_cb )	1405:1:33715:33748	3919534	5	True				
ANR	3919594	CallExpression	msg -> setCallback ( m_hold_job_cb )		3919534	0					
ANR	3919595	Callee	msg -> setCallback		3919534	0					
ANR	3919596	PtrMemberAccess	msg -> setCallback		3919534	0					
ANR	3919597	Identifier	msg		3919534	0					
ANR	3919598	Identifier	setCallback		3919534	1					
ANR	3919599	ArgumentList	m_hold_job_cb		3919534	1					
ANR	3919600	Argument	m_hold_job_cb		3919534	0					
ANR	3919601	Identifier	m_hold_job_cb		3919534	0					
ANR	3919602	ExpressionStatement	starter -> sendMsg ( msg . get ( ) )	1407:1:33752:33779	3919534	6	True				
ANR	3919603	CallExpression	starter -> sendMsg ( msg . get ( ) )		3919534	0					
ANR	3919604	Callee	starter -> sendMsg		3919534	0					
ANR	3919605	PtrMemberAccess	starter -> sendMsg		3919534	0					
ANR	3919606	Identifier	starter		3919534	0					
ANR	3919607	Identifier	sendMsg		3919534	1					
ANR	3919608	ArgumentList	msg . get ( )		3919534	1					
ANR	3919609	Argument	msg . get ( )		3919534	0					
ANR	3919610	CallExpression	msg . get ( )		3919534	0					
ANR	3919611	Callee	msg . get		3919534	0					
ANR	3919612	MemberAccess	msg . get		3919534	0					
ANR	3919613	Identifier	msg		3919534	0					
ANR	3919614	Identifier	get		3919534	1					
ANR	3919615	ArgumentList			3919534	1					
ANR	3919616	ReturnStatement	return true ;	1409:1:33783:33794	3919534	7	True				
ANR	3919617	Identifier	true		3919534	0					
ANR	3919618	ReturnType	bool		3919534	1					
ANR	3919619	Identifier	Starter :: holdJob		3919534	2					
ANR	3919620	ParameterList	"char const * hold_reason , int hold_code , int hold_subcode"		3919534	3					
ANR	3919621	Parameter	char const * hold_reason	1390:17:33146:33168	3919534	0	True				
ANR	3919622	ParameterType	char const *		3919534	0					
ANR	3919623	Identifier	hold_reason		3919534	1					
ANR	3919624	Parameter	int hold_code	1390:41:33170:33182	3919534	1	True				
ANR	3919625	ParameterType	int		3919534	0					
ANR	3919626	Identifier	hold_code		3919534	1					
ANR	3919627	Parameter	int hold_subcode	1390:55:33184:33199	3919534	2	True				
ANR	3919628	ParameterType	int		3919534	0					
ANR	3919629	Identifier	hold_subcode		3919534	1					
ANR	3919630	CFGEntryNode	ENTRY		3919534		True				
ANR	3919631	CFGExitNode	EXIT		3919534		True				
ANR	3919632	Symbol	msg		3919534						
ANR	3919633	Symbol	getIpAddr		3919534						
ANR	3919634	Symbol	starter		3919534						
ANR	3919635	Symbol	false		3919534						
ANR	3919636	Symbol	m_hold_job_cb		3919534						
ANR	3919637	Symbol	D_ALWAYS		3919534						
ANR	3919638	Symbol	this		3919534						
ANR	3919639	Symbol	hold_reason		3919534						
ANR	3919640	Symbol	s_is_dc		3919534						
ANR	3919641	Symbol	hold_subcode		3919534						
ANR	3919642	Symbol	hold_code		3919534						
ANR	3919643	Symbol	& Starter :: holdJobCallback		3919534						
ANR	3919644	Symbol	true		3919534						
ANR	3919645	Symbol	msg . get		3919534						
ANR	3919646	Symbol	s_pid		3919534						
ANR	3919647	Function	Starter :: holdJobCallback	1412:0:33799:34109							
ANR	3919648	FunctionDef	Starter :: holdJobCallback (DCMsgCallback * cb)		3919647	0					
ANR	3919649	CompoundStatement		1414:0:33848:34109	3919647	0					
ANR	3919650	ExpressionStatement	ASSERT ( m_hold_job_cb == cb )	1415:1:33851:33880	3919647	0	True				
ANR	3919651	CallExpression	ASSERT ( m_hold_job_cb == cb )		3919647	0					
ANR	3919652	Callee	ASSERT		3919647	0					
ANR	3919653	Identifier	ASSERT		3919647	0					
ANR	3919654	ArgumentList	m_hold_job_cb == cb		3919647	1					
ANR	3919655	Argument	m_hold_job_cb == cb		3919647	0					
ANR	3919656	EqualityExpression	m_hold_job_cb == cb		3919647	0		==			
ANR	3919657	Identifier	m_hold_job_cb		3919647	0					
ANR	3919658	Identifier	cb		3919647	1					
ANR	3919659	ExpressionStatement	m_hold_job_cb = NULL	1416:1:33883:33903	3919647	1	True				
ANR	3919660	AssignmentExpression	m_hold_job_cb = NULL		3919647	0		=			
ANR	3919661	Identifier	m_hold_job_cb		3919647	0					
ANR	3919662	Identifier	NULL		3919647	1					
ANR	3919663	ExpressionStatement	ASSERT ( cb -> getMessage ( ) )	1418:1:33907:33933	3919647	2	True				
ANR	3919664	CallExpression	ASSERT ( cb -> getMessage ( ) )		3919647	0					
ANR	3919665	Callee	ASSERT		3919647	0					
ANR	3919666	Identifier	ASSERT		3919647	0					
ANR	3919667	ArgumentList	cb -> getMessage ( )		3919647	1					
ANR	3919668	Argument	cb -> getMessage ( )		3919647	0					
ANR	3919669	CallExpression	cb -> getMessage ( )		3919647	0					
ANR	3919670	Callee	cb -> getMessage		3919647	0					
ANR	3919671	PtrMemberAccess	cb -> getMessage		3919647	0					
ANR	3919672	Identifier	cb		3919647	0					
ANR	3919673	Identifier	getMessage		3919647	1					
ANR	3919674	ArgumentList			3919647	1					
ANR	3919675	IfStatement	if ( cb -> getMessage ( ) -> deliveryStatus ( ) != DCMsg :: DELIVERY_SUCCEEDED )		3919647	3					
ANR	3919676	Condition	cb -> getMessage ( ) -> deliveryStatus ( ) != DCMsg :: DELIVERY_SUCCEEDED	1419:5:33940:34002	3919647	0	True				
ANR	3919677	EqualityExpression	cb -> getMessage ( ) -> deliveryStatus ( ) != DCMsg :: DELIVERY_SUCCEEDED		3919647	0		!=			
ANR	3919678	CallExpression	cb -> getMessage ( ) -> deliveryStatus ( )		3919647	0					
ANR	3919679	Callee	cb -> getMessage ( ) -> deliveryStatus		3919647	0					
ANR	3919680	PtrMemberAccess	cb -> getMessage ( ) -> deliveryStatus		3919647	0					
ANR	3919681	CallExpression	cb -> getMessage ( )		3919647	0					
ANR	3919682	Callee	cb -> getMessage		3919647	0					
ANR	3919683	PtrMemberAccess	cb -> getMessage		3919647	0					
ANR	3919684	Identifier	cb		3919647	0					
ANR	3919685	Identifier	getMessage		3919647	1					
ANR	3919686	ArgumentList			3919647	1					
ANR	3919687	Identifier	deliveryStatus		3919647	1					
ANR	3919688	ArgumentList			3919647	1					
ANR	3919689	Identifier	DCMsg :: DELIVERY_SUCCEEDED		3919647	1					
ANR	3919690	CompoundStatement		6:71:157:157	3919647	1					
ANR	3919691	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to hold job (starter pid %d), so killing it.\\n"" , s_pid )"	1420:2:34010:34090	3919647	0	True				
ANR	3919692	CallExpression	"dprintf ( D_ALWAYS , ""Failed to hold job (starter pid %d), so killing it.\\n"" , s_pid )"		3919647	0					
ANR	3919693	Callee	dprintf		3919647	0					
ANR	3919694	Identifier	dprintf		3919647	0					
ANR	3919695	ArgumentList	D_ALWAYS		3919647	1					
ANR	3919696	Argument	D_ALWAYS		3919647	0					
ANR	3919697	Identifier	D_ALWAYS		3919647	0					
ANR	3919698	Argument	"""Failed to hold job (starter pid %d), so killing it.\\n"""		3919647	1					
ANR	3919699	PrimaryExpression	"""Failed to hold job (starter pid %d), so killing it.\\n"""		3919647	0					
ANR	3919700	Argument	s_pid		3919647	2					
ANR	3919701	Identifier	s_pid		3919647	0					
ANR	3919702	ExpressionStatement	killSoft ( )	1421:2:34094:34104	3919647	1	True				
ANR	3919703	CallExpression	killSoft ( )		3919647	0					
ANR	3919704	Callee	killSoft		3919647	0					
ANR	3919705	Identifier	killSoft		3919647	0					
ANR	3919706	ArgumentList			3919647	1					
ANR	3919707	ReturnType	void		3919647	1					
ANR	3919708	Identifier	Starter :: holdJobCallback		3919647	2					
ANR	3919709	ParameterList	DCMsgCallback * cb		3919647	3					
ANR	3919710	Parameter	DCMsgCallback * cb	1413:25:33829:33845	3919647	0	True				
ANR	3919711	ParameterType	DCMsgCallback *		3919647	0					
ANR	3919712	Identifier	cb		3919647	1					
ANR	3919713	CFGEntryNode	ENTRY		3919647		True				
ANR	3919714	CFGExitNode	EXIT		3919647		True				
ANR	3919715	Symbol	DCMsg :: DELIVERY_SUCCEEDED		3919647						
ANR	3919716	Symbol	cb -> getMessage		3919647						
ANR	3919717	Symbol	NULL		3919647						
ANR	3919718	Symbol	cb -> getMessage ( ) -> deliveryStatus		3919647						
ANR	3919719	Symbol	* cb		3919647						
ANR	3919720	Symbol	m_hold_job_cb		3919647						
ANR	3919721	Symbol	D_ALWAYS		3919647						
ANR	3919722	Symbol	* * cb		3919647						
ANR	3919723	Symbol	* cb -> getMessage		3919647						
ANR	3919724	Symbol	s_pid		3919647						
ANR	3919725	Symbol	cb		3919647						
