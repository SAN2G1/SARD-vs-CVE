command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1811946	File	data/converged/CVE-2011-4930_htcondor/log_rotate.cpp								
ANR	1811947	DeclStmt									
ANR	1811948	Decl							char	char [ PATH_MAX ]	searchLogName
ANR	1811949	DeclStmt									
ANR	1811950	Decl							char	char [ PATH_MAX ]	logBaseName
ANR	1811951	DeclStmt									
ANR	1811952	Decl							char	char [ PATH_MAX ]	baseDirName
ANR	1811953	DeclStmt									
ANR	1811954	Decl							int	int	isInitialized
ANR	1811955	DeclStmt									
ANR	1811956	Decl							int	int	numLogs
ANR	1811957	DeclStmt									
ANR	1811958	Decl							char	char * ( )	createTimestampString
ANR	1811959	Function	scandirectory	45:0:1264:2231							
ANR	1811960	FunctionDef	"scandirectory (const char * dir , struct dirent * * * namelist , int ( * select ) ( const struct dirent * ) , int ( * compar ) ( const void * , const void * ))"		1811959	0					
ANR	1811961	CompoundStatement		47:50:1426:2231	1811959	0					
ANR	1811962	IdentifierDeclStatement	DIR * d ;	48:1:1429:1435	1811959	0	True				
ANR	1811963	IdentifierDecl	* d		1811959	0					
ANR	1811964	IdentifierDeclType	DIR *		1811959	0					
ANR	1811965	Identifier	d		1811959	1					
ANR	1811966	IdentifierDeclStatement	struct dirent * entry ;	49:1:1438:1458	1811959	1	True				
ANR	1811967	IdentifierDecl	* entry		1811959	0					
ANR	1811968	IdentifierDeclType	struct dirent *		1811959	0					
ANR	1811969	Identifier	entry		1811959	1					
ANR	1811970	Statement	register	50:1:1461:1468	1811959	2	True				
ANR	1811971	IdentifierDeclStatement	int i = 0 ;	50:10:1470:1479	1811959	3	True				
ANR	1811972	IdentifierDecl	i = 0		1811959	0					
ANR	1811973	IdentifierDeclType	int		1811959	0					
ANR	1811974	Identifier	i		1811959	1					
ANR	1811975	AssignmentExpression	i = 0		1811959	2		=			
ANR	1811976	Identifier	i		1811959	0					
ANR	1811977	PrimaryExpression	0		1811959	1					
ANR	1811978	IdentifierDeclStatement	size_t entrysize ;	51:1:1482:1498	1811959	4	True				
ANR	1811979	IdentifierDecl	entrysize		1811959	0					
ANR	1811980	IdentifierDeclType	size_t		1811959	0					
ANR	1811981	Identifier	entrysize		1811959	1					
ANR	1811982	IfStatement	if ( ( d = opendir ( dir ) ) == NULL )		1811959	5					
ANR	1811983	Condition	( d = opendir ( dir ) ) == NULL	53:5:1506:1529	1811959	0	True				
ANR	1811984	EqualityExpression	( d = opendir ( dir ) ) == NULL		1811959	0		==			
ANR	1811985	AssignmentExpression	d = opendir ( dir )		1811959	0		=			
ANR	1811986	Identifier	d		1811959	0					
ANR	1811987	CallExpression	opendir ( dir )		1811959	1					
ANR	1811988	Callee	opendir		1811959	0					
ANR	1811989	Identifier	opendir		1811959	0					
ANR	1811990	ArgumentList	dir		1811959	1					
ANR	1811991	Argument	dir		1811959	0					
ANR	1811992	Identifier	dir		1811959	0					
ANR	1811993	Identifier	NULL		1811959	1					
ANR	1811994	ReturnStatement	return ( - 1 ) ;	54:2:1534:1544	1811959	1	True				
ANR	1811995	UnaryOperationExpression	- 1		1811959	0					
ANR	1811996	UnaryOperator	-		1811959	0					
ANR	1811997	PrimaryExpression	1		1811959	1					
ANR	1811998	ExpressionStatement	* namelist = NULL	56:1:1548:1562	1811959	6	True				
ANR	1811999	AssignmentExpression	* namelist = NULL		1811959	0		=			
ANR	1812000	UnaryOperationExpression	* namelist		1811959	0					
ANR	1812001	UnaryOperator	*		1811959	0					
ANR	1812002	Identifier	namelist		1811959	1					
ANR	1812003	Identifier	NULL		1811959	1					
ANR	1812004	WhileStatement	while ( ( entry = readdir ( d ) ) != NULL )		1811959	7					
ANR	1812005	Condition	( entry = readdir ( d ) ) != NULL	57:8:1572:1597	1811959	0	True				
ANR	1812006	EqualityExpression	( entry = readdir ( d ) ) != NULL		1811959	0		!=			
ANR	1812007	AssignmentExpression	entry = readdir ( d )		1811959	0		=			
ANR	1812008	Identifier	entry		1811959	0					
ANR	1812009	CallExpression	readdir ( d )		1811959	1					
ANR	1812010	Callee	readdir		1811959	0					
ANR	1812011	Identifier	readdir		1811959	0					
ANR	1812012	ArgumentList	d		1811959	1					
ANR	1812013	Argument	d		1811959	0					
ANR	1812014	Identifier	d		1811959	0					
ANR	1812015	Identifier	NULL		1811959	1					
ANR	1812016	CompoundStatement		11:36:173:173	1811959	1					
ANR	1812017	IfStatement	if ( select == NULL || ( select != NULL && ( * select ) ( entry ) ) )		1811959	0					
ANR	1812018	Condition	select == NULL || ( select != NULL && ( * select ) ( entry ) )	58:6:1608:1661	1811959	0	True				
ANR	1812019	OrExpression	select == NULL || ( select != NULL && ( * select ) ( entry ) )		1811959	0		||			
ANR	1812020	EqualityExpression	select == NULL		1811959	0		==			
ANR	1812021	Identifier	select		1811959	0					
ANR	1812022	Identifier	NULL		1811959	1					
ANR	1812023	AndExpression	select != NULL && ( * select ) ( entry )		1811959	1		&&			
ANR	1812024	EqualityExpression	select != NULL		1811959	0		!=			
ANR	1812025	Identifier	select		1811959	0					
ANR	1812026	Identifier	NULL		1811959	1					
ANR	1812027	CallExpression	( * select ) ( entry )		1811959	1					
ANR	1812028	Callee	* select		1811959	0					
ANR	1812029	UnaryOperationExpression	* select		1811959	0					
ANR	1812030	UnaryOperator	*		1811959	0					
ANR	1812031	Identifier	select		1811959	1					
ANR	1812032	ArgumentList	entry		1811959	1					
ANR	1812033	Argument	entry		1811959	0					
ANR	1812034	Identifier	entry		1811959	0					
ANR	1812035	CompoundStatement		12:62:237:237	1811959	1					
ANR	1812036	ExpressionStatement	"* namelist = ( struct dirent * * ) realloc ( ( void * ) ( * namelist ) , ( size_t ) ( ( i + 1 ) * sizeof ( struct dirent * ) ) )"	59:3:1669:1766	1811959	0	True				
ANR	1812037	AssignmentExpression	"* namelist = ( struct dirent * * ) realloc ( ( void * ) ( * namelist ) , ( size_t ) ( ( i + 1 ) * sizeof ( struct dirent * ) ) )"		1811959	0		=			
ANR	1812038	UnaryOperationExpression	* namelist		1811959	0					
ANR	1812039	UnaryOperator	*		1811959	0					
ANR	1812040	Identifier	namelist		1811959	1					
ANR	1812041	CastExpression	"( struct dirent * * ) realloc ( ( void * ) ( * namelist ) , ( size_t ) ( ( i + 1 ) * sizeof ( struct dirent * ) ) )"		1811959	1					
ANR	1812042	CastTarget	struct dirent * *		1811959	0					
ANR	1812043	CallExpression	"realloc ( ( void * ) ( * namelist ) , ( size_t ) ( ( i + 1 ) * sizeof ( struct dirent * ) ) )"		1811959	1					
ANR	1812044	Callee	realloc		1811959	0					
ANR	1812045	Identifier	realloc		1811959	0					
ANR	1812046	ArgumentList	( void * ) ( * namelist )		1811959	1					
ANR	1812047	Argument	( void * ) ( * namelist )		1811959	0					
ANR	1812048	CastExpression	( void * ) ( * namelist )		1811959	0					
ANR	1812049	CastTarget	void *		1811959	0					
ANR	1812050	UnaryOperationExpression	* namelist		1811959	1					
ANR	1812051	UnaryOperator	*		1811959	0					
ANR	1812052	Identifier	namelist		1811959	1					
ANR	1812053	Argument	( size_t ) ( ( i + 1 ) * sizeof ( struct dirent * ) )		1811959	1					
ANR	1812054	CastExpression	( size_t ) ( ( i + 1 ) * sizeof ( struct dirent * ) )		1811959	0					
ANR	1812055	CastTarget	size_t		1811959	0					
ANR	1812056	MultiplicativeExpression	( i + 1 ) * sizeof ( struct dirent * )		1811959	1		*			
ANR	1812057	AdditiveExpression	i + 1		1811959	0		+			
ANR	1812058	Identifier	i		1811959	0					
ANR	1812059	PrimaryExpression	1		1811959	1					
ANR	1812060	SizeofExpression	sizeof ( struct dirent * )		1811959	1					
ANR	1812061	Sizeof	sizeof		1811959	0					
ANR	1812062	SizeofOperand	struct dirent *		1811959	1					
ANR	1812063	IfStatement	if ( * namelist == NULL )		1811959	1					
ANR	1812064	Condition	* namelist == NULL	60:7:1775:1791	1811959	0	True				
ANR	1812065	EqualityExpression	* namelist == NULL		1811959	0		==			
ANR	1812066	UnaryOperationExpression	* namelist		1811959	0					
ANR	1812067	UnaryOperator	*		1811959	0					
ANR	1812068	Identifier	namelist		1811959	1					
ANR	1812069	Identifier	NULL		1811959	1					
ANR	1812070	ReturnStatement	return - 1 ;	61:4:1799:1808	1811959	1	True				
ANR	1812071	UnaryOperationExpression	- 1		1811959	0					
ANR	1812072	UnaryOperator	-		1811959	0					
ANR	1812073	PrimaryExpression	1		1811959	1					
ANR	1812074	ExpressionStatement	entrysize = sizeof ( struct dirent ) - sizeof ( entry -> d_name ) + strlen ( entry -> d_name ) + 1	62:3:1813:1890	1811959	2	True				
ANR	1812075	AssignmentExpression	entrysize = sizeof ( struct dirent ) - sizeof ( entry -> d_name ) + strlen ( entry -> d_name ) + 1		1811959	0		=			
ANR	1812076	Identifier	entrysize		1811959	0					
ANR	1812077	AdditiveExpression	sizeof ( struct dirent ) - sizeof ( entry -> d_name ) + strlen ( entry -> d_name ) + 1		1811959	1		-			
ANR	1812078	SizeofExpression	sizeof ( struct dirent )		1811959	0					
ANR	1812079	Sizeof	sizeof		1811959	0					
ANR	1812080	SizeofOperand	struct dirent		1811959	1					
ANR	1812081	AdditiveExpression	sizeof ( entry -> d_name ) + strlen ( entry -> d_name ) + 1		1811959	1		+			
ANR	1812082	SizeofExpression	sizeof ( entry -> d_name )		1811959	0					
ANR	1812083	Sizeof	sizeof		1811959	0					
ANR	1812084	PtrMemberAccess	entry -> d_name		1811959	1					
ANR	1812085	Identifier	entry		1811959	0					
ANR	1812086	Identifier	d_name		1811959	1					
ANR	1812087	AdditiveExpression	strlen ( entry -> d_name ) + 1		1811959	1		+			
ANR	1812088	CallExpression	strlen ( entry -> d_name )		1811959	0					
ANR	1812089	Callee	strlen		1811959	0					
ANR	1812090	Identifier	strlen		1811959	0					
ANR	1812091	ArgumentList	entry -> d_name		1811959	1					
ANR	1812092	Argument	entry -> d_name		1811959	0					
ANR	1812093	PtrMemberAccess	entry -> d_name		1811959	0					
ANR	1812094	Identifier	entry		1811959	0					
ANR	1812095	Identifier	d_name		1811959	1					
ANR	1812096	PrimaryExpression	1		1811959	1					
ANR	1812097	ExpressionStatement	( * namelist ) [ i ] = ( struct dirent * ) malloc ( entrysize )	63:3:1895:1944	1811959	3	True				
ANR	1812098	AssignmentExpression	( * namelist ) [ i ] = ( struct dirent * ) malloc ( entrysize )		1811959	0		=			
ANR	1812099	ArrayIndexing	( * namelist ) [ i ]		1811959	0					
ANR	1812100	UnaryOperationExpression	* namelist		1811959	0					
ANR	1812101	UnaryOperator	*		1811959	0					
ANR	1812102	Identifier	namelist		1811959	1					
ANR	1812103	Identifier	i		1811959	1					
ANR	1812104	CastExpression	( struct dirent * ) malloc ( entrysize )		1811959	1					
ANR	1812105	CastTarget	struct dirent *		1811959	0					
ANR	1812106	CallExpression	malloc ( entrysize )		1811959	1					
ANR	1812107	Callee	malloc		1811959	0					
ANR	1812108	Identifier	malloc		1811959	0					
ANR	1812109	ArgumentList	entrysize		1811959	1					
ANR	1812110	Argument	entrysize		1811959	0					
ANR	1812111	Identifier	entrysize		1811959	0					
ANR	1812112	IfStatement	if ( ( * namelist ) [ i ] == NULL )		1811959	4					
ANR	1812113	Condition	( * namelist ) [ i ] == NULL	64:7:1953:1974	1811959	0	True				
ANR	1812114	EqualityExpression	( * namelist ) [ i ] == NULL		1811959	0		==			
ANR	1812115	ArrayIndexing	( * namelist ) [ i ]		1811959	0					
ANR	1812116	UnaryOperationExpression	* namelist		1811959	0					
ANR	1812117	UnaryOperator	*		1811959	0					
ANR	1812118	Identifier	namelist		1811959	1					
ANR	1812119	Identifier	i		1811959	1					
ANR	1812120	Identifier	NULL		1811959	1					
ANR	1812121	ReturnStatement	return ( - 1 ) ;	65:4:1982:1992	1811959	1	True				
ANR	1812122	UnaryOperationExpression	- 1		1811959	0					
ANR	1812123	UnaryOperator	-		1811959	0					
ANR	1812124	PrimaryExpression	1		1811959	1					
ANR	1812125	ExpressionStatement	"memcpy ( ( * namelist ) [ i ] , entry , entrysize )"	66:3:1997:2037	1811959	5	True				
ANR	1812126	CallExpression	"memcpy ( ( * namelist ) [ i ] , entry , entrysize )"		1811959	0					
ANR	1812127	Callee	memcpy		1811959	0					
ANR	1812128	Identifier	memcpy		1811959	0					
ANR	1812129	ArgumentList	( * namelist ) [ i ]		1811959	1					
ANR	1812130	Argument	( * namelist ) [ i ]		1811959	0					
ANR	1812131	ArrayIndexing	( * namelist ) [ i ]		1811959	0					
ANR	1812132	UnaryOperationExpression	* namelist		1811959	0					
ANR	1812133	UnaryOperator	*		1811959	0					
ANR	1812134	Identifier	namelist		1811959	1					
ANR	1812135	Identifier	i		1811959	1					
ANR	1812136	Argument	entry		1811959	1					
ANR	1812137	Identifier	entry		1811959	0					
ANR	1812138	Argument	entrysize		1811959	2					
ANR	1812139	Identifier	entrysize		1811959	0					
ANR	1812140	ExpressionStatement	i ++	67:9:2048:2051	1811959	6	True				
ANR	1812141	PostIncDecOperationExpression	i ++		1811959	0					
ANR	1812142	Identifier	i		1811959	0					
ANR	1812143	IncDec	++		1811959	1					
ANR	1812144	IfStatement	if ( closedir ( d ) )		1811959	8					
ANR	1812145	Condition	closedir ( d )	70:5:2065:2075	1811959	0	True				
ANR	1812146	CallExpression	closedir ( d )		1811959	0					
ANR	1812147	Callee	closedir		1811959	0					
ANR	1812148	Identifier	closedir		1811959	0					
ANR	1812149	ArgumentList	d		1811959	1					
ANR	1812150	Argument	d		1811959	0					
ANR	1812151	Identifier	d		1811959	0					
ANR	1812152	ReturnStatement	return - 1 ;	71:4:2083:2092	1811959	1	True				
ANR	1812153	UnaryOperationExpression	- 1		1811959	0					
ANR	1812154	UnaryOperator	-		1811959	0					
ANR	1812155	PrimaryExpression	1		1811959	1					
ANR	1812156	IfStatement	if ( i == 0 )		1811959	9					
ANR	1812157	Condition	i == 0	72:5:2099:2104	1811959	0	True				
ANR	1812158	EqualityExpression	i == 0		1811959	0		==			
ANR	1812159	Identifier	i		1811959	0					
ANR	1812160	PrimaryExpression	0		1811959	1					
ANR	1812161	ReturnStatement	return - 1 ;	73:2:2110:2119	1811959	1	True				
ANR	1812162	UnaryOperationExpression	- 1		1811959	0					
ANR	1812163	UnaryOperator	-		1811959	0					
ANR	1812164	PrimaryExpression	1		1811959	1					
ANR	1812165	IfStatement	if ( compar != NULL )		1811959	10					
ANR	1812166	Condition	compar != NULL	74:5:2126:2139	1811959	0	True				
ANR	1812167	EqualityExpression	compar != NULL		1811959	0		!=			
ANR	1812168	Identifier	compar		1811959	0					
ANR	1812169	Identifier	NULL		1811959	1					
ANR	1812170	ExpressionStatement	"qsort ( ( void * ) ( * namelist ) , ( size_t ) i , sizeof ( struct dirent * ) , compar )"	75:5:2147:2217	1811959	1	True				
ANR	1812171	CallExpression	"qsort ( ( void * ) ( * namelist ) , ( size_t ) i , sizeof ( struct dirent * ) , compar )"		1811959	0					
ANR	1812172	Callee	qsort		1811959	0					
ANR	1812173	Identifier	qsort		1811959	0					
ANR	1812174	ArgumentList	( void * ) ( * namelist )		1811959	1					
ANR	1812175	Argument	( void * ) ( * namelist )		1811959	0					
ANR	1812176	CastExpression	( void * ) ( * namelist )		1811959	0					
ANR	1812177	CastTarget	void *		1811959	0					
ANR	1812178	UnaryOperationExpression	* namelist		1811959	1					
ANR	1812179	UnaryOperator	*		1811959	0					
ANR	1812180	Identifier	namelist		1811959	1					
ANR	1812181	Argument	( size_t ) i		1811959	1					
ANR	1812182	CastExpression	( size_t ) i		1811959	0					
ANR	1812183	CastTarget	size_t		1811959	0					
ANR	1812184	Identifier	i		1811959	1					
ANR	1812185	Argument	sizeof ( struct dirent * )		1811959	2					
ANR	1812186	SizeofExpression	sizeof ( struct dirent * )		1811959	0					
ANR	1812187	Sizeof	sizeof		1811959	0					
ANR	1812188	SizeofOperand	struct dirent *		1811959	1					
ANR	1812189	Argument	compar		1811959	3					
ANR	1812190	Identifier	compar		1811959	0					
ANR	1812191	ReturnStatement	return i ;	77:1:2221:2229	1811959	11	True				
ANR	1812192	Identifier	i		1811959	0					
ANR	1812193	ReturnType	int		1811959	1					
ANR	1812194	Identifier	scandirectory		1811959	2					
ANR	1812195	ParameterList	"const char * dir , struct dirent * * * namelist , int ( * select ) ( const struct dirent * ) , int ( * compar ) ( const void * , const void * )"		1811959	3					
ANR	1812196	Parameter	const char * dir	45:18:1282:1296	1811959	0	True				
ANR	1812197	ParameterType	const char *		1811959	0					
ANR	1812198	Identifier	dir		1811959	1					
ANR	1812199	Parameter	struct dirent * * * namelist	45:35:1299:1323	1811959	1	True				
ANR	1812200	ParameterType	struct dirent * * *		1811959	0					
ANR	1812201	Identifier	namelist		1811959	1					
ANR	1812202	Parameter	int ( * select ) ( const struct dirent * )	46:12:1338:1373	1811959	2	True				
ANR	1812203	ParameterType	(( const struct dirent * ) int) *		1811959	0					
ANR	1812204	Identifier	select		1811959	1					
ANR	1812205	Parameter	"int ( * compar ) ( const void * , const void * )"	47:8:1384:1422	1811959	3	True				
ANR	1812206	ParameterType	"(( const void * , const void * ) int) *"		1811959	0					
ANR	1812207	Identifier	compar		1811959	1					
ANR	1812208	CFGEntryNode	ENTRY		1811959		True				
ANR	1812209	CFGExitNode	EXIT		1811959		True				
ANR	1812210	Symbol	* * namelist		1811959						
ANR	1812211	Symbol	malloc		1811959						
ANR	1812212	Symbol	select		1811959						
ANR	1812213	Symbol	NULL		1811959						
ANR	1812214	Symbol	d		1811959						
ANR	1812215	Symbol	* namelist		1811959						
ANR	1812216	Symbol	* select		1811959						
ANR	1812217	Symbol	entrysize		1811959						
ANR	1812218	Symbol	i		1811959						
ANR	1812219	Symbol	realloc		1811959						
ANR	1812220	Symbol	dir		1811959						
ANR	1812221	Symbol	entry -> d_name		1811959						
ANR	1812222	Symbol	entry		1811959						
ANR	1812223	Symbol	strlen		1811959						
ANR	1812224	Symbol	readdir		1811959						
ANR	1812225	Symbol	* i		1811959						
ANR	1812226	Symbol	namelist		1811959						
ANR	1812227	Symbol	opendir		1811959						
ANR	1812228	Symbol	closedir		1811959						
ANR	1812229	Symbol	compar		1811959						
ANR	1812230	Symbol	* entry		1811959						
ANR	1812231	Function	doalphasort	80:0:2234:2500							
ANR	1812232	FunctionDef	"doalphasort (const void * a , const void * b)"		1812231	0					
ANR	1812233	CompoundStatement		80:46:2280:2500	1812231	0					
ANR	1812234	IdentifierDeclStatement	const struct dirent * * d1 = ( const struct dirent * * ) a ;	81:8:2290:2341	1812231	0	True				
ANR	1812235	IdentifierDecl	* * d1 = ( const struct dirent * * ) a		1812231	0					
ANR	1812236	IdentifierDeclType	const struct dirent * *		1812231	0					
ANR	1812237	Identifier	d1		1812231	1					
ANR	1812238	AssignmentExpression	* * d1 = ( const struct dirent * * ) a		1812231	2		=			
ANR	1812239	Identifier	d1		1812231	0					
ANR	1812240	CastExpression	( const struct dirent * * ) a		1812231	1					
ANR	1812241	CastTarget	const struct dirent * *		1812231	0					
ANR	1812242	Identifier	a		1812231	1					
ANR	1812243	IdentifierDeclStatement	const struct dirent * * d2 = ( const struct dirent * * ) b ;	82:8:2351:2402	1812231	1	True				
ANR	1812244	IdentifierDecl	* * d2 = ( const struct dirent * * ) b		1812231	0					
ANR	1812245	IdentifierDeclType	const struct dirent * *		1812231	0					
ANR	1812246	Identifier	d2		1812231	1					
ANR	1812247	AssignmentExpression	* * d2 = ( const struct dirent * * ) b		1812231	2		=			
ANR	1812248	Identifier	d2		1812231	0					
ANR	1812249	CastExpression	( const struct dirent * * ) b		1812231	1					
ANR	1812250	CastTarget	const struct dirent * *		1812231	0					
ANR	1812251	Identifier	b		1812231	1					
ANR	1812252	Statement	return	83:8:2414:2419	1812231	2	True				
ANR	1812253	Statement	(	83:14:2420:2420	1812231	3	True				
ANR	1812254	Statement	strcmp	83:15:2421:2426	1812231	4	True				
ANR	1812255	Statement	(	83:21:2427:2427	1812231	5	True				
ANR	1812256	Statement	const_cast	83:22:2428:2437	1812231	6	True				
ANR	1812257	Statement	<	83:32:2438:2438	1812231	7	True				
ANR	1812258	Statement	char	83:33:2439:2442	1812231	8	True				
ANR	1812259	Statement	*	83:37:2443:2443	1812231	9	True				
ANR	1812260	Statement	>	83:38:2444:2444	1812231	10	True				
ANR	1812261	Statement	(	83:39:2445:2445	1812231	11	True				
ANR	1812262	Statement	(	83:40:2446:2446	1812231	12	True				
ANR	1812263	Statement	*	83:41:2447:2447	1812231	13	True				
ANR	1812264	Statement	d1	83:42:2448:2449	1812231	14	True				
ANR	1812265	Statement	)	83:44:2450:2450	1812231	15	True				
ANR	1812266	Statement	->	83:45:2451:2452	1812231	16	True				
ANR	1812267	Statement	d_name	83:47:2453:2458	1812231	17	True				
ANR	1812268	Statement	)	83:53:2459:2459	1812231	18	True				
ANR	1812269	Statement	","	83:54:2460:2460	1812231	19	True				
ANR	1812270	Statement	const_cast	84:2:2464:2473	1812231	20	True				
ANR	1812271	Statement	<	84:12:2474:2474	1812231	21	True				
ANR	1812272	Statement	char	84:13:2475:2478	1812231	22	True				
ANR	1812273	Statement	*	84:17:2479:2479	1812231	23	True				
ANR	1812274	Statement	>	84:18:2480:2480	1812231	24	True				
ANR	1812275	Statement	(	84:19:2481:2481	1812231	25	True				
ANR	1812276	Statement	(	84:20:2482:2482	1812231	26	True				
ANR	1812277	Statement	*	84:21:2483:2483	1812231	27	True				
ANR	1812278	Statement	d2	84:22:2484:2485	1812231	28	True				
ANR	1812279	Statement	)	84:24:2486:2486	1812231	29	True				
ANR	1812280	Statement	->	84:25:2487:2488	1812231	30	True				
ANR	1812281	Statement	d_name	84:27:2489:2494	1812231	31	True				
ANR	1812282	Statement	)	84:33:2495:2495	1812231	32	True				
ANR	1812283	Statement	)	84:34:2496:2496	1812231	33	True				
ANR	1812284	Statement	)	84:35:2497:2497	1812231	34	True				
ANR	1812285	ExpressionStatement		84:36:2498:2498	1812231	35	True				
ANR	1812286	ReturnType	int		1812231	1					
ANR	1812287	Identifier	doalphasort		1812231	2					
ANR	1812288	ParameterList	"const void * a , const void * b"		1812231	3					
ANR	1812289	Parameter	const void * a	80:16:2250:2262	1812231	0	True				
ANR	1812290	ParameterType	const void *		1812231	0					
ANR	1812291	Identifier	a		1812231	1					
ANR	1812292	Parameter	const void * b	80:31:2265:2277	1812231	1	True				
ANR	1812293	ParameterType	const void *		1812231	0					
ANR	1812294	Identifier	b		1812231	1					
ANR	1812295	CFGEntryNode	ENTRY		1812231		True				
ANR	1812296	CFGExitNode	EXIT		1812231		True				
ANR	1812297	Symbol	a		1812231						
ANR	1812298	Symbol	b		1812231						
ANR	1812299	Symbol	d1		1812231						
ANR	1812300	Symbol	d2		1812231						
ANR	1812301	Function	setBaseName	89:0:2511:3071							
ANR	1812302	FunctionDef	setBaseName (const char * baseName)		1812301	0					
ANR	1812303	CompoundStatement		89:39:2550:3071	1812301	0					
ANR	1812304	IfStatement	"if ( ( isInitialized == 1 ) && ( strcmp ( baseName , logBaseName ) != 0 ) )"		1812301	0					
ANR	1812305	Condition	"( isInitialized == 1 ) && ( strcmp ( baseName , logBaseName ) != 0 )"	92:7:2696:2755	1812301	0	True				
ANR	1812306	AndExpression	"( isInitialized == 1 ) && ( strcmp ( baseName , logBaseName ) != 0 )"		1812301	0		&&			
ANR	1812307	EqualityExpression	isInitialized == 1		1812301	0		==			
ANR	1812308	Identifier	isInitialized		1812301	0					
ANR	1812309	PrimaryExpression	1		1812301	1					
ANR	1812310	EqualityExpression	"strcmp ( baseName , logBaseName ) != 0"		1812301	1		!=			
ANR	1812311	CallExpression	"strcmp ( baseName , logBaseName )"		1812301	0					
ANR	1812312	Callee	strcmp		1812301	0					
ANR	1812313	Identifier	strcmp		1812301	0					
ANR	1812314	ArgumentList	baseName		1812301	1					
ANR	1812315	Argument	baseName		1812301	0					
ANR	1812316	Identifier	baseName		1812301	0					
ANR	1812317	Argument	logBaseName		1812301	1					
ANR	1812318	Identifier	logBaseName		1812301	0					
ANR	1812319	PrimaryExpression	0		1812301	1					
ANR	1812320	CompoundStatement		4:71:209:209	1812301	1					
ANR	1812321	ExpressionStatement	isInitialized = 0	93:2:2764:2781	1812301	0	True				
ANR	1812322	AssignmentExpression	isInitialized = 0		1812301	0		=			
ANR	1812323	Identifier	isInitialized		1812301	0					
ANR	1812324	PrimaryExpression	0		1812301	1					
ANR	1812325	IfStatement	if ( isInitialized == 0 )		1812301	1					
ANR	1812326	Condition	isInitialized == 0	95:5:2791:2808	1812301	0	True				
ANR	1812327	EqualityExpression	isInitialized == 0		1812301	0		==			
ANR	1812328	Identifier	isInitialized		1812301	0					
ANR	1812329	PrimaryExpression	0		1812301	1					
ANR	1812330	CompoundStatement		8:2:264:276	1812301	1					
ANR	1812331	IdentifierDeclStatement	char * tmpDir ;	96:2:2815:2827	1812301	0	True				
ANR	1812332	IdentifierDecl	* tmpDir		1812301	0					
ANR	1812333	IdentifierDeclType	char *		1812301	0					
ANR	1812334	Identifier	tmpDir		1812301	1					
ANR	1812335	ExpressionStatement	"sprintf ( logBaseName , ""%s"" , baseName )"	98:2:2832:2868	1812301	1	True				
ANR	1812336	CallExpression	"sprintf ( logBaseName , ""%s"" , baseName )"		1812301	0					
ANR	1812337	Callee	sprintf		1812301	0					
ANR	1812338	Identifier	sprintf		1812301	0					
ANR	1812339	ArgumentList	logBaseName		1812301	1					
ANR	1812340	Argument	logBaseName		1812301	0					
ANR	1812341	Identifier	logBaseName		1812301	0					
ANR	1812342	Argument	"""%s"""		1812301	1					
ANR	1812343	PrimaryExpression	"""%s"""		1812301	0					
ANR	1812344	Argument	baseName		1812301	2					
ANR	1812345	Identifier	baseName		1812301	0					
ANR	1812346	ExpressionStatement	tmpDir = condor_dirname ( logBaseName )	99:2:2872:2908	1812301	2	True				
ANR	1812347	AssignmentExpression	tmpDir = condor_dirname ( logBaseName )		1812301	0		=			
ANR	1812348	Identifier	tmpDir		1812301	0					
ANR	1812349	CallExpression	condor_dirname ( logBaseName )		1812301	1					
ANR	1812350	Callee	condor_dirname		1812301	0					
ANR	1812351	Identifier	condor_dirname		1812301	0					
ANR	1812352	ArgumentList	logBaseName		1812301	1					
ANR	1812353	Argument	logBaseName		1812301	0					
ANR	1812354	Identifier	logBaseName		1812301	0					
ANR	1812355	ExpressionStatement	"sprintf ( baseDirName , ""%s"" , tmpDir )"	100:2:2912:2946	1812301	3	True				
ANR	1812356	CallExpression	"sprintf ( baseDirName , ""%s"" , tmpDir )"		1812301	0					
ANR	1812357	Callee	sprintf		1812301	0					
ANR	1812358	Identifier	sprintf		1812301	0					
ANR	1812359	ArgumentList	baseDirName		1812301	1					
ANR	1812360	Argument	baseDirName		1812301	0					
ANR	1812361	Identifier	baseDirName		1812301	0					
ANR	1812362	Argument	"""%s"""		1812301	1					
ANR	1812363	PrimaryExpression	"""%s"""		1812301	0					
ANR	1812364	Argument	tmpDir		1812301	2					
ANR	1812365	Identifier	tmpDir		1812301	0					
ANR	1812366	ExpressionStatement	free ( tmpDir )	101:2:2950:2962	1812301	4	True				
ANR	1812367	CallExpression	free ( tmpDir )		1812301	0					
ANR	1812368	Callee	free		1812301	0					
ANR	1812369	Identifier	free		1812301	0					
ANR	1812370	ArgumentList	tmpDir		1812301	1					
ANR	1812371	Argument	tmpDir		1812301	0					
ANR	1812372	Identifier	tmpDir		1812301	0					
ANR	1812373	ExpressionStatement	"sprintf ( searchLogName , ""%s.*"" , ( const char * ) logBaseName )"	103:2:2979:3035	1812301	5	True				
ANR	1812374	CallExpression	"sprintf ( searchLogName , ""%s.*"" , ( const char * ) logBaseName )"		1812301	0					
ANR	1812375	Callee	sprintf		1812301	0					
ANR	1812376	Identifier	sprintf		1812301	0					
ANR	1812377	ArgumentList	searchLogName		1812301	1					
ANR	1812378	Argument	searchLogName		1812301	0					
ANR	1812379	Identifier	searchLogName		1812301	0					
ANR	1812380	Argument	"""%s.*"""		1812301	1					
ANR	1812381	PrimaryExpression	"""%s.*"""		1812301	0					
ANR	1812382	Argument	( const char * ) logBaseName		1812301	2					
ANR	1812383	CastExpression	( const char * ) logBaseName		1812301	0					
ANR	1812384	CastTarget	const char *		1812301	0					
ANR	1812385	Identifier	logBaseName		1812301	1					
ANR	1812386	ExpressionStatement	isInitialized = 1	105:2:3049:3066	1812301	6	True				
ANR	1812387	AssignmentExpression	isInitialized = 1		1812301	0		=			
ANR	1812388	Identifier	isInitialized		1812301	0					
ANR	1812389	PrimaryExpression	1		1812301	1					
ANR	1812390	ReturnType	void		1812301	1					
ANR	1812391	Identifier	setBaseName		1812301	2					
ANR	1812392	ParameterList	const char * baseName		1812301	3					
ANR	1812393	Parameter	const char * baseName	89:17:2528:2547	1812301	0	True				
ANR	1812394	ParameterType	const char *		1812301	0					
ANR	1812395	Identifier	baseName		1812301	1					
ANR	1812396	CFGEntryNode	ENTRY		1812301		True				
ANR	1812397	CFGExitNode	EXIT		1812301		True				
ANR	1812398	Symbol	strcmp		1812301						
ANR	1812399	Symbol	tmpDir		1812301						
ANR	1812400	Symbol	baseDirName		1812301						
ANR	1812401	Symbol	searchLogName		1812301						
ANR	1812402	Symbol	logBaseName		1812301						
ANR	1812403	Symbol	isInitialized		1812301						
ANR	1812404	Symbol	condor_dirname		1812301						
ANR	1812405	Symbol	baseName		1812301						
ANR	1812406	Function	rotateSingle	109:0:3074:3130							
ANR	1812407	FunctionDef	rotateSingle ()		1812406	0					
ANR	1812408	CompoundStatement		111:0:3093:3130	1812406	0					
ANR	1812409	ReturnStatement	"return rotateTimestamp ( ""old"" , 1 ) ;"	112:1:3096:3128	1812406	0	True				
ANR	1812410	CallExpression	"rotateTimestamp ( ""old"" , 1 )"		1812406	0					
ANR	1812411	Callee	rotateTimestamp		1812406	0					
ANR	1812412	Identifier	rotateTimestamp		1812406	0					
ANR	1812413	ArgumentList	"""old"""		1812406	1					
ANR	1812414	Argument	"""old"""		1812406	0					
ANR	1812415	PrimaryExpression	"""old"""		1812406	0					
ANR	1812416	Argument	1		1812406	1					
ANR	1812417	PrimaryExpression	1		1812406	0					
ANR	1812418	ReturnType	int		1812406	1					
ANR	1812419	Identifier	rotateSingle		1812406	2					
ANR	1812420	ParameterList			1812406	3					
ANR	1812421	CFGEntryNode	ENTRY		1812406		True				
ANR	1812422	CFGExitNode	EXIT		1812406		True				
ANR	1812423	Symbol	rotateTimestamp		1812406						
ANR	1812424	Function	createRotateFilename	116:0:3135:3390							
ANR	1812425	FunctionDef	"createRotateFilename (const char * ending , int maxNum)"		1812424	0					
ANR	1812426	CompoundStatement		118:0:3201:3390	1812424	0					
ANR	1812427	IdentifierDeclStatement	const char * timeStamp ;	119:1:3204:3225	1812424	0	True				
ANR	1812428	IdentifierDecl	* timeStamp		1812424	0					
ANR	1812429	IdentifierDeclType	const char *		1812424	0					
ANR	1812430	Identifier	timeStamp		1812424	1					
ANR	1812431	IfStatement	if ( maxNum <= 1 )		1812424	1					
ANR	1812432	Condition	maxNum <= 1	120:5:3232:3242	1812424	0	True				
ANR	1812433	RelationalExpression	maxNum <= 1		1812424	0		<=			
ANR	1812434	Identifier	maxNum		1812424	0					
ANR	1812435	PrimaryExpression	1		1812424	1					
ANR	1812436	ExpressionStatement	"timeStamp = ""old"""	121:2:3247:3264	1812424	1	True				
ANR	1812437	AssignmentExpression	"timeStamp = ""old"""		1812424	0		=			
ANR	1812438	Identifier	timeStamp		1812424	0					
ANR	1812439	PrimaryExpression	"""old"""		1812424	1					
ANR	1812440	ElseStatement	else		1812424	0					
ANR	1812441	IfStatement	if ( ending == NULL )		1812424	0					
ANR	1812442	Condition	ending == NULL	123:5:3279:3292	1812424	0	True				
ANR	1812443	EqualityExpression	ending == NULL		1812424	0		==			
ANR	1812444	Identifier	ending		1812424	0					
ANR	1812445	Identifier	NULL		1812424	1					
ANR	1812446	CompoundStatement		6:21:93:93	1812424	1					
ANR	1812447	ExpressionStatement	timeStamp = createTimestampString ( )	124:2:3299:3334	1812424	0	True				
ANR	1812448	AssignmentExpression	timeStamp = createTimestampString ( )		1812424	0		=			
ANR	1812449	Identifier	timeStamp		1812424	0					
ANR	1812450	CallExpression	createTimestampString ( )		1812424	1					
ANR	1812451	Callee	createTimestampString		1812424	0					
ANR	1812452	Identifier	createTimestampString		1812424	0					
ANR	1812453	ArgumentList			1812424	1					
ANR	1812454	ElseStatement	else		1812424	0					
ANR	1812455	CompoundStatement		8:8:142:142	1812424	0					
ANR	1812456	ExpressionStatement	timeStamp = ending	126:2:3348:3366	1812424	0	True				
ANR	1812457	AssignmentExpression	timeStamp = ending		1812424	0		=			
ANR	1812458	Identifier	timeStamp		1812424	0					
ANR	1812459	Identifier	ending		1812424	1					
ANR	1812460	ReturnStatement	return timeStamp ;	128:1:3372:3388	1812424	2	True				
ANR	1812461	Identifier	timeStamp		1812424	0					
ANR	1812462	ReturnType	const char *		1812424	1					
ANR	1812463	Identifier	createRotateFilename		1812424	2					
ANR	1812464	ParameterList	"const char * ending , int maxNum"		1812424	3					
ANR	1812465	Parameter	const char * ending	117:21:3169:3186	1812424	0	True				
ANR	1812466	ParameterType	const char *		1812424	0					
ANR	1812467	Identifier	ending		1812424	1					
ANR	1812468	Parameter	int maxNum	117:41:3189:3198	1812424	1	True				
ANR	1812469	ParameterType	int		1812424	0					
ANR	1812470	Identifier	maxNum		1812424	1					
ANR	1812471	CFGEntryNode	ENTRY		1812424		True				
ANR	1812472	CFGExitNode	EXIT		1812424		True				
ANR	1812473	Symbol	timeStamp		1812424						
ANR	1812474	Symbol	ending		1812424						
ANR	1812475	Symbol	createTimestampString		1812424						
ANR	1812476	Symbol	NULL		1812424						
ANR	1812477	Symbol	maxNum		1812424						
ANR	1812478	Function	rotateTimestamp	131:0:3393:3870							
ANR	1812479	FunctionDef	"rotateTimestamp (const char * timeStamp , int maxNum)"		1812478	0					
ANR	1812480	CompoundStatement		133:0:3448:3870	1812478	0					
ANR	1812481	IdentifierDeclStatement	int save_errno ;	134:1:3451:3465	1812478	0	True				
ANR	1812482	IdentifierDecl	save_errno		1812478	0					
ANR	1812483	IdentifierDeclType	int		1812478	0					
ANR	1812484	Identifier	save_errno		1812478	1					
ANR	1812485	IdentifierDeclStatement	"const char * ts = createRotateFilename ( timeStamp , maxNum ) ;"	135:1:3468:3524	1812478	1	True				
ANR	1812486	IdentifierDecl	"* ts = createRotateFilename ( timeStamp , maxNum )"		1812478	0					
ANR	1812487	IdentifierDeclType	const char *		1812478	0					
ANR	1812488	Identifier	ts		1812478	1					
ANR	1812489	AssignmentExpression	"* ts = createRotateFilename ( timeStamp , maxNum )"		1812478	2		=			
ANR	1812490	Identifier	ts		1812478	0					
ANR	1812491	CallExpression	"createRotateFilename ( timeStamp , maxNum )"		1812478	1					
ANR	1812492	Callee	createRotateFilename		1812478	0					
ANR	1812493	Identifier	createRotateFilename		1812478	0					
ANR	1812494	ArgumentList	timeStamp		1812478	1					
ANR	1812495	Argument	timeStamp		1812478	0					
ANR	1812496	Identifier	timeStamp		1812478	0					
ANR	1812497	Argument	maxNum		1812478	1					
ANR	1812498	Identifier	maxNum		1812478	0					
ANR	1812499	IdentifierDeclStatement	char * rotated_log_name = ( char * ) malloc ( strlen ( logBaseName ) + strlen ( ts ) + 2 ) ;	138:1:3582:3659	1812478	2	True				
ANR	1812500	IdentifierDecl	* rotated_log_name = ( char * ) malloc ( strlen ( logBaseName ) + strlen ( ts ) + 2 )		1812478	0					
ANR	1812501	IdentifierDeclType	char *		1812478	0					
ANR	1812502	Identifier	rotated_log_name		1812478	1					
ANR	1812503	AssignmentExpression	* rotated_log_name = ( char * ) malloc ( strlen ( logBaseName ) + strlen ( ts ) + 2 )		1812478	2		=			
ANR	1812504	Identifier	rotated_log_name		1812478	0					
ANR	1812505	CastExpression	( char * ) malloc ( strlen ( logBaseName ) + strlen ( ts ) + 2 )		1812478	1					
ANR	1812506	CastTarget	char *		1812478	0					
ANR	1812507	CallExpression	malloc ( strlen ( logBaseName ) + strlen ( ts ) + 2 )		1812478	1					
ANR	1812508	Callee	malloc		1812478	0					
ANR	1812509	Identifier	malloc		1812478	0					
ANR	1812510	ArgumentList	strlen ( logBaseName ) + strlen ( ts ) + 2		1812478	1					
ANR	1812511	Argument	strlen ( logBaseName ) + strlen ( ts ) + 2		1812478	0					
ANR	1812512	AdditiveExpression	strlen ( logBaseName ) + strlen ( ts ) + 2		1812478	0		+			
ANR	1812513	CallExpression	strlen ( logBaseName )		1812478	0					
ANR	1812514	Callee	strlen		1812478	0					
ANR	1812515	Identifier	strlen		1812478	0					
ANR	1812516	ArgumentList	logBaseName		1812478	1					
ANR	1812517	Argument	logBaseName		1812478	0					
ANR	1812518	Identifier	logBaseName		1812478	0					
ANR	1812519	AdditiveExpression	strlen ( ts ) + 2		1812478	1		+			
ANR	1812520	CallExpression	strlen ( ts )		1812478	0					
ANR	1812521	Callee	strlen		1812478	0					
ANR	1812522	Identifier	strlen		1812478	0					
ANR	1812523	ArgumentList	ts		1812478	1					
ANR	1812524	Argument	ts		1812478	0					
ANR	1812525	Identifier	ts		1812478	0					
ANR	1812526	PrimaryExpression	2		1812478	1					
ANR	1812527	ExpressionStatement	"( void ) sprintf ( rotated_log_name , ""%s.%s"" , logBaseName , ts )"	139:1:3662:3721	1812478	3	True				
ANR	1812528	CastExpression	"( void ) sprintf ( rotated_log_name , ""%s.%s"" , logBaseName , ts )"		1812478	0					
ANR	1812529	CastTarget	void		1812478	0					
ANR	1812530	CallExpression	"sprintf ( rotated_log_name , ""%s.%s"" , logBaseName , ts )"		1812478	1					
ANR	1812531	Callee	sprintf		1812478	0					
ANR	1812532	Identifier	sprintf		1812478	0					
ANR	1812533	ArgumentList	rotated_log_name		1812478	1					
ANR	1812534	Argument	rotated_log_name		1812478	0					
ANR	1812535	Identifier	rotated_log_name		1812478	0					
ANR	1812536	Argument	"""%s.%s"""		1812478	1					
ANR	1812537	PrimaryExpression	"""%s.%s"""		1812478	0					
ANR	1812538	Argument	logBaseName		1812478	2					
ANR	1812539	Identifier	logBaseName		1812478	0					
ANR	1812540	Argument	ts		1812478	3					
ANR	1812541	Identifier	ts		1812478	0					
ANR	1812542	ExpressionStatement	"save_errno = rotate_file_dprintf ( logBaseName , rotated_log_name , 1 )"	140:1:3724:3790	1812478	4	True				
ANR	1812543	AssignmentExpression	"save_errno = rotate_file_dprintf ( logBaseName , rotated_log_name , 1 )"		1812478	0		=			
ANR	1812544	Identifier	save_errno		1812478	0					
ANR	1812545	CallExpression	"rotate_file_dprintf ( logBaseName , rotated_log_name , 1 )"		1812478	1					
ANR	1812546	Callee	rotate_file_dprintf		1812478	0					
ANR	1812547	Identifier	rotate_file_dprintf		1812478	0					
ANR	1812548	ArgumentList	logBaseName		1812478	1					
ANR	1812549	Argument	logBaseName		1812478	0					
ANR	1812550	Identifier	logBaseName		1812478	0					
ANR	1812551	Argument	rotated_log_name		1812478	1					
ANR	1812552	Identifier	rotated_log_name		1812478	0					
ANR	1812553	Argument	1		1812478	2					
ANR	1812554	PrimaryExpression	1		1812478	0					
ANR	1812555	ExpressionStatement	free ( rotated_log_name )	141:1:3793:3815	1812478	5	True				
ANR	1812556	CallExpression	free ( rotated_log_name )		1812478	0					
ANR	1812557	Callee	free		1812478	0					
ANR	1812558	Identifier	free		1812478	0					
ANR	1812559	ArgumentList	rotated_log_name		1812478	1					
ANR	1812560	Argument	rotated_log_name		1812478	0					
ANR	1812561	Identifier	rotated_log_name		1812478	0					
ANR	1812562	ReturnStatement	return save_errno ;	142:1:3818:3835	1812478	6	True				
ANR	1812563	Identifier	save_errno		1812478	0					
ANR	1812564	ReturnType	int		1812478	1					
ANR	1812565	Identifier	rotateTimestamp		1812478	2					
ANR	1812566	ParameterList	"const char * timeStamp , int maxNum"		1812478	3					
ANR	1812567	Parameter	const char * timeStamp	132:16:3413:3433	1812478	0	True				
ANR	1812568	ParameterType	const char *		1812478	0					
ANR	1812569	Identifier	timeStamp		1812478	1					
ANR	1812570	Parameter	int maxNum	132:39:3436:3445	1812478	1	True				
ANR	1812571	ParameterType	int		1812478	0					
ANR	1812572	Identifier	maxNum		1812478	1					
ANR	1812573	CFGEntryNode	ENTRY		1812478		True				
ANR	1812574	CFGExitNode	EXIT		1812478		True				
ANR	1812575	Symbol	timeStamp		1812478						
ANR	1812576	Symbol	malloc		1812478						
ANR	1812577	Symbol	strlen		1812478						
ANR	1812578	Symbol	rotated_log_name		1812478						
ANR	1812579	Symbol	logBaseName		1812478						
ANR	1812580	Symbol	save_errno		1812478						
ANR	1812581	Symbol	maxNum		1812478						
ANR	1812582	Symbol	rotate_file_dprintf		1812478						
ANR	1812583	Symbol	ts		1812478						
ANR	1812584	Symbol	createRotateFilename		1812478						
ANR	1812585	Function	cleanUp	145:0:3873:4599							
ANR	1812586	FunctionDef	cleanUp (int maxNum)		1812585	0					
ANR	1812587	CompoundStatement		145:24:3897:4599	1812585	0					
ANR	1812588	IdentifierDeclStatement	int count ;	146:1:3900:3909	1812585	0	True				
ANR	1812589	IdentifierDecl	count		1812585	0					
ANR	1812590	IdentifierDeclType	int		1812585	0					
ANR	1812591	Identifier	count		1812585	1					
ANR	1812592	IdentifierDeclStatement	char * oldFile = NULL ;	147:1:3912:3932	1812585	1	True				
ANR	1812593	IdentifierDecl	* oldFile = NULL		1812585	0					
ANR	1812594	IdentifierDeclType	char *		1812585	0					
ANR	1812595	Identifier	oldFile		1812585	1					
ANR	1812596	AssignmentExpression	* oldFile = NULL		1812585	2		=			
ANR	1812597	Identifier	NULL		1812585	0					
ANR	1812598	Identifier	NULL		1812585	1					
ANR	1812599	IdentifierDeclStatement	char empty [ BUFSIZ ] ;	148:1:3935:3953	1812585	2	True				
ANR	1812600	IdentifierDecl	empty [ BUFSIZ ]		1812585	0					
ANR	1812601	IdentifierDeclType	char [ BUFSIZ ]		1812585	0					
ANR	1812602	Identifier	empty		1812585	1					
ANR	1812603	Identifier	BUFSIZ		1812585	2					
ANR	1812604	IfStatement	if ( maxNum > 0 )		1812585	3					
ANR	1812605	Condition	maxNum > 0	151:5:4053:4062	1812585	0	True				
ANR	1812606	RelationalExpression	maxNum > 0		1812585	0		>			
ANR	1812607	Identifier	maxNum		1812585	0					
ANR	1812608	PrimaryExpression	0		1812585	1					
ANR	1812609	CompoundStatement		7:18:168:168	1812585	1					
ANR	1812610	ExpressionStatement	"oldFile = findOldest ( baseDirName , & count )"	152:2:4070:4111	1812585	0	True				
ANR	1812611	AssignmentExpression	"oldFile = findOldest ( baseDirName , & count )"		1812585	0		=			
ANR	1812612	Identifier	oldFile		1812585	0					
ANR	1812613	CallExpression	"findOldest ( baseDirName , & count )"		1812585	1					
ANR	1812614	Callee	findOldest		1812585	0					
ANR	1812615	Identifier	findOldest		1812585	0					
ANR	1812616	ArgumentList	baseDirName		1812585	1					
ANR	1812617	Argument	baseDirName		1812585	0					
ANR	1812618	Identifier	baseDirName		1812585	0					
ANR	1812619	Argument	& count		1812585	1					
ANR	1812620	UnaryOperationExpression	& count		1812585	0					
ANR	1812621	UnaryOperator	&		1812585	0					
ANR	1812622	Identifier	count		1812585	1					
ANR	1812623	WhileStatement	while ( count > maxNum )		1812585	1					
ANR	1812624	Condition	count > maxNum	153:9:4122:4135	1812585	0	True				
ANR	1812625	RelationalExpression	count > maxNum		1812585	0		>			
ANR	1812626	Identifier	count		1812585	0					
ANR	1812627	Identifier	maxNum		1812585	1					
ANR	1812628	CompoundStatement		9:25:240:240	1812585	1					
ANR	1812629	ExpressionStatement	"( void ) sprintf ( empty , ""%s.old"" , logBaseName )"	154:3:4143:4188	1812585	0	True				
ANR	1812630	CastExpression	"( void ) sprintf ( empty , ""%s.old"" , logBaseName )"		1812585	0					
ANR	1812631	CastTarget	void		1812585	0					
ANR	1812632	CallExpression	"sprintf ( empty , ""%s.old"" , logBaseName )"		1812585	1					
ANR	1812633	Callee	sprintf		1812585	0					
ANR	1812634	Identifier	sprintf		1812585	0					
ANR	1812635	ArgumentList	empty		1812585	1					
ANR	1812636	Argument	empty		1812585	0					
ANR	1812637	Identifier	empty		1812585	0					
ANR	1812638	Argument	"""%s.old"""		1812585	1					
ANR	1812639	PrimaryExpression	"""%s.old"""		1812585	0					
ANR	1812640	Argument	logBaseName		1812585	2					
ANR	1812641	Identifier	logBaseName		1812585	0					
ANR	1812642	IfStatement	"if ( strcmp ( oldFile , empty ) == 0 )"		1812585	1					
ANR	1812643	Condition	"strcmp ( oldFile , empty ) == 0"	156:7:4285:4311	1812585	0	True				
ANR	1812644	EqualityExpression	"strcmp ( oldFile , empty ) == 0"		1812585	0		==			
ANR	1812645	CallExpression	"strcmp ( oldFile , empty )"		1812585	0					
ANR	1812646	Callee	strcmp		1812585	0					
ANR	1812647	Identifier	strcmp		1812585	0					
ANR	1812648	ArgumentList	oldFile		1812585	1					
ANR	1812649	Argument	oldFile		1812585	0					
ANR	1812650	Identifier	oldFile		1812585	0					
ANR	1812651	Argument	empty		1812585	1					
ANR	1812652	Identifier	empty		1812585	0					
ANR	1812653	PrimaryExpression	0		1812585	1					
ANR	1812654	BreakStatement	break ;	157:4:4318:4323	1812585	1	True				
ANR	1812655	IfStatement	"if ( rotate_file ( oldFile , empty ) != 0 )"		1812585	2					
ANR	1812656	Condition	"rotate_file ( oldFile , empty ) != 0"	158:8:4333:4363	1812585	0	True				
ANR	1812657	EqualityExpression	"rotate_file ( oldFile , empty ) != 0"		1812585	0		!=			
ANR	1812658	CallExpression	"rotate_file ( oldFile , empty )"		1812585	0					
ANR	1812659	Callee	rotate_file		1812585	0					
ANR	1812660	Identifier	rotate_file		1812585	0					
ANR	1812661	ArgumentList	oldFile		1812585	1					
ANR	1812662	Argument	oldFile		1812585	0					
ANR	1812663	Identifier	oldFile		1812585	0					
ANR	1812664	Argument	empty		1812585	1					
ANR	1812665	Identifier	empty		1812585	0					
ANR	1812666	PrimaryExpression	0		1812585	1					
ANR	1812667	CompoundStatement		14:41:468:468	1812585	1					
ANR	1812668	ExpressionStatement	"dprintf ( D_ALWAYS , ""Rotation cleanup of old file %s failed.\\n"" , oldFile )"	159:4:4372:4443	1812585	0	True				
ANR	1812669	CallExpression	"dprintf ( D_ALWAYS , ""Rotation cleanup of old file %s failed.\\n"" , oldFile )"		1812585	0					
ANR	1812670	Callee	dprintf		1812585	0					
ANR	1812671	Identifier	dprintf		1812585	0					
ANR	1812672	ArgumentList	D_ALWAYS		1812585	1					
ANR	1812673	Argument	D_ALWAYS		1812585	0					
ANR	1812674	Identifier	D_ALWAYS		1812585	0					
ANR	1812675	Argument	"""Rotation cleanup of old file %s failed.\\n"""		1812585	1					
ANR	1812676	PrimaryExpression	"""Rotation cleanup of old file %s failed.\\n"""		1812585	0					
ANR	1812677	Argument	oldFile		1812585	2					
ANR	1812678	Identifier	oldFile		1812585	0					
ANR	1812679	ExpressionStatement	free ( oldFile )	161:3:4453:4466	1812585	3	True				
ANR	1812680	CallExpression	free ( oldFile )		1812585	0					
ANR	1812681	Callee	free		1812585	0					
ANR	1812682	Identifier	free		1812585	0					
ANR	1812683	ArgumentList	oldFile		1812585	1					
ANR	1812684	Argument	oldFile		1812585	0					
ANR	1812685	Identifier	oldFile		1812585	0					
ANR	1812686	ExpressionStatement	"oldFile = findOldest ( baseDirName , & count )"	162:3:4471:4512	1812585	4	True				
ANR	1812687	AssignmentExpression	"oldFile = findOldest ( baseDirName , & count )"		1812585	0		=			
ANR	1812688	Identifier	oldFile		1812585	0					
ANR	1812689	CallExpression	"findOldest ( baseDirName , & count )"		1812585	1					
ANR	1812690	Callee	findOldest		1812585	0					
ANR	1812691	Identifier	findOldest		1812585	0					
ANR	1812692	ArgumentList	baseDirName		1812585	1					
ANR	1812693	Argument	baseDirName		1812585	0					
ANR	1812694	Identifier	baseDirName		1812585	0					
ANR	1812695	Argument	& count		1812585	1					
ANR	1812696	UnaryOperationExpression	& count		1812585	0					
ANR	1812697	UnaryOperator	&		1812585	0					
ANR	1812698	Identifier	count		1812585	1					
ANR	1812699	IfStatement	if ( oldFile != NULL )		1812585	4					
ANR	1812700	Condition	oldFile != NULL	165:5:4526:4540	1812585	0	True				
ANR	1812701	EqualityExpression	oldFile != NULL		1812585	0		!=			
ANR	1812702	Identifier	oldFile		1812585	0					
ANR	1812703	Identifier	NULL		1812585	1					
ANR	1812704	CompoundStatement		21:22:645:645	1812585	1					
ANR	1812705	ExpressionStatement	free ( oldFile )	166:3:4548:4561	1812585	0	True				
ANR	1812706	CallExpression	free ( oldFile )		1812585	0					
ANR	1812707	Callee	free		1812585	0					
ANR	1812708	Identifier	free		1812585	0					
ANR	1812709	ArgumentList	oldFile		1812585	1					
ANR	1812710	Argument	oldFile		1812585	0					
ANR	1812711	Identifier	oldFile		1812585	0					
ANR	1812712	ExpressionStatement	oldFile = NULL	167:3:4566:4580	1812585	1	True				
ANR	1812713	AssignmentExpression	oldFile = NULL		1812585	0		=			
ANR	1812714	Identifier	oldFile		1812585	0					
ANR	1812715	Identifier	NULL		1812585	1					
ANR	1812716	ReturnStatement	return 0 ;	170:1:4588:4596	1812585	5	True				
ANR	1812717	PrimaryExpression	0		1812585	0					
ANR	1812718	ReturnType	int		1812585	1					
ANR	1812719	Identifier	cleanUp		1812585	2					
ANR	1812720	ParameterList	int maxNum		1812585	3					
ANR	1812721	Parameter	int maxNum	145:12:3885:3894	1812585	0	True				
ANR	1812722	ParameterType	int		1812585	0					
ANR	1812723	Identifier	maxNum		1812585	1					
ANR	1812724	CFGEntryNode	ENTRY		1812585		True				
ANR	1812725	CFGExitNode	EXIT		1812585		True				
ANR	1812726	Symbol	strcmp		1812585						
ANR	1812727	Symbol	oldFile		1812585						
ANR	1812728	Symbol	NULL		1812585						
ANR	1812729	Symbol	baseDirName		1812585						
ANR	1812730	Symbol	logBaseName		1812585						
ANR	1812731	Symbol	count		1812585						
ANR	1812732	Symbol	D_ALWAYS		1812585						
ANR	1812733	Symbol	& count		1812585						
ANR	1812734	Symbol	rotate_file		1812585						
ANR	1812735	Symbol	maxNum		1812585						
ANR	1812736	Symbol	findOldest		1812585						
ANR	1812737	Symbol	empty		1812585						
ANR	1812738	Function	isOldString	178:0:4619:4700							
ANR	1812739	FunctionDef	isOldString (char * str)		1812738	0					
ANR	1812740	CompoundStatement		178:26:4645:4700	1812738	0					
ANR	1812741	IfStatement	"if ( strcmp ( str , ""old"" ) == 0 )"		1812738	0					
ANR	1812742	Condition	"strcmp ( str , ""old"" ) == 0"	179:5:4652:4674	1812738	0	True				
ANR	1812743	EqualityExpression	"strcmp ( str , ""old"" ) == 0"		1812738	0		==			
ANR	1812744	CallExpression	"strcmp ( str , ""old"" )"		1812738	0					
ANR	1812745	Callee	strcmp		1812738	0					
ANR	1812746	Identifier	strcmp		1812738	0					
ANR	1812747	ArgumentList	str		1812738	1					
ANR	1812748	Argument	str		1812738	0					
ANR	1812749	Identifier	str		1812738	0					
ANR	1812750	Argument	"""old"""		1812738	1					
ANR	1812751	PrimaryExpression	"""old"""		1812738	0					
ANR	1812752	PrimaryExpression	0		1812738	1					
ANR	1812753	ReturnStatement	return 1 ;	180:2:4679:4687	1812738	1	True				
ANR	1812754	PrimaryExpression	1		1812738	0					
ANR	1812755	ReturnStatement	return 0 ;	181:1:4690:4698	1812738	1	True				
ANR	1812756	PrimaryExpression	0		1812738	0					
ANR	1812757	ReturnType	int		1812738	1					
ANR	1812758	Identifier	isOldString		1812738	2					
ANR	1812759	ParameterList	char * str		1812738	3					
ANR	1812760	Parameter	char * str	178:16:4635:4643	1812738	0	True				
ANR	1812761	ParameterType	char *		1812738	0					
ANR	1812762	Identifier	str		1812738	1					
ANR	1812763	CFGEntryNode	ENTRY		1812738		True				
ANR	1812764	CFGExitNode	EXIT		1812738		True				
ANR	1812765	Symbol	str		1812738						
ANR	1812766	Symbol	strcmp		1812738						
ANR	1812767	Function	isTimestampString	184:0:4703:5006							
ANR	1812768	FunctionDef	isTimestampString (char * str)		1812767	0					
ANR	1812769	CompoundStatement		184:33:4736:5006	1812767	0					
ANR	1812770	IdentifierDeclStatement	int len = strlen ( str ) ;	185:1:4739:4760	1812767	0	True				
ANR	1812771	IdentifierDecl	len = strlen ( str )		1812767	0					
ANR	1812772	IdentifierDeclType	int		1812767	0					
ANR	1812773	Identifier	len		1812767	1					
ANR	1812774	AssignmentExpression	len = strlen ( str )		1812767	2		=			
ANR	1812775	Identifier	len		1812767	0					
ANR	1812776	CallExpression	strlen ( str )		1812767	1					
ANR	1812777	Callee	strlen		1812767	0					
ANR	1812778	Identifier	strlen		1812767	0					
ANR	1812779	ArgumentList	str		1812767	1					
ANR	1812780	Argument	str		1812767	0					
ANR	1812781	Identifier	str		1812767	0					
ANR	1812782	IfStatement	if ( len != 15 )		1812767	1					
ANR	1812783	Condition	len != 15	186:5:4767:4775	1812767	0	True				
ANR	1812784	EqualityExpression	len != 15		1812767	0		!=			
ANR	1812785	Identifier	len		1812767	0					
ANR	1812786	PrimaryExpression	15		1812767	1					
ANR	1812787	CompoundStatement		3:16:41:41	1812767	1					
ANR	1812788	ReturnStatement	return 0 ;	187:2:4782:4790	1812767	0	True				
ANR	1812789	PrimaryExpression	0		1812767	0					
ANR	1812790	IdentifierDeclStatement	int i = 0 ;	189:1:4796:4805	1812767	2	True				
ANR	1812791	IdentifierDecl	i = 0		1812767	0					
ANR	1812792	IdentifierDeclType	int		1812767	0					
ANR	1812793	Identifier	i		1812767	1					
ANR	1812794	AssignmentExpression	i = 0		1812767	2		=			
ANR	1812795	Identifier	i		1812767	0					
ANR	1812796	PrimaryExpression	0		1812767	1					
ANR	1812797	WhileStatement	while ( i < 8 )		1812767	3					
ANR	1812798	Condition	i < 8	190:8:4815:4819	1812767	0	True				
ANR	1812799	RelationalExpression	i < 8		1812767	0		<			
ANR	1812800	Identifier	i		1812767	0					
ANR	1812801	PrimaryExpression	8		1812767	1					
ANR	1812802	CompoundStatement		7:15:85:85	1812767	1					
ANR	1812803	IfStatement	if ( str [ i ] < '0' || str [ i ] > '9' )		1812767	0					
ANR	1812804	Condition	str [ i ] < '0' || str [ i ] > '9'	191:6:4830:4857	1812767	0	True				
ANR	1812805	OrExpression	str [ i ] < '0' || str [ i ] > '9'		1812767	0		||			
ANR	1812806	RelationalExpression	str [ i ] < '0'		1812767	0		<			
ANR	1812807	ArrayIndexing	str [ i ]		1812767	0					
ANR	1812808	Identifier	str		1812767	0					
ANR	1812809	Identifier	i		1812767	1					
ANR	1812810	PrimaryExpression	'0'		1812767	1					
ANR	1812811	RelationalExpression	str [ i ] > '9'		1812767	1		>			
ANR	1812812	ArrayIndexing	str [ i ]		1812767	0					
ANR	1812813	Identifier	str		1812767	0					
ANR	1812814	Identifier	i		1812767	1					
ANR	1812815	PrimaryExpression	'9'		1812767	1					
ANR	1812816	ReturnStatement	return 0 ;	192:3:4863:4871	1812767	1	True				
ANR	1812817	PrimaryExpression	0		1812767	0					
ANR	1812818	ExpressionStatement	++ i	193:2:4875:4878	1812767	1	True				
ANR	1812819	UnaryExpression	++ i		1812767	0					
ANR	1812820	IncDec	++		1812767	0					
ANR	1812821	Identifier	i		1812767	1					
ANR	1812822	IfStatement	if ( str [ i ++ ] != 'T' )		1812767	4					
ANR	1812823	Condition	str [ i ++ ] != 'T'	195:5:4888:4902	1812767	0	True				
ANR	1812824	EqualityExpression	str [ i ++ ] != 'T'		1812767	0		!=			
ANR	1812825	ArrayIndexing	str [ i ++ ]		1812767	0					
ANR	1812826	Identifier	str		1812767	0					
ANR	1812827	PostIncDecOperationExpression	i ++		1812767	1					
ANR	1812828	Identifier	i		1812767	0					
ANR	1812829	IncDec	++		1812767	1					
ANR	1812830	PrimaryExpression	'T'		1812767	1					
ANR	1812831	ReturnStatement	return 0 ;	196:2:4907:4915	1812767	1	True				
ANR	1812832	PrimaryExpression	0		1812767	0					
ANR	1812833	WhileStatement	while ( i < len )		1812767	5					
ANR	1812834	Condition	i < len	197:8:4925:4931	1812767	0	True				
ANR	1812835	RelationalExpression	i < len		1812767	0		<			
ANR	1812836	Identifier	i		1812767	0					
ANR	1812837	Identifier	len		1812767	1					
ANR	1812838	CompoundStatement		14:17:197:197	1812767	1					
ANR	1812839	IfStatement	if ( str [ i ] < '0' || str [ i ] > '9' )		1812767	0					
ANR	1812840	Condition	str [ i ] < '0' || str [ i ] > '9'	198:6:4942:4969	1812767	0	True				
ANR	1812841	OrExpression	str [ i ] < '0' || str [ i ] > '9'		1812767	0		||			
ANR	1812842	RelationalExpression	str [ i ] < '0'		1812767	0		<			
ANR	1812843	ArrayIndexing	str [ i ]		1812767	0					
ANR	1812844	Identifier	str		1812767	0					
ANR	1812845	Identifier	i		1812767	1					
ANR	1812846	PrimaryExpression	'0'		1812767	1					
ANR	1812847	RelationalExpression	str [ i ] > '9'		1812767	1		>			
ANR	1812848	ArrayIndexing	str [ i ]		1812767	0					
ANR	1812849	Identifier	str		1812767	0					
ANR	1812850	Identifier	i		1812767	1					
ANR	1812851	PrimaryExpression	'9'		1812767	1					
ANR	1812852	ReturnStatement	return 0 ;	199:3:4975:4983	1812767	1	True				
ANR	1812853	PrimaryExpression	0		1812767	0					
ANR	1812854	ExpressionStatement	++ i	200:2:4987:4990	1812767	1	True				
ANR	1812855	UnaryExpression	++ i		1812767	0					
ANR	1812856	IncDec	++		1812767	0					
ANR	1812857	Identifier	i		1812767	1					
ANR	1812858	ReturnStatement	return 1 ;	202:1:4996:5004	1812767	6	True				
ANR	1812859	PrimaryExpression	1		1812767	0					
ANR	1812860	ReturnType	int		1812767	1					
ANR	1812861	Identifier	isTimestampString		1812767	2					
ANR	1812862	ParameterList	char * str		1812767	3					
ANR	1812863	Parameter	char * str	184:22:4725:4733	1812767	0	True				
ANR	1812864	ParameterType	char *		1812767	0					
ANR	1812865	Identifier	str		1812767	1					
ANR	1812866	CFGEntryNode	ENTRY		1812767		True				
ANR	1812867	CFGExitNode	EXIT		1812767		True				
ANR	1812868	Symbol	str		1812767						
ANR	1812869	Symbol	strlen		1812767						
ANR	1812870	Symbol	* i		1812767						
ANR	1812871	Symbol	len		1812767						
ANR	1812872	Symbol	i		1812767						
ANR	1812873	Symbol	* str		1812767						
ANR	1812874	Function	isLogFilename	205:0:5010:5516							
ANR	1812875	FunctionDef	isLogFilename (char * filename)		1812874	0					
ANR	1812876	CompoundStatement		205:35:5045:5516	1812874	0					
ANR	1812877	IdentifierDeclStatement	int dirLen = strlen ( baseDirName ) ;	206:1:5048:5080	1812874	0	True				
ANR	1812878	IdentifierDecl	dirLen = strlen ( baseDirName )		1812874	0					
ANR	1812879	IdentifierDeclType	int		1812874	0					
ANR	1812880	Identifier	dirLen		1812874	1					
ANR	1812881	AssignmentExpression	dirLen = strlen ( baseDirName )		1812874	2		=			
ANR	1812882	Identifier	dirLen		1812874	0					
ANR	1812883	CallExpression	strlen ( baseDirName )		1812874	1					
ANR	1812884	Callee	strlen		1812874	0					
ANR	1812885	Identifier	strlen		1812874	0					
ANR	1812886	ArgumentList	baseDirName		1812874	1					
ANR	1812887	Argument	baseDirName		1812874	0					
ANR	1812888	Identifier	baseDirName		1812874	0					
ANR	1812889	IfStatement	if ( baseDirName [ dirLen - 1 ] != DIR_DELIM_CHAR )		1812874	1					
ANR	1812890	Condition	baseDirName [ dirLen - 1 ] != DIR_DELIM_CHAR	207:5:5087:5125	1812874	0	True				
ANR	1812891	EqualityExpression	baseDirName [ dirLen - 1 ] != DIR_DELIM_CHAR		1812874	0		!=			
ANR	1812892	ArrayIndexing	baseDirName [ dirLen - 1 ]		1812874	0					
ANR	1812893	Identifier	baseDirName		1812874	0					
ANR	1812894	AdditiveExpression	dirLen - 1		1812874	1		-			
ANR	1812895	Identifier	dirLen		1812874	0					
ANR	1812896	PrimaryExpression	1		1812874	1					
ANR	1812897	Identifier	DIR_DELIM_CHAR		1812874	1					
ANR	1812898	ExpressionStatement	++ dirLen	208:2:5130:5138	1812874	1	True				
ANR	1812899	UnaryExpression	++ dirLen		1812874	0					
ANR	1812900	IncDec	++		1812874	0					
ANR	1812901	Identifier	dirLen		1812874	1					
ANR	1812902	IdentifierDeclStatement	int fLen = strlen ( logBaseName ) ;	209:4:5144:5174	1812874	2	True				
ANR	1812903	IdentifierDecl	fLen = strlen ( logBaseName )		1812874	0					
ANR	1812904	IdentifierDeclType	int		1812874	0					
ANR	1812905	Identifier	fLen		1812874	1					
ANR	1812906	AssignmentExpression	fLen = strlen ( logBaseName )		1812874	2		=			
ANR	1812907	Identifier	fLen		1812874	0					
ANR	1812908	CallExpression	strlen ( logBaseName )		1812874	1					
ANR	1812909	Callee	strlen		1812874	0					
ANR	1812910	Identifier	strlen		1812874	0					
ANR	1812911	ArgumentList	logBaseName		1812874	1					
ANR	1812912	Argument	logBaseName		1812874	0					
ANR	1812913	Identifier	logBaseName		1812874	0					
ANR	1812914	IfStatement	"if ( strncmp ( filename , ( logBaseName + dirLen ) , fLen - dirLen - 1 ) == 0 )"		1812874	3					
ANR	1812915	Condition	"strncmp ( filename , ( logBaseName + dirLen ) , fLen - dirLen - 1 ) == 0"	210:8:5184:5246	1812874	0	True				
ANR	1812916	EqualityExpression	"strncmp ( filename , ( logBaseName + dirLen ) , fLen - dirLen - 1 ) == 0"		1812874	0		==			
ANR	1812917	CallExpression	"strncmp ( filename , ( logBaseName + dirLen ) , fLen - dirLen - 1 )"		1812874	0					
ANR	1812918	Callee	strncmp		1812874	0					
ANR	1812919	Identifier	strncmp		1812874	0					
ANR	1812920	ArgumentList	filename		1812874	1					
ANR	1812921	Argument	filename		1812874	0					
ANR	1812922	Identifier	filename		1812874	0					
ANR	1812923	Argument	logBaseName + dirLen		1812874	1					
ANR	1812924	AdditiveExpression	logBaseName + dirLen		1812874	0		+			
ANR	1812925	Identifier	logBaseName		1812874	0					
ANR	1812926	Identifier	dirLen		1812874	1					
ANR	1812927	Argument	fLen - dirLen - 1		1812874	2					
ANR	1812928	AdditiveExpression	fLen - dirLen - 1		1812874	0		-			
ANR	1812929	Identifier	fLen		1812874	0					
ANR	1812930	AdditiveExpression	dirLen - 1		1812874	1		-			
ANR	1812931	Identifier	dirLen		1812874	0					
ANR	1812932	PrimaryExpression	1		1812874	1					
ANR	1812933	PrimaryExpression	0		1812874	1					
ANR	1812934	CompoundStatement		6:74:204:204	1812874	1					
ANR	1812935	Statement	if	211:5:5257:5258	1812874	0	True				
ANR	1812936	Statement	(	211:8:5260:5260	1812874	1	True				
ANR	1812937	Statement	(	211:11:5263:5263	1812874	2	True				
ANR	1812938	Statement	strlen	211:12:5264:5269	1812874	3	True				
ANR	1812939	Statement	(	211:18:5270:5270	1812874	4	True				
ANR	1812940	Statement	filename	211:19:5271:5278	1812874	5	True				
ANR	1812941	Statement	)	211:27:5279:5279	1812874	6	True				
ANR	1812942	Statement	>	211:29:5281:5281	1812874	7	True				
ANR	1812943	Statement	unsigned	211:31:5283:5290	1812874	8	True				
ANR	1812944	Statement	(	211:39:5291:5291	1812874	9	True				
ANR	1812945	Statement	fLen	211:40:5292:5295	1812874	10	True				
ANR	1812946	Statement	-	211:44:5296:5296	1812874	11	True				
ANR	1812947	Statement	dirLen	211:45:5297:5302	1812874	12	True				
ANR	1812948	Statement	)	211:51:5303:5303	1812874	13	True				
ANR	1812949	Statement	)	211:52:5304:5304	1812874	14	True				
ANR	1812950	Statement	&&	211:54:5306:5307	1812874	15	True				
ANR	1812951	Statement	(	212:5:5315:5315	1812874	16	True				
ANR	1812952	Statement	filename	212:6:5316:5323	1812874	17	True				
ANR	1812953	Statement	[	212:14:5324:5324	1812874	18	True				
ANR	1812954	Statement	fLen	212:15:5325:5328	1812874	19	True				
ANR	1812955	Statement	-	212:19:5329:5329	1812874	20	True				
ANR	1812956	Statement	dirLen	212:20:5330:5335	1812874	21	True				
ANR	1812957	Statement	]	212:26:5336:5336	1812874	22	True				
ANR	1812958	Statement	==	212:28:5338:5339	1812874	23	True				
ANR	1812959	Statement	'.'	212:31:5341:5343	1812874	24	True				
ANR	1812960	Statement	)	212:34:5344:5344	1812874	25	True				
ANR	1812961	Statement	)	212:37:5347:5347	1812874	26	True				
ANR	1812962	CompoundStatement		8:39:303:303	1812874	27					
ANR	1812963	IfStatement	if ( ( isTimestampString ( filename + ( fLen - dirLen + 1 ) ) == 1 ) || ( isOldString ( filename + ( fLen - dirLen + 1 ) ) == 1 ) )		1812874	0					
ANR	1812964	Condition	( isTimestampString ( filename + ( fLen - dirLen + 1 ) ) == 1 ) || ( isOldString ( filename + ( fLen - dirLen + 1 ) ) == 1 )	213:9:5360:5463	1812874	0	True				
ANR	1812965	OrExpression	( isTimestampString ( filename + ( fLen - dirLen + 1 ) ) == 1 ) || ( isOldString ( filename + ( fLen - dirLen + 1 ) ) == 1 )		1812874	0		||			
ANR	1812966	EqualityExpression	isTimestampString ( filename + ( fLen - dirLen + 1 ) ) == 1		1812874	0		==			
ANR	1812967	CallExpression	isTimestampString ( filename + ( fLen - dirLen + 1 ) )		1812874	0					
ANR	1812968	Callee	isTimestampString		1812874	0					
ANR	1812969	Identifier	isTimestampString		1812874	0					
ANR	1812970	ArgumentList	filename + ( fLen - dirLen + 1 )		1812874	1					
ANR	1812971	Argument	filename + ( fLen - dirLen + 1 )		1812874	0					
ANR	1812972	AdditiveExpression	filename + ( fLen - dirLen + 1 )		1812874	0		+			
ANR	1812973	Identifier	filename		1812874	0					
ANR	1812974	AdditiveExpression	fLen - dirLen + 1		1812874	1		-			
ANR	1812975	Identifier	fLen		1812874	0					
ANR	1812976	AdditiveExpression	dirLen + 1		1812874	1		+			
ANR	1812977	Identifier	dirLen		1812874	0					
ANR	1812978	PrimaryExpression	1		1812874	1					
ANR	1812979	PrimaryExpression	1		1812874	1					
ANR	1812980	EqualityExpression	isOldString ( filename + ( fLen - dirLen + 1 ) ) == 1		1812874	1		==			
ANR	1812981	CallExpression	isOldString ( filename + ( fLen - dirLen + 1 ) )		1812874	0					
ANR	1812982	Callee	isOldString		1812874	0					
ANR	1812983	Identifier	isOldString		1812874	0					
ANR	1812984	ArgumentList	filename + ( fLen - dirLen + 1 )		1812874	1					
ANR	1812985	Argument	filename + ( fLen - dirLen + 1 )		1812874	0					
ANR	1812986	AdditiveExpression	filename + ( fLen - dirLen + 1 )		1812874	0		+			
ANR	1812987	Identifier	filename		1812874	0					
ANR	1812988	AdditiveExpression	fLen - dirLen + 1		1812874	1		-			
ANR	1812989	Identifier	fLen		1812874	0					
ANR	1812990	AdditiveExpression	dirLen + 1		1812874	1		+			
ANR	1812991	Identifier	dirLen		1812874	0					
ANR	1812992	PrimaryExpression	1		1812874	1					
ANR	1812993	PrimaryExpression	1		1812874	1					
ANR	1812994	ReturnStatement	return 1 ;	215:8:5475:5483	1812874	1	True				
ANR	1812995	PrimaryExpression	1		1812874	0					
ANR	1812996	ReturnStatement	return 0 ;	219:1:5506:5514	1812874	4	True				
ANR	1812997	PrimaryExpression	0		1812874	0					
ANR	1812998	ReturnType	int		1812874	1					
ANR	1812999	Identifier	isLogFilename		1812874	2					
ANR	1813000	ParameterList	char * filename		1812874	3					
ANR	1813001	Parameter	char * filename	205:19:5029:5042	1812874	0	True				
ANR	1813002	ParameterType	char *		1812874	0					
ANR	1813003	Identifier	filename		1812874	1					
ANR	1813004	CFGEntryNode	ENTRY		1812874		True				
ANR	1813005	CFGExitNode	EXIT		1812874		True				
ANR	1813006	Symbol	fLen		1812874						
ANR	1813007	Symbol	strlen		1812874						
ANR	1813008	Symbol	strncmp		1812874						
ANR	1813009	Symbol	isTimestampString		1812874						
ANR	1813010	Symbol	filename		1812874						
ANR	1813011	Symbol	baseDirName		1812874						
ANR	1813012	Symbol	* dirLen		1812874						
ANR	1813013	Symbol	DIR_DELIM_CHAR		1812874						
ANR	1813014	Symbol	logBaseName		1812874						
ANR	1813015	Symbol	dirLen		1812874						
ANR	1813016	Symbol	* baseDirName		1812874						
ANR	1813017	Symbol	isOldString		1812874						
ANR	1813018	Function	file_select	222:0:5519:5662							
ANR	1813019	FunctionDef	file_select (const struct dirent * entry)		1813018	0					
ANR	1813020	CompoundStatement		222:44:5563:5662	1813018	0					
ANR	1813021	Statement	char	224:1:5568:5571	1813018	0	True				
ANR	1813022	Statement	*	224:6:5573:5573	1813018	1	True				
ANR	1813023	Statement	entryData	224:7:5574:5582	1813018	2	True				
ANR	1813024	Statement	=	224:17:5584:5584	1813018	3	True				
ANR	1813025	Statement	const_cast	224:19:5586:5595	1813018	4	True				
ANR	1813026	Statement	<	224:29:5596:5596	1813018	5	True				
ANR	1813027	Statement	char	224:30:5597:5600	1813018	6	True				
ANR	1813028	Statement	*	224:34:5601:5601	1813018	7	True				
ANR	1813029	Statement	>	224:35:5602:5602	1813018	8	True				
ANR	1813030	ExpressionStatement	entry -> d_name	224:36:5603:5618	1813018	9	True				
ANR	1813031	PtrMemberAccess	entry -> d_name		1813018	0					
ANR	1813032	Identifier	entry		1813018	0					
ANR	1813033	Identifier	d_name		1813018	1					
ANR	1813034	ReturnStatement	return isLogFilename ( entryData ) ? 1 : 0 ;	225:1:5621:5660	1813018	10	True				
ANR	1813035	ConditionalExpression	isLogFilename ( entryData ) ? 1 : 0		1813018	0					
ANR	1813036	Condition	isLogFilename ( entryData )		1813018	0					
ANR	1813037	CallExpression	isLogFilename ( entryData )		1813018	0					
ANR	1813038	Callee	isLogFilename		1813018	0					
ANR	1813039	Identifier	isLogFilename		1813018	0					
ANR	1813040	ArgumentList	entryData		1813018	1					
ANR	1813041	Argument	entryData		1813018	0					
ANR	1813042	Identifier	entryData		1813018	0					
ANR	1813043	PrimaryExpression	1		1813018	1					
ANR	1813044	PrimaryExpression	0		1813018	2					
ANR	1813045	ReturnType	int		1813018	1					
ANR	1813046	Identifier	file_select		1813018	2					
ANR	1813047	ParameterList	const struct dirent * entry		1813018	3					
ANR	1813048	Parameter	const struct dirent * entry	222:16:5535:5560	1813018	0	True				
ANR	1813049	ParameterType	const struct dirent *		1813018	0					
ANR	1813050	Identifier	entry		1813018	1					
ANR	1813051	CFGEntryNode	ENTRY		1813018		True				
ANR	1813052	CFGExitNode	EXIT		1813018		True				
ANR	1813053	Symbol	entry		1813018						
ANR	1813054	Symbol	entryData		1813018						
ANR	1813055	Symbol	isLogFilename		1813018						
ANR	1813056	Function	findOldest	229:0:5666:6097							
ANR	1813057	FunctionDef	"findOldest (char * dirName , int * count)"		1813056	0					
ANR	1813058	CompoundStatement		229:44:5710:6097	1813056	0					
ANR	1813059	IdentifierDeclStatement	struct dirent * * files ;	230:1:5713:5734	1813056	0	True				
ANR	1813060	IdentifierDecl	* * files		1813056	0					
ANR	1813061	IdentifierDeclType	struct dirent * *		1813056	0					
ANR	1813062	Identifier	files		1813056	1					
ANR	1813063	IdentifierDeclStatement	int len ;	231:1:5737:5745	1813056	1	True				
ANR	1813064	IdentifierDecl	len		1813056	0					
ANR	1813065	IdentifierDeclType	int		1813056	0					
ANR	1813066	Identifier	len		1813056	1					
ANR	1813067	ExpressionStatement	"* count = scandirectory ( dirName , & files , file_select , doalphasort )"	232:1:5748:5813	1813056	2	True				
ANR	1813068	AssignmentExpression	"* count = scandirectory ( dirName , & files , file_select , doalphasort )"		1813056	0		=			
ANR	1813069	UnaryOperationExpression	* count		1813056	0					
ANR	1813070	UnaryOperator	*		1813056	0					
ANR	1813071	Identifier	count		1813056	1					
ANR	1813072	CallExpression	"scandirectory ( dirName , & files , file_select , doalphasort )"		1813056	1					
ANR	1813073	Callee	scandirectory		1813056	0					
ANR	1813074	Identifier	scandirectory		1813056	0					
ANR	1813075	ArgumentList	dirName		1813056	1					
ANR	1813076	Argument	dirName		1813056	0					
ANR	1813077	Identifier	dirName		1813056	0					
ANR	1813078	Argument	& files		1813056	1					
ANR	1813079	UnaryOperationExpression	& files		1813056	0					
ANR	1813080	UnaryOperator	&		1813056	0					
ANR	1813081	Identifier	files		1813056	1					
ANR	1813082	Argument	file_select		1813056	2					
ANR	1813083	Identifier	file_select		1813056	0					
ANR	1813084	Argument	doalphasort		1813056	3					
ANR	1813085	Identifier	doalphasort		1813056	0					
ANR	1813086	IfStatement	if ( * count <= 0 )		1813056	3					
ANR	1813087	Condition	* count <= 0	234:5:5859:5869	1813056	0	True				
ANR	1813088	RelationalExpression	* count <= 0		1813056	0		<=			
ANR	1813089	UnaryOperationExpression	* count		1813056	0					
ANR	1813090	UnaryOperator	*		1813056	0					
ANR	1813091	Identifier	count		1813056	1					
ANR	1813092	PrimaryExpression	0		1813056	1					
ANR	1813093	ReturnStatement	return NULL ;	235:2:5874:5885	1813056	1	True				
ANR	1813094	Identifier	NULL		1813056	0					
ANR	1813095	IdentifierDeclStatement	char * oldFile = ( char * ) files [ 0 ] -> d_name ;	236:1:5888:5927	1813056	4	True				
ANR	1813096	IdentifierDecl	* oldFile = ( char * ) files [ 0 ] -> d_name		1813056	0					
ANR	1813097	IdentifierDeclType	char *		1813056	0					
ANR	1813098	Identifier	oldFile		1813056	1					
ANR	1813099	AssignmentExpression	* oldFile = ( char * ) files [ 0 ] -> d_name		1813056	2		=			
ANR	1813100	Identifier	oldFile		1813056	0					
ANR	1813101	CastExpression	( char * ) files [ 0 ] -> d_name		1813056	1					
ANR	1813102	CastTarget	char *		1813056	0					
ANR	1813103	PtrMemberAccess	files [ 0 ] -> d_name		1813056	1					
ANR	1813104	ArrayIndexing	files [ 0 ]		1813056	0					
ANR	1813105	Identifier	files		1813056	0					
ANR	1813106	PrimaryExpression	0		1813056	1					
ANR	1813107	Identifier	d_name		1813056	1					
ANR	1813108	ExpressionStatement	len = strlen ( oldFile )	237:1:5930:5951	1813056	5	True				
ANR	1813109	AssignmentExpression	len = strlen ( oldFile )		1813056	0		=			
ANR	1813110	Identifier	len		1813056	0					
ANR	1813111	CallExpression	strlen ( oldFile )		1813056	1					
ANR	1813112	Callee	strlen		1813056	0					
ANR	1813113	Identifier	strlen		1813056	0					
ANR	1813114	ArgumentList	oldFile		1813056	1					
ANR	1813115	Argument	oldFile		1813056	0					
ANR	1813116	Identifier	oldFile		1813056	0					
ANR	1813117	IdentifierDeclStatement	char * result = ( char * ) malloc ( len + 1 + strlen ( dirName ) + 1 ) ;	238:1:5954:6011	1813056	6	True				
ANR	1813118	IdentifierDecl	* result = ( char * ) malloc ( len + 1 + strlen ( dirName ) + 1 )		1813056	0					
ANR	1813119	IdentifierDeclType	char *		1813056	0					
ANR	1813120	Identifier	result		1813056	1					
ANR	1813121	AssignmentExpression	* result = ( char * ) malloc ( len + 1 + strlen ( dirName ) + 1 )		1813056	2		=			
ANR	1813122	Identifier	result		1813056	0					
ANR	1813123	CastExpression	( char * ) malloc ( len + 1 + strlen ( dirName ) + 1 )		1813056	1					
ANR	1813124	CastTarget	char *		1813056	0					
ANR	1813125	CallExpression	malloc ( len + 1 + strlen ( dirName ) + 1 )		1813056	1					
ANR	1813126	Callee	malloc		1813056	0					
ANR	1813127	Identifier	malloc		1813056	0					
ANR	1813128	ArgumentList	len + 1 + strlen ( dirName ) + 1		1813056	1					
ANR	1813129	Argument	len + 1 + strlen ( dirName ) + 1		1813056	0					
ANR	1813130	AdditiveExpression	len + 1 + strlen ( dirName ) + 1		1813056	0		+			
ANR	1813131	Identifier	len		1813056	0					
ANR	1813132	AdditiveExpression	1 + strlen ( dirName ) + 1		1813056	1		+			
ANR	1813133	PrimaryExpression	1		1813056	0					
ANR	1813134	AdditiveExpression	strlen ( dirName ) + 1		1813056	1		+			
ANR	1813135	CallExpression	strlen ( dirName )		1813056	0					
ANR	1813136	Callee	strlen		1813056	0					
ANR	1813137	Identifier	strlen		1813056	0					
ANR	1813138	ArgumentList	dirName		1813056	1					
ANR	1813139	Argument	dirName		1813056	0					
ANR	1813140	Identifier	dirName		1813056	0					
ANR	1813141	PrimaryExpression	1		1813056	1					
ANR	1813142	ExpressionStatement	"( void ) sprintf ( result , ""%s%c%s"" , dirName , DIR_DELIM_CHAR , oldFile )"	239:1:6014:6079	1813056	7	True				
ANR	1813143	CastExpression	"( void ) sprintf ( result , ""%s%c%s"" , dirName , DIR_DELIM_CHAR , oldFile )"		1813056	0					
ANR	1813144	CastTarget	void		1813056	0					
ANR	1813145	CallExpression	"sprintf ( result , ""%s%c%s"" , dirName , DIR_DELIM_CHAR , oldFile )"		1813056	1					
ANR	1813146	Callee	sprintf		1813056	0					
ANR	1813147	Identifier	sprintf		1813056	0					
ANR	1813148	ArgumentList	result		1813056	1					
ANR	1813149	Argument	result		1813056	0					
ANR	1813150	Identifier	result		1813056	0					
ANR	1813151	Argument	"""%s%c%s"""		1813056	1					
ANR	1813152	PrimaryExpression	"""%s%c%s"""		1813056	0					
ANR	1813153	Argument	dirName		1813056	2					
ANR	1813154	Identifier	dirName		1813056	0					
ANR	1813155	Argument	DIR_DELIM_CHAR		1813056	3					
ANR	1813156	Identifier	DIR_DELIM_CHAR		1813056	0					
ANR	1813157	Argument	oldFile		1813056	4					
ANR	1813158	Identifier	oldFile		1813056	0					
ANR	1813159	ReturnStatement	return result ;	240:1:6082:6095	1813056	8	True				
ANR	1813160	Identifier	result		1813056	0					
ANR	1813161	ReturnType	char *		1813056	1					
ANR	1813162	Identifier	findOldest		1813056	2					
ANR	1813163	ParameterList	"char * dirName , int * count"		1813056	3					
ANR	1813164	Parameter	char * dirName	229:17:5683:5695	1813056	0	True				
ANR	1813165	ParameterType	char *		1813056	0					
ANR	1813166	Identifier	dirName		1813056	1					
ANR	1813167	Parameter	int * count	229:32:5698:5707	1813056	1	True				
ANR	1813168	ParameterType	int *		1813056	0					
ANR	1813169	Identifier	count		1813056	1					
ANR	1813170	CFGEntryNode	ENTRY		1813056		True				
ANR	1813171	CFGExitNode	EXIT		1813056		True				
ANR	1813172	Symbol	malloc		1813056						
ANR	1813173	Symbol	oldFile		1813056						
ANR	1813174	Symbol	NULL		1813056						
ANR	1813175	Symbol	* * files		1813056						
ANR	1813176	Symbol	DIR_DELIM_CHAR		1813056						
ANR	1813177	Symbol	count		1813056						
ANR	1813178	Symbol	doalphasort		1813056						
ANR	1813179	Symbol	& files		1813056						
ANR	1813180	Symbol	files [ 0 ] -> d_name		1813056						
ANR	1813181	Symbol	* files		1813056						
ANR	1813182	Symbol	result		1813056						
ANR	1813183	Symbol	* count		1813056						
ANR	1813184	Symbol	strlen		1813056						
ANR	1813185	Symbol	len		1813056						
ANR	1813186	Symbol	scandirectory		1813056						
ANR	1813187	Symbol	files		1813056						
ANR	1813188	Symbol	file_select		1813056						
ANR	1813189	Symbol	dirName		1813056						
ANR	1813190	Function	findOldest	244:0:6106:6630							
ANR	1813191	FunctionDef	"findOldest (char * dirName , int * count)"		1813190	0					
ANR	1813192	CompoundStatement		244:44:6150:6630	1813190	0					
ANR	1813193	IdentifierDeclStatement	char * oldFile ;	245:1:6153:6166	1813190	0	True				
ANR	1813194	IdentifierDecl	* oldFile		1813190	0					
ANR	1813195	IdentifierDeclType	char *		1813190	0					
ANR	1813196	Identifier	oldFile		1813190	1					
ANR	1813197	IdentifierDeclStatement	WIN32_FIND_DATA ffd ;	246:1:6169:6188	1813190	1	True				
ANR	1813198	IdentifierDecl	ffd		1813190	0					
ANR	1813199	IdentifierDeclType	WIN32_FIND_DATA		1813190	0					
ANR	1813200	Identifier	ffd		1813190	1					
ANR	1813201	IdentifierDeclStatement	HANDLE hFind = INVALID_HANDLE_VALUE ;	247:1:6191:6226	1813190	2	True				
ANR	1813202	IdentifierDecl	hFind = INVALID_HANDLE_VALUE		1813190	0					
ANR	1813203	IdentifierDeclType	HANDLE		1813190	0					
ANR	1813204	Identifier	hFind		1813190	1					
ANR	1813205	AssignmentExpression	hFind = INVALID_HANDLE_VALUE		1813190	2		=			
ANR	1813206	Identifier	INVALID_HANDLE_VALUE		1813190	0					
ANR	1813207	Identifier	INVALID_HANDLE_VALUE		1813190	1					
ANR	1813208	IdentifierDeclStatement	int result ;	248:1:6229:6239	1813190	3	True				
ANR	1813209	IdentifierDecl	result		1813190	0					
ANR	1813210	IdentifierDeclType	int		1813190	0					
ANR	1813211	Identifier	result		1813190	1					
ANR	1813212	ExpressionStatement	* count = 0	250:1:6244:6254	1813190	4	True				
ANR	1813213	AssignmentExpression	* count = 0		1813190	0		=			
ANR	1813214	UnaryOperationExpression	* count		1813190	0					
ANR	1813215	UnaryOperator	*		1813190	0					
ANR	1813216	Identifier	count		1813190	1					
ANR	1813217	PrimaryExpression	0		1813190	1					
ANR	1813218	ExpressionStatement	"hFind = FindFirstFile ( searchLogName , & ffd )"	252:1:6259:6301	1813190	5	True				
ANR	1813219	AssignmentExpression	"hFind = FindFirstFile ( searchLogName , & ffd )"		1813190	0		=			
ANR	1813220	Identifier	hFind		1813190	0					
ANR	1813221	CallExpression	"FindFirstFile ( searchLogName , & ffd )"		1813190	1					
ANR	1813222	Callee	FindFirstFile		1813190	0					
ANR	1813223	Identifier	FindFirstFile		1813190	0					
ANR	1813224	ArgumentList	searchLogName		1813190	1					
ANR	1813225	Argument	searchLogName		1813190	0					
ANR	1813226	Identifier	searchLogName		1813190	0					
ANR	1813227	Argument	& ffd		1813190	1					
ANR	1813228	UnaryOperationExpression	& ffd		1813190	0					
ANR	1813229	UnaryOperator	&		1813190	0					
ANR	1813230	Identifier	ffd		1813190	1					
ANR	1813231	IfStatement	if ( hFind == INVALID_HANDLE_VALUE )		1813190	6					
ANR	1813232	Condition	hFind == INVALID_HANDLE_VALUE	253:5:6308:6336	1813190	0	True				
ANR	1813233	EqualityExpression	hFind == INVALID_HANDLE_VALUE		1813190	0		==			
ANR	1813234	Identifier	hFind		1813190	0					
ANR	1813235	Identifier	INVALID_HANDLE_VALUE		1813190	1					
ANR	1813236	CompoundStatement		10:36:188:188	1813190	1					
ANR	1813237	ReturnStatement	return NULL ;	254:2:6343:6354	1813190	0	True				
ANR	1813238	Identifier	NULL		1813190	0					
ANR	1813239	ExpressionStatement	"result = FindNextFile ( hFind , & ffd )"	257:1:6362:6396	1813190	7	True				
ANR	1813240	AssignmentExpression	"result = FindNextFile ( hFind , & ffd )"		1813190	0		=			
ANR	1813241	Identifier	result		1813190	0					
ANR	1813242	CallExpression	"FindNextFile ( hFind , & ffd )"		1813190	1					
ANR	1813243	Callee	FindNextFile		1813190	0					
ANR	1813244	Identifier	FindNextFile		1813190	0					
ANR	1813245	ArgumentList	hFind		1813190	1					
ANR	1813246	Argument	hFind		1813190	0					
ANR	1813247	Identifier	hFind		1813190	0					
ANR	1813248	Argument	& ffd		1813190	1					
ANR	1813249	UnaryOperationExpression	& ffd		1813190	0					
ANR	1813250	UnaryOperator	&		1813190	0					
ANR	1813251	Identifier	ffd		1813190	1					
ANR	1813252	IfStatement	if ( result == 0 )		1813190	8					
ANR	1813253	Condition	result == 0	258:5:6403:6413	1813190	0	True				
ANR	1813254	EqualityExpression	result == 0		1813190	0		==			
ANR	1813255	Identifier	result		1813190	0					
ANR	1813256	PrimaryExpression	0		1813190	1					
ANR	1813257	CompoundStatement		15:18:265:265	1813190	1					
ANR	1813258	ReturnStatement	return NULL ;	259:2:6420:6431	1813190	0	True				
ANR	1813259	Identifier	NULL		1813190	0					
ANR	1813260	ElseStatement	else		1813190	0					
ANR	1813261	CompoundStatement		17:8:290:290	1813190	0					
ANR	1813262	ExpressionStatement	oldFile = ( char * ) malloc ( strlen ( logBaseName ) + 16 )	261:2:6445:6494	1813190	0	True				
ANR	1813263	AssignmentExpression	oldFile = ( char * ) malloc ( strlen ( logBaseName ) + 16 )		1813190	0		=			
ANR	1813264	Identifier	oldFile		1813190	0					
ANR	1813265	CastExpression	( char * ) malloc ( strlen ( logBaseName ) + 16 )		1813190	1					
ANR	1813266	CastTarget	char *		1813190	0					
ANR	1813267	CallExpression	malloc ( strlen ( logBaseName ) + 16 )		1813190	1					
ANR	1813268	Callee	malloc		1813190	0					
ANR	1813269	Identifier	malloc		1813190	0					
ANR	1813270	ArgumentList	strlen ( logBaseName ) + 16		1813190	1					
ANR	1813271	Argument	strlen ( logBaseName ) + 16		1813190	0					
ANR	1813272	AdditiveExpression	strlen ( logBaseName ) + 16		1813190	0		+			
ANR	1813273	CallExpression	strlen ( logBaseName )		1813190	0					
ANR	1813274	Callee	strlen		1813190	0					
ANR	1813275	Identifier	strlen		1813190	0					
ANR	1813276	ArgumentList	logBaseName		1813190	1					
ANR	1813277	Argument	logBaseName		1813190	0					
ANR	1813278	Identifier	logBaseName		1813190	0					
ANR	1813279	PrimaryExpression	16		1813190	1					
ANR	1813280	ExpressionStatement	"strcpy ( oldFile , ffd . cFileName )"	262:2:6498:6528	1813190	1	True				
ANR	1813281	CallExpression	"strcpy ( oldFile , ffd . cFileName )"		1813190	0					
ANR	1813282	Callee	strcpy		1813190	0					
ANR	1813283	Identifier	strcpy		1813190	0					
ANR	1813284	ArgumentList	oldFile		1813190	1					
ANR	1813285	Argument	oldFile		1813190	0					
ANR	1813286	Identifier	oldFile		1813190	0					
ANR	1813287	Argument	ffd . cFileName		1813190	1					
ANR	1813288	MemberAccess	ffd . cFileName		1813190	0					
ANR	1813289	Identifier	ffd		1813190	0					
ANR	1813290	Identifier	cFileName		1813190	1					
ANR	1813291	WhileStatement	while ( result != 0 )		1813190	9					
ANR	1813292	Condition	result != 0	264:8:6541:6551	1813190	0	True				
ANR	1813293	EqualityExpression	result != 0		1813190	0		!=			
ANR	1813294	Identifier	result		1813190	0					
ANR	1813295	PrimaryExpression	0		1813190	1					
ANR	1813296	CompoundStatement		21:21:403:403	1813190	1					
ANR	1813297	ExpressionStatement	++ ( * count )	265:2:6558:6568	1813190	0	True				
ANR	1813298	UnaryExpression	++ ( * count )		1813190	0					
ANR	1813299	IncDec	++		1813190	0					
ANR	1813300	UnaryOperationExpression	* count		1813190	1					
ANR	1813301	UnaryOperator	*		1813190	0					
ANR	1813302	Identifier	count		1813190	1					
ANR	1813303	ExpressionStatement	"result = FindNextFile ( hFind , & ffd )"	266:2:6572:6606	1813190	1	True				
ANR	1813304	AssignmentExpression	"result = FindNextFile ( hFind , & ffd )"		1813190	0		=			
ANR	1813305	Identifier	result		1813190	0					
ANR	1813306	CallExpression	"FindNextFile ( hFind , & ffd )"		1813190	1					
ANR	1813307	Callee	FindNextFile		1813190	0					
ANR	1813308	Identifier	FindNextFile		1813190	0					
ANR	1813309	ArgumentList	hFind		1813190	1					
ANR	1813310	Argument	hFind		1813190	0					
ANR	1813311	Identifier	hFind		1813190	0					
ANR	1813312	Argument	& ffd		1813190	1					
ANR	1813313	UnaryOperationExpression	& ffd		1813190	0					
ANR	1813314	UnaryOperator	&		1813190	0					
ANR	1813315	Identifier	ffd		1813190	1					
ANR	1813316	ReturnStatement	return oldFile ;	269:1:6614:6628	1813190	10	True				
ANR	1813317	Identifier	oldFile		1813190	0					
ANR	1813318	ReturnType	char *		1813190	1					
ANR	1813319	Identifier	findOldest		1813190	2					
ANR	1813320	ParameterList	"char * dirName , int * count"		1813190	3					
ANR	1813321	Parameter	char * dirName	244:17:6123:6135	1813190	0	True				
ANR	1813322	ParameterType	char *		1813190	0					
ANR	1813323	Identifier	dirName		1813190	1					
ANR	1813324	Parameter	int * count	244:32:6138:6147	1813190	1	True				
ANR	1813325	ParameterType	int *		1813190	0					
ANR	1813326	Identifier	count		1813190	1					
ANR	1813327	CFGEntryNode	ENTRY		1813190		True				
ANR	1813328	CFGExitNode	EXIT		1813190		True				
ANR	1813329	Symbol	malloc		1813190						
ANR	1813330	Symbol	oldFile		1813190						
ANR	1813331	Symbol	NULL		1813190						
ANR	1813332	Symbol	ffd		1813190						
ANR	1813333	Symbol	count		1813190						
ANR	1813334	Symbol	FindFirstFile		1813190						
ANR	1813335	Symbol	INVALID_HANDLE_VALUE		1813190						
ANR	1813336	Symbol	& ffd		1813190						
ANR	1813337	Symbol	FindNextFile		1813190						
ANR	1813338	Symbol	result		1813190						
ANR	1813339	Symbol	* count		1813190						
ANR	1813340	Symbol	strlen		1813190						
ANR	1813341	Symbol	searchLogName		1813190						
ANR	1813342	Symbol	logBaseName		1813190						
ANR	1813343	Symbol	ffd . cFileName		1813190						
ANR	1813344	Symbol	hFind		1813190						
ANR	1813345	Symbol	dirName		1813190						
ANR	1813346	Function	createTimestampString	274:0:6641:6966							
ANR	1813347	FunctionDef	createTimestampString ()		1813346	0					
ANR	1813348	CompoundStatement		274:30:6671:6966	1813346	0					
ANR	1813349	IdentifierDeclStatement	time_t clock_now ;	275:1:6674:6690	1813346	0	True				
ANR	1813350	IdentifierDecl	clock_now		1813346	0					
ANR	1813351	IdentifierDeclType	time_t		1813346	0					
ANR	1813352	Identifier	clock_now		1813346	1					
ANR	1813353	IdentifierDeclStatement	struct tm * tm ;	276:1:6693:6706	1813346	1	True				
ANR	1813354	IdentifierDecl	* tm		1813346	0					
ANR	1813355	IdentifierDeclType	struct tm *		1813346	0					
ANR	1813356	Identifier	tm		1813346	1					
ANR	1813357	Statement	static	277:1:6709:6714	1813346	2	True				
ANR	1813358	IdentifierDeclStatement	char timebuf [ 80 ] ;	277:8:6716:6732	1813346	3	True				
ANR	1813359	IdentifierDecl	timebuf [ 80 ]		1813346	0					
ANR	1813360	IdentifierDeclType	char [ 80 ]		1813346	0					
ANR	1813361	Identifier	timebuf		1813346	1					
ANR	1813362	PrimaryExpression	80		1813346	2					
ANR	1813363	Statement	static	278:1:6735:6740	1813346	4	True				
ANR	1813364	IdentifierDeclStatement	char * timeFormat = 0 ;	278:8:6742:6762	1813346	5	True				
ANR	1813365	IdentifierDecl	* timeFormat = 0		1813346	0					
ANR	1813366	IdentifierDeclType	char *		1813346	0					
ANR	1813367	Identifier	timeFormat		1813346	1					
ANR	1813368	AssignmentExpression	* timeFormat = 0		1813346	2		=			
ANR	1813369	Identifier	timeFormat		1813346	0					
ANR	1813370	PrimaryExpression	0		1813346	1					
ANR	1813371	ExpressionStatement	"timeFormat = strdup ( ""%Y%m%dT%H%M%S"" )"	279:1:6765:6801	1813346	6	True				
ANR	1813372	AssignmentExpression	"timeFormat = strdup ( ""%Y%m%dT%H%M%S"" )"		1813346	0		=			
ANR	1813373	Identifier	timeFormat		1813346	0					
ANR	1813374	CallExpression	"strdup ( ""%Y%m%dT%H%M%S"" )"		1813346	1					
ANR	1813375	Callee	strdup		1813346	0					
ANR	1813376	Identifier	strdup		1813346	0					
ANR	1813377	ArgumentList	"""%Y%m%dT%H%M%S"""		1813346	1					
ANR	1813378	Argument	"""%Y%m%dT%H%M%S"""		1813346	0					
ANR	1813379	PrimaryExpression	"""%Y%m%dT%H%M%S"""		1813346	0					
ANR	1813380	ExpressionStatement	"memset ( ( void * ) & clock_now , 0 , sizeof ( time_t ) )"	280:1:6804:6846	1813346	7	True				
ANR	1813381	CallExpression	"memset ( ( void * ) & clock_now , 0 , sizeof ( time_t ) )"		1813346	0					
ANR	1813382	Callee	memset		1813346	0					
ANR	1813383	Identifier	memset		1813346	0					
ANR	1813384	ArgumentList	( void * ) & clock_now		1813346	1					
ANR	1813385	Argument	( void * ) & clock_now		1813346	0					
ANR	1813386	CastExpression	( void * ) & clock_now		1813346	0					
ANR	1813387	CastTarget	void *		1813346	0					
ANR	1813388	UnaryOperationExpression	& clock_now		1813346	1					
ANR	1813389	UnaryOperator	&		1813346	0					
ANR	1813390	Identifier	clock_now		1813346	1					
ANR	1813391	Argument	0		1813346	1					
ANR	1813392	PrimaryExpression	0		1813346	0					
ANR	1813393	Argument	sizeof ( time_t )		1813346	2					
ANR	1813394	SizeofExpression	sizeof ( time_t )		1813346	0					
ANR	1813395	Sizeof	sizeof		1813346	0					
ANR	1813396	SizeofOperand	time_t		1813346	1					
ANR	1813397	ExpressionStatement	( void ) time ( & clock_now )	281:1:6850:6875	1813346	8	True				
ANR	1813398	CastExpression	( void ) time ( & clock_now )		1813346	0					
ANR	1813399	CastTarget	void		1813346	0					
ANR	1813400	CallExpression	time ( & clock_now )		1813346	1					
ANR	1813401	Callee	time		1813346	0					
ANR	1813402	Identifier	time		1813346	0					
ANR	1813403	ArgumentList	& clock_now		1813346	1					
ANR	1813404	Argument	& clock_now		1813346	0					
ANR	1813405	UnaryOperationExpression	& clock_now		1813346	0					
ANR	1813406	UnaryOperator	&		1813346	0					
ANR	1813407	Identifier	clock_now		1813346	1					
ANR	1813408	ExpressionStatement	tm = localtime ( & clock_now )	282:1:6878:6906	1813346	9	True				
ANR	1813409	AssignmentExpression	tm = localtime ( & clock_now )		1813346	0		=			
ANR	1813410	Identifier	tm		1813346	0					
ANR	1813411	CallExpression	localtime ( & clock_now )		1813346	1					
ANR	1813412	Callee	localtime		1813346	0					
ANR	1813413	Identifier	localtime		1813346	0					
ANR	1813414	ArgumentList	& clock_now		1813346	1					
ANR	1813415	Argument	& clock_now		1813346	0					
ANR	1813416	UnaryOperationExpression	& clock_now		1813346	0					
ANR	1813417	UnaryOperator	&		1813346	0					
ANR	1813418	Identifier	clock_now		1813346	1					
ANR	1813419	ExpressionStatement	"strftime ( timebuf , 80 , timeFormat , tm )"	283:1:6910:6947	1813346	10	True				
ANR	1813420	CallExpression	"strftime ( timebuf , 80 , timeFormat , tm )"		1813346	0					
ANR	1813421	Callee	strftime		1813346	0					
ANR	1813422	Identifier	strftime		1813346	0					
ANR	1813423	ArgumentList	timebuf		1813346	1					
ANR	1813424	Argument	timebuf		1813346	0					
ANR	1813425	Identifier	timebuf		1813346	0					
ANR	1813426	Argument	80		1813346	1					
ANR	1813427	PrimaryExpression	80		1813346	0					
ANR	1813428	Argument	timeFormat		1813346	2					
ANR	1813429	Identifier	timeFormat		1813346	0					
ANR	1813430	Argument	tm		1813346	3					
ANR	1813431	Identifier	tm		1813346	0					
ANR	1813432	ReturnStatement	return timebuf ;	284:1:6950:6964	1813346	11	True				
ANR	1813433	Identifier	timebuf		1813346	0					
ANR	1813434	ReturnType	char *		1813346	1					
ANR	1813435	Identifier	createTimestampString		1813346	2					
ANR	1813436	ParameterList			1813346	3					
ANR	1813437	CFGEntryNode	ENTRY		1813346		True				
ANR	1813438	CFGExitNode	EXIT		1813346		True				
ANR	1813439	Symbol	localtime		1813346						
ANR	1813440	Symbol	& clock_now		1813346						
ANR	1813441	Symbol	timeFormat		1813346						
ANR	1813442	Symbol	tm		1813346						
ANR	1813443	Symbol	timebuf		1813346						
ANR	1813444	Symbol	strdup		1813346						
ANR	1813445	Symbol	clock_now		1813346						
