command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2053124	File	data/converged/CVE-2011-4930_htcondor/procd_main.cpp								
ANR	2053125	DeclStmt									
ANR	2053126	Decl							extern int	extern int	log_size
ANR	2053127	DeclStmt									
ANR	2053128	Decl							char	char *	local_server_address
ANR	2053129	DeclStmt									
ANR	2053130	Decl							char	char *	local_client_principal
ANR	2053131	DeclStmt									
ANR	2053132	Decl							char	char *	log_file_name
ANR	2053133	DeclStmt									
ANR	2053134	Decl							int	int	max_snapshot_interval
ANR	2053135	DeclStmt									
ANR	2053136	Decl							gid_t	gid_t	min_tracking_gid
ANR	2053137	DeclStmt									
ANR	2053138	Decl							gid_t	gid_t	max_tracking_gid
ANR	2053139	DeclStmt									
ANR	2053140	Decl							char	char *	windows_softkill_binary
ANR	2053141	DeclStmt									
ANR	2053142	Decl							char	char *	glexec_kill_path
ANR	2053143	DeclStmt									
ANR	2053144	Decl							char	char *	glexec_path
ANR	2053145	DeclStmt									
ANR	2053146	Decl							bool	bool	use_external_gid_association
ANR	2053147	DeclStmt									
ANR	2053148	Decl							pid_t	pid_t	root_pid
ANR	2053149	DeclStmt									
ANR	2053150	Decl							bool	bool	root_pid_specified
ANR	2053151	Function	usage	97:0:3076:4771							
ANR	2053152	FunctionDef	usage ()		2053151	0					
ANR	2053153	CompoundStatement		99:0:3100:4771	2053151	0					
ANR	2053154	Statement	fprintf	100:1:3103:3109	2053151	0	True				
ANR	2053155	Statement	(	100:8:3110:3110	2053151	1	True				
ANR	2053156	Statement	stderr	100:9:3111:3116	2053151	2	True				
ANR	2053157	Statement	","	100:15:3117:3117	2053151	3	True				
ANR	2053158	Statement	"""Usage:\\n"""	100:17:3119:3128	2053151	4	True				
ANR	2053159	Statement	"""  -h                     This usage message.\\n"""	101:1:3131:3178	2053151	5	True				
ANR	2053160	Statement	"""  -D                     Wait for debugger.\\n"""	102:1:3181:3227	2053151	6	True				
ANR	2053161	Statement	"""  -A <address-file>      Path to address file for client communication.\\n"""	103:1:3230:3304	2053151	7	True				
ANR	2053162	Statement	"""  -C <principal>         The UID owner of the address file.\\n"""	104:1:3307:3369	2053151	8	True				
ANR	2053163	Statement	"""  -L <log-file>          Path to the output logfile.\\n"""	105:1:3372:3427	2053151	9	True				
ANR	2053164	Statement	"""  -E                     When specified with -G, the procd_ctl tool\\n"""	106:1:3430:3500	2053151	10	True				
ANR	2053165	Statement	"""                         can be used to associate a gid with the pid\\n"""	107:1:3503:3574	2053151	11	True				
ANR	2053166	Statement	"""                         family.\\n"""	108:1:3577:3612	2053151	12	True				
ANR	2053167	Statement	"""  -P <pid>               If specified, then the procd will manage the\\n"""	109:1:3615:3687	2053151	13	True				
ANR	2053168	Statement	"""                         process family rooted at this pid. If this pid\\n"""	110:1:3690:3764	2053151	14	True				
ANR	2053169	Statement	"""                         dies the procd will continue running.  If not\\n"""	111:1:3767:3840	2053151	15	True				
ANR	2053170	Statement	"""                         specified, then the procd's parent, which must\\n"""	112:1:3843:3917	2053151	16	True				
ANR	2053171	Statement	"""                         not be process 1 on unix, is monitored. If\\n"""	113:1:3920:3990	2053151	17	True				
ANR	2053172	Statement	"""                         the parent process dies, the condor_procd will\\n"""	114:1:3993:4067	2053151	18	True				
ANR	2053173	Statement	"""                         exit.\\n"""	115:1:4070:4103	2053151	19	True				
ANR	2053174	Statement	"""  -S <seconds>           Process snapshot interval.\\n"""	116:1:4106:4160	2053151	20	True				
ANR	2053175	Statement	"""  -G <min-gid> <max-gid> If -E is not specified, then self-allocate gids\\n"""	117:1:4163:4238	2053151	21	True				
ANR	2053176	Statement	"""                         out of this range for process family tracking.\\n"""	118:1:4241:4315	2053151	22	True				
ANR	2053177	Statement	"""                         If -E is specified then procd_ctl must be used\\n"""	119:1:4318:4392	2053151	23	True				
ANR	2053178	Statement	"""                         to allocate gids which must then be in this\\n"""	120:1:4395:4466	2053151	24	True				
ANR	2053179	Statement	"""                         range.\\n"""	121:1:4469:4503	2053151	25	True				
ANR	2053180	Statement	"""  -I <glexec-kill-path> <glexec-path>\\n"""	122:1:4506:4546	2053151	26	True				
ANR	2053181	Statement	"""                         Specify the binary which will send a signal\\n"""	123:1:4549:4620	2053151	27	True				
ANR	2053182	Statement	"""                         to a pid and the glexec binary which will run\\n"""	124:1:4623:4696	2053151	28	True				
ANR	2053183	Statement	"""                         the program under the right priviledges.\\n"""	125:1:4699:4767	2053151	29	True				
ANR	2053184	Statement	)	125:70:4768:4768	2053151	30	True				
ANR	2053185	ExpressionStatement		125:71:4769:4769	2053151	31	True				
ANR	2053186	ReturnType	static void		2053151	1					
ANR	2053187	Identifier	usage		2053151	2					
ANR	2053188	ParameterList			2053151	3					
ANR	2053189	CFGEntryNode	ENTRY		2053151		True				
ANR	2053190	CFGExitNode	EXIT		2053151		True				
ANR	2053191	Function	fail_illegal_option	128:0:4774:4924							
ANR	2053192	FunctionDef	fail_illegal_option (char * option)		2053191	0					
ANR	2053193	CompoundStatement		130:0:4827:4924	2053191	0					
ANR	2053194	ExpressionStatement	"fprintf ( stderr , ""error: illegal option: %s\\n"" , option )"	131:1:4830:4902	2053191	0	True				
ANR	2053195	CallExpression	"fprintf ( stderr , ""error: illegal option: %s\\n"" , option )"		2053191	0					
ANR	2053196	Callee	fprintf		2053191	0					
ANR	2053197	Identifier	fprintf		2053191	0					
ANR	2053198	ArgumentList	stderr		2053191	1					
ANR	2053199	Argument	stderr		2053191	0					
ANR	2053200	Identifier	stderr		2053191	0					
ANR	2053201	Argument	"""error: illegal option: %s\\n"""		2053191	1					
ANR	2053202	PrimaryExpression	"""error: illegal option: %s\\n"""		2053191	0					
ANR	2053203	Argument	option		2053191	2					
ANR	2053204	Identifier	option		2053191	0					
ANR	2053205	ExpressionStatement	usage ( )	134:1:4905:4912	2053191	1	True				
ANR	2053206	CallExpression	usage ( )		2053191	0					
ANR	2053207	Callee	usage		2053191	0					
ANR	2053208	Identifier	usage		2053191	0					
ANR	2053209	ArgumentList			2053191	1					
ANR	2053210	ExpressionStatement	exit ( 1 )	135:1:4915:4922	2053191	2	True				
ANR	2053211	CallExpression	exit ( 1 )		2053191	0					
ANR	2053212	Callee	exit		2053191	0					
ANR	2053213	Identifier	exit		2053191	0					
ANR	2053214	ArgumentList	1		2053191	1					
ANR	2053215	Argument	1		2053191	0					
ANR	2053216	PrimaryExpression	1		2053191	0					
ANR	2053217	ReturnType	static inline void		2053191	1					
ANR	2053218	Identifier	fail_illegal_option		2053191	2					
ANR	2053219	ParameterList	char * option		2053191	3					
ANR	2053220	Parameter	char * option	129:20:4813:4824	2053191	0	True				
ANR	2053221	ParameterType	char *		2053191	0					
ANR	2053222	Identifier	option		2053191	1					
ANR	2053223	CFGEntryNode	ENTRY		2053191		True				
ANR	2053224	CFGExitNode	EXIT		2053191		True				
ANR	2053225	Symbol	stderr		2053191						
ANR	2053226	Symbol	option		2053191						
ANR	2053227	Function	fail_option_args	138:0:4927:5177							
ANR	2053228	FunctionDef	"fail_option_args (const char * option , int args_required)"		2053227	0					
ANR	2053229	CompoundStatement		140:0:5002:5177	2053227	0					
ANR	2053230	ExpressionStatement	"fprintf ( stderr , ""error: option \\""%s\\"" requires %d %s\\n"" , option , args_required , args_required == 1 ? ""argument"" : ""arguments"" )"	141:1:5005:5155	2053227	0	True				
ANR	2053231	CallExpression	"fprintf ( stderr , ""error: option \\""%s\\"" requires %d %s\\n"" , option , args_required , args_required == 1 ? ""argument"" : ""arguments"" )"		2053227	0					
ANR	2053232	Callee	fprintf		2053227	0					
ANR	2053233	Identifier	fprintf		2053227	0					
ANR	2053234	ArgumentList	stderr		2053227	1					
ANR	2053235	Argument	stderr		2053227	0					
ANR	2053236	Identifier	stderr		2053227	0					
ANR	2053237	Argument	"""error: option \\""%s\\"" requires %d %s\\n"""		2053227	1					
ANR	2053238	PrimaryExpression	"""error: option \\""%s\\"" requires %d %s\\n"""		2053227	0					
ANR	2053239	Argument	option		2053227	2					
ANR	2053240	Identifier	option		2053227	0					
ANR	2053241	Argument	args_required		2053227	3					
ANR	2053242	Identifier	args_required		2053227	0					
ANR	2053243	Argument	"args_required == 1 ? ""argument"" : ""arguments"""		2053227	4					
ANR	2053244	ConditionalExpression	"args_required == 1 ? ""argument"" : ""arguments"""		2053227	0					
ANR	2053245	Condition	args_required == 1		2053227	0					
ANR	2053246	EqualityExpression	args_required == 1		2053227	0		==			
ANR	2053247	Identifier	args_required		2053227	0					
ANR	2053248	PrimaryExpression	1		2053227	1					
ANR	2053249	PrimaryExpression	"""argument"""		2053227	1					
ANR	2053250	PrimaryExpression	"""arguments"""		2053227	2					
ANR	2053251	ExpressionStatement	usage ( )	146:1:5158:5165	2053227	1	True				
ANR	2053252	CallExpression	usage ( )		2053227	0					
ANR	2053253	Callee	usage		2053227	0					
ANR	2053254	Identifier	usage		2053227	0					
ANR	2053255	ArgumentList			2053227	1					
ANR	2053256	ExpressionStatement	exit ( 1 )	147:1:5168:5175	2053227	2	True				
ANR	2053257	CallExpression	exit ( 1 )		2053227	0					
ANR	2053258	Callee	exit		2053227	0					
ANR	2053259	Identifier	exit		2053227	0					
ANR	2053260	ArgumentList	1		2053227	1					
ANR	2053261	Argument	1		2053227	0					
ANR	2053262	PrimaryExpression	1		2053227	0					
ANR	2053263	ReturnType	static inline void		2053227	1					
ANR	2053264	Identifier	fail_option_args		2053227	2					
ANR	2053265	ParameterList	"const char * option , int args_required"		2053227	3					
ANR	2053266	Parameter	const char * option	139:17:4963:4980	2053227	0	True				
ANR	2053267	ParameterType	const char *		2053227	0					
ANR	2053268	Identifier	option		2053227	1					
ANR	2053269	Parameter	int args_required	139:37:4983:4999	2053227	1	True				
ANR	2053270	ParameterType	int		2053227	0					
ANR	2053271	Identifier	args_required		2053227	1					
ANR	2053272	CFGEntryNode	ENTRY		2053227		True				
ANR	2053273	CFGExitNode	EXIT		2053227		True				
ANR	2053274	Symbol	args_required		2053227						
ANR	2053275	Symbol	stderr		2053227						
ANR	2053276	Symbol	option		2053227						
ANR	2053277	Function	parse_command_line	151:0:5181:8548							
ANR	2053278	FunctionDef	"parse_command_line (int argc , char * argv [ ])"		2053277	0					
ANR	2053279	CompoundStatement		153:0:5236:8548	2053277	0					
ANR	2053280	IdentifierDeclStatement	int index = 1 ;	154:1:5239:5252	2053277	0	True				
ANR	2053281	IdentifierDecl	index = 1		2053277	0					
ANR	2053282	IdentifierDeclType	int		2053277	0					
ANR	2053283	Identifier	index		2053277	1					
ANR	2053284	AssignmentExpression	index = 1		2053277	2		=			
ANR	2053285	Identifier	index		2053277	0					
ANR	2053286	PrimaryExpression	1		2053277	1					
ANR	2053287	WhileStatement	while ( index < argc )		2053277	1					
ANR	2053288	Condition	index < argc	155:8:5262:5273	2053277	0	True				
ANR	2053289	RelationalExpression	index < argc		2053277	0		<			
ANR	2053290	Identifier	index		2053277	0					
ANR	2053291	Identifier	argc		2053277	1					
ANR	2053292	CompoundStatement		3:22:39:39	2053277	1					
ANR	2053293	IfStatement	if ( argv [ index ] [ 0 ] != '-' || argv [ index ] [ 1 ] == '\\0' )		2053277	0					
ANR	2053294	Condition	argv [ index ] [ 0 ] != '-' || argv [ index ] [ 1 ] == '\\0'	160:6:5405:5451	2053277	0	True				
ANR	2053295	OrExpression	argv [ index ] [ 0 ] != '-' || argv [ index ] [ 1 ] == '\\0'		2053277	0		||			
ANR	2053296	EqualityExpression	argv [ index ] [ 0 ] != '-'		2053277	0		!=			
ANR	2053297	ArrayIndexing	argv [ index ] [ 0 ]		2053277	0					
ANR	2053298	ArrayIndexing	argv [ index ]		2053277	0					
ANR	2053299	Identifier	argv		2053277	0					
ANR	2053300	Identifier	index		2053277	1					
ANR	2053301	PrimaryExpression	0		2053277	1					
ANR	2053302	PrimaryExpression	'-'		2053277	1					
ANR	2053303	EqualityExpression	argv [ index ] [ 1 ] == '\\0'		2053277	1		==			
ANR	2053304	ArrayIndexing	argv [ index ] [ 1 ]		2053277	0					
ANR	2053305	ArrayIndexing	argv [ index ]		2053277	0					
ANR	2053306	Identifier	argv		2053277	0					
ANR	2053307	Identifier	index		2053277	1					
ANR	2053308	PrimaryExpression	1		2053277	1					
ANR	2053309	PrimaryExpression	'\\0'		2053277	1					
ANR	2053310	CompoundStatement		8:55:217:217	2053277	1					
ANR	2053311	ExpressionStatement	fail_illegal_option ( argv [ index ] )	161:3:5459:5491	2053277	0	True				
ANR	2053312	CallExpression	fail_illegal_option ( argv [ index ] )		2053277	0					
ANR	2053313	Callee	fail_illegal_option		2053277	0					
ANR	2053314	Identifier	fail_illegal_option		2053277	0					
ANR	2053315	ArgumentList	argv [ index ]		2053277	1					
ANR	2053316	Argument	argv [ index ]		2053277	0					
ANR	2053317	ArrayIndexing	argv [ index ]		2053277	0					
ANR	2053318	Identifier	argv		2053277	0					
ANR	2053319	Identifier	index		2053277	1					
ANR	2053320	SwitchStatement	switch ( argv [ index ] [ 1 ] )		2053277	1					
ANR	2053321	Condition	argv [ index ] [ 1 ]	166:9:5542:5555	2053277	0	True				
ANR	2053322	ArrayIndexing	argv [ index ] [ 1 ]		2053277	0					
ANR	2053323	ArrayIndexing	argv [ index ]		2053277	0					
ANR	2053324	Identifier	argv		2053277	0					
ANR	2053325	Identifier	index		2053277	1					
ANR	2053326	PrimaryExpression	1		2053277	1					
ANR	2053327	CompoundStatement		14:25:321:321	2053277	1					
ANR	2053328	Label	case 'D' :	171:3:5646:5654	2053277	0	True				
ANR	2053329	ExpressionStatement	sleep ( 30 )	172:4:5660:5669	2053277	1	True				
ANR	2053330	CallExpression	sleep ( 30 )		2053277	0					
ANR	2053331	Callee	sleep		2053277	0					
ANR	2053332	Identifier	sleep		2053277	0					
ANR	2053333	ArgumentList	30		2053277	1					
ANR	2053334	Argument	30		2053277	0					
ANR	2053335	PrimaryExpression	30		2053277	0					
ANR	2053336	BreakStatement	break ;	173:4:5675:5680	2053277	2	True				
ANR	2053337	Label	case 'A' :	177:3:5719:5727	2053277	3	True				
ANR	2053338	IfStatement	if ( index + 1 >= argc )		2053277	4					
ANR	2053339	Condition	index + 1 >= argc	178:8:5737:5753	2053277	0	True				
ANR	2053340	RelationalExpression	index + 1 >= argc		2053277	0		>=			
ANR	2053341	AdditiveExpression	index + 1		2053277	0		+			
ANR	2053342	Identifier	index		2053277	0					
ANR	2053343	PrimaryExpression	1		2053277	1					
ANR	2053344	Identifier	argc		2053277	1					
ANR	2053345	CompoundStatement		26:27:519:519	2053277	1					
ANR	2053346	ExpressionStatement	"fail_option_args ( ""-A"" , 1 )"	179:5:5763:5788	2053277	0	True				
ANR	2053347	CallExpression	"fail_option_args ( ""-A"" , 1 )"		2053277	0					
ANR	2053348	Callee	fail_option_args		2053277	0					
ANR	2053349	Identifier	fail_option_args		2053277	0					
ANR	2053350	ArgumentList	"""-A"""		2053277	1					
ANR	2053351	Argument	"""-A"""		2053277	0					
ANR	2053352	PrimaryExpression	"""-A"""		2053277	0					
ANR	2053353	Argument	1		2053277	1					
ANR	2053354	PrimaryExpression	1		2053277	0					
ANR	2053355	ExpressionStatement	index ++	181:4:5800:5807	2053277	5	True				
ANR	2053356	PostIncDecOperationExpression	index ++		2053277	0					
ANR	2053357	Identifier	index		2053277	0					
ANR	2053358	IncDec	++		2053277	1					
ANR	2053359	ExpressionStatement	local_server_address = argv [ index ]	182:4:5813:5847	2053277	6	True				
ANR	2053360	AssignmentExpression	local_server_address = argv [ index ]		2053277	0		=			
ANR	2053361	Identifier	local_server_address		2053277	0					
ANR	2053362	ArrayIndexing	argv [ index ]		2053277	1					
ANR	2053363	Identifier	argv		2053277	0					
ANR	2053364	Identifier	index		2053277	1					
ANR	2053365	BreakStatement	break ;	183:4:5853:5858	2053277	7	True				
ANR	2053366	Label	case 'C' :	187:3:5899:5907	2053277	8	True				
ANR	2053367	IfStatement	if ( index + 1 >= argc )		2053277	9					
ANR	2053368	Condition	index + 1 >= argc	188:8:5917:5933	2053277	0	True				
ANR	2053369	RelationalExpression	index + 1 >= argc		2053277	0		>=			
ANR	2053370	AdditiveExpression	index + 1		2053277	0		+			
ANR	2053371	Identifier	index		2053277	0					
ANR	2053372	PrimaryExpression	1		2053277	1					
ANR	2053373	Identifier	argc		2053277	1					
ANR	2053374	CompoundStatement		36:27:699:699	2053277	1					
ANR	2053375	ExpressionStatement	"fail_option_args ( ""-C"" , 1 )"	189:5:5943:5968	2053277	0	True				
ANR	2053376	CallExpression	"fail_option_args ( ""-C"" , 1 )"		2053277	0					
ANR	2053377	Callee	fail_option_args		2053277	0					
ANR	2053378	Identifier	fail_option_args		2053277	0					
ANR	2053379	ArgumentList	"""-C"""		2053277	1					
ANR	2053380	Argument	"""-C"""		2053277	0					
ANR	2053381	PrimaryExpression	"""-C"""		2053277	0					
ANR	2053382	Argument	1		2053277	1					
ANR	2053383	PrimaryExpression	1		2053277	0					
ANR	2053384	ExpressionStatement	index ++	191:4:5980:5987	2053277	10	True				
ANR	2053385	PostIncDecOperationExpression	index ++		2053277	0					
ANR	2053386	Identifier	index		2053277	0					
ANR	2053387	IncDec	++		2053277	1					
ANR	2053388	ExpressionStatement	local_client_principal = argv [ index ]	192:4:5993:6029	2053277	11	True				
ANR	2053389	AssignmentExpression	local_client_principal = argv [ index ]		2053277	0		=			
ANR	2053390	Identifier	local_client_principal		2053277	0					
ANR	2053391	ArrayIndexing	argv [ index ]		2053277	1					
ANR	2053392	Identifier	argv		2053277	0					
ANR	2053393	Identifier	index		2053277	1					
ANR	2053394	BreakStatement	break ;	193:4:6035:6040	2053277	12	True				
ANR	2053395	Label	case 'L' :	197:3:6072:6080	2053277	13	True				
ANR	2053396	IfStatement	if ( index + 1 >= argc )		2053277	14					
ANR	2053397	Condition	index + 1 >= argc	198:8:6090:6106	2053277	0	True				
ANR	2053398	RelationalExpression	index + 1 >= argc		2053277	0		>=			
ANR	2053399	AdditiveExpression	index + 1		2053277	0		+			
ANR	2053400	Identifier	index		2053277	0					
ANR	2053401	PrimaryExpression	1		2053277	1					
ANR	2053402	Identifier	argc		2053277	1					
ANR	2053403	CompoundStatement		46:27:872:872	2053277	1					
ANR	2053404	ExpressionStatement	"fail_option_args ( ""-L"" , 1 )"	199:5:6116:6141	2053277	0	True				
ANR	2053405	CallExpression	"fail_option_args ( ""-L"" , 1 )"		2053277	0					
ANR	2053406	Callee	fail_option_args		2053277	0					
ANR	2053407	Identifier	fail_option_args		2053277	0					
ANR	2053408	ArgumentList	"""-L"""		2053277	1					
ANR	2053409	Argument	"""-L"""		2053277	0					
ANR	2053410	PrimaryExpression	"""-L"""		2053277	0					
ANR	2053411	Argument	1		2053277	1					
ANR	2053412	PrimaryExpression	1		2053277	0					
ANR	2053413	ExpressionStatement	index ++	201:4:6153:6160	2053277	15	True				
ANR	2053414	PostIncDecOperationExpression	index ++		2053277	0					
ANR	2053415	Identifier	index		2053277	0					
ANR	2053416	IncDec	++		2053277	1					
ANR	2053417	ExpressionStatement	log_file_name = argv [ index ]	202:4:6166:6193	2053277	16	True				
ANR	2053418	AssignmentExpression	log_file_name = argv [ index ]		2053277	0		=			
ANR	2053419	Identifier	log_file_name		2053277	0					
ANR	2053420	ArrayIndexing	argv [ index ]		2053277	1					
ANR	2053421	Identifier	argv		2053277	0					
ANR	2053422	Identifier	index		2053277	1					
ANR	2053423	BreakStatement	break ;	203:4:6199:6204	2053277	17	True				
ANR	2053424	Label	case 'R' :	207:3:6253:6261	2053277	18	True				
ANR	2053425	IfStatement	if ( index + 1 >= argc )		2053277	19					
ANR	2053426	Condition	index + 1 >= argc	208:8:6271:6287	2053277	0	True				
ANR	2053427	RelationalExpression	index + 1 >= argc		2053277	0		>=			
ANR	2053428	AdditiveExpression	index + 1		2053277	0		+			
ANR	2053429	Identifier	index		2053277	0					
ANR	2053430	PrimaryExpression	1		2053277	1					
ANR	2053431	Identifier	argc		2053277	1					
ANR	2053432	CompoundStatement		56:27:1053:1053	2053277	1					
ANR	2053433	ExpressionStatement	"fail_option_args ( ""-R"" , 1 )"	209:5:6297:6322	2053277	0	True				
ANR	2053434	CallExpression	"fail_option_args ( ""-R"" , 1 )"		2053277	0					
ANR	2053435	Callee	fail_option_args		2053277	0					
ANR	2053436	Identifier	fail_option_args		2053277	0					
ANR	2053437	ArgumentList	"""-R"""		2053277	1					
ANR	2053438	Argument	"""-R"""		2053277	0					
ANR	2053439	PrimaryExpression	"""-R"""		2053277	0					
ANR	2053440	Argument	1		2053277	1					
ANR	2053441	PrimaryExpression	1		2053277	0					
ANR	2053442	ExpressionStatement	index ++	211:4:6334:6341	2053277	20	True				
ANR	2053443	PostIncDecOperationExpression	index ++		2053277	0					
ANR	2053444	Identifier	index		2053277	0					
ANR	2053445	IncDec	++		2053277	1					
ANR	2053446	ExpressionStatement	log_size = atoi ( argv [ index ] )	212:4:6347:6375	2053277	21	True				
ANR	2053447	AssignmentExpression	log_size = atoi ( argv [ index ] )		2053277	0		=			
ANR	2053448	Identifier	log_size		2053277	0					
ANR	2053449	CallExpression	atoi ( argv [ index ] )		2053277	1					
ANR	2053450	Callee	atoi		2053277	0					
ANR	2053451	Identifier	atoi		2053277	0					
ANR	2053452	ArgumentList	argv [ index ]		2053277	1					
ANR	2053453	Argument	argv [ index ]		2053277	0					
ANR	2053454	ArrayIndexing	argv [ index ]		2053277	0					
ANR	2053455	Identifier	argv		2053277	0					
ANR	2053456	Identifier	index		2053277	1					
ANR	2053457	BreakStatement	break ;	213:4:6381:6386	2053277	22	True				
ANR	2053458	Label	case 'S' :	217:3:6434:6442	2053277	23	True				
ANR	2053459	IfStatement	if ( index + 1 >= argc )		2053277	24					
ANR	2053460	Condition	index + 1 >= argc	218:8:6452:6468	2053277	0	True				
ANR	2053461	RelationalExpression	index + 1 >= argc		2053277	0		>=			
ANR	2053462	AdditiveExpression	index + 1		2053277	0		+			
ANR	2053463	Identifier	index		2053277	0					
ANR	2053464	PrimaryExpression	1		2053277	1					
ANR	2053465	Identifier	argc		2053277	1					
ANR	2053466	CompoundStatement		66:27:1234:1234	2053277	1					
ANR	2053467	ExpressionStatement	"fail_option_args ( ""-S"" , 1 )"	219:5:6478:6503	2053277	0	True				
ANR	2053468	CallExpression	"fail_option_args ( ""-S"" , 1 )"		2053277	0					
ANR	2053469	Callee	fail_option_args		2053277	0					
ANR	2053470	Identifier	fail_option_args		2053277	0					
ANR	2053471	ArgumentList	"""-S"""		2053277	1					
ANR	2053472	Argument	"""-S"""		2053277	0					
ANR	2053473	PrimaryExpression	"""-S"""		2053277	0					
ANR	2053474	Argument	1		2053277	1					
ANR	2053475	PrimaryExpression	1		2053277	0					
ANR	2053476	ExpressionStatement	index ++	221:4:6515:6522	2053277	25	True				
ANR	2053477	PostIncDecOperationExpression	index ++		2053277	0					
ANR	2053478	Identifier	index		2053277	0					
ANR	2053479	IncDec	++		2053277	1					
ANR	2053480	ExpressionStatement	max_snapshot_interval = atoi ( argv [ index ] )	222:4:6528:6569	2053277	26	True				
ANR	2053481	AssignmentExpression	max_snapshot_interval = atoi ( argv [ index ] )		2053277	0		=			
ANR	2053482	Identifier	max_snapshot_interval		2053277	0					
ANR	2053483	CallExpression	atoi ( argv [ index ] )		2053277	1					
ANR	2053484	Callee	atoi		2053277	0					
ANR	2053485	Identifier	atoi		2053277	0					
ANR	2053486	ArgumentList	argv [ index ]		2053277	1					
ANR	2053487	Argument	argv [ index ]		2053277	0					
ANR	2053488	ArrayIndexing	argv [ index ]		2053277	0					
ANR	2053489	Identifier	argv		2053277	0					
ANR	2053490	Identifier	index		2053277	1					
ANR	2053491	BreakStatement	break ;	223:4:6575:6580	2053277	27	True				
ANR	2053492	Label	case 'E' :	228:3:6748:6756	2053277	28	True				
ANR	2053493	ExpressionStatement	use_external_gid_association = true	229:4:6762:6797	2053277	29	True				
ANR	2053494	AssignmentExpression	use_external_gid_association = true		2053277	0		=			
ANR	2053495	Identifier	use_external_gid_association		2053277	0					
ANR	2053496	Identifier	true		2053277	1					
ANR	2053497	BreakStatement	break ;	230:4:6803:6808	2053277	30	True				
ANR	2053498	Label	case 'P' :	235:3:6990:6998	2053277	31	True				
ANR	2053499	IfStatement	if ( index + 1 >= argc )		2053277	32					
ANR	2053500	Condition	index + 1 >= argc	236:8:7008:7024	2053277	0	True				
ANR	2053501	RelationalExpression	index + 1 >= argc		2053277	0		>=			
ANR	2053502	AdditiveExpression	index + 1		2053277	0		+			
ANR	2053503	Identifier	index		2053277	0					
ANR	2053504	PrimaryExpression	1		2053277	1					
ANR	2053505	Identifier	argc		2053277	1					
ANR	2053506	CompoundStatement		84:27:1790:1790	2053277	1					
ANR	2053507	ExpressionStatement	"fail_option_args ( ""-P"" , 1 )"	237:5:7034:7059	2053277	0	True				
ANR	2053508	CallExpression	"fail_option_args ( ""-P"" , 1 )"		2053277	0					
ANR	2053509	Callee	fail_option_args		2053277	0					
ANR	2053510	Identifier	fail_option_args		2053277	0					
ANR	2053511	ArgumentList	"""-P"""		2053277	1					
ANR	2053512	Argument	"""-P"""		2053277	0					
ANR	2053513	PrimaryExpression	"""-P"""		2053277	0					
ANR	2053514	Argument	1		2053277	1					
ANR	2053515	PrimaryExpression	1		2053277	0					
ANR	2053516	ExpressionStatement	index ++	239:4:7071:7078	2053277	33	True				
ANR	2053517	PostIncDecOperationExpression	index ++		2053277	0					
ANR	2053518	Identifier	index		2053277	0					
ANR	2053519	IncDec	++		2053277	1					
ANR	2053520	ExpressionStatement	root_pid = atoi ( argv [ index ] )	240:4:7084:7112	2053277	34	True				
ANR	2053521	AssignmentExpression	root_pid = atoi ( argv [ index ] )		2053277	0		=			
ANR	2053522	Identifier	root_pid		2053277	0					
ANR	2053523	CallExpression	atoi ( argv [ index ] )		2053277	1					
ANR	2053524	Callee	atoi		2053277	0					
ANR	2053525	Identifier	atoi		2053277	0					
ANR	2053526	ArgumentList	argv [ index ]		2053277	1					
ANR	2053527	Argument	argv [ index ]		2053277	0					
ANR	2053528	ArrayIndexing	argv [ index ]		2053277	0					
ANR	2053529	Identifier	argv		2053277	0					
ANR	2053530	Identifier	index		2053277	1					
ANR	2053531	IfStatement	if ( root_pid == 0 )		2053277	35					
ANR	2053532	Condition	root_pid == 0	241:8:7122:7134	2053277	0	True				
ANR	2053533	EqualityExpression	root_pid == 0		2053277	0		==			
ANR	2053534	Identifier	root_pid		2053277	0					
ANR	2053535	PrimaryExpression	0		2053277	1					
ANR	2053536	CompoundStatement		89:23:1900:1900	2053277	1					
ANR	2053537	ExpressionStatement	"EXCEPT ( ""The procd can not track pid 0."" )"	242:5:7144:7184	2053277	0	True				
ANR	2053538	CallExpression	"EXCEPT ( ""The procd can not track pid 0."" )"		2053277	0					
ANR	2053539	Callee	EXCEPT		2053277	0					
ANR	2053540	Identifier	EXCEPT		2053277	0					
ANR	2053541	ArgumentList	"""The procd can not track pid 0."""		2053277	1					
ANR	2053542	Argument	"""The procd can not track pid 0."""		2053277	0					
ANR	2053543	PrimaryExpression	"""The procd can not track pid 0."""		2053277	0					
ANR	2053544	IfStatement	if ( root_pid == 1 )		2053277	36					
ANR	2053545	Condition	root_pid == 1	247:8:7317:7329	2053277	0	True				
ANR	2053546	EqualityExpression	root_pid == 1		2053277	0		==			
ANR	2053547	Identifier	root_pid		2053277	0					
ANR	2053548	PrimaryExpression	1		2053277	1					
ANR	2053549	CompoundStatement		95:23:2095:2095	2053277	1					
ANR	2053550	ExpressionStatement	"EXCEPT ( ""The procd will not track pid 1 as the family."" )"	248:5:7339:7394	2053277	0	True				
ANR	2053551	CallExpression	"EXCEPT ( ""The procd will not track pid 1 as the family."" )"		2053277	0					
ANR	2053552	Callee	EXCEPT		2053277	0					
ANR	2053553	Identifier	EXCEPT		2053277	0					
ANR	2053554	ArgumentList	"""The procd will not track pid 1 as the family."""		2053277	1					
ANR	2053555	Argument	"""The procd will not track pid 1 as the family."""		2053277	0					
ANR	2053556	PrimaryExpression	"""The procd will not track pid 1 as the family."""		2053277	0					
ANR	2053557	ExpressionStatement	root_pid_specified = true	251:4:7413:7438	2053277	37	True				
ANR	2053558	AssignmentExpression	root_pid_specified = true		2053277	0		=			
ANR	2053559	Identifier	root_pid_specified		2053277	0					
ANR	2053560	Identifier	true		2053277	1					
ANR	2053561	BreakStatement	break ;	252:4:7444:7449	2053277	38	True				
ANR	2053562	Label	case 'G' :	257:3:7510:7518	2053277	39	True				
ANR	2053563	IfStatement	if ( index + 2 >= argc )		2053277	40					
ANR	2053564	Condition	index + 2 >= argc	258:8:7528:7544	2053277	0	True				
ANR	2053565	RelationalExpression	index + 2 >= argc		2053277	0		>=			
ANR	2053566	AdditiveExpression	index + 2		2053277	0		+			
ANR	2053567	Identifier	index		2053277	0					
ANR	2053568	PrimaryExpression	2		2053277	1					
ANR	2053569	Identifier	argc		2053277	1					
ANR	2053570	CompoundStatement		106:27:2310:2310	2053277	1					
ANR	2053571	ExpressionStatement	"fail_option_args ( ""-G"" , 2 )"	259:5:7554:7579	2053277	0	True				
ANR	2053572	CallExpression	"fail_option_args ( ""-G"" , 2 )"		2053277	0					
ANR	2053573	Callee	fail_option_args		2053277	0					
ANR	2053574	Identifier	fail_option_args		2053277	0					
ANR	2053575	ArgumentList	"""-G"""		2053277	1					
ANR	2053576	Argument	"""-G"""		2053277	0					
ANR	2053577	PrimaryExpression	"""-G"""		2053277	0					
ANR	2053578	Argument	2		2053277	1					
ANR	2053579	PrimaryExpression	2		2053277	0					
ANR	2053580	ExpressionStatement	index ++	261:4:7591:7598	2053277	41	True				
ANR	2053581	PostIncDecOperationExpression	index ++		2053277	0					
ANR	2053582	Identifier	index		2053277	0					
ANR	2053583	IncDec	++		2053277	1					
ANR	2053584	ExpressionStatement	min_tracking_gid = ( gid_t ) atoi ( argv [ index ] )	262:4:7604:7647	2053277	42	True				
ANR	2053585	AssignmentExpression	min_tracking_gid = ( gid_t ) atoi ( argv [ index ] )		2053277	0		=			
ANR	2053586	Identifier	min_tracking_gid		2053277	0					
ANR	2053587	CastExpression	( gid_t ) atoi ( argv [ index ] )		2053277	1					
ANR	2053588	CastTarget	gid_t		2053277	0					
ANR	2053589	CallExpression	atoi ( argv [ index ] )		2053277	1					
ANR	2053590	Callee	atoi		2053277	0					
ANR	2053591	Identifier	atoi		2053277	0					
ANR	2053592	ArgumentList	argv [ index ]		2053277	1					
ANR	2053593	Argument	argv [ index ]		2053277	0					
ANR	2053594	ArrayIndexing	argv [ index ]		2053277	0					
ANR	2053595	Identifier	argv		2053277	0					
ANR	2053596	Identifier	index		2053277	1					
ANR	2053597	ExpressionStatement	index ++	263:4:7653:7660	2053277	43	True				
ANR	2053598	PostIncDecOperationExpression	index ++		2053277	0					
ANR	2053599	Identifier	index		2053277	0					
ANR	2053600	IncDec	++		2053277	1					
ANR	2053601	ExpressionStatement	max_tracking_gid = ( gid_t ) atoi ( argv [ index ] )	264:4:7666:7709	2053277	44	True				
ANR	2053602	AssignmentExpression	max_tracking_gid = ( gid_t ) atoi ( argv [ index ] )		2053277	0		=			
ANR	2053603	Identifier	max_tracking_gid		2053277	0					
ANR	2053604	CastExpression	( gid_t ) atoi ( argv [ index ] )		2053277	1					
ANR	2053605	CastTarget	gid_t		2053277	0					
ANR	2053606	CallExpression	atoi ( argv [ index ] )		2053277	1					
ANR	2053607	Callee	atoi		2053277	0					
ANR	2053608	Identifier	atoi		2053277	0					
ANR	2053609	ArgumentList	argv [ index ]		2053277	1					
ANR	2053610	Argument	argv [ index ]		2053277	0					
ANR	2053611	ArrayIndexing	argv [ index ]		2053277	0					
ANR	2053612	Identifier	argv		2053277	0					
ANR	2053613	Identifier	index		2053277	1					
ANR	2053614	BreakStatement	break ;	265:4:7715:7720	2053277	45	True				
ANR	2053615	Label	case 'K' :	271:3:7804:7812	2053277	46	True				
ANR	2053616	IfStatement	if ( index + 1 >= argc )		2053277	47					
ANR	2053617	Condition	index + 1 >= argc	272:8:7822:7838	2053277	0	True				
ANR	2053618	RelationalExpression	index + 1 >= argc		2053277	0		>=			
ANR	2053619	AdditiveExpression	index + 1		2053277	0		+			
ANR	2053620	Identifier	index		2053277	0					
ANR	2053621	PrimaryExpression	1		2053277	1					
ANR	2053622	Identifier	argc		2053277	1					
ANR	2053623	CompoundStatement		120:27:2604:2604	2053277	1					
ANR	2053624	ExpressionStatement	"fail_option_args ( ""-K"" , 1 )"	273:5:7848:7873	2053277	0	True				
ANR	2053625	CallExpression	"fail_option_args ( ""-K"" , 1 )"		2053277	0					
ANR	2053626	Callee	fail_option_args		2053277	0					
ANR	2053627	Identifier	fail_option_args		2053277	0					
ANR	2053628	ArgumentList	"""-K"""		2053277	1					
ANR	2053629	Argument	"""-K"""		2053277	0					
ANR	2053630	PrimaryExpression	"""-K"""		2053277	0					
ANR	2053631	Argument	1		2053277	1					
ANR	2053632	PrimaryExpression	1		2053277	0					
ANR	2053633	ExpressionStatement	index ++	275:4:7885:7892	2053277	48	True				
ANR	2053634	PostIncDecOperationExpression	index ++		2053277	0					
ANR	2053635	Identifier	index		2053277	0					
ANR	2053636	IncDec	++		2053277	1					
ANR	2053637	ExpressionStatement	windows_softkill_binary = argv [ index ]	276:4:7898:7935	2053277	49	True				
ANR	2053638	AssignmentExpression	windows_softkill_binary = argv [ index ]		2053277	0		=			
ANR	2053639	Identifier	windows_softkill_binary		2053277	0					
ANR	2053640	ArrayIndexing	argv [ index ]		2053277	1					
ANR	2053641	Identifier	argv		2053277	0					
ANR	2053642	Identifier	index		2053277	1					
ANR	2053643	BreakStatement	break ;	277:4:7941:7946	2053277	50	True				
ANR	2053644	Label	case 'I' :	283:3:8020:8028	2053277	51	True				
ANR	2053645	IfStatement	if ( index + 2 >= argc )		2053277	52					
ANR	2053646	Condition	index + 2 >= argc	284:8:8038:8054	2053277	0	True				
ANR	2053647	RelationalExpression	index + 2 >= argc		2053277	0		>=			
ANR	2053648	AdditiveExpression	index + 2		2053277	0		+			
ANR	2053649	Identifier	index		2053277	0					
ANR	2053650	PrimaryExpression	2		2053277	1					
ANR	2053651	Identifier	argc		2053277	1					
ANR	2053652	CompoundStatement		132:27:2820:2820	2053277	1					
ANR	2053653	ExpressionStatement	"fail_option_args ( ""-I"" , 2 )"	285:5:8064:8089	2053277	0	True				
ANR	2053654	CallExpression	"fail_option_args ( ""-I"" , 2 )"		2053277	0					
ANR	2053655	Callee	fail_option_args		2053277	0					
ANR	2053656	Identifier	fail_option_args		2053277	0					
ANR	2053657	ArgumentList	"""-I"""		2053277	1					
ANR	2053658	Argument	"""-I"""		2053277	0					
ANR	2053659	PrimaryExpression	"""-I"""		2053277	0					
ANR	2053660	Argument	2		2053277	1					
ANR	2053661	PrimaryExpression	2		2053277	0					
ANR	2053662	ExpressionStatement	index ++	287:4:8101:8108	2053277	53	True				
ANR	2053663	PostIncDecOperationExpression	index ++		2053277	0					
ANR	2053664	Identifier	index		2053277	0					
ANR	2053665	IncDec	++		2053277	1					
ANR	2053666	ExpressionStatement	glexec_kill_path = argv [ index ]	288:4:8114:8144	2053277	54	True				
ANR	2053667	AssignmentExpression	glexec_kill_path = argv [ index ]		2053277	0		=			
ANR	2053668	Identifier	glexec_kill_path		2053277	0					
ANR	2053669	ArrayIndexing	argv [ index ]		2053277	1					
ANR	2053670	Identifier	argv		2053277	0					
ANR	2053671	Identifier	index		2053277	1					
ANR	2053672	ExpressionStatement	index ++	289:4:8150:8157	2053277	55	True				
ANR	2053673	PostIncDecOperationExpression	index ++		2053277	0					
ANR	2053674	Identifier	index		2053277	0					
ANR	2053675	IncDec	++		2053277	1					
ANR	2053676	ExpressionStatement	glexec_path = argv [ index ]	290:4:8163:8188	2053277	56	True				
ANR	2053677	AssignmentExpression	glexec_path = argv [ index ]		2053277	0		=			
ANR	2053678	Identifier	glexec_path		2053277	0					
ANR	2053679	ArrayIndexing	argv [ index ]		2053277	1					
ANR	2053680	Identifier	argv		2053277	0					
ANR	2053681	Identifier	index		2053277	1					
ANR	2053682	BreakStatement	break ;	291:4:8194:8199	2053277	57	True				
ANR	2053683	Label	default :	296:3:8237:8244	2053277	58	True				
ANR	2053684	Identifier	default		2053277	0					
ANR	2053685	ExpressionStatement	fail_illegal_option ( argv [ index ] )	297:4:8250:8282	2053277	59	True				
ANR	2053686	CallExpression	fail_illegal_option ( argv [ index ] )		2053277	0					
ANR	2053687	Callee	fail_illegal_option		2053277	0					
ANR	2053688	Identifier	fail_illegal_option		2053277	0					
ANR	2053689	ArgumentList	argv [ index ]		2053277	1					
ANR	2053690	Argument	argv [ index ]		2053277	0					
ANR	2053691	ArrayIndexing	argv [ index ]		2053277	0					
ANR	2053692	Identifier	argv		2053277	0					
ANR	2053693	Identifier	index		2053277	1					
ANR	2053694	ExpressionStatement	usage ( )	298:4:8288:8295	2053277	60	True				
ANR	2053695	CallExpression	usage ( )		2053277	0					
ANR	2053696	Callee	usage		2053277	0					
ANR	2053697	Identifier	usage		2053277	0					
ANR	2053698	ArgumentList			2053277	1					
ANR	2053699	ExpressionStatement	exit ( EXIT_FAILURE )	299:4:8301:8319	2053277	61	True				
ANR	2053700	CallExpression	exit ( EXIT_FAILURE )		2053277	0					
ANR	2053701	Callee	exit		2053277	0					
ANR	2053702	Identifier	exit		2053277	0					
ANR	2053703	ArgumentList	EXIT_FAILURE		2053277	1					
ANR	2053704	Argument	EXIT_FAILURE		2053277	0					
ANR	2053705	Identifier	EXIT_FAILURE		2053277	0					
ANR	2053706	BreakStatement	break ;	300:4:8325:8330	2053277	62	True				
ANR	2053707	ExpressionStatement	index ++	303:2:8339:8346	2053277	2	True				
ANR	2053708	PostIncDecOperationExpression	index ++		2053277	0					
ANR	2053709	Identifier	index		2053277	0					
ANR	2053710	IncDec	++		2053277	1					
ANR	2053711	IfStatement	if ( local_server_address == NULL )		2053277	2					
ANR	2053712	Condition	local_server_address == NULL	308:5:8419:8446	2053277	0	True				
ANR	2053713	EqualityExpression	local_server_address == NULL		2053277	0		==			
ANR	2053714	Identifier	local_server_address		2053277	0					
ANR	2053715	Identifier	NULL		2053277	1					
ANR	2053716	CompoundStatement		156:35:3212:3212	2053277	1					
ANR	2053717	ExpressionStatement	"fprintf ( stderr , ""error: the \\""-A\\"" option is required\\n"" )"	309:2:8453:8510	2053277	0	True				
ANR	2053718	CallExpression	"fprintf ( stderr , ""error: the \\""-A\\"" option is required\\n"" )"		2053277	0					
ANR	2053719	Callee	fprintf		2053277	0					
ANR	2053720	Identifier	fprintf		2053277	0					
ANR	2053721	ArgumentList	stderr		2053277	1					
ANR	2053722	Argument	stderr		2053277	0					
ANR	2053723	Identifier	stderr		2053277	0					
ANR	2053724	Argument	"""error: the \\""-A\\"" option is required\\n"""		2053277	1					
ANR	2053725	PrimaryExpression	"""error: the \\""-A\\"" option is required\\n"""		2053277	0					
ANR	2053726	ExpressionStatement	usage ( )	310:2:8514:8521	2053277	1	True				
ANR	2053727	CallExpression	usage ( )		2053277	0					
ANR	2053728	Callee	usage		2053277	0					
ANR	2053729	Identifier	usage		2053277	0					
ANR	2053730	ArgumentList			2053277	1					
ANR	2053731	ExpressionStatement	exit ( EXIT_FAILURE )	311:2:8525:8543	2053277	2	True				
ANR	2053732	CallExpression	exit ( EXIT_FAILURE )		2053277	0					
ANR	2053733	Callee	exit		2053277	0					
ANR	2053734	Identifier	exit		2053277	0					
ANR	2053735	ArgumentList	EXIT_FAILURE		2053277	1					
ANR	2053736	Argument	EXIT_FAILURE		2053277	0					
ANR	2053737	Identifier	EXIT_FAILURE		2053277	0					
ANR	2053738	ReturnType	static void		2053277	1					
ANR	2053739	Identifier	parse_command_line		2053277	2					
ANR	2053740	ParameterList	"int argc , char * argv [ ]"		2053277	3					
ANR	2053741	Parameter	int argc	152:19:5212:5219	2053277	0	True				
ANR	2053742	ParameterType	int		2053277	0					
ANR	2053743	Identifier	argc		2053277	1					
ANR	2053744	Parameter	char * argv [ ]	152:29:5222:5233	2053277	1	True				
ANR	2053745	ParameterType	char * [ ]		2053277	0					
ANR	2053746	Identifier	argv		2053277	1					
ANR	2053747	CFGEntryNode	ENTRY		2053277		True				
ANR	2053748	CFGExitNode	EXIT		2053277		True				
ANR	2053749	Symbol	local_client_principal		2053277						
ANR	2053750	Symbol	root_pid_specified		2053277						
ANR	2053751	Symbol	* index		2053277						
ANR	2053752	Symbol	min_tracking_gid		2053277						
ANR	2053753	Symbol	* argv		2053277						
ANR	2053754	Symbol	argv		2053277						
ANR	2053755	Symbol	glexec_path		2053277						
ANR	2053756	Symbol	* * argv		2053277						
ANR	2053757	Symbol	log_size		2053277						
ANR	2053758	Symbol	local_server_address		2053277						
ANR	2053759	Symbol	glexec_kill_path		2053277						
ANR	2053760	Symbol	* * index		2053277						
ANR	2053761	Symbol	argc		2053277						
ANR	2053762	Symbol	atoi		2053277						
ANR	2053763	Symbol	use_external_gid_association		2053277						
ANR	2053764	Symbol	NULL		2053277						
ANR	2053765	Symbol	index		2053277						
ANR	2053766	Symbol	log_file_name		2053277						
ANR	2053767	Symbol	stderr		2053277						
ANR	2053768	Symbol	max_snapshot_interval		2053277						
ANR	2053769	Symbol	EXIT_FAILURE		2053277						
ANR	2053770	Symbol	true		2053277						
ANR	2053771	Symbol	max_tracking_gid		2053277						
ANR	2053772	Symbol	root_pid		2053277						
ANR	2053773	Symbol	windows_softkill_binary		2053277						
ANR	2053774	Function	get_parent_info	315:0:8551:10095							
ANR	2053775	FunctionDef	"get_parent_info (pid_t & parent_pid , birthday_t & parent_birthday)"		2053774	0					
ANR	2053776	CompoundStatement		317:0:8627:10095	2053774	0					
ANR	2053777	IdentifierDeclStatement	procInfo * own_pi = NULL ;	318:1:8630:8653	2053774	0	True				
ANR	2053778	IdentifierDecl	* own_pi = NULL		2053774	0					
ANR	2053779	IdentifierDeclType	procInfo *		2053774	0					
ANR	2053780	Identifier	own_pi		2053774	1					
ANR	2053781	AssignmentExpression	* own_pi = NULL		2053774	2		=			
ANR	2053782	Identifier	NULL		2053774	0					
ANR	2053783	Identifier	NULL		2053774	1					
ANR	2053784	IdentifierDeclStatement	procInfo * parent_pi = NULL ;	319:1:8656:8682	2053774	1	True				
ANR	2053785	IdentifierDecl	* parent_pi = NULL		2053774	0					
ANR	2053786	IdentifierDeclType	procInfo *		2053774	0					
ANR	2053787	Identifier	parent_pi		2053774	1					
ANR	2053788	AssignmentExpression	* parent_pi = NULL		2053774	2		=			
ANR	2053789	Identifier	NULL		2053774	0					
ANR	2053790	Identifier	NULL		2053774	1					
ANR	2053791	IdentifierDeclStatement	int ignored ;	321:1:8686:8697	2053774	2	True				
ANR	2053792	IdentifierDecl	ignored		2053774	0					
ANR	2053793	IdentifierDeclType	int		2053774	0					
ANR	2053794	Identifier	ignored		2053774	1					
ANR	2053795	IfStatement	"if ( ProcAPI :: getProcInfo ( getpid ( ) , own_pi , ignored ) != PROCAPI_SUCCESS )"		2053774	3					
ANR	2053796	Condition	"ProcAPI :: getProcInfo ( getpid ( ) , own_pi , ignored ) != PROCAPI_SUCCESS"	322:5:8704:8769	2053774	0	True				
ANR	2053797	EqualityExpression	"ProcAPI :: getProcInfo ( getpid ( ) , own_pi , ignored ) != PROCAPI_SUCCESS"		2053774	0		!=			
ANR	2053798	CallExpression	"ProcAPI :: getProcInfo ( getpid ( ) , own_pi , ignored )"		2053774	0					
ANR	2053799	Callee	ProcAPI :: getProcInfo		2053774	0					
ANR	2053800	Identifier	ProcAPI :: getProcInfo		2053774	0					
ANR	2053801	ArgumentList	getpid ( )		2053774	1					
ANR	2053802	Argument	getpid ( )		2053774	0					
ANR	2053803	CallExpression	getpid ( )		2053774	0					
ANR	2053804	Callee	getpid		2053774	0					
ANR	2053805	Identifier	getpid		2053774	0					
ANR	2053806	ArgumentList			2053774	1					
ANR	2053807	Argument	own_pi		2053774	1					
ANR	2053808	Identifier	own_pi		2053774	0					
ANR	2053809	Argument	ignored		2053774	2					
ANR	2053810	Identifier	ignored		2053774	0					
ANR	2053811	Identifier	PROCAPI_SUCCESS		2053774	1					
ANR	2053812	CompoundStatement		6:73:144:144	2053774	1					
ANR	2053813	ExpressionStatement	"fprintf ( stderr , ""error: getProcInfo failed on own PID\\n"" )"	323:2:8776:8833	2053774	0	True				
ANR	2053814	CallExpression	"fprintf ( stderr , ""error: getProcInfo failed on own PID\\n"" )"		2053774	0					
ANR	2053815	Callee	fprintf		2053774	0					
ANR	2053816	Identifier	fprintf		2053774	0					
ANR	2053817	ArgumentList	stderr		2053774	1					
ANR	2053818	Argument	stderr		2053774	0					
ANR	2053819	Identifier	stderr		2053774	0					
ANR	2053820	Argument	"""error: getProcInfo failed on own PID\\n"""		2053774	1					
ANR	2053821	PrimaryExpression	"""error: getProcInfo failed on own PID\\n"""		2053774	0					
ANR	2053822	ExpressionStatement	exit ( 1 )	324:2:8837:8844	2053774	1	True				
ANR	2053823	CallExpression	exit ( 1 )		2053774	0					
ANR	2053824	Callee	exit		2053774	0					
ANR	2053825	Identifier	exit		2053774	0					
ANR	2053826	ArgumentList	1		2053774	1					
ANR	2053827	Argument	1		2053774	0					
ANR	2053828	PrimaryExpression	1		2053774	0					
ANR	2053829	IfStatement	"if ( ProcAPI :: getProcInfo ( own_pi -> ppid , parent_pi , ignored ) != PROCAPI_SUCCESS )"		2053774	4					
ANR	2053830	Condition	"ProcAPI :: getProcInfo ( own_pi -> ppid , parent_pi , ignored ) != PROCAPI_SUCCESS"	326:5:8854:8926	2053774	0	True				
ANR	2053831	EqualityExpression	"ProcAPI :: getProcInfo ( own_pi -> ppid , parent_pi , ignored ) != PROCAPI_SUCCESS"		2053774	0		!=			
ANR	2053832	CallExpression	"ProcAPI :: getProcInfo ( own_pi -> ppid , parent_pi , ignored )"		2053774	0					
ANR	2053833	Callee	ProcAPI :: getProcInfo		2053774	0					
ANR	2053834	Identifier	ProcAPI :: getProcInfo		2053774	0					
ANR	2053835	ArgumentList	own_pi -> ppid		2053774	1					
ANR	2053836	Argument	own_pi -> ppid		2053774	0					
ANR	2053837	PtrMemberAccess	own_pi -> ppid		2053774	0					
ANR	2053838	Identifier	own_pi		2053774	0					
ANR	2053839	Identifier	ppid		2053774	1					
ANR	2053840	Argument	parent_pi		2053774	1					
ANR	2053841	Identifier	parent_pi		2053774	0					
ANR	2053842	Argument	ignored		2053774	2					
ANR	2053843	Identifier	ignored		2053774	0					
ANR	2053844	Identifier	PROCAPI_SUCCESS		2053774	1					
ANR	2053845	CompoundStatement		10:80:301:301	2053774	1					
ANR	2053846	ExpressionStatement	"fprintf ( stderr , ""error: getProcInfo failed on parent PID\\n"" )"	327:2:8933:8993	2053774	0	True				
ANR	2053847	CallExpression	"fprintf ( stderr , ""error: getProcInfo failed on parent PID\\n"" )"		2053774	0					
ANR	2053848	Callee	fprintf		2053774	0					
ANR	2053849	Identifier	fprintf		2053774	0					
ANR	2053850	ArgumentList	stderr		2053774	1					
ANR	2053851	Argument	stderr		2053774	0					
ANR	2053852	Identifier	stderr		2053774	0					
ANR	2053853	Argument	"""error: getProcInfo failed on parent PID\\n"""		2053774	1					
ANR	2053854	PrimaryExpression	"""error: getProcInfo failed on parent PID\\n"""		2053774	0					
ANR	2053855	ExpressionStatement	exit ( 1 )	328:2:8997:9004	2053774	1	True				
ANR	2053856	CallExpression	exit ( 1 )		2053774	0					
ANR	2053857	Callee	exit		2053774	0					
ANR	2053858	Identifier	exit		2053774	0					
ANR	2053859	ArgumentList	1		2053774	1					
ANR	2053860	Argument	1		2053774	0					
ANR	2053861	PrimaryExpression	1		2053774	0					
ANR	2053862	IfStatement	if ( own_pi -> ppid == 1 )		2053774	5					
ANR	2053863	Condition	own_pi -> ppid == 1	340:5:9566:9582	2053774	0	True				
ANR	2053864	EqualityExpression	own_pi -> ppid == 1		2053774	0		==			
ANR	2053865	PtrMemberAccess	own_pi -> ppid		2053774	0					
ANR	2053866	Identifier	own_pi		2053774	0					
ANR	2053867	Identifier	ppid		2053774	1					
ANR	2053868	PrimaryExpression	1		2053774	1					
ANR	2053869	CompoundStatement		24:24:957:957	2053774	1					
ANR	2053870	ExpressionStatement	"fprintf ( stderr , ""error: Procd's ppid can't be 1!\\n"" )"	341:2:9589:9641	2053774	0	True				
ANR	2053871	CallExpression	"fprintf ( stderr , ""error: Procd's ppid can't be 1!\\n"" )"		2053774	0					
ANR	2053872	Callee	fprintf		2053774	0					
ANR	2053873	Identifier	fprintf		2053774	0					
ANR	2053874	ArgumentList	stderr		2053774	1					
ANR	2053875	Argument	stderr		2053774	0					
ANR	2053876	Identifier	stderr		2053774	0					
ANR	2053877	Argument	"""error: Procd's ppid can't be 1!\\n"""		2053774	1					
ANR	2053878	PrimaryExpression	"""error: Procd's ppid can't be 1!\\n"""		2053774	0					
ANR	2053879	ExpressionStatement	exit ( 1 )	342:2:9645:9652	2053774	1	True				
ANR	2053880	CallExpression	exit ( 1 )		2053774	0					
ANR	2053881	Callee	exit		2053774	0					
ANR	2053882	Identifier	exit		2053774	0					
ANR	2053883	ArgumentList	1		2053774	1					
ANR	2053884	Argument	1		2053774	0					
ANR	2053885	PrimaryExpression	1		2053774	0					
ANR	2053886	IfStatement	if ( parent_pi -> birthday > own_pi -> birthday )		2053774	6					
ANR	2053887	Condition	parent_pi -> birthday > own_pi -> birthday	346:5:9670:9707	2053774	0	True				
ANR	2053888	RelationalExpression	parent_pi -> birthday > own_pi -> birthday		2053774	0		>			
ANR	2053889	PtrMemberAccess	parent_pi -> birthday		2053774	0					
ANR	2053890	Identifier	parent_pi		2053774	0					
ANR	2053891	Identifier	birthday		2053774	1					
ANR	2053892	PtrMemberAccess	own_pi -> birthday		2053774	1					
ANR	2053893	Identifier	own_pi		2053774	0					
ANR	2053894	Identifier	birthday		2053774	1					
ANR	2053895	CompoundStatement		30:45:1082:1082	2053774	1					
ANR	2053896	Statement	fprintf	347:2:9714:9720	2053774	0	True				
ANR	2053897	Statement	(	347:9:9721:9721	2053774	1	True				
ANR	2053898	Statement	stderr	347:10:9722:9727	2053774	2	True				
ANR	2053899	Statement	","	347:16:9728:9728	2053774	3	True				
ANR	2053900	Statement	"""error: parent process's birthday ("""	348:10:9740:9775	2053774	4	True				
ANR	2053901	Statement	PROCAPI_BIRTHDAY_FORMAT	349:14:9791:9813	2053774	5	True				
ANR	2053902	Statement	""") is later than our own ("""	350:14:9829:9855	2053774	6	True				
ANR	2053903	Statement	PROCAPI_BIRTHDAY_FORMAT	351:14:9871:9893	2053774	7	True				
ANR	2053904	Statement	""")\\n"""	352:14:9909:9913	2053774	8	True				
ANR	2053905	Statement	","	352:19:9914:9914	2053774	9	True				
ANR	2053906	Statement	parent_pi	353:9:9925:9933	2053774	10	True				
ANR	2053907	Statement	->	353:18:9934:9935	2053774	11	True				
ANR	2053908	Statement	birthday	353:20:9936:9943	2053774	12	True				
ANR	2053909	Statement	","	353:28:9944:9944	2053774	13	True				
ANR	2053910	Statement	own_pi	354:9:9955:9960	2053774	14	True				
ANR	2053911	Statement	->	354:15:9961:9962	2053774	15	True				
ANR	2053912	Statement	birthday	354:17:9963:9970	2053774	16	True				
ANR	2053913	Statement	)	354:25:9971:9971	2053774	17	True				
ANR	2053914	ExpressionStatement		354:26:9972:9972	2053774	18	True				
ANR	2053915	ExpressionStatement	exit ( 1 )	355:2:9976:9983	2053774	19	True				
ANR	2053916	CallExpression	exit ( 1 )		2053774	0					
ANR	2053917	Callee	exit		2053774	0					
ANR	2053918	Identifier	exit		2053774	0					
ANR	2053919	ArgumentList	1		2053774	1					
ANR	2053920	Argument	1		2053774	0					
ANR	2053921	PrimaryExpression	1		2053774	0					
ANR	2053922	ExpressionStatement	parent_pid = parent_pi -> pid	358:1:9990:10017	2053774	7	True				
ANR	2053923	AssignmentExpression	parent_pid = parent_pi -> pid		2053774	0		=			
ANR	2053924	Identifier	parent_pid		2053774	0					
ANR	2053925	PtrMemberAccess	parent_pi -> pid		2053774	1					
ANR	2053926	Identifier	parent_pi		2053774	0					
ANR	2053927	Identifier	pid		2053774	1					
ANR	2053928	ExpressionStatement	parent_birthday = parent_pi -> birthday	359:1:10020:10057	2053774	8	True				
ANR	2053929	AssignmentExpression	parent_birthday = parent_pi -> birthday		2053774	0		=			
ANR	2053930	Identifier	parent_birthday		2053774	0					
ANR	2053931	PtrMemberAccess	parent_pi -> birthday		2053774	1					
ANR	2053932	Identifier	parent_pi		2053774	0					
ANR	2053933	Identifier	birthday		2053774	1					
ANR	2053934	Statement	delete	361:1:10061:10066	2053774	9	True				
ANR	2053935	ExpressionStatement	own_pi	361:8:10068:10074	2053774	10	True				
ANR	2053936	Identifier	own_pi		2053774	0					
ANR	2053937	Statement	delete	362:1:10077:10082	2053774	11	True				
ANR	2053938	ExpressionStatement	parent_pi	362:8:10084:10093	2053774	12	True				
ANR	2053939	Identifier	parent_pi		2053774	0					
ANR	2053940	ReturnType	static void		2053774	1					
ANR	2053941	Identifier	get_parent_info		2053774	2					
ANR	2053942	ParameterList	"pid_t & parent_pid , birthday_t & parent_birthday"		2053774	3					
ANR	2053943	Parameter	pid_t & parent_pid	316:16:8579:8595	2053774	0	True				
ANR	2053944	ParameterType	pid_t &		2053774	0					
ANR	2053945	Identifier	parent_pid		2053774	1					
ANR	2053946	Parameter	birthday_t & parent_birthday	316:35:8598:8624	2053774	1	True				
ANR	2053947	ParameterType	birthday_t &		2053774	0					
ANR	2053948	Identifier	parent_birthday		2053774	1					
ANR	2053949	CFGEntryNode	ENTRY		2053774		True				
ANR	2053950	CFGExitNode	EXIT		2053774		True				
ANR	2053951	Symbol	ignored		2053774						
ANR	2053952	Symbol	* parent_pi		2053774						
ANR	2053953	Symbol	NULL		2053774						
ANR	2053954	Symbol	own_pi -> ppid		2053774						
ANR	2053955	Symbol	parent_pi		2053774						
ANR	2053956	Symbol	PROCAPI_SUCCESS		2053774						
ANR	2053957	Symbol	parent_pi -> birthday		2053774						
ANR	2053958	Symbol	* own_pi		2053774						
ANR	2053959	Symbol	stderr		2053774						
ANR	2053960	Symbol	own_pi -> birthday		2053774						
ANR	2053961	Symbol	ProcAPI :: getProcInfo		2053774						
ANR	2053962	Symbol	parent_pi -> pid		2053774						
ANR	2053963	Symbol	parent_birthday		2053774						
ANR	2053964	Symbol	own_pi		2053774						
ANR	2053965	Symbol	parent_pid		2053774						
ANR	2053966	Symbol	getpid		2053774						
ANR	2053967	Function	main	365:0:10098:14947							
ANR	2053968	FunctionDef	"main (int argc , char * argv [ ])"		2053967	0					
ANR	2053969	CompoundStatement		367:0:10131:14947	2053967	0					
ANR	2053970	ExpressionStatement	fclose ( stdin )	370:1:10201:10214	2053967	0	True				
ANR	2053971	CallExpression	fclose ( stdin )		2053967	0					
ANR	2053972	Callee	fclose		2053967	0					
ANR	2053973	Identifier	fclose		2053967	0					
ANR	2053974	ArgumentList	stdin		2053967	1					
ANR	2053975	Argument	stdin		2053967	0					
ANR	2053976	Identifier	stdin		2053967	0					
ANR	2053977	ExpressionStatement	fclose ( stdout )	371:1:10217:10231	2053967	1	True				
ANR	2053978	CallExpression	fclose ( stdout )		2053967	0					
ANR	2053979	Callee	fclose		2053967	0					
ANR	2053980	Identifier	fclose		2053967	0					
ANR	2053981	ArgumentList	stdout		2053967	1					
ANR	2053982	Argument	stdout		2053967	0					
ANR	2053983	Identifier	stdout		2053967	0					
ANR	2053984	ExpressionStatement	"parse_command_line ( argc , argv )"	376:1:10333:10363	2053967	2	True				
ANR	2053985	CallExpression	"parse_command_line ( argc , argv )"		2053967	0					
ANR	2053986	Callee	parse_command_line		2053967	0					
ANR	2053987	Identifier	parse_command_line		2053967	0					
ANR	2053988	ArgumentList	argc		2053967	1					
ANR	2053989	Argument	argc		2053967	0					
ANR	2053990	Identifier	argc		2053967	0					
ANR	2053991	Argument	argv		2053967	1					
ANR	2053992	Identifier	argv		2053967	0					
ANR	2053993	IdentifierDeclStatement	birthday_t root_birthday ;	381:1:10543:10567	2053967	3	True				
ANR	2053994	IdentifierDecl	root_birthday		2053967	0					
ANR	2053995	IdentifierDeclType	birthday_t		2053967	0					
ANR	2053996	Identifier	root_birthday		2053967	1					
ANR	2053997	IfStatement	if ( root_pid_specified == false )		2053967	4					
ANR	2053998	Condition	root_pid_specified == false	382:5:10574:10600	2053967	0	True				
ANR	2053999	EqualityExpression	root_pid_specified == false		2053967	0		==			
ANR	2054000	Identifier	root_pid_specified		2053967	0					
ANR	2054001	Identifier	false		2053967	1					
ANR	2054002	CompoundStatement		16:34:471:471	2053967	1					
ANR	2054003	ExpressionStatement	"get_parent_info ( root_pid , root_birthday )"	383:2:10608:10648	2053967	0	True				
ANR	2054004	CallExpression	"get_parent_info ( root_pid , root_birthday )"		2053967	0					
ANR	2054005	Callee	get_parent_info		2053967	0					
ANR	2054006	Identifier	get_parent_info		2053967	0					
ANR	2054007	ArgumentList	root_pid		2053967	1					
ANR	2054008	Argument	root_pid		2053967	0					
ANR	2054009	Identifier	root_pid		2053967	0					
ANR	2054010	Argument	root_birthday		2053967	1					
ANR	2054011	Identifier	root_birthday		2053967	0					
ANR	2054012	ElseStatement	else		2053967	0					
ANR	2054013	CompoundStatement		21:2:568:624	2053967	0					
ANR	2054014	IdentifierDeclStatement	procInfo * pi = NULL ;	385:2:10662:10681	2053967	0	True				
ANR	2054015	IdentifierDecl	* pi = NULL		2053967	0					
ANR	2054016	IdentifierDeclType	procInfo *		2053967	0					
ANR	2054017	Identifier	pi		2053967	1					
ANR	2054018	AssignmentExpression	* pi = NULL		2053967	2		=			
ANR	2054019	Identifier	NULL		2053967	0					
ANR	2054020	Identifier	NULL		2053967	1					
ANR	2054021	IdentifierDeclStatement	int ignored ;	386:2:10685:10696	2053967	1	True				
ANR	2054022	IdentifierDecl	ignored		2053967	0					
ANR	2054023	IdentifierDeclType	int		2053967	0					
ANR	2054024	Identifier	ignored		2053967	1					
ANR	2054025	IdentifierDeclStatement	"int status = ProcAPI :: getProcInfo ( root_pid , pi , ignored ) ;"	387:2:10700:10756	2053967	2	True				
ANR	2054026	IdentifierDecl	"status = ProcAPI :: getProcInfo ( root_pid , pi , ignored )"		2053967	0					
ANR	2054027	IdentifierDeclType	int		2053967	0					
ANR	2054028	Identifier	status		2053967	1					
ANR	2054029	AssignmentExpression	"status = ProcAPI :: getProcInfo ( root_pid , pi , ignored )"		2053967	2		=			
ANR	2054030	Identifier	status		2053967	0					
ANR	2054031	CallExpression	"ProcAPI :: getProcInfo ( root_pid , pi , ignored )"		2053967	1					
ANR	2054032	Callee	ProcAPI :: getProcInfo		2053967	0					
ANR	2054033	Identifier	ProcAPI :: getProcInfo		2053967	0					
ANR	2054034	ArgumentList	root_pid		2053967	1					
ANR	2054035	Argument	root_pid		2053967	0					
ANR	2054036	Identifier	root_pid		2053967	0					
ANR	2054037	Argument	pi		2053967	1					
ANR	2054038	Identifier	pi		2053967	0					
ANR	2054039	Argument	ignored		2053967	2					
ANR	2054040	Identifier	ignored		2053967	0					
ANR	2054041	IfStatement	if ( status != PROCAPI_SUCCESS )		2053967	3					
ANR	2054042	Condition	status != PROCAPI_SUCCESS	388:6:10764:10788	2053967	0	True				
ANR	2054043	EqualityExpression	status != PROCAPI_SUCCESS		2053967	0		!=			
ANR	2054044	Identifier	status		2053967	0					
ANR	2054045	Identifier	PROCAPI_SUCCESS		2053967	1					
ANR	2054046	CompoundStatement		22:33:659:659	2053967	1					
ANR	2054047	IfStatement	if ( pi != NULL )		2053967	0					
ANR	2054048	Condition	pi != NULL	389:8:10801:10810	2053967	0	True				
ANR	2054049	EqualityExpression	pi != NULL		2053967	0		!=			
ANR	2054050	Identifier	pi		2053967	0					
ANR	2054051	Identifier	NULL		2053967	1					
ANR	2054052	CompoundStatement		23:20:681:681	2053967	1					
ANR	2054053	Statement	delete	390:5:10820:10825	2053967	0	True				
ANR	2054054	ExpressionStatement	pi	390:12:10827:10829	2053967	1	True				
ANR	2054055	Identifier	pi		2053967	0					
ANR	2054056	ExpressionStatement	"fprintf ( stderr , ""getProcInfo failed on root PID %u\\n"" , ( unsigned ) root_pid )"	392:4:10841:10926	2053967	1	True				
ANR	2054057	CallExpression	"fprintf ( stderr , ""getProcInfo failed on root PID %u\\n"" , ( unsigned ) root_pid )"		2053967	0					
ANR	2054058	Callee	fprintf		2053967	0					
ANR	2054059	Identifier	fprintf		2053967	0					
ANR	2054060	ArgumentList	stderr		2053967	1					
ANR	2054061	Argument	stderr		2053967	0					
ANR	2054062	Identifier	stderr		2053967	0					
ANR	2054063	Argument	"""getProcInfo failed on root PID %u\\n"""		2053967	1					
ANR	2054064	PrimaryExpression	"""getProcInfo failed on root PID %u\\n"""		2053967	0					
ANR	2054065	Argument	( unsigned ) root_pid		2053967	2					
ANR	2054066	CastExpression	( unsigned ) root_pid		2053967	0					
ANR	2054067	CastTarget	unsigned		2053967	0					
ANR	2054068	Identifier	root_pid		2053967	1					
ANR	2054069	ExpressionStatement	"EXCEPT ( ""getProcInfo failed on root PID %u"" , ( unsigned ) root_pid )"	395:4:10932:10999	2053967	2	True				
ANR	2054070	CallExpression	"EXCEPT ( ""getProcInfo failed on root PID %u"" , ( unsigned ) root_pid )"		2053967	0					
ANR	2054071	Callee	EXCEPT		2053967	0					
ANR	2054072	Identifier	EXCEPT		2053967	0					
ANR	2054073	ArgumentList	"""getProcInfo failed on root PID %u"""		2053967	1					
ANR	2054074	Argument	"""getProcInfo failed on root PID %u"""		2053967	0					
ANR	2054075	PrimaryExpression	"""getProcInfo failed on root PID %u"""		2053967	0					
ANR	2054076	Argument	( unsigned ) root_pid		2053967	1					
ANR	2054077	CastExpression	( unsigned ) root_pid		2053967	0					
ANR	2054078	CastTarget	unsigned		2053967	0					
ANR	2054079	Identifier	root_pid		2053967	1					
ANR	2054080	ExpressionStatement	root_birthday = pi -> birthday	398:2:11007:11035	2053967	4	True				
ANR	2054081	AssignmentExpression	root_birthday = pi -> birthday		2053967	0		=			
ANR	2054082	Identifier	root_birthday		2053967	0					
ANR	2054083	PtrMemberAccess	pi -> birthday		2053967	1					
ANR	2054084	Identifier	pi		2053967	0					
ANR	2054085	Identifier	birthday		2053967	1					
ANR	2054086	Statement	delete	399:2:11039:11044	2053967	5	True				
ANR	2054087	ExpressionStatement	pi	399:9:11046:11048	2053967	6	True				
ANR	2054088	Identifier	pi		2053967	0					
ANR	2054089	IdentifierDeclStatement	extern FILE * debug_fp ;	404:1:11097:11118	2053967	5	True				
ANR	2054090	IdentifierDecl	* debug_fp		2053967	0					
ANR	2054091	IdentifierDeclType	extern FILE *		2053967	0					
ANR	2054092	Identifier	debug_fp		2053967	1					
ANR	2054093	IdentifierDeclStatement	extern char * debug_fn ;	405:1:11121:11142	2053967	6	True				
ANR	2054094	IdentifierDecl	* debug_fn		2053967	0					
ANR	2054095	IdentifierDeclType	extern char *		2053967	0					
ANR	2054096	Identifier	debug_fn		2053967	1					
ANR	2054097	IfStatement	if ( log_file_name != NULL )		2053967	7					
ANR	2054098	Condition	log_file_name != NULL	407:5:11151:11171	2053967	0	True				
ANR	2054099	EqualityExpression	log_file_name != NULL		2053967	0		!=			
ANR	2054100	Identifier	log_file_name		2053967	0					
ANR	2054101	Identifier	NULL		2053967	1					
ANR	2054102	CompoundStatement		41:28:1042:1042	2053967	1					
ANR	2054103	ExpressionStatement	debug_fn = log_file_name	408:2:11178:11202	2053967	0	True				
ANR	2054104	AssignmentExpression	debug_fn = log_file_name		2053967	0		=			
ANR	2054105	Identifier	debug_fn		2053967	0					
ANR	2054106	Identifier	log_file_name		2053967	1					
ANR	2054107	ExpressionStatement	"debug_fp = safe_fopen_wrapper_follow ( log_file_name , ""a"" )"	409:2:11206:11262	2053967	1	True				
ANR	2054108	AssignmentExpression	"debug_fp = safe_fopen_wrapper_follow ( log_file_name , ""a"" )"		2053967	0		=			
ANR	2054109	Identifier	debug_fp		2053967	0					
ANR	2054110	CallExpression	"safe_fopen_wrapper_follow ( log_file_name , ""a"" )"		2053967	1					
ANR	2054111	Callee	safe_fopen_wrapper_follow		2053967	0					
ANR	2054112	Identifier	safe_fopen_wrapper_follow		2053967	0					
ANR	2054113	ArgumentList	log_file_name		2053967	1					
ANR	2054114	Argument	log_file_name		2053967	0					
ANR	2054115	Identifier	log_file_name		2053967	0					
ANR	2054116	Argument	"""a"""		2053967	1					
ANR	2054117	PrimaryExpression	"""a"""		2053967	0					
ANR	2054118	IfStatement	if ( debug_fp == NULL )		2053967	2					
ANR	2054119	Condition	debug_fp == NULL	410:6:11270:11285	2053967	0	True				
ANR	2054120	EqualityExpression	debug_fp == NULL		2053967	0		==			
ANR	2054121	Identifier	debug_fp		2053967	0					
ANR	2054122	Identifier	NULL		2053967	1					
ANR	2054123	CompoundStatement		44:24:1156:1156	2053967	1					
ANR	2054124	ExpressionStatement	"fprintf ( stderr , ""error: couldn't open file \\""%s\\"" for logging: %s (%d)\\n"" , log_file_name , strerror ( errno ) , errno )"	411:3:11293:11444	2053967	0	True				
ANR	2054125	CallExpression	"fprintf ( stderr , ""error: couldn't open file \\""%s\\"" for logging: %s (%d)\\n"" , log_file_name , strerror ( errno ) , errno )"		2053967	0					
ANR	2054126	Callee	fprintf		2053967	0					
ANR	2054127	Identifier	fprintf		2053967	0					
ANR	2054128	ArgumentList	stderr		2053967	1					
ANR	2054129	Argument	stderr		2053967	0					
ANR	2054130	Identifier	stderr		2053967	0					
ANR	2054131	Argument	"""error: couldn't open file \\""%s\\"" for logging: %s (%d)\\n"""		2053967	1					
ANR	2054132	PrimaryExpression	"""error: couldn't open file \\""%s\\"" for logging: %s (%d)\\n"""		2053967	0					
ANR	2054133	Argument	log_file_name		2053967	2					
ANR	2054134	Identifier	log_file_name		2053967	0					
ANR	2054135	Argument	strerror ( errno )		2053967	3					
ANR	2054136	CallExpression	strerror ( errno )		2053967	0					
ANR	2054137	Callee	strerror		2053967	0					
ANR	2054138	Identifier	strerror		2053967	0					
ANR	2054139	ArgumentList	errno		2053967	1					
ANR	2054140	Argument	errno		2053967	0					
ANR	2054141	Identifier	errno		2053967	0					
ANR	2054142	Argument	errno		2053967	4					
ANR	2054143	Identifier	errno		2053967	0					
ANR	2054144	ExpressionStatement	exit ( 1 )	416:3:11449:11456	2053967	1	True				
ANR	2054145	CallExpression	exit ( 1 )		2053967	0					
ANR	2054146	Callee	exit		2053967	0					
ANR	2054147	Identifier	exit		2053967	0					
ANR	2054148	ArgumentList	1		2053967	1					
ANR	2054149	Argument	1		2053967	0					
ANR	2054150	PrimaryExpression	1		2053967	0					
ANR	2054151	ExpressionStatement	"dprintf ( D_ALWAYS , ""***********************************\\n"" )"	418:2:11464:11522	2053967	3	True				
ANR	2054152	CallExpression	"dprintf ( D_ALWAYS , ""***********************************\\n"" )"		2053967	0					
ANR	2054153	Callee	dprintf		2053967	0					
ANR	2054154	Identifier	dprintf		2053967	0					
ANR	2054155	ArgumentList	D_ALWAYS		2053967	1					
ANR	2054156	Argument	D_ALWAYS		2053967	0					
ANR	2054157	Identifier	D_ALWAYS		2053967	0					
ANR	2054158	Argument	"""***********************************\\n"""		2053967	1					
ANR	2054159	PrimaryExpression	"""***********************************\\n"""		2053967	0					
ANR	2054160	ExpressionStatement	"dprintf ( D_ALWAYS , ""* condor_procd STARTING UP\\n"" )"	419:2:11526:11575	2053967	4	True				
ANR	2054161	CallExpression	"dprintf ( D_ALWAYS , ""* condor_procd STARTING UP\\n"" )"		2053967	0					
ANR	2054162	Callee	dprintf		2053967	0					
ANR	2054163	Identifier	dprintf		2053967	0					
ANR	2054164	ArgumentList	D_ALWAYS		2053967	1					
ANR	2054165	Argument	D_ALWAYS		2053967	0					
ANR	2054166	Identifier	D_ALWAYS		2053967	0					
ANR	2054167	Argument	"""* condor_procd STARTING UP\\n"""		2053967	1					
ANR	2054168	PrimaryExpression	"""* condor_procd STARTING UP\\n"""		2053967	0					
ANR	2054169	Statement	dprintf	421:2:11598:11604	2053967	5	True				
ANR	2054170	Statement	(	421:9:11605:11605	2053967	6	True				
ANR	2054171	Statement	D_ALWAYS	421:10:11606:11613	2053967	7	True				
ANR	2054172	Statement	","	421:18:11614:11614	2053967	8	True				
ANR	2054173	Statement	"""* PID = %lu\\n"""	421:20:11616:11630	2053967	9	True				
ANR	2054174	Statement	","	421:35:11631:11631	2053967	10	True				
ANR	2054175	Statement	(	422:3:11637:11637	2053967	11	True				
ANR	2054176	Statement	unsigned	422:4:11638:11645	2053967	12	True				
ANR	2054177	Statement	long	422:13:11647:11650	2053967	13	True				
ANR	2054178	Statement	)	422:17:11651:11651	2053967	14	True				
ANR	2054179	Statement	::	422:18:11652:11653	2053967	15	True				
ANR	2054180	Statement	GetCurrentProcessId	422:20:11654:11672	2053967	16	True				
ANR	2054181	Statement	(	422:39:11673:11673	2053967	17	True				
ANR	2054182	Statement	)	422:40:11674:11674	2053967	18	True				
ANR	2054183	Statement	)	422:41:11675:11675	2053967	19	True				
ANR	2054184	ExpressionStatement		422:42:11676:11676	2053967	20	True				
ANR	2054185	ExpressionStatement	"dprintf ( D_ALWAYS , ""***********************************\\n"" )"	428:2:11882:11940	2053967	21	True				
ANR	2054186	CallExpression	"dprintf ( D_ALWAYS , ""***********************************\\n"" )"		2053967	0					
ANR	2054187	Callee	dprintf		2053967	0					
ANR	2054188	Identifier	dprintf		2053967	0					
ANR	2054189	ArgumentList	D_ALWAYS		2053967	1					
ANR	2054190	Argument	D_ALWAYS		2053967	0					
ANR	2054191	Identifier	D_ALWAYS		2053967	0					
ANR	2054192	Argument	"""***********************************\\n"""		2053967	1					
ANR	2054193	PrimaryExpression	"""***********************************\\n"""		2053967	0					
ANR	2054194	IfStatement	if ( max_snapshot_interval < - 1 )		2053967	8					
ANR	2054195	Condition	max_snapshot_interval < - 1	434:5:12071:12096	2053967	0	True				
ANR	2054196	RelationalExpression	max_snapshot_interval < - 1		2053967	0		<			
ANR	2054197	Identifier	max_snapshot_interval		2053967	0					
ANR	2054198	UnaryOperationExpression	- 1		2053967	1					
ANR	2054199	UnaryOperator	-		2053967	0					
ANR	2054200	PrimaryExpression	1		2053967	1					
ANR	2054201	CompoundStatement		68:33:1967:1967	2053967	1					
ANR	2054202	ExpressionStatement	"fprintf ( stderr , ""error: maximum snapshot interval must be non-negative or -1\\n"" )"	435:2:12103:12193	2053967	0	True				
ANR	2054203	CallExpression	"fprintf ( stderr , ""error: maximum snapshot interval must be non-negative or -1\\n"" )"		2053967	0					
ANR	2054204	Callee	fprintf		2053967	0					
ANR	2054205	Identifier	fprintf		2053967	0					
ANR	2054206	ArgumentList	stderr		2053967	1					
ANR	2054207	Argument	stderr		2053967	0					
ANR	2054208	Identifier	stderr		2053967	0					
ANR	2054209	Argument	"""error: maximum snapshot interval must be non-negative or -1\\n"""		2053967	1					
ANR	2054210	PrimaryExpression	"""error: maximum snapshot interval must be non-negative or -1\\n"""		2053967	0					
ANR	2054211	ExpressionStatement	exit ( 1 )	437:2:12197:12204	2053967	1	True				
ANR	2054212	CallExpression	exit ( 1 )		2053967	0					
ANR	2054213	Callee	exit		2053967	0					
ANR	2054214	Identifier	exit		2053967	0					
ANR	2054215	ArgumentList	1		2053967	1					
ANR	2054216	Argument	1		2053967	0					
ANR	2054217	PrimaryExpression	1		2053967	0					
ANR	2054218	IfStatement	if ( windows_softkill_binary != NULL )		2053967	9					
ANR	2054219	Condition	windows_softkill_binary != NULL	444:5:12352:12382	2053967	0	True				
ANR	2054220	EqualityExpression	windows_softkill_binary != NULL		2053967	0		!=			
ANR	2054221	Identifier	windows_softkill_binary		2053967	0					
ANR	2054222	Identifier	NULL		2053967	1					
ANR	2054223	CompoundStatement		78:38:2253:2253	2053967	1					
ANR	2054224	ExpressionStatement	set_windows_soft_kill_binary ( windows_softkill_binary )	445:2:12389:12442	2053967	0	True				
ANR	2054225	CallExpression	set_windows_soft_kill_binary ( windows_softkill_binary )		2053967	0					
ANR	2054226	Callee	set_windows_soft_kill_binary		2053967	0					
ANR	2054227	Identifier	set_windows_soft_kill_binary		2053967	0					
ANR	2054228	ArgumentList	windows_softkill_binary		2053967	1					
ANR	2054229	Argument	windows_softkill_binary		2053967	0					
ANR	2054230	Identifier	windows_softkill_binary		2053967	0					
ANR	2054231	IfStatement	if ( glexec_kill_path != NULL )		2053967	10					
ANR	2054232	Condition	glexec_kill_path != NULL	453:5:12589:12612	2053967	0	True				
ANR	2054233	EqualityExpression	glexec_kill_path != NULL		2053967	0		!=			
ANR	2054234	Identifier	glexec_kill_path		2053967	0					
ANR	2054235	Identifier	NULL		2053967	1					
ANR	2054236	CompoundStatement		87:31:2483:2483	2053967	1					
ANR	2054237	ExpressionStatement	"glexec_kill_init ( glexec_kill_path , glexec_path )"	454:2:12619:12666	2053967	0	True				
ANR	2054238	CallExpression	"glexec_kill_init ( glexec_kill_path , glexec_path )"		2053967	0					
ANR	2054239	Callee	glexec_kill_init		2053967	0					
ANR	2054240	Identifier	glexec_kill_init		2053967	0					
ANR	2054241	ArgumentList	glexec_kill_path		2053967	1					
ANR	2054242	Argument	glexec_kill_path		2053967	0					
ANR	2054243	Identifier	glexec_kill_path		2053967	0					
ANR	2054244	Argument	glexec_path		2053967	1					
ANR	2054245	Identifier	glexec_path		2053967	0					
ANR	2054246	IfStatement	if ( root_pid_specified == true )		2053967	11					
ANR	2054247	Condition	root_pid_specified == true	464:5:12991:13016	2053967	0	True				
ANR	2054248	EqualityExpression	root_pid_specified == true		2053967	0		==			
ANR	2054249	Identifier	root_pid_specified		2053967	0					
ANR	2054250	Identifier	true		2053967	1					
ANR	2054251	CompoundStatement		98:33:2887:2887	2053967	1					
ANR	2054252	ExpressionStatement	"dprintf ( D_ALWAYS , ""Procd has no watcher pid and will not die if pid %lu dies.\\n"" , ( unsigned long ) root_pid )"	465:2:13023:13137	2053967	0	True				
ANR	2054253	CallExpression	"dprintf ( D_ALWAYS , ""Procd has no watcher pid and will not die if pid %lu dies.\\n"" , ( unsigned long ) root_pid )"		2053967	0					
ANR	2054254	Callee	dprintf		2053967	0					
ANR	2054255	Identifier	dprintf		2053967	0					
ANR	2054256	ArgumentList	D_ALWAYS		2053967	1					
ANR	2054257	Argument	D_ALWAYS		2053967	0					
ANR	2054258	Identifier	D_ALWAYS		2053967	0					
ANR	2054259	Argument	"""Procd has no watcher pid and will not die if pid %lu dies.\\n"""		2053967	1					
ANR	2054260	PrimaryExpression	"""Procd has no watcher pid and will not die if pid %lu dies.\\n"""		2053967	0					
ANR	2054261	Argument	( unsigned long ) root_pid		2053967	2					
ANR	2054262	CastExpression	( unsigned long ) root_pid		2053967	0					
ANR	2054263	CastTarget	unsigned long		2053967	0					
ANR	2054264	Identifier	root_pid		2053967	1					
ANR	2054265	ElseStatement	else		2053967	0					
ANR	2054266	CompoundStatement		102:8:3015:3015	2053967	0					
ANR	2054267	ExpressionStatement	"dprintf ( D_ALWAYS , ""Procd has a watcher pid and will die if pid %lu dies.\\n"" , ( unsigned long ) root_pid )"	469:2:13151:13260	2053967	0	True				
ANR	2054268	CallExpression	"dprintf ( D_ALWAYS , ""Procd has a watcher pid and will die if pid %lu dies.\\n"" , ( unsigned long ) root_pid )"		2053967	0					
ANR	2054269	Callee	dprintf		2053967	0					
ANR	2054270	Identifier	dprintf		2053967	0					
ANR	2054271	ArgumentList	D_ALWAYS		2053967	1					
ANR	2054272	Argument	D_ALWAYS		2053967	0					
ANR	2054273	Identifier	D_ALWAYS		2053967	0					
ANR	2054274	Argument	"""Procd has a watcher pid and will die if pid %lu dies.\\n"""		2053967	1					
ANR	2054275	PrimaryExpression	"""Procd has a watcher pid and will die if pid %lu dies.\\n"""		2053967	0					
ANR	2054276	Argument	( unsigned long ) root_pid		2053967	2					
ANR	2054277	CastExpression	( unsigned long ) root_pid		2053967	0					
ANR	2054278	CastTarget	unsigned long		2053967	0					
ANR	2054279	Identifier	root_pid		2053967	1					
ANR	2054280	IdentifierDeclStatement	"ProcFamilyMonitor monitor ( root_pid , root_birthday , max_snapshot_interval , root_pid_specified ? false : true ) ;"	474:1:13267:13401	2053967	12	True				
ANR	2054281	IdentifierDecl	"monitor ( root_pid , root_birthday , max_snapshot_interval , root_pid_specified ? false : true )"		2053967	0					
ANR	2054282	IdentifierDeclType	ProcFamilyMonitor		2053967	0					
ANR	2054283	Identifier	monitor		2053967	1					
ANR	2054284	Expression	"root_pid , root_birthday , max_snapshot_interval , root_pid_specified ? false : true"		2053967	2					
ANR	2054285	Identifier	root_pid		2053967	0					
ANR	2054286	Expression	"root_birthday , max_snapshot_interval , root_pid_specified ? false : true"		2053967	1					
ANR	2054287	Identifier	root_birthday		2053967	0					
ANR	2054288	Expression	"max_snapshot_interval , root_pid_specified ? false : true"		2053967	1					
ANR	2054289	Identifier	max_snapshot_interval		2053967	0					
ANR	2054290	ConditionalExpression	root_pid_specified ? false : true		2053967	1					
ANR	2054291	Condition	root_pid_specified		2053967	0					
ANR	2054292	Identifier	root_pid_specified		2053967	0					
ANR	2054293	Identifier	false		2053967	1					
ANR	2054294	Identifier	true		2053967	2					
ANR	2054295	IfStatement	if ( min_tracking_gid != 0 )		2053967	13					
ANR	2054296	Condition	min_tracking_gid != 0	483:5:13508:13528	2053967	0	True				
ANR	2054297	EqualityExpression	min_tracking_gid != 0		2053967	0		!=			
ANR	2054298	Identifier	min_tracking_gid		2053967	0					
ANR	2054299	PrimaryExpression	0		2053967	1					
ANR	2054300	CompoundStatement		117:28:3399:3399	2053967	1					
ANR	2054301	IfStatement	if ( min_tracking_gid > max_tracking_gid )		2053967	0					
ANR	2054302	Condition	min_tracking_gid > max_tracking_gid	484:6:13539:13573	2053967	0	True				
ANR	2054303	RelationalExpression	min_tracking_gid > max_tracking_gid		2053967	0		>			
ANR	2054304	Identifier	min_tracking_gid		2053967	0					
ANR	2054305	Identifier	max_tracking_gid		2053967	1					
ANR	2054306	CompoundStatement		118:43:3444:3444	2053967	1					
ANR	2054307	ExpressionStatement	"fprintf ( stderr , ""invalid group range given: %u - %u\\n"" , min_tracking_gid , max_tracking_gid )"	485:3:13581:13705	2053967	0	True				
ANR	2054308	CallExpression	"fprintf ( stderr , ""invalid group range given: %u - %u\\n"" , min_tracking_gid , max_tracking_gid )"		2053967	0					
ANR	2054309	Callee	fprintf		2053967	0					
ANR	2054310	Identifier	fprintf		2053967	0					
ANR	2054311	ArgumentList	stderr		2053967	1					
ANR	2054312	Argument	stderr		2053967	0					
ANR	2054313	Identifier	stderr		2053967	0					
ANR	2054314	Argument	"""invalid group range given: %u - %u\\n"""		2053967	1					
ANR	2054315	PrimaryExpression	"""invalid group range given: %u - %u\\n"""		2053967	0					
ANR	2054316	Argument	min_tracking_gid		2053967	2					
ANR	2054317	Identifier	min_tracking_gid		2053967	0					
ANR	2054318	Argument	max_tracking_gid		2053967	3					
ANR	2054319	Identifier	max_tracking_gid		2053967	0					
ANR	2054320	ExpressionStatement	exit ( 1 )	489:3:13710:13717	2053967	1	True				
ANR	2054321	CallExpression	exit ( 1 )		2053967	0					
ANR	2054322	Callee	exit		2053967	0					
ANR	2054323	Identifier	exit		2053967	0					
ANR	2054324	ArgumentList	1		2053967	1					
ANR	2054325	Argument	1		2053967	0					
ANR	2054326	PrimaryExpression	1		2053967	0					
ANR	2054327	ExpressionStatement	"monitor . enable_group_tracking ( min_tracking_gid , max_tracking_gid , use_external_gid_association ? false : true )"	497:2:14025:14142	2053967	1	True				
ANR	2054328	CallExpression	"monitor . enable_group_tracking ( min_tracking_gid , max_tracking_gid , use_external_gid_association ? false : true )"		2053967	0					
ANR	2054329	Callee	monitor . enable_group_tracking		2053967	0					
ANR	2054330	MemberAccess	monitor . enable_group_tracking		2053967	0					
ANR	2054331	Identifier	monitor		2053967	0					
ANR	2054332	Identifier	enable_group_tracking		2053967	1					
ANR	2054333	ArgumentList	min_tracking_gid		2053967	1					
ANR	2054334	Argument	min_tracking_gid		2053967	0					
ANR	2054335	Identifier	min_tracking_gid		2053967	0					
ANR	2054336	Argument	max_tracking_gid		2053967	1					
ANR	2054337	Identifier	max_tracking_gid		2053967	0					
ANR	2054338	Argument	use_external_gid_association ? false : true		2053967	2					
ANR	2054339	ConditionalExpression	use_external_gid_association ? false : true		2053967	0					
ANR	2054340	Condition	use_external_gid_association		2053967	0					
ANR	2054341	Identifier	use_external_gid_association		2053967	0					
ANR	2054342	Identifier	false		2053967	1					
ANR	2054343	Identifier	true		2053967	2					
ANR	2054344	ExpressionStatement	monitor . enable_cgroup_tracking ( )	504:1:14188:14220	2053967	14	True				
ANR	2054345	CallExpression	monitor . enable_cgroup_tracking ( )		2053967	0					
ANR	2054346	Callee	monitor . enable_cgroup_tracking		2053967	0					
ANR	2054347	MemberAccess	monitor . enable_cgroup_tracking		2053967	0					
ANR	2054348	Identifier	monitor		2053967	0					
ANR	2054349	Identifier	enable_cgroup_tracking		2053967	1					
ANR	2054350	ArgumentList			2053967	1					
ANR	2054351	IdentifierDeclStatement	"ProcFamilyServer server ( monitor , local_server_address ) ;"	509:1:14297:14351	2053967	15	True				
ANR	2054352	IdentifierDecl	"server ( monitor , local_server_address )"		2053967	0					
ANR	2054353	IdentifierDeclType	ProcFamilyServer		2053967	0					
ANR	2054354	Identifier	server		2053967	1					
ANR	2054355	Expression	"monitor , local_server_address"		2053967	2					
ANR	2054356	Identifier	monitor		2053967	0					
ANR	2054357	Identifier	local_server_address		2053967	1					
ANR	2054358	ExpressionStatement	server . set_client_principal ( local_client_principal )	516:1:14624:14675	2053967	16	True				
ANR	2054359	CallExpression	server . set_client_principal ( local_client_principal )		2053967	0					
ANR	2054360	Callee	server . set_client_principal		2053967	0					
ANR	2054361	MemberAccess	server . set_client_principal		2053967	0					
ANR	2054362	Identifier	server		2053967	0					
ANR	2054363	Identifier	set_client_principal		2053967	1					
ANR	2054364	ArgumentList	local_client_principal		2053967	1					
ANR	2054365	Argument	local_client_principal		2053967	0					
ANR	2054366	Identifier	local_client_principal		2053967	0					
ANR	2054367	ExpressionStatement	fclose ( stderr )	522:1:14851:14865	2053967	17	True				
ANR	2054368	CallExpression	fclose ( stderr )		2053967	0					
ANR	2054369	Callee	fclose		2053967	0					
ANR	2054370	Identifier	fclose		2053967	0					
ANR	2054371	ArgumentList	stderr		2053967	1					
ANR	2054372	Argument	stderr		2053967	0					
ANR	2054373	Identifier	stderr		2053967	0					
ANR	2054374	ExpressionStatement	server . wait_loop ( )	526:1:14915:14933	2053967	18	True				
ANR	2054375	CallExpression	server . wait_loop ( )		2053967	0					
ANR	2054376	Callee	server . wait_loop		2053967	0					
ANR	2054377	MemberAccess	server . wait_loop		2053967	0					
ANR	2054378	Identifier	server		2053967	0					
ANR	2054379	Identifier	wait_loop		2053967	1					
ANR	2054380	ArgumentList			2053967	1					
ANR	2054381	ReturnStatement	return 0 ;	528:1:14937:14945	2053967	19	True				
ANR	2054382	PrimaryExpression	0		2053967	0					
ANR	2054383	ReturnType	int		2053967	1					
ANR	2054384	Identifier	main		2053967	2					
ANR	2054385	ParameterList	"int argc , char * argv [ ]"		2053967	3					
ANR	2054386	Parameter	int argc	366:5:10107:10114	2053967	0	True				
ANR	2054387	ParameterType	int		2053967	0					
ANR	2054388	Identifier	argc		2053967	1					
ANR	2054389	Parameter	char * argv [ ]	366:15:10117:10128	2053967	1	True				
ANR	2054390	ParameterType	char * [ ]		2053967	0					
ANR	2054391	Identifier	argv		2053967	1					
ANR	2054392	CFGEntryNode	ENTRY		2053967		True				
ANR	2054393	CFGExitNode	EXIT		2053967		True				
ANR	2054394	Symbol	server		2053967						
ANR	2054395	Symbol	local_client_principal		2053967						
ANR	2054396	Symbol	stdin		2053967						
ANR	2054397	Symbol	stdout		2053967						
ANR	2054398	Symbol	root_pid_specified		2053967						
ANR	2054399	Symbol	min_tracking_gid		2053967						
ANR	2054400	Symbol	root_birthday		2053967						
ANR	2054401	Symbol	argv		2053967						
ANR	2054402	Symbol	glexec_path		2053967						
ANR	2054403	Symbol	debug_fp		2053967						
ANR	2054404	Symbol	debug_fn		2053967						
ANR	2054405	Symbol	glexec_kill_path		2053967						
ANR	2054406	Symbol	safe_fopen_wrapper_follow		2053967						
ANR	2054407	Symbol	argc		2053967						
ANR	2054408	Symbol	use_external_gid_association		2053967						
ANR	2054409	Symbol	ignored		2053967						
ANR	2054410	Symbol	errno		2053967						
ANR	2054411	Symbol	NULL		2053967						
ANR	2054412	Symbol	pi -> birthday		2053967						
ANR	2054413	Symbol	false		2053967						
ANR	2054414	Symbol	D_ALWAYS		2053967						
ANR	2054415	Symbol	PROCAPI_SUCCESS		2053967						
ANR	2054416	Symbol	log_file_name		2053967						
ANR	2054417	Symbol	monitor		2053967						
ANR	2054418	Symbol	stderr		2053967						
ANR	2054419	Symbol	strerror		2053967						
ANR	2054420	Symbol	ProcAPI :: getProcInfo		2053967						
ANR	2054421	Symbol	max_snapshot_interval		2053967						
ANR	2054422	Symbol	true		2053967						
ANR	2054423	Symbol	pi		2053967						
ANR	2054424	Symbol	max_tracking_gid		2053967						
ANR	2054425	Symbol	* pi		2053967						
ANR	2054426	Symbol	root_pid		2053967						
ANR	2054427	Symbol	windows_softkill_binary		2053967						
ANR	2054428	Symbol	status		2053967						
