command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4210966	File	data/converged/CVE-2011-4930_htcondor/src_condor_tools_condor_setup.c								
ANR	4210967	ClassDef	<unnamed>	33:8:1054:1083							
ANR	4210968	DeclStmt									
ANR	4210969	Decl									bool
ANR	4210970	ClassDef	Options	38:0:1155:1972							
ANR	4210971	DeclStmt									
ANR	4210972	Decl							char	char	newpool
ANR	4210973	DeclStmt									
ANR	4210974	Decl							char	char	submitjobs
ANR	4210975	DeclStmt									
ANR	4210976	Decl							char	char	runjobs
ANR	4210977	DeclStmt									
ANR	4210978	Decl							char	char	vacatejobs
ANR	4210979	DeclStmt									
ANR	4210980	Decl							char	char	enablevmuniverse
ANR	4210981	DeclStmt									
ANR	4210982	Decl							char	char	vmnetworking
ANR	4210983	DeclStmt									
ANR	4210984	Decl							char	char	hadoop
ANR	4210985	DeclStmt									
ANR	4210986	Decl							char	char *	poolhostname
ANR	4210987	DeclStmt									
ANR	4210988	Decl							char	char *	poolname
ANR	4210989	DeclStmt									
ANR	4210990	Decl							char	char *	jvmlocation
ANR	4210991	DeclStmt									
ANR	4210992	Decl							char	char *	perllocation
ANR	4210993	DeclStmt									
ANR	4210994	Decl							char	char *	accountingdomain
ANR	4210995	DeclStmt									
ANR	4210996	Decl							char	char *	release_dir
ANR	4210997	DeclStmt									
ANR	4210998	Decl							char	char *	smtpserver
ANR	4210999	DeclStmt									
ANR	4211000	Decl							char	char *	condoremail
ANR	4211001	DeclStmt									
ANR	4211002	Decl							char	char *	hostallowread
ANR	4211003	DeclStmt									
ANR	4211004	Decl							char	char *	hostallowwrite
ANR	4211005	DeclStmt									
ANR	4211006	Decl							char	char *	hostallowadministrator
ANR	4211007	DeclStmt									
ANR	4211008	Decl							char	char *	vmmaxnumber
ANR	4211009	DeclStmt									
ANR	4211010	Decl							char	char *	vmversion
ANR	4211011	DeclStmt									
ANR	4211012	Decl							char	char *	vmmemory
ANR	4211013	DeclStmt									
ANR	4211014	Decl							char	char *	namedata
ANR	4211015	DeclStmt									
ANR	4211016	Decl							char	char *	namenode
ANR	4211017	DeclStmt									
ANR	4211018	Decl							char	char *	nameport
ANR	4211019	DeclStmt									
ANR	4211020	Decl							char	char *	namewebport
ANR	4211021	DeclStmt									
ANR	4211022	Decl							Options	Options	Opt
ANR	4211023	DeclStmt									
ANR	4211024	Decl							const char	const char *	short_options
ANR	4211025	DeclStmt									
ANR	4211026	Decl							struct option	struct option [ ]	long_options
ANR	4211027	DeclStmt									
ANR	4211028	Decl							const char	const char *	Config_file
ANR	4211029	DeclStmt									
ANR	4211030	Decl							const char	const char *	LogFileName
ANR	4211031	DeclStmt									
ANR	4211032	Decl							FILE	FILE *	LogFileHandle
ANR	4211033	DeclStmt									
ANR	4211034	Decl							bool	"bool ( int argc , char * * argv )"	parse_args
ANR	4211035	DeclStmt									
ANR	4211036	Decl							bool	"bool ( const char * attribute , const char * val )"	append_option
ANR	4211037	DeclStmt									
ANR	4211038	Decl							bool	"bool ( const char * attribute , const char * val )"	set_option
ANR	4211039	DeclStmt									
ANR	4211040	Decl							bool	"bool ( const char * attribute , const int val )"	set_int_option
ANR	4211041	Function	setup_config_file	109:0:3865:3940							
ANR	4211042	FunctionDef	setup_config_file ()		4211041	0					
ANR	4211043	CompoundStatement		109:29:3894:3940	4211041	0					
ANR	4211044	ExpressionStatement	"Config_file = ""condor_config"""	109:1:3896:3925	4211041	0	True				
ANR	4211045	AssignmentExpression	"Config_file = ""condor_config"""		4211041	0		=			
ANR	4211046	Identifier	Config_file		4211041	0					
ANR	4211047	PrimaryExpression	"""condor_config"""		4211041	1					
ANR	4211048	ReturnStatement	return true ;	109:32:3927:3938	4211041	1	True				
ANR	4211049	Identifier	true		4211041	0					
ANR	4211050	ReturnType	bool		4211041	1					
ANR	4211051	Identifier	setup_config_file		4211041	2					
ANR	4211052	ParameterList			4211041	3					
ANR	4211053	CFGEntryNode	ENTRY		4211041		True				
ANR	4211054	CFGExitNode	EXIT		4211041		True				
ANR	4211055	Symbol	Config_file		4211041						
ANR	4211056	Symbol	true		4211041						
ANR	4211057	Function	open_log_file	110:0:3943:4034							
ANR	4211058	FunctionDef	open_log_file ()		4211057	0					
ANR	4211059	CompoundStatement		110:25:3968:4034	4211057	0					
ANR	4211060	ReturnStatement	"return ( NULL != ( LogFileHandle = fopen ( LogFileName , ""w"" ) ) ) ;"	110:1:3970:4032	4211057	0	True				
ANR	4211061	EqualityExpression	"NULL != ( LogFileHandle = fopen ( LogFileName , ""w"" ) )"		4211057	0		!=			
ANR	4211062	Identifier	NULL		4211057	0					
ANR	4211063	AssignmentExpression	"LogFileHandle = fopen ( LogFileName , ""w"" )"		4211057	1		=			
ANR	4211064	Identifier	LogFileHandle		4211057	0					
ANR	4211065	CallExpression	"fopen ( LogFileName , ""w"" )"		4211057	1					
ANR	4211066	Callee	fopen		4211057	0					
ANR	4211067	Identifier	fopen		4211057	0					
ANR	4211068	ArgumentList	LogFileName		4211057	1					
ANR	4211069	Argument	LogFileName		4211057	0					
ANR	4211070	Identifier	LogFileName		4211057	0					
ANR	4211071	Argument	"""w"""		4211057	1					
ANR	4211072	PrimaryExpression	"""w"""		4211057	0					
ANR	4211073	ReturnType	bool		4211057	1					
ANR	4211074	Identifier	open_log_file		4211057	2					
ANR	4211075	ParameterList			4211057	3					
ANR	4211076	CFGEntryNode	ENTRY		4211057		True				
ANR	4211077	CFGExitNode	EXIT		4211057		True				
ANR	4211078	Symbol	fopen		4211057						
ANR	4211079	Symbol	NULL		4211057						
ANR	4211080	Symbol	LogFileHandle		4211057						
ANR	4211081	Symbol	LogFileName		4211057						
ANR	4211082	Function	close_log_file	111:0:4036:4155							
ANR	4211083	FunctionDef	close_log_file ()		4211082	0					
ANR	4211084	CompoundStatement		111:26:4062:4155	4211082	0					
ANR	4211085	IfStatement	if ( NULL != LogFileHandle )		4211082	0					
ANR	4211086	Condition	NULL != LogFileHandle	111:6:4069:4089	4211082	0	True				
ANR	4211087	EqualityExpression	NULL != LogFileHandle		4211082	0		!=			
ANR	4211088	Identifier	NULL		4211082	0					
ANR	4211089	Identifier	LogFileHandle		4211082	1					
ANR	4211090	CompoundStatement		1:30:30:30	4211082	1					
ANR	4211091	ExpressionStatement	fclose ( LogFileHandle )	111:32:4095:4116	4211082	0	True				
ANR	4211092	CallExpression	fclose ( LogFileHandle )		4211082	0					
ANR	4211093	Callee	fclose		4211082	0					
ANR	4211094	Identifier	fclose		4211082	0					
ANR	4211095	ArgumentList	LogFileHandle		4211082	1					
ANR	4211096	Argument	LogFileHandle		4211082	0					
ANR	4211097	Identifier	LogFileHandle		4211082	0					
ANR	4211098	ExpressionStatement	LogFileHandle = NULL	111:55:4118:4138	4211082	1	True				
ANR	4211099	AssignmentExpression	LogFileHandle = NULL		4211082	0		=			
ANR	4211100	Identifier	LogFileHandle		4211082	0					
ANR	4211101	Identifier	NULL		4211082	1					
ANR	4211102	ReturnStatement	return true ;	111:79:4142:4153	4211082	1	True				
ANR	4211103	Identifier	true		4211082	0					
ANR	4211104	ReturnType	bool		4211082	1					
ANR	4211105	Identifier	close_log_file		4211082	2					
ANR	4211106	ParameterList			4211082	3					
ANR	4211107	CFGEntryNode	ENTRY		4211082		True				
ANR	4211108	CFGExitNode	EXIT		4211082		True				
ANR	4211109	Symbol	NULL		4211082						
ANR	4211110	Symbol	true		4211082						
ANR	4211111	Symbol	LogFileHandle		4211082						
ANR	4211112	Function	isempty	112:0:4157:4228							
ANR	4211113	FunctionDef	isempty (const char * a)		4211112	0					
ANR	4211114	CompoundStatement		112:29:4186:4228	4211112	0					
ANR	4211115	ReturnStatement	return ( ( a == NULL ) || ( a [ 0 ] == '\\0' ) ) ;	112:1:4188:4226	4211112	0	True				
ANR	4211116	OrExpression	( a == NULL ) || ( a [ 0 ] == '\\0' )		4211112	0		||			
ANR	4211117	EqualityExpression	a == NULL		4211112	0		==			
ANR	4211118	Identifier	a		4211112	0					
ANR	4211119	Identifier	NULL		4211112	1					
ANR	4211120	EqualityExpression	a [ 0 ] == '\\0'		4211112	1		==			
ANR	4211121	ArrayIndexing	a [ 0 ]		4211112	0					
ANR	4211122	Identifier	a		4211112	0					
ANR	4211123	PrimaryExpression	0		4211112	1					
ANR	4211124	PrimaryExpression	'\\0'		4211112	1					
ANR	4211125	ReturnType	bool		4211112	1					
ANR	4211126	Identifier	isempty		4211112	2					
ANR	4211127	ParameterList	const char * a		4211112	3					
ANR	4211128	Parameter	const char * a	112:13:4170:4183	4211112	0	True				
ANR	4211129	ParameterType	const char *		4211112	0					
ANR	4211130	Identifier	a		4211112	1					
ANR	4211131	CFGEntryNode	ENTRY		4211112		True				
ANR	4211132	CFGExitNode	EXIT		4211112		True				
ANR	4211133	Symbol	a		4211112						
ANR	4211134	Symbol	NULL		4211112						
ANR	4211135	Symbol	* a		4211112						
ANR	4211136	DeclStmt									
ANR	4211137	Decl							bool	"bool ( const char * string , const char * attr )"	attribute_matches
ANR	4211138	DeclStmt									
ANR	4211139	Decl							char	char * ( const char * path )	get_short_path_name
ANR	4211140	DeclStmt									
ANR	4211141	Decl							void	void ( )	Usage
ANR	4211142	DeclStmt									
ANR	4211143	Decl							void	void ( )	set_release_dir
ANR	4211144	DeclStmt									
ANR	4211145	Decl							void	void ( )	set_daemonlist
ANR	4211146	DeclStmt									
ANR	4211147	Decl							void	void ( )	set_poolinfo
ANR	4211148	DeclStmt									
ANR	4211149	Decl							void	void ( )	set_startdpolicy
ANR	4211150	DeclStmt									
ANR	4211151	Decl							void	void ( )	set_jvmlocation
ANR	4211152	DeclStmt									
ANR	4211153	Decl							void	void ( )	set_vmgahpoptions
ANR	4211154	DeclStmt									
ANR	4211155	Decl							void	void ( )	set_mailoptions
ANR	4211156	DeclStmt									
ANR	4211157	Decl							void	void ( )	set_hostpermissions
ANR	4211158	DeclStmt									
ANR	4211159	Decl							void	void ( )	set_vmuniverse
ANR	4211160	DeclStmt									
ANR	4211161	Decl							void	void ( )	set_hdfs
ANR	4211162	Function	main	129:0:4592:5272							
ANR	4211163	FunctionDef	"main (int __argc , char * * __argv)"		4211162	0					
ANR	4211164	CompoundStatement		129:36:4628:5272	4211162	0					
ANR	4211165	ExpressionStatement	open_log_file ( )	136:2:4780:4795	4211162	0	True				
ANR	4211166	CallExpression	open_log_file ( )		4211162	0					
ANR	4211167	Callee	open_log_file		4211162	0					
ANR	4211168	Identifier	open_log_file		4211162	0					
ANR	4211169	ArgumentList			4211162	1					
ANR	4211170	IfStatement	"if ( ! parse_args ( __argc , __argv ) )"		4211162	1					
ANR	4211171	Condition	"! parse_args ( __argc , __argv )"	139:7:4809:4838	4211162	0	True				
ANR	4211172	UnaryOperationExpression	"! parse_args ( __argc , __argv )"		4211162	0					
ANR	4211173	UnaryOperator	!		4211162	0					
ANR	4211174	CallExpression	"parse_args ( __argc , __argv )"		4211162	1					
ANR	4211175	Callee	parse_args		4211162	0					
ANR	4211176	Identifier	parse_args		4211162	0					
ANR	4211177	ArgumentList	__argc		4211162	1					
ANR	4211178	Argument	__argc		4211162	0					
ANR	4211179	Identifier	__argc		4211162	0					
ANR	4211180	Argument	__argv		4211162	1					
ANR	4211181	Identifier	__argv		4211162	0					
ANR	4211182	CompoundStatement		11:40:213:213	4211162	1					
ANR	4211183	ExpressionStatement	exit ( 1 )	140:4:4848:4858	4211162	0	True				
ANR	4211184	CallExpression	exit ( 1 )		4211162	0					
ANR	4211185	Callee	exit		4211162	0					
ANR	4211186	Identifier	exit		4211162	0					
ANR	4211187	ArgumentList	1		4211162	1					
ANR	4211188	Argument	1		4211162	0					
ANR	4211189	PrimaryExpression	1		4211162	0					
ANR	4211190	ExpressionStatement	set_release_dir ( )	143:2:4869:4887	4211162	2	True				
ANR	4211191	CallExpression	set_release_dir ( )		4211162	0					
ANR	4211192	Callee	set_release_dir		4211162	0					
ANR	4211193	Identifier	set_release_dir		4211162	0					
ANR	4211194	ArgumentList			4211162	1					
ANR	4211195	ExpressionStatement	set_daemonlist ( )	144:2:4891:4908	4211162	3	True				
ANR	4211196	CallExpression	set_daemonlist ( )		4211162	0					
ANR	4211197	Callee	set_daemonlist		4211162	0					
ANR	4211198	Identifier	set_daemonlist		4211162	0					
ANR	4211199	ArgumentList			4211162	1					
ANR	4211200	ExpressionStatement	set_poolinfo ( )	145:2:4912:4927	4211162	4	True				
ANR	4211201	CallExpression	set_poolinfo ( )		4211162	0					
ANR	4211202	Callee	set_poolinfo		4211162	0					
ANR	4211203	Identifier	set_poolinfo		4211162	0					
ANR	4211204	ArgumentList			4211162	1					
ANR	4211205	ExpressionStatement	set_startdpolicy ( )	146:2:4952:4971	4211162	5	True				
ANR	4211206	CallExpression	set_startdpolicy ( )		4211162	0					
ANR	4211207	Callee	set_startdpolicy		4211162	0					
ANR	4211208	Identifier	set_startdpolicy		4211162	0					
ANR	4211209	ArgumentList			4211162	1					
ANR	4211210	ExpressionStatement	set_jvmlocation ( )	147:2:4975:4993	4211162	6	True				
ANR	4211211	CallExpression	set_jvmlocation ( )		4211162	0					
ANR	4211212	Callee	set_jvmlocation		4211162	0					
ANR	4211213	Identifier	set_jvmlocation		4211162	0					
ANR	4211214	ArgumentList			4211162	1					
ANR	4211215	ExpressionStatement	set_mailoptions ( )	149:2:5000:5018	4211162	7	True				
ANR	4211216	CallExpression	set_mailoptions ( )		4211162	0					
ANR	4211217	Callee	set_mailoptions		4211162	0					
ANR	4211218	Identifier	set_mailoptions		4211162	0					
ANR	4211219	ArgumentList			4211162	1					
ANR	4211220	ExpressionStatement	set_hostpermissions ( )	150:2:5022:5044	4211162	8	True				
ANR	4211221	CallExpression	set_hostpermissions ( )		4211162	0					
ANR	4211222	Callee	set_hostpermissions		4211162	0					
ANR	4211223	Identifier	set_hostpermissions		4211162	0					
ANR	4211224	ArgumentList			4211162	1					
ANR	4211225	ExpressionStatement	set_vmuniverse ( )	151:2:5048:5064	4211162	9	True				
ANR	4211226	CallExpression	set_vmuniverse ( )		4211162	0					
ANR	4211227	Callee	set_vmuniverse		4211162	0					
ANR	4211228	Identifier	set_vmuniverse		4211162	0					
ANR	4211229	ArgumentList			4211162	1					
ANR	4211230	ExpressionStatement	set_hdfs ( )	152:2:5068:5078	4211162	10	True				
ANR	4211231	CallExpression	set_hdfs ( )		4211162	0					
ANR	4211232	Callee	set_hdfs		4211162	0					
ANR	4211233	Identifier	set_hdfs		4211162	0					
ANR	4211234	ArgumentList			4211162	1					
ANR	4211235	IfStatement	if ( 'Y' == Opt . enablevmuniverse )		4211162	11					
ANR	4211236	Condition	'Y' == Opt . enablevmuniverse	155:7:5149:5175	4211162	0	True				
ANR	4211237	EqualityExpression	'Y' == Opt . enablevmuniverse		4211162	0		==			
ANR	4211238	PrimaryExpression	'Y'		4211162	0					
ANR	4211239	MemberAccess	Opt . enablevmuniverse		4211162	1					
ANR	4211240	Identifier	Opt		4211162	0					
ANR	4211241	Identifier	enablevmuniverse		4211162	1					
ANR	4211242	CompoundStatement		27:37:550:550	4211162	1					
ANR	4211243	ExpressionStatement	set_vmgahpoptions ( )	156:4:5185:5205	4211162	0	True				
ANR	4211244	CallExpression	set_vmgahpoptions ( )		4211162	0					
ANR	4211245	Callee	set_vmgahpoptions		4211162	0					
ANR	4211246	Identifier	set_vmgahpoptions		4211162	0					
ANR	4211247	ArgumentList			4211162	1					
ANR	4211248	ExpressionStatement	close_log_file ( )	159:2:5216:5233	4211162	12	True				
ANR	4211249	CallExpression	close_log_file ( )		4211162	0					
ANR	4211250	Callee	close_log_file		4211162	0					
ANR	4211251	Identifier	close_log_file		4211162	0					
ANR	4211252	ArgumentList			4211162	1					
ANR	4211253	ReturnStatement	return 0 ;	162:2:5261:5269	4211162	13	True				
ANR	4211254	PrimaryExpression	0		4211162	0					
ANR	4211255	ReturnType	int		4211162	1					
ANR	4211256	Identifier	main		4211162	2					
ANR	4211257	ParameterList	"int __argc , char * * __argv"		4211162	3					
ANR	4211258	Parameter	int __argc	129:9:4601:4610	4211162	0	True				
ANR	4211259	ParameterType	int		4211162	0					
ANR	4211260	Identifier	__argc		4211162	1					
ANR	4211261	Parameter	char * * __argv	129:21:4613:4625	4211162	1	True				
ANR	4211262	ParameterType	char * *		4211162	0					
ANR	4211263	Identifier	__argv		4211162	1					
ANR	4211264	CFGEntryNode	ENTRY		4211162		True				
ANR	4211265	CFGExitNode	EXIT		4211162		True				
ANR	4211266	Symbol	Opt		4211162						
ANR	4211267	Symbol	__argv		4211162						
ANR	4211268	Symbol	__argc		4211162						
ANR	4211269	Symbol	Opt . enablevmuniverse		4211162						
ANR	4211270	Symbol	parse_args		4211162						
ANR	4211271	Function	Usage	166:0:5275:5479							
ANR	4211272	FunctionDef	Usage ()		4211271	0					
ANR	4211273	CompoundStatement		167:8:5288:5479	4211271	0					
ANR	4211274	IdentifierDeclStatement	int i ;	169:1:5292:5297	4211271	0	True				
ANR	4211275	IdentifierDecl	i		4211271	0					
ANR	4211276	IdentifierDeclType	int		4211271	0					
ANR	4211277	Identifier	i		4211271	1					
ANR	4211278	ExpressionStatement	"printf ( ""Usage:\\n  condor_setup [options]\\n\\n"" )"	171:1:5301:5347	4211271	1	True				
ANR	4211279	CallExpression	"printf ( ""Usage:\\n  condor_setup [options]\\n\\n"" )"		4211271	0					
ANR	4211280	Callee	printf		4211271	0					
ANR	4211281	Identifier	printf		4211271	0					
ANR	4211282	ArgumentList	"""Usage:\\n  condor_setup [options]\\n\\n"""		4211271	1					
ANR	4211283	Argument	"""Usage:\\n  condor_setup [options]\\n\\n"""		4211271	0					
ANR	4211284	PrimaryExpression	"""Usage:\\n  condor_setup [options]\\n\\n"""		4211271	0					
ANR	4211285	ForStatement	for ( i = 0 ; long_options [ i ] . name ; i ++ )		4211271	2					
ANR	4211286	ForInit	i = 0 ;	172:6:5355:5358	4211271	0	True				
ANR	4211287	AssignmentExpression	i = 0		4211271	0		=			
ANR	4211288	Identifier	i		4211271	0					
ANR	4211289	PrimaryExpression	0		4211271	1					
ANR	4211290	Condition	long_options [ i ] . name	172:11:5360:5379	4211271	1	True				
ANR	4211291	MemberAccess	long_options [ i ] . name		4211271	0					
ANR	4211292	ArrayIndexing	long_options [ i ]		4211271	0					
ANR	4211293	Identifier	long_options		4211271	0					
ANR	4211294	Identifier	i		4211271	1					
ANR	4211295	Identifier	name		4211271	1					
ANR	4211296	PostIncDecOperationExpression	i ++	172:33:5382:5384	4211271	2	True				
ANR	4211297	Identifier	i		4211271	0					
ANR	4211298	IncDec	++		4211271	1					
ANR	4211299	CompoundStatement		6:38:98:98	4211271	3					
ANR	4211300	ExpressionStatement	"printf ( ""  -%c, --%-12s\\n"" , long_options [ i ] . val , long_options [ i ] . name )"	173:2:5391:5464	4211271	0	True				
ANR	4211301	CallExpression	"printf ( ""  -%c, --%-12s\\n"" , long_options [ i ] . val , long_options [ i ] . name )"		4211271	0					
ANR	4211302	Callee	printf		4211271	0					
ANR	4211303	Identifier	printf		4211271	0					
ANR	4211304	ArgumentList	"""  -%c, --%-12s\\n"""		4211271	1					
ANR	4211305	Argument	"""  -%c, --%-12s\\n"""		4211271	0					
ANR	4211306	PrimaryExpression	"""  -%c, --%-12s\\n"""		4211271	0					
ANR	4211307	Argument	long_options [ i ] . val		4211271	1					
ANR	4211308	MemberAccess	long_options [ i ] . val		4211271	0					
ANR	4211309	ArrayIndexing	long_options [ i ]		4211271	0					
ANR	4211310	Identifier	long_options		4211271	0					
ANR	4211311	Identifier	i		4211271	1					
ANR	4211312	Identifier	val		4211271	1					
ANR	4211313	Argument	long_options [ i ] . name		4211271	2					
ANR	4211314	MemberAccess	long_options [ i ] . name		4211271	0					
ANR	4211315	ArrayIndexing	long_options [ i ]		4211271	0					
ANR	4211316	Identifier	long_options		4211271	0					
ANR	4211317	Identifier	i		4211271	1					
ANR	4211318	Identifier	name		4211271	1					
ANR	4211319	ExpressionStatement	exit ( 0 )	176:1:5470:5477	4211271	3	True				
ANR	4211320	CallExpression	exit ( 0 )		4211271	0					
ANR	4211321	Callee	exit		4211271	0					
ANR	4211322	Identifier	exit		4211271	0					
ANR	4211323	ArgumentList	0		4211271	1					
ANR	4211324	Argument	0		4211271	0					
ANR	4211325	PrimaryExpression	0		4211271	0					
ANR	4211326	ReturnType	void		4211271	1					
ANR	4211327	Identifier	Usage		4211271	2					
ANR	4211328	ParameterList			4211271	3					
ANR	4211329	CFGEntryNode	ENTRY		4211271		True				
ANR	4211330	CFGExitNode	EXIT		4211271		True				
ANR	4211331	Symbol	* i		4211271						
ANR	4211332	Symbol	long_options		4211271						
ANR	4211333	Symbol	i		4211271						
ANR	4211334	Symbol	long_options [ i ] . name		4211271						
ANR	4211335	Symbol	long_options [ i ] . val		4211271						
ANR	4211336	Symbol	* long_options		4211271						
ANR	4211337	Function	set_mailoptions	179:0:5482:5778							
ANR	4211338	FunctionDef	set_mailoptions ()		4211337	0					
ANR	4211339	CompoundStatement		180:18:5506:5778	4211337	0					
ANR	4211340	IfStatement	if ( Opt . smtpserver )		4211337	0					
ANR	4211341	Condition	Opt . smtpserver	182:6:5515:5528	4211337	0	True				
ANR	4211342	MemberAccess	Opt . smtpserver		4211337	0					
ANR	4211343	Identifier	Opt		4211337	0					
ANR	4211344	Identifier	smtpserver		4211337	1					
ANR	4211345	CompoundStatement		3:22:24:24	4211337	1					
ANR	4211346	ExpressionStatement	"set_option ( ""SMTP_SERVER"" , Opt . smtpserver )"	183:2:5535:5576	4211337	0	True				
ANR	4211347	CallExpression	"set_option ( ""SMTP_SERVER"" , Opt . smtpserver )"		4211337	0					
ANR	4211348	Callee	set_option		4211337	0					
ANR	4211349	Identifier	set_option		4211337	0					
ANR	4211350	ArgumentList	"""SMTP_SERVER"""		4211337	1					
ANR	4211351	Argument	"""SMTP_SERVER"""		4211337	0					
ANR	4211352	PrimaryExpression	"""SMTP_SERVER"""		4211337	0					
ANR	4211353	Argument	Opt . smtpserver		4211337	1					
ANR	4211354	MemberAccess	Opt . smtpserver		4211337	0					
ANR	4211355	Identifier	Opt		4211337	0					
ANR	4211356	Identifier	smtpserver		4211337	1					
ANR	4211357	IfStatement	if ( Opt . condoremail )		4211337	1					
ANR	4211358	Condition	Opt . condoremail	186:6:5588:5602	4211337	0	True				
ANR	4211359	MemberAccess	Opt . condoremail		4211337	0					
ANR	4211360	Identifier	Opt		4211337	0					
ANR	4211361	Identifier	condoremail		4211337	1					
ANR	4211362	CompoundStatement		7:24:99:99	4211337	1					
ANR	4211363	ExpressionStatement	"set_option ( ""CONDOR_ADMIN"" , Opt . condoremail )"	187:2:5610:5653	4211337	0	True				
ANR	4211364	CallExpression	"set_option ( ""CONDOR_ADMIN"" , Opt . condoremail )"		4211337	0					
ANR	4211365	Callee	set_option		4211337	0					
ANR	4211366	Identifier	set_option		4211337	0					
ANR	4211367	ArgumentList	"""CONDOR_ADMIN"""		4211337	1					
ANR	4211368	Argument	"""CONDOR_ADMIN"""		4211337	0					
ANR	4211369	PrimaryExpression	"""CONDOR_ADMIN"""		4211337	0					
ANR	4211370	Argument	Opt . condoremail		4211337	1					
ANR	4211371	MemberAccess	Opt . condoremail		4211337	0					
ANR	4211372	Identifier	Opt		4211337	0					
ANR	4211373	Identifier	condoremail		4211337	1					
ANR	4211374	IfStatement	if ( Opt . accountingdomain && Opt . accountingdomain [ 0 ] != '\\0' )		4211337	2					
ANR	4211375	Condition	Opt . accountingdomain && Opt . accountingdomain [ 0 ] != '\\0'	190:6:5665:5719	4211337	0	True				
ANR	4211376	AndExpression	Opt . accountingdomain && Opt . accountingdomain [ 0 ] != '\\0'		4211337	0		&&			
ANR	4211377	MemberAccess	Opt . accountingdomain		4211337	0					
ANR	4211378	Identifier	Opt		4211337	0					
ANR	4211379	Identifier	accountingdomain		4211337	1					
ANR	4211380	EqualityExpression	Opt . accountingdomain [ 0 ] != '\\0'		4211337	1		!=			
ANR	4211381	ArrayIndexing	Opt . accountingdomain [ 0 ]		4211337	0					
ANR	4211382	MemberAccess	Opt . accountingdomain		4211337	0					
ANR	4211383	Identifier	Opt		4211337	0					
ANR	4211384	Identifier	accountingdomain		4211337	1					
ANR	4211385	PrimaryExpression	0		4211337	1					
ANR	4211386	PrimaryExpression	'\\0'		4211337	1					
ANR	4211387	CompoundStatement		11:64:216:216	4211337	1					
ANR	4211388	ExpressionStatement	"set_option ( ""UID_DOMAIN"" , Opt . accountingdomain )"	191:2:5727:5773	4211337	0	True				
ANR	4211389	CallExpression	"set_option ( ""UID_DOMAIN"" , Opt . accountingdomain )"		4211337	0					
ANR	4211390	Callee	set_option		4211337	0					
ANR	4211391	Identifier	set_option		4211337	0					
ANR	4211392	ArgumentList	"""UID_DOMAIN"""		4211337	1					
ANR	4211393	Argument	"""UID_DOMAIN"""		4211337	0					
ANR	4211394	PrimaryExpression	"""UID_DOMAIN"""		4211337	0					
ANR	4211395	Argument	Opt . accountingdomain		4211337	1					
ANR	4211396	MemberAccess	Opt . accountingdomain		4211337	0					
ANR	4211397	Identifier	Opt		4211337	0					
ANR	4211398	Identifier	accountingdomain		4211337	1					
ANR	4211399	ReturnType	void		4211337	1					
ANR	4211400	Identifier	set_mailoptions		4211337	2					
ANR	4211401	ParameterList			4211337	3					
ANR	4211402	CFGEntryNode	ENTRY		4211337		True				
ANR	4211403	CFGExitNode	EXIT		4211337		True				
ANR	4211404	Symbol	Opt . smtpserver		4211337						
ANR	4211405	Symbol	Opt		4211337						
ANR	4211406	Symbol	* Opt		4211337						
ANR	4211407	Symbol	Opt . accountingdomain		4211337						
ANR	4211408	Symbol	Opt . condoremail		4211337						
ANR	4211409	Symbol	* Opt . accountingdomain		4211337						
ANR	4211410	Function	set_jvmlocation	195:0:5781:5876							
ANR	4211411	FunctionDef	set_jvmlocation ()		4211410	0					
ANR	4211412	CompoundStatement		196:18:5805:5876	4211410	0					
ANR	4211413	IfStatement	if ( Opt . jvmlocation )		4211410	0					
ANR	4211414	Condition	Opt . jvmlocation	198:6:5814:5828	4211410	0	True				
ANR	4211415	MemberAccess	Opt . jvmlocation		4211410	0					
ANR	4211416	Identifier	Opt		4211410	0					
ANR	4211417	Identifier	jvmlocation		4211410	1					
ANR	4211418	CompoundStatement		3:24:26:26	4211410	1					
ANR	4211419	ExpressionStatement	"set_option ( ""JAVA"" , Opt . jvmlocation )"	199:2:5836:5871	4211410	0	True				
ANR	4211420	CallExpression	"set_option ( ""JAVA"" , Opt . jvmlocation )"		4211410	0					
ANR	4211421	Callee	set_option		4211410	0					
ANR	4211422	Identifier	set_option		4211410	0					
ANR	4211423	ArgumentList	"""JAVA"""		4211410	1					
ANR	4211424	Argument	"""JAVA"""		4211410	0					
ANR	4211425	PrimaryExpression	"""JAVA"""		4211410	0					
ANR	4211426	Argument	Opt . jvmlocation		4211410	1					
ANR	4211427	MemberAccess	Opt . jvmlocation		4211410	0					
ANR	4211428	Identifier	Opt		4211410	0					
ANR	4211429	Identifier	jvmlocation		4211410	1					
ANR	4211430	ReturnType	void		4211410	1					
ANR	4211431	Identifier	set_jvmlocation		4211410	2					
ANR	4211432	ParameterList			4211410	3					
ANR	4211433	CFGEntryNode	ENTRY		4211410		True				
ANR	4211434	CFGExitNode	EXIT		4211410		True				
ANR	4211435	Symbol	Opt		4211410						
ANR	4211436	Symbol	Opt . jvmlocation		4211410						
ANR	4211437	Function	set_vmgahpoptions	203:0:5879:6872							
ANR	4211438	FunctionDef	set_vmgahpoptions ()		4211437	0					
ANR	4211439	CompoundStatement		204:20:5904:6872	4211437	0					
ANR	4211440	IfStatement	if ( Opt . perllocation )		4211437	0					
ANR	4211441	Condition	Opt . perllocation	206:6:5913:5928	4211437	0	True				
ANR	4211442	MemberAccess	Opt . perllocation		4211437	0					
ANR	4211443	Identifier	Opt		4211437	0					
ANR	4211444	Identifier	perllocation		4211437	1					
ANR	4211445	CompoundStatement		3:25:27:27	4211437	1					
ANR	4211446	ExpressionStatement	"set_option ( ""VMWARE_PERL"" , Opt . perllocation )"	207:2:5936:5979	4211437	0	True				
ANR	4211447	CallExpression	"set_option ( ""VMWARE_PERL"" , Opt . perllocation )"		4211437	0					
ANR	4211448	Callee	set_option		4211437	0					
ANR	4211449	Identifier	set_option		4211437	0					
ANR	4211450	ArgumentList	"""VMWARE_PERL"""		4211437	1					
ANR	4211451	Argument	"""VMWARE_PERL"""		4211437	0					
ANR	4211452	PrimaryExpression	"""VMWARE_PERL"""		4211437	0					
ANR	4211453	Argument	Opt . perllocation		4211437	1					
ANR	4211454	MemberAccess	Opt . perllocation		4211437	0					
ANR	4211455	Identifier	Opt		4211437	0					
ANR	4211456	Identifier	perllocation		4211437	1					
ANR	4211457	IfStatement	if ( Opt . release_dir )		4211437	1					
ANR	4211458	Condition	Opt . release_dir	210:6:5991:6005	4211437	0	True				
ANR	4211459	MemberAccess	Opt . release_dir		4211437	0					
ANR	4211460	Identifier	Opt		4211437	0					
ANR	4211461	Identifier	release_dir		4211437	1					
ANR	4211462	CompoundStatement		12:2:248:271	4211437	1					
ANR	4211463	IdentifierDeclStatement	"char * control_script = ""bin\\\\condor_vm_vmware.pl"" ;"	211:2:6013:6062	4211437	0	True				
ANR	4211464	IdentifierDecl	"* control_script = ""bin\\\\condor_vm_vmware.pl"""		4211437	0					
ANR	4211465	IdentifierDeclType	char *		4211437	0					
ANR	4211466	Identifier	control_script		4211437	1					
ANR	4211467	AssignmentExpression	"* control_script = ""bin\\\\condor_vm_vmware.pl"""		4211437	2		=			
ANR	4211468	Identifier	control_script		4211437	0					
ANR	4211469	PrimaryExpression	"""bin\\\\condor_vm_vmware.pl"""		4211437	1					
ANR	4211470	IdentifierDeclStatement	char * tmp = malloc ( strlen ( Opt . release_dir ) + strlen ( control_script ) + 2 ) ;	213:2:6068:6148	4211437	1	True				
ANR	4211471	IdentifierDecl	* tmp = malloc ( strlen ( Opt . release_dir ) + strlen ( control_script ) + 2 )		4211437	0					
ANR	4211472	IdentifierDeclType	char *		4211437	0					
ANR	4211473	Identifier	tmp		4211437	1					
ANR	4211474	AssignmentExpression	* tmp = malloc ( strlen ( Opt . release_dir ) + strlen ( control_script ) + 2 )		4211437	2		=			
ANR	4211475	Identifier	tmp		4211437	0					
ANR	4211476	CallExpression	malloc ( strlen ( Opt . release_dir ) + strlen ( control_script ) + 2 )		4211437	1					
ANR	4211477	Callee	malloc		4211437	0					
ANR	4211478	Identifier	malloc		4211437	0					
ANR	4211479	ArgumentList	strlen ( Opt . release_dir ) + strlen ( control_script ) + 2		4211437	1					
ANR	4211480	Argument	strlen ( Opt . release_dir ) + strlen ( control_script ) + 2		4211437	0					
ANR	4211481	AdditiveExpression	strlen ( Opt . release_dir ) + strlen ( control_script ) + 2		4211437	0		+			
ANR	4211482	CallExpression	strlen ( Opt . release_dir )		4211437	0					
ANR	4211483	Callee	strlen		4211437	0					
ANR	4211484	Identifier	strlen		4211437	0					
ANR	4211485	ArgumentList	Opt . release_dir		4211437	1					
ANR	4211486	Argument	Opt . release_dir		4211437	0					
ANR	4211487	MemberAccess	Opt . release_dir		4211437	0					
ANR	4211488	Identifier	Opt		4211437	0					
ANR	4211489	Identifier	release_dir		4211437	1					
ANR	4211490	AdditiveExpression	strlen ( control_script ) + 2		4211437	1		+			
ANR	4211491	CallExpression	strlen ( control_script )		4211437	0					
ANR	4211492	Callee	strlen		4211437	0					
ANR	4211493	Identifier	strlen		4211437	0					
ANR	4211494	ArgumentList	control_script		4211437	1					
ANR	4211495	Argument	control_script		4211437	0					
ANR	4211496	Identifier	control_script		4211437	0					
ANR	4211497	PrimaryExpression	2		4211437	1					
ANR	4211498	IdentifierDeclStatement	char * short_name = NULL ;	215:2:6153:6176	4211437	2	True				
ANR	4211499	IdentifierDecl	* short_name = NULL		4211437	0					
ANR	4211500	IdentifierDeclType	char *		4211437	0					
ANR	4211501	Identifier	short_name		4211437	1					
ANR	4211502	AssignmentExpression	* short_name = NULL		4211437	2		=			
ANR	4211503	Identifier	NULL		4211437	0					
ANR	4211504	Identifier	NULL		4211437	1					
ANR	4211505	ExpressionStatement	"sprintf ( tmp , ""%s\\\\%s"" , Opt . release_dir , control_script )"	216:2:6180:6235	4211437	3	True				
ANR	4211506	CallExpression	"sprintf ( tmp , ""%s\\\\%s"" , Opt . release_dir , control_script )"		4211437	0					
ANR	4211507	Callee	sprintf		4211437	0					
ANR	4211508	Identifier	sprintf		4211437	0					
ANR	4211509	ArgumentList	tmp		4211437	1					
ANR	4211510	Argument	tmp		4211437	0					
ANR	4211511	Identifier	tmp		4211437	0					
ANR	4211512	Argument	"""%s\\\\%s"""		4211437	1					
ANR	4211513	PrimaryExpression	"""%s\\\\%s"""		4211437	0					
ANR	4211514	Argument	Opt . release_dir		4211437	2					
ANR	4211515	MemberAccess	Opt . release_dir		4211437	0					
ANR	4211516	Identifier	Opt		4211437	0					
ANR	4211517	Identifier	release_dir		4211437	1					
ANR	4211518	Argument	control_script		4211437	3					
ANR	4211519	Identifier	control_script		4211437	0					
ANR	4211520	ExpressionStatement	short_name = get_short_path_name ( tmp )	217:2:6239:6276	4211437	4	True				
ANR	4211521	AssignmentExpression	short_name = get_short_path_name ( tmp )		4211437	0		=			
ANR	4211522	Identifier	short_name		4211437	0					
ANR	4211523	CallExpression	get_short_path_name ( tmp )		4211437	1					
ANR	4211524	Callee	get_short_path_name		4211437	0					
ANR	4211525	Identifier	get_short_path_name		4211437	0					
ANR	4211526	ArgumentList	tmp		4211437	1					
ANR	4211527	Argument	tmp		4211437	0					
ANR	4211528	Identifier	tmp		4211437	0					
ANR	4211529	ExpressionStatement	free ( tmp )	219:2:6282:6291	4211437	5	True				
ANR	4211530	CallExpression	free ( tmp )		4211437	0					
ANR	4211531	Callee	free		4211437	0					
ANR	4211532	Identifier	free		4211437	0					
ANR	4211533	ArgumentList	tmp		4211437	1					
ANR	4211534	Argument	tmp		4211437	0					
ANR	4211535	Identifier	tmp		4211437	0					
ANR	4211536	ExpressionStatement	"set_option ( ""VMWARE_SCRIPT"" , short_name )"	221:2:6297:6336	4211437	6	True				
ANR	4211537	CallExpression	"set_option ( ""VMWARE_SCRIPT"" , short_name )"		4211437	0					
ANR	4211538	Callee	set_option		4211437	0					
ANR	4211539	Identifier	set_option		4211437	0					
ANR	4211540	ArgumentList	"""VMWARE_SCRIPT"""		4211437	1					
ANR	4211541	Argument	"""VMWARE_SCRIPT"""		4211437	0					
ANR	4211542	PrimaryExpression	"""VMWARE_SCRIPT"""		4211437	0					
ANR	4211543	Argument	short_name		4211437	1					
ANR	4211544	Identifier	short_name		4211437	0					
ANR	4211545	ExpressionStatement	free ( short_name )	222:2:6340:6356	4211437	7	True				
ANR	4211546	CallExpression	free ( short_name )		4211437	0					
ANR	4211547	Callee	free		4211437	0					
ANR	4211548	Identifier	free		4211437	0					
ANR	4211549	ArgumentList	short_name		4211437	1					
ANR	4211550	Argument	short_name		4211437	0					
ANR	4211551	Identifier	short_name		4211437	0					
ANR	4211552	IfStatement	if ( Opt . vmversion )		4211437	2					
ANR	4211553	Condition	Opt . vmversion	226:6:6370:6382	4211437	0	True				
ANR	4211554	MemberAccess	Opt . vmversion		4211437	0					
ANR	4211555	Identifier	Opt		4211437	0					
ANR	4211556	Identifier	vmversion		4211437	1					
ANR	4211557	CompoundStatement		23:22:481:481	4211437	1					
ANR	4211558	ExpressionStatement	"set_option ( ""VM_VERSION"" , Opt . vmversion )"	227:2:6390:6429	4211437	0	True				
ANR	4211559	CallExpression	"set_option ( ""VM_VERSION"" , Opt . vmversion )"		4211437	0					
ANR	4211560	Callee	set_option		4211437	0					
ANR	4211561	Identifier	set_option		4211437	0					
ANR	4211562	ArgumentList	"""VM_VERSION"""		4211437	1					
ANR	4211563	Argument	"""VM_VERSION"""		4211437	0					
ANR	4211564	PrimaryExpression	"""VM_VERSION"""		4211437	0					
ANR	4211565	Argument	Opt . vmversion		4211437	1					
ANR	4211566	MemberAccess	Opt . vmversion		4211437	0					
ANR	4211567	Identifier	Opt		4211437	0					
ANR	4211568	Identifier	vmversion		4211437	1					
ANR	4211569	IfStatement	if ( Opt . vmmemory )		4211437	3					
ANR	4211570	Condition	Opt . vmmemory	230:6:6441:6452	4211437	0	True				
ANR	4211571	MemberAccess	Opt . vmmemory		4211437	0					
ANR	4211572	Identifier	Opt		4211437	0					
ANR	4211573	Identifier	vmmemory		4211437	1					
ANR	4211574	CompoundStatement		27:21:551:551	4211437	1					
ANR	4211575	ExpressionStatement	"set_option ( ""VM_MEMORY"" , Opt . vmmemory )"	231:2:6460:6497	4211437	0	True				
ANR	4211576	CallExpression	"set_option ( ""VM_MEMORY"" , Opt . vmmemory )"		4211437	0					
ANR	4211577	Callee	set_option		4211437	0					
ANR	4211578	Identifier	set_option		4211437	0					
ANR	4211579	ArgumentList	"""VM_MEMORY"""		4211437	1					
ANR	4211580	Argument	"""VM_MEMORY"""		4211437	0					
ANR	4211581	PrimaryExpression	"""VM_MEMORY"""		4211437	0					
ANR	4211582	Argument	Opt . vmmemory		4211437	1					
ANR	4211583	MemberAccess	Opt . vmmemory		4211437	0					
ANR	4211584	Identifier	Opt		4211437	0					
ANR	4211585	Identifier	vmmemory		4211437	1					
ANR	4211586	ExpressionStatement	"set_option ( ""VM_NETWORKING"" , ""TRUE"" )"	234:1:6504:6539	4211437	4	True				
ANR	4211587	CallExpression	"set_option ( ""VM_NETWORKING"" , ""TRUE"" )"		4211437	0					
ANR	4211588	Callee	set_option		4211437	0					
ANR	4211589	Identifier	set_option		4211437	0					
ANR	4211590	ArgumentList	"""VM_NETWORKING"""		4211437	1					
ANR	4211591	Argument	"""VM_NETWORKING"""		4211437	0					
ANR	4211592	PrimaryExpression	"""VM_NETWORKING"""		4211437	0					
ANR	4211593	Argument	"""TRUE"""		4211437	1					
ANR	4211594	PrimaryExpression	"""TRUE"""		4211437	0					
ANR	4211595	IfStatement	if ( 'A' == Opt . vmnetworking )		4211437	5					
ANR	4211596	Condition	'A' == Opt . vmnetworking	235:6:6547:6569	4211437	0	True				
ANR	4211597	EqualityExpression	'A' == Opt . vmnetworking		4211437	0		==			
ANR	4211598	PrimaryExpression	'A'		4211437	0					
ANR	4211599	MemberAccess	Opt . vmnetworking		4211437	1					
ANR	4211600	Identifier	Opt		4211437	0					
ANR	4211601	Identifier	vmnetworking		4211437	1					
ANR	4211602	CompoundStatement		32:32:668:668	4211437	1					
ANR	4211603	ExpressionStatement	"set_option ( ""VM_NETWORKING_TYPE"" , ""nat"" )"	236:2:6577:6616	4211437	0	True				
ANR	4211604	CallExpression	"set_option ( ""VM_NETWORKING_TYPE"" , ""nat"" )"		4211437	0					
ANR	4211605	Callee	set_option		4211437	0					
ANR	4211606	Identifier	set_option		4211437	0					
ANR	4211607	ArgumentList	"""VM_NETWORKING_TYPE"""		4211437	1					
ANR	4211608	Argument	"""VM_NETWORKING_TYPE"""		4211437	0					
ANR	4211609	PrimaryExpression	"""VM_NETWORKING_TYPE"""		4211437	0					
ANR	4211610	Argument	"""nat"""		4211437	1					
ANR	4211611	PrimaryExpression	"""nat"""		4211437	0					
ANR	4211612	ElseStatement	else		4211437	0					
ANR	4211613	IfStatement	if ( 'B' == Opt . vmnetworking )		4211437	0					
ANR	4211614	Condition	'B' == Opt . vmnetworking	237:13:6631:6653	4211437	0	True				
ANR	4211615	EqualityExpression	'B' == Opt . vmnetworking		4211437	0		==			
ANR	4211616	PrimaryExpression	'B'		4211437	0					
ANR	4211617	MemberAccess	Opt . vmnetworking		4211437	1					
ANR	4211618	Identifier	Opt		4211437	0					
ANR	4211619	Identifier	vmnetworking		4211437	1					
ANR	4211620	CompoundStatement		34:39:752:752	4211437	1					
ANR	4211621	ExpressionStatement	"set_option ( ""VM_NETWORKING_TYPE"" , ""bridge"" )"	238:2:6661:6703	4211437	0	True				
ANR	4211622	CallExpression	"set_option ( ""VM_NETWORKING_TYPE"" , ""bridge"" )"		4211437	0					
ANR	4211623	Callee	set_option		4211437	0					
ANR	4211624	Identifier	set_option		4211437	0					
ANR	4211625	ArgumentList	"""VM_NETWORKING_TYPE"""		4211437	1					
ANR	4211626	Argument	"""VM_NETWORKING_TYPE"""		4211437	0					
ANR	4211627	PrimaryExpression	"""VM_NETWORKING_TYPE"""		4211437	0					
ANR	4211628	Argument	"""bridge"""		4211437	1					
ANR	4211629	PrimaryExpression	"""bridge"""		4211437	0					
ANR	4211630	ElseStatement	else		4211437	0					
ANR	4211631	IfStatement	if ( 'C' == Opt . vmnetworking )		4211437	0					
ANR	4211632	Condition	'C' == Opt . vmnetworking	239:13:6718:6740	4211437	0	True				
ANR	4211633	EqualityExpression	'C' == Opt . vmnetworking		4211437	0		==			
ANR	4211634	PrimaryExpression	'C'		4211437	0					
ANR	4211635	MemberAccess	Opt . vmnetworking		4211437	1					
ANR	4211636	Identifier	Opt		4211437	0					
ANR	4211637	Identifier	vmnetworking		4211437	1					
ANR	4211638	CompoundStatement		36:39:839:839	4211437	1					
ANR	4211639	ExpressionStatement	"set_option ( ""VM_NETWORKING_TYPE"" , ""nat, bridge"" )"	240:2:6748:6795	4211437	0	True				
ANR	4211640	CallExpression	"set_option ( ""VM_NETWORKING_TYPE"" , ""nat, bridge"" )"		4211437	0					
ANR	4211641	Callee	set_option		4211437	0					
ANR	4211642	Identifier	set_option		4211437	0					
ANR	4211643	ArgumentList	"""VM_NETWORKING_TYPE"""		4211437	1					
ANR	4211644	Argument	"""VM_NETWORKING_TYPE"""		4211437	0					
ANR	4211645	PrimaryExpression	"""VM_NETWORKING_TYPE"""		4211437	0					
ANR	4211646	Argument	"""nat, bridge"""		4211437	1					
ANR	4211647	PrimaryExpression	"""nat, bridge"""		4211437	0					
ANR	4211648	ElseStatement	else		4211437	0					
ANR	4211649	CompoundStatement		38:8:900:900	4211437	0					
ANR	4211650	ExpressionStatement	"set_option ( ""VM_NETWORKING"" , ""FALSE"" )"	242:2:6830:6866	4211437	0	True				
ANR	4211651	CallExpression	"set_option ( ""VM_NETWORKING"" , ""FALSE"" )"		4211437	0					
ANR	4211652	Callee	set_option		4211437	0					
ANR	4211653	Identifier	set_option		4211437	0					
ANR	4211654	ArgumentList	"""VM_NETWORKING"""		4211437	1					
ANR	4211655	Argument	"""VM_NETWORKING"""		4211437	0					
ANR	4211656	PrimaryExpression	"""VM_NETWORKING"""		4211437	0					
ANR	4211657	Argument	"""FALSE"""		4211437	1					
ANR	4211658	PrimaryExpression	"""FALSE"""		4211437	0					
ANR	4211659	ReturnType	void		4211437	1					
ANR	4211660	Identifier	set_vmgahpoptions		4211437	2					
ANR	4211661	ParameterList			4211437	3					
ANR	4211662	CFGEntryNode	ENTRY		4211437		True				
ANR	4211663	CFGExitNode	EXIT		4211437		True				
ANR	4211664	Symbol	malloc		4211437						
ANR	4211665	Symbol	NULL		4211437						
ANR	4211666	Symbol	Opt . release_dir		4211437						
ANR	4211667	Symbol	control_script		4211437						
ANR	4211668	Symbol	Opt . perllocation		4211437						
ANR	4211669	Symbol	get_short_path_name		4211437						
ANR	4211670	Symbol	strlen		4211437						
ANR	4211671	Symbol	Opt		4211437						
ANR	4211672	Symbol	Opt . vmnetworking		4211437						
ANR	4211673	Symbol	tmp		4211437						
ANR	4211674	Symbol	Opt . vmmemory		4211437						
ANR	4211675	Symbol	short_name		4211437						
ANR	4211676	Symbol	Opt . vmversion		4211437						
ANR	4211677	Function	set_release_dir	247:0:6875:7165							
ANR	4211678	FunctionDef	set_release_dir ()		4211677	0					
ANR	4211679	CompoundStatement		248:18:6898:7165	4211677	0					
ANR	4211680	IfStatement	if ( Opt . release_dir )		4211677	0					
ANR	4211681	Condition	Opt . release_dir	249:6:6906:6920	4211677	0	True				
ANR	4211682	MemberAccess	Opt . release_dir		4211677	0					
ANR	4211683	Identifier	Opt		4211677	0					
ANR	4211684	Identifier	release_dir		4211677	1					
ANR	4211685	CompoundStatement		2:24:25:25	4211677	1					
ANR	4211686	ExpressionStatement	"set_option ( ""RELEASE_DIR"" , Opt . release_dir )"	250:2:6928:6970	4211677	0	True				
ANR	4211687	CallExpression	"set_option ( ""RELEASE_DIR"" , Opt . release_dir )"		4211677	0					
ANR	4211688	Callee	set_option		4211677	0					
ANR	4211689	Identifier	set_option		4211677	0					
ANR	4211690	ArgumentList	"""RELEASE_DIR"""		4211677	1					
ANR	4211691	Argument	"""RELEASE_DIR"""		4211677	0					
ANR	4211692	PrimaryExpression	"""RELEASE_DIR"""		4211677	0					
ANR	4211693	Argument	Opt . release_dir		4211677	1					
ANR	4211694	MemberAccess	Opt . release_dir		4211677	0					
ANR	4211695	Identifier	Opt		4211677	0					
ANR	4211696	Identifier	release_dir		4211677	1					
ANR	4211697	ExpressionStatement	"set_option ( ""LOCAL_DIR"" , Opt . release_dir )"	251:2:6974:7014	4211677	1	True				
ANR	4211698	CallExpression	"set_option ( ""LOCAL_DIR"" , Opt . release_dir )"		4211677	0					
ANR	4211699	Callee	set_option		4211677	0					
ANR	4211700	Identifier	set_option		4211677	0					
ANR	4211701	ArgumentList	"""LOCAL_DIR"""		4211677	1					
ANR	4211702	Argument	"""LOCAL_DIR"""		4211677	0					
ANR	4211703	PrimaryExpression	"""LOCAL_DIR"""		4211677	0					
ANR	4211704	Argument	Opt . release_dir		4211677	1					
ANR	4211705	MemberAccess	Opt . release_dir		4211677	0					
ANR	4211706	Identifier	Opt		4211677	0					
ANR	4211707	Identifier	release_dir		4211677	1					
ANR	4211708	ExpressionStatement	"set_option ( ""HDFS"" , ""$(SBIN)/condor_hdfs.exe"" )"	253:2:7060:7105	4211677	2	True				
ANR	4211709	CallExpression	"set_option ( ""HDFS"" , ""$(SBIN)/condor_hdfs.exe"" )"		4211677	0					
ANR	4211710	Callee	set_option		4211677	0					
ANR	4211711	Identifier	set_option		4211677	0					
ANR	4211712	ArgumentList	"""HDFS"""		4211677	1					
ANR	4211713	Argument	"""HDFS"""		4211677	0					
ANR	4211714	PrimaryExpression	"""HDFS"""		4211677	0					
ANR	4211715	Argument	"""$(SBIN)/condor_hdfs.exe"""		4211677	1					
ANR	4211716	PrimaryExpression	"""$(SBIN)/condor_hdfs.exe"""		4211677	0					
ANR	4211717	ExpressionStatement	"set_option ( ""ROOSTER"" , ""$(SBIN)/condor_rooster.exe"" )"	254:2:7109:7160	4211677	3	True				
ANR	4211718	CallExpression	"set_option ( ""ROOSTER"" , ""$(SBIN)/condor_rooster.exe"" )"		4211677	0					
ANR	4211719	Callee	set_option		4211677	0					
ANR	4211720	Identifier	set_option		4211677	0					
ANR	4211721	ArgumentList	"""ROOSTER"""		4211677	1					
ANR	4211722	Argument	"""ROOSTER"""		4211677	0					
ANR	4211723	PrimaryExpression	"""ROOSTER"""		4211677	0					
ANR	4211724	Argument	"""$(SBIN)/condor_rooster.exe"""		4211677	1					
ANR	4211725	PrimaryExpression	"""$(SBIN)/condor_rooster.exe"""		4211677	0					
ANR	4211726	ReturnType	void		4211677	1					
ANR	4211727	Identifier	set_release_dir		4211677	2					
ANR	4211728	ParameterList			4211677	3					
ANR	4211729	CFGEntryNode	ENTRY		4211677		True				
ANR	4211730	CFGExitNode	EXIT		4211677		True				
ANR	4211731	Symbol	Opt		4211677						
ANR	4211732	Symbol	Opt . release_dir		4211677						
ANR	4211733	Function	set_startdpolicy	258:0:7168:8394							
ANR	4211734	FunctionDef	set_startdpolicy ()		4211733	0					
ANR	4211735	CompoundStatement		259:19:7192:8394	4211733	0					
ANR	4211736	IfStatement	if ( Opt . runjobs == 'A' )		4211733	0					
ANR	4211737	Condition	Opt . runjobs == 'A'	260:5:7199:7216	4211733	0	True				
ANR	4211738	EqualityExpression	Opt . runjobs == 'A'		4211733	0		==			
ANR	4211739	MemberAccess	Opt . runjobs		4211733	0					
ANR	4211740	Identifier	Opt		4211733	0					
ANR	4211741	Identifier	runjobs		4211733	1					
ANR	4211742	PrimaryExpression	'A'		4211733	1					
ANR	4211743	CompoundStatement		2:25:26:26	4211733	1					
ANR	4211744	ExpressionStatement	"set_option ( ""START"" , ""TRUE"" )"	262:2:7248:7275	4211733	0	True				
ANR	4211745	CallExpression	"set_option ( ""START"" , ""TRUE"" )"		4211733	0					
ANR	4211746	Callee	set_option		4211733	0					
ANR	4211747	Identifier	set_option		4211733	0					
ANR	4211748	ArgumentList	"""START"""		4211733	1					
ANR	4211749	Argument	"""START"""		4211733	0					
ANR	4211750	PrimaryExpression	"""START"""		4211733	0					
ANR	4211751	Argument	"""TRUE"""		4211733	1					
ANR	4211752	PrimaryExpression	"""TRUE"""		4211733	0					
ANR	4211753	ExpressionStatement	"set_option ( ""SUSPEND"" , ""FALSE"" )"	263:2:7279:7309	4211733	1	True				
ANR	4211754	CallExpression	"set_option ( ""SUSPEND"" , ""FALSE"" )"		4211733	0					
ANR	4211755	Callee	set_option		4211733	0					
ANR	4211756	Identifier	set_option		4211733	0					
ANR	4211757	ArgumentList	"""SUSPEND"""		4211733	1					
ANR	4211758	Argument	"""SUSPEND"""		4211733	0					
ANR	4211759	PrimaryExpression	"""SUSPEND"""		4211733	0					
ANR	4211760	Argument	"""FALSE"""		4211733	1					
ANR	4211761	PrimaryExpression	"""FALSE"""		4211733	0					
ANR	4211762	ExpressionStatement	"set_option ( ""WANT_SUSPEND"" , ""FALSE"" )"	264:2:7313:7348	4211733	2	True				
ANR	4211763	CallExpression	"set_option ( ""WANT_SUSPEND"" , ""FALSE"" )"		4211733	0					
ANR	4211764	Callee	set_option		4211733	0					
ANR	4211765	Identifier	set_option		4211733	0					
ANR	4211766	ArgumentList	"""WANT_SUSPEND"""		4211733	1					
ANR	4211767	Argument	"""WANT_SUSPEND"""		4211733	0					
ANR	4211768	PrimaryExpression	"""WANT_SUSPEND"""		4211733	0					
ANR	4211769	Argument	"""FALSE"""		4211733	1					
ANR	4211770	PrimaryExpression	"""FALSE"""		4211733	0					
ANR	4211771	ExpressionStatement	"set_option ( ""WANT_VACATE"" , ""FALSE"" )"	265:2:7352:7386	4211733	3	True				
ANR	4211772	CallExpression	"set_option ( ""WANT_VACATE"" , ""FALSE"" )"		4211733	0					
ANR	4211773	Callee	set_option		4211733	0					
ANR	4211774	Identifier	set_option		4211733	0					
ANR	4211775	ArgumentList	"""WANT_VACATE"""		4211733	1					
ANR	4211776	Argument	"""WANT_VACATE"""		4211733	0					
ANR	4211777	PrimaryExpression	"""WANT_VACATE"""		4211733	0					
ANR	4211778	Argument	"""FALSE"""		4211733	1					
ANR	4211779	PrimaryExpression	"""FALSE"""		4211733	0					
ANR	4211780	ExpressionStatement	"set_option ( ""PREEMPT"" , ""FALSE"" )"	266:2:7390:7420	4211733	4	True				
ANR	4211781	CallExpression	"set_option ( ""PREEMPT"" , ""FALSE"" )"		4211733	0					
ANR	4211782	Callee	set_option		4211733	0					
ANR	4211783	Identifier	set_option		4211733	0					
ANR	4211784	ArgumentList	"""PREEMPT"""		4211733	1					
ANR	4211785	Argument	"""PREEMPT"""		4211733	0					
ANR	4211786	PrimaryExpression	"""PREEMPT"""		4211733	0					
ANR	4211787	Argument	"""FALSE"""		4211733	1					
ANR	4211788	PrimaryExpression	"""FALSE"""		4211733	0					
ANR	4211789	ElseStatement	else		4211733	0					
ANR	4211790	IfStatement	if ( Opt . runjobs == 'N' )		4211733	0					
ANR	4211791	Condition	Opt . runjobs == 'N'	268:12:7435:7452	4211733	0	True				
ANR	4211792	EqualityExpression	Opt . runjobs == 'N'		4211733	0		==			
ANR	4211793	MemberAccess	Opt . runjobs		4211733	0					
ANR	4211794	Identifier	Opt		4211733	0					
ANR	4211795	Identifier	runjobs		4211733	1					
ANR	4211796	PrimaryExpression	'N'		4211733	1					
ANR	4211797	CompoundStatement		10:32:262:262	4211733	1					
ANR	4211798	ExpressionStatement	"set_option ( ""START"" , ""FALSE"" )"	270:2:7483:7511	4211733	0	True				
ANR	4211799	CallExpression	"set_option ( ""START"" , ""FALSE"" )"		4211733	0					
ANR	4211800	Callee	set_option		4211733	0					
ANR	4211801	Identifier	set_option		4211733	0					
ANR	4211802	ArgumentList	"""START"""		4211733	1					
ANR	4211803	Argument	"""START"""		4211733	0					
ANR	4211804	PrimaryExpression	"""START"""		4211733	0					
ANR	4211805	Argument	"""FALSE"""		4211733	1					
ANR	4211806	PrimaryExpression	"""FALSE"""		4211733	0					
ANR	4211807	ElseStatement	else		4211733	0					
ANR	4211808	IfStatement	if ( Opt . runjobs == 'I' )		4211733	0					
ANR	4211809	Condition	Opt . runjobs == 'I'	272:12:7526:7543	4211733	0	True				
ANR	4211810	EqualityExpression	Opt . runjobs == 'I'		4211733	0		==			
ANR	4211811	MemberAccess	Opt . runjobs		4211733	0					
ANR	4211812	Identifier	Opt		4211733	0					
ANR	4211813	Identifier	runjobs		4211733	1					
ANR	4211814	PrimaryExpression	'I'		4211733	1					
ANR	4211815	CompoundStatement		14:32:353:353	4211733	1					
ANR	4211816	ExpressionStatement	"set_option ( ""START"" , ""KeyboardIdle > $(StartIdleTime)"" )"	274:2:7594:7648	4211733	0	True				
ANR	4211817	CallExpression	"set_option ( ""START"" , ""KeyboardIdle > $(StartIdleTime)"" )"		4211733	0					
ANR	4211818	Callee	set_option		4211733	0					
ANR	4211819	Identifier	set_option		4211733	0					
ANR	4211820	ArgumentList	"""START"""		4211733	1					
ANR	4211821	Argument	"""START"""		4211733	0					
ANR	4211822	PrimaryExpression	"""START"""		4211733	0					
ANR	4211823	Argument	"""KeyboardIdle > $(StartIdleTime)"""		4211733	1					
ANR	4211824	PrimaryExpression	"""KeyboardIdle > $(StartIdleTime)"""		4211733	0					
ANR	4211825	ExpressionStatement	"set_option ( ""SUSPEND"" , ""$(UWCS_SUSPEND)"" )"	275:2:7652:7692	4211733	1	True				
ANR	4211826	CallExpression	"set_option ( ""SUSPEND"" , ""$(UWCS_SUSPEND)"" )"		4211733	0					
ANR	4211827	Callee	set_option		4211733	0					
ANR	4211828	Identifier	set_option		4211733	0					
ANR	4211829	ArgumentList	"""SUSPEND"""		4211733	1					
ANR	4211830	Argument	"""SUSPEND"""		4211733	0					
ANR	4211831	PrimaryExpression	"""SUSPEND"""		4211733	0					
ANR	4211832	Argument	"""$(UWCS_SUSPEND)"""		4211733	1					
ANR	4211833	PrimaryExpression	"""$(UWCS_SUSPEND)"""		4211733	0					
ANR	4211834	ExpressionStatement	"set_option ( ""CONTINUE"" , ""KeyboardIdle > $(ContinueIdleTime)"" )"	276:2:7696:7756	4211733	2	True				
ANR	4211835	CallExpression	"set_option ( ""CONTINUE"" , ""KeyboardIdle > $(ContinueIdleTime)"" )"		4211733	0					
ANR	4211836	Callee	set_option		4211733	0					
ANR	4211837	Identifier	set_option		4211733	0					
ANR	4211838	ArgumentList	"""CONTINUE"""		4211733	1					
ANR	4211839	Argument	"""CONTINUE"""		4211733	0					
ANR	4211840	PrimaryExpression	"""CONTINUE"""		4211733	0					
ANR	4211841	Argument	"""KeyboardIdle > $(ContinueIdleTime)"""		4211733	1					
ANR	4211842	PrimaryExpression	"""KeyboardIdle > $(ContinueIdleTime)"""		4211733	0					
ANR	4211843	ElseStatement	else		4211733	0					
ANR	4211844	IfStatement	if ( Opt . runjobs == 'C' )		4211733	0					
ANR	4211845	Condition	Opt . runjobs == 'C'	278:12:7771:7788	4211733	0	True				
ANR	4211846	EqualityExpression	Opt . runjobs == 'C'		4211733	0		==			
ANR	4211847	MemberAccess	Opt . runjobs		4211733	0					
ANR	4211848	Identifier	Opt		4211733	0					
ANR	4211849	Identifier	runjobs		4211733	1					
ANR	4211850	PrimaryExpression	'C'		4211733	1					
ANR	4211851	CompoundStatement		20:32:598:598	4211733	1					
ANR	4211852	ExpressionStatement	"set_option ( ""START"" , ""$(UWCS_START)"" )"	280:2:7840:7876	4211733	0	True				
ANR	4211853	CallExpression	"set_option ( ""START"" , ""$(UWCS_START)"" )"		4211733	0					
ANR	4211854	Callee	set_option		4211733	0					
ANR	4211855	Identifier	set_option		4211733	0					
ANR	4211856	ArgumentList	"""START"""		4211733	1					
ANR	4211857	Argument	"""START"""		4211733	0					
ANR	4211858	PrimaryExpression	"""START"""		4211733	0					
ANR	4211859	Argument	"""$(UWCS_START)"""		4211733	1					
ANR	4211860	PrimaryExpression	"""$(UWCS_START)"""		4211733	0					
ANR	4211861	ExpressionStatement	"set_option ( ""CONTINUE"" , ""$(UWCS_CONTINUE)"" )"	281:2:7880:7922	4211733	1	True				
ANR	4211862	CallExpression	"set_option ( ""CONTINUE"" , ""$(UWCS_CONTINUE)"" )"		4211733	0					
ANR	4211863	Callee	set_option		4211733	0					
ANR	4211864	Identifier	set_option		4211733	0					
ANR	4211865	ArgumentList	"""CONTINUE"""		4211733	1					
ANR	4211866	Argument	"""CONTINUE"""		4211733	0					
ANR	4211867	PrimaryExpression	"""CONTINUE"""		4211733	0					
ANR	4211868	Argument	"""$(UWCS_CONTINUE)"""		4211733	1					
ANR	4211869	PrimaryExpression	"""$(UWCS_CONTINUE)"""		4211733	0					
ANR	4211870	ExpressionStatement	"set_option ( ""SUSPEND"" , ""$(UWCS_SUSPEND)"" )"	283:2:7927:7967	4211733	2	True				
ANR	4211871	CallExpression	"set_option ( ""SUSPEND"" , ""$(UWCS_SUSPEND)"" )"		4211733	0					
ANR	4211872	Callee	set_option		4211733	0					
ANR	4211873	Identifier	set_option		4211733	0					
ANR	4211874	ArgumentList	"""SUSPEND"""		4211733	1					
ANR	4211875	Argument	"""SUSPEND"""		4211733	0					
ANR	4211876	PrimaryExpression	"""SUSPEND"""		4211733	0					
ANR	4211877	Argument	"""$(UWCS_SUSPEND)"""		4211733	1					
ANR	4211878	PrimaryExpression	"""$(UWCS_SUSPEND)"""		4211733	0					
ANR	4211879	ExpressionStatement	"set_option ( ""WANT_SUSPEND"" , ""$(UWCS_WANT_SUSPEND)"" )"	284:2:7971:8021	4211733	3	True				
ANR	4211880	CallExpression	"set_option ( ""WANT_SUSPEND"" , ""$(UWCS_WANT_SUSPEND)"" )"		4211733	0					
ANR	4211881	Callee	set_option		4211733	0					
ANR	4211882	Identifier	set_option		4211733	0					
ANR	4211883	ArgumentList	"""WANT_SUSPEND"""		4211733	1					
ANR	4211884	Argument	"""WANT_SUSPEND"""		4211733	0					
ANR	4211885	PrimaryExpression	"""WANT_SUSPEND"""		4211733	0					
ANR	4211886	Argument	"""$(UWCS_WANT_SUSPEND)"""		4211733	1					
ANR	4211887	PrimaryExpression	"""$(UWCS_WANT_SUSPEND)"""		4211733	0					
ANR	4211888	ExpressionStatement	"set_option ( ""WANT_VACATE"" , ""$(UWCS_WANT_VACATE)"" )"	285:2:8025:8073	4211733	4	True				
ANR	4211889	CallExpression	"set_option ( ""WANT_VACATE"" , ""$(UWCS_WANT_VACATE)"" )"		4211733	0					
ANR	4211890	Callee	set_option		4211733	0					
ANR	4211891	Identifier	set_option		4211733	0					
ANR	4211892	ArgumentList	"""WANT_VACATE"""		4211733	1					
ANR	4211893	Argument	"""WANT_VACATE"""		4211733	0					
ANR	4211894	PrimaryExpression	"""WANT_VACATE"""		4211733	0					
ANR	4211895	Argument	"""$(UWCS_WANT_VACATE)"""		4211733	1					
ANR	4211896	PrimaryExpression	"""$(UWCS_WANT_VACATE)"""		4211733	0					
ANR	4211897	ExpressionStatement	"set_option ( ""WANT_PREEMPT"" , ""$(UWCS_WANT_PREEMPT)"" )"	286:2:8077:8127	4211733	5	True				
ANR	4211898	CallExpression	"set_option ( ""WANT_PREEMPT"" , ""$(UWCS_WANT_PREEMPT)"" )"		4211733	0					
ANR	4211899	Callee	set_option		4211733	0					
ANR	4211900	Identifier	set_option		4211733	0					
ANR	4211901	ArgumentList	"""WANT_PREEMPT"""		4211733	1					
ANR	4211902	Argument	"""WANT_PREEMPT"""		4211733	0					
ANR	4211903	PrimaryExpression	"""WANT_PREEMPT"""		4211733	0					
ANR	4211904	Argument	"""$(UWCS_WANT_PREEMPT)"""		4211733	1					
ANR	4211905	PrimaryExpression	"""$(UWCS_WANT_PREEMPT)"""		4211733	0					
ANR	4211906	IfStatement	if ( Opt . vacatejobs == 'N' )		4211733	1					
ANR	4211907	Condition	Opt . vacatejobs == 'N'	289:6:8139:8159	4211733	0	True				
ANR	4211908	EqualityExpression	Opt . vacatejobs == 'N'		4211733	0		==			
ANR	4211909	MemberAccess	Opt . vacatejobs		4211733	0					
ANR	4211910	Identifier	Opt		4211733	0					
ANR	4211911	Identifier	vacatejobs		4211733	1					
ANR	4211912	PrimaryExpression	'N'		4211733	1					
ANR	4211913	CompoundStatement		31:30:970:970	4211733	1					
ANR	4211914	ExpressionStatement	"set_option ( ""WANT_VACATE"" , ""FALSE"" )"	290:3:8168:8202	4211733	0	True				
ANR	4211915	CallExpression	"set_option ( ""WANT_VACATE"" , ""FALSE"" )"		4211733	0					
ANR	4211916	Callee	set_option		4211733	0					
ANR	4211917	Identifier	set_option		4211733	0					
ANR	4211918	ArgumentList	"""WANT_VACATE"""		4211733	1					
ANR	4211919	Argument	"""WANT_VACATE"""		4211733	0					
ANR	4211920	PrimaryExpression	"""WANT_VACATE"""		4211733	0					
ANR	4211921	Argument	"""FALSE"""		4211733	1					
ANR	4211922	PrimaryExpression	"""FALSE"""		4211733	0					
ANR	4211923	ExpressionStatement	"set_option ( ""WANT_SUSPEND"" , ""TRUE"" )"	291:3:8207:8241	4211733	1	True				
ANR	4211924	CallExpression	"set_option ( ""WANT_SUSPEND"" , ""TRUE"" )"		4211733	0					
ANR	4211925	Callee	set_option		4211733	0					
ANR	4211926	Identifier	set_option		4211733	0					
ANR	4211927	ArgumentList	"""WANT_SUSPEND"""		4211733	1					
ANR	4211928	Argument	"""WANT_SUSPEND"""		4211733	0					
ANR	4211929	PrimaryExpression	"""WANT_SUSPEND"""		4211733	0					
ANR	4211930	Argument	"""TRUE"""		4211733	1					
ANR	4211931	PrimaryExpression	"""TRUE"""		4211733	0					
ANR	4211932	ElseStatement	else		4211733	0					
ANR	4211933	IfStatement	if ( Opt . vacatejobs == 'Y' )		4211733	0					
ANR	4211934	Condition	Opt . vacatejobs == 'Y'	292:13:8256:8276	4211733	0	True				
ANR	4211935	EqualityExpression	Opt . vacatejobs == 'Y'		4211733	0		==			
ANR	4211936	MemberAccess	Opt . vacatejobs		4211733	0					
ANR	4211937	Identifier	Opt		4211733	0					
ANR	4211938	Identifier	vacatejobs		4211733	1					
ANR	4211939	PrimaryExpression	'Y'		4211733	1					
ANR	4211940	CompoundStatement		34:37:1087:1087	4211733	1					
ANR	4211941	ExpressionStatement	"set_option ( ""WANT_VACATE"" , ""$(UWCS_WANT_VACATE)"" )"	293:3:8285:8333	4211733	0	True				
ANR	4211942	CallExpression	"set_option ( ""WANT_VACATE"" , ""$(UWCS_WANT_VACATE)"" )"		4211733	0					
ANR	4211943	Callee	set_option		4211733	0					
ANR	4211944	Identifier	set_option		4211733	0					
ANR	4211945	ArgumentList	"""WANT_VACATE"""		4211733	1					
ANR	4211946	Argument	"""WANT_VACATE"""		4211733	0					
ANR	4211947	PrimaryExpression	"""WANT_VACATE"""		4211733	0					
ANR	4211948	Argument	"""$(UWCS_WANT_VACATE)"""		4211733	1					
ANR	4211949	PrimaryExpression	"""$(UWCS_WANT_VACATE)"""		4211733	0					
ANR	4211950	ExpressionStatement	"set_option ( ""WANT_SUSPEND"" , ""$(UWCS_WANT_SUSPEND)"" )"	294:3:8338:8388	4211733	1	True				
ANR	4211951	CallExpression	"set_option ( ""WANT_SUSPEND"" , ""$(UWCS_WANT_SUSPEND)"" )"		4211733	0					
ANR	4211952	Callee	set_option		4211733	0					
ANR	4211953	Identifier	set_option		4211733	0					
ANR	4211954	ArgumentList	"""WANT_SUSPEND"""		4211733	1					
ANR	4211955	Argument	"""WANT_SUSPEND"""		4211733	0					
ANR	4211956	PrimaryExpression	"""WANT_SUSPEND"""		4211733	0					
ANR	4211957	Argument	"""$(UWCS_WANT_SUSPEND)"""		4211733	1					
ANR	4211958	PrimaryExpression	"""$(UWCS_WANT_SUSPEND)"""		4211733	0					
ANR	4211959	ReturnType	void		4211733	1					
ANR	4211960	Identifier	set_startdpolicy		4211733	2					
ANR	4211961	ParameterList			4211733	3					
ANR	4211962	CFGEntryNode	ENTRY		4211733		True				
ANR	4211963	CFGExitNode	EXIT		4211733		True				
ANR	4211964	Symbol	Opt		4211733						
ANR	4211965	Symbol	Opt . runjobs		4211733						
ANR	4211966	Symbol	Opt . vacatejobs		4211733						
ANR	4211967	Function	set_poolinfo	299:0:8397:8667							
ANR	4211968	FunctionDef	set_poolinfo ()		4211967	0					
ANR	4211969	CompoundStatement		300:15:8418:8667	4211967	0					
ANR	4211970	IfStatement	if ( Opt . poolname != NULL )		4211967	0					
ANR	4211971	Condition	Opt . poolname != NULL	301:6:8426:8445	4211967	0	True				
ANR	4211972	EqualityExpression	Opt . poolname != NULL		4211967	0		!=			
ANR	4211973	MemberAccess	Opt . poolname		4211967	0					
ANR	4211974	Identifier	Opt		4211967	0					
ANR	4211975	Identifier	poolname		4211967	1					
ANR	4211976	Identifier	NULL		4211967	1					
ANR	4211977	CompoundStatement		2:29:30:30	4211967	1					
ANR	4211978	ExpressionStatement	"set_option ( ""COLLECTOR_NAME"" , Opt . poolname )"	302:2:8453:8495	4211967	0	True				
ANR	4211979	CallExpression	"set_option ( ""COLLECTOR_NAME"" , Opt . poolname )"		4211967	0					
ANR	4211980	Callee	set_option		4211967	0					
ANR	4211981	Identifier	set_option		4211967	0					
ANR	4211982	ArgumentList	"""COLLECTOR_NAME"""		4211967	1					
ANR	4211983	Argument	"""COLLECTOR_NAME"""		4211967	0					
ANR	4211984	PrimaryExpression	"""COLLECTOR_NAME"""		4211967	0					
ANR	4211985	Argument	Opt . poolname		4211967	1					
ANR	4211986	MemberAccess	Opt . poolname		4211967	0					
ANR	4211987	Identifier	Opt		4211967	0					
ANR	4211988	Identifier	poolname		4211967	1					
ANR	4211989	ExpressionStatement	"set_option ( ""CONDOR_HOST"" , ""$(FULL_HOSTNAME)"" )"	303:2:8499:8544	4211967	1	True				
ANR	4211990	CallExpression	"set_option ( ""CONDOR_HOST"" , ""$(FULL_HOSTNAME)"" )"		4211967	0					
ANR	4211991	Callee	set_option		4211967	0					
ANR	4211992	Identifier	set_option		4211967	0					
ANR	4211993	ArgumentList	"""CONDOR_HOST"""		4211967	1					
ANR	4211994	Argument	"""CONDOR_HOST"""		4211967	0					
ANR	4211995	PrimaryExpression	"""CONDOR_HOST"""		4211967	0					
ANR	4211996	Argument	"""$(FULL_HOSTNAME)"""		4211967	1					
ANR	4211997	PrimaryExpression	"""$(FULL_HOSTNAME)"""		4211967	0					
ANR	4211998	IfStatement	if ( Opt . poolhostname != NULL && Opt . poolhostname [ 0 ] != '\\0' )		4211967	1					
ANR	4211999	Condition	Opt . poolhostname != NULL && Opt . poolhostname [ 0 ] != '\\0'	306:6:8556:8610	4211967	0	True				
ANR	4212000	AndExpression	Opt . poolhostname != NULL && Opt . poolhostname [ 0 ] != '\\0'		4211967	0		&&			
ANR	4212001	EqualityExpression	Opt . poolhostname != NULL		4211967	0		!=			
ANR	4212002	MemberAccess	Opt . poolhostname		4211967	0					
ANR	4212003	Identifier	Opt		4211967	0					
ANR	4212004	Identifier	poolhostname		4211967	1					
ANR	4212005	Identifier	NULL		4211967	1					
ANR	4212006	EqualityExpression	Opt . poolhostname [ 0 ] != '\\0'		4211967	1		!=			
ANR	4212007	ArrayIndexing	Opt . poolhostname [ 0 ]		4211967	0					
ANR	4212008	MemberAccess	Opt . poolhostname		4211967	0					
ANR	4212009	Identifier	Opt		4211967	0					
ANR	4212010	Identifier	poolhostname		4211967	1					
ANR	4212011	PrimaryExpression	0		4211967	1					
ANR	4212012	PrimaryExpression	'\\0'		4211967	1					
ANR	4212013	CompoundStatement		7:64:195:195	4211967	1					
ANR	4212014	ExpressionStatement	"set_option ( ""CONDOR_HOST"" , Opt . poolhostname )"	307:2:8618:8661	4211967	0	True				
ANR	4212015	CallExpression	"set_option ( ""CONDOR_HOST"" , Opt . poolhostname )"		4211967	0					
ANR	4212016	Callee	set_option		4211967	0					
ANR	4212017	Identifier	set_option		4211967	0					
ANR	4212018	ArgumentList	"""CONDOR_HOST"""		4211967	1					
ANR	4212019	Argument	"""CONDOR_HOST"""		4211967	0					
ANR	4212020	PrimaryExpression	"""CONDOR_HOST"""		4211967	0					
ANR	4212021	Argument	Opt . poolhostname		4211967	1					
ANR	4212022	MemberAccess	Opt . poolhostname		4211967	0					
ANR	4212023	Identifier	Opt		4211967	0					
ANR	4212024	Identifier	poolhostname		4211967	1					
ANR	4212025	ReturnType	void		4211967	1					
ANR	4212026	Identifier	set_poolinfo		4211967	2					
ANR	4212027	ParameterList			4211967	3					
ANR	4212028	CFGEntryNode	ENTRY		4211967		True				
ANR	4212029	CFGExitNode	EXIT		4211967		True				
ANR	4212030	Symbol	Opt		4211967						
ANR	4212031	Symbol	* Opt		4211967						
ANR	4212032	Symbol	NULL		4211967						
ANR	4212033	Symbol	Opt . poolname		4211967						
ANR	4212034	Symbol	Opt . poolhostname		4211967						
ANR	4212035	Symbol	* Opt . poolhostname		4211967						
ANR	4212036	Function	set_daemonlist	312:0:8670:9092							
ANR	4212037	FunctionDef	set_daemonlist ()		4212036	0					
ANR	4212038	CompoundStatement		313:17:8692:9092	4212036	0					
ANR	4212039	IdentifierDeclStatement	char buf [ 1024 ] ;	314:1:8695:8709	4212036	0	True				
ANR	4212040	IdentifierDecl	buf [ 1024 ]		4212036	0					
ANR	4212041	IdentifierDeclType	char [ 1024 ]		4212036	0					
ANR	4212042	Identifier	buf		4212036	1					
ANR	4212043	PrimaryExpression	1024		4212036	2					
ANR	4212044	IfStatement	if ( Opt . newpool && Opt . submitjobs && Opt . runjobs )		4212036	1					
ANR	4212045	Condition	Opt . newpool && Opt . submitjobs && Opt . runjobs	316:6:8718:8761	4212036	0	True				
ANR	4212046	AndExpression	Opt . newpool && Opt . submitjobs && Opt . runjobs		4212036	0		&&			
ANR	4212047	MemberAccess	Opt . newpool		4212036	0					
ANR	4212048	Identifier	Opt		4212036	0					
ANR	4212049	Identifier	newpool		4212036	1					
ANR	4212050	AndExpression	Opt . submitjobs && Opt . runjobs		4212036	1		&&			
ANR	4212051	MemberAccess	Opt . submitjobs		4212036	0					
ANR	4212052	Identifier	Opt		4212036	0					
ANR	4212053	Identifier	submitjobs		4212036	1					
ANR	4212054	MemberAccess	Opt . runjobs		4212036	1					
ANR	4212055	Identifier	Opt		4212036	0					
ANR	4212056	Identifier	runjobs		4212036	1					
ANR	4212057	CompoundStatement		4:53:72:72	4212036	1					
ANR	4212058	ExpressionStatement	"snprintf ( buf , 1024 , ""MASTER %s %s %s %s"" , ( Opt . newpool == 'Y' ) ? ""COLLECTOR NEGOTIATOR"" : """" , ( Opt . submitjobs == 'Y' ) ? ""SCHEDD"" : """" , ( Opt . runjobs == 'A' || Opt . runjobs == 'I' || Opt . runjobs == 'C' ) ? ""STARTD KBDD"" : """" , ( Opt . hadoop == 'Y' ) ? ""HDFS"" : """" )"	317:2:8769:9052	4212036	0	True				
ANR	4212059	CallExpression	"snprintf ( buf , 1024 , ""MASTER %s %s %s %s"" , ( Opt . newpool == 'Y' ) ? ""COLLECTOR NEGOTIATOR"" : """" , ( Opt . submitjobs == 'Y' ) ? ""SCHEDD"" : """" , ( Opt . runjobs == 'A' || Opt . runjobs == 'I' || Opt . runjobs == 'C' ) ? ""STARTD KBDD"" : """" , ( Opt . hadoop == 'Y' ) ? ""HDFS"" : """" )"		4212036	0					
ANR	4212060	Callee	snprintf		4212036	0					
ANR	4212061	Identifier	snprintf		4212036	0					
ANR	4212062	ArgumentList	buf		4212036	1					
ANR	4212063	Argument	buf		4212036	0					
ANR	4212064	Identifier	buf		4212036	0					
ANR	4212065	Argument	1024		4212036	1					
ANR	4212066	PrimaryExpression	1024		4212036	0					
ANR	4212067	Argument	"""MASTER %s %s %s %s"""		4212036	2					
ANR	4212068	PrimaryExpression	"""MASTER %s %s %s %s"""		4212036	0					
ANR	4212069	Argument	"( Opt . newpool == 'Y' ) ? ""COLLECTOR NEGOTIATOR"" : """""		4212036	3					
ANR	4212070	ConditionalExpression	"( Opt . newpool == 'Y' ) ? ""COLLECTOR NEGOTIATOR"" : """""		4212036	0					
ANR	4212071	Condition	Opt . newpool == 'Y'		4212036	0					
ANR	4212072	EqualityExpression	Opt . newpool == 'Y'		4212036	0		==			
ANR	4212073	MemberAccess	Opt . newpool		4212036	0					
ANR	4212074	Identifier	Opt		4212036	0					
ANR	4212075	Identifier	newpool		4212036	1					
ANR	4212076	PrimaryExpression	'Y'		4212036	1					
ANR	4212077	PrimaryExpression	"""COLLECTOR NEGOTIATOR"""		4212036	1					
ANR	4212078	PrimaryExpression	""""""		4212036	2					
ANR	4212079	Argument	"( Opt . submitjobs == 'Y' ) ? ""SCHEDD"" : """""		4212036	4					
ANR	4212080	ConditionalExpression	"( Opt . submitjobs == 'Y' ) ? ""SCHEDD"" : """""		4212036	0					
ANR	4212081	Condition	Opt . submitjobs == 'Y'		4212036	0					
ANR	4212082	EqualityExpression	Opt . submitjobs == 'Y'		4212036	0		==			
ANR	4212083	MemberAccess	Opt . submitjobs		4212036	0					
ANR	4212084	Identifier	Opt		4212036	0					
ANR	4212085	Identifier	submitjobs		4212036	1					
ANR	4212086	PrimaryExpression	'Y'		4212036	1					
ANR	4212087	PrimaryExpression	"""SCHEDD"""		4212036	1					
ANR	4212088	PrimaryExpression	""""""		4212036	2					
ANR	4212089	Argument	"( Opt . runjobs == 'A' || Opt . runjobs == 'I' || Opt . runjobs == 'C' ) ? ""STARTD KBDD"" : """""		4212036	5					
ANR	4212090	ConditionalExpression	"( Opt . runjobs == 'A' || Opt . runjobs == 'I' || Opt . runjobs == 'C' ) ? ""STARTD KBDD"" : """""		4212036	0					
ANR	4212091	Condition	Opt . runjobs == 'A' || Opt . runjobs == 'I' || Opt . runjobs == 'C'		4212036	0					
ANR	4212092	OrExpression	Opt . runjobs == 'A' || Opt . runjobs == 'I' || Opt . runjobs == 'C'		4212036	0		||			
ANR	4212093	EqualityExpression	Opt . runjobs == 'A'		4212036	0		==			
ANR	4212094	MemberAccess	Opt . runjobs		4212036	0					
ANR	4212095	Identifier	Opt		4212036	0					
ANR	4212096	Identifier	runjobs		4212036	1					
ANR	4212097	PrimaryExpression	'A'		4212036	1					
ANR	4212098	OrExpression	Opt . runjobs == 'I' || Opt . runjobs == 'C'		4212036	1		||			
ANR	4212099	EqualityExpression	Opt . runjobs == 'I'		4212036	0		==			
ANR	4212100	MemberAccess	Opt . runjobs		4212036	0					
ANR	4212101	Identifier	Opt		4212036	0					
ANR	4212102	Identifier	runjobs		4212036	1					
ANR	4212103	PrimaryExpression	'I'		4212036	1					
ANR	4212104	EqualityExpression	Opt . runjobs == 'C'		4212036	1		==			
ANR	4212105	MemberAccess	Opt . runjobs		4212036	0					
ANR	4212106	Identifier	Opt		4212036	0					
ANR	4212107	Identifier	runjobs		4212036	1					
ANR	4212108	PrimaryExpression	'C'		4212036	1					
ANR	4212109	PrimaryExpression	"""STARTD KBDD"""		4212036	1					
ANR	4212110	PrimaryExpression	""""""		4212036	2					
ANR	4212111	Argument	"( Opt . hadoop == 'Y' ) ? ""HDFS"" : """""		4212036	6					
ANR	4212112	ConditionalExpression	"( Opt . hadoop == 'Y' ) ? ""HDFS"" : """""		4212036	0					
ANR	4212113	Condition	Opt . hadoop == 'Y'		4212036	0					
ANR	4212114	EqualityExpression	Opt . hadoop == 'Y'		4212036	0		==			
ANR	4212115	MemberAccess	Opt . hadoop		4212036	0					
ANR	4212116	Identifier	Opt		4212036	0					
ANR	4212117	Identifier	hadoop		4212036	1					
ANR	4212118	PrimaryExpression	'Y'		4212036	1					
ANR	4212119	PrimaryExpression	"""HDFS"""		4212036	1					
ANR	4212120	PrimaryExpression	""""""		4212036	2					
ANR	4212121	ExpressionStatement	"set_option ( ""DAEMON_LIST"" , buf )"	325:2:9057:9087	4212036	1	True				
ANR	4212122	CallExpression	"set_option ( ""DAEMON_LIST"" , buf )"		4212036	0					
ANR	4212123	Callee	set_option		4212036	0					
ANR	4212124	Identifier	set_option		4212036	0					
ANR	4212125	ArgumentList	"""DAEMON_LIST"""		4212036	1					
ANR	4212126	Argument	"""DAEMON_LIST"""		4212036	0					
ANR	4212127	PrimaryExpression	"""DAEMON_LIST"""		4212036	0					
ANR	4212128	Argument	buf		4212036	1					
ANR	4212129	Identifier	buf		4212036	0					
ANR	4212130	ReturnType	void		4212036	1					
ANR	4212131	Identifier	set_daemonlist		4212036	2					
ANR	4212132	ParameterList			4212036	3					
ANR	4212133	CFGEntryNode	ENTRY		4212036		True				
ANR	4212134	CFGExitNode	EXIT		4212036		True				
ANR	4212135	Symbol	buf		4212036						
ANR	4212136	Symbol	Opt		4212036						
ANR	4212137	Symbol	Opt . hadoop		4212036						
ANR	4212138	Symbol	Opt . runjobs		4212036						
ANR	4212139	Symbol	Opt . submitjobs		4212036						
ANR	4212140	Symbol	Opt . newpool		4212036						
ANR	4212141	Function	set_hostpermissions	329:0:9095:9412							
ANR	4212142	FunctionDef	set_hostpermissions ()		4212141	0					
ANR	4212143	CompoundStatement		330:22:9122:9412	4212141	0					
ANR	4212144	IfStatement	if ( Opt . hostallowread != NULL )		4212141	0					
ANR	4212145	Condition	Opt . hostallowread != NULL	331:6:9130:9154	4212141	0	True				
ANR	4212146	EqualityExpression	Opt . hostallowread != NULL		4212141	0		!=			
ANR	4212147	MemberAccess	Opt . hostallowread		4212141	0					
ANR	4212148	Identifier	Opt		4212141	0					
ANR	4212149	Identifier	hostallowread		4212141	1					
ANR	4212150	Identifier	NULL		4212141	1					
ANR	4212151	CompoundStatement		2:34:35:35	4212141	1					
ANR	4212152	ExpressionStatement	"set_option ( ""ALLOW_READ"" , Opt . hostallowread )"	332:2:9162:9205	4212141	0	True				
ANR	4212153	CallExpression	"set_option ( ""ALLOW_READ"" , Opt . hostallowread )"		4212141	0					
ANR	4212154	Callee	set_option		4212141	0					
ANR	4212155	Identifier	set_option		4212141	0					
ANR	4212156	ArgumentList	"""ALLOW_READ"""		4212141	1					
ANR	4212157	Argument	"""ALLOW_READ"""		4212141	0					
ANR	4212158	PrimaryExpression	"""ALLOW_READ"""		4212141	0					
ANR	4212159	Argument	Opt . hostallowread		4212141	1					
ANR	4212160	MemberAccess	Opt . hostallowread		4212141	0					
ANR	4212161	Identifier	Opt		4212141	0					
ANR	4212162	Identifier	hostallowread		4212141	1					
ANR	4212163	IfStatement	if ( Opt . hostallowwrite != NULL )		4212141	1					
ANR	4212164	Condition	Opt . hostallowwrite != NULL	334:6:9216:9241	4212141	0	True				
ANR	4212165	EqualityExpression	Opt . hostallowwrite != NULL		4212141	0		!=			
ANR	4212166	MemberAccess	Opt . hostallowwrite		4212141	0					
ANR	4212167	Identifier	Opt		4212141	0					
ANR	4212168	Identifier	hostallowwrite		4212141	1					
ANR	4212169	Identifier	NULL		4212141	1					
ANR	4212170	CompoundStatement		5:35:122:122	4212141	1					
ANR	4212171	ExpressionStatement	"set_option ( ""ALLOW_WRITE"" , Opt . hostallowwrite )"	335:2:9249:9294	4212141	0	True				
ANR	4212172	CallExpression	"set_option ( ""ALLOW_WRITE"" , Opt . hostallowwrite )"		4212141	0					
ANR	4212173	Callee	set_option		4212141	0					
ANR	4212174	Identifier	set_option		4212141	0					
ANR	4212175	ArgumentList	"""ALLOW_WRITE"""		4212141	1					
ANR	4212176	Argument	"""ALLOW_WRITE"""		4212141	0					
ANR	4212177	PrimaryExpression	"""ALLOW_WRITE"""		4212141	0					
ANR	4212178	Argument	Opt . hostallowwrite		4212141	1					
ANR	4212179	MemberAccess	Opt . hostallowwrite		4212141	0					
ANR	4212180	Identifier	Opt		4212141	0					
ANR	4212181	Identifier	hostallowwrite		4212141	1					
ANR	4212182	IfStatement	if ( Opt . hostallowadministrator != NULL )		4212141	2					
ANR	4212183	Condition	Opt . hostallowadministrator != NULL	337:6:9305:9338	4212141	0	True				
ANR	4212184	EqualityExpression	Opt . hostallowadministrator != NULL		4212141	0		!=			
ANR	4212185	MemberAccess	Opt . hostallowadministrator		4212141	0					
ANR	4212186	Identifier	Opt		4212141	0					
ANR	4212187	Identifier	hostallowadministrator		4212141	1					
ANR	4212188	Identifier	NULL		4212141	1					
ANR	4212189	CompoundStatement		8:43:219:219	4212141	1					
ANR	4212190	ExpressionStatement	"set_option ( ""ALLOW_ADMINISTRATOR"" , Opt . hostallowadministrator )"	338:2:9346:9407	4212141	0	True				
ANR	4212191	CallExpression	"set_option ( ""ALLOW_ADMINISTRATOR"" , Opt . hostallowadministrator )"		4212141	0					
ANR	4212192	Callee	set_option		4212141	0					
ANR	4212193	Identifier	set_option		4212141	0					
ANR	4212194	ArgumentList	"""ALLOW_ADMINISTRATOR"""		4212141	1					
ANR	4212195	Argument	"""ALLOW_ADMINISTRATOR"""		4212141	0					
ANR	4212196	PrimaryExpression	"""ALLOW_ADMINISTRATOR"""		4212141	0					
ANR	4212197	Argument	Opt . hostallowadministrator		4212141	1					
ANR	4212198	MemberAccess	Opt . hostallowadministrator		4212141	0					
ANR	4212199	Identifier	Opt		4212141	0					
ANR	4212200	Identifier	hostallowadministrator		4212141	1					
ANR	4212201	ReturnType	void		4212141	1					
ANR	4212202	Identifier	set_hostpermissions		4212141	2					
ANR	4212203	ParameterList			4212141	3					
ANR	4212204	CFGEntryNode	ENTRY		4212141		True				
ANR	4212205	CFGExitNode	EXIT		4212141		True				
ANR	4212206	Symbol	Opt . hostallowadministrator		4212141						
ANR	4212207	Symbol	Opt		4212141						
ANR	4212208	Symbol	NULL		4212141						
ANR	4212209	Symbol	Opt . hostallowread		4212141						
ANR	4212210	Symbol	Opt . hostallowwrite		4212141						
ANR	4212211	Function	set_vmuniverse	342:0:9415:9786							
ANR	4212212	FunctionDef	set_vmuniverse ()		4212211	0					
ANR	4212213	CompoundStatement		343:17:9437:9786	4212211	0					
ANR	4212214	IfStatement	if ( Opt . enablevmuniverse == 'Y' )		4212211	0					
ANR	4212215	Condition	Opt . enablevmuniverse == 'Y'	344:6:9445:9471	4212211	0	True				
ANR	4212216	EqualityExpression	Opt . enablevmuniverse == 'Y'		4212211	0		==			
ANR	4212217	MemberAccess	Opt . enablevmuniverse		4212211	0					
ANR	4212218	Identifier	Opt		4212211	0					
ANR	4212219	Identifier	enablevmuniverse		4212211	1					
ANR	4212220	PrimaryExpression	'Y'		4212211	1					
ANR	4212221	CompoundStatement		2:36:37:37	4212211	1					
ANR	4212222	ExpressionStatement	"set_option ( ""VM_GAHP_SERVER"" , ""$(BIN)/condor_vm-gahp.exe"" )"	345:2:9479:9536	4212211	0	True				
ANR	4212223	CallExpression	"set_option ( ""VM_GAHP_SERVER"" , ""$(BIN)/condor_vm-gahp.exe"" )"		4212211	0					
ANR	4212224	Callee	set_option		4212211	0					
ANR	4212225	Identifier	set_option		4212211	0					
ANR	4212226	ArgumentList	"""VM_GAHP_SERVER"""		4212211	1					
ANR	4212227	Argument	"""VM_GAHP_SERVER"""		4212211	0					
ANR	4212228	PrimaryExpression	"""VM_GAHP_SERVER"""		4212211	0					
ANR	4212229	Argument	"""$(BIN)/condor_vm-gahp.exe"""		4212211	1					
ANR	4212230	PrimaryExpression	"""$(BIN)/condor_vm-gahp.exe"""		4212211	0					
ANR	4212231	ExpressionStatement	"set_option ( ""VM_TYPE"" , ""vmware"" )"	346:2:9540:9571	4212211	1	True				
ANR	4212232	CallExpression	"set_option ( ""VM_TYPE"" , ""vmware"" )"		4212211	0					
ANR	4212233	Callee	set_option		4212211	0					
ANR	4212234	Identifier	set_option		4212211	0					
ANR	4212235	ArgumentList	"""VM_TYPE"""		4212211	1					
ANR	4212236	Argument	"""VM_TYPE"""		4212211	0					
ANR	4212237	PrimaryExpression	"""VM_TYPE"""		4212211	0					
ANR	4212238	Argument	"""vmware"""		4212211	1					
ANR	4212239	PrimaryExpression	"""vmware"""		4212211	0					
ANR	4212240	IfStatement	if ( Opt . vmmaxnumber )		4212211	1					
ANR	4212241	Condition	Opt . vmmaxnumber	349:6:9583:9597	4212211	0	True				
ANR	4212242	MemberAccess	Opt . vmmaxnumber		4212211	0					
ANR	4212243	Identifier	Opt		4212211	0					
ANR	4212244	Identifier	vmmaxnumber		4212211	1					
ANR	4212245	CompoundStatement		7:24:163:163	4212211	1					
ANR	4212246	ExpressionStatement	"set_option ( ""VM_MAX_NUMBER"" , Opt . vmmaxnumber )"	350:2:9605:9649	4212211	0	True				
ANR	4212247	CallExpression	"set_option ( ""VM_MAX_NUMBER"" , Opt . vmmaxnumber )"		4212211	0					
ANR	4212248	Callee	set_option		4212211	0					
ANR	4212249	Identifier	set_option		4212211	0					
ANR	4212250	ArgumentList	"""VM_MAX_NUMBER"""		4212211	1					
ANR	4212251	Argument	"""VM_MAX_NUMBER"""		4212211	0					
ANR	4212252	PrimaryExpression	"""VM_MAX_NUMBER"""		4212211	0					
ANR	4212253	Argument	Opt . vmmaxnumber		4212211	1					
ANR	4212254	MemberAccess	Opt . vmmaxnumber		4212211	0					
ANR	4212255	Identifier	Opt		4212211	0					
ANR	4212256	Identifier	vmmaxnumber		4212211	1					
ANR	4212257	IfStatement	if ( 'N' == Opt . vmnetworking )		4212211	2					
ANR	4212258	Condition	'N' == Opt . vmnetworking	353:6:9661:9683	4212211	0	True				
ANR	4212259	EqualityExpression	'N' == Opt . vmnetworking		4212211	0		==			
ANR	4212260	PrimaryExpression	'N'		4212211	0					
ANR	4212261	MemberAccess	Opt . vmnetworking		4212211	1					
ANR	4212262	Identifier	Opt		4212211	0					
ANR	4212263	Identifier	vmnetworking		4212211	1					
ANR	4212264	CompoundStatement		11:32:249:249	4212211	1					
ANR	4212265	ExpressionStatement	"set_option ( ""VM_NETWORKING"" , ""FALSE"" )"	354:2:9691:9727	4212211	0	True				
ANR	4212266	CallExpression	"set_option ( ""VM_NETWORKING"" , ""FALSE"" )"		4212211	0					
ANR	4212267	Callee	set_option		4212211	0					
ANR	4212268	Identifier	set_option		4212211	0					
ANR	4212269	ArgumentList	"""VM_NETWORKING"""		4212211	1					
ANR	4212270	Argument	"""VM_NETWORKING"""		4212211	0					
ANR	4212271	PrimaryExpression	"""VM_NETWORKING"""		4212211	0					
ANR	4212272	Argument	"""FALSE"""		4212211	1					
ANR	4212273	PrimaryExpression	"""FALSE"""		4212211	0					
ANR	4212274	ElseStatement	else		4212211	0					
ANR	4212275	CompoundStatement		13:8:299:299	4212211	0					
ANR	4212276	ExpressionStatement	"set_option ( ""VM_NETWORKING"" , ""TRUE"" )"	356:2:9741:9776	4212211	0	True				
ANR	4212277	CallExpression	"set_option ( ""VM_NETWORKING"" , ""TRUE"" )"		4212211	0					
ANR	4212278	Callee	set_option		4212211	0					
ANR	4212279	Identifier	set_option		4212211	0					
ANR	4212280	ArgumentList	"""VM_NETWORKING"""		4212211	1					
ANR	4212281	Argument	"""VM_NETWORKING"""		4212211	0					
ANR	4212282	PrimaryExpression	"""VM_NETWORKING"""		4212211	0					
ANR	4212283	Argument	"""TRUE"""		4212211	1					
ANR	4212284	PrimaryExpression	"""TRUE"""		4212211	0					
ANR	4212285	ReturnType	void		4212211	1					
ANR	4212286	Identifier	set_vmuniverse		4212211	2					
ANR	4212287	ParameterList			4212211	3					
ANR	4212288	CFGEntryNode	ENTRY		4212211		True				
ANR	4212289	CFGExitNode	EXIT		4212211		True				
ANR	4212290	Symbol	Opt		4212211						
ANR	4212291	Symbol	Opt . vmnetworking		4212211						
ANR	4212292	Symbol	Opt . enablevmuniverse		4212211						
ANR	4212293	Symbol	Opt . vmmaxnumber		4212211						
ANR	4212294	Function	set_hdfs	361:0:9789:10397							
ANR	4212295	FunctionDef	set_hdfs ()		4212294	0					
ANR	4212296	CompoundStatement		361:16:9805:10397	4212294	0					
ANR	4212297	IdentifierDeclStatement	char buf [ MAX_PATH ] ;	362:1:9808:9826	4212294	0	True				
ANR	4212298	IdentifierDecl	buf [ MAX_PATH ]		4212294	0					
ANR	4212299	IdentifierDeclType	char [ MAX_PATH ]		4212294	0					
ANR	4212300	Identifier	buf		4212294	1					
ANR	4212301	Identifier	MAX_PATH		4212294	2					
ANR	4212302	IfStatement	if ( Opt . namedata )		4212294	1					
ANR	4212303	Condition	Opt . namedata	363:6:9834:9845	4212294	0	True				
ANR	4212304	MemberAccess	Opt . namedata		4212294	0					
ANR	4212305	Identifier	Opt		4212294	0					
ANR	4212306	Identifier	namedata		4212294	1					
ANR	4212307	CompoundStatement		3:21:43:43	4212294	1					
ANR	4212308	ExpressionStatement	"set_option ( ""HDFS_SERVICES"" , Opt . namedata )"	364:2:9853:9894	4212294	0	True				
ANR	4212309	CallExpression	"set_option ( ""HDFS_SERVICES"" , Opt . namedata )"		4212294	0					
ANR	4212310	Callee	set_option		4212294	0					
ANR	4212311	Identifier	set_option		4212294	0					
ANR	4212312	ArgumentList	"""HDFS_SERVICES"""		4212294	1					
ANR	4212313	Argument	"""HDFS_SERVICES"""		4212294	0					
ANR	4212314	PrimaryExpression	"""HDFS_SERVICES"""		4212294	0					
ANR	4212315	Argument	Opt . namedata		4212294	1					
ANR	4212316	MemberAccess	Opt . namedata		4212294	0					
ANR	4212317	Identifier	Opt		4212294	0					
ANR	4212318	Identifier	namedata		4212294	1					
ANR	4212319	ExpressionStatement	"set_option ( ""HDFS_NAMENODE_DIR"" , ""$(RELEASE_DIR)/HDFS/hadoop_name"" )"	365:2:9898:9964	4212294	1	True				
ANR	4212320	CallExpression	"set_option ( ""HDFS_NAMENODE_DIR"" , ""$(RELEASE_DIR)/HDFS/hadoop_name"" )"		4212294	0					
ANR	4212321	Callee	set_option		4212294	0					
ANR	4212322	Identifier	set_option		4212294	0					
ANR	4212323	ArgumentList	"""HDFS_NAMENODE_DIR"""		4212294	1					
ANR	4212324	Argument	"""HDFS_NAMENODE_DIR"""		4212294	0					
ANR	4212325	PrimaryExpression	"""HDFS_NAMENODE_DIR"""		4212294	0					
ANR	4212326	Argument	"""$(RELEASE_DIR)/HDFS/hadoop_name"""		4212294	1					
ANR	4212327	PrimaryExpression	"""$(RELEASE_DIR)/HDFS/hadoop_name"""		4212294	0					
ANR	4212328	ExpressionStatement	"set_option ( ""HDFS_DATANODE_DIR"" , ""$(RELEASE_DIR)/HDFS/hadoop_data"" )"	366:2:9968:10034	4212294	2	True				
ANR	4212329	CallExpression	"set_option ( ""HDFS_DATANODE_DIR"" , ""$(RELEASE_DIR)/HDFS/hadoop_data"" )"		4212294	0					
ANR	4212330	Callee	set_option		4212294	0					
ANR	4212331	Identifier	set_option		4212294	0					
ANR	4212332	ArgumentList	"""HDFS_DATANODE_DIR"""		4212294	1					
ANR	4212333	Argument	"""HDFS_DATANODE_DIR"""		4212294	0					
ANR	4212334	PrimaryExpression	"""HDFS_DATANODE_DIR"""		4212294	0					
ANR	4212335	Argument	"""$(RELEASE_DIR)/HDFS/hadoop_data"""		4212294	1					
ANR	4212336	PrimaryExpression	"""$(RELEASE_DIR)/HDFS/hadoop_data"""		4212294	0					
ANR	4212337	ExpressionStatement	"set_option ( ""HDFS_HOME"" , ""$(RELEASE_DIR)/HDFS"" )"	367:2:10038:10084	4212294	3	True				
ANR	4212338	CallExpression	"set_option ( ""HDFS_HOME"" , ""$(RELEASE_DIR)/HDFS"" )"		4212294	0					
ANR	4212339	Callee	set_option		4212294	0					
ANR	4212340	Identifier	set_option		4212294	0					
ANR	4212341	ArgumentList	"""HDFS_HOME"""		4212294	1					
ANR	4212342	Argument	"""HDFS_HOME"""		4212294	0					
ANR	4212343	PrimaryExpression	"""HDFS_HOME"""		4212294	0					
ANR	4212344	Argument	"""$(RELEASE_DIR)/HDFS"""		4212294	1					
ANR	4212345	PrimaryExpression	"""$(RELEASE_DIR)/HDFS"""		4212294	0					
ANR	4212346	IfStatement	if ( Opt . namenode && Opt . nameport )		4212294	2					
ANR	4212347	Condition	Opt . namenode && Opt . nameport	370:6:10096:10123	4212294	0	True				
ANR	4212348	AndExpression	Opt . namenode && Opt . nameport		4212294	0		&&			
ANR	4212349	MemberAccess	Opt . namenode		4212294	0					
ANR	4212350	Identifier	Opt		4212294	0					
ANR	4212351	Identifier	namenode		4212294	1					
ANR	4212352	MemberAccess	Opt . nameport		4212294	1					
ANR	4212353	Identifier	Opt		4212294	0					
ANR	4212354	Identifier	nameport		4212294	1					
ANR	4212355	CompoundStatement		10:37:321:321	4212294	1					
ANR	4212356	ExpressionStatement	"snprintf ( buf , MAX_PATH , ""%s%s%s"" , Opt . namenode , "":"" , Opt . nameport )"	371:2:10131:10197	4212294	0	True				
ANR	4212357	CallExpression	"snprintf ( buf , MAX_PATH , ""%s%s%s"" , Opt . namenode , "":"" , Opt . nameport )"		4212294	0					
ANR	4212358	Callee	snprintf		4212294	0					
ANR	4212359	Identifier	snprintf		4212294	0					
ANR	4212360	ArgumentList	buf		4212294	1					
ANR	4212361	Argument	buf		4212294	0					
ANR	4212362	Identifier	buf		4212294	0					
ANR	4212363	Argument	MAX_PATH		4212294	1					
ANR	4212364	Identifier	MAX_PATH		4212294	0					
ANR	4212365	Argument	"""%s%s%s"""		4212294	2					
ANR	4212366	PrimaryExpression	"""%s%s%s"""		4212294	0					
ANR	4212367	Argument	Opt . namenode		4212294	3					
ANR	4212368	MemberAccess	Opt . namenode		4212294	0					
ANR	4212369	Identifier	Opt		4212294	0					
ANR	4212370	Identifier	namenode		4212294	1					
ANR	4212371	Argument	""":"""		4212294	4					
ANR	4212372	PrimaryExpression	""":"""		4212294	0					
ANR	4212373	Argument	Opt . nameport		4212294	5					
ANR	4212374	MemberAccess	Opt . nameport		4212294	0					
ANR	4212375	Identifier	Opt		4212294	0					
ANR	4212376	Identifier	nameport		4212294	1					
ANR	4212377	ExpressionStatement	"set_option ( ""HDFS_NAMENODE"" , buf )"	372:2:10201:10233	4212294	1	True				
ANR	4212378	CallExpression	"set_option ( ""HDFS_NAMENODE"" , buf )"		4212294	0					
ANR	4212379	Callee	set_option		4212294	0					
ANR	4212380	Identifier	set_option		4212294	0					
ANR	4212381	ArgumentList	"""HDFS_NAMENODE"""		4212294	1					
ANR	4212382	Argument	"""HDFS_NAMENODE"""		4212294	0					
ANR	4212383	PrimaryExpression	"""HDFS_NAMENODE"""		4212294	0					
ANR	4212384	Argument	buf		4212294	1					
ANR	4212385	Identifier	buf		4212294	0					
ANR	4212386	IfStatement	if ( Opt . namenode && Opt . namewebport )		4212294	3					
ANR	4212387	Condition	Opt . namenode && Opt . namewebport	375:6:10245:10275	4212294	0	True				
ANR	4212388	AndExpression	Opt . namenode && Opt . namewebport		4212294	0		&&			
ANR	4212389	MemberAccess	Opt . namenode		4212294	0					
ANR	4212390	Identifier	Opt		4212294	0					
ANR	4212391	Identifier	namenode		4212294	1					
ANR	4212392	MemberAccess	Opt . namewebport		4212294	1					
ANR	4212393	Identifier	Opt		4212294	0					
ANR	4212394	Identifier	namewebport		4212294	1					
ANR	4212395	CompoundStatement		15:40:473:473	4212294	1					
ANR	4212396	ExpressionStatement	"snprintf ( buf , MAX_PATH , ""%s%s%s"" , Opt . namenode , "":"" , Opt . namewebport )"	376:2:10283:10352	4212294	0	True				
ANR	4212397	CallExpression	"snprintf ( buf , MAX_PATH , ""%s%s%s"" , Opt . namenode , "":"" , Opt . namewebport )"		4212294	0					
ANR	4212398	Callee	snprintf		4212294	0					
ANR	4212399	Identifier	snprintf		4212294	0					
ANR	4212400	ArgumentList	buf		4212294	1					
ANR	4212401	Argument	buf		4212294	0					
ANR	4212402	Identifier	buf		4212294	0					
ANR	4212403	Argument	MAX_PATH		4212294	1					
ANR	4212404	Identifier	MAX_PATH		4212294	0					
ANR	4212405	Argument	"""%s%s%s"""		4212294	2					
ANR	4212406	PrimaryExpression	"""%s%s%s"""		4212294	0					
ANR	4212407	Argument	Opt . namenode		4212294	3					
ANR	4212408	MemberAccess	Opt . namenode		4212294	0					
ANR	4212409	Identifier	Opt		4212294	0					
ANR	4212410	Identifier	namenode		4212294	1					
ANR	4212411	Argument	""":"""		4212294	4					
ANR	4212412	PrimaryExpression	""":"""		4212294	0					
ANR	4212413	Argument	Opt . namewebport		4212294	5					
ANR	4212414	MemberAccess	Opt . namewebport		4212294	0					
ANR	4212415	Identifier	Opt		4212294	0					
ANR	4212416	Identifier	namewebport		4212294	1					
ANR	4212417	ExpressionStatement	"set_option ( ""HDFS_NAMENODE_WEB"" , buf )"	377:2:10356:10392	4212294	1	True				
ANR	4212418	CallExpression	"set_option ( ""HDFS_NAMENODE_WEB"" , buf )"		4212294	0					
ANR	4212419	Callee	set_option		4212294	0					
ANR	4212420	Identifier	set_option		4212294	0					
ANR	4212421	ArgumentList	"""HDFS_NAMENODE_WEB"""		4212294	1					
ANR	4212422	Argument	"""HDFS_NAMENODE_WEB"""		4212294	0					
ANR	4212423	PrimaryExpression	"""HDFS_NAMENODE_WEB"""		4212294	0					
ANR	4212424	Argument	buf		4212294	1					
ANR	4212425	Identifier	buf		4212294	0					
ANR	4212426	ReturnType	void		4212294	1					
ANR	4212427	Identifier	set_hdfs		4212294	2					
ANR	4212428	ParameterList			4212294	3					
ANR	4212429	CFGEntryNode	ENTRY		4212294		True				
ANR	4212430	CFGExitNode	EXIT		4212294		True				
ANR	4212431	Symbol	Opt . nameport		4212294						
ANR	4212432	Symbol	Opt . namedata		4212294						
ANR	4212433	Symbol	buf		4212294						
ANR	4212434	Symbol	Opt		4212294						
ANR	4212435	Symbol	Opt . namenode		4212294						
ANR	4212436	Symbol	Opt . namewebport		4212294						
ANR	4212437	Symbol	MAX_PATH		4212294						
ANR	4212438	Function	parse_args	381:0:10400:14222							
ANR	4212439	FunctionDef	"parse_args (int argc , char * * argv)"		4212438	0					
ANR	4212440	CompoundStatement		382:34:10440:14222	4212438	0					
ANR	4212441	IdentifierDeclStatement	"int i , option_index ;"	384:1:10444:10463	4212438	0	True				
ANR	4212442	IdentifierDecl	i		4212438	0					
ANR	4212443	IdentifierDeclType	int		4212438	0					
ANR	4212444	Identifier	i		4212438	1					
ANR	4212445	IdentifierDecl	option_index		4212438	1					
ANR	4212446	IdentifierDeclType	int		4212438	0					
ANR	4212447	Identifier	option_index		4212438	1					
ANR	4212448	IfStatement	if ( argc < 2 )		4212438	1					
ANR	4212449	Condition	argc < 2	385:6:10471:10478	4212438	0	True				
ANR	4212450	RelationalExpression	argc < 2		4212438	0		<			
ANR	4212451	Identifier	argc		4212438	0					
ANR	4212452	PrimaryExpression	2		4212438	1					
ANR	4212453	CompoundStatement		4:17:41:41	4212438	1					
ANR	4212454	ExpressionStatement	Usage ( )	386:2:10486:10493	4212438	0	True				
ANR	4212455	CallExpression	Usage ( )		4212438	0					
ANR	4212456	Callee	Usage		4212438	0					
ANR	4212457	Identifier	Usage		4212438	0					
ANR	4212458	ArgumentList			4212438	1					
ANR	4212459	WhileStatement	"while ( ( i = my_getopt_long ( argc , argv , short_options , long_options , & option_index ) ) > 0 )"		4212438	2					
ANR	4212460	Condition	"( i = my_getopt_long ( argc , argv , short_options , long_options , & option_index ) ) > 0"	388:9:10507:10591	4212438	0	True				
ANR	4212461	RelationalExpression	"( i = my_getopt_long ( argc , argv , short_options , long_options , & option_index ) ) > 0"		4212438	0		>			
ANR	4212462	AssignmentExpression	"i = my_getopt_long ( argc , argv , short_options , long_options , & option_index )"		4212438	0		=			
ANR	4212463	Identifier	i		4212438	0					
ANR	4212464	CallExpression	"my_getopt_long ( argc , argv , short_options , long_options , & option_index )"		4212438	1					
ANR	4212465	Callee	my_getopt_long		4212438	0					
ANR	4212466	Identifier	my_getopt_long		4212438	0					
ANR	4212467	ArgumentList	argc		4212438	1					
ANR	4212468	Argument	argc		4212438	0					
ANR	4212469	Identifier	argc		4212438	0					
ANR	4212470	Argument	argv		4212438	1					
ANR	4212471	Identifier	argv		4212438	0					
ANR	4212472	Argument	short_options		4212438	2					
ANR	4212473	Identifier	short_options		4212438	0					
ANR	4212474	Argument	long_options		4212438	3					
ANR	4212475	Identifier	long_options		4212438	0					
ANR	4212476	Argument	& option_index		4212438	4					
ANR	4212477	UnaryOperationExpression	& option_index		4212438	0					
ANR	4212478	UnaryOperator	&		4212438	0					
ANR	4212479	Identifier	option_index		4212438	1					
ANR	4212480	PrimaryExpression	0		4212438	1					
ANR	4212481	CompoundStatement		8:41:154:154	4212438	1					
ANR	4212482	SwitchStatement	switch ( i )		4212438	0					
ANR	4212483	Condition	i	391:9:10607:10607	4212438	0	True				
ANR	4212484	Identifier	i		4212438	0					
ANR	4212485	CompoundStatement		10:12:169:169	4212438	1					
ANR	4212486	Label	case 'a' :	392:3:10615:10623	4212438	0	True				
ANR	4212487	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	1					
ANR	4212488	Condition	! isempty ( my_optarg )	393:8:10633:10651	4212438	0	True				
ANR	4212489	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4212490	UnaryOperator	!		4212438	0					
ANR	4212491	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4212492	Callee	isempty		4212438	0					
ANR	4212493	Identifier	isempty		4212438	0					
ANR	4212494	ArgumentList	my_optarg		4212438	1					
ANR	4212495	Argument	my_optarg		4212438	0					
ANR	4212496	Identifier	my_optarg		4212438	0					
ANR	4212497	CompoundStatement		12:29:213:213	4212438	1					
ANR	4212498	ExpressionStatement	Opt . accountingdomain = strdup ( my_optarg )	394:5:10661:10701	4212438	0	True				
ANR	4212499	AssignmentExpression	Opt . accountingdomain = strdup ( my_optarg )		4212438	0		=			
ANR	4212500	MemberAccess	Opt . accountingdomain		4212438	0					
ANR	4212501	Identifier	Opt		4212438	0					
ANR	4212502	Identifier	accountingdomain		4212438	1					
ANR	4212503	CallExpression	strdup ( my_optarg )		4212438	1					
ANR	4212504	Callee	strdup		4212438	0					
ANR	4212505	Identifier	strdup		4212438	0					
ANR	4212506	ArgumentList	my_optarg		4212438	1					
ANR	4212507	Argument	my_optarg		4212438	0					
ANR	4212508	Identifier	my_optarg		4212438	0					
ANR	4212509	BreakStatement	break ;	396:3:10712:10717	4212438	2	True				
ANR	4212510	Label	case 'c' :	397:3:10722:10730	4212438	3	True				
ANR	4212511	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	4					
ANR	4212512	Condition	! isempty ( my_optarg )	398:8:10740:10758	4212438	0	True				
ANR	4212513	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4212514	UnaryOperator	!		4212438	0					
ANR	4212515	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4212516	Callee	isempty		4212438	0					
ANR	4212517	Identifier	isempty		4212438	0					
ANR	4212518	ArgumentList	my_optarg		4212438	1					
ANR	4212519	Argument	my_optarg		4212438	0					
ANR	4212520	Identifier	my_optarg		4212438	0					
ANR	4212521	CompoundStatement		17:29:320:320	4212438	1					
ANR	4212522	ExpressionStatement	Opt . condoremail = strdup ( my_optarg )	399:5:10768:10803	4212438	0	True				
ANR	4212523	AssignmentExpression	Opt . condoremail = strdup ( my_optarg )		4212438	0		=			
ANR	4212524	MemberAccess	Opt . condoremail		4212438	0					
ANR	4212525	Identifier	Opt		4212438	0					
ANR	4212526	Identifier	condoremail		4212438	1					
ANR	4212527	CallExpression	strdup ( my_optarg )		4212438	1					
ANR	4212528	Callee	strdup		4212438	0					
ANR	4212529	Identifier	strdup		4212438	0					
ANR	4212530	ArgumentList	my_optarg		4212438	1					
ANR	4212531	Argument	my_optarg		4212438	0					
ANR	4212532	Identifier	my_optarg		4212438	0					
ANR	4212533	BreakStatement	break ;	401:3:10814:10819	4212438	5	True				
ANR	4212534	Label	case 'e' :	403:3:10825:10833	4212438	6	True				
ANR	4212535	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	7					
ANR	4212536	Condition	! isempty ( my_optarg )	404:8:10843:10861	4212438	0	True				
ANR	4212537	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4212538	UnaryOperator	!		4212438	0					
ANR	4212539	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4212540	Callee	isempty		4212438	0					
ANR	4212541	Identifier	isempty		4212438	0					
ANR	4212542	ArgumentList	my_optarg		4212438	1					
ANR	4212543	Argument	my_optarg		4212438	0					
ANR	4212544	Identifier	my_optarg		4212438	0					
ANR	4212545	CompoundStatement		23:29:423:423	4212438	1					
ANR	4212546	ExpressionStatement	Opt . hostallowread = strdup ( my_optarg )	405:5:10871:10908	4212438	0	True				
ANR	4212547	AssignmentExpression	Opt . hostallowread = strdup ( my_optarg )		4212438	0		=			
ANR	4212548	MemberAccess	Opt . hostallowread		4212438	0					
ANR	4212549	Identifier	Opt		4212438	0					
ANR	4212550	Identifier	hostallowread		4212438	1					
ANR	4212551	CallExpression	strdup ( my_optarg )		4212438	1					
ANR	4212552	Callee	strdup		4212438	0					
ANR	4212553	Identifier	strdup		4212438	0					
ANR	4212554	ArgumentList	my_optarg		4212438	1					
ANR	4212555	Argument	my_optarg		4212438	0					
ANR	4212556	Identifier	my_optarg		4212438	0					
ANR	4212557	BreakStatement	break ;	407:3:10919:10924	4212438	8	True				
ANR	4212558	Label	case 't' :	409:3:10930:10938	4212438	9	True				
ANR	4212559	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	10					
ANR	4212560	Condition	! isempty ( my_optarg )	410:8:10948:10966	4212438	0	True				
ANR	4212561	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4212562	UnaryOperator	!		4212438	0					
ANR	4212563	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4212564	Callee	isempty		4212438	0					
ANR	4212565	Identifier	isempty		4212438	0					
ANR	4212566	ArgumentList	my_optarg		4212438	1					
ANR	4212567	Argument	my_optarg		4212438	0					
ANR	4212568	Identifier	my_optarg		4212438	0					
ANR	4212569	CompoundStatement		29:29:528:528	4212438	1					
ANR	4212570	ExpressionStatement	Opt . hostallowwrite = strdup ( my_optarg )	411:5:10976:11014	4212438	0	True				
ANR	4212571	AssignmentExpression	Opt . hostallowwrite = strdup ( my_optarg )		4212438	0		=			
ANR	4212572	MemberAccess	Opt . hostallowwrite		4212438	0					
ANR	4212573	Identifier	Opt		4212438	0					
ANR	4212574	Identifier	hostallowwrite		4212438	1					
ANR	4212575	CallExpression	strdup ( my_optarg )		4212438	1					
ANR	4212576	Callee	strdup		4212438	0					
ANR	4212577	Identifier	strdup		4212438	0					
ANR	4212578	ArgumentList	my_optarg		4212438	1					
ANR	4212579	Argument	my_optarg		4212438	0					
ANR	4212580	Identifier	my_optarg		4212438	0					
ANR	4212581	BreakStatement	break ;	413:3:11025:11030	4212438	11	True				
ANR	4212582	Label	case 'i' :	415:3:11036:11044	4212438	12	True				
ANR	4212583	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	13					
ANR	4212584	Condition	! isempty ( my_optarg )	416:8:11054:11072	4212438	0	True				
ANR	4212585	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4212586	UnaryOperator	!		4212438	0					
ANR	4212587	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4212588	Callee	isempty		4212438	0					
ANR	4212589	Identifier	isempty		4212438	0					
ANR	4212590	ArgumentList	my_optarg		4212438	1					
ANR	4212591	Argument	my_optarg		4212438	0					
ANR	4212592	Identifier	my_optarg		4212438	0					
ANR	4212593	CompoundStatement		35:29:634:634	4212438	1					
ANR	4212594	ExpressionStatement	Opt . hostallowadministrator = strdup ( my_optarg )	417:5:11082:11128	4212438	0	True				
ANR	4212595	AssignmentExpression	Opt . hostallowadministrator = strdup ( my_optarg )		4212438	0		=			
ANR	4212596	MemberAccess	Opt . hostallowadministrator		4212438	0					
ANR	4212597	Identifier	Opt		4212438	0					
ANR	4212598	Identifier	hostallowadministrator		4212438	1					
ANR	4212599	CallExpression	strdup ( my_optarg )		4212438	1					
ANR	4212600	Callee	strdup		4212438	0					
ANR	4212601	Identifier	strdup		4212438	0					
ANR	4212602	ArgumentList	my_optarg		4212438	1					
ANR	4212603	Argument	my_optarg		4212438	0					
ANR	4212604	Identifier	my_optarg		4212438	0					
ANR	4212605	BreakStatement	break ;	419:3:11139:11144	4212438	14	True				
ANR	4212606	Label	case 'j' :	421:3:11150:11158	4212438	15	True				
ANR	4212607	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	16					
ANR	4212608	Condition	! isempty ( my_optarg )	422:8:11168:11186	4212438	0	True				
ANR	4212609	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4212610	UnaryOperator	!		4212438	0					
ANR	4212611	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4212612	Callee	isempty		4212438	0					
ANR	4212613	Identifier	isempty		4212438	0					
ANR	4212614	ArgumentList	my_optarg		4212438	1					
ANR	4212615	Argument	my_optarg		4212438	0					
ANR	4212616	Identifier	my_optarg		4212438	0					
ANR	4212617	CompoundStatement		41:29:748:748	4212438	1					
ANR	4212618	ExpressionStatement	Opt . jvmlocation = get_short_path_name ( my_optarg )	423:5:11196:11244	4212438	0	True				
ANR	4212619	AssignmentExpression	Opt . jvmlocation = get_short_path_name ( my_optarg )		4212438	0		=			
ANR	4212620	MemberAccess	Opt . jvmlocation		4212438	0					
ANR	4212621	Identifier	Opt		4212438	0					
ANR	4212622	Identifier	jvmlocation		4212438	1					
ANR	4212623	CallExpression	get_short_path_name ( my_optarg )		4212438	1					
ANR	4212624	Callee	get_short_path_name		4212438	0					
ANR	4212625	Identifier	get_short_path_name		4212438	0					
ANR	4212626	ArgumentList	my_optarg		4212438	1					
ANR	4212627	Argument	my_optarg		4212438	0					
ANR	4212628	Identifier	my_optarg		4212438	0					
ANR	4212629	BreakStatement	break ;	425:3:11255:11260	4212438	17	True				
ANR	4212630	Label	case 'l' :	427:3:11266:11274	4212438	18	True				
ANR	4212631	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	19					
ANR	4212632	Condition	! isempty ( my_optarg )	428:8:11284:11302	4212438	0	True				
ANR	4212633	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4212634	UnaryOperator	!		4212438	0					
ANR	4212635	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4212636	Callee	isempty		4212438	0					
ANR	4212637	Identifier	isempty		4212438	0					
ANR	4212638	ArgumentList	my_optarg		4212438	1					
ANR	4212639	Argument	my_optarg		4212438	0					
ANR	4212640	Identifier	my_optarg		4212438	0					
ANR	4212641	CompoundStatement		47:29:864:864	4212438	1					
ANR	4212642	ExpressionStatement	Opt . perllocation = get_short_path_name ( my_optarg )	429:5:11312:11361	4212438	0	True				
ANR	4212643	AssignmentExpression	Opt . perllocation = get_short_path_name ( my_optarg )		4212438	0		=			
ANR	4212644	MemberAccess	Opt . perllocation		4212438	0					
ANR	4212645	Identifier	Opt		4212438	0					
ANR	4212646	Identifier	perllocation		4212438	1					
ANR	4212647	CallExpression	get_short_path_name ( my_optarg )		4212438	1					
ANR	4212648	Callee	get_short_path_name		4212438	0					
ANR	4212649	Identifier	get_short_path_name		4212438	0					
ANR	4212650	ArgumentList	my_optarg		4212438	1					
ANR	4212651	Argument	my_optarg		4212438	0					
ANR	4212652	Identifier	my_optarg		4212438	0					
ANR	4212653	BreakStatement	break ;	431:3:11372:11377	4212438	20	True				
ANR	4212654	Label	case 'n' :	433:3:11383:11391	4212438	21	True				
ANR	4212655	IfStatement	if ( my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' ) )		4212438	22					
ANR	4212656	Condition	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )	434:9:11403:11459	4212438	0	True				
ANR	4212657	AndExpression	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )		4212438	0		&&			
ANR	4212658	Identifier	my_optarg		4212438	0					
ANR	4212659	OrExpression	my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n'		4212438	1		||			
ANR	4212660	EqualityExpression	my_optarg [ 0 ] == 'N'		4212438	0		==			
ANR	4212661	ArrayIndexing	my_optarg [ 0 ]		4212438	0					
ANR	4212662	Identifier	my_optarg		4212438	0					
ANR	4212663	PrimaryExpression	0		4212438	1					
ANR	4212664	PrimaryExpression	'N'		4212438	1					
ANR	4212665	EqualityExpression	my_optarg [ 0 ] == 'n'		4212438	1		==			
ANR	4212666	ArrayIndexing	my_optarg [ 0 ]		4212438	0					
ANR	4212667	Identifier	my_optarg		4212438	0					
ANR	4212668	PrimaryExpression	0		4212438	1					
ANR	4212669	PrimaryExpression	'n'		4212438	1					
ANR	4212670	CompoundStatement		53:69:1022:1022	4212438	1					
ANR	4212671	ExpressionStatement	Opt . newpool = 'N'	435:5:11470:11487	4212438	0	True				
ANR	4212672	AssignmentExpression	Opt . newpool = 'N'		4212438	0		=			
ANR	4212673	MemberAccess	Opt . newpool		4212438	0					
ANR	4212674	Identifier	Opt		4212438	0					
ANR	4212675	Identifier	newpool		4212438	1					
ANR	4212676	PrimaryExpression	'N'		4212438	1					
ANR	4212677	ElseStatement	else		4212438	0					
ANR	4212678	CompoundStatement		55:11:1059:1059	4212438	0					
ANR	4212679	ExpressionStatement	Opt . newpool = 'Y'	437:5:11507:11524	4212438	0	True				
ANR	4212680	AssignmentExpression	Opt . newpool = 'Y'		4212438	0		=			
ANR	4212681	MemberAccess	Opt . newpool		4212438	0					
ANR	4212682	Identifier	Opt		4212438	0					
ANR	4212683	Identifier	newpool		4212438	1					
ANR	4212684	PrimaryExpression	'Y'		4212438	1					
ANR	4212685	BreakStatement	break ;	439:3:11535:11540	4212438	23	True				
ANR	4212686	Label	case 'd' :	441:3:11549:11557	4212438	24	True				
ANR	4212687	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	25					
ANR	4212688	Condition	! isempty ( my_optarg )	442:8:11567:11585	4212438	0	True				
ANR	4212689	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4212690	UnaryOperator	!		4212438	0					
ANR	4212691	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4212692	Callee	isempty		4212438	0					
ANR	4212693	Identifier	isempty		4212438	0					
ANR	4212694	ArgumentList	my_optarg		4212438	1					
ANR	4212695	Argument	my_optarg		4212438	0					
ANR	4212696	Identifier	my_optarg		4212438	0					
ANR	4212697	CompoundStatement		61:29:1147:1147	4212438	1					
ANR	4212698	ExpressionStatement	Opt . release_dir = get_short_path_name ( my_optarg )	443:5:11595:11643	4212438	0	True				
ANR	4212699	AssignmentExpression	Opt . release_dir = get_short_path_name ( my_optarg )		4212438	0		=			
ANR	4212700	MemberAccess	Opt . release_dir		4212438	0					
ANR	4212701	Identifier	Opt		4212438	0					
ANR	4212702	Identifier	release_dir		4212438	1					
ANR	4212703	CallExpression	get_short_path_name ( my_optarg )		4212438	1					
ANR	4212704	Callee	get_short_path_name		4212438	0					
ANR	4212705	Identifier	get_short_path_name		4212438	0					
ANR	4212706	ArgumentList	my_optarg		4212438	1					
ANR	4212707	Argument	my_optarg		4212438	0					
ANR	4212708	Identifier	my_optarg		4212438	0					
ANR	4212709	BreakStatement	break ;	445:3:11654:11659	4212438	26	True				
ANR	4212710	Label	case 'p' :	447:3:11665:11673	4212438	27	True				
ANR	4212711	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	28					
ANR	4212712	Condition	! isempty ( my_optarg )	448:8:11683:11701	4212438	0	True				
ANR	4212713	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4212714	UnaryOperator	!		4212438	0					
ANR	4212715	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4212716	Callee	isempty		4212438	0					
ANR	4212717	Identifier	isempty		4212438	0					
ANR	4212718	ArgumentList	my_optarg		4212438	1					
ANR	4212719	Argument	my_optarg		4212438	0					
ANR	4212720	Identifier	my_optarg		4212438	0					
ANR	4212721	CompoundStatement		67:29:1263:1263	4212438	1					
ANR	4212722	ExpressionStatement	Opt . poolname = strdup ( my_optarg )	449:5:11711:11743	4212438	0	True				
ANR	4212723	AssignmentExpression	Opt . poolname = strdup ( my_optarg )		4212438	0		=			
ANR	4212724	MemberAccess	Opt . poolname		4212438	0					
ANR	4212725	Identifier	Opt		4212438	0					
ANR	4212726	Identifier	poolname		4212438	1					
ANR	4212727	CallExpression	strdup ( my_optarg )		4212438	1					
ANR	4212728	Callee	strdup		4212438	0					
ANR	4212729	Identifier	strdup		4212438	0					
ANR	4212730	ArgumentList	my_optarg		4212438	1					
ANR	4212731	Argument	my_optarg		4212438	0					
ANR	4212732	Identifier	my_optarg		4212438	0					
ANR	4212733	BreakStatement	break ;	451:3:11754:11759	4212438	29	True				
ANR	4212734	Label	case 'o' :	453:3:11765:11773	4212438	30	True				
ANR	4212735	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	31					
ANR	4212736	Condition	! isempty ( my_optarg )	454:8:11783:11801	4212438	0	True				
ANR	4212737	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4212738	UnaryOperator	!		4212438	0					
ANR	4212739	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4212740	Callee	isempty		4212438	0					
ANR	4212741	Identifier	isempty		4212438	0					
ANR	4212742	ArgumentList	my_optarg		4212438	1					
ANR	4212743	Argument	my_optarg		4212438	0					
ANR	4212744	Identifier	my_optarg		4212438	0					
ANR	4212745	CompoundStatement		73:29:1363:1363	4212438	1					
ANR	4212746	ExpressionStatement	Opt . poolhostname = strdup ( my_optarg )	455:5:11811:11847	4212438	0	True				
ANR	4212747	AssignmentExpression	Opt . poolhostname = strdup ( my_optarg )		4212438	0		=			
ANR	4212748	MemberAccess	Opt . poolhostname		4212438	0					
ANR	4212749	Identifier	Opt		4212438	0					
ANR	4212750	Identifier	poolhostname		4212438	1					
ANR	4212751	CallExpression	strdup ( my_optarg )		4212438	1					
ANR	4212752	Callee	strdup		4212438	0					
ANR	4212753	Identifier	strdup		4212438	0					
ANR	4212754	ArgumentList	my_optarg		4212438	1					
ANR	4212755	Argument	my_optarg		4212438	0					
ANR	4212756	Identifier	my_optarg		4212438	0					
ANR	4212757	BreakStatement	break ;	457:3:11858:11863	4212438	32	True				
ANR	4212758	Label	case 'r' :	459:3:11872:11880	4212438	33	True				
ANR	4212759	ExpressionStatement	Opt . runjobs = toupper ( my_optarg [ 0 ] )	460:4:11886:11921	4212438	34	True				
ANR	4212760	AssignmentExpression	Opt . runjobs = toupper ( my_optarg [ 0 ] )		4212438	0		=			
ANR	4212761	MemberAccess	Opt . runjobs		4212438	0					
ANR	4212762	Identifier	Opt		4212438	0					
ANR	4212763	Identifier	runjobs		4212438	1					
ANR	4212764	CallExpression	toupper ( my_optarg [ 0 ] )		4212438	1					
ANR	4212765	Callee	toupper		4212438	0					
ANR	4212766	Identifier	toupper		4212438	0					
ANR	4212767	ArgumentList	my_optarg [ 0 ]		4212438	1					
ANR	4212768	Argument	my_optarg [ 0 ]		4212438	0					
ANR	4212769	ArrayIndexing	my_optarg [ 0 ]		4212438	0					
ANR	4212770	Identifier	my_optarg		4212438	0					
ANR	4212771	PrimaryExpression	0		4212438	1					
ANR	4212772	BreakStatement	break ;	461:3:11926:11931	4212438	35	True				
ANR	4212773	Label	case 's' :	463:3:11940:11948	4212438	36	True				
ANR	4212774	IfStatement	if ( my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' ) )		4212438	37					
ANR	4212775	Condition	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )	464:9:11959:12015	4212438	0	True				
ANR	4212776	AndExpression	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )		4212438	0		&&			
ANR	4212777	Identifier	my_optarg		4212438	0					
ANR	4212778	OrExpression	my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n'		4212438	1		||			
ANR	4212779	EqualityExpression	my_optarg [ 0 ] == 'N'		4212438	0		==			
ANR	4212780	ArrayIndexing	my_optarg [ 0 ]		4212438	0					
ANR	4212781	Identifier	my_optarg		4212438	0					
ANR	4212782	PrimaryExpression	0		4212438	1					
ANR	4212783	PrimaryExpression	'N'		4212438	1					
ANR	4212784	EqualityExpression	my_optarg [ 0 ] == 'n'		4212438	1		==			
ANR	4212785	ArrayIndexing	my_optarg [ 0 ]		4212438	0					
ANR	4212786	Identifier	my_optarg		4212438	0					
ANR	4212787	PrimaryExpression	0		4212438	1					
ANR	4212788	PrimaryExpression	'n'		4212438	1					
ANR	4212789	CompoundStatement		83:69:1578:1578	4212438	1					
ANR	4212790	ExpressionStatement	Opt . submitjobs = 'N'	465:5:12026:12046	4212438	0	True				
ANR	4212791	AssignmentExpression	Opt . submitjobs = 'N'		4212438	0		=			
ANR	4212792	MemberAccess	Opt . submitjobs		4212438	0					
ANR	4212793	Identifier	Opt		4212438	0					
ANR	4212794	Identifier	submitjobs		4212438	1					
ANR	4212795	PrimaryExpression	'N'		4212438	1					
ANR	4212796	ElseStatement	else		4212438	0					
ANR	4212797	CompoundStatement		85:11:1618:1618	4212438	0					
ANR	4212798	ExpressionStatement	Opt . submitjobs = 'Y'	467:5:12066:12086	4212438	0	True				
ANR	4212799	AssignmentExpression	Opt . submitjobs = 'Y'		4212438	0		=			
ANR	4212800	MemberAccess	Opt . submitjobs		4212438	0					
ANR	4212801	Identifier	Opt		4212438	0					
ANR	4212802	Identifier	submitjobs		4212438	1					
ANR	4212803	PrimaryExpression	'Y'		4212438	1					
ANR	4212804	BreakStatement	break ;	469:3:12097:12102	4212438	38	True				
ANR	4212805	Label	case 'v' :	471:3:12111:12119	4212438	39	True				
ANR	4212806	IfStatement	if ( my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' ) )		4212438	40					
ANR	4212807	Condition	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )	472:9:12130:12186	4212438	0	True				
ANR	4212808	AndExpression	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )		4212438	0		&&			
ANR	4212809	Identifier	my_optarg		4212438	0					
ANR	4212810	OrExpression	my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n'		4212438	1		||			
ANR	4212811	EqualityExpression	my_optarg [ 0 ] == 'N'		4212438	0		==			
ANR	4212812	ArrayIndexing	my_optarg [ 0 ]		4212438	0					
ANR	4212813	Identifier	my_optarg		4212438	0					
ANR	4212814	PrimaryExpression	0		4212438	1					
ANR	4212815	PrimaryExpression	'N'		4212438	1					
ANR	4212816	EqualityExpression	my_optarg [ 0 ] == 'n'		4212438	1		==			
ANR	4212817	ArrayIndexing	my_optarg [ 0 ]		4212438	0					
ANR	4212818	Identifier	my_optarg		4212438	0					
ANR	4212819	PrimaryExpression	0		4212438	1					
ANR	4212820	PrimaryExpression	'n'		4212438	1					
ANR	4212821	CompoundStatement		91:69:1749:1749	4212438	1					
ANR	4212822	ExpressionStatement	Opt . vacatejobs = 'N'	473:5:12197:12217	4212438	0	True				
ANR	4212823	AssignmentExpression	Opt . vacatejobs = 'N'		4212438	0		=			
ANR	4212824	MemberAccess	Opt . vacatejobs		4212438	0					
ANR	4212825	Identifier	Opt		4212438	0					
ANR	4212826	Identifier	vacatejobs		4212438	1					
ANR	4212827	PrimaryExpression	'N'		4212438	1					
ANR	4212828	ElseStatement	else		4212438	0					
ANR	4212829	CompoundStatement		93:11:1789:1789	4212438	0					
ANR	4212830	ExpressionStatement	Opt . vacatejobs = 'Y'	475:5:12237:12257	4212438	0	True				
ANR	4212831	AssignmentExpression	Opt . vacatejobs = 'Y'		4212438	0		=			
ANR	4212832	MemberAccess	Opt . vacatejobs		4212438	0					
ANR	4212833	Identifier	Opt		4212438	0					
ANR	4212834	Identifier	vacatejobs		4212438	1					
ANR	4212835	PrimaryExpression	'Y'		4212438	1					
ANR	4212836	BreakStatement	break ;	477:3:12268:12273	4212438	41	True				
ANR	4212837	Label	case 'm' :	479:3:12279:12287	4212438	42	True				
ANR	4212838	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	43					
ANR	4212839	Condition	! isempty ( my_optarg )	480:8:12297:12315	4212438	0	True				
ANR	4212840	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4212841	UnaryOperator	!		4212438	0					
ANR	4212842	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4212843	Callee	isempty		4212438	0					
ANR	4212844	Identifier	isempty		4212438	0					
ANR	4212845	ArgumentList	my_optarg		4212438	1					
ANR	4212846	Argument	my_optarg		4212438	0					
ANR	4212847	Identifier	my_optarg		4212438	0					
ANR	4212848	CompoundStatement		99:29:1877:1877	4212438	1					
ANR	4212849	ExpressionStatement	Opt . smtpserver = strdup ( my_optarg )	481:5:12325:12359	4212438	0	True				
ANR	4212850	AssignmentExpression	Opt . smtpserver = strdup ( my_optarg )		4212438	0		=			
ANR	4212851	MemberAccess	Opt . smtpserver		4212438	0					
ANR	4212852	Identifier	Opt		4212438	0					
ANR	4212853	Identifier	smtpserver		4212438	1					
ANR	4212854	CallExpression	strdup ( my_optarg )		4212438	1					
ANR	4212855	Callee	strdup		4212438	0					
ANR	4212856	Identifier	strdup		4212438	0					
ANR	4212857	ArgumentList	my_optarg		4212438	1					
ANR	4212858	Argument	my_optarg		4212438	0					
ANR	4212859	Identifier	my_optarg		4212438	0					
ANR	4212860	BreakStatement	break ;	483:3:12370:12375	4212438	44	True				
ANR	4212861	Label	case 'u' :	485:3:12381:12389	4212438	45	True				
ANR	4212862	IfStatement	if ( my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' ) )		4212438	46					
ANR	4212863	Condition	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )	486:9:12400:12456	4212438	0	True				
ANR	4212864	AndExpression	my_optarg && ( my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n' )		4212438	0		&&			
ANR	4212865	Identifier	my_optarg		4212438	0					
ANR	4212866	OrExpression	my_optarg [ 0 ] == 'N' || my_optarg [ 0 ] == 'n'		4212438	1		||			
ANR	4212867	EqualityExpression	my_optarg [ 0 ] == 'N'		4212438	0		==			
ANR	4212868	ArrayIndexing	my_optarg [ 0 ]		4212438	0					
ANR	4212869	Identifier	my_optarg		4212438	0					
ANR	4212870	PrimaryExpression	0		4212438	1					
ANR	4212871	PrimaryExpression	'N'		4212438	1					
ANR	4212872	EqualityExpression	my_optarg [ 0 ] == 'n'		4212438	1		==			
ANR	4212873	ArrayIndexing	my_optarg [ 0 ]		4212438	0					
ANR	4212874	Identifier	my_optarg		4212438	0					
ANR	4212875	PrimaryExpression	0		4212438	1					
ANR	4212876	PrimaryExpression	'n'		4212438	1					
ANR	4212877	CompoundStatement		105:69:2019:2019	4212438	1					
ANR	4212878	ExpressionStatement	Opt . enablevmuniverse = 'N'	487:5:12467:12493	4212438	0	True				
ANR	4212879	AssignmentExpression	Opt . enablevmuniverse = 'N'		4212438	0		=			
ANR	4212880	MemberAccess	Opt . enablevmuniverse		4212438	0					
ANR	4212881	Identifier	Opt		4212438	0					
ANR	4212882	Identifier	enablevmuniverse		4212438	1					
ANR	4212883	PrimaryExpression	'N'		4212438	1					
ANR	4212884	ElseStatement	else		4212438	0					
ANR	4212885	CompoundStatement		107:11:2065:2065	4212438	0					
ANR	4212886	ExpressionStatement	Opt . enablevmuniverse = 'Y'	489:5:12513:12539	4212438	0	True				
ANR	4212887	AssignmentExpression	Opt . enablevmuniverse = 'Y'		4212438	0		=			
ANR	4212888	MemberAccess	Opt . enablevmuniverse		4212438	0					
ANR	4212889	Identifier	Opt		4212438	0					
ANR	4212890	Identifier	enablevmuniverse		4212438	1					
ANR	4212891	PrimaryExpression	'Y'		4212438	1					
ANR	4212892	BreakStatement	break ;	491:3:12550:12555	4212438	47	True				
ANR	4212893	Label	case 'w' :	493:3:12564:12572	4212438	48	True				
ANR	4212894	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	49					
ANR	4212895	Condition	! isempty ( my_optarg )	494:8:12582:12600	4212438	0	True				
ANR	4212896	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4212897	UnaryOperator	!		4212438	0					
ANR	4212898	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4212899	Callee	isempty		4212438	0					
ANR	4212900	Identifier	isempty		4212438	0					
ANR	4212901	ArgumentList	my_optarg		4212438	1					
ANR	4212902	Argument	my_optarg		4212438	0					
ANR	4212903	Identifier	my_optarg		4212438	0					
ANR	4212904	CompoundStatement		113:29:2162:2162	4212438	1					
ANR	4212905	ExpressionStatement	Opt . vmmaxnumber = strdup ( my_optarg )	495:5:12610:12645	4212438	0	True				
ANR	4212906	AssignmentExpression	Opt . vmmaxnumber = strdup ( my_optarg )		4212438	0		=			
ANR	4212907	MemberAccess	Opt . vmmaxnumber		4212438	0					
ANR	4212908	Identifier	Opt		4212438	0					
ANR	4212909	Identifier	vmmaxnumber		4212438	1					
ANR	4212910	CallExpression	strdup ( my_optarg )		4212438	1					
ANR	4212911	Callee	strdup		4212438	0					
ANR	4212912	Identifier	strdup		4212438	0					
ANR	4212913	ArgumentList	my_optarg		4212438	1					
ANR	4212914	Argument	my_optarg		4212438	0					
ANR	4212915	Identifier	my_optarg		4212438	0					
ANR	4212916	BreakStatement	break ;	497:3:12656:12661	4212438	50	True				
ANR	4212917	Label	case 'x' :	499:3:12667:12675	4212438	51	True				
ANR	4212918	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	52					
ANR	4212919	Condition	! isempty ( my_optarg )	500:8:12685:12703	4212438	0	True				
ANR	4212920	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4212921	UnaryOperator	!		4212438	0					
ANR	4212922	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4212923	Callee	isempty		4212438	0					
ANR	4212924	Identifier	isempty		4212438	0					
ANR	4212925	ArgumentList	my_optarg		4212438	1					
ANR	4212926	Argument	my_optarg		4212438	0					
ANR	4212927	Identifier	my_optarg		4212438	0					
ANR	4212928	CompoundStatement		119:29:2265:2265	4212438	1					
ANR	4212929	ExpressionStatement	Opt . vmversion = strdup ( my_optarg )	501:5:12713:12746	4212438	0	True				
ANR	4212930	AssignmentExpression	Opt . vmversion = strdup ( my_optarg )		4212438	0		=			
ANR	4212931	MemberAccess	Opt . vmversion		4212438	0					
ANR	4212932	Identifier	Opt		4212438	0					
ANR	4212933	Identifier	vmversion		4212438	1					
ANR	4212934	CallExpression	strdup ( my_optarg )		4212438	1					
ANR	4212935	Callee	strdup		4212438	0					
ANR	4212936	Identifier	strdup		4212438	0					
ANR	4212937	ArgumentList	my_optarg		4212438	1					
ANR	4212938	Argument	my_optarg		4212438	0					
ANR	4212939	Identifier	my_optarg		4212438	0					
ANR	4212940	BreakStatement	break ;	503:3:12757:12762	4212438	53	True				
ANR	4212941	Label	case 'y' :	505:3:12768:12776	4212438	54	True				
ANR	4212942	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	55					
ANR	4212943	Condition	! isempty ( my_optarg )	506:8:12786:12804	4212438	0	True				
ANR	4212944	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4212945	UnaryOperator	!		4212438	0					
ANR	4212946	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4212947	Callee	isempty		4212438	0					
ANR	4212948	Identifier	isempty		4212438	0					
ANR	4212949	ArgumentList	my_optarg		4212438	1					
ANR	4212950	Argument	my_optarg		4212438	0					
ANR	4212951	Identifier	my_optarg		4212438	0					
ANR	4212952	CompoundStatement		125:29:2366:2366	4212438	1					
ANR	4212953	ExpressionStatement	Opt . vmmemory = strdup ( my_optarg )	507:5:12814:12846	4212438	0	True				
ANR	4212954	AssignmentExpression	Opt . vmmemory = strdup ( my_optarg )		4212438	0		=			
ANR	4212955	MemberAccess	Opt . vmmemory		4212438	0					
ANR	4212956	Identifier	Opt		4212438	0					
ANR	4212957	Identifier	vmmemory		4212438	1					
ANR	4212958	CallExpression	strdup ( my_optarg )		4212438	1					
ANR	4212959	Callee	strdup		4212438	0					
ANR	4212960	Identifier	strdup		4212438	0					
ANR	4212961	ArgumentList	my_optarg		4212438	1					
ANR	4212962	Argument	my_optarg		4212438	0					
ANR	4212963	Identifier	my_optarg		4212438	0					
ANR	4212964	BreakStatement	break ;	509:3:12857:12862	4212438	56	True				
ANR	4212965	Label	case 'z' :	511:3:12868:12876	4212438	57	True				
ANR	4212966	IfStatement	if ( my_optarg )		4212438	58					
ANR	4212967	Condition	my_optarg	512:9:12887:12895	4212438	0	True				
ANR	4212968	Identifier	my_optarg		4212438	0					
ANR	4212969	CompoundStatement		131:21:2458:2458	4212438	1					
ANR	4212970	ExpressionStatement	Opt . vmnetworking = toupper ( my_optarg [ 0 ] )	513:5:12906:12946	4212438	0	True				
ANR	4212971	AssignmentExpression	Opt . vmnetworking = toupper ( my_optarg [ 0 ] )		4212438	0		=			
ANR	4212972	MemberAccess	Opt . vmnetworking		4212438	0					
ANR	4212973	Identifier	Opt		4212438	0					
ANR	4212974	Identifier	vmnetworking		4212438	1					
ANR	4212975	CallExpression	toupper ( my_optarg [ 0 ] )		4212438	1					
ANR	4212976	Callee	toupper		4212438	0					
ANR	4212977	Identifier	toupper		4212438	0					
ANR	4212978	ArgumentList	my_optarg [ 0 ]		4212438	1					
ANR	4212979	Argument	my_optarg [ 0 ]		4212438	0					
ANR	4212980	ArrayIndexing	my_optarg [ 0 ]		4212438	0					
ANR	4212981	Identifier	my_optarg		4212438	0					
ANR	4212982	PrimaryExpression	0		4212438	1					
ANR	4212983	BreakStatement	break ;	515:3:12957:12962	4212438	59	True				
ANR	4212984	Label	case 'q' :	517:3:12968:12976	4212438	60	True				
ANR	4212985	IfStatement	if ( my_optarg )		4212438	61					
ANR	4212986	Condition	my_optarg	518:9:12987:12995	4212438	0	True				
ANR	4212987	Identifier	my_optarg		4212438	0					
ANR	4212988	CompoundStatement		137:21:2558:2558	4212438	1					
ANR	4212989	ExpressionStatement	Opt . hadoop = toupper ( my_optarg [ 0 ] )	519:5:13006:13040	4212438	0	True				
ANR	4212990	AssignmentExpression	Opt . hadoop = toupper ( my_optarg [ 0 ] )		4212438	0		=			
ANR	4212991	MemberAccess	Opt . hadoop		4212438	0					
ANR	4212992	Identifier	Opt		4212438	0					
ANR	4212993	Identifier	hadoop		4212438	1					
ANR	4212994	CallExpression	toupper ( my_optarg [ 0 ] )		4212438	1					
ANR	4212995	Callee	toupper		4212438	0					
ANR	4212996	Identifier	toupper		4212438	0					
ANR	4212997	ArgumentList	my_optarg [ 0 ]		4212438	1					
ANR	4212998	Argument	my_optarg [ 0 ]		4212438	0					
ANR	4212999	ArrayIndexing	my_optarg [ 0 ]		4212438	0					
ANR	4213000	Identifier	my_optarg		4212438	0					
ANR	4213001	PrimaryExpression	0		4212438	1					
ANR	4213002	BreakStatement	break ;	521:4:13052:13057	4212438	62	True				
ANR	4213003	Label	case 'f' :	523:3:13063:13071	4212438	63	True				
ANR	4213004	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	64					
ANR	4213005	Condition	! isempty ( my_optarg )	524:8:13081:13099	4212438	0	True				
ANR	4213006	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4213007	UnaryOperator	!		4212438	0					
ANR	4213008	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4213009	Callee	isempty		4212438	0					
ANR	4213010	Identifier	isempty		4212438	0					
ANR	4213011	ArgumentList	my_optarg		4212438	1					
ANR	4213012	Argument	my_optarg		4212438	0					
ANR	4213013	Identifier	my_optarg		4212438	0					
ANR	4213014	CompoundStatement		143:30:2662:2662	4212438	1					
ANR	4213015	ExpressionStatement	Opt . namenode = strdup ( my_optarg )	525:5:13110:13142	4212438	0	True				
ANR	4213016	AssignmentExpression	Opt . namenode = strdup ( my_optarg )		4212438	0		=			
ANR	4213017	MemberAccess	Opt . namenode		4212438	0					
ANR	4213018	Identifier	Opt		4212438	0					
ANR	4213019	Identifier	namenode		4212438	1					
ANR	4213020	CallExpression	strdup ( my_optarg )		4212438	1					
ANR	4213021	Callee	strdup		4212438	0					
ANR	4213022	Identifier	strdup		4212438	0					
ANR	4213023	ArgumentList	my_optarg		4212438	1					
ANR	4213024	Argument	my_optarg		4212438	0					
ANR	4213025	Identifier	my_optarg		4212438	0					
ANR	4213026	BreakStatement	break ;	527:4:13154:13159	4212438	65	True				
ANR	4213027	Label	case 'k' :	529:3:13165:13173	4212438	66	True				
ANR	4213028	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	67					
ANR	4213029	Condition	! isempty ( my_optarg )	530:8:13183:13201	4212438	0	True				
ANR	4213030	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4213031	UnaryOperator	!		4212438	0					
ANR	4213032	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4213033	Callee	isempty		4212438	0					
ANR	4213034	Identifier	isempty		4212438	0					
ANR	4213035	ArgumentList	my_optarg		4212438	1					
ANR	4213036	Argument	my_optarg		4212438	0					
ANR	4213037	Identifier	my_optarg		4212438	0					
ANR	4213038	CompoundStatement		149:30:2764:2764	4212438	1					
ANR	4213039	ExpressionStatement	Opt . namedata = strdup ( my_optarg )	531:5:13212:13244	4212438	0	True				
ANR	4213040	AssignmentExpression	Opt . namedata = strdup ( my_optarg )		4212438	0		=			
ANR	4213041	MemberAccess	Opt . namedata		4212438	0					
ANR	4213042	Identifier	Opt		4212438	0					
ANR	4213043	Identifier	namedata		4212438	1					
ANR	4213044	CallExpression	strdup ( my_optarg )		4212438	1					
ANR	4213045	Callee	strdup		4212438	0					
ANR	4213046	Identifier	strdup		4212438	0					
ANR	4213047	ArgumentList	my_optarg		4212438	1					
ANR	4213048	Argument	my_optarg		4212438	0					
ANR	4213049	Identifier	my_optarg		4212438	0					
ANR	4213050	BreakStatement	break ;	533:4:13256:13261	4212438	68	True				
ANR	4213051	Label	case 'g' :	535:3:13267:13275	4212438	69	True				
ANR	4213052	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	70					
ANR	4213053	Condition	! isempty ( my_optarg )	536:8:13285:13303	4212438	0	True				
ANR	4213054	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4213055	UnaryOperator	!		4212438	0					
ANR	4213056	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4213057	Callee	isempty		4212438	0					
ANR	4213058	Identifier	isempty		4212438	0					
ANR	4213059	ArgumentList	my_optarg		4212438	1					
ANR	4213060	Argument	my_optarg		4212438	0					
ANR	4213061	Identifier	my_optarg		4212438	0					
ANR	4213062	CompoundStatement		155:30:2866:2866	4212438	1					
ANR	4213063	ExpressionStatement	Opt . nameport = strdup ( my_optarg )	537:5:13314:13346	4212438	0	True				
ANR	4213064	AssignmentExpression	Opt . nameport = strdup ( my_optarg )		4212438	0		=			
ANR	4213065	MemberAccess	Opt . nameport		4212438	0					
ANR	4213066	Identifier	Opt		4212438	0					
ANR	4213067	Identifier	nameport		4212438	1					
ANR	4213068	CallExpression	strdup ( my_optarg )		4212438	1					
ANR	4213069	Callee	strdup		4212438	0					
ANR	4213070	Identifier	strdup		4212438	0					
ANR	4213071	ArgumentList	my_optarg		4212438	1					
ANR	4213072	Argument	my_optarg		4212438	0					
ANR	4213073	Identifier	my_optarg		4212438	0					
ANR	4213074	BreakStatement	break ;	539:4:13358:13363	4212438	71	True				
ANR	4213075	Label	case 'b' :	541:3:13369:13377	4212438	72	True				
ANR	4213076	IfStatement	if ( ! isempty ( my_optarg ) )		4212438	73					
ANR	4213077	Condition	! isempty ( my_optarg )	542:8:13387:13405	4212438	0	True				
ANR	4213078	UnaryOperationExpression	! isempty ( my_optarg )		4212438	0					
ANR	4213079	UnaryOperator	!		4212438	0					
ANR	4213080	CallExpression	isempty ( my_optarg )		4212438	1					
ANR	4213081	Callee	isempty		4212438	0					
ANR	4213082	Identifier	isempty		4212438	0					
ANR	4213083	ArgumentList	my_optarg		4212438	1					
ANR	4213084	Argument	my_optarg		4212438	0					
ANR	4213085	Identifier	my_optarg		4212438	0					
ANR	4213086	CompoundStatement		161:30:2968:2968	4212438	1					
ANR	4213087	ExpressionStatement	Opt . namewebport = strdup ( my_optarg )	543:5:13416:13451	4212438	0	True				
ANR	4213088	AssignmentExpression	Opt . namewebport = strdup ( my_optarg )		4212438	0		=			
ANR	4213089	MemberAccess	Opt . namewebport		4212438	0					
ANR	4213090	Identifier	Opt		4212438	0					
ANR	4213091	Identifier	namewebport		4212438	1					
ANR	4213092	CallExpression	strdup ( my_optarg )		4212438	1					
ANR	4213093	Callee	strdup		4212438	0					
ANR	4213094	Identifier	strdup		4212438	0					
ANR	4213095	ArgumentList	my_optarg		4212438	1					
ANR	4213096	Argument	my_optarg		4212438	0					
ANR	4213097	Identifier	my_optarg		4212438	0					
ANR	4213098	BreakStatement	break ;	545:4:13463:13468	4212438	74	True				
ANR	4213099	Label	case 'h' :	547:3:13477:13485	4212438	75	True				
ANR	4213100	Label	default :	548:3:13490:13497	4212438	76	True				
ANR	4213101	Identifier	default		4212438	0					
ANR	4213102	ExpressionStatement	Usage ( )	550:4:13549:13556	4212438	77	True				
ANR	4213103	CallExpression	Usage ( )		4212438	0					
ANR	4213104	Callee	Usage		4212438	0					
ANR	4213105	Identifier	Usage		4212438	0					
ANR	4213106	ArgumentList			4212438	1					
ANR	4213107	IfStatement	if ( ! ( ( Opt . submitjobs && Opt . runjobs && Opt . newpool ) || ( ! Opt . submitjobs && ! Opt . runjobs && ! Opt . newpool ) ) )		4212438	3					
ANR	4213108	Condition	! ( ( Opt . submitjobs && Opt . runjobs && Opt . newpool ) || ( ! Opt . submitjobs && ! Opt . runjobs && ! Opt . newpool ) )	569:5:13954:14065	4212438	0	True				
ANR	4213109	UnaryOperationExpression	! ( ( Opt . submitjobs && Opt . runjobs && Opt . newpool ) || ( ! Opt . submitjobs && ! Opt . runjobs && ! Opt . newpool ) )		4212438	0					
ANR	4213110	UnaryOperator	!		4212438	0					
ANR	4213111	OrExpression	( Opt . submitjobs && Opt . runjobs && Opt . newpool ) || ( ! Opt . submitjobs && ! Opt . runjobs && ! Opt . newpool )		4212438	1		||			
ANR	4213112	AndExpression	Opt . submitjobs && Opt . runjobs && Opt . newpool		4212438	0		&&			
ANR	4213113	MemberAccess	Opt . submitjobs		4212438	0					
ANR	4213114	Identifier	Opt		4212438	0					
ANR	4213115	Identifier	submitjobs		4212438	1					
ANR	4213116	AndExpression	Opt . runjobs && Opt . newpool		4212438	1		&&			
ANR	4213117	MemberAccess	Opt . runjobs		4212438	0					
ANR	4213118	Identifier	Opt		4212438	0					
ANR	4213119	Identifier	runjobs		4212438	1					
ANR	4213120	MemberAccess	Opt . newpool		4212438	1					
ANR	4213121	Identifier	Opt		4212438	0					
ANR	4213122	Identifier	newpool		4212438	1					
ANR	4213123	AndExpression	! Opt . submitjobs && ! Opt . runjobs && ! Opt . newpool		4212438	1		&&			
ANR	4213124	UnaryOperationExpression	! Opt . submitjobs		4212438	0					
ANR	4213125	UnaryOperator	!		4212438	0					
ANR	4213126	MemberAccess	Opt . submitjobs		4212438	1					
ANR	4213127	Identifier	Opt		4212438	0					
ANR	4213128	Identifier	submitjobs		4212438	1					
ANR	4213129	AndExpression	! Opt . runjobs && ! Opt . newpool		4212438	1		&&			
ANR	4213130	UnaryOperationExpression	! Opt . runjobs		4212438	0					
ANR	4213131	UnaryOperator	!		4212438	0					
ANR	4213132	MemberAccess	Opt . runjobs		4212438	1					
ANR	4213133	Identifier	Opt		4212438	0					
ANR	4213134	Identifier	runjobs		4212438	1					
ANR	4213135	UnaryOperationExpression	! Opt . newpool		4212438	1					
ANR	4213136	UnaryOperator	!		4212438	0					
ANR	4213137	MemberAccess	Opt . newpool		4212438	1					
ANR	4213138	Identifier	Opt		4212438	0					
ANR	4213139	Identifier	newpool		4212438	1					
ANR	4213140	CompoundStatement		189:61:3627:3627	4212438	1					
ANR	4213141	Statement	fprintf	571:2:14072:14078	4212438	0	True				
ANR	4213142	Statement	(	571:9:14079:14079	4212438	1	True				
ANR	4213143	Statement	LogFileHandle	571:10:14080:14092	4212438	2	True				
ANR	4213144	Statement	","	571:23:14093:14093	4212438	3	True				
ANR	4213145	Statement	"""%s: --newpool, --runjobs and --submitjobs must be\\n"""	571:25:14095:14147	4212438	4	True				
ANR	4213146	Statement	"""\\tspecified together\\n"""	572:4:14153:14176	4212438	5	True				
ANR	4213147	Statement	","	572:28:14177:14177	4212438	6	True				
ANR	4213148	Statement	argv	572:30:14179:14182	4212438	7	True				
ANR	4213149	Statement	[	572:34:14183:14183	4212438	8	True				
ANR	4213150	Statement	0	572:35:14184:14184	4212438	9	True				
ANR	4213151	Statement	]	572:36:14185:14185	4212438	10	True				
ANR	4213152	Statement	)	572:37:14186:14186	4212438	11	True				
ANR	4213153	ExpressionStatement		572:38:14187:14187	4212438	12	True				
ANR	4213154	ReturnStatement	return false ;	573:2:14191:14203	4212438	13	True				
ANR	4213155	Identifier	false		4212438	0					
ANR	4213156	ReturnStatement	return true ;	575:1:14209:14220	4212438	4	True				
ANR	4213157	Identifier	true		4212438	0					
ANR	4213158	ReturnType	bool		4212438	1					
ANR	4213159	Identifier	parse_args		4212438	2					
ANR	4213160	ParameterList	"int argc , char * * argv"		4212438	3					
ANR	4213161	Parameter	int argc	382:11:10417:10424	4212438	0	True				
ANR	4213162	ParameterType	int		4212438	0					
ANR	4213163	Identifier	argc		4212438	1					
ANR	4213164	Parameter	char * * argv	382:21:10427:10437	4212438	1	True				
ANR	4213165	ParameterType	char * *		4212438	0					
ANR	4213166	Identifier	argv		4212438	1					
ANR	4213167	CFGEntryNode	ENTRY		4212438		True				
ANR	4213168	CFGExitNode	EXIT		4212438		True				
ANR	4213169	Symbol	Opt . namedata		4212438						
ANR	4213170	Symbol	Opt . poolname		4212438						
ANR	4213171	Symbol	Opt . namewebport		4212438						
ANR	4213172	Symbol	Opt . release_dir		4212438						
ANR	4213173	Symbol	argv		4212438						
ANR	4213174	Symbol	isempty		4212438						
ANR	4213175	Symbol	Opt . newpool		4212438						
ANR	4213176	Symbol	my_getopt_long		4212438						
ANR	4213177	Symbol	get_short_path_name		4212438						
ANR	4213178	Symbol	Opt		4212438						
ANR	4213179	Symbol	Opt . vmnetworking		4212438						
ANR	4213180	Symbol	long_options		4212438						
ANR	4213181	Symbol	Opt . hostallowwrite		4212438						
ANR	4213182	Symbol	Opt . vmmaxnumber		4212438						
ANR	4213183	Symbol	option_index		4212438						
ANR	4213184	Symbol	Opt . condoremail		4212438						
ANR	4213185	Symbol	Opt . vacatejobs		4212438						
ANR	4213186	Symbol	argc		4212438						
ANR	4213187	Symbol	& option_index		4212438						
ANR	4213188	Symbol	Opt . accountingdomain		4212438						
ANR	4213189	Symbol	toupper		4212438						
ANR	4213190	Symbol	short_options		4212438						
ANR	4213191	Symbol	false		4212438						
ANR	4213192	Symbol	i		4212438						
ANR	4213193	Symbol	Opt . submitjobs		4212438						
ANR	4213194	Symbol	Opt . perllocation		4212438						
ANR	4213195	Symbol	Opt . nameport		4212438						
ANR	4213196	Symbol	Opt . hostallowadministrator		4212438						
ANR	4213197	Symbol	Opt . smtpserver		4212438						
ANR	4213198	Symbol	Opt . hadoop		4212438						
ANR	4213199	Symbol	Opt . namenode		4212438						
ANR	4213200	Symbol	Opt . jvmlocation		4212438						
ANR	4213201	Symbol	Opt . runjobs		4212438						
ANR	4213202	Symbol	Opt . hostallowread		4212438						
ANR	4213203	Symbol	true		4212438						
ANR	4213204	Symbol	Opt . vmmemory		4212438						
ANR	4213205	Symbol	Opt . vmversion		4212438						
ANR	4213206	Symbol	strdup		4212438						
ANR	4213207	Symbol	Opt . enablevmuniverse		4212438						
ANR	4213208	Symbol	my_optarg		4212438						
ANR	4213209	Symbol	Opt . poolhostname		4212438						
ANR	4213210	Symbol	* my_optarg		4212438						
ANR	4213211	Function	set_option	578:0:14225:17474							
ANR	4213212	FunctionDef	"set_option (const char * attribute , const char * val)"		4213211	0					
ANR	4213213	CompoundStatement		579:51:14281:17474	4213211	0					
ANR	4213214	IdentifierDeclStatement	char buf [ BUFFERSIZE ] ;	580:1:14284:14304	4213211	0	True				
ANR	4213215	IdentifierDecl	buf [ BUFFERSIZE ]		4213211	0					
ANR	4213216	IdentifierDeclType	char [ BUFFERSIZE ]		4213211	0					
ANR	4213217	Identifier	buf		4213211	1					
ANR	4213218	Identifier	BUFFERSIZE		4213211	2					
ANR	4213219	IdentifierDeclStatement	char * config_file_tmp ;	581:1:14307:14328	4213211	1	True				
ANR	4213220	IdentifierDecl	* config_file_tmp		4213211	0					
ANR	4213221	IdentifierDeclType	char *		4213211	0					
ANR	4213222	Identifier	config_file_tmp		4213211	1					
ANR	4213223	IdentifierDeclStatement	"FILE * cfg , * cfg_out ;"	582:1:14331:14350	4213211	2	True				
ANR	4213224	IdentifierDecl	* cfg		4213211	0					
ANR	4213225	IdentifierDeclType	FILE *		4213211	0					
ANR	4213226	Identifier	cfg		4213211	1					
ANR	4213227	IdentifierDecl	* cfg_out		4213211	1					
ANR	4213228	IdentifierDeclType	FILE *		4213211	0					
ANR	4213229	Identifier	cfg_out		4213211	1					
ANR	4213230	IdentifierDeclStatement	"bool result , foundit ;"	583:1:14353:14373	4213211	3	True				
ANR	4213231	IdentifierDecl	result		4213211	0					
ANR	4213232	IdentifierDeclType	bool		4213211	0					
ANR	4213233	Identifier	result		4213211	1					
ANR	4213234	IdentifierDecl	foundit		4213211	1					
ANR	4213235	IdentifierDeclType	bool		4213211	0					
ANR	4213236	Identifier	foundit		4213211	1					
ANR	4213237	ExpressionStatement	result = true	585:1:14377:14397	4213211	4	True				
ANR	4213238	AssignmentExpression	result = true		4213211	0		=			
ANR	4213239	Identifier	result		4213211	0					
ANR	4213240	Identifier	true		4213211	1					
ANR	4213241	ExpressionStatement	foundit = false	586:1:14400:14421	4213211	5	True				
ANR	4213242	AssignmentExpression	foundit = false		4213211	0		=			
ANR	4213243	Identifier	foundit		4213211	0					
ANR	4213244	Identifier	false		4213211	1					
ANR	4213245	ExpressionStatement	cfg = cfg_out = NULL	587:1:14424:14444	4213211	6	True				
ANR	4213246	AssignmentExpression	cfg = cfg_out = NULL		4213211	0		=			
ANR	4213247	Identifier	cfg		4213211	0					
ANR	4213248	AssignmentExpression	cfg_out = NULL		4213211	1		=			
ANR	4213249	Identifier	cfg_out		4213211	0					
ANR	4213250	Identifier	NULL		4213211	1					
ANR	4213251	IfStatement	if ( Config_file == NULL && ! setup_config_file ( ) )		4213211	7					
ANR	4213252	Condition	Config_file == NULL && ! setup_config_file ( )	590:6:14454:14496	4213211	0	True				
ANR	4213253	AndExpression	Config_file == NULL && ! setup_config_file ( )		4213211	0		&&			
ANR	4213254	EqualityExpression	Config_file == NULL		4213211	0		==			
ANR	4213255	Identifier	Config_file		4213211	0					
ANR	4213256	Identifier	NULL		4213211	1					
ANR	4213257	UnaryOperationExpression	! setup_config_file ( )		4213211	1					
ANR	4213258	UnaryOperator	!		4213211	0					
ANR	4213259	CallExpression	setup_config_file ( )		4213211	1					
ANR	4213260	Callee	setup_config_file		4213211	0					
ANR	4213261	Identifier	setup_config_file		4213211	0					
ANR	4213262	ArgumentList			4213211	1					
ANR	4213263	CompoundStatement		12:52:218:218	4213211	1					
ANR	4213264	ExpressionStatement	"fprintf ( LogFileHandle , ""Error opening config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"	591:2:14504:14607	4213211	0	True				
ANR	4213265	CallExpression	"fprintf ( LogFileHandle , ""Error opening config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"		4213211	0					
ANR	4213266	Callee	fprintf		4213211	0					
ANR	4213267	Identifier	fprintf		4213211	0					
ANR	4213268	ArgumentList	LogFileHandle		4213211	1					
ANR	4213269	Argument	LogFileHandle		4213211	0					
ANR	4213270	Identifier	LogFileHandle		4213211	0					
ANR	4213271	Argument	"""Error opening config file '%s'.\\n\\tErr=%s\\n"""		4213211	1					
ANR	4213272	PrimaryExpression	"""Error opening config file '%s'.\\n\\tErr=%s\\n"""		4213211	0					
ANR	4213273	Argument	Config_file		4213211	2					
ANR	4213274	Identifier	Config_file		4213211	0					
ANR	4213275	Argument	strerror ( errno )		4213211	3					
ANR	4213276	CallExpression	strerror ( errno )		4213211	0					
ANR	4213277	Callee	strerror		4213211	0					
ANR	4213278	Identifier	strerror		4213211	0					
ANR	4213279	ArgumentList	errno		4213211	1					
ANR	4213280	Argument	errno		4213211	0					
ANR	4213281	Identifier	errno		4213211	0					
ANR	4213282	ExpressionStatement	result = false	593:2:14611:14625	4213211	1	True				
ANR	4213283	AssignmentExpression	result = false		4213211	0		=			
ANR	4213284	Identifier	result		4213211	0					
ANR	4213285	Identifier	false		4213211	1					
ANR	4213286	ReturnStatement	return result ;	594:2:14629:14642	4213211	2	True				
ANR	4213287	Identifier	result		4213211	0					
ANR	4213288	IfStatement	"if ( NULL == ( config_file_tmp = tempnam ( ""."" , Config_file ) ) )"		4213211	8					
ANR	4213289	Condition	"NULL == ( config_file_tmp = tempnam ( ""."" , Config_file ) )"	597:6:14654:14707	4213211	0	True				
ANR	4213290	EqualityExpression	"NULL == ( config_file_tmp = tempnam ( ""."" , Config_file ) )"		4213211	0		==			
ANR	4213291	Identifier	NULL		4213211	0					
ANR	4213292	AssignmentExpression	"config_file_tmp = tempnam ( ""."" , Config_file )"		4213211	1		=			
ANR	4213293	Identifier	config_file_tmp		4213211	0					
ANR	4213294	CallExpression	"tempnam ( ""."" , Config_file )"		4213211	1					
ANR	4213295	Callee	tempnam		4213211	0					
ANR	4213296	Identifier	tempnam		4213211	0					
ANR	4213297	ArgumentList	"""."""		4213211	1					
ANR	4213298	Argument	"""."""		4213211	0					
ANR	4213299	PrimaryExpression	"""."""		4213211	0					
ANR	4213300	Argument	Config_file		4213211	1					
ANR	4213301	Identifier	Config_file		4213211	0					
ANR	4213302	CompoundStatement		19:63:429:429	4213211	1					
ANR	4213303	ExpressionStatement	"fprintf ( LogFileHandle , ""Error creating temporary file '%s'.\\n\\tErr=%s\\n"" , config_file_tmp , strerror ( errno ) )"	598:2:14715:14826	4213211	0	True				
ANR	4213304	CallExpression	"fprintf ( LogFileHandle , ""Error creating temporary file '%s'.\\n\\tErr=%s\\n"" , config_file_tmp , strerror ( errno ) )"		4213211	0					
ANR	4213305	Callee	fprintf		4213211	0					
ANR	4213306	Identifier	fprintf		4213211	0					
ANR	4213307	ArgumentList	LogFileHandle		4213211	1					
ANR	4213308	Argument	LogFileHandle		4213211	0					
ANR	4213309	Identifier	LogFileHandle		4213211	0					
ANR	4213310	Argument	"""Error creating temporary file '%s'.\\n\\tErr=%s\\n"""		4213211	1					
ANR	4213311	PrimaryExpression	"""Error creating temporary file '%s'.\\n\\tErr=%s\\n"""		4213211	0					
ANR	4213312	Argument	config_file_tmp		4213211	2					
ANR	4213313	Identifier	config_file_tmp		4213211	0					
ANR	4213314	Argument	strerror ( errno )		4213211	3					
ANR	4213315	CallExpression	strerror ( errno )		4213211	0					
ANR	4213316	Callee	strerror		4213211	0					
ANR	4213317	Identifier	strerror		4213211	0					
ANR	4213318	ArgumentList	errno		4213211	1					
ANR	4213319	Argument	errno		4213211	0					
ANR	4213320	Identifier	errno		4213211	0					
ANR	4213321	ExpressionStatement	result = false	600:2:14830:14844	4213211	1	True				
ANR	4213322	AssignmentExpression	result = false		4213211	0		=			
ANR	4213323	Identifier	result		4213211	0					
ANR	4213324	Identifier	false		4213211	1					
ANR	4213325	ReturnStatement	return result ;	601:2:14848:14861	4213211	2	True				
ANR	4213326	Identifier	result		4213211	0					
ANR	4213327	ElseStatement	else		4213211	0					
ANR	4213328	CompoundStatement		24:8:589:589	4213211	0					
ANR	4213329	ExpressionStatement	"cfg_out = fopen ( config_file_tmp , ""w"" )"	606:1:14942:14979	4213211	9	True				
ANR	4213330	AssignmentExpression	"cfg_out = fopen ( config_file_tmp , ""w"" )"		4213211	0		=			
ANR	4213331	Identifier	cfg_out		4213211	0					
ANR	4213332	CallExpression	"fopen ( config_file_tmp , ""w"" )"		4213211	1					
ANR	4213333	Callee	fopen		4213211	0					
ANR	4213334	Identifier	fopen		4213211	0					
ANR	4213335	ArgumentList	config_file_tmp		4213211	1					
ANR	4213336	Argument	config_file_tmp		4213211	0					
ANR	4213337	Identifier	config_file_tmp		4213211	0					
ANR	4213338	Argument	"""w"""		4213211	1					
ANR	4213339	PrimaryExpression	"""w"""		4213211	0					
ANR	4213340	IfStatement	if ( cfg_out == NULL )		4213211	10					
ANR	4213341	Condition	cfg_out == NULL	607:6:14987:15001	4213211	0	True				
ANR	4213342	EqualityExpression	cfg_out == NULL		4213211	0		==			
ANR	4213343	Identifier	cfg_out		4213211	0					
ANR	4213344	Identifier	NULL		4213211	1					
ANR	4213345	CompoundStatement		29:24:723:723	4213211	1					
ANR	4213346	ExpressionStatement	"fprintf ( LogFileHandle , ""Error opening config file '%s'.\\n\\tErr=%s\\n"" , config_file_tmp , strerror ( errno ) )"	608:2:15009:15116	4213211	0	True				
ANR	4213347	CallExpression	"fprintf ( LogFileHandle , ""Error opening config file '%s'.\\n\\tErr=%s\\n"" , config_file_tmp , strerror ( errno ) )"		4213211	0					
ANR	4213348	Callee	fprintf		4213211	0					
ANR	4213349	Identifier	fprintf		4213211	0					
ANR	4213350	ArgumentList	LogFileHandle		4213211	1					
ANR	4213351	Argument	LogFileHandle		4213211	0					
ANR	4213352	Identifier	LogFileHandle		4213211	0					
ANR	4213353	Argument	"""Error opening config file '%s'.\\n\\tErr=%s\\n"""		4213211	1					
ANR	4213354	PrimaryExpression	"""Error opening config file '%s'.\\n\\tErr=%s\\n"""		4213211	0					
ANR	4213355	Argument	config_file_tmp		4213211	2					
ANR	4213356	Identifier	config_file_tmp		4213211	0					
ANR	4213357	Argument	strerror ( errno )		4213211	3					
ANR	4213358	CallExpression	strerror ( errno )		4213211	0					
ANR	4213359	Callee	strerror		4213211	0					
ANR	4213360	Identifier	strerror		4213211	0					
ANR	4213361	ArgumentList	errno		4213211	1					
ANR	4213362	Argument	errno		4213211	0					
ANR	4213363	Identifier	errno		4213211	0					
ANR	4213364	ExpressionStatement	result = false	610:2:15120:15134	4213211	1	True				
ANR	4213365	AssignmentExpression	result = false		4213211	0		=			
ANR	4213366	Identifier	result		4213211	0					
ANR	4213367	Identifier	false		4213211	1					
ANR	4213368	ReturnStatement	return result ;	611:2:15138:15151	4213211	2	True				
ANR	4213369	Identifier	result		4213211	0					
ANR	4213370	ExpressionStatement	"cfg = fopen ( Config_file , ""r"" )"	614:1:15158:15187	4213211	11	True				
ANR	4213371	AssignmentExpression	"cfg = fopen ( Config_file , ""r"" )"		4213211	0		=			
ANR	4213372	Identifier	cfg		4213211	0					
ANR	4213373	CallExpression	"fopen ( Config_file , ""r"" )"		4213211	1					
ANR	4213374	Callee	fopen		4213211	0					
ANR	4213375	Identifier	fopen		4213211	0					
ANR	4213376	ArgumentList	Config_file		4213211	1					
ANR	4213377	Argument	Config_file		4213211	0					
ANR	4213378	Identifier	Config_file		4213211	0					
ANR	4213379	Argument	"""r"""		4213211	1					
ANR	4213380	PrimaryExpression	"""r"""		4213211	0					
ANR	4213381	IfStatement	if ( cfg == NULL )		4213211	12					
ANR	4213382	Condition	cfg == NULL	616:6:15196:15206	4213211	0	True				
ANR	4213383	EqualityExpression	cfg == NULL		4213211	0		==			
ANR	4213384	Identifier	cfg		4213211	0					
ANR	4213385	Identifier	NULL		4213211	1					
ANR	4213386	CompoundStatement		38:20:928:928	4213211	1					
ANR	4213387	ExpressionStatement	"fprintf ( LogFileHandle , ""Error opening config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"	617:2:15214:15317	4213211	0	True				
ANR	4213388	CallExpression	"fprintf ( LogFileHandle , ""Error opening config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"		4213211	0					
ANR	4213389	Callee	fprintf		4213211	0					
ANR	4213390	Identifier	fprintf		4213211	0					
ANR	4213391	ArgumentList	LogFileHandle		4213211	1					
ANR	4213392	Argument	LogFileHandle		4213211	0					
ANR	4213393	Identifier	LogFileHandle		4213211	0					
ANR	4213394	Argument	"""Error opening config file '%s'.\\n\\tErr=%s\\n"""		4213211	1					
ANR	4213395	PrimaryExpression	"""Error opening config file '%s'.\\n\\tErr=%s\\n"""		4213211	0					
ANR	4213396	Argument	Config_file		4213211	2					
ANR	4213397	Identifier	Config_file		4213211	0					
ANR	4213398	Argument	strerror ( errno )		4213211	3					
ANR	4213399	CallExpression	strerror ( errno )		4213211	0					
ANR	4213400	Callee	strerror		4213211	0					
ANR	4213401	Identifier	strerror		4213211	0					
ANR	4213402	ArgumentList	errno		4213211	1					
ANR	4213403	Argument	errno		4213211	0					
ANR	4213404	Identifier	errno		4213211	0					
ANR	4213405	ExpressionStatement	fclose ( cfg_out )	619:2:15321:15336	4213211	1	True				
ANR	4213406	CallExpression	fclose ( cfg_out )		4213211	0					
ANR	4213407	Callee	fclose		4213211	0					
ANR	4213408	Identifier	fclose		4213211	0					
ANR	4213409	ArgumentList	cfg_out		4213211	1					
ANR	4213410	Argument	cfg_out		4213211	0					
ANR	4213411	Identifier	cfg_out		4213211	0					
ANR	4213412	ExpressionStatement	result = false	620:2:15340:15354	4213211	2	True				
ANR	4213413	AssignmentExpression	result = false		4213211	0		=			
ANR	4213414	Identifier	result		4213211	0					
ANR	4213415	Identifier	false		4213211	1					
ANR	4213416	ReturnStatement	return result ;	621:2:15358:15371	4213211	3	True				
ANR	4213417	Identifier	result		4213211	0					
ANR	4213418	IfStatement	"if ( 0 != fseek ( cfg , 0 , SEEK_SET ) )"		4213211	13					
ANR	4213419	Condition	"0 != fseek ( cfg , 0 , SEEK_SET )"	625:6:15420:15447	4213211	0	True				
ANR	4213420	EqualityExpression	"0 != fseek ( cfg , 0 , SEEK_SET )"		4213211	0		!=			
ANR	4213421	PrimaryExpression	0		4213211	0					
ANR	4213422	CallExpression	"fseek ( cfg , 0 , SEEK_SET )"		4213211	1					
ANR	4213423	Callee	fseek		4213211	0					
ANR	4213424	Identifier	fseek		4213211	0					
ANR	4213425	ArgumentList	cfg		4213211	1					
ANR	4213426	Argument	cfg		4213211	0					
ANR	4213427	Identifier	cfg		4213211	0					
ANR	4213428	Argument	0		4213211	1					
ANR	4213429	PrimaryExpression	0		4213211	0					
ANR	4213430	Argument	SEEK_SET		4213211	2					
ANR	4213431	Identifier	SEEK_SET		4213211	0					
ANR	4213432	CompoundStatement		47:37:1169:1169	4213211	1					
ANR	4213433	ExpressionStatement	"fprintf ( LogFileHandle , ""Error seeking config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"	626:2:15455:15558	4213211	0	True				
ANR	4213434	CallExpression	"fprintf ( LogFileHandle , ""Error seeking config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"		4213211	0					
ANR	4213435	Callee	fprintf		4213211	0					
ANR	4213436	Identifier	fprintf		4213211	0					
ANR	4213437	ArgumentList	LogFileHandle		4213211	1					
ANR	4213438	Argument	LogFileHandle		4213211	0					
ANR	4213439	Identifier	LogFileHandle		4213211	0					
ANR	4213440	Argument	"""Error seeking config file '%s'.\\n\\tErr=%s\\n"""		4213211	1					
ANR	4213441	PrimaryExpression	"""Error seeking config file '%s'.\\n\\tErr=%s\\n"""		4213211	0					
ANR	4213442	Argument	Config_file		4213211	2					
ANR	4213443	Identifier	Config_file		4213211	0					
ANR	4213444	Argument	strerror ( errno )		4213211	3					
ANR	4213445	CallExpression	strerror ( errno )		4213211	0					
ANR	4213446	Callee	strerror		4213211	0					
ANR	4213447	Identifier	strerror		4213211	0					
ANR	4213448	ArgumentList	errno		4213211	1					
ANR	4213449	Argument	errno		4213211	0					
ANR	4213450	Identifier	errno		4213211	0					
ANR	4213451	ExpressionStatement	result = false	628:2:15562:15576	4213211	1	True				
ANR	4213452	AssignmentExpression	result = false		4213211	0		=			
ANR	4213453	Identifier	result		4213211	0					
ANR	4213454	Identifier	false		4213211	1					
ANR	4213455	ReturnStatement	return result ;	629:2:15580:15593	4213211	2	True				
ANR	4213456	Identifier	result		4213211	0					
ANR	4213457	WhileStatement	while ( 1 )		4213211	14					
ANR	4213458	Condition	1	633:8:15609:15609	4213211	0	True				
ANR	4213459	PrimaryExpression	1		4213211	0					
ANR	4213460	CompoundStatement		55:11:1330:1330	4213211	1					
ANR	4213461	IfStatement	"if ( NULL == fgets ( buf , BUFFERSIZE , cfg ) )"		4213211	0					
ANR	4213462	Condition	"NULL == fgets ( buf , BUFFERSIZE , cfg )"	634:7:15621:15655	4213211	0	True				
ANR	4213463	EqualityExpression	"NULL == fgets ( buf , BUFFERSIZE , cfg )"		4213211	0		==			
ANR	4213464	Identifier	NULL		4213211	0					
ANR	4213465	CallExpression	"fgets ( buf , BUFFERSIZE , cfg )"		4213211	1					
ANR	4213466	Callee	fgets		4213211	0					
ANR	4213467	Identifier	fgets		4213211	0					
ANR	4213468	ArgumentList	buf		4213211	1					
ANR	4213469	Argument	buf		4213211	0					
ANR	4213470	Identifier	buf		4213211	0					
ANR	4213471	Argument	BUFFERSIZE		4213211	1					
ANR	4213472	Identifier	BUFFERSIZE		4213211	0					
ANR	4213473	Argument	cfg		4213211	2					
ANR	4213474	Identifier	cfg		4213211	0					
ANR	4213475	CompoundStatement		56:45:1377:1377	4213211	1					
ANR	4213476	IfStatement	if ( feof ( cfg ) )		4213211	0					
ANR	4213477	Condition	feof ( cfg )	635:7:15668:15676	4213211	0	True				
ANR	4213478	CallExpression	feof ( cfg )		4213211	0					
ANR	4213479	Callee	feof		4213211	0					
ANR	4213480	Identifier	feof		4213211	0					
ANR	4213481	ArgumentList	cfg		4213211	1					
ANR	4213482	Argument	cfg		4213211	0					
ANR	4213483	Identifier	cfg		4213211	0					
ANR	4213484	CompoundStatement		57:18:1397:1397	4213211	1					
ANR	4213485	IfStatement	if ( 0 != fclose ( cfg ) )		4213211	0					
ANR	4213486	Condition	0 != fclose ( cfg )	638:8:15721:15736	4213211	0	True				
ANR	4213487	EqualityExpression	0 != fclose ( cfg )		4213211	0		!=			
ANR	4213488	PrimaryExpression	0		4213211	0					
ANR	4213489	CallExpression	fclose ( cfg )		4213211	1					
ANR	4213490	Callee	fclose		4213211	0					
ANR	4213491	Identifier	fclose		4213211	0					
ANR	4213492	ArgumentList	cfg		4213211	1					
ANR	4213493	Argument	cfg		4213211	0					
ANR	4213494	Identifier	cfg		4213211	0					
ANR	4213495	CompoundStatement		60:26:1457:1457	4213211	1					
ANR	4213496	Statement	fprintf	639:5:15746:15752	4213211	0	True				
ANR	4213497	Statement	(	639:12:15753:15753	4213211	1	True				
ANR	4213498	Statement	LogFileHandle	639:13:15754:15766	4213211	2	True				
ANR	4213499	Statement	","	639:26:15767:15767	4213211	3	True				
ANR	4213500	Statement	"""Error closing config file '%s'.\\n"""	639:28:15769:15803	4213211	4	True				
ANR	4213501	Statement	"""\\tErr=%s\\n"""	640:7:15812:15823	4213211	5	True				
ANR	4213502	Statement	","	640:19:15824:15824	4213211	6	True				
ANR	4213503	Statement	Config_file	640:21:15826:15836	4213211	7	True				
ANR	4213504	Statement	","	640:32:15837:15837	4213211	8	True				
ANR	4213505	Statement	strerror	640:34:15839:15846	4213211	9	True				
ANR	4213506	Statement	(	640:42:15847:15847	4213211	10	True				
ANR	4213507	Statement	errno	640:43:15848:15852	4213211	11	True				
ANR	4213508	Statement	)	640:48:15853:15853	4213211	12	True				
ANR	4213509	Statement	)	640:49:15854:15854	4213211	13	True				
ANR	4213510	ExpressionStatement		640:50:15855:15855	4213211	14	True				
ANR	4213511	ExpressionStatement	result = false	641:5:15862:15876	4213211	15	True				
ANR	4213512	AssignmentExpression	result = false		4213211	0		=			
ANR	4213513	Identifier	result		4213211	0					
ANR	4213514	Identifier	false		4213211	1					
ANR	4213515	IfStatement	if ( ! foundit )		4213211	1					
ANR	4213516	Condition	! foundit	644:9:15894:15901	4213211	0	True				
ANR	4213517	UnaryOperationExpression	! foundit		4213211	0					
ANR	4213518	UnaryOperator	!		4213211	0					
ANR	4213519	Identifier	foundit		4213211	1					
ANR	4213520	CompoundStatement		66:20:1623:1623	4213211	1					
ANR	4213521	ExpressionStatement	fflush ( cfg_out )	646:5:15960:15975	4213211	0	True				
ANR	4213522	CallExpression	fflush ( cfg_out )		4213211	0					
ANR	4213523	Callee	fflush		4213211	0					
ANR	4213524	Identifier	fflush		4213211	0					
ANR	4213525	ArgumentList	cfg_out		4213211	1					
ANR	4213526	Argument	cfg_out		4213211	0					
ANR	4213527	Identifier	cfg_out		4213211	0					
ANR	4213528	IfStatement	"if ( 0 == fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val ) )"		4213211	1					
ANR	4213529	Condition	"0 == fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val )"	647:10:15987:16036	4213211	0	True				
ANR	4213530	EqualityExpression	"0 == fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val )"		4213211	0		==			
ANR	4213531	PrimaryExpression	0		4213211	0					
ANR	4213532	CallExpression	"fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val )"		4213211	1					
ANR	4213533	Callee	fprintf		4213211	0					
ANR	4213534	Identifier	fprintf		4213211	0					
ANR	4213535	ArgumentList	cfg_out		4213211	1					
ANR	4213536	Argument	cfg_out		4213211	0					
ANR	4213537	Identifier	cfg_out		4213211	0					
ANR	4213538	Argument	"""%s = %s\\n"""		4213211	1					
ANR	4213539	PrimaryExpression	"""%s = %s\\n"""		4213211	0					
ANR	4213540	Argument	attribute		4213211	2					
ANR	4213541	Identifier	attribute		4213211	0					
ANR	4213542	Argument	val		4213211	3					
ANR	4213543	Identifier	val		4213211	0					
ANR	4213544	CompoundStatement		69:63:1758:1758	4213211	1					
ANR	4213545	Statement	fprintf	648:6:16048:16054	4213211	0	True				
ANR	4213546	Statement	(	648:13:16055:16055	4213211	1	True				
ANR	4213547	Statement	LogFileHandle	648:14:16056:16068	4213211	2	True				
ANR	4213548	Statement	","	648:27:16069:16069	4213211	3	True				
ANR	4213549	Statement	"""Error appending to config file '%s'.\\n"""	648:29:16071:16110	4213211	4	True				
ANR	4213550	Statement	"""\\tErr=%s\\n"""	649:7:16119:16130	4213211	5	True				
ANR	4213551	Statement	","	649:19:16131:16131	4213211	6	True				
ANR	4213552	Statement	config_file_tmp	649:21:16133:16147	4213211	7	True				
ANR	4213553	Statement	","	649:36:16148:16148	4213211	8	True				
ANR	4213554	Statement	strerror	649:38:16150:16157	4213211	9	True				
ANR	4213555	Statement	(	649:46:16158:16158	4213211	10	True				
ANR	4213556	Statement	errno	649:47:16159:16163	4213211	11	True				
ANR	4213557	Statement	)	649:52:16164:16164	4213211	12	True				
ANR	4213558	Statement	)	649:53:16165:16165	4213211	13	True				
ANR	4213559	ExpressionStatement		649:54:16166:16166	4213211	14	True				
ANR	4213560	ExpressionStatement	result = false	650:6:16174:16188	4213211	15	True				
ANR	4213561	AssignmentExpression	result = false		4213211	0		=			
ANR	4213562	Identifier	result		4213211	0					
ANR	4213563	Identifier	false		4213211	1					
ANR	4213564	IfStatement	if ( 0 != fclose ( cfg_out ) )		4213211	2					
ANR	4213565	Condition	0 != fclose ( cfg_out )	654:8:16212:16231	4213211	0	True				
ANR	4213566	EqualityExpression	0 != fclose ( cfg_out )		4213211	0		!=			
ANR	4213567	PrimaryExpression	0		4213211	0					
ANR	4213568	CallExpression	fclose ( cfg_out )		4213211	1					
ANR	4213569	Callee	fclose		4213211	0					
ANR	4213570	Identifier	fclose		4213211	0					
ANR	4213571	ArgumentList	cfg_out		4213211	1					
ANR	4213572	Argument	cfg_out		4213211	0					
ANR	4213573	Identifier	cfg_out		4213211	0					
ANR	4213574	CompoundStatement		76:30:1952:1952	4213211	1					
ANR	4213575	Statement	fprintf	655:5:16241:16247	4213211	0	True				
ANR	4213576	Statement	(	655:12:16248:16248	4213211	1	True				
ANR	4213577	Statement	LogFileHandle	655:13:16249:16261	4213211	2	True				
ANR	4213578	Statement	","	655:26:16262:16262	4213211	3	True				
ANR	4213579	Statement	"""Error closing temp config file '%s'.\\n"""	655:28:16264:16303	4213211	4	True				
ANR	4213580	Statement	"""\\tErr=%s\\n"""	656:7:16312:16323	4213211	5	True				
ANR	4213581	Statement	","	656:19:16324:16324	4213211	6	True				
ANR	4213582	Statement	config_file_tmp	656:21:16326:16340	4213211	7	True				
ANR	4213583	Statement	","	656:36:16341:16341	4213211	8	True				
ANR	4213584	Statement	strerror	656:38:16343:16350	4213211	9	True				
ANR	4213585	Statement	(	656:46:16351:16351	4213211	10	True				
ANR	4213586	Statement	errno	656:47:16352:16356	4213211	11	True				
ANR	4213587	Statement	)	656:52:16357:16357	4213211	12	True				
ANR	4213588	Statement	)	656:53:16358:16358	4213211	13	True				
ANR	4213589	ExpressionStatement		656:54:16359:16359	4213211	14	True				
ANR	4213590	ExpressionStatement	result = false	657:5:16366:16380	4213211	15	True				
ANR	4213591	AssignmentExpression	result = false		4213211	0		=			
ANR	4213592	Identifier	result		4213211	0					
ANR	4213593	Identifier	false		4213211	1					
ANR	4213594	IfStatement	if ( 0 != remove ( Config_file ) )		4213211	3					
ANR	4213595	Condition	0 != remove ( Config_file )	660:8:16397:16420	4213211	0	True				
ANR	4213596	EqualityExpression	0 != remove ( Config_file )		4213211	0		!=			
ANR	4213597	PrimaryExpression	0		4213211	0					
ANR	4213598	CallExpression	remove ( Config_file )		4213211	1					
ANR	4213599	Callee	remove		4213211	0					
ANR	4213600	Identifier	remove		4213211	0					
ANR	4213601	ArgumentList	Config_file		4213211	1					
ANR	4213602	Argument	Config_file		4213211	0					
ANR	4213603	Identifier	Config_file		4213211	0					
ANR	4213604	CompoundStatement		82:35:2142:2142	4213211	1					
ANR	4213605	Statement	fprintf	661:5:16431:16437	4213211	0	True				
ANR	4213606	Statement	(	661:12:16438:16438	4213211	1	True				
ANR	4213607	Statement	LogFileHandle	661:13:16439:16451	4213211	2	True				
ANR	4213608	Statement	","	661:26:16452:16452	4213211	3	True				
ANR	4213609	Statement	"""Error removing old config file '%s'.\\n"""	661:28:16454:16493	4213211	4	True				
ANR	4213610	Statement	"""\\tErr=%s\\n"""	662:7:16502:16513	4213211	5	True				
ANR	4213611	Statement	","	662:19:16514:16514	4213211	6	True				
ANR	4213612	Statement	Config_file	662:21:16516:16526	4213211	7	True				
ANR	4213613	Statement	","	662:32:16527:16527	4213211	8	True				
ANR	4213614	Statement	strerror	662:34:16529:16536	4213211	9	True				
ANR	4213615	Statement	(	662:42:16537:16537	4213211	10	True				
ANR	4213616	Statement	errno	662:43:16538:16542	4213211	11	True				
ANR	4213617	Statement	)	662:48:16543:16543	4213211	12	True				
ANR	4213618	Statement	)	662:49:16544:16544	4213211	13	True				
ANR	4213619	ExpressionStatement		662:50:16545:16545	4213211	14	True				
ANR	4213620	ElseStatement	else		4213211	0					
ANR	4213621	IfStatement	"if ( 0 != rename ( config_file_tmp , Config_file ) )"		4213211	0					
ANR	4213622	Condition	"0 != rename ( config_file_tmp , Config_file )"	663:15:16562:16602	4213211	0	True				
ANR	4213623	EqualityExpression	"0 != rename ( config_file_tmp , Config_file )"		4213211	0		!=			
ANR	4213624	PrimaryExpression	0		4213211	0					
ANR	4213625	CallExpression	"rename ( config_file_tmp , Config_file )"		4213211	1					
ANR	4213626	Callee	rename		4213211	0					
ANR	4213627	Identifier	rename		4213211	0					
ANR	4213628	ArgumentList	config_file_tmp		4213211	1					
ANR	4213629	Argument	config_file_tmp		4213211	0					
ANR	4213630	Identifier	config_file_tmp		4213211	0					
ANR	4213631	Argument	Config_file		4213211	1					
ANR	4213632	Identifier	Config_file		4213211	0					
ANR	4213633	CompoundStatement		85:59:2324:2324	4213211	1					
ANR	4213634	Statement	fprintf	664:5:16613:16619	4213211	0	True				
ANR	4213635	Statement	(	664:12:16620:16620	4213211	1	True				
ANR	4213636	Statement	LogFileHandle	664:13:16621:16633	4213211	2	True				
ANR	4213637	Statement	","	664:26:16634:16634	4213211	3	True				
ANR	4213638	Statement	"""Error moving new config file '%s' to """	664:28:16636:16674	4213211	4	True				
ANR	4213639	Statement	"""'%s'.\\n\\tErr=%s\\n"""	665:7:16683:16701	4213211	5	True				
ANR	4213640	Statement	","	665:26:16702:16702	4213211	6	True				
ANR	4213641	Statement	config_file_tmp	665:28:16704:16718	4213211	7	True				
ANR	4213642	Statement	","	665:43:16719:16719	4213211	8	True				
ANR	4213643	Statement	Config_file	665:45:16721:16731	4213211	9	True				
ANR	4213644	Statement	","	665:56:16732:16732	4213211	10	True				
ANR	4213645	Statement	strerror	666:10:16744:16751	4213211	11	True				
ANR	4213646	Statement	(	666:18:16752:16752	4213211	12	True				
ANR	4213647	Statement	errno	666:19:16753:16757	4213211	13	True				
ANR	4213648	Statement	)	666:24:16758:16758	4213211	14	True				
ANR	4213649	Statement	)	666:25:16759:16759	4213211	15	True				
ANR	4213650	ExpressionStatement		666:26:16760:16760	4213211	16	True				
ANR	4213651	BreakStatement	break ;	668:4:16772:16777	4213211	4	True				
ANR	4213652	ElseStatement	else		4213211	0					
ANR	4213653	CompoundStatement		92:10:2508:2508	4213211	0					
ANR	4213654	ExpressionStatement	"fprintf ( LogFileHandle , ""Error reading config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"	671:4:16796:16900	4213211	0	True				
ANR	4213655	CallExpression	"fprintf ( LogFileHandle , ""Error reading config file '%s'.\\n\\tErr=%s\\n"" , Config_file , strerror ( errno ) )"		4213211	0					
ANR	4213656	Callee	fprintf		4213211	0					
ANR	4213657	Identifier	fprintf		4213211	0					
ANR	4213658	ArgumentList	LogFileHandle		4213211	1					
ANR	4213659	Argument	LogFileHandle		4213211	0					
ANR	4213660	Identifier	LogFileHandle		4213211	0					
ANR	4213661	Argument	"""Error reading config file '%s'.\\n\\tErr=%s\\n"""		4213211	1					
ANR	4213662	PrimaryExpression	"""Error reading config file '%s'.\\n\\tErr=%s\\n"""		4213211	0					
ANR	4213663	Argument	Config_file		4213211	2					
ANR	4213664	Identifier	Config_file		4213211	0					
ANR	4213665	Argument	strerror ( errno )		4213211	3					
ANR	4213666	CallExpression	strerror ( errno )		4213211	0					
ANR	4213667	Callee	strerror		4213211	0					
ANR	4213668	Identifier	strerror		4213211	0					
ANR	4213669	ArgumentList	errno		4213211	1					
ANR	4213670	Argument	errno		4213211	0					
ANR	4213671	Identifier	errno		4213211	0					
ANR	4213672	ReturnStatement	return result ;	674:3:16910:16923	4213211	1	True				
ANR	4213673	Identifier	result		4213211	0					
ANR	4213674	IfStatement	"if ( ! foundit && attribute_matches ( buf , attribute ) )"		4213211	1					
ANR	4213675	Condition	"! foundit && attribute_matches ( buf , attribute )"	677:7:16937:16981	4213211	0	True				
ANR	4213676	AndExpression	"! foundit && attribute_matches ( buf , attribute )"		4213211	0		&&			
ANR	4213677	UnaryOperationExpression	! foundit		4213211	0					
ANR	4213678	UnaryOperator	!		4213211	0					
ANR	4213679	Identifier	foundit		4213211	1					
ANR	4213680	CallExpression	"attribute_matches ( buf , attribute )"		4213211	1					
ANR	4213681	Callee	attribute_matches		4213211	0					
ANR	4213682	Identifier	attribute_matches		4213211	0					
ANR	4213683	ArgumentList	buf		4213211	1					
ANR	4213684	Argument	buf		4213211	0					
ANR	4213685	Identifier	buf		4213211	0					
ANR	4213686	Argument	attribute		4213211	1					
ANR	4213687	Identifier	attribute		4213211	0					
ANR	4213688	CompoundStatement		99:55:2703:2703	4213211	1					
ANR	4213689	ExpressionStatement	fflush ( cfg_out )	678:3:16990:17005	4213211	0	True				
ANR	4213690	CallExpression	fflush ( cfg_out )		4213211	0					
ANR	4213691	Callee	fflush		4213211	0					
ANR	4213692	Identifier	fflush		4213211	0					
ANR	4213693	ArgumentList	cfg_out		4213211	1					
ANR	4213694	Argument	cfg_out		4213211	0					
ANR	4213695	Identifier	cfg_out		4213211	0					
ANR	4213696	IfStatement	"if ( 0 == fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val ) )"		4213211	1					
ANR	4213697	Condition	"0 == fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val )"	679:7:17014:17063	4213211	0	True				
ANR	4213698	EqualityExpression	"0 == fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val )"		4213211	0		==			
ANR	4213699	PrimaryExpression	0		4213211	0					
ANR	4213700	CallExpression	"fprintf ( cfg_out , ""%s = %s\\n"" , attribute , val )"		4213211	1					
ANR	4213701	Callee	fprintf		4213211	0					
ANR	4213702	Identifier	fprintf		4213211	0					
ANR	4213703	ArgumentList	cfg_out		4213211	1					
ANR	4213704	Argument	cfg_out		4213211	0					
ANR	4213705	Identifier	cfg_out		4213211	0					
ANR	4213706	Argument	"""%s = %s\\n"""		4213211	1					
ANR	4213707	PrimaryExpression	"""%s = %s\\n"""		4213211	0					
ANR	4213708	Argument	attribute		4213211	2					
ANR	4213709	Identifier	attribute		4213211	0					
ANR	4213710	Argument	val		4213211	3					
ANR	4213711	Identifier	val		4213211	0					
ANR	4213712	CompoundStatement		101:59:2784:2784	4213211	1					
ANR	4213713	Statement	fprintf	680:4:17072:17078	4213211	0	True				
ANR	4213714	Statement	(	680:11:17079:17079	4213211	1	True				
ANR	4213715	Statement	LogFileHandle	680:12:17080:17092	4213211	2	True				
ANR	4213716	Statement	","	680:25:17093:17093	4213211	3	True				
ANR	4213717	Statement	"""Error writing to config file '%s'.\\n"""	680:27:17095:17132	4213211	4	True				
ANR	4213718	Statement	"""\\tErr=%s\\n"""	681:5:17139:17150	4213211	5	True				
ANR	4213719	Statement	","	681:17:17151:17151	4213211	6	True				
ANR	4213720	Statement	config_file_tmp	681:19:17153:17167	4213211	7	True				
ANR	4213721	Statement	","	681:34:17168:17168	4213211	8	True				
ANR	4213722	Statement	strerror	681:36:17170:17177	4213211	9	True				
ANR	4213723	Statement	(	681:44:17178:17178	4213211	10	True				
ANR	4213724	Statement	errno	681:45:17179:17183	4213211	11	True				
ANR	4213725	Statement	)	681:50:17184:17184	4213211	12	True				
ANR	4213726	Statement	)	681:51:17185:17185	4213211	13	True				
ANR	4213727	ExpressionStatement		681:52:17186:17186	4213211	14	True				
ANR	4213728	ExpressionStatement	result = false	682:4:17192:17206	4213211	15	True				
ANR	4213729	AssignmentExpression	result = false		4213211	0		=			
ANR	4213730	Identifier	result		4213211	0					
ANR	4213731	Identifier	false		4213211	1					
ANR	4213732	ExpressionStatement	foundit = true	684:3:17216:17230	4213211	2	True				
ANR	4213733	AssignmentExpression	foundit = true		4213211	0		=			
ANR	4213734	Identifier	foundit		4213211	0					
ANR	4213735	Identifier	true		4213211	1					
ANR	4213736	ElseStatement	else		4213211	0					
ANR	4213737	CompoundStatement		107:9:2959:2959	4213211	0					
ANR	4213738	IfStatement	"if ( 0 == fprintf ( cfg_out , ""%s"" , buf ) )"		4213211	0					
ANR	4213739	Condition	"0 == fprintf ( cfg_out , ""%s"" , buf )"	687:8:17268:17299	4213211	0	True				
ANR	4213740	EqualityExpression	"0 == fprintf ( cfg_out , ""%s"" , buf )"		4213211	0		==			
ANR	4213741	PrimaryExpression	0		4213211	0					
ANR	4213742	CallExpression	"fprintf ( cfg_out , ""%s"" , buf )"		4213211	1					
ANR	4213743	Callee	fprintf		4213211	0					
ANR	4213744	Identifier	fprintf		4213211	0					
ANR	4213745	ArgumentList	cfg_out		4213211	1					
ANR	4213746	Argument	cfg_out		4213211	0					
ANR	4213747	Identifier	cfg_out		4213211	0					
ANR	4213748	Argument	"""%s"""		4213211	1					
ANR	4213749	PrimaryExpression	"""%s"""		4213211	0					
ANR	4213750	Argument	buf		4213211	2					
ANR	4213751	Identifier	buf		4213211	0					
ANR	4213752	CompoundStatement		109:43:3021:3021	4213211	1					
ANR	4213753	Statement	fprintf	688:4:17309:17315	4213211	0	True				
ANR	4213754	Statement	(	688:11:17316:17316	4213211	1	True				
ANR	4213755	Statement	LogFileHandle	688:12:17317:17329	4213211	2	True				
ANR	4213756	Statement	","	688:25:17330:17330	4213211	3	True				
ANR	4213757	Statement	"""Error writing to config file '%s'.\\n"""	688:27:17332:17369	4213211	4	True				
ANR	4213758	Statement	"""\\tErr=%s\\n"""	689:5:17376:17387	4213211	5	True				
ANR	4213759	Statement	","	689:17:17388:17388	4213211	6	True				
ANR	4213760	Statement	config_file_tmp	689:19:17390:17404	4213211	7	True				
ANR	4213761	Statement	","	689:34:17405:17405	4213211	8	True				
ANR	4213762	Statement	strerror	689:36:17407:17414	4213211	9	True				
ANR	4213763	Statement	(	689:44:17415:17415	4213211	10	True				
ANR	4213764	Statement	errno	689:45:17416:17420	4213211	11	True				
ANR	4213765	Statement	)	689:50:17421:17421	4213211	12	True				
ANR	4213766	Statement	)	689:51:17422:17422	4213211	13	True				
ANR	4213767	ExpressionStatement		689:52:17423:17423	4213211	14	True				
ANR	4213768	ExpressionStatement	result = false	690:4:17429:17443	4213211	15	True				
ANR	4213769	AssignmentExpression	result = false		4213211	0		=			
ANR	4213770	Identifier	result		4213211	0					
ANR	4213771	Identifier	false		4213211	1					
ANR	4213772	ReturnStatement	return result ;	695:1:17459:17472	4213211	15	True				
ANR	4213773	Identifier	result		4213211	0					
ANR	4213774	ReturnType	bool		4213211	1					
ANR	4213775	Identifier	set_option		4213211	2					
ANR	4213776	ParameterList	"const char * attribute , const char * val"		4213211	3					
ANR	4213777	Parameter	const char * attribute	579:11:14241:14261	4213211	0	True				
ANR	4213778	ParameterType	const char *		4213211	0					
ANR	4213779	Identifier	attribute		4213211	1					
ANR	4213780	Parameter	const char * val	579:34:14264:14278	4213211	1	True				
ANR	4213781	ParameterType	const char *		4213211	0					
ANR	4213782	Identifier	val		4213211	1					
ANR	4213783	CFGEntryNode	ENTRY		4213211		True				
ANR	4213784	CFGExitNode	EXIT		4213211		True				
ANR	4213785	Symbol	fseek		4213211						
ANR	4213786	Symbol	fgets		4213211						
ANR	4213787	Symbol	remove		4213211						
ANR	4213788	Symbol	attribute_matches		4213211						
ANR	4213789	Symbol	result		4213211						
ANR	4213790	Symbol	BUFFERSIZE		4213211						
ANR	4213791	Symbol	Config_file		4213211						
ANR	4213792	Symbol	LogFileHandle		4213211						
ANR	4213793	Symbol	attribute		4213211						
ANR	4213794	Symbol	cfg_out		4213211						
ANR	4213795	Symbol	val		4213211						
ANR	4213796	Symbol	SEEK_SET		4213211						
ANR	4213797	Symbol	fopen		4213211						
ANR	4213798	Symbol	errno		4213211						
ANR	4213799	Symbol	NULL		4213211						
ANR	4213800	Symbol	foundit		4213211						
ANR	4213801	Symbol	cfg		4213211						
ANR	4213802	Symbol	tempnam		4213211						
ANR	4213803	Symbol	fclose		4213211						
ANR	4213804	Symbol	false		4213211						
ANR	4213805	Symbol	fprintf		4213211						
ANR	4213806	Symbol	strerror		4213211						
ANR	4213807	Symbol	buf		4213211						
ANR	4213808	Symbol	rename		4213211						
ANR	4213809	Symbol	config_file_tmp		4213211						
ANR	4213810	Symbol	true		4213211						
ANR	4213811	Symbol	feof		4213211						
ANR	4213812	Symbol	setup_config_file		4213211						
ANR	4213813	Function	set_int_option	698:0:17477:17774							
ANR	4213814	FunctionDef	"set_int_option (const char * attribute , const int val)"		4213813	0					
ANR	4213815	CompoundStatement		699:53:17535:17774	4213813	0					
ANR	4213816	IdentifierDeclStatement	char buf [ 64 ] ;	700:1:17538:17550	4213813	0	True				
ANR	4213817	IdentifierDecl	buf [ 64 ]		4213813	0					
ANR	4213818	IdentifierDeclType	char [ 64 ]		4213813	0					
ANR	4213819	Identifier	buf		4213813	1					
ANR	4213820	PrimaryExpression	64		4213813	2					
ANR	4213821	IfStatement	"if ( 0 > snprintf ( buf , 63 , ""%d"" , val ) )"		4213813	1					
ANR	4213822	Condition	"0 > snprintf ( buf , 63 , ""%d"" , val )"	702:6:17559:17590	4213813	0	True				
ANR	4213823	RelationalExpression	"0 > snprintf ( buf , 63 , ""%d"" , val )"		4213813	0		>			
ANR	4213824	PrimaryExpression	0		4213813	0					
ANR	4213825	CallExpression	"snprintf ( buf , 63 , ""%d"" , val )"		4213813	1					
ANR	4213826	Callee	snprintf		4213813	0					
ANR	4213827	Identifier	snprintf		4213813	0					
ANR	4213828	ArgumentList	buf		4213813	1					
ANR	4213829	Argument	buf		4213813	0					
ANR	4213830	Identifier	buf		4213813	0					
ANR	4213831	Argument	63		4213813	1					
ANR	4213832	PrimaryExpression	63		4213813	0					
ANR	4213833	Argument	"""%d"""		4213813	2					
ANR	4213834	PrimaryExpression	"""%d"""		4213813	0					
ANR	4213835	Argument	val		4213813	3					
ANR	4213836	Identifier	val		4213813	0					
ANR	4213837	CompoundStatement		4:41:58:58	4213813	1					
ANR	4213838	Statement	fprintf	703:2:17598:17604	4213813	0	True				
ANR	4213839	Statement	(	703:9:17605:17605	4213813	1	True				
ANR	4213840	Statement	LogFileHandle	703:10:17606:17618	4213813	2	True				
ANR	4213841	Statement	","	703:23:17619:17619	4213813	3	True				
ANR	4213842	Statement	"""Error setting option '%s' to '%d'.\\n\\t"""	703:25:17621:17660	4213813	4	True				
ANR	4213843	Statement	"""Integer too big!!\\n"""	704:6:17668:17688	4213813	5	True				
ANR	4213844	Statement	","	704:27:17689:17689	4213813	6	True				
ANR	4213845	Statement	attribute	704:29:17691:17699	4213813	7	True				
ANR	4213846	Statement	","	704:38:17700:17700	4213813	8	True				
ANR	4213847	Statement	val	704:40:17702:17704	4213813	9	True				
ANR	4213848	Statement	)	704:43:17705:17705	4213813	10	True				
ANR	4213849	ExpressionStatement		704:44:17706:17706	4213813	11	True				
ANR	4213850	ReturnStatement	return false ;	705:2:17710:17722	4213813	12	True				
ANR	4213851	Identifier	false		4213813	0					
ANR	4213852	ElseStatement	else		4213813	0					
ANR	4213853	CompoundStatement		8:8:196:196	4213813	0					
ANR	4213854	ReturnStatement	"return set_option ( attribute , buf ) ;"	707:2:17736:17769	4213813	0	True				
ANR	4213855	CallExpression	"set_option ( attribute , buf )"		4213813	0					
ANR	4213856	Callee	set_option		4213813	0					
ANR	4213857	Identifier	set_option		4213813	0					
ANR	4213858	ArgumentList	attribute		4213813	1					
ANR	4213859	Argument	attribute		4213813	0					
ANR	4213860	Identifier	attribute		4213813	0					
ANR	4213861	Argument	buf		4213813	1					
ANR	4213862	Identifier	buf		4213813	0					
ANR	4213863	ReturnType	bool		4213813	1					
ANR	4213864	Identifier	set_int_option		4213813	2					
ANR	4213865	ParameterList	"const char * attribute , const int val"		4213813	3					
ANR	4213866	Parameter	const char * attribute	699:15:17497:17517	4213813	0	True				
ANR	4213867	ParameterType	const char *		4213813	0					
ANR	4213868	Identifier	attribute		4213813	1					
ANR	4213869	Parameter	const int val	699:38:17520:17532	4213813	1	True				
ANR	4213870	ParameterType	const int		4213813	0					
ANR	4213871	Identifier	val		4213813	1					
ANR	4213872	CFGEntryNode	ENTRY		4213813		True				
ANR	4213873	CFGExitNode	EXIT		4213813		True				
ANR	4213874	Symbol	val		4213813						
ANR	4213875	Symbol	buf		4213813						
ANR	4213876	Symbol	set_option		4213813						
ANR	4213877	Symbol	false		4213813						
ANR	4213878	Symbol	attribute		4213813						
ANR	4213879	Symbol	snprintf		4213813						
ANR	4213880	Function	append_option	711:0:17777:17853							
ANR	4213881	FunctionDef	"append_option (const char * attribute , const char * val)"		4213880	0					
ANR	4213882	CompoundStatement		712:54:17836:17853	4213880	0					
ANR	4213883	ReturnStatement	return false ;	713:1:17839:17851	4213880	0	True				
ANR	4213884	Identifier	false		4213880	0					
ANR	4213885	ReturnType	bool		4213880	1					
ANR	4213886	Identifier	append_option		4213880	2					
ANR	4213887	ParameterList	"const char * attribute , const char * val"		4213880	3					
ANR	4213888	Parameter	const char * attribute	712:14:17796:17816	4213880	0	True				
ANR	4213889	ParameterType	const char *		4213880	0					
ANR	4213890	Identifier	attribute		4213880	1					
ANR	4213891	Parameter	const char * val	712:37:17819:17833	4213880	1	True				
ANR	4213892	ParameterType	const char *		4213880	0					
ANR	4213893	Identifier	val		4213880	1					
ANR	4213894	CFGEntryNode	ENTRY		4213880		True				
ANR	4213895	CFGExitNode	EXIT		4213880		True				
ANR	4213896	Symbol	val		4213880						
ANR	4213897	Symbol	false		4213880						
ANR	4213898	Symbol	attribute		4213880						
ANR	4213899	Function	attribute_matches	716:0:17856:18809							
ANR	4213900	FunctionDef	"attribute_matches (const char * string , const char * attr)"		4213899	0					
ANR	4213901	CompoundStatement		717:58:17919:18809	4213899	0					
ANR	4213902	IdentifierDeclStatement	"int i , j , attr_len ;"	719:1:17923:17941	4213899	0	True				
ANR	4213903	IdentifierDecl	i		4213899	0					
ANR	4213904	IdentifierDeclType	int		4213899	0					
ANR	4213905	Identifier	i		4213899	1					
ANR	4213906	IdentifierDecl	j		4213899	1					
ANR	4213907	IdentifierDeclType	int		4213899	0					
ANR	4213908	Identifier	j		4213899	1					
ANR	4213909	IdentifierDecl	attr_len		4213899	2					
ANR	4213910	IdentifierDeclType	int		4213899	0					
ANR	4213911	Identifier	attr_len		4213899	1					
ANR	4213912	IdentifierDeclStatement	char * buf ;	720:1:17944:17953	4213899	1	True				
ANR	4213913	IdentifierDecl	* buf		4213899	0					
ANR	4213914	IdentifierDeclType	char *		4213899	0					
ANR	4213915	Identifier	buf		4213899	1					
ANR	4213916	IdentifierDeclStatement	bool matches ;	721:1:17956:17968	4213899	2	True				
ANR	4213917	IdentifierDecl	matches		4213899	0					
ANR	4213918	IdentifierDeclType	bool		4213899	0					
ANR	4213919	Identifier	matches		4213899	1					
ANR	4213920	ExpressionStatement	matches = false	723:1:17972:17987	4213899	3	True				
ANR	4213921	AssignmentExpression	matches = false		4213899	0		=			
ANR	4213922	Identifier	matches		4213899	0					
ANR	4213923	Identifier	false		4213899	1					
ANR	4213924	ExpressionStatement	i = j = 0	724:1:17990:17999	4213899	4	True				
ANR	4213925	AssignmentExpression	i = j = 0		4213899	0		=			
ANR	4213926	Identifier	i		4213899	0					
ANR	4213927	AssignmentExpression	j = 0		4213899	1		=			
ANR	4213928	Identifier	j		4213899	0					
ANR	4213929	PrimaryExpression	0		4213899	1					
ANR	4213930	ExpressionStatement	attr_len = strlen ( string )	725:1:18002:18027	4213899	5	True				
ANR	4213931	AssignmentExpression	attr_len = strlen ( string )		4213899	0		=			
ANR	4213932	Identifier	attr_len		4213899	0					
ANR	4213933	CallExpression	strlen ( string )		4213899	1					
ANR	4213934	Callee	strlen		4213899	0					
ANR	4213935	Identifier	strlen		4213899	0					
ANR	4213936	ArgumentList	string		4213899	1					
ANR	4213937	Argument	string		4213899	0					
ANR	4213938	Identifier	string		4213899	0					
ANR	4213939	ExpressionStatement	buf = ( char * ) malloc ( ( attr_len + 1 ) * sizeof ( char ) )	726:1:18030:18076	4213899	6	True				
ANR	4213940	AssignmentExpression	buf = ( char * ) malloc ( ( attr_len + 1 ) * sizeof ( char ) )		4213899	0		=			
ANR	4213941	Identifier	buf		4213899	0					
ANR	4213942	CastExpression	( char * ) malloc ( ( attr_len + 1 ) * sizeof ( char ) )		4213899	1					
ANR	4213943	CastTarget	char *		4213899	0					
ANR	4213944	CallExpression	malloc ( ( attr_len + 1 ) * sizeof ( char ) )		4213899	1					
ANR	4213945	Callee	malloc		4213899	0					
ANR	4213946	Identifier	malloc		4213899	0					
ANR	4213947	ArgumentList	( attr_len + 1 ) * sizeof ( char )		4213899	1					
ANR	4213948	Argument	( attr_len + 1 ) * sizeof ( char )		4213899	0					
ANR	4213949	MultiplicativeExpression	( attr_len + 1 ) * sizeof ( char )		4213899	0		*			
ANR	4213950	AdditiveExpression	attr_len + 1		4213899	0		+			
ANR	4213951	Identifier	attr_len		4213899	0					
ANR	4213952	PrimaryExpression	1		4213899	1					
ANR	4213953	SizeofExpression	sizeof ( char )		4213899	1					
ANR	4213954	Sizeof	sizeof		4213899	0					
ANR	4213955	SizeofOperand	char		4213899	1					
ANR	4213956	ForStatement	for ( ; string [ i ] ; i ++ )		4213899	7					
ANR	4213957	Condition	string [ i ]	728:8:18087:18095	4213899	0	True				
ANR	4213958	ArrayIndexing	string [ i ]		4213899	0					
ANR	4213959	Identifier	string		4213899	0					
ANR	4213960	Identifier	i		4213899	1					
ANR	4213961	PostIncDecOperationExpression	i ++	728:19:18098:18100	4213899	1	True				
ANR	4213962	Identifier	i		4213899	0					
ANR	4213963	IncDec	++		4213899	1					
ANR	4213964	CompoundStatement		12:25:184:184	4213899	2					
ANR	4213965	IfStatement	if ( ( string [ i ] == '\\n' ) || ( string [ i ] == '#' ) || ( string [ i ] == '=' ) || ( ( string [ i ] == '\\\\' ) && ( string [ i + 1 ] == '\\n' ) ) || ( ( string [ i ] == ' ' ) && ( j > 0 ) ) || ( ( string [ i ] == '\\t' ) && ( j > 0 ) ) )		4213899	0					
ANR	4213966	Condition	( string [ i ] == '\\n' ) || ( string [ i ] == '#' ) || ( string [ i ] == '=' ) || ( ( string [ i ] == '\\\\' ) && ( string [ i + 1 ] == '\\n' ) ) || ( ( string [ i ] == ' ' ) && ( j > 0 ) ) || ( ( string [ i ] == '\\t' ) && ( j > 0 ) )	731:7:18182:18486	4213899	0	True				
ANR	4213967	OrExpression	( string [ i ] == '\\n' ) || ( string [ i ] == '#' ) || ( string [ i ] == '=' ) || ( ( string [ i ] == '\\\\' ) && ( string [ i + 1 ] == '\\n' ) ) || ( ( string [ i ] == ' ' ) && ( j > 0 ) ) || ( ( string [ i ] == '\\t' ) && ( j > 0 ) )		4213899	0		||			
ANR	4213968	EqualityExpression	string [ i ] == '\\n'		4213899	0		==			
ANR	4213969	ArrayIndexing	string [ i ]		4213899	0					
ANR	4213970	Identifier	string		4213899	0					
ANR	4213971	Identifier	i		4213899	1					
ANR	4213972	PrimaryExpression	'\\n'		4213899	1					
ANR	4213973	OrExpression	( string [ i ] == '#' ) || ( string [ i ] == '=' ) || ( ( string [ i ] == '\\\\' ) && ( string [ i + 1 ] == '\\n' ) ) || ( ( string [ i ] == ' ' ) && ( j > 0 ) ) || ( ( string [ i ] == '\\t' ) && ( j > 0 ) )		4213899	1		||			
ANR	4213974	EqualityExpression	string [ i ] == '#'		4213899	0		==			
ANR	4213975	ArrayIndexing	string [ i ]		4213899	0					
ANR	4213976	Identifier	string		4213899	0					
ANR	4213977	Identifier	i		4213899	1					
ANR	4213978	PrimaryExpression	'#'		4213899	1					
ANR	4213979	OrExpression	( string [ i ] == '=' ) || ( ( string [ i ] == '\\\\' ) && ( string [ i + 1 ] == '\\n' ) ) || ( ( string [ i ] == ' ' ) && ( j > 0 ) ) || ( ( string [ i ] == '\\t' ) && ( j > 0 ) )		4213899	1		||			
ANR	4213980	EqualityExpression	string [ i ] == '='		4213899	0		==			
ANR	4213981	ArrayIndexing	string [ i ]		4213899	0					
ANR	4213982	Identifier	string		4213899	0					
ANR	4213983	Identifier	i		4213899	1					
ANR	4213984	PrimaryExpression	'='		4213899	1					
ANR	4213985	OrExpression	( ( string [ i ] == '\\\\' ) && ( string [ i + 1 ] == '\\n' ) ) || ( ( string [ i ] == ' ' ) && ( j > 0 ) ) || ( ( string [ i ] == '\\t' ) && ( j > 0 ) )		4213899	1		||			
ANR	4213986	AndExpression	( string [ i ] == '\\\\' ) && ( string [ i + 1 ] == '\\n' )		4213899	0		&&			
ANR	4213987	EqualityExpression	string [ i ] == '\\\\'		4213899	0		==			
ANR	4213988	ArrayIndexing	string [ i ]		4213899	0					
ANR	4213989	Identifier	string		4213899	0					
ANR	4213990	Identifier	i		4213899	1					
ANR	4213991	PrimaryExpression	'\\\\'		4213899	1					
ANR	4213992	EqualityExpression	string [ i + 1 ] == '\\n'		4213899	1		==			
ANR	4213993	ArrayIndexing	string [ i + 1 ]		4213899	0					
ANR	4213994	Identifier	string		4213899	0					
ANR	4213995	AdditiveExpression	i + 1		4213899	1		+			
ANR	4213996	Identifier	i		4213899	0					
ANR	4213997	PrimaryExpression	1		4213899	1					
ANR	4213998	PrimaryExpression	'\\n'		4213899	1					
ANR	4213999	OrExpression	( ( string [ i ] == ' ' ) && ( j > 0 ) ) || ( ( string [ i ] == '\\t' ) && ( j > 0 ) )		4213899	1		||			
ANR	4214000	AndExpression	( string [ i ] == ' ' ) && ( j > 0 )		4213899	0		&&			
ANR	4214001	EqualityExpression	string [ i ] == ' '		4213899	0		==			
ANR	4214002	ArrayIndexing	string [ i ]		4213899	0					
ANR	4214003	Identifier	string		4213899	0					
ANR	4214004	Identifier	i		4213899	1					
ANR	4214005	PrimaryExpression	' '		4213899	1					
ANR	4214006	RelationalExpression	j > 0		4213899	1		>			
ANR	4214007	Identifier	j		4213899	0					
ANR	4214008	PrimaryExpression	0		4213899	1					
ANR	4214009	AndExpression	( string [ i ] == '\\t' ) && ( j > 0 )		4213899	1		&&			
ANR	4214010	EqualityExpression	string [ i ] == '\\t'		4213899	0		==			
ANR	4214011	ArrayIndexing	string [ i ]		4213899	0					
ANR	4214012	Identifier	string		4213899	0					
ANR	4214013	Identifier	i		4213899	1					
ANR	4214014	PrimaryExpression	'\\t'		4213899	1					
ANR	4214015	RelationalExpression	j > 0		4213899	1		>			
ANR	4214016	Identifier	j		4213899	0					
ANR	4214017	PrimaryExpression	0		4213899	1					
ANR	4214018	CompoundStatement		29:5:574:574	4213899	1					
ANR	4214019	BreakStatement	break ;	746:4:18500:18505	4213899	0	True				
ANR	4214020	IfStatement	if ( string [ i ] == ' ' )		4213899	1					
ANR	4214021	Condition	string [ i ] == ' '	750:7:18554:18569	4213899	0	True				
ANR	4214022	EqualityExpression	string [ i ] == ' '		4213899	0		==			
ANR	4214023	ArrayIndexing	string [ i ]		4213899	0					
ANR	4214024	Identifier	string		4213899	0					
ANR	4214025	Identifier	i		4213899	1					
ANR	4214026	PrimaryExpression	' '		4213899	1					
ANR	4214027	CompoundStatement		34:26:653:653	4213899	1					
ANR	4214028	ContinueStatement	continue ;	750:28:18575:18583	4213899	0	True				
ANR	4214029	IfStatement	if ( string [ i ] == '\\t' )		4213899	2					
ANR	4214030	Condition	string [ i ] == '\\t'	751:7:18594:18610	4213899	0	True				
ANR	4214031	EqualityExpression	string [ i ] == '\\t'		4213899	0		==			
ANR	4214032	ArrayIndexing	string [ i ]		4213899	0					
ANR	4214033	Identifier	string		4213899	0					
ANR	4214034	Identifier	i		4213899	1					
ANR	4214035	PrimaryExpression	'\\t'		4213899	1					
ANR	4214036	CompoundStatement		35:27:694:694	4213899	1					
ANR	4214037	ContinueStatement	continue ;	751:29:18616:18624	4213899	0	True				
ANR	4214038	ExpressionStatement	buf [ j ] = string [ i ]	753:2:18631:18649	4213899	3	True				
ANR	4214039	AssignmentExpression	buf [ j ] = string [ i ]		4213899	0		=			
ANR	4214040	ArrayIndexing	buf [ j ]		4213899	0					
ANR	4214041	Identifier	buf		4213899	0					
ANR	4214042	Identifier	j		4213899	1					
ANR	4214043	ArrayIndexing	string [ i ]		4213899	1					
ANR	4214044	Identifier	string		4213899	0					
ANR	4214045	Identifier	i		4213899	1					
ANR	4214046	ExpressionStatement	j ++	754:2:18653:18656	4213899	4	True				
ANR	4214047	PostIncDecOperationExpression	j ++		4213899	0					
ANR	4214048	Identifier	j		4213899	0					
ANR	4214049	IncDec	++		4213899	1					
ANR	4214050	ExpressionStatement	buf [ j ] = '\\0'	757:1:18663:18676	4213899	8	True				
ANR	4214051	AssignmentExpression	buf [ j ] = '\\0'		4213899	0		=			
ANR	4214052	ArrayIndexing	buf [ j ]		4213899	0					
ANR	4214053	Identifier	buf		4213899	0					
ANR	4214054	Identifier	j		4213899	1					
ANR	4214055	PrimaryExpression	'\\0'		4213899	1					
ANR	4214056	ExpressionStatement	"matches = ( 0 == strcasecmp ( attr , buf ) )"	762:1:18737:18777	4213899	9	True				
ANR	4214057	AssignmentExpression	"matches = ( 0 == strcasecmp ( attr , buf ) )"		4213899	0		=			
ANR	4214058	Identifier	matches		4213899	0					
ANR	4214059	EqualityExpression	"0 == strcasecmp ( attr , buf )"		4213899	1		==			
ANR	4214060	PrimaryExpression	0		4213899	0					
ANR	4214061	CallExpression	"strcasecmp ( attr , buf )"		4213899	1					
ANR	4214062	Callee	strcasecmp		4213899	0					
ANR	4214063	Identifier	strcasecmp		4213899	0					
ANR	4214064	ArgumentList	attr		4213899	1					
ANR	4214065	Argument	attr		4213899	0					
ANR	4214066	Identifier	attr		4213899	0					
ANR	4214067	Argument	buf		4213899	1					
ANR	4214068	Identifier	buf		4213899	0					
ANR	4214069	ExpressionStatement	free ( buf )	763:1:18780:18789	4213899	10	True				
ANR	4214070	CallExpression	free ( buf )		4213899	0					
ANR	4214071	Callee	free		4213899	0					
ANR	4214072	Identifier	free		4213899	0					
ANR	4214073	ArgumentList	buf		4213899	1					
ANR	4214074	Argument	buf		4213899	0					
ANR	4214075	Identifier	buf		4213899	0					
ANR	4214076	ReturnStatement	return matches ;	765:1:18793:18807	4213899	11	True				
ANR	4214077	Identifier	matches		4213899	0					
ANR	4214078	ReturnType	bool		4213899	1					
ANR	4214079	Identifier	attribute_matches		4213899	2					
ANR	4214080	ParameterList	"const char * string , const char * attr"		4213899	3					
ANR	4214081	Parameter	const char * string	717:19:17880:17897	4213899	0	True				
ANR	4214082	ParameterType	const char *		4213899	0					
ANR	4214083	Identifier	string		4213899	1					
ANR	4214084	Parameter	const char * attr	717:39:17900:17915	4213899	1	True				
ANR	4214085	ParameterType	const char *		4213899	0					
ANR	4214086	Identifier	attr		4213899	1					
ANR	4214087	CFGEntryNode	ENTRY		4213899		True				
ANR	4214088	CFGExitNode	EXIT		4213899		True				
ANR	4214089	Symbol	malloc		4213899						
ANR	4214090	Symbol	* buf		4213899						
ANR	4214091	Symbol	string		4213899						
ANR	4214092	Symbol	false		4213899						
ANR	4214093	Symbol	i		4213899						
ANR	4214094	Symbol	* string		4213899						
ANR	4214095	Symbol	j		4213899						
ANR	4214096	Symbol	attr_len		4213899						
ANR	4214097	Symbol	matches		4213899						
ANR	4214098	Symbol	strlen		4213899						
ANR	4214099	Symbol	buf		4213899						
ANR	4214100	Symbol	* i		4213899						
ANR	4214101	Symbol	* j		4213899						
ANR	4214102	Symbol	attr		4213899						
ANR	4214103	Symbol	strcasecmp		4213899						
ANR	4214104	Function	get_short_path_name	770:0:18930:19291							
ANR	4214105	FunctionDef	get_short_path_name (const char * path)		4214104	0					
ANR	4214106	CompoundStatement		771:38:18975:19291	4214104	0					
ANR	4214107	IdentifierDeclStatement	char * short_path = ( char * ) malloc ( MAX_PATH * sizeof ( char ) ) ;	772:1:18978:19035	4214104	0	True				
ANR	4214108	IdentifierDecl	* short_path = ( char * ) malloc ( MAX_PATH * sizeof ( char ) )		4214104	0					
ANR	4214109	IdentifierDeclType	char *		4214104	0					
ANR	4214110	Identifier	short_path		4214104	1					
ANR	4214111	AssignmentExpression	* short_path = ( char * ) malloc ( MAX_PATH * sizeof ( char ) )		4214104	2		=			
ANR	4214112	Identifier	short_path		4214104	0					
ANR	4214113	CastExpression	( char * ) malloc ( MAX_PATH * sizeof ( char ) )		4214104	1					
ANR	4214114	CastTarget	char *		4214104	0					
ANR	4214115	CallExpression	malloc ( MAX_PATH * sizeof ( char ) )		4214104	1					
ANR	4214116	Callee	malloc		4214104	0					
ANR	4214117	Identifier	malloc		4214104	0					
ANR	4214118	ArgumentList	MAX_PATH * sizeof ( char )		4214104	1					
ANR	4214119	Argument	MAX_PATH * sizeof ( char )		4214104	0					
ANR	4214120	MultiplicativeExpression	MAX_PATH * sizeof ( char )		4214104	0		*			
ANR	4214121	Identifier	MAX_PATH		4214104	0					
ANR	4214122	SizeofExpression	sizeof ( char )		4214104	1					
ANR	4214123	Sizeof	sizeof		4214104	0					
ANR	4214124	SizeofOperand	char		4214104	1					
ANR	4214125	IfStatement	if ( short_path )		4214104	1					
ANR	4214126	Condition	short_path	773:5:19042:19051	4214104	0	True				
ANR	4214127	Identifier	short_path		4214104	0					
ANR	4214128	CompoundStatement		3:17:78:78	4214104	1					
ANR	4214129	IfStatement	"if ( GetShortPathName ( path , short_path , MAX_PATH ) > 0 )"		4214104	0					
ANR	4214130	Condition	"GetShortPathName ( path , short_path , MAX_PATH ) > 0"	774:6:19062:19109	4214104	0	True				
ANR	4214131	RelationalExpression	"GetShortPathName ( path , short_path , MAX_PATH ) > 0"		4214104	0		>			
ANR	4214132	CallExpression	"GetShortPathName ( path , short_path , MAX_PATH )"		4214104	0					
ANR	4214133	Callee	GetShortPathName		4214104	0					
ANR	4214134	Identifier	GetShortPathName		4214104	0					
ANR	4214135	ArgumentList	path		4214104	1					
ANR	4214136	Argument	path		4214104	0					
ANR	4214137	Identifier	path		4214104	0					
ANR	4214138	Argument	short_path		4214104	1					
ANR	4214139	Identifier	short_path		4214104	0					
ANR	4214140	Argument	MAX_PATH		4214104	2					
ANR	4214141	Identifier	MAX_PATH		4214104	0					
ANR	4214142	PrimaryExpression	0		4214104	1					
ANR	4214143	CompoundStatement		4:56:136:136	4214104	1					
ANR	4214144	ReturnStatement	return short_path ;	775:3:19117:19134	4214104	0	True				
ANR	4214145	Identifier	short_path		4214104	0					
ANR	4214146	ExpressionStatement	free ( short_path )	779:2:19248:19264	4214104	1	True				
ANR	4214147	CallExpression	free ( short_path )		4214104	0					
ANR	4214148	Callee	free		4214104	0					
ANR	4214149	Identifier	free		4214104	0					
ANR	4214150	ArgumentList	short_path		4214104	1					
ANR	4214151	Argument	short_path		4214104	0					
ANR	4214152	Identifier	short_path		4214104	0					
ANR	4214153	ReturnStatement	return strdup ( path ) ;	781:1:19270:19289	4214104	2	True				
ANR	4214154	CallExpression	strdup ( path )		4214104	0					
ANR	4214155	Callee	strdup		4214104	0					
ANR	4214156	Identifier	strdup		4214104	0					
ANR	4214157	ArgumentList	path		4214104	1					
ANR	4214158	Argument	path		4214104	0					
ANR	4214159	Identifier	path		4214104	0					
ANR	4214160	ReturnType	char *		4214104	1					
ANR	4214161	Identifier	get_short_path_name		4214104	2					
ANR	4214162	ParameterList	const char * path		4214104	3					
ANR	4214163	Parameter	const char * path	771:20:18957:18972	4214104	0	True				
ANR	4214164	ParameterType	const char *		4214104	0					
ANR	4214165	Identifier	path		4214104	1					
ANR	4214166	CFGEntryNode	ENTRY		4214104		True				
ANR	4214167	CFGExitNode	EXIT		4214104		True				
ANR	4214168	Symbol	GetShortPathName		4214104						
ANR	4214169	Symbol	path		4214104						
ANR	4214170	Symbol	malloc		4214104						
ANR	4214171	Symbol	MAX_PATH		4214104						
ANR	4214172	Symbol	strdup		4214104						
ANR	4214173	Symbol	short_path		4214104						
