command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4786721	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_hibernator.cpp								
ANR	4786722	Function	HibernatorBase :: HibernatorBase	34:0:1211:1306							
ANR	4786723	FunctionDef	HibernatorBase :: HibernatorBase ()		4786722	0					
ANR	4786724	CompoundStatement		37:0:1304:1306	4786722	0					
ANR	4786725	Identifier	HibernatorBase :: HibernatorBase		4786722	1					
ANR	4786726	ParameterList			4786722	2					
ANR	4786727	CFGEntryNode	ENTRY		4786722		True				
ANR	4786728	CFGExitNode	EXIT		4786722		True				
ANR	4786729	Function	HibernatorBase :: ~HibernatorBase	41:0:1310:1356							
ANR	4786730	FunctionDef	HibernatorBase :: ~HibernatorBase ()		4786729	0					
ANR	4786731	CompoundStatement		42:0:1354:1356	4786729	0					
ANR	4786732	Identifier	HibernatorBase :: ~HibernatorBase		4786729	1					
ANR	4786733	ParameterList			4786729	2					
ANR	4786734	CFGEntryNode	ENTRY		4786729		True				
ANR	4786735	CFGExitNode	EXIT		4786729		True				
ANR	4786736	Function	HibernatorBase :: isStateValid	45:0:1359:1632							
ANR	4786737	FunctionDef	HibernatorBase :: isStateValid (SLEEP_STATE state)		4786736	0					
ANR	4786738	CompoundStatement		47:0:1415:1632	4786736	0					
ANR	4786739	SwitchStatement	switch ( state )		4786736	0					
ANR	4786740	Condition	state	48:10:1427:1431	4786736	0	True				
ANR	4786741	Identifier	state		4786736	0					
ANR	4786742	CompoundStatement		2:18:19:19	4786736	1					
ANR	4786743	Label	case NONE :	49:1:1438:1447	4786736	0	True				
ANR	4786744	Identifier	NONE		4786736	0					
ANR	4786745	ReturnStatement	return true ;	50:2:1465:1476	4786736	1	True				
ANR	4786746	Identifier	true		4786736	0					
ANR	4786747	Label	case S1 :	51:1:1479:1486	4786736	2	True				
ANR	4786748	Identifier	S1		4786736	0					
ANR	4786749	ReturnStatement	return true ;	52:2:1490:1501	4786736	3	True				
ANR	4786750	Identifier	true		4786736	0					
ANR	4786751	Label	case S2 :	53:1:1504:1511	4786736	4	True				
ANR	4786752	Identifier	S2		4786736	0					
ANR	4786753	ReturnStatement	return true ;	54:2:1515:1526	4786736	5	True				
ANR	4786754	Identifier	true		4786736	0					
ANR	4786755	Label	case S3 :	55:1:1529:1536	4786736	6	True				
ANR	4786756	Identifier	S3		4786736	0					
ANR	4786757	ReturnStatement	return true ;	56:2:1540:1551	4786736	7	True				
ANR	4786758	Identifier	true		4786736	0					
ANR	4786759	Label	case S4 :	57:1:1554:1561	4786736	8	True				
ANR	4786760	Identifier	S4		4786736	0					
ANR	4786761	ReturnStatement	return true ;	58:2:1565:1576	4786736	9	True				
ANR	4786762	Identifier	true		4786736	0					
ANR	4786763	Label	case S5 :	59:1:1579:1586	4786736	10	True				
ANR	4786764	Identifier	S5		4786736	0					
ANR	4786765	ReturnStatement	return true ;	60:2:1590:1601	4786736	11	True				
ANR	4786766	Identifier	true		4786736	0					
ANR	4786767	Label	default :	61:1:1604:1611	4786736	12	True				
ANR	4786768	Identifier	default		4786736	0					
ANR	4786769	ReturnStatement	return false ;	62:2:1615:1627	4786736	13	True				
ANR	4786770	Identifier	false		4786736	0					
ANR	4786771	ReturnType	bool		4786736	1					
ANR	4786772	Identifier	HibernatorBase :: isStateValid		4786736	2					
ANR	4786773	ParameterList	SLEEP_STATE state		4786736	3					
ANR	4786774	Parameter	SLEEP_STATE state	46:31:1395:1411	4786736	0	True				
ANR	4786775	ParameterType	SLEEP_STATE		4786736	0					
ANR	4786776	Identifier	state		4786736	1					
ANR	4786777	CFGEntryNode	ENTRY		4786736		True				
ANR	4786778	CFGExitNode	EXIT		4786736		True				
ANR	4786779	Symbol	true		4786736						
ANR	4786780	Symbol	false		4786736						
ANR	4786781	Symbol	state		4786736						
ANR	4786782	Function	HibernatorBase :: isStateSupported	66:0:1635:1788							
ANR	4786783	FunctionDef	HibernatorBase :: isStateSupported (SLEEP_STATE state)		4786782	0					
ANR	4786784	CompoundStatement		68:0:1701:1788	4786782	0					
ANR	4786785	IfStatement	if ( NONE == state )		4786782	0					
ANR	4786786	Condition	NONE == state	69:6:1709:1721	4786782	0	True				
ANR	4786787	EqualityExpression	NONE == state		4786782	0		==			
ANR	4786788	Identifier	NONE		4786782	0					
ANR	4786789	Identifier	state		4786782	1					
ANR	4786790	CompoundStatement		2:22:23:23	4786782	1					
ANR	4786791	ReturnStatement	return true ;	70:2:1729:1740	4786782	0	True				
ANR	4786792	Identifier	true		4786782	0					
ANR	4786793	ReturnStatement	return ( m_states & state ) ? true : false ;	72:1:1746:1786	4786782	1	True				
ANR	4786794	ConditionalExpression	( m_states & state ) ? true : false		4786782	0					
ANR	4786795	Condition	m_states & state		4786782	0					
ANR	4786796	BitAndExpression	m_states & state		4786782	0		&			
ANR	4786797	Identifier	m_states		4786782	0					
ANR	4786798	Identifier	state		4786782	1					
ANR	4786799	Identifier	true		4786782	1					
ANR	4786800	Identifier	false		4786782	2					
ANR	4786801	ReturnType	bool		4786782	1					
ANR	4786802	Identifier	HibernatorBase :: isStateSupported		4786782	2					
ANR	4786803	ParameterList	SLEEP_STATE state		4786782	3					
ANR	4786804	Parameter	SLEEP_STATE state	67:35:1675:1691	4786782	0	True				
ANR	4786805	ParameterType	SLEEP_STATE		4786782	0					
ANR	4786806	Identifier	state		4786782	1					
ANR	4786807	CFGEntryNode	ENTRY		4786782		True				
ANR	4786808	CFGExitNode	EXIT		4786782		True				
ANR	4786809	Symbol	true		4786782						
ANR	4786810	Symbol	false		4786782						
ANR	4786811	Symbol	m_states		4786782						
ANR	4786812	Symbol	state		4786782						
ANR	4786813	Symbol	NONE		4786782						
ANR	4786814	Function	HibernatorBase :: switchToState	76:0:1792:2855							
ANR	4786815	FunctionDef	"HibernatorBase :: switchToState (SLEEP_STATE level , SLEEP_STATE & new_level , bool force)"		4786814	0					
ANR	4786816	CompoundStatement		80:0:1907:2855	4786814	0					
ANR	4786817	IfStatement	if ( ! isStateValid ( level ) )		4786814	0					
ANR	4786818	Condition	! isStateValid ( level )	81:6:1915:1937	4786814	0	True				
ANR	4786819	UnaryOperationExpression	! isStateValid ( level )		4786814	0					
ANR	4786820	UnaryOperator	!		4786814	0					
ANR	4786821	CallExpression	isStateValid ( level )		4786814	1					
ANR	4786822	Callee	isStateValid		4786814	0					
ANR	4786823	Identifier	isStateValid		4786814	0					
ANR	4786824	ArgumentList	level		4786814	1					
ANR	4786825	Argument	level		4786814	0					
ANR	4786826	Identifier	level		4786814	0					
ANR	4786827	CompoundStatement		2:32:33:33	4786814	1					
ANR	4786828	ExpressionStatement	"dprintf ( D_ALWAYS , ""Hibernator: Invalid power state 0x%02x\\n"" , level )"	82:2:1945:2022	4786814	0	True				
ANR	4786829	CallExpression	"dprintf ( D_ALWAYS , ""Hibernator: Invalid power state 0x%02x\\n"" , level )"		4786814	0					
ANR	4786830	Callee	dprintf		4786814	0					
ANR	4786831	Identifier	dprintf		4786814	0					
ANR	4786832	ArgumentList	D_ALWAYS		4786814	1					
ANR	4786833	Argument	D_ALWAYS		4786814	0					
ANR	4786834	Identifier	D_ALWAYS		4786814	0					
ANR	4786835	Argument	"""Hibernator: Invalid power state 0x%02x\\n"""		4786814	1					
ANR	4786836	PrimaryExpression	"""Hibernator: Invalid power state 0x%02x\\n"""		4786814	0					
ANR	4786837	Argument	level		4786814	2					
ANR	4786838	Identifier	level		4786814	0					
ANR	4786839	ReturnStatement	return false ;	84:2:2026:2038	4786814	1	True				
ANR	4786840	Identifier	false		4786814	0					
ANR	4786841	IfStatement	if ( ! isStateSupported ( level ) )		4786814	1					
ANR	4786842	Condition	! isStateSupported ( level )	86:6:2049:2075	4786814	0	True				
ANR	4786843	UnaryOperationExpression	! isStateSupported ( level )		4786814	0					
ANR	4786844	UnaryOperator	!		4786814	0					
ANR	4786845	CallExpression	isStateSupported ( level )		4786814	1					
ANR	4786846	Callee	isStateSupported		4786814	0					
ANR	4786847	Identifier	isStateSupported		4786814	0					
ANR	4786848	ArgumentList	level		4786814	1					
ANR	4786849	Argument	level		4786814	0					
ANR	4786850	Identifier	level		4786814	0					
ANR	4786851	CompoundStatement		7:37:172:172	4786814	1					
ANR	4786852	Statement	dprintf	87:2:2084:2090	4786814	0	True				
ANR	4786853	Statement	(	87:10:2092:2092	4786814	1	True				
ANR	4786854	Statement	D_ALWAYS	87:12:2094:2101	4786814	2	True				
ANR	4786855	Statement	","	87:20:2102:2102	4786814	3	True				
ANR	4786856	Statement	"""Hibernator: This machine does not """	87:22:2104:2139	4786814	4	True				
ANR	4786857	Statement	"""support low power state: %s\\n"""	88:3:2144:2174	4786814	5	True				
ANR	4786858	Statement	","	88:34:2175:2175	4786814	6	True				
ANR	4786859	Statement	sleepStateToString	88:36:2177:2194	4786814	7	True				
ANR	4786860	Statement	(	88:54:2195:2195	4786814	8	True				
ANR	4786861	Statement	level	88:55:2196:2200	4786814	9	True				
ANR	4786862	Statement	)	88:60:2201:2201	4786814	10	True				
ANR	4786863	Statement	)	88:62:2203:2203	4786814	11	True				
ANR	4786864	ExpressionStatement		88:63:2204:2204	4786814	12	True				
ANR	4786865	ReturnStatement	return false ;	89:2:2208:2220	4786814	13	True				
ANR	4786866	Identifier	false		4786814	0					
ANR	4786867	Statement	dprintf	91:1:2226:2232	4786814	2	True				
ANR	4786868	Statement	(	91:9:2234:2234	4786814	3	True				
ANR	4786869	Statement	D_FULLDEBUG	91:11:2236:2246	4786814	4	True				
ANR	4786870	Statement	","	91:22:2247:2247	4786814	5	True				
ANR	4786871	Statement	"""Hibernator: Entering sleep """	91:24:2249:2277	4786814	6	True				
ANR	4786872	Statement	"""state '%s'.\\n"""	92:5:2284:2298	4786814	7	True				
ANR	4786873	Statement	","	92:20:2299:2299	4786814	8	True				
ANR	4786874	Statement	sleepStateToString	92:22:2301:2318	4786814	9	True				
ANR	4786875	Statement	(	92:41:2320:2320	4786814	10	True				
ANR	4786876	Statement	level	92:43:2322:2326	4786814	11	True				
ANR	4786877	Statement	)	92:49:2328:2328	4786814	12	True				
ANR	4786878	Statement	)	92:51:2330:2330	4786814	13	True				
ANR	4786879	ExpressionStatement		92:52:2331:2331	4786814	14	True				
ANR	4786880	ExpressionStatement	new_level = NONE	94:1:2335:2351	4786814	15	True				
ANR	4786881	AssignmentExpression	new_level = NONE		4786814	0		=			
ANR	4786882	Identifier	new_level		4786814	0					
ANR	4786883	Identifier	NONE		4786814	1					
ANR	4786884	SwitchStatement	switch ( level )		4786814	16					
ANR	4786885	Condition	level	95:10:2363:2367	4786814	0	True				
ANR	4786886	Identifier	level		4786814	0					
ANR	4786887	CompoundStatement		16:18:463:463	4786814	1					
ANR	4786888	Label	case S1 :	97:1:2429:2436	4786814	0	True				
ANR	4786889	Identifier	S1		4786814	0					
ANR	4786890	ExpressionStatement	new_level = enterStateStandBy ( force )	98:2:2440:2478	4786814	1	True				
ANR	4786891	AssignmentExpression	new_level = enterStateStandBy ( force )		4786814	0		=			
ANR	4786892	Identifier	new_level		4786814	0					
ANR	4786893	CallExpression	enterStateStandBy ( force )		4786814	1					
ANR	4786894	Callee	enterStateStandBy		4786814	0					
ANR	4786895	Identifier	enterStateStandBy		4786814	0					
ANR	4786896	ArgumentList	force		4786814	1					
ANR	4786897	Argument	force		4786814	0					
ANR	4786898	Identifier	force		4786814	0					
ANR	4786899	BreakStatement	break ;	99:2:2482:2487	4786814	2	True				
ANR	4786900	Label	case S2 :	101:1:2491:2498	4786814	3	True				
ANR	4786901	Identifier	S2		4786814	0					
ANR	4786902	Label	case S3 :	102:1:2501:2508	4786814	4	True				
ANR	4786903	Identifier	S3		4786814	0					
ANR	4786904	ExpressionStatement	new_level = enterStateSuspend ( force )	103:2:2512:2550	4786814	5	True				
ANR	4786905	AssignmentExpression	new_level = enterStateSuspend ( force )		4786814	0		=			
ANR	4786906	Identifier	new_level		4786814	0					
ANR	4786907	CallExpression	enterStateSuspend ( force )		4786814	1					
ANR	4786908	Callee	enterStateSuspend		4786814	0					
ANR	4786909	Identifier	enterStateSuspend		4786814	0					
ANR	4786910	ArgumentList	force		4786814	1					
ANR	4786911	Argument	force		4786814	0					
ANR	4786912	Identifier	force		4786814	0					
ANR	4786913	BreakStatement	break ;	104:2:2554:2559	4786814	6	True				
ANR	4786914	Label	case S4 :	107:1:2607:2614	4786814	7	True				
ANR	4786915	Identifier	S4		4786814	0					
ANR	4786916	ExpressionStatement	new_level = enterStateHibernate ( force )	108:2:2618:2658	4786814	8	True				
ANR	4786917	AssignmentExpression	new_level = enterStateHibernate ( force )		4786814	0		=			
ANR	4786918	Identifier	new_level		4786814	0					
ANR	4786919	CallExpression	enterStateHibernate ( force )		4786814	1					
ANR	4786920	Callee	enterStateHibernate		4786814	0					
ANR	4786921	Identifier	enterStateHibernate		4786814	0					
ANR	4786922	ArgumentList	force		4786814	1					
ANR	4786923	Argument	force		4786814	0					
ANR	4786924	Identifier	force		4786814	0					
ANR	4786925	BreakStatement	break ;	109:2:2662:2667	4786814	9	True				
ANR	4786926	Label	case S5 :	112:1:2721:2728	4786814	10	True				
ANR	4786927	Identifier	S5		4786814	0					
ANR	4786928	ExpressionStatement	new_level = enterStatePowerOff ( force )	113:2:2732:2771	4786814	11	True				
ANR	4786929	AssignmentExpression	new_level = enterStatePowerOff ( force )		4786814	0		=			
ANR	4786930	Identifier	new_level		4786814	0					
ANR	4786931	CallExpression	enterStatePowerOff ( force )		4786814	1					
ANR	4786932	Callee	enterStatePowerOff		4786814	0					
ANR	4786933	Identifier	enterStatePowerOff		4786814	0					
ANR	4786934	ArgumentList	force		4786814	1					
ANR	4786935	Argument	force		4786814	0					
ANR	4786936	Identifier	force		4786814	0					
ANR	4786937	BreakStatement	break ;	114:2:2775:2780	4786814	12	True				
ANR	4786938	Label	default :	116:1:2784:2791	4786814	13	True				
ANR	4786939	Identifier	default		4786814	0					
ANR	4786940	ReturnStatement	return false ;	118:2:2823:2835	4786814	14	True				
ANR	4786941	Identifier	false		4786814	0					
ANR	4786942	ReturnStatement	return true ;	121:1:2842:2853	4786814	17	True				
ANR	4786943	Identifier	true		4786814	0					
ANR	4786944	ReturnType	bool		4786814	1					
ANR	4786945	Identifier	HibernatorBase :: switchToState		4786814	2					
ANR	4786946	ParameterList	"SLEEP_STATE level , SLEEP_STATE & new_level , bool force"		4786814	3					
ANR	4786947	Parameter	SLEEP_STATE level	77:32:1829:1845	4786814	0	True				
ANR	4786948	ParameterType	SLEEP_STATE		4786814	0					
ANR	4786949	Identifier	level		4786814	1					
ANR	4786950	Parameter	SLEEP_STATE & new_level	78:8:1856:1877	4786814	1	True				
ANR	4786951	ParameterType	SLEEP_STATE &		4786814	0					
ANR	4786952	Identifier	new_level		4786814	1					
ANR	4786953	Parameter	bool force	79:8:1888:1897	4786814	2	True				
ANR	4786954	ParameterType	bool		4786814	0					
ANR	4786955	Identifier	force		4786814	1					
ANR	4786956	CFGEntryNode	ENTRY		4786814		True				
ANR	4786957	CFGExitNode	EXIT		4786814		True				
ANR	4786958	Symbol	new_level		4786814						
ANR	4786959	Symbol	level		4786814						
ANR	4786960	Symbol	isStateValid		4786814						
ANR	4786961	Symbol	D_ALWAYS		4786814						
ANR	4786962	Symbol	false		4786814						
ANR	4786963	Symbol	enterStateStandBy		4786814						
ANR	4786964	Symbol	enterStatePowerOff		4786814						
ANR	4786965	Symbol	enterStateSuspend		4786814						
ANR	4786966	Symbol	true		4786814						
ANR	4786967	Symbol	force		4786814						
ANR	4786968	Symbol	NONE		4786814						
ANR	4786969	Symbol	isStateSupported		4786814						
ANR	4786970	Symbol	enterStateHibernate		4786814						
ANR	4786971	Function	HibernatorBase :: getStates	124:0:2858:2928							
ANR	4786972	FunctionDef	HibernatorBase :: getStates ()		4786971	0					
ANR	4786973	CompoundStatement		126:0:2908:2928	4786971	0					
ANR	4786974	ReturnStatement	return m_states ;	127:1:2911:2926	4786971	0	True				
ANR	4786975	Identifier	m_states		4786971	0					
ANR	4786976	ReturnType	unsigned short		4786971	1					
ANR	4786977	Identifier	HibernatorBase :: getStates		4786971	2					
ANR	4786978	ParameterList			4786971	3					
ANR	4786979	CFGEntryNode	ENTRY		4786971		True				
ANR	4786980	CFGExitNode	EXIT		4786971		True				
ANR	4786981	Symbol	m_states		4786971						
ANR	4786982	Function	HibernatorBase :: setStates	130:0:2931:3010							
ANR	4786983	FunctionDef	HibernatorBase :: setStates (unsigned short states)		4786982	0					
ANR	4786984	CompoundStatement		132:0:2988:3010	4786982	0					
ANR	4786985	ExpressionStatement	m_states = states	133:1:2991:3008	4786982	0	True				
ANR	4786986	AssignmentExpression	m_states = states		4786982	0		=			
ANR	4786987	Identifier	m_states		4786982	0					
ANR	4786988	Identifier	states		4786982	1					
ANR	4786989	ReturnType	void		4786982	1					
ANR	4786990	Identifier	HibernatorBase :: setStates		4786982	2					
ANR	4786991	ParameterList	unsigned short states		4786982	3					
ANR	4786992	Parameter	unsigned short states	131:28:2964:2984	4786982	0	True				
ANR	4786993	ParameterType	unsigned short		4786982	0					
ANR	4786994	Identifier	states		4786982	1					
ANR	4786995	CFGEntryNode	ENTRY		4786982		True				
ANR	4786996	CFGExitNode	EXIT		4786982		True				
ANR	4786997	Symbol	m_states		4786982						
ANR	4786998	Symbol	states		4786982						
ANR	4786999	Function	HibernatorBase :: addState	136:0:3013:3087							
ANR	4787000	FunctionDef	HibernatorBase :: addState (SLEEP_STATE state)		4786999	0					
ANR	4787001	CompoundStatement		138:0:3065:3087	4786999	0					
ANR	4787002	ExpressionStatement	m_states |= state	139:1:3068:3085	4786999	0	True				
ANR	4787003	AssignmentExpression	m_states |= state		4786999	0		|=			
ANR	4787004	Identifier	m_states		4786999	0					
ANR	4787005	Identifier	state		4786999	1					
ANR	4787006	ReturnType	void		4786999	1					
ANR	4787007	Identifier	HibernatorBase :: addState		4786999	2					
ANR	4787008	ParameterList	SLEEP_STATE state		4786999	3					
ANR	4787009	Parameter	SLEEP_STATE state	137:27:3045:3061	4786999	0	True				
ANR	4787010	ParameterType	SLEEP_STATE		4786999	0					
ANR	4787011	Identifier	state		4786999	1					
ANR	4787012	CFGEntryNode	ENTRY		4786999		True				
ANR	4787013	CFGExitNode	EXIT		4786999		True				
ANR	4787014	Symbol	m_states		4786999						
ANR	4787015	Symbol	state		4786999						
ANR	4787016	Function	HibernatorBase :: addState	142:0:3090:3187							
ANR	4787017	FunctionDef	HibernatorBase :: addState (const char * state)		4787016	0					
ANR	4787018	CompoundStatement		144:0:3142:3187	4787016	0					
ANR	4787019	ExpressionStatement	m_states |= stringToSleepState ( state )	145:1:3145:3185	4787016	0	True				
ANR	4787020	AssignmentExpression	m_states |= stringToSleepState ( state )		4787016	0		|=			
ANR	4787021	Identifier	m_states		4787016	0					
ANR	4787022	CallExpression	stringToSleepState ( state )		4787016	1					
ANR	4787023	Callee	stringToSleepState		4787016	0					
ANR	4787024	Identifier	stringToSleepState		4787016	0					
ANR	4787025	ArgumentList	state		4787016	1					
ANR	4787026	Argument	state		4787016	0					
ANR	4787027	Identifier	state		4787016	0					
ANR	4787028	ReturnType	void		4787016	1					
ANR	4787029	Identifier	HibernatorBase :: addState		4787016	2					
ANR	4787030	ParameterList	const char * state		4787016	3					
ANR	4787031	Parameter	const char * state	143:27:3122:3138	4787016	0	True				
ANR	4787032	ParameterType	const char *		4787016	0					
ANR	4787033	Identifier	state		4787016	1					
ANR	4787034	CFGEntryNode	ENTRY		4787016		True				
ANR	4787035	CFGExitNode	EXIT		4787016		True				
ANR	4787036	Symbol	m_states		4787016						
ANR	4787037	Symbol	state		4787016						
ANR	4787038	Symbol	stringToSleepState		4787016						
ANR	4787039	Function	HibernatorBase :: getMethod	148:0:3190:3258							
ANR	4787040	FunctionDef	HibernatorBase :: getMethod ()		4787039	0					
ANR	4787041	CompoundStatement		150:0:3237:3258	4787039	0					
ANR	4787042	ReturnStatement	"return ""default"" ;"	151:1:3240:3256	4787039	0	True				
ANR	4787043	PrimaryExpression	"""default"""		4787039	0					
ANR	4787044	ReturnType	const char *		4787039	1					
ANR	4787045	Identifier	HibernatorBase :: getMethod		4787039	2					
ANR	4787046	ParameterList			4787039	3					
ANR	4787047	CFGEntryNode	ENTRY		4787039		True				
ANR	4787048	CFGExitNode	EXIT		4787039		True				
ANR	4787049	ClassDef	HibernatorBase :: StateLookup	161:0:3469:3588							
ANR	4787050	DeclStmt									
ANR	4787051	Decl							int	int	number
ANR	4787052	DeclStmt									
ANR	4787053	Decl							HibernatorBase :: SLEEP_STATE	HibernatorBase :: SLEEP_STATE	state
ANR	4787054	DeclStmt									
ANR	4787055	Decl							const char	const char * *	strings
ANR	4787056	DeclStmt									
ANR	4787057	Decl							const char	const char * [ ]	s0names
ANR	4787058	DeclStmt									
ANR	4787059	Decl							const char	const char * [ ]	s1names
ANR	4787060	DeclStmt									
ANR	4787061	Decl							const char	const char * [ ]	s2names
ANR	4787062	DeclStmt									
ANR	4787063	Decl							const char	const char * [ ]	s3names
ANR	4787064	DeclStmt									
ANR	4787065	Decl							const char	const char * [ ]	s4names
ANR	4787066	DeclStmt									
ANR	4787067	Decl							const char	const char * [ ]	s5names
ANR	4787068	DeclStmt									
ANR	4787069	Decl							const char	const char * [ ]	sxnames
ANR	4787070	DeclStmt									
ANR	4787071	Decl							const HibernatorBase :: StateLookup	const HibernatorBase :: StateLookup [ ]	states
ANR	4787072	Function	HibernatorBase :: intToSleepState	185:0:4385:4482							
ANR	4787073	FunctionDef	HibernatorBase :: intToSleepState (int n)		4787072	0					
ANR	4787074	CompoundStatement		187:0:4455:4482	4787072	0					
ANR	4787075	ReturnStatement	return Lookup ( n ) . state ;	188:1:4458:4480	4787072	0	True				
ANR	4787076	MemberAccess	Lookup ( n ) . state		4787072	0					
ANR	4787077	CallExpression	Lookup ( n )		4787072	0					
ANR	4787078	Callee	Lookup		4787072	0					
ANR	4787079	Identifier	Lookup		4787072	0					
ANR	4787080	ArgumentList	n		4787072	1					
ANR	4787081	Argument	n		4787072	0					
ANR	4787082	Identifier	n		4787072	0					
ANR	4787083	Identifier	state		4787072	1					
ANR	4787084	ReturnType	HibernatorBase :: SLEEP_STATE		4787072	1					
ANR	4787085	Identifier	HibernatorBase :: intToSleepState		4787072	2					
ANR	4787086	ParameterList	int n		4787072	3					
ANR	4787087	Parameter	int n	186:34:4447:4451	4787072	0	True				
ANR	4787088	ParameterType	int		4787072	0					
ANR	4787089	Identifier	n		4787072	1					
ANR	4787090	CFGEntryNode	ENTRY		4787072		True				
ANR	4787091	CFGExitNode	EXIT		4787072		True				
ANR	4787092	Symbol	Lookup ( n ) . state		4787072						
ANR	4787093	Symbol	Lookup		4787072						
ANR	4787094	Symbol	n		4787072						
ANR	4787095	Function	HibernatorBase :: sleepStateToInt	191:0:4485:4591							
ANR	4787096	FunctionDef	HibernatorBase :: sleepStateToInt (HibernatorBase :: SLEEP_STATE state)		4787095	0					
ANR	4787097	CompoundStatement		193:0:4559:4591	4787095	0					
ANR	4787098	ReturnStatement	return Lookup ( state ) . number ;	194:1:4562:4589	4787095	0	True				
ANR	4787099	MemberAccess	Lookup ( state ) . number		4787095	0					
ANR	4787100	CallExpression	Lookup ( state )		4787095	0					
ANR	4787101	Callee	Lookup		4787095	0					
ANR	4787102	Identifier	Lookup		4787095	0					
ANR	4787103	ArgumentList	state		4787095	1					
ANR	4787104	Argument	state		4787095	0					
ANR	4787105	Identifier	state		4787095	0					
ANR	4787106	Identifier	number		4787095	1					
ANR	4787107	ReturnType	int		4787095	1					
ANR	4787108	Identifier	HibernatorBase :: sleepStateToInt		4787095	2					
ANR	4787109	ParameterList	HibernatorBase :: SLEEP_STATE state		4787095	3					
ANR	4787110	Parameter	HibernatorBase :: SLEEP_STATE state	192:34:4523:4555	4787095	0	True				
ANR	4787111	ParameterType	HibernatorBase :: SLEEP_STATE		4787095	0					
ANR	4787112	Identifier	state		4787095	1					
ANR	4787113	CFGEntryNode	ENTRY		4787095		True				
ANR	4787114	CFGExitNode	EXIT		4787095		True				
ANR	4787115	Symbol	Lookup		4787095						
ANR	4787116	Symbol	state		4787095						
ANR	4787117	Symbol	Lookup ( state ) . number		4787095						
ANR	4787118	Function	HibernatorBase :: sleepStateToString	197:0:4594:4755							
ANR	4787119	FunctionDef	HibernatorBase :: sleepStateToString (HibernatorBase :: SLEEP_STATE state)		4787118	0					
ANR	4787120	CompoundStatement		199:0:4679:4755	4787118	0					
ANR	4787121	IdentifierDeclStatement	int index = sleepStateToInt ( state ) ;	200:1:4682:4719	4787118	0	True				
ANR	4787122	IdentifierDecl	index = sleepStateToInt ( state )		4787118	0					
ANR	4787123	IdentifierDeclType	int		4787118	0					
ANR	4787124	Identifier	index		4787118	1					
ANR	4787125	AssignmentExpression	index = sleepStateToInt ( state )		4787118	2		=			
ANR	4787126	Identifier	index		4787118	0					
ANR	4787127	CallExpression	sleepStateToInt ( state )		4787118	1					
ANR	4787128	Callee	sleepStateToInt		4787118	0					
ANR	4787129	Identifier	sleepStateToInt		4787118	0					
ANR	4787130	ArgumentList	state		4787118	1					
ANR	4787131	Argument	state		4787118	0					
ANR	4787132	Identifier	state		4787118	0					
ANR	4787133	ReturnStatement	return states [ index ] . strings [ 0 ] ;	201:1:4722:4753	4787118	1	True				
ANR	4787134	ArrayIndexing	states [ index ] . strings [ 0 ]		4787118	0					
ANR	4787135	MemberAccess	states [ index ] . strings		4787118	0					
ANR	4787136	ArrayIndexing	states [ index ]		4787118	0					
ANR	4787137	Identifier	states		4787118	0					
ANR	4787138	Identifier	index		4787118	1					
ANR	4787139	Identifier	strings		4787118	1					
ANR	4787140	PrimaryExpression	0		4787118	1					
ANR	4787141	ReturnType	char const *		4787118	1					
ANR	4787142	Identifier	HibernatorBase :: sleepStateToString		4787118	2					
ANR	4787143	ParameterList	HibernatorBase :: SLEEP_STATE state		4787118	3					
ANR	4787144	Parameter	HibernatorBase :: SLEEP_STATE state	198:37:4643:4675	4787118	0	True				
ANR	4787145	ParameterType	HibernatorBase :: SLEEP_STATE		4787118	0					
ANR	4787146	Identifier	state		4787118	1					
ANR	4787147	CFGEntryNode	ENTRY		4787118		True				
ANR	4787148	CFGExitNode	EXIT		4787118		True				
ANR	4787149	Symbol	sleepStateToInt		4787118						
ANR	4787150	Symbol	states [ index ] . strings		4787118						
ANR	4787151	Symbol	* index		4787118						
ANR	4787152	Symbol	index		4787118						
ANR	4787153	Symbol	state		4787118						
ANR	4787154	Symbol	* * index		4787118						
ANR	4787155	Symbol	* states		4787118						
ANR	4787156	Symbol	* states [ index ] . strings		4787118						
ANR	4787157	Symbol	* * states		4787118						
ANR	4787158	Symbol	states		4787118						
ANR	4787159	Function	HibernatorBase :: stringToSleepState	204:0:4758:4872							
ANR	4787160	FunctionDef	HibernatorBase :: stringToSleepState (char const * name)		4787159	0					
ANR	4787161	CompoundStatement		206:0:4842:4872	4787159	0					
ANR	4787162	ReturnStatement	return Lookup ( name ) . state ;	207:1:4845:4870	4787159	0	True				
ANR	4787163	MemberAccess	Lookup ( name ) . state		4787159	0					
ANR	4787164	CallExpression	Lookup ( name )		4787159	0					
ANR	4787165	Callee	Lookup		4787159	0					
ANR	4787166	Identifier	Lookup		4787159	0					
ANR	4787167	ArgumentList	name		4787159	1					
ANR	4787168	Argument	name		4787159	0					
ANR	4787169	Identifier	name		4787159	0					
ANR	4787170	Identifier	state		4787159	1					
ANR	4787171	ReturnType	HibernatorBase :: SLEEP_STATE		4787159	1					
ANR	4787172	Identifier	HibernatorBase :: stringToSleepState		4787159	2					
ANR	4787173	ParameterList	char const * name		4787159	3					
ANR	4787174	Parameter	char const * name	205:37:4823:4838	4787159	0	True				
ANR	4787175	ParameterType	char const *		4787159	0					
ANR	4787176	Identifier	name		4787159	1					
ANR	4787177	CFGEntryNode	ENTRY		4787159		True				
ANR	4787178	CFGExitNode	EXIT		4787159		True				
ANR	4787179	Symbol	name		4787159						
ANR	4787180	Symbol	Lookup		4787159						
ANR	4787181	Symbol	Lookup ( name ) . state		4787159						
ANR	4787182	Function	HibernatorBase :: maskToStates	210:0:4875:5154							
ANR	4787183	FunctionDef	"HibernatorBase :: maskToStates (unsigned mask , ExtArray < SLEEP_STATE > & _states)"		4787182	0					
ANR	4787184	CompoundStatement		214:0:4965:5154	4787182	0					
ANR	4787185	ExpressionStatement	_states . truncate ( - 1 )	215:1:4968:4988	4787182	0	True				
ANR	4787186	CallExpression	_states . truncate ( - 1 )		4787182	0					
ANR	4787187	Callee	_states . truncate		4787182	0					
ANR	4787188	MemberAccess	_states . truncate		4787182	0					
ANR	4787189	Identifier	_states		4787182	0					
ANR	4787190	Identifier	truncate		4787182	1					
ANR	4787191	ArgumentList	- 1		4787182	1					
ANR	4787192	Argument	- 1		4787182	0					
ANR	4787193	UnaryOperationExpression	- 1		4787182	0					
ANR	4787194	UnaryOperator	-		4787182	0					
ANR	4787195	PrimaryExpression	1		4787182	1					
ANR	4787196	IdentifierDeclStatement	unsigned bit ;	216:1:4991:5003	4787182	1	True				
ANR	4787197	IdentifierDecl	bit		4787182	0					
ANR	4787198	IdentifierDeclType	unsigned		4787182	0					
ANR	4787199	Identifier	bit		4787182	1					
ANR	4787200	ForStatement	for ( bit = ( unsigned ) S1 ; bit <= ( unsigned ) S5 ; bit <<= 1 )		4787182	2					
ANR	4787201	ForInit	bit = ( unsigned ) S1 ;	217:7:5012:5030	4787182	0	True				
ANR	4787202	AssignmentExpression	bit = ( unsigned ) S1		4787182	0		=			
ANR	4787203	Identifier	bit		4787182	0					
ANR	4787204	CastExpression	( unsigned ) S1		4787182	1					
ANR	4787205	CastTarget	unsigned		4787182	0					
ANR	4787206	Identifier	S1		4787182	1					
ANR	4787207	Condition	bit <= ( unsigned ) S5	218:4:5036:5054	4787182	1	True				
ANR	4787208	RelationalExpression	bit <= ( unsigned ) S5		4787182	0		<=			
ANR	4787209	Identifier	bit		4787182	0					
ANR	4787210	CastExpression	( unsigned ) S5		4787182	1					
ANR	4787211	CastTarget	unsigned		4787182	0					
ANR	4787212	Identifier	S5		4787182	1					
ANR	4787213	AssignmentExpression	bit <<= 1	219:4:5061:5069	4787182	2	True	<<=			
ANR	4787214	Identifier	bit		4787182	0					
ANR	4787215	PrimaryExpression	1		4787182	1					
ANR	4787216	CompoundStatement		6:16:107:107	4787182	3					
ANR	4787217	IfStatement	if ( bit & mask )		4787182	0					
ANR	4787218	Condition	bit & mask	220:7:5082:5091	4787182	0	True				
ANR	4787219	BitAndExpression	bit & mask		4787182	0		&			
ANR	4787220	Identifier	bit		4787182	0					
ANR	4787221	Identifier	mask		4787182	1					
ANR	4787222	CompoundStatement		7:20:129:129	4787182	1					
ANR	4787223	ExpressionStatement	_states . add ( ( SLEEP_STATE ) bit )	221:3:5100:5131	4787182	0	True				
ANR	4787224	CallExpression	_states . add ( ( SLEEP_STATE ) bit )		4787182	0					
ANR	4787225	Callee	_states . add		4787182	0					
ANR	4787226	MemberAccess	_states . add		4787182	0					
ANR	4787227	Identifier	_states		4787182	0					
ANR	4787228	Identifier	add		4787182	1					
ANR	4787229	ArgumentList	( SLEEP_STATE ) bit		4787182	1					
ANR	4787230	Argument	( SLEEP_STATE ) bit		4787182	0					
ANR	4787231	CastExpression	( SLEEP_STATE ) bit		4787182	0					
ANR	4787232	CastTarget	SLEEP_STATE		4787182	0					
ANR	4787233	Identifier	bit		4787182	1					
ANR	4787234	ReturnStatement	return true ;	224:1:5141:5152	4787182	3	True				
ANR	4787235	Identifier	true		4787182	0					
ANR	4787236	ReturnType	bool		4787182	1					
ANR	4787237	Identifier	HibernatorBase :: maskToStates		4787182	2					
ANR	4787238	ParameterList	"unsigned mask , ExtArray < SLEEP_STATE > & _states"		4787182	3					
ANR	4787239	Parameter	unsigned mask	212:1:4911:4928	4787182	0	True				
ANR	4787240	ParameterType	unsigned		4787182	0					
ANR	4787241	Identifier	mask		4787182	1					
ANR	4787242	Parameter	ExtArray < SLEEP_STATE > & _states	213:1:4932:4961	4787182	1	True				
ANR	4787243	ParameterType	ExtArray < SLEEP_STATE > &		4787182	0					
ANR	4787244	Identifier	_states		4787182	1					
ANR	4787245	CFGEntryNode	ENTRY		4787182		True				
ANR	4787246	CFGExitNode	EXIT		4787182		True				
ANR	4787247	Symbol	S5		4787182						
ANR	4787248	Symbol	true		4787182						
ANR	4787249	Symbol	_states		4787182						
ANR	4787250	Symbol	bit		4787182						
ANR	4787251	Symbol	S1		4787182						
ANR	4787252	Symbol	mask		4787182						
ANR	4787253	Function	HibernatorBase :: statesToString	227:0:5157:5412							
ANR	4787254	FunctionDef	"HibernatorBase :: statesToString (const ExtArray < SLEEP_STATE > & _states , MyString & str)"		4787253	0					
ANR	4787255	CompoundStatement		230:0:5256:5412	4787253	0					
ANR	4787256	ExpressionStatement	"str = """""	231:1:5259:5267	4787253	0	True				
ANR	4787257	AssignmentExpression	"str = """""		4787253	0		=			
ANR	4787258	Identifier	str		4787253	0					
ANR	4787259	PrimaryExpression	""""""		4787253	1					
ANR	4787260	ForStatement	for ( int i = 0 ; i <= _states . getlast ( ) ; i ++ )		4787253	1					
ANR	4787261	ForInit	int i = 0 ;	232:6:5275:5284	4787253	0	True				
ANR	4787262	IdentifierDeclStatement	int i = 0 ;		4787253	0					
ANR	4787263	IdentifierDecl	i = 0		4787253	0					
ANR	4787264	IdentifierDeclType	int		4787253	0					
ANR	4787265	Identifier	i		4787253	1					
ANR	4787266	AssignmentExpression	i = 0		4787253	2		=			
ANR	4787267	Identifier	i		4787253	0					
ANR	4787268	PrimaryExpression	0		4787253	1					
ANR	4787269	Condition	i <= _states . getlast ( )	232:18:5287:5308	4787253	1	True				
ANR	4787270	RelationalExpression	i <= _states . getlast ( )		4787253	0		<=			
ANR	4787271	Identifier	i		4787253	0					
ANR	4787272	CallExpression	_states . getlast ( )		4787253	1					
ANR	4787273	Callee	_states . getlast		4787253	0					
ANR	4787274	MemberAccess	_states . getlast		4787253	0					
ANR	4787275	Identifier	_states		4787253	0					
ANR	4787276	Identifier	getlast		4787253	1					
ANR	4787277	ArgumentList			4787253	1					
ANR	4787278	PostIncDecOperationExpression	i ++	232:43:5312:5314	4787253	2	True				
ANR	4787279	Identifier	i		4787253	0					
ANR	4787280	IncDec	++		4787253	1					
ANR	4787281	CompoundStatement		3:49:61:61	4787253	3					
ANR	4787282	IfStatement	if ( i )		4787253	0					
ANR	4787283	Condition	i	233:7:5327:5327	4787253	0	True				
ANR	4787284	Identifier	i		4787253	0					
ANR	4787285	CompoundStatement		4:11:74:74	4787253	1					
ANR	4787286	ExpressionStatement	"str += "","""	234:3:5336:5346	4787253	0	True				
ANR	4787287	AssignmentExpression	"str += "","""		4787253	0		+=			
ANR	4787288	Identifier	str		4787253	0					
ANR	4787289	PrimaryExpression	""","""		4787253	1					
ANR	4787290	ExpressionStatement	str += sleepStateToString ( _states [ i ] )	236:2:5354:5393	4787253	1	True				
ANR	4787291	AssignmentExpression	str += sleepStateToString ( _states [ i ] )		4787253	0		+=			
ANR	4787292	Identifier	str		4787253	0					
ANR	4787293	CallExpression	sleepStateToString ( _states [ i ] )		4787253	1					
ANR	4787294	Callee	sleepStateToString		4787253	0					
ANR	4787295	Identifier	sleepStateToString		4787253	0					
ANR	4787296	ArgumentList	_states [ i ]		4787253	1					
ANR	4787297	Argument	_states [ i ]		4787253	0					
ANR	4787298	ArrayIndexing	_states [ i ]		4787253	0					
ANR	4787299	Identifier	_states		4787253	0					
ANR	4787300	Identifier	i		4787253	1					
ANR	4787301	ReturnStatement	return true ;	238:1:5399:5410	4787253	2	True				
ANR	4787302	Identifier	true		4787253	0					
ANR	4787303	ReturnType	bool		4787253	1					
ANR	4787304	Identifier	HibernatorBase :: statesToString		4787253	2					
ANR	4787305	ParameterList	"const ExtArray < SLEEP_STATE > & _states , MyString & str"		4787253	3					
ANR	4787306	Parameter	const ExtArray < SLEEP_STATE > & _states	228:32:5194:5229	4787253	0	True				
ANR	4787307	ParameterType	const ExtArray < SLEEP_STATE > &		4787253	0					
ANR	4787308	Identifier	_states		4787253	1					
ANR	4787309	Parameter	MyString & str	229:8:5240:5252	4787253	1	True				
ANR	4787310	ParameterType	MyString &		4787253	0					
ANR	4787311	Identifier	str		4787253	1					
ANR	4787312	CFGEntryNode	ENTRY		4787253		True				
ANR	4787313	CFGExitNode	EXIT		4787253		True				
ANR	4787314	Symbol	str		4787253						
ANR	4787315	Symbol	* i		4787253						
ANR	4787316	Symbol	* _states		4787253						
ANR	4787317	Symbol	sleepStateToString		4787253						
ANR	4787318	Symbol	true		4787253						
ANR	4787319	Symbol	i		4787253						
ANR	4787320	Symbol	_states		4787253						
ANR	4787321	Symbol	_states . getlast		4787253						
ANR	4787322	Function	HibernatorBase :: maskToString	241:0:5415:5614							
ANR	4787323	FunctionDef	"HibernatorBase :: maskToString (unsigned mask , MyString & str)"		4787322	0					
ANR	4787324	CompoundStatement		243:0:5481:5614	4787322	0					
ANR	4787325	IdentifierDeclStatement	ExtArray < SLEEP_STATE > _states ;	244:1:5484:5513	4787322	0	True				
ANR	4787326	IdentifierDecl	_states		4787322	0					
ANR	4787327	IdentifierDeclType	ExtArray < SLEEP_STATE >		4787322	0					
ANR	4787328	Identifier	_states		4787322	1					
ANR	4787329	IfStatement	"if ( ! maskToStates ( mask , _states ) )"		4787322	1					
ANR	4787330	Condition	"! maskToStates ( mask , _states )"	245:5:5520:5549	4787322	0	True				
ANR	4787331	UnaryOperationExpression	"! maskToStates ( mask , _states )"		4787322	0					
ANR	4787332	UnaryOperator	!		4787322	0					
ANR	4787333	CallExpression	"maskToStates ( mask , _states )"		4787322	1					
ANR	4787334	Callee	maskToStates		4787322	0					
ANR	4787335	Identifier	maskToStates		4787322	0					
ANR	4787336	ArgumentList	mask		4787322	1					
ANR	4787337	Argument	mask		4787322	0					
ANR	4787338	Identifier	mask		4787322	0					
ANR	4787339	Argument	_states		4787322	1					
ANR	4787340	Identifier	_states		4787322	0					
ANR	4787341	CompoundStatement		3:38:71:71	4787322	1					
ANR	4787342	ReturnStatement	return false ;	246:2:5557:5569	4787322	0	True				
ANR	4787343	Identifier	false		4787322	0					
ANR	4787344	ReturnStatement	"return statesToString ( _states , str ) ;"	248:1:5575:5612	4787322	2	True				
ANR	4787345	CallExpression	"statesToString ( _states , str )"		4787322	0					
ANR	4787346	Callee	statesToString		4787322	0					
ANR	4787347	Identifier	statesToString		4787322	0					
ANR	4787348	ArgumentList	_states		4787322	1					
ANR	4787349	Argument	_states		4787322	0					
ANR	4787350	Identifier	_states		4787322	0					
ANR	4787351	Argument	str		4787322	1					
ANR	4787352	Identifier	str		4787322	0					
ANR	4787353	ReturnType	bool		4787322	1					
ANR	4787354	Identifier	HibernatorBase :: maskToString		4787322	2					
ANR	4787355	ParameterList	"unsigned mask , MyString & str"		4787322	3					
ANR	4787356	Parameter	unsigned mask	242:30:5450:5462	4787322	0	True				
ANR	4787357	ParameterType	unsigned		4787322	0					
ANR	4787358	Identifier	mask		4787322	1					
ANR	4787359	Parameter	MyString & str	242:45:5465:5477	4787322	1	True				
ANR	4787360	ParameterType	MyString &		4787322	0					
ANR	4787361	Identifier	str		4787322	1					
ANR	4787362	CFGEntryNode	ENTRY		4787322		True				
ANR	4787363	CFGExitNode	EXIT		4787322		True				
ANR	4787364	Symbol	str		4787322						
ANR	4787365	Symbol	maskToStates		4787322						
ANR	4787366	Symbol	statesToString		4787322						
ANR	4787367	Symbol	false		4787322						
ANR	4787368	Symbol	_states		4787322						
ANR	4787369	Symbol	mask		4787322						
ANR	4787370	Function	HibernatorBase :: stringToStates	251:0:5617:5963							
ANR	4787371	FunctionDef	"HibernatorBase :: stringToStates (const char * str , ExtArray < SLEEP_STATE > & _states)"		4787370	0					
ANR	4787372	CompoundStatement		254:0:5712:5963	4787370	0					
ANR	4787373	ExpressionStatement	_states . truncate ( - 1 )	255:1:5715:5735	4787370	0	True				
ANR	4787374	CallExpression	_states . truncate ( - 1 )		4787370	0					
ANR	4787375	Callee	_states . truncate		4787370	0					
ANR	4787376	MemberAccess	_states . truncate		4787370	0					
ANR	4787377	Identifier	_states		4787370	0					
ANR	4787378	Identifier	truncate		4787370	1					
ANR	4787379	ArgumentList	- 1		4787370	1					
ANR	4787380	Argument	- 1		4787370	0					
ANR	4787381	UnaryOperationExpression	- 1		4787370	0					
ANR	4787382	UnaryOperator	-		4787370	0					
ANR	4787383	PrimaryExpression	1		4787370	1					
ANR	4787384	IdentifierDeclStatement	StringList strlist ( str ) ;	256:1:5738:5763	4787370	1	True				
ANR	4787385	IdentifierDecl	strlist ( str )		4787370	0					
ANR	4787386	IdentifierDeclType	StringList		4787370	0					
ANR	4787387	Identifier	strlist		4787370	1					
ANR	4787388	Identifier	str		4787370	2					
ANR	4787389	ExpressionStatement	strlist . rewind ( )	257:1:5766:5782	4787370	2	True				
ANR	4787390	CallExpression	strlist . rewind ( )		4787370	0					
ANR	4787391	Callee	strlist . rewind		4787370	0					
ANR	4787392	MemberAccess	strlist . rewind		4787370	0					
ANR	4787393	Identifier	strlist		4787370	0					
ANR	4787394	Identifier	rewind		4787370	1					
ANR	4787395	ArgumentList			4787370	1					
ANR	4787396	IdentifierDeclStatement	const char * name ;	258:1:5785:5801	4787370	3	True				
ANR	4787397	IdentifierDecl	* name		4787370	0					
ANR	4787398	IdentifierDeclType	const char *		4787370	0					
ANR	4787399	Identifier	name		4787370	1					
ANR	4787400	IdentifierDeclStatement	int n = 0 ;	259:1:5804:5815	4787370	4	True				
ANR	4787401	IdentifierDecl	n = 0		4787370	0					
ANR	4787402	IdentifierDeclType	int		4787370	0					
ANR	4787403	Identifier	n		4787370	1					
ANR	4787404	AssignmentExpression	n = 0		4787370	2		=			
ANR	4787405	Identifier	n		4787370	0					
ANR	4787406	PrimaryExpression	0		4787370	1					
ANR	4787407	WhileStatement	while ( ( name = strlist . next ( ) ) != NULL )		4787370	5					
ANR	4787408	Condition	( name = strlist . next ( ) ) != NULL	260:8:5825:5855	4787370	0	True				
ANR	4787409	EqualityExpression	( name = strlist . next ( ) ) != NULL		4787370	0		!=			
ANR	4787410	AssignmentExpression	name = strlist . next ( )		4787370	0		=			
ANR	4787411	Identifier	name		4787370	0					
ANR	4787412	CallExpression	strlist . next ( )		4787370	1					
ANR	4787413	Callee	strlist . next		4787370	0					
ANR	4787414	MemberAccess	strlist . next		4787370	0					
ANR	4787415	Identifier	strlist		4787370	0					
ANR	4787416	Identifier	next		4787370	1					
ANR	4787417	ArgumentList			4787370	1					
ANR	4787418	Identifier	NULL		4787370	1					
ANR	4787419	CompoundStatement		8:2:150:196	4787370	1					
ANR	4787420	IdentifierDeclStatement	SLEEP_STATE state = stringToSleepState ( name ) ;	261:2:5863:5909	4787370	0	True				
ANR	4787421	IdentifierDecl	state = stringToSleepState ( name )		4787370	0					
ANR	4787422	IdentifierDeclType	SLEEP_STATE		4787370	0					
ANR	4787423	Identifier	state		4787370	1					
ANR	4787424	AssignmentExpression	state = stringToSleepState ( name )		4787370	2		=			
ANR	4787425	Identifier	state		4787370	0					
ANR	4787426	CallExpression	stringToSleepState ( name )		4787370	1					
ANR	4787427	Callee	stringToSleepState		4787370	0					
ANR	4787428	Identifier	stringToSleepState		4787370	0					
ANR	4787429	ArgumentList	name		4787370	1					
ANR	4787430	Argument	name		4787370	0					
ANR	4787431	Identifier	name		4787370	0					
ANR	4787432	ExpressionStatement	_states . add ( state )	262:2:5913:5933	4787370	1	True				
ANR	4787433	CallExpression	_states . add ( state )		4787370	0					
ANR	4787434	Callee	_states . add		4787370	0					
ANR	4787435	MemberAccess	_states . add		4787370	0					
ANR	4787436	Identifier	_states		4787370	0					
ANR	4787437	Identifier	add		4787370	1					
ANR	4787438	ArgumentList	state		4787370	1					
ANR	4787439	Argument	state		4787370	0					
ANR	4787440	Identifier	state		4787370	0					
ANR	4787441	ExpressionStatement	n ++	263:2:5937:5940	4787370	2	True				
ANR	4787442	PostIncDecOperationExpression	n ++		4787370	0					
ANR	4787443	Identifier	n		4787370	0					
ANR	4787444	IncDec	++		4787370	1					
ANR	4787445	ReturnStatement	return ( n >= 1 ) ;	265:1:5946:5961	4787370	6	True				
ANR	4787446	RelationalExpression	n >= 1		4787370	0		>=			
ANR	4787447	Identifier	n		4787370	0					
ANR	4787448	PrimaryExpression	1		4787370	1					
ANR	4787449	ReturnType	bool		4787370	1					
ANR	4787450	Identifier	HibernatorBase :: stringToStates		4787370	2					
ANR	4787451	ParameterList	"const char * str , ExtArray < SLEEP_STATE > & _states"		4787370	3					
ANR	4787452	Parameter	const char * str	252:32:5654:5668	4787370	0	True				
ANR	4787453	ParameterType	const char *		4787370	0					
ANR	4787454	Identifier	str		4787370	1					
ANR	4787455	Parameter	ExtArray < SLEEP_STATE > & _states	253:8:5679:5708	4787370	1	True				
ANR	4787456	ParameterType	ExtArray < SLEEP_STATE > &		4787370	0					
ANR	4787457	Identifier	_states		4787370	1					
ANR	4787458	CFGEntryNode	ENTRY		4787370		True				
ANR	4787459	CFGExitNode	EXIT		4787370		True				
ANR	4787460	Symbol	str		4787370						
ANR	4787461	Symbol	NULL		4787370						
ANR	4787462	Symbol	strlist		4787370						
ANR	4787463	Symbol	name		4787370						
ANR	4787464	Symbol	stringToSleepState		4787370						
ANR	4787465	Symbol	state		4787370						
ANR	4787466	Symbol	_states		4787370						
ANR	4787467	Symbol	n		4787370						
ANR	4787468	Symbol	strlist . next		4787370						
ANR	4787469	Function	HibernatorBase :: statesToMask	268:0:5966:6170							
ANR	4787470	FunctionDef	"HibernatorBase :: statesToMask (const ExtArray < SLEEP_STATE > & _states , unsigned & mask)"		4787469	0					
ANR	4787471	CompoundStatement		271:0:6065:6170	4787469	0					
ANR	4787472	ExpressionStatement	mask = 0x0	272:1:6068:6078	4787469	0	True				
ANR	4787473	AssignmentExpression	mask = 0x0		4787469	0		=			
ANR	4787474	Identifier	mask		4787469	0					
ANR	4787475	PrimaryExpression	0x0		4787469	1					
ANR	4787476	ForStatement	for ( int i = 0 ; i <= _states . getlast ( ) ; i ++ )		4787469	1					
ANR	4787477	ForInit	int i = 0 ;	273:6:6086:6095	4787469	0	True				
ANR	4787478	IdentifierDeclStatement	int i = 0 ;		4787469	0					
ANR	4787479	IdentifierDecl	i = 0		4787469	0					
ANR	4787480	IdentifierDeclType	int		4787469	0					
ANR	4787481	Identifier	i		4787469	1					
ANR	4787482	AssignmentExpression	i = 0		4787469	2		=			
ANR	4787483	Identifier	i		4787469	0					
ANR	4787484	PrimaryExpression	0		4787469	1					
ANR	4787485	Condition	i <= _states . getlast ( )	273:18:6098:6119	4787469	1	True				
ANR	4787486	RelationalExpression	i <= _states . getlast ( )		4787469	0		<=			
ANR	4787487	Identifier	i		4787469	0					
ANR	4787488	CallExpression	_states . getlast ( )		4787469	1					
ANR	4787489	Callee	_states . getlast		4787469	0					
ANR	4787490	MemberAccess	_states . getlast		4787469	0					
ANR	4787491	Identifier	_states		4787469	0					
ANR	4787492	Identifier	getlast		4787469	1					
ANR	4787493	ArgumentList			4787469	1					
ANR	4787494	PostIncDecOperationExpression	i ++	273:43:6123:6125	4787469	2	True				
ANR	4787495	Identifier	i		4787469	0					
ANR	4787496	IncDec	++		4787469	1					
ANR	4787497	CompoundStatement		3:49:63:63	4787469	3					
ANR	4787498	ExpressionStatement	mask |= _states [ i ]	274:2:6133:6151	4787469	0	True				
ANR	4787499	AssignmentExpression	mask |= _states [ i ]		4787469	0		|=			
ANR	4787500	Identifier	mask		4787469	0					
ANR	4787501	ArrayIndexing	_states [ i ]		4787469	1					
ANR	4787502	Identifier	_states		4787469	0					
ANR	4787503	Identifier	i		4787469	1					
ANR	4787504	ReturnStatement	return true ;	276:1:6157:6168	4787469	2	True				
ANR	4787505	Identifier	true		4787469	0					
ANR	4787506	ReturnType	bool		4787469	1					
ANR	4787507	Identifier	HibernatorBase :: statesToMask		4787469	2					
ANR	4787508	ParameterList	"const ExtArray < SLEEP_STATE > & _states , unsigned & mask"		4787469	3					
ANR	4787509	Parameter	const ExtArray < SLEEP_STATE > & _states	269:30:6001:6036	4787469	0	True				
ANR	4787510	ParameterType	const ExtArray < SLEEP_STATE > &		4787469	0					
ANR	4787511	Identifier	_states		4787469	1					
ANR	4787512	Parameter	unsigned & mask	270:9:6048:6061	4787469	1	True				
ANR	4787513	ParameterType	unsigned &		4787469	0					
ANR	4787514	Identifier	mask		4787469	1					
ANR	4787515	CFGEntryNode	ENTRY		4787469		True				
ANR	4787516	CFGExitNode	EXIT		4787469		True				
ANR	4787517	Symbol	* i		4787469						
ANR	4787518	Symbol	* _states		4787469						
ANR	4787519	Symbol	true		4787469						
ANR	4787520	Symbol	i		4787469						
ANR	4787521	Symbol	_states		4787469						
ANR	4787522	Symbol	_states . getlast		4787469						
ANR	4787523	Symbol	mask		4787469						
ANR	4787524	Function	HibernatorBase :: stringToMask	279:0:6173:6398							
ANR	4787525	FunctionDef	"HibernatorBase :: stringToMask (const char * str , unsigned & mask)"		4787524	0					
ANR	4787526	CompoundStatement		282:0:6251:6398	4787524	0					
ANR	4787527	ExpressionStatement	mask = 0x0	283:1:6254:6264	4787524	0	True				
ANR	4787528	AssignmentExpression	mask = 0x0		4787524	0		=			
ANR	4787529	Identifier	mask		4787524	0					
ANR	4787530	PrimaryExpression	0x0		4787524	1					
ANR	4787531	IdentifierDeclStatement	ExtArray < SLEEP_STATE > _states ;	285:1:6268:6297	4787524	1	True				
ANR	4787532	IdentifierDecl	_states		4787524	0					
ANR	4787533	IdentifierDeclType	ExtArray < SLEEP_STATE >		4787524	0					
ANR	4787534	Identifier	_states		4787524	1					
ANR	4787535	IfStatement	"if ( ! stringToStates ( str , _states ) )"		4787524	2					
ANR	4787536	Condition	"! stringToStates ( str , _states )"	286:5:6304:6334	4787524	0	True				
ANR	4787537	UnaryOperationExpression	"! stringToStates ( str , _states )"		4787524	0					
ANR	4787538	UnaryOperator	!		4787524	0					
ANR	4787539	CallExpression	"stringToStates ( str , _states )"		4787524	1					
ANR	4787540	Callee	stringToStates		4787524	0					
ANR	4787541	Identifier	stringToStates		4787524	0					
ANR	4787542	ArgumentList	str		4787524	1					
ANR	4787543	Argument	str		4787524	0					
ANR	4787544	Identifier	str		4787524	0					
ANR	4787545	Argument	_states		4787524	1					
ANR	4787546	Identifier	_states		4787524	0					
ANR	4787547	CompoundStatement		5:39:86:86	4787524	1					
ANR	4787548	ReturnStatement	return false ;	287:2:6342:6354	4787524	0	True				
ANR	4787549	Identifier	false		4787524	0					
ANR	4787550	ReturnStatement	"return statesToMask ( _states , mask ) ;"	289:1:6360:6396	4787524	3	True				
ANR	4787551	CallExpression	"statesToMask ( _states , mask )"		4787524	0					
ANR	4787552	Callee	statesToMask		4787524	0					
ANR	4787553	Identifier	statesToMask		4787524	0					
ANR	4787554	ArgumentList	_states		4787524	1					
ANR	4787555	Argument	_states		4787524	0					
ANR	4787556	Identifier	_states		4787524	0					
ANR	4787557	Argument	mask		4787524	1					
ANR	4787558	Identifier	mask		4787524	0					
ANR	4787559	ReturnType	bool		4787524	1					
ANR	4787560	Identifier	HibernatorBase :: stringToMask		4787524	2					
ANR	4787561	ParameterList	"const char * str , unsigned & mask"		4787524	3					
ANR	4787562	Parameter	const char * str	280:30:6208:6222	4787524	0	True				
ANR	4787563	ParameterType	const char *		4787524	0					
ANR	4787564	Identifier	str		4787524	1					
ANR	4787565	Parameter	unsigned & mask	281:9:6234:6247	4787524	1	True				
ANR	4787566	ParameterType	unsigned &		4787524	0					
ANR	4787567	Identifier	mask		4787524	1					
ANR	4787568	CFGEntryNode	ENTRY		4787524		True				
ANR	4787569	CFGExitNode	EXIT		4787524		True				
ANR	4787570	Symbol	str		4787524						
ANR	4787571	Symbol	statesToMask		4787524						
ANR	4787572	Symbol	stringToStates		4787524						
ANR	4787573	Symbol	false		4787524						
ANR	4787574	Symbol	_states		4787524						
ANR	4787575	Symbol	mask		4787524						
ANR	4787576	Function	HibernatorBase :: Lookup	293:0:6402:6546							
ANR	4787577	FunctionDef	HibernatorBase :: Lookup (int n)		4787576	0					
ANR	4787578	CompoundStatement		295:0:6470:6546	4787576	0					
ANR	4787579	IfStatement	if ( ( n > 0 ) && ( n <= 5 ) )		4787576	0					
ANR	4787580	Condition	( n > 0 ) && ( n <= 5 )	296:6:6478:6498	4787576	0	True				
ANR	4787581	AndExpression	( n > 0 ) && ( n <= 5 )		4787576	0		&&			
ANR	4787582	RelationalExpression	n > 0		4787576	0		>			
ANR	4787583	Identifier	n		4787576	0					
ANR	4787584	PrimaryExpression	0		4787576	1					
ANR	4787585	RelationalExpression	n <= 5		4787576	1		<=			
ANR	4787586	Identifier	n		4787576	0					
ANR	4787587	PrimaryExpression	5		4787576	1					
ANR	4787588	CompoundStatement		2:30:31:31	4787576	1					
ANR	4787589	ReturnStatement	return states [ n ] ;	297:2:6506:6522	4787576	0	True				
ANR	4787590	ArrayIndexing	states [ n ]		4787576	0					
ANR	4787591	Identifier	states		4787576	0					
ANR	4787592	Identifier	n		4787576	1					
ANR	4787593	ReturnStatement	return states [ 0 ] ;	299:1:6528:6544	4787576	1	True				
ANR	4787594	ArrayIndexing	states [ 0 ]		4787576	0					
ANR	4787595	Identifier	states		4787576	0					
ANR	4787596	PrimaryExpression	0		4787576	1					
ANR	4787597	ReturnType	const HibernatorBase :: StateLookup &		4787576	1					
ANR	4787598	Identifier	HibernatorBase :: Lookup		4787576	2					
ANR	4787599	ParameterList	int n		4787576	3					
ANR	4787600	Parameter	int n	294:25:6462:6466	4787576	0	True				
ANR	4787601	ParameterType	int		4787576	0					
ANR	4787602	Identifier	n		4787576	1					
ANR	4787603	CFGEntryNode	ENTRY		4787576		True				
ANR	4787604	CFGExitNode	EXIT		4787576		True				
ANR	4787605	Symbol	* n		4787576						
ANR	4787606	Symbol	n		4787576						
ANR	4787607	Symbol	* states		4787576						
ANR	4787608	Symbol	states		4787576						
ANR	4787609	Function	HibernatorBase :: Lookup	302:0:6549:6764							
ANR	4787610	FunctionDef	HibernatorBase :: Lookup (SLEEP_STATE state)		4787609	0					
ANR	4787611	CompoundStatement		304:0:6629:6764	4787609	0					
ANR	4787612	ForStatement	for ( int i = 0 ; states [ i ] . number >= 0 ; i ++ )		4787609	0					
ANR	4787613	ForInit	int i = 0 ;	305:6:6637:6646	4787609	0	True				
ANR	4787614	IdentifierDeclStatement	int i = 0 ;		4787609	0					
ANR	4787615	IdentifierDecl	i = 0		4787609	0					
ANR	4787616	IdentifierDeclType	int		4787609	0					
ANR	4787617	Identifier	i		4787609	1					
ANR	4787618	AssignmentExpression	i = 0		4787609	2		=			
ANR	4787619	Identifier	i		4787609	0					
ANR	4787620	PrimaryExpression	0		4787609	1					
ANR	4787621	Condition	states [ i ] . number >= 0	305:18:6649:6669	4787609	1	True				
ANR	4787622	RelationalExpression	states [ i ] . number >= 0		4787609	0		>=			
ANR	4787623	MemberAccess	states [ i ] . number		4787609	0					
ANR	4787624	ArrayIndexing	states [ i ]		4787609	0					
ANR	4787625	Identifier	states		4787609	0					
ANR	4787626	Identifier	i		4787609	1					
ANR	4787627	Identifier	number		4787609	1					
ANR	4787628	PrimaryExpression	0		4787609	1					
ANR	4787629	PostIncDecOperationExpression	i ++	305:42:6673:6675	4787609	2	True				
ANR	4787630	Identifier	i		4787609	0					
ANR	4787631	IncDec	++		4787609	1					
ANR	4787632	CompoundStatement		2:48:49:49	4787609	3					
ANR	4787633	IfStatement	if ( states [ i ] . state == state )		4787609	0					
ANR	4787634	Condition	states [ i ] . state == state	306:7:6688:6711	4787609	0	True				
ANR	4787635	EqualityExpression	states [ i ] . state == state		4787609	0		==			
ANR	4787636	MemberAccess	states [ i ] . state		4787609	0					
ANR	4787637	ArrayIndexing	states [ i ]		4787609	0					
ANR	4787638	Identifier	states		4787609	0					
ANR	4787639	Identifier	i		4787609	1					
ANR	4787640	Identifier	state		4787609	1					
ANR	4787641	Identifier	state		4787609	1					
ANR	4787642	CompoundStatement		3:34:85:85	4787609	1					
ANR	4787643	ReturnStatement	return states [ i ] ;	307:3:6720:6736	4787609	0	True				
ANR	4787644	ArrayIndexing	states [ i ]		4787609	0					
ANR	4787645	Identifier	states		4787609	0					
ANR	4787646	Identifier	i		4787609	1					
ANR	4787647	ReturnStatement	return states [ 0 ] ;	310:1:6746:6762	4787609	1	True				
ANR	4787648	ArrayIndexing	states [ 0 ]		4787609	0					
ANR	4787649	Identifier	states		4787609	0					
ANR	4787650	PrimaryExpression	0		4787609	1					
ANR	4787651	ReturnType	const HibernatorBase :: StateLookup &		4787609	1					
ANR	4787652	Identifier	HibernatorBase :: Lookup		4787609	2					
ANR	4787653	ParameterList	SLEEP_STATE state		4787609	3					
ANR	4787654	Parameter	SLEEP_STATE state	303:25:6609:6625	4787609	0	True				
ANR	4787655	ParameterType	SLEEP_STATE		4787609	0					
ANR	4787656	Identifier	state		4787609	1					
ANR	4787657	CFGEntryNode	ENTRY		4787609		True				
ANR	4787658	CFGExitNode	EXIT		4787609		True				
ANR	4787659	Symbol	states [ i ] . number		4787609						
ANR	4787660	Symbol	* i		4787609						
ANR	4787661	Symbol	states [ i ] . state		4787609						
ANR	4787662	Symbol	i		4787609						
ANR	4787663	Symbol	state		4787609						
ANR	4787664	Symbol	* states		4787609						
ANR	4787665	Symbol	states		4787609						
ANR	4787666	Function	HibernatorBase :: Lookup	313:0:6767:7103							
ANR	4787667	FunctionDef	HibernatorBase :: Lookup (const char * name)		4787666	0					
ANR	4787668	CompoundStatement		315:0:6846:7103	4787666	0					
ANR	4787669	ForStatement	for ( int i = 0 ; states [ i ] . number >= 0 ; i ++ )		4787666	0					
ANR	4787670	ForInit	int i = 0 ;	316:6:6854:6863	4787666	0	True				
ANR	4787671	IdentifierDeclStatement	int i = 0 ;		4787666	0					
ANR	4787672	IdentifierDecl	i = 0		4787666	0					
ANR	4787673	IdentifierDeclType	int		4787666	0					
ANR	4787674	Identifier	i		4787666	1					
ANR	4787675	AssignmentExpression	i = 0		4787666	2		=			
ANR	4787676	Identifier	i		4787666	0					
ANR	4787677	PrimaryExpression	0		4787666	1					
ANR	4787678	Condition	states [ i ] . number >= 0	316:18:6866:6886	4787666	1	True				
ANR	4787679	RelationalExpression	states [ i ] . number >= 0		4787666	0		>=			
ANR	4787680	MemberAccess	states [ i ] . number		4787666	0					
ANR	4787681	ArrayIndexing	states [ i ]		4787666	0					
ANR	4787682	Identifier	states		4787666	0					
ANR	4787683	Identifier	i		4787666	1					
ANR	4787684	Identifier	number		4787666	1					
ANR	4787685	PrimaryExpression	0		4787666	1					
ANR	4787686	PostIncDecOperationExpression	i ++	316:42:6890:6892	4787666	2	True				
ANR	4787687	Identifier	i		4787666	0					
ANR	4787688	IncDec	++		4787666	1					
ANR	4787689	CompoundStatement		3:2:53:105	4787666	3					
ANR	4787690	IdentifierDeclStatement	const HibernatorBase :: StateLookup & state = states [ i ] ;	317:2:6900:6952	4787666	0	True				
ANR	4787691	IdentifierDecl	& state = states [ i ]		4787666	0					
ANR	4787692	IdentifierDeclType	const HibernatorBase :: StateLookup &		4787666	0					
ANR	4787693	Identifier	state		4787666	1					
ANR	4787694	AssignmentExpression	& state = states [ i ]		4787666	2		=			
ANR	4787695	Identifier	state		4787666	0					
ANR	4787696	ArrayIndexing	states [ i ]		4787666	1					
ANR	4787697	Identifier	states		4787666	0					
ANR	4787698	Identifier	i		4787666	1					
ANR	4787699	ForStatement	for ( int j = 0 ; state . strings [ j ] ; j ++ )		4787666	1					
ANR	4787700	ForInit	int j = 0 ;	319:7:6962:6971	4787666	0	True				
ANR	4787701	IdentifierDeclStatement	int j = 0 ;		4787666	0					
ANR	4787702	IdentifierDecl	j = 0		4787666	0					
ANR	4787703	IdentifierDeclType	int		4787666	0					
ANR	4787704	Identifier	j		4787666	1					
ANR	4787705	AssignmentExpression	j = 0		4787666	2		=			
ANR	4787706	Identifier	j		4787666	0					
ANR	4787707	PrimaryExpression	0		4787666	1					
ANR	4787708	Condition	state . strings [ j ]	319:19:6974:6989	4787666	1	True				
ANR	4787709	ArrayIndexing	state . strings [ j ]		4787666	0					
ANR	4787710	MemberAccess	state . strings		4787666	0					
ANR	4787711	Identifier	state		4787666	0					
ANR	4787712	Identifier	strings		4787666	1					
ANR	4787713	Identifier	j		4787666	1					
ANR	4787714	PostIncDecOperationExpression	j ++	319:38:6993:6995	4787666	2	True				
ANR	4787715	Identifier	j		4787666	0					
ANR	4787716	IncDec	++		4787666	1					
ANR	4787717	CompoundStatement		5:44:152:152	4787666	3					
ANR	4787718	IfStatement	"if ( strcasecmp ( state . strings [ j ] , name ) == 0 )"		4787666	0					
ANR	4787719	Condition	"strcasecmp ( state . strings [ j ] , name ) == 0"	320:8:7009:7048	4787666	0	True				
ANR	4787720	EqualityExpression	"strcasecmp ( state . strings [ j ] , name ) == 0"		4787666	0		==			
ANR	4787721	CallExpression	"strcasecmp ( state . strings [ j ] , name )"		4787666	0					
ANR	4787722	Callee	strcasecmp		4787666	0					
ANR	4787723	Identifier	strcasecmp		4787666	0					
ANR	4787724	ArgumentList	state . strings [ j ]		4787666	1					
ANR	4787725	Argument	state . strings [ j ]		4787666	0					
ANR	4787726	ArrayIndexing	state . strings [ j ]		4787666	0					
ANR	4787727	MemberAccess	state . strings		4787666	0					
ANR	4787728	Identifier	state		4787666	0					
ANR	4787729	Identifier	strings		4787666	1					
ANR	4787730	Identifier	j		4787666	1					
ANR	4787731	Argument	name		4787666	1					
ANR	4787732	Identifier	name		4787666	0					
ANR	4787733	PrimaryExpression	0		4787666	1					
ANR	4787734	CompoundStatement		6:51:205:205	4787666	1					
ANR	4787735	ReturnStatement	return state ;	321:4:7058:7070	4787666	0	True				
ANR	4787736	Identifier	state		4787666	0					
ANR	4787737	ReturnStatement	return states [ 0 ] ;	325:1:7085:7101	4787666	1	True				
ANR	4787738	ArrayIndexing	states [ 0 ]		4787666	0					
ANR	4787739	Identifier	states		4787666	0					
ANR	4787740	PrimaryExpression	0		4787666	1					
ANR	4787741	ReturnType	const HibernatorBase :: StateLookup &		4787666	1					
ANR	4787742	Identifier	HibernatorBase :: Lookup		4787666	2					
ANR	4787743	ParameterList	const char * name		4787666	3					
ANR	4787744	Parameter	const char * name	314:25:6827:6842	4787666	0	True				
ANR	4787745	ParameterType	const char *		4787666	0					
ANR	4787746	Identifier	name		4787666	1					
ANR	4787747	CFGEntryNode	ENTRY		4787666		True				
ANR	4787748	CFGExitNode	EXIT		4787666		True				
ANR	4787749	Symbol	state . strings		4787666						
ANR	4787750	Symbol	i		4787666						
ANR	4787751	Symbol	j		4787666						
ANR	4787752	Symbol	states		4787666						
ANR	4787753	Symbol	* state		4787666						
ANR	4787754	Symbol	states [ i ] . number		4787666						
ANR	4787755	Symbol	* i		4787666						
ANR	4787756	Symbol	* j		4787666						
ANR	4787757	Symbol	* state . strings		4787666						
ANR	4787758	Symbol	name		4787666						
ANR	4787759	Symbol	state		4787666						
ANR	4787760	Symbol	strcasecmp		4787666						
ANR	4787761	Symbol	* states		4787666						
