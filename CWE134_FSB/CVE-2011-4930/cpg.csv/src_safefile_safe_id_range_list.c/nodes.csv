command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5210453	File	data/converged/CVE-2011-4930_htcondor/src_safefile_safe_id_range_list.c								
ANR	5210454	DeclStmt									
ANR	5210455	Decl							const id_t	const id_t	safe_err_id
ANR	5210456	ClassDef	safe_id_range_list_elem	59:8:1481:1580							
ANR	5210457	DeclStmt									
ANR	5210458	Decl							id_t	id_t	min_value
ANR	5210459	DeclStmt									
ANR	5210460	Decl							id_t	id_t	max_value
ANR	5210461	DeclStmt									
ANR	5210462	Decl							safe_id_range_list_elem	safe_id_range_list_elem	safe_id_range_list_elem
ANR	5210463	Function	safe_init_id_range_list	85:0:1997:2329							
ANR	5210464	FunctionDef	safe_init_id_range_list (safe_id_range_list * list)		5210463	0					
ANR	5210465	CompoundStatement		86:0:2051:2329	5210463	0					
ANR	5210466	IfStatement	if ( list == NULL )		5210463	0					
ANR	5210467	Condition	list == NULL	87:8:2061:2072	5210463	0	True				
ANR	5210468	EqualityExpression	list == NULL		5210463	0		==			
ANR	5210469	Identifier	list		5210463	0					
ANR	5210470	Identifier	NULL		5210463	1					
ANR	5210471	CompoundStatement		2:23:24:24	5210463	1					
ANR	5210472	ExpressionStatement	errno = EINVAL	88:1:2079:2093	5210463	0	True				
ANR	5210473	AssignmentExpression	errno = EINVAL		5210463	0		=			
ANR	5210474	Identifier	errno		5210463	0					
ANR	5210475	Identifier	EINVAL		5210463	1					
ANR	5210476	ReturnStatement	return - 1 ;	89:1:2096:2105	5210463	1	True				
ANR	5210477	UnaryOperationExpression	- 1		5210463	0					
ANR	5210478	UnaryOperator	-		5210463	0					
ANR	5210479	PrimaryExpression	1		5210463	1					
ANR	5210480	ExpressionStatement	list -> count = 0	92:4:2118:2133	5210463	1	True				
ANR	5210481	AssignmentExpression	list -> count = 0		5210463	0		=			
ANR	5210482	PtrMemberAccess	list -> count		5210463	0					
ANR	5210483	Identifier	list		5210463	0					
ANR	5210484	Identifier	count		5210463	1					
ANR	5210485	PrimaryExpression	0		5210463	1					
ANR	5210486	ExpressionStatement	list -> capacity = 10	93:4:2139:2158	5210463	2	True				
ANR	5210487	AssignmentExpression	list -> capacity = 10		5210463	0		=			
ANR	5210488	PtrMemberAccess	list -> capacity		5210463	0					
ANR	5210489	Identifier	list		5210463	0					
ANR	5210490	Identifier	capacity		5210463	1					
ANR	5210491	PrimaryExpression	10		5210463	1					
ANR	5210492	ExpressionStatement	list -> list = ( safe_id_range_list_elem * ) malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )	94:4:2164:2249	5210463	3	True				
ANR	5210493	AssignmentExpression	list -> list = ( safe_id_range_list_elem * ) malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )		5210463	0		=			
ANR	5210494	PtrMemberAccess	list -> list		5210463	0					
ANR	5210495	Identifier	list		5210463	0					
ANR	5210496	Identifier	list		5210463	1					
ANR	5210497	CastExpression	( safe_id_range_list_elem * ) malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )		5210463	1					
ANR	5210498	CastTarget	safe_id_range_list_elem *		5210463	0					
ANR	5210499	CallExpression	malloc ( list -> capacity * sizeof ( list -> list [ 0 ] ) )		5210463	1					
ANR	5210500	Callee	malloc		5210463	0					
ANR	5210501	Identifier	malloc		5210463	0					
ANR	5210502	ArgumentList	list -> capacity * sizeof ( list -> list [ 0 ] )		5210463	1					
ANR	5210503	Argument	list -> capacity * sizeof ( list -> list [ 0 ] )		5210463	0					
ANR	5210504	MultiplicativeExpression	list -> capacity * sizeof ( list -> list [ 0 ] )		5210463	0		*			
ANR	5210505	PtrMemberAccess	list -> capacity		5210463	0					
ANR	5210506	Identifier	list		5210463	0					
ANR	5210507	Identifier	capacity		5210463	1					
ANR	5210508	SizeofExpression	sizeof ( list -> list [ 0 ] )		5210463	1					
ANR	5210509	Sizeof	sizeof		5210463	0					
ANR	5210510	ArrayIndexing	list -> list [ 0 ]		5210463	1					
ANR	5210511	PtrMemberAccess	list -> list		5210463	0					
ANR	5210512	Identifier	list		5210463	0					
ANR	5210513	Identifier	list		5210463	1					
ANR	5210514	PrimaryExpression	0		5210463	1					
ANR	5210515	IfStatement	if ( list -> list == 0 )		5210463	4					
ANR	5210516	Condition	list -> list == 0	95:8:2259:2273	5210463	0	True				
ANR	5210517	EqualityExpression	list -> list == 0		5210463	0		==			
ANR	5210518	PtrMemberAccess	list -> list		5210463	0					
ANR	5210519	Identifier	list		5210463	0					
ANR	5210520	Identifier	list		5210463	1					
ANR	5210521	PrimaryExpression	0		5210463	1					
ANR	5210522	CompoundStatement		10:26:225:225	5210463	1					
ANR	5210523	ExpressionStatement	errno = ENOMEM	96:1:2280:2294	5210463	0	True				
ANR	5210524	AssignmentExpression	errno = ENOMEM		5210463	0		=			
ANR	5210525	Identifier	errno		5210463	0					
ANR	5210526	Identifier	ENOMEM		5210463	1					
ANR	5210527	ReturnStatement	return - 1 ;	97:1:2297:2306	5210463	1	True				
ANR	5210528	UnaryOperationExpression	- 1		5210463	0					
ANR	5210529	UnaryOperator	-		5210463	0					
ANR	5210530	PrimaryExpression	1		5210463	1					
ANR	5210531	ReturnStatement	return 0 ;	100:4:2319:2327	5210463	5	True				
ANR	5210532	PrimaryExpression	0		5210463	0					
ANR	5210533	ReturnType	int		5210463	1					
ANR	5210534	Identifier	safe_init_id_range_list		5210463	2					
ANR	5210535	ParameterList	safe_id_range_list * list		5210463	3					
ANR	5210536	Parameter	safe_id_range_list * list	85:28:2025:2048	5210463	0	True				
ANR	5210537	ParameterType	safe_id_range_list *		5210463	0					
ANR	5210538	Identifier	list		5210463	1					
ANR	5210539	CFGEntryNode	ENTRY		5210463		True				
ANR	5210540	CFGExitNode	EXIT		5210463		True				
ANR	5210541	Symbol	EINVAL		5210463						
ANR	5210542	Symbol	malloc		5210463						
ANR	5210543	Symbol	ENOMEM		5210463						
ANR	5210544	Symbol	errno		5210463						
ANR	5210545	Symbol	* list -> list		5210463						
ANR	5210546	Symbol	NULL		5210463						
ANR	5210547	Symbol	* * list		5210463						
ANR	5210548	Symbol	list -> list		5210463						
ANR	5210549	Symbol	* list		5210463						
ANR	5210550	Symbol	list -> capacity		5210463						
ANR	5210551	Symbol	list		5210463						
ANR	5210552	Symbol	list -> count		5210463						
ANR	5210553	Function	safe_add_id_range_to_list	119:0:2705:3396							
ANR	5210554	FunctionDef	"safe_add_id_range_to_list (safe_id_range_list * list , id_t min_id , id_t max_id)"		5210553	0					
ANR	5210555	CompoundStatement		120:0:2787:3396	5210553	0					
ANR	5210556	IfStatement	if ( list == NULL || min_id > max_id )		5210553	0					
ANR	5210557	Condition	list == NULL || min_id > max_id	121:8:2797:2827	5210553	0	True				
ANR	5210558	OrExpression	list == NULL || min_id > max_id		5210553	0		||			
ANR	5210559	EqualityExpression	list == NULL		5210553	0		==			
ANR	5210560	Identifier	list		5210553	0					
ANR	5210561	Identifier	NULL		5210553	1					
ANR	5210562	RelationalExpression	min_id > max_id		5210553	1		>			
ANR	5210563	Identifier	min_id		5210553	0					
ANR	5210564	Identifier	max_id		5210553	1					
ANR	5210565	CompoundStatement		2:42:43:43	5210553	1					
ANR	5210566	ExpressionStatement	errno = EINVAL	122:1:2834:2848	5210553	0	True				
ANR	5210567	AssignmentExpression	errno = EINVAL		5210553	0		=			
ANR	5210568	Identifier	errno		5210553	0					
ANR	5210569	Identifier	EINVAL		5210553	1					
ANR	5210570	ReturnStatement	return - 1 ;	123:1:2851:2860	5210553	1	True				
ANR	5210571	UnaryOperationExpression	- 1		5210553	0					
ANR	5210572	UnaryOperator	-		5210553	0					
ANR	5210573	PrimaryExpression	1		5210553	1					
ANR	5210574	IfStatement	if ( list -> count == list -> capacity )		5210553	1					
ANR	5210575	Condition	list -> count == list -> capacity	126:8:2877:2905	5210553	0	True				
ANR	5210576	EqualityExpression	list -> count == list -> capacity		5210553	0		==			
ANR	5210577	PtrMemberAccess	list -> count		5210553	0					
ANR	5210578	Identifier	list		5210553	0					
ANR	5210579	Identifier	count		5210553	1					
ANR	5210580	PtrMemberAccess	list -> capacity		5210553	1					
ANR	5210581	Identifier	list		5210553	0					
ANR	5210582	Identifier	capacity		5210553	1					
ANR	5210583	CompoundStatement		9:1:178:282	5210553	1					
ANR	5210584	IdentifierDeclStatement	size_t new_capacity = 10 + 11 * list -> capacity / 10 ;	127:1:2912:2963	5210553	0	True				
ANR	5210585	IdentifierDecl	new_capacity = 10 + 11 * list -> capacity / 10		5210553	0					
ANR	5210586	IdentifierDeclType	size_t		5210553	0					
ANR	5210587	Identifier	new_capacity		5210553	1					
ANR	5210588	AssignmentExpression	new_capacity = 10 + 11 * list -> capacity / 10		5210553	2		=			
ANR	5210589	Identifier	new_capacity		5210553	0					
ANR	5210590	AdditiveExpression	10 + 11 * list -> capacity / 10		5210553	1		+			
ANR	5210591	PrimaryExpression	10		5210553	0					
ANR	5210592	MultiplicativeExpression	11 * list -> capacity / 10		5210553	1		*			
ANR	5210593	PrimaryExpression	11		5210553	0					
ANR	5210594	MultiplicativeExpression	list -> capacity / 10		5210553	1		/			
ANR	5210595	PtrMemberAccess	list -> capacity		5210553	0					
ANR	5210596	Identifier	list		5210553	0					
ANR	5210597	Identifier	capacity		5210553	1					
ANR	5210598	PrimaryExpression	10		5210553	1					
ANR	5210599	IdentifierDeclStatement	safe_id_range_list_elem * new_list = ( safe_id_range_list_elem * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) ) ;	128:1:2966:3070	5210553	1	True				
ANR	5210600	IdentifierDecl	* new_list = ( safe_id_range_list_elem * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		5210553	0					
ANR	5210601	IdentifierDeclType	safe_id_range_list_elem *		5210553	0					
ANR	5210602	Identifier	new_list		5210553	1					
ANR	5210603	AssignmentExpression	* new_list = ( safe_id_range_list_elem * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		5210553	2		=			
ANR	5210604	Identifier	new_list		5210553	0					
ANR	5210605	CastExpression	( safe_id_range_list_elem * ) malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		5210553	1					
ANR	5210606	CastTarget	safe_id_range_list_elem *		5210553	0					
ANR	5210607	CallExpression	malloc ( new_capacity * sizeof ( new_list [ 0 ] ) )		5210553	1					
ANR	5210608	Callee	malloc		5210553	0					
ANR	5210609	Identifier	malloc		5210553	0					
ANR	5210610	ArgumentList	new_capacity * sizeof ( new_list [ 0 ] )		5210553	1					
ANR	5210611	Argument	new_capacity * sizeof ( new_list [ 0 ] )		5210553	0					
ANR	5210612	MultiplicativeExpression	new_capacity * sizeof ( new_list [ 0 ] )		5210553	0		*			
ANR	5210613	Identifier	new_capacity		5210553	0					
ANR	5210614	SizeofExpression	sizeof ( new_list [ 0 ] )		5210553	1					
ANR	5210615	Sizeof	sizeof		5210553	0					
ANR	5210616	ArrayIndexing	new_list [ 0 ]		5210553	1					
ANR	5210617	Identifier	new_list		5210553	0					
ANR	5210618	PrimaryExpression	0		5210553	1					
ANR	5210619	IfStatement	if ( new_list == 0 )		5210553	2					
ANR	5210620	Condition	new_list == 0	129:5:3077:3089	5210553	0	True				
ANR	5210621	EqualityExpression	new_list == 0		5210553	0		==			
ANR	5210622	Identifier	new_list		5210553	0					
ANR	5210623	PrimaryExpression	0		5210553	1					
ANR	5210624	CompoundStatement		10:21:305:305	5210553	1					
ANR	5210625	ExpressionStatement	errno = ENOMEM	130:5:3100:3114	5210553	0	True				
ANR	5210626	AssignmentExpression	errno = ENOMEM		5210553	0		=			
ANR	5210627	Identifier	errno		5210553	0					
ANR	5210628	Identifier	ENOMEM		5210553	1					
ANR	5210629	ReturnStatement	return - 1 ;	131:5:3121:3130	5210553	1	True				
ANR	5210630	UnaryOperationExpression	- 1		5210553	0					
ANR	5210631	UnaryOperator	-		5210553	0					
ANR	5210632	PrimaryExpression	1		5210553	1					
ANR	5210633	ExpressionStatement	"memcpy ( new_list , list -> list , list -> count * sizeof ( new_list [ 0 ] ) )"	133:1:3136:3199	5210553	3	True				
ANR	5210634	CallExpression	"memcpy ( new_list , list -> list , list -> count * sizeof ( new_list [ 0 ] ) )"		5210553	0					
ANR	5210635	Callee	memcpy		5210553	0					
ANR	5210636	Identifier	memcpy		5210553	0					
ANR	5210637	ArgumentList	new_list		5210553	1					
ANR	5210638	Argument	new_list		5210553	0					
ANR	5210639	Identifier	new_list		5210553	0					
ANR	5210640	Argument	list -> list		5210553	1					
ANR	5210641	PtrMemberAccess	list -> list		5210553	0					
ANR	5210642	Identifier	list		5210553	0					
ANR	5210643	Identifier	list		5210553	1					
ANR	5210644	Argument	list -> count * sizeof ( new_list [ 0 ] )		5210553	2					
ANR	5210645	MultiplicativeExpression	list -> count * sizeof ( new_list [ 0 ] )		5210553	0		*			
ANR	5210646	PtrMemberAccess	list -> count		5210553	0					
ANR	5210647	Identifier	list		5210553	0					
ANR	5210648	Identifier	count		5210553	1					
ANR	5210649	SizeofExpression	sizeof ( new_list [ 0 ] )		5210553	1					
ANR	5210650	Sizeof	sizeof		5210553	0					
ANR	5210651	ArrayIndexing	new_list [ 0 ]		5210553	1					
ANR	5210652	Identifier	new_list		5210553	0					
ANR	5210653	PrimaryExpression	0		5210553	1					
ANR	5210654	ExpressionStatement	free ( list -> list )	134:1:3202:3218	5210553	4	True				
ANR	5210655	CallExpression	free ( list -> list )		5210553	0					
ANR	5210656	Callee	free		5210553	0					
ANR	5210657	Identifier	free		5210553	0					
ANR	5210658	ArgumentList	list -> list		5210553	1					
ANR	5210659	Argument	list -> list		5210553	0					
ANR	5210660	PtrMemberAccess	list -> list		5210553	0					
ANR	5210661	Identifier	list		5210553	0					
ANR	5210662	Identifier	list		5210553	1					
ANR	5210663	ExpressionStatement	list -> list = new_list	135:1:3221:3242	5210553	5	True				
ANR	5210664	AssignmentExpression	list -> list = new_list		5210553	0		=			
ANR	5210665	PtrMemberAccess	list -> list		5210553	0					
ANR	5210666	Identifier	list		5210553	0					
ANR	5210667	Identifier	list		5210553	1					
ANR	5210668	Identifier	new_list		5210553	1					
ANR	5210669	ExpressionStatement	list -> capacity = new_capacity	136:1:3245:3274	5210553	6	True				
ANR	5210670	AssignmentExpression	list -> capacity = new_capacity		5210553	0		=			
ANR	5210671	PtrMemberAccess	list -> capacity		5210553	0					
ANR	5210672	Identifier	list		5210553	0					
ANR	5210673	Identifier	capacity		5210553	1					
ANR	5210674	Identifier	new_capacity		5210553	1					
ANR	5210675	ExpressionStatement	list -> list [ list -> count ] . min_value = min_id	139:4:3287:3329	5210553	2	True				
ANR	5210676	AssignmentExpression	list -> list [ list -> count ] . min_value = min_id		5210553	0		=			
ANR	5210677	MemberAccess	list -> list [ list -> count ] . min_value		5210553	0					
ANR	5210678	ArrayIndexing	list -> list [ list -> count ]		5210553	0					
ANR	5210679	PtrMemberAccess	list -> list		5210553	0					
ANR	5210680	Identifier	list		5210553	0					
ANR	5210681	Identifier	list		5210553	1					
ANR	5210682	PtrMemberAccess	list -> count		5210553	1					
ANR	5210683	Identifier	list		5210553	0					
ANR	5210684	Identifier	count		5210553	1					
ANR	5210685	Identifier	min_value		5210553	1					
ANR	5210686	Identifier	min_id		5210553	1					
ANR	5210687	ExpressionStatement	list -> list [ list -> count ++ ] . max_value = max_id	140:4:3335:3379	5210553	3	True				
ANR	5210688	AssignmentExpression	list -> list [ list -> count ++ ] . max_value = max_id		5210553	0		=			
ANR	5210689	MemberAccess	list -> list [ list -> count ++ ] . max_value		5210553	0					
ANR	5210690	ArrayIndexing	list -> list [ list -> count ++ ]		5210553	0					
ANR	5210691	PtrMemberAccess	list -> list		5210553	0					
ANR	5210692	Identifier	list		5210553	0					
ANR	5210693	Identifier	list		5210553	1					
ANR	5210694	PostIncDecOperationExpression	list -> count ++		5210553	1					
ANR	5210695	PtrMemberAccess	list -> count		5210553	0					
ANR	5210696	Identifier	list		5210553	0					
ANR	5210697	Identifier	count		5210553	1					
ANR	5210698	IncDec	++		5210553	1					
ANR	5210699	Identifier	max_value		5210553	1					
ANR	5210700	Identifier	max_id		5210553	1					
ANR	5210701	ReturnStatement	return 0 ;	142:4:3386:3394	5210553	4	True				
ANR	5210702	PrimaryExpression	0		5210553	0					
ANR	5210703	ReturnType	int		5210553	1					
ANR	5210704	Identifier	safe_add_id_range_to_list		5210553	2					
ANR	5210705	ParameterList	"safe_id_range_list * list , id_t min_id , id_t max_id"		5210553	3					
ANR	5210706	Parameter	safe_id_range_list * list	119:30:2735:2758	5210553	0	True				
ANR	5210707	ParameterType	safe_id_range_list *		5210553	0					
ANR	5210708	Identifier	list		5210553	1					
ANR	5210709	Parameter	id_t min_id	119:56:2761:2771	5210553	1	True				
ANR	5210710	ParameterType	id_t		5210553	0					
ANR	5210711	Identifier	min_id		5210553	1					
ANR	5210712	Parameter	id_t max_id	119:69:2774:2784	5210553	2	True				
ANR	5210713	ParameterType	id_t		5210553	0					
ANR	5210714	Identifier	max_id		5210553	1					
ANR	5210715	CFGEntryNode	ENTRY		5210553		True				
ANR	5210716	CFGExitNode	EXIT		5210553		True				
ANR	5210717	Symbol	malloc		5210553						
ANR	5210718	Symbol	ENOMEM		5210553						
ANR	5210719	Symbol	errno		5210553						
ANR	5210720	Symbol	* list -> list		5210553						
ANR	5210721	Symbol	NULL		5210553						
ANR	5210722	Symbol	list -> list [ list -> count ++ ] . max_value		5210553						
ANR	5210723	Symbol	new_list		5210553						
ANR	5210724	Symbol	* list -> count		5210553						
ANR	5210725	Symbol	list		5210553						
ANR	5210726	Symbol	list -> count		5210553						
ANR	5210727	Symbol	EINVAL		5210553						
ANR	5210728	Symbol	list -> list [ list -> count ] . min_value		5210553						
ANR	5210729	Symbol	min_id		5210553						
ANR	5210730	Symbol	* * list		5210553						
ANR	5210731	Symbol	new_capacity		5210553						
ANR	5210732	Symbol	list -> list		5210553						
ANR	5210733	Symbol	* list		5210553						
ANR	5210734	Symbol	max_id		5210553						
ANR	5210735	Symbol	list -> capacity		5210553						
ANR	5210736	Symbol	* new_list		5210553						
ANR	5210737	Function	safe_add_id_to_list	159:0:3708:3821							
ANR	5210738	FunctionDef	"safe_add_id_to_list (safe_id_range_list * list , id_t id)"		5210737	0					
ANR	5210739	CompoundStatement		160:0:3767:3821	5210737	0					
ANR	5210740	ReturnStatement	"return safe_add_id_range_to_list ( list , id , id ) ;"	161:4:3773:3819	5210737	0	True				
ANR	5210741	CallExpression	"safe_add_id_range_to_list ( list , id , id )"		5210737	0					
ANR	5210742	Callee	safe_add_id_range_to_list		5210737	0					
ANR	5210743	Identifier	safe_add_id_range_to_list		5210737	0					
ANR	5210744	ArgumentList	list		5210737	1					
ANR	5210745	Argument	list		5210737	0					
ANR	5210746	Identifier	list		5210737	0					
ANR	5210747	Argument	id		5210737	1					
ANR	5210748	Identifier	id		5210737	0					
ANR	5210749	Argument	id		5210737	2					
ANR	5210750	Identifier	id		5210737	0					
ANR	5210751	ReturnType	int		5210737	1					
ANR	5210752	Identifier	safe_add_id_to_list		5210737	2					
ANR	5210753	ParameterList	"safe_id_range_list * list , id_t id"		5210737	3					
ANR	5210754	Parameter	safe_id_range_list * list	159:24:3732:3755	5210737	0	True				
ANR	5210755	ParameterType	safe_id_range_list *		5210737	0					
ANR	5210756	Identifier	list		5210737	1					
ANR	5210757	Parameter	id_t id	159:50:3758:3764	5210737	1	True				
ANR	5210758	ParameterType	id_t		5210737	0					
ANR	5210759	Identifier	id		5210737	1					
ANR	5210760	CFGEntryNode	ENTRY		5210737		True				
ANR	5210761	CFGExitNode	EXIT		5210737		True				
ANR	5210762	Symbol	id		5210737						
ANR	5210763	Symbol	list		5210737						
ANR	5210764	Symbol	safe_add_id_range_to_list		5210737						
ANR	5210765	Function	safe_destroy_id_range_list	174:0:4024:4229							
ANR	5210766	FunctionDef	safe_destroy_id_range_list (safe_id_range_list * list)		5210765	0					
ANR	5210767	CompoundStatement		175:0:4082:4229	5210765	0					
ANR	5210768	IfStatement	if ( list == NULL )		5210765	0					
ANR	5210769	Condition	list == NULL	176:8:4092:4103	5210765	0	True				
ANR	5210770	EqualityExpression	list == NULL		5210765	0		==			
ANR	5210771	Identifier	list		5210765	0					
ANR	5210772	Identifier	NULL		5210765	1					
ANR	5210773	CompoundStatement		2:23:24:24	5210765	1					
ANR	5210774	ExpressionStatement	errno = EINVAL	177:1:4110:4124	5210765	0	True				
ANR	5210775	AssignmentExpression	errno = EINVAL		5210765	0		=			
ANR	5210776	Identifier	errno		5210765	0					
ANR	5210777	Identifier	EINVAL		5210765	1					
ANR	5210778	ReturnStatement	return ;	178:1:4127:4133	5210765	1	True				
ANR	5210779	ExpressionStatement	list -> capacity = 0	181:4:4146:4164	5210765	1	True				
ANR	5210780	AssignmentExpression	list -> capacity = 0		5210765	0		=			
ANR	5210781	PtrMemberAccess	list -> capacity		5210765	0					
ANR	5210782	Identifier	list		5210765	0					
ANR	5210783	Identifier	capacity		5210765	1					
ANR	5210784	PrimaryExpression	0		5210765	1					
ANR	5210785	ExpressionStatement	list -> count = 0	182:4:4170:4185	5210765	2	True				
ANR	5210786	AssignmentExpression	list -> count = 0		5210765	0		=			
ANR	5210787	PtrMemberAccess	list -> count		5210765	0					
ANR	5210788	Identifier	list		5210765	0					
ANR	5210789	Identifier	count		5210765	1					
ANR	5210790	PrimaryExpression	0		5210765	1					
ANR	5210791	ExpressionStatement	free ( list -> list )	183:4:4191:4207	5210765	3	True				
ANR	5210792	CallExpression	free ( list -> list )		5210765	0					
ANR	5210793	Callee	free		5210765	0					
ANR	5210794	Identifier	free		5210765	0					
ANR	5210795	ArgumentList	list -> list		5210765	1					
ANR	5210796	Argument	list -> list		5210765	0					
ANR	5210797	PtrMemberAccess	list -> list		5210765	0					
ANR	5210798	Identifier	list		5210765	0					
ANR	5210799	Identifier	list		5210765	1					
ANR	5210800	ExpressionStatement	list -> list = 0	184:4:4213:4227	5210765	4	True				
ANR	5210801	AssignmentExpression	list -> list = 0		5210765	0		=			
ANR	5210802	PtrMemberAccess	list -> list		5210765	0					
ANR	5210803	Identifier	list		5210765	0					
ANR	5210804	Identifier	list		5210765	1					
ANR	5210805	PrimaryExpression	0		5210765	1					
ANR	5210806	ReturnType	void		5210765	1					
ANR	5210807	Identifier	safe_destroy_id_range_list		5210765	2					
ANR	5210808	ParameterList	safe_id_range_list * list		5210765	3					
ANR	5210809	Parameter	safe_id_range_list * list	174:32:4056:4079	5210765	0	True				
ANR	5210810	ParameterType	safe_id_range_list *		5210765	0					
ANR	5210811	Identifier	list		5210765	1					
ANR	5210812	CFGEntryNode	ENTRY		5210765		True				
ANR	5210813	CFGExitNode	EXIT		5210765		True				
ANR	5210814	Symbol	EINVAL		5210765						
ANR	5210815	Symbol	errno		5210765						
ANR	5210816	Symbol	NULL		5210765						
ANR	5210817	Symbol	list -> list		5210765						
ANR	5210818	Symbol	* list		5210765						
ANR	5210819	Symbol	list -> capacity		5210765						
ANR	5210820	Symbol	list		5210765						
ANR	5210821	Symbol	list -> count		5210765						
ANR	5210822	Function	safe_is_id_in_list	201:0:4502:4790							
ANR	5210823	FunctionDef	"safe_is_id_in_list (safe_id_range_list * list , id_t id)"		5210822	0					
ANR	5210824	CompoundStatement		202:0:4560:4790	5210822	0					
ANR	5210825	IdentifierDeclStatement	size_t i ;	203:4:4566:4574	5210822	0	True				
ANR	5210826	IdentifierDecl	i		5210822	0					
ANR	5210827	IdentifierDeclType	size_t		5210822	0					
ANR	5210828	Identifier	i		5210822	1					
ANR	5210829	IfStatement	if ( list == NULL )		5210822	1					
ANR	5210830	Condition	list == NULL	205:8:4585:4596	5210822	0	True				
ANR	5210831	EqualityExpression	list == NULL		5210822	0		==			
ANR	5210832	Identifier	list		5210822	0					
ANR	5210833	Identifier	NULL		5210822	1					
ANR	5210834	CompoundStatement		4:23:39:39	5210822	1					
ANR	5210835	ExpressionStatement	errno = EINVAL	206:1:4603:4617	5210822	0	True				
ANR	5210836	AssignmentExpression	errno = EINVAL		5210822	0		=			
ANR	5210837	Identifier	errno		5210822	0					
ANR	5210838	Identifier	EINVAL		5210822	1					
ANR	5210839	ReturnStatement	return - 1 ;	207:1:4620:4629	5210822	1	True				
ANR	5210840	UnaryOperationExpression	- 1		5210822	0					
ANR	5210841	UnaryOperator	-		5210822	0					
ANR	5210842	PrimaryExpression	1		5210822	1					
ANR	5210843	ForStatement	for ( i = 0 ; i < list -> count ; ++ i )		5210822	2					
ANR	5210844	ForInit	i = 0 ;	210:9:4647:4652	5210822	0	True				
ANR	5210845	AssignmentExpression	i = 0		5210822	0		=			
ANR	5210846	Identifier	i		5210822	0					
ANR	5210847	PrimaryExpression	0		5210822	1					
ANR	5210848	Condition	i < list -> count	210:16:4654:4668	5210822	1	True				
ANR	5210849	RelationalExpression	i < list -> count		5210822	0		<			
ANR	5210850	Identifier	i		5210822	0					
ANR	5210851	PtrMemberAccess	list -> count		5210822	1					
ANR	5210852	Identifier	list		5210822	0					
ANR	5210853	Identifier	count		5210822	1					
ANR	5210854	UnaryExpression	++ i	210:33:4671:4673	5210822	2	True				
ANR	5210855	IncDec	++		5210822	0					
ANR	5210856	Identifier	i		5210822	1					
ANR	5210857	CompoundStatement		9:39:116:116	5210822	3					
ANR	5210858	IfStatement	if ( list -> list [ i ] . min_value <= id && id <= list -> list [ i ] . max_value )		5210822	0					
ANR	5210859	Condition	list -> list [ i ] . min_value <= id && id <= list -> list [ i ] . max_value	211:5:4684:4745	5210822	0	True				
ANR	5210860	AndExpression	list -> list [ i ] . min_value <= id && id <= list -> list [ i ] . max_value		5210822	0		&&			
ANR	5210861	RelationalExpression	list -> list [ i ] . min_value <= id		5210822	0		<=			
ANR	5210862	MemberAccess	list -> list [ i ] . min_value		5210822	0					
ANR	5210863	ArrayIndexing	list -> list [ i ]		5210822	0					
ANR	5210864	PtrMemberAccess	list -> list		5210822	0					
ANR	5210865	Identifier	list		5210822	0					
ANR	5210866	Identifier	list		5210822	1					
ANR	5210867	Identifier	i		5210822	1					
ANR	5210868	Identifier	min_value		5210822	1					
ANR	5210869	Identifier	id		5210822	1					
ANR	5210870	RelationalExpression	id <= list -> list [ i ] . max_value		5210822	1		<=			
ANR	5210871	Identifier	id		5210822	0					
ANR	5210872	MemberAccess	list -> list [ i ] . max_value		5210822	1					
ANR	5210873	ArrayIndexing	list -> list [ i ]		5210822	0					
ANR	5210874	PtrMemberAccess	list -> list		5210822	0					
ANR	5210875	Identifier	list		5210822	0					
ANR	5210876	Identifier	list		5210822	1					
ANR	5210877	Identifier	i		5210822	1					
ANR	5210878	Identifier	max_value		5210822	1					
ANR	5210879	CompoundStatement		10:70:188:188	5210822	1					
ANR	5210880	ReturnStatement	return 1 ;	212:5:4756:4764	5210822	0	True				
ANR	5210881	PrimaryExpression	1		5210822	0					
ANR	5210882	ReturnStatement	return 0 ;	216:4:4780:4788	5210822	3	True				
ANR	5210883	PrimaryExpression	0		5210822	0					
ANR	5210884	ReturnType	int		5210822	1					
ANR	5210885	Identifier	safe_is_id_in_list		5210822	2					
ANR	5210886	ParameterList	"safe_id_range_list * list , id_t id"		5210822	3					
ANR	5210887	Parameter	safe_id_range_list * list	201:23:4525:4548	5210822	0	True				
ANR	5210888	ParameterType	safe_id_range_list *		5210822	0					
ANR	5210889	Identifier	list		5210822	1					
ANR	5210890	Parameter	id_t id	201:49:4551:4557	5210822	1	True				
ANR	5210891	ParameterType	id_t		5210822	0					
ANR	5210892	Identifier	id		5210822	1					
ANR	5210893	CFGEntryNode	ENTRY		5210822		True				
ANR	5210894	CFGExitNode	EXIT		5210822		True				
ANR	5210895	Symbol	errno		5210822						
ANR	5210896	Symbol	* list -> list		5210822						
ANR	5210897	Symbol	NULL		5210822						
ANR	5210898	Symbol	i		5210822						
ANR	5210899	Symbol	list -> list [ i ] . max_value		5210822						
ANR	5210900	Symbol	list		5210822						
ANR	5210901	Symbol	list -> count		5210822						
ANR	5210902	Symbol	EINVAL		5210822						
ANR	5210903	Symbol	* * list		5210822						
ANR	5210904	Symbol	* i		5210822						
ANR	5210905	Symbol	list -> list		5210822						
ANR	5210906	Symbol	* list		5210822						
ANR	5210907	Symbol	list -> list [ i ] . min_value		5210822						
ANR	5210908	Symbol	id		5210822						
ANR	5210909	Function	safe_is_id_list_empty	231:0:5026:5173							
ANR	5210910	FunctionDef	safe_is_id_list_empty (safe_id_range_list * list)		5210909	0					
ANR	5210911	CompoundStatement		231:53:5079:5173	5210909	0					
ANR	5210912	IfStatement	if ( list == NULL )		5210909	0					
ANR	5210913	Condition	list == NULL	232:8:5089:5100	5210909	0	True				
ANR	5210914	EqualityExpression	list == NULL		5210909	0		==			
ANR	5210915	Identifier	list		5210909	0					
ANR	5210916	Identifier	NULL		5210909	1					
ANR	5210917	CompoundStatement		2:23:24:24	5210909	1					
ANR	5210918	ExpressionStatement	errno = EINVAL	233:1:5107:5121	5210909	0	True				
ANR	5210919	AssignmentExpression	errno = EINVAL		5210909	0		=			
ANR	5210920	Identifier	errno		5210909	0					
ANR	5210921	Identifier	EINVAL		5210909	1					
ANR	5210922	ReturnStatement	return - 1 ;	234:1:5124:5133	5210909	1	True				
ANR	5210923	UnaryOperationExpression	- 1		5210909	0					
ANR	5210924	UnaryOperator	-		5210909	0					
ANR	5210925	PrimaryExpression	1		5210909	1					
ANR	5210926	ReturnStatement	return ( list -> count == 0 ) ;	237:4:5146:5171	5210909	1	True				
ANR	5210927	EqualityExpression	list -> count == 0		5210909	0		==			
ANR	5210928	PtrMemberAccess	list -> count		5210909	0					
ANR	5210929	Identifier	list		5210909	0					
ANR	5210930	Identifier	count		5210909	1					
ANR	5210931	PrimaryExpression	0		5210909	1					
ANR	5210932	ReturnType	int		5210909	1					
ANR	5210933	Identifier	safe_is_id_list_empty		5210909	2					
ANR	5210934	ParameterList	safe_id_range_list * list		5210909	3					
ANR	5210935	Parameter	safe_id_range_list * list	231:26:5052:5075	5210909	0	True				
ANR	5210936	ParameterType	safe_id_range_list *		5210909	0					
ANR	5210937	Identifier	list		5210909	1					
ANR	5210938	CFGEntryNode	ENTRY		5210909		True				
ANR	5210939	CFGExitNode	EXIT		5210909		True				
ANR	5210940	Symbol	EINVAL		5210909						
ANR	5210941	Symbol	errno		5210909						
ANR	5210942	Symbol	NULL		5210909						
ANR	5210943	Symbol	* list		5210909						
ANR	5210944	Symbol	list		5210909						
ANR	5210945	Symbol	list -> count		5210909						
ANR	5210946	Function	skip_whitespace_const	261:0:5636:5769							
ANR	5210947	FunctionDef	skip_whitespace_const (const char * s)		5210946	0					
ANR	5210948	CompoundStatement		262:0:5692:5769	5210946	0					
ANR	5210949	WhileStatement	while ( * s && isspace ( ( unsigned char ) * s ) )		5210946	0					
ANR	5210950	Condition	* s && isspace ( ( unsigned char ) * s )	263:11:5705:5736	5210946	0	True				
ANR	5210951	AndExpression	* s && isspace ( ( unsigned char ) * s )		5210946	0		&&			
ANR	5210952	UnaryOperationExpression	* s		5210946	0					
ANR	5210953	UnaryOperator	*		5210946	0					
ANR	5210954	Identifier	s		5210946	1					
ANR	5210955	CallExpression	isspace ( ( unsigned char ) * s )		5210946	1					
ANR	5210956	Callee	isspace		5210946	0					
ANR	5210957	Identifier	isspace		5210946	0					
ANR	5210958	ArgumentList	( unsigned char ) * s		5210946	1					
ANR	5210959	Argument	( unsigned char ) * s		5210946	0					
ANR	5210960	CastExpression	( unsigned char ) * s		5210946	0					
ANR	5210961	CastTarget	unsigned char		5210946	0					
ANR	5210962	UnaryOperationExpression	* s		5210946	1					
ANR	5210963	UnaryOperator	*		5210946	0					
ANR	5210964	Identifier	s		5210946	1					
ANR	5210965	CompoundStatement		2:46:47:47	5210946	1					
ANR	5210966	ExpressionStatement	++ s	264:1:5743:5746	5210946	0	True				
ANR	5210967	UnaryExpression	++ s		5210946	0					
ANR	5210968	IncDec	++		5210946	0					
ANR	5210969	Identifier	s		5210946	1					
ANR	5210970	ReturnStatement	return s ;	267:4:5759:5767	5210946	1	True				
ANR	5210971	Identifier	s		5210946	0					
ANR	5210972	ReturnType	static const char *		5210946	1					
ANR	5210973	Identifier	skip_whitespace_const		5210946	2					
ANR	5210974	ParameterList	const char * s		5210946	3					
ANR	5210975	Parameter	const char * s	261:41:5677:5689	5210946	0	True				
ANR	5210976	ParameterType	const char *		5210946	0					
ANR	5210977	Identifier	s		5210946	1					
ANR	5210978	CFGEntryNode	ENTRY		5210946		True				
ANR	5210979	CFGExitNode	EXIT		5210946		True				
ANR	5210980	Symbol	s		5210946						
ANR	5210981	Symbol	isspace		5210946						
ANR	5210982	Symbol	* s		5210946						
ANR	5210983	Function	name_to_error	280:0:5937:6043							
ANR	5210984	FunctionDef	name_to_error (const char * name)		5210983	0					
ANR	5210985	CompoundStatement		281:0:5981:6043	5210983	0					
ANR	5210986	ExpressionStatement	( void ) name	282:4:5987:5997	5210983	0	True				
ANR	5210987	CastExpression	( void ) name		5210983	0					
ANR	5210988	CastTarget	void		5210983	0					
ANR	5210989	Identifier	name		5210983	1					
ANR	5210990	ExpressionStatement	errno = EINVAL	283:4:6003:6017	5210983	1	True				
ANR	5210991	AssignmentExpression	errno = EINVAL		5210983	0		=			
ANR	5210992	Identifier	errno		5210983	0					
ANR	5210993	Identifier	EINVAL		5210983	1					
ANR	5210994	ReturnStatement	return safe_err_id ;	284:4:6023:6041	5210983	2	True				
ANR	5210995	Identifier	safe_err_id		5210983	0					
ANR	5210996	ReturnType	static id_t		5210983	1					
ANR	5210997	Identifier	name_to_error		5210983	2					
ANR	5210998	ParameterList	const char * name		5210983	3					
ANR	5210999	Parameter	const char * name	280:26:5963:5978	5210983	0	True				
ANR	5211000	ParameterType	const char *		5210983	0					
ANR	5211001	Identifier	name		5210983	1					
ANR	5211002	CFGEntryNode	ENTRY		5210983		True				
ANR	5211003	CFGExitNode	EXIT		5210983		True				
ANR	5211004	Symbol	EINVAL		5210983						
ANR	5211005	Symbol	errno		5210983						
ANR	5211006	Symbol	safe_err_id		5210983						
ANR	5211007	Symbol	name		5210983						
ANR	5211008	Function	name_to_uid	302:0:6573:6785							
ANR	5211009	FunctionDef	name_to_uid (const char * name)		5211008	0					
ANR	5211010	CompoundStatement		303:0:6615:6785	5211008	0					
ANR	5211011	IdentifierDeclStatement	struct passwd * pw = getpwnam ( name ) ;	304:4:6621:6655	5211008	0	True				
ANR	5211012	IdentifierDecl	* pw = getpwnam ( name )		5211008	0					
ANR	5211013	IdentifierDeclType	struct passwd *		5211008	0					
ANR	5211014	Identifier	pw		5211008	1					
ANR	5211015	AssignmentExpression	* pw = getpwnam ( name )		5211008	2		=			
ANR	5211016	Identifier	pw		5211008	0					
ANR	5211017	CallExpression	getpwnam ( name )		5211008	1					
ANR	5211018	Callee	getpwnam		5211008	0					
ANR	5211019	Identifier	getpwnam		5211008	0					
ANR	5211020	ArgumentList	name		5211008	1					
ANR	5211021	Argument	name		5211008	0					
ANR	5211022	Identifier	name		5211008	0					
ANR	5211023	ExpressionStatement	errno = 0	306:4:6662:6671	5211008	1	True				
ANR	5211024	AssignmentExpression	errno = 0		5211008	0		=			
ANR	5211025	Identifier	errno		5211008	0					
ANR	5211026	PrimaryExpression	0		5211008	1					
ANR	5211027	IfStatement	if ( ! pw )		5211008	2					
ANR	5211028	Condition	! pw	308:8:6682:6684	5211008	0	True				
ANR	5211029	UnaryOperationExpression	! pw		5211008	0					
ANR	5211030	UnaryOperator	!		5211008	0					
ANR	5211031	Identifier	pw		5211008	1					
ANR	5211032	CompoundStatement		6:14:72:72	5211008	1					
ANR	5211033	IfStatement	if ( errno == 0 )		5211008	0					
ANR	5211034	Condition	errno == 0	309:5:6695:6704	5211008	0	True				
ANR	5211035	EqualityExpression	errno == 0		5211008	0		==			
ANR	5211036	Identifier	errno		5211008	0					
ANR	5211037	PrimaryExpression	0		5211008	1					
ANR	5211038	CompoundStatement		7:18:92:92	5211008	1					
ANR	5211039	ExpressionStatement	errno = EINVAL	310:5:6715:6729	5211008	0	True				
ANR	5211040	AssignmentExpression	errno = EINVAL		5211008	0		=			
ANR	5211041	Identifier	errno		5211008	0					
ANR	5211042	Identifier	EINVAL		5211008	1					
ANR	5211043	ReturnStatement	return safe_err_id ;	312:1:6735:6753	5211008	1	True				
ANR	5211044	Identifier	safe_err_id		5211008	0					
ANR	5211045	ReturnStatement	return pw -> pw_uid ;	315:4:6766:6783	5211008	3	True				
ANR	5211046	PtrMemberAccess	pw -> pw_uid		5211008	0					
ANR	5211047	Identifier	pw		5211008	0					
ANR	5211048	Identifier	pw_uid		5211008	1					
ANR	5211049	ReturnType	static id_t		5211008	1					
ANR	5211050	Identifier	name_to_uid		5211008	2					
ANR	5211051	ParameterList	const char * name		5211008	3					
ANR	5211052	Parameter	const char * name	302:24:6597:6612	5211008	0	True				
ANR	5211053	ParameterType	const char *		5211008	0					
ANR	5211054	Identifier	name		5211008	1					
ANR	5211055	CFGEntryNode	ENTRY		5211008		True				
ANR	5211056	CFGExitNode	EXIT		5211008		True				
ANR	5211057	Symbol	EINVAL		5211008						
ANR	5211058	Symbol	errno		5211008						
ANR	5211059	Symbol	pw		5211008						
ANR	5211060	Symbol	safe_err_id		5211008						
ANR	5211061	Symbol	name		5211008						
ANR	5211062	Symbol	pw -> pw_uid		5211008						
ANR	5211063	Symbol	* pw		5211008						
ANR	5211064	Symbol	getpwnam		5211008						
ANR	5211065	Function	name_to_gid	333:0:7316:7527							
ANR	5211066	FunctionDef	name_to_gid (const char * name)		5211065	0					
ANR	5211067	CompoundStatement		334:0:7358:7527	5211065	0					
ANR	5211068	IdentifierDeclStatement	struct group * gr = getgrnam ( name ) ;	335:4:7364:7397	5211065	0	True				
ANR	5211069	IdentifierDecl	* gr = getgrnam ( name )		5211065	0					
ANR	5211070	IdentifierDeclType	struct group *		5211065	0					
ANR	5211071	Identifier	gr		5211065	1					
ANR	5211072	AssignmentExpression	* gr = getgrnam ( name )		5211065	2		=			
ANR	5211073	Identifier	gr		5211065	0					
ANR	5211074	CallExpression	getgrnam ( name )		5211065	1					
ANR	5211075	Callee	getgrnam		5211065	0					
ANR	5211076	Identifier	getgrnam		5211065	0					
ANR	5211077	ArgumentList	name		5211065	1					
ANR	5211078	Argument	name		5211065	0					
ANR	5211079	Identifier	name		5211065	0					
ANR	5211080	ExpressionStatement	errno = 0	337:4:7404:7413	5211065	1	True				
ANR	5211081	AssignmentExpression	errno = 0		5211065	0		=			
ANR	5211082	Identifier	errno		5211065	0					
ANR	5211083	PrimaryExpression	0		5211065	1					
ANR	5211084	IfStatement	if ( ! gr )		5211065	2					
ANR	5211085	Condition	! gr	339:8:7424:7426	5211065	0	True				
ANR	5211086	UnaryOperationExpression	! gr		5211065	0					
ANR	5211087	UnaryOperator	!		5211065	0					
ANR	5211088	Identifier	gr		5211065	1					
ANR	5211089	CompoundStatement		6:14:71:71	5211065	1					
ANR	5211090	IfStatement	if ( errno == 0 )		5211065	0					
ANR	5211091	Condition	errno == 0	340:5:7437:7446	5211065	0	True				
ANR	5211092	EqualityExpression	errno == 0		5211065	0		==			
ANR	5211093	Identifier	errno		5211065	0					
ANR	5211094	PrimaryExpression	0		5211065	1					
ANR	5211095	CompoundStatement		7:18:91:91	5211065	1					
ANR	5211096	ExpressionStatement	errno = EINVAL	341:5:7457:7471	5211065	0	True				
ANR	5211097	AssignmentExpression	errno = EINVAL		5211065	0		=			
ANR	5211098	Identifier	errno		5211065	0					
ANR	5211099	Identifier	EINVAL		5211065	1					
ANR	5211100	ReturnStatement	return safe_err_id ;	343:1:7477:7495	5211065	1	True				
ANR	5211101	Identifier	safe_err_id		5211065	0					
ANR	5211102	ReturnStatement	return gr -> gr_gid ;	346:4:7508:7525	5211065	3	True				
ANR	5211103	PtrMemberAccess	gr -> gr_gid		5211065	0					
ANR	5211104	Identifier	gr		5211065	0					
ANR	5211105	Identifier	gr_gid		5211065	1					
ANR	5211106	ReturnType	static id_t		5211065	1					
ANR	5211107	Identifier	name_to_gid		5211065	2					
ANR	5211108	ParameterList	const char * name		5211065	3					
ANR	5211109	Parameter	const char * name	333:24:7340:7355	5211065	0	True				
ANR	5211110	ParameterType	const char *		5211065	0					
ANR	5211111	Identifier	name		5211065	1					
ANR	5211112	CFGEntryNode	ENTRY		5211065		True				
ANR	5211113	CFGExitNode	EXIT		5211065		True				
ANR	5211114	Symbol	EINVAL		5211065						
ANR	5211115	Symbol	errno		5211065						
ANR	5211116	Symbol	* gr		5211065						
ANR	5211117	Symbol	gr -> gr_gid		5211065						
ANR	5211118	Symbol	safe_err_id		5211065						
ANR	5211119	Symbol	name		5211065						
ANR	5211120	Symbol	getgrnam		5211065						
ANR	5211121	Symbol	gr		5211065						
ANR	5211122	DeclStmt									
ANR	5211123	Decl							id_t ( * ) ( const char * )	id_t ( * ) ( const char * )	lookup_func
ANR	5211124	Function	strto_id	386:0:8895:10649							
ANR	5211125	FunctionDef	"strto_id (id_t * id , const char * value , const char * * endptr , lookup_func lookup)"		5211124	0					
ANR	5211126	CompoundStatement		387:0:8985:10649	5211124	0					
ANR	5211127	IdentifierDeclStatement	const char * endp ;	388:4:8991:9007	5211124	0	True				
ANR	5211128	IdentifierDecl	* endp		5211124	0					
ANR	5211129	IdentifierDeclType	const char *		5211124	0					
ANR	5211130	Identifier	endp		5211124	1					
ANR	5211131	IdentifierDeclStatement	const char * id_begin ;	389:4:9013:9033	5211124	1	True				
ANR	5211132	IdentifierDecl	* id_begin		5211124	0					
ANR	5211133	IdentifierDeclType	const char *		5211124	0					
ANR	5211134	Identifier	id_begin		5211124	1					
ANR	5211135	IfStatement	if ( id == NULL || value == NULL || lookup == NULL )		5211124	2					
ANR	5211136	Condition	id == NULL || value == NULL || lookup == NULL	391:8:9044:9088	5211124	0	True				
ANR	5211137	OrExpression	id == NULL || value == NULL || lookup == NULL		5211124	0		||			
ANR	5211138	EqualityExpression	id == NULL		5211124	0		==			
ANR	5211139	Identifier	id		5211124	0					
ANR	5211140	Identifier	NULL		5211124	1					
ANR	5211141	OrExpression	value == NULL || lookup == NULL		5211124	1		||			
ANR	5211142	EqualityExpression	value == NULL		5211124	0		==			
ANR	5211143	Identifier	value		5211124	0					
ANR	5211144	Identifier	NULL		5211124	1					
ANR	5211145	EqualityExpression	lookup == NULL		5211124	1		==			
ANR	5211146	Identifier	lookup		5211124	0					
ANR	5211147	Identifier	NULL		5211124	1					
ANR	5211148	CompoundStatement		5:56:106:106	5211124	1					
ANR	5211149	ExpressionStatement	errno = EINVAL	392:1:9095:9109	5211124	0	True				
ANR	5211150	AssignmentExpression	errno = EINVAL		5211124	0		=			
ANR	5211151	Identifier	errno		5211124	0					
ANR	5211152	Identifier	EINVAL		5211124	1					
ANR	5211153	IfStatement	if ( id )		5211124	1					
ANR	5211154	Condition	id	393:5:9116:9117	5211124	0	True				
ANR	5211155	Identifier	id		5211124	0					
ANR	5211156	CompoundStatement		7:10:135:135	5211124	1					
ANR	5211157	ExpressionStatement	* id = safe_err_id	394:5:9128:9145	5211124	0	True				
ANR	5211158	AssignmentExpression	* id = safe_err_id		5211124	0		=			
ANR	5211159	UnaryOperationExpression	* id		5211124	0					
ANR	5211160	UnaryOperator	*		5211124	0					
ANR	5211161	Identifier	id		5211124	1					
ANR	5211162	Identifier	safe_err_id		5211124	1					
ANR	5211163	ReturnStatement	return - 1 ;	396:1:9151:9160	5211124	2	True				
ANR	5211164	UnaryOperationExpression	- 1		5211124	0					
ANR	5211165	UnaryOperator	-		5211124	0					
ANR	5211166	PrimaryExpression	1		5211124	1					
ANR	5211167	ExpressionStatement	endp = value	399:4:9173:9185	5211124	3	True				
ANR	5211168	AssignmentExpression	endp = value		5211124	0		=			
ANR	5211169	Identifier	endp		5211124	0					
ANR	5211170	Identifier	value		5211124	1					
ANR	5211171	ExpressionStatement	id_begin = skip_whitespace_const ( value )	401:4:9192:9231	5211124	4	True				
ANR	5211172	AssignmentExpression	id_begin = skip_whitespace_const ( value )		5211124	0		=			
ANR	5211173	Identifier	id_begin		5211124	0					
ANR	5211174	CallExpression	skip_whitespace_const ( value )		5211124	1					
ANR	5211175	Callee	skip_whitespace_const		5211124	0					
ANR	5211176	Identifier	skip_whitespace_const		5211124	0					
ANR	5211177	ArgumentList	value		5211124	1					
ANR	5211178	Argument	value		5211124	0					
ANR	5211179	Identifier	value		5211124	0					
ANR	5211180	ExpressionStatement	errno = 0	403:4:9238:9247	5211124	5	True				
ANR	5211181	AssignmentExpression	errno = 0		5211124	0		=			
ANR	5211182	Identifier	errno		5211124	0					
ANR	5211183	PrimaryExpression	0		5211124	1					
ANR	5211184	IfStatement	if ( isdigit ( ( unsigned char ) * id_begin ) )		5211124	6					
ANR	5211185	Condition	isdigit ( ( unsigned char ) * id_begin )	405:8:9258:9290	5211124	0	True				
ANR	5211186	CallExpression	isdigit ( ( unsigned char ) * id_begin )		5211124	0					
ANR	5211187	Callee	isdigit		5211124	0					
ANR	5211188	Identifier	isdigit		5211124	0					
ANR	5211189	ArgumentList	( unsigned char ) * id_begin		5211124	1					
ANR	5211190	Argument	( unsigned char ) * id_begin		5211124	0					
ANR	5211191	CastExpression	( unsigned char ) * id_begin		5211124	0					
ANR	5211192	CastTarget	unsigned char		5211124	0					
ANR	5211193	UnaryOperationExpression	* id_begin		5211124	1					
ANR	5211194	UnaryOperator	*		5211124	0					
ANR	5211195	Identifier	id_begin		5211124	1					
ANR	5211196	CompoundStatement		21:1:353:360	5211124	1					
ANR	5211197	IdentifierDeclStatement	char * e ;	407:1:9339:9346	5211124	0	True				
ANR	5211198	IdentifierDecl	* e		5211124	0					
ANR	5211199	IdentifierDeclType	char *		5211124	0					
ANR	5211200	Identifier	e		5211124	1					
ANR	5211201	ExpressionStatement	"* id = ( id_t ) strtoul ( id_begin , & e , 10 )"	408:1:9349:9386	5211124	1	True				
ANR	5211202	AssignmentExpression	"* id = ( id_t ) strtoul ( id_begin , & e , 10 )"		5211124	0		=			
ANR	5211203	UnaryOperationExpression	* id		5211124	0					
ANR	5211204	UnaryOperator	*		5211124	0					
ANR	5211205	Identifier	id		5211124	1					
ANR	5211206	CastExpression	"( id_t ) strtoul ( id_begin , & e , 10 )"		5211124	1					
ANR	5211207	CastTarget	id_t		5211124	0					
ANR	5211208	CallExpression	"strtoul ( id_begin , & e , 10 )"		5211124	1					
ANR	5211209	Callee	strtoul		5211124	0					
ANR	5211210	Identifier	strtoul		5211124	0					
ANR	5211211	ArgumentList	id_begin		5211124	1					
ANR	5211212	Argument	id_begin		5211124	0					
ANR	5211213	Identifier	id_begin		5211124	0					
ANR	5211214	Argument	& e		5211124	1					
ANR	5211215	UnaryOperationExpression	& e		5211124	0					
ANR	5211216	UnaryOperator	&		5211124	0					
ANR	5211217	Identifier	e		5211124	1					
ANR	5211218	Argument	10		5211124	2					
ANR	5211219	PrimaryExpression	10		5211124	0					
ANR	5211220	ExpressionStatement	endp = e	409:1:9389:9397	5211124	2	True				
ANR	5211221	AssignmentExpression	endp = e		5211124	0		=			
ANR	5211222	Identifier	endp		5211124	0					
ANR	5211223	Identifier	e		5211124	1					
ANR	5211224	ElseStatement	else		5211124	0					
ANR	5211225	IfStatement	if ( * id_begin )		5211124	0					
ANR	5211226	Condition	* id_begin	410:16:9415:9423	5211124	0	True				
ANR	5211227	UnaryOperationExpression	* id_begin		5211124	0					
ANR	5211228	UnaryOperator	*		5211124	0					
ANR	5211229	Identifier	id_begin		5211124	1					
ANR	5211230	CompoundStatement		28:1:537:555	5211124	1					
ANR	5211231	IdentifierDeclStatement	char * id_name ;	412:1:9491:9504	5211124	0	True				
ANR	5211232	IdentifierDecl	* id_name		5211124	0					
ANR	5211233	IdentifierDeclType	char *		5211124	0					
ANR	5211234	Identifier	id_name		5211124	1					
ANR	5211235	IdentifierDeclStatement	size_t id_len ;	413:1:9507:9520	5211124	1	True				
ANR	5211236	IdentifierDecl	id_len		5211124	0					
ANR	5211237	IdentifierDeclType	size_t		5211124	0					
ANR	5211238	Identifier	id_len		5211124	1					
ANR	5211239	IdentifierDeclStatement	char small_buf [ 16 ] ;	414:1:9523:9541	5211124	2	True				
ANR	5211240	IdentifierDecl	small_buf [ 16 ]		5211124	0					
ANR	5211241	IdentifierDeclType	char [ 16 ]		5211124	0					
ANR	5211242	Identifier	small_buf		5211124	1					
ANR	5211243	PrimaryExpression	16		5211124	2					
ANR	5211244	ExpressionStatement	endp = id_begin	417:1:9664:9679	5211124	3	True				
ANR	5211245	AssignmentExpression	endp = id_begin		5211124	0		=			
ANR	5211246	Identifier	endp		5211124	0					
ANR	5211247	Identifier	id_begin		5211124	1					
ANR	5211248	WhileStatement	while ( * endp && ! isspace ( ( unsigned char ) * endp ) && * endp != ':' )		5211124	4					
ANR	5211249	Condition	* endp && ! isspace ( ( unsigned char ) * endp ) && * endp != ':'	418:8:9689:9743	5211124	0	True				
ANR	5211250	AndExpression	* endp && ! isspace ( ( unsigned char ) * endp ) && * endp != ':'		5211124	0		&&			
ANR	5211251	UnaryOperationExpression	* endp		5211124	0					
ANR	5211252	UnaryOperator	*		5211124	0					
ANR	5211253	Identifier	endp		5211124	1					
ANR	5211254	AndExpression	! isspace ( ( unsigned char ) * endp ) && * endp != ':'		5211124	1		&&			
ANR	5211255	UnaryOperationExpression	! isspace ( ( unsigned char ) * endp )		5211124	0					
ANR	5211256	UnaryOperator	!		5211124	0					
ANR	5211257	CallExpression	isspace ( ( unsigned char ) * endp )		5211124	1					
ANR	5211258	Callee	isspace		5211124	0					
ANR	5211259	Identifier	isspace		5211124	0					
ANR	5211260	ArgumentList	( unsigned char ) * endp		5211124	1					
ANR	5211261	Argument	( unsigned char ) * endp		5211124	0					
ANR	5211262	CastExpression	( unsigned char ) * endp		5211124	0					
ANR	5211263	CastTarget	unsigned char		5211124	0					
ANR	5211264	UnaryOperationExpression	* endp		5211124	1					
ANR	5211265	UnaryOperator	*		5211124	0					
ANR	5211266	Identifier	endp		5211124	1					
ANR	5211267	EqualityExpression	* endp != ':'		5211124	1		!=			
ANR	5211268	UnaryOperationExpression	* endp		5211124	0					
ANR	5211269	UnaryOperator	*		5211124	0					
ANR	5211270	Identifier	endp		5211124	1					
ANR	5211271	PrimaryExpression	':'		5211124	1					
ANR	5211272	CompoundStatement		32:66:761:761	5211124	1					
ANR	5211273	ExpressionStatement	++ endp	419:5:9754:9760	5211124	0	True				
ANR	5211274	UnaryExpression	++ endp		5211124	0					
ANR	5211275	IncDec	++		5211124	0					
ANR	5211276	Identifier	endp		5211124	1					
ANR	5211277	ExpressionStatement	id_len = ( size_t ) ( endp - id_begin )	422:1:9767:9801	5211124	5	True				
ANR	5211278	AssignmentExpression	id_len = ( size_t ) ( endp - id_begin )		5211124	0		=			
ANR	5211279	Identifier	id_len		5211124	0					
ANR	5211280	CastExpression	( size_t ) ( endp - id_begin )		5211124	1					
ANR	5211281	CastTarget	size_t		5211124	0					
ANR	5211282	AdditiveExpression	endp - id_begin		5211124	1		-			
ANR	5211283	Identifier	endp		5211124	0					
ANR	5211284	Identifier	id_begin		5211124	1					
ANR	5211285	IfStatement	if ( id_len == 0 )		5211124	6					
ANR	5211286	Condition	id_len == 0	424:5:9809:9819	5211124	0	True				
ANR	5211287	EqualityExpression	id_len == 0		5211124	0		==			
ANR	5211288	Identifier	id_len		5211124	0					
ANR	5211289	PrimaryExpression	0		5211124	1					
ANR	5211290	CompoundStatement		38:19:837:837	5211124	1					
ANR	5211291	ExpressionStatement	errno = EINVAL	425:5:9830:9844	5211124	0	True				
ANR	5211292	AssignmentExpression	errno = EINVAL		5211124	0		=			
ANR	5211293	Identifier	errno		5211124	0					
ANR	5211294	Identifier	EINVAL		5211124	1					
ANR	5211295	ExpressionStatement	* id = safe_err_id	426:5:9851:9868	5211124	1	True				
ANR	5211296	AssignmentExpression	* id = safe_err_id		5211124	0		=			
ANR	5211297	UnaryOperationExpression	* id		5211124	0					
ANR	5211298	UnaryOperator	*		5211124	0					
ANR	5211299	Identifier	id		5211124	1					
ANR	5211300	Identifier	safe_err_id		5211124	1					
ANR	5211301	IfStatement	if ( endptr )		5211124	2					
ANR	5211302	Condition	endptr	427:9:9879:9884	5211124	0	True				
ANR	5211303	Identifier	endptr		5211124	0					
ANR	5211304	CompoundStatement		41:18:902:902	5211124	1					
ANR	5211305	ExpressionStatement	* endptr = endp	428:2:9892:9906	5211124	0	True				
ANR	5211306	AssignmentExpression	* endptr = endp		5211124	0		=			
ANR	5211307	UnaryOperationExpression	* endptr		5211124	0					
ANR	5211308	UnaryOperator	*		5211124	0					
ANR	5211309	Identifier	endptr		5211124	1					
ANR	5211310	Identifier	endp		5211124	1					
ANR	5211311	ReturnStatement	return - 1 ;	430:5:9920:9929	5211124	3	True				
ANR	5211312	UnaryOperationExpression	- 1		5211124	0					
ANR	5211313	UnaryOperator	-		5211124	0					
ANR	5211314	PrimaryExpression	1		5211124	1					
ANR	5211315	ElseStatement	else		5211124	0					
ANR	5211316	IfStatement	if ( id_len < sizeof ( small_buf ) )		5211124	0					
ANR	5211317	Condition	id_len < sizeof ( small_buf )	431:13:9944:9969	5211124	0	True				
ANR	5211318	RelationalExpression	id_len < sizeof ( small_buf )		5211124	0		<			
ANR	5211319	Identifier	id_len		5211124	0					
ANR	5211320	SizeofExpression	sizeof ( small_buf )		5211124	1					
ANR	5211321	Sizeof	sizeof		5211124	0					
ANR	5211322	SizeofOperand	small_buf		5211124	1					
ANR	5211323	CompoundStatement		45:42:987:987	5211124	1					
ANR	5211324	ExpressionStatement	id_name = small_buf	433:5:10020:10039	5211124	0	True				
ANR	5211325	AssignmentExpression	id_name = small_buf		5211124	0		=			
ANR	5211326	Identifier	id_name		5211124	0					
ANR	5211327	Identifier	small_buf		5211124	1					
ANR	5211328	ElseStatement	else		5211124	0					
ANR	5211329	CompoundStatement		48:10:1065:1065	5211124	0					
ANR	5211330	ExpressionStatement	id_name = ( char * ) malloc ( id_len + 1 )	436:5:10118:10153	5211124	0	True				
ANR	5211331	AssignmentExpression	id_name = ( char * ) malloc ( id_len + 1 )		5211124	0		=			
ANR	5211332	Identifier	id_name		5211124	0					
ANR	5211333	CastExpression	( char * ) malloc ( id_len + 1 )		5211124	1					
ANR	5211334	CastTarget	char *		5211124	0					
ANR	5211335	CallExpression	malloc ( id_len + 1 )		5211124	1					
ANR	5211336	Callee	malloc		5211124	0					
ANR	5211337	Identifier	malloc		5211124	0					
ANR	5211338	ArgumentList	id_len + 1		5211124	1					
ANR	5211339	Argument	id_len + 1		5211124	0					
ANR	5211340	AdditiveExpression	id_len + 1		5211124	0		+			
ANR	5211341	Identifier	id_len		5211124	0					
ANR	5211342	PrimaryExpression	1		5211124	1					
ANR	5211343	IfStatement	if ( id_name == NULL )		5211124	1					
ANR	5211344	Condition	id_name == NULL	437:9:10164:10178	5211124	0	True				
ANR	5211345	EqualityExpression	id_name == NULL		5211124	0		==			
ANR	5211346	Identifier	id_name		5211124	0					
ANR	5211347	Identifier	NULL		5211124	1					
ANR	5211348	CompoundStatement		51:27:1196:1196	5211124	1					
ANR	5211349	ExpressionStatement	errno = ENOMEM	438:2:10186:10200	5211124	0	True				
ANR	5211350	AssignmentExpression	errno = ENOMEM		5211124	0		=			
ANR	5211351	Identifier	errno		5211124	0					
ANR	5211352	Identifier	ENOMEM		5211124	1					
ANR	5211353	ExpressionStatement	* id = safe_err_id	439:2:10204:10221	5211124	1	True				
ANR	5211354	AssignmentExpression	* id = safe_err_id		5211124	0		=			
ANR	5211355	UnaryOperationExpression	* id		5211124	0					
ANR	5211356	UnaryOperator	*		5211124	0					
ANR	5211357	Identifier	id		5211124	1					
ANR	5211358	Identifier	safe_err_id		5211124	1					
ANR	5211359	IfStatement	if ( endptr )		5211124	2					
ANR	5211360	Condition	endptr	440:6:10229:10234	5211124	0	True				
ANR	5211361	Identifier	endptr		5211124	0					
ANR	5211362	CompoundStatement		54:15:1252:1252	5211124	1					
ANR	5211363	ExpressionStatement	* endptr = endp	441:6:10246:10260	5211124	0	True				
ANR	5211364	AssignmentExpression	* endptr = endp		5211124	0		=			
ANR	5211365	UnaryOperationExpression	* endptr		5211124	0					
ANR	5211366	UnaryOperator	*		5211124	0					
ANR	5211367	Identifier	endptr		5211124	1					
ANR	5211368	Identifier	endp		5211124	1					
ANR	5211369	ReturnStatement	return - 1 ;	443:2:10268:10277	5211124	3	True				
ANR	5211370	UnaryOperationExpression	- 1		5211124	0					
ANR	5211371	UnaryOperator	-		5211124	0					
ANR	5211372	PrimaryExpression	1		5211124	1					
ANR	5211373	ExpressionStatement	"memcpy ( id_name , id_begin , id_len )"	448:1:10324:10357	5211124	7	True				
ANR	5211374	CallExpression	"memcpy ( id_name , id_begin , id_len )"		5211124	0					
ANR	5211375	Callee	memcpy		5211124	0					
ANR	5211376	Identifier	memcpy		5211124	0					
ANR	5211377	ArgumentList	id_name		5211124	1					
ANR	5211378	Argument	id_name		5211124	0					
ANR	5211379	Identifier	id_name		5211124	0					
ANR	5211380	Argument	id_begin		5211124	1					
ANR	5211381	Identifier	id_begin		5211124	0					
ANR	5211382	Argument	id_len		5211124	2					
ANR	5211383	Identifier	id_len		5211124	0					
ANR	5211384	ExpressionStatement	id_name [ id_len ] = '\\0'	449:1:10360:10382	5211124	8	True				
ANR	5211385	AssignmentExpression	id_name [ id_len ] = '\\0'		5211124	0		=			
ANR	5211386	ArrayIndexing	id_name [ id_len ]		5211124	0					
ANR	5211387	Identifier	id_name		5211124	0					
ANR	5211388	Identifier	id_len		5211124	1					
ANR	5211389	PrimaryExpression	'\\0'		5211124	1					
ANR	5211390	ExpressionStatement	* id = lookup ( id_name )	451:1:10386:10407	5211124	9	True				
ANR	5211391	AssignmentExpression	* id = lookup ( id_name )		5211124	0		=			
ANR	5211392	UnaryOperationExpression	* id		5211124	0					
ANR	5211393	UnaryOperator	*		5211124	0					
ANR	5211394	Identifier	id		5211124	1					
ANR	5211395	CallExpression	lookup ( id_name )		5211124	1					
ANR	5211396	Callee	lookup		5211124	0					
ANR	5211397	Identifier	lookup		5211124	0					
ANR	5211398	ArgumentList	id_name		5211124	1					
ANR	5211399	Argument	id_name		5211124	0					
ANR	5211400	Identifier	id_name		5211124	0					
ANR	5211401	IfStatement	if ( id_name != small_buf )		5211124	10					
ANR	5211402	Condition	id_name != small_buf	454:5:10446:10465	5211124	0	True				
ANR	5211403	EqualityExpression	id_name != small_buf		5211124	0		!=			
ANR	5211404	Identifier	id_name		5211124	0					
ANR	5211405	Identifier	small_buf		5211124	1					
ANR	5211406	CompoundStatement		68:28:1483:1483	5211124	1					
ANR	5211407	ExpressionStatement	free ( id_name )	455:5:10476:10489	5211124	0	True				
ANR	5211408	CallExpression	free ( id_name )		5211124	0					
ANR	5211409	Callee	free		5211124	0					
ANR	5211410	Identifier	free		5211124	0					
ANR	5211411	ArgumentList	id_name		5211124	1					
ANR	5211412	Argument	id_name		5211124	0					
ANR	5211413	Identifier	id_name		5211124	0					
ANR	5211414	ElseStatement	else		5211124	0					
ANR	5211415	CompoundStatement		71:13:1521:1521	5211124	0					
ANR	5211416	ExpressionStatement	* id = safe_err_id	459:1:10549:10566	5211124	0	True				
ANR	5211417	AssignmentExpression	* id = safe_err_id		5211124	0		=			
ANR	5211418	UnaryOperationExpression	* id		5211124	0					
ANR	5211419	UnaryOperator	*		5211124	0					
ANR	5211420	Identifier	id		5211124	1					
ANR	5211421	Identifier	safe_err_id		5211124	1					
ANR	5211422	ExpressionStatement	errno = EINVAL	460:1:10569:10583	5211124	1	True				
ANR	5211423	AssignmentExpression	errno = EINVAL		5211124	0		=			
ANR	5211424	Identifier	errno		5211124	0					
ANR	5211425	Identifier	EINVAL		5211124	1					
ANR	5211426	IfStatement	if ( endptr )		5211124	7					
ANR	5211427	Condition	endptr	463:8:10600:10605	5211124	0	True				
ANR	5211428	Identifier	endptr		5211124	0					
ANR	5211429	CompoundStatement		77:17:1623:1623	5211124	1					
ANR	5211430	ExpressionStatement	* endptr = endp	464:1:10612:10626	5211124	0	True				
ANR	5211431	AssignmentExpression	* endptr = endp		5211124	0		=			
ANR	5211432	UnaryOperationExpression	* endptr		5211124	0					
ANR	5211433	UnaryOperator	*		5211124	0					
ANR	5211434	Identifier	endptr		5211124	1					
ANR	5211435	Identifier	endp		5211124	1					
ANR	5211436	ReturnStatement	return 0 ;	467:4:10639:10647	5211124	8	True				
ANR	5211437	PrimaryExpression	0		5211124	0					
ANR	5211438	ReturnType	static int		5211124	1					
ANR	5211439	Identifier	strto_id		5211124	2					
ANR	5211440	ParameterList	"id_t * id , const char * value , const char * * endptr , lookup_func lookup"		5211124	3					
ANR	5211441	Parameter	id_t * id	386:20:8915:8922	5211124	0	True				
ANR	5211442	ParameterType	id_t *		5211124	0					
ANR	5211443	Identifier	id		5211124	1					
ANR	5211444	Parameter	const char * value	386:30:8925:8941	5211124	1	True				
ANR	5211445	ParameterType	const char *		5211124	0					
ANR	5211446	Identifier	value		5211124	1					
ANR	5211447	Parameter	const char * * endptr	386:49:8944:8962	5211124	2	True				
ANR	5211448	ParameterType	const char * *		5211124	0					
ANR	5211449	Identifier	endptr		5211124	1					
ANR	5211450	Parameter	lookup_func lookup	386:70:8965:8982	5211124	3	True				
ANR	5211451	ParameterType	lookup_func		5211124	0					
ANR	5211452	Identifier	lookup		5211124	1					
ANR	5211453	CFGEntryNode	ENTRY		5211124		True				
ANR	5211454	CFGExitNode	EXIT		5211124		True				
ANR	5211455	Symbol	ENOMEM		5211124						
ANR	5211456	Symbol	* id		5211124						
ANR	5211457	Symbol	skip_whitespace_const		5211124						
ANR	5211458	Symbol	safe_err_id		5211124						
ANR	5211459	Symbol	strtoul		5211124						
ANR	5211460	Symbol	* id_name		5211124						
ANR	5211461	Symbol	endp		5211124						
ANR	5211462	Symbol	id		5211124						
ANR	5211463	Symbol	value		5211124						
ANR	5211464	Symbol	isdigit		5211124						
ANR	5211465	Symbol	lookup		5211124						
ANR	5211466	Symbol	malloc		5211124						
ANR	5211467	Symbol	errno		5211124						
ANR	5211468	Symbol	NULL		5211124						
ANR	5211469	Symbol	endptr		5211124						
ANR	5211470	Symbol	e		5211124						
ANR	5211471	Symbol	* endptr		5211124						
ANR	5211472	Symbol	isspace		5211124						
ANR	5211473	Symbol	& e		5211124						
ANR	5211474	Symbol	id_len		5211124						
ANR	5211475	Symbol	* id_begin		5211124						
ANR	5211476	Symbol	id_name		5211124						
ANR	5211477	Symbol	EINVAL		5211124						
ANR	5211478	Symbol	* id_len		5211124						
ANR	5211479	Symbol	* endp		5211124						
ANR	5211480	Symbol	id_begin		5211124						
ANR	5211481	Symbol	small_buf		5211124						
ANR	5211482	Function	safe_strto_uid	489:0:11264:11411							
ANR	5211483	FunctionDef	"safe_strto_uid (const char * value , const char * * endptr)"		5211482	0					
ANR	5211484	CompoundStatement		490:0:11325:11411	5211482	0					
ANR	5211485	IdentifierDeclStatement	id_t id ;	491:4:11331:11338	5211482	0	True				
ANR	5211486	IdentifierDecl	id		5211482	0					
ANR	5211487	IdentifierDeclType	id_t		5211482	0					
ANR	5211488	Identifier	id		5211482	1					
ANR	5211489	ExpressionStatement	"strto_id ( & id , value , endptr , name_to_uid )"	493:4:11345:11386	5211482	1	True				
ANR	5211490	CallExpression	"strto_id ( & id , value , endptr , name_to_uid )"		5211482	0					
ANR	5211491	Callee	strto_id		5211482	0					
ANR	5211492	Identifier	strto_id		5211482	0					
ANR	5211493	ArgumentList	& id		5211482	1					
ANR	5211494	Argument	& id		5211482	0					
ANR	5211495	UnaryOperationExpression	& id		5211482	0					
ANR	5211496	UnaryOperator	&		5211482	0					
ANR	5211497	Identifier	id		5211482	1					
ANR	5211498	Argument	value		5211482	1					
ANR	5211499	Identifier	value		5211482	0					
ANR	5211500	Argument	endptr		5211482	2					
ANR	5211501	Identifier	endptr		5211482	0					
ANR	5211502	Argument	name_to_uid		5211482	3					
ANR	5211503	Identifier	name_to_uid		5211482	0					
ANR	5211504	ReturnStatement	return ( uid_t ) id ;	495:4:11393:11409	5211482	2	True				
ANR	5211505	CastExpression	( uid_t ) id		5211482	0					
ANR	5211506	CastTarget	uid_t		5211482	0					
ANR	5211507	Identifier	id		5211482	1					
ANR	5211508	ReturnType	uid_t		5211482	1					
ANR	5211509	Identifier	safe_strto_uid		5211482	2					
ANR	5211510	ParameterList	"const char * value , const char * * endptr"		5211482	3					
ANR	5211511	Parameter	const char * value	489:21:11285:11301	5211482	0	True				
ANR	5211512	ParameterType	const char *		5211482	0					
ANR	5211513	Identifier	value		5211482	1					
ANR	5211514	Parameter	const char * * endptr	489:40:11304:11322	5211482	1	True				
ANR	5211515	ParameterType	const char * *		5211482	0					
ANR	5211516	Identifier	endptr		5211482	1					
ANR	5211517	CFGEntryNode	ENTRY		5211482		True				
ANR	5211518	CFGExitNode	EXIT		5211482		True				
ANR	5211519	Symbol	& id		5211482						
ANR	5211520	Symbol	endptr		5211482						
ANR	5211521	Symbol	id		5211482						
ANR	5211522	Symbol	value		5211482						
ANR	5211523	Symbol	name_to_uid		5211482						
ANR	5211524	Function	safe_strto_gid	517:0:12027:12174							
ANR	5211525	FunctionDef	"safe_strto_gid (const char * value , const char * * endptr)"		5211524	0					
ANR	5211526	CompoundStatement		518:0:12088:12174	5211524	0					
ANR	5211527	IdentifierDeclStatement	id_t id ;	519:4:12094:12101	5211524	0	True				
ANR	5211528	IdentifierDecl	id		5211524	0					
ANR	5211529	IdentifierDeclType	id_t		5211524	0					
ANR	5211530	Identifier	id		5211524	1					
ANR	5211531	ExpressionStatement	"strto_id ( & id , value , endptr , name_to_gid )"	521:4:12108:12149	5211524	1	True				
ANR	5211532	CallExpression	"strto_id ( & id , value , endptr , name_to_gid )"		5211524	0					
ANR	5211533	Callee	strto_id		5211524	0					
ANR	5211534	Identifier	strto_id		5211524	0					
ANR	5211535	ArgumentList	& id		5211524	1					
ANR	5211536	Argument	& id		5211524	0					
ANR	5211537	UnaryOperationExpression	& id		5211524	0					
ANR	5211538	UnaryOperator	&		5211524	0					
ANR	5211539	Identifier	id		5211524	1					
ANR	5211540	Argument	value		5211524	1					
ANR	5211541	Identifier	value		5211524	0					
ANR	5211542	Argument	endptr		5211524	2					
ANR	5211543	Identifier	endptr		5211524	0					
ANR	5211544	Argument	name_to_gid		5211524	3					
ANR	5211545	Identifier	name_to_gid		5211524	0					
ANR	5211546	ReturnStatement	return ( gid_t ) id ;	523:4:12156:12172	5211524	2	True				
ANR	5211547	CastExpression	( gid_t ) id		5211524	0					
ANR	5211548	CastTarget	gid_t		5211524	0					
ANR	5211549	Identifier	id		5211524	1					
ANR	5211550	ReturnType	gid_t		5211524	1					
ANR	5211551	Identifier	safe_strto_gid		5211524	2					
ANR	5211552	ParameterList	"const char * value , const char * * endptr"		5211524	3					
ANR	5211553	Parameter	const char * value	517:21:12048:12064	5211524	0	True				
ANR	5211554	ParameterType	const char *		5211524	0					
ANR	5211555	Identifier	value		5211524	1					
ANR	5211556	Parameter	const char * * endptr	517:40:12067:12085	5211524	1	True				
ANR	5211557	ParameterType	const char * *		5211524	0					
ANR	5211558	Identifier	endptr		5211524	1					
ANR	5211559	CFGEntryNode	ENTRY		5211524		True				
ANR	5211560	CFGExitNode	EXIT		5211524		True				
ANR	5211561	Symbol	& id		5211524						
ANR	5211562	Symbol	endptr		5211524						
ANR	5211563	Symbol	id		5211524						
ANR	5211564	Symbol	value		5211524						
ANR	5211565	Symbol	name_to_gid		5211524						
ANR	5211566	Function	safe_strto_id	545:0:12767:12907							
ANR	5211567	FunctionDef	"safe_strto_id (const char * value , const char * * endptr)"		5211566	0					
ANR	5211568	CompoundStatement		546:0:12826:12907	5211566	0					
ANR	5211569	IdentifierDeclStatement	id_t id ;	547:4:12832:12839	5211566	0	True				
ANR	5211570	IdentifierDecl	id		5211566	0					
ANR	5211571	IdentifierDeclType	id_t		5211566	0					
ANR	5211572	Identifier	id		5211566	1					
ANR	5211573	ExpressionStatement	"strto_id ( & id , value , endptr , name_to_error )"	549:4:12846:12889	5211566	1	True				
ANR	5211574	CallExpression	"strto_id ( & id , value , endptr , name_to_error )"		5211566	0					
ANR	5211575	Callee	strto_id		5211566	0					
ANR	5211576	Identifier	strto_id		5211566	0					
ANR	5211577	ArgumentList	& id		5211566	1					
ANR	5211578	Argument	& id		5211566	0					
ANR	5211579	UnaryOperationExpression	& id		5211566	0					
ANR	5211580	UnaryOperator	&		5211566	0					
ANR	5211581	Identifier	id		5211566	1					
ANR	5211582	Argument	value		5211566	1					
ANR	5211583	Identifier	value		5211566	0					
ANR	5211584	Argument	endptr		5211566	2					
ANR	5211585	Identifier	endptr		5211566	0					
ANR	5211586	Argument	name_to_error		5211566	3					
ANR	5211587	Identifier	name_to_error		5211566	0					
ANR	5211588	ReturnStatement	return id ;	551:4:12896:12905	5211566	2	True				
ANR	5211589	Identifier	id		5211566	0					
ANR	5211590	ReturnType	id_t		5211566	1					
ANR	5211591	Identifier	safe_strto_id		5211566	2					
ANR	5211592	ParameterList	"const char * value , const char * * endptr"		5211566	3					
ANR	5211593	Parameter	const char * value	545:19:12786:12802	5211566	0	True				
ANR	5211594	ParameterType	const char *		5211566	0					
ANR	5211595	Identifier	value		5211566	1					
ANR	5211596	Parameter	const char * * endptr	545:38:12805:12823	5211566	1	True				
ANR	5211597	ParameterType	const char * *		5211566	0					
ANR	5211598	Identifier	endptr		5211566	1					
ANR	5211599	CFGEntryNode	ENTRY		5211566		True				
ANR	5211600	CFGExitNode	EXIT		5211566		True				
ANR	5211601	Symbol	name_to_error		5211566						
ANR	5211602	Symbol	& id		5211566						
ANR	5211603	Symbol	endptr		5211566						
ANR	5211604	Symbol	id		5211566						
ANR	5211605	Symbol	value		5211566						
ANR	5211606	Function	strto_id_range	591:0:14359:15070							
ANR	5211607	FunctionDef	"strto_id_range (id_t * min_id , id_t * max_id , const char * value , const char * * endptr , lookup_func lookup)"		5211606	0					
ANR	5211608	CompoundStatement		592:0:14474:15070	5211606	0					
ANR	5211609	IdentifierDeclStatement	const char * endp ;	593:4:14480:14496	5211606	0	True				
ANR	5211610	IdentifierDecl	* endp		5211606	0					
ANR	5211611	IdentifierDeclType	const char *		5211606	0					
ANR	5211612	Identifier	endp		5211606	1					
ANR	5211613	ExpressionStatement	"strto_id ( min_id , value , & endp , lookup )"	594:4:14502:14540	5211606	1	True				
ANR	5211614	CallExpression	"strto_id ( min_id , value , & endp , lookup )"		5211606	0					
ANR	5211615	Callee	strto_id		5211606	0					
ANR	5211616	Identifier	strto_id		5211606	0					
ANR	5211617	ArgumentList	min_id		5211606	1					
ANR	5211618	Argument	min_id		5211606	0					
ANR	5211619	Identifier	min_id		5211606	0					
ANR	5211620	Argument	value		5211606	1					
ANR	5211621	Identifier	value		5211606	0					
ANR	5211622	Argument	& endp		5211606	2					
ANR	5211623	UnaryOperationExpression	& endp		5211606	0					
ANR	5211624	UnaryOperator	&		5211606	0					
ANR	5211625	Identifier	endp		5211606	1					
ANR	5211626	Argument	lookup		5211606	3					
ANR	5211627	Identifier	lookup		5211606	0					
ANR	5211628	IfStatement	if ( errno == 0 && value != endp )		5211606	2					
ANR	5211629	Condition	errno == 0 && value != endp	595:8:14550:14576	5211606	0	True				
ANR	5211630	AndExpression	errno == 0 && value != endp		5211606	0		&&			
ANR	5211631	EqualityExpression	errno == 0		5211606	0		==			
ANR	5211632	Identifier	errno		5211606	0					
ANR	5211633	PrimaryExpression	0		5211606	1					
ANR	5211634	EqualityExpression	value != endp		5211606	1		!=			
ANR	5211635	Identifier	value		5211606	0					
ANR	5211636	Identifier	endp		5211606	1					
ANR	5211637	CompoundStatement		4:38:105:105	5211606	1					
ANR	5211638	ExpressionStatement	value = skip_whitespace_const ( endp )	597:1:14642:14677	5211606	0	True				
ANR	5211639	AssignmentExpression	value = skip_whitespace_const ( endp )		5211606	0		=			
ANR	5211640	Identifier	value		5211606	0					
ANR	5211641	CallExpression	skip_whitespace_const ( endp )		5211606	1					
ANR	5211642	Callee	skip_whitespace_const		5211606	0					
ANR	5211643	Identifier	skip_whitespace_const		5211606	0					
ANR	5211644	ArgumentList	endp		5211606	1					
ANR	5211645	Argument	endp		5211606	0					
ANR	5211646	Identifier	endp		5211606	0					
ANR	5211647	IfStatement	if ( * value == '-' )		5211606	1					
ANR	5211648	Condition	* value == '-'	598:5:14684:14696	5211606	0	True				
ANR	5211649	EqualityExpression	* value == '-'		5211606	0		==			
ANR	5211650	UnaryOperationExpression	* value		5211606	0					
ANR	5211651	UnaryOperator	*		5211606	0					
ANR	5211652	Identifier	value		5211606	1					
ANR	5211653	PrimaryExpression	'-'		5211606	1					
ANR	5211654	CompoundStatement		7:21:225:225	5211606	1					
ANR	5211655	ExpressionStatement	++ value	599:5:14707:14714	5211606	0	True				
ANR	5211656	UnaryExpression	++ value		5211606	0					
ANR	5211657	IncDec	++		5211606	0					
ANR	5211658	Identifier	value		5211606	1					
ANR	5211659	ExpressionStatement	value = skip_whitespace_const ( value )	600:5:14721:14757	5211606	1	True				
ANR	5211660	AssignmentExpression	value = skip_whitespace_const ( value )		5211606	0		=			
ANR	5211661	Identifier	value		5211606	0					
ANR	5211662	CallExpression	skip_whitespace_const ( value )		5211606	1					
ANR	5211663	Callee	skip_whitespace_const		5211606	0					
ANR	5211664	Identifier	skip_whitespace_const		5211606	0					
ANR	5211665	ArgumentList	value		5211606	1					
ANR	5211666	Argument	value		5211606	0					
ANR	5211667	Identifier	value		5211606	0					
ANR	5211668	IfStatement	if ( * value == '*' )		5211606	2					
ANR	5211669	Condition	* value == '*'	601:9:14768:14780	5211606	0	True				
ANR	5211670	EqualityExpression	* value == '*'		5211606	0		==			
ANR	5211671	UnaryOperationExpression	* value		5211606	0					
ANR	5211672	UnaryOperator	*		5211606	0					
ANR	5211673	Identifier	value		5211606	1					
ANR	5211674	PrimaryExpression	'*'		5211606	1					
ANR	5211675	CompoundStatement		10:25:309:309	5211606	1					
ANR	5211676	ExpressionStatement	* max_id = UINT_MAX	602:2:14788:14806	5211606	0	True				
ANR	5211677	AssignmentExpression	* max_id = UINT_MAX		5211606	0		=			
ANR	5211678	UnaryOperationExpression	* max_id		5211606	0					
ANR	5211679	UnaryOperator	*		5211606	0					
ANR	5211680	Identifier	max_id		5211606	1					
ANR	5211681	Identifier	UINT_MAX		5211606	1					
ANR	5211682	ExpressionStatement	endp = value + 1	603:2:14810:14826	5211606	1	True				
ANR	5211683	AssignmentExpression	endp = value + 1		5211606	0		=			
ANR	5211684	Identifier	endp		5211606	0					
ANR	5211685	AdditiveExpression	value + 1		5211606	1		+			
ANR	5211686	Identifier	value		5211606	0					
ANR	5211687	PrimaryExpression	1		5211606	1					
ANR	5211688	ElseStatement	else		5211606	0					
ANR	5211689	CompoundStatement		13:14:367:367	5211606	0					
ANR	5211690	ExpressionStatement	"strto_id ( max_id , value , & endp , lookup )"	605:2:14846:14884	5211606	0	True				
ANR	5211691	CallExpression	"strto_id ( max_id , value , & endp , lookup )"		5211606	0					
ANR	5211692	Callee	strto_id		5211606	0					
ANR	5211693	Identifier	strto_id		5211606	0					
ANR	5211694	ArgumentList	max_id		5211606	1					
ANR	5211695	Argument	max_id		5211606	0					
ANR	5211696	Identifier	max_id		5211606	0					
ANR	5211697	Argument	value		5211606	1					
ANR	5211698	Identifier	value		5211606	0					
ANR	5211699	Argument	& endp		5211606	2					
ANR	5211700	UnaryOperationExpression	& endp		5211606	0					
ANR	5211701	UnaryOperator	&		5211606	0					
ANR	5211702	Identifier	endp		5211606	1					
ANR	5211703	Argument	lookup		5211606	3					
ANR	5211704	Identifier	lookup		5211606	0					
ANR	5211705	ElseStatement	else		5211606	0					
ANR	5211706	CompoundStatement		16:10:428:428	5211606	0					
ANR	5211707	ExpressionStatement	* max_id = * min_id	608:5:14910:14927	5211606	0	True				
ANR	5211708	AssignmentExpression	* max_id = * min_id		5211606	0		=			
ANR	5211709	UnaryOperationExpression	* max_id		5211606	0					
ANR	5211710	UnaryOperator	*		5211606	0					
ANR	5211711	Identifier	max_id		5211606	1					
ANR	5211712	UnaryOperationExpression	* min_id		5211606	1					
ANR	5211713	UnaryOperator	*		5211606	0					
ANR	5211714	Identifier	min_id		5211606	1					
ANR	5211715	ElseStatement	else		5211606	0					
ANR	5211716	CompoundStatement		19:13:470:470	5211606	0					
ANR	5211717	ExpressionStatement	* max_id = * min_id	611:1:14948:14965	5211606	0	True				
ANR	5211718	AssignmentExpression	* max_id = * min_id		5211606	0		=			
ANR	5211719	UnaryOperationExpression	* max_id		5211606	0					
ANR	5211720	UnaryOperator	*		5211606	0					
ANR	5211721	Identifier	max_id		5211606	1					
ANR	5211722	UnaryOperationExpression	* min_id		5211606	1					
ANR	5211723	UnaryOperator	*		5211606	0					
ANR	5211724	Identifier	min_id		5211606	1					
ANR	5211725	IfStatement	if ( endptr )		5211606	3					
ANR	5211726	Condition	endptr	614:8:14982:14987	5211606	0	True				
ANR	5211727	Identifier	endptr		5211606	0					
ANR	5211728	CompoundStatement		23:17:516:516	5211606	1					
ANR	5211729	ExpressionStatement	* endptr = endp	615:1:14994:15008	5211606	0	True				
ANR	5211730	AssignmentExpression	* endptr = endp		5211606	0		=			
ANR	5211731	UnaryOperationExpression	* endptr		5211606	0					
ANR	5211732	UnaryOperator	*		5211606	0					
ANR	5211733	Identifier	endptr		5211606	1					
ANR	5211734	Identifier	endp		5211606	1					
ANR	5211735	IfStatement	if ( * min_id > * max_id )		5211606	4					
ANR	5211736	Condition	* min_id > * max_id	618:8:15025:15041	5211606	0	True				
ANR	5211737	RelationalExpression	* min_id > * max_id		5211606	0		>			
ANR	5211738	UnaryOperationExpression	* min_id		5211606	0					
ANR	5211739	UnaryOperator	*		5211606	0					
ANR	5211740	Identifier	min_id		5211606	1					
ANR	5211741	UnaryOperationExpression	* max_id		5211606	1					
ANR	5211742	UnaryOperator	*		5211606	0					
ANR	5211743	Identifier	max_id		5211606	1					
ANR	5211744	CompoundStatement		27:28:570:570	5211606	1					
ANR	5211745	ExpressionStatement	errno = EINVAL	619:1:15048:15062	5211606	0	True				
ANR	5211746	AssignmentExpression	errno = EINVAL		5211606	0		=			
ANR	5211747	Identifier	errno		5211606	0					
ANR	5211748	Identifier	EINVAL		5211606	1					
ANR	5211749	ReturnType	static void		5211606	1					
ANR	5211750	Identifier	strto_id_range		5211606	2					
ANR	5211751	ParameterList	"id_t * min_id , id_t * max_id , const char * value , const char * * endptr , lookup_func lookup"		5211606	3					
ANR	5211752	Parameter	id_t * min_id	591:27:14386:14397	5211606	0	True				
ANR	5211753	ParameterType	id_t *		5211606	0					
ANR	5211754	Identifier	min_id		5211606	1					
ANR	5211755	Parameter	id_t * max_id	591:41:14400:14411	5211606	1	True				
ANR	5211756	ParameterType	id_t *		5211606	0					
ANR	5211757	Identifier	max_id		5211606	1					
ANR	5211758	Parameter	const char * value	591:55:14414:14430	5211606	2	True				
ANR	5211759	ParameterType	const char *		5211606	0					
ANR	5211760	Identifier	value		5211606	1					
ANR	5211761	Parameter	const char * * endptr	591:74:14433:14451	5211606	3	True				
ANR	5211762	ParameterType	const char * *		5211606	0					
ANR	5211763	Identifier	endptr		5211606	1					
ANR	5211764	Parameter	lookup_func lookup	591:95:14454:14471	5211606	4	True				
ANR	5211765	ParameterType	lookup_func		5211606	0					
ANR	5211766	Identifier	lookup		5211606	1					
ANR	5211767	CFGEntryNode	ENTRY		5211606		True				
ANR	5211768	CFGExitNode	EXIT		5211606		True				
ANR	5211769	Symbol	lookup		5211606						
ANR	5211770	Symbol	errno		5211606						
ANR	5211771	Symbol	endptr		5211606						
ANR	5211772	Symbol	& endp		5211606						
ANR	5211773	Symbol	* endptr		5211606						
ANR	5211774	Symbol	* min_id		5211606						
ANR	5211775	Symbol	* max_id		5211606						
ANR	5211776	Symbol	UINT_MAX		5211606						
ANR	5211777	Symbol	EINVAL		5211606						
ANR	5211778	Symbol	skip_whitespace_const		5211606						
ANR	5211779	Symbol	min_id		5211606						
ANR	5211780	Symbol	* value		5211606						
ANR	5211781	Symbol	max_id		5211606						
ANR	5211782	Symbol	endp		5211606						
ANR	5211783	Symbol	value		5211606						
ANR	5211784	Function	strto_id_list	654:0:16143:16763							
ANR	5211785	FunctionDef	"strto_id_list (safe_id_range_list * list , const char * value , const char * * endptr , lookup_func lookup)"		5211784	0					
ANR	5211786	CompoundStatement		655:0:16255:16763	5211784	0					
ANR	5211787	IdentifierDeclStatement	const char * endp = value ;	656:4:16261:16286	5211784	0	True				
ANR	5211788	IdentifierDecl	* endp = value		5211784	0					
ANR	5211789	IdentifierDeclType	const char *		5211784	0					
ANR	5211790	Identifier	endp		5211784	1					
ANR	5211791	AssignmentExpression	* endp = value		5211784	2		=			
ANR	5211792	Identifier	value		5211784	0					
ANR	5211793	Identifier	value		5211784	1					
ANR	5211794	IfStatement	if ( list == NULL || value == NULL )		5211784	1					
ANR	5211795	Condition	list == NULL || value == NULL	658:8:16297:16325	5211784	0	True				
ANR	5211796	OrExpression	list == NULL || value == NULL		5211784	0		||			
ANR	5211797	EqualityExpression	list == NULL		5211784	0		==			
ANR	5211798	Identifier	list		5211784	0					
ANR	5211799	Identifier	NULL		5211784	1					
ANR	5211800	EqualityExpression	value == NULL		5211784	1		==			
ANR	5211801	Identifier	value		5211784	0					
ANR	5211802	Identifier	NULL		5211784	1					
ANR	5211803	CompoundStatement		4:40:73:73	5211784	1					
ANR	5211804	ExpressionStatement	errno = EINVAL	659:1:16332:16346	5211784	0	True				
ANR	5211805	AssignmentExpression	errno = EINVAL		5211784	0		=			
ANR	5211806	Identifier	errno		5211784	0					
ANR	5211807	Identifier	EINVAL		5211784	1					
ANR	5211808	IfStatement	if ( endptr )		5211784	1					
ANR	5211809	Condition	endptr	660:5:16353:16358	5211784	0	True				
ANR	5211810	Identifier	endptr		5211784	0					
ANR	5211811	CompoundStatement		6:14:106:106	5211784	1					
ANR	5211812	ExpressionStatement	* endptr = value	661:5:16369:16384	5211784	0	True				
ANR	5211813	AssignmentExpression	* endptr = value		5211784	0		=			
ANR	5211814	UnaryOperationExpression	* endptr		5211784	0					
ANR	5211815	UnaryOperator	*		5211784	0					
ANR	5211816	Identifier	endptr		5211784	1					
ANR	5211817	Identifier	value		5211784	1					
ANR	5211818	ReturnStatement	return ;	663:1:16390:16396	5211784	2	True				
ANR	5211819	WhileStatement	while ( 1 )		5211784	2					
ANR	5211820	Condition	1	666:11:16416:16416	5211784	0	True				
ANR	5211821	PrimaryExpression	1		5211784	0					
ANR	5211822	CompoundStatement		14:1:181:192	5211784	1					
ANR	5211823	IdentifierDeclStatement	id_t min_id ;	667:1:16423:16434	5211784	0	True				
ANR	5211824	IdentifierDecl	min_id		5211784	0					
ANR	5211825	IdentifierDeclType	id_t		5211784	0					
ANR	5211826	Identifier	min_id		5211784	1					
ANR	5211827	IdentifierDeclStatement	id_t max_id ;	668:1:16437:16448	5211784	1	True				
ANR	5211828	IdentifierDecl	max_id		5211784	0					
ANR	5211829	IdentifierDeclType	id_t		5211784	0					
ANR	5211830	Identifier	max_id		5211784	1					
ANR	5211831	ExpressionStatement	"strto_id_range ( & min_id , & max_id , value , & endp , lookup )"	670:1:16452:16506	5211784	2	True				
ANR	5211832	CallExpression	"strto_id_range ( & min_id , & max_id , value , & endp , lookup )"		5211784	0					
ANR	5211833	Callee	strto_id_range		5211784	0					
ANR	5211834	Identifier	strto_id_range		5211784	0					
ANR	5211835	ArgumentList	& min_id		5211784	1					
ANR	5211836	Argument	& min_id		5211784	0					
ANR	5211837	UnaryOperationExpression	& min_id		5211784	0					
ANR	5211838	UnaryOperator	&		5211784	0					
ANR	5211839	Identifier	min_id		5211784	1					
ANR	5211840	Argument	& max_id		5211784	1					
ANR	5211841	UnaryOperationExpression	& max_id		5211784	0					
ANR	5211842	UnaryOperator	&		5211784	0					
ANR	5211843	Identifier	max_id		5211784	1					
ANR	5211844	Argument	value		5211784	2					
ANR	5211845	Identifier	value		5211784	0					
ANR	5211846	Argument	& endp		5211784	3					
ANR	5211847	UnaryOperationExpression	& endp		5211784	0					
ANR	5211848	UnaryOperator	&		5211784	0					
ANR	5211849	Identifier	endp		5211784	1					
ANR	5211850	Argument	lookup		5211784	4					
ANR	5211851	Identifier	lookup		5211784	0					
ANR	5211852	IfStatement	if ( errno != 0 || value == endp )		5211784	3					
ANR	5211853	Condition	errno != 0 || value == endp	671:5:16513:16539	5211784	0	True				
ANR	5211854	OrExpression	errno != 0 || value == endp		5211784	0		||			
ANR	5211855	EqualityExpression	errno != 0		5211784	0		!=			
ANR	5211856	Identifier	errno		5211784	0					
ANR	5211857	PrimaryExpression	0		5211784	1					
ANR	5211858	EqualityExpression	value == endp		5211784	1		==			
ANR	5211859	Identifier	value		5211784	0					
ANR	5211860	Identifier	endp		5211784	1					
ANR	5211861	CompoundStatement		17:35:287:287	5211784	1					
ANR	5211862	BreakStatement	break ;	672:5:16550:16555	5211784	0	True				
ANR	5211863	ExpressionStatement	"safe_add_id_range_to_list ( list , min_id , max_id )"	675:1:16562:16609	5211784	4	True				
ANR	5211864	CallExpression	"safe_add_id_range_to_list ( list , min_id , max_id )"		5211784	0					
ANR	5211865	Callee	safe_add_id_range_to_list		5211784	0					
ANR	5211866	Identifier	safe_add_id_range_to_list		5211784	0					
ANR	5211867	ArgumentList	list		5211784	1					
ANR	5211868	Argument	list		5211784	0					
ANR	5211869	Identifier	list		5211784	0					
ANR	5211870	Argument	min_id		5211784	1					
ANR	5211871	Identifier	min_id		5211784	0					
ANR	5211872	Argument	max_id		5211784	2					
ANR	5211873	Identifier	max_id		5211784	0					
ANR	5211874	ExpressionStatement	value = skip_whitespace_const ( endp )	677:1:16613:16648	5211784	5	True				
ANR	5211875	AssignmentExpression	value = skip_whitespace_const ( endp )		5211784	0		=			
ANR	5211876	Identifier	value		5211784	0					
ANR	5211877	CallExpression	skip_whitespace_const ( endp )		5211784	1					
ANR	5211878	Callee	skip_whitespace_const		5211784	0					
ANR	5211879	Identifier	skip_whitespace_const		5211784	0					
ANR	5211880	ArgumentList	endp		5211784	1					
ANR	5211881	Argument	endp		5211784	0					
ANR	5211882	Identifier	endp		5211784	0					
ANR	5211883	IfStatement	if ( * value == ':' )		5211784	6					
ANR	5211884	Condition	* value == ':'	678:5:16655:16667	5211784	0	True				
ANR	5211885	EqualityExpression	* value == ':'		5211784	0		==			
ANR	5211886	UnaryOperationExpression	* value		5211784	0					
ANR	5211887	UnaryOperator	*		5211784	0					
ANR	5211888	Identifier	value		5211784	1					
ANR	5211889	PrimaryExpression	':'		5211784	1					
ANR	5211890	CompoundStatement		24:21:415:415	5211784	1					
ANR	5211891	ExpressionStatement	++ value	679:5:16678:16685	5211784	0	True				
ANR	5211892	UnaryExpression	++ value		5211784	0					
ANR	5211893	IncDec	++		5211784	0					
ANR	5211894	Identifier	value		5211784	1					
ANR	5211895	ElseStatement	else		5211784	0					
ANR	5211896	CompoundStatement		26:10:441:441	5211784	0					
ANR	5211897	BreakStatement	break ;	681:5:16704:16709	5211784	0	True				
ANR	5211898	IfStatement	if ( endptr )		5211784	3					
ANR	5211899	Condition	endptr	685:8:16729:16734	5211784	0	True				
ANR	5211900	Identifier	endptr		5211784	0					
ANR	5211901	CompoundStatement		31:17:482:482	5211784	1					
ANR	5211902	ExpressionStatement	* endptr = endp	686:1:16741:16755	5211784	0	True				
ANR	5211903	AssignmentExpression	* endptr = endp		5211784	0		=			
ANR	5211904	UnaryOperationExpression	* endptr		5211784	0					
ANR	5211905	UnaryOperator	*		5211784	0					
ANR	5211906	Identifier	endptr		5211784	1					
ANR	5211907	Identifier	endp		5211784	1					
ANR	5211908	ReturnType	static void		5211784	1					
ANR	5211909	Identifier	strto_id_list		5211784	2					
ANR	5211910	ParameterList	"safe_id_range_list * list , const char * value , const char * * endptr , lookup_func lookup"		5211784	3					
ANR	5211911	Parameter	safe_id_range_list * list	654:26:16169:16192	5211784	0	True				
ANR	5211912	ParameterType	safe_id_range_list *		5211784	0					
ANR	5211913	Identifier	list		5211784	1					
ANR	5211914	Parameter	const char * value	654:52:16195:16211	5211784	1	True				
ANR	5211915	ParameterType	const char *		5211784	0					
ANR	5211916	Identifier	value		5211784	1					
ANR	5211917	Parameter	const char * * endptr	654:71:16214:16232	5211784	2	True				
ANR	5211918	ParameterType	const char * *		5211784	0					
ANR	5211919	Identifier	endptr		5211784	1					
ANR	5211920	Parameter	lookup_func lookup	654:92:16235:16252	5211784	3	True				
ANR	5211921	ParameterType	lookup_func		5211784	0					
ANR	5211922	Identifier	lookup		5211784	1					
ANR	5211923	CFGEntryNode	ENTRY		5211784		True				
ANR	5211924	CFGExitNode	EXIT		5211784		True				
ANR	5211925	Symbol	lookup		5211784						
ANR	5211926	Symbol	errno		5211784						
ANR	5211927	Symbol	NULL		5211784						
ANR	5211928	Symbol	endptr		5211784						
ANR	5211929	Symbol	& endp		5211784						
ANR	5211930	Symbol	* endptr		5211784						
ANR	5211931	Symbol	list		5211784						
ANR	5211932	Symbol	& min_id		5211784						
ANR	5211933	Symbol	EINVAL		5211784						
ANR	5211934	Symbol	skip_whitespace_const		5211784						
ANR	5211935	Symbol	min_id		5211784						
ANR	5211936	Symbol	& max_id		5211784						
ANR	5211937	Symbol	* value		5211784						
ANR	5211938	Symbol	max_id		5211784						
ANR	5211939	Symbol	endp		5211784						
ANR	5211940	Symbol	value		5211784						
ANR	5211941	Function	safe_strto_id_list	717:0:17658:17805							
ANR	5211942	FunctionDef	"safe_strto_id_list (safe_id_range_list * list , const char * value , const char * * endptr)"		5211941	0					
ANR	5211943	CompoundStatement		718:0:17748:17805	5211941	0					
ANR	5211944	ExpressionStatement	"strto_id_list ( list , value , endptr , name_to_error )"	719:4:17754:17803	5211941	0	True				
ANR	5211945	CallExpression	"strto_id_list ( list , value , endptr , name_to_error )"		5211941	0					
ANR	5211946	Callee	strto_id_list		5211941	0					
ANR	5211947	Identifier	strto_id_list		5211941	0					
ANR	5211948	ArgumentList	list		5211941	1					
ANR	5211949	Argument	list		5211941	0					
ANR	5211950	Identifier	list		5211941	0					
ANR	5211951	Argument	value		5211941	1					
ANR	5211952	Identifier	value		5211941	0					
ANR	5211953	Argument	endptr		5211941	2					
ANR	5211954	Identifier	endptr		5211941	0					
ANR	5211955	Argument	name_to_error		5211941	3					
ANR	5211956	Identifier	name_to_error		5211941	0					
ANR	5211957	ReturnType	void		5211941	1					
ANR	5211958	Identifier	safe_strto_id_list		5211941	2					
ANR	5211959	ParameterList	"safe_id_range_list * list , const char * value , const char * * endptr"		5211941	3					
ANR	5211960	Parameter	safe_id_range_list * list	717:24:17682:17705	5211941	0	True				
ANR	5211961	ParameterType	safe_id_range_list *		5211941	0					
ANR	5211962	Identifier	list		5211941	1					
ANR	5211963	Parameter	const char * value	717:50:17708:17724	5211941	1	True				
ANR	5211964	ParameterType	const char *		5211941	0					
ANR	5211965	Identifier	value		5211941	1					
ANR	5211966	Parameter	const char * * endptr	717:69:17727:17745	5211941	2	True				
ANR	5211967	ParameterType	const char * *		5211941	0					
ANR	5211968	Identifier	endptr		5211941	1					
ANR	5211969	CFGEntryNode	ENTRY		5211941		True				
ANR	5211970	CFGExitNode	EXIT		5211941		True				
ANR	5211971	Symbol	name_to_error		5211941						
ANR	5211972	Symbol	endptr		5211941						
ANR	5211973	Symbol	list		5211941						
ANR	5211974	Symbol	value		5211941						
ANR	5211975	Function	safe_strto_uid_list	750:0:18760:18906							
ANR	5211976	FunctionDef	"safe_strto_uid_list (safe_id_range_list * list , const char * value , const char * * endptr)"		5211975	0					
ANR	5211977	CompoundStatement		751:0:18851:18906	5211975	0					
ANR	5211978	ExpressionStatement	"strto_id_list ( list , value , endptr , name_to_uid )"	752:4:18857:18904	5211975	0	True				
ANR	5211979	CallExpression	"strto_id_list ( list , value , endptr , name_to_uid )"		5211975	0					
ANR	5211980	Callee	strto_id_list		5211975	0					
ANR	5211981	Identifier	strto_id_list		5211975	0					
ANR	5211982	ArgumentList	list		5211975	1					
ANR	5211983	Argument	list		5211975	0					
ANR	5211984	Identifier	list		5211975	0					
ANR	5211985	Argument	value		5211975	1					
ANR	5211986	Identifier	value		5211975	0					
ANR	5211987	Argument	endptr		5211975	2					
ANR	5211988	Identifier	endptr		5211975	0					
ANR	5211989	Argument	name_to_uid		5211975	3					
ANR	5211990	Identifier	name_to_uid		5211975	0					
ANR	5211991	ReturnType	void		5211975	1					
ANR	5211992	Identifier	safe_strto_uid_list		5211975	2					
ANR	5211993	ParameterList	"safe_id_range_list * list , const char * value , const char * * endptr"		5211975	3					
ANR	5211994	Parameter	safe_id_range_list * list	750:25:18785:18808	5211975	0	True				
ANR	5211995	ParameterType	safe_id_range_list *		5211975	0					
ANR	5211996	Identifier	list		5211975	1					
ANR	5211997	Parameter	const char * value	750:51:18811:18827	5211975	1	True				
ANR	5211998	ParameterType	const char *		5211975	0					
ANR	5211999	Identifier	value		5211975	1					
ANR	5212000	Parameter	const char * * endptr	750:70:18830:18848	5211975	2	True				
ANR	5212001	ParameterType	const char * *		5211975	0					
ANR	5212002	Identifier	endptr		5211975	1					
ANR	5212003	CFGEntryNode	ENTRY		5211975		True				
ANR	5212004	CFGExitNode	EXIT		5211975		True				
ANR	5212005	Symbol	endptr		5211975						
ANR	5212006	Symbol	list		5211975						
ANR	5212007	Symbol	value		5211975						
ANR	5212008	Symbol	name_to_uid		5211975						
ANR	5212009	Function	safe_strto_gid_list	783:0:19863:20009							
ANR	5212010	FunctionDef	"safe_strto_gid_list (safe_id_range_list * list , const char * value , const char * * endptr)"		5212009	0					
ANR	5212011	CompoundStatement		784:0:19954:20009	5212009	0					
ANR	5212012	ExpressionStatement	"strto_id_list ( list , value , endptr , name_to_gid )"	785:4:19960:20007	5212009	0	True				
ANR	5212013	CallExpression	"strto_id_list ( list , value , endptr , name_to_gid )"		5212009	0					
ANR	5212014	Callee	strto_id_list		5212009	0					
ANR	5212015	Identifier	strto_id_list		5212009	0					
ANR	5212016	ArgumentList	list		5212009	1					
ANR	5212017	Argument	list		5212009	0					
ANR	5212018	Identifier	list		5212009	0					
ANR	5212019	Argument	value		5212009	1					
ANR	5212020	Identifier	value		5212009	0					
ANR	5212021	Argument	endptr		5212009	2					
ANR	5212022	Identifier	endptr		5212009	0					
ANR	5212023	Argument	name_to_gid		5212009	3					
ANR	5212024	Identifier	name_to_gid		5212009	0					
ANR	5212025	ReturnType	void		5212009	1					
ANR	5212026	Identifier	safe_strto_gid_list		5212009	2					
ANR	5212027	ParameterList	"safe_id_range_list * list , const char * value , const char * * endptr"		5212009	3					
ANR	5212028	Parameter	safe_id_range_list * list	783:25:19888:19911	5212009	0	True				
ANR	5212029	ParameterType	safe_id_range_list *		5212009	0					
ANR	5212030	Identifier	list		5212009	1					
ANR	5212031	Parameter	const char * value	783:51:19914:19930	5212009	1	True				
ANR	5212032	ParameterType	const char *		5212009	0					
ANR	5212033	Identifier	value		5212009	1					
ANR	5212034	Parameter	const char * * endptr	783:70:19933:19951	5212009	2	True				
ANR	5212035	ParameterType	const char * *		5212009	0					
ANR	5212036	Identifier	endptr		5212009	1					
ANR	5212037	CFGEntryNode	ENTRY		5212009		True				
ANR	5212038	CFGExitNode	EXIT		5212009		True				
ANR	5212039	Symbol	endptr		5212009						
ANR	5212040	Symbol	list		5212009						
ANR	5212041	Symbol	value		5212009						
ANR	5212042	Symbol	name_to_gid		5212009						
ANR	5212043	Function	parse_id_list	813:0:20750:21130							
ANR	5212044	FunctionDef	"parse_id_list (safe_id_range_list * list , const char * value , lookup_func lookup)"		5212043	0					
ANR	5212045	CompoundStatement		814:0:20840:21130	5212043	0					
ANR	5212046	IdentifierDeclStatement	const char * endp ;	815:4:20846:20862	5212043	0	True				
ANR	5212047	IdentifierDecl	* endp		5212043	0					
ANR	5212048	IdentifierDeclType	const char *		5212043	0					
ANR	5212049	Identifier	endp		5212043	1					
ANR	5212050	ExpressionStatement	"strto_id_list ( list , value , & endp , lookup )"	817:4:20869:20910	5212043	1	True				
ANR	5212051	CallExpression	"strto_id_list ( list , value , & endp , lookup )"		5212043	0					
ANR	5212052	Callee	strto_id_list		5212043	0					
ANR	5212053	Identifier	strto_id_list		5212043	0					
ANR	5212054	ArgumentList	list		5212043	1					
ANR	5212055	Argument	list		5212043	0					
ANR	5212056	Identifier	list		5212043	0					
ANR	5212057	Argument	value		5212043	1					
ANR	5212058	Identifier	value		5212043	0					
ANR	5212059	Argument	& endp		5212043	2					
ANR	5212060	UnaryOperationExpression	& endp		5212043	0					
ANR	5212061	UnaryOperator	&		5212043	0					
ANR	5212062	Identifier	endp		5212043	1					
ANR	5212063	Argument	lookup		5212043	3					
ANR	5212064	Identifier	lookup		5212043	0					
ANR	5212065	IfStatement	if ( errno != 0 )		5212043	2					
ANR	5212066	Condition	errno != 0	819:8:20921:20930	5212043	0	True				
ANR	5212067	EqualityExpression	errno != 0		5212043	0		!=			
ANR	5212068	Identifier	errno		5212043	0					
ANR	5212069	PrimaryExpression	0		5212043	1					
ANR	5212070	CompoundStatement		6:21:93:93	5212043	1					
ANR	5212071	ReturnStatement	return - 1 ;	820:1:20937:20946	5212043	0	True				
ANR	5212072	UnaryOperationExpression	- 1		5212043	0					
ANR	5212073	UnaryOperator	-		5212043	0					
ANR	5212074	PrimaryExpression	1		5212043	1					
ANR	5212075	ExpressionStatement	endp = skip_whitespace_const ( endp )	824:4:21035:21069	5212043	3	True				
ANR	5212076	AssignmentExpression	endp = skip_whitespace_const ( endp )		5212043	0		=			
ANR	5212077	Identifier	endp		5212043	0					
ANR	5212078	CallExpression	skip_whitespace_const ( endp )		5212043	1					
ANR	5212079	Callee	skip_whitespace_const		5212043	0					
ANR	5212080	Identifier	skip_whitespace_const		5212043	0					
ANR	5212081	ArgumentList	endp		5212043	1					
ANR	5212082	Argument	endp		5212043	0					
ANR	5212083	Identifier	endp		5212043	0					
ANR	5212084	IfStatement	if ( * endp != '\\0' )		5212043	4					
ANR	5212085	Condition	* endp != '\\0'	825:8:21079:21091	5212043	0	True				
ANR	5212086	EqualityExpression	* endp != '\\0'		5212043	0		!=			
ANR	5212087	UnaryOperationExpression	* endp		5212043	0					
ANR	5212088	UnaryOperator	*		5212043	0					
ANR	5212089	Identifier	endp		5212043	1					
ANR	5212090	PrimaryExpression	'\\0'		5212043	1					
ANR	5212091	CompoundStatement		12:24:254:254	5212043	1					
ANR	5212092	ReturnStatement	return - 1 ;	826:1:21098:21107	5212043	0	True				
ANR	5212093	UnaryOperationExpression	- 1		5212043	0					
ANR	5212094	UnaryOperator	-		5212043	0					
ANR	5212095	PrimaryExpression	1		5212043	1					
ANR	5212096	ReturnStatement	return 0 ;	829:4:21120:21128	5212043	5	True				
ANR	5212097	PrimaryExpression	0		5212043	0					
ANR	5212098	ReturnType	static int		5212043	1					
ANR	5212099	Identifier	parse_id_list		5212043	2					
ANR	5212100	ParameterList	"safe_id_range_list * list , const char * value , lookup_func lookup"		5212043	3					
ANR	5212101	Parameter	safe_id_range_list * list	813:25:20775:20798	5212043	0	True				
ANR	5212102	ParameterType	safe_id_range_list *		5212043	0					
ANR	5212103	Identifier	list		5212043	1					
ANR	5212104	Parameter	const char * value	813:51:20801:20817	5212043	1	True				
ANR	5212105	ParameterType	const char *		5212043	0					
ANR	5212106	Identifier	value		5212043	1					
ANR	5212107	Parameter	lookup_func lookup	813:70:20820:20837	5212043	2	True				
ANR	5212108	ParameterType	lookup_func		5212043	0					
ANR	5212109	Identifier	lookup		5212043	1					
ANR	5212110	CFGEntryNode	ENTRY		5212043		True				
ANR	5212111	CFGExitNode	EXIT		5212043		True				
ANR	5212112	Symbol	lookup		5212043						
ANR	5212113	Symbol	skip_whitespace_const		5212043						
ANR	5212114	Symbol	errno		5212043						
ANR	5212115	Symbol	& endp		5212043						
ANR	5212116	Symbol	* endp		5212043						
ANR	5212117	Symbol	endp		5212043						
ANR	5212118	Symbol	list		5212043						
ANR	5212119	Symbol	value		5212043						
ANR	5212120	Function	safe_parse_id_list	856:0:21775:21899							
ANR	5212121	FunctionDef	"safe_parse_id_list (safe_id_range_list * list , const char * value)"		5212120	0					
ANR	5212122	CompoundStatement		857:0:21843:21899	5212120	0					
ANR	5212123	ReturnStatement	"return parse_id_list ( list , value , name_to_error ) ;"	858:4:21849:21897	5212120	0	True				
ANR	5212124	CallExpression	"parse_id_list ( list , value , name_to_error )"		5212120	0					
ANR	5212125	Callee	parse_id_list		5212120	0					
ANR	5212126	Identifier	parse_id_list		5212120	0					
ANR	5212127	ArgumentList	list		5212120	1					
ANR	5212128	Argument	list		5212120	0					
ANR	5212129	Identifier	list		5212120	0					
ANR	5212130	Argument	value		5212120	1					
ANR	5212131	Identifier	value		5212120	0					
ANR	5212132	Argument	name_to_error		5212120	2					
ANR	5212133	Identifier	name_to_error		5212120	0					
ANR	5212134	ReturnType	int		5212120	1					
ANR	5212135	Identifier	safe_parse_id_list		5212120	2					
ANR	5212136	ParameterList	"safe_id_range_list * list , const char * value"		5212120	3					
ANR	5212137	Parameter	safe_id_range_list * list	856:23:21798:21821	5212120	0	True				
ANR	5212138	ParameterType	safe_id_range_list *		5212120	0					
ANR	5212139	Identifier	list		5212120	1					
ANR	5212140	Parameter	const char * value	856:49:21824:21840	5212120	1	True				
ANR	5212141	ParameterType	const char *		5212120	0					
ANR	5212142	Identifier	value		5212120	1					
ANR	5212143	CFGEntryNode	ENTRY		5212120		True				
ANR	5212144	CFGExitNode	EXIT		5212120		True				
ANR	5212145	Symbol	name_to_error		5212120						
ANR	5212146	Symbol	parse_id_list		5212120						
ANR	5212147	Symbol	list		5212120						
ANR	5212148	Symbol	value		5212120						
ANR	5212149	Function	safe_parse_uid_list	886:0:22645:22768							
ANR	5212150	FunctionDef	"safe_parse_uid_list (safe_id_range_list * list , const char * value)"		5212149	0					
ANR	5212151	CompoundStatement		887:0:22714:22768	5212149	0					
ANR	5212152	ReturnStatement	"return parse_id_list ( list , value , name_to_uid ) ;"	888:4:22720:22766	5212149	0	True				
ANR	5212153	CallExpression	"parse_id_list ( list , value , name_to_uid )"		5212149	0					
ANR	5212154	Callee	parse_id_list		5212149	0					
ANR	5212155	Identifier	parse_id_list		5212149	0					
ANR	5212156	ArgumentList	list		5212149	1					
ANR	5212157	Argument	list		5212149	0					
ANR	5212158	Identifier	list		5212149	0					
ANR	5212159	Argument	value		5212149	1					
ANR	5212160	Identifier	value		5212149	0					
ANR	5212161	Argument	name_to_uid		5212149	2					
ANR	5212162	Identifier	name_to_uid		5212149	0					
ANR	5212163	ReturnType	int		5212149	1					
ANR	5212164	Identifier	safe_parse_uid_list		5212149	2					
ANR	5212165	ParameterList	"safe_id_range_list * list , const char * value"		5212149	3					
ANR	5212166	Parameter	safe_id_range_list * list	886:24:22669:22692	5212149	0	True				
ANR	5212167	ParameterType	safe_id_range_list *		5212149	0					
ANR	5212168	Identifier	list		5212149	1					
ANR	5212169	Parameter	const char * value	886:50:22695:22711	5212149	1	True				
ANR	5212170	ParameterType	const char *		5212149	0					
ANR	5212171	Identifier	value		5212149	1					
ANR	5212172	CFGEntryNode	ENTRY		5212149		True				
ANR	5212173	CFGExitNode	EXIT		5212149		True				
ANR	5212174	Symbol	parse_id_list		5212149						
ANR	5212175	Symbol	list		5212149						
ANR	5212176	Symbol	value		5212149						
ANR	5212177	Symbol	name_to_uid		5212149						
ANR	5212178	Function	safe_parse_gid_list	916:0:23515:23638							
ANR	5212179	FunctionDef	"safe_parse_gid_list (safe_id_range_list * list , const char * value)"		5212178	0					
ANR	5212180	CompoundStatement		917:0:23584:23638	5212178	0					
ANR	5212181	ReturnStatement	"return parse_id_list ( list , value , name_to_gid ) ;"	918:4:23590:23636	5212178	0	True				
ANR	5212182	CallExpression	"parse_id_list ( list , value , name_to_gid )"		5212178	0					
ANR	5212183	Callee	parse_id_list		5212178	0					
ANR	5212184	Identifier	parse_id_list		5212178	0					
ANR	5212185	ArgumentList	list		5212178	1					
ANR	5212186	Argument	list		5212178	0					
ANR	5212187	Identifier	list		5212178	0					
ANR	5212188	Argument	value		5212178	1					
ANR	5212189	Identifier	value		5212178	0					
ANR	5212190	Argument	name_to_gid		5212178	2					
ANR	5212191	Identifier	name_to_gid		5212178	0					
ANR	5212192	ReturnType	int		5212178	1					
ANR	5212193	Identifier	safe_parse_gid_list		5212178	2					
ANR	5212194	ParameterList	"safe_id_range_list * list , const char * value"		5212178	3					
ANR	5212195	Parameter	safe_id_range_list * list	916:24:23539:23562	5212178	0	True				
ANR	5212196	ParameterType	safe_id_range_list *		5212178	0					
ANR	5212197	Identifier	list		5212178	1					
ANR	5212198	Parameter	const char * value	916:50:23565:23581	5212178	1	True				
ANR	5212199	ParameterType	const char *		5212178	0					
ANR	5212200	Identifier	value		5212178	1					
ANR	5212201	CFGEntryNode	ENTRY		5212178		True				
ANR	5212202	CFGExitNode	EXIT		5212178		True				
ANR	5212203	Symbol	parse_id_list		5212178						
ANR	5212204	Symbol	list		5212178						
ANR	5212205	Symbol	value		5212178						
ANR	5212206	Symbol	name_to_gid		5212178						
