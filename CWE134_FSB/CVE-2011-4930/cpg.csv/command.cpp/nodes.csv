command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	806759	File	data/converged/CVE-2011-4930_htcondor/command.cpp								
ANR	806760	DeclStmt									
ANR	806761	Decl							int	"int ( int , struct sockaddr * , int * , int )"	tcp_accept_timeout
ANR	806762	DeclStmt									
ANR	806763	Decl							int	"int ( Stream * stream , Resource * rip , bool graceful )"	deactivate_claim
ANR	806764	DeclStmt									
ANR	806765	Decl							int	int	rval
ANR	806766	DeclStmt									
ANR	806767	Decl							Resource	Resource *	rip
ANR	806768	DeclStmt									
ANR	806769	Decl							State	State	s
ANR	806770	Function	deactivate_claim	78:0:2092:3282							
ANR	806771	FunctionDef	"deactivate_claim (Stream * stream , Resource * rip , bool graceful)"		806770	0					
ANR	806772	CompoundStatement		80:0:2159:3282	806770	0					
ANR	806773	IdentifierDeclStatement	int rval ;	81:1:2162:2170	806770	0	True				
ANR	806774	IdentifierDecl	rval		806770	0					
ANR	806775	IdentifierDeclType	int		806770	0					
ANR	806776	Identifier	rval		806770	1					
ANR	806777	IdentifierDeclStatement	bool claim_is_closing = rip -> curClaimIsClosing ( ) ;	82:1:2173:2221	806770	1	True				
ANR	806778	IdentifierDecl	claim_is_closing = rip -> curClaimIsClosing ( )		806770	0					
ANR	806779	IdentifierDeclType	bool		806770	0					
ANR	806780	Identifier	claim_is_closing		806770	1					
ANR	806781	AssignmentExpression	claim_is_closing = rip -> curClaimIsClosing ( )		806770	2		=			
ANR	806782	Identifier	claim_is_closing		806770	0					
ANR	806783	CallExpression	rip -> curClaimIsClosing ( )		806770	1					
ANR	806784	Callee	rip -> curClaimIsClosing		806770	0					
ANR	806785	PtrMemberAccess	rip -> curClaimIsClosing		806770	0					
ANR	806786	Identifier	rip		806770	0					
ANR	806787	Identifier	curClaimIsClosing		806770	1					
ANR	806788	ArgumentList			806770	1					
ANR	806789	ExpressionStatement	stream -> encode ( )	88:1:2462:2478	806770	2	True				
ANR	806790	CallExpression	stream -> encode ( )		806770	0					
ANR	806791	Callee	stream -> encode		806770	0					
ANR	806792	PtrMemberAccess	stream -> encode		806770	0					
ANR	806793	Identifier	stream		806770	0					
ANR	806794	Identifier	encode		806770	1					
ANR	806795	ArgumentList			806770	1					
ANR	806796	IdentifierDeclStatement	ClassAd response_ad ;	90:1:2482:2501	806770	3	True				
ANR	806797	IdentifierDecl	response_ad		806770	0					
ANR	806798	IdentifierDeclType	ClassAd		806770	0					
ANR	806799	Identifier	response_ad		806770	1					
ANR	806800	ExpressionStatement	"response_ad . Assign ( ATTR_START , ! claim_is_closing )"	91:1:2504:2552	806770	4	True				
ANR	806801	CallExpression	"response_ad . Assign ( ATTR_START , ! claim_is_closing )"		806770	0					
ANR	806802	Callee	response_ad . Assign		806770	0					
ANR	806803	MemberAccess	response_ad . Assign		806770	0					
ANR	806804	Identifier	response_ad		806770	0					
ANR	806805	Identifier	Assign		806770	1					
ANR	806806	ArgumentList	ATTR_START		806770	1					
ANR	806807	Argument	ATTR_START		806770	0					
ANR	806808	Identifier	ATTR_START		806770	0					
ANR	806809	Argument	! claim_is_closing		806770	1					
ANR	806810	UnaryOperationExpression	! claim_is_closing		806770	0					
ANR	806811	UnaryOperator	!		806770	0					
ANR	806812	Identifier	claim_is_closing		806770	1					
ANR	806813	IfStatement	if ( ! response_ad . put ( * stream ) || ! stream -> end_of_message ( ) )		806770	5					
ANR	806814	Condition	! response_ad . put ( * stream ) || ! stream -> end_of_message ( )	92:5:2559:2612	806770	0	True				
ANR	806815	OrExpression	! response_ad . put ( * stream ) || ! stream -> end_of_message ( )		806770	0		||			
ANR	806816	UnaryOperationExpression	! response_ad . put ( * stream )		806770	0					
ANR	806817	UnaryOperator	!		806770	0					
ANR	806818	CallExpression	response_ad . put ( * stream )		806770	1					
ANR	806819	Callee	response_ad . put		806770	0					
ANR	806820	MemberAccess	response_ad . put		806770	0					
ANR	806821	Identifier	response_ad		806770	0					
ANR	806822	Identifier	put		806770	1					
ANR	806823	ArgumentList	* stream		806770	1					
ANR	806824	Argument	* stream		806770	0					
ANR	806825	UnaryOperationExpression	* stream		806770	0					
ANR	806826	UnaryOperator	*		806770	0					
ANR	806827	Identifier	stream		806770	1					
ANR	806828	UnaryOperationExpression	! stream -> end_of_message ( )		806770	1					
ANR	806829	UnaryOperator	!		806770	0					
ANR	806830	CallExpression	stream -> end_of_message ( )		806770	1					
ANR	806831	Callee	stream -> end_of_message		806770	0					
ANR	806832	PtrMemberAccess	stream -> end_of_message		806770	0					
ANR	806833	Identifier	stream		806770	0					
ANR	806834	Identifier	end_of_message		806770	1					
ANR	806835	ArgumentList			806770	1					
ANR	806836	CompoundStatement		13:62:456:456	806770	1					
ANR	806837	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Failed to send response ClassAd in deactivate_claim.\\n"" )"	93:2:2620:2697	806770	0	True				
ANR	806838	CallExpression	"dprintf ( D_FULLDEBUG , ""Failed to send response ClassAd in deactivate_claim.\\n"" )"		806770	0					
ANR	806839	Callee	dprintf		806770	0					
ANR	806840	Identifier	dprintf		806770	0					
ANR	806841	ArgumentList	D_FULLDEBUG		806770	1					
ANR	806842	Argument	D_FULLDEBUG		806770	0					
ANR	806843	Identifier	D_FULLDEBUG		806770	0					
ANR	806844	Argument	"""Failed to send response ClassAd in deactivate_claim.\\n"""		806770	1					
ANR	806845	PrimaryExpression	"""Failed to send response ClassAd in deactivate_claim.\\n"""		806770	0					
ANR	806846	ExpressionStatement	claim_is_closing = false	98:2:2837:2861	806770	1	True				
ANR	806847	AssignmentExpression	claim_is_closing = false		806770	0		=			
ANR	806848	Identifier	claim_is_closing		806770	0					
ANR	806849	Identifier	false		806770	1					
ANR	806850	IfStatement	if ( graceful )		806770	6					
ANR	806851	Condition	graceful	101:4:2871:2878	806770	0	True				
ANR	806852	Identifier	graceful		806770	0					
ANR	806853	CompoundStatement		22:14:721:721	806770	1					
ANR	806854	ExpressionStatement	rval = rip -> deactivate_claim ( )	102:2:2885:2915	806770	0	True				
ANR	806855	AssignmentExpression	rval = rip -> deactivate_claim ( )		806770	0		=			
ANR	806856	Identifier	rval		806770	0					
ANR	806857	CallExpression	rip -> deactivate_claim ( )		806770	1					
ANR	806858	Callee	rip -> deactivate_claim		806770	0					
ANR	806859	PtrMemberAccess	rip -> deactivate_claim		806770	0					
ANR	806860	Identifier	rip		806770	0					
ANR	806861	Identifier	deactivate_claim		806770	1					
ANR	806862	ArgumentList			806770	1					
ANR	806863	ElseStatement	else		806770	0					
ANR	806864	CompoundStatement		25:6:766:766	806770	0					
ANR	806865	ExpressionStatement	rval = rip -> deactivate_claim_forcibly ( )	105:2:2930:2969	806770	0	True				
ANR	806866	AssignmentExpression	rval = rip -> deactivate_claim_forcibly ( )		806770	0		=			
ANR	806867	Identifier	rval		806770	0					
ANR	806868	CallExpression	rip -> deactivate_claim_forcibly ( )		806770	1					
ANR	806869	Callee	rip -> deactivate_claim_forcibly		806770	0					
ANR	806870	PtrMemberAccess	rip -> deactivate_claim_forcibly		806770	0					
ANR	806871	Identifier	rip		806770	0					
ANR	806872	Identifier	deactivate_claim_forcibly		806770	1					
ANR	806873	ArgumentList			806770	1					
ANR	806874	IfStatement	if ( claim_is_closing && rip -> r_cur )		806770	7					
ANR	806875	Condition	claim_is_closing && rip -> r_cur	108:5:2980:3009	806770	0	True				
ANR	806876	AndExpression	claim_is_closing && rip -> r_cur		806770	0		&&			
ANR	806877	Identifier	claim_is_closing		806770	0					
ANR	806878	PtrMemberAccess	rip -> r_cur		806770	1					
ANR	806879	Identifier	rip		806770	0					
ANR	806880	Identifier	r_cur		806770	1					
ANR	806881	CompoundStatement		29:38:853:853	806770	1					
ANR	806882	ExpressionStatement	rip -> r_cur -> scheddClosedClaim ( )	112:2:3202:3233	806770	0	True				
ANR	806883	CallExpression	rip -> r_cur -> scheddClosedClaim ( )		806770	0					
ANR	806884	Callee	rip -> r_cur -> scheddClosedClaim		806770	0					
ANR	806885	PtrMemberAccess	rip -> r_cur -> scheddClosedClaim		806770	0					
ANR	806886	PtrMemberAccess	rip -> r_cur		806770	0					
ANR	806887	Identifier	rip		806770	0					
ANR	806888	Identifier	r_cur		806770	1					
ANR	806889	Identifier	scheddClosedClaim		806770	1					
ANR	806890	ArgumentList			806770	1					
ANR	806891	ExpressionStatement	rip -> void_release_claim ( )	113:2:3237:3262	806770	1	True				
ANR	806892	CallExpression	rip -> void_release_claim ( )		806770	0					
ANR	806893	Callee	rip -> void_release_claim		806770	0					
ANR	806894	PtrMemberAccess	rip -> void_release_claim		806770	0					
ANR	806895	Identifier	rip		806770	0					
ANR	806896	Identifier	void_release_claim		806770	1					
ANR	806897	ArgumentList			806770	1					
ANR	806898	ReturnStatement	return rval ;	116:1:3269:3280	806770	8	True				
ANR	806899	Identifier	rval		806770	0					
ANR	806900	ReturnType	int		806770	1					
ANR	806901	Identifier	deactivate_claim		806770	2					
ANR	806902	ParameterList	"Stream * stream , Resource * rip , bool graceful"		806770	3					
ANR	806903	Parameter	Stream * stream	79:17:2113:2126	806770	0	True				
ANR	806904	ParameterType	Stream *		806770	0					
ANR	806905	Identifier	stream		806770	1					
ANR	806906	Parameter	Resource * rip	79:33:2129:2141	806770	1	True				
ANR	806907	ParameterType	Resource *		806770	0					
ANR	806908	Identifier	rip		806770	1					
ANR	806909	Parameter	bool graceful	79:48:2144:2156	806770	2	True				
ANR	806910	ParameterType	bool		806770	0					
ANR	806911	Identifier	graceful		806770	1					
ANR	806912	CFGEntryNode	ENTRY		806770		True				
ANR	806913	CFGExitNode	EXIT		806770		True				
ANR	806914	Symbol	response_ad . put		806770						
ANR	806915	Symbol	stream -> end_of_message		806770						
ANR	806916	Symbol	* rip		806770						
ANR	806917	Symbol	ATTR_START		806770						
ANR	806918	Symbol	rip -> deactivate_claim_forcibly		806770						
ANR	806919	Symbol	false		806770						
ANR	806920	Symbol	D_FULLDEBUG		806770						
ANR	806921	Symbol	rip -> curClaimIsClosing		806770						
ANR	806922	Symbol	graceful		806770						
ANR	806923	Symbol	stream		806770						
ANR	806924	Symbol	claim_is_closing		806770						
ANR	806925	Symbol	rip -> r_cur		806770						
ANR	806926	Symbol	rip -> deactivate_claim		806770						
ANR	806927	Symbol	rip		806770						
ANR	806928	Symbol	* stream		806770						
ANR	806929	Symbol	rval		806770						
ANR	806930	Symbol	response_ad		806770						
ANR	806931	DeclStmt									
ANR	806932	Decl							char	char *	id
ANR	806933	DeclStmt									
ANR	806934	Decl							Resource	Resource *	rip
ANR	806935	DeclStmt									
ANR	806936	Decl							ClaimIdParser	ClaimIdParser ( id )	idp
ANR	806937	DeclStmt									
ANR	806938	Decl							State	State	s
ANR	806939	DeclStmt									
ANR	806940	Decl							Activity	Activity	a
ANR	806941	DeclStmt									
ANR	806942	Decl							int	int	rval
ANR	806943	DeclStmt									
ANR	806944	Decl							char	char *	tmp
ANR	806945	DeclStmt									
ANR	806946	Decl							int	int	rval
ANR	806947	DeclStmt									
ANR	806948	Decl							char	char *	id
ANR	806949	DeclStmt									
ANR	806950	Decl							Resource	Resource *	rip
ANR	806951	DeclStmt									
ANR	806952	Decl							int	int	rval
ANR	806953	DeclStmt									
ANR	806954	Decl							ClaimIdParser	ClaimIdParser ( id )	idp
ANR	806955	DeclStmt									
ANR	806956	Decl							State	State	s
ANR	806957	DeclStmt									
ANR	806958	Decl							Claim	Claim *	claim
ANR	806959	DeclStmt									
ANR	806960	Decl							char	char *	id
ANR	806961	DeclStmt									
ANR	806962	Decl							Resource	Resource *	rip
ANR	806963	DeclStmt									
ANR	806964	Decl							ClaimIdParser	ClaimIdParser ( id )	idp
ANR	806965	DeclStmt									
ANR	806966	Decl							ClaimIdParser	ClaimIdParser ( id )	idp
ANR	806967	DeclStmt									
ANR	806968	Decl							State	State	s
ANR	806969	DeclStmt									
ANR	806970	Decl							char	char *	id
ANR	806971	DeclStmt									
ANR	806972	Decl							Resource	Resource *	rip
ANR	806973	DeclStmt									
ANR	806974	Decl							int	int	rval
ANR	806975	DeclStmt									
ANR	806976	Decl							ClaimIdParser	ClaimIdParser ( id )	idp
ANR	806977	DeclStmt									
ANR	806978	Decl							State	State	s
ANR	806979	DeclStmt									
ANR	806980	Decl							char	char *	id
ANR	806981	DeclStmt									
ANR	806982	Decl							Resource	Resource *	rip
ANR	806983	DeclStmt									
ANR	806984	Decl							int	int	rval
ANR	806985	DeclStmt									
ANR	806986	Decl							ClaimIdParser	ClaimIdParser ( id )	idp
ANR	806987	DeclStmt									
ANR	806988	Decl							State	State	s
ANR	806989	DeclStmt									
ANR	806990	Decl							char	char *	name
ANR	806991	DeclStmt									
ANR	806992	Decl							Resource	Resource *	rip
ANR	806993	DeclStmt									
ANR	806994	Decl							State	State	s
ANR	806995	DeclStmt									
ANR	806996	Decl							char	char *	id
ANR	806997	DeclStmt									
ANR	806998	Decl							Resource	Resource *	rip
ANR	806999	DeclStmt									
ANR	807000	Decl							int	int	rval
ANR	807001	DeclStmt									
ANR	807002	Decl							ClaimIdParser	ClaimIdParser ( id )	idp
ANR	807003	DeclStmt									
ANR	807004	Decl							State	State	s
ANR	807005	DeclStmt									
ANR	807006	Decl							int	int	pid
ANR	807007	DeclStmt									
ANR	807008	Decl							Claim	Claim *	claim
ANR	807009	DeclStmt									
ANR	807010	Decl							ClassAd	ClassAd *	cp
ANR	807011	DeclStmt									
ANR	807012	Decl							ClassAd	ClassAd	queryAd
ANR	807013	DeclStmt									
ANR	807014	Decl							ClassAd	ClassAd *	ad
ANR	807015	DeclStmt									
ANR	807016	Decl							ClassAdList	ClassAdList	ads
ANR	807017	DeclStmt									
ANR	807018	Decl							int	int	more
ANR	807019	Decl							int	int	num_ads
ANR	807020	DeclStmt									
ANR	807021	Decl							MyString	MyString	stats_config
ANR	807022	DeclStmt									
ANR	807023	Decl							int	int	dc_publish_flags
ANR	807024	DeclStmt									
ANR	807025	Decl							char	char *	raddr
ANR	807026	DeclStmt									
ANR	807027	Decl							int	int	permission
ANR	807028	DeclStmt									
ANR	807029	Decl							char	char *	value
ANR	807030	DeclStmt									
ANR	807031	Decl							int	int	starter_pid
ANR	807032	DeclStmt									
ANR	807033	Decl							int	int	vm_pid
ANR	807034	DeclStmt									
ANR	807035	Decl							ReliSock	ReliSock *	sock
ANR	807036	DeclStmt									
ANR	807037	Decl							char	char *	id
ANR	807038	DeclStmt									
ANR	807039	Decl							Claim	Claim *	claim
ANR	807040	DeclStmt									
ANR	807041	Decl							Resource	Resource *	rip
ANR	807042	DeclStmt									
ANR	807043	Decl							MyString	MyString	proxy_file
ANR	807044	DeclStmt									
ANR	807045	Decl							char	char *	glexec_user_dir
ANR	807046	DeclStmt									
ANR	807047	Decl							char	char *	proxy_file_tmp
ANR	807048	DeclStmt									
ANR	807049	Decl							int	int	fd
ANR	807050	DeclStmt									
ANR	807051	Decl							int	int	use_delegation
ANR	807052	DeclStmt									
ANR	807053	Decl							int	int	rv
ANR	807054	DeclStmt									
ANR	807055	Decl							filesize_t	filesize_t	dont_care
ANR	807056	DeclStmt									
ANR	807057	Decl							char	char *	old_proxy
ANR	807058	Function	abort_claim	1039:0:25356:26776							
ANR	807059	FunctionDef	abort_claim (Resource * rip)		807058	0					
ANR	807060	CompoundStatement		1041:0:25389:26776	807058	0					
ANR	807061	SwitchStatement	switch ( rip -> state ( ) )		807058	0					
ANR	807062	Condition	rip -> state ( )	1042:9:25400:25411	807058	0	True				
ANR	807063	CallExpression	rip -> state ( )		807058	0					
ANR	807064	Callee	rip -> state		807058	0					
ANR	807065	PtrMemberAccess	rip -> state		807058	0					
ANR	807066	Identifier	rip		807058	0					
ANR	807067	Identifier	state		807058	1					
ANR	807068	ArgumentList			807058	1					
ANR	807069	CompoundStatement		2:24:25:25	807058	1					
ANR	807070	Label	case claimed_state :	1043:1:25418:25436	807058	0	True				
ANR	807071	Identifier	claimed_state		807058	0					
ANR	807072	IfStatement	if ( rip -> r_pre_pre )		807058	1					
ANR	807073	Condition	rip -> r_pre_pre	1044:6:25444:25457	807058	0	True				
ANR	807074	PtrMemberAccess	rip -> r_pre_pre		807058	0					
ANR	807075	Identifier	rip		807058	0					
ANR	807076	Identifier	r_pre_pre		807058	1					
ANR	807077	CompoundStatement		4:22:70:70	807058	1					
ANR	807078	ExpressionStatement	rip -> removeClaim ( rip -> r_pre_pre )	1045:3:25465:25499	807058	0	True				
ANR	807079	CallExpression	rip -> removeClaim ( rip -> r_pre_pre )		807058	0					
ANR	807080	Callee	rip -> removeClaim		807058	0					
ANR	807081	PtrMemberAccess	rip -> removeClaim		807058	0					
ANR	807082	Identifier	rip		807058	0					
ANR	807083	Identifier	removeClaim		807058	1					
ANR	807084	ArgumentList	rip -> r_pre_pre		807058	1					
ANR	807085	Argument	rip -> r_pre_pre		807058	0					
ANR	807086	PtrMemberAccess	rip -> r_pre_pre		807058	0					
ANR	807087	Identifier	rip		807058	0					
ANR	807088	Identifier	r_pre_pre		807058	1					
ANR	807089	ElseStatement	else		807058	0					
ANR	807090	CompoundStatement		7:7:122:122	807058	0					
ANR	807091	ExpressionStatement	rip -> removeClaim ( rip -> r_pre )	1048:3:25517:25547	807058	0	True				
ANR	807092	CallExpression	rip -> removeClaim ( rip -> r_pre )		807058	0					
ANR	807093	Callee	rip -> removeClaim		807058	0					
ANR	807094	PtrMemberAccess	rip -> removeClaim		807058	0					
ANR	807095	Identifier	rip		807058	0					
ANR	807096	Identifier	removeClaim		807058	1					
ANR	807097	ArgumentList	rip -> r_pre		807058	1					
ANR	807098	Argument	rip -> r_pre		807058	0					
ANR	807099	PtrMemberAccess	rip -> r_pre		807058	0					
ANR	807100	Identifier	rip		807058	0					
ANR	807101	Identifier	r_pre		807058	1					
ANR	807102	BreakStatement	break ;	1050:2:25555:25560	807058	2	True				
ANR	807103	Label	case owner_state :	1052:1:25564:25580	807058	3	True				
ANR	807104	Identifier	owner_state		807058	0					
ANR	807105	BreakStatement	break ;	1054:2:25630:25635	807058	4	True				
ANR	807106	Label	case backfill_state :	1057:1:25657:25676	807058	5	True				
ANR	807107	Identifier	backfill_state		807058	0					
ANR	807108	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Claiming protocol failed\\n"" )"	1059:2:25749:25803	807058	6	True				
ANR	807109	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Claiming protocol failed\\n"" )"		807058	0					
ANR	807110	Callee	rip -> dprintf		807058	0					
ANR	807111	PtrMemberAccess	rip -> dprintf		807058	0					
ANR	807112	Identifier	rip		807058	0					
ANR	807113	Identifier	dprintf		807058	1					
ANR	807114	ArgumentList	D_ALWAYS		807058	1					
ANR	807115	Argument	D_ALWAYS		807058	0					
ANR	807116	Identifier	D_ALWAYS		807058	0					
ANR	807117	Argument	"""Claiming protocol failed\\n"""		807058	1					
ANR	807118	PrimaryExpression	"""Claiming protocol failed\\n"""		807058	0					
ANR	807119	IfStatement	if ( rip -> destination_state ( ) == matched_state )		807058	7					
ANR	807120	Condition	rip -> destination_state ( ) == matched_state	1060:6:25811:25851	807058	0	True				
ANR	807121	EqualityExpression	rip -> destination_state ( ) == matched_state		807058	0		==			
ANR	807122	CallExpression	rip -> destination_state ( )		807058	0					
ANR	807123	Callee	rip -> destination_state		807058	0					
ANR	807124	PtrMemberAccess	rip -> destination_state		807058	0					
ANR	807125	Identifier	rip		807058	0					
ANR	807126	Identifier	destination_state		807058	1					
ANR	807127	ArgumentList			807058	1					
ANR	807128	Identifier	matched_state		807058	1					
ANR	807129	CompoundStatement		20:50:465:465	807058	1					
ANR	807130	ExpressionStatement	rip -> set_destination_state ( owner_state )	1068:3:26170:26211	807058	0	True				
ANR	807131	CallExpression	rip -> set_destination_state ( owner_state )		807058	0					
ANR	807132	Callee	rip -> set_destination_state		807058	0					
ANR	807133	PtrMemberAccess	rip -> set_destination_state		807058	0					
ANR	807134	Identifier	rip		807058	0					
ANR	807135	Identifier	set_destination_state		807058	1					
ANR	807136	ArgumentList	owner_state		807058	1					
ANR	807137	Argument	owner_state		807058	0					
ANR	807138	Identifier	owner_state		807058	0					
ANR	807139	ElseStatement	else		807058	0					
ANR	807140	CompoundStatement		29:9:832:832	807058	0					
ANR	807141	ExpressionStatement	rip -> removeClaim ( rip -> r_cur )	1076:3:26469:26499	807058	0	True				
ANR	807142	CallExpression	rip -> removeClaim ( rip -> r_cur )		807058	0					
ANR	807143	Callee	rip -> removeClaim		807058	0					
ANR	807144	PtrMemberAccess	rip -> removeClaim		807058	0					
ANR	807145	Identifier	rip		807058	0					
ANR	807146	Identifier	removeClaim		807058	1					
ANR	807147	ArgumentList	rip -> r_cur		807058	1					
ANR	807148	Argument	rip -> r_cur		807058	0					
ANR	807149	PtrMemberAccess	rip -> r_cur		807058	0					
ANR	807150	Identifier	rip		807058	0					
ANR	807151	Identifier	r_cur		807058	1					
ANR	807152	ReturnStatement	return FALSE ;	1078:2:26507:26519	807058	8	True				
ANR	807153	Identifier	FALSE		807058	0					
ANR	807154	BreakStatement	break ;	1079:2:26523:26528	807058	9	True				
ANR	807155	Label	default :	1082:1:26559:26566	807058	10	True				
ANR	807156	Identifier	default		807058	0					
ANR	807157	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""State change: claiming protocol failed\\n"" )"	1083:2:26570:26638	807058	11	True				
ANR	807158	CallExpression	"rip -> dprintf ( D_ALWAYS , ""State change: claiming protocol failed\\n"" )"		807058	0					
ANR	807159	Callee	rip -> dprintf		807058	0					
ANR	807160	PtrMemberAccess	rip -> dprintf		807058	0					
ANR	807161	Identifier	rip		807058	0					
ANR	807162	Identifier	dprintf		807058	1					
ANR	807163	ArgumentList	D_ALWAYS		807058	1					
ANR	807164	Argument	D_ALWAYS		807058	0					
ANR	807165	Identifier	D_ALWAYS		807058	0					
ANR	807166	Argument	"""State change: claiming protocol failed\\n"""		807058	1					
ANR	807167	PrimaryExpression	"""State change: claiming protocol failed\\n"""		807058	0					
ANR	807168	ExpressionStatement	rip -> change_state ( owner_state )	1084:2:26642:26674	807058	12	True				
ANR	807169	CallExpression	rip -> change_state ( owner_state )		807058	0					
ANR	807170	Callee	rip -> change_state		807058	0					
ANR	807171	PtrMemberAccess	rip -> change_state		807058	0					
ANR	807172	Identifier	rip		807058	0					
ANR	807173	Identifier	change_state		807058	1					
ANR	807174	ArgumentList	owner_state		807058	1					
ANR	807175	Argument	owner_state		807058	0					
ANR	807176	Identifier	owner_state		807058	0					
ANR	807177	ReturnStatement	return FALSE ;	1085:2:26678:26690	807058	13	True				
ANR	807178	Identifier	FALSE		807058	0					
ANR	807179	BreakStatement	break ;	1086:2:26694:26699	807058	14	True				
ANR	807180	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Claiming protocol failed\\n"" )"	1088:1:26705:26759	807058	1	True				
ANR	807181	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Claiming protocol failed\\n"" )"		807058	0					
ANR	807182	Callee	rip -> dprintf		807058	0					
ANR	807183	PtrMemberAccess	rip -> dprintf		807058	0					
ANR	807184	Identifier	rip		807058	0					
ANR	807185	Identifier	dprintf		807058	1					
ANR	807186	ArgumentList	D_ALWAYS		807058	1					
ANR	807187	Argument	D_ALWAYS		807058	0					
ANR	807188	Identifier	D_ALWAYS		807058	0					
ANR	807189	Argument	"""Claiming protocol failed\\n"""		807058	1					
ANR	807190	PrimaryExpression	"""Claiming protocol failed\\n"""		807058	0					
ANR	807191	ReturnStatement	return FALSE ;	1089:1:26762:26774	807058	2	True				
ANR	807192	Identifier	FALSE		807058	0					
ANR	807193	ReturnType	int		807058	1					
ANR	807194	Identifier	abort_claim		807058	2					
ANR	807195	ParameterList	Resource * rip		807058	3					
ANR	807196	Parameter	Resource * rip	1040:13:25373:25385	807058	0	True				
ANR	807197	ParameterType	Resource *		807058	0					
ANR	807198	Identifier	rip		807058	1					
ANR	807199	CFGEntryNode	ENTRY		807058		True				
ANR	807200	CFGExitNode	EXIT		807058		True				
ANR	807201	Symbol	* rip		807058						
ANR	807202	Symbol	rip -> r_pre		807058						
ANR	807203	Symbol	rip -> destination_state		807058						
ANR	807204	Symbol	rip -> r_cur		807058						
ANR	807205	Symbol	rip		807058						
ANR	807206	Symbol	D_ALWAYS		807058						
ANR	807207	Symbol	FALSE		807058						
ANR	807208	Symbol	rip -> state		807058						
ANR	807209	Symbol	owner_state		807058						
ANR	807210	Symbol	rip -> r_pre_pre		807058						
ANR	807211	Symbol	matched_state		807058						
ANR	807212	Function	request_claim	1093:0:26780:38494							
ANR	807213	FunctionDef	"request_claim (Resource * rip , Claim * claim , char * id , Stream * stream)"		807212	0					
ANR	807214	CompoundStatement		1095:0:26855:38494	807212	0					
ANR	807215	Statement	ClassAd	1098:1:26895:26901	807212	0	True				
ANR	807216	Statement	*	1098:9:26903:26903	807212	1	True				
ANR	807217	Statement	req_classad	1098:10:26904:26914	807212	2	True				
ANR	807218	Statement	=	1098:22:26916:26916	807212	3	True				
ANR	807219	Statement	new	1098:24:26918:26920	807212	4	True				
ANR	807220	ExpressionStatement	"ClassAd , * mach_classad = rip -> r_classad"	1098:28:26922:26961	807212	5	True				
ANR	807221	Expression	"ClassAd , * mach_classad = rip -> r_classad"		807212	0					
ANR	807222	Identifier	ClassAd		807212	0					
ANR	807223	AssignmentExpression	* mach_classad = rip -> r_classad		807212	1		=			
ANR	807224	UnaryOperationExpression	* mach_classad		807212	0					
ANR	807225	UnaryOperator	*		807212	0					
ANR	807226	Identifier	mach_classad		807212	1					
ANR	807227	PtrMemberAccess	rip -> r_classad		807212	1					
ANR	807228	Identifier	rip		807212	0					
ANR	807229	Identifier	r_classad		807212	1					
ANR	807230	IdentifierDeclStatement	"int cmd , mach_requirements = 1 ;"	1099:1:26964:26994	807212	6	True				
ANR	807231	IdentifierDecl	cmd		807212	0					
ANR	807232	IdentifierDeclType	int		807212	0					
ANR	807233	Identifier	cmd		807212	1					
ANR	807234	IdentifierDecl	mach_requirements = 1		807212	1					
ANR	807235	IdentifierDeclType	int		807212	0					
ANR	807236	Identifier	mach_requirements		807212	1					
ANR	807237	AssignmentExpression	mach_requirements = 1		807212	2		=			
ANR	807238	Identifier	mach_requirements		807212	0					
ANR	807239	PrimaryExpression	1		807212	1					
ANR	807240	IdentifierDeclStatement	float rank = 0 ;	1100:1:26997:27011	807212	7	True				
ANR	807241	IdentifierDecl	rank = 0		807212	0					
ANR	807242	IdentifierDeclType	float		807212	0					
ANR	807243	Identifier	rank		807212	1					
ANR	807244	AssignmentExpression	rank = 0		807212	2		=			
ANR	807245	Identifier	rank		807212	0					
ANR	807246	PrimaryExpression	0		807212	1					
ANR	807247	IdentifierDeclStatement	float oldrank = 0 ;	1101:1:27014:27031	807212	8	True				
ANR	807248	IdentifierDecl	oldrank = 0		807212	0					
ANR	807249	IdentifierDeclType	float		807212	0					
ANR	807250	Identifier	oldrank		807212	1					
ANR	807251	AssignmentExpression	oldrank = 0		807212	2		=			
ANR	807252	Identifier	oldrank		807212	0					
ANR	807253	PrimaryExpression	0		807212	1					
ANR	807254	IdentifierDeclStatement	char * client_addr = NULL ;	1102:1:27034:27058	807212	9	True				
ANR	807255	IdentifierDecl	* client_addr = NULL		807212	0					
ANR	807256	IdentifierDeclType	char *		807212	0					
ANR	807257	Identifier	client_addr		807212	1					
ANR	807258	AssignmentExpression	* client_addr = NULL		807212	2		=			
ANR	807259	Identifier	NULL		807212	0					
ANR	807260	Identifier	NULL		807212	1					
ANR	807261	IdentifierDeclStatement	int interval ;	1103:1:27061:27073	807212	10	True				
ANR	807262	IdentifierDecl	interval		807212	0					
ANR	807263	IdentifierDeclType	int		807212	0					
ANR	807264	Identifier	interval		807212	1					
ANR	807265	IdentifierDeclStatement	ClaimIdParser idp ( id ) ;	1104:1:27076:27097	807212	11	True				
ANR	807266	IdentifierDecl	idp ( id )		807212	0					
ANR	807267	IdentifierDeclType	ClaimIdParser		807212	0					
ANR	807268	Identifier	idp		807212	1					
ANR	807269	Identifier	id		807212	2					
ANR	807270	IdentifierDeclStatement	bool new_dynamic_slot = false ;	1107:1:27132:27161	807212	12	True				
ANR	807271	IdentifierDecl	new_dynamic_slot = false		807212	0					
ANR	807272	IdentifierDeclType	bool		807212	0					
ANR	807273	Identifier	new_dynamic_slot		807212	1					
ANR	807274	AssignmentExpression	new_dynamic_slot = false		807212	2		=			
ANR	807275	Identifier	false		807212	0					
ANR	807276	Identifier	false		807212	1					
ANR	807277	IdentifierDeclStatement	int return_code ;	1108:1:27164:27179	807212	13	True				
ANR	807278	IdentifierDecl	return_code		807212	0					
ANR	807279	IdentifierDeclType	int		807212	0					
ANR	807280	Identifier	return_code		807212	1					
ANR	807281	IfStatement	if ( ! rip -> r_cur )		807212	14					
ANR	807282	Condition	! rip -> r_cur	1110:5:27187:27197	807212	0	True				
ANR	807283	UnaryOperationExpression	! rip -> r_cur		807212	0					
ANR	807284	UnaryOperator	!		807212	0					
ANR	807285	PtrMemberAccess	rip -> r_cur		807212	1					
ANR	807286	Identifier	rip		807212	0					
ANR	807287	Identifier	r_cur		807212	1					
ANR	807288	CompoundStatement		16:19:345:345	807212	1					
ANR	807289	ExpressionStatement	"EXCEPT ( ""request_claim: no current claim object."" )"	1111:2:27205:27256	807212	0	True				
ANR	807290	CallExpression	"EXCEPT ( ""request_claim: no current claim object."" )"		807212	0					
ANR	807291	Callee	EXCEPT		807212	0					
ANR	807292	Identifier	EXCEPT		807212	0					
ANR	807293	ArgumentList	"""request_claim: no current claim object."""		807212	1					
ANR	807294	Argument	"""request_claim: no current claim object."""		807212	0					
ANR	807295	PrimaryExpression	"""request_claim: no current claim object."""		807212	0					
ANR	807296	ExpressionStatement	claim -> cancel_match_timer ( )	1124:1:27733:27760	807212	15	True				
ANR	807297	CallExpression	claim -> cancel_match_timer ( )		807212	0					
ANR	807298	Callee	claim -> cancel_match_timer		807212	0					
ANR	807299	PtrMemberAccess	claim -> cancel_match_timer		807212	0					
ANR	807300	Identifier	claim		807212	0					
ANR	807301	Identifier	cancel_match_timer		807212	1					
ANR	807302	ArgumentList			807212	1					
ANR	807303	IfStatement	if ( ! req_classad -> initFromStream ( * stream ) )		807212	16					
ANR	807304	Condition	! req_classad -> initFromStream ( * stream )	1127:5:27805:27841	807212	0	True				
ANR	807305	UnaryOperationExpression	! req_classad -> initFromStream ( * stream )		807212	0					
ANR	807306	UnaryOperator	!		807212	0					
ANR	807307	CallExpression	req_classad -> initFromStream ( * stream )		807212	1					
ANR	807308	Callee	req_classad -> initFromStream		807212	0					
ANR	807309	PtrMemberAccess	req_classad -> initFromStream		807212	0					
ANR	807310	Identifier	req_classad		807212	0					
ANR	807311	Identifier	initFromStream		807212	1					
ANR	807312	ArgumentList	* stream		807212	1					
ANR	807313	Argument	* stream		807212	0					
ANR	807314	UnaryOperationExpression	* stream		807212	0					
ANR	807315	UnaryOperator	*		807212	0					
ANR	807316	Identifier	stream		807212	1					
ANR	807317	CompoundStatement		33:45:989:989	807212	1					
ANR	807318	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Can't receive classad from schedd\\n"" )"	1128:2:27849:27912	807212	0	True				
ANR	807319	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Can't receive classad from schedd\\n"" )"		807212	0					
ANR	807320	Callee	rip -> dprintf		807212	0					
ANR	807321	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	807322	Identifier	rip		807212	0					
ANR	807323	Identifier	dprintf		807212	1					
ANR	807324	ArgumentList	D_ALWAYS		807212	1					
ANR	807325	Argument	D_ALWAYS		807212	0					
ANR	807326	Identifier	D_ALWAYS		807212	0					
ANR	807327	Argument	"""Can't receive classad from schedd\\n"""		807212	1					
ANR	807328	PrimaryExpression	"""Can't receive classad from schedd\\n"""		807212	0					
ANR	807329	ExpressionStatement	ABORT	1129:2:27916:27921	807212	1	True				
ANR	807330	Identifier	ABORT		807212	0					
ANR	807331	ExpressionStatement	req_classad -> AddTargetRefs ( TargetMachineAttrs )	1133:1:27960:28008	807212	17	True				
ANR	807332	CallExpression	req_classad -> AddTargetRefs ( TargetMachineAttrs )		807212	0					
ANR	807333	Callee	req_classad -> AddTargetRefs		807212	0					
ANR	807334	PtrMemberAccess	req_classad -> AddTargetRefs		807212	0					
ANR	807335	Identifier	req_classad		807212	0					
ANR	807336	Identifier	AddTargetRefs		807212	1					
ANR	807337	ArgumentList	TargetMachineAttrs		807212	1					
ANR	807338	Argument	TargetMachineAttrs		807212	0					
ANR	807339	Identifier	TargetMachineAttrs		807212	0					
ANR	807340	IfStatement	if ( stream -> code ( client_addr ) )		807212	18					
ANR	807341	Condition	stream -> code ( client_addr )	1140:6:28282:28306	807212	0	True				
ANR	807342	CallExpression	stream -> code ( client_addr )		807212	0					
ANR	807343	Callee	stream -> code		807212	0					
ANR	807344	PtrMemberAccess	stream -> code		807212	0					
ANR	807345	Identifier	stream		807212	0					
ANR	807346	Identifier	code		807212	1					
ANR	807347	ArgumentList	client_addr		807212	1					
ANR	807348	Argument	client_addr		807212	0					
ANR	807349	Identifier	client_addr		807212	0					
ANR	807350	CompoundStatement		46:34:1454:1454	807212	1					
ANR	807351	ExpressionStatement	"rip -> dprintf ( D_FULLDEBUG , ""Schedd addr = %s\\n"" , client_addr )"	1142:2:28386:28448	807212	0	True				
ANR	807352	CallExpression	"rip -> dprintf ( D_FULLDEBUG , ""Schedd addr = %s\\n"" , client_addr )"		807212	0					
ANR	807353	Callee	rip -> dprintf		807212	0					
ANR	807354	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	807355	Identifier	rip		807212	0					
ANR	807356	Identifier	dprintf		807212	1					
ANR	807357	ArgumentList	D_FULLDEBUG		807212	1					
ANR	807358	Argument	D_FULLDEBUG		807212	0					
ANR	807359	Identifier	D_FULLDEBUG		807212	0					
ANR	807360	Argument	"""Schedd addr = %s\\n"""		807212	1					
ANR	807361	PrimaryExpression	"""Schedd addr = %s\\n"""		807212	0					
ANR	807362	Argument	client_addr		807212	2					
ANR	807363	Identifier	client_addr		807212	0					
ANR	807364	IfStatement	if ( ! stream -> code ( interval ) )		807212	1					
ANR	807365	Condition	! stream -> code ( interval )	1143:6:28456:28478	807212	0	True				
ANR	807366	UnaryOperationExpression	! stream -> code ( interval )		807212	0					
ANR	807367	UnaryOperator	!		807212	0					
ANR	807368	CallExpression	stream -> code ( interval )		807212	1					
ANR	807369	Callee	stream -> code		807212	0					
ANR	807370	PtrMemberAccess	stream -> code		807212	0					
ANR	807371	Identifier	stream		807212	0					
ANR	807372	Identifier	code		807212	1					
ANR	807373	ArgumentList	interval		807212	1					
ANR	807374	Argument	interval		807212	0					
ANR	807375	Identifier	interval		807212	0					
ANR	807376	CompoundStatement		49:32:1626:1626	807212	1					
ANR	807377	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Can't receive alive interval\\n"" )"	1144:3:28487:28545	807212	0	True				
ANR	807378	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Can't receive alive interval\\n"" )"		807212	0					
ANR	807379	Callee	rip -> dprintf		807212	0					
ANR	807380	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	807381	Identifier	rip		807212	0					
ANR	807382	Identifier	dprintf		807212	1					
ANR	807383	ArgumentList	D_ALWAYS		807212	1					
ANR	807384	Argument	D_ALWAYS		807212	0					
ANR	807385	Identifier	D_ALWAYS		807212	0					
ANR	807386	Argument	"""Can't receive alive interval\\n"""		807212	1					
ANR	807387	PrimaryExpression	"""Can't receive alive interval\\n"""		807212	0					
ANR	807388	ExpressionStatement	ABORT	1145:3:28550:28555	807212	1	True				
ANR	807389	Identifier	ABORT		807212	0					
ANR	807390	ElseStatement	else		807212	0					
ANR	807391	CompoundStatement		52:9:1710:1710	807212	0					
ANR	807392	ExpressionStatement	"rip -> dprintf ( D_FULLDEBUG , ""Alive interval = %d\\n"" , interval )"	1147:3:28571:28633	807212	0	True				
ANR	807393	CallExpression	"rip -> dprintf ( D_FULLDEBUG , ""Alive interval = %d\\n"" , interval )"		807212	0					
ANR	807394	Callee	rip -> dprintf		807212	0					
ANR	807395	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	807396	Identifier	rip		807212	0					
ANR	807397	Identifier	dprintf		807212	1					
ANR	807398	ArgumentList	D_FULLDEBUG		807212	1					
ANR	807399	Argument	D_FULLDEBUG		807212	0					
ANR	807400	Identifier	D_FULLDEBUG		807212	0					
ANR	807401	Argument	"""Alive interval = %d\\n"""		807212	1					
ANR	807402	PrimaryExpression	"""Alive interval = %d\\n"""		807212	0					
ANR	807403	Argument	interval		807212	2					
ANR	807404	Identifier	interval		807212	0					
ANR	807405	ExpressionStatement	claim -> setaliveint ( interval )	1150:2:28698:28728	807212	2	True				
ANR	807406	CallExpression	claim -> setaliveint ( interval )		807212	0					
ANR	807407	Callee	claim -> setaliveint		807212	0					
ANR	807408	PtrMemberAccess	claim -> setaliveint		807212	0					
ANR	807409	Identifier	claim		807212	0					
ANR	807410	Identifier	setaliveint		807212	1					
ANR	807411	ArgumentList	interval		807212	1					
ANR	807412	Argument	interval		807212	0					
ANR	807413	Identifier	interval		807212	0					
ANR	807414	ExpressionStatement	claim -> client ( ) -> setaddr ( client_addr )	1151:2:28732:28771	807212	3	True				
ANR	807415	CallExpression	claim -> client ( ) -> setaddr ( client_addr )		807212	0					
ANR	807416	Callee	claim -> client ( ) -> setaddr		807212	0					
ANR	807417	PtrMemberAccess	claim -> client ( ) -> setaddr		807212	0					
ANR	807418	CallExpression	claim -> client ( )		807212	0					
ANR	807419	Callee	claim -> client		807212	0					
ANR	807420	PtrMemberAccess	claim -> client		807212	0					
ANR	807421	Identifier	claim		807212	0					
ANR	807422	Identifier	client		807212	1					
ANR	807423	ArgumentList			807212	1					
ANR	807424	Identifier	setaddr		807212	1					
ANR	807425	ArgumentList	client_addr		807212	1					
ANR	807426	Argument	client_addr		807212	0					
ANR	807427	Identifier	client_addr		807212	0					
ANR	807428	ExpressionStatement	free ( client_addr )	1152:2:28775:28794	807212	4	True				
ANR	807429	CallExpression	free ( client_addr )		807212	0					
ANR	807430	Callee	free		807212	0					
ANR	807431	Identifier	free		807212	0					
ANR	807432	ArgumentList	client_addr		807212	1					
ANR	807433	Argument	client_addr		807212	0					
ANR	807434	Identifier	client_addr		807212	0					
ANR	807435	ExpressionStatement	client_addr = NULL	1153:2:28798:28816	807212	5	True				
ANR	807436	AssignmentExpression	client_addr = NULL		807212	0		=			
ANR	807437	Identifier	client_addr		807212	0					
ANR	807438	Identifier	NULL		807212	1					
ANR	807439	ElseStatement	else		807212	0					
ANR	807440	CompoundStatement		60:8:1970:1970	807212	0					
ANR	807441	ExpressionStatement	"rip -> dprintf ( D_FULLDEBUG , ""Schedd using pre-v6.1.11 claim protocol\\n"" )"	1155:2:28830:28900	807212	0	True				
ANR	807442	CallExpression	"rip -> dprintf ( D_FULLDEBUG , ""Schedd using pre-v6.1.11 claim protocol\\n"" )"		807212	0					
ANR	807443	Callee	rip -> dprintf		807212	0					
ANR	807444	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	807445	Identifier	rip		807212	0					
ANR	807446	Identifier	dprintf		807212	1					
ANR	807447	ArgumentList	D_FULLDEBUG		807212	1					
ANR	807448	Argument	D_FULLDEBUG		807212	0					
ANR	807449	Identifier	D_FULLDEBUG		807212	0					
ANR	807450	Argument	"""Schedd using pre-v6.1.11 claim protocol\\n"""		807212	1					
ANR	807451	PrimaryExpression	"""Schedd using pre-v6.1.11 claim protocol\\n"""		807212	0					
ANR	807452	IfStatement	if ( ! stream -> end_of_message ( ) )		807212	19					
ANR	807453	Condition	! stream -> end_of_message ( )	1158:5:28911:28935	807212	0	True				
ANR	807454	UnaryOperationExpression	! stream -> end_of_message ( )		807212	0					
ANR	807455	UnaryOperator	!		807212	0					
ANR	807456	CallExpression	stream -> end_of_message ( )		807212	1					
ANR	807457	Callee	stream -> end_of_message		807212	0					
ANR	807458	PtrMemberAccess	stream -> end_of_message		807212	0					
ANR	807459	Identifier	stream		807212	0					
ANR	807460	Identifier	end_of_message		807212	1					
ANR	807461	ArgumentList			807212	1					
ANR	807462	CompoundStatement		64:33:2083:2083	807212	1					
ANR	807463	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Can't receive eom from schedd\\n"" )"	1159:2:28943:29002	807212	0	True				
ANR	807464	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Can't receive eom from schedd\\n"" )"		807212	0					
ANR	807465	Callee	rip -> dprintf		807212	0					
ANR	807466	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	807467	Identifier	rip		807212	0					
ANR	807468	Identifier	dprintf		807212	1					
ANR	807469	ArgumentList	D_ALWAYS		807212	1					
ANR	807470	Argument	D_ALWAYS		807212	0					
ANR	807471	Identifier	D_ALWAYS		807212	0					
ANR	807472	Argument	"""Can't receive eom from schedd\\n"""		807212	1					
ANR	807473	PrimaryExpression	"""Can't receive eom from schedd\\n"""		807212	0					
ANR	807474	ExpressionStatement	ABORT	1160:2:29006:29011	807212	1	True				
ANR	807475	Identifier	ABORT		807212	0					
ANR	807476	IfStatement	if ( match_timeout > 10 )		807212	20					
ANR	807477	Condition	match_timeout > 10	1170:6:29468:29485	807212	0	True				
ANR	807478	RelationalExpression	match_timeout > 10		807212	0		>			
ANR	807479	Identifier	match_timeout		807212	0					
ANR	807480	PrimaryExpression	10		807212	1					
ANR	807481	CompoundStatement		76:27:2633:2633	807212	1					
ANR	807482	ExpressionStatement	stream -> timeout ( match_timeout - 10 )	1171:2:29493:29530	807212	0	True				
ANR	807483	CallExpression	stream -> timeout ( match_timeout - 10 )		807212	0					
ANR	807484	Callee	stream -> timeout		807212	0					
ANR	807485	PtrMemberAccess	stream -> timeout		807212	0					
ANR	807486	Identifier	stream		807212	0					
ANR	807487	Identifier	timeout		807212	1					
ANR	807488	ArgumentList	match_timeout - 10		807212	1					
ANR	807489	Argument	match_timeout - 10		807212	0					
ANR	807490	AdditiveExpression	match_timeout - 10		807212	0		-			
ANR	807491	Identifier	match_timeout		807212	0					
ANR	807492	PrimaryExpression	10		807212	1					
ANR	807493	ExpressionStatement	"rip -> dprintf ( D_FULLDEBUG , ""Received ClaimId from schedd (%s)\\n"" , idp . publicClaimId ( ) )"	1174:1:29539:29632	807212	21	True				
ANR	807494	CallExpression	"rip -> dprintf ( D_FULLDEBUG , ""Received ClaimId from schedd (%s)\\n"" , idp . publicClaimId ( ) )"		807212	0					
ANR	807495	Callee	rip -> dprintf		807212	0					
ANR	807496	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	807497	Identifier	rip		807212	0					
ANR	807498	Identifier	dprintf		807212	1					
ANR	807499	ArgumentList	D_FULLDEBUG		807212	1					
ANR	807500	Argument	D_FULLDEBUG		807212	0					
ANR	807501	Identifier	D_FULLDEBUG		807212	0					
ANR	807502	Argument	"""Received ClaimId from schedd (%s)\\n"""		807212	1					
ANR	807503	PrimaryExpression	"""Received ClaimId from schedd (%s)\\n"""		807212	0					
ANR	807504	Argument	idp . publicClaimId ( )		807212	2					
ANR	807505	CallExpression	idp . publicClaimId ( )		807212	0					
ANR	807506	Callee	idp . publicClaimId		807212	0					
ANR	807507	MemberAccess	idp . publicClaimId		807212	0					
ANR	807508	Identifier	idp		807212	0					
ANR	807509	Identifier	publicClaimId		807212	1					
ANR	807510	ArgumentList			807212	1					
ANR	807511	IfStatement	if ( Resource :: PARTITIONABLE_SLOT == rip -> get_feature ( ) )		807212	22					
ANR	807512	Condition	Resource :: PARTITIONABLE_SLOT == rip -> get_feature ( )	1177:5:29640:29689	807212	0	True				
ANR	807513	EqualityExpression	Resource :: PARTITIONABLE_SLOT == rip -> get_feature ( )		807212	0		==			
ANR	807514	Identifier	Resource :: PARTITIONABLE_SLOT		807212	0					
ANR	807515	CallExpression	rip -> get_feature ( )		807212	1					
ANR	807516	Callee	rip -> get_feature		807212	0					
ANR	807517	PtrMemberAccess	rip -> get_feature		807212	0					
ANR	807518	Identifier	rip		807212	0					
ANR	807519	Identifier	get_feature		807212	1					
ANR	807520	ArgumentList			807212	1					
ANR	807521	CompoundStatement		88:2:2931:2953	807212	1					
ANR	807522	IdentifierDeclStatement	Resource * new_rip ;	1178:2:29697:29714	807212	0	True				
ANR	807523	IdentifierDecl	* new_rip		807212	0					
ANR	807524	IdentifierDeclType	Resource *		807212	0					
ANR	807525	Identifier	new_rip		807212	1					
ANR	807526	IdentifierDeclStatement	CpuAttributes * cpu_attrs ;	1179:2:29718:29742	807212	1	True				
ANR	807527	IdentifierDecl	* cpu_attrs		807212	0					
ANR	807528	IdentifierDeclType	CpuAttributes *		807212	0					
ANR	807529	Identifier	cpu_attrs		807212	1					
ANR	807530	IdentifierDeclStatement	MyString type ;	1180:2:29746:29759	807212	2	True				
ANR	807531	IdentifierDecl	type		807212	0					
ANR	807532	IdentifierDeclType	MyString		807212	0					
ANR	807533	Identifier	type		807212	1					
ANR	807534	IdentifierDeclStatement	StringList type_list ;	1181:2:29763:29783	807212	3	True				
ANR	807535	IdentifierDecl	type_list		807212	0					
ANR	807536	IdentifierDeclType	StringList		807212	0					
ANR	807537	Identifier	type_list		807212	1					
ANR	807538	IdentifierDeclStatement	"int cpus , memory , disk ;"	1182:2:29787:29809	807212	4	True				
ANR	807539	IdentifierDecl	cpus		807212	0					
ANR	807540	IdentifierDeclType	int		807212	0					
ANR	807541	Identifier	cpus		807212	1					
ANR	807542	IdentifierDecl	memory		807212	1					
ANR	807543	IdentifierDeclType	int		807212	0					
ANR	807544	Identifier	memory		807212	1					
ANR	807545	IdentifierDecl	disk		807212	2					
ANR	807546	IdentifierDeclType	int		807212	0					
ANR	807547	Identifier	disk		807212	1					
ANR	807548	ExpressionStatement	rip -> r_reqexp -> restore ( )	1190:2:30125:30149	807212	5	True				
ANR	807549	CallExpression	rip -> r_reqexp -> restore ( )		807212	0					
ANR	807550	Callee	rip -> r_reqexp -> restore		807212	0					
ANR	807551	PtrMemberAccess	rip -> r_reqexp -> restore		807212	0					
ANR	807552	PtrMemberAccess	rip -> r_reqexp		807212	0					
ANR	807553	Identifier	rip		807212	0					
ANR	807554	Identifier	r_reqexp		807212	1					
ANR	807555	Identifier	restore		807212	1					
ANR	807556	ArgumentList			807212	1					
ANR	807557	IfStatement	"if ( mach_classad -> EvalBool ( ATTR_REQUIREMENTS , req_classad , mach_requirements ) == 0 )"		807212	6					
ANR	807558	Condition	"mach_classad -> EvalBool ( ATTR_REQUIREMENTS , req_classad , mach_requirements ) == 0"	1191:6:30157:30246	807212	0	True				
ANR	807559	EqualityExpression	"mach_classad -> EvalBool ( ATTR_REQUIREMENTS , req_classad , mach_requirements ) == 0"		807212	0		==			
ANR	807560	CallExpression	"mach_classad -> EvalBool ( ATTR_REQUIREMENTS , req_classad , mach_requirements )"		807212	0					
ANR	807561	Callee	mach_classad -> EvalBool		807212	0					
ANR	807562	PtrMemberAccess	mach_classad -> EvalBool		807212	0					
ANR	807563	Identifier	mach_classad		807212	0					
ANR	807564	Identifier	EvalBool		807212	1					
ANR	807565	ArgumentList	ATTR_REQUIREMENTS		807212	1					
ANR	807566	Argument	ATTR_REQUIREMENTS		807212	0					
ANR	807567	Identifier	ATTR_REQUIREMENTS		807212	0					
ANR	807568	Argument	req_classad		807212	1					
ANR	807569	Identifier	req_classad		807212	0					
ANR	807570	Argument	mach_requirements		807212	2					
ANR	807571	Identifier	mach_requirements		807212	0					
ANR	807572	PrimaryExpression	0		807212	1					
ANR	807573	CompoundStatement		98:49:3394:3394	807212	1					
ANR	807574	ExpressionStatement	"rip -> dprintf ( D_FAILURE | D_ALWAYS , ""Machine requirements not satisfied.\\n"" )"	1193:3:30255:30339	807212	0	True				
ANR	807575	CallExpression	"rip -> dprintf ( D_FAILURE | D_ALWAYS , ""Machine requirements not satisfied.\\n"" )"		807212	0					
ANR	807576	Callee	rip -> dprintf		807212	0					
ANR	807577	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	807578	Identifier	rip		807212	0					
ANR	807579	Identifier	dprintf		807212	1					
ANR	807580	ArgumentList	D_FAILURE | D_ALWAYS		807212	1					
ANR	807581	Argument	D_FAILURE | D_ALWAYS		807212	0					
ANR	807582	InclusiveOrExpression	D_FAILURE | D_ALWAYS		807212	0		|			
ANR	807583	Identifier	D_FAILURE		807212	0					
ANR	807584	Identifier	D_ALWAYS		807212	1					
ANR	807585	Argument	"""Machine requirements not satisfied.\\n"""		807212	1					
ANR	807586	PrimaryExpression	"""Machine requirements not satisfied.\\n"""		807212	0					
ANR	807587	ExpressionStatement	refuse ( stream )	1195:3:30344:30360	807212	1	True				
ANR	807588	CallExpression	refuse ( stream )		807212	0					
ANR	807589	Callee	refuse		807212	0					
ANR	807590	Identifier	refuse		807212	0					
ANR	807591	ArgumentList	stream		807212	1					
ANR	807592	Argument	stream		807212	0					
ANR	807593	Identifier	stream		807212	0					
ANR	807594	ExpressionStatement	ABORT	1196:3:30365:30370	807212	2	True				
ANR	807595	Identifier	ABORT		807212	0					
ANR	807596	IfStatement	"if ( ! req_classad -> EvalInteger ( ATTR_REQUEST_CPUS , mach_classad , cpus ) )"		807212	7					
ANR	807597	Condition	"! req_classad -> EvalInteger ( ATTR_REQUEST_CPUS , mach_classad , cpus )"	1199:6:30383:30448	807212	0	True				
ANR	807598	UnaryOperationExpression	"! req_classad -> EvalInteger ( ATTR_REQUEST_CPUS , mach_classad , cpus )"		807212	0					
ANR	807599	UnaryOperator	!		807212	0					
ANR	807600	CallExpression	"req_classad -> EvalInteger ( ATTR_REQUEST_CPUS , mach_classad , cpus )"		807212	1					
ANR	807601	Callee	req_classad -> EvalInteger		807212	0					
ANR	807602	PtrMemberAccess	req_classad -> EvalInteger		807212	0					
ANR	807603	Identifier	req_classad		807212	0					
ANR	807604	Identifier	EvalInteger		807212	1					
ANR	807605	ArgumentList	ATTR_REQUEST_CPUS		807212	1					
ANR	807606	Argument	ATTR_REQUEST_CPUS		807212	0					
ANR	807607	Identifier	ATTR_REQUEST_CPUS		807212	0					
ANR	807608	Argument	mach_classad		807212	1					
ANR	807609	Identifier	mach_classad		807212	0					
ANR	807610	Argument	cpus		807212	2					
ANR	807611	Identifier	cpus		807212	0					
ANR	807612	CompoundStatement		105:75:3596:3596	807212	1					
ANR	807613	ExpressionStatement	cpus = 1	1200:3:30457:30465	807212	0	True				
ANR	807614	AssignmentExpression	cpus = 1		807212	0		=			
ANR	807615	Identifier	cpus		807212	0					
ANR	807616	PrimaryExpression	1		807212	1					
ANR	807617	ExpressionStatement	"type . sprintf_cat ( ""cpus=%d "" , cpus )"	1202:2:30505:30541	807212	8	True				
ANR	807618	CallExpression	"type . sprintf_cat ( ""cpus=%d "" , cpus )"		807212	0					
ANR	807619	Callee	type . sprintf_cat		807212	0					
ANR	807620	MemberAccess	type . sprintf_cat		807212	0					
ANR	807621	Identifier	type		807212	0					
ANR	807622	Identifier	sprintf_cat		807212	1					
ANR	807623	ArgumentList	"""cpus=%d """		807212	1					
ANR	807624	Argument	"""cpus=%d """		807212	0					
ANR	807625	PrimaryExpression	"""cpus=%d """		807212	0					
ANR	807626	Argument	cpus		807212	1					
ANR	807627	Identifier	cpus		807212	0					
ANR	807628	IfStatement	"if ( req_classad -> EvalInteger ( ATTR_REQUEST_MEMORY , mach_classad , memory ) )"		807212	9					
ANR	807629	Condition	"req_classad -> EvalInteger ( ATTR_REQUEST_MEMORY , mach_classad , memory )"	1204:6:30550:30618	807212	0	True				
ANR	807630	CallExpression	"req_classad -> EvalInteger ( ATTR_REQUEST_MEMORY , mach_classad , memory )"		807212	0					
ANR	807631	Callee	req_classad -> EvalInteger		807212	0					
ANR	807632	PtrMemberAccess	req_classad -> EvalInteger		807212	0					
ANR	807633	Identifier	req_classad		807212	0					
ANR	807634	Identifier	EvalInteger		807212	1					
ANR	807635	ArgumentList	ATTR_REQUEST_MEMORY		807212	1					
ANR	807636	Argument	ATTR_REQUEST_MEMORY		807212	0					
ANR	807637	Identifier	ATTR_REQUEST_MEMORY		807212	0					
ANR	807638	Argument	mach_classad		807212	1					
ANR	807639	Identifier	mach_classad		807212	0					
ANR	807640	Argument	memory		807212	2					
ANR	807641	Identifier	memory		807212	0					
ANR	807642	CompoundStatement		110:78:3766:3766	807212	1					
ANR	807643	ExpressionStatement	"type . sprintf_cat ( ""memory=%d "" , memory )"	1205:3:30627:30667	807212	0	True				
ANR	807644	CallExpression	"type . sprintf_cat ( ""memory=%d "" , memory )"		807212	0					
ANR	807645	Callee	type . sprintf_cat		807212	0					
ANR	807646	MemberAccess	type . sprintf_cat		807212	0					
ANR	807647	Identifier	type		807212	0					
ANR	807648	Identifier	sprintf_cat		807212	1					
ANR	807649	ArgumentList	"""memory=%d """		807212	1					
ANR	807650	Argument	"""memory=%d """		807212	0					
ANR	807651	PrimaryExpression	"""memory=%d """		807212	0					
ANR	807652	Argument	memory		807212	1					
ANR	807653	Identifier	memory		807212	0					
ANR	807654	ElseStatement	else		807212	0					
ANR	807655	CompoundStatement		112:9:3822:3822	807212	0					
ANR	807656	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""No memory request in incoming ad, aborting...\\n"" )"	1209:3:30799:30882	807212	0	True				
ANR	807657	CallExpression	"rip -> dprintf ( D_ALWAYS , ""No memory request in incoming ad, aborting...\\n"" )"		807212	0					
ANR	807658	Callee	rip -> dprintf		807212	0					
ANR	807659	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	807660	Identifier	rip		807212	0					
ANR	807661	Identifier	dprintf		807212	1					
ANR	807662	ArgumentList	D_ALWAYS		807212	1					
ANR	807663	Argument	D_ALWAYS		807212	0					
ANR	807664	Identifier	D_ALWAYS		807212	0					
ANR	807665	Argument	"""No memory request in incoming ad, aborting...\\n"""		807212	1					
ANR	807666	PrimaryExpression	"""No memory request in incoming ad, aborting...\\n"""		807212	0					
ANR	807667	ExpressionStatement	ABORT	1211:3:30887:30892	807212	1	True				
ANR	807668	Identifier	ABORT		807212	0					
ANR	807669	IfStatement	"if ( req_classad -> EvalInteger ( ATTR_REQUEST_DISK , mach_classad , disk ) )"		807212	10					
ANR	807670	Condition	"req_classad -> EvalInteger ( ATTR_REQUEST_DISK , mach_classad , disk )"	1214:6:30905:30969	807212	0	True				
ANR	807671	CallExpression	"req_classad -> EvalInteger ( ATTR_REQUEST_DISK , mach_classad , disk )"		807212	0					
ANR	807672	Callee	req_classad -> EvalInteger		807212	0					
ANR	807673	PtrMemberAccess	req_classad -> EvalInteger		807212	0					
ANR	807674	Identifier	req_classad		807212	0					
ANR	807675	Identifier	EvalInteger		807212	1					
ANR	807676	ArgumentList	ATTR_REQUEST_DISK		807212	1					
ANR	807677	Argument	ATTR_REQUEST_DISK		807212	0					
ANR	807678	Identifier	ATTR_REQUEST_DISK		807212	0					
ANR	807679	Argument	mach_classad		807212	1					
ANR	807680	Identifier	mach_classad		807212	0					
ANR	807681	Argument	disk		807212	2					
ANR	807682	Identifier	disk		807212	0					
ANR	807683	CompoundStatement		120:74:4117:4117	807212	1					
ANR	807684	ExpressionStatement	"type . sprintf_cat ( ""disk=%d%%"" , max ( ( int ) ceil ( ( disk / ( double ) rip -> r_attr -> get_total_disk ( ) ) * 100 ) , 1 ) )"	1217:3:31079:31194	807212	0	True				
ANR	807685	CallExpression	"type . sprintf_cat ( ""disk=%d%%"" , max ( ( int ) ceil ( ( disk / ( double ) rip -> r_attr -> get_total_disk ( ) ) * 100 ) , 1 ) )"		807212	0					
ANR	807686	Callee	type . sprintf_cat		807212	0					
ANR	807687	MemberAccess	type . sprintf_cat		807212	0					
ANR	807688	Identifier	type		807212	0					
ANR	807689	Identifier	sprintf_cat		807212	1					
ANR	807690	ArgumentList	"""disk=%d%%"""		807212	1					
ANR	807691	Argument	"""disk=%d%%"""		807212	0					
ANR	807692	PrimaryExpression	"""disk=%d%%"""		807212	0					
ANR	807693	Argument	"max ( ( int ) ceil ( ( disk / ( double ) rip -> r_attr -> get_total_disk ( ) ) * 100 ) , 1 )"		807212	1					
ANR	807694	CallExpression	"max ( ( int ) ceil ( ( disk / ( double ) rip -> r_attr -> get_total_disk ( ) ) * 100 ) , 1 )"		807212	0					
ANR	807695	Callee	max		807212	0					
ANR	807696	Identifier	max		807212	0					
ANR	807697	ArgumentList	( int ) ceil ( ( disk / ( double ) rip -> r_attr -> get_total_disk ( ) ) * 100 )		807212	1					
ANR	807698	Argument	( int ) ceil ( ( disk / ( double ) rip -> r_attr -> get_total_disk ( ) ) * 100 )		807212	0					
ANR	807699	CastExpression	( int ) ceil ( ( disk / ( double ) rip -> r_attr -> get_total_disk ( ) ) * 100 )		807212	0					
ANR	807700	CastTarget	int		807212	0					
ANR	807701	CallExpression	ceil ( ( disk / ( double ) rip -> r_attr -> get_total_disk ( ) ) * 100 )		807212	1					
ANR	807702	Callee	ceil		807212	0					
ANR	807703	Identifier	ceil		807212	0					
ANR	807704	ArgumentList	( disk / ( double ) rip -> r_attr -> get_total_disk ( ) ) * 100		807212	1					
ANR	807705	Argument	( disk / ( double ) rip -> r_attr -> get_total_disk ( ) ) * 100		807212	0					
ANR	807706	MultiplicativeExpression	( disk / ( double ) rip -> r_attr -> get_total_disk ( ) ) * 100		807212	0		*			
ANR	807707	MultiplicativeExpression	disk / ( double ) rip -> r_attr -> get_total_disk ( )		807212	0		/			
ANR	807708	Identifier	disk		807212	0					
ANR	807709	CastExpression	( double ) rip -> r_attr -> get_total_disk ( )		807212	1					
ANR	807710	CastTarget	double		807212	0					
ANR	807711	CallExpression	rip -> r_attr -> get_total_disk ( )		807212	1					
ANR	807712	Callee	rip -> r_attr -> get_total_disk		807212	0					
ANR	807713	PtrMemberAccess	rip -> r_attr -> get_total_disk		807212	0					
ANR	807714	PtrMemberAccess	rip -> r_attr		807212	0					
ANR	807715	Identifier	rip		807212	0					
ANR	807716	Identifier	r_attr		807212	1					
ANR	807717	Identifier	get_total_disk		807212	1					
ANR	807718	ArgumentList			807212	1					
ANR	807719	PrimaryExpression	100		807212	1					
ANR	807720	Argument	1		807212	1					
ANR	807721	PrimaryExpression	1		807212	0					
ANR	807722	ElseStatement	else		807212	0					
ANR	807723	CompoundStatement		125:9:4349:4349	807212	0					
ANR	807724	ExpressionStatement	"rip -> dprintf ( D_FULLDEBUG , ""No disk request in incoming ad, aborting...\\n"" )"	1222:3:31322:31406	807212	0	True				
ANR	807725	CallExpression	"rip -> dprintf ( D_FULLDEBUG , ""No disk request in incoming ad, aborting...\\n"" )"		807212	0					
ANR	807726	Callee	rip -> dprintf		807212	0					
ANR	807727	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	807728	Identifier	rip		807212	0					
ANR	807729	Identifier	dprintf		807212	1					
ANR	807730	ArgumentList	D_FULLDEBUG		807212	1					
ANR	807731	Argument	D_FULLDEBUG		807212	0					
ANR	807732	Identifier	D_FULLDEBUG		807212	0					
ANR	807733	Argument	"""No disk request in incoming ad, aborting...\\n"""		807212	1					
ANR	807734	PrimaryExpression	"""No disk request in incoming ad, aborting...\\n"""		807212	0					
ANR	807735	ExpressionStatement	ABORT	1224:3:31411:31416	807212	1	True				
ANR	807736	Identifier	ABORT		807212	0					
ANR	807737	ExpressionStatement	"rip -> dprintf ( D_FULLDEBUG , ""Match requesting resources: %s\\n"" , type . Value ( ) )"	1227:2:31425:31509	807212	11	True				
ANR	807738	CallExpression	"rip -> dprintf ( D_FULLDEBUG , ""Match requesting resources: %s\\n"" , type . Value ( ) )"		807212	0					
ANR	807739	Callee	rip -> dprintf		807212	0					
ANR	807740	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	807741	Identifier	rip		807212	0					
ANR	807742	Identifier	dprintf		807212	1					
ANR	807743	ArgumentList	D_FULLDEBUG		807212	1					
ANR	807744	Argument	D_FULLDEBUG		807212	0					
ANR	807745	Identifier	D_FULLDEBUG		807212	0					
ANR	807746	Argument	"""Match requesting resources: %s\\n"""		807212	1					
ANR	807747	PrimaryExpression	"""Match requesting resources: %s\\n"""		807212	0					
ANR	807748	Argument	type . Value ( )		807212	2					
ANR	807749	CallExpression	type . Value ( )		807212	0					
ANR	807750	Callee	type . Value		807212	0					
ANR	807751	MemberAccess	type . Value		807212	0					
ANR	807752	Identifier	type		807212	0					
ANR	807753	Identifier	Value		807212	1					
ANR	807754	ArgumentList			807212	1					
ANR	807755	ExpressionStatement	type_list . initializeFromString ( type . Value ( ) )	1230:2:31514:31560	807212	12	True				
ANR	807756	CallExpression	type_list . initializeFromString ( type . Value ( ) )		807212	0					
ANR	807757	Callee	type_list . initializeFromString		807212	0					
ANR	807758	MemberAccess	type_list . initializeFromString		807212	0					
ANR	807759	Identifier	type_list		807212	0					
ANR	807760	Identifier	initializeFromString		807212	1					
ANR	807761	ArgumentList	type . Value ( )		807212	1					
ANR	807762	Argument	type . Value ( )		807212	0					
ANR	807763	CallExpression	type . Value ( )		807212	0					
ANR	807764	Callee	type . Value		807212	0					
ANR	807765	MemberAccess	type . Value		807212	0					
ANR	807766	Identifier	type		807212	0					
ANR	807767	Identifier	Value		807212	1					
ANR	807768	ArgumentList			807212	1					
ANR	807769	ExpressionStatement	"cpu_attrs = resmgr -> buildSlot ( rip -> r_id , & type_list , - 1 , false )"	1231:2:31564:31629	807212	13	True				
ANR	807770	AssignmentExpression	"cpu_attrs = resmgr -> buildSlot ( rip -> r_id , & type_list , - 1 , false )"		807212	0		=			
ANR	807771	Identifier	cpu_attrs		807212	0					
ANR	807772	CallExpression	"resmgr -> buildSlot ( rip -> r_id , & type_list , - 1 , false )"		807212	1					
ANR	807773	Callee	resmgr -> buildSlot		807212	0					
ANR	807774	PtrMemberAccess	resmgr -> buildSlot		807212	0					
ANR	807775	Identifier	resmgr		807212	0					
ANR	807776	Identifier	buildSlot		807212	1					
ANR	807777	ArgumentList	rip -> r_id		807212	1					
ANR	807778	Argument	rip -> r_id		807212	0					
ANR	807779	PtrMemberAccess	rip -> r_id		807212	0					
ANR	807780	Identifier	rip		807212	0					
ANR	807781	Identifier	r_id		807212	1					
ANR	807782	Argument	& type_list		807212	1					
ANR	807783	UnaryOperationExpression	& type_list		807212	0					
ANR	807784	UnaryOperator	&		807212	0					
ANR	807785	Identifier	type_list		807212	1					
ANR	807786	Argument	- 1		807212	2					
ANR	807787	UnaryOperationExpression	- 1		807212	0					
ANR	807788	UnaryOperator	-		807212	0					
ANR	807789	PrimaryExpression	1		807212	1					
ANR	807790	Argument	false		807212	3					
ANR	807791	Identifier	false		807212	0					
ANR	807792	IfStatement	if ( ! cpu_attrs )		807212	14					
ANR	807793	Condition	! cpu_attrs	1232:6:31637:31647	807212	0	True				
ANR	807794	UnaryOperationExpression	! cpu_attrs		807212	0					
ANR	807795	UnaryOperator	!		807212	0					
ANR	807796	Identifier	cpu_attrs		807212	1					
ANR	807797	CompoundStatement		138:20:4795:4795	807212	1					
ANR	807798	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Failed to parse attributes for request, aborting\\n"" )"	1233:3:31656:31742	807212	0	True				
ANR	807799	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Failed to parse attributes for request, aborting\\n"" )"		807212	0					
ANR	807800	Callee	rip -> dprintf		807212	0					
ANR	807801	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	807802	Identifier	rip		807212	0					
ANR	807803	Identifier	dprintf		807212	1					
ANR	807804	ArgumentList	D_ALWAYS		807212	1					
ANR	807805	Argument	D_ALWAYS		807212	0					
ANR	807806	Identifier	D_ALWAYS		807212	0					
ANR	807807	Argument	"""Failed to parse attributes for request, aborting\\n"""		807212	1					
ANR	807808	PrimaryExpression	"""Failed to parse attributes for request, aborting\\n"""		807212	0					
ANR	807809	ExpressionStatement	ABORT	1235:3:31747:31752	807212	1	True				
ANR	807810	Identifier	ABORT		807212	0					
ANR	807811	ExpressionStatement	"new_rip = new Resource ( cpu_attrs , rip -> r_id , true , rip )"	1238:2:31761:31818	807212	15	True				
ANR	807812	AssignmentExpression	"new_rip = new Resource ( cpu_attrs , rip -> r_id , true , rip )"		807212	0		=			
ANR	807813	Identifier	new_rip		807212	0					
ANR	807814	Expression	"cpu_attrs , rip -> r_id , true , rip"		807212	1					
ANR	807815	Identifier	cpu_attrs		807212	0					
ANR	807816	Expression	"rip -> r_id , true , rip"		807212	1					
ANR	807817	PtrMemberAccess	rip -> r_id		807212	0					
ANR	807818	Identifier	rip		807212	0					
ANR	807819	Identifier	r_id		807212	1					
ANR	807820	Expression	"true , rip"		807212	1					
ANR	807821	Identifier	true		807212	0					
ANR	807822	Identifier	rip		807212	1					
ANR	807823	IfStatement	if ( ! new_rip )		807212	16					
ANR	807824	Condition	! new_rip	1239:6:31826:31834	807212	0	True				
ANR	807825	UnaryOperationExpression	! new_rip		807212	0					
ANR	807826	UnaryOperator	!		807212	0					
ANR	807827	Identifier	new_rip		807212	1					
ANR	807828	CompoundStatement		145:18:4982:4982	807212	1					
ANR	807829	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Failed to build new resource for request, aborting\\n"" )"	1240:3:31843:31931	807212	0	True				
ANR	807830	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Failed to build new resource for request, aborting\\n"" )"		807212	0					
ANR	807831	Callee	rip -> dprintf		807212	0					
ANR	807832	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	807833	Identifier	rip		807212	0					
ANR	807834	Identifier	dprintf		807212	1					
ANR	807835	ArgumentList	D_ALWAYS		807212	1					
ANR	807836	Argument	D_ALWAYS		807212	0					
ANR	807837	Identifier	D_ALWAYS		807212	0					
ANR	807838	Argument	"""Failed to build new resource for request, aborting\\n"""		807212	1					
ANR	807839	PrimaryExpression	"""Failed to build new resource for request, aborting\\n"""		807212	0					
ANR	807840	ExpressionStatement	ABORT	1242:3:31936:31941	807212	1	True				
ANR	807841	Identifier	ABORT		807212	0					
ANR	807842	ExpressionStatement	new_rip -> compute ( A_ALL )	1246:2:31992:32017	807212	17	True				
ANR	807843	CallExpression	new_rip -> compute ( A_ALL )		807212	0					
ANR	807844	Callee	new_rip -> compute		807212	0					
ANR	807845	PtrMemberAccess	new_rip -> compute		807212	0					
ANR	807846	Identifier	new_rip		807212	0					
ANR	807847	Identifier	compute		807212	1					
ANR	807848	ArgumentList	A_ALL		807212	1					
ANR	807849	Argument	A_ALL		807212	0					
ANR	807850	Identifier	A_ALL		807212	0					
ANR	807851	ExpressionStatement	new_rip -> compute ( A_TIMEOUT | A_UPDATE )	1247:2:32021:32061	807212	18	True				
ANR	807852	CallExpression	new_rip -> compute ( A_TIMEOUT | A_UPDATE )		807212	0					
ANR	807853	Callee	new_rip -> compute		807212	0					
ANR	807854	PtrMemberAccess	new_rip -> compute		807212	0					
ANR	807855	Identifier	new_rip		807212	0					
ANR	807856	Identifier	compute		807212	1					
ANR	807857	ArgumentList	A_TIMEOUT | A_UPDATE		807212	1					
ANR	807858	Argument	A_TIMEOUT | A_UPDATE		807212	0					
ANR	807859	InclusiveOrExpression	A_TIMEOUT | A_UPDATE		807212	0		|			
ANR	807860	Identifier	A_TIMEOUT		807212	0					
ANR	807861	Identifier	A_UPDATE		807212	1					
ANR	807862	ExpressionStatement	new_rip -> init_classad ( )	1248:2:32087:32110	807212	19	True				
ANR	807863	CallExpression	new_rip -> init_classad ( )		807212	0					
ANR	807864	Callee	new_rip -> init_classad		807212	0					
ANR	807865	PtrMemberAccess	new_rip -> init_classad		807212	0					
ANR	807866	Identifier	new_rip		807212	0					
ANR	807867	Identifier	init_classad		807212	1					
ANR	807868	ArgumentList			807212	1					
ANR	807869	ExpressionStatement	new_rip -> refresh_classad ( A_EVALUATED )	1249:2:32114:32153	807212	20	True				
ANR	807870	CallExpression	new_rip -> refresh_classad ( A_EVALUATED )		807212	0					
ANR	807871	Callee	new_rip -> refresh_classad		807212	0					
ANR	807872	PtrMemberAccess	new_rip -> refresh_classad		807212	0					
ANR	807873	Identifier	new_rip		807212	0					
ANR	807874	Identifier	refresh_classad		807212	1					
ANR	807875	ArgumentList	A_EVALUATED		807212	1					
ANR	807876	Argument	A_EVALUATED		807212	0					
ANR	807877	Identifier	A_EVALUATED		807212	0					
ANR	807878	ExpressionStatement	new_rip -> refresh_classad ( A_SHARED_SLOT )	1250:2:32158:32199	807212	21	True				
ANR	807879	CallExpression	new_rip -> refresh_classad ( A_SHARED_SLOT )		807212	0					
ANR	807880	Callee	new_rip -> refresh_classad		807212	0					
ANR	807881	PtrMemberAccess	new_rip -> refresh_classad		807212	0					
ANR	807882	Identifier	new_rip		807212	0					
ANR	807883	Identifier	refresh_classad		807212	1					
ANR	807884	ArgumentList	A_SHARED_SLOT		807212	1					
ANR	807885	Argument	A_SHARED_SLOT		807212	0					
ANR	807886	Identifier	A_SHARED_SLOT		807212	0					
ANR	807887	Statement	delete	1254:2:32281:32286	807212	22	True				
ANR	807888	ExpressionStatement	new_rip -> r_cur	1254:9:32288:32302	807212	23	True				
ANR	807889	PtrMemberAccess	new_rip -> r_cur		807212	0					
ANR	807890	Identifier	new_rip		807212	0					
ANR	807891	Identifier	r_cur		807212	1					
ANR	807892	ExpressionStatement	new_rip -> r_cur = rip -> r_cur	1255:2:32306:32333	807212	24	True				
ANR	807893	AssignmentExpression	new_rip -> r_cur = rip -> r_cur		807212	0		=			
ANR	807894	PtrMemberAccess	new_rip -> r_cur		807212	0					
ANR	807895	Identifier	new_rip		807212	0					
ANR	807896	Identifier	r_cur		807212	1					
ANR	807897	PtrMemberAccess	rip -> r_cur		807212	1					
ANR	807898	Identifier	rip		807212	0					
ANR	807899	Identifier	r_cur		807212	1					
ANR	807900	ExpressionStatement	new_rip -> r_cur -> setResource ( new_rip )	1256:2:32337:32375	807212	25	True				
ANR	807901	CallExpression	new_rip -> r_cur -> setResource ( new_rip )		807212	0					
ANR	807902	Callee	new_rip -> r_cur -> setResource		807212	0					
ANR	807903	PtrMemberAccess	new_rip -> r_cur -> setResource		807212	0					
ANR	807904	PtrMemberAccess	new_rip -> r_cur		807212	0					
ANR	807905	Identifier	new_rip		807212	0					
ANR	807906	Identifier	r_cur		807212	1					
ANR	807907	Identifier	setResource		807212	1					
ANR	807908	ArgumentList	new_rip		807212	1					
ANR	807909	Argument	new_rip		807212	0					
ANR	807910	Identifier	new_rip		807212	0					
ANR	807911	ExpressionStatement	rip -> r_cur = new Claim ( rip )	1259:2:32433:32462	807212	26	True				
ANR	807912	AssignmentExpression	rip -> r_cur = new Claim ( rip )		807212	0		=			
ANR	807913	PtrMemberAccess	rip -> r_cur		807212	0					
ANR	807914	Identifier	rip		807212	0					
ANR	807915	Identifier	r_cur		807212	1					
ANR	807916	Identifier	rip		807212	1					
ANR	807917	ExpressionStatement	rip -> change_state ( unclaimed_state )	1262:2:32518:32554	807212	27	True				
ANR	807918	CallExpression	rip -> change_state ( unclaimed_state )		807212	0					
ANR	807919	Callee	rip -> change_state		807212	0					
ANR	807920	PtrMemberAccess	rip -> change_state		807212	0					
ANR	807921	Identifier	rip		807212	0					
ANR	807922	Identifier	change_state		807212	1					
ANR	807923	ArgumentList	unclaimed_state		807212	1					
ANR	807924	Argument	unclaimed_state		807212	0					
ANR	807925	Identifier	unclaimed_state		807212	0					
ANR	807926	ExpressionStatement	rip -> update ( )	1263:2:32558:32571	807212	28	True				
ANR	807927	CallExpression	rip -> update ( )		807212	0					
ANR	807928	Callee	rip -> update		807212	0					
ANR	807929	PtrMemberAccess	rip -> update		807212	0					
ANR	807930	Identifier	rip		807212	0					
ANR	807931	Identifier	update		807212	1					
ANR	807932	ArgumentList			807212	1					
ANR	807933	ExpressionStatement	resmgr -> addResource ( new_rip )	1265:2:32631:32661	807212	29	True				
ANR	807934	CallExpression	resmgr -> addResource ( new_rip )		807212	0					
ANR	807935	Callee	resmgr -> addResource		807212	0					
ANR	807936	PtrMemberAccess	resmgr -> addResource		807212	0					
ANR	807937	Identifier	resmgr		807212	0					
ANR	807938	Identifier	addResource		807212	1					
ANR	807939	ArgumentList	new_rip		807212	1					
ANR	807940	Argument	new_rip		807212	0					
ANR	807941	Identifier	new_rip		807212	0					
ANR	807942	ExpressionStatement	resmgr -> compute ( A_ALL )	1269:2:32782:32806	807212	30	True				
ANR	807943	CallExpression	resmgr -> compute ( A_ALL )		807212	0					
ANR	807944	Callee	resmgr -> compute		807212	0					
ANR	807945	PtrMemberAccess	resmgr -> compute		807212	0					
ANR	807946	Identifier	resmgr		807212	0					
ANR	807947	Identifier	compute		807212	1					
ANR	807948	ArgumentList	A_ALL		807212	1					
ANR	807949	Argument	A_ALL		807212	0					
ANR	807950	Identifier	A_ALL		807212	0					
ANR	807951	ExpressionStatement	resmgr -> compute ( A_TIMEOUT | A_UPDATE )	1270:2:32810:32849	807212	31	True				
ANR	807952	CallExpression	resmgr -> compute ( A_TIMEOUT | A_UPDATE )		807212	0					
ANR	807953	Callee	resmgr -> compute		807212	0					
ANR	807954	PtrMemberAccess	resmgr -> compute		807212	0					
ANR	807955	Identifier	resmgr		807212	0					
ANR	807956	Identifier	compute		807212	1					
ANR	807957	ArgumentList	A_TIMEOUT | A_UPDATE		807212	1					
ANR	807958	Argument	A_TIMEOUT | A_UPDATE		807212	0					
ANR	807959	InclusiveOrExpression	A_TIMEOUT | A_UPDATE		807212	0		|			
ANR	807960	Identifier	A_TIMEOUT		807212	0					
ANR	807961	Identifier	A_UPDATE		807212	1					
ANR	807962	ExpressionStatement	rip = new_rip	1274:2:32933:32946	807212	32	True				
ANR	807963	AssignmentExpression	rip = new_rip		807212	0		=			
ANR	807964	Identifier	rip		807212	0					
ANR	807965	Identifier	new_rip		807212	1					
ANR	807966	ExpressionStatement	new_dynamic_slot = true	1282:2:33302:33325	807212	33	True				
ANR	807967	AssignmentExpression	new_dynamic_slot = true		807212	0		=			
ANR	807968	Identifier	new_dynamic_slot		807212	0					
ANR	807969	Identifier	true		807212	1					
ANR	807970	IfStatement	if ( ! rip -> willingToRun ( req_classad ) )		807212	23					
ANR	807971	Condition	! rip -> willingToRun ( req_classad )	1286:5:33389:33419	807212	0	True				
ANR	807972	UnaryOperationExpression	! rip -> willingToRun ( req_classad )		807212	0					
ANR	807973	UnaryOperator	!		807212	0					
ANR	807974	CallExpression	rip -> willingToRun ( req_classad )		807212	1					
ANR	807975	Callee	rip -> willingToRun		807212	0					
ANR	807976	PtrMemberAccess	rip -> willingToRun		807212	0					
ANR	807977	Identifier	rip		807212	0					
ANR	807978	Identifier	willingToRun		807212	1					
ANR	807979	ArgumentList	req_classad		807212	1					
ANR	807980	Argument	req_classad		807212	0					
ANR	807981	Identifier	req_classad		807212	0					
ANR	807982	CompoundStatement		192:38:6566:6566	807212	1					
ANR	807983	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Request to claim resource refused.\\n"" )"	1287:5:33429:33491	807212	0	True				
ANR	807984	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Request to claim resource refused.\\n"" )"		807212	0					
ANR	807985	Callee	rip -> dprintf		807212	0					
ANR	807986	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	807987	Identifier	rip		807212	0					
ANR	807988	Identifier	dprintf		807212	1					
ANR	807989	ArgumentList	D_ALWAYS		807212	1					
ANR	807990	Argument	D_ALWAYS		807212	0					
ANR	807991	Identifier	D_ALWAYS		807212	0					
ANR	807992	Argument	"""Request to claim resource refused.\\n"""		807212	1					
ANR	807993	PrimaryExpression	"""Request to claim resource refused.\\n"""		807212	0					
ANR	807994	ExpressionStatement	refuse ( stream )	1288:2:33495:33509	807212	1	True				
ANR	807995	CallExpression	refuse ( stream )		807212	0					
ANR	807996	Callee	refuse		807212	0					
ANR	807997	Identifier	refuse		807212	0					
ANR	807998	ArgumentList	stream		807212	1					
ANR	807999	Argument	stream		807212	0					
ANR	808000	Identifier	stream		807212	0					
ANR	808001	ExpressionStatement	ABORT	1289:2:33513:33518	807212	2	True				
ANR	808002	Identifier	ABORT		807212	0					
ANR	808003	ExpressionStatement	rank = rip -> compute_rank ( req_classad )	1293:1:33588:33625	807212	24	True				
ANR	808004	AssignmentExpression	rank = rip -> compute_rank ( req_classad )		807212	0		=			
ANR	808005	Identifier	rank		807212	0					
ANR	808006	CallExpression	rip -> compute_rank ( req_classad )		807212	1					
ANR	808007	Callee	rip -> compute_rank		807212	0					
ANR	808008	PtrMemberAccess	rip -> compute_rank		807212	0					
ANR	808009	Identifier	rip		807212	0					
ANR	808010	Identifier	compute_rank		807212	1					
ANR	808011	ArgumentList	req_classad		807212	1					
ANR	808012	Argument	req_classad		807212	0					
ANR	808013	Identifier	req_classad		807212	0					
ANR	808014	ExpressionStatement	"rip -> dprintf ( D_FULLDEBUG , ""Rank of this claim is: %f\\n"" , rank )"	1294:1:33628:33692	807212	25	True				
ANR	808015	CallExpression	"rip -> dprintf ( D_FULLDEBUG , ""Rank of this claim is: %f\\n"" , rank )"		807212	0					
ANR	808016	Callee	rip -> dprintf		807212	0					
ANR	808017	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	808018	Identifier	rip		807212	0					
ANR	808019	Identifier	dprintf		807212	1					
ANR	808020	ArgumentList	D_FULLDEBUG		807212	1					
ANR	808021	Argument	D_FULLDEBUG		807212	0					
ANR	808022	Identifier	D_FULLDEBUG		807212	0					
ANR	808023	Argument	"""Rank of this claim is: %f\\n"""		807212	1					
ANR	808024	PrimaryExpression	"""Rank of this claim is: %f\\n"""		807212	0					
ANR	808025	Argument	rank		807212	2					
ANR	808026	Identifier	rank		807212	0					
ANR	808027	IfStatement	if ( rip -> state ( ) == claimed_state )		807212	26					
ANR	808028	Condition	rip -> state ( ) == claimed_state	1296:5:33700:33728	807212	0	True				
ANR	808029	EqualityExpression	rip -> state ( ) == claimed_state		807212	0		==			
ANR	808030	CallExpression	rip -> state ( )		807212	0					
ANR	808031	Callee	rip -> state		807212	0					
ANR	808032	PtrMemberAccess	rip -> state		807212	0					
ANR	808033	Identifier	rip		807212	0					
ANR	808034	Identifier	state		807212	1					
ANR	808035	ArgumentList			807212	1					
ANR	808036	Identifier	claimed_state		807212	1					
ANR	808037	CompoundStatement		202:37:6876:6876	807212	1					
ANR	808038	IfStatement	if ( ! rip -> r_pre )		807212	0					
ANR	808039	Condition	! rip -> r_pre	1299:6:33853:33863	807212	0	True				
ANR	808040	UnaryOperationExpression	! rip -> r_pre		807212	0					
ANR	808041	UnaryOperator	!		807212	0					
ANR	808042	PtrMemberAccess	rip -> r_pre		807212	1					
ANR	808043	Identifier	rip		807212	0					
ANR	808044	Identifier	r_pre		807212	1					
ANR	808045	CompoundStatement		205:20:7011:7011	807212	1					
ANR	808046	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""In CLAIMED state without preempting claim object, aborting.\\n"" )"	1300:3:33872:33968	807212	0	True				
ANR	808047	CallExpression	"rip -> dprintf ( D_ALWAYS , ""In CLAIMED state without preempting claim object, aborting.\\n"" )"		807212	0					
ANR	808048	Callee	rip -> dprintf		807212	0					
ANR	808049	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	808050	Identifier	rip		807212	0					
ANR	808051	Identifier	dprintf		807212	1					
ANR	808052	ArgumentList	D_ALWAYS		807212	1					
ANR	808053	Argument	D_ALWAYS		807212	0					
ANR	808054	Identifier	D_ALWAYS		807212	0					
ANR	808055	Argument	"""In CLAIMED state without preempting claim object, aborting.\\n"""		807212	1					
ANR	808056	PrimaryExpression	"""In CLAIMED state without preempting claim object, aborting.\\n"""		807212	0					
ANR	808057	ExpressionStatement	refuse ( stream )	1302:3:33973:33989	807212	1	True				
ANR	808058	CallExpression	refuse ( stream )		807212	0					
ANR	808059	Callee	refuse		807212	0					
ANR	808060	Identifier	refuse		807212	0					
ANR	808061	ArgumentList	stream		807212	1					
ANR	808062	Argument	stream		807212	0					
ANR	808063	Identifier	stream		807212	0					
ANR	808064	ExpressionStatement	ABORT	1303:3:33994:33999	807212	2	True				
ANR	808065	Identifier	ABORT		807212	0					
ANR	808066	IfStatement	if ( rip -> r_pre_pre )		807212	1					
ANR	808067	Condition	rip -> r_pre_pre	1305:6:34011:34024	807212	0	True				
ANR	808068	PtrMemberAccess	rip -> r_pre_pre		807212	0					
ANR	808069	Identifier	rip		807212	0					
ANR	808070	Identifier	r_pre_pre		807212	1					
ANR	808071	CompoundStatement		242:3:8071:8102	807212	1					
ANR	808072	IfStatement	if ( ! rip -> r_pre_pre -> idMatches ( id ) )		807212	0					
ANR	808073	Condition	! rip -> r_pre_pre -> idMatches ( id )	1306:6:34036:34065	807212	0	True				
ANR	808074	UnaryOperationExpression	! rip -> r_pre_pre -> idMatches ( id )		807212	0					
ANR	808075	UnaryOperator	!		807212	0					
ANR	808076	CallExpression	rip -> r_pre_pre -> idMatches ( id )		807212	1					
ANR	808077	Callee	rip -> r_pre_pre -> idMatches		807212	0					
ANR	808078	PtrMemberAccess	rip -> r_pre_pre -> idMatches		807212	0					
ANR	808079	PtrMemberAccess	rip -> r_pre_pre		807212	0					
ANR	808080	Identifier	rip		807212	0					
ANR	808081	Identifier	r_pre_pre		807212	1					
ANR	808082	Identifier	idMatches		807212	1					
ANR	808083	ArgumentList	id		807212	1					
ANR	808084	Argument	id		807212	0					
ANR	808085	Identifier	id		807212	0					
ANR	808086	CompoundStatement		212:38:7212:7212	807212	1					
ANR	808087	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""ClaimId from schedd (%s) doesn't match (%s)\\n"" , idp . publicClaimId ( ) , rip -> r_pre_pre -> publicClaimId ( ) )"	1307:4:34074:34219	807212	0	True				
ANR	808088	CallExpression	"rip -> dprintf ( D_ALWAYS , ""ClaimId from schedd (%s) doesn't match (%s)\\n"" , idp . publicClaimId ( ) , rip -> r_pre_pre -> publicClaimId ( ) )"		807212	0					
ANR	808089	Callee	rip -> dprintf		807212	0					
ANR	808090	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	808091	Identifier	rip		807212	0					
ANR	808092	Identifier	dprintf		807212	1					
ANR	808093	ArgumentList	D_ALWAYS		807212	1					
ANR	808094	Argument	D_ALWAYS		807212	0					
ANR	808095	Identifier	D_ALWAYS		807212	0					
ANR	808096	Argument	"""ClaimId from schedd (%s) doesn't match (%s)\\n"""		807212	1					
ANR	808097	PrimaryExpression	"""ClaimId from schedd (%s) doesn't match (%s)\\n"""		807212	0					
ANR	808098	Argument	idp . publicClaimId ( )		807212	2					
ANR	808099	CallExpression	idp . publicClaimId ( )		807212	0					
ANR	808100	Callee	idp . publicClaimId		807212	0					
ANR	808101	MemberAccess	idp . publicClaimId		807212	0					
ANR	808102	Identifier	idp		807212	0					
ANR	808103	Identifier	publicClaimId		807212	1					
ANR	808104	ArgumentList			807212	1					
ANR	808105	Argument	rip -> r_pre_pre -> publicClaimId ( )		807212	3					
ANR	808106	CallExpression	rip -> r_pre_pre -> publicClaimId ( )		807212	0					
ANR	808107	Callee	rip -> r_pre_pre -> publicClaimId		807212	0					
ANR	808108	PtrMemberAccess	rip -> r_pre_pre -> publicClaimId		807212	0					
ANR	808109	PtrMemberAccess	rip -> r_pre_pre		807212	0					
ANR	808110	Identifier	rip		807212	0					
ANR	808111	Identifier	r_pre_pre		807212	1					
ANR	808112	Identifier	publicClaimId		807212	1					
ANR	808113	ArgumentList			807212	1					
ANR	808114	ExpressionStatement	refuse ( stream )	1310:4:34225:34241	807212	1	True				
ANR	808115	CallExpression	refuse ( stream )		807212	0					
ANR	808116	Callee	refuse		807212	0					
ANR	808117	Identifier	refuse		807212	0					
ANR	808118	ArgumentList	stream		807212	1					
ANR	808119	Argument	stream		807212	0					
ANR	808120	Identifier	stream		807212	0					
ANR	808121	ExpressionStatement	ABORT	1311:4:34247:34252	807212	2	True				
ANR	808122	Identifier	ABORT		807212	0					
ANR	808123	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Preempting preempting claim has correct ClaimId.\\n"" )"	1313:3:34262:34350	807212	1	True				
ANR	808124	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Preempting preempting claim has correct ClaimId.\\n"" )"		807212	0					
ANR	808125	Callee	rip -> dprintf		807212	0					
ANR	808126	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	808127	Identifier	rip		807212	0					
ANR	808128	Identifier	dprintf		807212	1					
ANR	808129	ArgumentList	D_ALWAYS		807212	1					
ANR	808130	Argument	D_ALWAYS		807212	0					
ANR	808131	Identifier	D_ALWAYS		807212	0					
ANR	808132	Argument	"""Preempting preempting claim has correct ClaimId.\\n"""		807212	1					
ANR	808133	PrimaryExpression	"""Preempting preempting claim has correct ClaimId.\\n"""		807212	0					
ANR	808134	IfStatement	if ( rank < rip -> r_pre -> rank ( ) )		807212	2					
ANR	808135	Condition	rank < rip -> r_pre -> rank ( )	1316:7:34359:34383	807212	0	True				
ANR	808136	RelationalExpression	rank < rip -> r_pre -> rank ( )		807212	0		<			
ANR	808137	Identifier	rank		807212	0					
ANR	808138	CallExpression	rip -> r_pre -> rank ( )		807212	1					
ANR	808139	Callee	rip -> r_pre -> rank		807212	0					
ANR	808140	PtrMemberAccess	rip -> r_pre -> rank		807212	0					
ANR	808141	PtrMemberAccess	rip -> r_pre		807212	0					
ANR	808142	Identifier	rip		807212	0					
ANR	808143	Identifier	r_pre		807212	1					
ANR	808144	Identifier	rank		807212	1					
ANR	808145	ArgumentList			807212	1					
ANR	808146	CompoundStatement		222:35:7531:7531	807212	1					
ANR	808147	Statement	rip	1317:4:34393:34395	807212	0	True				
ANR	808148	Statement	->	1317:7:34396:34397	807212	1	True				
ANR	808149	Statement	dprintf	1317:9:34398:34404	807212	2	True				
ANR	808150	Statement	(	1317:16:34405:34405	807212	3	True				
ANR	808151	Statement	D_ALWAYS	1317:18:34407:34414	807212	4	True				
ANR	808152	Statement	","	1317:26:34415:34415	807212	5	True				
ANR	808153	Statement	"""Preempting claim doesn't have sufficient """	1318:9:34427:34469	807212	6	True				
ANR	808154	Statement	"""rank to replace existing preempting claim; """	1319:9:34480:34524	807212	7	True				
ANR	808155	Statement	"""refusing.\\n"""	1320:9:34535:34547	807212	8	True				
ANR	808156	Statement	)	1320:23:34549:34549	807212	9	True				
ANR	808157	ExpressionStatement		1320:24:34550:34550	807212	10	True				
ANR	808158	ExpressionStatement	refuse ( stream )	1321:4:34556:34572	807212	11	True				
ANR	808159	CallExpression	refuse ( stream )		807212	0					
ANR	808160	Callee	refuse		807212	0					
ANR	808161	Identifier	refuse		807212	0					
ANR	808162	ArgumentList	stream		807212	1					
ANR	808163	Argument	stream		807212	0					
ANR	808164	Identifier	stream		807212	0					
ANR	808165	ExpressionStatement	ABORT	1322:4:34578:34583	807212	12	True				
ANR	808166	Identifier	ABORT		807212	0					
ANR	808167	IfStatement	if ( rank > rip -> r_pre -> rank ( ) )		807212	3					
ANR	808168	Condition	rank > rip -> r_pre -> rank ( )	1325:7:34598:34622	807212	0	True				
ANR	808169	RelationalExpression	rank > rip -> r_pre -> rank ( )		807212	0		>			
ANR	808170	Identifier	rank		807212	0					
ANR	808171	CallExpression	rip -> r_pre -> rank ( )		807212	1					
ANR	808172	Callee	rip -> r_pre -> rank		807212	0					
ANR	808173	PtrMemberAccess	rip -> r_pre -> rank		807212	0					
ANR	808174	PtrMemberAccess	rip -> r_pre		807212	0					
ANR	808175	Identifier	rip		807212	0					
ANR	808176	Identifier	r_pre		807212	1					
ANR	808177	Identifier	rank		807212	1					
ANR	808178	ArgumentList			807212	1					
ANR	808179	CompoundStatement		231:35:7770:7770	807212	1					
ANR	808180	Statement	rip	1326:4:34632:34634	807212	0	True				
ANR	808181	Statement	->	1326:7:34635:34636	807212	1	True				
ANR	808182	Statement	dprintf	1326:9:34637:34643	807212	2	True				
ANR	808183	Statement	(	1326:16:34644:34644	807212	3	True				
ANR	808184	Statement	D_ALWAYS	1326:17:34645:34652	807212	4	True				
ANR	808185	Statement	","	1326:25:34653:34653	807212	5	True				
ANR	808186	Statement	"""Replacing existing preempting claim with """	1327:8:34663:34705	807212	6	True				
ANR	808187	Statement	"""new preempting claim based on machine rank.\\n"""	1328:8:34715:34761	807212	7	True				
ANR	808188	Statement	)	1328:55:34762:34762	807212	8	True				
ANR	808189	ExpressionStatement		1328:56:34763:34763	807212	9	True				
ANR	808190	ElseStatement	else		807212	0					
ANR	808191	CompoundStatement		236:8:7922:7922	807212	0					
ANR	808192	Statement	rip	1331:4:34784:34786	807212	0	True				
ANR	808193	Statement	->	1331:7:34787:34788	807212	1	True				
ANR	808194	Statement	dprintf	1331:9:34789:34795	807212	2	True				
ANR	808195	Statement	(	1331:16:34796:34796	807212	3	True				
ANR	808196	Statement	D_ALWAYS	1331:17:34797:34804	807212	4	True				
ANR	808197	Statement	","	1331:25:34805:34805	807212	5	True				
ANR	808198	Statement	"""Replacing existing preempting claim with """	1332:8:34815:34857	807212	6	True				
ANR	808199	Statement	"""new preempting claim based on user priority.\\n"""	1333:8:34867:34914	807212	7	True				
ANR	808200	Statement	)	1333:56:34915:34915	807212	8	True				
ANR	808201	ExpressionStatement		1333:57:34916:34916	807212	9	True				
ANR	808202	IdentifierDeclStatement	Claim * pre_pre = rip -> r_pre_pre ;	1336:3:34927:34958	807212	4	True				
ANR	808203	IdentifierDecl	* pre_pre = rip -> r_pre_pre		807212	0					
ANR	808204	IdentifierDeclType	Claim *		807212	0					
ANR	808205	Identifier	pre_pre		807212	1					
ANR	808206	AssignmentExpression	* pre_pre = rip -> r_pre_pre		807212	2		=			
ANR	808207	Identifier	pre_pre		807212	0					
ANR	808208	PtrMemberAccess	rip -> r_pre_pre		807212	1					
ANR	808209	Identifier	rip		807212	0					
ANR	808210	Identifier	r_pre_pre		807212	1					
ANR	808211	ExpressionStatement	rip -> r_pre_pre = NULL	1337:3:34963:34984	807212	5	True				
ANR	808212	AssignmentExpression	rip -> r_pre_pre = NULL		807212	0		=			
ANR	808213	PtrMemberAccess	rip -> r_pre_pre		807212	0					
ANR	808214	Identifier	rip		807212	0					
ANR	808215	Identifier	r_pre_pre		807212	1					
ANR	808216	Identifier	NULL		807212	1					
ANR	808217	ExpressionStatement	rip -> removeClaim ( rip -> r_pre )	1338:3:34989:35017	807212	6	True				
ANR	808218	CallExpression	rip -> removeClaim ( rip -> r_pre )		807212	0					
ANR	808219	Callee	rip -> removeClaim		807212	0					
ANR	808220	PtrMemberAccess	rip -> removeClaim		807212	0					
ANR	808221	Identifier	rip		807212	0					
ANR	808222	Identifier	removeClaim		807212	1					
ANR	808223	ArgumentList	rip -> r_pre		807212	1					
ANR	808224	Argument	rip -> r_pre		807212	0					
ANR	808225	PtrMemberAccess	rip -> r_pre		807212	0					
ANR	808226	Identifier	rip		807212	0					
ANR	808227	Identifier	r_pre		807212	1					
ANR	808228	ExpressionStatement	rip -> r_pre = pre_pre	1339:3:35058:35078	807212	7	True				
ANR	808229	AssignmentExpression	rip -> r_pre = pre_pre		807212	0		=			
ANR	808230	PtrMemberAccess	rip -> r_pre		807212	0					
ANR	808231	Identifier	rip		807212	0					
ANR	808232	Identifier	r_pre		807212	1					
ANR	808233	Identifier	pre_pre		807212	1					
ANR	808234	IfStatement	if ( rip -> r_pre -> idMatches ( id ) )		807212	2					
ANR	808235	Condition	rip -> r_pre -> idMatches ( id )	1342:6:35123:35147	807212	0	True				
ANR	808236	CallExpression	rip -> r_pre -> idMatches ( id )		807212	0					
ANR	808237	Callee	rip -> r_pre -> idMatches		807212	0					
ANR	808238	PtrMemberAccess	rip -> r_pre -> idMatches		807212	0					
ANR	808239	PtrMemberAccess	rip -> r_pre		807212	0					
ANR	808240	Identifier	rip		807212	0					
ANR	808241	Identifier	r_pre		807212	1					
ANR	808242	Identifier	idMatches		807212	1					
ANR	808243	ArgumentList	id		807212	1					
ANR	808244	Argument	id		807212	0					
ANR	808245	Identifier	id		807212	0					
ANR	808246	CompoundStatement		248:34:8295:8295	807212	1					
ANR	808247	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Preempting claim has correct ClaimId.\\n"" )"	1343:3:35156:35232	807212	0	True				
ANR	808248	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Preempting claim has correct ClaimId.\\n"" )"		807212	0					
ANR	808249	Callee	rip -> dprintf		807212	0					
ANR	808250	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	808251	Identifier	rip		807212	0					
ANR	808252	Identifier	dprintf		807212	1					
ANR	808253	ArgumentList	D_ALWAYS		807212	1					
ANR	808254	Argument	D_ALWAYS		807212	0					
ANR	808255	Identifier	D_ALWAYS		807212	0					
ANR	808256	Argument	"""Preempting claim has correct ClaimId.\\n"""		807212	1					
ANR	808257	PrimaryExpression	"""Preempting claim has correct ClaimId.\\n"""		807212	0					
ANR	808258	IfStatement	if ( rank < rip -> r_cur -> rank ( ) )		807212	1					
ANR	808259	Condition	rank < rip -> r_cur -> rank ( )	1347:7:35302:35326	807212	0	True				
ANR	808260	RelationalExpression	rank < rip -> r_cur -> rank ( )		807212	0		<			
ANR	808261	Identifier	rank		807212	0					
ANR	808262	CallExpression	rip -> r_cur -> rank ( )		807212	1					
ANR	808263	Callee	rip -> r_cur -> rank		807212	0					
ANR	808264	PtrMemberAccess	rip -> r_cur -> rank		807212	0					
ANR	808265	PtrMemberAccess	rip -> r_cur		807212	0					
ANR	808266	Identifier	rip		807212	0					
ANR	808267	Identifier	r_cur		807212	1					
ANR	808268	Identifier	rank		807212	1					
ANR	808269	ArgumentList			807212	1					
ANR	808270	CompoundStatement		253:35:8474:8474	807212	1					
ANR	808271	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Preempting claim doesn't have sufficient rank, refusing.\\n"" )"	1348:4:35336:35429	807212	0	True				
ANR	808272	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Preempting claim doesn't have sufficient rank, refusing.\\n"" )"		807212	0					
ANR	808273	Callee	rip -> dprintf		807212	0					
ANR	808274	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	808275	Identifier	rip		807212	0					
ANR	808276	Identifier	dprintf		807212	1					
ANR	808277	ArgumentList	D_ALWAYS		807212	1					
ANR	808278	Argument	D_ALWAYS		807212	0					
ANR	808279	Identifier	D_ALWAYS		807212	0					
ANR	808280	Argument	"""Preempting claim doesn't have sufficient rank, refusing.\\n"""		807212	1					
ANR	808281	PrimaryExpression	"""Preempting claim doesn't have sufficient rank, refusing.\\n"""		807212	0					
ANR	808282	ExpressionStatement	cmd = NOT_OK	1350:4:35435:35447	807212	1	True				
ANR	808283	AssignmentExpression	cmd = NOT_OK		807212	0		=			
ANR	808284	Identifier	cmd		807212	0					
ANR	808285	Identifier	NOT_OK		807212	1					
ANR	808286	ElseStatement	else		807212	0					
ANR	808287	CompoundStatement		257:10:8603:8603	807212	0					
ANR	808288	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""New claim has sufficient rank, preempting current claim.\\n"" )"	1352:4:35465:35558	807212	0	True				
ANR	808289	CallExpression	"rip -> dprintf ( D_ALWAYS , ""New claim has sufficient rank, preempting current claim.\\n"" )"		807212	0					
ANR	808290	Callee	rip -> dprintf		807212	0					
ANR	808291	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	808292	Identifier	rip		807212	0					
ANR	808293	Identifier	dprintf		807212	1					
ANR	808294	ArgumentList	D_ALWAYS		807212	1					
ANR	808295	Argument	D_ALWAYS		807212	0					
ANR	808296	Identifier	D_ALWAYS		807212	0					
ANR	808297	Argument	"""New claim has sufficient rank, preempting current claim.\\n"""		807212	1					
ANR	808298	PrimaryExpression	"""New claim has sufficient rank, preempting current claim.\\n"""		807212	0					
ANR	808299	ExpressionStatement	rip -> r_pre -> setRequestStream ( stream )	1357:4:35650:35688	807212	1	True				
ANR	808300	CallExpression	rip -> r_pre -> setRequestStream ( stream )		807212	0					
ANR	808301	Callee	rip -> r_pre -> setRequestStream		807212	0					
ANR	808302	PtrMemberAccess	rip -> r_pre -> setRequestStream		807212	0					
ANR	808303	PtrMemberAccess	rip -> r_pre		807212	0					
ANR	808304	Identifier	rip		807212	0					
ANR	808305	Identifier	r_pre		807212	1					
ANR	808306	Identifier	setRequestStream		807212	1					
ANR	808307	ArgumentList	stream		807212	1					
ANR	808308	Argument	stream		807212	0					
ANR	808309	Identifier	stream		807212	0					
ANR	808310	ExpressionStatement	rip -> r_pre -> setad ( req_classad )	1358:4:35694:35726	807212	2	True				
ANR	808311	CallExpression	rip -> r_pre -> setad ( req_classad )		807212	0					
ANR	808312	Callee	rip -> r_pre -> setad		807212	0					
ANR	808313	PtrMemberAccess	rip -> r_pre -> setad		807212	0					
ANR	808314	PtrMemberAccess	rip -> r_pre		807212	0					
ANR	808315	Identifier	rip		807212	0					
ANR	808316	Identifier	r_pre		807212	1					
ANR	808317	Identifier	setad		807212	1					
ANR	808318	ArgumentList	req_classad		807212	1					
ANR	808319	Argument	req_classad		807212	0					
ANR	808320	Identifier	req_classad		807212	0					
ANR	808321	ExpressionStatement	rip -> r_pre -> loadAccountingInfo ( )	1359:4:35732:35764	807212	3	True				
ANR	808322	CallExpression	rip -> r_pre -> loadAccountingInfo ( )		807212	0					
ANR	808323	Callee	rip -> r_pre -> loadAccountingInfo		807212	0					
ANR	808324	PtrMemberAccess	rip -> r_pre -> loadAccountingInfo		807212	0					
ANR	808325	PtrMemberAccess	rip -> r_pre		807212	0					
ANR	808326	Identifier	rip		807212	0					
ANR	808327	Identifier	r_pre		807212	1					
ANR	808328	Identifier	loadAccountingInfo		807212	1					
ANR	808329	ArgumentList			807212	1					
ANR	808330	ExpressionStatement	rip -> r_pre -> setrank ( rank )	1360:4:35770:35797	807212	4	True				
ANR	808331	CallExpression	rip -> r_pre -> setrank ( rank )		807212	0					
ANR	808332	Callee	rip -> r_pre -> setrank		807212	0					
ANR	808333	PtrMemberAccess	rip -> r_pre -> setrank		807212	0					
ANR	808334	PtrMemberAccess	rip -> r_pre		807212	0					
ANR	808335	Identifier	rip		807212	0					
ANR	808336	Identifier	r_pre		807212	1					
ANR	808337	Identifier	setrank		807212	1					
ANR	808338	ArgumentList	rank		807212	1					
ANR	808339	Argument	rank		807212	0					
ANR	808340	Identifier	rank		807212	0					
ANR	808341	ExpressionStatement	rip -> r_pre -> setoldrank ( rip -> r_cur -> rank ( ) )	1361:4:35803:35847	807212	5	True				
ANR	808342	CallExpression	rip -> r_pre -> setoldrank ( rip -> r_cur -> rank ( ) )		807212	0					
ANR	808343	Callee	rip -> r_pre -> setoldrank		807212	0					
ANR	808344	PtrMemberAccess	rip -> r_pre -> setoldrank		807212	0					
ANR	808345	PtrMemberAccess	rip -> r_pre		807212	0					
ANR	808346	Identifier	rip		807212	0					
ANR	808347	Identifier	r_pre		807212	1					
ANR	808348	Identifier	setoldrank		807212	1					
ANR	808349	ArgumentList	rip -> r_cur -> rank ( )		807212	1					
ANR	808350	Argument	rip -> r_cur -> rank ( )		807212	0					
ANR	808351	CallExpression	rip -> r_cur -> rank ( )		807212	0					
ANR	808352	Callee	rip -> r_cur -> rank		807212	0					
ANR	808353	PtrMemberAccess	rip -> r_cur -> rank		807212	0					
ANR	808354	PtrMemberAccess	rip -> r_cur		807212	0					
ANR	808355	Identifier	rip		807212	0					
ANR	808356	Identifier	r_cur		807212	1					
ANR	808357	Identifier	rank		807212	1					
ANR	808358	ArgumentList			807212	1					
ANR	808359	ExpressionStatement	rip -> r_pre -> loadRequestInfo ( )	1362:4:35853:35882	807212	6	True				
ANR	808360	CallExpression	rip -> r_pre -> loadRequestInfo ( )		807212	0					
ANR	808361	Callee	rip -> r_pre -> loadRequestInfo		807212	0					
ANR	808362	PtrMemberAccess	rip -> r_pre -> loadRequestInfo		807212	0					
ANR	808363	PtrMemberAccess	rip -> r_pre		807212	0					
ANR	808364	Identifier	rip		807212	0					
ANR	808365	Identifier	r_pre		807212	1					
ANR	808366	Identifier	loadRequestInfo		807212	1					
ANR	808367	ArgumentList			807212	1					
ANR	808368	ExpressionStatement	rip -> r_pre_pre = new Claim ( rip )	1366:4:35994:36027	807212	7	True				
ANR	808369	AssignmentExpression	rip -> r_pre_pre = new Claim ( rip )		807212	0		=			
ANR	808370	PtrMemberAccess	rip -> r_pre_pre		807212	0					
ANR	808371	Identifier	rip		807212	0					
ANR	808372	Identifier	r_pre_pre		807212	1					
ANR	808373	Identifier	rip		807212	1					
ANR	808374	IfStatement	if ( rank > rip -> r_cur -> rank ( ) )		807212	8					
ANR	808375	Condition	rank > rip -> r_cur -> rank ( )	1369:8:36076:36100	807212	0	True				
ANR	808376	RelationalExpression	rank > rip -> r_cur -> rank ( )		807212	0		>			
ANR	808377	Identifier	rank		807212	0					
ANR	808378	CallExpression	rip -> r_cur -> rank ( )		807212	1					
ANR	808379	Callee	rip -> r_cur -> rank		807212	0					
ANR	808380	PtrMemberAccess	rip -> r_cur -> rank		807212	0					
ANR	808381	PtrMemberAccess	rip -> r_cur		807212	0					
ANR	808382	Identifier	rip		807212	0					
ANR	808383	Identifier	r_cur		807212	1					
ANR	808384	Identifier	rank		807212	1					
ANR	808385	ArgumentList			807212	1					
ANR	808386	CompoundStatement		275:36:9248:9248	807212	1					
ANR	808387	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""State change: preempting claim based on machine rank\\n"" )"	1370:5:36111:36200	807212	0	True				
ANR	808388	CallExpression	"rip -> dprintf ( D_ALWAYS , ""State change: preempting claim based on machine rank\\n"" )"		807212	0					
ANR	808389	Callee	rip -> dprintf		807212	0					
ANR	808390	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	808391	Identifier	rip		807212	0					
ANR	808392	Identifier	dprintf		807212	1					
ANR	808393	ArgumentList	D_ALWAYS		807212	1					
ANR	808394	Argument	D_ALWAYS		807212	0					
ANR	808395	Identifier	D_ALWAYS		807212	0					
ANR	808396	Argument	"""State change: preempting claim based on machine rank\\n"""		807212	1					
ANR	808397	PrimaryExpression	"""State change: preempting claim based on machine rank\\n"""		807212	0					
ANR	808398	ElseStatement	else		807212	0					
ANR	808399	CompoundStatement		278:11:9357:9357	807212	0					
ANR	808400	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""State change: preempting claim based on user priority\\n"" )"	1373:5:36220:36310	807212	0	True				
ANR	808401	CallExpression	"rip -> dprintf ( D_ALWAYS , ""State change: preempting claim based on user priority\\n"" )"		807212	0					
ANR	808402	Callee	rip -> dprintf		807212	0					
ANR	808403	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	808404	Identifier	rip		807212	0					
ANR	808405	Identifier	dprintf		807212	1					
ANR	808406	ArgumentList	D_ALWAYS		807212	1					
ANR	808407	Argument	D_ALWAYS		807212	0					
ANR	808408	Identifier	D_ALWAYS		807212	0					
ANR	808409	Argument	"""State change: preempting claim based on user priority\\n"""		807212	1					
ANR	808410	PrimaryExpression	"""State change: preempting claim based on user priority\\n"""		807212	0					
ANR	808411	ExpressionStatement	rip -> eval_state ( )	1382:4:36635:36652	807212	9	True				
ANR	808412	CallExpression	rip -> eval_state ( )		807212	0					
ANR	808413	Callee	rip -> eval_state		807212	0					
ANR	808414	PtrMemberAccess	rip -> eval_state		807212	0					
ANR	808415	Identifier	rip		807212	0					
ANR	808416	Identifier	eval_state		807212	1					
ANR	808417	ArgumentList			807212	1					
ANR	808418	ReturnStatement	return KEEP_STREAM ;	1385:4:36718:36736	807212	10	True				
ANR	808419	Identifier	KEEP_STREAM		807212	0					
ANR	808420	ElseStatement	else		807212	0					
ANR	808421	CompoundStatement		293:9:9901:9901	807212	0					
ANR	808422	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""ClaimId from schedd (%s) doesn't match (%s)\\n"" , idp . publicClaimId ( ) , rip -> r_pre -> publicClaimId ( ) )"	1388:3:36762:36897	807212	0	True				
ANR	808423	CallExpression	"rip -> dprintf ( D_ALWAYS , ""ClaimId from schedd (%s) doesn't match (%s)\\n"" , idp . publicClaimId ( ) , rip -> r_pre -> publicClaimId ( ) )"		807212	0					
ANR	808424	Callee	rip -> dprintf		807212	0					
ANR	808425	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	808426	Identifier	rip		807212	0					
ANR	808427	Identifier	dprintf		807212	1					
ANR	808428	ArgumentList	D_ALWAYS		807212	1					
ANR	808429	Argument	D_ALWAYS		807212	0					
ANR	808430	Identifier	D_ALWAYS		807212	0					
ANR	808431	Argument	"""ClaimId from schedd (%s) doesn't match (%s)\\n"""		807212	1					
ANR	808432	PrimaryExpression	"""ClaimId from schedd (%s) doesn't match (%s)\\n"""		807212	0					
ANR	808433	Argument	idp . publicClaimId ( )		807212	2					
ANR	808434	CallExpression	idp . publicClaimId ( )		807212	0					
ANR	808435	Callee	idp . publicClaimId		807212	0					
ANR	808436	MemberAccess	idp . publicClaimId		807212	0					
ANR	808437	Identifier	idp		807212	0					
ANR	808438	Identifier	publicClaimId		807212	1					
ANR	808439	ArgumentList			807212	1					
ANR	808440	Argument	rip -> r_pre -> publicClaimId ( )		807212	3					
ANR	808441	CallExpression	rip -> r_pre -> publicClaimId ( )		807212	0					
ANR	808442	Callee	rip -> r_pre -> publicClaimId		807212	0					
ANR	808443	PtrMemberAccess	rip -> r_pre -> publicClaimId		807212	0					
ANR	808444	PtrMemberAccess	rip -> r_pre		807212	0					
ANR	808445	Identifier	rip		807212	0					
ANR	808446	Identifier	r_pre		807212	1					
ANR	808447	Identifier	publicClaimId		807212	1					
ANR	808448	ArgumentList			807212	1					
ANR	808449	ExpressionStatement	cmd = NOT_OK	1391:3:36902:36914	807212	1	True				
ANR	808450	AssignmentExpression	cmd = NOT_OK		807212	0		=			
ANR	808451	Identifier	cmd		807212	0					
ANR	808452	Identifier	NOT_OK		807212	1					
ANR	808453	ElseStatement	else		807212	0					
ANR	808454	CompoundStatement		299:8:10072:10072	807212	0					
ANR	808455	IfStatement	if ( rip -> r_cur -> idMatches ( id ) )		807212	0					
ANR	808456	Condition	rip -> r_cur -> idMatches ( id )	1395:6:36960:36984	807212	0	True				
ANR	808457	CallExpression	rip -> r_cur -> idMatches ( id )		807212	0					
ANR	808458	Callee	rip -> r_cur -> idMatches		807212	0					
ANR	808459	PtrMemberAccess	rip -> r_cur -> idMatches		807212	0					
ANR	808460	PtrMemberAccess	rip -> r_cur		807212	0					
ANR	808461	Identifier	rip		807212	0					
ANR	808462	Identifier	r_cur		807212	1					
ANR	808463	Identifier	idMatches		807212	1					
ANR	808464	ArgumentList	id		807212	1					
ANR	808465	Argument	id		807212	0					
ANR	808466	Identifier	id		807212	0					
ANR	808467	CompoundStatement		301:34:10132:10132	807212	1					
ANR	808468	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Request accepted.\\n"" )"	1396:3:36993:37040	807212	0	True				
ANR	808469	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Request accepted.\\n"" )"		807212	0					
ANR	808470	Callee	rip -> dprintf		807212	0					
ANR	808471	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	808472	Identifier	rip		807212	0					
ANR	808473	Identifier	dprintf		807212	1					
ANR	808474	ArgumentList	D_ALWAYS		807212	1					
ANR	808475	Argument	D_ALWAYS		807212	0					
ANR	808476	Identifier	D_ALWAYS		807212	0					
ANR	808477	Argument	"""Request accepted.\\n"""		807212	1					
ANR	808478	PrimaryExpression	"""Request accepted.\\n"""		807212	0					
ANR	808479	ExpressionStatement	cmd = OK	1397:3:37045:37053	807212	1	True				
ANR	808480	AssignmentExpression	cmd = OK		807212	0		=			
ANR	808481	Identifier	cmd		807212	0					
ANR	808482	Identifier	OK		807212	1					
ANR	808483	ElseStatement	else		807212	0					
ANR	808484	CompoundStatement		304:9:10208:10208	807212	0					
ANR	808485	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""ClaimId from schedd (%s) doesn't match (%s)\\n"" , idp . publicClaimId ( ) , rip -> r_cur -> publicClaimId ( ) )"	1399:3:37069:37202	807212	0	True				
ANR	808486	CallExpression	"rip -> dprintf ( D_ALWAYS , ""ClaimId from schedd (%s) doesn't match (%s)\\n"" , idp . publicClaimId ( ) , rip -> r_cur -> publicClaimId ( ) )"		807212	0					
ANR	808487	Callee	rip -> dprintf		807212	0					
ANR	808488	PtrMemberAccess	rip -> dprintf		807212	0					
ANR	808489	Identifier	rip		807212	0					
ANR	808490	Identifier	dprintf		807212	1					
ANR	808491	ArgumentList	D_ALWAYS		807212	1					
ANR	808492	Argument	D_ALWAYS		807212	0					
ANR	808493	Identifier	D_ALWAYS		807212	0					
ANR	808494	Argument	"""ClaimId from schedd (%s) doesn't match (%s)\\n"""		807212	1					
ANR	808495	PrimaryExpression	"""ClaimId from schedd (%s) doesn't match (%s)\\n"""		807212	0					
ANR	808496	Argument	idp . publicClaimId ( )		807212	2					
ANR	808497	CallExpression	idp . publicClaimId ( )		807212	0					
ANR	808498	Callee	idp . publicClaimId		807212	0					
ANR	808499	MemberAccess	idp . publicClaimId		807212	0					
ANR	808500	Identifier	idp		807212	0					
ANR	808501	Identifier	publicClaimId		807212	1					
ANR	808502	ArgumentList			807212	1					
ANR	808503	Argument	rip -> r_cur -> publicClaimId ( )		807212	3					
ANR	808504	CallExpression	rip -> r_cur -> publicClaimId ( )		807212	0					
ANR	808505	Callee	rip -> r_cur -> publicClaimId		807212	0					
ANR	808506	PtrMemberAccess	rip -> r_cur -> publicClaimId		807212	0					
ANR	808507	PtrMemberAccess	rip -> r_cur		807212	0					
ANR	808508	Identifier	rip		807212	0					
ANR	808509	Identifier	r_cur		807212	1					
ANR	808510	Identifier	publicClaimId		807212	1					
ANR	808511	ArgumentList			807212	1					
ANR	808512	ExpressionStatement	cmd = NOT_OK	1402:3:37207:37219	807212	1	True				
ANR	808513	AssignmentExpression	cmd = NOT_OK		807212	0		=			
ANR	808514	Identifier	cmd		807212	0					
ANR	808515	Identifier	NOT_OK		807212	1					
ANR	808516	IfStatement	if ( cmd != OK )		807212	27					
ANR	808517	Condition	cmd != OK	1406:5:37237:37245	807212	0	True				
ANR	808518	EqualityExpression	cmd != OK		807212	0		!=			
ANR	808519	Identifier	cmd		807212	0					
ANR	808520	Identifier	OK		807212	1					
ANR	808521	CompoundStatement		312:17:10393:10393	807212	1					
ANR	808522	ExpressionStatement	refuse ( stream )	1407:2:37253:37269	807212	0	True				
ANR	808523	CallExpression	refuse ( stream )		807212	0					
ANR	808524	Callee	refuse		807212	0					
ANR	808525	Identifier	refuse		807212	0					
ANR	808526	ArgumentList	stream		807212	1					
ANR	808527	Argument	stream		807212	0					
ANR	808528	Identifier	stream		807212	0					
ANR	808529	ExpressionStatement	ABORT	1408:2:37273:37278	807212	1	True				
ANR	808530	Identifier	ABORT		807212	0					
ANR	808531	ExpressionStatement	rip -> r_cur -> setRequestStream ( stream )	1413:1:37397:37435	807212	28	True				
ANR	808532	CallExpression	rip -> r_cur -> setRequestStream ( stream )		807212	0					
ANR	808533	Callee	rip -> r_cur -> setRequestStream		807212	0					
ANR	808534	PtrMemberAccess	rip -> r_cur -> setRequestStream		807212	0					
ANR	808535	PtrMemberAccess	rip -> r_cur		807212	0					
ANR	808536	Identifier	rip		807212	0					
ANR	808537	Identifier	r_cur		807212	1					
ANR	808538	Identifier	setRequestStream		807212	1					
ANR	808539	ArgumentList	stream		807212	1					
ANR	808540	Argument	stream		807212	0					
ANR	808541	Identifier	stream		807212	0					
ANR	808542	ExpressionStatement	rip -> r_cur -> setad ( req_classad )	1414:1:37438:37470	807212	29	True				
ANR	808543	CallExpression	rip -> r_cur -> setad ( req_classad )		807212	0					
ANR	808544	Callee	rip -> r_cur -> setad		807212	0					
ANR	808545	PtrMemberAccess	rip -> r_cur -> setad		807212	0					
ANR	808546	PtrMemberAccess	rip -> r_cur		807212	0					
ANR	808547	Identifier	rip		807212	0					
ANR	808548	Identifier	r_cur		807212	1					
ANR	808549	Identifier	setad		807212	1					
ANR	808550	ArgumentList	req_classad		807212	1					
ANR	808551	Argument	req_classad		807212	0					
ANR	808552	Identifier	req_classad		807212	0					
ANR	808553	ExpressionStatement	rip -> r_cur -> setrank ( rank )	1415:1:37473:37500	807212	30	True				
ANR	808554	CallExpression	rip -> r_cur -> setrank ( rank )		807212	0					
ANR	808555	Callee	rip -> r_cur -> setrank		807212	0					
ANR	808556	PtrMemberAccess	rip -> r_cur -> setrank		807212	0					
ANR	808557	PtrMemberAccess	rip -> r_cur		807212	0					
ANR	808558	Identifier	rip		807212	0					
ANR	808559	Identifier	r_cur		807212	1					
ANR	808560	Identifier	setrank		807212	1					
ANR	808561	ArgumentList	rank		807212	1					
ANR	808562	Argument	rank		807212	0					
ANR	808563	Identifier	rank		807212	0					
ANR	808564	ExpressionStatement	rip -> r_cur -> setoldrank ( oldrank )	1416:1:37503:37536	807212	31	True				
ANR	808565	CallExpression	rip -> r_cur -> setoldrank ( oldrank )		807212	0					
ANR	808566	Callee	rip -> r_cur -> setoldrank		807212	0					
ANR	808567	PtrMemberAccess	rip -> r_cur -> setoldrank		807212	0					
ANR	808568	PtrMemberAccess	rip -> r_cur		807212	0					
ANR	808569	Identifier	rip		807212	0					
ANR	808570	Identifier	r_cur		807212	1					
ANR	808571	Identifier	setoldrank		807212	1					
ANR	808572	ArgumentList	oldrank		807212	1					
ANR	808573	Argument	oldrank		807212	0					
ANR	808574	Identifier	oldrank		807212	0					
ANR	808575	IfStatement	if ( rip -> state ( ) == backfill_state )		807212	32					
ANR	808576	Condition	rip -> state ( ) == backfill_state	1419:5:37562:37591	807212	0	True				
ANR	808577	EqualityExpression	rip -> state ( ) == backfill_state		807212	0		==			
ANR	808578	CallExpression	rip -> state ( )		807212	0					
ANR	808579	Callee	rip -> state		807212	0					
ANR	808580	PtrMemberAccess	rip -> state		807212	0					
ANR	808581	Identifier	rip		807212	0					
ANR	808582	Identifier	state		807212	1					
ANR	808583	ArgumentList			807212	1					
ANR	808584	Identifier	backfill_state		807212	1					
ANR	808585	CompoundStatement		325:38:10739:10739	807212	1					
ANR	808586	ExpressionStatement	rip -> set_destination_state ( claimed_state )	1425:2:37889:37932	807212	0	True				
ANR	808587	CallExpression	rip -> set_destination_state ( claimed_state )		807212	0					
ANR	808588	Callee	rip -> set_destination_state		807212	0					
ANR	808589	PtrMemberAccess	rip -> set_destination_state		807212	0					
ANR	808590	Identifier	rip		807212	0					
ANR	808591	Identifier	set_destination_state		807212	1					
ANR	808592	ArgumentList	claimed_state		807212	1					
ANR	808593	Argument	claimed_state		807212	0					
ANR	808594	Identifier	claimed_state		807212	0					
ANR	808595	ReturnStatement	return KEEP_STREAM ;	1426:2:37936:37954	807212	1	True				
ANR	808596	Identifier	KEEP_STREAM		807212	0					
ANR	808597	ExpressionStatement	accept_request_claim ( rip )	1436:1:38319:38346	807212	33	True				
ANR	808598	CallExpression	accept_request_claim ( rip )		807212	0					
ANR	808599	Callee	accept_request_claim		807212	0					
ANR	808600	Identifier	accept_request_claim		807212	0					
ANR	808601	ArgumentList	rip		807212	1					
ANR	808602	Argument	rip		807212	0					
ANR	808603	Identifier	rip		807212	0					
ANR	808604	ReturnStatement	return KEEP_STREAM ;	1440:1:38473:38491	807212	34	True				
ANR	808605	Identifier	KEEP_STREAM		807212	0					
ANR	808606	ReturnType	int		807212	1					
ANR	808607	Identifier	request_claim		807212	2					
ANR	808608	ParameterList	"Resource * rip , Claim * claim , char * id , Stream * stream"		807212	3					
ANR	808609	Parameter	Resource * rip	1094:15:26799:26811	807212	0	True				
ANR	808610	ParameterType	Resource *		807212	0					
ANR	808611	Identifier	rip		807212	1					
ANR	808612	Parameter	Claim * claim	1094:30:26814:26825	807212	1	True				
ANR	808613	ParameterType	Claim *		807212	0					
ANR	808614	Identifier	claim		807212	1					
ANR	808615	Parameter	char * id	1094:44:26828:26835	807212	2	True				
ANR	808616	ParameterType	char *		807212	0					
ANR	808617	Identifier	id		807212	1					
ANR	808618	Parameter	Stream * stream	1094:54:26838:26851	807212	3	True				
ANR	808619	ParameterType	Stream *		807212	0					
ANR	808620	Identifier	stream		807212	1					
ANR	808621	CFGEntryNode	ENTRY		807212		True				
ANR	808622	CFGExitNode	EXIT		807212		True				
ANR	808623	Symbol	rip -> r_pre -> rank		807212						
ANR	808624	Symbol	oldrank		807212						
ANR	808625	Symbol	ATTR_REQUEST_CPUS		807212						
ANR	808626	Symbol	mach_requirements		807212						
ANR	808627	Symbol	resmgr -> buildSlot		807212						
ANR	808628	Symbol	type		807212						
ANR	808629	Symbol	req_classad		807212						
ANR	808630	Symbol	backfill_state		807212						
ANR	808631	Symbol	KEEP_STREAM		807212						
ANR	808632	Symbol	rip -> r_cur -> idMatches		807212						
ANR	808633	Symbol	rip -> r_cur		807212						
ANR	808634	Symbol	cpu_attrs		807212						
ANR	808635	Symbol	A_EVALUATED		807212						
ANR	808636	Symbol	rip		807212						
ANR	808637	Symbol	& type_list		807212						
ANR	808638	Symbol	claim		807212						
ANR	808639	Symbol	rank		807212						
ANR	808640	Symbol	id		807212						
ANR	808641	Symbol	rip -> r_attr		807212						
ANR	808642	Symbol	rip -> state		807212						
ANR	808643	Symbol	rip -> r_pre_pre		807212						
ANR	808644	Symbol	rip -> r_pre_pre -> publicClaimId		807212						
ANR	808645	Symbol	rip -> r_cur -> rank		807212						
ANR	808646	Symbol	rip -> r_pre -> publicClaimId		807212						
ANR	808647	Symbol	NULL		807212						
ANR	808648	Symbol	new_dynamic_slot		807212						
ANR	808649	Symbol	ATTR_REQUIREMENTS		807212						
ANR	808650	Symbol	* resmgr		807212						
ANR	808651	Symbol	A_UPDATE		807212						
ANR	808652	Symbol	idp . publicClaimId		807212						
ANR	808653	Symbol	A_TIMEOUT		807212						
ANR	808654	Symbol	D_FULLDEBUG		807212						
ANR	808655	Symbol	mach_classad -> EvalBool		807212						
ANR	808656	Symbol	D_FAILURE		807212						
ANR	808657	Symbol	ceil		807212						
ANR	808658	Symbol	* req_classad		807212						
ANR	808659	Symbol	rip -> willingToRun		807212						
ANR	808660	Symbol	disk		807212						
ANR	808661	Symbol	* rip -> r_pre_pre		807212						
ANR	808662	Symbol	rip -> r_pre		807212						
ANR	808663	Symbol	idp		807212						
ANR	808664	Symbol	resmgr		807212						
ANR	808665	Symbol	* mach_classad		807212						
ANR	808666	Symbol	* stream		807212						
ANR	808667	Symbol	type . Value		807212						
ANR	808668	Symbol	true		807212						
ANR	808669	Symbol	mach_classad		807212						
ANR	808670	Symbol	interval		807212						
ANR	808671	Symbol	cmd		807212						
ANR	808672	Symbol	unclaimed_state		807212						
ANR	808673	Symbol	rip -> r_pre_pre -> idMatches		807212						
ANR	808674	Symbol	rip -> compute_rank		807212						
ANR	808675	Symbol	* claim		807212						
ANR	808676	Symbol	Resource :: PARTITIONABLE_SLOT		807212						
ANR	808677	Symbol	rip -> r_attr -> get_total_disk		807212						
ANR	808678	Symbol	stream -> end_of_message		807212						
ANR	808679	Symbol	req_classad -> EvalInteger		807212						
ANR	808680	Symbol	* rip		807212						
ANR	808681	Symbol	memory		807212						
ANR	808682	Symbol	* rip -> r_attr		807212						
ANR	808683	Symbol	A_ALL		807212						
ANR	808684	Symbol	* rip -> r_pre		807212						
ANR	808685	Symbol	match_timeout		807212						
ANR	808686	Symbol	claim -> client		807212						
ANR	808687	Symbol	rip -> r_classad		807212						
ANR	808688	Symbol	ATTR_REQUEST_DISK		807212						
ANR	808689	Symbol	stream		807212						
ANR	808690	Symbol	claimed_state		807212						
ANR	808691	Symbol	rip -> r_id		807212						
ANR	808692	Symbol	OK		807212						
ANR	808693	Symbol	new_rip -> r_cur		807212						
ANR	808694	Symbol	* rip -> r_cur		807212						
ANR	808695	Symbol	TargetMachineAttrs		807212						
ANR	808696	Symbol	A_SHARED_SLOT		807212						
ANR	808697	Symbol	* new_rip		807212						
ANR	808698	Symbol	cpus		807212						
ANR	808699	Symbol	max		807212						
ANR	808700	Symbol	false		807212						
ANR	808701	Symbol	D_ALWAYS		807212						
ANR	808702	Symbol	* * rip		807212						
ANR	808703	Symbol	req_classad -> initFromStream		807212						
ANR	808704	Symbol	type_list		807212						
ANR	808705	Symbol	NOT_OK		807212						
ANR	808706	Symbol	stream -> code		807212						
ANR	808707	Symbol	rip -> r_reqexp		807212						
ANR	808708	Symbol	rip -> r_cur -> publicClaimId		807212						
ANR	808709	Symbol	client_addr		807212						
ANR	808710	Symbol	ATTR_REQUEST_MEMORY		807212						
ANR	808711	Symbol	rip -> r_pre -> idMatches		807212						
ANR	808712	Symbol	pre_pre		807212						
ANR	808713	Symbol	rip -> get_feature		807212						
ANR	808714	Symbol	new_rip		807212						
ANR	808715	Symbol	return_code		807212						
ANR	808716	Function	abort_accept_claim	1443:1:38497:39245							
ANR	808717	FunctionDef	"abort_accept_claim (Resource * rip , Stream * stream)"		808716	0					
ANR	808718	CompoundStatement		1448:0:38568:39245	808716	0					
ANR	808719	ExpressionStatement	stream -> encode ( )	1449:1:38571:38587	808716	0	True				
ANR	808720	CallExpression	stream -> encode ( )		808716	0					
ANR	808721	Callee	stream -> encode		808716	0					
ANR	808722	PtrMemberAccess	stream -> encode		808716	0					
ANR	808723	Identifier	stream		808716	0					
ANR	808724	Identifier	encode		808716	1					
ANR	808725	ArgumentList			808716	1					
ANR	808726	ExpressionStatement	stream -> end_of_message ( )	1450:1:38590:38614	808716	1	True				
ANR	808727	CallExpression	stream -> end_of_message ( )		808716	0					
ANR	808728	Callee	stream -> end_of_message		808716	0					
ANR	808729	PtrMemberAccess	stream -> end_of_message		808716	0					
ANR	808730	Identifier	stream		808716	0					
ANR	808731	Identifier	end_of_message		808716	1					
ANR	808732	ArgumentList			808716	1					
ANR	808733	ExpressionStatement	rip -> r_cur -> setRequestStream ( NULL )	1451:1:38617:38653	808716	2	True				
ANR	808734	CallExpression	rip -> r_cur -> setRequestStream ( NULL )		808716	0					
ANR	808735	Callee	rip -> r_cur -> setRequestStream		808716	0					
ANR	808736	PtrMemberAccess	rip -> r_cur -> setRequestStream		808716	0					
ANR	808737	PtrMemberAccess	rip -> r_cur		808716	0					
ANR	808738	Identifier	rip		808716	0					
ANR	808739	Identifier	r_cur		808716	1					
ANR	808740	Identifier	setRequestStream		808716	1					
ANR	808741	ArgumentList	NULL		808716	1					
ANR	808742	Argument	NULL		808716	0					
ANR	808743	Identifier	NULL		808716	0					
ANR	808744	IfStatement	if ( rip -> state ( ) == backfill_state && rip -> destination_state ( ) != owner_state )		808716	3					
ANR	808745	Condition	rip -> state ( ) == backfill_state && rip -> destination_state ( ) != owner_state	1453:5:38678:38752	808716	0	True				
ANR	808746	AndExpression	rip -> state ( ) == backfill_state && rip -> destination_state ( ) != owner_state		808716	0		&&			
ANR	808747	EqualityExpression	rip -> state ( ) == backfill_state		808716	0		==			
ANR	808748	CallExpression	rip -> state ( )		808716	0					
ANR	808749	Callee	rip -> state		808716	0					
ANR	808750	PtrMemberAccess	rip -> state		808716	0					
ANR	808751	Identifier	rip		808716	0					
ANR	808752	Identifier	state		808716	1					
ANR	808753	ArgumentList			808716	1					
ANR	808754	Identifier	backfill_state		808716	1					
ANR	808755	EqualityExpression	rip -> destination_state ( ) != owner_state		808716	1		!=			
ANR	808756	CallExpression	rip -> destination_state ( )		808716	0					
ANR	808757	Callee	rip -> destination_state		808716	0					
ANR	808758	PtrMemberAccess	rip -> destination_state		808716	0					
ANR	808759	Identifier	rip		808716	0					
ANR	808760	Identifier	destination_state		808716	1					
ANR	808761	ArgumentList			808716	1					
ANR	808762	Identifier	owner_state		808716	1					
ANR	808763	CompoundStatement		8:1:187:187	808716	1					
ANR	808764	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Claiming protocol failed\\n"" )"	1462:2:38988:39042	808716	0	True				
ANR	808765	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Claiming protocol failed\\n"" )"		808716	0					
ANR	808766	Callee	rip -> dprintf		808716	0					
ANR	808767	PtrMemberAccess	rip -> dprintf		808716	0					
ANR	808768	Identifier	rip		808716	0					
ANR	808769	Identifier	dprintf		808716	1					
ANR	808770	ArgumentList	D_ALWAYS		808716	1					
ANR	808771	Argument	D_ALWAYS		808716	0					
ANR	808772	Identifier	D_ALWAYS		808716	0					
ANR	808773	Argument	"""Claiming protocol failed\\n"""		808716	1					
ANR	808774	PrimaryExpression	"""Claiming protocol failed\\n"""		808716	0					
ANR	808775	ExpressionStatement	rip -> set_destination_state ( owner_state )	1463:2:39046:39087	808716	1	True				
ANR	808776	CallExpression	rip -> set_destination_state ( owner_state )		808716	0					
ANR	808777	Callee	rip -> set_destination_state		808716	0					
ANR	808778	PtrMemberAccess	rip -> set_destination_state		808716	0					
ANR	808779	Identifier	rip		808716	0					
ANR	808780	Identifier	set_destination_state		808716	1					
ANR	808781	ArgumentList	owner_state		808716	1					
ANR	808782	Argument	owner_state		808716	0					
ANR	808783	Identifier	owner_state		808716	0					
ANR	808784	ReturnStatement	return ;	1464:2:39091:39097	808716	2	True				
ANR	808785	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""State change: claiming protocol failed\\n"" )"	1468:1:39131:39199	808716	4	True				
ANR	808786	CallExpression	"rip -> dprintf ( D_ALWAYS , ""State change: claiming protocol failed\\n"" )"		808716	0					
ANR	808787	Callee	rip -> dprintf		808716	0					
ANR	808788	PtrMemberAccess	rip -> dprintf		808716	0					
ANR	808789	Identifier	rip		808716	0					
ANR	808790	Identifier	dprintf		808716	1					
ANR	808791	ArgumentList	D_ALWAYS		808716	1					
ANR	808792	Argument	D_ALWAYS		808716	0					
ANR	808793	Identifier	D_ALWAYS		808716	0					
ANR	808794	Argument	"""State change: claiming protocol failed\\n"""		808716	1					
ANR	808795	PrimaryExpression	"""State change: claiming protocol failed\\n"""		808716	0					
ANR	808796	ExpressionStatement	rip -> change_state ( owner_state )	1469:1:39202:39234	808716	5	True				
ANR	808797	CallExpression	rip -> change_state ( owner_state )		808716	0					
ANR	808798	Callee	rip -> change_state		808716	0					
ANR	808799	PtrMemberAccess	rip -> change_state		808716	0					
ANR	808800	Identifier	rip		808716	0					
ANR	808801	Identifier	change_state		808716	1					
ANR	808802	ArgumentList	owner_state		808716	1					
ANR	808803	Argument	owner_state		808716	0					
ANR	808804	Identifier	owner_state		808716	0					
ANR	808805	ReturnStatement	return ;	1470:1:39237:39243	808716	6	True				
ANR	808806	ReturnType	undef ABORT void		808716	1					
ANR	808807	Identifier	abort_accept_claim		808716	2					
ANR	808808	ParameterList	"Resource * rip , Stream * stream"		808716	3					
ANR	808809	Parameter	Resource * rip	1447:20:38536:38548	808716	0	True				
ANR	808810	ParameterType	Resource *		808716	0					
ANR	808811	Identifier	rip		808716	1					
ANR	808812	Parameter	Stream * stream	1447:35:38551:38564	808716	1	True				
ANR	808813	ParameterType	Stream *		808716	0					
ANR	808814	Identifier	stream		808716	1					
ANR	808815	CFGEntryNode	ENTRY		808716		True				
ANR	808816	CFGExitNode	EXIT		808716		True				
ANR	808817	Symbol	* rip		808716						
ANR	808818	Symbol	NULL		808716						
ANR	808819	Symbol	stream		808716						
ANR	808820	Symbol	rip -> r_cur		808716						
ANR	808821	Symbol	rip -> destination_state		808716						
ANR	808822	Symbol	rip		808716						
ANR	808823	Symbol	D_ALWAYS		808716						
ANR	808824	Symbol	rip -> state		808716						
ANR	808825	Symbol	owner_state		808716						
ANR	808826	Symbol	backfill_state		808716						
ANR	808827	Function	accept_request_claim	1474:0:39249:42792							
ANR	808828	FunctionDef	accept_request_claim (Resource * rip)		808827	0					
ANR	808829	CompoundStatement		1476:0:39292:42792	808827	0					
ANR	808830	IdentifierDeclStatement	int interval = - 1 ;	1477:1:39295:39312	808827	0	True				
ANR	808831	IdentifierDecl	interval = - 1		808827	0					
ANR	808832	IdentifierDeclType	int		808827	0					
ANR	808833	Identifier	interval		808827	1					
ANR	808834	AssignmentExpression	interval = - 1		808827	2		=			
ANR	808835	Identifier	interval		808827	0					
ANR	808836	UnaryOperationExpression	- 1		808827	1					
ANR	808837	UnaryOperator	-		808827	0					
ANR	808838	PrimaryExpression	1		808827	1					
ANR	808839	IdentifierDeclStatement	char * client_addr = NULL ;	1478:1:39315:39339	808827	1	True				
ANR	808840	IdentifierDecl	* client_addr = NULL		808827	0					
ANR	808841	IdentifierDeclType	char *		808827	0					
ANR	808842	Identifier	client_addr		808827	1					
ANR	808843	AssignmentExpression	* client_addr = NULL		808827	2		=			
ANR	808844	Identifier	NULL		808827	0					
ANR	808845	Identifier	NULL		808827	1					
ANR	808846	IdentifierDeclStatement	char RemoteOwner [ 512 ] ;	1479:1:39342:39363	808827	2	True				
ANR	808847	IdentifierDecl	RemoteOwner [ 512 ]		808827	0					
ANR	808848	IdentifierDeclType	char [ 512 ]		808827	0					
ANR	808849	Identifier	RemoteOwner		808827	1					
ANR	808850	PrimaryExpression	512		808827	2					
ANR	808851	ExpressionStatement	RemoteOwner [ 0 ] = '\\0'	1480:1:39366:39387	808827	3	True				
ANR	808852	AssignmentExpression	RemoteOwner [ 0 ] = '\\0'		808827	0		=			
ANR	808853	ArrayIndexing	RemoteOwner [ 0 ]		808827	0					
ANR	808854	Identifier	RemoteOwner		808827	0					
ANR	808855	PrimaryExpression	0		808827	1					
ANR	808856	PrimaryExpression	'\\0'		808827	1					
ANR	808857	ExpressionStatement	ASSERT ( rip -> r_pre == NULL )	1483:1:39440:39468	808827	4	True				
ANR	808858	CallExpression	ASSERT ( rip -> r_pre == NULL )		808827	0					
ANR	808859	Callee	ASSERT		808827	0					
ANR	808860	Identifier	ASSERT		808827	0					
ANR	808861	ArgumentList	rip -> r_pre == NULL		808827	1					
ANR	808862	Argument	rip -> r_pre == NULL		808827	0					
ANR	808863	EqualityExpression	rip -> r_pre == NULL		808827	0		==			
ANR	808864	PtrMemberAccess	rip -> r_pre		808827	0					
ANR	808865	Identifier	rip		808827	0					
ANR	808866	Identifier	r_pre		808827	1					
ANR	808867	Identifier	NULL		808827	1					
ANR	808868	IdentifierDeclStatement	Stream * stream = rip -> r_cur -> requestStream ( ) ;	1485:1:39472:39516	808827	5	True				
ANR	808869	IdentifierDecl	* stream = rip -> r_cur -> requestStream ( )		808827	0					
ANR	808870	IdentifierDeclType	Stream *		808827	0					
ANR	808871	Identifier	stream		808827	1					
ANR	808872	AssignmentExpression	* stream = rip -> r_cur -> requestStream ( )		808827	2		=			
ANR	808873	Identifier	stream		808827	0					
ANR	808874	CallExpression	rip -> r_cur -> requestStream ( )		808827	1					
ANR	808875	Callee	rip -> r_cur -> requestStream		808827	0					
ANR	808876	PtrMemberAccess	rip -> r_cur -> requestStream		808827	0					
ANR	808877	PtrMemberAccess	rip -> r_cur		808827	0					
ANR	808878	Identifier	rip		808827	0					
ANR	808879	Identifier	r_cur		808827	1					
ANR	808880	Identifier	requestStream		808827	1					
ANR	808881	ArgumentList			808827	1					
ANR	808882	ExpressionStatement	ASSERT ( stream )	1486:1:39519:39535	808827	6	True				
ANR	808883	CallExpression	ASSERT ( stream )		808827	0					
ANR	808884	Callee	ASSERT		808827	0					
ANR	808885	Identifier	ASSERT		808827	0					
ANR	808886	ArgumentList	stream		808827	1					
ANR	808887	Argument	stream		808827	0					
ANR	808888	Identifier	stream		808827	0					
ANR	808889	IdentifierDeclStatement	Sock * sock = ( Sock * ) stream ;	1487:1:39538:39564	808827	7	True				
ANR	808890	IdentifierDecl	* sock = ( Sock * ) stream		808827	0					
ANR	808891	IdentifierDeclType	Sock *		808827	0					
ANR	808892	Identifier	sock		808827	1					
ANR	808893	AssignmentExpression	* sock = ( Sock * ) stream		808827	2		=			
ANR	808894	Identifier	sock		808827	0					
ANR	808895	CastExpression	( Sock * ) stream		808827	1					
ANR	808896	CastTarget	Sock *		808827	0					
ANR	808897	Identifier	stream		808827	1					
ANR	808898	ExpressionStatement	stream -> encode ( )	1489:1:39568:39584	808827	8	True				
ANR	808899	CallExpression	stream -> encode ( )		808827	0					
ANR	808900	Callee	stream -> encode		808827	0					
ANR	808901	PtrMemberAccess	stream -> encode		808827	0					
ANR	808902	Identifier	stream		808827	0					
ANR	808903	Identifier	encode		808827	1					
ANR	808904	ArgumentList			808827	1					
ANR	808905	IfStatement	if ( ! stream -> put ( OK ) )		808827	9					
ANR	808906	Condition	! stream -> put ( OK )	1490:5:39591:39608	808827	0	True				
ANR	808907	UnaryOperationExpression	! stream -> put ( OK )		808827	0					
ANR	808908	UnaryOperator	!		808827	0					
ANR	808909	CallExpression	stream -> put ( OK )		808827	1					
ANR	808910	Callee	stream -> put		808827	0					
ANR	808911	PtrMemberAccess	stream -> put		808827	0					
ANR	808912	Identifier	stream		808827	0					
ANR	808913	Identifier	put		808827	1					
ANR	808914	ArgumentList	OK		808827	1					
ANR	808915	Argument	OK		808827	0					
ANR	808916	Identifier	OK		808827	0					
ANR	808917	CompoundStatement		15:26:319:319	808827	1					
ANR	808918	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Can't to send cmd to schedd.\\n"" )"	1491:2:39616:39674	808827	0	True				
ANR	808919	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Can't to send cmd to schedd.\\n"" )"		808827	0					
ANR	808920	Callee	rip -> dprintf		808827	0					
ANR	808921	PtrMemberAccess	rip -> dprintf		808827	0					
ANR	808922	Identifier	rip		808827	0					
ANR	808923	Identifier	dprintf		808827	1					
ANR	808924	ArgumentList	D_ALWAYS		808827	1					
ANR	808925	Argument	D_ALWAYS		808827	0					
ANR	808926	Identifier	D_ALWAYS		808827	0					
ANR	808927	Argument	"""Can't to send cmd to schedd.\\n"""		808827	1					
ANR	808928	PrimaryExpression	"""Can't to send cmd to schedd.\\n"""		808827	0					
ANR	808929	ExpressionStatement	"abort_accept_claim ( rip , stream )"	1492:2:39678:39711	808827	1	True				
ANR	808930	CallExpression	"abort_accept_claim ( rip , stream )"		808827	0					
ANR	808931	Callee	abort_accept_claim		808827	0					
ANR	808932	Identifier	abort_accept_claim		808827	0					
ANR	808933	ArgumentList	rip		808827	1					
ANR	808934	Argument	rip		808827	0					
ANR	808935	Identifier	rip		808827	0					
ANR	808936	Argument	stream		808827	1					
ANR	808937	Identifier	stream		808827	0					
ANR	808938	ReturnStatement	return false ;	1493:2:39715:39727	808827	2	True				
ANR	808939	Identifier	false		808827	0					
ANR	808940	IfStatement	if ( ! stream -> end_of_message ( ) )		808827	10					
ANR	808941	Condition	! stream -> end_of_message ( )	1495:5:39737:39761	808827	0	True				
ANR	808942	UnaryOperationExpression	! stream -> end_of_message ( )		808827	0					
ANR	808943	UnaryOperator	!		808827	0					
ANR	808944	CallExpression	stream -> end_of_message ( )		808827	1					
ANR	808945	Callee	stream -> end_of_message		808827	0					
ANR	808946	PtrMemberAccess	stream -> end_of_message		808827	0					
ANR	808947	Identifier	stream		808827	0					
ANR	808948	Identifier	end_of_message		808827	1					
ANR	808949	ArgumentList			808827	1					
ANR	808950	CompoundStatement		20:33:472:472	808827	1					
ANR	808951	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Can't to send eom to schedd.\\n"" )"	1496:2:39769:39827	808827	0	True				
ANR	808952	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Can't to send eom to schedd.\\n"" )"		808827	0					
ANR	808953	Callee	rip -> dprintf		808827	0					
ANR	808954	PtrMemberAccess	rip -> dprintf		808827	0					
ANR	808955	Identifier	rip		808827	0					
ANR	808956	Identifier	dprintf		808827	1					
ANR	808957	ArgumentList	D_ALWAYS		808827	1					
ANR	808958	Argument	D_ALWAYS		808827	0					
ANR	808959	Identifier	D_ALWAYS		808827	0					
ANR	808960	Argument	"""Can't to send eom to schedd.\\n"""		808827	1					
ANR	808961	PrimaryExpression	"""Can't to send eom to schedd.\\n"""		808827	0					
ANR	808962	ExpressionStatement	"abort_accept_claim ( rip , stream )"	1497:2:39831:39864	808827	1	True				
ANR	808963	CallExpression	"abort_accept_claim ( rip , stream )"		808827	0					
ANR	808964	Callee	abort_accept_claim		808827	0					
ANR	808965	Identifier	abort_accept_claim		808827	0					
ANR	808966	ArgumentList	rip		808827	1					
ANR	808967	Argument	rip		808827	0					
ANR	808968	Identifier	rip		808827	0					
ANR	808969	Argument	stream		808827	1					
ANR	808970	Identifier	stream		808827	0					
ANR	808971	ReturnStatement	return false ;	1498:2:39868:39880	808827	2	True				
ANR	808972	Identifier	false		808827	0					
ANR	808973	IfStatement	if ( rip -> r_cur -> getaliveint ( ) == - 1 )		808827	11					
ANR	808974	Condition	rip -> r_cur -> getaliveint ( ) == - 1	1506:6:40293:40323	808827	0	True				
ANR	808975	EqualityExpression	rip -> r_cur -> getaliveint ( ) == - 1		808827	0		==			
ANR	808976	CallExpression	rip -> r_cur -> getaliveint ( )		808827	0					
ANR	808977	Callee	rip -> r_cur -> getaliveint		808827	0					
ANR	808978	PtrMemberAccess	rip -> r_cur -> getaliveint		808827	0					
ANR	808979	PtrMemberAccess	rip -> r_cur		808827	0					
ANR	808980	Identifier	rip		808827	0					
ANR	808981	Identifier	r_cur		808827	1					
ANR	808982	Identifier	getaliveint		808827	1					
ANR	808983	ArgumentList			808827	1					
ANR	808984	UnaryOperationExpression	- 1		808827	1					
ANR	808985	UnaryOperator	-		808827	0					
ANR	808986	PrimaryExpression	1		808827	1					
ANR	808987	CompoundStatement		31:40:1034:1034	808827	1					
ANR	808988	ExpressionStatement	stream -> decode ( )	1507:2:40331:40347	808827	0	True				
ANR	808989	CallExpression	stream -> decode ( )		808827	0					
ANR	808990	Callee	stream -> decode		808827	0					
ANR	808991	PtrMemberAccess	stream -> decode		808827	0					
ANR	808992	Identifier	stream		808827	0					
ANR	808993	Identifier	decode		808827	1					
ANR	808994	ArgumentList			808827	1					
ANR	808995	IfStatement	if ( ! stream -> code ( client_addr ) )		808827	1					
ANR	808996	Condition	! stream -> code ( client_addr )	1508:6:40355:40381	808827	0	True				
ANR	808997	UnaryOperationExpression	! stream -> code ( client_addr )		808827	0					
ANR	808998	UnaryOperator	!		808827	0					
ANR	808999	CallExpression	stream -> code ( client_addr )		808827	1					
ANR	809000	Callee	stream -> code		808827	0					
ANR	809001	PtrMemberAccess	stream -> code		808827	0					
ANR	809002	Identifier	stream		808827	0					
ANR	809003	Identifier	code		808827	1					
ANR	809004	ArgumentList	client_addr		808827	1					
ANR	809005	Argument	client_addr		808827	0					
ANR	809006	Identifier	client_addr		808827	0					
ANR	809007	CompoundStatement		33:36:1092:1092	808827	1					
ANR	809008	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Can't receive schedd addr.\\n"" )"	1509:3:40390:40446	808827	0	True				
ANR	809009	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Can't receive schedd addr.\\n"" )"		808827	0					
ANR	809010	Callee	rip -> dprintf		808827	0					
ANR	809011	PtrMemberAccess	rip -> dprintf		808827	0					
ANR	809012	Identifier	rip		808827	0					
ANR	809013	Identifier	dprintf		808827	1					
ANR	809014	ArgumentList	D_ALWAYS		808827	1					
ANR	809015	Argument	D_ALWAYS		808827	0					
ANR	809016	Identifier	D_ALWAYS		808827	0					
ANR	809017	Argument	"""Can't receive schedd addr.\\n"""		808827	1					
ANR	809018	PrimaryExpression	"""Can't receive schedd addr.\\n"""		808827	0					
ANR	809019	ExpressionStatement	"abort_accept_claim ( rip , stream )"	1510:3:40451:40484	808827	1	True				
ANR	809020	CallExpression	"abort_accept_claim ( rip , stream )"		808827	0					
ANR	809021	Callee	abort_accept_claim		808827	0					
ANR	809022	Identifier	abort_accept_claim		808827	0					
ANR	809023	ArgumentList	rip		808827	1					
ANR	809024	Argument	rip		808827	0					
ANR	809025	Identifier	rip		808827	0					
ANR	809026	Argument	stream		808827	1					
ANR	809027	Identifier	stream		808827	0					
ANR	809028	ReturnStatement	return false ;	1511:3:40489:40501	808827	2	True				
ANR	809029	Identifier	false		808827	0					
ANR	809030	ElseStatement	else		808827	0					
ANR	809031	CompoundStatement		37:9:1219:1219	808827	0					
ANR	809032	ExpressionStatement	"rip -> dprintf ( D_FULLDEBUG , ""Schedd addr = %s\\n"" , client_addr )"	1513:3:40517:40579	808827	0	True				
ANR	809033	CallExpression	"rip -> dprintf ( D_FULLDEBUG , ""Schedd addr = %s\\n"" , client_addr )"		808827	0					
ANR	809034	Callee	rip -> dprintf		808827	0					
ANR	809035	PtrMemberAccess	rip -> dprintf		808827	0					
ANR	809036	Identifier	rip		808827	0					
ANR	809037	Identifier	dprintf		808827	1					
ANR	809038	ArgumentList	D_FULLDEBUG		808827	1					
ANR	809039	Argument	D_FULLDEBUG		808827	0					
ANR	809040	Identifier	D_FULLDEBUG		808827	0					
ANR	809041	Argument	"""Schedd addr = %s\\n"""		808827	1					
ANR	809042	PrimaryExpression	"""Schedd addr = %s\\n"""		808827	0					
ANR	809043	Argument	client_addr		808827	2					
ANR	809044	Identifier	client_addr		808827	0					
ANR	809045	IfStatement	if ( ! stream -> code ( interval ) )		808827	2					
ANR	809046	Condition	! stream -> code ( interval )	1515:6:40591:40613	808827	0	True				
ANR	809047	UnaryOperationExpression	! stream -> code ( interval )		808827	0					
ANR	809048	UnaryOperator	!		808827	0					
ANR	809049	CallExpression	stream -> code ( interval )		808827	1					
ANR	809050	Callee	stream -> code		808827	0					
ANR	809051	PtrMemberAccess	stream -> code		808827	0					
ANR	809052	Identifier	stream		808827	0					
ANR	809053	Identifier	code		808827	1					
ANR	809054	ArgumentList	interval		808827	1					
ANR	809055	Argument	interval		808827	0					
ANR	809056	Identifier	interval		808827	0					
ANR	809057	CompoundStatement		40:32:1324:1324	808827	1					
ANR	809058	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Can't receive alive interval\\n"" )"	1516:3:40622:40680	808827	0	True				
ANR	809059	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Can't receive alive interval\\n"" )"		808827	0					
ANR	809060	Callee	rip -> dprintf		808827	0					
ANR	809061	PtrMemberAccess	rip -> dprintf		808827	0					
ANR	809062	Identifier	rip		808827	0					
ANR	809063	Identifier	dprintf		808827	1					
ANR	809064	ArgumentList	D_ALWAYS		808827	1					
ANR	809065	Argument	D_ALWAYS		808827	0					
ANR	809066	Identifier	D_ALWAYS		808827	0					
ANR	809067	Argument	"""Can't receive alive interval\\n"""		808827	1					
ANR	809068	PrimaryExpression	"""Can't receive alive interval\\n"""		808827	0					
ANR	809069	ExpressionStatement	free ( client_addr )	1517:3:40685:40704	808827	1	True				
ANR	809070	CallExpression	free ( client_addr )		808827	0					
ANR	809071	Callee	free		808827	0					
ANR	809072	Identifier	free		808827	0					
ANR	809073	ArgumentList	client_addr		808827	1					
ANR	809074	Argument	client_addr		808827	0					
ANR	809075	Identifier	client_addr		808827	0					
ANR	809076	ExpressionStatement	client_addr = NULL	1518:3:40709:40727	808827	2	True				
ANR	809077	AssignmentExpression	client_addr = NULL		808827	0		=			
ANR	809078	Identifier	client_addr		808827	0					
ANR	809079	Identifier	NULL		808827	1					
ANR	809080	ExpressionStatement	"abort_accept_claim ( rip , stream )"	1519:3:40732:40765	808827	3	True				
ANR	809081	CallExpression	"abort_accept_claim ( rip , stream )"		808827	0					
ANR	809082	Callee	abort_accept_claim		808827	0					
ANR	809083	Identifier	abort_accept_claim		808827	0					
ANR	809084	ArgumentList	rip		808827	1					
ANR	809085	Argument	rip		808827	0					
ANR	809086	Identifier	rip		808827	0					
ANR	809087	Argument	stream		808827	1					
ANR	809088	Identifier	stream		808827	0					
ANR	809089	ReturnStatement	return false ;	1520:3:40770:40782	808827	4	True				
ANR	809090	Identifier	false		808827	0					
ANR	809091	ElseStatement	else		808827	0					
ANR	809092	CompoundStatement		46:9:1500:1500	808827	0					
ANR	809093	ExpressionStatement	"rip -> dprintf ( D_FULLDEBUG , ""Alive interval = %d\\n"" , interval )"	1522:3:40798:40860	808827	0	True				
ANR	809094	CallExpression	"rip -> dprintf ( D_FULLDEBUG , ""Alive interval = %d\\n"" , interval )"		808827	0					
ANR	809095	Callee	rip -> dprintf		808827	0					
ANR	809096	PtrMemberAccess	rip -> dprintf		808827	0					
ANR	809097	Identifier	rip		808827	0					
ANR	809098	Identifier	dprintf		808827	1					
ANR	809099	ArgumentList	D_FULLDEBUG		808827	1					
ANR	809100	Argument	D_FULLDEBUG		808827	0					
ANR	809101	Identifier	D_FULLDEBUG		808827	0					
ANR	809102	Argument	"""Alive interval = %d\\n"""		808827	1					
ANR	809103	PrimaryExpression	"""Alive interval = %d\\n"""		808827	0					
ANR	809104	Argument	interval		808827	2					
ANR	809105	Identifier	interval		808827	0					
ANR	809106	ExpressionStatement	stream -> end_of_message ( )	1524:2:40868:40892	808827	3	True				
ANR	809107	CallExpression	stream -> end_of_message ( )		808827	0					
ANR	809108	Callee	stream -> end_of_message		808827	0					
ANR	809109	PtrMemberAccess	stream -> end_of_message		808827	0					
ANR	809110	Identifier	stream		808827	0					
ANR	809111	Identifier	end_of_message		808827	1					
ANR	809112	ArgumentList			808827	1					
ANR	809113	ExpressionStatement	rip -> r_cur -> setaliveint ( interval )	1527:2:40930:40965	808827	4	True				
ANR	809114	CallExpression	rip -> r_cur -> setaliveint ( interval )		808827	0					
ANR	809115	Callee	rip -> r_cur -> setaliveint		808827	0					
ANR	809116	PtrMemberAccess	rip -> r_cur -> setaliveint		808827	0					
ANR	809117	PtrMemberAccess	rip -> r_cur		808827	0					
ANR	809118	Identifier	rip		808827	0					
ANR	809119	Identifier	r_cur		808827	1					
ANR	809120	Identifier	setaliveint		808827	1					
ANR	809121	ArgumentList	interval		808827	1					
ANR	809122	Argument	interval		808827	0					
ANR	809123	Identifier	interval		808827	0					
ANR	809124	ExpressionStatement	rip -> r_cur -> client ( ) -> setaddr ( client_addr )	1528:2:40969:41013	808827	5	True				
ANR	809125	CallExpression	rip -> r_cur -> client ( ) -> setaddr ( client_addr )		808827	0					
ANR	809126	Callee	rip -> r_cur -> client ( ) -> setaddr		808827	0					
ANR	809127	PtrMemberAccess	rip -> r_cur -> client ( ) -> setaddr		808827	0					
ANR	809128	CallExpression	rip -> r_cur -> client ( )		808827	0					
ANR	809129	Callee	rip -> r_cur -> client		808827	0					
ANR	809130	PtrMemberAccess	rip -> r_cur -> client		808827	0					
ANR	809131	PtrMemberAccess	rip -> r_cur		808827	0					
ANR	809132	Identifier	rip		808827	0					
ANR	809133	Identifier	r_cur		808827	1					
ANR	809134	Identifier	client		808827	1					
ANR	809135	ArgumentList			808827	1					
ANR	809136	Identifier	setaddr		808827	1					
ANR	809137	ArgumentList	client_addr		808827	1					
ANR	809138	Argument	client_addr		808827	0					
ANR	809139	Identifier	client_addr		808827	0					
ANR	809140	ExpressionStatement	free ( client_addr )	1529:2:41017:41036	808827	6	True				
ANR	809141	CallExpression	free ( client_addr )		808827	0					
ANR	809142	Callee	free		808827	0					
ANR	809143	Identifier	free		808827	0					
ANR	809144	ArgumentList	client_addr		808827	1					
ANR	809145	Argument	client_addr		808827	0					
ANR	809146	Identifier	client_addr		808827	0					
ANR	809147	ExpressionStatement	client_addr = NULL	1530:2:41040:41058	808827	7	True				
ANR	809148	AssignmentExpression	client_addr = NULL		808827	0		=			
ANR	809149	Identifier	client_addr		808827	0					
ANR	809150	Identifier	NULL		808827	1					
ANR	809151	ExpressionStatement	ASSERT ( sock -> peer_addr ( ) . is_valid ( ) )	1534:1:41109:41145	808827	12	True				
ANR	809152	CallExpression	ASSERT ( sock -> peer_addr ( ) . is_valid ( ) )		808827	0					
ANR	809153	Callee	ASSERT		808827	0					
ANR	809154	Identifier	ASSERT		808827	0					
ANR	809155	ArgumentList	sock -> peer_addr ( ) . is_valid ( )		808827	1					
ANR	809156	Argument	sock -> peer_addr ( ) . is_valid ( )		808827	0					
ANR	809157	CallExpression	sock -> peer_addr ( ) . is_valid ( )		808827	0					
ANR	809158	Callee	sock -> peer_addr ( ) . is_valid		808827	0					
ANR	809159	MemberAccess	sock -> peer_addr ( ) . is_valid		808827	0					
ANR	809160	CallExpression	sock -> peer_addr ( )		808827	0					
ANR	809161	Callee	sock -> peer_addr		808827	0					
ANR	809162	PtrMemberAccess	sock -> peer_addr		808827	0					
ANR	809163	Identifier	sock		808827	0					
ANR	809164	Identifier	peer_addr		808827	1					
ANR	809165	ArgumentList			808827	1					
ANR	809166	Identifier	is_valid		808827	1					
ANR	809167	ArgumentList			808827	1					
ANR	809168	IdentifierDeclStatement	MyString hostname = get_full_hostname ( sock -> peer_addr ( ) ) ;	1535:1:41148:41204	808827	13	True				
ANR	809169	IdentifierDecl	hostname = get_full_hostname ( sock -> peer_addr ( ) )		808827	0					
ANR	809170	IdentifierDeclType	MyString		808827	0					
ANR	809171	Identifier	hostname		808827	1					
ANR	809172	AssignmentExpression	hostname = get_full_hostname ( sock -> peer_addr ( ) )		808827	2		=			
ANR	809173	Identifier	hostname		808827	0					
ANR	809174	CallExpression	get_full_hostname ( sock -> peer_addr ( ) )		808827	1					
ANR	809175	Callee	get_full_hostname		808827	0					
ANR	809176	Identifier	get_full_hostname		808827	0					
ANR	809177	ArgumentList	sock -> peer_addr ( )		808827	1					
ANR	809178	Argument	sock -> peer_addr ( )		808827	0					
ANR	809179	CallExpression	sock -> peer_addr ( )		808827	0					
ANR	809180	Callee	sock -> peer_addr		808827	0					
ANR	809181	PtrMemberAccess	sock -> peer_addr		808827	0					
ANR	809182	Identifier	sock		808827	0					
ANR	809183	Identifier	peer_addr		808827	1					
ANR	809184	ArgumentList			808827	1					
ANR	809185	IfStatement	if ( hostname . IsEmpty ( ) )		808827	14					
ANR	809186	Condition	hostname . IsEmpty ( )	1536:4:41210:41227	808827	0	True				
ANR	809187	CallExpression	hostname . IsEmpty ( )		808827	0					
ANR	809188	Callee	hostname . IsEmpty		808827	0					
ANR	809189	MemberAccess	hostname . IsEmpty		808827	0					
ANR	809190	Identifier	hostname		808827	0					
ANR	809191	Identifier	IsEmpty		808827	1					
ANR	809192	ArgumentList			808827	1					
ANR	809193	CompoundStatement		62:2:1941:1987	808827	1					
ANR	809194	IdentifierDeclStatement	MyString ip = sock -> peer_addr ( ) . to_ip_string ( ) ;	1537:2:41234:41280	808827	0	True				
ANR	809195	IdentifierDecl	ip = sock -> peer_addr ( ) . to_ip_string ( )		808827	0					
ANR	809196	IdentifierDeclType	MyString		808827	0					
ANR	809197	Identifier	ip		808827	1					
ANR	809198	AssignmentExpression	ip = sock -> peer_addr ( ) . to_ip_string ( )		808827	2		=			
ANR	809199	Identifier	ip		808827	0					
ANR	809200	CallExpression	sock -> peer_addr ( ) . to_ip_string ( )		808827	1					
ANR	809201	Callee	sock -> peer_addr ( ) . to_ip_string		808827	0					
ANR	809202	MemberAccess	sock -> peer_addr ( ) . to_ip_string		808827	0					
ANR	809203	CallExpression	sock -> peer_addr ( )		808827	0					
ANR	809204	Callee	sock -> peer_addr		808827	0					
ANR	809205	PtrMemberAccess	sock -> peer_addr		808827	0					
ANR	809206	Identifier	sock		808827	0					
ANR	809207	Identifier	peer_addr		808827	1					
ANR	809208	ArgumentList			808827	1					
ANR	809209	Identifier	to_ip_string		808827	1					
ANR	809210	ArgumentList			808827	1					
ANR	809211	ExpressionStatement	"rip -> dprintf ( D_FULLDEBUG , ""Can't find hostname of client machine %s\\n"" , ip . Value ( ) )"	1538:2:41284:41376	808827	1	True				
ANR	809212	CallExpression	"rip -> dprintf ( D_FULLDEBUG , ""Can't find hostname of client machine %s\\n"" , ip . Value ( ) )"		808827	0					
ANR	809213	Callee	rip -> dprintf		808827	0					
ANR	809214	PtrMemberAccess	rip -> dprintf		808827	0					
ANR	809215	Identifier	rip		808827	0					
ANR	809216	Identifier	dprintf		808827	1					
ANR	809217	ArgumentList	D_FULLDEBUG		808827	1					
ANR	809218	Argument	D_FULLDEBUG		808827	0					
ANR	809219	Identifier	D_FULLDEBUG		808827	0					
ANR	809220	Argument	"""Can't find hostname of client machine %s\\n"""		808827	1					
ANR	809221	PrimaryExpression	"""Can't find hostname of client machine %s\\n"""		808827	0					
ANR	809222	Argument	ip . Value ( )		808827	2					
ANR	809223	CallExpression	ip . Value ( )		808827	0					
ANR	809224	Callee	ip . Value		808827	0					
ANR	809225	MemberAccess	ip . Value		808827	0					
ANR	809226	Identifier	ip		808827	0					
ANR	809227	Identifier	Value		808827	1					
ANR	809228	ArgumentList			808827	1					
ANR	809229	ExpressionStatement	rip -> r_cur -> client ( ) -> sethost ( ip . Value ( ) )	1540:2:41380:41421	808827	2	True				
ANR	809230	CallExpression	rip -> r_cur -> client ( ) -> sethost ( ip . Value ( ) )		808827	0					
ANR	809231	Callee	rip -> r_cur -> client ( ) -> sethost		808827	0					
ANR	809232	PtrMemberAccess	rip -> r_cur -> client ( ) -> sethost		808827	0					
ANR	809233	CallExpression	rip -> r_cur -> client ( )		808827	0					
ANR	809234	Callee	rip -> r_cur -> client		808827	0					
ANR	809235	PtrMemberAccess	rip -> r_cur -> client		808827	0					
ANR	809236	PtrMemberAccess	rip -> r_cur		808827	0					
ANR	809237	Identifier	rip		808827	0					
ANR	809238	Identifier	r_cur		808827	1					
ANR	809239	Identifier	client		808827	1					
ANR	809240	ArgumentList			808827	1					
ANR	809241	Identifier	sethost		808827	1					
ANR	809242	ArgumentList	ip . Value ( )		808827	1					
ANR	809243	Argument	ip . Value ( )		808827	0					
ANR	809244	CallExpression	ip . Value ( )		808827	0					
ANR	809245	Callee	ip . Value		808827	0					
ANR	809246	MemberAccess	ip . Value		808827	0					
ANR	809247	Identifier	ip		808827	0					
ANR	809248	Identifier	Value		808827	1					
ANR	809249	ArgumentList			808827	1					
ANR	809250	ElseStatement	else		808827	0					
ANR	809251	CompoundStatement		66:8:2138:2138	808827	0					
ANR	809252	ExpressionStatement	rip -> r_cur -> client ( ) -> sethost ( hostname . Value ( ) )	1542:2:41435:41484	808827	0	True				
ANR	809253	CallExpression	rip -> r_cur -> client ( ) -> sethost ( hostname . Value ( ) )		808827	0					
ANR	809254	Callee	rip -> r_cur -> client ( ) -> sethost		808827	0					
ANR	809255	PtrMemberAccess	rip -> r_cur -> client ( ) -> sethost		808827	0					
ANR	809256	CallExpression	rip -> r_cur -> client ( )		808827	0					
ANR	809257	Callee	rip -> r_cur -> client		808827	0					
ANR	809258	PtrMemberAccess	rip -> r_cur -> client		808827	0					
ANR	809259	PtrMemberAccess	rip -> r_cur		808827	0					
ANR	809260	Identifier	rip		808827	0					
ANR	809261	Identifier	r_cur		808827	1					
ANR	809262	Identifier	client		808827	1					
ANR	809263	ArgumentList			808827	1					
ANR	809264	Identifier	sethost		808827	1					
ANR	809265	ArgumentList	hostname . Value ( )		808827	1					
ANR	809266	Argument	hostname . Value ( )		808827	0					
ANR	809267	CallExpression	hostname . Value ( )		808827	0					
ANR	809268	Callee	hostname . Value		808827	0					
ANR	809269	MemberAccess	hostname . Value		808827	0					
ANR	809270	Identifier	hostname		808827	0					
ANR	809271	Identifier	Value		808827	1					
ANR	809272	ArgumentList			808827	1					
ANR	809273	IfStatement	"if ( ( rip -> r_cur -> ad ( ) ) -> EvalString ( ATTR_USER , rip -> r_cur -> ad ( ) , RemoteOwner ) == 0 )"		808827	15					
ANR	809274	Condition	"( rip -> r_cur -> ad ( ) ) -> EvalString ( ATTR_USER , rip -> r_cur -> ad ( ) , RemoteOwner ) == 0"	1546:5:41556:41637	808827	0	True				
ANR	809275	EqualityExpression	"( rip -> r_cur -> ad ( ) ) -> EvalString ( ATTR_USER , rip -> r_cur -> ad ( ) , RemoteOwner ) == 0"		808827	0		==			
ANR	809276	CallExpression	"( rip -> r_cur -> ad ( ) ) -> EvalString ( ATTR_USER , rip -> r_cur -> ad ( ) , RemoteOwner )"		808827	0					
ANR	809277	Callee	( rip -> r_cur -> ad ( ) ) -> EvalString		808827	0					
ANR	809278	PtrMemberAccess	( rip -> r_cur -> ad ( ) ) -> EvalString		808827	0					
ANR	809279	CallExpression	rip -> r_cur -> ad ( )		808827	0					
ANR	809280	Callee	rip -> r_cur -> ad		808827	0					
ANR	809281	PtrMemberAccess	rip -> r_cur -> ad		808827	0					
ANR	809282	PtrMemberAccess	rip -> r_cur		808827	0					
ANR	809283	Identifier	rip		808827	0					
ANR	809284	Identifier	r_cur		808827	1					
ANR	809285	Identifier	ad		808827	1					
ANR	809286	ArgumentList			808827	1					
ANR	809287	Identifier	EvalString		808827	1					
ANR	809288	ArgumentList	ATTR_USER		808827	1					
ANR	809289	Argument	ATTR_USER		808827	0					
ANR	809290	Identifier	ATTR_USER		808827	0					
ANR	809291	Argument	rip -> r_cur -> ad ( )		808827	1					
ANR	809292	CallExpression	rip -> r_cur -> ad ( )		808827	0					
ANR	809293	Callee	rip -> r_cur -> ad		808827	0					
ANR	809294	PtrMemberAccess	rip -> r_cur -> ad		808827	0					
ANR	809295	PtrMemberAccess	rip -> r_cur		808827	0					
ANR	809296	Identifier	rip		808827	0					
ANR	809297	Identifier	r_cur		808827	1					
ANR	809298	Identifier	ad		808827	1					
ANR	809299	ArgumentList			808827	1					
ANR	809300	Argument	RemoteOwner		808827	2					
ANR	809301	Identifier	RemoteOwner		808827	0					
ANR	809302	PrimaryExpression	0		808827	1					
ANR	809303	CompoundStatement		72:64:2348:2348	808827	1					
ANR	809304	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Can't evaluate attribute %s in request ad.\\n"" , ATTR_USER )"	1548:2:41646:41741	808827	0	True				
ANR	809305	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Can't evaluate attribute %s in request ad.\\n"" , ATTR_USER )"		808827	0					
ANR	809306	Callee	rip -> dprintf		808827	0					
ANR	809307	PtrMemberAccess	rip -> dprintf		808827	0					
ANR	809308	Identifier	rip		808827	0					
ANR	809309	Identifier	dprintf		808827	1					
ANR	809310	ArgumentList	D_ALWAYS		808827	1					
ANR	809311	Argument	D_ALWAYS		808827	0					
ANR	809312	Identifier	D_ALWAYS		808827	0					
ANR	809313	Argument	"""Can't evaluate attribute %s in request ad.\\n"""		808827	1					
ANR	809314	PrimaryExpression	"""Can't evaluate attribute %s in request ad.\\n"""		808827	0					
ANR	809315	Argument	ATTR_USER		808827	2					
ANR	809316	Identifier	ATTR_USER		808827	0					
ANR	809317	ExpressionStatement	RemoteOwner [ 0 ] = '\\0'	1551:2:41745:41766	808827	1	True				
ANR	809318	AssignmentExpression	RemoteOwner [ 0 ] = '\\0'		808827	0		=			
ANR	809319	ArrayIndexing	RemoteOwner [ 0 ]		808827	0					
ANR	809320	Identifier	RemoteOwner		808827	0					
ANR	809321	PrimaryExpression	0		808827	1					
ANR	809322	PrimaryExpression	'\\0'		808827	1					
ANR	809323	IfStatement	if ( '\\0' != RemoteOwner [ 0 ] )		808827	16					
ANR	809324	Condition	'\\0' != RemoteOwner [ 0 ]	1553:5:41776:41797	808827	0	True				
ANR	809325	EqualityExpression	'\\0' != RemoteOwner [ 0 ]		808827	0		!=			
ANR	809326	PrimaryExpression	'\\0'		808827	0					
ANR	809327	ArrayIndexing	RemoteOwner [ 0 ]		808827	1					
ANR	809328	Identifier	RemoteOwner		808827	0					
ANR	809329	PrimaryExpression	0		808827	1					
ANR	809330	CompoundStatement		78:30:2508:2508	808827	1					
ANR	809331	ExpressionStatement	rip -> r_cur -> client ( ) -> setowner ( RemoteOwner )	1554:2:41805:41850	808827	0	True				
ANR	809332	CallExpression	rip -> r_cur -> client ( ) -> setowner ( RemoteOwner )		808827	0					
ANR	809333	Callee	rip -> r_cur -> client ( ) -> setowner		808827	0					
ANR	809334	PtrMemberAccess	rip -> r_cur -> client ( ) -> setowner		808827	0					
ANR	809335	CallExpression	rip -> r_cur -> client ( )		808827	0					
ANR	809336	Callee	rip -> r_cur -> client		808827	0					
ANR	809337	PtrMemberAccess	rip -> r_cur -> client		808827	0					
ANR	809338	PtrMemberAccess	rip -> r_cur		808827	0					
ANR	809339	Identifier	rip		808827	0					
ANR	809340	Identifier	r_cur		808827	1					
ANR	809341	Identifier	client		808827	1					
ANR	809342	ArgumentList			808827	1					
ANR	809343	Identifier	setowner		808827	1					
ANR	809344	ArgumentList	RemoteOwner		808827	1					
ANR	809345	Argument	RemoteOwner		808827	0					
ANR	809346	Identifier	RemoteOwner		808827	0					
ANR	809347	ExpressionStatement	rip -> r_cur -> client ( ) -> setuser ( RemoteOwner )	1558:2:42029:42073	808827	1	True				
ANR	809348	CallExpression	rip -> r_cur -> client ( ) -> setuser ( RemoteOwner )		808827	0					
ANR	809349	Callee	rip -> r_cur -> client ( ) -> setuser		808827	0					
ANR	809350	PtrMemberAccess	rip -> r_cur -> client ( ) -> setuser		808827	0					
ANR	809351	CallExpression	rip -> r_cur -> client ( )		808827	0					
ANR	809352	Callee	rip -> r_cur -> client		808827	0					
ANR	809353	PtrMemberAccess	rip -> r_cur -> client		808827	0					
ANR	809354	PtrMemberAccess	rip -> r_cur		808827	0					
ANR	809355	Identifier	rip		808827	0					
ANR	809356	Identifier	r_cur		808827	1					
ANR	809357	Identifier	client		808827	1					
ANR	809358	ArgumentList			808827	1					
ANR	809359	Identifier	setuser		808827	1					
ANR	809360	ArgumentList	RemoteOwner		808827	1					
ANR	809361	Argument	RemoteOwner		808827	0					
ANR	809362	Identifier	RemoteOwner		808827	0					
ANR	809363	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Remote owner is %s\\n"" , RemoteOwner )"	1559:2:42077:42138	808827	2	True				
ANR	809364	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Remote owner is %s\\n"" , RemoteOwner )"		808827	0					
ANR	809365	Callee	rip -> dprintf		808827	0					
ANR	809366	PtrMemberAccess	rip -> dprintf		808827	0					
ANR	809367	Identifier	rip		808827	0					
ANR	809368	Identifier	dprintf		808827	1					
ANR	809369	ArgumentList	D_ALWAYS		808827	1					
ANR	809370	Argument	D_ALWAYS		808827	0					
ANR	809371	Identifier	D_ALWAYS		808827	0					
ANR	809372	Argument	"""Remote owner is %s\\n"""		808827	1					
ANR	809373	PrimaryExpression	"""Remote owner is %s\\n"""		808827	0					
ANR	809374	Argument	RemoteOwner		808827	2					
ANR	809375	Identifier	RemoteOwner		808827	0					
ANR	809376	ElseStatement	else		808827	0					
ANR	809377	CompoundStatement		85:8:2855:2855	808827	0					
ANR	809378	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Remote owner is NULL\\n"" )"	1561:2:42152:42202	808827	0	True				
ANR	809379	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Remote owner is NULL\\n"" )"		808827	0					
ANR	809380	Callee	rip -> dprintf		808827	0					
ANR	809381	PtrMemberAccess	rip -> dprintf		808827	0					
ANR	809382	Identifier	rip		808827	0					
ANR	809383	Identifier	dprintf		808827	1					
ANR	809384	ArgumentList	D_ALWAYS		808827	1					
ANR	809385	Argument	D_ALWAYS		808827	0					
ANR	809386	Identifier	D_ALWAYS		808827	0					
ANR	809387	Argument	"""Remote owner is NULL\\n"""		808827	1					
ANR	809388	PrimaryExpression	"""Remote owner is NULL\\n"""		808827	0					
ANR	809389	IdentifierDeclStatement	char * acct_grp = NULL ;	1565:1:42309:42330	808827	17	True				
ANR	809390	IdentifierDecl	* acct_grp = NULL		808827	0					
ANR	809391	IdentifierDeclType	char *		808827	0					
ANR	809392	Identifier	acct_grp		808827	1					
ANR	809393	AssignmentExpression	* acct_grp = NULL		808827	2		=			
ANR	809394	Identifier	NULL		808827	0					
ANR	809395	Identifier	NULL		808827	1					
ANR	809396	ExpressionStatement	"rip -> r_cur -> ad ( ) -> LookupString ( ATTR_ACCOUNTING_GROUP , & acct_grp )"	1566:1:42333:42399	808827	18	True				
ANR	809397	CallExpression	"rip -> r_cur -> ad ( ) -> LookupString ( ATTR_ACCOUNTING_GROUP , & acct_grp )"		808827	0					
ANR	809398	Callee	rip -> r_cur -> ad ( ) -> LookupString		808827	0					
ANR	809399	PtrMemberAccess	rip -> r_cur -> ad ( ) -> LookupString		808827	0					
ANR	809400	CallExpression	rip -> r_cur -> ad ( )		808827	0					
ANR	809401	Callee	rip -> r_cur -> ad		808827	0					
ANR	809402	PtrMemberAccess	rip -> r_cur -> ad		808827	0					
ANR	809403	PtrMemberAccess	rip -> r_cur		808827	0					
ANR	809404	Identifier	rip		808827	0					
ANR	809405	Identifier	r_cur		808827	1					
ANR	809406	Identifier	ad		808827	1					
ANR	809407	ArgumentList			808827	1					
ANR	809408	Identifier	LookupString		808827	1					
ANR	809409	ArgumentList	ATTR_ACCOUNTING_GROUP		808827	1					
ANR	809410	Argument	ATTR_ACCOUNTING_GROUP		808827	0					
ANR	809411	Identifier	ATTR_ACCOUNTING_GROUP		808827	0					
ANR	809412	Argument	& acct_grp		808827	1					
ANR	809413	UnaryOperationExpression	& acct_grp		808827	0					
ANR	809414	UnaryOperator	&		808827	0					
ANR	809415	Identifier	acct_grp		808827	1					
ANR	809416	IfStatement	if ( acct_grp )		808827	19					
ANR	809417	Condition	acct_grp	1567:5:42406:42413	808827	0	True				
ANR	809418	Identifier	acct_grp		808827	0					
ANR	809419	CompoundStatement		92:16:3124:3124	808827	1					
ANR	809420	ExpressionStatement	rip -> r_cur -> client ( ) -> setAccountingGroup ( acct_grp )	1568:2:42421:42473	808827	0	True				
ANR	809421	CallExpression	rip -> r_cur -> client ( ) -> setAccountingGroup ( acct_grp )		808827	0					
ANR	809422	Callee	rip -> r_cur -> client ( ) -> setAccountingGroup		808827	0					
ANR	809423	PtrMemberAccess	rip -> r_cur -> client ( ) -> setAccountingGroup		808827	0					
ANR	809424	CallExpression	rip -> r_cur -> client ( )		808827	0					
ANR	809425	Callee	rip -> r_cur -> client		808827	0					
ANR	809426	PtrMemberAccess	rip -> r_cur -> client		808827	0					
ANR	809427	PtrMemberAccess	rip -> r_cur		808827	0					
ANR	809428	Identifier	rip		808827	0					
ANR	809429	Identifier	r_cur		808827	1					
ANR	809430	Identifier	client		808827	1					
ANR	809431	ArgumentList			808827	1					
ANR	809432	Identifier	setAccountingGroup		808827	1					
ANR	809433	ArgumentList	acct_grp		808827	1					
ANR	809434	Argument	acct_grp		808827	0					
ANR	809435	Identifier	acct_grp		808827	0					
ANR	809436	ExpressionStatement	free ( acct_grp )	1569:2:42477:42493	808827	1	True				
ANR	809437	CallExpression	free ( acct_grp )		808827	0					
ANR	809438	Callee	free		808827	0					
ANR	809439	Identifier	free		808827	0					
ANR	809440	ArgumentList	acct_grp		808827	1					
ANR	809441	Argument	acct_grp		808827	0					
ANR	809442	Identifier	acct_grp		808827	0					
ANR	809443	ExpressionStatement	acct_grp = NULL	1570:2:42497:42512	808827	2	True				
ANR	809444	AssignmentExpression	acct_grp = NULL		808827	0		=			
ANR	809445	Identifier	acct_grp		808827	0					
ANR	809446	Identifier	NULL		808827	1					
ANR	809447	ExpressionStatement	rip -> r_cur -> loadRequestInfo ( )	1573:1:42519:42548	808827	20	True				
ANR	809448	CallExpression	rip -> r_cur -> loadRequestInfo ( )		808827	0					
ANR	809449	Callee	rip -> r_cur -> loadRequestInfo		808827	0					
ANR	809450	PtrMemberAccess	rip -> r_cur -> loadRequestInfo		808827	0					
ANR	809451	PtrMemberAccess	rip -> r_cur		808827	0					
ANR	809452	Identifier	rip		808827	0					
ANR	809453	Identifier	r_cur		808827	1					
ANR	809454	Identifier	loadRequestInfo		808827	1					
ANR	809455	ArgumentList			808827	1					
ANR	809456	ExpressionStatement	rip -> r_cur -> setRequestStream ( NULL )	1576:1:42617:42653	808827	21	True				
ANR	809457	CallExpression	rip -> r_cur -> setRequestStream ( NULL )		808827	0					
ANR	809458	Callee	rip -> r_cur -> setRequestStream		808827	0					
ANR	809459	PtrMemberAccess	rip -> r_cur -> setRequestStream		808827	0					
ANR	809460	PtrMemberAccess	rip -> r_cur		808827	0					
ANR	809461	Identifier	rip		808827	0					
ANR	809462	Identifier	r_cur		808827	1					
ANR	809463	Identifier	setRequestStream		808827	1					
ANR	809464	ArgumentList	NULL		808827	1					
ANR	809465	Argument	NULL		808827	0					
ANR	809466	Identifier	NULL		808827	0					
ANR	809467	ExpressionStatement	"rip -> dprintf ( D_FAILURE | D_ALWAYS , ""State change: claiming protocol successful\\n"" )"	1578:1:42657:42739	808827	22	True				
ANR	809468	CallExpression	"rip -> dprintf ( D_FAILURE | D_ALWAYS , ""State change: claiming protocol successful\\n"" )"		808827	0					
ANR	809469	Callee	rip -> dprintf		808827	0					
ANR	809470	PtrMemberAccess	rip -> dprintf		808827	0					
ANR	809471	Identifier	rip		808827	0					
ANR	809472	Identifier	dprintf		808827	1					
ANR	809473	ArgumentList	D_FAILURE | D_ALWAYS		808827	1					
ANR	809474	Argument	D_FAILURE | D_ALWAYS		808827	0					
ANR	809475	InclusiveOrExpression	D_FAILURE | D_ALWAYS		808827	0		|			
ANR	809476	Identifier	D_FAILURE		808827	0					
ANR	809477	Identifier	D_ALWAYS		808827	1					
ANR	809478	Argument	"""State change: claiming protocol successful\\n"""		808827	1					
ANR	809479	PrimaryExpression	"""State change: claiming protocol successful\\n"""		808827	0					
ANR	809480	ExpressionStatement	rip -> change_state ( claimed_state )	1579:1:42742:42776	808827	23	True				
ANR	809481	CallExpression	rip -> change_state ( claimed_state )		808827	0					
ANR	809482	Callee	rip -> change_state		808827	0					
ANR	809483	PtrMemberAccess	rip -> change_state		808827	0					
ANR	809484	Identifier	rip		808827	0					
ANR	809485	Identifier	change_state		808827	1					
ANR	809486	ArgumentList	claimed_state		808827	1					
ANR	809487	Argument	claimed_state		808827	0					
ANR	809488	Identifier	claimed_state		808827	0					
ANR	809489	ReturnStatement	return true ;	1580:1:42779:42790	808827	24	True				
ANR	809490	Identifier	true		808827	0					
ANR	809491	ReturnType	bool		808827	1					
ANR	809492	Identifier	accept_request_claim		808827	2					
ANR	809493	ParameterList	Resource * rip		808827	3					
ANR	809494	Parameter	Resource * rip	1475:22:39276:39288	808827	0	True				
ANR	809495	ParameterType	Resource *		808827	0					
ANR	809496	Identifier	rip		808827	1					
ANR	809497	CFGEntryNode	ENTRY		808827		True				
ANR	809498	CFGExitNode	EXIT		808827		True				
ANR	809499	Symbol	rip -> r_cur -> getaliveint		808827						
ANR	809500	Symbol	stream -> end_of_message		808827						
ANR	809501	Symbol	hostname . Value		808827						
ANR	809502	Symbol	rip -> r_cur -> ad		808827						
ANR	809503	Symbol	* rip		808827						
ANR	809504	Symbol	sock -> peer_addr ( ) . to_ip_string		808827						
ANR	809505	Symbol	stream -> put		808827						
ANR	809506	Symbol	* RemoteOwner		808827						
ANR	809507	Symbol	ATTR_USER		808827						
ANR	809508	Symbol	* * rip -> r_cur		808827						
ANR	809509	Symbol	sock -> peer_addr		808827						
ANR	809510	Symbol	RemoteOwner		808827						
ANR	809511	Symbol	rip -> r_cur -> client		808827						
ANR	809512	Symbol	hostname		808827						
ANR	809513	Symbol	stream		808827						
ANR	809514	Symbol	rip -> r_cur		808827						
ANR	809515	Symbol	* * * rip		808827						
ANR	809516	Symbol	rip		808827						
ANR	809517	Symbol	claimed_state		808827						
ANR	809518	Symbol	OK		808827						
ANR	809519	Symbol	* sock		808827						
ANR	809520	Symbol	* rip -> r_cur		808827						
ANR	809521	Symbol	sock -> peer_addr ( ) . is_valid		808827						
ANR	809522	Symbol	NULL		808827						
ANR	809523	Symbol	acct_grp		808827						
ANR	809524	Symbol	ip		808827						
ANR	809525	Symbol	D_ALWAYS		808827						
ANR	809526	Symbol	false		808827						
ANR	809527	Symbol	D_FULLDEBUG		808827						
ANR	809528	Symbol	( rip -> r_cur -> ad ( ) ) -> EvalString		808827						
ANR	809529	Symbol	* rip -> r_cur -> ad		808827						
ANR	809530	Symbol	D_FAILURE		808827						
ANR	809531	Symbol	* * rip		808827						
ANR	809532	Symbol	sock		808827						
ANR	809533	Symbol	rip -> r_pre		808827						
ANR	809534	Symbol	rip -> r_cur -> requestStream		808827						
ANR	809535	Symbol	stream -> code		808827						
ANR	809536	Symbol	hostname . IsEmpty		808827						
ANR	809537	Symbol	ATTR_ACCOUNTING_GROUP		808827						
ANR	809538	Symbol	client_addr		808827						
ANR	809539	Symbol	* stream		808827						
ANR	809540	Symbol	true		808827						
ANR	809541	Symbol	interval		808827						
ANR	809542	Symbol	get_full_hostname		808827						
ANR	809543	Symbol	& acct_grp		808827						
ANR	809544	Symbol	ip . Value		808827						
ANR	809545	Function	activate_claim	1589:7:42903:50733							
ANR	809546	FunctionDef	"activate_claim (Resource * rip , Stream * stream)"		809545	0					
ANR	809547	CompoundStatement		1593:0:42963:50733	809545	0					
ANR	809548	IdentifierDeclStatement	int mach_requirements = 1 ;	1595:1:43000:43025	809545	0	True				
ANR	809549	IdentifierDecl	mach_requirements = 1		809545	0					
ANR	809550	IdentifierDeclType	int		809545	0					
ANR	809551	Identifier	mach_requirements		809545	1					
ANR	809552	AssignmentExpression	mach_requirements = 1		809545	2		=			
ANR	809553	Identifier	mach_requirements		809545	0					
ANR	809554	PrimaryExpression	1		809545	1					
ANR	809555	IdentifierDeclStatement	"ClassAd * req_classad = NULL , * mach_classad = rip -> r_classad ;"	1596:1:43028:43087	809545	1	True				
ANR	809556	IdentifierDecl	* req_classad = NULL		809545	0					
ANR	809557	IdentifierDeclType	ClassAd *		809545	0					
ANR	809558	Identifier	req_classad		809545	1					
ANR	809559	AssignmentExpression	* req_classad = NULL		809545	2		=			
ANR	809560	Identifier	NULL		809545	0					
ANR	809561	Identifier	NULL		809545	1					
ANR	809562	IdentifierDecl	* mach_classad = rip -> r_classad		809545	1					
ANR	809563	IdentifierDeclType	ClassAd *		809545	0					
ANR	809564	Identifier	mach_classad		809545	1					
ANR	809565	AssignmentExpression	* mach_classad = rip -> r_classad		809545	2		=			
ANR	809566	Identifier	mach_classad		809545	0					
ANR	809567	PtrMemberAccess	rip -> r_classad		809545	1					
ANR	809568	Identifier	rip		809545	0					
ANR	809569	Identifier	r_classad		809545	1					
ANR	809570	IdentifierDeclStatement	"ReliSock rsock_1 , rsock_2 ;"	1597:1:43090:43115	809545	2	True				
ANR	809571	IdentifierDecl	rsock_1		809545	0					
ANR	809572	IdentifierDeclType	ReliSock		809545	0					
ANR	809573	Identifier	rsock_1		809545	1					
ANR	809574	IdentifierDecl	rsock_2		809545	1					
ANR	809575	IdentifierDeclType	ReliSock		809545	0					
ANR	809576	Identifier	rsock_2		809545	1					
ANR	809577	IdentifierDeclStatement	"int sock_1 , sock_2 ;"	1599:1:43132:43150	809545	3	True				
ANR	809578	IdentifierDecl	sock_1		809545	0					
ANR	809579	IdentifierDeclType	int		809545	0					
ANR	809580	Identifier	sock_1		809545	1					
ANR	809581	IdentifierDecl	sock_2		809545	1					
ANR	809582	IdentifierDeclType	int		809545	0					
ANR	809583	Identifier	sock_2		809545	1					
ANR	809584	IdentifierDeclStatement	"int fd_1 , fd_2 ;"	1600:1:43153:43167	809545	4	True				
ANR	809585	IdentifierDecl	fd_1		809545	0					
ANR	809586	IdentifierDeclType	int		809545	0					
ANR	809587	Identifier	fd_1		809545	1					
ANR	809588	IdentifierDecl	fd_2		809545	1					
ANR	809589	IdentifierDeclType	int		809545	0					
ANR	809590	Identifier	fd_2		809545	1					
ANR	809591	IdentifierDeclStatement	struct sockaddr_storage frm ;	1601:1:43170:43197	809545	5	True				
ANR	809592	IdentifierDecl	frm		809545	0					
ANR	809593	IdentifierDeclType	struct sockaddr_storage		809545	0					
ANR	809594	Identifier	frm		809545	1					
ANR	809595	IdentifierDeclStatement	int len = sizeof frm ;	1602:1:43200:43220	809545	6	True				
ANR	809596	IdentifierDecl	len = sizeof frm		809545	0					
ANR	809597	IdentifierDeclType	int		809545	0					
ANR	809598	Identifier	len		809545	1					
ANR	809599	AssignmentExpression	len = sizeof frm		809545	2		=			
ANR	809600	Identifier	len		809545	0					
ANR	809601	SizeofExpression	sizeof frm		809545	1					
ANR	809602	Sizeof	sizeof		809545	0					
ANR	809603	Identifier	frm		809545	1					
ANR	809604	IdentifierDeclStatement	StartdRec stRec ;	1603:1:43224:43239	809545	7	True				
ANR	809605	IdentifierDecl	stRec		809545	0					
ANR	809606	IdentifierDeclType	StartdRec		809545	0					
ANR	809607	Identifier	stRec		809545	1					
ANR	809608	IdentifierDeclStatement	int starter = MAX_STARTERS ;	1605:1:43249:43275	809545	8	True				
ANR	809609	IdentifierDecl	starter = MAX_STARTERS		809545	0					
ANR	809610	IdentifierDeclType	int		809545	0					
ANR	809611	Identifier	starter		809545	1					
ANR	809612	AssignmentExpression	starter = MAX_STARTERS		809545	2		=			
ANR	809613	Identifier	MAX_STARTERS		809545	0					
ANR	809614	Identifier	MAX_STARTERS		809545	1					
ANR	809615	IdentifierDeclStatement	Sock * sock = ( Sock * ) stream ;	1606:1:43278:43304	809545	9	True				
ANR	809616	IdentifierDecl	* sock = ( Sock * ) stream		809545	0					
ANR	809617	IdentifierDeclType	Sock *		809545	0					
ANR	809618	Identifier	sock		809545	1					
ANR	809619	AssignmentExpression	* sock = ( Sock * ) stream		809545	2		=			
ANR	809620	Identifier	sock		809545	0					
ANR	809621	CastExpression	( Sock * ) stream		809545	1					
ANR	809622	CastTarget	Sock *		809545	0					
ANR	809623	Identifier	stream		809545	1					
ANR	809624	IdentifierDeclStatement	char * shadow_addr = strdup ( sock -> peer_addr ( ) . to_ip_string ( ) . Value ( ) ) ;	1607:1:43307:43375	809545	10	True				
ANR	809625	IdentifierDecl	* shadow_addr = strdup ( sock -> peer_addr ( ) . to_ip_string ( ) . Value ( ) )		809545	0					
ANR	809626	IdentifierDeclType	char *		809545	0					
ANR	809627	Identifier	shadow_addr		809545	1					
ANR	809628	AssignmentExpression	* shadow_addr = strdup ( sock -> peer_addr ( ) . to_ip_string ( ) . Value ( ) )		809545	2		=			
ANR	809629	Identifier	shadow_addr		809545	0					
ANR	809630	CallExpression	strdup ( sock -> peer_addr ( ) . to_ip_string ( ) . Value ( ) )		809545	1					
ANR	809631	Callee	strdup		809545	0					
ANR	809632	Identifier	strdup		809545	0					
ANR	809633	ArgumentList	sock -> peer_addr ( ) . to_ip_string ( ) . Value ( )		809545	1					
ANR	809634	Argument	sock -> peer_addr ( ) . to_ip_string ( ) . Value ( )		809545	0					
ANR	809635	CallExpression	sock -> peer_addr ( ) . to_ip_string ( ) . Value ( )		809545	0					
ANR	809636	Callee	sock -> peer_addr ( ) . to_ip_string ( ) . Value		809545	0					
ANR	809637	MemberAccess	sock -> peer_addr ( ) . to_ip_string ( ) . Value		809545	0					
ANR	809638	CallExpression	sock -> peer_addr ( ) . to_ip_string ( )		809545	0					
ANR	809639	Callee	sock -> peer_addr ( ) . to_ip_string		809545	0					
ANR	809640	MemberAccess	sock -> peer_addr ( ) . to_ip_string		809545	0					
ANR	809641	CallExpression	sock -> peer_addr ( )		809545	0					
ANR	809642	Callee	sock -> peer_addr		809545	0					
ANR	809643	PtrMemberAccess	sock -> peer_addr		809545	0					
ANR	809644	Identifier	sock		809545	0					
ANR	809645	Identifier	peer_addr		809545	1					
ANR	809646	ArgumentList			809545	1					
ANR	809647	Identifier	to_ip_string		809545	1					
ANR	809648	ArgumentList			809545	1					
ANR	809649	Identifier	Value		809545	1					
ANR	809650	ArgumentList			809545	1					
ANR	809651	IfStatement	if ( rip -> state ( ) != claimed_state )		809545	11					
ANR	809652	Condition	rip -> state ( ) != claimed_state	1609:5:43383:43411	809545	0	True				
ANR	809653	EqualityExpression	rip -> state ( ) != claimed_state		809545	0		!=			
ANR	809654	CallExpression	rip -> state ( )		809545	0					
ANR	809655	Callee	rip -> state		809545	0					
ANR	809656	PtrMemberAccess	rip -> state		809545	0					
ANR	809657	Identifier	rip		809545	0					
ANR	809658	Identifier	state		809545	1					
ANR	809659	ArgumentList			809545	1					
ANR	809660	Identifier	claimed_state		809545	1					
ANR	809661	CompoundStatement		17:37:451:451	809545	1					
ANR	809662	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Not in claimed state, aborting.\\n"" )"	1610:2:43419:43480	809545	0	True				
ANR	809663	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Not in claimed state, aborting.\\n"" )"		809545	0					
ANR	809664	Callee	rip -> dprintf		809545	0					
ANR	809665	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	809666	Identifier	rip		809545	0					
ANR	809667	Identifier	dprintf		809545	1					
ANR	809668	ArgumentList	D_ALWAYS		809545	1					
ANR	809669	Argument	D_ALWAYS		809545	0					
ANR	809670	Identifier	D_ALWAYS		809545	0					
ANR	809671	Argument	"""Not in claimed state, aborting.\\n"""		809545	1					
ANR	809672	PrimaryExpression	"""Not in claimed state, aborting.\\n"""		809545	0					
ANR	809673	ExpressionStatement	refuse ( stream )	1611:2:43484:43500	809545	1	True				
ANR	809674	CallExpression	refuse ( stream )		809545	0					
ANR	809675	Callee	refuse		809545	0					
ANR	809676	Identifier	refuse		809545	0					
ANR	809677	ArgumentList	stream		809545	1					
ANR	809678	Argument	stream		809545	0					
ANR	809679	Identifier	stream		809545	0					
ANR	809680	ExpressionStatement	ABORT	1612:2:43504:43509	809545	2	True				
ANR	809681	Identifier	ABORT		809545	0					
ANR	809682	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Got activate_claim request from shadow (%s)\\n"" , shadow_addr )"	1615:1:43516:43611	809545	12	True				
ANR	809683	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Got activate_claim request from shadow (%s)\\n"" , shadow_addr )"		809545	0					
ANR	809684	Callee	rip -> dprintf		809545	0					
ANR	809685	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	809686	Identifier	rip		809545	0					
ANR	809687	Identifier	dprintf		809545	1					
ANR	809688	ArgumentList	D_ALWAYS		809545	1					
ANR	809689	Argument	D_ALWAYS		809545	0					
ANR	809690	Identifier	D_ALWAYS		809545	0					
ANR	809691	Argument	"""Got activate_claim request from shadow (%s)\\n"""		809545	1					
ANR	809692	PrimaryExpression	"""Got activate_claim request from shadow (%s)\\n"""		809545	0					
ANR	809693	Argument	shadow_addr		809545	2					
ANR	809694	Identifier	shadow_addr		809545	0					
ANR	809695	IfStatement	if ( ! stream -> code ( starter ) )		809545	13					
ANR	809696	Condition	! stream -> code ( starter )	1620:5:43688:43712	809545	0	True				
ANR	809697	UnaryOperationExpression	! stream -> code ( starter )		809545	0					
ANR	809698	UnaryOperator	!		809545	0					
ANR	809699	CallExpression	stream -> code ( starter )		809545	1					
ANR	809700	Callee	stream -> code		809545	0					
ANR	809701	PtrMemberAccess	stream -> code		809545	0					
ANR	809702	Identifier	stream		809545	0					
ANR	809703	Identifier	code		809545	1					
ANR	809704	ArgumentList	starter		809545	1					
ANR	809705	Argument	starter		809545	0					
ANR	809706	Identifier	starter		809545	0					
ANR	809707	CompoundStatement		28:33:752:752	809545	1					
ANR	809708	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Can't read starter type from %s\\n"" , shadow_addr )"	1621:2:43720:43799	809545	0	True				
ANR	809709	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Can't read starter type from %s\\n"" , shadow_addr )"		809545	0					
ANR	809710	Callee	rip -> dprintf		809545	0					
ANR	809711	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	809712	Identifier	rip		809545	0					
ANR	809713	Identifier	dprintf		809545	1					
ANR	809714	ArgumentList	D_ALWAYS		809545	1					
ANR	809715	Argument	D_ALWAYS		809545	0					
ANR	809716	Identifier	D_ALWAYS		809545	0					
ANR	809717	Argument	"""Can't read starter type from %s\\n"""		809545	1					
ANR	809718	PrimaryExpression	"""Can't read starter type from %s\\n"""		809545	0					
ANR	809719	Argument	shadow_addr		809545	2					
ANR	809720	Identifier	shadow_addr		809545	0					
ANR	809721	ExpressionStatement	refuse ( stream )	1623:2:43803:43819	809545	1	True				
ANR	809722	CallExpression	refuse ( stream )		809545	0					
ANR	809723	Callee	refuse		809545	0					
ANR	809724	Identifier	refuse		809545	0					
ANR	809725	ArgumentList	stream		809545	1					
ANR	809726	Argument	stream		809545	0					
ANR	809727	Identifier	stream		809545	0					
ANR	809728	ExpressionStatement	ABORT	1624:2:43823:43828	809545	2	True				
ANR	809729	Identifier	ABORT		809545	0					
ANR	809730	IfStatement	if ( starter >= MAX_STARTERS )		809545	14					
ANR	809731	Condition	starter >= MAX_STARTERS	1626:5:43838:43860	809545	0	True				
ANR	809732	RelationalExpression	starter >= MAX_STARTERS		809545	0		>=			
ANR	809733	Identifier	starter		809545	0					
ANR	809734	Identifier	MAX_STARTERS		809545	1					
ANR	809735	CompoundStatement		34:31:900:900	809545	1					
ANR	809736	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Requested starter is out of range.\\n"" )"	1627:5:43871:43935	809545	0	True				
ANR	809737	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Requested starter is out of range.\\n"" )"		809545	0					
ANR	809738	Callee	rip -> dprintf		809545	0					
ANR	809739	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	809740	Identifier	rip		809545	0					
ANR	809741	Identifier	dprintf		809545	1					
ANR	809742	ArgumentList	D_ALWAYS		809545	1					
ANR	809743	Argument	D_ALWAYS		809545	0					
ANR	809744	Identifier	D_ALWAYS		809545	0					
ANR	809745	Argument	"""Requested starter is out of range.\\n"""		809545	1					
ANR	809746	PrimaryExpression	"""Requested starter is out of range.\\n"""		809545	0					
ANR	809747	ExpressionStatement	refuse ( stream )	1628:2:43939:43955	809545	1	True				
ANR	809748	CallExpression	refuse ( stream )		809545	0					
ANR	809749	Callee	refuse		809545	0					
ANR	809750	Identifier	refuse		809545	0					
ANR	809751	ArgumentList	stream		809545	1					
ANR	809752	Argument	stream		809545	0					
ANR	809753	Identifier	stream		809545	0					
ANR	809754	ExpressionStatement	ABORT	1629:5:43962:43967	809545	2	True				
ANR	809755	Identifier	ABORT		809545	0					
ANR	809756	Statement	req_classad	1633:1:44002:44012	809545	15	True				
ANR	809757	Statement	=	1633:13:44014:44014	809545	16	True				
ANR	809758	Statement	new	1633:15:44016:44018	809545	17	True				
ANR	809759	ExpressionStatement	ClassAd	1633:19:44020:44027	809545	18	True				
ANR	809760	Identifier	ClassAd		809545	0					
ANR	809761	IfStatement	if ( ! req_classad -> initFromStream ( * stream ) )		809545	19					
ANR	809762	Condition	! req_classad -> initFromStream ( * stream )	1634:5:44034:44070	809545	0	True				
ANR	809763	UnaryOperationExpression	! req_classad -> initFromStream ( * stream )		809545	0					
ANR	809764	UnaryOperator	!		809545	0					
ANR	809765	CallExpression	req_classad -> initFromStream ( * stream )		809545	1					
ANR	809766	Callee	req_classad -> initFromStream		809545	0					
ANR	809767	PtrMemberAccess	req_classad -> initFromStream		809545	0					
ANR	809768	Identifier	req_classad		809545	0					
ANR	809769	Identifier	initFromStream		809545	1					
ANR	809770	ArgumentList	* stream		809545	1					
ANR	809771	Argument	* stream		809545	0					
ANR	809772	UnaryOperationExpression	* stream		809545	0					
ANR	809773	UnaryOperator	*		809545	0					
ANR	809774	Identifier	stream		809545	1					
ANR	809775	CompoundStatement		42:45:1110:1110	809545	1					
ANR	809776	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Can't receive request classad from shadow.\\n"" )"	1635:2:44078:44150	809545	0	True				
ANR	809777	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Can't receive request classad from shadow.\\n"" )"		809545	0					
ANR	809778	Callee	rip -> dprintf		809545	0					
ANR	809779	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	809780	Identifier	rip		809545	0					
ANR	809781	Identifier	dprintf		809545	1					
ANR	809782	ArgumentList	D_ALWAYS		809545	1					
ANR	809783	Argument	D_ALWAYS		809545	0					
ANR	809784	Identifier	D_ALWAYS		809545	0					
ANR	809785	Argument	"""Can't receive request classad from shadow.\\n"""		809545	1					
ANR	809786	PrimaryExpression	"""Can't receive request classad from shadow.\\n"""		809545	0					
ANR	809787	ExpressionStatement	ABORT	1636:2:44154:44159	809545	1	True				
ANR	809788	Identifier	ABORT		809545	0					
ANR	809789	IfStatement	if ( ! stream -> end_of_message ( ) )		809545	20					
ANR	809790	Condition	! stream -> end_of_message ( )	1638:5:44169:44193	809545	0	True				
ANR	809791	UnaryOperationExpression	! stream -> end_of_message ( )		809545	0					
ANR	809792	UnaryOperator	!		809545	0					
ANR	809793	CallExpression	stream -> end_of_message ( )		809545	1					
ANR	809794	Callee	stream -> end_of_message		809545	0					
ANR	809795	PtrMemberAccess	stream -> end_of_message		809545	0					
ANR	809796	Identifier	stream		809545	0					
ANR	809797	Identifier	end_of_message		809545	1					
ANR	809798	ArgumentList			809545	1					
ANR	809799	CompoundStatement		46:32:1232:1232	809545	1					
ANR	809800	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Can't receive end_of_message() from shadow.\\n"" )"	1639:2:44200:44273	809545	0	True				
ANR	809801	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Can't receive end_of_message() from shadow.\\n"" )"		809545	0					
ANR	809802	Callee	rip -> dprintf		809545	0					
ANR	809803	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	809804	Identifier	rip		809545	0					
ANR	809805	Identifier	dprintf		809545	1					
ANR	809806	ArgumentList	D_ALWAYS		809545	1					
ANR	809807	Argument	D_ALWAYS		809545	0					
ANR	809808	Identifier	D_ALWAYS		809545	0					
ANR	809809	Argument	"""Can't receive end_of_message() from shadow.\\n"""		809545	1					
ANR	809810	PrimaryExpression	"""Can't receive end_of_message() from shadow.\\n"""		809545	0					
ANR	809811	ExpressionStatement	ABORT	1640:2:44277:44282	809545	1	True				
ANR	809812	Identifier	ABORT		809545	0					
ANR	809813	ExpressionStatement	req_classad -> AddTargetRefs ( TargetMachineAttrs )	1644:1:44321:44369	809545	21	True				
ANR	809814	CallExpression	req_classad -> AddTargetRefs ( TargetMachineAttrs )		809545	0					
ANR	809815	Callee	req_classad -> AddTargetRefs		809545	0					
ANR	809816	PtrMemberAccess	req_classad -> AddTargetRefs		809545	0					
ANR	809817	Identifier	req_classad		809545	0					
ANR	809818	Identifier	AddTargetRefs		809545	1					
ANR	809819	ArgumentList	TargetMachineAttrs		809545	1					
ANR	809820	Argument	TargetMachineAttrs		809545	0					
ANR	809821	Identifier	TargetMachineAttrs		809545	0					
ANR	809822	ExpressionStatement	"rip -> dprintf ( D_FULLDEBUG , ""Read request ad and starter from shadow.\\n"" )"	1647:1:44380:44453	809545	22	True				
ANR	809823	CallExpression	"rip -> dprintf ( D_FULLDEBUG , ""Read request ad and starter from shadow.\\n"" )"		809545	0					
ANR	809824	Callee	rip -> dprintf		809545	0					
ANR	809825	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	809826	Identifier	rip		809545	0					
ANR	809827	Identifier	dprintf		809545	1					
ANR	809828	ArgumentList	D_FULLDEBUG		809545	1					
ANR	809829	Argument	D_FULLDEBUG		809545	0					
ANR	809830	Identifier	D_FULLDEBUG		809545	0					
ANR	809831	Argument	"""Read request ad and starter from shadow.\\n"""		809545	1					
ANR	809832	PrimaryExpression	"""Read request ad and starter from shadow.\\n"""		809545	0					
ANR	809833	ExpressionStatement	resmgr -> compute ( A_TIMEOUT | A_UPDATE )	1653:1:44694:44733	809545	23	True				
ANR	809834	CallExpression	resmgr -> compute ( A_TIMEOUT | A_UPDATE )		809545	0					
ANR	809835	Callee	resmgr -> compute		809545	0					
ANR	809836	PtrMemberAccess	resmgr -> compute		809545	0					
ANR	809837	Identifier	resmgr		809545	0					
ANR	809838	Identifier	compute		809545	1					
ANR	809839	ArgumentList	A_TIMEOUT | A_UPDATE		809545	1					
ANR	809840	Argument	A_TIMEOUT | A_UPDATE		809545	0					
ANR	809841	InclusiveOrExpression	A_TIMEOUT | A_UPDATE		809545	0		|			
ANR	809842	Identifier	A_TIMEOUT		809545	0					
ANR	809843	Identifier	A_UPDATE		809545	1					
ANR	809844	ExpressionStatement	"rip -> dprintf ( D_JOB , ""REQ_CLASSAD:\\n"" )"	1656:1:44794:44833	809545	24	True				
ANR	809845	CallExpression	"rip -> dprintf ( D_JOB , ""REQ_CLASSAD:\\n"" )"		809545	0					
ANR	809846	Callee	rip -> dprintf		809545	0					
ANR	809847	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	809848	Identifier	rip		809545	0					
ANR	809849	Identifier	dprintf		809545	1					
ANR	809850	ArgumentList	D_JOB		809545	1					
ANR	809851	Argument	D_JOB		809545	0					
ANR	809852	Identifier	D_JOB		809545	0					
ANR	809853	Argument	"""REQ_CLASSAD:\\n"""		809545	1					
ANR	809854	PrimaryExpression	"""REQ_CLASSAD:\\n"""		809545	0					
ANR	809855	IfStatement	if ( DebugFlags & D_JOB )		809545	25					
ANR	809856	Condition	DebugFlags & D_JOB	1657:5:44840:44857	809545	0	True				
ANR	809857	BitAndExpression	DebugFlags & D_JOB		809545	0		&			
ANR	809858	Identifier	DebugFlags		809545	0					
ANR	809859	Identifier	D_JOB		809545	1					
ANR	809860	CompoundStatement		65:26:1897:1897	809545	1					
ANR	809861	ExpressionStatement	req_classad -> dPrint ( D_JOB )	1658:2:44865:44893	809545	0	True				
ANR	809862	CallExpression	req_classad -> dPrint ( D_JOB )		809545	0					
ANR	809863	Callee	req_classad -> dPrint		809545	0					
ANR	809864	PtrMemberAccess	req_classad -> dPrint		809545	0					
ANR	809865	Identifier	req_classad		809545	0					
ANR	809866	Identifier	dPrint		809545	1					
ANR	809867	ArgumentList	D_JOB		809545	1					
ANR	809868	Argument	D_JOB		809545	0					
ANR	809869	Identifier	D_JOB		809545	0					
ANR	809870	ExpressionStatement	"rip -> dprintf ( D_MACHINE , ""MACHINE_CLASSAD:\\n"" )"	1661:1:44903:44950	809545	26	True				
ANR	809871	CallExpression	"rip -> dprintf ( D_MACHINE , ""MACHINE_CLASSAD:\\n"" )"		809545	0					
ANR	809872	Callee	rip -> dprintf		809545	0					
ANR	809873	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	809874	Identifier	rip		809545	0					
ANR	809875	Identifier	dprintf		809545	1					
ANR	809876	ArgumentList	D_MACHINE		809545	1					
ANR	809877	Argument	D_MACHINE		809545	0					
ANR	809878	Identifier	D_MACHINE		809545	0					
ANR	809879	Argument	"""MACHINE_CLASSAD:\\n"""		809545	1					
ANR	809880	PrimaryExpression	"""MACHINE_CLASSAD:\\n"""		809545	0					
ANR	809881	IfStatement	if ( DebugFlags & D_MACHINE )		809545	27					
ANR	809882	Condition	DebugFlags & D_MACHINE	1662:5:44957:44978	809545	0	True				
ANR	809883	BitAndExpression	DebugFlags & D_MACHINE		809545	0		&			
ANR	809884	Identifier	DebugFlags		809545	0					
ANR	809885	Identifier	D_MACHINE		809545	1					
ANR	809886	CompoundStatement		70:30:2018:2018	809545	1					
ANR	809887	ExpressionStatement	mach_classad -> dPrint ( D_MACHINE )	1663:2:44986:45019	809545	0	True				
ANR	809888	CallExpression	mach_classad -> dPrint ( D_MACHINE )		809545	0					
ANR	809889	Callee	mach_classad -> dPrint		809545	0					
ANR	809890	PtrMemberAccess	mach_classad -> dPrint		809545	0					
ANR	809891	Identifier	mach_classad		809545	0					
ANR	809892	Identifier	dPrint		809545	1					
ANR	809893	ArgumentList	D_MACHINE		809545	1					
ANR	809894	Argument	D_MACHINE		809545	0					
ANR	809895	Identifier	D_MACHINE		809545	0					
ANR	809896	ExpressionStatement	rip -> r_reqexp -> restore ( )	1669:1:45166:45190	809545	28	True				
ANR	809897	CallExpression	rip -> r_reqexp -> restore ( )		809545	0					
ANR	809898	Callee	rip -> r_reqexp -> restore		809545	0					
ANR	809899	PtrMemberAccess	rip -> r_reqexp -> restore		809545	0					
ANR	809900	PtrMemberAccess	rip -> r_reqexp		809545	0					
ANR	809901	Identifier	rip		809545	0					
ANR	809902	Identifier	r_reqexp		809545	1					
ANR	809903	Identifier	restore		809545	1					
ANR	809904	ArgumentList			809545	1					
ANR	809905	IfStatement	"if ( mach_classad -> EvalBool ( ATTR_REQUIREMENTS , req_classad , mach_requirements ) == 0 )"		809545	29					
ANR	809906	Condition	"mach_classad -> EvalBool ( ATTR_REQUIREMENTS , req_classad , mach_requirements ) == 0"	1670:5:45197:45285	809545	0	True				
ANR	809907	EqualityExpression	"mach_classad -> EvalBool ( ATTR_REQUIREMENTS , req_classad , mach_requirements ) == 0"		809545	0		==			
ANR	809908	CallExpression	"mach_classad -> EvalBool ( ATTR_REQUIREMENTS , req_classad , mach_requirements )"		809545	0					
ANR	809909	Callee	mach_classad -> EvalBool		809545	0					
ANR	809910	PtrMemberAccess	mach_classad -> EvalBool		809545	0					
ANR	809911	Identifier	mach_classad		809545	0					
ANR	809912	Identifier	EvalBool		809545	1					
ANR	809913	ArgumentList	ATTR_REQUIREMENTS		809545	1					
ANR	809914	Argument	ATTR_REQUIREMENTS		809545	0					
ANR	809915	Identifier	ATTR_REQUIREMENTS		809545	0					
ANR	809916	Argument	req_classad		809545	1					
ANR	809917	Identifier	req_classad		809545	0					
ANR	809918	Argument	mach_requirements		809545	2					
ANR	809919	Identifier	mach_requirements		809545	0					
ANR	809920	PrimaryExpression	0		809545	1					
ANR	809921	CompoundStatement		79:48:2325:2325	809545	1					
ANR	809922	ExpressionStatement	mach_requirements = 0	1672:2:45293:45314	809545	0	True				
ANR	809923	AssignmentExpression	mach_requirements = 0		809545	0		=			
ANR	809924	Identifier	mach_requirements		809545	0					
ANR	809925	PrimaryExpression	0		809545	1					
ANR	809926	IfStatement	if ( ! mach_requirements )		809545	30					
ANR	809927	Condition	! mach_requirements	1674:5:45324:45341	809545	0	True				
ANR	809928	UnaryOperationExpression	! mach_requirements		809545	0					
ANR	809929	UnaryOperator	!		809545	0					
ANR	809930	Identifier	mach_requirements		809545	1					
ANR	809931	CompoundStatement		82:26:2381:2381	809545	1					
ANR	809932	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Machine Requirements check failed!\\n"" )"	1675:2:45349:45413	809545	0	True				
ANR	809933	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Machine Requirements check failed!\\n"" )"		809545	0					
ANR	809934	Callee	rip -> dprintf		809545	0					
ANR	809935	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	809936	Identifier	rip		809545	0					
ANR	809937	Identifier	dprintf		809545	1					
ANR	809938	ArgumentList	D_ALWAYS		809545	1					
ANR	809939	Argument	D_ALWAYS		809545	0					
ANR	809940	Identifier	D_ALWAYS		809545	0					
ANR	809941	Argument	"""Machine Requirements check failed!\\n"""		809545	1					
ANR	809942	PrimaryExpression	"""Machine Requirements check failed!\\n"""		809545	0					
ANR	809943	ExpressionStatement	refuse ( stream )	1676:2:45417:45433	809545	1	True				
ANR	809944	CallExpression	refuse ( stream )		809545	0					
ANR	809945	Callee	refuse		809545	0					
ANR	809946	Identifier	refuse		809545	0					
ANR	809947	ArgumentList	stream		809545	1					
ANR	809948	Argument	stream		809545	0					
ANR	809949	Identifier	stream		809545	0					
ANR	809950	ExpressionStatement	ABORT	1677:5:45440:45445	809545	2	True				
ANR	809951	Identifier	ABORT		809545	0					
ANR	809952	IdentifierDeclStatement	int job_univ = 0 ;	1680:1:45452:45468	809545	31	True				
ANR	809953	IdentifierDecl	job_univ = 0		809545	0					
ANR	809954	IdentifierDeclType	int		809545	0					
ANR	809955	Identifier	job_univ		809545	1					
ANR	809956	AssignmentExpression	job_univ = 0		809545	2		=			
ANR	809957	Identifier	job_univ		809545	0					
ANR	809958	PrimaryExpression	0		809545	1					
ANR	809959	IfStatement	"if ( req_classad -> LookupInteger ( ATTR_JOB_UNIVERSE , job_univ ) != 1 )"		809545	32					
ANR	809960	Condition	"req_classad -> LookupInteger ( ATTR_JOB_UNIVERSE , job_univ ) != 1"	1681:5:45475:45534	809545	0	True				
ANR	809961	EqualityExpression	"req_classad -> LookupInteger ( ATTR_JOB_UNIVERSE , job_univ ) != 1"		809545	0		!=			
ANR	809962	CallExpression	"req_classad -> LookupInteger ( ATTR_JOB_UNIVERSE , job_univ )"		809545	0					
ANR	809963	Callee	req_classad -> LookupInteger		809545	0					
ANR	809964	PtrMemberAccess	req_classad -> LookupInteger		809545	0					
ANR	809965	Identifier	req_classad		809545	0					
ANR	809966	Identifier	LookupInteger		809545	1					
ANR	809967	ArgumentList	ATTR_JOB_UNIVERSE		809545	1					
ANR	809968	Argument	ATTR_JOB_UNIVERSE		809545	0					
ANR	809969	Identifier	ATTR_JOB_UNIVERSE		809545	0					
ANR	809970	Argument	job_univ		809545	1					
ANR	809971	Identifier	job_univ		809545	0					
ANR	809972	PrimaryExpression	1		809545	1					
ANR	809973	CompoundStatement		89:68:2574:2574	809545	1					
ANR	809974	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Can't find Job Universe in Job ClassAd\\n"" )"	1682:2:45542:45608	809545	0	True				
ANR	809975	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Can't find Job Universe in Job ClassAd\\n"" )"		809545	0					
ANR	809976	Callee	rip -> dprintf		809545	0					
ANR	809977	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	809978	Identifier	rip		809545	0					
ANR	809979	Identifier	dprintf		809545	1					
ANR	809980	ArgumentList	D_ALWAYS		809545	1					
ANR	809981	Argument	D_ALWAYS		809545	0					
ANR	809982	Identifier	D_ALWAYS		809545	0					
ANR	809983	Argument	"""Can't find Job Universe in Job ClassAd\\n"""		809545	1					
ANR	809984	PrimaryExpression	"""Can't find Job Universe in Job ClassAd\\n"""		809545	0					
ANR	809985	ExpressionStatement	refuse ( stream )	1683:2:45612:45626	809545	1	True				
ANR	809986	CallExpression	refuse ( stream )		809545	0					
ANR	809987	Callee	refuse		809545	0					
ANR	809988	Identifier	refuse		809545	0					
ANR	809989	ArgumentList	stream		809545	1					
ANR	809990	Argument	stream		809545	0					
ANR	809991	Identifier	stream		809545	0					
ANR	809992	ExpressionStatement	ABORT	1684:2:45630:45635	809545	2	True				
ANR	809993	Identifier	ABORT		809545	0					
ANR	809994	IdentifierDeclStatement	ClassAd vm_classad = * req_classad ;	1687:1:45642:45675	809545	33	True				
ANR	809995	IdentifierDecl	vm_classad = * req_classad		809545	0					
ANR	809996	IdentifierDeclType	ClassAd		809545	0					
ANR	809997	Identifier	vm_classad		809545	1					
ANR	809998	AssignmentExpression	vm_classad = * req_classad		809545	2		=			
ANR	809999	Identifier	vm_classad		809545	0					
ANR	810000	UnaryOperationExpression	* req_classad		809545	1					
ANR	810001	UnaryOperator	*		809545	0					
ANR	810002	Identifier	req_classad		809545	1					
ANR	810003	IfStatement	if ( job_univ == CONDOR_UNIVERSE_VM )		809545	34					
ANR	810004	Condition	job_univ == CONDOR_UNIVERSE_VM	1688:5:45682:45711	809545	0	True				
ANR	810005	EqualityExpression	job_univ == CONDOR_UNIVERSE_VM		809545	0		==			
ANR	810006	Identifier	job_univ		809545	0					
ANR	810007	Identifier	CONDOR_UNIVERSE_VM		809545	1					
ANR	810008	CompoundStatement		96:38:2751:2751	809545	1					
ANR	810009	IfStatement	if ( resmgr -> m_vmuniverse_mgr . canCreateVM ( & vm_classad ) == false )		809545	0					
ANR	810010	Condition	resmgr -> m_vmuniverse_mgr . canCreateVM ( & vm_classad ) == false	1689:6:45723:45780	809545	0	True				
ANR	810011	EqualityExpression	resmgr -> m_vmuniverse_mgr . canCreateVM ( & vm_classad ) == false		809545	0		==			
ANR	810012	CallExpression	resmgr -> m_vmuniverse_mgr . canCreateVM ( & vm_classad )		809545	0					
ANR	810013	Callee	resmgr -> m_vmuniverse_mgr . canCreateVM		809545	0					
ANR	810014	MemberAccess	resmgr -> m_vmuniverse_mgr . canCreateVM		809545	0					
ANR	810015	PtrMemberAccess	resmgr -> m_vmuniverse_mgr		809545	0					
ANR	810016	Identifier	resmgr		809545	0					
ANR	810017	Identifier	m_vmuniverse_mgr		809545	1					
ANR	810018	Identifier	canCreateVM		809545	1					
ANR	810019	ArgumentList	& vm_classad		809545	1					
ANR	810020	Argument	& vm_classad		809545	0					
ANR	810021	UnaryOperationExpression	& vm_classad		809545	0					
ANR	810022	UnaryOperator	&		809545	0					
ANR	810023	Identifier	vm_classad		809545	1					
ANR	810024	Identifier	false		809545	1					
ANR	810025	CompoundStatement		97:67:2820:2820	809545	1					
ANR	810026	Statement	rip	1691:3:45845:45847	809545	0	True				
ANR	810027	Statement	->	1691:6:45848:45849	809545	1	True				
ANR	810028	Statement	dprintf	1691:8:45850:45856	809545	2	True				
ANR	810029	Statement	(	1691:15:45857:45857	809545	3	True				
ANR	810030	Statement	D_ALWAYS	1691:17:45859:45866	809545	4	True				
ANR	810031	Statement	","	1691:25:45867:45867	809545	5	True				
ANR	810032	Statement	"""Cannot execute a VM universe job """	1691:27:45869:45903	809545	6	True				
ANR	810033	Statement	"""due to insufficient resource\\n"""	1692:5:45910:45941	809545	7	True				
ANR	810034	Statement	)	1692:37:45942:45942	809545	8	True				
ANR	810035	ExpressionStatement		1692:38:45943:45943	809545	9	True				
ANR	810036	ExpressionStatement	refuse ( stream )	1693:3:45948:45962	809545	10	True				
ANR	810037	CallExpression	refuse ( stream )		809545	0					
ANR	810038	Callee	refuse		809545	0					
ANR	810039	Identifier	refuse		809545	0					
ANR	810040	ArgumentList	stream		809545	1					
ANR	810041	Argument	stream		809545	0					
ANR	810042	Identifier	stream		809545	0					
ANR	810043	ExpressionStatement	ABORT	1694:3:45967:45972	809545	11	True				
ANR	810044	Identifier	ABORT		809545	0					
ANR	810045	IdentifierDeclStatement	Starter * tmp_starter ;	1700:1:46089:46109	809545	35	True				
ANR	810046	IdentifierDecl	* tmp_starter		809545	0					
ANR	810047	IdentifierDeclType	Starter *		809545	0					
ANR	810048	Identifier	tmp_starter		809545	1					
ANR	810049	IdentifierDeclStatement	bool no_starter = false ;	1701:1:46112:46135	809545	36	True				
ANR	810050	IdentifierDecl	no_starter = false		809545	0					
ANR	810051	IdentifierDeclType	bool		809545	0					
ANR	810052	Identifier	no_starter		809545	1					
ANR	810053	AssignmentExpression	no_starter = false		809545	2		=			
ANR	810054	Identifier	false		809545	0					
ANR	810055	Identifier	false		809545	1					
ANR	810056	ExpressionStatement	"tmp_starter = resmgr -> starter_mgr . findStarter ( req_classad , mach_classad , no_starter , starter )"	1702:1:46138:46278	809545	37	True				
ANR	810057	AssignmentExpression	"tmp_starter = resmgr -> starter_mgr . findStarter ( req_classad , mach_classad , no_starter , starter )"		809545	0		=			
ANR	810058	Identifier	tmp_starter		809545	0					
ANR	810059	CallExpression	"resmgr -> starter_mgr . findStarter ( req_classad , mach_classad , no_starter , starter )"		809545	1					
ANR	810060	Callee	resmgr -> starter_mgr . findStarter		809545	0					
ANR	810061	MemberAccess	resmgr -> starter_mgr . findStarter		809545	0					
ANR	810062	PtrMemberAccess	resmgr -> starter_mgr		809545	0					
ANR	810063	Identifier	resmgr		809545	0					
ANR	810064	Identifier	starter_mgr		809545	1					
ANR	810065	Identifier	findStarter		809545	1					
ANR	810066	ArgumentList	req_classad		809545	1					
ANR	810067	Argument	req_classad		809545	0					
ANR	810068	Identifier	req_classad		809545	0					
ANR	810069	Argument	mach_classad		809545	1					
ANR	810070	Identifier	mach_classad		809545	0					
ANR	810071	Argument	no_starter		809545	2					
ANR	810072	Identifier	no_starter		809545	0					
ANR	810073	Argument	starter		809545	3					
ANR	810074	Identifier	starter		809545	0					
ANR	810075	IfStatement	if ( ! tmp_starter )		809545	38					
ANR	810076	Condition	! tmp_starter	1706:5:46285:46297	809545	0	True				
ANR	810077	UnaryOperationExpression	! tmp_starter		809545	0					
ANR	810078	UnaryOperator	!		809545	0					
ANR	810079	Identifier	tmp_starter		809545	1					
ANR	810080	CompoundStatement		114:21:3337:3337	809545	1					
ANR	810081	IfStatement	if ( no_starter )		809545	0					
ANR	810082	Condition	no_starter	1707:6:46309:46318	809545	0	True				
ANR	810083	Identifier	no_starter		809545	0					
ANR	810084	CompoundStatement		115:19:3358:3358	809545	1					
ANR	810085	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""No valid starter found to run this job!  Is something wrong with your Condor installation?\\n"" )"	1708:3:46327:46447	809545	0	True				
ANR	810086	CallExpression	"rip -> dprintf ( D_ALWAYS , ""No valid starter found to run this job!  Is something wrong with your Condor installation?\\n"" )"		809545	0					
ANR	810087	Callee	rip -> dprintf		809545	0					
ANR	810088	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	810089	Identifier	rip		809545	0					
ANR	810090	Identifier	dprintf		809545	1					
ANR	810091	ArgumentList	D_ALWAYS		809545	1					
ANR	810092	Argument	D_ALWAYS		809545	0					
ANR	810093	Identifier	D_ALWAYS		809545	0					
ANR	810094	Argument	"""No valid starter found to run this job!  Is something wrong with your Condor installation?\\n"""		809545	1					
ANR	810095	PrimaryExpression	"""No valid starter found to run this job!  Is something wrong with your Condor installation?\\n"""		809545	0					
ANR	810096	ElseStatement	else		809545	0					
ANR	810097	CompoundStatement		118:7:3496:3496	809545	0					
ANR	810098	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Job Requirements check failed!\\n"" )"	1711:3:46465:46525	809545	0	True				
ANR	810099	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Job Requirements check failed!\\n"" )"		809545	0					
ANR	810100	Callee	rip -> dprintf		809545	0					
ANR	810101	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	810102	Identifier	rip		809545	0					
ANR	810103	Identifier	dprintf		809545	1					
ANR	810104	ArgumentList	D_ALWAYS		809545	1					
ANR	810105	Argument	D_ALWAYS		809545	0					
ANR	810106	Identifier	D_ALWAYS		809545	0					
ANR	810107	Argument	"""Job Requirements check failed!\\n"""		809545	1					
ANR	810108	PrimaryExpression	"""Job Requirements check failed!\\n"""		809545	0					
ANR	810109	ExpressionStatement	refuse ( stream )	1713:2:46533:46549	809545	1	True				
ANR	810110	CallExpression	refuse ( stream )		809545	0					
ANR	810111	Callee	refuse		809545	0					
ANR	810112	Identifier	refuse		809545	0					
ANR	810113	ArgumentList	stream		809545	1					
ANR	810114	Argument	stream		809545	0					
ANR	810115	Identifier	stream		809545	0					
ANR	810116	ExpressionStatement	ABORT	1714:5:46556:46561	809545	2	True				
ANR	810117	Identifier	ABORT		809545	0					
ANR	810118	ExpressionStatement	stream -> encode ( )	1719:1:46657:46673	809545	39	True				
ANR	810119	CallExpression	stream -> encode ( )		809545	0					
ANR	810120	Callee	stream -> encode		809545	0					
ANR	810121	PtrMemberAccess	stream -> encode		809545	0					
ANR	810122	Identifier	stream		809545	0					
ANR	810123	Identifier	encode		809545	1					
ANR	810124	ArgumentList			809545	1					
ANR	810125	IfStatement	if ( ! stream -> put ( OK ) )		809545	40					
ANR	810126	Condition	! stream -> put ( OK )	1720:5:46680:46697	809545	0	True				
ANR	810127	UnaryOperationExpression	! stream -> put ( OK )		809545	0					
ANR	810128	UnaryOperator	!		809545	0					
ANR	810129	CallExpression	stream -> put ( OK )		809545	1					
ANR	810130	Callee	stream -> put		809545	0					
ANR	810131	PtrMemberAccess	stream -> put		809545	0					
ANR	810132	Identifier	stream		809545	0					
ANR	810133	Identifier	put		809545	1					
ANR	810134	ArgumentList	OK		809545	1					
ANR	810135	Argument	OK		809545	0					
ANR	810136	Identifier	OK		809545	0					
ANR	810137	CompoundStatement		128:26:3737:3737	809545	1					
ANR	810138	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Can't send OK to shadow.\\n"" )"	1721:2:46705:46759	809545	0	True				
ANR	810139	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Can't send OK to shadow.\\n"" )"		809545	0					
ANR	810140	Callee	rip -> dprintf		809545	0					
ANR	810141	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	810142	Identifier	rip		809545	0					
ANR	810143	Identifier	dprintf		809545	1					
ANR	810144	ArgumentList	D_ALWAYS		809545	1					
ANR	810145	Argument	D_ALWAYS		809545	0					
ANR	810146	Identifier	D_ALWAYS		809545	0					
ANR	810147	Argument	"""Can't send OK to shadow.\\n"""		809545	1					
ANR	810148	PrimaryExpression	"""Can't send OK to shadow.\\n"""		809545	0					
ANR	810149	ExpressionStatement	ABORT	1722:2:46763:46768	809545	1	True				
ANR	810150	Identifier	ABORT		809545	0					
ANR	810151	IfStatement	if ( ! stream -> end_of_message ( ) )		809545	41					
ANR	810152	Condition	! stream -> end_of_message ( )	1724:5:46778:46802	809545	0	True				
ANR	810153	UnaryOperationExpression	! stream -> end_of_message ( )		809545	0					
ANR	810154	UnaryOperator	!		809545	0					
ANR	810155	CallExpression	stream -> end_of_message ( )		809545	1					
ANR	810156	Callee	stream -> end_of_message		809545	0					
ANR	810157	PtrMemberAccess	stream -> end_of_message		809545	0					
ANR	810158	Identifier	stream		809545	0					
ANR	810159	Identifier	end_of_message		809545	1					
ANR	810160	ArgumentList			809545	1					
ANR	810161	CompoundStatement		132:33:3842:3842	809545	1					
ANR	810162	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Can't send eom to shadow.\\n"" )"	1725:2:46810:46865	809545	0	True				
ANR	810163	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Can't send eom to shadow.\\n"" )"		809545	0					
ANR	810164	Callee	rip -> dprintf		809545	0					
ANR	810165	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	810166	Identifier	rip		809545	0					
ANR	810167	Identifier	dprintf		809545	1					
ANR	810168	ArgumentList	D_ALWAYS		809545	1					
ANR	810169	Argument	D_ALWAYS		809545	0					
ANR	810170	Identifier	D_ALWAYS		809545	0					
ANR	810171	Argument	"""Can't send eom to shadow.\\n"""		809545	1					
ANR	810172	PrimaryExpression	"""Can't send eom to shadow.\\n"""		809545	0					
ANR	810173	ExpressionStatement	ABORT	1726:2:46869:46874	809545	1	True				
ANR	810174	Identifier	ABORT		809545	0					
ANR	810175	IdentifierDeclStatement	Stream * shadow_sock = NULL ;	1733:1:47129:47155	809545	42	True				
ANR	810176	IdentifierDecl	* shadow_sock = NULL		809545	0					
ANR	810177	IdentifierDeclType	Stream *		809545	0					
ANR	810178	Identifier	shadow_sock		809545	1					
ANR	810179	AssignmentExpression	* shadow_sock = NULL		809545	2		=			
ANR	810180	Identifier	NULL		809545	0					
ANR	810181	Identifier	NULL		809545	1					
ANR	810182	IfStatement	if ( tmp_starter -> is_dc ( ) )		809545	43					
ANR	810183	Condition	tmp_starter -> is_dc ( )	1734:5:47162:47181	809545	0	True				
ANR	810184	CallExpression	tmp_starter -> is_dc ( )		809545	0					
ANR	810185	Callee	tmp_starter -> is_dc		809545	0					
ANR	810186	PtrMemberAccess	tmp_starter -> is_dc		809545	0					
ANR	810187	Identifier	tmp_starter		809545	0					
ANR	810188	Identifier	is_dc		809545	1					
ANR	810189	ArgumentList			809545	1					
ANR	810190	CompoundStatement		142:28:4221:4221	809545	1					
ANR	810191	ExpressionStatement	shadow_sock = stream	1735:2:47189:47209	809545	0	True				
ANR	810192	AssignmentExpression	shadow_sock = stream		809545	0		=			
ANR	810193	Identifier	shadow_sock		809545	0					
ANR	810194	Identifier	stream		809545	1					
ANR	810195	ElseStatement	else		809545	0					
ANR	810196	CompoundStatement		162:2:4773:4832	809545	0					
ANR	810197	ExpressionStatement	stRec . version_num = VERSION_FOR_FLOCK	1741:2:47303:47340	809545	0	True				
ANR	810198	AssignmentExpression	stRec . version_num = VERSION_FOR_FLOCK		809545	0		=			
ANR	810199	MemberAccess	stRec . version_num		809545	0					
ANR	810200	Identifier	stRec		809545	0					
ANR	810201	Identifier	version_num		809545	1					
ANR	810202	Identifier	VERSION_FOR_FLOCK		809545	1					
ANR	810203	ExpressionStatement	sock_1 = create_port ( & rsock_1 )	1742:2:47344:47374	809545	1	True				
ANR	810204	AssignmentExpression	sock_1 = create_port ( & rsock_1 )		809545	0		=			
ANR	810205	Identifier	sock_1		809545	0					
ANR	810206	CallExpression	create_port ( & rsock_1 )		809545	1					
ANR	810207	Callee	create_port		809545	0					
ANR	810208	Identifier	create_port		809545	0					
ANR	810209	ArgumentList	& rsock_1		809545	1					
ANR	810210	Argument	& rsock_1		809545	0					
ANR	810211	UnaryOperationExpression	& rsock_1		809545	0					
ANR	810212	UnaryOperator	&		809545	0					
ANR	810213	Identifier	rsock_1		809545	1					
ANR	810214	ExpressionStatement	sock_2 = create_port ( & rsock_2 )	1743:2:47378:47408	809545	2	True				
ANR	810215	AssignmentExpression	sock_2 = create_port ( & rsock_2 )		809545	0		=			
ANR	810216	Identifier	sock_2		809545	0					
ANR	810217	CallExpression	create_port ( & rsock_2 )		809545	1					
ANR	810218	Callee	create_port		809545	0					
ANR	810219	Identifier	create_port		809545	0					
ANR	810220	ArgumentList	& rsock_2		809545	1					
ANR	810221	Argument	& rsock_2		809545	0					
ANR	810222	UnaryOperationExpression	& rsock_2		809545	0					
ANR	810223	UnaryOperator	&		809545	0					
ANR	810224	Identifier	rsock_2		809545	1					
ANR	810225	ExpressionStatement	stRec . ports . port1 = rsock_1 . get_port ( )	1744:2:47412:47450	809545	3	True				
ANR	810226	AssignmentExpression	stRec . ports . port1 = rsock_1 . get_port ( )		809545	0		=			
ANR	810227	MemberAccess	stRec . ports . port1		809545	0					
ANR	810228	MemberAccess	stRec . ports		809545	0					
ANR	810229	Identifier	stRec		809545	0					
ANR	810230	Identifier	ports		809545	1					
ANR	810231	Identifier	port1		809545	1					
ANR	810232	CallExpression	rsock_1 . get_port ( )		809545	1					
ANR	810233	Callee	rsock_1 . get_port		809545	0					
ANR	810234	MemberAccess	rsock_1 . get_port		809545	0					
ANR	810235	Identifier	rsock_1		809545	0					
ANR	810236	Identifier	get_port		809545	1					
ANR	810237	ArgumentList			809545	1					
ANR	810238	ExpressionStatement	stRec . ports . port2 = rsock_2 . get_port ( )	1745:2:47454:47492	809545	4	True				
ANR	810239	AssignmentExpression	stRec . ports . port2 = rsock_2 . get_port ( )		809545	0		=			
ANR	810240	MemberAccess	stRec . ports . port2		809545	0					
ANR	810241	MemberAccess	stRec . ports		809545	0					
ANR	810242	Identifier	stRec		809545	0					
ANR	810243	Identifier	ports		809545	1					
ANR	810244	Identifier	port2		809545	1					
ANR	810245	CallExpression	rsock_2 . get_port ( )		809545	1					
ANR	810246	Callee	rsock_2 . get_port		809545	0					
ANR	810247	MemberAccess	rsock_2 . get_port		809545	0					
ANR	810248	Identifier	rsock_2		809545	0					
ANR	810249	Identifier	get_port		809545	1					
ANR	810250	ArgumentList			809545	1					
ANR	810251	ExpressionStatement	stRec . server_name = strdup ( my_full_hostname ( ) )	1747:2:47497:47545	809545	5	True				
ANR	810252	AssignmentExpression	stRec . server_name = strdup ( my_full_hostname ( ) )		809545	0		=			
ANR	810253	MemberAccess	stRec . server_name		809545	0					
ANR	810254	Identifier	stRec		809545	0					
ANR	810255	Identifier	server_name		809545	1					
ANR	810256	CallExpression	strdup ( my_full_hostname ( ) )		809545	1					
ANR	810257	Callee	strdup		809545	0					
ANR	810258	Identifier	strdup		809545	0					
ANR	810259	ArgumentList	my_full_hostname ( )		809545	1					
ANR	810260	Argument	my_full_hostname ( )		809545	0					
ANR	810261	CallExpression	my_full_hostname ( )		809545	0					
ANR	810262	Callee	my_full_hostname		809545	0					
ANR	810263	Identifier	my_full_hostname		809545	0					
ANR	810264	ArgumentList			809545	1					
ANR	810265	IdentifierDeclStatement	condor_sockaddr local_addr = get_local_ipaddr ( ) ;	1753:2:47686:47733	809545	6	True				
ANR	810266	IdentifierDecl	local_addr = get_local_ipaddr ( )		809545	0					
ANR	810267	IdentifierDeclType	condor_sockaddr		809545	0					
ANR	810268	Identifier	local_addr		809545	1					
ANR	810269	AssignmentExpression	local_addr = get_local_ipaddr ( )		809545	2		=			
ANR	810270	Identifier	local_addr		809545	0					
ANR	810271	CallExpression	get_local_ipaddr ( )		809545	1					
ANR	810272	Callee	get_local_ipaddr		809545	0					
ANR	810273	Identifier	get_local_ipaddr		809545	0					
ANR	810274	ArgumentList			809545	1					
ANR	810275	IdentifierDeclStatement	struct in_addr local_in_addr = local_addr . to_sin ( ) . sin_addr ;	1754:2:47737:47796	809545	7	True				
ANR	810276	IdentifierDecl	local_in_addr = local_addr . to_sin ( ) . sin_addr		809545	0					
ANR	810277	IdentifierDeclType	struct in_addr		809545	0					
ANR	810278	Identifier	local_in_addr		809545	1					
ANR	810279	AssignmentExpression	local_in_addr = local_addr . to_sin ( ) . sin_addr		809545	2		=			
ANR	810280	Identifier	local_in_addr		809545	0					
ANR	810281	MemberAccess	local_addr . to_sin ( ) . sin_addr		809545	1					
ANR	810282	CallExpression	local_addr . to_sin ( )		809545	0					
ANR	810283	Callee	local_addr . to_sin		809545	0					
ANR	810284	MemberAccess	local_addr . to_sin		809545	0					
ANR	810285	Identifier	local_addr		809545	0					
ANR	810286	Identifier	to_sin		809545	1					
ANR	810287	ArgumentList			809545	1					
ANR	810288	Identifier	sin_addr		809545	1					
ANR	810289	ExpressionStatement	"memcpy ( & stRec . ip_addr , & local_in_addr , sizeof ( struct in_addr ) )"	1755:2:47800:47864	809545	8	True				
ANR	810290	CallExpression	"memcpy ( & stRec . ip_addr , & local_in_addr , sizeof ( struct in_addr ) )"		809545	0					
ANR	810291	Callee	memcpy		809545	0					
ANR	810292	Identifier	memcpy		809545	0					
ANR	810293	ArgumentList	& stRec . ip_addr		809545	1					
ANR	810294	Argument	& stRec . ip_addr		809545	0					
ANR	810295	UnaryOperationExpression	& stRec . ip_addr		809545	0					
ANR	810296	UnaryOperator	&		809545	0					
ANR	810297	MemberAccess	stRec . ip_addr		809545	1					
ANR	810298	Identifier	stRec		809545	0					
ANR	810299	Identifier	ip_addr		809545	1					
ANR	810300	Argument	& local_in_addr		809545	1					
ANR	810301	UnaryOperationExpression	& local_in_addr		809545	0					
ANR	810302	UnaryOperator	&		809545	0					
ANR	810303	Identifier	local_in_addr		809545	1					
ANR	810304	Argument	sizeof ( struct in_addr )		809545	2					
ANR	810305	SizeofExpression	sizeof ( struct in_addr )		809545	0					
ANR	810306	Sizeof	sizeof		809545	0					
ANR	810307	SizeofOperand	struct in_addr		809545	1					
ANR	810308	ExpressionStatement	stream -> encode ( )	1757:2:47869:47885	809545	9	True				
ANR	810309	CallExpression	stream -> encode ( )		809545	0					
ANR	810310	Callee	stream -> encode		809545	0					
ANR	810311	PtrMemberAccess	stream -> encode		809545	0					
ANR	810312	Identifier	stream		809545	0					
ANR	810313	Identifier	encode		809545	1					
ANR	810314	ArgumentList			809545	1					
ANR	810315	IfStatement	if ( ! stream -> code ( stRec ) )		809545	10					
ANR	810316	Condition	! stream -> code ( stRec )	1758:6:47893:47912	809545	0	True				
ANR	810317	UnaryOperationExpression	! stream -> code ( stRec )		809545	0					
ANR	810318	UnaryOperator	!		809545	0					
ANR	810319	CallExpression	stream -> code ( stRec )		809545	1					
ANR	810320	Callee	stream -> code		809545	0					
ANR	810321	PtrMemberAccess	stream -> code		809545	0					
ANR	810322	Identifier	stream		809545	0					
ANR	810323	Identifier	code		809545	1					
ANR	810324	ArgumentList	stRec		809545	1					
ANR	810325	Argument	stRec		809545	0					
ANR	810326	Identifier	stRec		809545	0					
ANR	810327	CompoundStatement		166:28:4951:4951	809545	1					
ANR	810328	ExpressionStatement	ABORT	1759:3:47920:47925	809545	0	True				
ANR	810329	Identifier	ABORT		809545	0					
ANR	810330	IfStatement	if ( ! stream -> end_of_message ( ) )		809545	11					
ANR	810331	Condition	! stream -> end_of_message ( )	1762:6:47938:47962	809545	0	True				
ANR	810332	UnaryOperationExpression	! stream -> end_of_message ( )		809545	0					
ANR	810333	UnaryOperator	!		809545	0					
ANR	810334	CallExpression	stream -> end_of_message ( )		809545	1					
ANR	810335	Callee	stream -> end_of_message		809545	0					
ANR	810336	PtrMemberAccess	stream -> end_of_message		809545	0					
ANR	810337	Identifier	stream		809545	0					
ANR	810338	Identifier	end_of_message		809545	1					
ANR	810339	ArgumentList			809545	1					
ANR	810340	CompoundStatement		170:33:5001:5001	809545	1					
ANR	810341	ExpressionStatement	ABORT	1763:3:47970:47975	809545	0	True				
ANR	810342	Identifier	ABORT		809545	0					
ANR	810343	ExpressionStatement	free ( stRec . server_name )	1767:2:48058:48083	809545	12	True				
ANR	810344	CallExpression	free ( stRec . server_name )		809545	0					
ANR	810345	Callee	free		809545	0					
ANR	810346	Identifier	free		809545	0					
ANR	810347	ArgumentList	stRec . server_name		809545	1					
ANR	810348	Argument	stRec . server_name		809545	0					
ANR	810349	MemberAccess	stRec . server_name		809545	0					
ANR	810350	Identifier	stRec		809545	0					
ANR	810351	Identifier	server_name		809545	1					
ANR	810352	ExpressionStatement	len = sizeof frm	1770:2:48126:48142	809545	13	True				
ANR	810353	AssignmentExpression	len = sizeof frm		809545	0		=			
ANR	810354	Identifier	len		809545	0					
ANR	810355	SizeofExpression	sizeof frm		809545	1					
ANR	810356	Sizeof	sizeof		809545	0					
ANR	810357	Identifier	frm		809545	1					
ANR	810358	ExpressionStatement	"memset ( ( char * ) & frm , 0 , sizeof frm )"	1771:2:48146:48182	809545	14	True				
ANR	810359	CallExpression	"memset ( ( char * ) & frm , 0 , sizeof frm )"		809545	0					
ANR	810360	Callee	memset		809545	0					
ANR	810361	Identifier	memset		809545	0					
ANR	810362	ArgumentList	( char * ) & frm		809545	1					
ANR	810363	Argument	( char * ) & frm		809545	0					
ANR	810364	CastExpression	( char * ) & frm		809545	0					
ANR	810365	CastTarget	char *		809545	0					
ANR	810366	UnaryOperationExpression	& frm		809545	1					
ANR	810367	UnaryOperator	&		809545	0					
ANR	810368	Identifier	frm		809545	1					
ANR	810369	Argument	0		809545	1					
ANR	810370	PrimaryExpression	0		809545	0					
ANR	810371	Argument	sizeof frm		809545	2					
ANR	810372	SizeofExpression	sizeof frm		809545	0					
ANR	810373	Sizeof	sizeof		809545	0					
ANR	810374	Identifier	frm		809545	1					
ANR	810375	WhileStatement	"while ( ( fd_1 = tcp_accept_timeout ( sock_1 , ( struct sockaddr * ) & frm , & len , 150 ) ) < 0 )"		809545	15					
ANR	810376	Condition	"( fd_1 = tcp_accept_timeout ( sock_1 , ( struct sockaddr * ) & frm , & len , 150 ) ) < 0"	1772:9:48193:48275	809545	0	True				
ANR	810377	RelationalExpression	"( fd_1 = tcp_accept_timeout ( sock_1 , ( struct sockaddr * ) & frm , & len , 150 ) ) < 0"		809545	0		<			
ANR	810378	AssignmentExpression	"fd_1 = tcp_accept_timeout ( sock_1 , ( struct sockaddr * ) & frm , & len , 150 )"		809545	0		=			
ANR	810379	Identifier	fd_1		809545	0					
ANR	810380	CallExpression	"tcp_accept_timeout ( sock_1 , ( struct sockaddr * ) & frm , & len , 150 )"		809545	1					
ANR	810381	Callee	tcp_accept_timeout		809545	0					
ANR	810382	Identifier	tcp_accept_timeout		809545	0					
ANR	810383	ArgumentList	sock_1		809545	1					
ANR	810384	Argument	sock_1		809545	0					
ANR	810385	Identifier	sock_1		809545	0					
ANR	810386	Argument	( struct sockaddr * ) & frm		809545	1					
ANR	810387	CastExpression	( struct sockaddr * ) & frm		809545	0					
ANR	810388	CastTarget	struct sockaddr *		809545	0					
ANR	810389	UnaryOperationExpression	& frm		809545	1					
ANR	810390	UnaryOperator	&		809545	0					
ANR	810391	Identifier	frm		809545	1					
ANR	810392	Argument	& len		809545	2					
ANR	810393	UnaryOperationExpression	& len		809545	0					
ANR	810394	UnaryOperator	&		809545	0					
ANR	810395	Identifier	len		809545	1					
ANR	810396	Argument	150		809545	3					
ANR	810397	PrimaryExpression	150		809545	0					
ANR	810398	PrimaryExpression	0		809545	1					
ANR	810399	CompoundStatement		181:28:5315:5315	809545	1					
ANR	810400	IfStatement	if ( fd_1 != - 3 )		809545	0					
ANR	810401	Condition	fd_1 != - 3	1774:7:48288:48297	809545	0	True				
ANR	810402	EqualityExpression	fd_1 != - 3		809545	0		!=			
ANR	810403	Identifier	fd_1		809545	0					
ANR	810404	UnaryOperationExpression	- 3		809545	1					
ANR	810405	UnaryOperator	-		809545	0					
ANR	810406	PrimaryExpression	3		809545	1					
ANR	810407	CompoundStatement		182:20:5337:5337	809545	1					
ANR	810408	IfStatement	if ( fd_1 == - 2 )		809545	0					
ANR	810409	Condition	fd_1 == - 2	1775:8:48357:48366	809545	0	True				
ANR	810410	EqualityExpression	fd_1 == - 2		809545	0		==			
ANR	810411	Identifier	fd_1		809545	0					
ANR	810412	UnaryOperationExpression	- 2		809545	1					
ANR	810413	UnaryOperator	-		809545	0					
ANR	810414	PrimaryExpression	2		809545	1					
ANR	810415	CompoundStatement		183:21:5406:5406	809545	1					
ANR	810416	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""accept timed out\\n"" )"	1776:5:48377:48423	809545	0	True				
ANR	810417	CallExpression	"rip -> dprintf ( D_ALWAYS , ""accept timed out\\n"" )"		809545	0					
ANR	810418	Callee	rip -> dprintf		809545	0					
ANR	810419	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	810420	Identifier	rip		809545	0					
ANR	810421	Identifier	dprintf		809545	1					
ANR	810422	ArgumentList	D_ALWAYS		809545	1					
ANR	810423	Argument	D_ALWAYS		809545	0					
ANR	810424	Identifier	D_ALWAYS		809545	0					
ANR	810425	Argument	"""accept timed out\\n"""		809545	1					
ANR	810426	PrimaryExpression	"""accept timed out\\n"""		809545	0					
ANR	810427	ExpressionStatement	ABORT	1777:5:48430:48435	809545	1	True				
ANR	810428	Identifier	ABORT		809545	0					
ANR	810429	ElseStatement	else		809545	0					
ANR	810430	CompoundStatement		186:11:5484:5484	809545	0					
ANR	810431	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""tcp_accept_timeout returns %d, errno=%d\\n"" , fd_1 , errno )"	1779:5:48455:48558	809545	0	True				
ANR	810432	CallExpression	"rip -> dprintf ( D_ALWAYS , ""tcp_accept_timeout returns %d, errno=%d\\n"" , fd_1 , errno )"		809545	0					
ANR	810433	Callee	rip -> dprintf		809545	0					
ANR	810434	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	810435	Identifier	rip		809545	0					
ANR	810436	Identifier	dprintf		809545	1					
ANR	810437	ArgumentList	D_ALWAYS		809545	1					
ANR	810438	Argument	D_ALWAYS		809545	0					
ANR	810439	Identifier	D_ALWAYS		809545	0					
ANR	810440	Argument	"""tcp_accept_timeout returns %d, errno=%d\\n"""		809545	1					
ANR	810441	PrimaryExpression	"""tcp_accept_timeout returns %d, errno=%d\\n"""		809545	0					
ANR	810442	Argument	fd_1		809545	2					
ANR	810443	Identifier	fd_1		809545	0					
ANR	810444	Argument	errno		809545	3					
ANR	810445	Identifier	errno		809545	0					
ANR	810446	ExpressionStatement	ABORT	1782:5:48565:48570	809545	1	True				
ANR	810447	Identifier	ABORT		809545	0					
ANR	810448	ExpressionStatement	len = sizeof frm	1788:2:48629:48645	809545	16	True				
ANR	810449	AssignmentExpression	len = sizeof frm		809545	0		=			
ANR	810450	Identifier	len		809545	0					
ANR	810451	SizeofExpression	sizeof frm		809545	1					
ANR	810452	Sizeof	sizeof		809545	0					
ANR	810453	Identifier	frm		809545	1					
ANR	810454	ExpressionStatement	"memset ( ( char * ) & frm , 0 , sizeof frm )"	1789:2:48649:48684	809545	17	True				
ANR	810455	CallExpression	"memset ( ( char * ) & frm , 0 , sizeof frm )"		809545	0					
ANR	810456	Callee	memset		809545	0					
ANR	810457	Identifier	memset		809545	0					
ANR	810458	ArgumentList	( char * ) & frm		809545	1					
ANR	810459	Argument	( char * ) & frm		809545	0					
ANR	810460	CastExpression	( char * ) & frm		809545	0					
ANR	810461	CastTarget	char *		809545	0					
ANR	810462	UnaryOperationExpression	& frm		809545	1					
ANR	810463	UnaryOperator	&		809545	0					
ANR	810464	Identifier	frm		809545	1					
ANR	810465	Argument	0		809545	1					
ANR	810466	PrimaryExpression	0		809545	0					
ANR	810467	Argument	sizeof frm		809545	2					
ANR	810468	SizeofExpression	sizeof frm		809545	0					
ANR	810469	Sizeof	sizeof		809545	0					
ANR	810470	Identifier	frm		809545	1					
ANR	810471	WhileStatement	"while ( ( fd_2 = tcp_accept_timeout ( sock_2 , ( struct sockaddr * ) & frm , & len , 150 ) ) < 0 )"		809545	18					
ANR	810472	Condition	"( fd_2 = tcp_accept_timeout ( sock_2 , ( struct sockaddr * ) & frm , & len , 150 ) ) < 0"	1790:9:48695:48781	809545	0	True				
ANR	810473	RelationalExpression	"( fd_2 = tcp_accept_timeout ( sock_2 , ( struct sockaddr * ) & frm , & len , 150 ) ) < 0"		809545	0		<			
ANR	810474	AssignmentExpression	"fd_2 = tcp_accept_timeout ( sock_2 , ( struct sockaddr * ) & frm , & len , 150 )"		809545	0		=			
ANR	810475	Identifier	fd_2		809545	0					
ANR	810476	CallExpression	"tcp_accept_timeout ( sock_2 , ( struct sockaddr * ) & frm , & len , 150 )"		809545	1					
ANR	810477	Callee	tcp_accept_timeout		809545	0					
ANR	810478	Identifier	tcp_accept_timeout		809545	0					
ANR	810479	ArgumentList	sock_2		809545	1					
ANR	810480	Argument	sock_2		809545	0					
ANR	810481	Identifier	sock_2		809545	0					
ANR	810482	Argument	( struct sockaddr * ) & frm		809545	1					
ANR	810483	CastExpression	( struct sockaddr * ) & frm		809545	0					
ANR	810484	CastTarget	struct sockaddr *		809545	0					
ANR	810485	UnaryOperationExpression	& frm		809545	1					
ANR	810486	UnaryOperator	&		809545	0					
ANR	810487	Identifier	frm		809545	1					
ANR	810488	Argument	& len		809545	2					
ANR	810489	UnaryOperationExpression	& len		809545	0					
ANR	810490	UnaryOperator	&		809545	0					
ANR	810491	Identifier	len		809545	1					
ANR	810492	Argument	150		809545	3					
ANR	810493	PrimaryExpression	150		809545	0					
ANR	810494	PrimaryExpression	0		809545	1					
ANR	810495	CompoundStatement		199:30:5821:5821	809545	1					
ANR	810496	IfStatement	if ( fd_2 != - 3 )		809545	0					
ANR	810497	Condition	fd_2 != - 3	1792:7:48794:48803	809545	0	True				
ANR	810498	EqualityExpression	fd_2 != - 3		809545	0		!=			
ANR	810499	Identifier	fd_2		809545	0					
ANR	810500	UnaryOperationExpression	- 3		809545	1					
ANR	810501	UnaryOperator	-		809545	0					
ANR	810502	PrimaryExpression	3		809545	1					
ANR	810503	CompoundStatement		200:20:5843:5843	809545	1					
ANR	810504	IfStatement	if ( fd_2 == - 2 )		809545	0					
ANR	810505	Condition	fd_2 == - 2	1793:8:48863:48872	809545	0	True				
ANR	810506	EqualityExpression	fd_2 == - 2		809545	0		==			
ANR	810507	Identifier	fd_2		809545	0					
ANR	810508	UnaryOperationExpression	- 2		809545	1					
ANR	810509	UnaryOperator	-		809545	0					
ANR	810510	PrimaryExpression	2		809545	1					
ANR	810511	CompoundStatement		201:21:5912:5912	809545	1					
ANR	810512	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""accept timed out\\n"" )"	1794:5:48883:48929	809545	0	True				
ANR	810513	CallExpression	"rip -> dprintf ( D_ALWAYS , ""accept timed out\\n"" )"		809545	0					
ANR	810514	Callee	rip -> dprintf		809545	0					
ANR	810515	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	810516	Identifier	rip		809545	0					
ANR	810517	Identifier	dprintf		809545	1					
ANR	810518	ArgumentList	D_ALWAYS		809545	1					
ANR	810519	Argument	D_ALWAYS		809545	0					
ANR	810520	Identifier	D_ALWAYS		809545	0					
ANR	810521	Argument	"""accept timed out\\n"""		809545	1					
ANR	810522	PrimaryExpression	"""accept timed out\\n"""		809545	0					
ANR	810523	ExpressionStatement	ABORT	1795:5:48936:48941	809545	1	True				
ANR	810524	Identifier	ABORT		809545	0					
ANR	810525	ElseStatement	else		809545	0					
ANR	810526	CompoundStatement		204:11:5990:5990	809545	0					
ANR	810527	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""tcp_accept_timeout returns %d, errno=%d\\n"" , fd_2 , errno )"	1797:5:48961:49064	809545	0	True				
ANR	810528	CallExpression	"rip -> dprintf ( D_ALWAYS , ""tcp_accept_timeout returns %d, errno=%d\\n"" , fd_2 , errno )"		809545	0					
ANR	810529	Callee	rip -> dprintf		809545	0					
ANR	810530	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	810531	Identifier	rip		809545	0					
ANR	810532	Identifier	dprintf		809545	1					
ANR	810533	ArgumentList	D_ALWAYS		809545	1					
ANR	810534	Argument	D_ALWAYS		809545	0					
ANR	810535	Identifier	D_ALWAYS		809545	0					
ANR	810536	Argument	"""tcp_accept_timeout returns %d, errno=%d\\n"""		809545	1					
ANR	810537	PrimaryExpression	"""tcp_accept_timeout returns %d, errno=%d\\n"""		809545	0					
ANR	810538	Argument	fd_2		809545	2					
ANR	810539	Identifier	fd_2		809545	0					
ANR	810540	Argument	errno		809545	3					
ANR	810541	Identifier	errno		809545	0					
ANR	810542	ExpressionStatement	ABORT	1800:5:49071:49076	809545	1	True				
ANR	810543	Identifier	ABORT		809545	0					
ANR	810544	ExpressionStatement	"tmp_starter -> setPorts ( fd_1 , fd_2 )"	1804:2:49095:49130	809545	19	True				
ANR	810545	CallExpression	"tmp_starter -> setPorts ( fd_1 , fd_2 )"		809545	0					
ANR	810546	Callee	tmp_starter -> setPorts		809545	0					
ANR	810547	PtrMemberAccess	tmp_starter -> setPorts		809545	0					
ANR	810548	Identifier	tmp_starter		809545	0					
ANR	810549	Identifier	setPorts		809545	1					
ANR	810550	ArgumentList	fd_1		809545	1					
ANR	810551	Argument	fd_1		809545	0					
ANR	810552	Identifier	fd_1		809545	0					
ANR	810553	Argument	fd_2		809545	1					
ANR	810554	Identifier	fd_2		809545	0					
ANR	810555	ExpressionStatement	rip -> r_cur -> setStarter ( tmp_starter )	1812:1:49406:49443	809545	44	True				
ANR	810556	CallExpression	rip -> r_cur -> setStarter ( tmp_starter )		809545	0					
ANR	810557	Callee	rip -> r_cur -> setStarter		809545	0					
ANR	810558	PtrMemberAccess	rip -> r_cur -> setStarter		809545	0					
ANR	810559	PtrMemberAccess	rip -> r_cur		809545	0					
ANR	810560	Identifier	rip		809545	0					
ANR	810561	Identifier	r_cur		809545	1					
ANR	810562	Identifier	setStarter		809545	1					
ANR	810563	ArgumentList	tmp_starter		809545	1					
ANR	810564	Argument	tmp_starter		809545	0					
ANR	810565	Identifier	tmp_starter		809545	0					
ANR	810566	IdentifierDeclStatement	Starter * vm_starter = tmp_starter ;	1814:1:49510:49543	809545	45	True				
ANR	810567	IdentifierDecl	* vm_starter = tmp_starter		809545	0					
ANR	810568	IdentifierDeclType	Starter *		809545	0					
ANR	810569	Identifier	vm_starter		809545	1					
ANR	810570	AssignmentExpression	* vm_starter = tmp_starter		809545	2		=			
ANR	810571	Identifier	tmp_starter		809545	0					
ANR	810572	Identifier	tmp_starter		809545	1					
ANR	810573	ExpressionStatement	tmp_starter = NULL	1815:1:49546:49564	809545	46	True				
ANR	810574	AssignmentExpression	tmp_starter = NULL		809545	0		=			
ANR	810575	Identifier	tmp_starter		809545	0					
ANR	810576	Identifier	NULL		809545	1					
ANR	810577	IdentifierDeclStatement	float rank = rip -> compute_rank ( req_classad ) ;	1818:1:49611:49656	809545	47	True				
ANR	810578	IdentifierDecl	rank = rip -> compute_rank ( req_classad )		809545	0					
ANR	810579	IdentifierDeclType	float		809545	0					
ANR	810580	Identifier	rank		809545	1					
ANR	810581	AssignmentExpression	rank = rip -> compute_rank ( req_classad )		809545	2		=			
ANR	810582	Identifier	rank		809545	0					
ANR	810583	CallExpression	rip -> compute_rank ( req_classad )		809545	1					
ANR	810584	Callee	rip -> compute_rank		809545	0					
ANR	810585	PtrMemberAccess	rip -> compute_rank		809545	0					
ANR	810586	Identifier	rip		809545	0					
ANR	810587	Identifier	compute_rank		809545	1					
ANR	810588	ArgumentList	req_classad		809545	1					
ANR	810589	Argument	req_classad		809545	0					
ANR	810590	Identifier	req_classad		809545	0					
ANR	810591	ExpressionStatement	rip -> r_cur -> setrank ( rank )	1819:1:49660:49687	809545	48	True				
ANR	810592	CallExpression	rip -> r_cur -> setrank ( rank )		809545	0					
ANR	810593	Callee	rip -> r_cur -> setrank		809545	0					
ANR	810594	PtrMemberAccess	rip -> r_cur -> setrank		809545	0					
ANR	810595	PtrMemberAccess	rip -> r_cur		809545	0					
ANR	810596	Identifier	rip		809545	0					
ANR	810597	Identifier	r_cur		809545	1					
ANR	810598	Identifier	setrank		809545	1					
ANR	810599	ArgumentList	rank		809545	1					
ANR	810600	Argument	rank		809545	0					
ANR	810601	Identifier	rank		809545	0					
ANR	810602	ExpressionStatement	rip -> r_cur -> saveJobInfo ( req_classad )	1823:1:49812:49850	809545	49	True				
ANR	810603	CallExpression	rip -> r_cur -> saveJobInfo ( req_classad )		809545	0					
ANR	810604	Callee	rip -> r_cur -> saveJobInfo		809545	0					
ANR	810605	PtrMemberAccess	rip -> r_cur -> saveJobInfo		809545	0					
ANR	810606	PtrMemberAccess	rip -> r_cur		809545	0					
ANR	810607	Identifier	rip		809545	0					
ANR	810608	Identifier	r_cur		809545	1					
ANR	810609	Identifier	saveJobInfo		809545	1					
ANR	810610	ArgumentList	req_classad		809545	1					
ANR	810611	Argument	req_classad		809545	0					
ANR	810612	Identifier	req_classad		809545	0					
ANR	810613	ExpressionStatement	req_classad = NULL	1824:1:49853:49871	809545	50	True				
ANR	810614	AssignmentExpression	req_classad = NULL		809545	0		=			
ANR	810615	Identifier	req_classad		809545	0					
ANR	810616	Identifier	NULL		809545	1					
ANR	810617	IfStatement	if ( ! rip -> r_cur -> spawnStarter ( shadow_sock ) )		809545	51					
ANR	810618	Condition	! rip -> r_cur -> spawnStarter ( shadow_sock )	1827:5:49911:49949	809545	0	True				
ANR	810619	UnaryOperationExpression	! rip -> r_cur -> spawnStarter ( shadow_sock )		809545	0					
ANR	810620	UnaryOperator	!		809545	0					
ANR	810621	CallExpression	rip -> r_cur -> spawnStarter ( shadow_sock )		809545	1					
ANR	810622	Callee	rip -> r_cur -> spawnStarter		809545	0					
ANR	810623	PtrMemberAccess	rip -> r_cur -> spawnStarter		809545	0					
ANR	810624	PtrMemberAccess	rip -> r_cur		809545	0					
ANR	810625	Identifier	rip		809545	0					
ANR	810626	Identifier	r_cur		809545	1					
ANR	810627	Identifier	spawnStarter		809545	1					
ANR	810628	ArgumentList	shadow_sock		809545	1					
ANR	810629	Argument	shadow_sock		809545	0					
ANR	810630	Identifier	shadow_sock		809545	0					
ANR	810631	CompoundStatement		235:47:6989:6989	809545	1					
ANR	810632	ExpressionStatement	ABORT	1832:2:50186:50191	809545	0	True				
ANR	810633	Identifier	ABORT		809545	0					
ANR	810634	IfStatement	if ( job_univ == CONDOR_UNIVERSE_VM )		809545	52					
ANR	810635	Condition	job_univ == CONDOR_UNIVERSE_VM	1835:5:50202:50231	809545	0	True				
ANR	810636	EqualityExpression	job_univ == CONDOR_UNIVERSE_VM		809545	0		==			
ANR	810637	Identifier	job_univ		809545	0					
ANR	810638	Identifier	CONDOR_UNIVERSE_VM		809545	1					
ANR	810639	CompoundStatement		243:38:7271:7271	809545	1					
ANR	810640	IfStatement	"if ( resmgr -> m_vmuniverse_mgr . allocVM ( vm_starter -> pid ( ) , vm_classad , rip -> executeDir ( ) ) == false )"		809545	0					
ANR	810641	Condition	"resmgr -> m_vmuniverse_mgr . allocVM ( vm_starter -> pid ( ) , vm_classad , rip -> executeDir ( ) ) == false"	1836:6:50243:50338	809545	0	True				
ANR	810642	EqualityExpression	"resmgr -> m_vmuniverse_mgr . allocVM ( vm_starter -> pid ( ) , vm_classad , rip -> executeDir ( ) ) == false"		809545	0		==			
ANR	810643	CallExpression	"resmgr -> m_vmuniverse_mgr . allocVM ( vm_starter -> pid ( ) , vm_classad , rip -> executeDir ( ) )"		809545	0					
ANR	810644	Callee	resmgr -> m_vmuniverse_mgr . allocVM		809545	0					
ANR	810645	MemberAccess	resmgr -> m_vmuniverse_mgr . allocVM		809545	0					
ANR	810646	PtrMemberAccess	resmgr -> m_vmuniverse_mgr		809545	0					
ANR	810647	Identifier	resmgr		809545	0					
ANR	810648	Identifier	m_vmuniverse_mgr		809545	1					
ANR	810649	Identifier	allocVM		809545	1					
ANR	810650	ArgumentList	vm_starter -> pid ( )		809545	1					
ANR	810651	Argument	vm_starter -> pid ( )		809545	0					
ANR	810652	CallExpression	vm_starter -> pid ( )		809545	0					
ANR	810653	Callee	vm_starter -> pid		809545	0					
ANR	810654	PtrMemberAccess	vm_starter -> pid		809545	0					
ANR	810655	Identifier	vm_starter		809545	0					
ANR	810656	Identifier	pid		809545	1					
ANR	810657	ArgumentList			809545	1					
ANR	810658	Argument	vm_classad		809545	1					
ANR	810659	Identifier	vm_classad		809545	0					
ANR	810660	Argument	rip -> executeDir ( )		809545	2					
ANR	810661	CallExpression	rip -> executeDir ( )		809545	0					
ANR	810662	Callee	rip -> executeDir		809545	0					
ANR	810663	PtrMemberAccess	rip -> executeDir		809545	0					
ANR	810664	Identifier	rip		809545	0					
ANR	810665	Identifier	executeDir		809545	1					
ANR	810666	ArgumentList			809545	1					
ANR	810667	Identifier	false		809545	1					
ANR	810668	CompoundStatement		245:15:7378:7378	809545	1					
ANR	810669	ExpressionStatement	ABORT	1838:3:50347:50352	809545	0	True				
ANR	810670	Identifier	ABORT		809545	0					
ANR	810671	ExpressionStatement	vm_starter = NULL	1840:2:50360:50377	809545	1	True				
ANR	810672	AssignmentExpression	vm_starter = NULL		809545	0		=			
ANR	810673	Identifier	vm_starter		809545	0					
ANR	810674	Identifier	NULL		809545	1					
ANR	810675	ExpressionStatement	resmgr -> walk ( & Resource :: update )	1843:2:50410:50442	809545	2	True				
ANR	810676	CallExpression	resmgr -> walk ( & Resource :: update )		809545	0					
ANR	810677	Callee	resmgr -> walk		809545	0					
ANR	810678	PtrMemberAccess	resmgr -> walk		809545	0					
ANR	810679	Identifier	resmgr		809545	0					
ANR	810680	Identifier	walk		809545	1					
ANR	810681	ArgumentList	& Resource :: update		809545	1					
ANR	810682	Argument	& Resource :: update		809545	0					
ANR	810683	UnaryOperationExpression	& Resource :: update		809545	0					
ANR	810684	UnaryOperator	&		809545	0					
ANR	810685	Identifier	Resource :: update		809545	1					
ANR	810686	ExpressionStatement	"rip -> r_cur -> publish ( rip -> r_classad , A_PUBLIC )"	1847:1:50514:50561	809545	53	True				
ANR	810687	CallExpression	"rip -> r_cur -> publish ( rip -> r_classad , A_PUBLIC )"		809545	0					
ANR	810688	Callee	rip -> r_cur -> publish		809545	0					
ANR	810689	PtrMemberAccess	rip -> r_cur -> publish		809545	0					
ANR	810690	PtrMemberAccess	rip -> r_cur		809545	0					
ANR	810691	Identifier	rip		809545	0					
ANR	810692	Identifier	r_cur		809545	1					
ANR	810693	Identifier	publish		809545	1					
ANR	810694	ArgumentList	rip -> r_classad		809545	1					
ANR	810695	Argument	rip -> r_classad		809545	0					
ANR	810696	PtrMemberAccess	rip -> r_classad		809545	0					
ANR	810697	Identifier	rip		809545	0					
ANR	810698	Identifier	r_classad		809545	1					
ANR	810699	Argument	A_PUBLIC		809545	1					
ANR	810700	Identifier	A_PUBLIC		809545	0					
ANR	810701	ExpressionStatement	"rip -> dprintf ( D_FAILURE | D_ALWAYS , ""State change: claim-activation protocol successful\\n"" )"	1849:1:50565:50662	809545	54	True				
ANR	810702	CallExpression	"rip -> dprintf ( D_FAILURE | D_ALWAYS , ""State change: claim-activation protocol successful\\n"" )"		809545	0					
ANR	810703	Callee	rip -> dprintf		809545	0					
ANR	810704	PtrMemberAccess	rip -> dprintf		809545	0					
ANR	810705	Identifier	rip		809545	0					
ANR	810706	Identifier	dprintf		809545	1					
ANR	810707	ArgumentList	D_FAILURE | D_ALWAYS		809545	1					
ANR	810708	Argument	D_FAILURE | D_ALWAYS		809545	0					
ANR	810709	InclusiveOrExpression	D_FAILURE | D_ALWAYS		809545	0		|			
ANR	810710	Identifier	D_FAILURE		809545	0					
ANR	810711	Identifier	D_ALWAYS		809545	1					
ANR	810712	Argument	"""State change: claim-activation protocol successful\\n"""		809545	1					
ANR	810713	PrimaryExpression	"""State change: claim-activation protocol successful\\n"""		809545	0					
ANR	810714	ExpressionStatement	rip -> change_state ( busy_act )	1851:1:50665:50694	809545	55	True				
ANR	810715	CallExpression	rip -> change_state ( busy_act )		809545	0					
ANR	810716	Callee	rip -> change_state		809545	0					
ANR	810717	PtrMemberAccess	rip -> change_state		809545	0					
ANR	810718	Identifier	rip		809545	0					
ANR	810719	Identifier	change_state		809545	1					
ANR	810720	ArgumentList	busy_act		809545	1					
ANR	810721	Argument	busy_act		809545	0					
ANR	810722	Identifier	busy_act		809545	0					
ANR	810723	ExpressionStatement	free ( shadow_addr )	1853:1:50698:50717	809545	56	True				
ANR	810724	CallExpression	free ( shadow_addr )		809545	0					
ANR	810725	Callee	free		809545	0					
ANR	810726	Identifier	free		809545	0					
ANR	810727	ArgumentList	shadow_addr		809545	1					
ANR	810728	Argument	shadow_addr		809545	0					
ANR	810729	Identifier	shadow_addr		809545	0					
ANR	810730	ReturnStatement	return TRUE ;	1854:1:50720:50731	809545	57	True				
ANR	810731	Identifier	TRUE		809545	0					
ANR	810732	ReturnType	FALSE int		809545	1					
ANR	810733	Identifier	activate_claim		809545	2					
ANR	810734	ParameterList	"Resource * rip , Stream * stream"		809545	3					
ANR	810735	Parameter	Resource * rip	1592:16:42930:42942	809545	0	True				
ANR	810736	ParameterType	Resource *		809545	0					
ANR	810737	Identifier	rip		809545	1					
ANR	810738	Parameter	Stream * stream	1592:31:42945:42958	809545	1	True				
ANR	810739	ParameterType	Stream *		809545	0					
ANR	810740	Identifier	stream		809545	1					
ANR	810741	CFGEntryNode	ENTRY		809545		True				
ANR	810742	CFGExitNode	EXIT		809545		True				
ANR	810743	Symbol	& frm		809545						
ANR	810744	Symbol	sock -> peer_addr		809545						
ANR	810745	Symbol	my_full_hostname		809545						
ANR	810746	Symbol	len		809545						
ANR	810747	Symbol	rip -> r_cur		809545						
ANR	810748	Symbol	rip		809545						
ANR	810749	Symbol	MAX_STARTERS		809545						
ANR	810750	Symbol	rsock_2 . get_port		809545						
ANR	810751	Symbol	rank		809545						
ANR	810752	Symbol	rip -> executeDir		809545						
ANR	810753	Symbol	resmgr -> m_vmuniverse_mgr		809545						
ANR	810754	Symbol	sock -> peer_addr ( ) . to_ip_string ( ) . Value		809545						
ANR	810755	Symbol	frm		809545						
ANR	810756	Symbol	errno		809545						
ANR	810757	Symbol	resmgr -> m_vmuniverse_mgr . allocVM		809545						
ANR	810758	Symbol	ATTR_REQUIREMENTS		809545						
ANR	810759	Symbol	* resmgr		809545						
ANR	810760	Symbol	VERSION_FOR_FLOCK		809545						
ANR	810761	Symbol	A_TIMEOUT		809545						
ANR	810762	Symbol	req_classad -> LookupInteger		809545						
ANR	810763	Symbol	* req_classad		809545						
ANR	810764	Symbol	& vm_classad		809545						
ANR	810765	Symbol	& rsock_1		809545						
ANR	810766	Symbol	& rsock_2		809545						
ANR	810767	Symbol	busy_act		809545						
ANR	810768	Symbol	resmgr		809545						
ANR	810769	Symbol	tmp_starter		809545						
ANR	810770	Symbol	* mach_classad		809545						
ANR	810771	Symbol	& stRec . ip_addr		809545						
ANR	810772	Symbol	& len		809545						
ANR	810773	Symbol	rip -> compute_rank		809545						
ANR	810774	Symbol	vm_starter -> pid		809545						
ANR	810775	Symbol	stream -> end_of_message		809545						
ANR	810776	Symbol	* rip		809545						
ANR	810777	Symbol	tcp_accept_timeout		809545						
ANR	810778	Symbol	shadow_sock		809545						
ANR	810779	Symbol	stream		809545						
ANR	810780	Symbol	* sock		809545						
ANR	810781	Symbol	starter		809545						
ANR	810782	Symbol	stRec . ports		809545						
ANR	810783	Symbol	rsock_1		809545						
ANR	810784	Symbol	rsock_2		809545						
ANR	810785	Symbol	* * rip		809545						
ANR	810786	Symbol	shadow_addr		809545						
ANR	810787	Symbol	rip -> r_cur -> spawnStarter		809545						
ANR	810788	Symbol	job_univ		809545						
ANR	810789	Symbol	* tmp_starter		809545						
ANR	810790	Symbol	ATTR_JOB_UNIVERSE		809545						
ANR	810791	Symbol	create_port		809545						
ANR	810792	Symbol	local_in_addr		809545						
ANR	810793	Symbol	vm_classad		809545						
ANR	810794	Symbol	vm_starter		809545						
ANR	810795	Symbol	sock -> peer_addr ( ) . to_ip_string		809545						
ANR	810796	Symbol	mach_requirements		809545						
ANR	810797	Symbol	req_classad		809545						
ANR	810798	Symbol	* vm_starter		809545						
ANR	810799	Symbol	D_MACHINE		809545						
ANR	810800	Symbol	resmgr -> starter_mgr . findStarter		809545						
ANR	810801	Symbol	stRec . server_name		809545						
ANR	810802	Symbol	rip -> state		809545						
ANR	810803	Symbol	NULL		809545						
ANR	810804	Symbol	no_starter		809545						
ANR	810805	Symbol	& stRec		809545						
ANR	810806	Symbol	A_UPDATE		809545						
ANR	810807	Symbol	& Resource :: update		809545						
ANR	810808	Symbol	TRUE		809545						
ANR	810809	Symbol	D_FULLDEBUG		809545						
ANR	810810	Symbol	DebugFlags		809545						
ANR	810811	Symbol	& local_in_addr		809545						
ANR	810812	Symbol	mach_classad -> EvalBool		809545						
ANR	810813	Symbol	D_FAILURE		809545						
ANR	810814	Symbol	* stream		809545						
ANR	810815	Symbol	stRec . version_num		809545						
ANR	810816	Symbol	mach_classad		809545						
ANR	810817	Symbol	resmgr -> starter_mgr		809545						
ANR	810818	Symbol	stream -> put		809545						
ANR	810819	Symbol	D_JOB		809545						
ANR	810820	Symbol	A_PUBLIC		809545						
ANR	810821	Symbol	local_addr . to_sin		809545						
ANR	810822	Symbol	rip -> r_classad		809545						
ANR	810823	Symbol	local_addr . to_sin ( ) . sin_addr		809545						
ANR	810824	Symbol	claimed_state		809545						
ANR	810825	Symbol	OK		809545						
ANR	810826	Symbol	stRec . ports . port2		809545						
ANR	810827	Symbol	fd_2		809545						
ANR	810828	Symbol	stRec . ports . port1		809545						
ANR	810829	Symbol	fd_1		809545						
ANR	810830	Symbol	* rip -> r_cur		809545						
ANR	810831	Symbol	TargetMachineAttrs		809545						
ANR	810832	Symbol	tmp_starter -> is_dc		809545						
ANR	810833	Symbol	stRec		809545						
ANR	810834	Symbol	D_ALWAYS		809545						
ANR	810835	Symbol	false		809545						
ANR	810836	Symbol	local_addr		809545						
ANR	810837	Symbol	rsock_1 . get_port		809545						
ANR	810838	Symbol	resmgr -> m_vmuniverse_mgr . canCreateVM		809545						
ANR	810839	Symbol	sock		809545						
ANR	810840	Symbol	req_classad -> initFromStream		809545						
ANR	810841	Symbol	stream -> code		809545						
ANR	810842	Symbol	rip -> r_reqexp		809545						
ANR	810843	Symbol	get_local_ipaddr		809545						
ANR	810844	Symbol	CONDOR_UNIVERSE_VM		809545						
ANR	810845	Symbol	strdup		809545						
ANR	810846	Symbol	sock_1		809545						
ANR	810847	Symbol	sock_2		809545						
ANR	810848	Function	match_info	1856:1:50736:53643							
ANR	810849	FunctionDef	"match_info (Resource * rip , char * id)"		810848	0					
ANR	810850	CompoundStatement		1860:0:50791:53643	810848	0					
ANR	810851	IdentifierDeclStatement	int rval = FALSE ;	1861:1:50794:50810	810848	0	True				
ANR	810852	IdentifierDecl	rval = FALSE		810848	0					
ANR	810853	IdentifierDeclType	int		810848	0					
ANR	810854	Identifier	rval		810848	1					
ANR	810855	AssignmentExpression	rval = FALSE		810848	2		=			
ANR	810856	Identifier	FALSE		810848	0					
ANR	810857	Identifier	FALSE		810848	1					
ANR	810858	IdentifierDeclStatement	ClaimIdParser idp ( id ) ;	1862:1:50813:50834	810848	1	True				
ANR	810859	IdentifierDecl	idp ( id )		810848	0					
ANR	810860	IdentifierDeclType	ClaimIdParser		810848	0					
ANR	810861	Identifier	idp		810848	1					
ANR	810862	Identifier	id		810848	2					
ANR	810863	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""match_info called\\n"" )"	1864:1:50838:50883	810848	2	True				
ANR	810864	CallExpression	"rip -> dprintf ( D_ALWAYS , ""match_info called\\n"" )"		810848	0					
ANR	810865	Callee	rip -> dprintf		810848	0					
ANR	810866	PtrMemberAccess	rip -> dprintf		810848	0					
ANR	810867	Identifier	rip		810848	0					
ANR	810868	Identifier	dprintf		810848	1					
ANR	810869	ArgumentList	D_ALWAYS		810848	1					
ANR	810870	Argument	D_ALWAYS		810848	0					
ANR	810871	Identifier	D_ALWAYS		810848	0					
ANR	810872	Argument	"""match_info called\\n"""		810848	1					
ANR	810873	PrimaryExpression	"""match_info called\\n"""		810848	0					
ANR	810874	SwitchStatement	switch ( rip -> state ( ) )		810848	3					
ANR	810875	Condition	rip -> state ( )	1866:9:50895:50906	810848	0	True				
ANR	810876	CallExpression	rip -> state ( )		810848	0					
ANR	810877	Callee	rip -> state		810848	0					
ANR	810878	PtrMemberAccess	rip -> state		810848	0					
ANR	810879	Identifier	rip		810848	0					
ANR	810880	Identifier	state		810848	1					
ANR	810881	ArgumentList			810848	1					
ANR	810882	CompoundStatement		7:24:118:118	810848	1					
ANR	810883	Label	case claimed_state :	1867:1:50913:50931	810848	0	True				
ANR	810884	Identifier	claimed_state		810848	0					
ANR	810885	IfStatement	if ( rip -> r_cur -> idMatches ( id ) )		810848	1					
ANR	810886	Condition	rip -> r_cur -> idMatches ( id )	1868:6:50939:50963	810848	0	True				
ANR	810887	CallExpression	rip -> r_cur -> idMatches ( id )		810848	0					
ANR	810888	Callee	rip -> r_cur -> idMatches		810848	0					
ANR	810889	PtrMemberAccess	rip -> r_cur -> idMatches		810848	0					
ANR	810890	PtrMemberAccess	rip -> r_cur		810848	0					
ANR	810891	Identifier	rip		810848	0					
ANR	810892	Identifier	r_cur		810848	1					
ANR	810893	Identifier	idMatches		810848	1					
ANR	810894	ArgumentList	id		810848	1					
ANR	810895	Argument	id		810848	0					
ANR	810896	Identifier	id		810848	0					
ANR	810897	CompoundStatement		9:34:175:175	810848	1					
ANR	810898	ExpressionStatement	rval = TRUE	1872:3:51107:51118	810848	0	True				
ANR	810899	AssignmentExpression	rval = TRUE		810848	0		=			
ANR	810900	Identifier	rval		810848	0					
ANR	810901	Identifier	TRUE		810848	1					
ANR	810902	ElseStatement	else		810848	0					
ANR	810903	IfStatement	if ( rip -> r_pre && rip -> r_pre -> idMatches ( id ) )		810848	0					
ANR	810904	Condition	rip -> r_pre && rip -> r_pre -> idMatches ( id )	1873:13:51133:51171	810848	0	True				
ANR	810905	AndExpression	rip -> r_pre && rip -> r_pre -> idMatches ( id )		810848	0		&&			
ANR	810906	PtrMemberAccess	rip -> r_pre		810848	0					
ANR	810907	Identifier	rip		810848	0					
ANR	810908	Identifier	r_pre		810848	1					
ANR	810909	CallExpression	rip -> r_pre -> idMatches ( id )		810848	1					
ANR	810910	Callee	rip -> r_pre -> idMatches		810848	0					
ANR	810911	PtrMemberAccess	rip -> r_pre -> idMatches		810848	0					
ANR	810912	PtrMemberAccess	rip -> r_pre		810848	0					
ANR	810913	Identifier	rip		810848	0					
ANR	810914	Identifier	r_pre		810848	1					
ANR	810915	Identifier	idMatches		810848	1					
ANR	810916	ArgumentList	id		810848	1					
ANR	810917	Argument	id		810848	0					
ANR	810918	Identifier	id		810848	0					
ANR	810919	CompoundStatement		14:55:383:383	810848	1					
ANR	810920	ExpressionStatement	rip -> r_reqexp -> unavail ( )	1878:3:51384:51408	810848	0	True				
ANR	810921	CallExpression	rip -> r_reqexp -> unavail ( )		810848	0					
ANR	810922	Callee	rip -> r_reqexp -> unavail		810848	0					
ANR	810923	PtrMemberAccess	rip -> r_reqexp -> unavail		810848	0					
ANR	810924	PtrMemberAccess	rip -> r_reqexp		810848	0					
ANR	810925	Identifier	rip		810848	0					
ANR	810926	Identifier	r_reqexp		810848	1					
ANR	810927	Identifier	unavail		810848	1					
ANR	810928	ArgumentList			810848	1					
ANR	810929	ExpressionStatement	rip -> update ( )	1879:3:51413:51426	810848	1	True				
ANR	810930	CallExpression	rip -> update ( )		810848	0					
ANR	810931	Callee	rip -> update		810848	0					
ANR	810932	PtrMemberAccess	rip -> update		810848	0					
ANR	810933	Identifier	rip		810848	0					
ANR	810934	Identifier	update		810848	1					
ANR	810935	ArgumentList			810848	1					
ANR	810936	ExpressionStatement	rip -> r_pre -> start_match_timer ( )	1880:3:51431:51462	810848	2	True				
ANR	810937	CallExpression	rip -> r_pre -> start_match_timer ( )		810848	0					
ANR	810938	Callee	rip -> r_pre -> start_match_timer		810848	0					
ANR	810939	PtrMemberAccess	rip -> r_pre -> start_match_timer		810848	0					
ANR	810940	PtrMemberAccess	rip -> r_pre		810848	0					
ANR	810941	Identifier	rip		810848	0					
ANR	810942	Identifier	r_pre		810848	1					
ANR	810943	Identifier	start_match_timer		810848	1					
ANR	810944	ArgumentList			810848	1					
ANR	810945	ExpressionStatement	rval = TRUE	1881:3:51467:51478	810848	3	True				
ANR	810946	AssignmentExpression	rval = TRUE		810848	0		=			
ANR	810947	Identifier	rval		810848	0					
ANR	810948	Identifier	TRUE		810848	1					
ANR	810949	ElseStatement	else		810848	0					
ANR	810950	IfStatement	if ( rip -> r_pre_pre && rip -> r_pre_pre -> idMatches ( id ) )		810848	0					
ANR	810951	Condition	rip -> r_pre_pre && rip -> r_pre_pre -> idMatches ( id )	1882:13:51493:51539	810848	0	True				
ANR	810952	AndExpression	rip -> r_pre_pre && rip -> r_pre_pre -> idMatches ( id )		810848	0		&&			
ANR	810953	PtrMemberAccess	rip -> r_pre_pre		810848	0					
ANR	810954	Identifier	rip		810848	0					
ANR	810955	Identifier	r_pre_pre		810848	1					
ANR	810956	CallExpression	rip -> r_pre_pre -> idMatches ( id )		810848	1					
ANR	810957	Callee	rip -> r_pre_pre -> idMatches		810848	0					
ANR	810958	PtrMemberAccess	rip -> r_pre_pre -> idMatches		810848	0					
ANR	810959	PtrMemberAccess	rip -> r_pre_pre		810848	0					
ANR	810960	Identifier	rip		810848	0					
ANR	810961	Identifier	r_pre_pre		810848	1					
ANR	810962	Identifier	idMatches		810848	1					
ANR	810963	ArgumentList	id		810848	1					
ANR	810964	Argument	id		810848	0					
ANR	810965	Identifier	id		810848	0					
ANR	810966	CompoundStatement		23:63:751:751	810848	1					
ANR	810967	ExpressionStatement	rip -> r_reqexp -> unavail ( )	1887:3:51763:51787	810848	0	True				
ANR	810968	CallExpression	rip -> r_reqexp -> unavail ( )		810848	0					
ANR	810969	Callee	rip -> r_reqexp -> unavail		810848	0					
ANR	810970	PtrMemberAccess	rip -> r_reqexp -> unavail		810848	0					
ANR	810971	PtrMemberAccess	rip -> r_reqexp		810848	0					
ANR	810972	Identifier	rip		810848	0					
ANR	810973	Identifier	r_reqexp		810848	1					
ANR	810974	Identifier	unavail		810848	1					
ANR	810975	ArgumentList			810848	1					
ANR	810976	ExpressionStatement	rip -> update ( )	1888:3:51792:51805	810848	1	True				
ANR	810977	CallExpression	rip -> update ( )		810848	0					
ANR	810978	Callee	rip -> update		810848	0					
ANR	810979	PtrMemberAccess	rip -> update		810848	0					
ANR	810980	Identifier	rip		810848	0					
ANR	810981	Identifier	update		810848	1					
ANR	810982	ArgumentList			810848	1					
ANR	810983	ExpressionStatement	rip -> r_pre_pre -> start_match_timer ( )	1889:3:51810:51845	810848	2	True				
ANR	810984	CallExpression	rip -> r_pre_pre -> start_match_timer ( )		810848	0					
ANR	810985	Callee	rip -> r_pre_pre -> start_match_timer		810848	0					
ANR	810986	PtrMemberAccess	rip -> r_pre_pre -> start_match_timer		810848	0					
ANR	810987	PtrMemberAccess	rip -> r_pre_pre		810848	0					
ANR	810988	Identifier	rip		810848	0					
ANR	810989	Identifier	r_pre_pre		810848	1					
ANR	810990	Identifier	start_match_timer		810848	1					
ANR	810991	ArgumentList			810848	1					
ANR	810992	ExpressionStatement	rval = TRUE	1890:3:51850:51861	810848	3	True				
ANR	810993	AssignmentExpression	rval = TRUE		810848	0		=			
ANR	810994	Identifier	rval		810848	0					
ANR	810995	Identifier	TRUE		810848	1					
ANR	810996	ElseStatement	else		810848	0					
ANR	810997	CompoundStatement		32:9:1080:1080	810848	0					
ANR	810998	ExpressionStatement	"EXCEPT ( ""Should never get here"" )"	1895:3:52022:52055	810848	0	True				
ANR	810999	CallExpression	"EXCEPT ( ""Should never get here"" )"		810848	0					
ANR	811000	Callee	EXCEPT		810848	0					
ANR	811001	Identifier	EXCEPT		810848	0					
ANR	811002	ArgumentList	"""Should never get here"""		810848	1					
ANR	811003	Argument	"""Should never get here"""		810848	0					
ANR	811004	PrimaryExpression	"""Should never get here"""		810848	0					
ANR	811005	BreakStatement	break ;	1897:2:52063:52068	810848	2	True				
ANR	811006	Label	case backfill_state :	1900:1:52090:52109	810848	3	True				
ANR	811007	Identifier	backfill_state		810848	0					
ANR	811008	Label	case unclaimed_state :	1902:1:52139:52159	810848	4	True				
ANR	811009	Identifier	unclaimed_state		810848	0					
ANR	811010	Label	case owner_state :	1903:1:52162:52178	810848	5	True				
ANR	811011	Identifier	owner_state		810848	0					
ANR	811012	IfStatement	if ( rip -> r_cur -> idMatches ( id ) )		810848	6					
ANR	811013	Condition	rip -> r_cur -> idMatches ( id )	1904:6:52186:52210	810848	0	True				
ANR	811014	CallExpression	rip -> r_cur -> idMatches ( id )		810848	0					
ANR	811015	Callee	rip -> r_cur -> idMatches		810848	0					
ANR	811016	PtrMemberAccess	rip -> r_cur -> idMatches		810848	0					
ANR	811017	PtrMemberAccess	rip -> r_cur		810848	0					
ANR	811018	Identifier	rip		810848	0					
ANR	811019	Identifier	r_cur		810848	1					
ANR	811020	Identifier	idMatches		810848	1					
ANR	811021	ArgumentList	id		810848	1					
ANR	811022	Argument	id		810848	0					
ANR	811023	Identifier	id		810848	0					
ANR	811024	CompoundStatement		45:34:1422:1422	810848	1					
ANR	811025	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Received match %s\\n"" , idp . publicClaimId ( ) )"	1905:3:52219:52287	810848	0	True				
ANR	811026	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Received match %s\\n"" , idp . publicClaimId ( ) )"		810848	0					
ANR	811027	Callee	rip -> dprintf		810848	0					
ANR	811028	PtrMemberAccess	rip -> dprintf		810848	0					
ANR	811029	Identifier	rip		810848	0					
ANR	811030	Identifier	dprintf		810848	1					
ANR	811031	ArgumentList	D_ALWAYS		810848	1					
ANR	811032	Argument	D_ALWAYS		810848	0					
ANR	811033	Identifier	D_ALWAYS		810848	0					
ANR	811034	Argument	"""Received match %s\\n"""		810848	1					
ANR	811035	PrimaryExpression	"""Received match %s\\n"""		810848	0					
ANR	811036	Argument	idp . publicClaimId ( )		810848	2					
ANR	811037	CallExpression	idp . publicClaimId ( )		810848	0					
ANR	811038	Callee	idp . publicClaimId		810848	0					
ANR	811039	MemberAccess	idp . publicClaimId		810848	0					
ANR	811040	Identifier	idp		810848	0					
ANR	811041	Identifier	publicClaimId		810848	1					
ANR	811042	ArgumentList			810848	1					
ANR	811043	IfStatement	if ( rip -> destination_state ( ) != no_state )		810848	1					
ANR	811044	Condition	rip -> destination_state ( ) != no_state	1907:7:52297:52332	810848	0	True				
ANR	811045	EqualityExpression	rip -> destination_state ( ) != no_state		810848	0		!=			
ANR	811046	CallExpression	rip -> destination_state ( )		810848	0					
ANR	811047	Callee	rip -> destination_state		810848	0					
ANR	811048	PtrMemberAccess	rip -> destination_state		810848	0					
ANR	811049	Identifier	rip		810848	0					
ANR	811050	Identifier	destination_state		810848	1					
ANR	811051	ArgumentList			810848	1					
ANR	811052	Identifier	no_state		810848	1					
ANR	811053	CompoundStatement		48:46:1544:1544	810848	1					
ANR	811054	Statement	dprintf	1912:4:52547:52553	810848	0	True				
ANR	811055	Statement	(	1912:11:52554:52554	810848	1	True				
ANR	811056	Statement	D_ALWAYS	1912:13:52556:52563	810848	2	True				
ANR	811057	Statement	","	1912:21:52564:52564	810848	3	True				
ANR	811058	Statement	"""Got match while destination state """	1912:23:52566:52601	810848	4	True				
ANR	811059	Statement	"""set to %s, ignoring\\n"""	1913:7:52610:52632	810848	5	True				
ANR	811060	Statement	","	1913:30:52633:52633	810848	6	True				
ANR	811061	Statement	state_to_string	1914:7:52642:52656	810848	7	True				
ANR	811062	Statement	(	1914:22:52657:52657	810848	8	True				
ANR	811063	Statement	rip	1914:23:52658:52660	810848	9	True				
ANR	811064	Statement	->	1914:26:52661:52662	810848	10	True				
ANR	811065	Statement	destination_state	1914:28:52663:52679	810848	11	True				
ANR	811066	Statement	(	1914:45:52680:52680	810848	12	True				
ANR	811067	Statement	)	1914:46:52681:52681	810848	13	True				
ANR	811068	Statement	)	1914:47:52682:52682	810848	14	True				
ANR	811069	Statement	)	1914:49:52684:52684	810848	15	True				
ANR	811070	ExpressionStatement		1914:50:52685:52685	810848	16	True				
ANR	811071	ReturnStatement	return TRUE ;	1915:4:52691:52702	810848	17	True				
ANR	811072	Identifier	TRUE		810848	0					
ANR	811073	ExpressionStatement	rip -> r_cur -> start_match_timer ( )	1920:3:52788:52819	810848	2	True				
ANR	811074	CallExpression	rip -> r_cur -> start_match_timer ( )		810848	0					
ANR	811075	Callee	rip -> r_cur -> start_match_timer		810848	0					
ANR	811076	PtrMemberAccess	rip -> r_cur -> start_match_timer		810848	0					
ANR	811077	PtrMemberAccess	rip -> r_cur		810848	0					
ANR	811078	Identifier	rip		810848	0					
ANR	811079	Identifier	r_cur		810848	1					
ANR	811080	Identifier	start_match_timer		810848	1					
ANR	811081	ArgumentList			810848	1					
ANR	811082	Statement	rip	1922:3:52825:52827	810848	3	True				
ANR	811083	Statement	->	1922:6:52828:52829	810848	4	True				
ANR	811084	Statement	dprintf	1922:8:52830:52836	810848	5	True				
ANR	811085	Statement	(	1922:15:52837:52837	810848	6	True				
ANR	811086	Statement	D_FAILURE	1922:17:52839:52847	810848	7	True				
ANR	811087	Statement	|	1922:26:52848:52848	810848	8	True				
ANR	811088	Statement	D_ALWAYS	1922:27:52849:52856	810848	9	True				
ANR	811089	Statement	","	1922:35:52857:52857	810848	10	True				
ANR	811090	Statement	"""State change: """	1922:37:52859:52874	810848	11	True				
ANR	811091	Statement	"""match notification protocol successful\\n"""	1923:8:52884:52925	810848	12	True				
ANR	811092	Statement	)	1923:51:52927:52927	810848	13	True				
ANR	811093	ExpressionStatement		1923:52:52928:52928	810848	14	True				
ANR	811094	IfStatement	if ( rip -> state ( ) == backfill_state )		810848	15					
ANR	811095	Condition	rip -> state ( ) == backfill_state	1926:7:52956:52985	810848	0	True				
ANR	811096	EqualityExpression	rip -> state ( ) == backfill_state		810848	0		==			
ANR	811097	CallExpression	rip -> state ( )		810848	0					
ANR	811098	Callee	rip -> state		810848	0					
ANR	811099	PtrMemberAccess	rip -> state		810848	0					
ANR	811100	Identifier	rip		810848	0					
ANR	811101	Identifier	state		810848	1					
ANR	811102	ArgumentList			810848	1					
ANR	811103	Identifier	backfill_state		810848	1					
ANR	811104	CompoundStatement		67:40:2197:2197	810848	1					
ANR	811105	ExpressionStatement	rip -> set_destination_state ( matched_state )	1930:4:53154:53197	810848	0	True				
ANR	811106	CallExpression	rip -> set_destination_state ( matched_state )		810848	0					
ANR	811107	Callee	rip -> set_destination_state		810848	0					
ANR	811108	PtrMemberAccess	rip -> set_destination_state		810848	0					
ANR	811109	Identifier	rip		810848	0					
ANR	811110	Identifier	set_destination_state		810848	1					
ANR	811111	ArgumentList	matched_state		810848	1					
ANR	811112	Argument	matched_state		810848	0					
ANR	811113	Identifier	matched_state		810848	0					
ANR	811114	ReturnStatement	return TRUE ;	1931:4:53203:53214	810848	1	True				
ANR	811115	Identifier	TRUE		810848	0					
ANR	811116	ExpressionStatement	rip -> change_state ( matched_state )	1937:3:53332:53366	810848	16	True				
ANR	811117	CallExpression	rip -> change_state ( matched_state )		810848	0					
ANR	811118	Callee	rip -> change_state		810848	0					
ANR	811119	PtrMemberAccess	rip -> change_state		810848	0					
ANR	811120	Identifier	rip		810848	0					
ANR	811121	Identifier	change_state		810848	1					
ANR	811122	ArgumentList	matched_state		810848	1					
ANR	811123	Argument	matched_state		810848	0					
ANR	811124	Identifier	matched_state		810848	0					
ANR	811125	ExpressionStatement	rval = TRUE	1938:3:53371:53382	810848	17	True				
ANR	811126	AssignmentExpression	rval = TRUE		810848	0		=			
ANR	811127	Identifier	rval		810848	0					
ANR	811128	Identifier	TRUE		810848	1					
ANR	811129	ElseStatement	else		810848	0					
ANR	811130	CompoundStatement		80:9:2601:2601	810848	0					
ANR	811131	ExpressionStatement	"rip -> dprintf ( D_ALWAYS , ""Invalid ClaimId from negotiator (%s)\\n"" , id )"	1940:3:53398:53477	810848	0	True				
ANR	811132	CallExpression	"rip -> dprintf ( D_ALWAYS , ""Invalid ClaimId from negotiator (%s)\\n"" , id )"		810848	0					
ANR	811133	Callee	rip -> dprintf		810848	0					
ANR	811134	PtrMemberAccess	rip -> dprintf		810848	0					
ANR	811135	Identifier	rip		810848	0					
ANR	811136	Identifier	dprintf		810848	1					
ANR	811137	ArgumentList	D_ALWAYS		810848	1					
ANR	811138	Argument	D_ALWAYS		810848	0					
ANR	811139	Identifier	D_ALWAYS		810848	0					
ANR	811140	Argument	"""Invalid ClaimId from negotiator (%s)\\n"""		810848	1					
ANR	811141	PrimaryExpression	"""Invalid ClaimId from negotiator (%s)\\n"""		810848	0					
ANR	811142	Argument	id		810848	2					
ANR	811143	Identifier	id		810848	0					
ANR	811144	ExpressionStatement	rval = FALSE	1942:3:53482:53494	810848	1	True				
ANR	811145	AssignmentExpression	rval = FALSE		810848	0		=			
ANR	811146	Identifier	rval		810848	0					
ANR	811147	Identifier	FALSE		810848	1					
ANR	811148	BreakStatement	break ;	1944:2:53502:53507	810848	7	True				
ANR	811149	Label	default :	1945:1:53510:53517	810848	8	True				
ANR	811150	Identifier	default		810848	0					
ANR	811151	ExpressionStatement	"EXCEPT ( ""match_info() called with unexpected state (%s)"" , state_to_string ( rip -> state ( ) ) )"	1946:2:53521:53615	810848	9	True				
ANR	811152	CallExpression	"EXCEPT ( ""match_info() called with unexpected state (%s)"" , state_to_string ( rip -> state ( ) ) )"		810848	0					
ANR	811153	Callee	EXCEPT		810848	0					
ANR	811154	Identifier	EXCEPT		810848	0					
ANR	811155	ArgumentList	"""match_info() called with unexpected state (%s)"""		810848	1					
ANR	811156	Argument	"""match_info() called with unexpected state (%s)"""		810848	0					
ANR	811157	PrimaryExpression	"""match_info() called with unexpected state (%s)"""		810848	0					
ANR	811158	Argument	state_to_string ( rip -> state ( ) )		810848	1					
ANR	811159	CallExpression	state_to_string ( rip -> state ( ) )		810848	0					
ANR	811160	Callee	state_to_string		810848	0					
ANR	811161	Identifier	state_to_string		810848	0					
ANR	811162	ArgumentList	rip -> state ( )		810848	1					
ANR	811163	Argument	rip -> state ( )		810848	0					
ANR	811164	CallExpression	rip -> state ( )		810848	0					
ANR	811165	Callee	rip -> state		810848	0					
ANR	811166	PtrMemberAccess	rip -> state		810848	0					
ANR	811167	Identifier	rip		810848	0					
ANR	811168	Identifier	state		810848	1					
ANR	811169	ArgumentList			810848	1					
ANR	811170	BreakStatement	break ;	1948:2:53619:53624	810848	10	True				
ANR	811171	ReturnStatement	return rval ;	1950:1:53630:53641	810848	4	True				
ANR	811172	Identifier	rval		810848	0					
ANR	811173	ReturnType	undef ABORT int		810848	1					
ANR	811174	Identifier	match_info		810848	2					
ANR	811175	ParameterList	"Resource * rip , char * id"		810848	3					
ANR	811176	Parameter	Resource * rip	1859:12:50765:50777	810848	0	True				
ANR	811177	ParameterType	Resource *		810848	0					
ANR	811178	Identifier	rip		810848	1					
ANR	811179	Parameter	char * id	1859:27:50780:50787	810848	1	True				
ANR	811180	ParameterType	char *		810848	0					
ANR	811181	Identifier	id		810848	1					
ANR	811182	CFGEntryNode	ENTRY		810848		True				
ANR	811183	CFGExitNode	EXIT		810848		True				
ANR	811184	Symbol	* rip		810848						
ANR	811185	Symbol	* rip -> r_pre		810848						
ANR	811186	Symbol	rip -> destination_state		810848						
ANR	811187	Symbol	backfill_state		810848						
ANR	811188	Symbol	rip -> r_cur -> idMatches		810848						
ANR	811189	Symbol	rip -> r_cur		810848						
ANR	811190	Symbol	rip		810848						
ANR	811191	Symbol	rval		810848						
ANR	811192	Symbol	id		810848						
ANR	811193	Symbol	rip -> state		810848						
ANR	811194	Symbol	rip -> r_pre_pre		810848						
ANR	811195	Symbol	* rip -> r_cur		810848						
ANR	811196	Symbol	D_ALWAYS		810848						
ANR	811197	Symbol	TRUE		810848						
ANR	811198	Symbol	idp . publicClaimId		810848						
ANR	811199	Symbol	* * rip		810848						
ANR	811200	Symbol	matched_state		810848						
ANR	811201	Symbol	no_state		810848						
ANR	811202	Symbol	* rip -> r_pre_pre		810848						
ANR	811203	Symbol	rip -> r_pre		810848						
ANR	811204	Symbol	idp		810848						
ANR	811205	Symbol	rip -> r_reqexp		810848						
ANR	811206	Symbol	rip -> r_pre -> idMatches		810848						
ANR	811207	Symbol	FALSE		810848						
ANR	811208	Symbol	state_to_string		810848						
ANR	811209	Symbol	rip -> r_pre_pre -> idMatches		810848						
ANR	811210	Function	caRequestCODClaim	1954:0:53647:56175							
ANR	811211	FunctionDef	"caRequestCODClaim (Stream * s , char * cmd_str , ClassAd * req_ad)"		811210	0					
ANR	811212	CompoundStatement		1956:0:53714:56175	811210	0					
ANR	811213	IdentifierDeclStatement	const char * requirements_str = NULL ;	1957:1:53717:53752	811210	0	True				
ANR	811214	IdentifierDecl	* requirements_str = NULL		811210	0					
ANR	811215	IdentifierDeclType	const char *		811210	0					
ANR	811216	Identifier	requirements_str		811210	1					
ANR	811217	AssignmentExpression	* requirements_str = NULL		811210	2		=			
ANR	811218	Identifier	NULL		811210	0					
ANR	811219	Identifier	NULL		811210	1					
ANR	811220	IdentifierDeclStatement	Resource * rip ;	1958:1:53755:53768	811210	1	True				
ANR	811221	IdentifierDecl	* rip		811210	0					
ANR	811222	IdentifierDeclType	Resource *		811210	0					
ANR	811223	Identifier	rip		811210	1					
ANR	811224	IdentifierDeclStatement	Claim * claim ;	1959:1:53771:53783	811210	2	True				
ANR	811225	IdentifierDecl	* claim		811210	0					
ANR	811226	IdentifierDeclType	Claim *		811210	0					
ANR	811227	Identifier	claim		811210	1					
ANR	811228	IdentifierDeclStatement	MyString err_msg ;	1960:1:53786:53802	811210	3	True				
ANR	811229	IdentifierDecl	err_msg		811210	0					
ANR	811230	IdentifierDeclType	MyString		811210	0					
ANR	811231	Identifier	err_msg		811210	1					
ANR	811232	IdentifierDeclStatement	ExprTree * tree ;	1961:1:53805:53819	811210	4	True				
ANR	811233	IdentifierDecl	* tree		811210	0					
ANR	811234	IdentifierDeclType	ExprTree *		811210	0					
ANR	811235	Identifier	tree		811210	1					
ANR	811236	IdentifierDeclStatement	ReliSock * rsock = ( ReliSock * ) s ;	1962:1:53822:53852	811210	5	True				
ANR	811237	IdentifierDecl	* rsock = ( ReliSock * ) s		811210	0					
ANR	811238	IdentifierDeclType	ReliSock *		811210	0					
ANR	811239	Identifier	rsock		811210	1					
ANR	811240	AssignmentExpression	* rsock = ( ReliSock * ) s		811210	2		=			
ANR	811241	Identifier	rsock		811210	0					
ANR	811242	CastExpression	( ReliSock * ) s		811210	1					
ANR	811243	CastTarget	ReliSock *		811210	0					
ANR	811244	Identifier	s		811210	1					
ANR	811245	IdentifierDeclStatement	int lease_duration = 0 ;	1963:1:53855:53877	811210	6	True				
ANR	811246	IdentifierDecl	lease_duration = 0		811210	0					
ANR	811247	IdentifierDeclType	int		811210	0					
ANR	811248	Identifier	lease_duration		811210	1					
ANR	811249	AssignmentExpression	lease_duration = 0		811210	2		=			
ANR	811250	Identifier	lease_duration		811210	0					
ANR	811251	PrimaryExpression	0		811210	1					
ANR	811252	IdentifierDeclStatement	const char * owner = rsock -> getOwner ( ) ;	1964:1:53880:53917	811210	7	True				
ANR	811253	IdentifierDecl	* owner = rsock -> getOwner ( )		811210	0					
ANR	811254	IdentifierDeclType	const char *		811210	0					
ANR	811255	Identifier	owner		811210	1					
ANR	811256	AssignmentExpression	* owner = rsock -> getOwner ( )		811210	2		=			
ANR	811257	Identifier	owner		811210	0					
ANR	811258	CallExpression	rsock -> getOwner ( )		811210	1					
ANR	811259	Callee	rsock -> getOwner		811210	0					
ANR	811260	PtrMemberAccess	rsock -> getOwner		811210	0					
ANR	811261	Identifier	rsock		811210	0					
ANR	811262	Identifier	getOwner		811210	1					
ANR	811263	ArgumentList			811210	1					
ANR	811264	IfStatement	if ( ! authorizedForCOD ( owner ) )		811210	8					
ANR	811265	Condition	! authorizedForCOD ( owner )	1966:5:53925:53949	811210	0	True				
ANR	811266	UnaryOperationExpression	! authorizedForCOD ( owner )		811210	0					
ANR	811267	UnaryOperator	!		811210	0					
ANR	811268	CallExpression	authorizedForCOD ( owner )		811210	1					
ANR	811269	Callee	authorizedForCOD		811210	0					
ANR	811270	Identifier	authorizedForCOD		811210	0					
ANR	811271	ArgumentList	owner		811210	1					
ANR	811272	Argument	owner		811210	0					
ANR	811273	Identifier	owner		811210	0					
ANR	811274	CompoundStatement		11:33:238:238	811210	1					
ANR	811275	ExpressionStatement	"err_msg = ""User '"""	1967:2:53957:53975	811210	0	True				
ANR	811276	AssignmentExpression	"err_msg = ""User '"""		811210	0		=			
ANR	811277	Identifier	err_msg		811210	0					
ANR	811278	PrimaryExpression	"""User '"""		811210	1					
ANR	811279	ExpressionStatement	err_msg += owner	1968:2:53979:53995	811210	1	True				
ANR	811280	AssignmentExpression	err_msg += owner		811210	0		+=			
ANR	811281	Identifier	err_msg		811210	0					
ANR	811282	Identifier	owner		811210	1					
ANR	811283	ExpressionStatement	"err_msg += ""' is not authorized for using COD at this machine"""	1969:2:53999:54061	811210	2	True				
ANR	811284	AssignmentExpression	"err_msg += ""' is not authorized for using COD at this machine"""		811210	0		+=			
ANR	811285	Identifier	err_msg		811210	0					
ANR	811286	PrimaryExpression	"""' is not authorized for using COD at this machine"""		811210	1					
ANR	811287	ReturnStatement	"return sendErrorReply ( s , cmd_str , CA_NOT_AUTHORIZED , err_msg . Value ( ) ) ;"	1970:2:54066:54147	811210	3	True				
ANR	811288	CallExpression	"sendErrorReply ( s , cmd_str , CA_NOT_AUTHORIZED , err_msg . Value ( ) )"		811210	0					
ANR	811289	Callee	sendErrorReply		811210	0					
ANR	811290	Identifier	sendErrorReply		811210	0					
ANR	811291	ArgumentList	s		811210	1					
ANR	811292	Argument	s		811210	0					
ANR	811293	Identifier	s		811210	0					
ANR	811294	Argument	cmd_str		811210	1					
ANR	811295	Identifier	cmd_str		811210	0					
ANR	811296	Argument	CA_NOT_AUTHORIZED		811210	2					
ANR	811297	Identifier	CA_NOT_AUTHORIZED		811210	0					
ANR	811298	Argument	err_msg . Value ( )		811210	3					
ANR	811299	CallExpression	err_msg . Value ( )		811210	0					
ANR	811300	Callee	err_msg . Value		811210	0					
ANR	811301	MemberAccess	err_msg . Value		811210	0					
ANR	811302	Identifier	err_msg		811210	0					
ANR	811303	Identifier	Value		811210	1					
ANR	811304	ArgumentList			811210	1					
ANR	811305	ExpressionStatement	"dprintf ( D_COMMAND , ""Serving request for a new COD claim by user '%s'\\n"" , owner )"	1973:1:54153:54244	811210	9	True				
ANR	811306	CallExpression	"dprintf ( D_COMMAND , ""Serving request for a new COD claim by user '%s'\\n"" , owner )"		811210	0					
ANR	811307	Callee	dprintf		811210	0					
ANR	811308	Identifier	dprintf		811210	0					
ANR	811309	ArgumentList	D_COMMAND		811210	1					
ANR	811310	Argument	D_COMMAND		811210	0					
ANR	811311	Identifier	D_COMMAND		811210	0					
ANR	811312	Argument	"""Serving request for a new COD claim by user '%s'\\n"""		811210	1					
ANR	811313	PrimaryExpression	"""Serving request for a new COD claim by user '%s'\\n"""		811210	0					
ANR	811314	Argument	owner		811210	2					
ANR	811315	Identifier	owner		811210	0					
ANR	811316	ExpressionStatement	tree = req_ad -> LookupExpr ( ATTR_REQUIREMENTS )	1978:1:54310:54356	811210	10	True				
ANR	811317	AssignmentExpression	tree = req_ad -> LookupExpr ( ATTR_REQUIREMENTS )		811210	0		=			
ANR	811318	Identifier	tree		811210	0					
ANR	811319	CallExpression	req_ad -> LookupExpr ( ATTR_REQUIREMENTS )		811210	1					
ANR	811320	Callee	req_ad -> LookupExpr		811210	0					
ANR	811321	PtrMemberAccess	req_ad -> LookupExpr		811210	0					
ANR	811322	Identifier	req_ad		811210	0					
ANR	811323	Identifier	LookupExpr		811210	1					
ANR	811324	ArgumentList	ATTR_REQUIREMENTS		811210	1					
ANR	811325	Argument	ATTR_REQUIREMENTS		811210	0					
ANR	811326	Identifier	ATTR_REQUIREMENTS		811210	0					
ANR	811327	IfStatement	if ( ! tree )		811210	11					
ANR	811328	Condition	! tree	1979:5:54363:54368	811210	0	True				
ANR	811329	UnaryOperationExpression	! tree		811210	0					
ANR	811330	UnaryOperator	!		811210	0					
ANR	811331	Identifier	tree		811210	1					
ANR	811332	CompoundStatement		24:14:657:657	811210	1					
ANR	811333	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Request did not contain %s, assuming TRUE\\n"" , ATTR_REQUIREMENTS )"	1980:2:54376:54475	811210	0	True				
ANR	811334	CallExpression	"dprintf ( D_FULLDEBUG , ""Request did not contain %s, assuming TRUE\\n"" , ATTR_REQUIREMENTS )"		811210	0					
ANR	811335	Callee	dprintf		811210	0					
ANR	811336	Identifier	dprintf		811210	0					
ANR	811337	ArgumentList	D_FULLDEBUG		811210	1					
ANR	811338	Argument	D_FULLDEBUG		811210	0					
ANR	811339	Identifier	D_FULLDEBUG		811210	0					
ANR	811340	Argument	"""Request did not contain %s, assuming TRUE\\n"""		811210	1					
ANR	811341	PrimaryExpression	"""Request did not contain %s, assuming TRUE\\n"""		811210	0					
ANR	811342	Argument	ATTR_REQUIREMENTS		811210	2					
ANR	811343	Identifier	ATTR_REQUIREMENTS		811210	0					
ANR	811344	ExpressionStatement	"requirements_str = ""TRUE"""	1983:2:54479:54504	811210	1	True				
ANR	811345	AssignmentExpression	"requirements_str = ""TRUE"""		811210	0		=			
ANR	811346	Identifier	requirements_str		811210	0					
ANR	811347	PrimaryExpression	"""TRUE"""		811210	1					
ANR	811348	ExpressionStatement	"req_ad -> Insert ( ""Requirements = TRUE"" )"	1984:2:54508:54547	811210	2	True				
ANR	811349	CallExpression	"req_ad -> Insert ( ""Requirements = TRUE"" )"		811210	0					
ANR	811350	Callee	req_ad -> Insert		811210	0					
ANR	811351	PtrMemberAccess	req_ad -> Insert		811210	0					
ANR	811352	Identifier	req_ad		811210	0					
ANR	811353	Identifier	Insert		811210	1					
ANR	811354	ArgumentList	"""Requirements = TRUE"""		811210	1					
ANR	811355	Argument	"""Requirements = TRUE"""		811210	0					
ANR	811356	PrimaryExpression	"""Requirements = TRUE"""		811210	0					
ANR	811357	ElseStatement	else		811210	0					
ANR	811358	CompoundStatement		30:8:842:842	811210	0					
ANR	811359	ExpressionStatement	requirements_str = ExprTreeToString ( tree )	1986:2:54561:54604	811210	0	True				
ANR	811360	AssignmentExpression	requirements_str = ExprTreeToString ( tree )		811210	0		=			
ANR	811361	Identifier	requirements_str		811210	0					
ANR	811362	CallExpression	ExprTreeToString ( tree )		811210	1					
ANR	811363	Callee	ExprTreeToString		811210	0					
ANR	811364	Identifier	ExprTreeToString		811210	0					
ANR	811365	ArgumentList	tree		811210	1					
ANR	811366	Argument	tree		811210	0					
ANR	811367	Identifier	tree		811210	0					
ANR	811368	ExpressionStatement	rip = resmgr -> findRipForNewCOD ( req_ad )	1990:1:54655:54695	811210	12	True				
ANR	811369	AssignmentExpression	rip = resmgr -> findRipForNewCOD ( req_ad )		811210	0		=			
ANR	811370	Identifier	rip		811210	0					
ANR	811371	CallExpression	resmgr -> findRipForNewCOD ( req_ad )		811210	1					
ANR	811372	Callee	resmgr -> findRipForNewCOD		811210	0					
ANR	811373	PtrMemberAccess	resmgr -> findRipForNewCOD		811210	0					
ANR	811374	Identifier	resmgr		811210	0					
ANR	811375	Identifier	findRipForNewCOD		811210	1					
ANR	811376	ArgumentList	req_ad		811210	1					
ANR	811377	Argument	req_ad		811210	0					
ANR	811378	Identifier	req_ad		811210	0					
ANR	811379	IfStatement	if ( ! rip )		811210	13					
ANR	811380	Condition	! rip	1992:5:54703:54707	811210	0	True				
ANR	811381	UnaryOperationExpression	! rip		811210	0					
ANR	811382	UnaryOperator	!		811210	0					
ANR	811383	Identifier	rip		811210	1					
ANR	811384	CompoundStatement		37:13:996:996	811210	1					
ANR	811385	ExpressionStatement	"err_msg = ""Can't find Resource matching """	1993:2:54715:54756	811210	0	True				
ANR	811386	AssignmentExpression	"err_msg = ""Can't find Resource matching """		811210	0		=			
ANR	811387	Identifier	err_msg		811210	0					
ANR	811388	PrimaryExpression	"""Can't find Resource matching """		811210	1					
ANR	811389	ExpressionStatement	err_msg += ATTR_REQUIREMENTS	1994:2:54760:54788	811210	1	True				
ANR	811390	AssignmentExpression	err_msg += ATTR_REQUIREMENTS		811210	0		+=			
ANR	811391	Identifier	err_msg		811210	0					
ANR	811392	Identifier	ATTR_REQUIREMENTS		811210	1					
ANR	811393	ExpressionStatement	"err_msg += "" ("""	1995:2:54792:54807	811210	2	True				
ANR	811394	AssignmentExpression	"err_msg += "" ("""		811210	0		+=			
ANR	811395	Identifier	err_msg		811210	0					
ANR	811396	PrimaryExpression	""" ("""		811210	1					
ANR	811397	ExpressionStatement	err_msg += requirements_str	1996:2:54811:54838	811210	3	True				
ANR	811398	AssignmentExpression	err_msg += requirements_str		811210	0		+=			
ANR	811399	Identifier	err_msg		811210	0					
ANR	811400	Identifier	requirements_str		811210	1					
ANR	811401	ExpressionStatement	err_msg += ')'	1997:2:54842:54856	811210	4	True				
ANR	811402	AssignmentExpression	err_msg += ')'		811210	0		+=			
ANR	811403	Identifier	err_msg		811210	0					
ANR	811404	PrimaryExpression	')'		811210	1					
ANR	811405	ReturnStatement	"return sendErrorReply ( s , cmd_str , CA_FAILURE , err_msg . Value ( ) ) ;"	1998:2:54860:54924	811210	5	True				
ANR	811406	CallExpression	"sendErrorReply ( s , cmd_str , CA_FAILURE , err_msg . Value ( ) )"		811210	0					
ANR	811407	Callee	sendErrorReply		811210	0					
ANR	811408	Identifier	sendErrorReply		811210	0					
ANR	811409	ArgumentList	s		811210	1					
ANR	811410	Argument	s		811210	0					
ANR	811411	Identifier	s		811210	0					
ANR	811412	Argument	cmd_str		811210	1					
ANR	811413	Identifier	cmd_str		811210	0					
ANR	811414	Argument	CA_FAILURE		811210	2					
ANR	811415	Identifier	CA_FAILURE		811210	0					
ANR	811416	Argument	err_msg . Value ( )		811210	3					
ANR	811417	CallExpression	err_msg . Value ( )		811210	0					
ANR	811418	Callee	err_msg . Value		811210	0					
ANR	811419	MemberAccess	err_msg . Value		811210	0					
ANR	811420	Identifier	err_msg		811210	0					
ANR	811421	Identifier	Value		811210	1					
ANR	811422	ArgumentList			811210	1					
ANR	811423	IfStatement	"if ( ! req_ad -> LookupInteger ( ATTR_JOB_LEASE_DURATION , lease_duration ) )"		811210	14					
ANR	811424	Condition	"! req_ad -> LookupInteger ( ATTR_JOB_LEASE_DURATION , lease_duration )"	2001:5:54935:54997	811210	0	True				
ANR	811425	UnaryOperationExpression	"! req_ad -> LookupInteger ( ATTR_JOB_LEASE_DURATION , lease_duration )"		811210	0					
ANR	811426	UnaryOperator	!		811210	0					
ANR	811427	CallExpression	"req_ad -> LookupInteger ( ATTR_JOB_LEASE_DURATION , lease_duration )"		811210	1					
ANR	811428	Callee	req_ad -> LookupInteger		811210	0					
ANR	811429	PtrMemberAccess	req_ad -> LookupInteger		811210	0					
ANR	811430	Identifier	req_ad		811210	0					
ANR	811431	Identifier	LookupInteger		811210	1					
ANR	811432	ArgumentList	ATTR_JOB_LEASE_DURATION		811210	1					
ANR	811433	Argument	ATTR_JOB_LEASE_DURATION		811210	0					
ANR	811434	Identifier	ATTR_JOB_LEASE_DURATION		811210	0					
ANR	811435	Argument	lease_duration		811210	1					
ANR	811436	Identifier	lease_duration		811210	0					
ANR	811437	CompoundStatement		46:71:1286:1286	811210	1					
ANR	811438	ExpressionStatement	lease_duration = - 1	2002:2:55005:55024	811210	0	True				
ANR	811439	AssignmentExpression	lease_duration = - 1		811210	0		=			
ANR	811440	Identifier	lease_duration		811210	0					
ANR	811441	UnaryOperationExpression	- 1		811210	1					
ANR	811442	UnaryOperator	-		811210	0					
ANR	811443	PrimaryExpression	1		811210	1					
ANR	811444	ExpressionStatement	claim = rip -> newCODClaim ( lease_duration )	2005:1:55063:55105	811210	15	True				
ANR	811445	AssignmentExpression	claim = rip -> newCODClaim ( lease_duration )		811210	0		=			
ANR	811446	Identifier	claim		811210	0					
ANR	811447	CallExpression	rip -> newCODClaim ( lease_duration )		811210	1					
ANR	811448	Callee	rip -> newCODClaim		811210	0					
ANR	811449	PtrMemberAccess	rip -> newCODClaim		811210	0					
ANR	811450	Identifier	rip		811210	0					
ANR	811451	Identifier	newCODClaim		811210	1					
ANR	811452	ArgumentList	lease_duration		811210	1					
ANR	811453	Argument	lease_duration		811210	0					
ANR	811454	Identifier	lease_duration		811210	0					
ANR	811455	IfStatement	if ( ! claim )		811210	16					
ANR	811456	Condition	! claim	2006:5:55112:55118	811210	0	True				
ANR	811457	UnaryOperationExpression	! claim		811210	0					
ANR	811458	UnaryOperator	!		811210	0					
ANR	811459	Identifier	claim		811210	1					
ANR	811460	CompoundStatement		51:15:1407:1407	811210	1					
ANR	811461	ReturnStatement	"return sendErrorReply ( s , cmd_str , CA_FAILURE , ""Can't create new COD claim"" ) ;"	2007:2:55126:55214	811210	0	True				
ANR	811462	CallExpression	"sendErrorReply ( s , cmd_str , CA_FAILURE , ""Can't create new COD claim"" )"		811210	0					
ANR	811463	Callee	sendErrorReply		811210	0					
ANR	811464	Identifier	sendErrorReply		811210	0					
ANR	811465	ArgumentList	s		811210	1					
ANR	811466	Argument	s		811210	0					
ANR	811467	Identifier	s		811210	0					
ANR	811468	Argument	cmd_str		811210	1					
ANR	811469	Identifier	cmd_str		811210	0					
ANR	811470	Argument	CA_FAILURE		811210	2					
ANR	811471	Identifier	CA_FAILURE		811210	0					
ANR	811472	Argument	"""Can't create new COD claim"""		811210	3					
ANR	811473	PrimaryExpression	"""Can't create new COD claim"""		811210	0					
ANR	811474	ExpressionStatement	claim -> client ( ) -> setuser ( owner )	2012:1:55285:55318	811210	17	True				
ANR	811475	CallExpression	claim -> client ( ) -> setuser ( owner )		811210	0					
ANR	811476	Callee	claim -> client ( ) -> setuser		811210	0					
ANR	811477	PtrMemberAccess	claim -> client ( ) -> setuser		811210	0					
ANR	811478	CallExpression	claim -> client ( )		811210	0					
ANR	811479	Callee	claim -> client		811210	0					
ANR	811480	PtrMemberAccess	claim -> client		811210	0					
ANR	811481	Identifier	claim		811210	0					
ANR	811482	Identifier	client		811210	1					
ANR	811483	ArgumentList			811210	1					
ANR	811484	Identifier	setuser		811210	1					
ANR	811485	ArgumentList	owner		811210	1					
ANR	811486	Argument	owner		811210	0					
ANR	811487	Identifier	owner		811210	0					
ANR	811488	ExpressionStatement	claim -> client ( ) -> setowner ( owner )	2013:1:55321:55354	811210	18	True				
ANR	811489	CallExpression	claim -> client ( ) -> setowner ( owner )		811210	0					
ANR	811490	Callee	claim -> client ( ) -> setowner		811210	0					
ANR	811491	PtrMemberAccess	claim -> client ( ) -> setowner		811210	0					
ANR	811492	CallExpression	claim -> client ( )		811210	0					
ANR	811493	Callee	claim -> client		811210	0					
ANR	811494	PtrMemberAccess	claim -> client		811210	0					
ANR	811495	Identifier	claim		811210	0					
ANR	811496	Identifier	client		811210	1					
ANR	811497	ArgumentList			811210	1					
ANR	811498	Identifier	setowner		811210	1					
ANR	811499	ArgumentList	owner		811210	1					
ANR	811500	Argument	owner		811210	0					
ANR	811501	Identifier	owner		811210	0					
ANR	811502	ExpressionStatement	claim -> client ( ) -> sethost ( rsock -> peer_ip_str ( ) )	2014:1:55357:55405	811210	19	True				
ANR	811503	CallExpression	claim -> client ( ) -> sethost ( rsock -> peer_ip_str ( ) )		811210	0					
ANR	811504	Callee	claim -> client ( ) -> sethost		811210	0					
ANR	811505	PtrMemberAccess	claim -> client ( ) -> sethost		811210	0					
ANR	811506	CallExpression	claim -> client ( )		811210	0					
ANR	811507	Callee	claim -> client		811210	0					
ANR	811508	PtrMemberAccess	claim -> client		811210	0					
ANR	811509	Identifier	claim		811210	0					
ANR	811510	Identifier	client		811210	1					
ANR	811511	ArgumentList			811210	1					
ANR	811512	Identifier	sethost		811210	1					
ANR	811513	ArgumentList	rsock -> peer_ip_str ( )		811210	1					
ANR	811514	Argument	rsock -> peer_ip_str ( )		811210	0					
ANR	811515	CallExpression	rsock -> peer_ip_str ( )		811210	0					
ANR	811516	Callee	rsock -> peer_ip_str		811210	0					
ANR	811517	PtrMemberAccess	rsock -> peer_ip_str		811210	0					
ANR	811518	Identifier	rsock		811210	0					
ANR	811519	Identifier	peer_ip_str		811210	1					
ANR	811520	ArgumentList			811210	1					
ANR	811521	IdentifierDeclStatement	ClassAd reply ;	2019:1:55571:55584	811210	20	True				
ANR	811522	IdentifierDecl	reply		811210	0					
ANR	811523	IdentifierDeclType	ClassAd		811210	0					
ANR	811524	Identifier	reply		811210	1					
ANR	811525	ExpressionStatement	"rip -> publish ( & reply , A_ALL_PUB )"	2020:1:55587:55620	811210	21	True				
ANR	811526	CallExpression	"rip -> publish ( & reply , A_ALL_PUB )"		811210	0					
ANR	811527	Callee	rip -> publish		811210	0					
ANR	811528	PtrMemberAccess	rip -> publish		811210	0					
ANR	811529	Identifier	rip		811210	0					
ANR	811530	Identifier	publish		811210	1					
ANR	811531	ArgumentList	& reply		811210	1					
ANR	811532	Argument	& reply		811210	0					
ANR	811533	UnaryOperationExpression	& reply		811210	0					
ANR	811534	UnaryOperator	&		811210	0					
ANR	811535	Identifier	reply		811210	1					
ANR	811536	Argument	A_ALL_PUB		811210	1					
ANR	811537	Identifier	A_ALL_PUB		811210	0					
ANR	811538	IdentifierDeclStatement	MyString line ;	2022:1:55624:55637	811210	22	True				
ANR	811539	IdentifierDecl	line		811210	0					
ANR	811540	IdentifierDeclType	MyString		811210	0					
ANR	811541	Identifier	line		811210	1					
ANR	811542	ExpressionStatement	line = ATTR_CLAIM_ID	2023:1:55640:55660	811210	23	True				
ANR	811543	AssignmentExpression	line = ATTR_CLAIM_ID		811210	0		=			
ANR	811544	Identifier	line		811210	0					
ANR	811545	Identifier	ATTR_CLAIM_ID		811210	1					
ANR	811546	ExpressionStatement	"line += "" = \\"""""	2024:1:55663:55678	811210	24	True				
ANR	811547	AssignmentExpression	"line += "" = \\"""""		811210	0		+=			
ANR	811548	Identifier	line		811210	0					
ANR	811549	PrimaryExpression	""" = \\"""""		811210	1					
ANR	811550	ExpressionStatement	line += claim -> id ( )	2025:1:55681:55700	811210	25	True				
ANR	811551	AssignmentExpression	line += claim -> id ( )		811210	0		+=			
ANR	811552	Identifier	line		811210	0					
ANR	811553	CallExpression	claim -> id ( )		811210	1					
ANR	811554	Callee	claim -> id		811210	0					
ANR	811555	PtrMemberAccess	claim -> id		811210	0					
ANR	811556	Identifier	claim		811210	0					
ANR	811557	Identifier	id		811210	1					
ANR	811558	ArgumentList			811210	1					
ANR	811559	ExpressionStatement	"line += '""'"	2026:1:55703:55714	811210	26	True				
ANR	811560	AssignmentExpression	"line += '""'"		811210	0		+=			
ANR	811561	Identifier	line		811210	0					
ANR	811562	PrimaryExpression	"'""'"		811210	1					
ANR	811563	ExpressionStatement	reply . Insert ( line . Value ( ) )	2027:1:55717:55745	811210	27	True				
ANR	811564	CallExpression	reply . Insert ( line . Value ( ) )		811210	0					
ANR	811565	Callee	reply . Insert		811210	0					
ANR	811566	MemberAccess	reply . Insert		811210	0					
ANR	811567	Identifier	reply		811210	0					
ANR	811568	Identifier	Insert		811210	1					
ANR	811569	ArgumentList	line . Value ( )		811210	1					
ANR	811570	Argument	line . Value ( )		811210	0					
ANR	811571	CallExpression	line . Value ( )		811210	0					
ANR	811572	Callee	line . Value		811210	0					
ANR	811573	MemberAccess	line . Value		811210	0					
ANR	811574	Identifier	line		811210	0					
ANR	811575	Identifier	Value		811210	1					
ANR	811576	ArgumentList			811210	1					
ANR	811577	ExpressionStatement	line = ATTR_RESULT	2029:1:55750:55768	811210	28	True				
ANR	811578	AssignmentExpression	line = ATTR_RESULT		811210	0		=			
ANR	811579	Identifier	line		811210	0					
ANR	811580	Identifier	ATTR_RESULT		811210	1					
ANR	811581	ExpressionStatement	"line += "" = \\"""""	2030:1:55771:55786	811210	29	True				
ANR	811582	AssignmentExpression	"line += "" = \\"""""		811210	0		+=			
ANR	811583	Identifier	line		811210	0					
ANR	811584	PrimaryExpression	""" = \\"""""		811210	1					
ANR	811585	ExpressionStatement	line += getCAResultString ( CA_SUCCESS )	2031:1:55789:55828	811210	30	True				
ANR	811586	AssignmentExpression	line += getCAResultString ( CA_SUCCESS )		811210	0		+=			
ANR	811587	Identifier	line		811210	0					
ANR	811588	CallExpression	getCAResultString ( CA_SUCCESS )		811210	1					
ANR	811589	Callee	getCAResultString		811210	0					
ANR	811590	Identifier	getCAResultString		811210	0					
ANR	811591	ArgumentList	CA_SUCCESS		811210	1					
ANR	811592	Argument	CA_SUCCESS		811210	0					
ANR	811593	Identifier	CA_SUCCESS		811210	0					
ANR	811594	ExpressionStatement	"line += '""'"	2032:1:55831:55842	811210	31	True				
ANR	811595	AssignmentExpression	"line += '""'"		811210	0		+=			
ANR	811596	Identifier	line		811210	0					
ANR	811597	PrimaryExpression	"'""'"		811210	1					
ANR	811598	ExpressionStatement	reply . Insert ( line . Value ( ) )	2033:1:55845:55873	811210	32	True				
ANR	811599	CallExpression	reply . Insert ( line . Value ( ) )		811210	0					
ANR	811600	Callee	reply . Insert		811210	0					
ANR	811601	MemberAccess	reply . Insert		811210	0					
ANR	811602	Identifier	reply		811210	0					
ANR	811603	Identifier	Insert		811210	1					
ANR	811604	ArgumentList	line . Value ( )		811210	1					
ANR	811605	Argument	line . Value ( )		811210	0					
ANR	811606	CallExpression	line . Value ( )		811210	0					
ANR	811607	Callee	line . Value		811210	0					
ANR	811608	MemberAccess	line . Value		811210	0					
ANR	811609	Identifier	line		811210	0					
ANR	811610	Identifier	Value		811210	1					
ANR	811611	ArgumentList			811210	1					
ANR	811612	IdentifierDeclStatement	"int rval = sendCAReply ( s , cmd_str , & reply ) ;"	2035:1:55877:55921	811210	33	True				
ANR	811613	IdentifierDecl	"rval = sendCAReply ( s , cmd_str , & reply )"		811210	0					
ANR	811614	IdentifierDeclType	int		811210	0					
ANR	811615	Identifier	rval		811210	1					
ANR	811616	AssignmentExpression	"rval = sendCAReply ( s , cmd_str , & reply )"		811210	2		=			
ANR	811617	Identifier	rval		811210	0					
ANR	811618	CallExpression	"sendCAReply ( s , cmd_str , & reply )"		811210	1					
ANR	811619	Callee	sendCAReply		811210	0					
ANR	811620	Identifier	sendCAReply		811210	0					
ANR	811621	ArgumentList	s		811210	1					
ANR	811622	Argument	s		811210	0					
ANR	811623	Identifier	s		811210	0					
ANR	811624	Argument	cmd_str		811210	1					
ANR	811625	Identifier	cmd_str		811210	0					
ANR	811626	Argument	& reply		811210	2					
ANR	811627	UnaryOperationExpression	& reply		811210	0					
ANR	811628	UnaryOperator	&		811210	0					
ANR	811629	Identifier	reply		811210	1					
ANR	811630	IfStatement	if ( ! rval )		811210	34					
ANR	811631	Condition	! rval	2036:5:55928:55933	811210	0	True				
ANR	811632	UnaryOperationExpression	! rval		811210	0					
ANR	811633	UnaryOperator	!		811210	0					
ANR	811634	Identifier	rval		811210	1					
ANR	811635	CompoundStatement		81:14:2222:2222	811210	1					
ANR	811636	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to reply to request, removing new claim\\n"" )"	2037:2:55941:56018	811210	0	True				
ANR	811637	CallExpression	"dprintf ( D_ALWAYS , ""Failed to reply to request, removing new claim\\n"" )"		811210	0					
ANR	811638	Callee	dprintf		811210	0					
ANR	811639	Identifier	dprintf		811210	0					
ANR	811640	ArgumentList	D_ALWAYS		811210	1					
ANR	811641	Argument	D_ALWAYS		811210	0					
ANR	811642	Identifier	D_ALWAYS		811210	0					
ANR	811643	Argument	"""Failed to reply to request, removing new claim\\n"""		811210	1					
ANR	811644	PrimaryExpression	"""Failed to reply to request, removing new claim\\n"""		811210	0					
ANR	811645	ExpressionStatement	rip -> r_cod_mgr -> removeClaim ( claim )	2039:2:56022:56058	811210	1	True				
ANR	811646	CallExpression	rip -> r_cod_mgr -> removeClaim ( claim )		811210	0					
ANR	811647	Callee	rip -> r_cod_mgr -> removeClaim		811210	0					
ANR	811648	PtrMemberAccess	rip -> r_cod_mgr -> removeClaim		811210	0					
ANR	811649	PtrMemberAccess	rip -> r_cod_mgr		811210	0					
ANR	811650	Identifier	rip		811210	0					
ANR	811651	Identifier	r_cod_mgr		811210	1					
ANR	811652	Identifier	removeClaim		811210	1					
ANR	811653	ArgumentList	claim		811210	1					
ANR	811654	Argument	claim		811210	0					
ANR	811655	Identifier	claim		811210	0					
ANR	811656	ExpressionStatement	claim = NULL	2042:2:56144:56156	811210	2	True				
ANR	811657	AssignmentExpression	claim = NULL		811210	0		=			
ANR	811658	Identifier	claim		811210	0					
ANR	811659	Identifier	NULL		811210	1					
ANR	811660	ReturnStatement	return rval ;	2044:1:56162:56173	811210	35	True				
ANR	811661	Identifier	rval		811210	0					
ANR	811662	ReturnType	int		811210	1					
ANR	811663	Identifier	caRequestCODClaim		811210	2					
ANR	811664	ParameterList	"Stream * s , char * cmd_str , ClassAd * req_ad"		811210	3					
ANR	811665	Parameter	Stream * s	1955:19:53670:53678	811210	0	True				
ANR	811666	ParameterType	Stream *		811210	0					
ANR	811667	Identifier	s		811210	1					
ANR	811668	Parameter	char * cmd_str	1955:30:53681:53693	811210	1	True				
ANR	811669	ParameterType	char *		811210	0					
ANR	811670	Identifier	cmd_str		811210	1					
ANR	811671	Parameter	ClassAd * req_ad	1955:45:53696:53710	811210	2	True				
ANR	811672	ParameterType	ClassAd *		811210	0					
ANR	811673	Identifier	req_ad		811210	1					
ANR	811674	CFGEntryNode	ENTRY		811210		True				
ANR	811675	CFGExitNode	EXIT		811210		True				
ANR	811676	Symbol	authorizedForCOD		811210						
ANR	811677	Symbol	rip		811210						
ANR	811678	Symbol	claim		811210						
ANR	811679	Symbol	cmd_str		811210						
ANR	811680	Symbol	req_ad -> LookupExpr		811210						
ANR	811681	Symbol	reply		811210						
ANR	811682	Symbol	* rsock		811210						
ANR	811683	Symbol	D_COMMAND		811210						
ANR	811684	Symbol	* req_ad		811210						
ANR	811685	Symbol	rip -> newCODClaim		811210						
ANR	811686	Symbol	NULL		811210						
ANR	811687	Symbol	CA_NOT_AUTHORIZED		811210						
ANR	811688	Symbol	ATTR_REQUIREMENTS		811210						
ANR	811689	Symbol	req_ad		811210						
ANR	811690	Symbol	tree		811210						
ANR	811691	Symbol	lease_duration		811210						
ANR	811692	Symbol	* resmgr		811210						
ANR	811693	Symbol	rsock -> getOwner		811210						
ANR	811694	Symbol	D_FULLDEBUG		811210						
ANR	811695	Symbol	CA_SUCCESS		811210						
ANR	811696	Symbol	rip -> r_cod_mgr		811210						
ANR	811697	Symbol	ATTR_JOB_LEASE_DURATION		811210						
ANR	811698	Symbol	resmgr		811210						
ANR	811699	Symbol	CA_FAILURE		811210						
ANR	811700	Symbol	ATTR_RESULT		811210						
ANR	811701	Symbol	* claim		811210						
ANR	811702	Symbol	* rip		811210						
ANR	811703	Symbol	line		811210						
ANR	811704	Symbol	ExprTreeToString		811210						
ANR	811705	Symbol	rsock		811210						
ANR	811706	Symbol	& reply		811210						
ANR	811707	Symbol	ATTR_CLAIM_ID		811210						
ANR	811708	Symbol	claim -> client		811210						
ANR	811709	Symbol	A_ALL_PUB		811210						
ANR	811710	Symbol	requirements_str		811210						
ANR	811711	Symbol	sendCAReply		811210						
ANR	811712	Symbol	rval		811210						
ANR	811713	Symbol	owner		811210						
ANR	811714	Symbol	req_ad -> LookupInteger		811210						
ANR	811715	Symbol	line . Value		811210						
ANR	811716	Symbol	D_ALWAYS		811210						
ANR	811717	Symbol	claim -> id		811210						
ANR	811718	Symbol	err_msg . Value		811210						
ANR	811719	Symbol	rsock -> peer_ip_str		811210						
ANR	811720	Symbol	getCAResultString		811210						
ANR	811721	Symbol	sendErrorReply		811210						
ANR	811722	Symbol	s		811210						
ANR	811723	Symbol	err_msg		811210						
ANR	811724	Symbol	resmgr -> findRipForNewCOD		811210						
ANR	811725	Function	caRequestClaim	2048:0:56179:57330							
ANR	811726	FunctionDef	"caRequestClaim (Stream * s , char * cmd_str , ClassAd * req_ad)"		811725	0					
ANR	811727	CompoundStatement		2050:0:56243:57330	811725	0					
ANR	811728	IdentifierDeclStatement	ClaimType claim_type ;	2051:1:56246:56266	811725	0	True				
ANR	811729	IdentifierDecl	claim_type		811725	0					
ANR	811730	IdentifierDeclType	ClaimType		811725	0					
ANR	811731	Identifier	claim_type		811725	1					
ANR	811732	IdentifierDeclStatement	char * ct_str = NULL ;	2052:1:56269:56288	811725	1	True				
ANR	811733	IdentifierDecl	* ct_str = NULL		811725	0					
ANR	811734	IdentifierDeclType	char *		811725	0					
ANR	811735	Identifier	ct_str		811725	1					
ANR	811736	AssignmentExpression	* ct_str = NULL		811725	2		=			
ANR	811737	Identifier	NULL		811725	0					
ANR	811738	Identifier	NULL		811725	1					
ANR	811739	IdentifierDeclStatement	MyString err_msg ;	2053:1:56291:56307	811725	2	True				
ANR	811740	IdentifierDecl	err_msg		811725	0					
ANR	811741	IdentifierDeclType	MyString		811725	0					
ANR	811742	Identifier	err_msg		811725	1					
ANR	811743	IfStatement	"if ( ! req_ad -> LookupString ( ATTR_CLAIM_TYPE , & ct_str ) )"		811725	3					
ANR	811744	Condition	"! req_ad -> LookupString ( ATTR_CLAIM_TYPE , & ct_str )"	2057:5:56402:56449	811725	0	True				
ANR	811745	UnaryOperationExpression	"! req_ad -> LookupString ( ATTR_CLAIM_TYPE , & ct_str )"		811725	0					
ANR	811746	UnaryOperator	!		811725	0					
ANR	811747	CallExpression	"req_ad -> LookupString ( ATTR_CLAIM_TYPE , & ct_str )"		811725	1					
ANR	811748	Callee	req_ad -> LookupString		811725	0					
ANR	811749	PtrMemberAccess	req_ad -> LookupString		811725	0					
ANR	811750	Identifier	req_ad		811725	0					
ANR	811751	Identifier	LookupString		811725	1					
ANR	811752	ArgumentList	ATTR_CLAIM_TYPE		811725	1					
ANR	811753	Argument	ATTR_CLAIM_TYPE		811725	0					
ANR	811754	Identifier	ATTR_CLAIM_TYPE		811725	0					
ANR	811755	Argument	& ct_str		811725	1					
ANR	811756	UnaryOperationExpression	& ct_str		811725	0					
ANR	811757	UnaryOperator	&		811725	0					
ANR	811758	Identifier	ct_str		811725	1					
ANR	811759	CompoundStatement		8:56:209:209	811725	1					
ANR	811760	ExpressionStatement	"err_msg = ""No """	2058:2:56457:56472	811725	0	True				
ANR	811761	AssignmentExpression	"err_msg = ""No """		811725	0		=			
ANR	811762	Identifier	err_msg		811725	0					
ANR	811763	PrimaryExpression	"""No """		811725	1					
ANR	811764	ExpressionStatement	err_msg += ATTR_CLAIM_TYPE	2059:2:56476:56502	811725	1	True				
ANR	811765	AssignmentExpression	err_msg += ATTR_CLAIM_TYPE		811725	0		+=			
ANR	811766	Identifier	err_msg		811725	0					
ANR	811767	Identifier	ATTR_CLAIM_TYPE		811725	1					
ANR	811768	ExpressionStatement	"err_msg += "" in ClassAd"""	2060:2:56506:56530	811725	2	True				
ANR	811769	AssignmentExpression	"err_msg += "" in ClassAd"""		811725	0		+=			
ANR	811770	Identifier	err_msg		811725	0					
ANR	811771	PrimaryExpression	""" in ClassAd"""		811725	1					
ANR	811772	ReturnStatement	"return sendErrorReply ( s , cmd_str , CA_INVALID_REQUEST , err_msg . Value ( ) ) ;"	2061:2:56534:56617	811725	3	True				
ANR	811773	CallExpression	"sendErrorReply ( s , cmd_str , CA_INVALID_REQUEST , err_msg . Value ( ) )"		811725	0					
ANR	811774	Callee	sendErrorReply		811725	0					
ANR	811775	Identifier	sendErrorReply		811725	0					
ANR	811776	ArgumentList	s		811725	1					
ANR	811777	Argument	s		811725	0					
ANR	811778	Identifier	s		811725	0					
ANR	811779	Argument	cmd_str		811725	1					
ANR	811780	Identifier	cmd_str		811725	0					
ANR	811781	Argument	CA_INVALID_REQUEST		811725	2					
ANR	811782	Identifier	CA_INVALID_REQUEST		811725	0					
ANR	811783	Argument	err_msg . Value ( )		811725	3					
ANR	811784	CallExpression	err_msg . Value ( )		811725	0					
ANR	811785	Callee	err_msg . Value		811725	0					
ANR	811786	MemberAccess	err_msg . Value		811725	0					
ANR	811787	Identifier	err_msg		811725	0					
ANR	811788	Identifier	Value		811725	1					
ANR	811789	ArgumentList			811725	1					
ANR	811790	ExpressionStatement	claim_type = getClaimTypeNum ( ct_str )	2064:1:56623:56661	811725	4	True				
ANR	811791	AssignmentExpression	claim_type = getClaimTypeNum ( ct_str )		811725	0		=			
ANR	811792	Identifier	claim_type		811725	0					
ANR	811793	CallExpression	getClaimTypeNum ( ct_str )		811725	1					
ANR	811794	Callee	getClaimTypeNum		811725	0					
ANR	811795	Identifier	getClaimTypeNum		811725	0					
ANR	811796	ArgumentList	ct_str		811725	1					
ANR	811797	Argument	ct_str		811725	0					
ANR	811798	Identifier	ct_str		811725	0					
ANR	811799	ExpressionStatement	free ( ct_str )	2065:1:56664:56678	811725	5	True				
ANR	811800	CallExpression	free ( ct_str )		811725	0					
ANR	811801	Callee	free		811725	0					
ANR	811802	Identifier	free		811725	0					
ANR	811803	ArgumentList	ct_str		811725	1					
ANR	811804	Argument	ct_str		811725	0					
ANR	811805	Identifier	ct_str		811725	0					
ANR	811806	SwitchStatement	switch ( claim_type )		811725	6					
ANR	811807	Condition	claim_type	2066:9:56690:56699	811725	0	True				
ANR	811808	Identifier	claim_type		811725	0					
ANR	811809	CompoundStatement		17:22:459:459	811725	1					
ANR	811810	Label	case CLAIM_COD :	2067:1:56706:56720	811725	0	True				
ANR	811811	Identifier	CLAIM_COD		811725	0					
ANR	811812	ReturnStatement	"return caRequestCODClaim ( s , cmd_str , req_ad ) ;"	2068:2:56724:56770	811725	1	True				
ANR	811813	CallExpression	"caRequestCODClaim ( s , cmd_str , req_ad )"		811725	0					
ANR	811814	Callee	caRequestCODClaim		811725	0					
ANR	811815	Identifier	caRequestCODClaim		811725	0					
ANR	811816	ArgumentList	s		811725	1					
ANR	811817	Argument	s		811725	0					
ANR	811818	Identifier	s		811725	0					
ANR	811819	Argument	cmd_str		811725	1					
ANR	811820	Identifier	cmd_str		811725	0					
ANR	811821	Argument	req_ad		811725	2					
ANR	811822	Identifier	req_ad		811725	0					
ANR	811823	BreakStatement	break ;	2069:2:56774:56779	811725	2	True				
ANR	811824	Label	case CLAIM_OPPORTUNISTIC :	2070:1:56782:56806	811725	3	True				
ANR	811825	Identifier	CLAIM_OPPORTUNISTIC		811725	0					
ANR	811826	ExpressionStatement	err_msg = ATTR_CLAIM_TYPE	2071:2:56810:56835	811725	4	True				
ANR	811827	AssignmentExpression	err_msg = ATTR_CLAIM_TYPE		811725	0		=			
ANR	811828	Identifier	err_msg		811725	0					
ANR	811829	Identifier	ATTR_CLAIM_TYPE		811725	1					
ANR	811830	ExpressionStatement	"err_msg += "" ("""	2072:2:56839:56854	811725	5	True				
ANR	811831	AssignmentExpression	"err_msg += "" ("""		811725	0		+=			
ANR	811832	Identifier	err_msg		811725	0					
ANR	811833	PrimaryExpression	""" ("""		811725	1					
ANR	811834	ExpressionStatement	err_msg += getClaimTypeString ( claim_type )	2073:2:56858:56901	811725	6	True				
ANR	811835	AssignmentExpression	err_msg += getClaimTypeString ( claim_type )		811725	0		+=			
ANR	811836	Identifier	err_msg		811725	0					
ANR	811837	CallExpression	getClaimTypeString ( claim_type )		811725	1					
ANR	811838	Callee	getClaimTypeString		811725	0					
ANR	811839	Identifier	getClaimTypeString		811725	0					
ANR	811840	ArgumentList	claim_type		811725	1					
ANR	811841	Argument	claim_type		811725	0					
ANR	811842	Identifier	claim_type		811725	0					
ANR	811843	ExpressionStatement	"err_msg += "") not supported by this startd"""	2074:2:56905:56948	811725	7	True				
ANR	811844	AssignmentExpression	"err_msg += "") not supported by this startd"""		811725	0		+=			
ANR	811845	Identifier	err_msg		811725	0					
ANR	811846	PrimaryExpression	""") not supported by this startd"""		811725	1					
ANR	811847	ReturnStatement	"return sendErrorReply ( s , cmd_str , CA_INVALID_REQUEST , err_msg . Value ( ) ) ;"	2075:2:56952:57034	811725	8	True				
ANR	811848	CallExpression	"sendErrorReply ( s , cmd_str , CA_INVALID_REQUEST , err_msg . Value ( ) )"		811725	0					
ANR	811849	Callee	sendErrorReply		811725	0					
ANR	811850	Identifier	sendErrorReply		811725	0					
ANR	811851	ArgumentList	s		811725	1					
ANR	811852	Argument	s		811725	0					
ANR	811853	Identifier	s		811725	0					
ANR	811854	Argument	cmd_str		811725	1					
ANR	811855	Identifier	cmd_str		811725	0					
ANR	811856	Argument	CA_INVALID_REQUEST		811725	2					
ANR	811857	Identifier	CA_INVALID_REQUEST		811725	0					
ANR	811858	Argument	err_msg . Value ( )		811725	3					
ANR	811859	CallExpression	err_msg . Value ( )		811725	0					
ANR	811860	Callee	err_msg . Value		811725	0					
ANR	811861	MemberAccess	err_msg . Value		811725	0					
ANR	811862	Identifier	err_msg		811725	0					
ANR	811863	Identifier	Value		811725	1					
ANR	811864	ArgumentList			811725	1					
ANR	811865	BreakStatement	break ;	2077:2:57038:57043	811725	9	True				
ANR	811866	Label	default :	2078:1:57046:57053	811725	10	True				
ANR	811867	Identifier	default		811725	0					
ANR	811868	ExpressionStatement	"err_msg = ""Unrecognized """	2079:2:57057:57082	811725	11	True				
ANR	811869	AssignmentExpression	"err_msg = ""Unrecognized """		811725	0		=			
ANR	811870	Identifier	err_msg		811725	0					
ANR	811871	PrimaryExpression	"""Unrecognized """		811725	1					
ANR	811872	ExpressionStatement	err_msg += ATTR_CLAIM_TYPE	2080:2:57086:57112	811725	12	True				
ANR	811873	AssignmentExpression	err_msg += ATTR_CLAIM_TYPE		811725	0		+=			
ANR	811874	Identifier	err_msg		811725	0					
ANR	811875	Identifier	ATTR_CLAIM_TYPE		811725	1					
ANR	811876	ExpressionStatement	"err_msg += "" ("""	2081:2:57116:57131	811725	13	True				
ANR	811877	AssignmentExpression	"err_msg += "" ("""		811725	0		+=			
ANR	811878	Identifier	err_msg		811725	0					
ANR	811879	PrimaryExpression	""" ("""		811725	1					
ANR	811880	ExpressionStatement	err_msg += getClaimTypeString ( claim_type )	2082:2:57135:57178	811725	14	True				
ANR	811881	AssignmentExpression	err_msg += getClaimTypeString ( claim_type )		811725	0		+=			
ANR	811882	Identifier	err_msg		811725	0					
ANR	811883	CallExpression	getClaimTypeString ( claim_type )		811725	1					
ANR	811884	Callee	getClaimTypeString		811725	0					
ANR	811885	Identifier	getClaimTypeString		811725	0					
ANR	811886	ArgumentList	claim_type		811725	1					
ANR	811887	Argument	claim_type		811725	0					
ANR	811888	Identifier	claim_type		811725	0					
ANR	811889	ExpressionStatement	"err_msg += "") in request ClassAd"""	2083:2:57182:57215	811725	15	True				
ANR	811890	AssignmentExpression	"err_msg += "") in request ClassAd"""		811725	0		+=			
ANR	811891	Identifier	err_msg		811725	0					
ANR	811892	PrimaryExpression	""") in request ClassAd"""		811725	1					
ANR	811893	ReturnStatement	"return sendErrorReply ( s , cmd_str , CA_INVALID_REQUEST , err_msg . Value ( ) ) ;"	2084:2:57219:57301	811725	16	True				
ANR	811894	CallExpression	"sendErrorReply ( s , cmd_str , CA_INVALID_REQUEST , err_msg . Value ( ) )"		811725	0					
ANR	811895	Callee	sendErrorReply		811725	0					
ANR	811896	Identifier	sendErrorReply		811725	0					
ANR	811897	ArgumentList	s		811725	1					
ANR	811898	Argument	s		811725	0					
ANR	811899	Identifier	s		811725	0					
ANR	811900	Argument	cmd_str		811725	1					
ANR	811901	Identifier	cmd_str		811725	0					
ANR	811902	Argument	CA_INVALID_REQUEST		811725	2					
ANR	811903	Identifier	CA_INVALID_REQUEST		811725	0					
ANR	811904	Argument	err_msg . Value ( )		811725	3					
ANR	811905	CallExpression	err_msg . Value ( )		811725	0					
ANR	811906	Callee	err_msg . Value		811725	0					
ANR	811907	MemberAccess	err_msg . Value		811725	0					
ANR	811908	Identifier	err_msg		811725	0					
ANR	811909	Identifier	Value		811725	1					
ANR	811910	ArgumentList			811725	1					
ANR	811911	BreakStatement	break ;	2086:2:57305:57310	811725	17	True				
ANR	811912	ReturnStatement	return FALSE ;	2088:1:57316:57328	811725	7	True				
ANR	811913	Identifier	FALSE		811725	0					
ANR	811914	ReturnType	int		811725	1					
ANR	811915	Identifier	caRequestClaim		811725	2					
ANR	811916	ParameterList	"Stream * s , char * cmd_str , ClassAd * req_ad"		811725	3					
ANR	811917	Parameter	Stream * s	2049:16:56199:56207	811725	0	True				
ANR	811918	ParameterType	Stream *		811725	0					
ANR	811919	Identifier	s		811725	1					
ANR	811920	Parameter	char * cmd_str	2049:27:56210:56222	811725	1	True				
ANR	811921	ParameterType	char *		811725	0					
ANR	811922	Identifier	cmd_str		811725	1					
ANR	811923	Parameter	ClassAd * req_ad	2049:42:56225:56239	811725	2	True				
ANR	811924	ParameterType	ClassAd *		811725	0					
ANR	811925	Identifier	req_ad		811725	1					
ANR	811926	CFGEntryNode	ENTRY		811725		True				
ANR	811927	CFGExitNode	EXIT		811725		True				
ANR	811928	Symbol	NULL		811725						
ANR	811929	Symbol	getClaimTypeNum		811725						
ANR	811930	Symbol	CA_INVALID_REQUEST		811725						
ANR	811931	Symbol	getClaimTypeString		811725						
ANR	811932	Symbol	req_ad		811725						
ANR	811933	Symbol	ATTR_CLAIM_TYPE		811725						
ANR	811934	Symbol	claim_type		811725						
ANR	811935	Symbol	& ct_str		811725						
ANR	811936	Symbol	err_msg . Value		811725						
ANR	811937	Symbol	sendErrorReply		811725						
ANR	811938	Symbol	s		811725						
ANR	811939	Symbol	req_ad -> LookupString		811725						
ANR	811940	Symbol	caRequestCODClaim		811725						
ANR	811941	Symbol	err_msg		811725						
ANR	811942	Symbol	FALSE		811725						
ANR	811943	Symbol	cmd_str		811725						
ANR	811944	Symbol	ct_str		811725						
ANR	811945	Symbol	* req_ad		811725						
ANR	811946	Function	caLocateStarter	2092:0:57334:59478							
ANR	811947	FunctionDef	"caLocateStarter (Stream * s , char * cmd_str , ClassAd * req_ad)"		811946	0					
ANR	811948	CompoundStatement		2094:0:57399:59478	811946	0					
ANR	811949	IdentifierDeclStatement	char * global_job_id = NULL ;	2095:1:57402:57428	811946	0	True				
ANR	811950	IdentifierDecl	* global_job_id = NULL		811946	0					
ANR	811951	IdentifierDeclType	char *		811946	0					
ANR	811952	Identifier	global_job_id		811946	1					
ANR	811953	AssignmentExpression	* global_job_id = NULL		811946	2		=			
ANR	811954	Identifier	NULL		811946	0					
ANR	811955	Identifier	NULL		811946	1					
ANR	811956	IdentifierDeclStatement	char * claimid = NULL ;	2096:1:57431:57451	811946	1	True				
ANR	811957	IdentifierDecl	* claimid = NULL		811946	0					
ANR	811958	IdentifierDeclType	char *		811946	0					
ANR	811959	Identifier	claimid		811946	1					
ANR	811960	AssignmentExpression	* claimid = NULL		811946	2		=			
ANR	811961	Identifier	NULL		811946	0					
ANR	811962	Identifier	NULL		811946	1					
ANR	811963	IdentifierDeclStatement	char * schedd_addr = NULL ;	2097:1:57454:57478	811946	2	True				
ANR	811964	IdentifierDecl	* schedd_addr = NULL		811946	0					
ANR	811965	IdentifierDeclType	char *		811946	0					
ANR	811966	Identifier	schedd_addr		811946	1					
ANR	811967	AssignmentExpression	* schedd_addr = NULL		811946	2		=			
ANR	811968	Identifier	NULL		811946	0					
ANR	811969	Identifier	NULL		811946	1					
ANR	811970	IdentifierDeclStatement	Claim * claim = NULL ;	2098:1:57481:57500	811946	3	True				
ANR	811971	IdentifierDecl	* claim = NULL		811946	0					
ANR	811972	IdentifierDeclType	Claim *		811946	0					
ANR	811973	Identifier	claim		811946	1					
ANR	811974	AssignmentExpression	* claim = NULL		811946	2		=			
ANR	811975	Identifier	NULL		811946	0					
ANR	811976	Identifier	NULL		811946	1					
ANR	811977	IdentifierDeclStatement	int rval = TRUE ;	2099:1:57503:57518	811946	4	True				
ANR	811978	IdentifierDecl	rval = TRUE		811946	0					
ANR	811979	IdentifierDeclType	int		811946	0					
ANR	811980	Identifier	rval		811946	1					
ANR	811981	AssignmentExpression	rval = TRUE		811946	2		=			
ANR	811982	Identifier	TRUE		811946	0					
ANR	811983	Identifier	TRUE		811946	1					
ANR	811984	IdentifierDeclStatement	ClassAd reply ;	2100:1:57521:57534	811946	5	True				
ANR	811985	IdentifierDecl	reply		811946	0					
ANR	811986	IdentifierDeclType	ClassAd		811946	0					
ANR	811987	Identifier	reply		811946	1					
ANR	811988	IdentifierDeclStatement	std :: string startd_sends_alives ;	2101:1:57537:57568	811946	6	True				
ANR	811989	IdentifierDecl	startd_sends_alives		811946	0					
ANR	811990	IdentifierDeclType	std :: string		811946	0					
ANR	811991	Identifier	startd_sends_alives		811946	1					
ANR	811992	ExpressionStatement	"req_ad -> LookupString ( ATTR_CLAIM_ID , & claimid )"	2103:1:57572:57617	811946	7	True				
ANR	811993	CallExpression	"req_ad -> LookupString ( ATTR_CLAIM_ID , & claimid )"		811946	0					
ANR	811994	Callee	req_ad -> LookupString		811946	0					
ANR	811995	PtrMemberAccess	req_ad -> LookupString		811946	0					
ANR	811996	Identifier	req_ad		811946	0					
ANR	811997	Identifier	LookupString		811946	1					
ANR	811998	ArgumentList	ATTR_CLAIM_ID		811946	1					
ANR	811999	Argument	ATTR_CLAIM_ID		811946	0					
ANR	812000	Identifier	ATTR_CLAIM_ID		811946	0					
ANR	812001	Argument	& claimid		811946	1					
ANR	812002	UnaryOperationExpression	& claimid		811946	0					
ANR	812003	UnaryOperator	&		811946	0					
ANR	812004	Identifier	claimid		811946	1					
ANR	812005	ExpressionStatement	"req_ad -> LookupString ( ATTR_GLOBAL_JOB_ID , & global_job_id )"	2104:1:57620:57676	811946	8	True				
ANR	812006	CallExpression	"req_ad -> LookupString ( ATTR_GLOBAL_JOB_ID , & global_job_id )"		811946	0					
ANR	812007	Callee	req_ad -> LookupString		811946	0					
ANR	812008	PtrMemberAccess	req_ad -> LookupString		811946	0					
ANR	812009	Identifier	req_ad		811946	0					
ANR	812010	Identifier	LookupString		811946	1					
ANR	812011	ArgumentList	ATTR_GLOBAL_JOB_ID		811946	1					
ANR	812012	Argument	ATTR_GLOBAL_JOB_ID		811946	0					
ANR	812013	Identifier	ATTR_GLOBAL_JOB_ID		811946	0					
ANR	812014	Argument	& global_job_id		811946	1					
ANR	812015	UnaryOperationExpression	& global_job_id		811946	0					
ANR	812016	UnaryOperator	&		811946	0					
ANR	812017	Identifier	global_job_id		811946	1					
ANR	812018	ExpressionStatement	"req_ad -> LookupString ( ATTR_SCHEDD_IP_ADDR , & schedd_addr )"	2105:1:57679:57734	811946	9	True				
ANR	812019	CallExpression	"req_ad -> LookupString ( ATTR_SCHEDD_IP_ADDR , & schedd_addr )"		811946	0					
ANR	812020	Callee	req_ad -> LookupString		811946	0					
ANR	812021	PtrMemberAccess	req_ad -> LookupString		811946	0					
ANR	812022	Identifier	req_ad		811946	0					
ANR	812023	Identifier	LookupString		811946	1					
ANR	812024	ArgumentList	ATTR_SCHEDD_IP_ADDR		811946	1					
ANR	812025	Argument	ATTR_SCHEDD_IP_ADDR		811946	0					
ANR	812026	Identifier	ATTR_SCHEDD_IP_ADDR		811946	0					
ANR	812027	Argument	& schedd_addr		811946	1					
ANR	812028	UnaryOperationExpression	& schedd_addr		811946	0					
ANR	812029	UnaryOperator	&		811946	0					
ANR	812030	Identifier	schedd_addr		811946	1					
ANR	812031	ExpressionStatement	"claim = resmgr -> getClaimByGlobalJobIdAndId ( global_job_id , claimid )"	2106:1:57737:57803	811946	10	True				
ANR	812032	AssignmentExpression	"claim = resmgr -> getClaimByGlobalJobIdAndId ( global_job_id , claimid )"		811946	0		=			
ANR	812033	Identifier	claim		811946	0					
ANR	812034	CallExpression	"resmgr -> getClaimByGlobalJobIdAndId ( global_job_id , claimid )"		811946	1					
ANR	812035	Callee	resmgr -> getClaimByGlobalJobIdAndId		811946	0					
ANR	812036	PtrMemberAccess	resmgr -> getClaimByGlobalJobIdAndId		811946	0					
ANR	812037	Identifier	resmgr		811946	0					
ANR	812038	Identifier	getClaimByGlobalJobIdAndId		811946	1					
ANR	812039	ArgumentList	global_job_id		811946	1					
ANR	812040	Argument	global_job_id		811946	0					
ANR	812041	Identifier	global_job_id		811946	0					
ANR	812042	Argument	claimid		811946	1					
ANR	812043	Identifier	claimid		811946	0					
ANR	812044	IfStatement	if ( ! claim )		811946	11					
ANR	812045	Condition	! claim	2108:5:57811:57817	811946	0	True				
ANR	812046	UnaryOperationExpression	! claim		811946	0					
ANR	812047	UnaryOperator	!		811946	0					
ANR	812048	Identifier	claim		811946	1					
ANR	812049	CompoundStatement		16:2:425:457	811946	1					
ANR	812050	IdentifierDeclStatement	MyString err_msg = ATTR_CLAIM_ID ;	2109:2:57825:57857	811946	0	True				
ANR	812051	IdentifierDecl	err_msg = ATTR_CLAIM_ID		811946	0					
ANR	812052	IdentifierDeclType	MyString		811946	0					
ANR	812053	Identifier	err_msg		811946	1					
ANR	812054	AssignmentExpression	err_msg = ATTR_CLAIM_ID		811946	2		=			
ANR	812055	Identifier	ATTR_CLAIM_ID		811946	0					
ANR	812056	Identifier	ATTR_CLAIM_ID		811946	1					
ANR	812057	ExpressionStatement	"err_msg += "" ("""	2110:2:57861:57876	811946	1	True				
ANR	812058	AssignmentExpression	"err_msg += "" ("""		811946	0		+=			
ANR	812059	Identifier	err_msg		811946	0					
ANR	812060	PrimaryExpression	""" ("""		811946	1					
ANR	812061	ExpressionStatement	err_msg += claimid	2111:2:57880:57898	811946	2	True				
ANR	812062	AssignmentExpression	err_msg += claimid		811946	0		+=			
ANR	812063	Identifier	err_msg		811946	0					
ANR	812064	Identifier	claimid		811946	1					
ANR	812065	ExpressionStatement	"err_msg += "") and """	2112:2:57902:57921	811946	3	True				
ANR	812066	AssignmentExpression	"err_msg += "") and """		811946	0		+=			
ANR	812067	Identifier	err_msg		811946	0					
ANR	812068	PrimaryExpression	""") and """		811946	1					
ANR	812069	ExpressionStatement	err_msg += ATTR_GLOBAL_JOB_ID	2113:2:57925:57954	811946	4	True				
ANR	812070	AssignmentExpression	err_msg += ATTR_GLOBAL_JOB_ID		811946	0		+=			
ANR	812071	Identifier	err_msg		811946	0					
ANR	812072	Identifier	ATTR_GLOBAL_JOB_ID		811946	1					
ANR	812073	ExpressionStatement	"err_msg += "" ( """	2114:2:57958:57974	811946	5	True				
ANR	812074	AssignmentExpression	"err_msg += "" ( """		811946	0		+=			
ANR	812075	Identifier	err_msg		811946	0					
ANR	812076	PrimaryExpression	""" ( """		811946	1					
ANR	812077	ExpressionStatement	err_msg += global_job_id	2115:2:57978:58002	811946	6	True				
ANR	812078	AssignmentExpression	err_msg += global_job_id		811946	0		+=			
ANR	812079	Identifier	err_msg		811946	0					
ANR	812080	Identifier	global_job_id		811946	1					
ANR	812081	ExpressionStatement	"err_msg += "" ) not found"""	2116:2:58006:58031	811946	7	True				
ANR	812082	AssignmentExpression	"err_msg += "" ) not found"""		811946	0		+=			
ANR	812083	Identifier	err_msg		811946	0					
ANR	812084	PrimaryExpression	""" ) not found"""		811946	1					
ANR	812085	ExpressionStatement	"sendErrorReply ( s , cmd_str , CA_FAILURE , err_msg . Value ( ) )"	2117:2:58035:58092	811946	8	True				
ANR	812086	CallExpression	"sendErrorReply ( s , cmd_str , CA_FAILURE , err_msg . Value ( ) )"		811946	0					
ANR	812087	Callee	sendErrorReply		811946	0					
ANR	812088	Identifier	sendErrorReply		811946	0					
ANR	812089	ArgumentList	s		811946	1					
ANR	812090	Argument	s		811946	0					
ANR	812091	Identifier	s		811946	0					
ANR	812092	Argument	cmd_str		811946	1					
ANR	812093	Identifier	cmd_str		811946	0					
ANR	812094	Argument	CA_FAILURE		811946	2					
ANR	812095	Identifier	CA_FAILURE		811946	0					
ANR	812096	Argument	err_msg . Value ( )		811946	3					
ANR	812097	CallExpression	err_msg . Value ( )		811946	0					
ANR	812098	Callee	err_msg . Value		811946	0					
ANR	812099	MemberAccess	err_msg . Value		811946	0					
ANR	812100	Identifier	err_msg		811946	0					
ANR	812101	Identifier	Value		811946	1					
ANR	812102	ArgumentList			811946	1					
ANR	812103	ExpressionStatement	rval = FALSE	2118:2:58096:58108	811946	9	True				
ANR	812104	AssignmentExpression	rval = FALSE		811946	0		=			
ANR	812105	Identifier	rval		811946	0					
ANR	812106	Identifier	FALSE		811946	1					
ANR	812107	GotoStatement	goto cleanup ;	2119:2:58112:58124	811946	10	True				
ANR	812108	Identifier	cleanup		811946	0					
ANR	812109	ExpressionStatement	"param ( startd_sends_alives , ""STARTD_SENDS_ALIVES"" , ""peer"" )"	2125:1:58269:58328	811946	12	True				
ANR	812110	CallExpression	"param ( startd_sends_alives , ""STARTD_SENDS_ALIVES"" , ""peer"" )"		811946	0					
ANR	812111	Callee	param		811946	0					
ANR	812112	Identifier	param		811946	0					
ANR	812113	ArgumentList	startd_sends_alives		811946	1					
ANR	812114	Argument	startd_sends_alives		811946	0					
ANR	812115	Identifier	startd_sends_alives		811946	0					
ANR	812116	Argument	"""STARTD_SENDS_ALIVES"""		811946	1					
ANR	812117	PrimaryExpression	"""STARTD_SENDS_ALIVES"""		811946	0					
ANR	812118	Argument	"""peer"""		811946	2					
ANR	812119	PrimaryExpression	"""peer"""		811946	0					
ANR	812120	IfStatement	"if ( ( ! schedd_addr ) && strcasecmp ( startd_sends_alives . c_str ( ) , ""false"" ) )"		811946	13					
ANR	812121	Condition	"( ! schedd_addr ) && strcasecmp ( startd_sends_alives . c_str ( ) , ""false"" )"	2126:6:58336:58407	811946	0	True				
ANR	812122	AndExpression	"( ! schedd_addr ) && strcasecmp ( startd_sends_alives . c_str ( ) , ""false"" )"		811946	0		&&			
ANR	812123	UnaryOperationExpression	! schedd_addr		811946	0					
ANR	812124	UnaryOperator	!		811946	0					
ANR	812125	Identifier	schedd_addr		811946	1					
ANR	812126	CallExpression	"strcasecmp ( startd_sends_alives . c_str ( ) , ""false"" )"		811946	1					
ANR	812127	Callee	strcasecmp		811946	0					
ANR	812128	Identifier	strcasecmp		811946	0					
ANR	812129	ArgumentList	startd_sends_alives . c_str ( )		811946	1					
ANR	812130	Argument	startd_sends_alives . c_str ( )		811946	0					
ANR	812131	CallExpression	startd_sends_alives . c_str ( )		811946	0					
ANR	812132	Callee	startd_sends_alives . c_str		811946	0					
ANR	812133	MemberAccess	startd_sends_alives . c_str		811946	0					
ANR	812134	Identifier	startd_sends_alives		811946	0					
ANR	812135	Identifier	c_str		811946	1					
ANR	812136	ArgumentList			811946	1					
ANR	812137	Argument	"""false"""		811946	1					
ANR	812138	PrimaryExpression	"""false"""		811946	0					
ANR	812139	CompoundStatement		36:2:1016:1032	811946	1					
ANR	812140	IdentifierDeclStatement	MyString err_msg ;	2129:2:58416:58432	811946	0	True				
ANR	812141	IdentifierDecl	err_msg		811946	0					
ANR	812142	IdentifierDeclType	MyString		811946	0					
ANR	812143	Identifier	err_msg		811946	1					
ANR	812144	ExpressionStatement	"err_msg . sprintf ( ""Required %s, not found in request"" , ATTR_SCHEDD_IP_ADDR )"	2130:2:58436:58515	811946	1	True				
ANR	812145	CallExpression	"err_msg . sprintf ( ""Required %s, not found in request"" , ATTR_SCHEDD_IP_ADDR )"		811946	0					
ANR	812146	Callee	err_msg . sprintf		811946	0					
ANR	812147	MemberAccess	err_msg . sprintf		811946	0					
ANR	812148	Identifier	err_msg		811946	0					
ANR	812149	Identifier	sprintf		811946	1					
ANR	812150	ArgumentList	"""Required %s, not found in request"""		811946	1					
ANR	812151	Argument	"""Required %s, not found in request"""		811946	0					
ANR	812152	PrimaryExpression	"""Required %s, not found in request"""		811946	0					
ANR	812153	Argument	ATTR_SCHEDD_IP_ADDR		811946	1					
ANR	812154	Identifier	ATTR_SCHEDD_IP_ADDR		811946	0					
ANR	812155	ExpressionStatement	"sendErrorReply ( s , cmd_str , CA_FAILURE , err_msg . Value ( ) )"	2132:2:58519:58576	811946	2	True				
ANR	812156	CallExpression	"sendErrorReply ( s , cmd_str , CA_FAILURE , err_msg . Value ( ) )"		811946	0					
ANR	812157	Callee	sendErrorReply		811946	0					
ANR	812158	Identifier	sendErrorReply		811946	0					
ANR	812159	ArgumentList	s		811946	1					
ANR	812160	Argument	s		811946	0					
ANR	812161	Identifier	s		811946	0					
ANR	812162	Argument	cmd_str		811946	1					
ANR	812163	Identifier	cmd_str		811946	0					
ANR	812164	Argument	CA_FAILURE		811946	2					
ANR	812165	Identifier	CA_FAILURE		811946	0					
ANR	812166	Argument	err_msg . Value ( )		811946	3					
ANR	812167	CallExpression	err_msg . Value ( )		811946	0					
ANR	812168	Callee	err_msg . Value		811946	0					
ANR	812169	MemberAccess	err_msg . Value		811946	0					
ANR	812170	Identifier	err_msg		811946	0					
ANR	812171	Identifier	Value		811946	1					
ANR	812172	ArgumentList			811946	1					
ANR	812173	ExpressionStatement	rval = FALSE	2133:2:58580:58592	811946	3	True				
ANR	812174	AssignmentExpression	rval = FALSE		811946	0		=			
ANR	812175	Identifier	rval		811946	0					
ANR	812176	Identifier	FALSE		811946	1					
ANR	812177	GotoStatement	goto cleanup ;	2134:2:58596:58608	811946	4	True				
ANR	812178	Identifier	cleanup		811946	0					
ANR	812179	IfStatement	if ( ! claim -> publishStarterAd ( & reply ) )		811946	14					
ANR	812180	Condition	! claim -> publishStarterAd ( & reply )	2137:5:58619:58651	811946	0	True				
ANR	812181	UnaryOperationExpression	! claim -> publishStarterAd ( & reply )		811946	0					
ANR	812182	UnaryOperator	!		811946	0					
ANR	812183	CallExpression	claim -> publishStarterAd ( & reply )		811946	1					
ANR	812184	Callee	claim -> publishStarterAd		811946	0					
ANR	812185	PtrMemberAccess	claim -> publishStarterAd		811946	0					
ANR	812186	Identifier	claim		811946	0					
ANR	812187	Identifier	publishStarterAd		811946	1					
ANR	812188	ArgumentList	& reply		811946	1					
ANR	812189	Argument	& reply		811946	0					
ANR	812190	UnaryOperationExpression	& reply		811946	0					
ANR	812191	UnaryOperator	&		811946	0					
ANR	812192	Identifier	reply		811946	1					
ANR	812193	CompoundStatement		45:2:1259:1301	811946	1					
ANR	812194	IdentifierDeclStatement	"MyString err_msg = ""No starter found for "" ;"	2138:2:58659:58701	811946	0	True				
ANR	812195	IdentifierDecl	"err_msg = ""No starter found for """		811946	0					
ANR	812196	IdentifierDeclType	MyString		811946	0					
ANR	812197	Identifier	err_msg		811946	1					
ANR	812198	AssignmentExpression	"err_msg = ""No starter found for """		811946	2		=			
ANR	812199	Identifier	err_msg		811946	0					
ANR	812200	PrimaryExpression	"""No starter found for """		811946	1					
ANR	812201	ExpressionStatement	err_msg += ATTR_GLOBAL_JOB_ID	2139:2:58705:58734	811946	1	True				
ANR	812202	AssignmentExpression	err_msg += ATTR_GLOBAL_JOB_ID		811946	0		+=			
ANR	812203	Identifier	err_msg		811946	0					
ANR	812204	Identifier	ATTR_GLOBAL_JOB_ID		811946	1					
ANR	812205	ExpressionStatement	"err_msg += "" ("""	2140:2:58738:58753	811946	2	True				
ANR	812206	AssignmentExpression	"err_msg += "" ("""		811946	0		+=			
ANR	812207	Identifier	err_msg		811946	0					
ANR	812208	PrimaryExpression	""" ("""		811946	1					
ANR	812209	ExpressionStatement	err_msg += global_job_id	2141:2:58757:58781	811946	3	True				
ANR	812210	AssignmentExpression	err_msg += global_job_id		811946	0		+=			
ANR	812211	Identifier	err_msg		811946	0					
ANR	812212	Identifier	global_job_id		811946	1					
ANR	812213	ExpressionStatement	"err_msg += "")"""	2142:2:58785:58799	811946	4	True				
ANR	812214	AssignmentExpression	"err_msg += "")"""		811946	0		+=			
ANR	812215	Identifier	err_msg		811946	0					
ANR	812216	PrimaryExpression	""")"""		811946	1					
ANR	812217	ExpressionStatement	"sendErrorReply ( s , cmd_str , CA_FAILURE , err_msg . Value ( ) )"	2143:2:58803:58860	811946	5	True				
ANR	812218	CallExpression	"sendErrorReply ( s , cmd_str , CA_FAILURE , err_msg . Value ( ) )"		811946	0					
ANR	812219	Callee	sendErrorReply		811946	0					
ANR	812220	Identifier	sendErrorReply		811946	0					
ANR	812221	ArgumentList	s		811946	1					
ANR	812222	Argument	s		811946	0					
ANR	812223	Identifier	s		811946	0					
ANR	812224	Argument	cmd_str		811946	1					
ANR	812225	Identifier	cmd_str		811946	0					
ANR	812226	Argument	CA_FAILURE		811946	2					
ANR	812227	Identifier	CA_FAILURE		811946	0					
ANR	812228	Argument	err_msg . Value ( )		811946	3					
ANR	812229	CallExpression	err_msg . Value ( )		811946	0					
ANR	812230	Callee	err_msg . Value		811946	0					
ANR	812231	MemberAccess	err_msg . Value		811946	0					
ANR	812232	Identifier	err_msg		811946	0					
ANR	812233	Identifier	Value		811946	1					
ANR	812234	ArgumentList			811946	1					
ANR	812235	ExpressionStatement	rval = FALSE	2144:2:58864:58876	811946	6	True				
ANR	812236	AssignmentExpression	rval = FALSE		811946	0		=			
ANR	812237	Identifier	rval		811946	0					
ANR	812238	Identifier	FALSE		811946	1					
ANR	812239	GotoStatement	goto cleanup ;	2145:2:58880:58892	811946	7	True				
ANR	812240	Identifier	cleanup		811946	0					
ANR	812241	IfStatement	if ( schedd_addr )		811946	15					
ANR	812242	Condition	schedd_addr	2149:6:58960:58970	811946	0	True				
ANR	812243	Identifier	schedd_addr		811946	0					
ANR	812244	CompoundStatement		57:2:1578:1610	811946	1					
ANR	812245	IdentifierDeclStatement	Client * client = claim -> client ( ) ;	2150:2:58978:59010	811946	0	True				
ANR	812246	IdentifierDecl	* client = claim -> client ( )		811946	0					
ANR	812247	IdentifierDeclType	Client *		811946	0					
ANR	812248	Identifier	client		811946	1					
ANR	812249	AssignmentExpression	* client = claim -> client ( )		811946	2		=			
ANR	812250	Identifier	client		811946	0					
ANR	812251	CallExpression	claim -> client ( )		811946	1					
ANR	812252	Callee	claim -> client		811946	0					
ANR	812253	PtrMemberAccess	claim -> client		811946	0					
ANR	812254	Identifier	claim		811946	0					
ANR	812255	Identifier	client		811946	1					
ANR	812256	ArgumentList			811946	1					
ANR	812257	IfStatement	if ( client )		811946	1					
ANR	812258	Condition	client	2151:7:59019:59024	811946	0	True				
ANR	812259	Identifier	client		811946	0					
ANR	812260	CompoundStatement		58:16:1628:1628	811946	1					
ANR	812261	ExpressionStatement	client -> setaddr ( schedd_addr )	2152:3:59033:59061	811946	0	True				
ANR	812262	CallExpression	client -> setaddr ( schedd_addr )		811946	0					
ANR	812263	Callee	client -> setaddr		811946	0					
ANR	812264	PtrMemberAccess	client -> setaddr		811946	0					
ANR	812265	Identifier	client		811946	0					
ANR	812266	Identifier	setaddr		811946	1					
ANR	812267	ArgumentList	schedd_addr		811946	1					
ANR	812268	Argument	schedd_addr		811946	0					
ANR	812269	Identifier	schedd_addr		811946	0					
ANR	812270	ExpressionStatement	"reply . Assign ( ATTR_RESULT , getCAResultString ( CA_SUCCESS ) )"	2158:1:59154:59214	811946	16	True				
ANR	812271	CallExpression	"reply . Assign ( ATTR_RESULT , getCAResultString ( CA_SUCCESS ) )"		811946	0					
ANR	812272	Callee	reply . Assign		811946	0					
ANR	812273	MemberAccess	reply . Assign		811946	0					
ANR	812274	Identifier	reply		811946	0					
ANR	812275	Identifier	Assign		811946	1					
ANR	812276	ArgumentList	ATTR_RESULT		811946	1					
ANR	812277	Argument	ATTR_RESULT		811946	0					
ANR	812278	Identifier	ATTR_RESULT		811946	0					
ANR	812279	Argument	getCAResultString ( CA_SUCCESS )		811946	1					
ANR	812280	CallExpression	getCAResultString ( CA_SUCCESS )		811946	0					
ANR	812281	Callee	getCAResultString		811946	0					
ANR	812282	Identifier	getCAResultString		811946	0					
ANR	812283	ArgumentList	CA_SUCCESS		811946	1					
ANR	812284	Argument	CA_SUCCESS		811946	0					
ANR	812285	Identifier	CA_SUCCESS		811946	0					
ANR	812286	ExpressionStatement	"rval = sendCAReply ( s , cmd_str , & reply )"	2160:1:59218:59258	811946	17	True				
ANR	812287	AssignmentExpression	"rval = sendCAReply ( s , cmd_str , & reply )"		811946	0		=			
ANR	812288	Identifier	rval		811946	0					
ANR	812289	CallExpression	"sendCAReply ( s , cmd_str , & reply )"		811946	1					
ANR	812290	Callee	sendCAReply		811946	0					
ANR	812291	Identifier	sendCAReply		811946	0					
ANR	812292	ArgumentList	s		811946	1					
ANR	812293	Argument	s		811946	0					
ANR	812294	Identifier	s		811946	0					
ANR	812295	Argument	cmd_str		811946	1					
ANR	812296	Identifier	cmd_str		811946	0					
ANR	812297	Argument	& reply		811946	2					
ANR	812298	UnaryOperationExpression	& reply		811946	0					
ANR	812299	UnaryOperator	&		811946	0					
ANR	812300	Identifier	reply		811946	1					
ANR	812301	IfStatement	if ( ! rval )		811946	18					
ANR	812302	Condition	! rval	2161:5:59265:59270	811946	0	True				
ANR	812303	UnaryOperationExpression	! rval		811946	0					
ANR	812304	UnaryOperator	!		811946	0					
ANR	812305	Identifier	rval		811946	1					
ANR	812306	CompoundStatement		68:14:1874:1874	811946	1					
ANR	812307	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to reply to request\\n"" )"	2162:2:59278:59329	811946	0	True				
ANR	812308	CallExpression	"dprintf ( D_ALWAYS , ""Failed to reply to request\\n"" )"		811946	0					
ANR	812309	Callee	dprintf		811946	0					
ANR	812310	Identifier	dprintf		811946	0					
ANR	812311	ArgumentList	D_ALWAYS		811946	1					
ANR	812312	Argument	D_ALWAYS		811946	0					
ANR	812313	Identifier	D_ALWAYS		811946	0					
ANR	812314	Argument	"""Failed to reply to request\\n"""		811946	1					
ANR	812315	PrimaryExpression	"""Failed to reply to request\\n"""		811946	0					
ANR	812316	Label	cleanup :	2165:0:59335:59342	811946	19	True				
ANR	812317	Identifier	cleanup		811946	0					
ANR	812318	IfStatement	if ( global_job_id )		811946	20					
ANR	812319	Condition	global_job_id	2166:6:59350:59362	811946	0	True				
ANR	812320	Identifier	global_job_id		811946	0					
ANR	812321	ExpressionStatement	free ( global_job_id )	2166:22:59366:59387	811946	1	True				
ANR	812322	CallExpression	free ( global_job_id )		811946	0					
ANR	812323	Callee	free		811946	0					
ANR	812324	Identifier	free		811946	0					
ANR	812325	ArgumentList	global_job_id		811946	1					
ANR	812326	Argument	global_job_id		811946	0					
ANR	812327	Identifier	global_job_id		811946	0					
ANR	812328	IfStatement	if ( claimid )		811946	21					
ANR	812329	Condition	claimid	2167:6:59395:59401	811946	0	True				
ANR	812330	Identifier	claimid		811946	0					
ANR	812331	ExpressionStatement	free ( claimid )	2167:16:59405:59420	811946	1	True				
ANR	812332	CallExpression	free ( claimid )		811946	0					
ANR	812333	Callee	free		811946	0					
ANR	812334	Identifier	free		811946	0					
ANR	812335	ArgumentList	claimid		811946	1					
ANR	812336	Argument	claimid		811946	0					
ANR	812337	Identifier	claimid		811946	0					
ANR	812338	IfStatement	if ( schedd_addr )		811946	22					
ANR	812339	Condition	schedd_addr	2168:6:59428:59438	811946	0	True				
ANR	812340	Identifier	schedd_addr		811946	0					
ANR	812341	ExpressionStatement	free ( schedd_addr )	2168:20:59442:59461	811946	1	True				
ANR	812342	CallExpression	free ( schedd_addr )		811946	0					
ANR	812343	Callee	free		811946	0					
ANR	812344	Identifier	free		811946	0					
ANR	812345	ArgumentList	schedd_addr		811946	1					
ANR	812346	Argument	schedd_addr		811946	0					
ANR	812347	Identifier	schedd_addr		811946	0					
ANR	812348	ReturnStatement	return rval ;	2170:1:59465:59476	811946	23	True				
ANR	812349	Identifier	rval		811946	0					
ANR	812350	ReturnType	int		811946	1					
ANR	812351	Identifier	caLocateStarter		811946	2					
ANR	812352	ParameterList	"Stream * s , char * cmd_str , ClassAd * req_ad"		811946	3					
ANR	812353	Parameter	Stream * s	2093:17:57355:57363	811946	0	True				
ANR	812354	ParameterType	Stream *		811946	0					
ANR	812355	Identifier	s		811946	1					
ANR	812356	Parameter	char * cmd_str	2093:28:57366:57378	811946	1	True				
ANR	812357	ParameterType	char *		811946	0					
ANR	812358	Identifier	cmd_str		811946	1					
ANR	812359	Parameter	ClassAd * req_ad	2093:43:57381:57395	811946	2	True				
ANR	812360	ParameterType	ClassAd *		811946	0					
ANR	812361	Identifier	req_ad		811946	1					
ANR	812362	CFGEntryNode	ENTRY		811946		True				
ANR	812363	CFGExitNode	EXIT		811946		True				
ANR	812364	Symbol	global_job_id		811946						
ANR	812365	Symbol	startd_sends_alives		811946						
ANR	812366	Symbol	* claim		811946						
ANR	812367	Symbol	& schedd_addr		811946						
ANR	812368	Symbol	claimid		811946						
ANR	812369	Symbol	ATTR_CLAIM_ID		811946						
ANR	812370	Symbol	& reply		811946						
ANR	812371	Symbol	claim -> client		811946						
ANR	812372	Symbol	sendCAReply		811946						
ANR	812373	Symbol	claim		811946						
ANR	812374	Symbol	client		811946						
ANR	812375	Symbol	rval		811946						
ANR	812376	Symbol	cmd_str		811946						
ANR	812377	Symbol	reply		811946						
ANR	812378	Symbol	strcasecmp		811946						
ANR	812379	Symbol	schedd_addr		811946						
ANR	812380	Symbol	NULL		811946						
ANR	812381	Symbol	req_ad		811946						
ANR	812382	Symbol	* resmgr		811946						
ANR	812383	Symbol	D_ALWAYS		811946						
ANR	812384	Symbol	TRUE		811946						
ANR	812385	Symbol	startd_sends_alives . c_str		811946						
ANR	812386	Symbol	CA_SUCCESS		811946						
ANR	812387	Symbol	err_msg . Value		811946						
ANR	812388	Symbol	resmgr -> getClaimByGlobalJobIdAndId		811946						
ANR	812389	Symbol	claim -> publishStarterAd		811946						
ANR	812390	Symbol	ATTR_SCHEDD_IP_ADDR		811946						
ANR	812391	Symbol	getCAResultString		811946						
ANR	812392	Symbol	s		811946						
ANR	812393	Symbol	ATTR_GLOBAL_JOB_ID		811946						
ANR	812394	Symbol	resmgr		811946						
ANR	812395	Symbol	err_msg		811946						
ANR	812396	Symbol	& claimid		811946						
ANR	812397	Symbol	CA_FAILURE		811946						
ANR	812398	Symbol	FALSE		811946						
ANR	812399	Symbol	& global_job_id		811946						
ANR	812400	Symbol	ATTR_RESULT		811946						
ANR	812401	DeclStmt									
ANR	812402	Decl							int	int	rval
ANR	812403	DeclStmt									
ANR	812404	Decl							ClassAd	ClassAd	ad
ANR	812405	DeclStmt									
ANR	812406	Decl							ReliSock	ReliSock *	rsock
ANR	812407	DeclStmt									
ANR	812408	Decl							int	int	cmd
ANR	812409	DeclStmt									
ANR	812410	Decl							char	char *	cmd_str
ANR	812411	DeclStmt									
ANR	812412	Decl							char	char *	claim_id
ANR	812413	DeclStmt									
ANR	812414	Decl							Claim	Claim *	claim
ANR	812415	DeclStmt									
ANR	812416	Decl							MyString	MyString	err_msg
ANR	812417	DeclStmt									
ANR	812418	Decl							const char	const char *	owner
ANR	812419	DeclStmt									
ANR	812420	Decl							MyString	MyString	err_msg
ANR	812421	DeclStmt									
ANR	812422	Decl							char	char *	tmp
ANR	812423	DeclStmt									
ANR	812424	Decl							MyString	MyString	err_msg
ANR	812425	DeclStmt									
ANR	812426	Decl							MyString	MyString	line
ANR	812427	DeclStmt									
ANR	812428	Decl							CODMgr	CODMgr *	cod_mgr
ANR	812429	DeclStmt									
ANR	812430	Decl							ClassAd	ClassAd	ad
ANR	812431	DeclStmt									
ANR	812432	Decl							int	int	how_fast
ANR	812433	DeclStmt									
ANR	812434	Decl							bool	bool	resume_on_completion
ANR	812435	DeclStmt									
ANR	812436	Decl							ExprTree	ExprTree *	check_expr
ANR	812437	DeclStmt									
ANR	812438	Decl							std :: string	std :: string	new_request_id
ANR	812439	DeclStmt									
ANR	812440	Decl							std :: string	std :: string	error_msg
ANR	812441	DeclStmt									
ANR	812442	Decl							int	int	error_code
ANR	812443	DeclStmt									
ANR	812444	Decl							bool	bool	ok
ANR	812445	DeclStmt									
ANR	812446	Decl							ClassAd	ClassAd	response_ad
ANR	812447	DeclStmt									
ANR	812448	Decl							ClassAd	ClassAd	ad
ANR	812449	DeclStmt									
ANR	812450	Decl							std :: string	std :: string	request_id
ANR	812451	DeclStmt									
ANR	812452	Decl							std :: string	std :: string	error_msg
ANR	812453	DeclStmt									
ANR	812454	Decl							int	int	error_code
ANR	812455	DeclStmt									
ANR	812456	Decl							bool	bool	ok
ANR	812457	DeclStmt									
ANR	812458	Decl							ClassAd	ClassAd	response_ad
