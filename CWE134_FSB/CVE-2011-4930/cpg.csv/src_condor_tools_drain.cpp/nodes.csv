command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4220595	File	data/converged/CVE-2011-4930_htcondor/src_condor_tools_drain.cpp								
ANR	4220596	DeclStmt									
ANR	4220597	Decl							int	int	cmd
ANR	4220598	DeclStmt									
ANR	4220599	Decl							char	char *	pool
ANR	4220600	DeclStmt									
ANR	4220601	Decl							char	char *	target
ANR	4220602	DeclStmt									
ANR	4220603	Decl							char	char *	my_name
ANR	4220604	DeclStmt									
ANR	4220605	Decl							int	int	how_fast
ANR	4220606	DeclStmt									
ANR	4220607	Decl							bool	bool	resume_on_completion
ANR	4220608	DeclStmt									
ANR	4220609	Decl							char	char *	cancel_request_id
ANR	4220610	DeclStmt									
ANR	4220611	Decl							char	char *	draining_check_expr
ANR	4220612	DeclStmt									
ANR	4220613	Decl							void	void ( const char * )	usage
ANR	4220614	DeclStmt									
ANR	4220615	Decl							void	void ( void )	version
ANR	4220616	DeclStmt									
ANR	4220617	Decl							void	void ( const char * opt )	invalid
ANR	4220618	DeclStmt									
ANR	4220619	Decl							void	void ( const char * opt )	ambiguous
ANR	4220620	DeclStmt									
ANR	4220621	Decl							void	void ( const char * opt )	another
ANR	4220622	DeclStmt									
ANR	4220623	Decl							void	"void ( int argc , char * argv [ ] )"	parseArgv
ANR	4220624	Function	main	67:0:2004:2845							
ANR	4220625	FunctionDef	"main (int argc , char * argv [ ])"		4220624	0					
ANR	4220626	CompoundStatement		69:0:2039:2845	4220624	0					
ANR	4220627	ExpressionStatement	"myDistro -> Init ( argc , argv )"	71:1:2043:2071	4220624	0	True				
ANR	4220628	CallExpression	"myDistro -> Init ( argc , argv )"		4220624	0					
ANR	4220629	Callee	myDistro -> Init		4220624	0					
ANR	4220630	PtrMemberAccess	myDistro -> Init		4220624	0					
ANR	4220631	Identifier	myDistro		4220624	0					
ANR	4220632	Identifier	Init		4220624	1					
ANR	4220633	ArgumentList	argc		4220624	1					
ANR	4220634	Argument	argc		4220624	0					
ANR	4220635	Identifier	argc		4220624	0					
ANR	4220636	Argument	argv		4220624	1					
ANR	4220637	Identifier	argv		4220624	0					
ANR	4220638	ExpressionStatement	config ( )	73:1:2075:2083	4220624	1	True				
ANR	4220639	CallExpression	config ( )		4220624	0					
ANR	4220640	Callee	config		4220624	0					
ANR	4220641	Identifier	config		4220624	0					
ANR	4220642	ArgumentList			4220624	1					
ANR	4220643	ExpressionStatement	"parseArgv ( argc , argv )"	75:1:2087:2110	4220624	2	True				
ANR	4220644	CallExpression	"parseArgv ( argc , argv )"		4220624	0					
ANR	4220645	Callee	parseArgv		4220624	0					
ANR	4220646	Identifier	parseArgv		4220624	0					
ANR	4220647	ArgumentList	argc		4220624	1					
ANR	4220648	Argument	argc		4220624	0					
ANR	4220649	Identifier	argc		4220624	0					
ANR	4220650	Argument	argv		4220624	1					
ANR	4220651	Identifier	argv		4220624	0					
ANR	4220652	IdentifierDeclStatement	"DCStartd startd ( target , pool ) ;"	77:1:2114:2145	4220624	3	True				
ANR	4220653	IdentifierDecl	"startd ( target , pool )"		4220624	0					
ANR	4220654	IdentifierDeclType	DCStartd		4220624	0					
ANR	4220655	Identifier	startd		4220624	1					
ANR	4220656	Expression	"target , pool"		4220624	2					
ANR	4220657	Identifier	target		4220624	0					
ANR	4220658	Identifier	pool		4220624	1					
ANR	4220659	IfStatement	if ( ! startd . locate ( ) )		4220624	4					
ANR	4220660	Condition	! startd . locate ( )	79:5:2153:2169	4220624	0	True				
ANR	4220661	UnaryOperationExpression	! startd . locate ( )		4220624	0					
ANR	4220662	UnaryOperator	!		4220624	0					
ANR	4220663	CallExpression	startd . locate ( )		4220624	1					
ANR	4220664	Callee	startd . locate		4220624	0					
ANR	4220665	MemberAccess	startd . locate		4220624	0					
ANR	4220666	Identifier	startd		4220624	0					
ANR	4220667	Identifier	locate		4220624	1					
ANR	4220668	ArgumentList			4220624	1					
ANR	4220669	CompoundStatement		11:25:133:133	4220624	1					
ANR	4220670	ExpressionStatement	"fprintf ( stderr , ""ERROR: %s\\n"" , startd . error ( ) )"	80:2:2177:2225	4220624	0	True				
ANR	4220671	CallExpression	"fprintf ( stderr , ""ERROR: %s\\n"" , startd . error ( ) )"		4220624	0					
ANR	4220672	Callee	fprintf		4220624	0					
ANR	4220673	Identifier	fprintf		4220624	0					
ANR	4220674	ArgumentList	stderr		4220624	1					
ANR	4220675	Argument	stderr		4220624	0					
ANR	4220676	Identifier	stderr		4220624	0					
ANR	4220677	Argument	"""ERROR: %s\\n"""		4220624	1					
ANR	4220678	PrimaryExpression	"""ERROR: %s\\n"""		4220624	0					
ANR	4220679	Argument	startd . error ( )		4220624	2					
ANR	4220680	CallExpression	startd . error ( )		4220624	0					
ANR	4220681	Callee	startd . error		4220624	0					
ANR	4220682	MemberAccess	startd . error		4220624	0					
ANR	4220683	Identifier	startd		4220624	0					
ANR	4220684	Identifier	error		4220624	1					
ANR	4220685	ArgumentList			4220624	1					
ANR	4220686	ExpressionStatement	exit ( 1 )	81:2:2229:2238	4220624	1	True				
ANR	4220687	CallExpression	exit ( 1 )		4220624	0					
ANR	4220688	Callee	exit		4220624	0					
ANR	4220689	Identifier	exit		4220624	0					
ANR	4220690	ArgumentList	1		4220624	1					
ANR	4220691	Argument	1		4220624	0					
ANR	4220692	PrimaryExpression	1		4220624	0					
ANR	4220693	IdentifierDeclStatement	bool rval = false ;	84:1:2245:2262	4220624	5	True				
ANR	4220694	IdentifierDecl	rval = false		4220624	0					
ANR	4220695	IdentifierDeclType	bool		4220624	0					
ANR	4220696	Identifier	rval		4220624	1					
ANR	4220697	AssignmentExpression	rval = false		4220624	2		=			
ANR	4220698	Identifier	false		4220624	0					
ANR	4220699	Identifier	false		4220624	1					
ANR	4220700	IfStatement	if ( cmd == DRAIN_JOBS )		4220624	6					
ANR	4220701	Condition	cmd == DRAIN_JOBS	86:5:2270:2286	4220624	0	True				
ANR	4220702	EqualityExpression	cmd == DRAIN_JOBS		4220624	0		==			
ANR	4220703	Identifier	cmd		4220624	0					
ANR	4220704	Identifier	DRAIN_JOBS		4220624	1					
ANR	4220705	CompoundStatement		19:2:254:276	4220624	1					
ANR	4220706	IdentifierDeclStatement	std :: string request_id ;	87:2:2294:2316	4220624	0	True				
ANR	4220707	IdentifierDecl	request_id		4220624	0					
ANR	4220708	IdentifierDeclType	std :: string		4220624	0					
ANR	4220709	Identifier	request_id		4220624	1					
ANR	4220710	ExpressionStatement	"rval = startd . drainJobs ( how_fast , resume_on_completion , draining_check_expr , request_id )"	88:2:2320:2410	4220624	1	True				
ANR	4220711	AssignmentExpression	"rval = startd . drainJobs ( how_fast , resume_on_completion , draining_check_expr , request_id )"		4220624	0		=			
ANR	4220712	Identifier	rval		4220624	0					
ANR	4220713	CallExpression	"startd . drainJobs ( how_fast , resume_on_completion , draining_check_expr , request_id )"		4220624	1					
ANR	4220714	Callee	startd . drainJobs		4220624	0					
ANR	4220715	MemberAccess	startd . drainJobs		4220624	0					
ANR	4220716	Identifier	startd		4220624	0					
ANR	4220717	Identifier	drainJobs		4220624	1					
ANR	4220718	ArgumentList	how_fast		4220624	1					
ANR	4220719	Argument	how_fast		4220624	0					
ANR	4220720	Identifier	how_fast		4220624	0					
ANR	4220721	Argument	resume_on_completion		4220624	1					
ANR	4220722	Identifier	resume_on_completion		4220624	0					
ANR	4220723	Argument	draining_check_expr		4220624	2					
ANR	4220724	Identifier	draining_check_expr		4220624	0					
ANR	4220725	Argument	request_id		4220624	3					
ANR	4220726	Identifier	request_id		4220624	0					
ANR	4220727	IfStatement	if ( rval )		4220624	2					
ANR	4220728	Condition	rval	89:6:2418:2421	4220624	0	True				
ANR	4220729	Identifier	rval		4220624	0					
ANR	4220730	CompoundStatement		21:13:385:385	4220624	1					
ANR	4220731	ExpressionStatement	"printf ( ""Sent request to drain %s\\n"" , startd . name ( ) )"	90:3:2430:2480	4220624	0	True				
ANR	4220732	CallExpression	"printf ( ""Sent request to drain %s\\n"" , startd . name ( ) )"		4220624	0					
ANR	4220733	Callee	printf		4220624	0					
ANR	4220734	Identifier	printf		4220624	0					
ANR	4220735	ArgumentList	"""Sent request to drain %s\\n"""		4220624	1					
ANR	4220736	Argument	"""Sent request to drain %s\\n"""		4220624	0					
ANR	4220737	PrimaryExpression	"""Sent request to drain %s\\n"""		4220624	0					
ANR	4220738	Argument	startd . name ( )		4220624	1					
ANR	4220739	CallExpression	startd . name ( )		4220624	0					
ANR	4220740	Callee	startd . name		4220624	0					
ANR	4220741	MemberAccess	startd . name		4220624	0					
ANR	4220742	Identifier	startd		4220624	0					
ANR	4220743	Identifier	name		4220624	1					
ANR	4220744	ArgumentList			4220624	1					
ANR	4220745	ElseStatement	else		4220624	0					
ANR	4220746	IfStatement	if ( cmd == CANCEL_DRAIN_JOBS )		4220624	0					
ANR	4220747	Condition	cmd == CANCEL_DRAIN_JOBS	93:10:2499:2522	4220624	0	True				
ANR	4220748	EqualityExpression	cmd == CANCEL_DRAIN_JOBS		4220624	0		==			
ANR	4220749	Identifier	cmd		4220624	0					
ANR	4220750	Identifier	CANCEL_DRAIN_JOBS		4220624	1					
ANR	4220751	CompoundStatement		25:37:486:486	4220624	1					
ANR	4220752	ExpressionStatement	rval = startd . cancelDrainJobs ( cancel_request_id )	94:2:2530:2580	4220624	0	True				
ANR	4220753	AssignmentExpression	rval = startd . cancelDrainJobs ( cancel_request_id )		4220624	0		=			
ANR	4220754	Identifier	rval		4220624	0					
ANR	4220755	CallExpression	startd . cancelDrainJobs ( cancel_request_id )		4220624	1					
ANR	4220756	Callee	startd . cancelDrainJobs		4220624	0					
ANR	4220757	MemberAccess	startd . cancelDrainJobs		4220624	0					
ANR	4220758	Identifier	startd		4220624	0					
ANR	4220759	Identifier	cancelDrainJobs		4220624	1					
ANR	4220760	ArgumentList	cancel_request_id		4220624	1					
ANR	4220761	Argument	cancel_request_id		4220624	0					
ANR	4220762	Identifier	cancel_request_id		4220624	0					
ANR	4220763	IfStatement	if ( rval )		4220624	1					
ANR	4220764	Condition	rval	95:6:2588:2591	4220624	0	True				
ANR	4220765	Identifier	rval		4220624	0					
ANR	4220766	CompoundStatement		27:13:555:555	4220624	1					
ANR	4220767	ExpressionStatement	"printf ( ""Sent request to cancel draining on %s\\n"" , startd . name ( ) )"	96:3:2600:2663	4220624	0	True				
ANR	4220768	CallExpression	"printf ( ""Sent request to cancel draining on %s\\n"" , startd . name ( ) )"		4220624	0					
ANR	4220769	Callee	printf		4220624	0					
ANR	4220770	Identifier	printf		4220624	0					
ANR	4220771	ArgumentList	"""Sent request to cancel draining on %s\\n"""		4220624	1					
ANR	4220772	Argument	"""Sent request to cancel draining on %s\\n"""		4220624	0					
ANR	4220773	PrimaryExpression	"""Sent request to cancel draining on %s\\n"""		4220624	0					
ANR	4220774	Argument	startd . name ( )		4220624	1					
ANR	4220775	CallExpression	startd . name ( )		4220624	0					
ANR	4220776	Callee	startd . name		4220624	0					
ANR	4220777	MemberAccess	startd . name		4220624	0					
ANR	4220778	Identifier	startd		4220624	0					
ANR	4220779	Identifier	name		4220624	1					
ANR	4220780	ArgumentList			4220624	1					
ANR	4220781	IfStatement	if ( ! rval )		4220624	7					
ANR	4220782	Condition	! rval	100:5:2678:2683	4220624	0	True				
ANR	4220783	UnaryOperationExpression	! rval		4220624	0					
ANR	4220784	UnaryOperator	!		4220624	0					
ANR	4220785	Identifier	rval		4220624	1					
ANR	4220786	CompoundStatement		32:14:647:647	4220624	1					
ANR	4220787	ExpressionStatement	"fprintf ( stderr , ""Attempt to send %s to startd %s failed\\n%s\\n"" , getCommandString ( cmd ) , startd . addr ( ) , startd . error ( ) )"	101:2:2691:2815	4220624	0	True				
ANR	4220788	CallExpression	"fprintf ( stderr , ""Attempt to send %s to startd %s failed\\n%s\\n"" , getCommandString ( cmd ) , startd . addr ( ) , startd . error ( ) )"		4220624	0					
ANR	4220789	Callee	fprintf		4220624	0					
ANR	4220790	Identifier	fprintf		4220624	0					
ANR	4220791	ArgumentList	stderr		4220624	1					
ANR	4220792	Argument	stderr		4220624	0					
ANR	4220793	Identifier	stderr		4220624	0					
ANR	4220794	Argument	"""Attempt to send %s to startd %s failed\\n%s\\n"""		4220624	1					
ANR	4220795	PrimaryExpression	"""Attempt to send %s to startd %s failed\\n%s\\n"""		4220624	0					
ANR	4220796	Argument	getCommandString ( cmd )		4220624	2					
ANR	4220797	CallExpression	getCommandString ( cmd )		4220624	0					
ANR	4220798	Callee	getCommandString		4220624	0					
ANR	4220799	Identifier	getCommandString		4220624	0					
ANR	4220800	ArgumentList	cmd		4220624	1					
ANR	4220801	Argument	cmd		4220624	0					
ANR	4220802	Identifier	cmd		4220624	0					
ANR	4220803	Argument	startd . addr ( )		4220624	3					
ANR	4220804	CallExpression	startd . addr ( )		4220624	0					
ANR	4220805	Callee	startd . addr		4220624	0					
ANR	4220806	MemberAccess	startd . addr		4220624	0					
ANR	4220807	Identifier	startd		4220624	0					
ANR	4220808	Identifier	addr		4220624	1					
ANR	4220809	ArgumentList			4220624	1					
ANR	4220810	Argument	startd . error ( )		4220624	4					
ANR	4220811	CallExpression	startd . error ( )		4220624	0					
ANR	4220812	Callee	startd . error		4220624	0					
ANR	4220813	MemberAccess	startd . error		4220624	0					
ANR	4220814	Identifier	startd		4220624	0					
ANR	4220815	Identifier	error		4220624	1					
ANR	4220816	ArgumentList			4220624	1					
ANR	4220817	ReturnStatement	return 1 ;	103:2:2820:2828	4220624	1	True				
ANR	4220818	PrimaryExpression	1		4220624	0					
ANR	4220819	ReturnStatement	return 0 ;	106:1:2835:2843	4220624	8	True				
ANR	4220820	PrimaryExpression	0		4220624	0					
ANR	4220821	ReturnType	int		4220624	1					
ANR	4220822	Identifier	main		4220624	2					
ANR	4220823	ParameterList	"int argc , char * argv [ ]"		4220624	3					
ANR	4220824	Parameter	int argc	68:6:2014:2021	4220624	0	True				
ANR	4220825	ParameterType	int		4220624	0					
ANR	4220826	Identifier	argc		4220624	1					
ANR	4220827	Parameter	char * argv [ ]	68:16:2024:2035	4220624	1	True				
ANR	4220828	ParameterType	char * [ ]		4220624	0					
ANR	4220829	Identifier	argv		4220624	1					
ANR	4220830	CFGEntryNode	ENTRY		4220624		True				
ANR	4220831	CFGExitNode	EXIT		4220624		True				
ANR	4220832	Symbol	argc		4220624						
ANR	4220833	Symbol	startd . locate		4220624						
ANR	4220834	Symbol	how_fast		4220624						
ANR	4220835	Symbol	startd . addr		4220624						
ANR	4220836	Symbol	DRAIN_JOBS		4220624						
ANR	4220837	Symbol	false		4220624						
ANR	4220838	Symbol	cancel_request_id		4220624						
ANR	4220839	Symbol	CANCEL_DRAIN_JOBS		4220624						
ANR	4220840	Symbol	stderr		4220624						
ANR	4220841	Symbol	argv		4220624						
ANR	4220842	Symbol	startd		4220624						
ANR	4220843	Symbol	draining_check_expr		4220624						
ANR	4220844	Symbol	startd . name		4220624						
ANR	4220845	Symbol	myDistro		4220624						
ANR	4220846	Symbol	startd . error		4220624						
ANR	4220847	Symbol	getCommandString		4220624						
ANR	4220848	Symbol	rval		4220624						
ANR	4220849	Symbol	resume_on_completion		4220624						
ANR	4220850	Symbol	startd . cancelDrainJobs		4220624						
ANR	4220851	Symbol	cmd		4220624						
ANR	4220852	Symbol	request_id		4220624						
ANR	4220853	Symbol	startd . drainJobs		4220624						
ANR	4220854	Function	version	120:0:3219:3306							
ANR	4220855	FunctionDef	version ()		4220854	0					
ANR	4220856	CompoundStatement		122:0:3234:3306	4220854	0					
ANR	4220857	ExpressionStatement	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"	123:1:3237:3292	4220854	0	True				
ANR	4220858	CallExpression	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"		4220854	0					
ANR	4220859	Callee	printf		4220854	0					
ANR	4220860	Identifier	printf		4220854	0					
ANR	4220861	ArgumentList	"""%s\\n%s\\n"""		4220854	1					
ANR	4220862	Argument	"""%s\\n%s\\n"""		4220854	0					
ANR	4220863	PrimaryExpression	"""%s\\n%s\\n"""		4220854	0					
ANR	4220864	Argument	CondorVersion ( )		4220854	1					
ANR	4220865	CallExpression	CondorVersion ( )		4220854	0					
ANR	4220866	Callee	CondorVersion		4220854	0					
ANR	4220867	Identifier	CondorVersion		4220854	0					
ANR	4220868	ArgumentList			4220854	1					
ANR	4220869	Argument	CondorPlatform ( )		4220854	2					
ANR	4220870	CallExpression	CondorPlatform ( )		4220854	0					
ANR	4220871	Callee	CondorPlatform		4220854	0					
ANR	4220872	Identifier	CondorPlatform		4220854	0					
ANR	4220873	ArgumentList			4220854	1					
ANR	4220874	ExpressionStatement	exit ( 0 )	124:1:3295:3304	4220854	1	True				
ANR	4220875	CallExpression	exit ( 0 )		4220854	0					
ANR	4220876	Callee	exit		4220854	0					
ANR	4220877	Identifier	exit		4220854	0					
ANR	4220878	ArgumentList	0		4220854	1					
ANR	4220879	Argument	0		4220854	0					
ANR	4220880	PrimaryExpression	0		4220854	0					
ANR	4220881	ReturnType	void		4220854	1					
ANR	4220882	Identifier	version		4220854	2					
ANR	4220883	ParameterList			4220854	3					
ANR	4220884	CFGEntryNode	ENTRY		4220854		True				
ANR	4220885	CFGExitNode	EXIT		4220854		True				
ANR	4220886	Symbol	CondorVersion		4220854						
ANR	4220887	Symbol	CondorPlatform		4220854						
ANR	4220888	Function	invalid	127:0:3309:3421							
ANR	4220889	FunctionDef	invalid (const char * opt)		4220888	0					
ANR	4220890	CompoundStatement		129:0:3341:3421	4220888	0					
ANR	4220891	ExpressionStatement	"fprintf ( stderr , ""%s: '%s' is invalid\\n"" , my_name , opt )"	130:1:3344:3400	4220888	0	True				
ANR	4220892	CallExpression	"fprintf ( stderr , ""%s: '%s' is invalid\\n"" , my_name , opt )"		4220888	0					
ANR	4220893	Callee	fprintf		4220888	0					
ANR	4220894	Identifier	fprintf		4220888	0					
ANR	4220895	ArgumentList	stderr		4220888	1					
ANR	4220896	Argument	stderr		4220888	0					
ANR	4220897	Identifier	stderr		4220888	0					
ANR	4220898	Argument	"""%s: '%s' is invalid\\n"""		4220888	1					
ANR	4220899	PrimaryExpression	"""%s: '%s' is invalid\\n"""		4220888	0					
ANR	4220900	Argument	my_name		4220888	2					
ANR	4220901	Identifier	my_name		4220888	0					
ANR	4220902	Argument	opt		4220888	3					
ANR	4220903	Identifier	opt		4220888	0					
ANR	4220904	ExpressionStatement	usage ( my_name )	131:1:3403:3419	4220888	1	True				
ANR	4220905	CallExpression	usage ( my_name )		4220888	0					
ANR	4220906	Callee	usage		4220888	0					
ANR	4220907	Identifier	usage		4220888	0					
ANR	4220908	ArgumentList	my_name		4220888	1					
ANR	4220909	Argument	my_name		4220888	0					
ANR	4220910	Identifier	my_name		4220888	0					
ANR	4220911	ReturnType	void		4220888	1					
ANR	4220912	Identifier	invalid		4220888	2					
ANR	4220913	ParameterList	const char * opt		4220888	3					
ANR	4220914	Parameter	const char * opt	128:9:3323:3337	4220888	0	True				
ANR	4220915	ParameterType	const char *		4220888	0					
ANR	4220916	Identifier	opt		4220888	1					
ANR	4220917	CFGEntryNode	ENTRY		4220888		True				
ANR	4220918	CFGExitNode	EXIT		4220888		True				
ANR	4220919	Symbol	my_name		4220888						
ANR	4220920	Symbol	opt		4220888						
ANR	4220921	Symbol	stderr		4220888						
ANR	4220922	Function	ambiguous	135:0:3425:3542							
ANR	4220923	FunctionDef	ambiguous (const char * opt)		4220922	0					
ANR	4220924	CompoundStatement		137:0:3459:3542	4220922	0					
ANR	4220925	ExpressionStatement	"fprintf ( stderr , ""%s: '%s' is ambiguous\\n"" , my_name , opt )"	138:1:3462:3520	4220922	0	True				
ANR	4220926	CallExpression	"fprintf ( stderr , ""%s: '%s' is ambiguous\\n"" , my_name , opt )"		4220922	0					
ANR	4220927	Callee	fprintf		4220922	0					
ANR	4220928	Identifier	fprintf		4220922	0					
ANR	4220929	ArgumentList	stderr		4220922	1					
ANR	4220930	Argument	stderr		4220922	0					
ANR	4220931	Identifier	stderr		4220922	0					
ANR	4220932	Argument	"""%s: '%s' is ambiguous\\n"""		4220922	1					
ANR	4220933	PrimaryExpression	"""%s: '%s' is ambiguous\\n"""		4220922	0					
ANR	4220934	Argument	my_name		4220922	2					
ANR	4220935	Identifier	my_name		4220922	0					
ANR	4220936	Argument	opt		4220922	3					
ANR	4220937	Identifier	opt		4220922	0					
ANR	4220938	ExpressionStatement	usage ( my_name )	139:1:3524:3540	4220922	1	True				
ANR	4220939	CallExpression	usage ( my_name )		4220922	0					
ANR	4220940	Callee	usage		4220922	0					
ANR	4220941	Identifier	usage		4220922	0					
ANR	4220942	ArgumentList	my_name		4220922	1					
ANR	4220943	Argument	my_name		4220922	0					
ANR	4220944	Identifier	my_name		4220922	0					
ANR	4220945	ReturnType	void		4220922	1					
ANR	4220946	Identifier	ambiguous		4220922	2					
ANR	4220947	ParameterList	const char * opt		4220922	3					
ANR	4220948	Parameter	const char * opt	136:11:3441:3455	4220922	0	True				
ANR	4220949	ParameterType	const char *		4220922	0					
ANR	4220950	Identifier	opt		4220922	1					
ANR	4220951	CFGEntryNode	ENTRY		4220922		True				
ANR	4220952	CFGExitNode	EXIT		4220922		True				
ANR	4220953	Symbol	my_name		4220922						
ANR	4220954	Symbol	opt		4220922						
ANR	4220955	Symbol	stderr		4220922						
ANR	4220956	Function	another	143:0:3546:3678							
ANR	4220957	FunctionDef	another (const char * opt)		4220956	0					
ANR	4220958	CompoundStatement		145:0:3578:3678	4220956	0					
ANR	4220959	ExpressionStatement	"fprintf ( stderr , ""%s: '%s' requires another argument\\n"" , my_name , opt )"	146:1:3581:3656	4220956	0	True				
ANR	4220960	CallExpression	"fprintf ( stderr , ""%s: '%s' requires another argument\\n"" , my_name , opt )"		4220956	0					
ANR	4220961	Callee	fprintf		4220956	0					
ANR	4220962	Identifier	fprintf		4220956	0					
ANR	4220963	ArgumentList	stderr		4220956	1					
ANR	4220964	Argument	stderr		4220956	0					
ANR	4220965	Identifier	stderr		4220956	0					
ANR	4220966	Argument	"""%s: '%s' requires another argument\\n"""		4220956	1					
ANR	4220967	PrimaryExpression	"""%s: '%s' requires another argument\\n"""		4220956	0					
ANR	4220968	Argument	my_name		4220956	2					
ANR	4220969	Identifier	my_name		4220956	0					
ANR	4220970	Argument	opt		4220956	3					
ANR	4220971	Identifier	opt		4220956	0					
ANR	4220972	ExpressionStatement	usage ( my_name )	148:1:3660:3676	4220956	1	True				
ANR	4220973	CallExpression	usage ( my_name )		4220956	0					
ANR	4220974	Callee	usage		4220956	0					
ANR	4220975	Identifier	usage		4220956	0					
ANR	4220976	ArgumentList	my_name		4220956	1					
ANR	4220977	Argument	my_name		4220956	0					
ANR	4220978	Identifier	my_name		4220956	0					
ANR	4220979	ReturnType	void		4220956	1					
ANR	4220980	Identifier	another		4220956	2					
ANR	4220981	ParameterList	const char * opt		4220956	3					
ANR	4220982	Parameter	const char * opt	144:9:3560:3574	4220956	0	True				
ANR	4220983	ParameterType	const char *		4220956	0					
ANR	4220984	Identifier	opt		4220956	1					
ANR	4220985	CFGEntryNode	ENTRY		4220956		True				
ANR	4220986	CFGExitNode	EXIT		4220956		True				
ANR	4220987	Symbol	my_name		4220956						
ANR	4220988	Symbol	opt		4220956						
ANR	4220989	Symbol	stderr		4220956						
ANR	4220990	Function	parseArgv	151:0:3681:5366							
ANR	4220991	FunctionDef	"parseArgv (int argc , char * argv [ ])"		4220990	0					
ANR	4220992	CompoundStatement		153:0:3722:5366	4220990	0					
ANR	4220993	IdentifierDeclStatement	int i ;	154:1:3725:3730	4220990	0	True				
ANR	4220994	IdentifierDecl	i		4220990	0					
ANR	4220995	IdentifierDeclType	int		4220990	0					
ANR	4220996	Identifier	i		4220990	1					
ANR	4220997	ExpressionStatement	my_name = strdup ( argv [ 0 ] )	156:1:3734:3759	4220990	1	True				
ANR	4220998	AssignmentExpression	my_name = strdup ( argv [ 0 ] )		4220990	0		=			
ANR	4220999	Identifier	my_name		4220990	0					
ANR	4221000	CallExpression	strdup ( argv [ 0 ] )		4220990	1					
ANR	4221001	Callee	strdup		4220990	0					
ANR	4221002	Identifier	strdup		4220990	0					
ANR	4221003	ArgumentList	argv [ 0 ]		4220990	1					
ANR	4221004	Argument	argv [ 0 ]		4220990	0					
ANR	4221005	ArrayIndexing	argv [ 0 ]		4220990	0					
ANR	4221006	Identifier	argv		4220990	0					
ANR	4221007	PrimaryExpression	0		4220990	1					
ANR	4221008	ExpressionStatement	cmd = DRAIN_JOBS	157:1:3762:3778	4220990	2	True				
ANR	4221009	AssignmentExpression	cmd = DRAIN_JOBS		4220990	0		=			
ANR	4221010	Identifier	cmd		4220990	0					
ANR	4221011	Identifier	DRAIN_JOBS		4220990	1					
ANR	4221012	ForStatement	for ( i = 1 ; i < argc ; i ++ )		4220990	3					
ANR	4221013	ForInit	i = 1 ;	159:6:3787:3790	4220990	0	True				
ANR	4221014	AssignmentExpression	i = 1		4220990	0		=			
ANR	4221015	Identifier	i		4220990	0					
ANR	4221016	PrimaryExpression	1		4220990	1					
ANR	4221017	Condition	i < argc	159:11:3792:3797	4220990	1	True				
ANR	4221018	RelationalExpression	i < argc		4220990	0		<			
ANR	4221019	Identifier	i		4220990	0					
ANR	4221020	Identifier	argc		4220990	1					
ANR	4221021	PostIncDecOperationExpression	i ++	159:19:3800:3802	4220990	2	True				
ANR	4221022	Identifier	i		4220990	0					
ANR	4221023	IncDec	++		4220990	1					
ANR	4221024	CompoundStatement		7:25:83:83	4220990	3					
ANR	4221025	IfStatement	"if ( match_prefix ( argv [ i ] , ""-help"" ) )"		4220990	0					
ANR	4221026	Condition	"match_prefix ( argv [ i ] , ""-help"" )"	160:6:3814:3845	4220990	0	True				
ANR	4221027	CallExpression	"match_prefix ( argv [ i ] , ""-help"" )"		4220990	0					
ANR	4221028	Callee	match_prefix		4220990	0					
ANR	4221029	Identifier	match_prefix		4220990	0					
ANR	4221030	ArgumentList	argv [ i ]		4220990	1					
ANR	4221031	Argument	argv [ i ]		4220990	0					
ANR	4221032	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221033	Identifier	argv		4220990	0					
ANR	4221034	Identifier	i		4220990	1					
ANR	4221035	Argument	"""-help"""		4220990	1					
ANR	4221036	PrimaryExpression	"""-help"""		4220990	0					
ANR	4221037	CompoundStatement		8:41:126:126	4220990	1					
ANR	4221038	ExpressionStatement	usage ( my_name )	161:3:3854:3868	4220990	0	True				
ANR	4221039	CallExpression	usage ( my_name )		4220990	0					
ANR	4221040	Callee	usage		4220990	0					
ANR	4221041	Identifier	usage		4220990	0					
ANR	4221042	ArgumentList	my_name		4220990	1					
ANR	4221043	Argument	my_name		4220990	0					
ANR	4221044	Identifier	my_name		4220990	0					
ANR	4221045	ElseStatement	else		4220990	0					
ANR	4221046	IfStatement	"if ( match_prefix ( argv [ i ] , ""-version"" ) )"		4220990	0					
ANR	4221047	Condition	"match_prefix ( argv [ i ] , ""-version"" )"	163:11:3885:3919	4220990	0	True				
ANR	4221048	CallExpression	"match_prefix ( argv [ i ] , ""-version"" )"		4220990	0					
ANR	4221049	Callee	match_prefix		4220990	0					
ANR	4221050	Identifier	match_prefix		4220990	0					
ANR	4221051	ArgumentList	argv [ i ]		4220990	1					
ANR	4221052	Argument	argv [ i ]		4220990	0					
ANR	4221053	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221054	Identifier	argv		4220990	0					
ANR	4221055	Identifier	i		4220990	1					
ANR	4221056	Argument	"""-version"""		4220990	1					
ANR	4221057	PrimaryExpression	"""-version"""		4220990	0					
ANR	4221058	CompoundStatement		11:49:200:200	4220990	1					
ANR	4221059	ExpressionStatement	version ( )	164:3:3928:3937	4220990	0	True				
ANR	4221060	CallExpression	version ( )		4220990	0					
ANR	4221061	Callee	version		4220990	0					
ANR	4221062	Identifier	version		4220990	0					
ANR	4221063	ArgumentList			4220990	1					
ANR	4221064	ElseStatement	else		4220990	0					
ANR	4221065	IfStatement	"if ( match_prefix ( argv [ i ] , ""-pool"" ) )"		4220990	0					
ANR	4221066	Condition	"match_prefix ( argv [ i ] , ""-pool"" )"	166:11:3954:3985	4220990	0	True				
ANR	4221067	CallExpression	"match_prefix ( argv [ i ] , ""-pool"" )"		4220990	0					
ANR	4221068	Callee	match_prefix		4220990	0					
ANR	4221069	Identifier	match_prefix		4220990	0					
ANR	4221070	ArgumentList	argv [ i ]		4220990	1					
ANR	4221071	Argument	argv [ i ]		4220990	0					
ANR	4221072	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221073	Identifier	argv		4220990	0					
ANR	4221074	Identifier	i		4220990	1					
ANR	4221075	Argument	"""-pool"""		4220990	1					
ANR	4221076	PrimaryExpression	"""-pool"""		4220990	0					
ANR	4221077	CompoundStatement		14:46:266:266	4220990	1					
ANR	4221078	IfStatement	if ( i + 1 >= argc )		4220990	0					
ANR	4221079	Condition	i + 1 >= argc	167:7:3998:4008	4220990	0	True				
ANR	4221080	RelationalExpression	i + 1 >= argc		4220990	0		>=			
ANR	4221081	AdditiveExpression	i + 1		4220990	0		+			
ANR	4221082	Identifier	i		4220990	0					
ANR	4221083	PrimaryExpression	1		4220990	1					
ANR	4221084	Identifier	argc		4220990	1					
ANR	4221085	ExpressionStatement	another ( argv [ i ] )	167:21:4012:4028	4220990	1	True				
ANR	4221086	CallExpression	another ( argv [ i ] )		4220990	0					
ANR	4221087	Callee	another		4220990	0					
ANR	4221088	Identifier	another		4220990	0					
ANR	4221089	ArgumentList	argv [ i ]		4220990	1					
ANR	4221090	Argument	argv [ i ]		4220990	0					
ANR	4221091	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221092	Identifier	argv		4220990	0					
ANR	4221093	Identifier	i		4220990	1					
ANR	4221094	ExpressionStatement	pool = strdup ( argv [ ++ i ] )	168:3:4033:4057	4220990	1	True				
ANR	4221095	AssignmentExpression	pool = strdup ( argv [ ++ i ] )		4220990	0		=			
ANR	4221096	Identifier	pool		4220990	0					
ANR	4221097	CallExpression	strdup ( argv [ ++ i ] )		4220990	1					
ANR	4221098	Callee	strdup		4220990	0					
ANR	4221099	Identifier	strdup		4220990	0					
ANR	4221100	ArgumentList	argv [ ++ i ]		4220990	1					
ANR	4221101	Argument	argv [ ++ i ]		4220990	0					
ANR	4221102	ArrayIndexing	argv [ ++ i ]		4220990	0					
ANR	4221103	Identifier	argv		4220990	0					
ANR	4221104	UnaryExpression	++ i		4220990	1					
ANR	4221105	IncDec	++		4220990	0					
ANR	4221106	Identifier	i		4220990	1					
ANR	4221107	ElseStatement	else		4220990	0					
ANR	4221108	IfStatement	"if ( match_prefix ( argv [ i ] , ""-cancel"" ) )"		4220990	0					
ANR	4221109	Condition	"match_prefix ( argv [ i ] , ""-cancel"" )"	170:11:4074:4107	4220990	0	True				
ANR	4221110	CallExpression	"match_prefix ( argv [ i ] , ""-cancel"" )"		4220990	0					
ANR	4221111	Callee	match_prefix		4220990	0					
ANR	4221112	Identifier	match_prefix		4220990	0					
ANR	4221113	ArgumentList	argv [ i ]		4220990	1					
ANR	4221114	Argument	argv [ i ]		4220990	0					
ANR	4221115	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221116	Identifier	argv		4220990	0					
ANR	4221117	Identifier	i		4220990	1					
ANR	4221118	Argument	"""-cancel"""		4220990	1					
ANR	4221119	PrimaryExpression	"""-cancel"""		4220990	0					
ANR	4221120	CompoundStatement		18:48:388:388	4220990	1					
ANR	4221121	ExpressionStatement	cmd = CANCEL_DRAIN_JOBS	171:3:4116:4139	4220990	0	True				
ANR	4221122	AssignmentExpression	cmd = CANCEL_DRAIN_JOBS		4220990	0		=			
ANR	4221123	Identifier	cmd		4220990	0					
ANR	4221124	Identifier	CANCEL_DRAIN_JOBS		4220990	1					
ANR	4221125	ElseStatement	else		4220990	0					
ANR	4221126	IfStatement	"if ( match_prefix ( argv [ i ] , ""-fast"" ) )"		4220990	0					
ANR	4221127	Condition	"match_prefix ( argv [ i ] , ""-fast"" )"	173:11:4156:4187	4220990	0	True				
ANR	4221128	CallExpression	"match_prefix ( argv [ i ] , ""-fast"" )"		4220990	0					
ANR	4221129	Callee	match_prefix		4220990	0					
ANR	4221130	Identifier	match_prefix		4220990	0					
ANR	4221131	ArgumentList	argv [ i ]		4220990	1					
ANR	4221132	Argument	argv [ i ]		4220990	0					
ANR	4221133	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221134	Identifier	argv		4220990	0					
ANR	4221135	Identifier	i		4220990	1					
ANR	4221136	Argument	"""-fast"""		4220990	1					
ANR	4221137	PrimaryExpression	"""-fast"""		4220990	0					
ANR	4221138	CompoundStatement		21:46:468:468	4220990	1					
ANR	4221139	ExpressionStatement	how_fast = DRAIN_FAST	174:3:4196:4217	4220990	0	True				
ANR	4221140	AssignmentExpression	how_fast = DRAIN_FAST		4220990	0		=			
ANR	4221141	Identifier	how_fast		4220990	0					
ANR	4221142	Identifier	DRAIN_FAST		4220990	1					
ANR	4221143	ElseStatement	else		4220990	0					
ANR	4221144	IfStatement	"if ( match_prefix ( argv [ i ] , ""-quick"" ) )"		4220990	0					
ANR	4221145	Condition	"match_prefix ( argv [ i ] , ""-quick"" )"	176:11:4234:4266	4220990	0	True				
ANR	4221146	CallExpression	"match_prefix ( argv [ i ] , ""-quick"" )"		4220990	0					
ANR	4221147	Callee	match_prefix		4220990	0					
ANR	4221148	Identifier	match_prefix		4220990	0					
ANR	4221149	ArgumentList	argv [ i ]		4220990	1					
ANR	4221150	Argument	argv [ i ]		4220990	0					
ANR	4221151	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221152	Identifier	argv		4220990	0					
ANR	4221153	Identifier	i		4220990	1					
ANR	4221154	Argument	"""-quick"""		4220990	1					
ANR	4221155	PrimaryExpression	"""-quick"""		4220990	0					
ANR	4221156	CompoundStatement		24:47:547:547	4220990	1					
ANR	4221157	ExpressionStatement	how_fast = DRAIN_QUICK	177:3:4275:4297	4220990	0	True				
ANR	4221158	AssignmentExpression	how_fast = DRAIN_QUICK		4220990	0		=			
ANR	4221159	Identifier	how_fast		4220990	0					
ANR	4221160	Identifier	DRAIN_QUICK		4220990	1					
ANR	4221161	ElseStatement	else		4220990	0					
ANR	4221162	IfStatement	"if ( match_prefix ( argv [ i ] , ""-graceful"" ) )"		4220990	0					
ANR	4221163	Condition	"match_prefix ( argv [ i ] , ""-graceful"" )"	179:11:4314:4349	4220990	0	True				
ANR	4221164	CallExpression	"match_prefix ( argv [ i ] , ""-graceful"" )"		4220990	0					
ANR	4221165	Callee	match_prefix		4220990	0					
ANR	4221166	Identifier	match_prefix		4220990	0					
ANR	4221167	ArgumentList	argv [ i ]		4220990	1					
ANR	4221168	Argument	argv [ i ]		4220990	0					
ANR	4221169	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221170	Identifier	argv		4220990	0					
ANR	4221171	Identifier	i		4220990	1					
ANR	4221172	Argument	"""-graceful"""		4220990	1					
ANR	4221173	PrimaryExpression	"""-graceful"""		4220990	0					
ANR	4221174	CompoundStatement		27:50:630:630	4220990	1					
ANR	4221175	ExpressionStatement	how_fast = DRAIN_GRACEFUL	180:3:4358:4383	4220990	0	True				
ANR	4221176	AssignmentExpression	how_fast = DRAIN_GRACEFUL		4220990	0		=			
ANR	4221177	Identifier	how_fast		4220990	0					
ANR	4221178	Identifier	DRAIN_GRACEFUL		4220990	1					
ANR	4221179	ElseStatement	else		4220990	0					
ANR	4221180	IfStatement	"if ( match_prefix ( argv [ i ] , ""-resume-on-completion"" ) )"		4220990	0					
ANR	4221181	Condition	"match_prefix ( argv [ i ] , ""-resume-on-completion"" )"	182:11:4400:4447	4220990	0	True				
ANR	4221182	CallExpression	"match_prefix ( argv [ i ] , ""-resume-on-completion"" )"		4220990	0					
ANR	4221183	Callee	match_prefix		4220990	0					
ANR	4221184	Identifier	match_prefix		4220990	0					
ANR	4221185	ArgumentList	argv [ i ]		4220990	1					
ANR	4221186	Argument	argv [ i ]		4220990	0					
ANR	4221187	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221188	Identifier	argv		4220990	0					
ANR	4221189	Identifier	i		4220990	1					
ANR	4221190	Argument	"""-resume-on-completion"""		4220990	1					
ANR	4221191	PrimaryExpression	"""-resume-on-completion"""		4220990	0					
ANR	4221192	CompoundStatement		30:62:728:728	4220990	1					
ANR	4221193	ExpressionStatement	resume_on_completion = true	183:3:4456:4483	4220990	0	True				
ANR	4221194	AssignmentExpression	resume_on_completion = true		4220990	0		=			
ANR	4221195	Identifier	resume_on_completion		4220990	0					
ANR	4221196	Identifier	true		4220990	1					
ANR	4221197	ElseStatement	else		4220990	0					
ANR	4221198	IfStatement	"if ( match_prefix ( argv [ i ] , ""-request-id"" ) )"		4220990	0					
ANR	4221199	Condition	"match_prefix ( argv [ i ] , ""-request-id"" )"	185:11:4500:4537	4220990	0	True				
ANR	4221200	CallExpression	"match_prefix ( argv [ i ] , ""-request-id"" )"		4220990	0					
ANR	4221201	Callee	match_prefix		4220990	0					
ANR	4221202	Identifier	match_prefix		4220990	0					
ANR	4221203	ArgumentList	argv [ i ]		4220990	1					
ANR	4221204	Argument	argv [ i ]		4220990	0					
ANR	4221205	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221206	Identifier	argv		4220990	0					
ANR	4221207	Identifier	i		4220990	1					
ANR	4221208	Argument	"""-request-id"""		4220990	1					
ANR	4221209	PrimaryExpression	"""-request-id"""		4220990	0					
ANR	4221210	CompoundStatement		33:52:818:818	4220990	1					
ANR	4221211	IfStatement	if ( i + 1 >= argc )		4220990	0					
ANR	4221212	Condition	i + 1 >= argc	186:7:4550:4560	4220990	0	True				
ANR	4221213	RelationalExpression	i + 1 >= argc		4220990	0		>=			
ANR	4221214	AdditiveExpression	i + 1		4220990	0		+			
ANR	4221215	Identifier	i		4220990	0					
ANR	4221216	PrimaryExpression	1		4220990	1					
ANR	4221217	Identifier	argc		4220990	1					
ANR	4221218	ExpressionStatement	another ( argv [ i ] )	186:21:4564:4580	4220990	1	True				
ANR	4221219	CallExpression	another ( argv [ i ] )		4220990	0					
ANR	4221220	Callee	another		4220990	0					
ANR	4221221	Identifier	another		4220990	0					
ANR	4221222	ArgumentList	argv [ i ]		4220990	1					
ANR	4221223	Argument	argv [ i ]		4220990	0					
ANR	4221224	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221225	Identifier	argv		4220990	0					
ANR	4221226	Identifier	i		4220990	1					
ANR	4221227	ExpressionStatement	cancel_request_id = strdup ( argv [ ++ i ] )	187:3:4585:4622	4220990	1	True				
ANR	4221228	AssignmentExpression	cancel_request_id = strdup ( argv [ ++ i ] )		4220990	0		=			
ANR	4221229	Identifier	cancel_request_id		4220990	0					
ANR	4221230	CallExpression	strdup ( argv [ ++ i ] )		4220990	1					
ANR	4221231	Callee	strdup		4220990	0					
ANR	4221232	Identifier	strdup		4220990	0					
ANR	4221233	ArgumentList	argv [ ++ i ]		4220990	1					
ANR	4221234	Argument	argv [ ++ i ]		4220990	0					
ANR	4221235	ArrayIndexing	argv [ ++ i ]		4220990	0					
ANR	4221236	Identifier	argv		4220990	0					
ANR	4221237	UnaryExpression	++ i		4220990	1					
ANR	4221238	IncDec	++		4220990	0					
ANR	4221239	Identifier	i		4220990	1					
ANR	4221240	ElseStatement	else		4220990	0					
ANR	4221241	IfStatement	"if ( match_prefix ( argv [ i ] , ""-check"" ) )"		4220990	0					
ANR	4221242	Condition	"match_prefix ( argv [ i ] , ""-check"" )"	189:11:4639:4671	4220990	0	True				
ANR	4221243	CallExpression	"match_prefix ( argv [ i ] , ""-check"" )"		4220990	0					
ANR	4221244	Callee	match_prefix		4220990	0					
ANR	4221245	Identifier	match_prefix		4220990	0					
ANR	4221246	ArgumentList	argv [ i ]		4220990	1					
ANR	4221247	Argument	argv [ i ]		4220990	0					
ANR	4221248	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221249	Identifier	argv		4220990	0					
ANR	4221250	Identifier	i		4220990	1					
ANR	4221251	Argument	"""-check"""		4220990	1					
ANR	4221252	PrimaryExpression	"""-check"""		4220990	0					
ANR	4221253	CompoundStatement		37:47:952:952	4220990	1					
ANR	4221254	IfStatement	if ( i + 1 >= argc )		4220990	0					
ANR	4221255	Condition	i + 1 >= argc	190:7:4684:4694	4220990	0	True				
ANR	4221256	RelationalExpression	i + 1 >= argc		4220990	0		>=			
ANR	4221257	AdditiveExpression	i + 1		4220990	0		+			
ANR	4221258	Identifier	i		4220990	0					
ANR	4221259	PrimaryExpression	1		4220990	1					
ANR	4221260	Identifier	argc		4220990	1					
ANR	4221261	ExpressionStatement	another ( argv [ i ] )	190:21:4698:4714	4220990	1	True				
ANR	4221262	CallExpression	another ( argv [ i ] )		4220990	0					
ANR	4221263	Callee	another		4220990	0					
ANR	4221264	Identifier	another		4220990	0					
ANR	4221265	ArgumentList	argv [ i ]		4220990	1					
ANR	4221266	Argument	argv [ i ]		4220990	0					
ANR	4221267	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221268	Identifier	argv		4220990	0					
ANR	4221269	Identifier	i		4220990	1					
ANR	4221270	ExpressionStatement	draining_check_expr = strdup ( argv [ ++ i ] )	191:3:4719:4758	4220990	1	True				
ANR	4221271	AssignmentExpression	draining_check_expr = strdup ( argv [ ++ i ] )		4220990	0		=			
ANR	4221272	Identifier	draining_check_expr		4220990	0					
ANR	4221273	CallExpression	strdup ( argv [ ++ i ] )		4220990	1					
ANR	4221274	Callee	strdup		4220990	0					
ANR	4221275	Identifier	strdup		4220990	0					
ANR	4221276	ArgumentList	argv [ ++ i ]		4220990	1					
ANR	4221277	Argument	argv [ ++ i ]		4220990	0					
ANR	4221278	ArrayIndexing	argv [ ++ i ]		4220990	0					
ANR	4221279	Identifier	argv		4220990	0					
ANR	4221280	UnaryExpression	++ i		4220990	1					
ANR	4221281	IncDec	++		4220990	0					
ANR	4221282	Identifier	i		4220990	1					
ANR	4221283	ElseStatement	else		4220990	0					
ANR	4221284	IfStatement	if ( argv [ i ] [ 0 ] != '-' )		4220990	0					
ANR	4221285	Condition	argv [ i ] [ 0 ] != '-'	193:17:4781:4797	4220990	0	True				
ANR	4221286	EqualityExpression	argv [ i ] [ 0 ] != '-'		4220990	0		!=			
ANR	4221287	ArrayIndexing	argv [ i ] [ 0 ]		4220990	0					
ANR	4221288	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221289	Identifier	argv		4220990	0					
ANR	4221290	Identifier	i		4220990	1					
ANR	4221291	PrimaryExpression	0		4220990	1					
ANR	4221292	PrimaryExpression	'-'		4220990	1					
ANR	4221293	CompoundStatement		41:37:1078:1078	4220990	1					
ANR	4221294	BreakStatement	break ;	194:12:4815:4820	4220990	0	True				
ANR	4221295	ElseStatement	else		4220990	0					
ANR	4221296	CompoundStatement		44:7:1116:1116	4220990	0					
ANR	4221297	ExpressionStatement	"fprintf ( stderr , ""ERROR: unexpected argument: %s\\n"" , argv [ i ] )"	197:3:4844:4903	4220990	0	True				
ANR	4221298	CallExpression	"fprintf ( stderr , ""ERROR: unexpected argument: %s\\n"" , argv [ i ] )"		4220990	0					
ANR	4221299	Callee	fprintf		4220990	0					
ANR	4221300	Identifier	fprintf		4220990	0					
ANR	4221301	ArgumentList	stderr		4220990	1					
ANR	4221302	Argument	stderr		4220990	0					
ANR	4221303	Identifier	stderr		4220990	0					
ANR	4221304	Argument	"""ERROR: unexpected argument: %s\\n"""		4220990	1					
ANR	4221305	PrimaryExpression	"""ERROR: unexpected argument: %s\\n"""		4220990	0					
ANR	4221306	Argument	argv [ i ]		4220990	2					
ANR	4221307	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221308	Identifier	argv		4220990	0					
ANR	4221309	Identifier	i		4220990	1					
ANR	4221310	ExpressionStatement	exit ( 2 )	198:3:4908:4915	4220990	1	True				
ANR	4221311	CallExpression	exit ( 2 )		4220990	0					
ANR	4221312	Callee	exit		4220990	0					
ANR	4221313	Identifier	exit		4220990	0					
ANR	4221314	ArgumentList	2		4220990	1					
ANR	4221315	Argument	2		4220990	0					
ANR	4221316	PrimaryExpression	2		4220990	0					
ANR	4221317	IfStatement	if ( i != argc - 1 )		4220990	4					
ANR	4221318	Condition	i != argc - 1	202:8:4933:4943	4220990	0	True				
ANR	4221319	EqualityExpression	i != argc - 1		4220990	0		!=			
ANR	4221320	Identifier	i		4220990	0					
ANR	4221321	AdditiveExpression	argc - 1		4220990	1		-			
ANR	4221322	Identifier	argc		4220990	0					
ANR	4221323	PrimaryExpression	1		4220990	1					
ANR	4221324	CompoundStatement		50:22:1224:1224	4220990	1					
ANR	4221325	ExpressionStatement	"fprintf ( stderr , ""ERROR: must specify one target machine\\n"" )"	203:8:4957:5015	4220990	0	True				
ANR	4221326	CallExpression	"fprintf ( stderr , ""ERROR: must specify one target machine\\n"" )"		4220990	0					
ANR	4221327	Callee	fprintf		4220990	0					
ANR	4221328	Identifier	fprintf		4220990	0					
ANR	4221329	ArgumentList	stderr		4220990	1					
ANR	4221330	Argument	stderr		4220990	0					
ANR	4221331	Identifier	stderr		4220990	0					
ANR	4221332	Argument	"""ERROR: must specify one target machine\\n"""		4220990	1					
ANR	4221333	PrimaryExpression	"""ERROR: must specify one target machine\\n"""		4220990	0					
ANR	4221334	ExpressionStatement	exit ( 2 )	204:8:5025:5032	4220990	1	True				
ANR	4221335	CallExpression	exit ( 2 )		4220990	0					
ANR	4221336	Callee	exit		4220990	0					
ANR	4221337	Identifier	exit		4220990	0					
ANR	4221338	ArgumentList	2		4220990	1					
ANR	4221339	Argument	2		4220990	0					
ANR	4221340	PrimaryExpression	2		4220990	0					
ANR	4221341	ExpressionStatement	target = strdup ( argv [ i ] )	207:1:5042:5066	4220990	5	True				
ANR	4221342	AssignmentExpression	target = strdup ( argv [ i ] )		4220990	0		=			
ANR	4221343	Identifier	target		4220990	0					
ANR	4221344	CallExpression	strdup ( argv [ i ] )		4220990	1					
ANR	4221345	Callee	strdup		4220990	0					
ANR	4221346	Identifier	strdup		4220990	0					
ANR	4221347	ArgumentList	argv [ i ]		4220990	1					
ANR	4221348	Argument	argv [ i ]		4220990	0					
ANR	4221349	ArrayIndexing	argv [ i ]		4220990	0					
ANR	4221350	Identifier	argv		4220990	0					
ANR	4221351	Identifier	i		4220990	1					
ANR	4221352	IfStatement	if ( cmd == DRAIN_JOBS )		4220990	6					
ANR	4221353	Condition	cmd == DRAIN_JOBS	209:5:5074:5090	4220990	0	True				
ANR	4221354	EqualityExpression	cmd == DRAIN_JOBS		4220990	0		==			
ANR	4221355	Identifier	cmd		4220990	0					
ANR	4221356	Identifier	DRAIN_JOBS		4220990	1					
ANR	4221357	CompoundStatement		57:25:1371:1371	4220990	1					
ANR	4221358	IfStatement	if ( cancel_request_id )		4220990	0					
ANR	4221359	Condition	cancel_request_id	210:6:5102:5118	4220990	0	True				
ANR	4221360	Identifier	cancel_request_id		4220990	0					
ANR	4221361	CompoundStatement		58:26:1399:1399	4220990	1					
ANR	4221362	ExpressionStatement	"fprintf ( stderr , ""ERROR: -request-id may only be used with -cancel\\n"" )"	211:3:5127:5195	4220990	0	True				
ANR	4221363	CallExpression	"fprintf ( stderr , ""ERROR: -request-id may only be used with -cancel\\n"" )"		4220990	0					
ANR	4221364	Callee	fprintf		4220990	0					
ANR	4221365	Identifier	fprintf		4220990	0					
ANR	4221366	ArgumentList	stderr		4220990	1					
ANR	4221367	Argument	stderr		4220990	0					
ANR	4221368	Identifier	stderr		4220990	0					
ANR	4221369	Argument	"""ERROR: -request-id may only be used with -cancel\\n"""		4220990	1					
ANR	4221370	PrimaryExpression	"""ERROR: -request-id may only be used with -cancel\\n"""		4220990	0					
ANR	4221371	ExpressionStatement	exit ( 2 )	212:3:5200:5207	4220990	1	True				
ANR	4221372	CallExpression	exit ( 2 )		4220990	0					
ANR	4221373	Callee	exit		4220990	0					
ANR	4221374	Identifier	exit		4220990	0					
ANR	4221375	ArgumentList	2		4220990	1					
ANR	4221376	Argument	2		4220990	0					
ANR	4221377	PrimaryExpression	2		4220990	0					
ANR	4221378	IfStatement	if ( cmd == CANCEL_DRAIN_JOBS )		4220990	7					
ANR	4221379	Condition	cmd == CANCEL_DRAIN_JOBS	215:5:5221:5244	4220990	0	True				
ANR	4221380	EqualityExpression	cmd == CANCEL_DRAIN_JOBS		4220990	0		==			
ANR	4221381	Identifier	cmd		4220990	0					
ANR	4221382	Identifier	CANCEL_DRAIN_JOBS		4220990	1					
ANR	4221383	CompoundStatement		63:32:1525:1525	4220990	1					
ANR	4221384	IfStatement	if ( draining_check_expr )		4220990	0					
ANR	4221385	Condition	draining_check_expr	216:6:5256:5274	4220990	0	True				
ANR	4221386	Identifier	draining_check_expr		4220990	0					
ANR	4221387	CompoundStatement		64:28:1555:1555	4220990	1					
ANR	4221388	ExpressionStatement	"fprintf ( stderr , ""ERROR: -check may not be used with -cancel\\n"" )"	217:3:5283:5345	4220990	0	True				
ANR	4221389	CallExpression	"fprintf ( stderr , ""ERROR: -check may not be used with -cancel\\n"" )"		4220990	0					
ANR	4221390	Callee	fprintf		4220990	0					
ANR	4221391	Identifier	fprintf		4220990	0					
ANR	4221392	ArgumentList	stderr		4220990	1					
ANR	4221393	Argument	stderr		4220990	0					
ANR	4221394	Identifier	stderr		4220990	0					
ANR	4221395	Argument	"""ERROR: -check may not be used with -cancel\\n"""		4220990	1					
ANR	4221396	PrimaryExpression	"""ERROR: -check may not be used with -cancel\\n"""		4220990	0					
ANR	4221397	ExpressionStatement	exit ( 2 )	218:3:5350:5357	4220990	1	True				
ANR	4221398	CallExpression	exit ( 2 )		4220990	0					
ANR	4221399	Callee	exit		4220990	0					
ANR	4221400	Identifier	exit		4220990	0					
ANR	4221401	ArgumentList	2		4220990	1					
ANR	4221402	Argument	2		4220990	0					
ANR	4221403	PrimaryExpression	2		4220990	0					
ANR	4221404	ReturnType	void		4220990	1					
ANR	4221405	Identifier	parseArgv		4220990	2					
ANR	4221406	ParameterList	"int argc , char * argv [ ]"		4220990	3					
ANR	4221407	Parameter	int argc	152:11:3697:3704	4220990	0	True				
ANR	4221408	ParameterType	int		4220990	0					
ANR	4221409	Identifier	argc		4220990	1					
ANR	4221410	Parameter	char * argv [ ]	152:21:3707:3718	4220990	1	True				
ANR	4221411	ParameterType	char * [ ]		4220990	0					
ANR	4221412	Identifier	argv		4220990	1					
ANR	4221413	CFGEntryNode	ENTRY		4220990		True				
ANR	4221414	CFGExitNode	EXIT		4220990		True				
ANR	4221415	Symbol	argc		4220990						
ANR	4221416	Symbol	how_fast		4220990						
ANR	4221417	Symbol	* * i		4220990						
ANR	4221418	Symbol	match_prefix		4220990						
ANR	4221419	Symbol	DRAIN_JOBS		4220990						
ANR	4221420	Symbol	pool		4220990						
ANR	4221421	Symbol	i		4220990						
ANR	4221422	Symbol	* argv		4220990						
ANR	4221423	Symbol	cancel_request_id		4220990						
ANR	4221424	Symbol	CANCEL_DRAIN_JOBS		4220990						
ANR	4221425	Symbol	DRAIN_GRACEFUL		4220990						
ANR	4221426	Symbol	stderr		4220990						
ANR	4221427	Symbol	argv		4220990						
ANR	4221428	Symbol	draining_check_expr		4220990						
ANR	4221429	Symbol	target		4220990						
ANR	4221430	Symbol	my_name		4220990						
ANR	4221431	Symbol	* i		4220990						
ANR	4221432	Symbol	DRAIN_FAST		4220990						
ANR	4221433	Symbol	true		4220990						
ANR	4221434	Symbol	* * argv		4220990						
ANR	4221435	Symbol	resume_on_completion		4220990						
ANR	4221436	Symbol	strdup		4220990						
ANR	4221437	Symbol	cmd		4220990						
ANR	4221438	Symbol	DRAIN_QUICK		4220990						
ANR	4221439	Function	usage	223:0:5369:6240							
ANR	4221440	FunctionDef	usage (const char * str)		4221439	0					
ANR	4221441	CompoundStatement		225:0:5399:6240	4221439	0					
ANR	4221442	IfStatement	if ( ! str )		4221439	0					
ANR	4221443	Condition	! str	226:5:5406:5410	4221439	0	True				
ANR	4221444	UnaryOperationExpression	! str		4221439	0					
ANR	4221445	UnaryOperator	!		4221439	0					
ANR	4221446	Identifier	str		4221439	1					
ANR	4221447	CompoundStatement		2:13:14:14	4221439	1					
ANR	4221448	ExpressionStatement	"fprintf ( stderr , ""Use \\""-help\\"" to see usage information\\n"" )"	227:2:5418:5479	4221439	0	True				
ANR	4221449	CallExpression	"fprintf ( stderr , ""Use \\""-help\\"" to see usage information\\n"" )"		4221439	0					
ANR	4221450	Callee	fprintf		4221439	0					
ANR	4221451	Identifier	fprintf		4221439	0					
ANR	4221452	ArgumentList	stderr		4221439	1					
ANR	4221453	Argument	stderr		4221439	0					
ANR	4221454	Identifier	stderr		4221439	0					
ANR	4221455	Argument	"""Use \\""-help\\"" to see usage information\\n"""		4221439	1					
ANR	4221456	PrimaryExpression	"""Use \\""-help\\"" to see usage information\\n"""		4221439	0					
ANR	4221457	ExpressionStatement	exit ( 1 )	228:2:5483:5492	4221439	1	True				
ANR	4221458	CallExpression	exit ( 1 )		4221439	0					
ANR	4221459	Callee	exit		4221439	0					
ANR	4221460	Identifier	exit		4221439	0					
ANR	4221461	ArgumentList	1		4221439	1					
ANR	4221462	Argument	1		4221439	0					
ANR	4221463	PrimaryExpression	1		4221439	0					
ANR	4221464	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [OPTIONS] machine\\n"" , str )"	230:1:5498:5553	4221439	1	True				
ANR	4221465	CallExpression	"fprintf ( stderr , ""Usage: %s [OPTIONS] machine\\n"" , str )"		4221439	0					
ANR	4221466	Callee	fprintf		4221439	0					
ANR	4221467	Identifier	fprintf		4221439	0					
ANR	4221468	ArgumentList	stderr		4221439	1					
ANR	4221469	Argument	stderr		4221439	0					
ANR	4221470	Identifier	stderr		4221439	0					
ANR	4221471	Argument	"""Usage: %s [OPTIONS] machine\\n"""		4221439	1					
ANR	4221472	PrimaryExpression	"""Usage: %s [OPTIONS] machine\\n"""		4221439	0					
ANR	4221473	Argument	str		4221439	2					
ANR	4221474	Identifier	str		4221439	0					
ANR	4221475	ExpressionStatement	"fprintf ( stderr , ""\\nOPTIONS:\\n"" )"	231:1:5556:5589	4221439	2	True				
ANR	4221476	CallExpression	"fprintf ( stderr , ""\\nOPTIONS:\\n"" )"		4221439	0					
ANR	4221477	Callee	fprintf		4221439	0					
ANR	4221478	Identifier	fprintf		4221439	0					
ANR	4221479	ArgumentList	stderr		4221439	1					
ANR	4221480	Argument	stderr		4221439	0					
ANR	4221481	Identifier	stderr		4221439	0					
ANR	4221482	Argument	"""\\nOPTIONS:\\n"""		4221439	1					
ANR	4221483	PrimaryExpression	"""\\nOPTIONS:\\n"""		4221439	0					
ANR	4221484	ExpressionStatement	"fprintf ( stderr , ""-cancel          Stop draining.\\n"" )"	232:1:5592:5646	4221439	3	True				
ANR	4221485	CallExpression	"fprintf ( stderr , ""-cancel          Stop draining.\\n"" )"		4221439	0					
ANR	4221486	Callee	fprintf		4221439	0					
ANR	4221487	Identifier	fprintf		4221439	0					
ANR	4221488	ArgumentList	stderr		4221439	1					
ANR	4221489	Argument	stderr		4221439	0					
ANR	4221490	Identifier	stderr		4221439	0					
ANR	4221491	Argument	"""-cancel          Stop draining.\\n"""		4221439	1					
ANR	4221492	PrimaryExpression	"""-cancel          Stop draining.\\n"""		4221439	0					
ANR	4221493	ExpressionStatement	"fprintf ( stderr , ""-graceful         (the default) Honor MaxVacateTime and MaxJobRetirementTime.\\n"" )"	233:1:5649:5749	4221439	4	True				
ANR	4221494	CallExpression	"fprintf ( stderr , ""-graceful         (the default) Honor MaxVacateTime and MaxJobRetirementTime.\\n"" )"		4221439	0					
ANR	4221495	Callee	fprintf		4221439	0					
ANR	4221496	Identifier	fprintf		4221439	0					
ANR	4221497	ArgumentList	stderr		4221439	1					
ANR	4221498	Argument	stderr		4221439	0					
ANR	4221499	Identifier	stderr		4221439	0					
ANR	4221500	Argument	"""-graceful         (the default) Honor MaxVacateTime and MaxJobRetirementTime.\\n"""		4221439	1					
ANR	4221501	PrimaryExpression	"""-graceful         (the default) Honor MaxVacateTime and MaxJobRetirementTime.\\n"""		4221439	0					
ANR	4221502	ExpressionStatement	"fprintf ( stderr , ""-quick            Honor MaxVacateTime but not MaxJobRetirementTime.\\n"" )"	234:1:5752:5842	4221439	5	True				
ANR	4221503	CallExpression	"fprintf ( stderr , ""-quick            Honor MaxVacateTime but not MaxJobRetirementTime.\\n"" )"		4221439	0					
ANR	4221504	Callee	fprintf		4221439	0					
ANR	4221505	Identifier	fprintf		4221439	0					
ANR	4221506	ArgumentList	stderr		4221439	1					
ANR	4221507	Argument	stderr		4221439	0					
ANR	4221508	Identifier	stderr		4221439	0					
ANR	4221509	Argument	"""-quick            Honor MaxVacateTime but not MaxJobRetirementTime.\\n"""		4221439	1					
ANR	4221510	PrimaryExpression	"""-quick            Honor MaxVacateTime but not MaxJobRetirementTime.\\n"""		4221439	0					
ANR	4221511	ExpressionStatement	"fprintf ( stderr , ""-fast             Honor neither MaxVacateTime nor MaxJobRetirementTime.\\n"" )"	235:1:5845:5939	4221439	6	True				
ANR	4221512	CallExpression	"fprintf ( stderr , ""-fast             Honor neither MaxVacateTime nor MaxJobRetirementTime.\\n"" )"		4221439	0					
ANR	4221513	Callee	fprintf		4221439	0					
ANR	4221514	Identifier	fprintf		4221439	0					
ANR	4221515	ArgumentList	stderr		4221439	1					
ANR	4221516	Argument	stderr		4221439	0					
ANR	4221517	Identifier	stderr		4221439	0					
ANR	4221518	Argument	"""-fast             Honor neither MaxVacateTime nor MaxJobRetirementTime.\\n"""		4221439	1					
ANR	4221519	PrimaryExpression	"""-fast             Honor neither MaxVacateTime nor MaxJobRetirementTime.\\n"""		4221439	0					
ANR	4221520	ExpressionStatement	"fprintf ( stderr , ""-resume-on-completion    When done draining, resume normal operation.\\n"" )"	236:1:5942:6034	4221439	7	True				
ANR	4221521	CallExpression	"fprintf ( stderr , ""-resume-on-completion    When done draining, resume normal operation.\\n"" )"		4221439	0					
ANR	4221522	Callee	fprintf		4221439	0					
ANR	4221523	Identifier	fprintf		4221439	0					
ANR	4221524	ArgumentList	stderr		4221439	1					
ANR	4221525	Argument	stderr		4221439	0					
ANR	4221526	Identifier	stderr		4221439	0					
ANR	4221527	Argument	"""-resume-on-completion    When done draining, resume normal operation.\\n"""		4221439	1					
ANR	4221528	PrimaryExpression	"""-resume-on-completion    When done draining, resume normal operation.\\n"""		4221439	0					
ANR	4221529	ExpressionStatement	"fprintf ( stderr , ""-request-id <id>  Specific request id to cancel (optional).\\n"" )"	237:1:6037:6119	4221439	8	True				
ANR	4221530	CallExpression	"fprintf ( stderr , ""-request-id <id>  Specific request id to cancel (optional).\\n"" )"		4221439	0					
ANR	4221531	Callee	fprintf		4221439	0					
ANR	4221532	Identifier	fprintf		4221439	0					
ANR	4221533	ArgumentList	stderr		4221439	1					
ANR	4221534	Argument	stderr		4221439	0					
ANR	4221535	Identifier	stderr		4221439	0					
ANR	4221536	Argument	"""-request-id <id>  Specific request id to cancel (optional).\\n"""		4221439	1					
ANR	4221537	PrimaryExpression	"""-request-id <id>  Specific request id to cancel (optional).\\n"""		4221439	0					
ANR	4221538	ExpressionStatement	"fprintf ( stderr , ""-check <expr>     Must be true for all slots to be drained or request is aborted.\\n"" )"	238:1:6122:6226	4221439	9	True				
ANR	4221539	CallExpression	"fprintf ( stderr , ""-check <expr>     Must be true for all slots to be drained or request is aborted.\\n"" )"		4221439	0					
ANR	4221540	Callee	fprintf		4221439	0					
ANR	4221541	Identifier	fprintf		4221439	0					
ANR	4221542	ArgumentList	stderr		4221439	1					
ANR	4221543	Argument	stderr		4221439	0					
ANR	4221544	Identifier	stderr		4221439	0					
ANR	4221545	Argument	"""-check <expr>     Must be true for all slots to be drained or request is aborted.\\n"""		4221439	1					
ANR	4221546	PrimaryExpression	"""-check <expr>     Must be true for all slots to be drained or request is aborted.\\n"""		4221439	0					
ANR	4221547	ExpressionStatement	exit ( 1 )	239:1:6229:6238	4221439	10	True				
ANR	4221548	CallExpression	exit ( 1 )		4221439	0					
ANR	4221549	Callee	exit		4221439	0					
ANR	4221550	Identifier	exit		4221439	0					
ANR	4221551	ArgumentList	1		4221439	1					
ANR	4221552	Argument	1		4221439	0					
ANR	4221553	PrimaryExpression	1		4221439	0					
ANR	4221554	ReturnType	void		4221439	1					
ANR	4221555	Identifier	usage		4221439	2					
ANR	4221556	ParameterList	const char * str		4221439	3					
ANR	4221557	Parameter	const char * str	224:7:5381:5395	4221439	0	True				
ANR	4221558	ParameterType	const char *		4221439	0					
ANR	4221559	Identifier	str		4221439	1					
ANR	4221560	CFGEntryNode	ENTRY		4221439		True				
ANR	4221561	CFGExitNode	EXIT		4221439		True				
ANR	4221562	Symbol	str		4221439						
ANR	4221563	Symbol	stderr		4221439						
