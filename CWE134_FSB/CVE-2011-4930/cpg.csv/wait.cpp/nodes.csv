command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5587478	File	data/converged/CVE-2011-4930_htcondor/wait.cpp								
ANR	5587479	Function	usage	54:0:1711:2946							
ANR	5587480	FunctionDef	usage (char * cmd)		5587479	0					
ANR	5587481	CompoundStatement		55:0:1742:2946	5587479	0					
ANR	5587482	ExpressionStatement	"fprintf ( stderr , ""\\nUse: %s [options] <log-file> [job-number]\\n"" , cmd )"	56:1:1745:1812	5587479	0	True				
ANR	5587483	CallExpression	"fprintf ( stderr , ""\\nUse: %s [options] <log-file> [job-number]\\n"" , cmd )"		5587479	0					
ANR	5587484	Callee	fprintf		5587479	0					
ANR	5587485	Identifier	fprintf		5587479	0					
ANR	5587486	ArgumentList	stderr		5587479	1					
ANR	5587487	Argument	stderr		5587479	0					
ANR	5587488	Identifier	stderr		5587479	0					
ANR	5587489	Argument	"""\\nUse: %s [options] <log-file> [job-number]\\n"""		5587479	1					
ANR	5587490	PrimaryExpression	"""\\nUse: %s [options] <log-file> [job-number]\\n"""		5587479	0					
ANR	5587491	Argument	cmd		5587479	2					
ANR	5587492	Identifier	cmd		5587479	0					
ANR	5587493	ExpressionStatement	"fprintf ( stderr , ""Where options are:\\n"" )"	57:1:1815:1853	5587479	1	True				
ANR	5587494	CallExpression	"fprintf ( stderr , ""Where options are:\\n"" )"		5587479	0					
ANR	5587495	Callee	fprintf		5587479	0					
ANR	5587496	Identifier	fprintf		5587479	0					
ANR	5587497	ArgumentList	stderr		5587479	1					
ANR	5587498	Argument	stderr		5587479	0					
ANR	5587499	Identifier	stderr		5587479	0					
ANR	5587500	Argument	"""Where options are:\\n"""		5587479	1					
ANR	5587501	PrimaryExpression	"""Where options are:\\n"""		5587479	0					
ANR	5587502	ExpressionStatement	"fprintf ( stderr , ""    -help             Display options\\n"" )"	58:1:1856:1913	5587479	2	True				
ANR	5587503	CallExpression	"fprintf ( stderr , ""    -help             Display options\\n"" )"		5587479	0					
ANR	5587504	Callee	fprintf		5587479	0					
ANR	5587505	Identifier	fprintf		5587479	0					
ANR	5587506	ArgumentList	stderr		5587479	1					
ANR	5587507	Argument	stderr		5587479	0					
ANR	5587508	Identifier	stderr		5587479	0					
ANR	5587509	Argument	"""    -help             Display options\\n"""		5587479	1					
ANR	5587510	PrimaryExpression	"""    -help             Display options\\n"""		5587479	0					
ANR	5587511	ExpressionStatement	"fprintf ( stderr , ""    -version          Display Condor version\\n"" )"	59:1:1916:1980	5587479	3	True				
ANR	5587512	CallExpression	"fprintf ( stderr , ""    -version          Display Condor version\\n"" )"		5587479	0					
ANR	5587513	Callee	fprintf		5587479	0					
ANR	5587514	Identifier	fprintf		5587479	0					
ANR	5587515	ArgumentList	stderr		5587479	1					
ANR	5587516	Argument	stderr		5587479	0					
ANR	5587517	Identifier	stderr		5587479	0					
ANR	5587518	Argument	"""    -version          Display Condor version\\n"""		5587479	1					
ANR	5587519	PrimaryExpression	"""    -version          Display Condor version\\n"""		5587479	0					
ANR	5587520	ExpressionStatement	"fprintf ( stderr , ""    -debug            Show extra debugging info\\n"" )"	60:1:1983:2050	5587479	4	True				
ANR	5587521	CallExpression	"fprintf ( stderr , ""    -debug            Show extra debugging info\\n"" )"		5587479	0					
ANR	5587522	Callee	fprintf		5587479	0					
ANR	5587523	Identifier	fprintf		5587479	0					
ANR	5587524	ArgumentList	stderr		5587479	1					
ANR	5587525	Argument	stderr		5587479	0					
ANR	5587526	Identifier	stderr		5587479	0					
ANR	5587527	Argument	"""    -debug            Show extra debugging info\\n"""		5587479	1					
ANR	5587528	PrimaryExpression	"""    -debug            Show extra debugging info\\n"""		5587479	0					
ANR	5587529	ExpressionStatement	"fprintf ( stderr , ""    -num <number>     Wait for this many jobs to end\\n"" )"	61:1:2053:2125	5587479	5	True				
ANR	5587530	CallExpression	"fprintf ( stderr , ""    -num <number>     Wait for this many jobs to end\\n"" )"		5587479	0					
ANR	5587531	Callee	fprintf		5587479	0					
ANR	5587532	Identifier	fprintf		5587479	0					
ANR	5587533	ArgumentList	stderr		5587479	1					
ANR	5587534	Argument	stderr		5587479	0					
ANR	5587535	Identifier	stderr		5587479	0					
ANR	5587536	Argument	"""    -num <number>     Wait for this many jobs to end\\n"""		5587479	1					
ANR	5587537	PrimaryExpression	"""    -num <number>     Wait for this many jobs to end\\n"""		5587479	0					
ANR	5587538	ExpressionStatement	"fprintf ( stderr , ""                       (default is all jobs)\\n"" )"	62:1:2128:2192	5587479	6	True				
ANR	5587539	CallExpression	"fprintf ( stderr , ""                       (default is all jobs)\\n"" )"		5587479	0					
ANR	5587540	Callee	fprintf		5587479	0					
ANR	5587541	Identifier	fprintf		5587479	0					
ANR	5587542	ArgumentList	stderr		5587479	1					
ANR	5587543	Argument	stderr		5587479	0					
ANR	5587544	Identifier	stderr		5587479	0					
ANR	5587545	Argument	"""                       (default is all jobs)\\n"""		5587479	1					
ANR	5587546	PrimaryExpression	"""                       (default is all jobs)\\n"""		5587479	0					
ANR	5587547	ExpressionStatement	"fprintf ( stderr , ""    -wait <seconds>   Wait no more than this time\\n"" )"	63:1:2195:2264	5587479	7	True				
ANR	5587548	CallExpression	"fprintf ( stderr , ""    -wait <seconds>   Wait no more than this time\\n"" )"		5587479	0					
ANR	5587549	Callee	fprintf		5587479	0					
ANR	5587550	Identifier	fprintf		5587479	0					
ANR	5587551	ArgumentList	stderr		5587479	1					
ANR	5587552	Argument	stderr		5587479	0					
ANR	5587553	Identifier	stderr		5587479	0					
ANR	5587554	Argument	"""    -wait <seconds>   Wait no more than this time\\n"""		5587479	1					
ANR	5587555	PrimaryExpression	"""    -wait <seconds>   Wait no more than this time\\n"""		5587479	0					
ANR	5587556	ExpressionStatement	"fprintf ( stderr , ""                       (default is unlimited)\\n\\n"" )"	64:1:2267:2334	5587479	8	True				
ANR	5587557	CallExpression	"fprintf ( stderr , ""                       (default is unlimited)\\n\\n"" )"		5587479	0					
ANR	5587558	Callee	fprintf		5587479	0					
ANR	5587559	Identifier	fprintf		5587479	0					
ANR	5587560	ArgumentList	stderr		5587479	1					
ANR	5587561	Argument	stderr		5587479	0					
ANR	5587562	Identifier	stderr		5587479	0					
ANR	5587563	Argument	"""                       (default is unlimited)\\n\\n"""		5587479	1					
ANR	5587564	PrimaryExpression	"""                       (default is unlimited)\\n\\n"""		5587479	0					
ANR	5587565	ExpressionStatement	"fprintf ( stderr , ""This command watches a log file, and indicates when\\n"" )"	66:1:2338:2409	5587479	9	True				
ANR	5587566	CallExpression	"fprintf ( stderr , ""This command watches a log file, and indicates when\\n"" )"		5587479	0					
ANR	5587567	Callee	fprintf		5587479	0					
ANR	5587568	Identifier	fprintf		5587479	0					
ANR	5587569	ArgumentList	stderr		5587479	1					
ANR	5587570	Argument	stderr		5587479	0					
ANR	5587571	Identifier	stderr		5587479	0					
ANR	5587572	Argument	"""This command watches a log file, and indicates when\\n"""		5587479	1					
ANR	5587573	PrimaryExpression	"""This command watches a log file, and indicates when\\n"""		5587479	0					
ANR	5587574	ExpressionStatement	"fprintf ( stderr , ""a specific job (or all jobs mentioned in the log)\\n"" )"	67:1:2412:2481	5587479	10	True				
ANR	5587575	CallExpression	"fprintf ( stderr , ""a specific job (or all jobs mentioned in the log)\\n"" )"		5587479	0					
ANR	5587576	Callee	fprintf		5587479	0					
ANR	5587577	Identifier	fprintf		5587479	0					
ANR	5587578	ArgumentList	stderr		5587479	1					
ANR	5587579	Argument	stderr		5587479	0					
ANR	5587580	Identifier	stderr		5587479	0					
ANR	5587581	Argument	"""a specific job (or all jobs mentioned in the log)\\n"""		5587479	1					
ANR	5587582	PrimaryExpression	"""a specific job (or all jobs mentioned in the log)\\n"""		5587479	0					
ANR	5587583	ExpressionStatement	"fprintf ( stderr , ""have completed or aborted.  It returns success if\\n"" )"	68:1:2484:2553	5587479	11	True				
ANR	5587584	CallExpression	"fprintf ( stderr , ""have completed or aborted.  It returns success if\\n"" )"		5587479	0					
ANR	5587585	Callee	fprintf		5587479	0					
ANR	5587586	Identifier	fprintf		5587479	0					
ANR	5587587	ArgumentList	stderr		5587479	1					
ANR	5587588	Argument	stderr		5587479	0					
ANR	5587589	Identifier	stderr		5587479	0					
ANR	5587590	Argument	"""have completed or aborted.  It returns success if\\n"""		5587479	1					
ANR	5587591	PrimaryExpression	"""have completed or aborted.  It returns success if\\n"""		5587479	0					
ANR	5587592	ExpressionStatement	"fprintf ( stderr , ""all such jobs have completed or aborted, and returns\\n"" )"	69:1:2556:2628	5587479	12	True				
ANR	5587593	CallExpression	"fprintf ( stderr , ""all such jobs have completed or aborted, and returns\\n"" )"		5587479	0					
ANR	5587594	Callee	fprintf		5587479	0					
ANR	5587595	Identifier	fprintf		5587479	0					
ANR	5587596	ArgumentList	stderr		5587479	1					
ANR	5587597	Argument	stderr		5587479	0					
ANR	5587598	Identifier	stderr		5587479	0					
ANR	5587599	Argument	"""all such jobs have completed or aborted, and returns\\n"""		5587479	1					
ANR	5587600	PrimaryExpression	"""all such jobs have completed or aborted, and returns\\n"""		5587479	0					
ANR	5587601	ExpressionStatement	"fprintf ( stderr , ""failure otherwise.\\n\\n"" )"	70:1:2631:2671	5587479	13	True				
ANR	5587602	CallExpression	"fprintf ( stderr , ""failure otherwise.\\n\\n"" )"		5587479	0					
ANR	5587603	Callee	fprintf		5587479	0					
ANR	5587604	Identifier	fprintf		5587479	0					
ANR	5587605	ArgumentList	stderr		5587479	1					
ANR	5587606	Argument	stderr		5587479	0					
ANR	5587607	Identifier	stderr		5587479	0					
ANR	5587608	Argument	"""failure otherwise.\\n\\n"""		5587479	1					
ANR	5587609	PrimaryExpression	"""failure otherwise.\\n\\n"""		5587479	0					
ANR	5587610	ExpressionStatement	"fprintf ( stderr , ""Examples:\\n"" )"	72:1:2675:2704	5587479	14	True				
ANR	5587611	CallExpression	"fprintf ( stderr , ""Examples:\\n"" )"		5587479	0					
ANR	5587612	Callee	fprintf		5587479	0					
ANR	5587613	Identifier	fprintf		5587479	0					
ANR	5587614	ArgumentList	stderr		5587479	1					
ANR	5587615	Argument	stderr		5587479	0					
ANR	5587616	Identifier	stderr		5587479	0					
ANR	5587617	Argument	"""Examples:\\n"""		5587479	1					
ANR	5587618	PrimaryExpression	"""Examples:\\n"""		5587479	0					
ANR	5587619	ExpressionStatement	"fprintf ( stderr , ""    %s logfile\\n"" , cmd )"	73:1:2707:2745	5587479	15	True				
ANR	5587620	CallExpression	"fprintf ( stderr , ""    %s logfile\\n"" , cmd )"		5587479	0					
ANR	5587621	Callee	fprintf		5587479	0					
ANR	5587622	Identifier	fprintf		5587479	0					
ANR	5587623	ArgumentList	stderr		5587479	1					
ANR	5587624	Argument	stderr		5587479	0					
ANR	5587625	Identifier	stderr		5587479	0					
ANR	5587626	Argument	"""    %s logfile\\n"""		5587479	1					
ANR	5587627	PrimaryExpression	"""    %s logfile\\n"""		5587479	0					
ANR	5587628	Argument	cmd		5587479	2					
ANR	5587629	Identifier	cmd		5587479	0					
ANR	5587630	ExpressionStatement	"fprintf ( stderr , ""    %s logfile 35\\n"" , cmd )"	74:1:2748:2789	5587479	16	True				
ANR	5587631	CallExpression	"fprintf ( stderr , ""    %s logfile 35\\n"" , cmd )"		5587479	0					
ANR	5587632	Callee	fprintf		5587479	0					
ANR	5587633	Identifier	fprintf		5587479	0					
ANR	5587634	ArgumentList	stderr		5587479	1					
ANR	5587635	Argument	stderr		5587479	0					
ANR	5587636	Identifier	stderr		5587479	0					
ANR	5587637	Argument	"""    %s logfile 35\\n"""		5587479	1					
ANR	5587638	PrimaryExpression	"""    %s logfile 35\\n"""		5587479	0					
ANR	5587639	Argument	cmd		5587479	2					
ANR	5587640	Identifier	cmd		5587479	0					
ANR	5587641	ExpressionStatement	"fprintf ( stderr , ""    %s logfile 1406.35\\n"" , cmd )"	75:1:2792:2838	5587479	17	True				
ANR	5587642	CallExpression	"fprintf ( stderr , ""    %s logfile 1406.35\\n"" , cmd )"		5587479	0					
ANR	5587643	Callee	fprintf		5587479	0					
ANR	5587644	Identifier	fprintf		5587479	0					
ANR	5587645	ArgumentList	stderr		5587479	1					
ANR	5587646	Argument	stderr		5587479	0					
ANR	5587647	Identifier	stderr		5587479	0					
ANR	5587648	Argument	"""    %s logfile 1406.35\\n"""		5587479	1					
ANR	5587649	PrimaryExpression	"""    %s logfile 1406.35\\n"""		5587479	0					
ANR	5587650	Argument	cmd		5587479	2					
ANR	5587651	Identifier	cmd		5587479	0					
ANR	5587652	ExpressionStatement	"fprintf ( stderr , ""    %s -wait 60 logfile 13.25.3\\n"" , cmd )"	76:1:2841:2896	5587479	18	True				
ANR	5587653	CallExpression	"fprintf ( stderr , ""    %s -wait 60 logfile 13.25.3\\n"" , cmd )"		5587479	0					
ANR	5587654	Callee	fprintf		5587479	0					
ANR	5587655	Identifier	fprintf		5587479	0					
ANR	5587656	ArgumentList	stderr		5587479	1					
ANR	5587657	Argument	stderr		5587479	0					
ANR	5587658	Identifier	stderr		5587479	0					
ANR	5587659	Argument	"""    %s -wait 60 logfile 13.25.3\\n"""		5587479	1					
ANR	5587660	PrimaryExpression	"""    %s -wait 60 logfile 13.25.3\\n"""		5587479	0					
ANR	5587661	Argument	cmd		5587479	2					
ANR	5587662	Identifier	cmd		5587479	0					
ANR	5587663	ExpressionStatement	"fprintf ( stderr , ""    %s -num 2 logfile\\n"" , cmd )"	77:1:2899:2944	5587479	19	True				
ANR	5587664	CallExpression	"fprintf ( stderr , ""    %s -num 2 logfile\\n"" , cmd )"		5587479	0					
ANR	5587665	Callee	fprintf		5587479	0					
ANR	5587666	Identifier	fprintf		5587479	0					
ANR	5587667	ArgumentList	stderr		5587479	1					
ANR	5587668	Argument	stderr		5587479	0					
ANR	5587669	Identifier	stderr		5587479	0					
ANR	5587670	Argument	"""    %s -num 2 logfile\\n"""		5587479	1					
ANR	5587671	PrimaryExpression	"""    %s -num 2 logfile\\n"""		5587479	0					
ANR	5587672	Argument	cmd		5587479	2					
ANR	5587673	Identifier	cmd		5587479	0					
ANR	5587674	ReturnType	static void		5587479	1					
ANR	5587675	Identifier	usage		5587479	2					
ANR	5587676	ParameterList	char * cmd		5587479	3					
ANR	5587677	Parameter	char * cmd	54:19:1730:1738	5587479	0	True				
ANR	5587678	ParameterType	char *		5587479	0					
ANR	5587679	Identifier	cmd		5587479	1					
ANR	5587680	CFGEntryNode	ENTRY		5587479		True				
ANR	5587681	CFGExitNode	EXIT		5587479		True				
ANR	5587682	Symbol	cmd		5587479						
ANR	5587683	Symbol	stderr		5587479						
ANR	5587684	Function	version	80:0:2949:3031							
ANR	5587685	FunctionDef	version ()		5587684	0					
ANR	5587686	CompoundStatement		81:0:2971:3031	5587684	0					
ANR	5587687	ExpressionStatement	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"	82:1:2974:3029	5587684	0	True				
ANR	5587688	CallExpression	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"		5587684	0					
ANR	5587689	Callee	printf		5587684	0					
ANR	5587690	Identifier	printf		5587684	0					
ANR	5587691	ArgumentList	"""%s\\n%s\\n"""		5587684	1					
ANR	5587692	Argument	"""%s\\n%s\\n"""		5587684	0					
ANR	5587693	PrimaryExpression	"""%s\\n%s\\n"""		5587684	0					
ANR	5587694	Argument	CondorVersion ( )		5587684	1					
ANR	5587695	CallExpression	CondorVersion ( )		5587684	0					
ANR	5587696	Callee	CondorVersion		5587684	0					
ANR	5587697	Identifier	CondorVersion		5587684	0					
ANR	5587698	ArgumentList			5587684	1					
ANR	5587699	Argument	CondorPlatform ( )		5587684	2					
ANR	5587700	CallExpression	CondorPlatform ( )		5587684	0					
ANR	5587701	Callee	CondorPlatform		5587684	0					
ANR	5587702	Identifier	CondorPlatform		5587684	0					
ANR	5587703	ArgumentList			5587684	1					
ANR	5587704	ReturnType	static void		5587684	1					
ANR	5587705	Identifier	version		5587684	2					
ANR	5587706	ParameterList			5587684	3					
ANR	5587707	CFGEntryNode	ENTRY		5587684		True				
ANR	5587708	CFGExitNode	EXIT		5587684		True				
ANR	5587709	Symbol	CondorVersion		5587684						
ANR	5587710	Symbol	CondorPlatform		5587684						
ANR	5587711	Function	jobnum_matches	85:0:3034:3307							
ANR	5587712	FunctionDef	"jobnum_matches (ULogEvent * event , int cluster , int process , int subproc)"		5587711	0					
ANR	5587713	CompoundStatement		86:0:3119:3307	5587711	0					
ANR	5587714	ReturnStatement	return ( ( event -> cluster == cluster ) || ( cluster == ANY_NUMBER ) ) && ( ( event -> proc == process ) || ( process == ANY_NUMBER ) ) && ( ( event -> subproc == subproc ) || ( subproc == ANY_NUMBER ) ) ;	87:1:3122:3305	5587711	0	True				
ANR	5587715	AndExpression	( ( event -> cluster == cluster ) || ( cluster == ANY_NUMBER ) ) && ( ( event -> proc == process ) || ( process == ANY_NUMBER ) ) && ( ( event -> subproc == subproc ) || ( subproc == ANY_NUMBER ) )		5587711	0		&&			
ANR	5587716	OrExpression	( event -> cluster == cluster ) || ( cluster == ANY_NUMBER )		5587711	0		||			
ANR	5587717	EqualityExpression	event -> cluster == cluster		5587711	0		==			
ANR	5587718	PtrMemberAccess	event -> cluster		5587711	0					
ANR	5587719	Identifier	event		5587711	0					
ANR	5587720	Identifier	cluster		5587711	1					
ANR	5587721	Identifier	cluster		5587711	1					
ANR	5587722	EqualityExpression	cluster == ANY_NUMBER		5587711	1		==			
ANR	5587723	Identifier	cluster		5587711	0					
ANR	5587724	Identifier	ANY_NUMBER		5587711	1					
ANR	5587725	AndExpression	( ( event -> proc == process ) || ( process == ANY_NUMBER ) ) && ( ( event -> subproc == subproc ) || ( subproc == ANY_NUMBER ) )		5587711	1		&&			
ANR	5587726	OrExpression	( event -> proc == process ) || ( process == ANY_NUMBER )		5587711	0		||			
ANR	5587727	EqualityExpression	event -> proc == process		5587711	0		==			
ANR	5587728	PtrMemberAccess	event -> proc		5587711	0					
ANR	5587729	Identifier	event		5587711	0					
ANR	5587730	Identifier	proc		5587711	1					
ANR	5587731	Identifier	process		5587711	1					
ANR	5587732	EqualityExpression	process == ANY_NUMBER		5587711	1		==			
ANR	5587733	Identifier	process		5587711	0					
ANR	5587734	Identifier	ANY_NUMBER		5587711	1					
ANR	5587735	OrExpression	( event -> subproc == subproc ) || ( subproc == ANY_NUMBER )		5587711	1		||			
ANR	5587736	EqualityExpression	event -> subproc == subproc		5587711	0		==			
ANR	5587737	PtrMemberAccess	event -> subproc		5587711	0					
ANR	5587738	Identifier	event		5587711	0					
ANR	5587739	Identifier	subproc		5587711	1					
ANR	5587740	Identifier	subproc		5587711	1					
ANR	5587741	EqualityExpression	subproc == ANY_NUMBER		5587711	1		==			
ANR	5587742	Identifier	subproc		5587711	0					
ANR	5587743	Identifier	ANY_NUMBER		5587711	1					
ANR	5587744	ReturnType	static int		5587711	1					
ANR	5587745	Identifier	jobnum_matches		5587711	2					
ANR	5587746	ParameterList	"ULogEvent * event , int cluster , int process , int subproc"		5587711	3					
ANR	5587747	Parameter	ULogEvent * event	85:27:3061:3076	5587711	0	True				
ANR	5587748	ParameterType	ULogEvent *		5587711	0					
ANR	5587749	Identifier	event		5587711	1					
ANR	5587750	Parameter	int cluster	85:45:3079:3089	5587711	1	True				
ANR	5587751	ParameterType	int		5587711	0					
ANR	5587752	Identifier	cluster		5587711	1					
ANR	5587753	Parameter	int process	85:58:3092:3102	5587711	2	True				
ANR	5587754	ParameterType	int		5587711	0					
ANR	5587755	Identifier	process		5587711	1					
ANR	5587756	Parameter	int subproc	85:71:3105:3115	5587711	3	True				
ANR	5587757	ParameterType	int		5587711	0					
ANR	5587758	Identifier	subproc		5587711	1					
ANR	5587759	CFGEntryNode	ENTRY		5587711		True				
ANR	5587760	CFGExitNode	EXIT		5587711		True				
ANR	5587761	Symbol	cluster		5587711						
ANR	5587762	Symbol	process		5587711						
ANR	5587763	Symbol	* event		5587711						
ANR	5587764	Symbol	subproc		5587711						
ANR	5587765	Symbol	event		5587711						
ANR	5587766	Symbol	event -> subproc		5587711						
ANR	5587767	Symbol	event -> proc		5587711						
ANR	5587768	Symbol	event -> cluster		5587711						
ANR	5587769	Symbol	ANY_NUMBER		5587711						
ANR	5587770	Function	main	93:0:3310:8469							
ANR	5587771	FunctionDef	"main (int argc , char * argv [ ])"		5587770	0					
ANR	5587772	CompoundStatement		94:0:3345:8469	5587770	0					
ANR	5587773	IdentifierDeclStatement	int i ;	95:1:3348:3353	5587770	0	True				
ANR	5587774	IdentifierDecl	i		5587770	0					
ANR	5587775	IdentifierDeclType	int		5587770	0					
ANR	5587776	Identifier	i		5587770	1					
ANR	5587777	IdentifierDeclStatement	char * log_file_name = 0 ;	96:1:3356:3379	5587770	1	True				
ANR	5587778	IdentifierDecl	* log_file_name = 0		5587770	0					
ANR	5587779	IdentifierDeclType	char *		5587770	0					
ANR	5587780	Identifier	log_file_name		5587770	1					
ANR	5587781	AssignmentExpression	* log_file_name = 0		5587770	2		=			
ANR	5587782	Identifier	log_file_name		5587770	0					
ANR	5587783	PrimaryExpression	0		5587770	1					
ANR	5587784	IdentifierDeclStatement	char * job_name = 0 ;	97:1:3382:3400	5587770	2	True				
ANR	5587785	IdentifierDecl	* job_name = 0		5587770	0					
ANR	5587786	IdentifierDeclType	char *		5587770	0					
ANR	5587787	Identifier	job_name		5587770	1					
ANR	5587788	AssignmentExpression	* job_name = 0		5587770	2		=			
ANR	5587789	Identifier	job_name		5587770	0					
ANR	5587790	PrimaryExpression	0		5587770	1					
ANR	5587791	IdentifierDeclStatement	"time_t waittime = 0 , stoptime = 0 ;"	98:1:3403:3432	5587770	3	True				
ANR	5587792	IdentifierDecl	waittime = 0		5587770	0					
ANR	5587793	IdentifierDeclType	time_t		5587770	0					
ANR	5587794	Identifier	waittime		5587770	1					
ANR	5587795	AssignmentExpression	waittime = 0		5587770	2		=			
ANR	5587796	Identifier	waittime		5587770	0					
ANR	5587797	PrimaryExpression	0		5587770	1					
ANR	5587798	IdentifierDecl	stoptime = 0		5587770	1					
ANR	5587799	IdentifierDeclType	time_t		5587770	0					
ANR	5587800	Identifier	stoptime		5587770	1					
ANR	5587801	AssignmentExpression	stoptime = 0		5587770	2		=			
ANR	5587802	Identifier	stoptime		5587770	0					
ANR	5587803	PrimaryExpression	0		5587770	1					
ANR	5587804	IdentifierDeclStatement	int minjobs = 0 ;	99:1:3435:3450	5587770	4	True				
ANR	5587805	IdentifierDecl	minjobs = 0		5587770	0					
ANR	5587806	IdentifierDeclType	int		5587770	0					
ANR	5587807	Identifier	minjobs		5587770	1					
ANR	5587808	AssignmentExpression	minjobs = 0		5587770	2		=			
ANR	5587809	Identifier	minjobs		5587770	0					
ANR	5587810	PrimaryExpression	0		5587770	1					
ANR	5587811	IdentifierDeclStatement	param_functions * p_funcs = NULL ;	100:1:3453:3484	5587770	5	True				
ANR	5587812	IdentifierDecl	* p_funcs = NULL		5587770	0					
ANR	5587813	IdentifierDeclType	param_functions *		5587770	0					
ANR	5587814	Identifier	p_funcs		5587770	1					
ANR	5587815	AssignmentExpression	* p_funcs = NULL		5587770	2		=			
ANR	5587816	Identifier	NULL		5587770	0					
ANR	5587817	Identifier	NULL		5587770	1					
ANR	5587818	ExpressionStatement	"myDistro -> Init ( argc , argv )"	102:1:3488:3516	5587770	6	True				
ANR	5587819	CallExpression	"myDistro -> Init ( argc , argv )"		5587770	0					
ANR	5587820	Callee	myDistro -> Init		5587770	0					
ANR	5587821	PtrMemberAccess	myDistro -> Init		5587770	0					
ANR	5587822	Identifier	myDistro		5587770	0					
ANR	5587823	Identifier	Init		5587770	1					
ANR	5587824	ArgumentList	argc		5587770	1					
ANR	5587825	Argument	argc		5587770	0					
ANR	5587826	Identifier	argc		5587770	0					
ANR	5587827	Argument	argv		5587770	1					
ANR	5587828	Identifier	argv		5587770	0					
ANR	5587829	ExpressionStatement	config ( )	103:1:3519:3527	5587770	7	True				
ANR	5587830	CallExpression	config ( )		5587770	0					
ANR	5587831	Callee	config		5587770	0					
ANR	5587832	Identifier	config		5587770	0					
ANR	5587833	ArgumentList			5587770	1					
ANR	5587834	ForStatement	for ( i = 1 ; i < argc ; i ++ )		5587770	8					
ANR	5587835	ForInit	i = 1 ;	105:6:3536:3539	5587770	0	True				
ANR	5587836	AssignmentExpression	i = 1		5587770	0		=			
ANR	5587837	Identifier	i		5587770	0					
ANR	5587838	PrimaryExpression	1		5587770	1					
ANR	5587839	Condition	i < argc	105:11:3541:3546	5587770	1	True				
ANR	5587840	RelationalExpression	i < argc		5587770	0		<			
ANR	5587841	Identifier	i		5587770	0					
ANR	5587842	Identifier	argc		5587770	1					
ANR	5587843	PostIncDecOperationExpression	i ++	105:19:3549:3551	5587770	2	True				
ANR	5587844	Identifier	i		5587770	0					
ANR	5587845	IncDec	++		5587770	1					
ANR	5587846	CompoundStatement		12:25:209:209	5587770	3					
ANR	5587847	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-help"" ) )"		5587770	0					
ANR	5587848	Condition	"! strcmp ( argv [ i ] , ""-help"" )"	106:5:3562:3585	5587770	0	True				
ANR	5587849	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-help"" )"		5587770	0					
ANR	5587850	UnaryOperator	!		5587770	0					
ANR	5587851	CallExpression	"strcmp ( argv [ i ] , ""-help"" )"		5587770	1					
ANR	5587852	Callee	strcmp		5587770	0					
ANR	5587853	Identifier	strcmp		5587770	0					
ANR	5587854	ArgumentList	argv [ i ]		5587770	1					
ANR	5587855	Argument	argv [ i ]		5587770	0					
ANR	5587856	ArrayIndexing	argv [ i ]		5587770	0					
ANR	5587857	Identifier	argv		5587770	0					
ANR	5587858	Identifier	i		5587770	1					
ANR	5587859	Argument	"""-help"""		5587770	1					
ANR	5587860	PrimaryExpression	"""-help"""		5587770	0					
ANR	5587861	CompoundStatement		13:31:242:242	5587770	1					
ANR	5587862	ExpressionStatement	usage ( argv [ 0 ] )	107:3:3593:3607	5587770	0	True				
ANR	5587863	CallExpression	usage ( argv [ 0 ] )		5587770	0					
ANR	5587864	Callee	usage		5587770	0					
ANR	5587865	Identifier	usage		5587770	0					
ANR	5587866	ArgumentList	argv [ 0 ]		5587770	1					
ANR	5587867	Argument	argv [ 0 ]		5587770	0					
ANR	5587868	ArrayIndexing	argv [ 0 ]		5587770	0					
ANR	5587869	Identifier	argv		5587770	0					
ANR	5587870	PrimaryExpression	0		5587770	1					
ANR	5587871	ExpressionStatement	EXIT_FAILURE	108:3:3612:3624	5587770	1	True				
ANR	5587872	Identifier	EXIT_FAILURE		5587770	0					
ANR	5587873	ElseStatement	else		5587770	0					
ANR	5587874	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-version"" ) )"		5587770	0					
ANR	5587875	Condition	"! strcmp ( argv [ i ] , ""-version"" )"	109:12:3638:3664	5587770	0	True				
ANR	5587876	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-version"" )"		5587770	0					
ANR	5587877	UnaryOperator	!		5587770	0					
ANR	5587878	CallExpression	"strcmp ( argv [ i ] , ""-version"" )"		5587770	1					
ANR	5587879	Callee	strcmp		5587770	0					
ANR	5587880	Identifier	strcmp		5587770	0					
ANR	5587881	ArgumentList	argv [ i ]		5587770	1					
ANR	5587882	Argument	argv [ i ]		5587770	0					
ANR	5587883	ArrayIndexing	argv [ i ]		5587770	0					
ANR	5587884	Identifier	argv		5587770	0					
ANR	5587885	Identifier	i		5587770	1					
ANR	5587886	Argument	"""-version"""		5587770	1					
ANR	5587887	PrimaryExpression	"""-version"""		5587770	0					
ANR	5587888	CompoundStatement		16:41:321:321	5587770	1					
ANR	5587889	ExpressionStatement	version ( )	110:3:3672:3681	5587770	0	True				
ANR	5587890	CallExpression	version ( )		5587770	0					
ANR	5587891	Callee	version		5587770	0					
ANR	5587892	Identifier	version		5587770	0					
ANR	5587893	ArgumentList			5587770	1					
ANR	5587894	ExpressionStatement	EXIT_FAILURE	111:3:3686:3698	5587770	1	True				
ANR	5587895	Identifier	EXIT_FAILURE		5587770	0					
ANR	5587896	ElseStatement	else		5587770	0					
ANR	5587897	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-debug"" ) )"		5587770	0					
ANR	5587898	Condition	"! strcmp ( argv [ i ] , ""-debug"" )"	112:12:3712:3736	5587770	0	True				
ANR	5587899	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-debug"" )"		5587770	0					
ANR	5587900	UnaryOperator	!		5587770	0					
ANR	5587901	CallExpression	"strcmp ( argv [ i ] , ""-debug"" )"		5587770	1					
ANR	5587902	Callee	strcmp		5587770	0					
ANR	5587903	Identifier	strcmp		5587770	0					
ANR	5587904	ArgumentList	argv [ i ]		5587770	1					
ANR	5587905	Argument	argv [ i ]		5587770	0					
ANR	5587906	ArrayIndexing	argv [ i ]		5587770	0					
ANR	5587907	Identifier	argv		5587770	0					
ANR	5587908	Identifier	i		5587770	1					
ANR	5587909	Argument	"""-debug"""		5587770	1					
ANR	5587910	PrimaryExpression	"""-debug"""		5587770	0					
ANR	5587911	CompoundStatement		19:39:393:393	5587770	1					
ANR	5587912	ExpressionStatement	Termlog = 1	114:3:3769:3780	5587770	0	True				
ANR	5587913	AssignmentExpression	Termlog = 1		5587770	0		=			
ANR	5587914	Identifier	Termlog		5587770	0					
ANR	5587915	PrimaryExpression	1		5587770	1					
ANR	5587916	ExpressionStatement	p_funcs = get_param_functions ( )	115:3:3785:3816	5587770	1	True				
ANR	5587917	AssignmentExpression	p_funcs = get_param_functions ( )		5587770	0		=			
ANR	5587918	Identifier	p_funcs		5587770	0					
ANR	5587919	CallExpression	get_param_functions ( )		5587770	1					
ANR	5587920	Callee	get_param_functions		5587770	0					
ANR	5587921	Identifier	get_param_functions		5587770	0					
ANR	5587922	ArgumentList			5587770	1					
ANR	5587923	ExpressionStatement	"dprintf_config ( ""TOOL"" , p_funcs )"	116:3:3821:3853	5587770	2	True				
ANR	5587924	CallExpression	"dprintf_config ( ""TOOL"" , p_funcs )"		5587770	0					
ANR	5587925	Callee	dprintf_config		5587770	0					
ANR	5587926	Identifier	dprintf_config		5587770	0					
ANR	5587927	ArgumentList	"""TOOL"""		5587770	1					
ANR	5587928	Argument	"""TOOL"""		5587770	0					
ANR	5587929	PrimaryExpression	"""TOOL"""		5587770	0					
ANR	5587930	Argument	p_funcs		5587770	1					
ANR	5587931	Identifier	p_funcs		5587770	0					
ANR	5587932	ElseStatement	else		5587770	0					
ANR	5587933	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-wait"" ) )"		5587770	0					
ANR	5587934	Condition	"! strcmp ( argv [ i ] , ""-wait"" )"	117:12:3867:3890	5587770	0	True				
ANR	5587935	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-wait"" )"		5587770	0					
ANR	5587936	UnaryOperator	!		5587770	0					
ANR	5587937	CallExpression	"strcmp ( argv [ i ] , ""-wait"" )"		5587770	1					
ANR	5587938	Callee	strcmp		5587770	0					
ANR	5587939	Identifier	strcmp		5587770	0					
ANR	5587940	ArgumentList	argv [ i ]		5587770	1					
ANR	5587941	Argument	argv [ i ]		5587770	0					
ANR	5587942	ArrayIndexing	argv [ i ]		5587770	0					
ANR	5587943	Identifier	argv		5587770	0					
ANR	5587944	Identifier	i		5587770	1					
ANR	5587945	Argument	"""-wait"""		5587770	1					
ANR	5587946	PrimaryExpression	"""-wait"""		5587770	0					
ANR	5587947	CompoundStatement		24:38:547:547	5587770	1					
ANR	5587948	ExpressionStatement	i ++	118:3:3898:3901	5587770	0	True				
ANR	5587949	PostIncDecOperationExpression	i ++		5587770	0					
ANR	5587950	Identifier	i		5587770	0					
ANR	5587951	IncDec	++		5587770	1					
ANR	5587952	IfStatement	if ( i >= argc )		5587770	1					
ANR	5587953	Condition	i >= argc	119:6:3909:3915	5587770	0	True				
ANR	5587954	RelationalExpression	i >= argc		5587770	0		>=			
ANR	5587955	Identifier	i		5587770	0					
ANR	5587956	Identifier	argc		5587770	1					
ANR	5587957	CompoundStatement		26:15:572:572	5587770	1					
ANR	5587958	ExpressionStatement	"fprintf ( stderr , ""-wait requires an argument\\n"" )"	120:4:3924:3970	5587770	0	True				
ANR	5587959	CallExpression	"fprintf ( stderr , ""-wait requires an argument\\n"" )"		5587770	0					
ANR	5587960	Callee	fprintf		5587770	0					
ANR	5587961	Identifier	fprintf		5587770	0					
ANR	5587962	ArgumentList	stderr		5587770	1					
ANR	5587963	Argument	stderr		5587770	0					
ANR	5587964	Identifier	stderr		5587770	0					
ANR	5587965	Argument	"""-wait requires an argument\\n"""		5587770	1					
ANR	5587966	PrimaryExpression	"""-wait requires an argument\\n"""		5587770	0					
ANR	5587967	ExpressionStatement	usage ( argv [ 0 ] )	121:4:3976:3990	5587770	1	True				
ANR	5587968	CallExpression	usage ( argv [ 0 ] )		5587770	0					
ANR	5587969	Callee	usage		5587770	0					
ANR	5587970	Identifier	usage		5587770	0					
ANR	5587971	ArgumentList	argv [ 0 ]		5587770	1					
ANR	5587972	Argument	argv [ 0 ]		5587770	0					
ANR	5587973	ArrayIndexing	argv [ 0 ]		5587770	0					
ANR	5587974	Identifier	argv		5587770	0					
ANR	5587975	PrimaryExpression	0		5587770	1					
ANR	5587976	ExpressionStatement	EXIT_FAILURE	122:4:3996:4008	5587770	2	True				
ANR	5587977	Identifier	EXIT_FAILURE		5587770	0					
ANR	5587978	ExpressionStatement	waittime = atoi ( argv [ i ] )	124:3:4018:4042	5587770	2	True				
ANR	5587979	AssignmentExpression	waittime = atoi ( argv [ i ] )		5587770	0		=			
ANR	5587980	Identifier	waittime		5587770	0					
ANR	5587981	CallExpression	atoi ( argv [ i ] )		5587770	1					
ANR	5587982	Callee	atoi		5587770	0					
ANR	5587983	Identifier	atoi		5587770	0					
ANR	5587984	ArgumentList	argv [ i ]		5587770	1					
ANR	5587985	Argument	argv [ i ]		5587770	0					
ANR	5587986	ArrayIndexing	argv [ i ]		5587770	0					
ANR	5587987	Identifier	argv		5587770	0					
ANR	5587988	Identifier	i		5587770	1					
ANR	5587989	ExpressionStatement	stoptime = time ( 0 ) + waittime	125:3:4047:4076	5587770	3	True				
ANR	5587990	AssignmentExpression	stoptime = time ( 0 ) + waittime		5587770	0		=			
ANR	5587991	Identifier	stoptime		5587770	0					
ANR	5587992	AdditiveExpression	time ( 0 ) + waittime		5587770	1		+			
ANR	5587993	CallExpression	time ( 0 )		5587770	0					
ANR	5587994	Callee	time		5587770	0					
ANR	5587995	Identifier	time		5587770	0					
ANR	5587996	ArgumentList	0		5587770	1					
ANR	5587997	Argument	0		5587770	0					
ANR	5587998	PrimaryExpression	0		5587770	0					
ANR	5587999	Identifier	waittime		5587770	1					
ANR	5588000	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Will wait until %s\\n"" , ctime ( & stoptime ) )"	126:3:4081:4141	5587770	4	True				
ANR	5588001	CallExpression	"dprintf ( D_FULLDEBUG , ""Will wait until %s\\n"" , ctime ( & stoptime ) )"		5587770	0					
ANR	5588002	Callee	dprintf		5587770	0					
ANR	5588003	Identifier	dprintf		5587770	0					
ANR	5588004	ArgumentList	D_FULLDEBUG		5587770	1					
ANR	5588005	Argument	D_FULLDEBUG		5587770	0					
ANR	5588006	Identifier	D_FULLDEBUG		5587770	0					
ANR	5588007	Argument	"""Will wait until %s\\n"""		5587770	1					
ANR	5588008	PrimaryExpression	"""Will wait until %s\\n"""		5587770	0					
ANR	5588009	Argument	ctime ( & stoptime )		5587770	2					
ANR	5588010	CallExpression	ctime ( & stoptime )		5587770	0					
ANR	5588011	Callee	ctime		5587770	0					
ANR	5588012	Identifier	ctime		5587770	0					
ANR	5588013	ArgumentList	& stoptime		5587770	1					
ANR	5588014	Argument	& stoptime		5587770	0					
ANR	5588015	UnaryOperationExpression	& stoptime		5587770	0					
ANR	5588016	UnaryOperator	&		5587770	0					
ANR	5588017	Identifier	stoptime		5587770	1					
ANR	5588018	ElseStatement	else		5587770	0					
ANR	5588019	IfStatement	"if ( ! strcmp ( argv [ i ] , ""-num"" ) )"		5587770	0					
ANR	5588020	Condition	"! strcmp ( argv [ i ] , ""-num"" )"	127:13:4156:4181	5587770	0	True				
ANR	5588021	UnaryOperationExpression	"! strcmp ( argv [ i ] , ""-num"" )"		5587770	0					
ANR	5588022	UnaryOperator	!		5587770	0					
ANR	5588023	CallExpression	"strcmp ( argv [ i ] , ""-num"" )"		5587770	1					
ANR	5588024	Callee	strcmp		5587770	0					
ANR	5588025	Identifier	strcmp		5587770	0					
ANR	5588026	ArgumentList	argv [ i ]		5587770	1					
ANR	5588027	Argument	argv [ i ]		5587770	0					
ANR	5588028	ArrayIndexing	argv [ i ]		5587770	0					
ANR	5588029	Identifier	argv		5587770	0					
ANR	5588030	Identifier	i		5587770	1					
ANR	5588031	Argument	"""-num"""		5587770	1					
ANR	5588032	PrimaryExpression	"""-num"""		5587770	0					
ANR	5588033	CompoundStatement		34:42:839:839	5587770	1					
ANR	5588034	ExpressionStatement	i ++	128:3:4190:4193	5587770	0	True				
ANR	5588035	PostIncDecOperationExpression	i ++		5587770	0					
ANR	5588036	Identifier	i		5587770	0					
ANR	5588037	IncDec	++		5587770	1					
ANR	5588038	IfStatement	if ( i >= argc )		5587770	1					
ANR	5588039	Condition	i >= argc	129:7:4202:4210	5587770	0	True				
ANR	5588040	RelationalExpression	i >= argc		5587770	0		>=			
ANR	5588041	Identifier	i		5587770	0					
ANR	5588042	Identifier	argc		5587770	1					
ANR	5588043	CompoundStatement		36:19:868:868	5587770	1					
ANR	5588044	ExpressionStatement	"fprintf ( stderr , ""-num requires an argument\\n"" )"	130:4:4220:4268	5587770	0	True				
ANR	5588045	CallExpression	"fprintf ( stderr , ""-num requires an argument\\n"" )"		5587770	0					
ANR	5588046	Callee	fprintf		5587770	0					
ANR	5588047	Identifier	fprintf		5587770	0					
ANR	5588048	ArgumentList	stderr		5587770	1					
ANR	5588049	Argument	stderr		5587770	0					
ANR	5588050	Identifier	stderr		5587770	0					
ANR	5588051	Argument	"""-num requires an argument\\n"""		5587770	1					
ANR	5588052	PrimaryExpression	"""-num requires an argument\\n"""		5587770	0					
ANR	5588053	ExpressionStatement	usage ( argv [ 0 ] )	131:4:4274:4290	5587770	1	True				
ANR	5588054	CallExpression	usage ( argv [ 0 ] )		5587770	0					
ANR	5588055	Callee	usage		5587770	0					
ANR	5588056	Identifier	usage		5587770	0					
ANR	5588057	ArgumentList	argv [ 0 ]		5587770	1					
ANR	5588058	Argument	argv [ 0 ]		5587770	0					
ANR	5588059	ArrayIndexing	argv [ 0 ]		5587770	0					
ANR	5588060	Identifier	argv		5587770	0					
ANR	5588061	PrimaryExpression	0		5587770	1					
ANR	5588062	ExpressionStatement	EXIT_FAILURE	132:4:4296:4308	5587770	2	True				
ANR	5588063	Identifier	EXIT_FAILURE		5587770	0					
ANR	5588064	ExpressionStatement	minjobs = atoi ( argv [ i ] )	134:3:4318:4343	5587770	2	True				
ANR	5588065	AssignmentExpression	minjobs = atoi ( argv [ i ] )		5587770	0		=			
ANR	5588066	Identifier	minjobs		5587770	0					
ANR	5588067	CallExpression	atoi ( argv [ i ] )		5587770	1					
ANR	5588068	Callee	atoi		5587770	0					
ANR	5588069	Identifier	atoi		5587770	0					
ANR	5588070	ArgumentList	argv [ i ]		5587770	1					
ANR	5588071	Argument	argv [ i ]		5587770	0					
ANR	5588072	ArrayIndexing	argv [ i ]		5587770	0					
ANR	5588073	Identifier	argv		5587770	0					
ANR	5588074	Identifier	i		5587770	1					
ANR	5588075	IfStatement	if ( minjobs < 1 )		5587770	3					
ANR	5588076	Condition	minjobs < 1	135:7:4352:4362	5587770	0	True				
ANR	5588077	RelationalExpression	minjobs < 1		5587770	0		<			
ANR	5588078	Identifier	minjobs		5587770	0					
ANR	5588079	PrimaryExpression	1		5587770	1					
ANR	5588080	CompoundStatement		42:21:1020:1020	5587770	1					
ANR	5588081	ExpressionStatement	"fprintf ( stderr , ""-num must be greater than zero\\n"" )"	136:4:4372:4425	5587770	0	True				
ANR	5588082	CallExpression	"fprintf ( stderr , ""-num must be greater than zero\\n"" )"		5587770	0					
ANR	5588083	Callee	fprintf		5587770	0					
ANR	5588084	Identifier	fprintf		5587770	0					
ANR	5588085	ArgumentList	stderr		5587770	1					
ANR	5588086	Argument	stderr		5587770	0					
ANR	5588087	Identifier	stderr		5587770	0					
ANR	5588088	Argument	"""-num must be greater than zero\\n"""		5587770	1					
ANR	5588089	PrimaryExpression	"""-num must be greater than zero\\n"""		5587770	0					
ANR	5588090	ExpressionStatement	usage ( argv [ 0 ] )	137:4:4431:4447	5587770	1	True				
ANR	5588091	CallExpression	usage ( argv [ 0 ] )		5587770	0					
ANR	5588092	Callee	usage		5587770	0					
ANR	5588093	Identifier	usage		5587770	0					
ANR	5588094	ArgumentList	argv [ 0 ]		5587770	1					
ANR	5588095	Argument	argv [ 0 ]		5587770	0					
ANR	5588096	ArrayIndexing	argv [ 0 ]		5587770	0					
ANR	5588097	Identifier	argv		5587770	0					
ANR	5588098	PrimaryExpression	0		5587770	1					
ANR	5588099	ExpressionStatement	EXIT_FAILURE	138:4:4453:4465	5587770	2	True				
ANR	5588100	Identifier	EXIT_FAILURE		5587770	0					
ANR	5588101	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Will wait until %d jobs end\\n"" , minjobs )"	140:3:4475:4539	5587770	4	True				
ANR	5588102	CallExpression	"dprintf ( D_FULLDEBUG , ""Will wait until %d jobs end\\n"" , minjobs )"		5587770	0					
ANR	5588103	Callee	dprintf		5587770	0					
ANR	5588104	Identifier	dprintf		5587770	0					
ANR	5588105	ArgumentList	D_FULLDEBUG		5587770	1					
ANR	5588106	Argument	D_FULLDEBUG		5587770	0					
ANR	5588107	Identifier	D_FULLDEBUG		5587770	0					
ANR	5588108	Argument	"""Will wait until %d jobs end\\n"""		5587770	1					
ANR	5588109	PrimaryExpression	"""Will wait until %d jobs end\\n"""		5587770	0					
ANR	5588110	Argument	minjobs		5587770	2					
ANR	5588111	Identifier	minjobs		5587770	0					
ANR	5588112	ElseStatement	else		5587770	0					
ANR	5588113	IfStatement	if ( argv [ i ] [ 0 ] != '-' )		5587770	0					
ANR	5588114	Condition	argv [ i ] [ 0 ] != '-'	141:12:4553:4567	5587770	0	True				
ANR	5588115	EqualityExpression	argv [ i ] [ 0 ] != '-'		5587770	0		!=			
ANR	5588116	ArrayIndexing	argv [ i ] [ 0 ]		5587770	0					
ANR	5588117	ArrayIndexing	argv [ i ]		5587770	0					
ANR	5588118	Identifier	argv		5587770	0					
ANR	5588119	Identifier	i		5587770	1					
ANR	5588120	PrimaryExpression	0		5587770	1					
ANR	5588121	PrimaryExpression	'-'		5587770	1					
ANR	5588122	CompoundStatement		48:29:1224:1224	5587770	1					
ANR	5588123	IfStatement	if ( ! log_file_name )		5587770	0					
ANR	5588124	Condition	! log_file_name	142:6:4578:4591	5587770	0	True				
ANR	5588125	UnaryOperationExpression	! log_file_name		5587770	0					
ANR	5588126	UnaryOperator	!		5587770	0					
ANR	5588127	Identifier	log_file_name		5587770	1					
ANR	5588128	CompoundStatement		49:22:1248:1248	5587770	1					
ANR	5588129	ExpressionStatement	log_file_name = argv [ i ]	143:4:4600:4623	5587770	0	True				
ANR	5588130	AssignmentExpression	log_file_name = argv [ i ]		5587770	0		=			
ANR	5588131	Identifier	log_file_name		5587770	0					
ANR	5588132	ArrayIndexing	argv [ i ]		5587770	1					
ANR	5588133	Identifier	argv		5587770	0					
ANR	5588134	Identifier	i		5587770	1					
ANR	5588135	ElseStatement	else		5587770	0					
ANR	5588136	IfStatement	if ( ! job_name )		5587770	0					
ANR	5588137	Condition	! job_name	144:13:4638:4646	5587770	0	True				
ANR	5588138	UnaryOperationExpression	! job_name		5587770	0					
ANR	5588139	UnaryOperator	!		5587770	0					
ANR	5588140	Identifier	job_name		5587770	1					
ANR	5588141	CompoundStatement		51:24:1303:1303	5587770	1					
ANR	5588142	ExpressionStatement	job_name = argv [ i ]	145:4:4655:4673	5587770	0	True				
ANR	5588143	AssignmentExpression	job_name = argv [ i ]		5587770	0		=			
ANR	5588144	Identifier	job_name		5587770	0					
ANR	5588145	ArrayIndexing	argv [ i ]		5587770	1					
ANR	5588146	Identifier	argv		5587770	0					
ANR	5588147	Identifier	i		5587770	1					
ANR	5588148	ElseStatement	else		5587770	0					
ANR	5588149	CompoundStatement		53:10:1339:1339	5587770	0					
ANR	5588150	ExpressionStatement	"fprintf ( stderr , ""Extra argument: %s\\n\\n"" , argv [ i ] )"	147:4:4691:4739	5587770	0	True				
ANR	5588151	CallExpression	"fprintf ( stderr , ""Extra argument: %s\\n\\n"" , argv [ i ] )"		5587770	0					
ANR	5588152	Callee	fprintf		5587770	0					
ANR	5588153	Identifier	fprintf		5587770	0					
ANR	5588154	ArgumentList	stderr		5587770	1					
ANR	5588155	Argument	stderr		5587770	0					
ANR	5588156	Identifier	stderr		5587770	0					
ANR	5588157	Argument	"""Extra argument: %s\\n\\n"""		5587770	1					
ANR	5588158	PrimaryExpression	"""Extra argument: %s\\n\\n"""		5587770	0					
ANR	5588159	Argument	argv [ i ]		5587770	2					
ANR	5588160	ArrayIndexing	argv [ i ]		5587770	0					
ANR	5588161	Identifier	argv		5587770	0					
ANR	5588162	Identifier	i		5587770	1					
ANR	5588163	ExpressionStatement	usage ( argv [ 0 ] )	148:4:4745:4759	5587770	1	True				
ANR	5588164	CallExpression	usage ( argv [ 0 ] )		5587770	0					
ANR	5588165	Callee	usage		5587770	0					
ANR	5588166	Identifier	usage		5587770	0					
ANR	5588167	ArgumentList	argv [ 0 ]		5587770	1					
ANR	5588168	Argument	argv [ 0 ]		5587770	0					
ANR	5588169	ArrayIndexing	argv [ 0 ]		5587770	0					
ANR	5588170	Identifier	argv		5587770	0					
ANR	5588171	PrimaryExpression	0		5587770	1					
ANR	5588172	ExpressionStatement	EXIT_FAILURE	149:4:4765:4777	5587770	2	True				
ANR	5588173	Identifier	EXIT_FAILURE		5587770	0					
ANR	5588174	ElseStatement	else		5587770	0					
ANR	5588175	CompoundStatement		58:9:1447:1447	5587770	0					
ANR	5588176	ExpressionStatement	usage ( argv [ 0 ] )	152:3:4798:4812	5587770	0	True				
ANR	5588177	CallExpression	usage ( argv [ 0 ] )		5587770	0					
ANR	5588178	Callee	usage		5587770	0					
ANR	5588179	Identifier	usage		5587770	0					
ANR	5588180	ArgumentList	argv [ 0 ]		5587770	1					
ANR	5588181	Argument	argv [ 0 ]		5587770	0					
ANR	5588182	ArrayIndexing	argv [ 0 ]		5587770	0					
ANR	5588183	Identifier	argv		5587770	0					
ANR	5588184	PrimaryExpression	0		5587770	1					
ANR	5588185	ExpressionStatement	EXIT_FAILURE	153:3:4817:4829	5587770	1	True				
ANR	5588186	Identifier	EXIT_FAILURE		5587770	0					
ANR	5588187	IfStatement	if ( ! log_file_name )		5587770	9					
ANR	5588188	Condition	! log_file_name	157:5:4844:4857	5587770	0	True				
ANR	5588189	UnaryOperationExpression	! log_file_name		5587770	0					
ANR	5588190	UnaryOperator	!		5587770	0					
ANR	5588191	Identifier	log_file_name		5587770	1					
ANR	5588192	CompoundStatement		64:22:1515:1515	5587770	1					
ANR	5588193	ExpressionStatement	usage ( argv [ 0 ] )	158:2:4865:4879	5587770	0	True				
ANR	5588194	CallExpression	usage ( argv [ 0 ] )		5587770	0					
ANR	5588195	Callee	usage		5587770	0					
ANR	5588196	Identifier	usage		5587770	0					
ANR	5588197	ArgumentList	argv [ 0 ]		5587770	1					
ANR	5588198	Argument	argv [ 0 ]		5587770	0					
ANR	5588199	ArrayIndexing	argv [ 0 ]		5587770	0					
ANR	5588200	Identifier	argv		5587770	0					
ANR	5588201	PrimaryExpression	0		5587770	1					
ANR	5588202	ExpressionStatement	EXIT_FAILURE	159:2:4883:4895	5587770	1	True				
ANR	5588203	Identifier	EXIT_FAILURE		5587770	0					
ANR	5588204	IdentifierDeclStatement	int cluster = ANY_NUMBER ;	162:1:4902:4924	5587770	10	True				
ANR	5588205	IdentifierDecl	cluster = ANY_NUMBER		5587770	0					
ANR	5588206	IdentifierDeclType	int		5587770	0					
ANR	5588207	Identifier	cluster		5587770	1					
ANR	5588208	AssignmentExpression	cluster = ANY_NUMBER		5587770	2		=			
ANR	5588209	Identifier	ANY_NUMBER		5587770	0					
ANR	5588210	Identifier	ANY_NUMBER		5587770	1					
ANR	5588211	IdentifierDeclStatement	int process = ANY_NUMBER ;	163:1:4927:4949	5587770	11	True				
ANR	5588212	IdentifierDecl	process = ANY_NUMBER		5587770	0					
ANR	5588213	IdentifierDeclType	int		5587770	0					
ANR	5588214	Identifier	process		5587770	1					
ANR	5588215	AssignmentExpression	process = ANY_NUMBER		5587770	2		=			
ANR	5588216	Identifier	ANY_NUMBER		5587770	0					
ANR	5588217	Identifier	ANY_NUMBER		5587770	1					
ANR	5588218	IdentifierDeclStatement	int subproc = ANY_NUMBER ;	164:1:4952:4974	5587770	12	True				
ANR	5588219	IdentifierDecl	subproc = ANY_NUMBER		5587770	0					
ANR	5588220	IdentifierDeclType	int		5587770	0					
ANR	5588221	Identifier	subproc		5587770	1					
ANR	5588222	AssignmentExpression	subproc = ANY_NUMBER		5587770	2		=			
ANR	5588223	Identifier	ANY_NUMBER		5587770	0					
ANR	5588224	Identifier	ANY_NUMBER		5587770	1					
ANR	5588225	IfStatement	if ( job_name )		5587770	13					
ANR	5588226	Condition	job_name	166:5:4982:4989	5587770	0	True				
ANR	5588227	Identifier	job_name		5587770	0					
ANR	5588228	CompoundStatement		74:2:1651:1718	5587770	1					
ANR	5588229	IdentifierDeclStatement	"int fields = sscanf ( job_name , ""%d.%d.%d"" , & cluster , & process , & subproc ) ;"	167:2:4997:5064	5587770	0	True				
ANR	5588230	IdentifierDecl	"fields = sscanf ( job_name , ""%d.%d.%d"" , & cluster , & process , & subproc )"		5587770	0					
ANR	5588231	IdentifierDeclType	int		5587770	0					
ANR	5588232	Identifier	fields		5587770	1					
ANR	5588233	AssignmentExpression	"fields = sscanf ( job_name , ""%d.%d.%d"" , & cluster , & process , & subproc )"		5587770	2		=			
ANR	5588234	Identifier	fields		5587770	0					
ANR	5588235	CallExpression	"sscanf ( job_name , ""%d.%d.%d"" , & cluster , & process , & subproc )"		5587770	1					
ANR	5588236	Callee	sscanf		5587770	0					
ANR	5588237	Identifier	sscanf		5587770	0					
ANR	5588238	ArgumentList	job_name		5587770	1					
ANR	5588239	Argument	job_name		5587770	0					
ANR	5588240	Identifier	job_name		5587770	0					
ANR	5588241	Argument	"""%d.%d.%d"""		5587770	1					
ANR	5588242	PrimaryExpression	"""%d.%d.%d"""		5587770	0					
ANR	5588243	Argument	& cluster		5587770	2					
ANR	5588244	UnaryOperationExpression	& cluster		5587770	0					
ANR	5588245	UnaryOperator	&		5587770	0					
ANR	5588246	Identifier	cluster		5587770	1					
ANR	5588247	Argument	& process		5587770	3					
ANR	5588248	UnaryOperationExpression	& process		5587770	0					
ANR	5588249	UnaryOperator	&		5587770	0					
ANR	5588250	Identifier	process		5587770	1					
ANR	5588251	Argument	& subproc		5587770	4					
ANR	5588252	UnaryOperationExpression	& subproc		5587770	0					
ANR	5588253	UnaryOperator	&		5587770	0					
ANR	5588254	Identifier	subproc		5587770	1					
ANR	5588255	IfStatement	if ( fields >= 1 && fields <= 3 )		5587770	1					
ANR	5588256	Condition	fields >= 1 && fields <= 3	168:5:5071:5092	5587770	0	True				
ANR	5588257	AndExpression	fields >= 1 && fields <= 3		5587770	0		&&			
ANR	5588258	RelationalExpression	fields >= 1		5587770	0		>=			
ANR	5588259	Identifier	fields		5587770	0					
ANR	5588260	PrimaryExpression	1		5587770	1					
ANR	5588261	RelationalExpression	fields <= 3		5587770	1		<=			
ANR	5588262	Identifier	fields		5587770	0					
ANR	5588263	PrimaryExpression	3		5587770	1					
ANR	5588264	CompoundStatement		75:29:1749:1749	5587770	1					
ANR	5588265	ElseStatement	else		5587770	0					
ANR	5588266	CompoundStatement		77:9:1784:1784	5587770	0					
ANR	5588267	ExpressionStatement	"fprintf ( stderr , ""Couldn't understand job number: %s\\n"" , job_name )"	171:3:5135:5198	5587770	0	True				
ANR	5588268	CallExpression	"fprintf ( stderr , ""Couldn't understand job number: %s\\n"" , job_name )"		5587770	0					
ANR	5588269	Callee	fprintf		5587770	0					
ANR	5588270	Identifier	fprintf		5587770	0					
ANR	5588271	ArgumentList	stderr		5587770	1					
ANR	5588272	Argument	stderr		5587770	0					
ANR	5588273	Identifier	stderr		5587770	0					
ANR	5588274	Argument	"""Couldn't understand job number: %s\\n"""		5587770	1					
ANR	5588275	PrimaryExpression	"""Couldn't understand job number: %s\\n"""		5587770	0					
ANR	5588276	Argument	job_name		5587770	2					
ANR	5588277	Identifier	job_name		5587770	0					
ANR	5588278	ExpressionStatement	EXIT_FAILURE	172:3:5203:5215	5587770	1	True				
ANR	5588279	Identifier	EXIT_FAILURE		5587770	0					
ANR	5588280	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Reading log file %s\\n"" , log_file_name )"	176:1:5230:5288	5587770	14	True				
ANR	5588281	CallExpression	"dprintf ( D_FULLDEBUG , ""Reading log file %s\\n"" , log_file_name )"		5587770	0					
ANR	5588282	Callee	dprintf		5587770	0					
ANR	5588283	Identifier	dprintf		5587770	0					
ANR	5588284	ArgumentList	D_FULLDEBUG		5587770	1					
ANR	5588285	Argument	D_FULLDEBUG		5587770	0					
ANR	5588286	Identifier	D_FULLDEBUG		5587770	0					
ANR	5588287	Argument	"""Reading log file %s\\n"""		5587770	1					
ANR	5588288	PrimaryExpression	"""Reading log file %s\\n"""		5587770	0					
ANR	5588289	Argument	log_file_name		5587770	2					
ANR	5588290	Identifier	log_file_name		5587770	0					
ANR	5588291	IdentifierDeclStatement	"int submitted , aborted , completed , flagged ;"	177:1:5291:5333	5587770	15	True				
ANR	5588292	IdentifierDecl	submitted		5587770	0					
ANR	5588293	IdentifierDeclType	int		5587770	0					
ANR	5588294	Identifier	submitted		5587770	1					
ANR	5588295	IdentifierDecl	aborted		5587770	1					
ANR	5588296	IdentifierDeclType	int		5587770	0					
ANR	5588297	Identifier	aborted		5587770	1					
ANR	5588298	IdentifierDecl	completed		5587770	2					
ANR	5588299	IdentifierDeclType	int		5587770	0					
ANR	5588300	Identifier	completed		5587770	1					
ANR	5588301	IdentifierDecl	flagged		5587770	3					
ANR	5588302	IdentifierDeclType	int		5587770	0					
ANR	5588303	Identifier	flagged		5587770	1					
ANR	5588304	IdentifierDeclStatement	FILE * sec_fp = NULL ;	178:1:5336:5355	5587770	16	True				
ANR	5588305	IdentifierDecl	* sec_fp = NULL		5587770	0					
ANR	5588306	IdentifierDeclType	FILE *		5587770	0					
ANR	5588307	Identifier	sec_fp		5587770	1					
ANR	5588308	AssignmentExpression	* sec_fp = NULL		5587770	2		=			
ANR	5588309	Identifier	NULL		5587770	0					
ANR	5588310	Identifier	NULL		5587770	1					
ANR	5588311	IdentifierDeclStatement	"int pos , nPos ;"	179:1:5358:5371	5587770	17	True				
ANR	5588312	IdentifierDecl	pos		5587770	0					
ANR	5588313	IdentifierDeclType	int		5587770	0					
ANR	5588314	Identifier	pos		5587770	1					
ANR	5588315	IdentifierDecl	nPos		5587770	1					
ANR	5588316	IdentifierDeclType	int		5587770	0					
ANR	5588317	Identifier	nPos		5587770	1					
ANR	5588318	Label	rescue :	180:0:5373:5380	5587770	18	True				
ANR	5588319	Identifier	rescue		5587770	0					
ANR	5588320	ExpressionStatement	submitted = 0	181:1:5383:5394	5587770	19	True				
ANR	5588321	AssignmentExpression	submitted = 0		5587770	0		=			
ANR	5588322	Identifier	submitted		5587770	0					
ANR	5588323	PrimaryExpression	0		5587770	1					
ANR	5588324	ExpressionStatement	aborted = 0	182:1:5397:5406	5587770	20	True				
ANR	5588325	AssignmentExpression	aborted = 0		5587770	0		=			
ANR	5588326	Identifier	aborted		5587770	0					
ANR	5588327	PrimaryExpression	0		5587770	1					
ANR	5588328	ExpressionStatement	completed = 0	183:1:5409:5420	5587770	21	True				
ANR	5588329	AssignmentExpression	completed = 0		5587770	0		=			
ANR	5588330	Identifier	completed		5587770	0					
ANR	5588331	PrimaryExpression	0		5587770	1					
ANR	5588332	ExpressionStatement	flagged = 0	184:1:5423:5434	5587770	22	True				
ANR	5588333	AssignmentExpression	flagged = 0		5587770	0		=			
ANR	5588334	Identifier	flagged		5587770	0					
ANR	5588335	PrimaryExpression	0		5587770	1					
ANR	5588336	IdentifierDeclStatement	ReadUserLog log ;	185:1:5437:5453	5587770	23	True				
ANR	5588337	IdentifierDecl	log		5587770	0					
ANR	5588338	IdentifierDeclType	ReadUserLog		5587770	0					
ANR	5588339	Identifier	log		5587770	1					
ANR	5588340	IdentifierDeclStatement	"HashTable < MyString , MyString > table ( 127 , MyStringHash ) ;"	186:1:5456:5508	5587770	24	True				
ANR	5588341	IdentifierDecl	"table ( 127 , MyStringHash )"		5587770	0					
ANR	5588342	IdentifierDeclType	"HashTable < MyString , MyString >"		5587770	0					
ANR	5588343	Identifier	table		5587770	1					
ANR	5588344	Expression	"127 , MyStringHash"		5587770	2					
ANR	5588345	PrimaryExpression	127		5587770	0					
ANR	5588346	Identifier	MyStringHash		5587770	1					
ANR	5588347	IfStatement	"if ( log . initialize ( log_file_name , false , false , true ) )"		5587770	25					
ANR	5588348	Condition	"log . initialize ( log_file_name , false , false , true )"	188:4:5516:5561	5587770	0	True				
ANR	5588349	CallExpression	"log . initialize ( log_file_name , false , false , true )"		5587770	0					
ANR	5588350	Callee	log . initialize		5587770	0					
ANR	5588351	MemberAccess	log . initialize		5587770	0					
ANR	5588352	Identifier	log		5587770	0					
ANR	5588353	Identifier	initialize		5587770	1					
ANR	5588354	ArgumentList	log_file_name		5587770	1					
ANR	5588355	Argument	log_file_name		5587770	0					
ANR	5588356	Identifier	log_file_name		5587770	0					
ANR	5588357	Argument	false		5587770	1					
ANR	5588358	Identifier	false		5587770	0					
ANR	5588359	Argument	false		5587770	2					
ANR	5588360	Identifier	false		5587770	0					
ANR	5588361	Argument	true		5587770	3					
ANR	5588362	Identifier	true		5587770	0					
ANR	5588363	CompoundStatement		95:52:2218:2218	5587770	1					
ANR	5588364	ExpressionStatement	"sec_fp = safe_fopen_wrapper_follow ( log_file_name , ""r"" , 0644 )"	189:2:5568:5628	5587770	0	True				
ANR	5588365	AssignmentExpression	"sec_fp = safe_fopen_wrapper_follow ( log_file_name , ""r"" , 0644 )"		5587770	0		=			
ANR	5588366	Identifier	sec_fp		5587770	0					
ANR	5588367	CallExpression	"safe_fopen_wrapper_follow ( log_file_name , ""r"" , 0644 )"		5587770	1					
ANR	5588368	Callee	safe_fopen_wrapper_follow		5587770	0					
ANR	5588369	Identifier	safe_fopen_wrapper_follow		5587770	0					
ANR	5588370	ArgumentList	log_file_name		5587770	1					
ANR	5588371	Argument	log_file_name		5587770	0					
ANR	5588372	Identifier	log_file_name		5587770	0					
ANR	5588373	Argument	"""r"""		5587770	1					
ANR	5588374	PrimaryExpression	"""r"""		5587770	0					
ANR	5588375	Argument	0644		5587770	2					
ANR	5588376	PrimaryExpression	0644		5587770	0					
ANR	5588377	ExpressionStatement	"fseek ( sec_fp , 0 , SEEK_END )"	190:2:5632:5659	5587770	1	True				
ANR	5588378	CallExpression	"fseek ( sec_fp , 0 , SEEK_END )"		5587770	0					
ANR	5588379	Callee	fseek		5587770	0					
ANR	5588380	Identifier	fseek		5587770	0					
ANR	5588381	ArgumentList	sec_fp		5587770	1					
ANR	5588382	Argument	sec_fp		5587770	0					
ANR	5588383	Identifier	sec_fp		5587770	0					
ANR	5588384	Argument	0		5587770	1					
ANR	5588385	PrimaryExpression	0		5587770	0					
ANR	5588386	Argument	SEEK_END		5587770	2					
ANR	5588387	Identifier	SEEK_END		5587770	0					
ANR	5588388	ExpressionStatement	pos = ftell ( sec_fp )	191:2:5663:5682	5587770	2	True				
ANR	5588389	AssignmentExpression	pos = ftell ( sec_fp )		5587770	0		=			
ANR	5588390	Identifier	pos		5587770	0					
ANR	5588391	CallExpression	ftell ( sec_fp )		5587770	1					
ANR	5588392	Callee	ftell		5587770	0					
ANR	5588393	Identifier	ftell		5587770	0					
ANR	5588394	ArgumentList	sec_fp		5587770	1					
ANR	5588395	Argument	sec_fp		5587770	0					
ANR	5588396	Identifier	sec_fp		5587770	0					
ANR	5588397	ExpressionStatement	nPos = pos	192:2:5687:5697	5587770	3	True				
ANR	5588398	AssignmentExpression	nPos = pos		5587770	0		=			
ANR	5588399	Identifier	nPos		5587770	0					
ANR	5588400	Identifier	pos		5587770	1					
ANR	5588401	WhileStatement	while ( 1 )		5587770	4					
ANR	5588402	Condition	1	193:8:5707:5707	5587770	0	True				
ANR	5588403	PrimaryExpression	1		5587770	0					
ANR	5588404	CompoundStatement		103:3:2402:2418	5587770	1					
ANR	5588405	IdentifierDeclStatement	ULogEventOutcome outcome ;	195:3:5719:5743	5587770	0	True				
ANR	5588406	IdentifierDecl	outcome		5587770	0					
ANR	5588407	IdentifierDeclType	ULogEventOutcome		5587770	0					
ANR	5588408	Identifier	outcome		5587770	1					
ANR	5588409	IdentifierDeclStatement	ULogEvent * event ;	196:3:5748:5764	5587770	1	True				
ANR	5588410	IdentifierDecl	* event		5587770	0					
ANR	5588411	IdentifierDeclType	ULogEvent *		5587770	0					
ANR	5588412	Identifier	event		5587770	1					
ANR	5588413	ExpressionStatement	outcome = log . readEvent ( event )	197:3:5769:5799	5587770	2	True				
ANR	5588414	AssignmentExpression	outcome = log . readEvent ( event )		5587770	0		=			
ANR	5588415	Identifier	outcome		5587770	0					
ANR	5588416	CallExpression	log . readEvent ( event )		5587770	1					
ANR	5588417	Callee	log . readEvent		5587770	0					
ANR	5588418	MemberAccess	log . readEvent		5587770	0					
ANR	5588419	Identifier	log		5587770	0					
ANR	5588420	Identifier	readEvent		5587770	1					
ANR	5588421	ArgumentList	event		5587770	1					
ANR	5588422	Argument	event		5587770	0					
ANR	5588423	Identifier	event		5587770	0					
ANR	5588424	IfStatement	if ( outcome == ULOG_OK )		5587770	3					
ANR	5588425	Condition	outcome == ULOG_OK	199:6:5811:5826	5587770	0	True				
ANR	5588426	EqualityExpression	outcome == ULOG_OK		5587770	0		==			
ANR	5588427	Identifier	outcome		5587770	0					
ANR	5588428	Identifier	ULOG_OK		5587770	1					
ANR	5588429	CompoundStatement		110:4:2597:2614	5587770	1					
ANR	5588430	ExpressionStatement	flagged = 0	200:4:5835:5846	5587770	0	True				
ANR	5588431	AssignmentExpression	flagged = 0		5587770	0		=			
ANR	5588432	Identifier	flagged		5587770	0					
ANR	5588433	PrimaryExpression	0		5587770	1					
ANR	5588434	IdentifierDeclStatement	char key [ 1024 ] ;	201:4:5852:5866	5587770	1	True				
ANR	5588435	IdentifierDecl	key [ 1024 ]		5587770	0					
ANR	5588436	IdentifierDeclType	char [ 1024 ]		5587770	0					
ANR	5588437	Identifier	key		5587770	1					
ANR	5588438	PrimaryExpression	1024		5587770	2					
ANR	5588439	ExpressionStatement	"sprintf ( key , ""%d.%d.%d"" , event -> cluster , event -> proc , event -> subproc )"	202:4:5872:5937	5587770	2	True				
ANR	5588440	CallExpression	"sprintf ( key , ""%d.%d.%d"" , event -> cluster , event -> proc , event -> subproc )"		5587770	0					
ANR	5588441	Callee	sprintf		5587770	0					
ANR	5588442	Identifier	sprintf		5587770	0					
ANR	5588443	ArgumentList	key		5587770	1					
ANR	5588444	Argument	key		5587770	0					
ANR	5588445	Identifier	key		5587770	0					
ANR	5588446	Argument	"""%d.%d.%d"""		5587770	1					
ANR	5588447	PrimaryExpression	"""%d.%d.%d"""		5587770	0					
ANR	5588448	Argument	event -> cluster		5587770	2					
ANR	5588449	PtrMemberAccess	event -> cluster		5587770	0					
ANR	5588450	Identifier	event		5587770	0					
ANR	5588451	Identifier	cluster		5587770	1					
ANR	5588452	Argument	event -> proc		5587770	3					
ANR	5588453	PtrMemberAccess	event -> proc		5587770	0					
ANR	5588454	Identifier	event		5587770	0					
ANR	5588455	Identifier	proc		5587770	1					
ANR	5588456	Argument	event -> subproc		5587770	4					
ANR	5588457	PtrMemberAccess	event -> subproc		5587770	0					
ANR	5588458	Identifier	event		5587770	0					
ANR	5588459	Identifier	subproc		5587770	1					
ANR	5588460	IdentifierDeclStatement	MyString str ( key ) ;	203:4:5943:5960	5587770	3	True				
ANR	5588461	IdentifierDecl	str ( key )		5587770	0					
ANR	5588462	IdentifierDeclType	MyString		5587770	0					
ANR	5588463	Identifier	str		5587770	1					
ANR	5588464	Identifier	key		5587770	2					
ANR	5588465	IfStatement	"if ( jobnum_matches ( event , cluster , process , subproc ) )"		5587770	4					
ANR	5588466	Condition	"jobnum_matches ( event , cluster , process , subproc )"	204:8:5970:6019	5587770	0	True				
ANR	5588467	CallExpression	"jobnum_matches ( event , cluster , process , subproc )"		5587770	0					
ANR	5588468	Callee	jobnum_matches		5587770	0					
ANR	5588469	Identifier	jobnum_matches		5587770	0					
ANR	5588470	ArgumentList	event		5587770	1					
ANR	5588471	Argument	event		5587770	0					
ANR	5588472	Identifier	event		5587770	0					
ANR	5588473	Argument	cluster		5587770	1					
ANR	5588474	Identifier	cluster		5587770	0					
ANR	5588475	Argument	process		5587770	2					
ANR	5588476	Identifier	process		5587770	0					
ANR	5588477	Argument	subproc		5587770	3					
ANR	5588478	Identifier	subproc		5587770	0					
ANR	5588479	CompoundStatement		111:61:2677:2677	5587770	1					
ANR	5588480	IfStatement	if ( event -> eventNumber == ULOG_SUBMIT )		5587770	0					
ANR	5588481	Condition	event -> eventNumber == ULOG_SUBMIT	205:8:6033:6063	5587770	0	True				
ANR	5588482	EqualityExpression	event -> eventNumber == ULOG_SUBMIT		5587770	0		==			
ANR	5588483	PtrMemberAccess	event -> eventNumber		5587770	0					
ANR	5588484	Identifier	event		5587770	0					
ANR	5588485	Identifier	eventNumber		5587770	1					
ANR	5588486	Identifier	ULOG_SUBMIT		5587770	1					
ANR	5588487	CompoundStatement		112:41:2720:2720	5587770	1					
ANR	5588488	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s submitted\\n"" , key )"	206:6:6074:6115	5587770	0	True				
ANR	5588489	CallExpression	"dprintf ( D_FULLDEBUG , ""%s submitted\\n"" , key )"		5587770	0					
ANR	5588490	Callee	dprintf		5587770	0					
ANR	5588491	Identifier	dprintf		5587770	0					
ANR	5588492	ArgumentList	D_FULLDEBUG		5587770	1					
ANR	5588493	Argument	D_FULLDEBUG		5587770	0					
ANR	5588494	Identifier	D_FULLDEBUG		5587770	0					
ANR	5588495	Argument	"""%s submitted\\n"""		5587770	1					
ANR	5588496	PrimaryExpression	"""%s submitted\\n"""		5587770	0					
ANR	5588497	Argument	key		5587770	2					
ANR	5588498	Identifier	key		5587770	0					
ANR	5588499	ExpressionStatement	"table . insert ( str , str )"	207:6:6123:6144	5587770	1	True				
ANR	5588500	CallExpression	"table . insert ( str , str )"		5587770	0					
ANR	5588501	Callee	table . insert		5587770	0					
ANR	5588502	MemberAccess	table . insert		5587770	0					
ANR	5588503	Identifier	table		5587770	0					
ANR	5588504	Identifier	insert		5587770	1					
ANR	5588505	ArgumentList	str		5587770	1					
ANR	5588506	Argument	str		5587770	0					
ANR	5588507	Identifier	str		5587770	0					
ANR	5588508	Argument	str		5587770	1					
ANR	5588509	Identifier	str		5587770	0					
ANR	5588510	ExpressionStatement	submitted ++	208:6:6152:6163	5587770	2	True				
ANR	5588511	PostIncDecOperationExpression	submitted ++		5587770	0					
ANR	5588512	Identifier	submitted		5587770	0					
ANR	5588513	IncDec	++		5587770	1					
ANR	5588514	ElseStatement	else		5587770	0					
ANR	5588515	IfStatement	if ( event -> eventNumber == ULOG_JOB_TERMINATED )		5587770	0					
ANR	5588516	Condition	event -> eventNumber == ULOG_JOB_TERMINATED	209:15:6180:6218	5587770	0	True				
ANR	5588517	EqualityExpression	event -> eventNumber == ULOG_JOB_TERMINATED		5587770	0		==			
ANR	5588518	PtrMemberAccess	event -> eventNumber		5587770	0					
ANR	5588519	Identifier	event		5587770	0					
ANR	5588520	Identifier	eventNumber		5587770	1					
ANR	5588521	Identifier	ULOG_JOB_TERMINATED		5587770	1					
ANR	5588522	CompoundStatement		116:56:2875:2875	5587770	1					
ANR	5588523	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s completed\\n"" , key )"	210:6:6229:6270	5587770	0	True				
ANR	5588524	CallExpression	"dprintf ( D_FULLDEBUG , ""%s completed\\n"" , key )"		5587770	0					
ANR	5588525	Callee	dprintf		5587770	0					
ANR	5588526	Identifier	dprintf		5587770	0					
ANR	5588527	ArgumentList	D_FULLDEBUG		5587770	1					
ANR	5588528	Argument	D_FULLDEBUG		5587770	0					
ANR	5588529	Identifier	D_FULLDEBUG		5587770	0					
ANR	5588530	Argument	"""%s completed\\n"""		5587770	1					
ANR	5588531	PrimaryExpression	"""%s completed\\n"""		5587770	0					
ANR	5588532	Argument	key		5587770	2					
ANR	5588533	Identifier	key		5587770	0					
ANR	5588534	ExpressionStatement	table . remove ( str )	211:6:6278:6295	5587770	1	True				
ANR	5588535	CallExpression	table . remove ( str )		5587770	0					
ANR	5588536	Callee	table . remove		5587770	0					
ANR	5588537	MemberAccess	table . remove		5587770	0					
ANR	5588538	Identifier	table		5587770	0					
ANR	5588539	Identifier	remove		5587770	1					
ANR	5588540	ArgumentList	str		5587770	1					
ANR	5588541	Argument	str		5587770	0					
ANR	5588542	Identifier	str		5587770	0					
ANR	5588543	ExpressionStatement	completed ++	212:6:6303:6314	5587770	2	True				
ANR	5588544	PostIncDecOperationExpression	completed ++		5587770	0					
ANR	5588545	Identifier	completed		5587770	0					
ANR	5588546	IncDec	++		5587770	1					
ANR	5588547	ElseStatement	else		5587770	0					
ANR	5588548	IfStatement	if ( event -> eventNumber == ULOG_JOB_ABORTED )		5587770	0					
ANR	5588549	Condition	event -> eventNumber == ULOG_JOB_ABORTED	213:15:6331:6366	5587770	0	True				
ANR	5588550	EqualityExpression	event -> eventNumber == ULOG_JOB_ABORTED		5587770	0		==			
ANR	5588551	PtrMemberAccess	event -> eventNumber		5587770	0					
ANR	5588552	Identifier	event		5587770	0					
ANR	5588553	Identifier	eventNumber		5587770	1					
ANR	5588554	Identifier	ULOG_JOB_ABORTED		5587770	1					
ANR	5588555	CompoundStatement		120:53:3023:3023	5587770	1					
ANR	5588556	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s aborted\\n"" , key )"	214:6:6377:6416	5587770	0	True				
ANR	5588557	CallExpression	"dprintf ( D_FULLDEBUG , ""%s aborted\\n"" , key )"		5587770	0					
ANR	5588558	Callee	dprintf		5587770	0					
ANR	5588559	Identifier	dprintf		5587770	0					
ANR	5588560	ArgumentList	D_FULLDEBUG		5587770	1					
ANR	5588561	Argument	D_FULLDEBUG		5587770	0					
ANR	5588562	Identifier	D_FULLDEBUG		5587770	0					
ANR	5588563	Argument	"""%s aborted\\n"""		5587770	1					
ANR	5588564	PrimaryExpression	"""%s aborted\\n"""		5587770	0					
ANR	5588565	Argument	key		5587770	2					
ANR	5588566	Identifier	key		5587770	0					
ANR	5588567	ExpressionStatement	table . remove ( str )	215:6:6424:6441	5587770	1	True				
ANR	5588568	CallExpression	table . remove ( str )		5587770	0					
ANR	5588569	Callee	table . remove		5587770	0					
ANR	5588570	MemberAccess	table . remove		5587770	0					
ANR	5588571	Identifier	table		5587770	0					
ANR	5588572	Identifier	remove		5587770	1					
ANR	5588573	ArgumentList	str		5587770	1					
ANR	5588574	Argument	str		5587770	0					
ANR	5588575	Identifier	str		5587770	0					
ANR	5588576	ExpressionStatement	aborted ++	216:6:6449:6458	5587770	2	True				
ANR	5588577	PostIncDecOperationExpression	aborted ++		5587770	0					
ANR	5588578	Identifier	aborted		5587770	0					
ANR	5588579	IncDec	++		5587770	1					
ANR	5588580	ElseStatement	else		5587770	0					
ANR	5588581	CompoundStatement		124:12:3126:3126	5587770	0					
ANR	5588582	IfStatement	if ( event != NULL )		5587770	5					
ANR	5588583	Condition	event != NULL	221:8:6521:6533	5587770	0	True				
ANR	5588584	EqualityExpression	event != NULL		5587770	0		!=			
ANR	5588585	Identifier	event		5587770	0					
ANR	5588586	Identifier	NULL		5587770	1					
ANR	5588587	Statement	delete	221:23:6536:6541	5587770	1	True				
ANR	5588588	ExpressionStatement	event	221:30:6543:6548	5587770	6	True				
ANR	5588589	Identifier	event		5587770	0					
ANR	5588590	IfStatement	if ( minjobs && ( completed + aborted >= minjobs ) )		5587770	7					
ANR	5588591	Condition	minjobs && ( completed + aborted >= minjobs )	222:8:6558:6601	5587770	0	True				
ANR	5588592	AndExpression	minjobs && ( completed + aborted >= minjobs )		5587770	0		&&			
ANR	5588593	Identifier	minjobs		5587770	0					
ANR	5588594	RelationalExpression	completed + aborted >= minjobs		5587770	1		>=			
ANR	5588595	AdditiveExpression	completed + aborted		5587770	0		+			
ANR	5588596	Identifier	completed		5587770	0					
ANR	5588597	Identifier	aborted		5587770	1					
ANR	5588598	Identifier	minjobs		5587770	1					
ANR	5588599	CompoundStatement		129:55:3259:3259	5587770	1					
ANR	5588600	ExpressionStatement	"printf ( ""Specifed number of jobs (%d) done.\\n"" , minjobs )"	223:5:6612:6669	5587770	0	True				
ANR	5588601	CallExpression	"printf ( ""Specifed number of jobs (%d) done.\\n"" , minjobs )"		5587770	0					
ANR	5588602	Callee	printf		5587770	0					
ANR	5588603	Identifier	printf		5587770	0					
ANR	5588604	ArgumentList	"""Specifed number of jobs (%d) done.\\n"""		5587770	1					
ANR	5588605	Argument	"""Specifed number of jobs (%d) done.\\n"""		5587770	0					
ANR	5588606	PrimaryExpression	"""Specifed number of jobs (%d) done.\\n"""		5587770	0					
ANR	5588607	Argument	minjobs		5587770	1					
ANR	5588608	Identifier	minjobs		5587770	0					
ANR	5588609	ExpressionStatement	EXIT_SUCCESS	224:5:6676:6688	5587770	1	True				
ANR	5588610	Identifier	EXIT_SUCCESS		5587770	0					
ANR	5588611	ElseStatement	else		5587770	0					
ANR	5588612	CompoundStatement		133:10:3360:3360	5587770	0					
ANR	5588613	ExpressionStatement	"fseek ( sec_fp , 0 , SEEK_END )"	228:4:6774:6800	5587770	0	True				
ANR	5588614	CallExpression	"fseek ( sec_fp , 0 , SEEK_END )"		5587770	0					
ANR	5588615	Callee	fseek		5587770	0					
ANR	5588616	Identifier	fseek		5587770	0					
ANR	5588617	ArgumentList	sec_fp		5587770	1					
ANR	5588618	Argument	sec_fp		5587770	0					
ANR	5588619	Identifier	sec_fp		5587770	0					
ANR	5588620	Argument	0		5587770	1					
ANR	5588621	PrimaryExpression	0		5587770	0					
ANR	5588622	Argument	SEEK_END		5587770	2					
ANR	5588623	Identifier	SEEK_END		5587770	0					
ANR	5588624	ExpressionStatement	nPos = ftell ( sec_fp )	229:4:6806:6826	5587770	1	True				
ANR	5588625	AssignmentExpression	nPos = ftell ( sec_fp )		5587770	0		=			
ANR	5588626	Identifier	nPos		5587770	0					
ANR	5588627	CallExpression	ftell ( sec_fp )		5587770	1					
ANR	5588628	Callee	ftell		5587770	0					
ANR	5588629	Identifier	ftell		5587770	0					
ANR	5588630	ArgumentList	sec_fp		5587770	1					
ANR	5588631	Argument	sec_fp		5587770	0					
ANR	5588632	Identifier	sec_fp		5587770	0					
ANR	5588633	IfStatement	if ( flagged == 1 )		5587770	2					
ANR	5588634	Condition	flagged == 1	230:8:6836:6847	5587770	0	True				
ANR	5588635	EqualityExpression	flagged == 1		5587770	0		==			
ANR	5588636	Identifier	flagged		5587770	0					
ANR	5588637	PrimaryExpression	1		5587770	1					
ANR	5588638	CompoundStatement		137:22:3504:3504	5587770	1					
ANR	5588639	ExpressionStatement	fclose ( sec_fp )	231:5:6857:6871	5587770	0	True				
ANR	5588640	CallExpression	fclose ( sec_fp )		5587770	0					
ANR	5588641	Callee	fclose		5587770	0					
ANR	5588642	Identifier	fclose		5587770	0					
ANR	5588643	ArgumentList	sec_fp		5587770	1					
ANR	5588644	Argument	sec_fp		5587770	0					
ANR	5588645	Identifier	sec_fp		5587770	0					
ANR	5588646	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""INFO: File %s changed but userLog reader could not read another event. We are reinitializing userLog reader. \\n"" , log_file_name )"	232:5:6878:7028	5587770	1	True				
ANR	5588647	CallExpression	"dprintf ( D_FULLDEBUG , ""INFO: File %s changed but userLog reader could not read another event. We are reinitializing userLog reader. \\n"" , log_file_name )"		5587770	0					
ANR	5588648	Callee	dprintf		5587770	0					
ANR	5588649	Identifier	dprintf		5587770	0					
ANR	5588650	ArgumentList	D_FULLDEBUG		5587770	1					
ANR	5588651	Argument	D_FULLDEBUG		5587770	0					
ANR	5588652	Identifier	D_FULLDEBUG		5587770	0					
ANR	5588653	Argument	"""INFO: File %s changed but userLog reader could not read another event. We are reinitializing userLog reader. \\n"""		5587770	1					
ANR	5588654	PrimaryExpression	"""INFO: File %s changed but userLog reader could not read another event. We are reinitializing userLog reader. \\n"""		5587770	0					
ANR	5588655	Argument	log_file_name		5587770	2					
ANR	5588656	Identifier	log_file_name		5587770	0					
ANR	5588657	GotoStatement	goto rescue ;	234:5:7102:7113	5587770	2	True				
ANR	5588658	Identifier	rescue		5587770	0					
ANR	5588659	IfStatement	if ( nPos != pos )		5587770	3					
ANR	5588660	Condition	nPos != pos	236:9:7130:7140	5587770	0	True				
ANR	5588661	EqualityExpression	nPos != pos		5587770	0		!=			
ANR	5588662	Identifier	nPos		5587770	0					
ANR	5588663	Identifier	pos		5587770	1					
ANR	5588664	CompoundStatement		143:22:3797:3797	5587770	1					
ANR	5588665	ExpressionStatement	pos = nPos	237:5:7150:7160	5587770	0	True				
ANR	5588666	AssignmentExpression	pos = nPos		5587770	0		=			
ANR	5588667	Identifier	pos		5587770	0					
ANR	5588668	Identifier	nPos		5587770	1					
ANR	5588669	ExpressionStatement	flagged = 1	239:5:7267:7278	5587770	1	True				
ANR	5588670	AssignmentExpression	flagged = 1		5587770	0		=			
ANR	5588671	Identifier	flagged		5587770	0					
ANR	5588672	PrimaryExpression	1		5587770	1					
ANR	5588673	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%d submitted %d completed %d aborted %d remaining\\n"" , submitted , completed , aborted , submitted - completed - aborted )"	242:4:7295:7425	5587770	4	True				
ANR	5588674	CallExpression	"dprintf ( D_FULLDEBUG , ""%d submitted %d completed %d aborted %d remaining\\n"" , submitted , completed , aborted , submitted - completed - aborted )"		5587770	0					
ANR	5588675	Callee	dprintf		5587770	0					
ANR	5588676	Identifier	dprintf		5587770	0					
ANR	5588677	ArgumentList	D_FULLDEBUG		5587770	1					
ANR	5588678	Argument	D_FULLDEBUG		5587770	0					
ANR	5588679	Identifier	D_FULLDEBUG		5587770	0					
ANR	5588680	Argument	"""%d submitted %d completed %d aborted %d remaining\\n"""		5587770	1					
ANR	5588681	PrimaryExpression	"""%d submitted %d completed %d aborted %d remaining\\n"""		5587770	0					
ANR	5588682	Argument	submitted		5587770	2					
ANR	5588683	Identifier	submitted		5587770	0					
ANR	5588684	Argument	completed		5587770	3					
ANR	5588685	Identifier	completed		5587770	0					
ANR	5588686	Argument	aborted		5587770	4					
ANR	5588687	Identifier	aborted		5587770	0					
ANR	5588688	Argument	submitted - completed - aborted		5587770	5					
ANR	5588689	AdditiveExpression	submitted - completed - aborted		5587770	0		-			
ANR	5588690	Identifier	submitted		5587770	0					
ANR	5588691	AdditiveExpression	completed - aborted		5587770	1		-			
ANR	5588692	Identifier	completed		5587770	0					
ANR	5588693	Identifier	aborted		5587770	1					
ANR	5588694	IfStatement	if ( table . getNumElements ( ) == 0 )		5587770	5					
ANR	5588695	Condition	table . getNumElements ( ) == 0	243:7:7434:7458	5587770	0	True				
ANR	5588696	EqualityExpression	table . getNumElements ( ) == 0		5587770	0		==			
ANR	5588697	CallExpression	table . getNumElements ( )		5587770	0					
ANR	5588698	Callee	table . getNumElements		5587770	0					
ANR	5588699	MemberAccess	table . getNumElements		5587770	0					
ANR	5588700	Identifier	table		5587770	0					
ANR	5588701	Identifier	getNumElements		5587770	1					
ANR	5588702	ArgumentList			5587770	1					
ANR	5588703	PrimaryExpression	0		5587770	1					
ANR	5588704	CompoundStatement		150:34:4115:4115	5587770	1					
ANR	5588705	IfStatement	if ( submitted > 0 )		5587770	0					
ANR	5588706	Condition	submitted > 0	244:8:7471:7481	5587770	0	True				
ANR	5588707	RelationalExpression	submitted > 0		5587770	0		>			
ANR	5588708	Identifier	submitted		5587770	0					
ANR	5588709	PrimaryExpression	0		5587770	1					
ANR	5588710	CompoundStatement		151:21:4138:4138	5587770	1					
ANR	5588711	IfStatement	if ( ! minjobs )		5587770	0					
ANR	5588712	Condition	! minjobs	245:10:7496:7503	5587770	0	True				
ANR	5588713	UnaryOperationExpression	! minjobs		5587770	0					
ANR	5588714	UnaryOperator	!		5587770	0					
ANR	5588715	Identifier	minjobs		5587770	1					
ANR	5588716	CompoundStatement		152:21:4161:4161	5587770	1					
ANR	5588717	ExpressionStatement	"printf ( ""All jobs done.\\n"" )"	246:7:7516:7542	5587770	0	True				
ANR	5588718	CallExpression	"printf ( ""All jobs done.\\n"" )"		5587770	0					
ANR	5588719	Callee	printf		5587770	0					
ANR	5588720	Identifier	printf		5587770	0					
ANR	5588721	ArgumentList	"""All jobs done.\\n"""		5587770	1					
ANR	5588722	Argument	"""All jobs done.\\n"""		5587770	0					
ANR	5588723	PrimaryExpression	"""All jobs done.\\n"""		5587770	0					
ANR	5588724	ExpressionStatement	EXIT_SUCCESS	247:7:7551:7563	5587770	1	True				
ANR	5588725	Identifier	EXIT_SUCCESS		5587770	0					
ANR	5588726	ElseStatement	else		5587770	0					
ANR	5588727	CompoundStatement		156:12:4239:4239	5587770	0					
ANR	5588728	IfStatement	if ( cluster == ANY_NUMBER )		5587770	0					
ANR	5588729	Condition	cluster == ANY_NUMBER	250:9:7596:7614	5587770	0	True				
ANR	5588730	EqualityExpression	cluster == ANY_NUMBER		5587770	0		==			
ANR	5588731	Identifier	cluster		5587770	0					
ANR	5588732	Identifier	ANY_NUMBER		5587770	1					
ANR	5588733	CompoundStatement		157:30:4271:4271	5587770	1					
ANR	5588734	ExpressionStatement	"fprintf ( stderr , ""This log does not mention any jobs!\\n"" )"	251:7:7626:7681	5587770	0	True				
ANR	5588735	CallExpression	"fprintf ( stderr , ""This log does not mention any jobs!\\n"" )"		5587770	0					
ANR	5588736	Callee	fprintf		5587770	0					
ANR	5588737	Identifier	fprintf		5587770	0					
ANR	5588738	ArgumentList	stderr		5587770	1					
ANR	5588739	Argument	stderr		5587770	0					
ANR	5588740	Identifier	stderr		5587770	0					
ANR	5588741	Argument	"""This log does not mention any jobs!\\n"""		5587770	1					
ANR	5588742	PrimaryExpression	"""This log does not mention any jobs!\\n"""		5587770	0					
ANR	5588743	ElseStatement	else		5587770	0					
ANR	5588744	CompoundStatement		159:13:4350:4350	5587770	0					
ANR	5588745	ExpressionStatement	"fprintf ( stderr , ""This log does not mention that job!\\n"" )"	253:7:7705:7760	5587770	0	True				
ANR	5588746	CallExpression	"fprintf ( stderr , ""This log does not mention that job!\\n"" )"		5587770	0					
ANR	5588747	Callee	fprintf		5587770	0					
ANR	5588748	Identifier	fprintf		5587770	0					
ANR	5588749	ArgumentList	stderr		5587770	1					
ANR	5588750	Argument	stderr		5587770	0					
ANR	5588751	Identifier	stderr		5587770	0					
ANR	5588752	Argument	"""This log does not mention that job!\\n"""		5587770	1					
ANR	5588753	PrimaryExpression	"""This log does not mention that job!\\n"""		5587770	0					
ANR	5588754	ExpressionStatement	EXIT_FAILURE	255:6:7776:7788	5587770	1	True				
ANR	5588755	Identifier	EXIT_FAILURE		5587770	0					
ANR	5588756	ElseStatement	else		5587770	0					
ANR	5588757	IfStatement	if ( stoptime && time ( 0 ) > stoptime )		5587770	0					
ANR	5588758	Condition	stoptime && time ( 0 ) > stoptime	257:14:7811:7838	5587770	0	True				
ANR	5588759	AndExpression	stoptime && time ( 0 ) > stoptime		5587770	0		&&			
ANR	5588760	Identifier	stoptime		5587770	0					
ANR	5588761	RelationalExpression	time ( 0 ) > stoptime		5587770	1		>			
ANR	5588762	CallExpression	time ( 0 )		5587770	0					
ANR	5588763	Callee	time		5587770	0					
ANR	5588764	Identifier	time		5587770	0					
ANR	5588765	ArgumentList	0		5587770	1					
ANR	5588766	Argument	0		5587770	0					
ANR	5588767	PrimaryExpression	0		5587770	0					
ANR	5588768	Identifier	stoptime		5587770	1					
ANR	5588769	CompoundStatement		164:44:4495:4495	5587770	1					
ANR	5588770	ExpressionStatement	"printf ( ""Time expired.\\n"" )"	258:5:7848:7873	5587770	0	True				
ANR	5588771	CallExpression	"printf ( ""Time expired.\\n"" )"		5587770	0					
ANR	5588772	Callee	printf		5587770	0					
ANR	5588773	Identifier	printf		5587770	0					
ANR	5588774	ArgumentList	"""Time expired.\\n"""		5587770	1					
ANR	5588775	Argument	"""Time expired.\\n"""		5587770	0					
ANR	5588776	PrimaryExpression	"""Time expired.\\n"""		5587770	0					
ANR	5588777	ExpressionStatement	EXIT_FAILURE	259:5:7880:7892	5587770	1	True				
ANR	5588778	Identifier	EXIT_FAILURE		5587770	0					
ANR	5588779	ElseStatement	else		5587770	0					
ANR	5588780	CompoundStatement		168:5:4566:4582	5587770	0					
ANR	5588781	IdentifierDeclStatement	time_t sleeptime ;	261:5:7912:7928	5587770	0	True				
ANR	5588782	IdentifierDecl	sleeptime		5587770	0					
ANR	5588783	IdentifierDeclType	time_t		5587770	0					
ANR	5588784	Identifier	sleeptime		5587770	1					
ANR	5588785	IfStatement	if ( stoptime )		5587770	1					
ANR	5588786	Condition	stoptime	263:8:7939:7946	5587770	0	True				
ANR	5588787	Identifier	stoptime		5587770	0					
ANR	5588788	CompoundStatement		170:18:4603:4603	5587770	1					
ANR	5588789	ExpressionStatement	sleeptime = stoptime - time ( 0 )	264:6:7957:7985	5587770	0	True				
ANR	5588790	AssignmentExpression	sleeptime = stoptime - time ( 0 )		5587770	0		=			
ANR	5588791	Identifier	sleeptime		5587770	0					
ANR	5588792	AdditiveExpression	stoptime - time ( 0 )		5587770	1		-			
ANR	5588793	Identifier	stoptime		5587770	0					
ANR	5588794	CallExpression	time ( 0 )		5587770	1					
ANR	5588795	Callee	time		5587770	0					
ANR	5588796	Identifier	time		5587770	0					
ANR	5588797	ArgumentList	0		5587770	1					
ANR	5588798	Argument	0		5587770	0					
ANR	5588799	PrimaryExpression	0		5587770	0					
ANR	5588800	ElseStatement	else		5587770	0					
ANR	5588801	CompoundStatement		172:12:4653:4653	5587770	0					
ANR	5588802	ExpressionStatement	sleeptime = 5	266:6:8007:8020	5587770	0	True				
ANR	5588803	AssignmentExpression	sleeptime = 5		5587770	0		=			
ANR	5588804	Identifier	sleeptime		5587770	0					
ANR	5588805	PrimaryExpression	5		5587770	1					
ANR	5588806	IfStatement	if ( sleeptime > 5 )		5587770	2					
ANR	5588807	Condition	sleeptime > 5	269:8:8038:8048	5587770	0	True				
ANR	5588808	RelationalExpression	sleeptime > 5		5587770	0		>			
ANR	5588809	Identifier	sleeptime		5587770	0					
ANR	5588810	PrimaryExpression	5		5587770	1					
ANR	5588811	CompoundStatement		176:21:4705:4705	5587770	1					
ANR	5588812	ExpressionStatement	sleeptime = 5	270:6:8059:8072	5587770	0	True				
ANR	5588813	AssignmentExpression	sleeptime = 5		5587770	0		=			
ANR	5588814	Identifier	sleeptime		5587770	0					
ANR	5588815	PrimaryExpression	5		5587770	1					
ANR	5588816	ElseStatement	else		5587770	0					
ANR	5588817	IfStatement	if ( sleeptime < 1 )		5587770	0					
ANR	5588818	Condition	sleeptime < 1	271:15:8089:8099	5587770	0	True				
ANR	5588819	RelationalExpression	sleeptime < 1		5587770	0		<			
ANR	5588820	Identifier	sleeptime		5587770	0					
ANR	5588821	PrimaryExpression	1		5587770	1					
ANR	5588822	CompoundStatement		178:28:4756:4756	5587770	1					
ANR	5588823	ExpressionStatement	sleeptime = 1	272:6:8110:8123	5587770	0	True				
ANR	5588824	AssignmentExpression	sleeptime = 1		5587770	0		=			
ANR	5588825	Identifier	sleeptime		5587770	0					
ANR	5588826	PrimaryExpression	1		5587770	1					
ANR	5588827	ExpressionStatement	log . synchronize ( )	275:5:8138:8155	5587770	3	True				
ANR	5588828	CallExpression	log . synchronize ( )		5587770	0					
ANR	5588829	Callee	log . synchronize		5587770	0					
ANR	5588830	MemberAccess	log . synchronize		5587770	0					
ANR	5588831	Identifier	log		5587770	0					
ANR	5588832	Identifier	synchronize		5587770	1					
ANR	5588833	ArgumentList			5587770	1					
ANR	5588834	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""No more events, sleeping for %ld seconds\\n"" , ( long ) sleeptime )"	276:5:8162:8244	5587770	4	True				
ANR	5588835	CallExpression	"dprintf ( D_FULLDEBUG , ""No more events, sleeping for %ld seconds\\n"" , ( long ) sleeptime )"		5587770	0					
ANR	5588836	Callee	dprintf		5587770	0					
ANR	5588837	Identifier	dprintf		5587770	0					
ANR	5588838	ArgumentList	D_FULLDEBUG		5587770	1					
ANR	5588839	Argument	D_FULLDEBUG		5587770	0					
ANR	5588840	Identifier	D_FULLDEBUG		5587770	0					
ANR	5588841	Argument	"""No more events, sleeping for %ld seconds\\n"""		5587770	1					
ANR	5588842	PrimaryExpression	"""No more events, sleeping for %ld seconds\\n"""		5587770	0					
ANR	5588843	Argument	( long ) sleeptime		5587770	2					
ANR	5588844	CastExpression	( long ) sleeptime		5587770	0					
ANR	5588845	CastTarget	long		5587770	0					
ANR	5588846	Identifier	sleeptime		5587770	1					
ANR	5588847	ExpressionStatement	sleep ( sleeptime )	277:5:8251:8267	5587770	5	True				
ANR	5588848	CallExpression	sleep ( sleeptime )		5587770	0					
ANR	5588849	Callee	sleep		5587770	0					
ANR	5588850	Identifier	sleep		5587770	0					
ANR	5588851	ArgumentList	sleeptime		5587770	1					
ANR	5588852	Argument	sleeptime		5587770	0					
ANR	5588853	Identifier	sleeptime		5587770	0					
ANR	5588854	ExpressionStatement	fclose ( sec_fp )	282:2:8292:8306	5587770	5	True				
ANR	5588855	CallExpression	fclose ( sec_fp )		5587770	0					
ANR	5588856	Callee	fclose		5587770	0					
ANR	5588857	Identifier	fclose		5587770	0					
ANR	5588858	ArgumentList	sec_fp		5587770	1					
ANR	5588859	Argument	sec_fp		5587770	0					
ANR	5588860	Identifier	sec_fp		5587770	0					
ANR	5588861	ElseStatement	else		5587770	0					
ANR	5588862	CompoundStatement		190:8:4970:4970	5587770	0					
ANR	5588863	ExpressionStatement	"fprintf ( stderr , ""Couldn't open %s: %s\\n"" , log_file_name , strerror ( errno ) )"	284:2:8320:8390	5587770	0	True				
ANR	5588864	CallExpression	"fprintf ( stderr , ""Couldn't open %s: %s\\n"" , log_file_name , strerror ( errno ) )"		5587770	0					
ANR	5588865	Callee	fprintf		5587770	0					
ANR	5588866	Identifier	fprintf		5587770	0					
ANR	5588867	ArgumentList	stderr		5587770	1					
ANR	5588868	Argument	stderr		5587770	0					
ANR	5588869	Identifier	stderr		5587770	0					
ANR	5588870	Argument	"""Couldn't open %s: %s\\n"""		5587770	1					
ANR	5588871	PrimaryExpression	"""Couldn't open %s: %s\\n"""		5587770	0					
ANR	5588872	Argument	log_file_name		5587770	2					
ANR	5588873	Identifier	log_file_name		5587770	0					
ANR	5588874	Argument	strerror ( errno )		5587770	3					
ANR	5588875	CallExpression	strerror ( errno )		5587770	0					
ANR	5588876	Callee	strerror		5587770	0					
ANR	5588877	Identifier	strerror		5587770	0					
ANR	5588878	ArgumentList	errno		5587770	1					
ANR	5588879	Argument	errno		5587770	0					
ANR	5588880	Identifier	errno		5587770	0					
ANR	5588881	ExpressionStatement	EXIT_FAILURE	286:1:8396:8408	5587770	26	True				
ANR	5588882	Identifier	EXIT_FAILURE		5587770	0					
ANR	5588883	ReturnStatement	return 1 ;	288:1:8413:8421	5587770	27	True				
ANR	5588884	PrimaryExpression	1		5587770	0					
ANR	5588885	ReturnType	int		5587770	1					
ANR	5588886	Identifier	main		5587770	2					
ANR	5588887	ParameterList	"int argc , char * argv [ ]"		5587770	3					
ANR	5588888	Parameter	int argc	93:10:3320:3327	5587770	0	True				
ANR	5588889	ParameterType	int		5587770	0					
ANR	5588890	Identifier	argc		5587770	1					
ANR	5588891	Parameter	char * argv [ ]	93:20:3330:3341	5587770	1	True				
ANR	5588892	ParameterType	char * [ ]		5587770	0					
ANR	5588893	Identifier	argv		5587770	1					
ANR	5588894	CFGEntryNode	ENTRY		5587770		True				
ANR	5588895	CFGExitNode	EXIT		5587770		True				
ANR	5588896	Symbol	cluster		5587770						
ANR	5588897	Symbol	sec_fp		5587770						
ANR	5588898	Symbol	* event		5587770						
ANR	5588899	Symbol	ULOG_SUBMIT		5587770						
ANR	5588900	Symbol	aborted		5587770						
ANR	5588901	Symbol	p_funcs		5587770						
ANR	5588902	Symbol	* argv		5587770						
ANR	5588903	Symbol	stoptime		5587770						
ANR	5588904	Symbol	event -> subproc		5587770						
ANR	5588905	Symbol	myDistro		5587770						
ANR	5588906	Symbol	ctime		5587770						
ANR	5588907	Symbol	* * argv		5587770						
ANR	5588908	Symbol	event -> eventNumber		5587770						
ANR	5588909	Symbol	event -> proc		5587770						
ANR	5588910	Symbol	strcmp		5587770						
ANR	5588911	Symbol	* * i		5587770						
ANR	5588912	Symbol	errno		5587770						
ANR	5588913	Symbol	NULL		5587770						
ANR	5588914	Symbol	get_param_functions		5587770						
ANR	5588915	Symbol	ULOG_JOB_ABORTED		5587770						
ANR	5588916	Symbol	log_file_name		5587770						
ANR	5588917	Symbol	log . initialize		5587770						
ANR	5588918	Symbol	D_FULLDEBUG		5587770						
ANR	5588919	Symbol	completed		5587770						
ANR	5588920	Symbol	stderr		5587770						
ANR	5588921	Symbol	& process		5587770						
ANR	5588922	Symbol	& stoptime		5587770						
ANR	5588923	Symbol	str		5587770						
ANR	5588924	Symbol	strerror		5587770						
ANR	5588925	Symbol	submitted		5587770						
ANR	5588926	Symbol	nPos		5587770						
ANR	5588927	Symbol	sscanf		5587770						
ANR	5588928	Symbol	true		5587770						
ANR	5588929	Symbol	subproc		5587770						
ANR	5588930	Symbol	fields		5587770						
ANR	5588931	Symbol	ANY_NUMBER		5587770						
ANR	5588932	Symbol	ftell		5587770						
ANR	5588933	Symbol	log		5587770						
ANR	5588934	Symbol	& cluster		5587770						
ANR	5588935	Symbol	argv		5587770						
ANR	5588936	Symbol	jobnum_matches		5587770						
ANR	5588937	Symbol	table . getNumElements		5587770						
ANR	5588938	Symbol	flagged		5587770						
ANR	5588939	Symbol	pos		5587770						
ANR	5588940	Symbol	minjobs		5587770						
ANR	5588941	Symbol	event		5587770						
ANR	5588942	Symbol	safe_fopen_wrapper_follow		5587770						
ANR	5588943	Symbol	table		5587770						
ANR	5588944	Symbol	outcome		5587770						
ANR	5588945	Symbol	key		5587770						
ANR	5588946	Symbol	ULOG_JOB_TERMINATED		5587770						
ANR	5588947	Symbol	argc		5587770						
ANR	5588948	Symbol	atoi		5587770						
ANR	5588949	Symbol	process		5587770						
ANR	5588950	Symbol	Termlog		5587770						
ANR	5588951	Symbol	& subproc		5587770						
ANR	5588952	Symbol	false		5587770						
ANR	5588953	Symbol	sleeptime		5587770						
ANR	5588954	Symbol	i		5587770						
ANR	5588955	Symbol	waittime		5587770						
ANR	5588956	Symbol	SEEK_END		5587770						
ANR	5588957	Symbol	ULOG_OK		5587770						
ANR	5588958	Symbol	* i		5587770						
ANR	5588959	Symbol	job_name		5587770						
ANR	5588960	Symbol	log . readEvent		5587770						
ANR	5588961	Symbol	time		5587770						
ANR	5588962	Symbol	event -> cluster		5587770						
