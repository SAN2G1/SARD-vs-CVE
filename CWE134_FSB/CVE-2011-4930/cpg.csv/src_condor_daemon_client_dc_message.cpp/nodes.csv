command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3009822	File	data/converged/CVE-2011-4930_htcondor/src_condor_daemon_client_dc_message.cpp								
ANR	3009823	Function	DCMsg :: DCMsg	28:0:979:1399							
ANR	3009824	FunctionDef	DCMsg :: DCMsg (int cmd)		3009823	0					
ANR	3009825	CompoundStatement		39:0:1336:1399	3009823	0					
ANR	3009826	ExpressionStatement	setDeadlineTime ( time ( NULL ) + DEFAULT_SHORT_COMMAND_DEADLINE )	40:1:1339:1397	3009823	0	True				
ANR	3009827	CallExpression	setDeadlineTime ( time ( NULL ) + DEFAULT_SHORT_COMMAND_DEADLINE )		3009823	0					
ANR	3009828	Callee	setDeadlineTime		3009823	0					
ANR	3009829	Identifier	setDeadlineTime		3009823	0					
ANR	3009830	ArgumentList	time ( NULL ) + DEFAULT_SHORT_COMMAND_DEADLINE		3009823	1					
ANR	3009831	Argument	time ( NULL ) + DEFAULT_SHORT_COMMAND_DEADLINE		3009823	0					
ANR	3009832	AdditiveExpression	time ( NULL ) + DEFAULT_SHORT_COMMAND_DEADLINE		3009823	0		+			
ANR	3009833	CallExpression	time ( NULL )		3009823	0					
ANR	3009834	Callee	time		3009823	0					
ANR	3009835	Identifier	time		3009823	0					
ANR	3009836	ArgumentList	NULL		3009823	1					
ANR	3009837	Argument	NULL		3009823	0					
ANR	3009838	Identifier	NULL		3009823	0					
ANR	3009839	Identifier	DEFAULT_SHORT_COMMAND_DEADLINE		3009823	1					
ANR	3009840	Identifier	DCMsg :: DCMsg		3009823	1					
ANR	3009841	ParameterList	int cmd		3009823	2					
ANR	3009842	Parameter	int cmd	28:13:992:998	3009823	0	True				
ANR	3009843	ParameterType	int		3009823	0					
ANR	3009844	Identifier	cmd		3009823	1					
ANR	3009845	CFGEntryNode	ENTRY		3009823		True				
ANR	3009846	CFGExitNode	EXIT		3009823		True				
ANR	3009847	Symbol	NULL		3009823						
ANR	3009848	Symbol	DEFAULT_SHORT_COMMAND_DEADLINE		3009823						
ANR	3009849	Symbol	cmd		3009823						
ANR	3009850	Symbol	time		3009823						
ANR	3009851	Function	DCMsg :: ~DCMsg	43:0:1402:1420							
ANR	3009852	FunctionDef	DCMsg :: ~DCMsg ()		3009851	0					
ANR	3009853	CompoundStatement		43:16:1418:1420	3009851	0					
ANR	3009854	Identifier	DCMsg :: ~DCMsg		3009851	1					
ANR	3009855	ParameterList			3009851	2					
ANR	3009856	CFGEntryNode	ENTRY		3009851		True				
ANR	3009857	CFGExitNode	EXIT		3009851		True				
ANR	3009858	Function	DCMsg :: setDeadlineTimeout	46:0:1423:1565							
ANR	3009859	FunctionDef	DCMsg :: setDeadlineTimeout (int timeout)		3009858	0					
ANR	3009860	CompoundStatement		48:0:1467:1565	3009858	0					
ANR	3009861	IfStatement	if ( timeout < 0 )		3009858	0					
ANR	3009862	Condition	timeout < 0	49:5:1474:1484	3009858	0	True				
ANR	3009863	RelationalExpression	timeout < 0		3009858	0		<			
ANR	3009864	Identifier	timeout		3009858	0					
ANR	3009865	PrimaryExpression	0		3009858	1					
ANR	3009866	CompoundStatement		2:19:20:20	3009858	1					
ANR	3009867	ExpressionStatement	setDeadlineTime ( 0 )	50:2:1492:1510	3009858	0	True				
ANR	3009868	CallExpression	setDeadlineTime ( 0 )		3009858	0					
ANR	3009869	Callee	setDeadlineTime		3009858	0					
ANR	3009870	Identifier	setDeadlineTime		3009858	0					
ANR	3009871	ArgumentList	0		3009858	1					
ANR	3009872	Argument	0		3009858	0					
ANR	3009873	PrimaryExpression	0		3009858	0					
ANR	3009874	ElseStatement	else		3009858	0					
ANR	3009875	CompoundStatement		5:6:53:53	3009858	0					
ANR	3009876	ExpressionStatement	setDeadlineTime ( time ( NULL ) + timeout )	53:2:1525:1560	3009858	0	True				
ANR	3009877	CallExpression	setDeadlineTime ( time ( NULL ) + timeout )		3009858	0					
ANR	3009878	Callee	setDeadlineTime		3009858	0					
ANR	3009879	Identifier	setDeadlineTime		3009858	0					
ANR	3009880	ArgumentList	time ( NULL ) + timeout		3009858	1					
ANR	3009881	Argument	time ( NULL ) + timeout		3009858	0					
ANR	3009882	AdditiveExpression	time ( NULL ) + timeout		3009858	0		+			
ANR	3009883	CallExpression	time ( NULL )		3009858	0					
ANR	3009884	Callee	time		3009858	0					
ANR	3009885	Identifier	time		3009858	0					
ANR	3009886	ArgumentList	NULL		3009858	1					
ANR	3009887	Argument	NULL		3009858	0					
ANR	3009888	Identifier	NULL		3009858	0					
ANR	3009889	Identifier	timeout		3009858	1					
ANR	3009890	ReturnType	void		3009858	1					
ANR	3009891	Identifier	DCMsg :: setDeadlineTimeout		3009858	2					
ANR	3009892	ParameterList	int timeout		3009858	3					
ANR	3009893	Parameter	int timeout	47:26:1454:1464	3009858	0	True				
ANR	3009894	ParameterType	int		3009858	0					
ANR	3009895	Identifier	timeout		3009858	1					
ANR	3009896	CFGEntryNode	ENTRY		3009858		True				
ANR	3009897	CFGExitNode	EXIT		3009858		True				
ANR	3009898	Symbol	NULL		3009858						
ANR	3009899	Symbol	time		3009858						
ANR	3009900	Symbol	timeout		3009858						
ANR	3009901	Function	DCMsg :: getDeadlineExpired	57:0:1568:1683							
ANR	3009902	FunctionDef	DCMsg :: getDeadlineExpired ()		3009901	0					
ANR	3009903	CompoundStatement		59:0:1601:1683	3009901	0					
ANR	3009904	IfStatement	if ( m_deadline && m_deadline < time ( NULL ) )		3009901	0					
ANR	3009905	Condition	m_deadline && m_deadline < time ( NULL )	60:5:1608:1644	3009901	0	True				
ANR	3009906	AndExpression	m_deadline && m_deadline < time ( NULL )		3009901	0		&&			
ANR	3009907	Identifier	m_deadline		3009901	0					
ANR	3009908	RelationalExpression	m_deadline < time ( NULL )		3009901	1		<			
ANR	3009909	Identifier	m_deadline		3009901	0					
ANR	3009910	CallExpression	time ( NULL )		3009901	1					
ANR	3009911	Callee	time		3009901	0					
ANR	3009912	Identifier	time		3009901	0					
ANR	3009913	ArgumentList	NULL		3009901	1					
ANR	3009914	Argument	NULL		3009901	0					
ANR	3009915	Identifier	NULL		3009901	0					
ANR	3009916	CompoundStatement		2:45:46:46	3009901	1					
ANR	3009917	ReturnStatement	return true ;	61:2:1652:1663	3009901	0	True				
ANR	3009918	Identifier	true		3009901	0					
ANR	3009919	ReturnStatement	return false ;	63:1:1669:1681	3009901	1	True				
ANR	3009920	Identifier	false		3009901	0					
ANR	3009921	ReturnType	bool		3009901	1					
ANR	3009922	Identifier	DCMsg :: getDeadlineExpired		3009901	2					
ANR	3009923	ParameterList			3009901	3					
ANR	3009924	CFGEntryNode	ENTRY		3009901		True				
ANR	3009925	CFGExitNode	EXIT		3009901		True				
ANR	3009926	Symbol	NULL		3009901						
ANR	3009927	Symbol	m_deadline		3009901						
ANR	3009928	Symbol	true		3009901						
ANR	3009929	Symbol	false		3009901						
ANR	3009930	Symbol	time		3009901						
ANR	3009931	Function	DCMsg :: setCallback	66:0:1686:1809							
ANR	3009932	FunctionDef	DCMsg :: setCallback (classy_counted_ptr < DCMsgCallback > cb)		3009931	0					
ANR	3009933	CompoundStatement		68:0:1748:1809	3009931	0					
ANR	3009934	IfStatement	if ( cb . get ( ) )		3009931	0					
ANR	3009935	Condition	cb . get ( )	69:5:1755:1762	3009931	0	True				
ANR	3009936	CallExpression	cb . get ( )		3009931	0					
ANR	3009937	Callee	cb . get		3009931	0					
ANR	3009938	MemberAccess	cb . get		3009931	0					
ANR	3009939	Identifier	cb		3009931	0					
ANR	3009940	Identifier	get		3009931	1					
ANR	3009941	ArgumentList			3009931	1					
ANR	3009942	CompoundStatement		2:16:17:17	3009931	1					
ANR	3009943	ExpressionStatement	cb -> setMessage ( this )	70:2:1770:1792	3009931	0	True				
ANR	3009944	CallExpression	cb -> setMessage ( this )		3009931	0					
ANR	3009945	Callee	cb -> setMessage		3009931	0					
ANR	3009946	PtrMemberAccess	cb -> setMessage		3009931	0					
ANR	3009947	Identifier	cb		3009931	0					
ANR	3009948	Identifier	setMessage		3009931	1					
ANR	3009949	ArgumentList	this		3009931	1					
ANR	3009950	Argument	this		3009931	0					
ANR	3009951	Identifier	this		3009931	0					
ANR	3009952	ExpressionStatement	m_cb = cb	72:1:1798:1807	3009931	1	True				
ANR	3009953	AssignmentExpression	m_cb = cb		3009931	0		=			
ANR	3009954	Identifier	m_cb		3009931	0					
ANR	3009955	Identifier	cb		3009931	1					
ANR	3009956	ReturnType	void		3009931	1					
ANR	3009957	Identifier	DCMsg :: setCallback		3009931	2					
ANR	3009958	ParameterList	classy_counted_ptr < DCMsgCallback > cb		3009931	3					
ANR	3009959	Parameter	classy_counted_ptr < DCMsgCallback > cb	67:19:1710:1745	3009931	0	True				
ANR	3009960	ParameterType	classy_counted_ptr < DCMsgCallback >		3009931	0					
ANR	3009961	Identifier	cb		3009931	1					
ANR	3009962	CFGEntryNode	ENTRY		3009931		True				
ANR	3009963	CFGExitNode	EXIT		3009931		True				
ANR	3009964	Symbol	m_cb		3009931						
ANR	3009965	Symbol	this		3009931						
ANR	3009966	Symbol	cb . get		3009931						
ANR	3009967	Symbol	cb		3009931						
ANR	3009968	Function	DCMsg :: doCallback	75:0:1812:2039							
ANR	3009969	FunctionDef	DCMsg :: doCallback ()		3009968	0					
ANR	3009970	CompoundStatement		77:0:1837:2039	3009968	0					
ANR	3009971	IfStatement	if ( m_cb . get ( ) )		3009968	0					
ANR	3009972	Condition	m_cb . get ( )	78:5:1844:1853	3009968	0	True				
ANR	3009973	CallExpression	m_cb . get ( )		3009968	0					
ANR	3009974	Callee	m_cb . get		3009968	0					
ANR	3009975	MemberAccess	m_cb . get		3009968	0					
ANR	3009976	Identifier	m_cb		3009968	0					
ANR	3009977	Identifier	get		3009968	1					
ANR	3009978	ArgumentList			3009968	1					
ANR	3009979	CompoundStatement		5:2:117:160	3009968	1					
ANR	3009980	IdentifierDeclStatement	classy_counted_ptr < DCMsgCallback > cb = m_cb ;	81:2:1955:1998	3009968	0	True				
ANR	3009981	IdentifierDecl	cb = m_cb		3009968	0					
ANR	3009982	IdentifierDeclType	classy_counted_ptr < DCMsgCallback >		3009968	0					
ANR	3009983	Identifier	cb		3009968	1					
ANR	3009984	AssignmentExpression	cb = m_cb		3009968	2		=			
ANR	3009985	Identifier	m_cb		3009968	0					
ANR	3009986	Identifier	m_cb		3009968	1					
ANR	3009987	ExpressionStatement	m_cb = NULL	82:2:2002:2013	3009968	1	True				
ANR	3009988	AssignmentExpression	m_cb = NULL		3009968	0		=			
ANR	3009989	Identifier	m_cb		3009968	0					
ANR	3009990	Identifier	NULL		3009968	1					
ANR	3009991	ExpressionStatement	cb -> doCallback ( )	84:2:2018:2034	3009968	2	True				
ANR	3009992	CallExpression	cb -> doCallback ( )		3009968	0					
ANR	3009993	Callee	cb -> doCallback		3009968	0					
ANR	3009994	PtrMemberAccess	cb -> doCallback		3009968	0					
ANR	3009995	Identifier	cb		3009968	0					
ANR	3009996	Identifier	doCallback		3009968	1					
ANR	3009997	ArgumentList			3009968	1					
ANR	3009998	ReturnType	void		3009968	1					
ANR	3009999	Identifier	DCMsg :: doCallback		3009968	2					
ANR	3010000	ParameterList			3009968	3					
ANR	3010001	CFGEntryNode	ENTRY		3009968		True				
ANR	3010002	CFGExitNode	EXIT		3009968		True				
ANR	3010003	Symbol	m_cb . get		3009968						
ANR	3010004	Symbol	m_cb		3009968						
ANR	3010005	Symbol	NULL		3009968						
ANR	3010006	Symbol	cb		3009968						
ANR	3010007	Function	DCMsg :: name	88:0:2042:2277							
ANR	3010008	FunctionDef	DCMsg :: name ()		3010007	0					
ANR	3010009	CompoundStatement		90:0:2069:2277	3010007	0					
ANR	3010010	IfStatement	if ( m_cmd_str )		3010007	0					
ANR	3010011	Condition	m_cmd_str	91:5:2076:2084	3010007	0	True				
ANR	3010012	Identifier	m_cmd_str		3010007	0					
ANR	3010013	CompoundStatement		2:17:18:18	3010007	1					
ANR	3010014	ReturnStatement	return m_cmd_str ;	92:2:2092:2108	3010007	0	True				
ANR	3010015	Identifier	m_cmd_str		3010007	0					
ANR	3010016	ExpressionStatement	m_cmd_str = getCommandString ( m_cmd )	94:1:2114:2151	3010007	1	True				
ANR	3010017	AssignmentExpression	m_cmd_str = getCommandString ( m_cmd )		3010007	0		=			
ANR	3010018	Identifier	m_cmd_str		3010007	0					
ANR	3010019	CallExpression	getCommandString ( m_cmd )		3010007	1					
ANR	3010020	Callee	getCommandString		3010007	0					
ANR	3010021	Identifier	getCommandString		3010007	0					
ANR	3010022	ArgumentList	m_cmd		3010007	1					
ANR	3010023	Argument	m_cmd		3010007	0					
ANR	3010024	Identifier	m_cmd		3010007	0					
ANR	3010025	IfStatement	if ( ! m_cmd_str )		3010007	2					
ANR	3010026	Condition	! m_cmd_str	95:5:2158:2167	3010007	0	True				
ANR	3010027	UnaryOperationExpression	! m_cmd_str		3010007	0					
ANR	3010028	UnaryOperator	!		3010007	0					
ANR	3010029	Identifier	m_cmd_str		3010007	1					
ANR	3010030	CompoundStatement		6:18:101:101	3010007	1					
ANR	3010031	ExpressionStatement	"m_cmd_str_buf . sprintf ( ""command %d"" , m_cmd )"	96:2:2175:2216	3010007	0	True				
ANR	3010032	CallExpression	"m_cmd_str_buf . sprintf ( ""command %d"" , m_cmd )"		3010007	0					
ANR	3010033	Callee	m_cmd_str_buf . sprintf		3010007	0					
ANR	3010034	MemberAccess	m_cmd_str_buf . sprintf		3010007	0					
ANR	3010035	Identifier	m_cmd_str_buf		3010007	0					
ANR	3010036	Identifier	sprintf		3010007	1					
ANR	3010037	ArgumentList	"""command %d"""		3010007	1					
ANR	3010038	Argument	"""command %d"""		3010007	0					
ANR	3010039	PrimaryExpression	"""command %d"""		3010007	0					
ANR	3010040	Argument	m_cmd		3010007	1					
ANR	3010041	Identifier	m_cmd		3010007	0					
ANR	3010042	ExpressionStatement	m_cmd_str = m_cmd_str_buf . Value ( )	97:2:2220:2253	3010007	1	True				
ANR	3010043	AssignmentExpression	m_cmd_str = m_cmd_str_buf . Value ( )		3010007	0		=			
ANR	3010044	Identifier	m_cmd_str		3010007	0					
ANR	3010045	CallExpression	m_cmd_str_buf . Value ( )		3010007	1					
ANR	3010046	Callee	m_cmd_str_buf . Value		3010007	0					
ANR	3010047	MemberAccess	m_cmd_str_buf . Value		3010007	0					
ANR	3010048	Identifier	m_cmd_str_buf		3010007	0					
ANR	3010049	Identifier	Value		3010007	1					
ANR	3010050	ArgumentList			3010007	1					
ANR	3010051	ReturnStatement	return m_cmd_str ;	99:1:2259:2275	3010007	3	True				
ANR	3010052	Identifier	m_cmd_str		3010007	0					
ANR	3010053	ReturnType	char const *		3010007	1					
ANR	3010054	Identifier	DCMsg :: name		3010007	2					
ANR	3010055	ParameterList			3010007	3					
ANR	3010056	CFGEntryNode	ENTRY		3010007		True				
ANR	3010057	CFGExitNode	EXIT		3010007		True				
ANR	3010058	Symbol	m_cmd_str		3010007						
ANR	3010059	Symbol	m_cmd		3010007						
ANR	3010060	Symbol	getCommandString		3010007						
ANR	3010061	Symbol	m_cmd_str_buf . Value		3010007						
ANR	3010062	Symbol	m_cmd_str_buf		3010007						
ANR	3010063	Function	DCMsg :: deliveryStatus	102:0:2280:2446							
ANR	3010064	FunctionDef	DCMsg :: deliveryStatus (DeliveryStatus s)		3010063	0					
ANR	3010065	CompoundStatement		104:0:2325:2446	3010063	0					
ANR	3010066	IfStatement	if ( m_delivery_status != DELIVERY_CANCELED )		3010063	0					
ANR	3010067	Condition	m_delivery_status != DELIVERY_CANCELED	106:5:2375:2412	3010063	0	True				
ANR	3010068	EqualityExpression	m_delivery_status != DELIVERY_CANCELED		3010063	0		!=			
ANR	3010069	Identifier	m_delivery_status		3010063	0					
ANR	3010070	Identifier	DELIVERY_CANCELED		3010063	1					
ANR	3010071	CompoundStatement		3:46:90:90	3010063	1					
ANR	3010072	ExpressionStatement	m_delivery_status = s	107:2:2420:2441	3010063	0	True				
ANR	3010073	AssignmentExpression	m_delivery_status = s		3010063	0		=			
ANR	3010074	Identifier	m_delivery_status		3010063	0					
ANR	3010075	Identifier	s		3010063	1					
ANR	3010076	ReturnType	void		3010063	1					
ANR	3010077	Identifier	DCMsg :: deliveryStatus		3010063	2					
ANR	3010078	ParameterList	DeliveryStatus s		3010063	3					
ANR	3010079	Parameter	DeliveryStatus s	103:22:2307:2322	3010063	0	True				
ANR	3010080	ParameterType	DeliveryStatus		3010063	0					
ANR	3010081	Identifier	s		3010063	1					
ANR	3010082	CFGEntryNode	ENTRY		3010063		True				
ANR	3010083	CFGExitNode	EXIT		3010063		True				
ANR	3010084	Symbol	DELIVERY_CANCELED		3010063						
ANR	3010085	Symbol	s		3010063						
ANR	3010086	Symbol	m_delivery_status		3010063						
ANR	3010087	Function	DCMsg :: setMessenger	111:0:2449:2526							
ANR	3010088	FunctionDef	DCMsg :: setMessenger (DCMessenger * messenger)		3010087	0					
ANR	3010089	CompoundStatement		113:0:2498:2526	3010087	0					
ANR	3010090	ExpressionStatement	m_messenger = messenger	114:1:2501:2524	3010087	0	True				
ANR	3010091	AssignmentExpression	m_messenger = messenger		3010087	0		=			
ANR	3010092	Identifier	m_messenger		3010087	0					
ANR	3010093	Identifier	messenger		3010087	1					
ANR	3010094	ReturnType	void		3010087	1					
ANR	3010095	Identifier	DCMsg :: setMessenger		3010087	2					
ANR	3010096	ParameterList	DCMessenger * messenger		3010087	3					
ANR	3010097	Parameter	DCMessenger * messenger	112:20:2474:2495	3010087	0	True				
ANR	3010098	ParameterType	DCMessenger *		3010087	0					
ANR	3010099	Identifier	messenger		3010087	1					
ANR	3010100	CFGEntryNode	ENTRY		3010087		True				
ANR	3010101	CFGExitNode	EXIT		3010087		True				
ANR	3010102	Symbol	messenger		3010087						
ANR	3010103	Symbol	m_messenger		3010087						
ANR	3010104	Function	DCMsg :: cancelMessage	117:0:2529:2915							
ANR	3010105	FunctionDef	DCMsg :: cancelMessage (char const * reason)		3010104	0					
ANR	3010106	CompoundStatement		119:0:2575:2915	3010104	0					
ANR	3010107	ExpressionStatement	deliveryStatus ( DELIVERY_CANCELED )	120:1:2578:2613	3010104	0	True				
ANR	3010108	CallExpression	deliveryStatus ( DELIVERY_CANCELED )		3010104	0					
ANR	3010109	Callee	deliveryStatus		3010104	0					
ANR	3010110	Identifier	deliveryStatus		3010104	0					
ANR	3010111	ArgumentList	DELIVERY_CANCELED		3010104	1					
ANR	3010112	Argument	DELIVERY_CANCELED		3010104	0					
ANR	3010113	Identifier	DELIVERY_CANCELED		3010104	0					
ANR	3010114	IfStatement	if ( ! reason )		3010104	1					
ANR	3010115	Condition	! reason	121:5:2620:2626	3010104	0	True				
ANR	3010116	UnaryOperationExpression	! reason		3010104	0					
ANR	3010117	UnaryOperator	!		3010104	0					
ANR	3010118	Identifier	reason		3010104	1					
ANR	3010119	CompoundStatement		3:15:54:54	3010104	1					
ANR	3010120	ExpressionStatement	"reason = ""operation was canceled"""	122:2:2634:2667	3010104	0	True				
ANR	3010121	AssignmentExpression	"reason = ""operation was canceled"""		3010104	0		=			
ANR	3010122	Identifier	reason		3010104	0					
ANR	3010123	PrimaryExpression	"""operation was canceled"""		3010104	1					
ANR	3010124	ExpressionStatement	"addError ( CEDAR_ERR_CANCELED , reason )"	124:1:2673:2711	3010104	2	True				
ANR	3010125	CallExpression	"addError ( CEDAR_ERR_CANCELED , reason )"		3010104	0					
ANR	3010126	Callee	addError		3010104	0					
ANR	3010127	Identifier	addError		3010104	0					
ANR	3010128	ArgumentList	CEDAR_ERR_CANCELED		3010104	1					
ANR	3010129	Argument	CEDAR_ERR_CANCELED		3010104	0					
ANR	3010130	Identifier	CEDAR_ERR_CANCELED		3010104	0					
ANR	3010131	Argument	reason		3010104	1					
ANR	3010132	Identifier	reason		3010104	0					
ANR	3010133	IfStatement	if ( m_messenger . get ( ) )		3010104	3					
ANR	3010134	Condition	m_messenger . get ( )	126:5:2719:2735	3010104	0	True				
ANR	3010135	CallExpression	m_messenger . get ( )		3010104	0					
ANR	3010136	Callee	m_messenger . get		3010104	0					
ANR	3010137	MemberAccess	m_messenger . get		3010104	0					
ANR	3010138	Identifier	m_messenger		3010104	0					
ANR	3010139	Identifier	get		3010104	1					
ANR	3010140	ArgumentList			3010104	1					
ANR	3010141	CompoundStatement		8:25:163:163	3010104	1					
ANR	3010142	ExpressionStatement	m_messenger -> cancelMessage ( this )	127:2:2743:2777	3010104	0	True				
ANR	3010143	CallExpression	m_messenger -> cancelMessage ( this )		3010104	0					
ANR	3010144	Callee	m_messenger -> cancelMessage		3010104	0					
ANR	3010145	PtrMemberAccess	m_messenger -> cancelMessage		3010104	0					
ANR	3010146	Identifier	m_messenger		3010104	0					
ANR	3010147	Identifier	cancelMessage		3010104	1					
ANR	3010148	ArgumentList	this		3010104	1					
ANR	3010149	Argument	this		3010104	0					
ANR	3010150	Identifier	this		3010104	0					
ANR	3010151	ReturnType	void		3010104	1					
ANR	3010152	Identifier	DCMsg :: cancelMessage		3010104	2					
ANR	3010153	ParameterList	char const * reason		3010104	3					
ANR	3010154	Parameter	char const * reason	118:21:2555:2572	3010104	0	True				
ANR	3010155	ParameterType	char const *		3010104	0					
ANR	3010156	Identifier	reason		3010104	1					
ANR	3010157	CFGEntryNode	ENTRY		3010104		True				
ANR	3010158	CFGExitNode	EXIT		3010104		True				
ANR	3010159	Symbol	DELIVERY_CANCELED		3010104						
ANR	3010160	Symbol	reason		3010104						
ANR	3010161	Symbol	m_messenger		3010104						
ANR	3010162	Symbol	m_messenger . get		3010104						
ANR	3010163	Symbol	this		3010104						
ANR	3010164	Symbol	CEDAR_ERR_CANCELED		3010104						
ANR	3010165	Function	DCMsg :: callMessageSendFailed	133:0:2918:3064							
ANR	3010166	FunctionDef	DCMsg :: callMessageSendFailed (DCMessenger * messenger)		3010165	0					
ANR	3010167	CompoundStatement		135:0:2978:3064	3010165	0					
ANR	3010168	ExpressionStatement	deliveryStatus ( DELIVERY_FAILED )	136:1:2981:3014	3010165	0	True				
ANR	3010169	CallExpression	deliveryStatus ( DELIVERY_FAILED )		3010165	0					
ANR	3010170	Callee	deliveryStatus		3010165	0					
ANR	3010171	Identifier	deliveryStatus		3010165	0					
ANR	3010172	ArgumentList	DELIVERY_FAILED		3010165	1					
ANR	3010173	Argument	DELIVERY_FAILED		3010165	0					
ANR	3010174	Identifier	DELIVERY_FAILED		3010165	0					
ANR	3010175	ExpressionStatement	messageSendFailed ( messenger )	137:1:3017:3047	3010165	1	True				
ANR	3010176	CallExpression	messageSendFailed ( messenger )		3010165	0					
ANR	3010177	Callee	messageSendFailed		3010165	0					
ANR	3010178	Identifier	messageSendFailed		3010165	0					
ANR	3010179	ArgumentList	messenger		3010165	1					
ANR	3010180	Argument	messenger		3010165	0					
ANR	3010181	Identifier	messenger		3010165	0					
ANR	3010182	ExpressionStatement	doCallback ( )	138:1:3050:3062	3010165	2	True				
ANR	3010183	CallExpression	doCallback ( )		3010165	0					
ANR	3010184	Callee	doCallback		3010165	0					
ANR	3010185	Identifier	doCallback		3010165	0					
ANR	3010186	ArgumentList			3010165	1					
ANR	3010187	ReturnType	void		3010165	1					
ANR	3010188	Identifier	DCMsg :: callMessageSendFailed		3010165	2					
ANR	3010189	ParameterList	DCMessenger * messenger		3010165	3					
ANR	3010190	Parameter	DCMessenger * messenger	134:30:2953:2974	3010165	0	True				
ANR	3010191	ParameterType	DCMessenger *		3010165	0					
ANR	3010192	Identifier	messenger		3010165	1					
ANR	3010193	CFGEntryNode	ENTRY		3010165		True				
ANR	3010194	CFGExitNode	EXIT		3010165		True				
ANR	3010195	Symbol	DELIVERY_FAILED		3010165						
ANR	3010196	Symbol	messenger		3010165						
ANR	3010197	Function	DCMsg :: callMessageReceiveFailed	141:0:3067:3219							
ANR	3010198	FunctionDef	DCMsg :: callMessageReceiveFailed (DCMessenger * messenger)		3010197	0					
ANR	3010199	CompoundStatement		143:0:3130:3219	3010197	0					
ANR	3010200	ExpressionStatement	deliveryStatus ( DELIVERY_FAILED )	144:1:3133:3166	3010197	0	True				
ANR	3010201	CallExpression	deliveryStatus ( DELIVERY_FAILED )		3010197	0					
ANR	3010202	Callee	deliveryStatus		3010197	0					
ANR	3010203	Identifier	deliveryStatus		3010197	0					
ANR	3010204	ArgumentList	DELIVERY_FAILED		3010197	1					
ANR	3010205	Argument	DELIVERY_FAILED		3010197	0					
ANR	3010206	Identifier	DELIVERY_FAILED		3010197	0					
ANR	3010207	ExpressionStatement	messageReceiveFailed ( messenger )	145:1:3169:3202	3010197	1	True				
ANR	3010208	CallExpression	messageReceiveFailed ( messenger )		3010197	0					
ANR	3010209	Callee	messageReceiveFailed		3010197	0					
ANR	3010210	Identifier	messageReceiveFailed		3010197	0					
ANR	3010211	ArgumentList	messenger		3010197	1					
ANR	3010212	Argument	messenger		3010197	0					
ANR	3010213	Identifier	messenger		3010197	0					
ANR	3010214	ExpressionStatement	doCallback ( )	146:1:3205:3217	3010197	2	True				
ANR	3010215	CallExpression	doCallback ( )		3010197	0					
ANR	3010216	Callee	doCallback		3010197	0					
ANR	3010217	Identifier	doCallback		3010197	0					
ANR	3010218	ArgumentList			3010197	1					
ANR	3010219	ReturnType	void		3010197	1					
ANR	3010220	Identifier	DCMsg :: callMessageReceiveFailed		3010197	2					
ANR	3010221	ParameterList	DCMessenger * messenger		3010197	3					
ANR	3010222	Parameter	DCMessenger * messenger	142:33:3105:3126	3010197	0	True				
ANR	3010223	ParameterType	DCMessenger *		3010197	0					
ANR	3010224	Identifier	messenger		3010197	1					
ANR	3010225	CFGEntryNode	ENTRY		3010197		True				
ANR	3010226	CFGExitNode	EXIT		3010197		True				
ANR	3010227	Symbol	DELIVERY_FAILED		3010197						
ANR	3010228	Symbol	messenger		3010197						
ANR	3010229	Function	DCMsg :: callMessageSent	149:0:3222:3489							
ANR	3010230	FunctionDef	"DCMsg :: callMessageSent (DCMessenger * messenger , Sock * sock)"		3010229	0					
ANR	3010231	CompoundStatement		152:0:3313:3489	3010229	0					
ANR	3010232	ExpressionStatement	deliveryStatus ( DELIVERY_SUCCEEDED )	153:1:3316:3352	3010229	0	True				
ANR	3010233	CallExpression	deliveryStatus ( DELIVERY_SUCCEEDED )		3010229	0					
ANR	3010234	Callee	deliveryStatus		3010229	0					
ANR	3010235	Identifier	deliveryStatus		3010229	0					
ANR	3010236	ArgumentList	DELIVERY_SUCCEEDED		3010229	1					
ANR	3010237	Argument	DELIVERY_SUCCEEDED		3010229	0					
ANR	3010238	Identifier	DELIVERY_SUCCEEDED		3010229	0					
ANR	3010239	IdentifierDeclStatement	"MessageClosureEnum closure = messageSent ( messenger , sock ) ;"	154:1:3355:3414	3010229	1	True				
ANR	3010240	IdentifierDecl	"closure = messageSent ( messenger , sock )"		3010229	0					
ANR	3010241	IdentifierDeclType	MessageClosureEnum		3010229	0					
ANR	3010242	Identifier	closure		3010229	1					
ANR	3010243	AssignmentExpression	"closure = messageSent ( messenger , sock )"		3010229	2		=			
ANR	3010244	Identifier	closure		3010229	0					
ANR	3010245	CallExpression	"messageSent ( messenger , sock )"		3010229	1					
ANR	3010246	Callee	messageSent		3010229	0					
ANR	3010247	Identifier	messageSent		3010229	0					
ANR	3010248	ArgumentList	messenger		3010229	1					
ANR	3010249	Argument	messenger		3010229	0					
ANR	3010250	Identifier	messenger		3010229	0					
ANR	3010251	Argument	sock		3010229	1					
ANR	3010252	Identifier	sock		3010229	0					
ANR	3010253	IfStatement	if ( closure == MESSAGE_FINISHED )		3010229	2					
ANR	3010254	Condition	closure == MESSAGE_FINISHED	155:5:3421:3447	3010229	0	True				
ANR	3010255	EqualityExpression	closure == MESSAGE_FINISHED		3010229	0		==			
ANR	3010256	Identifier	closure		3010229	0					
ANR	3010257	Identifier	MESSAGE_FINISHED		3010229	1					
ANR	3010258	CompoundStatement		4:35:137:137	3010229	1					
ANR	3010259	ExpressionStatement	doCallback ( )	156:2:3455:3467	3010229	0	True				
ANR	3010260	CallExpression	doCallback ( )		3010229	0					
ANR	3010261	Callee	doCallback		3010229	0					
ANR	3010262	Identifier	doCallback		3010229	0					
ANR	3010263	ArgumentList			3010229	1					
ANR	3010264	ReturnStatement	return closure ;	158:1:3473:3487	3010229	3	True				
ANR	3010265	Identifier	closure		3010229	0					
ANR	3010266	ReturnType	DCMsg :: MessageClosureEnum		3010229	1					
ANR	3010267	Identifier	DCMsg :: callMessageSent		3010229	2					
ANR	3010268	ParameterList	"DCMessenger * messenger , Sock * sock"		3010229	3					
ANR	3010269	Parameter	DCMessenger * messenger	151:4:3276:3297	3010229	0	True				
ANR	3010270	ParameterType	DCMessenger *		3010229	0					
ANR	3010271	Identifier	messenger		3010229	1					
ANR	3010272	Parameter	Sock * sock	151:28:3300:3309	3010229	1	True				
ANR	3010273	ParameterType	Sock *		3010229	0					
ANR	3010274	Identifier	sock		3010229	1					
ANR	3010275	CFGEntryNode	ENTRY		3010229		True				
ANR	3010276	CFGExitNode	EXIT		3010229		True				
ANR	3010277	Symbol	sock		3010229						
ANR	3010278	Symbol	MESSAGE_FINISHED		3010229						
ANR	3010279	Symbol	messenger		3010229						
ANR	3010280	Symbol	messageSent		3010229						
ANR	3010281	Symbol	DELIVERY_SUCCEEDED		3010229						
ANR	3010282	Symbol	closure		3010229						
ANR	3010283	Function	DCMsg :: callMessageReceived	161:0:3492:3767							
ANR	3010284	FunctionDef	"DCMsg :: callMessageReceived (DCMessenger * messenger , Sock * sock)"		3010283	0					
ANR	3010285	CompoundStatement		164:0:3587:3767	3010283	0					
ANR	3010286	ExpressionStatement	deliveryStatus ( DELIVERY_SUCCEEDED )	165:1:3590:3626	3010283	0	True				
ANR	3010287	CallExpression	deliveryStatus ( DELIVERY_SUCCEEDED )		3010283	0					
ANR	3010288	Callee	deliveryStatus		3010283	0					
ANR	3010289	Identifier	deliveryStatus		3010283	0					
ANR	3010290	ArgumentList	DELIVERY_SUCCEEDED		3010283	1					
ANR	3010291	Argument	DELIVERY_SUCCEEDED		3010283	0					
ANR	3010292	Identifier	DELIVERY_SUCCEEDED		3010283	0					
ANR	3010293	IdentifierDeclStatement	"MessageClosureEnum closure = messageReceived ( messenger , sock ) ;"	166:1:3629:3692	3010283	1	True				
ANR	3010294	IdentifierDecl	"closure = messageReceived ( messenger , sock )"		3010283	0					
ANR	3010295	IdentifierDeclType	MessageClosureEnum		3010283	0					
ANR	3010296	Identifier	closure		3010283	1					
ANR	3010297	AssignmentExpression	"closure = messageReceived ( messenger , sock )"		3010283	2		=			
ANR	3010298	Identifier	closure		3010283	0					
ANR	3010299	CallExpression	"messageReceived ( messenger , sock )"		3010283	1					
ANR	3010300	Callee	messageReceived		3010283	0					
ANR	3010301	Identifier	messageReceived		3010283	0					
ANR	3010302	ArgumentList	messenger		3010283	1					
ANR	3010303	Argument	messenger		3010283	0					
ANR	3010304	Identifier	messenger		3010283	0					
ANR	3010305	Argument	sock		3010283	1					
ANR	3010306	Identifier	sock		3010283	0					
ANR	3010307	IfStatement	if ( closure == MESSAGE_FINISHED )		3010283	2					
ANR	3010308	Condition	closure == MESSAGE_FINISHED	167:5:3699:3725	3010283	0	True				
ANR	3010309	EqualityExpression	closure == MESSAGE_FINISHED		3010283	0		==			
ANR	3010310	Identifier	closure		3010283	0					
ANR	3010311	Identifier	MESSAGE_FINISHED		3010283	1					
ANR	3010312	CompoundStatement		4:35:141:141	3010283	1					
ANR	3010313	ExpressionStatement	doCallback ( )	168:2:3733:3745	3010283	0	True				
ANR	3010314	CallExpression	doCallback ( )		3010283	0					
ANR	3010315	Callee	doCallback		3010283	0					
ANR	3010316	Identifier	doCallback		3010283	0					
ANR	3010317	ArgumentList			3010283	1					
ANR	3010318	ReturnStatement	return closure ;	170:1:3751:3765	3010283	3	True				
ANR	3010319	Identifier	closure		3010283	0					
ANR	3010320	ReturnType	DCMsg :: MessageClosureEnum		3010283	1					
ANR	3010321	Identifier	DCMsg :: callMessageReceived		3010283	2					
ANR	3010322	ParameterList	"DCMessenger * messenger , Sock * sock"		3010283	3					
ANR	3010323	Parameter	DCMessenger * messenger	163:4:3550:3571	3010283	0	True				
ANR	3010324	ParameterType	DCMessenger *		3010283	0					
ANR	3010325	Identifier	messenger		3010283	1					
ANR	3010326	Parameter	Sock * sock	163:28:3574:3583	3010283	1	True				
ANR	3010327	ParameterType	Sock *		3010283	0					
ANR	3010328	Identifier	sock		3010283	1					
ANR	3010329	CFGEntryNode	ENTRY		3010283		True				
ANR	3010330	CFGExitNode	EXIT		3010283		True				
ANR	3010331	Symbol	sock		3010283						
ANR	3010332	Symbol	MESSAGE_FINISHED		3010283						
ANR	3010333	Symbol	messenger		3010283						
ANR	3010334	Symbol	messageReceived		3010283						
ANR	3010335	Symbol	DELIVERY_SUCCEEDED		3010283						
ANR	3010336	Symbol	closure		3010283						
ANR	3010337	Function	DCMsg :: messageSendFailed	189:0:4052:4139							
ANR	3010338	FunctionDef	DCMsg :: messageSendFailed (DCMessenger * messenger)		3010337	0					
ANR	3010339	CompoundStatement		191:0:4108:4139	3010337	0					
ANR	3010340	ExpressionStatement	reportFailure ( messenger )	192:1:4111:4137	3010337	0	True				
ANR	3010341	CallExpression	reportFailure ( messenger )		3010337	0					
ANR	3010342	Callee	reportFailure		3010337	0					
ANR	3010343	Identifier	reportFailure		3010337	0					
ANR	3010344	ArgumentList	messenger		3010337	1					
ANR	3010345	Argument	messenger		3010337	0					
ANR	3010346	Identifier	messenger		3010337	0					
ANR	3010347	ReturnType	void		3010337	1					
ANR	3010348	Identifier	DCMsg :: messageSendFailed		3010337	2					
ANR	3010349	ParameterList	DCMessenger * messenger		3010337	3					
ANR	3010350	Parameter	DCMessenger * messenger	190:26:4083:4104	3010337	0	True				
ANR	3010351	ParameterType	DCMessenger *		3010337	0					
ANR	3010352	Identifier	messenger		3010337	1					
ANR	3010353	CFGEntryNode	ENTRY		3010337		True				
ANR	3010354	CFGExitNode	EXIT		3010337		True				
ANR	3010355	Symbol	messenger		3010337						
ANR	3010356	Function	DCMsg :: messageReceiveFailed	195:0:4142:4232							
ANR	3010357	FunctionDef	DCMsg :: messageReceiveFailed (DCMessenger * messenger)		3010356	0					
ANR	3010358	CompoundStatement		197:0:4201:4232	3010356	0					
ANR	3010359	ExpressionStatement	reportFailure ( messenger )	198:1:4204:4230	3010356	0	True				
ANR	3010360	CallExpression	reportFailure ( messenger )		3010356	0					
ANR	3010361	Callee	reportFailure		3010356	0					
ANR	3010362	Identifier	reportFailure		3010356	0					
ANR	3010363	ArgumentList	messenger		3010356	1					
ANR	3010364	Argument	messenger		3010356	0					
ANR	3010365	Identifier	messenger		3010356	0					
ANR	3010366	ReturnType	void		3010356	1					
ANR	3010367	Identifier	DCMsg :: messageReceiveFailed		3010356	2					
ANR	3010368	ParameterList	DCMessenger * messenger		3010356	3					
ANR	3010369	Parameter	DCMessenger * messenger	196:29:4176:4197	3010356	0	True				
ANR	3010370	ParameterType	DCMessenger *		3010356	0					
ANR	3010371	Identifier	messenger		3010356	1					
ANR	3010372	CFGEntryNode	ENTRY		3010356		True				
ANR	3010373	CFGExitNode	EXIT		3010356		True				
ANR	3010374	Symbol	messenger		3010356						
ANR	3010375	Function	DCMsg :: reportSuccess	201:0:4235:4398							
ANR	3010376	FunctionDef	DCMsg :: reportSuccess (DCMessenger * messenger)		3010375	0					
ANR	3010377	CompoundStatement		203:0:4287:4398	3010375	0					
ANR	3010378	ExpressionStatement	"dprintf ( m_msg_success_debug_level , ""Completed %s to %s\\n"" , name ( ) , messenger -> peerDescription ( ) )"	204:1:4290:4396	3010375	0	True				
ANR	3010379	CallExpression	"dprintf ( m_msg_success_debug_level , ""Completed %s to %s\\n"" , name ( ) , messenger -> peerDescription ( ) )"		3010375	0					
ANR	3010380	Callee	dprintf		3010375	0					
ANR	3010381	Identifier	dprintf		3010375	0					
ANR	3010382	ArgumentList	m_msg_success_debug_level		3010375	1					
ANR	3010383	Argument	m_msg_success_debug_level		3010375	0					
ANR	3010384	Identifier	m_msg_success_debug_level		3010375	0					
ANR	3010385	Argument	"""Completed %s to %s\\n"""		3010375	1					
ANR	3010386	PrimaryExpression	"""Completed %s to %s\\n"""		3010375	0					
ANR	3010387	Argument	name ( )		3010375	2					
ANR	3010388	CallExpression	name ( )		3010375	0					
ANR	3010389	Callee	name		3010375	0					
ANR	3010390	Identifier	name		3010375	0					
ANR	3010391	ArgumentList			3010375	1					
ANR	3010392	Argument	messenger -> peerDescription ( )		3010375	3					
ANR	3010393	CallExpression	messenger -> peerDescription ( )		3010375	0					
ANR	3010394	Callee	messenger -> peerDescription		3010375	0					
ANR	3010395	PtrMemberAccess	messenger -> peerDescription		3010375	0					
ANR	3010396	Identifier	messenger		3010375	0					
ANR	3010397	Identifier	peerDescription		3010375	1					
ANR	3010398	ArgumentList			3010375	1					
ANR	3010399	ReturnType	void		3010375	1					
ANR	3010400	Identifier	DCMsg :: reportSuccess		3010375	2					
ANR	3010401	ParameterList	DCMessenger * messenger		3010375	3					
ANR	3010402	Parameter	DCMessenger * messenger	202:22:4262:4283	3010375	0	True				
ANR	3010403	ParameterType	DCMessenger *		3010375	0					
ANR	3010404	Identifier	messenger		3010375	1					
ANR	3010405	CFGEntryNode	ENTRY		3010375		True				
ANR	3010406	CFGExitNode	EXIT		3010375		True				
ANR	3010407	Symbol	messenger		3010375						
ANR	3010408	Symbol	* messenger		3010375						
ANR	3010409	Symbol	messenger -> peerDescription		3010375						
ANR	3010410	Symbol	name		3010375						
ANR	3010411	Symbol	m_msg_success_debug_level		3010375						
ANR	3010412	Function	DCMsg :: reportFailure	209:0:4401:4728							
ANR	3010413	FunctionDef	DCMsg :: reportFailure (DCMessenger * messenger)		3010412	0					
ANR	3010414	CompoundStatement		211:0:4453:4728	3010412	0					
ANR	3010415	IdentifierDeclStatement	int debug_level = m_msg_failure_debug_level ;	212:1:4456:4499	3010412	0	True				
ANR	3010416	IdentifierDecl	debug_level = m_msg_failure_debug_level		3010412	0					
ANR	3010417	IdentifierDeclType	int		3010412	0					
ANR	3010418	Identifier	debug_level		3010412	1					
ANR	3010419	AssignmentExpression	debug_level = m_msg_failure_debug_level		3010412	2		=			
ANR	3010420	Identifier	m_msg_failure_debug_level		3010412	0					
ANR	3010421	Identifier	m_msg_failure_debug_level		3010412	1					
ANR	3010422	IfStatement	if ( m_delivery_status == DELIVERY_CANCELED )		3010412	1					
ANR	3010423	Condition	m_delivery_status == DELIVERY_CANCELED	213:5:4506:4543	3010412	0	True				
ANR	3010424	EqualityExpression	m_delivery_status == DELIVERY_CANCELED		3010412	0		==			
ANR	3010425	Identifier	m_delivery_status		3010412	0					
ANR	3010426	Identifier	DELIVERY_CANCELED		3010412	1					
ANR	3010427	CompoundStatement		3:46:93:93	3010412	1					
ANR	3010428	ExpressionStatement	debug_level = m_msg_cancel_debug_level	214:2:4551:4589	3010412	0	True				
ANR	3010429	AssignmentExpression	debug_level = m_msg_cancel_debug_level		3010412	0		=			
ANR	3010430	Identifier	debug_level		3010412	0					
ANR	3010431	Identifier	m_msg_cancel_debug_level		3010412	1					
ANR	3010432	ExpressionStatement	"dprintf ( debug_level , ""Failed to send %s to %s: %s\\n"" , name ( ) , messenger -> peerDescription ( ) , m_errstack . getFullText ( ) )"	216:1:4595:4726	3010412	2	True				
ANR	3010433	CallExpression	"dprintf ( debug_level , ""Failed to send %s to %s: %s\\n"" , name ( ) , messenger -> peerDescription ( ) , m_errstack . getFullText ( ) )"		3010412	0					
ANR	3010434	Callee	dprintf		3010412	0					
ANR	3010435	Identifier	dprintf		3010412	0					
ANR	3010436	ArgumentList	debug_level		3010412	1					
ANR	3010437	Argument	debug_level		3010412	0					
ANR	3010438	Identifier	debug_level		3010412	0					
ANR	3010439	Argument	"""Failed to send %s to %s: %s\\n"""		3010412	1					
ANR	3010440	PrimaryExpression	"""Failed to send %s to %s: %s\\n"""		3010412	0					
ANR	3010441	Argument	name ( )		3010412	2					
ANR	3010442	CallExpression	name ( )		3010412	0					
ANR	3010443	Callee	name		3010412	0					
ANR	3010444	Identifier	name		3010412	0					
ANR	3010445	ArgumentList			3010412	1					
ANR	3010446	Argument	messenger -> peerDescription ( )		3010412	3					
ANR	3010447	CallExpression	messenger -> peerDescription ( )		3010412	0					
ANR	3010448	Callee	messenger -> peerDescription		3010412	0					
ANR	3010449	PtrMemberAccess	messenger -> peerDescription		3010412	0					
ANR	3010450	Identifier	messenger		3010412	0					
ANR	3010451	Identifier	peerDescription		3010412	1					
ANR	3010452	ArgumentList			3010412	1					
ANR	3010453	Argument	m_errstack . getFullText ( )		3010412	4					
ANR	3010454	CallExpression	m_errstack . getFullText ( )		3010412	0					
ANR	3010455	Callee	m_errstack . getFullText		3010412	0					
ANR	3010456	MemberAccess	m_errstack . getFullText		3010412	0					
ANR	3010457	Identifier	m_errstack		3010412	0					
ANR	3010458	Identifier	getFullText		3010412	1					
ANR	3010459	ArgumentList			3010412	1					
ANR	3010460	ReturnType	void		3010412	1					
ANR	3010461	Identifier	DCMsg :: reportFailure		3010412	2					
ANR	3010462	ParameterList	DCMessenger * messenger		3010412	3					
ANR	3010463	Parameter	DCMessenger * messenger	210:22:4428:4449	3010412	0	True				
ANR	3010464	ParameterType	DCMessenger *		3010412	0					
ANR	3010465	Identifier	messenger		3010412	1					
ANR	3010466	CFGEntryNode	ENTRY		3010412		True				
ANR	3010467	CFGExitNode	EXIT		3010412		True				
ANR	3010468	Symbol	m_msg_failure_debug_level		3010412						
ANR	3010469	Symbol	DELIVERY_CANCELED		3010412						
ANR	3010470	Symbol	debug_level		3010412						
ANR	3010471	Symbol	messenger		3010412						
ANR	3010472	Symbol	* messenger		3010412						
ANR	3010473	Symbol	messenger -> peerDescription		3010412						
ANR	3010474	Symbol	name		3010412						
ANR	3010475	Symbol	m_errstack . getFullText		3010412						
ANR	3010476	Symbol	m_delivery_status		3010412						
ANR	3010477	Symbol	m_msg_cancel_debug_level		3010412						
ANR	3010478	Symbol	m_errstack		3010412						
ANR	3010479	Function	DCMsg :: addError	222:0:4731:4941							
ANR	3010480	FunctionDef	"DCMsg :: addError (int code , char const * format)"		3010479	0					
ANR	3010481	CompoundStatement		224:0:4789:4941	3010479	0					
ANR	3010482	IdentifierDeclStatement	va_list args ;	225:1:4792:4804	3010479	0	True				
ANR	3010483	IdentifierDecl	args		3010479	0					
ANR	3010484	IdentifierDeclType	va_list		3010479	0					
ANR	3010485	Identifier	args		3010479	1					
ANR	3010486	ExpressionStatement	"va_start ( args , format )"	226:1:4807:4829	3010479	1	True				
ANR	3010487	CallExpression	"va_start ( args , format )"		3010479	0					
ANR	3010488	Callee	va_start		3010479	0					
ANR	3010489	Identifier	va_start		3010479	0					
ANR	3010490	ArgumentList	args		3010479	1					
ANR	3010491	Argument	args		3010479	0					
ANR	3010492	Identifier	args		3010479	0					
ANR	3010493	Argument	format		3010479	1					
ANR	3010494	Identifier	format		3010479	0					
ANR	3010495	IdentifierDeclStatement	MyString msg ;	228:1:4833:4845	3010479	2	True				
ANR	3010496	IdentifierDecl	msg		3010479	0					
ANR	3010497	IdentifierDeclType	MyString		3010479	0					
ANR	3010498	Identifier	msg		3010479	1					
ANR	3010499	ExpressionStatement	"msg . vsprintf ( format , args )"	229:1:4848:4875	3010479	3	True				
ANR	3010500	CallExpression	"msg . vsprintf ( format , args )"		3010479	0					
ANR	3010501	Callee	msg . vsprintf		3010479	0					
ANR	3010502	MemberAccess	msg . vsprintf		3010479	0					
ANR	3010503	Identifier	msg		3010479	0					
ANR	3010504	Identifier	vsprintf		3010479	1					
ANR	3010505	ArgumentList	format		3010479	1					
ANR	3010506	Argument	format		3010479	0					
ANR	3010507	Identifier	format		3010479	0					
ANR	3010508	Argument	args		3010479	1					
ANR	3010509	Identifier	args		3010479	0					
ANR	3010510	ExpressionStatement	"m_errstack . push ( ""CEDAR"" , code , msg . Value ( ) )"	230:1:4878:4923	3010479	4	True				
ANR	3010511	CallExpression	"m_errstack . push ( ""CEDAR"" , code , msg . Value ( ) )"		3010479	0					
ANR	3010512	Callee	m_errstack . push		3010479	0					
ANR	3010513	MemberAccess	m_errstack . push		3010479	0					
ANR	3010514	Identifier	m_errstack		3010479	0					
ANR	3010515	Identifier	push		3010479	1					
ANR	3010516	ArgumentList	"""CEDAR"""		3010479	1					
ANR	3010517	Argument	"""CEDAR"""		3010479	0					
ANR	3010518	PrimaryExpression	"""CEDAR"""		3010479	0					
ANR	3010519	Argument	code		3010479	1					
ANR	3010520	Identifier	code		3010479	0					
ANR	3010521	Argument	msg . Value ( )		3010479	2					
ANR	3010522	CallExpression	msg . Value ( )		3010479	0					
ANR	3010523	Callee	msg . Value		3010479	0					
ANR	3010524	MemberAccess	msg . Value		3010479	0					
ANR	3010525	Identifier	msg		3010479	0					
ANR	3010526	Identifier	Value		3010479	1					
ANR	3010527	ArgumentList			3010479	1					
ANR	3010528	ExpressionStatement	va_end ( args )	232:1:4927:4939	3010479	5	True				
ANR	3010529	CallExpression	va_end ( args )		3010479	0					
ANR	3010530	Callee	va_end		3010479	0					
ANR	3010531	Identifier	va_end		3010479	0					
ANR	3010532	ArgumentList	args		3010479	1					
ANR	3010533	Argument	args		3010479	0					
ANR	3010534	Identifier	args		3010479	0					
ANR	3010535	ReturnType	void		3010479	1					
ANR	3010536	Identifier	DCMsg :: addError		3010479	2					
ANR	3010537	ParameterList	"int code , char const * format"		3010479	3					
ANR	3010538	Parameter	int code	223:17:4753:4760	3010479	0	True				
ANR	3010539	ParameterType	int		3010479	0					
ANR	3010540	Identifier	code		3010479	1					
ANR	3010541	Parameter	char const * format	223:27:4763:4780	3010479	1	True				
ANR	3010542	ParameterType	char const *		3010479	0					
ANR	3010543	Identifier	format		3010479	1					
ANR	3010544	CFGEntryNode	ENTRY		3010479		True				
ANR	3010545	CFGExitNode	EXIT		3010479		True				
ANR	3010546	Symbol	args		3010479						
ANR	3010547	Symbol	msg		3010479						
ANR	3010548	Symbol	code		3010479						
ANR	3010549	Symbol	format		3010479						
ANR	3010550	Symbol	msg . Value		3010479						
ANR	3010551	Symbol	m_errstack		3010479						
ANR	3010552	Function	DCMsg :: getErrorStackText	235:0:4944:5020							
ANR	3010553	FunctionDef	DCMsg :: getErrorStackText ()		3010552	0					
ANR	3010554	CompoundStatement		237:0:4984:5020	3010552	0					
ANR	3010555	ReturnStatement	return m_errstack . getFullText ( ) ;	238:1:4987:5018	3010552	0	True				
ANR	3010556	CallExpression	m_errstack . getFullText ( )		3010552	0					
ANR	3010557	Callee	m_errstack . getFullText		3010552	0					
ANR	3010558	MemberAccess	m_errstack . getFullText		3010552	0					
ANR	3010559	Identifier	m_errstack		3010552	0					
ANR	3010560	Identifier	getFullText		3010552	1					
ANR	3010561	ArgumentList			3010552	1					
ANR	3010562	ReturnType	char const *		3010552	1					
ANR	3010563	Identifier	DCMsg :: getErrorStackText		3010552	2					
ANR	3010564	ParameterList			3010552	3					
ANR	3010565	CFGEntryNode	ENTRY		3010552		True				
ANR	3010566	CFGExitNode	EXIT		3010552		True				
ANR	3010567	Symbol	m_errstack . getFullText		3010552						
ANR	3010568	Symbol	m_errstack		3010552						
ANR	3010569	Function	DCMsg :: sockFailed	241:0:5023:5294							
ANR	3010570	FunctionDef	DCMsg :: sockFailed (Sock * sock)		3010569	0					
ANR	3010571	CompoundStatement		243:0:5060:5294	3010569	0					
ANR	3010572	IfStatement	if ( sock -> is_encode ( ) )		3010569	0					
ANR	3010573	Condition	sock -> is_encode ( )	245:5:5128:5144	3010569	0	True				
ANR	3010574	CallExpression	sock -> is_encode ( )		3010569	0					
ANR	3010575	Callee	sock -> is_encode		3010569	0					
ANR	3010576	PtrMemberAccess	sock -> is_encode		3010569	0					
ANR	3010577	Identifier	sock		3010569	0					
ANR	3010578	Identifier	is_encode		3010569	1					
ANR	3010579	ArgumentList			3010569	1					
ANR	3010580	CompoundStatement		3:25:87:87	3010569	1					
ANR	3010581	ExpressionStatement	"addError ( CEDAR_ERR_PUT_FAILED , ""failed writing to socket"" )"	246:2:5152:5212	3010569	0	True				
ANR	3010582	CallExpression	"addError ( CEDAR_ERR_PUT_FAILED , ""failed writing to socket"" )"		3010569	0					
ANR	3010583	Callee	addError		3010569	0					
ANR	3010584	Identifier	addError		3010569	0					
ANR	3010585	ArgumentList	CEDAR_ERR_PUT_FAILED		3010569	1					
ANR	3010586	Argument	CEDAR_ERR_PUT_FAILED		3010569	0					
ANR	3010587	Identifier	CEDAR_ERR_PUT_FAILED		3010569	0					
ANR	3010588	Argument	"""failed writing to socket"""		3010569	1					
ANR	3010589	PrimaryExpression	"""failed writing to socket"""		3010569	0					
ANR	3010590	ElseStatement	else		3010569	0					
ANR	3010591	CompoundStatement		6:6:162:162	3010569	0					
ANR	3010592	ExpressionStatement	"addError ( CEDAR_ERR_GET_FAILED , ""failed reading from socket"" )"	249:2:5227:5289	3010569	0	True				
ANR	3010593	CallExpression	"addError ( CEDAR_ERR_GET_FAILED , ""failed reading from socket"" )"		3010569	0					
ANR	3010594	Callee	addError		3010569	0					
ANR	3010595	Identifier	addError		3010569	0					
ANR	3010596	ArgumentList	CEDAR_ERR_GET_FAILED		3010569	1					
ANR	3010597	Argument	CEDAR_ERR_GET_FAILED		3010569	0					
ANR	3010598	Identifier	CEDAR_ERR_GET_FAILED		3010569	0					
ANR	3010599	Argument	"""failed reading from socket"""		3010569	1					
ANR	3010600	PrimaryExpression	"""failed reading from socket"""		3010569	0					
ANR	3010601	ReturnType	void		3010569	1					
ANR	3010602	Identifier	DCMsg :: sockFailed		3010569	2					
ANR	3010603	ParameterList	Sock * sock		3010569	3					
ANR	3010604	Parameter	Sock * sock	242:19:5047:5056	3010569	0	True				
ANR	3010605	ParameterType	Sock *		3010569	0					
ANR	3010606	Identifier	sock		3010569	1					
ANR	3010607	CFGEntryNode	ENTRY		3010569		True				
ANR	3010608	CFGExitNode	EXIT		3010569		True				
ANR	3010609	Symbol	sock		3010569						
ANR	3010610	Symbol	CEDAR_ERR_GET_FAILED		3010569						
ANR	3010611	Symbol	CEDAR_ERR_PUT_FAILED		3010569						
ANR	3010612	Symbol	sock -> is_encode		3010569						
ANR	3010613	Symbol	* sock		3010569						
ANR	3010614	Function	DCMessenger :: DCMessenger	254:0:5298:5487							
ANR	3010615	FunctionDef	DCMessenger :: DCMessenger (classy_counted_ptr < Daemon > daemon)		3010614	0					
ANR	3010616	CompoundStatement		255:0:5360:5487	3010614	0					
ANR	3010617	ExpressionStatement	m_daemon = daemon	256:1:5363:5380	3010614	0	True				
ANR	3010618	AssignmentExpression	m_daemon = daemon		3010614	0		=			
ANR	3010619	Identifier	m_daemon		3010614	0					
ANR	3010620	Identifier	daemon		3010614	1					
ANR	3010621	ExpressionStatement	m_sock = NULL	257:1:5383:5396	3010614	1	True				
ANR	3010622	AssignmentExpression	m_sock = NULL		3010614	0		=			
ANR	3010623	Identifier	m_sock		3010614	0					
ANR	3010624	Identifier	NULL		3010614	1					
ANR	3010625	ExpressionStatement	m_callback_msg = NULL	258:1:5399:5420	3010614	2	True				
ANR	3010626	AssignmentExpression	m_callback_msg = NULL		3010614	0		=			
ANR	3010627	Identifier	m_callback_msg		3010614	0					
ANR	3010628	Identifier	NULL		3010614	1					
ANR	3010629	ExpressionStatement	m_callback_sock = NULL	259:1:5423:5445	3010614	3	True				
ANR	3010630	AssignmentExpression	m_callback_sock = NULL		3010614	0		=			
ANR	3010631	Identifier	m_callback_sock		3010614	0					
ANR	3010632	Identifier	NULL		3010614	1					
ANR	3010633	ExpressionStatement	m_pending_operation = NOTHING_PENDING	260:1:5448:5485	3010614	4	True				
ANR	3010634	AssignmentExpression	m_pending_operation = NOTHING_PENDING		3010614	0		=			
ANR	3010635	Identifier	m_pending_operation		3010614	0					
ANR	3010636	Identifier	NOTHING_PENDING		3010614	1					
ANR	3010637	Identifier	DCMessenger :: DCMessenger		3010614	1					
ANR	3010638	ParameterList	classy_counted_ptr < Daemon > daemon		3010614	2					
ANR	3010639	Parameter	classy_counted_ptr < Daemon > daemon	254:26:5324:5356	3010614	0	True				
ANR	3010640	ParameterType	classy_counted_ptr < Daemon >		3010614	0					
ANR	3010641	Identifier	daemon		3010614	1					
ANR	3010642	CFGEntryNode	ENTRY		3010614		True				
ANR	3010643	CFGExitNode	EXIT		3010614		True				
ANR	3010644	Symbol	NULL		3010614						
ANR	3010645	Symbol	m_pending_operation		3010614						
ANR	3010646	Symbol	m_sock		3010614						
ANR	3010647	Symbol	m_callback_msg		3010614						
ANR	3010648	Symbol	NOTHING_PENDING		3010614						
ANR	3010649	Symbol	m_callback_sock		3010614						
ANR	3010650	Symbol	m_daemon		3010614						
ANR	3010651	Symbol	daemon		3010614						
ANR	3010652	Function	DCMessenger :: DCMessenger	263:0:5490:5654							
ANR	3010653	FunctionDef	DCMessenger :: DCMessenger (classy_counted_ptr < Sock > sock)		3010652	0					
ANR	3010654	CompoundStatement		265:0:5563:5654	3010652	0					
ANR	3010655	ExpressionStatement	m_callback_msg = NULL	266:1:5566:5587	3010652	0	True				
ANR	3010656	AssignmentExpression	m_callback_msg = NULL		3010652	0		=			
ANR	3010657	Identifier	m_callback_msg		3010652	0					
ANR	3010658	Identifier	NULL		3010652	1					
ANR	3010659	ExpressionStatement	m_callback_sock = NULL	267:1:5590:5612	3010652	1	True				
ANR	3010660	AssignmentExpression	m_callback_sock = NULL		3010652	0		=			
ANR	3010661	Identifier	m_callback_sock		3010652	0					
ANR	3010662	Identifier	NULL		3010652	1					
ANR	3010663	ExpressionStatement	m_pending_operation = NOTHING_PENDING	268:1:5615:5652	3010652	2	True				
ANR	3010664	AssignmentExpression	m_pending_operation = NOTHING_PENDING		3010652	0		=			
ANR	3010665	Identifier	m_pending_operation		3010652	0					
ANR	3010666	Identifier	NOTHING_PENDING		3010652	1					
ANR	3010667	Identifier	DCMessenger :: DCMessenger		3010652	1					
ANR	3010668	ParameterList	classy_counted_ptr < Sock > sock		3010652	2					
ANR	3010669	Parameter	classy_counted_ptr < Sock > sock	263:26:5516:5544	3010652	0	True				
ANR	3010670	ParameterType	classy_counted_ptr < Sock >		3010652	0					
ANR	3010671	Identifier	sock		3010652	1					
ANR	3010672	CFGEntryNode	ENTRY		3010652		True				
ANR	3010673	CFGExitNode	EXIT		3010652		True				
ANR	3010674	Symbol	sock		3010652						
ANR	3010675	Symbol	NULL		3010652						
ANR	3010676	Symbol	m_pending_operation		3010652						
ANR	3010677	Symbol	m_callback_msg		3010652						
ANR	3010678	Symbol	NOTHING_PENDING		3010652						
ANR	3010679	Symbol	m_callback_sock		3010652						
ANR	3010680	Function	DCMessenger :: ~DCMessenger	271:0:5657:5862							
ANR	3010681	FunctionDef	DCMessenger :: ~DCMessenger ()		3010680	0					
ANR	3010682	CompoundStatement		272:0:5685:5862	3010680	0					
ANR	3010683	ExpressionStatement	ASSERT ( ! m_callback_msg . get ( ) )	274:1:5755:5784	3010680	0	True				
ANR	3010684	CallExpression	ASSERT ( ! m_callback_msg . get ( ) )		3010680	0					
ANR	3010685	Callee	ASSERT		3010680	0					
ANR	3010686	Identifier	ASSERT		3010680	0					
ANR	3010687	ArgumentList	! m_callback_msg . get ( )		3010680	1					
ANR	3010688	Argument	! m_callback_msg . get ( )		3010680	0					
ANR	3010689	UnaryOperationExpression	! m_callback_msg . get ( )		3010680	0					
ANR	3010690	UnaryOperator	!		3010680	0					
ANR	3010691	CallExpression	m_callback_msg . get ( )		3010680	1					
ANR	3010692	Callee	m_callback_msg . get		3010680	0					
ANR	3010693	MemberAccess	m_callback_msg . get		3010680	0					
ANR	3010694	Identifier	m_callback_msg		3010680	0					
ANR	3010695	Identifier	get		3010680	1					
ANR	3010696	ArgumentList			3010680	1					
ANR	3010697	ExpressionStatement	ASSERT ( ! m_callback_sock )	275:1:5787:5811	3010680	1	True				
ANR	3010698	CallExpression	ASSERT ( ! m_callback_sock )		3010680	0					
ANR	3010699	Callee	ASSERT		3010680	0					
ANR	3010700	Identifier	ASSERT		3010680	0					
ANR	3010701	ArgumentList	! m_callback_sock		3010680	1					
ANR	3010702	Argument	! m_callback_sock		3010680	0					
ANR	3010703	UnaryOperationExpression	! m_callback_sock		3010680	0					
ANR	3010704	UnaryOperator	!		3010680	0					
ANR	3010705	Identifier	m_callback_sock		3010680	1					
ANR	3010706	ExpressionStatement	ASSERT ( m_pending_operation == NOTHING_PENDING )	276:1:5814:5860	3010680	2	True				
ANR	3010707	CallExpression	ASSERT ( m_pending_operation == NOTHING_PENDING )		3010680	0					
ANR	3010708	Callee	ASSERT		3010680	0					
ANR	3010709	Identifier	ASSERT		3010680	0					
ANR	3010710	ArgumentList	m_pending_operation == NOTHING_PENDING		3010680	1					
ANR	3010711	Argument	m_pending_operation == NOTHING_PENDING		3010680	0					
ANR	3010712	EqualityExpression	m_pending_operation == NOTHING_PENDING		3010680	0		==			
ANR	3010713	Identifier	m_pending_operation		3010680	0					
ANR	3010714	Identifier	NOTHING_PENDING		3010680	1					
ANR	3010715	Identifier	DCMessenger :: ~DCMessenger		3010680	1					
ANR	3010716	ParameterList			3010680	2					
ANR	3010717	CFGEntryNode	ENTRY		3010680		True				
ANR	3010718	CFGExitNode	EXIT		3010680		True				
ANR	3010719	Symbol	m_pending_operation		3010680						
ANR	3010720	Symbol	m_callback_msg . get		3010680						
ANR	3010721	Symbol	m_callback_msg		3010680						
ANR	3010722	Symbol	NOTHING_PENDING		3010680						
ANR	3010723	Symbol	m_callback_sock		3010680						
ANR	3010724	Function	DCMessenger :: peerDescription	279:0:5865:6112							
ANR	3010725	FunctionDef	DCMessenger :: peerDescription ()		3010724	0					
ANR	3010726	CompoundStatement		280:0:5908:6112	3010724	0					
ANR	3010727	IfStatement	if ( m_daemon . get ( ) )		3010724	0					
ANR	3010728	Condition	m_daemon . get ( )	281:5:5915:5928	3010724	0	True				
ANR	3010729	CallExpression	m_daemon . get ( )		3010724	0					
ANR	3010730	Callee	m_daemon . get		3010724	0					
ANR	3010731	MemberAccess	m_daemon . get		3010724	0					
ANR	3010732	Identifier	m_daemon		3010724	0					
ANR	3010733	Identifier	get		3010724	1					
ANR	3010734	ArgumentList			3010724	1					
ANR	3010735	CompoundStatement		2:22:23:23	3010724	1					
ANR	3010736	ReturnStatement	return m_daemon -> idStr ( ) ;	282:2:5936:5960	3010724	0	True				
ANR	3010737	CallExpression	m_daemon -> idStr ( )		3010724	0					
ANR	3010738	Callee	m_daemon -> idStr		3010724	0					
ANR	3010739	PtrMemberAccess	m_daemon -> idStr		3010724	0					
ANR	3010740	Identifier	m_daemon		3010724	0					
ANR	3010741	Identifier	idStr		3010724	1					
ANR	3010742	ArgumentList			3010724	1					
ANR	3010743	IfStatement	if ( m_sock . get ( ) )		3010724	1					
ANR	3010744	Condition	m_sock . get ( )	284:5:5970:5981	3010724	0	True				
ANR	3010745	CallExpression	m_sock . get ( )		3010724	0					
ANR	3010746	Callee	m_sock . get		3010724	0					
ANR	3010747	MemberAccess	m_sock . get		3010724	0					
ANR	3010748	Identifier	m_sock		3010724	0					
ANR	3010749	Identifier	get		3010724	1					
ANR	3010750	ArgumentList			3010724	1					
ANR	3010751	CompoundStatement		5:20:76:76	3010724	1					
ANR	3010752	ReturnStatement	return m_sock -> peer_description ( ) ;	285:2:5989:6022	3010724	0	True				
ANR	3010753	CallExpression	m_sock -> peer_description ( )		3010724	0					
ANR	3010754	Callee	m_sock -> peer_description		3010724	0					
ANR	3010755	PtrMemberAccess	m_sock -> peer_description		3010724	0					
ANR	3010756	Identifier	m_sock		3010724	0					
ANR	3010757	Identifier	peer_description		3010724	1					
ANR	3010758	ArgumentList			3010724	1					
ANR	3010759	ExpressionStatement	"EXCEPT ( ""No daemon or sock object in DCMessenger::peerDescription()"" )"	287:1:6028:6096	3010724	2	True				
ANR	3010760	CallExpression	"EXCEPT ( ""No daemon or sock object in DCMessenger::peerDescription()"" )"		3010724	0					
ANR	3010761	Callee	EXCEPT		3010724	0					
ANR	3010762	Identifier	EXCEPT		3010724	0					
ANR	3010763	ArgumentList	"""No daemon or sock object in DCMessenger::peerDescription()"""		3010724	1					
ANR	3010764	Argument	"""No daemon or sock object in DCMessenger::peerDescription()"""		3010724	0					
ANR	3010765	PrimaryExpression	"""No daemon or sock object in DCMessenger::peerDescription()"""		3010724	0					
ANR	3010766	ReturnStatement	return NULL ;	288:1:6099:6110	3010724	3	True				
ANR	3010767	Identifier	NULL		3010724	0					
ANR	3010768	ReturnType	char const *		3010724	1					
ANR	3010769	Identifier	DCMessenger :: peerDescription		3010724	2					
ANR	3010770	ParameterList			3010724	3					
ANR	3010771	CFGEntryNode	ENTRY		3010724		True				
ANR	3010772	CFGExitNode	EXIT		3010724		True				
ANR	3010773	Symbol	m_daemon . get		3010724						
ANR	3010774	Symbol	NULL		3010724						
ANR	3010775	Symbol	m_sock . get		3010724						
ANR	3010776	Symbol	* m_sock		3010724						
ANR	3010777	Symbol	m_daemon -> idStr		3010724						
ANR	3010778	Symbol	m_sock		3010724						
ANR	3010779	Symbol	* m_daemon		3010724						
ANR	3010780	Symbol	m_daemon		3010724						
ANR	3010781	Symbol	m_sock -> peer_description		3010724						
ANR	3010782	Function	DCMessenger :: startCommand	291:0:6115:8075							
ANR	3010783	FunctionDef	DCMessenger :: startCommand (classy_counted_ptr < DCMsg > msg)		3010782	0					
ANR	3010784	CompoundStatement		292:0:6179:8075	3010782	0					
ANR	3010785	IdentifierDeclStatement	MyString error ;	293:1:6182:6196	3010782	0	True				
ANR	3010786	IdentifierDecl	error		3010782	0					
ANR	3010787	IdentifierDeclType	MyString		3010782	0					
ANR	3010788	Identifier	error		3010782	1					
ANR	3010789	ExpressionStatement	msg -> setMessenger ( this )	294:1:6199:6224	3010782	1	True				
ANR	3010790	CallExpression	msg -> setMessenger ( this )		3010782	0					
ANR	3010791	Callee	msg -> setMessenger		3010782	0					
ANR	3010792	PtrMemberAccess	msg -> setMessenger		3010782	0					
ANR	3010793	Identifier	msg		3010782	0					
ANR	3010794	Identifier	setMessenger		3010782	1					
ANR	3010795	ArgumentList	this		3010782	1					
ANR	3010796	Argument	this		3010782	0					
ANR	3010797	Identifier	this		3010782	0					
ANR	3010798	IfStatement	if ( msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED )		3010782	2					
ANR	3010799	Condition	msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED	296:5:6232:6280	3010782	0	True				
ANR	3010800	EqualityExpression	msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED		3010782	0		==			
ANR	3010801	CallExpression	msg -> deliveryStatus ( )		3010782	0					
ANR	3010802	Callee	msg -> deliveryStatus		3010782	0					
ANR	3010803	PtrMemberAccess	msg -> deliveryStatus		3010782	0					
ANR	3010804	Identifier	msg		3010782	0					
ANR	3010805	Identifier	deliveryStatus		3010782	1					
ANR	3010806	ArgumentList			3010782	1					
ANR	3010807	Identifier	DCMsg :: DELIVERY_CANCELED		3010782	1					
ANR	3010808	CompoundStatement		5:57:104:104	3010782	1					
ANR	3010809	ExpressionStatement	msg -> callMessageSendFailed ( this )	297:2:6288:6322	3010782	0	True				
ANR	3010810	CallExpression	msg -> callMessageSendFailed ( this )		3010782	0					
ANR	3010811	Callee	msg -> callMessageSendFailed		3010782	0					
ANR	3010812	PtrMemberAccess	msg -> callMessageSendFailed		3010782	0					
ANR	3010813	Identifier	msg		3010782	0					
ANR	3010814	Identifier	callMessageSendFailed		3010782	1					
ANR	3010815	ArgumentList	this		3010782	1					
ANR	3010816	Argument	this		3010782	0					
ANR	3010817	Identifier	this		3010782	0					
ANR	3010818	ReturnStatement	return ;	298:2:6326:6332	3010782	1	True				
ANR	3010819	IdentifierDeclStatement	time_t deadline = msg -> getDeadline ( ) ;	301:1:6339:6375	3010782	3	True				
ANR	3010820	IdentifierDecl	deadline = msg -> getDeadline ( )		3010782	0					
ANR	3010821	IdentifierDeclType	time_t		3010782	0					
ANR	3010822	Identifier	deadline		3010782	1					
ANR	3010823	AssignmentExpression	deadline = msg -> getDeadline ( )		3010782	2		=			
ANR	3010824	Identifier	deadline		3010782	0					
ANR	3010825	CallExpression	msg -> getDeadline ( )		3010782	1					
ANR	3010826	Callee	msg -> getDeadline		3010782	0					
ANR	3010827	PtrMemberAccess	msg -> getDeadline		3010782	0					
ANR	3010828	Identifier	msg		3010782	0					
ANR	3010829	Identifier	getDeadline		3010782	1					
ANR	3010830	ArgumentList			3010782	1					
ANR	3010831	IfStatement	if ( deadline && deadline < time ( NULL ) )		3010782	4					
ANR	3010832	Condition	deadline && deadline < time ( NULL )	302:5:6382:6414	3010782	0	True				
ANR	3010833	AndExpression	deadline && deadline < time ( NULL )		3010782	0		&&			
ANR	3010834	Identifier	deadline		3010782	0					
ANR	3010835	RelationalExpression	deadline < time ( NULL )		3010782	1		<			
ANR	3010836	Identifier	deadline		3010782	0					
ANR	3010837	CallExpression	time ( NULL )		3010782	1					
ANR	3010838	Callee	time		3010782	0					
ANR	3010839	Identifier	time		3010782	0					
ANR	3010840	ArgumentList	NULL		3010782	1					
ANR	3010841	Argument	NULL		3010782	0					
ANR	3010842	Identifier	NULL		3010782	0					
ANR	3010843	CompoundStatement		11:41:238:238	3010782	1					
ANR	3010844	ExpressionStatement	"msg -> addError ( CEDAR_ERR_DEADLINE_EXPIRED , ""deadline for delivery of this message expired"" )"	303:2:6422:6519	3010782	0	True				
ANR	3010845	CallExpression	"msg -> addError ( CEDAR_ERR_DEADLINE_EXPIRED , ""deadline for delivery of this message expired"" )"		3010782	0					
ANR	3010846	Callee	msg -> addError		3010782	0					
ANR	3010847	PtrMemberAccess	msg -> addError		3010782	0					
ANR	3010848	Identifier	msg		3010782	0					
ANR	3010849	Identifier	addError		3010782	1					
ANR	3010850	ArgumentList	CEDAR_ERR_DEADLINE_EXPIRED		3010782	1					
ANR	3010851	Argument	CEDAR_ERR_DEADLINE_EXPIRED		3010782	0					
ANR	3010852	Identifier	CEDAR_ERR_DEADLINE_EXPIRED		3010782	0					
ANR	3010853	Argument	"""deadline for delivery of this message expired"""		3010782	1					
ANR	3010854	PrimaryExpression	"""deadline for delivery of this message expired"""		3010782	0					
ANR	3010855	ExpressionStatement	msg -> callMessageSendFailed ( this )	305:2:6523:6557	3010782	1	True				
ANR	3010856	CallExpression	msg -> callMessageSendFailed ( this )		3010782	0					
ANR	3010857	Callee	msg -> callMessageSendFailed		3010782	0					
ANR	3010858	PtrMemberAccess	msg -> callMessageSendFailed		3010782	0					
ANR	3010859	Identifier	msg		3010782	0					
ANR	3010860	Identifier	callMessageSendFailed		3010782	1					
ANR	3010861	ArgumentList	this		3010782	1					
ANR	3010862	Argument	this		3010782	0					
ANR	3010863	Identifier	this		3010782	0					
ANR	3010864	ReturnStatement	return ;	306:2:6561:6567	3010782	2	True				
ANR	3010865	IdentifierDeclStatement	Stream :: stream_type st = msg -> getStreamType ( ) ;	312:1:6728:6773	3010782	5	True				
ANR	3010866	IdentifierDecl	st = msg -> getStreamType ( )		3010782	0					
ANR	3010867	IdentifierDeclType	Stream :: stream_type		3010782	0					
ANR	3010868	Identifier	st		3010782	1					
ANR	3010869	AssignmentExpression	st = msg -> getStreamType ( )		3010782	2		=			
ANR	3010870	Identifier	st		3010782	0					
ANR	3010871	CallExpression	msg -> getStreamType ( )		3010782	1					
ANR	3010872	Callee	msg -> getStreamType		3010782	0					
ANR	3010873	PtrMemberAccess	msg -> getStreamType		3010782	0					
ANR	3010874	Identifier	msg		3010782	0					
ANR	3010875	Identifier	getStreamType		3010782	1					
ANR	3010876	ArgumentList			3010782	1					
ANR	3010877	IfStatement	"if ( daemonCoreSockAdapter . TooManyRegisteredSockets ( - 1 , & error , st == Stream :: safe_sock ? 2 : 1 ) )"		3010782	6					
ANR	3010878	Condition	"daemonCoreSockAdapter . TooManyRegisteredSockets ( - 1 , & error , st == Stream :: safe_sock ? 2 : 1 )"	313:5:6780:6862	3010782	0	True				
ANR	3010879	CallExpression	"daemonCoreSockAdapter . TooManyRegisteredSockets ( - 1 , & error , st == Stream :: safe_sock ? 2 : 1 )"		3010782	0					
ANR	3010880	Callee	daemonCoreSockAdapter . TooManyRegisteredSockets		3010782	0					
ANR	3010881	MemberAccess	daemonCoreSockAdapter . TooManyRegisteredSockets		3010782	0					
ANR	3010882	Identifier	daemonCoreSockAdapter		3010782	0					
ANR	3010883	Identifier	TooManyRegisteredSockets		3010782	1					
ANR	3010884	ArgumentList	- 1		3010782	1					
ANR	3010885	Argument	- 1		3010782	0					
ANR	3010886	UnaryOperationExpression	- 1		3010782	0					
ANR	3010887	UnaryOperator	-		3010782	0					
ANR	3010888	PrimaryExpression	1		3010782	1					
ANR	3010889	Argument	& error		3010782	1					
ANR	3010890	UnaryOperationExpression	& error		3010782	0					
ANR	3010891	UnaryOperator	&		3010782	0					
ANR	3010892	Identifier	error		3010782	1					
ANR	3010893	Argument	st == Stream :: safe_sock ? 2 : 1		3010782	2					
ANR	3010894	ConditionalExpression	st == Stream :: safe_sock ? 2 : 1		3010782	0					
ANR	3010895	Condition	st == Stream :: safe_sock		3010782	0					
ANR	3010896	EqualityExpression	st == Stream :: safe_sock		3010782	0		==			
ANR	3010897	Identifier	st		3010782	0					
ANR	3010898	Identifier	Stream :: safe_sock		3010782	1					
ANR	3010899	PrimaryExpression	2		3010782	1					
ANR	3010900	PrimaryExpression	1		3010782	2					
ANR	3010901	CompoundStatement		22:91:686:686	3010782	1					
ANR	3010902	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Delaying delivery of %s to %s, because %s\\n"" , msg -> name ( ) , peerDescription ( ) , error . Value ( ) )"	319:2:7124:7240	3010782	0	True				
ANR	3010903	CallExpression	"dprintf ( D_FULLDEBUG , ""Delaying delivery of %s to %s, because %s\\n"" , msg -> name ( ) , peerDescription ( ) , error . Value ( ) )"		3010782	0					
ANR	3010904	Callee	dprintf		3010782	0					
ANR	3010905	Identifier	dprintf		3010782	0					
ANR	3010906	ArgumentList	D_FULLDEBUG		3010782	1					
ANR	3010907	Argument	D_FULLDEBUG		3010782	0					
ANR	3010908	Identifier	D_FULLDEBUG		3010782	0					
ANR	3010909	Argument	"""Delaying delivery of %s to %s, because %s\\n"""		3010782	1					
ANR	3010910	PrimaryExpression	"""Delaying delivery of %s to %s, because %s\\n"""		3010782	0					
ANR	3010911	Argument	msg -> name ( )		3010782	2					
ANR	3010912	CallExpression	msg -> name ( )		3010782	0					
ANR	3010913	Callee	msg -> name		3010782	0					
ANR	3010914	PtrMemberAccess	msg -> name		3010782	0					
ANR	3010915	Identifier	msg		3010782	0					
ANR	3010916	Identifier	name		3010782	1					
ANR	3010917	ArgumentList			3010782	1					
ANR	3010918	Argument	peerDescription ( )		3010782	3					
ANR	3010919	CallExpression	peerDescription ( )		3010782	0					
ANR	3010920	Callee	peerDescription		3010782	0					
ANR	3010921	Identifier	peerDescription		3010782	0					
ANR	3010922	ArgumentList			3010782	1					
ANR	3010923	Argument	error . Value ( )		3010782	4					
ANR	3010924	CallExpression	error . Value ( )		3010782	0					
ANR	3010925	Callee	error . Value		3010782	0					
ANR	3010926	MemberAccess	error . Value		3010782	0					
ANR	3010927	Identifier	error		3010782	0					
ANR	3010928	Identifier	Value		3010782	1					
ANR	3010929	ArgumentList			3010782	1					
ANR	3010930	ExpressionStatement	"startCommandAfterDelay ( 1 , msg )"	321:2:7244:7276	3010782	1	True				
ANR	3010931	CallExpression	"startCommandAfterDelay ( 1 , msg )"		3010782	0					
ANR	3010932	Callee	startCommandAfterDelay		3010782	0					
ANR	3010933	Identifier	startCommandAfterDelay		3010782	0					
ANR	3010934	ArgumentList	1		3010782	1					
ANR	3010935	Argument	1		3010782	0					
ANR	3010936	PrimaryExpression	1		3010782	0					
ANR	3010937	Argument	msg		3010782	1					
ANR	3010938	Identifier	msg		3010782	0					
ANR	3010939	ReturnStatement	return ;	322:2:7280:7286	3010782	2	True				
ANR	3010940	ExpressionStatement	ASSERT ( ! m_callback_msg . get ( ) )	326:1:7364:7393	3010782	7	True				
ANR	3010941	CallExpression	ASSERT ( ! m_callback_msg . get ( ) )		3010782	0					
ANR	3010942	Callee	ASSERT		3010782	0					
ANR	3010943	Identifier	ASSERT		3010782	0					
ANR	3010944	ArgumentList	! m_callback_msg . get ( )		3010782	1					
ANR	3010945	Argument	! m_callback_msg . get ( )		3010782	0					
ANR	3010946	UnaryOperationExpression	! m_callback_msg . get ( )		3010782	0					
ANR	3010947	UnaryOperator	!		3010782	0					
ANR	3010948	CallExpression	m_callback_msg . get ( )		3010782	1					
ANR	3010949	Callee	m_callback_msg . get		3010782	0					
ANR	3010950	MemberAccess	m_callback_msg . get		3010782	0					
ANR	3010951	Identifier	m_callback_msg		3010782	0					
ANR	3010952	Identifier	get		3010782	1					
ANR	3010953	ArgumentList			3010782	1					
ANR	3010954	ExpressionStatement	ASSERT ( ! m_callback_sock )	327:1:7396:7420	3010782	8	True				
ANR	3010955	CallExpression	ASSERT ( ! m_callback_sock )		3010782	0					
ANR	3010956	Callee	ASSERT		3010782	0					
ANR	3010957	Identifier	ASSERT		3010782	0					
ANR	3010958	ArgumentList	! m_callback_sock		3010782	1					
ANR	3010959	Argument	! m_callback_sock		3010782	0					
ANR	3010960	UnaryOperationExpression	! m_callback_sock		3010782	0					
ANR	3010961	UnaryOperator	!		3010782	0					
ANR	3010962	Identifier	m_callback_sock		3010782	1					
ANR	3010963	ExpressionStatement	ASSERT ( m_pending_operation == NOTHING_PENDING )	328:1:7423:7469	3010782	9	True				
ANR	3010964	CallExpression	ASSERT ( m_pending_operation == NOTHING_PENDING )		3010782	0					
ANR	3010965	Callee	ASSERT		3010782	0					
ANR	3010966	Identifier	ASSERT		3010782	0					
ANR	3010967	ArgumentList	m_pending_operation == NOTHING_PENDING		3010782	1					
ANR	3010968	Argument	m_pending_operation == NOTHING_PENDING		3010782	0					
ANR	3010969	EqualityExpression	m_pending_operation == NOTHING_PENDING		3010782	0		==			
ANR	3010970	Identifier	m_pending_operation		3010782	0					
ANR	3010971	Identifier	NOTHING_PENDING		3010782	1					
ANR	3010972	ExpressionStatement	m_pending_operation = START_COMMAND_PENDING	330:1:7473:7516	3010782	10	True				
ANR	3010973	AssignmentExpression	m_pending_operation = START_COMMAND_PENDING		3010782	0		=			
ANR	3010974	Identifier	m_pending_operation		3010782	0					
ANR	3010975	Identifier	START_COMMAND_PENDING		3010782	1					
ANR	3010976	ExpressionStatement	m_callback_msg = msg	331:1:7519:7539	3010782	11	True				
ANR	3010977	AssignmentExpression	m_callback_msg = msg		3010782	0		=			
ANR	3010978	Identifier	m_callback_msg		3010782	0					
ANR	3010979	Identifier	msg		3010782	1					
ANR	3010980	ExpressionStatement	m_callback_sock = m_sock . get ( )	332:1:7542:7572	3010782	12	True				
ANR	3010981	AssignmentExpression	m_callback_sock = m_sock . get ( )		3010782	0		=			
ANR	3010982	Identifier	m_callback_sock		3010782	0					
ANR	3010983	CallExpression	m_sock . get ( )		3010782	1					
ANR	3010984	Callee	m_sock . get		3010782	0					
ANR	3010985	MemberAccess	m_sock . get		3010782	0					
ANR	3010986	Identifier	m_sock		3010782	0					
ANR	3010987	Identifier	get		3010782	1					
ANR	3010988	ArgumentList			3010782	1					
ANR	3010989	IfStatement	if ( ! m_callback_sock )		3010782	13					
ANR	3010990	Condition	! m_callback_sock	333:5:7579:7594	3010782	0	True				
ANR	3010991	UnaryOperationExpression	! m_callback_sock		3010782	0					
ANR	3010992	UnaryOperator	!		3010782	0					
ANR	3010993	Identifier	m_callback_sock		3010782	1					
ANR	3010994	CompoundStatement		43:2:1422:1451	3010782	1					
ANR	3010995	IdentifierDeclStatement	const bool nonblocking = true ;	334:2:7602:7631	3010782	0	True				
ANR	3010996	IdentifierDecl	nonblocking = true		3010782	0					
ANR	3010997	IdentifierDeclType	const bool		3010782	0					
ANR	3010998	Identifier	nonblocking		3010782	1					
ANR	3010999	AssignmentExpression	nonblocking = true		3010782	2		=			
ANR	3011000	Identifier	true		3010782	0					
ANR	3011001	Identifier	true		3010782	1					
ANR	3011002	ExpressionStatement	"m_callback_sock = m_daemon -> makeConnectedSocket ( st , msg -> getTimeout ( ) , msg -> getDeadline ( ) , & msg -> m_errstack , nonblocking )"	335:2:7635:7752	3010782	1	True				
ANR	3011003	AssignmentExpression	"m_callback_sock = m_daemon -> makeConnectedSocket ( st , msg -> getTimeout ( ) , msg -> getDeadline ( ) , & msg -> m_errstack , nonblocking )"		3010782	0		=			
ANR	3011004	Identifier	m_callback_sock		3010782	0					
ANR	3011005	CallExpression	"m_daemon -> makeConnectedSocket ( st , msg -> getTimeout ( ) , msg -> getDeadline ( ) , & msg -> m_errstack , nonblocking )"		3010782	1					
ANR	3011006	Callee	m_daemon -> makeConnectedSocket		3010782	0					
ANR	3011007	PtrMemberAccess	m_daemon -> makeConnectedSocket		3010782	0					
ANR	3011008	Identifier	m_daemon		3010782	0					
ANR	3011009	Identifier	makeConnectedSocket		3010782	1					
ANR	3011010	ArgumentList	st		3010782	1					
ANR	3011011	Argument	st		3010782	0					
ANR	3011012	Identifier	st		3010782	0					
ANR	3011013	Argument	msg -> getTimeout ( )		3010782	1					
ANR	3011014	CallExpression	msg -> getTimeout ( )		3010782	0					
ANR	3011015	Callee	msg -> getTimeout		3010782	0					
ANR	3011016	PtrMemberAccess	msg -> getTimeout		3010782	0					
ANR	3011017	Identifier	msg		3010782	0					
ANR	3011018	Identifier	getTimeout		3010782	1					
ANR	3011019	ArgumentList			3010782	1					
ANR	3011020	Argument	msg -> getDeadline ( )		3010782	2					
ANR	3011021	CallExpression	msg -> getDeadline ( )		3010782	0					
ANR	3011022	Callee	msg -> getDeadline		3010782	0					
ANR	3011023	PtrMemberAccess	msg -> getDeadline		3010782	0					
ANR	3011024	Identifier	msg		3010782	0					
ANR	3011025	Identifier	getDeadline		3010782	1					
ANR	3011026	ArgumentList			3010782	1					
ANR	3011027	Argument	& msg -> m_errstack		3010782	3					
ANR	3011028	UnaryOperationExpression	& msg -> m_errstack		3010782	0					
ANR	3011029	UnaryOperator	&		3010782	0					
ANR	3011030	PtrMemberAccess	msg -> m_errstack		3010782	1					
ANR	3011031	Identifier	msg		3010782	0					
ANR	3011032	Identifier	m_errstack		3010782	1					
ANR	3011033	Argument	nonblocking		3010782	4					
ANR	3011034	Identifier	nonblocking		3010782	0					
ANR	3011035	IfStatement	if ( ! m_callback_sock )		3010782	2					
ANR	3011036	Condition	! m_callback_sock	336:6:7760:7775	3010782	0	True				
ANR	3011037	UnaryOperationExpression	! m_callback_sock		3010782	0					
ANR	3011038	UnaryOperator	!		3010782	0					
ANR	3011039	Identifier	m_callback_sock		3010782	1					
ANR	3011040	CompoundStatement		45:25:1599:1599	3010782	1					
ANR	3011041	ExpressionStatement	msg -> callMessageSendFailed ( this )	337:3:7784:7818	3010782	0	True				
ANR	3011042	CallExpression	msg -> callMessageSendFailed ( this )		3010782	0					
ANR	3011043	Callee	msg -> callMessageSendFailed		3010782	0					
ANR	3011044	PtrMemberAccess	msg -> callMessageSendFailed		3010782	0					
ANR	3011045	Identifier	msg		3010782	0					
ANR	3011046	Identifier	callMessageSendFailed		3010782	1					
ANR	3011047	ArgumentList	this		3010782	1					
ANR	3011048	Argument	this		3010782	0					
ANR	3011049	Identifier	this		3010782	0					
ANR	3011050	ReturnStatement	return ;	338:3:7823:7829	3010782	1	True				
ANR	3011051	ExpressionStatement	incRefCount ( )	342:1:7840:7853	3010782	14	True				
ANR	3011052	CallExpression	incRefCount ( )		3010782	0					
ANR	3011053	Callee	incRefCount		3010782	0					
ANR	3011054	Identifier	incRefCount		3010782	0					
ANR	3011055	ArgumentList			3010782	1					
ANR	3011056	ExpressionStatement	"m_daemon -> startCommand_nonblocking ( msg -> m_cmd , m_callback_sock , msg -> getTimeout ( ) , & msg -> m_errstack , & DCMessenger :: connectCallback , this , msg -> name ( ) , msg -> getRawProtocol ( ) , msg -> getSecSessionId ( ) )"	343:1:7856:8073	3010782	15	True				
ANR	3011057	CallExpression	"m_daemon -> startCommand_nonblocking ( msg -> m_cmd , m_callback_sock , msg -> getTimeout ( ) , & msg -> m_errstack , & DCMessenger :: connectCallback , this , msg -> name ( ) , msg -> getRawProtocol ( ) , msg -> getSecSessionId ( ) )"		3010782	0					
ANR	3011058	Callee	m_daemon -> startCommand_nonblocking		3010782	0					
ANR	3011059	PtrMemberAccess	m_daemon -> startCommand_nonblocking		3010782	0					
ANR	3011060	Identifier	m_daemon		3010782	0					
ANR	3011061	Identifier	startCommand_nonblocking		3010782	1					
ANR	3011062	ArgumentList	msg -> m_cmd		3010782	1					
ANR	3011063	Argument	msg -> m_cmd		3010782	0					
ANR	3011064	PtrMemberAccess	msg -> m_cmd		3010782	0					
ANR	3011065	Identifier	msg		3010782	0					
ANR	3011066	Identifier	m_cmd		3010782	1					
ANR	3011067	Argument	m_callback_sock		3010782	1					
ANR	3011068	Identifier	m_callback_sock		3010782	0					
ANR	3011069	Argument	msg -> getTimeout ( )		3010782	2					
ANR	3011070	CallExpression	msg -> getTimeout ( )		3010782	0					
ANR	3011071	Callee	msg -> getTimeout		3010782	0					
ANR	3011072	PtrMemberAccess	msg -> getTimeout		3010782	0					
ANR	3011073	Identifier	msg		3010782	0					
ANR	3011074	Identifier	getTimeout		3010782	1					
ANR	3011075	ArgumentList			3010782	1					
ANR	3011076	Argument	& msg -> m_errstack		3010782	3					
ANR	3011077	UnaryOperationExpression	& msg -> m_errstack		3010782	0					
ANR	3011078	UnaryOperator	&		3010782	0					
ANR	3011079	PtrMemberAccess	msg -> m_errstack		3010782	1					
ANR	3011080	Identifier	msg		3010782	0					
ANR	3011081	Identifier	m_errstack		3010782	1					
ANR	3011082	Argument	& DCMessenger :: connectCallback		3010782	4					
ANR	3011083	UnaryOperationExpression	& DCMessenger :: connectCallback		3010782	0					
ANR	3011084	UnaryOperator	&		3010782	0					
ANR	3011085	Identifier	DCMessenger :: connectCallback		3010782	1					
ANR	3011086	Argument	this		3010782	5					
ANR	3011087	Identifier	this		3010782	0					
ANR	3011088	Argument	msg -> name ( )		3010782	6					
ANR	3011089	CallExpression	msg -> name ( )		3010782	0					
ANR	3011090	Callee	msg -> name		3010782	0					
ANR	3011091	PtrMemberAccess	msg -> name		3010782	0					
ANR	3011092	Identifier	msg		3010782	0					
ANR	3011093	Identifier	name		3010782	1					
ANR	3011094	ArgumentList			3010782	1					
ANR	3011095	Argument	msg -> getRawProtocol ( )		3010782	7					
ANR	3011096	CallExpression	msg -> getRawProtocol ( )		3010782	0					
ANR	3011097	Callee	msg -> getRawProtocol		3010782	0					
ANR	3011098	PtrMemberAccess	msg -> getRawProtocol		3010782	0					
ANR	3011099	Identifier	msg		3010782	0					
ANR	3011100	Identifier	getRawProtocol		3010782	1					
ANR	3011101	ArgumentList			3010782	1					
ANR	3011102	Argument	msg -> getSecSessionId ( )		3010782	8					
ANR	3011103	CallExpression	msg -> getSecSessionId ( )		3010782	0					
ANR	3011104	Callee	msg -> getSecSessionId		3010782	0					
ANR	3011105	PtrMemberAccess	msg -> getSecSessionId		3010782	0					
ANR	3011106	Identifier	msg		3010782	0					
ANR	3011107	Identifier	getSecSessionId		3010782	1					
ANR	3011108	ArgumentList			3010782	1					
ANR	3011109	ReturnType	void		3010782	1					
ANR	3011110	Identifier	DCMessenger :: startCommand		3010782	2					
ANR	3011111	ParameterList	classy_counted_ptr < DCMsg > msg		3010782	3					
ANR	3011112	Parameter	classy_counted_ptr < DCMsg > msg	291:32:6147:6175	3010782	0	True				
ANR	3011113	ParameterType	classy_counted_ptr < DCMsg >		3010782	0					
ANR	3011114	Identifier	msg		3010782	1					
ANR	3011115	CFGEntryNode	ENTRY		3010782		True				
ANR	3011116	CFGExitNode	EXIT		3010782		True				
ANR	3011117	Symbol	msg		3010782						
ANR	3011118	Symbol	DCMsg :: DELIVERY_CANCELED		3010782						
ANR	3011119	Symbol	& error		3010782						
ANR	3011120	Symbol	msg -> deliveryStatus		3010782						
ANR	3011121	Symbol	m_pending_operation		3010782						
ANR	3011122	Symbol	Stream :: safe_sock		3010782						
ANR	3011123	Symbol	CEDAR_ERR_DEADLINE_EXPIRED		3010782						
ANR	3011124	Symbol	msg -> getDeadline		3010782						
ANR	3011125	Symbol	msg -> getStreamType		3010782						
ANR	3011126	Symbol	error		3010782						
ANR	3011127	Symbol	m_daemon -> makeConnectedSocket		3010782						
ANR	3011128	Symbol	peerDescription		3010782						
ANR	3011129	Symbol	daemonCoreSockAdapter		3010782						
ANR	3011130	Symbol	* m_daemon		3010782						
ANR	3011131	Symbol	NOTHING_PENDING		3010782						
ANR	3011132	Symbol	deadline		3010782						
ANR	3011133	Symbol	st		3010782						
ANR	3011134	Symbol	msg -> m_cmd		3010782						
ANR	3011135	Symbol	NULL		3010782						
ANR	3011136	Symbol	nonblocking		3010782						
ANR	3011137	Symbol	m_callback_msg . get		3010782						
ANR	3011138	Symbol	m_sock		3010782						
ANR	3011139	Symbol	msg -> getTimeout		3010782						
ANR	3011140	Symbol	msg -> getSecSessionId		3010782						
ANR	3011141	Symbol	this		3010782						
ANR	3011142	Symbol	START_COMMAND_PENDING		3010782						
ANR	3011143	Symbol	D_FULLDEBUG		3010782						
ANR	3011144	Symbol	m_callback_msg		3010782						
ANR	3011145	Symbol	& msg -> m_errstack		3010782						
ANR	3011146	Symbol	msg -> getRawProtocol		3010782						
ANR	3011147	Symbol	* msg		3010782						
ANR	3011148	Symbol	daemonCoreSockAdapter . TooManyRegisteredSockets		3010782						
ANR	3011149	Symbol	m_callback_sock		3010782						
ANR	3011150	Symbol	m_daemon		3010782						
ANR	3011151	Symbol	m_sock . get		3010782						
ANR	3011152	Symbol	error . Value		3010782						
ANR	3011153	Symbol	true		3010782						
ANR	3011154	Symbol	time		3010782						
ANR	3011155	Symbol	& DCMessenger :: connectCallback		3010782						
ANR	3011156	Symbol	msg -> name		3010782						
ANR	3011157	Function	DCMessenger :: sendBlockingMsg	355:0:8078:8452							
ANR	3011158	FunctionDef	DCMessenger :: sendBlockingMsg (classy_counted_ptr < DCMsg > msg)		3011157	0					
ANR	3011159	CompoundStatement		357:0:8145:8452	3011157	0					
ANR	3011160	ExpressionStatement	msg -> setMessenger ( this )	358:1:8148:8173	3011157	0	True				
ANR	3011161	CallExpression	msg -> setMessenger ( this )		3011157	0					
ANR	3011162	Callee	msg -> setMessenger		3011157	0					
ANR	3011163	PtrMemberAccess	msg -> setMessenger		3011157	0					
ANR	3011164	Identifier	msg		3011157	0					
ANR	3011165	Identifier	setMessenger		3011157	1					
ANR	3011166	ArgumentList	this		3011157	1					
ANR	3011167	Argument	this		3011157	0					
ANR	3011168	Identifier	this		3011157	0					
ANR	3011169	IdentifierDeclStatement	"Sock * sock = m_daemon -> startCommand ( msg -> m_cmd , msg -> getStreamType ( ) , msg -> getTimeout ( ) , & msg -> m_errstack , msg -> name ( ) , msg -> getRawProtocol ( ) , msg -> getSecSessionId ( ) ) ;"	359:1:8176:8358	3011157	1	True				
ANR	3011170	IdentifierDecl	"* sock = m_daemon -> startCommand ( msg -> m_cmd , msg -> getStreamType ( ) , msg -> getTimeout ( ) , & msg -> m_errstack , msg -> name ( ) , msg -> getRawProtocol ( ) , msg -> getSecSessionId ( ) )"		3011157	0					
ANR	3011171	IdentifierDeclType	Sock *		3011157	0					
ANR	3011172	Identifier	sock		3011157	1					
ANR	3011173	AssignmentExpression	"* sock = m_daemon -> startCommand ( msg -> m_cmd , msg -> getStreamType ( ) , msg -> getTimeout ( ) , & msg -> m_errstack , msg -> name ( ) , msg -> getRawProtocol ( ) , msg -> getSecSessionId ( ) )"		3011157	2		=			
ANR	3011174	Identifier	sock		3011157	0					
ANR	3011175	CallExpression	"m_daemon -> startCommand ( msg -> m_cmd , msg -> getStreamType ( ) , msg -> getTimeout ( ) , & msg -> m_errstack , msg -> name ( ) , msg -> getRawProtocol ( ) , msg -> getSecSessionId ( ) )"		3011157	1					
ANR	3011176	Callee	m_daemon -> startCommand		3011157	0					
ANR	3011177	PtrMemberAccess	m_daemon -> startCommand		3011157	0					
ANR	3011178	Identifier	m_daemon		3011157	0					
ANR	3011179	Identifier	startCommand		3011157	1					
ANR	3011180	ArgumentList	msg -> m_cmd		3011157	1					
ANR	3011181	Argument	msg -> m_cmd		3011157	0					
ANR	3011182	PtrMemberAccess	msg -> m_cmd		3011157	0					
ANR	3011183	Identifier	msg		3011157	0					
ANR	3011184	Identifier	m_cmd		3011157	1					
ANR	3011185	Argument	msg -> getStreamType ( )		3011157	1					
ANR	3011186	CallExpression	msg -> getStreamType ( )		3011157	0					
ANR	3011187	Callee	msg -> getStreamType		3011157	0					
ANR	3011188	PtrMemberAccess	msg -> getStreamType		3011157	0					
ANR	3011189	Identifier	msg		3011157	0					
ANR	3011190	Identifier	getStreamType		3011157	1					
ANR	3011191	ArgumentList			3011157	1					
ANR	3011192	Argument	msg -> getTimeout ( )		3011157	2					
ANR	3011193	CallExpression	msg -> getTimeout ( )		3011157	0					
ANR	3011194	Callee	msg -> getTimeout		3011157	0					
ANR	3011195	PtrMemberAccess	msg -> getTimeout		3011157	0					
ANR	3011196	Identifier	msg		3011157	0					
ANR	3011197	Identifier	getTimeout		3011157	1					
ANR	3011198	ArgumentList			3011157	1					
ANR	3011199	Argument	& msg -> m_errstack		3011157	3					
ANR	3011200	UnaryOperationExpression	& msg -> m_errstack		3011157	0					
ANR	3011201	UnaryOperator	&		3011157	0					
ANR	3011202	PtrMemberAccess	msg -> m_errstack		3011157	1					
ANR	3011203	Identifier	msg		3011157	0					
ANR	3011204	Identifier	m_errstack		3011157	1					
ANR	3011205	Argument	msg -> name ( )		3011157	4					
ANR	3011206	CallExpression	msg -> name ( )		3011157	0					
ANR	3011207	Callee	msg -> name		3011157	0					
ANR	3011208	PtrMemberAccess	msg -> name		3011157	0					
ANR	3011209	Identifier	msg		3011157	0					
ANR	3011210	Identifier	name		3011157	1					
ANR	3011211	ArgumentList			3011157	1					
ANR	3011212	Argument	msg -> getRawProtocol ( )		3011157	5					
ANR	3011213	CallExpression	msg -> getRawProtocol ( )		3011157	0					
ANR	3011214	Callee	msg -> getRawProtocol		3011157	0					
ANR	3011215	PtrMemberAccess	msg -> getRawProtocol		3011157	0					
ANR	3011216	Identifier	msg		3011157	0					
ANR	3011217	Identifier	getRawProtocol		3011157	1					
ANR	3011218	ArgumentList			3011157	1					
ANR	3011219	Argument	msg -> getSecSessionId ( )		3011157	6					
ANR	3011220	CallExpression	msg -> getSecSessionId ( )		3011157	0					
ANR	3011221	Callee	msg -> getSecSessionId		3011157	0					
ANR	3011222	PtrMemberAccess	msg -> getSecSessionId		3011157	0					
ANR	3011223	Identifier	msg		3011157	0					
ANR	3011224	Identifier	getSecSessionId		3011157	1					
ANR	3011225	ArgumentList			3011157	1					
ANR	3011226	IfStatement	if ( ! sock )		3011157	2					
ANR	3011227	Condition	! sock	368:5:8366:8370	3011157	0	True				
ANR	3011228	UnaryOperationExpression	! sock		3011157	0					
ANR	3011229	UnaryOperator	!		3011157	0					
ANR	3011230	Identifier	sock		3011157	1					
ANR	3011231	CompoundStatement		12:13:228:228	3011157	1					
ANR	3011232	ExpressionStatement	msg -> callMessageSendFailed ( this )	369:2:8378:8412	3011157	0	True				
ANR	3011233	CallExpression	msg -> callMessageSendFailed ( this )		3011157	0					
ANR	3011234	Callee	msg -> callMessageSendFailed		3011157	0					
ANR	3011235	PtrMemberAccess	msg -> callMessageSendFailed		3011157	0					
ANR	3011236	Identifier	msg		3011157	0					
ANR	3011237	Identifier	callMessageSendFailed		3011157	1					
ANR	3011238	ArgumentList	this		3011157	1					
ANR	3011239	Argument	this		3011157	0					
ANR	3011240	Identifier	this		3011157	0					
ANR	3011241	ReturnStatement	return ;	370:2:8416:8422	3011157	1	True				
ANR	3011242	ExpressionStatement	"writeMsg ( msg , sock )"	373:1:8429:8450	3011157	3	True				
ANR	3011243	CallExpression	"writeMsg ( msg , sock )"		3011157	0					
ANR	3011244	Callee	writeMsg		3011157	0					
ANR	3011245	Identifier	writeMsg		3011157	0					
ANR	3011246	ArgumentList	msg		3011157	1					
ANR	3011247	Argument	msg		3011157	0					
ANR	3011248	Identifier	msg		3011157	0					
ANR	3011249	Argument	sock		3011157	1					
ANR	3011250	Identifier	sock		3011157	0					
ANR	3011251	ReturnType	void		3011157	1					
ANR	3011252	Identifier	DCMessenger :: sendBlockingMsg		3011157	2					
ANR	3011253	ParameterList	classy_counted_ptr < DCMsg > msg		3011157	3					
ANR	3011254	Parameter	classy_counted_ptr < DCMsg > msg	356:30:8113:8141	3011157	0	True				
ANR	3011255	ParameterType	classy_counted_ptr < DCMsg >		3011157	0					
ANR	3011256	Identifier	msg		3011157	1					
ANR	3011257	CFGEntryNode	ENTRY		3011157		True				
ANR	3011258	CFGExitNode	EXIT		3011157		True				
ANR	3011259	Symbol	msg		3011157						
ANR	3011260	Symbol	m_daemon -> startCommand		3011157						
ANR	3011261	Symbol	msg -> m_cmd		3011157						
ANR	3011262	Symbol	msg -> getTimeout		3011157						
ANR	3011263	Symbol	msg -> getSecSessionId		3011157						
ANR	3011264	Symbol	this		3011157						
ANR	3011265	Symbol	& msg -> m_errstack		3011157						
ANR	3011266	Symbol	msg -> getRawProtocol		3011157						
ANR	3011267	Symbol	* msg		3011157						
ANR	3011268	Symbol	msg -> getStreamType		3011157						
ANR	3011269	Symbol	m_daemon		3011157						
ANR	3011270	Symbol	sock		3011157						
ANR	3011271	Symbol	* m_daemon		3011157						
ANR	3011272	Symbol	msg -> name		3011157						
ANR	3011273	Function	DCMessenger :: doneWithSock	376:0:8455:8675							
ANR	3011274	FunctionDef	DCMessenger :: doneWithSock (Stream * sock)		3011273	0					
ANR	3011275	CompoundStatement		378:0:8500:8675	3011273	0					
ANR	3011276	IfStatement	if ( sock != m_sock . get ( ) )		3011273	0					
ANR	3011277	Condition	sock != m_sock . get ( )	381:5:8612:8631	3011273	0	True				
ANR	3011278	EqualityExpression	sock != m_sock . get ( )		3011273	0		!=			
ANR	3011279	Identifier	sock		3011273	0					
ANR	3011280	CallExpression	m_sock . get ( )		3011273	1					
ANR	3011281	Callee	m_sock . get		3011273	0					
ANR	3011282	MemberAccess	m_sock . get		3011273	0					
ANR	3011283	Identifier	m_sock		3011273	0					
ANR	3011284	Identifier	get		3011273	1					
ANR	3011285	ArgumentList			3011273	1					
ANR	3011286	CompoundStatement		4:28:134:134	3011273	1					
ANR	3011287	IfStatement	if ( sock )		3011273	0					
ANR	3011288	Condition	sock	382:6:8643:8646	3011273	0	True				
ANR	3011289	Identifier	sock		3011273	0					
ANR	3011290	CompoundStatement		5:13:149:149	3011273	1					
ANR	3011291	Statement	delete	383:3:8655:8660	3011273	0	True				
ANR	3011292	ExpressionStatement	sock	383:10:8662:8666	3011273	1	True				
ANR	3011293	Identifier	sock		3011273	0					
ANR	3011294	ReturnType	void		3011273	1					
ANR	3011295	Identifier	DCMessenger :: doneWithSock		3011273	2					
ANR	3011296	ParameterList	Stream * sock		3011273	3					
ANR	3011297	Parameter	Stream * sock	377:26:8486:8497	3011273	0	True				
ANR	3011298	ParameterType	Stream *		3011273	0					
ANR	3011299	Identifier	sock		3011273	1					
ANR	3011300	CFGEntryNode	ENTRY		3011273		True				
ANR	3011301	CFGExitNode	EXIT		3011273		True				
ANR	3011302	Symbol	sock		3011273						
ANR	3011303	Symbol	m_sock . get		3011273						
ANR	3011304	Symbol	m_sock		3011273						
ANR	3011305	DeclStmt									
ANR	3011306	Decl							DCMessenger	DCMessenger *	self
ANR	3011307	DeclStmt									
ANR	3011308	Decl							classy_counted_ptr < DCMsg >	classy_counted_ptr < DCMsg >	msg
ANR	3011309	Function	DCMessenger :: writeMsg	415:0:9280:10265							
ANR	3011310	FunctionDef	"DCMessenger :: writeMsg (classy_counted_ptr < DCMsg > msg , Sock * sock)"		3011309	0					
ANR	3011311	CompoundStatement		416:0:9352:10265	3011309	0					
ANR	3011312	ExpressionStatement	ASSERT ( msg . get ( ) )	417:1:9355:9374	3011309	0	True				
ANR	3011313	CallExpression	ASSERT ( msg . get ( ) )		3011309	0					
ANR	3011314	Callee	ASSERT		3011309	0					
ANR	3011315	Identifier	ASSERT		3011309	0					
ANR	3011316	ArgumentList	msg . get ( )		3011309	1					
ANR	3011317	Argument	msg . get ( )		3011309	0					
ANR	3011318	CallExpression	msg . get ( )		3011309	0					
ANR	3011319	Callee	msg . get		3011309	0					
ANR	3011320	MemberAccess	msg . get		3011309	0					
ANR	3011321	Identifier	msg		3011309	0					
ANR	3011322	Identifier	get		3011309	1					
ANR	3011323	ArgumentList			3011309	1					
ANR	3011324	ExpressionStatement	ASSERT ( sock )	418:1:9377:9391	3011309	1	True				
ANR	3011325	CallExpression	ASSERT ( sock )		3011309	0					
ANR	3011326	Callee	ASSERT		3011309	0					
ANR	3011327	Identifier	ASSERT		3011309	0					
ANR	3011328	ArgumentList	sock		3011309	1					
ANR	3011329	Argument	sock		3011309	0					
ANR	3011330	Identifier	sock		3011309	0					
ANR	3011331	ExpressionStatement	msg -> setMessenger ( this )	420:1:9395:9420	3011309	2	True				
ANR	3011332	CallExpression	msg -> setMessenger ( this )		3011309	0					
ANR	3011333	Callee	msg -> setMessenger		3011309	0					
ANR	3011334	PtrMemberAccess	msg -> setMessenger		3011309	0					
ANR	3011335	Identifier	msg		3011309	0					
ANR	3011336	Identifier	setMessenger		3011309	1					
ANR	3011337	ArgumentList	this		3011309	1					
ANR	3011338	Argument	this		3011309	0					
ANR	3011339	Identifier	this		3011309	0					
ANR	3011340	ExpressionStatement	incRefCount ( )	421:1:9423:9436	3011309	3	True				
ANR	3011341	CallExpression	incRefCount ( )		3011309	0					
ANR	3011342	Callee	incRefCount		3011309	0					
ANR	3011343	Identifier	incRefCount		3011309	0					
ANR	3011344	ArgumentList			3011309	1					
ANR	3011345	ExpressionStatement	sock -> encode ( )	427:1:9604:9618	3011309	4	True				
ANR	3011346	CallExpression	sock -> encode ( )		3011309	0					
ANR	3011347	Callee	sock -> encode		3011309	0					
ANR	3011348	PtrMemberAccess	sock -> encode		3011309	0					
ANR	3011349	Identifier	sock		3011309	0					
ANR	3011350	Identifier	encode		3011309	1					
ANR	3011351	ArgumentList			3011309	1					
ANR	3011352	IfStatement	if ( msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED )		3011309	5					
ANR	3011353	Condition	msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED	429:5:9626:9674	3011309	0	True				
ANR	3011354	EqualityExpression	msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED		3011309	0		==			
ANR	3011355	CallExpression	msg -> deliveryStatus ( )		3011309	0					
ANR	3011356	Callee	msg -> deliveryStatus		3011309	0					
ANR	3011357	PtrMemberAccess	msg -> deliveryStatus		3011309	0					
ANR	3011358	Identifier	msg		3011309	0					
ANR	3011359	Identifier	deliveryStatus		3011309	1					
ANR	3011360	ArgumentList			3011309	1					
ANR	3011361	Identifier	DCMsg :: DELIVERY_CANCELED		3011309	1					
ANR	3011362	CompoundStatement		14:57:325:325	3011309	1					
ANR	3011363	ExpressionStatement	msg -> callMessageSendFailed ( this )	430:2:9682:9716	3011309	0	True				
ANR	3011364	CallExpression	msg -> callMessageSendFailed ( this )		3011309	0					
ANR	3011365	Callee	msg -> callMessageSendFailed		3011309	0					
ANR	3011366	PtrMemberAccess	msg -> callMessageSendFailed		3011309	0					
ANR	3011367	Identifier	msg		3011309	0					
ANR	3011368	Identifier	callMessageSendFailed		3011309	1					
ANR	3011369	ArgumentList	this		3011309	1					
ANR	3011370	Argument	this		3011309	0					
ANR	3011371	Identifier	this		3011309	0					
ANR	3011372	ExpressionStatement	doneWithSock ( sock )	431:2:9720:9738	3011309	1	True				
ANR	3011373	CallExpression	doneWithSock ( sock )		3011309	0					
ANR	3011374	Callee	doneWithSock		3011309	0					
ANR	3011375	Identifier	doneWithSock		3011309	0					
ANR	3011376	ArgumentList	sock		3011309	1					
ANR	3011377	Argument	sock		3011309	0					
ANR	3011378	Identifier	sock		3011309	0					
ANR	3011379	ElseStatement	else		3011309	0					
ANR	3011380	IfStatement	"if ( ! msg -> writeMsg ( this , sock ) )"		3011309	0					
ANR	3011381	Condition	"! msg -> writeMsg ( this , sock )"	433:10:9753:9780	3011309	0	True				
ANR	3011382	UnaryOperationExpression	"! msg -> writeMsg ( this , sock )"		3011309	0					
ANR	3011383	UnaryOperator	!		3011309	0					
ANR	3011384	CallExpression	"msg -> writeMsg ( this , sock )"		3011309	1					
ANR	3011385	Callee	msg -> writeMsg		3011309	0					
ANR	3011386	PtrMemberAccess	msg -> writeMsg		3011309	0					
ANR	3011387	Identifier	msg		3011309	0					
ANR	3011388	Identifier	writeMsg		3011309	1					
ANR	3011389	ArgumentList	this		3011309	1					
ANR	3011390	Argument	this		3011309	0					
ANR	3011391	Identifier	this		3011309	0					
ANR	3011392	Argument	sock		3011309	1					
ANR	3011393	Identifier	sock		3011309	0					
ANR	3011394	CompoundStatement		18:41:431:431	3011309	1					
ANR	3011395	ExpressionStatement	msg -> callMessageSendFailed ( this )	434:2:9788:9822	3011309	0	True				
ANR	3011396	CallExpression	msg -> callMessageSendFailed ( this )		3011309	0					
ANR	3011397	Callee	msg -> callMessageSendFailed		3011309	0					
ANR	3011398	PtrMemberAccess	msg -> callMessageSendFailed		3011309	0					
ANR	3011399	Identifier	msg		3011309	0					
ANR	3011400	Identifier	callMessageSendFailed		3011309	1					
ANR	3011401	ArgumentList	this		3011309	1					
ANR	3011402	Argument	this		3011309	0					
ANR	3011403	Identifier	this		3011309	0					
ANR	3011404	ExpressionStatement	doneWithSock ( sock )	435:2:9826:9844	3011309	1	True				
ANR	3011405	CallExpression	doneWithSock ( sock )		3011309	0					
ANR	3011406	Callee	doneWithSock		3011309	0					
ANR	3011407	Identifier	doneWithSock		3011309	0					
ANR	3011408	ArgumentList	sock		3011309	1					
ANR	3011409	Argument	sock		3011309	0					
ANR	3011410	Identifier	sock		3011309	0					
ANR	3011411	ElseStatement	else		3011309	0					
ANR	3011412	IfStatement	if ( ! sock -> end_of_message ( ) )		3011309	0					
ANR	3011413	Condition	! sock -> end_of_message ( )	437:10:9859:9881	3011309	0	True				
ANR	3011414	UnaryOperationExpression	! sock -> end_of_message ( )		3011309	0					
ANR	3011415	UnaryOperator	!		3011309	0					
ANR	3011416	CallExpression	sock -> end_of_message ( )		3011309	1					
ANR	3011417	Callee	sock -> end_of_message		3011309	0					
ANR	3011418	PtrMemberAccess	sock -> end_of_message		3011309	0					
ANR	3011419	Identifier	sock		3011309	0					
ANR	3011420	Identifier	end_of_message		3011309	1					
ANR	3011421	ArgumentList			3011309	1					
ANR	3011422	CompoundStatement		22:36:532:532	3011309	1					
ANR	3011423	ExpressionStatement	"msg -> addError ( CEDAR_ERR_EOM_FAILED , ""failed to send EOM"" )"	438:2:9889:9948	3011309	0	True				
ANR	3011424	CallExpression	"msg -> addError ( CEDAR_ERR_EOM_FAILED , ""failed to send EOM"" )"		3011309	0					
ANR	3011425	Callee	msg -> addError		3011309	0					
ANR	3011426	PtrMemberAccess	msg -> addError		3011309	0					
ANR	3011427	Identifier	msg		3011309	0					
ANR	3011428	Identifier	addError		3011309	1					
ANR	3011429	ArgumentList	CEDAR_ERR_EOM_FAILED		3011309	1					
ANR	3011430	Argument	CEDAR_ERR_EOM_FAILED		3011309	0					
ANR	3011431	Identifier	CEDAR_ERR_EOM_FAILED		3011309	0					
ANR	3011432	Argument	"""failed to send EOM"""		3011309	1					
ANR	3011433	PrimaryExpression	"""failed to send EOM"""		3011309	0					
ANR	3011434	ExpressionStatement	msg -> callMessageSendFailed ( this )	439:2:9952:9986	3011309	1	True				
ANR	3011435	CallExpression	msg -> callMessageSendFailed ( this )		3011309	0					
ANR	3011436	Callee	msg -> callMessageSendFailed		3011309	0					
ANR	3011437	PtrMemberAccess	msg -> callMessageSendFailed		3011309	0					
ANR	3011438	Identifier	msg		3011309	0					
ANR	3011439	Identifier	callMessageSendFailed		3011309	1					
ANR	3011440	ArgumentList	this		3011309	1					
ANR	3011441	Argument	this		3011309	0					
ANR	3011442	Identifier	this		3011309	0					
ANR	3011443	ExpressionStatement	doneWithSock ( sock )	440:2:9990:10008	3011309	2	True				
ANR	3011444	CallExpression	doneWithSock ( sock )		3011309	0					
ANR	3011445	Callee	doneWithSock		3011309	0					
ANR	3011446	Identifier	doneWithSock		3011309	0					
ANR	3011447	ArgumentList	sock		3011309	1					
ANR	3011448	Argument	sock		3011309	0					
ANR	3011449	Identifier	sock		3011309	0					
ANR	3011450	ElseStatement	else		3011309	0					
ANR	3011451	CompoundStatement		29:2:684:754	3011309	0					
ANR	3011452	IdentifierDeclStatement	"DCMsg :: MessageClosureEnum closure = msg -> callMessageSent ( this , sock ) ;"	444:2:10037:10107	3011309	0	True				
ANR	3011453	IdentifierDecl	"closure = msg -> callMessageSent ( this , sock )"		3011309	0					
ANR	3011454	IdentifierDeclType	DCMsg :: MessageClosureEnum		3011309	0					
ANR	3011455	Identifier	closure		3011309	1					
ANR	3011456	AssignmentExpression	"closure = msg -> callMessageSent ( this , sock )"		3011309	2		=			
ANR	3011457	Identifier	closure		3011309	0					
ANR	3011458	CallExpression	"msg -> callMessageSent ( this , sock )"		3011309	1					
ANR	3011459	Callee	msg -> callMessageSent		3011309	0					
ANR	3011460	PtrMemberAccess	msg -> callMessageSent		3011309	0					
ANR	3011461	Identifier	msg		3011309	0					
ANR	3011462	Identifier	callMessageSent		3011309	1					
ANR	3011463	ArgumentList	this		3011309	1					
ANR	3011464	Argument	this		3011309	0					
ANR	3011465	Identifier	this		3011309	0					
ANR	3011466	Argument	sock		3011309	1					
ANR	3011467	Identifier	sock		3011309	0					
ANR	3011468	SwitchStatement	switch ( closure )		3011309	1					
ANR	3011469	Condition	closure	446:10:10120:10126	3011309	0	True				
ANR	3011470	Identifier	closure		3011309	0					
ANR	3011471	CompoundStatement		31:20:777:777	3011309	1					
ANR	3011472	Label	case DCMsg :: MESSAGE_FINISHED :	447:2:10134:10162	3011309	0	True				
ANR	3011473	Identifier	DCMsg :: MESSAGE_FINISHED		3011309	0					
ANR	3011474	ExpressionStatement	doneWithSock ( sock )	448:3:10167:10185	3011309	1	True				
ANR	3011475	CallExpression	doneWithSock ( sock )		3011309	0					
ANR	3011476	Callee	doneWithSock		3011309	0					
ANR	3011477	Identifier	doneWithSock		3011309	0					
ANR	3011478	ArgumentList	sock		3011309	1					
ANR	3011479	Argument	sock		3011309	0					
ANR	3011480	Identifier	sock		3011309	0					
ANR	3011481	BreakStatement	break ;	449:3:10190:10195	3011309	2	True				
ANR	3011482	Label	case DCMsg :: MESSAGE_CONTINUING :	450:2:10199:10229	3011309	3	True				
ANR	3011483	Identifier	DCMsg :: MESSAGE_CONTINUING		3011309	0					
ANR	3011484	BreakStatement	break ;	451:3:10234:10239	3011309	4	True				
ANR	3011485	ExpressionStatement	decRefCount ( )	455:1:10250:10263	3011309	6	True				
ANR	3011486	CallExpression	decRefCount ( )		3011309	0					
ANR	3011487	Callee	decRefCount		3011309	0					
ANR	3011488	Identifier	decRefCount		3011309	0					
ANR	3011489	ArgumentList			3011309	1					
ANR	3011490	ReturnType	void		3011309	1					
ANR	3011491	Identifier	DCMessenger :: writeMsg		3011309	2					
ANR	3011492	ParameterList	"classy_counted_ptr < DCMsg > msg , Sock * sock"		3011309	3					
ANR	3011493	Parameter	classy_counted_ptr < DCMsg > msg	415:28:9308:9336	3011309	0	True				
ANR	3011494	ParameterType	classy_counted_ptr < DCMsg >		3011309	0					
ANR	3011495	Identifier	msg		3011309	1					
ANR	3011496	Parameter	Sock * sock	415:59:9339:9348	3011309	1	True				
ANR	3011497	ParameterType	Sock *		3011309	0					
ANR	3011498	Identifier	sock		3011309	1					
ANR	3011499	CFGEntryNode	ENTRY		3011309		True				
ANR	3011500	CFGExitNode	EXIT		3011309		True				
ANR	3011501	Symbol	msg		3011309						
ANR	3011502	Symbol	DCMsg :: DELIVERY_CANCELED		3011309						
ANR	3011503	Symbol	msg -> deliveryStatus		3011309						
ANR	3011504	Symbol	sock -> end_of_message		3011309						
ANR	3011505	Symbol	msg -> writeMsg		3011309						
ANR	3011506	Symbol	this		3011309						
ANR	3011507	Symbol	* msg		3011309						
ANR	3011508	Symbol	CEDAR_ERR_EOM_FAILED		3011309						
ANR	3011509	Symbol	sock		3011309						
ANR	3011510	Symbol	msg . get		3011309						
ANR	3011511	Symbol	closure		3011309						
ANR	3011512	Symbol	* sock		3011309						
ANR	3011513	Symbol	msg -> callMessageSent		3011309						
ANR	3011514	Function	DCMessenger :: startReceiveMsg	458:0:10268:11199							
ANR	3011515	FunctionDef	"DCMessenger :: startReceiveMsg (classy_counted_ptr < DCMsg > msg , Sock * sock)"		3011514	0					
ANR	3011516	CompoundStatement		459:0:10347:11199	3011514	0					
ANR	3011517	ExpressionStatement	ASSERT ( ! m_callback_msg . get ( ) )	461:1:10406:10437	3011514	0	True				
ANR	3011518	CallExpression	ASSERT ( ! m_callback_msg . get ( ) )		3011514	0					
ANR	3011519	Callee	ASSERT		3011514	0					
ANR	3011520	Identifier	ASSERT		3011514	0					
ANR	3011521	ArgumentList	! m_callback_msg . get ( )		3011514	1					
ANR	3011522	Argument	! m_callback_msg . get ( )		3011514	0					
ANR	3011523	UnaryOperationExpression	! m_callback_msg . get ( )		3011514	0					
ANR	3011524	UnaryOperator	!		3011514	0					
ANR	3011525	CallExpression	m_callback_msg . get ( )		3011514	1					
ANR	3011526	Callee	m_callback_msg . get		3011514	0					
ANR	3011527	MemberAccess	m_callback_msg . get		3011514	0					
ANR	3011528	Identifier	m_callback_msg		3011514	0					
ANR	3011529	Identifier	get		3011514	1					
ANR	3011530	ArgumentList			3011514	1					
ANR	3011531	ExpressionStatement	ASSERT ( ! m_callback_sock )	462:1:10440:10466	3011514	1	True				
ANR	3011532	CallExpression	ASSERT ( ! m_callback_sock )		3011514	0					
ANR	3011533	Callee	ASSERT		3011514	0					
ANR	3011534	Identifier	ASSERT		3011514	0					
ANR	3011535	ArgumentList	! m_callback_sock		3011514	1					
ANR	3011536	Argument	! m_callback_sock		3011514	0					
ANR	3011537	UnaryOperationExpression	! m_callback_sock		3011514	0					
ANR	3011538	UnaryOperator	!		3011514	0					
ANR	3011539	Identifier	m_callback_sock		3011514	1					
ANR	3011540	ExpressionStatement	ASSERT ( m_pending_operation == NOTHING_PENDING )	463:1:10469:10517	3011514	2	True				
ANR	3011541	CallExpression	ASSERT ( m_pending_operation == NOTHING_PENDING )		3011514	0					
ANR	3011542	Callee	ASSERT		3011514	0					
ANR	3011543	Identifier	ASSERT		3011514	0					
ANR	3011544	ArgumentList	m_pending_operation == NOTHING_PENDING		3011514	1					
ANR	3011545	Argument	m_pending_operation == NOTHING_PENDING		3011514	0					
ANR	3011546	EqualityExpression	m_pending_operation == NOTHING_PENDING		3011514	0		==			
ANR	3011547	Identifier	m_pending_operation		3011514	0					
ANR	3011548	Identifier	NOTHING_PENDING		3011514	1					
ANR	3011549	ExpressionStatement	msg -> setMessenger ( this )	465:1:10521:10546	3011514	3	True				
ANR	3011550	CallExpression	msg -> setMessenger ( this )		3011514	0					
ANR	3011551	Callee	msg -> setMessenger		3011514	0					
ANR	3011552	PtrMemberAccess	msg -> setMessenger		3011514	0					
ANR	3011553	Identifier	msg		3011514	0					
ANR	3011554	Identifier	setMessenger		3011514	1					
ANR	3011555	ArgumentList	this		3011514	1					
ANR	3011556	Argument	this		3011514	0					
ANR	3011557	Identifier	this		3011514	0					
ANR	3011558	IdentifierDeclStatement	MyString name ;	467:1:10550:10563	3011514	4	True				
ANR	3011559	IdentifierDecl	name		3011514	0					
ANR	3011560	IdentifierDeclType	MyString		3011514	0					
ANR	3011561	Identifier	name		3011514	1					
ANR	3011562	ExpressionStatement	"name . sprintf ( ""DCMessenger::receiveMsgCallback %s"" , msg -> name ( ) )"	468:1:10566:10629	3011514	5	True				
ANR	3011563	CallExpression	"name . sprintf ( ""DCMessenger::receiveMsgCallback %s"" , msg -> name ( ) )"		3011514	0					
ANR	3011564	Callee	name . sprintf		3011514	0					
ANR	3011565	MemberAccess	name . sprintf		3011514	0					
ANR	3011566	Identifier	name		3011514	0					
ANR	3011567	Identifier	sprintf		3011514	1					
ANR	3011568	ArgumentList	"""DCMessenger::receiveMsgCallback %s"""		3011514	1					
ANR	3011569	Argument	"""DCMessenger::receiveMsgCallback %s"""		3011514	0					
ANR	3011570	PrimaryExpression	"""DCMessenger::receiveMsgCallback %s"""		3011514	0					
ANR	3011571	Argument	msg -> name ( )		3011514	1					
ANR	3011572	CallExpression	msg -> name ( )		3011514	0					
ANR	3011573	Callee	msg -> name		3011514	0					
ANR	3011574	PtrMemberAccess	msg -> name		3011514	0					
ANR	3011575	Identifier	msg		3011514	0					
ANR	3011576	Identifier	name		3011514	1					
ANR	3011577	ArgumentList			3011514	1					
ANR	3011578	ExpressionStatement	incRefCount ( )	470:1:10633:10646	3011514	6	True				
ANR	3011579	CallExpression	incRefCount ( )		3011514	0					
ANR	3011580	Callee	incRefCount		3011514	0					
ANR	3011581	Identifier	incRefCount		3011514	0					
ANR	3011582	ArgumentList			3011514	1					
ANR	3011583	IdentifierDeclStatement	"int reg_rc = daemonCoreSockAdapter . Register_Socket ( sock , peerDescription ( ) , ( SocketHandlercpp ) & DCMessenger :: receiveMsgCallback , name . Value ( ) , this , ALLOW ) ;"	472:1:10650:10823	3011514	7	True				
ANR	3011584	IdentifierDecl	"reg_rc = daemonCoreSockAdapter . Register_Socket ( sock , peerDescription ( ) , ( SocketHandlercpp ) & DCMessenger :: receiveMsgCallback , name . Value ( ) , this , ALLOW )"		3011514	0					
ANR	3011585	IdentifierDeclType	int		3011514	0					
ANR	3011586	Identifier	reg_rc		3011514	1					
ANR	3011587	AssignmentExpression	"reg_rc = daemonCoreSockAdapter . Register_Socket ( sock , peerDescription ( ) , ( SocketHandlercpp ) & DCMessenger :: receiveMsgCallback , name . Value ( ) , this , ALLOW )"		3011514	2		=			
ANR	3011588	Identifier	reg_rc		3011514	0					
ANR	3011589	CallExpression	"daemonCoreSockAdapter . Register_Socket ( sock , peerDescription ( ) , ( SocketHandlercpp ) & DCMessenger :: receiveMsgCallback , name . Value ( ) , this , ALLOW )"		3011514	1					
ANR	3011590	Callee	daemonCoreSockAdapter . Register_Socket		3011514	0					
ANR	3011591	MemberAccess	daemonCoreSockAdapter . Register_Socket		3011514	0					
ANR	3011592	Identifier	daemonCoreSockAdapter		3011514	0					
ANR	3011593	Identifier	Register_Socket		3011514	1					
ANR	3011594	ArgumentList	sock		3011514	1					
ANR	3011595	Argument	sock		3011514	0					
ANR	3011596	Identifier	sock		3011514	0					
ANR	3011597	Argument	peerDescription ( )		3011514	1					
ANR	3011598	CallExpression	peerDescription ( )		3011514	0					
ANR	3011599	Callee	peerDescription		3011514	0					
ANR	3011600	Identifier	peerDescription		3011514	0					
ANR	3011601	ArgumentList			3011514	1					
ANR	3011602	Argument	( SocketHandlercpp ) & DCMessenger :: receiveMsgCallback		3011514	2					
ANR	3011603	CastExpression	( SocketHandlercpp ) & DCMessenger :: receiveMsgCallback		3011514	0					
ANR	3011604	CastTarget	SocketHandlercpp		3011514	0					
ANR	3011605	UnaryOperationExpression	& DCMessenger :: receiveMsgCallback		3011514	1					
ANR	3011606	UnaryOperator	&		3011514	0					
ANR	3011607	Identifier	DCMessenger :: receiveMsgCallback		3011514	1					
ANR	3011608	Argument	name . Value ( )		3011514	3					
ANR	3011609	CallExpression	name . Value ( )		3011514	0					
ANR	3011610	Callee	name . Value		3011514	0					
ANR	3011611	MemberAccess	name . Value		3011514	0					
ANR	3011612	Identifier	name		3011514	0					
ANR	3011613	Identifier	Value		3011514	1					
ANR	3011614	ArgumentList			3011514	1					
ANR	3011615	Argument	this		3011514	4					
ANR	3011616	Identifier	this		3011514	0					
ANR	3011617	Argument	ALLOW		3011514	5					
ANR	3011618	Identifier	ALLOW		3011514	0					
ANR	3011619	IfStatement	if ( reg_rc < 0 )		3011514	8					
ANR	3011620	Condition	reg_rc < 0	476:4:10829:10838	3011514	0	True				
ANR	3011621	RelationalExpression	reg_rc < 0		3011514	0		<			
ANR	3011622	Identifier	reg_rc		3011514	0					
ANR	3011623	PrimaryExpression	0		3011514	1					
ANR	3011624	CompoundStatement		18:16:493:493	3011514	1					
ANR	3011625	ExpressionStatement	"msg -> addError ( CEDAR_ERR_REGISTER_SOCK_FAILED , ""failed to register socket (Register_Socket returned %d)"" , reg_rc )"	477:2:10845:10968	3011514	0	True				
ANR	3011626	CallExpression	"msg -> addError ( CEDAR_ERR_REGISTER_SOCK_FAILED , ""failed to register socket (Register_Socket returned %d)"" , reg_rc )"		3011514	0					
ANR	3011627	Callee	msg -> addError		3011514	0					
ANR	3011628	PtrMemberAccess	msg -> addError		3011514	0					
ANR	3011629	Identifier	msg		3011514	0					
ANR	3011630	Identifier	addError		3011514	1					
ANR	3011631	ArgumentList	CEDAR_ERR_REGISTER_SOCK_FAILED		3011514	1					
ANR	3011632	Argument	CEDAR_ERR_REGISTER_SOCK_FAILED		3011514	0					
ANR	3011633	Identifier	CEDAR_ERR_REGISTER_SOCK_FAILED		3011514	0					
ANR	3011634	Argument	"""failed to register socket (Register_Socket returned %d)"""		3011514	1					
ANR	3011635	PrimaryExpression	"""failed to register socket (Register_Socket returned %d)"""		3011514	0					
ANR	3011636	Argument	reg_rc		3011514	2					
ANR	3011637	Identifier	reg_rc		3011514	0					
ANR	3011638	ExpressionStatement	msg -> callMessageReceiveFailed ( this )	481:2:10972:11009	3011514	1	True				
ANR	3011639	CallExpression	msg -> callMessageReceiveFailed ( this )		3011514	0					
ANR	3011640	Callee	msg -> callMessageReceiveFailed		3011514	0					
ANR	3011641	PtrMemberAccess	msg -> callMessageReceiveFailed		3011514	0					
ANR	3011642	Identifier	msg		3011514	0					
ANR	3011643	Identifier	callMessageReceiveFailed		3011514	1					
ANR	3011644	ArgumentList	this		3011514	1					
ANR	3011645	Argument	this		3011514	0					
ANR	3011646	Identifier	this		3011514	0					
ANR	3011647	ExpressionStatement	doneWithSock ( sock )	482:2:11013:11031	3011514	2	True				
ANR	3011648	CallExpression	doneWithSock ( sock )		3011514	0					
ANR	3011649	Callee	doneWithSock		3011514	0					
ANR	3011650	Identifier	doneWithSock		3011514	0					
ANR	3011651	ArgumentList	sock		3011514	1					
ANR	3011652	Argument	sock		3011514	0					
ANR	3011653	Identifier	sock		3011514	0					
ANR	3011654	ExpressionStatement	decRefCount ( )	483:2:11035:11048	3011514	3	True				
ANR	3011655	CallExpression	decRefCount ( )		3011514	0					
ANR	3011656	Callee	decRefCount		3011514	0					
ANR	3011657	Identifier	decRefCount		3011514	0					
ANR	3011658	ArgumentList			3011514	1					
ANR	3011659	ReturnStatement	return ;	484:2:11052:11058	3011514	4	True				
ANR	3011660	ExpressionStatement	m_callback_msg = msg	487:1:11065:11085	3011514	9	True				
ANR	3011661	AssignmentExpression	m_callback_msg = msg		3011514	0		=			
ANR	3011662	Identifier	m_callback_msg		3011514	0					
ANR	3011663	Identifier	msg		3011514	1					
ANR	3011664	ExpressionStatement	m_callback_sock = sock	488:1:11131:11153	3011514	10	True				
ANR	3011665	AssignmentExpression	m_callback_sock = sock		3011514	0		=			
ANR	3011666	Identifier	m_callback_sock		3011514	0					
ANR	3011667	Identifier	sock		3011514	1					
ANR	3011668	ExpressionStatement	m_pending_operation = RECEIVE_MSG_PENDING	489:1:11156:11197	3011514	11	True				
ANR	3011669	AssignmentExpression	m_pending_operation = RECEIVE_MSG_PENDING		3011514	0		=			
ANR	3011670	Identifier	m_pending_operation		3011514	0					
ANR	3011671	Identifier	RECEIVE_MSG_PENDING		3011514	1					
ANR	3011672	ReturnType	void		3011514	1					
ANR	3011673	Identifier	DCMessenger :: startReceiveMsg		3011514	2					
ANR	3011674	ParameterList	"classy_counted_ptr < DCMsg > msg , Sock * sock"		3011514	3					
ANR	3011675	Parameter	classy_counted_ptr < DCMsg > msg	458:35:10303:10331	3011514	0	True				
ANR	3011676	ParameterType	classy_counted_ptr < DCMsg >		3011514	0					
ANR	3011677	Identifier	msg		3011514	1					
ANR	3011678	Parameter	Sock * sock	458:66:10334:10343	3011514	1	True				
ANR	3011679	ParameterType	Sock *		3011514	0					
ANR	3011680	Identifier	sock		3011514	1					
ANR	3011681	CFGEntryNode	ENTRY		3011514		True				
ANR	3011682	CFGExitNode	EXIT		3011514		True				
ANR	3011683	Symbol	msg		3011514						
ANR	3011684	Symbol	name . Value		3011514						
ANR	3011685	Symbol	m_pending_operation		3011514						
ANR	3011686	Symbol	m_callback_msg . get		3011514						
ANR	3011687	Symbol	RECEIVE_MSG_PENDING		3011514						
ANR	3011688	Symbol	this		3011514						
ANR	3011689	Symbol	m_callback_msg		3011514						
ANR	3011690	Symbol	* msg		3011514						
ANR	3011691	Symbol	m_callback_sock		3011514						
ANR	3011692	Symbol	daemonCoreSockAdapter . Register_Socket		3011514						
ANR	3011693	Symbol	CEDAR_ERR_REGISTER_SOCK_FAILED		3011514						
ANR	3011694	Symbol	sock		3011514						
ANR	3011695	Symbol	peerDescription		3011514						
ANR	3011696	Symbol	daemonCoreSockAdapter		3011514						
ANR	3011697	Symbol	reg_rc		3011514						
ANR	3011698	Symbol	name		3011514						
ANR	3011699	Symbol	& DCMessenger :: receiveMsgCallback		3011514						
ANR	3011700	Symbol	NOTHING_PENDING		3011514						
ANR	3011701	Symbol	msg -> name		3011514						
ANR	3011702	Symbol	ALLOW		3011514						
ANR	3011703	Function	DCMessenger :: receiveMsgCallback	492:0:11202:11547							
ANR	3011704	FunctionDef	DCMessenger :: receiveMsgCallback (Stream * sock)		3011703	0					
ANR	3011705	CompoundStatement		494:0:11252:11547	3011703	0					
ANR	3011706	IdentifierDeclStatement	classy_counted_ptr < DCMsg > msg = m_callback_msg ;	495:1:11255:11301	3011703	0	True				
ANR	3011707	IdentifierDecl	msg = m_callback_msg		3011703	0					
ANR	3011708	IdentifierDeclType	classy_counted_ptr < DCMsg >		3011703	0					
ANR	3011709	Identifier	msg		3011703	1					
ANR	3011710	AssignmentExpression	msg = m_callback_msg		3011703	2		=			
ANR	3011711	Identifier	m_callback_msg		3011703	0					
ANR	3011712	Identifier	m_callback_msg		3011703	1					
ANR	3011713	ExpressionStatement	ASSERT ( msg . get ( ) )	496:1:11304:11321	3011703	1	True				
ANR	3011714	CallExpression	ASSERT ( msg . get ( ) )		3011703	0					
ANR	3011715	Callee	ASSERT		3011703	0					
ANR	3011716	Identifier	ASSERT		3011703	0					
ANR	3011717	ArgumentList	msg . get ( )		3011703	1					
ANR	3011718	Argument	msg . get ( )		3011703	0					
ANR	3011719	CallExpression	msg . get ( )		3011703	0					
ANR	3011720	Callee	msg . get		3011703	0					
ANR	3011721	MemberAccess	msg . get		3011703	0					
ANR	3011722	Identifier	msg		3011703	0					
ANR	3011723	Identifier	get		3011703	1					
ANR	3011724	ArgumentList			3011703	1					
ANR	3011725	ExpressionStatement	m_callback_msg = NULL	498:1:11325:11346	3011703	2	True				
ANR	3011726	AssignmentExpression	m_callback_msg = NULL		3011703	0		=			
ANR	3011727	Identifier	m_callback_msg		3011703	0					
ANR	3011728	Identifier	NULL		3011703	1					
ANR	3011729	ExpressionStatement	m_callback_sock = NULL	499:1:11349:11371	3011703	3	True				
ANR	3011730	AssignmentExpression	m_callback_sock = NULL		3011703	0		=			
ANR	3011731	Identifier	m_callback_sock		3011703	0					
ANR	3011732	Identifier	NULL		3011703	1					
ANR	3011733	ExpressionStatement	m_pending_operation = NOTHING_PENDING	500:1:11374:11411	3011703	4	True				
ANR	3011734	AssignmentExpression	m_pending_operation = NOTHING_PENDING		3011703	0		=			
ANR	3011735	Identifier	m_pending_operation		3011703	0					
ANR	3011736	Identifier	NOTHING_PENDING		3011703	1					
ANR	3011737	ExpressionStatement	daemonCoreSockAdapter . Cancel_Socket ( sock )	502:1:11415:11458	3011703	5	True				
ANR	3011738	CallExpression	daemonCoreSockAdapter . Cancel_Socket ( sock )		3011703	0					
ANR	3011739	Callee	daemonCoreSockAdapter . Cancel_Socket		3011703	0					
ANR	3011740	MemberAccess	daemonCoreSockAdapter . Cancel_Socket		3011703	0					
ANR	3011741	Identifier	daemonCoreSockAdapter		3011703	0					
ANR	3011742	Identifier	Cancel_Socket		3011703	1					
ANR	3011743	ArgumentList	sock		3011703	1					
ANR	3011744	Argument	sock		3011703	0					
ANR	3011745	Identifier	sock		3011703	0					
ANR	3011746	ExpressionStatement	ASSERT ( sock )	504:1:11462:11476	3011703	6	True				
ANR	3011747	CallExpression	ASSERT ( sock )		3011703	0					
ANR	3011748	Callee	ASSERT		3011703	0					
ANR	3011749	Identifier	ASSERT		3011703	0					
ANR	3011750	ArgumentList	sock		3011703	1					
ANR	3011751	Argument	sock		3011703	0					
ANR	3011752	Identifier	sock		3011703	0					
ANR	3011753	ExpressionStatement	"readMsg ( msg , ( Sock * ) sock )"	505:1:11479:11507	3011703	7	True				
ANR	3011754	CallExpression	"readMsg ( msg , ( Sock * ) sock )"		3011703	0					
ANR	3011755	Callee	readMsg		3011703	0					
ANR	3011756	Identifier	readMsg		3011703	0					
ANR	3011757	ArgumentList	msg		3011703	1					
ANR	3011758	Argument	msg		3011703	0					
ANR	3011759	Identifier	msg		3011703	0					
ANR	3011760	Argument	( Sock * ) sock		3011703	1					
ANR	3011761	CastExpression	( Sock * ) sock		3011703	0					
ANR	3011762	CastTarget	Sock *		3011703	0					
ANR	3011763	Identifier	sock		3011703	1					
ANR	3011764	ExpressionStatement	decRefCount ( )	507:1:11511:11524	3011703	8	True				
ANR	3011765	CallExpression	decRefCount ( )		3011703	0					
ANR	3011766	Callee	decRefCount		3011703	0					
ANR	3011767	Identifier	decRefCount		3011703	0					
ANR	3011768	ArgumentList			3011703	1					
ANR	3011769	ReturnStatement	return KEEP_STREAM ;	508:1:11527:11545	3011703	9	True				
ANR	3011770	Identifier	KEEP_STREAM		3011703	0					
ANR	3011771	ReturnType	int		3011703	1					
ANR	3011772	Identifier	DCMessenger :: receiveMsgCallback		3011703	2					
ANR	3011773	ParameterList	Stream * sock		3011703	3					
ANR	3011774	Parameter	Stream * sock	493:32:11238:11249	3011703	0	True				
ANR	3011775	ParameterType	Stream *		3011703	0					
ANR	3011776	Identifier	sock		3011703	1					
ANR	3011777	CFGEntryNode	ENTRY		3011703		True				
ANR	3011778	CFGExitNode	EXIT		3011703		True				
ANR	3011779	Symbol	msg		3011703						
ANR	3011780	Symbol	sock		3011703						
ANR	3011781	Symbol	daemonCoreSockAdapter		3011703						
ANR	3011782	Symbol	NULL		3011703						
ANR	3011783	Symbol	m_pending_operation		3011703						
ANR	3011784	Symbol	m_callback_msg		3011703						
ANR	3011785	Symbol	msg . get		3011703						
ANR	3011786	Symbol	NOTHING_PENDING		3011703						
ANR	3011787	Symbol	m_callback_sock		3011703						
ANR	3011788	Symbol	KEEP_STREAM		3011703						
ANR	3011789	Function	DCMessenger :: readMsg	511:0:11550:12422							
ANR	3011790	FunctionDef	"DCMessenger :: readMsg (classy_counted_ptr < DCMsg > msg , Sock * sock)"		3011789	0					
ANR	3011791	CompoundStatement		513:0:11621:12422	3011789	0					
ANR	3011792	ExpressionStatement	ASSERT ( msg . get ( ) )	514:1:11624:11643	3011789	0	True				
ANR	3011793	CallExpression	ASSERT ( msg . get ( ) )		3011789	0					
ANR	3011794	Callee	ASSERT		3011789	0					
ANR	3011795	Identifier	ASSERT		3011789	0					
ANR	3011796	ArgumentList	msg . get ( )		3011789	1					
ANR	3011797	Argument	msg . get ( )		3011789	0					
ANR	3011798	CallExpression	msg . get ( )		3011789	0					
ANR	3011799	Callee	msg . get		3011789	0					
ANR	3011800	MemberAccess	msg . get		3011789	0					
ANR	3011801	Identifier	msg		3011789	0					
ANR	3011802	Identifier	get		3011789	1					
ANR	3011803	ArgumentList			3011789	1					
ANR	3011804	ExpressionStatement	ASSERT ( sock )	515:1:11646:11660	3011789	1	True				
ANR	3011805	CallExpression	ASSERT ( sock )		3011789	0					
ANR	3011806	Callee	ASSERT		3011789	0					
ANR	3011807	Identifier	ASSERT		3011789	0					
ANR	3011808	ArgumentList	sock		3011789	1					
ANR	3011809	Argument	sock		3011789	0					
ANR	3011810	Identifier	sock		3011789	0					
ANR	3011811	ExpressionStatement	msg -> setMessenger ( this )	517:1:11664:11689	3011789	2	True				
ANR	3011812	CallExpression	msg -> setMessenger ( this )		3011789	0					
ANR	3011813	Callee	msg -> setMessenger		3011789	0					
ANR	3011814	PtrMemberAccess	msg -> setMessenger		3011789	0					
ANR	3011815	Identifier	msg		3011789	0					
ANR	3011816	Identifier	setMessenger		3011789	1					
ANR	3011817	ArgumentList	this		3011789	1					
ANR	3011818	Argument	this		3011789	0					
ANR	3011819	Identifier	this		3011789	0					
ANR	3011820	ExpressionStatement	incRefCount ( )	519:1:11693:11706	3011789	3	True				
ANR	3011821	CallExpression	incRefCount ( )		3011789	0					
ANR	3011822	Callee	incRefCount		3011789	0					
ANR	3011823	Identifier	incRefCount		3011789	0					
ANR	3011824	ArgumentList			3011789	1					
ANR	3011825	ExpressionStatement	sock -> decode ( )	521:1:11710:11724	3011789	4	True				
ANR	3011826	CallExpression	sock -> decode ( )		3011789	0					
ANR	3011827	Callee	sock -> decode		3011789	0					
ANR	3011828	PtrMemberAccess	sock -> decode		3011789	0					
ANR	3011829	Identifier	sock		3011789	0					
ANR	3011830	Identifier	decode		3011789	1					
ANR	3011831	ArgumentList			3011789	1					
ANR	3011832	IdentifierDeclStatement	bool done_with_sock = true ;	523:1:11728:11754	3011789	5	True				
ANR	3011833	IdentifierDecl	done_with_sock = true		3011789	0					
ANR	3011834	IdentifierDeclType	bool		3011789	0					
ANR	3011835	Identifier	done_with_sock		3011789	1					
ANR	3011836	AssignmentExpression	done_with_sock = true		3011789	2		=			
ANR	3011837	Identifier	true		3011789	0					
ANR	3011838	Identifier	true		3011789	1					
ANR	3011839	IfStatement	if ( sock -> deadline_expired ( ) )		3011789	6					
ANR	3011840	Condition	sock -> deadline_expired ( )	525:5:11762:11785	3011789	0	True				
ANR	3011841	CallExpression	sock -> deadline_expired ( )		3011789	0					
ANR	3011842	Callee	sock -> deadline_expired		3011789	0					
ANR	3011843	PtrMemberAccess	sock -> deadline_expired		3011789	0					
ANR	3011844	Identifier	sock		3011789	0					
ANR	3011845	Identifier	deadline_expired		3011789	1					
ANR	3011846	ArgumentList			3011789	1					
ANR	3011847	CompoundStatement		13:32:167:167	3011789	1					
ANR	3011848	ExpressionStatement	"msg -> cancelMessage ( ""deadline expired"" )"	526:2:11793:11831	3011789	0	True				
ANR	3011849	CallExpression	"msg -> cancelMessage ( ""deadline expired"" )"		3011789	0					
ANR	3011850	Callee	msg -> cancelMessage		3011789	0					
ANR	3011851	PtrMemberAccess	msg -> cancelMessage		3011789	0					
ANR	3011852	Identifier	msg		3011789	0					
ANR	3011853	Identifier	cancelMessage		3011789	1					
ANR	3011854	ArgumentList	"""deadline expired"""		3011789	1					
ANR	3011855	Argument	"""deadline expired"""		3011789	0					
ANR	3011856	PrimaryExpression	"""deadline expired"""		3011789	0					
ANR	3011857	IfStatement	if ( msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED )		3011789	7					
ANR	3011858	Condition	msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED	529:5:11842:11890	3011789	0	True				
ANR	3011859	EqualityExpression	msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED		3011789	0		==			
ANR	3011860	CallExpression	msg -> deliveryStatus ( )		3011789	0					
ANR	3011861	Callee	msg -> deliveryStatus		3011789	0					
ANR	3011862	PtrMemberAccess	msg -> deliveryStatus		3011789	0					
ANR	3011863	Identifier	msg		3011789	0					
ANR	3011864	Identifier	deliveryStatus		3011789	1					
ANR	3011865	ArgumentList			3011789	1					
ANR	3011866	Identifier	DCMsg :: DELIVERY_CANCELED		3011789	1					
ANR	3011867	CompoundStatement		17:57:272:272	3011789	1					
ANR	3011868	ExpressionStatement	msg -> callMessageReceiveFailed ( this )	530:2:11898:11935	3011789	0	True				
ANR	3011869	CallExpression	msg -> callMessageReceiveFailed ( this )		3011789	0					
ANR	3011870	Callee	msg -> callMessageReceiveFailed		3011789	0					
ANR	3011871	PtrMemberAccess	msg -> callMessageReceiveFailed		3011789	0					
ANR	3011872	Identifier	msg		3011789	0					
ANR	3011873	Identifier	callMessageReceiveFailed		3011789	1					
ANR	3011874	ArgumentList	this		3011789	1					
ANR	3011875	Argument	this		3011789	0					
ANR	3011876	Identifier	this		3011789	0					
ANR	3011877	ElseStatement	else		3011789	0					
ANR	3011878	IfStatement	"if ( ! msg -> readMsg ( this , sock ) )"		3011789	0					
ANR	3011879	Condition	"! msg -> readMsg ( this , sock )"	532:10:11950:11976	3011789	0	True				
ANR	3011880	UnaryOperationExpression	"! msg -> readMsg ( this , sock )"		3011789	0					
ANR	3011881	UnaryOperator	!		3011789	0					
ANR	3011882	CallExpression	"msg -> readMsg ( this , sock )"		3011789	1					
ANR	3011883	Callee	msg -> readMsg		3011789	0					
ANR	3011884	PtrMemberAccess	msg -> readMsg		3011789	0					
ANR	3011885	Identifier	msg		3011789	0					
ANR	3011886	Identifier	readMsg		3011789	1					
ANR	3011887	ArgumentList	this		3011789	1					
ANR	3011888	Argument	this		3011789	0					
ANR	3011889	Identifier	this		3011789	0					
ANR	3011890	Argument	sock		3011789	1					
ANR	3011891	Identifier	sock		3011789	0					
ANR	3011892	CompoundStatement		20:40:358:358	3011789	1					
ANR	3011893	ExpressionStatement	msg -> callMessageReceiveFailed ( this )	533:2:11984:12021	3011789	0	True				
ANR	3011894	CallExpression	msg -> callMessageReceiveFailed ( this )		3011789	0					
ANR	3011895	Callee	msg -> callMessageReceiveFailed		3011789	0					
ANR	3011896	PtrMemberAccess	msg -> callMessageReceiveFailed		3011789	0					
ANR	3011897	Identifier	msg		3011789	0					
ANR	3011898	Identifier	callMessageReceiveFailed		3011789	1					
ANR	3011899	ArgumentList	this		3011789	1					
ANR	3011900	Argument	this		3011789	0					
ANR	3011901	Identifier	this		3011789	0					
ANR	3011902	ElseStatement	else		3011789	0					
ANR	3011903	IfStatement	if ( ! sock -> end_of_message ( ) )		3011789	0					
ANR	3011904	Condition	! sock -> end_of_message ( )	535:10:12036:12058	3011789	0	True				
ANR	3011905	UnaryOperationExpression	! sock -> end_of_message ( )		3011789	0					
ANR	3011906	UnaryOperator	!		3011789	0					
ANR	3011907	CallExpression	sock -> end_of_message ( )		3011789	1					
ANR	3011908	Callee	sock -> end_of_message		3011789	0					
ANR	3011909	PtrMemberAccess	sock -> end_of_message		3011789	0					
ANR	3011910	Identifier	sock		3011789	0					
ANR	3011911	Identifier	end_of_message		3011789	1					
ANR	3011912	ArgumentList			3011789	1					
ANR	3011913	CompoundStatement		23:36:440:440	3011789	1					
ANR	3011914	ExpressionStatement	"msg -> addError ( CEDAR_ERR_EOM_FAILED , ""failed to read EOM"" )"	536:2:12066:12125	3011789	0	True				
ANR	3011915	CallExpression	"msg -> addError ( CEDAR_ERR_EOM_FAILED , ""failed to read EOM"" )"		3011789	0					
ANR	3011916	Callee	msg -> addError		3011789	0					
ANR	3011917	PtrMemberAccess	msg -> addError		3011789	0					
ANR	3011918	Identifier	msg		3011789	0					
ANR	3011919	Identifier	addError		3011789	1					
ANR	3011920	ArgumentList	CEDAR_ERR_EOM_FAILED		3011789	1					
ANR	3011921	Argument	CEDAR_ERR_EOM_FAILED		3011789	0					
ANR	3011922	Identifier	CEDAR_ERR_EOM_FAILED		3011789	0					
ANR	3011923	Argument	"""failed to read EOM"""		3011789	1					
ANR	3011924	PrimaryExpression	"""failed to read EOM"""		3011789	0					
ANR	3011925	ExpressionStatement	msg -> callMessageReceiveFailed ( this )	537:2:12129:12166	3011789	1	True				
ANR	3011926	CallExpression	msg -> callMessageReceiveFailed ( this )		3011789	0					
ANR	3011927	Callee	msg -> callMessageReceiveFailed		3011789	0					
ANR	3011928	PtrMemberAccess	msg -> callMessageReceiveFailed		3011789	0					
ANR	3011929	Identifier	msg		3011789	0					
ANR	3011930	Identifier	callMessageReceiveFailed		3011789	1					
ANR	3011931	ArgumentList	this		3011789	1					
ANR	3011932	Argument	this		3011789	0					
ANR	3011933	Identifier	this		3011789	0					
ANR	3011934	ElseStatement	else		3011789	0					
ANR	3011935	CompoundStatement		29:2:573:647	3011789	0					
ANR	3011936	IdentifierDeclStatement	"DCMsg :: MessageClosureEnum closure = msg -> callMessageReceived ( this , sock ) ;"	541:2:12195:12269	3011789	0	True				
ANR	3011937	IdentifierDecl	"closure = msg -> callMessageReceived ( this , sock )"		3011789	0					
ANR	3011938	IdentifierDeclType	DCMsg :: MessageClosureEnum		3011789	0					
ANR	3011939	Identifier	closure		3011789	1					
ANR	3011940	AssignmentExpression	"closure = msg -> callMessageReceived ( this , sock )"		3011789	2		=			
ANR	3011941	Identifier	closure		3011789	0					
ANR	3011942	CallExpression	"msg -> callMessageReceived ( this , sock )"		3011789	1					
ANR	3011943	Callee	msg -> callMessageReceived		3011789	0					
ANR	3011944	PtrMemberAccess	msg -> callMessageReceived		3011789	0					
ANR	3011945	Identifier	msg		3011789	0					
ANR	3011946	Identifier	callMessageReceived		3011789	1					
ANR	3011947	ArgumentList	this		3011789	1					
ANR	3011948	Argument	this		3011789	0					
ANR	3011949	Identifier	this		3011789	0					
ANR	3011950	Argument	sock		3011789	1					
ANR	3011951	Identifier	sock		3011789	0					
ANR	3011952	IfStatement	if ( closure == DCMsg :: MESSAGE_CONTINUING )		3011789	1					
ANR	3011953	Condition	closure == DCMsg :: MESSAGE_CONTINUING	543:6:12278:12313	3011789	0	True				
ANR	3011954	EqualityExpression	closure == DCMsg :: MESSAGE_CONTINUING		3011789	0		==			
ANR	3011955	Identifier	closure		3011789	0					
ANR	3011956	Identifier	DCMsg :: MESSAGE_CONTINUING		3011789	1					
ANR	3011957	CompoundStatement		31:45:695:695	3011789	1					
ANR	3011958	ExpressionStatement	done_with_sock = false	544:3:12322:12344	3011789	0	True				
ANR	3011959	AssignmentExpression	done_with_sock = false		3011789	0		=			
ANR	3011960	Identifier	done_with_sock		3011789	0					
ANR	3011961	Identifier	false		3011789	1					
ANR	3011962	IfStatement	if ( done_with_sock )		3011789	8					
ANR	3011963	Condition	done_with_sock	548:5:12359:12372	3011789	0	True				
ANR	3011964	Identifier	done_with_sock		3011789	0					
ANR	3011965	CompoundStatement		36:22:754:754	3011789	1					
ANR	3011966	ExpressionStatement	doneWithSock ( sock )	549:2:12380:12400	3011789	0	True				
ANR	3011967	CallExpression	doneWithSock ( sock )		3011789	0					
ANR	3011968	Callee	doneWithSock		3011789	0					
ANR	3011969	Identifier	doneWithSock		3011789	0					
ANR	3011970	ArgumentList	sock		3011789	1					
ANR	3011971	Argument	sock		3011789	0					
ANR	3011972	Identifier	sock		3011789	0					
ANR	3011973	ExpressionStatement	decRefCount ( )	552:1:12407:12420	3011789	9	True				
ANR	3011974	CallExpression	decRefCount ( )		3011789	0					
ANR	3011975	Callee	decRefCount		3011789	0					
ANR	3011976	Identifier	decRefCount		3011789	0					
ANR	3011977	ArgumentList			3011789	1					
ANR	3011978	ReturnType	void		3011789	1					
ANR	3011979	Identifier	DCMessenger :: readMsg		3011789	2					
ANR	3011980	ParameterList	"classy_counted_ptr < DCMsg > msg , Sock * sock"		3011789	3					
ANR	3011981	Parameter	classy_counted_ptr < DCMsg > msg	512:22:11577:11605	3011789	0	True				
ANR	3011982	ParameterType	classy_counted_ptr < DCMsg >		3011789	0					
ANR	3011983	Identifier	msg		3011789	1					
ANR	3011984	Parameter	Sock * sock	512:53:11608:11617	3011789	1	True				
ANR	3011985	ParameterType	Sock *		3011789	0					
ANR	3011986	Identifier	sock		3011789	1					
ANR	3011987	CFGEntryNode	ENTRY		3011789		True				
ANR	3011988	CFGExitNode	EXIT		3011789		True				
ANR	3011989	Symbol	msg		3011789						
ANR	3011990	Symbol	sock -> deadline_expired		3011789						
ANR	3011991	Symbol	DCMsg :: DELIVERY_CANCELED		3011789						
ANR	3011992	Symbol	msg -> deliveryStatus		3011789						
ANR	3011993	Symbol	sock -> end_of_message		3011789						
ANR	3011994	Symbol	this		3011789						
ANR	3011995	Symbol	false		3011789						
ANR	3011996	Symbol	done_with_sock		3011789						
ANR	3011997	Symbol	* msg		3011789						
ANR	3011998	Symbol	msg -> callMessageReceived		3011789						
ANR	3011999	Symbol	CEDAR_ERR_EOM_FAILED		3011789						
ANR	3012000	Symbol	sock		3011789						
ANR	3012001	Symbol	DCMsg :: MESSAGE_CONTINUING		3011789						
ANR	3012002	Symbol	true		3011789						
ANR	3012003	Symbol	msg . get		3011789						
ANR	3012004	Symbol	msg -> readMsg		3011789						
ANR	3012005	Symbol	closure		3011789						
ANR	3012006	Symbol	* sock		3011789						
ANR	3012007	Function	DCMessenger :: cancelMessage	555:0:12425:13152							
ANR	3012008	FunctionDef	DCMessenger :: cancelMessage (classy_counted_ptr < DCMsg > msg)		3012007	0					
ANR	3012009	CompoundStatement		557:0:12490:13152	3012007	0					
ANR	3012010	IfStatement	if ( msg . get ( ) != m_callback_msg . get ( ) )		3012007	0					
ANR	3012011	Condition	msg . get ( ) != m_callback_msg . get ( )	558:5:12497:12529	3012007	0	True				
ANR	3012012	EqualityExpression	msg . get ( ) != m_callback_msg . get ( )		3012007	0		!=			
ANR	3012013	CallExpression	msg . get ( )		3012007	0					
ANR	3012014	Callee	msg . get		3012007	0					
ANR	3012015	MemberAccess	msg . get		3012007	0					
ANR	3012016	Identifier	msg		3012007	0					
ANR	3012017	Identifier	get		3012007	1					
ANR	3012018	ArgumentList			3012007	1					
ANR	3012019	CallExpression	m_callback_msg . get ( )		3012007	1					
ANR	3012020	Callee	m_callback_msg . get		3012007	0					
ANR	3012021	MemberAccess	m_callback_msg . get		3012007	0					
ANR	3012022	Identifier	m_callback_msg		3012007	0					
ANR	3012023	Identifier	get		3012007	1					
ANR	3012024	ArgumentList			3012007	1					
ANR	3012025	CompoundStatement		2:41:42:42	3012007	1					
ANR	3012026	ReturnStatement	return ;	559:2:12537:12543	3012007	0	True				
ANR	3012027	IfStatement	if ( m_pending_operation == NOTHING_PENDING )		3012007	1					
ANR	3012028	Condition	m_pending_operation == NOTHING_PENDING	562:5:12554:12591	3012007	0	True				
ANR	3012029	EqualityExpression	m_pending_operation == NOTHING_PENDING		3012007	0		==			
ANR	3012030	Identifier	m_pending_operation		3012007	0					
ANR	3012031	Identifier	NOTHING_PENDING		3012007	1					
ANR	3012032	CompoundStatement		6:46:104:104	3012007	1					
ANR	3012033	ReturnStatement	return ;	563:2:12599:12605	3012007	0	True				
ANR	3012034	IfStatement	if ( m_callback_sock -> is_reverse_connect_pending ( ) )		3012007	2					
ANR	3012035	Condition	m_callback_sock -> is_reverse_connect_pending ( )	566:5:12616:12660	3012007	0	True				
ANR	3012036	CallExpression	m_callback_sock -> is_reverse_connect_pending ( )		3012007	0					
ANR	3012037	Callee	m_callback_sock -> is_reverse_connect_pending		3012007	0					
ANR	3012038	PtrMemberAccess	m_callback_sock -> is_reverse_connect_pending		3012007	0					
ANR	3012039	Identifier	m_callback_sock		3012007	0					
ANR	3012040	Identifier	is_reverse_connect_pending		3012007	1					
ANR	3012041	ArgumentList			3012007	1					
ANR	3012042	CompoundStatement		10:53:173:173	3012007	1					
ANR	3012043	ExpressionStatement	m_callback_sock -> close ( )	571:2:12883:12907	3012007	0	True				
ANR	3012044	CallExpression	m_callback_sock -> close ( )		3012007	0					
ANR	3012045	Callee	m_callback_sock -> close		3012007	0					
ANR	3012046	PtrMemberAccess	m_callback_sock -> close		3012007	0					
ANR	3012047	Identifier	m_callback_sock		3012007	0					
ANR	3012048	Identifier	close		3012007	1					
ANR	3012049	ArgumentList			3012007	1					
ANR	3012050	ElseStatement	else		3012007	0					
ANR	3012051	IfStatement	if ( m_callback_sock && m_callback_sock -> get_file_desc ( ) != INVALID_SOCKET )		3012007	0					
ANR	3012052	Condition	m_callback_sock && m_callback_sock -> get_file_desc ( ) != INVALID_SOCKET	573:10:12922:12990	3012007	0	True				
ANR	3012053	AndExpression	m_callback_sock && m_callback_sock -> get_file_desc ( ) != INVALID_SOCKET		3012007	0		&&			
ANR	3012054	Identifier	m_callback_sock		3012007	0					
ANR	3012055	EqualityExpression	m_callback_sock -> get_file_desc ( ) != INVALID_SOCKET		3012007	1		!=			
ANR	3012056	CallExpression	m_callback_sock -> get_file_desc ( )		3012007	0					
ANR	3012057	Callee	m_callback_sock -> get_file_desc		3012007	0					
ANR	3012058	PtrMemberAccess	m_callback_sock -> get_file_desc		3012007	0					
ANR	3012059	Identifier	m_callback_sock		3012007	0					
ANR	3012060	Identifier	get_file_desc		3012007	1					
ANR	3012061	ArgumentList			3012007	1					
ANR	3012062	Identifier	INVALID_SOCKET		3012007	1					
ANR	3012063	CompoundStatement		17:81:502:502	3012007	1					
ANR	3012064	ExpressionStatement	m_callback_sock -> close ( )	574:2:12997:13021	3012007	0	True				
ANR	3012065	CallExpression	m_callback_sock -> close ( )		3012007	0					
ANR	3012066	Callee	m_callback_sock -> close		3012007	0					
ANR	3012067	PtrMemberAccess	m_callback_sock -> close		3012007	0					
ANR	3012068	Identifier	m_callback_sock		3012007	0					
ANR	3012069	Identifier	close		3012007	1					
ANR	3012070	ArgumentList			3012007	1					
ANR	3012071	ExpressionStatement	daemonCoreSockAdapter . CallSocketHandler ( m_callback_sock )	576:2:13089:13147	3012007	1	True				
ANR	3012072	CallExpression	daemonCoreSockAdapter . CallSocketHandler ( m_callback_sock )		3012007	0					
ANR	3012073	Callee	daemonCoreSockAdapter . CallSocketHandler		3012007	0					
ANR	3012074	MemberAccess	daemonCoreSockAdapter . CallSocketHandler		3012007	0					
ANR	3012075	Identifier	daemonCoreSockAdapter		3012007	0					
ANR	3012076	Identifier	CallSocketHandler		3012007	1					
ANR	3012077	ArgumentList	m_callback_sock		3012007	1					
ANR	3012078	Argument	m_callback_sock		3012007	0					
ANR	3012079	Identifier	m_callback_sock		3012007	0					
ANR	3012080	ReturnType	void		3012007	1					
ANR	3012081	Identifier	DCMessenger :: cancelMessage		3012007	2					
ANR	3012082	ParameterList	classy_counted_ptr < DCMsg > msg		3012007	3					
ANR	3012083	Parameter	classy_counted_ptr < DCMsg > msg	556:28:12458:12486	3012007	0	True				
ANR	3012084	ParameterType	classy_counted_ptr < DCMsg >		3012007	0					
ANR	3012085	Identifier	msg		3012007	1					
ANR	3012086	CFGEntryNode	ENTRY		3012007		True				
ANR	3012087	CFGExitNode	EXIT		3012007		True				
ANR	3012088	Symbol	msg		3012007						
ANR	3012089	Symbol	m_callback_sock -> get_file_desc		3012007						
ANR	3012090	Symbol	daemonCoreSockAdapter		3012007						
ANR	3012091	Symbol	m_pending_operation		3012007						
ANR	3012092	Symbol	m_callback_msg . get		3012007						
ANR	3012093	Symbol	m_callback_sock -> is_reverse_connect_pending		3012007						
ANR	3012094	Symbol	m_callback_msg		3012007						
ANR	3012095	Symbol	msg . get		3012007						
ANR	3012096	Symbol	NOTHING_PENDING		3012007						
ANR	3012097	Symbol	m_callback_sock		3012007						
ANR	3012098	Symbol	* m_callback_sock		3012007						
ANR	3012099	Symbol	INVALID_SOCKET		3012007						
ANR	3012100	ClassDef	QueuedCommand	581:0:13156:13230							
ANR	3012101	DeclStmt									
ANR	3012102	Decl							classy_counted_ptr < DCMsg >	classy_counted_ptr < DCMsg >	msg
ANR	3012103	DeclStmt									
ANR	3012104	Decl							int	int	timer_handle
ANR	3012105	Function	DCMessenger :: startCommandAfterDelay	586:0:13234:13664							
ANR	3012106	FunctionDef	"DCMessenger :: startCommandAfterDelay (unsigned int delay , classy_counted_ptr < DCMsg > msg)"		3012105	0					
ANR	3012107	CompoundStatement		588:0:13328:13664	3012105	0					
ANR	3012108	Statement	QueuedCommand	589:1:13331:13343	3012105	0	True				
ANR	3012109	Statement	*	589:15:13345:13345	3012105	1	True				
ANR	3012110	Statement	qc	589:16:13346:13347	3012105	2	True				
ANR	3012111	Statement	=	589:19:13349:13349	3012105	3	True				
ANR	3012112	Statement	new	589:21:13351:13353	3012105	4	True				
ANR	3012113	ExpressionStatement	QueuedCommand	589:25:13355:13368	3012105	5	True				
ANR	3012114	Identifier	QueuedCommand		3012105	0					
ANR	3012115	ExpressionStatement	qc -> msg = msg	590:1:13371:13384	3012105	6	True				
ANR	3012116	AssignmentExpression	qc -> msg = msg		3012105	0		=			
ANR	3012117	PtrMemberAccess	qc -> msg		3012105	0					
ANR	3012118	Identifier	qc		3012105	0					
ANR	3012119	Identifier	msg		3012105	1					
ANR	3012120	Identifier	msg		3012105	1					
ANR	3012121	ExpressionStatement	incRefCount ( )	592:1:13388:13401	3012105	7	True				
ANR	3012122	CallExpression	incRefCount ( )		3012105	0					
ANR	3012123	Callee	incRefCount		3012105	0					
ANR	3012124	Identifier	incRefCount		3012105	0					
ANR	3012125	ArgumentList			3012105	1					
ANR	3012126	ExpressionStatement	"qc -> timer_handle = daemonCoreSockAdapter . Register_Timer ( delay , ( TimerHandlercpp ) & DCMessenger :: startCommandAfterDelay_alarm , ""DCMessenger::startCommandAfterDelay"" , this )"	593:1:13404:13582	3012105	8	True				
ANR	3012127	AssignmentExpression	"qc -> timer_handle = daemonCoreSockAdapter . Register_Timer ( delay , ( TimerHandlercpp ) & DCMessenger :: startCommandAfterDelay_alarm , ""DCMessenger::startCommandAfterDelay"" , this )"		3012105	0		=			
ANR	3012128	PtrMemberAccess	qc -> timer_handle		3012105	0					
ANR	3012129	Identifier	qc		3012105	0					
ANR	3012130	Identifier	timer_handle		3012105	1					
ANR	3012131	CallExpression	"daemonCoreSockAdapter . Register_Timer ( delay , ( TimerHandlercpp ) & DCMessenger :: startCommandAfterDelay_alarm , ""DCMessenger::startCommandAfterDelay"" , this )"		3012105	1					
ANR	3012132	Callee	daemonCoreSockAdapter . Register_Timer		3012105	0					
ANR	3012133	MemberAccess	daemonCoreSockAdapter . Register_Timer		3012105	0					
ANR	3012134	Identifier	daemonCoreSockAdapter		3012105	0					
ANR	3012135	Identifier	Register_Timer		3012105	1					
ANR	3012136	ArgumentList	delay		3012105	1					
ANR	3012137	Argument	delay		3012105	0					
ANR	3012138	Identifier	delay		3012105	0					
ANR	3012139	Argument	( TimerHandlercpp ) & DCMessenger :: startCommandAfterDelay_alarm		3012105	1					
ANR	3012140	CastExpression	( TimerHandlercpp ) & DCMessenger :: startCommandAfterDelay_alarm		3012105	0					
ANR	3012141	CastTarget	TimerHandlercpp		3012105	0					
ANR	3012142	UnaryOperationExpression	& DCMessenger :: startCommandAfterDelay_alarm		3012105	1					
ANR	3012143	UnaryOperator	&		3012105	0					
ANR	3012144	Identifier	DCMessenger :: startCommandAfterDelay_alarm		3012105	1					
ANR	3012145	Argument	"""DCMessenger::startCommandAfterDelay"""		3012105	2					
ANR	3012146	PrimaryExpression	"""DCMessenger::startCommandAfterDelay"""		3012105	0					
ANR	3012147	Argument	this		3012105	3					
ANR	3012148	Identifier	this		3012105	0					
ANR	3012149	ExpressionStatement	ASSERT ( qc -> timer_handle != - 1 )	598:1:13585:13615	3012105	9	True				
ANR	3012150	CallExpression	ASSERT ( qc -> timer_handle != - 1 )		3012105	0					
ANR	3012151	Callee	ASSERT		3012105	0					
ANR	3012152	Identifier	ASSERT		3012105	0					
ANR	3012153	ArgumentList	qc -> timer_handle != - 1		3012105	1					
ANR	3012154	Argument	qc -> timer_handle != - 1		3012105	0					
ANR	3012155	EqualityExpression	qc -> timer_handle != - 1		3012105	0		!=			
ANR	3012156	PtrMemberAccess	qc -> timer_handle		3012105	0					
ANR	3012157	Identifier	qc		3012105	0					
ANR	3012158	Identifier	timer_handle		3012105	1					
ANR	3012159	UnaryOperationExpression	- 1		3012105	1					
ANR	3012160	UnaryOperator	-		3012105	0					
ANR	3012161	PrimaryExpression	1		3012105	1					
ANR	3012162	ExpressionStatement	daemonCoreSockAdapter . Register_DataPtr ( qc )	599:1:13618:13662	3012105	10	True				
ANR	3012163	CallExpression	daemonCoreSockAdapter . Register_DataPtr ( qc )		3012105	0					
ANR	3012164	Callee	daemonCoreSockAdapter . Register_DataPtr		3012105	0					
ANR	3012165	MemberAccess	daemonCoreSockAdapter . Register_DataPtr		3012105	0					
ANR	3012166	Identifier	daemonCoreSockAdapter		3012105	0					
ANR	3012167	Identifier	Register_DataPtr		3012105	1					
ANR	3012168	ArgumentList	qc		3012105	1					
ANR	3012169	Argument	qc		3012105	0					
ANR	3012170	Identifier	qc		3012105	0					
ANR	3012171	ReturnType	void		3012105	1					
ANR	3012172	Identifier	DCMessenger :: startCommandAfterDelay		3012105	2					
ANR	3012173	ParameterList	"unsigned int delay , classy_counted_ptr < DCMsg > msg"		3012105	3					
ANR	3012174	Parameter	unsigned int delay	587:37:13276:13293	3012105	0	True				
ANR	3012175	ParameterType	unsigned int		3012105	0					
ANR	3012176	Identifier	delay		3012105	1					
ANR	3012177	Parameter	classy_counted_ptr < DCMsg > msg	587:57:13296:13324	3012105	1	True				
ANR	3012178	ParameterType	classy_counted_ptr < DCMsg >		3012105	0					
ANR	3012179	Identifier	msg		3012105	1					
ANR	3012180	CFGEntryNode	ENTRY		3012105		True				
ANR	3012181	CFGExitNode	EXIT		3012105		True				
ANR	3012182	Symbol	msg		3012105						
ANR	3012183	Symbol	qc		3012105						
ANR	3012184	Symbol	daemonCoreSockAdapter		3012105						
ANR	3012185	Symbol	delay		3012105						
ANR	3012186	Symbol	& DCMessenger :: startCommandAfterDelay_alarm		3012105						
ANR	3012187	Symbol	qc -> msg		3012105						
ANR	3012188	Symbol	qc -> timer_handle		3012105						
ANR	3012189	Symbol	this		3012105						
ANR	3012190	Symbol	* qc		3012105						
ANR	3012191	Symbol	daemonCoreSockAdapter . Register_Timer		3012105						
ANR	3012192	Function	DCMessenger :: startCommandAfterDelay_alarm	602:0:13667:13859							
ANR	3012193	FunctionDef	DCMessenger :: startCommandAfterDelay_alarm ()		3012192	0					
ANR	3012194	CompoundStatement		603:0:13716:13859	3012192	0					
ANR	3012195	IdentifierDeclStatement	QueuedCommand * qc = ( QueuedCommand * ) daemonCoreSockAdapter . GetDataPtr ( ) ;	604:1:13719:13790	3012192	0	True				
ANR	3012196	IdentifierDecl	* qc = ( QueuedCommand * ) daemonCoreSockAdapter . GetDataPtr ( )		3012192	0					
ANR	3012197	IdentifierDeclType	QueuedCommand *		3012192	0					
ANR	3012198	Identifier	qc		3012192	1					
ANR	3012199	AssignmentExpression	* qc = ( QueuedCommand * ) daemonCoreSockAdapter . GetDataPtr ( )		3012192	2		=			
ANR	3012200	Identifier	qc		3012192	0					
ANR	3012201	CastExpression	( QueuedCommand * ) daemonCoreSockAdapter . GetDataPtr ( )		3012192	1					
ANR	3012202	CastTarget	QueuedCommand *		3012192	0					
ANR	3012203	CallExpression	daemonCoreSockAdapter . GetDataPtr ( )		3012192	1					
ANR	3012204	Callee	daemonCoreSockAdapter . GetDataPtr		3012192	0					
ANR	3012205	MemberAccess	daemonCoreSockAdapter . GetDataPtr		3012192	0					
ANR	3012206	Identifier	daemonCoreSockAdapter		3012192	0					
ANR	3012207	Identifier	GetDataPtr		3012192	1					
ANR	3012208	ArgumentList			3012192	1					
ANR	3012209	ExpressionStatement	ASSERT ( qc )	605:1:13793:13803	3012192	1	True				
ANR	3012210	CallExpression	ASSERT ( qc )		3012192	0					
ANR	3012211	Callee	ASSERT		3012192	0					
ANR	3012212	Identifier	ASSERT		3012192	0					
ANR	3012213	ArgumentList	qc		3012192	1					
ANR	3012214	Argument	qc		3012192	0					
ANR	3012215	Identifier	qc		3012192	0					
ANR	3012216	ExpressionStatement	startCommand ( qc -> msg )	607:1:13807:13828	3012192	2	True				
ANR	3012217	CallExpression	startCommand ( qc -> msg )		3012192	0					
ANR	3012218	Callee	startCommand		3012192	0					
ANR	3012219	Identifier	startCommand		3012192	0					
ANR	3012220	ArgumentList	qc -> msg		3012192	1					
ANR	3012221	Argument	qc -> msg		3012192	0					
ANR	3012222	PtrMemberAccess	qc -> msg		3012192	0					
ANR	3012223	Identifier	qc		3012192	0					
ANR	3012224	Identifier	msg		3012192	1					
ANR	3012225	Statement	delete	609:1:13832:13837	3012192	3	True				
ANR	3012226	ExpressionStatement	qc	609:8:13839:13841	3012192	4	True				
ANR	3012227	Identifier	qc		3012192	0					
ANR	3012228	ExpressionStatement	decRefCount ( )	610:1:13844:13857	3012192	5	True				
ANR	3012229	CallExpression	decRefCount ( )		3012192	0					
ANR	3012230	Callee	decRefCount		3012192	0					
ANR	3012231	Identifier	decRefCount		3012192	0					
ANR	3012232	ArgumentList			3012192	1					
ANR	3012233	ReturnType	void		3012192	1					
ANR	3012234	Identifier	DCMessenger :: startCommandAfterDelay_alarm		3012192	2					
ANR	3012235	ParameterList			3012192	3					
ANR	3012236	CFGEntryNode	ENTRY		3012192		True				
ANR	3012237	CFGExitNode	EXIT		3012192		True				
ANR	3012238	Symbol	qc		3012192						
ANR	3012239	Symbol	daemonCoreSockAdapter		3012192						
ANR	3012240	Symbol	daemonCoreSockAdapter . GetDataPtr		3012192						
ANR	3012241	Symbol	qc -> msg		3012192						
ANR	3012242	Symbol	* qc		3012192						
ANR	3012243	Function	DCCommandOnlyMsg :: DCCommandOnlyMsg	613:0:13862:13924							
ANR	3012244	FunctionDef	DCCommandOnlyMsg :: DCCommandOnlyMsg (int cmd)		3012243	0					
ANR	3012245	CompoundStatement		614:0:13922:13924	3012243	0					
ANR	3012246	Identifier	DCCommandOnlyMsg :: DCCommandOnlyMsg		3012243	1					
ANR	3012247	ParameterList	int cmd		3012243	2					
ANR	3012248	Parameter	int cmd	613:36:13898:13904	3012243	0	True				
ANR	3012249	ParameterType	int		3012243	0					
ANR	3012250	Identifier	cmd		3012243	1					
ANR	3012251	CFGEntryNode	ENTRY		3012243		True				
ANR	3012252	CFGExitNode	EXIT		3012243		True				
ANR	3012253	Symbol	cmd		3012243						
ANR	3012254	Function	DCStringMsg :: DCStringMsg	627:0:14078:14162							
ANR	3012255	FunctionDef	"DCStringMsg :: DCStringMsg (int cmd , char const * str)"		3012254	0					
ANR	3012256	CompoundStatement		629:0:14146:14162	3012254	0					
ANR	3012257	ExpressionStatement	m_str = str	630:1:14149:14160	3012254	0	True				
ANR	3012258	AssignmentExpression	m_str = str		3012254	0		=			
ANR	3012259	Identifier	m_str		3012254	0					
ANR	3012260	Identifier	str		3012254	1					
ANR	3012261	Identifier	DCStringMsg :: DCStringMsg		3012254	1					
ANR	3012262	ParameterList	"int cmd , char const * str"		3012254	2					
ANR	3012263	Parameter	int cmd	627:26:14104:14110	3012254	0	True				
ANR	3012264	ParameterType	int		3012254	0					
ANR	3012265	Identifier	cmd		3012254	1					
ANR	3012266	Parameter	char const * str	627:35:14113:14127	3012254	1	True				
ANR	3012267	ParameterType	char const *		3012254	0					
ANR	3012268	Identifier	str		3012254	1					
ANR	3012269	CFGEntryNode	ENTRY		3012254		True				
ANR	3012270	CFGExitNode	EXIT		3012254		True				
ANR	3012271	Symbol	str		3012254						
ANR	3012272	Symbol	m_str		3012254						
ANR	3012273	Symbol	cmd		3012254						
ANR	3012274	DeclStmt									
ANR	3012275	Decl							char	char *	str
ANR	3012276	Function	DCMsgCallback :: doCallback	655:0:14505:14593							
ANR	3012277	FunctionDef	DCMsgCallback :: doCallback ()		3012276	0					
ANR	3012278	CompoundStatement		657:0:14538:14593	3012276	0					
ANR	3012279	IfStatement	if ( m_fn_cpp )		3012276	0					
ANR	3012280	Condition	m_fn_cpp	658:5:14545:14552	3012276	0	True				
ANR	3012281	Identifier	m_fn_cpp		3012276	0					
ANR	3012282	CompoundStatement		2:16:17:17	3012276	1					
ANR	3012283	Statement	(	659:2:14560:14560	3012276	0	True				
ANR	3012284	Statement	m_service	659:3:14561:14569	3012276	1	True				
ANR	3012285	Statement	->*	659:12:14570:14572	3012276	2	True				
ANR	3012286	Statement	m_fn_cpp	659:15:14573:14580	3012276	3	True				
ANR	3012287	Statement	)	659:23:14581:14581	3012276	4	True				
ANR	3012288	ExpressionStatement	this	659:24:14582:14588	3012276	5	True				
ANR	3012289	Identifier	this		3012276	0					
ANR	3012290	ReturnType	void		3012276	1					
ANR	3012291	Identifier	DCMsgCallback :: doCallback		3012276	2					
ANR	3012292	ParameterList			3012276	3					
ANR	3012293	CFGEntryNode	ENTRY		3012276		True				
ANR	3012294	CFGExitNode	EXIT		3012276		True				
ANR	3012295	Symbol	m_fn_cpp		3012276						
ANR	3012296	Function	DCMsgCallback :: DCMsgCallback	663:0:14596:14740							
ANR	3012297	FunctionDef	"DCMsgCallback :: DCMsgCallback (CppFunction fn , Service * service , void * misc_data)"		3012296	0					
ANR	3012298	CompoundStatement		664:0:14674:14740	3012296	0					
ANR	3012299	ExpressionStatement	m_fn_cpp = fn	665:1:14677:14690	3012296	0	True				
ANR	3012300	AssignmentExpression	m_fn_cpp = fn		3012296	0		=			
ANR	3012301	Identifier	m_fn_cpp		3012296	0					
ANR	3012302	Identifier	fn		3012296	1					
ANR	3012303	ExpressionStatement	m_service = service	666:1:14693:14712	3012296	1	True				
ANR	3012304	AssignmentExpression	m_service = service		3012296	0		=			
ANR	3012305	Identifier	m_service		3012296	0					
ANR	3012306	Identifier	service		3012296	1					
ANR	3012307	ExpressionStatement	m_misc_data = misc_data	667:1:14715:14738	3012296	2	True				
ANR	3012308	AssignmentExpression	m_misc_data = misc_data		3012296	0		=			
ANR	3012309	Identifier	m_misc_data		3012296	0					
ANR	3012310	Identifier	misc_data		3012296	1					
ANR	3012311	Identifier	DCMsgCallback :: DCMsgCallback		3012296	1					
ANR	3012312	ParameterList	"CppFunction fn , Service * service , void * misc_data"		3012296	2					
ANR	3012313	Parameter	CppFunction fn	663:29:14625:14638	3012296	0	True				
ANR	3012314	ParameterType	CppFunction		3012296	0					
ANR	3012315	Identifier	fn		3012296	1					
ANR	3012316	Parameter	Service * service	663:44:14640:14655	3012296	1	True				
ANR	3012317	ParameterType	Service *		3012296	0					
ANR	3012318	Identifier	service		3012296	1					
ANR	3012319	Parameter	void * misc_data	663:61:14657:14671	3012296	2	True				
ANR	3012320	ParameterType	void *		3012296	0					
ANR	3012321	Identifier	misc_data		3012296	1					
ANR	3012322	CFGEntryNode	ENTRY		3012296		True				
ANR	3012323	CFGExitNode	EXIT		3012296		True				
ANR	3012324	Symbol	m_service		3012296						
ANR	3012325	Symbol	service		3012296						
ANR	3012326	Symbol	m_fn_cpp		3012296						
ANR	3012327	Symbol	fn		3012296						
ANR	3012328	Symbol	misc_data		3012296						
ANR	3012329	Symbol	m_misc_data		3012296						
ANR	3012330	Function	DCMsgCallback :: cancelMessage	670:0:14743:14895							
ANR	3012331	FunctionDef	DCMsgCallback :: cancelMessage (bool quiet)		3012330	0					
ANR	3012332	CompoundStatement		672:0:14789:14895	3012330	0					
ANR	3012333	IfStatement	if ( m_msg . get ( ) )		3012330	0					
ANR	3012334	Condition	m_msg . get ( )	673:5:14796:14806	3012330	0	True				
ANR	3012335	CallExpression	m_msg . get ( )		3012330	0					
ANR	3012336	Callee	m_msg . get		3012330	0					
ANR	3012337	MemberAccess	m_msg . get		3012330	0					
ANR	3012338	Identifier	m_msg		3012330	0					
ANR	3012339	Identifier	get		3012330	1					
ANR	3012340	ArgumentList			3012330	1					
ANR	3012341	CompoundStatement		2:19:20:20	3012330	1					
ANR	3012342	IfStatement	if ( quiet )		3012330	0					
ANR	3012343	Condition	quiet	674:6:14818:14822	3012330	0	True				
ANR	3012344	Identifier	quiet		3012330	0					
ANR	3012345	CompoundStatement		3:14:36:36	3012330	1					
ANR	3012346	ExpressionStatement	m_msg -> setCancelDebugLevel ( 0 )	675:3:14831:14860	3012330	0	True				
ANR	3012347	CallExpression	m_msg -> setCancelDebugLevel ( 0 )		3012330	0					
ANR	3012348	Callee	m_msg -> setCancelDebugLevel		3012330	0					
ANR	3012349	PtrMemberAccess	m_msg -> setCancelDebugLevel		3012330	0					
ANR	3012350	Identifier	m_msg		3012330	0					
ANR	3012351	Identifier	setCancelDebugLevel		3012330	1					
ANR	3012352	ArgumentList	0		3012330	1					
ANR	3012353	Argument	0		3012330	0					
ANR	3012354	PrimaryExpression	0		3012330	0					
ANR	3012355	ExpressionStatement	m_msg -> cancelMessage ( )	677:2:14868:14890	3012330	1	True				
ANR	3012356	CallExpression	m_msg -> cancelMessage ( )		3012330	0					
ANR	3012357	Callee	m_msg -> cancelMessage		3012330	0					
ANR	3012358	PtrMemberAccess	m_msg -> cancelMessage		3012330	0					
ANR	3012359	Identifier	m_msg		3012330	0					
ANR	3012360	Identifier	cancelMessage		3012330	1					
ANR	3012361	ArgumentList			3012330	1					
ANR	3012362	ReturnType	void		3012330	1					
ANR	3012363	Identifier	DCMsgCallback :: cancelMessage		3012330	2					
ANR	3012364	ParameterList	bool quiet		3012330	3					
ANR	3012365	Parameter	bool quiet	671:29:14777:14786	3012330	0	True				
ANR	3012366	ParameterType	bool		3012330	0					
ANR	3012367	Identifier	quiet		3012330	1					
ANR	3012368	CFGEntryNode	ENTRY		3012330		True				
ANR	3012369	CFGExitNode	EXIT		3012330		True				
ANR	3012370	Symbol	m_msg		3012330						
ANR	3012371	Symbol	m_msg . get		3012330						
ANR	3012372	Symbol	quiet		3012330						
ANR	3012373	Function	DCMsgCallback :: cancelCallback	681:0:14898:14995							
ANR	3012374	FunctionDef	DCMsgCallback :: cancelCallback ()		3012373	0					
ANR	3012375	CompoundStatement		683:0:14935:14995	3012373	0					
ANR	3012376	ExpressionStatement	m_fn_cpp = NULL	684:1:14938:14953	3012373	0	True				
ANR	3012377	AssignmentExpression	m_fn_cpp = NULL		3012373	0		=			
ANR	3012378	Identifier	m_fn_cpp		3012373	0					
ANR	3012379	Identifier	NULL		3012373	1					
ANR	3012380	ExpressionStatement	m_service = NULL	685:1:14956:14972	3012373	1	True				
ANR	3012381	AssignmentExpression	m_service = NULL		3012373	0		=			
ANR	3012382	Identifier	m_service		3012373	0					
ANR	3012383	Identifier	NULL		3012373	1					
ANR	3012384	ExpressionStatement	m_misc_data = NULL	686:1:14975:14993	3012373	2	True				
ANR	3012385	AssignmentExpression	m_misc_data = NULL		3012373	0		=			
ANR	3012386	Identifier	m_misc_data		3012373	0					
ANR	3012387	Identifier	NULL		3012373	1					
ANR	3012388	ReturnType	void		3012373	1					
ANR	3012389	Identifier	DCMsgCallback :: cancelCallback		3012373	2					
ANR	3012390	ParameterList			3012373	3					
ANR	3012391	CFGEntryNode	ENTRY		3012373		True				
ANR	3012392	CFGExitNode	EXIT		3012373		True				
ANR	3012393	Symbol	NULL		3012373						
ANR	3012394	Symbol	m_service		3012373						
ANR	3012395	Symbol	m_fn_cpp		3012373						
ANR	3012396	Symbol	m_misc_data		3012373						
ANR	3012397	Function	ClassAdMsg :: ClassAdMsg	689:0:14998:15071							
ANR	3012398	FunctionDef	"ClassAdMsg :: ClassAdMsg (int cmd , ClassAd & msg)"		3012397	0					
ANR	3012399	CompoundStatement		692:0:15069:15071	3012397	0					
ANR	3012400	Identifier	ClassAdMsg :: ClassAdMsg		3012397	1					
ANR	3012401	ParameterList	"int cmd , ClassAd & msg"		3012397	2					
ANR	3012402	Parameter	int cmd	689:23:15021:15027	3012397	0	True				
ANR	3012403	ParameterType	int		3012397	0					
ANR	3012404	Identifier	cmd		3012397	1					
ANR	3012405	Parameter	ClassAd & msg	689:31:15029:15040	3012397	1	True				
ANR	3012406	ParameterType	ClassAd &		3012397	0					
ANR	3012407	Identifier	msg		3012397	1					
ANR	3012408	CFGEntryNode	ENTRY		3012397		True				
ANR	3012409	CFGExitNode	EXIT		3012397		True				
ANR	3012410	Symbol	msg		3012397						
ANR	3012411	Symbol	cmd		3012397						
ANR	3012412	Function	ChildAliveMsg :: ChildAliveMsg	715:0:15400:15697							
ANR	3012413	FunctionDef	"ChildAliveMsg :: ChildAliveMsg (int mypid , int max_hang_time , int max_tries , double dprintf_lock_delay , bool blocking)"		3012412	0					
ANR	3012414	CompoundStatement		723:0:15695:15697	3012412	0					
ANR	3012415	Identifier	ChildAliveMsg :: ChildAliveMsg		3012412	1					
ANR	3012416	ParameterList	"int mypid , int max_hang_time , int max_tries , double dprintf_lock_delay , bool blocking"		3012412	2					
ANR	3012417	Parameter	int mypid	715:30:15430:15438	3012412	0	True				
ANR	3012418	ParameterType	int		3012412	0					
ANR	3012419	Identifier	mypid		3012412	1					
ANR	3012420	Parameter	int max_hang_time	715:41:15441:15457	3012412	1	True				
ANR	3012421	ParameterType	int		3012412	0					
ANR	3012422	Identifier	max_hang_time		3012412	1					
ANR	3012423	Parameter	int max_tries	715:60:15460:15472	3012412	2	True				
ANR	3012424	ParameterType	int		3012412	0					
ANR	3012425	Identifier	max_tries		3012412	1					
ANR	3012426	Parameter	double dprintf_lock_delay	715:75:15475:15499	3012412	3	True				
ANR	3012427	ParameterType	double		3012412	0					
ANR	3012428	Identifier	dprintf_lock_delay		3012412	1					
ANR	3012429	Parameter	bool blocking	715:102:15502:15514	3012412	4	True				
ANR	3012430	ParameterType	bool		3012412	0					
ANR	3012431	Identifier	blocking		3012412	1					
ANR	3012432	CFGEntryNode	ENTRY		3012412		True				
ANR	3012433	CFGExitNode	EXIT		3012412		True				
ANR	3012434	Symbol	max_hang_time		3012412						
ANR	3012435	Symbol	blocking		3012412						
ANR	3012436	Symbol	mypid		3012412						
ANR	3012437	Symbol	dprintf_lock_delay		3012412						
ANR	3012438	Symbol	max_tries		3012412						
ANR	3012439	Function	ChildAliveMsg :: messageSendFailed	749:0:16249:16837							
ANR	3012440	FunctionDef	ChildAliveMsg :: messageSendFailed (DCMessenger * messenger)		3012439	0					
ANR	3012441	CompoundStatement		751:0:16313:16837	3012439	0					
ANR	3012442	ExpressionStatement	m_tries ++	752:1:16316:16325	3012439	0	True				
ANR	3012443	PostIncDecOperationExpression	m_tries ++		3012439	0					
ANR	3012444	Identifier	m_tries		3012439	0					
ANR	3012445	IncDec	++		3012439	1					
ANR	3012446	Statement	dprintf	754:1:16329:16335	3012439	1	True				
ANR	3012447	Statement	(	754:8:16336:16336	3012439	2	True				
ANR	3012448	Statement	D_ALWAYS	754:9:16337:16344	3012439	3	True				
ANR	3012449	Statement	","	754:17:16345:16345	3012439	4	True				
ANR	3012450	Statement	"""ChildAliveMsg: failed to send DC_CHILDALIVE to parent %s """	755:3:16350:16408	3012439	5	True				
ANR	3012451	Statement	"""(try %d of %d): %s\\n"""	756:3:16413:16434	3012439	6	True				
ANR	3012452	Statement	","	756:25:16435:16435	3012439	7	True				
ANR	3012453	Statement	messenger	757:3:16440:16448	3012439	8	True				
ANR	3012454	Statement	->	757:12:16449:16450	3012439	9	True				
ANR	3012455	Statement	peerDescription	757:14:16451:16465	3012439	10	True				
ANR	3012456	Statement	(	757:29:16466:16466	3012439	11	True				
ANR	3012457	Statement	)	757:30:16467:16467	3012439	12	True				
ANR	3012458	Statement	","	757:31:16468:16468	3012439	13	True				
ANR	3012459	Statement	m_tries	758:3:16473:16479	3012439	14	True				
ANR	3012460	Statement	","	758:10:16480:16480	3012439	15	True				
ANR	3012461	Statement	m_max_tries	759:3:16485:16495	3012439	16	True				
ANR	3012462	Statement	","	759:14:16496:16496	3012439	17	True				
ANR	3012463	Statement	getErrorStackText	760:3:16501:16517	3012439	18	True				
ANR	3012464	Statement	(	760:20:16518:16518	3012439	19	True				
ANR	3012465	Statement	)	760:21:16519:16519	3012439	20	True				
ANR	3012466	Statement	)	760:22:16520:16520	3012439	21	True				
ANR	3012467	ExpressionStatement		760:23:16521:16521	3012439	22	True				
ANR	3012468	IfStatement	if ( m_tries < m_max_tries )		3012439	23					
ANR	3012469	Condition	m_tries < m_max_tries	762:5:16529:16549	3012439	0	True				
ANR	3012470	RelationalExpression	m_tries < m_max_tries		3012439	0		<			
ANR	3012471	Identifier	m_tries		3012439	0					
ANR	3012472	Identifier	m_max_tries		3012439	1					
ANR	3012473	CompoundStatement		12:29:239:239	3012439	1					
ANR	3012474	IfStatement	if ( getDeadlineExpired ( ) )		3012439	0					
ANR	3012475	Condition	getDeadlineExpired ( )	763:6:16561:16580	3012439	0	True				
ANR	3012476	CallExpression	getDeadlineExpired ( )		3012439	0					
ANR	3012477	Callee	getDeadlineExpired		3012439	0					
ANR	3012478	Identifier	getDeadlineExpired		3012439	0					
ANR	3012479	ArgumentList			3012439	1					
ANR	3012480	CompoundStatement		13:29:270:270	3012439	1					
ANR	3012481	ExpressionStatement	"dprintf ( D_ALWAYS , ""ChildAliveMsg: giving up because deadline expired for sending DC_CHILDALIVE to parent.\\n"" )"	764:3:16589:16697	3012439	0	True				
ANR	3012482	CallExpression	"dprintf ( D_ALWAYS , ""ChildAliveMsg: giving up because deadline expired for sending DC_CHILDALIVE to parent.\\n"" )"		3012439	0					
ANR	3012483	Callee	dprintf		3012439	0					
ANR	3012484	Identifier	dprintf		3012439	0					
ANR	3012485	ArgumentList	D_ALWAYS		3012439	1					
ANR	3012486	Argument	D_ALWAYS		3012439	0					
ANR	3012487	Identifier	D_ALWAYS		3012439	0					
ANR	3012488	Argument	"""ChildAliveMsg: giving up because deadline expired for sending DC_CHILDALIVE to parent.\\n"""		3012439	1					
ANR	3012489	PrimaryExpression	"""ChildAliveMsg: giving up because deadline expired for sending DC_CHILDALIVE to parent.\\n"""		3012439	0					
ANR	3012490	ElseStatement	else		3012439	0					
ANR	3012491	IfStatement	if ( m_blocking )		3012439	0					
ANR	3012492	Condition	m_blocking	766:11:16714:16723	3012439	0	True				
ANR	3012493	Identifier	m_blocking		3012439	0					
ANR	3012494	CompoundStatement		16:24:413:413	3012439	1					
ANR	3012495	ExpressionStatement	messenger -> sendBlockingMsg ( this )	767:3:16732:16766	3012439	0	True				
ANR	3012496	CallExpression	messenger -> sendBlockingMsg ( this )		3012439	0					
ANR	3012497	Callee	messenger -> sendBlockingMsg		3012439	0					
ANR	3012498	PtrMemberAccess	messenger -> sendBlockingMsg		3012439	0					
ANR	3012499	Identifier	messenger		3012439	0					
ANR	3012500	Identifier	sendBlockingMsg		3012439	1					
ANR	3012501	ArgumentList	this		3012439	1					
ANR	3012502	Argument	this		3012439	0					
ANR	3012503	Identifier	this		3012439	0					
ANR	3012504	ElseStatement	else		3012439	0					
ANR	3012505	CompoundStatement		19:7:465:465	3012439	0					
ANR	3012506	ExpressionStatement	"messenger -> startCommandAfterDelay ( 5 , this )"	770:3:16784:16828	3012439	0	True				
ANR	3012507	CallExpression	"messenger -> startCommandAfterDelay ( 5 , this )"		3012439	0					
ANR	3012508	Callee	messenger -> startCommandAfterDelay		3012439	0					
ANR	3012509	PtrMemberAccess	messenger -> startCommandAfterDelay		3012439	0					
ANR	3012510	Identifier	messenger		3012439	0					
ANR	3012511	Identifier	startCommandAfterDelay		3012439	1					
ANR	3012512	ArgumentList	5		3012439	1					
ANR	3012513	Argument	5		3012439	0					
ANR	3012514	PrimaryExpression	5		3012439	0					
ANR	3012515	Argument	this		3012439	1					
ANR	3012516	Identifier	this		3012439	0					
ANR	3012517	ReturnType	void		3012439	1					
ANR	3012518	Identifier	ChildAliveMsg :: messageSendFailed		3012439	2					
ANR	3012519	ParameterList	DCMessenger * messenger		3012439	3					
ANR	3012520	Parameter	DCMessenger * messenger	750:34:16288:16309	3012439	0	True				
ANR	3012521	ParameterType	DCMessenger *		3012439	0					
ANR	3012522	Identifier	messenger		3012439	1					
ANR	3012523	CFGEntryNode	ENTRY		3012439		True				
ANR	3012524	CFGExitNode	EXIT		3012439		True				
ANR	3012525	Symbol	messenger		3012439						
ANR	3012526	Symbol	D_ALWAYS		3012439						
ANR	3012527	Symbol	this		3012439						
ANR	3012528	Symbol	m_max_tries		3012439						
ANR	3012529	Symbol	m_blocking		3012439						
ANR	3012530	Symbol	m_tries		3012439						
ANR	3012531	Symbol	getDeadlineExpired		3012439						
