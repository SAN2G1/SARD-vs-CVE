command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5516622	File	data/converged/CVE-2011-4930_htcondor/user_proc.cpp								
ANR	5516623	DeclStmt									
ANR	5516624	Decl							extern CStarter	extern CStarter *	Starter
ANR	5516625	DeclStmt									
ANR	5516626	Decl							const char	const char *	JOB_WRAPPER_FAILURE_FILE
ANR	5516627	Function	UserProc :: ~UserProc	37:0:1177:1234							
ANR	5516628	FunctionDef	UserProc :: ~UserProc ()		5516627	0					
ANR	5516629	CompoundStatement		38:0:1199:1234	5516627	0					
ANR	5516630	IfStatement	if ( name )		5516627	0					
ANR	5516631	Condition	name	39:5:1206:1209	5516627	0	True				
ANR	5516632	Identifier	name		5516627	0					
ANR	5516633	CompoundStatement		2:12:13:13	5516627	1					
ANR	5516634	ExpressionStatement	free ( name )	40:2:1217:1229	5516627	0	True				
ANR	5516635	CallExpression	free ( name )		5516627	0					
ANR	5516636	Callee	free		5516627	0					
ANR	5516637	Identifier	free		5516627	0					
ANR	5516638	ArgumentList	name		5516627	1					
ANR	5516639	Argument	name		5516627	0					
ANR	5516640	Identifier	name		5516627	0					
ANR	5516641	Identifier	UserProc :: ~UserProc		5516627	1					
ANR	5516642	ParameterList			5516627	2					
ANR	5516643	CFGEntryNode	ENTRY		5516627		True				
ANR	5516644	CFGExitNode	EXIT		5516627		True				
ANR	5516645	Symbol	name		5516627						
ANR	5516646	Function	UserProc :: initialize	45:0:1238:1652							
ANR	5516647	FunctionDef	UserProc :: initialize ()		5516646	0					
ANR	5516648	CompoundStatement		47:0:1272:1652	5516646	0					
ANR	5516649	ExpressionStatement	JobPid = - 1	48:1:1275:1286	5516646	0	True				
ANR	5516650	AssignmentExpression	JobPid = - 1		5516646	0		=			
ANR	5516651	Identifier	JobPid		5516646	0					
ANR	5516652	UnaryOperationExpression	- 1		5516646	1					
ANR	5516653	UnaryOperator	-		5516646	0					
ANR	5516654	PrimaryExpression	1		5516646	1					
ANR	5516655	ExpressionStatement	exit_status = - 1	49:1:1289:1305	5516646	1	True				
ANR	5516656	AssignmentExpression	exit_status = - 1		5516646	0		=			
ANR	5516657	Identifier	exit_status		5516646	0					
ANR	5516658	UnaryOperationExpression	- 1		5516646	1					
ANR	5516659	UnaryOperator	-		5516646	0					
ANR	5516660	PrimaryExpression	1		5516646	1					
ANR	5516661	ExpressionStatement	requested_exit = false	50:1:1308:1330	5516646	2	True				
ANR	5516662	AssignmentExpression	requested_exit = false		5516646	0		=			
ANR	5516663	Identifier	requested_exit		5516646	0					
ANR	5516664	Identifier	false		5516646	1					
ANR	5516665	ExpressionStatement	m_proc_exited = false	51:1:1333:1354	5516646	3	True				
ANR	5516666	AssignmentExpression	m_proc_exited = false		5516646	0		=			
ANR	5516667	Identifier	m_proc_exited		5516646	0					
ANR	5516668	Identifier	false		5516646	1					
ANR	5516669	ExpressionStatement	job_universe = 0	52:1:1357:1373	5516646	4	True				
ANR	5516670	AssignmentExpression	job_universe = 0		5516646	0		=			
ANR	5516671	Identifier	job_universe		5516646	0					
ANR	5516672	PrimaryExpression	0		5516646	1					
ANR	5516673	IdentifierDeclStatement	int i ;	53:1:1420:1425	5516646	5	True				
ANR	5516674	IdentifierDecl	i		5516646	0					
ANR	5516675	IdentifierDeclType	int		5516646	0					
ANR	5516676	Identifier	i		5516646	1					
ANR	5516677	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		5516646	6					
ANR	5516678	ForInit	i = 0 ;	54:5:1432:1435	5516646	0	True				
ANR	5516679	AssignmentExpression	i = 0		5516646	0		=			
ANR	5516680	Identifier	i		5516646	0					
ANR	5516681	PrimaryExpression	0		5516646	1					
ANR	5516682	Condition	i < 3	54:9:1436:1438	5516646	1	True				
ANR	5516683	RelationalExpression	i < 3		5516646	0		<			
ANR	5516684	Identifier	i		5516646	0					
ANR	5516685	PrimaryExpression	3		5516646	1					
ANR	5516686	PostIncDecOperationExpression	i ++	54:13:1440:1442	5516646	2	True				
ANR	5516687	Identifier	i		5516646	0					
ANR	5516688	IncDec	++		5516646	1					
ANR	5516689	CompoundStatement		8:18:172:172	5516646	3					
ANR	5516690	ExpressionStatement	m_pre_defined_std_fds [ i ] = - 1	55:2:1449:1478	5516646	0	True				
ANR	5516691	AssignmentExpression	m_pre_defined_std_fds [ i ] = - 1		5516646	0		=			
ANR	5516692	ArrayIndexing	m_pre_defined_std_fds [ i ]		5516646	0					
ANR	5516693	Identifier	m_pre_defined_std_fds		5516646	0					
ANR	5516694	Identifier	i		5516646	1					
ANR	5516695	UnaryOperationExpression	- 1		5516646	1					
ANR	5516696	UnaryOperator	-		5516646	0					
ANR	5516697	PrimaryExpression	1		5516646	1					
ANR	5516698	ExpressionStatement	m_pre_defined_std_fnames [ i ] = NULL	56:2:1482:1516	5516646	1	True				
ANR	5516699	AssignmentExpression	m_pre_defined_std_fnames [ i ] = NULL		5516646	0		=			
ANR	5516700	ArrayIndexing	m_pre_defined_std_fnames [ i ]		5516646	0					
ANR	5516701	Identifier	m_pre_defined_std_fnames		5516646	0					
ANR	5516702	Identifier	i		5516646	1					
ANR	5516703	Identifier	NULL		5516646	1					
ANR	5516704	IfStatement	if ( JobAd )		5516646	7					
ANR	5516705	Condition	JobAd	58:5:1526:1530	5516646	0	True				
ANR	5516706	Identifier	JobAd		5516646	0					
ANR	5516707	CompoundStatement		12:13:261:261	5516646	1					
ANR	5516708	ExpressionStatement	initKillSigs ( )	59:2:1538:1552	5516646	0	True				
ANR	5516709	CallExpression	initKillSigs ( )		5516646	0					
ANR	5516710	Callee	initKillSigs		5516646	0					
ANR	5516711	Identifier	initKillSigs		5516646	0					
ANR	5516712	ArgumentList			5516646	1					
ANR	5516713	IfStatement	"if ( JobAd -> LookupInteger ( ATTR_JOB_UNIVERSE , job_universe ) < 1 )"		5516646	1					
ANR	5516714	Condition	"JobAd -> LookupInteger ( ATTR_JOB_UNIVERSE , job_universe ) < 1"	60:6:1560:1618	5516646	0	True				
ANR	5516715	RelationalExpression	"JobAd -> LookupInteger ( ATTR_JOB_UNIVERSE , job_universe ) < 1"		5516646	0		<			
ANR	5516716	CallExpression	"JobAd -> LookupInteger ( ATTR_JOB_UNIVERSE , job_universe )"		5516646	0					
ANR	5516717	Callee	JobAd -> LookupInteger		5516646	0					
ANR	5516718	PtrMemberAccess	JobAd -> LookupInteger		5516646	0					
ANR	5516719	Identifier	JobAd		5516646	0					
ANR	5516720	Identifier	LookupInteger		5516646	1					
ANR	5516721	ArgumentList	ATTR_JOB_UNIVERSE		5516646	1					
ANR	5516722	Argument	ATTR_JOB_UNIVERSE		5516646	0					
ANR	5516723	Identifier	ATTR_JOB_UNIVERSE		5516646	0					
ANR	5516724	Argument	job_universe		5516646	1					
ANR	5516725	Identifier	job_universe		5516646	0					
ANR	5516726	PrimaryExpression	1		5516646	1					
ANR	5516727	CompoundStatement		14:68:349:349	5516646	1					
ANR	5516728	ExpressionStatement	job_universe = 0	61:3:1627:1643	5516646	0	True				
ANR	5516729	AssignmentExpression	job_universe = 0		5516646	0		=			
ANR	5516730	Identifier	job_universe		5516646	0					
ANR	5516731	PrimaryExpression	0		5516646	1					
ANR	5516732	ReturnType	void		5516646	1					
ANR	5516733	Identifier	UserProc :: initialize		5516646	2					
ANR	5516734	ParameterList			5516646	3					
ANR	5516735	CFGEntryNode	ENTRY		5516646		True				
ANR	5516736	CFGExitNode	EXIT		5516646		True				
ANR	5516737	Symbol	m_pre_defined_std_fds		5516646						
ANR	5516738	Symbol	NULL		5516646						
ANR	5516739	Symbol	requested_exit		5516646						
ANR	5516740	Symbol	JobAd		5516646						
ANR	5516741	Symbol	false		5516646						
ANR	5516742	Symbol	i		5516646						
ANR	5516743	Symbol	job_universe		5516646						
ANR	5516744	Symbol	exit_status		5516646						
ANR	5516745	Symbol	* JobAd		5516646						
ANR	5516746	Symbol	* m_pre_defined_std_fds		5516646						
ANR	5516747	Symbol	m_pre_defined_std_fnames		5516646						
ANR	5516748	Symbol	* i		5516646						
ANR	5516749	Symbol	ATTR_JOB_UNIVERSE		5516646						
ANR	5516750	Symbol	m_proc_exited		5516646						
ANR	5516751	Symbol	* m_pre_defined_std_fnames		5516646						
ANR	5516752	Symbol	JobPid		5516646						
ANR	5516753	Symbol	JobAd -> LookupInteger		5516646						
ANR	5516754	Function	UserProc :: initKillSigs	67:0:1656:2549							
ANR	5516755	FunctionDef	UserProc :: initKillSigs ()		5516754	0					
ANR	5516756	CompoundStatement		69:0:1692:2549	5516754	0					
ANR	5516757	IdentifierDeclStatement	int sig ;	70:1:1695:1702	5516754	0	True				
ANR	5516758	IdentifierDecl	sig		5516754	0					
ANR	5516759	IdentifierDeclType	int		5516754	0					
ANR	5516760	Identifier	sig		5516754	1					
ANR	5516761	ExpressionStatement	sig = findSoftKillSig ( JobAd )	72:1:1706:1736	5516754	1	True				
ANR	5516762	AssignmentExpression	sig = findSoftKillSig ( JobAd )		5516754	0		=			
ANR	5516763	Identifier	sig		5516754	0					
ANR	5516764	CallExpression	findSoftKillSig ( JobAd )		5516754	1					
ANR	5516765	Callee	findSoftKillSig		5516754	0					
ANR	5516766	Identifier	findSoftKillSig		5516754	0					
ANR	5516767	ArgumentList	JobAd		5516754	1					
ANR	5516768	Argument	JobAd		5516754	0					
ANR	5516769	Identifier	JobAd		5516754	0					
ANR	5516770	IfStatement	if ( sig >= 0 )		5516754	2					
ANR	5516771	Condition	sig >= 0	73:5:1743:1750	5516754	0	True				
ANR	5516772	RelationalExpression	sig >= 0		5516754	0		>=			
ANR	5516773	Identifier	sig		5516754	0					
ANR	5516774	PrimaryExpression	0		5516754	1					
ANR	5516775	CompoundStatement		5:16:61:61	5516754	1					
ANR	5516776	ExpressionStatement	soft_kill_sig = sig	74:2:1758:1777	5516754	0	True				
ANR	5516777	AssignmentExpression	soft_kill_sig = sig		5516754	0		=			
ANR	5516778	Identifier	soft_kill_sig		5516754	0					
ANR	5516779	Identifier	sig		5516754	1					
ANR	5516780	ElseStatement	else		5516754	0					
ANR	5516781	CompoundStatement		7:8:94:94	5516754	0					
ANR	5516782	ExpressionStatement	soft_kill_sig = SIGTERM	76:2:1791:1814	5516754	0	True				
ANR	5516783	AssignmentExpression	soft_kill_sig = SIGTERM		5516754	0		=			
ANR	5516784	Identifier	soft_kill_sig		5516754	0					
ANR	5516785	Identifier	SIGTERM		5516754	1					
ANR	5516786	ExpressionStatement	sig = findRmKillSig ( JobAd )	79:1:1821:1849	5516754	3	True				
ANR	5516787	AssignmentExpression	sig = findRmKillSig ( JobAd )		5516754	0		=			
ANR	5516788	Identifier	sig		5516754	0					
ANR	5516789	CallExpression	findRmKillSig ( JobAd )		5516754	1					
ANR	5516790	Callee	findRmKillSig		5516754	0					
ANR	5516791	Identifier	findRmKillSig		5516754	0					
ANR	5516792	ArgumentList	JobAd		5516754	1					
ANR	5516793	Argument	JobAd		5516754	0					
ANR	5516794	Identifier	JobAd		5516754	0					
ANR	5516795	IfStatement	if ( sig >= 0 )		5516754	4					
ANR	5516796	Condition	sig >= 0	80:5:1856:1863	5516754	0	True				
ANR	5516797	RelationalExpression	sig >= 0		5516754	0		>=			
ANR	5516798	Identifier	sig		5516754	0					
ANR	5516799	PrimaryExpression	0		5516754	1					
ANR	5516800	CompoundStatement		12:16:174:174	5516754	1					
ANR	5516801	ExpressionStatement	rm_kill_sig = sig	81:2:1871:1888	5516754	0	True				
ANR	5516802	AssignmentExpression	rm_kill_sig = sig		5516754	0		=			
ANR	5516803	Identifier	rm_kill_sig		5516754	0					
ANR	5516804	Identifier	sig		5516754	1					
ANR	5516805	ElseStatement	else		5516754	0					
ANR	5516806	CompoundStatement		14:8:205:205	5516754	0					
ANR	5516807	ExpressionStatement	rm_kill_sig = SIGTERM	83:2:1902:1923	5516754	0	True				
ANR	5516808	AssignmentExpression	rm_kill_sig = SIGTERM		5516754	0		=			
ANR	5516809	Identifier	rm_kill_sig		5516754	0					
ANR	5516810	Identifier	SIGTERM		5516754	1					
ANR	5516811	ExpressionStatement	sig = findHoldKillSig ( JobAd )	86:1:1930:1960	5516754	5	True				
ANR	5516812	AssignmentExpression	sig = findHoldKillSig ( JobAd )		5516754	0		=			
ANR	5516813	Identifier	sig		5516754	0					
ANR	5516814	CallExpression	findHoldKillSig ( JobAd )		5516754	1					
ANR	5516815	Callee	findHoldKillSig		5516754	0					
ANR	5516816	Identifier	findHoldKillSig		5516754	0					
ANR	5516817	ArgumentList	JobAd		5516754	1					
ANR	5516818	Argument	JobAd		5516754	0					
ANR	5516819	Identifier	JobAd		5516754	0					
ANR	5516820	IfStatement	if ( sig >= 0 )		5516754	6					
ANR	5516821	Condition	sig >= 0	87:5:1967:1974	5516754	0	True				
ANR	5516822	RelationalExpression	sig >= 0		5516754	0		>=			
ANR	5516823	Identifier	sig		5516754	0					
ANR	5516824	PrimaryExpression	0		5516754	1					
ANR	5516825	CompoundStatement		19:16:285:285	5516754	1					
ANR	5516826	ExpressionStatement	hold_kill_sig = sig	88:2:1982:2001	5516754	0	True				
ANR	5516827	AssignmentExpression	hold_kill_sig = sig		5516754	0		=			
ANR	5516828	Identifier	hold_kill_sig		5516754	0					
ANR	5516829	Identifier	sig		5516754	1					
ANR	5516830	ElseStatement	else		5516754	0					
ANR	5516831	CompoundStatement		21:8:318:318	5516754	0					
ANR	5516832	ExpressionStatement	hold_kill_sig = SIGTERM	90:2:2015:2038	5516754	0	True				
ANR	5516833	AssignmentExpression	hold_kill_sig = SIGTERM		5516754	0		=			
ANR	5516834	Identifier	hold_kill_sig		5516754	0					
ANR	5516835	Identifier	SIGTERM		5516754	1					
ANR	5516836	IdentifierDeclStatement	const char * tmp = signalName ( soft_kill_sig ) ;	93:1:2045:2090	5516754	7	True				
ANR	5516837	IdentifierDecl	* tmp = signalName ( soft_kill_sig )		5516754	0					
ANR	5516838	IdentifierDeclType	const char *		5516754	0					
ANR	5516839	Identifier	tmp		5516754	1					
ANR	5516840	AssignmentExpression	* tmp = signalName ( soft_kill_sig )		5516754	2		=			
ANR	5516841	Identifier	tmp		5516754	0					
ANR	5516842	CallExpression	signalName ( soft_kill_sig )		5516754	1					
ANR	5516843	Callee	signalName		5516754	0					
ANR	5516844	Identifier	signalName		5516754	0					
ANR	5516845	ArgumentList	soft_kill_sig		5516754	1					
ANR	5516846	Argument	soft_kill_sig		5516754	0					
ANR	5516847	Identifier	soft_kill_sig		5516754	0					
ANR	5516848	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s KillSignal: %d (%s)\\n"" , name ? name : ""Main job"" , soft_kill_sig , tmp ? tmp : ""Unknown"" )"	94:1:2093:2217	5516754	8	True				
ANR	5516849	CallExpression	"dprintf ( D_FULLDEBUG , ""%s KillSignal: %d (%s)\\n"" , name ? name : ""Main job"" , soft_kill_sig , tmp ? tmp : ""Unknown"" )"		5516754	0					
ANR	5516850	Callee	dprintf		5516754	0					
ANR	5516851	Identifier	dprintf		5516754	0					
ANR	5516852	ArgumentList	D_FULLDEBUG		5516754	1					
ANR	5516853	Argument	D_FULLDEBUG		5516754	0					
ANR	5516854	Identifier	D_FULLDEBUG		5516754	0					
ANR	5516855	Argument	"""%s KillSignal: %d (%s)\\n"""		5516754	1					
ANR	5516856	PrimaryExpression	"""%s KillSignal: %d (%s)\\n"""		5516754	0					
ANR	5516857	Argument	"name ? name : ""Main job"""		5516754	2					
ANR	5516858	ConditionalExpression	"name ? name : ""Main job"""		5516754	0					
ANR	5516859	Condition	name		5516754	0					
ANR	5516860	Identifier	name		5516754	0					
ANR	5516861	Identifier	name		5516754	1					
ANR	5516862	PrimaryExpression	"""Main job"""		5516754	2					
ANR	5516863	Argument	soft_kill_sig		5516754	3					
ANR	5516864	Identifier	soft_kill_sig		5516754	0					
ANR	5516865	Argument	"tmp ? tmp : ""Unknown"""		5516754	4					
ANR	5516866	ConditionalExpression	"tmp ? tmp : ""Unknown"""		5516754	0					
ANR	5516867	Condition	tmp		5516754	0					
ANR	5516868	Identifier	tmp		5516754	0					
ANR	5516869	Identifier	tmp		5516754	1					
ANR	5516870	PrimaryExpression	"""Unknown"""		5516754	2					
ANR	5516871	ExpressionStatement	tmp = signalName ( rm_kill_sig )	98:1:2221:2252	5516754	9	True				
ANR	5516872	AssignmentExpression	tmp = signalName ( rm_kill_sig )		5516754	0		=			
ANR	5516873	Identifier	tmp		5516754	0					
ANR	5516874	CallExpression	signalName ( rm_kill_sig )		5516754	1					
ANR	5516875	Callee	signalName		5516754	0					
ANR	5516876	Identifier	signalName		5516754	0					
ANR	5516877	ArgumentList	rm_kill_sig		5516754	1					
ANR	5516878	Argument	rm_kill_sig		5516754	0					
ANR	5516879	Identifier	rm_kill_sig		5516754	0					
ANR	5516880	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s RmKillSignal: %d (%s)\\n"" , name ? name : ""Main job"" , rm_kill_sig , tmp ? tmp : ""Unknown"" )"	99:1:2255:2379	5516754	10	True				
ANR	5516881	CallExpression	"dprintf ( D_FULLDEBUG , ""%s RmKillSignal: %d (%s)\\n"" , name ? name : ""Main job"" , rm_kill_sig , tmp ? tmp : ""Unknown"" )"		5516754	0					
ANR	5516882	Callee	dprintf		5516754	0					
ANR	5516883	Identifier	dprintf		5516754	0					
ANR	5516884	ArgumentList	D_FULLDEBUG		5516754	1					
ANR	5516885	Argument	D_FULLDEBUG		5516754	0					
ANR	5516886	Identifier	D_FULLDEBUG		5516754	0					
ANR	5516887	Argument	"""%s RmKillSignal: %d (%s)\\n"""		5516754	1					
ANR	5516888	PrimaryExpression	"""%s RmKillSignal: %d (%s)\\n"""		5516754	0					
ANR	5516889	Argument	"name ? name : ""Main job"""		5516754	2					
ANR	5516890	ConditionalExpression	"name ? name : ""Main job"""		5516754	0					
ANR	5516891	Condition	name		5516754	0					
ANR	5516892	Identifier	name		5516754	0					
ANR	5516893	Identifier	name		5516754	1					
ANR	5516894	PrimaryExpression	"""Main job"""		5516754	2					
ANR	5516895	Argument	rm_kill_sig		5516754	3					
ANR	5516896	Identifier	rm_kill_sig		5516754	0					
ANR	5516897	Argument	"tmp ? tmp : ""Unknown"""		5516754	4					
ANR	5516898	ConditionalExpression	"tmp ? tmp : ""Unknown"""		5516754	0					
ANR	5516899	Condition	tmp		5516754	0					
ANR	5516900	Identifier	tmp		5516754	0					
ANR	5516901	Identifier	tmp		5516754	1					
ANR	5516902	PrimaryExpression	"""Unknown"""		5516754	2					
ANR	5516903	ExpressionStatement	tmp = signalName ( hold_kill_sig )	103:1:2383:2416	5516754	11	True				
ANR	5516904	AssignmentExpression	tmp = signalName ( hold_kill_sig )		5516754	0		=			
ANR	5516905	Identifier	tmp		5516754	0					
ANR	5516906	CallExpression	signalName ( hold_kill_sig )		5516754	1					
ANR	5516907	Callee	signalName		5516754	0					
ANR	5516908	Identifier	signalName		5516754	0					
ANR	5516909	ArgumentList	hold_kill_sig		5516754	1					
ANR	5516910	Argument	hold_kill_sig		5516754	0					
ANR	5516911	Identifier	hold_kill_sig		5516754	0					
ANR	5516912	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s HoldKillSignal: %d (%s)\\n"" , name ? name : ""Main job"" , hold_kill_sig , tmp ? tmp : ""Unknown"" )"	104:1:2419:2547	5516754	12	True				
ANR	5516913	CallExpression	"dprintf ( D_FULLDEBUG , ""%s HoldKillSignal: %d (%s)\\n"" , name ? name : ""Main job"" , hold_kill_sig , tmp ? tmp : ""Unknown"" )"		5516754	0					
ANR	5516914	Callee	dprintf		5516754	0					
ANR	5516915	Identifier	dprintf		5516754	0					
ANR	5516916	ArgumentList	D_FULLDEBUG		5516754	1					
ANR	5516917	Argument	D_FULLDEBUG		5516754	0					
ANR	5516918	Identifier	D_FULLDEBUG		5516754	0					
ANR	5516919	Argument	"""%s HoldKillSignal: %d (%s)\\n"""		5516754	1					
ANR	5516920	PrimaryExpression	"""%s HoldKillSignal: %d (%s)\\n"""		5516754	0					
ANR	5516921	Argument	"name ? name : ""Main job"""		5516754	2					
ANR	5516922	ConditionalExpression	"name ? name : ""Main job"""		5516754	0					
ANR	5516923	Condition	name		5516754	0					
ANR	5516924	Identifier	name		5516754	0					
ANR	5516925	Identifier	name		5516754	1					
ANR	5516926	PrimaryExpression	"""Main job"""		5516754	2					
ANR	5516927	Argument	hold_kill_sig		5516754	3					
ANR	5516928	Identifier	hold_kill_sig		5516754	0					
ANR	5516929	Argument	"tmp ? tmp : ""Unknown"""		5516754	4					
ANR	5516930	ConditionalExpression	"tmp ? tmp : ""Unknown"""		5516754	0					
ANR	5516931	Condition	tmp		5516754	0					
ANR	5516932	Identifier	tmp		5516754	0					
ANR	5516933	Identifier	tmp		5516754	1					
ANR	5516934	PrimaryExpression	"""Unknown"""		5516754	2					
ANR	5516935	ReturnType	void		5516754	1					
ANR	5516936	Identifier	UserProc :: initKillSigs		5516754	2					
ANR	5516937	ParameterList			5516754	3					
ANR	5516938	CFGEntryNode	ENTRY		5516754		True				
ANR	5516939	CFGExitNode	EXIT		5516754		True				
ANR	5516940	Symbol	soft_kill_sig		5516754						
ANR	5516941	Symbol	signalName		5516754						
ANR	5516942	Symbol	findHoldKillSig		5516754						
ANR	5516943	Symbol	JobAd		5516754						
ANR	5516944	Symbol	findRmKillSig		5516754						
ANR	5516945	Symbol	D_FULLDEBUG		5516754						
ANR	5516946	Symbol	rm_kill_sig		5516754						
ANR	5516947	Symbol	sig		5516754						
ANR	5516948	Symbol	findSoftKillSig		5516754						
ANR	5516949	Symbol	tmp		5516754						
ANR	5516950	Symbol	hold_kill_sig		5516754						
ANR	5516951	Symbol	name		5516754						
ANR	5516952	Symbol	SIGTERM		5516754						
ANR	5516953	Function	UserProc :: JobReaper	110:0:2553:3619							
ANR	5516954	FunctionDef	"UserProc :: JobReaper (int pid , int status)"		5516953	0					
ANR	5516955	CompoundStatement		112:0:2599:3619	5516953	0					
ANR	5516956	IdentifierDeclStatement	MyString line ;	113:1:2602:2615	5516953	0	True				
ANR	5516957	IdentifierDecl	line		5516953	0					
ANR	5516958	IdentifierDeclType	MyString		5516953	0					
ANR	5516959	Identifier	line		5516953	1					
ANR	5516960	IdentifierDeclStatement	MyString error_txt ;	114:1:2618:2636	5516953	1	True				
ANR	5516961	IdentifierDecl	error_txt		5516953	0					
ANR	5516962	IdentifierDeclType	MyString		5516953	0					
ANR	5516963	Identifier	error_txt		5516953	1					
ANR	5516964	IdentifierDeclStatement	MyString filename ;	115:1:2639:2656	5516953	2	True				
ANR	5516965	IdentifierDecl	filename		5516953	0					
ANR	5516966	IdentifierDeclType	MyString		5516953	0					
ANR	5516967	Identifier	filename		5516953	1					
ANR	5516968	IdentifierDeclStatement	const char * dir = Starter -> GetWorkingDir ( ) ;	116:1:2659:2701	5516953	3	True				
ANR	5516969	IdentifierDecl	* dir = Starter -> GetWorkingDir ( )		5516953	0					
ANR	5516970	IdentifierDeclType	const char *		5516953	0					
ANR	5516971	Identifier	dir		5516953	1					
ANR	5516972	AssignmentExpression	* dir = Starter -> GetWorkingDir ( )		5516953	2		=			
ANR	5516973	Identifier	dir		5516953	0					
ANR	5516974	CallExpression	Starter -> GetWorkingDir ( )		5516953	1					
ANR	5516975	Callee	Starter -> GetWorkingDir		5516953	0					
ANR	5516976	PtrMemberAccess	Starter -> GetWorkingDir		5516953	0					
ANR	5516977	Identifier	Starter		5516953	0					
ANR	5516978	Identifier	GetWorkingDir		5516953	1					
ANR	5516979	ArgumentList			5516953	1					
ANR	5516980	IdentifierDeclStatement	FILE * fp ;	117:1:2704:2712	5516953	4	True				
ANR	5516981	IdentifierDecl	* fp		5516953	0					
ANR	5516982	IdentifierDeclType	FILE *		5516953	0					
ANR	5516983	Identifier	fp		5516953	1					
ANR	5516984	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside UserProc::JobReaper()\\n"" )"	119:1:2716:2772	5516953	5	True				
ANR	5516985	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside UserProc::JobReaper()\\n"" )"		5516953	0					
ANR	5516986	Callee	dprintf		5516953	0					
ANR	5516987	Identifier	dprintf		5516953	0					
ANR	5516988	ArgumentList	D_FULLDEBUG		5516953	1					
ANR	5516989	Argument	D_FULLDEBUG		5516953	0					
ANR	5516990	Identifier	D_FULLDEBUG		5516953	0					
ANR	5516991	Argument	"""Inside UserProc::JobReaper()\\n"""		5516953	1					
ANR	5516992	PrimaryExpression	"""Inside UserProc::JobReaper()\\n"""		5516953	0					
ANR	5516993	ExpressionStatement	"filename . sprintf ( ""%s%c%s"" , dir , DIR_DELIM_CHAR , JOB_WRAPPER_FAILURE_FILE )"	121:1:2776:2849	5516953	6	True				
ANR	5516994	CallExpression	"filename . sprintf ( ""%s%c%s"" , dir , DIR_DELIM_CHAR , JOB_WRAPPER_FAILURE_FILE )"		5516953	0					
ANR	5516995	Callee	filename . sprintf		5516953	0					
ANR	5516996	MemberAccess	filename . sprintf		5516953	0					
ANR	5516997	Identifier	filename		5516953	0					
ANR	5516998	Identifier	sprintf		5516953	1					
ANR	5516999	ArgumentList	"""%s%c%s"""		5516953	1					
ANR	5517000	Argument	"""%s%c%s"""		5516953	0					
ANR	5517001	PrimaryExpression	"""%s%c%s"""		5516953	0					
ANR	5517002	Argument	dir		5516953	1					
ANR	5517003	Identifier	dir		5516953	0					
ANR	5517004	Argument	DIR_DELIM_CHAR		5516953	2					
ANR	5517005	Identifier	DIR_DELIM_CHAR		5516953	0					
ANR	5517006	Argument	JOB_WRAPPER_FAILURE_FILE		5516953	3					
ANR	5517007	Identifier	JOB_WRAPPER_FAILURE_FILE		5516953	0					
ANR	5517008	IfStatement	"if ( 0 == access ( filename . Value ( ) , F_OK ) )"		5516953	7					
ANR	5517009	Condition	"0 == access ( filename . Value ( ) , F_OK )"	122:5:2856:2890	5516953	0	True				
ANR	5517010	EqualityExpression	"0 == access ( filename . Value ( ) , F_OK )"		5516953	0		==			
ANR	5517011	PrimaryExpression	0		5516953	0					
ANR	5517012	CallExpression	"access ( filename . Value ( ) , F_OK )"		5516953	1					
ANR	5517013	Callee	access		5516953	0					
ANR	5517014	Identifier	access		5516953	0					
ANR	5517015	ArgumentList	filename . Value ( )		5516953	1					
ANR	5517016	Argument	filename . Value ( )		5516953	0					
ANR	5517017	CallExpression	filename . Value ( )		5516953	0					
ANR	5517018	Callee	filename . Value		5516953	0					
ANR	5517019	MemberAccess	filename . Value		5516953	0					
ANR	5517020	Identifier	filename		5516953	0					
ANR	5517021	Identifier	Value		5516953	1					
ANR	5517022	ArgumentList			5516953	1					
ANR	5517023	Argument	F_OK		5516953	1					
ANR	5517024	Identifier	F_OK		5516953	0					
ANR	5517025	CompoundStatement		11:42:293:293	5516953	1					
ANR	5517026	ExpressionStatement	"fp = safe_fopen_wrapper_follow ( filename . Value ( ) , ""r"" )"	127:2:3103:3156	5516953	0	True				
ANR	5517027	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( filename . Value ( ) , ""r"" )"		5516953	0		=			
ANR	5517028	Identifier	fp		5516953	0					
ANR	5517029	CallExpression	"safe_fopen_wrapper_follow ( filename . Value ( ) , ""r"" )"		5516953	1					
ANR	5517030	Callee	safe_fopen_wrapper_follow		5516953	0					
ANR	5517031	Identifier	safe_fopen_wrapper_follow		5516953	0					
ANR	5517032	ArgumentList	filename . Value ( )		5516953	1					
ANR	5517033	Argument	filename . Value ( )		5516953	0					
ANR	5517034	CallExpression	filename . Value ( )		5516953	0					
ANR	5517035	Callee	filename . Value		5516953	0					
ANR	5517036	MemberAccess	filename . Value		5516953	0					
ANR	5517037	Identifier	filename		5516953	0					
ANR	5517038	Identifier	Value		5516953	1					
ANR	5517039	ArgumentList			5516953	1					
ANR	5517040	Argument	"""r"""		5516953	1					
ANR	5517041	PrimaryExpression	"""r"""		5516953	0					
ANR	5517042	IfStatement	if ( ! fp )		5516953	1					
ANR	5517043	Condition	! fp	128:6:3164:3166	5516953	0	True				
ANR	5517044	UnaryOperationExpression	! fp		5516953	0					
ANR	5517045	UnaryOperator	!		5516953	0					
ANR	5517046	Identifier	fp		5516953	1					
ANR	5517047	CompoundStatement		17:11:569:569	5516953	1					
ANR	5517048	Statement	dprintf	129:3:3174:3180	5516953	0	True				
ANR	5517049	Statement	(	129:10:3181:3181	5516953	1	True				
ANR	5517050	Statement	D_ALWAYS	129:11:3182:3189	5516953	2	True				
ANR	5517051	Statement	","	129:19:3190:3190	5516953	3	True				
ANR	5517052	Statement	"""Unable to open \\""%s\\"" for reading: """	129:21:3192:3228	5516953	4	True				
ANR	5517053	Statement	"""%s (errno %d)\\n"""	130:5:3235:3251	5516953	5	True				
ANR	5517054	Statement	","	130:22:3252:3252	5516953	6	True				
ANR	5517055	Statement	filename	130:24:3254:3261	5516953	7	True				
ANR	5517056	Statement	.	130:32:3262:3262	5516953	8	True				
ANR	5517057	Statement	Value	130:33:3263:3267	5516953	9	True				
ANR	5517058	Statement	(	130:38:3268:3268	5516953	10	True				
ANR	5517059	Statement	)	130:39:3269:3269	5516953	11	True				
ANR	5517060	Statement	","	130:40:3270:3270	5516953	12	True				
ANR	5517061	Statement	strerror	131:5:3277:3284	5516953	13	True				
ANR	5517062	Statement	(	131:13:3285:3285	5516953	14	True				
ANR	5517063	Statement	errno	131:14:3286:3290	5516953	15	True				
ANR	5517064	Statement	)	131:19:3291:3291	5516953	16	True				
ANR	5517065	Statement	","	131:20:3292:3292	5516953	17	True				
ANR	5517066	Statement	errno	131:22:3294:3298	5516953	18	True				
ANR	5517067	Statement	)	131:27:3299:3299	5516953	19	True				
ANR	5517068	ExpressionStatement		131:28:3300:3300	5516953	20	True				
ANR	5517069	ElseStatement	else		5516953	0					
ANR	5517070	CompoundStatement		21:9:711:711	5516953	0					
ANR	5517071	WhileStatement	while ( line . readLine ( fp ) )		5516953	0					
ANR	5517072	Condition	line . readLine ( fp )	133:10:3323:3339	5516953	0	True				
ANR	5517073	CallExpression	line . readLine ( fp )		5516953	0					
ANR	5517074	Callee	line . readLine		5516953	0					
ANR	5517075	MemberAccess	line . readLine		5516953	0					
ANR	5517076	Identifier	line		5516953	0					
ANR	5517077	Identifier	readLine		5516953	1					
ANR	5517078	ArgumentList	fp		5516953	1					
ANR	5517079	Argument	fp		5516953	0					
ANR	5517080	Identifier	fp		5516953	0					
ANR	5517081	CompoundStatement		23:3:745:745	5516953	1					
ANR	5517082	ExpressionStatement	error_txt += line	135:4:3351:3368	5516953	0	True				
ANR	5517083	AssignmentExpression	error_txt += line		5516953	0		+=			
ANR	5517084	Identifier	error_txt		5516953	0					
ANR	5517085	Identifier	line		5516953	1					
ANR	5517086	ExpressionStatement	fclose ( fp )	137:3:3378:3388	5516953	1	True				
ANR	5517087	CallExpression	fclose ( fp )		5516953	0					
ANR	5517088	Callee	fclose		5516953	0					
ANR	5517089	Identifier	fclose		5516953	0					
ANR	5517090	ArgumentList	fp		5516953	1					
ANR	5517091	Argument	fp		5516953	0					
ANR	5517092	Identifier	fp		5516953	0					
ANR	5517093	ExpressionStatement	error_txt . trim ( )	139:2:3396:3412	5516953	2	True				
ANR	5517094	CallExpression	error_txt . trim ( )		5516953	0					
ANR	5517095	Callee	error_txt . trim		5516953	0					
ANR	5517096	MemberAccess	error_txt . trim		5516953	0					
ANR	5517097	Identifier	error_txt		5516953	0					
ANR	5517098	Identifier	trim		5516953	1					
ANR	5517099	ArgumentList			5516953	1					
ANR	5517100	ExpressionStatement	"EXCEPT ( ""The job wrapper failed to execute the job: %s"" , error_txt . Value ( ) )"	140:2:3416:3490	5516953	3	True				
ANR	5517101	CallExpression	"EXCEPT ( ""The job wrapper failed to execute the job: %s"" , error_txt . Value ( ) )"		5516953	0					
ANR	5517102	Callee	EXCEPT		5516953	0					
ANR	5517103	Identifier	EXCEPT		5516953	0					
ANR	5517104	ArgumentList	"""The job wrapper failed to execute the job: %s"""		5516953	1					
ANR	5517105	Argument	"""The job wrapper failed to execute the job: %s"""		5516953	0					
ANR	5517106	PrimaryExpression	"""The job wrapper failed to execute the job: %s"""		5516953	0					
ANR	5517107	Argument	error_txt . Value ( )		5516953	1					
ANR	5517108	CallExpression	error_txt . Value ( )		5516953	0					
ANR	5517109	Callee	error_txt . Value		5516953	0					
ANR	5517110	MemberAccess	error_txt . Value		5516953	0					
ANR	5517111	Identifier	error_txt		5516953	0					
ANR	5517112	Identifier	Value		5516953	1					
ANR	5517113	ArgumentList			5516953	1					
ANR	5517114	IfStatement	if ( JobPid == pid )		5516953	8					
ANR	5517115	Condition	JobPid == pid	143:5:3501:3513	5516953	0	True				
ANR	5517116	EqualityExpression	JobPid == pid		5516953	0		==			
ANR	5517117	Identifier	JobPid		5516953	0					
ANR	5517118	Identifier	pid		5516953	1					
ANR	5517119	CompoundStatement		32:20:916:916	5516953	1					
ANR	5517120	ExpressionStatement	m_proc_exited = true	144:2:3520:3540	5516953	0	True				
ANR	5517121	AssignmentExpression	m_proc_exited = true		5516953	0		=			
ANR	5517122	Identifier	m_proc_exited		5516953	0					
ANR	5517123	Identifier	true		5516953	1					
ANR	5517124	ExpressionStatement	exit_status = status	145:2:3544:3564	5516953	1	True				
ANR	5517125	AssignmentExpression	exit_status = status		5516953	0		=			
ANR	5517126	Identifier	exit_status		5516953	0					
ANR	5517127	Identifier	status		5516953	1					
ANR	5517128	ExpressionStatement	job_exit_time . getTime ( )	146:2:3568:3591	5516953	2	True				
ANR	5517129	CallExpression	job_exit_time . getTime ( )		5516953	0					
ANR	5517130	Callee	job_exit_time . getTime		5516953	0					
ANR	5517131	MemberAccess	job_exit_time . getTime		5516953	0					
ANR	5517132	Identifier	job_exit_time		5516953	0					
ANR	5517133	Identifier	getTime		5516953	1					
ANR	5517134	ArgumentList			5516953	1					
ANR	5517135	ReturnStatement	return m_proc_exited ;	148:1:3597:3617	5516953	9	True				
ANR	5517136	Identifier	m_proc_exited		5516953	0					
ANR	5517137	ReturnType	bool		5516953	1					
ANR	5517138	Identifier	UserProc :: JobReaper		5516953	2					
ANR	5517139	ParameterList	"int pid , int status"		5516953	3					
ANR	5517140	Parameter	int pid	111:20:2578:2584	5516953	0	True				
ANR	5517141	ParameterType	int		5516953	0					
ANR	5517142	Identifier	pid		5516953	1					
ANR	5517143	Parameter	int status	111:29:2587:2596	5516953	1	True				
ANR	5517144	ParameterType	int		5516953	0					
ANR	5517145	Identifier	status		5516953	1					
ANR	5517146	CFGEntryNode	ENTRY		5516953		True				
ANR	5517147	CFGExitNode	EXIT		5516953		True				
ANR	5517148	Symbol	line . readLine		5516953						
ANR	5517149	Symbol	access		5516953						
ANR	5517150	Symbol	line		5516953						
ANR	5517151	Symbol	JOB_WRAPPER_FAILURE_FILE		5516953						
ANR	5517152	Symbol	DIR_DELIM_CHAR		5516953						
ANR	5517153	Symbol	pid		5516953						
ANR	5517154	Symbol	fp		5516953						
ANR	5517155	Symbol	D_FULLDEBUG		5516953						
ANR	5517156	Symbol	Starter		5516953						
ANR	5517157	Symbol	dir		5516953						
ANR	5517158	Symbol	filename . Value		5516953						
ANR	5517159	Symbol	exit_status		5516953						
ANR	5517160	Symbol	error_txt . Value		5516953						
ANR	5517161	Symbol	error_txt		5516953						
ANR	5517162	Symbol	filename		5516953						
ANR	5517163	Symbol	Starter -> GetWorkingDir		5516953						
ANR	5517164	Symbol	F_OK		5516953						
ANR	5517165	Symbol	true		5516953						
ANR	5517166	Symbol	* Starter		5516953						
ANR	5517167	Symbol	m_proc_exited		5516953						
ANR	5517168	Symbol	safe_fopen_wrapper_follow		5516953						
ANR	5517169	Symbol	JobPid		5516953						
ANR	5517170	Symbol	status		5516953						
ANR	5517171	Symbol	job_exit_time		5516953						
ANR	5517172	Function	UserProc :: PublishUpdateAd	152:0:3623:5348							
ANR	5517173	FunctionDef	UserProc :: PublishUpdateAd (ClassAd * ad)		5517172	0					
ANR	5517174	CompoundStatement		154:0:3669:5348	5517172	0					
ANR	5517175	IdentifierDeclStatement	char buf [ 256 ] ;	155:1:3672:3685	5517172	0	True				
ANR	5517176	IdentifierDecl	buf [ 256 ]		5517172	0					
ANR	5517177	IdentifierDeclType	char [ 256 ]		5517172	0					
ANR	5517178	Identifier	buf		5517172	1					
ANR	5517179	PrimaryExpression	256		5517172	2					
ANR	5517180	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Inside UserProc::PublishUpdateAd()\\n"" )"	157:1:3689:3751	5517172	1	True				
ANR	5517181	CallExpression	"dprintf ( D_FULLDEBUG , ""Inside UserProc::PublishUpdateAd()\\n"" )"		5517172	0					
ANR	5517182	Callee	dprintf		5517172	0					
ANR	5517183	Identifier	dprintf		5517172	0					
ANR	5517184	ArgumentList	D_FULLDEBUG		5517172	1					
ANR	5517185	Argument	D_FULLDEBUG		5517172	0					
ANR	5517186	Identifier	D_FULLDEBUG		5517172	0					
ANR	5517187	Argument	"""Inside UserProc::PublishUpdateAd()\\n"""		5517172	1					
ANR	5517188	PrimaryExpression	"""Inside UserProc::PublishUpdateAd()\\n"""		5517172	0					
ANR	5517189	IfStatement	if ( JobPid >= 0 )		5517172	2					
ANR	5517190	Condition	JobPid >= 0	159:5:3759:3769	5517172	0	True				
ANR	5517191	RelationalExpression	JobPid >= 0		5517172	0		>=			
ANR	5517192	Identifier	JobPid		5517172	0					
ANR	5517193	PrimaryExpression	0		5517172	1					
ANR	5517194	CompoundStatement		6:19:103:103	5517172	1					
ANR	5517195	ExpressionStatement	"sprintf ( buf , ""%s%s=%d"" , name ? name : """" , ATTR_JOB_PID , JobPid )"	160:2:3778:3848	5517172	0	True				
ANR	5517196	CallExpression	"sprintf ( buf , ""%s%s=%d"" , name ? name : """" , ATTR_JOB_PID , JobPid )"		5517172	0					
ANR	5517197	Callee	sprintf		5517172	0					
ANR	5517198	Identifier	sprintf		5517172	0					
ANR	5517199	ArgumentList	buf		5517172	1					
ANR	5517200	Argument	buf		5517172	0					
ANR	5517201	Identifier	buf		5517172	0					
ANR	5517202	Argument	"""%s%s=%d"""		5517172	1					
ANR	5517203	PrimaryExpression	"""%s%s=%d"""		5517172	0					
ANR	5517204	Argument	"name ? name : """""		5517172	2					
ANR	5517205	ConditionalExpression	"name ? name : """""		5517172	0					
ANR	5517206	Condition	name		5517172	0					
ANR	5517207	Identifier	name		5517172	0					
ANR	5517208	Identifier	name		5517172	1					
ANR	5517209	PrimaryExpression	""""""		5517172	2					
ANR	5517210	Argument	ATTR_JOB_PID		5517172	3					
ANR	5517211	Identifier	ATTR_JOB_PID		5517172	0					
ANR	5517212	Argument	JobPid		5517172	4					
ANR	5517213	Identifier	JobPid		5517172	0					
ANR	5517214	ExpressionStatement	ad -> Insert ( buf )	162:2:3852:3869	5517172	1	True				
ANR	5517215	CallExpression	ad -> Insert ( buf )		5517172	0					
ANR	5517216	Callee	ad -> Insert		5517172	0					
ANR	5517217	PtrMemberAccess	ad -> Insert		5517172	0					
ANR	5517218	Identifier	ad		5517172	0					
ANR	5517219	Identifier	Insert		5517172	1					
ANR	5517220	ArgumentList	buf		5517172	1					
ANR	5517221	Argument	buf		5517172	0					
ANR	5517222	Identifier	buf		5517172	0					
ANR	5517223	IfStatement	if ( job_start_time . seconds ( ) > 0 )		5517172	3					
ANR	5517224	Condition	job_start_time . seconds ( ) > 0	165:5:3880:3907	5517172	0	True				
ANR	5517225	RelationalExpression	job_start_time . seconds ( ) > 0		5517172	0		>			
ANR	5517226	CallExpression	job_start_time . seconds ( )		5517172	0					
ANR	5517227	Callee	job_start_time . seconds		5517172	0					
ANR	5517228	MemberAccess	job_start_time . seconds		5517172	0					
ANR	5517229	Identifier	job_start_time		5517172	0					
ANR	5517230	Identifier	seconds		5517172	1					
ANR	5517231	ArgumentList			5517172	1					
ANR	5517232	PrimaryExpression	0		5517172	1					
ANR	5517233	CompoundStatement		12:36:241:241	5517172	1					
ANR	5517234	ExpressionStatement	"sprintf ( buf , ""%s%s=%ld"" , name ? name : """" , ATTR_JOB_START_DATE , job_start_time . seconds ( ) )"	166:2:3915:4011	5517172	0	True				
ANR	5517235	CallExpression	"sprintf ( buf , ""%s%s=%ld"" , name ? name : """" , ATTR_JOB_START_DATE , job_start_time . seconds ( ) )"		5517172	0					
ANR	5517236	Callee	sprintf		5517172	0					
ANR	5517237	Identifier	sprintf		5517172	0					
ANR	5517238	ArgumentList	buf		5517172	1					
ANR	5517239	Argument	buf		5517172	0					
ANR	5517240	Identifier	buf		5517172	0					
ANR	5517241	Argument	"""%s%s=%ld"""		5517172	1					
ANR	5517242	PrimaryExpression	"""%s%s=%ld"""		5517172	0					
ANR	5517243	Argument	"name ? name : """""		5517172	2					
ANR	5517244	ConditionalExpression	"name ? name : """""		5517172	0					
ANR	5517245	Condition	name		5517172	0					
ANR	5517246	Identifier	name		5517172	0					
ANR	5517247	Identifier	name		5517172	1					
ANR	5517248	PrimaryExpression	""""""		5517172	2					
ANR	5517249	Argument	ATTR_JOB_START_DATE		5517172	3					
ANR	5517250	Identifier	ATTR_JOB_START_DATE		5517172	0					
ANR	5517251	Argument	job_start_time . seconds ( )		5517172	4					
ANR	5517252	CallExpression	job_start_time . seconds ( )		5517172	0					
ANR	5517253	Callee	job_start_time . seconds		5517172	0					
ANR	5517254	MemberAccess	job_start_time . seconds		5517172	0					
ANR	5517255	Identifier	job_start_time		5517172	0					
ANR	5517256	Identifier	seconds		5517172	1					
ANR	5517257	ArgumentList			5517172	1					
ANR	5517258	ExpressionStatement	ad -> Insert ( buf )	168:2:4015:4032	5517172	1	True				
ANR	5517259	CallExpression	ad -> Insert ( buf )		5517172	0					
ANR	5517260	Callee	ad -> Insert		5517172	0					
ANR	5517261	PtrMemberAccess	ad -> Insert		5517172	0					
ANR	5517262	Identifier	ad		5517172	0					
ANR	5517263	Identifier	Insert		5517172	1					
ANR	5517264	ArgumentList	buf		5517172	1					
ANR	5517265	Argument	buf		5517172	0					
ANR	5517266	Identifier	buf		5517172	0					
ANR	5517267	IfStatement	if ( m_proc_exited )		5517172	4					
ANR	5517268	Condition	m_proc_exited	171:5:4043:4055	5517172	0	True				
ANR	5517269	Identifier	m_proc_exited		5517172	0					
ANR	5517270	CompoundStatement		18:20:388:388	5517172	1					
ANR	5517271	IfStatement	if ( job_exit_time . seconds ( ) > 0 )		5517172	0					
ANR	5517272	Condition	job_exit_time . seconds ( ) > 0	173:6:4067:4093	5517172	0	True				
ANR	5517273	RelationalExpression	job_exit_time . seconds ( ) > 0		5517172	0		>			
ANR	5517274	CallExpression	job_exit_time . seconds ( )		5517172	0					
ANR	5517275	Callee	job_exit_time . seconds		5517172	0					
ANR	5517276	MemberAccess	job_exit_time . seconds		5517172	0					
ANR	5517277	Identifier	job_exit_time		5517172	0					
ANR	5517278	Identifier	seconds		5517172	1					
ANR	5517279	ArgumentList			5517172	1					
ANR	5517280	PrimaryExpression	0		5517172	1					
ANR	5517281	CompoundStatement		20:36:427:427	5517172	1					
ANR	5517282	ExpressionStatement	"sprintf ( buf , ""%s%s=%f"" , name ? name : """" , ATTR_JOB_DURATION , job_exit_time . difference ( & job_start_time ) )"	174:3:4102:4214	5517172	0	True				
ANR	5517283	CallExpression	"sprintf ( buf , ""%s%s=%f"" , name ? name : """" , ATTR_JOB_DURATION , job_exit_time . difference ( & job_start_time ) )"		5517172	0					
ANR	5517284	Callee	sprintf		5517172	0					
ANR	5517285	Identifier	sprintf		5517172	0					
ANR	5517286	ArgumentList	buf		5517172	1					
ANR	5517287	Argument	buf		5517172	0					
ANR	5517288	Identifier	buf		5517172	0					
ANR	5517289	Argument	"""%s%s=%f"""		5517172	1					
ANR	5517290	PrimaryExpression	"""%s%s=%f"""		5517172	0					
ANR	5517291	Argument	"name ? name : """""		5517172	2					
ANR	5517292	ConditionalExpression	"name ? name : """""		5517172	0					
ANR	5517293	Condition	name		5517172	0					
ANR	5517294	Identifier	name		5517172	0					
ANR	5517295	Identifier	name		5517172	1					
ANR	5517296	PrimaryExpression	""""""		5517172	2					
ANR	5517297	Argument	ATTR_JOB_DURATION		5517172	3					
ANR	5517298	Identifier	ATTR_JOB_DURATION		5517172	0					
ANR	5517299	Argument	job_exit_time . difference ( & job_start_time )		5517172	4					
ANR	5517300	CallExpression	job_exit_time . difference ( & job_start_time )		5517172	0					
ANR	5517301	Callee	job_exit_time . difference		5517172	0					
ANR	5517302	MemberAccess	job_exit_time . difference		5517172	0					
ANR	5517303	Identifier	job_exit_time		5517172	0					
ANR	5517304	Identifier	difference		5517172	1					
ANR	5517305	ArgumentList	& job_start_time		5517172	1					
ANR	5517306	Argument	& job_start_time		5517172	0					
ANR	5517307	UnaryOperationExpression	& job_start_time		5517172	0					
ANR	5517308	UnaryOperator	&		5517172	0					
ANR	5517309	Identifier	job_start_time		5517172	1					
ANR	5517310	ExpressionStatement	ad -> Insert ( buf )	176:3:4219:4236	5517172	1	True				
ANR	5517311	CallExpression	ad -> Insert ( buf )		5517172	0					
ANR	5517312	Callee	ad -> Insert		5517172	0					
ANR	5517313	PtrMemberAccess	ad -> Insert		5517172	0					
ANR	5517314	Identifier	ad		5517172	0					
ANR	5517315	Identifier	Insert		5517172	1					
ANR	5517316	ArgumentList	buf		5517172	1					
ANR	5517317	Argument	buf		5517172	0					
ANR	5517318	Identifier	buf		5517172	0					
ANR	5517319	IfStatement	if ( WIFSIGNALED ( exit_status ) )		5517172	1					
ANR	5517320	Condition	WIFSIGNALED ( exit_status )	188:6:4664:4687	5517172	0	True				
ANR	5517321	CallExpression	WIFSIGNALED ( exit_status )		5517172	0					
ANR	5517322	Callee	WIFSIGNALED		5517172	0					
ANR	5517323	Identifier	WIFSIGNALED		5517172	0					
ANR	5517324	ArgumentList	exit_status		5517172	1					
ANR	5517325	Argument	exit_status		5517172	0					
ANR	5517326	Identifier	exit_status		5517172	0					
ANR	5517327	CompoundStatement		35:33:1021:1021	5517172	1					
ANR	5517328	ExpressionStatement	"sprintf ( buf , ""%s%s = TRUE"" , name ? name : """" , ATTR_ON_EXIT_BY_SIGNAL )"	189:3:4696:4773	5517172	0	True				
ANR	5517329	CallExpression	"sprintf ( buf , ""%s%s = TRUE"" , name ? name : """" , ATTR_ON_EXIT_BY_SIGNAL )"		5517172	0					
ANR	5517330	Callee	sprintf		5517172	0					
ANR	5517331	Identifier	sprintf		5517172	0					
ANR	5517332	ArgumentList	buf		5517172	1					
ANR	5517333	Argument	buf		5517172	0					
ANR	5517334	Identifier	buf		5517172	0					
ANR	5517335	Argument	"""%s%s = TRUE"""		5517172	1					
ANR	5517336	PrimaryExpression	"""%s%s = TRUE"""		5517172	0					
ANR	5517337	Argument	"name ? name : """""		5517172	2					
ANR	5517338	ConditionalExpression	"name ? name : """""		5517172	0					
ANR	5517339	Condition	name		5517172	0					
ANR	5517340	Identifier	name		5517172	0					
ANR	5517341	Identifier	name		5517172	1					
ANR	5517342	PrimaryExpression	""""""		5517172	2					
ANR	5517343	Argument	ATTR_ON_EXIT_BY_SIGNAL		5517172	3					
ANR	5517344	Identifier	ATTR_ON_EXIT_BY_SIGNAL		5517172	0					
ANR	5517345	ExpressionStatement	ad -> Insert ( buf )	191:3:4778:4795	5517172	1	True				
ANR	5517346	CallExpression	ad -> Insert ( buf )		5517172	0					
ANR	5517347	Callee	ad -> Insert		5517172	0					
ANR	5517348	PtrMemberAccess	ad -> Insert		5517172	0					
ANR	5517349	Identifier	ad		5517172	0					
ANR	5517350	Identifier	Insert		5517172	1					
ANR	5517351	ArgumentList	buf		5517172	1					
ANR	5517352	Argument	buf		5517172	0					
ANR	5517353	Identifier	buf		5517172	0					
ANR	5517354	ExpressionStatement	"sprintf ( buf , ""%s%s = %d"" , name ? name : """" , ATTR_ON_EXIT_SIGNAL , WTERMSIG ( exit_status ) )"	192:3:4800:4895	5517172	2	True				
ANR	5517355	CallExpression	"sprintf ( buf , ""%s%s = %d"" , name ? name : """" , ATTR_ON_EXIT_SIGNAL , WTERMSIG ( exit_status ) )"		5517172	0					
ANR	5517356	Callee	sprintf		5517172	0					
ANR	5517357	Identifier	sprintf		5517172	0					
ANR	5517358	ArgumentList	buf		5517172	1					
ANR	5517359	Argument	buf		5517172	0					
ANR	5517360	Identifier	buf		5517172	0					
ANR	5517361	Argument	"""%s%s = %d"""		5517172	1					
ANR	5517362	PrimaryExpression	"""%s%s = %d"""		5517172	0					
ANR	5517363	Argument	"name ? name : """""		5517172	2					
ANR	5517364	ConditionalExpression	"name ? name : """""		5517172	0					
ANR	5517365	Condition	name		5517172	0					
ANR	5517366	Identifier	name		5517172	0					
ANR	5517367	Identifier	name		5517172	1					
ANR	5517368	PrimaryExpression	""""""		5517172	2					
ANR	5517369	Argument	ATTR_ON_EXIT_SIGNAL		5517172	3					
ANR	5517370	Identifier	ATTR_ON_EXIT_SIGNAL		5517172	0					
ANR	5517371	Argument	WTERMSIG ( exit_status )		5517172	4					
ANR	5517372	CallExpression	WTERMSIG ( exit_status )		5517172	0					
ANR	5517373	Callee	WTERMSIG		5517172	0					
ANR	5517374	Identifier	WTERMSIG		5517172	0					
ANR	5517375	ArgumentList	exit_status		5517172	1					
ANR	5517376	Argument	exit_status		5517172	0					
ANR	5517377	Identifier	exit_status		5517172	0					
ANR	5517378	ExpressionStatement	ad -> Insert ( buf )	194:3:4900:4917	5517172	3	True				
ANR	5517379	CallExpression	ad -> Insert ( buf )		5517172	0					
ANR	5517380	Callee	ad -> Insert		5517172	0					
ANR	5517381	PtrMemberAccess	ad -> Insert		5517172	0					
ANR	5517382	Identifier	ad		5517172	0					
ANR	5517383	Identifier	Insert		5517172	1					
ANR	5517384	ArgumentList	buf		5517172	1					
ANR	5517385	Argument	buf		5517172	0					
ANR	5517386	Identifier	buf		5517172	0					
ANR	5517387	ExpressionStatement	"sprintf ( buf , ""%s%s = \\""died on %s\\"""" , name ? name : """" , ATTR_EXIT_REASON , daemonCore -> GetExceptionString ( WTERMSIG ( exit_status ) ) )"	195:3:4922:5064	5517172	4	True				
ANR	5517388	CallExpression	"sprintf ( buf , ""%s%s = \\""died on %s\\"""" , name ? name : """" , ATTR_EXIT_REASON , daemonCore -> GetExceptionString ( WTERMSIG ( exit_status ) ) )"		5517172	0					
ANR	5517389	Callee	sprintf		5517172	0					
ANR	5517390	Identifier	sprintf		5517172	0					
ANR	5517391	ArgumentList	buf		5517172	1					
ANR	5517392	Argument	buf		5517172	0					
ANR	5517393	Identifier	buf		5517172	0					
ANR	5517394	Argument	"""%s%s = \\""died on %s\\"""""		5517172	1					
ANR	5517395	PrimaryExpression	"""%s%s = \\""died on %s\\"""""		5517172	0					
ANR	5517396	Argument	"name ? name : """""		5517172	2					
ANR	5517397	ConditionalExpression	"name ? name : """""		5517172	0					
ANR	5517398	Condition	name		5517172	0					
ANR	5517399	Identifier	name		5517172	0					
ANR	5517400	Identifier	name		5517172	1					
ANR	5517401	PrimaryExpression	""""""		5517172	2					
ANR	5517402	Argument	ATTR_EXIT_REASON		5517172	3					
ANR	5517403	Identifier	ATTR_EXIT_REASON		5517172	0					
ANR	5517404	Argument	daemonCore -> GetExceptionString ( WTERMSIG ( exit_status ) )		5517172	4					
ANR	5517405	CallExpression	daemonCore -> GetExceptionString ( WTERMSIG ( exit_status ) )		5517172	0					
ANR	5517406	Callee	daemonCore -> GetExceptionString		5517172	0					
ANR	5517407	PtrMemberAccess	daemonCore -> GetExceptionString		5517172	0					
ANR	5517408	Identifier	daemonCore		5517172	0					
ANR	5517409	Identifier	GetExceptionString		5517172	1					
ANR	5517410	ArgumentList	WTERMSIG ( exit_status )		5517172	1					
ANR	5517411	Argument	WTERMSIG ( exit_status )		5517172	0					
ANR	5517412	CallExpression	WTERMSIG ( exit_status )		5517172	0					
ANR	5517413	Callee	WTERMSIG		5517172	0					
ANR	5517414	Identifier	WTERMSIG		5517172	0					
ANR	5517415	ArgumentList	exit_status		5517172	1					
ANR	5517416	Argument	exit_status		5517172	0					
ANR	5517417	Identifier	exit_status		5517172	0					
ANR	5517418	ExpressionStatement	ad -> Insert ( buf )	198:3:5069:5086	5517172	5	True				
ANR	5517419	CallExpression	ad -> Insert ( buf )		5517172	0					
ANR	5517420	Callee	ad -> Insert		5517172	0					
ANR	5517421	PtrMemberAccess	ad -> Insert		5517172	0					
ANR	5517422	Identifier	ad		5517172	0					
ANR	5517423	Identifier	Insert		5517172	1					
ANR	5517424	ArgumentList	buf		5517172	1					
ANR	5517425	Argument	buf		5517172	0					
ANR	5517426	Identifier	buf		5517172	0					
ANR	5517427	ElseStatement	else		5517172	0					
ANR	5517428	CompoundStatement		46:9:1427:1427	5517172	0					
ANR	5517429	ExpressionStatement	"sprintf ( buf , ""%s%s = FALSE"" , name ? name : """" , ATTR_ON_EXIT_BY_SIGNAL )"	200:3:5102:5180	5517172	0	True				
ANR	5517430	CallExpression	"sprintf ( buf , ""%s%s = FALSE"" , name ? name : """" , ATTR_ON_EXIT_BY_SIGNAL )"		5517172	0					
ANR	5517431	Callee	sprintf		5517172	0					
ANR	5517432	Identifier	sprintf		5517172	0					
ANR	5517433	ArgumentList	buf		5517172	1					
ANR	5517434	Argument	buf		5517172	0					
ANR	5517435	Identifier	buf		5517172	0					
ANR	5517436	Argument	"""%s%s = FALSE"""		5517172	1					
ANR	5517437	PrimaryExpression	"""%s%s = FALSE"""		5517172	0					
ANR	5517438	Argument	"name ? name : """""		5517172	2					
ANR	5517439	ConditionalExpression	"name ? name : """""		5517172	0					
ANR	5517440	Condition	name		5517172	0					
ANR	5517441	Identifier	name		5517172	0					
ANR	5517442	Identifier	name		5517172	1					
ANR	5517443	PrimaryExpression	""""""		5517172	2					
ANR	5517444	Argument	ATTR_ON_EXIT_BY_SIGNAL		5517172	3					
ANR	5517445	Identifier	ATTR_ON_EXIT_BY_SIGNAL		5517172	0					
ANR	5517446	ExpressionStatement	ad -> Insert ( buf )	202:3:5185:5202	5517172	1	True				
ANR	5517447	CallExpression	ad -> Insert ( buf )		5517172	0					
ANR	5517448	Callee	ad -> Insert		5517172	0					
ANR	5517449	PtrMemberAccess	ad -> Insert		5517172	0					
ANR	5517450	Identifier	ad		5517172	0					
ANR	5517451	Identifier	Insert		5517172	1					
ANR	5517452	ArgumentList	buf		5517172	1					
ANR	5517453	Argument	buf		5517172	0					
ANR	5517454	Identifier	buf		5517172	0					
ANR	5517455	ExpressionStatement	"sprintf ( buf , ""%s%s = %d"" , name ? name : """" , ATTR_ON_EXIT_CODE , WEXITSTATUS ( exit_status ) )"	203:3:5207:5303	5517172	2	True				
ANR	5517456	CallExpression	"sprintf ( buf , ""%s%s = %d"" , name ? name : """" , ATTR_ON_EXIT_CODE , WEXITSTATUS ( exit_status ) )"		5517172	0					
ANR	5517457	Callee	sprintf		5517172	0					
ANR	5517458	Identifier	sprintf		5517172	0					
ANR	5517459	ArgumentList	buf		5517172	1					
ANR	5517460	Argument	buf		5517172	0					
ANR	5517461	Identifier	buf		5517172	0					
ANR	5517462	Argument	"""%s%s = %d"""		5517172	1					
ANR	5517463	PrimaryExpression	"""%s%s = %d"""		5517172	0					
ANR	5517464	Argument	"name ? name : """""		5517172	2					
ANR	5517465	ConditionalExpression	"name ? name : """""		5517172	0					
ANR	5517466	Condition	name		5517172	0					
ANR	5517467	Identifier	name		5517172	0					
ANR	5517468	Identifier	name		5517172	1					
ANR	5517469	PrimaryExpression	""""""		5517172	2					
ANR	5517470	Argument	ATTR_ON_EXIT_CODE		5517172	3					
ANR	5517471	Identifier	ATTR_ON_EXIT_CODE		5517172	0					
ANR	5517472	Argument	WEXITSTATUS ( exit_status )		5517172	4					
ANR	5517473	CallExpression	WEXITSTATUS ( exit_status )		5517172	0					
ANR	5517474	Callee	WEXITSTATUS		5517172	0					
ANR	5517475	Identifier	WEXITSTATUS		5517172	0					
ANR	5517476	ArgumentList	exit_status		5517172	1					
ANR	5517477	Argument	exit_status		5517172	0					
ANR	5517478	Identifier	exit_status		5517172	0					
ANR	5517479	ExpressionStatement	ad -> Insert ( buf )	205:3:5308:5325	5517172	3	True				
ANR	5517480	CallExpression	ad -> Insert ( buf )		5517172	0					
ANR	5517481	Callee	ad -> Insert		5517172	0					
ANR	5517482	PtrMemberAccess	ad -> Insert		5517172	0					
ANR	5517483	Identifier	ad		5517172	0					
ANR	5517484	Identifier	Insert		5517172	1					
ANR	5517485	ArgumentList	buf		5517172	1					
ANR	5517486	Argument	buf		5517172	0					
ANR	5517487	Identifier	buf		5517172	0					
ANR	5517488	ReturnStatement	return true ;	208:1:5335:5346	5517172	5	True				
ANR	5517489	Identifier	true		5517172	0					
ANR	5517490	ReturnType	bool		5517172	1					
ANR	5517491	Identifier	UserProc :: PublishUpdateAd		5517172	2					
ANR	5517492	ParameterList	ClassAd * ad		5517172	3					
ANR	5517493	Parameter	ClassAd * ad	153:27:3655:3665	5517172	0	True				
ANR	5517494	ParameterType	ClassAd *		5517172	0					
ANR	5517495	Identifier	ad		5517172	1					
ANR	5517496	CFGEntryNode	ENTRY		5517172		True				
ANR	5517497	CFGExitNode	EXIT		5517172		True				
ANR	5517498	Symbol	ATTR_ON_EXIT_CODE		5517172						
ANR	5517499	Symbol	WEXITSTATUS		5517172						
ANR	5517500	Symbol	job_start_time		5517172						
ANR	5517501	Symbol	exit_status		5517172						
ANR	5517502	Symbol	& job_start_time		5517172						
ANR	5517503	Symbol	ATTR_JOB_DURATION		5517172						
ANR	5517504	Symbol	daemonCore		5517172						
ANR	5517505	Symbol	ATTR_ON_EXIT_SIGNAL		5517172						
ANR	5517506	Symbol	ATTR_JOB_PID		5517172						
ANR	5517507	Symbol	ATTR_JOB_START_DATE		5517172						
ANR	5517508	Symbol	WIFSIGNALED		5517172						
ANR	5517509	Symbol	job_start_time . seconds		5517172						
ANR	5517510	Symbol	ad		5517172						
ANR	5517511	Symbol	D_FULLDEBUG		5517172						
ANR	5517512	Symbol	daemonCore -> GetExceptionString		5517172						
ANR	5517513	Symbol	ATTR_ON_EXIT_BY_SIGNAL		5517172						
ANR	5517514	Symbol	job_exit_time . seconds		5517172						
ANR	5517515	Symbol	buf		5517172						
ANR	5517516	Symbol	ATTR_EXIT_REASON		5517172						
ANR	5517517	Symbol	* daemonCore		5517172						
ANR	5517518	Symbol	name		5517172						
ANR	5517519	Symbol	true		5517172						
ANR	5517520	Symbol	WTERMSIG		5517172						
ANR	5517521	Symbol	m_proc_exited		5517172						
ANR	5517522	Symbol	JobPid		5517172						
ANR	5517523	Symbol	job_exit_time . difference		5517172						
ANR	5517524	Symbol	job_exit_time		5517172						
ANR	5517525	Function	UserProc :: PublishToEnv	212:0:5352:6026							
ANR	5517526	FunctionDef	UserProc :: PublishToEnv (Env * proc_env)		5517525	0					
ANR	5517527	CompoundStatement		214:0:5397:6026	5517525	0					
ANR	5517528	IfStatement	if ( m_proc_exited )		5517525	0					
ANR	5517529	Condition	m_proc_exited	215:5:5404:5416	5517525	0	True				
ANR	5517530	Identifier	m_proc_exited		5517525	0					
ANR	5517531	CompoundStatement		17:2:310:327	5517525	1					
ANR	5517532	IdentifierDeclStatement	MyString base ;	218:2:5528:5541	5517525	0	True				
ANR	5517533	IdentifierDecl	base		5517525	0					
ANR	5517534	IdentifierDeclType	MyString		5517525	0					
ANR	5517535	Identifier	base		5517525	1					
ANR	5517536	ExpressionStatement	"base = ""_"""	219:2:5545:5555	5517525	1	True				
ANR	5517537	AssignmentExpression	"base = ""_"""		5517525	0		=			
ANR	5517538	Identifier	base		5517525	0					
ANR	5517539	PrimaryExpression	"""_"""		5517525	1					
ANR	5517540	ExpressionStatement	base += myDistro -> Get ( )	220:2:5559:5582	5517525	2	True				
ANR	5517541	AssignmentExpression	base += myDistro -> Get ( )		5517525	0		+=			
ANR	5517542	Identifier	base		5517525	0					
ANR	5517543	CallExpression	myDistro -> Get ( )		5517525	1					
ANR	5517544	Callee	myDistro -> Get		5517525	0					
ANR	5517545	PtrMemberAccess	myDistro -> Get		5517525	0					
ANR	5517546	Identifier	myDistro		5517525	0					
ANR	5517547	Identifier	Get		5517525	1					
ANR	5517548	ArgumentList			5517525	1					
ANR	5517549	ExpressionStatement	base += '_'	221:2:5586:5597	5517525	3	True				
ANR	5517550	AssignmentExpression	base += '_'		5517525	0		+=			
ANR	5517551	Identifier	base		5517525	0					
ANR	5517552	PrimaryExpression	'_'		5517525	1					
ANR	5517553	IfStatement	if ( name )		5517525	4					
ANR	5517554	Condition	name	222:6:5605:5608	5517525	0	True				
ANR	5517555	Identifier	name		5517525	0					
ANR	5517556	CompoundStatement		9:13:214:214	5517525	1					
ANR	5517557	ExpressionStatement	base += name	223:3:5617:5629	5517525	0	True				
ANR	5517558	AssignmentExpression	base += name		5517525	0		+=			
ANR	5517559	Identifier	base		5517525	0					
ANR	5517560	Identifier	name		5517525	1					
ANR	5517561	ElseStatement	else		5517525	0					
ANR	5517562	CompoundStatement		11:9:242:242	5517525	0					
ANR	5517563	ExpressionStatement	"base += ""MAINJOB"""	225:3:5645:5662	5517525	0	True				
ANR	5517564	AssignmentExpression	"base += ""MAINJOB"""		5517525	0		+=			
ANR	5517565	Identifier	base		5517525	0					
ANR	5517566	PrimaryExpression	"""MAINJOB"""		5517525	1					
ANR	5517567	ExpressionStatement	base += '_'	227:2:5670:5681	5517525	5	True				
ANR	5517568	AssignmentExpression	base += '_'		5517525	0		+=			
ANR	5517569	Identifier	base		5517525	0					
ANR	5517570	PrimaryExpression	'_'		5517525	1					
ANR	5517571	ExpressionStatement	base . upper_case ( )	228:2:5685:5702	5517525	6	True				
ANR	5517572	CallExpression	base . upper_case ( )		5517525	0					
ANR	5517573	Callee	base . upper_case		5517525	0					
ANR	5517574	MemberAccess	base . upper_case		5517525	0					
ANR	5517575	Identifier	base		5517525	0					
ANR	5517576	Identifier	upper_case		5517525	1					
ANR	5517577	ArgumentList			5517525	1					
ANR	5517578	IdentifierDeclStatement	MyString env_name ;	230:2:5708:5725	5517525	7	True				
ANR	5517579	IdentifierDecl	env_name		5517525	0					
ANR	5517580	IdentifierDeclType	MyString		5517525	0					
ANR	5517581	Identifier	env_name		5517525	1					
ANR	5517582	IfStatement	if ( WIFSIGNALED ( exit_status ) )		5517525	8					
ANR	5517583	Condition	WIFSIGNALED ( exit_status )	232:6:5734:5757	5517525	0	True				
ANR	5517584	CallExpression	WIFSIGNALED ( exit_status )		5517525	0					
ANR	5517585	Callee	WIFSIGNALED		5517525	0					
ANR	5517586	Identifier	WIFSIGNALED		5517525	0					
ANR	5517587	ArgumentList	exit_status		5517525	1					
ANR	5517588	Argument	exit_status		5517525	0					
ANR	5517589	Identifier	exit_status		5517525	0					
ANR	5517590	CompoundStatement		19:33:363:363	5517525	1					
ANR	5517591	ExpressionStatement	env_name = base . Value ( )	233:3:5766:5789	5517525	0	True				
ANR	5517592	AssignmentExpression	env_name = base . Value ( )		5517525	0		=			
ANR	5517593	Identifier	env_name		5517525	0					
ANR	5517594	CallExpression	base . Value ( )		5517525	1					
ANR	5517595	Callee	base . Value		5517525	0					
ANR	5517596	MemberAccess	base . Value		5517525	0					
ANR	5517597	Identifier	base		5517525	0					
ANR	5517598	Identifier	Value		5517525	1					
ANR	5517599	ArgumentList			5517525	1					
ANR	5517600	ExpressionStatement	"env_name += ""EXIT_SIGNAL"""	234:3:5794:5819	5517525	1	True				
ANR	5517601	AssignmentExpression	"env_name += ""EXIT_SIGNAL"""		5517525	0		+=			
ANR	5517602	Identifier	env_name		5517525	0					
ANR	5517603	PrimaryExpression	"""EXIT_SIGNAL"""		5517525	1					
ANR	5517604	ExpressionStatement	"proc_env -> SetEnv ( env_name . Value ( ) , WTERMSIG ( exit_status ) )"	235:3:5824:5883	5517525	2	True				
ANR	5517605	CallExpression	"proc_env -> SetEnv ( env_name . Value ( ) , WTERMSIG ( exit_status ) )"		5517525	0					
ANR	5517606	Callee	proc_env -> SetEnv		5517525	0					
ANR	5517607	PtrMemberAccess	proc_env -> SetEnv		5517525	0					
ANR	5517608	Identifier	proc_env		5517525	0					
ANR	5517609	Identifier	SetEnv		5517525	1					
ANR	5517610	ArgumentList	env_name . Value ( )		5517525	1					
ANR	5517611	Argument	env_name . Value ( )		5517525	0					
ANR	5517612	CallExpression	env_name . Value ( )		5517525	0					
ANR	5517613	Callee	env_name . Value		5517525	0					
ANR	5517614	MemberAccess	env_name . Value		5517525	0					
ANR	5517615	Identifier	env_name		5517525	0					
ANR	5517616	Identifier	Value		5517525	1					
ANR	5517617	ArgumentList			5517525	1					
ANR	5517618	Argument	WTERMSIG ( exit_status )		5517525	1					
ANR	5517619	CallExpression	WTERMSIG ( exit_status )		5517525	0					
ANR	5517620	Callee	WTERMSIG		5517525	0					
ANR	5517621	Identifier	WTERMSIG		5517525	0					
ANR	5517622	ArgumentList	exit_status		5517525	1					
ANR	5517623	Argument	exit_status		5517525	0					
ANR	5517624	Identifier	exit_status		5517525	0					
ANR	5517625	ElseStatement	else		5517525	0					
ANR	5517626	CompoundStatement		23:9:496:496	5517525	0					
ANR	5517627	ExpressionStatement	env_name = base . Value ( )	237:3:5899:5922	5517525	0	True				
ANR	5517628	AssignmentExpression	env_name = base . Value ( )		5517525	0		=			
ANR	5517629	Identifier	env_name		5517525	0					
ANR	5517630	CallExpression	base . Value ( )		5517525	1					
ANR	5517631	Callee	base . Value		5517525	0					
ANR	5517632	MemberAccess	base . Value		5517525	0					
ANR	5517633	Identifier	base		5517525	0					
ANR	5517634	Identifier	Value		5517525	1					
ANR	5517635	ArgumentList			5517525	1					
ANR	5517636	ExpressionStatement	"env_name += ""EXIT_CODE"""	238:3:5927:5950	5517525	1	True				
ANR	5517637	AssignmentExpression	"env_name += ""EXIT_CODE"""		5517525	0		+=			
ANR	5517638	Identifier	env_name		5517525	0					
ANR	5517639	PrimaryExpression	"""EXIT_CODE"""		5517525	1					
ANR	5517640	ExpressionStatement	"proc_env -> SetEnv ( env_name . Value ( ) , WEXITSTATUS ( exit_status ) )"	239:3:5955:6017	5517525	2	True				
ANR	5517641	CallExpression	"proc_env -> SetEnv ( env_name . Value ( ) , WEXITSTATUS ( exit_status ) )"		5517525	0					
ANR	5517642	Callee	proc_env -> SetEnv		5517525	0					
ANR	5517643	PtrMemberAccess	proc_env -> SetEnv		5517525	0					
ANR	5517644	Identifier	proc_env		5517525	0					
ANR	5517645	Identifier	SetEnv		5517525	1					
ANR	5517646	ArgumentList	env_name . Value ( )		5517525	1					
ANR	5517647	Argument	env_name . Value ( )		5517525	0					
ANR	5517648	CallExpression	env_name . Value ( )		5517525	0					
ANR	5517649	Callee	env_name . Value		5517525	0					
ANR	5517650	MemberAccess	env_name . Value		5517525	0					
ANR	5517651	Identifier	env_name		5517525	0					
ANR	5517652	Identifier	Value		5517525	1					
ANR	5517653	ArgumentList			5517525	1					
ANR	5517654	Argument	WEXITSTATUS ( exit_status )		5517525	1					
ANR	5517655	CallExpression	WEXITSTATUS ( exit_status )		5517525	0					
ANR	5517656	Callee	WEXITSTATUS		5517525	0					
ANR	5517657	Identifier	WEXITSTATUS		5517525	0					
ANR	5517658	ArgumentList	exit_status		5517525	1					
ANR	5517659	Argument	exit_status		5517525	0					
ANR	5517660	Identifier	exit_status		5517525	0					
ANR	5517661	ReturnType	void		5517525	1					
ANR	5517662	Identifier	UserProc :: PublishToEnv		5517525	2					
ANR	5517663	ParameterList	Env * proc_env		5517525	3					
ANR	5517664	Parameter	Env * proc_env	213:24:5381:5393	5517525	0	True				
ANR	5517665	ParameterType	Env *		5517525	0					
ANR	5517666	Identifier	proc_env		5517525	1					
ANR	5517667	CFGEntryNode	ENTRY		5517525		True				
ANR	5517668	CFGExitNode	EXIT		5517525		True				
ANR	5517669	Symbol	WIFSIGNALED		5517525						
ANR	5517670	Symbol	env_name . Value		5517525						
ANR	5517671	Symbol	WEXITSTATUS		5517525						
ANR	5517672	Symbol	exit_status		5517525						
ANR	5517673	Symbol	myDistro -> Get		5517525						
ANR	5517674	Symbol	env_name		5517525						
ANR	5517675	Symbol	* myDistro		5517525						
ANR	5517676	Symbol	myDistro		5517525						
ANR	5517677	Symbol	proc_env		5517525						
ANR	5517678	Symbol	name		5517525						
ANR	5517679	Symbol	WTERMSIG		5517525						
ANR	5517680	Symbol	m_proc_exited		5517525						
ANR	5517681	Symbol	base		5517525						
ANR	5517682	Symbol	base . Value		5517525						
ANR	5517683	Function	UserProc :: getStdFile	244:0:6029:10682							
ANR	5517684	FunctionDef	"UserProc :: getStdFile (std_file_type type , const char * attr , bool allow_dash , const char * log_header , int * out_fd , MyString * out_name)"		5517683	0					
ANR	5517685	CompoundStatement		251:0:6278:10682	5517683	0					
ANR	5517686	ExpressionStatement	ASSERT ( out_fd != NULL )	258:1:6622:6644	5517683	0	True				
ANR	5517687	CallExpression	ASSERT ( out_fd != NULL )		5517683	0					
ANR	5517688	Callee	ASSERT		5517683	0					
ANR	5517689	Identifier	ASSERT		5517683	0					
ANR	5517690	ArgumentList	out_fd != NULL		5517683	1					
ANR	5517691	Argument	out_fd != NULL		5517683	0					
ANR	5517692	EqualityExpression	out_fd != NULL		5517683	0		!=			
ANR	5517693	Identifier	out_fd		5517683	0					
ANR	5517694	Identifier	NULL		5517683	1					
ANR	5517695	ExpressionStatement	ASSERT ( out_name != NULL )	259:1:6647:6671	5517683	1	True				
ANR	5517696	CallExpression	ASSERT ( out_name != NULL )		5517683	0					
ANR	5517697	Callee	ASSERT		5517683	0					
ANR	5517698	Identifier	ASSERT		5517683	0					
ANR	5517699	ArgumentList	out_name != NULL		5517683	1					
ANR	5517700	Argument	out_name != NULL		5517683	0					
ANR	5517701	EqualityExpression	out_name != NULL		5517683	0		!=			
ANR	5517702	Identifier	out_name		5517683	0					
ANR	5517703	Identifier	NULL		5517683	1					
ANR	5517704	ExpressionStatement	* out_fd = - 1	260:1:6674:6686	5517683	2	True				
ANR	5517705	AssignmentExpression	* out_fd = - 1		5517683	0		=			
ANR	5517706	UnaryOperationExpression	* out_fd		5517683	0					
ANR	5517707	UnaryOperator	*		5517683	0					
ANR	5517708	Identifier	out_fd		5517683	1					
ANR	5517709	UnaryOperationExpression	- 1		5517683	1					
ANR	5517710	UnaryOperator	-		5517683	0					
ANR	5517711	PrimaryExpression	1		5517683	1					
ANR	5517712	IdentifierDeclStatement	const char * filename = NULL ;	262:1:6690:6717	5517683	3	True				
ANR	5517713	IdentifierDecl	* filename = NULL		5517683	0					
ANR	5517714	IdentifierDeclType	const char *		5517683	0					
ANR	5517715	Identifier	filename		5517683	1					
ANR	5517716	AssignmentExpression	* filename = NULL		5517683	2		=			
ANR	5517717	Identifier	NULL		5517683	0					
ANR	5517718	Identifier	NULL		5517683	1					
ANR	5517719	IdentifierDeclStatement	bool wants_stream = false ;	263:1:6720:6745	5517683	4	True				
ANR	5517720	IdentifierDecl	wants_stream = false		5517683	0					
ANR	5517721	IdentifierDeclType	bool		5517683	0					
ANR	5517722	Identifier	wants_stream		5517683	1					
ANR	5517723	AssignmentExpression	wants_stream = false		5517683	2		=			
ANR	5517724	Identifier	false		5517683	0					
ANR	5517725	Identifier	false		5517683	1					
ANR	5517726	IdentifierDeclStatement	const char * stream_name = NULL ;	264:1:6748:6778	5517683	5	True				
ANR	5517727	IdentifierDecl	* stream_name = NULL		5517683	0					
ANR	5517728	IdentifierDeclType	const char *		5517683	0					
ANR	5517729	Identifier	stream_name		5517683	1					
ANR	5517730	AssignmentExpression	* stream_name = NULL		5517683	2		=			
ANR	5517731	Identifier	NULL		5517683	0					
ANR	5517732	Identifier	NULL		5517683	1					
ANR	5517733	IdentifierDeclStatement	const char * phrase = NULL ;	265:1:6781:6806	5517683	6	True				
ANR	5517734	IdentifierDecl	* phrase = NULL		5517683	0					
ANR	5517735	IdentifierDeclType	const char *		5517683	0					
ANR	5517736	Identifier	phrase		5517683	1					
ANR	5517737	AssignmentExpression	* phrase = NULL		5517683	2		=			
ANR	5517738	Identifier	NULL		5517683	0					
ANR	5517739	Identifier	NULL		5517683	1					
ANR	5517740	IdentifierDeclStatement	bool is_output = true ;	266:1:6809:6830	5517683	7	True				
ANR	5517741	IdentifierDecl	is_output = true		5517683	0					
ANR	5517742	IdentifierDeclType	bool		5517683	0					
ANR	5517743	Identifier	is_output		5517683	1					
ANR	5517744	AssignmentExpression	is_output = true		5517683	2		=			
ANR	5517745	Identifier	true		5517683	0					
ANR	5517746	Identifier	true		5517683	1					
ANR	5517747	IdentifierDeclStatement	bool is_null_file = false ;	267:1:6833:6858	5517683	8	True				
ANR	5517748	IdentifierDecl	is_null_file = false		5517683	0					
ANR	5517749	IdentifierDeclType	bool		5517683	0					
ANR	5517750	Identifier	is_null_file		5517683	1					
ANR	5517751	AssignmentExpression	is_null_file = false		5517683	2		=			
ANR	5517752	Identifier	false		5517683	0					
ANR	5517753	Identifier	false		5517683	1					
ANR	5517754	SwitchStatement	switch ( type )		5517683	9					
ANR	5517755	Condition	type	273:9:7039:7042	5517683	0	True				
ANR	5517756	Identifier	type		5517683	0					
ANR	5517757	CompoundStatement		23:16:767:767	5517683	1					
ANR	5517758	Label	case SFT_IN :	274:1:7049:7060	5517683	0	True				
ANR	5517759	Identifier	SFT_IN		5517683	0					
ANR	5517760	ExpressionStatement	is_output = false	275:2:7064:7081	5517683	1	True				
ANR	5517761	AssignmentExpression	is_output = false		5517683	0		=			
ANR	5517762	Identifier	is_output		5517683	0					
ANR	5517763	Identifier	false		5517683	1					
ANR	5517764	ExpressionStatement	"phrase = ""standard input"""	276:2:7085:7110	5517683	2	True				
ANR	5517765	AssignmentExpression	"phrase = ""standard input"""		5517683	0		=			
ANR	5517766	Identifier	phrase		5517683	0					
ANR	5517767	PrimaryExpression	"""standard input"""		5517683	1					
ANR	5517768	ExpressionStatement	"stream_name = ""stdin"""	277:2:7114:7135	5517683	3	True				
ANR	5517769	AssignmentExpression	"stream_name = ""stdin"""		5517683	0		=			
ANR	5517770	Identifier	stream_name		5517683	0					
ANR	5517771	PrimaryExpression	"""stdin"""		5517683	1					
ANR	5517772	BreakStatement	break ;	278:2:7139:7144	5517683	4	True				
ANR	5517773	Label	case SFT_OUT :	279:1:7147:7159	5517683	5	True				
ANR	5517774	Identifier	SFT_OUT		5517683	0					
ANR	5517775	ExpressionStatement	is_output = true	280:2:7163:7179	5517683	6	True				
ANR	5517776	AssignmentExpression	is_output = true		5517683	0		=			
ANR	5517777	Identifier	is_output		5517683	0					
ANR	5517778	Identifier	true		5517683	1					
ANR	5517779	ExpressionStatement	"phrase = ""standard output"""	281:2:7183:7209	5517683	7	True				
ANR	5517780	AssignmentExpression	"phrase = ""standard output"""		5517683	0		=			
ANR	5517781	Identifier	phrase		5517683	0					
ANR	5517782	PrimaryExpression	"""standard output"""		5517683	1					
ANR	5517783	ExpressionStatement	"stream_name = ""stdout"""	282:2:7213:7235	5517683	8	True				
ANR	5517784	AssignmentExpression	"stream_name = ""stdout"""		5517683	0		=			
ANR	5517785	Identifier	stream_name		5517683	0					
ANR	5517786	PrimaryExpression	"""stdout"""		5517683	1					
ANR	5517787	BreakStatement	break ;	283:2:7239:7244	5517683	9	True				
ANR	5517788	Label	case SFT_ERR :	284:1:7247:7259	5517683	10	True				
ANR	5517789	Identifier	SFT_ERR		5517683	0					
ANR	5517790	ExpressionStatement	is_output = true	285:2:7263:7279	5517683	11	True				
ANR	5517791	AssignmentExpression	is_output = true		5517683	0		=			
ANR	5517792	Identifier	is_output		5517683	0					
ANR	5517793	Identifier	true		5517683	1					
ANR	5517794	ExpressionStatement	"phrase = ""standard error"""	286:2:7283:7308	5517683	12	True				
ANR	5517795	AssignmentExpression	"phrase = ""standard error"""		5517683	0		=			
ANR	5517796	Identifier	phrase		5517683	0					
ANR	5517797	PrimaryExpression	"""standard error"""		5517683	1					
ANR	5517798	ExpressionStatement	"stream_name = ""stderr"""	287:2:7312:7334	5517683	13	True				
ANR	5517799	AssignmentExpression	"stream_name = ""stderr"""		5517683	0		=			
ANR	5517800	Identifier	stream_name		5517683	0					
ANR	5517801	PrimaryExpression	"""stderr"""		5517683	1					
ANR	5517802	BreakStatement	break ;	288:2:7338:7343	5517683	14	True				
ANR	5517803	IfStatement	if ( m_pre_defined_std_fds [ type ] != - 1 || m_pre_defined_std_fnames [ type ] != NULL )		5517683	10					
ANR	5517804	Condition	m_pre_defined_std_fds [ type ] != - 1 || m_pre_defined_std_fnames [ type ] != NULL	295:5:7526:7602	5517683	0	True				
ANR	5517805	OrExpression	m_pre_defined_std_fds [ type ] != - 1 || m_pre_defined_std_fnames [ type ] != NULL		5517683	0		||			
ANR	5517806	EqualityExpression	m_pre_defined_std_fds [ type ] != - 1		5517683	0		!=			
ANR	5517807	ArrayIndexing	m_pre_defined_std_fds [ type ]		5517683	0					
ANR	5517808	Identifier	m_pre_defined_std_fds		5517683	0					
ANR	5517809	Identifier	type		5517683	1					
ANR	5517810	UnaryOperationExpression	- 1		5517683	1					
ANR	5517811	UnaryOperator	-		5517683	0					
ANR	5517812	PrimaryExpression	1		5517683	1					
ANR	5517813	EqualityExpression	m_pre_defined_std_fnames [ type ] != NULL		5517683	1		!=			
ANR	5517814	ArrayIndexing	m_pre_defined_std_fnames [ type ]		5517683	0					
ANR	5517815	Identifier	m_pre_defined_std_fnames		5517683	0					
ANR	5517816	Identifier	type		5517683	1					
ANR	5517817	Identifier	NULL		5517683	1					
ANR	5517818	CompoundStatement		47:1:1328:1328	5517683	1					
ANR	5517819	ExpressionStatement	filename = m_pre_defined_std_fnames [ type ]	298:2:7611:7652	5517683	0	True				
ANR	5517820	AssignmentExpression	filename = m_pre_defined_std_fnames [ type ]		5517683	0		=			
ANR	5517821	Identifier	filename		5517683	0					
ANR	5517822	ArrayIndexing	m_pre_defined_std_fnames [ type ]		5517683	1					
ANR	5517823	Identifier	m_pre_defined_std_fnames		5517683	0					
ANR	5517824	Identifier	type		5517683	1					
ANR	5517825	ExpressionStatement	* out_fd = m_pre_defined_std_fds [ type ]	299:2:7656:7693	5517683	1	True				
ANR	5517826	AssignmentExpression	* out_fd = m_pre_defined_std_fds [ type ]		5517683	0		=			
ANR	5517827	UnaryOperationExpression	* out_fd		5517683	0					
ANR	5517828	UnaryOperator	*		5517683	0					
ANR	5517829	Identifier	out_fd		5517683	1					
ANR	5517830	ArrayIndexing	m_pre_defined_std_fds [ type ]		5517683	1					
ANR	5517831	Identifier	m_pre_defined_std_fds		5517683	0					
ANR	5517832	Identifier	type		5517683	1					
ANR	5517833	IfStatement	if ( * out_fd != - 1 )		5517683	2					
ANR	5517834	Condition	* out_fd != - 1	300:6:7701:7713	5517683	0	True				
ANR	5517835	EqualityExpression	* out_fd != - 1		5517683	0		!=			
ANR	5517836	UnaryOperationExpression	* out_fd		5517683	0					
ANR	5517837	UnaryOperator	*		5517683	0					
ANR	5517838	Identifier	out_fd		5517683	1					
ANR	5517839	UnaryOperationExpression	- 1		5517683	1					
ANR	5517840	UnaryOperator	-		5517683	0					
ANR	5517841	PrimaryExpression	1		5517683	1					
ANR	5517842	CompoundStatement		50:22:1438:1438	5517683	1					
ANR	5517843	ExpressionStatement	* out_fd = dup ( * out_fd )	303:3:7843:7865	5517683	0	True				
ANR	5517844	AssignmentExpression	* out_fd = dup ( * out_fd )		5517683	0		=			
ANR	5517845	UnaryOperationExpression	* out_fd		5517683	0					
ANR	5517846	UnaryOperator	*		5517683	0					
ANR	5517847	Identifier	out_fd		5517683	1					
ANR	5517848	CallExpression	dup ( * out_fd )		5517683	1					
ANR	5517849	Callee	dup		5517683	0					
ANR	5517850	Identifier	dup		5517683	0					
ANR	5517851	ArgumentList	* out_fd		5517683	1					
ANR	5517852	Argument	* out_fd		5517683	0					
ANR	5517853	UnaryOperationExpression	* out_fd		5517683	0					
ANR	5517854	UnaryOperator	*		5517683	0					
ANR	5517855	Identifier	out_fd		5517683	1					
ANR	5517856	IfStatement	if ( * out_fd == - 1 )		5517683	1					
ANR	5517857	Condition	* out_fd == - 1	304:7:7874:7886	5517683	0	True				
ANR	5517858	EqualityExpression	* out_fd == - 1		5517683	0		==			
ANR	5517859	UnaryOperationExpression	* out_fd		5517683	0					
ANR	5517860	UnaryOperator	*		5517683	0					
ANR	5517861	Identifier	out_fd		5517683	1					
ANR	5517862	UnaryOperationExpression	- 1		5517683	1					
ANR	5517863	UnaryOperator	-		5517683	0					
ANR	5517864	PrimaryExpression	1		5517683	1					
ANR	5517865	CompoundStatement		54:23:1611:1611	5517683	1					
ANR	5517866	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to dup fd %d for %s\\n"" , m_pre_defined_std_fds [ type ] , phrase )"	305:4:7896:7986	5517683	0	True				
ANR	5517867	CallExpression	"dprintf ( D_ALWAYS , ""Failed to dup fd %d for %s\\n"" , m_pre_defined_std_fds [ type ] , phrase )"		5517683	0					
ANR	5517868	Callee	dprintf		5517683	0					
ANR	5517869	Identifier	dprintf		5517683	0					
ANR	5517870	ArgumentList	D_ALWAYS		5517683	1					
ANR	5517871	Argument	D_ALWAYS		5517683	0					
ANR	5517872	Identifier	D_ALWAYS		5517683	0					
ANR	5517873	Argument	"""Failed to dup fd %d for %s\\n"""		5517683	1					
ANR	5517874	PrimaryExpression	"""Failed to dup fd %d for %s\\n"""		5517683	0					
ANR	5517875	Argument	m_pre_defined_std_fds [ type ]		5517683	2					
ANR	5517876	ArrayIndexing	m_pre_defined_std_fds [ type ]		5517683	0					
ANR	5517877	Identifier	m_pre_defined_std_fds		5517683	0					
ANR	5517878	Identifier	type		5517683	1					
ANR	5517879	Argument	phrase		5517683	3					
ANR	5517880	Identifier	phrase		5517683	0					
ANR	5517881	ReturnStatement	return false ;	307:4:7992:8004	5517683	1	True				
ANR	5517882	Identifier	false		5517683	0					
ANR	5517883	ExpressionStatement	wants_stream = false	310:2:8017:8037	5517683	3	True				
ANR	5517884	AssignmentExpression	wants_stream = false		5517683	0		=			
ANR	5517885	Identifier	wants_stream		5517683	0					
ANR	5517886	Identifier	false		5517683	1					
ANR	5517887	ElseStatement	else		5517683	0					
ANR	5517888	IfStatement	if ( attr )		5517683	0					
ANR	5517889	Condition	attr	311:12:8051:8054	5517683	0	True				
ANR	5517890	Identifier	attr		5517683	0					
ANR	5517891	CompoundStatement		61:19:1779:1779	5517683	1					
ANR	5517892	ExpressionStatement	filename = Starter -> jic -> getJobStdFile ( attr )	312:2:8062:8108	5517683	0	True				
ANR	5517893	AssignmentExpression	filename = Starter -> jic -> getJobStdFile ( attr )		5517683	0		=			
ANR	5517894	Identifier	filename		5517683	0					
ANR	5517895	CallExpression	Starter -> jic -> getJobStdFile ( attr )		5517683	1					
ANR	5517896	Callee	Starter -> jic -> getJobStdFile		5517683	0					
ANR	5517897	PtrMemberAccess	Starter -> jic -> getJobStdFile		5517683	0					
ANR	5517898	PtrMemberAccess	Starter -> jic		5517683	0					
ANR	5517899	Identifier	Starter		5517683	0					
ANR	5517900	Identifier	jic		5517683	1					
ANR	5517901	Identifier	getJobStdFile		5517683	1					
ANR	5517902	ArgumentList	attr		5517683	1					
ANR	5517903	Argument	attr		5517683	0					
ANR	5517904	Identifier	attr		5517683	0					
ANR	5517905	ExpressionStatement	wants_stream = Starter -> jic -> streamStdFile ( attr )	313:2:8112:8162	5517683	1	True				
ANR	5517906	AssignmentExpression	wants_stream = Starter -> jic -> streamStdFile ( attr )		5517683	0		=			
ANR	5517907	Identifier	wants_stream		5517683	0					
ANR	5517908	CallExpression	Starter -> jic -> streamStdFile ( attr )		5517683	1					
ANR	5517909	Callee	Starter -> jic -> streamStdFile		5517683	0					
ANR	5517910	PtrMemberAccess	Starter -> jic -> streamStdFile		5517683	0					
ANR	5517911	PtrMemberAccess	Starter -> jic		5517683	0					
ANR	5517912	Identifier	Starter		5517683	0					
ANR	5517913	Identifier	jic		5517683	1					
ANR	5517914	Identifier	streamStdFile		5517683	1					
ANR	5517915	ArgumentList	attr		5517683	1					
ANR	5517916	Argument	attr		5517683	0					
ANR	5517917	Identifier	attr		5517683	0					
ANR	5517918	ElseStatement	else		5517683	0					
ANR	5517919	CompoundStatement		64:8:1893:1893	5517683	0					
ANR	5517920	SwitchStatement	switch ( type )		5517683	0					
ANR	5517921	Condition	type	315:10:8184:8187	5517683	0	True				
ANR	5517922	Identifier	type		5517683	0					
ANR	5517923	CompoundStatement		65:17:1912:1912	5517683	1					
ANR	5517924	Label	case SFT_IN :	316:2:8195:8206	5517683	0	True				
ANR	5517925	Identifier	SFT_IN		5517683	0					
ANR	5517926	ExpressionStatement	filename = Starter -> jic -> jobInputFilename ( )	317:3:8211:8254	5517683	1	True				
ANR	5517927	AssignmentExpression	filename = Starter -> jic -> jobInputFilename ( )		5517683	0		=			
ANR	5517928	Identifier	filename		5517683	0					
ANR	5517929	CallExpression	Starter -> jic -> jobInputFilename ( )		5517683	1					
ANR	5517930	Callee	Starter -> jic -> jobInputFilename		5517683	0					
ANR	5517931	PtrMemberAccess	Starter -> jic -> jobInputFilename		5517683	0					
ANR	5517932	PtrMemberAccess	Starter -> jic		5517683	0					
ANR	5517933	Identifier	Starter		5517683	0					
ANR	5517934	Identifier	jic		5517683	1					
ANR	5517935	Identifier	jobInputFilename		5517683	1					
ANR	5517936	ArgumentList			5517683	1					
ANR	5517937	ExpressionStatement	wants_stream = Starter -> jic -> streamInput ( )	318:3:8259:8301	5517683	2	True				
ANR	5517938	AssignmentExpression	wants_stream = Starter -> jic -> streamInput ( )		5517683	0		=			
ANR	5517939	Identifier	wants_stream		5517683	0					
ANR	5517940	CallExpression	Starter -> jic -> streamInput ( )		5517683	1					
ANR	5517941	Callee	Starter -> jic -> streamInput		5517683	0					
ANR	5517942	PtrMemberAccess	Starter -> jic -> streamInput		5517683	0					
ANR	5517943	PtrMemberAccess	Starter -> jic		5517683	0					
ANR	5517944	Identifier	Starter		5517683	0					
ANR	5517945	Identifier	jic		5517683	1					
ANR	5517946	Identifier	streamInput		5517683	1					
ANR	5517947	ArgumentList			5517683	1					
ANR	5517948	BreakStatement	break ;	319:3:8306:8311	5517683	3	True				
ANR	5517949	Label	case SFT_OUT :	320:2:8315:8327	5517683	4	True				
ANR	5517950	Identifier	SFT_OUT		5517683	0					
ANR	5517951	ExpressionStatement	filename = Starter -> jic -> jobOutputFilename ( )	321:3:8332:8376	5517683	5	True				
ANR	5517952	AssignmentExpression	filename = Starter -> jic -> jobOutputFilename ( )		5517683	0		=			
ANR	5517953	Identifier	filename		5517683	0					
ANR	5517954	CallExpression	Starter -> jic -> jobOutputFilename ( )		5517683	1					
ANR	5517955	Callee	Starter -> jic -> jobOutputFilename		5517683	0					
ANR	5517956	PtrMemberAccess	Starter -> jic -> jobOutputFilename		5517683	0					
ANR	5517957	PtrMemberAccess	Starter -> jic		5517683	0					
ANR	5517958	Identifier	Starter		5517683	0					
ANR	5517959	Identifier	jic		5517683	1					
ANR	5517960	Identifier	jobOutputFilename		5517683	1					
ANR	5517961	ArgumentList			5517683	1					
ANR	5517962	ExpressionStatement	wants_stream = Starter -> jic -> streamOutput ( )	322:3:8381:8424	5517683	6	True				
ANR	5517963	AssignmentExpression	wants_stream = Starter -> jic -> streamOutput ( )		5517683	0		=			
ANR	5517964	Identifier	wants_stream		5517683	0					
ANR	5517965	CallExpression	Starter -> jic -> streamOutput ( )		5517683	1					
ANR	5517966	Callee	Starter -> jic -> streamOutput		5517683	0					
ANR	5517967	PtrMemberAccess	Starter -> jic -> streamOutput		5517683	0					
ANR	5517968	PtrMemberAccess	Starter -> jic		5517683	0					
ANR	5517969	Identifier	Starter		5517683	0					
ANR	5517970	Identifier	jic		5517683	1					
ANR	5517971	Identifier	streamOutput		5517683	1					
ANR	5517972	ArgumentList			5517683	1					
ANR	5517973	BreakStatement	break ;	323:3:8429:8434	5517683	7	True				
ANR	5517974	Label	case SFT_ERR :	324:2:8438:8450	5517683	8	True				
ANR	5517975	Identifier	SFT_ERR		5517683	0					
ANR	5517976	ExpressionStatement	filename = Starter -> jic -> jobErrorFilename ( )	325:3:8455:8498	5517683	9	True				
ANR	5517977	AssignmentExpression	filename = Starter -> jic -> jobErrorFilename ( )		5517683	0		=			
ANR	5517978	Identifier	filename		5517683	0					
ANR	5517979	CallExpression	Starter -> jic -> jobErrorFilename ( )		5517683	1					
ANR	5517980	Callee	Starter -> jic -> jobErrorFilename		5517683	0					
ANR	5517981	PtrMemberAccess	Starter -> jic -> jobErrorFilename		5517683	0					
ANR	5517982	PtrMemberAccess	Starter -> jic		5517683	0					
ANR	5517983	Identifier	Starter		5517683	0					
ANR	5517984	Identifier	jic		5517683	1					
ANR	5517985	Identifier	jobErrorFilename		5517683	1					
ANR	5517986	ArgumentList			5517683	1					
ANR	5517987	ExpressionStatement	wants_stream = Starter -> jic -> streamError ( )	326:3:8503:8545	5517683	10	True				
ANR	5517988	AssignmentExpression	wants_stream = Starter -> jic -> streamError ( )		5517683	0		=			
ANR	5517989	Identifier	wants_stream		5517683	0					
ANR	5517990	CallExpression	Starter -> jic -> streamError ( )		5517683	1					
ANR	5517991	Callee	Starter -> jic -> streamError		5517683	0					
ANR	5517992	PtrMemberAccess	Starter -> jic -> streamError		5517683	0					
ANR	5517993	PtrMemberAccess	Starter -> jic		5517683	0					
ANR	5517994	Identifier	Starter		5517683	0					
ANR	5517995	Identifier	jic		5517683	1					
ANR	5517996	Identifier	streamError		5517683	1					
ANR	5517997	ArgumentList			5517683	1					
ANR	5517998	BreakStatement	break ;	327:3:8550:8555	5517683	11	True				
ANR	5517999	IfStatement	if ( ! filename && * out_fd == - 1 )		5517683	11					
ANR	5518000	Condition	! filename && * out_fd == - 1	331:5:8570:8596	5517683	0	True				
ANR	5518001	AndExpression	! filename && * out_fd == - 1		5517683	0		&&			
ANR	5518002	UnaryOperationExpression	! filename		5517683	0					
ANR	5518003	UnaryOperator	!		5517683	0					
ANR	5518004	Identifier	filename		5517683	1					
ANR	5518005	EqualityExpression	* out_fd == - 1		5517683	1		==			
ANR	5518006	UnaryOperationExpression	* out_fd		5517683	0					
ANR	5518007	UnaryOperator	*		5517683	0					
ANR	5518008	Identifier	out_fd		5517683	1					
ANR	5518009	UnaryOperationExpression	- 1		5517683	1					
ANR	5518010	UnaryOperator	-		5517683	0					
ANR	5518011	PrimaryExpression	1		5517683	1					
ANR	5518012	CompoundStatement		81:34:2320:2320	5517683	1					
ANR	5518013	ExpressionStatement	filename = NULL_FILE	337:2:8897:8917	5517683	0	True				
ANR	5518014	AssignmentExpression	filename = NULL_FILE		5517683	0		=			
ANR	5518015	Identifier	filename		5517683	0					
ANR	5518016	Identifier	NULL_FILE		5517683	1					
ANR	5518017	ExpressionStatement	is_null_file = true	338:2:8921:8940	5517683	1	True				
ANR	5518018	AssignmentExpression	is_null_file = true		5517683	0		=			
ANR	5518019	Identifier	is_null_file		5517683	0					
ANR	5518020	Identifier	true		5517683	1					
ANR	5518021	IfStatement	if ( wants_stream && ! is_null_file )		5517683	12					
ANR	5518022	Condition	wants_stream && ! is_null_file	348:5:9170:9199	5517683	0	True				
ANR	5518023	AndExpression	wants_stream && ! is_null_file		5517683	0		&&			
ANR	5518024	Identifier	wants_stream		5517683	0					
ANR	5518025	UnaryOperationExpression	! is_null_file		5517683	1					
ANR	5518026	UnaryOperator	!		5517683	0					
ANR	5518027	Identifier	is_null_file		5517683	1					
ANR	5518028	CompoundStatement		98:38:2924:2924	5517683	1					
ANR	5518029	Statement	StreamHandler	349:2:9207:9219	5517683	0	True				
ANR	5518030	Statement	*	349:16:9221:9221	5517683	1	True				
ANR	5518031	Statement	handler	349:17:9222:9228	5517683	2	True				
ANR	5518032	Statement	=	349:25:9230:9230	5517683	3	True				
ANR	5518033	Statement	new	349:27:9232:9234	5517683	4	True				
ANR	5518034	ExpressionStatement	StreamHandler	349:31:9236:9249	5517683	5	True				
ANR	5518035	Identifier	StreamHandler		5517683	0					
ANR	5518036	IfStatement	"if ( ! handler -> Init ( filename , stream_name , is_output ) )"		5517683	6					
ANR	5518037	Condition	"! handler -> Init ( filename , stream_name , is_output )"	350:6:9257:9304	5517683	0	True				
ANR	5518038	UnaryOperationExpression	"! handler -> Init ( filename , stream_name , is_output )"		5517683	0					
ANR	5518039	UnaryOperator	!		5517683	0					
ANR	5518040	CallExpression	"handler -> Init ( filename , stream_name , is_output )"		5517683	1					
ANR	5518041	Callee	handler -> Init		5517683	0					
ANR	5518042	PtrMemberAccess	handler -> Init		5517683	0					
ANR	5518043	Identifier	handler		5517683	0					
ANR	5518044	Identifier	Init		5517683	1					
ANR	5518045	ArgumentList	filename		5517683	1					
ANR	5518046	Argument	filename		5517683	0					
ANR	5518047	Identifier	filename		5517683	0					
ANR	5518048	Argument	stream_name		5517683	1					
ANR	5518049	Identifier	stream_name		5517683	0					
ANR	5518050	Argument	is_output		5517683	2					
ANR	5518051	Identifier	is_output		5517683	0					
ANR	5518052	CompoundStatement		101:3:3034:3050	5517683	1					
ANR	5518053	IdentifierDeclStatement	MyString err_msg ;	351:3:9313:9329	5517683	0	True				
ANR	5518054	IdentifierDecl	err_msg		5517683	0					
ANR	5518055	IdentifierDeclType	MyString		5517683	0					
ANR	5518056	Identifier	err_msg		5517683	1					
ANR	5518057	ExpressionStatement	"err_msg . sprintf ( ""unable to establish %s stream"" , phrase )"	352:3:9334:9392	5517683	1	True				
ANR	5518058	CallExpression	"err_msg . sprintf ( ""unable to establish %s stream"" , phrase )"		5517683	0					
ANR	5518059	Callee	err_msg . sprintf		5517683	0					
ANR	5518060	MemberAccess	err_msg . sprintf		5517683	0					
ANR	5518061	Identifier	err_msg		5517683	0					
ANR	5518062	Identifier	sprintf		5517683	1					
ANR	5518063	ArgumentList	"""unable to establish %s stream"""		5517683	1					
ANR	5518064	Argument	"""unable to establish %s stream"""		5517683	0					
ANR	5518065	PrimaryExpression	"""unable to establish %s stream"""		5517683	0					
ANR	5518066	Argument	phrase		5517683	1					
ANR	5518067	Identifier	phrase		5517683	0					
ANR	5518068	ExpressionStatement	"Starter -> jic -> notifyStarterError ( err_msg . Value ( ) , true , is_output ? CONDOR_HOLD_CODE_UnableToOpenOutputStream : CONDOR_HOLD_CODE_UnableToOpenInputStream , 0 )"	353:3:9397:9581	5517683	2	True				
ANR	5518069	CallExpression	"Starter -> jic -> notifyStarterError ( err_msg . Value ( ) , true , is_output ? CONDOR_HOLD_CODE_UnableToOpenOutputStream : CONDOR_HOLD_CODE_UnableToOpenInputStream , 0 )"		5517683	0					
ANR	5518070	Callee	Starter -> jic -> notifyStarterError		5517683	0					
ANR	5518071	PtrMemberAccess	Starter -> jic -> notifyStarterError		5517683	0					
ANR	5518072	PtrMemberAccess	Starter -> jic		5517683	0					
ANR	5518073	Identifier	Starter		5517683	0					
ANR	5518074	Identifier	jic		5517683	1					
ANR	5518075	Identifier	notifyStarterError		5517683	1					
ANR	5518076	ArgumentList	err_msg . Value ( )		5517683	1					
ANR	5518077	Argument	err_msg . Value ( )		5517683	0					
ANR	5518078	CallExpression	err_msg . Value ( )		5517683	0					
ANR	5518079	Callee	err_msg . Value		5517683	0					
ANR	5518080	MemberAccess	err_msg . Value		5517683	0					
ANR	5518081	Identifier	err_msg		5517683	0					
ANR	5518082	Identifier	Value		5517683	1					
ANR	5518083	ArgumentList			5517683	1					
ANR	5518084	Argument	true		5517683	1					
ANR	5518085	Identifier	true		5517683	0					
ANR	5518086	Argument	is_output ? CONDOR_HOLD_CODE_UnableToOpenOutputStream : CONDOR_HOLD_CODE_UnableToOpenInputStream		5517683	2					
ANR	5518087	ConditionalExpression	is_output ? CONDOR_HOLD_CODE_UnableToOpenOutputStream : CONDOR_HOLD_CODE_UnableToOpenInputStream		5517683	0					
ANR	5518088	Condition	is_output		5517683	0					
ANR	5518089	Identifier	is_output		5517683	0					
ANR	5518090	Identifier	CONDOR_HOLD_CODE_UnableToOpenOutputStream		5517683	1					
ANR	5518091	Identifier	CONDOR_HOLD_CODE_UnableToOpenInputStream		5517683	2					
ANR	5518092	Argument	0		5517683	3					
ANR	5518093	PrimaryExpression	0		5517683	0					
ANR	5518094	ReturnStatement	return false ;	356:3:9586:9598	5517683	3	True				
ANR	5518095	Identifier	false		5517683	0					
ANR	5518096	ExpressionStatement	* out_fd = handler -> GetJobPipe ( )	358:2:9606:9637	5517683	7	True				
ANR	5518097	AssignmentExpression	* out_fd = handler -> GetJobPipe ( )		5517683	0		=			
ANR	5518098	UnaryOperationExpression	* out_fd		5517683	0					
ANR	5518099	UnaryOperator	*		5517683	0					
ANR	5518100	Identifier	out_fd		5517683	1					
ANR	5518101	CallExpression	handler -> GetJobPipe ( )		5517683	1					
ANR	5518102	Callee	handler -> GetJobPipe		5517683	0					
ANR	5518103	PtrMemberAccess	handler -> GetJobPipe		5517683	0					
ANR	5518104	Identifier	handler		5517683	0					
ANR	5518105	Identifier	GetJobPipe		5517683	1					
ANR	5518106	ArgumentList			5517683	1					
ANR	5518107	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s: streaming from remote file %s\\n"" , log_header , filename )"	359:2:9641:9726	5517683	8	True				
ANR	5518108	CallExpression	"dprintf ( D_ALWAYS , ""%s: streaming from remote file %s\\n"" , log_header , filename )"		5517683	0					
ANR	5518109	Callee	dprintf		5517683	0					
ANR	5518110	Identifier	dprintf		5517683	0					
ANR	5518111	ArgumentList	D_ALWAYS		5517683	1					
ANR	5518112	Argument	D_ALWAYS		5517683	0					
ANR	5518113	Identifier	D_ALWAYS		5517683	0					
ANR	5518114	Argument	"""%s: streaming from remote file %s\\n"""		5517683	1					
ANR	5518115	PrimaryExpression	"""%s: streaming from remote file %s\\n"""		5517683	0					
ANR	5518116	Argument	log_header		5517683	2					
ANR	5518117	Identifier	log_header		5517683	0					
ANR	5518118	Argument	filename		5517683	3					
ANR	5518119	Identifier	filename		5517683	0					
ANR	5518120	ReturnStatement	return true ;	361:2:9730:9741	5517683	9	True				
ANR	5518121	Identifier	true		5517683	0					
ANR	5518122	IfStatement	if ( allow_dash && ( filename [ 0 ] == '-' ) && ! filename [ 1 ] )		5517683	13					
ANR	5518123	Condition	allow_dash && ( filename [ 0 ] == '-' ) && ! filename [ 1 ]	367:5:9867:9916	5517683	0	True				
ANR	5518124	AndExpression	allow_dash && ( filename [ 0 ] == '-' ) && ! filename [ 1 ]		5517683	0		&&			
ANR	5518125	Identifier	allow_dash		5517683	0					
ANR	5518126	AndExpression	( filename [ 0 ] == '-' ) && ! filename [ 1 ]		5517683	1		&&			
ANR	5518127	EqualityExpression	filename [ 0 ] == '-'		5517683	0		==			
ANR	5518128	ArrayIndexing	filename [ 0 ]		5517683	0					
ANR	5518129	Identifier	filename		5517683	0					
ANR	5518130	PrimaryExpression	0		5517683	1					
ANR	5518131	PrimaryExpression	'-'		5517683	1					
ANR	5518132	UnaryOperationExpression	! filename [ 1 ]		5517683	1					
ANR	5518133	UnaryOperator	!		5517683	0					
ANR	5518134	ArrayIndexing	filename [ 1 ]		5517683	1					
ANR	5518135	Identifier	filename		5517683	0					
ANR	5518136	PrimaryExpression	1		5517683	1					
ANR	5518137	CompoundStatement		118:1:3642:3642	5517683	1					
ANR	5518138	SwitchStatement	switch ( type )		5517683	0					
ANR	5518139	Condition	type	370:10:9960:9963	5517683	0	True				
ANR	5518140	Identifier	type		5517683	0					
ANR	5518141	CompoundStatement		120:17:3688:3688	5517683	1					
ANR	5518142	Label	case SFT_IN :	371:2:9971:9982	5517683	0	True				
ANR	5518143	Identifier	SFT_IN		5517683	0					
ANR	5518144	ExpressionStatement	* out_fd = Starter -> starterStdinFd ( )	372:3:9987:10022	5517683	1	True				
ANR	5518145	AssignmentExpression	* out_fd = Starter -> starterStdinFd ( )		5517683	0		=			
ANR	5518146	UnaryOperationExpression	* out_fd		5517683	0					
ANR	5518147	UnaryOperator	*		5517683	0					
ANR	5518148	Identifier	out_fd		5517683	1					
ANR	5518149	CallExpression	Starter -> starterStdinFd ( )		5517683	1					
ANR	5518150	Callee	Starter -> starterStdinFd		5517683	0					
ANR	5518151	PtrMemberAccess	Starter -> starterStdinFd		5517683	0					
ANR	5518152	Identifier	Starter		5517683	0					
ANR	5518153	Identifier	starterStdinFd		5517683	1					
ANR	5518154	ArgumentList			5517683	1					
ANR	5518155	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s: using STDIN of %s\\n"" , log_header , get_mySubSystem ( ) -> getName ( ) )"	373:3:10027:10121	5517683	2	True				
ANR	5518156	CallExpression	"dprintf ( D_ALWAYS , ""%s: using STDIN of %s\\n"" , log_header , get_mySubSystem ( ) -> getName ( ) )"		5517683	0					
ANR	5518157	Callee	dprintf		5517683	0					
ANR	5518158	Identifier	dprintf		5517683	0					
ANR	5518159	ArgumentList	D_ALWAYS		5517683	1					
ANR	5518160	Argument	D_ALWAYS		5517683	0					
ANR	5518161	Identifier	D_ALWAYS		5517683	0					
ANR	5518162	Argument	"""%s: using STDIN of %s\\n"""		5517683	1					
ANR	5518163	PrimaryExpression	"""%s: using STDIN of %s\\n"""		5517683	0					
ANR	5518164	Argument	log_header		5517683	2					
ANR	5518165	Identifier	log_header		5517683	0					
ANR	5518166	Argument	get_mySubSystem ( ) -> getName ( )		5517683	3					
ANR	5518167	CallExpression	get_mySubSystem ( ) -> getName ( )		5517683	0					
ANR	5518168	Callee	get_mySubSystem ( ) -> getName		5517683	0					
ANR	5518169	PtrMemberAccess	get_mySubSystem ( ) -> getName		5517683	0					
ANR	5518170	CallExpression	get_mySubSystem ( )		5517683	0					
ANR	5518171	Callee	get_mySubSystem		5517683	0					
ANR	5518172	Identifier	get_mySubSystem		5517683	0					
ANR	5518173	ArgumentList			5517683	1					
ANR	5518174	Identifier	getName		5517683	1					
ANR	5518175	ArgumentList			5517683	1					
ANR	5518176	BreakStatement	break ;	375:3:10126:10131	5517683	3	True				
ANR	5518177	Label	case SFT_OUT :	376:2:10135:10147	5517683	4	True				
ANR	5518178	Identifier	SFT_OUT		5517683	0					
ANR	5518179	ExpressionStatement	* out_fd = Starter -> starterStdoutFd ( )	377:3:10152:10188	5517683	5	True				
ANR	5518180	AssignmentExpression	* out_fd = Starter -> starterStdoutFd ( )		5517683	0		=			
ANR	5518181	UnaryOperationExpression	* out_fd		5517683	0					
ANR	5518182	UnaryOperator	*		5517683	0					
ANR	5518183	Identifier	out_fd		5517683	1					
ANR	5518184	CallExpression	Starter -> starterStdoutFd ( )		5517683	1					
ANR	5518185	Callee	Starter -> starterStdoutFd		5517683	0					
ANR	5518186	PtrMemberAccess	Starter -> starterStdoutFd		5517683	0					
ANR	5518187	Identifier	Starter		5517683	0					
ANR	5518188	Identifier	starterStdoutFd		5517683	1					
ANR	5518189	ArgumentList			5517683	1					
ANR	5518190	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s: using STDOUT of %s\\n"" , log_header , get_mySubSystem ( ) -> getName ( ) )"	378:3:10193:10288	5517683	6	True				
ANR	5518191	CallExpression	"dprintf ( D_ALWAYS , ""%s: using STDOUT of %s\\n"" , log_header , get_mySubSystem ( ) -> getName ( ) )"		5517683	0					
ANR	5518192	Callee	dprintf		5517683	0					
ANR	5518193	Identifier	dprintf		5517683	0					
ANR	5518194	ArgumentList	D_ALWAYS		5517683	1					
ANR	5518195	Argument	D_ALWAYS		5517683	0					
ANR	5518196	Identifier	D_ALWAYS		5517683	0					
ANR	5518197	Argument	"""%s: using STDOUT of %s\\n"""		5517683	1					
ANR	5518198	PrimaryExpression	"""%s: using STDOUT of %s\\n"""		5517683	0					
ANR	5518199	Argument	log_header		5517683	2					
ANR	5518200	Identifier	log_header		5517683	0					
ANR	5518201	Argument	get_mySubSystem ( ) -> getName ( )		5517683	3					
ANR	5518202	CallExpression	get_mySubSystem ( ) -> getName ( )		5517683	0					
ANR	5518203	Callee	get_mySubSystem ( ) -> getName		5517683	0					
ANR	5518204	PtrMemberAccess	get_mySubSystem ( ) -> getName		5517683	0					
ANR	5518205	CallExpression	get_mySubSystem ( )		5517683	0					
ANR	5518206	Callee	get_mySubSystem		5517683	0					
ANR	5518207	Identifier	get_mySubSystem		5517683	0					
ANR	5518208	ArgumentList			5517683	1					
ANR	5518209	Identifier	getName		5517683	1					
ANR	5518210	ArgumentList			5517683	1					
ANR	5518211	BreakStatement	break ;	380:3:10293:10298	5517683	7	True				
ANR	5518212	Label	case SFT_ERR :	381:2:10302:10314	5517683	8	True				
ANR	5518213	Identifier	SFT_ERR		5517683	0					
ANR	5518214	ExpressionStatement	* out_fd = Starter -> starterStderrFd ( )	382:3:10319:10355	5517683	9	True				
ANR	5518215	AssignmentExpression	* out_fd = Starter -> starterStderrFd ( )		5517683	0		=			
ANR	5518216	UnaryOperationExpression	* out_fd		5517683	0					
ANR	5518217	UnaryOperator	*		5517683	0					
ANR	5518218	Identifier	out_fd		5517683	1					
ANR	5518219	CallExpression	Starter -> starterStderrFd ( )		5517683	1					
ANR	5518220	Callee	Starter -> starterStderrFd		5517683	0					
ANR	5518221	PtrMemberAccess	Starter -> starterStderrFd		5517683	0					
ANR	5518222	Identifier	Starter		5517683	0					
ANR	5518223	Identifier	starterStderrFd		5517683	1					
ANR	5518224	ArgumentList			5517683	1					
ANR	5518225	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s: using STDERR of %s\\n"" , log_header , get_mySubSystem ( ) -> getName ( ) )"	383:3:10360:10455	5517683	10	True				
ANR	5518226	CallExpression	"dprintf ( D_ALWAYS , ""%s: using STDERR of %s\\n"" , log_header , get_mySubSystem ( ) -> getName ( ) )"		5517683	0					
ANR	5518227	Callee	dprintf		5517683	0					
ANR	5518228	Identifier	dprintf		5517683	0					
ANR	5518229	ArgumentList	D_ALWAYS		5517683	1					
ANR	5518230	Argument	D_ALWAYS		5517683	0					
ANR	5518231	Identifier	D_ALWAYS		5517683	0					
ANR	5518232	Argument	"""%s: using STDERR of %s\\n"""		5517683	1					
ANR	5518233	PrimaryExpression	"""%s: using STDERR of %s\\n"""		5517683	0					
ANR	5518234	Argument	log_header		5517683	2					
ANR	5518235	Identifier	log_header		5517683	0					
ANR	5518236	Argument	get_mySubSystem ( ) -> getName ( )		5517683	3					
ANR	5518237	CallExpression	get_mySubSystem ( ) -> getName ( )		5517683	0					
ANR	5518238	Callee	get_mySubSystem ( ) -> getName		5517683	0					
ANR	5518239	PtrMemberAccess	get_mySubSystem ( ) -> getName		5517683	0					
ANR	5518240	CallExpression	get_mySubSystem ( )		5517683	0					
ANR	5518241	Callee	get_mySubSystem		5517683	0					
ANR	5518242	Identifier	get_mySubSystem		5517683	0					
ANR	5518243	ArgumentList			5517683	1					
ANR	5518244	Identifier	getName		5517683	1					
ANR	5518245	ArgumentList			5517683	1					
ANR	5518246	BreakStatement	break ;	385:3:10460:10465	5517683	11	True				
ANR	5518247	ReturnStatement	return true ;	387:2:10473:10484	5517683	1	True				
ANR	5518248	Identifier	true		5517683	0					
ANR	5518249	ExpressionStatement	* out_name = filename	393:1:10646:10666	5517683	14	True				
ANR	5518250	AssignmentExpression	* out_name = filename		5517683	0		=			
ANR	5518251	UnaryOperationExpression	* out_name		5517683	0					
ANR	5518252	UnaryOperator	*		5517683	0					
ANR	5518253	Identifier	out_name		5517683	1					
ANR	5518254	Identifier	filename		5517683	1					
ANR	5518255	ReturnStatement	return true ;	394:1:10669:10680	5517683	15	True				
ANR	5518256	Identifier	true		5517683	0					
ANR	5518257	ReturnType	bool		5517683	1					
ANR	5518258	Identifier	UserProc :: getStdFile		5517683	2					
ANR	5518259	ParameterList	"std_file_type type , const char * attr , bool allow_dash , const char * log_header , int * out_fd , MyString * out_name"		5517683	3					
ANR	5518260	Parameter	std_file_type type	245:22:6056:6073	5517683	0	True				
ANR	5518261	ParameterType	std_file_type		5517683	0					
ANR	5518262	Identifier	type		5517683	1					
ANR	5518263	Parameter	const char * attr	246:22:6098:6113	5517683	1	True				
ANR	5518264	ParameterType	const char *		5517683	0					
ANR	5518265	Identifier	attr		5517683	1					
ANR	5518266	Parameter	bool allow_dash	247:22:6138:6152	5517683	2	True				
ANR	5518267	ParameterType	bool		5517683	0					
ANR	5518268	Identifier	allow_dash		5517683	1					
ANR	5518269	Parameter	const char * log_header	248:22:6177:6198	5517683	3	True				
ANR	5518270	ParameterType	const char *		5517683	0					
ANR	5518271	Identifier	log_header		5517683	1					
ANR	5518272	Parameter	int * out_fd	249:22:6223:6233	5517683	4	True				
ANR	5518273	ParameterType	int *		5517683	0					
ANR	5518274	Identifier	out_fd		5517683	1					
ANR	5518275	Parameter	MyString * out_name	250:22:6258:6275	5517683	5	True				
ANR	5518276	ParameterType	MyString *		5517683	0					
ANR	5518277	Identifier	out_name		5517683	1					
ANR	5518278	CFGEntryNode	ENTRY		5517683		True				
ANR	5518279	CFGExitNode	EXIT		5517683		True				
ANR	5518280	Symbol	m_pre_defined_std_fds		5517683						
ANR	5518281	Symbol	handler		5517683						
ANR	5518282	Symbol	type		5517683						
ANR	5518283	Symbol	log_header		5517683						
ANR	5518284	Symbol	is_output		5517683						
ANR	5518285	Symbol	CONDOR_HOLD_CODE_UnableToOpenOutputStream		5517683						
ANR	5518286	Symbol	stream_name		5517683						
ANR	5518287	Symbol	* m_pre_defined_std_fnames		5517683						
ANR	5518288	Symbol	Starter -> jic -> jobInputFilename		5517683						
ANR	5518289	Symbol	NULL		5517683						
ANR	5518290	Symbol	Starter -> starterStdinFd		5517683						
ANR	5518291	Symbol	Starter -> jic -> jobErrorFilename		5517683						
ANR	5518292	Symbol	Starter -> starterStderrFd		5517683						
ANR	5518293	Symbol	m_pre_defined_std_fnames		5517683						
ANR	5518294	Symbol	* m_pre_defined_std_fds		5517683						
ANR	5518295	Symbol	filename		5517683						
ANR	5518296	Symbol	phrase		5517683						
ANR	5518297	Symbol	* * Starter		5517683						
ANR	5518298	Symbol	handler -> GetJobPipe		5517683						
ANR	5518299	Symbol	allow_dash		5517683						
ANR	5518300	Symbol	NULL_FILE		5517683						
ANR	5518301	Symbol	true		5517683						
ANR	5518302	Symbol	get_mySubSystem		5517683						
ANR	5518303	Symbol	Starter -> jic -> getJobStdFile		5517683						
ANR	5518304	Symbol	* out_name		5517683						
ANR	5518305	Symbol	Starter -> jic -> streamError		5517683						
ANR	5518306	Symbol	* out_fd		5517683						
ANR	5518307	Symbol	Starter		5517683						
ANR	5518308	Symbol	Starter -> jic -> streamStdFile		5517683						
ANR	5518309	Symbol	* type		5517683						
ANR	5518310	Symbol	attr		5517683						
ANR	5518311	Symbol	is_null_file		5517683						
ANR	5518312	Symbol	Starter -> jic -> streamInput		5517683						
ANR	5518313	Symbol	out_fd		5517683						
ANR	5518314	Symbol	Starter -> jic		5517683						
ANR	5518315	Symbol	wants_stream		5517683						
ANR	5518316	Symbol	get_mySubSystem ( ) -> getName		5517683						
ANR	5518317	Symbol	* get_mySubSystem		5517683						
ANR	5518318	Symbol	out_name		5517683						
ANR	5518319	Symbol	false		5517683						
ANR	5518320	Symbol	D_ALWAYS		5517683						
ANR	5518321	Symbol	Starter -> jic -> jobOutputFilename		5517683						
ANR	5518322	Symbol	Starter -> jic -> streamOutput		5517683						
ANR	5518323	Symbol	CONDOR_HOLD_CODE_UnableToOpenInputStream		5517683						
ANR	5518324	Symbol	err_msg . Value		5517683						
ANR	5518325	Symbol	Starter -> starterStdoutFd		5517683						
ANR	5518326	Symbol	* filename		5517683						
ANR	5518327	Symbol	handler -> Init		5517683						
ANR	5518328	Symbol	err_msg		5517683						
ANR	5518329	Symbol	* Starter		5517683						
ANR	5518330	Symbol	dup		5517683						
ANR	5518331	Symbol	* Starter -> jic		5517683						
ANR	5518332	Symbol	* handler		5517683						
ANR	5518333	Function	UserProc :: openStdFile	397:0:10685:12580							
ANR	5518334	FunctionDef	"UserProc :: openStdFile (std_file_type type , const char * attr , bool allow_dash , const char * log_header)"		5518333	0					
ANR	5518335	CompoundStatement		402:0:10861:12580	5518333	0					
ANR	5518336	IdentifierDeclStatement	int fd ;	404:1:10922:10928	5518333	0	True				
ANR	5518337	IdentifierDecl	fd		5518333	0					
ANR	5518338	IdentifierDeclType	int		5518333	0					
ANR	5518339	Identifier	fd		5518333	1					
ANR	5518340	IdentifierDeclStatement	MyString filename ;	405:1:10931:10948	5518333	1	True				
ANR	5518341	IdentifierDecl	filename		5518333	0					
ANR	5518342	IdentifierDeclType	MyString		5518333	0					
ANR	5518343	Identifier	filename		5518333	1					
ANR	5518344	IfStatement	"if ( ! getStdFile ( type , attr , allow_dash , log_header , & fd , & filename ) )"		5518333	2					
ANR	5518345	Condition	"! getStdFile ( type , attr , allow_dash , log_header , & fd , & filename )"	406:5:10955:11102	5518333	0	True				
ANR	5518346	UnaryOperationExpression	"! getStdFile ( type , attr , allow_dash , log_header , & fd , & filename )"		5518333	0					
ANR	5518347	UnaryOperator	!		5518333	0					
ANR	5518348	CallExpression	"getStdFile ( type , attr , allow_dash , log_header , & fd , & filename )"		5518333	1					
ANR	5518349	Callee	getStdFile		5518333	0					
ANR	5518350	Identifier	getStdFile		5518333	0					
ANR	5518351	ArgumentList	type		5518333	1					
ANR	5518352	Argument	type		5518333	0					
ANR	5518353	Identifier	type		5518333	0					
ANR	5518354	Argument	attr		5518333	1					
ANR	5518355	Identifier	attr		5518333	0					
ANR	5518356	Argument	allow_dash		5518333	2					
ANR	5518357	Identifier	allow_dash		5518333	0					
ANR	5518358	Argument	log_header		5518333	3					
ANR	5518359	Identifier	log_header		5518333	0					
ANR	5518360	Argument	& fd		5518333	4					
ANR	5518361	UnaryOperationExpression	& fd		5518333	0					
ANR	5518362	UnaryOperator	&		5518333	0					
ANR	5518363	Identifier	fd		5518333	1					
ANR	5518364	Argument	& filename		5518333	5					
ANR	5518365	UnaryOperationExpression	& filename		5518333	0					
ANR	5518366	UnaryOperator	&		5518333	0					
ANR	5518367	Identifier	filename		5518333	1					
ANR	5518368	CompoundStatement		11:1:244:244	5518333	1					
ANR	5518369	ReturnStatement	return - 1 ;	413:2:11110:11119	5518333	0	True				
ANR	5518370	UnaryOperationExpression	- 1		5518333	0					
ANR	5518371	UnaryOperator	-		5518333	0					
ANR	5518372	PrimaryExpression	1		5518333	1					
ANR	5518373	IfStatement	if ( fd != - 1 )		5518333	3					
ANR	5518374	Condition	fd != - 1	417:5:11186:11193	5518333	0	True				
ANR	5518375	EqualityExpression	fd != - 1		5518333	0		!=			
ANR	5518376	Identifier	fd		5518333	0					
ANR	5518377	UnaryOperationExpression	- 1		5518333	1					
ANR	5518378	UnaryOperator	-		5518333	0					
ANR	5518379	PrimaryExpression	1		5518333	1					
ANR	5518380	CompoundStatement		16:15:334:334	5518333	1					
ANR	5518381	ReturnStatement	return fd ;	418:2:11200:11209	5518333	0	True				
ANR	5518382	Identifier	fd		5518333	0					
ANR	5518383	IdentifierDeclStatement	bool is_output = ( type != SFT_IN ) ;	423:1:11288:11321	5518333	4	True				
ANR	5518384	IdentifierDecl	is_output = ( type != SFT_IN )		5518333	0					
ANR	5518385	IdentifierDeclType	bool		5518333	0					
ANR	5518386	Identifier	is_output		5518333	1					
ANR	5518387	AssignmentExpression	is_output = ( type != SFT_IN )		5518333	2		=			
ANR	5518388	Identifier	is_output		5518333	0					
ANR	5518389	EqualityExpression	type != SFT_IN		5518333	1		!=			
ANR	5518390	Identifier	type		5518333	0					
ANR	5518391	Identifier	SFT_IN		5518333	1					
ANR	5518392	IfStatement	if ( is_output )		5518333	5					
ANR	5518393	Condition	is_output	424:5:11328:11336	5518333	0	True				
ANR	5518394	Identifier	is_output		5518333	0					
ANR	5518395	CompoundStatement		24:2:482:547	5518333	1					
ANR	5518396	IdentifierDeclStatement	int flags = O_WRONLY | O_CREAT | O_TRUNC | O_APPEND | O_LARGEFILE ;	425:2:11344:11409	5518333	0	True				
ANR	5518397	IdentifierDecl	flags = O_WRONLY | O_CREAT | O_TRUNC | O_APPEND | O_LARGEFILE		5518333	0					
ANR	5518398	IdentifierDeclType	int		5518333	0					
ANR	5518399	Identifier	flags		5518333	1					
ANR	5518400	AssignmentExpression	flags = O_WRONLY | O_CREAT | O_TRUNC | O_APPEND | O_LARGEFILE		5518333	2		=			
ANR	5518401	Identifier	flags		5518333	0					
ANR	5518402	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC | O_APPEND | O_LARGEFILE		5518333	1		|			
ANR	5518403	Identifier	O_WRONLY		5518333	0					
ANR	5518404	InclusiveOrExpression	O_CREAT | O_TRUNC | O_APPEND | O_LARGEFILE		5518333	1		|			
ANR	5518405	Identifier	O_CREAT		5518333	0					
ANR	5518406	InclusiveOrExpression	O_TRUNC | O_APPEND | O_LARGEFILE		5518333	1		|			
ANR	5518407	Identifier	O_TRUNC		5518333	0					
ANR	5518408	InclusiveOrExpression	O_APPEND | O_LARGEFILE		5518333	1		|			
ANR	5518409	Identifier	O_APPEND		5518333	0					
ANR	5518410	Identifier	O_LARGEFILE		5518333	1					
ANR	5518411	ExpressionStatement	"fd = safe_open_wrapper_follow ( filename . Value ( ) , flags , 0666 )"	426:2:11413:11475	5518333	1	True				
ANR	5518412	AssignmentExpression	"fd = safe_open_wrapper_follow ( filename . Value ( ) , flags , 0666 )"		5518333	0		=			
ANR	5518413	Identifier	fd		5518333	0					
ANR	5518414	CallExpression	"safe_open_wrapper_follow ( filename . Value ( ) , flags , 0666 )"		5518333	1					
ANR	5518415	Callee	safe_open_wrapper_follow		5518333	0					
ANR	5518416	Identifier	safe_open_wrapper_follow		5518333	0					
ANR	5518417	ArgumentList	filename . Value ( )		5518333	1					
ANR	5518418	Argument	filename . Value ( )		5518333	0					
ANR	5518419	CallExpression	filename . Value ( )		5518333	0					
ANR	5518420	Callee	filename . Value		5518333	0					
ANR	5518421	MemberAccess	filename . Value		5518333	0					
ANR	5518422	Identifier	filename		5518333	0					
ANR	5518423	Identifier	Value		5518333	1					
ANR	5518424	ArgumentList			5518333	1					
ANR	5518425	Argument	flags		5518333	1					
ANR	5518426	Identifier	flags		5518333	0					
ANR	5518427	Argument	0666		5518333	2					
ANR	5518428	PrimaryExpression	0666		5518333	0					
ANR	5518429	IfStatement	if ( fd < 0 )		5518333	2					
ANR	5518430	Condition	fd < 0	427:6:11483:11488	5518333	0	True				
ANR	5518431	RelationalExpression	fd < 0		5518333	0		<			
ANR	5518432	Identifier	fd		5518333	0					
ANR	5518433	PrimaryExpression	0		5518333	1					
ANR	5518434	CompoundStatement		26:15:630:630	5518333	1					
ANR	5518435	ExpressionStatement	flags &= ~O_TRUNC	429:3:11541:11558	5518333	0	True				
ANR	5518436	AssignmentExpression	flags &= ~O_TRUNC		5518333	0		&=			
ANR	5518437	Identifier	flags		5518333	0					
ANR	5518438	Identifier	~O_TRUNC		5518333	1					
ANR	5518439	ExpressionStatement	"fd = safe_open_wrapper_follow ( filename . Value ( ) , flags , 0666 )"	430:3:11563:11625	5518333	1	True				
ANR	5518440	AssignmentExpression	"fd = safe_open_wrapper_follow ( filename . Value ( ) , flags , 0666 )"		5518333	0		=			
ANR	5518441	Identifier	fd		5518333	0					
ANR	5518442	CallExpression	"safe_open_wrapper_follow ( filename . Value ( ) , flags , 0666 )"		5518333	1					
ANR	5518443	Callee	safe_open_wrapper_follow		5518333	0					
ANR	5518444	Identifier	safe_open_wrapper_follow		5518333	0					
ANR	5518445	ArgumentList	filename . Value ( )		5518333	1					
ANR	5518446	Argument	filename . Value ( )		5518333	0					
ANR	5518447	CallExpression	filename . Value ( )		5518333	0					
ANR	5518448	Callee	filename . Value		5518333	0					
ANR	5518449	MemberAccess	filename . Value		5518333	0					
ANR	5518450	Identifier	filename		5518333	0					
ANR	5518451	Identifier	Value		5518333	1					
ANR	5518452	ArgumentList			5518333	1					
ANR	5518453	Argument	flags		5518333	1					
ANR	5518454	Identifier	flags		5518333	0					
ANR	5518455	Argument	0666		5518333	2					
ANR	5518456	PrimaryExpression	0666		5518333	0					
ANR	5518457	ElseStatement	else		5518333	0					
ANR	5518458	CompoundStatement		31:8:777:777	5518333	0					
ANR	5518459	ExpressionStatement	"fd = safe_open_wrapper_follow ( filename . Value ( ) , O_RDONLY | O_LARGEFILE )"	433:2:11643:11716	5518333	0	True				
ANR	5518460	AssignmentExpression	"fd = safe_open_wrapper_follow ( filename . Value ( ) , O_RDONLY | O_LARGEFILE )"		5518333	0		=			
ANR	5518461	Identifier	fd		5518333	0					
ANR	5518462	CallExpression	"safe_open_wrapper_follow ( filename . Value ( ) , O_RDONLY | O_LARGEFILE )"		5518333	1					
ANR	5518463	Callee	safe_open_wrapper_follow		5518333	0					
ANR	5518464	Identifier	safe_open_wrapper_follow		5518333	0					
ANR	5518465	ArgumentList	filename . Value ( )		5518333	1					
ANR	5518466	Argument	filename . Value ( )		5518333	0					
ANR	5518467	CallExpression	filename . Value ( )		5518333	0					
ANR	5518468	Callee	filename . Value		5518333	0					
ANR	5518469	MemberAccess	filename . Value		5518333	0					
ANR	5518470	Identifier	filename		5518333	0					
ANR	5518471	Identifier	Value		5518333	1					
ANR	5518472	ArgumentList			5518333	1					
ANR	5518473	Argument	O_RDONLY | O_LARGEFILE		5518333	1					
ANR	5518474	InclusiveOrExpression	O_RDONLY | O_LARGEFILE		5518333	0		|			
ANR	5518475	Identifier	O_RDONLY		5518333	0					
ANR	5518476	Identifier	O_LARGEFILE		5518333	1					
ANR	5518477	IfStatement	if ( fd < 0 )		5518333	6					
ANR	5518478	Condition	fd < 0	435:5:11726:11731	5518333	0	True				
ANR	5518479	RelationalExpression	fd < 0		5518333	0		<			
ANR	5518480	Identifier	fd		5518333	0					
ANR	5518481	PrimaryExpression	0		5518333	1					
ANR	5518482	CompoundStatement		38:2:968:986	5518333	1					
ANR	5518483	IdentifierDeclStatement	int open_errno = errno ;	436:2:11739:11761	5518333	0	True				
ANR	5518484	IdentifierDecl	open_errno = errno		5518333	0					
ANR	5518485	IdentifierDeclType	int		5518333	0					
ANR	5518486	Identifier	open_errno		5518333	1					
ANR	5518487	AssignmentExpression	open_errno = errno		5518333	2		=			
ANR	5518488	Identifier	errno		5518333	0					
ANR	5518489	Identifier	errno		5518333	1					
ANR	5518490	IdentifierDeclStatement	char const * errno_str = strerror ( errno ) ;	437:2:11765:11806	5518333	1	True				
ANR	5518491	IdentifierDecl	* errno_str = strerror ( errno )		5518333	0					
ANR	5518492	IdentifierDeclType	char const *		5518333	0					
ANR	5518493	Identifier	errno_str		5518333	1					
ANR	5518494	AssignmentExpression	* errno_str = strerror ( errno )		5518333	2		=			
ANR	5518495	Identifier	errno_str		5518333	0					
ANR	5518496	CallExpression	strerror ( errno )		5518333	1					
ANR	5518497	Callee	strerror		5518333	0					
ANR	5518498	Identifier	strerror		5518333	0					
ANR	5518499	ArgumentList	errno		5518333	1					
ANR	5518500	Argument	errno		5518333	0					
ANR	5518501	Identifier	errno		5518333	0					
ANR	5518502	IdentifierDeclStatement	MyString err_msg ;	438:2:11810:11826	5518333	2	True				
ANR	5518503	IdentifierDecl	err_msg		5518333	0					
ANR	5518504	IdentifierDeclType	MyString		5518333	0					
ANR	5518505	Identifier	err_msg		5518333	1					
ANR	5518506	IdentifierDeclStatement	const char * phrase ;	439:2:11830:11848	5518333	3	True				
ANR	5518507	IdentifierDecl	* phrase		5518333	0					
ANR	5518508	IdentifierDeclType	const char *		5518333	0					
ANR	5518509	Identifier	phrase		5518333	1					
ANR	5518510	IfStatement	if ( type == SFT_IN )		5518333	4					
ANR	5518511	Condition	type == SFT_IN	440:6:11856:11869	5518333	0	True				
ANR	5518512	EqualityExpression	type == SFT_IN		5518333	0		==			
ANR	5518513	Identifier	type		5518333	0					
ANR	5518514	Identifier	SFT_IN		5518333	1					
ANR	5518515	CompoundStatement		39:22:1010:1010	5518333	1					
ANR	5518516	ExpressionStatement	"phrase = ""standard input"""	441:3:11877:11902	5518333	0	True				
ANR	5518517	AssignmentExpression	"phrase = ""standard input"""		5518333	0		=			
ANR	5518518	Identifier	phrase		5518333	0					
ANR	5518519	PrimaryExpression	"""standard input"""		5518333	1					
ANR	5518520	ElseStatement	else		5518333	0					
ANR	5518521	IfStatement	if ( type == SFT_OUT )		5518333	0					
ANR	5518522	Condition	type == SFT_OUT	443:11:11919:11933	5518333	0	True				
ANR	5518523	EqualityExpression	type == SFT_OUT		5518333	0		==			
ANR	5518524	Identifier	type		5518333	0					
ANR	5518525	Identifier	SFT_OUT		5518333	1					
ANR	5518526	CompoundStatement		42:28:1074:1074	5518333	1					
ANR	5518527	ExpressionStatement	"phrase = ""standard output"""	444:3:11941:11967	5518333	0	True				
ANR	5518528	AssignmentExpression	"phrase = ""standard output"""		5518333	0		=			
ANR	5518529	Identifier	phrase		5518333	0					
ANR	5518530	PrimaryExpression	"""standard output"""		5518333	1					
ANR	5518531	ElseStatement	else		5518333	0					
ANR	5518532	CompoundStatement		45:7:1118:1118	5518333	0					
ANR	5518533	ExpressionStatement	"phrase = ""standard error"""	447:3:11985:12010	5518333	0	True				
ANR	5518534	AssignmentExpression	"phrase = ""standard error"""		5518333	0		=			
ANR	5518535	Identifier	phrase		5518333	0					
ANR	5518536	PrimaryExpression	"""standard error"""		5518333	1					
ANR	5518537	ExpressionStatement	"err_msg . sprintf ( ""Failed to open '%s' as %s: %s (errno %d)"" , filename . Value ( ) , phrase , errno_str , errno )"	449:2:12018:12199	5518333	5	True				
ANR	5518538	CallExpression	"err_msg . sprintf ( ""Failed to open '%s' as %s: %s (errno %d)"" , filename . Value ( ) , phrase , errno_str , errno )"		5518333	0					
ANR	5518539	Callee	err_msg . sprintf		5518333	0					
ANR	5518540	MemberAccess	err_msg . sprintf		5518333	0					
ANR	5518541	Identifier	err_msg		5518333	0					
ANR	5518542	Identifier	sprintf		5518333	1					
ANR	5518543	ArgumentList	"""Failed to open '%s' as %s: %s (errno %d)"""		5518333	1					
ANR	5518544	Argument	"""Failed to open '%s' as %s: %s (errno %d)"""		5518333	0					
ANR	5518545	PrimaryExpression	"""Failed to open '%s' as %s: %s (errno %d)"""		5518333	0					
ANR	5518546	Argument	filename . Value ( )		5518333	1					
ANR	5518547	CallExpression	filename . Value ( )		5518333	0					
ANR	5518548	Callee	filename . Value		5518333	0					
ANR	5518549	MemberAccess	filename . Value		5518333	0					
ANR	5518550	Identifier	filename		5518333	0					
ANR	5518551	Identifier	Value		5518333	1					
ANR	5518552	ArgumentList			5518333	1					
ANR	5518553	Argument	phrase		5518333	2					
ANR	5518554	Identifier	phrase		5518333	0					
ANR	5518555	Argument	errno_str		5518333	3					
ANR	5518556	Identifier	errno_str		5518333	0					
ANR	5518557	Argument	errno		5518333	4					
ANR	5518558	Identifier	errno		5518333	0					
ANR	5518559	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , err_msg . Value ( ) )"	454:2:12203:12247	5518333	6	True				
ANR	5518560	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , err_msg . Value ( ) )"		5518333	0					
ANR	5518561	Callee	dprintf		5518333	0					
ANR	5518562	Identifier	dprintf		5518333	0					
ANR	5518563	ArgumentList	D_ALWAYS		5518333	1					
ANR	5518564	Argument	D_ALWAYS		5518333	0					
ANR	5518565	Identifier	D_ALWAYS		5518333	0					
ANR	5518566	Argument	"""%s\\n"""		5518333	1					
ANR	5518567	PrimaryExpression	"""%s\\n"""		5518333	0					
ANR	5518568	Argument	err_msg . Value ( )		5518333	2					
ANR	5518569	CallExpression	err_msg . Value ( )		5518333	0					
ANR	5518570	Callee	err_msg . Value		5518333	0					
ANR	5518571	MemberAccess	err_msg . Value		5518333	0					
ANR	5518572	Identifier	err_msg		5518333	0					
ANR	5518573	Identifier	Value		5518333	1					
ANR	5518574	ArgumentList			5518333	1					
ANR	5518575	ExpressionStatement	"Starter -> jic -> notifyStarterError ( err_msg . Value ( ) , true , is_output ? CONDOR_HOLD_CODE_UnableToOpenOutput : CONDOR_HOLD_CODE_UnableToOpenInput , open_errno )"	455:2:12251:12426	5518333	7	True				
ANR	5518576	CallExpression	"Starter -> jic -> notifyStarterError ( err_msg . Value ( ) , true , is_output ? CONDOR_HOLD_CODE_UnableToOpenOutput : CONDOR_HOLD_CODE_UnableToOpenInput , open_errno )"		5518333	0					
ANR	5518577	Callee	Starter -> jic -> notifyStarterError		5518333	0					
ANR	5518578	PtrMemberAccess	Starter -> jic -> notifyStarterError		5518333	0					
ANR	5518579	PtrMemberAccess	Starter -> jic		5518333	0					
ANR	5518580	Identifier	Starter		5518333	0					
ANR	5518581	Identifier	jic		5518333	1					
ANR	5518582	Identifier	notifyStarterError		5518333	1					
ANR	5518583	ArgumentList	err_msg . Value ( )		5518333	1					
ANR	5518584	Argument	err_msg . Value ( )		5518333	0					
ANR	5518585	CallExpression	err_msg . Value ( )		5518333	0					
ANR	5518586	Callee	err_msg . Value		5518333	0					
ANR	5518587	MemberAccess	err_msg . Value		5518333	0					
ANR	5518588	Identifier	err_msg		5518333	0					
ANR	5518589	Identifier	Value		5518333	1					
ANR	5518590	ArgumentList			5518333	1					
ANR	5518591	Argument	true		5518333	1					
ANR	5518592	Identifier	true		5518333	0					
ANR	5518593	Argument	is_output ? CONDOR_HOLD_CODE_UnableToOpenOutput : CONDOR_HOLD_CODE_UnableToOpenInput		5518333	2					
ANR	5518594	ConditionalExpression	is_output ? CONDOR_HOLD_CODE_UnableToOpenOutput : CONDOR_HOLD_CODE_UnableToOpenInput		5518333	0					
ANR	5518595	Condition	is_output		5518333	0					
ANR	5518596	Identifier	is_output		5518333	0					
ANR	5518597	Identifier	CONDOR_HOLD_CODE_UnableToOpenOutput		5518333	1					
ANR	5518598	Identifier	CONDOR_HOLD_CODE_UnableToOpenInput		5518333	2					
ANR	5518599	Argument	open_errno		5518333	3					
ANR	5518600	Identifier	open_errno		5518333	0					
ANR	5518601	ReturnStatement	return - 1 ;	458:2:12430:12439	5518333	8	True				
ANR	5518602	UnaryOperationExpression	- 1		5518333	0					
ANR	5518603	UnaryOperator	-		5518333	0					
ANR	5518604	PrimaryExpression	1		5518333	1					
ANR	5518605	ExpressionStatement	"dprintf ( ( filename == NULL_FILE ) ? D_FULLDEBUG : D_ALWAYS , ""%s: %s\\n"" , log_header , filename . Value ( ) )"	460:1:12445:12566	5518333	7	True				
ANR	5518606	CallExpression	"dprintf ( ( filename == NULL_FILE ) ? D_FULLDEBUG : D_ALWAYS , ""%s: %s\\n"" , log_header , filename . Value ( ) )"		5518333	0					
ANR	5518607	Callee	dprintf		5518333	0					
ANR	5518608	Identifier	dprintf		5518333	0					
ANR	5518609	ArgumentList	( filename == NULL_FILE ) ? D_FULLDEBUG : D_ALWAYS		5518333	1					
ANR	5518610	Argument	( filename == NULL_FILE ) ? D_FULLDEBUG : D_ALWAYS		5518333	0					
ANR	5518611	ConditionalExpression	( filename == NULL_FILE ) ? D_FULLDEBUG : D_ALWAYS		5518333	0					
ANR	5518612	Condition	filename == NULL_FILE		5518333	0					
ANR	5518613	EqualityExpression	filename == NULL_FILE		5518333	0		==			
ANR	5518614	Identifier	filename		5518333	0					
ANR	5518615	Identifier	NULL_FILE		5518333	1					
ANR	5518616	Identifier	D_FULLDEBUG		5518333	1					
ANR	5518617	Identifier	D_ALWAYS		5518333	2					
ANR	5518618	Argument	"""%s: %s\\n"""		5518333	1					
ANR	5518619	PrimaryExpression	"""%s: %s\\n"""		5518333	0					
ANR	5518620	Argument	log_header		5518333	2					
ANR	5518621	Identifier	log_header		5518333	0					
ANR	5518622	Argument	filename . Value ( )		5518333	3					
ANR	5518623	CallExpression	filename . Value ( )		5518333	0					
ANR	5518624	Callee	filename . Value		5518333	0					
ANR	5518625	MemberAccess	filename . Value		5518333	0					
ANR	5518626	Identifier	filename		5518333	0					
ANR	5518627	Identifier	Value		5518333	1					
ANR	5518628	ArgumentList			5518333	1					
ANR	5518629	ReturnStatement	return fd ;	463:1:12569:12578	5518333	8	True				
ANR	5518630	Identifier	fd		5518333	0					
ANR	5518631	ReturnType	int		5518333	1					
ANR	5518632	Identifier	UserProc :: openStdFile		5518333	2					
ANR	5518633	ParameterList	"std_file_type type , const char * attr , bool allow_dash , const char * log_header"		5518333	3					
ANR	5518634	Parameter	std_file_type type	398:23:10712:10729	5518333	0	True				
ANR	5518635	ParameterType	std_file_type		5518333	0					
ANR	5518636	Identifier	type		5518333	1					
ANR	5518637	Parameter	const char * attr	399:23:10755:10770	5518333	1	True				
ANR	5518638	ParameterType	const char *		5518333	0					
ANR	5518639	Identifier	attr		5518333	1					
ANR	5518640	Parameter	bool allow_dash	400:23:10797:10811	5518333	2	True				
ANR	5518641	ParameterType	bool		5518333	0					
ANR	5518642	Identifier	allow_dash		5518333	1					
ANR	5518643	Parameter	const char * log_header	401:23:10837:10858	5518333	3	True				
ANR	5518644	ParameterType	const char *		5518333	0					
ANR	5518645	Identifier	log_header		5518333	1					
ANR	5518646	CFGEntryNode	ENTRY		5518333		True				
ANR	5518647	CFGExitNode	EXIT		5518333		True				
ANR	5518648	Symbol	O_LARGEFILE		5518333						
ANR	5518649	Symbol	safe_open_wrapper_follow		5518333						
ANR	5518650	Symbol	O_CREAT		5518333						
ANR	5518651	Symbol	getStdFile		5518333						
ANR	5518652	Symbol	flags		5518333						
ANR	5518653	Symbol	type		5518333						
ANR	5518654	Symbol	Starter		5518333						
ANR	5518655	Symbol	log_header		5518333						
ANR	5518656	Symbol	is_output		5518333						
ANR	5518657	Symbol	errno_str		5518333						
ANR	5518658	Symbol	CONDOR_HOLD_CODE_UnableToOpenOutput		5518333						
ANR	5518659	Symbol	attr		5518333						
ANR	5518660	Symbol	open_errno		5518333						
ANR	5518661	Symbol	~O_TRUNC		5518333						
ANR	5518662	Symbol	CONDOR_HOLD_CODE_UnableToOpenInput		5518333						
ANR	5518663	Symbol	Starter -> jic		5518333						
ANR	5518664	Symbol	errno		5518333						
ANR	5518665	Symbol	SFT_IN		5518333						
ANR	5518666	Symbol	D_ALWAYS		5518333						
ANR	5518667	Symbol	& filename		5518333						
ANR	5518668	Symbol	& fd		5518333						
ANR	5518669	Symbol	D_FULLDEBUG		5518333						
ANR	5518670	Symbol	filename . Value		5518333						
ANR	5518671	Symbol	O_APPEND		5518333						
ANR	5518672	Symbol	err_msg . Value		5518333						
ANR	5518673	Symbol	strerror		5518333						
ANR	5518674	Symbol	O_TRUNC		5518333						
ANR	5518675	Symbol	filename		5518333						
ANR	5518676	Symbol	O_RDONLY		5518333						
ANR	5518677	Symbol	phrase		5518333						
ANR	5518678	Symbol	SFT_OUT		5518333						
ANR	5518679	Symbol	err_msg		5518333						
ANR	5518680	Symbol	allow_dash		5518333						
ANR	5518681	Symbol	NULL_FILE		5518333						
ANR	5518682	Symbol	true		5518333						
ANR	5518683	Symbol	* Starter		5518333						
ANR	5518684	Symbol	O_WRONLY		5518333						
ANR	5518685	Symbol	fd		5518333						
ANR	5518686	Function	UserProc :: SetStdFiles	466:0:12583:12931							
ANR	5518687	FunctionDef	"UserProc :: SetStdFiles (int std_fds [ ] , char const * std_fnames [ ])"		5518686	0					
ANR	5518688	CompoundStatement		468:0:12651:12931	5518686	0					
ANR	5518689	IdentifierDeclStatement	int i ;	470:1:12715:12720	5518686	0	True				
ANR	5518690	IdentifierDecl	i		5518686	0					
ANR	5518691	IdentifierDeclType	int		5518686	0					
ANR	5518692	Identifier	i		5518686	1					
ANR	5518693	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		5518686	1					
ANR	5518694	ForInit	i = 0 ;	471:5:12727:12730	5518686	0	True				
ANR	5518695	AssignmentExpression	i = 0		5518686	0		=			
ANR	5518696	Identifier	i		5518686	0					
ANR	5518697	PrimaryExpression	0		5518686	1					
ANR	5518698	Condition	i < 3	471:9:12731:12733	5518686	1	True				
ANR	5518699	RelationalExpression	i < 3		5518686	0		<			
ANR	5518700	Identifier	i		5518686	0					
ANR	5518701	PrimaryExpression	3		5518686	1					
ANR	5518702	PostIncDecOperationExpression	i ++	471:13:12735:12737	5518686	2	True				
ANR	5518703	Identifier	i		5518686	0					
ANR	5518704	IncDec	++		5518686	1					
ANR	5518705	CompoundStatement		4:18:88:88	5518686	3					
ANR	5518706	ExpressionStatement	m_pre_defined_std_fds [ i ] = std_fds [ i ]	472:2:12744:12781	5518686	0	True				
ANR	5518707	AssignmentExpression	m_pre_defined_std_fds [ i ] = std_fds [ i ]		5518686	0		=			
ANR	5518708	ArrayIndexing	m_pre_defined_std_fds [ i ]		5518686	0					
ANR	5518709	Identifier	m_pre_defined_std_fds		5518686	0					
ANR	5518710	Identifier	i		5518686	1					
ANR	5518711	ArrayIndexing	std_fds [ i ]		5518686	1					
ANR	5518712	Identifier	std_fds		5518686	0					
ANR	5518713	Identifier	i		5518686	1					
ANR	5518714	ExpressionStatement	m_pre_defined_std_fname_buf [ i ] = std_fnames [ i ]	473:2:12785:12831	5518686	1	True				
ANR	5518715	AssignmentExpression	m_pre_defined_std_fname_buf [ i ] = std_fnames [ i ]		5518686	0		=			
ANR	5518716	ArrayIndexing	m_pre_defined_std_fname_buf [ i ]		5518686	0					
ANR	5518717	Identifier	m_pre_defined_std_fname_buf		5518686	0					
ANR	5518718	Identifier	i		5518686	1					
ANR	5518719	ArrayIndexing	std_fnames [ i ]		5518686	1					
ANR	5518720	Identifier	std_fnames		5518686	0					
ANR	5518721	Identifier	i		5518686	1					
ANR	5518722	ExpressionStatement	m_pre_defined_std_fnames [ i ] = std_fnames [ i ] ? m_pre_defined_std_fname_buf [ i ] . Value ( ) : NULL	474:2:12835:12926	5518686	2	True				
ANR	5518723	AssignmentExpression	m_pre_defined_std_fnames [ i ] = std_fnames [ i ] ? m_pre_defined_std_fname_buf [ i ] . Value ( ) : NULL		5518686	0		=			
ANR	5518724	ArrayIndexing	m_pre_defined_std_fnames [ i ]		5518686	0					
ANR	5518725	Identifier	m_pre_defined_std_fnames		5518686	0					
ANR	5518726	Identifier	i		5518686	1					
ANR	5518727	ConditionalExpression	std_fnames [ i ] ? m_pre_defined_std_fname_buf [ i ] . Value ( ) : NULL		5518686	1					
ANR	5518728	Condition	std_fnames [ i ]		5518686	0					
ANR	5518729	ArrayIndexing	std_fnames [ i ]		5518686	0					
ANR	5518730	Identifier	std_fnames		5518686	0					
ANR	5518731	Identifier	i		5518686	1					
ANR	5518732	CallExpression	m_pre_defined_std_fname_buf [ i ] . Value ( )		5518686	1					
ANR	5518733	Callee	m_pre_defined_std_fname_buf [ i ] . Value		5518686	0					
ANR	5518734	MemberAccess	m_pre_defined_std_fname_buf [ i ] . Value		5518686	0					
ANR	5518735	ArrayIndexing	m_pre_defined_std_fname_buf [ i ]		5518686	0					
ANR	5518736	Identifier	m_pre_defined_std_fname_buf		5518686	0					
ANR	5518737	Identifier	i		5518686	1					
ANR	5518738	Identifier	Value		5518686	1					
ANR	5518739	ArgumentList			5518686	1					
ANR	5518740	Identifier	NULL		5518686	2					
ANR	5518741	ReturnType	void		5518686	1					
ANR	5518742	Identifier	UserProc :: SetStdFiles		5518686	2					
ANR	5518743	ParameterList	"int std_fds [ ] , char const * std_fnames [ ]"		5518686	3					
ANR	5518744	Parameter	int std_fds [ ]	467:22:12610:12622	5518686	0	True				
ANR	5518745	ParameterType	int [ ]		5518686	0					
ANR	5518746	Identifier	std_fds		5518686	1					
ANR	5518747	Parameter	char const * std_fnames [ ]	467:37:12625:12648	5518686	1	True				
ANR	5518748	ParameterType	char const * [ ]		5518686	0					
ANR	5518749	Identifier	std_fnames		5518686	1					
ANR	5518750	CFGEntryNode	ENTRY		5518686		True				
ANR	5518751	CFGExitNode	EXIT		5518686		True				
ANR	5518752	Symbol	m_pre_defined_std_fds		5518686						
ANR	5518753	Symbol	NULL		5518686						
ANR	5518754	Symbol	i		5518686						
ANR	5518755	Symbol	* std_fds		5518686						
ANR	5518756	Symbol	std_fnames		5518686						
ANR	5518757	Symbol	* m_pre_defined_std_fds		5518686						
ANR	5518758	Symbol	m_pre_defined_std_fnames		5518686						
ANR	5518759	Symbol	* i		5518686						
ANR	5518760	Symbol	std_fds		5518686						
ANR	5518761	Symbol	* m_pre_defined_std_fname_buf		5518686						
ANR	5518762	Symbol	m_pre_defined_std_fname_buf		5518686						
ANR	5518763	Symbol	* m_pre_defined_std_fnames		5518686						
ANR	5518764	Symbol	m_pre_defined_std_fname_buf [ i ] . Value		5518686						
ANR	5518765	Symbol	* std_fnames		5518686						
ANR	5518766	Function	UserProc :: ThisProcRunsAlongsideMainProc	478:0:12934:12998							
ANR	5518767	FunctionDef	UserProc :: ThisProcRunsAlongsideMainProc ()		5518766	0					
ANR	5518768	CompoundStatement		480:0:12981:12998	5518766	0					
ANR	5518769	ReturnStatement	return false ;	481:1:12984:12996	5518766	0	True				
ANR	5518770	Identifier	false		5518766	0					
ANR	5518771	ReturnType	bool		5518766	1					
ANR	5518772	Identifier	UserProc :: ThisProcRunsAlongsideMainProc		5518766	2					
ANR	5518773	ParameterList			5518766	3					
ANR	5518774	CFGEntryNode	ENTRY		5518766		True				
ANR	5518775	CFGExitNode	EXIT		5518766		True				
ANR	5518776	Symbol	false		5518766						
ANR	5518777	Function	UserProc :: getArgv0	484:0:13001:13058							
ANR	5518778	FunctionDef	UserProc :: getArgv0 ()		5518777	0					
ANR	5518779	CompoundStatement		486:0:13035:13058	5518777	0					
ANR	5518780	ReturnStatement	return CONDOR_EXEC ;	487:1:13038:13056	5518777	0	True				
ANR	5518781	Identifier	CONDOR_EXEC		5518777	0					
ANR	5518782	ReturnType	char const *		5518777	1					
ANR	5518783	Identifier	UserProc :: getArgv0		5518777	2					
ANR	5518784	ParameterList			5518777	3					
ANR	5518785	CFGEntryNode	ENTRY		5518777		True				
ANR	5518786	CFGExitNode	EXIT		5518777		True				
ANR	5518787	Symbol	CONDOR_EXEC		5518777						
