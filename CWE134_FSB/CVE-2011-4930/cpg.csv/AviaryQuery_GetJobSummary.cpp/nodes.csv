command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	132150	File	data/converged/CVE-2011-4930_htcondor/AviaryQuery_GetJobSummary.cpp								
ANR	132151	Function	AviaryQuery :: GetJobSummary :: GetJobSummary	23:11:589:1067							
ANR	132152	FunctionDef	AviaryQuery :: GetJobSummary :: GetJobSummary ()		132151	0					
ANR	132153	CompoundStatement		24:8:641:1067	132151	0					
ANR	132154	ExpressionStatement	qname = NULL	27:12:665:677	132151	0	True				
ANR	132155	AssignmentExpression	qname = NULL		132151	0		=			
ANR	132156	Identifier	qname		132151	0					
ANR	132157	Identifier	NULL		132151	1					
ANR	132158	ExpressionStatement	property_Ids = NULL	29:16:704:724	132151	1	True				
ANR	132159	AssignmentExpression	property_Ids = NULL		132151	0		=			
ANR	132160	Identifier	property_Ids		132151	0					
ANR	132161	Identifier	NULL		132151	1					
ANR	132162	ExpressionStatement	isValidIds = false	31:12:753:772	132151	2	True				
ANR	132163	AssignmentExpression	isValidIds = false		132151	0		=			
ANR	132164	Identifier	isValidIds		132151	0					
ANR	132165	Identifier	false		132151	1					
ANR	132166	ExpressionStatement	isValidPartialMatches = false	33:12:795:825	132151	3	True				
ANR	132167	AssignmentExpression	isValidPartialMatches = false		132151	0		=			
ANR	132168	Identifier	isValidPartialMatches		132151	0					
ANR	132169	Identifier	false		132151	1					
ANR	132170	ExpressionStatement	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobSummary"" , ""http://query.aviary.grid.redhat.com"" , NULL )"	35:18:854:1040	132151	4	True				
ANR	132171	AssignmentExpression	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobSummary"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		132151	0		=			
ANR	132172	Identifier	qname		132151	0					
ANR	132173	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobSummary"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		132151	1					
ANR	132174	Callee	axutil_qname_create		132151	0					
ANR	132175	Identifier	axutil_qname_create		132151	0					
ANR	132176	ArgumentList	Environment :: getEnv ( )		132151	1					
ANR	132177	Argument	Environment :: getEnv ( )		132151	0					
ANR	132178	CallExpression	Environment :: getEnv ( )		132151	0					
ANR	132179	Callee	Environment :: getEnv		132151	0					
ANR	132180	Identifier	Environment :: getEnv		132151	0					
ANR	132181	ArgumentList			132151	1					
ANR	132182	Argument	"""GetJobSummary"""		132151	1					
ANR	132183	PrimaryExpression	"""GetJobSummary"""		132151	0					
ANR	132184	Argument	"""http://query.aviary.grid.redhat.com"""		132151	2					
ANR	132185	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		132151	0					
ANR	132186	Argument	NULL		132151	3					
ANR	132187	Identifier	NULL		132151	0					
ANR	132188	Identifier	AviaryQuery :: GetJobSummary :: GetJobSummary		132151	1					
ANR	132189	ParameterList			132151	2					
ANR	132190	CFGEntryNode	ENTRY		132151		True				
ANR	132191	CFGExitNode	EXIT		132151		True				
ANR	132192	Symbol	Environment :: getEnv		132151						
ANR	132193	Symbol	NULL		132151						
ANR	132194	Symbol	property_Ids		132151						
ANR	132195	Symbol	isValidIds		132151						
ANR	132196	Symbol	qname		132151						
ANR	132197	Symbol	false		132151						
ANR	132198	Symbol	axutil_qname_create		132151						
ANR	132199	Symbol	isValidPartialMatches		132151						
ANR	132200	Function	AviaryQuery :: GetJobSummary :: GetJobSummary	42:7:1077:1772							
ANR	132201	FunctionDef	"AviaryQuery :: GetJobSummary :: GetJobSummary (std :: vector < AviaryCommon :: JobID * > * arg_Ids , bool arg_PartialMatches)"		132200	0					
ANR	132202	CompoundStatement		43:8:1195:1772	132200	0					
ANR	132203	ExpressionStatement	qname = NULL	45:19:1230:1242	132200	0	True				
ANR	132204	AssignmentExpression	qname = NULL		132200	0		=			
ANR	132205	Identifier	qname		132200	0					
ANR	132206	Identifier	NULL		132200	1					
ANR	132207	ExpressionStatement	property_Ids = NULL	47:15:1273:1293	132200	1	True				
ANR	132208	AssignmentExpression	property_Ids = NULL		132200	0		=			
ANR	132209	Identifier	property_Ids		132200	0					
ANR	132210	Identifier	NULL		132200	1					
ANR	132211	ExpressionStatement	isValidIds = true	49:12:1321:1339	132200	2	True				
ANR	132212	AssignmentExpression	isValidIds = true		132200	0		=			
ANR	132213	Identifier	isValidIds		132200	0					
ANR	132214	Identifier	true		132200	1					
ANR	132215	ExpressionStatement	isValidPartialMatches = true	51:12:1366:1395	132200	3	True				
ANR	132216	AssignmentExpression	isValidPartialMatches = true		132200	0		=			
ANR	132217	Identifier	isValidPartialMatches		132200	0					
ANR	132218	Identifier	true		132200	1					
ANR	132219	ExpressionStatement	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobSummary"" , ""http://query.aviary.grid.redhat.com"" , NULL )"	53:17:1427:1610	132200	4	True				
ANR	132220	AssignmentExpression	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobSummary"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		132200	0		=			
ANR	132221	Identifier	qname		132200	0					
ANR	132222	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobSummary"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		132200	1					
ANR	132223	Callee	axutil_qname_create		132200	0					
ANR	132224	Identifier	axutil_qname_create		132200	0					
ANR	132225	ArgumentList	Environment :: getEnv ( )		132200	1					
ANR	132226	Argument	Environment :: getEnv ( )		132200	0					
ANR	132227	CallExpression	Environment :: getEnv ( )		132200	0					
ANR	132228	Callee	Environment :: getEnv		132200	0					
ANR	132229	Identifier	Environment :: getEnv		132200	0					
ANR	132230	ArgumentList			132200	1					
ANR	132231	Argument	"""GetJobSummary"""		132200	1					
ANR	132232	PrimaryExpression	"""GetJobSummary"""		132200	0					
ANR	132233	Argument	"""http://query.aviary.grid.redhat.com"""		132200	2					
ANR	132234	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		132200	0					
ANR	132235	Argument	NULL		132200	3					
ANR	132236	Identifier	NULL		132200	0					
ANR	132237	ExpressionStatement	property_Ids = arg_Ids	58:20:1648:1670	132200	5	True				
ANR	132238	AssignmentExpression	property_Ids = arg_Ids		132200	0		=			
ANR	132239	Identifier	property_Ids		132200	0					
ANR	132240	Identifier	arg_Ids		132200	1					
ANR	132241	ExpressionStatement	property_PartialMatches = arg_PartialMatches	60:20:1705:1749	132200	6	True				
ANR	132242	AssignmentExpression	property_PartialMatches = arg_PartialMatches		132200	0		=			
ANR	132243	Identifier	property_PartialMatches		132200	0					
ANR	132244	Identifier	arg_PartialMatches		132200	1					
ANR	132245	Identifier	AviaryQuery :: GetJobSummary :: GetJobSummary		132200	1					
ANR	132246	ParameterList	"std :: vector < AviaryCommon :: JobID * > * arg_Ids , bool arg_PartialMatches"		132200	2					
ANR	132247	Parameter	std :: vector < AviaryCommon :: JobID * > * arg_Ids	42:49:1119:1160	132200	0	True				
ANR	132248	ParameterType	std :: vector < AviaryCommon :: JobID * > *		132200	0					
ANR	132249	Identifier	arg_Ids		132200	1					
ANR	132250	Parameter	bool arg_PartialMatches	42:92:1162:1184	132200	1	True				
ANR	132251	ParameterType	bool		132200	0					
ANR	132252	Identifier	arg_PartialMatches		132200	1					
ANR	132253	CFGEntryNode	ENTRY		132200		True				
ANR	132254	CFGExitNode	EXIT		132200		True				
ANR	132255	Symbol	Environment :: getEnv		132200						
ANR	132256	Symbol	arg_Ids		132200						
ANR	132257	Symbol	NULL		132200						
ANR	132258	Symbol	property_Ids		132200						
ANR	132259	Symbol	isValidIds		132200						
ANR	132260	Symbol	arg_PartialMatches		132200						
ANR	132261	Symbol	qname		132200						
ANR	132262	Symbol	property_PartialMatches		132200						
ANR	132263	Symbol	true		132200						
ANR	132264	Symbol	axutil_qname_create		132200						
ANR	132265	Symbol	isValidPartialMatches		132200						
ANR	132266	Function	AviaryQuery :: GetJobSummary :: ~GetJobSummary	63:8:1782:2089							
ANR	132267	FunctionDef	AviaryQuery :: GetJobSummary :: ~GetJobSummary ()		132266	0					
ANR	132268	CompoundStatement		64:8:1835:2089	132266	0					
ANR	132269	IfStatement	if ( property_Ids )		132266	0					
ANR	132270	Condition	property_Ids	65:16:1853:1864	132266	0	True				
ANR	132271	Identifier	property_Ids		132266	0					
ANR	132272	CompoundStatement		2:30:31:31	132266	1					
ANR	132273	WhileStatement	while ( ! property_Ids -> empty ( ) )		132266	0					
ANR	132274	Condition	! property_Ids -> empty ( )	66:22:1891:1912	132266	0	True				
ANR	132275	UnaryOperationExpression	! property_Ids -> empty ( )		132266	0					
ANR	132276	UnaryOperator	!		132266	0					
ANR	132277	CallExpression	property_Ids -> empty ( )		132266	1					
ANR	132278	Callee	property_Ids -> empty		132266	0					
ANR	132279	PtrMemberAccess	property_Ids -> empty		132266	0					
ANR	132280	Identifier	property_Ids		132266	0					
ANR	132281	Identifier	empty		132266	1					
ANR	132282	ArgumentList			132266	1					
ANR	132283	Statement	delete	66:46:1915:1920	132266	1	True				
ANR	132284	ExpressionStatement	"property_Ids -> back ( ) , property_Ids -> pop_back ( )"	66:53:1922:1968	132266	1	True				
ANR	132285	Expression	"property_Ids -> back ( ) , property_Ids -> pop_back ( )"		132266	0					
ANR	132286	CallExpression	property_Ids -> back ( )		132266	0					
ANR	132287	Callee	property_Ids -> back		132266	0					
ANR	132288	PtrMemberAccess	property_Ids -> back		132266	0					
ANR	132289	Identifier	property_Ids		132266	0					
ANR	132290	Identifier	back		132266	1					
ANR	132291	ArgumentList			132266	1					
ANR	132292	CallExpression	property_Ids -> pop_back ( )		132266	1					
ANR	132293	Callee	property_Ids -> pop_back		132266	0					
ANR	132294	PtrMemberAccess	property_Ids -> pop_back		132266	0					
ANR	132295	Identifier	property_Ids		132266	0					
ANR	132296	Identifier	pop_back		132266	1					
ANR	132297	ArgumentList			132266	1					
ANR	132298	Statement	delete	67:16:1986:1991	132266	2	True				
ANR	132299	ExpressionStatement	property_Ids	67:23:1993:2005	132266	3	True				
ANR	132300	Identifier	property_Ids		132266	0					
ANR	132301	ExpressionStatement	"axutil_qname_free ( qname , Environment :: getEnv ( ) )"	69:12:2033:2079	132266	1	True				
ANR	132302	CallExpression	"axutil_qname_free ( qname , Environment :: getEnv ( ) )"		132266	0					
ANR	132303	Callee	axutil_qname_free		132266	0					
ANR	132304	Identifier	axutil_qname_free		132266	0					
ANR	132305	ArgumentList	qname		132266	1					
ANR	132306	Argument	qname		132266	0					
ANR	132307	Identifier	qname		132266	0					
ANR	132308	Argument	Environment :: getEnv ( )		132266	1					
ANR	132309	CallExpression	Environment :: getEnv ( )		132266	0					
ANR	132310	Callee	Environment :: getEnv		132266	0					
ANR	132311	Identifier	Environment :: getEnv		132266	0					
ANR	132312	ArgumentList			132266	1					
ANR	132313	Identifier	AviaryQuery :: GetJobSummary :: ~GetJobSummary		132266	1					
ANR	132314	ParameterList			132266	2					
ANR	132315	CFGEntryNode	ENTRY		132266		True				
ANR	132316	CFGExitNode	EXIT		132266		True				
ANR	132317	Symbol	Environment :: getEnv		132266						
ANR	132318	Symbol	property_Ids		132266						
ANR	132319	Symbol	* property_Ids		132266						
ANR	132320	Symbol	property_Ids -> empty		132266						
ANR	132321	Symbol	qname		132266						
ANR	132322	Function	AviaryQuery :: GetJobSummary :: deserialize	74:8:2110:12527							
ANR	132323	FunctionDef	"AviaryQuery :: GetJobSummary :: deserialize (axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs)"		132322	0					
ANR	132324	CompoundStatement		76:8:2261:12527	132322	0					
ANR	132325	IdentifierDeclStatement	axiom_node_t * parent = * dp_parent ;	77:10:2273:2306	132322	0	True				
ANR	132326	IdentifierDecl	* parent = * dp_parent		132322	0					
ANR	132327	IdentifierDeclType	axiom_node_t *		132322	0					
ANR	132328	Identifier	parent		132322	1					
ANR	132329	AssignmentExpression	* parent = * dp_parent		132322	2		=			
ANR	132330	Identifier	parent		132322	0					
ANR	132331	UnaryOperationExpression	* dp_parent		132322	1					
ANR	132332	UnaryOperator	*		132322	0					
ANR	132333	Identifier	dp_parent		132322	1					
ANR	132334	IdentifierDeclStatement	bool status = AXIS2_SUCCESS ;	79:10:2329:2356	132322	1	True				
ANR	132335	IdentifierDecl	status = AXIS2_SUCCESS		132322	0					
ANR	132336	IdentifierDeclType	bool		132322	0					
ANR	132337	Identifier	status		132322	1					
ANR	132338	AssignmentExpression	status = AXIS2_SUCCESS		132322	2		=			
ANR	132339	Identifier	AXIS2_SUCCESS		132322	0					
ANR	132340	Identifier	AXIS2_SUCCESS		132322	1					
ANR	132341	IdentifierDeclStatement	axiom_attribute_t * parent_attri = NULL ;	81:10:2379:2417	132322	2	True				
ANR	132342	IdentifierDecl	* parent_attri = NULL		132322	0					
ANR	132343	IdentifierDeclType	axiom_attribute_t *		132322	0					
ANR	132344	Identifier	parent_attri		132322	1					
ANR	132345	AssignmentExpression	* parent_attri = NULL		132322	2		=			
ANR	132346	Identifier	NULL		132322	0					
ANR	132347	Identifier	NULL		132322	1					
ANR	132348	IdentifierDeclStatement	axiom_element_t * parent_element = NULL ;	82:10:2429:2467	132322	3	True				
ANR	132349	IdentifierDecl	* parent_element = NULL		132322	0					
ANR	132350	IdentifierDeclType	axiom_element_t *		132322	0					
ANR	132351	Identifier	parent_element		132322	1					
ANR	132352	AssignmentExpression	* parent_element = NULL		132322	2		=			
ANR	132353	Identifier	NULL		132322	0					
ANR	132354	Identifier	NULL		132322	1					
ANR	132355	IdentifierDeclStatement	axis2_char_t * attrib_text = NULL ;	83:10:2479:2511	132322	4	True				
ANR	132356	IdentifierDecl	* attrib_text = NULL		132322	0					
ANR	132357	IdentifierDeclType	axis2_char_t *		132322	0					
ANR	132358	Identifier	attrib_text		132322	1					
ANR	132359	AssignmentExpression	* attrib_text = NULL		132322	2		=			
ANR	132360	Identifier	NULL		132322	0					
ANR	132361	Identifier	NULL		132322	1					
ANR	132362	IdentifierDeclStatement	axutil_hash_t * attribute_hash = NULL ;	85:10:2524:2560	132322	5	True				
ANR	132363	IdentifierDecl	* attribute_hash = NULL		132322	0					
ANR	132364	IdentifierDeclType	axutil_hash_t *		132322	0					
ANR	132365	Identifier	attribute_hash		132322	1					
ANR	132366	AssignmentExpression	* attribute_hash = NULL		132322	2		=			
ANR	132367	Identifier	NULL		132322	0					
ANR	132368	Identifier	NULL		132322	1					
ANR	132369	IdentifierDeclStatement	const axis2_char_t * text_value = NULL ;	88:9:2584:2621	132322	6	True				
ANR	132370	IdentifierDecl	* text_value = NULL		132322	0					
ANR	132371	IdentifierDeclType	const axis2_char_t *		132322	0					
ANR	132372	Identifier	text_value		132322	1					
ANR	132373	AssignmentExpression	* text_value = NULL		132322	2		=			
ANR	132374	Identifier	NULL		132322	0					
ANR	132375	Identifier	NULL		132322	1					
ANR	132376	IdentifierDeclStatement	axutil_qname_t * mqname = NULL ;	89:9:2632:2661	132322	7	True				
ANR	132377	IdentifierDecl	* mqname = NULL		132322	0					
ANR	132378	IdentifierDeclType	axutil_qname_t *		132322	0					
ANR	132379	Identifier	mqname		132322	1					
ANR	132380	AssignmentExpression	* mqname = NULL		132322	2		=			
ANR	132381	Identifier	NULL		132322	0					
ANR	132382	Identifier	NULL		132322	1					
ANR	132383	IdentifierDeclStatement	int i = 0 ;	91:15:2689:2698	132322	8	True				
ANR	132384	IdentifierDecl	i = 0		132322	0					
ANR	132385	IdentifierDeclType	int		132322	0					
ANR	132386	Identifier	i		132322	1					
ANR	132387	AssignmentExpression	i = 0		132322	2		=			
ANR	132388	Identifier	i		132322	0					
ANR	132389	PrimaryExpression	0		132322	1					
ANR	132390	IdentifierDeclStatement	int sequence_broken = 0 ;	93:15:2728:2751	132322	9	True				
ANR	132391	IdentifierDecl	sequence_broken = 0		132322	0					
ANR	132392	IdentifierDeclType	int		132322	0					
ANR	132393	Identifier	sequence_broken		132322	1					
ANR	132394	AssignmentExpression	sequence_broken = 0		132322	2		=			
ANR	132395	Identifier	sequence_broken		132322	0					
ANR	132396	PrimaryExpression	0		132322	1					
ANR	132397	IdentifierDeclStatement	axiom_node_t * tmp_node = NULL ;	94:15:2768:2797	132322	10	True				
ANR	132398	IdentifierDecl	* tmp_node = NULL		132322	0					
ANR	132399	IdentifierDeclType	axiom_node_t *		132322	0					
ANR	132400	Identifier	tmp_node		132322	1					
ANR	132401	AssignmentExpression	* tmp_node = NULL		132322	2		=			
ANR	132402	Identifier	NULL		132322	0					
ANR	132403	Identifier	NULL		132322	1					
ANR	132404	IdentifierDeclStatement	axutil_qname_t * element_qname = NULL ;	96:12:2824:2860	132322	11	True				
ANR	132405	IdentifierDecl	* element_qname = NULL		132322	0					
ANR	132406	IdentifierDeclType	axutil_qname_t *		132322	0					
ANR	132407	Identifier	element_qname		132322	1					
ANR	132408	AssignmentExpression	* element_qname = NULL		132322	2		=			
ANR	132409	Identifier	NULL		132322	0					
ANR	132410	Identifier	NULL		132322	1					
ANR	132411	IdentifierDeclStatement	axiom_node_t * first_node = NULL ;	98:15:2891:2922	132322	12	True				
ANR	132412	IdentifierDecl	* first_node = NULL		132322	0					
ANR	132413	IdentifierDeclType	axiom_node_t *		132322	0					
ANR	132414	Identifier	first_node		132322	1					
ANR	132415	AssignmentExpression	* first_node = NULL		132322	2		=			
ANR	132416	Identifier	NULL		132322	0					
ANR	132417	Identifier	NULL		132322	1					
ANR	132418	IdentifierDeclStatement	bool is_early_node_valid = true ;	99:15:2939:2970	132322	13	True				
ANR	132419	IdentifierDecl	is_early_node_valid = true		132322	0					
ANR	132420	IdentifierDeclType	bool		132322	0					
ANR	132421	Identifier	is_early_node_valid		132322	1					
ANR	132422	AssignmentExpression	is_early_node_valid = true		132322	2		=			
ANR	132423	Identifier	true		132322	0					
ANR	132424	Identifier	true		132322	1					
ANR	132425	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	100:15:2987:3020	132322	14	True				
ANR	132426	IdentifierDecl	* current_node = NULL		132322	0					
ANR	132427	IdentifierDeclType	axiom_node_t *		132322	0					
ANR	132428	Identifier	current_node		132322	1					
ANR	132429	AssignmentExpression	* current_node = NULL		132322	2		=			
ANR	132430	Identifier	NULL		132322	0					
ANR	132431	Identifier	NULL		132322	1					
ANR	132432	IdentifierDeclStatement	axiom_element_t * current_element = NULL ;	101:15:3037:3076	132322	15	True				
ANR	132433	IdentifierDecl	* current_element = NULL		132322	0					
ANR	132434	IdentifierDeclType	axiom_element_t *		132322	0					
ANR	132435	Identifier	current_element		132322	1					
ANR	132436	AssignmentExpression	* current_element = NULL		132322	2		=			
ANR	132437	Identifier	NULL		132322	0					
ANR	132438	Identifier	NULL		132322	1					
ANR	132439	WhileStatement	"while ( parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		132322	16					
ANR	132440	Condition	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	104:20:3126:3207	132322	0	True				
ANR	132441	AndExpression	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		132322	0		&&			
ANR	132442	Identifier	parent		132322	0					
ANR	132443	EqualityExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		132322	1		!=			
ANR	132444	CallExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) )"		132322	0					
ANR	132445	Callee	axiom_node_get_node_type		132322	0					
ANR	132446	Identifier	axiom_node_get_node_type		132322	0					
ANR	132447	ArgumentList	parent		132322	1					
ANR	132448	Argument	parent		132322	0					
ANR	132449	Identifier	parent		132322	0					
ANR	132450	Argument	Environment :: getEnv ( )		132322	1					
ANR	132451	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132452	Callee	Environment :: getEnv		132322	0					
ANR	132453	Identifier	Environment :: getEnv		132322	0					
ANR	132454	ArgumentList			132322	1					
ANR	132455	Identifier	AXIOM_ELEMENT		132322	1					
ANR	132456	CompoundStatement		30:14:962:962	132322	1					
ANR	132457	ExpressionStatement	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"	106:18:3244:3311	132322	0	True				
ANR	132458	AssignmentExpression	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		132322	0		=			
ANR	132459	Identifier	parent		132322	0					
ANR	132460	CallExpression	"axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		132322	1					
ANR	132461	Callee	axiom_node_get_next_sibling		132322	0					
ANR	132462	Identifier	axiom_node_get_next_sibling		132322	0					
ANR	132463	ArgumentList	parent		132322	1					
ANR	132464	Argument	parent		132322	0					
ANR	132465	Identifier	parent		132322	0					
ANR	132466	Argument	Environment :: getEnv ( )		132322	1					
ANR	132467	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132468	Callee	Environment :: getEnv		132322	0					
ANR	132469	Identifier	Environment :: getEnv		132322	0					
ANR	132470	ArgumentList			132322	1					
ANR	132471	IfStatement	if ( NULL == parent )		132322	17					
ANR	132472	Condition	NULL == parent	108:18:3347:3360	132322	0	True				
ANR	132473	EqualityExpression	NULL == parent		132322	0		==			
ANR	132474	Identifier	NULL		132322	0					
ANR	132475	Identifier	parent		132322	1					
ANR	132476	CompoundStatement		34:14:1115:1115	132322	1					
ANR	132477	ReturnStatement	return AXIS2_FAILURE ;	110:16:3398:3418	132322	0	True				
ANR	132478	Identifier	AXIS2_FAILURE		132322	0					
ANR	132479	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"	114:20:3472:3567	132322	18	True				
ANR	132480	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		132322	0		=			
ANR	132481	Identifier	current_element		132322	0					
ANR	132482	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		132322	1					
ANR	132483	CastTarget	axiom_element_t *		132322	0					
ANR	132484	CallExpression	"axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		132322	1					
ANR	132485	Callee	axiom_node_get_data_element		132322	0					
ANR	132486	Identifier	axiom_node_get_data_element		132322	0					
ANR	132487	ArgumentList	parent		132322	1					
ANR	132488	Argument	parent		132322	0					
ANR	132489	Identifier	parent		132322	0					
ANR	132490	Argument	Environment :: getEnv ( )		132322	1					
ANR	132491	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132492	Callee	Environment :: getEnv		132322	0					
ANR	132493	Identifier	Environment :: getEnv		132322	0					
ANR	132494	ArgumentList			132322	1					
ANR	132495	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , parent )"	115:20:3589:3669	132322	19	True				
ANR	132496	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , parent )"		132322	0		=			
ANR	132497	Identifier	mqname		132322	0					
ANR	132498	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , parent )"		132322	1					
ANR	132499	Callee	axiom_element_get_qname		132322	0					
ANR	132500	Identifier	axiom_element_get_qname		132322	0					
ANR	132501	ArgumentList	current_element		132322	1					
ANR	132502	Argument	current_element		132322	0					
ANR	132503	Identifier	current_element		132322	0					
ANR	132504	Argument	Environment :: getEnv ( )		132322	1					
ANR	132505	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132506	Callee	Environment :: getEnv		132322	0					
ANR	132507	Identifier	Environment :: getEnv		132322	0					
ANR	132508	ArgumentList			132322	1					
ANR	132509	Argument	parent		132322	2					
ANR	132510	Identifier	parent		132322	0					
ANR	132511	IfStatement	"if ( axutil_qname_equals ( mqname , Environment :: getEnv ( ) , this -> qname ) )"		132322	20					
ANR	132512	Condition	"axutil_qname_equals ( mqname , Environment :: getEnv ( ) , this -> qname )"	116:24:3695:3757	132322	0	True				
ANR	132513	CallExpression	"axutil_qname_equals ( mqname , Environment :: getEnv ( ) , this -> qname )"		132322	0					
ANR	132514	Callee	axutil_qname_equals		132322	0					
ANR	132515	Identifier	axutil_qname_equals		132322	0					
ANR	132516	ArgumentList	mqname		132322	1					
ANR	132517	Argument	mqname		132322	0					
ANR	132518	Identifier	mqname		132322	0					
ANR	132519	Argument	Environment :: getEnv ( )		132322	1					
ANR	132520	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132521	Callee	Environment :: getEnv		132322	0					
ANR	132522	Identifier	Environment :: getEnv		132322	0					
ANR	132523	ArgumentList			132322	1					
ANR	132524	Argument	this -> qname		132322	2					
ANR	132525	PtrMemberAccess	this -> qname		132322	0					
ANR	132526	Identifier	this		132322	0					
ANR	132527	Identifier	qname		132322	1					
ANR	132528	CompoundStatement		42:20:1518:1518	132322	1					
ANR	132529	ExpressionStatement	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"	119:26:3833:3903	132322	0	True				
ANR	132530	AssignmentExpression	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		132322	0		=			
ANR	132531	Identifier	first_node		132322	0					
ANR	132532	CallExpression	"axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		132322	1					
ANR	132533	Callee	axiom_node_get_first_child		132322	0					
ANR	132534	Identifier	axiom_node_get_first_child		132322	0					
ANR	132535	ArgumentList	parent		132322	1					
ANR	132536	Argument	parent		132322	0					
ANR	132537	Identifier	parent		132322	0					
ANR	132538	Argument	Environment :: getEnv ( )		132322	1					
ANR	132539	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132540	Callee	Environment :: getEnv		132322	0					
ANR	132541	Identifier	Environment :: getEnv		132322	0					
ANR	132542	ArgumentList			132322	1					
ANR	132543	ElseStatement	else		132322	0					
ANR	132544	CompoundStatement		48:20:1737:1737	132322	0					
ANR	132545	Statement	WSF_LOG_ERROR_MSG	124:24:4025:4041	132322	0	True				
ANR	132546	Statement	(	124:41:4042:4042	132322	1	True				
ANR	132547	Statement	Environment	124:42:4043:4053	132322	2	True				
ANR	132548	Statement	::	124:53:4054:4055	132322	3	True				
ANR	132549	Statement	getEnv	124:55:4056:4061	132322	4	True				
ANR	132550	Statement	(	124:61:4062:4062	132322	5	True				
ANR	132551	Statement	)	124:62:4063:4063	132322	6	True				
ANR	132552	Statement	->	124:63:4064:4065	132322	7	True				
ANR	132553	Statement	log	124:65:4066:4068	132322	8	True				
ANR	132554	Statement	","	124:68:4069:4069	132322	9	True				
ANR	132555	Statement	WSF_LOG_SI	124:70:4071:4080	132322	10	True				
ANR	132556	Statement	","	124:80:4081:4081	132322	11	True				
ANR	132557	Statement	"""Failed in building adb object for GetJobSummary : """	125:30:4113:4164	132322	12	True				
ANR	132558	Statement	"""Expected %s but returned %s"""	126:30:4196:4224	132322	13	True				
ANR	132559	Statement	","	126:59:4225:4225	132322	14	True				
ANR	132560	Statement	axutil_qname_to_string	127:30:4257:4278	132322	15	True				
ANR	132561	Statement	(	127:52:4279:4279	132322	16	True				
ANR	132562	Statement	qname	127:53:4280:4284	132322	17	True				
ANR	132563	Statement	","	127:58:4285:4285	132322	18	True				
ANR	132564	Statement	Environment	127:60:4287:4297	132322	19	True				
ANR	132565	Statement	::	127:71:4298:4299	132322	20	True				
ANR	132566	Statement	getEnv	127:73:4300:4305	132322	21	True				
ANR	132567	Statement	(	127:79:4306:4306	132322	22	True				
ANR	132568	Statement	)	127:80:4307:4307	132322	23	True				
ANR	132569	Statement	)	127:81:4308:4308	132322	24	True				
ANR	132570	Statement	","	127:82:4309:4309	132322	25	True				
ANR	132571	Statement	axutil_qname_to_string	128:30:4341:4362	132322	26	True				
ANR	132572	Statement	(	128:52:4363:4363	132322	27	True				
ANR	132573	Statement	mqname	128:53:4364:4369	132322	28	True				
ANR	132574	Statement	","	128:59:4370:4370	132322	29	True				
ANR	132575	Statement	Environment	128:61:4372:4382	132322	30	True				
ANR	132576	Statement	::	128:72:4383:4384	132322	31	True				
ANR	132577	Statement	getEnv	128:74:4385:4390	132322	32	True				
ANR	132578	Statement	(	128:80:4391:4391	132322	33	True				
ANR	132579	Statement	)	128:81:4392:4392	132322	34	True				
ANR	132580	Statement	)	128:82:4393:4393	132322	35	True				
ANR	132581	Statement	)	128:83:4394:4394	132322	36	True				
ANR	132582	ExpressionStatement		128:84:4395:4395	132322	37	True				
ANR	132583	ReturnStatement	return AXIS2_FAILURE ;	130:24:4446:4466	132322	38	True				
ANR	132584	Identifier	AXIS2_FAILURE		132322	0					
ANR	132585	ExpressionStatement	"parent_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"	133:17:4528:4622	132322	21	True				
ANR	132586	AssignmentExpression	"parent_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		132322	0		=			
ANR	132587	Identifier	parent_element		132322	0					
ANR	132588	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		132322	1					
ANR	132589	CastTarget	axiom_element_t *		132322	0					
ANR	132590	CallExpression	"axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		132322	1					
ANR	132591	Callee	axiom_node_get_data_element		132322	0					
ANR	132592	Identifier	axiom_node_get_data_element		132322	0					
ANR	132593	ArgumentList	parent		132322	1					
ANR	132594	Argument	parent		132322	0					
ANR	132595	Identifier	parent		132322	0					
ANR	132596	Argument	Environment :: getEnv ( )		132322	1					
ANR	132597	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132598	Callee	Environment :: getEnv		132322	0					
ANR	132599	Identifier	Environment :: getEnv		132322	0					
ANR	132600	ArgumentList			132322	1					
ANR	132601	ExpressionStatement	"attribute_hash = axiom_element_get_all_attributes ( parent_element , Environment :: getEnv ( ) )"	134:17:4641:4729	132322	22	True				
ANR	132602	AssignmentExpression	"attribute_hash = axiom_element_get_all_attributes ( parent_element , Environment :: getEnv ( ) )"		132322	0		=			
ANR	132603	Identifier	attribute_hash		132322	0					
ANR	132604	CallExpression	"axiom_element_get_all_attributes ( parent_element , Environment :: getEnv ( ) )"		132322	1					
ANR	132605	Callee	axiom_element_get_all_attributes		132322	0					
ANR	132606	Identifier	axiom_element_get_all_attributes		132322	0					
ANR	132607	ArgumentList	parent_element		132322	1					
ANR	132608	Argument	parent_element		132322	0					
ANR	132609	Identifier	parent_element		132322	0					
ANR	132610	Argument	Environment :: getEnv ( )		132322	1					
ANR	132611	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132612	Callee	Environment :: getEnv		132322	0					
ANR	132613	Identifier	Environment :: getEnv		132322	0					
ANR	132614	ArgumentList			132322	1					
ANR	132615	CompoundStatement		65:23:2622:2706	132322	23					
ANR	132616	IdentifierDeclStatement	std :: vector < AviaryCommon :: JobID * > * arr_list = new std :: vector < AviaryCommon :: JobID * > ( ) ;	140:23:4884:4968	132322	0	True				
ANR	132617	IdentifierDecl	* arr_list = new std :: vector < AviaryCommon :: JobID * > ( )		132322	0					
ANR	132618	IdentifierDeclType	std :: vector < AviaryCommon :: JobID * > *		132322	0					
ANR	132619	Identifier	arr_list		132322	1					
ANR	132620	AssignmentExpression	* arr_list = new std :: vector < AviaryCommon :: JobID * > ( )		132322	2		=			
ANR	132621	Identifier	arr_list		132322	0					
ANR	132622	UnaryExpression	new std :: vector < AviaryCommon :: JobID * > ( )		132322	1					
ANR	132623	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""ids"" , NULL , NULL )"	150:36:5209:5286	132322	1	True				
ANR	132624	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""ids"" , NULL , NULL )"		132322	0		=			
ANR	132625	Identifier	element_qname		132322	0					
ANR	132626	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""ids"" , NULL , NULL )"		132322	1					
ANR	132627	Callee	axutil_qname_create		132322	0					
ANR	132628	Identifier	axutil_qname_create		132322	0					
ANR	132629	ArgumentList	Environment :: getEnv ( )		132322	1					
ANR	132630	Argument	Environment :: getEnv ( )		132322	0					
ANR	132631	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132632	Callee	Environment :: getEnv		132322	0					
ANR	132633	Identifier	Environment :: getEnv		132322	0					
ANR	132634	ArgumentList			132322	1					
ANR	132635	Argument	"""ids"""		132322	1					
ANR	132636	PrimaryExpression	"""ids"""		132322	0					
ANR	132637	Argument	NULL		132322	2					
ANR	132638	Identifier	NULL		132322	0					
ANR	132639	Argument	NULL		132322	3					
ANR	132640	Identifier	NULL		132322	0					
ANR	132641	ForStatement	"for ( i = 0 , sequence_broken = 0 , current_node = first_node ; ! sequence_broken && current_node != NULL ; )"		132322	2					
ANR	132642	ForInit	"i = 0 , sequence_broken = 0 , current_node = first_node ;"	153:36:5391:5444	132322	0	True				
ANR	132643	Expression	"i = 0 , sequence_broken = 0 , current_node = first_node"		132322	0					
ANR	132644	AssignmentExpression	i = 0		132322	0		=			
ANR	132645	Identifier	i		132322	0					
ANR	132646	PrimaryExpression	0		132322	1					
ANR	132647	Expression	"sequence_broken = 0 , current_node = first_node"		132322	1					
ANR	132648	AssignmentExpression	sequence_broken = 0		132322	0		=			
ANR	132649	Identifier	sequence_broken		132322	0					
ANR	132650	PrimaryExpression	0		132322	1					
ANR	132651	AssignmentExpression	current_node = first_node		132322	1		=			
ANR	132652	Identifier	current_node		132322	0					
ANR	132653	Identifier	first_node		132322	1					
ANR	132654	Condition	! sequence_broken && current_node != NULL	153:91:5446:5485	132322	1	True				
ANR	132655	AndExpression	! sequence_broken && current_node != NULL		132322	0		&&			
ANR	132656	UnaryOperationExpression	! sequence_broken		132322	0					
ANR	132657	UnaryOperator	!		132322	0					
ANR	132658	Identifier	sequence_broken		132322	1					
ANR	132659	EqualityExpression	current_node != NULL		132322	1		!=			
ANR	132660	Identifier	current_node		132322	0					
ANR	132661	Identifier	NULL		132322	1					
ANR	132662	CompoundStatement		80:31:3304:3304	132322	2					
ANR	132663	IfStatement	"if ( axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		132322	0					
ANR	132664	Condition	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	156:37:5605:5682	132322	0	True				
ANR	132665	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		132322	0		!=			
ANR	132666	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		132322	0					
ANR	132667	Callee	axiom_node_get_node_type		132322	0					
ANR	132668	Identifier	axiom_node_get_node_type		132322	0					
ANR	132669	ArgumentList	current_node		132322	1					
ANR	132670	Argument	current_node		132322	0					
ANR	132671	Identifier	current_node		132322	0					
ANR	132672	Argument	Environment :: getEnv ( )		132322	1					
ANR	132673	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132674	Callee	Environment :: getEnv		132322	0					
ANR	132675	Identifier	Environment :: getEnv		132322	0					
ANR	132676	ArgumentList			132322	1					
ANR	132677	Identifier	AXIOM_ELEMENT		132322	1					
ANR	132678	CompoundStatement		82:34:3457:3457	132322	1					
ANR	132679	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	158:37:5758:5836	132322	0	True				
ANR	132680	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		132322	0		=			
ANR	132681	Identifier	current_node		132322	0					
ANR	132682	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		132322	1					
ANR	132683	Callee	axiom_node_get_next_sibling		132322	0					
ANR	132684	Identifier	axiom_node_get_next_sibling		132322	0					
ANR	132685	ArgumentList	current_node		132322	1					
ANR	132686	Argument	current_node		132322	0					
ANR	132687	Identifier	current_node		132322	0					
ANR	132688	Argument	Environment :: getEnv ( )		132322	1					
ANR	132689	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132690	Callee	Environment :: getEnv		132322	0					
ANR	132691	Identifier	Environment :: getEnv		132322	0					
ANR	132692	ArgumentList			132322	1					
ANR	132693	ExpressionStatement	is_early_node_valid = false	159:37:5875:5902	132322	1	True				
ANR	132694	AssignmentExpression	is_early_node_valid = false		132322	0		=			
ANR	132695	Identifier	is_early_node_valid		132322	0					
ANR	132696	Identifier	false		132322	1					
ANR	132697	ContinueStatement	continue ;	160:37:5941:5949	132322	2	True				
ANR	132698	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	163:34:6056:6157	132322	1	True				
ANR	132699	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		132322	0		=			
ANR	132700	Identifier	current_element		132322	0					
ANR	132701	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		132322	1					
ANR	132702	CastTarget	axiom_element_t *		132322	0					
ANR	132703	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		132322	1					
ANR	132704	Callee	axiom_node_get_data_element		132322	0					
ANR	132705	Identifier	axiom_node_get_data_element		132322	0					
ANR	132706	ArgumentList	current_node		132322	1					
ANR	132707	Argument	current_node		132322	0					
ANR	132708	Identifier	current_node		132322	0					
ANR	132709	Argument	Environment :: getEnv ( )		132322	1					
ANR	132710	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132711	Callee	Environment :: getEnv		132322	0					
ANR	132712	Identifier	Environment :: getEnv		132322	0					
ANR	132713	ArgumentList			132322	1					
ANR	132714	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	164:34:6193:6279	132322	2	True				
ANR	132715	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		132322	0		=			
ANR	132716	Identifier	mqname		132322	0					
ANR	132717	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		132322	1					
ANR	132718	Callee	axiom_element_get_qname		132322	0					
ANR	132719	Identifier	axiom_element_get_qname		132322	0					
ANR	132720	ArgumentList	current_element		132322	1					
ANR	132721	Argument	current_element		132322	0					
ANR	132722	Identifier	current_element		132322	0					
ANR	132723	Argument	Environment :: getEnv ( )		132322	1					
ANR	132724	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132725	Callee	Environment :: getEnv		132322	0					
ANR	132726	Identifier	Environment :: getEnv		132322	0					
ANR	132727	ArgumentList			132322	1					
ANR	132728	Argument	current_node		132322	2					
ANR	132729	Identifier	current_node		132322	0					
ANR	132730	IfStatement	"if ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""ids"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		132322	3					
ANR	132731	Condition	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""ids"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"	166:38:6320:6478	132322	0	True				
ANR	132732	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""ids"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		132322	0		||			
ANR	132733	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		132322	0					
ANR	132734	Callee	axutil_qname_equals		132322	0					
ANR	132735	Identifier	axutil_qname_equals		132322	0					
ANR	132736	ArgumentList	element_qname		132322	1					
ANR	132737	Argument	element_qname		132322	0					
ANR	132738	Identifier	element_qname		132322	0					
ANR	132739	Argument	Environment :: getEnv ( )		132322	1					
ANR	132740	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132741	Callee	Environment :: getEnv		132322	0					
ANR	132742	Identifier	Environment :: getEnv		132322	0					
ANR	132743	ArgumentList			132322	1					
ANR	132744	Argument	mqname		132322	2					
ANR	132745	Identifier	mqname		132322	0					
ANR	132746	UnaryOperationExpression	"! axutil_strcmp ( ""ids"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		132322	1					
ANR	132747	UnaryOperator	!		132322	0					
ANR	132748	CallExpression	"axutil_strcmp ( ""ids"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		132322	1					
ANR	132749	Callee	axutil_strcmp		132322	0					
ANR	132750	Identifier	axutil_strcmp		132322	0					
ANR	132751	ArgumentList	"""ids"""		132322	1					
ANR	132752	Argument	"""ids"""		132322	0					
ANR	132753	PrimaryExpression	"""ids"""		132322	0					
ANR	132754	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		132322	1					
ANR	132755	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		132322	0					
ANR	132756	Callee	axiom_element_get_localname		132322	0					
ANR	132757	Identifier	axiom_element_get_localname		132322	0					
ANR	132758	ArgumentList	current_element		132322	1					
ANR	132759	Argument	current_element		132322	0					
ANR	132760	Identifier	current_element		132322	0					
ANR	132761	Argument	Environment :: getEnv ( )		132322	1					
ANR	132762	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132763	Callee	Environment :: getEnv		132322	0					
ANR	132764	Identifier	Environment :: getEnv		132322	0					
ANR	132765	ArgumentList			132322	1					
ANR	132766	CompoundStatement		96:37:4432:4488	132322	1					
ANR	132767	ExpressionStatement	is_early_node_valid = true	169:38:6590:6616	132322	0	True				
ANR	132768	AssignmentExpression	is_early_node_valid = true		132322	0		=			
ANR	132769	Identifier	is_early_node_valid		132322	0					
ANR	132770	Identifier	true		132322	1					
ANR	132771	IdentifierDeclStatement	AviaryCommon :: JobID * element = new AviaryCommon :: JobID ( ) ;	171:37:6694:6750	132322	1	True				
ANR	132772	IdentifierDecl	* element = new AviaryCommon :: JobID ( )		132322	0					
ANR	132773	IdentifierDeclType	AviaryCommon :: JobID *		132322	0					
ANR	132774	Identifier	element		132322	1					
ANR	132775	AssignmentExpression	* element = new AviaryCommon :: JobID ( )		132322	2		=			
ANR	132776	Identifier	element		132322	0					
ANR	132777	UnaryExpression	new AviaryCommon :: JobID ( )		132322	1					
ANR	132778	ExpressionStatement	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"	173:42:6837:6911	132322	2	True				
ANR	132779	AssignmentExpression	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"		132322	0		=			
ANR	132780	Identifier	status		132322	0					
ANR	132781	CallExpression	"element -> deserialize ( & current_node , & is_early_node_valid , false )"		132322	1					
ANR	132782	Callee	element -> deserialize		132322	0					
ANR	132783	PtrMemberAccess	element -> deserialize		132322	0					
ANR	132784	Identifier	element		132322	0					
ANR	132785	Identifier	deserialize		132322	1					
ANR	132786	ArgumentList	& current_node		132322	1					
ANR	132787	Argument	& current_node		132322	0					
ANR	132788	UnaryOperationExpression	& current_node		132322	0					
ANR	132789	UnaryOperator	&		132322	0					
ANR	132790	Identifier	current_node		132322	1					
ANR	132791	Argument	& is_early_node_valid		132322	1					
ANR	132792	UnaryOperationExpression	& is_early_node_valid		132322	0					
ANR	132793	UnaryOperator	&		132322	0					
ANR	132794	Identifier	is_early_node_valid		132322	1					
ANR	132795	Argument	false		132322	2					
ANR	132796	Identifier	false		132322	0					
ANR	132797	IfStatement	if ( AXIS2_FAILURE == status )		132322	3					
ANR	132798	Condition	AXIS2_FAILURE == status	175:45:7001:7024	132322	0	True				
ANR	132799	EqualityExpression	AXIS2_FAILURE == status		132322	0		==			
ANR	132800	Identifier	AXIS2_FAILURE		132322	0					
ANR	132801	Identifier	status		132322	1					
ANR	132802	CompoundStatement		101:42:4807:4807	132322	1					
ANR	132803	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building element ids "" )"	177:7:7078:7169	132322	0	True				
ANR	132804	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building element ids "" )"		132322	0					
ANR	132805	Callee	WSF_LOG_ERROR_MSG		132322	0					
ANR	132806	Identifier	WSF_LOG_ERROR_MSG		132322	0					
ANR	132807	ArgumentList	Environment :: getEnv ( ) -> log		132322	1					
ANR	132808	Argument	Environment :: getEnv ( ) -> log		132322	0					
ANR	132809	PtrMemberAccess	Environment :: getEnv ( ) -> log		132322	0					
ANR	132810	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132811	Callee	Environment :: getEnv		132322	0					
ANR	132812	Identifier	Environment :: getEnv		132322	0					
ANR	132813	ArgumentList			132322	1					
ANR	132814	Identifier	log		132322	1					
ANR	132815	Argument	WSF_LOG_SI		132322	1					
ANR	132816	Identifier	WSF_LOG_SI		132322	0					
ANR	132817	Argument	"""failed in building element ids """		132322	2					
ANR	132818	PrimaryExpression	"""failed in building element ids """		132322	0					
ANR	132819	ElseStatement	else		132322	0					
ANR	132820	CompoundStatement		105:42:5042:5042	132322	0					
ANR	132821	ExpressionStatement	arr_list -> push_back ( element )	181:44:7350:7378	132322	0	True				
ANR	132822	CallExpression	arr_list -> push_back ( element )		132322	0					
ANR	132823	Callee	arr_list -> push_back		132322	0					
ANR	132824	PtrMemberAccess	arr_list -> push_back		132322	0					
ANR	132825	Identifier	arr_list		132322	0					
ANR	132826	Identifier	push_back		132322	1					
ANR	132827	ArgumentList	element		132322	1					
ANR	132828	Argument	element		132322	0					
ANR	132829	Identifier	element		132322	0					
ANR	132830	IfStatement	if ( AXIS2_FAILURE == status )		132322	4					
ANR	132831	Condition	AXIS2_FAILURE == status	185:40:7550:7573	132322	0	True				
ANR	132832	EqualityExpression	AXIS2_FAILURE == status		132322	0		==			
ANR	132833	Identifier	AXIS2_FAILURE		132322	0					
ANR	132834	Identifier	status		132322	1					
ANR	132835	CompoundStatement		111:37:5351:5351	132322	1					
ANR	132836	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for ids "" )"	187:41:7656:7753	132322	0	True				
ANR	132837	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for ids "" )"		132322	0					
ANR	132838	Callee	WSF_LOG_ERROR_MSG		132322	0					
ANR	132839	Identifier	WSF_LOG_ERROR_MSG		132322	0					
ANR	132840	ArgumentList	Environment :: getEnv ( ) -> log		132322	1					
ANR	132841	Argument	Environment :: getEnv ( ) -> log		132322	0					
ANR	132842	PtrMemberAccess	Environment :: getEnv ( ) -> log		132322	0					
ANR	132843	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132844	Callee	Environment :: getEnv		132322	0					
ANR	132845	Identifier	Environment :: getEnv		132322	0					
ANR	132846	ArgumentList			132322	1					
ANR	132847	Identifier	log		132322	1					
ANR	132848	Argument	WSF_LOG_SI		132322	1					
ANR	132849	Identifier	WSF_LOG_SI		132322	0					
ANR	132850	Argument	"""failed in setting the value for ids """		132322	2					
ANR	132851	PrimaryExpression	"""failed in setting the value for ids """		132322	0					
ANR	132852	IfStatement	if ( element_qname )		132322	1					
ANR	132853	Condition	element_qname	188:44:7799:7811	132322	0	True				
ANR	132854	Identifier	element_qname		132322	0					
ANR	132855	CompoundStatement		114:41:5593:5593	132322	1					
ANR	132856	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	190:44:7901:7956	132322	0	True				
ANR	132857	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		132322	0					
ANR	132858	Callee	axutil_qname_free		132322	0					
ANR	132859	Identifier	axutil_qname_free		132322	0					
ANR	132860	ArgumentList	element_qname		132322	1					
ANR	132861	Argument	element_qname		132322	0					
ANR	132862	Identifier	element_qname		132322	0					
ANR	132863	Argument	Environment :: getEnv ( )		132322	1					
ANR	132864	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132865	Callee	Environment :: getEnv		132322	0					
ANR	132866	Identifier	Environment :: getEnv		132322	0					
ANR	132867	ArgumentList			132322	1					
ANR	132868	IfStatement	if ( arr_list )		132322	2					
ANR	132869	Condition	arr_list	192:44:8045:8052	132322	0	True				
ANR	132870	Identifier	arr_list		132322	0					
ANR	132871	CompoundStatement		118:41:5834:5834	132322	1					
ANR	132872	Statement	delete	194:44:8142:8147	132322	0	True				
ANR	132873	ExpressionStatement	arr_list	194:51:8149:8157	132322	1	True				
ANR	132874	Identifier	arr_list		132322	0					
ANR	132875	ReturnStatement	return false ;	196:41:8243:8255	132322	3	True				
ANR	132876	Identifier	false		132322	0					
ANR	132877	ExpressionStatement	i ++	199:37:8334:8337	132322	5	True				
ANR	132878	PostIncDecOperationExpression	i ++		132322	0					
ANR	132879	Identifier	i		132322	0					
ANR	132880	IncDec	++		132322	1					
ANR	132881	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	200:36:8375:8454	132322	6	True				
ANR	132882	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		132322	0		=			
ANR	132883	Identifier	current_node		132322	0					
ANR	132884	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		132322	1					
ANR	132885	Callee	axiom_node_get_next_sibling		132322	0					
ANR	132886	Identifier	axiom_node_get_next_sibling		132322	0					
ANR	132887	ArgumentList	current_node		132322	1					
ANR	132888	Argument	current_node		132322	0					
ANR	132889	Identifier	current_node		132322	0					
ANR	132890	Argument	Environment :: getEnv ( )		132322	1					
ANR	132891	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132892	Callee	Environment :: getEnv		132322	0					
ANR	132893	Identifier	Environment :: getEnv		132322	0					
ANR	132894	ArgumentList			132322	1					
ANR	132895	ElseStatement	else		132322	0					
ANR	132896	CompoundStatement		128:34:6303:6303	132322	0					
ANR	132897	ExpressionStatement	is_early_node_valid = false	204:38:8605:8632	132322	0	True				
ANR	132898	AssignmentExpression	is_early_node_valid = false		132322	0		=			
ANR	132899	Identifier	is_early_node_valid		132322	0					
ANR	132900	Identifier	false		132322	1					
ANR	132901	ExpressionStatement	sequence_broken = 1	205:38:8672:8691	132322	1	True				
ANR	132902	AssignmentExpression	sequence_broken = 1		132322	0		=			
ANR	132903	Identifier	sequence_broken		132322	0					
ANR	132904	PrimaryExpression	1		132322	1					
ANR	132905	IfStatement	if ( i < 0 )		132322	3					
ANR	132906	Condition	i < 0	211:39:8869:8873	132322	0	True				
ANR	132907	RelationalExpression	i < 0		132322	0		<			
ANR	132908	Identifier	i		132322	0					
ANR	132909	PrimaryExpression	0		132322	1					
ANR	132910	CompoundStatement		137:35:6649:6649	132322	1					
ANR	132911	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""ids (@minOccurs = '0') only have %d elements"" , i )"	214:37:9020:9127	132322	0	True				
ANR	132912	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""ids (@minOccurs = '0') only have %d elements"" , i )"		132322	0					
ANR	132913	Callee	WSF_LOG_ERROR_MSG		132322	0					
ANR	132914	Identifier	WSF_LOG_ERROR_MSG		132322	0					
ANR	132915	ArgumentList	Environment :: getEnv ( ) -> log		132322	1					
ANR	132916	Argument	Environment :: getEnv ( ) -> log		132322	0					
ANR	132917	PtrMemberAccess	Environment :: getEnv ( ) -> log		132322	0					
ANR	132918	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132919	Callee	Environment :: getEnv		132322	0					
ANR	132920	Identifier	Environment :: getEnv		132322	0					
ANR	132921	ArgumentList			132322	1					
ANR	132922	Identifier	log		132322	1					
ANR	132923	Argument	WSF_LOG_SI		132322	1					
ANR	132924	Identifier	WSF_LOG_SI		132322	0					
ANR	132925	Argument	"""ids (@minOccurs = '0') only have %d elements"""		132322	2					
ANR	132926	PrimaryExpression	"""ids (@minOccurs = '0') only have %d elements"""		132322	0					
ANR	132927	Argument	i		132322	3					
ANR	132928	Identifier	i		132322	0					
ANR	132929	IfStatement	if ( element_qname )		132322	1					
ANR	132930	Condition	element_qname	215:40:9169:9181	132322	0	True				
ANR	132931	Identifier	element_qname		132322	0					
ANR	132932	CompoundStatement		141:37:6959:6959	132322	1					
ANR	132933	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	217:40:9263:9318	132322	0	True				
ANR	132934	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		132322	0					
ANR	132935	Callee	axutil_qname_free		132322	0					
ANR	132936	Identifier	axutil_qname_free		132322	0					
ANR	132937	ArgumentList	element_qname		132322	1					
ANR	132938	Argument	element_qname		132322	0					
ANR	132939	Identifier	element_qname		132322	0					
ANR	132940	Argument	Environment :: getEnv ( )		132322	1					
ANR	132941	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132942	Callee	Environment :: getEnv		132322	0					
ANR	132943	Identifier	Environment :: getEnv		132322	0					
ANR	132944	ArgumentList			132322	1					
ANR	132945	IfStatement	if ( arr_list )		132322	2					
ANR	132946	Condition	arr_list	219:40:9399:9406	132322	0	True				
ANR	132947	Identifier	arr_list		132322	0					
ANR	132948	CompoundStatement		145:37:7184:7184	132322	1					
ANR	132949	Statement	delete	221:40:9488:9493	132322	0	True				
ANR	132950	ExpressionStatement	arr_list	221:47:9495:9503	132322	1	True				
ANR	132951	Identifier	arr_list		132322	0					
ANR	132952	ReturnStatement	return false ;	223:37:9581:9593	132322	3	True				
ANR	132953	Identifier	false		132322	0					
ANR	132954	IfStatement	if ( 0 == arr_list -> size ( ) )		132322	4					
ANR	132955	Condition	0 == arr_list -> size ( )	227:34:9699:9719	132322	0	True				
ANR	132956	EqualityExpression	0 == arr_list -> size ( )		132322	0		==			
ANR	132957	PrimaryExpression	0		132322	0					
ANR	132958	CallExpression	arr_list -> size ( )		132322	1					
ANR	132959	Callee	arr_list -> size		132322	0					
ANR	132960	PtrMemberAccess	arr_list -> size		132322	0					
ANR	132961	Identifier	arr_list		132322	0					
ANR	132962	Identifier	size		132322	1					
ANR	132963	ArgumentList			132322	1					
ANR	132964	CompoundStatement		153:31:7491:7491	132322	1					
ANR	132965	Statement	delete	229:36:9791:9796	132322	0	True				
ANR	132966	ExpressionStatement	arr_list	229:43:9798:9806	132322	1	True				
ANR	132967	Identifier	arr_list		132322	0					
ANR	132968	ElseStatement	else		132322	0					
ANR	132969	CompoundStatement		157:31:7646:7646	132322	0					
ANR	132970	ExpressionStatement	status = setIds ( arr_list )	233:36:9946:9971	132322	0	True				
ANR	132971	AssignmentExpression	status = setIds ( arr_list )		132322	0		=			
ANR	132972	Identifier	status		132322	0					
ANR	132973	CallExpression	setIds ( arr_list )		132322	1					
ANR	132974	Callee	setIds		132322	0					
ANR	132975	Identifier	setIds		132322	0					
ANR	132976	ArgumentList	arr_list		132322	1					
ANR	132977	Argument	arr_list		132322	0					
ANR	132978	Identifier	arr_list		132322	0					
ANR	132979	IfStatement	if ( element_qname )		132322	24					
ANR	132980	Condition	element_qname	239:21:10115:10127	132322	0	True				
ANR	132981	Identifier	element_qname		132322	0					
ANR	132982	CompoundStatement		165:18:7886:7886	132322	1					
ANR	132983	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	241:21:10171:10226	132322	0	True				
ANR	132984	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		132322	0					
ANR	132985	Callee	axutil_qname_free		132322	0					
ANR	132986	Identifier	axutil_qname_free		132322	0					
ANR	132987	ArgumentList	element_qname		132322	1					
ANR	132988	Argument	element_qname		132322	0					
ANR	132989	Identifier	element_qname		132322	0					
ANR	132990	Argument	Environment :: getEnv ( )		132322	1					
ANR	132991	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	132992	Callee	Environment :: getEnv		132322	0					
ANR	132993	Identifier	Environment :: getEnv		132322	0					
ANR	132994	ArgumentList			132322	1					
ANR	132995	ExpressionStatement	element_qname = NULL	242:21:10249:10269	132322	1	True				
ANR	132996	AssignmentExpression	element_qname = NULL		132322	0		=			
ANR	132997	Identifier	element_qname		132322	0					
ANR	132998	Identifier	NULL		132322	1					
ANR	132999	ExpressionStatement	parent_attri = NULL	247:18:10361:10380	132322	25	True				
ANR	133000	AssignmentExpression	parent_attri = NULL		132322	0		=			
ANR	133001	Identifier	parent_attri		132322	0					
ANR	133002	Identifier	NULL		132322	1					
ANR	133003	ExpressionStatement	attrib_text = NULL	248:18:10400:10418	132322	26	True				
ANR	133004	AssignmentExpression	attrib_text = NULL		132322	0		=			
ANR	133005	Identifier	attrib_text		132322	0					
ANR	133006	Identifier	NULL		132322	1					
ANR	133007	IfStatement	if ( attribute_hash )		132322	27					
ANR	133008	Condition	attribute_hash	249:21:10441:10454	132322	0	True				
ANR	133009	Identifier	attribute_hash		132322	0					
ANR	133010	CompoundStatement		178:23:8320:8335	132322	1					
ANR	133011	IdentifierDeclStatement	axutil_hash_index_t * hi ;	251:23:10500:10523	132322	0	True				
ANR	133012	IdentifierDecl	* hi		132322	0					
ANR	133013	IdentifierDeclType	axutil_hash_index_t *		132322	0					
ANR	133014	Identifier	hi		132322	1					
ANR	133015	IdentifierDeclStatement	void * val ;	252:23:10548:10557	132322	1	True				
ANR	133016	IdentifierDecl	* val		132322	0					
ANR	133017	IdentifierDeclType	void *		132322	0					
ANR	133018	Identifier	val		132322	1					
ANR	133019	IdentifierDeclStatement	const void * key ;	253:23:10582:10597	132322	2	True				
ANR	133020	IdentifierDecl	* key		132322	0					
ANR	133021	IdentifierDeclType	const void *		132322	0					
ANR	133022	Identifier	key		132322	1					
ANR	133023	ForStatement	"for ( hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		132322	3					
ANR	133024	ForInit	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ;"	255:28:10628:10689	132322	0	True				
ANR	133025	AssignmentExpression	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		132322	0		=			
ANR	133026	Identifier	hi		132322	0					
ANR	133027	CallExpression	"axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		132322	1					
ANR	133028	Callee	axutil_hash_first		132322	0					
ANR	133029	Identifier	axutil_hash_first		132322	0					
ANR	133030	ArgumentList	attribute_hash		132322	1					
ANR	133031	Argument	attribute_hash		132322	0					
ANR	133032	Identifier	attribute_hash		132322	0					
ANR	133033	Argument	Environment :: getEnv ( )		132322	1					
ANR	133034	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	133035	Callee	Environment :: getEnv		132322	0					
ANR	133036	Identifier	Environment :: getEnv		132322	0					
ANR	133037	ArgumentList			132322	1					
ANR	133038	Condition	hi	255:91:10691:10692	132322	1	True				
ANR	133039	Identifier	hi		132322	0					
ANR	133040	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	255:95:10695:10742	132322	2	True	=			
ANR	133041	Identifier	hi		132322	0					
ANR	133042	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		132322	1					
ANR	133043	Callee	axutil_hash_next		132322	0					
ANR	133044	Identifier	axutil_hash_next		132322	0					
ANR	133045	ArgumentList	Environment :: getEnv ( )		132322	1					
ANR	133046	Argument	Environment :: getEnv ( )		132322	0					
ANR	133047	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	133048	Callee	Environment :: getEnv		132322	0					
ANR	133049	Identifier	Environment :: getEnv		132322	0					
ANR	133050	ArgumentList			132322	1					
ANR	133051	Argument	hi		132322	1					
ANR	133052	Identifier	hi		132322	0					
ANR	133053	CompoundStatement		181:23:8506:8506	132322	3					
ANR	133054	ExpressionStatement	"axutil_hash_this ( hi , & key , NULL , & val )"	257:27:10797:10835	132322	0	True				
ANR	133055	CallExpression	"axutil_hash_this ( hi , & key , NULL , & val )"		132322	0					
ANR	133056	Callee	axutil_hash_this		132322	0					
ANR	133057	Identifier	axutil_hash_this		132322	0					
ANR	133058	ArgumentList	hi		132322	1					
ANR	133059	Argument	hi		132322	0					
ANR	133060	Identifier	hi		132322	0					
ANR	133061	Argument	& key		132322	1					
ANR	133062	UnaryOperationExpression	& key		132322	0					
ANR	133063	UnaryOperator	&		132322	0					
ANR	133064	Identifier	key		132322	1					
ANR	133065	Argument	NULL		132322	2					
ANR	133066	Identifier	NULL		132322	0					
ANR	133067	Argument	& val		132322	3					
ANR	133068	UnaryOperationExpression	& val		132322	0					
ANR	133069	UnaryOperator	&		132322	0					
ANR	133070	Identifier	val		132322	1					
ANR	133071	IfStatement	"if ( ! strcmp ( ( axis2_char_t * ) key , ""partialMatches"" ) )"		132322	1					
ANR	133072	Condition	"! strcmp ( ( axis2_char_t * ) key , ""partialMatches"" )"	260:34:10927:10971	132322	0	True				
ANR	133073	UnaryOperationExpression	"! strcmp ( ( axis2_char_t * ) key , ""partialMatches"" )"		132322	0					
ANR	133074	UnaryOperator	!		132322	0					
ANR	133075	CallExpression	"strcmp ( ( axis2_char_t * ) key , ""partialMatches"" )"		132322	1					
ANR	133076	Callee	strcmp		132322	0					
ANR	133077	Identifier	strcmp		132322	0					
ANR	133078	ArgumentList	( axis2_char_t * ) key		132322	1					
ANR	133079	Argument	( axis2_char_t * ) key		132322	0					
ANR	133080	CastExpression	( axis2_char_t * ) key		132322	0					
ANR	133081	CastTarget	axis2_char_t *		132322	0					
ANR	133082	Identifier	key		132322	1					
ANR	133083	Argument	"""partialMatches"""		132322	1					
ANR	133084	PrimaryExpression	"""partialMatches"""		132322	0					
ANR	133085	CompoundStatement		187:31:8773:8773	132322	1					
ANR	133086	ExpressionStatement	parent_attri = ( axiom_attribute_t * ) val	263:35:11072:11110	132322	0	True				
ANR	133087	AssignmentExpression	parent_attri = ( axiom_attribute_t * ) val		132322	0		=			
ANR	133088	Identifier	parent_attri		132322	0					
ANR	133089	CastExpression	( axiom_attribute_t * ) val		132322	1					
ANR	133090	CastTarget	axiom_attribute_t *		132322	0					
ANR	133091	Identifier	val		132322	1					
ANR	133092	BreakStatement	break ;	264:35:11147:11152	132322	1	True				
ANR	133093	IfStatement	if ( parent_attri )		132322	28					
ANR	133094	Condition	parent_attri	269:21:11254:11265	132322	0	True				
ANR	133095	Identifier	parent_attri		132322	0					
ANR	133096	CompoundStatement		195:18:9024:9024	132322	1					
ANR	133097	ExpressionStatement	"attrib_text = axiom_attribute_get_value ( parent_attri , Environment :: getEnv ( ) )"	271:20:11308:11384	132322	0	True				
ANR	133098	AssignmentExpression	"attrib_text = axiom_attribute_get_value ( parent_attri , Environment :: getEnv ( ) )"		132322	0		=			
ANR	133099	Identifier	attrib_text		132322	0					
ANR	133100	CallExpression	"axiom_attribute_get_value ( parent_attri , Environment :: getEnv ( ) )"		132322	1					
ANR	133101	Callee	axiom_attribute_get_value		132322	0					
ANR	133102	Identifier	axiom_attribute_get_value		132322	0					
ANR	133103	ArgumentList	parent_attri		132322	1					
ANR	133104	Argument	parent_attri		132322	0					
ANR	133105	Identifier	parent_attri		132322	0					
ANR	133106	Argument	Environment :: getEnv ( )		132322	1					
ANR	133107	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	133108	Callee	Environment :: getEnv		132322	0					
ANR	133109	Identifier	Environment :: getEnv		132322	0					
ANR	133110	ArgumentList			132322	1					
ANR	133111	ElseStatement	else		132322	0					
ANR	133112	CompoundStatement		199:18:9185:9185	132322	0					
ANR	133113	ExpressionStatement	"attrib_text = axiom_element_get_attribute_value_by_name ( parent_element , Environment :: getEnv ( ) , ""partialMatches"" )"	276:20:11603:11715	132322	0	True				
ANR	133114	AssignmentExpression	"attrib_text = axiom_element_get_attribute_value_by_name ( parent_element , Environment :: getEnv ( ) , ""partialMatches"" )"		132322	0		=			
ANR	133115	Identifier	attrib_text		132322	0					
ANR	133116	CallExpression	"axiom_element_get_attribute_value_by_name ( parent_element , Environment :: getEnv ( ) , ""partialMatches"" )"		132322	1					
ANR	133117	Callee	axiom_element_get_attribute_value_by_name		132322	0					
ANR	133118	Identifier	axiom_element_get_attribute_value_by_name		132322	0					
ANR	133119	ArgumentList	parent_element		132322	1					
ANR	133120	Argument	parent_element		132322	0					
ANR	133121	Identifier	parent_element		132322	0					
ANR	133122	Argument	Environment :: getEnv ( )		132322	1					
ANR	133123	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	133124	Callee	Environment :: getEnv		132322	0					
ANR	133125	Identifier	Environment :: getEnv		132322	0					
ANR	133126	ArgumentList			132322	1					
ANR	133127	Argument	"""partialMatches"""		132322	2					
ANR	133128	PrimaryExpression	"""partialMatches"""		132322	0					
ANR	133129	IfStatement	if ( attrib_text != NULL )		132322	29					
ANR	133130	Condition	attrib_text != NULL	279:21:11759:11777	132322	0	True				
ANR	133131	EqualityExpression	attrib_text != NULL		132322	0		!=			
ANR	133132	Identifier	attrib_text		132322	0					
ANR	133133	Identifier	NULL		132322	1					
ANR	133134	CompoundStatement		205:18:9536:9536	132322	1					
ANR	133135	IfStatement	"if ( ! axutil_strcmp ( attrib_text , ""TRUE"" ) || ! axutil_strcmp ( attrib_text , ""true"" ) )"		132322	0					
ANR	133136	Condition	"! axutil_strcmp ( attrib_text , ""TRUE"" ) || ! axutil_strcmp ( attrib_text , ""true"" )"	283:31:11877:11950	132322	0	True				
ANR	133137	OrExpression	"! axutil_strcmp ( attrib_text , ""TRUE"" ) || ! axutil_strcmp ( attrib_text , ""true"" )"		132322	0		||			
ANR	133138	UnaryOperationExpression	"! axutil_strcmp ( attrib_text , ""TRUE"" )"		132322	0					
ANR	133139	UnaryOperator	!		132322	0					
ANR	133140	CallExpression	"axutil_strcmp ( attrib_text , ""TRUE"" )"		132322	1					
ANR	133141	Callee	axutil_strcmp		132322	0					
ANR	133142	Identifier	axutil_strcmp		132322	0					
ANR	133143	ArgumentList	attrib_text		132322	1					
ANR	133144	Argument	attrib_text		132322	0					
ANR	133145	Identifier	attrib_text		132322	0					
ANR	133146	Argument	"""TRUE"""		132322	1					
ANR	133147	PrimaryExpression	"""TRUE"""		132322	0					
ANR	133148	UnaryOperationExpression	"! axutil_strcmp ( attrib_text , ""true"" )"		132322	1					
ANR	133149	UnaryOperator	!		132322	0					
ANR	133150	CallExpression	"axutil_strcmp ( attrib_text , ""true"" )"		132322	1					
ANR	133151	Callee	axutil_strcmp		132322	0					
ANR	133152	Identifier	axutil_strcmp		132322	0					
ANR	133153	ArgumentList	attrib_text		132322	1					
ANR	133154	Argument	attrib_text		132322	0					
ANR	133155	Identifier	attrib_text		132322	0					
ANR	133156	Argument	"""true"""		132322	1					
ANR	133157	PrimaryExpression	"""true"""		132322	0					
ANR	133158	CompoundStatement		209:27:9718:9718	132322	1					
ANR	133159	ExpressionStatement	setPartialMatches ( true )	285:31:12013:12036	132322	0	True				
ANR	133160	CallExpression	setPartialMatches ( true )		132322	0					
ANR	133161	Callee	setPartialMatches		132322	0					
ANR	133162	Identifier	setPartialMatches		132322	0					
ANR	133163	ArgumentList	true		132322	1					
ANR	133164	Argument	true		132322	0					
ANR	133165	Identifier	true		132322	0					
ANR	133166	ElseStatement	else		132322	0					
ANR	133167	CompoundStatement		213:27:9864:9864	132322	0					
ANR	133168	ExpressionStatement	setPartialMatches ( false )	289:31:12159:12183	132322	0	True				
ANR	133169	CallExpression	setPartialMatches ( false )		132322	0					
ANR	133170	Callee	setPartialMatches		132322	0					
ANR	133171	Identifier	setPartialMatches		132322	0					
ANR	133172	ArgumentList	false		132322	1					
ANR	133173	Argument	false		132322	0					
ANR	133174	Identifier	false		132322	0					
ANR	133175	IfStatement	if ( element_qname )		132322	30					
ANR	133176	Condition	element_qname	294:21:12301:12313	132322	0	True				
ANR	133177	Identifier	element_qname		132322	0					
ANR	133178	CompoundStatement		220:18:10072:10072	132322	1					
ANR	133179	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	296:21:12357:12412	132322	0	True				
ANR	133180	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		132322	0					
ANR	133181	Callee	axutil_qname_free		132322	0					
ANR	133182	Identifier	axutil_qname_free		132322	0					
ANR	133183	ArgumentList	element_qname		132322	1					
ANR	133184	Argument	element_qname		132322	0					
ANR	133185	Identifier	element_qname		132322	0					
ANR	133186	Argument	Environment :: getEnv ( )		132322	1					
ANR	133187	CallExpression	Environment :: getEnv ( )		132322	0					
ANR	133188	Callee	Environment :: getEnv		132322	0					
ANR	133189	Identifier	Environment :: getEnv		132322	0					
ANR	133190	ArgumentList			132322	1					
ANR	133191	ExpressionStatement	element_qname = NULL	297:21:12435:12455	132322	1	True				
ANR	133192	AssignmentExpression	element_qname = NULL		132322	0		=			
ANR	133193	Identifier	element_qname		132322	0					
ANR	133194	Identifier	NULL		132322	1					
ANR	133195	ReturnStatement	return status ;	300:10:12505:12518	132322	31	True				
ANR	133196	Identifier	status		132322	0					
ANR	133197	ReturnType	bool WSF_CALL		132322	1					
ANR	133198	Identifier	AviaryQuery :: GetJobSummary :: deserialize		132322	2					
ANR	133199	ParameterList	"axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs"		132322	3					
ANR	133200	Parameter	axiom_node_t * * dp_parent	75:48:2172:2195	132322	0	True				
ANR	133201	ParameterType	axiom_node_t * *		132322	0					
ANR	133202	Identifier	dp_parent		132322	1					
ANR	133203	Parameter	bool * dp_is_early_node_valid	75:73:2197:2224	132322	1	True				
ANR	133204	ParameterType	bool *		132322	0					
ANR	133205	Identifier	dp_is_early_node_valid		132322	1					
ANR	133206	Parameter	bool dont_care_minoccurs	75:103:2227:2250	132322	2	True				
ANR	133207	ParameterType	bool		132322	0					
ANR	133208	Identifier	dont_care_minoccurs		132322	1					
ANR	133209	CFGEntryNode	ENTRY		132322		True				
ANR	133210	CFGExitNode	EXIT		132322		True				
ANR	133211	Symbol	& val		132322						
ANR	133212	Symbol	parent		132322						
ANR	133213	Symbol	hi		132322						
ANR	133214	Symbol	is_early_node_valid		132322						
ANR	133215	Symbol	current_node		132322						
ANR	133216	Symbol	axiom_element_get_qname		132322						
ANR	133217	Symbol	AXIS2_FAILURE		132322						
ANR	133218	Symbol	parent_attri		132322						
ANR	133219	Symbol	dp_is_early_node_valid		132322						
ANR	133220	Symbol	WSF_LOG_SI		132322						
ANR	133221	Symbol	& current_node		132322						
ANR	133222	Symbol	& is_early_node_valid		132322						
ANR	133223	Symbol	axutil_hash_next		132322						
ANR	133224	Symbol	* arr_list		132322						
ANR	133225	Symbol	AXIS2_SUCCESS		132322						
ANR	133226	Symbol	element		132322						
ANR	133227	Symbol	val		132322						
ANR	133228	Symbol	strcmp		132322						
ANR	133229	Symbol	NULL		132322						
ANR	133230	Symbol	this		132322						
ANR	133231	Symbol	axiom_node_get_node_type		132322						
ANR	133232	Symbol	axiom_element_get_localname		132322						
ANR	133233	Symbol	arr_list -> size		132322						
ANR	133234	Symbol	text_value		132322						
ANR	133235	Symbol	axiom_node_get_next_sibling		132322						
ANR	133236	Symbol	tmp_node		132322						
ANR	133237	Symbol	axutil_strcmp		132322						
ANR	133238	Symbol	true		132322						
ANR	133239	Symbol	axutil_qname_equals		132322						
ANR	133240	Symbol	status		132322						
ANR	133241	Symbol	sequence_broken		132322						
ANR	133242	Symbol	Environment :: getEnv		132322						
ANR	133243	Symbol	& key		132322						
ANR	133244	Symbol	attribute_hash		132322						
ANR	133245	Symbol	mqname		132322						
ANR	133246	Symbol	* element		132322						
ANR	133247	Symbol	axiom_element_get_attribute_value_by_name		132322						
ANR	133248	Symbol	element_qname		132322						
ANR	133249	Symbol	axutil_qname_create		132322						
ANR	133250	Symbol	axiom_attribute_get_value		132322						
ANR	133251	Symbol	* dp_parent		132322						
ANR	133252	Symbol	axiom_node_get_data_element		132322						
ANR	133253	Symbol	this -> qname		132322						
ANR	133254	Symbol	dont_care_minoccurs		132322						
ANR	133255	Symbol	attrib_text		132322						
ANR	133256	Symbol	first_node		132322						
ANR	133257	Symbol	key		132322						
ANR	133258	Symbol	current_element		132322						
ANR	133259	Symbol	parent_element		132322						
ANR	133260	Symbol	dp_parent		132322						
ANR	133261	Symbol	AXIOM_ELEMENT		132322						
ANR	133262	Symbol	false		132322						
ANR	133263	Symbol	i		132322						
ANR	133264	Symbol	Environment :: getEnv ( ) -> log		132322						
ANR	133265	Symbol	* this		132322						
ANR	133266	Symbol	axiom_element_get_all_attributes		132322						
ANR	133267	Symbol	axiom_node_get_first_child		132322						
ANR	133268	Symbol	arr_list		132322						
ANR	133269	Symbol	setIds		132322						
ANR	133270	Symbol	axutil_hash_first		132322						
ANR	133271	Symbol	* Environment :: getEnv		132322						
ANR	133272	Symbol	element -> deserialize		132322						
ANR	133273	Function	AviaryQuery :: GetJobSummary :: isParticle	303:10:12540:12686							
ANR	133274	FunctionDef	AviaryQuery :: GetJobSummary :: isParticle ()		133273	0					
ANR	133275	CompoundStatement		305:10:12615:12686	133273	0					
ANR	133276	ReturnStatement	return false ;	307:17:12647:12659	133273	0	True				
ANR	133277	Identifier	false		133273	0					
ANR	133278	ReturnType	bool WSF_CALL		133273	1					
ANR	133279	Identifier	AviaryQuery :: GetJobSummary :: isParticle		133273	2					
ANR	133280	ParameterList			133273	3					
ANR	133281	CFGEntryNode	ENTRY		133273		True				
ANR	133282	CFGExitNode	EXIT		133273		True				
ANR	133283	Symbol	false		133273						
ANR	133284	Function	AviaryQuery :: GetJobSummary :: declareParentNamespaces	312:10:12700:13025							
ANR	133285	FunctionDef	"AviaryQuery :: GetJobSummary :: declareParentNamespaces (axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index)"		133284	0					
ANR	133286	CompoundStatement		316:10:12907:13025	133284	0					
ANR	133287	ReturnType	void WSF_CALL		133284	1					
ANR	133288	Identifier	AviaryQuery :: GetJobSummary :: declareParentNamespaces		133284	2					
ANR	133289	ParameterList	"axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index"		133284	3					
ANR	133290	Parameter	axiom_element_t * parent_element	314:20:12797:12827	133284	0	True				
ANR	133291	ParameterType	axiom_element_t *		133284	0					
ANR	133292	Identifier	parent_element		133284	1					
ANR	133293	Parameter	axutil_hash_t * namespaces	315:20:12850:12874	133284	1	True				
ANR	133294	ParameterType	axutil_hash_t *		133284	0					
ANR	133295	Identifier	namespaces		133284	1					
ANR	133296	Parameter	int * next_ns_index	315:47:12877:12894	133284	2	True				
ANR	133297	ParameterType	int *		133284	0					
ANR	133298	Identifier	next_ns_index		133284	1					
ANR	133299	CFGEntryNode	ENTRY		133284		True				
ANR	133300	CFGExitNode	EXIT		133284		True				
ANR	133301	Symbol	parent_element		133284						
ANR	133302	Symbol	next_ns_index		133284						
ANR	133303	Symbol	namespaces		133284						
ANR	133304	Function	AviaryQuery :: GetJobSummary :: serialize	324:22:13068:21852							
ANR	133305	FunctionDef	"AviaryQuery :: GetJobSummary :: serialize (axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index)"		133304	0					
ANR	133306	CompoundStatement		330:8:13265:21852	133304	0					
ANR	133307	IdentifierDeclStatement	axiom_attribute_t * text_attri = NULL ;	333:15:13308:13344	133304	0	True				
ANR	133308	IdentifierDecl	* text_attri = NULL		133304	0					
ANR	133309	IdentifierDeclType	axiom_attribute_t *		133304	0					
ANR	133310	Identifier	text_attri		133304	1					
ANR	133311	AssignmentExpression	* text_attri = NULL		133304	2		=			
ANR	133312	Identifier	NULL		133304	0					
ANR	133313	Identifier	NULL		133304	1					
ANR	133314	IdentifierDeclStatement	axis2_char_t * string_to_stream ;	335:13:13373:13403	133304	1	True				
ANR	133315	IdentifierDecl	* string_to_stream		133304	0					
ANR	133316	IdentifierDeclType	axis2_char_t *		133304	0					
ANR	133317	Identifier	string_to_stream		133304	1					
ANR	133318	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	338:9:13437:13470	133304	2	True				
ANR	133319	IdentifierDecl	* current_node = NULL		133304	0					
ANR	133320	IdentifierDeclType	axiom_node_t *		133304	0					
ANR	133321	Identifier	current_node		133304	1					
ANR	133322	AssignmentExpression	* current_node = NULL		133304	2		=			
ANR	133323	Identifier	NULL		133304	0					
ANR	133324	Identifier	NULL		133304	1					
ANR	133325	IdentifierDeclStatement	int tag_closed = 0 ;	339:9:13481:13499	133304	3	True				
ANR	133326	IdentifierDecl	tag_closed = 0		133304	0					
ANR	133327	IdentifierDeclType	int		133304	0					
ANR	133328	Identifier	tag_closed		133304	1					
ANR	133329	AssignmentExpression	tag_closed = 0		133304	2		=			
ANR	133330	Identifier	tag_closed		133304	0					
ANR	133331	PrimaryExpression	0		133304	1					
ANR	133332	IdentifierDeclStatement	axiom_namespace_t * ns1 = NULL ;	343:16:13538:13567	133304	4	True				
ANR	133333	IdentifierDecl	* ns1 = NULL		133304	0					
ANR	133334	IdentifierDeclType	axiom_namespace_t *		133304	0					
ANR	133335	Identifier	ns1		133304	1					
ANR	133336	AssignmentExpression	* ns1 = NULL		133304	2		=			
ANR	133337	Identifier	NULL		133304	0					
ANR	133338	Identifier	NULL		133304	1					
ANR	133339	IdentifierDeclStatement	axis2_char_t * qname_uri = NULL ;	345:16:13586:13616	133304	5	True				
ANR	133340	IdentifierDecl	* qname_uri = NULL		133304	0					
ANR	133341	IdentifierDeclType	axis2_char_t *		133304	0					
ANR	133342	Identifier	qname_uri		133304	1					
ANR	133343	AssignmentExpression	* qname_uri = NULL		133304	2		=			
ANR	133344	Identifier	NULL		133304	0					
ANR	133345	Identifier	NULL		133304	1					
ANR	133346	IdentifierDeclStatement	axis2_char_t * qname_prefix = NULL ;	346:16:13634:13667	133304	6	True				
ANR	133347	IdentifierDecl	* qname_prefix = NULL		133304	0					
ANR	133348	IdentifierDeclType	axis2_char_t *		133304	0					
ANR	133349	Identifier	qname_prefix		133304	1					
ANR	133350	AssignmentExpression	* qname_prefix = NULL		133304	2		=			
ANR	133351	Identifier	NULL		133304	0					
ANR	133352	Identifier	NULL		133304	1					
ANR	133353	IdentifierDeclStatement	axis2_char_t * p_prefix = NULL ;	347:16:13685:13714	133304	7	True				
ANR	133354	IdentifierDecl	* p_prefix = NULL		133304	0					
ANR	133355	IdentifierDeclType	axis2_char_t *		133304	0					
ANR	133356	Identifier	p_prefix		133304	1					
ANR	133357	AssignmentExpression	* p_prefix = NULL		133304	2		=			
ANR	133358	Identifier	NULL		133304	0					
ANR	133359	Identifier	NULL		133304	1					
ANR	133360	IdentifierDeclStatement	int i = 0 ;	349:15:13744:13753	133304	8	True				
ANR	133361	IdentifierDecl	i = 0		133304	0					
ANR	133362	IdentifierDeclType	int		133304	0					
ANR	133363	Identifier	i		133304	1					
ANR	133364	AssignmentExpression	i = 0		133304	2		=			
ANR	133365	Identifier	i		133304	0					
ANR	133366	PrimaryExpression	0		133304	1					
ANR	133367	IdentifierDeclStatement	int count = 0 ;	350:15:13770:13783	133304	9	True				
ANR	133368	IdentifierDecl	count = 0		133304	0					
ANR	133369	IdentifierDeclType	int		133304	0					
ANR	133370	Identifier	count		133304	1					
ANR	133371	AssignmentExpression	count = 0		133304	2		=			
ANR	133372	Identifier	count		133304	0					
ANR	133373	PrimaryExpression	0		133304	1					
ANR	133374	IdentifierDeclStatement	void * element = NULL ;	351:15:13800:13820	133304	10	True				
ANR	133375	IdentifierDecl	* element = NULL		133304	0					
ANR	133376	IdentifierDeclType	void *		133304	0					
ANR	133377	Identifier	element		133304	1					
ANR	133378	AssignmentExpression	* element = NULL		133304	2		=			
ANR	133379	Identifier	NULL		133304	0					
ANR	133380	Identifier	NULL		133304	1					
ANR	133381	IdentifierDeclStatement	axis2_char_t text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ] ;	353:20:13856:13906	133304	11	True				
ANR	133382	IdentifierDecl	text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ]		133304	0					
ANR	133383	IdentifierDeclType	axis2_char_t [ ADB_DEFAULT_DIGIT_LIMIT ]		133304	0					
ANR	133384	Identifier	text_value_1		133304	1					
ANR	133385	Identifier	ADB_DEFAULT_DIGIT_LIMIT		133304	2					
ANR	133386	IdentifierDeclStatement	axis2_char_t text_value_2 [ ADB_DEFAULT_DIGIT_LIMIT ] ;	355:20:13949:13999	133304	12	True				
ANR	133387	IdentifierDecl	text_value_2 [ ADB_DEFAULT_DIGIT_LIMIT ]		133304	0					
ANR	133388	IdentifierDeclType	axis2_char_t [ ADB_DEFAULT_DIGIT_LIMIT ]		133304	0					
ANR	133389	Identifier	text_value_2		133304	1					
ANR	133390	Identifier	ADB_DEFAULT_DIGIT_LIMIT		133304	2					
ANR	133391	IdentifierDeclStatement	axis2_char_t * text_value = NULL ;	357:16:14038:14069	133304	13	True				
ANR	133392	IdentifierDecl	* text_value = NULL		133304	0					
ANR	133393	IdentifierDeclType	axis2_char_t *		133304	0					
ANR	133394	Identifier	text_value		133304	1					
ANR	133395	AssignmentExpression	* text_value = NULL		133304	2		=			
ANR	133396	Identifier	NULL		133304	0					
ANR	133397	Identifier	NULL		133304	1					
ANR	133398	IdentifierDeclStatement	axis2_char_t * start_input_str = NULL ;	359:15:14100:14136	133304	14	True				
ANR	133399	IdentifierDecl	* start_input_str = NULL		133304	0					
ANR	133400	IdentifierDeclType	axis2_char_t *		133304	0					
ANR	133401	Identifier	start_input_str		133304	1					
ANR	133402	AssignmentExpression	* start_input_str = NULL		133304	2		=			
ANR	133403	Identifier	NULL		133304	0					
ANR	133404	Identifier	NULL		133304	1					
ANR	133405	IdentifierDeclStatement	axis2_char_t * end_input_str = NULL ;	360:15:14153:14187	133304	15	True				
ANR	133406	IdentifierDecl	* end_input_str = NULL		133304	0					
ANR	133407	IdentifierDeclType	axis2_char_t *		133304	0					
ANR	133408	Identifier	end_input_str		133304	1					
ANR	133409	AssignmentExpression	* end_input_str = NULL		133304	2		=			
ANR	133410	Identifier	NULL		133304	0					
ANR	133411	Identifier	NULL		133304	1					
ANR	133412	IdentifierDeclStatement	unsigned int start_input_str_len = 0 ;	361:15:14204:14240	133304	16	True				
ANR	133413	IdentifierDecl	start_input_str_len = 0		133304	0					
ANR	133414	IdentifierDeclType	unsigned int		133304	0					
ANR	133415	Identifier	start_input_str_len		133304	1					
ANR	133416	AssignmentExpression	start_input_str_len = 0		133304	2		=			
ANR	133417	Identifier	start_input_str_len		133304	0					
ANR	133418	PrimaryExpression	0		133304	1					
ANR	133419	IdentifierDeclStatement	unsigned int end_input_str_len = 0 ;	362:15:14257:14291	133304	17	True				
ANR	133420	IdentifierDecl	end_input_str_len = 0		133304	0					
ANR	133421	IdentifierDeclType	unsigned int		133304	0					
ANR	133422	Identifier	end_input_str_len		133304	1					
ANR	133423	AssignmentExpression	end_input_str_len = 0		133304	2		=			
ANR	133424	Identifier	end_input_str_len		133304	0					
ANR	133425	PrimaryExpression	0		133304	1					
ANR	133426	IdentifierDeclStatement	axiom_data_source_t * data_source = NULL ;	365:15:14334:14373	133304	18	True				
ANR	133427	IdentifierDecl	* data_source = NULL		133304	0					
ANR	133428	IdentifierDeclType	axiom_data_source_t *		133304	0					
ANR	133429	Identifier	data_source		133304	1					
ANR	133430	AssignmentExpression	* data_source = NULL		133304	2		=			
ANR	133431	Identifier	NULL		133304	0					
ANR	133432	Identifier	NULL		133304	1					
ANR	133433	IdentifierDeclStatement	axutil_stream_t * stream = NULL ;	366:15:14390:14420	133304	19	True				
ANR	133434	IdentifierDecl	* stream = NULL		133304	0					
ANR	133435	IdentifierDeclType	axutil_stream_t *		133304	0					
ANR	133436	Identifier	stream		133304	1					
ANR	133437	AssignmentExpression	* stream = NULL		133304	2		=			
ANR	133438	Identifier	NULL		133304	0					
ANR	133439	Identifier	NULL		133304	1					
ANR	133440	IdentifierDeclStatement	int next_ns_index_value = 0 ;	369:16:14453:14480	133304	20	True				
ANR	133441	IdentifierDecl	next_ns_index_value = 0		133304	0					
ANR	133442	IdentifierDeclType	int		133304	0					
ANR	133443	Identifier	next_ns_index_value		133304	1					
ANR	133444	AssignmentExpression	next_ns_index_value = 0		133304	2		=			
ANR	133445	Identifier	next_ns_index_value		133304	0					
ANR	133446	PrimaryExpression	0		133304	1					
ANR	133447	ExpressionStatement	namespaces = axutil_hash_make ( Environment :: getEnv ( ) )	371:20:14516:14568	133304	21	True				
ANR	133448	AssignmentExpression	namespaces = axutil_hash_make ( Environment :: getEnv ( ) )		133304	0		=			
ANR	133449	Identifier	namespaces		133304	0					
ANR	133450	CallExpression	axutil_hash_make ( Environment :: getEnv ( ) )		133304	1					
ANR	133451	Callee	axutil_hash_make		133304	0					
ANR	133452	Identifier	axutil_hash_make		133304	0					
ANR	133453	ArgumentList	Environment :: getEnv ( )		133304	1					
ANR	133454	Argument	Environment :: getEnv ( )		133304	0					
ANR	133455	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	133456	Callee	Environment :: getEnv		133304	0					
ANR	133457	Identifier	Environment :: getEnv		133304	0					
ANR	133458	ArgumentList			133304	1					
ANR	133459	ExpressionStatement	next_ns_index = & next_ns_index_value	372:20:14590:14626	133304	22	True				
ANR	133460	AssignmentExpression	next_ns_index = & next_ns_index_value		133304	0		=			
ANR	133461	Identifier	next_ns_index		133304	0					
ANR	133462	UnaryOperationExpression	& next_ns_index_value		133304	1					
ANR	133463	UnaryOperator	&		133304	0					
ANR	133464	Identifier	next_ns_index_value		133304	1					
ANR	133465	ExpressionStatement	"ns1 = axiom_namespace_create ( Environment :: getEnv ( ) , ""http://query.aviary.grid.redhat.com"" , ""n"" )"	374:27:14677:14863	133304	23	True				
ANR	133466	AssignmentExpression	"ns1 = axiom_namespace_create ( Environment :: getEnv ( ) , ""http://query.aviary.grid.redhat.com"" , ""n"" )"		133304	0		=			
ANR	133467	Identifier	ns1		133304	0					
ANR	133468	CallExpression	"axiom_namespace_create ( Environment :: getEnv ( ) , ""http://query.aviary.grid.redhat.com"" , ""n"" )"		133304	1					
ANR	133469	Callee	axiom_namespace_create		133304	0					
ANR	133470	Identifier	axiom_namespace_create		133304	0					
ANR	133471	ArgumentList	Environment :: getEnv ( )		133304	1					
ANR	133472	Argument	Environment :: getEnv ( )		133304	0					
ANR	133473	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	133474	Callee	Environment :: getEnv		133304	0					
ANR	133475	Identifier	Environment :: getEnv		133304	0					
ANR	133476	ArgumentList			133304	1					
ANR	133477	Argument	"""http://query.aviary.grid.redhat.com"""		133304	1					
ANR	133478	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		133304	0					
ANR	133479	Argument	"""n"""		133304	2					
ANR	133480	PrimaryExpression	"""n"""		133304	0					
ANR	133481	ExpressionStatement	"axutil_hash_set ( namespaces , ""http://query.aviary.grid.redhat.com"" , AXIS2_HASH_KEY_STRING , axutil_strdup ( Environment :: getEnv ( ) , ""n"" ) )"	377:27:14893:15025	133304	24	True				
ANR	133482	CallExpression	"axutil_hash_set ( namespaces , ""http://query.aviary.grid.redhat.com"" , AXIS2_HASH_KEY_STRING , axutil_strdup ( Environment :: getEnv ( ) , ""n"" ) )"		133304	0					
ANR	133483	Callee	axutil_hash_set		133304	0					
ANR	133484	Identifier	axutil_hash_set		133304	0					
ANR	133485	ArgumentList	namespaces		133304	1					
ANR	133486	Argument	namespaces		133304	0					
ANR	133487	Identifier	namespaces		133304	0					
ANR	133488	Argument	"""http://query.aviary.grid.redhat.com"""		133304	1					
ANR	133489	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		133304	0					
ANR	133490	Argument	AXIS2_HASH_KEY_STRING		133304	2					
ANR	133491	Identifier	AXIS2_HASH_KEY_STRING		133304	0					
ANR	133492	Argument	"axutil_strdup ( Environment :: getEnv ( ) , ""n"" )"		133304	3					
ANR	133493	CallExpression	"axutil_strdup ( Environment :: getEnv ( ) , ""n"" )"		133304	0					
ANR	133494	Callee	axutil_strdup		133304	0					
ANR	133495	Identifier	axutil_strdup		133304	0					
ANR	133496	ArgumentList	Environment :: getEnv ( )		133304	1					
ANR	133497	Argument	Environment :: getEnv ( )		133304	0					
ANR	133498	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	133499	Callee	Environment :: getEnv		133304	0					
ANR	133500	Identifier	Environment :: getEnv		133304	0					
ANR	133501	ArgumentList			133304	1					
ANR	133502	Argument	"""n"""		133304	1					
ANR	133503	PrimaryExpression	"""n"""		133304	0					
ANR	133504	ExpressionStatement	"parent_element = axiom_element_create ( Environment :: getEnv ( ) , NULL , ""GetJobSummary"" , ns1 , & parent )"	380:20:15093:15192	133304	25	True				
ANR	133505	AssignmentExpression	"parent_element = axiom_element_create ( Environment :: getEnv ( ) , NULL , ""GetJobSummary"" , ns1 , & parent )"		133304	0		=			
ANR	133506	Identifier	parent_element		133304	0					
ANR	133507	CallExpression	"axiom_element_create ( Environment :: getEnv ( ) , NULL , ""GetJobSummary"" , ns1 , & parent )"		133304	1					
ANR	133508	Callee	axiom_element_create		133304	0					
ANR	133509	Identifier	axiom_element_create		133304	0					
ANR	133510	ArgumentList	Environment :: getEnv ( )		133304	1					
ANR	133511	Argument	Environment :: getEnv ( )		133304	0					
ANR	133512	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	133513	Callee	Environment :: getEnv		133304	0					
ANR	133514	Identifier	Environment :: getEnv		133304	0					
ANR	133515	ArgumentList			133304	1					
ANR	133516	Argument	NULL		133304	1					
ANR	133517	Identifier	NULL		133304	0					
ANR	133518	Argument	"""GetJobSummary"""		133304	2					
ANR	133519	PrimaryExpression	"""GetJobSummary"""		133304	0					
ANR	133520	Argument	ns1		133304	3					
ANR	133521	Identifier	ns1		133304	0					
ANR	133522	Argument	& parent		133304	4					
ANR	133523	UnaryOperationExpression	& parent		133304	0					
ANR	133524	UnaryOperator	&		133304	0					
ANR	133525	Identifier	parent		133304	1					
ANR	133526	ExpressionStatement	"axiom_element_set_namespace ( parent_element , Environment :: getEnv ( ) , ns1 , parent )"	383:20:15256:15335	133304	26	True				
ANR	133527	CallExpression	"axiom_element_set_namespace ( parent_element , Environment :: getEnv ( ) , ns1 , parent )"		133304	0					
ANR	133528	Callee	axiom_element_set_namespace		133304	0					
ANR	133529	Identifier	axiom_element_set_namespace		133304	0					
ANR	133530	ArgumentList	parent_element		133304	1					
ANR	133531	Argument	parent_element		133304	0					
ANR	133532	Identifier	parent_element		133304	0					
ANR	133533	Argument	Environment :: getEnv ( )		133304	1					
ANR	133534	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	133535	Callee	Environment :: getEnv		133304	0					
ANR	133536	Identifier	Environment :: getEnv		133304	0					
ANR	133537	ArgumentList			133304	1					
ANR	133538	Argument	ns1		133304	2					
ANR	133539	Identifier	ns1		133304	0					
ANR	133540	Argument	parent		133304	3					
ANR	133541	Identifier	parent		133304	0					
ANR	133542	ExpressionStatement	"data_source = axiom_data_source_create ( Environment :: getEnv ( ) , parent , & current_node )"	387:20:15372:15456	133304	27	True				
ANR	133543	AssignmentExpression	"data_source = axiom_data_source_create ( Environment :: getEnv ( ) , parent , & current_node )"		133304	0		=			
ANR	133544	Identifier	data_source		133304	0					
ANR	133545	CallExpression	"axiom_data_source_create ( Environment :: getEnv ( ) , parent , & current_node )"		133304	1					
ANR	133546	Callee	axiom_data_source_create		133304	0					
ANR	133547	Identifier	axiom_data_source_create		133304	0					
ANR	133548	ArgumentList	Environment :: getEnv ( )		133304	1					
ANR	133549	Argument	Environment :: getEnv ( )		133304	0					
ANR	133550	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	133551	Callee	Environment :: getEnv		133304	0					
ANR	133552	Identifier	Environment :: getEnv		133304	0					
ANR	133553	ArgumentList			133304	1					
ANR	133554	Argument	parent		133304	1					
ANR	133555	Identifier	parent		133304	0					
ANR	133556	Argument	& current_node		133304	2					
ANR	133557	UnaryOperationExpression	& current_node		133304	0					
ANR	133558	UnaryOperator	&		133304	0					
ANR	133559	Identifier	current_node		133304	1					
ANR	133560	ExpressionStatement	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"	388:20:15478:15551	133304	28	True				
ANR	133561	AssignmentExpression	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		133304	0		=			
ANR	133562	Identifier	stream		133304	0					
ANR	133563	CallExpression	"axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		133304	1					
ANR	133564	Callee	axiom_data_source_get_stream		133304	0					
ANR	133565	Identifier	axiom_data_source_get_stream		133304	0					
ANR	133566	ArgumentList	data_source		133304	1					
ANR	133567	Argument	data_source		133304	0					
ANR	133568	Identifier	data_source		133304	0					
ANR	133569	Argument	Environment :: getEnv ( )		133304	1					
ANR	133570	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	133571	Callee	Environment :: getEnv		133304	0					
ANR	133572	Identifier	Environment :: getEnv		133304	0					
ANR	133573	ArgumentList			133304	1					
ANR	133574	IfStatement	if ( ! parent_tag_closed )		133304	29					
ANR	133575	Condition	! parent_tag_closed	390:15:15587:15604	133304	0	True				
ANR	133576	UnaryOperationExpression	! parent_tag_closed		133304	0					
ANR	133577	UnaryOperator	!		133304	0					
ANR	133578	Identifier	parent_tag_closed		133304	1					
ANR	133579	CompoundStatement		62:12:2353:2353	133304	1					
ANR	133580	IfStatement	if ( isValidPartialMatches )		133304	0					
ANR	133581	Condition	isValidPartialMatches	393:19:15653:15673	133304	0	True				
ANR	133582	Identifier	isValidPartialMatches		133304	0					
ANR	133583	CompoundStatement		65:16:2426:2426	133304	1					
ANR	133584	ExpressionStatement	p_prefix = NULL	396:24:15735:15750	133304	0	True				
ANR	133585	AssignmentExpression	p_prefix = NULL		133304	0		=			
ANR	133586	Identifier	p_prefix		133304	0					
ANR	133587	Identifier	NULL		133304	1					
ANR	133588	ExpressionStatement	"text_value = ( axis2_char_t * ) ( ( property_PartialMatches ) ? ""true"" : ""false"" )"	399:27:15830:15900	133304	1	True				
ANR	133589	AssignmentExpression	"text_value = ( axis2_char_t * ) ( ( property_PartialMatches ) ? ""true"" : ""false"" )"		133304	0		=			
ANR	133590	Identifier	text_value		133304	0					
ANR	133591	CastExpression	"( axis2_char_t * ) ( ( property_PartialMatches ) ? ""true"" : ""false"" )"		133304	1					
ANR	133592	CastTarget	axis2_char_t *		133304	0					
ANR	133593	ConditionalExpression	"( property_PartialMatches ) ? ""true"" : ""false"""		133304	1					
ANR	133594	Condition	property_PartialMatches		133304	0					
ANR	133595	Identifier	property_PartialMatches		133304	0					
ANR	133596	PrimaryExpression	"""true"""		133304	1					
ANR	133597	PrimaryExpression	"""false"""		133304	2					
ANR	133598	ExpressionStatement	"string_to_stream = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" ) ) )"	400:27:15929:16324	133304	2	True				
ANR	133599	AssignmentExpression	"string_to_stream = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" ) ) )"		133304	0		=			
ANR	133600	Identifier	string_to_stream		133304	0					
ANR	133601	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" ) ) )"		133304	1					
ANR	133602	CastTarget	axis2_char_t *		133304	0					
ANR	133603	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" ) ) )"		133304	1					
ANR	133604	Callee	AXIS2_MALLOC		133304	0					
ANR	133605	Identifier	AXIS2_MALLOC		133304	0					
ANR	133606	ArgumentList	Environment :: getEnv ( ) -> allocator		133304	1					
ANR	133607	Argument	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	133608	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	133609	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	133610	Callee	Environment :: getEnv		133304	0					
ANR	133611	Identifier	Environment :: getEnv		133304	0					
ANR	133612	ArgumentList			133304	1					
ANR	133613	Identifier	allocator		133304	1					
ANR	133614	Argument	"sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" ) )"		133304	1					
ANR	133615	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" ) )"		133304	0		*			
ANR	133616	SizeofExpression	sizeof ( axis2_char_t )		133304	0					
ANR	133617	Sizeof	sizeof		133304	0					
ANR	133618	SizeofOperand	axis2_char_t		133304	1					
ANR	133619	AdditiveExpression	"5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" )"		133304	1		+			
ANR	133620	PrimaryExpression	5		133304	0					
ANR	133621	AdditiveExpression	"ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" )"		133304	1		+			
ANR	133622	Identifier	ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT		133304	0					
ANR	133623	AdditiveExpression	"axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" )"		133304	1		+			
ANR	133624	CallExpression	axutil_strlen ( text_value )		133304	0					
ANR	133625	Callee	axutil_strlen		133304	0					
ANR	133626	Identifier	axutil_strlen		133304	0					
ANR	133627	ArgumentList	text_value		133304	1					
ANR	133628	Argument	text_value		133304	0					
ANR	133629	Identifier	text_value		133304	0					
ANR	133630	CallExpression	"axutil_strlen ( ""partialMatches"" )"		133304	1					
ANR	133631	Callee	axutil_strlen		133304	0					
ANR	133632	Identifier	axutil_strlen		133304	0					
ANR	133633	ArgumentList	"""partialMatches"""		133304	1					
ANR	133634	Argument	"""partialMatches"""		133304	0					
ANR	133635	PrimaryExpression	"""partialMatches"""		133304	0					
ANR	133636	ExpressionStatement	"sprintf ( string_to_stream , "" %s%s%s=\\""%s\\"""" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" , ""partialMatches"" , text_value )"	404:27:16353:16547	133304	3	True				
ANR	133637	CallExpression	"sprintf ( string_to_stream , "" %s%s%s=\\""%s\\"""" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" , ""partialMatches"" , text_value )"		133304	0					
ANR	133638	Callee	sprintf		133304	0					
ANR	133639	Identifier	sprintf		133304	0					
ANR	133640	ArgumentList	string_to_stream		133304	1					
ANR	133641	Argument	string_to_stream		133304	0					
ANR	133642	Identifier	string_to_stream		133304	0					
ANR	133643	Argument	""" %s%s%s=\\""%s\\"""""		133304	1					
ANR	133644	PrimaryExpression	""" %s%s%s=\\""%s\\"""""		133304	0					
ANR	133645	Argument	"p_prefix ? p_prefix : """""		133304	2					
ANR	133646	ConditionalExpression	"p_prefix ? p_prefix : """""		133304	0					
ANR	133647	Condition	p_prefix		133304	0					
ANR	133648	Identifier	p_prefix		133304	0					
ANR	133649	Identifier	p_prefix		133304	1					
ANR	133650	PrimaryExpression	""""""		133304	2					
ANR	133651	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		133304	3					
ANR	133652	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		133304	0					
ANR	133653	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		133304	0					
ANR	133654	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		133304	0		&&			
ANR	133655	Identifier	p_prefix		133304	0					
ANR	133656	CallExpression	"axutil_strcmp ( p_prefix , """" )"		133304	1					
ANR	133657	Callee	axutil_strcmp		133304	0					
ANR	133658	Identifier	axutil_strcmp		133304	0					
ANR	133659	ArgumentList	p_prefix		133304	1					
ANR	133660	Argument	p_prefix		133304	0					
ANR	133661	Identifier	p_prefix		133304	0					
ANR	133662	Argument	""""""		133304	1					
ANR	133663	PrimaryExpression	""""""		133304	0					
ANR	133664	PrimaryExpression	""":"""		133304	1					
ANR	133665	PrimaryExpression	""""""		133304	2					
ANR	133666	Argument	"""partialMatches"""		133304	4					
ANR	133667	PrimaryExpression	"""partialMatches"""		133304	0					
ANR	133668	Argument	text_value		133304	5					
ANR	133669	Identifier	text_value		133304	0					
ANR	133670	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"	406:27:16576:16677	133304	4	True				
ANR	133671	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"		133304	0					
ANR	133672	Callee	axutil_stream_write		133304	0					
ANR	133673	Identifier	axutil_stream_write		133304	0					
ANR	133674	ArgumentList	stream		133304	1					
ANR	133675	Argument	stream		133304	0					
ANR	133676	Identifier	stream		133304	0					
ANR	133677	Argument	Environment :: getEnv ( )		133304	1					
ANR	133678	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	133679	Callee	Environment :: getEnv		133304	0					
ANR	133680	Identifier	Environment :: getEnv		133304	0					
ANR	133681	ArgumentList			133304	1					
ANR	133682	Argument	string_to_stream		133304	2					
ANR	133683	Identifier	string_to_stream		133304	0					
ANR	133684	Argument	axutil_strlen ( string_to_stream )		133304	3					
ANR	133685	CallExpression	axutil_strlen ( string_to_stream )		133304	0					
ANR	133686	Callee	axutil_strlen		133304	0					
ANR	133687	Identifier	axutil_strlen		133304	0					
ANR	133688	ArgumentList	string_to_stream		133304	1					
ANR	133689	Argument	string_to_stream		133304	0					
ANR	133690	Identifier	string_to_stream		133304	0					
ANR	133691	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , string_to_stream )"	407:27:16706:16769	133304	5	True				
ANR	133692	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , string_to_stream )"		133304	0					
ANR	133693	Callee	AXIS2_FREE		133304	0					
ANR	133694	Identifier	AXIS2_FREE		133304	0					
ANR	133695	ArgumentList	Environment :: getEnv ( ) -> allocator		133304	1					
ANR	133696	Argument	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	133697	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	133698	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	133699	Callee	Environment :: getEnv		133304	0					
ANR	133700	Identifier	Environment :: getEnv		133304	0					
ANR	133701	ArgumentList			133304	1					
ANR	133702	Identifier	allocator		133304	1					
ANR	133703	Argument	string_to_stream		133304	1					
ANR	133704	Identifier	string_to_stream		133304	0					
ANR	133705	ExpressionStatement	p_prefix = NULL	413:23:16887:16902	133304	30	True				
ANR	133706	AssignmentExpression	p_prefix = NULL		133304	0		=			
ANR	133707	Identifier	p_prefix		133304	0					
ANR	133708	Identifier	NULL		133304	1					
ANR	133709	IfStatement	if ( ! isValidIds )		133304	31					
ANR	133710	Condition	! isValidIds	416:23:16951:16961	133304	0	True				
ANR	133711	UnaryOperationExpression	! isValidIds		133304	0					
ANR	133712	UnaryOperator	!		133304	0					
ANR	133713	Identifier	isValidIds		133304	1					
ANR	133714	CompoundStatement		88:19:3717:3717	133304	1					
ANR	133715	ElseStatement	else		133304	0					
ANR	133716	CompoundStatement		95:19:3939:3939	133304	0					
ANR	133717	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"	425:21:17228:17452	133304	0	True				
ANR	133718	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"		133304	0		=			
ANR	133719	Identifier	start_input_str		133304	0					
ANR	133720	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"		133304	1					
ANR	133721	CastTarget	axis2_char_t *		133304	0					
ANR	133722	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"		133304	1					
ANR	133723	Callee	AXIS2_MALLOC		133304	0					
ANR	133724	Identifier	AXIS2_MALLOC		133304	0					
ANR	133725	ArgumentList	Environment :: getEnv ( ) -> allocator		133304	1					
ANR	133726	Argument	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	133727	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	133728	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	133729	Callee	Environment :: getEnv		133304	0					
ANR	133730	Identifier	Environment :: getEnv		133304	0					
ANR	133731	ArgumentList			133304	1					
ANR	133732	Identifier	allocator		133304	1					
ANR	133733	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) )"		133304	1					
ANR	133734	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) )"		133304	0		*			
ANR	133735	SizeofExpression	sizeof ( axis2_char_t )		133304	0					
ANR	133736	Sizeof	sizeof		133304	0					
ANR	133737	SizeofOperand	axis2_char_t		133304	1					
ANR	133738	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" )"		133304	1		+			
ANR	133739	PrimaryExpression	4		133304	0					
ANR	133740	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" )"		133304	1		+			
ANR	133741	CallExpression	axutil_strlen ( p_prefix )		133304	0					
ANR	133742	Callee	axutil_strlen		133304	0					
ANR	133743	Identifier	axutil_strlen		133304	0					
ANR	133744	ArgumentList	p_prefix		133304	1					
ANR	133745	Argument	p_prefix		133304	0					
ANR	133746	Identifier	p_prefix		133304	0					
ANR	133747	CallExpression	"axutil_strlen ( ""ids"" )"		133304	1					
ANR	133748	Callee	axutil_strlen		133304	0					
ANR	133749	Identifier	axutil_strlen		133304	0					
ANR	133750	ArgumentList	"""ids"""		133304	1					
ANR	133751	Argument	"""ids"""		133304	0					
ANR	133752	PrimaryExpression	"""ids"""		133304	0					
ANR	133753	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"	430:21:17578:17765	133304	1	True				
ANR	133754	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"		133304	0		=			
ANR	133755	Identifier	end_input_str		133304	0					
ANR	133756	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"		133304	1					
ANR	133757	CastTarget	axis2_char_t *		133304	0					
ANR	133758	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"		133304	1					
ANR	133759	Callee	AXIS2_MALLOC		133304	0					
ANR	133760	Identifier	AXIS2_MALLOC		133304	0					
ANR	133761	ArgumentList	Environment :: getEnv ( ) -> allocator		133304	1					
ANR	133762	Argument	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	133763	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	133764	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	133765	Callee	Environment :: getEnv		133304	0					
ANR	133766	Identifier	Environment :: getEnv		133304	0					
ANR	133767	ArgumentList			133304	1					
ANR	133768	Identifier	allocator		133304	1					
ANR	133769	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) )"		133304	1					
ANR	133770	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) )"		133304	0		*			
ANR	133771	SizeofExpression	sizeof ( axis2_char_t )		133304	0					
ANR	133772	Sizeof	sizeof		133304	0					
ANR	133773	SizeofOperand	axis2_char_t		133304	1					
ANR	133774	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" )"		133304	1		+			
ANR	133775	PrimaryExpression	5		133304	0					
ANR	133776	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" )"		133304	1		+			
ANR	133777	CallExpression	axutil_strlen ( p_prefix )		133304	0					
ANR	133778	Callee	axutil_strlen		133304	0					
ANR	133779	Identifier	axutil_strlen		133304	0					
ANR	133780	ArgumentList	p_prefix		133304	1					
ANR	133781	Argument	p_prefix		133304	0					
ANR	133782	Identifier	p_prefix		133304	0					
ANR	133783	CallExpression	"axutil_strlen ( ""ids"" )"		133304	1					
ANR	133784	Callee	axutil_strlen		133304	0					
ANR	133785	Identifier	axutil_strlen		133304	0					
ANR	133786	ArgumentList	"""ids"""		133304	1					
ANR	133787	Argument	"""ids"""		133304	0					
ANR	133788	PrimaryExpression	"""ids"""		133304	0					
ANR	133789	IfStatement	if ( property_Ids != NULL )		133304	2					
ANR	133790	Condition	property_Ids != NULL	441:25:18051:18070	133304	0	True				
ANR	133791	EqualityExpression	property_Ids != NULL		133304	0		!=			
ANR	133792	Identifier	property_Ids		133304	0					
ANR	133793	Identifier	NULL		133304	1					
ANR	133794	CompoundStatement		113:21:4828:4828	133304	1					
ANR	133795	ExpressionStatement	"sprintf ( start_input_str , ""<%s%sids"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	445:28:18150:18324	133304	0	True				
ANR	133796	CallExpression	"sprintf ( start_input_str , ""<%s%sids"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		133304	0					
ANR	133797	Callee	sprintf		133304	0					
ANR	133798	Identifier	sprintf		133304	0					
ANR	133799	ArgumentList	start_input_str		133304	1					
ANR	133800	Argument	start_input_str		133304	0					
ANR	133801	Identifier	start_input_str		133304	0					
ANR	133802	Argument	"""<%s%sids"""		133304	1					
ANR	133803	PrimaryExpression	"""<%s%sids"""		133304	0					
ANR	133804	Argument	"p_prefix ? p_prefix : """""		133304	2					
ANR	133805	ConditionalExpression	"p_prefix ? p_prefix : """""		133304	0					
ANR	133806	Condition	p_prefix		133304	0					
ANR	133807	Identifier	p_prefix		133304	0					
ANR	133808	Identifier	p_prefix		133304	1					
ANR	133809	PrimaryExpression	""""""		133304	2					
ANR	133810	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		133304	3					
ANR	133811	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		133304	0					
ANR	133812	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		133304	0					
ANR	133813	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		133304	0		&&			
ANR	133814	Identifier	p_prefix		133304	0					
ANR	133815	CallExpression	"axutil_strcmp ( p_prefix , """" )"		133304	1					
ANR	133816	Callee	axutil_strcmp		133304	0					
ANR	133817	Identifier	axutil_strcmp		133304	0					
ANR	133818	ArgumentList	p_prefix		133304	1					
ANR	133819	Argument	p_prefix		133304	0					
ANR	133820	Identifier	p_prefix		133304	0					
ANR	133821	Argument	""""""		133304	1					
ANR	133822	PrimaryExpression	""""""		133304	0					
ANR	133823	PrimaryExpression	""":"""		133304	1					
ANR	133824	PrimaryExpression	""""""		133304	2					
ANR	133825	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	449:25:18380:18432	133304	1	True				
ANR	133826	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		133304	0		=			
ANR	133827	Identifier	start_input_str_len		133304	0					
ANR	133828	CallExpression	axutil_strlen ( start_input_str )		133304	1					
ANR	133829	Callee	axutil_strlen		133304	0					
ANR	133830	Identifier	axutil_strlen		133304	0					
ANR	133831	ArgumentList	start_input_str		133304	1					
ANR	133832	Argument	start_input_str		133304	0					
ANR	133833	Identifier	start_input_str		133304	0					
ANR	133834	ExpressionStatement	"sprintf ( end_input_str , ""</%s%sids>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	451:25:18460:18634	133304	2	True				
ANR	133835	CallExpression	"sprintf ( end_input_str , ""</%s%sids>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		133304	0					
ANR	133836	Callee	sprintf		133304	0					
ANR	133837	Identifier	sprintf		133304	0					
ANR	133838	ArgumentList	end_input_str		133304	1					
ANR	133839	Argument	end_input_str		133304	0					
ANR	133840	Identifier	end_input_str		133304	0					
ANR	133841	Argument	"""</%s%sids>"""		133304	1					
ANR	133842	PrimaryExpression	"""</%s%sids>"""		133304	0					
ANR	133843	Argument	"p_prefix ? p_prefix : """""		133304	2					
ANR	133844	ConditionalExpression	"p_prefix ? p_prefix : """""		133304	0					
ANR	133845	Condition	p_prefix		133304	0					
ANR	133846	Identifier	p_prefix		133304	0					
ANR	133847	Identifier	p_prefix		133304	1					
ANR	133848	PrimaryExpression	""""""		133304	2					
ANR	133849	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		133304	3					
ANR	133850	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		133304	0					
ANR	133851	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		133304	0					
ANR	133852	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		133304	0		&&			
ANR	133853	Identifier	p_prefix		133304	0					
ANR	133854	CallExpression	"axutil_strcmp ( p_prefix , """" )"		133304	1					
ANR	133855	Callee	axutil_strcmp		133304	0					
ANR	133856	Identifier	axutil_strcmp		133304	0					
ANR	133857	ArgumentList	p_prefix		133304	1					
ANR	133858	Argument	p_prefix		133304	0					
ANR	133859	Identifier	p_prefix		133304	0					
ANR	133860	Argument	""""""		133304	1					
ANR	133861	PrimaryExpression	""""""		133304	0					
ANR	133862	PrimaryExpression	""":"""		133304	1					
ANR	133863	PrimaryExpression	""""""		133304	2					
ANR	133864	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	454:25:18661:18709	133304	3	True				
ANR	133865	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		133304	0		=			
ANR	133866	Identifier	end_input_str_len		133304	0					
ANR	133867	CallExpression	axutil_strlen ( end_input_str )		133304	1					
ANR	133868	Callee	axutil_strlen		133304	0					
ANR	133869	Identifier	axutil_strlen		133304	0					
ANR	133870	ArgumentList	end_input_str		133304	1					
ANR	133871	Argument	end_input_str		133304	0					
ANR	133872	Identifier	end_input_str		133304	0					
ANR	133873	ExpressionStatement	count = property_Ids -> size ( )	456:25:18737:18765	133304	4	True				
ANR	133874	AssignmentExpression	count = property_Ids -> size ( )		133304	0		=			
ANR	133875	Identifier	count		133304	0					
ANR	133876	CallExpression	property_Ids -> size ( )		133304	1					
ANR	133877	Callee	property_Ids -> size		133304	0					
ANR	133878	PtrMemberAccess	property_Ids -> size		133304	0					
ANR	133879	Identifier	property_Ids		133304	0					
ANR	133880	Identifier	size		133304	1					
ANR	133881	ArgumentList			133304	1					
ANR	133882	ForStatement	for ( i = 0 ; i < count ; i ++ )		133304	5					
ANR	133883	ForInit	i = 0 ;	457:29:18796:18801	133304	0	True				
ANR	133884	AssignmentExpression	i = 0		133304	0		=			
ANR	133885	Identifier	i		133304	0					
ANR	133886	PrimaryExpression	0		133304	1					
ANR	133887	Condition	i < count	457:36:18803:18811	133304	1	True				
ANR	133888	RelationalExpression	i < count		133304	0		<			
ANR	133889	Identifier	i		133304	0					
ANR	133890	Identifier	count		133304	1					
ANR	133891	PostIncDecOperationExpression	i ++	457:47:18814:18816	133304	2	True				
ANR	133892	Identifier	i		133304	0					
ANR	133893	IncDec	++		133304	1					
ANR	133894	CompoundStatement		130:28:5608:5657	133304	3					
ANR	133895	IdentifierDeclStatement	AviaryCommon :: JobID * element = ( * property_Ids ) [ i ] ;	459:28:18874:18923	133304	0	True				
ANR	133896	IdentifierDecl	* element = ( * property_Ids ) [ i ]		133304	0					
ANR	133897	IdentifierDeclType	AviaryCommon :: JobID *		133304	0					
ANR	133898	Identifier	element		133304	1					
ANR	133899	AssignmentExpression	* element = ( * property_Ids ) [ i ]		133304	2		=			
ANR	133900	Identifier	element		133304	0					
ANR	133901	ArrayIndexing	( * property_Ids ) [ i ]		133304	1					
ANR	133902	UnaryOperationExpression	* property_Ids		133304	0					
ANR	133903	UnaryOperator	*		133304	0					
ANR	133904	Identifier	property_Ids		133304	1					
ANR	133905	Identifier	i		133304	1					
ANR	133906	IfStatement	if ( NULL == element )		133304	1					
ANR	133907	Condition	NULL == element	461:31:18957:18971	133304	0	True				
ANR	133908	EqualityExpression	NULL == element		133304	0		==			
ANR	133909	Identifier	NULL		133304	0					
ANR	133910	Identifier	element		133304	1					
ANR	133911	CompoundStatement		133:28:5737:5737	133304	1					
ANR	133912	ContinueStatement	continue ;	463:32:19037:19045	133304	0	True				
ANR	133913	IfStatement	if ( ! element -> isParticle ( ) )		133304	2					
ANR	133914	Condition	! element -> isParticle ( )	474:31:19289:19310	133304	0	True				
ANR	133915	UnaryOperationExpression	! element -> isParticle ( )		133304	0					
ANR	133916	UnaryOperator	!		133304	0					
ANR	133917	CallExpression	element -> isParticle ( )		133304	1					
ANR	133918	Callee	element -> isParticle		133304	0					
ANR	133919	PtrMemberAccess	element -> isParticle		133304	0					
ANR	133920	Identifier	element		133304	0					
ANR	133921	Identifier	isParticle		133304	1					
ANR	133922	ArgumentList			133304	1					
ANR	133923	CompoundStatement		146:28:6075:6075	133304	1					
ANR	133924	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	476:32:19375:19463	133304	0	True				
ANR	133925	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		133304	0					
ANR	133926	Callee	axutil_stream_write		133304	0					
ANR	133927	Identifier	axutil_stream_write		133304	0					
ANR	133928	ArgumentList	stream		133304	1					
ANR	133929	Argument	stream		133304	0					
ANR	133930	Identifier	stream		133304	0					
ANR	133931	Argument	Environment :: getEnv ( )		133304	1					
ANR	133932	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	133933	Callee	Environment :: getEnv		133304	0					
ANR	133934	Identifier	Environment :: getEnv		133304	0					
ANR	133935	ArgumentList			133304	1					
ANR	133936	Argument	start_input_str		133304	2					
ANR	133937	Identifier	start_input_str		133304	0					
ANR	133938	Argument	start_input_str_len		133304	3					
ANR	133939	Identifier	start_input_str_len		133304	0					
ANR	133940	ExpressionStatement	"element -> serialize ( current_node , parent_element , element -> isParticle ( ) || false , namespaces , next_ns_index )"	478:28:19523:19711	133304	3	True				
ANR	133941	CallExpression	"element -> serialize ( current_node , parent_element , element -> isParticle ( ) || false , namespaces , next_ns_index )"		133304	0					
ANR	133942	Callee	element -> serialize		133304	0					
ANR	133943	PtrMemberAccess	element -> serialize		133304	0					
ANR	133944	Identifier	element		133304	0					
ANR	133945	Identifier	serialize		133304	1					
ANR	133946	ArgumentList	current_node		133304	1					
ANR	133947	Argument	current_node		133304	0					
ANR	133948	Identifier	current_node		133304	0					
ANR	133949	Argument	parent_element		133304	1					
ANR	133950	Identifier	parent_element		133304	0					
ANR	133951	Argument	element -> isParticle ( ) || false		133304	2					
ANR	133952	OrExpression	element -> isParticle ( ) || false		133304	0		||			
ANR	133953	CallExpression	element -> isParticle ( )		133304	0					
ANR	133954	Callee	element -> isParticle		133304	0					
ANR	133955	PtrMemberAccess	element -> isParticle		133304	0					
ANR	133956	Identifier	element		133304	0					
ANR	133957	Identifier	isParticle		133304	1					
ANR	133958	ArgumentList			133304	1					
ANR	133959	Identifier	false		133304	1					
ANR	133960	Argument	namespaces		133304	3					
ANR	133961	Identifier	namespaces		133304	0					
ANR	133962	Argument	next_ns_index		133304	4					
ANR	133963	Identifier	next_ns_index		133304	0					
ANR	133964	IfStatement	if ( ! element -> isParticle ( ) )		133304	4					
ANR	133965	Condition	! element -> isParticle ( )	481:31:19773:19794	133304	0	True				
ANR	133966	UnaryOperationExpression	! element -> isParticle ( )		133304	0					
ANR	133967	UnaryOperator	!		133304	0					
ANR	133968	CallExpression	element -> isParticle ( )		133304	1					
ANR	133969	Callee	element -> isParticle		133304	0					
ANR	133970	PtrMemberAccess	element -> isParticle		133304	0					
ANR	133971	Identifier	element		133304	0					
ANR	133972	Identifier	isParticle		133304	1					
ANR	133973	ArgumentList			133304	1					
ANR	133974	CompoundStatement		153:28:6559:6559	133304	1					
ANR	133975	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	483:32:19859:19943	133304	0	True				
ANR	133976	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		133304	0					
ANR	133977	Callee	axutil_stream_write		133304	0					
ANR	133978	Identifier	axutil_stream_write		133304	0					
ANR	133979	ArgumentList	stream		133304	1					
ANR	133980	Argument	stream		133304	0					
ANR	133981	Identifier	stream		133304	0					
ANR	133982	Argument	Environment :: getEnv ( )		133304	1					
ANR	133983	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	133984	Callee	Environment :: getEnv		133304	0					
ANR	133985	Identifier	Environment :: getEnv		133304	0					
ANR	133986	ArgumentList			133304	1					
ANR	133987	Argument	end_input_str		133304	2					
ANR	133988	Identifier	end_input_str		133304	0					
ANR	133989	Argument	end_input_str_len		133304	3					
ANR	133990	Identifier	end_input_str_len		133304	0					
ANR	133991	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	490:21:20117:20177	133304	3	True				
ANR	133992	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		133304	0					
ANR	133993	Callee	AXIS2_FREE		133304	0					
ANR	133994	Identifier	AXIS2_FREE		133304	0					
ANR	133995	ArgumentList	Environment :: getEnv ( ) -> allocator		133304	1					
ANR	133996	Argument	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	133997	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	133998	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	133999	Callee	Environment :: getEnv		133304	0					
ANR	134000	Identifier	Environment :: getEnv		133304	0					
ANR	134001	ArgumentList			133304	1					
ANR	134002	Identifier	allocator		133304	1					
ANR	134003	Argument	start_input_str		133304	1					
ANR	134004	Identifier	start_input_str		133304	0					
ANR	134005	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	491:21:20200:20258	133304	4	True				
ANR	134006	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		133304	0					
ANR	134007	Callee	AXIS2_FREE		133304	0					
ANR	134008	Identifier	AXIS2_FREE		133304	0					
ANR	134009	ArgumentList	Environment :: getEnv ( ) -> allocator		133304	1					
ANR	134010	Argument	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	134011	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	134012	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	134013	Callee	Environment :: getEnv		133304	0					
ANR	134014	Identifier	Environment :: getEnv		133304	0					
ANR	134015	ArgumentList			133304	1					
ANR	134016	Identifier	allocator		133304	1					
ANR	134017	Argument	end_input_str		133304	1					
ANR	134018	Identifier	end_input_str		133304	0					
ANR	134019	IfStatement	if ( parent_tag_closed )		133304	32					
ANR	134020	Condition	parent_tag_closed	496:23:20343:20359	133304	0	True				
ANR	134021	Identifier	parent_tag_closed		133304	0					
ANR	134022	CompoundStatement		168:20:7116:7116	133304	1					
ANR	134023	IfStatement	if ( isValidPartialMatches )		133304	0					
ANR	134024	Condition	isValidPartialMatches	498:26:20410:20430	133304	0	True				
ANR	134025	Identifier	isValidPartialMatches		133304	0					
ANR	134026	CompoundStatement		170:23:7190:7190	133304	1					
ANR	134027	ExpressionStatement	p_prefix = NULL	501:27:20509:20524	133304	0	True				
ANR	134028	AssignmentExpression	p_prefix = NULL		133304	0		=			
ANR	134029	Identifier	p_prefix		133304	0					
ANR	134030	Identifier	NULL		133304	1					
ANR	134031	ExpressionStatement	ns1 = NULL	502:27:20553:20563	133304	1	True				
ANR	134032	AssignmentExpression	ns1 = NULL		133304	0		=			
ANR	134033	Identifier	ns1		133304	0					
ANR	134034	Identifier	NULL		133304	1					
ANR	134035	ExpressionStatement	"text_value = ( axis2_char_t * ) ( ( property_PartialMatches ) ? axutil_strdup ( Environment :: getEnv ( ) , ""true"" ) : axutil_strdup ( Environment :: getEnv ( ) , ""false"" ) )"	505:27:20646:20793	133304	2	True				
ANR	134036	AssignmentExpression	"text_value = ( axis2_char_t * ) ( ( property_PartialMatches ) ? axutil_strdup ( Environment :: getEnv ( ) , ""true"" ) : axutil_strdup ( Environment :: getEnv ( ) , ""false"" ) )"		133304	0		=			
ANR	134037	Identifier	text_value		133304	0					
ANR	134038	CastExpression	"( axis2_char_t * ) ( ( property_PartialMatches ) ? axutil_strdup ( Environment :: getEnv ( ) , ""true"" ) : axutil_strdup ( Environment :: getEnv ( ) , ""false"" ) )"		133304	1					
ANR	134039	CastTarget	axis2_char_t *		133304	0					
ANR	134040	ConditionalExpression	"( property_PartialMatches ) ? axutil_strdup ( Environment :: getEnv ( ) , ""true"" ) : axutil_strdup ( Environment :: getEnv ( ) , ""false"" )"		133304	1					
ANR	134041	Condition	property_PartialMatches		133304	0					
ANR	134042	Identifier	property_PartialMatches		133304	0					
ANR	134043	CallExpression	"axutil_strdup ( Environment :: getEnv ( ) , ""true"" )"		133304	1					
ANR	134044	Callee	axutil_strdup		133304	0					
ANR	134045	Identifier	axutil_strdup		133304	0					
ANR	134046	ArgumentList	Environment :: getEnv ( )		133304	1					
ANR	134047	Argument	Environment :: getEnv ( )		133304	0					
ANR	134048	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	134049	Callee	Environment :: getEnv		133304	0					
ANR	134050	Identifier	Environment :: getEnv		133304	0					
ANR	134051	ArgumentList			133304	1					
ANR	134052	Argument	"""true"""		133304	1					
ANR	134053	PrimaryExpression	"""true"""		133304	0					
ANR	134054	CallExpression	"axutil_strdup ( Environment :: getEnv ( ) , ""false"" )"		133304	2					
ANR	134055	Callee	axutil_strdup		133304	0					
ANR	134056	Identifier	axutil_strdup		133304	0					
ANR	134057	ArgumentList	Environment :: getEnv ( )		133304	1					
ANR	134058	Argument	Environment :: getEnv ( )		133304	0					
ANR	134059	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	134060	Callee	Environment :: getEnv		133304	0					
ANR	134061	Identifier	Environment :: getEnv		133304	0					
ANR	134062	ArgumentList			133304	1					
ANR	134063	Argument	"""false"""		133304	1					
ANR	134064	PrimaryExpression	"""false"""		133304	0					
ANR	134065	ExpressionStatement	"text_attri = axiom_attribute_create ( Environment :: getEnv ( ) , ""partialMatches"" , text_value , ns1 )"	506:27:20822:20916	133304	3	True				
ANR	134066	AssignmentExpression	"text_attri = axiom_attribute_create ( Environment :: getEnv ( ) , ""partialMatches"" , text_value , ns1 )"		133304	0		=			
ANR	134067	Identifier	text_attri		133304	0					
ANR	134068	CallExpression	"axiom_attribute_create ( Environment :: getEnv ( ) , ""partialMatches"" , text_value , ns1 )"		133304	1					
ANR	134069	Callee	axiom_attribute_create		133304	0					
ANR	134070	Identifier	axiom_attribute_create		133304	0					
ANR	134071	ArgumentList	Environment :: getEnv ( )		133304	1					
ANR	134072	Argument	Environment :: getEnv ( )		133304	0					
ANR	134073	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	134074	Callee	Environment :: getEnv		133304	0					
ANR	134075	Identifier	Environment :: getEnv		133304	0					
ANR	134076	ArgumentList			133304	1					
ANR	134077	Argument	"""partialMatches"""		133304	1					
ANR	134078	PrimaryExpression	"""partialMatches"""		133304	0					
ANR	134079	Argument	text_value		133304	2					
ANR	134080	Identifier	text_value		133304	0					
ANR	134081	Argument	ns1		133304	3					
ANR	134082	Identifier	ns1		133304	0					
ANR	134083	ExpressionStatement	"axiom_element_add_attribute ( parent_element , Environment :: getEnv ( ) , text_attri , parent )"	507:27:20945:21032	133304	4	True				
ANR	134084	CallExpression	"axiom_element_add_attribute ( parent_element , Environment :: getEnv ( ) , text_attri , parent )"		133304	0					
ANR	134085	Callee	axiom_element_add_attribute		133304	0					
ANR	134086	Identifier	axiom_element_add_attribute		133304	0					
ANR	134087	ArgumentList	parent_element		133304	1					
ANR	134088	Argument	parent_element		133304	0					
ANR	134089	Identifier	parent_element		133304	0					
ANR	134090	Argument	Environment :: getEnv ( )		133304	1					
ANR	134091	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	134092	Callee	Environment :: getEnv		133304	0					
ANR	134093	Identifier	Environment :: getEnv		133304	0					
ANR	134094	ArgumentList			133304	1					
ANR	134095	Argument	text_attri		133304	2					
ANR	134096	Identifier	text_attri		133304	0					
ANR	134097	Argument	parent		133304	3					
ANR	134098	Identifier	parent		133304	0					
ANR	134099	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value )"	508:27:21061:21117	133304	5	True				
ANR	134100	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value )"		133304	0					
ANR	134101	Callee	AXIS2_FREE		133304	0					
ANR	134102	Identifier	AXIS2_FREE		133304	0					
ANR	134103	ArgumentList	Environment :: getEnv ( ) -> allocator		133304	1					
ANR	134104	Argument	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	134105	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	134106	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	134107	Callee	Environment :: getEnv		133304	0					
ANR	134108	Identifier	Environment :: getEnv		133304	0					
ANR	134109	ArgumentList			133304	1					
ANR	134110	Identifier	allocator		133304	1					
ANR	134111	Argument	text_value		133304	1					
ANR	134112	Identifier	text_value		133304	0					
ANR	134113	IfStatement	if ( namespaces )		133304	33					
ANR	134114	Condition	namespaces	514:22:21251:21260	133304	0	True				
ANR	134115	Identifier	namespaces		133304	0					
ANR	134116	CompoundStatement		188:23:8089:8098	133304	1					
ANR	134117	IdentifierDeclStatement	axutil_hash_index_t * hi ;	516:23:21307:21330	133304	0	True				
ANR	134118	IdentifierDecl	* hi		133304	0					
ANR	134119	IdentifierDeclType	axutil_hash_index_t *		133304	0					
ANR	134120	Identifier	hi		133304	1					
ANR	134121	IdentifierDeclStatement	void * val ;	517:23:21355:21364	133304	1	True				
ANR	134122	IdentifierDecl	* val		133304	0					
ANR	134123	IdentifierDeclType	void *		133304	0					
ANR	134124	Identifier	val		133304	1					
ANR	134125	ForStatement	"for ( hi = axutil_hash_first ( namespaces , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		133304	2					
ANR	134126	ForInit	"hi = axutil_hash_first ( namespaces , Environment :: getEnv ( ) ) ;"	518:28:21394:21451	133304	0	True				
ANR	134127	AssignmentExpression	"hi = axutil_hash_first ( namespaces , Environment :: getEnv ( ) )"		133304	0		=			
ANR	134128	Identifier	hi		133304	0					
ANR	134129	CallExpression	"axutil_hash_first ( namespaces , Environment :: getEnv ( ) )"		133304	1					
ANR	134130	Callee	axutil_hash_first		133304	0					
ANR	134131	Identifier	axutil_hash_first		133304	0					
ANR	134132	ArgumentList	namespaces		133304	1					
ANR	134133	Argument	namespaces		133304	0					
ANR	134134	Identifier	namespaces		133304	0					
ANR	134135	Argument	Environment :: getEnv ( )		133304	1					
ANR	134136	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	134137	Callee	Environment :: getEnv		133304	0					
ANR	134138	Identifier	Environment :: getEnv		133304	0					
ANR	134139	ArgumentList			133304	1					
ANR	134140	Condition	hi	518:87:21453:21454	133304	1	True				
ANR	134141	Identifier	hi		133304	0					
ANR	134142	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	518:91:21457:21504	133304	2	True	=			
ANR	134143	Identifier	hi		133304	0					
ANR	134144	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		133304	1					
ANR	134145	Callee	axutil_hash_next		133304	0					
ANR	134146	Identifier	axutil_hash_next		133304	0					
ANR	134147	ArgumentList	Environment :: getEnv ( )		133304	1					
ANR	134148	Argument	Environment :: getEnv ( )		133304	0					
ANR	134149	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	134150	Callee	Environment :: getEnv		133304	0					
ANR	134151	Identifier	Environment :: getEnv		133304	0					
ANR	134152	ArgumentList			133304	1					
ANR	134153	Argument	hi		133304	1					
ANR	134154	Identifier	hi		133304	0					
ANR	134155	CompoundStatement		190:23:8264:8264	133304	3					
ANR	134156	ExpressionStatement	"axutil_hash_this ( hi , NULL , NULL , & val )"	520:27:21559:21597	133304	0	True				
ANR	134157	CallExpression	"axutil_hash_this ( hi , NULL , NULL , & val )"		133304	0					
ANR	134158	Callee	axutil_hash_this		133304	0					
ANR	134159	Identifier	axutil_hash_this		133304	0					
ANR	134160	ArgumentList	hi		133304	1					
ANR	134161	Argument	hi		133304	0					
ANR	134162	Identifier	hi		133304	0					
ANR	134163	Argument	NULL		133304	1					
ANR	134164	Identifier	NULL		133304	0					
ANR	134165	Argument	NULL		133304	2					
ANR	134166	Identifier	NULL		133304	0					
ANR	134167	Argument	& val		133304	3					
ANR	134168	UnaryOperationExpression	& val		133304	0					
ANR	134169	UnaryOperator	&		133304	0					
ANR	134170	Identifier	val		133304	1					
ANR	134171	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , val )"	521:27:21626:21675	133304	1	True				
ANR	134172	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , val )"		133304	0					
ANR	134173	Callee	AXIS2_FREE		133304	0					
ANR	134174	Identifier	AXIS2_FREE		133304	0					
ANR	134175	ArgumentList	Environment :: getEnv ( ) -> allocator		133304	1					
ANR	134176	Argument	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	134177	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		133304	0					
ANR	134178	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	134179	Callee	Environment :: getEnv		133304	0					
ANR	134180	Identifier	Environment :: getEnv		133304	0					
ANR	134181	ArgumentList			133304	1					
ANR	134182	Identifier	allocator		133304	1					
ANR	134183	Argument	val		133304	1					
ANR	134184	Identifier	val		133304	0					
ANR	134185	ExpressionStatement	"axutil_hash_free ( namespaces , Environment :: getEnv ( ) )"	523:23:21725:21776	133304	3	True				
ANR	134186	CallExpression	"axutil_hash_free ( namespaces , Environment :: getEnv ( ) )"		133304	0					
ANR	134187	Callee	axutil_hash_free		133304	0					
ANR	134188	Identifier	axutil_hash_free		133304	0					
ANR	134189	ArgumentList	namespaces		133304	1					
ANR	134190	Argument	namespaces		133304	0					
ANR	134191	Identifier	namespaces		133304	0					
ANR	134192	Argument	Environment :: getEnv ( )		133304	1					
ANR	134193	CallExpression	Environment :: getEnv ( )		133304	0					
ANR	134194	Callee	Environment :: getEnv		133304	0					
ANR	134195	Identifier	Environment :: getEnv		133304	0					
ANR	134196	ArgumentList			133304	1					
ANR	134197	ReturnStatement	return parent ;	527:12:21829:21842	133304	34	True				
ANR	134198	Identifier	parent		133304	0					
ANR	134199	ReturnType	WSF_CALL		133304	1					
ANR	134200	Identifier	AviaryQuery :: GetJobSummary :: serialize		133304	2					
ANR	134201	ParameterList	"axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index"		133304	3					
ANR	134202	Parameter	axiom_node_t * parent	325:39:13116:13135	133304	0	True				
ANR	134203	ParameterType	axiom_node_t *		133304	0					
ANR	134204	Identifier	parent		133304	1					
ANR	134205	Parameter	axiom_element_t * parent_element	326:3:13142:13172	133304	1	True				
ANR	134206	ParameterType	axiom_element_t *		133304	0					
ANR	134207	Identifier	parent_element		133304	1					
ANR	134208	Parameter	int parent_tag_closed	327:3:13179:13199	133304	2	True				
ANR	134209	ParameterType	int		133304	0					
ANR	134210	Identifier	parent_tag_closed		133304	1					
ANR	134211	Parameter	axutil_hash_t * namespaces	328:3:13206:13230	133304	3	True				
ANR	134212	ParameterType	axutil_hash_t *		133304	0					
ANR	134213	Identifier	namespaces		133304	1					
ANR	134214	Parameter	int * next_ns_index	329:3:13237:13254	133304	4	True				
ANR	134215	ParameterType	int *		133304	0					
ANR	134216	Identifier	next_ns_index		133304	1					
ANR	134217	CFGEntryNode	ENTRY		133304		True				
ANR	134218	CFGExitNode	EXIT		133304		True				
ANR	134219	Symbol	& val		133304						
ANR	134220	Symbol	parent		133304						
ANR	134221	Symbol	hi		133304						
ANR	134222	Symbol	current_node		133304						
ANR	134223	Symbol	* * property_Ids		133304						
ANR	134224	Symbol	axutil_strlen		133304						
ANR	134225	Symbol	& next_ns_index_value		133304						
ANR	134226	Symbol	ns1		133304						
ANR	134227	Symbol	& current_node		133304						
ANR	134228	Symbol	axiom_attribute_create		133304						
ANR	134229	Symbol	axutil_hash_next		133304						
ANR	134230	Symbol	axutil_hash_make		133304						
ANR	134231	Symbol	element		133304						
ANR	134232	Symbol	val		133304						
ANR	134233	Symbol	axiom_data_source_get_stream		133304						
ANR	134234	Symbol	NULL		133304						
ANR	134235	Symbol	* property_Ids		133304						
ANR	134236	Symbol	count		133304						
ANR	134237	Symbol	parent_tag_closed		133304						
ANR	134238	Symbol	next_ns_index		133304						
ANR	134239	Symbol	data_source		133304						
ANR	134240	Symbol	text_value		133304						
ANR	134241	Symbol	start_input_str_len		133304						
ANR	134242	Symbol	axiom_data_source_create		133304						
ANR	134243	Symbol	qname_prefix		133304						
ANR	134244	Symbol	next_ns_index_value		133304						
ANR	134245	Symbol	axutil_strcmp		133304						
ANR	134246	Symbol	end_input_str		133304						
ANR	134247	Symbol	& parent		133304						
ANR	134248	Symbol	namespaces		133304						
ANR	134249	Symbol	isValidPartialMatches		133304						
ANR	134250	Symbol	AXIS2_HASH_KEY_STRING		133304						
ANR	134251	Symbol	Environment :: getEnv		133304						
ANR	134252	Symbol	* element		133304						
ANR	134253	Symbol	axiom_namespace_create		133304						
ANR	134254	Symbol	qname_uri		133304						
ANR	134255	Symbol	property_PartialMatches		133304						
ANR	134256	Symbol	p_prefix		133304						
ANR	134257	Symbol	property_Ids		133304						
ANR	134258	Symbol	text_value_2		133304						
ANR	134259	Symbol	stream		133304						
ANR	134260	Symbol	text_attri		133304						
ANR	134261	Symbol	text_value_1		133304						
ANR	134262	Symbol	AXIS2_MALLOC		133304						
ANR	134263	Symbol	Environment :: getEnv ( ) -> allocator		133304						
ANR	134264	Symbol	parent_element		133304						
ANR	134265	Symbol	end_input_str_len		133304						
ANR	134266	Symbol	tag_closed		133304						
ANR	134267	Symbol	isValidIds		133304						
ANR	134268	Symbol	false		133304						
ANR	134269	Symbol	i		133304						
ANR	134270	Symbol	start_input_str		133304						
ANR	134271	Symbol	ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT		133304						
ANR	134272	Symbol	string_to_stream		133304						
ANR	134273	Symbol	* i		133304						
ANR	134274	Symbol	axutil_hash_first		133304						
ANR	134275	Symbol	* Environment :: getEnv		133304						
ANR	134276	Symbol	axutil_strdup		133304						
ANR	134277	Symbol	property_Ids -> size		133304						
ANR	134278	Symbol	element -> isParticle		133304						
ANR	134279	Symbol	axiom_element_create		133304						
ANR	134280	Function	AviaryQuery :: GetJobSummary :: getProperty1	536:47:21997:22120							
ANR	134281	FunctionDef	AviaryQuery :: GetJobSummary :: getProperty1 ()		134280	0					
ANR	134282	CompoundStatement		538:12:22073:22120	134280	0					
ANR	134283	ReturnStatement	return getIds ( ) ;	539:16:22091:22106	134280	0	True				
ANR	134284	CallExpression	getIds ( )		134280	0					
ANR	134285	Callee	getIds		134280	0					
ANR	134286	Identifier	getIds		134280	0					
ANR	134287	ArgumentList			134280	1					
ANR	134288	ReturnType	WSF_CALL		134280	1					
ANR	134289	Identifier	AviaryQuery :: GetJobSummary :: getProperty1		134280	2					
ANR	134290	ParameterList			134280	3					
ANR	134291	CFGEntryNode	ENTRY		134280		True				
ANR	134292	CFGExitNode	EXIT		134280		True				
ANR	134293	Symbol	getIds		134280						
ANR	134294	Function	AviaryQuery :: GetJobSummary :: getIds	545:47:22233:22356							
ANR	134295	FunctionDef	AviaryQuery :: GetJobSummary :: getIds ()		134294	0					
ANR	134296	CompoundStatement		547:13:22304:22356	134294	0					
ANR	134297	ReturnStatement	return property_Ids ;	548:16:22322:22341	134294	0	True				
ANR	134298	Identifier	property_Ids		134294	0					
ANR	134299	ReturnType	WSF_CALL		134294	1					
ANR	134300	Identifier	AviaryQuery :: GetJobSummary :: getIds		134294	2					
ANR	134301	ParameterList			134294	3					
ANR	134302	CFGEntryNode	ENTRY		134294		True				
ANR	134303	CFGExitNode	EXIT		134294		True				
ANR	134304	Symbol	property_Ids		134294						
ANR	134305	Function	AviaryQuery :: GetJobSummary :: setIds	554:12:22433:23996							
ANR	134306	FunctionDef	AviaryQuery :: GetJobSummary :: setIds (std :: vector < AviaryCommon :: JobID * > * arg_Ids)		134305	0					
ANR	134307	CompoundStatement		557:13:22573:23996	134305	0					
ANR	134308	IdentifierDeclStatement	int size = 0 ;	559:17:22609:22621	134305	0	True				
ANR	134309	IdentifierDecl	size = 0		134305	0					
ANR	134310	IdentifierDeclType	int		134305	0					
ANR	134311	Identifier	size		134305	1					
ANR	134312	AssignmentExpression	size = 0		134305	2		=			
ANR	134313	Identifier	size		134305	0					
ANR	134314	PrimaryExpression	0		134305	1					
ANR	134315	IdentifierDeclStatement	int i = 0 ;	560:17:22640:22649	134305	1	True				
ANR	134316	IdentifierDecl	i = 0		134305	0					
ANR	134317	IdentifierDeclType	int		134305	0					
ANR	134318	Identifier	i		134305	1					
ANR	134319	AssignmentExpression	i = 0		134305	2		=			
ANR	134320	Identifier	i		134305	0					
ANR	134321	PrimaryExpression	0		134305	1					
ANR	134322	IdentifierDeclStatement	bool non_nil_exists = false ;	561:17:22668:22695	134305	2	True				
ANR	134323	IdentifierDecl	non_nil_exists = false		134305	0					
ANR	134324	IdentifierDeclType	bool		134305	0					
ANR	134325	Identifier	non_nil_exists		134305	1					
ANR	134326	AssignmentExpression	non_nil_exists = false		134305	2		=			
ANR	134327	Identifier	false		134305	0					
ANR	134328	Identifier	false		134305	1					
ANR	134329	IfStatement	if ( isValidIds && arg_Ids == property_Ids )		134305	3					
ANR	134330	Condition	isValidIds && arg_Ids == property_Ids	564:19:22734:22794	134305	0	True				
ANR	134331	AndExpression	isValidIds && arg_Ids == property_Ids		134305	0		&&			
ANR	134332	Identifier	isValidIds		134305	0					
ANR	134333	EqualityExpression	arg_Ids == property_Ids		134305	1		==			
ANR	134334	Identifier	arg_Ids		134305	0					
ANR	134335	Identifier	property_Ids		134305	1					
ANR	134336	CompoundStatement		10:16:239:239	134305	1					
ANR	134337	ReturnStatement	return true ;	568:20:22856:22867	134305	0	True				
ANR	134338	Identifier	true		134305	0					
ANR	134339	ExpressionStatement	size = arg_Ids -> size ( )	572:17:22922:22944	134305	4	True				
ANR	134340	AssignmentExpression	size = arg_Ids -> size ( )		134305	0		=			
ANR	134341	Identifier	size		134305	0					
ANR	134342	CallExpression	arg_Ids -> size ( )		134305	1					
ANR	134343	Callee	arg_Ids -> size		134305	0					
ANR	134344	PtrMemberAccess	arg_Ids -> size		134305	0					
ANR	134345	Identifier	arg_Ids		134305	0					
ANR	134346	Identifier	size		134305	1					
ANR	134347	ArgumentList			134305	1					
ANR	134348	IfStatement	if ( size < 0 )		134305	5					
ANR	134349	Condition	size < 0	574:21:22985:22992	134305	0	True				
ANR	134350	RelationalExpression	size < 0		134305	0		<			
ANR	134351	Identifier	size		134305	0					
ANR	134352	PrimaryExpression	0		134305	1					
ANR	134353	CompoundStatement		19:17:438:438	134305	1					
ANR	134354	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""ids has less than minOccurs(0)"" )"	576:21:23035:23125	134305	0	True				
ANR	134355	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""ids has less than minOccurs(0)"" )"		134305	0					
ANR	134356	Callee	WSF_LOG_ERROR_MSG		134305	0					
ANR	134357	Identifier	WSF_LOG_ERROR_MSG		134305	0					
ANR	134358	ArgumentList	Environment :: getEnv ( ) -> log		134305	1					
ANR	134359	Argument	Environment :: getEnv ( ) -> log		134305	0					
ANR	134360	PtrMemberAccess	Environment :: getEnv ( ) -> log		134305	0					
ANR	134361	CallExpression	Environment :: getEnv ( )		134305	0					
ANR	134362	Callee	Environment :: getEnv		134305	0					
ANR	134363	Identifier	Environment :: getEnv		134305	0					
ANR	134364	ArgumentList			134305	1					
ANR	134365	Identifier	log		134305	1					
ANR	134366	Argument	WSF_LOG_SI		134305	1					
ANR	134367	Identifier	WSF_LOG_SI		134305	0					
ANR	134368	Argument	"""ids has less than minOccurs(0)"""		134305	2					
ANR	134369	PrimaryExpression	"""ids has less than minOccurs(0)"""		134305	0					
ANR	134370	ReturnStatement	return false ;	577:21:23148:23160	134305	1	True				
ANR	134371	Identifier	false		134305	0					
ANR	134372	ForStatement	for ( i = 0 ; i < size ; i ++ )		134305	6					
ANR	134373	ForInit	i = 0 ;	579:21:23202:23207	134305	0	True				
ANR	134374	AssignmentExpression	i = 0		134305	0		=			
ANR	134375	Identifier	i		134305	0					
ANR	134376	PrimaryExpression	0		134305	1					
ANR	134377	Condition	i < size	579:28:23209:23216	134305	1	True				
ANR	134378	RelationalExpression	i < size		134305	0		<			
ANR	134379	Identifier	i		134305	0					
ANR	134380	Identifier	size		134305	1					
ANR	134381	PostIncDecOperationExpression	i ++	579:38:23219:23222	134305	2	True				
ANR	134382	Identifier	i		134305	0					
ANR	134383	IncDec	++		134305	1					
ANR	134384	CompoundStatement		24:17:669:669	134305	3					
ANR	134385	IfStatement	if ( NULL != ( * arg_Ids ) [ i ] )		134305	0					
ANR	134386	Condition	NULL != ( * arg_Ids ) [ i ]	581:24:23269:23289	134305	0	True				
ANR	134387	EqualityExpression	NULL != ( * arg_Ids ) [ i ]		134305	0		!=			
ANR	134388	Identifier	NULL		134305	0					
ANR	134389	ArrayIndexing	( * arg_Ids ) [ i ]		134305	1					
ANR	134390	UnaryOperationExpression	* arg_Ids		134305	0					
ANR	134391	UnaryOperator	*		134305	0					
ANR	134392	Identifier	arg_Ids		134305	1					
ANR	134393	Identifier	i		134305	1					
ANR	134394	CompoundStatement		26:21:739:739	134305	1					
ANR	134395	ExpressionStatement	non_nil_exists = true	583:25:23340:23361	134305	0	True				
ANR	134396	AssignmentExpression	non_nil_exists = true		134305	0		=			
ANR	134397	Identifier	non_nil_exists		134305	0					
ANR	134398	Identifier	true		134305	1					
ANR	134399	BreakStatement	break ;	584:25:23388:23393	134305	1	True				
ANR	134400	ExpressionStatement	resetIds ( )	591:16:23490:23500	134305	7	True				
ANR	134401	CallExpression	resetIds ( )		134305	0					
ANR	134402	Callee	resetIds		134305	0					
ANR	134403	Identifier	resetIds		134305	0					
ANR	134404	ArgumentList			134305	1					
ANR	134405	IfStatement	if ( NULL == arg_Ids )		134305	8					
ANR	134406	Condition	NULL == arg_Ids	594:23:23543:23557	134305	0	True				
ANR	134407	EqualityExpression	NULL == arg_Ids		134305	0		==			
ANR	134408	Identifier	NULL		134305	0					
ANR	134409	Identifier	arg_Ids		134305	1					
ANR	134410	CompoundStatement		40:16:1028:1028	134305	1					
ANR	134411	ReturnStatement	return true ;	598:20:23670:23681	134305	0	True				
ANR	134412	Identifier	true		134305	0					
ANR	134413	ExpressionStatement	property_Ids = arg_Ids	601:24:23742:23764	134305	9	True				
ANR	134414	AssignmentExpression	property_Ids = arg_Ids		134305	0		=			
ANR	134415	Identifier	property_Ids		134305	0					
ANR	134416	Identifier	arg_Ids		134305	1					
ANR	134417	IfStatement	if ( non_nil_exists )		134305	10					
ANR	134418	Condition	non_nil_exists	602:27:23793:23806	134305	0	True				
ANR	134419	Identifier	non_nil_exists		134305	0					
ANR	134420	CompoundStatement		47:24:1259:1259	134305	1					
ANR	134421	ExpressionStatement	isValidIds = true	604:28:23863:23880	134305	0	True				
ANR	134422	AssignmentExpression	isValidIds = true		134305	0		=			
ANR	134423	Identifier	isValidIds		134305	0					
ANR	134424	Identifier	true		134305	1					
ANR	134425	ReturnStatement	return true ;	608:16:23970:23981	134305	11	True				
ANR	134426	Identifier	true		134305	0					
ANR	134427	ReturnType	bool WSF_CALL		134305	1					
ANR	134428	Identifier	AviaryQuery :: GetJobSummary :: setIds		134305	2					
ANR	134429	ParameterList	std :: vector < AviaryCommon :: JobID * > * arg_Ids		134305	3					
ANR	134430	Parameter	std :: vector < AviaryCommon :: JobID * > * arg_Ids	556:20:22515:22557	134305	0	True				
ANR	134431	ParameterType	std :: vector < AviaryCommon :: JobID * > *		134305	0					
ANR	134432	Identifier	arg_Ids		134305	1					
ANR	134433	CFGEntryNode	ENTRY		134305		True				
ANR	134434	CFGExitNode	EXIT		134305		True				
ANR	134435	Symbol	Environment :: getEnv		134305						
ANR	134436	Symbol	NULL		134305						
ANR	134437	Symbol	* arg_Ids		134305						
ANR	134438	Symbol	isValidIds		134305						
ANR	134439	Symbol	false		134305						
ANR	134440	Symbol	i		134305						
ANR	134441	Symbol	arg_Ids -> size		134305						
ANR	134442	Symbol	* * arg_Ids		134305						
ANR	134443	Symbol	Environment :: getEnv ( ) -> log		134305						
ANR	134444	Symbol	arg_Ids		134305						
ANR	134445	Symbol	property_Ids		134305						
ANR	134446	Symbol	* i		134305						
ANR	134447	Symbol	size		134305						
ANR	134448	Symbol	WSF_LOG_SI		134305						
ANR	134449	Symbol	* Environment :: getEnv		134305						
ANR	134450	Symbol	non_nil_exists		134305						
ANR	134451	Symbol	true		134305						
ANR	134452	Function	AviaryQuery :: GetJobSummary :: getIdsAt	615:33:24116:24502							
ANR	134453	FunctionDef	AviaryQuery :: GetJobSummary :: getIdsAt (int i)		134452	0					
ANR	134454	CompoundStatement		617:12:24193:24502	134452	0					
ANR	134455	IdentifierDeclStatement	AviaryCommon :: JobID * ret_val ;	618:16:24211:24239	134452	0	True				
ANR	134456	IdentifierDecl	* ret_val		134452	0					
ANR	134457	IdentifierDeclType	AviaryCommon :: JobID *		134452	0					
ANR	134458	Identifier	ret_val		134452	1					
ANR	134459	IfStatement	if ( property_Ids == NULL )		134452	1					
ANR	134460	Condition	property_Ids == NULL	619:19:24260:24279	134452	0	True				
ANR	134461	EqualityExpression	property_Ids == NULL		134452	0		==			
ANR	134462	Identifier	property_Ids		134452	0					
ANR	134463	Identifier	NULL		134452	1					
ANR	134464	CompoundStatement		4:16:104:104	134452	1					
ANR	134465	ReturnStatement	return ( AviaryCommon :: JobID * ) 0 ;	621:20:24320:24350	134452	0	True				
ANR	134466	CastExpression	( AviaryCommon :: JobID * ) 0		134452	0					
ANR	134467	CastTarget	AviaryCommon :: JobID *		134452	0					
ANR	134468	PrimaryExpression	0		134452	1					
ANR	134469	ExpressionStatement	ret_val = ( * property_Ids ) [ i ]	623:16:24386:24416	134452	2	True				
ANR	134470	AssignmentExpression	ret_val = ( * property_Ids ) [ i ]		134452	0		=			
ANR	134471	Identifier	ret_val		134452	0					
ANR	134472	ArrayIndexing	( * property_Ids ) [ i ]		134452	1					
ANR	134473	UnaryOperationExpression	* property_Ids		134452	0					
ANR	134474	UnaryOperator	*		134452	0					
ANR	134475	Identifier	property_Ids		134452	1					
ANR	134476	Identifier	i		134452	1					
ANR	134477	ReturnStatement	return ret_val ;	625:20:24455:24469	134452	3	True				
ANR	134478	Identifier	ret_val		134452	0					
ANR	134479	ReturnType	WSF_CALL		134452	1					
ANR	134480	Identifier	AviaryQuery :: GetJobSummary :: getIdsAt		134452	2					
ANR	134481	ParameterList	int i		134452	3					
ANR	134482	Parameter	int i	616:49:24174:24178	134452	0	True				
ANR	134483	ParameterType	int		134452	0					
ANR	134484	Identifier	i		134452	1					
ANR	134485	CFGEntryNode	ENTRY		134452		True				
ANR	134486	CFGExitNode	EXIT		134452		True				
ANR	134487	Symbol	NULL		134452						
ANR	134488	Symbol	property_Ids		134452						
ANR	134489	Symbol	* i		134452						
ANR	134490	Symbol	* property_Ids		134452						
ANR	134491	Symbol	* * property_Ids		134452						
ANR	134492	Symbol	i		134452						
ANR	134493	Symbol	ret_val		134452						
ANR	134494	Function	AviaryQuery :: GetJobSummary :: setIdsAt	632:11:24591:26334							
ANR	134495	FunctionDef	"AviaryQuery :: GetJobSummary :: setIdsAt (int i , AviaryCommon :: JobID * arg_Ids)"		134494	0					
ANR	134496	CompoundStatement		635:12:24723:26334	134494	0					
ANR	134497	IdentifierDeclStatement	AviaryCommon :: JobID * element ;	636:17:24742:24770	134494	0	True				
ANR	134498	IdentifierDecl	* element		134494	0					
ANR	134499	IdentifierDeclType	AviaryCommon :: JobID *		134494	0					
ANR	134500	Identifier	element		134494	1					
ANR	134501	IdentifierDeclStatement	int size = 0 ;	637:16:24788:24800	134494	1	True				
ANR	134502	IdentifierDecl	size = 0		134494	0					
ANR	134503	IdentifierDeclType	int		134494	0					
ANR	134504	Identifier	size		134494	1					
ANR	134505	AssignmentExpression	size = 0		134494	2		=			
ANR	134506	Identifier	size		134494	0					
ANR	134507	PrimaryExpression	0		134494	1					
ANR	134508	IdentifierDeclStatement	int non_nil_count ;	639:16:24819:24836	134494	2	True				
ANR	134509	IdentifierDecl	non_nil_count		134494	0					
ANR	134510	IdentifierDeclType	int		134494	0					
ANR	134511	Identifier	non_nil_count		134494	1					
ANR	134512	IdentifierDeclStatement	bool non_nil_exists = false ;	640:16:24854:24881	134494	3	True				
ANR	134513	IdentifierDecl	non_nil_exists = false		134494	0					
ANR	134514	IdentifierDeclType	bool		134494	0					
ANR	134515	Identifier	non_nil_exists		134494	1					
ANR	134516	AssignmentExpression	non_nil_exists = false		134494	2		=			
ANR	134517	Identifier	false		134494	0					
ANR	134518	Identifier	false		134494	1					
ANR	134519	IfStatement	if ( isValidIds && property_Ids && arg_Ids == ( * property_Ids ) [ i ] )		134494	4					
ANR	134520	Condition	isValidIds && property_Ids && arg_Ids == ( * property_Ids ) [ i ]	644:20:24923:25040	134494	0	True				
ANR	134521	AndExpression	isValidIds && property_Ids && arg_Ids == ( * property_Ids ) [ i ]		134494	0		&&			
ANR	134522	Identifier	isValidIds		134494	0					
ANR	134523	AndExpression	property_Ids && arg_Ids == ( * property_Ids ) [ i ]		134494	1		&&			
ANR	134524	Identifier	property_Ids		134494	0					
ANR	134525	EqualityExpression	arg_Ids == ( * property_Ids ) [ i ]		134494	1		==			
ANR	134526	Identifier	arg_Ids		134494	0					
ANR	134527	ArrayIndexing	( * property_Ids ) [ i ]		134494	1					
ANR	134528	UnaryOperationExpression	* property_Ids		134494	0					
ANR	134529	UnaryOperator	*		134494	0					
ANR	134530	Identifier	property_Ids		134494	1					
ANR	134531	Identifier	i		134494	1					
ANR	134532	CompoundStatement		15:17:355:355	134494	1					
ANR	134533	ReturnStatement	return AXIS2_SUCCESS ;	651:20:25122:25142	134494	0	True				
ANR	134534	Identifier	AXIS2_SUCCESS		134494	0					
ANR	134535	ExpressionStatement	non_nil_exists = true	655:21:25205:25226	134494	5	True				
ANR	134536	AssignmentExpression	non_nil_exists = true		134494	0		=			
ANR	134537	Identifier	non_nil_exists		134494	0					
ANR	134538	Identifier	true		134494	1					
ANR	134539	IfStatement	if ( property_Ids == NULL )		134494	6					
ANR	134540	Condition	property_Ids == NULL	658:19:25267:25286	134494	0	True				
ANR	134541	EqualityExpression	property_Ids == NULL		134494	0		==			
ANR	134542	Identifier	property_Ids		134494	0					
ANR	134543	Identifier	NULL		134494	1					
ANR	134544	CompoundStatement		25:16:581:581	134494	1					
ANR	134545	ExpressionStatement	property_Ids = new std :: vector < AviaryCommon :: JobID * > ( )	660:20:25327:25381	134494	0	True				
ANR	134546	AssignmentExpression	property_Ids = new std :: vector < AviaryCommon :: JobID * > ( )		134494	0		=			
ANR	134547	Identifier	property_Ids		134494	0					
ANR	134548	UnaryExpression	new std :: vector < AviaryCommon :: JobID * > ( )		134494	1					
ANR	134549	ElseStatement	else		134494	0					
ANR	134550	CompoundStatement		28:20:697:697	134494	0					
ANR	134551	ExpressionStatement	element = ( * property_Ids ) [ i ]	664:16:25506:25534	134494	0	True				
ANR	134552	AssignmentExpression	element = ( * property_Ids ) [ i ]		134494	0		=			
ANR	134553	Identifier	element		134494	0					
ANR	134554	ArrayIndexing	( * property_Ids ) [ i ]		134494	1					
ANR	134555	UnaryOperationExpression	* property_Ids		134494	0					
ANR	134556	UnaryOperator	*		134494	0					
ANR	134557	Identifier	property_Ids		134494	1					
ANR	134558	Identifier	i		134494	1					
ANR	134559	IfStatement	if ( NULL != element )		134494	7					
ANR	134560	Condition	NULL != element	668:27:25599:25613	134494	0	True				
ANR	134561	EqualityExpression	NULL != element		134494	0		!=			
ANR	134562	Identifier	NULL		134494	0					
ANR	134563	Identifier	element		134494	1					
ANR	134564	CompoundStatement		35:24:916:916	134494	1					
ANR	134565	Statement	delete	673:32:25755:25760	134494	0	True				
ANR	134566	ExpressionStatement	element	673:39:25762:25769	134494	1	True				
ANR	134567	Identifier	element		134494	0					
ANR	134568	IfStatement	if ( ! non_nil_exists )		134494	8					
ANR	134569	Condition	! non_nil_exists	678:23:25896:25910	134494	0	True				
ANR	134570	UnaryOperationExpression	! non_nil_exists		134494	0					
ANR	134571	UnaryOperator	!		134494	0					
ANR	134572	Identifier	non_nil_exists		134494	1					
ANR	134573	CompoundStatement		45:20:1209:1209	134494	1					
ANR	134574	ExpressionStatement	isValidIds = true	681:24:25984:26001	134494	0	True				
ANR	134575	AssignmentExpression	isValidIds = true		134494	0		=			
ANR	134576	Identifier	isValidIds		134494	0					
ANR	134577	Identifier	true		134494	1					
ANR	134578	ExpressionStatement	( * property_Ids ) [ i ] = NULL	682:24:26027:26051	134494	1	True				
ANR	134579	AssignmentExpression	( * property_Ids ) [ i ] = NULL		134494	0		=			
ANR	134580	ArrayIndexing	( * property_Ids ) [ i ]		134494	0					
ANR	134581	UnaryOperationExpression	* property_Ids		134494	0					
ANR	134582	UnaryOperator	*		134494	0					
ANR	134583	Identifier	property_Ids		134494	1					
ANR	134584	Identifier	i		134494	1					
ANR	134585	Identifier	NULL		134494	1					
ANR	134586	ReturnStatement	return AXIS2_SUCCESS ;	684:24:26102:26122	134494	2	True				
ANR	134587	Identifier	AXIS2_SUCCESS		134494	0					
ANR	134588	ExpressionStatement	( * property_Ids ) [ i ] = arg_Ids	687:20:26183:26211	134494	9	True				
ANR	134589	AssignmentExpression	( * property_Ids ) [ i ] = arg_Ids		134494	0		=			
ANR	134590	ArrayIndexing	( * property_Ids ) [ i ]		134494	0					
ANR	134591	UnaryOperationExpression	* property_Ids		134494	0					
ANR	134592	UnaryOperator	*		134494	0					
ANR	134593	Identifier	property_Ids		134494	1					
ANR	134594	Identifier	i		134494	1					
ANR	134595	Identifier	arg_Ids		134494	1					
ANR	134596	ExpressionStatement	isValidIds = true	690:15:26248:26265	134494	10	True				
ANR	134597	AssignmentExpression	isValidIds = true		134494	0		=			
ANR	134598	Identifier	isValidIds		134494	0					
ANR	134599	Identifier	true		134494	1					
ANR	134600	ReturnStatement	return AXIS2_SUCCESS ;	692:16:26300:26320	134494	11	True				
ANR	134601	Identifier	AXIS2_SUCCESS		134494	0					
ANR	134602	ReturnType	bool WSF_CALL		134494	1					
ANR	134603	Identifier	AviaryQuery :: GetJobSummary :: setIdsAt		134494	2					
ANR	134604	ParameterList	"int i , AviaryCommon :: JobID * arg_Ids"		134494	3					
ANR	134605	Parameter	int i	633:49:24654:24658	134494	0	True				
ANR	134606	ParameterType	int		134494	0					
ANR	134607	Identifier	i		134494	1					
ANR	134608	Parameter	AviaryCommon :: JobID * arg_Ids	634:20:24681:24708	134494	1	True				
ANR	134609	ParameterType	AviaryCommon :: JobID *		134494	0					
ANR	134610	Identifier	arg_Ids		134494	1					
ANR	134611	CFGEntryNode	ENTRY		134494		True				
ANR	134612	CFGExitNode	EXIT		134494		True				
ANR	134613	Symbol	NULL		134494						
ANR	134614	Symbol	* property_Ids		134494						
ANR	134615	Symbol	isValidIds		134494						
ANR	134616	Symbol	* * property_Ids		134494						
ANR	134617	Symbol	false		134494						
ANR	134618	Symbol	i		134494						
ANR	134619	Symbol	non_nil_count		134494						
ANR	134620	Symbol	arg_Ids		134494						
ANR	134621	Symbol	property_Ids		134494						
ANR	134622	Symbol	* i		134494						
ANR	134623	Symbol	size		134494						
ANR	134624	Symbol	non_nil_exists		134494						
ANR	134625	Symbol	true		134494						
ANR	134626	Symbol	element		134494						
ANR	134627	Symbol	AXIS2_SUCCESS		134494						
ANR	134628	Function	AviaryQuery :: GetJobSummary :: addIds	698:12:26408:27078							
ANR	134629	FunctionDef	AviaryQuery :: GetJobSummary :: addIds (AviaryCommon :: JobID * arg_Ids)		134628	0					
ANR	134630	CompoundStatement		701:13:26533:27078	134628	0					
ANR	134631	IfStatement	if ( NULL == arg_Ids )		134628	0					
ANR	134632	Condition	NULL == arg_Ids	704:24:26577:26591	134628	0	True				
ANR	134633	EqualityExpression	NULL == arg_Ids		134628	0		==			
ANR	134634	Identifier	NULL		134628	0					
ANR	134635	Identifier	arg_Ids		134628	1					
ANR	134636	CompoundStatement		6:20:102:102	134628	1					
ANR	134637	ReturnStatement	return true ;	708:27:26688:26699	134628	0	True				
ANR	134638	Identifier	true		134628	0					
ANR	134639	IfStatement	if ( property_Ids == NULL )		134628	1					
ANR	134640	Condition	property_Ids == NULL	713:19:26788:26807	134628	0	True				
ANR	134641	EqualityExpression	property_Ids == NULL		134628	0		==			
ANR	134642	Identifier	property_Ids		134628	0					
ANR	134643	Identifier	NULL		134628	1					
ANR	134644	CompoundStatement		14:16:292:292	134628	1					
ANR	134645	ExpressionStatement	property_Ids = new std :: vector < AviaryCommon :: JobID * > ( )	715:20:26848:26902	134628	0	True				
ANR	134646	AssignmentExpression	property_Ids = new std :: vector < AviaryCommon :: JobID * > ( )		134628	0		=			
ANR	134647	Identifier	property_Ids		134628	0					
ANR	134648	UnaryExpression	new std :: vector < AviaryCommon :: JobID * > ( )		134628	1					
ANR	134649	ExpressionStatement	property_Ids -> push_back ( arg_Ids )	718:15:26952:26984	134628	2	True				
ANR	134650	CallExpression	property_Ids -> push_back ( arg_Ids )		134628	0					
ANR	134651	Callee	property_Ids -> push_back		134628	0					
ANR	134652	PtrMemberAccess	property_Ids -> push_back		134628	0					
ANR	134653	Identifier	property_Ids		134628	0					
ANR	134654	Identifier	push_back		134628	1					
ANR	134655	ArgumentList	arg_Ids		134628	1					
ANR	134656	Argument	arg_Ids		134628	0					
ANR	134657	Identifier	arg_Ids		134628	0					
ANR	134658	ExpressionStatement	isValidIds = true	720:16:27017:27034	134628	3	True				
ANR	134659	AssignmentExpression	isValidIds = true		134628	0		=			
ANR	134660	Identifier	isValidIds		134628	0					
ANR	134661	Identifier	true		134628	1					
ANR	134662	ReturnStatement	return true ;	721:16:27052:27063	134628	4	True				
ANR	134663	Identifier	true		134628	0					
ANR	134664	ReturnType	bool WSF_CALL		134628	1					
ANR	134665	Identifier	AviaryQuery :: GetJobSummary :: addIds		134628	2					
ANR	134666	ParameterList	AviaryCommon :: JobID * arg_Ids		134628	3					
ANR	134667	Parameter	AviaryCommon :: JobID * arg_Ids	700:20:26490:26517	134628	0	True				
ANR	134668	ParameterType	AviaryCommon :: JobID *		134628	0					
ANR	134669	Identifier	arg_Ids		134628	1					
ANR	134670	CFGEntryNode	ENTRY		134628		True				
ANR	134671	CFGExitNode	EXIT		134628		True				
ANR	134672	Symbol	arg_Ids		134628						
ANR	134673	Symbol	NULL		134628						
ANR	134674	Symbol	property_Ids		134628						
ANR	134675	Symbol	isValidIds		134628						
ANR	134676	Symbol	true		134628						
ANR	134677	Function	AviaryQuery :: GetJobSummary :: sizeofIds	727:12:27171:27415							
ANR	134678	FunctionDef	AviaryQuery :: GetJobSummary :: sizeofIds ()		134677	0					
ANR	134679	CompoundStatement		729:12:27248:27415	134677	0					
ANR	134680	IfStatement	if ( property_Ids == NULL )		134677	0					
ANR	134681	Condition	property_Ids == NULL	731:19:27270:27289	134677	0	True				
ANR	134682	EqualityExpression	property_Ids == NULL		134677	0		==			
ANR	134683	Identifier	property_Ids		134677	0					
ANR	134684	Identifier	NULL		134677	1					
ANR	134685	CompoundStatement		4:16:59:59	134677	1					
ANR	134686	ReturnStatement	return 0 ;	733:20:27330:27338	134677	0	True				
ANR	134687	PrimaryExpression	0		134677	0					
ANR	134688	ReturnStatement	return property_Ids -> size ( ) ;	735:16:27374:27401	134677	1	True				
ANR	134689	CallExpression	property_Ids -> size ( )		134677	0					
ANR	134690	Callee	property_Ids -> size		134677	0					
ANR	134691	PtrMemberAccess	property_Ids -> size		134677	0					
ANR	134692	Identifier	property_Ids		134677	0					
ANR	134693	Identifier	size		134677	1					
ANR	134694	ArgumentList			134677	1					
ANR	134695	ReturnType	int WSF_CALL		134677	1					
ANR	134696	Identifier	AviaryQuery :: GetJobSummary :: sizeofIds		134677	2					
ANR	134697	ParameterList			134677	3					
ANR	134698	CFGEntryNode	ENTRY		134677		True				
ANR	134699	CFGExitNode	EXIT		134677		True				
ANR	134700	Symbol	property_Ids		134677						
ANR	134701	Symbol	NULL		134677						
ANR	134702	Symbol	* property_Ids		134677						
ANR	134703	Symbol	property_Ids -> size		134677						
ANR	134704	Function	AviaryQuery :: GetJobSummary :: removeIdsAt	741:12:27521:27659							
ANR	134705	FunctionDef	AviaryQuery :: GetJobSummary :: removeIdsAt (int i)		134704	0					
ANR	134706	CompoundStatement		743:12:27606:27659	134704	0					
ANR	134707	ReturnStatement	return setIdsNilAt ( i ) ;	744:16:27624:27645	134704	0	True				
ANR	134708	CallExpression	setIdsNilAt ( i )		134704	0					
ANR	134709	Callee	setIdsNilAt		134704	0					
ANR	134710	Identifier	setIdsNilAt		134704	0					
ANR	134711	ArgumentList	i		134704	1					
ANR	134712	Argument	i		134704	0					
ANR	134713	Identifier	i		134704	0					
ANR	134714	ReturnType	bool WSF_CALL		134704	1					
ANR	134715	Identifier	AviaryQuery :: GetJobSummary :: removeIdsAt		134704	2					
ANR	134716	ParameterList	int i		134704	3					
ANR	134717	Parameter	int i	742:52:27587:27591	134704	0	True				
ANR	134718	ParameterType	int		134704	0					
ANR	134719	Identifier	i		134704	1					
ANR	134720	CFGEntryNode	ENTRY		134704		True				
ANR	134721	CFGExitNode	EXIT		134704		True				
ANR	134722	Symbol	setIdsNilAt		134704						
ANR	134723	Symbol	i		134704						
ANR	134724	Function	AviaryQuery :: GetJobSummary :: resetIds	752:11:27748:28691							
ANR	134725	FunctionDef	AviaryQuery :: GetJobSummary :: resetIds ()		134724	0					
ANR	134726	CompoundStatement		754:11:27823:28691	134724	0					
ANR	134727	IdentifierDeclStatement	int i = 0 ;	755:15:27840:27849	134724	0	True				
ANR	134728	IdentifierDecl	i = 0		134724	0					
ANR	134729	IdentifierDeclType	int		134724	0					
ANR	134730	Identifier	i		134724	1					
ANR	134731	AssignmentExpression	i = 0		134724	2		=			
ANR	134732	Identifier	i		134724	0					
ANR	134733	PrimaryExpression	0		134724	1					
ANR	134734	IdentifierDeclStatement	int count = 0 ;	756:15:27866:27879	134724	1	True				
ANR	134735	IdentifierDecl	count = 0		134724	0					
ANR	134736	IdentifierDeclType	int		134724	0					
ANR	134737	Identifier	count		134724	1					
ANR	134738	AssignmentExpression	count = 0		134724	2		=			
ANR	134739	Identifier	count		134724	0					
ANR	134740	PrimaryExpression	0		134724	1					
ANR	134741	IfStatement	if ( property_Ids != NULL )		134724	2					
ANR	134742	Condition	property_Ids != NULL	760:20:27919:27938	134724	0	True				
ANR	134743	EqualityExpression	property_Ids != NULL		134724	0		!=			
ANR	134744	Identifier	property_Ids		134724	0					
ANR	134745	Identifier	NULL		134724	1					
ANR	134746	CompoundStatement		9:18:153:224	134724	1					
ANR	134747	IdentifierDeclStatement	std :: vector < AviaryCommon :: JobID * > :: iterator it = property_Ids -> begin ( ) ;	762:18:27977:28048	134724	0	True				
ANR	134748	IdentifierDecl	it = property_Ids -> begin ( )		134724	0					
ANR	134749	IdentifierDeclType	std :: vector < AviaryCommon :: JobID * > :: iterator		134724	0					
ANR	134750	Identifier	it		134724	1					
ANR	134751	AssignmentExpression	it = property_Ids -> begin ( )		134724	2		=			
ANR	134752	Identifier	it		134724	0					
ANR	134753	CallExpression	property_Ids -> begin ( )		134724	1					
ANR	134754	Callee	property_Ids -> begin		134724	0					
ANR	134755	PtrMemberAccess	property_Ids -> begin		134724	0					
ANR	134756	Identifier	property_Ids		134724	0					
ANR	134757	Identifier	begin		134724	1					
ANR	134758	ArgumentList			134724	1					
ANR	134759	ForStatement	for ( ; it < property_Ids -> end ( ) ; ++ it )		134724	1					
ANR	134760	Condition	it < property_Ids -> end ( )	763:25:28075:28099	134724	0	True				
ANR	134761	RelationalExpression	it < property_Ids -> end ( )		134724	0		<			
ANR	134762	Identifier	it		134724	0					
ANR	134763	CallExpression	property_Ids -> end ( )		134724	1					
ANR	134764	Callee	property_Ids -> end		134724	0					
ANR	134765	PtrMemberAccess	property_Ids -> end		134724	0					
ANR	134766	Identifier	property_Ids		134724	0					
ANR	134767	Identifier	end		134724	1					
ANR	134768	ArgumentList			134724	1					
ANR	134769	UnaryExpression	++ it	763:53:28103:28106	134724	1	True				
ANR	134770	IncDec	++		134724	0					
ANR	134771	Identifier	it		134724	1					
ANR	134772	CompoundStatement		12:21:326:360	134724	2					
ANR	134773	IdentifierDeclStatement	AviaryCommon :: JobID * element = * it ;	765:21:28150:28184	134724	0	True				
ANR	134774	IdentifierDecl	* element = * it		134724	0					
ANR	134775	IdentifierDeclType	AviaryCommon :: JobID *		134724	0					
ANR	134776	Identifier	element		134724	1					
ANR	134777	AssignmentExpression	* element = * it		134724	2		=			
ANR	134778	Identifier	element		134724	0					
ANR	134779	UnaryOperationExpression	* it		134724	1					
ANR	134780	UnaryOperator	*		134724	0					
ANR	134781	Identifier	it		134724	1					
ANR	134782	IfStatement	if ( element != NULL )		134724	1					
ANR	134783	Condition	element != NULL	770:19:28253:28267	134724	0	True				
ANR	134784	EqualityExpression	element != NULL		134724	0		!=			
ANR	134785	Identifier	element		134724	0					
ANR	134786	Identifier	NULL		134724	1					
ANR	134787	CompoundStatement		18:16:462:462	134724	1					
ANR	134788	Statement	delete	774:25:28353:28358	134724	0	True				
ANR	134789	ExpressionStatement	element	774:33:28361:28368	134724	1	True				
ANR	134790	Identifier	element		134724	0					
ANR	134791	IfStatement	if ( NULL != property_Ids )		134724	3					
ANR	134792	Condition	NULL != property_Ids	786:23:28539:28558	134724	0	True				
ANR	134793	EqualityExpression	NULL != property_Ids		134724	0		!=			
ANR	134794	Identifier	NULL		134724	0					
ANR	134795	Identifier	property_Ids		134724	1					
ANR	134796	Statement	delete	787:17:28578:28583	134724	1	True				
ANR	134797	ExpressionStatement	property_Ids	787:24:28585:28597	134724	4	True				
ANR	134798	Identifier	property_Ids		134724	0					
ANR	134799	ExpressionStatement	isValidIds = false	789:15:28631:28649	134724	5	True				
ANR	134800	AssignmentExpression	isValidIds = false		134724	0		=			
ANR	134801	Identifier	isValidIds		134724	0					
ANR	134802	Identifier	false		134724	1					
ANR	134803	ReturnStatement	return true ;	790:15:28667:28678	134724	6	True				
ANR	134804	Identifier	true		134724	0					
ANR	134805	ReturnType	bool WSF_CALL		134724	1					
ANR	134806	Identifier	AviaryQuery :: GetJobSummary :: resetIds		134724	2					
ANR	134807	ParameterList			134724	3					
ANR	134808	CFGEntryNode	ENTRY		134724		True				
ANR	134809	CFGExitNode	EXIT		134724		True				
ANR	134810	Symbol	NULL		134724						
ANR	134811	Symbol	* property_Ids		134724						
ANR	134812	Symbol	isValidIds		134724						
ANR	134813	Symbol	count		134724						
ANR	134814	Symbol	false		134724						
ANR	134815	Symbol	i		134724						
ANR	134816	Symbol	it		134724						
ANR	134817	Symbol	* it		134724						
ANR	134818	Symbol	property_Ids		134724						
ANR	134819	Symbol	property_Ids -> begin		134724						
ANR	134820	Symbol	true		134724						
ANR	134821	Symbol	property_Ids -> end		134724						
ANR	134822	Symbol	element		134724						
ANR	134823	Function	AviaryQuery :: GetJobSummary :: isIdsNil	796:11:28775:28898							
ANR	134824	FunctionDef	AviaryQuery :: GetJobSummary :: isIdsNil ()		134823	0					
ANR	134825	CompoundStatement		798:11:28850:28898	134823	0					
ANR	134826	ReturnStatement	return ! isValidIds ;	799:15:28867:28885	134823	0	True				
ANR	134827	UnaryOperationExpression	! isValidIds		134823	0					
ANR	134828	UnaryOperator	!		134823	0					
ANR	134829	Identifier	isValidIds		134823	1					
ANR	134830	ReturnType	bool WSF_CALL		134823	1					
ANR	134831	Identifier	AviaryQuery :: GetJobSummary :: isIdsNil		134823	2					
ANR	134832	ParameterList			134823	3					
ANR	134833	CFGEntryNode	ENTRY		134823		True				
ANR	134834	CFGExitNode	EXIT		134823		True				
ANR	134835	Symbol	isValidIds		134823						
ANR	134836	Function	AviaryQuery :: GetJobSummary :: setIdsNil	805:11:29002:29125							
ANR	134837	FunctionDef	AviaryQuery :: GetJobSummary :: setIdsNil ()		134836	0					
ANR	134838	CompoundStatement		807:11:29078:29125	134836	0					
ANR	134839	ReturnStatement	return resetIds ( ) ;	808:15:29095:29112	134836	0	True				
ANR	134840	CallExpression	resetIds ( )		134836	0					
ANR	134841	Callee	resetIds		134836	0					
ANR	134842	Identifier	resetIds		134836	0					
ANR	134843	ArgumentList			134836	1					
ANR	134844	ReturnType	bool WSF_CALL		134836	1					
ANR	134845	Identifier	AviaryQuery :: GetJobSummary :: setIdsNil		134836	2					
ANR	134846	ParameterList			134836	3					
ANR	134847	CFGEntryNode	ENTRY		134836		True				
ANR	134848	CFGExitNode	EXIT		134836		True				
ANR	134849	Symbol	resetIds		134836						
ANR	134850	Function	AviaryQuery :: GetJobSummary :: isIdsNilAt	815:11:29226:29465							
ANR	134851	FunctionDef	AviaryQuery :: GetJobSummary :: isIdsNilAt (int i)		134850	0					
ANR	134852	CompoundStatement		817:11:29308:29465	134850	0					
ANR	134853	ReturnStatement	return ( isValidIds == false || NULL == property_Ids || NULL == ( * property_Ids ) [ i ] ) ;	818:15:29325:29451	134850	0	True				
ANR	134854	OrExpression	isValidIds == false || NULL == property_Ids || NULL == ( * property_Ids ) [ i ]		134850	0		||			
ANR	134855	EqualityExpression	isValidIds == false		134850	0		==			
ANR	134856	Identifier	isValidIds		134850	0					
ANR	134857	Identifier	false		134850	1					
ANR	134858	OrExpression	NULL == property_Ids || NULL == ( * property_Ids ) [ i ]		134850	1		||			
ANR	134859	EqualityExpression	NULL == property_Ids		134850	0		==			
ANR	134860	Identifier	NULL		134850	0					
ANR	134861	Identifier	property_Ids		134850	1					
ANR	134862	EqualityExpression	NULL == ( * property_Ids ) [ i ]		134850	1		==			
ANR	134863	Identifier	NULL		134850	0					
ANR	134864	ArrayIndexing	( * property_Ids ) [ i ]		134850	1					
ANR	134865	UnaryOperationExpression	* property_Ids		134850	0					
ANR	134866	UnaryOperator	*		134850	0					
ANR	134867	Identifier	property_Ids		134850	1					
ANR	134868	Identifier	i		134850	1					
ANR	134869	ReturnType	bool WSF_CALL		134850	1					
ANR	134870	Identifier	AviaryQuery :: GetJobSummary :: isIdsNilAt		134850	2					
ANR	134871	ParameterList	int i		134850	3					
ANR	134872	Parameter	int i	816:50:29290:29294	134850	0	True				
ANR	134873	ParameterType	int		134850	0					
ANR	134874	Identifier	i		134850	1					
ANR	134875	CFGEntryNode	ENTRY		134850		True				
ANR	134876	CFGExitNode	EXIT		134850		True				
ANR	134877	Symbol	* i		134850						
ANR	134878	Symbol	NULL		134850						
ANR	134879	Symbol	property_Ids		134850						
ANR	134880	Symbol	* property_Ids		134850						
ANR	134881	Symbol	* * property_Ids		134850						
ANR	134882	Symbol	isValidIds		134850						
ANR	134883	Symbol	false		134850						
ANR	134884	Symbol	i		134850						
ANR	134885	Function	AviaryQuery :: GetJobSummary :: setIdsNilAt	826:11:29543:31768							
ANR	134886	FunctionDef	AviaryQuery :: GetJobSummary :: setIdsNilAt (int i)		134885	0					
ANR	134887	CompoundStatement		828:11:29626:31768	134885	0					
ANR	134888	IdentifierDeclStatement	int size = 0 ;	829:16:29644:29656	134885	0	True				
ANR	134889	IdentifierDecl	size = 0		134885	0					
ANR	134890	IdentifierDeclType	int		134885	0					
ANR	134891	Identifier	size		134885	1					
ANR	134892	AssignmentExpression	size = 0		134885	2		=			
ANR	134893	Identifier	size		134885	0					
ANR	134894	PrimaryExpression	0		134885	1					
ANR	134895	IdentifierDeclStatement	int j ;	830:16:29674:29679	134885	1	True				
ANR	134896	IdentifierDecl	j		134885	0					
ANR	134897	IdentifierDeclType	int		134885	0					
ANR	134898	Identifier	j		134885	1					
ANR	134899	IdentifierDeclStatement	bool non_nil_exists = false ;	831:16:29697:29724	134885	2	True				
ANR	134900	IdentifierDecl	non_nil_exists = false		134885	0					
ANR	134901	IdentifierDeclType	bool		134885	0					
ANR	134902	Identifier	non_nil_exists		134885	1					
ANR	134903	AssignmentExpression	non_nil_exists = false		134885	2		=			
ANR	134904	Identifier	false		134885	0					
ANR	134905	Identifier	false		134885	1					
ANR	134906	IdentifierDeclStatement	int k = 0 ;	833:16:29743:29752	134885	3	True				
ANR	134907	IdentifierDecl	k = 0		134885	0					
ANR	134908	IdentifierDeclType	int		134885	0					
ANR	134909	Identifier	k		134885	1					
ANR	134910	AssignmentExpression	k = 0		134885	2		=			
ANR	134911	Identifier	k		134885	0					
ANR	134912	PrimaryExpression	0		134885	1					
ANR	134913	IfStatement	if ( property_Ids == NULL || isValidIds == false )		134885	4					
ANR	134914	Condition	property_Ids == NULL || isValidIds == false	835:19:29774:29844	134885	0	True				
ANR	134915	OrExpression	property_Ids == NULL || isValidIds == false		134885	0		||			
ANR	134916	EqualityExpression	property_Ids == NULL		134885	0		==			
ANR	134917	Identifier	property_Ids		134885	0					
ANR	134918	Identifier	NULL		134885	1					
ANR	134919	EqualityExpression	isValidIds == false		134885	1		==			
ANR	134920	Identifier	isValidIds		134885	0					
ANR	134921	Identifier	false		134885	1					
ANR	134922	CompoundStatement		10:16:236:236	134885	1					
ANR	134923	ExpressionStatement	non_nil_exists = false	839:20:29906:29928	134885	0	True				
ANR	134924	AssignmentExpression	non_nil_exists = false		134885	0		=			
ANR	134925	Identifier	non_nil_exists		134885	0					
ANR	134926	Identifier	false		134885	1					
ANR	134927	ElseStatement	else		134885	0					
ANR	134928	CompoundStatement		15:16:358:358	134885	0					
ANR	134929	ExpressionStatement	size = property_Ids -> size ( )	843:20:30007:30034	134885	0	True				
ANR	134930	AssignmentExpression	size = property_Ids -> size ( )		134885	0		=			
ANR	134931	Identifier	size		134885	0					
ANR	134932	CallExpression	property_Ids -> size ( )		134885	1					
ANR	134933	Callee	property_Ids -> size		134885	0					
ANR	134934	PtrMemberAccess	property_Ids -> size		134885	0					
ANR	134935	Identifier	property_Ids		134885	0					
ANR	134936	Identifier	size		134885	1					
ANR	134937	ArgumentList			134885	1					
ANR	134938	ForStatement	"for ( j = 0 , k = 0 ; j < size ; j ++ )"		134885	1					
ANR	134939	ForInit	"j = 0 , k = 0 ;"	844:24:30060:30072	134885	0	True				
ANR	134940	Expression	"j = 0 , k = 0"		134885	0					
ANR	134941	AssignmentExpression	j = 0		134885	0		=			
ANR	134942	Identifier	j		134885	0					
ANR	134943	PrimaryExpression	0		134885	1					
ANR	134944	AssignmentExpression	k = 0		134885	1		=			
ANR	134945	Identifier	k		134885	0					
ANR	134946	PrimaryExpression	0		134885	1					
ANR	134947	Condition	j < size	844:38:30074:30081	134885	1	True				
ANR	134948	RelationalExpression	j < size		134885	0		<			
ANR	134949	Identifier	j		134885	0					
ANR	134950	Identifier	size		134885	1					
ANR	134951	PostIncDecOperationExpression	j ++	844:48:30084:30087	134885	2	True				
ANR	134952	Identifier	j		134885	0					
ANR	134953	IncDec	++		134885	1					
ANR	134954	CompoundStatement		18:20:484:484	134885	3					
ANR	134955	IfStatement	if ( i == j )		134885	0					
ANR	134956	Condition	i == j	846:27:30140:30145	134885	0	True				
ANR	134957	EqualityExpression	i == j		134885	0		==			
ANR	134958	Identifier	i		134885	0					
ANR	134959	Identifier	j		134885	1					
ANR	134960	ContinueStatement	continue ;	846:35:30148:30156	134885	1	True				
ANR	134961	IfStatement	if ( NULL != ( * property_Ids ) [ i ] )		134885	1					
ANR	134962	Condition	NULL != ( * property_Ids ) [ i ]	847:27:30186:30211	134885	0	True				
ANR	134963	EqualityExpression	NULL != ( * property_Ids ) [ i ]		134885	0		!=			
ANR	134964	Identifier	NULL		134885	0					
ANR	134965	ArrayIndexing	( * property_Ids ) [ i ]		134885	1					
ANR	134966	UnaryOperationExpression	* property_Ids		134885	0					
ANR	134967	UnaryOperator	*		134885	0					
ANR	134968	Identifier	property_Ids		134885	1					
ANR	134969	Identifier	i		134885	1					
ANR	134970	CompoundStatement		21:24:611:611	134885	1					
ANR	134971	ExpressionStatement	k ++	849:28:30268:30271	134885	0	True				
ANR	134972	PostIncDecOperationExpression	k ++		134885	0					
ANR	134973	Identifier	k		134885	0					
ANR	134974	IncDec	++		134885	1					
ANR	134975	ExpressionStatement	non_nil_exists = true	850:28:30301:30322	134885	1	True				
ANR	134976	AssignmentExpression	non_nil_exists = true		134885	0		=			
ANR	134977	Identifier	non_nil_exists		134885	0					
ANR	134978	Identifier	true		134885	1					
ANR	134979	IfStatement	if ( k >= 0 )		134885	2					
ANR	134980	Condition	k >= 0	851:32:30356:30361	134885	0	True				
ANR	134981	RelationalExpression	k >= 0		134885	0		>=			
ANR	134982	Identifier	k		134885	0					
ANR	134983	PrimaryExpression	0		134885	1					
ANR	134984	CompoundStatement		25:28:765:765	134885	1					
ANR	134985	BreakStatement	break ;	853:32:30426:30431	134885	0	True				
ANR	134986	IfStatement	if ( k < 0 )		134885	5					
ANR	134987	Condition	k < 0	860:20:30567:30571	134885	0	True				
ANR	134988	RelationalExpression	k < 0		134885	0		<			
ANR	134989	Identifier	k		134885	0					
ANR	134990	PrimaryExpression	0		134885	1					
ANR	134991	CompoundStatement		34:16:963:963	134885	1					
ANR	134992	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Size of the array of ids is beinng set to be smaller than the specificed number of minOccurs(0)"" )"	862:23:30615:30771	134885	0	True				
ANR	134993	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Size of the array of ids is beinng set to be smaller than the specificed number of minOccurs(0)"" )"		134885	0					
ANR	134994	Callee	WSF_LOG_ERROR_MSG		134885	0					
ANR	134995	Identifier	WSF_LOG_ERROR_MSG		134885	0					
ANR	134996	ArgumentList	Environment :: getEnv ( ) -> log		134885	1					
ANR	134997	Argument	Environment :: getEnv ( ) -> log		134885	0					
ANR	134998	PtrMemberAccess	Environment :: getEnv ( ) -> log		134885	0					
ANR	134999	CallExpression	Environment :: getEnv ( )		134885	0					
ANR	135000	Callee	Environment :: getEnv		134885	0					
ANR	135001	Identifier	Environment :: getEnv		134885	0					
ANR	135002	ArgumentList			134885	1					
ANR	135003	Identifier	log		134885	1					
ANR	135004	Argument	WSF_LOG_SI		134885	1					
ANR	135005	Identifier	WSF_LOG_SI		134885	0					
ANR	135006	Argument	"""Size of the array of ids is beinng set to be smaller than the specificed number of minOccurs(0)"""		134885	2					
ANR	135007	PrimaryExpression	"""Size of the array of ids is beinng set to be smaller than the specificed number of minOccurs(0)"""		134885	0					
ANR	135008	ReturnStatement	return AXIS2_FAILURE ;	863:23:30796:30816	134885	1	True				
ANR	135009	Identifier	AXIS2_FAILURE		134885	0					
ANR	135010	IfStatement	if ( property_Ids == NULL )		134885	6					
ANR	135011	Condition	property_Ids == NULL	866:19:30857:30876	134885	0	True				
ANR	135012	EqualityExpression	property_Ids == NULL		134885	0		==			
ANR	135013	Identifier	property_Ids		134885	0					
ANR	135014	Identifier	NULL		134885	1					
ANR	135015	CompoundStatement		40:16:1268:1268	134885	1					
ANR	135016	ExpressionStatement	isValidIds = false	868:20:30917:30935	134885	0	True				
ANR	135017	AssignmentExpression	isValidIds = false		134885	0		=			
ANR	135018	Identifier	isValidIds		134885	0					
ANR	135019	Identifier	false		134885	1					
ANR	135020	ReturnStatement	return true ;	870:20:30978:30989	134885	1	True				
ANR	135021	Identifier	true		134885	0					
ANR	135022	IdentifierDeclStatement	AviaryCommon :: JobID * element = ( * property_Ids ) [ i ] ;	874:17:31112:31161	134885	7	True				
ANR	135023	IdentifierDecl	* element = ( * property_Ids ) [ i ]		134885	0					
ANR	135024	IdentifierDeclType	AviaryCommon :: JobID *		134885	0					
ANR	135025	Identifier	element		134885	1					
ANR	135026	AssignmentExpression	* element = ( * property_Ids ) [ i ]		134885	2		=			
ANR	135027	Identifier	element		134885	0					
ANR	135028	ArrayIndexing	( * property_Ids ) [ i ]		134885	1					
ANR	135029	UnaryOperationExpression	* property_Ids		134885	0					
ANR	135030	UnaryOperator	*		134885	0					
ANR	135031	Identifier	property_Ids		134885	1					
ANR	135032	Identifier	i		134885	1					
ANR	135033	IfStatement	if ( NULL != element )		134885	8					
ANR	135034	Condition	NULL != element	875:19:31182:31196	134885	0	True				
ANR	135035	EqualityExpression	NULL != element		134885	0		!=			
ANR	135036	Identifier	NULL		134885	0					
ANR	135037	Identifier	element		134885	1					
ANR	135038	CompoundStatement		49:16:1588:1588	134885	1					
ANR	135039	Statement	delete	880:24:31298:31303	134885	0	True				
ANR	135040	ExpressionStatement	element	880:31:31305:31312	134885	1	True				
ANR	135041	Identifier	element		134885	0					
ANR	135042	IfStatement	if ( ! non_nil_exists )		134885	9					
ANR	135043	Condition	! non_nil_exists	884:23:31396:31410	134885	0	True				
ANR	135044	UnaryOperationExpression	! non_nil_exists		134885	0					
ANR	135045	UnaryOperator	!		134885	0					
ANR	135046	Identifier	non_nil_exists		134885	1					
ANR	135047	CompoundStatement		58:20:1806:1806	134885	1					
ANR	135048	ExpressionStatement	isValidIds = false	887:24:31484:31502	134885	0	True				
ANR	135049	AssignmentExpression	isValidIds = false		134885	0		=			
ANR	135050	Identifier	isValidIds		134885	0					
ANR	135051	Identifier	false		134885	1					
ANR	135052	ExpressionStatement	( * property_Ids ) [ i ] = NULL	888:24:31528:31553	134885	1	True				
ANR	135053	AssignmentExpression	( * property_Ids ) [ i ] = NULL		134885	0		=			
ANR	135054	ArrayIndexing	( * property_Ids ) [ i ]		134885	0					
ANR	135055	UnaryOperationExpression	* property_Ids		134885	0					
ANR	135056	UnaryOperator	*		134885	0					
ANR	135057	Identifier	property_Ids		134885	1					
ANR	135058	Identifier	i		134885	1					
ANR	135059	Identifier	NULL		134885	1					
ANR	135060	ReturnStatement	return AXIS2_SUCCESS ;	889:24:31579:31599	134885	2	True				
ANR	135061	Identifier	AXIS2_SUCCESS		134885	0					
ANR	135062	ExpressionStatement	( * property_Ids ) [ i ] = NULL	894:16:31674:31699	134885	10	True				
ANR	135063	AssignmentExpression	( * property_Ids ) [ i ] = NULL		134885	0		=			
ANR	135064	ArrayIndexing	( * property_Ids ) [ i ]		134885	0					
ANR	135065	UnaryOperationExpression	* property_Ids		134885	0					
ANR	135066	UnaryOperator	*		134885	0					
ANR	135067	Identifier	property_Ids		134885	1					
ANR	135068	Identifier	i		134885	1					
ANR	135069	Identifier	NULL		134885	1					
ANR	135070	ReturnStatement	return AXIS2_SUCCESS ;	896:16:31734:31754	134885	11	True				
ANR	135071	Identifier	AXIS2_SUCCESS		134885	0					
ANR	135072	ReturnType	bool WSF_CALL		134885	1					
ANR	135073	Identifier	AviaryQuery :: GetJobSummary :: setIdsNilAt		134885	2					
ANR	135074	ParameterList	int i		134885	3					
ANR	135075	Parameter	int i	827:51:29608:29612	134885	0	True				
ANR	135076	ParameterType	int		134885	0					
ANR	135077	Identifier	i		134885	1					
ANR	135078	CFGEntryNode	ENTRY		134885		True				
ANR	135079	CFGExitNode	EXIT		134885		True				
ANR	135080	Symbol	Environment :: getEnv		134885						
ANR	135081	Symbol	NULL		134885						
ANR	135082	Symbol	* property_Ids		134885						
ANR	135083	Symbol	isValidIds		134885						
ANR	135084	Symbol	* * property_Ids		134885						
ANR	135085	Symbol	false		134885						
ANR	135086	Symbol	i		134885						
ANR	135087	Symbol	j		134885						
ANR	135088	Symbol	k		134885						
ANR	135089	Symbol	Environment :: getEnv ( ) -> log		134885						
ANR	135090	Symbol	AXIS2_FAILURE		134885						
ANR	135091	Symbol	property_Ids		134885						
ANR	135092	Symbol	* i		134885						
ANR	135093	Symbol	size		134885						
ANR	135094	Symbol	WSF_LOG_SI		134885						
ANR	135095	Symbol	* Environment :: getEnv		134885						
ANR	135096	Symbol	non_nil_exists		134885						
ANR	135097	Symbol	true		134885						
ANR	135098	Symbol	property_Ids -> size		134885						
ANR	135099	Symbol	element		134885						
ANR	135100	Symbol	AXIS2_SUCCESS		134885						
ANR	135101	Function	AviaryQuery :: GetJobSummary :: getProperty2	905:12:31891:32030							
ANR	135102	FunctionDef	AviaryQuery :: GetJobSummary :: getProperty2 ()		135101	0					
ANR	135103	CompoundStatement		907:12:31972:32030	135101	0					
ANR	135104	ReturnStatement	return getPartialMatches ( ) ;	908:16:31990:32016	135101	0	True				
ANR	135105	CallExpression	getPartialMatches ( )		135101	0					
ANR	135106	Callee	getPartialMatches		135101	0					
ANR	135107	Identifier	getPartialMatches		135101	0					
ANR	135108	ArgumentList			135101	1					
ANR	135109	ReturnType	bool WSF_CALL		135101	1					
ANR	135110	Identifier	AviaryQuery :: GetJobSummary :: getProperty2		135101	2					
ANR	135111	ParameterList			135101	3					
ANR	135112	CFGEntryNode	ENTRY		135101		True				
ANR	135113	CFGExitNode	EXIT		135101		True				
ANR	135114	Symbol	getPartialMatches		135101						
ANR	135115	Function	AviaryQuery :: GetJobSummary :: getPartialMatches	914:12:32119:32269							
ANR	135116	FunctionDef	AviaryQuery :: GetJobSummary :: getPartialMatches ()		135115	0					
ANR	135117	CompoundStatement		916:13:32206:32269	135115	0					
ANR	135118	ReturnStatement	return property_PartialMatches ;	917:16:32224:32254	135115	0	True				
ANR	135119	Identifier	property_PartialMatches		135115	0					
ANR	135120	ReturnType	bool WSF_CALL		135115	1					
ANR	135121	Identifier	AviaryQuery :: GetJobSummary :: getPartialMatches		135115	2					
ANR	135122	ParameterList			135115	3					
ANR	135123	CFGEntryNode	ENTRY		135115		True				
ANR	135124	CFGExitNode	EXIT		135115		True				
ANR	135125	Symbol	property_PartialMatches		135115						
ANR	135126	Function	AviaryQuery :: GetJobSummary :: setPartialMatches	923:12:32357:32994							
ANR	135127	FunctionDef	AviaryQuery :: GetJobSummary :: setPartialMatches (bool arg_PartialMatches)		135126	0					
ANR	135128	CompoundStatement		926:13:32489:32994	135126	0					
ANR	135129	IfStatement	if ( isValidPartialMatches && arg_PartialMatches == property_PartialMatches )		135126	0					
ANR	135130	Condition	isValidPartialMatches && arg_PartialMatches == property_PartialMatches	929:19:32528:32621	135126	0	True				
ANR	135131	AndExpression	isValidPartialMatches && arg_PartialMatches == property_PartialMatches		135126	0		&&			
ANR	135132	Identifier	isValidPartialMatches		135126	0					
ANR	135133	EqualityExpression	arg_PartialMatches == property_PartialMatches		135126	1		==			
ANR	135134	Identifier	arg_PartialMatches		135126	0					
ANR	135135	Identifier	property_PartialMatches		135126	1					
ANR	135136	CompoundStatement		6:16:150:150	135126	1					
ANR	135137	ReturnStatement	return true ;	933:20:32683:32694	135126	0	True				
ANR	135138	Identifier	true		135126	0					
ANR	135139	ExpressionStatement	resetPartialMatches ( )	939:16:32766:32787	135126	1	True				
ANR	135140	CallExpression	resetPartialMatches ( )		135126	0					
ANR	135141	Callee	resetPartialMatches		135126	0					
ANR	135142	Identifier	resetPartialMatches		135126	0					
ANR	135143	ArgumentList			135126	1					
ANR	135144	ExpressionStatement	property_PartialMatches = arg_PartialMatches	942:24:32831:32875	135126	2	True				
ANR	135145	AssignmentExpression	property_PartialMatches = arg_PartialMatches		135126	0		=			
ANR	135146	Identifier	property_PartialMatches		135126	0					
ANR	135147	Identifier	arg_PartialMatches		135126	1					
ANR	135148	ExpressionStatement	isValidPartialMatches = true	943:24:32901:32929	135126	3	True				
ANR	135149	AssignmentExpression	isValidPartialMatches = true		135126	0		=			
ANR	135150	Identifier	isValidPartialMatches		135126	0					
ANR	135151	Identifier	true		135126	1					
ANR	135152	ReturnStatement	return true ;	945:16:32968:32979	135126	4	True				
ANR	135153	Identifier	true		135126	0					
ANR	135154	ReturnType	bool WSF_CALL		135126	1					
ANR	135155	Identifier	AviaryQuery :: GetJobSummary :: setPartialMatches		135126	2					
ANR	135156	ParameterList	bool arg_PartialMatches		135126	3					
ANR	135157	Parameter	bool arg_PartialMatches	925:20:32450:32473	135126	0	True				
ANR	135158	ParameterType	bool		135126	0					
ANR	135159	Identifier	arg_PartialMatches		135126	1					
ANR	135160	CFGEntryNode	ENTRY		135126		True				
ANR	135161	CFGExitNode	EXIT		135126		True				
ANR	135162	Symbol	arg_PartialMatches		135126						
ANR	135163	Symbol	property_PartialMatches		135126						
ANR	135164	Symbol	true		135126						
ANR	135165	Symbol	isValidPartialMatches		135126						
ANR	135166	Function	AviaryQuery :: GetJobSummary :: resetPartialMatches	953:11:33095:33343							
ANR	135167	FunctionDef	AviaryQuery :: GetJobSummary :: resetPartialMatches ()		135166	0					
ANR	135168	CompoundStatement		955:11:33181:33343	135166	0					
ANR	135169	IdentifierDeclStatement	int i = 0 ;	956:15:33198:33207	135166	0	True				
ANR	135170	IdentifierDecl	i = 0		135166	0					
ANR	135171	IdentifierDeclType	int		135166	0					
ANR	135172	Identifier	i		135166	1					
ANR	135173	AssignmentExpression	i = 0		135166	2		=			
ANR	135174	Identifier	i		135166	0					
ANR	135175	PrimaryExpression	0		135166	1					
ANR	135176	IdentifierDeclStatement	int count = 0 ;	957:15:33224:33237	135166	1	True				
ANR	135177	IdentifierDecl	count = 0		135166	0					
ANR	135178	IdentifierDeclType	int		135166	0					
ANR	135179	Identifier	count		135166	1					
ANR	135180	AssignmentExpression	count = 0		135166	2		=			
ANR	135181	Identifier	count		135166	0					
ANR	135182	PrimaryExpression	0		135166	1					
ANR	135183	ExpressionStatement	isValidPartialMatches = false	961:15:33272:33301	135166	2	True				
ANR	135184	AssignmentExpression	isValidPartialMatches = false		135166	0		=			
ANR	135185	Identifier	isValidPartialMatches		135166	0					
ANR	135186	Identifier	false		135166	1					
ANR	135187	ReturnStatement	return true ;	962:15:33319:33330	135166	3	True				
ANR	135188	Identifier	true		135166	0					
ANR	135189	ReturnType	bool WSF_CALL		135166	1					
ANR	135190	Identifier	AviaryQuery :: GetJobSummary :: resetPartialMatches		135166	2					
ANR	135191	ParameterList			135166	3					
ANR	135192	CFGEntryNode	ENTRY		135166		True				
ANR	135193	CFGExitNode	EXIT		135166		True				
ANR	135194	Symbol	count		135166						
ANR	135195	Symbol	false		135166						
ANR	135196	Symbol	true		135166						
ANR	135197	Symbol	i		135166						
ANR	135198	Symbol	isValidPartialMatches		135166						
ANR	135199	Function	AviaryQuery :: GetJobSummary :: isPartialMatchesNil	968:11:33438:33583							
ANR	135200	FunctionDef	AviaryQuery :: GetJobSummary :: isPartialMatchesNil ()		135199	0					
ANR	135201	CompoundStatement		970:11:33524:33583	135199	0					
ANR	135202	ReturnStatement	return ! isValidPartialMatches ;	971:15:33541:33570	135199	0	True				
ANR	135203	UnaryOperationExpression	! isValidPartialMatches		135199	0					
ANR	135204	UnaryOperator	!		135199	0					
ANR	135205	Identifier	isValidPartialMatches		135199	1					
ANR	135206	ReturnType	bool WSF_CALL		135199	1					
ANR	135207	Identifier	AviaryQuery :: GetJobSummary :: isPartialMatchesNil		135199	2					
ANR	135208	ParameterList			135199	3					
ANR	135209	CFGEntryNode	ENTRY		135199		True				
ANR	135210	CFGExitNode	EXIT		135199		True				
ANR	135211	Symbol	isValidPartialMatches		135199						
ANR	135212	Function	AviaryQuery :: GetJobSummary :: setPartialMatchesNil	977:11:33698:33843							
ANR	135213	FunctionDef	AviaryQuery :: GetJobSummary :: setPartialMatchesNil ()		135212	0					
ANR	135214	CompoundStatement		979:11:33785:33843	135212	0					
ANR	135215	ReturnStatement	return resetPartialMatches ( ) ;	980:15:33802:33830	135212	0	True				
ANR	135216	CallExpression	resetPartialMatches ( )		135212	0					
ANR	135217	Callee	resetPartialMatches		135212	0					
ANR	135218	Identifier	resetPartialMatches		135212	0					
ANR	135219	ArgumentList			135212	1					
ANR	135220	ReturnType	bool WSF_CALL		135212	1					
ANR	135221	Identifier	AviaryQuery :: GetJobSummary :: setPartialMatchesNil		135212	2					
ANR	135222	ParameterList			135212	3					
ANR	135223	CFGEntryNode	ENTRY		135212		True				
ANR	135224	CFGExitNode	EXIT		135212		True				
ANR	135225	Symbol	resetPartialMatches		135212						
