command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3486561	File	data/converged/CVE-2011-4930_htcondor/src_condor_job_router_VanillaToGrid_main.cpp								
ANR	3486562	DeclStmt									
ANR	3486563	Decl							const char	const char *	MYID
ANR	3486564	Function	die	36:0:1126:1196							
ANR	3486565	FunctionDef	die (const char * s)		3486564	0					
ANR	3486566	CompoundStatement		36:25:1151:1196	3486564	0					
ANR	3486567	ExpressionStatement	"printf ( ""FATAL ERROR: %s\\n"" , s )"	37:1:1154:1184	3486564	0	True				
ANR	3486568	CallExpression	"printf ( ""FATAL ERROR: %s\\n"" , s )"		3486564	0					
ANR	3486569	Callee	printf		3486564	0					
ANR	3486570	Identifier	printf		3486564	0					
ANR	3486571	ArgumentList	"""FATAL ERROR: %s\\n"""		3486564	1					
ANR	3486572	Argument	"""FATAL ERROR: %s\\n"""		3486564	0					
ANR	3486573	PrimaryExpression	"""FATAL ERROR: %s\\n"""		3486564	0					
ANR	3486574	Argument	s		3486564	1					
ANR	3486575	Identifier	s		3486564	0					
ANR	3486576	ExpressionStatement	exit ( 1 )	38:1:1187:1194	3486564	1	True				
ANR	3486577	CallExpression	exit ( 1 )		3486564	0					
ANR	3486578	Callee	exit		3486564	0					
ANR	3486579	Identifier	exit		3486564	0					
ANR	3486580	ArgumentList	1		3486564	1					
ANR	3486581	Argument	1		3486564	0					
ANR	3486582	PrimaryExpression	1		3486564	0					
ANR	3486583	ReturnType	void		3486564	1					
ANR	3486584	Identifier	die		3486564	2					
ANR	3486585	ParameterList	const char * s		3486564	3					
ANR	3486586	Parameter	const char * s	36:9:1135:1148	3486564	0	True				
ANR	3486587	ParameterType	const char *		3486564	0					
ANR	3486588	Identifier	s		3486564	1					
ANR	3486589	CFGEntryNode	ENTRY		3486564		True				
ANR	3486590	CFGExitNode	EXIT		3486564		True				
ANR	3486591	Symbol	s		3486564						
ANR	3486592	Function	slurp_file	41:0:1199:1549							
ANR	3486593	FunctionDef	slurp_file (const char * filename)		3486592	0					
ANR	3486594	CompoundStatement		41:43:1242:1549	3486592	0					
ANR	3486595	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( filename , O_RDONLY ) ;"	42:1:1245:1298	3486592	0	True				
ANR	3486596	IdentifierDecl	"fd = safe_open_wrapper_follow ( filename , O_RDONLY )"		3486592	0					
ANR	3486597	IdentifierDeclType	int		3486592	0					
ANR	3486598	Identifier	fd		3486592	1					
ANR	3486599	AssignmentExpression	"fd = safe_open_wrapper_follow ( filename , O_RDONLY )"		3486592	2		=			
ANR	3486600	Identifier	fd		3486592	0					
ANR	3486601	CallExpression	"safe_open_wrapper_follow ( filename , O_RDONLY )"		3486592	1					
ANR	3486602	Callee	safe_open_wrapper_follow		3486592	0					
ANR	3486603	Identifier	safe_open_wrapper_follow		3486592	0					
ANR	3486604	ArgumentList	filename		3486592	1					
ANR	3486605	Argument	filename		3486592	0					
ANR	3486606	Identifier	filename		3486592	0					
ANR	3486607	Argument	O_RDONLY		3486592	1					
ANR	3486608	Identifier	O_RDONLY		3486592	0					
ANR	3486609	IfStatement	if ( fd == - 1 )		3486592	1					
ANR	3486610	Condition	fd == - 1	43:4:1304:1311	3486592	0	True				
ANR	3486611	EqualityExpression	fd == - 1		3486592	0		==			
ANR	3486612	Identifier	fd		3486592	0					
ANR	3486613	UnaryOperationExpression	- 1		3486592	1					
ANR	3486614	UnaryOperator	-		3486592	0					
ANR	3486615	PrimaryExpression	1		3486592	1					
ANR	3486616	CompoundStatement		3:14:71:71	3486592	1					
ANR	3486617	ExpressionStatement	"die ( ""failed to open input"" )"	44:2:1318:1345	3486592	0	True				
ANR	3486618	CallExpression	"die ( ""failed to open input"" )"		3486592	0					
ANR	3486619	Callee	die		3486592	0					
ANR	3486620	Identifier	die		3486592	0					
ANR	3486621	ArgumentList	"""failed to open input"""		3486592	1					
ANR	3486622	Argument	"""failed to open input"""		3486592	0					
ANR	3486623	PrimaryExpression	"""failed to open input"""		3486592	0					
ANR	3486624	IdentifierDeclStatement	MyString s ;	46:1:1351:1361	3486592	2	True				
ANR	3486625	IdentifierDecl	s		3486592	0					
ANR	3486626	IdentifierDeclType	MyString		3486592	0					
ANR	3486627	Identifier	s		3486592	1					
ANR	3486628	IdentifierDeclStatement	char buf [ 1024 ] ;	47:1:1364:1378	3486592	3	True				
ANR	3486629	IdentifierDecl	buf [ 1024 ]		3486592	0					
ANR	3486630	IdentifierDeclType	char [ 1024 ]		3486592	0					
ANR	3486631	Identifier	buf		3486592	1					
ANR	3486632	PrimaryExpression	1024		3486592	2					
ANR	3486633	WhileStatement	while ( true )		3486592	4					
ANR	3486634	Condition	true	48:7:1387:1390	3486592	0	True				
ANR	3486635	Identifier	true		3486592	0					
ANR	3486636	CompoundStatement		9:2:154:192	3486592	1					
ANR	3486637	IdentifierDeclStatement	"int bytes = read ( fd , buf , sizeof ( buf ) ) ;"	49:2:1397:1435	3486592	0	True				
ANR	3486638	IdentifierDecl	"bytes = read ( fd , buf , sizeof ( buf ) )"		3486592	0					
ANR	3486639	IdentifierDeclType	int		3486592	0					
ANR	3486640	Identifier	bytes		3486592	1					
ANR	3486641	AssignmentExpression	"bytes = read ( fd , buf , sizeof ( buf ) )"		3486592	2		=			
ANR	3486642	Identifier	bytes		3486592	0					
ANR	3486643	CallExpression	"read ( fd , buf , sizeof ( buf ) )"		3486592	1					
ANR	3486644	Callee	read		3486592	0					
ANR	3486645	Identifier	read		3486592	0					
ANR	3486646	ArgumentList	fd		3486592	1					
ANR	3486647	Argument	fd		3486592	0					
ANR	3486648	Identifier	fd		3486592	0					
ANR	3486649	Argument	buf		3486592	1					
ANR	3486650	Identifier	buf		3486592	0					
ANR	3486651	Argument	sizeof ( buf )		3486592	2					
ANR	3486652	SizeofExpression	sizeof ( buf )		3486592	0					
ANR	3486653	Sizeof	sizeof		3486592	0					
ANR	3486654	SizeofOperand	buf		3486592	1					
ANR	3486655	ForStatement	for ( int i = 0 ; i < bytes ; ++ i )		3486592	1					
ANR	3486656	ForInit	int i = 0 ;	50:6:1443:1452	3486592	0	True				
ANR	3486657	IdentifierDeclStatement	int i = 0 ;		3486592	0					
ANR	3486658	IdentifierDecl	i = 0		3486592	0					
ANR	3486659	IdentifierDeclType	int		3486592	0					
ANR	3486660	Identifier	i		3486592	1					
ANR	3486661	AssignmentExpression	i = 0		3486592	2		=			
ANR	3486662	Identifier	i		3486592	0					
ANR	3486663	PrimaryExpression	0		3486592	1					
ANR	3486664	Condition	i < bytes	50:17:1454:1462	3486592	1	True				
ANR	3486665	RelationalExpression	i < bytes		3486592	0		<			
ANR	3486666	Identifier	i		3486592	0					
ANR	3486667	Identifier	bytes		3486592	1					
ANR	3486668	UnaryExpression	++ i	50:28:1465:1467	3486592	2	True				
ANR	3486669	IncDec	++		3486592	0					
ANR	3486670	Identifier	i		3486592	1					
ANR	3486671	CompoundStatement		10:33:227:227	3486592	3					
ANR	3486672	ExpressionStatement	s += buf [ i ]	51:3:1475:1486	3486592	0	True				
ANR	3486673	AssignmentExpression	s += buf [ i ]		3486592	0		+=			
ANR	3486674	Identifier	s		3486592	0					
ANR	3486675	ArrayIndexing	buf [ i ]		3486592	1					
ANR	3486676	Identifier	buf		3486592	0					
ANR	3486677	Identifier	i		3486592	1					
ANR	3486678	IfStatement	if ( bytes != sizeof ( buf ) )		3486592	2					
ANR	3486679	Condition	bytes != sizeof ( buf )	53:5:1497:1516	3486592	0	True				
ANR	3486680	EqualityExpression	bytes != sizeof ( buf )		3486592	0		!=			
ANR	3486681	Identifier	bytes		3486592	0					
ANR	3486682	SizeofExpression	sizeof ( buf )		3486592	1					
ANR	3486683	Sizeof	sizeof		3486592	0					
ANR	3486684	SizeofOperand	buf		3486592	1					
ANR	3486685	CompoundStatement		13:27:276:276	3486592	1					
ANR	3486686	BreakStatement	break ;	54:3:1524:1529	3486592	0	True				
ANR	3486687	ReturnStatement	return s ;	57:1:1539:1547	3486592	5	True				
ANR	3486688	Identifier	s		3486592	0					
ANR	3486689	ReturnType	MyString		3486592	1					
ANR	3486690	Identifier	slurp_file		3486592	2					
ANR	3486691	ParameterList	const char * filename		3486592	3					
ANR	3486692	Parameter	const char * filename	41:20:1219:1239	3486592	0	True				
ANR	3486693	ParameterType	const char *		3486592	0					
ANR	3486694	Identifier	filename		3486592	1					
ANR	3486695	CFGEntryNode	ENTRY		3486592		True				
ANR	3486696	CFGExitNode	EXIT		3486592		True				
ANR	3486697	Symbol	buf		3486592						
ANR	3486698	Symbol	* buf		3486592						
ANR	3486699	Symbol	filename		3486592						
ANR	3486700	Symbol	safe_open_wrapper_follow		3486592						
ANR	3486701	Symbol	O_RDONLY		3486592						
ANR	3486702	Symbol	s		3486592						
ANR	3486703	Symbol	read		3486592						
ANR	3486704	Symbol	* i		3486592						
ANR	3486705	Symbol	bytes		3486592						
ANR	3486706	Symbol	true		3486592						
ANR	3486707	Symbol	i		3486592						
ANR	3486708	Symbol	fd		3486592						
ANR	3486709	Function	write_file	60:0:1552:1746							
ANR	3486710	FunctionDef	"write_file (const char * filename , const char * data)"		3486709	0					
ANR	3486711	CompoundStatement		60:58:1610:1746	3486709	0					
ANR	3486712	IdentifierDeclStatement	"FILE * f = safe_fopen_wrapper ( filename , ""w"" ) ;"	61:1:1613:1657	3486709	0	True				
ANR	3486713	IdentifierDecl	"* f = safe_fopen_wrapper ( filename , ""w"" )"		3486709	0					
ANR	3486714	IdentifierDeclType	FILE *		3486709	0					
ANR	3486715	Identifier	f		3486709	1					
ANR	3486716	AssignmentExpression	"* f = safe_fopen_wrapper ( filename , ""w"" )"		3486709	2		=			
ANR	3486717	Identifier	f		3486709	0					
ANR	3486718	CallExpression	"safe_fopen_wrapper ( filename , ""w"" )"		3486709	1					
ANR	3486719	Callee	safe_fopen_wrapper		3486709	0					
ANR	3486720	Identifier	safe_fopen_wrapper		3486709	0					
ANR	3486721	ArgumentList	filename		3486709	1					
ANR	3486722	Argument	filename		3486709	0					
ANR	3486723	Identifier	filename		3486709	0					
ANR	3486724	Argument	"""w"""		3486709	1					
ANR	3486725	PrimaryExpression	"""w"""		3486709	0					
ANR	3486726	IfStatement	if ( ! f )		3486709	1					
ANR	3486727	Condition	! f	62:5:1664:1666	3486709	0	True				
ANR	3486728	UnaryOperationExpression	! f		3486709	0					
ANR	3486729	UnaryOperator	!		3486709	0					
ANR	3486730	Identifier	f		3486709	1					
ANR	3486731	CompoundStatement		3:11:59:59	3486709	1					
ANR	3486732	ExpressionStatement	"die ( ""Failed to open output"" )"	63:2:1674:1702	3486709	0	True				
ANR	3486733	CallExpression	"die ( ""Failed to open output"" )"		3486709	0					
ANR	3486734	Callee	die		3486709	0					
ANR	3486735	Identifier	die		3486709	0					
ANR	3486736	ArgumentList	"""Failed to open output"""		3486709	1					
ANR	3486737	Argument	"""Failed to open output"""		3486709	0					
ANR	3486738	PrimaryExpression	"""Failed to open output"""		3486709	0					
ANR	3486739	ExpressionStatement	"fprintf ( f , ""%s\\n"" , data )"	65:1:1708:1732	3486709	2	True				
ANR	3486740	CallExpression	"fprintf ( f , ""%s\\n"" , data )"		3486709	0					
ANR	3486741	Callee	fprintf		3486709	0					
ANR	3486742	Identifier	fprintf		3486709	0					
ANR	3486743	ArgumentList	f		3486709	1					
ANR	3486744	Argument	f		3486709	0					
ANR	3486745	Identifier	f		3486709	0					
ANR	3486746	Argument	"""%s\\n"""		3486709	1					
ANR	3486747	PrimaryExpression	"""%s\\n"""		3486709	0					
ANR	3486748	Argument	data		3486709	2					
ANR	3486749	Identifier	data		3486709	0					
ANR	3486750	ExpressionStatement	fclose ( f )	66:1:1735:1744	3486709	3	True				
ANR	3486751	CallExpression	fclose ( f )		3486709	0					
ANR	3486752	Callee	fclose		3486709	0					
ANR	3486753	Identifier	fclose		3486709	0					
ANR	3486754	ArgumentList	f		3486709	1					
ANR	3486755	Argument	f		3486709	0					
ANR	3486756	Identifier	f		3486709	0					
ANR	3486757	ReturnType	void		3486709	1					
ANR	3486758	Identifier	write_file		3486709	2					
ANR	3486759	ParameterList	"const char * filename , const char * data"		3486709	3					
ANR	3486760	Parameter	const char * filename	60:16:1568:1588	3486709	0	True				
ANR	3486761	ParameterType	const char *		3486709	0					
ANR	3486762	Identifier	filename		3486709	1					
ANR	3486763	Parameter	const char * data	60:39:1591:1607	3486709	1	True				
ANR	3486764	ParameterType	const char *		3486709	0					
ANR	3486765	Identifier	data		3486709	1					
ANR	3486766	CFGEntryNode	ENTRY		3486709		True				
ANR	3486767	CFGExitNode	EXIT		3486709		True				
ANR	3486768	Symbol	filename		3486709						
ANR	3486769	Symbol	data		3486709						
ANR	3486770	Symbol	safe_fopen_wrapper		3486709						
ANR	3486771	Symbol	f		3486709						
ANR	3486772	Function	vanilla2grid	71:0:1751:3612							
ANR	3486773	FunctionDef	"vanilla2grid (int argc , char * * argv)"		3486772	0					
ANR	3486774	CompoundStatement		72:0:1791:3612	3486772	0					
ANR	3486775	IfStatement	if ( argc != 3 )		3486772	0					
ANR	3486776	Condition	argc != 3	73:4:1797:1805	3486772	0	True				
ANR	3486777	EqualityExpression	argc != 3		3486772	0		!=			
ANR	3486778	Identifier	argc		3486772	0					
ANR	3486779	PrimaryExpression	3		3486772	1					
ANR	3486780	CompoundStatement		2:15:16:16	3486772	1					
ANR	3486781	Statement	fprintf	74:2:1812:1818	3486772	0	True				
ANR	3486782	Statement	(	74:9:1819:1819	3486772	1	True				
ANR	3486783	Statement	stderr	74:10:1820:1825	3486772	2	True				
ANR	3486784	Statement	","	74:16:1826:1826	3486772	3	True				
ANR	3486785	Statement	"""Usage:\\n"""	74:18:1828:1837	3486772	4	True				
ANR	3486786	Statement	"""  %s filename 'gridurl'\\n"""	75:3:1842:1868	3486772	5	True				
ANR	3486787	Statement	"""     filename - filename of classad to process\\n"""	76:3:1873:1922	3486772	6	True				
ANR	3486788	Statement	"""     girdurl - Unified grid URL\\n"""	77:3:1927:1961	3486772	7	True				
ANR	3486789	Statement	","	77:38:1962:1962	3486772	8	True				
ANR	3486790	Statement	argv	77:40:1964:1967	3486772	9	True				
ANR	3486791	Statement	[	77:44:1968:1968	3486772	10	True				
ANR	3486792	Statement	0	77:45:1969:1969	3486772	11	True				
ANR	3486793	Statement	]	77:46:1970:1970	3486772	12	True				
ANR	3486794	Statement	)	77:47:1971:1971	3486772	13	True				
ANR	3486795	ExpressionStatement		77:48:1972:1972	3486772	14	True				
ANR	3486796	ReturnStatement	return 1 ;	78:2:1976:1984	3486772	15	True				
ANR	3486797	PrimaryExpression	1		3486772	0					
ANR	3486798	IdentifierDeclStatement	MyString s_oldad = slurp_file ( argv [ 1 ] ) ;	83:1:2021:2059	3486772	1	True				
ANR	3486799	IdentifierDecl	s_oldad = slurp_file ( argv [ 1 ] )		3486772	0					
ANR	3486800	IdentifierDeclType	MyString		3486772	0					
ANR	3486801	Identifier	s_oldad		3486772	1					
ANR	3486802	AssignmentExpression	s_oldad = slurp_file ( argv [ 1 ] )		3486772	2		=			
ANR	3486803	Identifier	s_oldad		3486772	0					
ANR	3486804	CallExpression	slurp_file ( argv [ 1 ] )		3486772	1					
ANR	3486805	Callee	slurp_file		3486772	0					
ANR	3486806	Identifier	slurp_file		3486772	0					
ANR	3486807	ArgumentList	argv [ 1 ]		3486772	1					
ANR	3486808	Argument	argv [ 1 ]		3486772	0					
ANR	3486809	ArrayIndexing	argv [ 1 ]		3486772	0					
ANR	3486810	Identifier	argv		3486772	0					
ANR	3486811	PrimaryExpression	1		3486772	1					
ANR	3486812	IdentifierDeclStatement	"ClassAd oldad ( ( char * ) s_oldad . Value ( ) , '\\n' ) ;"	85:1:2091:2134	3486772	2	True				
ANR	3486813	IdentifierDecl	"oldad ( ( char * ) s_oldad . Value ( ) , '\\n' )"		3486772	0					
ANR	3486814	IdentifierDeclType	ClassAd		3486772	0					
ANR	3486815	Identifier	oldad		3486772	1					
ANR	3486816	Expression	"( char * ) s_oldad . Value ( ) , '\\n'"		3486772	2					
ANR	3486817	CastExpression	( char * ) s_oldad . Value ( )		3486772	0					
ANR	3486818	CastTarget	char *		3486772	0					
ANR	3486819	CallExpression	s_oldad . Value ( )		3486772	1					
ANR	3486820	Callee	s_oldad . Value		3486772	0					
ANR	3486821	MemberAccess	s_oldad . Value		3486772	0					
ANR	3486822	Identifier	s_oldad		3486772	0					
ANR	3486823	Identifier	Value		3486772	1					
ANR	3486824	ArgumentList			3486772	1					
ANR	3486825	PrimaryExpression	'\\n'		3486772	1					
ANR	3486826	IdentifierDeclStatement	classad :: ClassAd newad ;	87:1:2138:2160	3486772	3	True				
ANR	3486827	IdentifierDecl	newad		3486772	0					
ANR	3486828	IdentifierDeclType	classad :: ClassAd		3486772	0					
ANR	3486829	Identifier	newad		3486772	1					
ANR	3486830	IfStatement	"if ( ! old_to_new ( oldad , newad ) )"		3486772	4					
ANR	3486831	Condition	"! old_to_new ( oldad , newad )"	88:5:2167:2192	3486772	0	True				
ANR	3486832	UnaryOperationExpression	"! old_to_new ( oldad , newad )"		3486772	0					
ANR	3486833	UnaryOperator	!		3486772	0					
ANR	3486834	CallExpression	"old_to_new ( oldad , newad )"		3486772	1					
ANR	3486835	Callee	old_to_new		3486772	0					
ANR	3486836	Identifier	old_to_new		3486772	0					
ANR	3486837	ArgumentList	oldad		3486772	1					
ANR	3486838	Argument	oldad		3486772	0					
ANR	3486839	Identifier	oldad		3486772	0					
ANR	3486840	Argument	newad		3486772	1					
ANR	3486841	Identifier	newad		3486772	0					
ANR	3486842	CompoundStatement		17:34:404:404	3486772	1					
ANR	3486843	ExpressionStatement	"die ( ""Failed to parse class ad\\n"" )"	89:2:2200:2233	3486772	0	True				
ANR	3486844	CallExpression	"die ( ""Failed to parse class ad\\n"" )"		3486772	0					
ANR	3486845	Callee	die		3486772	0					
ANR	3486846	Identifier	die		3486772	0					
ANR	3486847	ArgumentList	"""Failed to parse class ad\\n"""		3486772	1					
ANR	3486848	Argument	"""Failed to parse class ad\\n"""		3486772	0					
ANR	3486849	PrimaryExpression	"""Failed to parse class ad\\n"""		3486772	0					
ANR	3486850	IdentifierDeclStatement	int orig_cluster ;	92:1:2240:2256	3486772	5	True				
ANR	3486851	IdentifierDecl	orig_cluster		3486772	0					
ANR	3486852	IdentifierDeclType	int		3486772	0					
ANR	3486853	Identifier	orig_cluster		3486772	1					
ANR	3486854	IfStatement	"if ( ! newad . EvaluateAttrInt ( ATTR_CLUSTER_ID , orig_cluster ) )"		3486772	6					
ANR	3486855	Condition	"! newad . EvaluateAttrInt ( ATTR_CLUSTER_ID , orig_cluster )"	93:5:2263:2316	3486772	0	True				
ANR	3486856	UnaryOperationExpression	"! newad . EvaluateAttrInt ( ATTR_CLUSTER_ID , orig_cluster )"		3486772	0					
ANR	3486857	UnaryOperator	!		3486772	0					
ANR	3486858	CallExpression	"newad . EvaluateAttrInt ( ATTR_CLUSTER_ID , orig_cluster )"		3486772	1					
ANR	3486859	Callee	newad . EvaluateAttrInt		3486772	0					
ANR	3486860	MemberAccess	newad . EvaluateAttrInt		3486772	0					
ANR	3486861	Identifier	newad		3486772	0					
ANR	3486862	Identifier	EvaluateAttrInt		3486772	1					
ANR	3486863	ArgumentList	ATTR_CLUSTER_ID		3486772	1					
ANR	3486864	Argument	ATTR_CLUSTER_ID		3486772	0					
ANR	3486865	Identifier	ATTR_CLUSTER_ID		3486772	0					
ANR	3486866	Argument	orig_cluster		3486772	1					
ANR	3486867	Identifier	orig_cluster		3486772	0					
ANR	3486868	CompoundStatement		22:62:528:528	3486772	1					
ANR	3486869	ExpressionStatement	"dprintf ( D_ALWAYS , ""Vanilla job lacks a cluster\\n"" )"	94:2:2324:2374	3486772	0	True				
ANR	3486870	CallExpression	"dprintf ( D_ALWAYS , ""Vanilla job lacks a cluster\\n"" )"		3486772	0					
ANR	3486871	Callee	dprintf		3486772	0					
ANR	3486872	Identifier	dprintf		3486772	0					
ANR	3486873	ArgumentList	D_ALWAYS		3486772	1					
ANR	3486874	Argument	D_ALWAYS		3486772	0					
ANR	3486875	Identifier	D_ALWAYS		3486772	0					
ANR	3486876	Argument	"""Vanilla job lacks a cluster\\n"""		3486772	1					
ANR	3486877	PrimaryExpression	"""Vanilla job lacks a cluster\\n"""		3486772	0					
ANR	3486878	ReturnStatement	return 1 ;	95:2:2378:2386	3486772	1	True				
ANR	3486879	PrimaryExpression	1		3486772	0					
ANR	3486880	IdentifierDeclStatement	int orig_proc ;	97:1:2392:2405	3486772	7	True				
ANR	3486881	IdentifierDecl	orig_proc		3486772	0					
ANR	3486882	IdentifierDeclType	int		3486772	0					
ANR	3486883	Identifier	orig_proc		3486772	1					
ANR	3486884	IfStatement	"if ( ! newad . EvaluateAttrInt ( ATTR_PROC_ID , orig_proc ) )"		3486772	8					
ANR	3486885	Condition	"! newad . EvaluateAttrInt ( ATTR_PROC_ID , orig_proc )"	98:5:2412:2459	3486772	0	True				
ANR	3486886	UnaryOperationExpression	"! newad . EvaluateAttrInt ( ATTR_PROC_ID , orig_proc )"		3486772	0					
ANR	3486887	UnaryOperator	!		3486772	0					
ANR	3486888	CallExpression	"newad . EvaluateAttrInt ( ATTR_PROC_ID , orig_proc )"		3486772	1					
ANR	3486889	Callee	newad . EvaluateAttrInt		3486772	0					
ANR	3486890	MemberAccess	newad . EvaluateAttrInt		3486772	0					
ANR	3486891	Identifier	newad		3486772	0					
ANR	3486892	Identifier	EvaluateAttrInt		3486772	1					
ANR	3486893	ArgumentList	ATTR_PROC_ID		3486772	1					
ANR	3486894	Argument	ATTR_PROC_ID		3486772	0					
ANR	3486895	Identifier	ATTR_PROC_ID		3486772	0					
ANR	3486896	Argument	orig_proc		3486772	1					
ANR	3486897	Identifier	orig_proc		3486772	0					
ANR	3486898	CompoundStatement		27:56:671:671	3486772	1					
ANR	3486899	ExpressionStatement	"dprintf ( D_ALWAYS , ""Vanilla job lacks a proc\\n"" )"	99:2:2467:2514	3486772	0	True				
ANR	3486900	CallExpression	"dprintf ( D_ALWAYS , ""Vanilla job lacks a proc\\n"" )"		3486772	0					
ANR	3486901	Callee	dprintf		3486772	0					
ANR	3486902	Identifier	dprintf		3486772	0					
ANR	3486903	ArgumentList	D_ALWAYS		3486772	1					
ANR	3486904	Argument	D_ALWAYS		3486772	0					
ANR	3486905	Identifier	D_ALWAYS		3486772	0					
ANR	3486906	Argument	"""Vanilla job lacks a proc\\n"""		3486772	1					
ANR	3486907	PrimaryExpression	"""Vanilla job lacks a proc\\n"""		3486772	0					
ANR	3486908	ReturnStatement	return 1 ;	100:2:2518:2526	3486772	1	True				
ANR	3486909	PrimaryExpression	1		3486772	0					
ANR	3486910	ExpressionStatement	"VanillaToGrid :: vanillaToGrid ( & newad , argv [ 2 ] )"	105:1:2635:2680	3486772	9	True				
ANR	3486911	CallExpression	"VanillaToGrid :: vanillaToGrid ( & newad , argv [ 2 ] )"		3486772	0					
ANR	3486912	Callee	VanillaToGrid :: vanillaToGrid		3486772	0					
ANR	3486913	Identifier	VanillaToGrid :: vanillaToGrid		3486772	0					
ANR	3486914	ArgumentList	& newad		3486772	1					
ANR	3486915	Argument	& newad		3486772	0					
ANR	3486916	UnaryOperationExpression	& newad		3486772	0					
ANR	3486917	UnaryOperator	&		3486772	0					
ANR	3486918	Identifier	newad		3486772	1					
ANR	3486919	Argument	argv [ 2 ]		3486772	1					
ANR	3486920	ArrayIndexing	argv [ 2 ]		3486772	0					
ANR	3486921	Identifier	argv		3486772	0					
ANR	3486922	PrimaryExpression	2		3486772	1					
ANR	3486923	ExpressionStatement	"printf ( ""Claiming job %d.%d\\n"" , orig_cluster , orig_proc )"	107:1:2684:2739	3486772	10	True				
ANR	3486924	CallExpression	"printf ( ""Claiming job %d.%d\\n"" , orig_cluster , orig_proc )"		3486772	0					
ANR	3486925	Callee	printf		3486772	0					
ANR	3486926	Identifier	printf		3486772	0					
ANR	3486927	ArgumentList	"""Claiming job %d.%d\\n"""		3486772	1					
ANR	3486928	Argument	"""Claiming job %d.%d\\n"""		3486772	0					
ANR	3486929	PrimaryExpression	"""Claiming job %d.%d\\n"""		3486772	0					
ANR	3486930	Argument	orig_cluster		3486772	1					
ANR	3486931	Identifier	orig_cluster		3486772	0					
ANR	3486932	Argument	orig_proc		3486772	2					
ANR	3486933	Identifier	orig_proc		3486772	0					
ANR	3486934	IdentifierDeclStatement	MyString errors ;	108:1:2742:2757	3486772	11	True				
ANR	3486935	IdentifierDecl	errors		3486772	0					
ANR	3486936	IdentifierDeclType	MyString		3486772	0					
ANR	3486937	Identifier	errors		3486772	1					
ANR	3486938	SwitchStatement	"switch ( claim_job ( newad , NULL , NULL , orig_cluster , orig_proc , & errors , MYID ) )"		3486772	12					
ANR	3486939	Condition	"claim_job ( newad , NULL , NULL , orig_cluster , orig_proc , & errors , MYID )"	109:8:2767:2834	3486772	0	True				
ANR	3486940	CallExpression	"claim_job ( newad , NULL , NULL , orig_cluster , orig_proc , & errors , MYID )"		3486772	0					
ANR	3486941	Callee	claim_job		3486772	0					
ANR	3486942	Identifier	claim_job		3486772	0					
ANR	3486943	ArgumentList	newad		3486772	1					
ANR	3486944	Argument	newad		3486772	0					
ANR	3486945	Identifier	newad		3486772	0					
ANR	3486946	Argument	NULL		3486772	1					
ANR	3486947	Identifier	NULL		3486772	0					
ANR	3486948	Argument	NULL		3486772	2					
ANR	3486949	Identifier	NULL		3486772	0					
ANR	3486950	Argument	orig_cluster		3486772	3					
ANR	3486951	Identifier	orig_cluster		3486772	0					
ANR	3486952	Argument	orig_proc		3486772	4					
ANR	3486953	Identifier	orig_proc		3486772	0					
ANR	3486954	Argument	& errors		3486772	5					
ANR	3486955	UnaryOperationExpression	& errors		3486772	0					
ANR	3486956	UnaryOperator	&		3486772	0					
ANR	3486957	Identifier	errors		3486772	1					
ANR	3486958	Argument	MYID		3486772	6					
ANR	3486959	Identifier	MYID		3486772	0					
ANR	3486960	CompoundStatement		39:1:1046:1046	3486772	1					
ANR	3486961	Label	case CJR_OK :	111:2:2842:2853	3486772	0	True				
ANR	3486962	Identifier	CJR_OK		3486772	0					
ANR	3486963	BreakStatement	break ;	112:3:2858:2863	3486772	1	True				
ANR	3486964	Label	case CJR_BUSY :	113:2:2867:2880	3486772	2	True				
ANR	3486965	Identifier	CJR_BUSY		3486772	0					
ANR	3486966	ExpressionStatement	"fprintf ( stderr , ""Unable to claim original job %d.%d because it's busy (%s)\\n.  Continuing anyway.\\n"" , orig_cluster , orig_proc , errors . Value ( ) )"	114:3:2885:3027	3486772	3	True				
ANR	3486967	CallExpression	"fprintf ( stderr , ""Unable to claim original job %d.%d because it's busy (%s)\\n.  Continuing anyway.\\n"" , orig_cluster , orig_proc , errors . Value ( ) )"		3486772	0					
ANR	3486968	Callee	fprintf		3486772	0					
ANR	3486969	Identifier	fprintf		3486772	0					
ANR	3486970	ArgumentList	stderr		3486772	1					
ANR	3486971	Argument	stderr		3486772	0					
ANR	3486972	Identifier	stderr		3486772	0					
ANR	3486973	Argument	"""Unable to claim original job %d.%d because it's busy (%s)\\n.  Continuing anyway.\\n"""		3486772	1					
ANR	3486974	PrimaryExpression	"""Unable to claim original job %d.%d because it's busy (%s)\\n.  Continuing anyway.\\n"""		3486772	0					
ANR	3486975	Argument	orig_cluster		3486772	2					
ANR	3486976	Identifier	orig_cluster		3486772	0					
ANR	3486977	Argument	orig_proc		3486772	3					
ANR	3486978	Identifier	orig_proc		3486772	0					
ANR	3486979	Argument	errors . Value ( )		3486772	4					
ANR	3486980	CallExpression	errors . Value ( )		3486772	0					
ANR	3486981	Callee	errors . Value		3486772	0					
ANR	3486982	MemberAccess	errors . Value		3486772	0					
ANR	3486983	Identifier	errors		3486772	0					
ANR	3486984	Identifier	Value		3486772	1					
ANR	3486985	ArgumentList			3486772	1					
ANR	3486986	BreakStatement	break ;	115:3:3032:3037	3486772	4	True				
ANR	3486987	Label	case CJR_ERROR :	116:2:3041:3055	3486772	5	True				
ANR	3486988	Identifier	CJR_ERROR		3486772	0					
ANR	3486989	ExpressionStatement	"fprintf ( stderr , ""Unable to claim original job %d.%d because of an error: %s\\n.  Continuing anyway.\\n"" , orig_cluster , orig_proc , errors . Value ( ) )"	117:3:3060:3203	3486772	6	True				
ANR	3486990	CallExpression	"fprintf ( stderr , ""Unable to claim original job %d.%d because of an error: %s\\n.  Continuing anyway.\\n"" , orig_cluster , orig_proc , errors . Value ( ) )"		3486772	0					
ANR	3486991	Callee	fprintf		3486772	0					
ANR	3486992	Identifier	fprintf		3486772	0					
ANR	3486993	ArgumentList	stderr		3486772	1					
ANR	3486994	Argument	stderr		3486772	0					
ANR	3486995	Identifier	stderr		3486772	0					
ANR	3486996	Argument	"""Unable to claim original job %d.%d because of an error: %s\\n.  Continuing anyway.\\n"""		3486772	1					
ANR	3486997	PrimaryExpression	"""Unable to claim original job %d.%d because of an error: %s\\n.  Continuing anyway.\\n"""		3486772	0					
ANR	3486998	Argument	orig_cluster		3486772	2					
ANR	3486999	Identifier	orig_cluster		3486772	0					
ANR	3487000	Argument	orig_proc		3486772	3					
ANR	3487001	Identifier	orig_proc		3486772	0					
ANR	3487002	Argument	errors . Value ( )		3486772	4					
ANR	3487003	CallExpression	errors . Value ( )		3486772	0					
ANR	3487004	Callee	errors . Value		3486772	0					
ANR	3487005	MemberAccess	errors . Value		3486772	0					
ANR	3487006	Identifier	errors		3486772	0					
ANR	3487007	Identifier	Value		3486772	1					
ANR	3487008	ArgumentList			3486772	1					
ANR	3487009	BreakStatement	break ;	118:3:3208:3213	3486772	7	True				
ANR	3487010	IdentifierDeclStatement	"int cluster , proc ;"	121:1:3220:3236	3486772	13	True				
ANR	3487011	IdentifierDecl	cluster		3486772	0					
ANR	3487012	IdentifierDeclType	int		3486772	0					
ANR	3487013	Identifier	cluster		3486772	1					
ANR	3487014	IdentifierDecl	proc		3486772	1					
ANR	3487015	IdentifierDeclType	int		3486772	0					
ANR	3487016	Identifier	proc		3486772	1					
ANR	3487017	IfStatement	"if ( ! submit_job ( newad , 0 , 0 , & cluster , & proc ) )"		3486772	14					
ANR	3487018	Condition	"! submit_job ( newad , 0 , 0 , & cluster , & proc )"	122:5:3243:3286	3486772	0	True				
ANR	3487019	UnaryOperationExpression	"! submit_job ( newad , 0 , 0 , & cluster , & proc )"		3486772	0					
ANR	3487020	UnaryOperator	!		3486772	0					
ANR	3487021	CallExpression	"submit_job ( newad , 0 , 0 , & cluster , & proc )"		3486772	1					
ANR	3487022	Callee	submit_job		3486772	0					
ANR	3487023	Identifier	submit_job		3486772	0					
ANR	3487024	ArgumentList	newad		3486772	1					
ANR	3487025	Argument	newad		3486772	0					
ANR	3487026	Identifier	newad		3486772	0					
ANR	3487027	Argument	0		3486772	1					
ANR	3487028	PrimaryExpression	0		3486772	0					
ANR	3487029	Argument	0		3486772	2					
ANR	3487030	PrimaryExpression	0		3486772	0					
ANR	3487031	Argument	& cluster		3486772	3					
ANR	3487032	UnaryOperationExpression	& cluster		3486772	0					
ANR	3487033	UnaryOperator	&		3486772	0					
ANR	3487034	Identifier	cluster		3486772	1					
ANR	3487035	Argument	& proc		3486772	4					
ANR	3487036	UnaryOperationExpression	& proc		3486772	0					
ANR	3487037	UnaryOperator	&		3486772	0					
ANR	3487038	Identifier	proc		3486772	1					
ANR	3487039	CompoundStatement		51:52:1498:1498	3486772	1					
ANR	3487040	ExpressionStatement	"fprintf ( stderr , ""Failed to submit job\\n"" )"	123:2:3294:3335	3486772	0	True				
ANR	3487041	CallExpression	"fprintf ( stderr , ""Failed to submit job\\n"" )"		3486772	0					
ANR	3487042	Callee	fprintf		3486772	0					
ANR	3487043	Identifier	fprintf		3486772	0					
ANR	3487044	ArgumentList	stderr		3486772	1					
ANR	3487045	Argument	stderr		3486772	0					
ANR	3487046	Identifier	stderr		3486772	0					
ANR	3487047	Argument	"""Failed to submit job\\n"""		3486772	1					
ANR	3487048	PrimaryExpression	"""Failed to submit job\\n"""		3486772	0					
ANR	3487049	ExpressionStatement	"printf ( ""Successfully submitted %d.%d\\n"" , cluster , proc )"	125:1:3341:3394	3486772	15	True				
ANR	3487050	CallExpression	"printf ( ""Successfully submitted %d.%d\\n"" , cluster , proc )"		3486772	0					
ANR	3487051	Callee	printf		3486772	0					
ANR	3487052	Identifier	printf		3486772	0					
ANR	3487053	ArgumentList	"""Successfully submitted %d.%d\\n"""		3486772	1					
ANR	3487054	Argument	"""Successfully submitted %d.%d\\n"""		3486772	0					
ANR	3487055	PrimaryExpression	"""Successfully submitted %d.%d\\n"""		3486772	0					
ANR	3487056	Argument	cluster		3486772	1					
ANR	3487057	Identifier	cluster		3486772	0					
ANR	3487058	Argument	proc		3486772	2					
ANR	3487059	Identifier	proc		3486772	0					
ANR	3487060	IfStatement	if ( 0 )		3486772	16					
ANR	3487061	Condition	0	128:4:3402:3402	3486772	0	True				
ANR	3487062	PrimaryExpression	0		3486772	0					
ANR	3487063	CompoundStatement		62:2:1735:1747	3486772	1					
ANR	3487064	IdentifierDeclStatement	ClassAd oldadout ;	130:2:3440:3456	3486772	0	True				
ANR	3487065	IdentifierDecl	oldadout		3486772	0					
ANR	3487066	IdentifierDeclType	ClassAd		3486772	0					
ANR	3487067	Identifier	oldadout		3486772	1					
ANR	3487068	ExpressionStatement	"new_to_old ( newad , oldadout )"	131:2:3460:3487	3486772	1	True				
ANR	3487069	CallExpression	"new_to_old ( newad , oldadout )"		3486772	0					
ANR	3487070	Callee	new_to_old		3486772	0					
ANR	3487071	Identifier	new_to_old		3486772	0					
ANR	3487072	ArgumentList	newad		3486772	1					
ANR	3487073	Argument	newad		3486772	0					
ANR	3487074	Identifier	newad		3486772	0					
ANR	3487075	Argument	oldadout		3486772	1					
ANR	3487076	Identifier	oldadout		3486772	0					
ANR	3487077	IdentifierDeclStatement	MyString out ;	133:2:3527:3539	3486772	2	True				
ANR	3487078	IdentifierDecl	out		3486772	0					
ANR	3487079	IdentifierDeclType	MyString		3486772	0					
ANR	3487080	Identifier	out		3486772	1					
ANR	3487081	ExpressionStatement	oldadout . sPrint ( out )	134:2:3543:3563	3486772	3	True				
ANR	3487082	CallExpression	oldadout . sPrint ( out )		3486772	0					
ANR	3487083	Callee	oldadout . sPrint		3486772	0					
ANR	3487084	MemberAccess	oldadout . sPrint		3486772	0					
ANR	3487085	Identifier	oldadout		3486772	0					
ANR	3487086	Identifier	sPrint		3486772	1					
ANR	3487087	ArgumentList	out		3486772	1					
ANR	3487088	Argument	out		3486772	0					
ANR	3487089	Identifier	out		3486772	0					
ANR	3487090	ExpressionStatement	"printf ( ""%s\\n"" , out . Value ( ) )"	135:2:3567:3594	3486772	4	True				
ANR	3487091	CallExpression	"printf ( ""%s\\n"" , out . Value ( ) )"		3486772	0					
ANR	3487092	Callee	printf		3486772	0					
ANR	3487093	Identifier	printf		3486772	0					
ANR	3487094	ArgumentList	"""%s\\n"""		3486772	1					
ANR	3487095	Argument	"""%s\\n"""		3486772	0					
ANR	3487096	PrimaryExpression	"""%s\\n"""		3486772	0					
ANR	3487097	Argument	out . Value ( )		3486772	1					
ANR	3487098	CallExpression	out . Value ( )		3486772	0					
ANR	3487099	Callee	out . Value		3486772	0					
ANR	3487100	MemberAccess	out . Value		3486772	0					
ANR	3487101	Identifier	out		3486772	0					
ANR	3487102	Identifier	Value		3486772	1					
ANR	3487103	ArgumentList			3486772	1					
ANR	3487104	ReturnStatement	return 0 ;	139:1:3602:3610	3486772	17	True				
ANR	3487105	PrimaryExpression	0		3486772	0					
ANR	3487106	ReturnType	int		3486772	1					
ANR	3487107	Identifier	vanilla2grid		3486772	2					
ANR	3487108	ParameterList	"int argc , char * * argv"		3486772	3					
ANR	3487109	Parameter	int argc	71:17:1768:1775	3486772	0	True				
ANR	3487110	ParameterType	int		3486772	0					
ANR	3487111	Identifier	argc		3486772	1					
ANR	3487112	Parameter	char * * argv	71:27:1778:1788	3486772	1	True				
ANR	3487113	ParameterType	char * *		3486772	0					
ANR	3487114	Identifier	argv		3486772	1					
ANR	3487115	CFGEntryNode	ENTRY		3486772		True				
ANR	3487116	CFGExitNode	EXIT		3486772		True				
ANR	3487117	Symbol	cluster		3486772						
ANR	3487118	Symbol	oldad		3486772						
ANR	3487119	Symbol	newad . EvaluateAttrInt		3486772						
ANR	3487120	Symbol	ATTR_PROC_ID		3486772						
ANR	3487121	Symbol	orig_proc		3486772						
ANR	3487122	Symbol	out . Value		3486772						
ANR	3487123	Symbol	& cluster		3486772						
ANR	3487124	Symbol	* argv		3486772						
ANR	3487125	Symbol	& newad		3486772						
ANR	3487126	Symbol	argv		3486772						
ANR	3487127	Symbol	out		3486772						
ANR	3487128	Symbol	ATTR_CLUSTER_ID		3486772						
ANR	3487129	Symbol	& proc		3486772						
ANR	3487130	Symbol	argc		3486772						
ANR	3487131	Symbol	proc		3486772						
ANR	3487132	Symbol	old_to_new		3486772						
ANR	3487133	Symbol	MYID		3486772						
ANR	3487134	Symbol	NULL		3486772						
ANR	3487135	Symbol	D_ALWAYS		3486772						
ANR	3487136	Symbol	s_oldad		3486772						
ANR	3487137	Symbol	oldadout		3486772						
ANR	3487138	Symbol	& errors		3486772						
ANR	3487139	Symbol	stderr		3486772						
ANR	3487140	Symbol	orig_cluster		3486772						
ANR	3487141	Symbol	submit_job		3486772						
ANR	3487142	Symbol	claim_job		3486772						
ANR	3487143	Symbol	errors . Value		3486772						
ANR	3487144	Symbol	slurp_file		3486772						
ANR	3487145	Symbol	newad		3486772						
ANR	3487146	Symbol	errors		3486772						
ANR	3487147	Function	load_classad_from_old_file	142:0:3615:3917							
ANR	3487148	FunctionDef	"load_classad_from_old_file (const char * filename , classad :: ClassAd & ad_new)"		3487147	0					
ANR	3487149	CompoundStatement		142:82:3697:3917	3487147	0					
ANR	3487150	IdentifierDeclStatement	MyString ad_string = slurp_file ( filename ) ;	144:1:3730:3771	3487147	0	True				
ANR	3487151	IdentifierDecl	ad_string = slurp_file ( filename )		3487147	0					
ANR	3487152	IdentifierDeclType	MyString		3487147	0					
ANR	3487153	Identifier	ad_string		3487147	1					
ANR	3487154	AssignmentExpression	ad_string = slurp_file ( filename )		3487147	2		=			
ANR	3487155	Identifier	ad_string		3487147	0					
ANR	3487156	CallExpression	slurp_file ( filename )		3487147	1					
ANR	3487157	Callee	slurp_file		3487147	0					
ANR	3487158	Identifier	slurp_file		3487147	0					
ANR	3487159	ArgumentList	filename		3487147	1					
ANR	3487160	Argument	filename		3487147	0					
ANR	3487161	Identifier	filename		3487147	0					
ANR	3487162	IdentifierDeclStatement	"ClassAd ad_old ( ( char * ) ad_string . Value ( ) , '\\n' ) ;"	146:1:3804:3850	3487147	1	True				
ANR	3487163	IdentifierDecl	"ad_old ( ( char * ) ad_string . Value ( ) , '\\n' )"		3487147	0					
ANR	3487164	IdentifierDeclType	ClassAd		3487147	0					
ANR	3487165	Identifier	ad_old		3487147	1					
ANR	3487166	Expression	"( char * ) ad_string . Value ( ) , '\\n'"		3487147	2					
ANR	3487167	CastExpression	( char * ) ad_string . Value ( )		3487147	0					
ANR	3487168	CastTarget	char *		3487147	0					
ANR	3487169	CallExpression	ad_string . Value ( )		3487147	1					
ANR	3487170	Callee	ad_string . Value		3487147	0					
ANR	3487171	MemberAccess	ad_string . Value		3487147	0					
ANR	3487172	Identifier	ad_string		3487147	0					
ANR	3487173	Identifier	Value		3487147	1					
ANR	3487174	ArgumentList			3487147	1					
ANR	3487175	PrimaryExpression	'\\n'		3487147	1					
ANR	3487176	ReturnStatement	"return old_to_new ( ad_old , ad_new ) ;"	148:1:3882:3915	3487147	2	True				
ANR	3487177	CallExpression	"old_to_new ( ad_old , ad_new )"		3487147	0					
ANR	3487178	Callee	old_to_new		3487147	0					
ANR	3487179	Identifier	old_to_new		3487147	0					
ANR	3487180	ArgumentList	ad_old		3487147	1					
ANR	3487181	Argument	ad_old		3487147	0					
ANR	3487182	Identifier	ad_old		3487147	0					
ANR	3487183	Argument	ad_new		3487147	1					
ANR	3487184	Identifier	ad_new		3487147	0					
ANR	3487185	ReturnType	bool		3487147	1					
ANR	3487186	Identifier	load_classad_from_old_file		3487147	2					
ANR	3487187	ParameterList	"const char * filename , classad :: ClassAd & ad_new"		3487147	3					
ANR	3487188	Parameter	const char * filename	142:32:3647:3667	3487147	0	True				
ANR	3487189	ParameterType	const char *		3487147	0					
ANR	3487190	Identifier	filename		3487147	1					
ANR	3487191	Parameter	classad :: ClassAd & ad_new	142:55:3670:3694	3487147	1	True				
ANR	3487192	ParameterType	classad :: ClassAd &		3487147	0					
ANR	3487193	Identifier	ad_new		3487147	1					
ANR	3487194	CFGEntryNode	ENTRY		3487147		True				
ANR	3487195	CFGExitNode	EXIT		3487147		True				
ANR	3487196	Symbol	ad_new		3487147						
ANR	3487197	Symbol	filename		3487147						
ANR	3487198	Symbol	old_to_new		3487147						
ANR	3487199	Symbol	slurp_file		3487147						
ANR	3487200	Symbol	ad_string		3487147						
ANR	3487201	Symbol	ad_old		3487147						
ANR	3487202	Function	grid2vanilla	151:0:3920:5641							
ANR	3487203	FunctionDef	"grid2vanilla (int argc , char * * argv)"		3487202	0					
ANR	3487204	CompoundStatement		152:0:3960:5641	3487202	0					
ANR	3487205	IfStatement	if ( argc != 3 )		3487202	0					
ANR	3487206	Condition	argc != 3	153:4:3966:3974	3487202	0	True				
ANR	3487207	EqualityExpression	argc != 3		3487202	0		!=			
ANR	3487208	Identifier	argc		3487202	0					
ANR	3487209	PrimaryExpression	3		3487202	1					
ANR	3487210	CompoundStatement		2:15:16:16	3487202	1					
ANR	3487211	Statement	fprintf	154:2:3981:3987	3487202	0	True				
ANR	3487212	Statement	(	154:9:3988:3988	3487202	1	True				
ANR	3487213	Statement	stderr	154:10:3989:3994	3487202	2	True				
ANR	3487214	Statement	","	154:16:3995:3995	3487202	3	True				
ANR	3487215	Statement	"""Usage:\\n"""	154:18:3997:4006	3487202	4	True				
ANR	3487216	Statement	"""  %s vanillafile gridfile\\n"""	155:3:4011:4039	3487202	5	True				
ANR	3487217	Statement	","	155:32:4040:4040	3487202	6	True				
ANR	3487218	Statement	argv	155:34:4042:4045	3487202	7	True				
ANR	3487219	Statement	[	155:38:4046:4046	3487202	8	True				
ANR	3487220	Statement	0	155:39:4047:4047	3487202	9	True				
ANR	3487221	Statement	]	155:40:4048:4048	3487202	10	True				
ANR	3487222	Statement	)	155:41:4049:4049	3487202	11	True				
ANR	3487223	ExpressionStatement		155:42:4050:4050	3487202	12	True				
ANR	3487224	ReturnStatement	return 1 ;	156:2:4054:4062	3487202	13	True				
ANR	3487225	PrimaryExpression	1		3487202	0					
ANR	3487226	IdentifierDeclStatement	classad :: ClassAd n_ad_van ;	159:1:4069:4094	3487202	1	True				
ANR	3487227	IdentifierDecl	n_ad_van		3487202	0					
ANR	3487228	IdentifierDeclType	classad :: ClassAd		3487202	0					
ANR	3487229	Identifier	n_ad_van		3487202	1					
ANR	3487230	IfStatement	"if ( ! load_classad_from_old_file ( argv [ 1 ] , n_ad_van ) )"		3487202	2					
ANR	3487231	Condition	"! load_classad_from_old_file ( argv [ 1 ] , n_ad_van )"	160:5:4101:4147	3487202	0	True				
ANR	3487232	UnaryOperationExpression	"! load_classad_from_old_file ( argv [ 1 ] , n_ad_van )"		3487202	0					
ANR	3487233	UnaryOperator	!		3487202	0					
ANR	3487234	CallExpression	"load_classad_from_old_file ( argv [ 1 ] , n_ad_van )"		3487202	1					
ANR	3487235	Callee	load_classad_from_old_file		3487202	0					
ANR	3487236	Identifier	load_classad_from_old_file		3487202	0					
ANR	3487237	ArgumentList	argv [ 1 ]		3487202	1					
ANR	3487238	Argument	argv [ 1 ]		3487202	0					
ANR	3487239	ArrayIndexing	argv [ 1 ]		3487202	0					
ANR	3487240	Identifier	argv		3487202	0					
ANR	3487241	PrimaryExpression	1		3487202	1					
ANR	3487242	Argument	n_ad_van		3487202	1					
ANR	3487243	Identifier	n_ad_van		3487202	0					
ANR	3487244	CompoundStatement		9:55:190:190	3487202	1					
ANR	3487245	ExpressionStatement	"die ( ""Failed to parse vanilla class ad\\n"" )"	161:2:4155:4196	3487202	0	True				
ANR	3487246	CallExpression	"die ( ""Failed to parse vanilla class ad\\n"" )"		3487202	0					
ANR	3487247	Callee	die		3487202	0					
ANR	3487248	Identifier	die		3487202	0					
ANR	3487249	ArgumentList	"""Failed to parse vanilla class ad\\n"""		3487202	1					
ANR	3487250	Argument	"""Failed to parse vanilla class ad\\n"""		3487202	0					
ANR	3487251	PrimaryExpression	"""Failed to parse vanilla class ad\\n"""		3487202	0					
ANR	3487252	IdentifierDeclStatement	classad :: ClassAd n_ad_grid ;	163:1:4202:4228	3487202	3	True				
ANR	3487253	IdentifierDecl	n_ad_grid		3487202	0					
ANR	3487254	IdentifierDeclType	classad :: ClassAd		3487202	0					
ANR	3487255	Identifier	n_ad_grid		3487202	1					
ANR	3487256	IfStatement	"if ( ! load_classad_from_old_file ( argv [ 2 ] , n_ad_grid ) )"		3487202	4					
ANR	3487257	Condition	"! load_classad_from_old_file ( argv [ 2 ] , n_ad_grid )"	164:5:4235:4282	3487202	0	True				
ANR	3487258	UnaryOperationExpression	"! load_classad_from_old_file ( argv [ 2 ] , n_ad_grid )"		3487202	0					
ANR	3487259	UnaryOperator	!		3487202	0					
ANR	3487260	CallExpression	"load_classad_from_old_file ( argv [ 2 ] , n_ad_grid )"		3487202	1					
ANR	3487261	Callee	load_classad_from_old_file		3487202	0					
ANR	3487262	Identifier	load_classad_from_old_file		3487202	0					
ANR	3487263	ArgumentList	argv [ 2 ]		3487202	1					
ANR	3487264	Argument	argv [ 2 ]		3487202	0					
ANR	3487265	ArrayIndexing	argv [ 2 ]		3487202	0					
ANR	3487266	Identifier	argv		3487202	0					
ANR	3487267	PrimaryExpression	2		3487202	1					
ANR	3487268	Argument	n_ad_grid		3487202	1					
ANR	3487269	Identifier	n_ad_grid		3487202	0					
ANR	3487270	CompoundStatement		13:56:325:325	3487202	1					
ANR	3487271	ExpressionStatement	"die ( ""Failed to parse grid class ad\\n"" )"	165:2:4290:4328	3487202	0	True				
ANR	3487272	CallExpression	"die ( ""Failed to parse grid class ad\\n"" )"		3487202	0					
ANR	3487273	Callee	die		3487202	0					
ANR	3487274	Identifier	die		3487202	0					
ANR	3487275	ArgumentList	"""Failed to parse grid class ad\\n"""		3487202	1					
ANR	3487276	Argument	"""Failed to parse grid class ad\\n"""		3487202	0					
ANR	3487277	PrimaryExpression	"""Failed to parse grid class ad\\n"""		3487202	0					
ANR	3487278	IdentifierDeclStatement	int vcluster ;	169:1:4370:4382	3487202	5	True				
ANR	3487279	IdentifierDecl	vcluster		3487202	0					
ANR	3487280	IdentifierDeclType	int		3487202	0					
ANR	3487281	Identifier	vcluster		3487202	1					
ANR	3487282	IfStatement	"if ( ! n_ad_van . EvaluateAttrInt ( ATTR_CLUSTER_ID , vcluster ) )"		3487202	6					
ANR	3487283	Condition	"! n_ad_van . EvaluateAttrInt ( ATTR_CLUSTER_ID , vcluster )"	170:5:4389:4441	3487202	0	True				
ANR	3487284	UnaryOperationExpression	"! n_ad_van . EvaluateAttrInt ( ATTR_CLUSTER_ID , vcluster )"		3487202	0					
ANR	3487285	UnaryOperator	!		3487202	0					
ANR	3487286	CallExpression	"n_ad_van . EvaluateAttrInt ( ATTR_CLUSTER_ID , vcluster )"		3487202	1					
ANR	3487287	Callee	n_ad_van . EvaluateAttrInt		3487202	0					
ANR	3487288	MemberAccess	n_ad_van . EvaluateAttrInt		3487202	0					
ANR	3487289	Identifier	n_ad_van		3487202	0					
ANR	3487290	Identifier	EvaluateAttrInt		3487202	1					
ANR	3487291	ArgumentList	ATTR_CLUSTER_ID		3487202	1					
ANR	3487292	Argument	ATTR_CLUSTER_ID		3487202	0					
ANR	3487293	Identifier	ATTR_CLUSTER_ID		3487202	0					
ANR	3487294	Argument	vcluster		3487202	1					
ANR	3487295	Identifier	vcluster		3487202	0					
ANR	3487296	CompoundStatement		19:61:484:484	3487202	1					
ANR	3487297	ExpressionStatement	"dprintf ( D_ALWAYS , ""Vanilla job lacks a cluster\\n"" )"	171:2:4449:4499	3487202	0	True				
ANR	3487298	CallExpression	"dprintf ( D_ALWAYS , ""Vanilla job lacks a cluster\\n"" )"		3487202	0					
ANR	3487299	Callee	dprintf		3487202	0					
ANR	3487300	Identifier	dprintf		3487202	0					
ANR	3487301	ArgumentList	D_ALWAYS		3487202	1					
ANR	3487302	Argument	D_ALWAYS		3487202	0					
ANR	3487303	Identifier	D_ALWAYS		3487202	0					
ANR	3487304	Argument	"""Vanilla job lacks a cluster\\n"""		3487202	1					
ANR	3487305	PrimaryExpression	"""Vanilla job lacks a cluster\\n"""		3487202	0					
ANR	3487306	ReturnStatement	return 1 ;	172:2:4503:4511	3487202	1	True				
ANR	3487307	PrimaryExpression	1		3487202	0					
ANR	3487308	IdentifierDeclStatement	int vproc ;	174:1:4517:4526	3487202	7	True				
ANR	3487309	IdentifierDecl	vproc		3487202	0					
ANR	3487310	IdentifierDeclType	int		3487202	0					
ANR	3487311	Identifier	vproc		3487202	1					
ANR	3487312	IfStatement	"if ( ! n_ad_van . EvaluateAttrInt ( ATTR_PROC_ID , vproc ) )"		3487202	8					
ANR	3487313	Condition	"! n_ad_van . EvaluateAttrInt ( ATTR_PROC_ID , vproc )"	175:5:4533:4579	3487202	0	True				
ANR	3487314	UnaryOperationExpression	"! n_ad_van . EvaluateAttrInt ( ATTR_PROC_ID , vproc )"		3487202	0					
ANR	3487315	UnaryOperator	!		3487202	0					
ANR	3487316	CallExpression	"n_ad_van . EvaluateAttrInt ( ATTR_PROC_ID , vproc )"		3487202	1					
ANR	3487317	Callee	n_ad_van . EvaluateAttrInt		3487202	0					
ANR	3487318	MemberAccess	n_ad_van . EvaluateAttrInt		3487202	0					
ANR	3487319	Identifier	n_ad_van		3487202	0					
ANR	3487320	Identifier	EvaluateAttrInt		3487202	1					
ANR	3487321	ArgumentList	ATTR_PROC_ID		3487202	1					
ANR	3487322	Argument	ATTR_PROC_ID		3487202	0					
ANR	3487323	Identifier	ATTR_PROC_ID		3487202	0					
ANR	3487324	Argument	vproc		3487202	1					
ANR	3487325	Identifier	vproc		3487202	0					
ANR	3487326	CompoundStatement		24:55:622:622	3487202	1					
ANR	3487327	ExpressionStatement	"dprintf ( D_ALWAYS , ""Vanilla job lacks a proc\\n"" )"	176:2:4587:4634	3487202	0	True				
ANR	3487328	CallExpression	"dprintf ( D_ALWAYS , ""Vanilla job lacks a proc\\n"" )"		3487202	0					
ANR	3487329	Callee	dprintf		3487202	0					
ANR	3487330	Identifier	dprintf		3487202	0					
ANR	3487331	ArgumentList	D_ALWAYS		3487202	1					
ANR	3487332	Argument	D_ALWAYS		3487202	0					
ANR	3487333	Identifier	D_ALWAYS		3487202	0					
ANR	3487334	Argument	"""Vanilla job lacks a proc\\n"""		3487202	1					
ANR	3487335	PrimaryExpression	"""Vanilla job lacks a proc\\n"""		3487202	0					
ANR	3487336	ReturnStatement	return 1 ;	177:2:4638:4646	3487202	1	True				
ANR	3487337	PrimaryExpression	1		3487202	0					
ANR	3487338	IdentifierDeclStatement	int cluster ;	181:1:4685:4696	3487202	9	True				
ANR	3487339	IdentifierDecl	cluster		3487202	0					
ANR	3487340	IdentifierDeclType	int		3487202	0					
ANR	3487341	Identifier	cluster		3487202	1					
ANR	3487342	IfStatement	"if ( ! n_ad_grid . EvaluateAttrInt ( ATTR_CLUSTER_ID , cluster ) )"		3487202	10					
ANR	3487343	Condition	"! n_ad_grid . EvaluateAttrInt ( ATTR_CLUSTER_ID , cluster )"	182:5:4703:4755	3487202	0	True				
ANR	3487344	UnaryOperationExpression	"! n_ad_grid . EvaluateAttrInt ( ATTR_CLUSTER_ID , cluster )"		3487202	0					
ANR	3487345	UnaryOperator	!		3487202	0					
ANR	3487346	CallExpression	"n_ad_grid . EvaluateAttrInt ( ATTR_CLUSTER_ID , cluster )"		3487202	1					
ANR	3487347	Callee	n_ad_grid . EvaluateAttrInt		3487202	0					
ANR	3487348	MemberAccess	n_ad_grid . EvaluateAttrInt		3487202	0					
ANR	3487349	Identifier	n_ad_grid		3487202	0					
ANR	3487350	Identifier	EvaluateAttrInt		3487202	1					
ANR	3487351	ArgumentList	ATTR_CLUSTER_ID		3487202	1					
ANR	3487352	Argument	ATTR_CLUSTER_ID		3487202	0					
ANR	3487353	Identifier	ATTR_CLUSTER_ID		3487202	0					
ANR	3487354	Argument	cluster		3487202	1					
ANR	3487355	Identifier	cluster		3487202	0					
ANR	3487356	CompoundStatement		31:61:798:798	3487202	1					
ANR	3487357	ExpressionStatement	"dprintf ( D_ALWAYS , ""Grid job lacks a cluster\\n"" )"	183:2:4763:4810	3487202	0	True				
ANR	3487358	CallExpression	"dprintf ( D_ALWAYS , ""Grid job lacks a cluster\\n"" )"		3487202	0					
ANR	3487359	Callee	dprintf		3487202	0					
ANR	3487360	Identifier	dprintf		3487202	0					
ANR	3487361	ArgumentList	D_ALWAYS		3487202	1					
ANR	3487362	Argument	D_ALWAYS		3487202	0					
ANR	3487363	Identifier	D_ALWAYS		3487202	0					
ANR	3487364	Argument	"""Grid job lacks a cluster\\n"""		3487202	1					
ANR	3487365	PrimaryExpression	"""Grid job lacks a cluster\\n"""		3487202	0					
ANR	3487366	ReturnStatement	return 1 ;	184:2:4814:4822	3487202	1	True				
ANR	3487367	PrimaryExpression	1		3487202	0					
ANR	3487368	IdentifierDeclStatement	int proc ;	186:1:4828:4836	3487202	11	True				
ANR	3487369	IdentifierDecl	proc		3487202	0					
ANR	3487370	IdentifierDeclType	int		3487202	0					
ANR	3487371	Identifier	proc		3487202	1					
ANR	3487372	IfStatement	"if ( ! n_ad_grid . EvaluateAttrInt ( ATTR_PROC_ID , proc ) )"		3487202	12					
ANR	3487373	Condition	"! n_ad_grid . EvaluateAttrInt ( ATTR_PROC_ID , proc )"	187:5:4843:4889	3487202	0	True				
ANR	3487374	UnaryOperationExpression	"! n_ad_grid . EvaluateAttrInt ( ATTR_PROC_ID , proc )"		3487202	0					
ANR	3487375	UnaryOperator	!		3487202	0					
ANR	3487376	CallExpression	"n_ad_grid . EvaluateAttrInt ( ATTR_PROC_ID , proc )"		3487202	1					
ANR	3487377	Callee	n_ad_grid . EvaluateAttrInt		3487202	0					
ANR	3487378	MemberAccess	n_ad_grid . EvaluateAttrInt		3487202	0					
ANR	3487379	Identifier	n_ad_grid		3487202	0					
ANR	3487380	Identifier	EvaluateAttrInt		3487202	1					
ANR	3487381	ArgumentList	ATTR_PROC_ID		3487202	1					
ANR	3487382	Argument	ATTR_PROC_ID		3487202	0					
ANR	3487383	Identifier	ATTR_PROC_ID		3487202	0					
ANR	3487384	Argument	proc		3487202	1					
ANR	3487385	Identifier	proc		3487202	0					
ANR	3487386	CompoundStatement		36:55:932:932	3487202	1					
ANR	3487387	ExpressionStatement	"dprintf ( D_ALWAYS , ""Grid job lacks a proc\\n"" )"	188:2:4897:4941	3487202	0	True				
ANR	3487388	CallExpression	"dprintf ( D_ALWAYS , ""Grid job lacks a proc\\n"" )"		3487202	0					
ANR	3487389	Callee	dprintf		3487202	0					
ANR	3487390	Identifier	dprintf		3487202	0					
ANR	3487391	ArgumentList	D_ALWAYS		3487202	1					
ANR	3487392	Argument	D_ALWAYS		3487202	0					
ANR	3487393	Identifier	D_ALWAYS		3487202	0					
ANR	3487394	Argument	"""Grid job lacks a proc\\n"""		3487202	1					
ANR	3487395	PrimaryExpression	"""Grid job lacks a proc\\n"""		3487202	0					
ANR	3487396	ReturnStatement	return 1 ;	189:2:4945:4953	3487202	1	True				
ANR	3487397	PrimaryExpression	1		3487202	0					
ANR	3487398	ExpressionStatement	n_ad_van . ClearAllDirtyFlags ( )	195:1:5037:5066	3487202	13	True				
ANR	3487399	CallExpression	n_ad_van . ClearAllDirtyFlags ( )		3487202	0					
ANR	3487400	Callee	n_ad_van . ClearAllDirtyFlags		3487202	0					
ANR	3487401	MemberAccess	n_ad_van . ClearAllDirtyFlags		3487202	0					
ANR	3487402	Identifier	n_ad_van		3487202	0					
ANR	3487403	Identifier	ClearAllDirtyFlags		3487202	1					
ANR	3487404	ArgumentList			3487202	1					
ANR	3487405	IfStatement	"if ( ! update_job_status ( n_ad_van , n_ad_grid ) )"		3487202	14					
ANR	3487406	Condition	"! update_job_status ( n_ad_van , n_ad_grid )"	196:5:5073:5113	3487202	0	True				
ANR	3487407	UnaryOperationExpression	"! update_job_status ( n_ad_van , n_ad_grid )"		3487202	0					
ANR	3487408	UnaryOperator	!		3487202	0					
ANR	3487409	CallExpression	"update_job_status ( n_ad_van , n_ad_grid )"		3487202	1					
ANR	3487410	Callee	update_job_status		3487202	0					
ANR	3487411	Identifier	update_job_status		3487202	0					
ANR	3487412	ArgumentList	n_ad_van		3487202	1					
ANR	3487413	Argument	n_ad_van		3487202	0					
ANR	3487414	Identifier	n_ad_van		3487202	0					
ANR	3487415	Argument	n_ad_grid		3487202	1					
ANR	3487416	Identifier	n_ad_grid		3487202	0					
ANR	3487417	CompoundStatement		45:49:1156:1156	3487202	1					
ANR	3487418	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to update ad\\n"" )"	197:2:5121:5163	3487202	0	True				
ANR	3487419	CallExpression	"dprintf ( D_ALWAYS , ""Unable to update ad\\n"" )"		3487202	0					
ANR	3487420	Callee	dprintf		3487202	0					
ANR	3487421	Identifier	dprintf		3487202	0					
ANR	3487422	ArgumentList	D_ALWAYS		3487202	1					
ANR	3487423	Argument	D_ALWAYS		3487202	0					
ANR	3487424	Identifier	D_ALWAYS		3487202	0					
ANR	3487425	Argument	"""Unable to update ad\\n"""		3487202	1					
ANR	3487426	PrimaryExpression	"""Unable to update ad\\n"""		3487202	0					
ANR	3487427	ReturnStatement	return 1 ;	198:2:5167:5175	3487202	1	True				
ANR	3487428	PrimaryExpression	1		3487202	0					
ANR	3487429	ExpressionStatement	"push_dirty_attributes ( n_ad_van , 0 , 0 )"	202:1:5204:5241	3487202	15	True				
ANR	3487430	CallExpression	"push_dirty_attributes ( n_ad_van , 0 , 0 )"		3487202	0					
ANR	3487431	Callee	push_dirty_attributes		3487202	0					
ANR	3487432	Identifier	push_dirty_attributes		3487202	0					
ANR	3487433	ArgumentList	n_ad_van		3487202	1					
ANR	3487434	Argument	n_ad_van		3487202	0					
ANR	3487435	Identifier	n_ad_van		3487202	0					
ANR	3487436	Argument	0		3487202	1					
ANR	3487437	PrimaryExpression	0		3487202	0					
ANR	3487438	Argument	0		3487202	2					
ANR	3487439	PrimaryExpression	0		3487202	0					
ANR	3487440	IdentifierDeclStatement	"bool b = finalize_job ( n_ad_van , cluster , proc , 0 , 0 ) ;"	205:1:5277:5325	3487202	16	True				
ANR	3487441	IdentifierDecl	"b = finalize_job ( n_ad_van , cluster , proc , 0 , 0 )"		3487202	0					
ANR	3487442	IdentifierDeclType	bool		3487202	0					
ANR	3487443	Identifier	b		3487202	1					
ANR	3487444	AssignmentExpression	"b = finalize_job ( n_ad_van , cluster , proc , 0 , 0 )"		3487202	2		=			
ANR	3487445	Identifier	b		3487202	0					
ANR	3487446	CallExpression	"finalize_job ( n_ad_van , cluster , proc , 0 , 0 )"		3487202	1					
ANR	3487447	Callee	finalize_job		3487202	0					
ANR	3487448	Identifier	finalize_job		3487202	0					
ANR	3487449	ArgumentList	n_ad_van		3487202	1					
ANR	3487450	Argument	n_ad_van		3487202	0					
ANR	3487451	Identifier	n_ad_van		3487202	0					
ANR	3487452	Argument	cluster		3487202	1					
ANR	3487453	Identifier	cluster		3487202	0					
ANR	3487454	Argument	proc		3487202	2					
ANR	3487455	Identifier	proc		3487202	0					
ANR	3487456	Argument	0		3487202	3					
ANR	3487457	PrimaryExpression	0		3487202	0					
ANR	3487458	Argument	0		3487202	4					
ANR	3487459	PrimaryExpression	0		3487202	0					
ANR	3487460	ExpressionStatement	"printf ( ""Finalize attempt on %d.%d %s\\n"" , cluster , proc , b ? ""succeeded"" : ""failed"" )"	206:1:5328:5405	3487202	17	True				
ANR	3487461	CallExpression	"printf ( ""Finalize attempt on %d.%d %s\\n"" , cluster , proc , b ? ""succeeded"" : ""failed"" )"		3487202	0					
ANR	3487462	Callee	printf		3487202	0					
ANR	3487463	Identifier	printf		3487202	0					
ANR	3487464	ArgumentList	"""Finalize attempt on %d.%d %s\\n"""		3487202	1					
ANR	3487465	Argument	"""Finalize attempt on %d.%d %s\\n"""		3487202	0					
ANR	3487466	PrimaryExpression	"""Finalize attempt on %d.%d %s\\n"""		3487202	0					
ANR	3487467	Argument	cluster		3487202	1					
ANR	3487468	Identifier	cluster		3487202	0					
ANR	3487469	Argument	proc		3487202	2					
ANR	3487470	Identifier	proc		3487202	0					
ANR	3487471	Argument	"b ? ""succeeded"" : ""failed"""		3487202	3					
ANR	3487472	ConditionalExpression	"b ? ""succeeded"" : ""failed"""		3487202	0					
ANR	3487473	Condition	b		3487202	0					
ANR	3487474	Identifier	b		3487202	0					
ANR	3487475	PrimaryExpression	"""succeeded"""		3487202	1					
ANR	3487476	PrimaryExpression	"""failed"""		3487202	2					
ANR	3487477	IfStatement	if ( ! b )		3487202	18					
ANR	3487478	Condition	! b	207:5:5412:5414	3487202	0	True				
ANR	3487479	UnaryOperationExpression	! b		3487202	0					
ANR	3487480	UnaryOperator	!		3487202	0					
ANR	3487481	Identifier	b		3487202	1					
ANR	3487482	CompoundStatement		56:11:1457:1457	3487202	1					
ANR	3487483	ReturnStatement	return 1 ;	207:13:5420:5428	3487202	0	True				
ANR	3487484	PrimaryExpression	1		3487202	0					
ANR	3487485	IdentifierDeclStatement	MyString errors ;	210:1:5461:5476	3487202	19	True				
ANR	3487486	IdentifierDecl	errors		3487202	0					
ANR	3487487	IdentifierDeclType	MyString		3487202	0					
ANR	3487488	Identifier	errors		3487202	1					
ANR	3487489	ExpressionStatement	"b = yield_job ( n_ad_van , 0 , 0 , true , vcluster , vproc , & errors , MYID )"	211:1:5479:5543	3487202	20	True				
ANR	3487490	AssignmentExpression	"b = yield_job ( n_ad_van , 0 , 0 , true , vcluster , vproc , & errors , MYID )"		3487202	0		=			
ANR	3487491	Identifier	b		3487202	0					
ANR	3487492	CallExpression	"yield_job ( n_ad_van , 0 , 0 , true , vcluster , vproc , & errors , MYID )"		3487202	1					
ANR	3487493	Callee	yield_job		3487202	0					
ANR	3487494	Identifier	yield_job		3487202	0					
ANR	3487495	ArgumentList	n_ad_van		3487202	1					
ANR	3487496	Argument	n_ad_van		3487202	0					
ANR	3487497	Identifier	n_ad_van		3487202	0					
ANR	3487498	Argument	0		3487202	1					
ANR	3487499	PrimaryExpression	0		3487202	0					
ANR	3487500	Argument	0		3487202	2					
ANR	3487501	PrimaryExpression	0		3487202	0					
ANR	3487502	Argument	true		3487202	3					
ANR	3487503	Identifier	true		3487202	0					
ANR	3487504	Argument	vcluster		3487202	4					
ANR	3487505	Identifier	vcluster		3487202	0					
ANR	3487506	Argument	vproc		3487202	5					
ANR	3487507	Identifier	vproc		3487202	0					
ANR	3487508	Argument	& errors		3487202	6					
ANR	3487509	UnaryOperationExpression	& errors		3487202	0					
ANR	3487510	UnaryOperator	&		3487202	0					
ANR	3487511	Identifier	errors		3487202	1					
ANR	3487512	Argument	MYID		3487202	7					
ANR	3487513	Identifier	MYID		3487202	0					
ANR	3487514	ExpressionStatement	"printf ( ""Yield attempt on %d.%d %s\\n"" , vcluster , vproc , b ? ""succeeded"" : ""failed"" )"	212:1:5546:5624	3487202	21	True				
ANR	3487515	CallExpression	"printf ( ""Yield attempt on %d.%d %s\\n"" , vcluster , vproc , b ? ""succeeded"" : ""failed"" )"		3487202	0					
ANR	3487516	Callee	printf		3487202	0					
ANR	3487517	Identifier	printf		3487202	0					
ANR	3487518	ArgumentList	"""Yield attempt on %d.%d %s\\n"""		3487202	1					
ANR	3487519	Argument	"""Yield attempt on %d.%d %s\\n"""		3487202	0					
ANR	3487520	PrimaryExpression	"""Yield attempt on %d.%d %s\\n"""		3487202	0					
ANR	3487521	Argument	vcluster		3487202	1					
ANR	3487522	Identifier	vcluster		3487202	0					
ANR	3487523	Argument	vproc		3487202	2					
ANR	3487524	Identifier	vproc		3487202	0					
ANR	3487525	Argument	"b ? ""succeeded"" : ""failed"""		3487202	3					
ANR	3487526	ConditionalExpression	"b ? ""succeeded"" : ""failed"""		3487202	0					
ANR	3487527	Condition	b		3487202	0					
ANR	3487528	Identifier	b		3487202	0					
ANR	3487529	PrimaryExpression	"""succeeded"""		3487202	1					
ANR	3487530	PrimaryExpression	"""failed"""		3487202	2					
ANR	3487531	ReturnStatement	return b ? 0 : 1 ;	213:1:5627:5639	3487202	22	True				
ANR	3487532	ConditionalExpression	b ? 0 : 1		3487202	0					
ANR	3487533	Condition	b		3487202	0					
ANR	3487534	Identifier	b		3487202	0					
ANR	3487535	PrimaryExpression	0		3487202	1					
ANR	3487536	PrimaryExpression	1		3487202	2					
ANR	3487537	ReturnType	int		3487202	1					
ANR	3487538	Identifier	grid2vanilla		3487202	2					
ANR	3487539	ParameterList	"int argc , char * * argv"		3487202	3					
ANR	3487540	Parameter	int argc	151:17:3937:3944	3487202	0	True				
ANR	3487541	ParameterType	int		3487202	0					
ANR	3487542	Identifier	argc		3487202	1					
ANR	3487543	Parameter	char * * argv	151:27:3947:3957	3487202	1	True				
ANR	3487544	ParameterType	char * *		3487202	0					
ANR	3487545	Identifier	argv		3487202	1					
ANR	3487546	CFGEntryNode	ENTRY		3487202		True				
ANR	3487547	CFGExitNode	EXIT		3487202		True				
ANR	3487548	Symbol	argc		3487202						
ANR	3487549	Symbol	vcluster		3487202						
ANR	3487550	Symbol	cluster		3487202						
ANR	3487551	Symbol	update_job_status		3487202						
ANR	3487552	Symbol	proc		3487202						
ANR	3487553	Symbol	b		3487202						
ANR	3487554	Symbol	MYID		3487202						
ANR	3487555	Symbol	ATTR_PROC_ID		3487202						
ANR	3487556	Symbol	load_classad_from_old_file		3487202						
ANR	3487557	Symbol	D_ALWAYS		3487202						
ANR	3487558	Symbol	yield_job		3487202						
ANR	3487559	Symbol	* argv		3487202						
ANR	3487560	Symbol	& errors		3487202						
ANR	3487561	Symbol	argv		3487202						
ANR	3487562	Symbol	n_ad_grid . EvaluateAttrInt		3487202						
ANR	3487563	Symbol	n_ad_grid		3487202						
ANR	3487564	Symbol	ATTR_CLUSTER_ID		3487202						
ANR	3487565	Symbol	finalize_job		3487202						
ANR	3487566	Symbol	n_ad_van . EvaluateAttrInt		3487202						
ANR	3487567	Symbol	true		3487202						
ANR	3487568	Symbol	n_ad_van		3487202						
ANR	3487569	Symbol	errors		3487202						
ANR	3487570	Symbol	vproc		3487202						
ANR	3487571	Function	main	216:0:5644:5990							
ANR	3487572	FunctionDef	"main (int argc , char * * argv)"		3487571	0					
ANR	3487573	CompoundStatement		217:0:5677:5990	3487571	0					
ANR	3487574	ExpressionStatement	config ( )	218:1:5680:5688	3487571	0	True				
ANR	3487575	CallExpression	config ( )		3487571	0					
ANR	3487576	Callee	config		3487571	0					
ANR	3487577	Identifier	config		3487571	0					
ANR	3487578	ArgumentList			3487571	1					
ANR	3487579	IdentifierDeclStatement	const char * progname = condor_basename ( argv [ 0 ] ) ;	219:1:5712:5760	3487571	1	True				
ANR	3487580	IdentifierDecl	* progname = condor_basename ( argv [ 0 ] )		3487571	0					
ANR	3487581	IdentifierDeclType	const char *		3487571	0					
ANR	3487582	Identifier	progname		3487571	1					
ANR	3487583	AssignmentExpression	* progname = condor_basename ( argv [ 0 ] )		3487571	2		=			
ANR	3487584	Identifier	progname		3487571	0					
ANR	3487585	CallExpression	condor_basename ( argv [ 0 ] )		3487571	1					
ANR	3487586	Callee	condor_basename		3487571	0					
ANR	3487587	Identifier	condor_basename		3487571	0					
ANR	3487588	ArgumentList	argv [ 0 ]		3487571	1					
ANR	3487589	Argument	argv [ 0 ]		3487571	0					
ANR	3487590	ArrayIndexing	argv [ 0 ]		3487571	0					
ANR	3487591	Identifier	argv		3487571	0					
ANR	3487592	PrimaryExpression	0		3487571	1					
ANR	3487593	IfStatement	if ( progname [ 0 ] == 'v' )		3487571	2					
ANR	3487594	Condition	progname [ 0 ] == 'v'	220:4:5766:5783	3487571	0	True				
ANR	3487595	EqualityExpression	progname [ 0 ] == 'v'		3487571	0		==			
ANR	3487596	ArrayIndexing	progname [ 0 ]		3487571	0					
ANR	3487597	Identifier	progname		3487571	0					
ANR	3487598	PrimaryExpression	0		3487571	1					
ANR	3487599	PrimaryExpression	'v'		3487571	1					
ANR	3487600	CompoundStatement		4:24:108:108	3487571	1					
ANR	3487601	ReturnStatement	"return vanilla2grid ( argc , argv ) ;"	221:2:5790:5820	3487571	0	True				
ANR	3487602	CallExpression	"vanilla2grid ( argc , argv )"		3487571	0					
ANR	3487603	Callee	vanilla2grid		3487571	0					
ANR	3487604	Identifier	vanilla2grid		3487571	0					
ANR	3487605	ArgumentList	argc		3487571	1					
ANR	3487606	Argument	argc		3487571	0					
ANR	3487607	Identifier	argc		3487571	0					
ANR	3487608	Argument	argv		3487571	1					
ANR	3487609	Identifier	argv		3487571	0					
ANR	3487610	ElseStatement	else		3487571	0					
ANR	3487611	IfStatement	if ( progname [ 0 ] == 'g' )		3487571	0					
ANR	3487612	Condition	progname [ 0 ] == 'g'	222:11:5833:5850	3487571	0	True				
ANR	3487613	EqualityExpression	progname [ 0 ] == 'g'		3487571	0		==			
ANR	3487614	ArrayIndexing	progname [ 0 ]		3487571	0					
ANR	3487615	Identifier	progname		3487571	0					
ANR	3487616	PrimaryExpression	0		3487571	1					
ANR	3487617	PrimaryExpression	'g'		3487571	1					
ANR	3487618	CompoundStatement		6:31:175:175	3487571	1					
ANR	3487619	ReturnStatement	"return grid2vanilla ( argc , argv ) ;"	223:2:5857:5887	3487571	0	True				
ANR	3487620	CallExpression	"grid2vanilla ( argc , argv )"		3487571	0					
ANR	3487621	Callee	grid2vanilla		3487571	0					
ANR	3487622	Identifier	grid2vanilla		3487571	0					
ANR	3487623	ArgumentList	argc		3487571	1					
ANR	3487624	Argument	argc		3487571	0					
ANR	3487625	Identifier	argc		3487571	0					
ANR	3487626	Argument	argv		3487571	1					
ANR	3487627	Identifier	argv		3487571	0					
ANR	3487628	ElseStatement	else		3487571	0					
ANR	3487629	CompoundStatement		8:8:219:219	3487571	0					
ANR	3487630	ExpressionStatement	"fprintf ( stderr , ""Program must be named vanilla2grid or grid2vanilla\\n"" )"	225:2:5901:5972	3487571	0	True				
ANR	3487631	CallExpression	"fprintf ( stderr , ""Program must be named vanilla2grid or grid2vanilla\\n"" )"		3487571	0					
ANR	3487632	Callee	fprintf		3487571	0					
ANR	3487633	Identifier	fprintf		3487571	0					
ANR	3487634	ArgumentList	stderr		3487571	1					
ANR	3487635	Argument	stderr		3487571	0					
ANR	3487636	Identifier	stderr		3487571	0					
ANR	3487637	Argument	"""Program must be named vanilla2grid or grid2vanilla\\n"""		3487571	1					
ANR	3487638	PrimaryExpression	"""Program must be named vanilla2grid or grid2vanilla\\n"""		3487571	0					
ANR	3487639	ReturnStatement	return 1 ;	226:2:5976:5984	3487571	1	True				
ANR	3487640	PrimaryExpression	1		3487571	0					
ANR	3487641	ReturnType	int		3487571	1					
ANR	3487642	Identifier	main		3487571	2					
ANR	3487643	ParameterList	"int argc , char * * argv"		3487571	3					
ANR	3487644	Parameter	int argc	216:9:5653:5660	3487571	0	True				
ANR	3487645	ParameterType	int		3487571	0					
ANR	3487646	Identifier	argc		3487571	1					
ANR	3487647	Parameter	char * * argv	216:19:5663:5673	3487571	1	True				
ANR	3487648	ParameterType	char * *		3487571	0					
ANR	3487649	Identifier	argv		3487571	1					
ANR	3487650	CFGEntryNode	ENTRY		3487571		True				
ANR	3487651	CFGExitNode	EXIT		3487571		True				
ANR	3487652	Symbol	argc		3487571						
ANR	3487653	Symbol	grid2vanilla		3487571						
ANR	3487654	Symbol	* progname		3487571						
ANR	3487655	Symbol	progname		3487571						
ANR	3487656	Symbol	* argv		3487571						
ANR	3487657	Symbol	vanilla2grid		3487571						
ANR	3487658	Symbol	stderr		3487571						
ANR	3487659	Symbol	argv		3487571						
ANR	3487660	Symbol	condor_basename		3487571						
