command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5500987	File	data/converged/CVE-2011-4930_htcondor/uniq_pid_tool_main.cpp								
ANR	5500988	DeclStmt									
ANR	5500989	Decl							const char	const char *	PID_FILE_OPT
ANR	5500990	DeclStmt									
ANR	5500991	Decl							const char	const char *	BLOCK_OPT
ANR	5500992	DeclStmt									
ANR	5500993	Decl							const char	const char *	NO_BLOCK_OPT
ANR	5500994	DeclStmt									
ANR	5500995	Decl							const char	const char *	PRECISION_OPT
ANR	5500996	DeclStmt									
ANR	5500997	Decl							const char	const char *	DEFAULT_PID_FILE
ANR	5500998	DeclStmt									
ANR	5500999	Decl							const char	const char *	MIDWIFE_CMD
ANR	5501000	DeclStmt									
ANR	5501001	Decl							const char	const char *	MIDWIFE_USAGE
ANR	5501002	DeclStmt									
ANR	5501003	Decl							const char	const char *	UNDERTAKER_CMD
ANR	5501004	DeclStmt									
ANR	5501005	Decl							const int	const int	UNDERTAKER_FAILURE
ANR	5501006	DeclStmt									
ANR	5501007	Decl							const int	const int	PROCESS_DEAD
ANR	5501008	DeclStmt									
ANR	5501009	Decl							const int	const int	PROCESS_ALIVE
ANR	5501010	DeclStmt									
ANR	5501011	Decl							const int	const int	PROCESS_UNCERTAIN
ANR	5501012	DeclStmt									
ANR	5501013	Decl							FILE	FILE * ( const char * pidfile )	createPidFile
ANR	5501014	DeclStmt									
ANR	5501015	Decl							int	"int ( int argc , char * argv [ ] , const char * pidfile , bool blockflag )"	undertaker_main
ANR	5501016	DeclStmt									
ANR	5501017	Decl							int	"int ( const char * pidfile , pid_t & pid )"	isAliveFromFile
ANR	5501018	DeclStmt									
ANR	5501019	Decl							int	int ( ProcessId & procId )	blockUntilDead
ANR	5501020	DeclStmt									
ANR	5501021	Decl							int	int ( pid_t pid )	handleUncertain
ANR	5501022	DeclStmt									
ANR	5501023	Decl							void	"void ( int status , int pid , char * error_str )"	procapi_perror
ANR	5501024	Function	main	72:0:2515:5013							
ANR	5501025	FunctionDef	"main (int argc , char * argv [ ])"		5501024	0					
ANR	5501026	CompoundStatement		74:0:2549:5013	5501024	0					
ANR	5501027	IdentifierDeclStatement	char * command = argv [ 0 ] ;	78:1:2646:2669	5501024	0	True				
ANR	5501028	IdentifierDecl	* command = argv [ 0 ]		5501024	0					
ANR	5501029	IdentifierDeclType	char *		5501024	0					
ANR	5501030	Identifier	command		5501024	1					
ANR	5501031	AssignmentExpression	* command = argv [ 0 ]		5501024	2		=			
ANR	5501032	Identifier	command		5501024	0					
ANR	5501033	ArrayIndexing	argv [ 0 ]		5501024	1					
ANR	5501034	Identifier	argv		5501024	0					
ANR	5501035	PrimaryExpression	0		5501024	1					
ANR	5501036	ExpressionStatement	argc --	79:1:2672:2678	5501024	1	True				
ANR	5501037	PostIncDecOperationExpression	argc --		5501024	0					
ANR	5501038	Identifier	argc		5501024	0					
ANR	5501039	IncDec	--		5501024	1					
ANR	5501040	ExpressionStatement	argv ++	80:1:2681:2687	5501024	2	True				
ANR	5501041	PostIncDecOperationExpression	argv ++		5501024	0					
ANR	5501042	Identifier	argv		5501024	0					
ANR	5501043	IncDec	++		5501024	1					
ANR	5501044	IfStatement	"if ( strchr ( command , DIR_DELIM_CHAR ) != NULL )"		5501024	3					
ANR	5501045	Condition	"strchr ( command , DIR_DELIM_CHAR ) != NULL"	83:5:2750:2788	5501024	0	True				
ANR	5501046	EqualityExpression	"strchr ( command , DIR_DELIM_CHAR ) != NULL"		5501024	0		!=			
ANR	5501047	CallExpression	"strchr ( command , DIR_DELIM_CHAR )"		5501024	0					
ANR	5501048	Callee	strchr		5501024	0					
ANR	5501049	Identifier	strchr		5501024	0					
ANR	5501050	ArgumentList	command		5501024	1					
ANR	5501051	Argument	command		5501024	0					
ANR	5501052	Identifier	command		5501024	0					
ANR	5501053	Argument	DIR_DELIM_CHAR		5501024	1					
ANR	5501054	Identifier	DIR_DELIM_CHAR		5501024	0					
ANR	5501055	Identifier	NULL		5501024	1					
ANR	5501056	CompoundStatement		10:46:241:241	5501024	1					
ANR	5501057	ExpressionStatement	"command = strrchr ( command , DIR_DELIM_CHAR )"	84:2:2795:2839	5501024	0	True				
ANR	5501058	AssignmentExpression	"command = strrchr ( command , DIR_DELIM_CHAR )"		5501024	0		=			
ANR	5501059	Identifier	command		5501024	0					
ANR	5501060	CallExpression	"strrchr ( command , DIR_DELIM_CHAR )"		5501024	1					
ANR	5501061	Callee	strrchr		5501024	0					
ANR	5501062	Identifier	strrchr		5501024	0					
ANR	5501063	ArgumentList	command		5501024	1					
ANR	5501064	Argument	command		5501024	0					
ANR	5501065	Identifier	command		5501024	0					
ANR	5501066	Argument	DIR_DELIM_CHAR		5501024	1					
ANR	5501067	Identifier	DIR_DELIM_CHAR		5501024	0					
ANR	5501068	ExpressionStatement	command ++	85:2:2843:2852	5501024	1	True				
ANR	5501069	PostIncDecOperationExpression	command ++		5501024	0					
ANR	5501070	Identifier	command		5501024	0					
ANR	5501071	IncDec	++		5501024	1					
ANR	5501072	IdentifierDeclStatement	const char * pidfile = DEFAULT_PID_FILE ;	89:1:2883:2921	5501024	4	True				
ANR	5501073	IdentifierDecl	* pidfile = DEFAULT_PID_FILE		5501024	0					
ANR	5501074	IdentifierDeclType	const char *		5501024	0					
ANR	5501075	Identifier	pidfile		5501024	1					
ANR	5501076	AssignmentExpression	* pidfile = DEFAULT_PID_FILE		5501024	2		=			
ANR	5501077	Identifier	DEFAULT_PID_FILE		5501024	0					
ANR	5501078	Identifier	DEFAULT_PID_FILE		5501024	1					
ANR	5501079	IdentifierDeclStatement	int * precision_range = NULL ;	90:1:2924:2951	5501024	5	True				
ANR	5501080	IdentifierDecl	* precision_range = NULL		5501024	0					
ANR	5501081	IdentifierDeclType	int *		5501024	0					
ANR	5501082	Identifier	precision_range		5501024	1					
ANR	5501083	AssignmentExpression	* precision_range = NULL		5501024	2		=			
ANR	5501084	Identifier	NULL		5501024	0					
ANR	5501085	Identifier	NULL		5501024	1					
ANR	5501086	IdentifierDeclStatement	bool mblockflag = true ;	91:1:2954:2976	5501024	6	True				
ANR	5501087	IdentifierDecl	mblockflag = true		5501024	0					
ANR	5501088	IdentifierDeclType	bool		5501024	0					
ANR	5501089	Identifier	mblockflag		5501024	1					
ANR	5501090	AssignmentExpression	mblockflag = true		5501024	2		=			
ANR	5501091	Identifier	true		5501024	0					
ANR	5501092	Identifier	true		5501024	1					
ANR	5501093	IdentifierDeclStatement	bool ublockflag = false ;	92:1:2979:3002	5501024	7	True				
ANR	5501094	IdentifierDecl	ublockflag = false		5501024	0					
ANR	5501095	IdentifierDeclType	bool		5501024	0					
ANR	5501096	Identifier	ublockflag		5501024	1					
ANR	5501097	AssignmentExpression	ublockflag = false		5501024	2		=			
ANR	5501098	Identifier	false		5501024	0					
ANR	5501099	Identifier	false		5501024	1					
ANR	5501100	IdentifierDeclStatement	bool moreOpts = true ;	96:1:3087:3107	5501024	8	True				
ANR	5501101	IdentifierDecl	moreOpts = true		5501024	0					
ANR	5501102	IdentifierDeclType	bool		5501024	0					
ANR	5501103	Identifier	moreOpts		5501024	1					
ANR	5501104	AssignmentExpression	moreOpts = true		5501024	2		=			
ANR	5501105	Identifier	true		5501024	0					
ANR	5501106	Identifier	true		5501024	1					
ANR	5501107	WhileStatement	while ( argc > 0 && moreOpts )		5501024	9					
ANR	5501108	Condition	argc > 0 && moreOpts	97:8:3117:3136	5501024	0	True				
ANR	5501109	AndExpression	argc > 0 && moreOpts		5501024	0		&&			
ANR	5501110	RelationalExpression	argc > 0		5501024	0		>			
ANR	5501111	Identifier	argc		5501024	0					
ANR	5501112	PrimaryExpression	0		5501024	1					
ANR	5501113	Identifier	moreOpts		5501024	1					
ANR	5501114	CompoundStatement		24:30:589:589	5501024	1					
ANR	5501115	IfStatement	"if ( strcmp ( PID_FILE_OPT , argv [ 0 ] ) == 0 )"		5501024	0					
ANR	5501116	Condition	"strcmp ( PID_FILE_OPT , argv [ 0 ] ) == 0"	100:6:3188:3221	5501024	0	True				
ANR	5501117	EqualityExpression	"strcmp ( PID_FILE_OPT , argv [ 0 ] ) == 0"		5501024	0		==			
ANR	5501118	CallExpression	"strcmp ( PID_FILE_OPT , argv [ 0 ] )"		5501024	0					
ANR	5501119	Callee	strcmp		5501024	0					
ANR	5501120	Identifier	strcmp		5501024	0					
ANR	5501121	ArgumentList	PID_FILE_OPT		5501024	1					
ANR	5501122	Argument	PID_FILE_OPT		5501024	0					
ANR	5501123	Identifier	PID_FILE_OPT		5501024	0					
ANR	5501124	Argument	argv [ 0 ]		5501024	1					
ANR	5501125	ArrayIndexing	argv [ 0 ]		5501024	0					
ANR	5501126	Identifier	argv		5501024	0					
ANR	5501127	PrimaryExpression	0		5501024	1					
ANR	5501128	PrimaryExpression	0		5501024	1					
ANR	5501129	CompoundStatement		27:41:673:673	5501024	1					
ANR	5501130	IfStatement	if ( argc < 2 )		5501024	0					
ANR	5501131	Condition	argc < 2	102:7:3282:3289	5501024	0	True				
ANR	5501132	RelationalExpression	argc < 2		5501024	0		<			
ANR	5501133	Identifier	argc		5501024	0					
ANR	5501134	PrimaryExpression	2		5501024	1					
ANR	5501135	CompoundStatement		29:17:742:742	5501024	1					
ANR	5501136	ExpressionStatement	"fprintf ( stderr , ""ERROR: %s requires a file argument\\n"" , PID_FILE_OPT )"	103:4:3298:3367	5501024	0	True				
ANR	5501137	CallExpression	"fprintf ( stderr , ""ERROR: %s requires a file argument\\n"" , PID_FILE_OPT )"		5501024	0					
ANR	5501138	Callee	fprintf		5501024	0					
ANR	5501139	Identifier	fprintf		5501024	0					
ANR	5501140	ArgumentList	stderr		5501024	1					
ANR	5501141	Argument	stderr		5501024	0					
ANR	5501142	Identifier	stderr		5501024	0					
ANR	5501143	Argument	"""ERROR: %s requires a file argument\\n"""		5501024	1					
ANR	5501144	PrimaryExpression	"""ERROR: %s requires a file argument\\n"""		5501024	0					
ANR	5501145	Argument	PID_FILE_OPT		5501024	2					
ANR	5501146	Identifier	PID_FILE_OPT		5501024	0					
ANR	5501147	ExpressionStatement	exit ( - 1 )	104:4:3373:3381	5501024	1	True				
ANR	5501148	CallExpression	exit ( - 1 )		5501024	0					
ANR	5501149	Callee	exit		5501024	0					
ANR	5501150	Identifier	exit		5501024	0					
ANR	5501151	ArgumentList	- 1		5501024	1					
ANR	5501152	Argument	- 1		5501024	0					
ANR	5501153	UnaryOperationExpression	- 1		5501024	0					
ANR	5501154	UnaryOperator	-		5501024	0					
ANR	5501155	PrimaryExpression	1		5501024	1					
ANR	5501156	ExpressionStatement	pidfile = argv [ 1 ]	108:3:3431:3448	5501024	1	True				
ANR	5501157	AssignmentExpression	pidfile = argv [ 1 ]		5501024	0		=			
ANR	5501158	Identifier	pidfile		5501024	0					
ANR	5501159	ArrayIndexing	argv [ 1 ]		5501024	1					
ANR	5501160	Identifier	argv		5501024	0					
ANR	5501161	PrimaryExpression	1		5501024	1					
ANR	5501162	ExpressionStatement	argc -= 2	109:3:3453:3462	5501024	2	True				
ANR	5501163	AssignmentExpression	argc -= 2		5501024	0		-=			
ANR	5501164	Identifier	argc		5501024	0					
ANR	5501165	PrimaryExpression	2		5501024	1					
ANR	5501166	ExpressionStatement	argv += 2	110:3:3467:3476	5501024	3	True				
ANR	5501167	AssignmentExpression	argv += 2		5501024	0		+=			
ANR	5501168	Identifier	argv		5501024	0					
ANR	5501169	PrimaryExpression	2		5501024	1					
ANR	5501170	ElseStatement	else		5501024	0					
ANR	5501171	IfStatement	"if ( strcmp ( BLOCK_OPT , argv [ 0 ] ) == 0 )"		5501024	0					
ANR	5501172	Condition	"strcmp ( BLOCK_OPT , argv [ 0 ] ) == 0"	115:11:3543:3573	5501024	0	True				
ANR	5501173	EqualityExpression	"strcmp ( BLOCK_OPT , argv [ 0 ] ) == 0"		5501024	0		==			
ANR	5501174	CallExpression	"strcmp ( BLOCK_OPT , argv [ 0 ] )"		5501024	0					
ANR	5501175	Callee	strcmp		5501024	0					
ANR	5501176	Identifier	strcmp		5501024	0					
ANR	5501177	ArgumentList	BLOCK_OPT		5501024	1					
ANR	5501178	Argument	BLOCK_OPT		5501024	0					
ANR	5501179	Identifier	BLOCK_OPT		5501024	0					
ANR	5501180	Argument	argv [ 0 ]		5501024	1					
ANR	5501181	ArrayIndexing	argv [ 0 ]		5501024	0					
ANR	5501182	Identifier	argv		5501024	0					
ANR	5501183	PrimaryExpression	0		5501024	1					
ANR	5501184	PrimaryExpression	0		5501024	1					
ANR	5501185	CompoundStatement		42:44:1026:1026	5501024	1					
ANR	5501186	ExpressionStatement	mblockflag = true	116:3:3581:3598	5501024	0	True				
ANR	5501187	AssignmentExpression	mblockflag = true		5501024	0		=			
ANR	5501188	Identifier	mblockflag		5501024	0					
ANR	5501189	Identifier	true		5501024	1					
ANR	5501190	ExpressionStatement	ublockflag = true	117:3:3603:3620	5501024	1	True				
ANR	5501191	AssignmentExpression	ublockflag = true		5501024	0		=			
ANR	5501192	Identifier	ublockflag		5501024	0					
ANR	5501193	Identifier	true		5501024	1					
ANR	5501194	ExpressionStatement	argc --	118:3:3625:3631	5501024	2	True				
ANR	5501195	PostIncDecOperationExpression	argc --		5501024	0					
ANR	5501196	Identifier	argc		5501024	0					
ANR	5501197	IncDec	--		5501024	1					
ANR	5501198	ExpressionStatement	argv ++	119:3:3636:3642	5501024	3	True				
ANR	5501199	PostIncDecOperationExpression	argv ++		5501024	0					
ANR	5501200	Identifier	argv		5501024	0					
ANR	5501201	IncDec	++		5501024	1					
ANR	5501202	ElseStatement	else		5501024	0					
ANR	5501203	IfStatement	"if ( strcmp ( NO_BLOCK_OPT , argv [ 0 ] ) == 0 )"		5501024	0					
ANR	5501204	Condition	"strcmp ( NO_BLOCK_OPT , argv [ 0 ] ) == 0"	123:11:3698:3731	5501024	0	True				
ANR	5501205	EqualityExpression	"strcmp ( NO_BLOCK_OPT , argv [ 0 ] ) == 0"		5501024	0		==			
ANR	5501206	CallExpression	"strcmp ( NO_BLOCK_OPT , argv [ 0 ] )"		5501024	0					
ANR	5501207	Callee	strcmp		5501024	0					
ANR	5501208	Identifier	strcmp		5501024	0					
ANR	5501209	ArgumentList	NO_BLOCK_OPT		5501024	1					
ANR	5501210	Argument	NO_BLOCK_OPT		5501024	0					
ANR	5501211	Identifier	NO_BLOCK_OPT		5501024	0					
ANR	5501212	Argument	argv [ 0 ]		5501024	1					
ANR	5501213	ArrayIndexing	argv [ 0 ]		5501024	0					
ANR	5501214	Identifier	argv		5501024	0					
ANR	5501215	PrimaryExpression	0		5501024	1					
ANR	5501216	PrimaryExpression	0		5501024	1					
ANR	5501217	CompoundStatement		50:47:1184:1184	5501024	1					
ANR	5501218	ExpressionStatement	mblockflag = false	124:3:3739:3757	5501024	0	True				
ANR	5501219	AssignmentExpression	mblockflag = false		5501024	0		=			
ANR	5501220	Identifier	mblockflag		5501024	0					
ANR	5501221	Identifier	false		5501024	1					
ANR	5501222	ExpressionStatement	ublockflag = false	125:3:3762:3780	5501024	1	True				
ANR	5501223	AssignmentExpression	ublockflag = false		5501024	0		=			
ANR	5501224	Identifier	ublockflag		5501024	0					
ANR	5501225	Identifier	false		5501024	1					
ANR	5501226	ExpressionStatement	argc --	126:3:3785:3791	5501024	2	True				
ANR	5501227	PostIncDecOperationExpression	argc --		5501024	0					
ANR	5501228	Identifier	argc		5501024	0					
ANR	5501229	IncDec	--		5501024	1					
ANR	5501230	ExpressionStatement	argv ++	127:3:3796:3802	5501024	3	True				
ANR	5501231	PostIncDecOperationExpression	argv ++		5501024	0					
ANR	5501232	Identifier	argv		5501024	0					
ANR	5501233	IncDec	++		5501024	1					
ANR	5501234	ElseStatement	else		5501024	0					
ANR	5501235	IfStatement	"if ( strcmp ( PRECISION_OPT , argv [ 0 ] ) == 0 )"		5501024	0					
ANR	5501236	Condition	"strcmp ( PRECISION_OPT , argv [ 0 ] ) == 0"	132:11:3866:3900	5501024	0	True				
ANR	5501237	EqualityExpression	"strcmp ( PRECISION_OPT , argv [ 0 ] ) == 0"		5501024	0		==			
ANR	5501238	CallExpression	"strcmp ( PRECISION_OPT , argv [ 0 ] )"		5501024	0					
ANR	5501239	Callee	strcmp		5501024	0					
ANR	5501240	Identifier	strcmp		5501024	0					
ANR	5501241	ArgumentList	PRECISION_OPT		5501024	1					
ANR	5501242	Argument	PRECISION_OPT		5501024	0					
ANR	5501243	Identifier	PRECISION_OPT		5501024	0					
ANR	5501244	Argument	argv [ 0 ]		5501024	1					
ANR	5501245	ArrayIndexing	argv [ 0 ]		5501024	0					
ANR	5501246	Identifier	argv		5501024	0					
ANR	5501247	PrimaryExpression	0		5501024	1					
ANR	5501248	PrimaryExpression	0		5501024	1					
ANR	5501249	CompoundStatement		69:3:1579:1588	5501024	1					
ANR	5501250	IfStatement	if ( argc < 2 )		5501024	0					
ANR	5501251	Condition	argc < 2	135:7:3962:3969	5501024	0	True				
ANR	5501252	RelationalExpression	argc < 2		5501024	0		<			
ANR	5501253	Identifier	argc		5501024	0					
ANR	5501254	PrimaryExpression	2		5501024	1					
ANR	5501255	CompoundStatement		62:17:1422:1422	5501024	1					
ANR	5501256	ExpressionStatement	"fprintf ( stderr , ""ERROR: %s requires a time in seconds\\n"" , PRECISION_OPT )"	136:4:3978:4049	5501024	0	True				
ANR	5501257	CallExpression	"fprintf ( stderr , ""ERROR: %s requires a time in seconds\\n"" , PRECISION_OPT )"		5501024	0					
ANR	5501258	Callee	fprintf		5501024	0					
ANR	5501259	Identifier	fprintf		5501024	0					
ANR	5501260	ArgumentList	stderr		5501024	1					
ANR	5501261	Argument	stderr		5501024	0					
ANR	5501262	Identifier	stderr		5501024	0					
ANR	5501263	Argument	"""ERROR: %s requires a time in seconds\\n"""		5501024	1					
ANR	5501264	PrimaryExpression	"""ERROR: %s requires a time in seconds\\n"""		5501024	0					
ANR	5501265	Argument	PRECISION_OPT		5501024	2					
ANR	5501266	Identifier	PRECISION_OPT		5501024	0					
ANR	5501267	ExpressionStatement	exit ( - 1 )	137:4:4055:4063	5501024	1	True				
ANR	5501268	CallExpression	exit ( - 1 )		5501024	0					
ANR	5501269	Callee	exit		5501024	0					
ANR	5501270	Identifier	exit		5501024	0					
ANR	5501271	ArgumentList	- 1		5501024	1					
ANR	5501272	Argument	- 1		5501024	0					
ANR	5501273	UnaryOperationExpression	- 1		5501024	0					
ANR	5501274	UnaryOperator	-		5501024	0					
ANR	5501275	PrimaryExpression	1		5501024	1					
ANR	5501276	IdentifierDeclStatement	int i = 0 ;	142:3:4129:4138	5501024	1	True				
ANR	5501277	IdentifierDecl	i = 0		5501024	0					
ANR	5501278	IdentifierDeclType	int		5501024	0					
ANR	5501279	Identifier	i		5501024	1					
ANR	5501280	AssignmentExpression	i = 0		5501024	2		=			
ANR	5501281	Identifier	i		5501024	0					
ANR	5501282	PrimaryExpression	0		5501024	1					
ANR	5501283	WhileStatement	while ( ( argv [ 1 ] [ i ] ) != '\\0' )		5501024	2					
ANR	5501284	Condition	( argv [ 1 ] [ i ] ) != '\\0'	143:10:4150:4169	5501024	0	True				
ANR	5501285	EqualityExpression	( argv [ 1 ] [ i ] ) != '\\0'		5501024	0		!=			
ANR	5501286	ArrayIndexing	argv [ 1 ] [ i ]		5501024	0					
ANR	5501287	ArrayIndexing	argv [ 1 ]		5501024	0					
ANR	5501288	Identifier	argv		5501024	0					
ANR	5501289	PrimaryExpression	1		5501024	1					
ANR	5501290	Identifier	i		5501024	1					
ANR	5501291	PrimaryExpression	'\\0'		5501024	1					
ANR	5501292	CompoundStatement		70:32:1622:1622	5501024	1					
ANR	5501293	IfStatement	if ( ! isdigit ( argv [ 1 ] [ i ] ) )		5501024	0					
ANR	5501294	Condition	! isdigit ( argv [ 1 ] [ i ] )	144:8:4182:4201	5501024	0	True				
ANR	5501295	UnaryOperationExpression	! isdigit ( argv [ 1 ] [ i ] )		5501024	0					
ANR	5501296	UnaryOperator	!		5501024	0					
ANR	5501297	CallExpression	isdigit ( argv [ 1 ] [ i ] )		5501024	1					
ANR	5501298	Callee	isdigit		5501024	0					
ANR	5501299	Identifier	isdigit		5501024	0					
ANR	5501300	ArgumentList	argv [ 1 ] [ i ]		5501024	1					
ANR	5501301	Argument	argv [ 1 ] [ i ]		5501024	0					
ANR	5501302	ArrayIndexing	argv [ 1 ] [ i ]		5501024	0					
ANR	5501303	ArrayIndexing	argv [ 1 ]		5501024	0					
ANR	5501304	Identifier	argv		5501024	0					
ANR	5501305	PrimaryExpression	1		5501024	1					
ANR	5501306	Identifier	i		5501024	1					
ANR	5501307	CompoundStatement		71:30:1654:1654	5501024	1					
ANR	5501308	ExpressionStatement	"fprintf ( stderr , ""ERROR: %s requires a time in seconds\\n"" , PRECISION_OPT )"	145:5:4211:4283	5501024	0	True				
ANR	5501309	CallExpression	"fprintf ( stderr , ""ERROR: %s requires a time in seconds\\n"" , PRECISION_OPT )"		5501024	0					
ANR	5501310	Callee	fprintf		5501024	0					
ANR	5501311	Identifier	fprintf		5501024	0					
ANR	5501312	ArgumentList	stderr		5501024	1					
ANR	5501313	Argument	stderr		5501024	0					
ANR	5501314	Identifier	stderr		5501024	0					
ANR	5501315	Argument	"""ERROR: %s requires a time in seconds\\n"""		5501024	1					
ANR	5501316	PrimaryExpression	"""ERROR: %s requires a time in seconds\\n"""		5501024	0					
ANR	5501317	Argument	PRECISION_OPT		5501024	2					
ANR	5501318	Identifier	PRECISION_OPT		5501024	0					
ANR	5501319	ExpressionStatement	exit ( - 1 )	146:5:4290:4298	5501024	1	True				
ANR	5501320	CallExpression	exit ( - 1 )		5501024	0					
ANR	5501321	Callee	exit		5501024	0					
ANR	5501322	Identifier	exit		5501024	0					
ANR	5501323	ArgumentList	- 1		5501024	1					
ANR	5501324	Argument	- 1		5501024	0					
ANR	5501325	UnaryOperationExpression	- 1		5501024	0					
ANR	5501326	UnaryOperator	-		5501024	0					
ANR	5501327	PrimaryExpression	1		5501024	1					
ANR	5501328	ExpressionStatement	i ++	149:4:4316:4319	5501024	1	True				
ANR	5501329	PostIncDecOperationExpression	i ++		5501024	0					
ANR	5501330	Identifier	i		5501024	0					
ANR	5501331	IncDec	++		5501024	1					
ANR	5501332	ExpressionStatement	precision_range = new int ( atoi ( argv [ 1 ] ) )	153:3:4361:4403	5501024	3	True				
ANR	5501333	AssignmentExpression	precision_range = new int ( atoi ( argv [ 1 ] ) )		5501024	0		=			
ANR	5501334	Identifier	precision_range		5501024	0					
ANR	5501335	CallExpression	atoi ( argv [ 1 ] )		5501024	1					
ANR	5501336	Callee	atoi		5501024	0					
ANR	5501337	Identifier	atoi		5501024	0					
ANR	5501338	ArgumentList	argv [ 1 ]		5501024	1					
ANR	5501339	Argument	argv [ 1 ]		5501024	0					
ANR	5501340	ArrayIndexing	argv [ 1 ]		5501024	0					
ANR	5501341	Identifier	argv		5501024	0					
ANR	5501342	PrimaryExpression	1		5501024	1					
ANR	5501343	ExpressionStatement	argc -= 2	155:3:4409:4418	5501024	4	True				
ANR	5501344	AssignmentExpression	argc -= 2		5501024	0		-=			
ANR	5501345	Identifier	argc		5501024	0					
ANR	5501346	PrimaryExpression	2		5501024	1					
ANR	5501347	ExpressionStatement	argv += 2	156:3:4423:4432	5501024	5	True				
ANR	5501348	AssignmentExpression	argv += 2		5501024	0		+=			
ANR	5501349	Identifier	argv		5501024	0					
ANR	5501350	PrimaryExpression	2		5501024	1					
ANR	5501351	ElseStatement	else		5501024	0					
ANR	5501352	CompoundStatement		87:6:1917:1917	5501024	0					
ANR	5501353	ExpressionStatement	moreOpts = false	161:3:4472:4488	5501024	0	True				
ANR	5501354	AssignmentExpression	moreOpts = false		5501024	0		=			
ANR	5501355	Identifier	moreOpts		5501024	0					
ANR	5501356	Identifier	false		5501024	1					
ANR	5501357	IfStatement	"if ( strcmp ( command , MIDWIFE_CMD ) == 0 )"		5501024	10					
ANR	5501358	Condition	"strcmp ( command , MIDWIFE_CMD ) == 0"	168:5:4593:4625	5501024	0	True				
ANR	5501359	EqualityExpression	"strcmp ( command , MIDWIFE_CMD ) == 0"		5501024	0		==			
ANR	5501360	CallExpression	"strcmp ( command , MIDWIFE_CMD )"		5501024	0					
ANR	5501361	Callee	strcmp		5501024	0					
ANR	5501362	Identifier	strcmp		5501024	0					
ANR	5501363	ArgumentList	command		5501024	1					
ANR	5501364	Argument	command		5501024	0					
ANR	5501365	Identifier	command		5501024	0					
ANR	5501366	Argument	MIDWIFE_CMD		5501024	1					
ANR	5501367	Identifier	MIDWIFE_CMD		5501024	0					
ANR	5501368	PrimaryExpression	0		5501024	1					
ANR	5501369	CompoundStatement		95:40:2078:2078	5501024	1					
ANR	5501370	ExpressionStatement	"midwife_main ( argc , argv , pidfile , mblockflag , precision_range )"	169:2:4632:4694	5501024	0	True				
ANR	5501371	CallExpression	"midwife_main ( argc , argv , pidfile , mblockflag , precision_range )"		5501024	0					
ANR	5501372	Callee	midwife_main		5501024	0					
ANR	5501373	Identifier	midwife_main		5501024	0					
ANR	5501374	ArgumentList	argc		5501024	1					
ANR	5501375	Argument	argc		5501024	0					
ANR	5501376	Identifier	argc		5501024	0					
ANR	5501377	Argument	argv		5501024	1					
ANR	5501378	Identifier	argv		5501024	0					
ANR	5501379	Argument	pidfile		5501024	2					
ANR	5501380	Identifier	pidfile		5501024	0					
ANR	5501381	Argument	mblockflag		5501024	3					
ANR	5501382	Identifier	mblockflag		5501024	0					
ANR	5501383	Argument	precision_range		5501024	4					
ANR	5501384	Identifier	precision_range		5501024	0					
ANR	5501385	ElseStatement	else		5501024	0					
ANR	5501386	IfStatement	"if ( strcmp ( command , UNDERTAKER_CMD ) == 0 )"		5501024	0					
ANR	5501387	Condition	"strcmp ( command , UNDERTAKER_CMD ) == 0"	170:12:4708:4743	5501024	0	True				
ANR	5501388	EqualityExpression	"strcmp ( command , UNDERTAKER_CMD ) == 0"		5501024	0		==			
ANR	5501389	CallExpression	"strcmp ( command , UNDERTAKER_CMD )"		5501024	0					
ANR	5501390	Callee	strcmp		5501024	0					
ANR	5501391	Identifier	strcmp		5501024	0					
ANR	5501392	ArgumentList	command		5501024	1					
ANR	5501393	Argument	command		5501024	0					
ANR	5501394	Identifier	command		5501024	0					
ANR	5501395	Argument	UNDERTAKER_CMD		5501024	1					
ANR	5501396	Identifier	UNDERTAKER_CMD		5501024	0					
ANR	5501397	PrimaryExpression	0		5501024	1					
ANR	5501398	CompoundStatement		97:50:2196:2196	5501024	1					
ANR	5501399	ExpressionStatement	"undertaker_main ( argc , argv , pidfile , ublockflag )"	171:2:4750:4798	5501024	0	True				
ANR	5501400	CallExpression	"undertaker_main ( argc , argv , pidfile , ublockflag )"		5501024	0					
ANR	5501401	Callee	undertaker_main		5501024	0					
ANR	5501402	Identifier	undertaker_main		5501024	0					
ANR	5501403	ArgumentList	argc		5501024	1					
ANR	5501404	Argument	argc		5501024	0					
ANR	5501405	Identifier	argc		5501024	0					
ANR	5501406	Argument	argv		5501024	1					
ANR	5501407	Identifier	argv		5501024	0					
ANR	5501408	Argument	pidfile		5501024	2					
ANR	5501409	Identifier	pidfile		5501024	0					
ANR	5501410	Argument	ublockflag		5501024	3					
ANR	5501411	Identifier	ublockflag		5501024	0					
ANR	5501412	ElseStatement	else		5501024	0					
ANR	5501413	CompoundStatement		99:7:2257:2257	5501024	0					
ANR	5501414	ExpressionStatement	"fprintf ( stderr , ""ERROR: Could not recognize command [%s]\\n"" , command )"	173:2:4811:4880	5501024	0	True				
ANR	5501415	CallExpression	"fprintf ( stderr , ""ERROR: Could not recognize command [%s]\\n"" , command )"		5501024	0					
ANR	5501416	Callee	fprintf		5501024	0					
ANR	5501417	Identifier	fprintf		5501024	0					
ANR	5501418	ArgumentList	stderr		5501024	1					
ANR	5501419	Argument	stderr		5501024	0					
ANR	5501420	Identifier	stderr		5501024	0					
ANR	5501421	Argument	"""ERROR: Could not recognize command [%s]\\n"""		5501024	1					
ANR	5501422	PrimaryExpression	"""ERROR: Could not recognize command [%s]\\n"""		5501024	0					
ANR	5501423	Argument	command		5501024	2					
ANR	5501424	Identifier	command		5501024	0					
ANR	5501425	ExpressionStatement	exit ( - 1 )	174:2:4884:4892	5501024	1	True				
ANR	5501426	CallExpression	exit ( - 1 )		5501024	0					
ANR	5501427	Callee	exit		5501024	0					
ANR	5501428	Identifier	exit		5501024	0					
ANR	5501429	ArgumentList	- 1		5501024	1					
ANR	5501430	Argument	- 1		5501024	0					
ANR	5501431	UnaryOperationExpression	- 1		5501024	0					
ANR	5501432	UnaryOperator	-		5501024	0					
ANR	5501433	PrimaryExpression	1		5501024	1					
ANR	5501434	ExpressionStatement	"fprintf ( stderr , ""ERROR: Reached unreachable code, bailing out\\n"" )"	178:1:4934:4999	5501024	11	True				
ANR	5501435	CallExpression	"fprintf ( stderr , ""ERROR: Reached unreachable code, bailing out\\n"" )"		5501024	0					
ANR	5501436	Callee	fprintf		5501024	0					
ANR	5501437	Identifier	fprintf		5501024	0					
ANR	5501438	ArgumentList	stderr		5501024	1					
ANR	5501439	Argument	stderr		5501024	0					
ANR	5501440	Identifier	stderr		5501024	0					
ANR	5501441	Argument	"""ERROR: Reached unreachable code, bailing out\\n"""		5501024	1					
ANR	5501442	PrimaryExpression	"""ERROR: Reached unreachable code, bailing out\\n"""		5501024	0					
ANR	5501443	ReturnStatement	return - 1 ;	179:1:5002:5011	5501024	12	True				
ANR	5501444	UnaryOperationExpression	- 1		5501024	0					
ANR	5501445	UnaryOperator	-		5501024	0					
ANR	5501446	PrimaryExpression	1		5501024	1					
ANR	5501447	ReturnType	int		5501024	1					
ANR	5501448	Identifier	main		5501024	2					
ANR	5501449	ParameterList	"int argc , char * argv [ ]"		5501024	3					
ANR	5501450	Parameter	int argc	73:5:2525:2532	5501024	0	True				
ANR	5501451	ParameterType	int		5501024	0					
ANR	5501452	Identifier	argc		5501024	1					
ANR	5501453	Parameter	char * argv [ ]	73:15:2535:2546	5501024	1	True				
ANR	5501454	ParameterType	char * [ ]		5501024	0					
ANR	5501455	Identifier	argv		5501024	1					
ANR	5501456	CFGEntryNode	ENTRY		5501024		True				
ANR	5501457	CFGExitNode	EXIT		5501024		True				
ANR	5501458	Symbol	strchr		5501024						
ANR	5501459	Symbol	* argv		5501024						
ANR	5501460	Symbol	argv		5501024						
ANR	5501461	Symbol	pidfile		5501024						
ANR	5501462	Symbol	MIDWIFE_CMD		5501024						
ANR	5501463	Symbol	* * argv		5501024						
ANR	5501464	Symbol	PRECISION_OPT		5501024						
ANR	5501465	Symbol	isdigit		5501024						
ANR	5501466	Symbol	precision_range		5501024						
ANR	5501467	Symbol	argc		5501024						
ANR	5501468	Symbol	strcmp		5501024						
ANR	5501469	Symbol	PID_FILE_OPT		5501024						
ANR	5501470	Symbol	atoi		5501024						
ANR	5501471	Symbol	mblockflag		5501024						
ANR	5501472	Symbol	UNDERTAKER_CMD		5501024						
ANR	5501473	Symbol	NULL		5501024						
ANR	5501474	Symbol	NO_BLOCK_OPT		5501024						
ANR	5501475	Symbol	moreOpts		5501024						
ANR	5501476	Symbol	DIR_DELIM_CHAR		5501024						
ANR	5501477	Symbol	false		5501024						
ANR	5501478	Symbol	i		5501024						
ANR	5501479	Symbol	stderr		5501024						
ANR	5501480	Symbol	BLOCK_OPT		5501024						
ANR	5501481	Symbol	command		5501024						
ANR	5501482	Symbol	* i		5501024						
ANR	5501483	Symbol	strrchr		5501024						
ANR	5501484	Symbol	true		5501024						
ANR	5501485	Symbol	DEFAULT_PID_FILE		5501024						
ANR	5501486	Symbol	ublockflag		5501024						
ANR	5501487	Function	midwife_main	191:0:5322:5910							
ANR	5501488	FunctionDef	"midwife_main (int argc , char * argv [ ] , const char * pidfile , bool blockflag , int * precision_range)"		5501487	0					
ANR	5501489	CompoundStatement		196:0:5439:5910	5501487	0					
ANR	5501490	IfStatement	if ( argc < 1 )		5501487	0					
ANR	5501491	Condition	argc < 1	198:5:5463:5470	5501487	0	True				
ANR	5501492	RelationalExpression	argc < 1		5501487	0		<			
ANR	5501493	Identifier	argc		5501487	0					
ANR	5501494	PrimaryExpression	1		5501487	1					
ANR	5501495	CompoundStatement		3:15:33:33	5501487	1					
ANR	5501496	ExpressionStatement	"fprintf ( stderr , MIDWIFE_USAGE )"	199:2:5477:5507	5501487	0	True				
ANR	5501497	CallExpression	"fprintf ( stderr , MIDWIFE_USAGE )"		5501487	0					
ANR	5501498	Callee	fprintf		5501487	0					
ANR	5501499	Identifier	fprintf		5501487	0					
ANR	5501500	ArgumentList	stderr		5501487	1					
ANR	5501501	Argument	stderr		5501487	0					
ANR	5501502	Identifier	stderr		5501487	0					
ANR	5501503	Argument	MIDWIFE_USAGE		5501487	1					
ANR	5501504	Identifier	MIDWIFE_USAGE		5501487	0					
ANR	5501505	ExpressionStatement	exit ( EXIT_FAILURE )	200:2:5511:5529	5501487	1	True				
ANR	5501506	CallExpression	exit ( EXIT_FAILURE )		5501487	0					
ANR	5501507	Callee	exit		5501487	0					
ANR	5501508	Identifier	exit		5501487	0					
ANR	5501509	ArgumentList	EXIT_FAILURE		5501487	1					
ANR	5501510	Argument	EXIT_FAILURE		5501487	0					
ANR	5501511	Identifier	EXIT_FAILURE		5501487	0					
ANR	5501512	IdentifierDeclStatement	"pid_t pid = midwife_executable ( argc , argv , pidfile , precision_range ) ;"	204:1:5564:5632	5501487	1	True				
ANR	5501513	IdentifierDecl	"pid = midwife_executable ( argc , argv , pidfile , precision_range )"		5501487	0					
ANR	5501514	IdentifierDeclType	pid_t		5501487	0					
ANR	5501515	Identifier	pid		5501487	1					
ANR	5501516	AssignmentExpression	"pid = midwife_executable ( argc , argv , pidfile , precision_range )"		5501487	2		=			
ANR	5501517	Identifier	pid		5501487	0					
ANR	5501518	CallExpression	"midwife_executable ( argc , argv , pidfile , precision_range )"		5501487	1					
ANR	5501519	Callee	midwife_executable		5501487	0					
ANR	5501520	Identifier	midwife_executable		5501487	0					
ANR	5501521	ArgumentList	argc		5501487	1					
ANR	5501522	Argument	argc		5501487	0					
ANR	5501523	Identifier	argc		5501487	0					
ANR	5501524	Argument	argv		5501487	1					
ANR	5501525	Identifier	argv		5501487	0					
ANR	5501526	Argument	pidfile		5501487	2					
ANR	5501527	Identifier	pidfile		5501487	0					
ANR	5501528	Argument	precision_range		5501487	3					
ANR	5501529	Identifier	precision_range		5501487	0					
ANR	5501530	IfStatement	if ( pid == - 1 )		5501487	2					
ANR	5501531	Condition	pid == - 1	205:5:5639:5647	5501487	0	True				
ANR	5501532	EqualityExpression	pid == - 1		5501487	0		==			
ANR	5501533	Identifier	pid		5501487	0					
ANR	5501534	UnaryOperationExpression	- 1		5501487	1					
ANR	5501535	UnaryOperator	-		5501487	0					
ANR	5501536	PrimaryExpression	1		5501487	1					
ANR	5501537	CompoundStatement		10:16:210:210	5501487	1					
ANR	5501538	ExpressionStatement	exit ( EXIT_FAILURE )	206:2:5654:5672	5501487	0	True				
ANR	5501539	CallExpression	exit ( EXIT_FAILURE )		5501487	0					
ANR	5501540	Callee	exit		5501487	0					
ANR	5501541	Identifier	exit		5501487	0					
ANR	5501542	ArgumentList	EXIT_FAILURE		5501487	1					
ANR	5501543	Argument	EXIT_FAILURE		5501487	0					
ANR	5501544	Identifier	EXIT_FAILURE		5501487	0					
ANR	5501545	IfStatement	"if ( blockflag && waitpid ( pid , NULL , 0 ) == - 1 )"		5501487	3					
ANR	5501546	Condition	"blockflag && waitpid ( pid , NULL , 0 ) == - 1"	210:5:5735:5774	5501487	0	True				
ANR	5501547	AndExpression	"blockflag && waitpid ( pid , NULL , 0 ) == - 1"		5501487	0		&&			
ANR	5501548	Identifier	blockflag		5501487	0					
ANR	5501549	EqualityExpression	"waitpid ( pid , NULL , 0 ) == - 1"		5501487	1		==			
ANR	5501550	CallExpression	"waitpid ( pid , NULL , 0 )"		5501487	0					
ANR	5501551	Callee	waitpid		5501487	0					
ANR	5501552	Identifier	waitpid		5501487	0					
ANR	5501553	ArgumentList	pid		5501487	1					
ANR	5501554	Argument	pid		5501487	0					
ANR	5501555	Identifier	pid		5501487	0					
ANR	5501556	Argument	NULL		5501487	1					
ANR	5501557	Identifier	NULL		5501487	0					
ANR	5501558	Argument	0		5501487	2					
ANR	5501559	PrimaryExpression	0		5501487	0					
ANR	5501560	UnaryOperationExpression	- 1		5501487	1					
ANR	5501561	UnaryOperator	-		5501487	0					
ANR	5501562	PrimaryExpression	1		5501487	1					
ANR	5501563	CompoundStatement		15:47:337:337	5501487	1					
ANR	5501564	ExpressionStatement	"perror ( ""ERROR: Could not waitpid(...) in midwife_main"" )"	211:2:5781:5836	5501487	0	True				
ANR	5501565	CallExpression	"perror ( ""ERROR: Could not waitpid(...) in midwife_main"" )"		5501487	0					
ANR	5501566	Callee	perror		5501487	0					
ANR	5501567	Identifier	perror		5501487	0					
ANR	5501568	ArgumentList	"""ERROR: Could not waitpid(...) in midwife_main"""		5501487	1					
ANR	5501569	Argument	"""ERROR: Could not waitpid(...) in midwife_main"""		5501487	0					
ANR	5501570	PrimaryExpression	"""ERROR: Could not waitpid(...) in midwife_main"""		5501487	0					
ANR	5501571	ExpressionStatement	exit ( EXIT_FAILURE )	212:2:5840:5858	5501487	1	True				
ANR	5501572	CallExpression	exit ( EXIT_FAILURE )		5501487	0					
ANR	5501573	Callee	exit		5501487	0					
ANR	5501574	Identifier	exit		5501487	0					
ANR	5501575	ArgumentList	EXIT_FAILURE		5501487	1					
ANR	5501576	Argument	EXIT_FAILURE		5501487	0					
ANR	5501577	Identifier	EXIT_FAILURE		5501487	0					
ANR	5501578	ExpressionStatement	exit ( EXIT_SUCCESS )	216:1:5879:5897	5501487	4	True				
ANR	5501579	CallExpression	exit ( EXIT_SUCCESS )		5501487	0					
ANR	5501580	Callee	exit		5501487	0					
ANR	5501581	Identifier	exit		5501487	0					
ANR	5501582	ArgumentList	EXIT_SUCCESS		5501487	1					
ANR	5501583	Argument	EXIT_SUCCESS		5501487	0					
ANR	5501584	Identifier	EXIT_SUCCESS		5501487	0					
ANR	5501585	ReturnStatement	return 0 ;	217:1:5900:5908	5501487	5	True				
ANR	5501586	PrimaryExpression	0		5501487	0					
ANR	5501587	ReturnType	int		5501487	1					
ANR	5501588	Identifier	midwife_main		5501487	2					
ANR	5501589	ParameterList	"int argc , char * argv [ ] , const char * pidfile , bool blockflag , int * precision_range"		5501487	3					
ANR	5501590	Parameter	int argc	192:13:5340:5347	5501487	0	True				
ANR	5501591	ParameterType	int		5501487	0					
ANR	5501592	Identifier	argc		5501487	1					
ANR	5501593	Parameter	char * argv [ ]	192:23:5350:5361	5501487	1	True				
ANR	5501594	ParameterType	char * [ ]		5501487	0					
ANR	5501595	Identifier	argv		5501487	1					
ANR	5501596	Parameter	const char * pidfile	193:4:5369:5387	5501487	2	True				
ANR	5501597	ParameterType	const char *		5501487	0					
ANR	5501598	Identifier	pidfile		5501487	1					
ANR	5501599	Parameter	bool blockflag	194:4:5395:5408	5501487	3	True				
ANR	5501600	ParameterType	bool		5501487	0					
ANR	5501601	Identifier	blockflag		5501487	1					
ANR	5501602	Parameter	int * precision_range	195:4:5417:5436	5501487	4	True				
ANR	5501603	ParameterType	int *		5501487	0					
ANR	5501604	Identifier	precision_range		5501487	1					
ANR	5501605	CFGEntryNode	ENTRY		5501487		True				
ANR	5501606	CFGExitNode	EXIT		5501487		True				
ANR	5501607	Symbol	argc		5501487						
ANR	5501608	Symbol	MIDWIFE_USAGE		5501487						
ANR	5501609	Symbol	NULL		5501487						
ANR	5501610	Symbol	pid		5501487						
ANR	5501611	Symbol	stderr		5501487						
ANR	5501612	Symbol	argv		5501487						
ANR	5501613	Symbol	pidfile		5501487						
ANR	5501614	Symbol	blockflag		5501487						
ANR	5501615	Symbol	EXIT_FAILURE		5501487						
ANR	5501616	Symbol	midwife_executable		5501487						
ANR	5501617	Symbol	EXIT_SUCCESS		5501487						
ANR	5501618	Symbol	precision_range		5501487						
ANR	5501619	Symbol	waitpid		5501487						
ANR	5501620	DeclStmt									
ANR	5501621	Decl							FILE	FILE *	fp
ANR	5501622	DeclStmt									
ANR	5501623	Decl							pid_t	pid_t	pid
ANR	5501624	DeclStmt									
ANR	5501625	Decl							int	int	status
ANR	5501626	DeclStmt									
ANR	5501627	Decl							ProcessId	ProcessId *	pProcId
ANR	5501628	DeclStmt									
ANR	5501629	Decl							int	int	sleepfor
ANR	5501630	Function	createPidFile	339:0:8918:9613							
ANR	5501631	FunctionDef	createPidFile (const char * pidfile)		5501630	0					
ANR	5501632	CompoundStatement		341:0:8960:9613	5501630	0					
ANR	5501633	IdentifierDeclStatement	mode_t pidfile_mode = S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH ;	344:2:8995:9126	5501630	0	True				
ANR	5501634	IdentifierDecl	pidfile_mode = S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH		5501630	0					
ANR	5501635	IdentifierDeclType	mode_t		5501630	0					
ANR	5501636	Identifier	pidfile_mode		5501630	1					
ANR	5501637	AssignmentExpression	pidfile_mode = S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH		5501630	2		=			
ANR	5501638	Identifier	pidfile_mode		5501630	0					
ANR	5501639	InclusiveOrExpression	S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH		5501630	1		|			
ANR	5501640	Identifier	S_IRUSR		5501630	0					
ANR	5501641	InclusiveOrExpression	S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH		5501630	1		|			
ANR	5501642	Identifier	S_IWUSR		5501630	0					
ANR	5501643	InclusiveOrExpression	S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH		5501630	1		|			
ANR	5501644	Identifier	S_IRGRP		5501630	0					
ANR	5501645	InclusiveOrExpression	S_IWGRP | S_IROTH | S_IWOTH		5501630	1		|			
ANR	5501646	Identifier	S_IWGRP		5501630	0					
ANR	5501647	InclusiveOrExpression	S_IROTH | S_IWOTH		5501630	1		|			
ANR	5501648	Identifier	S_IROTH		5501630	0					
ANR	5501649	Identifier	S_IWOTH		5501630	1					
ANR	5501650	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( pidfile , O_WRONLY | O_CREAT | O_EXCL , pidfile_mode ) ;"	348:2:9154:9239	5501630	1	True				
ANR	5501651	IdentifierDecl	"fd = safe_open_wrapper_follow ( pidfile , O_WRONLY | O_CREAT | O_EXCL , pidfile_mode )"		5501630	0					
ANR	5501652	IdentifierDeclType	int		5501630	0					
ANR	5501653	Identifier	fd		5501630	1					
ANR	5501654	AssignmentExpression	"fd = safe_open_wrapper_follow ( pidfile , O_WRONLY | O_CREAT | O_EXCL , pidfile_mode )"		5501630	2		=			
ANR	5501655	Identifier	fd		5501630	0					
ANR	5501656	CallExpression	"safe_open_wrapper_follow ( pidfile , O_WRONLY | O_CREAT | O_EXCL , pidfile_mode )"		5501630	1					
ANR	5501657	Callee	safe_open_wrapper_follow		5501630	0					
ANR	5501658	Identifier	safe_open_wrapper_follow		5501630	0					
ANR	5501659	ArgumentList	pidfile		5501630	1					
ANR	5501660	Argument	pidfile		5501630	0					
ANR	5501661	Identifier	pidfile		5501630	0					
ANR	5501662	Argument	O_WRONLY | O_CREAT | O_EXCL		5501630	1					
ANR	5501663	InclusiveOrExpression	O_WRONLY | O_CREAT | O_EXCL		5501630	0		|			
ANR	5501664	Identifier	O_WRONLY		5501630	0					
ANR	5501665	InclusiveOrExpression	O_CREAT | O_EXCL		5501630	1		|			
ANR	5501666	Identifier	O_CREAT		5501630	0					
ANR	5501667	Identifier	O_EXCL		5501630	1					
ANR	5501668	Argument	pidfile_mode		5501630	2					
ANR	5501669	Identifier	pidfile_mode		5501630	0					
ANR	5501670	IfStatement	if ( fd == - 1 )		5501630	2					
ANR	5501671	Condition	fd == - 1	349:6:9247:9254	5501630	0	True				
ANR	5501672	EqualityExpression	fd == - 1		5501630	0		==			
ANR	5501673	Identifier	fd		5501630	0					
ANR	5501674	UnaryOperationExpression	- 1		5501630	1					
ANR	5501675	UnaryOperator	-		5501630	0					
ANR	5501676	PrimaryExpression	1		5501630	1					
ANR	5501677	CompoundStatement		9:16:296:296	5501630	1					
ANR	5501678	ExpressionStatement	"perror ( ""ERROR: Could not create the pid file"" )"	350:4:9263:9309	5501630	0	True				
ANR	5501679	CallExpression	"perror ( ""ERROR: Could not create the pid file"" )"		5501630	0					
ANR	5501680	Callee	perror		5501630	0					
ANR	5501681	Identifier	perror		5501630	0					
ANR	5501682	ArgumentList	"""ERROR: Could not create the pid file"""		5501630	1					
ANR	5501683	Argument	"""ERROR: Could not create the pid file"""		5501630	0					
ANR	5501684	PrimaryExpression	"""ERROR: Could not create the pid file"""		5501630	0					
ANR	5501685	ReturnStatement	return NULL ;	351:4:9315:9326	5501630	1	True				
ANR	5501686	Identifier	NULL		5501630	0					
ANR	5501687	IdentifierDeclStatement	"FILE * fp = fdopen ( fd , ""w"" ) ;"	356:2:9425:9451	5501630	3	True				
ANR	5501688	IdentifierDecl	"* fp = fdopen ( fd , ""w"" )"		5501630	0					
ANR	5501689	IdentifierDeclType	FILE *		5501630	0					
ANR	5501690	Identifier	fp		5501630	1					
ANR	5501691	AssignmentExpression	"* fp = fdopen ( fd , ""w"" )"		5501630	2		=			
ANR	5501692	Identifier	fp		5501630	0					
ANR	5501693	CallExpression	"fdopen ( fd , ""w"" )"		5501630	1					
ANR	5501694	Callee	fdopen		5501630	0					
ANR	5501695	Identifier	fdopen		5501630	0					
ANR	5501696	ArgumentList	fd		5501630	1					
ANR	5501697	Argument	fd		5501630	0					
ANR	5501698	Identifier	fd		5501630	0					
ANR	5501699	Argument	"""w"""		5501630	1					
ANR	5501700	PrimaryExpression	"""w"""		5501630	0					
ANR	5501701	IfStatement	if ( fp == NULL )		5501630	4					
ANR	5501702	Condition	fp == NULL	357:6:9459:9468	5501630	0	True				
ANR	5501703	EqualityExpression	fp == NULL		5501630	0		==			
ANR	5501704	Identifier	fp		5501630	0					
ANR	5501705	Identifier	NULL		5501630	1					
ANR	5501706	CompoundStatement		17:18:510:510	5501630	1					
ANR	5501707	ExpressionStatement	"perror ( ""ERROR: Could not convert the pid file file descriptor to a file pointer"" )"	358:4:9477:9558	5501630	0	True				
ANR	5501708	CallExpression	"perror ( ""ERROR: Could not convert the pid file file descriptor to a file pointer"" )"		5501630	0					
ANR	5501709	Callee	perror		5501630	0					
ANR	5501710	Identifier	perror		5501630	0					
ANR	5501711	ArgumentList	"""ERROR: Could not convert the pid file file descriptor to a file pointer"""		5501630	1					
ANR	5501712	Argument	"""ERROR: Could not convert the pid file file descriptor to a file pointer"""		5501630	0					
ANR	5501713	PrimaryExpression	"""ERROR: Could not convert the pid file file descriptor to a file pointer"""		5501630	0					
ANR	5501714	ReturnStatement	return ( NULL ) ;	359:4:9564:9578	5501630	1	True				
ANR	5501715	Identifier	NULL		5501630	0					
ANR	5501716	ReturnStatement	return fp ;	363:2:9602:9611	5501630	5	True				
ANR	5501717	Identifier	fp		5501630	0					
ANR	5501718	ReturnType	FILE *		5501630	1					
ANR	5501719	Identifier	createPidFile		5501630	2					
ANR	5501720	ParameterList	const char * pidfile		5501630	3					
ANR	5501721	Parameter	const char * pidfile	340:14:8939:8957	5501630	0	True				
ANR	5501722	ParameterType	const char *		5501630	0					
ANR	5501723	Identifier	pidfile		5501630	1					
ANR	5501724	CFGEntryNode	ENTRY		5501630		True				
ANR	5501725	CFGExitNode	EXIT		5501630		True				
ANR	5501726	Symbol	S_IROTH		5501630						
ANR	5501727	Symbol	safe_open_wrapper_follow		5501630						
ANR	5501728	Symbol	NULL		5501630						
ANR	5501729	Symbol	S_IWGRP		5501630						
ANR	5501730	Symbol	S_IWOTH		5501630						
ANR	5501731	Symbol	pidfile_mode		5501630						
ANR	5501732	Symbol	O_CREAT		5501630						
ANR	5501733	Symbol	O_EXCL		5501630						
ANR	5501734	Symbol	fp		5501630						
ANR	5501735	Symbol	fdopen		5501630						
ANR	5501736	Symbol	pidfile		5501630						
ANR	5501737	Symbol	S_IRUSR		5501630						
ANR	5501738	Symbol	S_IWUSR		5501630						
ANR	5501739	Symbol	S_IRGRP		5501630						
ANR	5501740	Symbol	O_WRONLY		5501630						
ANR	5501741	Symbol	fd		5501630						
ANR	5501742	DeclStmt									
ANR	5501743	Decl							FILE	FILE *	fp
ANR	5501744	DeclStmt									
ANR	5501745	Decl							int	int	status
ANR	5501746	DeclStmt									
ANR	5501747	Decl							ProcessId	"ProcessId ( fp , status )"	procId
ANR	5501748	DeclStmt									
ANR	5501749	Decl							int	int	aliveVal
ANR	5501750	DeclStmt									
ANR	5501751	Decl							int	int	dummy_status
ANR	5501752	DeclStmt									
ANR	5501753	Decl							int	int	retVal
ANR	5501754	DeclStmt									
ANR	5501755	Decl							FILE	FILE *	pid_fp
ANR	5501756	Function	blockUntilDead	467:0:12338:13028							
ANR	5501757	FunctionDef	blockUntilDead (ProcessId & procId)		5501756	0					
ANR	5501758	CompoundStatement		469:0:12377:13028	5501756	0					
ANR	5501759	IdentifierDeclStatement	"ExponentialBackoff backoff ( 0 , 30 , 1.0 ) ;"	471:1:12420:12458	5501756	0	True				
ANR	5501760	IdentifierDecl	"backoff ( 0 , 30 , 1.0 )"		5501756	0					
ANR	5501761	IdentifierDeclType	ExponentialBackoff		5501756	0					
ANR	5501762	Identifier	backoff		5501756	1					
ANR	5501763	Expression	"0 , 30 , 1.0"		5501756	2					
ANR	5501764	PrimaryExpression	0		5501756	0					
ANR	5501765	Expression	"30 , 1.0"		5501756	1					
ANR	5501766	PrimaryExpression	30		5501756	0					
ANR	5501767	PrimaryExpression	1.0		5501756	1					
ANR	5501768	IdentifierDeclStatement	int aliveVal ;	474:1:12481:12493	5501756	1	True				
ANR	5501769	IdentifierDecl	aliveVal		5501756	0					
ANR	5501770	IdentifierDeclType	int		5501756	0					
ANR	5501771	Identifier	aliveVal		5501756	1					
ANR	5501772	IdentifierDeclStatement	"int retVal = ProcAPI :: isAlive ( procId , aliveVal ) ;"	475:1:12496:12543	5501756	2	True				
ANR	5501773	IdentifierDecl	"retVal = ProcAPI :: isAlive ( procId , aliveVal )"		5501756	0					
ANR	5501774	IdentifierDeclType	int		5501756	0					
ANR	5501775	Identifier	retVal		5501756	1					
ANR	5501776	AssignmentExpression	"retVal = ProcAPI :: isAlive ( procId , aliveVal )"		5501756	2		=			
ANR	5501777	Identifier	retVal		5501756	0					
ANR	5501778	CallExpression	"ProcAPI :: isAlive ( procId , aliveVal )"		5501756	1					
ANR	5501779	Callee	ProcAPI :: isAlive		5501756	0					
ANR	5501780	Identifier	ProcAPI :: isAlive		5501756	0					
ANR	5501781	ArgumentList	procId		5501756	1					
ANR	5501782	Argument	procId		5501756	0					
ANR	5501783	Identifier	procId		5501756	0					
ANR	5501784	Argument	aliveVal		5501756	1					
ANR	5501785	Identifier	aliveVal		5501756	0					
ANR	5501786	WhileStatement	while ( aliveVal != PROCAPI_DEAD && retVal != PROCAPI_FAILURE )		5501756	3					
ANR	5501787	Condition	aliveVal != PROCAPI_DEAD && retVal != PROCAPI_FAILURE	478:8:12604:12656	5501756	0	True				
ANR	5501788	AndExpression	aliveVal != PROCAPI_DEAD && retVal != PROCAPI_FAILURE		5501756	0		&&			
ANR	5501789	EqualityExpression	aliveVal != PROCAPI_DEAD		5501756	0		!=			
ANR	5501790	Identifier	aliveVal		5501756	0					
ANR	5501791	Identifier	PROCAPI_DEAD		5501756	1					
ANR	5501792	EqualityExpression	retVal != PROCAPI_FAILURE		5501756	1		!=			
ANR	5501793	Identifier	retVal		5501756	0					
ANR	5501794	Identifier	PROCAPI_FAILURE		5501756	1					
ANR	5501795	CompoundStatement		10:62:280:280	5501756	1					
ANR	5501796	ExpressionStatement	backoff . nextBackoff ( )	481:2:12700:12721	5501756	0	True				
ANR	5501797	CallExpression	backoff . nextBackoff ( )		5501756	0					
ANR	5501798	Callee	backoff . nextBackoff		5501756	0					
ANR	5501799	MemberAccess	backoff . nextBackoff		5501756	0					
ANR	5501800	Identifier	backoff		5501756	0					
ANR	5501801	Identifier	nextBackoff		5501756	1					
ANR	5501802	ArgumentList			5501756	1					
ANR	5501803	ExpressionStatement	"retVal = ProcAPI :: isAlive ( procId , aliveVal )"	484:2:12746:12789	5501756	1	True				
ANR	5501804	AssignmentExpression	"retVal = ProcAPI :: isAlive ( procId , aliveVal )"		5501756	0		=			
ANR	5501805	Identifier	retVal		5501756	0					
ANR	5501806	CallExpression	"ProcAPI :: isAlive ( procId , aliveVal )"		5501756	1					
ANR	5501807	Callee	ProcAPI :: isAlive		5501756	0					
ANR	5501808	Identifier	ProcAPI :: isAlive		5501756	0					
ANR	5501809	ArgumentList	procId		5501756	1					
ANR	5501810	Argument	procId		5501756	0					
ANR	5501811	Identifier	procId		5501756	0					
ANR	5501812	Argument	aliveVal		5501756	1					
ANR	5501813	Identifier	aliveVal		5501756	0					
ANR	5501814	IfStatement	if ( retVal == PROCAPI_FAILURE )		5501756	4					
ANR	5501815	Condition	retVal == PROCAPI_FAILURE	488:5:12812:12836	5501756	0	True				
ANR	5501816	EqualityExpression	retVal == PROCAPI_FAILURE		5501756	0		==			
ANR	5501817	Identifier	retVal		5501756	0					
ANR	5501818	Identifier	PROCAPI_FAILURE		5501756	1					
ANR	5501819	CompoundStatement		20:32:461:461	5501756	1					
ANR	5501820	ExpressionStatement	"procapi_perror ( aliveVal , procId . getPid ( ) , ""ERROR: Failure occured attempting to determine if process is alive from pidfile.\\n"" )"	489:2:12843:12970	5501756	0	True				
ANR	5501821	CallExpression	"procapi_perror ( aliveVal , procId . getPid ( ) , ""ERROR: Failure occured attempting to determine if process is alive from pidfile.\\n"" )"		5501756	0					
ANR	5501822	Callee	procapi_perror		5501756	0					
ANR	5501823	Identifier	procapi_perror		5501756	0					
ANR	5501824	ArgumentList	aliveVal		5501756	1					
ANR	5501825	Argument	aliveVal		5501756	0					
ANR	5501826	Identifier	aliveVal		5501756	0					
ANR	5501827	Argument	procId . getPid ( )		5501756	1					
ANR	5501828	CallExpression	procId . getPid ( )		5501756	0					
ANR	5501829	Callee	procId . getPid		5501756	0					
ANR	5501830	MemberAccess	procId . getPid		5501756	0					
ANR	5501831	Identifier	procId		5501756	0					
ANR	5501832	Identifier	getPid		5501756	1					
ANR	5501833	ArgumentList			5501756	1					
ANR	5501834	Argument	"""ERROR: Failure occured attempting to determine if process is alive from pidfile.\\n"""		5501756	2					
ANR	5501835	PrimaryExpression	"""ERROR: Failure occured attempting to determine if process is alive from pidfile.\\n"""		5501756	0					
ANR	5501836	ExpressionStatement	exit ( UNDERTAKER_FAILURE )	490:2:12974:12998	5501756	1	True				
ANR	5501837	CallExpression	exit ( UNDERTAKER_FAILURE )		5501756	0					
ANR	5501838	Callee	exit		5501756	0					
ANR	5501839	Identifier	exit		5501756	0					
ANR	5501840	ArgumentList	UNDERTAKER_FAILURE		5501756	1					
ANR	5501841	Argument	UNDERTAKER_FAILURE		5501756	0					
ANR	5501842	Identifier	UNDERTAKER_FAILURE		5501756	0					
ANR	5501843	ReturnStatement	return 0 ;	494:1:13018:13026	5501756	5	True				
ANR	5501844	PrimaryExpression	0		5501756	0					
ANR	5501845	ReturnType	int		5501756	1					
ANR	5501846	Identifier	blockUntilDead		5501756	2					
ANR	5501847	ParameterList	ProcessId & procId		5501756	3					
ANR	5501848	Parameter	ProcessId & procId	468:15:12358:12374	5501756	0	True				
ANR	5501849	ParameterType	ProcessId &		5501756	0					
ANR	5501850	Identifier	procId		5501756	1					
ANR	5501851	CFGEntryNode	ENTRY		5501756		True				
ANR	5501852	CFGExitNode	EXIT		5501756		True				
ANR	5501853	Symbol	backoff		5501756						
ANR	5501854	Symbol	PROCAPI_FAILURE		5501756						
ANR	5501855	Symbol	procId		5501756						
ANR	5501856	Symbol	UNDERTAKER_FAILURE		5501756						
ANR	5501857	Symbol	aliveVal		5501756						
ANR	5501858	Symbol	procId . getPid		5501756						
ANR	5501859	Symbol	PROCAPI_DEAD		5501756						
ANR	5501860	Symbol	retVal		5501756						
ANR	5501861	Symbol	ProcAPI :: isAlive		5501756						
ANR	5501862	Function	handleUncertain	503:0:13218:13850							
ANR	5501863	FunctionDef	handleUncertain (pid_t pid)		5501862	0					
ANR	5501864	CompoundStatement		505:0:13250:13850	5501862	0					
ANR	5501865	IfStatement	if ( pid < 0 )		5501862	0					
ANR	5501866	Condition	pid < 0	508:5:13276:13282	5501862	0	True				
ANR	5501867	RelationalExpression	pid < 0		5501862	0		<			
ANR	5501868	Identifier	pid		5501862	0					
ANR	5501869	PrimaryExpression	0		5501862	1					
ANR	5501870	CompoundStatement		4:14:34:34	5501862	1					
ANR	5501871	ExpressionStatement	"fprintf ( stderr , ""Could not be certain of processes status because pid is illegal [%d] \\n"" , pid )"	509:2:13289:13394	5501862	0	True				
ANR	5501872	CallExpression	"fprintf ( stderr , ""Could not be certain of processes status because pid is illegal [%d] \\n"" , pid )"		5501862	0					
ANR	5501873	Callee	fprintf		5501862	0					
ANR	5501874	Identifier	fprintf		5501862	0					
ANR	5501875	ArgumentList	stderr		5501862	1					
ANR	5501876	Argument	stderr		5501862	0					
ANR	5501877	Identifier	stderr		5501862	0					
ANR	5501878	Argument	"""Could not be certain of processes status because pid is illegal [%d] \\n"""		5501862	1					
ANR	5501879	PrimaryExpression	"""Could not be certain of processes status because pid is illegal [%d] \\n"""		5501862	0					
ANR	5501880	Argument	pid		5501862	2					
ANR	5501881	Identifier	pid		5501862	0					
ANR	5501882	ElseStatement	else		5501862	0					
ANR	5501883	CompoundStatement		14:2:244:296	5501862	0					
ANR	5501884	IdentifierDeclStatement	piPTR pi = NULL ;	516:2:13462:13477	5501862	0	True				
ANR	5501885	IdentifierDecl	pi = NULL		5501862	0					
ANR	5501886	IdentifierDeclType	piPTR		5501862	0					
ANR	5501887	Identifier	pi		5501862	1					
ANR	5501888	AssignmentExpression	pi = NULL		5501862	2		=			
ANR	5501889	Identifier	NULL		5501862	0					
ANR	5501890	Identifier	NULL		5501862	1					
ANR	5501891	IdentifierDeclStatement	int status ;	517:2:13481:13491	5501862	1	True				
ANR	5501892	IdentifierDecl	status		5501862	0					
ANR	5501893	IdentifierDeclType	int		5501862	0					
ANR	5501894	Identifier	status		5501862	1					
ANR	5501895	IdentifierDeclStatement	"int result = ProcAPI :: getProcInfo ( pid , pi , status ) ;"	518:2:13495:13547	5501862	2	True				
ANR	5501896	IdentifierDecl	"result = ProcAPI :: getProcInfo ( pid , pi , status )"		5501862	0					
ANR	5501897	IdentifierDeclType	int		5501862	0					
ANR	5501898	Identifier	result		5501862	1					
ANR	5501899	AssignmentExpression	"result = ProcAPI :: getProcInfo ( pid , pi , status )"		5501862	2		=			
ANR	5501900	Identifier	result		5501862	0					
ANR	5501901	CallExpression	"ProcAPI :: getProcInfo ( pid , pi , status )"		5501862	1					
ANR	5501902	Callee	ProcAPI :: getProcInfo		5501862	0					
ANR	5501903	Identifier	ProcAPI :: getProcInfo		5501862	0					
ANR	5501904	ArgumentList	pid		5501862	1					
ANR	5501905	Argument	pid		5501862	0					
ANR	5501906	Identifier	pid		5501862	0					
ANR	5501907	Argument	pi		5501862	1					
ANR	5501908	Identifier	pi		5501862	0					
ANR	5501909	Argument	status		5501862	2					
ANR	5501910	Identifier	status		5501862	0					
ANR	5501911	IfStatement	if ( result != PROCAPI_FAILURE )		5501862	3					
ANR	5501912	Condition	result != PROCAPI_FAILURE	521:6:13575:13599	5501862	0	True				
ANR	5501913	EqualityExpression	result != PROCAPI_FAILURE		5501862	0		!=			
ANR	5501914	Identifier	result		5501862	0					
ANR	5501915	Identifier	PROCAPI_FAILURE		5501862	1					
ANR	5501916	CompoundStatement		17:33:351:351	5501862	1					
ANR	5501917	ExpressionStatement	"ProcAPI :: printProcInfo ( stderr , pi )"	522:3:13607:13641	5501862	0	True				
ANR	5501918	CallExpression	"ProcAPI :: printProcInfo ( stderr , pi )"		5501862	0					
ANR	5501919	Callee	ProcAPI :: printProcInfo		5501862	0					
ANR	5501920	Identifier	ProcAPI :: printProcInfo		5501862	0					
ANR	5501921	ArgumentList	stderr		5501862	1					
ANR	5501922	Argument	stderr		5501862	0					
ANR	5501923	Identifier	stderr		5501862	0					
ANR	5501924	Argument	pi		5501862	1					
ANR	5501925	Identifier	pi		5501862	0					
ANR	5501926	ElseStatement	else		5501862	0					
ANR	5501927	CompoundStatement		19:8:400:400	5501862	0					
ANR	5501928	ExpressionStatement	"fprintf ( stderr , ""Information about process currently unavailable\\n"" )"	524:3:13656:13730	5501862	0	True				
ANR	5501929	CallExpression	"fprintf ( stderr , ""Information about process currently unavailable\\n"" )"		5501862	0					
ANR	5501930	Callee	fprintf		5501862	0					
ANR	5501931	Identifier	fprintf		5501862	0					
ANR	5501932	ArgumentList	stderr		5501862	1					
ANR	5501933	Argument	stderr		5501862	0					
ANR	5501934	Identifier	stderr		5501862	0					
ANR	5501935	Argument	"""Information about process currently unavailable\\n"""		5501862	1					
ANR	5501936	PrimaryExpression	"""Information about process currently unavailable\\n"""		5501862	0					
ANR	5501937	IfStatement	if ( pi != NULL )		5501862	4					
ANR	5501938	Condition	pi != NULL	529:6:13771:13780	5501862	0	True				
ANR	5501939	EqualityExpression	pi != NULL		5501862	0		!=			
ANR	5501940	Identifier	pi		5501862	0					
ANR	5501941	Identifier	NULL		5501862	1					
ANR	5501942	CompoundStatement		25:18:532:532	5501862	1					
ANR	5501943	Statement	delete	530:3:13788:13793	5501862	0	True				
ANR	5501944	ExpressionStatement	pi	530:10:13795:13797	5501862	1	True				
ANR	5501945	Identifier	pi		5501862	0					
ANR	5501946	ExpressionStatement	pi = NULL	531:3:13802:13811	5501862	2	True				
ANR	5501947	AssignmentExpression	pi = NULL		5501862	0		=			
ANR	5501948	Identifier	pi		5501862	0					
ANR	5501949	Identifier	NULL		5501862	1					
ANR	5501950	ReturnStatement	return 0 ;	537:1:13840:13848	5501862	1	True				
ANR	5501951	PrimaryExpression	0		5501862	0					
ANR	5501952	ReturnType	int		5501862	1					
ANR	5501953	Identifier	handleUncertain		5501862	2					
ANR	5501954	ParameterList	pid_t pid		5501862	3					
ANR	5501955	Parameter	pid_t pid	504:16:13239:13247	5501862	0	True				
ANR	5501956	ParameterType	pid_t		5501862	0					
ANR	5501957	Identifier	pid		5501862	1					
ANR	5501958	CFGEntryNode	ENTRY		5501862		True				
ANR	5501959	CFGExitNode	EXIT		5501862		True				
ANR	5501960	Symbol	result		5501862						
ANR	5501961	Symbol	ProcAPI :: getProcInfo		5501862						
ANR	5501962	Symbol	NULL		5501862						
ANR	5501963	Symbol	PROCAPI_FAILURE		5501862						
ANR	5501964	Symbol	pi		5501862						
ANR	5501965	Symbol	pid		5501862						
ANR	5501966	Symbol	stderr		5501862						
ANR	5501967	Symbol	status		5501862						
ANR	5501968	Function	procapi_perror	549:0:14217:15175							
ANR	5501969	FunctionDef	"procapi_perror (int status , int pid , char * error_str)"		5501968	0					
ANR	5501970	CompoundStatement		551:0:14276:15175	5501968	0					
ANR	5501971	IfStatement	if ( error_str != NULL )		5501968	0					
ANR	5501972	Condition	error_str != NULL	554:5:14327:14343	5501968	0	True				
ANR	5501973	EqualityExpression	error_str != NULL		5501968	0		!=			
ANR	5501974	Identifier	error_str		5501968	0					
ANR	5501975	Identifier	NULL		5501968	1					
ANR	5501976	CompoundStatement		4:24:69:69	5501968	1					
ANR	5501977	ExpressionStatement	"fprintf ( stderr , ""%s:\\t"" , error_str )"	555:2:14350:14385	5501968	0	True				
ANR	5501978	CallExpression	"fprintf ( stderr , ""%s:\\t"" , error_str )"		5501968	0					
ANR	5501979	Callee	fprintf		5501968	0					
ANR	5501980	Identifier	fprintf		5501968	0					
ANR	5501981	ArgumentList	stderr		5501968	1					
ANR	5501982	Argument	stderr		5501968	0					
ANR	5501983	Identifier	stderr		5501968	0					
ANR	5501984	Argument	"""%s:\\t"""		5501968	1					
ANR	5501985	PrimaryExpression	"""%s:\\t"""		5501968	0					
ANR	5501986	Argument	error_str		5501968	2					
ANR	5501987	Identifier	error_str		5501968	0					
ANR	5501988	SwitchStatement	switch ( status )		5501968	1					
ANR	5501989	Condition	status	558:8:14399:14404	5501968	0	True				
ANR	5501990	Identifier	status		5501968	0					
ANR	5501991	CompoundStatement		8:15:129:129	5501968	1					
ANR	5501992	Label	case PROCAPI_NOPID :	561:1:14455:14473	5501968	0	True				
ANR	5501993	Identifier	PROCAPI_NOPID		5501968	0					
ANR	5501994	ExpressionStatement	"fprintf ( stderr , ""ERROR: Could not find the pid[%i]\\n"" , pid )"	562:2:14477:14536	5501968	1	True				
ANR	5501995	CallExpression	"fprintf ( stderr , ""ERROR: Could not find the pid[%i]\\n"" , pid )"		5501968	0					
ANR	5501996	Callee	fprintf		5501968	0					
ANR	5501997	Identifier	fprintf		5501968	0					
ANR	5501998	ArgumentList	stderr		5501968	1					
ANR	5501999	Argument	stderr		5501968	0					
ANR	5502000	Identifier	stderr		5501968	0					
ANR	5502001	Argument	"""ERROR: Could not find the pid[%i]\\n"""		5501968	1					
ANR	5502002	PrimaryExpression	"""ERROR: Could not find the pid[%i]\\n"""		5501968	0					
ANR	5502003	Argument	pid		5501968	2					
ANR	5502004	Identifier	pid		5501968	0					
ANR	5502005	BreakStatement	break ;	563:2:14540:14545	5501968	2	True				
ANR	5502006	Label	case PROCAPI_PERM :	566:1:14582:14599	5501968	3	True				
ANR	5502007	Identifier	PROCAPI_PERM		5501968	0					
ANR	5502008	ExpressionStatement	"fprintf ( stderr , ""ERROR: Do not have permission to get info about pid[%i]\\n"" , pid )"	567:2:14603:14684	5501968	4	True				
ANR	5502009	CallExpression	"fprintf ( stderr , ""ERROR: Do not have permission to get info about pid[%i]\\n"" , pid )"		5501968	0					
ANR	5502010	Callee	fprintf		5501968	0					
ANR	5502011	Identifier	fprintf		5501968	0					
ANR	5502012	ArgumentList	stderr		5501968	1					
ANR	5502013	Argument	stderr		5501968	0					
ANR	5502014	Identifier	stderr		5501968	0					
ANR	5502015	Argument	"""ERROR: Do not have permission to get info about pid[%i]\\n"""		5501968	1					
ANR	5502016	PrimaryExpression	"""ERROR: Do not have permission to get info about pid[%i]\\n"""		5501968	0					
ANR	5502017	Argument	pid		5501968	2					
ANR	5502018	Identifier	pid		5501968	0					
ANR	5502019	BreakStatement	break ;	568:2:14688:14693	5501968	5	True				
ANR	5502020	Label	case PROCAPI_GARBLED :	571:1:14765:14785	5501968	6	True				
ANR	5502021	Identifier	PROCAPI_GARBLED		5501968	0					
ANR	5502022	ExpressionStatement	"fprintf ( stderr , ""ERROR: Kernel gave us garbage for pid[%i]\\n"" , pid )"	572:2:14789:14856	5501968	7	True				
ANR	5502023	CallExpression	"fprintf ( stderr , ""ERROR: Kernel gave us garbage for pid[%i]\\n"" , pid )"		5501968	0					
ANR	5502024	Callee	fprintf		5501968	0					
ANR	5502025	Identifier	fprintf		5501968	0					
ANR	5502026	ArgumentList	stderr		5501968	1					
ANR	5502027	Argument	stderr		5501968	0					
ANR	5502028	Identifier	stderr		5501968	0					
ANR	5502029	Argument	"""ERROR: Kernel gave us garbage for pid[%i]\\n"""		5501968	1					
ANR	5502030	PrimaryExpression	"""ERROR: Kernel gave us garbage for pid[%i]\\n"""		5501968	0					
ANR	5502031	Argument	pid		5501968	2					
ANR	5502032	Identifier	pid		5501968	0					
ANR	5502033	BreakStatement	break ;	573:2:14860:14865	5501968	8	True				
ANR	5502034	Label	case PROCAPI_UNSPECIFIED :	576:1:14940:14964	5501968	9	True				
ANR	5502035	Identifier	PROCAPI_UNSPECIFIED		5501968	0					
ANR	5502036	ExpressionStatement	"fprintf ( stderr , ""ERROR: Unknown error occured trying to get info for pid[%i]\\n"" , pid )"	577:2:14968:15053	5501968	10	True				
ANR	5502037	CallExpression	"fprintf ( stderr , ""ERROR: Unknown error occured trying to get info for pid[%i]\\n"" , pid )"		5501968	0					
ANR	5502038	Callee	fprintf		5501968	0					
ANR	5502039	Identifier	fprintf		5501968	0					
ANR	5502040	ArgumentList	stderr		5501968	1					
ANR	5502041	Argument	stderr		5501968	0					
ANR	5502042	Identifier	stderr		5501968	0					
ANR	5502043	Argument	"""ERROR: Unknown error occured trying to get info for pid[%i]\\n"""		5501968	1					
ANR	5502044	PrimaryExpression	"""ERROR: Unknown error occured trying to get info for pid[%i]\\n"""		5501968	0					
ANR	5502045	Argument	pid		5501968	2					
ANR	5502046	Identifier	pid		5501968	0					
ANR	5502047	BreakStatement	break ;	578:2:15057:15062	5501968	11	True				
ANR	5502048	Label	default :	580:1:15070:15077	5501968	12	True				
ANR	5502049	Identifier	default		5501968	0					
ANR	5502050	ExpressionStatement	"fprintf ( stderr , ""ERROR: Procapi returned an unknown status[%i] for pid[%i]"" , status , pid )"	581:2:15081:15170	5501968	13	True				
ANR	5502051	CallExpression	"fprintf ( stderr , ""ERROR: Procapi returned an unknown status[%i] for pid[%i]"" , status , pid )"		5501968	0					
ANR	5502052	Callee	fprintf		5501968	0					
ANR	5502053	Identifier	fprintf		5501968	0					
ANR	5502054	ArgumentList	stderr		5501968	1					
ANR	5502055	Argument	stderr		5501968	0					
ANR	5502056	Identifier	stderr		5501968	0					
ANR	5502057	Argument	"""ERROR: Procapi returned an unknown status[%i] for pid[%i]"""		5501968	1					
ANR	5502058	PrimaryExpression	"""ERROR: Procapi returned an unknown status[%i] for pid[%i]"""		5501968	0					
ANR	5502059	Argument	status		5501968	2					
ANR	5502060	Identifier	status		5501968	0					
ANR	5502061	Argument	pid		5501968	3					
ANR	5502062	Identifier	pid		5501968	0					
ANR	5502063	ReturnType	void		5501968	1					
ANR	5502064	Identifier	procapi_perror		5501968	2					
ANR	5502065	ParameterList	"int status , int pid , char * error_str"		5501968	3					
ANR	5502066	Parameter	int status	550:15:14238:14247	5501968	0	True				
ANR	5502067	ParameterType	int		5501968	0					
ANR	5502068	Identifier	status		5501968	1					
ANR	5502069	Parameter	int pid	550:27:14250:14256	5501968	1	True				
ANR	5502070	ParameterType	int		5501968	0					
ANR	5502071	Identifier	pid		5501968	1					
ANR	5502072	Parameter	char * error_str	550:36:14259:14273	5501968	2	True				
ANR	5502073	ParameterType	char *		5501968	0					
ANR	5502074	Identifier	error_str		5501968	1					
ANR	5502075	CFGEntryNode	ENTRY		5501968		True				
ANR	5502076	CFGExitNode	EXIT		5501968		True				
ANR	5502077	Symbol	error_str		5501968						
ANR	5502078	Symbol	NULL		5501968						
ANR	5502079	Symbol	pid		5501968						
ANR	5502080	Symbol	stderr		5501968						
ANR	5502081	Symbol	status		5501968						
