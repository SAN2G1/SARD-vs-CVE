command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5352249	File	data/converged/CVE-2011-4930_htcondor/testAnalysis.cpp								
ANR	5352250	DeclStmt									
ANR	5352251	Decl							int	int	numAttrs
ANR	5352252	DeclStmt									
ANR	5352253	Decl							const int	const int	NUM_OPS
ANR	5352254	DeclStmt									
ANR	5352255	Decl							string	string *	attrs
ANR	5352256	DeclStmt									
ANR	5352257	Decl							string	string [ NUM_OPS ]	operators
ANR	5352258	DeclStmt									
ANR	5352259	Decl							void	void ( char * myName )	usage
ANR	5352260	DeclStmt									
ANR	5352261	Decl							bool	bool ( )	generateAttributes
ANR	5352262	DeclStmt									
ANR	5352263	Decl							bool	"bool ( int numAds , int reqLen , int numDiffReqs , ClassAdList & adList )"	generateClassAdList
ANR	5352264	DeclStmt									
ANR	5352265	Decl							bool	"bool ( int reqLen , classad :: ClassAd * & ad )"	generateClassAd
ANR	5352266	Function	main	35:0:1205:5446							
ANR	5352267	FunctionDef	"main (int argc , char * argv [ ])"		5352266	0					
ANR	5352268	CompoundStatement		36:0:1241:5446	5352266	0					
ANR	5352269	IdentifierDeclStatement	int requestReqLen = 0 ;	38:1:1263:1284	5352266	0	True				
ANR	5352270	IdentifierDecl	requestReqLen = 0		5352266	0					
ANR	5352271	IdentifierDeclType	int		5352266	0					
ANR	5352272	Identifier	requestReqLen		5352266	1					
ANR	5352273	AssignmentExpression	requestReqLen = 0		5352266	2		=			
ANR	5352274	Identifier	requestReqLen		5352266	0					
ANR	5352275	PrimaryExpression	0		5352266	1					
ANR	5352276	IdentifierDeclStatement	int offerReqLen = 0 ;	39:1:1287:1306	5352266	1	True				
ANR	5352277	IdentifierDecl	offerReqLen = 0		5352266	0					
ANR	5352278	IdentifierDeclType	int		5352266	0					
ANR	5352279	Identifier	offerReqLen		5352266	1					
ANR	5352280	AssignmentExpression	offerReqLen = 0		5352266	2		=			
ANR	5352281	Identifier	offerReqLen		5352266	0					
ANR	5352282	PrimaryExpression	0		5352266	1					
ANR	5352283	IdentifierDeclStatement	int numOffers = 0 ;	40:1:1309:1326	5352266	2	True				
ANR	5352284	IdentifierDecl	numOffers = 0		5352266	0					
ANR	5352285	IdentifierDeclType	int		5352266	0					
ANR	5352286	Identifier	numOffers		5352266	1					
ANR	5352287	AssignmentExpression	numOffers = 0		5352266	2		=			
ANR	5352288	Identifier	numOffers		5352266	0					
ANR	5352289	PrimaryExpression	0		5352266	1					
ANR	5352290	IdentifierDeclStatement	int numUniqueOfferReqs = 0 ;	41:1:1329:1355	5352266	3	True				
ANR	5352291	IdentifierDecl	numUniqueOfferReqs = 0		5352266	0					
ANR	5352292	IdentifierDeclType	int		5352266	0					
ANR	5352293	Identifier	numUniqueOfferReqs		5352266	1					
ANR	5352294	AssignmentExpression	numUniqueOfferReqs = 0		5352266	2		=			
ANR	5352295	Identifier	numUniqueOfferReqs		5352266	0					
ANR	5352296	PrimaryExpression	0		5352266	1					
ANR	5352297	IdentifierDeclStatement	classad :: ClassAd * request = NULL ;	42:1:1358:1390	5352266	4	True				
ANR	5352298	IdentifierDecl	* request = NULL		5352266	0					
ANR	5352299	IdentifierDeclType	classad :: ClassAd *		5352266	0					
ANR	5352300	Identifier	request		5352266	1					
ANR	5352301	AssignmentExpression	* request = NULL		5352266	2		=			
ANR	5352302	Identifier	NULL		5352266	0					
ANR	5352303	Identifier	NULL		5352266	1					
ANR	5352304	IdentifierDeclStatement	classad :: ClassAd * offer = NULL ;	43:1:1393:1423	5352266	5	True				
ANR	5352305	IdentifierDecl	* offer = NULL		5352266	0					
ANR	5352306	IdentifierDeclType	classad :: ClassAd *		5352266	0					
ANR	5352307	Identifier	offer		5352266	1					
ANR	5352308	AssignmentExpression	* offer = NULL		5352266	2		=			
ANR	5352309	Identifier	NULL		5352266	0					
ANR	5352310	Identifier	NULL		5352266	1					
ANR	5352311	IdentifierDeclStatement	ClassAdList offerList ;	44:1:1426:1447	5352266	6	True				
ANR	5352312	IdentifierDecl	offerList		5352266	0					
ANR	5352313	IdentifierDeclType	ClassAdList		5352266	0					
ANR	5352314	Identifier	offerList		5352266	1					
ANR	5352315	IdentifierDeclStatement	ClassAdAnalyzer analyzer ;	45:1:1450:1474	5352266	7	True				
ANR	5352316	IdentifierDecl	analyzer		5352266	0					
ANR	5352317	IdentifierDeclType	ClassAdAnalyzer		5352266	0					
ANR	5352318	Identifier	analyzer		5352266	1					
ANR	5352319	IdentifierDeclStatement	"string buffer = """" ;"	46:1:1477:1495	5352266	8	True				
ANR	5352320	IdentifierDecl	"buffer = """""		5352266	0					
ANR	5352321	IdentifierDeclType	string		5352266	0					
ANR	5352322	Identifier	buffer		5352266	1					
ANR	5352323	AssignmentExpression	"buffer = """""		5352266	2		=			
ANR	5352324	Identifier	buffer		5352266	0					
ANR	5352325	PrimaryExpression	""""""		5352266	1					
ANR	5352326	Statement	struct	50:1:1541:1546	5352266	9	True				
ANR	5352327	Statement	timeval	50:8:1548:1554	5352266	10	True				
ANR	5352328	Statement	*	50:16:1556:1556	5352266	11	True				
ANR	5352329	Statement	tvStart	50:17:1557:1563	5352266	12	True				
ANR	5352330	Statement	=	50:25:1565:1565	5352266	13	True				
ANR	5352331	Statement	new	50:27:1567:1569	5352266	14	True				
ANR	5352332	ExpressionStatement	timeval	50:31:1571:1578	5352266	15	True				
ANR	5352333	Identifier	timeval		5352266	0					
ANR	5352334	Statement	struct	51:1:1581:1586	5352266	16	True				
ANR	5352335	Statement	timeval	51:8:1588:1594	5352266	17	True				
ANR	5352336	Statement	*	51:16:1596:1596	5352266	18	True				
ANR	5352337	Statement	tvEnd	51:17:1597:1601	5352266	19	True				
ANR	5352338	Statement	=	51:23:1603:1603	5352266	20	True				
ANR	5352339	Statement	new	51:25:1605:1607	5352266	21	True				
ANR	5352340	ExpressionStatement	timeval	51:29:1609:1616	5352266	22	True				
ANR	5352341	Identifier	timeval		5352266	0					
ANR	5352342	IdentifierDeclStatement	struct timezone * tz = NULL ;	52:1:1619:1645	5352266	23	True				
ANR	5352343	IdentifierDecl	* tz = NULL		5352266	0					
ANR	5352344	IdentifierDeclType	struct timezone *		5352266	0					
ANR	5352345	Identifier	tz		5352266	1					
ANR	5352346	AssignmentExpression	* tz = NULL		5352266	2		=			
ANR	5352347	Identifier	NULL		5352266	0					
ANR	5352348	Identifier	NULL		5352266	1					
ANR	5352349	ExpressionStatement	srand ( time ( NULL ) )	54:1:1649:1670	5352266	24	True				
ANR	5352350	CallExpression	srand ( time ( NULL ) )		5352266	0					
ANR	5352351	Callee	srand		5352266	0					
ANR	5352352	Identifier	srand		5352266	0					
ANR	5352353	ArgumentList	time ( NULL )		5352266	1					
ANR	5352354	Argument	time ( NULL )		5352266	0					
ANR	5352355	CallExpression	time ( NULL )		5352266	0					
ANR	5352356	Callee	time		5352266	0					
ANR	5352357	Identifier	time		5352266	0					
ANR	5352358	ArgumentList	NULL		5352266	1					
ANR	5352359	Argument	NULL		5352266	0					
ANR	5352360	Identifier	NULL		5352266	0					
ANR	5352361	IfStatement	if ( argc != 6 && argc != 7 )		5352266	25					
ANR	5352362	Condition	argc != 6 && argc != 7	56:5:1678:1699	5352266	0	True				
ANR	5352363	AndExpression	argc != 6 && argc != 7		5352266	0		&&			
ANR	5352364	EqualityExpression	argc != 6		5352266	0		!=			
ANR	5352365	Identifier	argc		5352266	0					
ANR	5352366	PrimaryExpression	6		5352266	1					
ANR	5352367	EqualityExpression	argc != 7		5352266	1		!=			
ANR	5352368	Identifier	argc		5352266	0					
ANR	5352369	PrimaryExpression	7		5352266	1					
ANR	5352370	CompoundStatement		21:30:461:461	5352266	1					
ANR	5352371	ExpressionStatement	usage ( argv [ 0 ] )	57:2:1707:1723	5352266	0	True				
ANR	5352372	CallExpression	usage ( argv [ 0 ] )		5352266	0					
ANR	5352373	Callee	usage		5352266	0					
ANR	5352374	Identifier	usage		5352266	0					
ANR	5352375	ArgumentList	argv [ 0 ]		5352266	1					
ANR	5352376	Argument	argv [ 0 ]		5352266	0					
ANR	5352377	ArrayIndexing	argv [ 0 ]		5352266	0					
ANR	5352378	Identifier	argv		5352266	0					
ANR	5352379	PrimaryExpression	0		5352266	1					
ANR	5352380	ExpressionStatement	exit ( 1 )	58:2:1727:1736	5352266	1	True				
ANR	5352381	CallExpression	exit ( 1 )		5352266	0					
ANR	5352382	Callee	exit		5352266	0					
ANR	5352383	Identifier	exit		5352266	0					
ANR	5352384	ArgumentList	1		5352266	1					
ANR	5352385	Argument	1		5352266	0					
ANR	5352386	PrimaryExpression	1		5352266	0					
ANR	5352387	ElseStatement	else		5352266	0					
ANR	5352388	CompoundStatement		25:6:505:505	5352266	0					
ANR	5352389	ExpressionStatement	numAttrs = atoi ( argv [ 2 ] )	61:2:1751:1777	5352266	0	True				
ANR	5352390	AssignmentExpression	numAttrs = atoi ( argv [ 2 ] )		5352266	0		=			
ANR	5352391	Identifier	numAttrs		5352266	0					
ANR	5352392	CallExpression	atoi ( argv [ 2 ] )		5352266	1					
ANR	5352393	Callee	atoi		5352266	0					
ANR	5352394	Identifier	atoi		5352266	0					
ANR	5352395	ArgumentList	argv [ 2 ]		5352266	1					
ANR	5352396	Argument	argv [ 2 ]		5352266	0					
ANR	5352397	ArrayIndexing	argv [ 2 ]		5352266	0					
ANR	5352398	Identifier	argv		5352266	0					
ANR	5352399	PrimaryExpression	2		5352266	1					
ANR	5352400	IfStatement	if ( numAttrs <= 0 )		5352266	1					
ANR	5352401	Condition	numAttrs <= 0	62:6:1785:1797	5352266	0	True				
ANR	5352402	RelationalExpression	numAttrs <= 0		5352266	0		<=			
ANR	5352403	Identifier	numAttrs		5352266	0					
ANR	5352404	PrimaryExpression	0		5352266	1					
ANR	5352405	CompoundStatement		27:22:559:559	5352266	1					
ANR	5352406	ExpressionStatement	"cerr << argv [ 0 ] << "": bad value for number of attributes: "" << numAttrs << endl"	63:3:1806:1890	5352266	0	True				
ANR	5352407	ShiftExpression	"cerr << argv [ 0 ] << "": bad value for number of attributes: "" << numAttrs << endl"		5352266	0		<<			
ANR	5352408	Identifier	cerr		5352266	0					
ANR	5352409	ShiftExpression	"argv [ 0 ] << "": bad value for number of attributes: "" << numAttrs << endl"		5352266	1		<<			
ANR	5352410	ArrayIndexing	argv [ 0 ]		5352266	0					
ANR	5352411	Identifier	argv		5352266	0					
ANR	5352412	PrimaryExpression	0		5352266	1					
ANR	5352413	ShiftExpression	""": bad value for number of attributes: "" << numAttrs << endl"		5352266	1		<<			
ANR	5352414	PrimaryExpression	""": bad value for number of attributes: """		5352266	0					
ANR	5352415	ShiftExpression	numAttrs << endl		5352266	1		<<			
ANR	5352416	Identifier	numAttrs		5352266	0					
ANR	5352417	Identifier	endl		5352266	1					
ANR	5352418	ExpressionStatement	exit ( 1 )	65:3:1895:1904	5352266	1	True				
ANR	5352419	CallExpression	exit ( 1 )		5352266	0					
ANR	5352420	Callee	exit		5352266	0					
ANR	5352421	Identifier	exit		5352266	0					
ANR	5352422	ArgumentList	1		5352266	1					
ANR	5352423	Argument	1		5352266	0					
ANR	5352424	PrimaryExpression	1		5352266	0					
ANR	5352425	IfStatement	if ( ! generateAttributes ( ) )		5352266	2					
ANR	5352426	Condition	! generateAttributes ( )	67:6:1916:1937	5352266	0	True				
ANR	5352427	UnaryOperationExpression	! generateAttributes ( )		5352266	0					
ANR	5352428	UnaryOperator	!		5352266	0					
ANR	5352429	CallExpression	generateAttributes ( )		5352266	1					
ANR	5352430	Callee	generateAttributes		5352266	0					
ANR	5352431	Identifier	generateAttributes		5352266	0					
ANR	5352432	ArgumentList			5352266	1					
ANR	5352433	CompoundStatement		32:31:699:699	5352266	1					
ANR	5352434	ExpressionStatement	"cerr << argv [ 0 ] << "": error in generateAttributes( )"" << endl"	68:3:1946:2007	5352266	0	True				
ANR	5352435	ShiftExpression	"cerr << argv [ 0 ] << "": error in generateAttributes( )"" << endl"		5352266	0		<<			
ANR	5352436	Identifier	cerr		5352266	0					
ANR	5352437	ShiftExpression	"argv [ 0 ] << "": error in generateAttributes( )"" << endl"		5352266	1		<<			
ANR	5352438	ArrayIndexing	argv [ 0 ]		5352266	0					
ANR	5352439	Identifier	argv		5352266	0					
ANR	5352440	PrimaryExpression	0		5352266	1					
ANR	5352441	ShiftExpression	""": error in generateAttributes( )"" << endl"		5352266	1		<<			
ANR	5352442	PrimaryExpression	""": error in generateAttributes( )"""		5352266	0					
ANR	5352443	Identifier	endl		5352266	1					
ANR	5352444	ExpressionStatement	exit ( 1 )	69:3:2012:2021	5352266	1	True				
ANR	5352445	CallExpression	exit ( 1 )		5352266	0					
ANR	5352446	Callee	exit		5352266	0					
ANR	5352447	Identifier	exit		5352266	0					
ANR	5352448	ArgumentList	1		5352266	1					
ANR	5352449	Argument	1		5352266	0					
ANR	5352450	PrimaryExpression	1		5352266	0					
ANR	5352451	ExpressionStatement	requestReqLen = atoi ( argv [ 3 ] )	72:2:2030:2061	5352266	3	True				
ANR	5352452	AssignmentExpression	requestReqLen = atoi ( argv [ 3 ] )		5352266	0		=			
ANR	5352453	Identifier	requestReqLen		5352266	0					
ANR	5352454	CallExpression	atoi ( argv [ 3 ] )		5352266	1					
ANR	5352455	Callee	atoi		5352266	0					
ANR	5352456	Identifier	atoi		5352266	0					
ANR	5352457	ArgumentList	argv [ 3 ]		5352266	1					
ANR	5352458	Argument	argv [ 3 ]		5352266	0					
ANR	5352459	ArrayIndexing	argv [ 3 ]		5352266	0					
ANR	5352460	Identifier	argv		5352266	0					
ANR	5352461	PrimaryExpression	3		5352266	1					
ANR	5352462	IfStatement	if ( requestReqLen <= 0 )		5352266	4					
ANR	5352463	Condition	requestReqLen <= 0	73:6:2069:2086	5352266	0	True				
ANR	5352464	RelationalExpression	requestReqLen <= 0		5352266	0		<=			
ANR	5352465	Identifier	requestReqLen		5352266	0					
ANR	5352466	PrimaryExpression	0		5352266	1					
ANR	5352467	CompoundStatement		38:27:848:848	5352266	1					
ANR	5352468	ExpressionStatement	"cerr << argv [ 0 ] << "": bad value for request requirements length: "" << requestReqLen << endl"	74:3:2095:2191	5352266	0	True				
ANR	5352469	ShiftExpression	"cerr << argv [ 0 ] << "": bad value for request requirements length: "" << requestReqLen << endl"		5352266	0		<<			
ANR	5352470	Identifier	cerr		5352266	0					
ANR	5352471	ShiftExpression	"argv [ 0 ] << "": bad value for request requirements length: "" << requestReqLen << endl"		5352266	1		<<			
ANR	5352472	ArrayIndexing	argv [ 0 ]		5352266	0					
ANR	5352473	Identifier	argv		5352266	0					
ANR	5352474	PrimaryExpression	0		5352266	1					
ANR	5352475	ShiftExpression	""": bad value for request requirements length: "" << requestReqLen << endl"		5352266	1		<<			
ANR	5352476	PrimaryExpression	""": bad value for request requirements length: """		5352266	0					
ANR	5352477	ShiftExpression	requestReqLen << endl		5352266	1		<<			
ANR	5352478	Identifier	requestReqLen		5352266	0					
ANR	5352479	Identifier	endl		5352266	1					
ANR	5352480	ExpressionStatement	exit ( 1 )	76:3:2196:2205	5352266	1	True				
ANR	5352481	CallExpression	exit ( 1 )		5352266	0					
ANR	5352482	Callee	exit		5352266	0					
ANR	5352483	Identifier	exit		5352266	0					
ANR	5352484	ArgumentList	1		5352266	1					
ANR	5352485	Argument	1		5352266	0					
ANR	5352486	PrimaryExpression	1		5352266	0					
ANR	5352487	IfStatement	"if ( ! generateClassAd ( requestReqLen , request ) )"		5352266	5					
ANR	5352488	Condition	"! generateClassAd ( requestReqLen , request )"	78:6:2217:2258	5352266	0	True				
ANR	5352489	UnaryOperationExpression	"! generateClassAd ( requestReqLen , request )"		5352266	0					
ANR	5352490	UnaryOperator	!		5352266	0					
ANR	5352491	CallExpression	"generateClassAd ( requestReqLen , request )"		5352266	1					
ANR	5352492	Callee	generateClassAd		5352266	0					
ANR	5352493	Identifier	generateClassAd		5352266	0					
ANR	5352494	ArgumentList	requestReqLen		5352266	1					
ANR	5352495	Argument	requestReqLen		5352266	0					
ANR	5352496	Identifier	requestReqLen		5352266	0					
ANR	5352497	Argument	request		5352266	1					
ANR	5352498	Identifier	request		5352266	0					
ANR	5352499	CompoundStatement		43:51:1020:1020	5352266	1					
ANR	5352500	ExpressionStatement	"cerr << argv [ 0 ] << "": error in generateClassAd( "" << requestReqLen << "", request )"" << endl"	79:3:2267:2363	5352266	0	True				
ANR	5352501	ShiftExpression	"cerr << argv [ 0 ] << "": error in generateClassAd( "" << requestReqLen << "", request )"" << endl"		5352266	0		<<			
ANR	5352502	Identifier	cerr		5352266	0					
ANR	5352503	ShiftExpression	"argv [ 0 ] << "": error in generateClassAd( "" << requestReqLen << "", request )"" << endl"		5352266	1		<<			
ANR	5352504	ArrayIndexing	argv [ 0 ]		5352266	0					
ANR	5352505	Identifier	argv		5352266	0					
ANR	5352506	PrimaryExpression	0		5352266	1					
ANR	5352507	ShiftExpression	""": error in generateClassAd( "" << requestReqLen << "", request )"" << endl"		5352266	1		<<			
ANR	5352508	PrimaryExpression	""": error in generateClassAd( """		5352266	0					
ANR	5352509	ShiftExpression	"requestReqLen << "", request )"" << endl"		5352266	1		<<			
ANR	5352510	Identifier	requestReqLen		5352266	0					
ANR	5352511	ShiftExpression	""", request )"" << endl"		5352266	1		<<			
ANR	5352512	PrimaryExpression	""", request )"""		5352266	0					
ANR	5352513	Identifier	endl		5352266	1					
ANR	5352514	ExpressionStatement	exit ( 1 )	81:3:2368:2377	5352266	1	True				
ANR	5352515	CallExpression	exit ( 1 )		5352266	0					
ANR	5352516	Callee	exit		5352266	0					
ANR	5352517	Identifier	exit		5352266	0					
ANR	5352518	ArgumentList	1		5352266	1					
ANR	5352519	Argument	1		5352266	0					
ANR	5352520	PrimaryExpression	1		5352266	0					
ANR	5352521	ExpressionStatement	offerReqLen = atoi ( argv [ 4 ] )	84:2:2386:2415	5352266	6	True				
ANR	5352522	AssignmentExpression	offerReqLen = atoi ( argv [ 4 ] )		5352266	0		=			
ANR	5352523	Identifier	offerReqLen		5352266	0					
ANR	5352524	CallExpression	atoi ( argv [ 4 ] )		5352266	1					
ANR	5352525	Callee	atoi		5352266	0					
ANR	5352526	Identifier	atoi		5352266	0					
ANR	5352527	ArgumentList	argv [ 4 ]		5352266	1					
ANR	5352528	Argument	argv [ 4 ]		5352266	0					
ANR	5352529	ArrayIndexing	argv [ 4 ]		5352266	0					
ANR	5352530	Identifier	argv		5352266	0					
ANR	5352531	PrimaryExpression	4		5352266	1					
ANR	5352532	IfStatement	if ( offerReqLen <= 0 )		5352266	7					
ANR	5352533	Condition	offerReqLen <= 0	85:6:2423:2438	5352266	0	True				
ANR	5352534	RelationalExpression	offerReqLen <= 0		5352266	0		<=			
ANR	5352535	Identifier	offerReqLen		5352266	0					
ANR	5352536	PrimaryExpression	0		5352266	1					
ANR	5352537	CompoundStatement		50:25:1200:1200	5352266	1					
ANR	5352538	ExpressionStatement	"cerr << argv [ 0 ] << "": bad value for offer requirements length: "" << offerReqLen << endl"	86:3:2447:2539	5352266	0	True				
ANR	5352539	ShiftExpression	"cerr << argv [ 0 ] << "": bad value for offer requirements length: "" << offerReqLen << endl"		5352266	0		<<			
ANR	5352540	Identifier	cerr		5352266	0					
ANR	5352541	ShiftExpression	"argv [ 0 ] << "": bad value for offer requirements length: "" << offerReqLen << endl"		5352266	1		<<			
ANR	5352542	ArrayIndexing	argv [ 0 ]		5352266	0					
ANR	5352543	Identifier	argv		5352266	0					
ANR	5352544	PrimaryExpression	0		5352266	1					
ANR	5352545	ShiftExpression	""": bad value for offer requirements length: "" << offerReqLen << endl"		5352266	1		<<			
ANR	5352546	PrimaryExpression	""": bad value for offer requirements length: """		5352266	0					
ANR	5352547	ShiftExpression	offerReqLen << endl		5352266	1		<<			
ANR	5352548	Identifier	offerReqLen		5352266	0					
ANR	5352549	Identifier	endl		5352266	1					
ANR	5352550	ExpressionStatement	exit ( 1 )	88:3:2544:2553	5352266	1	True				
ANR	5352551	CallExpression	exit ( 1 )		5352266	0					
ANR	5352552	Callee	exit		5352266	0					
ANR	5352553	Identifier	exit		5352266	0					
ANR	5352554	ArgumentList	1		5352266	1					
ANR	5352555	Argument	1		5352266	0					
ANR	5352556	PrimaryExpression	1		5352266	0					
ANR	5352557	IfStatement	"if ( strcmp ( argv [ 1 ] , ""e"" ) == 0 )"		5352266	8					
ANR	5352558	Condition	"strcmp ( argv [ 1 ] , ""e"" ) == 0"	91:6:2566:2592	5352266	0	True				
ANR	5352559	EqualityExpression	"strcmp ( argv [ 1 ] , ""e"" ) == 0"		5352266	0		==			
ANR	5352560	CallExpression	"strcmp ( argv [ 1 ] , ""e"" )"		5352266	0					
ANR	5352561	Callee	strcmp		5352266	0					
ANR	5352562	Identifier	strcmp		5352266	0					
ANR	5352563	ArgumentList	argv [ 1 ]		5352266	1					
ANR	5352564	Argument	argv [ 1 ]		5352266	0					
ANR	5352565	ArrayIndexing	argv [ 1 ]		5352266	0					
ANR	5352566	Identifier	argv		5352266	0					
ANR	5352567	PrimaryExpression	1		5352266	1					
ANR	5352568	Argument	"""e"""		5352266	1					
ANR	5352569	PrimaryExpression	"""e"""		5352266	0					
ANR	5352570	PrimaryExpression	0		5352266	1					
ANR	5352571	CompoundStatement		67:3:1628:1649	5352266	1					
ANR	5352572	IfStatement	if ( argc != 6 )		5352266	0					
ANR	5352573	Condition	argc != 6	92:7:2605:2613	5352266	0	True				
ANR	5352574	EqualityExpression	argc != 6		5352266	0		!=			
ANR	5352575	Identifier	argc		5352266	0					
ANR	5352576	PrimaryExpression	6		5352266	1					
ANR	5352577	CompoundStatement		57:19:1375:1375	5352266	1					
ANR	5352578	ExpressionStatement	usage ( argv [ 0 ] )	93:4:2623:2639	5352266	0	True				
ANR	5352579	CallExpression	usage ( argv [ 0 ] )		5352266	0					
ANR	5352580	Callee	usage		5352266	0					
ANR	5352581	Identifier	usage		5352266	0					
ANR	5352582	ArgumentList	argv [ 0 ]		5352266	1					
ANR	5352583	Argument	argv [ 0 ]		5352266	0					
ANR	5352584	ArrayIndexing	argv [ 0 ]		5352266	0					
ANR	5352585	Identifier	argv		5352266	0					
ANR	5352586	PrimaryExpression	0		5352266	1					
ANR	5352587	ExpressionStatement	exit ( 1 )	94:4:2645:2654	5352266	1	True				
ANR	5352588	CallExpression	exit ( 1 )		5352266	0					
ANR	5352589	Callee	exit		5352266	0					
ANR	5352590	Identifier	exit		5352266	0					
ANR	5352591	ArgumentList	1		5352266	1					
ANR	5352592	Argument	1		5352266	0					
ANR	5352593	PrimaryExpression	1		5352266	0					
ANR	5352594	IfStatement	"if ( ! generateClassAd ( offerReqLen , offer ) )"		5352266	1					
ANR	5352595	Condition	"! generateClassAd ( offerReqLen , offer )"	97:7:2706:2743	5352266	0	True				
ANR	5352596	UnaryOperationExpression	"! generateClassAd ( offerReqLen , offer )"		5352266	0					
ANR	5352597	UnaryOperator	!		5352266	0					
ANR	5352598	CallExpression	"generateClassAd ( offerReqLen , offer )"		5352266	1					
ANR	5352599	Callee	generateClassAd		5352266	0					
ANR	5352600	Identifier	generateClassAd		5352266	0					
ANR	5352601	ArgumentList	offerReqLen		5352266	1					
ANR	5352602	Argument	offerReqLen		5352266	0					
ANR	5352603	Identifier	offerReqLen		5352266	0					
ANR	5352604	Argument	offer		5352266	1					
ANR	5352605	Identifier	offer		5352266	0					
ANR	5352606	CompoundStatement		62:48:1505:1505	5352266	1					
ANR	5352607	ExpressionStatement	"cerr << argv [ 0 ] << "": error in generateClassAd( "" << offerReqLen << "", offer )"" << endl"	98:4:2753:2845	5352266	0	True				
ANR	5352608	ShiftExpression	"cerr << argv [ 0 ] << "": error in generateClassAd( "" << offerReqLen << "", offer )"" << endl"		5352266	0		<<			
ANR	5352609	Identifier	cerr		5352266	0					
ANR	5352610	ShiftExpression	"argv [ 0 ] << "": error in generateClassAd( "" << offerReqLen << "", offer )"" << endl"		5352266	1		<<			
ANR	5352611	ArrayIndexing	argv [ 0 ]		5352266	0					
ANR	5352612	Identifier	argv		5352266	0					
ANR	5352613	PrimaryExpression	0		5352266	1					
ANR	5352614	ShiftExpression	""": error in generateClassAd( "" << offerReqLen << "", offer )"" << endl"		5352266	1		<<			
ANR	5352615	PrimaryExpression	""": error in generateClassAd( """		5352266	0					
ANR	5352616	ShiftExpression	"offerReqLen << "", offer )"" << endl"		5352266	1		<<			
ANR	5352617	Identifier	offerReqLen		5352266	0					
ANR	5352618	ShiftExpression	""", offer )"" << endl"		5352266	1		<<			
ANR	5352619	PrimaryExpression	""", offer )"""		5352266	0					
ANR	5352620	Identifier	endl		5352266	1					
ANR	5352621	ExpressionStatement	exit ( 1 )	100:4:2851:2860	5352266	1	True				
ANR	5352622	CallExpression	exit ( 1 )		5352266	0					
ANR	5352623	Callee	exit		5352266	0					
ANR	5352624	Identifier	exit		5352266	0					
ANR	5352625	ArgumentList	1		5352266	1					
ANR	5352626	Argument	1		5352266	0					
ANR	5352627	PrimaryExpression	1		5352266	0					
ANR	5352628	IdentifierDeclStatement	string attr = argv [ 5 ] ;	102:3:2870:2891	5352266	2	True				
ANR	5352629	IdentifierDecl	attr = argv [ 5 ]		5352266	0					
ANR	5352630	IdentifierDeclType	string		5352266	0					
ANR	5352631	Identifier	attr		5352266	1					
ANR	5352632	AssignmentExpression	attr = argv [ 5 ]		5352266	2		=			
ANR	5352633	Identifier	attr		5352266	0					
ANR	5352634	ArrayIndexing	argv [ 5 ]		5352266	1					
ANR	5352635	Identifier	argv		5352266	0					
ANR	5352636	PrimaryExpression	5		5352266	1					
ANR	5352637	ExpressionStatement	"buffer = """""	112:3:3215:3226	5352266	3	True				
ANR	5352638	AssignmentExpression	"buffer = """""		5352266	0		=			
ANR	5352639	Identifier	buffer		5352266	0					
ANR	5352640	PrimaryExpression	""""""		5352266	1					
ANR	5352641	ExpressionStatement	"gettimeofday ( tvStart , tz )"	113:3:3231:3258	5352266	4	True				
ANR	5352642	CallExpression	"gettimeofday ( tvStart , tz )"		5352266	0					
ANR	5352643	Callee	gettimeofday		5352266	0					
ANR	5352644	Identifier	gettimeofday		5352266	0					
ANR	5352645	ArgumentList	tvStart		5352266	1					
ANR	5352646	Argument	tvStart		5352266	0					
ANR	5352647	Identifier	tvStart		5352266	0					
ANR	5352648	Argument	tz		5352266	1					
ANR	5352649	Identifier	tz		5352266	0					
ANR	5352650	ExpressionStatement	"analyzer . AnalyzeExprToBuffer ( request , offer , attr , buffer )"	114:3:3263:3323	5352266	5	True				
ANR	5352651	CallExpression	"analyzer . AnalyzeExprToBuffer ( request , offer , attr , buffer )"		5352266	0					
ANR	5352652	Callee	analyzer . AnalyzeExprToBuffer		5352266	0					
ANR	5352653	MemberAccess	analyzer . AnalyzeExprToBuffer		5352266	0					
ANR	5352654	Identifier	analyzer		5352266	0					
ANR	5352655	Identifier	AnalyzeExprToBuffer		5352266	1					
ANR	5352656	ArgumentList	request		5352266	1					
ANR	5352657	Argument	request		5352266	0					
ANR	5352658	Identifier	request		5352266	0					
ANR	5352659	Argument	offer		5352266	1					
ANR	5352660	Identifier	offer		5352266	0					
ANR	5352661	Argument	attr		5352266	2					
ANR	5352662	Identifier	attr		5352266	0					
ANR	5352663	Argument	buffer		5352266	3					
ANR	5352664	Identifier	buffer		5352266	0					
ANR	5352665	ExpressionStatement	"gettimeofday ( tvEnd , tz )"	115:3:3328:3353	5352266	6	True				
ANR	5352666	CallExpression	"gettimeofday ( tvEnd , tz )"		5352266	0					
ANR	5352667	Callee	gettimeofday		5352266	0					
ANR	5352668	Identifier	gettimeofday		5352266	0					
ANR	5352669	ArgumentList	tvEnd		5352266	1					
ANR	5352670	Argument	tvEnd		5352266	0					
ANR	5352671	Identifier	tvEnd		5352266	0					
ANR	5352672	Argument	tz		5352266	1					
ANR	5352673	Identifier	tz		5352266	0					
ANR	5352674	ExpressionStatement	cout << ( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl	116:3:3358:3497	5352266	7	True				
ANR	5352675	ShiftExpression	cout << ( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl		5352266	0		<<			
ANR	5352676	Identifier	cout		5352266	0					
ANR	5352677	ShiftExpression	( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl		5352266	1		<<			
ANR	5352678	MultiplicativeExpression	round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100		5352266	0		/			
ANR	5352679	CallExpression	round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 )		5352266	0					
ANR	5352680	Callee	round		5352266	0					
ANR	5352681	Identifier	round		5352266	0					
ANR	5352682	ArgumentList	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		5352266	1					
ANR	5352683	Argument	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		5352266	0					
ANR	5352684	AdditiveExpression	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		5352266	0		+			
ANR	5352685	MultiplicativeExpression	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100		5352266	0		*			
ANR	5352686	AdditiveExpression	tvEnd -> tv_sec - tvStart -> tv_sec		5352266	0		-			
ANR	5352687	PtrMemberAccess	tvEnd -> tv_sec		5352266	0					
ANR	5352688	Identifier	tvEnd		5352266	0					
ANR	5352689	Identifier	tv_sec		5352266	1					
ANR	5352690	PtrMemberAccess	tvStart -> tv_sec		5352266	1					
ANR	5352691	Identifier	tvStart		5352266	0					
ANR	5352692	Identifier	tv_sec		5352266	1					
ANR	5352693	PrimaryExpression	100		5352266	1					
ANR	5352694	MultiplicativeExpression	( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		5352266	1		/			
ANR	5352695	AdditiveExpression	tvEnd -> tv_usec - tvStart -> tv_usec		5352266	0		-			
ANR	5352696	PtrMemberAccess	tvEnd -> tv_usec		5352266	0					
ANR	5352697	Identifier	tvEnd		5352266	0					
ANR	5352698	Identifier	tv_usec		5352266	1					
ANR	5352699	PtrMemberAccess	tvStart -> tv_usec		5352266	1					
ANR	5352700	Identifier	tvStart		5352266	0					
ANR	5352701	Identifier	tv_usec		5352266	1					
ANR	5352702	PrimaryExpression	10000		5352266	1					
ANR	5352703	PrimaryExpression	100		5352266	1					
ANR	5352704	Identifier	endl		5352266	1					
ANR	5352705	ReturnStatement	return 0 ;	120:3:3525:3533	5352266	8	True				
ANR	5352706	PrimaryExpression	0		5352266	0					
ANR	5352707	ElseStatement	else		5352266	0					
ANR	5352708	IfStatement	if ( argc != 7 )		5352266	0					
ANR	5352709	Condition	argc != 7	122:11:3550:3558	5352266	0	True				
ANR	5352710	EqualityExpression	argc != 7		5352266	0		!=			
ANR	5352711	Identifier	argc		5352266	0					
ANR	5352712	PrimaryExpression	7		5352266	1					
ANR	5352713	CompoundStatement		87:23:2320:2320	5352266	1					
ANR	5352714	ExpressionStatement	usage ( argv [ 0 ] )	123:3:3567:3583	5352266	0	True				
ANR	5352715	CallExpression	usage ( argv [ 0 ] )		5352266	0					
ANR	5352716	Callee	usage		5352266	0					
ANR	5352717	Identifier	usage		5352266	0					
ANR	5352718	ArgumentList	argv [ 0 ]		5352266	1					
ANR	5352719	Argument	argv [ 0 ]		5352266	0					
ANR	5352720	ArrayIndexing	argv [ 0 ]		5352266	0					
ANR	5352721	Identifier	argv		5352266	0					
ANR	5352722	PrimaryExpression	0		5352266	1					
ANR	5352723	ExpressionStatement	exit ( 1 )	124:3:3588:3597	5352266	1	True				
ANR	5352724	CallExpression	exit ( 1 )		5352266	0					
ANR	5352725	Callee	exit		5352266	0					
ANR	5352726	Identifier	exit		5352266	0					
ANR	5352727	ArgumentList	1		5352266	1					
ANR	5352728	Argument	1		5352266	0					
ANR	5352729	PrimaryExpression	1		5352266	0					
ANR	5352730	ElseStatement	else		5352266	0					
ANR	5352731	CompoundStatement		91:7:2368:2368	5352266	0					
ANR	5352732	ExpressionStatement	numOffers = atoi ( argv [ 5 ] )	127:3:3615:3642	5352266	0	True				
ANR	5352733	AssignmentExpression	numOffers = atoi ( argv [ 5 ] )		5352266	0		=			
ANR	5352734	Identifier	numOffers		5352266	0					
ANR	5352735	CallExpression	atoi ( argv [ 5 ] )		5352266	1					
ANR	5352736	Callee	atoi		5352266	0					
ANR	5352737	Identifier	atoi		5352266	0					
ANR	5352738	ArgumentList	argv [ 5 ]		5352266	1					
ANR	5352739	Argument	argv [ 5 ]		5352266	0					
ANR	5352740	ArrayIndexing	argv [ 5 ]		5352266	0					
ANR	5352741	Identifier	argv		5352266	0					
ANR	5352742	PrimaryExpression	5		5352266	1					
ANR	5352743	IfStatement	if ( numOffers <= 0 )		5352266	1					
ANR	5352744	Condition	numOffers <= 0	128:7:3651:3664	5352266	0	True				
ANR	5352745	RelationalExpression	numOffers <= 0		5352266	0		<=			
ANR	5352746	Identifier	numOffers		5352266	0					
ANR	5352747	PrimaryExpression	0		5352266	1					
ANR	5352748	CompoundStatement		93:24:2426:2426	5352266	1					
ANR	5352749	ExpressionStatement	"cerr << argv [ 0 ] << "": bad value for number of offers: "" << numOffers << endl"	129:4:3674:3756	5352266	0	True				
ANR	5352750	ShiftExpression	"cerr << argv [ 0 ] << "": bad value for number of offers: "" << numOffers << endl"		5352266	0		<<			
ANR	5352751	Identifier	cerr		5352266	0					
ANR	5352752	ShiftExpression	"argv [ 0 ] << "": bad value for number of offers: "" << numOffers << endl"		5352266	1		<<			
ANR	5352753	ArrayIndexing	argv [ 0 ]		5352266	0					
ANR	5352754	Identifier	argv		5352266	0					
ANR	5352755	PrimaryExpression	0		5352266	1					
ANR	5352756	ShiftExpression	""": bad value for number of offers: "" << numOffers << endl"		5352266	1		<<			
ANR	5352757	PrimaryExpression	""": bad value for number of offers: """		5352266	0					
ANR	5352758	ShiftExpression	numOffers << endl		5352266	1		<<			
ANR	5352759	Identifier	numOffers		5352266	0					
ANR	5352760	Identifier	endl		5352266	1					
ANR	5352761	ExpressionStatement	exit ( 1 )	131:4:3762:3771	5352266	1	True				
ANR	5352762	CallExpression	exit ( 1 )		5352266	0					
ANR	5352763	Callee	exit		5352266	0					
ANR	5352764	Identifier	exit		5352266	0					
ANR	5352765	ArgumentList	1		5352266	1					
ANR	5352766	Argument	1		5352266	0					
ANR	5352767	PrimaryExpression	1		5352266	0					
ANR	5352768	ExpressionStatement	numUniqueOfferReqs = atoi ( argv [ 6 ] )	133:3:3781:3817	5352266	2	True				
ANR	5352769	AssignmentExpression	numUniqueOfferReqs = atoi ( argv [ 6 ] )		5352266	0		=			
ANR	5352770	Identifier	numUniqueOfferReqs		5352266	0					
ANR	5352771	CallExpression	atoi ( argv [ 6 ] )		5352266	1					
ANR	5352772	Callee	atoi		5352266	0					
ANR	5352773	Identifier	atoi		5352266	0					
ANR	5352774	ArgumentList	argv [ 6 ]		5352266	1					
ANR	5352775	Argument	argv [ 6 ]		5352266	0					
ANR	5352776	ArrayIndexing	argv [ 6 ]		5352266	0					
ANR	5352777	Identifier	argv		5352266	0					
ANR	5352778	PrimaryExpression	6		5352266	1					
ANR	5352779	IfStatement	if ( numUniqueOfferReqs <= 0 || numUniqueOfferReqs > numOffers )		5352266	3					
ANR	5352780	Condition	numUniqueOfferReqs <= 0 || numUniqueOfferReqs > numOffers	134:7:3826:3882	5352266	0	True				
ANR	5352781	OrExpression	numUniqueOfferReqs <= 0 || numUniqueOfferReqs > numOffers		5352266	0		||			
ANR	5352782	RelationalExpression	numUniqueOfferReqs <= 0		5352266	0		<=			
ANR	5352783	Identifier	numUniqueOfferReqs		5352266	0					
ANR	5352784	PrimaryExpression	0		5352266	1					
ANR	5352785	RelationalExpression	numUniqueOfferReqs > numOffers		5352266	1		>			
ANR	5352786	Identifier	numUniqueOfferReqs		5352266	0					
ANR	5352787	Identifier	numOffers		5352266	1					
ANR	5352788	CompoundStatement		99:67:2644:2644	5352266	1					
ANR	5352789	ExpressionStatement	"cerr << argv [ 0 ] << "": bad value for number of unique offer requirements: "" << numUniqueOfferReqs << endl"	135:4:3892:4002	5352266	0	True				
ANR	5352790	ShiftExpression	"cerr << argv [ 0 ] << "": bad value for number of unique offer requirements: "" << numUniqueOfferReqs << endl"		5352266	0		<<			
ANR	5352791	Identifier	cerr		5352266	0					
ANR	5352792	ShiftExpression	"argv [ 0 ] << "": bad value for number of unique offer requirements: "" << numUniqueOfferReqs << endl"		5352266	1		<<			
ANR	5352793	ArrayIndexing	argv [ 0 ]		5352266	0					
ANR	5352794	Identifier	argv		5352266	0					
ANR	5352795	PrimaryExpression	0		5352266	1					
ANR	5352796	ShiftExpression	""": bad value for number of unique offer requirements: "" << numUniqueOfferReqs << endl"		5352266	1		<<			
ANR	5352797	PrimaryExpression	""": bad value for number of unique offer requirements: """		5352266	0					
ANR	5352798	ShiftExpression	numUniqueOfferReqs << endl		5352266	1		<<			
ANR	5352799	Identifier	numUniqueOfferReqs		5352266	0					
ANR	5352800	Identifier	endl		5352266	1					
ANR	5352801	ExpressionStatement	exit ( 1 )	137:4:4008:4017	5352266	1	True				
ANR	5352802	CallExpression	exit ( 1 )		5352266	0					
ANR	5352803	Callee	exit		5352266	0					
ANR	5352804	Identifier	exit		5352266	0					
ANR	5352805	ArgumentList	1		5352266	1					
ANR	5352806	Argument	1		5352266	0					
ANR	5352807	PrimaryExpression	1		5352266	0					
ANR	5352808	IfStatement	"if ( ! generateClassAdList ( numOffers , offerReqLen , numUniqueOfferReqs , offerList ) )"		5352266	4					
ANR	5352809	Condition	"! generateClassAdList ( numOffers , offerReqLen , numUniqueOfferReqs , offerList )"	139:8:4032:4121	5352266	0	True				
ANR	5352810	UnaryOperationExpression	"! generateClassAdList ( numOffers , offerReqLen , numUniqueOfferReqs , offerList )"		5352266	0					
ANR	5352811	UnaryOperator	!		5352266	0					
ANR	5352812	CallExpression	"generateClassAdList ( numOffers , offerReqLen , numUniqueOfferReqs , offerList )"		5352266	1					
ANR	5352813	Callee	generateClassAdList		5352266	0					
ANR	5352814	Identifier	generateClassAdList		5352266	0					
ANR	5352815	ArgumentList	numOffers		5352266	1					
ANR	5352816	Argument	numOffers		5352266	0					
ANR	5352817	Identifier	numOffers		5352266	0					
ANR	5352818	Argument	offerReqLen		5352266	1					
ANR	5352819	Identifier	offerReqLen		5352266	0					
ANR	5352820	Argument	numUniqueOfferReqs		5352266	2					
ANR	5352821	Identifier	numUniqueOfferReqs		5352266	0					
ANR	5352822	Argument	offerList		5352266	3					
ANR	5352823	Identifier	offerList		5352266	0					
ANR	5352824	CompoundStatement		105:46:2883:2883	5352266	1					
ANR	5352825	ExpressionStatement	"cerr << argv [ 0 ] << "": error in generateClassAdList( "" << numOffers << "", "" << offerReqLen << "", "" << numUniqueOfferReqs << "", offerList )"" << endl"	141:4:4131:4289	5352266	0	True				
ANR	5352826	ShiftExpression	"cerr << argv [ 0 ] << "": error in generateClassAdList( "" << numOffers << "", "" << offerReqLen << "", "" << numUniqueOfferReqs << "", offerList )"" << endl"		5352266	0		<<			
ANR	5352827	Identifier	cerr		5352266	0					
ANR	5352828	ShiftExpression	"argv [ 0 ] << "": error in generateClassAdList( "" << numOffers << "", "" << offerReqLen << "", "" << numUniqueOfferReqs << "", offerList )"" << endl"		5352266	1		<<			
ANR	5352829	ArrayIndexing	argv [ 0 ]		5352266	0					
ANR	5352830	Identifier	argv		5352266	0					
ANR	5352831	PrimaryExpression	0		5352266	1					
ANR	5352832	ShiftExpression	""": error in generateClassAdList( "" << numOffers << "", "" << offerReqLen << "", "" << numUniqueOfferReqs << "", offerList )"" << endl"		5352266	1		<<			
ANR	5352833	PrimaryExpression	""": error in generateClassAdList( """		5352266	0					
ANR	5352834	ShiftExpression	"numOffers << "", "" << offerReqLen << "", "" << numUniqueOfferReqs << "", offerList )"" << endl"		5352266	1		<<			
ANR	5352835	Identifier	numOffers		5352266	0					
ANR	5352836	ShiftExpression	""", "" << offerReqLen << "", "" << numUniqueOfferReqs << "", offerList )"" << endl"		5352266	1		<<			
ANR	5352837	PrimaryExpression	""", """		5352266	0					
ANR	5352838	ShiftExpression	"offerReqLen << "", "" << numUniqueOfferReqs << "", offerList )"" << endl"		5352266	1		<<			
ANR	5352839	Identifier	offerReqLen		5352266	0					
ANR	5352840	ShiftExpression	""", "" << numUniqueOfferReqs << "", offerList )"" << endl"		5352266	1		<<			
ANR	5352841	PrimaryExpression	""", """		5352266	0					
ANR	5352842	ShiftExpression	"numUniqueOfferReqs << "", offerList )"" << endl"		5352266	1		<<			
ANR	5352843	Identifier	numUniqueOfferReqs		5352266	0					
ANR	5352844	ShiftExpression	""", offerList )"" << endl"		5352266	1		<<			
ANR	5352845	PrimaryExpression	""", offerList )"""		5352266	0					
ANR	5352846	Identifier	endl		5352266	1					
ANR	5352847	ExpressionStatement	exit ( 1 )	144:4:4295:4304	5352266	1	True				
ANR	5352848	CallExpression	exit ( 1 )		5352266	0					
ANR	5352849	Callee	exit		5352266	0					
ANR	5352850	Identifier	exit		5352266	0					
ANR	5352851	ArgumentList	1		5352266	1					
ANR	5352852	Argument	1		5352266	0					
ANR	5352853	PrimaryExpression	1		5352266	0					
ANR	5352854	IfStatement	"if ( strcmp ( argv [ 1 ] , ""jr"" ) == 0 )"		5352266	5					
ANR	5352855	Condition	"strcmp ( argv [ 1 ] , ""jr"" ) == 0"	147:7:4319:4346	5352266	0	True				
ANR	5352856	EqualityExpression	"strcmp ( argv [ 1 ] , ""jr"" ) == 0"		5352266	0		==			
ANR	5352857	CallExpression	"strcmp ( argv [ 1 ] , ""jr"" )"		5352266	0					
ANR	5352858	Callee	strcmp		5352266	0					
ANR	5352859	Identifier	strcmp		5352266	0					
ANR	5352860	ArgumentList	argv [ 1 ]		5352266	1					
ANR	5352861	Argument	argv [ 1 ]		5352266	0					
ANR	5352862	ArrayIndexing	argv [ 1 ]		5352266	0					
ANR	5352863	Identifier	argv		5352266	0					
ANR	5352864	PrimaryExpression	1		5352266	1					
ANR	5352865	Argument	"""jr"""		5352266	1					
ANR	5352866	PrimaryExpression	"""jr"""		5352266	0					
ANR	5352867	PrimaryExpression	0		5352266	1					
ANR	5352868	CompoundStatement		112:38:3108:3108	5352266	1					
ANR	5352869	ExpressionStatement	"buffer = """""	151:4:4478:4489	5352266	0	True				
ANR	5352870	AssignmentExpression	"buffer = """""		5352266	0		=			
ANR	5352871	Identifier	buffer		5352266	0					
ANR	5352872	PrimaryExpression	""""""		5352266	1					
ANR	5352873	ExpressionStatement	"gettimeofday ( tvStart , tz )"	152:4:4495:4522	5352266	1	True				
ANR	5352874	CallExpression	"gettimeofday ( tvStart , tz )"		5352266	0					
ANR	5352875	Callee	gettimeofday		5352266	0					
ANR	5352876	Identifier	gettimeofday		5352266	0					
ANR	5352877	ArgumentList	tvStart		5352266	1					
ANR	5352878	Argument	tvStart		5352266	0					
ANR	5352879	Identifier	tvStart		5352266	0					
ANR	5352880	Argument	tz		5352266	1					
ANR	5352881	Identifier	tz		5352266	0					
ANR	5352882	ExpressionStatement	"analyzer . AnalyzeJobReqToBuffer ( toOldClassAd ( request ) , offerList , buffer )"	153:4:4528:4617	5352266	2	True				
ANR	5352883	CallExpression	"analyzer . AnalyzeJobReqToBuffer ( toOldClassAd ( request ) , offerList , buffer )"		5352266	0					
ANR	5352884	Callee	analyzer . AnalyzeJobReqToBuffer		5352266	0					
ANR	5352885	MemberAccess	analyzer . AnalyzeJobReqToBuffer		5352266	0					
ANR	5352886	Identifier	analyzer		5352266	0					
ANR	5352887	Identifier	AnalyzeJobReqToBuffer		5352266	1					
ANR	5352888	ArgumentList	toOldClassAd ( request )		5352266	1					
ANR	5352889	Argument	toOldClassAd ( request )		5352266	0					
ANR	5352890	CallExpression	toOldClassAd ( request )		5352266	0					
ANR	5352891	Callee	toOldClassAd		5352266	0					
ANR	5352892	Identifier	toOldClassAd		5352266	0					
ANR	5352893	ArgumentList	request		5352266	1					
ANR	5352894	Argument	request		5352266	0					
ANR	5352895	Identifier	request		5352266	0					
ANR	5352896	Argument	offerList		5352266	1					
ANR	5352897	Identifier	offerList		5352266	0					
ANR	5352898	Argument	buffer		5352266	2					
ANR	5352899	Identifier	buffer		5352266	0					
ANR	5352900	ExpressionStatement	"gettimeofday ( tvEnd , tz )"	155:4:4623:4648	5352266	3	True				
ANR	5352901	CallExpression	"gettimeofday ( tvEnd , tz )"		5352266	0					
ANR	5352902	Callee	gettimeofday		5352266	0					
ANR	5352903	Identifier	gettimeofday		5352266	0					
ANR	5352904	ArgumentList	tvEnd		5352266	1					
ANR	5352905	Argument	tvEnd		5352266	0					
ANR	5352906	Identifier	tvEnd		5352266	0					
ANR	5352907	Argument	tz		5352266	1					
ANR	5352908	Identifier	tz		5352266	0					
ANR	5352909	ExpressionStatement	cout << ( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl	156:4:4654:4792	5352266	4	True				
ANR	5352910	ShiftExpression	cout << ( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl		5352266	0		<<			
ANR	5352911	Identifier	cout		5352266	0					
ANR	5352912	ShiftExpression	( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl		5352266	1		<<			
ANR	5352913	MultiplicativeExpression	round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100		5352266	0		/			
ANR	5352914	CallExpression	round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 )		5352266	0					
ANR	5352915	Callee	round		5352266	0					
ANR	5352916	Identifier	round		5352266	0					
ANR	5352917	ArgumentList	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		5352266	1					
ANR	5352918	Argument	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		5352266	0					
ANR	5352919	AdditiveExpression	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		5352266	0		+			
ANR	5352920	MultiplicativeExpression	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100		5352266	0		*			
ANR	5352921	AdditiveExpression	tvEnd -> tv_sec - tvStart -> tv_sec		5352266	0		-			
ANR	5352922	PtrMemberAccess	tvEnd -> tv_sec		5352266	0					
ANR	5352923	Identifier	tvEnd		5352266	0					
ANR	5352924	Identifier	tv_sec		5352266	1					
ANR	5352925	PtrMemberAccess	tvStart -> tv_sec		5352266	1					
ANR	5352926	Identifier	tvStart		5352266	0					
ANR	5352927	Identifier	tv_sec		5352266	1					
ANR	5352928	PrimaryExpression	100		5352266	1					
ANR	5352929	MultiplicativeExpression	( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		5352266	1		/			
ANR	5352930	AdditiveExpression	tvEnd -> tv_usec - tvStart -> tv_usec		5352266	0		-			
ANR	5352931	PtrMemberAccess	tvEnd -> tv_usec		5352266	0					
ANR	5352932	Identifier	tvEnd		5352266	0					
ANR	5352933	Identifier	tv_usec		5352266	1					
ANR	5352934	PtrMemberAccess	tvStart -> tv_usec		5352266	1					
ANR	5352935	Identifier	tvStart		5352266	0					
ANR	5352936	Identifier	tv_usec		5352266	1					
ANR	5352937	PrimaryExpression	10000		5352266	1					
ANR	5352938	PrimaryExpression	100		5352266	1					
ANR	5352939	Identifier	endl		5352266	1					
ANR	5352940	ReturnStatement	return 0 ;	160:4:4822:4830	5352266	5	True				
ANR	5352941	PrimaryExpression	0		5352266	0					
ANR	5352942	ElseStatement	else		5352266	0					
ANR	5352943	IfStatement	"if ( strcmp ( argv [ 1 ] , ""ja"" ) == 0 )"		5352266	0					
ANR	5352944	Condition	"strcmp ( argv [ 1 ] , ""ja"" ) == 0"	162:12:4849:4876	5352266	0	True				
ANR	5352945	EqualityExpression	"strcmp ( argv [ 1 ] , ""ja"" ) == 0"		5352266	0		==			
ANR	5352946	CallExpression	"strcmp ( argv [ 1 ] , ""ja"" )"		5352266	0					
ANR	5352947	Callee	strcmp		5352266	0					
ANR	5352948	Identifier	strcmp		5352266	0					
ANR	5352949	ArgumentList	argv [ 1 ]		5352266	1					
ANR	5352950	Argument	argv [ 1 ]		5352266	0					
ANR	5352951	ArrayIndexing	argv [ 1 ]		5352266	0					
ANR	5352952	Identifier	argv		5352266	0					
ANR	5352953	PrimaryExpression	1		5352266	1					
ANR	5352954	Argument	"""ja"""		5352266	1					
ANR	5352955	PrimaryExpression	"""ja"""		5352266	0					
ANR	5352956	PrimaryExpression	0		5352266	1					
ANR	5352957	CompoundStatement		127:43:3638:3638	5352266	1					
ANR	5352958	ExpressionStatement	"buffer = """""	166:4:5010:5021	5352266	0	True				
ANR	5352959	AssignmentExpression	"buffer = """""		5352266	0		=			
ANR	5352960	Identifier	buffer		5352266	0					
ANR	5352961	PrimaryExpression	""""""		5352266	1					
ANR	5352962	ExpressionStatement	"gettimeofday ( tvStart , tz )"	167:4:5027:5054	5352266	1	True				
ANR	5352963	CallExpression	"gettimeofday ( tvStart , tz )"		5352266	0					
ANR	5352964	Callee	gettimeofday		5352266	0					
ANR	5352965	Identifier	gettimeofday		5352266	0					
ANR	5352966	ArgumentList	tvStart		5352266	1					
ANR	5352967	Argument	tvStart		5352266	0					
ANR	5352968	Identifier	tvStart		5352266	0					
ANR	5352969	Argument	tz		5352266	1					
ANR	5352970	Identifier	tz		5352266	0					
ANR	5352971	ExpressionStatement	"analyzer . AnalyzeJobAttrsToBuffer ( toOldClassAd ( request ) , offerList , buffer )"	168:4:5060:5153	5352266	2	True				
ANR	5352972	CallExpression	"analyzer . AnalyzeJobAttrsToBuffer ( toOldClassAd ( request ) , offerList , buffer )"		5352266	0					
ANR	5352973	Callee	analyzer . AnalyzeJobAttrsToBuffer		5352266	0					
ANR	5352974	MemberAccess	analyzer . AnalyzeJobAttrsToBuffer		5352266	0					
ANR	5352975	Identifier	analyzer		5352266	0					
ANR	5352976	Identifier	AnalyzeJobAttrsToBuffer		5352266	1					
ANR	5352977	ArgumentList	toOldClassAd ( request )		5352266	1					
ANR	5352978	Argument	toOldClassAd ( request )		5352266	0					
ANR	5352979	CallExpression	toOldClassAd ( request )		5352266	0					
ANR	5352980	Callee	toOldClassAd		5352266	0					
ANR	5352981	Identifier	toOldClassAd		5352266	0					
ANR	5352982	ArgumentList	request		5352266	1					
ANR	5352983	Argument	request		5352266	0					
ANR	5352984	Identifier	request		5352266	0					
ANR	5352985	Argument	offerList		5352266	1					
ANR	5352986	Identifier	offerList		5352266	0					
ANR	5352987	Argument	buffer		5352266	2					
ANR	5352988	Identifier	buffer		5352266	0					
ANR	5352989	ExpressionStatement	"gettimeofday ( tvEnd , tz )"	170:4:5159:5184	5352266	3	True				
ANR	5352990	CallExpression	"gettimeofday ( tvEnd , tz )"		5352266	0					
ANR	5352991	Callee	gettimeofday		5352266	0					
ANR	5352992	Identifier	gettimeofday		5352266	0					
ANR	5352993	ArgumentList	tvEnd		5352266	1					
ANR	5352994	Argument	tvEnd		5352266	0					
ANR	5352995	Identifier	tvEnd		5352266	0					
ANR	5352996	Argument	tz		5352266	1					
ANR	5352997	Identifier	tz		5352266	0					
ANR	5352998	ExpressionStatement	cout << ( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl	171:4:5190:5338	5352266	4	True				
ANR	5352999	ShiftExpression	cout << ( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl		5352266	0		<<			
ANR	5353000	Identifier	cout		5352266	0					
ANR	5353001	ShiftExpression	( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl		5352266	1		<<			
ANR	5353002	MultiplicativeExpression	round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100		5352266	0		/			
ANR	5353003	CallExpression	round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 )		5352266	0					
ANR	5353004	Callee	round		5352266	0					
ANR	5353005	Identifier	round		5352266	0					
ANR	5353006	ArgumentList	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		5352266	1					
ANR	5353007	Argument	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		5352266	0					
ANR	5353008	AdditiveExpression	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		5352266	0		+			
ANR	5353009	MultiplicativeExpression	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100		5352266	0		*			
ANR	5353010	AdditiveExpression	tvEnd -> tv_sec - tvStart -> tv_sec		5352266	0		-			
ANR	5353011	PtrMemberAccess	tvEnd -> tv_sec		5352266	0					
ANR	5353012	Identifier	tvEnd		5352266	0					
ANR	5353013	Identifier	tv_sec		5352266	1					
ANR	5353014	PtrMemberAccess	tvStart -> tv_sec		5352266	1					
ANR	5353015	Identifier	tvStart		5352266	0					
ANR	5353016	Identifier	tv_sec		5352266	1					
ANR	5353017	PrimaryExpression	100		5352266	1					
ANR	5353018	MultiplicativeExpression	( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		5352266	1		/			
ANR	5353019	AdditiveExpression	tvEnd -> tv_usec - tvStart -> tv_usec		5352266	0		-			
ANR	5353020	PtrMemberAccess	tvEnd -> tv_usec		5352266	0					
ANR	5353021	Identifier	tvEnd		5352266	0					
ANR	5353022	Identifier	tv_usec		5352266	1					
ANR	5353023	PtrMemberAccess	tvStart -> tv_usec		5352266	1					
ANR	5353024	Identifier	tvStart		5352266	0					
ANR	5353025	Identifier	tv_usec		5352266	1					
ANR	5353026	PrimaryExpression	10000		5352266	1					
ANR	5353027	PrimaryExpression	100		5352266	1					
ANR	5353028	Identifier	endl		5352266	1					
ANR	5353029	ReturnStatement	return 0 ;	176:4:5368:5376	5352266	5	True				
ANR	5353030	PrimaryExpression	0		5352266	0					
ANR	5353031	ElseStatement	else		5352266	0					
ANR	5353032	CompoundStatement		143:8:4153:4153	5352266	0					
ANR	5353033	ExpressionStatement	usage ( argv [ 0 ] )	179:4:5401:5417	5352266	0	True				
ANR	5353034	CallExpression	usage ( argv [ 0 ] )		5352266	0					
ANR	5353035	Callee	usage		5352266	0					
ANR	5353036	Identifier	usage		5352266	0					
ANR	5353037	ArgumentList	argv [ 0 ]		5352266	1					
ANR	5353038	Argument	argv [ 0 ]		5352266	0					
ANR	5353039	ArrayIndexing	argv [ 0 ]		5352266	0					
ANR	5353040	Identifier	argv		5352266	0					
ANR	5353041	PrimaryExpression	0		5352266	1					
ANR	5353042	ExpressionStatement	exit ( 1 )	180:4:5423:5432	5352266	1	True				
ANR	5353043	CallExpression	exit ( 1 )		5352266	0					
ANR	5353044	Callee	exit		5352266	0					
ANR	5353045	Identifier	exit		5352266	0					
ANR	5353046	ArgumentList	1		5352266	1					
ANR	5353047	Argument	1		5352266	0					
ANR	5353048	PrimaryExpression	1		5352266	0					
ANR	5353049	ReturnType	int		5352266	1					
ANR	5353050	Identifier	main		5352266	2					
ANR	5353051	ParameterList	"int argc , char * argv [ ]"		5352266	3					
ANR	5353052	Parameter	int argc	35:11:1216:1223	5352266	0	True				
ANR	5353053	ParameterType	int		5352266	0					
ANR	5353054	Identifier	argc		5352266	1					
ANR	5353055	Parameter	char * argv [ ]	35:21:1226:1237	5352266	1	True				
ANR	5353056	ParameterType	char * [ ]		5352266	0					
ANR	5353057	Identifier	argv		5352266	1					
ANR	5353058	CFGEntryNode	ENTRY		5352266		True				
ANR	5353059	CFGExitNode	EXIT		5352266		True				
ANR	5353060	Symbol	request		5352266						
ANR	5353061	Symbol	tz		5352266						
ANR	5353062	Symbol	generateClassAdList		5352266						
ANR	5353063	Symbol	numOffers		5352266						
ANR	5353064	Symbol	numUniqueOfferReqs		5352266						
ANR	5353065	Symbol	* argv		5352266						
ANR	5353066	Symbol	argv		5352266						
ANR	5353067	Symbol	generateClassAd		5352266						
ANR	5353068	Symbol	offer		5352266						
ANR	5353069	Symbol	analyzer		5352266						
ANR	5353070	Symbol	requestReqLen		5352266						
ANR	5353071	Symbol	buffer		5352266						
ANR	5353072	Symbol	attr		5352266						
ANR	5353073	Symbol	* tvStart		5352266						
ANR	5353074	Symbol	tvStart -> tv_usec		5352266						
ANR	5353075	Symbol	tvStart -> tv_sec		5352266						
ANR	5353076	Symbol	argc		5352266						
ANR	5353077	Symbol	atoi		5352266						
ANR	5353078	Symbol	strcmp		5352266						
ANR	5353079	Symbol	tvEnd		5352266						
ANR	5353080	Symbol	NULL		5352266						
ANR	5353081	Symbol	offerReqLen		5352266						
ANR	5353082	Symbol	toOldClassAd		5352266						
ANR	5353083	Symbol	tvStart		5352266						
ANR	5353084	Symbol	offerList		5352266						
ANR	5353085	Symbol	numAttrs		5352266						
ANR	5353086	Symbol	* tvEnd		5352266						
ANR	5353087	Symbol	tvEnd -> tv_sec		5352266						
ANR	5353088	Symbol	time		5352266						
ANR	5353089	Symbol	generateAttributes		5352266						
ANR	5353090	Symbol	tvEnd -> tv_usec		5352266						
ANR	5353091	Function	usage	186:0:5449:5677							
ANR	5353092	FunctionDef	usage (char * myName)		5353091	0					
ANR	5353093	CompoundStatement		188:0:5477:5677	5353091	0					
ANR	5353094	ExpressionStatement	"printf ( ""Usage:\\n"" )"	189:1:5480:5500	5353091	0	True				
ANR	5353095	CallExpression	"printf ( ""Usage:\\n"" )"		5353091	0					
ANR	5353096	Callee	printf		5353091	0					
ANR	5353097	Identifier	printf		5353091	0					
ANR	5353098	ArgumentList	"""Usage:\\n"""		5353091	1					
ANR	5353099	Argument	"""Usage:\\n"""		5353091	0					
ANR	5353100	PrimaryExpression	"""Usage:\\n"""		5353091	0					
ANR	5353101	ExpressionStatement	"printf ( ""%s jr|ja <#attrs> <request reqLen> <offer reqLen> <#offers> <#unique>\\n"" , myName )"	190:1:5503:5594	5353091	1	True				
ANR	5353102	CallExpression	"printf ( ""%s jr|ja <#attrs> <request reqLen> <offer reqLen> <#offers> <#unique>\\n"" , myName )"		5353091	0					
ANR	5353103	Callee	printf		5353091	0					
ANR	5353104	Identifier	printf		5353091	0					
ANR	5353105	ArgumentList	"""%s jr|ja <#attrs> <request reqLen> <offer reqLen> <#offers> <#unique>\\n"""		5353091	1					
ANR	5353106	Argument	"""%s jr|ja <#attrs> <request reqLen> <offer reqLen> <#offers> <#unique>\\n"""		5353091	0					
ANR	5353107	PrimaryExpression	"""%s jr|ja <#attrs> <request reqLen> <offer reqLen> <#offers> <#unique>\\n"""		5353091	0					
ANR	5353108	Argument	myName		5353091	1					
ANR	5353109	Identifier	myName		5353091	0					
ANR	5353110	ExpressionStatement	"printf ( ""%s e <#attrs> <main Ad reqLen> <context Ad reqLen> <attr>\\n"" , myName )"	191:1:5597:5675	5353091	2	True				
ANR	5353111	CallExpression	"printf ( ""%s e <#attrs> <main Ad reqLen> <context Ad reqLen> <attr>\\n"" , myName )"		5353091	0					
ANR	5353112	Callee	printf		5353091	0					
ANR	5353113	Identifier	printf		5353091	0					
ANR	5353114	ArgumentList	"""%s e <#attrs> <main Ad reqLen> <context Ad reqLen> <attr>\\n"""		5353091	1					
ANR	5353115	Argument	"""%s e <#attrs> <main Ad reqLen> <context Ad reqLen> <attr>\\n"""		5353091	0					
ANR	5353116	PrimaryExpression	"""%s e <#attrs> <main Ad reqLen> <context Ad reqLen> <attr>\\n"""		5353091	0					
ANR	5353117	Argument	myName		5353091	1					
ANR	5353118	Identifier	myName		5353091	0					
ANR	5353119	ReturnType	void		5353091	1					
ANR	5353120	Identifier	usage		5353091	2					
ANR	5353121	ParameterList	char * myName		5353091	3					
ANR	5353122	Parameter	char * myName	187:7:5462:5473	5353091	0	True				
ANR	5353123	ParameterType	char *		5353091	0					
ANR	5353124	Identifier	myName		5353091	1					
ANR	5353125	CFGEntryNode	ENTRY		5353091		True				
ANR	5353126	CFGExitNode	EXIT		5353091		True				
ANR	5353127	Symbol	myName		5353091						
ANR	5353128	Function	generateAttributes	194:0:5680:5916							
ANR	5353129	FunctionDef	generateAttributes ()		5353128	0					
ANR	5353130	CompoundStatement		196:0:5707:5916	5353128	0					
ANR	5353131	IfStatement	if ( numAttrs <= 0 )		5353128	0					
ANR	5353132	Condition	numAttrs <= 0	197:5:5714:5726	5353128	0	True				
ANR	5353133	RelationalExpression	numAttrs <= 0		5353128	0		<=			
ANR	5353134	Identifier	numAttrs		5353128	0					
ANR	5353135	PrimaryExpression	0		5353128	1					
ANR	5353136	CompoundStatement		2:21:22:22	5353128	1					
ANR	5353137	ReturnStatement	return false ;	198:2:5734:5746	5353128	0	True				
ANR	5353138	Identifier	false		5353128	0					
ANR	5353139	ExpressionStatement	attrs = new string [ numAttrs ]	200:1:5752:5780	5353128	1	True				
ANR	5353140	AssignmentExpression	attrs = new string [ numAttrs ]		5353128	0		=			
ANR	5353141	Identifier	attrs		5353128	0					
ANR	5353142	Identifier	numAttrs		5353128	1					
ANR	5353143	IdentifierDeclStatement	char tempAttr [ 32 ] ;	201:1:5783:5800	5353128	2	True				
ANR	5353144	IdentifierDecl	tempAttr [ 32 ]		5353128	0					
ANR	5353145	IdentifierDeclType	char [ 32 ]		5353128	0					
ANR	5353146	Identifier	tempAttr		5353128	1					
ANR	5353147	PrimaryExpression	32		5353128	2					
ANR	5353148	ForStatement	for ( int i = 0 ; i < numAttrs ; i ++ )		5353128	3					
ANR	5353149	ForInit	int i = 0 ;	202:6:5808:5817	5353128	0	True				
ANR	5353150	IdentifierDeclStatement	int i = 0 ;		5353128	0					
ANR	5353151	IdentifierDecl	i = 0		5353128	0					
ANR	5353152	IdentifierDeclType	int		5353128	0					
ANR	5353153	Identifier	i		5353128	1					
ANR	5353154	AssignmentExpression	i = 0		5353128	2		=			
ANR	5353155	Identifier	i		5353128	0					
ANR	5353156	PrimaryExpression	0		5353128	1					
ANR	5353157	Condition	i < numAttrs	202:17:5819:5830	5353128	1	True				
ANR	5353158	RelationalExpression	i < numAttrs		5353128	0		<			
ANR	5353159	Identifier	i		5353128	0					
ANR	5353160	Identifier	numAttrs		5353128	1					
ANR	5353161	PostIncDecOperationExpression	i ++	202:31:5833:5835	5353128	2	True				
ANR	5353162	Identifier	i		5353128	0					
ANR	5353163	IncDec	++		5353128	1					
ANR	5353164	CompoundStatement		7:36:130:130	5353128	3					
ANR	5353165	ExpressionStatement	"sprintf ( tempAttr , ""attr%i"" , i )"	203:2:5842:5874	5353128	0	True				
ANR	5353166	CallExpression	"sprintf ( tempAttr , ""attr%i"" , i )"		5353128	0					
ANR	5353167	Callee	sprintf		5353128	0					
ANR	5353168	Identifier	sprintf		5353128	0					
ANR	5353169	ArgumentList	tempAttr		5353128	1					
ANR	5353170	Argument	tempAttr		5353128	0					
ANR	5353171	Identifier	tempAttr		5353128	0					
ANR	5353172	Argument	"""attr%i"""		5353128	1					
ANR	5353173	PrimaryExpression	"""attr%i"""		5353128	0					
ANR	5353174	Argument	i		5353128	2					
ANR	5353175	Identifier	i		5353128	0					
ANR	5353176	ExpressionStatement	attrs [ i ] = tempAttr	204:2:5878:5897	5353128	1	True				
ANR	5353177	AssignmentExpression	attrs [ i ] = tempAttr		5353128	0		=			
ANR	5353178	ArrayIndexing	attrs [ i ]		5353128	0					
ANR	5353179	Identifier	attrs		5353128	0					
ANR	5353180	Identifier	i		5353128	1					
ANR	5353181	Identifier	tempAttr		5353128	1					
ANR	5353182	ReturnStatement	return true ;	206:1:5903:5914	5353128	4	True				
ANR	5353183	Identifier	true		5353128	0					
ANR	5353184	ReturnType	bool		5353128	1					
ANR	5353185	Identifier	generateAttributes		5353128	2					
ANR	5353186	ParameterList			5353128	3					
ANR	5353187	CFGEntryNode	ENTRY		5353128		True				
ANR	5353188	CFGExitNode	EXIT		5353128		True				
ANR	5353189	Symbol	tempAttr		5353128						
ANR	5353190	Symbol	* attrs		5353128						
ANR	5353191	Symbol	* i		5353128						
ANR	5353192	Symbol	false		5353128						
ANR	5353193	Symbol	true		5353128						
ANR	5353194	Symbol	numAttrs		5353128						
ANR	5353195	Symbol	i		5353128						
ANR	5353196	Symbol	attrs		5353128						
ANR	5353197	Function	generateClassAdList	209:0:5919:6450							
ANR	5353198	FunctionDef	"generateClassAdList (int numAds , int reqLen , int numDiffReqs , ClassAdList & adList)"		5353197	0					
ANR	5353199	CompoundStatement		212:0:6016:6450	5353197	0					
ANR	5353200	IdentifierDeclStatement	classad :: ClassAd * uniqueAds [ numDiffReqs ] ;	213:1:6019:6059	5353197	0	True				
ANR	5353201	IdentifierDecl	* uniqueAds [ numDiffReqs ]		5353197	0					
ANR	5353202	IdentifierDeclType	classad :: ClassAd * [ numDiffReqs ]		5353197	0					
ANR	5353203	Identifier	uniqueAds		5353197	1					
ANR	5353204	Identifier	numDiffReqs		5353197	2					
ANR	5353205	IdentifierDeclStatement	classad :: ClassAd * currentAd = NULL ;	214:1:6062:6096	5353197	1	True				
ANR	5353206	IdentifierDecl	* currentAd = NULL		5353197	0					
ANR	5353207	IdentifierDeclType	classad :: ClassAd *		5353197	0					
ANR	5353208	Identifier	currentAd		5353197	1					
ANR	5353209	AssignmentExpression	* currentAd = NULL		5353197	2		=			
ANR	5353210	Identifier	NULL		5353197	0					
ANR	5353211	Identifier	NULL		5353197	1					
ANR	5353212	ForStatement	for ( int i = 0 ; i < numDiffReqs ; i ++ )		5353197	2					
ANR	5353213	ForInit	int i = 0 ;	215:6:6104:6113	5353197	0	True				
ANR	5353214	IdentifierDeclStatement	int i = 0 ;		5353197	0					
ANR	5353215	IdentifierDecl	i = 0		5353197	0					
ANR	5353216	IdentifierDeclType	int		5353197	0					
ANR	5353217	Identifier	i		5353197	1					
ANR	5353218	AssignmentExpression	i = 0		5353197	2		=			
ANR	5353219	Identifier	i		5353197	0					
ANR	5353220	PrimaryExpression	0		5353197	1					
ANR	5353221	Condition	i < numDiffReqs	215:17:6115:6129	5353197	1	True				
ANR	5353222	RelationalExpression	i < numDiffReqs		5353197	0		<			
ANR	5353223	Identifier	i		5353197	0					
ANR	5353224	Identifier	numDiffReqs		5353197	1					
ANR	5353225	PostIncDecOperationExpression	i ++	215:34:6132:6134	5353197	2	True				
ANR	5353226	Identifier	i		5353197	0					
ANR	5353227	IncDec	++		5353197	1					
ANR	5353228	CompoundStatement		4:40:121:121	5353197	3					
ANR	5353229	ExpressionStatement	uniqueAds [ i ] = NULL	216:2:6142:6161	5353197	0	True				
ANR	5353230	AssignmentExpression	uniqueAds [ i ] = NULL		5353197	0		=			
ANR	5353231	ArrayIndexing	uniqueAds [ i ]		5353197	0					
ANR	5353232	Identifier	uniqueAds		5353197	0					
ANR	5353233	Identifier	i		5353197	1					
ANR	5353234	Identifier	NULL		5353197	1					
ANR	5353235	IfStatement	"if ( ! generateClassAd ( reqLen , uniqueAds [ i ] ) )"		5353197	1					
ANR	5353236	Condition	"! generateClassAd ( reqLen , uniqueAds [ i ] )"	217:6:6169:6208	5353197	0	True				
ANR	5353237	UnaryOperationExpression	"! generateClassAd ( reqLen , uniqueAds [ i ] )"		5353197	0					
ANR	5353238	UnaryOperator	!		5353197	0					
ANR	5353239	CallExpression	"generateClassAd ( reqLen , uniqueAds [ i ] )"		5353197	1					
ANR	5353240	Callee	generateClassAd		5353197	0					
ANR	5353241	Identifier	generateClassAd		5353197	0					
ANR	5353242	ArgumentList	reqLen		5353197	1					
ANR	5353243	Argument	reqLen		5353197	0					
ANR	5353244	Identifier	reqLen		5353197	0					
ANR	5353245	Argument	uniqueAds [ i ]		5353197	1					
ANR	5353246	ArrayIndexing	uniqueAds [ i ]		5353197	0					
ANR	5353247	Identifier	uniqueAds		5353197	0					
ANR	5353248	Identifier	i		5353197	1					
ANR	5353249	CompoundStatement		6:49:195:195	5353197	1					
ANR	5353250	ReturnStatement	return false ;	218:3:6217:6229	5353197	0	True				
ANR	5353251	Identifier	false		5353197	0					
ANR	5353252	ExpressionStatement	adList . Rewind ( )	221:1:6239:6255	5353197	3	True				
ANR	5353253	CallExpression	adList . Rewind ( )		5353197	0					
ANR	5353254	Callee	adList . Rewind		5353197	0					
ANR	5353255	MemberAccess	adList . Rewind		5353197	0					
ANR	5353256	Identifier	adList		5353197	0					
ANR	5353257	Identifier	Rewind		5353197	1					
ANR	5353258	ArgumentList			5353197	1					
ANR	5353259	ForStatement	for ( int i = 0 ; i < numAds ; i ++ )		5353197	4					
ANR	5353260	ForInit	int i = 0 ;	222:6:6263:6272	5353197	0	True				
ANR	5353261	IdentifierDeclStatement	int i = 0 ;		5353197	0					
ANR	5353262	IdentifierDecl	i = 0		5353197	0					
ANR	5353263	IdentifierDeclType	int		5353197	0					
ANR	5353264	Identifier	i		5353197	1					
ANR	5353265	AssignmentExpression	i = 0		5353197	2		=			
ANR	5353266	Identifier	i		5353197	0					
ANR	5353267	PrimaryExpression	0		5353197	1					
ANR	5353268	Condition	i < numAds	222:17:6274:6283	5353197	1	True				
ANR	5353269	RelationalExpression	i < numAds		5353197	0		<			
ANR	5353270	Identifier	i		5353197	0					
ANR	5353271	Identifier	numAds		5353197	1					
ANR	5353272	PostIncDecOperationExpression	i ++	222:29:6286:6288	5353197	2	True				
ANR	5353273	Identifier	i		5353197	0					
ANR	5353274	IncDec	++		5353197	1					
ANR	5353275	CompoundStatement		11:35:275:275	5353197	3					
ANR	5353276	ExpressionStatement	currentAd = ( classad :: ClassAd * ) uniqueAds [ rand ( ) % numDiffReqs ] -> Copy ( )	223:2:6296:6366	5353197	0	True				
ANR	5353277	AssignmentExpression	currentAd = ( classad :: ClassAd * ) uniqueAds [ rand ( ) % numDiffReqs ] -> Copy ( )		5353197	0		=			
ANR	5353278	Identifier	currentAd		5353197	0					
ANR	5353279	CastExpression	( classad :: ClassAd * ) uniqueAds [ rand ( ) % numDiffReqs ] -> Copy ( )		5353197	1					
ANR	5353280	CastTarget	classad :: ClassAd *		5353197	0					
ANR	5353281	CallExpression	uniqueAds [ rand ( ) % numDiffReqs ] -> Copy ( )		5353197	1					
ANR	5353282	Callee	uniqueAds [ rand ( ) % numDiffReqs ] -> Copy		5353197	0					
ANR	5353283	PtrMemberAccess	uniqueAds [ rand ( ) % numDiffReqs ] -> Copy		5353197	0					
ANR	5353284	ArrayIndexing	uniqueAds [ rand ( ) % numDiffReqs ]		5353197	0					
ANR	5353285	Identifier	uniqueAds		5353197	0					
ANR	5353286	MultiplicativeExpression	rand ( ) % numDiffReqs		5353197	1		%			
ANR	5353287	CallExpression	rand ( )		5353197	0					
ANR	5353288	Callee	rand		5353197	0					
ANR	5353289	Identifier	rand		5353197	0					
ANR	5353290	ArgumentList			5353197	1					
ANR	5353291	Identifier	numDiffReqs		5353197	1					
ANR	5353292	Identifier	Copy		5353197	1					
ANR	5353293	ArgumentList			5353197	1					
ANR	5353294	ExpressionStatement	adList . Insert ( toOldClassAd ( currentAd ) )	224:2:6370:6412	5353197	1	True				
ANR	5353295	CallExpression	adList . Insert ( toOldClassAd ( currentAd ) )		5353197	0					
ANR	5353296	Callee	adList . Insert		5353197	0					
ANR	5353297	MemberAccess	adList . Insert		5353197	0					
ANR	5353298	Identifier	adList		5353197	0					
ANR	5353299	Identifier	Insert		5353197	1					
ANR	5353300	ArgumentList	toOldClassAd ( currentAd )		5353197	1					
ANR	5353301	Argument	toOldClassAd ( currentAd )		5353197	0					
ANR	5353302	CallExpression	toOldClassAd ( currentAd )		5353197	0					
ANR	5353303	Callee	toOldClassAd		5353197	0					
ANR	5353304	Identifier	toOldClassAd		5353197	0					
ANR	5353305	ArgumentList	currentAd		5353197	1					
ANR	5353306	Argument	currentAd		5353197	0					
ANR	5353307	Identifier	currentAd		5353197	0					
ANR	5353308	ExpressionStatement	adList . Rewind ( )	226:1:6418:6434	5353197	5	True				
ANR	5353309	CallExpression	adList . Rewind ( )		5353197	0					
ANR	5353310	Callee	adList . Rewind		5353197	0					
ANR	5353311	MemberAccess	adList . Rewind		5353197	0					
ANR	5353312	Identifier	adList		5353197	0					
ANR	5353313	Identifier	Rewind		5353197	1					
ANR	5353314	ArgumentList			5353197	1					
ANR	5353315	ReturnStatement	return true ;	227:1:6437:6448	5353197	6	True				
ANR	5353316	Identifier	true		5353197	0					
ANR	5353317	ReturnType	bool		5353197	1					
ANR	5353318	Identifier	generateClassAdList		5353197	2					
ANR	5353319	ParameterList	"int numAds , int reqLen , int numDiffReqs , ClassAdList & adList"		5353197	3					
ANR	5353320	Parameter	int numAds	210:21:5945:5954	5353197	0	True				
ANR	5353321	ParameterType	int		5353197	0					
ANR	5353322	Identifier	numAds		5353197	1					
ANR	5353323	Parameter	int reqLen	210:33:5957:5966	5353197	1	True				
ANR	5353324	ParameterType	int		5353197	0					
ANR	5353325	Identifier	reqLen		5353197	1					
ANR	5353326	Parameter	int numDiffReqs	210:45:5969:5983	5353197	2	True				
ANR	5353327	ParameterType	int		5353197	0					
ANR	5353328	Identifier	numDiffReqs		5353197	1					
ANR	5353329	Parameter	ClassAdList & adList	211:8:5994:6012	5353197	3	True				
ANR	5353330	ParameterType	ClassAdList &		5353197	0					
ANR	5353331	Identifier	adList		5353197	1					
ANR	5353332	CFGEntryNode	ENTRY		5353197		True				
ANR	5353333	CFGExitNode	EXIT		5353197		True				
ANR	5353334	Symbol	* * numDiffReqs		5353197						
ANR	5353335	Symbol	NULL		5353197						
ANR	5353336	Symbol	* * uniqueAds		5353197						
ANR	5353337	Symbol	uniqueAds [ rand ( ) % numDiffReqs ] -> Copy		5353197						
ANR	5353338	Symbol	false		5353197						
ANR	5353339	Symbol	numDiffReqs		5353197						
ANR	5353340	Symbol	i		5353197						
ANR	5353341	Symbol	adList		5353197						
ANR	5353342	Symbol	* * rand		5353197						
ANR	5353343	Symbol	currentAd		5353197						
ANR	5353344	Symbol	generateClassAd		5353197						
ANR	5353345	Symbol	toOldClassAd		5353197						
ANR	5353346	Symbol	rand		5353197						
ANR	5353347	Symbol	numAds		5353197						
ANR	5353348	Symbol	* i		5353197						
ANR	5353349	Symbol	* uniqueAds		5353197						
ANR	5353350	Symbol	uniqueAds		5353197						
ANR	5353351	Symbol	* numDiffReqs		5353197						
ANR	5353352	Symbol	* rand		5353197						
ANR	5353353	Symbol	true		5353197						
ANR	5353354	Symbol	reqLen		5353197						
ANR	5353355	Function	generateClassAd	230:0:6453:7290							
ANR	5353356	FunctionDef	"generateClassAd (int reqLen , classad :: ClassAd * & ad)"		5353355	0					
ANR	5353357	CompoundStatement		231:0:6511:7290	5353355	0					
ANR	5353358	IfStatement	if ( attrs == NULL || numAttrs <= 0 )		5353355	0					
ANR	5353359	Condition	attrs == NULL || numAttrs <= 0	232:5:6518:6547	5353355	0	True				
ANR	5353360	OrExpression	attrs == NULL || numAttrs <= 0		5353355	0		||			
ANR	5353361	EqualityExpression	attrs == NULL		5353355	0		==			
ANR	5353362	Identifier	attrs		5353355	0					
ANR	5353363	Identifier	NULL		5353355	1					
ANR	5353364	RelationalExpression	numAttrs <= 0		5353355	1		<=			
ANR	5353365	Identifier	numAttrs		5353355	0					
ANR	5353366	PrimaryExpression	0		5353355	1					
ANR	5353367	CompoundStatement		2:37:38:38	5353355	1					
ANR	5353368	ReturnStatement	return false ;	233:2:6554:6566	5353355	0	True				
ANR	5353369	Identifier	false		5353355	0					
ANR	5353370	IdentifierDeclStatement	classad :: ClassAdParser parser ;	235:1:6572:6601	5353355	1	True				
ANR	5353371	IdentifierDecl	parser		5353355	0					
ANR	5353372	IdentifierDeclType	classad :: ClassAdParser		5353355	0					
ANR	5353373	Identifier	parser		5353355	1					
ANR	5353374	IdentifierDeclStatement	"string adString = """" ;"	236:1:6604:6624	5353355	2	True				
ANR	5353375	IdentifierDecl	"adString = """""		5353355	0					
ANR	5353376	IdentifierDeclType	string		5353355	0					
ANR	5353377	Identifier	adString		5353355	1					
ANR	5353378	AssignmentExpression	"adString = """""		5353355	2		=			
ANR	5353379	Identifier	adString		5353355	0					
ANR	5353380	PrimaryExpression	""""""		5353355	1					
ANR	5353381	IdentifierDeclStatement	"string reqString = """" ;"	237:1:6627:6648	5353355	3	True				
ANR	5353382	IdentifierDecl	"reqString = """""		5353355	0					
ANR	5353383	IdentifierDeclType	string		5353355	0					
ANR	5353384	Identifier	reqString		5353355	1					
ANR	5353385	AssignmentExpression	"reqString = """""		5353355	2		=			
ANR	5353386	Identifier	reqString		5353355	0					
ANR	5353387	PrimaryExpression	""""""		5353355	1					
ANR	5353388	IdentifierDeclStatement	char tempString [ 64 ] ;	238:1:6651:6670	5353355	4	True				
ANR	5353389	IdentifierDecl	tempString [ 64 ]		5353355	0					
ANR	5353390	IdentifierDeclType	char [ 64 ]		5353355	0					
ANR	5353391	Identifier	tempString		5353355	1					
ANR	5353392	PrimaryExpression	64		5353355	2					
ANR	5353393	ExpressionStatement	adString += '['	240:1:6674:6689	5353355	5	True				
ANR	5353394	AssignmentExpression	adString += '['		5353355	0		+=			
ANR	5353395	Identifier	adString		5353355	0					
ANR	5353396	PrimaryExpression	'['		5353355	1					
ANR	5353397	ForStatement	for ( int i = 0 ; i < numAttrs ; i ++ )		5353355	6					
ANR	5353398	ForInit	int i = 0 ;	242:6:6698:6707	5353355	0	True				
ANR	5353399	IdentifierDeclStatement	int i = 0 ;		5353355	0					
ANR	5353400	IdentifierDecl	i = 0		5353355	0					
ANR	5353401	IdentifierDeclType	int		5353355	0					
ANR	5353402	Identifier	i		5353355	1					
ANR	5353403	AssignmentExpression	i = 0		5353355	2		=			
ANR	5353404	Identifier	i		5353355	0					
ANR	5353405	PrimaryExpression	0		5353355	1					
ANR	5353406	Condition	i < numAttrs	242:17:6709:6720	5353355	1	True				
ANR	5353407	RelationalExpression	i < numAttrs		5353355	0		<			
ANR	5353408	Identifier	i		5353355	0					
ANR	5353409	Identifier	numAttrs		5353355	1					
ANR	5353410	PostIncDecOperationExpression	i ++	242:31:6723:6725	5353355	2	True				
ANR	5353411	Identifier	i		5353355	0					
ANR	5353412	IncDec	++		5353355	1					
ANR	5353413	CompoundStatement		12:37:217:217	5353355	3					
ANR	5353414	ExpressionStatement	"sprintf ( tempString , ""%s=%i;"" , attrs [ i ] . c_str ( ) , rand ( ) )"	243:2:6733:6792	5353355	0	True				
ANR	5353415	CallExpression	"sprintf ( tempString , ""%s=%i;"" , attrs [ i ] . c_str ( ) , rand ( ) )"		5353355	0					
ANR	5353416	Callee	sprintf		5353355	0					
ANR	5353417	Identifier	sprintf		5353355	0					
ANR	5353418	ArgumentList	tempString		5353355	1					
ANR	5353419	Argument	tempString		5353355	0					
ANR	5353420	Identifier	tempString		5353355	0					
ANR	5353421	Argument	"""%s=%i;"""		5353355	1					
ANR	5353422	PrimaryExpression	"""%s=%i;"""		5353355	0					
ANR	5353423	Argument	attrs [ i ] . c_str ( )		5353355	2					
ANR	5353424	CallExpression	attrs [ i ] . c_str ( )		5353355	0					
ANR	5353425	Callee	attrs [ i ] . c_str		5353355	0					
ANR	5353426	MemberAccess	attrs [ i ] . c_str		5353355	0					
ANR	5353427	ArrayIndexing	attrs [ i ]		5353355	0					
ANR	5353428	Identifier	attrs		5353355	0					
ANR	5353429	Identifier	i		5353355	1					
ANR	5353430	Identifier	c_str		5353355	1					
ANR	5353431	ArgumentList			5353355	1					
ANR	5353432	Argument	rand ( )		5353355	3					
ANR	5353433	CallExpression	rand ( )		5353355	0					
ANR	5353434	Callee	rand		5353355	0					
ANR	5353435	Identifier	rand		5353355	0					
ANR	5353436	ArgumentList			5353355	1					
ANR	5353437	ExpressionStatement	adString += tempString	244:2:6796:6818	5353355	1	True				
ANR	5353438	AssignmentExpression	adString += tempString		5353355	0		+=			
ANR	5353439	Identifier	adString		5353355	0					
ANR	5353440	Identifier	tempString		5353355	1					
ANR	5353441	ForStatement	for ( int i = 0 ; i < reqLen ; i ++ )		5353355	7					
ANR	5353442	ForInit	int i = 0 ;	247:6:6830:6839	5353355	0	True				
ANR	5353443	IdentifierDeclStatement	int i = 0 ;		5353355	0					
ANR	5353444	IdentifierDecl	i = 0		5353355	0					
ANR	5353445	IdentifierDeclType	int		5353355	0					
ANR	5353446	Identifier	i		5353355	1					
ANR	5353447	AssignmentExpression	i = 0		5353355	2		=			
ANR	5353448	Identifier	i		5353355	0					
ANR	5353449	PrimaryExpression	0		5353355	1					
ANR	5353450	Condition	i < reqLen	247:17:6841:6850	5353355	1	True				
ANR	5353451	RelationalExpression	i < reqLen		5353355	0		<			
ANR	5353452	Identifier	i		5353355	0					
ANR	5353453	Identifier	reqLen		5353355	1					
ANR	5353454	PostIncDecOperationExpression	i ++	247:29:6853:6855	5353355	2	True				
ANR	5353455	Identifier	i		5353355	0					
ANR	5353456	IncDec	++		5353355	1					
ANR	5353457	CompoundStatement		17:35:347:347	5353355	3					
ANR	5353458	IfStatement	if ( i > 0 )		5353355	0					
ANR	5353459	Condition	i > 0	248:6:6867:6871	5353355	0	True				
ANR	5353460	RelationalExpression	i > 0		5353355	0		>			
ANR	5353461	Identifier	i		5353355	0					
ANR	5353462	PrimaryExpression	0		5353355	1					
ANR	5353463	CompoundStatement		18:14:363:363	5353355	1					
ANR	5353464	ExpressionStatement	"reqString += ""&&"""	249:3:6880:6897	5353355	0	True				
ANR	5353465	AssignmentExpression	"reqString += ""&&"""		5353355	0		+=			
ANR	5353466	Identifier	reqString		5353355	0					
ANR	5353467	PrimaryExpression	"""&&"""		5353355	1					
ANR	5353468	ExpressionStatement	"sprintf ( tempString , ""(other.%s%s%i)"" , attrs [ rand ( ) % numAttrs ] . c_str ( ) , operators [ rand ( ) % NUM_OPS ] . c_str ( ) , rand ( ) )"	251:2:6905:7038	5353355	1	True				
ANR	5353469	CallExpression	"sprintf ( tempString , ""(other.%s%s%i)"" , attrs [ rand ( ) % numAttrs ] . c_str ( ) , operators [ rand ( ) % NUM_OPS ] . c_str ( ) , rand ( ) )"		5353355	0					
ANR	5353470	Callee	sprintf		5353355	0					
ANR	5353471	Identifier	sprintf		5353355	0					
ANR	5353472	ArgumentList	tempString		5353355	1					
ANR	5353473	Argument	tempString		5353355	0					
ANR	5353474	Identifier	tempString		5353355	0					
ANR	5353475	Argument	"""(other.%s%s%i)"""		5353355	1					
ANR	5353476	PrimaryExpression	"""(other.%s%s%i)"""		5353355	0					
ANR	5353477	Argument	attrs [ rand ( ) % numAttrs ] . c_str ( )		5353355	2					
ANR	5353478	CallExpression	attrs [ rand ( ) % numAttrs ] . c_str ( )		5353355	0					
ANR	5353479	Callee	attrs [ rand ( ) % numAttrs ] . c_str		5353355	0					
ANR	5353480	MemberAccess	attrs [ rand ( ) % numAttrs ] . c_str		5353355	0					
ANR	5353481	ArrayIndexing	attrs [ rand ( ) % numAttrs ]		5353355	0					
ANR	5353482	Identifier	attrs		5353355	0					
ANR	5353483	MultiplicativeExpression	rand ( ) % numAttrs		5353355	1		%			
ANR	5353484	CallExpression	rand ( )		5353355	0					
ANR	5353485	Callee	rand		5353355	0					
ANR	5353486	Identifier	rand		5353355	0					
ANR	5353487	ArgumentList			5353355	1					
ANR	5353488	Identifier	numAttrs		5353355	1					
ANR	5353489	Identifier	c_str		5353355	1					
ANR	5353490	ArgumentList			5353355	1					
ANR	5353491	Argument	operators [ rand ( ) % NUM_OPS ] . c_str ( )		5353355	3					
ANR	5353492	CallExpression	operators [ rand ( ) % NUM_OPS ] . c_str ( )		5353355	0					
ANR	5353493	Callee	operators [ rand ( ) % NUM_OPS ] . c_str		5353355	0					
ANR	5353494	MemberAccess	operators [ rand ( ) % NUM_OPS ] . c_str		5353355	0					
ANR	5353495	ArrayIndexing	operators [ rand ( ) % NUM_OPS ]		5353355	0					
ANR	5353496	Identifier	operators		5353355	0					
ANR	5353497	MultiplicativeExpression	rand ( ) % NUM_OPS		5353355	1		%			
ANR	5353498	CallExpression	rand ( )		5353355	0					
ANR	5353499	Callee	rand		5353355	0					
ANR	5353500	Identifier	rand		5353355	0					
ANR	5353501	ArgumentList			5353355	1					
ANR	5353502	Identifier	NUM_OPS		5353355	1					
ANR	5353503	Identifier	c_str		5353355	1					
ANR	5353504	ArgumentList			5353355	1					
ANR	5353505	Argument	rand ( )		5353355	4					
ANR	5353506	CallExpression	rand ( )		5353355	0					
ANR	5353507	Callee	rand		5353355	0					
ANR	5353508	Identifier	rand		5353355	0					
ANR	5353509	ArgumentList			5353355	1					
ANR	5353510	ExpressionStatement	reqString += tempString	255:2:7042:7065	5353355	2	True				
ANR	5353511	AssignmentExpression	reqString += tempString		5353355	0		+=			
ANR	5353512	Identifier	reqString		5353355	0					
ANR	5353513	Identifier	tempString		5353355	1					
ANR	5353514	ExpressionStatement	adString += ATTR_REQUIREMENTS	257:1:7071:7100	5353355	8	True				
ANR	5353515	AssignmentExpression	adString += ATTR_REQUIREMENTS		5353355	0		+=			
ANR	5353516	Identifier	adString		5353355	0					
ANR	5353517	Identifier	ATTR_REQUIREMENTS		5353355	1					
ANR	5353518	ExpressionStatement	adString += '='	258:1:7103:7118	5353355	9	True				
ANR	5353519	AssignmentExpression	adString += '='		5353355	0		+=			
ANR	5353520	Identifier	adString		5353355	0					
ANR	5353521	PrimaryExpression	'='		5353355	1					
ANR	5353522	ExpressionStatement	adString += reqString	259:1:7121:7142	5353355	10	True				
ANR	5353523	AssignmentExpression	adString += reqString		5353355	0		+=			
ANR	5353524	Identifier	adString		5353355	0					
ANR	5353525	Identifier	reqString		5353355	1					
ANR	5353526	ExpressionStatement	adString += ']'	261:1:7146:7161	5353355	11	True				
ANR	5353527	AssignmentExpression	adString += ']'		5353355	0		+=			
ANR	5353528	Identifier	adString		5353355	0					
ANR	5353529	PrimaryExpression	']'		5353355	1					
ANR	5353530	IfStatement	if ( ! ( ad = parser . ParseClassAd ( adString ) ) )		5353355	12					
ANR	5353531	Condition	! ( ad = parser . ParseClassAd ( adString ) )	262:5:7168:7208	5353355	0	True				
ANR	5353532	UnaryOperationExpression	! ( ad = parser . ParseClassAd ( adString ) )		5353355	0					
ANR	5353533	UnaryOperator	!		5353355	0					
ANR	5353534	AssignmentExpression	ad = parser . ParseClassAd ( adString )		5353355	1		=			
ANR	5353535	Identifier	ad		5353355	0					
ANR	5353536	CallExpression	parser . ParseClassAd ( adString )		5353355	1					
ANR	5353537	Callee	parser . ParseClassAd		5353355	0					
ANR	5353538	MemberAccess	parser . ParseClassAd		5353355	0					
ANR	5353539	Identifier	parser		5353355	0					
ANR	5353540	Identifier	ParseClassAd		5353355	1					
ANR	5353541	ArgumentList	adString		5353355	1					
ANR	5353542	Argument	adString		5353355	0					
ANR	5353543	Identifier	adString		5353355	0					
ANR	5353544	CompoundStatement		32:49:700:700	5353355	1					
ANR	5353545	ExpressionStatement	"cerr << ""ad = "" << adString"	263:2:7216:7243	5353355	0	True				
ANR	5353546	ShiftExpression	"cerr << ""ad = "" << adString"		5353355	0		<<			
ANR	5353547	Identifier	cerr		5353355	0					
ANR	5353548	ShiftExpression	"""ad = "" << adString"		5353355	1		<<			
ANR	5353549	PrimaryExpression	"""ad = """		5353355	0					
ANR	5353550	Identifier	adString		5353355	1					
ANR	5353551	ReturnStatement	return false ;	264:2:7247:7259	5353355	1	True				
ANR	5353552	Identifier	false		5353355	0					
ANR	5353553	ElseStatement	else		5353355	0					
ANR	5353554	CompoundStatement		36:6:758:758	5353355	0					
ANR	5353555	ReturnStatement	return true ;	267:2:7274:7285	5353355	0	True				
ANR	5353556	Identifier	true		5353355	0					
ANR	5353557	ReturnType	bool		5353355	1					
ANR	5353558	Identifier	generateClassAd		5353355	2					
ANR	5353559	ParameterList	"int reqLen , classad :: ClassAd * & ad"		5353355	3					
ANR	5353560	Parameter	int reqLen	230:22:6475:6484	5353355	0	True				
ANR	5353561	ParameterType	int		5353355	0					
ANR	5353562	Identifier	reqLen		5353355	1					
ANR	5353563	Parameter	classad :: ClassAd * & ad	230:34:6487:6507	5353355	1	True				
ANR	5353564	ParameterType	classad :: ClassAd * &		5353355	0					
ANR	5353565	Identifier	ad		5353355	1					
ANR	5353566	CFGEntryNode	ENTRY		5353355		True				
ANR	5353567	CFGExitNode	EXIT		5353355		True				
ANR	5353568	Symbol	* attrs		5353355						
ANR	5353569	Symbol	attrs [ rand ( ) % numAttrs ] . c_str		5353355						
ANR	5353570	Symbol	rand		5353355						
ANR	5353571	Symbol	operators		5353355						
ANR	5353572	Symbol	* operators		5353355						
ANR	5353573	Symbol	attrs [ i ] . c_str		5353355						
ANR	5353574	Symbol	reqLen		5353355						
ANR	5353575	Symbol	tempString		5353355						
ANR	5353576	Symbol	NUM_OPS		5353355						
ANR	5353577	Symbol	ad		5353355						
ANR	5353578	Symbol	NULL		5353355						
ANR	5353579	Symbol	reqString		5353355						
ANR	5353580	Symbol	ATTR_REQUIREMENTS		5353355						
ANR	5353581	Symbol	operators [ rand ( ) % NUM_OPS ] . c_str		5353355						
ANR	5353582	Symbol	false		5353355						
ANR	5353583	Symbol	i		5353355						
ANR	5353584	Symbol	* numAttrs		5353355						
ANR	5353585	Symbol	parser . ParseClassAd		5353355						
ANR	5353586	Symbol	attrs		5353355						
ANR	5353587	Symbol	adString		5353355						
ANR	5353588	Symbol	* i		5353355						
ANR	5353589	Symbol	parser		5353355						
ANR	5353590	Symbol	* rand		5353355						
ANR	5353591	Symbol	* NUM_OPS		5353355						
ANR	5353592	Symbol	true		5353355						
ANR	5353593	Symbol	numAttrs		5353355						
